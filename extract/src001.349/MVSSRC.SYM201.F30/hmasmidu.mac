         TITLE 'HMASMIDU - HMASMP MODID UPDATE ROUTINE'
HMASMIDU CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMIDU  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @09,0                                               0001
@PSTART  LA    @10,4095(,@09)                                      0001
         USING @PSTART,@09                                         0001
         USING @PSTART+4095,@10                                    0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*                                                                  0198
*   /*****************************************************************/
*   /*                                                               */
*   /* BEGIN MODID UPDATE PROCESSING                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0199
*   MAINRC=0;                       /* INITIALIZE RETURN CODE VALUE  */
         SLR   @12,@12                                             0199
         ST    @12,MAINRC                                          0199
*   HMASMMGP=''B;                   /* CLEAR MSG PARM LIST   @Z67SP00*/
*                                                                  0200
         XC    HMASMMGP(48),HMASMMGP                               0200
*   /*****************************************************************/
*   /*                                                               */
*   /* INITAILIZE IOP FOR ACCESS TO CDS OR ACDS ELEMENT ENTRIES      */
*   /*                                                       @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0201
*   IOPPTR=CCAIOPTR;                /* USE IOP FROM CCA              */
         L     @12,CCAIOPTR(,CCAPTR)                               0201
         ST    @12,IOPPTR                                          0201
*   IF CCAAPPLY=ON                  /* APPLY                 @Z67SP00*/
*       ×CCARES=ON                  /* RESTORE               @Z67SP00*/
*     THEN                                                         0202
         TM    CCAAPPLY(CCAPTR),B'01001000'                        0202
         BZ    @RF00202                                            0202
*     IOPDSID=IOPCDS;               /* ... UPDATE CDS        @Z67SP00*/
         MVI   IOPDSID(@12),X'02'                                  0203
*   ELSE                                                           0204
*     IF CCAACCPT=ON                /* ACCEPT                @Z67SP00*/
*       THEN                                                       0204
         B     @RC00202                                            0204
@RF00202 TM    CCAACCPT(CCAPTR),B'00100000'                        0204
         BNO   @RF00204                                            0204
*       IOPDSID=IOPACDS;            /* ... UPDATE ACDS       @Z67SP00*/
         L     @12,IOPPTR                                          0205
         MVI   IOPDSID(@12),X'0C'                                  0205
*     ELSE                                                         0206
*       RETURN CODE(0);             /* ... RETURN TO CALLER  @Z67SP00*/
         B     @RC00204                                            0206
@RF00204 SLR   @15,@15                                             0206
         L     @13,4(,@13)                                         0206
         L     @14,12(,@13)                                        0206
         LM    @00,@12,20(@13)                                     0206
         BR    @14                                                 0206
*                                                                  0207
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS ALL ELEMENTS FOR PTF. ADDRESSES OF ICTMOD ENTRIES ARE */
*   /* IN ICTPTF ENTRY PASSED TO ROUTINE                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0207
*   DO J=1 BY 1 WHILE(MAINRC<STOPPTF/* LOOP IF NOT BAD RETURN CODE   */
*         &ICTIXP(J)^=ICTENDIX);    /* AND MORE ELEMENTS             */
@RC00204 DS    0H                                                  0207
@RC00202 LA    @12,1                                               0207
         ST    @12,J                                               0207
         B     @DE00207                                            0207
@DL00207 DS    0H                                                  0208
*     IF ICTPPTR(1)->ICTPTFS(1)=ICTPTFS(1)/* MOD BELONGS TO SYSMOD 0208
*                                      PASSED                        */
*         &ICTMXUPD(1)=OFF          /* AND NOT EXTRA UPDATE ?        */
*         &ICTMFLG1(1)^='00000000'B /* AND NOT DUMMY ENTRY ?         */
*       THEN                                                       0208
         L     @12,J                                               0208
         SLA   @12,2                                               0208
         L     @08,@PC00001                                        0208
         L     @01,ICTPCHN(,@08)                                   0208
         AL    @01,@CF02006                                        0208
         L     @12,ICTIXP(@12,@01)                                 0208
         L     @01,ICTPPTR(,@12)                                   0208
         CLC   ICTPTFS(7,@01),ICTPTFS(@08)                         0208
         BNE   @RF00208                                            0208
         TM    ICTMXUPD(@12),B'00001000'                           0208
         BNZ   @RF00208                                            0208
         CLI   ICTMFLG1(@12),B'00000000'                           0208
         BE    @RF00208                                            0208
*       DO;                         /* OKAY TO PROCESS               */
*                                                                  0209
*         /***********************************************************/
*         /*                                                         */
*         /* INITALIZE FOR PROCESSING THIS ELEMENT           @Z67SP00*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0210
*         ENTICT@=ADDR(ICTMOD(1));  /* SET ADDR OF MOD ENTRY @Z67SP00*/
         ST    @12,ENTICT@                                         0210
*         CALL ELEMINIT(ENTICT@);   /* INIT ELEM. PROCESS    @Z67SP00*/
         LA    @01,@AL00211                                        0211
         BAL   @14,ELEMINIT                                        0211
*         IF ENTETYPE^=IDUNONE      /* VALID ELEMENT TYPE    @Z67SP00*/
*           THEN                                                   0212
         CLI   ENTETYPE,C'N'                                       0212
         BE    @RF00212                                            0212
*           DO;                                                    0213
*             IF ICTMISEL(1)=ON     /* ELEMENT SELECTED      @Z67SP00*/
*               THEN                                               0214
         L     @12,J                                               0214
         SLA   @12,2                                               0214
         L     @08,@PC00001                                        0214
         L     @08,ICTPCHN(,@08)                                   0214
         LA    @01,0(@12,@08)                                      0214
         AL    @01,@CF02006                                        0214
         L     @01,ICTIXP(,@01)                                    0214
         TM    ICTMISEL(@01),B'10000000'                           0214
         BNO   @RF00214                                            0214
*               DO;                                                0215
*                                                                  0215
*                 /***************************************************/
*                 /*                                                 */
*                 /* BASED ON FUNCTION, CALL APPROPRIATE PROCEDURE   */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0216
*                 IF CCARES=ON      /* RESTORE ?                     */
*                   THEN                                           0216
         TM    CCARES(CCAPTR),B'00001000'                          0216
         BNO   @RF00216                                            0216
*                   CALL IDURSTRE(ICTIXP(J));/* CALL RESTORE       0217
*                                      PROCESSOR                     */
         AL    @08,@CF02006                                        0217
         LA    @12,ICTIXP(@12,@08)                                 0217
         ST    @12,@AL00001                                        0217
         LA    @01,@AL00001                                        0217
         BAL   @14,IDURSTRE                                        0217
*                 ELSE                                             0218
*                   CALL IDUUPDAT(ICTIXP(J));/* CALL APPLY & ACCEPT
*                                      PROCESSOR                     */
         B     @RC00216                                            0218
@RF00216 L     @12,J                                               0218
         SLA   @12,2                                               0218
         L     @08,@PC00001                                        0218
         L     @08,ICTPCHN(,@08)                                   0218
         AL    @08,@CF02006                                        0218
         LA    @12,ICTIXP(@12,@08)                                 0218
         ST    @12,@AL00001                                        0218
         LA    @01,@AL00001                                        0218
         BAL   @14,IDUUPDAT                                        0218
*                 RFY                                              0219
*                   RTNCODE RSTD;                                  0219
@RC00216 DS    0H                                                  0220
*                 MAINRC=MAX(MAINRC,RTNCODE);/* SAVE MAXIMUM RC VALUE*/
         L     @14,MAINRC                                          0220
         CR    @14,RTNCODE                                         0220
         BNL   *+6
         LR    @14,RTNCODE                                         0220
         ST    @14,MAINRC                                          0220
*                 RFY                                              0221
*                   RTNCODE UNRSTD;                                0221
*               END;                                               0222
*           END;                                                   0223
@RF00214 DS    0H                                                  0224
*       END;                        /* END OKAY TO PROCESS ENTRY     */
@RF00212 DS    0H                                                  0225
*   END;                            /* END OF PTF ELEMENT LIST       */
@RF00208 LA    @12,1                                               0225
         AL    @12,J                                               0225
         ST    @12,J                                               0225
@DE00207 L     @12,MAINRC                                          0225
         CH    @12,@CH00112                                        0225
         BNL   @DC00207                                            0225
         L     @12,J                                               0225
         SLA   @12,2                                               0225
         L     @08,@PC00001                                        0225
         L     @08,ICTPCHN(,@08)                                   0225
         AL    @08,@CF02006                                        0225
         L     @12,ICTIXP(@12,@08)                                 0225
         CL    @12,ICTENDIX                                        0225
         BNE   @DL00207                                            0225
@DC00207 DS    0H                                                  0226
*   RETURN CODE(MAINRC);            /* RETURN TO CALLING MODULE      */
         L     @15,MAINRC                                          0226
         L     @13,4(,@13)                                         0226
         L     @14,12(,@13)                                        0226
         LM    @00,@12,20(@13)                                     0226
         BR    @14                                                 0226
*                                                                  0227
*/********************************************************************/
*/*                                                                  */
*/*  IDURSTRE  - RESTORE MODID PROCESSOR                             */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0227
*IDURSTRE:                                                         0227
*   PROC(NPTR);                                                    0227
IDURSTRE STM   @14,@12,@SA00002                                    0227
         MVC   @PC00002(4),0(@01)                                  0227
*   DECLARE                                                        0228
*     NPTR PTR(31);                 /* POINTER TO ICTMOD ENTRY       */
*   DECLARE                                                        0229
*     RSTRERC FIXED(31);            /* PROCEDURE'S RETURN CODE       */
*   RFY                                                            0230
*     ICTMOD BASED(NPTR);           /* ADDRESS MOD ENTRY PASSED      */
*   RFY                                                            0231
*     ICTPTF BASED(ICTPPTR(1));     /* ADDRESS PTF ENTRY ASSOCIATED
*                                      WITH MOD ENTRY PASSED         */
*   RFY                                                            0232
*     ICTENTLS BASED(ICTMICHA(1));  /* ACDS MODID LIST               */
*   RFY                                                            0233
*     ICTMIDLS BASED(ICTMICHN(1));  /* CDS MODID LIST                */
*                                                                  0233
*   /*****************************************************************/
*   /*                                                               */
*   /* BEGIN RESTORE MODID UPDATE PROCESSING                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0234
*   RSTRERC=0;                      /* INITIALIZE PROCEDURE'S RETURN
*                                      CODE                          */
         SLR   @12,@12                                             0234
         ST    @12,RSTRERC                                         0234
*   IF ICTMZAP(1)=ON                /* ZAP BEING RESTORED    @Z67SP00*/
*     THEN                          /*                       @Z67SP00*/
         L     @08,@PC00002                                        0235
         L     @08,NPTR(,@08)                                      0235
         TM    ICTMZAP(@08),B'00100000'                            0235
         BNO   @RF00235                                            0235
*     RETURN CODE(RSTRERC);         /* ... IGNORE IT         @Z67SP00*/
*                                                                  0236
         LR    @15,@12                                             0236
         L     @14,@SA00002                                        0236
         LM    @00,@12,@SA00002+8                                  0236
         BR    @14                                                 0236
*   /*****************************************************************/
*   /*                                                               */
*   /* RESET ANY REGRESSED ELEMENT SUB-ENTRIES (FOR THIS ELEMENT) IN */
*   /* CDS SYSMOD ENTRIES WHICH ARE NO LONGER REGRESSED AS A RESULT  */
*   /* OF THIS RESTORE                                       @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0237
*   IF ICTMIDEL(1)=OFF              /* NOT A DELETED ELEMENT @Z67SP00*/
*     THEN                                                         0237
@RF00235 L     @12,@PC00002                                        0237
         L     @12,NPTR(,@12)                                      0237
         TM    ICTMIDEL(@12),B'01000000'                           0237
         BNZ   @RF00237                                            0237
*     CALL RESTREG;                 /*                       @Z67SP00*/
         BAL   @14,RESTREG                                         0238
*   IF RSTRERC<STOPPTF              /* RETURN CODE OKAY ?            */
*     THEN                                                         0239
@RF00237 L     @12,RSTRERC                                         0239
         CH    @12,@CH00112                                        0239
         BNL   @RF00239                                            0239
*     DO;                           /* OKAY TO CONTINUE RESTORE    0240
*                                      PROCESSING                    */
*                                                                  0240
*       /*************************************************************/
*       /*                                                           */
*       /* ACCESS CDS ELEMENT ENTRY TO UPDATE MODIDS         @Z67SP00*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0241
*       IOPFUNCT=IOPLOC;            /* LOCATE ELEMENT ENTRY  @Z67SP00*/
         L     @12,IOPPTR                                          0241
         MVI   IOPFUNCT(@12),X'03'                                 0241
*       IOPTYPE=ENTTYPE;            /* ENTRY TYPE AS SAVED           */
         MVC   IOPTYPE(1,@12),ENTTYPE                              0242
*       IOPNAME=ICTMNAME(1);        /* ELEMENT NAME                  */
         L     @08,@PC00002                                        0243
         L     @08,NPTR(,@08)                                      0243
         MVC   IOPNAME(8,@12),ICTMNAME(@08)                        0243
*       CALL HMASMIO(HMASMIOP);     /* LOCATE ELEMENT ENTRY ON CDS   */
         ST    @12,@AL00001                                        0244
         L     @15,@CV01721                                        0244
         LA    @01,@AL00001                                        0244
         BALR  @14,@15                                             0244
*       IF IOPRETRN>IOPNOTFD        /* TERMINATING ERROR     @Z67SP00*/
*         THEN                                                     0245
         L     @12,IOPPTR                                          0245
         CLI   IOPRETRN(@12),4                                     0245
         BNH   @RF00245                                            0245
*         RSTRERC=MAX(RSTRERC,IOPRETRN);/* SAVE MAXIMUM RETURN VALUE */
         L     @08,RSTRERC                                         0246
         SLR   @15,@15                                             0246
         IC    @15,IOPRETRN(,@12)                                  0246
         CR    @08,@15                                             0246
         BNL   *+6
         LR    @08,@15                                             0246
         ST    @08,RSTRERC                                         0246
*       IF IOPRETRN=IOPGOOD         /* LOCATE OKAY ?                 */
*         THEN                                                     0247
@RF00245 L     @12,IOPPTR                                          0247
         CLI   IOPRETRN(@12),0                                     0247
         BNE   @RF00247                                            0247
*         DO;                       /* UPDATE MODIDS FOR RESTORE     */
*                                                                  0248
*           /*********************************************************/
*           /*                                                       */
*           /* DELETE MODID AND ALIAS SUB-ENTRIES FROM CDS ELEMENT   */
*           /* ENTRY IOP                                     @Z67SP00*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0249
*           REWRITE=OFF;            /* ENTIRE ENTRY NEED NOT BE    0249
*                                      RE-WRITTEN            @Z67SP00*/
         NI    REWRITE,B'11101111'                                 0249
*           Q=1;                    /* RESET NEW SUBENTRY INDEX      */
         LA    @12,1                                               0250
         ST    @12,Q                                               0250
*           DO P=1 BY 1 WHILE(SENTEND(P)^=IOPEOLST);/* LOOP IF     0251
*                                      SUBENTRY                      */
         ST    @12,P                                               0251
         B     @DE00251                                            0251
@DL00251 DS    0H                                                  0252
*             IF SETYPIND(P)=IOPUMID/* UMID SUBENTRY         @Z67SP00*/
*                 ×SETYPIND(P)=ENTALIAS/* ALIAS SUBENTRY     @Z67SP00*/
*               THEN                                               0252
         L     @12,P                                               0252
         MH    @12,@CH00033                                        0252
         L     @08,SEPTR                                           0252
         BCTR  @08,0                                               0252
         SLR   @15,@15                                             0252
         IC    @15,SETYPIND-8(@12,@08)                             0252
         CH    @15,@CH00818                                        0252
         BE    @RT00252                                            0252
         SLR   @12,@12                                             0252
         IC    @12,ENTALIAS                                        0252
         CR    @15,@12                                             0252
         BNE   @RF00252                                            0252
@RT00252 DS    0H                                                  0253
*               REWRITE=ON;         /* SUB-ENTRY OVERLAID    @Z67SP00*/
         OI    REWRITE,B'00010000'                                 0253
*             ELSE                  /*                       @Z67SP00*/
*               DO;                 /* NOT MODID × ALIAS SUB-ENTRY   */
         B     @RC00252                                            0254
@RF00252 DS    0H                                                  0255
*                 SENTRY(Q)=SENTRY(P);/* MOVE SUBENTRY TO NEW      0255
*                                      POSITION                      */
         L     @12,SEPTR                                           0255
         L     @08,Q                                               0255
         LA    @15,9                                               0255
         LR    @01,@08                                             0255
         MR    @00,@15                                             0255
         ALR   @01,@12                                             0255
         AL    @01,@CF02009                                        0255
         M     @14,P                                               0255
         ALR   @12,@15                                             0255
         AL    @12,@CF02009                                        0255
         MVC   @TS00001(9),SENTRY(@12)                             0255
         MVC   SENTRY(9,@01),@TS00001                              0255
*                 Q=Q+1;            /* INCREMENT NEW SUBENTRY INDEX  */
         AH    @08,@CH00087                                        0256
         ST    @08,Q                                               0256
*               END;                                               0257
*           END;                    /* LOOP THRU ELEMENT SUB-ENTRIES */
@RC00252 LA    @12,1                                               0258
         AL    @12,P                                               0258
         ST    @12,P                                               0258
@DE00251 LA    @12,255                                             0258
         L     @08,SEPTR                                           0258
         LA    @15,9                                               0258
         L     @01,P                                               0258
         MR    @00,@15                                             0258
         AL    @01,@CF02009                                        0258
         SLR   @00,@00                                             0258
         IC    @00,SENTEND(@01,@08)                                0258
         CR    @12,@00                                             0258
         BNE   @DL00251                                            0258
*           SENTEND(Q)=IOPEOLST;    /* SET END OF SUBENTRIES       0259
*                                      INDICATOR IN IOP              */
         M     @14,Q                                               0259
         AL    @08,@CF02009                                        0259
         STC   @12,SENTEND(@15,@08)                                0259
*                                                                  0260
*           /*********************************************************/
*           /*                                                       */
*           /* GET MODIDS FROM THE ACDS MODID LIST AND SET THE FMID, */
*           /* RMID FIELDS AND UMID SUB-ENTRIES IN CDS ELEMENT IOP   */
*           /*                                               @Z67SP00*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0260
*           IOPRMID=' ';            /* CLEAR RMID            @Z67SP00*/
         L     @12,IOPPTR                                          0260
         MVI   IOPRMID+1(@12),C' '                                 0260
         MVC   IOPRMID+2(5,@12),IOPRMID+1(@12)                     0260
         MVI   IOPRMID(@12),C' '                                   0260
*           IOPRMST=''B;            /* CLEAR RMID STATUS     @Z67SP00*/
         MVI   IOPRMST(@12),X'00'                                  0261
*           IOPFMID=' ';            /* CLEAR FMID            @Z67SP00*/
         MVI   IOPFMID+1(@12),C' '                                 0262
         MVC   IOPFMID+2(5,@12),IOPFMID+1(@12)                     0262
         MVI   IOPFMID(@12),C' '                                   0262
*           IOPFMST=''B;            /* CLEAR RMID STATUS     @Z67SP00*/
         MVI   IOPFMST(@12),X'00'                                  0263
*           RFY                                                    0264
*             ICTMIDLS BASED(ICTMICHA(1));/* ADDRESS ACDS MODID LIST */
*           IF ICTMIDEL(1)=OFF      /* NOT A DELETED ELEMENT @Z67SP00*/
*             THEN                                                 0265
         L     @12,@PC00002                                        0265
         L     @12,NPTR(,@12)                                      0265
         TM    ICTMIDEL(@12),B'01000000'                           0265
         BNZ   @RF00265                                            0265
*             DO;                                                  0266
*                                                                  0266
*               /*****************************************************/
*               /*                                                   */
*               /* GO THRU ICT ENTRY ACDS MODID LIST         @Z67SP00*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0267
*               DO N=1 BY 1 WHILE(ICTMIDND(N)^=ICTENDIX);          0267
         LA    @12,1                                               0267
         ST    @12,N                                               0267
         B     @DE00267                                            0267
@DL00267 DS    0H                                                  0268
*                 IF ICTMIDTY(N)=ICTMIDUP/* UMID?                    */
*                   THEN                                           0268
         L     @12,N                                               0268
         SLA   @12,3                                               0268
         L     @08,@PC00002                                        0268
         L     @08,NPTR(,@08)                                      0268
         L     @08,ICTMICHA(,@08)                                  0268
         ST    @12,@TF00001                                        0268
         ALR   @12,@08                                             0268
         BCTR  @12,0                                               0268
         TM    ICTMIDTY-7(@12),B'00000011'                         0268
         BNZ   @RF00268                                            0268
*                   DO;                                            0269
*                                                                  0269
*                     /***********************************************/
*                     /*                                             */
*                     /* SET UMID IN CDS ENTRY IOP           @Z67SP00*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0270
*                     VLPFUNCT=VLPADD;/* ADD ...             @Z67SP00*/
         MVI   VLPFUNCT,X'01'                                      0270
*                     VLPTYPE=IOPUMID;/* UMID SUBENTRY ...   @Z67SP00*/
         MVI   VLPTYPE,X'32'                                       0271
*                     VLPLPTR=ADDR(IOPPNTRY(1));/* TO ELEMENT IOP  0272
*                                                            @Z67SP00*/
         L     @12,IOPPTR                                          0272
         LA    @12,IOPPNTRY(,@12)                                  0272
         ST    @12,VLPLPTR                                         0272
*                     VLPDATA=ICTMODID(N);/* UMID SYSMOD ID  @Z67SP00*/
         MVI   VLPDATA+7,C' '                                      0273
         AL    @08,@TF00001                                        0273
         AL    @08,@CF02010                                        0273
         MVC   VLPDATA(7),ICTMODID(@08)                            0273
*                     VLPDATA(8)=''B;/*                      @Z67SP00*/
         MVI   VLPDATA+7,X'00'                                     0274
*                     VLPDLEN=LENGTH(IOPMACID);/* KEY LENGTH @Z67SP00*/
         MVI   VLPDLEN,X'07'                                       0275
*                     VLPSTYPE=TXTUMID;/* SUB-ENTRY NAME     @Z67SP00*/
         MVC   VLPSTYPE(16),@CC01747                               0276
*                     CALL HMASMVLU(HMASMVLP);/*             @Z67SP00*/
         L     @15,@CV01722                                        0277
         LA    @01,@AL00277                                        0277
         BALR  @14,@15                                             0277
*                     IF VLPRETRN>=VLPPEEXC/* PEMAX EXCEEDED @Z67SP00*/
*                       THEN                                       0278
         CLI   VLPRETRN,8                                          0278
         BL    @RF00278                                            0278
*                       RSTRERC=MAX(RSTRERC,VLPRETRN);/*     @Z67SP00*/
         L     @12,RSTRERC                                         0279
         SLR   @08,@08                                             0279
         IC    @08,VLPRETRN                                        0279
         CR    @12,@08                                             0279
         BNL   *+6
         LR    @12,@08                                             0279
         ST    @12,RSTRERC                                         0279
*                     REWRITE=ON;   /* UMID ADDED MEMBER MUST BE   0280
*                                      WRITTEN               @Z67SP00*/
@RF00278 OI    REWRITE,B'00010000'                                 0280
*                   END;            /* ADD UMID TO VARIABLE LIST     */
*                 IF ICTMIDTY(N)=ICTMIDRM THEN                     0282
@RF00268 L     @12,N                                               0282
         SLA   @12,3                                               0282
         L     @08,@PC00002                                        0282
         L     @08,NPTR(,@08)                                      0282
         L     @08,ICTMICHA(,@08)                                  0282
         ST    @12,@TF00001                                        0282
         ALR   @12,@08                                             0282
         BCTR  @12,0                                               0282
         TM    ICTMIDTY-7(@12),B'00000001'                         0282
         BNO   @RF00282                                            0282
         TM    ICTMIDTY-7(@12),B'00000010'                         0282
         BNZ   @RF00282                                            0282
*                   DO;                                            0283
*                                                                  0283
*                     /***********************************************/
*                     /*                                             */
*                     /* SET RMID IN CDS ENTRY IOP           @Z67SP00*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0284
*                     IOPRMID=ICTMODID(N);/* SET RMID                */
         L     @12,IOPPTR                                          0284
         LR    @01,@08                                             0284
         AL    @01,@TF00001                                        0284
         AL    @01,@CF02010                                        0284
         MVC   IOPRMID(7,@12),ICTMODID(@01)                        0284
*                     IF ICTMIDAM(N)=ON/* RMID IS RESULT OF ASSEM    */
*                       THEN                                       0285
         AL    @08,@TF00001                                        0285
         BCTR  @08,0                                               0285
         TM    ICTMIDAM-7(@08),B'00000100'                         0285
         BNO   @RF00285                                            0285
*                       IOPRMASM=ON;/* "RMID IS RESULT OF ASSEM"     */
         OI    IOPRMASM(@12),B'01000000'                           0286
*                   END;                                           0287
@RF00285 DS    0H                                                  0288
*                 IF ICTMIDTY(N)=ICTMIDFM/* FMID             @Z67SP00*/
*                   THEN                                           0288
*                                                                  0288
@RF00282 L     @12,N                                               0288
         SLA   @12,3                                               0288
         L     @08,@PC00002                                        0288
         L     @08,NPTR(,@08)                                      0288
         L     @08,ICTMICHA(,@08)                                  0288
         ST    @12,@TF00001                                        0288
         ALR   @12,@08                                             0288
         BCTR  @12,0                                               0288
         TM    ICTMIDTY-7(@12),B'00000010'                         0288
         BNO   @RF00288                                            0288
         TM    ICTMIDTY-7(@12),B'00000001'                         0288
         BNZ   @RF00288                                            0288
*                   /*************************************************/
*                   /*                                               */
*                   /* SET FMID IN CDS ENTRY IOP             @Z67SP00*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  0289
*                   IOPFMID=ICTMODID(N);/* SET FMID          @Z67SP00*/
         L     @12,IOPPTR                                          0289
         AL    @08,@TF00001                                        0289
         AL    @08,@CF02010                                        0289
         MVC   IOPFMID(7,@12),ICTMODID(@08)                        0289
*               END;                /* ACDS MODID LIST LOOP          */
@RF00288 LA    @12,1                                               0290
         AL    @12,N                                               0290
         ST    @12,N                                               0290
@DE00267 L     @12,N                                               0290
         SLA   @12,3                                               0290
         L     @08,@PC00002                                        0290
         L     @08,NPTR(,@08)                                      0290
         L     @08,ICTMICHA(,@08)                                  0290
         AL    @08,@CF02010                                        0290
         L     @12,ICTMIDND(@12,@08)                               0290
         CL    @12,ICTENDIX                                        0290
         BNE   @DL00267                                            0290
*             END;                  /* NON DELETED ELEMENT   @Z67SP00*/
*                                                                  0291
*           /*********************************************************/
*           /*                                                       */
*           /* CREATE NEW ALIAS SUB-ENTRIES FROM THE ICT ALIAS LIST  */
*           /*                                               @Z67SP00*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0292
*           IF ICTMIDEL(1)=OFF      /* NON DELETED ELEMENT   @Z67SP00*/
*             THEN                                                 0292
@RF00265 L     @12,@PC00002                                        0292
         L     @12,NPTR(,@12)                                      0292
         TM    ICTMIDEL(@12),B'01000000'                           0292
         BNZ   @RF00292                                            0292
*             DO;                                                  0293
*               CALL REPALIAS(HMASMIOP,/* ELEMENT IOP        @Z67SP00*/
*                   PROCRC);        /* RETURN CODE           @Z67SP00*/
         L     @12,IOPPTR                                          0294
         ST    @12,@AL00001                                        0294
         LA    @12,PROCRC                                          0294
         ST    @12,@AL00001+4                                      0294
         LA    @01,@AL00001                                        0294
         BAL   @14,REPALIAS                                        0294
*               RSTRERC=MAX(RSTRERC,PROCRC);/* SAVE R.C.     @Z67SP00*/
         L     @12,RSTRERC                                         0295
         L     @08,PROCRC                                          0295
         CR    @12,@08                                             0295
         BNL   *+6
         LR    @12,@08                                             0295
         ST    @12,RSTRERC                                         0295
*             END;                  /*                       @Z67SP00*/
*                                                                  0296
*           /*********************************************************/
*           /*                                                       */
*           /* REPLACE ELEMENT ENTRY ON CDS                          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0297
*           IF REWRITE=OFF          /* ELEM IOP UNCHANGED    @Z67SP00*/
*             THEN                                                 0297
@RF00292 TM    REWRITE,B'00010000'                                 0297
         BNZ   @RF00297                                            0297
*             IOPFUNCT=IOPUDEO;     /* THEN UPDATE DIRECTORY ENTRY 0298
*                                      ONLY                          */
         L     @12,IOPPTR                                          0298
         MVI   IOPFUNCT(@12),X'56'                                 0298
*           ELSE                                                   0299
*             IOPFUNCT=IOPSTOWR;    /* ELSE STOW ENTIRE ENTRY        */
         B     @RC00297                                            0299
@RF00297 L     @12,IOPPTR                                          0299
         MVI   IOPFUNCT(@12),X'54'                                 0299
*           CALL HMASMIO(HMASMIOP); /* STORE ELEMENT ENTRY WITH    0300
*                                      MODIDS                        */
@RC00297 L     @12,IOPPTR                                          0300
         ST    @12,@AL00001                                        0300
         L     @15,@CV01721                                        0300
         LA    @01,@AL00001                                        0300
         BALR  @14,@15                                             0300
*           RSTRERC=MAX(RSTRERC,IOPRETRN);/* SAVE MAXIMUM RETURN   0301
*                                      VALUE                         */
         L     @12,RSTRERC                                         0301
         L     @08,IOPPTR                                          0301
         SLR   @15,@15                                             0301
         IC    @15,IOPRETRN(,@08)                                  0301
         CR    @12,@15                                             0301
         BNL   *+6
         LR    @12,@15                                             0301
         ST    @12,RSTRERC                                         0301
*         END;                      /* UPDATE MODIDS FOR RESTORE     */
*     END;                          /* OKAY TO CONTINUE RESTORE    0303
*                                      PROCESSING                    */
@RF00247 DS    0H                                                  0304
*   RETURN CODE(RSTRERC);           /* RETURN TO CALLER WITH RETRUN
*                                      CODE                          */
@RF00239 L     @15,RSTRERC                                         0304
         L     @14,@SA00002                                        0304
         LM    @00,@12,@SA00002+8                                  0304
         BR    @14                                                 0304
*   END IDURSTRE;                   /* END OF PROCEDURE              */
*                                                                  0306
*/********************************************************************/
*/*                                                                  */
*/*  IDUUPDAT  - APPLY AND ACCEPT MODID UPDATE PROCESSOR             */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0306
*IDUUPDAT:                                                         0306
*   PROC(MPTR);                                                    0306
IDUUPDAT STM   @14,@12,@SA00003                                    0306
         MVC   @PC00003(4),0(@01)                                  0306
*   DECLARE                                                        0307
*     MPTR PTR(31);                 /* POINTER TO ICTMOD ENTRY     0307
*                                      REPRESENTING A SELECTED     0307
*                                      ELEMENT                       */
*   DECLARE                                                        0308
*     LPTR PTR(31);                 /* MODID LIST PTR                */
*   DECLARE                                                        0309
*     UPDATRC FIXED(31);            /* PROCEDURE'S RETURN CODE       */
*   RFY                                                            0310
*     ICTMOD BASED(MPTR);           /* ADDRESS MOD SECT ENTRY PASSED */
*   RFY                                                            0311
*     ICTPTF BASED(ICTPPTR(1));     /* ADDRESS PTF SECT ENTRY      0311
*                                      REPRESENTING SYSMOD WHICH   0311
*                                      SUPPLIED THE ELEMENT          */
*   RFY                                                            0312
*     ICTMIDLS BASED(LPTR);         /* ADDRESS THE (A)CDS MODID LIST
*                                      FOR ELEMENT PASSED            */
*                                                                  0312
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ELEMENT PASSED IS DELETED, RETURN IMMEDIATELY      @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0313
*   IF ICTMIDEL(1)=ON               /* DELETED ELEMENT       @Z67SP00*/
*     THEN                                                         0313
         L     @12,@PC00003                                        0313
         L     @12,MPTR(,@12)                                      0313
         TM    ICTMIDEL(@12),B'01000000'                           0313
         BNO   @RF00313                                            0313
*     RETURN CODE(0);               /* RETURN TO CALLER      @Z67SP00*/
*                                                                  0314
         SLR   @15,@15                                             0314
         L     @14,@SA00003                                        0314
         LM    @00,@12,@SA00003+8                                  0314
         BR    @14                                                 0314
*   /*****************************************************************/
*   /*                                                               */
*   /* BEGIN APPLY AND ACCEPT MODID UPDATE PROCESSING                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0315
*   UPDATRC=0;                      /* INITIALIZE PROCEDURE'S RETURN
*                                      CODE                          */
@RF00313 SLR   @12,@12                                             0315
         ST    @12,UPDATRC                                         0315
*   LPTR=ICTMICHN(1);               /* SET TO ADDRESS OF MODID LIST
*                                                            @Z67SP00*/
*                                                                  0316
         L     @12,@PC00003                                        0316
         L     @08,MPTR(,@12)                                      0316
         MVC   LPTR(4),ICTMICHN(@08)                               0316
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR REGRESSIONS AMONG SYSMODS IN THE ICT        @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0317
*   CALL REGICTCK(MPTR);            /* CHECK ICT REGRESSIONS @Z67SP00*/
         ST    @12,@AL00001                                        0317
         LA    @01,@AL00001                                        0317
         BAL   @14,REGICTCK                                        0317
*   IF ICTMMIDU(1)=OFF              /* (A)CDS NOT ALREADY UPDATED  0318
*                                      WITH THIS ELEM'S SYSMOD #   0318
*                                                            @Z67SP00*/
*     THEN                                                         0318
         L     @12,@PC00003                                        0318
         L     @12,MPTR(,@12)                                      0318
         TM    ICTMMIDU(@12),B'00000100'                           0318
         BNZ   @RF00318                                            0318
*     DO;                           /*                       @Z67SP00*/
*                                                                  0319
*       /*************************************************************/
*       /*                                                           */
*       /* GO THRU THE MODIDS IN THE (A)CDS MODID LIST ... FOR EACH  */
*       /* NOT-PRE/SUP'D MODID, MARK THE ELEMENT ENTRY IN THE        */
*       /* NOT-PRE/SUP'D SYSMOD AS REGRESSED.                @Z67SP00*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0320
*       DO K=1 BY 1 WHILE(UPDATRC<STOPPTF/* LOOP IF GOOD RETURN VALUE*/
*             &ICTMIDND(K)^=ICTENDIX);/* AND MODIDS IN LIST          */
         LA    @12,1                                               0320
         ST    @12,K                                               0320
         B     @DE00320                                            0320
@DL00320 DS    0H                                                  0321
*         IF ICTMIDPS(K)=OFF        /* MODID NOT PRE'D OR SUP'D ?    */
*             &(ENTETYPE=IDUREP     /* ELEMENT BEING PROCESSED IS A
*                                      REPL.                         */
*             ×(ENTETYPE=IDUUPD     /* ELEMENT BEING PROCESSED IS AN
*                                      UPDATE                        */
*             &ICTMIDTY(K)=ICTMIDRM))/* ... (A)CDS MODID IS AN RMID  */
*           THEN                                                   0321
         L     @12,LPTR                                            0321
         L     @08,K                                               0321
         SLA   @08,3                                               0321
         ST    @08,@TF00001                                        0321
         ALR   @08,@12                                             0321
         BCTR  @08,0                                               0321
         TM    ICTMIDPS-7(@08),B'01000000'                         0321
         BNZ   @RF00321                                            0321
         CLI   ENTETYPE,C'R'                                       0321
         BE    @RT00321                                            0321
         CLI   ENTETYPE,C'U'                                       0321
         BNE   @RF00321                                            0321
         AL    @12,@TF00001                                        0321
         BCTR  @12,0                                               0321
         TM    ICTMIDTY-7(@12),B'00000001'                         0321
         BNO   @RF00321                                            0321
         TM    ICTMIDTY-7(@12),B'00000010'                         0321
         BNZ   @RF00321                                            0321
@RT00321 DS    0H                                                  0322
*           DO;                     /* REGRESSED ELEMENT FOR MODID   */
*                                                                  0322
*             /*******************************************************/
*             /*                                                     */
*             /* SEE IF THE REGRESSED SYSMOD IS IN ICT BEING         */
*             /* RE-INSTALLED                                @Z67SP00*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0323
*             CALL CHKICT(ICTMODID(K),/* MODID SYSMOD-ID     @Z67SP00*/
*                 RGI);             /* PARAMETER RETURNED    @Z67SP00*/
         L     @12,K                                               0323
         SLA   @12,3                                               0323
         L     @08,LPTR                                            0323
         AL    @08,@CF02010                                        0323
         LA    @12,ICTMODID(@12,@08)                               0323
         ST    @12,@AL00001                                        0323
         LA    @12,RGI                                             0323
         ST    @12,@AL00001+4                                      0323
         LA    @01,@AL00001                                        0323
         BAL   @14,CHKICT                                          0323
*             IF RGI=0              /* SYSMOD NOT FOUND      @Z67SP00*/
*               THEN                                               0324
         CLI   RGI,0                                               0324
         BNE   @RF00324                                            0324
*               DO;                                                0325
*                 RGI=1;            /* SET REGRESSION INDICATOR      */
         MVI   RGI,X'01'                                           0326
*                 CALL IDUUPPTF(MPTR,/* POINTER TO ICTMOD ENTRY      */
*                     LPTR,         /* POINTER TO MODID LIST         */
*                     K,            /* INDEX TO MODID LIST ENTRY     */
*                     RGI);         /* REGRESSION INDICATOR SET    0327
*                                      ON/OFF                        */
         MVC   @AL00001+4(12),@AL00327                             0327
         L     @12,@PC00003                                        0327
         ST    @12,@AL00001                                        0327
         LA    @01,@AL00001                                        0327
         BAL   @14,IDUUPPTF                                        0327
*                 RFY                                              0328
*                   RTNCODE RSTD;                                  0328
*                 UPDATRC=MAX(UPDATRC,RTNCODE);/* SAVE MAX RETURN  0329
*                                      CODE VALUE                    */
         L     @14,UPDATRC                                         0329
         CR    @14,RTNCODE                                         0329
         BNL   *+6
         LR    @14,RTNCODE                                         0329
         ST    @14,UPDATRC                                         0329
*                 RFY                                              0330
*                   RTNCODE UNRSTD;                                0330
*               END;                                               0331
*           END;                    /* REGRESSED ELEMENT FOR MODID   */
@RF00324 DS    0H                                                  0333
*       END;                        /* (A)CDS MODID LIST LOOP        */
@RF00321 LA    @12,1                                               0333
         AL    @12,K                                               0333
         ST    @12,K                                               0333
@DE00320 L     @12,UPDATRC                                         0333
         CH    @12,@CH00112                                        0333
         BNL   @DC00320                                            0333
         L     @12,K                                               0333
         SLA   @12,3                                               0333
         L     @08,LPTR                                            0333
         AL    @08,@CF02010                                        0333
         L     @12,ICTMIDND(@12,@08)                               0333
         CL    @12,ICTENDIX                                        0333
         BNE   @DL00320                                            0333
@DC00320 DS    0H                                                  0334
*     END;                          /* MODID NOT ALREADY UPDATED   0334
*                                                            @Z67SP00*/
*   IF UPDATRC<STOPPTF              /* RETURN CODE OKAY              */
*       &ICTMMIDU(1)=OFF            /* (A)CDS NOT ALREADY UPDATED  0335
*                                      WITH THIS ELEM'S SYSMOD #   0335
*                                                            @Z67SP00*/
*     THEN                                                         0335
@RF00318 L     @12,UPDATRC                                         0335
         CH    @12,@CH00112                                        0335
         BNL   @RF00335                                            0335
         L     @12,@PC00003                                        0335
         L     @12,MPTR(,@12)                                      0335
         TM    ICTMMIDU(@12),B'00000100'                           0335
         BNZ   @RF00335                                            0335
*     DO;                           /* CONTINUE MODID UPDATE FOR   0336
*                                      APPLY/ACCEPT                  */
*                                                                  0336
*       /*************************************************************/
*       /*                                                           */
*       /* ACCESS ELEMENT ENTRY FOR UPDATE OF MODIDS                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0337
*       IOPFUNCT=IOPLOC;            /* LOCATE ELEMENT ENTRY  @Z67SP00*/
         L     @08,IOPPTR                                          0337
         MVI   IOPFUNCT(@08),X'03'                                 0337
*       IOPTYPE=ENTTYPE;            /* ENTRY TYPE AS SAVED   @Z67SP00*/
         MVC   IOPTYPE(1,@08),ENTTYPE                              0338
*       IOPNAME=ICTMNAME(1);        /* ELEMENT NAME                  */
         MVC   IOPNAME(8,@08),ICTMNAME(@12)                        0339
*       CALL HMASMIO(HMASMIOP);     /* LOCATE ELEMENT ENTRY ON     0340
*                                      CDS/ACDS                      */
         ST    @08,@AL00001                                        0340
         L     @15,@CV01721                                        0340
         LA    @01,@AL00001                                        0340
         BALR  @14,@15                                             0340
*       IF IOPRETRN>IOPNOTFD        /* TERMINATING ERROR     @Z67SP00*/
*         THEN                                                     0341
         L     @12,IOPPTR                                          0341
         CLI   IOPRETRN(@12),4                                     0341
         BNH   @RF00341                                            0341
*         UPDATRC=MAX(UPDATRC,IOPRETRN);/* SAVE MAXIMUM RETURN CODE
*                                      VALUE                         */
         L     @08,UPDATRC                                         0342
         SLR   @15,@15                                             0342
         IC    @15,IOPRETRN(,@12)                                  0342
         CR    @08,@15                                             0342
         BNL   *+6
         LR    @08,@15                                             0342
         ST    @08,UPDATRC                                         0342
*       IF IOPRETRN=IOPGOOD         /* LOCATE SUCCESSFUL?            */
*         THEN                                                     0343
@RF00341 L     @12,IOPPTR                                          0343
         CLI   IOPRETRN(@12),0                                     0343
         BNE   @RF00343                                            0343
*         DO;                       /* LOCATE SUCCESSFUL             */
*                                                                  0344
*           /*********************************************************/
*           /*                                                       */
*           /* SET ELEMENT RMID                                      */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0345
*           IF ICTMRMID(1)^=NULLPTF#/* ELEMENT RMID INITIALIZED    0345
*                                                            @Z67SP00*/
*             THEN                  /*                       @Z67SP00*/
         L     @08,@PC00003                                        0345
         L     @08,MPTR(,@08)                                      0345
         CLC   ICTMRMID(7,@08),@CC01732                            0345
         BE    @RF00345                                            0345
*             IOPRMID=ICTMRMID(1);  /* PUT RMID IN IOP FIELD @Z67SP00*/
         MVC   IOPRMID(7,@12),ICTMRMID(@08)                        0346
*           IF ICTMMOD(1)=ON        /* MOD ELEMENT           @Z67SP00*/
*               &(ICTMASM(1)=ON     /* ... CAUSED BY MACRO OR SRC  0347
*                                      ASSEMBLY              @Z67SP00*/
*               ×ICTMASOC(1)=ON)    /* ... WITH AN ASSOCIATED SRC  0347
*                                                            @Z67SP00*/
*             THEN                  /*                       @Z67SP00*/
@RF00345 L     @12,@PC00003                                        0347
         L     @12,MPTR(,@12)                                      0347
         TM    ICTMMOD(@12),B'10000000'                            0347
         BNO   @RF00347                                            0347
         TM    ICTMASM(@12),B'01000000'                            0347
         BO    @RT00347                                            0347
         TM    ICTMASOC(@12),B'00010000'                           0347
         BNO   @RF00347                                            0347
@RT00347 DS    0H                                                  0348
*             IOPRMASM(1)=ON;       /* SET IOP FLAG          @Z67SP00*/
         L     @12,IOPPTR                                          0348
         OI    IOPRMASM(@12),B'01000000'                           0348
*           ELSE                    /*                       @Z67SP00*/
*             IOPRMASM(1)=OFF;      /* CLEAR IOP FLAG        @Z67SP00*/
*                                                                  0349
         B     @RC00347                                            0349
@RF00347 L     @12,IOPPTR                                          0349
         NI    IOPRMASM(@12),B'10111111'                           0349
*           /*********************************************************/
*           /*                                                       */
*           /* UPDATE UMID SUBENTRIES IN ELEMENT ENTRY               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0350
*           IF ENTETYPE=IDUUPD      /* UPDATE-TYPE ELEMENT   @Z67SP00*/
*               &IOPFMID=ICTMFMID(1)/* FMID NOT CHANGED VIA VERSION
*                                                            @Z67SP00*/
*             THEN                                                 0350
@RC00347 CLI   ENTETYPE,C'U'                                       0350
         BNE   @RF00350                                            0350
         L     @12,@PC00003                                        0350
         L     @12,MPTR(,@12)                                      0350
         L     @08,IOPPTR                                          0350
         CLC   IOPFMID(7,@08),ICTMFMID(@12)                        0350
         BNE   @RF00350                                            0350
*             DO;                   /* UPDATE TYPE MODIFICATION      */
*                                                                  0351
*               /*****************************************************/
*               /*                                                   */
*               /* PROCESS UMIDS FOR UPDATE TYPE ELEMENT     @Z67SP00*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0352
*               REWRITE=ON;         /* RE-WRITE FULL IOP DUE TO UMID
*                                      ADDITION/CHANGES      @Z67SP00*/
*                                                                  0352
         OI    REWRITE,B'00010000'                                 0352
*               /*****************************************************/
*               /*                                                   */
*               /* DELETE SUBENTRIES FOR UMIDS SUPERSEDED BY THE     */
*               /* CURRENT SYSMOD                            @Z67SP00*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0353
*               RESPECIFY                                          0353
*                 ICTSUPLS BASED(ICTPSCHN(1));/*             @Z67SP00*/
*               DO N=1 BY 1 WHILE ICTSUPND(N)^=ICTENDIX;/*   @Z67SP00*/
         LA    @12,1                                               0354
         ST    @12,N                                               0354
         B     @DE00354                                            0354
@DL00354 DS    0H                                                  0355
*                 VLPFUNCT=VLPDEL;  /* DELETE ...            @Z67SP00*/
         MVI   VLPFUNCT,X'02'                                      0355
*                 VLPTYPE=IOPUMID;  /* UMID SUBENTRY ...     @Z67SP00*/
         MVI   VLPTYPE,X'32'                                       0356
*                 VLPLPTR=ADDR(IOPPNTRY(1));/* FROM ELEM IOP @Z67SP00*/
         L     @12,IOPPTR                                          0357
         LA    @12,IOPPNTRY(,@12)                                  0357
         ST    @12,VLPLPTR                                         0357
*                 VLPDATA=ICTSUPNM(N);/* SUP'D SYSMOD        @Z67SP00*/
         MVI   VLPDATA+7,C' '                                      0358
         L     @12,N                                               0358
         SLA   @12,3                                               0358
         L     @08,@PC00003                                        0358
         L     @08,MPTR(,@08)                                      0358
         L     @08,ICTPPTR(,@08)                                   0358
         L     @08,ICTPSCHN(,@08)                                  0358
         ALR   @08,@12                                             0358
         AL    @08,@CF02010                                        0358
         MVC   VLPDATA(7),ICTSUPNM(@08)                            0358
*                 VLPDATA(8)=''B;   /*                       @Z67SP00*/
         MVI   VLPDATA+7,X'00'                                     0359
*                 VLPDLEN=LENGTH(IOPMACID);/* KEY LENGTH     @Z67SP00*/
         MVI   VLPDLEN,X'07'                                       0360
*                 VLPSTYPE=TXTUMID; /* SUB-ENTRY NAME        @Z67SP00*/
         MVC   VLPSTYPE(16),@CC01747                               0361
*                 CALL HMASMVLU(HMASMVLP);/*                 @Z67SP00*/
         L     @15,@CV01722                                        0362
         LA    @01,@AL00362                                        0362
         BALR  @14,@15                                             0362
*               END;                                               0363
*                                                                  0363
         LA    @12,1                                               0363
         AL    @12,N                                               0363
         ST    @12,N                                               0363
@DE00354 L     @12,N                                               0363
         SLA   @12,3                                               0363
         L     @08,@PC00003                                        0363
         L     @08,MPTR(,@08)                                      0363
         L     @08,ICTPPTR(,@08)                                   0363
         L     @01,ICTPSCHN(,@08)                                  0363
         AL    @01,@CF02010                                        0363
         L     @12,ICTSUPND(@12,@01)                               0363
         CL    @12,ICTENDIX                                        0363
         BNE   @DL00354                                            0363
*               /*****************************************************/
*               /*                                                   */
*               /* CREATE UMID SUBENTRY FOR CURRENT PTF      @Z67SP00*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0364
*               VLPFUNCT=VLPADD;    /* ADD ...               @Z67SP00*/
         MVI   VLPFUNCT,X'01'                                      0364
*               VLPTYPE=IOPUMID;    /* UMID SUBENTRY ...     @Z67SP00*/
         MVI   VLPTYPE,X'32'                                       0365
*               VLPLPTR=ADDR(IOPPNTRY(1));/* TO ELEMENT IOP  @Z67SP00*/
         L     @12,IOPPTR                                          0366
         LA    @12,IOPPNTRY(,@12)                                  0366
         ST    @12,VLPLPTR                                         0366
*               VLPDATA=ICTPTFS(1); /* UMID SYSMOD ID        @Z67SP00*/
         MVI   VLPDATA+7,C' '                                      0367
         MVC   VLPDATA(7),ICTPTFS(@08)                             0367
*               VLPDATA(8)=''B;     /*                       @Z67SP00*/
         MVI   VLPDATA+7,X'00'                                     0368
*               VLPDLEN=LENGTH(IOPMACID);/* KEY LENGTH       @Z67SP00*/
         MVI   VLPDLEN,X'07'                                       0369
*               VLPSTYPE=TXTUMID;   /* SUB-ENTRY NAME        @Z67SP00*/
         MVC   VLPSTYPE(16),@CC01747                               0370
*               CALL HMASMVLU(HMASMVLP);/*                   @Z67SP00*/
         L     @15,@CV01722                                        0371
         LA    @01,@AL00371                                        0371
         BALR  @14,@15                                             0371
*               IF VLPRETRN>=VLPPEEXC/* PEMAX EXCEEDED       @Z67SP00*/
*                 THEN                                             0372
         CLI   VLPRETRN,8                                          0372
         BL    @RF00372                                            0372
*                 UPDATRC=MAX(UPDATRC,VLPRETRN);/*           @Z67SP00*/
         L     @12,UPDATRC                                         0373
         SLR   @08,@08                                             0373
         IC    @08,VLPRETRN                                        0373
         CR    @12,@08                                             0373
         BNL   *+6
         LR    @12,@08                                             0373
         ST    @12,UPDATRC                                         0373
*             END;                  /* UPDATE TYPE MODIFICATION      */
*           ELSE                                                   0375
*             DO;                   /* REPLACEMENT TYPE MODIFICATION */
*                                                                  0375
         B     @RC00350                                            0375
@RF00350 DS    0H                                                  0376
*               /*****************************************************/
*               /*                                                   */
*               /* PROCESS REPLACEMENT ELEMENT (OR UPDATE WHICH      */
*               /* CHANGED ELEMENT'S FMID)                   @Z67SP00*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0376
*               IOPFMID=ICTMFMID(1);/* PUT FMID IN IOP FIELD @Z67SP00*/
*                                                                  0376
         L     @12,IOPPTR                                          0376
         L     @08,@PC00003                                        0376
         L     @08,MPTR(,@08)                                      0376
         MVC   IOPFMID(7,@12),ICTMFMID(@08)                        0376
*               /*****************************************************/
*               /*                                                   */
*               /* DELETE ALL EXISTING MODID AND ALIAS SUB-ENTRIES   */
*               /*                                           @Z67SP00*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0377
*               Q=1;                /* RESET NEW SUBENTRY POSITION 0377
*                                      INDEX                         */
         LA    @12,1                                               0377
         ST    @12,Q                                               0377
*               REWRITE=OFF;        /* NO PRIOR UMIDS        @Z67SP00*/
         NI    REWRITE,B'11101111'                                 0378
*               DO P=1 BY 1 WHILE(SENTEND(P)^=IOPEOLST);/* SUBENTRY
*                                      LOOP                          */
         ST    @12,P                                               0379
         B     @DE00379                                            0379
@DL00379 DS    0H                                                  0380
*                 IF SETYPIND(P)=IOPUMID/* UMID SUBENTRY     @Z67SP00*/
*                     ×SETYPIND(P)=ENTALIAS/* ALIAS SUBENTRY @Z67SP00*/
*                   THEN                                           0380
         L     @12,P                                               0380
         MH    @12,@CH00033                                        0380
         L     @08,SEPTR                                           0380
         BCTR  @08,0                                               0380
         SLR   @15,@15                                             0380
         IC    @15,SETYPIND-8(@12,@08)                             0380
         CH    @15,@CH00818                                        0380
         BE    @RT00380                                            0380
         SLR   @12,@12                                             0380
         IC    @12,ENTALIAS                                        0380
         CR    @15,@12                                             0380
         BNE   @RF00380                                            0380
@RT00380 DS    0H                                                  0381
*                   REWRITE=ON;     /* SUB-ENTRY OVERLAID    @Z67SP00*/
         OI    REWRITE,B'00010000'                                 0381
*                 ELSE              /*                       @Z67SP00*/
*                   DO;             /* SUBENTRY IS NOT MODID         */
         B     @RC00380                                            0382
@RF00380 DS    0H                                                  0383
*                     SENTRY(Q)=SENTRY(P);/* MOVE SUBENTRY TO NEW  0383
*                                      POSITION                      */
         L     @12,SEPTR                                           0383
         L     @08,Q                                               0383
         LA    @15,9                                               0383
         LR    @01,@08                                             0383
         MR    @00,@15                                             0383
         ALR   @01,@12                                             0383
         AL    @01,@CF02009                                        0383
         M     @14,P                                               0383
         ALR   @12,@15                                             0383
         AL    @12,@CF02009                                        0383
         MVC   @TS00001(9),SENTRY(@12)                             0383
         MVC   SENTRY(9,@01),@TS00001                              0383
*                     Q=Q+1;        /* INCREMENT NEW SUBENTRY      0384
*                                      POSITION INDEX                */
         AH    @08,@CH00087                                        0384
         ST    @08,Q                                               0384
*                   END;            /* SUBENTRY IS NOT MODID         */
*               END;                /* SUBENTRY LOOP                 */
@RC00380 LA    @12,1                                               0386
         AL    @12,P                                               0386
         ST    @12,P                                               0386
@DE00379 LA    @12,255                                             0386
         L     @08,SEPTR                                           0386
         LA    @15,9                                               0386
         L     @01,P                                               0386
         MR    @00,@15                                             0386
         AL    @01,@CF02009                                        0386
         SLR   @00,@00                                             0386
         IC    @00,SENTEND(@01,@08)                                0386
         CR    @12,@00                                             0386
         BNE   @DL00379                                            0386
*               SENTEND(Q)=IOPEOLST;/* INDICATE END OF LIST POSITION */
*                                                                  0387
         M     @14,Q                                               0387
         AL    @08,@CF02009                                        0387
         STC   @12,SENTEND(@15,@08)                                0387
*               /*****************************************************/
*               /*                                                   */
*               /* ADD UMIDS TO ELEMENT                      @Z67SP00*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0388
*               CALL UPDICT(HMASMIOP,/* ELEMENT IOP          @Z67SP00*/
*                   PROCRC);        /* ADD UMIDS TO IOP      @Z67SP00*/
         L     @12,IOPPTR                                          0388
         ST    @12,@AL00001                                        0388
         LA    @12,PROCRC                                          0388
         ST    @12,@AL00001+4                                      0388
         LA    @01,@AL00001                                        0388
         BAL   @14,UPDICT                                          0388
*               UPDATRC=MAX(UPDATRC,PROCRC);/* SAVE R.C.     @Z67SP00*/
*                                                                  0389
         L     @12,UPDATRC                                         0389
         L     @08,PROCRC                                          0389
         CR    @12,@08                                             0389
         BNL   *+6
         LR    @12,@08                                             0389
         ST    @12,UPDATRC                                         0389
*               /*****************************************************/
*               /*                                                   */
*               /* ADD ALIAS NAMES TO ELEMENT                @Z67SP00*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0390
*               CALL REPALIAS(HMASMIOP,/* ELEMENT IOP        @Z67SP00*/
*                   PROCRC);        /* ADD UMIDS TO IOP      @Z67SP00*/
         L     @12,IOPPTR                                          0390
         ST    @12,@AL00001                                        0390
         LA    @12,PROCRC                                          0390
         ST    @12,@AL00001+4                                      0390
         LA    @01,@AL00001                                        0390
         BAL   @14,REPALIAS                                        0390
*               UPDATRC=MAX(UPDATRC,PROCRC);/* SAVE R.C.     @Z67SP00*/
         L     @12,UPDATRC                                         0391
         L     @08,PROCRC                                          0391
         CR    @12,@08                                             0391
         BNL   *+6
         LR    @12,@08                                             0391
         ST    @12,UPDATRC                                         0391
*             END;                  /* REPLACEMENT TYPE MODIFICATION */
*           ICTMMIDU(1)=ON;         /* (A)CDS ELEMENT'S MODID LIST 0393
*                                      UPDATED WITH SYSMOD # @Z67SP00*/
@RC00350 L     @12,@PC00003                                        0393
         L     @12,MPTR(,@12)                                      0393
         OI    ICTMMIDU(@12),B'00000100'                           0393
*           IF UPDATRC<STOPPTF THEN /*                       @Z67SP00*/
         L     @12,UPDATRC                                         0394
         CH    @12,@CH00112                                        0394
         BNL   @RF00394                                            0394
*             DO;                   /*                       @Z67SP00*/
*                                                                  0395
*               /*****************************************************/
*               /*                                                   */
*               /* STOW THE ELEMENT ENTRY TO THE CDS         @Z67SP00*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0396
*               IF REWRITE=OFF      /* IOP UN-CHANGED        @Z67SP00*/
*                 THEN              /*                       @Z67SP00*/
         TM    REWRITE,B'00010000'                                 0396
         BNZ   @RF00396                                            0396
*                 IOPFUNCT=IOPUDEO; /* DIRECTORY UPDATE ONLY @Z67SP00*/
         L     @12,IOPPTR                                          0397
         MVI   IOPFUNCT(@12),X'56'                                 0397
*               ELSE                /*                       @Z67SP00*/
*                 IOPFUNCT=IOPSTOWR;/* DIRECTORY UPDATE ONLY @Z67SP00*/
         B     @RC00396                                            0398
@RF00396 L     @12,IOPPTR                                          0398
         MVI   IOPFUNCT(@12),X'54'                                 0398
*               CALL HMASMIO(HMASMIOP);                            0399
@RC00396 L     @12,IOPPTR                                          0399
         ST    @12,@AL00001                                        0399
         L     @15,@CV01721                                        0399
         LA    @01,@AL00001                                        0399
         BALR  @14,@15                                             0399
*               UPDATRC=MAX(UPDATRC,IOPRETRN);                     0400
         L     @12,UPDATRC                                         0400
         L     @08,IOPPTR                                          0400
         SLR   @15,@15                                             0400
         IC    @15,IOPRETRN(,@08)                                  0400
         CR    @12,@15                                             0400
         BNL   *+6
         LR    @12,@15                                             0400
         ST    @12,UPDATRC                                         0400
*             END;                  /*                       @Z67SP00*/
*         END;                      /* LOCATE SUCCESSFUL     @Z67SP00*/
@RF00394 DS    0H                                                  0403
*     END;                          /* CONTINUE MODID UPDATE FOR   0403
*                                      APPLY/ACCEPT                  */
@RF00343 DS    0H                                                  0404
*   RETURN CODE(UPDATRC);           /* RETURN PASSING PROCEDURE'S  0404
*                                      RETURN CODE                   */
@RF00335 L     @15,UPDATRC                                         0404
         L     @14,@SA00003                                        0404
         LM    @00,@12,@SA00003+8                                  0404
         BR    @14                                                 0404
*   END IDUUPDAT;                   /* END OF PROCEDURE              */
*                                                                  0406
*/********************************************************************/
*/*                                                                  */
*/*  IDUUPPTF  - REGRESSED ELEMENT PROCESSOR                         */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0406
*IDUUPPTF:                                                         0406
*   PROC(MODPTR,MIDLSPTR,MIDIX,REGACT);                            0406
*                                                                  0406
IDUUPPTF STM   @14,@12,@SA00004                                    0406
         MVC   @PC00004(16),0(@01)                                 0406
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROCEDURE WILL ACCESS THE PTF ENTRY FOR THE MODID        */
*   /* INDEXED. THE DATA SET WILL BE EITHER THE SMPCDS OR SMPACDS AND*/
*   /* IS SET IN THE IOP BEFORE THE CALL. IF THE REGRESSION ACTION   */
*   /* INDICATOR (REGACT) IS ZERO, THE ELEMENT SUBENTRY TYPE IN THE  */
*   /* PTF ENTRY IS SET TO INDICATE THE CORRECT MODIFICATION CONTROL */
*   /* STATEMENT TYPE IN NONREGRESSED STATE. IF THE REGRESSION ACTION*/
*   /* INDICATOR IS ONE, THE ELEMENT SUBENTRY TYPE IS SET TO INDICATE*/
*   /* REGRESSED STATE AND A WARNING MESSAGE ISSUED NOTIFYING USER OF*/
*   /* REGRESSION OF A PREVIOUSLY APPLIED OR ACCEPTED PTF.           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0407
*   DECLARE                                                        0407
*     MODPTR PTR(31);               /* POINTER TO ICTMOD ENTRY       */
*   DECLARE                                                        0408
*     MIDLSPTR PTR(31);             /* POINTER TO MODID LIST         */
*   DECLARE                                                        0409
*     MIDIX FIXED(31);              /* INDEX TO ENTRY IN MODID LIST  */
*   DECLARE                                                        0410
*     REGACT FIXED(8);              /* REGRESSION ACTION INDICATOR   */
*   DECLARE                                                        0411
*     UPPTFRC FIXED(31);            /* PROCEDURE'S RETURN CODE       */
*   DCL                                                            0412
*     1 UPPTFFLG BIT(8),            /* LOCAL FLAGS           @Z67SP00*/
*      2 ELEMHIT BIT(1),            /* ELEM FOUND IN SYSMOD  @Z67SP00*/
*      2 UPPTFWRT BIT(1),           /* RE-WRITE SYSMOD ENTRY @Z67SP00*/
*      2 * BIT(6);                  /* UN-USED               @Z67SP00*/
*   RFY                                                            0413
*     ICTMOD BASED(MODPTR);                                        0413
*   RFY                                                            0414
*     ICTPTF BASED(ICTPPTR(1));                                    0414
*   RFY                                                            0415
*     ICTMIDLS BASED(MIDLSPTR);                                    0415
*   UPPTFRC=0;                      /* INITIALIZE PROCEDURE'S RETURN
*                                      CODE                          */
*                                                                  0416
         SLR   @12,@12                                             0416
         ST    @12,UPPTFRC                                         0416
*   /*****************************************************************/
*   /*                                                               */
*   /* ACCESS CDS SYSMOD ENTRY FOR SYSMOD CORRESPONDING TO THE MODID */
*   /* PASSED                                                @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0417
*   UPPTFFLG=''B;                   /* CLEAR LOCAL FLAGS     @Z67SP00*/
         MVI   UPPTFFLG,X'00'                                      0417
*   IOPFUNCT=IOPLOC;                /* SET FUNCTION TO LOCATE        */
         L     @12,IOPPTR                                          0418
         MVI   IOPFUNCT(@12),X'03'                                 0418
*   IOPTYPE=IOPSMD;                 /* SET TYPE OF ENTRY TO PTF      */
         MVI   IOPTYPE(@12),X'0B'                                  0419
*   IOPNAM17=ICTMODID(MIDIX);       /* MODID ENTRY NAME IS PTF NUMBER*/
         L     @08,@PC00004+8                                      0420
         L     @08,MIDIX(,@08)                                     0420
         SLA   @08,3                                               0420
         L     @15,@PC00004+4                                      0420
         L     @01,MIDLSPTR(,@15)                                  0420
         ALR   @01,@08                                             0420
         AL    @01,@CF02010                                        0420
         MVC   IOPNAM17(7,@12),ICTMODID(@01)                       0420
*   CALL HMASMIO(HMASMIOP);         /* LOCATE PTF ENTRY FOR MODID    */
         ST    @12,@AL00001                                        0421
         L     @15,@CV01721                                        0421
         LA    @01,@AL00001                                        0421
         BALR  @14,@15                                             0421
*   IF IOPRETRN>IOPNOTFD            /* TERMINATING ERROR     @Z67SP00*/
*     THEN                                                         0422
         L     @12,IOPPTR                                          0422
         CLI   IOPRETRN(@12),4                                     0422
         BNH   @RF00422                                            0422
*     UPPTFRC=IOPRETRN;             /* SAVE RETURN CODE FROM HMASMIO */
         SLR   @08,@08                                             0423
         IC    @08,IOPRETRN(,@12)                                  0423
         ST    @08,UPPTFRC                                         0423
*   IF IOPRETRN=IOPGOOD             /* LOCATE OKAY ?                 */
*     THEN                                                         0424
@RF00422 L     @12,IOPPTR                                          0424
         CLI   IOPRETRN(@12),0                                     0424
         BNE   @RF00424                                            0424
*     DO;                           /* FOUND PTF ENTRY FOR MODID     */
*       ELEMHIT=OFF;                /* RESET LOOP CONTROL SWITCH     */
         NI    ELEMHIT,B'01111111'                                 0426
*/*   LOOK FOR MATCHING ELEMENT IN SYSMOD ENTRY              @Z67SP00*/
*                                                                  0427
*       DO P=1 BY 1 WHILE(IOPPTFND(P)^=IOPEOLST/* LOOP IF SUBENTRIES */
*             &ELEMHIT=OFF);        /* AND MATCHING NOT FOUND        */
         LA    @12,1                                               0427
         ST    @12,P                                               0427
         B     @DE00427                                            0427
@DL00427 DS    0H                                                  0428
*         IF IOPPMODS(P)=ICTMNAME(1)/* FOUND ELEMENT NAME    @ZA24813*/
*           THEN                                                   0428
         L     @12,IOPPTR                                          0428
         L     @08,P                                               0428
         MH    @08,@CH00033                                        0428
         L     @15,@PC00004                                        0428
         L     @15,MODPTR(,@15)                                    0428
         ST    @08,@TF00001                                        0428
         ALR   @08,@12                                             0428
         CLC   IOPPMODS-9(8,@08),ICTMNAME(@15)                     0428
         BNE   @RF00428                                            0428
*           DO;                     /* FOUND SAME ELEMENT NAME       */
*             IF((ICTMMOD(1)=ON     /* ---- MOD REPL ------          */
*                 ×ICTMZAP(1)=ON    /* ---- MOD UPDATE ----          */
*                 ×ICTMXPND(1)=ON)  /* ---- MOD UPDATE ----          */
*                 &(IOPPIND(P)=IOPPMOD/* ++MOD                       */
*                 ×IOPPIND(P)=IOPPRMOD/* ++MOD REGRESSED             */
*                 ×IOPPIND(P)=IOPPZAP/* ++ZAP                        */
*                 ×IOPPIND(P)=IOPPRZAP/* ++ZAP REGRESSED             */
*                 ×IOPPIND(P)=IOPPXPD/* ++XZAP                       */
*                 ×IOPPIND(P)=IOPPRXPD))/* ++XZAP REGRESSED          */
*                 ×((ICTMMACR(1)=ON /* ---- MAC REPL ------          */
*                 ×ICTMMACU(1)=ON)  /* ---- MAC UPDATE ----          */
*                 &(IOPPIND(P)=IOPPMACR/* ++MAC                      */
*                 ×IOPPIND(P)=IOPPRMCR/* ++MAC REGRESSED             */
*                 ×IOPPIND(P)=IOPPMACU/* ++MACUPD                    */
*                 ×IOPPIND(P)=IOPPRMCU))/* ++MACUPD REGRESSED        */
*                 ×((ICTMSRCR(1)=ON /* ---- SRC REPL ------          */
*                 ×ICTMSRCU(1)=ON)  /* ---- SRC UPDATE ----          */
*                 &(IOPPIND(P)=IOPPSRCR/* ++SRC                      */
*                 ×IOPPIND(P)=IOPPRSCR/* ++SRC REGRESSED             */
*                 ×IOPPIND(P)=IOPPSRCU/* ++SRCUPD                    */
*                 ×IOPPIND(P)=IOPPRSCU))/* ++SRCUPD REGRESSED        */
*               THEN                                               0430
         TM    ICTMMOD(@15),B'10110000'                            0430
         BZ    @GL00015                                            0430
         L     @08,@TF00001                                        0430
         SLR   @15,@15                                             0430
         IC    @15,IOPPIND-9(@08,@12)                              0430
         CH    @15,@CH00087                                        0430
         BE    @RT00430                                            0430
         CH    @15,@CH00601                                        0430
         BE    @RT00430                                            0430
         CH    @15,@CH00184                                        0430
         BE    @RT00430                                            0430
         CH    @15,@CH00603                                        0430
         BE    @RT00430                                            0430
         CH    @15,@CH00236                                        0430
         BE    @RT00430                                            0430
         CH    @15,@CH00605                                        0430
         BE    @RT00430                                            0430
@GL00015 L     @12,@PC00004                                        0430
         L     @12,MODPTR(,@12)                                    0430
         TM    ICTMMACR(@12),B'00001100'                           0430
         BZ    @GL00014                                            0430
         L     @12,P                                               0430
         MH    @12,@CH00033                                        0430
         L     @08,IOPPTR                                          0430
         SLR   @15,@15                                             0430
         IC    @15,IOPPIND-9(@12,@08)                              0430
         CH    @15,@CH00039                                        0430
         BE    @RT00430                                            0430
         CH    @15,@CH00607                                        0430
         BE    @RT00430                                            0430
         CH    @15,@CH00130                                        0430
         BE    @RT00430                                            0430
         CH    @15,@CH00609                                        0430
         BE    @RT00430                                            0430
@GL00014 L     @12,@PC00004                                        0430
         L     @12,MODPTR(,@12)                                    0430
         TM    ICTMSRCR(@12),B'00000011'                           0430
         BZ    @RF00430                                            0430
         L     @12,P                                               0430
         MH    @12,@CH00033                                        0430
         L     @08,IOPPTR                                          0430
         SLR   @15,@15                                             0430
         IC    @15,IOPPIND-9(@12,@08)                              0430
         CH    @15,@CH00201                                        0430
         BE    @RT00430                                            0430
         CH    @15,@CH00611                                        0430
         BE    @RT00430                                            0430
         CH    @15,@CH00241                                        0430
         BE    @RT00430                                            0430
         CH    @15,@CH00613                                        0430
         BNE   @RF00430                                            0430
@RT00430 DS    0H                                                  0431
*               DO;                 /* FOUND MATCHING ENTRY          */
*                 ELEMHIT=ON;       /* SET LOOP CONTROL SWITCH TO  0432
*                                      QUIT                          */
         OI    ELEMHIT,B'10000000'                                 0432
*                 IF(IOPPIND(P)>IOPPREG/* REGRESSED SUBTYPE ?        */
*                     &REGACT=0)    /* AND SET REGRESSION OFF ?      */
*                     ×(IOPPIND(P)<IOPPREG/* OR NONREGRESSED SUBTYPE
*                                      ?                             */
*                     &REGACT=1)    /* AND SET REGRESSION ON ?       */
*                   THEN                                           0433
         L     @12,P                                               0433
         MH    @12,@CH00033                                        0433
         L     @08,IOPPTR                                          0433
         SLR   @15,@15                                             0433
         IC    @15,IOPPIND-9(@12,@08)                              0433
         CH    @15,@CH00599                                        0433
         BNH   @GL00030                                            0433
         L     @12,@PC00004+12                                     0433
         CLI   REGACT(@12),0                                       0433
         BE    @RT00433                                            0433
@GL00030 L     @12,P                                               0433
         MH    @12,@CH00033                                        0433
         L     @08,IOPPTR                                          0433
         SLR   @15,@15                                             0433
         IC    @15,IOPPIND-9(@12,@08)                              0433
         CH    @15,@CH00599                                        0433
         BNL   @RF00433                                            0433
         L     @12,@PC00004+12                                     0433
         CLI   REGACT(@12),1                                       0433
         BNE   @RF00433                                            0433
@RT00433 DS    0H                                                  0434
*                   UPPTFWRT=ON;    /* SYSMOD ENTRY MUST BE UPDATED
*                                      AND RE-WRITTEN        @Z67SP00*/
*                                                                  0434
         OI    UPPTFWRT,B'01000000'                                0434
*                 /***************************************************/
*                 /*                                                 */
*                 /* SET SUBENTRY TYPE AS SPECIFIED BY ACTION        */
*                 /* INDICATOR AND REPLACE PTF ENTRY                 */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0435
*                 IF REGACT=0       /* SET TO NON-REGRESSED  @Z67SP00*/
*                   THEN            /*                       @Z67SP00*/
@RF00433 L     @12,@PC00004+12                                     0435
         CLI   REGACT(@12),0                                       0435
         BNE   @RF00435                                            0435
*                   IOPPIND(P)=IOPPIND(P)-IOPPREG;/* CHANGE TO     0436
*                                      NONREGRESSED                  */
         L     @12,IOPPTR                                          0436
         L     @08,P                                               0436
         MH    @08,@CH00033                                        0436
         SLR   @15,@15                                             0436
         IC    @15,IOPPIND-9(@08,@12)                              0436
         SH    @15,@CH00599                                        0436
         STC   @15,IOPPIND-9(@08,@12)                              0436
*                 ELSE                                             0437
*                   IF IOPPIND(P)<IOPPREG/* NOT ALREADY REGRESSED  0437
*                                                            @Z67SP00*/
*                     THEN                                         0437
         B     @RC00435                                            0437
@RF00435 LA    @12,80                                              0437
         L     @08,IOPPTR                                          0437
         L     @15,P                                               0437
         MH    @15,@CH00033                                        0437
         SLR   @14,@14                                             0437
         IC    @14,IOPPIND-9(@15,@08)                              0437
         CR    @14,@12                                             0437
         BNL   @RF00437                                            0437
*                     IOPPIND(P)=IOPPIND(P)+IOPPREG;/* CHANGE TO   0438
*                                      REGRESSED                     */
         ALR   @14,@12                                             0438
         STC   @14,IOPPIND-9(@15,@08)                              0438
*                 IOPFUNCT=IOPSTOWR;/* SET FUNCTION TO STOW ENTRY    */
@RF00437 DS    0H                                                  0439
@RC00435 L     @12,IOPPTR                                          0439
         MVI   IOPFUNCT(@12),X'54'                                 0439
*                 IF UPPTFWRT=ON    /* RE-WRITE SYSMOD ENTRY @Z67SP00*/
*                   THEN                                           0440
         TM    UPPTFWRT,B'01000000'                                0440
         BNO   @RF00440                                            0440
*                   DO;             /*                       @Z67SP00*/
*                     CALL HMASMIO(HMASMIOP);/* REPLACE PTF ENTRY    */
         ST    @12,@AL00001                                        0442
         L     @15,@CV01721                                        0442
         LA    @01,@AL00001                                        0442
         BALR  @14,@15                                             0442
*                     UPPTFRC=MAX(UPPTFRC,IOPRETRN);/* SAVE MAXIMUM
*                                      VALUE                         */
         L     @12,UPPTFRC                                         0443
         L     @08,IOPPTR                                          0443
         SLR   @15,@15                                             0443
         IC    @15,IOPRETRN(,@08)                                  0443
         CR    @12,@15                                             0443
         BNL   *+6
         LR    @12,@15                                             0443
         ST    @12,UPPTFRC                                         0443
*                   END;            /*                       @Z67SP00*/
*                 IF UPPTFRC=ZERO   /* EVERYTHING OK         @Z67SP00*/
*                     &REGACT=1     /* AND REGRESSION ON ?           */
*                   THEN                                           0445
@RF00440 ICM   @12,15,UPPTFRC                                      0445
         BNZ   @RF00445                                            0445
         L     @12,@PC00004+12                                     0445
         CLI   REGACT(@12),1                                       0445
         BNE   @RF00445                                            0445
*                   DO;             /* REGRESSION MESSAGE            */
*                                                                  0446
*                     /***********************************************/
*                     /*                                             */
*                     /* ISSUE MESSAGE - HMA3241 EEEEEE YYYYYYYY     */
*                     /* SUBENTRY IN PTF MMMMMMM REGRESSED BY PTF    */
*                     /* NNNNNNN                                     */
*                     /*                                             */
*                     /***********************************************/
*                                                                  0447
*                     MGPCLEAR=''B; /* CLEAR MSG NUMBERS AND FLAGS   */
         XC    MGPCLEAR(6),MGPCLEAR                                0447
*                     MGPTYPE=MGPWARN;/* SEVERITY IS WARNING         */
         MVI   MGPTYPE,X'02'                                       0448
*                     MGPMGNO1=HMA324I;/* VALUE FOR MESSAGE HMA324I  */
         MVC   MGPMGNO1(2),@CH01745                                0449
*                     MGPPRINT=ON;  /* PRINT MESSAGE                 */
*                     MGPHLDS=ON;   /* LOG MESSAGE                   */
         OI    MGPPRINT,B'10010000'                                0451
*                     MTYPE=IOPPIND(P)-IOPPREG;/* CHANGE TYPE TO   0452
*                                      NON-REGRESSED TYPE VALUE    0452
*                                                            @Z67SP00*/
         L     @12,IOPPTR                                          0452
         L     @08,P                                               0452
         MH    @08,@CH00033                                        0452
         SLR   @15,@15                                             0452
         IC    @15,IOPPIND-9(@08,@12)                              0452
         SH    @15,@CH00599                                        0452
         STC   @15,MTYPE                                           0452
*                     MGPVARPT(1)=ADDR(MTYPEVAR(MTYPE));/* ELEMENT 0453
*                                      TYPE                          */
         MH    @15,@CH00201                                        0453
         LA    @08,MTYPEVAR-6(@15)                                 0453
         ST    @08,MGPVARPT                                        0453
*                     MGPVARPT(2)=ADDR(ICTMNAME(1));/* ELEMENT NAME  */
         L     @08,@PC00004                                        0454
         L     @08,MODPTR(,@08)                                    0454
         ST    @08,MGPVARPT+4                                      0454
*                     MGPVARPT(3)=ADDR(IOPNAM17);/* PREVIOUS PTF   0455
*                                      NUMBER                        */
         LA    @12,IOPNAM17(,@12)                                  0455
         ST    @12,MGPVARPT+8                                      0455
*                     MGPVARPT(4)=ADDR(ICTPTFS(1));/* CURRENT PTF  0456
*                                      NUMBER                        */
         L     @12,ICTPPTR(,@08)                                   0456
         ST    @12,MGPVARPT+12                                     0456
*                     CALL HMASMMSG(HMASMMGP);/* ISSUE MESSAGE       */
         L     @15,@CV01723                                        0457
         LA    @01,@AL00457                                        0457
         BALR  @14,@15                                             0457
*                     UPPTFRC=MAX(UPPTFRC,PTFWARN);/* SET MAXIMUM RC
*                                      VALUE                         */
         L     @12,UPPTFRC                                         0458
         LA    @08,4                                               0458
         CR    @12,@08                                             0458
         BNL   *+6
         LR    @12,@08                                             0458
         ST    @12,UPPTFRC                                         0458
*                   END;            /* REGRESSION MESSAGE            */
*               END;                /* FOUND MATCHING ENTRY          */
@RF00445 DS    0H                                                  0461
*           END;                    /* FOUND SAME ELEMENT NAME       */
@RF00430 DS    0H                                                  0462
*       END;                        /* PTF SUBENTRY LOOP             */
@RF00428 LA    @12,1                                               0462
         AL    @12,P                                               0462
         ST    @12,P                                               0462
@DE00427 L     @12,P                                               0462
         MH    @12,@CH00033                                        0462
         L     @08,IOPPTR                                          0462
         SLR   @15,@15                                             0462
         IC    @15,IOPPTFND-9(@12,@08)                             0462
         CH    @15,@CH00709                                        0462
         BE    @DC00427                                            0462
         TM    ELEMHIT,B'10000000'                                 0462
         BZ    @DL00427                                            0462
@DC00427 DS    0H                                                  0463
*     END;                          /* FOUND PTF ENTRY FOR MODID     */
*   RETURN CODE(UPPTFRC);           /* RETURN WITH MAXIMUM VALUE     */
@RF00424 L     @15,UPPTFRC                                         0464
         L     @14,@SA00004                                        0464
         LM    @00,@12,@SA00004+8                                  0464
         BR    @14                                                 0464
*   END IDUUPPTF;                   /* END OF PROCEDURE              */
*                                                                  0466
*/********************************************************************/
*/*                                                                  */
*/* CHKICT   - CHECK ICT PTF SECTION FOR SYSMOD PASSED               */
*/*                                                                  */
*/*                                                          @Z67SP00*/
*/********************************************************************/
*                                                                  0466
*CHKICT:                                                           0466
*   PROC(CHKSMD,CHKIND);            /*                       @Z67SP00*/
CHKICT   STM   @14,@12,12(@13)                                     0466
         MVC   @PC00005(8),0(@01)                                  0466
*   DCL                                                            0467
*     CHKSMD CHAR(7);               /* SYSMOD-ID             @Z67SP00*/
*   DCL                                                            0468
*     CHKIND FIXED(8);              /* RETURNED TO CALLER ...........
*                                      1 - SYSMOD FOUND (NOT ERROR) .
*                                      0 - SYSMOD NOT FOUND (OR    0468
*                                      ERROR)                @Z67SP00*/
*   DCL                                                            0469
*     II FIXED(15);                 /* INDEX                 @Z67SP00*/
*   RESPECIFY                                                      0470
*     ICTPTF BASED(CCAICPTF);       /* ADDRESS ENTIRE PTF SECTION  0470
*                                                            @Z67SP00*/
*   CHKIND=0;                       /* CLEAR PARM RETURNED   @Z67SP00*/
         L     @12,@PC00005+4                                      0471
         MVI   CHKIND(@12),X'00'                                   0471
*   DO II=1 BY 1 WHILE ICTPEND(II)^=ICTENDNT/*               @Z67SP00*/
*         &CHKIND=0;                /* SYSMOD NOT FOUND      @Z67SP00*/
         LA    @12,1                                               0472
         STH   @12,II                                              0472
         B     @DE00472                                            0472
@DL00472 DS    0H                                                  0473
*     IF ICTPTFS(II)=CHKSMD         /* SYSMOD FOUND          @Z67SP00*/
*         &ICTPNOGO(II)=OFF         /* ... NOT NOGO          @Z67SP00*/
*         &ICTPDEXP(II)=OFF         /* ... NOT DELETED       @Z67SP00*/
*         &ICTPDIMP(II)=OFF         /* ... NOT DELETED       @Z67SP00*/
*         &ICTPGELM(II)=OFF         /* ... NOT ELIMINATED    @Z67SP00*/
*       THEN                                                       0473
         LH    @12,II                                              0473
         MH    @12,@CH01990                                        0473
         L     @08,CCAICPTF(,CCAPTR)                               0473
         L     @15,@PC00005                                        0473
         ST    @12,@TF00001                                        0473
         ALR   @12,@08                                             0473
         AL    @12,@CF02016                                        0473
         CLC   ICTPTFS(7,@12),CHKSMD(@15)                          0473
         BNE   @RF00473                                            0473
         LR    @12,@08                                             0473
         AL    @12,@TF00001                                        0473
         AL    @12,@CF02017                                        0473
         TM    ICTPNOGO-8(@12),B'01000000'                         0473
         BNZ   @RF00473                                            0473
         AL    @08,@TF00001                                        0473
         AL    @08,@CF02018                                        0473
         TM    ICTPDEXP-13(@08),B'00111000'                        0473
         BNZ   @RF00473                                            0473
*       CHKIND=1;                   /* SET RETURN PARM       @Z67SP00*/
         L     @12,@PC00005+4                                      0474
         MVI   CHKIND(@12),X'01'                                   0474
*   END;                            /*                       @Z67SP00*/
@RF00473 LA    @12,1                                               0475
         AH    @12,II                                              0475
         STH   @12,II                                              0475
@DE00472 LH    @12,II                                              0475
         MH    @12,@CH01990                                        0475
         L     @08,CCAICPTF(,CCAPTR)                               0475
         AL    @08,@CF02016                                        0475
         L     @12,ICTPEND(@12,@08)                                0475
         CL    @12,ICTENDNT                                        0475
         BE    @DC00472                                            0475
         L     @12,@PC00005+4                                      0475
         CLI   CHKIND(@12),0                                       0475
         BE    @DL00472                                            0475
@DC00472 DS    0H                                                  0476
*   RETURN;                         /*                       @Z67SP00*/
@EL00005 DS    0H                                                  0476
@EF00005 DS    0H                                                  0476
@ER00005 LM    @14,@12,12(@13)                                     0476
         BR    @14                                                 0476
*   END CHKICT;                     /*                       @Z67SP00*/
*                                                                  0478
*/********************************************************************/
*/*                                                                  */
*/* REGICTCK - CHECK OTHER ELEMENTS IN THE ICT MOD SECTION           */
*/*            (WHOSE FMID IS THE SAME AS THE SELECTED ELEMENT)      */
*/*            TO SEE IF THEY ARE REGRESSED BY THE SYSMOD WHICH      */
*/*            SUPPLIED THE SELECTED ELEMENT                         */
*/*                                                                  */
*/*            IF THE ELEMENT PASSED IS A REPLACEMENT ELEMENT,       */
*/*            THE NOT SELECTED REPLACEMENTS AND NOT SELECTED        */
*/*            UPDATES FOUND IN THE ICT WILL BE CHECKED (NOTE        */
*/*            THAT THIS CHECK NEED ONLY BE DONE WHEN BYPASS(ID)     */
*/*            IS IN EFFECT).                                        */
*/*                                                                  */
*/*            IF THE ELEMENT PASSED IS AN UPDATE ELEMENT, THE       */
*/*            SELECTED REPLACEMENT FOUND IN THE ICT WILL BE         */
*/*            CHECKED.                                              */
*/*                                                                  */
*/*                                                          @Z67SP00*/
*/********************************************************************/
*                                                                  0478
*REGICTCK:                                                         0478
*   PROC(MODENT@);                  /*                       @Z67SP00*/
REGICTCK STM   @14,@12,@SA00006                                    0478
         MVC   @PC00006(4),0(@01)                                  0478
*   DCL                                                            0479
*     MODENT@ PTR(31);              /* ADDR OF ICT MOD ENTRY @Z67SP00*/
*   DCL                                                            0480
*     1 LCTCKFLG BIT(8),            /* LOCAL FLAGS           @Z67SP00*/
*      2 CKICTSEL BIT(1),           /* '1' - CHECK SELECTED ELEMENTS
*                                      IN ICT .......................
*                                      '0' - CHECK NOT SELECTED    0480
*                                      ELEMS. IN ICT ..............
*                                                            @Z67SP00*/
*      2 * BIT(7);                  /*                       @Z67SP00*/
*   DCL                                                            0481
*     1 CK1FLG1 BIT(8),             /* ICTMFLG1 MAPPING (REPLACEMENT
*                                      ELEMENT BITS)         @Z67SP00*/
*      2 CK1MMOD BIT(1),            /* MOD REPLACEMENT       @Z67SP00*/
*      2 * BIT(1),                  /*                       @Z67SP00*/
*      2 * BIT(1),                  /* MOD UPDATE (ZAP)      @Z67SP00*/
*      2 * BIT(1),                  /*                       @Z67SP00*/
*      2 CK1MMACR BIT(1),           /* MAC REPLACEMENT       @Z67SP00*/
*      2 * BIT(1),                  /* MAC UPDATE            @Z67SP00*/
*      2 CK1MSRCR BIT(1),           /* SRC REPLACEMENT       @Z67SP00*/
*      2 * BIT(1);                  /* SRC UPDATE            @Z67SP00*/
*   DCL                                                            0482
*     1 CKAFLG1 BIT(8),             /* ICTMFLG1 MAPPING (REPLACEMENT
*                                      ELEMENT BITS)         @Z67SP00*/
*      2 CKAMMOD BIT(1),            /* MOD REPLACEMENT       @Z67SP00*/
*      2 CKAMASM BIT(1),            /* ... ASSEMBLY          @Z67SP00*/
*      2 * BIT(1),                  /* MOD UPDATE (ZAP)      @Z67SP00*/
*      2 * BIT(1),                  /*                       @Z67SP00*/
*      2 * BIT(1),                  /* MAC REPLACEMENT       @Z67SP00*/
*      2 * BIT(1),                  /* MAC UPDATE            @Z67SP00*/
*      2 * BIT(1),                  /* SRC REPLACEMENT       @Z67SP00*/
*      2 * BIT(1);                  /* SRC UPDATE            @Z67SP00*/
*   DCL                                                            0483
*     1 CK2FLG1 BIT(8),             /* ICTMFLG1 MAPPING (UPDATE    0483
*                                      ELEMENT BITS)         @Z67SP00*/
*      2 * BIT(1),                  /* MOD REPLACEMENT       @Z67SP00*/
*      2 * BIT(1),                  /*                       @Z67SP00*/
*      2 CK2MZAP BIT(1),            /* MOD UPDATE (ZAP)      @Z67SP00*/
*      2 * BIT(1),                  /*                       @Z67SP00*/
*      2 * BIT(1),                  /* MAC REPLACEMENT       @Z67SP00*/
*      2 CK2MMACU BIT(1),           /* MAC UPDATE            @Z67SP00*/
*      2 * BIT(1),                  /* SRC REPLACEMENT       @Z67SP00*/
*      2 CK2MSRCU BIT(1);           /* SRC UPDATE            @Z67SP00*/
*   DCL                                                            0484
*     TPSRTN FIXED(8);              /*                       @Z67SP00*/
*   DCL                                                            0485
*     PRESUP CHAR(1) CONSTANT('Y'); /*                       @Z67SP00*/
*   DCL                                                            0486
*     NN FIXED(15);                 /* INDEX - ICT MOD SECT. @Z67SP00*/
*   DCL                                                            0487
*     CHKMNAME CHAR(8);             /* SELECTED ELEMENT NAME @Z67SP00*/
*   DCL                                                            0488
*     CHKMFMID CHAR(7);             /* SELECTED ELEMENT FMID @Z67SP00*/
*   DCL                                                            0489
*     NSMODID CHAR(7);              /* OTHER ELEMENT'S MODID @Z67SP00*/
*                                                                  0489
*   /*****************************************************************/
*   /*                                                               */
*   /* SET CK1FLG1, CKAFLG1 AND CK2FLG1 FOR THE TYPE OF ICT ENTRIES  */
*   /* WHICH WILL BE CHECKED                                 @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0490
*   RESPECIFY                                                      0490
*     ICTMOD BASED(MODENT@);        /* ADDRESS ENTRY PASSED  @Z67SP00*/
*   LCTCKFLG=''B;                   /* CLEAR LOCAL FLAGS     @Z67SP00*/
         MVI   LCTCKFLG,X'00'                                      0491
*   CK1FLG1=''B;                    /* REPL-TYPE BITS        @Z67SP00*/
         MVI   CK1FLG1,X'00'                                       0492
*   CK2FLG1=''B;                    /* UPDATE-TYPE BITS      @Z67SP00*/
         MVI   CK2FLG1,X'00'                                       0493
*   CKAFLG1=''B;                    /* REPL-TYPE BITS        @Z67SP00*/
         MVI   CKAFLG1,X'00'                                       0494
*   IF ICTMMOD(1)=ON                /* MOD REPLACEMENT       @Z67SP00*/
*     THEN                                                         0495
         L     @12,@PC00006                                        0495
         L     @12,MODENT@(,@12)                                   0495
         TM    ICTMMOD(@12),B'10000000'                            0495
         BNO   @RF00495                                            0495
*     DO;                                                          0496
*       CKICTSEL=OFF;               /* CHK NOT SELECTED ICT: @Z67SP00*/
         NI    CKICTSEL,B'01111111'                                0497
*       CK1MMOD(1)=ON;              /* ... MOD REPLACEMENTS  @Z67SP00*/
         OI    CK1MMOD,B'10000000'                                 0498
*       CK2MZAP(1)=ON;              /* ... MOD UPDATES       @Z67SP00*/
         OI    CK2MZAP,B'00100000'                                 0499
*     END;                                                         0500
*   IF ICTMZAP(1)=ON                /* MOD UPDATE            @Z67SP00*/
*     THEN                                                         0501
@RF00495 L     @12,@PC00006                                        0501
         L     @12,MODENT@(,@12)                                   0501
         TM    ICTMZAP(@12),B'00100000'                            0501
         BNO   @RF00501                                            0501
*     DO;                                                          0502
*       CKICTSEL=ON;                /* CHK SELECTED ICT:     @Z67SP00*/
         OI    CKICTSEL,B'10000000'                                0503
*       CK1MMOD(1)=ON;              /* ... MOD REPLACEMENTS  @Z67SP00*/
         OI    CK1MMOD,B'10000000'                                 0504
*       CKAMMOD(1)=ON;              /* ... ASSEMBLIES        @Z67SP00*/
*       CKAMASM(1)=ON;              /* ... "                 @Z67SP00*/
         OI    CKAMMOD,B'11000000'                                 0506
*       CK2MZAP(1)=ON;              /* ... MOD UPDATES       @Z67SP00*/
         OI    CK2MZAP,B'00100000'                                 0507
*     END;                                                         0508
*   IF ICTMMACR(1)=ON               /* MAC REPLACEMENT       @Z67SP00*/
*     THEN                                                         0509
@RF00501 L     @12,@PC00006                                        0509
         L     @12,MODENT@(,@12)                                   0509
         TM    ICTMMACR(@12),B'00001000'                           0509
         BNO   @RF00509                                            0509
*     DO;                                                          0510
*       CKICTSEL=OFF;               /* CHK NOT SELECTED ICT: @Z67SP00*/
         NI    CKICTSEL,B'01111111'                                0511
*       CK1MMACR(1)=ON;             /* ... MAC REPLACEMENTS  @Z67SP00*/
         OI    CK1MMACR,B'00001000'                                0512
*       CK2MMACU(1)=ON;             /* ... MAC UPDATES       @Z67SP00*/
         OI    CK2MMACU,B'00000100'                                0513
*     END;                                                         0514
*   IF ICTMMACU(1)=ON               /* MAC UPDATE            @Z67SP00*/
*     THEN                                                         0515
@RF00509 L     @12,@PC00006                                        0515
         L     @12,MODENT@(,@12)                                   0515
         TM    ICTMMACU(@12),B'00000100'                           0515
         BNO   @RF00515                                            0515
*     DO;                                                          0516
*       CKICTSEL=ON;                /* CHK SELECTED ICT:     @Z67SP00*/
         OI    CKICTSEL,B'10000000'                                0517
*       CK1MMACR(1)=ON;             /* ... MAC REPLACEMENTS  @Z67SP00*/
         OI    CK1MMACR,B'00001000'                                0518
*       CK2MMACU(1)=ON;             /* ... MAC UPDATES       @Z67SP00*/
         OI    CK2MMACU,B'00000100'                                0519
*     END;                                                         0520
*   IF ICTMSRCR(1)=ON               /* SRC REPLACEMENT       @Z67SP00*/
*     THEN                                                         0521
@RF00515 L     @12,@PC00006                                        0521
         L     @12,MODENT@(,@12)                                   0521
         TM    ICTMSRCR(@12),B'00000010'                           0521
         BNO   @RF00521                                            0521
*     DO;                                                          0522
*       CKICTSEL=OFF;               /* CHK NOT SELECTED ICT: @Z67SP00*/
         NI    CKICTSEL,B'01111111'                                0523
*       CK1MSRCR(1)=ON;             /* ... SRC REPLACEMENTS  @Z67SP00*/
         OI    CK1MSRCR,B'00000010'                                0524
*       CK2MSRCU(1)=ON;             /* ... SRC UPDATES       @Z67SP00*/
         OI    CK2MSRCU,B'00000001'                                0525
*     END;                                                         0526
*   IF ICTMSRCU(1)=ON               /* SRC UPDATE            @Z67SP00*/
*     THEN                                                         0527
@RF00521 L     @12,@PC00006                                        0527
         L     @12,MODENT@(,@12)                                   0527
         TM    ICTMSRCU(@12),B'00000001'                           0527
         BNO   @RF00527                                            0527
*     DO;                                                          0528
*       CKICTSEL=ON;                /* CHK SELECTED ICT:     @Z67SP00*/
         OI    CKICTSEL,B'10000000'                                0529
*       CK1MSRCR(1)=ON;             /* ... SRC REPLACEMENTS  @Z67SP00*/
         OI    CK1MSRCR,B'00000010'                                0530
*       CK2MSRCU(1)=ON;             /* ... SRC UPDATES       @Z67SP00*/
         OI    CK2MSRCU,B'00000001'                                0531
*     END;                                                         0532
*   CHKMNAME=ICTMNAME(1);           /* SAVE ELEMENT NAME     @Z67SP00*/
@RF00527 L     @12,@PC00006                                        0533
         L     @12,MODENT@(,@12)                                   0533
         MVC   CHKMNAME(8),ICTMNAME(@12)                           0533
*   CHKMFMID=ICTMFMID(1);           /* SAVE ELEMENT FMID     @Z67SP00*/
         MVC   CHKMFMID(7),ICTMFMID(@12)                           0534
*   IF CKICTSEL=OFF                 /* NOT-SELECTED ELEMENTS TO BE 0535
*                                      CHECKED               @Z67SP00*/
*       &TBLBPID=ON                 /* BYPASS(ID) IN EFFECT  @Z67SP00*/
*     THEN                                                         0535
         TM    CKICTSEL,B'10000000'                                0535
         BNZ   @RF00535                                            0535
         L     @12,CCATBLPA(,CCAPTR)                               0535
         TM    TBLBPID(@12),B'10000000'                            0535
         BNO   @RF00535                                            0535
*     DO;                                                          0536
*                                                                  0536
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK NOT-SELECTED ELEMENTS IN THE ICT MOD SECT. (I.E.,   */
*       /* THE ELEMENT PASSED IS A REPLACEMENT-TYPE ELEMENT) @Z67SP00*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0537
*       RESPECIFY                                                  0537
*         ICTMOD BASED(CCAICMOD);   /* ADDRESS ENTIRE MOD SECTION  0537
*                                                            @Z67SP00*/
*       DO NN=1 BY 1 WHILE ICTMEND(NN)^=ICTENDNT;/*          @Z67SP00*/
         LA    @12,1                                               0538
         STH   @12,NN                                              0538
         B     @DE00538                                            0538
@DL00538 DS    0H                                                  0539
*         IF ICTMNAME(NN)=CHKMNAME  /* NAMES MATCH           @Z67SP00*/
*             &ICTMFMID(NN)=CHKMFMID/* FMIDS MATCH           @Z67SP00*/
*             &ADDR(ICTMOD(NN))^=MODENT@/* DIFFERENT ENTRY   @Z67SP00*/
*             &(ICTMFLG1(NN)=CK1FLG1/* REPL TO CHECK         @Z67SP00*/
*             ×ICTMFLG1(NN)=CK2FLG1)/* UPDATE TO CHECK       @Z67SP00*/
*             &ICTMISEL(NN)=OFF     /* NOT SELECTED          @Z67SP00*/
*             &ICTPPTR(NN)->ICTPNOGO(1)=OFF/* SMD NOT NOGO   @Z67SP00*/
*             &ICTPPTR(NN)->ICTPDEXP(1)=OFF/* SMD NOT DELETED      0539
*                                                            @Z67SP00*/
*             &ICTPPTR(NN)->ICTPDIMP(1)=OFF/* SMD NOT DELETED      0539
*                                                            @Z67SP00*/
*             &ICTPPTR(NN)->ICTPGELM(1)=OFF/* SMD NOT ELIMIN.      0539
*                                                            @Z67SP00*/
*           THEN                                                   0539
         LH    @12,NN                                              0539
         MH    @12,@CH01991                                        0539
         L     @08,CCAICMOD(,CCAPTR)                               0539
         ST    @12,@TF00001                                        0539
         ALR   @12,@08                                             0539
         AL    @12,@CF02023                                        0539
         CLC   ICTMNAME(8,@12),CHKMNAME                            0539
         BNE   @RF00539                                            0539
         LR    @12,@08                                             0539
         AL    @12,@TF00001                                        0539
         AL    @12,@CF02024                                        0539
         CLC   ICTMFMID-88(7,@12),CHKMFMID                         0539
         BNE   @RF00539                                            0539
         L     @12,@TF00001                                        0539
         AL    @12,@CF02023                                        0539
         LA    @12,ICTMOD(@12,@08)                                 0539
         L     @15,@PC00006                                        0539
         C     @12,MODENT@(,@15)                                   0539
         BE    @RF00539                                            0539
         LR    @12,@08                                             0539
         AL    @12,@TF00001                                        0539
         AL    @12,@CF02025                                        0539
         CLC   ICTMFLG1-9(1,@12),CK1FLG1                           0539
         BE    @GL00041                                            0539
         AL    @08,@TF00001                                        0539
         AL    @08,@CF02025                                        0539
         CLC   ICTMFLG1-9(1,@08),CK2FLG1                           0539
         BNE   @RF00539                                            0539
@GL00041 LH    @12,NN                                              0539
         MH    @12,@CH01991                                        0539
         L     @08,CCAICMOD(,CCAPTR)                               0539
         ST    @12,@TF00001                                        0539
         ALR   @12,@08                                             0539
         AL    @12,@CF02026                                        0539
         TM    ICTMISEL-11(@12),B'10000000'                        0539
         BNZ   @RF00539                                            0539
         L     @12,@TF00001                                        0539
         AL    @12,@CF02027                                        0539
         L     @12,ICTPPTR-96(@12,@08)                             0539
         TM    ICTPNOGO(@12),B'01000000'                           0539
         BNZ   @RF00539                                            0539
         TM    ICTPDEXP(@12),B'00111000'                           0539
         BNZ   @RF00539                                            0539
*           DO;                                                    0540
*                                                                  0540
*             /*******************************************************/
*             /*                                                     */
*             /* CHECK THE NON-SELECTED ELEMENT TO INSURE THAT THE   */
*             /* SYSMOD SUPPLYING THE SELECTED ELEMENT PREREQS OR    */
*             /* SUPS THE SYSMOD WHICH SUPPLIED THE NON-SELECTED     */
*             /* ELEMENT                                     @Z67SP00*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0541
*             NSMODID=ICTMRMID(NN); /* NON-SELECTED ELEMENT'S RMID   */
         AL    @08,@TF00001                                        0541
         AL    @08,@CF02028                                        0541
         MVC   NSMODID(7),ICTMRMID-80(@08)                         0541
*             IF NSMODID=NULLPTF#   /* NO RMID ... MUST BE AN UPDATE */
*               THEN                                               0542
         CLC   NSMODID(7),@CC01732                                 0542
         BNE   @RF00542                                            0542
*               NSMODID=ICTPPTR(NN)->ICTPTFS(1);/* USE SYSMOD ID     */
         MVC   NSMODID(7),ICTPTFS(@12)                             0543
*             CALL HMASMTPS(MODENT@->ICTPPTR(1),/* SYSMOD - SELECTED
*                                      ELEMENT                       */
*                 NSMODID,          /* MODID - NON-SELECTED ELEMENT  */
*                 TPSRTN);          /*                       @Z67SP00*/
@RF00542 MVC   @AL00001+4(8),@AL00544                              0544
         L     @12,@PC00006                                        0544
         L     @12,MODENT@(,@12)                                   0544
         LA    @12,ICTPPTR(,@12)                                   0544
         ST    @12,@AL00001                                        0544
         L     @15,@CV01724                                        0544
         LA    @01,@AL00001                                        0544
         BALR  @14,@15                                             0544
*             IF TPSRTN^=PRESUP     /* MODID NOT PRE/SUPD    @Z67SP00*/
*               THEN                                               0545
         CLI   TPSRTN,232                                          0545
         BE    @RF00545                                            0545
*               DO;                                                0546
*                 XNDX=1;           /* "MID LIST" INDEX      @Z67SP00*/
         MVC   XNDX(4),@CF00087                                    0547
*                 XMID(1)=ICTPPTR(NN)->ICTPTF(1);/* PUT SYSMOD BEING
*                                      REGRESSD IN "MID LIST"      0548
*                                                            @Z67SP00*/
         LH    @12,NN                                              0548
         MH    @12,@CH01991                                        0548
         L     @08,CCAICMOD(,CCAPTR)                               0548
         AL    @08,@CF02027                                        0548
         L     @12,ICTPPTR-96(@12,@08)                             0548
         MVC   XMID(7),ICTPTF(@12)                                 0548
*                 RGI=1;            /* SET REGRESSION FLAG   @Z67SP00*/
         MVI   RGI,X'01'                                           0549
*                 CALL IDUUPPTF(MODENT@,/* SELECTED MOD ENTRY      0550
*                                                            @Z67SP00*/
*                     ADDR(XMIDLS), /* "MID LIST"            @Z67SP00*/
*                     XNDX,         /* "MID LIST" INDEX      @Z67SP00*/
*                     RGI);         /* REGRESSION FLAG       @Z67SP00*/
         MVC   @AL00001+4(12),@AL00550                             0550
         L     @12,@PC00006                                        0550
         ST    @12,@AL00001                                        0550
         LA    @12,XMIDLS                                          0550
         ST    @12,@AFTEMPS                                        0550
         LA    @01,@AL00001                                        0550
         BAL   @14,IDUUPPTF                                        0550
*               END;                /*                       @Z67SP00*/
*           END;                    /*                       @Z67SP00*/
@RF00545 DS    0H                                                  0553
*       END;                        /*                       @Z67SP00*/
@RF00539 LA    @12,1                                               0553
         AH    @12,NN                                              0553
         STH   @12,NN                                              0553
@DE00538 LH    @12,NN                                              0553
         MH    @12,@CH01991                                        0553
         L     @08,CCAICMOD(,CCAPTR)                               0553
         AL    @08,@CF02023                                        0553
         L     @12,ICTMEND(@12,@08)                                0553
         CL    @12,ICTENDNT                                        0553
         BNE   @DL00538                                            0553
*     END;                          /* ^SEL. ELEM. CHECK     @Z67SP00*/
*   IF CKICTSEL=ON                  /* SELECTED ELEMENTS TO BE     0555
*                                      CHECKED               @Z67SP00*/
*       &TBLBPID=ON                 /* BYPASS(ID) IN EFFECT  @Z67SP00*/
*     THEN                                                         0555
@RF00535 TM    CKICTSEL,B'10000000'                                0555
         BNO   @RF00555                                            0555
         L     @12,CCATBLPA(,CCAPTR)                               0555
         TM    TBLBPID(@12),B'10000000'                            0555
         BNO   @RF00555                                            0555
*     DO;                                                          0556
*                                                                  0556
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK OTHER SELECTED REPLACEMENT ELEMENTS IN THE ICT MOD  */
*       /* SECT. (I.E., THE ELEMENT PASSED IS AN UPDATE-TYPE ELEMENT)*/
*       /*                                                   @Z67SP00*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0557
*       RESPECIFY                                                  0557
*         ICTMOD BASED(CCAICMOD);   /* ADDRESS ENTIRE MOD SECTION  0557
*                                                            @Z67SP00*/
*       DO NN=1 BY 1 WHILE ICTMEND(NN)^=ICTENDNT;/*          @Z67SP00*/
         LA    @12,1                                               0558
         STH   @12,NN                                              0558
         B     @DE00558                                            0558
@DL00558 DS    0H                                                  0559
*         IF ICTMNAME(NN)=CHKMNAME  /* NAMES MATCH           @Z67SP00*/
*             &ICTMFMID(NN)=CHKMFMID/* FMIDS MATCH           @Z67SP00*/
*             &ADDR(ICTMOD(NN))^=MODENT@/* DIFFERENT ENTRY   @Z67SP00*/
*             &(ICTMFLG1(NN)=CK1FLG1/* REPL TO CHECK         @Z67SP00*/
*             ×ICTMFLG1(NN)=CKAFLG1)/* REPL TO CHECK         @Z67SP00*/
*             &ICTMISEL(NN)=ON      /* SELECTED              @Z67SP00*/
*             &(ICTPPTR(NN)->ICTPCPL(1)=ON/* SMD COMPLETE    @Z67SP00*/
*             ×ICTPPTR(NN)->ICTPECPL(1)=ON)/* ELEM COMPLETE  @Z67SP00*/
*             &ICTPPTR(NN)->ICTPNOGO(1)=OFF/* SMD NOT NOGO   @Z67SP00*/
*             &ICTPPTR(NN)->ICTPDEXP(1)=OFF/* SMD NOT DELETED      0559
*                                                            @Z67SP00*/
*             &ICTPPTR(NN)->ICTPDIMP(1)=OFF/* SMD NOT DELETED      0559
*                                                            @Z67SP00*/
*             &ICTPPTR(NN)->ICTPGELM(1)=OFF/* SMD NOT ELIMIN.      0559
*                                                            @Z67SP00*/
*           THEN                                                   0559
         LH    @12,NN                                              0559
         MH    @12,@CH01991                                        0559
         L     @08,CCAICMOD(,CCAPTR)                               0559
         ST    @12,@TF00001                                        0559
         ALR   @12,@08                                             0559
         AL    @12,@CF02023                                        0559
         CLC   ICTMNAME(8,@12),CHKMNAME                            0559
         BNE   @RF00559                                            0559
         LR    @12,@08                                             0559
         AL    @12,@TF00001                                        0559
         AL    @12,@CF02024                                        0559
         CLC   ICTMFMID-88(7,@12),CHKMFMID                         0559
         BNE   @RF00559                                            0559
         L     @12,@TF00001                                        0559
         AL    @12,@CF02023                                        0559
         LA    @12,ICTMOD(@12,@08)                                 0559
         L     @15,@PC00006                                        0559
         C     @12,MODENT@(,@15)                                   0559
         BE    @RF00559                                            0559
         LR    @12,@08                                             0559
         AL    @12,@TF00001                                        0559
         AL    @12,@CF02025                                        0559
         CLC   ICTMFLG1-9(1,@12),CK1FLG1                           0559
         BE    @GL00050                                            0559
         AL    @08,@TF00001                                        0559
         AL    @08,@CF02025                                        0559
         CLC   ICTMFLG1-9(1,@08),CKAFLG1                           0559
         BNE   @RF00559                                            0559
@GL00050 LH    @12,NN                                              0559
         MH    @12,@CH01991                                        0559
         L     @08,CCAICMOD(,CCAPTR)                               0559
         ST    @12,@TF00001                                        0559
         ALR   @12,@08                                             0559
         AL    @12,@CF02026                                        0559
         TM    ICTMISEL-11(@12),B'10000000'                        0559
         BNO   @RF00559                                            0559
         L     @12,@TF00001                                        0559
         AL    @08,@CF02027                                        0559
         L     @12,ICTPPTR-96(@12,@08)                             0559
         TM    ICTPCPL(@12),B'00100000'                            0559
         BO    @GL00048                                            0559
         TM    ICTPECPL(@12),B'01000000'                           0559
         BNO   @RF00559                                            0559
@GL00048 LH    @12,NN                                              0559
         MH    @12,@CH01991                                        0559
         L     @08,CCAICMOD(,CCAPTR)                               0559
         LA    @01,0(@12,@08)                                      0559
         AL    @01,@CF02027                                        0559
         L     @15,ICTPPTR-96(,@01)                                0559
         TM    ICTPNOGO(@15),B'01000000'                           0559
         BNZ   @RF00559                                            0559
         TM    ICTPDEXP(@15),B'00111000'                           0559
         BNZ   @RF00559                                            0559
*           DO;                                                    0560
*                                                                  0560
*             /*******************************************************/
*             /*                                                     */
*             /* CHECK THE OTHER SELECTED ELEMENT TO INSURE THAT THE */
*             /* SYSMOD SUPPLYING THE ELEMENT PASSED PREREQS OR SUPS */
*             /* THE SYSMOD WHICH SUPPLIED THE OTHER SELECTED ELEMENT*/
*             /*                                             @Z67SP00*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0561
*             NSMODID=ICTMRMID(NN); /* OTHER SELECTED ELEM'S RMID    */
         ALR   @08,@12                                             0561
         AL    @08,@CF02028                                        0561
         MVC   NSMODID(7),ICTMRMID-80(@08)                         0561
*             IF NSMODID=NULLPTF#   /* NO RMID ... MUST BE AN UPDATE */
*               THEN                                               0562
         CLC   NSMODID(7),@CC01732                                 0562
         BNE   @RF00562                                            0562
*               NSMODID=ICTPPTR(NN)->ICTPTFS(1);/* USE SYSMOD ID     */
         MVC   NSMODID(7),ICTPTFS(@15)                             0563
*             CALL HMASMTPS(MODENT@->ICTPPTR(1),/* SYSMOD - THIS   0564
*                                      SELECTD ELEMENT               */
*                 NSMODID,          /* MODID - OTHER SELECTED ELEM.  */
*                 TPSRTN);          /*                       @Z67SP00*/
@RF00562 MVC   @AL00001+4(8),@AL00564                              0564
         L     @12,@PC00006                                        0564
         L     @12,MODENT@(,@12)                                   0564
         LA    @12,ICTPPTR(,@12)                                   0564
         ST    @12,@AL00001                                        0564
         L     @15,@CV01724                                        0564
         LA    @01,@AL00001                                        0564
         BALR  @14,@15                                             0564
*             IF TPSRTN^=PRESUP     /* MODID NOT PRE/SUPD    @Z67SP00*/
*               THEN                                               0565
         CLI   TPSRTN,232                                          0565
         BE    @RF00565                                            0565
*               DO;                                                0566
*                 XNDX=1;           /* "MID LIST" INDEX      @Z67SP00*/
         MVC   XNDX(4),@CF00087                                    0567
*                 XMID(1)=ICTPPTR(NN)->ICTPTF(1);/* PUT SYSMOD BEING
*                                      REGRESSD IN "MID LIST"      0568
*                                                            @Z67SP00*/
         LH    @12,NN                                              0568
         MH    @12,@CH01991                                        0568
         L     @08,CCAICMOD(,CCAPTR)                               0568
         AL    @08,@CF02027                                        0568
         L     @12,ICTPPTR-96(@12,@08)                             0568
         MVC   XMID(7),ICTPTF(@12)                                 0568
*                 RGI=1;            /* SET REGRESSION FLAG   @Z67SP00*/
         MVI   RGI,X'01'                                           0569
*                 CALL IDUUPPTF(MODENT@,/* SELECTED MOD ENTRY      0570
*                                                            @Z67SP00*/
*                     ADDR(XMIDLS), /* "MID LIST"            @Z67SP00*/
*                     XNDX,         /* "MID LIST" INDEX      @Z67SP00*/
*                     RGI);         /* REGRESSION FLAG       @Z67SP00*/
         MVC   @AL00001+4(12),@AL00570                             0570
         L     @12,@PC00006                                        0570
         ST    @12,@AL00001                                        0570
         LA    @12,XMIDLS                                          0570
         ST    @12,@AFTEMPS                                        0570
         LA    @01,@AL00001                                        0570
         BAL   @14,IDUUPPTF                                        0570
*               END;                /*                       @Z67SP00*/
*           END;                    /*                       @Z67SP00*/
@RF00565 DS    0H                                                  0573
*       END;                        /*                       @Z67SP00*/
@RF00559 LA    @12,1                                               0573
         AH    @12,NN                                              0573
         STH   @12,NN                                              0573
@DE00558 LH    @12,NN                                              0573
         MH    @12,@CH01991                                        0573
         L     @08,CCAICMOD(,CCAPTR)                               0573
         AL    @08,@CF02023                                        0573
         L     @12,ICTMEND(@12,@08)                                0573
         CL    @12,ICTENDNT                                        0573
         BNE   @DL00558                                            0573
*     END;                          /* SEL. ELEM. CHECK      @Z67SP00*/
*   RETURN;                         /*                       @Z67SP00*/
@EL00006 DS    0H                                                  0575
@EF00006 DS    0H                                                  0575
@ER00006 LM    @14,@12,@SA00006                                    0575
         BR    @14                                                 0575
*   END REGICTCK;                   /*                       @Z67SP00*/
         B     @EL00006                                            0576
*                                                                  0577
*/********************************************************************/
*/*                                                                  */
*/*  UPDICT    - GATHER UP ALL UPDATES IN THE ICT FOR THE            */
*/*              REPLACEMENT-TYPE ELEMENT BEING PROCESSED            */
*/*              (WHOSE ICT MOD ENTRY IS POINTED TO BY ENTICT@)      */
*/*              AND ADD THEM ASM UMIDS TO THE (A)CDS ELEMENT        */
*/*              IOP                                                 */
*/*                                                                  */
*/*              ON EXIT:                                            */
*/*                                                                  */
*/*              REWRITE - '1' IF ANY UMIDS ADDED TO IOP             */
*/*                                                                  */
*/*                                                          @Z67SP00*/
*/********************************************************************/
*                                                                  0577
*UPDICT:                                                           0577
*   PROC(ELEMIOP,UPDICTRC);         /*                       @Z67SP00*/
UPDICT   STM   @14,@12,@SA00007                                    0577
         MVC   @PC00007(8),0(@01)                                  0577
*   DCL                                                            0578
*     ELEMIOP CHAR(*);              /* (A)CDS ELEMENT IOP    @Z67SP00*/
*   DCL                                                            0579
*     UPDICTRC FIXED(31);           /* RETURN CODE PARM.     @Z67SP00*/
*   DCL                                                            0580
*     1 ELMTYPE BIT(8),             /* ICTMFLG1 "MAPPING"    @Z67SP00*/
*      2 * BIT(1),                  /* MOD REPL              @Z67SP00*/
*      2 * BIT(1),                  /* ASSEMBLY              @Z67SP00*/
*      2 ELMZAP BIT(1),             /* ZAP                   @Z67SP00*/
*      2 * BIT(1),                  /* EXPAND ZAP            @Z67SP00*/
*      2 * BIT(1),                  /* MAC REPL              @Z67SP00*/
*      2 ELMMACU BIT(1),            /* MAC UPDATE            @Z67SP00*/
*      2 * BIT(1),                  /* SRC REPL              @Z67SP00*/
*      2 ELMSRCU BIT(1);            /* SRC UPDATE            @Z67SP00*/
*   DCL                                                            0581
*     ELMNAME CHAR(8);              /* ELEMENT NAME          @Z67SP00*/
*   DCL                                                            0582
*     KK FIXED(15);                 /* INDEX                 @Z67SP00*/
*   RESPECIFY                                                      0583
*     ICTMOD BASED(ENTICT@);        /* ADDRESS ICT MOD SECT ENTRY  0583
*                                      BEING PROCESSED       @Z67SP00*/
*   RESPECIFY                                                      0584
*     HMASMIOP BASED(ADDR(ELEMIOP));/* ADDRESS IOP PASSED    @Z67SP00*/
*   UPDICTRC=ZERO;                  /* CLEAR RETURN PARM     @Z67SP00*/
         L     @12,@PC00007+4                                      0585
         SLR   @08,@08                                             0585
         ST    @08,UPDICTRC(,@12)                                  0585
*   ELMNAME=ICTMNAME(1);            /* SAVE ELEMENT NAME     @Z67SP00*/
*                                                                  0586
         L     @12,ENTICT@                                         0586
         MVC   ELMNAME(8),ICTMNAME(@12)                            0586
*   /*****************************************************************/
*   /*                                                               */
*   /* SET ELMTYPE BITS TO FIND UPDATES WHICH GO WITH THE            */
*   /* ELEMENT-TYPE PASSED                                   @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0587
*   ELMTYPE=''B;                    /* CLEAR ALL BITS        @Z67SP00*/
         MVI   ELMTYPE,X'00'                                       0587
*   IF ICTMMOD(1)=ON                /* MOD REPL              @Z67SP00*/
*     THEN                                                         0588
         TM    ICTMMOD(@12),B'10000000'                            0588
         BNO   @RF00588                                            0588
*     ELMZAP=ON;                    /* ... LOOK FOR ZAPS     @Z67SP00*/
         OI    ELMZAP,B'00100000'                                  0589
*   IF ICTMMACR(1)=ON               /* MAC REPL              @Z67SP00*/
*     THEN                                                         0590
@RF00588 L     @12,ENTICT@                                         0590
         TM    ICTMMACR(@12),B'00001000'                           0590
         BNO   @RF00590                                            0590
*     ELMMACU=ON;                   /* ... LOOK FOR MACUPDS  @Z67SP00*/
         OI    ELMMACU,B'00000100'                                 0591
*   IF ICTMSRCR(1)=ON               /* SRC REPL              @Z67SP00*/
*     THEN                                                         0592
@RF00590 L     @12,ENTICT@                                         0592
         TM    ICTMSRCR(@12),B'00000010'                           0592
         BNO   @RF00592                                            0592
*     ELMSRCU=ON;                   /* ... LOOK FOR SRCUPDS  @Z67SP00*/
*                                                                  0593
         OI    ELMSRCU,B'00000001'                                 0593
*   /*****************************************************************/
*   /*                                                               */
*   /* GO THRU THE ICT MOD SECTION                           @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0594
*   RESPECIFY                                                      0594
*     ICTMOD BASED(CCAICMOD);       /* ADDRESS MOD SECT.     @Z67SP00*/
@RF00592 DS    0H                                                  0595
*   DO KK=1 BY 1 WHILE ICTMEND(KK)^=ICTENDNT/*               @Z67SP00*/
*         &UPDICTRC<STOPPTF;        /*                       @Z67SP00*/
         LA    @12,1                                               0595
         STH   @12,KK                                              0595
         B     @DE00595                                            0595
@DL00595 DS    0H                                                  0596
*     IF ICTMNAME(KK)=ELMNAME       /* ELEMENT NAMES MATCH   @Z67SP00*/
*         &ICTMFLG1(KK)=ELMTYPE     /* CORRESPONDING UPDATE  @Z67SP00*/
*         &ICTMISEL(KK)=ON          /* SELECTED              @Z67SP00*/
*         &(ICTPPTR(KK)->ICTPCPL(1)=ON/* SYSMOD COMPLETE     @Z67SP00*/
*         ×ICTPPTR(KK)->ICTPECPL(1)=ON)/* ELEMENT COMPLETE   @Z67SP00*/
*       THEN                                                       0596
         LH    @12,KK                                              0596
         MH    @12,@CH01991                                        0596
         L     @08,CCAICMOD(,CCAPTR)                               0596
         ST    @12,@TF00001                                        0596
         ALR   @12,@08                                             0596
         AL    @12,@CF02023                                        0596
         CLC   ICTMNAME(8,@12),ELMNAME                             0596
         BNE   @RF00596                                            0596
         LR    @12,@08                                             0596
         AL    @12,@TF00001                                        0596
         AL    @12,@CF02025                                        0596
         CLC   ICTMFLG1-9(1,@12),ELMTYPE                           0596
         BNE   @RF00596                                            0596
         LR    @12,@08                                             0596
         AL    @12,@TF00001                                        0596
         AL    @12,@CF02026                                        0596
         TM    ICTMISEL-11(@12),B'10000000'                        0596
         BNO   @RF00596                                            0596
         L     @12,@TF00001                                        0596
         AL    @08,@CF02027                                        0596
         L     @12,ICTPPTR-96(@12,@08)                             0596
         TM    ICTPCPL(@12),B'00100000'                            0596
         BO    @RT00596                                            0596
         TM    ICTPECPL(@12),B'01000000'                           0596
         BNO   @RF00596                                            0596
@RT00596 DS    0H                                                  0597
*       DO;                         /*                       @Z67SP00*/
*                                                                  0597
*         /***********************************************************/
*         /*                                                         */
*         /* PUT UPDATE ELEMENT'S PTF# IN LIST AS UMID       @Z67SP00*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0598
*         ICTMMIDU(KK)=ON;          /* (A)CDS UPDATED WITH THIS    0598
*                                      ELEM'S SYSMOD #       @Z67SP00*/
         LH    @12,KK                                              0598
         MH    @12,@CH01991                                        0598
         L     @08,CCAICMOD(,CCAPTR)                               0598
         ST    @12,@TF00001                                        0598
         ALR   @12,@08                                             0598
         AL    @12,@CF02029                                        0598
         OI    ICTMMIDU-8(@12),B'00000100'                         0598
*         VLPFUNCT=VLPADD;          /* ADD ...               @Z67SP00*/
         MVI   VLPFUNCT,X'01'                                      0599
*         VLPTYPE=IOPUMID;          /* UMID SUBENTRY ...     @Z67SP00*/
         MVI   VLPTYPE,X'32'                                       0600
*         VLPLPTR=ADDR(IOPPNTRY(1));/* TO IOP VARIABLE SECT  @Z67SP00*/
         L     @12,@PC00007                                        0601
         LA    @12,IOPPNTRY(,@12)                                  0601
         ST    @12,VLPLPTR                                         0601
*         VLPDATA=ICTPPTR(KK)->ICTPTFS(1);/* UMID SYSMOD     @Z67SP00*/
         MVI   VLPDATA+7,C' '                                      0602
         L     @12,@TF00001                                        0602
         AL    @08,@CF02027                                        0602
         L     @12,ICTPPTR-96(@12,@08)                             0602
         MVC   VLPDATA(7),ICTPTFS(@12)                             0602
*         VLPDATA(8)=''B;           /*                       @Z67SP00*/
         MVI   VLPDATA+7,X'00'                                     0603
*         VLPDLEN=LENGTH(IOPMACID); /* LEN OF KEY IN DATA    @Z67SP00*/
         MVI   VLPDLEN,X'07'                                       0604
*         VLPSTYPE=TXTUMID;         /*                       @Z67SP00*/
         MVC   VLPSTYPE(16),@CC01747                               0605
*         CALL HMASMVLU(HMASMVLP);  /*                       @Z67SP00*/
         L     @15,@CV01722                                        0606
         LA    @01,@AL00606                                        0606
         BALR  @14,@15                                             0606
*         IF VLPRETRN>=VLPPEEXC     /* PEMAX EXCEEDED        @Z67SP00*/
*           THEN                                                   0607
         CLI   VLPRETRN,8                                          0607
         BL    @RF00607                                            0607
*           UPDICTRC=MAX(UPDICTRC,VLPRETRN);/*               @Z67SP00*/
         L     @12,@PC00007+4                                      0608
         L     @08,UPDICTRC(,@12)                                  0608
         SLR   @15,@15                                             0608
         IC    @15,VLPRETRN                                        0608
         CR    @08,@15                                             0608
         BNL   *+6
         LR    @08,@15                                             0608
         ST    @08,UPDICTRC(,@12)                                  0608
*         ELSE                                                     0609
*           REWRITE=ON;             /* ADDED TO IOP SUB-ENT. @Z67SP00*/
         B     @RC00607                                            0609
@RF00607 OI    REWRITE,B'00010000'                                 0609
*       END;                        /*                       @Z67SP00*/
@RC00607 DS    0H                                                  0611
*   END;                            /* END LOOP THRU MODS    @Z67SP00*/
@RF00596 LA    @12,1                                               0611
         AH    @12,KK                                              0611
         STH   @12,KK                                              0611
@DE00595 LH    @12,KK                                              0611
         MH    @12,@CH01991                                        0611
         L     @08,CCAICMOD(,CCAPTR)                               0611
         AL    @08,@CF02023                                        0611
         L     @12,ICTMEND(@12,@08)                                0611
         CL    @12,ICTENDNT                                        0611
         BE    @DC00595                                            0611
         L     @12,@PC00007+4                                      0611
         L     @12,UPDICTRC(,@12)                                  0611
         CH    @12,@CH00112                                        0611
         BL    @DL00595                                            0611
@DC00595 DS    0H                                                  0612
*   RETURN;                         /*                       @Z67SP00*/
@EL00007 DS    0H                                                  0612
@EF00007 DS    0H                                                  0612
@ER00007 LM    @14,@12,@SA00007                                    0612
         BR    @14                                                 0612
*   END UPDICT;                     /*                       @Z67SP00*/
*                                                                  0614
*/********************************************************************/
*/*                                                                  */
*/*  RESTREG   - DETERMINE THE ELEMENT SUB-ENTRIES IN CDS SYSMOD     */
*/*              ENTRIES THAT SHOULD BE MADE NON-REGRESSED           */
*/*                                                                  */
*/*              ON ENTRY:                                           */
*/*                                                                  */
*/*              ENTNAME  - NAME OF ELEMENT BEING PROCESSED          */
*/*                                                                  */
*/*              ENTICT@  - PTR TO ICT MOD SECT. ENTRY FOR           */
*/*                         "CURRENT" ELEMENT                        */
*/*                                                                  */
*/*              ENTPPIND - TYPE OF ELEMENT BEING PROCESSED          */
*/*                         (IOPPIND VALUE)                          */
*/*                                                                  */
*/*                                                          @Z67SP00*/
*/********************************************************************/
*                                                                  0614
*RESTREG:                                                          0614
*   PROC;                           /*                       @Z67SP00*/
RESTREG  STM   @14,@12,@SA00008                                    0614
*   DCL                                                            0615
*     DSIDSAVE FIXED(8);            /* SAVE AREA FOR IOPDSID @Z67SP00*/
*   DCL                                                            0616
*     ENTRPIND FIXED(8);            /* REGRESSEED IOPPIND    @Z67SP00*/
*   DCL                                                            0617
*     LL FIXED(31);                 /* INDEX - ACDS MID LIST @Z67SP00*/
*   DCL                                                            0618
*     MM FIXED(15);                 /* INDEX - IOP SUB-ENTRY @Z67SP00*/
*   RESPECIFY                                                      0619
*     HMASMIOP BASED(IOPPTR);       /* ADDRESS IOP           @Z67SP00*/
*   RESPECIFY                                                      0620
*     ICTMOD BASED(ENTICT@);        /* ADDRESS "CURRENT" MOD @Z67SP00*/
*   RESPECIFY                                                      0621
*     ICTMIDLS BASED(ICTMICHA(1));  /* ADDRESS ACDS MODIDS   @Z67SP00*/
*   DSIDSAVE=IOPDSID;               /* SAVE IOPDSID          @Z67SP00*/
         L     @12,IOPPTR                                          0622
         MVC   DSIDSAVE(1),IOPDSID(@12)                            0622
*   ENTRPIND=ENTPPIND+IOPPREG;      /* REGRESSED SUB-ENTRY VALUE FOR
*                                      CURRENT ELEMENT       @Z67SP00*/
         IC    @12,ENTPPIND                                        0623
         LA    @12,80(,@12)                                        0623
         STC   @12,ENTRPIND                                        0623
*                                                                  0624
*   /*****************************************************************/
*   /*                                                               */
*   /* GO THRU THE ACDS MODID LIST AND DETERMINE WHETHER THE CURRENT */
*   /* ELEMENT IS REGRESSED IN ANY ACDS SYSMOD IN THE MODID LIST     */
*   /*                                                       @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0624
*   DO LL=1 BY 1 WHILE ICTMIDND(LL)^=ICTENDIX;/*             @Z67SP00*/
         LA    @12,1                                               0624
         ST    @12,LL                                              0624
         B     @DE00624                                            0624
@DL00624 DS    0H                                                  0625
*     IF ICTMIDTY(LL)=ICTMIDRM      /* RMID                  @Z67SP00*/
*         ×ICTMIDTY(LL)=ICTMIDUP    /* UMID                  @Z67SP00*/
*       THEN                                                       0625
         L     @12,LL                                              0625
         SLA   @12,3                                               0625
         L     @08,ENTICT@                                         0625
         L     @08,ICTMICHA(,@08)                                  0625
         ALR   @08,@12                                             0625
         BCTR  @08,0                                               0625
         TM    ICTMIDTY-7(@08),B'00000001'                         0625
         BNO   @GL00061                                            0625
         TM    ICTMIDTY-7(@08),B'00000010'                         0625
         BZ    @RT00625                                            0625
@GL00061 L     @12,LL                                              0625
         SLA   @12,3                                               0625
         L     @08,ENTICT@                                         0625
         L     @08,ICTMICHA(,@08)                                  0625
         ALR   @08,@12                                             0625
         BCTR  @08,0                                               0625
         TM    ICTMIDTY-7(@08),B'00000011'                         0625
         BNZ   @RF00625                                            0625
@RT00625 DS    0H                                                  0626
*       DO;                         /*                       @Z67SP00*/
*                                                                  0626
*         /***********************************************************/
*         /*                                                         */
*         /* ACCESS ACDS SYSMOD ENTRY FOR RMID OR UMID       @Z67SP00*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0627
*         IOPNAM17=ICTMID(LL);      /* ENTRY TO LOCATE       @Z67SP00*/
         L     @12,IOPPTR                                          0627
         L     @08,LL                                              0627
         SLA   @08,3                                               0627
         L     @01,ENTICT@                                         0627
         L     @01,ICTMICHA(,@01)                                  0627
         ALR   @01,@08                                             0627
         AL    @01,@CF02010                                        0627
         MVC   IOPNAM17(7,@12),ICTMID(@01)                         0627
*         IOPFUNCT=IOPLOC;          /*                       @Z67SP00*/
         MVI   IOPFUNCT(@12),X'03'                                 0628
*         IOPTYPE=IOPSMD;           /* ... SYSMOD ENTRY      @Z67SP00*/
         MVI   IOPTYPE(@12),X'0B'                                  0629
*         IOPDSID=IOPACDS;          /* ... ON ACDS           @Z67SP00*/
         MVI   IOPDSID(@12),X'0C'                                  0630
*         CALL HMASMIO(HMASMIOP);   /*                       @Z67SP00*/
         ST    @12,@AL00001                                        0631
         L     @15,@CV01721                                        0631
         LA    @01,@AL00001                                        0631
         BALR  @14,@15                                             0631
*         IF IOPRETRN=IOPGOOD       /* LOCATE SUCCESSFUL     @Z67SP00*/
*           THEN                                                   0632
         L     @12,IOPPTR                                          0632
         CLI   IOPRETRN(@12),0                                     0632
         BNE   @RF00632                                            0632
*           DO;                     /*                       @Z67SP00*/
*                                                                  0633
*             /*******************************************************/
*             /*                                                     */
*             /* CHECK SYSMOD SUBENTRIES TO DETERMINE WHETHER OR NOT */
*             /* THE CURRENT ELEMENT IS REGRESSED IN THE ACDS SYSMOD */
*             /* ENTRY                                       @Z67SP00*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0634
*             ENTCDSU=OFF;          /* LOOP CONTROL          @Z67SP00*/
         NI    ENTCDSU,B'01111111'                                 0634
*             DO MM=1 BY 1 WHILE IOPPTFND(MM)^=IOPEOLST/*    @Z67SP00*/
*                   &ENTCDSU=OFF;   /* ELEM. SUBENTRY ^FOUND @Z67SP00*/
         LA    @12,1                                               0635
         STH   @12,MM                                              0635
         B     @DE00635                                            0635
@DL00635 DS    0H                                                  0636
*               IF IOPPMODS(MM)=ENTNAME/* MATCH NAME         @Z67SP00*/
*                   &(IOPPIND(MM)=ENTPPIND/* MATCH TYPE      @Z67SP00*/
*                   ×IOPPIND(MM)=ENTRPIND)/* MATCH TYPE      @Z67SP00*/
*                 THEN                                             0636
         L     @12,IOPPTR                                          0636
         LH    @08,MM                                              0636
         MH    @08,@CH00033                                        0636
         ST    @08,@TF00001                                        0636
         ALR   @08,@12                                             0636
         CLC   IOPPMODS-9(8,@08),ENTNAME                           0636
         BNE   @RF00636                                            0636
         LR    @08,@12                                             0636
         AL    @08,@TF00001                                        0636
         CLC   IOPPIND-9(1,@08),ENTPPIND                           0636
         BE    @RT00636                                            0636
         L     @08,@TF00001                                        0636
         SLR   @15,@15                                             0636
         IC    @15,IOPPIND-9(@08,@12)                              0636
         SLR   @12,@12                                             0636
         IC    @12,ENTRPIND                                        0636
         CR    @15,@12                                             0636
         BNE   @RF00636                                            0636
@RT00636 DS    0H                                                  0637
*                 DO;               /*                       @Z67SP00*/
*                   ENTCDSU=ON;     /* STOP LOOP             @Z67SP00*/
         OI    ENTCDSU,B'10000000'                                 0638
*                   IF IOPPIND(MM)=ENTRPIND/* REGRESSED ELM  @Z67SP00*/
*                     THEN                                         0639
         LH    @12,MM                                              0639
         MH    @12,@CH00033                                        0639
         L     @08,IOPPTR                                          0639
         SLR   @15,@15                                             0639
         IC    @15,IOPPIND-9(@12,@08)                              0639
         SLR   @12,@12                                             0639
         IC    @12,ENTRPIND                                        0639
         CR    @15,@12                                             0639
         BNE   @RF00639                                            0639
*                     ICTMIDRG(LL)=ON;/* SET MID LIST FLAG   @Z67SP00*/
         L     @12,LL                                              0640
         SLA   @12,3                                               0640
         L     @08,ENTICT@                                         0640
         L     @08,ICTMICHA(,@08)                                  0640
         ALR   @08,@12                                             0640
         BCTR  @08,0                                               0640
         OI    ICTMIDRG-7(@08),B'00001000'                         0640
*                   ELSE                                           0641
*                     ICTMIDRG(LL)=OFF;/* CLR MID LIST FLAG  @Z67SP00*/
         B     @RC00639                                            0641
@RF00639 L     @12,LL                                              0641
         SLA   @12,3                                               0641
         L     @08,ENTICT@                                         0641
         L     @08,ICTMICHA(,@08)                                  0641
         ALR   @08,@12                                             0641
         BCTR  @08,0                                               0641
         NI    ICTMIDRG-7(@08),B'11110111'                         0641
*                 END;              /* ELEM. IN ACDS IOP     @Z67SP00*/
@RC00639 DS    0H                                                  0643
*             END;                  /* LOOP THRU SUB-ENTRIES @Z67SP00*/
@RF00636 LA    @12,1                                               0643
         AH    @12,MM                                              0643
         STH   @12,MM                                              0643
@DE00635 LH    @12,MM                                              0643
         MH    @12,@CH00033                                        0643
         L     @08,IOPPTR                                          0643
         SLR   @15,@15                                             0643
         IC    @15,IOPPTFND-9(@12,@08)                             0643
         CH    @15,@CH00709                                        0643
         BE    @DC00635                                            0643
         TM    ENTCDSU,B'10000000'                                 0643
         BZ    @DL00635                                            0643
@DC00635 DS    0H                                                  0644
*           END;                    /* MODID FOUND ON ACDS   @Z67SP00*/
*       END;                        /* RMID OR UMID          @Z67SP00*/
@RF00632 DS    0H                                                  0646
*   END;                            /* LOOP THRU MODID LIST  @Z67SP00*/
@RF00625 LA    @12,1                                               0646
         AL    @12,LL                                              0646
         ST    @12,LL                                              0646
@DE00624 L     @12,LL                                              0646
         SLA   @12,3                                               0646
         L     @08,ENTICT@                                         0646
         L     @08,ICTMICHA(,@08)                                  0646
         AL    @08,@CF02010                                        0646
         L     @12,ICTMIDND(@12,@08)                               0646
         CL    @12,ICTENDIX                                        0646
         BNE   @DL00624                                            0646
*   IOPDSID=DSIDSAVE;               /* RESTORE IOPDSID       @Z67SP00*/
*                                                                  0647
         L     @12,IOPPTR                                          0647
         MVC   IOPDSID(1,@12),DSIDSAVE                             0647
*   /*****************************************************************/
*   /*                                                               */
*   /* GO THRU THE ACDS MODID LIST USING THE ICTMIDRG FLAGS SET      */
*   /* ABOVE. FOR EVERY MODID IN THE ACDS MODID LIST WHICH IS NOT    */
*   /* MARKED "REGRESSED", MAKE SURE THAT SUB-ENTRY FOR THE CURRENT  */
*   /* ELEMENT IN THE CORRESPONDING CDS SYSMOD ENTRY IS ALSO NOT     */
*   /* REGRESSED                                             @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0648
*   DO LL=1 BY 1 WHILE ICTMIDND(LL)^=ICTENDIX;/*             @Z67SP00*/
         LA    @12,1                                               0648
         ST    @12,LL                                              0648
         B     @DE00648                                            0648
@DL00648 DS    0H                                                  0649
*     IF(ICTMIDTY(LL)=ICTMIDRM      /* RMID                  @Z67SP00*/
*         ×ICTMIDTY(LL)=ICTMIDUP)   /* UMID                  @Z67SP00*/
*         &ICTMIDRG(LL)=OFF         /* NOT REGRESSED IN THIS SYSMOD
*                                      ENTRY ON ACDS         @Z67SP00*/
*       THEN                                                       0649
         L     @12,LL                                              0649
         SLA   @12,3                                               0649
         L     @08,ENTICT@                                         0649
         L     @08,ICTMICHA(,@08)                                  0649
         ALR   @08,@12                                             0649
         BCTR  @08,0                                               0649
         TM    ICTMIDTY-7(@08),B'00000001'                         0649
         BNO   @GL00066                                            0649
         TM    ICTMIDTY-7(@08),B'00000010'                         0649
         BZ    @GL00065                                            0649
@GL00066 L     @12,LL                                              0649
         SLA   @12,3                                               0649
         L     @08,ENTICT@                                         0649
         L     @08,ICTMICHA(,@08)                                  0649
         ALR   @08,@12                                             0649
         BCTR  @08,0                                               0649
         TM    ICTMIDTY-7(@08),B'00000011'                         0649
         BNZ   @RF00649                                            0649
@GL00065 L     @12,LL                                              0649
         SLA   @12,3                                               0649
         L     @08,ENTICT@                                         0649
         L     @01,ICTMICHA(,@08)                                  0649
         ALR   @01,@12                                             0649
         BCTR  @01,0                                               0649
         TM    ICTMIDRG-7(@01),B'00001000'                         0649
         BNZ   @RF00649                                            0649
*       DO;                         /*                       @Z67SP00*/
*                                                                  0650
*         /***********************************************************/
*         /*                                                         */
*         /* CURRENT ELEMENT IS NOT REGRESSED IN ACDS SYSMOD ENTRY   */
*         /* ... MAKE SURE THE ELEMENT IS NOT REGRESSED IN THE       */
*         /* CORRESPONDING CDS SYSMOD ENTRY                  @Z67SP00*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0651
*         RGI=0;                    /* CLEAR REGRESSION      @Z67SP00*/
         MVI   RGI,X'00'                                           0651
*         CALL IDUUPPTF(ENTICT@,    /* CURRENT ELEMENT       @Z67SP00*/
*             ADDR(ICTMIDLS),       /* ACDS MODID LIST       @Z67SP00*/
*             LL,                   /* INDEX TO SYSMOD WHOSE ELEMENT
*                                      SUB-ENTRY IS TO BE          0652
*                                      NON-REGRESSED         @Z67SP00*/
*             RGI);                 /* ACTION PARM           @Z67SP00*/
         MVC   @AL00001(16),@AL00652                               0652
         LA    @12,ICTMICHA(,@08)                                  0652
         ST    @12,@AL00001+4                                      0652
         LA    @01,@AL00001                                        0652
         BAL   @14,IDUUPPTF                                        0652
*       END;                        /* NON-REGRESSED ELEM    @Z67SP00*/
*   END;                            /* LOOP THRU MID LIST    @Z67SP00*/
@RF00649 LA    @12,1                                               0654
         AL    @12,LL                                              0654
         ST    @12,LL                                              0654
@DE00648 L     @12,LL                                              0654
         SLA   @12,3                                               0654
         L     @08,ENTICT@                                         0654
         L     @08,ICTMICHA(,@08)                                  0654
         AL    @08,@CF02010                                        0654
         L     @12,ICTMIDND(@12,@08)                               0654
         CL    @12,ICTENDIX                                        0654
         BNE   @DL00648                                            0654
*   END RESTREG;                    /*                       @Z67SP00*/
@EL00008 DS    0H                                                  0655
@EF00008 DS    0H                                                  0655
@ER00008 LM    @14,@12,@SA00008                                    0655
         BR    @14                                                 0655
*                                                                  0656
*/********************************************************************/
*/*                                                                  */
*/*  ELEMINIT  - INITIALIZE FOR ELEMENT PROCESSING                   */
*/*                                                                  */
*/*              ON EXIT:                                            */
*/*                                                                  */
*/*              ENTNAME  - NAME OF ELEMENT BEING PROCESSED          */
*/*                                                                  */
*/*              ENTTYPE  - IOPTYPE VALUE FOR (A)CDS ELEMENT ENTRY   */
*/*                                                                  */
*/*              ENTPPIND - IOPPIND VALUE FOR ELEMENT SUB-ENTRY      */
*/*                         IN (A)CDS SYSMOD ENTRY                   */
*/*                                                                  */
*/*              ENTALIAS - IOPMCIND VALUE FOR ALIAS NAME SUB-ENTRY  */
*/*                         IN (A)CDS SYSMOD ENTRY                   */
*/*                                                                  */
*/*              ENTETYPE - 'R' - REPLACEMENT-TYPE ELEMENT           */
*/*                         'U' - UPDATE-TYPE ELEMENT                */
*/*                         'N' - INVALID ELEMENT TYPE               */
*/*                                                                  */
*/*              VLPMTYPE - ELEMENT TYPE (MOD/MAC/SRC)               */
*/*                                                                  */
*/*              VLPMNAME - ELEMENT NAME                             */
*/*                                                                  */
*/*                                                          @Z67SP00*/
*/********************************************************************/
*                                                                  0656
*ELEMINIT:                                                         0656
*   PROC(ELEM@);                    /*                       @Z67SP00*/
ELEMINIT STM   @14,@12,12(@13)                                     0656
         MVC   @PC00009(4),0(@01)                                  0656
*   DCL                                                            0657
*     ELEM@ PTR(31);                /* ICT MOD SECT ENTRY    @Z67SP00*/
*   RESPECIFY                                                      0658
*     ICTMOD BASED(ELEM@);          /* ADDRESS ENTRY PASSED  @Z67SP00*/
*   ENTNAME=ICTMNAME(1);            /* SET ENTRY NAME        @Z67SP00*/
         L     @12,@PC00009                                        0659
         L     @12,ELEM@(,@12)                                     0659
         MVC   ENTNAME(8),ICTMNAME(@12)                            0659
*   ENTTYPE=''B;                    /* CLEAR ENTRY TYPE      @Z67SP00*/
         SLR   @08,@08                                             0660
         STC   @08,ENTTYPE                                         0660
*   ENTPPIND=''B;                   /* CLEAR ENTRY TYPE      @Z67SP00*/
         MVI   ENTPPIND,X'00'                                      0661
*   ENTALIAS=''B;                   /* CLEAR ALIAS TYPE      @Z67SP00*/
         SLR   @08,@08                                             0662
         STC   @08,ENTALIAS                                        0662
*   IF ICTMMOD(1)=ON                /* ++MOD ?                       */
*       ×ICTMZAP(1)=ON              /* ++ZAP ?                       */
*     THEN                                                         0663
         TM    ICTMMOD(@12),B'10100000'                            0663
         BZ    @RF00663                                            0663
*     DO;                                                          0664
*       ENTTYPE=IOPMOD;             /* ENTRY TYPE IS MODULE          */
         MVI   ENTTYPE,X'05'                                       0665
*       SEPTR=ADDR(IOPMNTRY);       /* POINT TO SUBENTRIES           */
         L     @08,IOPPTR                                          0666
         LA    @08,IOPMNTRY(,@08)                                  0666
         ST    @08,SEPTR                                           0666
*       IF ICTMASM(1)=ON            /* ASSEMBLY              @Z67SP00*/
*         THEN                                                     0667
         TM    ICTMASM(@12),B'01000000'                            0667
         BNO   @RF00667                                            0667
*         ENTPPIND=IOPPASM;         /* IOPPIND VALUE         @Z67SP00*/
         MVI   ENTPPIND,X'08'                                      0668
*       ELSE                                                       0669
*         IF ICTMMOD(1)=ON          /* MOD                   @Z67SP00*/
*           THEN                                                   0669
         B     @RC00667                                            0669
@RF00667 L     @12,@PC00009                                        0669
         L     @12,ELEM@(,@12)                                     0669
         TM    ICTMMOD(@12),B'10000000'                            0669
         BNO   @RF00669                                            0669
*           DO;                                                    0670
*             ENTPPIND=IOPPMOD;     /* IOPPIND VALUE         @Z67SP00*/
         MVI   ENTPPIND,X'01'                                      0671
*             ENTALIAS=IOPMDTAL;    /* ALIAS VALUE FOR MOD   @Z67SP00*/
         MVI   ENTALIAS,X'02'                                      0672
*           END;                                                   0673
*         ELSE                                                     0674
*           ENTPPIND=IOPPZAP;       /* IOPPIND VALUE         @Z67SP00*/
         B     @RC00669                                            0674
@RF00669 MVI   ENTPPIND,X'02'                                      0674
*     END;                                                         0675
*   ELSE                                                           0676
*     IF ICTMMACR(1)=ON             /* ++MAC ?               @Z67SP00*/
*         ×ICTMMACU(1)=ON           /* ++UPDTE ?             @Z67SP00*/
*       THEN                                                       0676
         B     @RC00663                                            0676
@RF00663 L     @12,@PC00009                                        0676
         L     @12,ELEM@(,@12)                                     0676
         TM    ICTMMACR(@12),B'00001100'                           0676
         BZ    @RF00676                                            0676
*       DO;                                                        0677
*         ENTTYPE=IOPMAC;           /* ENTRY TYPE IS MACRO   @Z67SP00*/
         MVI   ENTTYPE,X'03'                                       0678
*         ENTALIAS=IOPMCMAL;        /* ALIAS VALUE FOR MAC   @Z67SP00*/
         MVI   ENTALIAS,X'02'                                      0679
*         SEPTR=ADDR(IOPMCENT);     /* POINT TO SUBENTRIES           */
         L     @08,IOPPTR                                          0680
         LA    @08,IOPMCENT(,@08)                                  0680
         ST    @08,SEPTR                                           0680
*         IF ICTMMACR(1)=ON         /* MAC REPL              @Z67SP00*/
*           THEN                                                   0681
         TM    ICTMMACR(@12),B'00001000'                           0681
         BNO   @RF00681                                            0681
*           ENTPPIND=IOPPMACR;      /* IOPPIND VALUE         @Z67SP00*/
         MVI   ENTPPIND,X'04'                                      0682
*         ELSE                      /*                       @Z67SP00*/
*           ENTPPIND=IOPPMACU;      /* IOPPIND VALUE         @Z67SP00*/
         B     @RC00681                                            0683
@RF00681 MVI   ENTPPIND,X'05'                                      0683
*       END;                                                       0684
*     ELSE                                                         0685
*       IF ICTMSRCR(1)=ON           /* ++SRC ?               @Z67SP00*/
*           ×ICTMSRCU(1)=ON         /* ++SRCUPD ?            @Z67SP00*/
*         THEN                                                     0685
         B     @RC00676                                            0685
@RF00676 L     @12,@PC00009                                        0685
         L     @12,ELEM@(,@12)                                     0685
         TM    ICTMSRCR(@12),B'00000011'                           0685
         BZ    @RF00685                                            0685
*         DO;                                                      0686
*           ENTTYPE=IOPSRC;         /* ENTRY TYPE IS SOURCE          */
         MVI   ENTTYPE,X'08'                                       0687
*           SEPTR=ADDR(IOPSNTRY);   /* POINT TO SUBENTRIES           */
         L     @08,IOPPTR                                          0688
         LA    @08,IOPSNTRY(,@08)                                  0688
         ST    @08,SEPTR                                           0688
*           IF ICTMSRCR(1)=ON       /* SRC REPL.             @Z67SP00*/
*             THEN                                                 0689
         TM    ICTMSRCR(@12),B'00000010'                           0689
         BNO   @RF00689                                            0689
*             ENTPPIND=IOPPSRCR;    /* IOPPIND VALUE         @Z67SP00*/
         MVI   ENTPPIND,X'06'                                      0690
*           ELSE                                                   0691
*             ENTPPIND=IOPPSRCU;    /* IOPPIND VALUE         @Z67SP00*/
         B     @RC00689                                            0691
@RF00689 MVI   ENTPPIND,X'07'                                      0691
*         END;                                                     0692
*                                                                  0692
@RC00689 DS    0H                                                  0693
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE ENTETYPE FOR IDUUPDAT AND IDURSTRE         @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0693
*   IF ICTMZAP(1)=ON                /* MOD UPDATE (IE,ZAP)   @Z67SP00*/
*       ×ICTMMACU(1)=ON             /* MAC UPDATE            @Z67SP00*/
*       ×ICTMSRCU(1)=ON             /* SRC UPDATE            @Z67SP00*/
*     THEN                                                         0693
@RF00685 DS    0H                                                  0693
@RC00676 DS    0H                                                  0693
@RC00663 L     @12,@PC00009                                        0693
         L     @12,ELEM@(,@12)                                     0693
         TM    ICTMZAP(@12),B'00100101'                            0693
         BZ    @RF00693                                            0693
*     ENTETYPE=IDUUPD;              /* UPDATE-TYPE ELEM.     @Z67SP00*/
         MVI   ENTETYPE,C'U'                                       0694
*   ELSE                                                           0695
*     IF ICTMMOD(1)=ON              /* MOD REPLACEMENT       @Z67SP00*/
*         ×ICTMMACR(1)=ON           /* MAC REPLACEMENT       @Z67SP00*/
*         ×ICTMSRCR(1)=ON           /* SRC REPLACEMENT       @Z67SP00*/
*       THEN                                                       0695
         B     @RC00693                                            0695
@RF00693 L     @12,@PC00009                                        0695
         L     @12,ELEM@(,@12)                                     0695
         TM    ICTMMOD(@12),B'10001010'                            0695
         BZ    @RF00695                                            0695
*       ENTETYPE=IDUREP;            /* REPLACEMENT-TYPE      @Z67SP00*/
         MVI   ENTETYPE,C'R'                                       0696
*     ELSE                                                         0697
*       ENTETYPE=IDUNONE;           /* INVALID ELEM. TYPE    @Z67SP00*/
         B     @RC00695                                            0697
@RF00695 MVI   ENTETYPE,C'N'                                       0697
*                                                                  0698
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE VLP FOR CALLS TO HMASMVLU                  @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0698
*   HMASMVLP=''B;                   /* CLEAR VLP             @Z67SP00*/
@RC00695 DS    0H                                                  0698
@RC00693 XC    HMASMVLP(52),HMASMVLP                               0698
*   VLPMNAME=ICTMNAME(1);           /* ELEMENT NAME          @Z67SP00*/
         L     @12,@PC00009                                        0699
         L     @12,ELEM@(,@12)                                     0699
         MVC   VLPMNAME(8),ICTMNAME(@12)                           0699
*   IF ICTMMOD(1)=ON                /* ++MOD                 @Z67SP00*/
*       ×ICTMZAP(1)=ON              /* ++ZAP                 @Z67SP00*/
*     THEN                          /*                       @Z67SP00*/
         TM    ICTMMOD(@12),B'10100000'                            0700
         BZ    @RF00700                                            0700
*     VLPMTYPE=CCATYPEA(IOPMOD);    /* "MOD" ENTRY           @Z67SP00*/
         L     @12,CCATPAD(,CCAPTR)                                0701
         MVC   VLPMTYPE(8),CCATYPEA+32(@12)                        0701
*   ELSE                            /*                       @Z67SP00*/
*     IF ICTMMACR(1)=ON             /* ++MAC                 @Z67SP00*/
*         ×ICTMMACU(1)=ON           /* ++MACUPD              @Z67SP00*/
*       THEN                        /*                       @Z67SP00*/
         B     @RC00700                                            0702
@RF00700 L     @12,@PC00009                                        0702
         L     @12,ELEM@(,@12)                                     0702
         TM    ICTMMACR(@12),B'00001100'                           0702
         BZ    @RF00702                                            0702
*       VLPMTYPE=CCATYPEA(IOPMAC);  /* "MACRO" ENTRY         @Z67SP00*/
         L     @12,CCATPAD(,CCAPTR)                                0703
         MVC   VLPMTYPE(8),CCATYPEA+16(@12)                        0703
*     ELSE                          /*                       @Z67SP00*/
*       IF ICTMSRCR(1)=ON           /* ++SRC                 @Z67SP00*/
*           ×ICTMSRCU(1)=ON         /* ++SRCUPD              @Z67SP00*/
*         THEN                                                     0704
         B     @RC00702                                            0704
@RF00702 L     @12,@PC00009                                        0704
         L     @12,ELEM@(,@12)                                     0704
         TM    ICTMSRCR(@12),B'00000011'                           0704
         BZ    @RF00704                                            0704
*         VLPMTYPE=CCATYPEA(IOPSRC);/* "SRC" ENTRY           @Z67SP00*/
         L     @12,CCATPAD(,CCAPTR)                                0705
         MVC   VLPMTYPE(8),CCATYPEA+56(@12)                        0705
*       ELSE                                                       0706
*         VLPMTYPE=' ';             /* " " ENTRY             @Z67SP00*/
         B     @RC00704                                            0706
@RF00704 MVI   VLPMTYPE+1,C' '                                     0706
         MVC   VLPMTYPE+2(6),VLPMTYPE+1                            0706
         MVI   VLPMTYPE,C' '                                       0706
*   RETURN;                         /*                       @Z67SP00*/
@EL00009 DS    0H                                                  0707
@EF00009 DS    0H                                                  0707
@ER00009 LM    @14,@12,12(@13)                                     0707
         BR    @14                                                 0707
*   END ELEMINIT;                   /*                       @Z67SP00*/
         B     @EL00009                                            0708
*                                                                  0709
*/********************************************************************/
*/*                                                                  */
*/*  REPALIAS  - PUT THE ALIAS NAMES FROM THE ICT ENTRY BEING        */
*/*              PROCESSED (ENTICT@ POINTS TO IT) INTO THE           */
*/*              IOP AS ALIAS SUB-ENTRIES                            */
*/*                                                                  */
*/*              ON ENTRY:                                           */
*/*                                                                  */
*/*              ENTICT@  - POINTER TO ELEMENT BEING PROCESSED       */
*/*                                                                  */
*/*              ENTALIAS - IOPMCIND VALUE FOR (A)CDS ELEMENT        */
*/*                         ALIAS NAME SUB-ENTRIES                   */
*/*                                                                  */
*/*              ON ENTRY:                                           */
*/*                                                                  */
*/*              REWRITE  - '1' IF ANY ALIAS NAMES ADDED             */
*/*                                                                  */
*/*                                                          @Z67SP00*/
*/********************************************************************/
*                                                                  0709
*REPALIAS:                                                         0709
*   PROC(REPAIOP,REPARC);           /*                       @Z67SP00*/
REPALIAS STM   @14,@12,@SA00010                                    0709
         MVC   @PC00010(8),0(@01)                                  0709
*   DCL                                                            0710
*     REPAIOP CHAR(*);              /* (A)CDS ELEMENT IOP    @Z67SP00*/
*   DCL                                                            0711
*     REPARC FIXED(31);             /* LOCAL RETURN CODE     @Z67SP00*/
*   DCL                                                            0712
*     PP FIXED(15);                 /* INDEX - ICT MOD ENTRY ALIAS 0712
*                                      LIST                  @Z67SP00*/
*   RESPECIFY                                                      0713
*     HMASMIOP BASED(ADDR(REPAIOP));/* ADDRESS IOP           @Z67SP00*/
*   RESPECIFY                                                      0714
*     ICTMOD BASED(ENTICT@);        /* ADDRESS ENTRY BEING PROCESSED
*                                                            @Z67SP00*/
*   RESPECIFY                                                      0715
*     ICTTALLS BASED(ICTMTCHN(1));  /* ADDRESS ALIAS LIST FOR ENTRY
*                                      PASSED                @Z67SP00*/
*   IF REPARC<STOPPTF               /* NOT TERMINATING       @Z67SP00*/
*     THEN                          /*                       @Z67SP00*/
         L     @12,@PC00010+4                                      0716
         L     @08,REPARC(,@12)                                    0716
         CH    @08,@CH00112                                        0716
         BNL   @RF00716                                            0716
*     REPARC=0;                     /* CLEAR RETURN CODE     @Z67SP00*/
*                                                                  0717
         SLR   @08,@08                                             0717
         ST    @08,REPARC(,@12)                                    0717
*   /*****************************************************************/
*   /*                                                               */
*   /* GO THRU THE ELEMENT'S ALIAS LIST                      @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0718
*   DO PP=1 BY 1 WHILE ICTTALND(PP)^=ICTENDIX/* NOT END      @Z67SP00*/
*         &REPARC<STOPPTF;          /* NOT TERMINATING       @Z67SP00*/
*                                                                  0718
@RF00716 LA    @12,1                                               0718
         STH   @12,PP                                              0718
         B     @DE00718                                            0718
@DL00718 DS    0H                                                  0719
*     /***************************************************************/
*     /*                                                             */
*     /* PUT ALIAS NAME IN (A)CDS ELEMENT ENTRY IOP          @Z67SP00*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0719
*     VLPFUNCT=VLPADD;              /* ADD ...               @Z67SP00*/
         MVI   VLPFUNCT,X'01'                                      0719
*     VLPTYPE=ENTALIAS;             /* ALIAS SUB-ENTRY ...   @Z67SP00*/
         MVC   VLPTYPE(1),ENTALIAS                                 0720
*     VLPLPTR=ADDR(IOPPNTRY(1));    /* TO IOP VARIABLE SECT. @Z67SP00*/
         L     @12,@PC00010                                        0721
         LA    @12,IOPPNTRY(,@12)                                  0721
         ST    @12,VLPLPTR                                         0721
*     VLPDATA=ICTTALNM(PP);         /* ALIAS NAME            @Z67SP00*/
         LH    @12,PP                                              0722
         SLA   @12,3                                               0722
         L     @08,ENTICT@                                         0722
         L     @08,ICTMTCHN(,@08)                                  0722
         ALR   @08,@12                                             0722
         AL    @08,@CF02010                                        0722
         MVC   VLPDATA(8),ICTTALNM(@08)                            0722
*     VLPDLEN=LENGTH(ICTTALNM);     /* LEN OF KEY IN DATA    @Z67SP00*/
         MVI   VLPDLEN,X'08'                                       0723
*     VLPSTYPE=TXTALIAS;            /*                       @Z67SP00*/
         MVC   VLPSTYPE(16),@CC01750                               0724
*     CALL HMASMVLU(HMASMVLP);      /*                       @Z67SP00*/
         L     @15,@CV01722                                        0725
         LA    @01,@AL00725                                        0725
         BALR  @14,@15                                             0725
*     IF VLPRETRN>=VLPPEEXC         /* PEMAX EXCEEDED        @Z67SP00*/
*       THEN                                                       0726
         CLI   VLPRETRN,8                                          0726
         BL    @RF00726                                            0726
*       REPARC=MAX(REPARC,VLPRETRN);/* ERROR R.C.            @Z67SP00*/
         L     @12,@PC00010+4                                      0727
         L     @08,REPARC(,@12)                                    0727
         SLR   @15,@15                                             0727
         IC    @15,VLPRETRN                                        0727
         CR    @08,@15                                             0727
         BNL   *+6
         LR    @08,@15                                             0727
         ST    @08,REPARC(,@12)                                    0727
*     ELSE                                                         0728
*       REWRITE=ON;                 /* ADDED TO IOP SUB-ENT. @Z67SP00*/
         B     @RC00726                                            0728
@RF00726 OI    REWRITE,B'00010000'                                 0728
*   END;                            /*                       @Z67SP00*/
@RC00726 LA    @12,1                                               0729
         AH    @12,PP                                              0729
         STH   @12,PP                                              0729
@DE00718 LH    @12,PP                                              0729
         SLA   @12,3                                               0729
         L     @08,ENTICT@                                         0729
         L     @08,ICTMTCHN(,@08)                                  0729
         AL    @08,@CF02010                                        0729
         L     @12,ICTTALND(@12,@08)                               0729
         CL    @12,ICTENDIX                                        0729
         BE    @DC00718                                            0729
         L     @12,@PC00010+4                                      0729
         L     @12,REPARC(,@12)                                    0729
         CH    @12,@CH00112                                        0729
         BL    @DL00718                                            0729
@DC00718 DS    0H                                                  0730
*   RETURN CODE(REPARC);            /*                       @Z67SP00*/
         L     @12,@PC00010+4                                      0730
         L     @15,REPARC(,@12)                                    0730
         L     @14,@SA00010                                        0730
         LM    @00,@12,@SA00010+8                                  0730
         BR    @14                                                 0730
*   END REPALIAS;                   /*                       @Z67SP00*/
*                                                                  0732
*/********************************************************************/
*/*                                                                  */
*/*  BUILDIOP  - BUILD OR INITIALIZE AN (A)CDS ELEMENT ENTRY IOP FOR */
*/*              THE ELEMENT BEING PROCESSED                         */
*/*                                                                  */
*/*                                                          @Z67SP00*/
*/********************************************************************/
*                                                                  0732
*BUILDIOP:                                                         0732
*   PROC(BLDIOP);                   /*                       @Z67SP00*/
BUILDIOP STM   @14,@12,12(@13)                                     0732
         MVC   @PC00011(4),0(@01)                                  0732
*   DCL                                                            0733
*     BLDIOP CHAR(*);               /* (A)CDS ELEMENT IOP    @Z67SP00*/
*   RESPECIFY                                                      0734
*     HMASMIOP BASED(ADDR(BLDIOP)); /* ADDRESS IOP           @Z67SP00*/
*   RESPECIFY                                                      0735
*     ICTMOD BASED(ENTICT@);        /* ADDRESS CURRENT ENTRY @Z67SP00*/
*   RESPECIFY                                                      0736
*     ICTPTF BASED(ADDR(PTFICT));   /* ADDRESS CURRENT SYSMOD (PASSED
*                                      TO HMASMIDU)          @Z67SP00*/
*   IOPNAME=ICTMNAME(1);            /* ELEMENT NAME          @Z67SP00*/
         L     @12,@PC00011                                        0737
         L     @08,ENTICT@                                         0737
         MVC   IOPNAME(8,@12),ICTMNAME(@08)                        0737
*   IOPTYPE=ENTTYPE;                /* (C)CDS ENTRY TYPE     @Z67SP00*/
         MVC   IOPTYPE(1,@12),ENTTYPE                              0738
*   IOPMODDR=''B;                   /* CLEAR DIRECTORY DATA  @Z67SP00*/
         XC    IOPMODDR(24,@12),IOPMODDR(@12)                      0739
*   IF IOPNOTFD=ON                  /* NEW IOP BEING BUILT   @Z67SP00*/
*     THEN                                                         0740
*     REWRITE=ON;                   /* INSURE FULL IOP IS WRITTEN  0741
*                                                            @Z67SP00*/
*   IF IOPTYPE=IOPMAC               /* MAC ENTRY             @Z67SP00*/
*     THEN                                                         0742
         L     @12,@PC00011                                        0742
         CLI   IOPTYPE(@12),3                                      0742
         BNE   @RF00742                                            0742
*     DO;                                                          0743
*                                                                  0743
*       /*************************************************************/
*       /*                                                           */
*       /* CLEAR AND INITIALIZE MAC ENTRY FIELDS             @Z67SP00*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0744
*       IF IOPRETRN=IOPNOTFD        /* NEW IOP BEING BUILT   @Z67SP00*/
*         THEN                                                     0744
         CLI   IOPRETRN(@12),4                                     0744
         BNE   @RF00744                                            0744
*         DO;                       /*                       @Z67SP00*/
*           IOPMACDR=''B;           /* DIRECTORY DATA        @Z67SP00*/
         XC    IOPMACDR(24,@12),IOPMACDR(@12)                      0746
*           IOPMACFX=''B;           /* FIXED DATA            @Z67SP00*/
         XC    IOPMACFX(80,@12),IOPMACFX(@12)                      0747
*           IOPMACND(1)=IOPEOLST;   /* VARIABLE DATA         @Z67SP00*/
         MVI   IOPMACND(@12),X'FF'                                 0748
*           IOPNTLVL=IOPMACLC;      /* LEVEL                 @Z67SP00*/
         MVI   IOPNTLVL(@12),X'03'                                 0749
*         END;                      /*                       @Z67SP00*/
*       IOPMCLNG=ICTMLANG(1);       /* LANGUAGE TYPE         @Z67SP00*/
@RF00744 L     @12,@PC00011                                        0751
         L     @08,ENTICT@                                         0751
         MVC   IOPMCLNG(1,@12),ICTMLANG(@08)                       0751
*       IOPMCSYS=ICTMSYSL(1);       /* SYSLIB                @Z67SP00*/
         MVC   IOPMCSYS(8,@12),ICTMSYSL(@08)                       0752
*       IOPMCDLB=ICTMDSTL(1);       /* DISTLIB               @Z67SP00*/
         MVC   IOPMCDLB(8,@12),ICTMDSTL(@08)                       0753
*     END;                                                         0754
*   IF IOPTYPE=IOPSRC               /* SRC ENTRY             @Z67SP00*/
*     THEN                                                         0755
@RF00742 L     @12,@PC00011                                        0755
         CLI   IOPTYPE(@12),8                                      0755
         BNE   @RF00755                                            0755
*     DO;                                                          0756
*                                                                  0756
*       /*************************************************************/
*       /*                                                           */
*       /* CLEAR AND INITIALIZE SRC ENTRY FIELDS             @Z67SP00*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0757
*       IF IOPRETRN=IOPNOTFD        /* NEW IOP BEING BUILT   @Z67SP00*/
*         THEN                                                     0757
         CLI   IOPRETRN(@12),4                                     0757
         BNE   @RF00757                                            0757
*         DO;                       /*                       @Z67SP00*/
*           IOPSRCDR=''B;           /* DIRECTORY DATA        @Z67SP00*/
         XC    IOPSRCDR(24,@12),IOPSRCDR(@12)                      0759
*           IOPSRCFX=''B;           /* FIXED DATA            @Z67SP00*/
         XC    IOPSRCFX(80,@12),IOPSRCFX(@12)                      0760
*           IOPSRCND(1)=IOPEOLST;   /* VARIABLE DATA         @Z67SP00*/
         MVI   IOPSRCND(@12),X'FF'                                 0761
*           IOPNTLVL=IOPSRCLC;      /* LEVEL                 @Z67SP00*/
         MVI   IOPNTLVL(@12),X'03'                                 0762
*         END;                      /*                       @Z67SP00*/
*       IOPSRLNG=ICTMLANG(1);       /* LANGUAGE TYPE         @Z67SP00*/
@RF00757 L     @12,@PC00011                                        0764
         L     @08,ENTICT@                                         0764
         MVC   IOPSRLNG(1,@12),ICTMLANG(@08)                       0764
*       IOPSRSYS=ICTMSYSL(1);       /* SYSLIB                @Z67SP00*/
         MVC   IOPSRSYS(8,@12),ICTMSYSL(@08)                       0765
*       IOPSRDLB=ICTMDSTL(1);       /* DISTLIB               @Z67SP00*/
         MVC   IOPSRDLB(8,@12),ICTMDSTL(@08)                       0766
*     END;                                                         0767
*   IF IOPTYPE=IOPMOD               /* MOD ENTRY             @Z67SP00*/
*     THEN                                                         0768
@RF00755 L     @12,@PC00011                                        0768
         CLI   IOPTYPE(@12),5                                      0768
         BNE   @RF00768                                            0768
*     DO;                                                          0769
*                                                                  0769
*       /*************************************************************/
*       /*                                                           */
*       /* CLEAR AND INITIALIZE MOD ENTRY FIELDS             @Z67SP00*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0770
*       IF IOPRETRN=IOPNOTFD        /* NEW IOP BEING BUILT   @Z67SP00*/
*         THEN                                                     0770
         CLI   IOPRETRN(@12),4                                     0770
         BNE   @RF00770                                            0770
*         DO;                       /*                       @Z67SP00*/
*           IOPMODDR=''B;           /* DIRECTORY DATA        @Z67SP00*/
         XC    IOPMODDR(24,@12),IOPMODDR(@12)                      0772
*           IOPMODFX=''B;           /* FIXED DATA            @Z67SP00*/
         XC    IOPMODFX(80,@12),IOPMODFX(@12)                      0773
*           IOPMODND(1)=IOPEOLST;   /* VARIABLE DATA         @Z67SP00*/
         MVI   IOPMODND(@12),X'FF'                                 0774
*           IOPNTLVL=IOPMODLC;      /* LEVEL                 @Z67SP00*/
         MVI   IOPNTLVL(@12),X'02'                                 0775
*         END;                      /*                       @Z67SP00*/
*       IOPMODF1=ICTMLEP1(1);       /* LINK EDIT PARMS       @Z67SP00*/
@RF00770 L     @12,@PC00011                                        0777
         L     @08,ENTICT@                                         0777
         MVC   IOPMODF1(1,@12),ICTMLEP1(@08)                       0777
*       IOPMODF2=ICTMLEP2(1);       /* LINK EDIT PARMS       @Z67SP00*/
         MVC   IOPMODF2(1,@12),ICTMLEP2(@08)                       0778
*       IOPMODF3=''B;               /* CLEAR                 @Z67SP00*/
         MVI   IOPMODF3(@12),X'00'                                 0779
*       IOPMODF4=''B;               /* CLEAR                 @Z67SP00*/
         MVI   IOPMODF4(@12),X'00'                                 0780
*       IOPDLIB=ICTMDSTL(1);        /* DISTLIB               @Z67SP00*/
         MVC   IOPDLIB(8,@12),ICTMDSTL(@08)                        0781
*     END;                                                         0782
*   IF IOPRETRN=IOPNOTFD            /* NEW IOP BEING BUILT   @Z67SP00*/
*     THEN                                                         0783
@RF00768 L     @12,@PC00011                                        0783
         CLI   IOPRETRN(@12),4                                     0783
         BNE   @RF00783                                            0783
*     DO;                                                          0784
*                                                                  0784
*       /*************************************************************/
*       /*                                                           */
*       /* INITILAIZE "COMMON" ELEMENT DATA FIELDS           @Z67SP00*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0785
*       IOPFMID=NULLPTF#;           /* FMID                  @Z67SP00*/
         MVC   IOPFMID(7,@12),@CC01732                             0785
*       IOPFMST=''B;                /* FMID STATUS           @Z67SP00*/
         MVI   IOPFMST(@12),X'00'                                  0786
*       IOPRMID=NULLPTF#;           /* RMID                  @Z67SP00*/
         MVC   IOPRMID(7,@12),@CC01732                             0787
*       IOPRMST=''B;                /* RMID STATUS           @Z67SP00*/
         MVI   IOPRMST(@12),X'00'                                  0788
*       IOPBUSMD=ICTPTFS(1);        /* SYSMOD CAUSING ENTRY  @Z67SP00*/
         L     @08,@PC00001                                        0789
         MVC   IOPBUSMD(7,@12),ICTPTFS(@08)                        0789
*       IOPBUTYP=IOPBUADD;          /* ... TO BE ADDED       @Z67SP00*/
         MVI   IOPBUTYP(@12),X'01'                                 0790
*     END;                                                         0791
*   RETURN;                         /*                       @Z67SP00*/
@EL00011 DS    0H                                                  0792
@EF00011 DS    0H                                                  0792
@ER00011 LM    @14,@12,12(@13)                                     0792
         BR    @14                                                 0792
*   END BUILDIOP;                   /*                       @Z67SP00*/
         B     @EL00011                                            0793
*   END HMASMIDU                    /* END OF MODULE                 */
*                                                                  0794
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMICT)                                       */
*/*%INCLUDE SYSLIB  (HMASMVLP)                                       */
*/*%INCLUDE SYSLIB  (HMASMMGP)                                       */
*                                                                  0794
*       ;                                                          0794
@DATA    DS    0H
@CH00184 DC    H'2'
@CH00236 DC    H'3'
@CH00039 DC    H'4'
@CH00130 DC    H'5'
@CH00201 DC    H'6'
@CH00241 DC    H'7'
@CH00112 DC    H'8'
@CH00033 DC    H'9'
@CH00818 DC    H'50'
@CH00599 DC    H'80'
@CH00601 DC    H'81'
@CH00603 DC    H'82'
@CH00605 DC    H'83'
@CH00607 DC    H'84'
@CH00609 DC    H'85'
@CH00611 DC    H'86'
@CH00613 DC    H'87'
@CH01990 DC    H'116'
@CH01745 DC    H'125'
@CH01991 DC    H'144'
@CH00709 DC    H'255'
         DS    0F
@AL00327 DC    A(LPTR)                 LIST WITH   3 ARGUMENT(S)
         DC    A(K)
         DC    A(RGI)
@AL00457 DC    A(HMASMMGP)             LIST WITH   1 ARGUMENT(S)
@AL00544 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00564 DC    A(NSMODID)              LIST WITH   2 ARGUMENT(S)
         DC    A(TPSRTN)
@AL00550 EQU   *                       LIST WITH   3 ARGUMENT(S)
@AL00570 DC    A(@AFTEMPS)             LIST WITH   3 ARGUMENT(S)
         DC    A(XNDX)
         DC    A(RGI)
@AL00652 EQU   *                       LIST WITH   4 ARGUMENT(S)
@AL00211 DC    A(ENTICT@)              LIST WITH   1 ARGUMENT(S)
@AL00277 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00362 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00371 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00606 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00725 DC    A(HMASMVLP)             LIST WITH   1 ARGUMENT(S)
         DC    A(LL)
         DC    A(RGI)
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@PC00009 DS    1F
@SA00002 DS    15F
@PC00002 DS    1F
@SA00003 DS    15F
@PC00003 DS    1F
@SA00008 DS    15F
@SA00006 DS    15F
@PC00006 DS    1F
@PC00005 DS    2F
@PC00011 DS    1F
@SA00007 DS    0F
@PC00007 EQU   @SA00007+60
@SA00004 DS    0F
@PC00004 EQU   @SA00004+60
@SA00010 DS    0F
@PC00010 EQU   @SA00010+60
         DS    19F
@AL00001 DS    4A
@TF00001 DS    F
@AFTEMPS DS    1F
         DS    0F
@CF00087 DC    F'1'
@CH00087 EQU   @CF00087+2
@CF02023 DC    F'-144'
@CF02029 DC    F'-136'
@CF02025 DC    F'-135'
@CF02026 DC    F'-133'
@CF02016 DC    F'-116'
@CF02017 DC    F'-108'
@CF02018 DC    F'-103'
@CF02028 DC    F'-64'
@CF02024 DC    F'-56'
@CF02027 DC    F'-48'
@CF02009 DC    F'-9'
@CF02010 DC    F'-8'
@CF02006 DC    F'-4'
@CV01721 DC    V(HMASMIO)
@CV01722 DC    V(HMASMVLU)
@CV01723 DC    V(HMASMMSG)
@CV01724 DC    V(HMASMTPS)
         DS    0D
IOPPTR   DS    A
J        DS    F
K        DS    F
N        DS    F
P        DS    F
Q        DS    F
PROCRC   DS    F
MAINRC   DS    F
SEPTR    DS    A
XNDX     DS    F
RSTRERC  DS    F
LPTR     DS    A
UPDATRC  DS    F
UPPTFRC  DS    F
LL       DS    F
M        DS    F
II       DS    H
NN       DS    H
KK       DS    H
MM       DS    H
PP       DS    H
RGI      DS    FL1
MTYPE    DS    FL1
TPSRTN   DS    FL1
DSIDSAVE DS    FL1
ENTRPIND DS    FL1
@TS00001 DS    CL9
@CC01747 DC    C'UMID            '
@CC01750 DC    C'ALIAS           '
@CC01732 DC    C'       '
         DS    CL1
ICTENDCH DC    X'FFFFFFFF'
HMASMVLP DS    CL52
         ORG   HMASMVLP
VLPFUNCT DS    FL1
VLPRETRN DS    FL1
VLPFLAG  DS    BL1
         ORG   VLPFLAG
VLPFMSG  DS    BL1
VLPFRSV  EQU   VLPFLAG+0
         ORG   HMASMVLP+3
VLPDLEN  DS    FL1
VLPSNTRY DS    CL9
         ORG   VLPSNTRY
VLPDATA  DS    CL8
VLPTYPE  DS    FL1
         ORG   HMASMVLP+13
@NM00239 DS    CL3
VLPLPTR  DS    AL4
VLPMTYPE DS    CL8
VLPMNAME DS    CL8
VLPSTYPE DS    CL16
         ORG   HMASMVLP+52
HMASMMGP DS    CL48
         ORG   HMASMMGP
MGPFIXED DS    CL12
         ORG   MGPFIXED
MGPCLEAR DS    CL6
         ORG   MGPCLEAR
MGPMGNO1 DS    FL2
MGPMGNO2 DS    FL2
MGPMGNO3 DS    FL2
         ORG   MGPFIXED+6
MGPFLAGS DS    BL2
         ORG   MGPFLAGS
MGPPRINT DS    BL1
MGPLIST  EQU   MGPFLAGS+0
MGPRPT   EQU   MGPFLAGS+0
MGPHLDS  EQU   MGPFLAGS+0
MGPWTOR  EQU   MGPFLAGS+0
MGPWTO   EQU   MGPFLAGS+0
MGPWTP   EQU   MGPFLAGS+0
@NM00240 EQU   MGPFLAGS+0
         ORG   MGPFIXED+8
MGPTYPE  DS    FL1
@NM00241 DS    CL3
         ORG   HMASMMGP+12
MGPVAR   DS    CL36
         ORG   MGPVAR
MGPVARPT DS    9A
         ORG   HMASMMGP+48
SWITCHES DS    BL1
         ORG   SWITCHES
HIT      DS    BL1
DROP     EQU   SWITCHES+0
@NM00242 EQU   SWITCHES+0
REWRITE  EQU   SWITCHES+0
@NM00243 EQU   SWITCHES+0
         ORG   SWITCHES+1
         DS    CL3
ENTDATA  DS    CL17
         ORG   ENTDATA
ENTICT@  DS    AL4
ENTFLGS  DS    BL1
         ORG   ENTFLGS
ENTCDSU  DS    BL1
@NM00247 EQU   ENTFLGS+0
         ORG   ENTDATA+5
ENTNAME  DS    CL8
ENTTYPE  DS    FL1
ENTPPIND DS    CL1
ENTALIAS DS    FL1
ENTETYPE DS    CL1
         ORG   ENTDATA+17
         DS    CL1
PATCHIDU DS    CL80
         ORG   PATCHIDU
@NM00250 DC    80X'FF'
         ORG   PATCHIDU+80
UPPTFFLG DS    BL1
         ORG   UPPTFFLG
ELEMHIT  DS    BL1
UPPTFWRT EQU   UPPTFFLG+0
@NM00251 EQU   UPPTFFLG+0
         ORG   UPPTFFLG+1
LCTCKFLG DS    BL1
         ORG   LCTCKFLG
CKICTSEL DS    BL1
@NM00252 EQU   LCTCKFLG+0
         ORG   LCTCKFLG+1
CK1FLG1  DS    BL1
         ORG   CK1FLG1
CK1MMOD  DS    BL1
@NM00253 EQU   CK1FLG1+0
@NM00254 EQU   CK1FLG1+0
@NM00255 EQU   CK1FLG1+0
CK1MMACR EQU   CK1FLG1+0
@NM00256 EQU   CK1FLG1+0
CK1MSRCR EQU   CK1FLG1+0
@NM00257 EQU   CK1FLG1+0
         ORG   CK1FLG1+1
CKAFLG1  DS    BL1
         ORG   CKAFLG1
CKAMMOD  DS    BL1
CKAMASM  EQU   CKAFLG1+0
@NM00258 EQU   CKAFLG1+0
@NM00259 EQU   CKAFLG1+0
@NM00260 EQU   CKAFLG1+0
@NM00261 EQU   CKAFLG1+0
@NM00262 EQU   CKAFLG1+0
@NM00263 EQU   CKAFLG1+0
         ORG   CKAFLG1+1
CK2FLG1  DS    BL1
         ORG   CK2FLG1
@NM00264 DS    BL1
@NM00265 EQU   CK2FLG1+0
CK2MZAP  EQU   CK2FLG1+0
@NM00266 EQU   CK2FLG1+0
@NM00267 EQU   CK2FLG1+0
CK2MMACU EQU   CK2FLG1+0
@NM00268 EQU   CK2FLG1+0
CK2MSRCU EQU   CK2FLG1+0
         ORG   CK2FLG1+1
CHKMNAME DS    CL8
CHKMFMID DS    CL7
NSMODID  DS    CL7
ELMTYPE  DS    BL1
         ORG   ELMTYPE
@NM00269 DS    BL1
@NM00270 EQU   ELMTYPE+0
ELMZAP   EQU   ELMTYPE+0
@NM00271 EQU   ELMTYPE+0
@NM00272 EQU   ELMTYPE+0
ELMMACU  EQU   ELMTYPE+0
@NM00273 EQU   ELMTYPE+0
ELMSRCU  EQU   ELMTYPE+0
         ORG   ELMTYPE+1
ELMNAME  DS    CL8
XMIDLS   DS    CL8
         ORG   XMIDLS+0
@NM00248 DS    CL8
         ORG   @NM00248+0
XMID     DS    CL7
@NM00249 DS    BL1
         ORG   XMIDLS+8
MTYPEVAR DC    CL6'MODULE'
         DC    CL6'S/ZAP '
         DC    CL6'X/ZAP '
         DC    CL6'MACRO '
         DC    CL6'MACUPD'
         DC    CL6'SOURCE'
         DC    CL6'SRCUPD'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CCAPTR   EQU   @11
RTNCODE  EQU   @15
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAIOPTR EQU   CCAFIOP
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAICT   EQU   CCAFICT
CCAICPTF EQU   CCAFICT+4
CCAICMOD EQU   CCAFICT+8
CCAICLMD EQU   CCAFICT+12
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00009 EQU   HMASMCCA+244
CCATBLPA EQU   @NM00009+12
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAAPPLY EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAFLAG2 EQU   CCAFFUNC+11
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCATYPEA EQU   0
CCABLDLA EQU   0
@NM00025 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00027 EQU   CCABLDLL
CCALKDRC EQU   @NM00027+20
@NM00029 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00029+20
@NM00031 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00031+20
@NM00033 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00033+20
@NM00035 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00035+20
@NM00037 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00037+20
@NM00039 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00039+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
TBLXPARM EQU   0
TBLXINDX EQU   TBLXPARM+4
TBLXTBL  EQU   TBLXPARM+28
TBLXFLG1 EQU   TBLXPARM+80
TBLXRC   EQU   TBLXPARM+92
TBLXOPTS EQU   0
TBLFLAGS EQU   TBLXOPTS+8
TBLFLG1  EQU   TBLFLAGS
TBLFLG2  EQU   TBLFLAGS+2
TBLFLG3  EQU   TBLFLAGS+3
TBLFLG4  EQU   TBLFLAGS+5
TBLBPID  EQU   TBLFLG4
TBLFLG5  EQU   TBLFLAGS+7
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
IOPNAM17 EQU   IOPNAME
@NM00057 EQU   HMASMIOP+12
@NM00058 EQU   @NM00057
IOPDDNAM EQU   HMASMIOP+24
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00168 EQU   IOPQSMIF
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPBS02  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
HMASMICT EQU   0
ICTCORE  EQU   HMASMICT
ICTPSPLN EQU   ICTCORE
ICTMSPLN EQU   ICTCORE+4
ICTLSPLN EQU   ICTCORE+8
ICTGMSPL EQU   0
ICTPTF   EQU   0
ICTPTFS  EQU   ICTPTF
ICTPEND  EQU   ICTPTFS
ICTPFLG1 EQU   ICTPTF+7
ICTPFLG3 EQU   ICTPTF+8
ICTPPROC EQU   ICTPFLG3
ICTPNOGO EQU   ICTPFLG3
ICTPCPL  EQU   ICTPFLG3
ICTPFLG5 EQU   ICTPTF+9
ICTPFLG6 EQU   ICTPTF+11
ICTPFLF  EQU   ICTPFLG6
ICTPFLG2 EQU   ICTPTF+12
ICTPFLG4 EQU   ICTPTF+13
ICTPDEXP EQU   ICTPFLG4
ICTPDIMP EQU   ICTPFLG4
ICTPGELM EQU   ICTPFLG4
ICTPFLG8 EQU   ICTPTF+14
ICTPECPL EQU   ICTPFLG8
ICTPFLG9 EQU   ICTPTF+15
@NM00195 EQU   ICTPFLG9
ICTPFLGA EQU   ICTPTF+16
ICTPUSR1 EQU   ICTPFLGA
ICTPCHN  EQU   ICTPTF+64
ICTPRCHN EQU   ICTPTF+68
ICTPSCHN EQU   ICTPTF+72
ICTPPCHN EQU   ICTPTF+76
ICTPICHN EQU   ICTPTF+80
ICTPNCHN EQU   ICTPTF+84
ICTPVCHN EQU   ICTPTF+88
ICTPDCHN EQU   ICTPTF+92
ICTPBCHN EQU   ICTPTF+96
ICTIXPF  EQU   0
ICTIXP   EQU   ICTIXPF
ICTENTLS EQU   0
ICTENTNT EQU   ICTENTLS
ICTENTNM EQU   ICTENTNT
ICTENTST EQU   ICTENTNT+7
ICTREQLS EQU   0
ICTREQNT EQU   ICTREQLS
ICTREQNM EQU   ICTREQNT
ICTREQST EQU   ICTREQNT+7
ICTSUPLS EQU   0
ICTSUPNT EQU   ICTSUPLS
ICTSUPNM EQU   ICTSUPNT
ICTSUPND EQU   ICTSUPNM
ICTPRELS EQU   0
ICTPRENT EQU   ICTPRELS
ICTPRENM EQU   ICTPRENT
ICTPREST EQU   ICTPRENT+7
ICTIRQLS EQU   0
ICTIRQNT EQU   ICTIRQLS
ICTIRQNM EQU   ICTIRQNT
ICTIRQST EQU   ICTIRQNT+7
ICTCSRST EQU   ICTIRQNT+15
ICTNPRLS EQU   0
ICTNPRNT EQU   ICTNPRLS
ICTNPRNM EQU   ICTNPRNT
ICTVRSLS EQU   0
ICTVRSNT EQU   ICTVRSLS
ICTVRSNM EQU   ICTVRSNT
ICTDELLS EQU   0
ICTDELNT EQU   ICTDELLS
ICTDELNM EQU   ICTDELNT
ICTDELST EQU   ICTDELNT+7
ICTSBYLS EQU   0
ICTSBYNT EQU   ICTSBYLS
ICTSBYNM EQU   ICTSBYNT
ICTMOD   EQU   0
ICTMNAME EQU   ICTMOD
ICTMEND  EQU   ICTMNAME
ICTMFLG2 EQU   ICTMOD+8
ICTMMIDU EQU   ICTMFLG2
ICTMFLG1 EQU   ICTMOD+9
ICTMMODR EQU   ICTMFLG1
ICTMMOD  EQU   ICTMMODR
ICTMASM  EQU   ICTMMODR
ICTMZAP  EQU   ICTMFLG1
ICTMXPND EQU   ICTMFLG1
ICTMMACR EQU   ICTMFLG1
ICTMMACU EQU   ICTMFLG1
ICTMSRCR EQU   ICTMFLG1
ICTMSRCU EQU   ICTMFLG1
ICTMFLG3 EQU   ICTMOD+10
ICTMFLG4 EQU   ICTMOD+11
ICTMISEL EQU   ICTMFLG4
ICTMIDEL EQU   ICTMFLG4
ICTMASOC EQU   ICTMFLG4
ICTMFLG5 EQU   ICTMOD+12
ICTMODF4 EQU   ICTMOD+13
ICTMLEP1 EQU   ICTMODF4
ICTMODF5 EQU   ICTMOD+14
ICTMLEP2 EQU   ICTMODF5
ICTMODF6 EQU   ICTMOD+15
ICTMLEP3 EQU   ICTMODF6
ICTMODF7 EQU   ICTMOD+16
ICTMLEP4 EQU   ICTMODF7
ICTMACF4 EQU   ICTMOD+17
ICTMXUPD EQU   ICTMACF4
ICTMLANG EQU   ICTMOD+20
ICTMDSTL EQU   ICTMOD+48
ICTMSYSL EQU   ICTMOD+56
ICTMRMID EQU   ICTMOD+80
ICTMFMID EQU   ICTMOD+88
ICTPPTR  EQU   ICTMOD+96
ICTMCHN  EQU   ICTMOD+100
ICTMICHN EQU   ICTMOD+104
ICTMICHA EQU   ICTMOD+108
ICTMACHN EQU   ICTMOD+112
ICTMTCHN EQU   ICTMOD+116
ICTMVCHN EQU   ICTMOD+120
ICTMUCHN EQU   ICTMOD+124
ICTIXMF  EQU   0
ICTMIDLS EQU   0
ICTMID   EQU   ICTMIDLS
ICTMODID EQU   ICTMID
ICTMIDND EQU   ICTMODID
ICTMODST EQU   ICTMID+7
ICTMIDPS EQU   ICTMODST
ICTMIDRG EQU   ICTMODST
ICTMIDAM EQU   ICTMODST
ICTMIDTY EQU   ICTMODST
ICTASMLS EQU   0
ICTASMAD EQU   ICTASMLS
ICTTALLS EQU   0
ICTTALNM EQU   ICTTALLS
ICTTALND EQU   ICTTALNM
ICTMVRLS EQU   0
ICTMVRNT EQU   ICTMVRLS
ICTMVRNM EQU   ICTMVRNT
ICTMUMLS EQU   0
ICTMUMNT EQU   ICTMUMLS
ICTMUMNM EQU   ICTMUMNT
ICTLMOD  EQU   0
ICTLMNAM EQU   ICTLMOD
ICTLNAME EQU   ICTLMNAM
ICTLFLG4 EQU   ICTLMOD+8
ICTLFLG1 EQU   ICTLMOD+9
ICTLFLG5 EQU   ICTLMOD+10
ICTLFLG6 EQU   ICTLMOD+11
ICTLFLG7 EQU   ICTLMOD+12
ICTLFLG2 EQU   ICTLMOD+13
ICTLFLG3 EQU   ICTLMOD+14
ICTLCHN  EQU   ICTLMOD+34
ICTIXLF  EQU   0
SENTRY   EQU   0
@NM00244 EQU   SENTRY
SEMODID  EQU   @NM00244
SENTEND  EQU   SEMODID
SESTAT   EQU   @NM00244+7
SETYPIND EQU   SENTRY+8
CCADSIDA EQU   0
IOPBS01  EQU   0
IOPBS03  EQU   0
PTFICT   EQU   0
NPTR     EQU   0
MPTR     EQU   0
MODPTR   EQU   0
MIDLSPTR EQU   0
MIDIX    EQU   0
REGACT   EQU   0
CHKSMD   EQU   0
CHKIND   EQU   0
MODENT@  EQU   0
ELEMIOP  EQU   0
UPDICTRC EQU   0
ELEM@    EQU   0
REPAIOP  EQU   0
REPARC   EQU   0
BLDIOP   EQU   0
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00064 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
@NM00075 EQU   IOPUDATA
@NM00076 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPNTLVL EQU   IOPASMDR
IOPABUNT EQU   IOPASMDR+1
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPLMDF2 EQU   IOPLMLEP+1
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPLMDFX EQU   IOPLMDNT+24
@NM00085 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMID  EQU   IOPRMIDE
IOPRMST  EQU   IOPRMIDE+7
IOPRMASM EQU   IOPRMST
IOPFMIDE EQU   IOPMACDR+9
IOPFMID  EQU   IOPFMIDE
IOPFMST  EQU   IOPFMIDE+7
IOPMCLNG EQU   IOPMACDR+17
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPBUSMD EQU   IOPBUNT
IOPBUTYP EQU   IOPBUNT+7
IOPMCSYS EQU   IOPMACFX+64
IOPMCDLB EQU   IOPMACFX+72
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACND EQU   IOPMACID
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00096 EQU   IOPSRCDR+1
@NM00098 EQU   @NM00096+7
@NM00102 EQU   IOPSRCDR+9
IOPSRLNG EQU   IOPSRCDR+17
IOPSRCFX EQU   IOPSRCNT+24
@NM00106 EQU   IOPSRCFX
IOPSRSYS EQU   IOPSRCFX+64
IOPSRDLB EQU   IOPSRCFX+72
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCND EQU   IOPSRCID
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00112 EQU   IOPMODDR+1
@NM00114 EQU   @NM00112+7
@NM00118 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00122 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPDLIB  EQU   IOPMODFX+72
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODND EQU   IOPMODID
IOPMODST EQU   IOPLMODS+7
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00133 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPSYSFX EQU   IOPSYSNT+24
@NM00140 EQU   IOPSYSFX
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPPTFFX EQU   IOPPTFNT+24
@NM00149 EQU   IOPPTFFX
@NM00150 EQU   @NM00149
IOPPDTES EQU   IOPPTFFX+41
@NM00153 EQU   IOPPDTES
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPPTFND EQU   IOPPMODS
IOPPIND  EQU   IOPPNTRY+8
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPPTFG1 EQU   IOPPTSFX+34
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00178 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00178
IOPPTREL EQU   IOPPTFMD
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBLEP2 EQU   IOPBPDS+9
@NM00182 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00182
IOPBFTB1 EQU   IOPBFTB0
ICTENDNT EQU   ICTENDCH
ICTENDIX EQU   ICTENDCH
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
IOPBCEND EQU   IOPBPDS+21
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00184 EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
@NM00183 EQU   IOPBFTB1
IOPBAOSL EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBREFR EQU   IOPBLEP2
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
@NM00181 EQU   IOPBLEP2
IOPBDC   EQU   IOPBLEP2
@NM00180 EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00179 EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBRENT EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
IOPPTIND EQU   IOPPTNTR+8
IOPPTSND EQU   IOPPTREL
@NM00177 EQU   IOPPTSFX+872
IOPSYZPP EQU   IOPPTSFX+772
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZAP EQU   IOPPTSFX+755
IOPSYUPP EQU   IOPPTSFX+655
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPD EQU   IOPPTSFX+638
IOPSYSPP EQU   IOPPTSFX+538
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSUP EQU   IOPPTSFX+521
IOPSYLKP EQU   IOPPTSFX+421
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKD EQU   IOPPTSFX+404
IOPSYCPP EQU   IOPPTSFX+304
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOM EQU   IOPPTSFX+170
IOPSYASP EQU   IOPPTSFX+70
IOPSYASR EQU   IOPPTSFX+69
IOPSYASS EQU   IOPPTSFX+61
IOPSYASM EQU   IOPPTSFX+53
@NM00176 EQU   IOPPTSFX+35
@NM00175 EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPPTSNP EQU   IOPPTFG1
IOPSYPLN EQU   IOPPTSFX+32
IOPDSPFX EQU   IOPPTSFX+6
IOPDSDIR EQU   IOPDSSPC+4
IOPDSSEC EQU   IOPDSSPC+2
IOPDSPRM EQU   IOPDSSPC
@NM00174 EQU   IOPPTSDR+4
IOPPTPEM EQU   IOPPTSDR+2
IOPPCNVL EQU   IOPPTSDR+1
@NM00173 EQU   IOPPTSDR
IOPQFMTP EQU   IOPQFMLS+8
@NM00172 EQU   IOPQFMLS+7
IOPQFMND EQU   IOPQFMNM
@NM00171 EQU   IOPQFMDR
@NM00167 EQU   IOPQSMDR
@NM00166 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
IOPSBYNM EQU   IOPSBYNT
@NM00165 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00164 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00163 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00162 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00161 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00160 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00159 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00158 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00157 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00156 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00155 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
IOPPFMID EQU   IOPPTFFX+73
@NM00154 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
IOPACCT  EQU   IOPDATES+15
IOPACCD  EQU   IOPDATES+12
IOPRSTT  EQU   IOPDATES+9
IOPRSTD  EQU   IOPDATES+6
IOPAPPT  EQU   IOPDATES+3
IOPAPPD  EQU   IOPDATES
IOPRECT  EQU   @NM00153+3
IOPRECD  EQU   @NM00153
@NM00152 EQU   IOPPTFFX+8
@NM00151 EQU   @NM00149+7
IOPPRELN EQU   @NM00150
@NM00148 EQU   IOPPTFDR+20
IOPSBYNO EQU   IOPPTFDR+13
IOPDBYNO EQU   IOPPTFDR+6
@NM00147 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPSBYP  EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00146 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPREGEN EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
IOPDUMMP EQU   IOPFLGS5
@NM00145 EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
IOPAPP   EQU   IOPFLGS5
IOPPTYPE EQU   IOPPTFDR+1
@NM00144 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
IOPSYSND EQU   IOPSYNTR
@NM00143 EQU   IOPSYSFX+21
IOPSYSID EQU   IOPSYSFX+13
IOPNUCID EQU   IOPSYSFX+12
IOPSREL  EQU   IOPSYSFX+8
@NM00142 EQU   @NM00140+7
@NM00141 EQU   @NM00140
@NM00139 EQU   IOPSYSDR+5
@NM00138 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPMTSNP EQU   IOPFLGS7
IOPPEMAX EQU   IOPSYSDR+2
IOPSCNVL EQU   IOPSYSDR+1
@NM00137 EQU   IOPSYSDR
IOPDLIND EQU   IOPDNTRY+8
IOPDLBND EQU   IOPDSYS
@NM00136 EQU   IOPDLBFX+8
@NM00135 EQU   @NM00133+7
@NM00134 EQU   @NM00133
@NM00132 EQU   IOPDLBDR+1
@NM00131 EQU   IOPDLBDR
IOPMDIND EQU   IOPMNTRY+8
@NM00130 EQU   IOPMODST
@NM00129 EQU   IOPMODFX+12
@NM00128 EQU   IOPMODF4
@NM00127 EQU   IOPMODF3
@NM00126 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00125 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00124 EQU   @NM00122+7
@NM00123 EQU   @NM00122
@NM00121 EQU   IOPMODDR+17
@NM00120 EQU   @NM00118+7
@NM00119 EQU   @NM00118
@NM00117 EQU   @NM00114
@NM00116 EQU   @NM00114
@NM00115 EQU   @NM00114
@NM00113 EQU   @NM00112
@NM00111 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00110 EQU   IOPSRCST
@NM00109 EQU   IOPSRCFX+8
@NM00108 EQU   @NM00106+7
@NM00107 EQU   @NM00106
@NM00105 EQU   IOPSRCDR+18
@NM00104 EQU   @NM00102+7
@NM00103 EQU   @NM00102
@NM00101 EQU   @NM00098
@NM00100 EQU   @NM00098
@NM00099 EQU   @NM00098
@NM00097 EQU   @NM00096
@NM00095 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
IOPMCTYP EQU   IOPMCIND
@NM00094 EQU   IOPMACST
@NM00093 EQU   IOPMACFX+8
@NM00092 EQU   IOPMACDR+18
@NM00091 EQU   IOPRMST
@NM00090 EQU   IOPRMST
@NM00089 EQU   IOPMACDR
IOPLMIND EQU   IOPLNTRY+8
IOPLMDND EQU   IOPSYSLB
@NM00087 EQU   @NM00085+7
@NM00086 EQU   @NM00085
@NM00084 EQU   IOPLMDDR+6
@NM00083 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPCOPY  EQU   IOPFLGS3
@NM00082 EQU   IOPLMDF4
@NM00081 EQU   IOPLMDF3
@NM00080 EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPNE    EQU   IOPLMDF2
@NM00079 EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPAPF   EQU   IOPFLGS2
@NM00078 EQU   IOPLMDDR
@NM00077 EQU   IOPASMDR+9
IOPABUTP EQU   IOPABUNT+7
IOPABUPT EQU   IOPABUNT
IOPALLOC EQU   @NM00076+4
IOPUSED  EQU   @NM00076
IOPTPSEQ EQU   @NM00075+8
IOPVLSER EQU   @NM00075+2
IOPBLKSI EQU   @NM00075
IOPCQMAX EQU   IOPCQMAP+12
@NM00074 EQU   IOPCQMAP+11
@NM00073 EQU   IOPCQMAP+8
@NM00072 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00071 EQU   IOPSCMAP+11
@NM00070 EQU   IOPSCMAP+8
@NM00069 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00068 EQU   IOPNTMAX+11
@NM00067 EQU   IOPNTMAX+8
@NM00066 EQU   IOPNTMAX
@NM00065 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00064+5
IOPIPTF3 EQU   @NM00064
@NM00246 EQU   SESTAT
@NM00245 EQU   SESTAT
ICTIXL   EQU   ICTIXLF
@NM00238 EQU   ICTLMOD+38
ICTLTTR  EQU   ICTLMOD+31
ICTTG2   EQU   ICTLMOD+23
ICTTG1   EQU   ICTLMOD+15
@NM00237 EQU   ICTLFLG3
ICTLZAP  EQU   ICTLFLG3
ICTLLKD  EQU   ICTLFLG3
ICTLCPY  EQU   ICTLFLG3
ICTLXPND EQU   ICTLFLG3
ICTTIND2 EQU   ICTLFLG3
ICTTIND1 EQU   ICTLFLG3
@NM00236 EQU   ICTLFLG2
ICTLDEL  EQU   ICTLFLG2
@NM00235 EQU   ICTLFLG2
ICTLTDEL EQU   ICTLFLG2
ICTLINK  EQU   ICTLFLG2
ICTCOPY  EQU   ICTLFLG2
@NM00234 EQU   ICTLFLG7
@NM00233 EQU   ICTLFLG6
@NM00232 EQU   ICTLFLG5
ICTLPAGA EQU   ICTLFLG5
ICTLNE   EQU   ICTLFLG5
@NM00231 EQU   ICTLFLG1
ICTLDC   EQU   ICTLFLG1
ICTLREFR EQU   ICTLFLG1
ICTLOVLY EQU   ICTLFLG1
ICTLSCTR EQU   ICTLFLG1
ICTLREUS EQU   ICTLFLG1
ICTLRENT EQU   ICTLFLG1
ICTLAPF  EQU   ICTLFLG1
@NM00230 EQU   ICTLFLG4
ICTLPASS EQU   ICTLFLG4
ICTLDDCK EQU   ICTLFLG4
ICTLMSG  EQU   ICTLFLG4
ICTLCPL  EQU   ICTLFLG4
ICTLNOGO EQU   ICTLFLG4
ICTLPROC EQU   ICTLFLG4
ICTLEND  EQU   ICTLNAME
@NM00229 EQU   ICTMUMNT+7
ICTMUMND EQU   ICTMUMNM
@NM00228 EQU   ICTMVRNT+7
ICTMVRND EQU   ICTMVRNM
ICTASMND EQU   ICTASMAD
ICTMIDF1 EQU   ICTMODST
ICTMIDPL EQU   ICTMODST
@NM00227 EQU   ICTMODST
ICTIXM   EQU   ICTIXMF
@NM00226 EQU   ICTMOD+128
@NM00225 EQU   ICTMOD+95
@NM00224 EQU   ICTMOD+87
ICTMSSI  EQU   ICTMOD+72
ICTMDOBJ EQU   ICTMOD+64
ICTMASLB EQU   ICTMOD+40
ICTTOLIB EQU   ICTMOD+32
ICTFMLIB EQU   ICTMOD+24
ICTMRELN EQU   ICTMOD+22
@NM00223 EQU   ICTMOD+21
@NM00222 EQU   ICTMOD+19
ICTMACF5 EQU   ICTMOD+18
ICTMZMPR EQU   ICTMACF4
ICTMZOMZ EQU   ICTMACF4
ICTMDOAS EQU   ICTMACF4
ICTMFXC  EQU   ICTMACF4
ICTMFXBS EQU   ICTMACF4
ICTMHASM EQU   ICTMACF4
ICTMACDL EQU   ICTMACF4
@NM00221 EQU   ICTMLEP4
@NM00220 EQU   ICTMLEP3
@NM00219 EQU   ICTMLEP2
ICTMPAGA EQU   ICTMLEP2
ICTMNE   EQU   ICTMLEP2
@NM00218 EQU   ICTMLEP1
ICTMDC   EQU   ICTMLEP1
ICTMREFR EQU   ICTMLEP1
ICTMOVLY EQU   ICTMLEP1
ICTMSCTR EQU   ICTMLEP1
ICTMREUS EQU   ICTMLEP1
ICTMRENT EQU   ICTMLEP1
ICTMAPF  EQU   ICTMLEP1
@NM00217 EQU   ICTMFLG5
ICTMNORL EQU   ICTMFLG5
ICTMELCK EQU   ICTMFLG5
ICTMCOPY EQU   ICTMFLG5
ICTMPASS EQU   ICTMFLG5
@NM00216 EQU   ICTMFLG4
ICTMTSEL EQU   ICTMFLG4
ICTMDSTE EQU   ICTMFLG4
ICTMMIDE EQU   ICTMFLG4
ICTMSELM EQU   ICTMFLG4
@NM00215 EQU   ICTMFLG3
ICTMPRMS EQU   ICTMFLG3
ICTMALIS EQU   ICTMFLG3
ICTMWRK  EQU   ICTMFLG3
ICTMTRX  EQU   ICTMFLG3
ICTMRELF EQU   ICTMFLG3
ICTLIBTX EQU   ICTMFLG3
ICTLIBLK EQU   ICTMFLG3
@NM00214 EQU   ICTMFLG2
@NM00213 EQU   ICTMFLG2
ICTMDEL  EQU   ICTMFLG2
ICTMMSG  EQU   ICTMFLG2
ICTMCPL  EQU   ICTMFLG2
ICTMNOGO EQU   ICTMFLG2
ICTMPROC EQU   ICTMFLG2
@NM00212 EQU   ICTSBYNT+7
ICTSBYND EQU   ICTSBYNM
ICTDELEX EQU   ICTDELST
ICTDELND EQU   ICTDELNM
@NM00211 EQU   ICTVRSNT+7
ICTVRSND EQU   ICTVRSNM
@NM00210 EQU   ICTNPRNT+7
ICTNPRND EQU   ICTNPRNM
@NM00209 EQU   ICTCSRST
@NM00208 EQU   ICTCSRST
ICTCSRF  EQU   ICTCSRST
@NM00207 EQU   ICTCSRST
ICTCSRNM EQU   ICTIRQNT+8
@NM00206 EQU   ICTIRQST
ICTIREQT EQU   ICTIRQST
ICTIREQI EQU   ICTIRQST
ICTIREQB EQU   ICTIRQST
ICTIREQS EQU   ICTIRQST
@NM00205 EQU   ICTIRQST
ICTIRQND EQU   ICTIRQNM
@NM00204 EQU   ICTPREST
ICTPREQT EQU   ICTPREST
ICTPREQI EQU   ICTPREST
ICTPREQB EQU   ICTPREST
ICTPREQS EQU   ICTPREST
@NM00203 EQU   ICTPREST
ICTPREND EQU   ICTPRENM
@NM00202 EQU   ICTSUPNT+7
@NM00201 EQU   ICTREQST
ICTRREQT EQU   ICTREQST
ICTRREQI EQU   ICTREQST
ICTRREQB EQU   ICTREQST
ICTRREQS EQU   ICTREQST
@NM00200 EQU   ICTREQST
ICTREQND EQU   ICTREQNM
@NM00199 EQU   ICTENTST
ICTEREQT EQU   ICTENTST
ICTEREQI EQU   ICTENTST
ICTEREQB EQU   ICTENTST
ICTEREQS EQU   ICTENTST
@NM00198 EQU   ICTENTST
ICTENTND EQU   ICTENTNM
@NM00197 EQU   ICTPTF+100
ICTPTPFX EQU   ICTPTF+38
ICTPRELN EQU   ICTPTF+36
ICTPRECT EQU   ICTPTF+33
ICTPRECD EQU   ICTPTF+30
ICTPVERN EQU   ICTPTF+29
ICTPFMID EQU   ICTPTF+22
ICTPSUPN EQU   ICTPTF+20
ICTPONUM EQU   ICTPTF+18
ICTPTYPE EQU   ICTPTF+17
ICTPUSR8 EQU   ICTPFLGA
ICTPUSR7 EQU   ICTPFLGA
ICTPUSR6 EQU   ICTPFLGA
ICTPUSR5 EQU   ICTPFLGA
ICTPUSR4 EQU   ICTPFLGA
ICTPUSR3 EQU   ICTPFLGA
ICTPUSR2 EQU   ICTPFLGA
ICTPPASS EQU   ICTPUSR1
@NM00196 EQU   @NM00195
ICTPRQBY EQU   @NM00195
ICTPRQOK EQU   @NM00195
ICTPRQCK EQU   @NM00195
@NM00194 EQU   ICTPFLG9
ICTPPDEL EQU   ICTPFLG9
ICTPWRKO EQU   ICTPFLG9
ICTPMSL  EQU   ICTPFLG9
@NM00193 EQU   ICTPFLG8
ICTPDCPL EQU   ICTPFLG8
ICTPGCPL EQU   ICTPFLG8
@NM00192 EQU   ICTPFLG4
@NM00191 EQU   ICTPFLG4
@NM00190 EQU   ICTPFLG4
ICTPREDO EQU   ICTPFLG4
ICTPCDSE EQU   ICTPFLG4
@NM00189 EQU   ICTPFLG2
ICTPRCND EQU   ICTPFLG2
ICTPTPS  EQU   ICTPFLG2
ICTPTR1  EQU   ICTPFLG2
ICTPVRSP EQU   ICTPFLG2
@NM00188 EQU   ICTPFLG6
ICTFLF   EQU   ICTPFLF
ICTPDBYP EQU   ICTPFLG6
ICTPSBYP EQU   ICTPFLG6
ICTPMDLP EQU   ICTPFLG5+1
ICTPADDP EQU   ICTPFLG5+1
@NM00187 EQU   ICTPFLG5+1
ICTPLRFP EQU   ICTPFLG5
ICTPJCLP EQU   ICTPFLG5
ICTPSUPP EQU   ICTPFLG5
ICTPREQP EQU   ICTPFLG5
ICTPPREP EQU   ICTPFLG5
ICTPNPRP EQU   ICTPFLG5
ICTPIRQP EQU   ICTPFLG5
ICTPDELP EQU   ICTPFLG5
@NM00186 EQU   ICTPFLG3
ICTPSLST EQU   ICTPFLG3
ICTPNOLB EQU   ICTPFLG3
ICTPVERJ EQU   ICTPFLG3
ICTPMSG  EQU   ICTPFLG3
ICTPROCS EQU   ICTPPROC
ICTREGEN EQU   ICTPFLG1
ICTBYP   EQU   ICTPFLG1
ICTDUMMP EQU   ICTPFLG1
@NM00185 EQU   ICTPFLG1
ICTERROR EQU   ICTPFLG1
ICTACC   EQU   ICTPFLG1
ICTRES   EQU   ICTPFLG1
ICTAPP   EQU   ICTPFLG1
ICTLEN   EQU   ICTGMSPL+1
ICTSP    EQU   ICTGMSPL
ICTLLEN  EQU   ICTLSPLN+1
ICTLSP   EQU   ICTLSPLN
ICTMLEN  EQU   ICTMSPLN+1
ICTMSP   EQU   ICTMSPLN
ICTPLEN  EQU   ICTPSPLN+1
ICTPSP   EQU   ICTPSPLN
IOPBS04E EQU   IOPBS04+2
IOPBAPFC EQU   IOPBAPF+1
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
IOPQSMTP EQU   IOPQSMLS+8
@NM00170 EQU   IOPQSMLS+7
IOPQSMND EQU   IOPQSMNM
@NM00169 EQU   @NM00168+7
IOPQSMFM EQU   @NM00168
@NM00088 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00063 EQU   IOPUSERL
@NM00062 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00061 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00060 EQU   @NM00057+10
IOPSEQNO EQU   @NM00057+8
@NM00059 EQU   @NM00058+7
IOPPTFNM EQU   @NM00058
@NM00056 EQU   TBLFLG5
TBLICTOK EQU   TBLFLG5
@NM00055 EQU   TBLFLG4
TBLBPFM  EQU   TBLFLG4
@NM00054 EQU   TBLFLG4
TBLBPIRQ EQU   TBLFLG4
TBLBPREQ EQU   TBLFLG4
TBLBPPRE EQU   TBLFLG4
@NM00053 EQU   TBLFLG3+1
TBLSTS   EQU   TBLFLG3
TBLMTS   EQU   TBLFLG3
TBLPTS   EQU   TBLFLG3
TBLACRQ  EQU   TBLFLG3
TBLCRQ   EQU   TBLFLG3
TBLSCDS  EQU   TBLFLG3
TBLACDS  EQU   TBLFLG3
TBLCDS   EQU   TBLFLG3
TBLMASS  EQU   TBLFLG2
@NM00052 EQU   TBLFLG2
TBLFMID  EQU   TBLFLG2
TBLGROUP EQU   TBLFLG2
TBLEXC   EQU   TBLFLG2
TBLSEL   EQU   TBLFLG2
@NM00051 EQU   TBLFLG1+1
TBLDISW  EQU   TBLFLG1+1
TBLDISR  EQU   TBLFLG1+1
TBLDISN  EQU   TBLFLG1+1
TBLNOJCL EQU   TBLFLG1
TBLFLUSH EQU   TBLFLG1
TBLUSER  EQU   TBLFLG1
TBLAPAR  EQU   TBLFLG1
TBLCOMP  EQU   TBLFLG1
TBLASSEM EQU   TBLFLG1
TBLCHECK EQU   TBLFLG1
TBLNOAPP EQU   TBLFLG1
@NM00050 EQU   TBLXOPTS+5
TBLNUCID EQU   TBLXOPTS+4
TBLJCLGT EQU   TBLXOPTS
TBLXEND0 EQU   TBLXPARM+124
@NM00049 EQU   TBLXPARM+108
TBLXIOP3 EQU   TBLXPARM+104
TBLXD2GT EQU   TBLXPARM+100
TBLXDLGT EQU   TBLXPARM+96
@NM00048 EQU   TBLXRC+3
TBLXIRC  EQU   TBLXRC+2
TBLXLRC  EQU   TBLXRC+1
TBLXTRC  EQU   TBLXRC
TBLXIBGN EQU   TBLXPARM+88
TBLXTSLP EQU   TBLXPARM+84
@NM00047 EQU   TBLXPARM+83
@NM00046 EQU   TBLXPARM+82
@NM00045 EQU   TBLXPARM+81
@NM00044 EQU   TBLXFLG1
TBLXTCRC EQU   TBLXFLG1
TBLXFUND EQU   TBLXPARM+72
TBLXFUNC EQU   TBLXPARM+64
@NM00043 EQU   TBLXPARM+62
TBLXCRQI EQU   TBLXPARM+61
TBLXCDSI EQU   TBLXPARM+60
TBLXLMGT EQU   TBLXPARM+56
TBLXSCGT EQU   TBLXPARM+52
TBLXSREL EQU   TBLXPARM+48
TBLXASGT EQU   TBLXPARM+44
TBLXIFGT EQU   TBLXPARM+40
TBLXNULL EQU   TBLXPARM+36
TBLXTOP  EQU   TBLXPARM+32
TBLXSEGT EQU   TBLXPARM+24
TBLXIOPF EQU   TBLXPARM+20
TBLXIOP2 EQU   TBLXPARM+16
TBLXEND  EQU   TBLXINDX+8
TBLXSTRT EQU   TBLXINDX+4
TBLXCUR  EQU   TBLXINDX
TBLXHDR  EQU   TBLXPARM
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00042 EQU   CCABLDLM+2
@NM00041 EQU   CCABLDLM
CCAUPDPM EQU   @NM00039+24
@NM00040 EQU   @NM00039+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00039+12
CCAUPDTE EQU   @NM00039+8
CCAUPDNM EQU   @NM00039
CCASUPPM EQU   @NM00037+24
@NM00038 EQU   @NM00037+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00037+12
CCAIOSUP EQU   @NM00037+8
CCASUPNM EQU   @NM00037
CCAZAPPM EQU   @NM00035+24
@NM00036 EQU   @NM00035+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00035+12
CCASPZAP EQU   @NM00035+8
CCAZAPNM EQU   @NM00035
CCACOMPM EQU   @NM00033+24
@NM00034 EQU   @NM00033+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00033+12
CCACOMRS EQU   @NM00033+8
CCACOMNM EQU   @NM00033
CCACPYPM EQU   @NM00031+24
@NM00032 EQU   @NM00031+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00031+12
CCACOPY  EQU   @NM00031+8
CCACPYNM EQU   @NM00031
CCAASMPM EQU   @NM00029+24
@NM00030 EQU   @NM00029+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00029+12
CCAASM   EQU   @NM00029+8
CCAASMNM EQU   @NM00029
CCALKDPM EQU   @NM00027+24
@NM00028 EQU   @NM00027+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00027+12
CCALKED  EQU   @NM00027+8
CCALKDNM EQU   @NM00027
CCAPGMPM EQU   @NM00025+24
@NM00026 EQU   @NM00025+21
CCABPGRC EQU   @NM00025+20
CCABPGSP EQU   @NM00025+12
CCABPGAD EQU   @NM00025+8
CCABPGNM EQU   @NM00025
CCAEND   EQU   HMASMCCA+371
@NM00024 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00023 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00022 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00021 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00020 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00019 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00018 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00017 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00016 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00015 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00014 EQU   @NM00009+18
@NM00013 EQU   @NM00009+16
@NM00012 EQU   @NM00009+8
@NM00011 EQU   @NM00009+4
@NM00010 EQU   @NM00009
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00008 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
@NM00007 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00006 EQU   CCAFBUFR+122
@NM00005 EQU   CCAFBUFR+120
@NM00004 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00003 EQU   CCAFBUFR+88
@NM00002 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00001 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00372 EQU   @RC00350
@RF00555 EQU   @EL00006
@RC00669 EQU   @RC00663
@RC00667 EQU   @RC00663
@RC00681 EQU   @RC00676
@RC00704 EQU   @EL00009
@RC00702 EQU   @EL00009
@RC00700 EQU   @EL00009
@RF00783 EQU   @EL00011
@ENDDATA EQU   *
         END   HMASMIDU,(C'PLS2026',0802,78334)
