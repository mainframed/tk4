         TITLE 'HMASMFXF   FORMAT AND PRINT HISTORY DATA FROM XRF FILE'
HMASMFXF CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMFXF  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*   FXFRTNCD=ZERO;                  /* RESET THE SWITCHES            */
         SLR   FXFRTNCD,FXFRTNCD                                   0168
*   CALL FXFINIT;                   /*                               */
*                                                                  0169
         BAL   @14,FXFINIT                                         0169
*   /*****************************************************************/
*   /*                                                               */
*   /* IF CALL WAS NOT FOR END OF FILE THEN LOOP READING RECORDS FROM*/
*   /* XREF GTA FILE AND FORMATTING THEM AS LONG AS THE RECORDS      */
*   /* RETRIEVED ARE FOR THE ELEMENT PASSED IN THE HMASMIOP          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0170
*   IF IOPRETRN=IOPGOOD             /* IF NOT END OF FILE            */
*     THEN                          /*                               */
         CLI   IOPRETRN(IOPPTR),0                                  0170
         BNE   @RF00170                                            0170
*     DO;                           /*                               */
*       DO WHILE(                   /* LOOP                          */
*             FXFRTNCD=ZERO         /* AS LONG AS NO ERRORS          */
*             &GTPRETRN=GTPGOOD     /* AND NOT EOF ON GTA FILE       */
*             &IOPTYPE=XRFETYPE     /* AND XREF RCD FOR MEMBER       */
*             &IOPNAME=XRFENAME);   /*                               */
         B     @DE00172                                            0172
@DL00172 DS    0H                                                  0173
*         RFY                       /*                               */
*           RTNCODE RSTD;           /*                               */
*         IF XRFRTYPE=XRFPBYMC      /* IF SYSMOD FOR MAC             */
*             ×XRFRTYPE=XRFPBYMD    /* OR SYSMOD FOR MOD             */
*             ×XRFRTYPE=XRFPBYSC    /* OR SYSMOD FOR SRC             */
*           THEN                    /* THEN CALL ROUTINE TO PRODUCE  */
         CLI   XRFRTYPE,37                                         0174
         BE    @RT00174                                            0174
         CLI   XRFRTYPE,47                                         0174
         BE    @RT00174                                            0174
         CLI   XRFRTYPE,57                                         0174
         BNE   @RF00174                                            0174
@RT00174 DS    0H                                                  0175
*           CALL FXFSMDBY;          /* SYSMOD HISTORY REPORT         */
         BAL   @14,FXFSMDBY                                        0175
*         ELSE                      /* ELSE CALL ROUTINE TO PRODUCE  */
*           CALL FXFXREF;           /* ALL OTHER XREF REPORTS        */
         B     @RC00174                                            0176
@RF00174 BAL   @14,FXFXREF                                         0176
*         FXFRTNCD=MAX(FXFRTNCD,RTNCODE);/* SAVE RC                  */
@RC00174 CR    FXFRTNCD,RTNCODE                                    0177
         BNL   *+6
         LR    FXFRTNCD,RTNCODE                                    0177
*         RFY                       /*                               */
*           RTNCODE UNRSTD;         /*                               */
*       END;                        /* END DO WHILE READ LOOP        */
@DE00172 CH    FXFRTNCD,@CH00251                                   0179
         BNE   @DC00172                                            0179
         CLI   GTPRETRN(GTPPTR),0                                  0179
         BNE   @DC00172                                            0179
         CLC   IOPTYPE(1,IOPPTR),XRFETYPE                          0179
         BNE   @DC00172                                            0179
         CLC   IOPNAME(8,IOPPTR),XRFENAME                          0179
         BE    @DL00172                                            0179
@DC00172 DS    0H                                                  0180
*     END;                          /* END NOT EOF                   */
*                                                                  0180
*   /*****************************************************************/
*   /*                                                               */
*   /* ALL XREF LISTINGS PRODUCED FOR ELEMENT. RETURN TO CALLER      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0181
*   RETURN CODE(FXFRTNCD);          /*                               */
@RF00170 LR    @15,FXFRTNCD                                        0181
         L     @13,4(,@13)                                         0181
         L     @14,12(,@13)                                        0181
         LM    @00,@12,20(@13)                                     0181
         BR    @14                                                 0181
         EJECT
*                                                                  0182
*   /*****************************************************************/
*   /*                                                               */
*   /* DO INITIALIZATION AND IF CALL FOR EOF DO TERMINATION          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0182
*FXFINIT:                           /*                               */
*   PROCEDURE;                      /*                               */
FXFINIT  STM   @14,@01,@SA00002                                    0182
         ST    @03,@SA00002+16                                     0182
         STM   @05,@12,@SA00002+20                                 0182
*   DECLARE                         /*                               */
*     LASTTYPE FIXED(8) INIT(IOPEOLST);/* TYPE CODE OF LAST ELEMENT  */
*   RFY                                                            0184
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   RFY                                                            0185
*     HMASMGTP BASED(GTPPTR);       /* XRF FILE                      */
*   IOPPTR=ADDR(PASSIOP);           /* INITIAL SETUP/ADDRESSABILITY  */
         L     IOPPTR,@PC00001                                     0186
*   GTPPTR=CCAGTP1;                 /*                               */
         L     GTPPTR,CCAGTP1(,CCAPTR)                             0187
*   GTPRCDLN=LENGTH(XRFRCD);        /* SETUP THE GTP FOR A READ      */
         MVC   GTPRCDLN(2,GTPPTR),@CH00472                         0188
*   GTPKEYLN=LENGTH(XRFETYPE)+LENGTH(XRFENAME);/*                    */
         MVC   GTPKEYLN(2,GTPPTR),@CH00434                         0189
*   GTPBUFAD=ADDR(XRFRCD);          /* SETUP FOR GETNEXT PROCESSING  */
*                                                                  0190
         LA    @10,XRFRCD                                          0190
         ST    @10,GTPBUFAD(,GTPPTR)                               0190
*   /*****************************************************************/
*   /*                                                               */
*   /* IF CALL AT END OF FILE RESET INTERNAL WORK AREAS IN CASE      */
*   /* CALLED AGAIN                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0191
*   IF IOPRETRN=IOPEOF              /* IF CALL FOR END OF FILE       */
*     THEN                          /*                               */
         CLI   IOPRETRN(IOPPTR),4                                  0191
         BNE   @RF00191                                            0191
*     DO;                           /*                               */
*       LASTTYPE=IOPEOLST;          /* SET INVALID LAST TYPE         */
         MVI   LASTTYPE,X'FF'                                      0193
*       XRFRCD=''B;                 /*                               */
         XC    XRFRCD(30),XRFRCD                                   0194
*       GTPFUNCT=GTPFREE;           /*                               */
         MVI   GTPFUNCT(GTPPTR),X'0A'                              0195
*       CALL HMASMGTA(HMASMGTP);    /* FREE GTA FILE                 */
         ST    GTPPTR,@AL00001                                     0196
         L     @15,@CV01352                                        0196
         LA    @01,@AL00001                                        0196
         BALR  @14,@15                                             0196
*     END;                          /*                               */
*                                                                  0197
*   /*****************************************************************/
*   /*                                                               */
*   /* IF CALL FOR NEW TYPE OF ELEMENT THEN REPOSITION GTA FILE SO   */
*   /* THAT NEXT GETN WILL GET THE FIRST RECORD OF THE NEW TYPE      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0198
*   ELSE                            /*                               */
*     DO;                           /*                               */
         B     @RC00191                                            0198
@RF00191 DS    0H                                                  0199
*       IF LASTTYPE^=IOPTYPE        /* IF XREF FOR NEW TYPE ELEMENT  */
*         THEN                      /* THEN MUST REPOSITION GETN     */
         CLC   LASTTYPE(1),IOPTYPE(IOPPTR)                         0199
         BE    @RF00199                                            0199
*         DO;                       /* OPERATIONS TO FIRST RECORD    */
*           XRFRCD=''B;             /*                               */
         XC    XRFRCD(30),XRFRCD                                   0201
*           LASTTYPE=IOPTYPE;       /*                               */
         MVC   LASTTYPE(1),IOPTYPE(IOPPTR)                         0202
*           GTPFUNCT=GTPLOC;        /* OF THAT TYPE                  */
         MVI   GTPFUNCT(GTPPTR),X'03'                              0203
*           XRFETYPE=IOPTYPE;       /* SET KEY FOR TYPE CODE         */
         MVC   XRFETYPE(1),IOPTYPE(IOPPTR)                         0204
*           XRFENAME=''B;           /* AND LOWEST POSSIBLE MEMBER    */
         XC    XRFENAME(8),XRFENAME                                0205
*           CALL HMASMGTA(HMASMGTP);/*                               */
         ST    GTPPTR,@AL00001                                     0206
         L     @15,@CV01352                                        0206
         LA    @01,@AL00001                                        0206
         BALR  @14,@15                                             0206
*           GTPFUNCT=GTPSTRTN;      /* RESTART GETN PROCESSING       */
         MVI   GTPFUNCT(GTPPTR),X'06'                              0207
*           CALL HMASMGTA(HMASMGTP);/* AT THAT POINT                 */
         ST    GTPPTR,@AL00001                                     0208
         L     @15,@CV01352                                        0208
         LA    @01,@AL00001                                        0208
         BALR  @14,@15                                             0208
*           GTPFUNCT=GTPGETN;       /* NOW PRIME BUFFER WITH         */
         MVI   GTPFUNCT(GTPPTR),X'08'                              0209
*           CALL HMASMGTA(HMASMGTP);/* THAT RECORD                   */
         ST    GTPPTR,@AL00001                                     0210
         L     @15,@CV01352                                        0210
         LA    @01,@AL00001                                        0210
         BALR  @14,@15                                             0210
*         END;                      /*                               */
*                                                                  0211
*       /*************************************************************/
*       /*                                                           */
*       /* IF CALL FOR SAME TYPE ELEMENT THEN READ THRU GTA FILE TILL*/
*       /* THE FIRST RECORD FOR THAT TYPE AND ELEMENT IS FOUND OR    */
*       /* UNTIL A HIGHER ELEMENT OR DIFFERENT TYPE IS FOUND         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0212
*       GTPFUNCT=GTPGETN;           /*                               */
@RF00199 MVI   GTPFUNCT(GTPPTR),X'08'                              0212
*       DO WHILE(                   /* LOOP UNTIL                    */
*             GTPRETRN=GTPGOOD      /* BAD RC FOR GTA                */
*             &XRFETYPE=IOPTYPE     /* OR DIFFERENT TYPE FOUND       */
*             &XRFENAME<IOPNAME);   /* OR HIGHER ELEMENT ENCOUNTERED */
         B     @DE00213                                            0213
@DL00213 DS    0H                                                  0214
*         CALL HMASMGTA(HMASMGTP);  /*                               */
         ST    GTPPTR,@AL00001                                     0214
         L     @15,@CV01352                                        0214
         LA    @01,@AL00001                                        0214
         BALR  @14,@15                                             0214
*       END;                        /* END GTA READ LOOP             */
@DE00213 CLI   GTPRETRN(GTPPTR),0                                  0215
         BNE   @DC00213                                            0215
         CLC   XRFETYPE(1),IOPTYPE(IOPPTR)                         0215
         BNE   @DC00213                                            0215
         CLC   XRFENAME(8),IOPNAME(IOPPTR)                         0215
         BL    @DL00213                                            0215
@DC00213 DS    0H                                                  0216
*     END;                          /* END CALL FOR SAME TYPE ELEMENT*/
*   GTPFUNCT=GTPGETN;               /* THEN GO TO THE READ ROUTINE   */
@RC00191 MVI   GTPFUNCT(GTPPTR),X'08'                              0217
*   RETURN CODE(ZERO);              /*                               */
         SLR   @15,@15                                             0218
         L     @14,@SA00002                                        0218
         LM    @00,@01,@SA00002+8                                  0218
         L     @03,@SA00002+16                                     0218
         LM    @05,@12,@SA00002+20                                 0218
         BR    @14                                                 0218
*   END FXFINIT;                    /*                               */
         EJECT
*                                                                  0220
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROCEDURE IS CALLED TO PRODUCE THE XREF REPORTS FOR      */
*   /* RECORDS OF THE SYSMOD HISTORY TYPE                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0220
*FXFSMDBY:                                                         0220
*   PROCEDURE;                      /*                               */
FXFSMDBY STM   @14,@12,@SA00003                                    0220
*   DECLARE                                                        0221
*     SMDBYRC FIXED(8);             /*                               */
*   RFY                             /*                               */
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   RFY                             /*                               */
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   SMDBYRC=ZERO;                   /*                               */
*                                                                  0224
         SLR   SMDBYRC,SMDBYRC                                     0224
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP AND PRINT SUBHEADING LINE. SAVE TYPE CODE AND NAME OF  */
*   /* THE XREF RECORD TO DETERMINE WHEN LOOP WILL STOP              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0225
*   HDSUBHD=TXTSMDBY;               /* SET UP SUBHEADING             */
         MVC   HDSUBHD(15),@CC01410                                0225
*   HDSEPCHR=TXTEQ;                 /*                               */
         MVI   HDSEPCHR,C'='                                       0226
*   HDSMDHMP=TXTSMDMP;              /* HEADING                       */
         MVC   HDSMDHMP(65),TXTSMDMP                               0227
*   CALL FXFWRITE;                  /*                               */
         BAL   @14,FXFWRITE                                        0228
*   RFY                             /*                               */
*     RTNCODE RSTD;                 /*                               */
*   SMDBYRC=MAX(SMDBYRC,RTNCODE);   /*                               */
         CR    SMDBYRC,RTNCODE                                     0230
         BNL   *+6
         LR    SMDBYRC,RTNCODE                                     0230
*   RFY                             /*                               */
*     RTNCODE UNRSTD;               /*                               */
*   SAVETYPE=XRFETYPE;              /* SAVE TYPE AND ELEMENT NAME    */
         SLR   SAVETYPE,SAVETYPE                                   0232
         IC    SAVETYPE,XRFETYPE                                   0232
*   SAVENAME=XRFENAME;              /*                               */
         MVC   SAVENAME(8),XRFENAME                                0233
*   SAVRTYPE=XRFRTYPE;              /* AND XREF RECORD TYPE          */
*                                                                  0234
         SLR   SAVRTYPE,SAVRTYPE                                   0234
         IC    SAVRTYPE,XRFRTYPE                                   0234
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP READING AND FORMATTING RECORDS UNTIL A RECORD IS HIT THAT*/
*   /* IS NOT FOR ELEMENT AND TYPE PASSED IN INITIAL XREF RCD.       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0235
*   DO WHILE(                       /* LOOP PROCESSING RECORDS       */
*         SMDBYRC=ZERO              /* WHILE NO ERRORS               */
*         &GTPRETRN=GTPGOOD         /* AND NOT EOF                   */
*         &XRFETYPE=SAVETYPE        /* AND SAME TYPE ELEMENT         */
*         &XRFENAME=SAVENAME        /* FOR SAME ELEMENT              */
*         &XRFRTYPE=SAVRTYPE);      /* AND SAME TYPE XREF RECORD     */
*                                                                  0235
         B     @DE00235                                            0235
@DL00235 DS    0H                                                  0236
*     /***************************************************************/
*     /*                                                             */
*     /* SET UP SYSMOD NUMBER AND TYPE SYSMOD                        */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0236
*     HDSMDHNM=XRF3PTF;             /* SYSMOD NUMBER(7CHARS)         */
         MVC   HDSMDHNM(7),XRF3PTF                                 0236
*     IF XRF3PTYP=IOPPPTF           /*                               */
*       THEN                        /*                               */
         CLI   XRF3PTYP,3                                          0237
         BNE   @RF00237                                            0237
*       HDSMDHTP=TXTPTF;            /*                               */
         MVC   HDSMDHTP(8),@CC01433                                0238
*     ELSE                          /*                               */
*       IF XRF3PTYP=IOPPAPAR        /*                               */
*         THEN                      /*                               */
         B     @RC00237                                            0239
@RF00237 CLI   XRF3PTYP,2                                          0239
         BNE   @RF00239                                            0239
*         HDSMDHTP=TXTAPAR;         /*                               */
         MVC   HDSMDHTP(8),@CC01435                                0240
*       ELSE                        /*                               */
*         IF XRF3PTYP=IOPPUSER      /*                               */
*           THEN                    /*                               */
         B     @RC00239                                            0241
@RF00239 CLI   XRF3PTYP,1                                          0241
         BNE   @RF00241                                            0241
*           HDSMDHTP=TXTUSER;       /*                               */
         MVC   HDSMDHTP(8),@CC01437                                0242
*         ELSE                      /*                               */
*           IF XRF3PTYP=IOPPFUNC    /*                               */
*             THEN                  /*                               */
         B     @RC00241                                            0243
@RF00241 CLI   XRF3PTYP,4                                          0243
         BNE   @RF00243                                            0243
*             HDSMDHTP=TXTFUNCT;    /*                               */
*                                                                  0244
         MVC   HDSMDHTP(8),@CC01431                                0244
*     /***************************************************************/
*     /*                                                             */
*     /* CONVERT DATE ROUTINE                                        */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0245
*     CNVDATE=XRF3DAT;              /* UNPAK XRF3DAT FOR HDSMDHDT    */
@RF00243 DS    0H                                                  0245
@RC00241 DS    0H                                                  0245
@RC00239 DS    0H                                                  0245
@RC00237 MVC   CNVDATE(3),XRF3DAT                                  0245
*     UNPK(WORKAREA(1:5),CNVDATE(1:3));                            0246
         UNPK  WORKAREA(5),CNVDATE(3)                              0246
*     HDSMDHYY=YEAR;                /* FILL IN THE YEAR              */
         MVC   HDSMDHYY(2),YEAR                                    0247
*     HDSMDHPR=TXTPER;              /* THIS IS THE JULIAN DATE       */
         MVI   HDSMDHPR,C'.'                                       0248
*     HDSMDHDD=DAY;                 /* FILL IN THE DAY               */
         MVC   HDSMDHDD(3),DAY                                     0249
*     HDSMDHDD(3)=HDSMDHDD(3)×HEX0;                                0250
*                                                                  0250
         OI    HDSMDHDD+2,X'F0'                                    0250
*     /***************************************************************/
*     /*                                                             */
*     /* SET MCS TYPE                                                */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0251
*     IF XRF3PIND=IOPPMOD           /*                               */
*       THEN                        /*                               */
         CLI   XRF3PIND,1                                          0251
         BNE   @RF00251                                            0251
*       HDSMDHMC=TXTMOD;            /*                               */
         MVC   HDSMDHMC(8),@CC01443                                0252
*     ELSE                          /*                               */
*       IF XRF3PIND=IOPPZAP         /*                               */
*         THEN                      /*                               */
         B     @RC00251                                            0253
@RF00251 CLI   XRF3PIND,2                                          0253
         BNE   @RF00253                                            0253
*         HDSMDHMC=TXTSZAP;         /*                               */
         MVC   HDSMDHMC(8),@CC01445                                0254
*       ELSE                        /*                               */
*         IF XRF3PIND=IOPPXPD       /*                               */
*           THEN                    /*                               */
         B     @RC00253                                            0255
@RF00253 CLI   XRF3PIND,3                                          0255
         BNE   @RF00255                                            0255
*           HDSMDHMC=TXTXZAP;       /*                               */
         MVC   HDSMDHMC(8),@CC01447                                0256
*         ELSE                      /*                               */
*           IF XRF3PIND=IOPPMCR     /*                               */
*             THEN                  /*                               */
         B     @RC00255                                            0257
@RF00255 CLI   XRF3PIND,4                                          0257
         BNE   @RF00257                                            0257
*             HDSMDHMC=TXTMAC;      /*                               */
         MVC   HDSMDHMC(8),@CC01449                                0258
*           ELSE                    /*                               */
*             IF XRF3PIND=IOPPMCU   /*                               */
*               THEN                /*                               */
         B     @RC00257                                            0259
@RF00257 CLI   XRF3PIND,5                                          0259
         BNE   @RF00259                                            0259
*               HDSMDHMC=TXTMACU;   /*                               */
         MVC   HDSMDHMC(8),@CC01451                                0260
*             ELSE                  /*                               */
*               IF XRF3PIND=IOPPSCR /*                               */
*                 THEN              /*                               */
         B     @RC00259                                            0261
@RF00259 CLI   XRF3PIND,6                                          0261
         BNE   @RF00261                                            0261
*                 HDSMDHMC=TXTSRC;  /*                               */
         MVC   HDSMDHMC(8),@CC01439                                0262
*               ELSE                /*                               */
*                 IF XRF3PIND=IOPPSCU/*                              */
*                   THEN            /*                               */
         B     @RC00261                                            0263
@RF00261 CLI   XRF3PIND,7                                          0263
         BNE   @RF00263                                            0263
*                   HDSMDHMC=TXTSRCU;/*                              */
         MVC   HDSMDHMC(8),@CC01441                                0264
*                 ELSE              /*                               */
*                   IF XRF3PIND=IOPPASM/*                            */
*                     THEN          /*                               */
         B     @RC00263                                            0265
@RF00263 CLI   XRF3PIND,8                                          0265
         BNE   @RF00265                                            0265
*                     HDSMDHMC=TXTASM;/*                             */
         MVC   HDSMDHMC(8),@CC01453                                0266
*     IF HDSMDHMC(1)=BLANK          /* IF TYPE NOT SET YET           */
*       THEN                        /*                               */
@RF00265 DS    0H                                                  0267
@RC00263 DS    0H                                                  0267
@RC00261 DS    0H                                                  0267
@RC00259 DS    0H                                                  0267
@RC00257 DS    0H                                                  0267
@RC00255 DS    0H                                                  0267
@RC00253 DS    0H                                                  0267
@RC00251 CLI   HDSMDHMC,C' '                                       0267
         BNE   @RF00267                                            0267
*       DO;                         /*                               */
*         IF XRF3PIND=IOPPRMOD      /*                               */
*           THEN                    /*                               */
         CLI   XRF3PIND,81                                         0269
         BNE   @RF00269                                            0269
*           HDSMDHMC=TXTRMOD;       /*                               */
         MVC   HDSMDHMC(8),@CC01459                                0270
*         ELSE                      /*                               */
*           IF XRF3PIND=IOPPRZAP    /*                               */
*             THEN                  /*                               */
         B     @RC00269                                            0271
@RF00269 CLI   XRF3PIND,82                                         0271
         BNE   @RF00271                                            0271
*             HDSMDHMC=TXTRSZAP;    /*                               */
         MVC   HDSMDHMC(8),@CC01461                                0272
*           ELSE                    /*                               */
*             IF XRF3PIND=IOPPRXPD  /*                               */
*               THEN                /*                               */
         B     @RC00271                                            0273
@RF00271 CLI   XRF3PIND,83                                         0273
         BNE   @RF00273                                            0273
*               HDSMDHMC=TXTRXZAP;  /*                               */
         MVC   HDSMDHMC(8),@CC01463                                0274
*             ELSE                  /*                               */
*               IF XRF3PIND=IOPPRMCR/*                               */
*                 THEN              /*                               */
         B     @RC00273                                            0275
@RF00273 CLI   XRF3PIND,84                                         0275
         BNE   @RF00275                                            0275
*                 HDSMDHMC=TXTRMAC; /*                               */
         MVC   HDSMDHMC(8),@CC01465                                0276
*               ELSE                /*                               */
*                 IF XRF3PIND=IOPPRMCU/*                             */
*                   THEN            /*                               */
         B     @RC00275                                            0277
@RF00275 CLI   XRF3PIND,85                                         0277
         BNE   @RF00277                                            0277
*                   HDSMDHMC=TXTRMACU;/*                             */
         MVC   HDSMDHMC(8),@CC01467                                0278
*                 ELSE              /*                               */
*                   IF XRF3PIND=IOPPRSCR/*                           */
*                     THEN          /*                               */
         B     @RC00277                                            0279
@RF00277 CLI   XRF3PIND,86                                         0279
         BNE   @RF00279                                            0279
*                     HDSMDHMC=TXTRSRC;/*                            */
         MVC   HDSMDHMC(8),@CC01455                                0280
*                   ELSE            /*                               */
*                     IF XRF3PIND=IOPPRSCU/*                         */
*                       THEN        /*                               */
         B     @RC00279                                            0281
@RF00279 CLI   XRF3PIND,87                                         0281
         BNE   @RF00281                                            0281
*                       HDSMDHMC=TXTRSRCU;/*                         */
         MVC   HDSMDHMC(8),@CC01457                                0282
*       END;                        /*                               */
*                                                                  0283
@RF00281 DS    0H                                                  0283
@RC00279 DS    0H                                                  0283
@RC00277 DS    0H                                                  0283
@RC00275 DS    0H                                                  0283
@RC00273 DS    0H                                                  0283
@RC00271 DS    0H                                                  0283
@RC00269 DS    0H                                                  0284
*     /***************************************************************/
*     /*                                                             */
*     /* CHECK THE FLAGS IN THE XREF RECORD USING IOPFLGS5 AS A MAP  */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0284
*     IOPFLGS5=XRF3STAT;            /* USE IOPFLGS5 AS A MAP FOR   0284
*                                      CHECK OF XRF3STAT             */
@RF00267 MVC   IOPFLGS5(1,IOPPTR),XRF3STAT                         0284
*     IF IOPAPP=ON                  /* IF APP BIT IS ON              */
*       THEN                        /*                               */
         TM    IOPAPP(IOPPTR),B'10000000'                          0285
         BNO   @RF00285                                            0285
*       HDSMDAPP=TXTAPP;            /* PUT TEXT IN THE BUFFER        */
         MVC   HDSMDAPP(3),@CC01469                                0286
*     IF IOPRES=ON                  /* IF RES BIT IS ON              */
*       THEN                        /*                               */
@RF00285 TM    IOPRES(IOPPTR),B'01000000'                          0287
         BNO   @RF00287                                            0287
*       HDSMDRES=TXTRES;            /* PUT TEXT IN THE BUFFER        */
         MVC   HDSMDRES(3),@CC01471                                0288
*     IF IOPACC=ON                  /* IF ACC BIT IS ON              */
*       THEN                        /*                               */
@RF00287 TM    IOPACC(IOPPTR),B'00100000'                          0289
         BNO   @RF00289                                            0289
*       HDSMDACC=TXTACC;            /* PUT TEXT IN THE BUFFER        */
         MVC   HDSMDACC(3),@CC01473                                0290
*     IF IOPBYP=ON                  /* IF BYP BIT IS ON              */
*       THEN                        /*                               */
@RF00289 TM    IOPBYP(IOPPTR),B'00000010'                          0291
         BNO   @RF00291                                            0291
*       HDSMDBYP=TXTBYP;            /* PUT TEXT IN THE BUFFER        */
         MVC   HDSMDBYP(3),@CC01477                                0292
*     IF IOPERROR=ON                /* IF ERR BIT IS ON              */
*       THEN                        /*                               */
@RF00291 TM    IOPERROR(IOPPTR),B'00010000'                        0293
         BNO   @RF00293                                            0293
*       HDSMDERR=TXTERR;            /* PUT TEXT IN THE BUFFER        */
         MVC   HDSMDERR(3),@CC01475                                0294
*     IF IOPREGEN=ON                /* IF RGN BIT IS ON              */
*       THEN                        /*                               */
@RF00293 TM    IOPREGEN(IOPPTR),B'00000001'                        0295
         BNO   @RF00295                                            0295
*       HDSMDRGN=TXTRGN;            /* PUT TEXT IN THE BUFFER        */
*                                                                  0296
         MVC   HDSMDRGN(3),@CC01479                                0296
*     /***************************************************************/
*     /*                                                             */
*     /* ALL DATA FROM LINE FORMATTED. NOW PRINT LINE AND THEN CALL  */
*     /* HMASMGTA TO GET NEXT RECORD FROM XREF FILE.                 */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0297
*     CALL FXFWRITE;                /*                               */
@RF00295 BAL   @14,FXFWRITE                                        0297
*     RFY                           /*                               */
*       RTNCODE RSTD;               /*                               */
*     SMDBYRC=MAX(SMDBYRC,RTNCODE); /*                               */
         CR    SMDBYRC,RTNCODE                                     0299
         BNL   *+6
         LR    SMDBYRC,RTNCODE                                     0299
*     RFY                           /*                               */
*       RTNCODE UNRSTD;             /*                               */
*     CALL HMASMGTA(HMASMGTP);      /* GET ANOTHER RECORD TO PROCESS */
         ST    GTPPTR,@AL00001                                     0301
         L     @15,@CV01352                                        0301
         LA    @01,@AL00001                                        0301
         BALR  @14,@15                                             0301
*   END;                            /* END FOR DO WHILE GTA READ     */
*                                                                  0302
@DE00235 CH    SMDBYRC,@CH00251                                    0302
         BNE   @DC00235                                            0302
         CLI   GTPRETRN(GTPPTR),0                                  0302
         BNE   @DC00235                                            0302
         SLR   @10,@10                                             0302
         IC    @10,XRFETYPE                                        0302
         CR    SAVETYPE,@10                                        0302
         BNE   @DC00235                                            0302
         CLC   XRFENAME(8),SAVENAME                                0302
         BNE   @DC00235                                            0302
         SLR   @10,@10                                             0302
         IC    @10,XRFRTYPE                                        0302
         CR    SAVRTYPE,@10                                        0302
         BE    @DL00235                                            0302
@DC00235 DS    0H                                                  0303
*   /*****************************************************************/
*   /*                                                               */
*   /* ALL GTA RECORDS FOR SYSMODBY FOR ELEMENT HAVE BEEN PROCESSED  */
*   /* AND FORMATTED. RETURN TO CALLER                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0303
*   RETURN CODE(SMDBYRC);                                          0303
         LR    @15,SMDBYRC                                         0303
         L     @14,@SA00003                                        0303
         LM    @00,@12,@SA00003+8                                  0303
         BR    @14                                                 0303
*   END FXFSMDBY;                                                  0304
         EJECT
*                                                                  0305
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO PROCESS ALL XREF FORMATTING OTHER THAN      */
*   /* SYSMOD BY REPORTS                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0305
*FXFXREF:                                                          0305
*   PROCEDURE;                      /*                               */
FXFXREF  STM   @14,@12,@SA00004                                    0305
*   DECLARE                                                        0306
*     XREFRC FIXED(8);              /*                               */
*   DECLARE                         /*                               */
*     XREFX FIXED(31);              /* OUTPUT ARRAY INDEX            */
*   RFY                             /*                               */
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   RFY                             /*                               */
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   XREFRC=ZERO;                    /*                               */
         SLR   XREFRC,XREFRC                                       0310
*   SAVETYPE=XRFETYPE;              /* SAVE TYPE AND ELEMENT NAME    */
         SLR   SAVETYPE,SAVETYPE                                   0311
         IC    SAVETYPE,XRFETYPE                                   0311
*   SAVENAME=XRFENAME;              /*                               */
         MVC   SAVENAME(8),XRFENAME                                0312
*   SAVRTYPE=XRFRTYPE;              /* AND XREF RECORD TYPE          */
*                                                                  0313
         SLR   SAVRTYPE,SAVRTYPE                                   0313
         IC    SAVRTYPE,XRFRTYPE                                   0313
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP SUBHEADINGS                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0314
*   DO XREFX=1 BY 1 WHILE(          /* LOOP THRU ARRAY               */
*         FXFRTYPE(XREFX)^=IOPEOLST /* TILL END OF LIST              */
*         &FXFRTYPE(XREFX)^=XRFRTYPE);/* OR MATCH FOUND              */
         LA    XREFX,1                                             0314
         B     @DE00314                                            0314
@DL00314 DS    0H                                                  0315
*   END;                            /*                               */
         AH    XREFX,@CH00085                                      0315
@DE00314 LR    @10,XREFX                                           0315
         SLA   @10,4                                               0315
         SLR   @15,@15                                             0315
         IC    @15,FXFRTYPE-16(@10)                                0315
         CH    @15,@CH00623                                        0315
         BE    @DC00314                                            0315
         SLR   @10,@10                                             0315
         IC    @10,XRFRTYPE                                        0315
         CR    @15,@10                                             0315
         BNE   @DL00314                                            0315
@DC00314 DS    0H                                                  0316
*   HDSUBHD=FXFHEAD(XREFX);         /* MOVE OVER HEADING             */
         LR    @10,XREFX                                           0316
         SLA   @10,4                                               0316
         LA    @01,FXFHEAD-16(@10)                                 0316
         MVC   HDSUBHD(15),0(@01)                                  0316
*                                                                  0317
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP READING AND PROCESSING XREF RECORDS AS LONG AS SAME TYPE */
*   /* XREF RECORD AND FOR SAME ELEMENT                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0317
*   HDSEPCHR=TXTEQ;                 /*                               */
         MVI   HDSEPCHR,C'='                                       0317
*   XREFX=1;                        /* INIT OUTPUT ARRAY INDEX       */
         LA    XREFX,1                                             0318
*   DO WHILE(                       /* LOOP PROCESSING RECORDS       */
*         XREFRC=ZERO               /* WHILE NO ERRORS               */
*         &GTPRETRN=GTPGOOD         /* AND NOT EOF                   */
*         &XRFETYPE=SAVETYPE        /* AND SAME TYPE ELEMENT         */
*         &XRFENAME=SAVENAME        /* FOR SAME ELEMENT              */
*         &XRFRTYPE=SAVRTYPE);      /* AND SAME TYPE XREF RECORD     */
*                                                                  0319
         B     @DE00319                                            0319
@DL00319 DS    0H                                                  0320
*     /***************************************************************/
*     /*                                                             */
*     /* IF OUTPUT LINE FULL THEN PRINT IT NOW                       */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0320
*     IF XREFX>DIM(HDVSLIST)        /* IF MAX PER LINE REACHED       */
*       THEN                        /*                               */
         CH    XREFX,@CH00434                                      0320
         BNH   @RF00320                                            0320
*       DO;                         /*                               */
*         CALL FXFWRITE;            /* WRITE OUTPUT LINE             */
         BAL   @14,FXFWRITE                                        0322
*         RFY                       /*                               */
*           RTNCODE RSTD;           /*                               */
*         XREFRC=MAX(XREFRC,RTNCODE);/* SAVE RC                      */
         CR    XREFRC,RTNCODE                                      0324
         BNL   *+6
         LR    XREFRC,RTNCODE                                      0324
*         RFY                       /*                               */
*           RTNCODE UNRSTD;         /*                               */
*         XREFX=1;                  /* RESET INDEX TO FIRST ENTRY    */
         LA    XREFX,1                                             0326
*       END;                        /*                               */
*                                                                  0327
*     /***************************************************************/
*     /*                                                             */
*     /* NOW PUT IN ELEMENT OR SYSMOD NUMBER IN OUTPUT LINE          */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0328
*     IF XRFRTYPE=XRFASMMC          /* IF MAC FOR ASSEM              */
*         ×XRFRTYPE=XRFSRCMC        /* OR MAC FOR SRC                */
*       THEN                        /*                               */
@RF00320 CLI   XRFRTYPE,10                                         0328
         BE    @RT00328                                            0328
         CLI   XRFRTYPE,53                                         0328
         BNE   @RF00328                                            0328
@RT00328 DS    0H                                                  0329
*       HDVSDATA(XREFX)=XRF1MAC;    /* MOVE MACRO NAME               */
         LR    @10,XREFX                                           0329
         MH    @10,@CH00327                                        0329
         LA    @01,HDVSDATA-10(@10)                                0329
         MVC   0(8,@01),XRF1MAC                                    0329
*     ELSE                          /*                               */
*       IF XRFRTYPE=XRFLMDMD        /* IF MOD FOR LMODS              */
*         THEN                      /*                               */
         B     @RC00328                                            0330
@RF00328 CLI   XRFRTYPE,20                                         0330
         BNE   @RF00330                                            0330
*         HDVSDATA(XREFX)=XRF2MOD;  /* MOVE MOD NAME                 */
         LR    @10,XREFX                                           0331
         MH    @10,@CH00327                                        0331
         LA    @01,HDVSDATA-10(@10)                                0331
         MVC   0(8,@01),XRF2MOD                                    0331
*       ELSE                        /* ELSE MUST BE PTF TYPE DATA    */
*         HDVSSMD(XREFX)=XRFX4PTF;  /* MOVE SYSMOD NUMBER            */
         B     @RC00330                                            0332
@RF00330 LR    @10,XREFX                                           0332
         MH    @10,@CH00327                                        0332
         LA    @01,HDVSSMD-10(@10)                                 0332
         MVC   0(7,@01),XRFX4PTF                                   0332
*     XREFX=XREFX+1;                /* INCR OUTPUT INDEX             */
@RC00330 DS    0H                                                  0333
@RC00328 AH    XREFX,@CH00085                                      0333
*     CALL HMASMGTA(HMASMGTP);      /* GET NEXT RECORD TO PROCESS    */
         ST    GTPPTR,@AL00001                                     0334
         L     @15,@CV01352                                        0334
         LA    @01,@AL00001                                        0334
         BALR  @14,@15                                             0334
*   END;                            /* END DO WHILE GTA READ LOOP    */
@DE00319 CH    XREFRC,@CH00251                                     0335
         BNE   @DC00319                                            0335
         CLI   GTPRETRN(GTPPTR),0                                  0335
         BNE   @DC00319                                            0335
         SLR   @10,@10                                             0335
         IC    @10,XRFETYPE                                        0335
         CR    SAVETYPE,@10                                        0335
         BNE   @DC00319                                            0335
         CLC   XRFENAME(8),SAVENAME                                0335
         BNE   @DC00319                                            0335
         SLR   @10,@10                                             0335
         IC    @10,XRFRTYPE                                        0335
         CR    SAVRTYPE,@10                                        0335
         BE    @DL00319                                            0335
@DC00319 DS    0H                                                  0336
*                                                                  0336
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ANY DATA WAS MOVED TO OUTPUT LINE AND NOT YET PRINTED THEN */
*   /* PRINT IT NOW                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0336
*   IF XREFX>1                      /* IF ANY DATA IN OUTPUT LINE    */
*     THEN                          /*                               */
         CH    XREFX,@CH00085                                      0336
         BNH   @RF00336                                            0336
*     DO;                           /*                               */
*       CALL FXFWRITE;              /*                               */
         BAL   @14,FXFWRITE                                        0338
*       RFY                         /*                               */
*         RTNCODE RSTD;             /*                               */
*       XREFRC=MAX(XREFRC,RTNCODE); /* SAVE RC                       */
         CR    XREFRC,RTNCODE                                      0340
         BNL   *+6
         LR    XREFRC,RTNCODE                                      0340
*       RFY                         /*                               */
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /*                               */
*                                                                  0342
*   /*****************************************************************/
*   /*                                                               */
*   /* ALL XREF DATA OF INIT TYPE FOR THIS ELEMENT HAS BEEN PROCESSED*/
*   /* AND FORMATTED. RETURN TO CALLER                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0343
*   RETURN CODE(XREFRC);                                           0343
@RF00336 LR    @15,XREFRC                                          0343
         L     @14,@SA00004                                        0343
         LM    @00,@12,@SA00004+8                                  0343
         BR    @14                                                 0343
*   END FXFXREF;                                                   0344
         EJECT
*                                                                  0345
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO PRINT OUTPUT LINE                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0345
*FXFWRITE:                                                         0345
*   PROCEDURE;                      /*                               */
FXFWRITE STM   @14,@12,@SA00005                                    0345
*   DECLARE                         /*                               */
*     SAVBUFAD FIXED(31),           /*                               */
*     SAVDSID FIXED(8),             /*                               */
*     SAVTYPE FIXED(8),             /*                               */
*     SAVFUNCT FIXED(8);            /*                               */
*   RFY                                                            0347
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   RFY                                                            0348
*     HMASMPRL BASED(IOPBUFAD);     /*                               */
*   SAVBUFAD=IOPBUFAD;              /* SAVE THE IOP                  */
         L     SAVBUFAD,IOPBUFAD(,IOPPTR)                          0349
*   SAVDSID=IOPDSID;                /*                               */
         SLR   SAVDSID,SAVDSID                                     0350
         IC    SAVDSID,IOPDSID(,IOPPTR)                            0350
*   SAVTYPE=IOPTYPE;                /*                               */
         SLR   SAVTYPE,SAVTYPE                                     0351
         IC    SAVTYPE,IOPTYPE(,IOPPTR)                            0351
*   SAVFUNCT=IOPFUNCT;              /*                               */
         SLR   SAVFUNCT,SAVFUNCT                                   0352
         IC    SAVFUNCT,IOPFUNCT(,IOPPTR)                          0352
*   IOPBUFAD=ADDR(OUTAREA);         /* SETUP THE IOP FOR PRINT       */
         LA    @10,OUTAREA                                         0353
         ST    @10,IOPBUFAD(,IOPPTR)                               0353
*   HMASMPRL=''B;                   /*                               */
         XC    HMASMPRL(10,@10),HMASMPRL(@10)                      0354
*   PRLRLEN=LENGTH(PRNTBUF);        /* THE PRL MUST BE SET EVEN IF NO*/
         MVC   PRLRLEN(2,@10),@CH01289                             0355
*   IOPDSID=CCALSTDS;               /*                               */
         MVC   IOPDSID(1,IOPPTR),CCALSTDS(CCAPTR)                  0356
*   IOPFUNCT=IOPWRITE;              /*                               */
         MVI   IOPFUNCT(IOPPTR),X'51'                              0357
*   CALL HMASMIO(HMASMIOP);         /* CALL I/O TO PRINT THE BUFFER  */
         ST    IOPPTR,@AL00001                                     0358
         L     @15,@CV01351                                        0358
         LA    @01,@AL00001                                        0358
         BALR  @14,@15                                             0358
*   PRNTBUF(1:LENGTH(PRNTBUF))='';  /* RESET OUTPUT AREA             */
         MVI   PRNTBUF,C' '                                        0359
         MVC   PRNTBUF+1(119),PRNTBUF                              0359
*   IOPBUFAD=SAVBUFAD;              /* RESTORE THE IOP               */
         ST    SAVBUFAD,IOPBUFAD(,IOPPTR)                          0360
*   IOPDSID=SAVDSID;                /*                               */
         STC   SAVDSID,IOPDSID(,IOPPTR)                            0361
*   IOPTYPE=SAVTYPE;                /*                               */
         STC   SAVTYPE,IOPTYPE(,IOPPTR)                            0362
*   IOPFUNCT=SAVFUNCT;              /*                               */
         STC   SAVFUNCT,IOPFUNCT(,IOPPTR)                          0363
*   RETURN CODE(IOPRETRN);          /* RETURN WITH CODE FROM WRITE   */
         SLR   @15,@15                                             0364
         IC    @15,IOPRETRN(,IOPPTR)                               0364
         L     @14,@SA00005                                        0364
         LM    @00,@12,@SA00005+8                                  0364
         BR    @14                                                 0364
*   END FXFWRITE;                   /*                               */
*   END HMASMFXF                    /*                               */
*                                                                  0366
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMPRL)                                       */
*/*%INCLUDE SYSLIB  (HMASMGTP)                                       */
*                                                                  0366
*       ;                                                          0366
@DATA    DS    0H
@CH00251 DC    H'0'
@CH00085 DC    H'1'
@CH00434 DC    H'9'
@CH00327 DC    H'10'
@CH00472 DC    H'30'
@CH01289 DC    H'120'
@CH00623 DC    H'255'
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00003 DS    15F
@SA00004 DS    15F
@SA00005 DS    0F
@SA00002 DS    0F
         DS    15F
@AL00001 DS    1A
         DS    0F
@CV01351 DC    V(HMASMIO)
@CV01352 DC    V(HMASMGTA)
         DS    0D
LASTTYPE DC    AL1(255)
@CC01410 DC    C'SYSMOD HISTORY '
@CC01431 DC    C'FUNCTION'
@CC01433 DC    C'PTF     '
@CC01435 DC    C'APAR    '
@CC01437 DC    C'USERMOD '
@CC01439 DC    C'SRC     '
@CC01441 DC    C'SRCUPD  '
@CC01443 DC    C'MOD     '
@CC01445 DC    C'SZAP    '
@CC01447 DC    C'XZAP    '
@CC01449 DC    C'MAC     '
@CC01451 DC    C'MACUPD  '
@CC01453 DC    C'ASSEM   '
@CC01455 DC    C'RSRC    '
@CC01457 DC    C'RSRCUPD '
@CC01459 DC    C'RMOD    '
@CC01461 DC    C'RSZAP   '
@CC01463 DC    C'RXZAP   '
@CC01465 DC    C'RMAC    '
@CC01467 DC    C'RMACUPD '
@CC01469 DC    C'APP'
@CC01471 DC    C'RES'
@CC01473 DC    C'ACC'
@CC01475 DC    C'ERR'
@CC01477 DC    C'BYP'
@CC01479 DC    C'RGN'
XRFRCD   DS    CL30
         ORG   XRFRCD
XRFKEY1  DS    CL29
         ORG   XRFKEY1
XRFETYPE DS    FL1
XRFENAME DS    CL8
XRFRTYPE DS    FL1
XRFUKEY1 DS    FL1
@NM00176 DS    CL18
         ORG   XRFRCD+29
XRFNKEY1 DS    CL1
         ORG   XRFNKEY1
XRFFLAG1 DS    BL1
         ORG   XRFFLAG1
XRFFLGA  DS    BL1
XRFFLGB  EQU   XRFFLAG1+0
XRFFLGC  EQU   XRFFLAG1+0
XRFFLGD  EQU   XRFFLAG1+0
XRFFLGE  EQU   XRFFLAG1+0
XRFFLGF  EQU   XRFFLAG1+0
XRFFLGG  EQU   XRFFLAG1+0
XRFFLGH  EQU   XRFFLAG1+0
         ORG   XRFRCD+30
SAVENAME DS    CL8
CNVDATE  DS    CL3
WORKAREA DS    CL5
         ORG   WORKAREA
YEAR     DS    CL2
DAY      DS    CL3
         ORG   WORKAREA+5
PATCHFXF DS    CL80
         ORG   PATCHFXF
@NM00197 DC    80X'FF'
         ORG   PATCHFXF+80
OUTAREA  DS    CL130
         ORG   OUTAREA
PRNTPRLG DS    CL10
PRNTBUF  DC    CL120' '
         ORG   OUTAREA+130
TXTSMDMP DS    CL65
         ORG   TXTSMDMP
@NM00210 DC    CL7'SYSMOD '
@NM00211 DC    CL2'  '
@NM00212 DC    CL8'TYPE    '
@NM00213 DC    CL2'  '
@NM00214 DC    CL6' DATE '
@NM00215 DC    CL2'  '
@NM00216 DC    CL8'MCS     '
@NM00217 DC    CL2'  '
@NM00218 DC    CL28'---------- STATUS ----------'
         ORG   TXTSMDMP+65
FXFTBL1  DS    CL176
         ORG   FXFTBL1
@NM00220 DS    CL16
         ORG   @NM00220
@NM00221 DC    AL1(10)
@NM00222 DC    CL15'MACROS USED    '
         ORG   FXFTBL1+16
@NM00223 DS    CL16
         ORG   @NM00223
@NM00224 DC    AL1(20)
@NM00225 DC    CL15'MODULES        '
         ORG   FXFTBL1+32
@NM00226 DS    CL16
         ORG   @NM00226
@NM00227 DC    AL1(53)
@NM00228 DC    CL15'MACROS USED    '
         ORG   FXFTBL1+48
@NM00229 DS    CL16
         ORG   @NM00229
@NM00230 DC    AL1(105)
@NM00231 DC    CL15'IFREQBY  (XREF)'
         ORG   FXFTBL1+64
@NM00232 DS    CL16
         ORG   @NM00232
@NM00233 DC    AL1(110)
@NM00234 DC    CL15'NPREBY   (XREF)'
         ORG   FXFTBL1+80
@NM00235 DS    CL16
         ORG   @NM00235
@NM00236 DC    AL1(115)
@NM00237 DC    CL15'PREBY    (XREF)'
         ORG   FXFTBL1+96
@NM00238 DS    CL16
         ORG   @NM00238
@NM00239 DC    AL1(120)
@NM00240 DC    CL15'REQBY    (XREF)'
         ORG   FXFTBL1+112
@NM00241 DS    CL16
         ORG   @NM00241
@NM00242 DC    AL1(125)
@NM00243 DC    CL15'SUPBY    (XREF)'
         ORG   FXFTBL1+128
@NM00244 DS    CL16
         ORG   @NM00244
@NM00245 DC    AL1(130)
@NM00246 DC    CL15'DELBY    (XREF)'
         ORG   FXFTBL1+144
@NM00247 DS    CL16
         ORG   @NM00247
@NM00248 DC    AL1(135)
@NM00249 DC    CL15'VERSIONBY(XREF)'
         ORG   FXFTBL1+160
@NM00250 DS    CL16
         ORG   @NM00250
@NM00251 DC    AL1(255)
@NM00252 DC    CL15'UNKNOWN        '
         ORG   FXFTBL1+176
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SAVFUNCT EQU   @06
SAVTYPE  EQU   @05
SAVDSID  EQU   @04
SAVBUFAD EQU   @03
XREFX    EQU   @03
XREFRC   EQU   @05
SMDBYRC  EQU   @03
SAVRTYPE EQU   @07
SAVETYPE EQU   @06
FXFRTNCD EQU   @03
GTPPTR   EQU   @04
IOPPTR   EQU   @02
CCAPTR   EQU   @11
RTNCODE  EQU   @15
RTNREG   EQU   @14
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
CCAGTP1  EQU   CCAFGTP+4
@NM00009 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAFLAG2 EQU   CCAFFUNC+11
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCALSTDS EQU   CCAFCTL+8
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCABLDLA EQU   0
@NM00025 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00027 EQU   CCABLDLL
CCALKDRC EQU   @NM00027+20
@NM00029 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00029+20
@NM00031 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00031+20
@NM00033 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00033+20
@NM00035 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00035+20
@NM00037 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00037+20
@NM00039 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00039+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
@NM00043 EQU   HMASMIOP+12
@NM00044 EQU   @NM00043
IOPDDNAM EQU   HMASMIOP+24
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00154 EQU   IOPQSMIF
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPBS02  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
HMASMPRL EQU   0
PRLRLEN  EQU   HMASMPRL
PRLSPAN  EQU   HMASMPRL+2
PRLFLGS  EQU   PRLSPAN
PRLDATE  EQU   HMASMPRL+4
PRLTIME  EQU   HMASMPRL+7
PRLEND   EQU   HMASMPRL+10
HMASMGTP EQU   0
GTPFUNCT EQU   HMASMGTP
GTPRETRN EQU   HMASMGTP+1
GTPRCDLN EQU   HMASMGTP+4
GTPKEYLN EQU   HMASMGTP+6
GTPBUFAD EQU   HMASMGTP+12
GTPRESTR EQU   HMASMGTP+16
GTPFLGS1 EQU   HMASMGTP+26
CCADSIDA EQU   0
CCATYPEA EQU   0
IOPBS01  EQU   0
IOPBS03  EQU   0
PASSIOP  EQU   0
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00050 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
@NM00061 EQU   IOPUDATA
@NM00062 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPABUNT EQU   IOPASMDR+1
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPLMDF2 EQU   IOPLMLEP+1
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPLMDFX EQU   IOPLMDNT+24
@NM00071 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMST  EQU   IOPRMIDE+7
IOPFMIDE EQU   IOPMACDR+9
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00082 EQU   IOPSRCDR+1
@NM00084 EQU   @NM00082+7
@NM00088 EQU   IOPSRCDR+9
IOPSRCFX EQU   IOPSRCNT+24
@NM00092 EQU   IOPSRCFX
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00098 EQU   IOPMODDR+1
@NM00100 EQU   @NM00098+7
@NM00104 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00108 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODST EQU   IOPLMODS+7
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00119 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPSYSFX EQU   IOPSYSNT+24
@NM00126 EQU   IOPSYSFX
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPAPP   EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
IOPREGEN EQU   IOPFLGS5
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPPTFFX EQU   IOPPTFNT+24
@NM00135 EQU   IOPPTFFX
@NM00136 EQU   @NM00135
IOPPDTES EQU   IOPPTFFX+41
@NM00139 EQU   IOPPDTES
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPPTFG1 EQU   IOPPTSFX+34
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00164 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00164
IOPPTREL EQU   IOPPTFMD
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBLEP2 EQU   IOPBPDS+9
@NM00168 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00168
IOPBFTB1 EQU   IOPBFTB0
XRFRCD1  EQU   XRFRCD
XRF1MAC  EQU   XRFRCD1+11
XRFRCD2  EQU   XRFRCD
XRF2MOD  EQU   XRFRCD2+11
XRFRCD3  EQU   XRFRCD
XRF3MAC  EQU   XRFRCD3+1
XRF3MOD  EQU   XRF3MAC
XRF3DAT  EQU   XRFRCD3+11
XRF3PTF  EQU   XRFRCD3+17
XRF3PF1  EQU   XRFRCD3+24
XRF3STAT EQU   XRF3PF1
XRF3PTYP EQU   XRFRCD3+25
XRF3PIND EQU   XRFRCD3+26
XRFRCD4  EQU   XRFRCD
XRFX4PTF EQU   XRFRCD4+11
FXOUTMAP EQU   PRNTBUF
HDSUBHD  EQU   FXOUTMAP+10
HDSEPCHR EQU   FXOUTMAP+26
HDDATA   EQU   FXOUTMAP+28
SMDHLINE EQU   HDDATA
HDSMDHMP EQU   SMDHLINE
HDSMDHNM EQU   HDSMDHMP
HDSMDHTP EQU   HDSMDHMP+9
HDSMDHDT EQU   HDSMDHMP+19
HDSMDHYY EQU   HDSMDHDT
HDSMDHPR EQU   HDSMDHDT+2
HDSMDHDD EQU   HDSMDHDT+3
HDSMDHMC EQU   HDSMDHMP+27
HDSMDHST EQU   HDSMDHMP+37
HDSMDAPP EQU   HDSMDHST
HDSMDRES EQU   HDSMDHST+5
HDSMDACC EQU   HDSMDHST+10
HDSMDERR EQU   HDSMDHST+15
HDSMDBYP EQU   HDSMDHST+20
HDSMDRGN EQU   HDSMDHST+25
XREFLINE EQU   HDDATA
HDVSLIST EQU   XREFLINE
HDVSDATA EQU   HDVSLIST
HDVSSMD  EQU   HDVSDATA
FXFARRY1 EQU   FXFTBL1
FXFRTYPE EQU   FXFARRY1
FXFHEAD  EQU   FXFARRY1+1
PRLDATA  EQU   PRLEND
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00219 EQU   HDVSLIST+8
@NM00209 EQU   HDSMDHST+23
@NM00208 EQU   HDSMDHST+18
@NM00207 EQU   HDSMDHST+13
@NM00206 EQU   HDSMDHST+8
@NM00205 EQU   HDSMDHST+3
@NM00204 EQU   HDSMDHMP+35
@NM00203 EQU   HDSMDHMP+25
@NM00202 EQU   HDSMDHMP+17
@NM00201 EQU   HDSMDHMP+7
@NM00200 EQU   FXOUTMAP+27
@NM00199 EQU   FXOUTMAP+25
@NM00198 EQU   FXOUTMAP+8
HDNAME   EQU   FXOUTMAP
@NM00196 EQU   XRFRCD4+28
@NM00195 EQU   XRFRCD4+18
@NM00194 EQU   XRFRCD4+10
@NM00193 EQU   XRFRCD4+9
XRF4PTF  EQU   XRFRCD4+1
@NM00192 EQU   XRFRCD4
@NM00191 EQU   XRFRCD3+29
@NM00190 EQU   XRFRCD3+28
XRF3PF3  EQU   XRFRCD3+27
XRF3TIM  EQU   XRFRCD3+14
@NM00189 EQU   XRFRCD3+10
@NM00188 EQU   XRFRCD3+9
XRF3SRC  EQU   XRF3MOD
@NM00187 EQU   XRFRCD3
@NM00186 EQU   XRFRCD2+29
@NM00185 EQU   XRFRCD2+19
@NM00184 EQU   XRFRCD2+10
@NM00183 EQU   XRFRCD2+9
XRF2LMD  EQU   XRFRCD2+1
@NM00182 EQU   XRFRCD2
@NM00181 EQU   XRFRCD1+29
@NM00180 EQU   XRFRCD1+19
@NM00179 EQU   XRFRCD1+10
@NM00178 EQU   XRFRCD1+9
XRF1ASM  EQU   XRFRCD1+1
@NM00177 EQU   XRFRCD1
IOPBCEND EQU   IOPBPDS+21
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00170 EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
@NM00169 EQU   IOPBFTB1
IOPBAOSL EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBREFR EQU   IOPBLEP2
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
@NM00167 EQU   IOPBLEP2
IOPBDC   EQU   IOPBLEP2
@NM00166 EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00165 EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBRENT EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
IOPPTIND EQU   IOPPTNTR+8
IOPPTSND EQU   IOPPTREL
@NM00163 EQU   IOPPTSFX+872
IOPSYZPP EQU   IOPPTSFX+772
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZAP EQU   IOPPTSFX+755
IOPSYUPP EQU   IOPPTSFX+655
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPD EQU   IOPPTSFX+638
IOPSYSPP EQU   IOPPTSFX+538
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSUP EQU   IOPPTSFX+521
IOPSYLKP EQU   IOPPTSFX+421
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKD EQU   IOPPTSFX+404
IOPSYCPP EQU   IOPPTSFX+304
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOM EQU   IOPPTSFX+170
IOPSYASP EQU   IOPPTSFX+70
IOPSYASR EQU   IOPPTSFX+69
IOPSYASS EQU   IOPPTSFX+61
IOPSYASM EQU   IOPPTSFX+53
@NM00162 EQU   IOPPTSFX+35
@NM00161 EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPPTSNP EQU   IOPPTFG1
IOPSYPLN EQU   IOPPTSFX+32
IOPDSPFX EQU   IOPPTSFX+6
IOPDSDIR EQU   IOPDSSPC+4
IOPDSSEC EQU   IOPDSSPC+2
IOPDSPRM EQU   IOPDSSPC
@NM00160 EQU   IOPPTSDR+4
IOPPTPEM EQU   IOPPTSDR+2
IOPPCNVL EQU   IOPPTSDR+1
@NM00159 EQU   IOPPTSDR
IOPQFMTP EQU   IOPQFMLS+8
@NM00158 EQU   IOPQFMLS+7
IOPQFMND EQU   IOPQFMNM
@NM00157 EQU   IOPQFMDR
@NM00153 EQU   IOPQSMDR
@NM00152 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
IOPSBYNM EQU   IOPSBYNT
@NM00151 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00150 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00149 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00148 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00147 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00146 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00145 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00144 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00143 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00142 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00141 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
IOPPIND  EQU   IOPPNTRY+8
IOPPTFND EQU   IOPPMODS
IOPPFMID EQU   IOPPTFFX+73
@NM00140 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
IOPACCT  EQU   IOPDATES+15
IOPACCD  EQU   IOPDATES+12
IOPRSTT  EQU   IOPDATES+9
IOPRSTD  EQU   IOPDATES+6
IOPAPPT  EQU   IOPDATES+3
IOPAPPD  EQU   IOPDATES
IOPRECT  EQU   @NM00139+3
IOPRECD  EQU   @NM00139
@NM00138 EQU   IOPPTFFX+8
@NM00137 EQU   @NM00135+7
IOPPRELN EQU   @NM00136
@NM00134 EQU   IOPPTFDR+20
IOPSBYNO EQU   IOPPTFDR+13
IOPDBYNO EQU   IOPPTFDR+6
@NM00133 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPSBYP  EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00132 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPDUMMP EQU   IOPFLGS5
@NM00131 EQU   IOPFLGS5
IOPPTYPE EQU   IOPPTFDR+1
@NM00130 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
IOPSYSND EQU   IOPSYNTR
@NM00129 EQU   IOPSYSFX+21
IOPSYSID EQU   IOPSYSFX+13
IOPNUCID EQU   IOPSYSFX+12
IOPSREL  EQU   IOPSYSFX+8
@NM00128 EQU   @NM00126+7
@NM00127 EQU   @NM00126
@NM00125 EQU   IOPSYSDR+5
@NM00124 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPMTSNP EQU   IOPFLGS7
IOPPEMAX EQU   IOPSYSDR+2
IOPSCNVL EQU   IOPSYSDR+1
@NM00123 EQU   IOPSYSDR
IOPDLIND EQU   IOPDNTRY+8
IOPDLBND EQU   IOPDSYS
@NM00122 EQU   IOPDLBFX+8
@NM00121 EQU   @NM00119+7
@NM00120 EQU   @NM00119
@NM00118 EQU   IOPDLBDR+1
@NM00117 EQU   IOPDLBDR
IOPMDIND EQU   IOPMNTRY+8
@NM00116 EQU   IOPMODST
IOPMODND EQU   IOPMODID
IOPDLIB  EQU   IOPMODFX+72
@NM00115 EQU   IOPMODFX+12
@NM00114 EQU   IOPMODF4
@NM00113 EQU   IOPMODF3
@NM00112 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00111 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00110 EQU   @NM00108+7
@NM00109 EQU   @NM00108
@NM00107 EQU   IOPMODDR+17
@NM00106 EQU   @NM00104+7
@NM00105 EQU   @NM00104
@NM00103 EQU   @NM00100
@NM00102 EQU   @NM00100
@NM00101 EQU   @NM00100
@NM00099 EQU   @NM00098
@NM00097 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00096 EQU   IOPSRCST
IOPSRCND EQU   IOPSRCID
IOPSRDLB EQU   IOPSRCFX+72
IOPSRSYS EQU   IOPSRCFX+64
@NM00095 EQU   IOPSRCFX+8
@NM00094 EQU   @NM00092+7
@NM00093 EQU   @NM00092
@NM00091 EQU   IOPSRCDR+18
IOPSRLNG EQU   IOPSRCDR+17
@NM00090 EQU   @NM00088+7
@NM00089 EQU   @NM00088
@NM00087 EQU   @NM00084
@NM00086 EQU   @NM00084
@NM00085 EQU   @NM00084
@NM00083 EQU   @NM00082
@NM00081 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
IOPMCTYP EQU   IOPMCIND
@NM00080 EQU   IOPMACST
IOPMACND EQU   IOPMACID
IOPMCDLB EQU   IOPMACFX+72
IOPMCSYS EQU   IOPMACFX+64
@NM00079 EQU   IOPMACFX+8
IOPBUTYP EQU   IOPBUNT+7
IOPBUSMD EQU   IOPBUNT
@NM00078 EQU   IOPMACDR+18
IOPMCLNG EQU   IOPMACDR+17
IOPFMST  EQU   IOPFMIDE+7
IOPFMID  EQU   IOPFMIDE
@NM00077 EQU   IOPRMST
IOPRMASM EQU   IOPRMST
@NM00076 EQU   IOPRMST
IOPRMID  EQU   IOPRMIDE
@NM00075 EQU   IOPMACDR
IOPLMIND EQU   IOPLNTRY+8
IOPLMDND EQU   IOPSYSLB
@NM00073 EQU   @NM00071+7
@NM00072 EQU   @NM00071
@NM00070 EQU   IOPLMDDR+6
@NM00069 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPCOPY  EQU   IOPFLGS3
@NM00068 EQU   IOPLMDF4
@NM00067 EQU   IOPLMDF3
@NM00066 EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPNE    EQU   IOPLMDF2
@NM00065 EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPAPF   EQU   IOPFLGS2
@NM00064 EQU   IOPLMDDR
@NM00063 EQU   IOPASMDR+9
IOPABUTP EQU   IOPABUNT+7
IOPABUPT EQU   IOPABUNT
IOPNTLVL EQU   IOPASMDR
IOPALLOC EQU   @NM00062+4
IOPUSED  EQU   @NM00062
IOPTPSEQ EQU   @NM00061+8
IOPVLSER EQU   @NM00061+2
IOPBLKSI EQU   @NM00061
IOPCQMAX EQU   IOPCQMAP+12
@NM00060 EQU   IOPCQMAP+11
@NM00059 EQU   IOPCQMAP+8
@NM00058 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00057 EQU   IOPSCMAP+11
@NM00056 EQU   IOPSCMAP+8
@NM00055 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00054 EQU   IOPNTMAX+11
@NM00053 EQU   IOPNTMAX+8
@NM00052 EQU   IOPNTMAX
@NM00051 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00050+5
IOPIPTF3 EQU   @NM00050
@NM00175 EQU   HMASMGTP+27
GTPPSIZE EQU   GTPFLGS1
@NM00174 EQU   GTPFLGS1
GTPRCDNF EQU   GTPFLGS1
GTPNOSPM EQU   GTPFLGS1
GTPPOS   EQU   GTPRESTR+8
GTPRCD   EQU   GTPRESTR+4
GTPPAG   EQU   GTPRESTR
GTPWKAD  EQU   HMASMGTP+8
@NM00173 EQU   HMASMGTP+2
PRLCONC  EQU   PRLTIME+2
@NM00172 EQU   PRLTIME
PRLHDADR EQU   PRLDATE
@NM00171 EQU   PRLFLGS
PRLBLANK EQU   PRLFLGS
PRLHEADO EQU   PRLFLGS
PRLHEAD  EQU   PRLFLGS
IOPBS04E EQU   IOPBS04+2
IOPBAPFC EQU   IOPBAPF+1
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
IOPQSMTP EQU   IOPQSMLS+8
@NM00156 EQU   IOPQSMLS+7
IOPQSMND EQU   IOPQSMNM
@NM00155 EQU   @NM00154+7
IOPQSMFM EQU   @NM00154
@NM00074 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00049 EQU   IOPUSERL
@NM00048 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00047 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00046 EQU   @NM00043+10
IOPSEQNO EQU   @NM00043+8
@NM00045 EQU   @NM00044+7
IOPPTFNM EQU   @NM00044
IOPNAM17 EQU   IOPNAME
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00042 EQU   CCABLDLM+2
@NM00041 EQU   CCABLDLM
CCAUPDPM EQU   @NM00039+24
@NM00040 EQU   @NM00039+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00039+12
CCAUPDTE EQU   @NM00039+8
CCAUPDNM EQU   @NM00039
CCASUPPM EQU   @NM00037+24
@NM00038 EQU   @NM00037+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00037+12
CCAIOSUP EQU   @NM00037+8
CCASUPNM EQU   @NM00037
CCAZAPPM EQU   @NM00035+24
@NM00036 EQU   @NM00035+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00035+12
CCASPZAP EQU   @NM00035+8
CCAZAPNM EQU   @NM00035
CCACOMPM EQU   @NM00033+24
@NM00034 EQU   @NM00033+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00033+12
CCACOMRS EQU   @NM00033+8
CCACOMNM EQU   @NM00033
CCACPYPM EQU   @NM00031+24
@NM00032 EQU   @NM00031+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00031+12
CCACOPY  EQU   @NM00031+8
CCACPYNM EQU   @NM00031
CCAASMPM EQU   @NM00029+24
@NM00030 EQU   @NM00029+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00029+12
CCAASM   EQU   @NM00029+8
CCAASMNM EQU   @NM00029
CCALKDPM EQU   @NM00027+24
@NM00028 EQU   @NM00027+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00027+12
CCALKED  EQU   @NM00027+8
CCALKDNM EQU   @NM00027
CCAPGMPM EQU   @NM00025+24
@NM00026 EQU   @NM00025+21
CCABPGRC EQU   @NM00025+20
CCABPGSP EQU   @NM00025+12
CCABPGAD EQU   @NM00025+8
CCABPGNM EQU   @NM00025
CCAEND   EQU   HMASMCCA+371
@NM00024 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00023 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00022 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00021 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00020 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00019 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00018 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00017 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00016 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00015 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCAAPPLY EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00014 EQU   @NM00009+18
@NM00013 EQU   @NM00009+16
CCATBLPA EQU   @NM00009+12
@NM00012 EQU   @NM00009+8
@NM00011 EQU   @NM00009+4
@NM00010 EQU   @NM00009
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCAICLMD EQU   CCAFICT+12
CCAICMOD EQU   CCAFICT+8
CCAICPTF EQU   CCAFICT+4
CCAICT   EQU   CCAFICT
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00008 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
CCAIOPTR EQU   CCAFIOP
@NM00007 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00006 EQU   CCAFBUFR+122
@NM00005 EQU   CCAFBUFR+120
@NM00004 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00003 EQU   CCAFBUFR+88
@NM00002 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00001 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   HMASMFXF,(C'PLS2023',0802,78334)
