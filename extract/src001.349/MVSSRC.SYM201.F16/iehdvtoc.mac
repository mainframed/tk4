         TITLE  'IEHDVTOC  VTOC CONSTRUCTION MODULE'
         COPY  LCGASMSW                                          SM4351
IEHDVTOC CSECT
*A 039182,208,478040                                           @VS40037
* SCAN ALTERN. TRKS WHEN BUILDING ONLINE VTOC.                 @VS40452
* FIX @VS40452 PROBLEM.                                        @ZA06534
*D 418000,419000                     NOT OS  @YA04836=@XA05835=@ZA01205
*A 417400,417500                     NOT OS  @YA04836=@XA05835=@ZA01205
***************************************************************@ZA01205
*3506487000,488000,498400,600700                                 M2888
* 040004-040005                                                  YM0911
*        RELEASE 23 DELETIONS                                         *
*                                                               XM4389
*        RELEASE 22 DELETIONS                                         *
*        RELEASE 21 DELETIONS                                         *
*                                                                Y21107
*        RELEASE 20 DELETIONS                                         *
*3506055000-056000,065100-066100,482000,487000,498100-498700,    S20201
*3506577500,579500,582500-583500,600700,604000,613500            S20201
*3506479500                                                      M5900
*3506064300-069000,479000,583000,601000,605000                   JUDITH
*3506240880                                                      A32162
*3506039009                                                      A35837
*3506063000-064000,482000,487000,494000                          A34946
*3506039009,039252,039255,039258,039261,039360,039432,039435,    S20201
*3506039477                                                      S20201
*3506479460-479520                                               M6129
*        RELEASE 19 DELETIONS
*037000,448000-449900                                            O122
*        RELEASE 18 DELETIONS
*3109417600                                                      3649
*
*STATUS CHANGE LEVEL 004
*                                                                     *
*FUNCTION/OPERATION- THIS ROUTINE FORMATS THE VTOC,WRITES VOLUME      *
*   LABEL,IPL TEXT AND IPL BOOTSTRAP RECORDS. IT ALSO READS IPL TEXT  *
*   FROM EXTERNAL STORAGE WHEN SO REQUESTED.                          *
*   THIS ROUTINE FORMATS THE VTOC BY WRITING A FORMAT 4 DSCB THAT     *
*   DESCRIBES THE DEVICE CHARACTERISTICS OF THIS VOLUME. IT ALSO      *
*   CALCULATE THE TRACKS AVAILABLE FOR ALLOCATION AND CONSTRUCTS      *
*   A FORMAT 5 DSCB FROM THIS CALCULATION. THESE TWO DSCB ARE WRITTEN *
*   AND THE REMAINDER OF THE VTOC WITH FORMAT 0 DSCBS.                *
*                                                                     *
*ENTRY POINT- THE ONLY ENTRY POINT IS -IEHDVTOC- AND THIS MODULE IS   *
*   INVOKED ONLY BY IEHDANAL.                                         *
*                                                                     *
*INPUT- UPON ENTRY REGISTER 1 POINTS TO IEHDANAL WORKAREA,REGISTER 10 *
*   POINTS TO A FUNCTION BLOCK, REGISTER 12 POINTS TO A COMMUNCIATION *
*   WORKAREA,REGISTER 13 HAS A POINTER TO A REGISTER SAVE AREA,AND    *
*   REGISTER 14 CONTAIN A RETURN ADDRESS.                             *
*                                                                     *
*EXITS-NORMAL- ON  SUCCESSFUL COMPLETION -IEHDVTOC- RETURNS TO        *
*   -IEHDANAL- WITH A RETURN CODE OF 0 IN REGISTER 15.                *
*                                                                     *
*EXITS-ERROR- ON UNSUCCESSFUL COMPLETION -IEHDVTOC- RETURNS TO        *
*    -IEHDANAL- WITH A RETURN CODE OF 8 IN REGISTER 15 AND A MESSAGE  *
*    DESCRIBING THE ERROR IN THE MESSAGE DATA SET.                    *
*                                                                     *
*EXTERNAL ROUTINES- THIS ROUTINE IS ALWAYS INVOKED BY -IEHDANAL-.     *
*    IT IN TURNS INVOKES IEHDMSGB AND IEHDPRNT TO CONSTRUCT AND WRITE *
*    MESSAGES INTO THE MESSAGE DATA SET.                              *
*                                                                     *
*TABLES/WORKAREA- UPON ENTRY REGISTERS 1,10 AND 12 POINT TO  IEHDANAL *
*    WORKAREA,FUNCTION BLOCK AND A COMMUNICATION WORKAREA RESPECT-    *
*    IVELY. THEY ARE DESCRIBED BY DSECTS CALLED WORKAREA,FUNCBLK AND  *
*    WORK.                                                            *
         SPACE 3
REG0     EQU   0                  PARAMETER REG.
REG1     EQU   1                  PARAMETER LIST POINTER REG.
REG2     EQU   2                  REGS
REG3     EQU   3                       TWO
REG4     EQU   4                           THRU
REG5     EQU   5                                SEVEN
REG6     EQU   6                                      WORK
REG7     EQU   7                                           REGS.
REG8     EQU   8                  PROGRAM BASE REG.
REG9     EQU   9                  COPY BLOCK BASE REG.
REGA     EQU   10                 FUNCTION BLOCK BASE REG.
REGB     EQU   11                 WORK AREA BASE REG.
REGC     EQU   12                 COMMON WORK AREA REG.
REGD     EQU   13                 SAVE AREA POINTER REG.
REGE     EQU   14                 RETURN ADDRESS REG/UCB BASE REG.
REGF     EQU   15                 ENTRY POINT REG.
         USING IHADCB,REG7
         USING *,REG8
         USING WORKAREA,REG5                                   @Y30LSFY
         USING FUNCBLK,REGA
         USING COPYBLK,REG9
         USING WORK,REGC
         USING UCBOB,REG6
         USING CONSTANT,REGE
         SAVE  (14,12),T,*        SAVE REGISTERS IN CALLER'S AREA
         LR    REG8,REGF          ESTABLISH PROGRAM BASE REGISTER.
         LR    REG5,REG1          ESTABLISH BASE FOR WORKAREA. @Y30LSFY
         LA    REGF,SAVEVTOC
         ST    REGF,8(REGD)       SAVE POINTER TO IEHDVTOC SAVE AREA.
         LA    REG7,FBLOCKS
         ST    REGD,SAVEVTOC+4     STORE PTR TO YOUR SAVEAREA IN MINE.
         LR    REGD,REGF               POINT TO MY SAVEAREA.   @Y30LSFY
         XC    DEXTNTS-D2(L6),DEXTNTS-D2  CLEAR BB OF BBCCHH.  @Y30LSFY
         L     REGE,IODEVCON           RESTORE DEV CONSTANT PTR@Y30LSFY
         STM   REG9,REG2,PRGSAVE       SAVE VOLATILE REGISTERS.@Y30LSFY
         LA    REG1,DDEB               POINT TO DUMMY DEB.     @Y30LSFY
         LA    REG2,RCD1CNT            POINT TO CCHH.          @Y30LSFY
         USING CVT,REGF                                        @Y30LSFY
         L     REGF,CVTPTR             GET CVT BASE.           @Y30LSFY
         XC    RCD1CNT(L8),RCD1CNT                             @Y30LSFY
         MVC   RCD1CNT+D3(L4),LASTORIG SET UP MBBCCHHR.        @Y30LSFY
         L     REGF,CVTPRLTV           GET ENTRY TO CNVRT RTNE.@Y30LSFY
         BALR  REGE,REGF          LINK TO CONVERT ROUTINE.     @Y30LSFY
         SRL   REG0,16                                         @Y30LSFY
         STH   REG0,RTAVTOCS      SAVE RTA FOR IEHDVTOC.       @Y30LSFY
         LM    REG9,REG2,PRGSAVE  RESTORE VOLATILE REGISTERS.  @Y30LSFY
         DROP  REG5                                            @Y30LSFY
         USING WORKAREA,REGB                                   @Y30LSFY
         LR    REGB,REG5          REESTABLISH WORKAREA BASE    @Y30LSFY
         XC    ZEROS(5),ZEROS       INITIALIZE ZEROS.
         NI    IPLTRK1,X'00'      TURN IPL TEXT ON TRACK 1 BIT OFF.
         L     REG6,TUCBPTR       GET POINTER TO PRIMARY UCB.
         CLI   UCBTBYT4,WIN            IS THIS A 3340?           XM5465
         BNE   NO3340                  NO, CHECK OTHER DEVICES.  XM5465
         MVI   PASSCNT+D1,ONE          FORCE ONE PASS ON 3340.   XM5465
         TM    SEQSW,FLAGTEST          IS FLAGTEST = NO?         XM5465
         BO    RDALTS                  YES, TEST FOR PASSES.   @ZA06534
NO3340   EQU   *                                                 XM5465
         TM    SEQSW+D1,SS1VAL         SS/1 CONVERSION?        @Y30LSFY
         BO    TEXTCHK                 YES - PASSES=1          @ZA06534
         CLI   UCBTBYT4,FACTPACK        IS THIS 3330 DEV TYPE?  XL03145
         BL    RDALTS                   NO, PASS COUNT IS OK.  @ZA06534
         CLI   FUNCSW,ANALYSIS         IS THIS AN ALNALYZE       A51175
         BNE   RDALTS                  NO                      @ZA06534
         CLI   UCBTBYT4,D3350          3350 DEVICE ?           @VS40037
         BE    RDALTS                  YES, BRCH               @ZA06534
         OI    SEQSW,PASSES            FORCE PASSES              A51175
         TM    FLGBYT1,EMU             EMULATION ACTIVE ?      @VS40037
         BO    RDALTS                  ALLOW PASSES            @ZA06534
         XC    PASSCNT(2),PASSCNT      ZERO PASSCNT AND COUNT    A51175
* SET UP CHANNEL PROGRAM TO READ HOME ADDRESS AND R0 OF            O122
*ALTERNATE TRACKS                                                  O122
RDALTS   EQU  *                                                @ZM43013
         LA    REG7,FBLOCKS             GET POINTER TO PRIMARY     O122
         DROP  REG6                                              S20201
         USING BUFFREAD,REG6                                     S20201
         L     REG6,FBUFFPTR                                     S20201
         L     REGE,IODEVCON            GET ADDRESS OF DEVICE      O122
         LA    REG4,COMND1              GET CCW AREA ADDR      @ZM43013
         ST    REG4,CCWPTR              UPDATE IOBCCW PTR      @ZM43013
*                                          CONSTANTS TABLE         O122
         L     REG3,LASTORIG            GET LAST PRIMARY TRACK ADDRO122
         A     REG3,CONVCYL             UPDATE TO FIRST ALTERNATE  O122
         ST    REG3,SKADDR              SAVE ADDRESS               O122
         MVC   SEEKADDR+3(4),SKADDR     STORE IT IN SEEK ADDRESS   O122
         XC    SEEKADDR+7(1),SEEKADDR+7 CLEAR R OF SEEK ADDRESS    O122
         MVC   NOALT(2),TOTALALT        SAVE MAXIMUM NUMBER ALTS   O122
         XC    TRKSW(1),TRKSW           SET SWITCH TO ZERO         O122
         LM    REG0,REG3,CCW01          LOAD READ CCW'S            O122
         ALR   REG0,REG6                ADJUST DISPLACEMENT        O122
         ALR   REG2,REG6                *                          O122
         STM   REG0,REG3,COMND1         STORE CCW'S                O122
         BAL   REG5,FACTCHK             READ FROM ALTERNATE TRACK  O122
         B     CHKALT                   CHECK ALTERNATE TRACK      O122
*                                                                  O122
FACTCHK  EQU   *                                                   O122
         EXCP  WKAIOB                   EXECUTE CHANNEL PROGRAM    O122
         WAIT  1,ECB=WKAECB             WAIT FOR I/O TO COMPLETE   O122
         CLI   WKAECB,X'7F'             I/O SUCCESSFUL             O122
         BE    GOOK                     YES, OK                    O122
         CLI   WKAECB,X'41'             CSW CONTENTS USEFUL IN IOB O122
         BNE   IOERROR2                 NO, PUT OUT MESSAGE        O122
         CLI   IOBCSWST,UE              UNIT EXCEPTION             O122
         BNE   IOERROR2                 NO, PUT OUT MESSAGE        O122
GOOK     BR    REG5                     RETURN                     O122
CHKALT   EQU   *                                                   O122
         TM    ALTHA,X'02'              IS TRACK DEFECTIVE         O122
         BO    UPDATE                   YES, UPDATE ALT TRACK      O122
*                                          INFORMATION             O122
         CLC   ALTHA+1(4),ALTR0         IS TRACK ASSIGNED          O122
         BNE   UPDATE                   YES, UPDATE ALT TRK INFO   O122
         TM    TRKSW,TRKFND             HAS FIRST AVAILABLE ALTER- O122
*                                          NATE BEEN FOUND         O122
         BO    UPCCHH                   YES, CHECK FOR LAST        O122
*                                          ALTERNATE TRACK         O122
         OI    TRKSW,TRKFND             SET SWITCH FOR FIRST AVAIL-O122
*                                          ABLE ALTERNATE FOUND    O122
         MVC   ALTINFO(4),ALTHA+1       SET ADDR OF FIRST          O122
*                                          AVAILABLE ALTERNATE     O122
UPCCHH   EQU   *                                                   O122
         CLC   ALTHA+1(4),LASTALT       WAS LAST ALTERNATE CHECKED O122
         BNL   CHKCOPY                  YES, CHECK FOR MORE COPIES O122
         MVC   SAVECCHH(4),ALTHA+1      GET CURRENT CCHH           O122
         L     REG3,SAVECCHH            *                          O122
         CLC   SEEKADDR+6(1),LASTORIG+3 LAST TRACK OF CYLINDER     O122
         BC    4,UPCCHH1                NO --                      O122
         A     REG3,CONVCYL             INCREMENT CYLINDER         O122
         AIF   ('&LIB' EQ 'LIB2').X227320                       XL03912
CK2321   EQU   *                                                   O122
         CLI   SEEKADDR+5,X'04'         IS THIS A 2321 AND LAST CYLO122
         BC    7,UPCCHH2                NO --                      O122
         AL    REG3,STC2321             INCREMENT STRIP            O122
         CLI   SEEKADDR+4,X'09'         THIS LAST STRIP            O122
         BC    7,UPCCHH2                NO --                      O122
         AL    REG3,SCC2321             INCREMENT SUBCELL          O122
.X227320 ANOP                                                   XL03912
         B     UPCCHH2                  STORE VALUE                O122
UPCCHH1  AH    REG3,HA1                 INCREMENT TO NEXT TRACK    O122
UPCCHH2  ST    REG3,SAVECCHH            STORE UPDATED CCHH         O122
         MVC   SEEKADDR+3(4),SAVECCHH   UPDATE SEEK ADDRESS        O122
         BAL   REG5,FACTCHK             READ HA AND R0 OF NEXT     O122
*                                          TRACK                   O122
         B     CHKALT                   CHECK ALTERNATE TRACK      O122
UPDATE   EQU   *                        UPDATE NUMBER ALTS AVAIL-  O122
*                                          ABLE                    O122
         LH    REG3,NOALT               PICK UP CURRENT NUMBER     O122
         SH    REG3,HA1                 DECREMENT BY 1             O122
         STH   REG3,NOALT               SAVE CURRENT NUMBER        O122
         B     UPCCHH                   CHECK FOR LAST ALT         O122
*                                                                  O122
*                                                                  O122
CHKCOPY  EQU   *                                                   O122
         TM    TRKSW,TRYCOPY            GET ADDRESS OF COPY BLOCK  O122
*                                          FROM FUNCTION BLOCK     O122
         BO    GETCOPY                  NO, GET FROM COPY BLOCK    O122
         OI    TRKSW,TRYCOPY            SET FOR PRIMARY COPY DONE  O122
         MVC   FALTDATA(6),ALTINFO      SAVE ALTERNATE TRACK       O122
*                                          INFORMATION             O122
         L     REG9,COPYPTR             PICK UP POINTER FOR COPY   O122
         B     CHKIT                    CHECK FOR POINTER          O122
GETCOPY  EQU   *                                                   O122
         MVC   CALTDATA(6),ALTINFO      SAVE ALTERNATE TRACK       O122
*                                          INFORMATION             O122
         L     REG9,CCOPYPTR            PICK UP POINTER FOR COPY   O122
*                                          ALTERNATES AVAILABLE    O122
CHKIT    EQU   *                                                   O122
         LTR   REG9,REG9                WAS THIS LAST COPY         O122
         BZ    GETREADY                 YES, RESET REGISTERS       O122
         LA    REG7,CIOBLOCK            GET POINTER TO I/O BLOCKS  O122
         MVC   SEEKADDR+3(4),SKADDR     UPDATE SEEK ADDR FOR COPY  O122
         XC    SEEKADDR+7(1),SEEKADDR+7    VOLUME                  O122
         MVC   NOALT(2),TOTALALT        REINITIALIZE NUMBER OF     O122
*                                          ALTERNATES              O122
         NI    TRKSW,X'FE'              TURN OFF BIT FOR FIRST     O122
*                                          AVAILABLE ALTERNATE     O122
         BAL   REG5,FACTCHK             START READING HOME ADDRESS O122
*                                          AND R0 FROM ALTERNATES  O122
         B     CHKALT                   GO CHECK ALTERNATE         O122
GETREADY EQU   *                                                   O122
         DROP REG6                                                 O122
         USING UCBOB,REG6                                          O122
TEXTCHK  EQU   *                                                   O122
         LA    REG7,FBLOCKS             RESTORE DCB ADDRESS        O122
         L     REG6,TUCBPTR             RESTORE UCB POINTER        O122
         LA    REG1,RCOUNT1N   PT. TO WAIT STATE RCD FOR NON-IPL   O122
         TM    SEQSW,IPLDD        IPL TEXT REQUESTED.
         BZ    NONIPL             NO-BUILD NON-IPL RECORD.
         L     REGF,FIPLPTR       GET POINTER TO IPL TEXT FROM FUNCBLK.
         LTR   REGF,REGF          WAS IPL TEST POINTER SUPPLIED.
         BNZ   TESTDEV            YES-BUILD IPL RECORD.
         MVI   FIPLPTR,X'80'      SET UP MY IPL POINTER INDICATOR.
         CLC   DDNAME1(8),SYSINDD IS IPL TEXT ENTERED THRU SYSIN.
         BNE   OPENIPL            NO-MUST READ IPL.
         MVC   FIPLPTR+1(3),WIPLPTR+1  YES-MOVE PTR TO FUNCBLK.
TESTDEV  EQU   *
         L     REG6,TUCBPTR       RESTORE UCB POINTER.
         AIF   ('&LIB' EQ 'LIB2').X227321                       XL03912
         CLI   UCBID,X'FF'        IS THIS A 2321.
         BNE   IPLWARN            YES- WARN USER IPL TEXT NOT ALLOWED.
.X227321 ANOP                                                   XL03912
         TM    UCBTBYT2,UCB2OPT3   DO WE HAVE CARNY              S20201
         BZ    NOCARN              NO                            S20201
         OI    SEQSW+D1,RPSS       YES                          XM4389
NOCARN   EQU   *                                                 S20201
         AIF   ('&LIB' EQ 'LIB2').X227322                       XL03912
         CLI   UCBTBYT4,X'04'         IS THIS A 2302.
         BE    IPLWARN            YES- WARN USER IPL TEXT NOT ALLOWED.
         CLI   UCBTBYT4,X'02'         IS THIS A 2301.
         BE    BLIPLRCD           YES-BUILD CCW FOR IPL ON TRACK 0.
         CLI   UCBTBYT4,X'06'           DEVICE CODE LESS THAN    S20201
*                                       2305                     S20201
         BL    IPLON1                   YES - IPLTEXT ON TRACK   S20201
*                                       ONE                      S20201
.X227322 ANOP                                                   XL03912
BLIPLRCD EQU   *
         LA    REG1,RCOUNT1I      POINT TO IPLABLE RECORD 1.
         LA    REG7,FBLOCKS             GET ADDR OF I/O BLOCKS     O122
* RECORDS ONE THRU THREE ARE CONSTRUCTED HERE.
NONIPL   EQU   *
         MVI   VVTOCPTR,X'40'
         MVC   VVTOCPTR+1(69),VVTOCPTR BLANK VOL LABEL RESERVED FIELDS.
         MVC   RCD1CNT(36),0(REG1) MOVE RECORD1 TO OUTPUT AREA.  A34946
         MVC   RCD2CNT(44),RCOUNT2N MOVE RECORD2 TO OUTPUT AREA  A34946
         XC    IPLSEEK(16),IPLSEEK     CLEAR SEEK AND SEARCH ADDRS.9581
         MVC   RCD3CNT(16),RCOUNT3N COUNT KEY AND PART OF DATA   S20201
         MVC   VVTOCPTR(4),MBBCCHH1
         MVI   VVTOCPTR+4,1       INSERT POINTER TO VTOC INTO LABEL.
         MVC   VOLSERNO(6),FSERNO    ASSUME SAME VOLID-
         MVI   VOLSECTY,X'F0'           SET SECURITY BYTE        S20201
         TM    SEQSW,NEWVOLID     TEST FOR NEW VOLID ID
         BO    NUSERIAL           BRANCH IF NEW VOLID REQUESTED.
         L     REG6,TUCBPTR       PICK UP POINTER TO UCB.
         AIF   ('&LIB' EQ 'LIB2').X227323                       XL03912
         CLI   UCBID,X'FF'        IS THIS A 2321 DATA CELL.
         BNZ   DA2321             YES-GET VOLID FROM SUBUCB.
.X227323 ANOP                                                   XL03912
         MVC   VOLSERNO(6),SRTEVOLI    INSERT OLD VOLID INTO LABEL.
NUSERIAL EQU   *
         TM    SEQSW,OWNERID      OWNER IDENTIFICATION REQUESTED.
         BZ    BLDCCWS            NO-BRANCH AND BUILD CHANNEL PROGRAM.
         MVC   VOLOWNER(10),FOWNID PLACE OWNER ID INTO VOLUME LABEL.
BLDCCWS  EQU   *   HERE WE CONSTRUCT THE CHANNEL PROGRAM TO WRITE
*                  TRACK ZERO RECORDS 1 THRU 3. WE ASSUME NO-IPL TEXT
*                  WAS REQUESTED
         LM    REG0,REG5,CCW1     GET THE FIRST THREE CCWS.
         ALR   REG0,REGB          SEARCH ID EQ TO (CCHHR=00000).
         ALR   REG2,REG7               TIC TO CCW1.
         LA    REG6,RCD1CNT
         ALR   REG4,REG6          WRITE COUNT KEY DATA RECORD 1.
         LA    REG9,CC1COUNT       GET LENGTH OF RECORD 1.
         ALR   REG5,REG9           PLACE COUNT INTO CCW.
         STM   REG0,REG5,CCMND1   STORE SID EQ-IIC-WRITE CKD CCWS.
         LA    REG6,CCMND6-CCMND1 GET DISPLACEMENT OF CCWT=CCW1
         SR    REGF,REGF          CLEAR REGF.
         LA    REGE,X'01'
         SRDL  REGE,8
         ALR   REG4,REGF          SET READ COMMAND FOR WRITE CHECK.
         ALR   REG2,REG6          SET UP PROPER TIC ADDRESS.
         STM   REG0,REG5,CCMND6   STORE SID EQ-TIC-READ CKD CCWS.
         LA    REG6,RCD2CNT-RCD1CNT   GET DISPLACEMENT RECORD 2 COUNT.
         ALR   REG4,REG6          SET READ CMND FOR RCD2 WRITE CHECK.
         LA    REG9,CC2COUNT-CC1COUNT
         ALR   REG5,REG9           COMPUTE LENGTH OF RECORD 2.
         STM   REG4,REG5,CCMND9   STORE READ CCW.
         SR    REG4,REGF          CHANGE READ TO WRITE.
         STM   REG4,REG5,CCMND4   STORE WRITE CCW.
         LA    REG6,RCD3CNT-RCD2CNT   GET DISPLACEMENT OF RCD3-RCD2
         ALR   REG4,REG6          SET WRITE CMND FOR RCD3.
         LA    REG9,CC3COUNT-CC2COUNT
         ALR   REG5,REG9           COMPUTE LENGTH OF RECORD 3.
         STM   REG4,REG5,CCMND5   STORE RECORD3 WRITE CCW
         AR    REG4,REGF           CHANGE WRITE TO READ COMMAND
         STM   REG4,REG5,CCMNDA   STORE READ CMND FOR WRITE CHECK.
         MVI   CCMNDA+4,X'30'      TURN OFF CONMAND CHAIN.
         L     REG9,COPYPTR        RESTORE COPY BLOCK POINTER.
         AIF  ('&LIB' EQ 'LIB2').X304700                         XM3645
*  THE CHANNEL IS COMPLETED HERE IF NO IPL TEXT IS REQUESTED,OR IF
*  THIS DEVICE IS NOT A 2301 OR 2314
         L     REG6,TUCBPTR       GET UCB ADDRESS
.X304700 ANOP                                                    XM3645
         TM    SEQSW,IPLDD        WAS IPL TEXT REQUESTED.
         BZ    COMPCCW            NO-CHANNEL PROGRAM IS COMPLETE.
         AIF  ('&LIB' EQ 'LIB1').X304701                         XM3645
         B    BUILDIPL            BUILD IPL CCWS.                XM3645
         AGO  .X304702                                           XM3645
.X304701 ANOP                                                    XM3645
         TM    IPLTRK1,X'01'      IS IPL TEXT ON TRACK 1 BIT ON.
         BZ    BUILDIPL           NO CONSTRUCT CHANNEL PROGRAM FOR IPL.
         LA    REG7,FBLOCKS       GET POINTER TO ACTIVE CONTROL BLKS.
         MVC   IPLSEEK+2(4),UCBSKA+3   INSERT CORRECT CCHH OF IPL
         MVC   IPLSURCH(4),UCBSKA+3     TEXT INTO RECORD2 SEEK/SEARCH.
         XC    SEEKADDR+3(5),SEEKADDR+3  ZERO SEEK ADDR IN IOB.
         MVI   IPLSURCH+4,1       SET UP RECORD NO FOR IPL TEXT.
         BAL   REG5,EXCPIPL       LINK TO EXCP TO WRITE IPL RECORD.
         L     REG9,COPYPTR       GET COPY POINTER.
IPLLOOP1 EQU   *
         LTR   REG9,REG9          IS THERE ANOTHER COPY.
         BZ    BUILDF4            NO-CONSTRUCT VTOC.
         L     REG6,CUCBPTR       GET POINTER TO COPY UCB .
         MVC   IPLSEEK+2(4),UCBSKA+3 SET CORRECT CCHH OF IPL TEXT INTO
         MVC   IPLSURCH(4),UCBSKA+3    RECORD2 SEEK/SEARCH ADDRESS.
         TM    SEQSW,NEWVOLID     IS NEW VOL SPECIFIED.
         BO    KEEPSERL           YES-RETAIN THE SAME VOLID FOR COPY.
         MVC   VOLSERNO(6),SRTEVOLI  INSERT VOLID FOR THIS COPY.
KEEPSERL EQU   *
         LA    REG7,CIOBLOCK      POINT TO COPY I/O CONTROL BLOCKS.
         XC    SEEKADDR+3(5),SEEKADDR+3 CLEAR SEEK ADDRESS         O122
         BAL   REG5,EXCPIPL       LINK TO EXCP TO WRITE IPL RECORD.
         L     REG9,CCOPYPTR            GET ADDR OF COPY BLOCK     O122
         B     IPLLOOP1           LOOP UNTIL FINISH.
.X304702 ANOP                                                    XM3645
EXCPIPL  EQU   *
         EXCP  WKAIOB             INITIATE CHANNEL PROGRAM.
         TM    WKAECB,COMPLETE    IS I/O COMPLTE.
         BO    DONTWAIT           YES- BYPASS WAIT SVC.
         WAIT  1,ECB=WKAECB       WAIT FOR I/O COMPLETION.
DONTWAIT EQU   *
         CLI   WKAECB,X'7F'       WAS I/O SUCCESSFULLY COMPLETED.
         BCR   8,REG5              YES-RETURN.
IOERROR1 EQU   *
         CLC   SEEKADDR+3(4),ZEROS   WAS ERROR ON TRACK ZERO.
         BE    MSGZERO            YES- PRINT MESSAGE AND TERMINATE.
IOERROR2 EQU   *
         LA    REG1,13            GET MESSAGE NUMBER.
         BAL   REG5,MSGLINK       LINK TO MESSAGE ROUTINE.
         BAL   REG5,SYNADERR      NO-SYNAD ERROR RETURN.
EXIT     EQU   *
         BAL   REG5,MSGPRINT      WRITE MESSAGE.
         LA    REGF,8              SET UP RETURN CODE FOR MINITOR.
EXITFINL EQU   *
         CLI   FIPLPTR,X'80'      WAS IPL TEXT POINTER PASSED.
         BNE   PTROKAY            YES-LEAVE POINTER FOR MONITOR.
         XC    FIPLPTR(4),FIPLPTR NO-CLEAR IT.
PTROKAY  EQU   *
         L     REGD,SAVEREGD       GET POINTER TO IEHDANAL SAVE AREA.
         RETURN (14,12),T,RC=(15) RESTORE REGS AND RETURN.
BUILDIPL EQU   *
         USING BUFFER,REG9
         MVI   CCMNDA+4,X'40'      TURN ON COMMAND CHAIN.
         L     REG9,FIPLPTR  POINT TO IPL COUNT FIELD.
         LA    REG9,0(REG9)  CLEAR HIGH ORDER BYTE OF IPL POINTER.
         LM    REG0,REG5,CCMND8   HERE
         STM   REG0,REG5,CCMND9        WE
         LA    REG6,SEEKADDR+3            MODIFY
         LM    REG0,REG1,CCW1FMT                 THE
         ALR   REG0,REG6
         LM    REG2,REG3,CCMND7                     CHANNEL
         LA    REG6,CCMND7-CCMND6                           PROGRAM
         ALR   REG2,REG6          TO
         STM   REG0,REG3,CCMND7      WRITE
         LM    REG0,REG1,CCW3              THE
         L     REGE,FIPLPTR                        RECORD
         LA    REGE,0(REGE)       CLEAR HIGH ORDER BIT IN REG.
         AIF   ('&LIB' EQ 'LIB2').X0001                          X02912
         LA    REG6,3625
         AGO   .X0002                                            X02912
.X0001   ANOP                                                    X02912
         L     REG6,IPLMAX        GET MAX RECORD SIZE FOR IPLTXT X02912
.X0002   ANOP                                                    X02912
         ST    REG6,IPL1CNT+4     STORE DATA LNGTH IN COUNT OF IPLTEXT.
         LM    REG0,REG1,CCW3                               TRACK
         ALR   REG1,REG6          SET UPLNGTH OF IPL TEXT IN CCW.
         ALR   REG0,REGE
         STM   REG0,REG1,CCMND6                                  ZERO.
         AR    REG0,REGF          MODIFY WRITE CCW TO READ.
         STM   REG0,REG1,CCMNDC
         MVI   CCMNDC+4,X'10'
         MVI   IPL1CNT+4,4        INSERT RECORD NUMBER INTO IPL COUNT.
         MVC   IPL1CNT(4),RCD1CNT  INSERT CCHH FOR IPL RECORD.
         MVC   IPLSURCH(5),IPL1CNT     SET UP IPL SEARCH
         XC    IPLSEEK(6),IPLSEEK      AND SEEK ADDRESS.
COMPCCW  EQU   *
         DROP  REG9
         USING COPYBLK,REG9
         XC    SEEKADDR+3(5),SEEKADDR+3  SET UP JOB FOR TRACK ZERO.
CARNIVAL EQU   *                                                 S20201
         TM    SEQSW+D1,RPSS       DO WE HAVE CARNY             XM4389
         BZ    NOTCARN             NO                            S20201
         LA    REG0,SETSECCW       YES, DO A SET SECTOR          S20201
         ST    REG0,CCWPTR                                       S20201
         LA    REG0,CCMND1         GET CHAN PROG                 S20201
         ST    REG0,TEMP           SET IT IN TIC                 S20201
         MVC   TICADD(K3),TEMP+K1                                S20201
         B     LOADCOPY            CHECK FOR COPIES              S20201
NOTCARN  EQU   *                                                 S20201
         LA    REG0,CCMND1
         ST    REG0,CCWPTR        INSERT POINTER TO CCWS INTO IOB.
LOADCOPY EQU   *                                                 S20201
         L     REG9,COPYPTR       GET POINTER TO COPY BLOCK
COPYLOOP EQU   *
         LTR   REG9,REG9     IS THIS THE LAST COPY.
         BZ    STRTEXCP      YES-PREPARE TO INITIATE EXCP.
         MVC   CIOBLOCK+72(44),FBLOCKS+72  MOVE CONTOOL BLKS TO COPY.
         LA    REG7,CIOBLOCK      POINT TO COPY CONTROL BLOCKS.
         ST    REG7,DCBADD        UPDATE DCB POINTER IN IOB.
         LA    REG0,WKAECB-IHADCB(REG7)  GET PTR TO ECB.
         ST    REG0,ECBADD-IHADCB(REG7)  GET PTR TO ECB.
         L     REG9,CCOPYPTR      GET NEXT COPYBLK POINTER.
         B     COPYLOOP           LOOP UNTIL ALL COPIES ARE BUILT.
OPENIPL  EQU   *
         LA    REG7,INPUTDCB      GET POINTER TO IPL DCB.
         MVC   DCBDDNAM(8),DDNAME1     INSERT IPL DDNAME.
         OPEN  (INPUTDCB,INPUT)   OPEN IPL DATA SET OR MEMBER.
         TM    DCBOFLGS,X'10'     WAS DCB OPENED.
         BZ    NOTOPEN            NO-SET UP ERROR AND TERMINATE.
GETLOOP2 EQU   *
         L     REG6,FBUFFPTR      GET POINTER TO OUTPUT AREA.
         LA    REG6,8(REG6)       SAVE SPACE FOR COUNT FIELD.
         AIF   ('&LIB' EQ 'LIB2').X0003                          X02912
         LA    REG3,3624(REG6)    POINT TO END OF BUFFER AREA.
         AGO   .X0004                                            X02912
.X0003   ANOP                                                    X02912
         LR    REG3,REG6                START OF READIN AREA     X02912
         LA    REG3,0(REG3)             CLEAR HIGH ORDER BYTE    X02912
         A     REG3,IPLMAX              POINT TO END OF BUFFER   X02912
         BCTR  REG3,0                                            X02912
.X0004   ANOP                                                    X02912
         SR    REG2,REG2          CLEAR EXECUTE REGISTER.
         LA    REG7,FBLOCKS       RESET I/O CONTROL BLOCK PTR.
GETLOOP1 EQU   *
         GET   INPUTDCB           GET LOGICAL RECORD.
         CLC   1(3,REG1),TEXTCARD IS THIS A TEXT RECORD.
         BNE   GETLOOP1           NO-DISCARD IT AND GET ANOTHER.
         IC    REG2,11(REG1)      GET NO OF BYTES IN THIS RECORD.
         L     REGF,4(REG1)       GET DISPLACEMENT OF TEXT CARD.
         LA    REGF,0(REGF)       CLEAR HIGH ORDER BYTE OF DISP REG.
         AR    REG6,REGF          GET ADDRESS OF THIS RECORD.
         LR    REGF,REG6          SAVE POINTER TO ADDR OF THIS TEXT.
         AR    REGF,REG2          GET POINTER TO END OF TRACK BUFFER.
         CR    REGF,REG3          WILL TEXT RECORD FIT IN BUFFER.
         BNH   MOVETEXT           YES-MOVE RECORD INTO OUTPUT BUFFER.
IPLMSG2  EQU   *
         CLOSE INPUTDCB           CLOSE INPUT IPL DCB.
         FREEPOOL  INPUTDCB       FREE QAAM BUFFERS.
NOTOPEN  EQU   *
         B     IPLWARN            INDICATE IPL TEXT WAS NOT FOUND.
MOVETEXT EQU   *
         OI    IPLTRK1,X'02'      INDICATE IPL TEXT WAS FOUND.
         BCTR  REG2,0
         EX    REG2,MOVE1         MOVE TEXT DATA TO OUTPUT AREA.
         B     GETLOOP2           GET ANOTHER RECORD.
MOVE1    EQU   *
         MVC   0(1,REG6),16(REG1)     EXECUTE TO MOVE DATA TO OUTPUT.
TSTBLKSI EQU   *             THIS IS THE DCB EXIT ROUTINE.
         LH    REG0,DCBBLKSI      PICK UP BLOCK SIZE.
         LTR   REG0,REG0          WAS BLOCK SIZE SPECIFIED.
         BCR   7,REGE             YES-RETURN TO OPEN.
         MVI   DCBBLKSI+1,80      NO-DEFAULT TO 80.
         BR    REGE               RETURN TO OPEN.
CONVERT  EQU   *
         STH   REG1,STRTRACK           SAVE STARTING RTA.
         SR    REG0,REG0
         LR    REG4,REG0          CLEAR HIGH ORDER DIVIDEND REGISTERS.
         DR    REG0,REGF          CONVERT LO EXTENT TO CYLS-TRKS.
         DR    REG4,REGF          CONVERT HI EXTENT TO CYLS-TRKS.
         SR    REG4,REG0          GET DIFFERENCE IN EXCESS TRKS.
         SR    REG5,REG1          GET DIFFERENCE IN CYLINDERS.
         LTR   REG5,REG5               IS CYLINDER ZERO.
         BZ    STOREXT            YES-THEN EXTENT IS CONVERTED.
         LTR   REG0,REG0          WAS BEGINNING EXTENT CYL ALIGNED.
         BZ    STOREXT            YES-THEN EXTENT IS CONVERTED.
         AR    REG4,REGF          ADD TRACK CONSTANT.
         BCTR  REG5,0                  DECREMENT NO OF CYLINDERS.
STOREXT  EQU   *
         STH   REG5,FULLCYLS      STORE NUMBER OF CYLINDERS.
         STC   REG4,EXTRACKS      STORE NUMBER OF EXCESS TRACKS.
         MVC   12(5,REG6),STRTRACK INSERT FORMAT 5 EXTENT.
         LA    REG6,5(REG6)       POINT TO NEXT EXTENT.
         BR    REGE                    RETURN.
CLOSE1   EQU   *             THIS IS THE EODAD EXIT ROUTINE.
         DROP  REG6
         CLOSE INPUTDCB           CLOSE INPUT IPL DCB.
         FREEPOOL  INPUTDCB       FREE QSAM BUFFERS.
         MVC   FIPLPTR+1(3),FBUFFPTR+1 SET UP POINTER TO IPL TEXT.
         TM    IPLTRK1,X'02'      WAS AN IPL TEXT RECORD FOUND.
         BZ    IPLWARN         NO-INDICATE IPL TEXT WAS NOT FOUND.
         B     TESTDEV
IPLWARN  EQU   *
         LA    REG1,26
         BAL   REG5,MSGLINK       GET PROPER MESSAGE.
         MVC   0(8,REG1),DDNAME2  INSERT PROPER DDNAME.
         BAL   REG5,MSGPRINT      PRINT PORPER MESSAGE.
         XI    SEQSW,IPLDD        TURN OFF IPL INDICATOR.
         OI    IPLTRK1,IPLDD      SET NONIPLABLE DEVICE INDICATOR.
         LA    REG1,RCOUNT1N      POINT TO NON-IPL RECORD.
         B     FINISH                  ABNORMAL TERMINATION      A32162
         AIF   ('&LIB' EQ 'LIB2').X227324                       XL03912
         USING DATACELL,REG6
DA2321   EQU   *
         MVC   VOLSERNO(6),DCELVOLI INSERT VOLUME SERIAL INTO LABEL.
         MVC   SEEKADDR+1(2),DCELBBNR  SET UP BIN NUBER INTO IOB.
         B     NUSERIAL
VOL2321  EQU   *
         MVC   VOLSERNO(6),DCELVOLI   INSERT SERIAL NUMBER.
         B     STARTCHP           WRITE TRACK ZERO.
         DROP  REG6
.X227324 ANOP                                                   XL03912
         USING UCBOB,REG6
*
**********************************************************************
*
EXCPLOOP EQU   *
         EXCP  WKAIOB             INITIATE EXCP.
         LTR   REG9,REG9          IS THERE ANOTHER COPY
         BZ    WAITLOOP           NO-WAIT FOR I/O COMPLETION
         LA    REG7,CIOBLOCK      GET POINTER TO COPY DCB
         L     REG9,CCOPYPTR      GET POINTER TO NEXT COPY BLOCK.
         B     EXCPLOOP           LOOP UNTIL ALL I/O IS STARTED.
WAITLOOP EQU   *
         LA    REG7,FBLOCKS       RESET CONTROL BLOCKS POINTER.
         L     REG9,COPYPTR       POINT TO 1ST COPY BLOCK.
WAITCOPY EQU   *
         TM    WKAECB,COMPLETE    IS I/O COMPLETE.
         BO    BYWAIT1            YES-BYPASS WAIT ECB.
         WAIT  ,ECB=WKAECB        WAIT FOR I/O COMPLETION.
BYWAIT1  EQU   *
         CLI   WKAECB,X'7F'       WAS I/O SUCCESSFUL
         BNE   IOERROR1           NO-PREPARE FOR ERROR EXIT
         LTR   REG9,REG9          IS THERE ANOTHER COPY.
         BCR   8,REG5             RETURN AFTER ALL I/O IS COMPLETED.
         LA    REG7,CIOBLOCK      YES-POINT TO NEXT COPY CONTROL BLKS.
         L     REG9,CCOPYPTR      GET POINTER TO NEXT COPY BLOCK
         B     WAITCOPY           LOOP UNTIL ALL I/O IS COMPLETE.
*
**********************************************************************
*
STRTEXCP EQU   *
         L     REG9,COPYPTR
         LA    REG7,FBLOCKS       POINT TO FUNCTION DCB
         TM    SEQSW,NEWVOLID     WAS NEW VOLUME SERIAL REQUESTED.
         BO    VOLOKAY            KEEP SAME SERIAL FOR ALL COPIES.
         BAL   REG5,EXCPIPL       WRITE TRACK ZERO SERIALLY.
NOIPLOOP LTR   REG9,REG9          WAS THIS THE LAST COPY.
         BZ    BUILDF4            YES-CONSTRUCT AND WRITE VTOC.
         LA    REG7,CIOBLOCK      POINT TO COPY I/O BLOCKS.
         L     REG6,CUCBPTR       GET COPY UCB POINTER.
         AIF   ('&LIB' EQ 'LIB2').X227325                       XL03912
         CLI   UCBID,X'FF'        IS THIS A 2321 .
         BNZ   VOL2321            YES-GET SERIAL FROM SUBUCB.
.X227325 ANOP                                                   XL03912
         MVC   VOLSERNO(6),SRTEVOLI    MOVE IN SERIAL NUMBER.
STARTCHP EQU   *
         BAL   REG5,EXCPIPL       WRITE EACH COPY SERIALLY.
         L     REG9,CCOPYPTR      GET POINTER TO NEXT COPY.
         B     NOIPLOOP           LOOP UNTIL ALL COPIES.ARE FINISH.
VOLOKAY  EQU   *
         BAL   REG5,EXCPLOOP      START CHANNEL PROGRAM EXECUTION.
         AIF   ('&LIB' EQ 'LIB2').X227326                        XM3645
WAITCMPL EQU   *
         L     REG6,TUCBPTR       GET BASE REGISTER FOR UCB.
         TM    SEQSW,IPLDD        WAS IPL TEXT REQUESTED.
         BZ    BUILDF4            NO-CONSTRUCT FORMAT 4 DSCB.
         CLI   UCBTBYT4,X'01'     IS THIS A 2311 DEVICE.
         BE    IPLON1             YES-BUILD CHNL PRGM FOR IPL ON TRK1.
         CLI   UCBTBYT4,X'03'     IS THIS A 2303 DEVICE.
         BNE   BUILDF4            NO-CONSTRUCT FORMAT 4 DSCB.
*
**********************************************************************
*
*        THE CHANNEL PROGRAN THAT WRITES IPL ON TRACK ONE IS
*              CONSTRUCTED HERE.
*
**********************************************************************
*
IPLON1   EQU   *
         LM    REG0,REG1,CCW1FMT   PICK UP CCW ONE.
         LM    REG2,REG5,CCW2     GET CCWS TWO THRU FIVE.
         XC    SEEKADDR+3(5),SEEKADDR+3 C6EAR SEEK ADDRESS IN IOB.
         MVI   SEEKADDR+6,1       SET SEEK ADRESS FOR TRACK ONE.
         LA    REG6,SEEKADDR+3
         ALR   REG0,REG6          SET UP SEARCH ARG ADDR IN CCW.
         ALR   REG2,REG7               SET UP CORRECT TIC ADDRESS.
         L     REG6,FIPLPTR       GET POINTER TO IPL TEXT.
         LA    REG6,0(REG6)       CLEAR HIGH ORDER BIT IN REG.
         MVC   0(8,REG6),IPLCOUNT  SET UP IPL COUNT FIELD.
         ALR   REG4,REG6          POINT TO IPL RECORD FROM WCKD CCW.
         LA    REG6,3625
         ALR   REG5,REG6     SET UP LENGTH OF IPL TEXT IN CCWS.
         STM   REG0,REG5,CCMND1   STORE UPDATED CCWS IN WORKAREA.
         LA    REG6,CCMND4-CCMND1 GET DISPLACEMENT OF CW4 IN WORKAREA.
         ALR   REG2,REG6          UPDATE ADDRESS IN TIC CCW.
         STM   REG0,REG5,CCMND4   STORE UPDATED CCWS FOR WRITE CHECK.
         MVI   CCMND6,X'1E'       MODIFY OP TO READ COUNT KEY AND DATA.
         MVI   CCMND6+4,X'30'     SET SKIPAND SILI FLAGS ON.
         LA    REG7,FBLOCKS       GET POINTER TO FUNCTION BLOCK.
CARNIV1  EQU   *                                                 S20201
         TM    SEQSW+D1,RPSS       DO WE HAVE CARNY             XM4389
         BZ    NOTCARN1            NO                            S20201
         LA    REG0,SETSECCW       YES DO SET SECTOR             S20201
         ST    REG0,CCWPTR         PUT IN IOB                    S20201
         LA    REG0,CCMND1         GET CHAN PROG                 S20201
         ST    REG0,TEMP           STORE IN TIC PTR              S20201
         MVC   TICADD(K3),TEMP+K1                                S20201
         ST    REG0,TEMP           SET IT IN TIC                 S20201
         B     COPY1               PROCESS COPIES                S20201
NOTCARN1 EQU   *                                                 S20201
         LA    REG9,CCMND1        GET POINTER TO  CCW.
         ST    REG9,CCWPTR        STORE CWW POINTER INTO IOB.
COPY1    EQU   *                                                 S20201
         L     REG9,COPYPTR       POINT TO FIRST COPY BLOCK.
IPLOOP   EQU   *
         LTR   REG9,REG9          IS THIS THE LAST COPY.
         BZ    WRITEIPL           YES-BRANCH AND WRITE IPL RECORD.
         MVC   CIOBLOCK+72(44),FBLOCKS+72
         LA    REG7,CIOBLOCK      POINT TO COPY CONTROL BLOCKS.
         LA    REG0,WKAECB
         ST    REG0,ECBADD        UPDATE ECB POINTER IN IOB.
         ST    REG7,DCBADD        UPDATE DCB POINTER IN IOB.
         L     REG9,CCOPYPTR      GET ADDRESS OF NEXT COPY BLOCK.
         B     IPLOOP             LOOP UNTIL FINISH.
WRITEIPL EQU   *
         OI    IPLTRK1,1          SET IPL ON TRACK ONE INDICATOR.
         LA    REG7,FBLOCKS       POINT TO THE CNTRL BLKS IN FUNCBLKS.
         L     REG9,COPYPTR       GET ADDRESS OF FIRST COPY BLOCK.
         BAL   REG5,EXCPLOOP      START CHANNEL PROGRAM EXECUTION.
         B     BLIPLRCD           CONSTRUCT AND WRITE BOOTSTRAP RECORD.
.X227326 ANOP                                                    XM3645
BUILDF4  EQU   *
         LA    REG7,FBLOCKS       POINT TO PRIMARY CNTRL BLKS.
         MVC   SEEKADDR+3(4),VVTOCPTR  INSERT VTOC ADDRESS INTO IOB.
         L     REGE,IODEVCON      GET ADDRESS OF CONSTANT TABLE.
         L     REG6,FBUFFPTR      GET POINTER TO BUFFER AREA.
         SR    REG0,REG0
         IC    REG0,DSCBTRK       GET NUMBER OF DSCBS/TRACK.
         LA    REG1,148
         MR    REG0,REG0          COMPUTE SIZE NECCESSARY FOR DSCBS.
         AR    REG1,REG6          GET  ADDRESS OF FIRST CCW.
         LA    REG1,16(REG1)
         SRL   REG1,3
         SLL   REG1,3             ALIGN CCWS ON DOUBLE WORD BOUNDARY.
CARNIV2  EQU   *                                                 S20201
         TM    SEQSW+D1,RPSS       ARE WE CARNY                 XM4389
         BZ    NOTCARN2                                          S20201
         LA    REG0,SETSECCW       YES SET SECTOR CMD            S20201
         ST    REG0,CCWPTR         INT IOB                       S20201
         ST    REG1,TEMP                                         S20201
         MVC   TICADD(K3),TEMP+K1                                S20201
         B     CARNY2              CONT PROCESS                  S20201
NOTCARN2 EQU   *                                                 S20201
         ST    REG1,CCWPTR        STORE CCW  ADDRESS INTO I/OB
CARNY2   EQU   *                                                 S20201
         LM    REG2,REG5,CCW1FMT  PICK UP DUMMY CCWS.
         LA    REG0,SEEKADDR+3
         ALR   REG2,REG0          SET UP SEARCH ID EQ ADDRESS.
         ALR   REG4,REG1          SET UP TRANSFER IN CHANNEL ADDRESS.
         STM   REG2,REG5,0(REG1)  STORE UPDATED CCWS IN WORKAREA.
         SR    REG0,REG0
         LR    REG2,REG6          GET POINTER TO FIRST DSCB.
         IC    REG0,DSCBTRK       GET NO OF DSCBS/TRACK.
         LM    REG3,REG4,CCW3FMT  GET DUMMY CCW (WRITE COUNT-KEY-DATA)
         LA    REG1,16(REG1)      UPDATE CCW POINTER.
CCWLOOP1 EQU   *
         ALR   REG3,REG2          SET UP ADRESS OF PROPER DSCB.
         STM   REG3,REG4,0(REG1)  STORE UPDATED CCWS.
         LA    REG2,148           GET CCW ADDRESS INCREMENT.
         LA    REG1,8(REG1)       UPDATE CCW POINTER.
         BCT   REG0,CCWLOOP1      LOOP UNTIL ALL WRITE CCWS ARE BUILT.
         LM    REG3,REG4,CCW4FMT  GET DUMMY READ R0 CCW.
         STM   REG3,REG4,0(REG1)  STORE READ R0 CCW.
         IC    REG0,DSCBTRK       GET NUMBER OF DSCBS/TRACK.
         LM    REG3,REG4,CCW5FMT  GET WRITE CHECK DUMMY CCW.
         MVC   0(5,REG6),SEEKADDR+3 INSERT VTOC ADDRESS IN RCD CNT.
         MVC   5(3,REG6),DSCBCNT  MOVE KEY AND DATA LENGTH TO R1 CNT.
         B     CCWSTART           BYPASS FIRST UPDATE.
CCWLOOP2 EQU   *
         MVC   148(8,REG6),0(REG6)  INSERT NEXT RECORD COUNT.
         ALR   REG6,REG2               UPDATE DSCB POINTER.
CCWSTART EQU   *
         IC    REGF,4(REG6)
         LA    REGF,1(REGF)       INCREMENT RECORD NUMBER.
         STC   REGF,4(REG6)       STORE UPDATED CCHHR .
         STM   REG3,REG4,8(REG1) STORE WRITE CHECK CWW.
         XC    8(140,REG6),8(REG6) CLEAR DSCB AREA.
         LA    REG1,8(REG1)       UPDATE CCW POINTER.
         BCT   REG0,CCWLOOP2      LOOP UNTIL DSCBS/CCWS ARE BUILT
         LM    REG3,REG4,CCW6FMT   GET READ R0 CCW.
         STM   REG3,REG4,8(REG1)       READ R0 CCW.
         L     REG6,FBUFFPTR       RESET BUFFER ADDRESS.
         DROP  REG6
         USING BUFFER,REG6
         L     REGE,IODEVCON      GET ADDRESS OF CONSTANT TABLE.
         MVI   8(REG6),4
         MVC   9(43,REG6),8(REG6) SET UP FORMAT 4 DSCB KEY.
         MVI   DS4IDFMT,X'F4'     INSERT IDENTIFIER.
         MVC   DS4HPCHR(5),148(REG6)  SET UP HIGH PRIME CCHHR.
         MVC   DS4HCCHH(6),FALTDATA SET UP ALTERNATE DATA IN DSCB.
         MVI   DS4NOEXT,1         SET UP NUMBER IF EXTENTS IN VTOC.
         MVC   DS4DEVCT(14),CYLNO      SET UP DEVICE CONSTANTS.
         MVC   DS4VTOCE+2(8),MBBCCHH1  SET UP VTOC EXTEMTS.
         MVI   DS4VTOCE,1         SET UP EXTENT TYPE.
         IC    REG0,DSCBTRK
         MH    REG0,WKBUFPTR+2    COMPUTE NO OF DSCBS IN VTOC.
         BCTR  REG0,0             SUBTRACT 1 FOR FORMAT 4 DSCB.
         BCTR  REG0,0             SUBTRACT 1 FOR FORMAT 5 DSCB.
         STH   REG0,DS4DSREC      STORE NO OF AVAILABLE DSCBS IN VTOC.
         LA    REG6,148(REG6)     UPDATE DSCB POINTER TO THE FORMAT 5.
         MVI   8(REG6),5
         MVC   9(3,REG6),8(REG6)  SET UP FORMAT 5 KEY IDENTIFICATION.
         MVI   52(REG6),X'F5'     SET UP FORMAT IDENTIFIER.
         TM    SEQSW+D1,SS1VAL    SS/1 CONVERSION              @Y30LSFY
         BZ    SETD5              NO                           @Y30LSFY
*        FORMAT 5 DSCB WILL INDICATE ONLY TRACKS 3-19 ARE FREE @Y30LSFY
         MVC   STRTRACK(L5),SS1AVEXT SET AVAIL. EXTENT         @Y30LSFY
         MVC   D12(L5,REG6),STRTRACK INSERT FORMAT 5 EXTENT    @Y30LSFY
         B     NOHIRTA            SKIP EXTENT CONSTRUCTION     @Y30LSFY
SETD5    EQU   *                                               @Y30LSFY
         LA    REG1,1             ASSUME TRACK 1 IS AVAILABLE.
         TM    SEQSW,IPLDD        WAS IPL TEXT REQUESTED.
         BZ    TRKAVAIL           NO- THEN TRACK 1 IS AVAILABLE.
         AIF   ('&LIB' EQ 'LIB2').X227327                       XL03912
         USING UCBOB,REG5
         L     REG5,TUCBPTR       GET POINTER TO UCB.
         CLI   UCBTBYT4,1         IS THIS AN IPLABLE 2311.
         BE    UPTRACK            YES- THEN TRK 1 IS NOT AVAILBLE.
         CLI   UCBTBYT4,3         IS THIS AN IPLABLE 2303.
         BNE   TRKAVAIL           NO-THEN TRACK 1 IS AVAILABLE.
         USING BUFFER,REG6
UPTRACK  EQU   *                                               @ZA01205
         LA    REG1,2             MAKE TRACK THE 1ST AVAILABLE.@ZA01205
.X227327 ANOP                                                   XL03912
TRKAVAIL EQU   *
         LH    REG5,RTAVTOCS+2    GET BEGINNING RTA OF VTOC.
         LH    REGF,TRKCYL        GET TRACK CONSTANT.
         CR    REG1,REG5          DOES VTOC START AT BEGINNING OF VOL.
         BNL   NOLORTA            YES-BYPASS LOW EXTENT CONVERSION.
         BAL   REGE,CONVERT       NO-CONVERT RTA TO DSCB FORMAT.
NOLORTA  EQU   *
         LH    REG1,RTAVTOCE+2    GET ENDING RTA OF VTOC.
         LH    REG5,RTAVTOCS      GET RTA OF LAST PRIMARY TRACK.
         CR    REG1,REG5          IS LAST TRACK ALLOCATED TO VTOC.
         BNL   NOHIRTA            YES-BYPASS HIGH EXTENT CONVERSION.
         LA    REG1,1(REG1)       UPDATE RTA TO 1ST AVAILABLE.
         LA    REG5,1(REG5)       UPDATE RTA TO 1ST ALTERNATE
         BAL   REGE,CONVERT       CONVERT RTA TO DSCB FORMAT.
NOHIRTA  EQU   *
         LA    REG7,FBLOCKS       GET POINTER TO PRIMARY I/O BLOCKS.
         L     REG9,COPYPTR       GET FIRST COPY BLOCK POINTER .
         L     REG2,CCWPTR        GET PTR TO CCW FROM FUNCBLK.
         BAL   REG5,EXCPIPL       WRITE FIRST TRACK SERIALLY.
WRITEF4  EQU   *
         LTR   REG9,REG9          WAS THIS LAST COPY.
         BZ    NEXTRK             YES-WRITE OTHERS TRKS IN PARALLEL
         L     REG6,FBUFFPTR      RESTORE BUFFER AREA BASE.
         MVC   DS4HCCHH(6),CALTDATA INSERT ALTERNATE DATA INFO.
         LA    REG7,CIOBLOCK  POINT TO COPY I/O CONTROL BLOCK.
         ST    REG2,CCWPTR        STORE PTR TO CCW IN COPY BLOCK.
         MVC   SEEKADDR+3(4),VVTOCPTR  INSERT CCHH INTO IOB SEEKADDR.
         BAL   REG5,EXCPIPL   INITIATE I/O ON TRK 1 OF COPY DEVICE.
         L     REG9,CCOPYPTR      GET NEXT COPY POINTER.
         B     WRITEF4   LOOP UNTIL ALLL ARE COMPLETED.
TTRCONV  EQU   *                                                   O122
         L     REGF,FBUFFPTR            POINTER TO BUFFER          O122
         USING CVT,REGF                                            O122
         STM   REG9,REG2,12(REGD)       SAVE REGS FOR CONVERT RTN  O122
         LR    REG3,REGD                SAVE PTR TO SAVE AREA      O122
         LA    REG2,8(REGF)             POINT TO MBBCCHHR AREA     O122
         LA    REG1,DDEB                POINT TO DUMMY DEB         O122
         L     REGF,CVTPTR              GET ADDRESS OF CVT         O122
         L     REGF,CVTPCNVT            GET ENTRY PT TO CONVERT RTNO122
         BALR  REGE,REGF                LINK TO CONVERT RTN        O122
         LM    REG9,REG2,12(REG3)       RESTORE MY REGISTERS       O122
         BR    REG5                     RETURN TO CALLING RTN      O122
NEXTRK   EQU   *                                                   O122
         LA    REG7,FBLOCKS             PTR TO I/O BLOCKS.       XM1383
         LA    REG0,1                   PUT A 1 IN REG 0           O122
         AH    REG0,RTAVTOCS+2          COMPUTE TTR OF NEXT TRACK  O122
         STH   REG0,RTAVTOCS+2          SAVE UPDATED TTR IN WORK   O122
*                                          AREA                    O122
         SLL   REG0,16                  POSITION TT IN HIGH ORDER  O122
*                                          BYTES                   O122
         BAL   REG5,TTRCONV             SET SEEK ADDRESS           O122
         MVC   SEEKADDR+3(5),11(REGF)   INSERT CCHHR INTO IOB      O122
         XC    8(140,REGF),8(REGF)   CLEAR FORMAT 4 DSCB AREA.
         XC    156(140,REGF),156(REGF) CLEAR FORMAT 5 DSCB AREA.
UPCOUNT2 EQU   *
         SR    REG1,REG1          CLEAR REG1.
         L     REGE,IODEVCON      GET ADDRESS OF CONSTANT TABLE.
         IC    REG1,DSCBTRK       GET NO OF DSCB PER TRACK.
UPCOUNT1 EQU   *
         MVC   0(4,REGF),SEEKADDR+3    UP CCHH IN DSCB
         LA    REGF,148(REGF)     POINT TO NEXT DSCB IN CORE.
         BCT   REG1,UPCOUNT1    LOOP UNTIL PTRS ARE UPDATED.
         CLC   RTAVTOCS+2(2),RTAVTOCE+2 IS THIS END OF VTOC.
         BH    FINISH      YES PREPARE TO RETURN TO MONITOR.
         LA    REG7,FBLOCKS   GET PRIMARY BLOCK POINTRR.
         L     REG9,COPYPTR       POINT TO FIRST COPY.
         LR    REGF,REG7     SAVE PTR TO FUNCTION I/O BLOCKS.
CCHHLOOP EQU   *
         LTR   REG9,REG9          IS THIS THE LAST COPY BLOCK.
         BZ    EXCPLINK           YES- LINK TO EXCP.
         LA    REG7,CIOBLOCK      POINT TO COPY I/O BLOCK.
         MVC   SEEKADDR+3(4),SEEKADDR+3-IHADCB(REGF) PUT CCHH IN COPY.
         L     REG9,CCOPYPTR      GET NEXT COPY BLOCK POINTER.
         B     CCHHLOOP           LOOP UNTIL COPIES ARE COMPLETE.
EXCPLINK EQU   *
         LR    REG7,REGF          RESTORE FUNCTION I/O BLOCK PTR.
         L     REG9,COPYPTR            POINT TO FIRST COPY BLOCK.
         BAL   REG5,EXCPLOOP     WRITE ALL COPIES IN PARALLEL.
         B     NEXTRK             LOOP UNTIL VTOC IS FINISH.
FINISH   EQU   *
         LA    REGF,8             SET UP ABNORMAL COMPLETION CODE.
         TM    IPLTRK1,IPLDD      IS NONIPLABLE BIT SET.
         BO    RETOKAY            YES-RETURN WITH A CODE 4.
         SR    REGF,REGF
RETOKAY  EQU   *
         B     EXITFINL
MSGLINK  EQU   *
         LINK  EP=IEHDMSGB        GET PROPER MESSAGE.
         BR    REG5
MSGPRINT EQU   *
         LINK  EP=IEHDPRNT
         BR    REG5
SYNADERR EQU   *
         SYNADAF ACSMETH=EXCP,PARM1=WKAIOB
         MVC   MESS+22(78),49(REG1)    SET MSG IN OUTPUT BUFFER. SM4350
         SYNADRLS
         BR    REG5
NOIPLDS  EQU   *
         LA    REG1,13
         BAL   REG5,MSGLINK       BUILD I/O ERROR MESSAGE IN BUFFER.
         SYNADAF   ACSMETH=QSAM
         MVC   MESS+22(78),49(REG1)    SET MSG IN OUTPUT BUFFER. SM4350
         SYNADRLS
         BAL   REG5,MSGPRINT      PRINT I/O ERROR MSG.
         B     IPLMSG2            PRINT NEXT MSG,CLOSE DCB AND EXIT.
MSGZERO  EQU   *
         LA    REG1,28            PICK UP MESSAGE NUMBER.
         BAL   REG5,MSGLINK       GET MESSAGE INTO OUTPUT BUFFER.
         MVC   0(8,REG1),DDNAME2  ASSUME THIS IS A PRIMARY FUNCTION.
         LA    REG0,FBLOCKS       GET POINTER TO PRIMARY I/O BLOCKS.
         CR    REG0,REG7          TEST FOR PRIMARY.
         BE    EXIT               EXIT IF THIS WAS A PRIMARY FUNCTION.
         MVC   0(8,REG1),DDNAME3  GET DDNAME FROM COPY BLOCK.
         B     EXIT               EXIT
*                                 CONSTANTS
RPSS     EQU   X'40'                    INDIC RPS ON DASD VOL   XM4389
D3350    EQU   X'0B'                   3350 DEVICE TYPE        @VS40037
FACTPACK EQU   9                                                 S20201
ZEUS1    EQU   6                                                 S20201
ZEUS2    EQU   7                                                 S20201
D1       EQU   1                                                 S20201
D2       EQU   2                  DISPLACEMENT CONSTANT        @Y30LSFY
D3       EQU   3                  DISPLACEMENT CONSTANT        @Y30LSFY
SS1VAL   EQU   X'01'              SS/1 CONVERSION              @Y30LSFY
L4       EQU   4                  LENGTH CONSTANT              @Y30LSFY
L5       EQU   5                  LENGTH CONSTANT              @Y30LSFY
L6       EQU   6                  LENGTH CONSTANT              @Y30LSFY
L8       EQU   8                  LENGTH CONSTANT              @Y30LSFY
D12      EQU   12                 DISPLACEMENT CONSTANT        @Y30LSFY
SS1AVEXT DC    X'0003000011'      TRACKS 3-19 AVAIL.           @Y30LSFY
F1       DC    F'1'                                              S20201
TEMP     DC    F'0'                                              S20201
         DC    C'MAINTENANCE AREA'
MAINT    DS    50F                      MAINT AREA              XL02912
         AIF   ('&LIB' EQ 'LIB1').X0005                          X02912
WIN      EQU   X'0A'                                             XM5465
ONE      EQU   1                                                 XM5465
IPLMAX   DC    F'6496'                  MAX IPLTXT RECORD SIZE   X02912
.X0005   ANOP                                                    X02912
K1       EQU   D1                                                S20201
K3       EQU   3                                                 S20201
K8       EQU   8                       2314 DEVICE TYPE         SA54550
ZERO     EQU   X'0000'                                           S20201
DEV2321  EQU   X'05'                   2321 DEVICE TYPE
*
*   CARNIVAL CCW'S
*
SETSECCW CCW   X'23',F1,X'40',1                                  M6129
TICCW    EQU   *                                                 S20201
         DC    X'08'                                             S20201
TICADD   DC    AL3(0)                                            S20201
         DC    F'0'                                              S20201
RCOUNT1N DC    F'0'
         DC    X'01'
         DC    X'04'                   KEY LENGTH.               A34946
         DC    AL2(CC1COUNT-4)     DATA LENGTH                   S20201
         DC    CL4'IPL1'              KEY DATA.                  A34946
REC1PSWN DC    X'000600000000000F'     WAIT STATE PSW (NON-IPL)
RD1CCWIN DC    X'0300000000000001'     NOP CCW.
RD1CCW2N DC    X'0000000000000000'     DUMMY CCW.
RCOUNT1I DC    F'0'               COUNT FIELD FOR RECORD 1 (IPL)
         DC    X'01'                                             M2888
         DC    X'04'                   KEY LENGTH.               A34946
         DC    AL2(CC1COUNT-4)          DATA LENGTH.             S20201
         DC    CL4'IPL1'               KEY DATA.                 A34946
REC1PSWI DC    X'0000000000000000'     PSW (IPL)
RD1CCW1I DC    X'06003A9860000060'       READ RECORD 2.
RD1CCW2I DC    X'08003A9800000000'    TIC TO CCW JUST READ IN.
RCOUNT2N DC    F'0'               COUNT FIELD FOR RECORD 2.
         DC    X'02'
         DC    X'04'                   KEY LENGTH.               A34946
         DC    AL2(CC4COUNT)           DATA LENGTH.              A34946
         DC    CL4'IPL2'               KEY DATA.                 A34946
RCD2CCW1 DC    X'07003AB840000006'     SEEK TO IPL TRACK.
RCD2CCW2 DC    X'31003ABE40000005'     SEARCH FOR IPL RECORD.
RCD2CCW3 DC    X'08003AA000000000'
         AIF   ('&LIB' EQ 'LIB2').X0006                          X02912
RCD2CCW4 DC    X'0600000020000E29'     READ IPL RECORD INTO CORE.
         AGO   .X0007                                            X02912
.X0006   ANOP                                                    X02912
RCD2CCW4 DC    X'0600000020001960'     READ IPL REC 3 INTO CORE. X02912
.X0007   ANOP                                                    X02912
RCOUNT3N DC    F'0'                COUNT FIELD REC 3             S20201
         DC    X'03'                                             S20201
         DC    X'04'               KEY FIELD                     S20201
         DC    AL2(CC3COUNT-4)    DATA LENGTHAND COUNT FIELD     S20201
         DC    C'VOL1'             KET FIELD REC 3               S20201
         DC    C'VOL1'             START OF DATA FIELD           S20201
INPUTDCB EQU   *
         DCB   DSORG=PS,MACRF=GL,RECFM=FB,LRECL=80,EXLST=LIST,         *
               SYNAD=NOIPLDS,EODAD=CLOSE1
LIST     EQU   *
         DC    X'85'
         DC    AL3(TSTBLKSI)
IPLCOUNT DC    F'1'
         DC    X'01'
         DC    AL3(3625)
CCW1     EQU   *
         DC    X'31'
         DC    AL3(ZEROS-WORKAREA)
         DC    X'40000005'
CCW2     EQU   *
         DC    X'08'
         DC    AL3(CCMND1-IHADCB)
         DC    F'0'
CCW3     EQU   *
         DC    X'1D'
         DC    AL3(0)
         DC    X'60000008'                                         9581
CCW4     EQU   *
         DC    X'1E'
         DC    AL3(0)
         DC    X'30000000'
CCW1FMT  DC    X'31'               DUMMY CCWS TO CONSTRUCT VTOC.
         DC    AL3(0)
         DC    X'40000005'
CCW2FMT  DC    X'08'
         DC    AL3(0)
         DC    F'0'
CCW3FMT  DC    X'1D'
         DC    AL3(0)
         DC    X'40000094'
CCW4FMT  DC    X'16'
         DC    AL3(0)
         DC    X'70000005'
CCW5FMT  DC    X'1E'
         DC    AL3(0)
         DC    X'50000094'
CCW6FMT  DC    X'1A'
         DC    AL3(0)
         DC    X'30000005'
DSCBCNT  DC    X'2C0060'
TEXTCARD DC    C'TXT'
         DS    0D                                                  O122
CCWA     DC    X'31'                    SEARCH FOR FORMAT 4 DSCB   O122
         DC    AL3(0)                                              O122
         DC    X'40000005'                                         O122
CCWB     DC    X'08'                    TIC TO SEARCH              O122
         DC    AL3(0)                                              O122
         DC    F'0'                                                O122
CCWC     CCW   X'0E',8,X'20',144 READ DATA FORMAT 4    PTMFIX
CCW01    EQU   *                        READ HOME ADDRESS          O122
         DC    X'1A'                                               O122
         DC    AL3(ALTHA-BUFFREAD)                                 O122
         DC    X'40000005'                                         O122
CCW02    EQU   *                        READ RECORD ZERO           O122
         DC    X'16'                                               O122
         DC    AL3(ALTR0-BUFFREAD)                                 O122
         DC    X'20000008'                                         O122
CCWSRCH  DC    X'31'                    SEARCH ON RECORD 3         O122
         DC    AL3(0)                                              O122
         DC    X'40000005'                                         O122
CCWBCK   DC    X'08'                    TIC TO SEARCH              O122
         DC    AL3(COMND1-BUFFREAD)                                O122
         DC    F'0'                                                O122
CCWRD    DC    X'06'                    READ DATA OF VOLUME LABEL  O122
         DC    AL3(VOLABEL-BUFFREAD)                               O122
         DC    X'10000050'                                         O122
         AIF   ('&LIB' EQ 'LIB2').X227328                       XL03912
SCC2321  DC    X'00F60000'              INCREMENT TO NEXT SUBCELL  O122
STC2321  DC    X'0000FB00'              INCREMENT TO NEXT STRIP    O122
.X227328 ANOP                                                   XL03912
HA1      DC    H'1'                     ONE                        O122
HA32     DC    H'32'                    32                         O122
HA24     DC    H'24'                    24                         O122
*
CVT      DSECT
         CVT   SYS=MIN
         DCBD  DSORG=PS           DATA CONTROL BLOCK.
         ORG   IHADCB+72
*
*
WKAECB   DS    F                  EVENT CONTROL BLOCK.
*
*
WKAIOB   DS    F                  INPUT/OUTPUT BLOCKS.
IOBSENS1 EQU   WKAIOB+3                 SENSE BYTE 1 OF IOB        O122
NOREC    EQU   X'08'                    NO RECORD FOUND            O122
ECBADD   DS    F                  EVENT CONTROL BLOCK POINTER.
         DS    F
CSWORD   DS    F                  CHANNEL STATUS WORD.
IOBCSWST EQU   WKAIOB+12                IOB STATUS                 O122
UE       EQU   X'01'                    UNIT EXCEPTION             O122
CCWPTR   DS    F                  CHANNEL PROGRAM POINTER.
DCBADD   DS    F                  DATA CONTROL BLOCK POINTER
         DS    F
BLKERRCT DS    F
SEEKADDR DS    2F
         DS    F
*
*
CCOMMAND DS    0D                 CHANNEL COMMAND WORDS
CCMND1   DS    D
CCMND2   DS    D
CCMND3   DS    D
CCMND4   DS    D
CCMND5   DS    D
CCMND6   DS    D
CCMND7   DS    D
CCMND8   DS    D
CCMND9   DS    D
CCMNDA   DS    D
CCMNDB   DS    D
CCMNDC   DS    D
         EJECT                                                 @Y30LSFY
WORKAREA DSECT
RCD1CNT  DC    CL8'CCHHRKDL'      COUNT FIELD RECORD 1  C'00001024'.
RECORD1  DS    CL24               RECORD NUMBER 1 IPL/NON-IPL.
IPLKEY1  DC    CL4'IPL1'                                         S20201
RCD2CNT  DC    CL8'CCHHRKDL'      COUNT FIELD RECORD 2  C'00002032'.
RECORD2  DS    CL32               RECORD NUMBER 2.
IPLKEY2  DC    CL4'IPL2'                                         S20201
IPLSEEK  DS    CL6                      SEEK ADDRESS FOR IPL RECORD.
IPLSURCH DS    CL5
         DS    CL5
RCD3CNT  DC    CL8'CCHHRKDL'      COUNT FIELD RECORD 3  C'00003080'.
VOLLABEL DS    0CL84               VOL LABEL REC 3               S20201
VOLKEY   DC    CL4'VOL1'           KEY FOR REC 3                 S20201
VOLIDENT DC    C'VOL'                  VOLUME LABEL IDENTIFIER.
VOLNUMBR DS    XL1                     VOLUME LABEL NUMBER.
VOLSERNO DS    CL6                     VOLUME SERIAL NUMBER.
VOLSECTY DS    XL1                     VOLUME SECURITY INDICATOR.
VVTOCPTR DS    CL10                    VTOC POINTER C'CCHHRRESVR'.
VOLRESV1 DS    CL10                    RESERVED FOR MANUFACTURERS USE.
VOLRESV2 DS    CL10                    RESERVED
VOLOWNER DS    CL10                    OWNER NAME AND ADDRESS CODE
VOLRESV3 DS    CL29                    RESERVED
VOLEND   EQU   *
CC1COUNT EQU   RCD2CNT-RECORD1         RECORD 1 DATA LENGTH.
CC2COUNT EQU   RCD3CNT-RECORD2         RECORD 2 DATA LENGTH.
CC3COUNT EQU   VOLEND-VOLKEY      RECORD 3 LENGTH                S20201
CC4COUNT EQU   144                                                 9581
CC3      EQU   CC3COUNT+8
         ORG   WORKAREA+188                                      S20201
UNASGBT  DS    CL1                     USED BY IEHDANAL        @Y30LSFY
         DS    CL3                     RESERVED                @Y30LSFY
SAVEAREA  DS    0F
PL1WORD  DS    F                  THIS WORD IS USED BY PL/1.
OLDSAPTR DS    F                  POINTER TO PREVIOUS SAVE AREA.
NEWSAPTR DS    F                  POINTER TO NEXT SAVE AREA.
RETADREG DS    F                  (REG14)-RETURN ADDRESS REGISTER.
ENTRYPTR DS    F                  (REG15)-ENTRY POINT REGISTER.
REG0TO12 DS    13F                REGISTERS 0 THROUGH 12.
SAVEVTOC DS    8F
ANALTEMP DS    F                       USED                    @Y30LSFY
SAVCCHHR DS    F                         BY                    @Y30LSFY
SAVCCWPT DS    F                           IEHDANAL            @Y30LSFY
         DS    0D                                                S20201
PRGSAVE  DS    10F
RTAVTOCS DS    F
RTAVTOCE DS    F
         ORG   *-16
DDEB     DS    0F                 FAKE DEB FOR CONVERT ROUTINE.
         ORG   *+16
DEXTNTNO DS    CL1                DUMMY EXTNT NUMBER.
MBBCCHH1 DS    CL7                SAVE AREA FOR VTOC EXTENT.
MBBCCHH2 DS    CL8
DUCBPTR  DS    F                  FAKE UCB POINTER.
HALFWD   DS    H                  HALF WORD WORK SPACE.
DEXTNTS  DS    HL4                DUMMY STARTING CCHH(000000)
DEXTNTE  DS    HL4                DUMMY ENDING CCHH.
DEXTNTR  DS    H                  DUMMY NO TRACKS.
WKBUFPTR DS    F
WKBUFSI  DS    F
PARMLST  DS    0F
PARMUCB  DS    F
PARMDCB  DS    F
PARMCCHH EQU   PARMDCB
PARMALTD DS    F
STRTRACK DS    H
FULLCYLS DS    H
EXTRACKS DS    C
ZEROS    DS    CL5
IPLTRK1  DS    CL1
WKAEND   DS    0D
SAVEREGD EQU   SAVEVTOC+4
SIZE     EQU   WKAEND-RCD1CNT
*
**********************************************************************
BUFFREAD DSECT                                                     O122
         DS    0F                                                  O122
ALTHA    DS    CL5                      AREA TO READ HOME ADDRESS  O122
         DS    CL3                                                 O122
ALTR0    DS    2F                       AREA TO READ RECORD ZERO   O122
TRKSW    DS    CL1                      SWITCH FOR ALTERNATE       O122
*                                          TRACKS                  O122
TRKCLR   EQU   X'00'                    CLEAR SWITCH               O122
TRKFND   EQU   X'01'                    FIRST ALTERNATE TRACK HAS  O122
*                                          BEEN FOUND              O122
TRYCOPY  EQU   X'10'                    PRIMARY COPY DONE          O122
SKADDR   DS    1F                       SAVE AREA FOR SEEK ADDR    O122
SAVECCHH DS    1F                       SAVE AREA FOR CCHH         O122
ALTINFO  DS    1F                       ALTERNATE TRACK INFO       O122
NOALT    DS    CL1                      NUMBER OF ALTERNATES       O122
         DS    0D                                                  O122
COMND1   DS    1D                       QUICK DASDI CHANNEL        O122
COMND2   DS    1D                          PROGRAM AREA            O122
COMND3   DS    1D                                                  O122
VOLABEL  DS    1F                       FOR VOLUME LABEL           O122
BUFFER   DSECT
F4COUNT  DS    CL8
         ORG   F4COUNT+52
         IECSDSL1 (4)
F5COUNT  DS    CL8
         IECSDSL1 (5)
F0COUNT  DS    CL8
         ORG   BUFFER
IPL1CNT  DC    CL8'CCHHRKDL'
         DS    CL3625
KENUCB   DSECT
         IEFUCBOB
         IEHDBLKS
         IEHDWORK
         END
