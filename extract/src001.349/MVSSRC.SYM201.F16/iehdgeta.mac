         TITLE 'IEHDGETA - PERFORMS GETALT FUNCTION  IEHDASDR UTILITY'
         COPY  LCGASMSW
IEHDGETA CSECT
**********************************************************************
*
*                        FIXES THIS MODULE
*                        LATEST FIRST.
*
**********************************************************************
*
*D 66000                               ONLY SU32               @ZA25515
*C 115000                              ONLY SU32               @ZA25515
*A 103500-104000                       ONLY SU32               @ZA25515
*A 255105-255108,886500                ONLY SU32               @ZA25515
*
*                                                                     *
*                    VS2-3 SU32                                @G32DSPD
*                                                              @G32DSPD
*        RELEASE 23 DELETIONS                                         *
*        RELEASE 22 DELETIONS                                         *
*        RELEASE 21 DELETIONS                                         *
*                                                                A49434
*        RELEASE 20 DELETIONS                                         *
*1145348000                                                      A35813
*1145                                                            S20201
*1145162000,177000                                               S20201
*D 300000,383000                                               @Z30RSAG
*C 300500,446500,405800                                        @Z30RSAG
*A 166820,271100-380,337500-867,373000-378000                  @Z30RSAG
*A 447600,700,483500,600                                       @Z30RSAG
*STATUS CHANGE LEVEL 003
*                                                                     *
**********************************************************************
      EJECT
*FUNCTION/OPERATION- THIS ROUTINE HANDLES THE -GETALT- FUNCTION       *
*   OF THE IEHDASDR SYSTEM UTILITY PROGRAM. GETALT IS USED TO         *
*   ASSIGN ALTERNATE TRACKS FOR DEFECTIVE OR QUESTIONABLE TRACKS      *
*   ON DISK OR DATA CELL VOLUMES. THE TRACKS SPECIFIED ON THE GETALT  *
*   CONTROL CARD WILL HAVE THE NEXT AVAILABLE ALTERNATE TRACK         *
*   ASSIGNED. THIS FUNCTION IS EXECUTED IN AN SVC ROUTINE.            *
*   RACF AUTHORIZATION IS REQUIRED FOR RACF DEFINED VOLUMES.   @G32DSPD
*                                                                     *
*ENTRY POINTS- THE ONLY ENTRY POINT IS -IEHDGETA- AND CONTROL IS      *
*   ALWAYS RECEIVED FROM THE MONITOR MODULE IEHDASDS.                 *
*                                                                     *
*INPUT- POINTERS TO A WORKAREA(REGISTER12) AND TO A CONTROL BLOCK     *
*   (REGISTER 10).                                                    *
*   DATA IS ON A DIRECT ACCESS DEVICE OTHER THAN A DRUM DEVICE        *
*                                                                     *
*EXITS- NORMAL- A SUCCESSFUL GETALT OPERATION RESULTS IN A RETURN     *
*   TO THE MONITOR (IEHDASDS) WITH A RETURN CODE OF 0. A GETALT       *
*   COMPLETE MESSAGE IS PLACED IN THE MESSAGE DATA SET.               *
*                                                                     *
*EXITS- ERROR- ANY ERROR ENCOUNTERED IS DESCRIBED BY AN APPROPRIATE   *
*   MESSAGE TO THE MESSAGE DATA SET. A RETURN CODE GREATER THAN       *
*   ZERO WILL BE PASSED BACK TO THE MONITOR.                          *
*                                                                     *
*EXTERNAL ROUTINES- THIS ROUTINE IS ALWAYS ENTERED FROM               *
*   THE MONITOR MODULE IEHDASDS. FOUR OTHER CSECTS ARE USED BY        *
*   THIS ROUTINE. MESSAGES ISSUED WILL BE FORMULATED BY THE MESSAGE   *
*   ROUTINE(IEHDMSGB) AND PRINTED BY THE PRINT ROUTINE                *
*   (IEHDPRNT). THE END OF EXTENT APPENDAGE(IGG019P8) HANDLES         *
*   THE LIMITS AND EXTENTS IN THE DEB FOR ALL DA DEVICES INVOLVED     *
*   THE SVC ROUTINE(IGC0008B) HANDLES THE ACTUAL ASSIGNMENT OF AN     *
*   ALTERNATE TRACK.                                                  *
*                                                                     *
*TABLES/WORK AREAS- UPON ENTRY REGISTERS 10 AND 12 POINT TO A         *
*   FUNCTION BLOCK AND A WORKAREA RESPECTIVELY. THEY ARE DESCRIBED    *
*   IN THE DSECTS CALLED -FUNCBLK- AND -WORK-.                        *
*                                                                     *
*ATTRIBUTES- SERIALLY REUSABLE, RELOCATABLE.                          *
*                                                                     *
*   THE FOLLOWING ARE REGISTER ASSIGNMENTS.
GR0      EQU   0
GR1      EQU   1
GR2      EQU   2
GR3      EQU   3
GR4      EQU   4
GR5      EQU   5
GR6      EQU   6
GR7      EQU   7
GR8      EQU   8
GR9      EQU   9
GR10     EQU   10
GR11     EQU   11
GR12     EQU   12
GR13     EQU   13
GR14     EQU   14
GR15     EQU   15
UCBPTR   EQU   9
BASEREG  EQU   11
WORKBASE EQU   12
         USING FUNCBLK,10
         USING IEHDGETA,BASEREG
         USING WORK,12
         SAVE  (14,12),T,*             SAVE THE REGISTERS
         LR    BASEREG,GR15            LOAD THE BASE REGISTER.
         LA    GR7,GETASAVE            SAVE AREA ADDRESS
         ST    GR7,8(GR13)             ADDRESS OF NEW AREA TO OLD.
         ST    GR13,4(GR7)             ADDRESS OF OLD AREA TO NEW.
         LR    GR13,GR7                LOAD SAVE AREA ADDRESS.
         SR    GR8,GR8                 INITIALIZE REGISTER TO ZERO.
         B     APARNO                  BRANCH AROUND APAR NO   @ZA25515
         DC    C'SU32 OZ25515'         LAST FIX THIS MODULE    @ZA25515
**********************************************************************
*        DETERMINE DEVICE TYPE AND SET UP POINTER TO THE  PROPER      *
*        DEVICE CONSTANTS FOR THIS DEVICE.                            *
**********************************************************************
APARNO   L     GR7,RDDCBAD             POINTER TO DCB          @ZA25515
         USING IHADCB,7
         L     UCBPTR,TUCBPTR          PICK UP POINTER TO UCB
         USING UCB,9
         AIF    ('&LIB' EQ 'LIB2').X225600                      XL03145
         CLI   UCBID,X'FF'             IS THIS MAIN UCB
         BNE   IS2321                  NO-MUST BE 2321
.X225600 ANOP                                                   XL03145
         TM    UCBTBYT3,UCB3DACC       IS THIS A DIRECT ACCESS DEVICE.
         BZ    BADPARM                 NO--MUST BE BAD PARAMETER.
         AIF   ('&LIB' NE 'LIB1').X301600                       XL03912
         CLI   UCBTBYT4,ZEUS1      IS IT 2305-1                  S20201
         BE    GOODEV              YES IT IS                     S20201
         CLI   UCBTBYT4,ZEUS2      NO IS IT 2305-2               S20201
         BE    GOODEV              YEH                           S20201
         TM    UCBTBYT4,X'02'          IS THIS DRUM DEVICE
         BO    DRUMDEV                 YES - CANNOT HANDLE DEVICE
GOODEV   EQU   *                                                 S20201
.X301600 ANOP                                                   XL03912
         TM    SRTESTAT,SRTESYSR       THIS A SYSTEMS RESIDENCE VOLUME
         BO    SYSRES                  YES-NOT ALLOWED
         SR    GR3,GR3
         IC    GR3,UCBTBYT4            UCB DEVICE TYPE CODE
         AIF   ('&LIB' EQ 'LIB1').X227600                       XL03130
         CLI   UCBTBYT4,WIN             IS THIS A 3340?         XL03130
         BNE   GETCON                   NO, GET DEVICE CONSTANT.XL03130
         IC    GR3,ODEVMOD              YES, USE DEV MOD NO.    XL03130
GETCON   EQU   *                                                XL03130
.X227600 ANOP                                                   XL03130
         LA    GR5,KDEVSIZE            SIZE OF EACH DEVICE ENTRY
         BCTR  GR3,0                   DECREMENT FOR PROPER INDEX
         MR    GR4,GR3                 ENTRY SIZE TIMES INDEX VALUE
         L     GR4,IODEVCON            BEGIN ADDRESS OF DEVICE CONSTANT
         AR    GR4,GR5                 ADDRESS OF CONSTANTS THIS DEVICE
         ST    GR4,IODEVCON            SAVE IN FUNCTION BLOCK
         AIF   ('&LIB' EQ 'LIB2').X225601                       XL03145
         B     SKIP
IS2321   LA    GR3,4                   INDEX FOR 2321
         LA    GR5,KDEVSIZE            SIZE OF EACH DEVICE ENTRY
         MR    GR4,GR3                 ENTRY SIZE TIMES INDEX VALUE
         L     GR4,IODEVCON            BEGIN ADDRESS OF DEVICE CONSTANT
         AR    GR4,GR5                 ADDRESS OF CONSTANTS THIS DEVICE
         ST    GR4,IODEVCON            SAVE IN FUNCTION BLOCK
.X225601 ANOP                                                   XL03145
SKIP     L     GR2,IODEVCON
         MVC   IODEVCON(1),UCBTBYT4    SAVE UCB DEVICE TYPE    @Z30RSAG
         CLI   UCBTBYT4,ZEUS1          IS ITB2305                S20201
         BE    ZEUSCMPR                YES - CHK ALTS DIFFERENT  S20201
         CLI   UCBTBYT4,ZEUS2          IS IT A 2305              S20201
         BE    ZEUSCMPR                YES - CHK ALTS DIFFERENT  S20201
         AIF   ('&LIB' EQ 'LIB1').X227913                       XL03912
         CLI   UCBTBYT4,K2314          IS THIS 2314             XL03145
         BE    CHKCYL1                 YES, CHECK CCHH          XL03145
         AGO   .X227914                                         XL03912
.X227913 ANOP                                                   XL03912
         CLI   UCBTBYT4,MERLN          IS THIS 3330              A49434
         BNE   CHKCYL1                  NO                       X99204
.X227914 ANOP                                                   XL03912
CKLAST   EQU   *                        MERLIN                   X99204
         USING CONSTANT,2
         CLC   GTRACK(2),LASTALT       IS VALID TRACK SPECIFIED  A49434
         BH    TRKINVLD                NO, GO SET RTN CODE       A49434
         B     CHKHD1                  CONTINUE CHECKING         A49434
CHKCYL1  EQU   *                       CHECK CCHH                A49434
         CLC   GTRACK(1),LASTALT       IS TRACK SPECIFIED A
         BH    TRKINVLD                  VALID TRACK.
         CLC   GTRACK+1(1),LASTALT+1
         BH    TRKINVLD
CHKHD1   EQU   *                       CONTINUE 3330 CHECKING    A49434
         CLC   GTRACK+2(1),LASTALT+2
         BH    TRKINVLD
         CLC   GTRACK+3(1),LASTALT+3
         BH    TRKINVLD                INVALID TRACK
         B     AFTZEUS                 GO AROUND ZEUS  CODE      S20201
ZEUSCMPR CLC   GTRACK(2),LASTALT       OVER LAST ALT             S20201
         BNL   TRKINVLD                YES - INVALID TRACK       S20201
         CLC   GTRACK+2(1),LASTALT+2   CHK THIRD BYTE            S20201
         BH    TRKINVLD                YES - INVALID TRACK       S20201
         CLI   GTRACK+3,X'07'           TRACK TOO BIG            S20201
         BH    TRKINVLD                YES - INVALID TRACK       S20201
AFTZEUS  EQU   *                                                 S20201
         MVC   REQUEST+VOL(L6),SRTEVOLI  SET VOLID TO MSG.      YL02912
         DROP  GR9                                              YL02912
         L     GR9,CVTPTR               GET ADDRESS OF CVT.     YL02912
         USING CVT,GR9                                          YL02912
         L     GR9,CVTTCBP              GET PTR TO TCB ADDRESS. YL02912
         L     GR9,D4(GR9)              GET TCB ADDRESS.        YL02912
         L     GR9,D12(GR9)             GET TIOT ADDRESS.       YL02912
         MVC   REQUEST+JJJ(L8),D0(GR9)  SET JOB NAME TO MSG.    YL02912
         MVC   REQUEST+SSS(L8),D8(GR9)  SET STEP NAME TO MSG.   YL02912
REQUEST  WTOR  'IEH846D CONFIRM REQUEST TO ASSIGN ALTERNATES ON VOLID= *
                    .JJJJJJJJ,SSSSSSSS.',REPLY,1,WTORECB,ROUTCDE=(4),  *
               DESC=(2)                                         YL02912
         TM    WTORECB,COMPLETE         IS OPERATION COMPLETE?  YL02912
         BO    TESTANSW                 YES,GO CHECK ANSWER.    YL02912
         WAIT  ECB=WTORECB              NO, AWAIT COMPLETION.   YL02912
TESTANSW MVI   WTORECB,ZERO             CLEAR ECB POST BITS.    YL02912
         CLI   REPLY,C'U'               REPLY EQUAL 'U'?        YL02912
         BE    USE                      YES, CONTINUE LABEL.    YL02912
         CLI   REPLY,C'T'               REPLY EQUAL 'T'?        YL02912
         BE    TERM                     YES, TERMINATE.         YL02912
         MVC   ERRANS+ERJJ(L8),D0(GR9)  SET JOB NAME TO MSG.    YL02912
         MVC   ERRANS+ERSS(L8),D8(GR9)  SET STEP NAME TO MSG.   YL02912
ERRANS   WTO   'IEH808I REPLY IN ERROR. REPLY WITH  U  OR  T , JJJJJJJJ*
               ,SSSSSSSS.',ROUTCDE=(4),DESC=(5)                 YL02912
         B     REQUEST                  GO WRITE REQUEST AGAIN. YL02912
         DROP  GR9                                              YL02912
USE      EQU  *                                                 YL02912
         EJECT
***********************************************************************
*                                                                     *
*  THIS ROUTINE OPENS THE DATA CONTROL BLOCKS FOR ALL DIRECT ACCESS   *
*     DEVICES INVOLVED. THE OPEN IS ALWAYS PERFORMED ON THE FORMAT    *
*     FOUR DSCB OF THE VTOC.                                          *
*                                                                     *
***********************************************************************
         MVC   DCBDDNAM(8),DDNAME2     PUT DDNAME IN DCB
         MVC   OPENLD+1(3),RDDCBAD+1   MOVE DCB ADDRESS TO LIST
OPENJ    LA    GR9,GETAREA             BUFFER ADDRESS TO READ JFCB
         ST    GR9,LIST
         MVI   LIST,X'87'              EXIT LIST CODE
         RDJFCB MF=(E,OPENLD)
         USING JFCB,9
         MVI   JFCBDSNM,X'04'          SET DSNAME FIELD FOR
         MVC   JFCBDSNM+1(43),JFCBDSNM   FORMAT 4 DSCB.
         MVI   JFCBTSDM,X'08'          STOP WRITE OF JFCB AT OPEN
         OPEN  MF=(E,OPENLD),TYPE=J
         TM    DCBOFLGS,X'10'          WAS THERE A SUCCESSFUL OPEN.
         BZ    NOOPEN                  NO--GIVE AN ERROR MESSAGE
         NI    DCBMACRF+1,X'F3'        SET BITS OFF TO PREVENT CLOSE
*                                        FROM WRITING AN EOF RECORD
*                                        AND UPDATING THE DSCB.
         ST    GR10,DCBIOBAD           FUNCTION BLOCK ADDRESS IN DCB
         SPACE 2
***********************************************************************
*       THIS SECTION OF CODE PERFORMS RACF AUTHORIZATION CHECKS. THE  *
*  USER MUST HAVE ALTER AUTHORIZATION TO GET AN ALTERNATE TRACK. IF   *
*  HE DOES NOT, THE OPERATION WILL NOT BE ALLOWED. IF RACF IS NOT     *
*  ACTIVE IN THE SYSTEM RACF CHECKING WILL NOT BE PERFORMED.          *
***********************************************************************
         L     GR5,CVTPTR              GET CVT POINTER         @G32DSPD
         USING CVT,GR5                                         @G32DSPD
         L     GR5,CVTRAC              GET RACF POINTER        @G32DSPD
         DROP  GR5                                             @G32DSPD
         LTR   GR5,GR5                 TEST THE RACF POINTER   @G32DSPD
         BZ    NULLRACF                NOT ACTIVE IF PTR NULL  @G32DSPD
         USING RCVT,GR5                GO END SEE IF RACF IS   @ZA25515
         TM    RCVTSTA1,RCVTDASD       CURRENT.                @ZA25515
         BZ    NULLRACF                NO IT WAS NOT.          @ZA25515
         DROP  GR5                                             @ZA25515
         L     GR5,TUCBPTR             GET UCB POINTER         @G32DSPD
         USING UCB,GR5                                         @G32DSPD
         MVC   RACVOL,UCBVOLI          SET VOLID FOR RACHECK   @G32DSPD
         DROP  GR5                                             @G32DSPD
         RACHECK ATTR=ALTER,ENTITY=RACVOL,CLASS='DASDVOL'      @G32DSPD
         CLM   GR15,B'0001',RC8        RC 8=UNAUTHORIZED       @G32DSPD
         BE    UNAUTH                  RC 8,GO TERMINATE       @G32DSPD
NULLRACF EQU   *                       RACF NOT ACTIVE,OR      @G32DSPD
*                                      VOL ID NOT RACF DEFINED,@G32DSPD
*                                      OR RACF AUTHORIZED.     @G32DSPD
        SPACE 2
***********************************************************************
*                                                                     *
*  THIS ROUTINE DETERMINES IF THE ALTERNATE TRACK REQUEST IS A VALID  *
*     ONE. IF SO, SVC 82 IS ISSUED TO ASSIGN AN ALTERNATE TRACK FOR   *
*     THE ONE SPECIFIED AS BAD. THE SVC ROUTINE PASSES BACK A RETURN  *
*     CODE WHICH IS CHECKED AND A MESSAGE IS WRITTEN DESCRIBING EITHER*
*     THE ALTERNATE TRACK OR THE ERROR CONDITION WHICH PREVENTED THE  *
*     ASSIGNMENT OF A TRACK.                                          *
*                                                                     *
***********************************************************************
         CLC   GTRACK(4),TRKZERO       IS BAD TRACK ZERO
         BE    TRKINVLD                YES - INVALID REQUEST
         L     GR6,DCBDEBAD            PICK UP DEB ADDRESS
         CLC   GTRACK(4),38(GR6)       IS BAD TRACK VTOC
         BE    TRKINVLD                FIRST TRACK OF VTOC INVALID
         BH    COMPAR2                 GO CHECK FOR REST OF VTOC
ASSIGN   MVC   PARMLIST+1(3),TUCBPTR+1  PICK UP UCB POINTER
         MVC   PARMLIST+4(4),GTRACK    PUT BAD TRACK ADDRESS IN LIST
         CLI   IODEVCON,D3350          IS IT 3350 ?            @Z30RSAG
         BNE   NOMAD                   NO, SKIP THIS           @Z30RSAG
         LH    GR5,DATASIZE                                    @Z30RSAG
         GETMAIN R,LV=(GR5)                                    @Z30RSAG
         ST    GR1,DATAREA                                     @Z30RSAG
         ST    GR1,BUFFADR             STORE ADDR AWAY         @Z30RSAG
         BAL   GR1,FILLBUFF            GO FILL BUFFER          @Z30RSAG
NOMAD    EQU   *                                               @Z30RSAG
         AIF   ('&LIB' EQ 'LIB1').X228305                       XL03130
         LA    GR1,ODEVMOD              GET DEV MOD NO. PTR.    XL03130
         ST    GR1,PARMLIST+12          PUT PTR INTO PARM LIST. XL03130
.X228305 ANOP                                                   XL03130
         LA    GR1,31                  DESCRIBE DEFECTIVE TRACK.
         LA    GR5,NEXTONE             SET UP FOR BRANCH AFTER PRINT
MSGLINK  BAL   GR4,MSGBLD              GO SET UP MESSAGE
         UNPK  GTRACK(9),PARMLIST+4(5) PUT TRACK ADDRESS IN PRINTABLES
         TR    GTRACK(8),TTABLE-240
         MVC   13(8,GR1),GTRACK        PUT TRACK ADDRESS IN MESSAGE
MOVENAME MVC   0(8,GR1),DDNAME2        PUT DDNAME IN MESSAGE
         B     MSGPRNT                 GO PRINT MESSAGE
         DROP  9
NEXTONE  LA    GR1,PARMLIST            PICK UP PARAMETER LIST ADDRESS
         SVC   ALTER                   ASSIGN ALTERNATE TRACK
         B     *+4(15)                 BRANCHING TABLE FOR RETURN CODES
         B     GOODRTN                 GOOD RETURN
         NOP   *                       CONDITION CODE 4        @Z30RSAG
         B     MSG23                      NOT APPLICABLE       @Z30RSAG
         B     IOERR                   I/O ERROR
         B     NOMORE                  NO MORE TRACKS AVAILABLE
GOODRTN  L     GR0,PARMLIST+4          PICK UP ALTERNATE TRK ADDRESS
         LA    GR1,32                  DESCRIBE ALTERNATE TRACK
         LA    GR5,NEXT                SET UP FOR BRANCK AFTER PRINT
         LTR   GR0,GR0                 WAS ALTERNATE TRK ASSIGNED
         BNE   MSGLINK                 YES-GO INDICATE NEW TRACK
         LA    GR4,MOVENAME            NO-SET UP FOR BRANCH AFTER MSG
         B     MSGBLD                  GO INDICATE NO ALTERNATE TRK
NEXT     EX    GR8,SWITCH1
         LA    GR1,6                   OPERATION COMPLETED SUCCESSFULLY
         L     UCBPTR,TUCBPTR          PICK UP POINTER TO UCB
         USING UCB,9
         BAL   GR4,MSGBLD              GO SET UP MESSAGE
         MVC   0(8,GR1),DDNAME2        PUT DDNAME IN MESSAGE
         AIF   ('&LIB' EQ 'LIB2').X225602                       XL03145
         CLI   UCBID,X'FF'             IS THIS A 2321.
         BNE   YES2321                 YES-GO HANDLE.
.X225602 ANOP                                                   XL03145
         MVC   40(6,GR1),SRTEVOLI      PUT VOL/SER NO IN MESSAGE
SETMSG   MVC   MESS+8(10),MODNAME      PUT FUNCTION NAME IN MESSAGE.
         BAL   GR5,MSGPRNT             GO PRINT MESSAGE
         LA    GR15,0                  SET UP RETURN CODE/SUCCESSFUL
         L     GR3,PTRCFUNC            PICK UP POINTER TO CURRENT FUNC.
         MVI   0(GR3),COMPLETE         SET COMPLETE BIT FOR FUNCTION.
         B     CLOSEUP
************************************************************   @Z30RSAG
*                                                          *   @Z30RSAG
*        THIS ROUTINE FILLS THE DATA BUFFER                *   @Z30RSAG
*                                                          *   @Z30RSAG
************************************************************   @Z30RSAG
FILLBUFF EQU   *                                               @Z30RSAG
         L     GR4,DATAREA             POINT TO BUFFER         @Z30RSAG
         LH    GR5,DATASIZE            LENGTH OF BUFFER        @Z30RSAG
         AR    GR5,GR4                 POINT TO END OF BUFFER  @Z30RSAG
         SH    GR5,EIGHT                                       @Z30RSAG
MOVEIT   EQU   *                                               @Z30RSAG
         MVC   0(L8,GR4),BITPAT        MOVE BIT PATTERN        @Z30RSAG
         LA    GR4,L8(GR4)                                     @Z30RSAG
         CR    GR4,GR5                 IS END ?                @Z30RSAG
         EJECT
         BL    MOVEIT                  LOOP IF NO              @Z30RSAG
         BR    GR1                     RETURN WHEN FINISHED    @Z30RSAG
         DROP  9
***********************************************************************
*                                                                     *
*  THIS SECTION WRITES OUT MESSAGES, SETS RETURN CODES AND RETURNS    *
*     CONTROL.
*                                                                     *
***********************************************************************
BADPARM  LA    GR1,10                  IS NOT DIRECT ACCESS
         B     MSG1
         AIF  ('&LIB' NE 'LIB1').X301201                        XL03145
DRUMDEV  LA    GR1,23                  IS DRUM DEVICE
         B     MSG2                     GO SET UP MESSAGE        A35813
.X301201 ANOP                                                   XL03145
NOOPEN   LA    GR1,5                   UNSUCCESSFUL OPEN
         B     MSG1
COMPAR2  CLC   GTRACK(4),42(GR6)       IS BAD TRACK PART OF VTOC
         BH    ASSIGN                  OK TO ASSIGN ALTERNATE
         LA    GR8,X'F0'               SET SWITCH TO WRITE WARNING
         B     ASSIGN                    MESSAGE AFTER TRACK ASSIGNMENT
UNUSABLE LA    GR1,30                  BAD TRACK IS PART OF VGOC OR
*                                        IS TRACK ZERO.
*                                        WRITING MESSAGE.
         B     MSG1                    GO WRITE MESSAGE
TRKINVLD LA    GR1,22                  INVALID TRACK ADDRESS
         B     MSG1                    GO WRITE MESSAGE
*  RACF AUTHORIZATION ERROR
UNAUTH   LA    GR1,MSG66I              SET FOR IEH866I MSG     @G32DSPD
         BAL   GR4,MSGBLD              GET MESSAGE TEXT        @G32DSPD
         MVC   0(L'GETALTNM,GR1),GETALTNM    TE GETALT         @G32DSPD
         MVC   18(8,GR1),DDNAME2       SET DDNAME              @G32DSPD
         B     PRNTM                   GO PRINT ERROR MSG      @G32DSPD
MSG23    EQU   *                                               @Z30RSAG
         LA    GR1,23                                          @Z30RSAG
         BAL   GR4,MSGBLD                                      @Z30RSAG
         MVC   0(L8,GR1),GTRACK        MOVE TRACK NO. TO MSG.  @Z30RSAG
         B     PRNTM                                           @Z30RSAG
FREEMN   EQU   *                                               @Z30RSAG
         CLI   IODEVCON,D3350          IS IT 3350 ?            @Z30RSAG
         BNER  GR5                     NO, SKIP FOLLOWING      @Z30RSAG
         L     GR4,BUFFADR             POINT TO BUFFER         @VS40034
         LTR   GR4,GR4                 ZERO PTR ?              @VS40034
         BZR   GR5                     YES, EXIT               @VS40034
         LH    GR6,DATASIZE            GET LENGTH BUFFER       @Z30RSAG
         FREEMAIN R,LV=(GR6),A=(GR4)   FREE IT                 @Z30RSAG
         BR    GR5                     RETURN                  @Z30RSAG
IOERR    LA    GR1,13                  I/O ERROR
         BAL   GR4,MSGBLD              GO SET UP MESSAGE
         MVC   0(3,GR1),MSGCON         PUT SVC NO. AND DDNAME IN MSG
         MVC   3(8,GR1),DDNAME2
         LA    GR5,CODESET             SET UP FOR BRANCH AFTER PRINT
         B     MSGPRNT                 GO PRINT MESSAGE
MSG2     BAL   GR4,MSGBLD               GO SET UP MESSAGE        A35813
         MVC   0(8,GR1),DDNAME2         PUT DD NAME IN MESSAGE   A35813
         BAL   GR5,MSGPRNT                                       A35813
         LA    GR15,4                   SET RETURN CODE TO 4     A35813
         TM    DCBOFLGS,X'10'           WAS OPEN PERFORMED       A35813
         BZ    FINAL                    NO, DONT CLOSE           A35813
         B     CLOSEUP                  GO CLOSE DCB             A35813
NOMORE   LA    GR1,27                  NO MORE ALTERNATE TRACKS
MSG1     BAL   GR4,MSGBLD              GO SET UP MESSAGE
         MVC   0(8,GR1),DDNAME2        PUT DDNAME IN MESSAGE
PRNTM    BAL   GR5,MSGPRNT             GO PRINT MESSAGE        @Z30RSAG
CODESET  BAL   GR5,FREEMN              FREE BUFFER IF 3350     @Z30RSAG
         LA    GR15,8                  SET UP RETURN CODE/ERR  @Z30RSAG
         TM    DCBOFLGS,X'10'          WAS OPENED PERFORMED
         BZ    FINAL                   NO-DON'T CLOSE
CLOSEUP  LR    GR3,GR15                SAVE RETURN CODE
         CLOSE ((7))
         LR    GR15,GR3                PUT RETURN CODE IN REG 15
FINAL    L     GR13,GETASAVE+4         RESTORE REGISTER 13
         RETURN (14,12),T,RC=(15)      RETURN WITH PROPER CODE
SWITCH1  NOP   UNUSABLE                SWITCH FOR WARNING MESSAGE FOR
*                                        ALTERNATE ASSIGNED TO VTOC
*                                        MESSAGE WRITING.
SYSRES   LA    GR1,14                  IS A SYSTEMS RESIDENCE VOLUME
         BAL   GR4,MSGBLD              GO SET UP MESSAGE
         MVC   0(8,GR1),DDNAME2        PUT DDNAME IN MESSAGE
         MVC   MESS+8(10),MODNAME
         LA    GR5,CODESET             SET UP FOR BRANCH AFTER PRINT
         B     MSGPRNT                 GO PRINT MESSAGE
MSGBLD   LINK  EP=IEHDMSGB             GO SET UP MESSAGE
         BR    GR4                     CONTINUE PROCESSING
TERM     EQU  *                                                 YL02912
         LA   GR1,MESS57               INDICATE GETALT DENIED.  YL02912
         BAL  GR4,MSGBLD               GO BUILD MESSAGE.        YL02912
         MVC  D0(L8,GR1),DDNAME2       PUT DDNAME IN MESSAGE.   YL02912
         MVC  MESS+D8(L6),MODNAME      OVERLAY FUNCTION NAME.   YL02912
         LA   GR5,CODESET              SET BRANCH AFTER PRINT.  YL02912
MSGPRNT  LINK  EP=IEHDPRNT             GO PRINT MESSAGE
         BR    GR5                     CONTINUE PROCESSING
         DROP  7
         AIF   ('&LIB' EQ 'LIB2').X225603                       XL03145
         USING DATACELL,9
YES2321  MVC   40(6,GR1),DCELVOLI      PLACE 232U SERIAL IN MESSAGE
         B     SETMSG                  GO WRITE OUT THE MESSAGE.
         DROP  9
.X225603 ANOP                                                   XL03145
LIST     DS    0F            FOR READ IN JFCB
         DC    X'87'
         DC    AL3(0)
OPENLD   RDJFCB (,(OUTPUT)),MF=L       PARAMETER LIST FOR OPEN
PARMLIST DC    X'1F'                   PARAMETER LIST FOR SVC
         DC    AL3(0)
         DC    1F'0'                                           @Z30RSAG
DATAREA  DC    F'0'                                            @Z30RSAG
         DC    X'80'
         DC    AL3(0)
BITPAT   DC    X'76B3BD1FAAAAFFFF'                             @Z30RSAG
EIGHT    DC    H'8'                                            @Z30RSAG
TTABLE   DC    C'0123456789ABCDEF'     TRANSLATE TABLE
MSGCON   DC    C'82,'                  SVC NO. FOR I/O ERROR MESSAGE
MODNAME  DC    C'GETALT FOR'           NAME OF MODULE
GETALTNM DC    C'GETALT'                FUNCTION NAME          @G32DSPD
RC8      DC    AL1(8)                   RETURN CODE 8          @G32DSPD
GETASAVE DS    18F                     SAVE AREA
TRKZERO  DC    F'0'
RDDCBAD  DC    A(RDDCB)                DCB ADDRESS.
D0       EQU   0                        DISPLACEMENT VALUE 0    YL02912
D4       EQU   4                        DISPLACEMENT VALUE 4    YL02912
D8       EQU   8                        DISPLACEMENT VALUE 8    YL02912
D12      EQU   12                       DISPLACEMENT VALUE 12   YL02912
MSG66I   EQU   66                       IEH866I OFFSET         @G32DSPD
L6       EQU   6                        LENGTH VALUE OF 6.      YL02912
L8       EQU   8                        LENGTH VALUE OF 8.      YL02912
ZERO     EQU   0                        IMMEDIATE CONSTANT.     YL02912
MESS57   EQU   57                       MESSAGE IEH857I.        YL02912
VOL      EQU   70                       DISPLACEMENT FOR VOLID. YL02912
JJJ      EQU   77                       DISPLACEMENT FOR JOB.   YL02912
SSS      EQU   86                       DISPLACEMENT FOR STEP.  YL02912
ERJJ     EQU   56                       DISPLACEMENT FOR JOB.   YL02912
ERSS     EQU   65                       DISPLACEMENT FOR STEP.  YL02912
WTORECB  DC    F'0'                     ECB FOR WTOR INST.      YL02912
ALTER    EQU   82
ZEUS1    EQU   X'06'                                             S20201
ZEUS2    EQU   X'07'                                             S20201
MERLN    EQU   X'09'                   3330 ID                   A49434
D3350    EQU   X'0B'                   3350 DEVICE TYPE        @Z30RSAG
         AIF   ('&LIB' EQ 'LIB1').X228310                       XL03130
WIN      EQU   X'0A'                   3340 DEVICE TYPE.        XL03130
.X228310 ANOP                                                   XL03130
K2314    EQU   X'08'                   2314 ID                  XL03145
         AIF   ('&LIB' EQ 'LIB1').OSDCB
RDDCB    DCB   DSORG=PS,MACRF=(E),DEVD=DA,EXLST=LIST,EOEA=P8,    M5431 F
               SIOA=P7,PGFX=YES                                  M5431
         AGO   .C1
.OSDCB   ANOP
RDDCB    DCB   DSORG=PS,MACRF=(E),DEVD=DA,EXLST=LIST,EOEA=P8
.C1      ANOP
MAINT    DS    50F                     PATCH AREA.              US02492
REPLY    DS   CL1                      AREA FOR WTOR REPLY.     YL02912
RACVOL   DS   CL6                      VOL SER FOR RACHECK     @G32DSPD
         EJECT
         IEHDWORK
         EJECT
         IEHDBLKS
VLABEL   DSECT
VOLUME   DS    CL3                     LABEL IDENTIFIER.
VOLNO    DS    CL1                     LABEL NUMBER.
SERIAL   DS    CL6                     LABEL SERIAL NUMBER.
SECURITY DS    CL1                     VOLUME SECURITY.
VTOCPTR  DS    CL10                    POINTER TO VTOC
         DS    CL20                    RESERVED.
OWNER    DS    CL10                    OWNER IDENTIFICATION.
         DS    CL29                    BLANK.
         EJECT
CVT      DSECT
         CVT
         EJECT
         ICHPRCVT                                              @ZA25515
         EJECT
UCB      DSECT
         IEFUCBOB
         EJECT
JFCB     DSECT
         IEFJFCBN
         EJECT
         DCBD  DSORG=PS
         END
