 TITLE   'CARD SCAN ROUTINE-  IEHDSCAN'
         COPY  LCGASMSW                                          SM4351
IEHDSCAN CSECT
***********************************************************************
*                  FIXES THIS MODULE                                  *
*                     LATEST FIRST                                    *
***********************************************************************
*
*C 142000,772858                    @XA16070,@YA18061,@ZA24160,@SA79721
*
*C 142000,361000                             @XA13633=@YA13305=@ZA07400
*A 773103                                    @XA13633=@YA13305=@ZA07400
*
*C774244,774340,776457                                         @ZM42083
*D349600,350200,775062-775295,776485-776499,776527             @ZM42083
*D379020-381000                                                @ZM42083
*
*C 143000,772706,772738             @XA10392=@SA74492=@YA10561=@ZA04428
*A 141500-142000,772703-772704,     @XA10392=@SA74492=@YA10561=@ZA04428
*A 772735-772736                    @XA10392=@SA74492=@YA10561=@ZA04428
*
*A 313500-314500                    @SA69592=@YA04854=@XA05828=@ZA01200
*
*1251689000                                                      M6170
*1251291000-295000                                               M4974
*1251421000                                                      M5593
*                                                                     *
* STATUS CHANGE LEVEL 000                                             *
***********************************************************************
         EJECT
* FUNCTION/OPERATION                                                  *
*      THIS ROUTINE PROCESS THE SYSIN DATA SET FOR IEHDASDR UTILITY   *
*      PROGRAM.  USING THE QSAM GET MACRO(MOVE MODE), THE INPUT       *
*      STREAM IS SCANNED ONE EIGHTY BYTE CARD IMAGE AT A TIME. THE    *
*      INPUT STREAM IS ANALYZED FOR COMMANDS, KEYWORDS, PARAMETERS,   *
*      AND CONTINUATION CARDS. CONTROL IS RETURNED TO THE MONITOR     *
*      ROUTINE FOR EACH OF THESE CONDITIONS.                          *
*                                                                     *
* ENTRY POINTS                                                        *
*      IEHDSCAN IS THE ONLY ENTRY POINT. IT RECEIVES CONTROL FROM     *
*      THE IEHDASDS ROUTINE.                                          *
*                                                                     *
* INPUT                                                               *
*      A POINTER TO THE WORK AREA IN REGISTER 12.                     *
*                                                                     *
* EXITS                                                               *
*      NORMAL - CONTROL IS RETURNED TO THE IEHDASDS ROUTINE AFTER     *
*        DETECTION OF A COMMAND, A KEYWORD, A PARAMETER, A COMPLETE   *
*        CARD AND AN END OF FILE CONDITION ON THE SYSIN DATA SET.     *
*        NO RETURN CODE IS PASSED.                                    *
*      ERROR - CONTROL IS RETURNED TO THE IEHDASDS ROUTINE FOR        *
*        ERROR CONDITIONS(INVALID SYNTAX).  THE MONITOR INTERPRETS    *
*        THESE CONDITIONS BY SWIRCH SETTINGS AND DETERMINES THE       *
*        NECESSARY MESSAGES.  NO RETURN CODE IS PASSED.               *
*                                                                     *
* EXTERNAL REFERENCES                                                 *
*      NONE                                                           *
*                                                                     *
* TABLES/WORK AREAS                                                   *
*      UPON ENTRY,REGISTER 12 POINTS TO THE WORK AREA, DESCRIBED BY   *
*      THE DSECT IEHDWORK.                                            *
*                                                                     *
* ATTRIBUTES                                                          *
*      SERIALLY REUSABLE,RELOCATABLE                                  *
*                                                                     *
         EJECT
*                                                                     *
*                                                                     *
* REGISTER EQUATE DEFINITIONS                                         *
*                                                                     *
*                                                                     *
         SPACE 1
GR0      EQU   0
GR1      EQU   1
GR2      EQU   2
GR3      EQU   3
GR4      EQU   4
GR5      EQU   5
GR6      EQU   6
GR7      EQU   7
GR8      EQU   8
GR9      EQU   9
GR10     EQU   10
GR11     EQU   11
GR12     EQU   12
GR13     EQU   13
GR14     EQU   14
GR15     EQU   15
SS1VAL   EQU   X'01'                    'SS1' PARM SUPPLIED    @Y30LSFY
         SPACE 2
         USING WORK,GR12
         USING IEHCDSCN,GR11           ESTABLISH ADDRESSABILITY.
         USING FUNCBLK,GR10             ADDRESS TO IEHDBLKS
IEHCDSCN STM   GR14,GR0,K12(GR13)      SAVE REGISTERS.
         STM   GR3,GR12,K32(GR13)      SAVE REGISTERS.
         LR    GR11,GR15               LOAD BASE REGISTER
         B     APARNO                  BRANCH AROUND APAR NO   @ZA04428
         DC    C'IEHDSCAN OZ24160'     LAST APAR FIX THIS MOD  @ZA24160
APARNO   LA    GR7,SCANSAVE            ADDRESS OF SAVE AREA    @ZA04428
         ST    GR7,K8(GR13)            ADDRESS OF NEW AREA TO OLD
         ST    GR13,K4(GR7)            ADDRESS OF OLD AREA TO NEW
         LR    GR13,GR7                SAVE AREA ADDRESS
         L     GR3,READ1               DCB ADDRESS
         USING IHADCB,GR3
         LA    GR4,FILEND              RETURN ADDRESS ON EOF
         ST    GR4,DCBEODAD            SAVE IN DCB
         B     SKIPHOLD                BYPASS POINTER SAVE.     XM3762
         DROP  GR3
         EJECT
*  DETERMINE FIELD TO BE SCANNED BY SWITCH READINGS.                  *
         SPACE 1
* FORMERLY IN THE DASDS ROUTINE, AND HAS BEEN MODIFIED IN THE REPACK
* TO RETURN TO THIS POINT INSTEAD OF EXITING OUT OF DSCAN AND RETURNING
         SPACE 1
SCAN     EQU   *                        REPACK RETURN POINT
         ST    GR4,HOLD4                SAVE POINTER
         ST    GR9,HOLD9                SAVE RETURN POINT
SKIPHOLD EQU   *
         L     GR3,STORGR3             ADDRESS OF COL TO SCAN
         TM    SWITCHRD,ON             FIRST TIME IN SCAN
         BZ    NEWCD                   YES-READ A CARD
         NI    SWITCHRD,GOOD           TURN OFF ERROR SWITCH
         TM    SWITCHRD,BYPASS         BYPASS THIS CARD
         BO    PASCD                   YES-CHECK FOR CONTINUATION
         TM    SWITCHRD,COMD           COMMAND PROCESSED
         BO    PREKEY                  YES-LOOKING FOR KEYWORD
         TM    SWITCHRD,KEY            KEYWORD PROCESSED
         BO    PARAM                   YES-LOOKING FOR PARAMETER
         TM    DELIMIN2,X80            WAS PREVIOUS RUN A TODD
         BZ    CONTA                   NO - CONTINUE
         TM    PARENCTR,BPAREN         ONLY ONE PAREN?
         BM    TOPARM1                 YES- CONTINUE PROCESSING PARAM
         MVI   DELIMIN2,K0             RESET
         MVI   PARENCTR,ZERO           RESET
CONTA    TM    SWITCHRD,PARM           PARAMETER PROCESSED
         BO    KEYWD                   YES-CHECK FOR MORE KEYWORDS
NEWCD    EQU   *
         XC    SWITCHRD(ALL),SWITCHRD  CLEAR BUFFER AND SWITCHES
         SR    GR2,GR2                 CLEAR REGISTER
         BAL   GR9,CDRD                READ A CARD
         CLI   SWITCHRD+COL72,BLANK    IS COLUMN 72 BLANK
         BE    STSCAN                  YES-START SCAN
         OI    COL72LG,SPEC1           NO-SET CONTINUATION SWITCH
         SPACE 1
*  CHECK NAME FIELD.                                                  *
         SPACE 1
STSCAN   EQU   *
         LA    GR2,K1(GR2)             INCREMENT CNT REGISTER
         CLI   K0(GR3),BLANK           IS COLUMN BLANK
         BE    LENGTH                  YES-CHECK LENGTH
         LA    GR3,K1(GR3)             NO-GO TO NEXT COLUMN
         B     STSCAN                  SEARCH THIS COLUMN
LENGTH   EQU   *
         BCTR  GR2,GR0                 DECREMENT BYTE COUNT
         LTR   GR2,GR2                 BYTE COUNT ZERO
         BZ    COMMD                   YES-CHECK COMMAND FIELD
         LA    GR8,K8                  MAXIMUM LENGTH FOR COMMAND
         CR    GR2,GR8                 IS NAME TOO LONG
         BH    ERRO                    YES-SET ERROR SWITCH
         SR    GR2,GR2                 CLEAR BYTE COUNT
         EJECT
*  CHECK COMMAND AND KEYWORD FIELDS.                                  *
         SPACE 1
COMMD    EQU   *
         MVI   SWITCHRD,COMD           SET COMMAND SWITCH.
         BAL   GR9,PASBLANK            CHECK FOR COMMAND.
         ST    GR3,STORGR3             SAVE STARTING ADDR OF FIELD.
FIELD    EQU   *
         LA    GR2,K1(GR2)             INCREASE BYTE COUNT
         CLI   K0(GR3),BLANK           IS THIS COLUMN BLANK
         BE    RETURN                  YES-RETURN TO MONITOR
         LA    GR3,K1(GR3)             NO-GO TO NEXT COLUMN
         B     FIELD                   CHECK THIS COLUMN
PASBLANK EQU   *
         LA    GR3,K1(GR3)             GO TO NEXT COLUMN.
         LA    GR4,SWITCHRD+COL72      OBTAIN ADDR OF LAST COLUMN.
         CLI   K0(GR3),BLANK           IS THIS COLUMN BLANK.
         BNE   K0(K0,GR9)              NO-RETURN TO CALLER.
         CR    GR3,GR4                 IS THIS THE LAST COLUMN.
         BNE   PASBLANK                NO-CHECK NEXT COLUMN.
         B     ERRO                    BRANCH TO ERROR ROUTINE   M4974
PREKEY   EQU   *
         BCTR  GR3,GR0                 BACKSPACE ONE COLUMN.
         BAL   GR9,PASBLANK            SKIP ALL BLANKS.
         ST    GR3,STORGR3             SAVE STARTING ADDR OF FIELD.
KEYWD    EQU   *
         MVI   COMCD,ZERO              CLEAR CONTINUATION SWITCH.
         MVI   SWITCHRD,KEY            SET KEYWORD SWITCH.
         CLI   K0(GR3),BLANK           IS FIRST COLUMN BLANK.
         BE    CONTIN                  YES-CHECK FOR A CONTINUATION.
         LA    GR4,SWITCHRD+COL72      ADR OF LAST COL         @ZA01200
         CR    GR3,GR4                 COL 72?                 @ZA01200
         BE    CONTIN                  YES. CONTINUATION?      @ZA01200
         LA    GR4,K9                  NUMBER OF BYTES SCANNING.
         MVC   DEC(K10),TAB            RESET NUMBER BYTES.
         TRT   K0(K9,GR3),TAB          CHECK KEYWORD FIELD.
         LTR   GR2,GR2                 ALL BYTES GOOD.
         BZ    ERR1                    YES-INVALID KEYWORD.
         CLC   K0(SSILN,GR3),SSICODE    SSI PARAM ?            @Y30LSFY
         BE    FINISH                   YES, CONTINUE          @Y30LSFY
         CLI   K0(GR1),EQUAL           IS CHARACTER AN EQUAL.
         BNE   ERR2                    NO-INVALID KEYWORD.
FINISH   EQU   *
         LR    GR4,GR1                 SAVE COLUMN ADDRESS
         SR    GR1,GR3                 LENGTH OBTAINED.
         LR    GR2,GR1                 PUT IN COUNT REGISTER
         LR    GR3,GR4                 ADDRESS OF LAST COL SCANNED
         B     RETURN                  RETURN TO MONITOR
         EJECT
*  CHECK PARAMETER FIELD FOR PROPER KEYWORD.                          *
         SPACE 1
PARAM    EQU   *
         MVI   SWITCHRD,PARM           SET SW FOR PARAMETER
         TM    DELIMIN,TODDS           IS PARM FOR TODD
         BO    TOPARM                  YES-CHECK FOR TODD PARM
         XC    DEC(K10),DEC            TURN ON NUMBER BYTES
         TM    DELIMIN,OWNERIS         IS PARM FOR OWNERID
         BO    OWPARM                  YES-CHECK FOR OWNERID PARM
         TM    DELIMIN,NEWVOLID        IS PARM FOR NEWVOLID.   @ZA07400
         BO    NUVOL                   YES - CHECK FOR NEWVOLID PARM.
         TRT   K0(K11,GR3),TAB         CHECK PARAMETER BYTES
         LTR   GR2,GR2                 ALL BYTES GOOD
         LA    GR4,K11                 SAVE BYTE COUNT
         BZ    ERR1                    YES-INVALID PARAMETER
         CLI   K0(GR1),COMMA           IS LAST BYTE CHECKED A COMMA
         BNE   ERR2                    NO-INVALID PARAMETER
ENDCHK   EQU   *
         B     FINISH                  RETURN TO MONITOR
         EJECT
TOPARM   EQU   *
         MVI   PARENCTR,ZERO           CLEAR PARENTHESIS SW
         CLI   K0(GR3),LPAREN         IS FIRST BYTE LEFT PARENTHESIS
         BNE   TOPARM1                 NO-SCAN PARAMETER
         OI    PARENCTR,WAITING        YES-SET SW FOR LEFT PAREN
         LA    GR3,K1(GR3)             GO TO NEXT COLUMN
         ST    GR3,STORGR3             UPDATE POINTER
TOPARM1  EQU   *
         XC    DEC(K10),DEC            TURN ON NUMBER BYTES
         SR    GR2,GR2                 CLEAR REG
         MVI   DELIMIN2,X80            SET TODD AS OP
         MVI   TABSL,ZERO              TURN ON SLASH BYTE
         TRT   K0(K9,GR3),TAB          CHECK PARAMETER
         OI    TABSL,ONE               RESET SLASH BYTE
         LR    GR4,GR1                 YES-SAVE COLUMN ADDRESS.
         SR    GR4,GR3                 LENGTH BETWEEN COMMAS
         LA    GR8,K1                  MINIMUM LENGTH FOR TODD PARM
         CR    GR4,GR8                 IS LENGTH LESS THAN ONE OR EQUAL
         BL    ERR1                    YES - BRANCH LT ONE
         LTR   GR2,GR2                 ARE ALL BYTES TESTED GOOD
         BZ    ERR1                    YES-INVALID PARAMETER
         CLI   K0(GR1),COMMA           IS LAST BYTE SCANNED A COMMA
         BE    FINISH01                YES-CHECK PAREN COUNTER
         CLI   K0(GR1),RPAREN          IS LAST BYTE RIGHT PAREN.
         BE    PARNCHK                 SET PAREN SWITCH
         CLI   K0(GR1),BLANK           IS IT A BLANK
         BNE   ERR2                    NO-INVALID PARAMETER
         B     FINISH02                RETURN
PARNCHK  EQU   *
         OI    PARENCTR,ONE            YES-SET SW FOR RIGHT PAREN
PARNCHK1 EQU   *
         TM    PARENCTR,WAITING        PARENTHISIS EXPECTED?
         BZ    ERR1                    NO - ERROR
         LR    GR2,GR1                 LOAD ADDR OF LAST COL SCANNED
         SR    GR2,GR3                 GET COUNT
         LA    GR8,K1                  LOWER LIMIT
         CR    GR2,GR8                 TOO FEW?
         BNH   ERR1                    YES - ERROR
         CLI   K1(GR1),COMMA           COMMA FOLLOWING )
         BNE   KOMA                    NO - CHECK BLANK
         LA    GR3,K1(GR1)             RESET GR3
         B     RETURN                  RETURN
         EJECT
FINISH01 EQU   *
         TM    PARENCTR,WAITING        PARENTHISIS EXPECTED
         BO    FINISH                  YES - NORMAL COMPLETION
         MVI   DELIMIN2,K0             RESET TODD SW
         B     FINISH                  CONTINUE
FINISH02 EQU   *
         TM    PARENCTR,WAITING        PARENTHISIS EXPECTED
         BO    ERR1                    YES - BLANK MEANS ERROR
         OI    SWITCHRD,BYPASS         BYPASS REMAINDER OF CARD XM3741
         MVI   DELIMIN2,K0             RESET TODD SW
         B     FINISH                  CONTINUE
KOMA     EQU   *
         LR    GR3,GR1                 UPDATE POINTER
         CLI   K1(GR1),BLANK           IS IT A BLANK?
         BE    RETURN                  YES - GOOD RETURN
         B     ERR1                    NO - ERROR
         EJECT
OWPARM   EQU   *
         MVI   TABSL,ZERO              TURN ON SLASH BYTE.
         MVI   TABPR,ZERO              TURN ON PERIOD BYTE
OWPARM1  EQU   *
         NI    TABHY,ZERO              TURN ON HYPHEN BYTE
         TRT   K0(K11,GR3),TAB         SCAN THE PARAMETER
         OI    TABSL,ONE               RESET SLASH BYTE.
         OI    TABHY,ONE               RESET HYPHEN BYTE
         OI    TABPR,ONE               RESET PERIOD BYTE
         LTR   GR2,GR2                 ARE ALL BYTES GOOD
         LA    GR4,K11                 SAVE BYTE COUNT
         BZ    ERR1                    YES-INVALID PARM LENGTH
         CLI   K0(GR1),COMMA           IS BYTE A COMMA
         BNE   ERR2                    NO-INVALID PARM
         B     ENDCHK                  RETURN TO MONITOR
NUVOL    EQU   *
         CLI   K0(GR3),PRIME           IS THE FIRST CHAR A PRIME.
         BNE   OWPARM1                 NO - GO TO NORMAL PARM TEST.
         LA    GR3,K1(GR3)             YES - CHECK FOR SPECIAL PARM.
         OI    PARENCTR,WAITING        SET LEFT PRIME SWITCH.
         LR    GR1,GR3                 SAVE BEGINNING ADDR OF FIELD.
         LA    GR2,K7                  MAXIMUM LENGTH OF FIELD.
NUVOL1   EQU   *
         CLI   K0(GR1),PRIME           IS THIS CHARACTER A PRIME.
         BE    PRIMECHK                YES - CHECK LENGTH OF PARAMETER.
         LA    GR1,K1(GR1)             NO - GO TO NEXT COLUMN.
         BCT   GR2,NUVOL1              DECREMENT FIELD LENGTH.
         B     ERR2                    ERROR - PARM FIELD TOO LONG.
PRIMECHK EQU   *
         LR    GR4,GR1                 SAVE FIELD ADDRESS.
         SR    GR1,GR3                 OBTAIN LENGTH OF FIELD.
         BCTR  GR1,GR0                 DECREMENT BYTE COUNT.
         LTR   GR1,GR1                 IS BYTE COUNT ZERO.
         LR    GR1,GR4                 RESTORE FIELD ADDRESS.
         BZ    ERR2                    YES - INVALID LENGTH.
         B     FINISH                  NO - RETURN TO MONITOR.
         EJECT
*  DETERMINE THE CONTINUATION CARD STATUS.                            *
         SPACE 1
CONTIN   EQU   *
         TM    COL72LG,SPEC1           IS COLUMN 72 BLANK
         BZ    FINCD                   YES-CARD COMPLETED
         BCTR  GR3,GR0                 GO BACK ONE COLUMN
         CLI   K0(GR3),COMMA           NO-IS THERE A COMMA
         BNE   COMMTCD                 NO-COMMENT CONTINUATION
         MVI   COMCD,WAITING           SET SW FOR CONTROL CARD
COMMTCD  EQU   *
         BAL   GR9,CDRD                GET A CARD
         MVI   COL72LG,ZERO            RESET SWITCH              A58684
         CLC   K0(K15,GR3),CLEAR       ARE THE FIRST 15 COLS BLANK
         LA    GR4,K15                 SAVE BYTE COUNT
         BNE   ERR1                    NO-INVALID CONTINUATION CARD
         CLI   SWITCHRD+COL72,BLANK    IS COLUMN 72 BLANK
         BE    CONT1                   YES-CONTINUE CHECK
         OI    COL72LG,SPEC1           NO-TURN ON CONTINUATION SW
CONT1    EQU   *
         LA    GR3,K15(GR3)            GO TO FIRST VALID COLUMN
         ST    GR3,STORGR3           SAVE ADDRESS OF LAST COL SCANNED.
         CLI   K0(GR3),BLANK           IS THIS COLUMN BLANK
         BE    ERRO                    YES-INVALID CONTINUATION CARD
         TM    COMCD,WAITING           IS THIS A CONTINUED CONTROL CD
         BO    KEYWD                   YES-CHECK FOR KEYWORD
         B     PASCD1                   NO - BYPASS IT
         SPACE 1
*  RETURNING CONTROL TO MONITOR WITH PROPER SWITCH SETTINGS.          *
         SPACE 1
ERR1     EQU   *
         AR    GR3,GR4                 ADD BYTES SCANNED.
         BCTR  GR3,GR0                 POINT TO LAST COL SCANNED.
         B     ERRO                    SET ERROR SWITCH
ERR2     EQU   *
         LR    GR4,GR1                 SAVE COLUMN ADDRESS.
         SR    GR1,GR3                 OBTAIN BYTE COUNT.
         LTR   GR1,GR1                 IS BYTE COUNT ZERO.
         BZ    ERRO                    YES-VALID ERROR
         LR    GR2,GR1                 UPDATE COUNT
         LR    GR3,GR4                 ADDRESS OF BYTES SCANNED
         CLI   K0(GR4),BLANK           IS LAST COL SCANNED BLANK.
         BE    RETURN40                PROCESS FOR BLANK
ERRO     EQU   *
         OI    SWITCHRD,ERROR          SET ERROR SWITCH
         B     RETURN                  RETURN TO MONITOR.
         EJECT
FINCD    EQU   *
         LA    GR4,K1                  BYTE COUNT SCANNED        M5593
         BCTR  GR3,K0                  DECREMENT PTR
         CLI   K0(GR3),COMMA           COMMA DELIMETER
         BE    ERR1                    YES - ERROR NO CONTINUATION
SETBY    EQU   *
         MVI   SWITCHRD,BYPASS         SET FINISHED CARD SWITCH.
         B     RETURN                  RETURN TO MONITOR.
FILEND   EQU   *
         MVI   SWITCHRD,EOF            SET END OF FILE INDICATOR M6170
         TM    COL72LG,SPEC1           IS ANOTHER CARD NEEDED.
         BO    ERRO                    YES-NO MORE AVAILABLE.
RETURN   EQU   *
         MVI   DELIMIN,ZERO            CLEAR PARAMETER SWITCH.
         L     GR1,STORGR3             STARTING ADDR OF FIELD.
         LA    GR3,K1(GR3)             GO TO NEXT COLUMN.
         ST    GR3,STORGR3             SAVE ADDR OF THIS COLUMN.
* GO TO THE REPACK AREA...CODE THAT CAME OUT OF DASDS
         B     REPAC                    DO FORMER DASDS CODE
REPACX   EQU   *                        EXIT FROM THE DASDS CODE
*
         L     GR13,SCANSAVE+K4        ADDR OF MONITOR SAVE AREA.
         LM    GR14,GR0,K12(GR13)      RESTORE THE REGISTERS.
         LM    GR3,GR12,K32(GR13)      RESTORE THE REGISTERS.
         BR    GR14                    RETURN TO MONITOR.
         SPACE 2
RETURN40 EQU   *
         BCTR  GR3,K0                  POINT TO BLANK ON EXIT
         B     RETURN                  RETURN
         SPACE 2
CDRD     EQU   *
         L     GR1,READ1               ADDRESS OF SYSIN DCB
         LA    GR0,CARDBUFF            ADDRESS OF INPUT BUFFER
         GET   (GR1),(GR0)             READ IN A CARD
         MVC   MSGWTR+K1(K80),CARDBUFF PUT CARD IN PRINTER BUFFER
         LINK  EP=IEHDPRNT             PRINT CARD
         LA    GR3,CARDBUFF            ADDRESS OF FIRST COLUMN
         BR    GR9                     RETURN TO CALLER
         SPACE 1
PASCD    EQU   *
         TM    COL72LG,SPEC1           IS A CONTINUATION CARD NEEDED
         BZ    NEWCD                    NO - BYPASS THIS CARD
         BAL   GR9,CDRD                GET A NEW CARD
         CLI   SWITCHRD+COL72,BLANK    IS A CONTINUATION CARD NEEDED.
         BE    NEWCD                   NO - PROCESS A NEW CARD.
         OI    COL72LG,SPEC1           YES - SET CONTINUATION SW.
         B     PASCD                   OBTAIN CONTINUATION CARD.
PASCD1   EQU   *
         TM    COL72LG,SPEC1            CONTINUATION
         BZ    SETBY                    NO - BYPASS SW
PASCD1A  EQU   *
         BAL   GR9,CDRD                 READ CONTINUATION CARD
         CLI   SWITCHRD+COL72,BLANK     CONTINUATION
         BNE   PASCD1A                  YES - GET NEXT CD
         B     SETBY                    SET BYPASS SW
         EJECT
* THE FOLLOWING INSTRUCTIONS ARE TAKEN FROM THE IEHDASDS MODULE
* AND REPACKED INTO THIS MODULE, WITH SOME MINOR CHANGES.
* ALL LABELS WERE TAKEN INTACT, AND IN SOME CASES THE BRANCHES
* TO A LABEL WAS LEFT WITH THE SAME NAME, AND A EXIT TYPE OF
* ROUTINE CREATED. THIS WAS TO FACILITATE DEBUGGING, BY
* MAINTAINING COMPATABILITY WITH THAT CODE THAT WAS BEING
* REPACKED.
REPAC    EQU   *                        START OF REPACK AREA
         L     GR4,HOLD4                RESTORE POINTER
         L     GR9,HOLD9                RESTORE RETURN ADDRESS
         TM    SWITCHRD,ERROR          WAS THERE AN ERROR.
         BO    MSGPRT                  YES,GO GIVE A MESSAGE.
         SPACE 1
         TM    SWITCHRD,COMD           IS THIS A COMMAND.
         BO    OPRLUP                  YES-GO TEST VALIDITY AND PROCESS
         SPACE 1
         TM    SWITCHRD,KEY            IS THIS A KEYWORD.
         BO    KEYLUP                  YES-GO TEST VALIDITY AND PROCESS
         SPACE
         TM    SWITCHRD,EOF            WAS AN EOF READ.
         BO    CHECK                   YES-GO SEE IF FINISHED.
         SPACE
         TM    SWITCHRD,PARM           THIS A PARAMETER.
         BZ    SCAN3                   NO--GO MAKE MORE TESTS.
         TM    SW1,DD1OK               MULTIPLE PARMS ALLOWED.
         BCR   K1,GR9                  YES-PROCESS PARAMETER.
         TM    SW1,PARMXY              NO--ANY PREVIOUS PARMS.
         BO    INVALP1                 YES-THEN THIS PARAMETER INVALID.
         OI    SW1,PARMXY              REMEMBER THIS PARAMETER.
         BR    GR9                     PROCESS THIS PARAMETER.
         SPACE
SCAN3    EQU   *
         TM    SWITCHRD,BYPASS         IS THIS CARD FINISHED.
         BZ    SCAN                    NO--CONTINUE SCAN//THIS CARD.
         SPACE
         B     SCAN1                    GO TO START PROCESSING
         SPACE
SCANTBL  STC   LENGT2,SAVLGTH          STORE LENGTH.
         CLI   SAVLGTH,8               IS LENGTH EIGHT OR LESS.
         BH    MSGPRT                  YES-CONTROL STATEMENT ERROR.
         LA    GR4,12                  TABLE INCREMENTING VALUE.
         MVI   WURK,C' '               CLEAR SEARCH AREA.
         MVC   WURK+1(7),WURK          CLEAR REMAINING ARGUMENT AREA.
         BCTR  LENGT2,0                DECREMENT LENGTH FOR EXECUTE.
         EX    LENGT2,OPRLUP3           MOVE PARAMETER TO STORGE AREA
OPRCMP   CLC   WURK(8),0(GR3)          CHK IF SEARCH ARGUMENT IN TABLE.
         BNE   OPRLUP2                 NO--CONTINUE SCAN OF TABLE.
         LA    GR3,8(GR3)              POINT TO BRANCH ADDRESS.
         NI    SW1,X'FF'-COMMAND-SPEC1   RESET INDICATORS.
         BR    GR3                     ENTER PROPER ROUTINE.
OPRLUP2  BXLE  GR3,GR4,OPRCMP          LOOP TO CONTINUE SEARCH.
         TM    SW1,COMMAND             ERROR WHILE LOOKING FOR COMMAND.
         BZ    INVALKEY                YES--INVALID KEYWORD.
         NI    SW1,X'FF'-COMMAND       RESET COMMAND INDICATOR.
         B     INVALCOM                MUST BE INVALID COMMAND.
OPRLUP3  MVC   WURK(1),0(SCANADR)      MOVE IN ARGUMENT.
*   KEYWORD LOOKUP ROUTINE.
         SPACE 1
KEYLUP   LA    GR3,KEYTAB              START OF KEYWORD TABLE.
         LA    GR5,KEYEND              END OF VALID KEYWORDS.
         NI    SW1,X'FF'-DD1OK-PARMXY  RESET PARM SWITCHES.
         B     SCANTBL                 GO FIND THIS KEYWORD.
* SET THE BRANCH TABLE ADDRESSES FOR DASDS
CHECK    TM    SW1,TEXTIN               IPL TEXT?
         BO    NOIPLMSG                 YES - ERR MESSAGE
         MVI   GOVAL,GOCHECK            SET BRANCH TO CHECK
         B     REPACX                   EXIT DSCAN
SCAN1    MVI   GOVAL,GOSCAN1            SET BRANCH TO SCAN1
         B     REPACX                   EXIT DSCAN
OPRLUP   MVI   GOVAL,GOOPRL             SET BRANCH TO OPRLUP
         B     REPACX                   EXIT DSCAN
GETCOPY  MVI   GOVAL,GOCOPY             SET BRANCH TO GETCOPY
         B     REPACX                   EXIT DSCAN
MSGWRT2  MVI   GOVAL,GOWRT2             SET BRANCH TO MSGWRT2
         B     REPACX                   EXIT DSCAN
         EJECT
***********************************************************************
*                                                                     *
*   THE FOLLOWING TABLE IS A LIST OF THE REQUIRED KEYWORDS            *
*     FOR EACH FUNCTION.                                              *
*                                                                     *
***********************************************************************
KCODES   EQU   *
         DC    AL1(0)                  DUMMY
         DC    AL1(FROMDD+TODD)        DUMP
         DC    AL1(FROMDD+TODD)        RESTORE
         DC    AL1(TRACK+TODD)         GETALT
         DC    AL1(NEWVOLID+TODD)      LABEL
         DC    AL1(TODD+EXTENT+VTOC)   ANALYZE
         DC    AL1(TODD+EXTENT+VTOC)   FORMAT
         DC    AL1(FROMDD+TODD)        IPLPROG
         DC    AL1(0)
         SPACE 3
***********************************************************************
*                                                                     *
*   THE FOLLOWING TABLE INDICATES THE BIT SWITCH SETTINGS FOR THE     *
*     -SEQSW-. ALL THE VARIOUS KEYWORDS ARE LISTED WITH THE           *
*     SUPPORTED FUNCTIONS.                                            *
*                                                                     *
***********************************************************************
****                                                               ****
* (BITS) *   0    .  1 .   2    .  3  .  4  .   5   .   6    .  7     *
* DUMP   * FROMDD .TODD.CPYVOLID.BEGIN. END .       .        .        *
*        *        .    .        .     .     .       .        .        *
* RESTORE* FROMDD .TODD.CPYVOLID.     .     .       .        .        *
*        *        .    .        .     .     .       .        .        *
* GETALT * TRACK  .TODD.        .     .     .       .        .        *
*        *        .    .        .     .     .       .        .        *
* LABEL  *NEWVOLID.TODD.        .     .     .OWNERID.        .        *
*        *        .    .        .     .     .       .        .        *
* ANALYZE*NEWVOLID.TODD.EXTENT  .VTOC .IPLDD.OWNERID.FLAGTEST.PASSES  *
*        *        .    .        .     .     .       .        .        *
* FORMAT *NEWVOLID.TODD.EXTENT  .VTOC .IPLDD.OWNERID.        .        *
*        *        .    .        .     .     .       .        .        *
* IPLPROG* FROMDD .TODD.        .     .     .       .        .        *
*        *        .    .        .     .     .       .        .        *
***********************************************************************
         EJECT
*   HANDLE ALL KEYWORDS HERE.
FROMANAL TM    SEQSW,FROMDD            FROMDD SPECIFIED BEFORE @ZA04428
         BO    INVALKEY                YES WRTE IEH802I TERM   @ZA04428
         CLI   FUNCSW,IPLPROG          THIS IPLPROG FUNCTION?  @ZA04428
         BE    FROMAN                  YES- BRANCH
         CLI   FUNCSW,RESTORE          IS THIS DUMP OR RESTORE?
         BH    INVALKEY                NO--INVALID KEYWORD.
FROMAN   OI    SEQSW,FROMDD            INDICATE FROMDD DKEYWORD.
         LA    GR4,DDNAME1             RETURN TO SCAN FOR PARAMETER.
         B     GETPARM1                GO PROCESS THE PARAMETER.
         SPACE
TODDANAL TM    SEQSW,TODD              TODD SPECIFIED BEFORE   @ZA04428
         BO    INVALKEY                YES WRTE IEH802I TERM   @ZA04428
         OI    SEQSW,TODD              SET TODD KEY PRESENT.   @ZA04428
         OI    DELIMIN,X'01'           TELL SCAN '/' IS OK IN PARAMETER
         OI    SW1,DD1OK               INDICATE MULTIPLE PARMS OK.
         LA    GR4,DDNAME2             ADDRESS TO STORE TODD DDNAME.
         SPACE
GETPARM1 LA    GR3,8                   MAXIMUM PARAMETER LENGTH.
GETPARM  BAL   GR9,SCAN                RETURN TO SCAN FOR PARAMETER.
SLSHSWT  NI    DELIMIN2,X'FE'          RESET SLASH SWITCH.      SA53297
DDNFIND  EQU   *                                                 A50288
         L     GR7,CVTPTR              ADDRESS OF CVT.           XM3762
         USING CVT,GR7                                           XM3762
         L     GR15,CVTTCBP            TCB DOUBLE WORD.          A50288
         L     GR15,4(GR15)            PICK UP TCB ADDRESS.      A50288
         L     GR15,12(GR15)           PICK UP TIOT ADDRESS.     A50288
         LA    GR15,24(GR15)           PICK UP DD ENTRY ADDRESS. A50288
         SR    GR3,GR3                  ZERO WORK REG            A50288
FINDDN   IC    GR3,0(GR15)             LOAD DD ENTRY LENGTH.     A50288
         LTR   GR3,GR3                 TEST FOR END OF TIOT.     A50288
         BZ    LABANAL                 END OF TABLE/NO DDNAME.   A50288
         BCTR  GR2,0                    DECRE LEN FOR EXECUTE    A50288
         EX    GR2,CHKTODD              COMPARE TODD DDNAME      A50288
         LA    GR2,1(GR2)               RESET LENGTH             A50288
         LA    GR15,0(GR3,GR15)         SETUP FOR NEXT ENTRY     A50288
         BNE   FINDDN                   NO MATCH - LOOP BACK     A50288
         B     FNDDN                    DDNAME FOUND IN TIOT     A50288
LABANAL  EQU   *                                                 A50288
         CLI   FUNCSW,ANALYSIS          ANALYZE FUNCTION         A50288
         BE    TSTLNG                   YES - GO TEST LENGTH     A50288
         CLI   FUNCSW,LABEL             LABEL FUNCTION           A50288
         BNE   FNDDN                    NO - INVALID PARAM     @ZA24160
TSTLNG   EQU   *                                                 A50288
         CH    GR2,FIVE                 TODD FRO 2321            A50288
         BE    TSTCHAR                  YES, OFFLINE 2321        A50288
         CH    GR2,THREE                TODD FOR DASD            A50288
         BNE   INVALP1                  NO                       A50288
TSTCHAR  EQU   *                                                 A50288
         TM    0(GR1),X'F0'             1ST CHAR NUMERIC         A50288
         BO    SPECIALA                 YES                      A50288
         CLI   0(GR1),C'F'              1ST CHAR ALPHA F         A50288
         BNH   SPECIALA                 IF CHANNEL A-F, BRCH     A50288
         B     INVALP1                  BAD TODD PARAM           A50288
FNDDN    EQU   *                                                 A50288
         LA    GR3,8                    RESET MAX PARAM LENGTH   A50288
         TM    SW1,SPEC1               PREVIOUS UNLABELED REQUEST.
         BO    INVALP1                 YES-INVALID PARAMETER.
         CLR   GR2,GR3                 IS THE LENGTH VALID.
         BCTR  GR2,0                   DECREMENT LENGTH BY ONE.
         BH    INVALPAR                YES-INVALID PARAMETER.
         CLI   0(GR4),BLANK            YES-ANY PROCESSED PRIOR.
         BNE   GETCOPY                 YES-GO BUILD A COPY BLOCK.
MOVEP    EX    GR2,PMOVE               NO--MOVE DDNAME TO FUNCTION BLK.
         B     SCAN3                   CONTINUE SCAN OF CARD.
*                                        PARAMETERS OR OTHER KEYWORDS.
         SPACE
SPECIAL  EQU   *
         CLI   FUNCSW,ANALYSIS         THIS AN ANALYZE FUNCTION.
         BE    SPECIALA                YES-VALID PARAMETER.        O122
         CLI   FUNCSW,LABEL            THIS A LABEL FUNCTION.      O122
         BNE   INVALP1                 NO--INVALID PARAMETER.
SPECIALA EQU   *                                                   O122
         CLI   DDNAME2,BLANK           ANY DDNAMES PROCESSED PRIOR.
         BNE   INVALP1                 YES-INVALID PARAMETER.
         STC   GR2,WURK                SAVE THE LENGTH.
         BCTR  GR2,0                   DECREMENT FOR EXECUTE.
         CLI   WURK,3                   ACTUAL LENGTH EQUAL 3.
         BE    ALLSET                  PARAMETER IS OKAY.
         CLI   3(GR1),C'/'             FOURTH BYTE A SLASH.
         BNE   INVALPAR                 NO--MUT BE INVALID PARAMETE@.
         CLI   WURK,5                   ACTUAL LENGTH EQUAL 5.
         BNE   INVALPAR                NO--MUST BE INVALID PARAMETE@.
         TM    4(GR1),X'F0'            VALID BIN NO.
         BZ    INVALPAR                NO--INVALID PARAMETER.
ALLSET   EQU   *
         TM    SW1,SPEC1               PREVIOUS UNLABELED REQUEST.
         BO    GETCOPY                 YES-GO BUILD A COPY BLOCK.
         OI    SW1,SPEC1               NO--GO INDICATE OFF-LINE REQUEST
ALLSET1  LA    GR4,1(GR4)              PARAMETER MOVE TO ADDRESS.
         B     MOVEP                   GO STORE THE PARAMETER.
OLDLANAL CLI   FUNCSW,RESTORE          IS THIS DUMP OR RESTORE.
         BH    INVALKEY                NO--INVALID KEYWORD.
         BAL   GR9,SCAN                GO SCAN FOR PARAMETER.
         CLC   0(2,GR1),NO             IS PARAMETER A 'NO'.
         BE    SCAN3                   YES-CONTINUE SCAN OF CARD.
         CLC   0(3,GR1),YES            IS PARAMETER A YES.
         BNE   INVALP1                 NO--MUST BE INVALID PARAMETER.
         OI    SEQSW,CPYVOLID          INDICATE MUST USE NEW SERIAL NO.
         B     SCAN3                   CONTINUE SCAN OF CARD.
         SPACE
NEWLANAL CLI   FUNCSW,LABEL            THIS FORMAT/ANALYZE/LABEL.
         BL    INVALKEY                NO--INVALID KEYWORD.
         OI    SEQSW,NEWVOLID          INDICATE NEWVOLID KEYWORD.
         OI    DELIMIN,NEWVOLID         ''  NEWVOLID KEYWORD   @ZA07400
         BAL   GR9,SCAN                RETURN TO SCAN FOR PARAMETERS
         MVI   SERNO,BLANK             BLANK 1ST BYTE.
         MVC   SERNO+1(5),SERNO        INSURE PADDED WITH BLANKS.
         LA    GR4,SERNO               ADDRESS TO MOVE IN SERIAL NO.
         LA    GR3,6                   LENGTH COMPARE CONSTANT.
         CLR   GR2,GR3                 IS THE LENGTH VALID.
         BCTR  GR2,0                   DECREMENT FOR EXECUTE.
         BH    INVALPAR                NO--INVALID LENGTH.
MOVEP1   EX    GR2,PMOVE               MOVE PARAMETER TO FUNCTION BLOCK
         B     SCAN3                   CONTINUE SCAN OF CARD.
         SPACE
VTOCANAL CLI   FUNCSW,ANALYSIS         IS THIS FORMAT OR ANALYZE.
         BL    INVALKEY                NO--INVALID KEYWORD.
         OI    SEQSW,VTOC              INDICATE VTOC KEYWORD.
         LA    GR4,FVTOCPTR+4          ADDRESS TO STORE PARAMETER.
         LA    GR3,5                   COMPARE CONSTANT.
VTOC1    BAL   GR9,SCAN                RETURN TO SCAN FOR PARAMETER.
         NI    DELIMIN,X'FD'       TURN OFF .- SWITCH            A27508
         CLR   GR2,GR3                 IS THE LENGTH VALID.
         BCTR  GR2,0                   DECREMENT FOR EXECUTE.
         BH    INVALPAR                NO--INVALID LENGTH.
         CLI   OWNID+9,BLANK           IS THIS AN OWNERID REQUEST.
         BE    VTOC1A                  YES-BYPASS DIGIT TEST.
         BAL   GR14,TESTDEC            GO TEST FOR ALL DECIMAL DIGITS.
VTOC1A   SR    GR4,GR2                 SUBTRACT LENGTH FOR RIGHT ADJUST
         B     MOVEP1                  PROCESS PARM//CONTINUE SCAN.
         SPACE
EXTNANAL CLI   FUNCSW,ANALYSIS         IS THIS FORMAT OR ANALYZE
         BL    INVALKEY                NO--INVALID KEYWORD.
         OI    SEQSW,EXTENT            INDICATE EXTENT KEYWORD
         LA    GR4,FEXTENT+4           ADDRESS TO STORE PARAMETER.
         LA    GR3,5                   LENGTH COMPARE CONSTANT.
         B     VTOC1                   GO PROCESS THE PARAMETER.
         SPACE
FLAGANAL CLI   FUNCSW,ANALYSIS         IS THIS AN ANALYSIS FUNCTION.
         BNE   INVALKEY                NO--INVALID KEYWORD.
         BAL   GR9,SCAN                RETURN TO SCAN FOR PARAMETER.
         CH    GR2,THREE               IS THE LENGTH VALID.
         BH    INVALP1                 NO--MUST BE INVALID PARAMETER.
         CLC   0(3,GR1),YES            IS PARAMETER A 'YES'.
         BE    SCAN3                   YES-CONTINUE SCAN OF CARD.
         CLC   0(2,GR1),NO             IS PARAMETER A 'NO'.
         BNE   INVALP1                 NO--MUST BE INVALID PARAMETER.
         OI    SEQSW,FLAGTEST          YES-SET INDICATOR/NO FLAGTEST.
         B     SCAN3                   CONTINUE SCAN OF CARD.
SS1CODE  EQU   *                                               @Y30LSFY
         OI    SEQSW+K1,SS1VAL          INDIC SS1 PARM SUPPLIED@Y30LSFY
         CLI   FUNCSW,ANALYSIS          ANALYSIS SWITCH        @Y30LSFY
         BNE   INVALKEY                 NO, EXIT WITH ERROR    @Y30LSFY
         L     GR3,STORGR3              GET LAST COLUMN SCANNED@Y30LSFY
         BCTR  GR3,GR0                  BACK UP ONE COLUMN     @Y30LSFY
         CLI   K0(GR3),BLANK            IS COLUMN BLANK        @Y30LSFY
         BE    CONTIN                   YES-CHECK FOR CONT.    @Y30LSFY
         L     GR3,STORGR3              LOAD NEXT KEYWORD ADDR @Y30LSFY
         B     KEYWD                    CONTINUE SCAN          @Y30LSFY
         SPACE
PASSANAL CLI   FUNCSW,ANALYSIS         IS THIS AN ANALYSIS FUNCTION.
         BNE   INVALKEY                NO--INVALID KEYWORD.
         OI    SEQSW,PASSES            INDICATE PASSES KEYWORD.
         BAL   GR9,SCAN                RETURN TO SCAN FOR PARAMETER.
         CH    GR2,THREE               IS THE PARAMETER LENGTH VALID.
         BCTR  GR2,0                   DECREMENT FOR EXECUTE.
         BH    INVALPAR                NO--INVALID PARAMETER.
         BAL   GR14,TESTDEC            GO TEST FOR ALL DECIMAL DIGITS.
         XC    WURK(8),WURK            CLEAR WORK SLOT.
         LA    GR4,WURK+7              ADDREES TO MOVE IN PARAMETER.
         SR    GR4,GR2                 SET ADDRESS FOR RIGHT ADJUST.
         EX    GR2,PMOVE               MOVE PARAMETER TO WORK SLOT.
         PACK  WURK(8),WURK+4(4)       REMOVE THE ZONES.
         CVB   GR4,WURK                CHANGE TO BINARY.
         CH    GR4,TWO56               IS COUNT MORE THAN 255.
         BNL   INVALPAR                YES-INVALID PARAMETER.
         STH   GR4,PASSCNT             NO--STORE IN FUNCTION BLOCK.
         STH   GR4,COUNT               ALSO SET CURRENT COUNT.
         B     SCAN3                   CONTINUE SCAN OF CARD.
         SPACE
IPLDANAL CLI   FUNCSW,ANALYSIS         IS THIS ANALYZE OR FORMAT.
         BL    INVALKEY                NO--INVALID KEYWORD.
         OI    SEQSW,IPLDD             INDICATE IPLDD KEYWORD.
         MVC   WORKD8(8),DDNAME2       SAVE TODD PARAMETER.      A32162
         LA    GR4,DDNAME1             ADDRESS TO STORE IPLDD DDNAME.
         B     GETPARM1                GO PROCESS THE PARAMETER.
         SPACE
         SPACE
BEGNANAL CLI   FUNCSW,DUMP             THIS A DUMP/REST FUNCT  @ZM42083
         BNE   INVALKEY                NO--INVALID KEYWORD.
         OI    SEQSW,BEGIN             INDICATE BEGIN KEYWORD SPECIFIED
         LA    GR5,CCHHBEG             PARAMETER TARGET ADDRESS.
         B     PROCTRAK                GO PROCESS THE PARAMETER.
         SPACE
ENDDANAL CLI   FUNCSW,DUMP             THIS A DUMP/REST FUNCT  @ZM42083
         BNE   INVALKEY                NO--INVALID KEYWORD.
         OI    SEQSW,END               INDICATE END ADDRESS KEYWORD
         LA    GR5,CCHHEND             PARAMETER TARGET ADDRESS.
         B     PROCTRAK                GO PROCESS THE PARAMETER.
         SPACE
OWNRANAL CLI   FUNCSW,LABEL            THIS FORMAT/ANALYZE/LABEL.
         BL    INVALKEY                NO--INVALID KEYWORD.
         OI    SEQSW,OWNERID           INDICATE OWNER KEYWORD SPEC.
         LA    GR3,10                  LENGTH COMPARE CONSTANT.
         OI    DELIMIN,X'02'       TELL SCAN THAT '.' AND '-' OK A27508
         MVI   OWNID,BLANK             BLANK FIRST BYTE.
         MVC   OWNID+1(9),OWNID        INSURE PADDED WITH BLANKS.
         LA    GR4,OWNID+9             ADDRESS TO STORE PARAMETER-
*                                        RIGHT ADJUSTED.
         B     VTOC1                   GO PROCESS PARAMETER.
         SPACE
TRACANAL CLI   FUNCSW,GETALT           IS THIS A GET ALT FUNCTION
         BNE   INVALKEY                NO--INVALID KEYWORD.
         OI    SEQSW,TRACK             INDICATE TRACK KEYWORD PRESENT.
         LA    GR5,GTRACK              PARAMETER TARGET ADDRESS.
PROCTRAK LA    GR4,WURK                ADDRESS OF WORK SLOT.
         BAL   GR9,SCAN                RETURN TO SCAN FOR PARAMETER.
         CH    GR2,EIGHT               IS LENGHT EIGTH.
         BCTR  GR2,0                   DECREMENT FOR EXECUTE.
         BNE   INVALPAR                NO--INVALID PARAMETER.
         EX    GR2,PMOVE               MOVE PARAMETER TO WORK SLOT.
         OC    WURK(8),CTOEMASK        CHANGE ALL C ZONES TO E.
         TR    WURK(8),ALTTT-225       CONVERT TO HEX.
         PACK  0(5,GR5),WURK(9)        REMOVE ZONES.
         B     SCAN3                   CONTINUE SCAN OF CARD.
         SPACE
PURGANAL EQU   *                       PROCESS PURGE KEYWORD HERE.
         CLI   FUNCSW,RESTORE          IS THIS DUMP OR RESTORE.
         BNH   PURGE1                  YES--A/OK.
         CLI   FUNCSW,ANALYSIS         IS THIS FORMAT OR ANALYZE
         BL    INVALKEY                NO--INVALID KEYWORD.
PURGE1   BAL   GR9,SCAN                RETURN TO SCAN FOR PARAMETER.
         CH    GR2,THREE               IS THE LENGTH VALID.
         BH    INVALP1                 NO--MUST BE INVALID PARAMETER.
         CLC   0(2,GR1),NO             IS PARAMETER A 'NO'.
         BE    SCAN3                   YES-RETURN TO SCAN.
         CLC   0(3,GR1),YES            IS PARAMETER A 'YES'.
         BNE   INVALP1                 NO--MUST BE INVALID.
         OI    SEQSW+1,PURGE           INDICATE PURGE REQUESTED.
         B     SCAN3                   CONTINUE SCAN OF CARD.
         SPACE 1
         SPACE
TESTDEC  LA    GR15,1(GR2)             LENGTH OF PARAMETER.
         LR    GR3,GR1                 ADDRESS OF PARAMETER.
TESTDEC1 TM    0(GR3),X'F0'            THIS A DECIMAL DIGIT.
         BC    12,INVALPAR             NO--GO GIVE MESSAGE.
         LA    GR3,1(GR3)              STEP TO NEXT DIGIT.
         BCT   GR15,TESTDEC1           CHECK MORE DIGITS, IF ANY.
         BR    GR14                    RETURN.
MSGPRT   EQU   *
         TM    SW1,TEXTIN              ARE WE LOOKING FOR IPL TEXT.
         BO    NOIPLMSG                YES-GIVE PROPER MESSSAGE.
         LA    GR1,MESS0               MESSAGE NUMBER.
         BAL   GR9,BUILD               GO MOVE MESSAGE TO BUFFER.
         L     GR3,STORGR3             LAST ADDRESS SCANNED.
         LA    GR4,CARDBUFF            START OF CONTROL STATEMENT.
         SR    GR3,GR4                 NO. OF COLUMNS SCANNED.
         CVD   GR3,WURK                CONVERT TO DECIMAL
         UNPK  WURK(2),WURK+6(2)       UNPACK FOR PRINTING.
         OI    WURK+1,X'F0'            SET PROPER ZONE.
         TR    WURK(2),IOTAB-240       CONVERT TO EBCDIC FOR PRINTING.
         MVC   0(2,GR1),WURK           PLACE ANSWER IN MESSAGE.
         B     MSGWRT2                 GO WRITE OUT THE MESSAGE.
         SPACE
INVALCOM LA    GR1,MESS1               MESSAGE NUMBER 801.
INV1     BAL   GR9,BUILD               GO MOVE MESSAGE TO BUFFER.
         MVC   0(8,GR1),WURK           MOVE INVALID PORTION TO MESSAGE.
         B     MSGWRT2                 GO WRITE OUT THE MESSAGE.
INVALKEY LA    GR1,MESS2               MESSAGE NUMBER 802.
         B     INV1                    BUILD AND WRITE OUT THE MESSAGE.
INVALP1  BCTR  GR2,0                   DECREMENT LENGTH FOR EXECUTE.
INVALPAR LR    GR5,GR1                 SAVE ADDRESS OF PARAMETER.
         LA    GR1,MESS3               MESSAGE NUMBER 803.
         BAL   GR9,BUILD               GO BUILD THE MESSAGE.
         LR    GR4,GR1                 ADDRESS TO MOVE IN PARAMETER.
         LR    GR1,GR5                 ADDRESS OF PARAMETER.
         EX    GR2,PMOVE               PARAMETER TO OUTPUT BUFFER.
         B     MSGWRT2                 GO WRITE OUT THE MESSAGE.
         SPACE
KEYMISS  LA    GR1,MESS4               MESSAGE NUMBER 804.
         BAL   GR9,BUILD               GO MOVE MESSAGE TO BUFFER.
         B     MSGWRT2                 GO WRITE OUT THE MESSAGE.
*   BUILD ALL MESSAGES HERE.
BUILD    LINK  EP=IEHDMSGB
         BR    GR9                     RETURN.
NOIPL    MVI   SWITCHRD,EOF            INDICATE EOF ENCOUNTERED.
NOIPLMSG LA    GR1,MESS26              MESSAGE NUMBER 826.
         NI    SW1,X'FF'-TEXTIN        INSURE SWITCH IS OFF.
         BAL   GR9,BUILD               PLACE MESSAGE IN BUFFER.
         MVC   0(8,GR1),WORKD8         DDNAME TO MESSAGE.        A32162
         B     MSGWRT2                 GO WRITE OUT THE MESSAGE.
*   KEYWORD LOOKUP TABLE
         DS    0F
KEYTAB   DC    C'TODD    '             TABLE OF VALID KEYWORDS.
         B     TODDANAL                ADDRESS OF KEYWORD ANALYSIS.
         DC    C'FROMDD  '
         B     FROMANAL
         DC    C'NEWVOLID'
         B     NEWLANAL
         DC    C'VTOC    '
         B     VTOCANAL
         DC    C'EXTENT  '
         B     EXTNANAL
         DC    C'FLAGTEST'
         B     FLAGANAL
         DC    C'PASSES  '
         B     PASSANAL
         DC    C'IPLDD   '
         B     IPLDANAL
         DC    C'CPYVOLID'
         B     OLDLANAL
         DC    C'BEGIN   '
         B     BEGNANAL
         DC    C'END     '
         B     ENDDANAL
         DC    C'OWNERID '
         B     OWNRANAL
SSICODE  DC    C'MSS     '                                     @Y30LSFY
         B     SS1CODE                                         @Y30LSFY
         DC    C'PURGE   '
         B     PURGANAL
KEYEND   DC    C'TRACK   '                                     @ZM42083
         B     TRACANAL
         EJECT
*  EQUATE DEFINITIONS                                                 *
         SPACE 1
K0       EQU   0                       DISPLACEMENT CONSTANTS.
K1       EQU   1
K2       EQU   2
K3       EQU   3
K4       EQU   4
K5       EQU   5
K6       EQU   6
K7       EQU   7
K8       EQU   8
K9       EQU   9
K10      EQU   10
K11      EQU   11
K12      EQU   12
K15      EQU   15
K16      EQU   16
K24      EQU   24
K32      EQU   32
K80      EQU   80
K225     EQU   225
K240     EQU   240
X01      EQU   X'01'
X02      EQU   X'02'
XF0      EQU   X'F0'
X80      EQU   X'80'
ALL      EQU   140
COL72    EQU   72
COL71    EQU   71                                               SA54610
SSILN    EQU   3                        LENGTH OF SSI PARAM    @Y30LSFY
BLANK    EQU   X'40'                   HEX FOR BLANK SPACE.
BPAREN   EQU   X'11'                   SW SETTING FOR BOTH PAREN.
COMMA    EQU   C','                    HEX FOR COMMA.
EQUAL    EQU   C'='                    HEX FOR EQUAL.
GOOD     EQU   X'7F'                   RESET ERROR SWITCH VALUE.
LPAREN   EQU   C'('                    HEX FOR LEFT PAREN.
NEWVOLIS EQU   X'80'                   SW SETTING FOR NEWVOLID.
ON       EQU   X'FF'                   FIRST ENTRY SWITCH VALUE.
ONE      EQU   X'01'                   BYTE OFF SETTING.
OWNERIS  EQU   X'02'                   SW SETTING FOR OWNERID.
PRIME    EQU   X'7D'                   HEX FOR PRIME (').
RPAREN   EQU   C')'                    HEX FOR RIGHT PAREN.
TODDS    EQU   X'01'                   SW SETTING FOR TODD.
ZERO     EQU   X'00'                   CLEAR SWITCH SETTING.
         SPACE 2
*  WORKAREA AND TABLES                                                *
         SPACE 1
CLEAR    DC    CL15' '                 CONTINUATION BYTE CHECK.
COMCD    DC    X'00'                 SWITCH FOR CONTINUED CONTROL CARD.
SCANSAVE DS    18F                     CALLED PROGRAM SAVE AREA
TAB      DS    0D                      ARGUMENT TABLE
         DC    91X'01'
         DC    X'00'
         DC    31X'01'
         DC    2X'00'
         DC    68X'01'
         DC    9X'00'
         DC    7X'01'
         DC    9X'00'
         DC    8X'01'
         DC    8X'00'
         DC    22X'01'
DEC      EQU   TAB+240                 NUMERIC FIELD.
TABSL    EQU   TAB+97                  SLASH BYTE.
TABHY    EQU   TAB+96                  HYPHEN BYTE.              A61555
TABPR    EQU   TAB+75                  PERIOD BYTE.
* CONSTANTS AND EQUATES ETC. MOVED FROM DASDS IN THE REPACK
PMOVE    MVC   0(1,GR4),0(GR1)          MOVE DDNAME PARAMETERS
CHKTODD  CLC   4(0,GR15),0(GR1)         COMPARE DDN
TWO56    DC    H'256'                   COMPARE CONSTANT
EIGHT    DC    H'8'                     COMPARE CONSTANT
THREE    DC    H'3'                     COMPARE CONSTANT
FIVE     DC    H'5'                     COMPARE CONSTANT
SAVLGTH  DS    1C
YES      DC    C'YES'
NO       DC    C'NO'
CTOEMASK DC    X'2020202020202020'      USED TO CHANGE ZONES
ALTTT    DC    X'0A0B0C0D0E0FDDDDDD'    TABLE - CONVERT TO HEX
         DC    X'DDDDDDDDDDDD'
         DC    X'00010203040506070809'
IOTAB    DC    C'0123456789ABCDEF'      TRANSLATE TABLE
* THE FOLLOWING ARE USED TO SET UP VALUES FOR BRANCHING IN DASDS
GONORM   EQU   X'00'                    DO NORMAL DASDS INSTRUCTIONS
GOCHECK  EQU   X'04'                    GO SEE IF FINISHED
GOSCAN1  EQU   X'08'                    START PROCESSING
GOOPRL   EQU   X'0C'                    TEST COMMAND VALIDITY
GOCOPY   EQU   X'10'                    PROCESS TODD COPIES
GOWRT2   EQU   X'14'                    GO WRITE MESSAGE
*
MESS0    EQU   0                        MESSAGE NUMBER 800
MESS1    EQU   1                        MESSAGE NUMBER 801
MESS2    EQU   2                        MESSAGE NUMBER 802
MESS3    EQU   3                        MESSAGE NUMBER 803
MESS4    EQU   4                        MESSAGE NUMBER 804
MESS26   EQU   26                       MESSAGE NUMBER 826
SCANADR  EQU   1                        REGISTER ASSIGNMENT
LENGT2   EQU   2                        CALLED LENGTH IN DASDS
*
         SPACE 2
         IEHDBLKS
         SPACE 2
CVT      DSECT
         CVT   SYS=MIN
         SPACE 2
         IEHDWORK
         DCBD  DSORG=PS
         END
$ END
