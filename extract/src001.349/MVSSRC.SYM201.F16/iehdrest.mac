         COPY  LCGASMSW
***********************************************************************
*                  FIXES THIS MODULE                                  *
*                     LATEST FIRST                                    *
***********************************************************************
*
*D 21000                                    SU32 ONLY          @ZA25515
*C 31550                                    SU32 ONLY          @ZA25515
*A 314600-314603,699300                     SU32 ONLY          @ZA25515
*
*C 031550                           @ZA18390=@YA16248=@XA16068=@SA75612
*A 314705,314706                    @ZA18390=@YA16248=@XA16068=@SA75612
*
*A 407685,407691,407792,407798      @ZA18389=@YA16247=@XA16067=@SA75611
*
*  VS2-3 FOR SU32 NO DELETIONS                                 @G32DSPD
*
*C 31600                                     @ZA16473=@YA15361=@XA16061
*A 510318-510323                             @ZA16473=@YA15361=@XA16061
*
*C 32000,348400                              @XA12893=@YA13102=@ZA07406
*A 31500-31600,524100                        @XA12893=@YA13102=@ZA07406
*
* FIX S337 ABEND AT END OF 2ND REEL.                           @ZM40467
*
*A 501614,618,644                                              @ZM40033
*
*
*  FIX APPLIED IN IEHDRVID          @SA75573=@XA10920=@YA10569=@ZA04433
*
*C 510647,510651,510655             @SA69560=@XA06597=@YA06113=@ZA01235
*
*C 510745,510749                    @SA69553=@YA04792=@XA04172=@ZA01202
*A 510738-510739,518870             @SA69553=@YA04792=@XA04172=@ZA01202
*
*C532240                                              OZ00102 = VS08412
*                                                               XM05805
*217000-228730,406600-407260,531600,535800   SA65560 = OX02864 = OY0265
*  APAR XA02828 FIXED AND FLAGGED AS OX02864                    XA02828
*C003071,D003402,A003704-003728,024761-024794,A037020,037920-038044
* 354900,355400-355920,356500,360500,361000,535900    OX2677 = SA65706
*                                                     OX1801 = SA61432
*                                                                     *
*STATUS CHANGE LEVEL 005                                              *
***********************************************************************
         TITLE 'IEHDREST --- RESTORE FUNCTION'
IEHDREST CSECT
*FUNCTION/OPERATION- THIS ROUTINE HANDLES THE -RESTORE- FUNCTION      *
*   OF THE IEHDASDR SYSTEM UTILITY PROGRAM. RESTORE CONSISTS OF       *
*   RESTORING(COPYING) DATA TO A DIRECT ACCESS DEVICE FROM TAPE.      *
*   THE TAPE MUST HAVE BEEN CREATED EITHER BY -IEHDASDR- OR THE       *
*   STAND-ALONE DUMP/RESTORE PROGRAM. DATA IS RESTORED ONLY TO A      *
*   VOLUME RESIDING ON THE SAME DEVICE TYPE FROM WHICH IT WAS         *
*   DUMPED.                                                           *
*   RACF AUTHORIZATION IS REQUIRED IN ORDER TO USE THE         @G32DSPD
*   'CPYVOLID=YES' OPTION ON VOLUME IDS THAT ARE DEFINED TO    @G32DSPD
*   RACF.                                                      @G32DSPD
*                                                                     *
*INPUT-  POINTERS TO A WORKAREA(REGISTER 12) AND TO A CONTROL         *
*   BLOCK(REGISTER 10).                                               *
*   THE TAPE HAS THE FOLLOWING FORMAT                                 *
*                                                                     *
*   LIMITS RECORD- ALWAYS THE FIRST RECORD AFTER A TAPE MARK ON       *
*   EACH VOLUME OF TAPE. THIS RECORD IS 24 BYTES IN LENGTH AND        *
*   CONTAINS THE FOLLOWING INFORMATION.                               *
*                                                                     *
*        BYTES 0-3    CCHH OF THE FIRST TRACK DUMPED.                 *
*        BYTES 4-7    CCHH+1 OF THE LAST TRACK DUMPED.                *
*        BYTES 8-11   CCHH OF THE FIRST TRACK THIS VOLUME.            *
*        BYTES 12-19  CODE THAT IDENTIFIES THIS AS BEING A            *
*                     RESTORE TAPE.                                   *
*        BYTE  20     FULL DUMP SWITCH -X'F0'=FULL,X'00'=PARTIAL.     *
*        BYTE  21     DEVICE TYPE CODE AS FOLLOWS.                    *
*                      CODE 2    2314                                 *
*                           6    2305-1                               *
*                           7    2305-2                               *
*                           9    3330                                 *
*                           A    3340                                 *
*                           D    3330-1                               *
*        BYTE  22     3340 MODEL NUMBER                               *
*        BYTE  23     RESERVED                                        *
*                                                                     *
*   CONTROL RECORD- THIS RECORD IS WRITTEN FOR EACH TRACK DUMPED      *
*   AND IMMEDIATELY PRECEDES THE DATA RECORD FOR EACH TRACK. IT       *
*   CONTAINS A CHANNEL PROGRAM USED BY RESTORE TO WRITE ONE TRACK.    *
*   THE LENGTH OF THIS RECORD DEPENDS ON THE NUMBER OF RECORDS ON     *
*   THE DUMPED TRACK.                                                 *
*                                                                     *
*   TRACK IMAGE RECORD- THIS RECORD CONTAINS THE DATA DUMPED FROM     *
*   A TRACK AND ALWAYS FOLLOWS A CONTROL RECORD.  IT IS WRITTEN AS    *
*   ONE MAXIMUM LENGTH PHYSICAL RECORD ON TAPE. IT CONTAINS THE       *
*   DATA FIELD OF RECORD ZERO AND ALL FIELDS OF OTHER RECORDS THAT    *
*   WERE ON THE TRACK THAT WAS DUMPED.                                *
*                                                                     *
*   TRAILER RECORD- THIS ALWAYS FOLLOWS THE TAPE MARK THAT WAS AT     *
*   THE END OF THE LAST TRACK IMAGE RECORD. IT IS 24 BYTES IN         *
*   LENGTH, OF WHICH ONLY THE FIRST 4 BYTES ARE USED. IT INDICATES    *
*   WHETHER THE RESTORE IS COMPLETE WHEN THE END OF THIS VOLUME       *
*   IS REACHED.                                                       *
*
*EXITS-NORMAL- A SUCCESSFUL RESTORE RESULTS IN A RETURN TO THE        *
*   MODULE -IEHDINIT- WITH A RETURN CODE OF 0. A RESTORE COMPLETE     *
*   MESSAGE IS ALSO PLACED IN THE MESSAGE DATA SET.                   *
*                                                                     *
*EXITS-ERROR-  ANY ERROR ENCOUNTERED IS DESCRIBED BY AN APPROP-       *
*   IATE MESSAGE TO THE MESSAGE DATA SET. A RETURN CODE GREATER       *
*   THAN ZERO WILL ALSO BE PASSED BACK TO MODULE -IEHDINIT-.          *
*                                                                     *
*EXTERNAL ROUTINES-  THIS ROUTINE ONLY ENTERED FROM THE INITIALIZING  *
*   ROUTINE (IEHDINIT). ALL MESSAGES ARE BUILT BY -IEHDMSGB-          *
*   AND WRITTEN OUT BY -IEHDPRNT-. ALL DEVICE CONSTANTS REFERENCED    *
*   ARE IN -IEHDCONS-.                                                *
*                                                                     *
*TABLES/WORK AREAS-  UPON ENTRY, REGISTERS 10 AND 12 POINT TO A       *
*   FUNCTION BLOCK AND WORK AREA RESPECTIVELY. THEY ARE DESCRIBED     *
*   IN THE DSECTS CALLED -FUNCBLK- AND -WORK-.                        *
*                                                                     *
*ATTRIBUTES- SERIALLY REUSABLE,RELOCATABLE                            *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*   THE FOLLOWING ARE REGISTER ASSIGNMENTS.                           *
*                                                                     *
***********************************************************************
         SPACE
GR0      EQU   0
GR1      EQU   1
GR2      EQU   2
GR3      EQU   3
GR4      EQU   4
GR5      EQU   5
GR6      EQU   6
GR7      EQU   7
GR8      EQU   8
GR9      EQU   9
GR10     EQU   10
GR11     EQU   11
GR12     EQU   12
GR13     EQU   13
GR14     EQU   14
GR15     EQU   15
UCBPTR   EQU   9
BASEREG  EQU   11
WORKBASE EQU   12
K0       EQU   0                       DISPLACEMENT CONSTANT.    A21395
         SPACE 3
***********************************************************************
*                                                                     *
*   MESSAGE REFERENCES.                                               *
*                                                                     *
***********************************************************************
         SPACE
MESS6    EQU   6                       MESSAGE IEH806
MESS13   EQU   13                      MESSAGE IEH813
MESS15   EQU   15                      MESSAGE IEH815
MESS16   EQU   16                      MESSAGE IEH816
MESS28   EQU   28                      MESSAGE IEH828
MESS30   EQU   30                      MESSAGE IEH830
MESS31   EQU   31                      MESSAGE IEH831          @ZA06534
MESS32   EQU   32                      MESSAGE IEH832          @ZA06534
MESS49   EQU   49                      MESSAGE IEH849
MESS50   EQU   50                      MESSAGE IEH850
MESS64   EQU   64                      MESSAGE IEH864I         @G32DSPD
         EJECT
         SPACE 2
         USING FUNCBLK,10
         USING IEHREST,BASEREG
         USING WORK,12
         SPACE 1
IEHREST  SAVE  (14,12),T,*             SAVE THE REGISTERS.
         LR    BASEREG,GR15            LOAD THE BASE REGISTER.
         B     APARNO                  BRANCH AROUND APAR NO   @ZA07406
         DC    C'SU32 OZ25515'         LAST FIX THIS MOD       @ZA25515
APARNO   LA    GR7,RESTSAVE            SAVE AREA ADDRESS.      @ZA07406
         ST    GR7,8(GR13)             ADDRESS OF NEW AREA TO OLD.
         ST    GR13,4(GR7)             ADDRESS OF OLD AREA TO NEW.
         LR    GR13,GR7                LOAD SAVE AREA ADDRESS.
         SPACE
         LA    GR9,BLOCKS              ADDRESSING FOR I/O BLOCKS.
         L     GR3,PTRCFUNC            PTR TO CURRENT FUNCTION.
         TM    0(GR3),PROCESS          PREVIOUSLY UNDER WAY?
         BZ    PROCTAPE                NO, START READING TAPE.
         L     GR15,FRTNPTR            YES, GET RETURN POINTER.
         BR    GR15                    TAKE UP WHERE WE LEFT OFF.
         SPACE 3
PROCTAPE EQU       *
         BAL   GR2,CKHEADER            PROCESS HDR RECORD       YL02912
         TM    SWITCH,EOV              1ST REEL ?               YL02912
         BO    PRIME1                   NO, PROCESS TAPE        YL02912
         L     GR1,BUFFPTR1             POINT TO DPASS WORK AREA
         LINK  EP=IEHDPASS
         LTR   GR15,GR15                GOOD RETURN ?           YL02912
         BNZ   FINAL4                   NO, EXIT WITH RC 8      YL02912
         B     PRIME1                   YES, PROCESS TAPE       YL02912
         EJECT
***********************************************************************
*        THIS SECTION WILL READ THE TAPE HEADER RECORD FROM THE       *
*        RESTORE TAPE AND VERIFY IT FOR INITIAL AND EOV PROCESSING.   *
***********************************************************************
         USING IOBLOCKS,GR9
CKHEADER LA    GR9,BLOCKS              I/O CONTROL BLOCKS.      US03168
TAPEIN2  LA    GR3,CONTROL             ADDRESS TO READ CONTROL RECORD.
         ST    GR3,TAPEREAD            SET UP ADDRESS IN CCW.
         MVI   TAPEREAD,X'02'          RESET OP CODE.
         LA    GR3,TAPEREAD            ADDRESS OF CCWS.
         ST    GR3,TCCWAD              STORE IN IOB.
READCTRL EXCP  TAPEIOB                 READ IN THE CONTROL RECORD.
         OI    FIRSTSW,PROCHDR           SET PROCESS HDR SWT     OX2864
         BAL   GR14,WAITTAPE           AWAIT COMPLETION OF READ.
         NI    FIRSTSW,X'FF'-PROCHDR     RESET PROCESS HDR SWT   OX2864
CKCTRL   LA    GR3,TAPECCW1            ADDRESS OF CCWS TO READ TAPE.
         ST    GR3,TCCWAD              STORE IN IOB.
         SR    GR3,GR3
         AIF   ('&LIB' EQ 'LIB1').WIN02 BRCH IF OS ASSEM        XL03130
         IC    GR3,CONTROL+D22          GET WINCH MODEL NO.     XL03130
         STC   GR3,IDEVMOD              STORE MODEL NO.I/P      XL03130
.WIN02   ANOP                                                   XL03130
         IC    GR3,CONTROL+21          DEVICE TYPE CODE FROM TAPE
         LA    GR3,CODES(GR3)          ADDRESS OF UCB DEVICE TYPE CODE.
         CLC   CONTROL+17(3),SACODE4   IS THIS A RESTORE TAPE.
         BNE   RMESS2                  NO--
         CLC   IODEVCON(1),0(GR3)      DO THE DA DEVICE TYPES MATCH.
         AIF   ('&LIB' EQ 'LIB1').ICE01 BRCH IF OS ASSEM        XL03145
         BCR   EQ,GR2                   YES, START PROCESSING.  XL03145
         CLI   IODEVCON,ICEBERG         IS RECEIVING VOL AN     XL03145
*                                       ICEBERG DEVICE.         XL03145
.ICE02   ANOP                                                   XL03145
         BNE   RMESS1                   NO, ISSUE ERR MSG       XL03145
         AIF   ('&LIB' EQ 'LIB1').ICE01 BRCH IF OS ASSEM        XL03145
         CLI   D0(GR3),MERLN            WAS TRANSMITTING VOL A  XL03145
*                                       MERLIN DEVICE (3330).   XL03145
         BNE   RMESS1                   NO, GO GIVE ERROR MSG   XL03145
         OI    FIRSTSW,DOSBIT           FLAG FOR LATER TESTING  XL03145
.ICE01   ANOP                                                   XL03145
         BR        GR2       RETURN TO CALLING RTNE.            OX02864
         EJECT
***********************************************************************
*                                                                     *
*        START FUNCTION BY FILLING BUFFERS.                           *
*                                                                     *
***********************************************************************
         SPACE
PRIME1   LA    GR9,BLOCKS              ADDRESS OF I/O BLOCKS.
         AIF   ('&LIB' EQ 'LIB1').WIN03 BRCH IF OS ASSEM        XL03130
         CLI   IODEVCON,WINCH           WINCH DEVICE ?          XL03130
         BNE   WIN04                    NO, BRCH                XL03130
         CLC   IDEVMOD,ODEVMOD          COMPARE WINCH MODEL NO. XL03130
         BE    WIN04                    BRCH IF MODELS EQ       XL03130
         BH    RMESS1                   BRCH IF I/P BIGGER O/P  XL03130
         OI    FIRSTSW,DOSBIT           CAUSE F4 DOS-CONTAM-BIT XL03130
*                                       TO BE SET               XL03130
WIN04    EQU   *                                                XL03130
.WIN03   ANOP                                                   XL03130
         L     GR3,PTRCFUNC            POINTER TO CURRENT FUNCTION.
         OI    0(GR3),PROCESS          INDICATE FUNCTION IS UNDER WAY.
RDTAPE1  EXCP  TAPEIOB                 READ INTO BUFFER ONE.
         BAL   GR14,WAITTAPE           AWAIT COMPLETION.
         SPACE 1
START1   L     GR2,BUFFPTR1            BUFFER ONE ADDRESS.
         BAL   GR14,CONVCCW            SET UP CCWS FOR SYSTEM. @ZA06534
         BAL   GR2,WRITE               WRITE ON DA FROM BUFFER ONE.
         CLI   BUFFSW,ON               ARE WE DOUBLE BUFFERED.
         BNE   RETURN                  NO--CHECK CONCURRENT OR WAIT.
         SPACE 1
         LA    GR3,TAPECCW2            READ CCWS FOR BUFFER TWO.
         ST    GR3,TCCWAD              ADDRESS TO IOB.
         EXCP  TAPEIOB                 FILL BUFFER TWO.
         SPACE 1
RETURN   EQU   *                       CHECK IF RETURN TO MONITOR.
         TM    SW1,MULTIPLE            ANY REASON TO GO BACK TO MONITOR
         BZ    WAITOUT1                NO--GO TO WAIT.
         LA    GR3,WAITOUT1            RETURN ADDRESS.
RETURN1  ST    GR3,FRTNPTR             SAVE IN RETURN POINTER.
         LA    GR15,0                  SET RETURN CODE.
         B     FINAL3                  RETURN TO MONITOR.
         SPACE 1
WAITOUT1 EQU   *
         BAL   GR14,WAITDISK           AWAIT OUTPUT OF ONE.
CHGSERAL EQU   *                                                 M0640
         TM    FIRSTSW,HEX1            FIRST TIME THROUGH       RESTFIX
         BO    CHKMORE                 NO                        M0640
         OI    FIRSTSW,HEX1            SET SWITCH FOR ENTRY     RESTFIX
         LA    GR3,SRCHKEYR            ADDR OF CCW FOR REC 3     M0640
         ST    GR3,DCCWAD              SET UP IOB                M0640
         XC    DSEEK+3(4),DSEEK+3      CLEAR SEEK ADDR           A38120
         L     GR5,BUFFPTR1            GET BUFFER ADDR           M6350
         ST    GR5,RDVOLSER            PUT IN READ/WRITE CCW     M6350
         MVI   RDVOLSER,X'06'          PUT IN READ COMMAND       M6350
         EXCP  DISKIOB                                           M0640
         WAIT  ECB=DISKECB                                       M0640
         CLI   DISKECB,GOOD                                      M0640
         BNE   IOERR                   GOT AN ERROR              M0640
         SPACE
***********************************************************************
*                                                                     *
*        AFTER THE UNITIAL WRITE TO DISK THE VOL SER THAT WAS WRITTEN *
*       THERE FROM TAPE HAS BEEN PUT INTO RDVOLBUF BY ABOVE CHAN      *
*        PROG. THIS SER MUST BE SAVED AND REPLACED BY THE ORIGINAL.   *
*                                                                     *
***********************************************************************
         SPACE
         L     GR8,TUCBPTR              GET UCB PTR              A42500
         MVI   RDVOLSER,X'05'           PUT IN WRITE COMMAND     M6350
         MVC   IDSAVE(6),4(GR5)         SAVE DISK VOLID          M6350
         MVC   4(6,GR5),28(GR8)         PUT BACK ORIGINAL VOLID. A42500
***********************************************************************
*     THIS SECTION OF CODE PERFORMS RACF CHECKING. IF THE VOLID TO    *
*  BE COPIED IS DEFINED TO RACF AND THE USER DOES NOT HAVE ALTER      *
*  ACCESS TO IT, HE WILL BE DENIED EXECUTION OF THE 'CPYVOLID'        *
*  OPTION.                                                     @G32DSPD
***********************************************************************
         TM    SEQSW,CPYVOLID           COPY VOLID REQUESTED ? @G32DSPD
         BNO   NOCHECKS                 NO,SKIP RACF CHECKS    @G32DSPD
         L     GR6,CVTPTR               GET CVT POINTER        @G32DSPD
         USING CVT,GR6                                         @G32DSPD
         L     GR6,CVTRAC               GET RACF POINTER       @G32DSPD
         DROP  GR6                                             @G32DSPD
         LTR   GR6,GR6                  IS RACF ACTIVE ?       @G32DSPD
         BZ    NOCHECKS                 NO,SKIP RACF CHECKS    @G32DSPD
         USING RCVT,GR6                 DO TEST IF RACF IS     @ZA25515
         TM    RCVTSTA1,RCVTDASD        CURRENT.               @ZA25515
         BZ    NOCHECKS                 NO DONT DO RACHECK     @ZA25515
         DROP  GR6                      YES DO RACHECK         @ZA25515
         MVC   RACVOL(6),IDSAVE         SET VOLID FOR RACHECK  @G32DSPD
         RACHECK  ATTR=ALTER,ENTITY=RACVOL,CLASS='DASDVOL'     @G32DSPD
         CLM   GR15,B'0001',RC8         USER AUTHORIZED ?      @G32DSPD
         BNE   CHECKSOK                 YES,CHECKS OK          @G32DSPD
         NI    SEQSW,255-CPYVOLID       FORBID COPY VOLID      @G32DSPD
         OI    FLGBYT2,CPYREJEC         SET CPYVOLID DISALLOWED@G32DSPD
         BAL   GR4,UNAUTH               GO PRINT MSG           @G32DSPD
CHECKSOK EQU   *                        USER IS AUTHORIZED     @G32DSPD
NOCHECKS EQU   *                        RACF NOT ACTIVE        @G32DSPD
         OC    COPYPTR(4),COPYPTR       ARE THERE ANY COPIES?
         BZ    GOWRT                    NO, GO WRITE VOLID.
         L     GR8,COPYPTR              YES, GET COPY BLOCK.
         USING COPYBLK,8                                         M2888
LOOPWRT  EQU   *                                                 M2888
         LA    GR9,CIOBLOCK             ADDRESSING FOR I/O BLOCKS.
         ST    GR3,DCCWAD               SET UP IOB.
         OC    CCOPYPTR(4),CCOPYPTR     ARE THERE MORE COPIES?
         BZ    GOWRT                    NO, GO WRITE VOLID.
         L     GR8,CCOPYPTR             YES, GET NEXT COPY BLOCK.
         DROP  8
         B     LOOPWRT                  GO UPDATE COPY BLOCK.
GOWRT    EQU   *
         LA    GR9,BLOCKS               ADDRESSING FOR PRIMARY BLOCKS.
         EXCP  DISKIOB
         WAIT  ECB=DISKECB
         CLI   DISKECB,GOOD                                    @ZA18390
         BNE   IOERR                                           @ZA18390
         MVC   DSEEK+3(4),CONTROL+8     RESET IOB SEEK           A38120
         OC    COPYPTR(4),COPYPTR       ANY COPIES?
         BZ    ENDVOLID                 NO, TEST FOR BUFFERS.
         L     GR8,COPYPTR              YES, GET COPY BLOCK.
         USING COPYBLK,GR8
COPYIT   LA    GR9,CIOBLOCK             ADDRESSING FOR COPY BLOCKS.
         XC    DSEEK+3(4),DSEEK+3       CLEAR SEEK ADDRESS       A38120
         L     GR3,CUCBPTR              GET PTR TO COPY UCB PTR  M2888
         MVC   4(6,GR5),28(GR3)         PUT BACK ORIGINAL VOLID  M6350
         EXCP  DISKIOB                                           M2888
         WAIT  ECB=DISKECB                                       M2888
         MVC   DSEEK+3(4),CONTROL+8     RESET IOB SEEK           A38120
         OC    CCOPYPTR(4),CCOPYPTR                              M2888
         BZ    ENDVOLID                                          M2888
         L     GR8,CCOPYPTR                                      M2888
         B     COPYIT                                            M2888
ENDVOLID LA    GR9,BLOCKS                                        M2888
CHKMORE  EQU   *                                                 M0640
         SPACE 1
         CLI   BUFFSW,ON               ARE THERE TWO BUFFERS.
         BNE   RDTAPE1                 NO--GO START ON 1 AGAIN.
         SPACE 1
         BAL   GR14,WAITTAPE           YES-GO WAIT TO FILL BUFFER TWO.
         L     GR2,BUFFPTR2            BUFFER TWO ADDRESS.
         BAL   GR14,CONVCCW            SET UP CCWS FOR SYSTEM. @ZA06534
         BAL   GR2,WRITE               WRITE ON DA FROM BUFFER TWO.
         LA    GR3,TAPECCW1            CCWS TO FILL BUFFER ONE.
         ST    GR3,TCCWAD              STORE IN IOB.
         EXCP  TAPEIOB                 FILL BUFFER ONE.
         EJECT
*   LINK BACK TO MONITOR HERE.
         TM    SW1,MULTIPLE            ANY REASON TO GO BACK TO MONITOR
         BZ    WAITOUT2                NO--GO TO WAIT.
         LA    GR3,WAITOUT2            RETURN ADDRESS.
         B     RETURN1                 RETURN TO MONITOR.
         SPACE 2
WAITOUT2 BAL   GR14,WAITDISK           AWAIT OUTPUT OF BUFFER TWO.
         BAL   GR14,WAITTAPE           AWAIT INPUT OF BUFFER ONE.
         B     START1                  GO START OUTPUT OF ONE.
WRITE    EXCP  DISKIOB                 OUTPUT BUFFER ONE.
         OC    COPYPTR(4),COPYPTR      ARE WE RESTORING TO MORE DEVICES
         BCR   8,GR2                   NO--NO COPIES TODAY.
         L     GR8,COPYPTR             POINTER TO FIRST COPY BLOCK.
         USING COPYBLK,GR8
MORECOPY LA    GR9,CIOBLOCK            I/O BLOCKS FOR COPY      M2888
         SPACE
         EXCP  DISKIOB                 WRITE OUT BUFFER ONE TO COPY.
         SPACE
         OC    CCOPYPTR(4),CCOPYPTR    ARE THERE MORE COPIES.
         BZ    MORE1                   NO--CONTINUE ON.
         L     GR8,CCOPYPTR            YES-POINTER TO NEXT COPY BLOCK.
         B     MORECOPY                GO WRITE ON NEXT DEVICE  M2888
         SPACE
MORE1    LA    GR9,BLOCKS              ADDRESSING FOR PRIMARY DEVICES.
         BR    GR2                     RETURN.
         SPACE 1
WAITTAPE TM    TAPEECB,COMPLETE        IS THE OPERATION COMPLETE.
         BO    TESTT                   YES-GO TEST THE STATUS.
         WAIT  ECB=TAPEECB             AWAIT COMPLETION OF TAPE.
TESTT    EQU   *                                                 M0640
         CLI   TAPEECB,GOOD            ALL OK                    M0640
         MVI   TAPEECB,0               CLEAR ECB               @ZA06534
         BCR   8,GR14                  ALL OKAY//RETURN TO PROCESS.
         TM    TSTATUS+4,X'01'         WAS A TAPE MARK READ.
         BZ    IOTERR                   NO--MUST BE ERROR.     @ZA06534
         TM    FIRSTSW,PROCHDR         READING HDR REC ?        OX2864
         BNO   NOTHDR                  NO, BRCH                OX2864
         NI    FIRSTSW,X'FF'-PROCHDR   RESET PROCESS HDR SWT   OX2864
         EXCP  TAPEIOB                 REISSUE READ         OX2864
         B      WAITTAPE                                        OX2864
NOTHDR   EQU   *                                                NUFRNT
         L     GR3,PTRCFUNC            CURRENT QUEUE SLOT.
         TM    0(GR3),PROCESS          THIS FUNCTION REALLY STARTED.
         BZ    RMESS2                  NO--MUST BE EOF ON INITIAL READ.
         LA    GR3,TAPEDCB             TAPE DCB ADDRESS.
         USING IHADCB,GR3
         NI    DCBIFLGS,X'3F'          TURN OFF ERROR FLAGS.
         B     EOFTAPE                  GO HANDLE EOF           MVMPROB
         SPACE
WAITDISK BAL   GR4,WAITD               WAIT ON PRIMARY DEVICE.
         OC    COPYPTR(4),COPYPTR      ARE COPIES BEING MADE.
         BCR   8,GR14                  NO--RETURN.
         L     GR8,COPYPTR             YES-ADDRESS OF FIRST COPY BLOCK.
         USING COPYBLK,GR8
WAIT1    LA    GR9,CIOBLOCK            I/O BLOCKS FOR COPY.
         BAL   GR4,WAITD               AWAIT THIS COPY.
         OC    CCOPYPTR(4),CCOPYPTR    ARE THERE MORE COPIES.
         BZ    WAIT2                   NO--GET SET TO RETURN.
         L     GR8,CCOPYPTR            YES-ADDRESS OF NEXT COPY BLOCK.
         B     WAIT1                   GO WAIT ON NEXT COPY.
WAIT2    LA    GR9,BLOCKS              RESET ADDRESSING/PRIMARY DEVICE.
         BR    GR14                    RETURN.
WAITD    TM    DISKECB,COMPLETE        IS THE OPERATION COMPLETE.
         BO    TESTD                   YES-GO TEST THE STATUS.
         WAIT  ECB=DISKECB             AWAIT COMPLETION OF DISK.
TESTD    EQU   *
         CLI   DISKECB,GOOD            ALL OK ?
         BCR   8,GR4                   YES-RETURN.
         TM    DSTATUS+4,EOF1          WAS AN EOF ENCOUNTERED.
         BCR   1,GR4                   RESTORE CHAIN IS          M2888
*                                       COMPLETE                 M2888
         TM    DSENSE+1,NRFOPE        NO,NRF OR OPER INCOMPL   @ZA07406
         BNO   IOERR                  PERMANENT ERROR
         EJECT
***********************************************************************
*                                                                     *
*   THIS CODING USED ONLY WHEN INTERRUPTED WHILE READ-BACK CHECKING   *
*     A TRACK-OVERFLOW OR END-OF-FILE RECORD.                         *
*                                                                     *
***********************************************************************
         SPACE
         L     GR3,TUCBPTR             YES-ADDRESS OF UCB.
         USING UCB,GR3
         CLI  UCBTBYT4,ZEUS1            2305-1 DEVICE ?         SA57293
         BE   YEAZ                      YES, BRCH               SA57293
         CLI  UCBTBYT4,ZEUS2            2305-2 DEVICE           SA57293
         BNE  NOZ                       NO, BRCH                SA57293
YEAZ     EQU  *                                                 SA57293
         L    GR3,DDCBAD                GET DCB ADDR            SA57293
         USING IHADCB,GR3                                       SA57293
         L    GR3,DCBDEBAD              GET DEB ADDR            SA57293
         L    GR3,T32(GR3)              GET ZEUS UCB EXPOSURE   SA57293
NOZ      EQU   *                                                SA57293
         USING UCB,GR3                                          SA57293
         CLC   CCHH,UCBSEEK             WERE WE SWITCHED        YL02912
*                                       TO THE NEXT TRACK.      YL02912
         BL    REIT                     IF LOW REISSUE           M2916
         L     GR8,COPYPTR              CHECK COPIES             M2916
NRFLOOP  LTR   GR8,GR8                  ARE THERE COPIES         M2916
         BZ    IOERR                    PROCESS ERROR.         @ZA06534
         L     GR3,CUCBPTR              CHECK COPY UCB           M2916
         CLC   CCHH,UCBSEEK             SAME SEEK ADDRESS       YL02912
         BL    REIT                     LOW MEANS RETRY          M2916
         L     GR8,CCOPYPTR             CHECK FOR MORE COPIES    M2916
         B     NRFLOOP                                           M2916
REIT     EQU   *                                                 M2916
         DROP  3
         SPACE 1
         LA    GR3,READR0              ADDRESS OF READ R0 CCW.
         ST    GR3,DCCWAD              RESET STARTING POINT IN IOB.
         EXCP  DISKIOB                 FINISH THE CCW CHAIN.
         B     WAITDISK                GO WAIT ON ALL DEVICES.
         DROP  8
         EJECT
EOFTAPE  L     GR3,TCCWAD              ADDRESS OF LAST USED TAPE CCW.
         L     GR2,TSTATUS              LOAD CSW-CCW PTR        SA53319
         SH    GR2,EIGHT                EQUALIZE PTRS           SA62856
         LA    GR3,0(GR3)               ZERO HIGH BYTE          SA62856
         LA    GR2,0(GR2)               ZERO HIGH BYTE CSW      SA53319
         CR    GR3,GR2                  EOF ON 1ST CCW ?        SA53319
         L     GR3,0(GR3)              READ IN AREA.            SA53319
         BNE   TSTRESTC                GO DO IT                 XM05460
         SPACE
         USING RBUFFER,GR3
OLDTAPE  EQU   *                                                OX02677
         ST    GR3,TAPEREAD            DATA ADDRESS TO CCW.
         LA    GR2,TAPEREAD            CCW ADDRESS TO READ TRAILER.
         ST    GR2,TCCWAD              CCW ADDRESS TO IOB.
         SPACE
         EXCP  TAPEIOB                 READ TRAILER             OX02677
         BAL   GR14,WAITTAPE           AWAIT COMPLETION.
         SPACE
*   TEST FOR RESTORE BEING COMPLETE HERE.
         SPACE 1
TSTRESTC EQU   *                                                SA53319
         OC    REELCK(4),RBUFFER       'OR' IN THE TRAILER RECORD.
         DROP  3
         CLC   REELCK(4),REELMASK      ARE WE FINISHED.
         BNE   VOLCHK                  NO-CHECK FOR MORE TAPES.  A21395
         EJECT
*   FINAL PROCESSING ON COPY VOLUMES HERE, IF ANY.
         OC    COPYPTR(4),COPYPTR      ARE COPIES BEING MADE.
         BZ    EXIT1                   NO--ONLY ONE VOLUME.
         SPACE
         L     GR5,COPYPTR             POINTER TO FIRST COPY BLOCK.
         USING COPYBLK,GR5
EXIT     L     GR8,CUCBPTR             POINTER TO UCB FOR COPY.
         LA    GR9,CIOBLOCK            I/O BLOCKS FOR COPY DEVICE.
         LA    GR7,DDNAME3             DDNAME FOR THIS DEVICE.
         LA    GR2,CALTDATA            ALTERNATE TRACK INFORMATION.
         ST    GR5,ADDRBUFF            SAVE COPY BLOCK ADDRESS.
         BAL   GR5,RDVOLID             GO UPDATE THE ALTERNATE TRACK
         L     GR5,ADDRBUFF            RESTORE COPY BLOCK ADDRESS.
*                                        INFORMATION AND VOLID.
         SPACE
         OC    CCOPYPTR(4),CCOPYPTR    ARE THERE MORE COPIES.
         BZ    EXIT1                   NO--GO PROCESS THE ONE VOLUME.
         L     GR5,CCOPYPTR            YES-ADDRESS OF NEXT COPY.
         B     EXIT                    GO PROCESS NEXT COPY.
         DROP  GR5
         SPACE
*   FINAL PROCESSING ON PRIMARY DIRECT ACCESS VOLUME HERE.
EXIT1    LA    GR9,BLOCKS              MAIN I/O BLOCKS.
         L     GR8,TUCBPTR             POINTER TO THIS UCB.
         LA    GR7,DDNAME2             DDNAME FOR THIS DEVICE.
         LA    GR2,ALTDATA             ALTERNATE TRACK INFORMATION.
         BAL   GR5,RDVOLID             GO UPDATE THE ALTERNATE TRACK
*                                        INFORMATION AND VOLID.
         L     GR15,RETCODE            GET RETURN CODE.
         B     FINALR2                 GO EXIT TO THE MONITOR.
         EJECT
***********************************************************************
*        THE FOLLOWING CODE IS NECESSARY BECAUSE OF A DUMP/REST  A46379
*        INCOMPATIABILITY BETWEEN RELEASE 18 AND 20.1.           A46379
*        THREE TAPE MARKS ARE WRITTEN BETWEEN THE TRAILER LABELS A46379
*        AND THE IEHDASDR TRAILER RECORD UNDER REL. 18, BUT ONLY A46379
*        TWO ARE WRITTEN BY REL. 20.1.                           A46379
***********************************************************************
         USING IOBLOCKS,9
EOV1     EQU   *                                                OX2864
         TM    SWITCH,STDLABEL          SL TAPE ?               OX2864
         BNO   EOV1B                   NO, NO SPACING NEEDED.   OX02864
         SPACE
         LA    GR8,TAPECHK             ADDR OF SPACE FORWD CCW   A46379
         ST    GR8,TCCWAD              STORE THAT ADDR IN IOB    A46379
SPACETP  EQU   *                                                OX2864
         EXCP  TAPEIOB                 EXECUTE THE CCW           A46379
         WAIT  ECB=TAPEECB             WAIT FOR THE SPACE FWD    A46379
         TM    TSTATUS+4,EOF1          WAS TAPE EOF ENCOUNTERED  A46379
         BO    SPACETP                 BRANCH IF YES             OX2864
         CLI   TAPEECB,GOOD                                    @ZA18389
         BNE   IOTERR                                          @ZA18389
         LA    GR8,BACKTAPE            ADDR OF SPACE BKWD CCW    A46379
         ST    GR8,TCCWAD              STORE THAT ADDR IN IOB    A46379
         EXCP  TAPEIOB                 EXECUTE THE BSP CCW       A46379
         WAIT  ECB=TAPEECB             WAIT FOR THE SPACE FWD    A46379
         CLI   TAPEECB,GOOD                                    @ZA18389
         BNE   IOTERR                                          @ZA18389
*        END OF ABOVE MENTIONED COMPATIABILITY CODE.             A46379
EOV1B    EQU   *                                                   1326
         LA    GR8,TAPEDCB             DCB ADDRESS.
         USING IHADCB,8
         XC    DCBBLKCT(4),DCBBLKCT    INSURE BLOCK COUNT IS ZERO.
         NI    DCBOFLGS,X'33'          INSURE BITS 0,1,4,5 ARE ZERO.
         OI    DCBOFLGS,X'04'          INDICATE TAPE MARK READ   A21395
         EOV   TAPEDCB
         OI    SWITCH,EOV              REMEMBER VOLUME CROSSOVER.
         BAL   GR2,CKHEADER            GO READ/VERIFY HEADER    US03168
         B     PRIME1                  GO START ON NEXT TAPE.   US03168
         EJECT
***********************************************************************
*                                                                     *
*   THE FOLLOWING ROUTINE CONVERTS AND SETS UP THE CCWS THAT WERE     *
*   READ IN FROM TAPE FOR USE UNDER THE OPERATING SYSTEM. THIS        *
*   ROUTINE ALSO INCREMENTS THE TRACK ADDRESS AND STORES IT IN        *
*   THE IOB.                                                          *
*        REGISTER 2 MUST CONTAIN THE ADDRESS OF THE BUFFER.           *
*          UPON ENTRY.                                                *
*        REGISTER 6 IS USED AS A WORK REGISTER.                       *
*        REGISTER 7 IS A POINTER TO THE CURRENT CCW BEING CHECKED.    *
*        REGISTER 14 IS THE RETURN REGISTER.                          *
***********************************************************************
         SPACE
         USING RBUFFER,GR2
CONVCCW  L     GR4,IODEVCON            DEVICE CONSTANT ADDRESS @ZA06534
         USING CONSTANT,GR4                                    @ZA06534
         XC    ZERO1,ZERO1             CLR FIRST 8 BYTES OF BUF@ZA06534
         LR    GR0,GR2                 BUFFER ADDRESS.         @ZA06534
         AH    GR0,CCWSIZE             DATA SLOT ADDRESS.
         LA    GR9,BLOCKS              ADDRESS OF I/O CONTROL BLOCKS.
         USING IOBLOCKS,9
         LA    GR7,SEARIDE             FIRST CCW TO BE CHECKED.
         TM    SEQSW+D1,RPSFEAT        TODD HAVE RPS
         BZ    TESTCCW                 NO
         MVC   SETMASK(L8),SETCCW      YES,MOVE SECTOR CCW
*                                       INTO BUFFER OVER SFM CCW
TESTCCW  CLI   0(GR7),8                IS THIS A TIC COMMAND.
         BE    YESTIC                  YES-GO PROCESS.
         MVI   TICSW,X'00'             NO--INSURE TIC SWITCH IS CLEAR.
         CLI   0(GR7),X'31'            IS THIS A SEARCH ID EQUAL.
         BE    YESSRCH                 YES-GO PROCESS.
         CLI   0(GR7),X'1D'            IS THIS A WRITE COUNT-KEY-DATA
         BNE   NOTWCKD                 NO, CONTINUE CHKING      YM2241
         CLC   6(2,GR7),TOBIG          MAX BYTE COUNT           YM2241
         BNE   WRTCKD                  NO, CONTINUE CHK         YM2241
         MVC   6(2,GR7),DATASIZE       SET CNT TO BUFFSIZE      YM2241
         B     WRTCKD                  CONTINUE                 YM2241
NOTWCKD  EQU   *                       CONTINUE CHKING          YM2241
         CLI   0(GR7),X'05'            IS THIS A WRITE DATA.
         BE    WRTDATA                 YES-GO PROCESS.
         CLI   0(GR7),X'11'            IS THIS AN ERASE CCW.
         BE    ERASE                   YES-GO PROCESS.
         CLC   6(2,GR7),TOBIG          MAX BYTE COUNT           YM3473
         BNE   NOTRCKD                 NO, CONTINUE CHK         YM3473
         MVC   6(2,GR7),DATASIZE       SET CNT TO BUFFSIZE      YM3473
NOTRCKD  EQU   *                       CONTINUE CHKING          YM3473
         CLI   0(GR7),X'01'            IS THIS A WRITE-SPECIAL CKD.
         BE    WRTCKD                  YES-GO PROCESS.
         TM    4(GR7),X'40'            IS THIS THE END OF CHAIN.
         BZ    CCWEXIT                 YES-RETURN TO CALLER
NEXTCCW  LA    GR7,8(GR7)              STEP POINTER TO NEXT CCW.
         B     TESTCCW                 REPEAT FOR THE NEXT CCW.
YESTIC   LR    GR6,GR7
         CLI   TICSW,X'FF'             WAS PREVIOUS CCW A TIC.
         BE    YES2TICS                YES-SPECIAL CASE/TIC FOLLOWS TIC
         MVI   TICSW,X'FF'             INDICATE A TIC OPERATION.
         SH    GR6,EIGHT               POINT TO PREVIOUS CCW.
SETADDR  ST    GR6,ADDRESS             TEMPORARY STORAGE OF ADDRESS.
         MVC   1(3,GR7),ADDRESS+1      UPDATE ADDRESS FIELD OF CCW.
         B     NEXTCCW                 GO CHECK THE NEXT CCW.
YES2TICS LA    GR6,8(GR6)              POINT TO NEXT CCW.
         MVI   TICSW,X'00'             CLEAR THE TIC SWITCH.
         B     SETADDR                 UPDATE THE CCW AND CHECK NEXT.
YESSRCH  LA    GR6,DSEEK+3             ADDRESS OF SEARCH ID IN IOB.
         B     SETADDR                 UPDATE CCW AND CHECK NEXT.
WRTCKD   L     GR6,0(GR7)              DATA ADDRESS FROM THIS CCW.
         LA    GR6,0(GR6)              CLEAR HIGH ORDER BYTE.
         SH    GR6,BUFFADDR            GET DISPLACEMENT FROM START.
         AR    GR6,GR0                 ADD THIS TO OS BUFFER START.
         B     SETADDR                 GO UPDATE CCW ADDRESS.
WRTDATA  LR    GR6,GR0                 BUFFER ADDRESS FOR DATA.
         B     SETADDR                 GO UPDATE THE CCW ADDRESS.
RDCKD    CLC   6(2,GR7),ZERO           IS THIS AN EOF RECORD.
         BNE   NEXTCCW                 NO--CONTINUE ON.
         MVI   0(GR7),X'12'            CHANGE OP CODE TO READ COUNT.
         B     NEXTCCW                 CONTINUE ON.
ERASE    LR    GR6,GR2                 POINTER TO 8-BYTES OF ZERO.
         ST    GR6,ADDRESS             TEMPORARY STORAGE OF ADDRESS
         MVC   1(3,GR7),ADDRESS+1      UPDATE ERASE CCW ADDRESS.
         AGO   .FIX01
         USING CONSTANT,2
CCWEXIT  L     GR2,IODEVCON            ADDRESSING FOR DEVICE CONSTANT
.FIX01   ANOP
CCWEXIT  EQU   *                                               @ZA06534
         L     GR3,CONTROL+8           CURRENT CCH ADDRESS.
         MVC   DSEEK+3(4),CONTROL+8    TRACK ADDRESS TO IOB.
         LA    GR9,BLOCKS              PRIMARY I/O BLOCKS.
         USING IOBLOCKS,GR9
         LA    GR7,SEARIDE             START OF CCW CHAIN ADDRESS.
         TM    SEQSW+D1,RPSFEAT        TODD HAVE RPS
         BZ    YO                      NO
         LA    GR7,SETMASK             YES,POINT TO SET SECTOR
YO       EQU   *                        *
         ST    GR7,DCCWAD              STORE IN IOB.
         OC    COPYPTR(4),COPYPTR      ARE THER COPIES.
         BZ    Y2                      NO--GO UPDATE THE TRACK ADDRESS.
         L     GR6,COPYPTR             ADDRESS OF FIRST COPY BLOCK.
         USING COPYBLK,GR6
Y1       LA    GR9,CIOBLOCK            COPY I/O BLOCKS.
         ST    GR7,DCCWAD              CCW ADDRSSS TO COPY IOB.
         MVC   DSEEK+3(4),CONTROL+8    SET UP SEEK ADDRESS IN COPY IOB.
         OC    CCOPYPTR(4),CCOPYPTR    ARE THERE MORE COPIES.
         BZ    Y3                      NO--GO UPDATE THE TRACK ADDRESS.
         L     GR6,CCOPYPTR            ADDRESS OF NEXT COPY BLOCK.
         B     Y1                      GO PROCESS THIS COPY.
         DROP  GR6
Y3       LA    GR9,BLOCKS              RESET ADDRESSING/PRIMARY BLOCKS.
Y2       CLC   DSEEK+6(1),LASTORIG+3   THIS LAST TRACK OF CYLINDER.
         BC    4,CCWEXIT1              NO--
         A     GR3,CONVCYL             YES-STEP TO NEXT CYLINDER.
         B     CCWEXIT2                SKIP TRACK INCREMENT.
CCWEXIT1 AL    GR3,F1                  INCREMENT TO NEXT TRACK.
CCWEXIT2 ST    GR3,CONTROL+8           SAVE NEW VALUE.
         BR    GR14                    RETURN.
         DROP  GR2,GR4,GR9
         EJECT
***********************************************************************
*                                                                     *
*   THIS ROUTINE READS IN THE VOLUME LABEL OF THE DIRECT ACCESS       *
*     DEVICE. IF THE OLD SERIAL NUMBER IS TO BE RETAINED AND IT IS    *
*     DIFFERENT FROM THE NEW SERIAL NUMBER,THEN THE VOLUME LABEL IS   *
*     REWRITTEN WITH THE OLD SERIAL NUMBER. THIS ROUTINE ALSO         *
*     DSCB. THE ACTUAL SERIAL NO. OF THE VOLUME BEING RESTORED IS     *
*     ALSO SET UP IN THE COMPLETION MESSAGE FOR SUBSEQUENT PRINTING   *
*     THE ROUTINE TO ACCOMPLISH THIS IS CALLED BY -IEHDREST- AND  IS  *
*     NAMED -IEHDRVID-                                                *
*                                                                     *
*        REGISTER 8 MUST POINT TO THE UCB FOR THE DA DEVICE.          *
*        REGISTER 9 MUST POINT TO THE DIRECT ACCESS CONTROL BLOCKS    *
*        REGISTER 7 MUST POINT TO THE DDNAME UPON ENTRY.              *
*          UPON ENTRY.                                                *
*        REGISTER 6 IS A WORK REGISTER.                               *
*        REGISTER 3 IS A WORK REGISTER.                               *
*        REGISTER 2 MUST POINT TO THE ALTERNATE TRACK INFORMATION.    *
*        REGISTER 5 IS THE RETURN REGISTER.                           *
*                                                                     *
***********************************************************************
         SPACE
RDVOLID  EQU   *
         CALL  IEHDRVID                CALL ROUTINE IEHDRVID
         LTR   GR15,GR15               GOOD RETURN FROM RVID ?
         BNZ   CHECKRET                NO, CHECK RETURN CODE
         BR    GR5                     RETURN  TO CALLING RTN
CHECKRET ST    GR15,RETCODE            SAVE RETURN CODE
         CLC   RETCODE(4),UNUSRET      RETURN CODE EQU 4?
         BNE   UNUSRETX                NO, TERMINATE FUNCTION
         BR    GR5                     YES, CONTINUE PROCESS
UNUSRETX EQU   *
         B     IOERR                   SEND ERROR MESSAGE
***********************************************************************
*                                                                     *
*   THE FOLLOWING SELECTS MESSAGES TO BE PRINTED.                     *
*                                                                     *
***********************************************************************
         SPACE
RMESS1   LA    GR1,MESS15              MESSAGE 815.
RMESS1A  BAL   GR9,BUILD               PLACE MESSAGE IN BUFFER.
         MVC   0(8,GR1),DDNAME2        MOVE DDNAME TO MESSAGE.
RMESS1B  BAL   GR9,MSGWRT1             WRITE OUT THE MESSAGE.
         TM    SWITCH,EOV              DID WE EVER WRITE ON DA VOLUME.
         BO    UNUSABLE                YES-WE BETTER TELL USER/BEWARE.
         B     FINAL4                  NO--BETTER EXIT.
         SPACE
RMESS2   LA    GR1,MESS16              MESSAGE 816.
         BAL   GR9,BUILD               PLACE MESSAGE IN BUFFER.
         MVC   0(8,GR1),DDNAME1         DDNAME TO MESSAGE.     @ZA06534
         B     RMESS1B                 WRITE OUT MESSAGE       @ZA06534
         SPACE 2
* PRINT MESSAGE NOTIFYING USER THAT 'CPYVOLID' REQUEST DENIED  @G32DSPD
UNAUTH   LA    GR1,MESS64              GET MESSAGE ID          @G32DSPD
         BAL   GR9,BUILD               GET MESSAGE TEXT        @G32DSPD
         MVC   0(L'IDSAVE,GR1),IDSAVE  PUT VOLID IN MESSAGE    @G32DSPD
         BAL   GR9,MSGWRT1             GO WRITE MESSAGE        @G32DSPD
         BR    GR4                     RETURN                  @G32DSPD
         SPACE 2
         USING IOBLOCKS,GR9
IOTERR   EQU   *                                               @ZA06534
         LA    GR3,TAPEIOB             IOB ADDRESS//TAPES.
         B     IOERR1                  GO GIVE ERROR MESSAGE.
IOERR    LA    GR3,DISKIOB             IOB ADDRESS.
         DROP  9
IOERR1   EQU   *                       PRINT I/O ERROR MESSAGES HERE.
         LR    GR7,GR14                SAVE RETURN ADDRESS.    @ZA06534
         LA    GR1,MESS13              MESSAGE 813.
         BAL   GR9,BUILD               PLACE MESSAGE HEADING IN BUFFER.
         LR    GR1,GR3                 IOB ADDRESS.
         SYNADAF ACSMETH=EXCP,PARM1=(1)
         MVC   MESS+22(78),49(GR1)     MOVE SYNAD MESS TO BUFFER SM4350
         SYNADRLS
         BAL   GR9,MSGWRT1             WRITE OUT I/O ERROR MSG.
         LR    GR14,GR7                RESTORE RETURN ADDRESS. @ZA06534
         LA    GR9,BLOCKS              REG 9 MAY HAVE BEEN     @ZA06534
*                                      DESTROYED BY ERROR RTN. @ZA06534
         EJECT
UNUSABLE EQU   *
         BAL   GR4,WTOR                 TELL OPER TO VARY UNIT  YL02912
*                                       OFFLINE.                YL02912
         LA    GR3,DDNAME2             DDNAME FOR MESSAGE.
         BAL   GR4,MSGWRTA             GO TO SET UP AND PRINT MESSAGE.
         OC    COPYPTR(4),COPYPTR      ANY COPIES.
         BZ    FINAL4                  NO--BRANCH.
         USING COPYBLK,GR3
         L     GR3,COPYPTR             PTR TO 1ST OR ONLY COPY BLK.
UNUSE    BAL   GR4,MSGWRTA             GO TO SET UP AND PRINT MSG.
         OC    CCOPYPTR(4),CCOPYPTR    MORE COPIES.
         BZ    FINAL4                  NO--BRANCH.
         L     GR3,CCOPYPTR            YES-PTR TO NEXT COPY BLK.
         B     UNUSE                   CONTINUE PROCESSING.
         SPACE
         USING COPYBLK,GR8                                      YL02912
WTOR     EQU   *                                                YL02912
         L     GR3,TUCBPTR              GET PRIME TODD UCB      YL02912
         BAL   GR9,WRTWTOR              TELL OPER PACK IS BAD.  YL02912
         OC    COPYPTR(L4),COPYPTR      ANY COPIES ?            YL02912
         BCR   8,GR4                    NO, EXIT                YL02192
         L     GR8,COPYPTR              PICKUP COPY BLK ADDR    YL02129
         L     GR3,CUCBPTR              LOAD COPY UCB ADDR      YL02192
WRTOP    BAL   GR9,WRTWTOR              TELL OPER AGAIN         YL02192
         OC    CCOPYPTR(L4),CCOPYPTR    MORE COPIES ?           YL02192
         BCR   8,GR4                    NO, EXIT                YL02192
         L     GR8,CCOPYPTR             PICKUP COPY BLK ADDR    YL02129
         B     WRTOP                    WRITE OPER AGAIN        YL02129
MSGWRTA  LA    GR1,MESS30              MESSAGE 830.
         BAL   GR9,BUILD               GO TO SET UP MSG.
         MVC   0(8,GR1),0(GR3)         DDNAME TO MESSAGE.
         BAL   GR9,MSGWRT1             GO TO PRINT MSG.
         BR    GR4                     RETURN TO CALLER.
         USING UCB,GR3                                          YL02912
WRTWTOR  EQU   *                                                YL02912
         MVC   RESTMSG+NAMEOFF,UCBNAME GET UCB NAME             YL02912
RESTMSG  WTOR      'IEH856D  RESTORE HAS FAILED FOR CUU, DEVICE SHOULD *
               BE VARIED OFFLINE.',                                    *
               REPLY,1,DSKECB,ROUTCDE=(4),DESC=(2)             YL02912
         WAIT  1,ECB=DSKECB        WAIT FOR REPLY              @ZA16473
         XC    DSKECB,DSKECB       CLEAR ECB                   @ZA16473
         BR    GR9                      RETURN                  YL02192
         DROP  GR3
         DROP  GR8
         SPACE
         EJECT
         SPACE 1
BUILD    LINK  EP=IEHDMSGB
         BR    GR9                     RETURN.
         SPACE 2
MSGWRT1  EQU   *
         LINK  EP=IEHDPRNT              WRITE OUT THE MESSAGE    M0543
         BR    GR9 RETURN               RETURN                   M0543
         SPACE
VOLCHK   EQU   *                                                 M0543
         CLI   VOLNUMB,ONE             MORE THAN 1 VOLUME      @ZA01235
*                                      SPECIFIED IN JCL        @ZA01235
         BH    EOV1                    YES,PROCESS NXT TAPE    @ZA01235
         L     GR3,16                   GET CVT POINTER          M0543
         L     GR3,0(GR3)               GET TCB POINTER          M0543
         L     GR3,4(GR3)               GET CURRENT TCB          M0543
         L     GR3,12(GR3)              GET TIOT POINTER         M0543
         MVC   MESS48+JNOFFS(8),0(GR3)  PUT JOB NAME IN MESSAGE  OX1801
         MVC   MESS48+SNOFFS(8),8(GR3)  PUT STEP NAME IN MESSAGE OX1801
         L     GR8,FUCBPTR             LOAD FROM UCB ADR       @ZA01202
         MVC   MESS48+UNOFFS(3),13(GR8) PUT UNIT NAME IN MSG   @ZA01202
MESS48   WTOR  'IEH848D  IS ANOTHER TAPE REQUIRED FOR THIS RESTORE JOB?*
               REPLY Y OR N.    JJJJJJJJ,SSSSSSSS,UUU',ANSW,1,         *
               TAPECB,ROUTCDE=(3),DESC=(2)                     @ZA01202
         TM    TAPECB,COMPLETE         ANSWER TO MSG.            A21395
         BO    ANSWCHK                 YES-CHECK ANSWER.         A21395
         WAIT  ECB=TAPECB              NO-WAIT FOR REPLY.        A21395
ANSWCHK  EQU   *                                                 A21395
         MVI   TAPECB,OFF              CLEAR ECB STATUS BYTE.    A21395
         CLI   ANSW,YES                ANOTHER TAPE.             A21395
         BNE   CHECKNO                  NO, CHECK OTHER RESPONSE XM6320
         LA    GR1,MESS50               NO, SETUP ERROR MSG      XM6320
         BAL   GR9,BUILD                GET PROPER MSG           XM6320
         MVC   0(8,GR1),DDNAME1         MOVE DDNAME TO MSG       XM6320
         B     MSGWRT                   GO WRITE MSG             XM6320
CHECKNO  EQU   *                                                 XM6320
         CLI   ANSW,NO                 ONLY ONE TAPE.            A21395
         BNE   VOLCHK                  REWIRTE MSG.              A21395
         LA    GR1,MESS49              YES-ERROR.                A21395
         BAL   GR9,BUILD               GET PROPER MSG.           A21395
MSGWRT   EQU   *                       ALL ERRORS EXIT HERE.
         BAL   GR9,MSGWRT1             GO WRITE OUT THE MESSAGE.
FINAL4   LA    GR15,8                  SET UP THE RETURN CODE
         ST    GR15,RETCODE            SAVE THE RETURN CODE
*   EXIT TO MONITOR HERE.
FINALR2  L     GR3,PTRCFUNC            SLOT FOR THIS CURRENT FUNCTION.
         MVI   0(GR3),COMPLETE         INDICATE IT IS COMPLETE.
         TM    FLGBYT2,CPYREJEC        RACF REJECTED CPYVOLID  @G32DSPD
         BNO   FINAL3                  NO,KEEP R-CODE          @G32DSPD
         CLM   GR15,B'0001',RC4        R-CODE ALREADY G.E. 4   @G32DSPD
         BNL   FINAL3                  YES,DONT CHANGE         @G32DSPD
         LA    GR15,4                  USE R-CODE 4            @G32DSPD
FINAL3   L     GR13,RESTSAVE+4         RESTORE REGISTER 13.
         RETURN (14,12),T,RC=(15)      RESTORE/RETURN W/PROPER CODE.
         EJECT
***********************************************************************
*                                                                     *
*    DEFINED CONSTANTS.                                               *
*                                                                     *
***********************************************************************
         SPACE
F1       DC    F'1'                    USED TO INCREMENT TRACK ADDRESS.
ZERO     DC    F'0'
REPLY    DC    F'0'                     ECB FOR WTOR FOR IEH856 YL02912
DSKECB   DC    F'0'                     ECB FOR WTOR FOR IEH856 YL02912
FUNCTION DC    C'RESTORE TO'           MESSAGE FILL IN.
REELMASK DC    X'FFFFFFFE'             USED TO CHECK FOR LAST REEL TAPE
TOBIG    EQU   REELMASK                MAX CCW BYTE CNT         YM2241
EIGHT    DC    H'8'
UNUSRET  DC    F'4'                    RETURN CODE OF 4.
BUFFADDR DC    X'3E18'                 STAND ALONE D/R BUFFER ADDRESS.
PROCHDR  EQU   X'04'                   INDIC IEHDASDR HEADER   OX2864
*                                       RECORDS ARE BEING PROC. OX2864
NLBLP    EQU   X'11'                    INDIC NL OR BLP LABELS  OX2864
JNOFFS   EQU   88                      IEH848D JOBNAME OFFSET    OX1801
SNOFFS   EQU   97                      IEH848D STEPNAME OFFSET   OX1801
YES      EQU   X'E8'                   POSITIVE REPLY.           A21395
UNOFFS   EQU   106                     DISP FOR UNIT NAME      @ZA01202
NO       EQU   X'D5'                   NEGATIVE REPLY.           A21395
ONE      EQU   1                                                 XM6320
GOOD     EQU   X'7F'                   NO ERRORS ON I/O.
SACODE5  DC    X'63C24D'               CODE THAT IDENTIFIES RESTORE TP.
ON       EQU   X'FF'                   SWITCH ON.
OFF      EQU   X'00'                   SWITCH OFF.
BLANK    EQU   C' '                    BLANK CHARACTER.
NRF      EQU   X'08'                   NO RECORD FOUND INDICATOR.
EOF1     EQU   X'01'                   END-OF-FILE INDICATOR.
HEX1     EQU   X'01'                                            OX03063
SEARCH   EQU   X'31'                   SEARCH CCW COMMAND CODE
SWOFF    EQU   X'BF'                   SET RPS SWITCH OFF
D1       EQU   1                       DISP OF 1
EQ       EQU   8                       EQUAL CONDITION.
L8       EQU   8                       LENGTH OF 8
K6       EQU   6                       DISPLACEMENT CONSTANT.    S20201
K16      EQU   *                       DISPLACEMENT CONSTANT.    S20201
K28      EQU   *                       DISPLACEMENT CONSTANT.    S20201
RPSFEAT  EQU   X'40'                   RPS FEATURE SWITCH
D16      EQU   16                       DISPL IN TRK-IMAGE REC  SA53319
X07      EQU   X'07'                    TRK-IMAGE SEEK CMD      SA53319
T32      EQU   32                       OFFSET INTO DEB TO UCB  SA57293
ZEUS1    EQU   6                        2305-1 UCB DEV TYPE     SA57293
ZEUS2    EQU   7                        2305-2 UCB DEV TYPE     SA57293
L4       EQU   4                                                 A30548
VOL1L    EQU   96                       VOL1 RECORD LENGTH      YL02912
RDHA     EQU   X'1A'                    READ HOME-ADDRESS CMD   YL02912
CCSILI   EQU   X'60'                    CCW CMD-CHNG AND SILI   YL02912
SILI     EQU   X'20'                    CCW SILI BIT MASK       YL02912
ALTRK    EQU   X'01'                    HOME ADDR FLAG FOR AN   YL02912
*                                       ALTERNATE TRACK.        YL02912
NAMEOFF  EQU   48                       IEH856 UCBNAME OFFSET   YL02912
VTCDISP  EQU   11
TWO      EQU   2
L5       EQU   5
L6       EQU   6
N0       EQU   0
N4       EQU   4
N5       EQU   5
UNITTYP  EQU   19                       UNITTYPE OFFSET IN UCB @ZA04433
NRFOPE   EQU   X'09'                   NRF/OPER INCOMPL IND    @ZA07406
DWORDFF  DC    X'FFFFFFFF'
IOTAB    DC    C'0123456789ABCDEF'
L9       EQU   9
FULL     EQU   X'F0'
ALTER    EQU   82
MSGCON   DC    C'82,'
RC8      DC    X'08'                     TEST RACF RETURN CODE @G32DSPD
RC4      DC    AL1(4)                    TEST RACF RETURN CODE @G32DSPD
COMMA    EQU   C','
PERIOD   EQU   C'.'
         EJECT
***********************************************************************
*                                                                     *
*   TABLE OF UCB DEVICE TYPE CODES.                                   *
*                                                                     *
***********************************************************************
         SPACE
CODES    DC    X'05'                   2321 UCB DEVICE TYPE CODE.
         DC    X'01'                   2311
         DC    X'08'                   2314
         DC    X'04'                   2302
         DC    X'03'                   2303
         DC    X'02'                   2301
         DC    X'06'                   2305-1
         DC    X'07'                   2305-2
         DC    X'00'                   NOT USED
         DC    X'09'                   3330
         DC    X'0A'                   3340
         DC    X'0B'                   MADRID(3350)            MADRID
         DC    X'0C'                   UNUSED DEVICE TYPE
         DC    X'0D'                   3330-1
D0       EQU   0                        ZERO DISPL.             XL03145
ICEBERG  EQU   X'0D'                    UCB DEVICE TYPE         XL03145
MERLN    EQU   X'09'                    MERLIN DEVICE TYPE      XL03145
DOSCON   EQU   X'80'                    FORMAT 4 DOS CONTAM BIT XL03145
D14      EQU   14                       FORMAT 4 DSCB OFFSET    XL03145
D22      EQU   22                       DISPL TO WINCHESTER     XL03145
*                                       MODEL NO.               XL03145
WINCH    EQU   X'0A'                    3340 DEVICE TYPE.       XL03145
L2       EQU   2                                                XL03145
D18      EQU   18                       F4 DSCB CYL OFFSET      XL03145
SACODE4  DC    X'63B24D'               CODE THAT IDENTIFIES RESTORE TP.
         EJECT
***********************************************************************
*                                                                     *
*        VOLID RETAIN CCW'S                                           *
*                                                                     *
***********************************************************************
         SPACE
SRCHKEYR CCW   X'31',SRKEY,X'60',5      SEARCH ID EQ             M2888
         CCW   8,SRCHKEYR,0,0                                    M0640
RDVOLSER CCW   X'00',0,X'20',92         READ/WRITE VOL SER       M6350
TAPEREAD CCW   2,0,X'20',24            USED TO READ IN CONTROL RECORD.
BACKTAPE CCW   X'27',0,X'30',1         BACKSPACE 1 TAPE RECORD   A46379
TAPECHK  CCW   X'02',0,X'30',1         FWD SPACE 1 TAPE RECORD  VS08412
         SPACE
SETCCW   CCW   X'23',F1,X'40',1         SET SECTOR ZERO
SECTIC   CCW   8,0,0,0                                           S20201
         SPACE
READVTOC CCW   X'31',0,X'60',5         SEARCH ON RECORD 1 OF VTOC.
         CCW   8,READVTOC,0,0          REPEAT UNTIL FOUND.
RDVDATA  CCW   6,0,X'20',96            READ FORMAT 4 DATA.
RHA      CCW   X'1A',0,X'20',5          READ HA OF VOL1 TRK     YL02912
READR0   CCW   X'16',0,X'30',16        READ-BACK CHECK R0 ON
*                                        OVERFLOW TRACKS.
         SPACE
***********************************************************************
*                                                                     *
*   DEFINED STORAGE.                                                  *
*                                                                     *
***********************************************************************
         SPACE
TAPECB   DC    F'0'                    WAIT OR COMPLETION BITS.  A21395
RESTSAVE DS    18F                     SAVE AREA FOR CALLED ROUTINES.
ADDRBUFF DC    F'0'
CCHHADDR DS    1F                      IPL TRACK ADDRESS.
RETCODE  DC    F'0'                    RETURN CODE SAVE AREA.
ANSW     DS    CL1                     OPERATOR REPLY AREA.      A21395
SRKEY    DC    X'0000000003'           SEARCH ARGUMENT
REPLYECB DS    1F
RACVOL   DS    CL6                     VOLID FOR RACHECK       @G32DSPD
         TITLE 'IEHDREST - MAINT. AREA '
         SPACE 2
***********************************************************************
*           MAINTENANCE AREA - PATCH SPACE                            *
*                                                                     *
MAINT    DC    10CL10'PATCH'     EBCDIC FOR EYEBALLING DUMP
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
         SPACE  4
*******************  END OF MODULE  ***********************************
         TITLE 'IEHDREST - RESTORE FUNCTION'
         EJECT
IOBLOCKS DSECT
*   RESTORE DA WRITE-OUT ECB.
DISKECB  DS    1F                      WAIT//COMPLETE BITS PLUS CODE.
         SPACE 1
*   RESTORE DA WRITE-OUT IOB.
DISKIOB  DS    0F
DISKFLG  DS    CL2                     FLAGS 1 AND 2.
DSENSE   DS    CL2                     SENSE BYTES.
DECBAD   DS    1F                      ECB ADDRESS.
DSTATUS  DS    2F                      CHANNEL STATUS.
DCCWAD   DS    1F                      CCW LIST ADDRESS.
DDCBAD   DS    1F                      DCB ADDRESS.
DRESAD   DS    1F                      RESTART ADDRESS.
DBLKCT   DS    CL2                     BLOCK COUNT INCREMENT.
DERROR1  DS    CL2                     ERROR COUNT
DSEEK    DS    2F                      MBBCCHHR.
BB       EQU   DSEEK+1                 BIN ADDRESS.
CCHH     EQU   DSEEK+3                 CYLINDER-HEAD ADDRESS.
R        EQU   DSEEK+7                 RECORD NUMBER.
         SPACE 1
*   RESTORE DA WRITE-OUT DCB.
DISKDCB  DS    18F
         SPACE 2
*   RESTORE TAPE READ-IN ECB.
TAPEECB  DS    1F                      WAIT//COMPLETE BITS PLUS CODE.
         SPACE 1
*   RESTORE TAPE READ-IN IOB.
TAPEIOB  DS    0F
TAPEFLG  DS    CL2                     FLAGS 1 AND 2.
TSENSE   DS    CL2                     SENSE BYTES.
TECBAD   DS    1F                      ECB ADDRESS
TSTATUS  DS    2F                      CHANNEL STATUS.
TCCWAD   DS    1F                      CCW LIST ADDRESS.
TDCBAD   DS    1F                      DCB ADDRESS.
TRESAD   DS    1F                      RESTART ADDRESS.
TBLKCT   DS    CL2                     BLOCK COUNT INCREMENT.
TERROR   DS    CL2                     ERROR COUNT
         SPACE 1
*   RESTORE TAPE READ-IN DCB NUMBER ONE.
TAPEDCB  DS    13F
         SPACE 1
*   CCWS TO READ-IN RESTORE TAPE.
         DS    0D                      ALIGNMENT.
TAPECCW1 DS    CL8                     USED TO READ CCW RECORD.
TAPEDAT1 DS    CL8                     USED TO READ DATA RECORD.
TAPECCW2 DS    CL8                     USED TO READ CCW RECORD.
TAPEDAT2 DS    CL8                     USED TO READ DATA RECORD.
IOBLKEND DS    0H                      END OF IOBLOCKS DSECT.
         SPACE 1
         IEHDBLKS
         EJECT
         IEHDWORK
         SPACE
VLABEL   DSECT
VOLUME   DS    CL3                     LABEL IDENTIFIER.
VOLNO    DS    CL1                     LABEL NUMBER.
SERIAL   DS    CL6                     LABEL SERIAL NUMBER.
SECURITY DS    CL1                     VOLUME SECURITY.
VTOCPTR  DS    CL10                    POINTER TO VTOC
         DS    CL20                    RESERVED.
OWNER    DS    CL10                    OWNER IDENTIFICATION.
         DS    CL29                    BLANK.
         SPACE
RBUFFER  DSECT
ZERO1    DS    CL8                     WILL CONTAIN 8 BYTES OF ZEROS.
CCWBUFF  EQU   ZERO1
L1       EQU   1                       LENGTH ATTRIBUTE
TICSW    DS    CL1                     'FF' INDICATES PREVIOUS CCW=TIC.
         DS    CL3                     NOT USED.
ADDRESS  DS    CL4                     TEMPORARY ADDRESS HOLDER.
SEEKCCW  DS    CL8                     SEEK CCW FOR STAND-ALONE.
SETMASK  DS    CL8                     SET FILE MASK FOR STAND-ALONE.
SEARIDE  DS    CL8                     SEARCH EQUAL ID CCW.
         EJECT
         ICHPRCVT                                              @ZA25515
         EJECT
CVT      DSECT
         CVT
         EJECT
UCB      DSECT
         IEFUCBOB
         EJECT
JFCB     DSECT
         IEFJFCBN
         EJECT
         DCBD  DSORG=PS
         END
