         TITLE 'IEHDIPLI-PUT STANDALONE DUMP ON TRACK ZERO'
IEHDIPLI CSECT
***********************************************************************
*
*                    FIXES THIS MODULE
*                    LATEST FIRST.
*
***********************************************************************
*
*C 64700                             SU32 ONLY                 @ZA25515
*A 88744-88756,329350                SU32 ONLY                 @ZA25515
*
*  NO DELETEION                      SU32                      @G32DSPD
*
*C 65000                             ONLY MVS                  @ZA04429
*A 64600-64700,137508                ONLY MVS                  @ZA04429
*
*                                                               YM4605
*********************************************************************
      EJECT
*FUNCTION/OPERATION                                                 *
*   THE IEHDIPLI FUNCTION OF IEHDASDR WRITES THREE TO FIVE RECORDS  *
*   ON TRACK ZERO OF AN INITIALIZED 2314, 2305, 333X, 3340,    MADRID
*   OR 3350 VOLUME.                                            MADRID
*   IF PURGE=YES IS SPECIFIED ON THE IEHDASDR CONTROL CARD          *
*   ANY PREVIOUSLY WRITTEN RECORDS PAST RECORD THREE WILL BE        *
*   OVERWRITTEN,THIS INCLUDES ANY ADDITIONAL RECORDS IN THE VOLUME  *
*   LABEL SET,IPLTEXT,IMDSADMP TEXT,ETC.  IF PURGE =NO IS           *
*   SPECIFIED(OR DEFAULTED) THE FUNCTION PERFORMS AS FOLLOWS;       *
*                                                                   *
*      IF THE TODD DEVICE IS A 2314 AND THE LABEL SET CONTAINS MORE *
*      THAN THE VOL1 RECORD,THE FUNCTION TERMINATES WITH THE        *
*      APPROPRIATE MESSAGE TO SYSPRINT. IF NO ADDITIONAL RECORDS ARE*
*      PRESENT IN THE LABEL SET, THE FUNCTION PROCEEDS.             *
*                                                                   *
*      IF THE TODD DEVICE IS 2305, 333X, 3340, OR 3350,        MADRID
*      THE FUNCTION                                            MADRID
*      REPLACES THE EXISTING IPL1 AND IPL2 RECORDS WITH USER INPUT  *
*      RECORDS 1 AND 2. USER INPUT RECORDS 3 THRU 5 FOLLOW THE      *
*      VOLUME LABEL SET.                                            *
*                                                              @G32DSPD
*   RACF AUTHORIZATION REQUIRED (UPDATE) TO PUT IPL TEXT ON    @G32DSPD
*   VOLUMES THAT ARE DEFINED TO RACF.                          @G32DSPD
*                                                                   *
*ENTRY POINT---THE ONLY ENTRY POINT IS IEHDIPLI AND CONTROL IS      *
*      ALWAYS RECEIVED FROM IEHDASDS.                               *
*                                                                   *
*EXITS----NORMAL----A SUCESSFUL COMPLETION RESULTS IN A RETURN TO   *
*      THE MONITOR WITH A RETURN CODE OF 0 AND A COMPLETE MSG IN    *
*      THE MSG DATA SET.                                            *
*EXTERNAL ROUTINES---                                               *
*      IEHDMSGB--VIA LINK                                           *
*      IEHDPRNT--VIA LINK                                           *
*                                                                   *
*********************************************************************
*   REGISTER EQUATES
GR0      EQU   0
GR1      EQU   1
GR2      EQU   2
GR3      EQU   3
GR4      EQU   4
GR5      EQU   5
GR6      EQU   6
GR7      EQU   7
GR8      EQU   8
GR9      EQU   9
GR10     EQU   10
GR11     EQU   11
GR12     EQU   12
GR13     EQU   13
GR14     EQU   14
GR15     EQU   15
WORKBASE EQU   12
BASEREG  EQU   11
         SPACE
*   DEVICE TYPE EQUATES
DA       EQU   X'20'
D2314    EQU   X'08'                    2314
D23051   EQU   X'06'                    2305-1
D23052   EQU   X'07'                    2305-2
D3330    EQU   X'09'                    3330
WINCH    EQU   X'0A'                    3340                    XM3772
D2301    EQU   X'02'                    2301
         SPACE
EXCODE   EQU   X'87'                    EXIT LIST CODE
OFOUR    EQU   X'04'                    FMT 4 DSNAME
NOEOF    EQU   X'7F'                    FLAG TO NOT WRITE EOF ON CLOSE
NOWRITE  EQU   X'08'                    DONT WRITE JFCB
DOPEN    EQU   X'10'                    SUCCESSFUL OPEN
FOUR     EQU   4                        CONSTANT 4
FOUR0    EQU   X'40'                   STATUS FOR INCORRECT LENGTH
IPLREC   EQU   24+144                   SIZE OF IPL1 & IPL2 RECORDS
THREE    EQU   3                        VALUE THREE
L8       EQU   8                        LENGTH OF 8
D3       EQU   3                        DISPLACEMENT OF 3        M4720
D7       EQU   7                        DISPLACEMENT OF 7
GOOD     EQU   X'7F'                    OH RETURN FROM EXCP
ERROFF   EQU   X'3F'                    TURNS OFF ERROR FLG IN DCBIFLGS
IENHEX   EQU   X'0A'                    VALUE HEX 10
PERMERR  EQU   X'41'                    PERMANENT EXCP ERROR
UNITCHC  EQU   X'02'                    CSW UNIT CHECK CONDITION
ONE      EQU   1
SENS08   EQU   X'08'                    NO REL FOUND SENSE
VOLVTOC  EQU   11                       DISP OF VTOC PTR IN VOL1 LABEL
FIVE     EQU   5
NAMEDISP EQU   8                        DISPL OF NAME IN MESSAGE
RET0     EQU   0                        RETURN CODE OF ZERO
RET8     EQU   8
DISPZERO EQU   0                        DISPLACEMENT ZERO
DISP1    EQU   1                       DISPLACEMENT OF 1
DISP2    EQU   2                       DISPLACEMENT OF 2
DISP19   EQU   19                       DISPLACEMENT
DISP49   EQU   49                       DISPLACEMENT
L3       EQU   3                        LENGTH 3                YM4605
L4       EQU   4                        LENGTH 4
L5       EQU   5                        LENGTH 5
L11      EQU   11                       LENGTH 11
L6       EQU   6                        LENGTH 6
L43      EQU   43                       LENGTH 43
L78      EQU   78                       LENGTH OF 78
KEYL0    EQU   X'00'                    2314 IPL3,4,5 KEY LENGTH
ATE      EQU   X'08'                    2314 WRITE CKD CCW CNT
REC4     EQU   X'04'                    RECORD NUMBER
REC5     EQU   X'05'                    RECORD NUMBER
REC6     EQU   X'06'                    RECORD NUMBER
OTHREE   EQU   X'03'                    VALUE THREE HEX
TWLV     EQU   X'0C'                    NON 2314 WRITE CKD CCW CNT
TWO      EQU   2                        VALUE TWO
SERDISP  EQU   40                       DISP OF SERIAL # IN MESSAGE
SEARDISP EQU   38                       DISPLACEMENT INTO IPL2 RECORD
*                                       OF THE SEARCH ADDRESS.
WTDATA   EQU   X'05'                    WRITE DATA COMMAND CODE
BIGREC   EQU   X'10'                    GREATER THAN 2K INPUT REC
CCSILI   EQU   X'40'                    SET CMD CHAIN
ENDCCW   EQU   X'00'                    SET TO END CCW CHAIN
CCWMASK  EQU   X'07'                    MASK TO STORE ADDR IN CCW
VOLIDOFF EQU   62                       VOLID OFFSET FOR IEH852 YM4605
UNITOFF  EQU   69                       IEH852 UCBNAME OFFSET   YM4605
JOBNOFF  EQU   74                       IEH852 JOBNAME OFFSET   YM4605
STEPOFF  EQU   84                       IEH852 STEPNAME OFFSET  YM4605
***********************************************************************
*   MESSAGE EQUATES                                                   *
*                                                                     *
***********************************************************************
MESSG6   EQU   6
MESSG5   EQU   5
MESSG10  EQU   10
MESSG13  EQU   13
MESSG14  EQU   14
MESSG34  EQU   34
MESSG99  EQU   99
MESSG70  EQU   70
MESSG71  EQU   71
MESSG72  EQU   72
MSG66I   EQU   66                       IEH866I OFFSET         @G32DSPD
         SPACE
         USING WORK,WORKBASE            SET UP WORK AREA BASE
         USING FUNCBLK,GR10             SET UP FUNCTION BLOCK BASE
         USING IEHMAIN,BASEREG          SET UP PROGRAM BASE
         SPACE
IEHMAIN  SAVE  (14,12),T,IEHDIPLI       SAVE REGISTER FOR CALLER
         LR    BASEREG,GR15             ESTABLISH PROGRAM ADDRESSABILIT
         B     APARNO                   BRANCH AROUND APAR NO  @ZA04429
         DC    C'SU32 OZ25515'          LAST FIX THIS MOD      @ZA25515
APARNO   LA    GR7,IPLISAV              SAVE AREA ADDRESS      @ZA04429
         ST    GR7,L8(GR13)             ADDR OF NEW AREA TO OLD
         ST    GR13,FOUR(GR7)           ADDR OF OLD AREA TO NEW
         LR    GR13,GR7                 LOAD SAVE AREA ADDR
         SPACE
         L     GR4,TUCBPTR              ADDR OF UCB
         USING UCB,GR4
*   CHECK FOR ACCEPTABLE DEVICE
         TM    UCBTBYT3,DA              DIRECT ACCESS DEVICE ?
         BZ    BADEVICE                 NO- PREPARE FOR ERROR RETURN
         CLI   UCBTBYT4,D23051          DEVICE A 2305-1?
         BL    NOTOKDEV                 BRANCH IF LOW          XL03145
         SPACE
DEVOK    EQU   *
         TM    SRTESTAT,SRTESYSR        IS THIS VOLUME SYSTEM RESIDENT
         BO    BADDEV                   YES-SET UP ERROR MESSAGE
***********************************************************************
*                                                                     *
*   THIS ROUTINE OPENS THE OUTPUT DATA CONTROL BLOCK. THE OPEN        *
*   IS PERFORMED ON THE FORMAT FOUR DSCB OF THE VTOC                  *
*                                                                     *
***********************************************************************
         LA    GR5,OUTDCB               OUTPUT DCB ADDRESS
         USING IHADCB,GR5
         MVC   DCBDDNAM,DDNAME2         PUT DDNAME IN DCB
         MVC   OPENLST+ONE(THREE),WRDCBAD+ONE   DCB ADDRESS TO LIST
         LA    GR9,RDBUFF               BUFFER ADDR TO READ JFCB
         ST    GR9,LIST                 STORE ADDRESS IN LIST
         MVI   LIST,EXCODE              EXIT LIST CODE
         RDJFCB MF=(E,OPENLST)
         USING JFCB,GR9
         MVI   JFCBDSNM,OFOUR           SET DSNAME FIELD FOR
         MVC   JFCBDSNM+ONE(L43),JFCBDSNM  FORMAT 4 DSCB
         MVI   JFCBTSDM,NOWRITE         STOP WRITE OF JFCB AT OPEN
         OPEN  MF=(E,OPENLST),TYPE=J
         TM    DCBOFLGS,DOPEN           WAS OPEN SUCCESSFUL
         BZ    NOOPEN                   NO GIVE AN ERROR MESSAGE
         BAL   GR7,WTOR                 PROMPT OPER             YL02912
         LA    GR7,OUTIOB               IOB ADDRESS
         ST    GR7,DCBIOBAD             IN DCB
         DROP  GR9
***********************************************************************
*       THIS SECTION OF CODE TEST THE RACF AUTHORIZATION OF THE USER. *
*  THE USER MUST HAVE UPDATE AUTHORITY IN ORDER TO PUT IPL TEXT ON    *
*  THE PACK IF THE PACK IS RACF DEFINED. IF RACF IS NOT ACTIVE  IN    *
*  THE SYSTEM AUTHORIZATION CHECKS ARE NOT MADE.                      *
***********************************************************************
         L     GR9,CVTPTR              GET CVT PTR             @G32DSPD
         USING CVT,GR9                                         @G32DSPD
         L     GR9,CVTRAC              GET RACF POINTER        @G32DSPD
         DROP  GR9                                             @G32DSPD
         LTR   GR9,GR9                 TEST RACF POINTER       @G32DSPD
         BZ    NULLRACF                NULL IF RACF NOT ACTIVE @G32DSPD
         USING RCVT,GR9                DO CHECK IF RACF IS     @ZA25515
         TM    RCVTSTA1,RCVTDASD       CURRENT.                @ZA25515
         BZ    NULLRACF                NO NOT CURRENT          @ZA25515
         DROP  GR9                     YES DO RACHECK          @ZA25515
         MVC   RACVOL,UCBVOLI          GET VOLID FROM UCB      @G32DSPD
         RACHECK ATTR=UPDATE,ENTITY=RACVOL,CLASS='DASDVOL'     @G32DSPD
         CLM   GR15,B'0001',RC8        TEST FOR UNAUTHORIZED   @G32DSPD
         BE    UNAUTH                  YES,GO TERMINATE        @G32DSPD
NULLRACF EQU   *                                               @G32DSPD
         SPACE 2                                               @G32DSPD
*   READ IN THE VOLUME LABEL TO VERIFY THAT THE OUTPUT VOLUME
*   IS NOT A DOS VOLUME WITH THE VTOC ON CYL 0 TRACK 0.
         LA    GR7,RDVOL1               CCW ADDRESS
         ST    GR7,OUTCCWA              PUT IN IOB
         XC    OUTSEEK(L8),OUTSEEK      SET IOB SEEK FIELD TO
*                                       CYL 0 TRACK 0
         EXCP  OUTIOB
         WAIT  ECB=OUTECB
         CLI   OUTECB,GOOD              OK RETURN ?
         BNE   IOERR                    BRANCH IF NO
         CLC   VOL1BUF(L4),VOL1         GOOD VOL1 RECORD         M4720
         BNE   IOERR                    NO, PUT OUT ERROR MESS   M4720
         OC    VOL1BUF+VOLVTOC(L4),VOL1BUF+VOLVTOC  VTOC ON      YM3041
*                                       CYL 0, HEAD 0 ?
         BZ    DOSVOLER                 BRANCH IF ZERO
         SPACE
*   IS PURGE = YES SPECIFIED?
         TM    SEQSW+ONE,PURGE          PURGE=YES SPECIFIED?
         BNO   RDLABELS                 NO-BRANCH TO READ VOL LABEL SET
*   INITIALIZE THE SEARCH ADDRESS FOR THE IPL2 RECORD TO RECORD 4.
         MVI   SEARCHAD+FOUR,OFOUR      SET REC # TO FOUR
         MVI   SLAST+FOUR,OTHREE        SET REC # FOR OUTPUT SEARCH.
*   INSERT RECORD NUMBER IN OUTPUT CCW COUNT FIELDS
         MVI   IPLCK3R,REC4             RECORD FOUR IN CCW COUNT FIELD
         MVI   IPLCK4R,REC5             RECORD FIVE IN CCW COUNT FIELD
         MVI   IPLCK5R,REC6             RECORD SIX IN CCW COUNT FIELD
*   OPEN INPUT DCB AND GET CORE FOR INPUT RECORDS.
*   THE NUMBER OF BYTES FOR INPUT BUFFER EQUALS 3 TIMES THE
*   DCBBLKSI PLUS 24 PLUS 144, ALL ROUNDED TO AD WORD BOUNDARY.
OPENIN   EQU   *
         LA    GR5,INDCB                ADDRESS OF INPUT DCB
         MVC   DCBDDNAM(L8),DDNAME1     MOVE DDNAME INTO DCB
         OPEN  INDCB                    OPEN INPUT DCB
         TM    DCBOFLGS,DOPEN           SUCCESSFUL OPEN?
         BZ    NOOPENIN                 NO - PRINT MESSAGE
         L     GR3,GETLEN               LOAD LENGTH FOR GETMAIN
         GETMAIN R,LV=(GR3)
         LR    GR6,GR1                  SAVE BUFFER ADDRIN GR6
         SR    GR3,GR3                  INITIALIZE FOR RECORD COUNT
         ST    GR1,COREADR              SAVE ADDRESS OF GOTTEN CORE
         BAL   GR9,GETIN                BRANCH TO READ 1ST REC
         CLC   DCBLRECL,TWFOUR+DISP2    LENGTH = 24?
         BNE   LENERR                   NO-BRANCH-WRONG LENGTH
         STCM  GR1,CCWMASK,ADDR1+DISP1  STORE DATA ADDR IN CCW
         AH    GR6,DCBLRECL             ADD REC LENGTH TO BUFFER PTR.
         BAL   GR9,GETIN                GET RECORD 2.
         CLC   DCBLRECL,ONE44           LENGTH = 144
         BNE   LENERR                   NO-BRANCH-WRONG LENGTH
         STCM  GR1,CCWMASK,ADDR2+DISP1  STORE DATA ADDR IN CCW
         MVC   SEARDISP(L5,GR1),SEARCHAD MOVE SEARCH ADDR TO IPL2
         AH    GR6,DCBLRECL             ADD REC LENGTH TO BUFFER PTR
         BAL   GR9,GETIN                READ 3RD RECORD.
         ST    GR1,ADDR3                STORE DATA ADDR IN CCW.
         AH    GR6,DCBLRECL             ADD REC LENGTH TO BUFFER PTR
         MVC   DLEN3,DCBLRECL           MOVE REC LENGTH INTO OUTPUT CCW
         MVC   IPLCK3L,DCBLRECL         MOVE REC LENGTH TO OUTPUT COUNT
         MVI   FLAG3,CCSILI             SET CC IN CCW
         XC    LARGREC,LARGREC          SET FLAG TO ZERO
         CLC   DCBLRECL,TWOK            INPUT REC > 2048 BYTES?
         BNH   GETFOUR                  BRANCH IF LOW OR EQ
         OI    LARGREC,BIGREC           SET 2 REC MAX FLAG IF HIGH
GETFOUR  EQU   *
         BAL   GR9,GETIN                GET 4TH RECORD
         ST    GR1,ADDR4                STORE DATA ADDR IN CCW.
         AH    GR6,DCBLRECL             ADD REC LENGTH TO BUFFER PTR
         MVC   DLEN4,DCBLRECL           MOVE REC LENGTH INTO OUTPUT CCW
         MVC   IPLCK4L,DCBLRECL         MOVE REC LENGTH TO OUTPUT COUNT
         MVI   FLAG4,CCSILI             SET CC IN CCW
         CLC   DCBLRECL,TWOK            INPUT REC > 2048 BYTES?
         BH    ENDIN                    PRETEND EOF AFTER 4 RECS
*                                       IF REC > 2048
         TM    LARGREC,BIGREC           WAS 2 REC SWITCH SET BY REC 4?
         BO    ENDIN                    PRETEND EOF AFTER 4 RECS IF
*                                       ANY > 2048 BYTES
         BAL   GR9,GETIN                GET 5TH RECORD
         ST    GR1,ADDR5                STORE DATA ADDR IN CCW
         MVC   DLEN5,DCBLRECL           MOVE REC LENGTH INTO OUTPUT CCW
         MVC   IPLCK5L,DCBLRECL         MOVE REC LENGTH TO OUTPUT COUNT
         CLC   DCBLRECL,TWOK            INPUT REC > 2048 BYTES?
         BH    LENERR                   TOO LARGE IF > 2048
WRITOUT  EQU   *
         LA    GR5,OUTDCB               DCB ADDRESS
         LA    GR9,CCWOUT               STORE CCW ADDRESS
         ST    GR9,OUTCCWA              IN IOB
         XC    OUTSEEK(L8),OUTSEEK      INIT IOB SEEK TO CYL 0 HEAD 0
         L     GR4,TUCBPTR              LOAD UCB ADDR OF O/P DEVICE
         CLI   UCBTBYT4,D2314           THIS A 2314 DEVICE
         BE    SET2314                  YES, BRCH
         MVI   IPLCHKL3,REC4            SET IPL3 KEY LENGTH FLD
         MVI   IPLCHKL4,REC4            SET IPL4 KEY LENGTH FLD
         MVI   IPLCHKL5,REC4            SET IPL5 KEY LENGTH FLD
         MVI   CCWOUT3+D7,TWLV          SET IPL3 CCW CNT FLD
         MVI   CCWOUT4+D7,TWLV          SET IPL4 CCW CNT FLD
         MVI   CCWOUT5+D7,TWLV          SET IPL5 CCW CNT FLD
DOIT     EQU   *
         EXCP  OUTIOB
         WAIT  ECB=OUTECB
         CLI   OUTECB,GOOD              GOOD RETURN FROM I/O ?
         BNE   IOERR                    NO-BRANCH
FINISH   EQU   *                        SET UP SUCCESSFUL COMPLETION
*                                       MESSAGE
         LA    GR1,MESSG6               MESSAGE NUMBER
         BAL   GR9,MSGBLD              GO BUILD MESSAGE
         MVC   0(L8,GR1),DDNAME2        PUT DDNAME IN MESSAGE
         MVC   SERDISP(L6,GR1),UCBVOLI    PUT SERIAL NUMBER IN MESSAGE
         L     GR4,TUCBPTR              ADDRESS OF UCB
         MVC   MESS+NAMEDISP(NAMELEN),NAME MODULE NAME IN MESSAGE
         LA    GR9,GOODRTN
         B     MSGPRNT                  GO PRINT MESSAGE
         EJECT
***********************************************************************
*        THE FOLLOWING ROUTINE WILL PROMPT THE OPERATOR TO
*        ALLOW PROCESSING TO CONTINUE.
***********************************************************************
WTOR     EQU   *                                                YL02912
         USING UCB,GR3
         L     GR3,TUCBPTR              GET TODD UCB ADDR       YL02192
         MVC   PUTMSG+VOLIDOFF(L6),SRTEVOLI VOLID TO MESS 852   YM4605
         MVC   PUTMSG+UNITOFF(L3),UCBNAME   UNIT ADDR TO MSG    YM4605
         L     GR3,CVTPTR               GET CVT ADDR            YL02912
         USING CVT,GR3
         L     GR3,CVTTCBP              GET CURRENT TCB ADDR    YL02912
         L     GR3,L4(GR3)              INCRE TO CURRENT TCB    YL02912
         USING TIOT,GR3
         L     GR3,TIOTOFF(GR3)         GET TIOT PTR            YL02912
         MVC   PUTMSG+JOBNOFF(L8),TIOCNJOB JOBNAME TO MSG        YM4605
         MVC   PUTMSG+STEPOFF(L8),TIOCSTEP MOVE STEPNAME TO MSG  YM4605
         DROP  GR3
PUTMSG   WTOR  'IEH852D REQUEST PERMISSION TO PUT IPL-TEXT ON VVVVVV/CU*
               U, JJJJJJJJ, SSSSSSSS',REPLY,1,DSKECB,                  *
               ROUTCDE=(4),DESC=(2)
         TM    DSKECB,COMPLETE          ANWSER YET ?            YL02192
         BO    OK                       YES, AVOID WAIT         YL02192
         WAIT ECB=DSKECB
OK       EQU   *                                                YL02912
         MVI   DSKECB,X'00'             CLEAR FIRST ECB BYTE   @ZA04429
         CLI   REPLY,C'U'               OPERATOR SAY USE IT ?   YL02192
         BE    XIT7                     YES, RETURN ON REG 7    YL02192
         CLI   REPLY,C'T'               OPER SAY DONT USE ?     YL02192
         BNE   PUTMSG                   RE=ISSUE MSG            YL02192
         B     SETCODE                  SET RC=8                YL02912
XIT7     BR    GR7                      EXIT                    YL02912
SET2314  EQU   *
         MVI   IPLCHKL3,KEYL0           SET IPL3 KEY LENGTH FLD
         MVI   IPLCHKL4,KEYL0           SET IPL4 KEY LENGTH FLD
         MVI   IPLCHKL5,KEYL0           SET IPL5 KEY LENGTH FLD
         MVI   CCWOUT3+D7,ATE           SET IPL3 CCW CNT FLD
         MVI   CCWOUT4+D7,ATE           SET IPL4 CCW CNT FLD
         MVI   CCWOUT5+D7,ATE           SET IPL5 CCW CNT FLD
         B     DOIT                     GO ISSUE EXCP
MSGBLD   EQU   *
         LINK  EP=IEHDMSGB              GO CONSTRUT MESSAGE
         BR    GR9                      RETURN
MSGPRNT  EQU   *
         LINK  EP=IEHDPRNT              GO PRINT MESSAGE
         BR    GR9                      RETURN
***********************************************************************
*                                                                     *
*   READ THE VOLUME LABEL SET AND DETERMINE HOW MANY                  *
*   LABELS IT CONTAINS. THEN SET THE SEARCH ADDRESS                   *
*   OF THE OUTPUT CCW CHAIN TO THE LAST VOLUME LABEL IN THE           *
*   SET.                                                              *
*                                                                     *
***********************************************************************
RDLABELS EQU   *
         LA    GR9,RDVOLX               ADDRESS OF CCW CHAIN     M4720
         ST    GR9,OUTCCWA              STORE IN IOB
         XC    OUTSEEK(L8),OUTSEEK      INIT IOB SEEK FIELD TO ZEROS
         MVI   OUTSEEK+D7,REC4          SET SEEK ADDR FOR VOL2-8 M4720
         LA    GR9,VOL1                 SETUP VOLX BASE REG      M4720
         USING VOLX,GR9                 ISSUE USING FOR DSECT    M4720
*        VOL1 - VOL8 CONSTANTS MUST BE IN CONSEQUTIVE LOCATIONS  M4720
SEEKVOLX EQU   *                                                 M4720
         LA    GR9,L4(GR9)              INCRE VOLX BASE REG      M4720
         EXCP  OUTIOB
         WAIT  ECB=OUTECB
         CLI   OUTECB,GOOD              OK RETURN ?
         BE    TSTVOLX                  BRANCH IF YES.           M4720
         CLI   OUTECB,PERMERR           PERM ERROR ?
         BE    UNITCHK                  YES, GO CHK FOR UNIT CHK M4720
         B     IOERR                    NO - MUST BE UNHANDLEABLE
TSTVOLX  EQU   *                                                 M4720
         CLC   VOL1BUF(L4),VOLX         GOOD VOL2-8 LABEL        M4720
         BNE   SETCCW2                  NO, BRCH                 M4720
         CLC   VOLX(L4),VOL8            THIS THE LAST USER LAB   M4720
         BE    SETCCW1                  YES, BRCH                M4720
         SR    GR7,GR7                  ZERO WORK REG            M4720
         IC    GR7,OUTSEEK+D7           GET # OF LAST REC READ   M4720
         LA    GR7,1(GR7)               INCRE IT BY 1            M4720
         STC   GR7,OUTSEEK+D7           UPDATE SEEK ADDR         M4720
         B     SEEKVOLX                 GO READ NEXT VOL2-8 REC  M4720
         DROP  GR9                                               M4720
UNITCHK  EQU   *                                                 M4720
         TM    OUTSTAT+FOUR,UNITCHC     DID UNIT CHECK OCCUR?
         BNO   CHECKMOR                 NO - CHECK FOR WRONG LENGTH
         TM    OUTSENS+ONE,SENS08       NO RECORD FOUND?         M4720
         BO    SETCCW2                  YES - SET OUTPUT CCW'S
         B     IOERR                    UNSOLVABLE PROBLEM
CHECKMOR EQU   *
         TM    OUTSTAT+FIVE,FOUR0       WRONG LENGTH RECORD?
         BNO   IOERR                    BRANCH TO I/O ERROR ROUT IF NO.
SETCCW2  EQU   *
         NI    DCBIFLGS,ERROFF          TURN OFF PERM ERROR FLAG
         SR    GR7,GR7                  ZERO WORK REG            M4720
         IC    GR7,OUTSEEK+D7           GET LAST REC SOUGHT      M4720
TST2314  EQU   *                                                XM6295
         S     GR7,FFOUR                SUBTRACT 4 TO FIND DISPL M4720
*                                       PAST VOL1 RECORD         M4720
         CLI   UCBTBYT4,WINCH           3340 DEVICE ?           XM3772
         BNE   T2314                    NO, BRCH                XM3772
         CH    GR7,TWOO                 DO WE HAVE ONLY TWO     XM3772
*                                       USER VOLUME LABELS ?    XM3772
         BH    TOMANY                   NO, MORE THAN TWO       XM3772
         B     SETCCW2A                 ONLY 2 USER LABELS, BRCH XM3772
T2314    EQU   *                                                XM3772
         CLI   UCBTBYT4,D2314          VOLUME A 2314 ?
         BNE   SETCCW2A                NO, CONTINUE
         LTR   GR7,GR7                 YES, ANY ADDITIONAL LABELS ?
         BNZ   TOMANY                  BRANCH TO ERROR IF YES
SETCCW2A LA    GR7,FOUR(GR7)            ADD 4 TO ALLOW FOR IPL1, IPL2,
*                                       AND VOL1 RECORDS AND POINT
*                                       PAST THE LAST LABEL IN THE
*                                       LABEL SET.
         SPACE
SETCCW3  EQU   *
         STC   GR7,SEARCHAD+FOUR        SAVE REC # TO BE PUT IN
*                                       SEARCH ADDRESS OF IPL2 RECORD.
         BCTR  GR7,GR0                  SUBTRACT ONE FROM REC # TO
*                                       POINT TO LAST LABEL IN VOL
*                                       LABEL SET.
         STC   GR7,SLAST+FOUR           STORE REC # IN SEARCH ADDR
*                                       FOR OUTPUT CCW'S
         LA    GR7,ONE(GR7)             CALC REC # OF 3RD OUTPUT REC
         STC   GR7,IPLCK3R              STORE IN COUNT FIELD
         LA    GR7,ONE(GR7)             CALC REC # OF 4TH OUTPUT REC
         STC   GR7,IPLCK4R              STORE IN COUNT FIELD
         LA    GR7,ONE(GR7)             CALC REC # OF 5TH OUTPUT REC
         STC   GR7,IPLCK5R              STORE IN COUNT FIELD
         B     OPENIN                   BRANCH TO OPEN INPUT DCB
*   CONTROL BRANCHES HERE IF LABEL SET HAS EIGHT RECORDS.
SETCCW1  EQU   *
         LA    GR7,L11                  REC NO. FOR IPL2 SEARCH ADDR
         B     TST2314                  GO TEST FOR 2314        XM6295
GOODRTN  EQU   *
         LA    GR15,RET0                LOAD RETURN CODE
         L     GR3,PTRCFUNC             PICK UP PTR TO CURRENT FUNC.
         MVI   DISPZERO(GR3),COMPLETE   SET COMPLETE
         B     ENDUP                    GO TO CLOSE
IOERR    EQU   *
         LA    GR1,MESSG13              I/O ERROR MESSAGE #.
         BAL   GR9,MSGBLD               BUILD MESSAGE
         SYNADAF ACSMETH=EXCP,PARM1=OUTIOB
         MVC   MESS+DISP19(L78),DISP49(GR1) PUT I/O INFO IN BUFFER
         SYNADRLS
ERRPRNT  BAL   GR9,MSGPRNT              GO PRINT ERROR MESSAGE
SETCODE  LA    GR15,RET8                SET UP RETURN CODE ERROR
         LA    GR2,RET8                 SET RETURN CODE
         LA    GR5,INDCB                INPUT DCB ADDRESS
         TM    DCBOFLGS,DOPEN           IS INPUT DCB OPEN?
         BNO   CLOSOUT                  IF NOT , DONT CLOSE IT
ENDUP    EQU   *
         LR    GR2,GR15                 SAVE RETURN CODE
         L     GR3,GETLEN               NUMBER OF BYTES TO FREE
         L     GR6,COREADR              ADDRESS OF GOTTEN CORE
         FREEMAIN R,LV=(GR3),A=(GR6)
CLOSIN   CLOSE INDCB                    CLOSE INPUT DCB
CLOSOUT  LA    GR5,OUTDCB               POINT TO OUTPUT DCB
         NI    DCBWRITE,NOEOF           PREVENT WRITE OF EOF
         CLOSE OUTDCB
         SPACE
         LR    GR15,GR2                 RESTORE RETURN CODE
GOBACK   L     GR13,IPLISAV+FOUR
         RETURN (14,12),T,RC=(15)       RETURN WIHT PROPER CODE
*   GET A RECORD FROM THE INPUT DATA SET -- MOVE MODE.
*   REGISTER 6 MUST POINT TO THE INPUT AREA. REG 3 COUNTS RECORDS.
*   REGISTER 9 IS THE RETURN REGISTER.
         SPACE
GETIN    EQU   *
         GET   INDCB,(GR6)
         LA    GR3,ONE(GR3)             INCREMENT INPUT REC COUNT
         BR    GR9                      RETURN TO CALLER.
*  END OF DATA ROUTINE IS BRANCHED TO WHEN EOF IS REACHED ON
*   INPUT.
*   ON ENTRY REGISTER 3 CONTAINS THE COUNT OF INPUT RECORDS
         SPACE
ENDIN    EQU   *
         CH    GR3,HTHREE               MINIMUM 3 RECORDS ?
         BL    LENERR                   NO - BRANCH - TOO FEW RECORDS
         BNE   INIT5                    START INIT OF TRACK ZERO
         MVI   FLAG3,ENDCCW             SET TO STOP OUTPUT AFTER 3 REC
         B     WRITOUT                  GO WRITE OUTPUT RECS
INIT5    EQU   *
         MVI   FLAG4,ENDCCW             SET TO STOP OUTPUT AFTER REC 4
         B     WRITOUT                  GO WRITE TRACK 0
NOOPEN   EQU   *
         LA    GR1,MESSG5               BAD OPEN  ON OUTPUT DCB
         B     ERRSET                   GO TO ERROR
NOOPENIN EQU   *
         LA    GR1,MESSG5               MESSAGE NUMBER
         BAL   GR9,MSGBLD               GO BUILD MESSAGE
         MVC   DISPZERO(L8,GR1),DDNAME1 PUT DDNAME IN MESSAGE
PRINTERR BAL   GR9,MSGPRNT              GO PRINT MESSAGE
         LA    GR2,RET8                 RETURN CODE
         B     CLOSOUT                  CLOSE OUTPUT DCB AND RETURN
BADEVICE EQU   *
         LA    GR1,MESSG10              INCORRECT DEVICE
ERRSET   EQU   *
         BAL   GR9,MSGBLD               GO BUILD MESSAGE
         MVC   DISPZERO(L8,GR1),DDNAME2 PUT DDNAME IN MESSAGE
         B     PRINTMSG                 PRINT MSG
BADDEV   EQU   *
         LA    GR1,MESSG14              DEVICE IS SYTEM RESIDENCE
         BAL   GR9,MSGBLD               GO BUILD MESSAGE
         MVC   DISPZERO(L8,GR1),DDNAME2 PUT DD NAME IN MESSAGE
         B     PRINTMSG                 GO PRINT MESSAGE
NOTOKDEV EQU   *                        DEVICE NOT SUPPORTED
         LA    GR15,MESSG34             LOAD MESSAGE #
         BAL   GR9,MSGBLD               GO BUILD MESSAGE
         MVC   DISPZERO(L8,GR1),DDNAME2 PUT DD NAME IN MESSAGE
         B     PRINTMSG                 GO PRINT MESSAGE
PRINTMSG EQU   *
         BAL   GR9,MSGPRNT              GO PRINT MESSAGE
         LA    GR15,RET8                RETURN CODE
         B     GOBACK                   BRANCH TO RETURN
TOMANY   EQU   *                        USER HAS >1 LABEL ON 2314
*                                       AND PURGE NOT REQUESTED
         LA    GR1,MESSG71             LOAD MESSAGE NUMBER
         BAL   GR9,MSGBLD               GO BUILD MESSAGE
         MVC   DISPZERO(L8,GR1),DDNAME2 MOVE DDNAME TO MESSAGE
         B     PRINTERR                 GO PRINT MESSAGE
LENERR   EQU   *                       INPUT NOT MIN 3 RECS OR
*                                       WRONG LENGTH RECORDS
         LA    GR1,MESSG70             LOAD MESSAGE NUMBER
         BAL   GR9,MSGBLD              GO BUILD MESSAGE
         MVC   DISPZERO(L8,GR1),DDNAME1 PUT DDNAME IN MESSAGE
         B     ERRPRNT                 GO PRINT MESSAGE
DOSVOLER EQU   *                        DOS VOLUME HAS VTOC ON
*                                       CYL 0 TRK 0.
         LA    GR1,MESSG72              MESSAGE NUMBER
         BAL   GR9,MSGBLD               GO BUILD MESSAGE
         MVC   DISPZERO(L8,GR1),DDNAME2 PUT DDNAME IN MESSAGE
         B     PRINTERR                 GO PRINT MESSAGE
* RACF AUTHORIZATION HAS FAILED PRINT MESSAGE AND TERMINATE    @G32DSPD
UNAUTH   LA    GR1,MSG66I              SET FOR MSG IEH866I     @G32DSPD
         BAL   GR9,MSGBLD              GO GET MESSAGE TEXT     @G32DSPD
         MVC   0(L'PUTIPLNM,GR1),PUTIPLNM  INDICATE PUTIPL     @G32DSPD
         MVC   20(L'DDNAME2,GR1),DDNAME2  INDICATE DDNAME      @G32DSPD
         B     PRINTMSG                GO PRINT MESSAGE        @G32DSPD
TWOO     DC    H'2'                     NO. OF ALLOWABLE USER   XM3772
*                                       VOLUME LABELS FOR 3340. XM3772
LIST     DS    0F                       FOR REAN IN JFCB
         DC    X'87'                   LIST
         DC    AL3(0)                  LIST
OPENLST  RDJFCB (,(OUTPUT)),MF=L       PARMAMETER LIST FOR OPEN
RACVOL   DS    CL6                      VOLSER TO RACHECK      @G32DSPD
RC8      DC    AL1(8)                   NOT DEFINED RACHECK    @G32DSPD
PUTIPLNM DC    C'PUTIPL'                IEH866I FUNCTION TEXT  @G32DSPD
         SPACE
*   CHANNEL PROGRAM TO READ IN VOLUME LABEL OF OUTPUT VOLUME.
         DS    0D
RDVOL1   CCW   X'31',VOL1ID,X'60',5     SEARCH ID ON VOL1 RECORD M4720
         CCW   X'08',RDVOL1,0,0         TIC
         CCW   X'06',VOL1BUF,0,80       READ VOLUME LABEL RECORD
         SPACE
*   CHANNEL PROGRAM TO LOCATE LAST LABEL OF VOLUME LABEL SET ON
*   TRACK 0. A MAXIMUM OF 8 ARE ALLOWED
         DS    0D                       ALIGN ON DOUBLE WORD
RDVOLX   CCW   X'31',OUTSEEK+D3,X'60',5 SEARCH ID ON VOL2-8 REC  M4720
         CCW   X'08',RDVOLX,0,0         TIC                      M4720
         CCW   X'06',VOL1BUF,X'20',4    READ VOLUME LABEL RECORD M4720
         SPACE
OUTDCB   DCB   MACRF=(E),DSORG=PS,IOBAD=OUTIOB,                        X
               DEVD=DA,EOEA=P8,EXLST=LIST,SIOA=P7,PGFX=YES       YM3011
         DS    0F
TIOTOFF  EQU   12                       OFFSET TO TIOT          YL02912
REPLY    DS    F                        AREA FOR OPER REPLY     YL02192
DSKECB   DC    F'0'                     WTOR ECB FOR IEH852     YL02912
OUTECB   DC    F'0'                     ECB
OUTIOB   DS    0F                       IOB
OUTFLAG1 DC    XL1'42'                  CMD CHAIN, UNRELATED
OUTFLAG2 DC    XL1'00'                  IOB FLAG BYTE 2
OUTSENS  DC    H'0'                     SENSE BYTES
OUTECBA  DC    A(OUTECB)                ECB ADDRESS
OUTSTAT  DC    2F'0'                    CSW STATUS
OUTCCWA  DC    A(RDVOLX)                ADDR OF CCW LIST         M4720
OUTDCBA  DC    A(OUTDCB)                ADDR OF DCB
         DC    F'0'                     RESTART ADDRESS
         DC    H'1'                     BLK CNT INCREMENT
         DC    H'0'                     ERROR COUNT
OUTSEEK  DC    2F'0'                    MBBCCHHR
*   CCWS TO WRITE THREE TO FIVE RECORDS ON TRACK ZERO, CYL ZERO.
         SPACE
CCWOUT   DS    0D
         DC    X'31'                    SEARCH R1 ID EQUAL
         DC    AL3(SIDR1)               ADDR
         DC    X'60000005'              FLAGS
         DC    X'08'                    TIC
         DC    AL3(CCWOUT)              ADDR
         DC    F'0'                     DUMMY
ADDR1    DC    X'05'                    WRITE DATA
         DC    AL3(0)                   ADDR
         DC    X'40000018'              FLAGS
CCWOUT2  DC    X'31'                    SEARCH ID OF REC 2
         DC    AL3(SIDR2)               ADDR
         DC    X'60000005'              FLAGS
         DC    X'08'                    TIC
         DC    AL3(CCWOUT2)             ADDR
         DC    F'0'                     DUMMY
ADDR2    DC    X'05'                    WRITE DATA
         DC    AL3(0)                   ADDR
         DC    X'40000090'              FLAGS
CCWOUTS  DC    X'31'                    SEARCH ID OF LAST VOL LABEL
         DC    AL3(SLAST)               ADDR
         DC    X'60000005'              FLAGS
         DC    X'08'                    TIC
         DC    AL3(CCWOUTS)             ADDR
         DC    F'0'                     DUMMY
CCWOUT3  DC    X'1D'                    WRITE THIRD OUTPUT RECORD
         DC    AL3(IPLCK3)              ADDR
         DC    X'A0000008'              FLAGS
ADDR3    DC    X'1D'                    CHAIN DATA
         DC    AL3(0)                   ADDR
FLAG3    DC    X'4000'                  FLAGS
DLEN3    DC    H'0'                     DATA LENGTH
         SPACE
CCWOUT4  DC    X'1D'                    WRITE FOURTH OUTPUT RECORD
         DC    AL3(IPLCK4)              ADDR
         DC    X'A0000008'              FLAGS
ADDR4    DC    X'1D'                    CHAIN DATA
         DC    AL3(0)                   ADDR
FLAG4    DC    X'4000'                  FLAGS
DLEN4    DC    H'0'                     DATA LENGTH
         SPACE
CCWOUT5  DC    X'1D'                    WRITE FIFTH OUT PUT RECORD
         DC    AL3(IPLCK5)              ADDR
         DC    X'A0000008'              FLAGS
ADDR5    DC    X'1D'                    CHAIN DATA
         DC    AL3(0)                   ADDR
         DC    X'0000'                  FLAGS
DLEN5    DC    H'0'                     DATA LENGTH
*   COUNT AND KEY FIELDS FOR OUTPUT TO CYL 0 TRACK 0.
         SPACE
IPLCK1   DC    XL8'0000000001040018'    COUNT FIELD IPL1
IPLK1    DC    CL4'IPL1'                KEY IPL1
IPLCK2   DC    XL8'0000000002040090'    COUNT IPL2
IPLK2    DC    CL4'IPL2'                KEY IPL2
IPLCK3   DC    XL4'00000000'            CCHH
IPLCK3R  DC    X'00'                    REC NO.
IPLCHKL3 DC    X'00'                    KEY LENGTH
IPLCK3L  DC    X'0000'                  DATA LENGTH
IPLK3    DC    CL4'IPL3'                KEY VALUE FOR IPL3
         SPACE
IPLCK4   DC    XL4'00000000'            CCHH
IPLCK4R  DC    X'00'                    REC NO.
IPLCHKL4 DC    X'00'                    KEY LENGTH
IPLCK4L  DC    X'0000'                  DATA LENGTH
IPLK4    DC    CL4'IPL4'                KEY VALUE FOR IPL4
         SPACE
IPLCK5   DC    XL4'00000000'            CCHH
IPLCK5R  DC    X'00'                    REC. NO.
IPLCHKL5 DC    X'00'                    KEY LENGTH
IPLCK5L  DC    X'0000'                  DATA LENGTH
IPLK5    DC    CL4'IPL5'                KEY VALUE FOR IPL5
         SPACE
INDCB    DCB   BLKSIZE=3072,DSORG=PS,EODAD=ENDIN,                      X
               MACRF=GM,RECFM=U
NAME     DC    C'PUTIPL OF'             MODULE NAME CONSTANT
NAMELEN  EQU   *-NAME                   LENGTH OF NAME
VOL1BUF  DS    20F                      VOLUME LABEL BUFFER
VOL1ID   DC    XL5'0000000003'          ID OF VOLUME LABEL
VOL1     DC    CL4'VOL1'                KEY OF VOLUME LABEL
VOL2     DC    CL4'VOL2'                KEY OF VOL2 LABEL
VOL3     DC    CL4'VOL3'                KEY OF VOL3 LABEL
VOL4     DC    CL4'VOL4'                KEY OF VOL4 LABEL
VOL5     DC    CL4'VOL5'                KEY OF VOL5 LABEL
VOL6     DC    CL4'VOL6'                KEY OF VOL6 LABEL
VOL7     DC    CL4'VOL7'                KEY OF VOL7 LABEL
VOL8     DC    CL4'VOL8'                KEY OF VOL8 LABEL
SEARCHAD DC    XL5'00'                  SEARCH ADDRESS
IPLISAV  DS    18F                      SAVE AREA
WRDCBAD  DC    A(OUTDCB)                ADDR
GETLEN   DC    F'8000'                  LENGTH FOR GETMAIN FOR INPUT
*                                       BUFFER
SIDR1    DC    XL5'0000000001'          SEARCH ARGUMENT FOR CCW
SIDR2    DC    XL5'0000000002'          SEARCH ARGUMENT
SLAST    DC    XL5'00'                  SEARCH ARGUMENT FOR OUTPUT CCW
HEIGHT   DC    H'8'                     HALFWORD - VALUE 8
TWFOUR   DC    F'24'                    FULLWORD VALUE 24
ONE44    DC    H'144'                   HALFWORD VALUE 144
HTHREE   DC    H'3'                     HALFWORD VALUE THREE
FFOUR    DC    F'4'                     FULLWORD VALUE FOUR      M4720
HFIVE    DC    H'5'                     HALFWORD VALUE 5
LEN08    DC    H'8'                     HALFWORD VALUE 8
TWOK     DC    H'2048'                  USED FOR LRECL COMPARE
ZERODATA DC    CL8'0'                   FULLWORD
COREADR  DS    F                        SAVE ADDR OF GOTTEN CORE HERE
PATCHA   DS    50F                      PATCH AREA FOR PROGRAM
         EJECT
         IEHDBLKS
         EJECT
         IEHDWORK
         EJECT
         ICHPRCVT                                              @ZA25515
         EJECT
         IECDSECS CVT,TIOT,EXPAND=YES
UCB      DSECT
         IEFUCBOB
JFCB     DSECT
         IEFJFCBN
         DCBD  DSORG=PS
VOLX     DSECT                          FOR VOL2 - 8 CONSTANTS   M4720
         DS    CL4                                               M4720
         END
