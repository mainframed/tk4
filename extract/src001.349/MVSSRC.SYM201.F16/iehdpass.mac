   TITLE 'IEHDPASS --- INSURES PASSWORD PROTECTION  IEHDASDR UTILITY'
         COPY  LCGASMSW                                          SM4351
IEHDPASS CSECT
***********************************************************************
*                  FIXES THIS MODULE
*                     LATEST FIRST
***********************************************************************
*
*FIX FOR SERVICEING 46 DSCB/TRACK   @XA21058=@YA20902=@SA80167=@ZA32596
*
*C 51000,51300                       SU32 ONLY                 @ZA25515
*A 140510-140540                     SU32 ONLY                 @ZA25515
*C 401366-401384,728000              SU32 ONLY                 @ZA25515
*
*C 037690,037700,51100,500076        MVS ONLY                  @ZA16477
*
*C 500642,500665                     MVS ONLY                  @ZA16475
*A 500646-500655                     MVS ONLY                  @ZA16475
*
*  NO DELETIONS FOR VS2-3 SU32                                 @G32DSPD
*
*C 51200,52500,446000                        @YA13331=@XA14207=@ZA11927
*A 50500-51000                               @YA13331=@XA14207=@ZA11927
*
*  SU808 CHANGES                                               @Z40RSRB
*                                                               YM7392
*        RELEASE 21 DELETIONS                                         *
*                                                         PI0134=YM5964
*                                       OX03105 = YM3060
*1193                                                            A44112
*        RELEASE 20 DELETIONS                                         *
*1010630800                                                      M6183
*1010484000-486000                                               M4979
*1010287000,290000,349000,350000                                 A32516
*1010624000                                                      A33538
*1010396000                                                      S20201
*1010631000                                                      M5900
*        RELEASE 18 DELETIONS
*3166452900-453000,455900-457400,480000,613300                   MC0I
*        VS2 RELEASE 4 CHANGES
*A138200-138400,A286400-287600,493006-493012,564000-564600,    @Z40UAY1
*A585300-585600                                                @Z40UAY1
*STATUS CHANGE LEVEL 004
*C146200,493060                                                @Z40UAY1
*   THIS ENDS THE CHANGES FOR @Z40UAY1
*0000000000                                                    @Z40RSRJ
*                                                                     *
***********************************************************************
         EJECT
*FUNCTION/OPERATION- THIS ROUTINE PERFORMS THE FUNCTION OF            *
*   CHECKING FOR PASSWORD PROTECTED AND                        @Z40RSRB
*   RACF PROTECTED DATASETS ON VOLUMES WHICH                   @Z40RSRB
*   ARE BEING ANALYZED, FORMATTED, DUMPED FROM OR TO AND RESTORED TO. *
*   IF SUCH DATA SETS ARE FOUND, THIS ROUTINE REQUIRES THAT THE       *
*   APPROPRIATE PASSWORD(S) BE PROVIDED OR THE APPROPRIATE     @Z40RSRB
*   RACF AUTHORIZATION(S) BE HELD BEFORE ALLOWING THE          @Z40RSRB
*   FUNCTION TO CONTINUE USING THE VOLUME.                            *
*     UNEXPIRED DATA SETS ARE ALSO CHECKED FOR ON THE TO DEVICE.      *
*   INSTRUCTION TO OVERRIDE SUCH DATASETS AND USE THE VOLUME          *
*   MUST APPEAR IN THE CONTROL CARD AND THE OPERATORS REPLY TO A      *
*   CONSOLE MESSAGE IN ORDER TO ALLOW THE FUNCTION TO CONTINUE.       *
*   RACF AUTHORIZATION TO BYPASS THE ABOVE SECURITY CHECKING   @G32DSPD
*   ON EACH VOLUME IS TESTED. IF NO SUCH AUTHORIZATION IS HELD @G32DSPD
*   THE SECURITY CHECKS ARE MADE.                              @G32DSPD
*                                                                     *
*ENTRY POINTS- THE ONLY ENTRY POINT IS -IEHDPASS- AND CONTROL IS      *
*   RECEIVED FROM EITHER DUMP(IEHDDUMP), RESTORE(IEHDREST), OR        *
*   FORMAT/ANALYZE(IEHDANAL).                                         *
*                                                                     *
*INPUT- POINTERS TO A WORKAREA (REGISTER 12), TO A CONTROL BLOCK      *
*   (REGISTER 10), AND TO A BUFFER AREA (REGISTER 1).                 *
*     THE DIRECT ACCESS DEVICE BEING ANALYZED, FORMATTED, RESTORED    *
*   TO AND DUMPED FROM OR TO SERVE AS INPUT TO THIS MODULE. ALSO THE  *
*   TAPE BEING DUMPED TO, IF MAGNETIC TAPE IS USED, MAY BE INPUT TO   *
*   THIS ROUTINE.                                                     *
*                                                                     *
*EXITS- NORMAL- IF NO ERROR CONDITIONS OCCUR, -IEHDPASS- RETURNS TO   *
*   THE FUNCTION (IEHDANAL, IEHDDUMP, IEHDREST) WHICH LINKED TO IT    *
*   WITH A RETURN CODE OF ZERO.                                       *
*                                                                     *
*EXITS- ERROR- IF A NORMAL ERROR CONDITION OCCURS (ONE WHICH MAY BE   *
*   DIAGNOSED) AN ERROR MESSAGE IS WRITTEN AND A RETURN CODE          *
*   GREATER THAN ZERO IS PASSED BACK TO THE FUNCTION WHICH LINKED     *
*   TO -IEHDPASS-. IF AN ABNORMAL ERROR OCCURS A RETURN CODE GREATER  *
*   THAN ZERO IS SET BUT NO MESSAGE IS WRITTEN. RETURN IS ALWAYS TO   *
*   THE FORMAT/ANALYZE, DUMP OR RESTORE MODULE.                       *
*                                                                     *
*EXTERNAL ROUTINES- THIS ROUTINE IS ALWAYS ENTERED FROM EITHER        *
*   IEHDDUMP, IEHDREST OR IEHDANAL. MESSAGES WILL BE FORMULATED       *
*   BY IEHDMSGB AND PRINTED BY IEHDPRNT.                              *
*                                                                     *
*TABLES/WORKAREAS- UPON ENTRY REGISTERS 10 AND 12 POINT TO A          *
*   FUNCTION BLOCK AND A WORKAREA RESPECTIVELY. THEY ARE DESCRIBED    *
*   IN THE DSECTS CALLED -FUNCBLK- AND -WORK-. REGISTER 1 POINTS TO   *
*   A BUFFER AREA TO BUILD THE CHANNEL PROGRAM AND READ IN THE DSCBS. *
*                                                                     *
*   THE FOLLOWING ARE REGISTER ASSIGNMENTS.
GR0      EQU   0
GR1      EQU   1
GR2      EQU   2
GR3      EQU   3
GR4      EQU   4
GR5      EQU   5
GR6      EQU   6
GR7      EQU   7
GR8      EQU   8
GR9      EQU   9
GR10     EQU   10
GR11     EQU   11
GR12     EQU   12
GR13     EQU   13
GR14     EQU   14
GR15     EQU   15
L6       EQU   6                        VOLUME ID LENGTH       @G32DSPD
L7       EQU   7                        FUNCTION NAME LENGTH   @G32DSPD
L8       EQU   8                        MAX DDNAME LENGTH       Y02083
MESS68   EQU   68                       IEH868I MESSAGE         Y02083
SEROFFS  EQU   65                       IEH858D VOLSER OFFSET   Y02083
COPYON   EQU   1                        COPYSW=COPIES USED     @Z40RSRB
PARTIAL  EQU   0                        DUMPSW=PARTIAL DUMP    @Z40RSRB
MSG60    EQU   60                       IEH860I MSG OFFSET     @Z40RSRB
MSG64    EQU   64                       IEH864I MSG OFFSET     @G32DSPD
MESS66   EQU   66                       IEH866I MSG OFFSET     @G32DSPD
UNITOFFS EQU   25                       IEH858I UNIT-ADDR OFFSET Y02083
CHPTP    EQU   X'10'                    CHECKPOINT PROMPT ISSUED YM7392
ON       EQU   X'01'                    DONOT PROMPT OPER FOR   YM7392
*                                       UNEXPIRED DATA/SETS     YM7392
OFF      EQU   X'00'                    RESETS ON SWITCH        YM7392
JN       EQU   73                       OFFSET TO JOBNAME     @ZA16477
SN       EQU   83                       OFFSET TO STEPNAME    @ZA16477
DSIDSIND EQU   93                       FORMAT 1 DSCB OFFSET    Y02083
CHKPT    EQU   X'01'                    DSCB FLAG FOR           Y02083
*                                       CHECK/POINT RESTART D/S Y02083
BASEREG  EQU   11
VSAMID   EQU   X'08'                    FORMAT 1 VSAM FLAG      YM3060
D83      EQU   83                       OFFSET TO DSORG IN F1   YM3060
*                                       DSCB.                   YM3060
         USING FUNCBLK,10
         USING WORK,12
         USING IEHDPASS,BASEREG
         USING CCWBUFF,9
         SAVE  (14,12),T,*             SAVE REGISTERS
         LR    BASEREG,GR15            LOAD BASE REGISTER
         B     APARNO                  BRANCH AROUND APAR NO   @ZA11927
         DC    C'SU32'                 SU08 APPLIED            @ZA25515
         DC    C'OZ32596 '             LAST FIX THIS MODUL     @ZA32596
         DC    C'&SYSDATE'                                     @Z40RSRB
         DS    0H                                              @Z40RSRB
APARNO   LA    GR2,PASSSAVE            SAVE AREA ADDRESS       @ZA11927
         ST    GR2,8(GR13)             ADDRESS OF NEW AREA TO OLD
         ST    GR13,4(GR2)             ADDRESS OF OLD AREA TO NEW
         LR    GR13,GR2                LOAD SAVE AREA ADDRESS
         LA    GR1,0(GR1)              SELECT OUT ADDRESS ONLY IN REG
         LR    GR9,GR1                 PICK UP POINTER TO BUFFER AREA
*                                         FOR CHANNEL PROG AND DSCBS
         MVI   TSTDSCB,X'00'           CLEAR SWITCH           A@ZA32596
***********************************************************************
*  THIS ROUTINE BUILDS THE CHANNEL PROGRAMS NEEDED TO READ IN THE     *
*     DSCBS ONE TRACK AT A TIME. THE CCWS ARE PLACED IN A VARIABLE    *
*     LENGTH BUFFER AREA WHICH IS POINTED TO BY REGISTER 1. WORK      *
*     AREAS ARE ALSO INITIALIZED.                                     *
***********************************************************************
         USING CONSTANT,3
         L     GR3,IODEVCON            PICK UP POINTER TO CONSTANT AREA
         SR    GR0,GR0                 CLEAR REGISTER.
         IC    GR0,DSCBTRK             PICK UP NUMBER DSCBS PER TRACK
         ST    GR0,DSCBNO              SAVE NUMBER DSCBS PER TRACK
         DROP  3
         LR    GR15,GR0                COMPUTE ADDRESS OF
         SLL   GR15,3                     AREA TO READ DSCBS. SAVE
         LA    GR15,24(GR15)              POINTER
         ALR   GR15,GR1
         ST    GR15,DSCBPTR            SAVE POINTER TO DSCB READAREA
         LA    GR8,140                 SIZE OF ONE DSCB
         LM    GR2,GR7,CCWLIST         PICK UP FIRST THREE CCWS
         ALR   GR4,GR1                 PUT CORRECT ADDRESS IN TIC CCW
         STM   GR2,GR5,0(GR1)          PLACE SEARCH AND TIC CCWS IN
*                                         BUFFER.
         ALR   GR6,GR15                PUT ADDRESS OF READ IN AREA
*                                         IN READ CCW
CCWLOOP  STM   GR6,GR7,16(GR1)         PLACE CORRECT NUMBER OF
         ALR   GR6,GR8                    READ INSTRUCTIONS IN
         LA    GR1,8(GR1)                 BUFFER WITH APPROPRIATE
         BCT   GR0,CCWLOOP                READ IN AREA ADDRESSES
         MVI   RDCNT,X'92'             INITIALIZE DUMMY CCWS.      0552
         LM    GR2,GR3,RDCNT           PICK UP LAST CCW
         STM   GR2,GR3,16(GR1)         PLACE CCW TO POSITION TO
*                                         NEXT TRACK IN BUFFER
         ST    GR1,RDCNTAD        SAVE ADDR FOR RD CNT MODIFICATION.
         LA    GR4,CCW1                PUT CCW ADDRESS
         ST    GR4,DCCWAD                 IN IOB
         MVC   LASTDSCB(5),NINES       INITIALIZE FOR END OF READ DSCBS
         SR    GR5,GR5                  ZERO OUT REGISTER
         ST    GR5,SECSW               INITIALIZE SWITCHES TO ZERO
         ST    GR5,TABLEAD             INITIALIZE TABLE ADDRESS TO ZERO
         ST    GR5,TABLESIZ            INIT. GETMAIN SIZE      @G32DSPD
***********************************************************************
*   THIS ROUTINE DETERMINES WHICH FUNCTION IS IN OPERATION            *
*     AT PRESENT. DUMP REQUIRES CHECKING BOTH THE FROM AND TO DEVICES.*
***********************************************************************
         CLI   FUNCSW,ANALYSIS         IS FUNCTION ANALYZE
         BE    TODEV                   YES-CHECK TO DEV ONLY
         CLI   FUNCSW,FORMAT           IS FUNCTION FORMAT
         BE    TODEV                   YES-CHECK TO DEV ONLY
         CLI   FUNCSW,RESTORE          IS FUNCTION RESTORE
         BE    TODEV1                  YES-CHECK TO DEV ONLY
         CLI   FUNCSW,DUMP             IS FUNCTION DUMP
         BNE   SETCODE                 NO-ABNORMALLY TERMINATE JOB
***********************************************************************
*           THIS SECTION OF CODE PERFORMS RACF SECURITY CHECKING. IF  *
*  THE DUMP FROM VOLUME IS RACF DEFINED THE USER MUST HAVE READ       *
*  ACCESS IN ORDER TO DUMP THE VOLUME.                         @G32DSPD
***********************************************************************
         L     GR7,CVTPTR          GET CVT POINTER             @G32DSPD
         USING CVT,GR7                                         @G32DSPD
         L     GR7,CVTRAC          GET RACF POINTER            @G32DSPD
         DROP  GR7                                             @G32DSPD
         LTR   GR7,GR7             RACF ACTIVE IN THE SYSTEM?  @G32DSPD
         BZ    NULRACF1            NO,SKIP CHECKING            @G32DSPD
         USING RCVT,GR7            DO CHECK IF RACF IS         @ZA25515
         TM    RCVTSTA1,RCVTDASD   CURRENT.                    @ZA25515
         BZ    NULRACF1            NO DONT RACHECK             @ZA25515
         DROP  GR7                 YES DO RACHECK              @ZA25515
         L     GR7,FUCBPTR         GET FROM UCB                @G32DSPD
         USING UCB,GR7                                         @G32DSPD
         MVC   RACVOL,UCBVOLI      PUT UCB IN PARM LIST        @G32DSPD
         RACHECK ATTR=READ,ENTITY=RACVOL,CLASS=DASDVOL,        @G32DSPD*
               VOLSER=0,MF=(E,RACKPRM)                         @G32DSPD
         CLM   GR15,B'0001',RC8   VOLID DEFINED,UNAUTHORIZED ? @G32DSPD
         BE    UNAUTHF            NOT AUTHORIZED,GO TERMINATE  @G32DSPD
         CLM   GR15,B'0001',RC4   VOLID RACF DEFINED ?         @G32DSPD
         BE    NULRACF1           NO,END RACF CHECKS           @G32DSPD
* VOLUME IS RACF DEFINED AND USER IS READ AUTHORIZED, CHECK    @G32DSPD
* FOR AUTHORIZATION TO USE CPYVOLID OPTION.                    @G32DSPD
         TM    SEQSW,CPYVOLID     'CPYVOLID' REQUESTED ?       @G32DSPD
         BZ    TAPECHK            NO,BYPASS PASSWORD CHECKS    @G32DSPD
         CLI   DEVSW,X'FF'        TO DEVICE A DA DEVICE        @G32DSPD
         BNE   TAPECHK            'CPYVOLID' IGNORED IF NOT DA @G32DSPD
         RACHECK ATTR=ALTER,ENTITY=RACVOL,CLASS=DASDVOL,       @G32DSPD*
               VOLSER=0,MF=(E,RACKPRM)                         @G32DSPD
         LTR   GR15,GR15          IS USER AUTHORIZED ?         @G32DSPD
         BZ    TAPECHK            YES,ALLOW REQUEST            @G32DSPD
*   USER NOT AUTHORIZED,RESET 'CPYVOLID' INDICATOR             @G32DSPD
         NI    SEQSW,255-CPYVOLID DISALLOW 'CPYVOLID'          @G32DSPD
         OI    FLGBYT2,CPYREJEC   INDICATE CPYVOLID DISALLOWED @G32DSPD
         BAL   GR4,UNAUTHC        GIVE DIAGNOSTIC(IEH864I)     @G32DSPD
         B     TAPECHK            OK TO BYPASS PASSWD CHECKS   @G32DSPD
NULRACF1 EQU   *                                               @G32DSPD
* END RACF FROM VOL CHECKS.                                    @G32DSPD
*                                                              @G32DSPD
***********************************************************************
*   THIS ROUTINE SCANS THE TIOT TO DETERMINE THE AMOUNT OF CORE       *
*     NEEDED FOR THE DSNAME TABLE OF PASSWORD PROTECTED DATASETS ON   *
*     THE FROM DEVICE.                                                *
***********************************************************************
         TM    SEQSW,FEATURE1           FROM DD HAVE RPS
         BZ    FROMDEV             NO                            S20201
         MVC   TIC+D1(L3),DCCWAD+D1  SET UP TIC ADDR             S20201
         LA    GR4,SETCCW          POINT TO RPS CCWS             S20201
         ST    GR4,DCCWAD          STORE IN IOB                  S20201
FROMDEV  EQU   *                        *                        S20201
         L     GR8,CVTPTR              PICK UP POINTER TO CVT
         USING CVT,GR8
         L     GR6,CVTTCBP             PICK UP POINTER TO TCB
         L     GR6,4(GR6)
         L     GR7,12(GR6)             PICK UP POINTER TO TIOT
         USING TIOT,GR7
         LA    GR6,DDENTRY             PICK UP ADDRESS OF FIRST DDENTRY
         ST    GR6,TIOTSAVE              IN TIOT AND SAVE
         USING DDENTRY,GR6
         DROP  7,8
         SR    GR4,GR4                 INITIALIZE REGISTER TO ZERO
NEXTDD   CLC   TIOEDDNM(8),INCON       IS IT SYSIN
         BE    BUMPPTR                 YES-BUMP POINTER TO NEXT ENTRY
         CLC   TIOEDDNM(8),PRINTCON    IS IT SYSPRINT
         BE    BUMPPTR                 YES-BUMP POINTER TO NEXT ENTRY
         CLC   TIOEDDNM(8),BLANKS  IS IT BLANK                   A44112
         BE    BUMPPTR              YES MUST BE CONCATENATED DD  A44112
         SR    GR3,GR3                 PUT TIOT LENGTH IN
         IC    GR3,TIOELNGH               REGISTER
         SH    GR3,TWENTY              CALCULATE INDEX TO LAST UCB PTR
         AR    GR6,GR3                 ADJUST DD ENTRY INDEX FOR UCB
CHECKUCB CLC   TIOEFSRT(3),FUCBPTR+1   UCB FOR FROM DEVICE?
         BNE   NEXTUCB                 NO- MORE UCBS
ADDENTRY EX    GR5,SWITCH1             SWITCH TO REDIRECT FLOW 2ND TIME
         LA    GR4,52(GR4)             ADD TO CORE SIZE FOR GETMAIN
NEXTUCB  LTR   GR3,GR3                 MORE UCBS TO CHECK
         BE    BUMPPTR                 NO - GO GET NEXT DD ENTRY
         SH    GR3,FOUR                INDEX TO NEXT UCB
         SH    GR6,FOUR                POINT TO NEXT UCB PTR
         B     CHECKUCB                GO CHECK NEXT UCB
BUMPPTR  SR    GR3,GR3                 PUT TIOT LENGTH IN
         IC    GR3,TIOELNGH                REGISTER
         AR    GR6,GR3                 BUMP PTR TO NEXT DD ENTRY
         L     GR0,0(GR6)              END OF TIOT REACHED
         LTR   GR0,GR0
         BNE   NEXTDD                  NO-GET NEXT ENTRY
         EX    GR5,SWITCH2             SWITCH TO REDIRECT FLOW 2ND TIME
         LA    GR8,TABLEAD             YES-SET UP ADDRESS FOR GETMAIN
         ST    GR4,TABLESIZ            SAVE SIZE OF DSNAME TABLE
         GETMAIN EC,LV=(4),A=(8)       GET CORE FOR DSNAME TABLE
         LTR   GR15,GR15               CORE AVAILABLE?
         BNE   MORECORE                NO-GO WRITE MESSAGE
***********************************************************************
*   THIS ROUTINE CREATES A TABLE CONTAINING THE NAMES OF EVERY DATASET*
*    ON THE FROM DEVICE FOR WHICH A PASSWORD DD CARD WAS SUPPLIED.    *
*    THE CORRESPONDING DDNAME FOR EACH DSNAME IS ALSO PLACED IN THE   *
*    TABLE.
***********************************************************************
         L     GR6,TIOTSAVE            PICK UP POINTER TO TIOT DDENTRY
         LA    GR5,X'F0'               SET SWITCHES FOR 2ND TIME
*                                        SCAN OF TIOT
         LA    GR7,DADCB               PICK UP POINTER TO DCB
         ST    GR7,DDCBAD
         USING IHADCB,7
         MVC   OPENLD+1(3),DDCBAD+1    MOVE DCB ADDRESS TO LIST
         LA    GR2,READJFCB            PICK UP BUFFER ADDRESS TO
         ST    GR2,LIST                  READ JFCB
         MVI   LIST,X'87'              PICK UP EXIT LIST CODE
         L     GR8,TABLEAD             PICK UP POINTER TO DSNAME TABLE
         LA    GR15,VTOCREAD           SET UP FOR BRANCH IF TABLE FULL
         BAL   GR14,NEXTDD             GO GET FIRST DDNAME FOR RDJFCB
         SR    GR6,GR3            RESET POINTER TO START DD ENTRY. 9956
         MVC   DCBDDNAM(8),TIOEDDNM    PUT DDNAME IN DCB
         MVC   0(8,GR8),DCBDDNAM       ENTER DDNAME IN TABLE
         LA    GR8,8(GR8)              BUMP POINTER TO DSNAME SLOT
         RDJFCB MF=(E,OPENLD)          READ JFCB
         USING JFCB,2
         MVC   0(44,GR8),JFCBDSNM      ENTER DSNAME IN TABLE
         MVI   JFCBTSDM,X'08'          STOP WRITE OF JFCB AT OPEN
         LA    GR8,44(GR8)             BUMP POINTER TO NEXT ENTRY SLOT
         BAL   GR15,BUMPPTR            GO GET NEXT DDNAME IF ANY
***********************************************************************
*  THIS ROUTINE CHECKS ALL THE FORMAT 1 DATA SET LABELS ON THE FROM   *
*    DEVICE FOR PROTECTION AND LOOKS UP THE NAME OF PROTECTED DATASETS*
*     IN THE DSNAME TABLE CREATED. IF NO PASSWORD DD CARD WAS SUPPLIED*
*     FOR THE DATA SET AND IT DOES NOT APPEAR IN THE DSNAME TABLE     *
*     A MESSAGE IS WRITTEN AND A RETURN CODE OF 8 IS SET. OTHERWISE A *
*     MESSAGE IS WRITTEN TO THE OPERATOR REQUESTING THE PASSWORD      *
*     FOR EACH DATA SET, ONE AT A TIME. AN INCORRECT RESPONSE         *
*     RESULTS IN A RETURN CODE OF 8 WITH MESSAGE. A CORRECT RESPONSE  *
*     ALLOWS PROCESSING TO CONTINUE.                                  *
***********************************************************************
VTOCREAD LR    GR5,GR8
         USING UCB,GR8
         L     GR8,FUCBPTR             PICK UP POINTER TO UCB
         MVC   JFCBVOLS(6),SRTEVOLI    PUT VOL/SER NO. IN JFCB
         DROP  8
BACK     LA    GR8,44                  SET REGISTER TO LAST ENTRY
         SR    GR5,GR8                    FOR LOOP CONTROL
         LA    GR7,BLOCKS+180           PICK UP DCB ADDRESS
         MVI   RDCNT,X'92'              INIT RDCNT TO MULTI-TRK
         L     GR2,DCBDEBAD       PICK UP POINTER TO DEB.
         MVC   SEEKAD+1(6),36(GR2) EXTRACT LOW EXTENT FROM DEB.
REPEAT   EQU   *                                                 A32516
         ST    GR7,DDCBAD               PUT DCB ADDR IN IOB.     A32516
         L     GR6,DSCBNO         GET NO. OF DSCBS PER TRK.      A32516
         L     GR3,DSCBPTR             PICK UP POINTER TO DSCB READAREA
         CLI   RDCNT,X'12'             END OF VTOC REACHED
         BE    RESTCCWS                YES-GO CHECK TODEVICE  C@ZA32596
         CLC   SEEKAD+3(4),LASTDSCB    IS LAST F1 DSCB FINISHED
         BH    RESTCCWS                YES-GO CHECK TO DEVICE C@ZA32596
         CLC   SEEKAD+3(4),42(GR2) IS THIS LAST TRACK OF VTOC.
         BNE   GOODCCW                 NO-GO READ
         MVI   RDCNT,X'12'             YES CHANGE RDCNT TO SINGLE TRACK
         L     GR1,RDCNTAD
         CLI   DSCBNO+3,X'2E'          46 DSCB/TRACK?         A@ZA32596
         BNE   ENDCCW1                 NO THEN OK             A@ZA32596
         S     GR1,EIGHT               ONE LESS 0E CCW OP     A@ZA32596
ENDCCW1  MVI   16(GR1),X'12'      SET SINGLE READ COUNT.      C@ZA32596
GOODCCW  MVC   SAVECCHH(5),SEEKAD+3    SAVE SEARCH CCHHR      A@ZA32596
         EXCP  DISKIOB                 READ A DSCB            C@ZA32596
         BAL   GR4,WAIT                AWAIT COMPLETION OF I/O
         CLI   44(GR3),X'F4'           IS DSCB A FORMAT 4
         BNE   CHECKF1                 NO-GO CHECK FORMAT 1
         CLI   TSTDSCB,X'FF'           BEEN HERE BEFORE?      A@ZA32596
         BE    OKDSCB1                 YES, BRANCH            A@ZA32596
         L     GR4,FUCBPTR             GET UCB POINTER        A@ZA32596
         CLI   19(GR4),X'0B'           3350?                  A@ZA32596
         BNE   OKDSCB1                 NO, NO ACTION          A@ZA32596
         CLI   74(GR3),X'2E'           NO OF DSCB/TRK = 46?   A@ZA32596
         BNE   OKDSCB1                 NO, NO ACTION          A@ZA32596
         MVI   TSTDSCB,X'FF'           INDICATE BEEN HERE     A@ZA32596
         L     GR4,DSTATUS             PICK UP CCW POINTER    A@ZA32596
         LA    GR4,0(GR4)              CLEARHIGH ORDER BYTE   A@ZA32596
         S     GR4,SIXTEEN             POINT TO LAST 0E-OP    A@ZA32596
         MVC   SAVECCW(16),0(GR4)      SAVE CCW (0E + 92) OP  A@ZA32596
         MVC   0(8,GR4),8(GR4)         MAKE STRING 46 0E-CCWS A@ZA32596
         MVC   SEEKAD+3(5),SAVECCHH    START READ VTOC AGAIN  A@ZA32596
         LA    GR6,46                  INDICATE 46 DSCB/TRK   A@ZA32596
         ST    GR6,DSCBNO              SAVE NO OF DSCBS       A@ZA32596
         B     GOODCCW                 REATART CCW STRING     A@ZA32596
RESTCCWS CLI   TSTDSCB,X'FF'           ANY CHANGES TO CCWS?   A@ZA32596
         BNE   TAPECHK                 NO, TEST TO-DEVICE     A@ZA32596
         MVI   TSTDSCB,X'00'           RESET SWITCH           A@ZA32596
         MVI   DSCBNO+3,X'2F'          SET 47 DSCB/TRACK      A@ZA32596
         L     GR1,DSTATUS             GET CSW POINTER        A@ZA32596
         LA    GR1,0(GR1)              CLEAR HIGH ORDER BYTE  A@ZA32596
         S     GR1,EIGHT               POINT TO LAST CCW      A@ZA32596
         MVC   0(16,GR1),SAVECCW       SAVE CCW (0E + 92)OP   A@ZA32596
         B     TAPECHK                 GO TEST TO-DEVICE      A@ZA32596
OKDSCB1  MVC   LASTDSCB(5),45(GR3)  SAVE ADDR OF LAST F1 DSCB C@ZA32596
         LA    GR3,140(GR3)            BUMP POINTER TO NEXT DSCB
         BCTR  GR6,0                   SUBTRACT 1 FROM NO. DSCBS LEFT
CHECKF1  CLI   44(GR3),X'F1'           IS DSCB A FORMAT 1
         BNE   CONTROL1
         STM   GR5,GR8,PROMPTSA         SAVE WORK REG          @Z40RSGD
         TM    DSIDSIND(GR3),CHKPT      THIS A CHKPT/RSTRT DS ? Y02083
         BNO   NOCR1                    NO, BRCH                Y02083
         L     GR8,FUCBPTR              LOAD UCB REG            YM7392
         BAL   GR4,PROMPT               YES, TELL OPERATOR.     Y02083
NOCR1    EQU   *                                                Y02083
         USING F1DSCB,GR3              FORMAT 1                @Z40RSRB
         TM    DS1DSIND,F1RACDEF       RAC DEFINED             @Z40RSRB
         BO    FRRACDEF                BR IF YES TO OPEN       @Z40RSRB
         TM    93(GR3),X'14'           D/S PASSWORD PROTECTED    A46957
         BC    9,CONTROL1              NO-CONTINUE               A46957
         DROP  GR3                     DROP F1DSCB             @Z40RSRB
         LA    GR7,DADCB               PICK UP PPINTER TO DUMMY DCB TO
         ST    GR7,DDCBAD                  OPEN PASSWORD DATA SET
         TM    D83(GR3),VSAMID          VSAM DSCB ?             YM3060
         BNO   NOVSAM                   NO, CONTINUE            YM3060
         MVC   DCBDDNAM,DDNAME1         MOVE FROMDD DDNAME      YM3060
         B     VSAM1                    OPEN VSAM F1 DSCB       YM3060
NOVSAM   EQU       *                                            YM3060
         LA    GR4,52                  SET UP FOR LOOP CONTROL
         L     GR8,TABLEAD             YES-PICK UP POINTER TO TABLE
         LTR   GR8,GR8                 HAVE ENTRIES BEEN MADE IN TABLE
         BZ    NOCARD                   YES, CHECK ENTRIES      YM3060
CKTABLE  CLC   0(44,GR3),8(GR8)        IS DATA SET IN TABLE
         BE    GETPASS                 YES-GO REQUEST PASSWORD
         BXH   GR8,GR4,NOCARD          BUMP POINTER TO NEXT ENTRY
         B     CKTABLE                 CHECK NEXT TABLE ENTRY
GETPASS  MVC   DCBDDNAM(8),0(GR8)      PUT DDNAME IN DCB
VSAM1    EQU   *                                                YM3060
         L     GR2,LIST           SET UP JFCB POINTER.             0141
         MVC   JFCBDSNM,D0(GR3)        PUT DSNAME IN JFCB       YM3060
         OPEN  MF=(E,OPENLD),TYPE=J
         TM    DCBOFLGS,X'10'          WAS OPEN SUCCESSFUL
         BZ    BADPASS                 NO-GO TERMINATE JOB
         NI    DCBMACRF+1,X'F3'        SET BITS OFF TO STOP WRITE OF
*                                        EOF AND UPDATE OF DSCB
         CLOSE ((7))
         TM    D83(GR3),VSAMID          VSAM DSCB ?             YM3060
         BO    VSAM2                    YES, DON,T SET TAPE     YM3060
*                                       SECURITY SWITCH.        YM3060
         MVI   SECSW,X'01'             SET SECURITY SWITCH
VSAM2    EQU   *                                                YM3060
         LA    GR7,BLOCKS+180       PUT DCB FROM DUMP IN IOB     A32516
         L     GR2,DCBDEBAD            OBTAIN POINTER TO DEB     A32516
         CLI   FUNCSW,DUMP             NORMAL DUMP ?           @ZM40033
         BE    CONTROL1                YES, CONTINUE           @ZM40033
         LA    GR7,BLOCKS+172          USE VER2 OFFSET         @ZM40033
CONTROL1 LA    GR3,140(GR3)            BUMP POINTER TO NEXT DSCB
         BCT   GR6,CHECKF1             SUBTRACT 1 FROM NO. DSCBS LEFT
         B     REPEAT                  READ AGAIN
FRRACDEF EQU   *                       OPEN TO CHECK SECURITY  @Z40RSGD
*   CHECK FOR INPUT RACF AUTHORIZATION
         L     GR8,FUCBPTR              INPUT UCB              @Z40RSGD
         LA    GR15,ACHKTRD             REQUEST INPUT AUTH     @Z40RSGD
         LR    GR5,GR3                  DSCB ADDRESS           @Z40RSGD
         BAL   GR7,SETUPUCB             CHECK RAC AUTH         @Z40RSGD
         L     GR5,PROMPTSA             RESTORE REG 5          @Z40RSGD
         B     VSAM2                    AUTHORIZED - CONTINUE  @Z40RSGD
***********************************************************************
*  THIS ROUTINE CHECKS TO SEE IF TO DEVICE IS TAPE AND IF SOURCE      *
*    DIRECT ACCESS DEVICE HAS PASSWORD PROTECTED DATASETS. IF SO      *
*    THE SWITCH WHICH INDICATES STANDARD LABEL, PASSWORD PROTECTED    *
*    TAPE WITH BLANK OR ZERO SEQUENCE NUMBER MUST BE ON FOR           *
*    PROCESSING TO CONTINUE. OTHERWISE JOB IS TERMINATED WITH MESSAGE.*
***********************************************************************
TAPECHK  CLI   DEVSW,X'00'             IS TO DEVICE TAPE
         BNE   DADEV                   NO- GO CHECK DIRECT ACCESS
         CLI   SECSW,X'01'             YES-IS SECURITY SWITCH ON
         BNE   RELEASE                 NO-GO RETURN TO PROCESSING
         TM    SWITCH,PASSSW           YES-IT THIS STANDARD LABEL
*                                          PASSWORD PROTECTED TAPE
*                                          WITH SEQ NO = BLANK OR ZERO
         BO    RELEASE                 YES-GO RETURN TO PROCESSING
         LA    GR1,35                  TAPE NOT SL AND PROTECTED
         BAL   GR5,MSGBLD              GO BUILD MESSAGE
         LA    GR5,SETCODE             SET UP FOR BRANCH AFTER PRINT
         B     MSGPRNT                 GO PRINT MESSAGE
***********************************************************************
*  THIS ROUTINE CHECKS ALL FORMAT 1 DATA SET LABELS ON A DA DEVICE    *
*    FOR EXPIRATION AND FOR PROTECTION. IF AT LEAST ONE UNEXPIRED     *
*    DATA SET IS ENCOUNTERED AND EITHER THE PURGE OPTION IS NOT       *
*    SPECIFIED BY THE USER OR THE PURGE OPTION IS SPECIFIED BUT THE   *
*    OPERATOR REQUESTS TERMINATION OF THE JOB IN RESPONSE TO A WTOR   *
*    MESSAGE, AN ERROR MESSAGE IS WRITTEN AND A RETURN CODE OF 8 IS   *
*    SET.                                                             *
*  OTHERWISE THE DATA SET IS CHECKED FOR PROTECTION. THE PASSWORD FOR *
*    A PROTECTED DATA SET MUST BE SUPPLIED IF THE DATA SET IS TO BE   *
*    SCRATCHED AND THE VOLUME USABLE.                                 *
***********************************************************************
         USING COPYBLK,6
DADEV    CLI   DEVSW,X'FF'             IS TO DEVICE DIRECT ACCESS
         BNE   DUMPFUNC                NO-GO CHECK FOR DUMP FUNCTION
TODEV1   LA    GR7,BLOCKS+44           PICK UP POINTER TO DCB/RESTORE
         B     TODEV2              GO TO PROCESS                 S20201
TODEV    LA    GR7,FBLOCKS             PICK UP POINTER TO DCB/FORMAT
*                                         AND ANALYSIS
TODEV2   EQU   *                        *                        S20201
         LA    GR4,CCW1            RESET PTR IN                  S20201
         ST    GR4,DCCWAD          IOB                           S20201
         TM    SEQSW+D1,FEATURE    TODD HAVE RPS                 S20201
         BZ    GOAHEAD             NO                            S20201
         MVC   TIC+D1(L3),DCCWAD+D1  SET UP TIC ADDR             S20201
         LA    GR4,SETCCW          POINT TO RPS CCWS             S20201
         ST    GR4,DCCWAD          STORE IN IOB                  S20201
GOAHEAD  EQU   *                                                 S20201
VREAD    ST    GR7,DDCBAD              PUT DCB ADDRESS IN IOB
***********************************************************************
*    THIS SECTION OF CODE PERFORMS RACF AUTHORIZATION CHECKS ON THE   *
*  'TO' VOLUME. IF THE VOLUME IS RACF DEFINED THE USER MUST HAVE      *
*  ALTER ACCESS TO THE VOLUME BEFORE DUMP,RESTORE,ANALYZE OR FORMAT   *
*  WILL BE ALLOWED.                                         @G32DSPD  *
***********************************************************************
         L     GR3,CVTPTR              GET CVT POINTER         @G32DSPD
         USING CVT,GR3                                         @G32DSPD
         L     GR3,CVTRAC              GET RACF POINTER        @G32DSPD
         DROP  GR3                                             @G32DSPD
         LTR   GR3,GR3                 RACF ACTIVE IN SYSTEM   @G32DSPD
         BZ    NULRACF2                NO,SKIP CHECKS          @G32DSPD
         USING RCVT,GR3                DO CHECK IF RACF IS     @ZA25515
         TM    RCVTSTA1,RCVTDASD       CURRENT.                @ZA25515
         BZ    NULRACF2                NO DONT RACHECK         @ZA25515
         DROP  GR3                     YES DO RACHECK          @ZA25515
* GET VOLID FROM UCB. FIRST DETERMINE IF 'TO' OR 'COPY ' UCB.  @G32DSPD
         L     GR8,TUCBPTR             GET 'TO' UCB            @G32DSPD
         TM    COPYSW,COPYON           WORKING ON A COPY ?     @G32DSPD
         BZ    NOTCPY                  NO, KEEP 'TO' UCB       @G32DSPD
         L     GR8,CUCBPTR             YES,GET 'COPY' UCB      @G32DSPD
         USING UCB,GR8                                         @G32DSPD
NOTCPY   MVC   RACVOL,UCBVOLI          GET VOLID               @G32DSPD
         DROP  GR8                                             @G32DSPD
         RACHECK  ATTR=ALTER,ENTITY=RACVOL,CLASS=DASDVOL,      @G32DSPD*
               VOLSER=0,MF=(E,RACKPRM)                         @G32DSPD
         CLM   GR15,B'0001',RC8        UNAUTHORIZED ?          @G32DSPD
         BE    UNAUTHT                 UNAUTHORIZED,GO END     @G32DSPD
         LTR   GR15,GR15               DEFINED AND AUTHORIZED? @G32DSPD
         BZ    CKMOREDD                YES,SKIP PASSWORD CHECKS@G32DSPD
*      IF 'TO VOL' IS NOT DEFINED TO RACF,CHECK PASSWORDS.     @G32DSPD
*  END 'TO VOL' RACF SECURITY CHECKS.                          @G32DSPD
         SPACE 2                                               @G32DSPD
NULRACF2 EQU   *                                               @G32DSPD
         MVC   LASTDSCB(5),NINES       INITIALIZE FOR END OF READ DSCB
         MVI   RDCNT,X'92'             INITIALIZE RDCNT TO MULTI-TRACK
         L     GR1,RDCNTAD
         MVI   16(GR1),X'92'      RESET RD CNT FOR MULTI-TRK.
         L     GR3,DCBDEBAD            PICK UP POINTER TO DEB
         MVC   SEEKAD+1(6),36(GR3)     EXTRACT LOW EXTENT FROM DEB
REPEAT2  L     GR2,DSCBNO              PICK UP NUMBER DSCBS PER TRACK
         L     GR5,DSCBPTR             PICK UP POINTER TO DSCB READAREA
         CLI   RDCNT,X'12'             END OF VTOC REACHED
         BE    OKCCWS                 YES-GO CHECK FOR COPIES C@ZA32596
         CLC   SEEKAD+3(4),LASTDSCB    IS LAST F1 DSCB FINISHED
         BH    OKCCWS                 YES-GO CHECK FOR COPIES C@ZA32596
         CLC   SEEKAD+3(4),42(GR3)     IS THIS LAST TRACK OF VTOC
         BNE   CCWOK                   NO-GO READ
         MVI   RDCNT,X'12'             YES CHANGE RDCNT TO SINGLE TRACK
         L     GR1,RDCNTAD
         CLI   DSCBNO+3,X'2E'          VTOC HAS 46 DSCB/TRK   A@ZA32596
         BNE   ENDCCW2                 NO THEN OK             A@ZA32596
         S     GR1,EIGHT               ONE LESS 0E-OP CCW     A@ZA32596
ENDCCW2  MVI   16(GR1),X'12'           SET SINGLE READ COUNT. C@ZA32596
CCWOK    MVC   SAVECCHH(5),SEEKAD+3    SAVE SEARCH CCHHR      A@ZA32596
         EXCP  DISKIOB                 READ A DSCB            C@ZA32596
         BAL   GR4,WAIT                AWAIT COMPLETION OF I/O
         CLI   44(GR5),X'F4'           IS DSCB A FORMAT 4
         BNE   F1CHECK                 NO-GO CHECK FORMAT 1
         CLI   TSTDSCB,X'FF'           BEEN HERE BEFORE?      A@ZA32596
         BE    OKDSCB2                 YES THEN BRANCH        A@ZA32596
         L     GR4,TUCBPTR             GET UCB POINTER        A@ZA32596
         CLI   19(GR4),X'0B'           3350?                  A@ZA32596
         BNE   OKDSCB2                 NO, NO ACTION          A@ZA32596
         CLI   74(GR5),X'2E'           ACTUAL NO OF DSCB =46? A@ZA32596
         BNE   OKDSCB2                 NO, NO ACTION          A@ZA32596
         MVI   TSTDSCB,X'FF'           INDICATE BEEN HERE     A@ZA32596
         L     GR4,DSTATUS             PICK UP CCW POINTER    A@ZA32596
         LA    GR4,0(GR4)              CLEAR HIGH ORDER BYTE  A@ZA32596
         S     GR4,SIXTEEN             POINT TO LAST 0E CCW   A@ZA32596
         MVC   SAVECCW(16),0(GR4)      SAVE CCW (0E + 92) OP  A@ZA32596
         MVC   0(8,GR4),8(GR4)         MAKE STRING 46 0E-CCWS A@ZA32596
         MVC   SEEKAD+3(5),SAVECCHH    INDICATE START VTOC    A@ZA32596
         LA    GR2,46                  INDICATE 46 DSCB/TRACK A@ZA32596
         ST    GR2,DSCBNO              SAVE NO OF DSCBS       A@ZA32596
         B     CCWOK                   RESTART CCW-STRING     A@ZA32596
OKCCWS   CLI   TSTDSCB,X'FF'           ANY CHANGES TO CCWS?   A@ZA32596
         BNE   CKMOREDD                NO, THEN CHECK COPIES  A@ZA32596
         MVI   TSTDSCB,X'00'           RESET SWITCH           A@ZA32596
         MVI   DSCBNO+3,X'2F'          SET 47 DSCB/TRK        A@ZA32596
         L     GR1,DSTATUS             GET CSW POINTER        A@ZA32596
         LA    GR1,0(GR1)              CLEAR HIGH ORDER BYTE  A@ZA32596
         S     GR1,EIGHT               POINT TO LAST CCW      A@ZA32596
         MVC   0(16,GR1),SAVECCW       SAVE CCW (0E + 92) OP  A@ZA32596
         B     CKMOREDD                ALL OK, CHECK COPIES   A@ZA32596
OKDSCB2  MVC   LASTDSCB(5),45(GR5)  SAVE ADDR OF LAST F1 DSCB C@ZA32596
         LA    GR5,140(GR5)            BUMP POINTER TO NEXT DSCB
         BCTR  GR2,0                   SUBTRACT 1 FROM NO. DSCBS LEFT
F1CHECK  CLI   44(GR5),X'F1'           IS DSCB A FORMAT 1
         BNE   CONTROL2
         TM    WTORSW,ON                WRITE TO OPER SWITCH ON  YM7392
         BO    SCRATCH                 YES-GO SCRATCH DATA SET   YM7392
               TIME
         LR    GR0,GR1                 PUT DATE IN REGISTER 0
         XC    DATE(8),DATE            CLEAR OUT DATE AREA
         STH   GR0,DATE+6              ISOLATE DAY
         SRDL  GR0,4                   SAVE ZONE IN REGISTER 1
         SRL   GR0,12                  ISOLATE YEAR
         SLDL  GR0,4                   PUT ZONE ON YEAR
         CVB   GR4,DATE                CONVERT DAY
         STH   GR0,DATE+6              PUT YEAR IN FIELD
         CVB   GR1,DATE                CONVERT YEAT
         STH   GR4,DATE+6              SAVE DAY
         STC   GR1,DATE+5              SAVE YEAR
         CLC   56(3,GR5),DATE+5        DATA SET EXPIRED
         BNH   SCRATCH                 YES-GO SCRATCH DATA SET @ZA11927
         TM    SEQSW+1,PURGE           NO-PURGE REQUESTED?
         BZ    UNEXPIRE                NO-GO TERMINATE JOB
         OI    WTORSW,ON                SET WTOR SWITCH         YM7392
         CLI   COPYSW,X'01'            IS THIS COPIES
         BNE   SKIP1                   NO-GO PICK UP UCB POINTER
         L     GR8,CUCBPTR             PICK UP POINTER TO COPY UCB
         B     CONTINUE
SKIP1    L     GR8,TUCBPTR             PICK UP POINTER TO UCB
         USING UCB,GR8
CONTINUE EQU   *
PASSBY   MVC   TRYAGAIN+55(6),SRTEVOLI  PUT VOL-SER IN WTOR        MC0I
PASSBY1  MVC   TRYAGAIN+24(3),UCBNAME   PUT CH-UNIT ADDRESS IN WTORMC0I
         DROP  GR8
         L     GR8,CVTPTR              PICK UP POINTER TO CVT
         USING CVT,GR8
         L     GR8,CVTTCBP             PICK UP POINTER TO TCB
         L     GR8,4(GR8)
         DROP  8
         L     GR8,12(GR8)             PICK UP POINTER TO TIOT
         USING TIOT,GR8
         MVC   TRYAGAIN+63(8),TIOCNJOB  SAVE JOBNAME AND STEPNAME  MC0I
         MVC   TRYAGAIN+73(16),TIOCSTEP      IN WTOR MESSAGE       MC0I
TRYAGAIN WTOR  'IEH807D       HAS UNEXPIRED DATA SETS,       ,         X
                        ,                 .',REPLY,1,DISKECB,      MC0IX
               ROUTCDE=(4),DESC=(2)                                MC0I
WTREPLY  TM    DISKECB,COMPLETE        IS OPERATION COMPLETE
         BO    OKAY                    YES-GO CLEAR BITS
         WAIT  ECB=DISKECB             N/-WAIT FOR REPLY
OKAY     MVI   DISKECB,0               CLEAR POSTED BITS IN ECB
         CLI   REPLY,X'E4'             DOES REPLY INDICATE USE
         BE    SCRATCH                 YES-GO SCRATCH DATA SET
         CLI   REPLY,X'E3'             NO-DOES REPLY INDICATE TERMINATE
         BNE   NEWREPLY                NO-OPERATOR ERROR
UNEXPIRE LA    GR1,37                  UNEXPIRED DATASET ON TODD
         B     ERRORT
NEWREPLY MVC   FILLIN+55(8),TIOCNJOB   PUT JOBNAME AND STEPNAME IN
         MVC   FILLIN+65(16),TIOCSTEP       WTO MESSAGE
FILLIN   WTO   'IEH808I REPLY IN ERROR. REPLY WITH "U" OR "T",         C
               ,                 .',ROUTCDE=(4),DESC=(5)           MC0I
         B     TRYAGAIN                 RE-ISSUE MSG
         EJECT
SCRATCH  EQU   *                                                Y02083
         TM    DSIDSIND(GR5),CHKPT      THIS A CHKPT/RSTRT DS ? Y02083
         BZ    NOCR2                    NO, BRCH                Y02083
         STM   GR5,GR8,PROMPTSA         SAVE WORK REG           Y02083
         L     GR8,TUCBPTR              GET TODD UCB ADDR       YM7392
         CLI   COPYSW,ON                COPIES ?                YM7392
         BNE   NOCR2A                   NO                      YM7392
         L     GR8,CUCBPTR              GET COPY UCB ADDR       YM7392
NOCR2A   EQU   *                                                YM7392
         BAL   GR4,PROMPT               YES, TELL OPERATOR.     Y02083
         SPACE 1
NOCR2    EQU   *                                                Y02083
         USING F1DSCB,GR5               FORMAT 1               @Z40RSRB
         TM    DS1DSIND,F1RACDEF        RAC DEFINED            @Z40RSRB
         BZ    TONOTRAC                 BR IF NO               @Z40RSRB
         TM    DS1DSORG+D1,VSAMID       VSAM DSCB              @Z40RSRB
         BO    PR010                    BR IF YES TO OPEN      @Z40RSRB
         CLI   FUNCSW,RESTORE           DUMP/RESTORE FUNCTION  @Z40RSRB
         BH    RACCHKTO                 BR IF NO TO RACHECK    @Z40RSRB
         LA    GR15,ACHKTUPD            REQUEST UPDATE AUTH    @Z40RSGD
         CLI   DUMPSW,PARTIAL           PARTIAL DUMP/RESTORE   @Z40RSRB
         BE    RACCHKT2                 BR IF YES TO OPEN      @Z40RSRB
RACCHKTO EQU   *                        RACHECK DATASET NAME   @Z40RSRB
         LA    GR15,ACHKTALT            REQUEST ALTER AUTH     @Z40RSGD
RACCHKT2 EQU   *                        CHECK FOR COPY         @Z40RSGD
         LA    GR7,CONTROL2             RETURN IF SUCESSFUL    @Z40RSGD
         CLI   COPYSW,COPYON            WORKING ON COPY        @Z40RSRB
         BNE   GETOUCB2                 BR IF NO               @Z40RSRB
         L     GR8,CUCBPTR              GET COPY 'TO' UCB      @Z40RSRB
         B     SETUPUCB                 BR TO MOVE VOLSER      @Z40RSRB
GETOUCB2 EQU   *                        NOT COPY               @Z40RSRB
         L     GR8,TUCBPTR              GET 'TO' UCB           @Z40RSRB
SETUPUCB EQU   *                        MOVE VOLSER FOR RAC    @Z40RSRB
         USING UCB,GR8                  ADDRESS UCB            @Z40RSRB
         MVC   RACVOL,SRTEVOLI          MOVE VOLSER            @Z40RSRB
         RACHECK ENTITY=DS1DSNAM,MF=(E,RACKPRM), ALTER OWNER   @G32DSPD*
               VOLSER=RACVOL,                                  @G32DSPD*
               CLASS=DATASET,ATTR=(GR15) OF DATASET CHECKED    @Z40RSGD
         LTR   GR15,GR15                ALTER OWNER            @Z40RSRB
         BZR   GR7                      BRANCH IF YES          @Z40RSRB
         LA    GR1,MSG60                IEH860I MSG            @Z40RSRB
         BAL   GR5,MSGBLD               BUILD MSG              @Z40RSRB
*   PUT DDNAME IN MESSAGE                                      @Z40RSGD
         LA    GR5,DDNAME1              ASSUME IT IS FROM VOL  @Z40RSGD
         CLI   ACHKFLG2-ACHKLIST+RACKPRM,ACHKTRD IS IT FROM    @G32DSPD
         BE    MVDDN2                   YES-FROM VOLUME        @Z40RSGD
         LA    GR5,DDNAME2              ASSUME TO VOLUME       @Z40RSGD
         CLI   COPYSW,COPYON            IS IT A COPY VOL       @Z40RSGD
         BNE   MVDDN2                   NO-TO VOLUME           @Z40RSGD
         LA    GR5,DDNAME3              MUST BE COPY VOLUME    @Z40RSGD
MVDDN2   EQU   *                        DDNAME2 TO MSG         @Z40RSRB
         MVC   D0(L'DDNAME2,GR1),0(GR5) DDNAME TO MSG          @Z40RSGD
         B     GO                       PRINT MSG              @Z40RSRB
TONOTRAC EQU   *                        NOT RAC PROTECTED      @Z40RSRB
         DROP  GR5,GR8                                         @Z40RSRB
         TM    93(GR5),X'10'            IS IT PASSWORD PROTECTED M4979
         BZ    CONTROL2                 NO - DONT CHECK          M4979
         SPACE 1
         TM    D83(GR5),VSAMID          VSAM DSCB ?             YM5964
         BO    PR010                    YES-GO TO OPEN          YM5964
         CLI   COPYSW,X'01'            COPIES BEING USED
         BNE   SKIP2                   NO-GO GET UCB POINTER
         L     GR8,CUCBPTR             PICK UP POINTER TO UCB
         B     ONWARD
SKIP2    L     GR8,TUCBPTR             PICK UP POINTER TO UCB
         USING UCB,GR8
ONWARD   EQU   *
PASSOVER MVC   VOLIST+6(6),SRTEVOLI    PUT VOL-SER IN LIST
PASS     MVC   VOLIST+2(4),UCBTYP      PUT DEVICE TYPE IN LIST
         SR    GR0,GR0                 ZERO OUT REGISTER
         ST    GR5,PARMLIST+4          PROVIDE CURRENT DSCB FOR SCRATCH
         CLI   FUNCSW,RESTORE          IS FUNCTION DUMP/RESTORE US03168
         BH    PR040                    NO-CONTINUE             US03168
         CLI   DUMPSW,X'00'             YES, IS IT PARTIAL
         BNE   PR040                    NO-CONTINUE             US03168
         SPACE 1
PR010    EQU   *                                                US03168
         LA    GR1,DADCB                LOAD DCBADDRS           US03168
         DROP  GR2,GR7                                          US03168
         USING IHADCB,GR1                                       US03168
         ST    GR1,OPENLD               PUT DCB ADDRS IN PARM   US03168
         MVI   OPENLD,X'8F'             SET END PARM FLAG       YM05997
         MVC   DCBDDNAM,DDNAME2         MOVE PRIME TO DDNAME    US03168
         CLI   COPYSW,X'01'             IS COPY SWITCH ON       US03168
         BNE   PR020                    NO-BRANCH OVER          US03168
         MVC   DCBDDNAM,DDNAME3         MOVE COPY TO DDNAME     US03168
PR020    EQU   *                                                US03168
         LA    GR0,READJFCB             ADDRS OF JFCB           US03168
         ST    GR0,LIST                 STORE IN PARM LIST      US03168
         MVI   LIST,X'87'               SET END INDICATOR       US03168
         RDJFCB MF=(E,OPENLD)           READ IN JFCB            US03168
         LA    GR1,READJFCB             ADDRS OF JFCB           US03168
         USING JFCB,GR1                                         US03168
         MVI   JFCBTSDM,X'08'           PREVENT JFCB WRITE-BACK US03168
         SPACE 1
         MVC   JFCBDSNM,D0(GR5)         MOVE DSNAME TO JFCB     US03168
         OPEN  MF=(E,OPENLD),TYPE=J     OPEN DATASET            US03168
         LA    GR1,DADCB                LOAD DCB ADDRS          US03168
         USING IHADCB,GR1                                       US03168
         TM    DCBOFLGS,X'10'           WAS OPEN SUCCESSFUL     US03168
         BO    PR030                    YES-CONTINUE            US03168
         LA    GR1,36                   NO-SET ERROR CODE       US03168
         B     ERRORT                   GO PRINT MSG            US03168
         SPACE 1
PR030    EQU   *                                                US03168
         CLOSE MF=(E,OPENLD)            CLOSE DATASET           US03168
         B     CONTROL2                 CONTINUE PROCESSING     US03168
         EJECT
PR040    EQU   *                                                US03168
         DROP  GR1                                              US03168
         USING IHADCB,GR7                                       US03168
         SCRATCH PARMLIST              SCRATCH DATA SET
         LTR   GR15,GR15               RETURN SUCCESSFUL
         BE    CONTROL2
         TM    VOLIST+13,X'04'         I/O ERROR DURING SCRATCH
         BZ    PASSERR                 NO-PASSWORD ERROR
         LA    GR1,13                  YES-GO BUILD MESSAGE
         BAL   GR5,MSGBLD
         MVC   0(3,GR1),MSGCON         PROVIDE SVC NO TO PRINT
         CLI   COPYSW,X'01'            COPIES BEING USED
         BNE   SKIP3                   NO-GO MOVE DDNAME TO PRINT
         MVC   3(8,GR1),DDNAME3        PROVIDE COPIES TODD TO PRINT
         B     GO
         EJECT
**********************************************************************
*        THE FOLLOWING ROUTINE WILL PROMPT THE OPERATOR WHEN A
*        CHECKPOINT/RESTART DATA-SET IS ENCOUNTERED.
**********************************************************************
         SPACE
PROMPT   EQU   *
         TM    WTORSW,CHPTP             PROMPTED OPER BEFORE?   YM7392
         BO    RELOAD                   YES, EXIT THIS RTNE.    YM7392
         MVC   CHKRESTR+SEROFFS(6),SRTEVOLI PUT VOL-SER IN WTOR Y02083
         MVC   CHKRESTR+UNITOFFS(3),UCBNAME PUT CH-UNIT IN WTOR Y02083
         DROP  GR8                                               Y02083
         L     GR8,CVTPTR              PICK UP POINTER TO CVT    Y02083
         USING CVT,GR8                                           Y02083
         L     GR8,CVTTCBP             PICK UP POINTER TO TCB    Y02083
         L     GR8,4(GR8)                                        Y02083
         DROP  8                                                 Y02083
         L     GR8,12(GR8)             PICK UP POINTER TO TIOT   Y02083
         USING TIOT,GR8                                          Y02083
         MVC   CHKRESTR+JN(L8),TIOCNJOB SAVE JOBNAME AND STPNM  YM7392
         MVC   CHKRESTR+SN(L8),TIOCSTEP      IN WTOR MESSAGE    YM7392
CHKRESTR WTOR  'IEH858D       HAS A CHECKPOINT/RESTART DATA SET,       X
               ,        ,                 .',REPLY,1,DISKECB,  @ZA16477X
               ROUTCDE=(4),DESC=(2)                              Y02083
         TM    DISKECB,COMPLETE        IS OPERATION COMPLETE     Y02083
         BO    OKOK                    YES-GO CLEAR BITS         Y02083
         WAIT  ECB=DISKECB             N/-WAIT FOR REPLY         Y02083
OKOK     MVI   DISKECB,0               CLEAR POSTED BITS IN ECB  Y02083
         CLI   REPLY,C'U'              DOES REPLY INDICATE USE   Y02083
         BE    RELOAD                   YES, RETURN             Y02083
         CLI   REPLY,C'T'               DID OPER TERM. REQUEST? Y02083
         BE    WRITEMSG                 TELL PRGMR THE OPER     Y02083
*                                       CANCELED HIS REQUEST.   Y02083
         MVC   FILLIT+55(8),TIOCNJOB   PUT JOBNAME AND STEPNAME IN
         MVC   FILLIT+65(16),TIOCSTEP       WTO MESSAGE         Y02083
FILLIT   WTO   'IEH808I REPLY IN ERROR. REPLY WITH "U" OR "T",         C
               ,                 .',ROUTCDE=(4),DESC=(5)        Y02083
         B     CHKRESTR                 RE-ISSUE MSG            Y02083
RELOAD   EQU   *                                                Y02083
         OI    WTORSW,CHPTP             SET PROMPT FLAG         YM7392
         LM    GR5,GR8,PROMPTSA         RELOAD WORK REG         Y02083
         BR    GR4                      RETURN                  Y02083
WRITEMSG EQU   *                                                Y02083
         LA    GR1,MESS68               LOAD MSG NO. IEH868I    Y02083
         BAL   GR5,MSGBLD               BUILD MSG IEH868I       T02083
         MVC   0(L8,GR1),DDNAME1        MOVE IN DDNAME1       @ZA16475
         CLI   FUNCSW,DUMP              DUMP FUNCTION?        @ZA16475
         BE    LM                       DDNAME1 IT IS         @ZA16475
         MVC   0(L8,GR1),DDNAME2                              @ZA16475
LM       LM    GR5,GR8,PROMPTSA         RELOAD WORK REG       @ZA16475
         B     FORWARD                  GO PRT MSG AND EXIT     Y02083
         EJECT
SKIP3    MVC   3(8,GR1),DDNAME2        PROVIDE TODD NAME TO PRINT
GO       LA    GR5,SETCODE             SET UP BRANCH AFTER PRINT
         B     MSGPRNT                 GO PRINT MESSAGE
PASSERR  TM    VOLIST+13,X'02'         PASSWORD ERROR
         BZ    SETCODE                 NO-OTHER ERROR/ABNORMALLY END
         LA    GR1,36                  YES-INCORRECT PASSWORD/TODD
         B     ERRORT
CONTROL2 LA    GR5,140(GR5)            BUMP POINTER TO NEXT DSCB
         BCT   GR2,F1CHECK             SUBTRACT 1 FROM NO.DSCBS LEFT
         B     REPEAT2                 READ AGAIN
         EJECT
***********************************************************************
*  THIS ROUTINE CHECKS TO SEE IF THERE ARE COPY VOLUMES. IF SO, THE   *
*   DCB IS PICKED UP, THE WRITE TO OPERATOR SWITCH IS INITIALIZED     *
*   AND THE NEXT VOLUME IS PROCESSED.                                 *
***********************************************************************
CKMOREDD CLI   COPYSW,X'01'            HAVE ANY COPIES BEEN DONE
         BE    MORECOPY                YES-PICK UP CORRECT POINTER
         L     GR6,COPYPTR             ARE COPIES INVOLVED
         LTR   GR6,GR6
         BE    RELEASE                 NO-GO RETURN CONTROL
         MVI   COPYSW,X'01'            INDICATE FIRST COPY DONE
         USING COPYBLK,6
RESUME   TM    FUNCSW,X'40'            IS FUNCTION FORMAT OR ANALYZE
         BO    FORMANAL               YES-FO PICK UP PROPER DCB POINTER
         LA    GR7,CIOBLOCK+44         PICK UP COPY DCB POINTER FOR
         B     SKIP                       DUMP OR RESTORE
FORMANAL LA    GR7,CIOBLOCK            PICK UP COPY DCB POINTER - F/A
SKIP     OI    WTORSW,OFF               RESET WTOR SWT          YM7392
         B     VREAD                   GO READ DSCB'S
MORECOPY L     GR6,CCOPYPTR            PICK UP POINTER TO COPYBLOCK
         LTR   GR6,GR6                 MORE COPIES
         BE    RELEASE                 NO-GO RETURN CONTROL
         B     RESUME
***********************************************************************
*  THIS ROUTINE IS USED TO PRINT ERROR MESSAGES FOR THE TO DEVICE     *
*    TO FREE CORE GOTTEN AND TO RETURN CONTROL.                       *
***********************************************************************
ERRORT   BAL   GR5,MSGBLD              GO BUILD MESSAGE
         CLI   COPYSW,X'01'            COPIES BEING USED
         BNE   SKIP4                   NO-GO MOVE DDNAME TO PRINT
         MVC   0(8,GR1),DDNAME3        YES-PROVIDE COPIES TODD TO PRINT
         B     FORWARD
SKIP4    MVC   0(8,GR1),DDNAME2        PROVIDE TODD NAME TO PRINT
FORWARD  BAL   GR5,MSGPRNT             GO PRINT MESSAGE
SETCODE  LA    GR15,8                  SET UP RETURN CODE/ERROR
ENDUP    CLI   FUNCSW,DUMP             MUST CORE BE FREED/DUMP ONLY
         BNE   GOBACK                  NO - GO RETURN
         LR    GR3,GR15                SAVE RETURN CODE
         L     GR4,TABLESIZ            PICK UP SIZE OF CORE
         LTR   GR4,GR4                 WAS CORE OBTAINED       @Z40RSRB
         BZ    GOBACK                  SKIP FREEMAIN IF NOT    @Z40RSRB
         LA    GR8,TABLEAD             PICK UP ADDRESS OF CORE
         FREEMAIN E,LV=(4),A=(8)       FREE CORE GOTTEN
         LR    GR15,GR3                PUT RETURN CODE BACK IN REG 15
GOBACK   TM    FLGBYT2,CPYREJEC        'CPYVOLID' DISALLOWED   @G32DSPD
         BNO   KEEPRCX                 NO,LEAVE R-CODE AS IS   @G32DSPD
         CLM   GR15,B'0001',RC4        CURRENT R-CODE G.E. 4   @G32DSPD
         BNL   KEEPRCX                 YES,KEEP THAT CODE      @G32DSPD
         LA    GR15,4                  USE RC4 RETURN          @G32DSPD
KEEPRCX  EQU   *                       R-CODE NOT CHANGED      @G32DSPD
         L     GR13,PASSSAVE+4         RESTORE REGISTER 13
         RETURN (14,12),T,RC=(15)      RETURN WITH PROPER CODE
***********************************************************************
*  THIS SECTION PRINTS ERROR MESSAGES FOR THE FROM DEVICE, AND SETS   *
*    UP RETURN CODES. THE SYNADAF MACRO IS USED FOR THE I/O ERROR     *
*    MESSAGE.                                                         *
***********************************************************************
NOCARD   LA    GR1,40                  NO DD CARD FOR SECURITY DS
         B     ERRORF
BADPASS  LA    GR1,36                  INCORRECT PASSWORD/FROMDD
ERRORF   BAL   GR5,MSGBLD              GO BUILD MESSAGE
         MVC   0(8,GR1),DDNAME1        PROVIDE FROMDD NAME TO PRINT
         LA    GR5,SETCODE             SET UP FOR BRANCH AFTER PRINT
         B     MSGPRNT                 GO PRINT MESSAGE
DUMPFUNC CLI   FUNCSW,DUMP             IS FUNCTION DUMP
         BNE   SETCODE                 NO-ABNORMALLY TERMINATE JOB
RELEASE  LA    GR15,0                  SET UP RETURN CODE/SUCCESSFUL
         B     ENDUP
MORECORE L     GR7,PTRCFUNC            INDICATE CORE NOT AVAILABLE/WAIT
         OI    0(GR7),NOCORE+WAITING
         LA    GR15,4                  SET RETURN CODE AND RETURN
         B     ENDUP
* RACF AUTHORIZATION FAILURE, 'CPYVOLID' NOT ALLOWED.          @G32DSPD
UNAUTHC  LA    GR1,MSG64               INDICATE MSG IEH864I    @G32DSPD
         BAL   GR5,MSGBLD              GET MESSAGE TEXT        @G32DSPD
         MVC   0(L'RACVOL,GR1),RACVOL  SET VOLID IN MESSAGE    @G32DSPD
         BAL   GR5,MSGPRNT             GO PRINT MESSAGE        @G32DSPD
         BR    GR4                     CONTINUE OTHER FUNCTIONS@G32DSPD
* RACF AUTHORIZATION FAILURE ON 'FROM VOL'.                    @G32DSPD
UNAUTHF  LA    GR1,MESS66              INDICATE MSG IEH866I.   @G32DSPD
         BAL   GR5,MSGBLD              GET MESSAGE TEXT        @G32DSPD
         MVC   0(L7,GR1),DUMPNM        SET FUNCTION NAME       @G32DSPD
         MVC   20(L'DDNAME1,GR1),DDNAME1 INDICATE DDNAME       @G32DSPD
         LA    GR5,SETCODE             SET BAL RETURN,RC=8     @G32DSPD
         B     MSGPRNT                 PRINT AND TERMINATE     @G32DSPD
*  RACF AUTHORIZATION FAILURE ON 'TO VOL'.                     @G32DSPD
UNAUTHT  LA    GR1,MESS66              INDICATE MSG IEH866I    @G32DSPD
         BAL   GR5,MSGBLD              GET MESSAGE TEXT        @G32DSPD
         MVC   0(L7,GR1),DUMPNM        USE DUMP NAME           @G32DSPD
         CLI   FUNCSW,DUMP             IS IT DUMP ?            @G32DSPD
         BE    SETDD2                  YES,GO SET DDNAME       @G32DSPD
         MVC   0(L7,GR1),RESTNM        USE RESTORE NAME        @G32DSPD
         CLI   FUNCSW,RESTORE          IS IT RESTORE ?         @G32DSPD
         BE    SETDD2                  YES,GO SET DDNAME       @G32DSPD
         MVC   0(L7,GR1),ANALZNM       USE ANALYZE NAME        @G32DSPD
         CLI   FUNCSW,ANALYSIS         IS IT ANALYZE ?         @G32DSPD
         BE    SETDD2                  YES,GO SET DDNAME       @G32DSPD
         MVC   0(L7,GR1),FRMATNM       USE FORMAT NAME         @G32DSPD
         CLI   FUNCSW,FORMAT           IS IT FORMAT ?          @G32DSPD
         BE    SETDD2                  YES,GO SET DDNAME       @G32DSPD
         MVC   0(L7,GR1),BLANKS        UNKNOWN FUNCTION        @G32DSPD
SETDD2   MVC   20(L8,GR1),DDNAME2      SET DDNAME              @G32DSPD
         CLI   COPYSW,COPYON           THIS A COPY ?           @G32DSPD
         BNE   KPDD2                   NO,KEEP DDNAME2         @G32DSPD
         MVC   20(L8,GR1),DDNAME3      USE DDNAME3-COPY DD     @G32DSPD
KPDD2    LA    GR5,SETCODE             SET RC=8                @G32DSPD
         B     MSGPRNT                 PRINT AND TERMINATE     @G32DSPD
IOERR    LA    GR1,13                  I/O ERROR
         BAL   GR5,MSGBLD              GO BUILD MESSAGE
         SYNADAF ACSMETH=EXCP,PARM1=DISKIOB
         MVC   MESS+22(78),49(GR1)     I/O INFORMATION TO PRINT  SM4350
         SYNADRLS
         LA    GR5,SETCODE             SET UP FOR BRANCH AFTER PRINT
         B     MSGPRNT                 GO PRINT MESSAGE
MSGBLD   LINK  EP=IEHDMSGB             BUILD MESSAGE
         BR    GR5
MSGPRNT  LINK  EP=IEHDPRNT             PRINT MESSAGE
         BR    GR5
         DROP  6
         AIF  ('&LIB' NE 'LIB1').NOTOS  BRCH IF NON-OS ASSEM Y02083
***********************************************************************
*   THIS SECTION CALCULATES THE ADDRESS OF THE MAIN UCB GIVEN THE SUB *
*      UCB POINTER FOR A 2321.                                        *
***********************************************************************
         USING DATACELL,GR8
         USING JFCB,GR2                                         US03168
IS2321   MVC   JFCBVOLS(6),DCELVOLI    PUT VOL-SER FOR 2321 IN JFCB
         B     BACK
YES2321  MVC   TRYAGAIN+56(6),DCELVOLI  PICK UP 2321 VOL-SER       MC0I
         MVI   TRYAGAIN+26,C'/'                                    MC0I
         MVC   TRYAGAIN+27(1),DCELBBNR+1    BIN NO. W/CUU FOR 2321 MC0I
         LA    GR3,PASSBY1             SET BRANCH AFTER CALCULATION
         B     CKMAIN
Y2321    MVC   VOLIST+6(6),DCELVOLI    PICK UP 2321 VOL/SER
         LA    GR3,PASS                SET BRANCH AFTER CALCULATION
CKMAIN   LH    GR15,DCELBBNR           CALCULATE MAIN UCB
         SLL   GR15,4
         LA    GR15,SRTEUSER-UCBOB(GR15)
         SR    GR8,GR15
NOCONVRT BR    GR3
         DROP  8
.NOTOS   ANOP                                                   Y02083
***********************************************************************
*    WAIT ROUTINE FOR I/O OPERATIONS                                  *
***********************************************************************
WAIT     TM    DISKECB,COMPLETE        IS OPERATION COMPLETE
         BO    TEST                    YES-GO TEST STATUS
         WAIT  ECB=DISKECB             NO-WAIT COMPLETION OF DISK
TEST     EQU   *                                                 A33538
         CLC   DSENSE(2),ZERO          ANY ERROR CONDITION.      A33538
         BNE   IOERR                   YES-I/O ERROR.            A33538
         CLI   DISKECB,GOOD            ALL OK.                   A33538
         BNE   IOERR                   NO-I/O ERROR
         MVI   DISKECB,0               CLEAR POSTED BITS IN ECB
         BR    GR4                     RETURN
         SPACE
SETCCW   DS    0D                                                M6183
         CCW   X'23',F1,X'40',1         SET SECTOR ZERO          M5900
TIC      CCW   8,0,X'40',0                                       S20201
CCWLIST  CCW   X'31',SEEKAD+3,X'40',5
         CCW   X'08',CCW1-CCWBUFF,0,0
RDCCW    CCW   X'0E',0,X'60',140
RDCNT    CCW   X'92',SEEKAD+3,X'20',5
*   DA EVENT CONTROL BLOCK (ECB).
         DS    0D                      NECESSARY ALIGNMENT
DISKECB  DC    F'0'                    WAIT/COMPLETE BITS
*   DA INPUT/OUTPUT BLOCK (IOB).
DISKIOB  DS    0F
DFLAGS   DC    XL2'4200'               FLAG1 AND FLAG2
DSENSE   DC    H'0'                    SENSE BYTES
DECBAD   DC    A(DISKECB)              ECB ADDRESS
DSTATUS  DC    2F'0'                   CHANNEL STATUS
DCCWAD   DC    1F'0'                   CCW ADDRESS
DDCBAD   DC    F'0'                    DCBADDRESS
DRESAD   DC    F'0'                    RESTART ADDRESS
DBLKCT   DC    H'1'                    BLOCK COUNT INCREMENT
DERROR   DC    H'0'                    ERROR COUNT
SEEKAD   DC    1F'0'                   MBBCCHHR
         DC    X'00000001'
LASTDSCB DS    CL5
NINES    DC    CL5'99999'
ZERO     DC    H'0'                    CHECK SENSE BYTES.        A33538
SIXTEEN  DC    F'16'                                          A@ZA32596
EIGHT    DC    F'8'                                           A@ZA32596
SAVECCW  DC    4F'0'                                          A@ZA32596
SAVECCHH DC    X'0000000000'                                  A@ZA32596
TSTDSCB  DC    X'00'                                          A@ZA32596
LIST     DS    0F                      FOR READ IN JFCB
         DC    X'87'
         DC    AL3(0)
OPENLD   RDJFCB (,(INPUT)),MF=L        PARAMETER LIST FOR OPEN
TABLESIZ DS    1F                      SIZE OF DSNAME TABLE
TABLEAD  DS    1F                      POINTER TO DSNAME TABLE
DATE     DS    1D                      CURRENT DATE
SECSW    DS    CL1                     SECURITY SWITCH
WTORSW   DS    CL1                     WRITE TO OPERATOR INDICATOR
COPYSW   DS    CL1                     COPYSWITCH
REPLY    DS    CL1                     OPERATOR REPLY
REPLYAD  DC    A(REPLY)                ADDRESS OF OPERATOR REPLY AREA
GOOD     EQU   X'7F'                   NO I/O ERROR
TICCODE  EQU   X'08'               TIC CCW OP CODE               S20201
D0       EQU   0                        DISP OF ZERO            SA61117
D1       EQU   1                   DISP OF 1                     S20201
L3       EQU   3                   LENGTH OF 3                   S20201
RACKPRM  RACHECK MF=L,CLASS=DATASET                            @G32DSPD
DATASET  DC    AL1(7),CL7'DATASET'      CLASS NAME             @Z40RSRJ
DASDVOL  DC    AL1(7),CL7'DASDVOL'      DASD CLASS NAME        @G32DSPD
RACVOL   DS    CL6                     VOLSER TO RACHECK       @Z40RSRB
PARMLIST CAMLST SCRATCH,0,,VOLIST,,OVRD
VOLIST   DC    H'1'                    VOLUME LIST FOR SCRATCH DATA SET
         DS    1H
         DS    2F
         DC    H'0'
DSCBNO   DS    1F                      SAVE AREA FOR NUMBER DSCBS
DSCBPTR  DS    1F                      POINTER TO READAREA FOR DSCBS
RDCNTAD  DS    F
DUMPNM   DC    CL7'DUMP   '            FUNCTION NAME           @G32DSPD
RESTNM   DC    CL7'RESTORE'            FUNCTION NAME           @G32DSPD
FRMATNM  DC    CL7'FORMAT '            FUNCTION NAME           @G32DSPD
ANALZNM  DC    CL7'ANALYZE'            FUNCTION NAME           @G32DSPD
RC4      DC    AL1(4)                  RACF R-CODE TESTS       @G32DSPD
RC8      DC    AL1(8)                  RACF RETURN-UNAUTHORIZED@G32DSPD
INCON    DC    C'SYSIN   '
PRINTCON DC    C'SYSPRINT'
DPASS    DC    CL8'DPASS   '            PAREST DDNAME           SA61117
F1       DC    F'1'                                              S20201
BLANKS   DC    CL8' '                                            A44112
TWENTY   DC    H'20'
FOUR     DC    H'4'
MSGCON   DC    C'29,'                  SVC NO. FOR I/O ERROR MESSAGE
TIOTSAVE DS    1F                      SAVE AREA FOR FIRST DD ENTRY
PROMPTSA DS    5F                       SAVE AREA FOR SUB-RTNE  Y02083
PASSSAVE DS    18F
SWITCH1  NOPR  14
SWITCH2  NOPR  15
READJFCB DS    44F                     AREA TO READ IN JFCB
DADCB    DCB   DSORG=PS,MACRF=(E),DEVD=DA,EXLST=LIST
         ICHPRCVT                                              @ZA25515
         EJECT
         ICHACHKL                                          /*@Z40RSGD*/
         EJECT
         IEHDWORK
         EJECT
         IEHDBLKS
         EJECT
CCWBUFF  DSECT
CCW1     DS    1D
CCW2     DS    1D
CCW3     DS    1D
         EJECT
F1DSCB   DSECT                          DSECT FOR F1DSCB       @Z40RSRB
         IECSDSL1 (1)                   FORMAT 1 DSCB          @Z40RSRB
F1RACDEF EQU   X'40'                    DS1DSIND=RAC DEFINED   @Z40RSRB
         EJECT
CVT      DSECT
         CVT                                                   @G32DSPD
         EJECT
UCB      DSECT
         IEFUCBOB
         EJECT
JFCB     DSECT
         IEFJFCBN
         DCBD  DSORG=PS
         EJECT
TIOT     DSECT
TIOCNJOB DS    2F
TIOCSTEP DS    4F
DDENTRY  DS    0F                      DD ENTRY FOR EACH DD CARD
TIOELNGH DS    CL1                     LENGTH OF DD ENTRY
TIOESTTA DS    CL1
TIOERLOC DS    CL2
TIOEDDNM DS    2F
TIOEJFCB DS    CL3
TIOESTTC DS    CL1
TIOESTTB DS    CL1
TIOEFSRT DS    CL3
         END
