         TITLE 'IEHDANAL DISK/DRUM ANALYSIS AND FORMAT MODULE.'
         COPY  LCGASMSW
IEHDANAL CSECT
***********************************************************************
*                  FIXES THIS MODULE                                  *
*                     LATEST FIRST                                    *
***********************************************************************
*
*C 024140                                                      @ZA27283
*D 460004,460008       ERRORFLAG EXTRA TRACK  MVS ONLY         @ZA27283
*C 24140                            @XA19389=@YA20174=@SA80138=@ZA29674
*A 719906-719908,719994             @XA19389=@YA20174=@SA80138=@ZA29674
*
*A 24020                            @YA15356=@XA16937=@SA75605=@ZA16492
*
*D 275538                                    @XA12907=@YA12933=@ZA10914
*C 24140,275307,275559                       @XA12907=@YA12933=@ZA10914
*A 275234-275254                             @XA12907=@YA12933=@ZA10914
*
*          VS/2 RELEASE 3.0 DELETIONS/CHANGES
*                                                              @Y30LSFY
*                                                              @ZA04403
*          RELEASE 21 DELETIONS/CHANGES
*                                                               XM4389
* 1251136400-136560                                             A46360
*                                                                A44094
*1251878880-879040                                               A43248
*1251                                                            M0137
*304320 - 304360                                                 M0967
*        RELEASE 20 DELETIONS                                         *
*3463954400                                                      M4683
*3463                                                            A35813
*3463953600-954400                                               M3966
*3463825000                                                      M5900
*3463000820,924000,954400                                        JUDITH
*3463275320                                                      M5723
*3463275800                                                      A35837
*3463084000-084800,275800                                        S20201
*3463953600-954400                                               S20201
*                                                                M4682
*        RELEASE 18 DELETIONS
*1453152800,238400,240800                                        1352
*
*STATUS CHANGE LEVEL 003
***********************************************************************
         EJECT
*FUNCTION/OPERATION- THIS ROUTINE PERFORMS SURFACE ANALYSIS AND
*   FORMATTING OF ALL OS 360 SUPPORTED  DIRECT ACCESS DEVICES EXCEPT  *
*   THE 2321 DATA CELL. (DATA CELL ANALYSIS IS PERFORMED BY IEHDCELL) *
*   SURFACE ANALYSIS CONSISTS OF WRITING AND READING A SERIES OF BIT  *
*   PATTERNS. THREE DIFFERENT BIT PATTERNS ARE WRITTEN AND READ ON  A *
*   TRACK. FOR DISK THESE PATTERNS ARE 1) A FULL TRACK OF X'55'S,     *
*   2) A FULL TRACK OF X'00'S AND 3) A STANDARD 16 BYTE R0. FOR A     *
*   DRUM DEVICE ONLY THE FIRST PATTERN IS DIFFERENT WHICH IS X'5A'S.  *
*   THIS ROUTINE CAN ANALYZE BOTH PRE-ANALYZED AND UNANALYZED DEVICES *
*   FOR UNANALYZED DEVICES,DRUMS AND PREFLAGGED TRACK TESTING  SUP-   *
*   PRESSED THE FIRST CCW IN SURFACE ANALYSIS CHANNEL PROGRAM IS      *
*   MODIFIED FROM A SEARCH HOME ADDRESS TO A WRITE HOME ADDRESS.      *
*   THIS ROUTINE ALSO WRITES AND READ STANDARD R0 WITHOUT PERFORMING  *
*   SURFACE WHENEVER FORMAT IS REQUESTED.                             *
*                                                                     *
*ENTRY POINTS- THE ONLY ENTRY POINT IS IEHDANAL AND CONTROL IS ALWAYS *
*   RECEIVED FROM THE MONITOR (IEHDASDS).                             *
*                                                                     *
*INPUTS- UPON ENTRY REGISTER 10 POINTS TO A FUNCTION BLOCK, REGISTER  *
*   12 POINTS TO A COMMUNICATION WORKAREA,REGISTER 13 HAS A POINTER   *
*   TO A REGISTER SAVE AREA,AND REGISTER 14 HAS THE RETURN ADDRESS.   *
*                                                                     *
*EXITS-NORMAL- A SUCCESSFUL COMPLETION RESULTS IN A RETURN TO THE     *
*   MONITOR(IEHDASDS) WITH A 0 RETURN CODE AND A COMPLETE MESSAGE IN  *
*   THE MESSAGE DATA SET.                                             *
*                                                                     *
*EXITS-ERROR- ANY UNSUCCESSFUL COMPLETION RESULTS IN A RETURN TO THE  *
*   MONITOR(IEHDASDS) WITH THE APPROPRIATE MESSAGE(S) DESCRIBING THE  *
*   ERROR CONDITIONS.                                                 *
*
*EXTERNAL ROUTINES- THIS ROUTINE IS ALWAYS INVOKED BY THE MONITOR.    *
*   IT IN TURN INVOKES THE FOLLOWING EXTERNAL ROUTINES.               *
*        1) THE RESIDENT CONVERT ROUTINES(CVTPCNVT AND CVTPRLTV) TO   *
*           CONVERT TTR TO MBBCCHHR AND VICE VERSA.                   *
*        2) IEHDPASS TO PERFORM PASSWORD PROTECTION CHECKS.           *
*        3) IEHDCELL TO PERFORM SURFACE ANALYSIS ON THE 2321 DATA CELL*
*        4) IEHDVTOC TO FORMAT AND WRITE THE VTOC,IPL TEXT,AND TRACK  *
*           ZERO.                                                     *
*        5) IEHDMSGB TO CONSTRUCT MESSAGES IN A MESSAGE BUFFER.       *
*        6  IEHDPRNT TO WRITE MESSAGES IN A MESSAGE DATA SET          *
*        7) SVC 82 TO ASSIGN ALTERNATE TRACKS,POST UCB'S AND CONSTRUCT*
*           DEB FOR UNANALYZED DEVICES.                               *
*TABLES/WORKAREAS- REGISTER 10 AND 12 POINT TO A FUNCTION BLOCK AND A *
*   WORKAREA RESPECTIVELY.                                            *
*        1) IODEVCON- DEVICE CONSTANT TABLE,DESCRIBED BY CONSTANT     *
*           DSECT.                                                    *
*        2) FUNCTION BLOCK- DESCRIBED BY FUNCBLK DSECT                *
*        3) COPY BLOCK- DESCRIBED BY COPYBLK DSECT.                   *
*        4) COMMUNICATION VECTOR TABLE- DESCRIBED BY CVT DSECT        *
*        5) COMMUNCATION WORK AREA- DESCRIBED BY WORK DSECT.          *
*        6) IEHDANAL WORK AREA- DESCRIBED BY WORKAREA DSECT.          *
*        7) TRACK ANALYSIS BUFFER- DESCRIBED BY BUFFCORE DSECT.       *
         EJECT
REG0     EQU   0
REG1     EQU   1                  PARAMETER LIST POINTER REG.
REG2     EQU   2                  UCB POINTER REG.
REG3     EQU   3                  COPY BLOCK POINTER REG.
REG4     EQU   4                  I/O DEV CON TABLE POINTER.
REG5     EQU   5
REG7     EQU   7                  BUFFER CORE POINTER.
REG8     EQU   8                  CVT POINTER.
REG9     EQU   9
REGA     EQU   10
REGB     EQU   11
REGC     EQU   12                 COMMON WORK AREA BASE.
REGD     EQU   13                 SAVE AREA REGISTER.
REGE     EQU   14                 RETURN REGISTER.
REGF     EQU   15                 ENTRY POINT REG/CONTROL BLOCK PTR.
BASEREG  EQU   6                  PROGRAM BASE REGISTER.
WORKREG  EQU   5
FBLKREG  EQU   10                 FUNCTION BLOCK BASE.
* 276000                                                           O122
         USING *,BASEREG,REG4                                  @ZA04403
         USING WORKAREA,WORKREG
         USING WORK1,REGC
         USING BUFFCORE,REG7
         USING FUNCBLK,FBLKREG
         USING CVT,REG8
         USING CONSTANT,REGE                                   @Z30RSAG
         USING COPYBLK,REG3
         SAVE  (14,12),T,*        SAVE REGISTER FOR CALLING ROUTINE.
         LR    BASEREG,REGF       ESTABLISH PROGRAM ADDRESSABILITY.
         LA    REGB,FBLOCKS       SET UP CONTROL BLOCK BASE    @ZA16492
         LA    REG4,2048               SET UP                  @ZA04403
         B     APARNO                   BRANCH AROUND APAR NO  @ZA04403
         DC    C'ZA27283'               LAST FIX THIS MOD      @ZA27283
APARNO   LA    REG4,2048(REG4,BASEREG)    SECOND BASE.         @ZA04403
         L     REGE,PTRCFUNC      GET PTR TO CURR FUNCTION     @ZA04403
         TM    0(REGE),PROCESS    WAS FUNCT PREVIOUSLY STRTED  @Z30RSAG
         BZ    GETUCB             NO-BR AND CONTINUE INIALIZATION.
         L     REGD,SAVEPTR       YES-GET POINTER TO MY SAVE AREA.
         LM    REGE,REGC,12(REGD) RESTORE MY REGISTERS.
         B     RETURNAD
         EJECT
*
**********************************************************************
*
*   THIS ROUTINE PERFORM THE FOLLOWING FUNCTIONS:
*              1. TEST TO SEE IF THE DEVICE CAN BE ANALYZED/FORMATTED.
*              2. CONVERTS THE EXTENTS FROM UNPACKED DECIMAL TO BINARY.
*              3. GETS CORE FOR A WORK AREA.
*
**********************************************************************
*
         USING UCBOB,REG2
GETUCB   EQU   *
         XC    RETCODE,RETCODE          CLEAR RETURN CODE.      SA59746
         GETMAIN R,LV=SIZE
         LR    WORKREG,REG1       SET UP REGISTER FOR WORK AREA.
         XC    WKBUFPTR(8),WKBUFPTR  CLEAR PTR & SIZE OF COND WKAREA.
         ST    REGD,OLDSAPTR      SAVE POINTER TO OLD SAVE AREA
         LA    REGF,SAVEAREA
         ST    REGF,8(REGD)       SAVE POINTER TO THIS SAVE AREA
         LR    REGD,REGF          IN CALLING PROGRAM SAVE AREA.
         L     REG2,TUCBPTR       GET UCB OF DEVICE TO BE PROCESSED.
         AIF   ('&LIB' EQ 'LIB2').X227202                       XL03912
         CLI   UCBID,X'FF'        IS THIS A 2321
         BE   NOTDCELL            NO-BYPASS MAIN UCB CALCULATION
         MVI   FUNCSW,ANALYSIS    SET ANALYZE INDICATOR ON.
         LA    REG0,SRTEUSER-UCBOB     GET SIZE OF MAIN UCB
         DROP  REG2
         USING DATACELL,REG2
         LH    REGF,DCELBBNR      GET BIN NUMBER
         SLL   REGF,4             GET LENGTH OF SUB UCBS
         ALR   REGF,REG0
         SR    REG2,REGF          GET POINTER TO MAIN UCB
         DROP  REG2
         USING UCBOB,REG2
NOTDCELL EQU   *
.X227202 ANOP                                                   XL03912
         TM    UCBTBYT3,UCB3DACC  IS THIS A DIRECT ACCESS DEVICE.
         BZ    BADEVICE           NO-PREPARE FOR ERROR RETURN.
         TM    SRTESTAT,SRTESYSR  IS THIS VOLUME SYSTEM RESIDENT.
         BO    VOLUMERR           YES-SET UP ERROR MSG.
         TM    UCBTBYT2,UCB2OPT3   DO WE HAVE CARNY             XM4389
         BZ    CARNOT              NO                            S20201
         OI    SEQSW+D1,RPS                                     XM4389
CARNOT   EQU   *                        *                        S20201
         NI    FVTOCPTR+4,X'CF'   SET PROPER SIGN IN VTOC BEGIN.
         PACK  PRGSAVE(8),FVTOCPTR(5)  PACK INPUT VTOC RTA.
         CVB   REG0,PRGSAVE       CONVERT PACKED RTA TO BINARY
         ST    REG0,RTAVTOCS      SAVE RTA OF BEGIN OF VTOC.
         LA    REG3,1
         LTR   REG0,REG0          TRACK REQUESTED FOR VTOC.
         BZ    BADTRADD           YES-SET UP ERROR CONDITION.
         AIF   ('&LIB' EQ 'LIB2').X227203                       XL03912
         TM    SEQSW,IPLDD        WAS IPL TEXT REQUESTED.
         BZ    TRAKOKAY         NO-CONTINUE PROCESSING.
         CR    REG0,REG3        VTOC STARTING TRACK GREATER THAN ONE.
         BH    TRAKOKAY           YES-CONTINUE PROCESSING.
         CLI   UCBTBYT4,1         IS THIS A2311.
         BE    BADTRADD           YES-SET UP ERROR CONDITION.
         CLI   UCBTBYT4,3         IS THIS A 2303.
         BE    BADTRADD           YES-SET UP ERROR CONDITION.
TRAKOKAY EQU   *
.X227203 ANOP                                                   XL03912
         BAL   REG3,CONVERT       CONVERT RTA TO CCHH.
         L     REGE,IODEVCON           ENSURE BASE SET         @Z30RSAG
         MVC   MBBCCHH1(4),MBBCCHH2+3  SAVE BEGIN CCHH.
         NI    FEXTENT+4,X'CF'    SIGN PROPER SIGN IN VTOC LENGTH.
         PACK  PRGSAVE(8),FEXTENT(5)  PACK INPUT VTOC LENGTH.
         CVB   REG0,PRGSAVE       CONVERT CTOC LENGTH TO BINARY.
         ST    REG0,WKBUFPTR       SAVE NUMBER OF TRACKS IN VTOC.
         LTR   REG0,REG0          ZERO NUMBER OF TRACKS IN VTOC.
         BZ    BADTRADD           YES-SET UP ERROR CONDITION.
         A     REG0,RTAVTOCS      COMPUTE ENDING RTA OF VTOC.
         BCTR  REG0,0             DECREMENT UPPER EXTENT.
         ST    REG0,RTAVTOCE      SAVE RTA OF END OF VTOC.
         LR    REG1,REG5          PASS POINTER TO WORKAREA TO IEHDVTOC.
         STM   REG9,REG2,PRGSAVE  SAVE REGS FOR CONVERT ROUTINE.
         BAL   REG3,CONVERT2      CONVERT VTOC END RTA TO CCHH.
         L     REGE,IODEVCON           ENSURE PTR SET          @ZA04403
         MVC   MBBCCHH1+4(4),MBBCCHH2+3
         L     REG9,LASTORIG
         A     REG9,CONVCYL       GET CCHH OF 1ST ALTERNATE TRACK.
         AIF   ('&LIB' EQ 'LIB2').X227204                       XL03912
         CLI   UCBTBYT4,X05            IS THIS A 2321.           S20201
         BNE   NO2321              NO                            S20201
         MVC   PRGSAVE(3),LASTORIG     SET UP LAST PRIMARY CONSTANT.
         LA    REG9,256
         STC   REG9,PRGSAVE+3      SET TO START OF NEXT CYL.
         CLI   PRGSAVE+2,4        TEST FOR LAST CYLINDER ON STRIP.
         BL    ADDCONST           NO-INCREMENT TO NEXT CYL.
         STC   REG9,PRGSAVE+2      START OF NEXT STRIP.
         SLL   REG9,8              SHIFT CONSTANT TO UP STRIP.
         CLI   PRGSAVE+1,9        TEST FOR LAST STRIP ON SUBCELL.
         BL    ADDCONST           NO- INCREMENT TO NEXT STRIP.
         STC   REG9,PRGSAVE+1     YES-SET TO START OF SUBCELL
         SLL   REG9,8             SHIFT CONSTANT TO UP SUBCELL.
ADDCONST EQU   *
         A     REG9,PRGSAVE       INCREMENT PROPER FIELD IN CCHH.
NO2321   EQU   *
.X227204 ANOP                                                   XL03912
         ST    REG9,PRGSAVE       SAVE CCHH FOR LATER USE IN BLDIOBLK.
         L     REGE,IODEVCON           GET PTR TO DEV. CONS.   @Z30RSAG
         ST    REG9,FALTDATA      INSERT START ALTERNATE TRACK
         MVC   FALTDATA+4(2),TOTALALT  AND TOTAL NO OF ALTERNATE TRKS.
*
         LA    REG9,WORKBUFF      GET SIZE OF WORK BUFFER
         AH    REG9,SACAP         ADD SIZE OF TRACK
         SRL   REG9,3
         SLL   REG9,3
         LA    REG9,16(REG9)      ALIGN SIZE TO A DOUBLE WORD
         ST    REG9,WKBUFSI
         LA    REG7,FBUFFPTR      POINTER TO AREA TO STORE BUFFER ADDR
         GETMAIN EC,LV=(REG9),A=(REG7)
         LTR   REGF,REGF          WAS THE DESIRED CORE AVAILABLE
         BNE   NOCORIND           NO-INDICATE CORE WAS NOT AVAILABLE
         L     REG7,FBUFFPTR      GET POINTER TO BUFFER WORKAREA
         EJECT
**********************************************************************
*
*    HERE WE DETERMINE IF COPIES ARE TO BE MADE.
*
**********************************************************************
*
         L     REG3,COPYPTR       PICK UP POINTER TO THE COPY BLOCK
NEXTCOPY EQU   *
         LTR   REG3,REG3      ARE THERE MORE COPIES TO BE MADE.
         BNZ   COPYES             YES- TEST FOR LIKE DEVICE TYPE.
         L     REG3,COPYPTR       POINT TO THE 1ST COPY BLOCK.
MVEBLOKS EQU   *
         USING IHADCB,REGF
         LA    REGF,FBLOCKS       POINT TO THE FUNCTION BLOCK AREA.
         BAL   REGE,BLDIOBLK      BUILD I/O BLOCKS IN FUNCTION BLOCK.
         MVC   DCBDDNAM(8),DDNAME2     INSERT DDNAME.
         L     REG3,COPYPTR
BLDCOPY  EQU   *
         LTR   REG3,REG3          TEST FOR MORE COPIES.
         BZ    LASTCOPY       NO-GO TEST FOR A NEW VOLUME.
         LA    REGF,CIOBLOCK      SET UP BASE FOR CONTROL BLOCKS.
         BAL   REGE,BLDIOBLK      BUILD I/O BLOCKS IN COPY BLOCKS.
         MVC   DCBDDNAM(8),DDNAME3     PLACE DDNAME INTO COPY DCB.
         L     REG3,CCOPYPTR      GET POINTER TO NEXT COPY BLK.
         B     BLDCOPY
BLDIOBLK EQU   *                  THIS SUBR CONSTRUCTS ECB,IOB AND DCB.
         MVC   0(72,REGF),DCBCONST     RELOCATE CONTROL BLOCKS.
         MVC   SEEKADDR+3(4),PRGSAVE SET 1ST ALTERNATE TRK IN IOB.
         ST    FBLKREG,DCBIOBAD   STORE POINTER TO FBLOCK IN DCB.
         XC    WKAECB(40),WKAECB  INITIALIZE ECB/IOB.
         MVI   WKAIOB,X'42'       SET CMND CHN UNRELATED REQ.
         LA    REG0,WKAECB
         ST    REG0,ECBADD        ECB POINTER INTO COPY BLK.
         ST    REGF,DCBADD        DCB POINTER INTO COPY BLK.
         TM    SEQSW+D1,RPS        IS CARN HERE                 XM4389
         BZ    NOTCARN             NO                            S20201
          LA    REG0,CCWSECON           SET UP POINTER TO SET    A46360
*                                       SECTOR                   A46360
         ST    REG0,CCWPTR         PUT IN IOB                    S20201
         B     CARNY                   CONTINUE PROCESS.         S20201
NOTCARN  EQU   *                        *                        S20201
         LA    REG0,CCW1CONS
         ST    REG0,CCWPTR        CCW POINTER INTO IOB.
CARNY    EQU   *                        *                        S20201
         MVI   BLKERRCT+1,X'01'
         BR    REGE               RETURN.
         EJECT
*
**********************************************************************
*
COPYES   EQU   *   THIS ROUTINE IS ENTERED WHEN COPIES ARE REQUESTED,
*                  TO DETERMINE IF THE DEVICES ARE ALIKE AND USEABLE.
*
**********************************************************************
*
         L     REG9,CUCBPTR       GET COPY BLOCK UCB POINTER.
         AIF   ('&LIB' EQ 'LIB2').X227205                       XL03912
         CLI   UCBID-UCBOB(REG9),X'FF' IS THIS A DATA CELL.
         BE    NON2321            NO-CHECK FOR LIKE DEVICES
         LA    REG1,21
         B     SETMSG             SET UP ERROR MSG IN OUTPUT BUFFER.
NON2321  EQU   *
.X227205 ANOP                                                   XL03912
         CLC   UCBTBYT3(2),UCBTBYT3-UCBOB(REG9)  ARE DEVICES ALIKE.1352
         BNE   BADCOPY            NO-SET ERROR MSG.
         AIF   ('&LIB' EQ 'LIB1').X227200                       XL03130
         CLI   UCBTBYT4,WIN             IS THIS A 3340?          XM3782
         BNE   NOTWIN                   NO, SKIP DEV MOD TEST.   XM3782
         CLC   ODEVMOD,CDEVMOD          ARE DEVICE MODELS SAME? XL03130
         BNE   BADCOPY                  NO, SET ERROR MSG.      XL03130
NOTWIN   EQU   *                                                 XM3782
.X227200 ANOP                                                   XL03130
         TM    SRTESTAT-UCBOB(REG9),SRTESYSR  IS THIS SYSTEM RESIDENCE.
         BO    VOLUMERC           SET UP ERROR MSG.
LIKEDEV  EQU   *
         MVC   CALTDATA(6),FALTDATA  SET UP ALTERNATE DATA IN COPYBLKS.
         L     REG3,CCOPYPTR      PICK UP POINTER TO NEXT COPY BLOCK
         B     NEXTCOPY           TEST UCB OF THE COPY FUNCTION
         EJECT
*
**********************************************************************
*
*  CONSTRUCT DUMMY DEB FOR THE RESIDENT CONVERT ROUTINE (CVTPCNVT)
*        WHEN THIS ROUTINE IS ENTERED REG0 CONTAINS TT IN RIGHT HALF.
*        THIS SECTION PERFORM THE INITILIZATION BEFORE CALLING CVTPCNVT
*
**********************************************************************
*
CONVERT  STM   REG9,REG2,PRGSAVE  SAVE VOLATILE REG'S
         LA    REG9,KDEVSIZE      PICK UP SIZE OF ENTRIES IN DEVCON TBL
         L     REGE,IODEVCON      GET PTR TO THE DEV CON TBLE  @ZA04403
         SR    REG8,REG8
         IC    REG8,UCBTBYT4      PICK UP INIT TYPE TO COMPUTE INDEX.
         AIF   ('&LIB' EQ 'LIB1').X227201                       XL03130
         CLI   UCBTBYT4,WIN             IS THIS A 3340?         XL03130
         BNE   GETCON                   NO, GET DEVICE CONSTANT XL03130
         IC    REG8,ODEVMOD             YES, USE DEV MOD NO.    XL03130
GETCON   EQU   *                                                XL03130
.X227201 ANOP                                                   XL03130
         BCTR  REG8,0
         MR    REG8,REG8          COMPUTE THE DISPLACEMENT INDEX.
         AR    REGE,REG9               GET PROPER DEVCON ENT.  @Z30RSAG
         ST    REGE,IODEVCON      STORE PTR TO DEV CON ENTRY.  @ZA04403
CONVERT2 EQU   *
         SLL   REG0,16            POSITON TT IN HIGH ORDER TWO BYTES.
         ST    REG2,DUCBPTR       SET UP UCB POINTER.
         MVI   DEXTNTNO,1           **   EXTENT NUMBER.
         XC    DEXTNTS(4),DEXTNTS  **  BEGIN CCHH.
         MVC   DEXTNTE(4),LASTORIG  **   END CCHH
         MVC   DEXTNTR(2),TOTALPRM  **   TOTAL PRIMARY TRK
         LA    REG1,DDEB            **   DUMMY DEB POINTER
         LA    REG2,MBBCCHH2        **   MBBCCHHR AREA
         L     REG8,CVTPTR               RESTORE CVT BASE
         L     REGF,CVTPCNVT        GET ENTRY POINT.
         BALR  REGE,REGF            CALL CONVERT
         LM    REG9,REGE,PRGSAVE    RESTORE PART OF VOLATILE REG
         L     REGE,IODEVCON        GET PTR TO THE DEV CON TBLE@ZA04403
         LTR   REGF,REGF            IS THIS A VALID EXTENT FOR THE VTOC
         BNZ   BADTRKAD                NO-SET UP ERROR MSG.
         LM    REGF,REG2,PRGSAVE+24    RESTORE REMAINING REGS.
         BR    REG3               RETURN.
         EJECT
LASTCOPY EQU   *
         TM    SEQSW+D1,MSSFLG          MSS CONVERSION?        @Y30LSFY
         BO    NUVOLUME           YES - TEST FOR VOLUME OFFLINE@Y30LSFY
         CLI   DDNAME2,X'40'      IS THIS A NEW VOLUME.
         BE    NUVOLUME           YES-TEST FRO VOLUME OFFLINE.
         LA    REGF,FBLOCKS
OPEN1    EQU   *
         LA    REG0,RDAREA1       GET ADDRESS OF JFCB READ IN AREA.
         ST    REG0,LIST          PLACE ADDR IN RDJFCB LIST
         MVI   LIST,X'87'         SET RDJFCB AND LAST ENTRY INDICATOR.
         LA    REGE,LIST
         ST    REGE,DCBEXLST      STORE EXIT LIST ADDRESS INTO DCB.
         BAL   REG8,READJFCB      READ JFCB AND OPEN VTOC.
         L     REG3,COPYPTR       GET POINTER TO COPY BLOCK
COPYOPEN EQU   *
         LTR   REG3,REG3          ANOTHER COPY REQUESTED
         BZ    NOCOPIES           NO-TEST FOR 2321
         LA    REGF,CIOBLOCK      POINT TO DCB.
         LA    REGE,LIST          GET POINTER TO DCB EXIT LIST.
         ST    REGE,DCBEXLST      STORE EXIT LIST ADDR INTO COPY DCB.
         BAL   REG8,READJFCB      READ JFCB AND OPEN COPY VTOC.
         L     REG3,CCOPYPTR      GET NEXT COPY BLOCK POINTER
         B     COPYOPEN           LOOP UNTIL FINISH
         EJECT
*
**********************************************************************
*
READJFCB EQU   *        HERE THE JFCB'S ARE READ AND VTOC ARE OPENED.
*
**********************************************************************
*
         DROP  REGF
         USING IHADCB,REG9
         MVI   OPENLD,X'8F'       SET UP OUTPUT INDICATOR.
         LR    REG9,REGF          SET UP TEMPORARY CONTROL BLOCKS BASE.
         RDJFCB  ((REG9)),MF=(E,OPENLD) READ JFCB INTO CORE.
         L     REGF,LIST          GET POINT TO JFCB .
         USING JFCB,REGF
         OI    JFCBTSDM,X'08'     STOP JFCB REWRITE
         MVI   JFCBDSNM,X'04'
         MVC   JFCBDSNM+1(43),JFCBDSNM  SET UP DATA SET NAME
         OPEN  MF=(E,OPENLD),TYPE=J    OPEN PRIMARY DCB
         LR    REGF,REG9               RESTORE PERMANENT BASE
         TM    DCBOFLGS,X'10'          TEST FOR SUCCESSFUL OPEN
         BZ    NOTOPEN                 BR ON UNSUCCESFUL OPEN
         NI    DCBMACRF+1,X'F3'   PREVENT TTR UPDATE AND EOF WRITE
         DROP  REG9
         DROP  REGF
         USING IHADCB,REGF
         BR    REG8               RETURN.
         EJECT
*
**********************************************************************
*
NUVOLUME EQU   *        THIS ROUTINE IS ENTERED WHEN AN UNLABELED
*                       VOLUME IS TO BE PROCESSED.
*
**********************************************************************
*
         L     REG9,TUCBPTR            POINT TO UCB.               1352
         TM    SRTESTAT-UCBOB(REG9),SRTEONLI     IS DEVICE ONLINE. 1352
         BO    ONLINERR           YES SET UP ERROR MESSAGE.
         LA    REGF,FBLOCKS       GET DCB POINTER.
         BAL   REG8,BLDDEB        BUILD PARM LIST FOR DEB BUILDER.
         L     REG3,COPYPTR       GET POINTER TO COPY BLOCK.
COPYLOOP EQU   *
         LTR   REG3,REG3          ANOTHER COPY REQUESTED.
         BZ    PASSOKAY                NO-SET UP R0 COUNT FIELD.
         LA    REGF,CIOBLOCK      GET COPY DCB POINTER.
         L     REG9,CUCBPTR       GET COPY UCBPTR
         TM    SRTESTAT-UCBOB(REG9),SRTEONLI  IS DEVICE ONLINE.
         BO    ONLINERC           SET UP ERROR MSG.
         BAL   REG8,BLDDEB
         L     REG3,CCOPYPTR      GET NEXT COPY BLOCK POINTER.
         B     COPYLOOP           LOOP UNTIL FINISH
         EJECT
*
**********************************************************************
*
BLDDEB   EQU   *             HERE THE PARM LIST FOR DEB BUILDER IS
*                            CONSTRUCT AND A DEB IS BUILT IN PROTECTED
*                            CORE.
*
**********************************************************************
*
         ST    REG9,PARMUCB       STORE PROPER UCB POINTER
         ST    REGF,PARMDCB       STORE PROPER DCB POINTER
         MVI   PARMUCB,X'8F'      SET UP DEB CONSTRUCTION INDICATOR.
         MVI   PARMDCB,X'80'      SET LAST ENTRY INDICATOR.
         LA    REG1,PARMLST       GET POINTER TO PARM LIST
         SVC   82                 CONSTRUCT DEB IN PROTECTED CORE.
         LTR   REGF,REGF          WAS DEB SUCCESSFULLY BUILT.
         BCR   8,REG8             YES-CONTINUE PROCESSING.
         L     REG1,PARMDCB       PICK UP POINTER TO CURRENT DCB.
         LA    REG1,0(REG1)       CLEAR HIGH ORDER BYTE.
         LA    REG8,FBLOCKS       GET ADDRESS TO FUNCTION BLOCK DCB.
         CR    REG8,REG1          IS THIS FUNCTION BLOCK DCB.
         BE    ONLINERR           YES-SET UP AND PRINT ERROR MSG.
         B     ONLINERC           NO-SET UP AND PRINT COPY ERROR MSG.
*
**********************************************************************
*
*   TEST FOR PROTECTED AND UNEXPIRED DATA SETS HERE.
*
**********************************************************************
NOCOPIES EQU   *
         LR    REG1,REG7          SET UP POINTER TO BUFFER WORK AREA
         LINK  EP=IEHDPASS        CHECK FOR PASSWORD DATA SETS
         LA    REGD,SAVEAREA      RESTORE MY SAVEAREA POINTER.
         LTR   REGF,REGF          WAS PASSWORD CHECK OKAY
         BZ    PASSOKAY           YES-CONTINUE PROCESSING
ABNORMN  EQU   *
         LR    REG2,REGF          NO-SAVE RETURN CODE
         LA    REG8,RETRNABN      PICK UP RETURN ADDRESS.
         LA    REGB,FBLOCKS       POINT TO I/O CONT*OL BLOCKS
         B     CLOSENXT           CLOSE OPEN DCBS
         EJECT
PASSOKAY EQU   *
         AIF   ('&LIB' EQ 'LIB1').X227206                       XL03145
         CLI   UCBTBYT4,WIN            IS THIS A 3340?           XM5465
         BNE   NO3340                  NO, CHECK OTHER DEVICES.  XM5465
         TM    SEQSW,PASSES            PASSES SPECIFIED?       @ZA10914
         BO    TSTFLG                  YES THEN TST IF FLAGTST @ZA10914
         MVI   PASSCNT+D1,ONE          FORCE ONE PASS ON 3340.   XM5465
TSTFLG   TM    SEQSW,FLAGTEST          IS FLAGTEST = NO?       @ZA10914
         BO    NO3330                  YES, TEST FOR PASSES.     XM5465
NO3340   EQU   *                                                 XM5465
         CLI   UCBTBYT4,D3350           MADRID ?               @VS40430
         BE    TSTONLI                  TEST ONLINE STATUS     @VS40430
         TM    FLGBYT1,EMU             EMULATION ACTIVE ?      @Z30RSAG
         BNO   NOLEM3X                 NO, NORMAL PROC         @Z30RSAG
         TM    SEQSW+D1,MSSFLG          SSI CONVERSION ?       @Y30LSFY
         BO    NO3330                  YES,DON'T BUILD VTOC NOW@Y30LSFY
         CLI   UCBTBYT4,WIN            IS DEVICE 3340          @Z30RSAG
         BE    NOLEM3X                 YES, CAN'T BE 333X      @Z30RSAG
TSTONLI  TM    SRTESTAT,SRTEONLI              IS IT ON-LINE    @ZA10914
         BZ    NO3330                  NO, OFFLINE EM.333X     @Z30RSAG
NOLEM3X  EQU   *        NOT OFF-LINE EMULATED 333X             @Z30RSAG
         TM    SEQSW+D1,MSSFLG          SSI CONVERSION ?       @X04ACFY
         BO    NO3330                  YES,DON'T BUILD VTOC NOW@X04ACFY
         CLI   UCBTBYT4,FACTPACK        UCB TYPE GREATER THAN 9 XL03145
         BL    NO3330                   NO, PASS COUNT IS OK.   XL03145
         XC    PASSCNT(2),PASSCNT       MUST HAVE PASSES EQ 0.  XL03145
         AGO   .X227207                                         XL03145
.X227206 ANOP                                                   XL03145
         CLI   UCBTBYT4,FACTPACK   IS THIS MERLIN                S20201
         BNE   NO3330                   NO CONTINUE              M5723
         XC    PASSCNT(2),PASSCNT       3330 MUST HAVE PASSES EQ M0137
*                                       0                        M0137
.X227207 ANOP                                                   XL03145
         CLI   FUNCSW,FORMAT            IS THIS A FORMAT         M5723
         BNE   BLDVTOC                  NO - QUICK DASDI         M5723
NO3330   EQU   *                                                 M5723
         TM    SEQSW,PASSES             IS PASS SPECIFIED          O122
         BZ    HERE                     IF NOT, CONTINUE           O122
         CLC   PASSCNT(2),ZERO     DOES PASSES =0                S20201
         BE    BLDVTOC                  IF YES, CREATE VTOC        O122
         EJECT
HERE     EQU   *                                                   O122
*                                                              @ZA04403
*   THE FOLLOWING SECTION OF CODE WAS MOVED FROM SYMBOL        @ZA04403
*   'SETUPR0S' IN CONVERT SECTION, AND THE SYMBOL DELETED      @Z30RSAG
*   TO ELIMINATE THE LINKAGE                                   @Z30RSAG
         XC    STNDR0(WORKBUFF),STNDR0 CLEAR R0 COUNT AREAS,   @ZA04403
         L     REG0,PRGSAVE       GET CCHH OF TRK TO BE PROC   @ZA04403
         L     REGE,IODEVCON           GET DEVCON PTR          @ZA04403
         LH    REG1,SACAP         GET DATA LTH FOR SURF ANAL   @ZA04403
         STM   REG0,REG1,MAXLTHR0 SET MAXIMUM LENGTH R0 COUNT. @ZA04403
         STM   REG0,REG1,MAXR0BIT SET UP MAX CNT FOR BIT PTTRN.@ZA04403
         LA    REG1,8                                          @ZA04403
         STM   REG0,REG1,STNDR0 SET UP R0 COUNT (STANDARD).    @ZA04403
*                                                              @ZA04403
*   END OF MOVED 'SETUPR0S' SECTION.                           @ZA04403
*                                                              @ZA04403
         TM    FUNCSW,FORMAT      IS THIS A FORMAT FUNCTION    @ZA04403
         BO    BITBYPAS           YES-BYPASS BIT CONSTRUCTION  @ZA04403
         TM    SEQSW+D1,MSSFLG    NO-IS THIS MSS STAGING PACK  @ZA04403
         BO    BITBYPAS           YES-BYPASS BIT CONSTRUCTION  @ZA04403
         AIF   ('&LIB' EQ 'LIB1').X227208                       XL03912
         TM    FLGBYT1,EMU             ANY EMULATED DEVICE ?   @Z30RSAG
         BO    SETBIT                  YES, USE 3340 PATTERN   @Z30RSAG
         CLI   UCBTBYT4,D3350          IS THIS A 3350?         @VS40037
         BE    SETBIT                  NO, USE 3340 PAT        @VS40037
         CLI   UCBTBYT4,WIN            IS THIS A 3340?           XM5465
         BNE   USEFIVE                 NO, USE FIVES AS PATTERN. XM5465
SETBIT   EQU   *                                               @Z30RSAG
         MVC   BITBUFF(L8),TEST3340    GET 3340 TEST PATTERN.    XM5465
         B     PATSET                  PATTERN IS READY.         XM5465
USEFIVE  EQU   *                                                 XM5465
         MVC   BITBUFF(L8),PATTERN     FIVES USED AS PATTERN.    XM5465
PATSET   EQU   *                                                 XM5465
         XC    HALFWD,HALFWD           CLEAR ONE HALFWORD.       XM5465
         L     REGE,IODEVCON           POINT TO DEVCON         @Z30RSAG
         LH    REGF,SACAP              GET S/A TRACK CAPACITY.   XM5465
         LA    REGE,BITBUFF            POINT TO BIT PATTERN    @Z30RSAG
         LA    REG8,K9                 GET A NUMBER NINE.        XM5465
         SR    REGF,REG8               DECR LNGTH BY FIRST MOVE. XM5465
         STC   REGF,HALFWD+D1          SAVE LAST BYTE OF LENGTH. XM5465
         SRL   REGF,B8                 NUMBER OF MOVES - ONE.    XM5465
         LA    REG8,MAXBYTE            GET NUMBER FOR MAX MOVE.  XM5465
BITLOOP  EQU   *                                                 XM5465
         EX    REG8,MOVEBITS           FILL BUFFER WITH PATTERN. XM5465
         LA    REGE,MAXBYTE+D1(REGE)   INCR BUFF ADDR BY 256.    XM5465
         BCT   REGF,BITLOOP            LOOP UNTIL FINISHED.      XM5465
         LH    REG8,HALFWD             GET REMAINING LENGTH.     XM5465
         LTR   REG8,REG8               ANY LENGTH LEFT?          XM5465
         BNP   BITBYPAS                NO, BUFFER IS FULL.       XM5465
         EX    REG8,MOVEBITS           FILL REMAINING BUFFER.    XM5465
         B     BITBYPAS                START BUILDING CCWS.      XM5465
***********************************************************************
MOVEBITS MVC   B8(NULL,REGE),BITBUFF   OBJECT OF EX INSTRUCTION. XM5465
***********************************************************************
         EJECT
BITBYPAS EQU   *                                                 XM5465
         L     REG2,TUCBPTR             PICK UP UCB POINTER     XL03912
         AGO   .X227211                                         XL03912
.X227208 ANOP                                                   XL03912
         MVI   0(REGE),X'55'      ASSUME DEVICE IS NOT 2301 OR 2321
         L     REG2,TUCBPTR       PICK UP UCB POINTER.
         CLI   UCBID,X'FF'        IS THIS A 2321
         BNE   SETE5              YES MODIFY BIT PATTERN TO E5
         CLI   UCBTBYT4,X'03'     IS THIS A 2301
         BNE   BLDPATTN           NO-BUILD PATTERN FOR 55
         MVI   0(REGE),X'5A'      YES-SET PATTERN FOR 5A
BLDPATTN EQU   *
         MVI   HALFWD,0           SET FIRST BYTE OF HALD WORD TO ZERO
         LH    REGF,SACAP         GET BIT PATTERN LENGTH
         STC   REGF,HALFWD+1      SAVE LENGTH OF FIELD TO BE MOVED
         BCTR  REGF,0             DECREMENT FOR PROPER EX LENGTH
         EX    REGF,MOVEBITS      MOVE PROPER NUMBER OF BYTES
         AH    REGE,HALFWD        UPDATE FIELD POINTER
         SRL   REGF,8             GET NUMBER OF BITS TO BE MOVED
         LTR   REGF,REGF          IS BIT PATTERN COMPLETE
         BE    BITBYPAS           YES-TEST FOR 2321
BITLOOP  EQU   *
         LA    REG8,255           GET LENGTH OF NEXT MOVE
         EX    REG8,MOVEBITS      SET UP MORE BITS IN OUTPUT BUFFER
         LA    REGE,256(REGE)     UPDATE FIELD POINTER
         BCT   REGF,BITLOOP       LOOP UNTIL FINISH
         B     BITBYPAS
MOVEBITS EQU   *
         MVC   1(1,REGE),0(REGE)  *THIS IS OBJECT OF EX INSTRUCTION
SETE5    EQU   *
         MVI   BITBUFF,X'E5'      SET UP BIT PATTERN FOR 2321
         B     BLDPATTN           GO COMPLETE BIT PATTERN.
BITBYPAS EQU   *
         CLI   UCBID,X'FF'        IS THIS A 2321
         BNE   IS2321             YES-SET UP LINKAGE FOR IEHDCELL
.X227211 ANOP                                                   XL03912
         LA    REGF,FBLOCKS       SET UP CONTROL BLOCK BASE.
         TM    SEQSW+D1,RPS        DO WE HAVE RPS               XM4389
         BZ    NOGOT               NO                            S20201
         MVC   CCWSECON(K136),SETSECCW YES                       S20201
         LA    REG0,CCW1CONS           SET TIC ADDR              M0967
         ST    REG0,TEMP                                         M0967
         MVC   TICSEC+D1(K3),TEMP+D1   POINT TIC                 M0967
         B     GO                      BUILD CCWS.               S20201
NOGOT    EQU   *                        *                        S20201
         MVC   CCW1CONS(120),CCWORD1   MOVE CCWS TO FUNCTION BLOCK.
GO       EQU   *                        *                        S20201
         TM    FUNCSW,FORMAT      IS THIS A FORMAT FUNCTION.
         BO    FORMATF            YES-BYPAS THE ANALYZE CCW CREATION.
         TM    SEQSW+D1,MSSFLG    NO-IS THIS MSS STAGING PACK  @ZA04403
         BO    FORMATF            YES-BYPASS ANAL CCW CREATION @ZA04403
         EJECT
**********************************************************************
*
* THIS IS THE ANALYZE FUNCTION WITH NO PREVIOUSLY FLAGGED TRACK TEST.
*
**********************************************************************
         LA    REG1,FLAGREAD      HOME ADDRESS AREA PTR IN FUNCBLOCK.
         BAL   REGE,BLDACCW       BUILD CCWS FOR ANALYZE FUNCTION.
**********************************************************************
*
* THIS SECTION BUILDS THE CCWS TO CONVERT FROM 3330-3350-3330. @VS40037
*
**********************************************************************
         CLI   UCBTBYT4,D3350          IS THIS A 3350?         @VS40037
         BE    TONLIN                  NO, USE 3340 PAT        @VS40037
         TM    FLGBYT1,EMU             IS DEVICE EMULATED ?    @Z30RSAG
         BZ    NORFRM                  NO, SKIP THIS           @Z30RSAG
         CLI   UCBTBYT4,WIN            IS IT 3340              @Z30RSAG
         BE    NORFRM                  YES, SKIP THIS          @Z30RSAG
TONLIN   EQU   *                                               @VS40037
         L     REG9,TUCBPTR            POINT TO UCB            @Z30RSAG
         TM    SRTESTAT-UCBOB(REG9),SRTEONLI  IS IT ONLINE ?   @Z30RSAG
         BO    NORFRM                  YES, SKIP THIS          @Z30RSAG
         MVC   SDCCW1,CCWECONS         GET RD HA CCW           @Z30RSAG
         LA    REG0,FLAGREAD           GET ADDRESS OF HA       @Z30RSAG
         ST    REG0,SDCCW1             STORE IN RHA            @Z30RSAG
         MVI   SDCCW1,X'1A'            SET CMND                @Z30RSAG
         MVC   SDHA(5),FLAGREAD        COPY FLAGREAD           @Z30RSAG
         LA    REG0,SDSNS              GET ADDRESS/SENSE AREA  @Z30RSAG
         ST    REG0,SDCCW2             STORE IN SENSE CCW      @Z30RSAG
         MVI   SDCCW2,SENSE            CMND TO SENSE CCW       @Z30RSAG
         LA    REG0,24                 COUNT FOR SENSE         @Z30RSAG
         ST    REG0,SDCCW2+4           STORE IN CMND           @Z30RSAG
         MVI   SDCCW2+4,X'40'          CHAIN BIT ON            @Z30RSAG
         LA    REG0,SDSHA              ADDRESS/SEARCH HA       @Z30RSAG
         ST    REG0,SDTIC              STORE IN TIC CMND       @Z30RSAG
         MVI   SDTIC,X'08'             TIC CMND TO CCW         @Z30RSAG
         MVC   SDWR0(24),CCWDCONS      COPY WR R0/RD HA/RD R0  @Z30RSAG
         MVC   SDSHA(24),CCWBCONS      COPY SHA/TIC/WR0        @Z30RSAG
         LA    REG0,FLAGREAD+1         GET ADDRESS OF HA       @Z30RSAG
         ST    REG0,SDSHA              STORE IN SHA            @Z30RSAG
         MVI   SDSHA,X'39'             SET CMND                @Z30RSAG
         LA    REG0,SDSHA              GET NEW ADDRESS FOR TIC @Z30RSAG
         ST    REG0,SDTSHA             STORE IN TIC            @Z30RSAG
         MVI   SDTSHA,X'08'            RESTORE TIC CMND        @Z30RSAG
         MVC   SDWHA,CCWECONS          COPY RD HA              @Z30RSAG
         LA    REG0,SDHA               GET ADDR OF HA          @VS40037
         MVI   SDRHA+L4,X'70'           SET CCW FLGS           @ZM42054
         CLI   UCBTBYT4,D3350          3350 ?                  @XM10379
         BNE   STOR                    NO, REG ALRDY SET       @XM10379
         MVI   SDWHA+L7,L11            RESET DATA LENGTH       PTMFIX
         LA    REG0,MADSD              ELSE PT TO SD BYTES     @XM10379
STOR     EQU   *                                               @XM10379
         ST    REG0,SDWHA              SET ADDR IN WHA         @XM10379
         MVI   SDWHA,X'19'             MAKE IT WR HA           @Z30RSAG
NORFRM   EQU   *                                               @X50RSAG
         L     REG3,COPYPTR       GET ADDRESS OF THE FIRST COPY BLOCK.
**********************************************************************
*
*                  HERE WE CALL BLDACCW SUBR TO CONSTRUCT ANAL CHNL PRG
*
**********************************************************************
ACCWLOOP EQU   *
         LTR   REG3,REG3          TEST FOR COPIES.
         BZ    ENDCCWS            EXIT AFTER CHNL PRGS ARE BUILT.
         LA    REGF,CIOBLOCK      GET BASE FOR COPY BLOCK.
         TM    SEQSW+D1,RPS              DO WE HAVE RPS         XM4389
         BZ    NOGOT1                  NO-CONTINUE.              S20201
         MVC   CCWSECON(136),SETSECCW                            S20201
          LA    REG0,CCW1CONS           SET TIC                  A46360
          ST    REG0,TEMP               ADDRESS                  A46360
          MVC   TICSEC+1(K3),TEMP+D1                             A46360
         B     GO1                     CONTINUE CCWS.            S20201
NOGOT1   EQU   *                        *                        S20201
         MVC   CCW1CONS(120),CCWORD1 MOVE CCWS TO COPY BLOCK.
GO1      EQU   *                        *                        S20201
         LA    REG1,CFLGREAD      HOME ADDRESS AREA PTR IN COPYBLOCK.
         BAL   REGE,BLDACCW       CONSTRUCT A COPY CHANNEL PROGRAM.
         L     REG3,CCOPYPTR      POINT TO NEXT COPY BLOCK.
         B     ACCWLOOP           LOOP UNTIL ALL COPIES ARE COMPLETE.
         EJECT
*
**********************************************************************
*
* HERE WE CALL BLDFCCW SUBR TO CONSTRUCT FORMAT CHNL PRGS.
*
**********************************************************************
*
FORMATF  EQU   *
         MVI   UNASGBT,X'FF'            FORMAT DO NOT SET ALT    M4682
         LA    REG1,FLAGREAD      HOME ADDRESS AREA PTR IN FUNCBLOCK.
         BAL   REGE,BLDFCCWF      BUILD CCWS AND UPDATE CCWPTR IN IOB.
         AIF   ('&LIB' EQ 'LIB1').X227212                       XL03130
         CLI   UCBTBYT4,ZEU1            IS THIS A 2305-1?       XL03130
         BE    WRHA                     YES, SET WRITE HA CCW.  XL03130
         CLI   UCBTBYT4,ZEU2            IS THIS A 2305-2?
         BNE   CCWSOKAY                 NO, CCWS ALREADY SET.   XL03130
WRHA     EQU   *                        WRITE HA IS SET HERE.   XL03130
         AGO   .X227213                                         XL03130
.X227212 ANOP                                                   XL03130
         TM    UCBTBYT4,X'02'     IS THIS A DRUM DEVICE.
         BZ    CCWSOKAY           NO-CCWS ARE ALREADY SET PROPERLY.
.X227213 ANOP                                                   XL03130
         MVI   CCWBCONS,X'19'     SET CCW TO WRITE HOME ADDRESS.
         L     REG0,CCWBCONS
         BCTR  REG0,0
         ST    REG0,CCWBCONS      SET UP PTR FOR READ HOMEADDR
         LA    REG0,CCWDCONS      UPDATE TIC
         ST    REG0,CCWCCONS       UPDATE TIC ADDR .
         MVI   CCWCCONS,X'08'     RESTORE TIC OP CODE.
CCWSOKAY EQU   *
         L     REG3,COPYPTR
FCCWLOOP EQU   *
         LTR   REG3,REG3
         BZ    ENDCCWS            EXIT HERE AFTER ALL COPIES ARE BUILT.
         LA    REGF,CIOBLOCK      POINT TO COPY I/O BLOCK.
         MVC   CCWBCONS(40),CCWORDB MOVE CCWS TO COPY BLOCK.
         TM    SEQSW+D1,RPS           IS THIS RPS               XM4389
         BZ    NOGOT2                  NO                        XM6030
         MVC   CCWSECON(K16),SETSECCW  YES, MOVE SS & TIC        XM6030
NOGOT2   EQU   *                       CONTINUE                  XM6030
         AIF   ('&LIB' EQ 'LIB1').X227214                       XL03130
         CLI   UCBTBYT4,ZEU1            IS THIS A 2305-1?       XL03130
         BE    CHANGE                   YES, SET WR HA CCW.     XL03130
         CLI   UCBTBYT4,ZEU2            IS THIS A 2305-2?       XL03130
         BNE   NOCHANGE                 NO, CHECK FLAGGED TRKS. XL03130
         EJECT
CHANGE   EQU   *                        CHANGE OP TO WRITE HA.  XL03130
         AGO   .X227215                                         XL03130
.X227214 ANOP                                                   XL03130
         TM    UCBTBYT4,X'02'     IS TIS A DRUM DEVICE.
         BZ    NOCHANGE           NO-CHECK FOR PREV FLAGGED TRKS.
.X227215 ANOP                                                   XL03130
         MVI   CCWBCONS,X'19'
         LA    REG0,CCWDCONS
         ST    REG0,CCWCCONS      UPDATE TIC ADDRESS.
         MVI   CCWCCONS,X'08'     RESTORE TIC OP CODE.
NOCHANGE EQU   *
         LA    REG1,CFLGREAD      HOME ADDRESS AREA PTR IN COPYBLOCK.
         BAL   REGE,BLDFCCWF      BUILD CCWS AND UPDATE CCWPTR IN IOB.
         CLI   CCWBCONS,X'39'     IS THIS A SEARCH COMMAND.
         BE    DONTCHNG           YES- BYPASS ADDRESS CHANGE.
         L     REG0,CCWBCONS
         BCTR  REG0,0
         ST    REG0,CCWBCONS      SET UP PTR FOR READ HOMEADDR
DONTCHNG EQU   *
         L     REG3,CCOPYPTR
         B     FCCWLOOP
         EJECT
BLDFCCWF EQU   *
         TM    SEQSW+D1,RPS        DO WE HAVE CARNY             XM4389
         BZ    NOCARN              NO                            S20201
          LA    REG0,CCWSECON           SET UP SECTOR OP         A46360
         ST    REG0,CCWPTR         PUT IN IOB                    S20201
         LA    REG0,CCWBCONS       PUT TIC                       S20201
         ST    REG0,TEMP           ADDRESS                       S20201
          MVC   TICSEC+1(K3),TEMP+D1                             A46360
         B     BLDFCCW                 BUILD CCWS.               S20201
NOCARN   EQU   *                        *                        S20201
         LA    REG0,CCWBCONS
         ST    REG0,CCWPTR        UPDATE CCW PTR IN IOB FOR FORMAT FUNC
BLDFCCW  EQU   *
         LR    REG0,REG1          GET CORRECT HOME ADDRESS AREA.
         A     REG0,CCWBCONS
         ST    REG0,CCWBCONS      POINT SHA TO SEARCH ARGUMENT.
         BCTR  REG0,0
         ST    REG0,CCWECONS      POINT RHA TO LOC INTO WHICH HA IS RD.
         MVI   CCWECONS,X'1A'     RESTORE OP CODE TO READ HOME ADDRESS.
         LA    REG0,CCW1CONS
         A     REG0,CCWCCONS
         ST    REG0,CCWCCONS      RELOCATE TIC TO POINT TO CCWBCONS.
         LA    REG0,STNDR0
         A     REG0,CCWDCONS
         ST    REG0,CCWDCONS      POINT WRITE RO CCW TO A STANDARD R0.
         ST    REG0,CCWFCONS      RELOCATE CCW15
         MVI   CCWFCONS,X'16'     RESTORE READ R0 OP CODE.
         BR    REGE               RETURN.
*
         EJECT
***********************************************************************
*
* THIS SUBROUTINE CONSTRUCTS A CHANNEL PROGRAM THAT IS TO BE USED BY
* THE ANALYZE FUNCTION.
* THE FIRST TEN CCWS ARE RELOCATED IN THIS SUBROUTINE .THEN BLDFCCW
* IS CALLED TO RELOCATE THE LAST FIVE.
*
***********************************************************************
*
BLDACCW  EQU   *
         LR    REG0,REG1          GET READ IN AREA               XM5465
         A     REG0,CCW1CONS
         ST    REG0,CCW1CONS      RELOCATE CCW1
         ST    REG0,CCW6CONS      RELOCATE CCW6
         BCTR  REG0,0
         ST    REG0,CCW4CONS      SET UP PTR FOR READ HOMEADDR
         ST    REG0,CCW9CONS      RELOCATE CCW9
         LA    REG0,CCW1CONS
         A     REG0,CCW2CONS
         ST    REG0,CCW2CONS      RELOCATE CCW2CONS.
         MVI   CCW4CONS,X'1A'     RESTORE OP CODE IN CCW4
         MVI   CCW9CONS,X'1A'     RESTORE OP CODE IN CCW9
         LA    REG0,MAXR0BIT      GET ADDRESS OF BIT PATTERN.
         A     REG0,CCW3CONS
         ST    REG0,CCW3CONS      RELOCATE CCW3
         LA    REG0,MAXLTHR0
         A     REG0,CCW8CONS      RELOCATE CCW8
         ST    REG0,CCW8CONS      RELOCATE CCW8
         ST    REG0,CCWACONS      RELOCATE CCW10
         MVI   CCWACONS,X'16'     RESTORE OP CODE.
         LA    REG0,CCW1CONS
         A     REG0,CCW7CONS
         ST    REG0,CCW7CONS      RELOCATE CCW7.
         LA    REG0,8
         L     REG9,IODEVCON            POINT TO DEVCON        @ZA04403
         AH    REG0,SACAP-CONSTANT(REG9)                       @ZA04403
         A     REG0,CCW3CONS+4
         ST    REG0,CCW3CONS+4    SET MAXIMUM R0 COUNT IN
         LH    REG0,PASSCNT       GET REQUESTED PASS COUNT.
         BCTR  REG0,0
         LTR   REG0,REG0          TEST FOR MULTIPLE PASSES.
         BNP   ONEPASS            BRANCH ON SINGLE PASS REQUEST.
         NI    CCWACONS+4,X'20'   SET CMND CHAIN OFF SILI FLAG ON.
ONEPASS  EQU   *
         CLI   DDNAME2,X'40'          IS THIS A NEW VOLUME.
         BE    SETWRTHA           YES-SET UP WRITE HOME ADDRESS.
         AIF   ('&LIB' EQ 'LIB1').X228000                       XL03912
         CLI   UCBTBYT4,ZEU1            IS THIS A 2305-1?       XL03130
         BE    SETWRTHA                 YES, SET WR HA CCW.     XL03130
         CLI   UCBTBYT4,ZEU2            IS THIS A 2305-2?       XL03130
         BE    SETWRTHA                 YES, SET WR HA CCW.     XL03130
         AGO   .X228001                                         XL03912
.X228000 ANOP                                                   XL03912
         TM    UCBTBYT4,X'02'     IS THIS A DRUM TYPE DEVICE.
         BO    SETWRTHA           YES-SET UP WRITE HOME ADDRESS OP
.X228001 ANOP                                                   XL03912
         TM    SEQSW,FLAGTEST     IS FLAG TEST BYPASS REQUESTED.
         BZ    BLDFCCW            NO-BUILD REMAINING CCWS.
SETWRTHA MVI   CCW1CONS,X'19'     MODIFY CCW TO WRITE HOME ADDRESS.
         LA    REG0,CCW3CONS
         ST    REG0,CCW2CONS
         MVI   CCW2CONS,X'08'     MODIFY TIC ADDRESS FOR CCW3.
         AIF   ('&LIB' EQ 'LIB1').X326000                        XM5465
         CLI   UCBTBYT4,D3350          3350 DEVICE ?           @VS40037
         BE    YEAMAD                  YES DOIT                @VS40037
         CLI   UCBTBYT4,WIN            IS THIS A 3340?           XM5465
         BNE   NOSD                    NO, SOME OTHER DEVICE.    XM5465
         EJECT
*****************************************************************XM5465
*                                                                XM5465
*    THE FOLLOWING ROUTINE WILL EDIT THE ANALYZE CCWS            XM5465
*    SUCH THAT ONLY TRACKS WITH BIT SIX ON IN THE HOME           XM5465
*    ADDRESS WILL BE ANALYZED SO AS TO DETERMINE THEIR           XM5465
*    USEFULLNESS FOR POSSIBLE RECLAIMATION FROM DEFECTIVE        XM5465
*    STATUS. THIS IS APPLICABLE TO 3340 ONLY.                    XM5465
*                                                                XM5465
*****************************************************************XM5465
         SPACE
YEAMAD   EQU   *                                               @VS40037
         MVC   SDCCW1,CCWORD4          GET A READ HA CCW.        XM5465
         LR    REG0,REG1               GET READ IN AREA.         XM5465
         A     REG0,SDCCW1             COMBINE ADDR AND CCW.     XM5465
         ST    REG0,SDCCW1             RD HA CMD SET.            XM5465
         LA    REG0,SDSNS              GET SENSE AREA.           XM5465
         ST    REG0,SDCCW2             SET IN SENSE CCW.         XM5465
         MVI   SDCCW2,SENSE            SET SENSE COMMAND.        XM5465
         LA    REG0,L24                LENGTH OF SENSE INFO.     XM5465
         ST    REG0,SDCCW2+D4          SET COUNT OF SENSE CCW.   XM5465
         LA    REG0,CCWBCONS           GET ADDDRESS              XM5465
         ST    REG0,SDTIC              STORE IN CCW              XM5465
         MVI   SDTIC,TICCMD            SET TO TIC                XM5465
         MVI   SDCCW2+D4,CHAIN         TURN ON CMD CNING         XM5465
         MVI   CCW1CONS+L7,L7          SET COUNT OF 7 FOR WR HA. XM5465
         MVC   CCWSHCON(L8),CCWORD6    GET A SEARCH CCW.         XM5465
         LR    REG0,REG1               GET HA POINTER.           XM5465
         A     REG0,CCWSHCON           ADDR TO SEARCH CCW.       XM5465
         ST    REG0,CCWSHCON           SEARCH CCW NOW COMPLETE.  XM5465
         LA    REG0,CCWSHCON           ADDR OF SEARCH FOR TIC.   XM5465
         ST    REG0,TICSEC             SET ADDR IN TIC.          XM5465
         MVI   TICSEC,TICCMD           SET TIC CCW.              XM5465
         LA    REG0,SDBYTES            ADDR OF 3340 HA.          XM5465
         ST    REG0,CCW1CONS           CHANGE CCW ADDRESS.       XM5465
         CLI   UCBTBYT4,D3350          3350 ?                  @VS40037
         BNE   SETOP                   YES, MODIF CCW          @VS40037
         MVI   CCW1CONS+L7,L11         RESET CCW DATA LEN      @VS40430
         LA    REG0,MADSD              PT TO MAD SD BYTES      @VS40037
         ST    REG0,CCW1CONS           CHG CCW                 @VS40037
SETOP    EQU   *                                               @VS40037
         MVI   CCW1CONS,WRITE          RESET WRITE COMMAND.      XM5465
         B     BLDFCCW                 BUILD REMAINING CCWS.     XM5465
         EJECT
NOSD     EQU   *                                                 XM5465
.X326000 ANOP                                                    XM5465
         LR    REG0,REG1          GET CORRECT HOME ADDRESS AREA.
         L     REG0,CCW1CONS
         BCTR  REG0,0
         ST    REG0,CCW1CONS      SET UP PTR FOR READ HOMEADDR
         B     BLDFCCW            CONSTRUCT REMAINING CCWS.
         SPACE
UNASGZUS EQU   *                                                 M4682
         TM    UNASGBT,X'FF'            DO WE NEED TO  UNASSIGN  M4682
         BO    UNRET                    RETURN IF NOT            M4682
         L     REGB,TUCBPTR             GET UCB POINTER          M4682
         USING UCBOB,REGB                                        M4682
         CLI   UCBTBYT4,X'06'           ZEUS 1                   M4682
         BE    ZEUS1                    YES - GO PROSESS         M4682
         CLI   UCBTBYT4,X'07'           ZEUS I                   M4682
         BE    ZEUS2                    YES - GO PROCESS         M4682
         B     UNRET                    NO RETURN                M4682
ZEUS1    MVI   ZCCHH+2,X'30'            SET ZEUS 1 ALT           M4682
         DROP  REGB                                              M4682
         B     COMZ                     GO TO COMMON RTN         M4682
ZEUS2    MVI   ZCCHH+2,X'60'            ST A ZEUS 2 ALT          M4682
COMZ     EQU   *                                                 M4682
         MVC   SAVCCHHR(4),SEEKADDR+3   SAVE SEEK ADDRESS        M4682
         MVC   SAVCCWPT(4),CCWPTR       SAVE CCW POINTER         M4682
         LA    REGB,ZALTCCW             LOAD CCW CHAIN TO        M4682
*                                       U4NASSIGN                M4682
         ST    REGB,CCWPTR              STORE TEMP CCW POINTER   M4682
         MVC   SEEKADDR+3(4),ZEUSALT    SET SEEKADDR FOR ZERO    M4682
         MVI   WKAECB,0                 ZERO ECB                 M4682
         DROP  REGF                                              M4682
         USING IHADCB,REGB                                       M4682
         LR    REGB,REGF                LOAD IOBLOCKS ADDRESS    M4682
         EXCP  WKAIOB                                            M4682
         WAIT  ,ECB=WKAECB                                       M4682
         DROP  REGB                                              M4682
         USING IHADCB,REGF                                       M4682
         LR    REGF,REGB                RESET IOB PTR            M4682
         CLI   WKAECB,X'7F'             GOOD COMPLETE            M4682
         BNE   IOERROR                                           M4682
         MVC   SEEKADDR+3(4),SAVCCHHR   RESTORR SEEK ADDRESS     M4682
         MVC   CCWPTR(4),SAVCCWPT       RESTORE CCW POINTER      M4682
         B     UNRET                    RETURN                   M4682
         EJECT
ENDCCWS  EQU   *
         L     REGE,IODEVCON           POINT TO DEVCON         @Z30RSAG
         MVC   TRACKCTL(4),LASTALT  SET UP STOPPING TRACK COUNT.
         MVI   FLAGREAD,1         SET ALTERNATE TRACK INDICATOR.
         CLI   UCBTBYT4,D3350          3350 ?                  @VS40037
         BNE   SETFLAG                 NO, CONTINUE NRM        @VS40037
         MVI   SDHA,1                  SET HA FLAG             @VS40037
ENDOFCCW EQU   *
         LA    REGF,FBLOCKS       GET I/O BLOCKS BASE.
         L     REG3,COPYPTR       GET BASE FOR COPY BLOCK.
         L     REG1,PTRCFUNC
         OI    0(REG1),PROCESS    INDICATE FUNCTION IS PROCESSING.
         XC    RETRYCNT(2),RETRYCNT    INITIALIZE PRIMARY RETRY COUNT.
         MVC   SEEKADDR+3(4),PRGSAVE   SET UP SEEK ADDRESS IN IOB.
         MVC   FLAGREAD+1(4),PRGSAVE   SET UP HOME ADDR IN FUNCBLK.
         CLI   UCBTBYT4,D3350          IS THIS A 3350?         @VS40037
         BE    TONLINE                 NO, USE 3340 PAT        @VS40037
         TM    FLGBYT1,EMU             IS DEVICE EMULATED ?    @Z30RSAG
         BZ    NOEMU                   NO, SKIP THIS           @Z30RSAG
         CLI   UCBTBYT4,WIN            IS IT 3340 ?            @Z30RSAG
         BE    NOEMU                   YES, SKIP THIS          @Z30RSAG
TONLINE  EQU   *                                               @VS40037
         L     REG9,TUCBPTR            POINT TO UCB            @Z30RSAG
         TM    SRTESTAT-UCBOB(REG9),SRTEONLI  IS IT ONLINE ?   @Z30RSAG
         BO    NOEMU                   YES, SKIP THIS          @Z30RSAG
         LA    REG0,SDCCW1             POINT TO RHA/SENSE CCWS @Z30RSAG
         ST    REG0,CCWPTR             STORE PTR IN IOB        @Z30RSAG
NOEMU    EQU   *                                               @Z30RSAG
TESTALT  EQU   *
         CLC   STNDR0(4),TRACKCTL IS THIS LAST ALTERNATE TRACK.
         BNH   EXCHNPRO           NO-EXECUTE CHANNEL PROGRAM.
         AIF ('&LIB' EQ 'LIB1').X328000                          XM5465
         MVI   SDCCW2+D4,NULL          UNCHAIN CCW               XM5465
         CLI   UCBTBYT4,WIN            IS IT 3340 ?            @Z30RSAG
         BE    YES                     BRANCH IF YES           @Z30RSAG
         MVI   SDCCW2+D4,X'40'         ELSE RECHAIN            @Z30RSAG
YES      EQU   *                                               @Z30RSAG
.X328000 ANOP                                                    XM5465
         XC    SEEKADDR+3(5),SEEKADDR+3  SET UP FIRST PRIMARY TRACK.
         SR    REG0,REG0
         ST    REG0,STNDR0        SET STANDARD R0 TO TRACK ZERO.
         ST    REG0,PRGSAVE       SET COUNT SAVE TO TRACK ZERO.
         XC    FLAGREAD(5),FLAGREAD    SET  HOME ADDRESS TO TRACK ZERO.
         MVI   SDHA,0                   RESET PRIMARY HA FLAG  @VS40430
EXCHNPRO EQU   *
         MVC   SDHA+1(4),PRGSAVE        UPDATE NEW HA CCHH     @VS40430
         DROP  REGF
         USING IHADCB,REGB
         B     UNASGZUS                 TRY TO UNASSIGN 2305 ALT M4682
         EJECT
UNRET    EQU   *                                                 M4682
         LR    REGB,REGF          SET UP TEMPORARY CONTROL BLOCKS BASE.
         AIF   ('&LIB' EQ 'LIB1').X326104                        XM5465
         CLI   FUNCSW,FORMAT           IS THIS A FORMAT?         XM5465
         BE    STARTIO                 YES, START CHAN PROG.     XM5465
         CLI   UCBTBYT4,WIN            IS THIS A 3340?           XM5465
         BNE   STARTIO                 NO, START CHAN PROG.      XM5465
         LA    REG0,SDCCW1             GET DEFECT FIND CCW.      XM5465
         ST    REG0,CCWPTR             USE AS IOBSTART ADDR.     XM5465
         SPACE
*****************************************************************XM5465
*     ON 3340 ONLY, THE FOLLOWING EXCP WILL SCAN THE PACK FOR    XM5465
*     TRACKS THAT ARE FLAGGED DEFECTIVE.                         XM5465
*****************************************************************XM5465
         SPACE
STARTIO  EQU   *                                                 XM5465
.X326104 ANOP                                                    XM5465
         MVI   WKAECB,0           CLEAR ECB FLAGS.
         EXCP  WKAIOB           INITIATE CHANNEL PROGRAM.
         DROP  REGB
         USING IHADCB,REGF
         LR    REGF,REGB          RESTORE CONTROL BLOCKS BASE.
         LTR   REG3,REG3          IS THERE ANOTHER COPY OPERATION.
         BZ    CHKCONC            NO-TEST FOR CONCURRENT OPERATIONS.
         XC    CRTRYCNT(2),CRTRYCNT    INITIALIZE PRIMARY RETRY COUNT.
         MVC   CFLGREAD(1),FLAGREAD  SET PROPER INDICATION IN COPY HA.
         MVC   CFLGREAD+1(4),PRGSAVE   SET UP HOME ADDR IN COPYBLK.
         LA    REGF,CIOBLOCK      YES-BR AND INITIATE NEXT COPY.
         MVC   SEEKADDR+3(4),PRGSAVE  SET UP SEEK ADDRESS IN IOB.
         L     REG3,CCOPYPTR      GET POINTER TO NEXT COPY BLOCK.
         B     TESTALT            BR AND TEST FOR LAST ALTERNATE.
CHKCONC  EQU   *
         MVI   UNASGBT,X'FF'           FINISHED COPIES SET BYTE  M4682
         TM    SW1,MULTIPLE       IS THIS ACONCURRENT OPERATION.
         BO    CONCUR             BRANCH IF YES.
RETURNAD EQU   *
         LA    REGF,FBLOCKS       RESTORE FUNCTION I/O BLOCK PTR.
         L     REG3,COPYPTR       POINT TO 1ST COPY BLOCK.
         L     REG2,TUCBPTR       GET CURRENT UCB POINTER.
         AIF   ('&LIB' EQ 'LIB2').X227216                       XL03912
         CLI   UCBID,X'FF'        WAS THIS A 2321 DATA CELL.
         BNE   LINK2321           YES-RECALL IEHDCELL.
.X227216 ANOP                                                   XL03912
         EJECT
REWAITF  EQU   *
         BAL   REG8,WAITLOOP      WAIT FOR I/O COMPLETION.
         CLI   DDNAME2,BLANK           OFFLINE PROC. ?         @VS40037
         BNE   MVCFLAG                 NO, CONTIN              @VS40037
         CLI   UCBTBYT4,WIN             3340 ?                 @ZM42055
         BNE   ARNDMVC                  NO, BYPASS HA VERIFY   @ZM42055
         CLC   SEEKCCHH(L4),FLAGREAD+1  COMPARE HA TO SEEK ADR @ZM42055
         BE    ARNDMVC                  BRCH IF GOOD           @ZM42055
         MVC   SDHA+1(L4),SEEKCCHH      CORRECT HA CCHH        @ZM42055
         B     PREFLAG                  GO REWRITE HA/R0       @ZM42055
MVCFLAG  EQU   *                                               @VS40037
         MVC   SDHA,FLAGREAD           SAVE HA FOR POSSIBLE S/A. XM5465
ARNDMVC  EQU   *                                               @VS40037
         TM    FLAGREAD,X'02'     WAS THE TRACK PREFLAGGED.
         BO    PREFLAG            BRANCH IF YES.
         LH    REGB,RETRYCNT      GET RETRY COUNT.
         LTR   REGB,REGB          RETRY COUNT EQUAL ZERO.
         BZ    TESTWAIT           YES-BRANCH AND TEST FOR OTHER REQ'S.
         BCTR  REGB,0             NO DECREMENT RETRY COUNT.
         STH   REGB,RETRYCNT      SAVE NEW RETRY COUNT.
RESTARTF LR    REGB,REGF          SAVE CONTROL BLOCK POINTER.
         EXCP  WKAIOB             RESTART CHANNEL PROGRAM.
         LR    REGF,REGB          RESTORE CONTROL BLOCK POINTER.
         B     REWAITF            LOOP UNTIL THERE ARE 10 SUCCESSES.
TESTWAIT EQU   *
         LTR   REG3,REG3          ARE THERE OUTSTANDING REQUESTS.
         BZ    TESTPASS           NO-GO AND TEST PASSCNT.
         L     REG2,CUCBPTR            GET POINTER TO COPY UCB.
REWAITC  EQU   *
         LA    REGF,CIOBLOCK      POINT TO COPY CONTROL BLOCKS.
         BAL   REG8,WAITLOOP      WAIT FOR I/O COMPLETION.
         AIF   ('&LIB' EQ 'LIB1').X327501                        XM5465
         MVC   SDHA,CFLGREAD           SAVE HA FOR POSSIBLE S/A. XM5465
.X327501 ANOP                                                    XM5465
         TM    CFLGREAD,X'02'     WAS TRACK PREFLAGGED.
         BO    PREFLAGC           YES-ASSIGN ALTERNATE TRACK.
         LH    REGB,CRTRYCNT      GET RETRY COUNT.
         LTR   REGB,REGB          RETRY COUNT EQUAL ZERO.
         BZ    CTSTWAIT           YES-TEST FOR OTHER OUTSTANDING REQS.
         BCTR  REGB,0             DECREMENT AND SAVE
         STH   REGB,CRTRYCNT      RETRY COUNT.
RESTARTC EQU   *
         LR    REGB,REGF          SAVE I/O CONTROL BLOCKS REG.
         EXCP  WKAIOB             RETRY TRACK ANALYSIS.
         LR    REGF,REGB          RESTORE I/O CONRROL BLOCKS REGS.
         B     REWAITC            LOOP  UNTIL FINISH OR BAD TRACK.
CTSTWAIT EQU   *
         L     REG3,CCOPYPTR      GET POINTER TO NEXT COPY BLOCK.
         B     TESTWAIT           LOOP THROUGH UNTIL FINISH OR ERROR.
         EJECT
*
**********************************************************************
*
WAITLOOP EQU   *
         TM    WKAECB,COMPLETE    WAS I/O COMPLETE.
         BO    IOCMPLTE           YES-BYPASS WAIT .
         LR    REGB,REGF          SAVE CONTROL BLOCK REGISTERS.
         DROP  REGF
         USING IHADCB,REGB
         WAIT  ,ECB=WKAECB        WAIT FOR I/O COMPLETION.
         LR    REGF,REGB          RESTORE CONTROL BLOCK POINTERS.
         DROP  REGB
         USING IHADCB,REGF
IOCMPLTE EQU   *
         CLI   WKAECB,X'7F'        WAS I/O SUCCESSFUL .
         BCR   8,REG8             RETURN ON SUCCESSFUL COMPLETION.
         CLI   FUNCSW,FORMAT            IS IT A FORMAT OPERATION M4682
         BNE   IOERROR                  NO - MUST BE ERROR       M4682
         CLC   SEEKADDR+3(4),TRACKCTL   IS THIS THE LAST ALT     M4682
         BNE   IOERROR                  NO - LEGIT ERROR         M4682
         L     REGB,TUCBPTR             LOAD UCB POINTER         M4682
         MVC   STNDR0(4),ZCCHH+1        DUMMY UP HA              M4682
         MVI   ZCCHH+4,X'01'            SET BEYOND LAST 2305 HH  M4682
         MVC   FALTDATA(6),ZCCHH+1      SET NO ALTS LEFT         M4682
*                                       CONDITION                M4682
         CLI   19(REGB),X'06'           IS IT 2305-1             M4682
         BE    0(REG8)                  YES ALT ASSIGNED NO      M4682
*                                       ERROR                    M4682
         CLI   19(REGB),X'07'           IS IT 2305-2             M4682
         BE    0(REG8)                  YES ALT ASSIGNED NO      M4682
*                                       ERROR                    M4682
         EJECT
IOERROR  EQU   *
         LA    REGB,FBLOCKS       GET ADDRESS OF FUNCTION CONTROL BLKS.
         CR    REGF,REGB          TEST FOR PRIMARY OR COPY OPERATION.
         BNE   COPYOPER           BRANCH IF COPY OPERATION.
         TM    CSWORD+4,X'02'     WAS THERE A UNIT CHECK.
         BZ    SYNADERR           NO-I/O ERROR TERMINATE.
         TM    WKAIOB+2,X'08'     WAS ERROR A DATA CHECK.
         BZ    BADTRAKF           NO BRANCH
RETRYF   EQU   *
         CLI   RETRYCNT+1,0       IS THIS INITIAL ERROR ENTRY.
         BNE   BDTRKERF           NO-SET UP MESSAGE
         MVI   RETRYCNT+1,10           YES-SET UP COUNT FOR 10 RETRIES
         B     RESTARTF           TRY FOR 10 SUCCESSES.
COPYOPER EQU   *
         TM    CSWORD+4,X'02'     WAS THERE A UNIT CHECK.
         BZ    SYNADERR           NO-I/O ERROR TERMINATE.
         TM    WKAIOB+2,X'08'     WAS ERROR A DATA CHECK.
         BZ    BADTRAKC           NO-BRANCH
RETRYC   EQU   *
         CLI   CRTRYCNT+1,0       IS THIS 1ST TIME IN ERROR SECTION.
         BNE   BDTRKERC           NO-PREPARE TO ASSIGN ALTERNATE
         MVI   CRTRYCNT+1,10           INITIALIZE RETRY COUNTER
         B     RESTARTC           LOOP
         EJECT
*
**********************************************************************
*
*        THIS ROUTINE DETERMINES IF MULTIPLE SURFACE ANALYSIS PASSES
*        WERE REQUESTED,OR IF THIS WAS THE LAST PASS MODIFIES THE
*        CHANNEL PROGRAM TO WRITE STANDARD HOME ADDRESS AND R0.
*
**********************************************************************
*
TESTPASS EQU   *
         LA    REG0,1
         CH    REG0,PASSCNT       WERE MULTIPLE PASSES REQUESTED.
         BNL   TSTPRIME            NO-TEST FOR LAST PRIMARY TRACK.
         LH    REG0,COUNT
         LTR   REG0,REG0           YES-TEST FOR LAST PASS COMPLETED.
         BZ    TSTPRIME            NO-TEST FOR LAST PRINARY.
         BCTR  REG0,0              DECREMENT PASS COUNT.
         STH   REG0,COUNT          STORE UPDATED COUNT .
         LTR   REG0,REG0           IS THIS THE LAST PASS REQUESTED.
         BP    ENDOFCCW            NO-RESTART CHANNEL PROGRAM.
         LA    REGF,FBLOCKS        POINT TO PRIMARY CONTROL BLOCKS.
         L     REG3,COPYPTR        GET COPY BLOCK POINTER .
RESETCCW EQU   *
         OI    CCWACONS+4,X'40'   SET COMMAND CHAIN ON.
         LTR   REG3,REG3           IS THIS THE FINAL COPY REQUESTED.
         BZ    ENDOFCCW            YES-START ANALYSIS ON FINAL DEVICE.
         LA    REGF,CIOBLOCK       POINT TO COPY CONTROL BLOCKS.
         L     REG3,CCOPYPTR       POINT TO NEXT COPY BLOCK.
         B     RESETCCW            LOOP UNTIL ALL COPIES ARE COMPLETE.
*
**********************************************************************
         EJECT
*
**********************************************************************
*
TSTPRIME EQU   *
*
**********************************************************************
*
         MVC   COUNT(2),PASSCNT   RESET NUMBER OF PASSES COUNTER.
         TM    SEQSW+D1,MSSFLG     MSS ANALYZE                 @ZA04403
         BO    MSSALT              YES, CHECK FOR ALTERNATE    @ZA04403
CKPRIM   EQU   *                   CONTINUE TO CHECK PRIME     @ZA04403
         L     REG9,STNDR0         GET R0 OF LAST TRACK ANALYZED.
         L     REGE,IODEVCON           POINT TO DEVCON         @Z30RSAG
         C     REG9,LASTORIG       WAS THIS LAST PRIME TRACK.
         BE    BLDVTOC             YES-CREATE A VTOC FOR THIS VOL.
         LA    REG0,1              NO
         AR    REG9,REG0
         CLC   STNDR0+3(1),LASTORIG+3 WAS THIS LAST TRACK TRACK ON CYL.
         BL    CLRFLAGS            NO-BYPASS CYLINDER CONVERSION.
         BCTR  REG9,0
         A     REG9,CONVCYL        GET TO NEXT CYLINDER.
CLRFLAGS EQU   *
         ST    REG9,STNDR0        UPDATE CCHH OF STANDARD R0.
         ST    REG9,MAXLTHR0      UPDATE CCHH OF MAXIMUM LENGTH 0 R0.
         ST    REG9,PRGSAVE       SAVE CCHH TO STORED INTO IOB.
         ST    REG9,MAXR0BIT      UPDATE CCHH OF MAXIMUM LTG BIT R0.
         CLI   DDNAME2,BLANK           OFFLINE PROC. ?         @VS40037
         BNE   SETFLAG                 NO, CONTIN              @VS40037
         MVC   SDHA+1,PRGSAVE          UPDATE HA CCHH FLD      @VS40037
SETFLAG  EQU   *                                               @VS40037
         B     ENDOFCCW           LOOP AND START ANAL/FORMAT NEXT TRK.
         EJECT
*
***********************************************************************
*
MSSALT   EQU   *                  TEST FOR MSS ALTERNATE TRACK @ZA04403
*
***********************************************************************
*
         TM    FLGBYT1,MSSMOD     MSS MODIFIED CHNPGM          @ZA04403
         BO    MSSRSET            YES, RESET TO ORIGINAL       @ZA04403
         TM    FLAGREAD,ALTRNATE  FORMER ALTERNATE             @ZA04403
         BNO   CKPRIM             NO, CONTINUE NORMALLY        @ZA04403
         TM    FLAGREAD,FLAGTEST  DEFECTIVE PRIMARY TRACK?     @ZA04403
         BO    CKPRIM             YES, CONTINUE NORMALLY       @ZA04403
         L     REG9,STNDR0        UPDATE CCHH OF STANDARD R0   @ZA04403
         L     REGE,IODEVCON      POINT TO DEVCON              @ZA04403
         C     REG9,LASTORIG      WAS THIS LAST PRIME TRACK    @ZA04403
         BH    CKPRIM             YES, CONTINUE NORMALLY       @ZA04403
         MVI   CCWBCONS,WRITE     SET SEARCH TO A WRITE HA     @ZA04403
         L     REG9,CCWBCONS      GET ADDRESS OF CCWBCONS      @ZA04403
         BCTR  REG9,0             POINT TO FLAG FIELD          @ZA04403
         ST    REG9,CCWBCONS      SAVE IT FOR CHANNEL PROGRAM  @ZA04403
         MVI   CCWBCONS+L7,L5     MOVE IN COUNT OF 5           @ZA04403
         LA    REG9,CCWDCONS      GET WRITE R0                 @ZA04403
         ST    REG9,CCWCCONS      SETUP FOR TIC                @ZA04403
         MVI   CCWCCONS,TICCMD    RESET TIC BYTE               @ZA04403
         NI    FLAGREAD,ALLBITS-ALTRNATE RESET ALTERNATE       @ZA04403
         OI    FLGBYT1,MSSMOD     INDICATE CCW MODIFIED        @ZA04403
         B     ENDOFCCW           EXECUTE CHAN PROGRAM AGAIN   @ZA04403
MSSRSET  EQU   *                  RESET THE WRITE TO READ      @ZA04403
         L     REG9,CCWBCONS      GET CCWBCONS                 @ZA04403
         LA    REG9,1(REG9)       POINT TO ADDRESS AGAIN       @ZA04403
         ST    REG9,CCWBCONS      SAVE CCWBCONS                @ZA04403
         MVI   CCWBCONS,SERHA     SET OPCODE TO SEARCH HA      @ZA04403
         MVI   CCWBCONS+L7,L4     MOVE IN COUNT OF 4           @ZA04403
         LA    REG9,CCWBCONS      GET NEW CCWBCONS ADDRESS     @ZA04403
         ST    REG9,CCWCCONS      SAVE IT FOR TIC              @ZA04403
         MVI   CCWCCONS,TICCMD    RESTORE TIC OPCODE           @ZA04403
         NI    FLGBYT1,ALLBITS-MSSMOD RESET FLAG               @ZA04403
         B     CKPRIM             CONTINUE NORMALLY            @ZA04403
         EJECT
**********************************************************************
*
BLDVTOC  EQU   *
*
**********************************************************************
*
         DROP  REGF
         USING IHADCB,REGB
         LA    REGB,FBLOCKS       SET UP TEMPORARY BASE.
         SPACE
*        LINK  TO BUILD VTOC.
         LR    REG1,REG5          PASS POINTER TO MY WORKAREA.
         LINK  EP=IEHDVTOC        CONSTRUCT VTOC FOR THIS VOLUME.
***********************************************************************
         LA    REGD,SAVEAREA      RESTORE MY SAVEAREA POINTER.
         L     REG3,COPYPTR       GET POINTER TO COPY BLOCK.
         LTR   REGF,REGF          WAS VTOC CONSTRUCTION SUCCESSFUL.
         BNZ   MSGBUILD           NO GIVE CORRECT DIAGNOSTIC.
         LA    REG8,RETRNORM
         EJECT
CLOSENXT EQU   *
         TM    DCBOFLGS,X'10'     WAS THIS DCB OPENED.
         BCR   8,REG8             NO  BRANCH TO FREECORE.
         CLOSE ((REGB))           CLOSE ALL OPENED DCBS.
         LR    REGF,REGB          RESTORE PERMANENT BASE.
         DROP  REGB
         USING IHADCB,REGF
         LTR   REG3,REG3          ARE THERE MORE OPEN DCBS.
         BCR   8,REG8             RETURN TO MONITOR.
         LA    REGB,CIOBLOCK      GET POINTER TO COPY DCB.
         L     REG3,CCOPYPTR      POINT TO NEXT COPY BLOCK.
         B     CLOSENXT
         EJECT
*
**********************************************************************
*
*  THIS ROUTINE IS ENTERED WHENEVER CONCURRENT OPERATION IS REQUESTED.
*
**********************************************************************
*
CONCUR   EQU   *
         ST    REGD,SAVEPTR       SAVE POINTER TO MY SAVE AREA.
         STM   REGE,REGC,RETADREG SAVE MY REG ON CONCURRENT OPERATIONS.
         SR    REGF,REGF          CLEAR RETURN CODE REGS.
RELOADRG EQU   *
         L     REGD,OLDSAPTR RESTORE SAVE AREA POINTER.
         B     RETURNCO           RETURN TO MONITOR.
NOCORIND EQU   *
         L    REG1,PTRCFUNC      GET SLOT FOR CURRENT FUNCTION.
         OI    0(REG1),NOCORE+WAITING SET NOCORE/WAITING IND.
         L     REGD,OLDSAPTR           RELOAD REG 13.
         FREEMAIN R,LV=SIZE,A=(REG5)    FREE MY WORK AREA.
         LA    REGF,4                  SET UP RETURN CODE.
         B     RETURNCO           RETURN TO MONITOR.
RETRNABN EQU   *
         L     REG1,PTRCFUNC      GET POINTER TO CURRENT FUNCTION SLOT.
         LTR   REGF,REGF          IS THIS A SUCCESSFUL COMPLETION.
         BZ    FREECORE           YES-BYPAS UNUSEABLE MSG.
         TM    0(REG1),PROCESS         WAS A WRITE OPERATION STARTED.
         BZ    FREECORE           NO-BYPASS NONUSEABLE MSG.
         LA    REG1,30
         BAL   REG8,BUILDMSG      PRINT UNUSEABLE MSG.
         MVC   0(8,REG1),DDNAME2      INSERT DDNAME INTO MSG.
         L     REG3,COPYPTR       GET POINTER TO 1ST COPYBLK.
ERRLOOP  EQU   *
         BAL   REG8,PRNTLINK      PRINT MSG .
         LTR   REG3,REG3          IS THIS END OF COPIES.
         BZ    FREECORE           YES-SET COMPLETE AND TERMINATE.
         LA    REG1,30
         BAL   REG8,BUILDMSG      SET MSG FOR COPY.
         MVC   0(8,REG1),DDNAME3      INSERT DDNAME INTO MSG.
         L     REG3,CCOPYPTR      GET ADDRESS OF NEXT COPYBLK.
         B     ERRLOOP            LOOP UNTIL ALL COPIES ARE COMPLETE.
         EJECT
RETCOMP  EQU   *
         L     REG1,PTRCFUNC      GET PTR TO CURRENT FUNCTION SLOT.
         MVI   0(REG1),COMPLETE   MARK CURRENT FUNCTION COMPLETE.
RETURNCO EQU   *
         RETURN (14,12),T,RC=(15) RETURN TO CALLER.
*
**********************************************************************
*
RETRNORM EQU   *
         DROP  REGF
         USING IHADCB,REGB
         LA    REGB,FBLOCKS       SET PRIMARY CONTROL BLOCKS BASE.
         L     REG2,TUCBPTR       GET PRIMARY FUNCTION UCB POINTER.
         LA    REG9,FUNCNAM1      ASSUME ANALYZE FUNCTION.
         CLI   FUNCSW,FORMAT      CHECK FOR FORMAT FUNCTION.
         BNE   FUNCOKAY           BRANCH IF ANALYZE.
         LA    REG9,FUNCNAM2      POINT TO FORMAT FUNCTION.
FUNCOKAY EQU   *
         LA    REGE,DDNAME2       POINT TO NAME IN FUNCBLK.    @ZA04403
         L     REG3,COPYPTR       POINT TO FIRST COPY BLOCK.
         EJECT
POSTLOOP EQU   *
         LA    REG1,6
         ST    REGE,TEMP               SAVE PTR TO DDNAME      @Z30RSAG
         BAL   REG8,BUILDMSG      BUILD 'COMPLETE' MSG INTO MSG BUFFER.
         L     REGE,TEMP               RESTORE PTR TO DDNAME   @Z30RSAG
         MVC   40(6,REG1),FSERNO  ASSUME NEWVOLID WAS SPECIFIED.
         MVC   0(8,REG1),0(REGE)  INSERT DDNAME INTO MSG BUFFR @ZA04403
         MVC   MESS+9(10),0(REG9) INSERT FUNCTION INTO MSG BUFFER.
         TM    SEQSW,NEWVOLID     WAS NEWVOLID REQUESTED.
         BO    MSGCOMPL           YES-MSG IS COMPLETE IN BUFFER.
         AIF   ('&LIB' EQ 'LIB2').X227217                       XL03912
         CLI   UCBID,X'FF'        IS THIS A DATA CELL.
         BNZ   MSG2321            YES-GET VOLID FROM SUBUCB.
.X227217 ANOP                                                   XL03912
         MVC   40(6,REG1),SRTEVOLI INSERT OLD VOLID INTO MSG BUFFER.
MSGCOMPL EQU   *
         BAL   REG8,PRNTLINK      PRINT 'COMPLETE MSG FOR TODD.
         BAL   REG8,POSTUCB       POST THE UCB.
         LTR   REG3,REG3          IS THERE ANOTHER COPY.
         BZ    POSTEND            NO-PREPARE TO EXIT.
         LA    REGE,DDNAME3       POINT TO COPY TODD.          @Z30RSAG
         L     REG2,CUCBPTR       YES- GET PTR TO COPY UCB.
         LA    REGB,CIOBLOCK      GET POINTER TO  COPY DCB
         L     REG3,CCOPYPTR      POINT TO NEXT COPY BLOCK.
         B     POSTLOOP           LOOP UNTOL ALL UCBS ARE POSTED.
POSTUCB  EQU   *
         SR    REG1,REG1          ASSUME OLD VOLID REQ'TD.
         ST    REG2,PARMUCB       STORE UCB PTR INTO PARM LIST.
         MVI   PARMUCB,X'08'      SET UP POST UCB INDICATOR.
         TM    SEQSW,NEWVOLID     WAS NEW VOLID REQUESTED.
         BZ    REG1OKAY           NO-SET REMAINER OF PARM LIST.
         LA    REG1,FSERNO        YES-GET ADDR OF NEW VOLID.
REG1OKAY EQU   *
         ST    REG1,PARMCCHH      STORE VOLID PTR OR ZERO IN PARN LIST.
         MVC   SEEKADDR+3(4),VVTOCPTR  MOVE VTOC ADDRESS TO IOB SEEK.
         MVI   SEEKADDR+7,1       INSERT RECORD NO INTO  IOB.
         LA    REG1,SEEKADDR      GET PTR TO VTOC ADDRESS.
         ST    REG1,PARMALTD      STORE VTOC PTR INTO PARM LIST.
         LA    REG1,PARMALTD      ASSUME THIS IS LAST ENTRY IN LIST
         CLI   DDNAME2,X'40'      WAS THIS A NEW VOLUME REQUEST.
         BNE   POSTOKAY           NO-PARM LIST IS OKAY TO POST UCB.
         OI    PARMUCB,X'80'      YES-SET UP NEW VOLUME INDICATOR.
ONEPARM  EQU   *                                                 YM3475
         MVC   PARMDEB(4),DCBDEBAD     INSERT DEB ADDR INTO LIST.
         LA    REG1,PARMDEB       GET NEW LAST ENTRY ADDR.
POSTOKAY EQU   *
         MVI   0(REG1),X'80'      INSERT LAST ENTRY INDICATOR INTO LIST
         LA    REG1,PARMLST       POINT TO PARM LIST.
         SVC   82                 POST UCB.
         BR    REG8               RETURN TO TEST FOR MORE UCBS.
POSTEND  EQU   *
         DROP  REGB
         USING IHADCB,REGF
         LH    REG2,RETCODE             GET COMPLETION CODE.    SA59746
         EJECT
FREECORE EQU   *
         L     REG9,WKBUFSI       GET SIZE OF WORKAREA TO BE FREED.
         LA    REG7,FBUFFPTR      GET ADDRESS OF AREA TO BE FREED.
         FREEMAIN E,LV=(REG9),A=(REG7)
FREEWKA  EQU   *
         L     REGD,OLDSAPTR      GET SAVE AREA ADDRESS.
         FREEMAIN  R,LV=SIZE,A=(REG5)     FREE UNCONDITIONAL CORE.
         LR    REGF,REG2          GET PROPER RETURM CODE.
         B     RETCOMP
**********************************************************************
**********************************************************************
**********************************************************************
*
BADEVICE EQU   *
         LA    REG1,10            GET MESSAGE NUMBER.
LINKAGE  EQU   *
         BAL   REG8,BUILDMSG      GET DESIRED MSG.
         MVC   0(8,REG1),DDNAME2    INSERT PROPER DDNAME
PRINTLNK EQU   *
         LA    REG2,8             SET.UP REURN CODE
         BAL   REG8,PRNTLINK          PRINT PROPER MSG.
         LA    REG8,FREEWKA       SET UP RETURN ADRESS IN REG8.
         B     CLOSENXT           CLOSE ALL OPENED DATA SETS.
BADTRKAD EQU   *
         LM    REG9,REG2,PRGSAVE  RESTORE REGS SAVED FOR CONVERT RTNE.
BADTRADD EQU   *
         LA    REG1,25
         L     REG3,COPYPTR       RESTORE COPY BLOCK BASE.
         B     LINKAGE
         AIF   ('&LIB' EQ 'LIB2').X227218                       XL03912
IS2321   EQU   *
         LOAD  EP=IEHDCELL        LOAD DCELL LOAD MODULE INTO CORE.
         ST    REG0,DCELADDR      SAVE ADDRESS OF LOAD MODULE IN FBLK.
         MVI   MAXR0BIT+4,1       SET UP R1 FOR IEHDCELL.
         LA    REG0,8
         ST    REG0,MAXLTHR0+4    SET STANDARD R0 COUNT.
LINK2321 EQU   *
         LA    REG1,SAVEVTOC      GET SAVEAREA PTR FOR IEHDCELL
         L     REGF,DCELADDR      GET ADDRESS OF LOAD MODULE.
         BALR  REGE,REGF          CALL IEHDCELL.
         LA    REGD,SAVEAREA      RESTORE MY SAVEAREA POINTER.
         LTR  REGF,REGF
         BNZ   ABNORMN
         L     REG1,PTRCFUNC
         TM    0(REG1),COMPLETE   IS CURRENT COMPLETE.
         BZ    CONCUR             NO-RETURN TO MONITOR.
         DELETE  EP=IEHDCELL      REDUCE RESPONSIBILITY COUNT.
         B     BLDVTOC            OTHERWISE CONSTRUCT VTOC.
.X227218 ANOP                                                   XL03912
         EJECT
BADTRAKF EQU   *
         TM    WKAIOB+3,X'08'     WAS ER NO RCD FOUND          @ZM42054
         BO    RETRYF             YES-RETRY AND USE STANDARD ERROR REC.
         CLI   UCBTBYT4,X'08'     IS THIS A 2314.
         BNE   SYNADERR         NO-IO ERROR TERMINATE.
         TM    WKAIOB+3,X'02'     WAS ER MISS-ADDR-MKR         @ZM42054
         BO    RETRYF             RETRY AND USE STD ERR REC.   @ZM42054
         TM    WKAIOB+3,X'40'     IS THIS TRACK OVER RUN.
         BZ    SYNADERR           NO-SYNAD ERROR EXIT.
PREFLAG  EQU   *
         AIF   ('&LIB' EQ 'LIB1').X326202                        XM5465
         BAL   REG1,SDFLAG             CHECK FOR 3340.           XM5465
.X326202 ANOP                                                    XM5465
BDTRKERF EQU   *
         LA    REG1,FALTDATA
         LA    REG9,DDNAME2       GET PTR TO PROPER BDNAME.
         AIF   ('&LIB' EQ 'LIB1').X227110                       XL03130
         LA    REG0,ODEVMOD             GET DEV MOD NO.         XL03130
.X227110 ANOP                                                   XL03130
         BAL   REG7,BUILDLST      BUILD LIST FOR SVC 82.
         L     REG7,FBUFFPTR      RESTORE BUFFER POINTER
         SR    REG0,REG0          SET CURRENT PASS TO LAST PASS.
         STH   REG0,COUNT
         B     TESTWAIT           WAIT FOR OUTSYANDING I/O REQ'S.
BADTRAKC EQU   *
         TM    WKAIOB+3,X'08'     WAS ER NO RCD FOUND          @ZM42054
         BO    RETRYC             YES-RETRY AND USE STANDARD ERROR REC.
         CLI   UCBTBYT4,X'08'     IS THIS A 2314.
         BNE   SYNADERR         NO-IO ERROR TERMINATE.
         TM    WKAIOB+3,X'02'     WAS ER MISS-ADDR-MKR         @ZM42054
         BO    RETRYC             RETRY AND USE STD ERR REC.   @ZM42054
         TM    WKAIOB+3,X'40'     IS THIS TRACK OVER RUN.
         BZ    SYNADERR           NO-SYNAD ERROR EXIT.
PREFLAGC EQU   *
         AIF   ('&LIB' EQ 'LIB1').X326103                        XM5465
         BAL   REG1,SDFLAG             CHECK FOR 3340.           XM5465
.X326103 ANOP                                                    XM5465
BDTRKERC EQU   *
         LA    REG1,CALTDATA      GET PTR TO ALTERNATE TRACK INFO.
         LA    REG9,DDNAME3       GET PTR TO PROPER DDNAME.
         AIF   ('&LIB' EQ 'LIB1').X227111                       XL03130
         LA    REG0,CDEVMOD             GET DEV MOD NO.         XL03130
.X227111 ANOP                                                   XL03130
         BAL   REG7,BUILDLST      BUILD PARAMETER LIST FOR SVC 82.
         L     REG7,FBUFFPTR      RESTORE BUFFER POINTER
         SR    REG0,REG0          SET CURRENT PASS TO LAST PASS.
         STH   REG0,COUNT
         B     CTSTWAIT           WAIT FOR OUTSTANDING I/O REQ'S.
         EJECT
         AIF   ('&LIB' EQ 'LIB1').X326400                        XM5465
*****************************************************************XM5465
*                                                                XM5465
*    THIS ROUTINE IS ENTERED WHEN THE DEFECTIVE BIT IS FOUND     XM5465
*    TO BE ON IN THE HOME ADDRESS. IF THE FUNCTION IS ANALYZE    XM5465
*    WITH FLAGTEST=NO AND THE DEVICE IS A 3340, THE CCW          XM5465
*    POINTER IN THE IOB IS CHANGED TO POINT TO THE ANALYZE CCWS. XM5465
*    THE RETURN ADDRESS IS THEN IGNORED AND CONTROL IS PASSED    XM5465
*    TO THE ROUTINE WHICH WILL ATTEMPT TEN SUCCESSFUL  PASSES    XM5465
*    TO DETERMINE THE TRACK'S USEFULLNESS.                       XM5465
*                                                                XM5465
*****************************************************************XM5465
         SPACE
SDFLAG   EQU   *                                                 XM5465
         CLI   FUNCSW,FORMAT           IS THIS A FORMAT?         XM5465
         BCR   EQ,REG1                 YES, ASSIGN ALTERNATE.    XM5465
         SPACE
         CLI   UCBTBYT4,D3350          IS THIS A 3340?           XM5465
         BE    GETBACK                 TRY TO RECLAIM THE TRK  @ZM42054
         TM    FLGBYT1,EMU             IS THIS EMULATED 3330?  @ZA29674
         BO    GETBACK                 YES THEN TRY TO RECLAIM @ZA29674
         SPACE
         CLI   UCBTBYT4,WIN            IS THIS A 3340?           XM5465
         BCR   NE,REG1                 NO, ASSIGN ALT.           XM5465
         SPACE
GETBACK  EQU   *                                                 XM5465
         NI    SDHA,NODEFECT           REMOVE BIT 6 FROM HA.     XM5465
         NI    FLAGREAD,NODEFECT   REMOVE BIT 6 FROM FLAGREAD  @ZA29674
         LA    REG1,CCWSHCON           GET ANALYZE CCWS.         XM5465
         ST    REG1,CCWPTR             USE AS IOBSTART ADDRESS.  XM5465
         LA    REG1,FBLOCKS            ADDR OF PRIMARY BLOCKS.   XM5465
         CR    REG1,REGF               IS DEVICE A COPY?         XM5465
         BE    RETRYF                  NO, DO IT TO THE PRIMARY. XM5465
         B     RETRYC                  YES, DO IT TO A COPY.     XM5465
         EJECT
.X326400 ANOP                                                    XM5465
*
**********************************************************************
*
BUILDLST EQU   *
         LA    REG2,0(REG2)       CLEAR HIGH ORDER BYTE IN UCB REG.
         LR    REGB,REGF          SAVE I/O CONTROL BLOCKS PTR.
         MVC   PARMCCHH(4),SEEKADDR+3  SET UP CCHH OF BAD TRACK.
         ST    REG2,PARMUCB       SET UP PTR TO UCB IN PARMLST.
         ST    REG1,PARMALTD      SET UP PTR TO ALT DATA INFO.
         AIF   ('&LIB' EQ 'LIB1').X227112                       XL03130
         ST    REG0,PARMMOD             PUT DEV MOD PTR IN PARM.XL03130
         MVI   PARMMOD,LASTPARM         SET UP LAST PARM ENTRY  XL03130
         AGO   .X227113                                         XL03130
.X227112 ANOP                                                   XL03130
         MVI   PARMALTD,X'80'     SET UP LAST ENTRY INDICATOR.
.X227113 ANOP                                                   XL03130
         LA    REG1,31            PICK UP MESSAGE NUMBER.
         BAL   REG8,BUILDMSG      PLACE MESSAGE INTO OUTPUT BUFFER.
         MVC   0(8,REG1),0(REG9)  INSERT  DDNAME INTO MSG.
         UNPK  13(9,REG1),PARMCCHH(5)
         TR    13(8,REG1),TRTABLE-240  CONVERT CCHH TO PRINTABLE FORM.
         MVI   21(REG1),X'40'        BLANK OUT ZONED BYTE.
         BAL   REG8,PRNTLINK      PRINT DEFECTIVE TRACK MESSAGE.
         DROP  REGF
         USING IHADCB,REGB
         CLC   SEEKADDR+3(4),CCWORD2+4 WAS THIS TRACK ZERO.
         BNE   NOTZERO            NO-BYPASS NOT IPLABLE MSG.
         LA    REG1,28            YES-BUILD NOT IPLABLE MSG.
         BAL   REG8,BUILDMSG
         MVC   0(8,REG1),0(REG9)      INSERT PROPER DDNAME INTO MSG.
         TM    SEQSW,IPLDD        WAS IPL TEXT REQUESTED.
         BO    LNKTOPRT           YES-PRINT MSG AND TERMINATE.
         BAL   REG8,PRNTLINK      NO-PRINT MSG AND CONTINUE.
NOTZERO  EQU   *
         AIF   ('&LIB' EQ 'LIB2').X225900                       XL03130
         TM    UCBTBYT4,2         IS THIS A DRUM DEVICE.
         BO    DRUMMSG            YES- NO ALTERNATE ASSIGNED MSG.
OK2305   EQU   *                                                 M4682
.X225900 ANOP                                                   XL03130
         TM    DCBIOBAD,X'80'     IS THIS A BAD HA-R0
         BZ    NOTDRUM            NO-ASSIGN ALTERNATE TRACK.
         LA    REG1,29            GET DEFECTIVE HA/R0 MSG.
         BAL   REG8,BUILDMSG      PLACE MSG INTO OUTPUT BUFFER.
         MVC   0(8,REG1),0(REG9)  INSERT DDNAME INTO MSG BUFFER.
         AIF   ('&LIB' EQ 'LIB1').X225902                       XL03130
         CLI   UCBTBYT4,K2314           3330/3340/3350 DEVICE? @ZM42054
         BH    PRTGET                   YES, PRT MSG, CALL SVC @ZM42054
.X225902 ANOP                                                   XL03130
         CLI   UCBTBYT4,K2314     IS THIS A 2314 DEVICE.        XL03912
         BNE   LNKTOPRT           NO-PRINT MSG AND TERMINATE.
PRTGET   EQU   *                                                XL03130
         BAL   REG8,PRNTLINK      PRINT DEFECTIVE HA/R0 MSG.
         B     NOTDRUM
         EJECT
         DROP  REGB
         USING IHADCB,REGF
         AIF   ('&LIB' EQ 'LIB2').X225901                       XL03130
DRUMMSG  EQU   *
         CLI   UCBTBYT4,X'06'           IS IT A 2305-1           M4682
         BE    OK2305                   YES - THERE IS AN        M4682
*                                       ALTERNATE                M4682
         CLI   UCBTBYT4,X'07'           IS IT A 2305-2           M4682
         BE    OK2305                   YES - THERE IS AN        M4682
*                                       ALTERNATE                M4682
         LA    REG1,23            YES-SET UP MESSAGE AND TERMINATE.
         MVI   RETCODE+1,4              SET RETURN CODE TO 4.   SA59746
ALTLINK  EQU   *
         BAL   REG8,BUILDMSG      BUILD MSG IN OUTPUT BUFFER.
INSDDNM  EQU   *
         MVC   0(8,REG1),0(REG9)   INSERT DDNAME INTO MESSAGE.
         B     MSGPRINT
.X225901 ANOP                                                   XL03130
NOTDRUM  EQU   *
         TM    SEQSW+D1,MSSFLG          MSS CONVERSION ?       @Y30LSFY
         BNO   NOTMSS                   NO, BRCH               @Y30LSFY
         MVI   PARMUCB,MSSFLG           CHG PARMLIST ID        @Y30LSFY
NOTMSS   EQU   *                                               @Y30LSFY
         LA    REG1,PARMLST       GET POINTER TO PARM LIST.
         SVC   82                 ASSIGN ALTERNARE TRACK.
         B     *+4(REGF)
         B     GOODRTRN      0 RETURN CODE-SUCCESSFUL COMPLETION.
         B     *            SHOULD NOT OCCUR IF SO HANG.
         B     GOODTRK                 8 RET CODE - GOOD TRK   @VS40037
         B     IOERRORF     12 RETURN CODE -I/O ERROR.
         B     NOALTRKF     16 RETURN-NO MORE ALTERNATE TRACKS.
GOODRTRN EQU   *
         L     REG0,PARMCCHH      GET CCHH OF ASSIGNED ALTERNATE TRACK.
         LTR   REG0,REG0          WAS ALTERNATE TRACK ASSIGNED.
         BZ    NOMESSGE           NO-BYPASS MESSAGE OUTPUT.
         LA    REG1,32            GET MESSAGE NUMBER.
         BAL   REG8,BUILDMSG      PLACE MESSAGE INTO OUTPUT BUFFER.
         MVC   0(8,REG1),0(REG9)  INSERT  DDNAME INTO MSG.
         UNPK  13(9,REG1),PARMCCHH(5)
         TR    13(8,REG1),TRTABLE-240  CONVERT CCHH TO PRINTABLE FORM.
         MVI   21(REG1),X'40'
MSGPRINT EQU   *
         BAL   REG8,PRNTLINK      PRINT ALTERNATE TRACK MESSAGE.
         BR    REG7               RETURN TO CALLER.
NOMESSGE EQU   *
         LA    REG1,32            GET MESSAGE NUMBER.
         BAL   REG8,BUILDMSG      PLACE MESSAGE INTO OUTPUT BUFFER.
         MVC   0(8,REG1),0(REG9)  INSERT  DDNAME INTO MSG.
         BAL   REG8,PRNTLINK      PRINT ALTERNATE TRACK MESSAGE.
         LR    REGF,REGB          RESTORE I/O CONTROL BLOCKS BASE.
         BR    REG7
MSG23    EQU   23                      GOOD TRK MSG            @VS40037
L9       EQU   9                       USED IN UNPK INSTR      @VS40037
L11      EQU   11                       3350 WHA LENGTH        @VS40430
D10      EQU   10                                              @VS40037
GOODTRK  EQU   *                                               @VS40037
         LA    REG1,MSG23              PUT MSG NO IN REG       @VS40037
         BAL   REG8,BUILDMSG           PUT MSG IN BUFF         @VS40037
         UNPK  1(L9,REG1),PARMCCHH(REG5) UNPK TRK NO           @VS40037
         TR    1(L8,REG1),TRTABLE-240  TRANSL NO.              @VS40037
         MVI   D10(REG1),BLANK         RESET ZONED BYTE        @VS40037
         BAL   REG8,PRNTLINK           GO PRT MSG              @VS40037
         BR    REG7                    EXIT TO CALLER          @VS40037
IOERRORF EQU   *
         LA    REG1,13            GET I/O ERROR MSG.
         BAL   REG8,BUILDMSG      BUILD MSG IN OUTPUT AREA.
         MVC   0(3,REG1),SVCNUMBR  INSERT SVC NO THAT HAD I/O ERROR.
         MVC   3(8,REG1),0(REG9)     INSERT DDNAME INTO MSG.
         B     LNKTOPRT      PRINT MESSAGE AND TERMINATE.
NOALTRKF EQU   *
         LA    REG1,27            GET NO MORE ALT TRKS MSG.
         BAL   REG8,BUILDMSG
         MVC   0(8,REG1),0(REG9)       INSERT DDNAME INTO MSG.
         B     LNKTOPRT           PRINT MSG AND TERMINATE.
         EJECT
*
**********************************************************************
*
SYNADERR EQU   *
         LR    REG9,REGF          SAVE I/O CNTL BLKS BASE.     @Z30RSAG
         DROP  REGF
         USING IHADCB,REG9                                     @Z30RSAG
         LA    REG1,13            GET I/O ERROR MSG NO.
         BAL   REG8,BUILDMSG      PLACE MSG INTO PRINT BUFFER.
         SYNADAF  ACSMETH=EXCP,PARM1=WKAIOB
         MVC   MESS+22(78),49(REG1)   SET UP MSG HDNG.           SM4350
         SYNADRLS
         LR    REGF,REG9          RESTORE I/0 CNTL BLKS BASE.  @Z30RSAG
         DROP  REG9                                            @Z30RSAG
         USING IHADCB,REGF
         B     LNKTOPRT           PRINT I/O ERROR MSG.
ONLINERR EQU   *
         LA    REG1,24
         BAL   REG8,BUILDMSG      GET PROPER MSG.
         MVC   0(8,REG1),DDNAME2
         B     LNKTOPRT
ONLINERC EQU   *
         LA    REG1,24
SETMSG   EQU   *
         BAL   REG8,BUILDMSG
         B     COPYMSG
VOLUMERR EQU   *
         LA    REG1,14            GET MSG NUMBER.
         BAL   REG8,BUILDMSG      MOVE MSG TO OUTPUT BUFFER.
         MVC   0(8,REG1),DDNAME2  INSERT DDNAME INTO MSG BUFFER.
SYSRESER EQU   *
         MVC   MESS+9(10),FUNCNAM1     INSERT FUNCTION NAME INTO MSG.
         CLI   FUNCSW,ANALYSIS    TEST FOR CORRECT FUNCTION.
         BE    PRINTLNK           PRINT MSG IF FUNCTION IS CORRECT.
         MVC   MESS+9(10),FUNCNAM2     INSERT FORMAT FUNCTION NAME.
         B     PRINTLNK           PRINT MSG AND TERMINATE.
         EJECT
VOLUMERC EQU   *
         LA    REG1,14
SETUPCPY EQU   *
         BAL   REG8,BUILDMSG
         MVC   0(8,REG1),DDNAME3
         B     SYSRESER           COMPLETE MSG AND PRINT/TERMINATE.
BADCOPY  EQU   *
         LA    REG1,21
         B     SETMSG             SET UP ERROR MSG IN OUTPUT BUFFER.
NOTOPEN  EQU   *
         LA    REG1,5             GET MSG NUMBER.
         LR    REG9,REGF          SAVE CURRENT POINTER.
         BAL   REG8,BUILDMSG      GET PROPER MSG.
         MVC   0(8,REG1),DDNAME2  ASSUME THIS WAS THE PRIMARY FUNC.
         LA    REGF,FBLOCKS
         CR    REG9,REGF          TEST FOR COPY FUNCTION.
         BE    LNKTOPRT           BRANCH IF PRIMARY FUNCTION.
         LR    REGF,REG9          POINT TO  CURRENT DCB.
COPYMSG  EQU   *
         MVC   0(8,REG1),DDNAME3  INSERT COPY DDNAME INTO MSG.
LNKTOPRT EQU   *
         BAL   REG8,PRNTLINK      PRINT CORRECT MSG.
         LA    REGF,8             SET ABNORMAL COMPLETION CODE.
MSGBUILD EQU   *
         LR    REG2,REGF          PICK UP RETURN CODE.
         LA    REGB,FBLOCKS       POINT TO PRIMARY CONTROL BLOCKS.
         AIF   ('&LIB' EQ 'LIB1').X227300                        YM3475
         DROP  REGF
         USING IHADCB,REGB
         CLI   DCBDDNAM,BLANK           IS THIS OFFLINE?         YM3475
         BNE   ONLINE                   NO, LET CLOSE DO IT.     YM3475
DELREQ   EQU   *                                                 YM1377
         CLC   DCBDEBAD(4),DDNAME2+4    IS DEB REMOVED?          YM3475
         BE    RETRNABN                  YES, GO FREE CORE.      YM3475
         MVI   PARMUCB,DELDEB           SET DEB DELETE REQUEST.  YM3475
         BAL   REG8,ONEPARM             GO DELETE DEB.           YM3475
         LTR   REG3,REG3                ANY COPIES?              YM3475
         BZ    RETRNABN                 NO, GO FREE CORE.        YM3475
         LA    REGB,CIOBLOCK            YES, GET COPY CNTL BLK.  YM3475
         L     REG3,CCOPYPTR            GET NEXT COPY POINTER.   YM3475
         B     DELREQ                   GO DELETE ANOTHER DEB.   YM3475
         EJECT
ONLINE   EQU   *                                                 YM3475
.X227300 ANOP                                                    YM3475
         LA    REG8,RETRNABN      PICK UP RETURN ADDRESS.
         B     CLOSENXT           CLOSE ALL OPENED DATA SETS.
BUILDMSG EQU   *
         LINK  EP=IEHDMSGB
         BR    REG8
PRNTLINK EQU   *
         LINK  EP=IEHDPRNT
         BR    REG8
         AIF   ('&LIB' EQ 'LIB2').X227219                       XL03912
         USING DATACELL,REG2
MSG2321  EQU   *
         MVC   40(6,REG1),DCELVOLI INSERT OLD VOLID INTO MSG BUFFER.
         B     MSGCOMPL               PRINT MESSAGE.
.X227219 ANOP                                                   XL03912
         EJECT
*
*                                 CONSTANTS
*
         SPACE
FACTPACK EQU   9                                                 S20201
RPS      EQU   X'40'                    INDIC RPS DEVICE        XM4389
TWO      EQU   2                        DISPLACEMENT CONSTANT    X99204
D1       EQU   1                                                 S20201
X05      EQU   X'05'                   HEX CONSTANT.             S20201
K3       EQU   3                       DISPLACEMENT CONSTANT.    S20201
K16      EQU   16                                                XM6030
K136     EQU   136                                               S20201
K2314    EQU   X'08'                    UCB DEVICE TYPE 2314.   XL03912
RETCODE  DC    H'0'                     RETURN CODE SAVE AREA.  SA59746
         AIF   ('&LIB' EQ 'LIB1').X227220                       XL03912
ALTRNATE EQU   X'01'                    ALTERNATE TRACK FLAG   @ZA04403
READ     EQU   X'1A'                    READ COMMAND           @ZA04403
ALLBITS  EQU   X'FF'                    ALL BITS OF ONE BYTE   @ZA04403
ZEU1     EQU   X'06'                    UCB DEVICE TYEP 2305-1. XL03912
ZEU2     EQU   X'07'                    UCB DEVICE TYPE 2305-2. XL03912
WIN      EQU   X'0A'                    UCB DEVICE TYPE 3340.   XL03130
D3350    EQU   X'0B'                   3350 DEVICE TYPE        @Z30RSAG
HAR0SKIP DC    H'286'                  SKIP DISPLACEMENT.        XM5465
TEST3340 DC    X'76B3BD1FAAAAFFFF'     3340 TEST PATTERN.        XM5465
PATTERN  DC    X'5555555555555555'     OTHER DEVICE PATTERN      XM5465
TICCMD   EQU   X'08'                   TRANS IN CHANNEL CMD      XM5465
SENSE    EQU   X'04'                   SENSE COMMAND.            XM5465
MAXBYTE  EQU   255                     MAX NUMBER IN ONE BYTE.   XM5465
NULL     EQU   0                       THE EMPTY SET.            XM5465
CHAIN    EQU   X'40'                   CHAINING CCWS             XM5465
B8       EQU   8                       LENGTH OF 8 BITS.         XM5465
D4       EQU   4                       DISPLACEMENT OF FOUR.     XM5465
D16      EQU   16                      DISPLACEMENT OF SIXTEEN.  XM5465
EQ       EQU   8                       EQUQL TO.                 XM5465
NE       EQU   7                       NOT EQUAL TO.             XM5465
LOW      EQU   4                       LESS THAN.                XM5465
K9       EQU   9                       CONSTANT OF 9.            XM5465
L4       EQU   4                       LENGTH OF FOUR          @ZA04403
L5       EQU   5                       LENGTH OF FIVE          @ZA04403
L7       EQU   7                       LENGTH OF SEVEN.          XM5465
L8       EQU   8                       LENGTH OF EIGHT.          XM5465
L24      EQU   24                      LENGTH OF TWENTY FOUR.    XM5465
ONE      EQU   1                       CONSTANT OF ONE.          XM5465
NODEFECT EQU   X'FD'                   MASK FOR ALL BUT DEFECT.  XM5465
WRITE    EQU   X'19'                   WRITE COMMAND.            XM5465
WR0      EQU   X'15'                   WRITE R0 COMMAND        @ZA04403
RR0      EQU   X'16'                   READ  R0 COMMAND        @ZA04403
SERHA    EQU   X'39'                   SEARCH HA COMMAND       @ZA04403
.X227220 ANOP                                                   XL03912
F1       DC    F'1'                                              S20201
ZERO     EQU   F1                      1ST 2 BYTES OF F1 EQ 00. SA59746
         EJECT
         DS    0D          ALIGN CCWS ON A DOUBLE WORD BOUNDARY.
SETSECCW EQU   *                        *                        S20201
         CCW   X'23',F1,X'40',1         SET SECTOR ZERO          M5900
TICCW    EQU   *                        *                        S20201
         DC    X'08'                                             S20201
TICADD   DC    AL3(0)                                            S20201
         DC    F'0'                                              S20201
CCWORD1  EQU   *                  SEARCH/WRITE HOME ADDRESS
         DC    X'39'
         DC    AL3(1)
         DC    X'60000005'
CCWORD2  EQU   *
         DC    X'08'
         DC    AL3(CCWORD1-CCWORD1)
         DC    F'0'
CCWORD3  EQU   *                  WRITE R0MAXIMUM LENGTH
         DC    X'15'
         DC    AL3(0)
         DC    X'60000000'
CCWORD4  EQU   *                  READ HOME ADDRESS
         DC    X'1A'
         DC    AL3(0)
         DC    X'60000005'
CCWORD5  EQU   *                  READ R0
         DC    X'16'
         DC    AL3(0)
         DC    X'70000008'
CCWORD6  EQU   *                  SEARCH HOME ADDRESS
         DC    X'39'
         DC    AL3(1)
         DC    X'60000004'
CCWORD7  EQU   *                  TIC TO CC6CONS
         DC    X'08'
         DC    AL3(CCWORD6-CCWORD1)
         DC    F'0'
CCWORD8  EQU   *                  WRITE R0 MAXIMUM LENGTH.
         DC    X'15'
         DC    AL3(0)
         DC    X'60000010'
CCWORD9 EQU    *                  READ HOME ADDRESS
         DC    X'1A'
         DC    AL3(0)
         DC    X'40000005'
CCWORDA  EQU   *                  READ R0
         DC    X'16'
         DC    AL3(0)
         DC    X'60000010'
CCWORDB  EQU   *                  SEARCH HOME ADDRESS.
         DC    X'39'
         DC    AL3(1)
         DC    X'60000004'
CCWORDC  EQU   *                  TIC TO CCWCONS
         DC    X'08'
         DC    AL3(CCWORDB-CCWORD1)
         DC    F'0'
CCWORDD  EQU   *                  WRITE STANDARD R0.
         DC    X'15'
         DC    AL3(0)
         DC    X'40000010'
CCWORDE  EQU   *                  READ HOME ADDRESS
         DC    X'1A'
         DC    AL3(0)
         DC    X'60000005'
CCWORDF  EQU   *                  READ R0 SKIP DATA TRANSFER.
         DC    X'16'
         DC    AL3(0)
         DC    X'10000010'
ZALTCCW  CCW   X'19',ZCCHH,X'20',5      CLEAR ASSIGNED ALT       A43248
         AIF   ('&LIB' EQ 'LIB1').X227301                        YM3475
BLANK    EQU   X'40'                    OFFLINE INDICATION.      YM3475
DELDEB   EQU   X'F8'                    DEB DELETE REQUEST.      YM3475
.X227301 ANOP                                                    YM3475
FUNCNAM1 DC    C'ANALYZE OF'
FUNCNAM2 DC    C'FORMAT OF '
SVCNUMBR DC    C'82,'
ZCCHH    DC    X'0200000000'                                     M4682
ZEUSALT  DC    X'0000000000'                                     M4682
TRTABLE  DC    C'0123456789ABCDEF'
*
         EJECT
         AIF   ('&LIB' EQ 'LIB1').OSDCB
DASDIDCB DCB   DSORG=PS,MACRF=(E),DEVD=DA,EOEA=P8,XENDA=P9,      M5431 F
               SIOA=P7,PGFX=YES                                  M5431
         AGO   .C1
.OSDCB   ANOP
DASDIDCB DCB   DSORG=PS,MACRF=(E),DEVD=DA,EOEA=P8,XENDA=P9
.C1      ANOP
PATCH    DS    0F                  PATCH AREA                  @ZA04403
         DC    200X'00'                                        @ZA04403
DCBCONST EQU   DASDIDCB
         EJECT
**********************************************************************
         IEHDBLKS
DCELADDR EQU   FCCWS+88
         EJECT
*
**********************************************************************
*
         IEHDWORK
WORK1    EQU   WORK
         EJECT
*
**********************************************************************
CVT      DSECT
         CVT   SYS=MIN
         EJECT
*
**********************************************************************
UCB      DSECT
         IEFUCBOB
         EJECT
*
**********************************************************************
JFCB     DSECT
         IEFJFCBN
         EJECT
*
**********************************************************************
         DCBD  DSORG=PS
         EJECT
DCBCON   EQU   IHADCB
         ORG   IHADCB+72
WKAECB   DS    F                  ECB
WKAIOB   DS    F                  IOB
ECBADD   DS    F                  ECB POINTER.
CSWORD   DS    F
         DS    F
CCWPTR   DS    F                  CHANNEL PROGRAM POINTER.
DCBADD   DS    F                  DCB POINTER.
         DS    F
BLKERRCT DS    F                  BLOCK AND ERR RETRY COUNT.
SEEKADDR DS    2F                 SEEK ADDRESS.
SEEKCCHH EQU   SEEKADDR+3               CCHH OF SEEK ARG.      @ZM42054
         DS    F
CWCONST  DS    0D
CCWSECON DS    D                                                 S20201
TICSEC   DS    D                                                 S20201
CCW1CONS DS    D
CCW2CONS DS    D
CCW3CONS DS    D
CCW4CONS DS    D
CCW5CONS DS    D
CCW6CONS DS    D
CCW7CONS DS    D
CCW8CONS DS    D
CCW9CONS DS    D
CCWACONS DS    D
CCWBCONS DS    D
CCWCCONS DS    D
CCWDCONS DS    D
CCWECONS DS    D
CCWFCONS DS    D
         AIF   ('&LIB' EQ 'LIB1').X326401                        XM5465
CCWSHCON EQU   CCWSECON                SEARCH ON 3340.           XM5465
SDCCW1   DS    D                       READ ON 3340.             XM5465
SDCCW2   DS    D                       SENSE ON 3340.            XM5465
SDTIC    DS    D                       TIC TO FMT CCW            XM5465
SDSNS    DS    CL24                    READIN AREA FOR SENSE.    XM5465
         ORG   SDSNS+22                                          XM5465
SDBYTES  DS    CL2                     SKIP DISPLACEMENT BYTES.  XM5465
SDHA     DS    CL5                     3340 HOME ADDRESS.        XM5465
SDSHA    DS    D                       SHA EM. 333X            @Z30RSAG
SDTSHA   DS    D                       TIC EM. 333X            @Z30RSAG
SDWHA    DS    D                       WHA EM. 333X            @Z30RSAG
SDWR0    DS    D                       WR0 EM. 333X            @Z30RSAG
SDRHA    DS    D                       RHA EM. 333X            @Z30RSAG
SDRR0    DS    D                       RR0 EM. 333X            @Z30RSAG
MADSD    EQU   SDSNS+18                3350 SD BYTES           @VS40430
.X326401 ANOP                                                    XM5465
         EJECT
*
**********************************************************************
WORKAREA DSECT
RDAREA1  EQU   *
         DS    CL188                                             JUDITH
UNASGBT  DS    CL1                      UNASSIGN RTNE SWT.     @Y30LSFY
         DS    CL3                      RESERVED               @Y30LSFY
SAVEAREA  DS    0F
PL1WORD  DS    F                  THIS WORD IS USED BY PL/1.
OLDSAPTR DS    F                  POINTER TO PREVIOUS SAVE AREA.
NEWSAPTR DS    F                  POINTER TO NEXT SAVE AREA.
RETADREG DS    F                  (REG14)-RETURN ADDRESS REGISTER.
ENTRYPTR DS    F                  (REG15)-ENTRY POINT REGISTER.
REG0TO12 DS    13F                REGISTERS 0 THROUGH 12.
SAVEVTOC DS    8F
TEMP     DS    F                                                 S20201
SAVCCHHR DS    F                                               @Y30LSFY
SAVCCWPT DS    F                                               @Y30LSFY
         DS    0D                                                JUDITH
PRGSAVE  DS    10F
RTAVTOCS DS    F
RTAVTOCE DS    F
         ORG   *-16
DDEB     DS    0F                 FAKE DEB FOR CONVERT ROUTINE.
         ORG   *+16
DEXTNTNO DS    CL1                DUMMY EXTNT NUMBER.
MBBCCHH1 DS    CL7                SAVE AREA FOR VTOC EXTENT.
MBBCCHH2 DS    CL8
DUCBPTR  DS    F                  FAKE UCB POINTER.
HALFWD   DS    H                  HALF WORD WORK SPACE.
DEXTNTS  DS    HL4                DUMMY STARTING CCHH(000000)
DEXTNTE  DS    HL4                DUMMY ENDING CCHH.
DEXTNTR  DS    H                  DUMMY NO TRACKS.
WKBUFPTR DS    F
WKBUFSI  DS    F
PARMLST  DS    0F
PARMUCB  DS    F
PARMDCB  DS    F
PARMCCHH EQU   PARMDCB
PARMALTD DS    F
PARMDEB  DS    F
         AIF   ('&LIB' EQ 'LIB1').X228303                       XL03130
LASTPARM EQU   X'80'                    END OF PARAMETER LIST.  XL03130
PARMMOD  EQU   PARMDEB                  DEV MOD PTR.            XL03130
.X228303 ANOP                                                   XL03130
OPENLD   EQU   *
         RDJFCB (,(INPUT)),MF=L
LIST     EQU   *
         DC    X'87'              JFCB EXIT LIST CODE.
         DC    AL3(0)
WKAEND   DS    0D
SIZE     EQU   WKAEND-RDAREA1
VOLSERL  EQU   RDAREA1+108                                       M3966
VVTOCPTR EQU   RDAREA1+119                                       M4683
*
**********************************************************************
*
BUFFCORE DSECT
STNDR0   DS    CL16               LOCATION OF STANDARD R0 COUNT.
MAXLTHR0 DS    CL16               LOCATION OF MAXIMUM LENGTH R0 COUNT
MAXR0BIT DS    CL16               LOCATION R0 COUNT AND BIT PATTERN.
         DC    AL3(0)             JFCB READ IN AREA.
BITBUFF  EQU   MAXR0BIT+8
WORKBUFF EQU   BITBUFF-STNDR0
         END
