         COPY  LCGASMSW
IEHDEXCP CSECT
*
*C 111500,277000,759000             @SA75596=@XA10959=@YA11189=@ZA06532
*A 169800-169840,275500-276500,     @SA75596=@XA10959=@YA11189=@ZA06532
*A 751500                           @SA75596=@XA10959=@YA11189=@ZA06532
*
*C 111500,122748,122757             @YA10573=@SA75577=@XA10923=@ZA04436
*
*C 111500                           @SA74482=@YA10558=@XA10391=@ZA04427
*A 731720-731760                    @SA74482=@YA10558=@XA10391=@ZA04427
*
*C 111500                           @YA09679=@SA74485=@XA10384=@ZA04411
*A 122344                           @YA09679=@SA74485=@XA10384=@ZA04411
*
*C 124032                           @XA08872=@SA74445=@YA08050=@ZA03364
*A 111400-111600,124032,124120,     @XA08872=@SA74445=@YA08050=@ZA03364
*A 124124                           @XA08872=@SA74445=@YA08050=@ZA03364
*
*D 122320,122620,122640,161456      @SA73402=@YA06584=@XA07254=@ZA01677
*C 122340,122740,124090,124190      @SA73402=@YA06584=@XA07254=@ZA01677
*C 161440                           @SA73402=@YA06584=@XA07254=@ZA01677
*A 122744-122805,124058             @SA73402=@YA06584=@XA07254=@ZA01677
*A 124136-124183,124203-124207      @SA73402=@YA06584=@XA07254=@ZA01677
*A 124244-124245,161436             @SA73402=@YA06584=@XA07254=@ZA01677
*A 161444-161452,826500-826592      @SA73402=@YA06584=@XA07254=@ZA01677
*A 845100-845480                    @SA73402=@YA06584=@XA07254=@ZA01677
*
*C 576660,589660,734040             @SA69914=@YA04806=@XA05792=@ZA01201
*A 733520,733540                    @SA69914=@YA04806=@XA05792=@ZA01201
* D148000-149000,144500-145500                                   YM0959
*158000,80100                                                    4073
*        RELEASE 23 DELETIONS                                         *
*        RELEASE 22 DELETIONS                                         *
*        RELEASE 21 DELETIONS                                         *
*A161404                                              VS08480 = OZ00607
*569760-575160,581160-667560,795500-796500   SA65560 = OX2864 = OY2654
*                         PTM XM0208 IS ANSWERED UNDER OS APAR SA53223
*                                               XM4417=YA03005=SA67332
*           PTM 5476 IS FLAGGED AS SA67332                      XM5476
*1310161700                                                      A42498
*        RELEASE 20 DELETIONS                                         *
*0900447050,447070,773900                                        M6419
*0900478600-478800                                               M5599
*0900478600-478800,795000                                        A37209
*0900622630-622670,622680-622820,668950                          A21395
*0900564070,564750                                               A31314
*0900564070                                                      M0025
*0900                                                            S20201
* APAR 38132 IS FIXED IN THIS MODULE AS OF RELE 19.6            A38132
*        RELEASE 19 DELETIONS
*2276380000                                                      A29477
*2276661900-666200,671200-723200,897000-905000                   M4513
*2276669150-669180                                               A29172
*177000-179800,564160-564840,585600-585800                       7042
*076200,731800-732700,734500                                     O122
*175000                                                          7343
*607430                                                          6057
*        RELEASE 18 DELETIONS
*3411563000,569000,578200-578700                                 3651
*3411428380                                                      2920
*3411669150-669250,669600                                        2319
*3411622630                                                      1326
*STATUS CHANGE LEVEL 005
*                                                                     *
*FUNCTION/OPERATION- THIS ROUTINE HANDLES SOME OF THE I/O FOR THE     *
*   DUMP FUNCTION OF THE IEHDASDR UTILITY PROGRAM. ALL I/O INVOLVED   *
*   WITH DA AND/OR TAPE DEVICES IS AT THE EXCP LEVEL. THE FIRST       *
*   I/O OPERATION ON THE DIRECT ACCESS DEVICE RESULTS IN THE END OF   *
*   EXTENT APPENDAGE(IGG019P8) BEING ENTERED FROM IOS. THIS ROUTINE   *
*   WILL MODIFY THE DEB EXTENTS AND SET THE CORRECT FILE MASK.        *
*   PROCESSING WILL BE DONE ONE TRACK AT A TIME UNTIL EITHER THE      *
*   DUMP LIMITS OR THE VOLUME LIMITS ARE EXHAUSTED. CONTROL WILL BE   *
*   RETURNED TO -IEHDDUMP- AT THIS TIME.                              *
*   MOST OF THE I/O WILL BE HANDLED BY IEHDDOIO MODULE, WHICH   SA53223
*   WAS CREATED AS A RESULT OF SPLITTING IEHDEXCP FOR VS1/2.    SA53223
*                                                                     *
*ENTRY POINTS- THE ONLY ENTRY POINT IS -IEHDEXCP-, AND CONTROL IS     *
*   ALWAYS RECEIVED FROM THE -IEHDDUMP- ROUTINE.                      *
*                                                                     *
*INPUT- POINTERS TO A WORKAREA(REGISTER 12) AND TO A CONTROL BLOCK    *
*   (REGISTER 10).                                                    *
*                                                                     *
*OUTPUT TO DIRECT ACCESS- A COPY OF THE -FROM- DIRECT ACCESS          *
*   DEVICE WITH PREVIOUSLY UNOWNED TRACKS CLEANED UP.                 *
*                                                                     *
*OUTPUT TO TAPE-                                                      *
*   LIMITS RECORD- ALWAYS THE FIRST RECORD AFTER A TAPE MARK ON       *
*   EACH VOLUME OF TAPE. THIS RECORD IS 24 BYTES IN LENGTH AND        *
*   CONTAINS THE FOLLOWING INFORMATION.                               *
*                                                                     *
*        BYTES 0-3    CCHH OF THE FIRST TRACK DUMPED.                 *
*        BYTES 4-7    CCHH+1 OF THE LAST TRACK DUMPED.                *
*        BYTES 8-11   CCHH OF THE FIRST TRACK THIS VOLUME.            *
*        BYTES 12-19  CODE THAT IDENTIFIES THIS AS BEING A            *
*                     RESTORE TAPE.                                   *
*        BYTE  20     FULL DUMP SWITCH -X'F0'=FULL,X'00'=PARTIAL.     *
*        BYTE  21     DEVICE TYPE CODE AS FOLLOWS.                    *
*                        CODE 0    2321                               *
*                             1    2311                               *
*                             2    2314                               *
*                             3    2302                               *
*                             4    2303                               *
*                             5    2301                               *
*        BYTES 22-23  UNUSED.                                         *
*                                                                     *
*   CONTROL RECORD- THIS RECORD IS WRITTEN FOR EACH TRACK DUMPED      *
*   AND IMMEDIATELY PRECEDES THE DATA RECORD FOR EACH TRACK. IT       *
*   CONTAINS A CHANNEL PROGRAM USED BY RESTORE TO WRITE ONE TRACK.    *
*   THE LENGTH OF THIS RECORD DEPENDS ON THE NUMBER OF RECORDS ON     *
*   THE DUMPED TRACK.                                                 *
*                                                                     *
*   TRACK IMAGE RECORD- THIS RECORD CONTAINS THE DATA DUMPED FROM     *
*   A TRACK AND ALWAYS FOLLOWS A CONTROL RECORD.  IT IS WRITTEN AS    *
*   ONE MAXIMUM LENGTH PHYSICAL RECORD ON TAPE. IT CONTAINS THE       *
*   DATA FIELD OF RECORD ZERO AND ALL FIELDS OF OTHER RECORDS THAT    *
*   WERE ON THE TRACK THAT WAS DUMPED.                                *
*                                                                     *
*   TRAILER RECORD- THIS ALWAYS FOLLOWS THE TAPE MARK THAT WAS AT     *
*   THE END OF THE LAST TRACK IMAGE RECORD. IT IS 24 BYTES IN         *
*   LENGTH, OF WHICH ONLY THE FIRST 4 BYTES ARE USED. IT INDICATES    *
*   WHETHER THE RESTORE IS COMPLETE WHEN THE END OF THIS VOLUME       *
*   IS REACHED.                                                       *
*                                                                     *
*EXITS-NORMAL- SUCCESSFUL COMPLETION OF ALL I/O OPERATIONS RESULTS    *
*   IN A RETURN TO -IEHDDUMP- WITH A RETURN CODE OF ZERO.             *
*                                                                     *
*EXITS-ERROR-  ANY ERROR ENCOUNTERED WILL BE DESCRIBED BY AN          *
*   APPROPRIATE MESSAGE TO THE MESSAGE DATA SET. A RETURN CODE        *
*   GREATER THAN ZERO WILL ALSO BE PASSED TO -IEHDDUMP-.              *
*                                                                     *
*EXTERNAL ROUTINES- THIS ROUTINE IS ALWAYS ENTERED FROM -IEHDDUMP-.   *
*   FIVE OTHER CSECTS ARE USED BY THE ROUTINE. ANY MESSAGES WILL      *
*   BE WRITTEN OUT BY THE MESSAGE WRITER ROUTINE(IEHDPRNT) AFTER      *
*   BEING SET UP BY THE MESSAGE ROUTINE(IEHDMSGB). THE END OF         *
*   EXTENT APPENDAGE(IGG019P8) HANDLES THE LIMITS AND EXTENTS IN      *
*   THE DEB FOR ALL DA DEVICES INVOLVED. ALL DEVICE DEPENDENT         *
*   CONSTANTS WILL BE CONTAINED IN THE -IEHDCONS- CSECT. IEHDEXCP     *
*   WILL LOAD BOTH -IEHDAOUT- AND -IEHDPRNT- WHEN DUMPING TO A        *
*  SYSTEM OUTPUT DEVICE.  IEHDRCVR WILL BE LINKED TO WHEN AN I/O   O122
*  ERROR (MISSING ADDRESS MARKER OR DATA CHECK) ARE ENCOUNTERED    O122
*  WHEN DUMPING TO SYSOUT.                                         O122
*                                                                     *
*ATTRIBUTES- SERIALLY REUSABLE, RELOCATABLE, NON-PRIVILEGED.          *
*                                                                     *
 TITLE 'IEHDEXCP-2ND CSECT OF IEHDDUMP-IEHDASDR SYSTEM UTILITY PROGRAM'
*   THE FOLLOWING ARE REGISTER ASSIGNMENTS.
GR0      EQU   0
GR1      EQU   1
GR2      EQU   2
GR3      EQU   3
GR4      EQU   4
GR5      EQU   5
GR6      EQU   6
GR7      EQU   7
GR8      EQU   8
GR9      EQU   9
GR10     EQU   10
GR11     EQU   11
GR12     EQU   12
GR13     EQU   13
GR14     EQU   14
GR15     EQU   15
RCVT     EQU   9
UCBPTR   EQU   9
BASEREG  EQU   11
WORKBASE EQU   12
         SPACE 2
         USING FUNCBLK,10
         USING IEHDEXCP,BASEREG
         USING WORK,12
         SAVE  (14,12),T,*             SAVE THE REGISTERS.
         LR    BASEREG,GR15            LOAD THE BASE REGISTER.
         LA    GR7,EXCPSAVE            SAVE AREA ADDRESS.
         ST    GR7,8(GR13)             ADDRESS OF NEW AREA TO OLD.
         ST    GR13,4(GR7)             ADDRESS OF OLD AREA TO NEW.
         LR    GR13,GR7                SAVE AREA FOR CALLED ROUTINES.
         USING IOBLOCKS,9
         B     APARNO                  BRANCH AROUND APAR NO   @ZA03364
         DC    C'OZ06532'              LAST APAR FIXED IN MOD  @ZA06532
APARNO   LA    GR9,BLOCKS              ADR PRIMARY I/O BLOCKS. @ZA03364
         L     GR3,PTRCFUNC            POINTER TO CURRENT FUNCTION.
         TM    0(GR3),PROCESS          PREVIOUSLY UNDER WAY.
         BZ    FORMAT5                 NO--START FROM THE BEGINNING.
         B     RDCNTS                   RETURN TO IEHDDOIO      SA53223
         EJECT
***********************************************************************
*        THIS SECTION WILL READ IN THE FORMAT 4 DSCB TO DETERMINE     *
*        IF THE I/P DEVICE IS A DOS PACK. IF IT IS, THE 'DUMPALL'     *
*        SWITCH WILL BE SET. IF IT IS NOT A DOS                       *
*        PACK, THE FORMAT5 DSCB WILL READ IN . ALL AVAILABLE          *
*        EXTENTS WILL BE CONVERTED FROM RTA TO MBBCCHHR, USING        *
*        THE CVT CONVERT ROUTINE. THE CONVERTED EXTENTS WILL BE       *
*        STORED IN THE FORMAT5 TABLE FOR LATER USE DETERMINING        *
*        IF AN INDIVIDUAL TRACK IS OWNED AND THUS IF THIS TRACK       *
*        SHOULD BE DUMPED.                                            *
**********************************************************************
         USING IHADCB,GR8
         USING IOBLOCKS,GR9
FORMAT5  CLI   DEVSW,X'F0'             DUMPING TO SYSOUT.
         BE    START                   YES--DO NOT PROCESS FORMAT5
         LA    GR8,OUTDCB              ADDRESS OF DCB.
         L     GR1,DCBDEBAD            ADDRESS OF DEB.
         MVC   OUTSEEK+3(4),38(GR1)    CCHH OF VTOC TO IOB.
         AIF   ('&LIB' EQ 'LIB1').NOTIME BRCH IF OS ASSEM        Y02113
         MVC   TIMESTMP(L4),D38(GR1)    SAVE CCHH OF F4 DSCB     Y02113
.NOTIME  ANOP                                                    Y02113
         MVI   R,R1                     SET REC NO. FOR F4 DSCB SA58744
RDF4     EQU  *                                                @ZA01677
         MVI   RDVTOC,X'FF'            INDICATE VTOC JUST READ @ZA04411
         LA    GR3,OUTSEEK+3           SEARCH ADDRESS.
         ST    GR3,READVTOC            SEARCH ADDRESS TO SEARCH CCW.
         MVI   READVTOC,X'31'          RESET OP CODE.
         LA    GR3,READVTOC            CCW ADDRESS OF RD FORMAT5 CCW.
         ST    GR3,OUTCCWAD            SET CCW ADDRESS IN IOB.
         L     GR3,FORM5FPT            ADDRESS OF BUFFER.
         LA    GR3,D84(GR3)            INCREMENT INTO BUFFER
         ST    GR3,RDVDATA             STORE ADDRESS IN READ KD CCW.
         MVI   RDVDATA,X'0E'           RESET OP CODE.
         EXCP  OUTIOB                  READ IN FORMAT5 DSCB TO BUFFER.
         WAIT  ECB=OUTECB              AWAIT COMPLETION
         CLI   OUTECB,GOOD             ALL OK
         BNE   IOERR                   NO-ERROR
         MVI   R,R2                    RESET SEEK ARGU FOR F5   SA58744
         LA    GR7,START               SET 1ST TIME THRU SWT    SA58744
         TM    D58(GR3),CONTAM+VTOCERR FMT 5 BAD ?
         BNZ   NOCOND                  YES, DONOT READ F5      @ZA03364
         MVC   F5CCHHR(5),OUTSEEK+3    CCHHR OF FIRST F5 DSCB  @ZA01677
*                                      TO CAMLST (OBTAIN)      @ZA01677
OBTF5    L     GR3,FUCBPTR             PTR TO FROM UCB         @ZA04436
         MVC   FRVOL(6),28(GR3)        FROM VOLSER TO CAMLST   @ZA01677
         USING F5BUF,GR8               F5BUF DSECT             @ZA01677
         L     GR8,FORM5FPT            PT TO F5BUF             @ZA04436
         LA    GR3,DS5KEYID            PTR TO F5 DSCB          @ZA01677
         ST    GR3,F5DSCB+12           READ IN ADR CAMLST      @ZA01677
         OBTAIN F5DSCB                 OBTAIN F5 DSCB          @ZA01677
         LTR   GR15,GR15               SUCCESFUL OBTAIN        @ZA01677
         BNZ   SETFLG                  NO, WRITE MSG 817       @ZA01677
CONVRT   EQU   *                                                SA58744
         USING CVT,GR8
         USING CONSTANT,GR9
         L     GR8,CVTPTR              ADDRESS COMM. VECTOR TABLE.
         L     GR9,IODEVCON            ADDRESS FOR DEVICE CONSTANTS.
         L     GR15,CVTPCNVT           ADDRESS CVT CONVERT ROUTINE.
         DROP  8
         LA    GR2,D140(GR3)           ADDRESS FOR CONVERTED RTA.
         MVC   44(90,GR3),45(GR3)      MAKE EXTENTS CONTIGUOUS.
         MVC   151(5,GR3),135(GR3)     SAVE NEXT F5 PTR
         MVC   134(4,GR3),ZERO         ZERO END OF EXTENTS FIELD.
         BCTR  GR3,0                   DECREMENT PTR. FOR LATER USE.
         MVC   DUMPWORK(4),ZERO        CLEAR OUT WORK AREA.
         L     GR1,CNTBUFPT            ADDRESS OF DUMMY DEB.
         MVI   16(GR1),1               SET FOR ONE EXTENT.
         L     GR8,FUCBPTR             UCB PTR. FOR 'FROM' DEVICE.
         EJECT
FORMAT5A ST    GR8,32(GR1)             UCB PTR. TO DUMMY DEB.
         MVC   38(4,GR1),ZERO          ZERO FOR LOWER LIMITS.
         MVI   42(GR1),X'FF'           SET 'FFFF' FOR UPPER
         MVC   43(5,GR1),42(GR1)         LIMITS IN DEB.
         MVI   46(GR1),X'7F'           NUMBER TRKS/EXTENT.
         L     GR8,FORM5FPT            ADDR. FORMAT5 EXTENTS TABLE.
         SPACE
*  INITIALIZATION OF REGISTER COMPLETE. START CONVERTING RTA TO CCHH.
*              REGISTER 1- ADDRESS OF THE DUMMY DEB.
*              REGISTER 2- ADDRESS FOR CONVERTED RTA.
*              REGISTER 3- ADDRESS OF READ-IN FORMAT5 DSCB.
*              REGISTER 4- TRKS PER CYL THIS DEVICE.
*              REGISTER 8- ADDR NEXT AVAILABLE SLOT IN FORMAT5 TABLE.
         SPACE
NEXTRTA  LH    GR4,TRKCYL              TRKS/CYLINDER THIS DEVICE.
         LA    GR6,1                   FOR INNER LOOP.
         LA    GR3,5(GR3)              INCREMENT EXTENT POINTER.
         MVC   DUMPWORK(2),0(GR3)      MOVE IN BEGINNING RTA THIS EXT.
         L     GR0,DUMPWORK            PRIME REGISTER 0 FOR CONVERT RTN
         LTR   GR0,GR0                 END OF EXTENTS.
         BZ    LASTRTA                 YES--GO TO SET END OF TABLE.
CONVERT  LR    GR5,GR13                SAVE REGISTER THIRTEEN.
         STM   14,12,12(13)            SAVE THE REGISTERS.
         BALR  GR14,GR15               GO TO CONVERT RTA TO MBBCCHHR.
         LTR   GR15,GR15               SUCCESSFUL RETURN.
         LR    GR13,GR5                RESTORE REGISTER THIRTEEN.
         LM    14,12,12(GR13)          RESTORE ALL THE REGISTERS.
         BZ    OKEND                   GOOD RETURN-CONTINUE PROCESSING.
NOCOND   MVI   DOUBLE+4,X'FF'          NOT WRITE COND= IN MSG  @ZA03364
SETFLG   EQU   *                                                SA58744
         ST    GR15,DOUBLE             SAVE COND CODE          @ZA01677
         LA    GR1,17                  INVALID FORMAT5 EXTENT.
         BAL   GR4,SETUPMSG            SET UP THIS MESSAGE.    @ZA01677
         MVC   0(8,GR1),DDNAME1        DDNAME TO MESSAGE.
         TM    DOUBLE+4,X'FF'          WRITE COND= ?           @ZA03364
         BO    IGNOREF5                NO THEN BRANCH          @ZA03364
         LA    GR1,8(GR1)              PT AFTER THE DNAME=XXXX @ZA01677
         MVC   0(5,GR1),COND           MOVE COND= TO MSG       @ZA01677
         LA    GR1,5(GR1)              PT AFTER COND=          @ZA01677
         L     GR15,DOUBLE             RELOAD COND CODE        @ZA01677
         MVI   DOUBLE,X'00'            CLEAR CONVERT AREA      @ZA01677
         MVC   DOUBLE+1(7),DOUBLE                              @ZA01677
         CVD   GR15,DOUBLE             CONVERT COND CODE (DEC) @ZA01677
         UNPK  0(3,GR1),DOUBLE+6(2)    UNPACK COND CODE        @ZA01677
         OI    2(GR1),X'F0'            SET CORRECT SIGN        @ZA01677
         MVI   BADCOND,X'00'           CLEAR SWITCH            @ZA01677
         S     GR15,FOUR               COND CODE = 4?          @ZA01677
         BZ    TERM                    YES,BRANCH              @ZA01677
         S     GR15,EIGHT              COND CODE = 12?         @ZA01677
         BNZ   IGNOREF5                NO,BRANCH               @ZA01677
TERM     MVI   BADCOND,X'FF'           INDICATE TERMINATE      @ZA01677
IGNOREF5 BAL   GR4,MSGWRT              WRITE OUT THIS MESSAGE. @ZA01677
         TM    BADCOND,X'FF'           TERMINATE? (C/C=4/12)   @ZA01677
         BO    SETCOND                 YES,BRANCH              @ZA01677
         MVI   RCODE,X'FF'             SET SWITCH FOR RETURN CODE 4.
         OI    SWITCH,DUMPALL          SET SWITCH TO DUMP ALL TRKS.
         BR    GR7                     START DUMP I/O FUNCTIONS.
SETCOND  LA    GR15,8                  SET CON CODE = 8 RETURN @ZA01677
         B     FINALR3                 TERMINATE THIS FUNCTION @ZA01677
         EJECT
OKEND    MVC   0(4,GR8),3(GR2)         MOVE CCHH TO FORMAT5 TABLE.
         LA    GR8,4(GR8)              INCREMENT FORMAT5 TABLE PTR.
         MVC   DUMPWORK(4),ZERO        CLEAR OUT WORK AREA.
         BCT   GR6,NEXTRTA             TAKE BRANCH IF SWITCH IS SET.
         MVC   DUMPWORK+2(2),0(GR3)      MOVE IN BEGINNING RTA.
         L     GR0,DUMPWORK            PRIME REGISTER 0 FOR CONVERT RTN
         MVC   DUMPWORK(4),ZERO        CLEAR OUT WORK AREA.
         MVC   DUMPWORK+2(2),2(GR3)    MOVE NO OF FULL CYL THIS EXTENT
         L     GR5,DUMPWORK            PRIME REGISTER FOR MULTIPLY.
         MR    GR4,GR4                 COMPUTE TOTAL TRACKS.
         IC    GR4,4(GR3)              ADDITIONAL TRACKS THIS EXTENT.
         AR    GR4,GR5                 TOTAL ADDITIONAL TRACKS.
         AR    GR0,GR4                 END RTA THIS EXTENT.
         BCTR  GR0,0                   DECREMENT NO. OF ADDITIONAL TRKS
         SLL   GR0,16                  LEFT JUSTIFY FOR CONVERT RTN.
         LA    GR6,2                   SET UP INNER LOOP CONTROL.
         MVC   DUMPWORK(4),ZERO        CLEAR OUT WORK AREA.
         B     CONVERT                 GO TO CONVERT ENDING RTA.
LASTRTA  MVI   0(GR8),X'FF'            SET END OF TABLE POINTER.
         BR    GR7                     CONTINUE
         EJECT
         USING IOBLOCKS,9
START    LA    GR9,BLOCKS              ADDRESS PRIMARY I/O BLOCKS.
         L     GR3,PTRCFUNC            POINTER TO CURRENT FUNCTION.
         OI    0(GR3),PROCESS          SET SWITCH FOR NOW PROCESSING.
         MVC   TOSEEK+3(4),CCHHONE     MOVE IN THE
         MVC   CCHH(4),CCHHONE              TRACK TO BE DUMPED.
         MVI   OUTSEEK+3,X'FF'         SET 'CC' OF CCHH FOR APPENDAGE.
         CLI   DEVSW,X'F0'             DUMPING TO SYSOUT.
         BNE   BUILDCNT                       NO-- GO BEGIN PROCESSING
         LOAD  EP=IEHDAOUT             LOAD -IEHDAOUT- INTO CORE.
         ST    GR0,DAOUTADR            SAVE ENTRY POINT.
         LOAD  EP=IEHDPRNT             LOAD -IEHDPRNT- INTO CORE.
         ST    GR0,PRNTADR             SAVE ENTRY POINT.
         EJECT
***********************************************************************
*                                                                     *
*  THIS SECTION WILL BUILD THE READ COUNT CCWS. MAXIMUM NUMBER OF     *
*  CCWS IS DETERMINED BY THE MAXIMUM NUMBERS OF RECORDS POSSIBLE PER  *
*  TRACK THIS DEVICE. THESE WILL BE EXECUTED WITH THE ENTIRE          *
*  CHANNEL PROGRAM BEING RESTARTED IF RECORD ONE IS AN EOF. GOOD      *
*  RETURNS FROM THE WAIT WILL BE FILE PROTECT OR TRACK CONDITION.     *
*  POSSIBLY IN COMBINATION WITH OVERFLOW INCOMPLETE.                  *
*                                                                     *
***********************************************************************
BUILDCNT L     GR2,CCWBUFPT            GET POINTER TO CCW BUFFER.
         USING CCWS,2
         USING IOBLOCKS,GR9
         LA    GR9,BLOCKS          ADDRESS PRIMARY I/O BLOCKS.
         ST    GR2,OUTCCWAD            CCW ADDRESS TO IOB.
         TM    SEQSW,RPSFEAT1      FROM DEVICE HAVE RPS          S20201
         BZ    GO                  NO                            S20201
         LR    GR4,GR2             PUT BUFF PTR IN WORK REG      S20201
         SH    GR4,SIXTEEN         PT TO RPS BUFR                S20201
         ST    GR4,OUTCCWAD        ST PTR IN IOB                 S20201
         ST    GR2,D8(GR4)         SET UP TIC ADDR               S20201
         MVI   D8(GR4),TICCODE     RESET TIC OP                  S20201
GO       EQU   *                        *                        S20201
         MVI   AOUTSW,FMTTRK           SWITCH TO FORMAT TRACK      O122
         MVI   RECNUM,X'00'            INITIALIZE FOR NEW TRACK    O122
         MVC   0(40,GR2),SEARIDEQ      MOVE IN 'DUMMY' CCWS.
         LA    GR4,OUTSEEK+3           SEARCH ADDRESS.
         ST    GR4,SEIDEQR0            STORE INTO CCW.
         MVI   0(GR2),X'31'            RESET OP CODE.
* THIS SETS UP CORRECT ADDRESSES IN THE CCWS.
         ST    GR2,TICBACKA            RESET TIC ADDRESS.
         MVI   TICBACKA,X'08'          RESET TIC OP CODE.
         L     GR4,DATBUFPT            POINT TO DATA BUFFER
         ST    GR4,TRACKPT             SAVE ADDRESS FOR IEHDAOUT   O122
         ST    GR4,RDWRDATA            STORE ADDRESS IN READ R0 CCW.
         MVI   RDWRDATA,X'06'          RESET OP CODE.
         LA    GR4,8(GR4)              POINT 8 BEYOND ACTUAL BEGINNING.
         ST    GR4,RDWRTCKD            PUT POINTER IN CCW.
         MVI   RDWRTCKD,X'9E'          RESET RD CKD OP CODE.
         MVC   RDWRTCNT+1(3),CNTBUFPT+1  SET ADDR OF COUNT BUFF IN CCW.
         L     GR8,IODEVCON            PT TO DEVCONS             YM0959
         USING CONSTANT,GR8                                      YM0959
         MVC   RDWRTCKD+6(2),DATASIZE  SET BYTE COUNT            YM0959
         LM    GR4,GR5,32(GR2)         PICK UP DUMMY CCW.
         LA    GR6,8                   SET UP INCREMENTING FACTOR.
         LH    GR7,MAXREC              MAXIMUM RECS PER TRK THIS DEV.
         LA    GR3,RDWRTCNT            SET UP BEGINNING ADDRESS.
CREATCCW STM   GR4,GR5,0(GR3)          STORE 'DUMMY' CCW IN LIST.
         AR    GR4,GR6                 UPDATE COUNT BUFFER ADDRESS.
         AR    GR3,GR6                 INCREMENT CCW POINTER.
         BCT   GR7,CREATCCW            LOOP THRU UNTIL THRU.
         SR    GR3,GR6                 BACK UP ONE CCW           4074
         MVI   4(GR3),X'00'            TURN OFF CHAIN BIT        4074
         MVI   R,0                     SET SEARCH FOR RECORD ZERO.
         USING IOBLOCKS,9
TRKOWNED LA    GR9,BLOCKS              ADDRESS PRIMARY I/O BLOCKS.
         TM    SWITCH,DUMPALL          DUMPING ALL TRACKS THIS DEV.
         BO    RDCNTS                  YES--GO TO PROCESS FOR THIS TRK.
         LA    GR5,CCHHONE             CURRENT TRACK ADDRESS.
         L     GR4,FORM5FPT            PTR TO ENTRY IN FORMAT5 TABLE
TRKCHK   CLC   0(4,GR5),0(GR4)         CURRENT TRK > OR = LOWER LIMIT.
         BL    RDCNTS                  NO--LESS THAN--DUMP IT.
         CLC   4(4,GR4),LASTORIG       UPPER LIMIT=LAST PRIMARY TRK.
         BE    FINIS                   YES--ECONOMY RUN--GO TO FINISH.
         CLC   0(4,GR5),4(GR4)         CURRENT TRK < OR = UPPER LIMIT.
         BNH   WRTHAR0                 YES--DO NOT DUMP IT.
         LA    GR4,8(GR4)              BUMP TABLE PTR TO NEXT EXTENTS.
         ST    GR4,FORM5FPT            STORE TABLE PTR FOR FUTURE USE.
         CLI   0(GR4),X'FF'            END OF TABLE.
         BNE   TRKCHK                  NO--GO CHECK NEXT EXTENTS.
         L     GR8,IODEVCON             RELOAD 'DCONS PTR       OZ00607
         L     GR3,DATBUFPT            PTR TO DATA BUFFER
         AH    GR3,DATASIZE            PT TO FORM5 AREA
         CLC   235(5,GR3),ZERO         LAST FMT 5
         BE    NOMORE                  YES
         ST    GR3,FORM5FPT            PT TO HEAD OF AREA      @ZA01677
         MVC   F5CCHHR(5),235(GR3)     CCHHR OF 2:ND F5 DSCB   @ZA01677
*                                      TO CAMLST (OBTAIN)      @ZA01677
         BAL   GR7,OBTF5               DO OBTAIN OF 2-NN F5    @ZA01677
*                                      DSCB                    @ZA01677
         USING IOBLOCKS,GR9
         LA    GR9,BLOCKS              ADDR PRIMARY IO BLKS
         MVC   OUTSEEK+3(4),CONTROL+8  NEXT CCHH
         MVI   R,0                     SET TO REC 0
         L     GR2,CCWBUFPT            GET PTR TO CCW BUFR
         TM    SEQSW,RPSFEAT1          RPS ON FROM DEVICE
         BZ    OK                      NO
         L     GR2,RPSBUFPT            YES-PT TO RPS BUFR
OK       ST    GR2,OUTCCWAD            STORE IN IOB
         B     TRKOWNED                CONTINUE CHECK
         DROP  8
NOMORE   EQU   *
         OI    SWITCH,DUMPALL          SET SWITCH TO DUMP REST OF TRKS
RDCNTS   EQU   *
         MVI   BRCHVAL,RDCNTVAL         SET IEHDDOIO BRCH VALUE SA53223
RDCNTS1  EQU   *                                                SA53223
         CALL  IEHDDOIO                                         SA53223
         LA    GR3,BRCHTABL             GET BRCH TABLE ADDR     SA53223
         SR    GR2,GR2                  ZERO WORK REGISTER      SA53223
         IC    GR2,BRCHVAL              LOAD BRCH TABLE VALUE   SA53223
         AR    GR3,GR2                  COMPUTE BRCH TABL ENTRY SA53223
         BR    GR3                      BRCH TO TABLE ENTRY     SA53223
WRTHAR0  EQU   *                                                SA53223
         MVI   BRCHVAL,WRTHARO          SET IEHDDOIO BRCH VALUE SA53223
         CLI   RDVTOC,X'FF'            JUST READ VTOC?         @ZA06532
         BNE   RDCNTS1                 NO THEN BRANCH          @ZA06532
         MVI   RDVTOC,X'F0'            TO GET OK EXTENT IN DEB @ZA06532
         B     RDCNTS1                  GO CALL IEHDDOIO        SA53223
BRCHTABL EQU   *                                                SA53223
         B     PROC4                                            SA53223
         B     IOERR                                            SA53223
         B     IOTERR                                           SA53223
         B     OUT4                                             SA53223
         B     ISUMSG                                           SA53223
         B     FINIS                    NOT USED                SA53223
         B     FINAL3                                           SA53223
*        END OF BRCH TABLE.                                     SA53223
OUT4     BAL   GR14,UPCCHH             GO UPDATE THE TRACK ADDRESS.
         CLI   RDVTOC,X'F0'            TO P8 FIRST TIME        @ZA06532
         BNE   SKIPP8                  NO,THEN NO FF IN CCHH   @ZA06532
         MVI   OUTSEEK+3,X'FF'         SET 'CC' OF CCHH FOR P8 @ZA06532
SKIPP8   L     GR3,CCWBUFPT            ADDRESS READ COUNT CCWS @ZA06532
         MVI   24(GR3),X'9E'           RESET OP CODE IN CASE R1=EOF.
         NI    SWITCH,X'AF'            TURN OFF ALL BUT DUMP ALL TRKS.
         TM    DEVSW,X'F0'             DUMPING TO DA OR SYSOUT.   0811
         BO    TRKOWNED                YES-BRANCH.                0811
         L     GR1,TAPECCW4            POINT TO CCWS WRITTEN.     0811
         MVI   48(GR1),X'1D'           RESET OP CODE IN CASE T.O. 0811
         B     TRKOWNED                CONTINUE PROCESSING W/ NXT TRK.
         AIF   ('&LIB' EQ 'LIB1').VSAM01 BRCH IF OS ASSEM       Y02113
*        TIMESTAMP TEST MADE HERE                               Y02113
         TM    TIMESET,TIMECHK          HAS F4 DSCB BEEN UPD    Y02113
         BO    TIMEOK                   YES, DON'T CHK          Y02113
         CLC   OUTSEEK+D3(L4),TIMESTMP  IS THIS THE F4 DSCB     Y02113
         BNE   TIMEOK                   NO, DON'T SET CLOCK     Y02113
         STCK  CLOCK(GR2)               PUT TIMESTMP IN F4 DSCB Y02113
         OI    TIMESET,TIMECHK          SET CHECK SWITCH        Y02113
TIMEOK   EQU   *                                                Y02113
.VSAM01  ANOP                                                   Y02113
PROC4    BAL   GR14,UPCCHH             GO UPDATE THE TRACK ADDRESS.
         NI    SWITCH,X'AF'            TURN OFF ALL BUT DUMP ALL TRKS.
         OI    TOFLGS,X'42'            INDICATE CMD CHAINING.
         B     BUILDCNT                 GO PROCESS NEXT TRK
         EJECT
*
*  WRITE TRAILER RECORD.
*
         SPACE
TRAILER  L     GR5,CNTBUFPT            BUFFER POINTER.
         ST    GR1,0(GR5)              ST TRAILER REC IN BUFFER.
         ST    GR5,TAPECCW5         DATA PTR TO WRITE CCW.
         LA    GR5,TAPECCW5            ADDRESS OF CCWS.
         MVI   TAPECCW5,WRTAPE          RESET WRITE OP CODE.
WRTTRL   ST    GR5,TOCCWAD             CCW POINTER TO IOB.
VOLEXCP  EXCP  TOIOB                   EXECUTE CHANNEL PROGRAM.
         WAIT  ECB=TOECB               AWAIT COMPLETION.
         CLI   TOECB,GOOD              ALL OK.
         BCR   8,GR2                   YES-RETURN.
         TM    TOSTATUS+4,X'01'        UNIT EXCEPTION-EOV.
         BCR   1,GR2                   YES-THAT'S OK-RETURN.
         B     IOTERROR           ALL OTHER IS I/O ERROR       @ZA01201
YESEOV   EQU   *
         LA    GR3,TODCB                LOAD DCB ADDRESS
         USING IHADCB,3
         OI    DCBOFLGS,TAPMK           INSURE BIT 0 IS ON      SA21395
         EOV   TODCB
         LA    GR2,CONTROL              GET ADDR OF HDR         OX2864
         ST    GR2,TAPECCW5             STORE IN TAPE CCW       OX2864
         MVI   TAPECCW5,WRTAPE          RESET OPECODE           OX2864
         L     GR2,CNTBUFPT            BUFFER ADDRESS.
         ST    GR2,TOCCWAD             CCW PTR. TO IOB.            2319
         MVC   0(L8,GR2),TAPECCW5      CCWS TO WRITE CONTROL REC.
         EXCP  TOIOB                   WRITE CONTROL RECORD.
         WAIT  ECB=TOECB               NO---AWAIT COMPLETION.
         CLI   TOECB,GOOD              ALL OK.
         BCR   8,GR4                   YES--RETURN.
         B     IOTERROR                NO---I/O ERROR          @ZA01201
         EJECT
***********************************************************************
*                                                                     *
*   THE FOLLOWING ROUTINE UPDATES THE TRACK ADDRESS AND CHECKS        *
*   TO SEE IF THIS WAS THE LAST TRACK TO BE DUMPED.  IF NO,THE        *
*   ROUTINE WILL UPDATE THE EXTENTS IN THE DEB AND RETURN.  IF        *
*   THIS IS THE LAST TRACK, THE ROUTINE WILL BRANCH TO THE CLOSE      *
*   OUT ROUTINE.                                                      *
*                                                                     *
*   REGISTER 9 POINTS TO THE CORRECT IOBLOCK.                         *
*   REGISTER 14 IS THE RETURN REGISTER.                               *
*                                                                     *
***********************************************************************
         USING IOBLOCKS,GR9
         USING CONSTANT,2
UPCCHH   L     GR2,IODEVCON            ADDRESSING FOR DEVICE CONSTANT.
         L     GR3,CONTROL+8           CURRENT CCHH ADDRESS.
         CLC   OUTSEEK+6(1),LASTORIG+3   THIS LAST TRACK OF CYLINDER.
         BC    4,UPCCHH1               NO--
         A     GR3,CONVCYL             YES,STEP TO NEXT CYLINDER.
         AIF   ('&LIB' EQ 'LIB2').X0001                         Y02113
CK2321   CLI   OUTSEEK+5,X'04'         IS THIS 2321 AND LAST CYLINDER.
         BC    7,UPCCHH2               NO--RETURN.
         AL    GR3,STC2321             INCREMENT STRIP.
         CLI   OUTSEEK+4,X'09'         THIS LAST STRIP.
         BC    7,UPCCHH2               NO--RETURN.
         AL    GR3,SCC2321             INCREMENT SUBCELL.
.X0001   ANOP                                                   Y02113
         B     UPCCHH2                 GO STORE VALUE AND RETURN.
UPCCHH1  AL    GR3,F1                  INCREMENT TO NEXT TRACK.
UPCCHH2  ST    GR3,CONTROL+8           SAVE NEW VALUE.
         CLC   CONTROL+4(4),CONTROL+8    THIS LAST TRACK TO DUMP.
         BE    FINIS                   YESS--GO TO FINISH UP THE JOB.
         MVC   OUTSEEK+3(4),CONTROL+8   TRACK ADDRESS TO IOB.
         MVC   TOSEEK+3(4),CONTROL+8       TRK ADDRESS TO 'TO' IOB.
         TM    SWITCH,EOV              EOV SWITCH SET FOR PRIMARY 'TO'.
         BZ    UPCCHH3                 NO--GO CHECK FOR COPIES.
         NI    SWITCH,X'FD'            SET EOV SWITCH OFF.
         L     GR1,REELCK              CURRENT TRAILER INFO.
         SLL   GR1,1                   UPDATE AND
         ST    GR1,REELCK                 STORE TRAILER INFO.
         BAL   GR2,TRAILER             GO TO WRITE TRAILER.
         BAL   GR4,YESEOV              GO TO FORCE EOV.
UPCCHH3  OC    COPYPTR(4),COPYPTR      ARE THERE COPIES.
         BCR   8,GR14                  NO--RETURN TO CALLER.
         L     GR8,COPYPTR             ADDRESS OF COPY BLOCK.
         USING COPYBLK,8
UPCCHH4  LA    GR9,CIOBLOCK            I/O BLOCK FOR COPY.
         MVC   TOSEEK+3(4),CONTROL+8   UPDATE SEARCH ARGUMENT.
         TM    CERRSW,X'FF'            EOV THIS COPY.
         BZ    UPCCHH5                 NO--GO TO SEE IF MORE COPIES.
         MVI   CERRSW,0                SET COPY EOV SWITCH OFF.
         L     GR1,CREELCK             CURRENT TRAILER INFO.
         SLL   GR1,1                   UPDATE AND
         ST    GR1,CREELCK                STORE TRAILER INFO.
         BAL   GR2,TRAILER             GO TO WRITE TRAILER RECORD.
         BAL   GR4,YESEOV              GO TO EXECUTE EOV.
UPCCHH5  OC    CCOPYPTR(4),CCOPYPTR    MORE COPIES.
         BC    8,UPCCHH6               NO--GO TO RETURN.
         L     GR8,CCOPYPTR            POINTER TO NEXT COPY.
         B     UPCCHH4                 GO TO PROCESS THIS COPY.
UPCCHH6  LA    GR9,BLOCKS              PRIMARY I/O BLOCK.
         BR    GR14                    RETURN TO CALLER.
         DROP  2,8
         EJECT
FINIS    CLI   DEVSW,X'FF'             DUMPING TO DIRECT ACCESS.
         BE    FINALR2                 YES--GO TO ENDING THIS    M4513
*                                       FUNCTION                 M4513
FINISA   CLI   DEVSW,X'F0'             DUMPING TO SYSOUT.
         BNE   FINISAA                 NO--MUST BE TO TAPE.
         DELETE EP=IEHDAOUT            DELETE THE LOAD MODULE.
         DELETE EP=IEHDPRNT
         B     FINALR2                 GO TO RETURN TO IEHDDUMP.
FINISAA  L     GR1,REELCK              CURRENT TRAILER RECORD INFO.
         SLL   GR1,1                   UPDATE AND STORE
         LCR   GR1,GR1                 TRAILER INFORMATION
         BAL   GR2,TRAILER             GO WRITE THE TRAILER RECORD.
         OC    COPYPTR(4),COPYPTR      ARE THERE COPIES.
         BZ    FINALR2                 NO--GO TO RETURN TO IEHDDUMP.
         L     GR3,COPYPTR             ADDRESS FIRST OR ONLY COPY.
         USING COPYBLK,3
CFINISA  LA    GR9,CIOBLOCK            ADDRESSING FOR THIS COPY BLK.
         L     GR1,CREELCK             TRAILER RECORD INFORMATION.
         SLL   GR1,1                   UPDATE AND
         LCR   GR1,GR1                 SAVE THIS
         BAL   GR2,TRAILER             GO TO WRITE TRAILER RECORD.
         OC    CCOPYPTR(4),CCOPYPTR    MORE COPIES.
         BZ    FINALR2                 NO--GO TO RETURN TO IEHDDUMP.
         L     GR3,CCOPYPTR            PTR. TO NEXT COPY.
         B     CFINISA                 GO TO PROCESS.
         DROP  3
         EJECT
***********************************************************************
*                                                                     *
*  THIS ROUTINE WILL RECEIVE CONTROL UPON DETECTION OF AN I/O ERROR.  *
*  SYNADAF(SVC 68) AND ITS ASSOCIATED MACROS WILL BE USED TO          *
*  DETERMINE THE ERROR CONDITION.                                     *
*                                                                     *
***********************************************************************
         SPACE
IOERR    STM   0,15,SAVERR             SAVE REGISTERS              O122
         LA    GR3,OUTIOB              ADDRESS OF FROM IOB         O122
         CLI   DEVSW,X'F0'             DUMPING TO SYSOUT           O122
         BNE   CANTCONT                NO                          O122
         TM    OUTSTAT+4,X'02'         UNIT CHECK                  O122
         BNO   CANTCONT                NO                          O122
         TM    OUTSENSE,X'08'          DATA CHECK                  O122
         BO    RECOVER                 YES                         O122
         L     GR4,FUCBPTR             LOAD FROM UCB ADR.      @ZA04427
         TM    19(GR4),X08             2314?                   @ZA04427
         BNO   CANTCONT                NO THEN BRANCH          @ZA04427
         TM    OUTSENSE+1,X'02'        MISSING ADDRESS MARKER      O122
         BNO   CANTCONT                NO                          O122
*        SET UP PARAMETERS FOR IEHDRCVR                            O122
RECOVER  LM    GR4,GR5,DAOUTADR        ADDR OF IEHDAOUT & IEHDPRNT O122
         LA    GR6,OUTIOB              ADDRESS OF IOB              O122
*              REGISTERS 10 AND 12 ALREADY CONTAIN ADDRESSES OF    O122
*              IEHDBLKS AND IEHDWORK                               O122
         LINK  EP=IEHDRCVR             TRY RECOVER FROM I/O ERROR  O122
         LTR   GR15,GR15               IS RETURN CODE ZERO         O122
         BNZ   TESTRETN                NO, TEST FOR FOUR           O122
         LM    0,15,SAVERR             YES, RESTORE REGISTERS      O122
         B     PROC4                   RETURN TO PROCESS TRACK  SA67332
TESTRETN SRL   GR15,3                                              O122
         LTR   GR15,GR15               IS RETURN CODE FOUR         O122
         BZ    PROC4                   YES, GO PROCESS NEXT TRACK  O122
         B     FINALR3                 NO, TERMINATE THE FUNCTION  O122
SAVERR   DS    16F                     REGISTER SAVE AREA          O122
         EJECT                                                     O122
IOTERROR LA    GR9,4(GR9)             ADD TO POINT TO IOB      @ZA01201
         ST    GR9,IOBPTR              SAVE ACTIVE IOB ADR     @ZA01201
IOTERR   L     GR3,IOBPTR              LOAD ACTIVE IOB ADR     @ZA01201
CANTCONT LA    GR1,13                  I/O ERROR MESSAGE           O122
         BAL   GR4,SETUPMSG            GO TO SET UP THIS MSG.
         LR    GR1,GR3                 RESTORE POINTER TO IOB.
         SYNADAF ACSMETH=EXCP,PARM1=(1)
         MVC   MESS+22(78),49(GR1)     SYNADAF MSG TO BUFFER.    SM4350
         SYNADRLS
ISUMSG   EQU   *                                                SA53223
         BAL   GR4,MSGWRT              GO TO PRINT THIS MESSAGE.
         LA    GR15,8                  SET UP RETURN CODE.
         B     FINALR3                 RETURN.
         EJECT
SETUPMSG LINK  EP=IEHDMSGB             MOVE MESSAGE TO BUFFER.
         BR    GR4                     RETURN TO CALLER.
         SPACE
MSGWRT   LINK  EP=IEHDPRNT             PRINT THIS MESSAGE.
         BR    GR4                     RETURN TO CALLER.
         SPACE
*
*  RETURN TO IEHDDUMP HERE.
*
         SPACE
FINALR2  LA    GR15,0                  SET RETURN CODE.
FINALR3  L    GR3,PTRCFUNC             SLOT FOR CURRENT FUNCTION.
         MVI   0(GR3),COMPLETE         INDICATE IT IS COMPLETE.
FINAL3   MVI   RDVTOC,X'00'            CLEAR SW                @ZA06532
         L     GR13,4(GR13)            RESTORE REGISTER 13     @ZA06532
         RETURN (14,12),T,RC=(15)      RESTORE/RETURN WITH PROPER CODE.
         EJECT
         DS    0H
SIXTEEN  DC    H'16'
WRTAPE    EQU   X'01'                   WRITE TAPE OP-CODE     NUFORMAT
TAPMK    EQU   X'80'                                             A21395
GOOD     EQU   X'7F'
DC       EQU   X'08'                   USED FOR DATA CHECKING TEST.3651
CCH      EQU   X'40'                   USED TO CHECK COMMAND CHAIN.3651
D8       EQU   8                   DISP OF 8                     S20201
D0       EQU   0                        DISPLACEMENT OF ZERO    SA53223
L8       EQU   8                        LENGTH CONSTANT         SA53223
RDCNTVAL EQU   X'00'                    CAUSES IEHDDOIO TO BRCH SA53223
*                                       TO A LABEL: RDCNTS.     SA53223
WRTHARO  EQU   X'04'                    CAUSES IEHDDOIO TO BRCH SA53223
*                                       TO A LABEL: WRTHAR0.    SA53223
X08      EQU   X'08'                   HEX CONSTANT.             S20201
RPSFEAT1 EQU   X'04'               RPS ON FROMDD                 S20201
TICCODE  EQU   X'08'               TIC CCW OP                    S20201
RPSFEAT  EQU   X'40'               RPS ON TODD                   S20201
D1       EQU   1                   DISP OF 1                     S20201
D3       EQU   3                        DISPL. OF 3             Y02113
D4       EQU   4                        DISPL. OF 4
D38      EQU   38                       DISPL. OF 38
D58      EQU   58                       DISPL. OF 58
D84      EQU   84                       DISPL. OF 84
D140     EQU   140                      DISPL. OF 140
R1       EQU   1                        RECORD NO OF FMT 4
R2       EQU   2                        RECORD NO OF FMT 5
CONTAM   EQU   X'80'                    CONAMINATION BIT
VTOCERR  EQU   X'40'                    DADSM ERROR BIT
L4       EQU   4                        LENGTH OF 4             Y02113
TIMECHK  EQU   X'01'                    MEANS TIMESTAMP SAVED   Y02113
CLOCK    EQU   92                       DISPL INTO BUFFER FOR   Y02113
*                                       TIMESTAMP.              Y02113
*                                       INTO BUFFER             Y02113
AREA     DS    1F                      SAVE AREA FOR CCW LENGTH.  0811
LABEL1   DC    C'MAINTENANCE'           LABEL OF MAINT. AREA    SA53223
         DC    100F'0'
LABEL2   DC    C'AREA'                  END OF MAINT. AREA      SA53223
         DS    0D                                                A37209
RDVOLBUF DS    CL92                     VOLID BUFFER             A37209
SRKEY    DC    X'0000000003'            RECORD THREE SEARCH      A37209
*                                       ARGUMENT                 A37209
         DS    0H                      HALF WORD ALIGHNMENT      A51474
ZERO     DC    6X'0'                   TWO BYTES OF ZEROS WILL   A51474
*                                      ALSO BE USED FROM THE     A51474
*                                      FOLLOWING CONSTANT.       A51474
SCC2321  DC    X'00F60000'             INCREMENT TO NEXT SUBCELL.
STC2321  DC    X'0000FB00'             INCREMENT TO NEXT STRIP.
F1       DC    F'1'
         DS    0F                                                S20201
DAOUTADR DS    1F                      IEHDAOUT ENTRY POINT SAVE AREA.
PRNTADR  DS    1F                      IEHDPRNT ENTRY POINT SAVE AREA.
TAPECCW5 CCW   1,0,X'20',24            WRITE TRAILER RECORD.   NUFORMAT
         SPACE
SEARIDEQ CCW   X'31',0,X'60',5         SEARCH ID EQUAL ON R0
         CCW   8,SEARIDEQ,X'60',5      TIC BACK.
         CCW   6,0,X'60',8             READ R0 DATA.
         CCW   X'9E',0,X'60',X'4000'   READ CKD R1               4074
*                                      WITH MAXIMUM COUNT
DUMMYCCW CCW   X'92',0,X'60',8         DUMMY READ COUNT CCW.
DMMYRCCW CCW   X'1E',0,X'60',0         DUMMY READ COUNT/KEY/DATA CCW
         SPACE 1
READVTOC CCW   X'31',0,X'60',5         SEARCH ON RECORD 1 OF VTOC.
         CCW   8,READVTOC,0,0          REPEAT UNTIL FOUND.
RDVDATA  CCW   6,0,X'20',140           READ FORMAT 4 DSCB.
*        CHANNEL PROGRAMS FOR SAVING OLD VOLID
SRCHKEYR CCW   X'31',SRKEY,X'60',5      SEARCH ID EQUAL          A37209
         CCW   8,SRCHKEYR,0,0                                    A37209
         CCW   X'06',RDVOLBUF,X'20',92  READ IN VOLID            A37209
SRCHKEYW CCW   X'31',SRKEY,X'60',5      SEARCH ID EQUAL          A37209
         CCW   8,SRCHKEYW,0,0                                    A37209
         CCW   X'05',RDVOLBUF,X'20',92  WRITE OUT ORIGINAL VOLID A37209
TOTAL    DS    F'0'                                              A51474
EXCPSAVE DS    18F                      SAVE AREA                A37209
F5DSCB   CAMLST SEEK,F5CCHHR,FRVOL,44  OBTAIN OF F5 DSCB       @ZA01677
*                                      44 IS USED AS A ADR     @ZA01677
*                                      OVERWRITTEN AT OBTF5    @ZA01677
F5CCHHR  DC    5X'0'                   CCHHR OF F5 DSCB        @ZA01677
FRVOL    DC    6X'0'                   VOLSER OF FROM          @ZA01677
         DS    0D                                              @ZA01677
DOUBLE   DC    8X'0'                   CONVERT AREA            @ZA01677
FOUR     DC    F'4'                                            @ZA01677
EIGHT    DC    F'8'                                            @ZA01677
COND     DC    C'COND='                                        @ZA01677
BADCOND  DS    X'00'                                           @ZA01677
         SPACE
* THIS IS USED TO WRITE HA, R0, R1 ONLY.
R0CCWS   DSECT
*   USED WHEN MODIFYING HA, R0 CCWS FOR EXECUTION.
SEARCHR0 DS    2F
TICBACK  DS    2F
WRITER0  DS    2F
SEARCH1  DS    2F
TICAGAIN DS    2F
READR0   DS    2F
ERASEALL DS    2F
READREC0 DS    2F
         SPACE
CCWS     DSECT
SEIDEQR0 DS    CL8
TICBACKA DS    CL8
RDWRDATA DS    CL8
RDWRTCKD DS    CL8
RDWRTCNT DS    CL8
         SPACE
F5BUF    DSECT                         F5 DSCB                 @ZA01677
         DS    CL84                    WORK AREA               @ZA01677
DS5KEYID DS    CL4                     05050505                @ZA01677
DS5AVEX1 DS    CL5                     FIRST AVE EXTENT        @ZA01677
DS5AVEX2 DS    CL35                    7 MORE AVE EXTENT       @ZA01677
DS5FMTID DS    CL1                     FORMAT 5 ID(F5)         @ZA01677
DS5AVEX3 DS    CL90                    18 MORE AVE EXTENT      @ZA01677
DS5PTRDS DS    CL5                     PTR TO NXT F5 DSCB      @ZA01677
         EJECT
         IEHDWORK
         EJECT
IOBLOCKS DSECT
* DUMP 'TO' ECB.
TOECB    DS    1F                      WAIT//COMPLETE BITS PLUS CODE.
* DUMP 'TO' IOB.
TOIOB    DS    0F
TOFLGS   DS    CL2                     FLAGS ONE AND TWO.
TOSENSE  DS    CL2                     SENSE BYTES.
TOECBAD  DS    1F                      ECB ADDRESS.
TOSTATUS DS    2F                      CHANNEL STATUS.
TOCCWAD  DS    1F                      CCW LIST ADDRESS.
TODCBAD  DS    1F                      DCB ADDRESS.
TORESAD  DS    1F                      RESTART ADDRESS.
TOBLKCNT DS    CL2                     BLOCK COUNT INCREMENT.
TOERROR  DS    CL2                     ERROR COUNT.
TOSEEK   DS    2F                      MBBCCHHR.
* DUMP 'TO' DCB.
TODCB    DS    13F                     DCB.
         DS    0D                      FOR DOUBLE WORD ALIGNMENT.
TAPECCW2 DS    1D                      USED TO PUT OUT CCW RECORD
*                                        AND DATA ON TAPE.
TAPECCW3 DS    2D                      WRITE HA,R0 CCWS ON TAPE.
TAPECCW4 DS    2D                      WRITE HA,R0,R1 CCWS ON TAPE.
         DS    0D                      FOR DOUBLE WORD ALIGNMENT.
* DUMP 'FROM' ECB.
OUTECB   DS    1F                      WAIT//COMPLETE BITS PLUS CODE.
* DUMP 'FROM' IOB.
OUTIOB   DS    0F
OUTFLG   DS    CL2                     FLAGS ONE AND TWO.
OUTSENSE DS    CL2                     SENSE BYTES.
OUTECBAD DS    1F                      ECB ADDRESS.
OUTSTAT  DS    2F                      CHANNEL STATUS.
OUTCCWAD DS    1F                      CCW LIST ADDRESS.
OUTDCBAD DS    1F                      DCB ADDRESS.
OUTRESAD DS    1F                      RESTART ADDRESS.
OUTBLKCT DS    CL2                     BLOCK COUNT INCREMENT.
OUTERROR DS    CL2                     ERROR COUNT.
OUTSEEK  DS    2F                      7BBCCHHR.
CCHH     EQU   OUTSEEK+3               CYLINDER/HEAD ADDRESS.
R        EQU   OUTSEEK+7               RECORD NUMBER.
* DUMP 'FROM' DCB.
OUTDCB   DS    18F                     DCB.
         SPACE
IOBLKEND DS    0H                      END OF IOBLOCKS DSECT.
DBSIZE   EQU   IOBLKEND-IOBLOCKS       SIZE OF IOBLOCKS DSECT.
         EJECT
         SPACE 1
         IEHDBLKS
         EJECT
         SPACE 2
         SPACE
RBUFFER  DSECT
ZERO1    DS    CL8                     WILL CONTAIN 8 BYTES OF ZEROS.
CCWBUFF  EQU   ZERO1
TICSW    DS    CL1                     'FF' INDICATES PREVIOUS CCW=TIC.
         DS    CL3                     NOT USED.
ADDRESS  DS    CL4                     TEMPORARY ADDRESS HOLDER.
SEEKCCW  DS    CL8                     SEEK CCW FOR STAND-ALONE.
SETMASK  DS    CL8                     SET FILE MASK FOR STAND-ALONE.
SEARIDE  DS    CL8                     SEARCH EQUAL ID CCW.
         EJECT
CVT      DSECT
         CVT   SYS=MIN
         EJECT
UCB      DSECT
         IEFUCBOB
         EJECT
JFCB     DSECT
         IEFJFCBN
         EJECT
         DCBD  DSORG=PS
         END
