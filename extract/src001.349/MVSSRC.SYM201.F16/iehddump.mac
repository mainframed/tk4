         COPY  LCGASMSW
IEHDDUMP CSECT
***********************************************************************
*                  FIXES THIS MODULE
*                     LATEST FIRST
***********************************************************************
*
*D 820919                           @XA16072=@YA18844=@ZA24409=@SA79773
*C 106800                           @XA16072=@YA18844=@ZA24409=@SA79773
*
*C 106800                                    @ZA16457=@XA16080=@YA15372
*A 262400,327200,556700                      @ZA16457=@XA16080=@YA15372
*
*A 357000-357600,717300-718500,822900         SU32             @G32DSPD
*
*C 107100,841500                             @XA12918=@YA13328=@ZA10935
*A 106700-106800                             @XA12918=@YA13328=@ZA10935
*
*                                    ADD 3350 DEVICE SUPPORT.  @Z30RSAG
*        RELEASE 21 DELETIONS                                         *
*584100-590400,593100-599400                  SA65560 = OX2864 = OY2654
*600300,843000,843600
*1244                                                            X02114
*462355,462359                                                   M0980
*1244462358                                                      A44482
*1244                                                            A42497
*        RELEASE 20 DELETIONS                                         *
*0910672300-674100                                               M4826
*0910844600                                                      M5900
*0910503100,504900,506700-507600                                 M5598
*0910462218-462274                                               A37209
*0910                                                            A33180
*0910902700                                                      A31384
*0910461700,464400                                               A34026
*0910158400,165600,354600,461735,461798,461994-462001,676800,    S20201
*0910593700-594000                                               A38120
*                                                                M0025
*0910678600,828900,829800,883800                                 S20201
*0910593400                                                      S20201
*0910233100-235800                                               M4998
*        RELEASE 19 DELETIONS
*2064593800                                                      A30268
*2064593230-593260                                               A29172
*2064                                                            M4513
*        RELEASE 18 DELETIONS
*3431594000-596700                                               1326
*3431584100-585000                                               2320
*3431287100-288000,592200,843300-844200                          2319
*STATUS CHANGE LEVEL 004
*                                                                     *
***********************************************************************
          EJECT
*FUNCTION/OPERATION- THIS ROUTINE IN CONJUNCTION WITH THE -IEHDEXCP-  *
*   AND -IEHDAOUT- ROUTINES HANDLES THE DUMP FUNCTION OF THE          *
*   IEHDASDR UTILITY PROGRAM. RESPONSIBILITY IS DIVIDED AS            *
*   FOLLOWS:                                                          *
*        IEHDDUMP- WILL PREPARE ALL INVOLVED DEVICES FOR PROCESSING   *
*                  AND OBTAIN CORE FOR THE BUFFER. UPON COMPLETION    *
*                  OF THE DUMP FUNCTION,WILL PERFORM HOUSEKEEPING     *
*                  FOR ALL INVOLVED DEVICES AND RELEASE THE BUFFER.   *
*                  CONTROL WILL THEN BE RETURNED TO THE MONITOR.      *
*        IEHDEXCP- WILL PERFORM ALL I/O OPERATIONS, PASSING CONTROL   *
*                  TO -IEHDAOUT- WHEN DUMPING TO A SYSTEM OUTPUT      *
*                  DEVICE. CONTROL WILL BE RETURNED TO -IEHDDUMP-     *
*                  UPON COMPLETION OF I/O PROCESSING.                 *
*        IEHDAOUT- WILL FORMAT AND DUMP ONE TRACK AT A TIME TO A      *
*                  SYSTEM OUTPUT DEVICE. CONTROL WILL BE RETURNED TO  *
*                  -IEHDEXCP-.                                        *
*                                                                     *
*   DUMP CONSISTS OF COPYING(DUMPING) DATA FROM ONE DIRECT ACCESS     *
*   DEVICE TO ONE OR MORE LIKE DIRECT ACCESS DEVICES, TO ONE OR MORE  *
*   TAPES, OR TO A SYSTEM OUTPUT DEVICE. ANY TAPES THUS CREATED CAN   *
*   THEN BE PROCESSED BY EITHER THE -IEHDASDR- UTILITY PROGRAM OR     *
*   THE STAND-ALONE DUMP/RESTORE PROGRAM(IBCDMPRS).                   *
*                                                                     *
*   THE -IEHDDUMP- ROUTINE LOCATES THE DEVICES BY USING THE DDNAMES   *
*   PASSED TO IT IN THE FUNCTION BLOCK. THIS ALLOWS THE ROUTINES TO   *
*   CONCURRENTLY PROCESS DUMP FUNCTIONS, AS EACH FUNCTION HAS         *
*   ASSOCIATED WITH ITS OWN I/O CONTROL BLOCKS. OPEN ON ALL DA        *
*   DEVICES IS DONE BY MEANS OF AN OPEN, TYPE=J ON THE FORMAT FOUR    *
*   DSCB.                                                             *
*                                                                     *
*   THE DATA ON THE DIRECT ACCESS DEVICE TO BE DUMPED(COPIED)         *
*   WILL BE READ IN ONE TRACK AT A TIME. ONLY THAT DATA               *
*   RESIDING ON TRACKS OWNED WILL BE COPIED. DATA OWNERSHIP           *
*   IS DETERMININED BY INTERROGATING THE FORMAT FIVE DSCB. WHEN       *
*   DUMPING DATA TO A SYSTEM OUTPUT DEVICE, THE ENTIRE RANGE OF       *
*   SPECIFIED TRACKS, OWNED AND UNOWNED, WILL BE DUMPED.              *
*                                                                     *
*ENTRY POINTS- THE ONLY ENTRY POINT IS -IEHDDUMP-, AND CONTROL        *
*   IS ALWAYS RECEIVED FROM THE MONITOR ROUTINE(IEHDASDS).            *
*                                                                     *
*INPUT- POINTERS TO A WORKAREA(REGISTER 12) AND TO A CONTROL          *
*   BLOCK(REGISTER 10).                                               *
*                                                                     *
*EXITS-NORMAL- A SUCCESSFUL DUMP OPERATION RESULTS IN A RETURN        *
*   TO THE MONITOR(IEHDASDS) WITH A RETURN CODE OF ZERO. A DUMP       *
*   COMPLETE MESSAGE IS ALSO PLACED IN THE MESSAGE DATA SET.          *
*                                                                     *
*EXITS-ERROR-  ANY ERROR ENCOUNTERED IS DESCRIBED BY AN APPROP-       *
*   IATE MESSAGE TO THE MESSAGE DATA SET. A RETURN CODE GREATER       *
*   THAN ZERO WILL ALSO BE PASSED TO THE MONITOR(IEHDASDS).           *
*                                                                     *
*                                                                     *
*EXTERNAL ROUTINES-  THIS ROUTINE IS ALWAYS ENTERED FROM THE          *
*   MONITOR ROUTINE(IEHDASDS). FOUR OTHER CSECTS ARE USED BY THIS     *
*   ROUTINE. ANY MESSAGES ISSUED WILL BE WRITTEN OUT BY THE MESSAGE   *
*   WRITER ROUTINE(IEHDPRNT) AFTER BEING SET UP BY THE MESSAGE        *
*   ROUTINE(IEHDMSGB). ALL CHECKING FOR DATA SET EXPIRATION DATES     *
*   AND PASSWORD PROTECTED DATA SETS IS DONE BY IEHDPASS.             *
*   THE OTHER CSECT USED BY THIS ROUTINE IS IEHDCONS WHICH            *
*   CONTAINS ALL OF THE DEVICE DEPENDENT CONSTANTS.                   *
*                                                                     *
*TABLES/WORK AREAS-  UPON ENTRY, REGISTERS 10 AND 12 POINT TO A       *
*   FUNCTION BLOCK AND WORK AREA RESPECTIVELY. THEY ARE DESCRIBED     *
*   IN THE DSECTS CALLED -FUNCBLK- AND -WORK-.                        *
*   THIS ROUTINE MUST ALSO SECURE ONE BUFFER FOR READING IN           *
*   DATA AND CREATION OF THE NECESSARY CCW LISTS AND/OR RECORDS.      *
*   THE BUFFER IS BROKEN DOWN INTO THE FOLLOWING AREAS-               *
*        CCWBUFPT-CREATION AND SET-UP OF THE RD CNT CCWS(M/T) OR      *
*        THE RD CKD CCWS.                                             *
*        WRTBUFPT-CREATION AND SET-UP OF THE WRT/RD CKD CCWS          *
*        (EXECUTED FOR DA OUTPUT OR WRITTEN AS A CCW RECORD FOR       *
*        TAPE OUTPUT).                                                *
*        CNTBUFPT-THE COUNTS FOR A PARTICULAR TRACK WILL BE           *
*        READ INTO THIS AREA.                                         *
*        DATBUFPT-THE DATA FOR A PARTICULAR TRACK WILL BE             *
*        READ INTO THIS AREA.                                         *
*        FORM5FPT-A TABLE OF THE UNOWNED EXTENTS FOR THE -FROM-       *
*        DA DEVICE.                                                   *
*                                                                     *
*   IF COPIES ARE BEING MADE, THERE WILL ALSO                         *
*   BE ONE OR MORE COPY BLOCKS CHAINED FROM THE FUNCTION BLOCK. SEE   *
*   THE -COPYBLK- DSECT FOR A DESCRIPTION.                            *
*                                                                     *
*ATTRIBUTES- SERIALLY REUSABLE, RELOCATABLE, NON-PRIVILEGED.          *
*                                                                     *
 TITLE 'IEHDDUMP-ENTRY POINT IEHDDUMP-IEHDASDR SYSTEM UTILITY PROGRAM'
***********************************************************************
*   THE FOLLOWING ARE REGISTER ASSIGNMENTS.
***********************************************************************
GR0      EQU   0
GR1      EQU   1
GR2      EQU   2
GR3      EQU   3
GR4      EQU   4
GR5      EQU   5
GR6      EQU   6
GR7      EQU   7
GR8      EQU   8
GR9      EQU   9
GR10     EQU   10
GR11     EQU   11
GR12     EQU   12
GR13     EQU   13
GR14     EQU   14
GR15     EQU   15
RCVT     EQU   9
UCBPTR   EQU   9
BASEREG  EQU   11
WORKBASE EQU   12
***********************************************************************
         EJECT
         USING FUNCBLK,10
         USING IEHDDUMP,BASEREG
         USING WORK,12
         SPACE 1
         SAVE  (14,12),T,*             SAVE THE REGISTERS.
         LR    BASEREG,GR15            LOAD THE BASE REGISTER.
         B     APARNO                  BRANCH AROUND APAR NO   @ZA10935
         DC    C'OZ24409'              LAST APAR THIS MODULE   @ZA24409
APARNO   LA    GR7,DUMPSAVE            SAVE AREA ADDRESS       @ZA10935
         ST    GR7,8(GR13)             ADDRESS OF NEW AREA TO OLD.
         ST    GR13,4(GR7)             ADDRESS OF OLD AREA TO NEW.
         LR    GR13,GR7                SAVE AREA FOR CALLED ROUTINES.
         L     GR3,PTRCFUNC            POINTER TO CURRENT FUNCTION.
         TM    0(GR3),PROCESS          PREVIOUSLY UNDER WAY.
         BZ    START2                  NO--START FROM THE BEGINNING.
         B     CALLEXCP                RETURN TO EXECUTING MODULE.
         EJECT
***********************************************************************
*                                                                     *
*   DETERMINE DIRECT DEVICE TYPE AND SET UP POINTER TO THE            *
*     PROPER DEVICE CONSTANTS FOR THIS DEVICE.                        *
*                                                                     *
***********************************************************************
         SPACE 1
         SPACE
START2   L     GR8,FUCBPTR             UCB POINTER FOR 'FROM' DEVICE.
         CLI   IODEVCON,X'00'           HAVE WE ALREADY FIGURED  A42497
*                                       ADDRES                   A42497
         BNE   START4                   YES - DON'T RE-FIGURE    A42497
         USING UCB,8
         TM    UCBTBYT3,UCB3DACC       IS THIS A DIRECT ACCESS DEVICE.
         BZ    BADPARM                 NO--MUST BE BAD PARAMETER.
START3   SR    GR3,GR3                 CLEAR WORK REGISTER.
         AIF   ('&LIB' EQ 'LIB1').NOWIN BRCH IF OS ASSEM        XL03130
         CLI   UCBTBYT4,WINCH           WINCHESTER DEVICE ?     XL03130
         BNE   NOWIN                    NO, BRCH                XL03130
         IC    GR3,IDEVMOD              PICKUP WINCH MODEL NO.  XL03130
         B     YESWIN                   BRCH AROUND OS CODE     XL03130
NOWIN    EQU   *                                                XL03130
.NOWIN   ANOP                                                   XL03130
         IC    GR3,UCBTBYT4            UCB DEVICE TYPE CODE.
YESWIN   EQU   *                                                XL03130
         LA    GR5,KDEVSIZE            SIZE OF EACH DEVICE ENTRY.
         BCTR  GR3,0                   DECREMENT FOR INDEX.
         MR    GR4,GR3                 ENTRY SIZE TIMES INDEX VALUE.
         L     GR4,IODEVCON            BEGIN ADDRESS OF DEVICE CONSTANT
         AR    GR4,GR5                 ADDRESS OF CONSTANTS THIS DEVICE
         ST    GR4,IODEVCON            SAVE IN FUNCTION BLOCK.
         MVC   IODEVCON(1),UCBTBYT4     UCB DEVICE TYPE CODE.
         TM    UCBTBYT2,RPS            RPS FEATURE ON FROMDD.    S20201
         BZ    START4                  NO-BRANCH.                S20201
         OI    SEQSW,FEATURE1          YES-SET RPS SWITCH.       S20201
         B     START4                  GO TO GET CORE FOR BUFFERS.
         DROP  8
         SPACE
         EJECT
***********************************************************************
*                                                                     *
*   THIS SECTION ATTEMPTS TO OBTAIN CORE FOR ONE BUFFER TO BE USED    *
*     FOR CCW PROCESSING AND DATA READ IN FROM THE DIRECT ACCESS      *
*     DEVICE. IF NO BUFFER IS OBTAINED, THE 'NOCORE' SWITCH IS SET    *
*     FOR THIS FUNCTION.                                              *
*                                                                     *
***********************************************************************
         USING CONSTANT,GR9
START4   L     GR9,IODEVCON            ADDRESSING FOR DEVICE CONSTANTS.
         LH    GR2,BUFFSIZE            SIZE PER BUFFER/THIS DEVICE.
         LA    GR3,RPSBUFPT            SAVE ADDRESS OF BUFFER    S20201
*                                       HERE.                    S20201
         GETMAIN EC,LV=(2),A=(3)       GET CORE FOR BUFFER.
         LTR   GR15,GR15               WAS CORE AVAILABLE.
         BZ    BUFFOK                  YES--GO TO SET UP BUFFER PTRS.
         L     GR3,PTRCFUNC            NO--POINTER TO CURRENT FUNCTION.
         OI    0(GR3),WAITING+NOCORE   INDICATE NO CORE AVAILABLE.
         LA    GR15,4                  SET UP RETURN CODE.
         B     FINAL3                  RETURN TO MONITOR.
BUFFOK   EQU   *                                                 S20201
         L     GR3,RPSBUFPT            ADDRESS OF DUMP BUFFER.   S20201
         LA    GR3,D16(GR3)            INCREMENT TO POINT TO     S20201
         ST    GR3,CCWBUFPT              CCW BUFFER.             S20201
         AH    GR3,RCCWSIZE            ADD SIZE OF CCW BUFFER.
         ST    GR3,WRTBUFPT            SAVE POINTER TO WRTCCWS.
         AH    GR3,WRTSIZE             ADD SIZE OF WRT-RD CKD CCWS.
         ST    GR3,CNTBUFPT            SAVE POINTER TO COUNT BUFFER.
         AH    GR3,CNTSIZE             ADD SIZE OF COUNT BUFFER.
         ST    GR3,DATBUFPT            SAVE POINTER TO DATA BUFFER.
         AH    GR3,DATASIZE            ADD SIZE OF DATA BUFFER.
         ST    GR3,FORM5FPT            SAVE POINTER TO FORMAT 5 AREA.
CLEAR    L     GR1,DATBUFPT            BEGINNING OF DATA BUFFER.
         LH    GR3,DATASIZE            LENGTH OF DATA BUFFER.
         LA    GR2,255                 SET LENGTH FOR EXEC.
         MVI   0(GR1),C' '             PRIME FIRST BYTE FOR EXEC.
EXEC     CR    GR3,GR2                 THIS THE LAST MOVE.
         BNH   LASTEXEC                YES--DO ONE MORE MOVE.
         EX    GR2,MOVE                MOVE 256 BYTES.
         LA    GR1,256(GR1)            INCREMENT DATA BUFF POINTER.
         SH    GR3,TWO56               UPDATE BYTE COUNT.
         B     EXEC                    RETURN TO CHECK POINT.
LASTEXEC EX    GR3,MOVE                CLEAR REMAINING PORTION.
         DROP  9
         EJECT
***********************************************************************
*                                                                     *
*   THIS SECTION WILL SET UP THE 'FROM' DA IOBLOCKS (ECB,IOB,DCB)     *
*   IN THE FUNCTION BLOCK. THE DEB FIELDS WILL ALSO BE FILLED IN.     *
*   THE 'TO' DEVICE TYPE WILL BE DETERMINED AND THE CORRESPONDING     *
*     IOBLOCKS MOVED INTO THE FUNCTION BLOCK.                         *
*                                                                     *
***********************************************************************
         SPACE 2
         USING IOBLOCKS,9
SETUPBLK LA    GR9,BLOCKS              ADDRESSING FOR PRIMARY I/O BLKS.
         MVC   OUTECB(WBLKSIZE),WRTECB   SET UP 'FROM' DA I/O BLOCKS.
         LA    GR3,OUTECB              GET ADDRESS OF ECB.
         ST    GR3,OUTECBAD            SAVE ECB ADDRESS IN IOB.
         LA    GR3,OUTDCB              GET DCB ADDRESS.
         ST    GR3,OUTDCBAD            SAVE DCB ADDRESS IN IOB.
         USING IHADCB,GR3
         MVC   DCBDDNAM(8),DDNAME1     MOVE DDNAME TO DCB.
         ST    GR10,DCBIOBAD           FUNCTION BLOCK ADDRESS TO DCB.
         MVC   OPENLD+1(3),OUTDCBAD+1  DA DCB NAME TO OPEN LIST.
         SPACE
         BAL   GR14,OPENJ              GO TO OPEN 'FROM' DA DEVICE.
         L     GR3,FUCBPTR             UCB PTR. FOR 'FROM' DEVICE.
         USING UCB,3
         CLI   UCBID,X'FF'             IS THIS A SUB UCB(2321).
         BE    SETUP                   NO--FORGET ABOUT BIN NUMBER.
         MVC   OUTSEEK+1(2),0(GR3)     BIN NUMBER.
         DROP  3
         SPACE
         USING CONSTANT,9              ADDRESSING FOR DEVICE CONSTANT
SETUP    L     GR9,IODEVCON            ADDRESSING FOR DEVICE CONSTANTS.
         MVI   DUMPSW,X'F0'            SET SWITCH TO INDICATE FULL DUMP
         MVC   CCHHONE(4),CCHHBEG      LOWER LIMIT TO 1ST TRK DUMPED.
         TM    SEQSW,BEGIN             IS BEGINNING TRACK SPECIFIED.
         BZ    TESTEND                 NO--CHECK IF END ADDR SPECIFIED.
         MVI   DUMPSW,X'00'            SET SWITCH FOR PARTIAL DUMP.
         MVC   DUMPWORK(4),CCHHBEG     MOVE IN LOWER LIMIT.
         BAL   GR14,TRKVALID           GO CHECK FOR VALID LIMIT.
TESTEND  TM    SEQSW,END               IS ENDING TRACK SPECIFIED.
         BZ    FULLDUMP                NO--SET TO END OF PRIMARY TRKS.
         MVI   DUMPSW,X'00'            SET SWITCH FOR PARTIAL DUMP.
         MVC   DUMPWORK(4),CCHHEND     YES--MOVE IN UPPER LIMIT.
         BAL   GR14,TRKVALID           GO CHECK IF VALID LIMIT.
         CLC   CCHHBEG(4),CCHHEND      BEGIN ADDR HIGHER THAN END.
         BH    INVALTRK                YES--GO TO WRITE ERROR MSG.
         B     UPDATE                  GO TO UPDATE LAST TRK SPECIFIED.
FULLDUMP MVC   CCHHEND(4),LASTORIG     FULL DUMP-MOVE IN LAST PRIMARY.
UPDATE   BAL   GR14,UPCCHH             GO TO ADD ONE TO UPPER LIMIT
         DROP  9
         USING UCB,8
         USING IOBLOCKS,9
TESTTODD L     GR8,TUCBPTR             UCB PTR. FOR 'TO' DEVICE.
         LA    GR9,BLOCKS              PRIMARY I/O BLOCKS.
         CLC   SYSOUTDD(8),DDNAME2      IS IT SYSOUT             M4998
         BE    SETSW1                   YES - CHECK FOR COPIES   M4998
         CLI   UCBID,X'FF'              2321                     M4998
         BNE   SETUPDA                  YES - GO SET UP          M4998
         B     TESTTO                   CHECK IF TAPE            M4998
SETSW1   EQU   *                                                 M4998
         OC    COPYPTR(4),COPYPTR      YES--WERE COPIES REQUESTED.
         BZ    SETSW                   NO--GO SET SWITCHES.
         L     GR3,COPYPTR             YES--SET PTR TO DDNAME3.
         B     COPYERR1                GO PRINT MSG, TERMINATE.
SETSW    OI    DEVSW,X'F0'             SET SWITCHES TO INDICATE
         OI    SWITCH,DUMPALL            DUMPING TO SYSOUT.
         B     LINKPASS                GO CHK FOR PASSWORD DATASETS.
TESTTO   TM    UCBTBYT3,UCB3TAPE       TAPE DEVICE.
         BO    SETUPTAP                YES--INITIALIZE FOR TAPE.
         TM    UCBTBYT3,UCB3DACC       DIRECT ACCESS.
         BZ    BADDEV                  NO--GO PRINT MSG, TERMINATE.
TESTDA   CLC   UCBTBYT4(1),IODEVCON    FROM AND TO SAME DEVICE TYPE.
         BE    SAMET                    BRCH IF LIKE DEVICES    XL03145
         CLI   IODEVCON,MERLN           IS FROMDD A MERLIN ?    XL03145
         BNE   BADDEV                   NO, GO TEST FOR WINCH.  XL03145
         CLI   UCBTBYT4,ICEBG           IS TODD AN ICEBERG      XL03145
         BNE   BADDEV                  GO TO PRINT MSG,TERMINATE.
         B     SETDOS                   BRCH IF ICEBERG         XL03145
SAMET    EQU   *                                                XL03145
         CLI   UCBTBYT4,WINCH           WINCHESTER DEVICE ?     XL03130
         BNE   TESTSYSR                 NO, TEST FOR SYSRES DEV XL03130
         CLC   IDEVMOD,ODEVMOD          COMPARE I/O DEV TYPES   XL03130
         BH    BADDEV                   GIVE ERROR MSG IF I/P   XL03130
         BE    TESTSYSR                 BRCH IF EQUAL MODELS    XL03130
*                                       DEVICE BIGGER THAN O/P XL03145
SETDOS   EQU   *                                                XL03130
         OI    FLGBYT1,DOSBIT           SET SWT FOR LATER TEST  XL03130
TESTSYSR TM    SRTESTAT,SRTESYSR       THIS IS SYSTEM RESIDENCE VOL.
         BO    INVALTO                 YES--THIS IS NOT ALLOWED.
         TM    UCBTBYT2,RPS            RPS FEATURE ON TODD.      S20201
         BZ    SETUPDA                 NO-BRANCH                 S20201
         OI    SEQSW+D1,FEATURE        YES-SET RPS SWITCH.       S20201
         DROP  8
         SPACE 2
***********************************************************************
*  IF DUMPING TO DIRECT ACCESS, SET UP I/O BLOCKS HERE.
***********************************************************************
         SPACE
SETUPDA  OI    DEVSW,X'FF'             SET DA SWITCH IN FUNCTION BLOCK.
         MVC   TOECB(WBLKSIZE),WRTECB  SET UP 'TO' DA BLOCK IN FUNC BLK
         LA    GR3,TOECB               GET 'TO' ECB ADDRESS
         ST    GR3,TOECBAD             SAVE IN IOB.
         LA    GR3,TODCB               ADDRESS OF DCB.
         ST    GR3,TODCBAD             SAVE IN IOB.
         USING IHADCB,GR3
         MVC   DCBDDNAM(8),DDNAME2     MOVE DDNAME TO DCB.
         MVC   OPENLD+1(3),TODCBAD+1   DA DCB FOR OPEN LIST.
         ST    GR10,DCBIOBAD           STORE FUNCTION BLOCK PTR.
         MVI   OPENLD,X'8F'            CHANGE OPEN FOR OUTPUT  @ZA16457
         SPACE 1
         BAL   GR14,OPENJ              GO TO READ JFCB.
         LA    GR9,BLOCKS              ADDRESSING FOR PRIMARY DEVICES.
         SPACE
         BAL   GR14,FORMAT4            GO READ IN FORMAT 4.
         SPACE
         MVC   ALTDATA(6),0(GR3)       SAVE ALTERNATE DATA.
         MVC   NOCYL,D10(GR3)           COPY TODD NO. OF CYL.   XL03130
         OC    COPYPTR(4),COPYPTR      ARE THERE COPIES.
         BZ    MORE2                   NO--GO CHK FOR PASSWORD DATASETS
         B     COPYPROC                YES-GO SET UP FOR COPIES.
         SPACE 2
***********************************************************************
*  IF DUMPING TO TAPE, SET UP I/O BLOCKS HERE.
***********************************************************************
         SPACE
SETUPTAP MVC   TOECB(DTBLKSIZ),DTECB   'TO' TAPE I/O BLKS TO FUNCBLK.
         LA    GR3,TOECB               ADDRESS OF ECB.
         ST    GR3,TOECBAD             SAVE IN IOB.
         LA    GR3,TODCB               SAVE ADDRESS OF DCB
         ST    GR3,TODCBAD             IN IOB.
         MVC   DCBDDNAM(8),DDNAME2     MOVE DDNAME TO DCB.
         DROP  3
***********************************************************************
*  SET UP CONTROL RECORD FOR OUTPUT TO TAPE.
***********************************************************************
         SR    GR3,GR3                 CLEAR WORK REGISTER.
         IC    GR3,IODEVCON            UCB DEVICE TYPE CODE.
         LA    GR3,CODES-1(GR3)        ADDRESS S/A D/R DEV TYPE CODE.
         MVC   CONTROL+21(1),0(GR3)    MOVE DEV TYPE CODE TO CTRL REC.
         MVC   CONTROL+12(8),RESTCODE  RESTORE TAPE CODE TO CTRL REC.
         MVC   DEVMOD,IDEVMOD           MOVE IN WINCH MODEL #   XL03130
         LA    GR3,CONTROL             PTR TO CONTROL RECORD.
         ST    GR3,TAPECCW5            POINTER INTO CCW.           2319
         MVI   TAPECCW5,X'01'          RESET OP CODE.              2319
         L     GR8,TUCBPTR             UCB POINTER.                1326
         BAL   GR2,OPENT               GO TO OPEN ON TAPE,WRT CTRL REC.
         MVC   REELCK(4),REELCTRL      INITIALIZE TRAILER INFO.
         OC    COPYPTR(4),COPYPTR      ARE THERE COPIES.
         BZ    MORE2                   NO--GO TO PROCESS FORMAT 5.
         EJECT
***********************************************************************
*                                                                     *
*   THIS SECTION WILL SET UP THE IOBLOCKS (ECB,IOB,DCB) AND THEN      *
*   OPEN THE DEVICES SPECIFIED IN THE COPY BLOCKS. IF THE 'TO'        *
*   DEVICES ARE INCONSISTENT, THE FUNCTION WILL BE TERMINATED.        *
*                                                                     *
***********************************************************************
         SPACE
         USING COPYBLK,7
         USING UCB,8
         USING IOBLOCKS,9
COPYPROC L     GR7,COPYPTR             ADDRESSING FOR COPY BLOCK.
COPYP1   L     GR8,CUCBPTR             UCB PTR. FOR THIS COPY.
         LA    GR9,CIOBLOCK            ADDRESS OF COPY I/O BLOCK.
COPYP2   TM    UCBTBYT3,UCB3TAPE       THIS A TAPE DEVICE.
         BO    TAPECOPY                YES--INITIALIZE FOR TAPE.
         TM    UCBTBYT3,UCB3DACC       IS THIS DIRECT ACCESS DEVICE.
         BZ    BADDEV1                 ALL OTHER=ERROR.
         CLI   DEVSW,X'FF'             WAS PRIMARY 'TO' DA.
         BNE   COPYERR                 GO TO PRINT MSG,TERMINATE.
         CLC   UCBTBYT4(1),IODEVCON    ARE FROM AND TO DEVICES ALIKE.
         BE    SAME                     BRCH IF LIKE DEVICES    XL03145
         CLI   IODEVCON,MERLN           IS FROMDD A MERLIN ?    XL03145
         BNE   COPYERR                  NO, GO TEST FOR WINCH.  XL03145
         CLI   UCBTBYT4,ICEBG           IS TODD AN ICEBERG      XL03145
         BNE   COPYERR                 GO TO PRINT MSG,TERMINATE.
         B     TSTSYSR                  BRCH IF ICEBERG         XL03145
SAME     EQU   *                                                XL03145
         CLI   UCBTBYT4,WINCH           WINCHESTER DEVICE ?     XL03130
         BNE   TSTSYSR                  NO, TEST FOR SYSRES DEV XL03130
         CLC   ODEVMOD,CDEVMOD          COMPARE O/P DEV TYPES   XL03130
         BNE   COPYERR                  GIVE ERROR MSG IF O/P   XL03130
*                                       DEVICE MODELS DIFFER.   XL03130
TSTSYSR  EQU   *                                                XL03145
         TM    SRTESTAT,SRTESYSR       THIS A SYSTEM RESIDENCE VOLUME.
         BO    CINVALTO                YES--THIS IS NOT ALLOWED.
         TM    SEQSW+D1,FEATURE       *RPS ON PRIMARY TODD.      S20201
         BZ    COPYP3                 *NO-BRANCH.                S20201
         TM    UCBTBYT2,RPS           *RPS ON THIS TODD          S20201
         BO    COPYP3                 *YES-SWITCH ALREADY SET.   S20201
         NI    SEQSW+D1,SWOFF         *NO-SET SWITCH OFF         S20201
COPYP3   EQU   *                                                 S20201
         SPACE
***********************************************************************
*  SET UP DIRECT ACCESS I/O COPY BLOCKS HERE.
***********************************************************************
         MVC   TOECB(WBLKSIZE),WRTECB   'TO' DA CTRL BLKS TO COPYBLK.
         LA    GR3,TOECB               GET 'TO' ECB ADDRESS.
         ST    GR3,TOECBAD             SAVE IN IOB.
         LA    GR3,TODCB               ADDRESS OF DCB.
         USING IHADCB,GR3
         ST    GR3,TODCBAD             SAVE IN IOB.
         MVC   DCBDDNAM(8),DDNAME3     MOVE DDNAME TO DCB.
         ST    GR10,DCBIOBAD           STORE FUNCTION BLOCK PTR.
         MVC   OPENLD+1(3),TODCBAD+1   DA DCB TO OPEN LIST.
         MVI   OPENLD,X'8F'            CHANGE OPEN FOR OUTPUT  @ZA16457
         SPACE
         BAL   GR14,OPENJ              GO TO READ JFCB.
         SPACE
         LA    GR9,CIOBLOCK            I/O BLOCKS FOR COPY.
         SPACE
         BAL   GR14,FORMAT4            GO READ IN THE FORMAT 4.
         SPACE
         MVC   CALTDATA(6),0(GR3)      SAVE ALTERNATE DATA.
         B     MORECOPY                GO TO SEE IF MOVE COPY BLOCKS.
         EJECT
         SPACE
***********************************************************************
*  SET UP TAPE I/O COPY BLOCKS HERE.
***********************************************************************
TAPECOPY CLI   DEVSW,X'00'             DUMPING TO TAPE.
         BNE   COPYERR                 NO--INVALID COPY REQUEST.
         MVC   TOECB(DTBLKSIZ),DTECB   'TO' TAPE CTRL BLKS TO COPYBLK.
         LA    GR3,TOECB               ADDRESS OF ECB.
         ST    GR3,TOECBAD             SAVE IN IOB.
         LA    GR3,TODCB               SAVE ADDRESS OF DCB
         ST    GR3,TODCBAD                IN IOB.
         MVC   DCBDDNAM(8),DDNAME3     MOVE DDNAME TO DCB.
         DROP  GR3
         L     GR8,CUCBPTR             COPY UCB POINTER.           1326
         BAL   GR2,OPENT               GO TO OPEN TAPE, WRT CTRL REC.
         MVC   CREELCK(4),REELCTRL     INITIALIZE TRAILER INFO.
MORECOPY L     GR7,CCOPYPTR            ADDRESS NEXT COPY BLOCK,IF ANY.
         LTR   GR7,GR7                 ANY MORE COPY BLOCK POINTERS.
         BP    COPYP1                  YES--GO PROCESS NEXT COPY.
MORE2    LA    GR9,BLOCKS              ADDRESSING FOR PRIMARY I/O BLKS.
         CLI   DEVSW,X'00'             DUMPING TO TAPE.
         BNE   LINKPASS                NO--NO WAIT TODAY--.
         BAL   GR14,WAITTO             WAIT ON EXCP OF CONTROL RECORD.
LINKPASS EQU   *                        *                        S20201
         TM    SEQSW,FEATURE1          RPS FEATURE ON FROMDD.    S20201
         BO    LINKP                   YES-BRANCH.               S20201
         TM    SEQSW+D1,FEATURE        RPS FEATURE ON TODD.      S20201
         BZ    LINKP1                  NO-BRANCH.                S20201
LINKP    EQU   *                                                 S20201
         L     GR1,RPSBUFPT            PTR TO RPS BUFFER.        S20201
         MVC   D0(L16,GR1),SETCCW      MOVE SET SECTOR AND TIC   S20201
*                                        CCWS TO RPS BUFFER.
LINKP1   EQU   *                                                 S20201
         L     GR1,CCWBUFPT            PTR TO BUFFER FOR         S20201
*                                       PASSWORD.                S20201
         LINK  EP=IEHDPASS             CHK PASSWORD DS,EXPIRATION DTES
         CLM   GR15,B'0001',RC4        NON-TERMINATION RETURN? @G32DSPD
         BNH   CALLEXCP                YES--GO TO IEHDEXCP     @G32DSPD
         ST    GR15,DUMPWORK           TEMPORARY STORAGE FOR RET. CODE.
         BAL   GR14,CLOSEOUT           GO TO CLOSE ALL DUMP DCBS.
         BAL   GR14,FINALR1            GO TO FREE UP BUFFER.
         L     GR15,DUMPWORK           RESTORE RETURN CODE.
         B     FINAL3                  RETURN TO THE MONITOR.
         DROP  7,8
         SPACE
CALLEXCP CALL  IEHDEXCP
         L     GR3,PTRCFUNC            POINTER TO CURRENT FUNCTION.
         TM    0(GR3),COMPLETE         IS THIS FUNCTION COMPLETE.
         BO    EOJ                     YES--GO TO CLOSE AND FREE BUFFS.
         LA    GR15,0                  SET RETURN CODE FOR MONITOR.
         B     FINAL3                  GO TO RETURN.
EOJ      EQU   *                                                 A34026
         ST    GR15,COMPCODE           SAVE RETURN CODE.         A34026
FINISH   CLI   DEVSW,X'FF'             DUMPING TO DA.            M4513
         BNE   EOJ1                    NO--GO TO CLOSE DEBS      M4513
         LA    GR9,BLOCKS         ADDR OF PRIMARY I/O BLKS.      M4513
         L     GR8,TUCBPTR        UCB PTR FOR PRIMARY 'TO'       M4513
         L     GR3,FORM5FPT        GET F5 POINTER                S20201
         MVC   2(6,GR3),ALTDATA    AND PUT IN ALT TRK DATA       S20201
         LA    GR3,DDNAME2             DDNAME OF TO DEVICE.      M4513
         BAL   GR2,RDVOLID        GO TO UPDATE ALT TRK INFO      M4513
         OC    COPYPTR(4),COPYPTR    ARE COPIES BEING MADE       M4513
         BZ    EOJ1              NO-ONLY ONE OUTPUT VOL.         M4513
         L     GR3,COPYPTR             ADDR 1ST COPY.            M4513
         USING COPYBLK,GR3                                       M4513
CFINIS   LA    GR9,CIOBLOCK            ADDR OF COPY I/O BLK      M4513
         L     GR8,CUCBPTR             PTR TO UCB FOR COPY.      M4513
         L     GR2,FORM5FPT        GET F5 POINTER                S20201
         MVC   2(6,GR2),ALTDATA    AND PUT IN ALT TRK DATA       S20201
         BAL   GR2,RDVOLID             GO TO UPDATE ALT TRK      M4513
         OC    CCOPYPTR(4),CCOPYPTR    MORE 'DA' COPIES.         M4513
         BZ    EOJ1                NO-CLOSE AND FREE BUFFS.      M4513
         L     GR3,CCOPYPTR            ADDR NEXT COPYBLK.        M4513
         B     CFINIS                  GO PROCESS THIS COPY      M4513
         EJECT
***********************************************************************
*                                                                     *
* THIS ROUTINE READS IN THE VOL LABEL OF THE DIRECT ACCESS            *
*     DEVICE. IF THE OLD SER NO. IS TO BE RETAINED AND IT IS          *
*     DIFFERENT THAN THE NEW SER NUMBER, THE VOL LABEL IS             *
*     REWRITTEN WITH THE OLD SER NUMBER. THIS ROUTINE ALSO            *
*     UPDATES THE ALT TRK INFROMATION FIELDS IN THE FORMAT4           *
*     DSCB.                                                           *
*                                                                     *
*        REG 8 MUST POINT TO THE UCB FOR THE DA DEVICE.               *
*        REG 9 MUST POINT TO THE DA CONTROL BLOCKS                    *
*          UPON ENTRY.                                                *
*        REGISTERS 4,7 ARE WORK REGISTERS.                            *
*        REGISTER 2 IS THE RETURN REGISTER.                           *
*                                                                     *
***********************************************************************
         USING UCB,GR8                                           M4513
         USING IOBLOCKS,9                                        M4513
RDVOLID  XC    TOSEEK+3(5),TOSEEK+3    CLEAR SEARCH ARGUMENT.    M4513
         LA    GR7,TOSEEK+3            SEARCH ADDRESS.           M4513
         ST    GR7,READVTOC            PLACE IN SEARCH CCW.      M4513
         MVI   READVTOC,X'31'          RESET OP CODE.            M4513
         LA    GR7,READVTOC                                      S20201
         TM    SEQSW+D1,FEATURE        TODD HAVE RPS FEATURE.    S20201
         BZ    RDVOLIDA                NO-BRANCH.                S20201
         ST    GR7,TIC                 SET UP TIC/TO ADDRESS.    S20201
         LA    GR7,SETCCW              YES-POINT TO SET SECTOR   S20201
         MVI   K8(GR7),TICCODE         RESET TIC OP CODE.        S20201
*                                         CCW FOR IOB.
RDVOLIDA EQU   *                        *                        S20201
         ST    GR7,TOCCWAD                                       S20201
         L     GR7,DATBUFPT            READ IN AREA.             M4513
         ST    GR7,RDVDATA             BUFF PTR TO READ CCW      M4513
         CLI   UCBTBYT4,X'01'          THIS A 2311.              M4513
         BNE   RDVOLID1            NO-DON'T CHECK IPL TEXT.      M4513
         MVI   TOSEEK+6,1              SET SEARCH FOR TRK 1      M4513
         LA    GR4,RDVDATA             CCW ADDRESS.              M4513
         ST    GR4,TOCCWAD             STORE IN IOB.             M4513
         MVI   RDVDATA,X'16'       SET OP CODE FOR READ R0.      M4513
         BAL   GR4,VOLEXCP           GO RAD IN CNT FLD R0.       M4513
         MVC   CCHHADDR(4),0(GR7)      SAVE CCHH OF IPL TRK      M4513
         MVI   TOSEEK+6,0              SET FOR TRACK 0.          M4513
         MVI   TOSEEK+7,2              SET FOR RECORD 2.         M4513
         LA    GR4,READVTOC            CCW ADDRESS.              M4513
         ST    GR4,TOCCWAD             STORE IN IOB.             M4513
         MVI   RDVDATA,6         SET OP CODE FOR READ DATA       M4513
         BAL   GR4,VOLEXCP             READ IN TRK 0/ RCD 2      M4513
         MVC   34(4,GR7),CCHHADDR      SEEK BOOTSTRAP ADDR       M4513
         MVI   RDVDATA,5         SET OP CODE FOR WRITE.          M4513
         BAL   GR4,VOLEXCP             GO REWRITE RECORD 2.      M4513
RDVOLID1 MVI   RDVDATA,6           SET OP CODE FOR READ.         M4513
         MVI   TOSEEK+7,3              SET SEARCH FOR RCD 3      M4513
         MVI   RDVDATA+L4,CCSILI        SET CMD CHN + SILI FLG  YL02912
         L     GR4,RDVDATA              GET DATA ADDRESS        YL02912
         AH    GR4,RDVDATA+L6           ADD LENGTH              YL02912
         ST    GR4,RDHA                 STORE ADR FOR HOME ADDR YL02192
         MVI   RDHA,RHA                 RESTORE CMD CODE        YL02192
         BAL   GR4,VOLEXCP             GO READ IN VOL LABEL      M4513
         L     GR4,RDHA                 LOAD PTR TO HOME ADDR   YL02192
         MVI   RDVDATA+L4,SILI          RESET SILI BIT ONLY     YL02192
         TM    0(GR4),ALTRK             THIS A ALTERNATE TRK ?  YL02192
         BNO   TRACKOK                 NO--CONTINUE              M4513
         LA    GR1,28                  TRK 0 DEFECTIVE MSG.      M4513
        BAL   GR4,SETUPMSG            GO TO SET UP TMSG.         M4513
         MVC   0(8,GR1),0(GR3)         DDNAME TO MSG.            M4513
         BAL   GR4,MSGWRT1             GO TO PRINT THIS MSG      M4513
TRACKOK  EQU   *                                                 M4513
         USING VLABEL,GR7                                        M4513
         TM    SEQSW,CPYVOLID           USE VOLID ON 'FROM' DISK A37209
         BNO   UPDATE4                  NO, KEEP ORIGINAL VOLID  A37209
         L     GR4,FUCBPTR              GET UCB PTR TO 'FROM'    A37209
*                                       DISK                     A37209
         MVC   SERIAL(6),28(GR4)        MOVE IN 'FROM' VOLID     A52430
GO2321   MVI   RDVDATA,5           SET CCW OP CODE TO WRITE      A52430
         BAL   GR4,VOLEXCP             REWRITE THE LABEL.        M4513
UPDATE4  L     GR1,CNTBUFPT            TEMPORARY STORAGE         M4513
         MVC   0(6,GR1),SERIAL             FOR SER NUMBER.       M4513
         MVC   TOSEEK+3(5),VTOCPTR     NEW VTOC ADDR IN IOB      M4513
         CLC   TOSEEK+3(4),CCHHBEG     VTOC ADDR GT FIRST        M4513
         BL    POSTUCB                  TRK THIS DUMP//NO.       M4513
         CLC   TOSEEK+3(4),CCHHEND     VTOC ADDR LT UPPER        M4513
         BNL   POSTUCB                  LIMIT//NO-POST UCB.      M4513
         MVI   RDVDATA,6               SET CCW CODE TO READ      M4513
         BAL   GR4,VOLEXCP        GO READ IN FORMAT 4 DSCB.      M4513
M0980    L     GR4,FORM5FPT             MOVE IN SAVED ALT.       M0980
         MVC   8(6,GR7),2(GR4)          TRACK INFORMATION        M0980
         MVC   D18(L2,GR7),NOCYL        MOVE TODD CYL NO.       XL03130
         TM    FLGBYT1,DOSBIT           SWT SET FOR DOS CONTAM  XL03130
         BNO   NODOS                    NO, BRCH                XL03130
         OI    D14(GR7),DOSCON          SET DOS CONTAM BIT      XL03130
NODOS    EQU   *                                                XL03130
         AIF   ('&LIB' EQ 'LIB1').VSAM01 BRCH IF OS ASSEM Y02113
         STCK  CLOCK(GR7)               STORE TIMESTAMP IN F4   Y02113
*                                       DSCB
.VSAM01  ANOP                                                   Y02113
         MVI   RDVDATA,5         SET CCW OP CODE FOR WRITE       M4513
         BAL   GR4,VOLEXCP       GO REWRITE FORMAT 4 DSCB.       M4513
***********************************************************************
* POST UCB HERE.
***********************************************************************
POSTUCB  ST    GR8,POSTLIST           UCB ADDR TO PARM LIST      M4513
         L     GR1,CNTBUFPT           TEMPORARY SER STORAGE      M4513
         ST    GR1,POSTLIST+4          NO. TO PARM LIST.         M4513
         LA    GR1,TOSEEK              VTOC POINTER.             M4513
         ST    GR1,POSTLIST+8          POINTER TO PARM LIST      M4513
         MVI   POSTLIST,X'08'          'POST' CODE FOR SVC.      M4513
         MVI   POSTLIST+8,X'80'        SET LIST ENTRY BIT.       M4513
         CNOP  0,4                                               M4513
         BAL   GR1,POST              PARM LIST ADDR FOR SVC      M4513
POSTLIST DC    F'0'                    UCB ADDRESS.              M4513
         DC    F'0'                    SERIAL NUMBER ADDR.       M4513
         DC    F'0'                    VTOC ADDRESS.             M4513
POST     SVC   POSTSER                 GO UPDATE UCBS.           M4513
POSTSER  EQU   82                      SVC NUMBER.               M4513
         BR    GR2                     RETURN TO CALLER.         M4513
         DROP  7,8                                               A52430
EOJ1     EQU   *                                                 A52430
         BAL   GR14,CLOSEOUT           GO TO CLOSE ALL DUMP DCBS.
         BAL   GR14,FINALR1            GO TO FREE BUFFER, IF ANY.
         L     GR15,COMPCODE           RESTORE RETURM CODE.      A34026
         LTR   GR15,GR15               RETURN CODE ZERO.
         BZ    FINALR2                 YES--GO TO PUT OUT MESSAGE.
         B     UNUSABLE                NO---GO PUT OUT UNUSABLE MSG.
VOLEXCP  EXCP  TOIOB                   EXECUTE CHANNEL PROG      M4513
         WAIT  ECB=TOECB                                         A33180
         CLI   TOECB,GOOD              ALL OK.                   M4513
         BCR   8,GR4                   YES-RETURN.               M4513
         B     IOTERR                                            M4513
         DROP  9
         EJECT
         USING IOBLOCKS,9
WAITDISK LA    GR9,BLOCKS
         TM    OUTECB,COMPLETE         IS THE OPERATION COMPLETE
         BO    TESTD                   YES--GO TEST THE STATUS.
         WAIT  ECB=OUTECB              NO--AWAIT COMPLETION OF DISK.
         SPACE
TESTD    CLI   OUTECB,GOOD             ALL OK.
         BNE   IOERR                   NO--I/O ERROR
         BR    GR14                    YES--RETURN
         SPACE
WAITTO   LA    GR9,BLOCKS              ADDRESSING FOR PRIMARY DEVICES.
         BAL   GR4,WAIT2               GO TO AWAIT COMPLETION.
         OC    COPYPTR(4),COPYPTR      ARE COPIES BEING MADE.
         BCR   8,GR14                  NO--RETURN.
         L     GR8,COPYPTR             YES-ADDRESS OF FIRST COPY BLOCK.
         USING COPYBLK,GR8
WAIT1    LA    GR9,CIOBLOCK            I/O BLOCKS FOR COPY.
         BAL   GR4,WAIT2               AWAIT COMPLETION OF THIS COPY.
         OC    CCOPYPTR(4),CCOPYPTR    ARE THERE MORE COPIES.
         BC    8,WAIT1A                NO--RETURN.
         L     GR8,CCOPYPTR            YES-ADDRESS NEXT COPY BLOCK.
         B     WAIT1                   GO WAIT ON NEXT COPY.
WAIT1A   LA    GR9,BLOCKS              ADDRESSING FOR PRIMARY I/O BLKS
         BR    GR14                    RETURN TO CALLER.
         SPACE
WAIT2    TM    TOECB,COMPLETE          IS THE OPERATION COMPLETE.
         BO    TESTT                   YES--GO TEST THE STATUS.
         WAIT  ECB=TOECB               NO--AWAIT COMPLETION
         SPACE 1
TESTT    CLI   TOECB,GOOD              ALL OK.
         BNE   IOTERR                  NO--I/O ERROR.
         BR    GR4                     RETURN.
         SPACE
         SPACE 1
         USING CONSTANT,9
TRKVALID CLC   DUMPWORK(1),LASTORIG      COMPARE EACH BYTE
         BH    INVALTRK                  OF REQUESTED EXTENTS
         BE    CHEKREST                THAT'S O.K. TOO.            0969
         CLI   LASTALT,X'13'           THIS A 2321.                0969
         BNE   CHEKREST                NO-BRANCH.                  0969
         CLC   DUMPWORK+1(1),LASTALT+1  CKECK REQUEST.             0969
         BH    INVALTRK                INVALID REQUEST.            0969
         B     CHKREST                 CONTINUE CHECKING.          0969
CHEKREST EQU   *                                                   0969
         CLC   DUMPWORK(2),LASTORIG     COMPARE CC               M5598
         BH    INVALTRK                  A PARTIAL DUMP. IF ANY
CHKREST  EQU   *                                                   0969
         CLC   DUMPWORK+2(2),LASTORIG+2 COMPARE HH               M5598
         BH    INVALTRK                  HIGHER THAN THE CCHH OF
         BR    GR14                    RETURN TO CALLER IF LIMIT OKAY.
         EJECT
***********************************************************************
*                                                                     *
*   THE FOLLOWING ROUTINE UPDATES THE TRACK ADDRESS FOR SETTING       *
*   LIMITS FOR THE DUMP OPERATION.                                    *
*                                                                     *
*   REGISTER 9 POINTS TO THE CORRECT IOBLOCK.                         *
*   REGISTER 14 IS THE RETURN REGISTER.                               *
*                                                                     *
***********************************************************************
         SPACE 2
         USING IOBLOCKS,GR9
         USING CONSTANT,2
UPCCHH   L     GR2,IODEVCON            ADDRESSING FOR DEVICE CONSTANT.
         L     GR3,CCHHEND             CURRENT CCHH ADDRESS.
         CLC   CCHHEND+3(1),LASTORIG+3  THIS LAST TRACK OF CYLINDER.
         BC    4,UPCCHH1               NO--
         A     GR3,CONVCYL             YES,STEP TO NEXT CYLINDER.
         SPACE 2
CK2321   CLI   CCHHEND+2,X'04'         IS THIS 2321 AND LAST CYLINDER.
         BC    7,UPCCHH2               NO--RETURN.
         AL    GR3,STC2321             INCREMENT STRIP.
         CLI   CCHHEND+1,X'09'         THIS LAST STRIP.
         BC    7,UPCCHH2               NO--RETURN.
         AL    GR3,SCC2321             INCREMENT SUBCELL.
         B     UPCCHH2                 GO STORE VALUE AND RETURN.
         SPACE
UPCCHH1  AL    GR3,F1                  INCREMENT TO NEXT TRACK.
UPCCHH2  ST    GR3,CCHHEND             SAVE NEW VALUE.
         BR    14                      RETURN.
         DROP  2
         EJECT
***********************************************************************
*                                                                     *
*  THIS ROUTINE OPENS THE DATA CONTROL BLOCKS FOR ALL DIRECT ACCESS   *
*     DEVICES INVOLVED. THE OPEN IS ALWAYS PERFORMED ON THE FORMAT    *
*     FOUR DSCB OF THE VTOC.                                          *
*                                                                     *
*        REGISTER 14 IS THE RETURN REGISTER.                          *
*                                                                     *
***********************************************************************
         SPACE
         SPACE 3
OPENJ    MVC   LIST+1(3),CCWBUFPT+1    BUFFER ADDRESS TO READ JFCB.
         RDJFCB MF=(E,OPENLD)
         L     GR8,CCWBUFPT            ADDRESS JFCB WAS READ INTO.
         USING JFCB,8
         MVI   JFCBDSNM,X'04'          SET DSNAME FIELD FOR
         MVC   JFCBDSNM+1(43),JFCBDSNM   FORMAT 4 DSCB.
         OI    JFCBTSDM,X'08'          PREVENT WRITING BACK JFCB.
         OPEN  MF=(E,OPENLD),TYPE=J
         DROP  8
         L     GR8,OPENLD              DISK DCB ADDRESS
         MVI   OPENLD,X'80'            RESTORE OPEN TO INPUT   @ZA16457
         USING IHADCB,8
         TM    DCBOFLGS,X'10'          WAS THERE A SUCCESSFUL OPEN.
         BZ    NOOPEN                  NO--GIVE AN ERROR MESSAGE
         NI    DCBMACRF+1,X'F3'        SET BITS OFF TO PREVENT CLOSE
*                                        FROM WRITING AN EOF RECORD
*                                        AND UPDATING THE DSCB.
         BR    GR14                    RETURN.
         DROP  8
         EJECT
***********************************************************************
*  THIS ROUTINE OPENS THE DATA CONTROL BLOCKS FOR ALL TAPE DEVICES.   *
*     UPON SUCCESSFUL OPEN, THE CONTROL RECORD WILL BE WRITTEN ON     *
*     THE TAPE.                                                       *
*                                                                     *
*        REGISTER 9 MUST POINT TO THE CORRECT IOBLOCKS.               *
*        REGISTER 8 MUST POINT TO THE UCB.                        1326*
*        REGISTERS 3,8 ARE WORK REGISTERS.                            *
*        REGISTER 2 IS THE RETURN REGISTER.                           *
***********************************************************************
         USING IOBLOCKS,GR9
         USING UCB,8                                               1326
OPENT    MVC   OPENLT+1(3),TODCBAD+1   TAPE DCB ADDRESS TO OPEN LIST.
         LH    GR3,SRTEFSCT            TAPE DATA SET SEQUENCE COUNT1326
         DROP  8                                                   1326
         OPEN  MF=(E,OPENLT)           OPEN TAPE DCB.
         L     GR8,OPENLT              TAPE DCB ADDRESS.
         USING IHADCB,8
         TM    DCBOFLGS,X'10'          WAS THERE A SUCCESSFUL OPEN.
         BZ    NOOPEN                  NO--GIVE AN ERROR MESSAGE.
         DROP  8
         MVC   LIST+1(3),CCWBUFPT+1    BUFFER ADDRESS TO RD JFCB.
         RDJFCB MF=(E,OPENLT)          READ JFCB.
         L     GR8,CCWBUFPT            ADDRESS OF READ-IN JFCB.
         USING JFCB,8
         TM    JFCBIND2,X'10'          SECURITY PROTECTED.
         BZ    WRTCNTRL                NO--GO TO PROCESS.        OX2864
         OI    SWITCH,PASSSW+STDLABEL  SET PASSWORD PROTECT SWITCH.
WRTCNTRL LA    GR3,TAPECCW5            CCW ADDRESS.
WRTTM    EQU   *                                                   2319
         ST    GR3,TOCCWAD             STORE CCW ADDRESS IN IOB.
         EXCP  TOIOB                   PUT CONTROL RECORD ON TAPE.
         BR    GR2                     RETURN.
         EJECT
***********************************************************************
*                                                                     *
*   THIS SECTION READS IN THE FORMAT 4 DSCB FROM THE VTOC.
*   THE ALTERNATE TRACK INFORMATION IS SAVED FOR THAT VOLUME.         *
*                                                                     *
*   REGISTER 3 WILL RETURN A POINTER TO THE 6 BYTES OF ALTERNATE DATA.*
*   REGISTER 9 MUST POINT TO THE I/O CONTROL BLOCKS FOR THIS DEVICE.  *
*   REGISTER 14 IS THE RETURN REGISTER.                               *
*                                                                     *
***********************************************************************
         SPACE 1
         USING IOBLOCKS,9
         USING IHADCB,GR8
FORMAT4  LA    GR8,TODCB               ADDRESS OF DCB.
         L     GR1,DCBDEBAD            ADDRESS OF DEB.
         MVC   TOSEEK+3(4),38(GR1)     CCHH OF VTOC TO IOB.
         CLI   IODEVCON,X'05'          IS THIS A 2321.
         BNE   SETR                    NO--FORGET ABOUT BIN NUMBER.
         MVC   TOSEEK+1(2),36(GR1)     BIN NO. TO IOB FROM DEB.
SETR     MVI   TOSEEK+7,X'01'          SET R OF CCHHR FOR FORMAT4 DSCB.
         LA    GR3,TOSEEK+3            SEARCH ADDRESS.
         ST    GR3,READVTOC            SEARCH ADDRESS TO SEARCH CCW.
         MVI   READVTOC,X'31'          RESET CCW OP CODE.
         LA    GR3,READVTOC            CCW ADDRESS//READ VTOC.
         TM    SEQSW+D1,FEATURE        TODD HAVE RPS FEATURE.    S20201
         BZ    SETRR                   NO-BRANCH                 S20201
         ST    GR3,TIC                 YES-RESET TIC ADDRESS.    S20201
         MVI   TIC,TICCODE             RESET TIC OP CODE.        S20201
         LA    GR3,SETCCW              POINT TO SET SECTOR CCW.  S20201
SETRR    EQU   *                        *                        S20201
         ST    GR3,TOCCWAD             SET UP IOB.
         L     GR3,CCWBUFPT            ADDRESS OF BUFFER.
         ST    GR3,RDVDATA             STORE ADDRESS IN READ CCW.
         LA    GR3,RDVDATA             ADDRESS OF READ CCW.
         MVI   0(GR3),X'06'            RESET OP CODE.
         EXCP  TOIOB                   READ IN THE FORMAT 4 DSCB.
         WAIT  ECB=TOECB               WAIT COMPLETION.
         CLI   TOECB,GOOD              ANY ERRORS.
         BNE   IOERR                   YESS--GO GIVE MESAAGE.
         MVC   TOSEEK+3(5),ZERO        ZERO 'CCHHR' OF SEARCH ARGUMENT.
         L     GR3,RDVDATA             ADDRESS OF FORMAT 4 DATA.
         LA    GR3,8(GR3)              ADDRESS OF ALTERNATE DATA.
         BR    GR14                    RETURN.
         DROP  8,9
         EJECT
***********************************************************************
*                                                                     *
*   THIS ROUTINE CLOSES THE DATA CONTROL BLOCKS FOR ALL DEVICES       *
*     (DIRECT ACCESS AND TAPE, IF ANY). IF THE DCBS HAVE NOT BEEN     *
*     OPENED WHEN THIS ROUTINE IS CALLED, NO ACTION IS PERFORMED.     *
*        REGISTERS 4,5,8,9 ARE WORK REGISTERS.                        *
*        REGISTER 2 IS THE RETURN REGISTER.                           *
*                                                                     *
***********************************************************************
         SPACE
         USING IOBLOCKS,9
         USING IHADCB,5
CLOSEOUT LA    GR9,BLOCKS              ADDRESS OF BASIC I/O BLOCKS.
         L     GR5,OUTDCBAD            ADDRESS OF FROM DCB.
         TM    DCBOFLGS,X'10'          DEVICE EVER OPENED.
         BCR   8,GR14                  NO--RETURN TO CALLER.
         BAL   GR4,CLOSE1              GO TO CLOSE THIS DCB.
         CLI   DEVSW,X'F0'             DUMPING TO SYSOUT.
         BCR   8,GR14                  YES--RETURN TO CALLER.
         L     GR5,TODCBAD             TO DCB ADDRESS.
         BAL   GR4,CLOSE               GO TO CLOSE THIS DCB.
         OC    COPYPTR(4),COPYPTR      COPIES REQUESTED.
         BCR   8,GR14                  NO--RETURN TO CALLER.
         L     GR8,COPYPTR             ADDR THIS COPY BLOCK.
         USING COPYBLK,GR8
CLOSEA   LA    GR9,CIOBLOCK            ADDR COPY I/O BLOCK.
         L     GR5,TODCBAD             ADDR. THIS COPY DCB.
         BAL   GR4,CLOSE               GO CLOSE THIS DCB.
         OC    CCOPYPTR(4),CCOPYPTR    MORE COPIES.
         BCR   8,GR14                  NO--RETURN TO CALLER.
         L     GR8,CCOPYPTR            PTR. TO NEXT COPY BLOCK.
         B     CLOSEA                  CLOSE TILL ALL DCBS PROCESSED.
         SPACE
CLOSE    TM    DCBOFLGS,X'10'          DEVICE EVER OPENED.
         BCR   8,GR4                   NO--RETURN.
CLOSE1   EQU   *                                                 M4826
         CLI   DEVSW,X'00'         DUMPING TO TAPE               M4826
         BNE   CLOSEDA             NO                            M4826
         CLOSE ((5),REWIND)                                      M4826
         BR    GR4                 RETURN                        M4826
CLOSEDA  EQU   *                                                 M4826
         CLOSE ((5))                                             M4826
         BR    GR4                                               M4826
         DROP  GR5,GR8                                           M4826
         EJECT
***********************************************************************
*   THIS SECTION FREES THE CORE THAT WAS USED FOR BUFFERS.
***********************************************************************
FINALR1  EQU   *                        *                        S20201
         CLC   RPSBUFPT(L4),ZERO       ANY BUFFERS ASSIGNED.     S20201
         BCR   8,GR14                  NO--RETURN.
         L     GR1,RPSBUFPT            ADDRESS OF BUFFER.        S20201
         USING CONSTANT,2
FREEBUF  L     GR2,IODEVCON            ADDRESS OF DEVICE CONSTANTS.
         LH    GR0,BUFFSIZE            BUFFER SIZE.
         FREEMAIN R,LV=(0),A=(1)
         BR    GR14                    RETURN TO CALLER.
         SPACE
FINALR2  MVC   FORM5FPT(8),DDNAME2     DDNAME OF PRIMARY 'TO'.
         L     GR8,TUCBPTR             UCB PTR FOR PRIMARY 'TO'.
         BAL   GR7,FINALOUT            GO TO SET UP AND PRINT MSG.
         OC    COPYPTR(4),COPYPTR      ARE THERE COPIES.
         BZ    FINALR7                 NO--GO TO RETURN TO MONITOR.
         L     GR3,COPYPTR             YES--PTR TO FIRST OR ONLY COPY.
         USING COPYBLK,3
FINALR3  MVC   FORM5FPT(8),DDNAME3     DDNAME FOR THIS COPY.
         L     GR8,CUCBPTR             UCB PTR FOR THIS COPY.
         BAL   GR7,FINALOUT            GO TO SET UP AND PRINT THIS MSG
         OC    CCOPYPTR(4),CCOPYPTR    MORE COPIES.
         BZ    FINALR7                 NO--GO TO RETURN TO THE MONITOR
         L     GR3,CCOPYPTR            PTR TO NEXT COPY.
         B     FINALR3                 GO TO PROCESS.
         SPACE 2
FINALOUT LA    GR1,6                   DUMP COMPLETION MESSAGE.
         BAL   GR2,SETUPMSG            GO TO SET UP THIS MESSAGE.
         MVC   MESS+9(7),DUMPTO        'DUMP TO' INTO MESSAGE.
         MVC   0(8,GR1),FORM5FPT       DDNAME TO MESSAGE.
         CLI   DEVSW,X'FF'             DUMPING TO DIRECT ACCESS.
         BNE   FINALR5                 NO--GO TO BLANK SERIAL REF.
         CLI   IODEVCON,X'05'          IS THIS 2321              A52430
         BE    FIXMSG                  YES, FIX MSG FOR 2321     A52430
         TM    SEQSW,CPYVOLID          DID WE RETAIN NEW SERIAL.
         BZ    FINALR4A                NO--DO NOT ALTER UCB PTR. A52430
         USING UCB,8
         L     GR8,FUCBPTR             YES--FROM DEVICE UCB PTR.
FINALR4A MVC   40(6,GR1),SRTEVOLI      VOLID TO MESSAGE.         A52430
         B     FINALR6                 GO TO PRINT THIS MESSAGE. A52430
FIXMSG   TM    SEQSW,CPYVOLID          DO WE RETAIN OLD SERIAL   A52430
         BZ    TOBIN                   YES, GO GET TO SUB UCB    A52430
         L     GR8,FUCBPTR             NO, GET FROM SUB UCB      A52430
TOBIN    MVC   40(6,GR1),4(GR8)        SET VOLID TO MESSAGE      A52430
         B     FINALR6                 GO PRINT THIS MESSAGE     A52430
FINALR5  MVC   22(18,GR1),21(GR1)      BLANKOUT VOLID REF IF TAPE OUT.
FINALR6  BAL   GR9,MSGWRT1             GO TO PRINT THIS MESSAGE.
         BR    GR7                     RETURN TO CALLER
         EJECT
FINALR7  LA    GR15,0                  SET UP RETURN CODE.
         CLI   RCODE,X'FF'             WAS FORMAT 5 BAD.
         BE    USERC4                  YES,GO SET RC=4         @G32DSPD
         TM    FLGBYT2,CPYREJEC        IEHDPASS RETURN=4 ?     @G32DSPD
         BNO   FINAL3                  NO, LEAVE ZERO RETURN   @G32DSPD
USERC4   LA    GR15,4                  USE RETURN CODE 4       @G32DSPD
FINAL3   L     GR13,DUMPSAVE+4         RESTORE REGISTER 13.
         RETURN (14,12),T,RC=(15)      RESTORE/RETURN WITH PROPER CODE.
         SPACE 2
         EJECT
***********************************************************************
*                                                                     *
*   THIS SECTION SETS UP THE PROPER MESSAGES AND LINKS TO THE         *
*   MESSAGE WRITER TO OUTPUT ANY MESSAGES.                            *
*                                                                     *
***********************************************************************
         SPACE 1
BADPARM  LA    GR1,19                  FROMDD IS NOT DIRECT ACCESS.
         LA    GR3,DDNAME1             DDNAME FOR MESSAGE.
         BAL   GR2,SETUPMSG            GO TO SET UP THIS MESSAGE.
         B     MSGOUT                  GO TO PRINT THIS MESSAGE.
         SPACE
         USING IHADCB,8
NOOPEN   LA    GR1,5                   DEVICE CANNOT BE OPENED.
         LA    GR3,DCBDDNAM            DDNAME FOR MESSAGE.
         BAL   GR2,SETUPMSG            GO TO SET UP THIS MESSAGE.
         B     MSGOUT                  GO TO PRINT THIS MESSAGE.
         SPACE
         SPACE
BADDEV   LA    GR3,DDNAME2             DDNAME FOR MESSAGE.
         B     BADDEV2                 GO TO SET UP FOR THIS MESS AGE.
BADDEV1  LR    GR3,GR7                 POINT TO DDNAME FOR MESSAGE.
BADDEV2  LA    GR1,20                  INVALID DUMP TO DEV SPECIFIED.
         BAL   GR2,SETUPMSG            GO TO SET UP THIS MESSAGE.
         B     MSGOUT                  GO TO PRINT THIS MESSAGE.
         SPACE
COPYERR  LR    GR3,GR7                 POINT TO DDNAME FOR MESSAGE.
COPYERR1 LA    GR1,21                  INCONSISTENT COPY DEVICES.
         BAL   GR2,SETUPMSG            GO TO SET UP THIS MESSAGE.
         B     MSGOUT                  GO TO PRINT THIS MESSAGE.
         SPACE
          SPACE
INVALTO  LA    GR3,DDNAME2             SET UP DDNAME FOR MESSAGE.
         B     INVALMSG                GO TO SET UP FOR MESSAGE.
CINVALTO LR    GR3,GR7                 POINT TO DDNAME FOR MESSAGE.
INVALMSG LA    GR1,14                  INVALID DUMP DEVICE.
         BAL   GR2,SETUPMSG            GO TO SET UP THIS MESSAGE.
         MVC   MESS+8(7),DUMPTO        FILL IN 'DUMP TO' IN MESSAGE.
         B     MSGOUT                  GO TO PRINT THIS MESSAGE.
         SPACE
INVALTRK LA    GR3,DDNAME1             SET UP DDNAME FOR MESSAGE.
         LA    GR1,22                  INVALID TRK ADDRESS SPECIFIED.
         BAL   GR2,SETUPMSG            GO TO SET UP THIS MESSAGE.
         B     MSGOUT                  GO TO PRINT THIS MESSAGE.
         EJECT
***********************************************************************
*  THIS ROUTINE WILL RECEIVE CONTROL UPON DETECTION OF AN I/O ERROR.  *
*                                                                     *
*  SYNADAF(SVC 68) AND ITS ASSOCIATED MACROS WILL BE USED TO          *
*  DETERMINE THE ERROR CONDITION.                                     *
*                                                                     *
***********************************************************************
IOERR    LA    GR3,OUTIOB              FROM IOB ADDRESS.
         B     IOMSG                   GO TO EXECUTE SYNADAF.
IOTERR   LA    GR3,TOIOB               TO IOB ADDRESS.
IOMSG    LA    GR1,13                  I/O ERROR MESSAGE.
         BAL   GR2,SETUPMSG            SET UP THIS MESSAGE.
         LR    GR1,GR3                 RESTORE POINTER TO IOB.
         SYNADAF ACSMETH=EXCP,PARM1=(1)
         MVC   MESS+22(78),49(GR1)     SYNADAF MSG TO BUFFER.    SM4350
         SYNADRLS
         BAL   GR14,CLOSEOUT           GO TO CLOSE ALL DCBS.
         BAL   GR14,FINALR1            GO TO FREE CORE.
         BAL   GR9,MSGWRT1             PRINT I/O ERROR MSG.
         CLI   DEVSW,X'FF'             DUMPING TO DA.
         BE    UNUSE1                  GO SET HIGH RETURN CODE.
UNUSABLE CLI   DEVSW,X'F0'             DUMPING TO SYSOUT.
         BE    UNUSE1                  YES--GO SET HIGH RETURN CODE.
         LA    GR3,DDNAME2             DDNAME FOR MESSAGE.
         BAL   GR4,MSGWRTA             GO TO SET UP AND PRINT MESSAGE.
         OC    COPYPTR(4),COPYPTR      ANY COPIES.
         BZ    UNUSE1                  NO-BRANCH.
         USING COPYBLK,GR3
         L     GR3,COPYPTR             PTR TO 1ST OR ONLY COPY BLK.
UNUSE    BAL   GR4,MSGWRTA             GO TO SET UP AND PRINT MSG.
         OC    CCOPYPTR(4),CCOPYPTR    MORE COPIES.
         BZ    UNUSE1                  NO-BRANCH.
         L     GR3,CCOPYPTR            YES-PTR TO NEXT COPY BLK.
         B     UNUSE                   CONTINUE PROCESSING.
UNUSE1   LA    GR15,8                  SET RETURN CODE.
         B     FINAL3                  RETURN TO MONITOR.
         EJECT
MSGWRTA  LA    GR1,30                  UNUSABLE MESSAGE.
         BAL   GR2,SETUPMSG            GO TO SET UP THIS MSG.
         MVC   0(8,GR1),0(GR3)         DDNAME TO MESSAGE.
         BAL   GR9,MSGWRT1             GO TO PRINT MSG.
         BR    GR4                     RETURN TO CALLER.
         DROP  GR3
         SPACE
SETUPMSG LINK  EP=IEHDMSGB             GO TO MOVE IN DESIRED MESSAGE.
         BR    GR2                     RETURN.
         SPACE
MSGOUT   MVC   0(8,GR1),0(GR3)         DDNAME TO MESSAGE.
         SPACE
MSGWRT   BAL   GR14,CLOSEOUT           GO TO CLOSE ALL DUMP DCBS.
         BAL   GR14,FINALR1            GO FREE BUFFER SPACE, IF ANY.
         BAL   GR9,MSGWRT1             GO TO PRINT OUT MESSAGE.
         LA    GR15,8                  SET UP ERROR RETURN CODE.
         B     FINAL3                  RETURN TO MONITOR.
MSGWRT1  LINK  EP=IEHDPRNT             PRINT THE MESSAGE.
         BR    GR9                     RETURN.
         SPACE
MOVE     MVC   1(1,GR1),0(GR1)         EXECUTED TO CLEAR DATA BUFFER.
         SPACE
         EJECT
***********************************************************************
* CONSTANTS AND EQU:S
***********************************************************************
         DS    0H
SIXTEEN  DC    H'32'
TWO56    DC    H'256'
RESTCODE DC    X'F47006016663B24D'     RESTORE TAPE CODE.
CCSILI   EQU   X'60'                    READ-DATA CHAINING CODE YL02912
SILI     EQU   X'20'                    READ DATA SILI BIT      YL02912
L6       EQU   6                        OFFSET TO DATA LEN      YL02192
RHA      EQU   X'1A'                    READ HOME ADDR CMD      YL02192
ALTRK    EQU   X'01'                    ALTERNATE INDIC IN HA   YL02192
R1       EQU   X'01'                    RECORD NO. OF F4 DSCB   SA58744
R2       EQU   X'02'                    RECORD NO. OF F5 DSCB   SA58744
D58      EQU   58                       OFFSET INTO F4 DSCB     SA58744
CONTAM   EQU   X'80'                    DOS CONTAMINATION BIT   SA58744
GOOD     EQU   X'7F'
HALF2    DC    H'2'                                              S20201
D0       EQU   0                       DISPLACEMENT OF ZERO.     S20201
D1       EQU   1                                                 S20201
WINCH    EQU   X'0A'                    WINCHESTER DEVICE TYPE  XL03130
ICEBG    EQU   X'0D'                    ICEBERG DEVICE TYPE     XL03145
MERLN    EQU   X'09'                    MERLIN DEVICE TYPE      XL03145
L1       EQU   1                                                XL03145
L2       EQU   2                                                XL03145
D14      EQU   14                       DOS CONTAM BIT OFFSET   XL03145
D10      EQU   10                       OFFSET TO F4 CYL CNT    XL03145
D18      EQU   18                       OFFSET TO F4 CYL CNT    XL03145
DOSCON   EQU   X'80'                    F4 DSCB DOS CONTAM FLAG XL03130
D16      EQU   16                      DISPLACEMENT OF SIXTEEN.  S20201
K8       EQU   8                                                 S20201
L4       EQU   4                       LENGTH OF FOUR.           S20201
L16      EQU   16                      LENGTH OF EIGHT.          S20201
D38      EQU   38                       DISP OF 38              Y02113
CLOCK    EQU   32                       DISPL INTO BUFFER FOR   Y02113
*                                       TIMESTAMP               Y02113
RPS      EQU   X'10'                   TEST FOR UCB RPS FEATURE. S20201
SWOFF    EQU   X'BF'                  *TO SET RPS SWITCH OFF.    S20201
TICCODE  EQU   X'08'                                             S20201
COMPCODE DS    1F                      FOR COMPLETION CODE.      A34026
ZERO     DC    2F'0'
F1       DC    F'1'
CCHHADDR DS    1F            SAVE AREA FOR CCHH OF IPL TRK.      M4513
RC4      DC   AL1(4)                  TEST IEHDPASS RETURN     @G32DSPD
***********************************************************************
*    TABLE OF STAND/ALONE DUMP/RESTORE DEVICE TYPE CODES.
***********************************************************************
CODES    DC    X'01'                   2311.
         DC    X'05'                   2301.
         DC    X'04'                   2303.
         DC    X'03'                   2302.
         DC    X'00'                   2321.
         DC    X'06'                   2305-1                    S20201
         DC    X'07'                   2305-2                    S20201
         DC    X'02'                   2314.
         DC    X'09'                   3330                      S20201
         DC    X'0A'                   WINCHESTER(3340)         XL03130
         DC    X'0B'                   MADRID(3350)            @Z30RSAG
         DC    X'0C'                   UNUSED
         DC    X'0D'                   ICEBERG(3330-11)         XL03145
         DS    0F
SCC2321  DC    X'00F60000'             INCREMENT TO NEXT SUBCELL.
STC2321  DC    X'0000FB00'             INCREMENT TO NEXT STRIP.
REELCTRL EQU   F1
DUMPTO   DC    C'DUMP TO'              FOR COMPLETION MESSAGE.
DUMPSAVE DS    18F
LIST     DS    0F                      FOR READ IN JFCB.
         DC    X'87'
         DC    AL3(0)
         SPACE 3
OPENLT  OPEN  (,(OUTPUT)),MF=L         PARAMETER LIST FOR OPEN TAPE.
OPENLD   RDJFCB (,(INPUT)),MF=L        PARM LIST FOR OPEN DA.  @ZA10935
         EJECT
TAPECCW5 CCW   1,0,X'20',24            WRITE CONTROL RECORD.       2319
         SPACE
SETCCW   EQU   *                                                 M5900
         CCW   X'23',F1,X'40',1         SET SECTOR ZERO          M5900
TIC      CCW   8,0,X'40',0             TIC INTO CHANNEL PROGRAM. S20201
         SPACE
READVTOC CCW   X'31',0,X'60',5         SEARCH ON RECORD 1 OF VTOC.
         CCW   8,READVTOC,0,0          REPEAT UNTIL FOUND.
RDVDATA  CCW   6,0,X'20',140           READ VTOC DSCB.
RDHA     CCW   26,0,X'20',5             READ HA TO DETERMINE IF YL02912
*                                       THIS TRK IS AN ALTERN.  YL02912
         SPACE 1
HAR0CCW  CCW   7,X'0032AA',X'40',6     SEEK
         CCW   X'1F',X'0031A6',X'40',1 SET FILE MASK
HAR0CCW1 CCW   X'31',X'0032AC',X'60',5 SEARCH FOR R0.
         CCW   8,X'0032D8',0,0         SEARCH UNTIL FOUND.
         CCW   5,X'003E18',X'60',8     WRITE R0 DATA.
HAR0CCW2 CCW   X'31',X'0032AC',X'60',5 SEARCH FOR R0
         CCW   8,X'0032F0',0,0         REPEAT UNTIL FOUND.
         CCW   6,X'003E18',X'70',8     READ BACK CHECK R0 DATA.
         CCW   X'11',X'000BF0',X'20',8 ERASE REST OF TRACK.
         SPACE
R0R1CCWS CCW   7,X'0032AA',X'40',6     SEEK.
         CCW   X'1F',X'0031A6',X'40',1 SET FILE MASK.
CCWA     CCW   X'31',X'0032AC',X'60',5 SEARCH FOR R0
         CCW   8,X'0032D8',0,0         REPEAT UNTIL FOUND.
         CCW   X'1D',X'003E20',X'60',X'FFFF'   WRITE CNT,KEY DATA R1.
CCWB     CCW   X'31',X'0032AC',X'60',5 SEARCH FOR R0
         CCW   8,X'0032F0',0,0         REPEAT UNTIL FOUND.
         CCW   5,X'003E18',X'60',8     WRITE DATA R0.
         CCW   X'1E',X'003E20',X'70',X'FFFF'   READ BACK CHK R1.
         CCW   X'16',X'003E18',X'30',16    READ BACK CHK R0.
         SPACE
         EJECT
***********************************************************************
*   DUMP DA WRITE-OUT ECB.
***********************************************************************
         DS    0D                      ALIGNMENT.
WRTECB   DC    F'0'                    WAIT//COMPLETE BITS.
***********************************************************************
*   DUMP DA WRITE-OUT IOB.
***********************************************************************
WRTIOB   DS    0F
WRTFLAGS DC    XL2'4200'               FLAG ONE AND TWO.
WRTSENSE DS    H'0'                    SENSE BYTES.
WRTECBAD DC    A(WRTECB)               ECB ADDRESS.
WRTSTAT  DC    2F'0'                   CHANNEL STATUS.
WRTCCWAD DS    A(0)                    CCW ADDRESS.
WRTDCBAD DC    A(WRTDCB)               DCB ADDRESS.
WRTRESAD DC    F'0'                    RESTART ADDRESS.
WRTBLKCT DC    H'1'                    BLOCK COUNT INCREMENT.
WRTERROR DC    H'0'                    ERROR COUNT.
WRTSEEK  DC    2F'0'                   MBBCCHHR.
***********************************************************************
*   DUMP DA WRITE-OUT DCB.
***********************************************************************
         AIF   ('&LIB' EQ 'LIB1').OSDCB
WRTDCB   DCB   DSORG=PS,MACRF=(E),DEVD=DA,EOEA=P8,XENDA=P9,            C
               EXLST=LIST,                                             C
               SIOA=P7,PGFX=YES                                   M5431
         AGO   .C1
.OSDCB   ANOP
WRTDCB   DCB   DSORG=PS,MACRF=(E),DEVD=DA,EOEA=P8,XENDA=P9,            C
               EXLST=LIST
.C1      ANOP
WRTLSTBL DS    0H                      END OF CONTROL BLOCKS.
WBLKSIZE EQU   WRTLSTBL-WRTECB         SIZE OF I/O BLOCKS-CUMP.
         EJECT
***********************************************************************
*   DUMP TAPE WRITE-TO ECB
***********************************************************************
         DS    0D                      ALIGNMENT.
DTECB    DS    1F                      WAIT//COMPLETE BITS PLUS CODE.
         SPACE
***********************************************************************
*   DUMP TAPE WRITE-TO IOB.
***********************************************************************
DTIOB    DS    0F
DTFLAGS  DC    XL2'4200'               FLAGS ONE AND TWO.
DTSENSE  DC    H'0'                    SENSE BYTES.
DTECBAD  DC    A(DTECB)                ECB ADDRESS.
DTSTATUS DC    2F'0'                   CHANNEL STATUS.
DTCCWS   DC    A(0)                    ADDRESS OF CCWS.
DTDCBAD  DC    A(DTDCB)                DCB ADDRESS.
DTRESAD  DC    F'0'                    RESTART ADDRESS.
DTBLKCT  DC    H'0'                    BLOCK COUNT INCREMENT.
DTERROR  DC    H'0'                    ERROR COUNT.
DTPADD   DC    2F'0'                   NOT USED FOR TAPE IOB.
DTDCB    DCB   DSORG=PS,MACRF=(E),DEVD=TA,EXLST=LIST             A31384
         SPACE
CCW2     CCW   1,0,X'20',0             USED TO PUT OUT CCW RECORD.
*                                         AND DATA FOR TAPE.
CCW3     CCW   1,HAR0CCW-16,X'60',88   WRITE HA,R0 CCWS ON TAPE.
         CCW   1,0,X'20',24            WRITE R0 DATA ON TAPE.
CCW4     CCW   1,R0R1CCWS-16,X'60',96  WRITE HA,R0,R1 CCWS ON TAPE.
         CCW   1,0,X'20',0             WRITE R0,R1 DATA ON TAPE.
         SPACE
DTLSTBLK DS    0H                      END OF CONTROL BLOCK.
DTBLKSIZ EQU   DTLSTBLK-DTECB          SIZE OF TAPE I/O BLOCK FOR DUMP.
         EJECT
         IEHDWORK
         EJECT
IOBLOCKS DSECT
* DUMP 'TO' ECB.
TOECB    DS    1F                      WAIT//COMPLETE BITS PLUS CODE.
* DUMP 'TO' IOB.
TOIOB    DS    0F
TOFLGS   DS    CL2                     FLAGS ONE AND TWO.
TOSENSE  DS    CL2                     SENSE BYTES.
TOECBAD  DS    1F                      ECB ADDRESS.
TOSTATUS DS    2F                      CHANNEL STATUS.
TOCCWAD  DS    1F                      CCW LIST ADDRESS.
TODCBAD  DS    1F                      DCB ADDRESS.
TORESAD  DS    1F                      RESTART ADDRESS.
TOBLKCNT DS    CL2                     BLOCK COUNT INCREMENT.
TOERROR  DS    CL2                     ERROR COUNT.
TOSEEK   DS    2F                      MBBCCHHR.
* DUMP 'TO' DCB.
TODCB    DS    13F                     DCB.
         DS    0D                      FOR DOUBLE WORD ALIGNMENT.
TAPECCW2 DS    1D                      USED TO PUT OUT CCW RECORD
*                                        AND DATA ON TAPE.
TAPECCW3 DS    2D                      WRITE HA,R0 CCWS ON TAPE.
TAPECCW4 DS    2D                      WRITE HA,R0,R1 CCWS ON TAPE.
         DS    0D                      FOR DOUBLE WORD ALIGNMENT.
* DUMP 'FROM' ECB.
OUTECB   DS    1F                      WAIT//COMPLETE BITS PLUS CODE.
* DUMP 'FROM' IOB.
OUTIOB   DS    0F
OUTFLG   DS    CL2                     FLAGS ONE AND TWO.
OUTSENSE DS    CL2                     SENSE BYTES.
OUTECBAD DS    1F                      ECB ADDRESS.
OUTSTAT  DS    2F                      CHANNEL STATUS.
OUTCCWAD DS    1F                      CCW LIST ADDRESS.
OUTDCBAD DS    1F                      DCB ADDRESS.
OUTRESAD DS    1F                      RESTART ADDRESS.
OUTBLKCT DS    CL2                     BLOCK COUNT INCREMENT.
OUTERROR DS    CL2                     ERROR COUNT.
OUTSEEK  DS    2F                      7BBCCHHR.
CCHH     EQU   OUTSEEK+3               CYLINDER/HEAD ADDRESS.
R        EQU   OUTSEEK+7               RECORD NUMBER.
* DUMP 'FROM' DCB.
OUTDCB   DS    18F                     DCB.
         SPACE
IOBLKEND DS    0H                      END OF IOBLOCKS DSECT.
DBSIZE   EQU   IOBLKEND-IOBLOCKS       SIZE OF IOBLOCKS DSECT.
         SPACE 1
         IEHDBLKS
VLABEL   DSECT                                                 , M4513
VOLUME   DS    CL3                     LABEL IDENTIFIES.         M4513
VOLNO    DS    CL1                     LABEL NUMBER.             M4513
SERIAL   DS    CL6                     LABEL SERIAL NUMBER.      M4513
SECURITY DS    CL1                     VOLUME SECURITY.          M4513
VTOCPTR  DS    CL10                    POINTER TO VTOC.          M4513
         DS    CL20                    RESERVED.                 M4513
OWNER    DS    CL10                    OWNER IDENTIFICATION      M4513
         DS    CL29                    BLANK.                    M4513
         SPACE
         EJECT
CVT      DSECT
         CVT   SYS=MIN
         EJECT
UCB      DSECT
         IEFUCBOB
         EJECT
JFCB     DSECT
         IEFJFCBN
         EJECT
         DCBD  DSORG=PS
         END
