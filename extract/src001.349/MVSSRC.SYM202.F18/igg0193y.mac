         TITLE ' GRAPHICS OPEN EXECUTOR '
***********************************************************************
*
* MODULE NAME:           IGG0193Y (OS/VS2)
*
* DESCRIPTIVE NAME:      GRAPHICS OPEN EXECUTOR
*
* COPYRIGHT:             NONE
*
* STATUS:                RELEASE 2.0
*
* FUNCTION:              THIS MODULE PERFORMS ALL OPEN FUNCTIONS FOR
*                        THE 2250S AND 2260S SUPPORTED BY GPS.
*
*                        THIS INCLUDES:
*                          1. VALIDITY CHECKS.
*                                A. UCB IS A GRAPHICS SUPPORTED DEVICE
*                                     1. 2250 )   ALL MODELS SUPPORTED
*                                     2. 2260 )))       AND
*                                     3. 1053 )   ALL LOCALLY ATTACHED
*                                B. GNCP RANGE IN DCB IS 1 THRU 99
*                                C. SAME TASK IN CONTROL IF MULTI DCBS
*                                     PER DEVICE ARE USED
*                          2. BUILDING AND INITIALIZING THE REQUIRED
*                             CONTROL BLOCKS.
*                                A. DCB
*                                B. DEB
*                                C. IOB
*                                D. UCB
*                                E. BASIC TEB
*                                F. BASIC IRBS & IQES
*                                     1. IGG019OE
*                                     2. IFFCAN03
*                                G. EXPRESS USER POLL LIST
*                                H. EXPRESS 2250 BUFFER TABLE
*                          3. LOADING THE NECESSARY I/O AND ATTENTION
*                             HANDLING MODULES.
*                                A. IGG019OA FOR GRAPHICS I/O
*                                B. IGG019OB     CHANNEL ENDS
*                                C. IGG019OC     PAGE FIXING
*                                D. IGG019OE     BASIC ATTN ROUTER
*                                E. IGG019OJ     BASIC ATTN USER ENTRY
*                                F. IFFCAN03     BASIC 2250 CANCEL KEY
*                          4. UNLOCK 2250 KEYBOARDS IF PRESENT.
*
******************* PROLOGUE*CONTINUED*NEXT*PAGE **********************
         EJECT
***********************************************************************
* NOTES:
*
*     DEPENDENCIES:      KEY 5 CONTROL IS RECEIVED FROM SYSTEM OPEN.
*                        USER DCB ADDRESS, KEY AVAIL FROM SYS WORKAREA.
*                        SYSTEM NUCLEUS, KEY 0, IS NOT FETCH PROTECTED.
*                        IF FIRST UCB ON TIOT IS GRAPHIC TYPE,
*                           ALL FOLLOWING UCBS WILL BE GRAPHIC.
*
*     RESTRICTION:       FOR 2250S, ONE DEVICE PER DCB WHICH RESULTS
*                                   IN ONE UCB PER DEB.
*
*     RESISTERS:         SEE EQUATE DEFINITIONS FOLLOWING PROLOG
*
*     PATCH LABEL:       PATCH, A 50 BYTE DC AREA AT END OF MODULE
*
* MODULE TYPE:           EXECUTABLE CODE
*
*    PROCESSOR:          ASSEMBLER XF
*
*    MODULE SIZE:        SEE PAGE 1 OF THIS LISTING
*
*    ATTRIBUTES:
*       AT ENTRY:        REENTRANT  ENABLED  SUPERVISOR STATE IN KEY 5
*       ASSUMED KEYS:    0, USER (AS RECORDED IN SYSTEM OPEN WORKAREA)
*
* ENTRY POINT:           IGG0193Y
*
*    PURPOSE:            SEE 'FUNCTION' HEADING ABOVE
*
*    LINKAGE:            SEE 'INPUT', NEXT HEADING
*
* INPUT:                 REGISTERS 5 THRU 8 AS FOLLOWS:
*                          5 ADDR OF: TOP OF DCB LIST BEING PROCESSED
*                          6          TOP OF WHERE-TO-GO TABLE
*                          7          CURRENT ENTRY OF DCB LIST
*                          8          CURRENT ENTRY OF WHERE-TO-GO TAB
*                            NOTE: 4 CONTAINS A VALID WORKAREA ADDR
*                               ONLY IF CONTROL RECEIVED FROM SYS OPEN
*
* OUTPUT:                SEE 'FUNCTION' HEADING ABOVE
*
* EXITS:
*
*    NORMAL:             XCTL, USING WTG TABLE FOR MODULE ID
*
*    ERROR:              XCTL, USING PROBLEM DETERMINATION MACRO
*                          DMABCOND FOR MODULE ID
*
******************* PROLOGUE*CONTINUED*NEXT*PAGE **********************
         EJECT
***********************************************************************
*
* EXTERNAL REFERENCES:
*
*     ROUTINES:          IGC0007A TO ASSIGN EXPRESS 2250 BUFFER
*                        EXCP        UNLOCK 2250 KEYBOARDS
*
*     DATA AREAS:        SEE DSECT SECTION AT END OF LISTING
*
*     CONTROL BLOCKS:    SEE DSECT SECTION AT END OF LISTING
*
* TABLES:                TABLE OF TCB/ASCB ADDRESSES
*                        WHERE-TO-GO TABLE (SEE IECDSECS DSECT)
*
* MACROS:                ASGNBFR       FREEMAIN       SETLOCK
*                        CIRB          GETMAIN        WAIT
*                        DEBCHK        LOAD           XCTL
*                        DMABCOND      MODESET        XCTLTABL
*
* CHANGE ACTIVITY:       MODULE HAS BEEN RESTRUCTURED TO CONSOLIDATE
*                        THE THREE PREVIOUS OPEN LOADS INTO A SINGLE
*                        LOAD MODULE.  CSECT FLAGS UPDATED WHERE
*                        APPROPIATE.
*
*                        FIXES DROPPED LIST:
*                          SM3010   DEB CALCULATION CODE REWRITTEN
*                          SA40953  APPLIES TO GRAPHICS 2280 DEVICES
*                                   WHICH ARE NOT SUPPORTED IN VS
*
***********************************************************************
         SPACE 3
IGG0193Y CSECT
*   SEE LABEL 'MODID' FOR LAST CHANGE DATE; FORMAT:  NAME.SYSREL.PTF NO
*A409100                                                      LF YM5685
*A441000                                                      LF YM5684
*C402500,A475500-476000                                       LF YM4068
*C361000,C368000                                              LF YM4054
*A340000-340500                                              LD YA00809
*C177500                                                         YM1962
*A202000                                                         Y01021
*A111500-112000,274500-277000,278000-282000,479000-486500,5045 LB AOS/1
*A337000-339500,383000-383500                                   SA40756
*A492000,495000,497500                                           S21016
*D445500,A463700-463900                                      LG YM08088
*A474100-474200                                      LG ZA00500,YM08809
* C104000,A262600,A362100,C510000,A576600                    LG @ZM2360
*C336000,A336100-336200,A336520-336670A338300               E12 ZA25969
*C34050                                                     E12 ZA26129
          EJECT
***********************************************************************
*                                                                     *
*                        REGISTER ASSIGNMENTS                         *
*                                                                     *
*               TEMPORARY ASSIGNMENTS IN LOW NUMBER REGS              *
*               PERMANENT ASSIGNMENTS IN HIGH NUMBER REGS             *
*               INPUT NAMES IDENTICAL TO THOSE IN SYSTEM OPEN         *
***********************************************************************
         SPACE
RE       EQU   0    TEMPORARY:         ENTRY POINT ADDRESSES
RSIZE    EQU   0                       GETMAIN SIZES
RADR     EQU   1                       ADDR WORK REG
RCALC    EQU   1                       CALCULATIONS
RBACK    EQU   14                      RETURN ADDRESS FOR LINKAGES
RLINK    EQU   15                      BRANCH ADDRESS FOR LINKAGES
RCODE    EQU   15                      RETURN CODES FROM LINKAGES
         SPACE
RBASE    EQU   2    CONVENTIONS:       BASE REGISTER
RDCB     EQU   3                       DCB ADDRESS REGISTER
RGMTCB   EQU   4                       TCB   FOR GETMAIN
RASCB    EQU   7                       ASCB  FOR GETMAIN
         SPACE
RDDCTR   EQU   4    CALCULATIONS:      COUNTER OF DD ENTRIES
RCTR     EQU   4                       GENERAL COUNTER
RDEL     EQU   5                       TOT DEVICE ENTRY LENGHT OF TIOT
RIDX     EQU   5                       UCB INDEX NUMBER
RLOC     EQU   5                       LOCATION REG FOR INDEXING
RLGH     EQU   6                       LENGTH OF DEB IN BYTES
RDBWD    EQU   7                       LENGTH OF DEB IN DOUBLE WORDS
RCLR     EQU   8                       DEB LGH TO BE CLEARED IN BYTES
REXT     EQU   8                       NUMBER OF EXTENTS FOR IQES
RCOUNT   EQU   10                      LOOP COUNTER FOR NBR OF IQES
         SPACE
RCORE    EQU   4   INPUT ADDRESSES:    WORKAREA ONLY IF FROM SYS OPEN
RPAR     EQU   5                       PARAMETER LIST OF DCB ADDRS
RWTG     EQU   6                       WTG TABLE, EG. LABEL 'DXXWTG'
RPARC    EQU   7                       CURRENT PARAMETER LIST ENTRY
RWTGC    EQU   8                       CURRENT WGT TABLE ENTRY
         SPACE
RIRB     EQU   6   ADDRESSES:          IRB BEING INITIALIZED
RDEB     EQU   9                       DEB BEING CONSTRUCTED
RTCB     EQU   10                      CURRENT TCB FROM CVT TCB TABLE
RIOB     EQU   11                      IOB USED TO UNLOCK 2250 KEYBRDS
RTEB     EQU   11                      TEB BEING CONSTRUCTED/UPDATED
RTIOT    EQU   11                      TIOT DD ENTRY
RUCB     EQU   12                      CURRENT UCB
RSAVE    EQU   13                      SAVE AREA FOR OPEN
RSCB1    EQU   14                      TEMP SYS CB ADDRESSES
RSCB2    EQU   15                      TEMP SYS CB ADDRESSES
          EJECT
***********************************************************************
*                                                                     *
*                        EQUATES                                      *
*                                                                     *
***********************************************************************
ACURASCB EQU   12     CURRENT ASCB ADDR LOC IN TCB TABLE
ACURTCB  EQU   4      CURRENT TCB ADDR LOC IN TCB TABLE
ADR      EQU   4      ADDR LENGTH IS 4 BYTES
BLANK    EQU   X'40'  CHECK FOR BLANK IN NAME FIELD
DBLWRD   EQU   7                      ROUND TO DOUBLE WORD BDRY  SM1831
DBWD     EQU   3      DOUBLE WORD CALCULATIONS
DCBADR   EQU   0      CURRENT DCB ADDR FROM INPUT PLIST
ECBCC    EQU   X'7F'  ECB COMPLETION CODE FOR SUCCESSFUL I/O
FULLMASK EQU   X'FF'                   MASK OF ALL ONES         SA25381
POLSTACT EQU   X'FF'  ACTIVE FLAG FOR POLL LIST IN EXPRESS GRAPHICS
         SPACE
DEBSIZE  EQU   79     MINIMUM DEB IS APG+PFX+BASE+ID
DECBSIZE EQU   32     DECB USED FOR UNLOCKING 2250 KEYBOARD
IOBSIZE  EQU   72     MINIMUM IOB IS STD+EXT
TEBSZ    EQU   36     SIZE OF TEB IN BYTES                   LG @ZM2360
         SPACE
TTROFF   EQU   14
TIOTOFF  EQU   17
WAOFF    EQU   32
WGOFF    EQU   8
         SPACE
ZERO     EQU   0      DECIMAL/HEX NUMBERS FOR GENERAL USE
ONE      EQU   1
TWO      EQU   2
THREE    EQU   3
FOUR     EQU   4
SIX      EQU   6
SEVEN    EQU   7
EIGHT    EQU   8
SHFT11   EQU   11                      SHIFT COUNT                AOS/1
SHFT24   EQU   24                      SHIFT COUNT                AOS/1
         SPACE
EXCP     EQU   0      SVC NUMBERS
         EJECT
***********************************************************************
*                                                                     *
*                        INITIALIZATION                               *
*                                                                     *
*         1. USING STATEMENTS IDENTIFY DSECT BASE REGISTERS           *
*         2. BASE ESTABLISHED FOR ADDRESSABILITY OF MODULE            *
*         3. MODULE EYECATCHER ID FOR RELEASE LEVEL VERIFICATION      *
*                                                                     *
***********************************************************************
         SPACE 2
         USING CVT,RSCB1         CVT DSECT INITZ FROM LOC 16
         USING FORCORE,RCORE     IECDSECS, KEY 5, REFERENCED ONLY
         USING IHADCB,RDCB       DCB DSECT; KEY 5: COPIED; KEY >7: USER
         USING IECTDEB,RDEB      DEB DSECT, KEY 5, CREATED BY GAM OPEN
         USING SAVEAREA,RSAVE    SAVE/WORK AREA, KEY 5, FOR GAM OPEN
         USING TCB,RTCB          STD DSECTS, KEY 0:  TCB
         USING TIOENTRY,RTIOT                        TIOT
         USING UCB,RUCB                              UCB
         SPACE 3
         BALR  RBASE,0
         USING *,RBASE                          SET UP BASE REGISTER
         B     *+24
MODID    DC    C'IGG0193Y.VS2R2.14548'         MODULE EYECATCHER ID
         EJECT
***********************************************************************
*                                                                     *
*                        INITIALIZATION                               *
*                                                                     *
*         4. SAVE/WORK AREA IS USED TO PRESERVE REENTRANT STATUS.     *
*            INPUT REGS ARE SAVED NOW TO EXPAND NUMBER OF WORK REGS   *
*            DURING CONTROL BLOCK CONSTRUCTION.                       *
*         5. ACCESS TIOT DD ENTRY SO DEVICE TYPES CAN BE VALIDATED    *
*                                                                     *
***********************************************************************
         L     RSIZE,SAVSPSIZ     GET SAVE/WORK AREA FOR GRAPHIC OPEN
         GETMAIN R,LV=(0)
         LR    RSAVE,RADR
OPEN0010 EQU *
         STM   RPAR,RWTGC,R5         SAVE INPUT/UPDATED REGS
         L     RSCB1,CVTPTR          GET CVT ADDR FROM FIXED LOCATION
         L     RTCB,CVTTCBP          GET ADDRS OF TCB TABLE
         L     RSCB2,ACURASCB(RTCB)               ASCB
         ST    RSCB2,ASCBADR                        KEEP FOR BR ENTRIES
         L     RTCB,ACURTCB(RTCB)                 CURRENT TCB
         L     RTIOT,TCBTIO                       TIOT
         L     RDCB,DCBADR(RPARC) GET ADDR OF:  DCB TO BE PROCESSED
         L     RCORE,ADR(RWTGC)                 WORK AREA FOR THIS DCB
         ST    RCORE,R4                           KEEP AVAIL FOR USE
         L     RSCB2,DXUDCBAD                   USER'S DCB
         ST    RSCB2,UDCBADR                      KEEP AVAIL FOR I/O
         AH    RTIOT,DCBTIOT                    DD ENTRY
         EJECT
***********************************************************************
*                                                                     *
*                          VALIDITY CHECKS                            *
*                                                                     *
*        1. VALID DEVICE TYPES                                        *
*              A.  ASSUME ALL UCBS OK IF FIRST IS OK                  *
*        2. NUMBER OF CHANNEL PROGRAMS                                *
*        3. MULTIPLE TASKING, DONE LATER DURING ATTN HANDLING INITZ   *
*                                                                     *
***********************************************************************
         L     RUCB,TIOESTTB     GET FIRST UCB ADDR
         LA    RUCB,ZERO(RUCB)
         CLI   UCBTBYT3,UCB3DISP     IS DEVICE GRAPHICS TYPE
         BNE   IEC158I                  IF NO, ISSUE MSG AND ABEND D13
         CLI   UCBTBYT4,UCBT2250     IS DEVICE 2250 TYPE
         BE    OPEN0020                 IF YES,  OK TO PROCESS
         CLI   UCBTBYT4,UCBT2260     IS DEVICE 2260 TYPE
         BE    OPEN0020                 IF YES, OK TO PROCESS
         CLI   UCBTBYT4,UCBT1053     IS DEVICE 1053
         BNE   IEC158I                  IF NO, ISSUE MSG AND ABEND D13
OPEN0020 EQU   *
         CLI   DCBGNCP,DCBGNCPH      IS GNCP GREATER THAN 99
         BH    IEC159I                  IF YES, SET UP PD MSG & EXIT
         CLI   DCBGNCP,DCBGNCPL      IS GNCP LESS OR EQUAL TO 0
         BNH   IEC159I                  IF YES, SET UP PD MSG & EXIT
         EJECT
***********************************************************************
*                                                                     *
*                         DEB CONSTRUCTION                            *
*                                                                     *
*        1.   CALCULATE TOTAL DEB SIZE FOR GETMAIN                    *
*           A. SIZE IS FOUR BYTES PER DEVICE ENTRY PLUS DEB SIZE      *
*           B. DEB SIZE IS SUM OF PREFIX, BASIC, ETC.                 *
*                                                                     *
***********************************************************************
         LR    RSCB1,RTIOT       USE TEMP REG FOR ADR CALC
         DROP RTIOT
         USING TIOENTRY,RSCB1
         SR    RCALC,RCALC       INITZ FOR  CALC WORK REG
         SR    RDDCTR,RDDCTR                DD COUNT
         SR    RDEL,RDEL                    DD ENTRY LGH IN BYTES
OPEN0030 LA    RDDCTR,ONE(RDDCTR)       COUNT EACH DD ENTRY
         IC    RCALC,TIOELNGH           GET LGH OF THIS DD ENTRY
         AR    RSCB1,RCALC              CALC ADR OF NXT DD ENTRY
         SH    RCALC,SIXTEEN            CALC LGH OF DEV ENTRIES
         AR    RDEL,RCALC                ACCUMULATE TOTAL LGH
         L     RSCB2,TIOELNGH            CK IF END OF TABLE
         LTR   RSCB2,RSCB2
         BZ    OPEN0040                    IF YES, CONTINUE WITH GM
         CLI   TIOEDDNM,BLANK              IF NO, CK FOR BLANK NAME
         BE    OPEN0030                      IF BLANK, COUNT CONCAT DD
OPEN0040 LA    RLGH,DEBSIZE(RDEL)    LOAD TOTAL DEB SIZE
         LA    RLGH,DBLWRD(RLGH)   ROUND UP TO DOUBLE WORD BDRY
         SRL   RLGH,DBWD           SHIFT OUT 7-ADDED FOR DB WD B
         LR    RDBWD,RLGH          SAVE FOR LATER USE IN DEB INITZ
         SLL   RLGH,DBWD           ROUND UP TO DB WORD IN BYTES
         LR    RSIZE,RLGH          KEEP FOR LATER USE IN CLEARING DEB
         O     RSIZE,DEBSPOOL      SUBPOOL NO INTO HIGH ORDER BYTE
         GETMAIN R,LV=(0)          DEB SIZE IN REGISTER 0
         LR    RDEB,RADR           DEB SIZE = 52 + 20 + 7 + UCB
         DROP  RSCB1               DROP TEMP REG USED FOR ADR CALC
         USING TIOENTRY,RTIOT
         EJECT
***********************************************************************
*                                                                     *
*                         DEB CONSTRUCTION                            *
*                                                                     *
* 2. CLEAR AND INITIALIZE DEB:                                        *
*  A. PREFIX SECTION FIRST, THEN BASIC SECTION BY ASCENDING LOCATIONS.*
*  B. APPENDAGE TABLE IS DONE AFTER DEB IS ADDED USING DEBCHK.        *
*  C. ID SECTION IS DONE AS MODULES ARE LOADED.                       *
*                                                                     *
*     REG CONTENTS:     RDBWD HAS  DEB SIZE IN DOUBLE WORDS           *
*                       RDEB       ADDR OF DEBEOEA (BEGINING OF APDG) *
*                       RLGH       DEB SIZE IN BYTES                  *
*                                                                     *
***********************************************************************
OPEN0050 EQU   *
         CH    RLGH,HWC256       CK IF DEB SIZE LESS THAN 256 BYTES
         BNH   OPEN0060             IF YES, SKIP CLEARING LOOP   YM1962
         LA    RCLR,FULLMASK            LENGTH IN RCLR FOR EX INSTR
         SH    RLGH,HWC256              SUBTRACT FOR SIZE CLEARED
         EX    RCLR,CLEAR               EXECUTE CLEAR DEB INSTRUCTION
         AH    RADR,HWC256              INCREMENT FOR NEXT SECTION
         B     OPEN0050                 REPEAT TIL DONE
OPEN0060 EQU   *
         BCTR  RLGH,RSIZE             DECREMENT BY 1 FOR EX INSTR
         EX    RLGH,CLEAR             LAST DEB SIZE CLEARED
         STC   RDBWD,DEBLNGTH             MOVE IN DOUBLE WORDS OF DEB
         ST    RTCB,DEBNMSUB              DEBTCBAD OVERLAYS DEBNMSUB
         SRL   RDEL,2                     DIVIDE UCBS BY 4
         STC   RDEL,DEBNMEXT              MOVE NO OF EXTENTS INTO DEB
         EJECT
***********************************************************************
*                                                                     *
*                         DEB CONSTRUCTION                            *
*                                                                     *
*     2. INITIALIZING DEB:                                            *
*         A. BASIC SECTION, CONT.: CHAIN DEB TO OTHER CONTROL BLOCKS  *
*           1). DCB           USER DCB FOR DEBCHK MACRO               *
*           2). TCB           KEY 0 CB                                *
*                                                                     *
***********************************************************************
         L     RSCB1,UDCBADR          GET USER DCB ADDR
         ST    RSCB1,DEBPROTG            USER DCB ADDR TO DEBDCBAD
         LA    RADR,DEBNMSUB          ACCESS ADDR OF BASIC DEB
         STCM  RADR,SEVEN,DCBDEBA        CHAIN TO COPIED DCB
         DROP  RCORE
         USING FORCORE,RSCB2     IECDSECS, KEY 5, REFERENCED ONLY
         L     RSCB2,R4     GET ADDR OF WORKAREA
         MODESET  KEYADDR=DXUKEY,WORKREG=15
         DROP  RDCB
         USING IHADCB,RSCB1           USER DCB ADDRESSING
         STCM  RADR,SEVEN,DCBDEBA        CHAIN TO USER DCB
         DROP  RSCB1
         USING IHADCB,RDCB            COPY DCB ADDRESSING
         MODESET  EXTKEY=ZERO
         L     RSCB2,TCBDEB           GET FIRST DEB ADDR
OPEN0065 LA    RSCB2,ZERO(RSCB2)        INITZ DEBAMLNG TO ZERO
         ST    RSCB2,DEBAMLNG           STORE AMLNG/DEBPTR
         CS    RSCB2,RADR,TCBDEB      PUT NEW DEB ON TCB CHAIN
         BNE   OPEN0065               REPEAT IF FIRST DEB ADDR CHANGED
         EJECT
***********************************************************************
*                                                                     *
*                         DEB CONSTRUCTION                            *
*                                                                     *
*     2. INITIALIZING DEB:                                            *
*         A. BASIC SECTION, CONT.: CHAIN DEB TO OTHER CONTROL BLOCKS  *
*           3). DEB CHAIN     KEY 5 WITH DEBCHK MACRO                 *
*         B. BASIC SECTION, CONT.: ATTACH UCB ADDRESSES FROM TIOT     *
*         C. APPENDAGE TABLE, USING IOS RETURN ADDRESS                *
*                                                                     *
***********************************************************************
         MODESET  EXTKEY=DATAMGT
         MVC   DEBPROTG,TCBPKF         STORAGE KEY TO DEB
         OI    DEBPROTG,DEBID          PROTECTION TAG FOR DEB ID
         ST    RDEB,DEBEXSCL             STORE DEB APPENDAGE TABLE ADR
         MVI   DEBEXSCL,X'02'           MOVE IN 2 FOR NON-DIR ACC DEV
         DEBCHK (RSCB1),TYPE=ADD,AM=GAM     ADD TO DEB TABLE  LB Y01021
         LA    RDEL,DEBUCBAD              ACCESS DEBUCB ADDRESS
OPEN0070 EQU   *
         SR    RCALC,RCALC                 CLEAR LENGTH REGISTER
         IC    RCALC,TIOELNGH              LOCATE STARTING TIOT
         SH    RCALC,SEVNTEEN              UCBS PLUS 1 FOR EX INSTR
         EX    RCALC,UCBMOVE               MOVE UCBS FROM TIOT TO DEB
         LA    RDEL,ONE(RDEL,RCALC)        INCREMENT DEB POS BY LENGTH
         LA    RTIOT,TIOTOFF(RTIOT,RCALC)  INCREMENT TO PT TO NEXT TIOT
         BCT   RDDCTR,OPEN0070             GO GET NEXT UCB, IF ANY MORE
         DROP  RTIOT
         USING CVT,RSCB1
         L     RSCB1,CVTPTR          ACCESS PTR TO CVT
         L     RADR,CVTXAPG          LOAD IOS APPENDAGE TABLE ADDR
         L     RADR,ZERO(RADR)       LOAD IOS RETURN ADDR
         ST    RADR,DEBEOEA               STORE INTO DEB APPENDAGE
         ST    RADR,DEBSIOA
         ST    RADR,DEBPCIA
         EJECT
***********************************************************************
*                                                                     *
*                         IOB CONSTRUCTION                            *
*                                                                     *
*        1.   CALCULATE TOTAL IOB SIZE FOR GETMAIN                    *
*           A. SIZE IS IOBSIZE*(GNCP+1)+ECB IF GNCP<99                *
*           B. ECB SIZE IS 8 BYTES TO INCL POINTER TO NEXT AVAIL IOB  *
*                                                                     *
***********************************************************************
         SR    RCTR,RCTR          CLEAR MULTIPLIER REG
         SR    RSIZE,RSIZE        CLEAR FOR MULTIPLY PAIR
         IC    RCTR,DCBGNCP       GET GNCP INTO MULTIPLIER REG
         CLI   DCBGNCP,DCBGNCPH     IS GNCP EQUAL TO MAXIMUM
         BE    OPEN0080               IF YES, DON'T BUILD EXTRA IOB
         LA    RCTR,ONE(RCTR)         IF NO, ADD ONE FOR EXTRA IOB
OPEN0080 EQU   *
         LA    RCALC,IOBSIZE      GET MINIMUM IOB SIZE
         LR    RLGH,RCALC          SAVE LENGHT FOR LATER USE
         MR    RSIZE,RCTR          MULTIPLY IOB SIZE BY GNCP
         LA    RSIZE,EIGHT(RCALC)  TOTAL IOB CORE INTO REG 0
         MODESET EXTKEY=ZERO
         O     RSIZE,IOBSPOOL         SUBPOOL NO INTO HIGH ORDER BYTE
         GETMAIN R,LV=(0)           GET CORE FOR IOB S
         XC    0(8,RADR),0(RADR)    CLEAR  1ST IOB -8
         LA    RADR,EIGHT(RADR)     POINT PAST 1ST AVAIL PTR
         EJECT
***********************************************************************
*                                                                     *
*                         IOB CONSTRUCTION                            *
*                                                                     *
*       2. CHAIN IOB TO BOTH COPIED AND USER'S DCB (KEY 5 AND >7)     *
*       3. CLEAR AND INITIALIZE IOB FIELDS                            *
*  RADR:  IOB ADDRESS FROM GETMAIN AFTER TOP 8 BYTES ALLOCATED TO ECB *
*                                                                     *
***********************************************************************
         MODESET  EXTKEY=DATAMGT
         ST    RADR,DCBIOBAD          CHAIN IOB TO COPY DCB
         L     RSCB1,UDCBADR          GET USER DCB ADDR
         L     RSCB2,R4     GET ADDR OF WORKAREA
         MODESET  KEYADDR=DXUKEY,WORKREG=15
         DROP  RDCB
         USING IHADCB,RSCB1           USER DCB ADDRESSING
         ST    RADR,DCBIOBAD          CHAIN IOB TO USER DCB
         DROP  RSCB1
         USING IHADCB,RDCB            COPY DCB ADDRESSING
         MODESET  EXTKEY=ZERO
         USING DXIOB,RADR            TEMP BASE FOR IOB INITZ
         SR    RIDX,RIDX            CLEAR INDEX REGISTER
         BCTR  RLGH,RSIZE           DECREMENT BY 1 FOR EX INSTR
OPEN0090 EX    RLGH,CLEAR           CLEAR 1 IOB
         MVI   IOBFLAG1,X'C2'       SET BITS 0, 1, AND 6
         MVI   IOBCSW+4,X'0F'       IND CHANNEL OPERATION COMP
         LA    RSIZE,IOBCCW1        GET CCW START ADDR
         ST    RSIZE,IOBSIOCC       START ADDRESS IN IOB
         ST    RSCB1,IOBWGHT        STORE DCB ADDRESS
         MVI   IOBWGHT,X'00'        CLEAR HIGH ORDER BYTE
         STC   RIDX,IOBUCBX         INDEX ZERO FOR FIRST UCB
         LA    RIDX,ONE(RIDX)       INCREMENT UCB INDEX COUNT
         CH    RCTR,NUMONE            IS THIS LAST IOB
         BE    OPEN0100                 IF YES, SKIP UPDATE TO NEXT IOB
         LA    RSIZE,IOBSIZE(RADR)      IF NO, GET NEXT IOB LINK ADDR
         ST    RSIZE,IOBNXTPT                  PUT INTO IOB LINK ADR
OPEN0100 LA    RADR,ONE(RADR,RLGH)  BUMP FOR NEXT IOB CLEAR
         BCT   RCTR,OPEN0090        CLEAR NEXT IOB, IF ANY
         DROP  RADR
         EJECT
***********************************************************************
*                                                                     *
*                        LOAD GRAPHICS ROUTINES                       *
*                                                                     *
*           DONE IN KEY 5 SUPERVISOR STATE FOR DEB SUBID UPDATES      *
*                AND CORRECT SUBPOOL FOR SYSTEM CLOSE DELETES         *
*               (SEE FUNCTION HEADING IN PROLOGUE FOR DETAILS)        *
*                                                                     *
*         1.     LOAD GIOCR  (MODULE NAME IGG019OA)                   *
*                                                                     *
***********************************************************************
         MODESET  EXTKEY=DATAMGT
         SR    RCALC,RCALC         CALC LOC OF DEBSUBID FIELDS
         LA    RLOC,DEBUCBAD            ID SECTION FOLLOWS UCB ADDRS
         IC    RCALC,DEBNMEXT              GET NBR OF UCBS (EXTENTS)
         SLL   RCALC,2                     EXTENT SIZE IS 4 BYTES/ENTRY
         AR    RLOC,RCALC               POINT TO DEBSUBID FOR UPDATES
         SR    RCTR,RCTR           CLEAR FOR NBR OF RTNS LOADED
         USING CVT,RSCB1
         L     RSCB1,CVTPTR          GET PTR TO CVT
         L     RADR,CVTSVDCB         GET SVC DCB PTR
         LOAD  EP=IGG019OA,DCB=(RADR)
         MVC   ZERO(TWO,RLOC),IDGIOCR  MOVE ID TO DEB
         LA    RLOC,TWO(RLOC)          POINT TO NEXT DEB SUB ID SECTION
         LA    RCTR,ONE(RCTR)          INCREMENT ROUTINES LOADED COUNT
         STCM  RE,SEVEN,DCBGIOCA     PLACE ENTRY POINT IN COPY DCB
         STCM  RE,SEVEN,R0+1         SAVE GIOCR ADDR FOR TEB LG @ZM2360
         L     RSCB1,UDCBADR         GET USER DCB ADDR
         DROP  RDCB
         USING IHADCB,RSCB1           USER DCB ADDRESSING
         L     RSCB2,R4              GET ADDR OF WORKAREA
         MODESET  KEYADDR=DXUKEY,WORKREG=15
         STCM  RE,SEVEN,DCBGIOCA     PLACE ENTRY POINT IN USER DCB
         DROP  RSCB1,RSCB2
         USING IHADCB,RDCB            ADDRESSING:  COPY DCB
         USING FORCORE,RCORE                       CURRENT WORK AREA
         EJECT
***********************************************************************
*                                                                     *
*                        LOAD GRAPHICS ROUTINES                       *
*                                                                     *
*         2.      CHANNEL ENDS (MODULE NAME IGG019OB)                 *
*         3.      PAGE FIX     (MODULE NAME IGG019OC)                 *
*                                                                     *
***********************************************************************
         MODESET EXTKEY=DATAMGT
         USING CVT,RSCB1
         L     RSCB1,CVTPTR              GET PTR TO CVT
         L     RADR,CVTSVDCB             GET SVC DCB PTR
         LOAD  EP=IGG019OB,DCB=(RADR)
         MVC   ZERO(TWO,RLOC),IDCEXCE MOVE ID TO DEB              AOS/1
         LA    RLOC,TWO(RLOC)          NEXT DEB SUB ID SECTION    AOS/1
         LA    RCTR,ONE(RCTR)          INCR RTNS LOADED COUNT     AOS/1
         BAL   RBACK,PAGECTR           GO COMPUTE PAGE COUNT      AOS/1
         ST    RE,DEBCEA               STORE ADDRESS IN DEB AVT   AOS/1
         ST    RE,DEBXCEA              STORE ADDRESS IN DEB AVT   AOS/1
         L     RSCB1,CVTPTR               GET PTR TO CVT
         L     RADR,CVTSVDCB             GET SVC DCB PTR          AOS/1
         LOAD  EP=IGG019OC,DCB=(RADR)                             AOS/1
         MVC   ZERO(TWO,RLOC),IDPGFIX     MOVE ID TO DEB
         LA    RLOC,TWO(RLOC)          POINT TO NEXT DEB SUB ID SECTION
         LA    RCTR,ONE(RCTR)          INCREMENT ROUTINES LOADED COUNT
         STC   RCTR,DEBNMSUB             CT FINAL IF EXPR GRAPHICS
         BAL   RBACK,PAGECTR           GO COMPUTE PAGE COUNT      AOS/1
         ST    RE,DEBSIOA              STORE ADDRESS
         OI    DEBSIOA,DEBPGFX         INDICATE FIX APPNDG THERE  AOS/1
         TM    DCBGTYPE,DCBGTBAS  IS THIS BASIC ATTN HANDLING
         BNO   OPEN0110             IF NO, SKIP BASIC LOADS
         EJECT
***********************************************************************
*                                                                     *
*                  LOADS FOR BASIC ATTENTION HANDLING                 *
*                                                                     *
*         1.     GAR   (MODULE NAME IGG019OE)                         *
*         2.     GEIR  (MODULE NAME IGG019OJ)                         *
*                                                                     *
***********************************************************************
         L     RSCB1,CVTPTR               GET PTR TO CVT
         L     RADR,CVTSVDCB          GET SVC DCB ADDRESS
         LOAD  EP=IGG019OE,DCB=(1)
         ST    RE,EPGAR                SAVE GAR ADDRESS
         MVC   ZERO(TWO,RLOC),IDGAR   MOVE ID TO DEB
         LA    RLOC,TWO(RLOC)     POINT TO NEXT DEB SUBID SECTION
         LA    RCTR,ONE(RCTR)         INCREMENT ROUTINES LOADED COUNT
         L     RSCB1,CVTPTR               GET PTR TO CVT
         L     RADR,CVTSVDCB             GET SYSTEM SVC DCB ADDRESS
         LOAD  EP=IGG019OJ,DCB=(1)
         ST    RE,EPGEIR               SAVE GEIR ADDRESS
         MVC   ZERO(TWO,RLOC),IDGEIR MOVE ID TO DEB
         LA    RLOC,TWO(RLOC)          POINT TO NEXT SUB ID SECTION
         LA    RCTR,ONE(RCTR)         INCREMENT ROUTINE LOADED COUNT
         STC   RCTR,DEBNMSUB             STORE COUNT IN DEB
         EJECT
***********************************************************************
*                                                                     *
*                  LOADS FOR BASIC ATTENTION HANDLING                 *
*                      IF DEVICE IS 2250                              *
*                                                                     *
*          3.    CANCEL KEY  (MODULE NAME IFFCAN03)                   *
*                                                                     *
***********************************************************************
         L     RUCB,DEBUCBAD     GET 1ST UCB ADDRESS FROM DEB    SM4218
         CLI   UCBTBYT4,UCBT2250    IS DEVICE A 2250
         BNE   OPEN0110             IF NO, DO NOT LOAD IFFCAN03  SM4218
         LOAD  EP=IFFCAN03
         ST    RE,EPCAN03              SAVE IFFCAN03 ADDRESS
*   NOTE:  IFFCAN03 CAN NOT BE RECORDED IN DEBSUBID FOR SYSTEM CLOSE
*          TO DELETE BECAUSE IGG019 IS AFFIXED TO ID TO OBTAIN NAME.
         EJECT
***********************************************************************
*                                                                     *
*                  INCREMENT UCBOPEN USER COUNT                       *
*                                                                     *
*                1.  ALSO, IF THIS IS FIRST OPEN FOR DEVICE,          *
*                      A.  RESET UCBGCB, BITS 6 AND 7, TO ZERO        *
*                                                                     *
*     SUPERVISOR KEY 0 AND LOCAL LOCK ARE USED TO UPDATE SYSTEM AND   *
*        GRAPHIC CONTROL BLOCKS.                                      *
*                                                                     *
***********************************************************************
OPEN0110 EQU *
         MODESET EXTKEY=ZERO
LL1OBT   SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=(LOCAL,IGG0193Y(X
               LL1REL)),REGS=SAVE
         SR    RCTR,RCTR           CLEAR REG FOR UCB CT INSERT
         SR    REXT,REXT                     FOR NBR OF UCBS
         SR    RLOC,RLOC                     FOR INDEXING DEBUCBAD
         IC    REXT,DEBNMEXT                 INSERT NO. OF UCBS
OPEN0120 L     RUCB,DEBUCBAD(RLOC)  GET UCB ADDR.
         IC    RCTR,UCBOPEN         GET UCB USE CT
         LA    RCTR,ONE(RCTR)            INCREMENT USE COUNT
         STC   RCTR,UCBOPEN         REPLACE NEW USE COUNT
         CLI   UCBOPEN,ONE           IS USE CT ONE
         BNE   OPEN0130                IF NOT FIRST, SKIP EXPRESS CLEAR
         NI    UCBGCB,UCBGATNB         IF FIRST, RESET BITS 6&7 IN GCB
OPEN0130 LA    RLOC,ADR(RLOC)          INCREMENT  INDEX
         BCT   REXT,OPEN0120        BRANCH IF MORE UCBS TO SERVICE
         TM    DCBGTYPE,DCBGTBAS    IS THIS BASIC ATTN HANDLING
         BNO   EAH0310                 IF NO, FINISH WITH EXPRESS
         EJECT
***********************************************************************
*                                                                     *
*                     BASIC ATTENTION HANDLING                        *
*                                                                     *
*   1.  VALIDITY CHECKS FOR TASK CONTROL OF DEVICE:                   *
*                                                                     *
*       IF TEB ALREADY EXISTS FOR THIS DEVICE:                        *
*                A. VERIFY SAME TASK (IF TCBS MISMATCH, ISSUE IEC158I *
*                                     AND ABEND C13 THRU SYSTEM OPEN) *
*                B. SKIP ALL INITIALIZATION                           *
*                                                                     *
***********************************************************************
         L     RSCB2,UCBTEB             DOES TEB EXIST FOR DEVICE
         LTR   RSCB2,RSCB2                IF NO, OK TO CONTNUE
         BZ    BAH0140                    IF YES, TEB TCB AND CUR TCB
         USING TEB,RSCB2                          MUST BE EQUAL
         L     RSCB1,TEBTCB
         CR    RSCB1,RTCB
         DROP  RSCB2
         BNE   IEC157I                      IF NO, USE PD EXIT/MSG C13
         B     OPEN0240                     IF YES, INITZ DONE
         EJECT
***********************************************************************
*                                                                     *
*                     BASIC ATTENTION HANDLING                        *
*                                                                     *
*   1.  VALIDITY CHECKS FOR TASK CONTROL OF DEVICE ,CONT.:            *
*                                                                     *
*       IF TEB ALREADY EXISTS FOR THIS TASK:                          *
*           A. SKIP IRB INITIALIZATION SINCE IRBS ALREADY EXIST       *
*           B. ADD EXTRA IQES TO HANDLE ATTENTIONS FOR THESE UCBS     *
*                                                                     *
*                                                                     *
*          NOTE: TO FIND TASK TEB, SCAN TASK DEB CHAIN FOR OTHER      *
*                GRAPHIC DEVICES AND SEE IF TEB ADDRESS IS AVAILABLE  *
*                FROM THEIR UCBS.                                     *
*                                                                     *
***********************************************************************
BAH0140  L     RSCB2,TCBDEB             DOES TEB EXIST FOR TASK
         LA    RSCB2,ZERO(RSCB2)          SCAN TASK DEB CHAIN
         USING DEBNMSUB,RSCB2
BAH0150  SR    RE,RE                 CLR EXTENT REGISTER    E12 ZA25969
         IC    RE,DEBNMEXT             GET EXTENTS          E12 ZA25969
         LTR   RE,RE                     ARE THERE ANY      E12 ZA25969
         BZ    BAH0170                 IF NONE, GET NEXT DEB    SA25381
         SR    RLOC,RLOC                 CLR DCB REGISTER   E12 ZA25969
         ICM   RLOC,SEVEN,DEBDCBAD       GET DCB ADDRESS    E12 ZA25969
         USING IHADCB,RLOC                                  E12 ZA25969
         TM    DCBDSRG2,DCBDSGGS         GRAPHICS A.M.?     E12 ZA25969
         DROP  RLOC                                         E12 ZA25969
         BNO   BAH0170                   NO, GET NEXT DEB   E12 ZA25969
         SR    RLOC,RLOC               IF YES, INITZ INDEX      SA40756
BAH0160  L     RUCB,DEBUCBAD(RLOC)  LOAD FIRST UCB ADDRESS      SA40756
         LA    RUCB,ZERO(RUCB)              CLEAR HIGH BYTE
         BCT   RE,BAH0170          GET EXTNT-1 IF ZERO NDEB E12 ZA25969
         LA    RLOC,FOUR(RLOC)      POINT TO NEXT UCB ADDRESS   SA40756
         LTR   RUCB,RUCB               IS ADDRESS ZERO          SA40756
         BZ    BAH0160                   IF YES, GET NEXT UCB   SA40756
         TM    UCBID,FULLMASK            IF NO, CK ID        LD YA00809
         BNO   BAH0160                  IF NOT ID, GET NXT  E12 ZA26129
         CLI   UCBTBYT3,UCB3DISP       CHECK IF GRAPHIC UCB
         BNE   BAH0170                   IF NO, CONTINUE SEARCH
         CLI   UCBTBYT4,UCBT2250         CK IF GRAPHIC DEVICE
         BE    BAH0350                     IF YES, CK IF TEB AVAIL
         CLI   UCBTBYT4,UCBT2260
         BE    BAH0350
         CLI   UCBTBYT4,UCBT1053
         BE    BAH0350
BAH0170  L     RSCB2,DEBAMLNG          LOAD DEB LINK FIELD
         LA    RSCB2,ZERO(RSCB2)       CLEAR HIGH ORDER BYTE
         LTR   RSCB2,RSCB2             ANY MORE DEBS
         BNZ   BAH0150                   IF YES, REPEAT SEARCH
         DROP  RSCB2
         EJECT
***********************************************************************
*                                                                     *
*                     BASIC ATTENTION HANDLING                        *
*                                                                     *
*      2. ISSUE GETMAIN FOR TEB SINCE NONE EXISTS FOR THIS TASK       *
*           A.  USE BRANCH ENTRY SINCE LOCAL LOCK IS HELD             *
*                                                                     *
***********************************************************************
         L     RSIZE,TEBSIZE    INITZ SIZE
         LR    RGMTCB,RTCB            CURRENT TCB ADDR
         L     RASCB,ASCBADR          CURRENT ASCB ADDR
         GETMAIN  R,LV=(0),BRANCH=YES
         XC    ZERO(TEBSZ,RADR),ZERO(RADR)    CLEAR TE CORE TO ZERO
         LR    RTEB,RADR                  SAVE TE ADDRESS
         USING TEB,RTEB
         EJECT
***********************************************************************
*                                                                     *
*                     BASIC ATTENTION HANDLING                        *
*                                                                     *
*       3. CREATE IRBS FOR GAR AND IFFCAN03; KEEP ADDRESSES IN TEB    *
*                                                                     *
***********************************************************************
         USING RBBASIC,RADR
         L     RE,EPGAR            LOAD GAR ADDRESS
         CIRB  EP=(0),SVAREA=YES,WKAREA=1,MODE=SUPR,KEY=SUPR,BRANCH=YESX
               ,RETIQE=NO,RETRN=YES                           LF YM4054
         ST    RADR,TEBGARB        STORE GAR IRB ADDRESS IN TE
         ST    RGMTCB,TEBTCB       STORE CURRENT TCB ADDRESS IN TE
         MVC   TEBGIOCR(FOUR),R0  STORE GIOCR ADR IN TEB     LG @ZM2360
         MVC   TEBGEIR(FOUR),EPGEIR  STORE GEIR ADDRESS IN TE
         OI    TEBFLGS,TEBFLAG       INDICATE THIS IS A TE
         XC    RBNEXAV(FOUR),RBNEXAV CLEAR IRB FIELD
BAH0180  L     RUCB,DEBUCBAD                                     SM4218
         CLI   UCBTBYT4,UCBT2250   IS THIS A 2250                SM4218
         BNE   BAH0200              IF NO, SKIP CREATE CAN03 IRB SM4218
         L     RIRB,TEBCKRB         IF YES, CK IF IRB EXISTS    SA38909
         LTR   RIRB,RIRB
         BNZ   BAH0190                 IF YES, SKIP CREATE      SA38909
         L     RE,EPCAN03              LOAD IFFCAN03 ADDRESS    SA38909
         CIRB  EP=(0),SVAREA=YES,WKAREA=1,MODE=SUPR,KEY=SUPR,BRANCH=YESX
               ,RETIQE=NO,RETRN=YES                           LF YM4054
         ST    RADR,TEBCKRB             STORE IFFCAN03 IRB ADDR IN TEB
         XC    RBNEXAV(FOUR),RBNEXAV    CLEAR FIELD IN IRB
         LR    RIRB,RADR                   KEEP ADDR AND ADD IQE
         DROP  RADR
         EJECT
***********************************************************************
*                                                                     *
*                     BASIC ATTENTION HANDLING                        *
*                                                                     *
*     4.  CREATE AND INITIALIZE IQES FOR THE IRBS                     *
*           A. IF 2250S:  ONE IQE FOR CANCEL KEY'S IRB                *
*                         THREE IQES FOR GAR'S IRB (THREE ATTN TYPES) *
*           B. IF 2260S:  ONE IQE FOR GAR'S IRB (ONE ATTN TYPE)       *
*                                                                     *
***********************************************************************
BAH0190  L     RSIZE,IQESIZE        INITZ SIZE
         GETMAIN  R,LV=(0),BRANCH=YES
         USING IQESECT,RADR
         USING RBBASIC,RIRB
         ST    RIRB,IQEIRB            PUT CAN03 IRB INTO IQE
         MVC   IQELNK(FOUR),RBNEXAV    CHAIN OLD IQE TO NEW IQE
         ST    RADR,RBNEXAV            PUT IQE ADDR IN IRB
         XC    IQEPARAM(FOUR),IQEPARAM   ZERO PARM FIELD IN IQE
         ST    RGMTCB,IQETCB           PUT TCB ADDR INTO IQE
         LA    RCOUNT,THREE         GAR IQE LOOP COUNT FOR 2250
BAH0200  SR    REXT,REXT            CLEAR REGISTER
         SR    RLOC,RLOC            SET INDEX TO ZERO
         IC    REXT,DEBNMEXT         LOAD NUMBER OF UCB EXTENTS
BAH0210  L     RUCB,DEBUCBAD(RLOC)   LOAD UCB ADDR
         LTR   RUCB,RUCB                IS UCB ADDR ZERO        SA40756
         BZ    BAH0230                     IF YES, CK NEXT UCB  SA40756
         CLI   UCBTBYT4,UCBT2250     IS DEVICE A 2250           SA35615
         BE    BAH0220                  IF NO, GET ONE IQE      SA35615
         EJECT
***********************************************************************
*                                                                     *
*                     BASIC ATTENTION HANDLING                        *
*                                                                     *
*     4.  CREATE AND INITIALIZE IQES FOR THE IRBS, CONT.              *
*     5.  SET UCB GCB TO INDICATE OK TO PROCESS ATTENTIONS            *
*                                                                     *
***********************************************************************
         LA    RCOUNT,ONE               GAR IQE LOOP COUNT FOR 2260
BAH0220  L     RIRB,TEBGARB             REINITIALIZE GAR'S IRB   SM4218
         L     RSIZE,IQESIZE    INITZ SIZE
         GETMAIN  R,LV=(0),BRANCH=YES
         ST    RIRB,IQEIRB              PUT GAR IRB ADDR IN IQE
         MVC   IQELNK(FOUR),RBNEXAV      CHAIN OLD IQE TO NEW IQE
         ST    RADR,RBNEXAV              PUT IQE ADDR IN IRB
         XC    IQEPARAM(FOUR),IQEPARAM    ZERO PARM FIELD IN IQE
         ST    RGMTCB,IQETCB            PUT TCB ADDR IN IQE
         BCT   RCOUNT,BAH0220           REPEAT IF MORE IQES FOR DEVICE
         ST    RTEB,UCBTEB              STORE TE ADDRESS IN UCB
         OI    UCBGCB,UCBGINIT+UCBGBAS    OK FOR BASIC ATTNS    SA32068
         L     RCALC,TEBUCBCT              LOAD TE USE COUNT
         LA    RCALC,ONE(RCALC)              INCREMENT USE COUNT BY ONE
         ST    RCALC,TEBUCBCT              STORE UPDATED COUNT
BAH0230  LA    RLOC,ADR(RLOC)     POINT TO NEXT UCB ADDRESS     SA40756
         BCT   REXT,BAH0210          REPEAT IF MORE 2260S TO SERVICE
         DROP  RADR,RIRB
         EJECT
***********************************************************************
*                                                                     *
*                     OPEN I/O PROCESSING FOR 2250S                   *
*                                                                     *
*                1. UNLOCK 2250 KEYBOARDS IF PRESENT                  *
*                                                                     *
*          NOTE:  BALR TO GIOCR FOR SA19907 HAS BEEN REPLACED         *
*                 WITH DIRECT I/O (EXCP)                              *
*                                                                     *
***********************************************************************
OPEN0240 BAL   RBACK,LL1REL          RELEASE LOCAL LOCK       LF YM4068
         LM    RCORE,RWTGC,R4        RESTORE INPUT REGS & WORK AREA
         CLI   UCBTBYT4,UCBT2250     IS DEVICE A 2250
         BNE   OPEN0270                  IF NO, SKIP KYBRD UNLOCK CODE
         L     RADR,UCBBTA        LOAD BFR TABLE ADR
         LA    RADR,ZERO(RADR)       ZERO HIGH ORDER BYTE
         LTR   RADR,RADR             CHECK IF A BUFFER TABLE EXISTS
         BNZ   OPEN0260                IF YES, OK TO UNLOCK KEYBOARD
OPEN0250 TM    UCBTBYT2,UCBTPFK      IS PFK BIT SET
         BNO   OPEN0270                IF NO, SKIP KEYBOARD UNLOCK
OPEN0260 L     RIOB,DCBIOBAD      GET ADDR OF IOB JUST CREATED  SA19907
         LM    RSCB1,RSCB2,RMICCW   GET CCW WHILE STILL IN DATAMGT KEY
         MODESET KEYADDR=DXUKEY,WORKREG=1                     LF YM5685
         USING DXIOB,RIOB         TEMPORARY BASE FOR IOB I/O
         TS    IOBAVAIL             SET IOB TO NOT AVAILABLE FOR USE
         STM   RSCB1,RSCB2,IOBCCW1  IOB FOR I/O IS RENTRANT & USER KEY
         LA    RSCB1,IOBCCW2         USE CCW2 AS TEMP ECB FOR I/O
         ST    RSCB1,IOBECBPT          PUT ECB ADDR INTO IOB
         LA    RSCB1,IOBCCW3         USE CCW3 AS TEMP OUTPUT AREA
         STCM  RSCB1,SEVEN,IOBCCW1+1   INSERT AREA ADDR INTO CCW LOC
         LR    RADR,RIOB             PUT IOB ADDR INTO REG 1 &
         SVC   EXCP                  ISSUE EXCP TO START I/O
         WAIT  ECB=IOBCCW2
         CLI   IOBCCW2,ECBCC              WAS I/O SUCCESSFUL
         BNE   IEC158I                     IF NO, ISSUE PD MSG/ABEND
         DROP  RIOB
         EJECT
***********************************************************************
*                                                                     *
*               OPEN CHECK FOR ADDITIONAL DCBS TO PROCESS             *
*                                                                     *
***********************************************************************
OPEN0270 EQU   *
         MODESET  EXTKEY=DATAMGT
         XC    ZERO(TWO,RWTGC),ZERO(RWTGC)   CLEAR ID IND COMPLETION
OPEN0280 EQU   *
         LA    RWTGC,WGOFF(RWTGC)      BUMP CURRENT WTG REGISTER
         LA    RPARC,ADR(RPARC)      BUMP CUR PARM REG TO NEXT ENTRY
         CLC   ZERO(TWO,RWTGC),GIDCNST1     CHECK NEXT WTG ENTRY
         BE    OPEN0010          YES START AGAIN
         SPACE
         CLC   ZERO(TWO,RWTGC),OPIDCNST    NO TEST FOR END OF TABLE
         BNE   OPEN0280                 NOT EQUAL CHECK NEXT ENTRY
         LR    RPARC,RPAR               RESET CURRENT PARM REG
         LA    RWTGC,WAOFF(RWTG)        RESET CURRENT WTG REG
OPEN0290 EQU   *
         CLI   ZERO(RWTGC),ZERO         TEST FOR ZERO ENTRY
         BNE   OPEN0300                 NOT - XCTL
         SPACE
         LA    RWTGC,WGOFF(RWTGC)      ZERO - GET NEXT ENTRY AND
         LA    RPARC,ADR(RPARC)      RETURN TO ZCHECK
         B     OPEN0290                RETURN
         EJECT
***********************************************************************
*                                                                     *
*              FREE OPEN SAVE AREA AND XCTL TO SYSTEM OPEN            *
*                   OR ANOTHER ACCESS METHOD EXECUTOR                 *
*                                                                     *
***********************************************************************
OPEN0300 EQU *
         LR    RADR,RSAVE         PRIME ADDR REG
         L     RSIZE,SAVSPSIZ     GET SAVE/WORK AREA DESCRIPTION
         FREEMAIN R,LV=(0),A=(1)
         MVC   SIX(TWO,RWTG),ZERO(RWTGC)     MOVE ID TO NAME
         MVC   TTROFF(THREE,RWTG),TWO(RWTGC)     MOVE TO TTR ROUTINE
         LA    RLINK,DXCCW12        GET ADDRESS OF NEW NAME FOR XCTL
         L     RE,DXREG0              RELOAD R0 FOR PD ID
         XCTL  DE=(RWTG),SF=(E,(RLINK))
         EJECT
***********************************************************************
*                                                                     *
*                   EXPRESS ATTENTION HANDLING                        *
*                                                                     *
*        1. PROCESS POLL LIST OF DCBS USED FOR ATTENTION HANDLING     *
*           A. IF LIST IS NOT ACTIVE, SET HIGH BYTE TO SHOW INITZ     *
*           B. ADD DCBS TO LIST AND INDEX, FIRST ENTRY IS 00          *
*                                                                     *
*               NOTE:  POLL LIST PROCESSING DONE IN USER'S KEY        *
*                                                                     *
***********************************************************************
EAH0310  BAL   RBACK,LL1REL         RELEASE LOCAL LOCK        LF YM5684
         L     RADR,DCBPOLST             GET POLL LIST ADR
         LA    RADR,ZERO(RADR)              CLEAR HI ORDER BYTE
         SR    REXT,REXT            CLEAR REG
         IC    REXT,DEBNMEXT          INSERT NO. OF UCBS
         L     RDCB,UDCBADR         GET USER DCB
         IC    RDEB,DCBOFLGS        SAVE OFLGS FOR I/O WITH 2250 AND
         L     RCORE,R4                 GET WORK AREA
         MODESET  KEYADDR=DXUKEY,WORKREG=15
         LTR   RADR,RADR                 DOES POLL LIST EXIST
         BE    EAH0340                     IF NO, SKIP PROCESSING
         SR    RCTR,RCTR           CLEAR REG
         TM    ZERO(RADR),POLSTACT   IS LIST ACTIVE (HAS DCB ADDRS)
         BO    EAH0320                IF YES, KEEP END OF LIST PTR
         ST    RADR,ZERO(RADR)         IF NO, START IS END OF LIST
EAH0320  L     RLOC,ZERO(RADR)      GET POLST PTR
EAH0330  LA    RLOC,FOUR(RLOC)     BUMP LAST DCB PTR TO NEXT ENTRY
         ST    RDCB,ZERO(RLOC)     USER DCB ADDRESS TO POLST
         STC   RCTR,ZERO(RLOC)         INDEX TO POLST
         LA    RCTR,ONE(RCTR)            ADJUST INDEX
         BCT   REXT,EAH0330            BRANCH IF MULTIPLE DEVICES
         ST    RLOC,ZERO(RADR)         STORE UPDATED END OF LIST PTR
         OI    ZERO(RADR),POLSTACT     SHOW LIST IS ACTIVE (HAS ENTRY)
         EJECT
***********************************************************************
*                                                                     *
*                   EXPRESS ATTENTION HANDLING                        *
*                                                                     *
*      2. ASSIGN 2250 BUFFER IF FEATURE IS ON DEVICE                  *
*      3. IF 2250 AND NO BUFFER, SEE IF PFKS ARE AVAILABLE AND        *
*         NEED UNLOCKING                                              *
*                                                                     *
***********************************************************************
EAH0340  MODESET  EXTKEY=DATAMGT
         LM    RCORE,RWTGC,R4        RESTORE INPUT REGS & WORK AREA
         CLI   UCBTBYT4,UCBT2250     CHECK FOR 2250 TYPE IN UCB
         BNE   OPEN0270               IF NOT, SKIP 2250 CODE
         L     RADR,UCBBTA            IF YES, CHECK FOR BFR TABLE ADDR
         LA    RADR,ZERO(RADR)                ZERO HIGH ORDER BYTE
         LTR   RADR,RADR
         BNZ   EAH0345                  IF BFR TAB EXISTS, ASSIGN BFR
         L     RDCB,DCBADR(RPARC)       IF NONE, GET COPIED DCB &
         B     OPEN0250                          CK FOR PFKS TO CLEAR
         USING BUFTAB,RADR
EAH0345  EQU   *
         MODESET KEYADDR=DXUKEY,WORKREG=14                   LG YM08088
         MVI   DCBOFLGS,X'12'   MOVE IN DUMMY FLAGS          LG YM08088
         MODESET EXTKEY=DATAMGT                              LG YM08088
         LA    RCOUNT,BTEXPSIZ       LOAD ADR OF EXPRESS BUFFER SIZE
         LA    RADR,SAVEAREA          USE FIRST TWO WORDS AS PLIST
         ASGNBFR (RDCB),(RCOUNT),MF=(E,(RADR))
         MODESET  KEYADDR=DXUKEY,WORKREG=14
         STC   RDEB,DCBOFLGS          RESTORE OFLGS
         LTR   RCODE,RCODE       BUFFER ASSIGNED OK?
         BNZ   IEC158I              IF NO, ISSUE PD MSG/ABEND
         L     RSCB1,DCBBFRST       IF YES, REFRESH COPY DCB
         MODESET  EXTKEY=DATAMGT
         L     RDCB,DCBADR(RPARC)      GET ADDR OF COPY DCB
         ST    RSCB1,DCBBFRST          REFRESH BFR FIELDS
         B     OPEN0260          END OF EXPRESS PROCESSING; UNLOCK KBRD
         EJECT
***********************************************************************
*               OUT-OF-LINE CODE AND INTERNAL SUBROUTINES             *
***********************************************************************
         SPACE
BAH0350  L     RTEB,UCBTEB        LOAD TE FIELD FROM UCB
         LA    RTEB,ZERO(RTEB)    CLEAR HIGH ORDER BYTE
         LTR   RTEB,RTEB            DOES TEB EXIST
         BZ    BAH0170                IF NO, CONT SEARCH
         LR    RGMTCB,RTCB       CURRENT TCB PTR     LG ZA00500,YM08809
         L     RASCB,ASCBADR     CURRENT ASCB PTR    LG ZA00500,YM08809
         B     BAH0180                IF YES, SKIP GARIRB/TEB INITZ
         SPACE
LL1REL   SETLOCK RELEASE,TYPE=LOCAL,RELATED=(LOCAL,IGG0193Y(LL1OBT)),  X
               REGS=SAVE                                      LF YM4068
         BR    RBACK
         SPACE
*     INTERNAL SUBROUTINE TO DETERMINE NUMBER OF PAGES IN MODULE JUST
*     LOADED.  NUMBER MUST BE OR'ED INTO HIGH BYTE OF EP IN REG 0
*     BEFORE SAVING ADDR IN APPENDAGE TABLE.
PAGECTR  EQU   *                                                  AOS/1
* CONVERT MODULE SIZE TO UPPER BOUND                              AOS/1
         LR    RLGH,RE                 GET LOAD ADDR IN WORK REG  AOS/1
         SLL   RCALC,THREE               BYTE COUNT= 8* DBLWRCTRS AOS/1
         AR    RCALC,RLGH                 UPPER BOUND+1           AOS/1
         BCTR  RCALC,RSIZE                UPPER BOUND-1           AOS/1
* ROUND LOAD ADDRESS DOWN TO PAGE BOUNDARY                        AOS/1
         SRL   RLGH,SHFT11                                        AOS/1
         SLL   RLGH,SHFT11             LOWER PAGE BOUNDARY        AOS/1
* COMPUTE NUMBER OF PAGES SPANNED BY MODULE                       AOS/1
         SR    RCALC,RLGH                 BYTES SPANNED BY MODULE AOS/1
         SRL   RCALC,SHFT11              NUMBER OF PAGE BOUNDS    AOS/1
         LA    RCALC,ONE(RCALC)            NUMBER OF PAGES        AOS/1
         SLL   RCALC,SHFT24              SHIFT TO HIGH BYTE       AOS/1
         OR    RE,RCALC               PREFIX TO LOAD ADDRESS      AOS/1
         BR    RBACK                   RETURN                     AOS/1
         EJECT
***********************************************************************
*   ISSUE PROBLEM DETERMINATION MESSAGES THRU SYSTEM OPEN MACRO       *
***********************************************************************
         SPACE 2
IEC157I  EQU   *
         BAL   RBACK,LL1REL        RELEASE LOCAL LOCK
         MODESET  EXTKEY=DATAMGT
         LM    RCORE,RWTGC,R4        RESTORE INPUT REGS
         USING FORCORE,RCORE
         DMABCOND    91,PDLOAD,RES=NO,REGSAVE=YES                S21016
         ST    RE,DXREG0           SAVE R0 PD ID
         B    OPEN0300
         SPACE 2
IEC158I  EQU   *
         MODESET  EXTKEY=DATAMGT
         DMABCOND     92,PDLOAD,RES=NO,REGSAVE=YES               S21016
         ST    RE,DXREG0           SAVE R0 PD ID
         B     OPEN0300
         SPACE 3
IEC159I  EQU   *
         DMABCOND    93,PDLOAD,RES=NO,REGSAVE=YES                S21016
         ST    RE,DXREG0           SAVE R0 PD ID
         B     OPEN0300
         EJECT
***********************************************************************
*                                                                     *
*                        CONSTANTS                                    *
*                                                                     *
***********************************************************************
         SPACE 1
*                  DEB ID'S FOR MODULES LOADED
*         (APPENDED TO IGG019 BY SYSTEM CLOSE FOR DELETION)
IDGIOCR  DC    C'OA'
IDCEXCE  DC    C'OB'
IDPGFIX  DC    C'OC'              ID OF PAGE FIX APPNDG           AOS/1
IDGAR    DC    C'OE'
IDGEIR   DC    C'OJ'
OPIDCNST DC    C'0S'
GIDCNST1 DC    C'3Y'
         DS    0F       ALIGN BOUNDARIES FOR LOAD INSTRUCTIONS
RMICCW   DC    X'0E00000000000003'   CCW FOR RMI I/O TO CLEAR 2250 KBRD
DEBSPOOL DC    X'E6000000'     SP 230 FOR DEB        LB  AOS/1
IOBSPOOL DC    X'FA000000'        250     IOB
SAVSPSIZ DC    X'E600005C'     SP 230 FOR 92 BYTE SAVE/WORK AREA
IQESIZE  DC    X'E9000010'     SP 233 FOR 16 BYTE IQE
TEBSIZE  DC    X'EB000024'     SP 235 FOR 32 BYTE TEB        LG @ZM2360
NUMONE   DC    H'01'
SIXTEEN  DC    H'16'
HWC256   DC    H'256'
SEVNTEEN DC    H'17'
CLEAR    XC    0(1,RADR),0(RADR)
         USING TIOENTRY,RTIOT
UCBMOVE  MVC   0(1,RDEL),TIOESTTB
         SPACE 5
**********************************************************************
*                                                                    *
*                SPECIAL MAINTENANCE PATCH AREA FOR FIELD USE        *
*                                                                    *
**********************************************************************
PATCH    DC    C'IGG0193Y 50 BYTE PATCH AREA.'
         DC    C'50 BYTE AREA ENDS HERE'
         EJECT
***********************************************************************
*  LENGTH AND PATCH PARAMETERS HAVE BEEN ADDED TO XCTLTABL TO         *
*  BYPASS PROBLEMS CAUSED BY DEFAULT TO 1K SIZE MODULES               *
***********************************************************************
         XCTLTABL ID=(PDLOAD,6M),SVC=19,LENGTH=3000,PATCH=100
         EJECT
***********************************************************************
*                                                                     *
*                        DSECTS                                       *
*                                                                     *
*        BUFTAB         FORCORE             TEB                       *
*        CVT            IQE                 TIOT                      *
*        DCB            PSA                 UCB                       *
*        DEB            RB                  SAVEAREA                  *
*                       TCB                                           *
*                                                                     *
***********************************************************************
         SPACE 5
BUFTAB   DSECT
*
BTTOTSEG DS    CL2     HEADER:  TOTAL NUMBER OF 256 BYTE SECTIONS
BTNUMDEV DS    CL2                              DEVICES SHARING BUFFER
BTEXPSIZ DS    CL2                              SECTIONS FOR EXPRESS
BTTOTAVL DS    CL2                              SECTIONS STILL AVAIL
*
BTDVTOTA DS    CL2     DEVICES: TOTAL NUMBER OF SECTIONS AVAIL THIS DEV
BTDVDISP DS    CL2              DISPL INTO BT FOR THIS DEV ZONE
BTDVZONE DS    CL2              NBR OF SECTIONS IN THIS DEV ZONE
BTDVGAR  DS    CL2              NBR OF GUARANTEED SECTIONS FOR THIS DEV
*
BTASGMT  DS    CL56    ASGMT:   ASSIGNMENTS WILL CONTAIN DEVICE IDS
         EJECT
*        CVT   DSECT=YES,LIST=YES
         CVT   DSECT=YES
         EJECT
***********************************************************************
*                                                                     *
*                        DCB DSECT                                    *
*                                                                     *
***********************************************************************
         SPACE 1
         DCBD  DSORG=GS
**********************************************************************
*                                                                     *
*                    ADDITIONAL DCB EQUATES FOR DSECT                 *
*                                                                     *
***********************************************************************
DCBGNCPL EQU   X'00'   LOW END OF RANGE FOR CHANNEL PROGRAMS IS 1
DCBGNCPH EQU   X'63'   HIGH END OF RANGE FOR CHANNEL PROGRAMS IS 99
         EJECT
***********************************************************************
*                                                                     *
*                        GRAPHIC DEB DUMMY SECTION                    *
*                                                                     *
***********************************************************************
         SPACE 1
IECTDEB  DSECT
DEBEOEA  DS    CL4                     END OF EXTENT APP ROUTINE PTR
DEBSIOA  DS    CL4                     START I/O APP ROUTINE PTR
DEBPGFX  EQU   X'80'      ADDR AVAILABLE FOR PAGE FIX ENTRY POINT AOS/1
DEBPCIA  DS    CL4                     PROG CONTROL APP ROUTINE PTR
DEBCEA   DS    CL4                     CHANNEL END APP ROUTINE PTR
DEBXCEA  DS    CL4                     EX CHANNEL END APP ROUTINE PTR
DEBWKARA DS    CL1                     I/O SUPPORT WORK AREA
DEBDSCBA DS    CL7                     I/O SUPPORT DSCB AREA
DEBDCBMK DS    CL4                     I/O DCB MODIFICATION MASK
DEBLNGTH DS    CL4                     DEB LENGTH IN DOUBLE WORDS
DEBNMSUB DS    CL1                     NO. SUBROUTINES LOADED BY OPEN
DEBTCBAD DS    CL3                     TCB ADDR OF THIS DEB
DEBAMLNG DS    CL1                     NO. BYTES IN ACCESS METHOD SECT
DEBDEBAD DS    CL3                     NEXT DEB PTR IN THIS TASK
DEBOFLGS DS    CL1                     DATA SET STATUS FLAG
DEBIRBAD DS    CL3                     IRB ADDR FOR ERROR EXIT
DEBOPATB DS    CL1                     FILE TYPES
DEBSYSPG DS    CL3                     SYSTEM PURGE CHAIN
DEBNMEXT DS    CL1                     NO. OF EXTENTS BUILT FOR DSCB'S
DEBUSRPG DS    CL3                     USER PURGE CHAIN
DEBPRIOR DS    CL1                     TCB PRIORITY-IOS CH QUEING IOB
DEBECBAD DS    CL3                     IOS INTERNAL ECB ADDR
DEBPROTG DS    CL1                     TASK PROTECTION TAG
DEBID    EQU   X'0F'          DEB ID IN LOW ORDER BITS OF DEBPROTG
DEBDCBAD DS    CL3                     DCB ADDR
DEBEXSCL DS    CL1                     EXTENT SCALE
DEBAPPAD DS    CL3                     I/O APP BLOCK PTR
DEBUCBAD DS    CL4                     UCB PTR FOR GIVEN DATA EXTENT
         IECDSECS  MAIN,EXPAND=YES
*
*        ADDITIONAL IOB LABELS FOR GAM EXTENSION
*
         ORG   DXIOB
IOBDX    DS    8F      USE WORK AREA LABELS FOR STD FIELDS
*       GAM EXTENSION
IOBUCBX  DS    0CL1    UCB INDEX
IOBADRPT DS    F       ADDRESSING LIST POINTER
IOBAVAIL DS    0CL1    BIT 0:  ON IF IOB NOT AVAILABLE FOR USE
IOBNXTPT DS    F       NEXT IOB POINTER
IOBCCW1  DS    2F      MAX NBR OF CCWS FOR A GRAPHIC CHANNEL PGM IS 4
IOBCCW2  DS    2F
IOBCCW3  DS    2F      * USED AS ECB FOR RMI I/O *
IOBCCW4  DS    2F      * USED FOR INFO FROM RMI I/O *
         EJECT
         IHAIQE
         EJECT
         IHAPSA
         EJECT
         IHARB
         EJECT
         IKJTCB
         EJECT
TEB      DSECT
TEBCKRB  DS    F       ADDR OF:      IRB FOR CANCEL KEY (IFFCAN03)
TEBREB   DS    F                     GAM ROUTINE ENTRY BLOCK
TEBTCB   DS    F                     TCB
TEBCKQE  DS    F                     LIST OF CANCEL KEY IQES
TEBUCBCT DS    F       USE COUNT:    NBR OF UCBS USING THIS TEB
TEBFLGS  DS    F       FLAG BYTES:
TEBFLAG  EQU   X'80'                 TEB ID FLAG
TEBGARB  DS    F       ADDR OF:      IRB FOR GAR (IGG019OE)
TEBGEIR  DS    F                     GEIR (IGG019OJ) ENTRY POINT
TEBGIOCR DS    F               GIOCR(IGG0190A) ENTRY POINT   LG @ZM2360
         EJECT
TIOT     DSECT
         IEFTIOT1
         EJECT
UCB      DSECT
*        IEFUCBOB  LIST=YES
         IEFUCBOB
         EJECT
**********************************************************************
*                                                                     *
*                    ADDITIONAL UCB EQUATES FOR DSECT                 *
*                                                                     *
***********************************************************************
         SPACE 3
*          UCBTYP, BYTE 2, BIT SETTINGS
UCBTPFK  EQU   X'10'           UNIT TYPE BIT 3 FOR PFK FEATURE
         SPACE 3
*          UCBTYP, BYTE 4, BIT SETTINGS
         SPACE
UCBT2250 EQU   X'02'           UNIT TYPE ID FOR 2250 DEVICE
UCBT2260 EQU   X'03'                        FOR 2260
UCBT1053 EQU   X'04'                        FOR 1053
         SPACE 2
*          UCBGCB, BIT SETTINGS
         SPACE
UCBGINIT EQU   X'40'           OK TO ACCEPT ATTNS NOW           SA32068
UCBGBAS  EQU   X'08'           BASIC ATTENTION HANDLING BEING USED
UCBGATNB EQU   X'FC'           RESET ATTENTION BITS FOR/FROM EXPRESS
         EJECT
***********************************************************************
*                                                                     *
*                        SAVE AREA DSECT                              *
*                                                                     *
***********************************************************************
SAVEAREA DSECT
WKSA     DS    5F             WORK WORDS FOR LOCAL LOCK WHEN REGS=SAV
R0       DS    F                       REG ZERO    *  REGS MAP INTO  *
