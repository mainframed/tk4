         TITLE 'GLOBLOCK FOR SET/FREE OF LOCAL/UCBLOCKS'    D11 ZA07645
         MACRO                                              D11 ZA07645
&LABEL   GLOBLOCK &FUNC,&REGS=,&RELATED=                    D11 ZA07645
.* REGS= 2 SYMBOLIC OR ACTUAL REGISTERS AVAIL FOR WORKREGS  D11 ZA07645
.* GENS GETLOCK LOCAL,UCBLOC ALGO,GETLOCK GLOBAL UCBLK      D11 ZA07645
.* ASSUMES THAT UCB DSECT (PREFIX=YES) IS ADDRESSIBLE       D11 ZA07645
.* DEPENDENT ON FOLLOWING DC STATEMENTS:                    D11 ZA07645
.* UCBLEN   DC    AL2(UCBBTB+L'UCBBTB-UCBOB+UCBCURPX) 2250UCBLENZA07645
.* UCBPRFXL DC    AL2(UCBCURPX)  UCB LOCKWORD PREFIX LEN
         LCLA  &NUM                                         D11 ZA07645
         LCLC  &WORK1,&WORK2,&MODE                          D11 ZA07645
         AIF   (T'&REGS NE 'O').REGSTHR                     D11 ZA07645
         MNOTE 12,'GLOBLOCK - NO WORKREGS GIVEN'            D11 ZA07645
         MEXIT                                              D11 ZA07645
.REGSTHR ANOP                                               D11 ZA07645
&NUM     SETA  N'&REGS                                      D11 ZA07645
         AIF   (&NUM EQ 2).REGSOK                           D11 ZA07645
         MNOTE 12,'GLOBLOCK - TWO (2) WORKREGS NOT GIVEN'   D11 ZA07645
         MEXIT                                              D11 ZA07645
.REGSOK  AIF   (T'&FUNC EQ 'O').NOFUNC                      D11 ZA07645
         AIF   (('&FUNC' NE 'OBTAIN') AND                              *
                ('&FUNC' NE 'RELEASE')).INVFUNC             D11 ZA07645
         AIF   ('&LABEL' EQ '').NOLAB                       D11 ZA07645
&LABEL   EQU   *                                            D11 ZA07645
.NOLAB   AIF   ('&FUNC' EQ 'RELEASE').SKIPLOC               D11 ZA07645
*  GET LOCAL LOCK ........                                  D11 ZA07645
         SETLOCK OBTAIN,TYPE=LOCAL,REGS=USE,MODE=UNCOND,    D11 ZA07645*
               RELATED=&RELATED                             D11 ZA07645
.SKIPLOC ANOP                                               D11 ZA07645
&WORK1   SETC  '&REGS(1)'           FIRST WORKREG           D11 ZA07645
&WORK2   SETC  '&REGS(2)'           SECOND WORKREG          D11 ZA07645
         SR    &WORK1,&WORK1       CLEAR FOR IC OF DEVNDX   D11 ZA07645
         IC    &WORK1,UCBDI        DEV INDEX                D11 ZA07645
         BCTR  &WORK1,0            DOWN BY ONE              D11 ZA07645
         MH    &WORK1,UCBLEN *2250UCBLEN=DISPL FROM 1STUCB  D11 ZA07645
         LR    &WORK2,RUCB         DUPE UCB ADDR            D11 ZA07645
         SR    &WORK2,&WORK1       BACKUP TO 1STUCB OF CU   D11 ZA07645
         SH    &WORK2,UCBPRFXL     BACKUP TO ITS LOCKWORD   D11 ZA07645
         AIF   ('&FUNC' EQ 'RELEASE').RELUCB                D11 ZA07645
*  OBTAIN UCBLOCK .......                                   D11 ZA07645
         SETLOCK OBTAIN,MODE=UNCOND,ADDR=0(&WORK2),         D11 ZA07645*
               REGS=USE,RELATED=&RELATED,TYPE=IOSUCB        D11 ZA07645
         AGO   .COMUCB                                      D11 ZA07645
.RELUCB  ANOP                                               D11 ZA07645
*  RELEASE UCBLOCK ........                                 D11 ZA07645
         SETLOCK RELEASE,ADDR=0(&WORK2),REGS=USE,           D11 ZA07645*
               RELATED=&RELATED,TYPE=IOSUCB                 D11 ZA07645
.COMUCB  ANOP                                               D11 ZA07645
* OTHER UCBS ON THIS SAME CONTROL UNIT SHOULD RESOLVE       D11 ZA07645
* (VIA UCBADDR AND DEVNDX TO SAME FIRST UCB).               D11 ZA07645
         SPACE 3                                            D11 ZA07645
         AIF   ('&FUNC' NE 'RELEASE').MEXIT                 D11 ZA07645
*  RELEASE LOCAL LOCK.....                                  D11 ZA07645
         SETLOCK RELEASE,TYPE=LOCAL,                        D11 ZA07645*
               RELATED=&RELATED,REGS=USE                    D11 ZA07645
         MEXIT                                              D11 ZA07645
.NOFUNC  MNOTE 12,'GLOBLOCK-NO FUNCTION SUPPLIED'           D11 ZA07645
         MEXIT                                              D11 ZA07645
.INVFUNC MNOTE 12,'GLOBLOCK-FUNCTION NOT OBTAIN/RELEASE'    D11 ZA07645
.MEXIT   MEND                                               D11 ZA07645
         TITLE ' ASSIGN BUFFER SECTION OF IGC0007A'
***********************************************************************
*                                                                     *
* MODULE NAME:            IGC0007A (OS/VS2)                           *
*                                                                     *
* DESCRIPTIVE NAME:       BUFFER MANAGEMENT FOR 2250S                 *
*                                                                     *
* COPYRIGHT:              NONE                                        *
*                                                                     *
* STATUS:                 RELEASE 2.0                                 *
*                                                                     *
*                                                                     *
*FUNCTION/OPERATION: CONTROLS ASSIGNMENT AND RELEASE OF BUFFER STORAGE*
*   IN THE BUFFERED 2250,MODEL 1, AND IN THE 2840 DISPLAY CONTROL USED*
*   BY THE 2250, MODEL 2.                                             *
*                                                                     *
*ENTRY POINTS: IGC0007A - VIA AN SVC IN BUFFER MANAGEMENT MACROS      *
*                                                                     *
*INPUT: ADDRESS OF PARAMETER LIST BUILT BY MACROS IN REGISTER 1       *
*                                                                     *
*OUTPUT: RETURN CODES IN REGISTER 15                                  *
*                                                                     *
*              00 = REQUEST FULFILLED                                 *
*                                                                     *
*              04 = REQUEST AMT EXCEEDS AVAILABLE AMT     (ASGNBFR)   *
*                                                                     *
*              08 = CONTIGUOUS STORAGE NOT AVAILABLE     (ASGNBFR)    *
*                                                                     *
*              0C = DCB NOT OPEN                            ALL       *
*                                                                     *
*              10 = RELEASE REQUEST GT TOTAL ASSIGNED  (RELEASE)      *
*                                                                     *
*              14 = BUFFER RESTART ADDRESS NOW INVALID  (RELEASE)     *
*                                                                     *
*              18 = INVALID ASSIGN REQ (ZERO OR NEG)     (ASSIGN)     *
*                                                                     *
*              1C = INVALID INVOCATION CODE                 ALL       *
*                                                                     *
*              20 = INVALID RELEASE REQ (ZERO OR NEG)     (RELEASE)   *
*                                                                     *
*              24 = MOD1 2250 BUFFER EXHAUSTED           (ASSIGN)     *
*                                                                     *
*              28 = IOB DOESNT POINT BACK TO DCB            ALL       *
*                                                                     *
*              2C = DCB NOT GAM                             ALL       *
*                                                                     *
*              30 = ATTEMPT TO RELEASE SECTION(S) NOT OWNED (RELEASE) *
*                                                                     *
*              34 = UNABLE TO CLEAR REQUESTED BFR TO ZERO  (ASSIGN)   *
*                                                                     *
*              38 = BUFFER CONTROL TABLE ADDR NOT IN UCB    ALL       *
*                                                                     *
*EXTERNAL ROUTINES: N/A                                               *
*                                                                     *
*EXITS-NORMAL: SVC 3 FOR RETURN CODES 0 AND X'14'                     *
*                                                                     *
*     -ERROR:  ABEND16E (VIA DEBCHK) IF INVALID DEB.                  *
*     -ERROR:  XCTL TO MSG MOD (IGC0207A) W NONZERO CODE OTHER        *
*              THAN X'14'.                                            *
*                                                                     *
*TABLES/WORKAREAS: BUFFER TABLES BUILT AT SYSGEN TIME IN PROTECTED    *
*   CORE FOR EACH BUFFERED 2250 MODEL 1 AND EACH 2840 CONTROL UNIT.   *
*                                                                     *
*ATTRIBUTES: SUPERVISOR MODE, REENTERABLE.                            *
*            SUPERVISOR AND USER KEYS.                                *
*                                                                     *
*NOTE1: A HAND-EXPANDED CALL FOR MACRO GWRITE EXISTS AT LABEL 'CLRBFR'*
*NOTE2: AN INTERNAL MACRO (AT THE BEGINNING OF THIS MOD) IS USED      *
*       TO GET AND FREE THE LOCAL AND IOSUCB LOCKS NEEDED TO PROTECT  *
*       THE BUFFER TABLE GENNED FOR EACH 2840 CONTROL UNIT AS A       *
*       GLOBAL RESOURCE FOR ALL DEVICES ON THAT CONTROL UNIT.         *
*                                                                     *
***********************************************************************
         EJECT
IGC0007A CSECT
*   SEE LABEL 'MODID' FOR LAST CHANGE DATE; FORMAT:  NAME.SYSREL.DATE
*C081400,084200,092804,093302,096521,099242                   LF YM4067
* SEQ NBRS MUST BE RESPECIFIED BECAUSE OF RESEQ FOR VS
*0638,025600-026000                                                JFCA
*2515,018600-019800,020000                                         TMGA
* 021200,021800,022200,025600-025800,027200,029000,049400,063200 S21016
* 063800-064400,065000-065200,077400,085400-085800               S21016
* 034200,034800,043000-043200,063000                             S21016
*0639,018800-019200                                                JFCB
* 025610-025680,070200,085900                                 LB  AOS/1
*C022600                                                         Y01021
*A027150                                                        YM1899
*A14274,23500-23580,38900-38916                               LG YM5684
*A14399-15320,A42714-42760,A12500,A12820                     LG @ZM2360
*C65300                                                     D11 ZA06400
*A42612,D43184,C42761,42788,42797,43103,43157,43202         D11 ZA07642
*A35900                                                     D11 ZA07643
*A67372,71700-50,80850-900,91600-61,92274-80,C32700-800,    D11 ZA07645
*C42602-03,67305-14,93470,93720-30,A111300-111400           D11 ZA07645
*A42645,C43174-78,A43208                                    D11 ZA07647
*A14310,42720                                               D11 ZA11044
*A18109,D90338                                              D11 ZA11045
*A42734-58,D042761                                          D11 ZA11441
*C62800,63200,63400,63690,64600,64900,65300,66100,85900     D11 ZA11442
*A67344-68,96200-40,100518,101967                           D11 ZA11442
         EJECT
*
*                  REGISTERS
*
RX       EQU   0
RY       EQU   1
RZ       EQU   2
RA       EQU   3
RB       EQU   4
RBFADDR  EQU   4             BUFFER ADDRESS REGISTER
RTCB     EQU   4         CURRENT TCB REGISTER
RC       EQU   5
RD       EQU   6
RE       EQU   7
RCODE    EQU   7                       RET CODE FOR ERROR MSG MODS21016
R8       EQU   8                       ADDR EP NAME FOR XCTL     S21016
RUCB     EQU   8
RDCB     EQU   9
RBFTBL   EQU   10                       BUFFER TABLE DSECT REGISTER
LINK     EQU   10            REGISTER AS WORK REG
RDSECT   EQU   11                       PARAM LIST DSECT REGISTER
RBASE    EQU   12                       CONTROL SECTION BASE REGISTER
RSAVE    EQU   13                       SAVEAREA REGISTER
RNSI     EQU   14                       RETURN LINKAGE REGISETER
R14      EQU   14                    WORK REGISTER           LG @ZM2362
RBAL     EQU   15                       LINKAGE REGISTER
RHOLD    EQU   15
R15      EQU   15                    WORK REGISTER           LG @ZM2362
         EJECT
*RETURN CODE EQUATES
*
         SPACE 3
TOOBIGAV EQU   4                   REQ GT AVAIL BFR         D11
TOOBIGZN EQU   8                   REQ GT ZONESIZE          D11
UNOPEN   EQU   X'0C'                   DCB NOT OPEN              S21016
BADRLS   EQU   X'10'               RLSE GT TOTASGND
BADADR   EQU   X'14'               BAD RSTRT ADDR ON RLSE
BFRPRM   EQU   X'18'               ASGN REQ NOT POS.
BADREQ   EQU   X'1C'                   BAD REQUEST CODE          S21016
RELNEG   EQU   X'20'                   RELEASE NEGATIVE COUNT    S21016
NOSECTS  EQU   X'24'                   CONTIG BUFFER UNAVAILABLE S21016
DCBBAD   EQU   X'28'                   DCB AND IOB DCB NOT EQUAL S21016
NOTGRPHC EQU   X'2C'                   NON-GRAPHIC DCB           S21016
BADREL   EQU   X'30'                   RELEASE FOR UNASSIGNED    S21016
NOCLEAR  EQU   X'34'         UNABLE TO DO I/O TO CLEAR BUFFER
NOBFTBL  EQU   X'38'         NO BUFFER TABLE ADDRESS IN UCB   LG YM5684
         SPACE
* FURTHER EQUATES
D0       EQU   0                       DISPLACEMENT              S21016
D8       EQU   8                       DISPLACEMENT              S21016
COMPLETE EQU   X'7F'          ECB COMPLETED WITHOUT ERROR.
MASK1    EQU   X'FF'
MOD1     EQU   X'31'               DEVTYPE = MOD1 2250      D11
DECB     EQU   76      DISPL. OF DECB INTO GOTTEN CORE      D11 ZA11044
HEADER   EQU   40
SVAREA   EQU   76            SIZE OF 18-WORD SAVE AREA      LG @ZM2362
DECBLEN  EQU   32            LEN OF GWRITE DECB GOTTEN      D11 ZA07642
DEBUCBAD EQU   32            DISPL OF UCBADDR IN DEB        D11
FOUR     EQU   4             CONSTANT
BFR      EQU   16            DISP. OF BUFFER ADDRESS IN DCB
CVT      EQU   16
CVTCB    EQU   0         DISP. OF TCB TABLE ADDR. IN CVT
CURTCB   EQU   4         DISP OF CURRENT TCB ADDR. IN TABLE
SEVEN    EQU   7                     CONSTANT SEVEN(7)       LG @ZM2362
TEB      EQU   28                    OFFSET TO TEB IN UCB    LG @ZM2362
TEBGIOCR EQU   33                OFFSET TO GIOCR ADDR IN TEB LG @ZM2362
GIOCR    EQU   49                    OFFSET TO GIOCR IN DCB  LG @ZM2362
SVGIOCR  EQU   72            DISP TO GIOCR ADR IN SVAREA     LG @ZM2362
SVCDCB   EQU   X'54'         DISP TO DCB FOR SVCLIB IN CVT   LG @ZM2362
DCBBFRST EQU   16     DCB BUFFER START-ZEROED IF ERRORS     D11
         EJECT
*           INITIALIZE BASE AND DSECT REGISTERS
         SPACE 3
         BALR  RBASE,RX            ESTABLISH ADDRESSABILITY
         USING *,RBASE
ORG      EQU   *                   ORIGIN FOR MSG1,2,3      D11 ZA11045
         B     START                                        D11
MODID    DC    C'IGC0007A.VS2R3.&SYSDATE'       MODULE EYECATCHER ID
START    LR    RDSECT,RY           MAP PARMLIST DSECT       D11
         USING PARLST,RDSECT            ADDRESS PASSED IN GR1
*CHECK DCB FOR VALIDITY AND OPENED
         L     RDCB,CODE           HIORD BYTE=CODE;LOORD3=DCBADDR
         TM    48(RDCB),X'10'           CHECK DCB FOR OPENED CONDITION
         BZ    ERRDCB1                 ISSUE RET CODE IF NOT OPENS21016
         L     RZ,28(RDCB)              RZ CONTAINS IOB ADDR,TO CHECK
         CLC   DCBADR(3),21(RZ)         IOB FOR VALIDITY OF THIS DCB
         BNE   ERRDCB2                 ISSUE RET CODE-INVALID DCBS21016
         TM    27(RDCB),X'80'           VALID GAM DCB? IF NOT GO TO ERR
         BZ    ERRDCB3                 ISSUE RET CODE-INVALID DCBS21016
*ACCESS UCB
         LA    RDCB,D0(RDCB)           CLEAR HI-BYTE DCB ADDR LB Y01021
         DEBCHK (RDCB),TYPE=VERIFY,AM=GAM   VALIDATE DEB      LB Y01021
         LR    R8,RY                   DEB ADDRESS            LB Y01021
         L     RUCB,DEBUCBAD(R8)        RUCB CONTAINS UCB ADR FROM DEB
         USING UCBOB,RUCB                                   D11
*SET UP BUFFER TABLE DSECT
         L     RBFTBL,UCBBTB-1     LOAD BFRTBL ADR FROM UCB
         LA    RBFTBL,0(RBFTBL)        ELIMINATE DEVNDX
         LTR   RBFTBL,RBFTBL        BUFFER TABLE EXIST?       LG YM5684
         BNZ   CKCODE             YES,CONTINUE PROCESSING     LG YM5684
         LA    RCODE,NOBFTBL      LOAD RETURN CODE            LG YM5684
         B     XCTLOAD3           XCTL TO LOAD 3             D11 YM5684
CKCODE   EQU   *
         USING BFRTBL,RBFTBL
*CHECK POSITIVELY FOR REQUEST CODE IN PARAM LIST
         CLI   CODE,X'04'               IF CODE '04' GO TO ASSIGN SUB-
         BE    ASSIGN                   ROUTINE
         CLI   CODE,X'08'               IF CODE '08' GO TO RELEASE SUB-
         BE    RELEASE                  ROUTINE
         CLI   CODE,X'0C'               IF CODE '0C' GO TO RELEASE ALL
         BE    RLSEALL                          TRANSFER TO LOAD2
         CLI   CODE,X'10'          IF CODE '10' GO TO BUFINQ SUBROUTINE
         BE    BUFINQ                          TRANSFER TO LOAD2
         LA    RCODE,BADREQ         LOAD RETURN CODE             S21016
         EJECT
***********************************************************************
*                                                                     *
*              TRANSFER CONTROL MECHANISM TO LOAD 3, MESSAGES         *
*                                                                     *
***********************************************************************
XCTLOAD3 EQU   *                       SET UP TO XCTL TO MSG MOD S21016
         LA    R8,EPLOAD3              ADDR OF NAME FOR LOAD 3   S21016
         LR    RY,RDSECT           RESTORE REG 1                YM1899
         L     RZ,CVT                  LOAD CVT ADDR
         L     RZ,0(RZ)            LOAD TCB PTR TO DOUBLE WORD
         L     RZ,4(RZ)            LOAD CURRENT TCB ADR
         L     RZ,0(RZ)            LOAD CURRENT RB PTR
         LA    RBAL,96(RZ)         LOAD ADR OF REMOTE SUPRVSR PARAM LST
         LA    RZ,104(RZ)               WHICH IS AT SVRB+96, THEN SET
         ST    RZ,0(RBAL)               UP LIST AS FOLLOWS --
         SR    RA,RA                    WORD1 - PTR TO BUFINQ ADR (*+8)
         ST    RA,4(RBAL)               WORD2 - DCB ADR SET TO 0
         MVC   D8(D8,RBAL),D0(R8)           WORD 3,4 - EP NAME   S21016
         XCTL  MF=(E,(1)),SF=(E,(15)) TRANSFER CONTROL
EPLOAD3  DC    CL8'IGC0207A'           NAME FOR MSG MODULE       S21016
         EJECT
*     *     *     *     *     *    *     *     *     *     *     *
*                                                                *
*THE FOLLOWING SUBROUTINE ASSIGNS BUFFER STORAGE AND IS ACCESSED *
*WHENEVER THE ASGNBFR MACRO-INSTRUCTION IS ISSUED.               *
*                                                                *
*     *     *     *     *     *     *     *     *     *     *    *
ASSIGN   L     RA,BUFPRM                RA EQ ADDR OF HALFWORD
         LH    RA,0(RA)                 RA EQ BYTES REQUESTED
         LA    RX,MASK1                 RX CONTAINS X'FF',ADD TO RA,TO
         AR    RA,RX                    CONVERT BYTES TO SECTIONS
         SRA   RA,8                     PUT NUMB IN LO-ORDER BYTE OF RA
         SR    RX,RX                    CLEAR RX TO ZERO AND COMPARE TO
         CR    RA,RX               CHECK RA FOR NEG OR ZERO REQUEST
         BNH   ERRPRM                   GO TO RET CODE '18' RTN
ASGNGET  GLOBLOCK OBTAIN,REGS=(RB,RC),                      D11 ZA07645*
               RELATED=(ASGNREL,ENABLE)                     D11 ZA07645
*INITIALIZE SUBROUTINE
BASIC    LH    RB,TOTAVAIL         SET RB EQ TO TOTAVAIL IN BFRTBL
         LH    RC,NUMDEV                RC HAS NUMBER OF DEVICES/2840
         CLR   RA,RB                    IF REQUEST GREATER THAN AMT
         BH    ERRASG4                  AVAIL,LOAD RETURN CODE
*ACCESS AND SEARCH THIS DEVICE'S ZONE
         BAL   RNSI,INFODISP      GO TO INFO RTN
*
         LH    RE,4(RZ)                 RE CONTAINS THIS DEVICE'S ZONSZ
         CLR   RA,RE               COMPARE REQUEST TO ZONESZ
        BH    ERRASG8             IF REQUEST GREATER NO ASGNMENT
*BEGIN SEARCH OF THIS DEVICE'S ZONE--
         LH    RB,2(RZ)                 RB EQ DEVICE'S ZONE DISP
         AR    RB,RBFTBL                RB EQ DISP + ADDR OF BFR TBL
         LR    RX,RZ                    SAVE DISP OF THIS DEVICE'S INFO
         SR    RY,RY               CLEAR R1 FOR TRT         D11 ZA07643
REEX     EX    RE,SEEK1            SEARCH FOR AVAIL SECTION
* SEEK1= TRT 0(1,RB),FREESCTN - FREESCTN=X'FF00000000'
         BC    10,CONTINU1             IF NOT FOUND GO TO NEXT ZONE
         BAL   14,COMPUTE              SET UP REG AND CTRS
*OTHERWISE SEARCH FOR CONTIGUOUS STORAGE IN DEVICE'S ZONE
         EX    RA,SEEK2                 SEARCH FOR CONTIG PER REQUEST
* SEEK2= TRT 0(1,RB),CONTIG - CONTIG=X'00FFFFFFFF'
         BC    4,GETADR
         EJECT
*
*UPDATE TABLES, ASSIGN STORAGE AND SET DCB FLDS
*
SETDCB   LR    RZ,RB                    CONVERT BFR TBL ENTRY DISP TO
         SR    RZ,RBFTBL                ACTUAL BFR STORAGE ADDRESS BY
         CLI   UCBTYP,MOD1             IS IT MOD 1          D11
         BNE   MODASG              NO - BRANCH
         S     RZ,HEAD16           SUBTRACT MOD1 BFRTBL ADR D11
         B     MULTI               CONTINUE                 D11
MODASG   S     RZ,HEADISP          SUB MOD2 BFRTBL ADDR     D11
MULTI    SLL   RZ,8                ENTYRDISP MULT BY 256
         L     RE,CVT               LOAD CVT ADDRESS          YM5684
         L     RE,0(RE)           LOAD TCB PTR TO DOUBLE WORD LG YM5684
         L     RE,4(RE)           LOAD CURRENT TCB ADDRESS    LG YM5684
         USING TCB,RE                                         LG YM5684
         MODESET EXTKEY=TCB,WORKREG=5   GOTO USERKEY TO FILLIN
         STH   RZ,16(RDCB)              SET BFRST FLD IN DCB
         LR    RZ,RA                    CONVERT SECTIONS IN REQUEST TO
         SLL   RZ,8                     BYTES BY MULTIPLYING BY 256
         LR    RC,RZ         SAVE BYTE REQUEST
         LR    RSAVE,RA      SAVE NUMBER OF SECTIONS
         STH   RZ,18(RDCB)              SET BFRSZ FLD IN DCB
         MODESET EXTKEY=SUPR       BACK TO SUPERKEY
         DROP  RE
         EJECT
*
*ASSIGN--FILL IN BFR TABLE
*
         LH    RE,TOTAVAIL              UPDATE TOTAVAIL FLD OF BFR TBL
         SR    RE,RA                    SUBTRACT REQUEST
         STH   RE,TOTAVAIL              STORE UPDATED TOTAVAIL IN TBL
         LH    RZ,0(RHOLD)         LOAD TASGND FIELD TO UPDATE
         AR    RZ,RA               ADD REQUEST
         STH   RZ,0(RHOLD)         RESTORE UPDATED TASGND
         MVC   0(1,RB),UCBDI            PUT DEVNDX IN 1ST BYTE ENTRY
         LA    RX,RY                    SET RX EQ 1
         CLR   RX,RA               IS REQUEST EQ 1 SECTION
         BE    CLR000       GO CLEAR ASSIGNED BUFFER
         LA    RX,RZ                    SET RX EQ 2
         SR    RA,RX                    SET RA EQ REQUEST-2 TO USE EX
         EX    RA,ASGSCTN               INSTRUCTION WITH LNG ADJUSTED
CLR000   EQU   *
ASGNREL  GLOBLOCK RELEASE,REGS=(RA,RB),                     D11 ZA07645*
               RELATED=(ASGNGET)                            D11 ZA07645
         LR    RA,RSAVE      RESTORE NUMBER SECTIONS
         LH    RBFADDR,BFR(RDCB) START OF BUFFER ASSIGNMENT
         LA    RX,FOUR       LOAD FOUR AS A CTR FOR THE 256-BYTE
*                            SECTIONS. THE BUFFER ASSIGNED WILL BE
*                            CLEARED WITH 1K GWRITES(4 SECTIONS) IF
*                            MORE THAN 1K IS REQUESTED.
         CLR   RA,RX         MORE THAN 1K REQUESTED?
         BH    ASGN0001      BRANCH IF YES.
         LA    RX,SVAREA+DECBLEN(RC) SIZE=SVAREA+DECBLEN    D11 ZA07642
         BAL   LINK,ASGN0003 SUBROUTINE TO GET AND CLEAR AREA
         EJECT
*INITIALIZE REGISTERS AND SET UP PARAMETERS FOR GWRITE WHICH WILL
*WRITE A ZEROED AREA TO THE PARTICULAR BUFFER SECTIONS ASSIGNED.
         LH    RZ,18(RDCB)   NUMBER OF BYTES TO CLEAR
         STH   RBFADDR,0(RSAVE) WORD ONE OF THE SAVE AREA WILL
*                              BE USED TO SAVE THE BUFFER ADDR...
*                              ASSIGNED.
         LA    RE,SUCCESS    GET RETURN ADDRESS FOR FREEAREA
         LA    LINK,FREEAREA  GET RETURN ADDRESS FOR CLRBFR
         B     CLRBFR        GO TO CLEAR BUFFER SUBROUTINE
*MORE THAN 1K HAS BEEN REQUESTED,THEREFORE WE WILL CLEAR THE ASSIGNED
*BUFFER IN 1K SECTIONS TO MAKE THE MOST EFFECTIVE USE OF I/O.
ASGN0001 EQU   *
         L     RX,ONEK       SIZE OF AREA TO CLEAR
         LA    RZ,SVAREA+DECBLEN  DECB/SVAREA SIZE (USED BY GIOCR)
         AR    RX,RZ         TOTAL SIZE OF AREA TO GETMAIN
         L     RC,ONEK       SAVE SIZE FOR GWRITE           D11 ZA11046
         BAL   LINK,ASGN0003 LINK TO SUBROUTINE TO CLEAR AREA
*NOW WE WILL DIVIDE THE REQUEST INTO 1K SECTIONS
         LH    RD,18(RDCB)   AMOUNT OF BUFFER ASSIGNED
         SRDL  RD,32         POSITION IN ODD REGISTER
         DR    RD,RZ         DIV BY 1K(1024) -SETS BCT COUNT IN RE
ASGN0002 EQU   *
         STH   RBFADDR,0(RSAVE) SAVE BUFFER ADDR FOR GWRITE
         BAL   LINK,CLRBFR   LINK TO CLEAR-BUFFER SUBROUTINE
         LA    RBFADDR,0(RZ,RBFADDR)    POINT TO NEXT SECTION
         BCT   RE,ASGN0002   CLEAR ALL SECTIONS
         LA    RE,SUCCESS    GET RETURN ADDRESS FOR FREEAREA
         LTR   RD,RD         ANY REMAINING TO BE CLEARED?
         BZ    FREEAREA      BRANCH IF NO
         LR    RZ,RD         SIZE OF REMAINING BUFFER SEGMENT
         LA    LINK,FREE1K   RETADR WHEN ALL CLEARED        D11 ZA07647
         EJECT
*
*THE FOLLOWING INTERNAL SUBROUTINE WILL WRITE THE CLEARED AREA OUT
*TO THE 2250 BUFFER
*
CLRBFR   EQU   *
         XC    DECB(DECBLEN,RC),DECB(RC) CLEAR DECB         D11 OZ11044
         SPACE 3                                            D11 ZA11441
* THERE FOLLOWS A HAND-EXPANDED VERSION OF THE GWRITE MACRO D11 ZA11441
* WHICH IS USED TO ACCESS A SAFE GIOCR ADDRESS FROM THE TEB.D11 ZA11441
* THIS IS NECESSARY WHEN GWRITE IS CALLED IN A ROUTINE THAT D11 ZA11441
* RUNS IN SYSTEM MODE SO AS NOT TO GIVE A SNEAKY RD/WR      D11 ZA11441
* ROUTINE CONTROL IN SUPSTATE,KEY0 AND UNINTEGRATE THINGS.  D11 ZA11441
*        GWRITE DECB(RC),BUF,(RDCB),(RZ),(RC),(RSAVE),MF=E  D11 ZA11441
         SR    15,15               CLEAR REGISTER           D11 ZA11441
         LA    1,DECB(RC)          POINT TO DECB            D11 ZA11441
         ST    15,4(0,1)           CLEAR TYPE AREA IN DECB  D11 ZA11441
         MVI   4(1),X'A0'          BUF TYPECODE TO DECB     D11 ZA11441
         LA    15,0(RDCB)          POINT TO DCB             D11 ZA11441
         ST    15,8(0,1)           DCB ADDR TO DECB         D11 ZA11441
         LA    15,0(RZ)            LENGTH                   D11 ZA11441
         ST    15,20(0,1)          LENGTH TO DECB           D11 ZA11441
         LA    15,0(RC)            AREA ADDRESS             D11 ZA11441
         ST    15,12(0,1)          AREA ADDR TO DECB        D11 ZA11441
         LA    15,0(RSAVE)         CLEAR HI-ORDER BYTE      D11 ZA11441
         ST    15,28(0,1)          BUFFER ADDRES TO DECB    D11 ZA11441
         XC    0(4,1),0(1)         CLEAR ECB                D11 ZA11441
         L     15,SVGIOCR(RSAVE)  GET SAFE GIOCR ADDRESS    D11 ZA11441
         DS    0H                                           D11 ZA11441
         BALR  14,15               BR TO GIOCR EP           D11 ZA11441
* END OF HAND-CODED EXPANSION OF GWRITE MACRO CALL...       D11 ZA11441
         SPACE 3                                            D11 ZA11441
         LTR    RBAL,RBAL    I/O STARTED?
         BNZ    CLRERR       BRANCH IF NO
         WAIT   ECB=DECB(RC)   WAIT ON I/O COMPLETION       D11 ZA07642
         CLI   DECB(RC),COMPLETE I/O DONE WITHOUT ERROR?    D11 ZA07642
         BCR   8,LINK        BRANCH IF YES
         EJECT
*
CLRERR   EQU   *
*
* AN ERROR WAS DISCOVERED WHEN TRYING TO CLEAR THE REQUESTED
*BUFFER.NOW WE MUST SAVE INPUT REGISTERS,CREATE A PARAMETER
* LIST FOR RELEASE BUFFER AND GO TO RELEASE BUFFER SUBROUTINE
*TO RELEASE THE BUFFER WE JUST ASSIGNED.
*
         ST    RDSECT,0(RSAVE) SAVE INPUT REGISTER
*CREATE RLSEBFR PARMLIST AT SAVEAREA+0 (LEN='14')           D11
         ST    RZ,4(RSAVE)    SAVE SIZE OF GETMAINED AREA
         L     RA,CODE       GET DCB ADDRESS AND CODE
         ST    RA,8(RSAVE)    STORE ADDRESS IN PARM LIST
         LA    RA,16(RDCB)   PUT BUFFER PARAM IN LIST...
         ST    RA,12(RSAVE)   TO BE USED BY RLSEBFR
         LA    RY,8(RSAVE)    SET INPUT REG TO ADDR OF LIST
         LR    RDSECT,RY     INITIALIZE DSECT REGISTER
         L     RBFTBL,UCBBTB-1  RELOAD BFR TBL ADDRESS
         LA    RBFTBL,0(RBFTBL) CLEAR OUT DEVICE INDEX
         B     RELEASE       RELEASE THE ASSIGNED BUFFER
ASGN0003 EQU    *
         GETMAIN R,LV=(0)
*GENERAL REGISTERS 0,1,6 AND 7 WILL NOW BE INITIALIZED FOR THE
*MOVE LONG INSTRUCTION TO CLEAR THE AREA TO BE WRITTEN TO THE BUFFER
         LR    RSAVE,RY       SAVE AREA ADDRESS
         LA    RY,SVAREA+DECBLEN(RY) POINT PAST SAVE+DECB   D11 ZA07642
         LR    RD,RY         ADDRESS OF AREA TO CLEAR
         LR    RX,RY         ADDRESS OF AREA TO CLEAR
         LR    RY,RC         NUMBER OF BYTES TO CLEAR       D11 ZA11046
         LA    RE,D0         SET PADDING CHARACTER TO 0
         MVCL  RX,RD         CLEAR GOTTEN CORE
         LA    RC,SVAREA+DECBLEN(RSAVE) ADR STRT OF CLRAREA D11 ZA07642
         L     R15,CVT       GET ADDRESS OF CVT              LG @ZM2362
         L     R15,SVCDCB(R15) DCB ADDR FOR SVCLIB           LG @ZM2362
         LOAD  EP=IGG019OA,DCB=(R15)                         LG @ZM2362
         STCM  RX,SEVEN,SVGIOCR+1(RSAVE)                     LG @ZM2362
         BR    LINK          RETURN
FREE1K   EQU   *                   EP TO FREE ONE ENTIRE K  D11 ZA07647
         L     RZ,ONEK             AMOUNT TO FREE           D11 ZA07647
         EJECT
FREEAREA EQU   *
         LA    RX,SVAREA+DECBLEN(RZ) SIZE TO FREE           D11 ZA07642
FREECORE EQU   *                                            D11 ZA07647
         FREEMAIN R,LV=(0),A=(13)
         DELETE EP=IGG019OA  DELETE GIOCR                   D11 @ZM2362
         BR    RE            RETURN IN-LINE
SUCCESS  SR    RCODE,RCODE               SET GR15 EQ 0 (X'00'
         B     EXIT1               RESTORE R1 AND EXIT      D11
         EJECT
*
*                       INTERNAL  SUBROUTINES
*
         SPACE 3
*   SUBROUTINE TO SCAN ZONES FOR AVAILABLE SPACE
COMPUTE  AR    RE,RB                   RE EQ DISP ADR + ZONESZ
         SR    RE,RY                   RE EQ REMAINING ZONESZ
         CLR   RA,RE                   IS REQUEST HIGHER THAN ZONESZ
         BH    CONTINU1                GO TO NEXT ZONE
         LR    RB,RY                   PUT NEW TRT ADR IN RB
         BR    RNSI                    GO BACK
         SPACE 3
*   SUBROUTINE TO LOCATE PARTICULAR DEVICE INFO IN BT
*        1. ALGO IS (DEVINDX# - 1) * 8 + BTDVADR
*                    FROM UCB             BT+8
*
INFODISP SR    RD,RD                    CLEAT RD TO ZERO
         IC    RD,UCBDI                 RD CONTAINS DEVNDX
         LR    RZ,RD                    RZ CONTAINS DEVNDX TO COMPUTE
*                                       LOCATION OF THIS DEVICE'S INFO
*                                       IN THE BFR TBL
         BCTR  RZ,0                SUBTRACT ONE FROM DEVNDX (RZ)
         SLL   RZ,3                     MULTIPLY RZ BY 8
         LA    RE,8(RBFTBL)             RE EQUALS BFR TBL ADDR + 8
         AR    RZ,RE                    RZ EQUALS DISP OF THIS DEVICE'S
*                                       INFO IN BFR TBL
         LR    RHOLD,RZ            SAVE THIS DEVICE'S INFO DISP
         B     0(RNSI)
         EJECT
*                   MISCELLANEOUS OUT-OF-LINE CODE
*
GETADR   BAL   14,COMPUTE              UPDATE REG AND CTRS
         B     REEX
*
         EJECT
*WHEN AN ASSIGNMENT CANNOT BE FULFILLED WITHIN THE DEVICES OWN ZONE
*THE NEXT SEQUENTIAL ZONE'S UNGUARANTEED AREA IS SEARCHED, STARTING
*AT THE BOTTOM OF THE AVAILABLE AREA
CONTINU1 LR    RZ,RX                    LOAD BFR INFO DISP INTO RZ
         SR    RC,RD               SET RC EQ NUMDEV-DEVNDX
         AR    RD,RC                    SET RC EQ NUMDEV TO USE AS CTR
         BCT   RD,*+4              SUBTRACT ONE FROM NUMDEV (RD)
CONTINU3 SR    RX,RX                    SET RX EQ 0
         CLR   RX,RD               NUMDEV EQ 0?
         BE    ERRASG                  GO TO ERR RETURN RTN      S21016
         CLR   RX,RC               RC CTR EQ 0?
         BE    TBLTOP                   GO TO RTN TO ACCESS 1ST DEVICES
*                                            ZONE
*                                       OTHERWISE ACCESS NEXT ZONE AND
*                                            CHECK ZONE SIZE
         LA    RZ,RUCB(RZ)         ADD 8 TO BFR INFO DISP IN RZ
CONTINU4 LH    RY,6(RZ)                 LOAD TG INTO RY
         LH    RE,4(RZ)                 LOAD RE WITH ZONESZ
         SLR   RE,RY               SUBTRACT TG FROM ZONESIZ
*                                            AVAILABLE UNGTD SIZE
         CLR   RA,RE               IS REQUEST LARGER THAN ZONESZ
         BH    CONTINU6                 GO TO DECREMENT RC,RD
         EJECT
*
*OTHERWISE BEGIN BACKWARD SEARCH IN UNGTD PORTION OF THIS ZONE BY TRT
*INSTRUCTION WITH USE OF ZONESZ COUNTER
*
         LH    RB,2(RZ)                 SET RB EQ DISP FOR THIS ZONE
         AR    RB,RBFTBL                ADD BFR TBL ADDR TO THIS DISP
         AR    RB,RY                    ADD TG TO THIS TOTAL DISP TO PT
*                                            TO START OF UNGTD AREA
         AR    RB,RE                    ADD ZONESZ TO TOTAL DISP TO PT
*                                            TO END OF UNGTD AREA
SEARCH1  LR    RX,RZ                    SET DISP EQ REQUEST LNG FROM RB
SEARCH2  SR    RB,RA                         AFTER SAVING RZ IN RX
         EX    RA,SEEK2                 EXECUTE THE TRT-INSTRUCTION FOR
         BC    8,SETDCB                LNG OF REQUEST, IF ENOUGH
         BC    2,SETDCB                      CONTIGUOUS STORAGE GO TO
*                                            ASSIGN AND UPDATE ROUTINE
         AR    RB,RA                    OTHERWISE BEGIN SEARCH BACKWARD
*                                            FROM ADDR IN GR2 AS RESULT
*                                            OF TRT-INSTRUCTION. RB EQ
*                                            LAST END DISP OF UNGTD
*                                            AREA
         SR    RB,RY                    SUBTRACT TRT ADDR REG (GR2)
*                                            FROM DISP FOR ZONESZ UN-
*                                            AVAILABLE
         SR    RE,RB                    SUBTRACT THAT AMT FROM ZONESZ
         CLR   RA,RE               COMPARE REQUEST TO ZONESZ
         BH    CONTINU5                 IF HIGH GO TO DECREMENT RD,RC
*                                       OTHERWISE, LOAD TRT-ADDR INTO
         LR    RB,RY                         RB AND GO TO SEARCH2
         B     SEARCH2
*                                       DECREMENT RC,RD CTRS (NUMDEV)
CONTINU5 LR    RZ,RX                         BY LOADING BFR INFO INTO
CONTINU6 LA    RX,RY                    RZ, SET RX EQ 1
         SR    RC,RX                    SUBTRACT 1 FROM RC CTR
         SR    RD,RX                    SUBTRACT 1 FROM FROM NUMDEV
         B     CONTINU3                 GO TO CHECK CTR ROUTINE AND
*                                            CONTINUE SEARCH IN NEXT
*                                            ZONE
TBLTOP   LR    RC,RD                    SET RC CTR TO RD CTR
         LA    RZ,RUCB(RBFTBL)     ADD 8 TO ADDR OF BFR TBL IN RZ
*RZ CONTAINS BFR INFO DISP
         B     CONTINU4
         EJECT
*
*                        EXECUTE INSTRUCTIONS
*
         CNOP  2,4
SEEK1    TRT   0(1,RB),FREESCTN         SEARCH FOR 1ST FREE SECTION
FREESCTN DC    X'FF'
         DC    4X'00'
         CNOP  2,4
SEEK2    TRT   0(1,RB),CONTIG           SEARCH FOR SUBSEQUENT FREE
CONTIG   DC    X'00'                    SECTIONS
         DC    4X'FF'
         CNOP  2,4
ASGSCTN  MVC   1(1,RB),0(RB)            INSERT DEVNDX IN BFR TBL TO
*                                       INDICATE ASSIGNMENT OF SECTIONS
         EJECT
*RETURN CODE ROUTINES
ERRASG4  EQU   *         CLEAR DCB DONE AT ENABLE1          D11 ZA11442
         LA    RCODE,TOOBIGAV      REQ GT AVAIL BFR
         B     ENABLE      FREELOCKS,ZERO DCBBFST,GIVE MSG  D11 ZA11442
ERRASG8  EQU   *    CLEAR DCBBFST DONE AT ENABLE1           D11 ZA11442
         LA    RCODE,TOOBIGZN      REQ GT ZONESIZE
         B     ENABLE       FREELOCKS,ZERO DCBBFST,GIVE MSG D11 ZA11442
ERRDCB1  EQU   *                   DCB NOT OPEN                  S21016
         LA    RCODE,UNOPEN            LOAD RETURN CODE          S21016
         B     XCTLOAD3                GO INVOKE MSG MODULE D11  S21016
ERRDCB2  EQU   *                   DCB/IOB ADDR INVALID          S21016
         LA    RCODE,DCBBAD                                      S21016
         B     XCTLOAD3                GO INVOKE MSG MODULE D11  S21016
ERRDCB3  EQU   *                   NOT A VALID GAM DCB           S21016
         LA    RCODE,NOTGRPHC          LOAD RETURN CODE          S21016
         B     XCTLOAD3                GO INVOKE MSG MODULE D11  S21016
ERRPRM   EQU   *     CLEAR DCBBFSTRT DONE AT ENABLE1        D11 ZA11442
         LA    RCODE,BFRPRM       ='18'                     D11
         B     ENABLE1    CLEAR DCB FIELDS,XCTL TO MSGR     D11 ZA11442
ERRASG   EQU   *                                                 S21016
         LA    RCODE,NOSECTS           LOAD RETURN CODE          S21016
         B     ENABLE   FREELOCKS,ZERO DCBBFST,GIVE MSG     D11 ZA11442
WRITERR  EQU   *                   LOCKS ALREADY FREED
         L     RZ,4(RSAVE)    GET AREA SIZE FOR FREEMAIN
         L     RDSECT,0(RSAVE)     SAVE INPUT REGS
         BAL   RE,FREEAREA   FREE SAVE AREA
         LR    RY,RDSECT     RESTORE INPUT REGISTER
         LA    RCODE,NOCLEAR   LOAD RETURN CODE
         B     ENABLE1        GO ZERO DCBBFST,GIVE MSG      D11 ZA11442
HEADISP  DC    F'40'
HEAD16   DC    F'16'                   HEADER LNG OF MOD1 BFRTBL
ONEK     DC    F'1024'
         DS    0F
MASKON   DC    4X'FF'
         EJECT
ENABLE   GLOBLOCK RELEASE,REGS=(RZ,RA),                     D11 ZA07645X
               RELATED=(ASGNGET,RLSEGET)                    D11 ZA07645
         LTR   RCODE,RCODE         GOOD RETCODE?            D11 ZA07645
         BZ    EXIT1               YES,IMMEDIATE EXIT       D11 ZA07645
ENABLE1  EQU   *                                            D11 ZA11442
         LA    RA,X'14'            CHECK RETCODE            D11 ZA11442
         CR    RA,RCODE            IF RESTART,EXIT W 0 ,    D11 ZA11442
         BE    EXIT1               ELSE ZERO DCB IN USERKEY D11 ZA11442
         L     RA,CVT              ALL THIS                 D11 ZA11442
         L     RA,0(RA)            SIMPLY TRIES TO          D11 ZA11442
         L     RA,4(RA)            GET PTR TO CURR TCB      D11 ZA11442
         USING TCB,RA              SO WE CAN ...            D11 ZA11442
         MODESET EXTKEY=TCB,WORKREG=1 GOTO USERKEY          D11 ZA11442
         XC    DCBBFRST(4,RDCB),DCBBFRST(RDCB) ZERO BFSTRT  D11 ZA11442
         MODESET EXTKEY=SUPR       BACK TO SUPERKEY         D11 ZA11442
         DROP  RA                                           D11 ZA11442
         B     XCTLOAD3            IF HERE,NONZERO RET-XCTL D11 ZA11442
EXIT1    LR    RY,RDSECT     RESTORE PLIST, REG 1, FOR OPEN
         LR    RBAL,RCODE   GOOD(EQ 0) OR TSTRT('14') CODE  D11 ZA07645
         SVC 3
         TITLE 'RELEASE PORTION OF IGC0007A'                D11
***********************************************************************
*THE RELEASE AND RLSEALL SUBROUTINES RELEASE BUFFER STORAGE BELONGING *
*TO THE REQUESTING DEVICE AND ARE ACCESSED WHENVER THE RLSEBFR MACRO- *
*INSTRUCTION IS ISSUED.                                               *
***********************************************************************
         SPACE 3
RELEASE  L     RX,MASKON                CHECK BUFPRM FOR FULLWORD ONES
         L     RY,BUFPRM                RY HAS ADDR OF FULLWRD
         CL    RX,0(RY)            IS FULLWORD EQ TO ONES
         BE    RLSEALL             YES,THEN GO RELEASE ALL  D11
*COMPUTE REQUEST AND STARTING ADDRESS TO MULTIPLES OF 256 AFTER MASKING
*OFF SYSTEM MASK
*
         LH    RA,2(RY)                NUM BYTES TO RELEASE   LB  AOS/1
         LA    RY,MASK1                 SET RY EQ X'FF'
         AR    RA,RY                    CONVERT BYTES TO SECTIONS
         SRA   RA,8                    PUT REQUEST IN LO ORDER BYTES
         SR    RX,RX                   ZERO RX
         CR    RA,RX                   IS REQUEST GREATER THAN 0
         BNH   PRMERR                  NO - INVALID PARAM IN
*                                         HI-ORDER BYTE OF RA
RLSEGET  GLOBLOCK OBTAIN,REGS=(RB,RC),                      D11 ZA07645*
               RELATED=(RLSEREL,ENABLE)                     D11 ZA07645
*
         BAL   RNSI,INFODISP            GO TO ACCESS INFO DISP ROUTINE
*                                       LOAD TASGND FOR DEVICE IN RY
         LH    RX,0(RZ)            SET RX EQ TASGND FOR DEVICE
         CLR   RA,RX               COMPARE REQUEST TO TASGND
         BH    ERRLSE16                 GO TO ERROR AND RETURN RTN
         L     RB,BUFPRM                RB EQ ADDR OF BUFPRM
         LH    RB,0(RB)                 RB EQ START ADDR
         SRL   RB,8                     TRUNCATE ADDRESS TO 256-MULTIPL
*                                            RX EQ DISP IN BFR TBL
         EJECT
*CHECK START ADDRESS FOR VALIDITY
*
         CLI   UCBTYP,MOD1             MOD 1                D11
         BNE   EXPCHK                  NO  - BRANCH
         A     RB,HEAD16           ADD MOD1 TBL HEADER LNG  D11
         B     FLOW1               RETURN TO NORMAL FLOW
EXPCHK   A     RB,HEADISP          ADD A(MOD2 BFRTBLHDR)     D11
FLOW1    AR    RB,RBFTBL               ADD BUF TBL ADR TO S DISP
         LR    RY,RB                         RB PTS TO START ADR IN BFR
*                                            TBL,SAVE RB IN RY
         LR    RC,RD               LOAD DEVNDX INTO RC
         LR    RX,RZ                    SAVE BFR INFO DISP IN RX
*COMPARE EACH ENTRY FOR LNG OF REQUEST WITH DEVICE INDEX
         SR    RD,RD                    SET RD EQ 0
         LA    RZ,RY                    SET RZ EQ 1
         SR    RE,RE                    SET RE EQ 0
BXH      BXH   RE,RZ,OUT                WHEN REQUEST HAS BEEN CHECKED
*                                            GO OUT
         IC    RD,0(RB)                 PUT ENTRY IN RD
         CLR   RC,RD                   COMPARE DEVNDX TO ENTRY
         BNE   ERRLSE30                IF UNEQUAL,GO TO ERR RTN  S21016
         AR    RB,RZ                    INCREMENT ENTRY ADDR BY 1
         B     BXH                      BRANCH BACK TO REPEAT
         EJECT
*CLEAR ENTRIES RELEASED TO ZERO
OUT      SR    RA,RZ                    SUBTRACT 1 FROM REQUEST TO USE
         EX    RA,CLRENT                     EX-INSTR
*UPDATE TABLES,CHECK RESTART ADDR
         AR    RA,RZ                    ADD 1 TO REQUEST TO UPDATE TBLS
         LR    RZ,RX                    RESTORE BFR INFO DISP TO RZ
         LH    RX,0(RZ)                 LOAD RX WITH TASGND FOR DEVICE
         SR    RX,RA                    SUBTRACT REQUEST FROM TASGND
         STH   RX,0(RZ)                 STORE UPDATED TASGND
*
         LH    RX,6(RBFTBL)             LOAD RX WITH TOTAVAIL FLD
         AR    RX,RA                    ADD REQUEST TO TOTAVAIL
         STH   RX,6(RBFTBL)             STORE UPDATED TOTAVAIL IN BFRTB
RLSEREL  GLOBLOCK RELEASE,REGS=(RD,RE),                     D11 ZA07645*
               RELATED=(RLSEGET)                            D11 ZA07645
*CHECK RESTART ADDRESS
         CLI   CODE,X'04'    ENTERED FROM ASGNBFR?
         BE    WRITERR       YES,EXIT WITH ERROR-LOCKS ALREADY FREE
*
         LH    RD,UCBSTART          LOAD RESTART ADDR IN RD D11  YM4067
         SRL   RD,8                     SET RD EQ MULTIPLE-256-DISP
         CLI   UCBTYP,MOD1             MOD 1                D11
         BNE   EXPRES                  NO  - BRANCH
         A     RD,HEAD16           ADD MOD1 HDRDISP         D11
         B     FLOW2               RETURN TO NORMAL FLOW
EXPRES   A     RD,HEADISP          ADD 72(MOD2)TO RD
FLOW2    AR    RD,RBFTBL           ADD BFR TBL ADR TO RD,RD NOW
*                                            HAS ADDR OF BFR TBL ENTRY
*                                            CONTAINING THAT RESTART AD
         SR    RE,RE                    CLEAR RE TO ZERO
         IC    RE,0(RD)                 SET RE EQ TO BFR TBL ENTRY
         CLR   RC,RE               COMPARE DEVNDX TO ENTRY
         BE    SUCCESS
*IF RESTART ADR IS INVALID, SET ADR TO ALL ONES
         LH    RX,MASKON           SET RX EQ TO ALL ONES
         STH   RX,UCBSTART         CHANGE ADR IN UCB        D11  YM4067
         LA    RCODE,BADADR         LOAD RETURN CODE EQ 20 (X'14')
         B     ENABLE1             NO LOCKS HELD,NO ZERO    D11 ZA07645
         EJECT
ERRLSE16 LA    RCODE,BADRLS
         B     ENABLE   GO FREELOCKS,ZERO DCBBFST & MSG     D11 ZA07645
ERRLSE30 EQU   *
         LA    RCODE,BADREL            LOAD RETURN CODE          S21016
         B     ENABLE  GO FREELOCKS,ZERODCB,GIVE MSG        D11 ZA07645
PRMERR   EQU   *                                                 S21016
         LA    RCODE,RELNEG            LOAD RETURN CODE          S21016
         B     XCTLOAD3   NOT LOCKED,NO ZERO,JUST GIVE MSG  D11 ZA11442
         CNOP  2,4
CLRENT   XC    0(1,RY),0(RY)
    TITLE ' SINGLE LOAD 2250 BUFFER MANAGEMENT, RLSEALL  SECTION '
RIQNDX   EQU   9
CVTPTR   EQU   16                                             LE AOS/1
NINTYSIX EQU   96                                             LE AOS/1
EXIT     EQU   3                                              LE AOS/1
X08      EQU   X'08'                   REQ CODE FOR REL ALL      S21016
MISALGN  EQU   X'24'                   RET CODE-INVALID TABLE    S21016
BADSIZE  EQU   X'10'                   BUFINQ TABLE TOO SMALL    S21016
TRNCATED EQU   X'20'                   BUFINQ TRUNCATED TABLE    S21016
         TITLE 'RELEASE ALL SECTION OF IGC0007A'            D11
***********************************************************************
*THE RLSEALL SUBROUTINE ALLOWS THE USER TO RELEASE ALL BUFFER STORAGE *
*ASSIGNED TO A PARTICULAR DEVICE WITH ONE MACRO INSTRUCTION.          *
***********************************************************************
         SPACE 3                                            D11
RLSEALL  EQU   *
RELALLGT GLOBLOCK OBTAIN,REGS=(RA,RD),                      D11 ZA07645*
               RELATED=(RELALLFR,ENABLE)                    D11 ZA07645
         BAL   RNSI,INFODIS             GO TO RTN  TO LOAD RZ WITH INFO
*                                            ADDRESS
         LR    RD,RE              SAVE DEVNDX FOR FURTHER USE
         SR    RX,RX                    CLEAR RX TO ZERO
         LH    RY,0(RZ)            SET RY EQ TASGND
         SR    RCODE,RCODE         CLEAR RETCODE-           D11 ZA07645
         CLR   RX,RY               COMPARE TASGND TO 0
         BE    ENABLE          YES,FREELOCKS AND EXIT       D11 ZA07645
*
         LH    RA,0(RZ)                 RA EQ TASGND FOR DEVICE
         LA    RX,RY                    SET RX EQ 1
         LH    RB,0(RBFTBL)             SET RB EQ TO TBLNGTH
         SR    RB,RX                    SUBTRACT 1 FROM TBLNGTH TO USE
*                                            IN THE EX-INSTRUCTION
         LR    RC,RD               LOAD DEVNDX INTO RC
         SR    RC,RX                    SUBTRACT 1 FROM DEVNDX
         SLL   RC,3                     MULTIPLY RC BY 8 TO INDEX TBL
         LA    RY,TRANALL
         AR    RC,RY                    ADD TRANALL ADDR TO INDEX
         CLI   UCBTYP,MOD1             MOD 1                D11
         BNE   NEXPRESS                NO   -  BRANCH
         EX    RB,TRALLEX               EXECUTE ANOTHER TR-INSTR
         B     NSI                      GOON TO UPDATE TABLE
NEXPRESS EX    RB,TRALL                 EXECUTE TR INSTRUCTION TO TRANS
*                                            LATE ENTRIES TO ZERO
         EJECT
*UPDATE  BFR TBL
NSI      LH    RE,6(RBFTBL)             LOAD RE WITH TOTAVAIL FLD
         AR    RE,RA                    ADD TASGND TO TOTAVAIL
         STH   RE,6(RBFTBL)             STORE UPDATED TOTAVAIL
         SR    RE,RE                    SET RE TO ZERO
         STH   RE,0(RZ)                 SET TASGND FLD TO ZERO
         LR    RC,RD               LOAD DEVNDX INTO RC
RELALLFR GLOBLOCK RELEASE,REGS=(RD,RE),                     D11 ZA07645*
               RELATED=(RELALLGT)                           D11 ZA07645
         B     RESTART                  GO TO RESTART CHECK
*
         EJECT
*
*CHECK RESTART ADDRESS
*
RESTART  LH    RD,UCBSTART              RESTART ADDR IN RD  D11  YM4067
         SRL   RD,8                     SET RD EQ MULTIPLE-256-DISP
         CLI   UCBTYP,MOD1             MOD 1                D11
         BNE   NEXPRE                  NO  - BRANCH
         A     RD,HEAD16           ADD MOD1 HDR             D11
         B     FLOW                                         D11
NEXPRE   A     RD,HEADISP              ADD 72 TO RD
FLOW     AR    RD,RBFTBL           ADD BFR TBL ADR TO RD,RD NOW
*                                            HAS ADDR OF BFR TBL ENTRY
*                                            CONTAINING THAT RESTART AD
         SR    RE,RE                    CLEAR RE TO ZERO
         IC    RE,0(RD)                 SET RE EQ TO BFR TBL ENTRY
         CLR   RC,RE               COMPARE DEVNDX TO ENTRY
         BE    SUCCESS
*IF RESTART ADR IS INVALID, SET ADR TO ALL ONES
INVALID  LH    RX,MASKON           SET RX EQ TO ALL ONES
         STH   RX,UCBSTART         CHANGE ADR IN UCB        D11  YM4067
         LA    RCODE,BADADR         LOAD RETURN CODE EQ 20 (X'14')
         B     ENABLE1             ZERODCB,GIVE MSG         D11 ZA07645
         EJECT
*
*            EXECUTE INSTRUCTIONS AND OUT-OF-LINE CODE
*
         CNOP  2,4
TRALL    TR    HEADER(1,RBFTBL),0(RC)
         CNOP  2,4
TRALLEX  TR    16(1,RBFTBL),0(RC)       RLSEALL FOR EXPRESS PROG
*                                                                     *
*
*
INFODIS  SR    RE,RE              CLEAR RE TO ZERO
         IC    RE,UCBDI            INSERT DEVNDX IN RE
         LR    RZ,RE               LOAD DEVNDX INTO RZ
         LA    RX,RY               SET RX EQ 1
         SR    RZ,RX               SUBTRACT 1 FROM DEVNDX
         SLL   RZ,3                MULTIPLY DEVNDX-1 BY 8
         LA    RD,8(RBFTBL)        SET RD EQ BFRTBL ADR +8
         AR    RZ,RD               RZ CONTAINS THIS DEVICES INFO DISP
         BR    RNSI                               RETURN
         TITLE 'BUFFER INQUIRY SECTION OF IGC0007A'         D11
***********************************************************************
*                                                                     *
*THE BUFINQ SUBROUTINE ALLOWS THE USER TO OBTAIN A TABLE OF ADDRESSES *
*OF THE BUFFER STORAGE ASSIGNED TO THAT DISPLAY UNIT.                 *
*                                                                     *
***********************************************************************
*CHECK TABLE ADDR PASSED AS PARAMETER FOR VALIDITY
BUFINQ   TM    TABADR+3,X'03'      TEST FOR FULLWORD ALIGNMENT
         BC    5,PREPMSG1          PREPARE FOR IFF532I        LE AOS/1
         L     RC,TABSIZ           SET RC EQ SIZE OF TABLE IN BYTES
         L     RB,TABADR           SET RB EQ ADDR OF TABLE
         LA    RX,RB               SET RX EQ 4
         CR    RX,RC               IS TABSIZ LESS THAN 4-BYTES,IF YES
         BH    PREPMSG2            PREPARE FOR IFF533I        LE AOS/1
         L     RE,CVT              GET                      D11 ZA11442
         L     RE,0(RE)            TO                       D11 ZA11442
         L     RE,4(RE)            CURRENT                  D11 ZA11442
         USING TCB,RE              TCB                      D11 ZA11442
         MODESET EXTKEY=TCB,WORKREG=2  GOTO USERKEY         D11 ZA11442
         BAL   RNSI,INFODIS
         LH    RA,0(RZ)            SET RA EQ TASGND
         SR    RZ,RZ               SER RZ TO 0
         CR    RZ,RA               IS TASGND EQ ZERO, IF SO INSERT
         BE    INSERT                   RESTART, TAB END IND AND RETURN
         LH    RZ,UCBSTART         OTHERWISE INSERT RESTART D11  YM4067
         ST    RZ,0(RB)            AND BEGIN SEARCH
         SR    RZ,RZ               SET RZ EQ TO ZERO
         STH   RZ,0(RB)            SET 1ST HALFWORD TO ZERO
         LA    RD,RY               SET RD EQ 1
         SR    RE,RD               SUBTRACT 1 FROM DEVNDX IN RE
         SLL   RE,4                MULTIPLY RE BY 16
         LA    RD,INQTAB           LOAD INQ TRT TAB ADR IN RD
         AR    RE,RD               ADD ADDR TO INDEX FORMED FROM DEVNDX
         LH    RD,TBLNGTH          SET RD EQ TABLE LENGTH
         LA    RX,RY               SET RX EQ 1
         SR    RD,RX               SUBTRACT 1 FROM TBLNGTH TO USE IN EX
         LR    RIQNDX,RBFTBL       EXECUTE SEARCH FOR FIRST SECTION
         CLI   UCBTYP,MOD1             MOD 1                D11
         BNE   MODINQ              NO BRANCH
         LA    RX,16               SET RX EQ 16             D11
         AR    RIQNDX,RX           ADD 16 TO RIQNDX         D11
         LA    RX,RB               RESET RX TO 4 BEFORE RET D11
         B     CHECK2              RETURN TO NORMAL FLOW    D11
MODINQ   A     RIQNDX,HEADISP      FOR BASIC MOD ADD 72
         LA    RX,RB                SET RX EQ TO 4
CHECK2   SR    RC,RX               SUBTRACT 4 FROM TABSIZ
         AR    RB,RX               ADD 4 TO TAB ADDR
         CR    RX,RC               CHECK TABSIZ AND AMT ASGND CTRS
         BH    CHECK1              IF SIZE LESS THAN 4 CHECK FURTHER
         SR    RZ,RZ               SET RZ EQ 0
         CR    RZ,RA               TASGND EQ 0 ?
         BE    ENDIND              GO TO INSERT TAB END IND AND RETURN
         EJECT
*
*SEARCH BFR TABLE FOR DEVICE'S SECTIONS
*
INQUIRE  EX    RD,TRTINQ           SEARCH FOR SECTION BELONGING TO DEV
*COMPUTE START NG BFR ADDRESS AND PUT IN TABLE
         SR    RY,RIQNDX           SET RY TO LNG FROM STRT OF SEARCH
         SR    RD,RY               TO STOP BYTE TO ADJUST TBLNGTH
         AR    RY,RIQNDX           SET RY BACK TO STOP-BYTE ADR
         LR    RIQNDX,RY           SAVE STOP-BYTE ADR OF TRT
         CLI   UCBTYP,MOD1             MOD 1                D11
         BNE   NEXPSUB             NO - BRANCH
         LA    RX,16               SET RX E Q 16            D11
         SR    RY,RX               SUBTRACT HEADISP         D11
         B     BACK                RETURN TO NORMAL FLOW    D11
NEXPSUB  S     RY,HEADISP          SUBTRACT 72 FROM STOP-BYTE ADR
BACK     SR    RY,RBFTBL           SUBTRACT BFRTBL ADR FROM STOP-BYTE
*                                       ADDR TO GET AT ACTUAL BFR CORE
*                                       ADDR
         SLL   RY,8                MULTIPLY DISP BY 256 TO GET REAL ADR
         STH   RY,0(RB)            MOVE START ADDR IN TABLE
         LR    RY,RIQNDX           RESTORE STOP-BYTE ADR IN RY
*COMPUTE LENGTH OF CONTIGUOUS SECTIONS IN BYTES
         LA    RX,RY               SET RX EQ 1
*                                  CLEAR RZ TO ZERO
GETLNG   AR    RY,RX               ADD 1 TO ADR TO CHECK NEXT ENTRY
         CLC   36(1,RUCB),0(RY)    COMPARE DEVNDX TO NEXT ENTRY
         BE    GETLNG              IF EQ GO ON TO NEXT ENTRY AND COMP
         SR    RY,RIQNDX           SUBTRACT TO GET NUM OF CONTIGUOUS
*                                       SECTIONS IN RY
         SR    RD,RY               ADJUST TBLNGTH FOR NEXT TRT
         SR    RA,RY               SUBTRACT NUMBER FROM TASGND
         AR    RIQNDX,RY           ADJUST NEW START ADR FOR TRT
*COMPUTE LNG IN BYTES AND MOVE INTO TABLE
*
         SLL   RY,8                MULTIPLY SECTIONS BY 256 FOR BYTES
         STH   RY,2(RB)            STORE LNG OF CONTIG BYTES IN TABLE
         LA    RX,RB               SET RX EQ 4 TO UPDATE CTRS
         B     CHECK2              BEGIN SEARCH AGAIN FOR NEXT ENTRIES
INSERT   LH    RZ,UCBSTART         RZ SET EQ RESTART ADR    D11  YM4067
         ST    RZ,0(RB)            PUT RESTART ADR IN TABLE
         SR    RZ,RZ               SET RZ EQ TO ZERO
         STH   RZ,0(RB)            SET 1ST HALFWORD TO ZERO
         SR    RC,RX               SUBTRACT 4 FROM TABSIZ
         CR    RX,RC               IS TABSIZ LESS THAN 4, IF YES RETURN
         BH    CODE0                    WITH CODE X'00'
*
         AR    RB,RX               OTHERWISE ADD 4 TO TABADR
ENDIND   L     RZ,MASKON           SET RZ EQ ALL ONES
         ST    RZ,0(RB)            INSERT TABLE END INDICATOR
         B     CODE0               RETURN TO CALLER
PREPMSG1 EQU   *                                              LE AOS/1
         L     RA,ADDR1            ADDRESS OF IFF532I         LE AOS/1
         LA    RA,D0(RA,RBASE)         INTO RA                LB  AOS/1
         LA    RD,LGTH1            LENGTH OF MESSAGE          LE AOS/1
         LA    RE,MISALGN          WRONG ALIGNMENT RET CODE   LE AOS/1
         B     ISSUEMSG            GO ISSUE WTO               LE AOS/1
PREPMSG2 EQU   *                                              LE AOS/1
         L     RA,ADDR2            ADDRESS OF IFF533I         LE AOS/1
         LA    RA,D0(RA,RBASE)         INTO RA                LB  AOS/1
         LA    RD,LGTH2            LENTH OF MESSAGE 2         LE AOS/1
         LA    RE,BADSIZE          LOAD BAD SIZE RET CODE     LE AOS/1
         B     ISSUEMSG            GO ISSUE WTO               LE AOS/1
PREPMSG3 EQU   *                                              LE AOS/1
         MODESET EXTKEY=SUPR ONLY MSG3 DETECTED IN USERKEY  D11 ZA11442
         L     RA,ADDR3            ADDRESS OF IFF534I         LE AOS/1
         LA    RA,D0(RA,RBASE)         INTO RA                LB  AOS/1
         LA    RD,LGTH3            LENGTH OF MESSAGE          LE AOS/1
         LA    RE,TRNCATED         TRUNCATED RET CODE         LE AOS/1
* RA (REG3) CONTAINS THE MESSAGE ADDRESS                      LE AOS/1
* RD (REG6) CONTAINS THE MESSAGE  LNGTH                       LE AOS/1
* RE (REG7) CONTAINS THE RETURN CODE                          LE AOS/1
ISSUEMSG EQU   *                                              LE AOS/1
         L     RB,CVTPTR           ADDR OF CVT                LE AOS/1
         L     RB,RX(RB)           ADDR OF TCB PTR            LE AOS/1
         L     RB,RB(RB)           CURRENT TCB ADDRESS        LE AOS/1
         L     RB,D0(RB)               CURRENT RB ADDR
         LA    RB,NINTYSIX(RB)     ADDR OF SVRB EXTENDED      LE AOS/1
         LR    RC,RB               PRIME RC                   LE AOS/1
         LA    RB,RB(RB)               RB=RB+4                LE  AOS/1
         MVC   RX(GMLNG,RB),GMLIST GM LIST TO SVRB EXT        LE AOS/1
         GETMAIN A=(RC),MF=(E,(RB)) GET MSG BUFFER EXT        LE AOS/1
         LTR   RBAL,RBAL           GM SUCCESSFUR?             LE AOS/1
         BNZ   SKIPWTO             NO                         LE AOS/1
* RB POINTS TO GETMAINED AREA                                 LE AOS/1
         L     RZ,RX(RC)           MSG BUFFER ADDRESS         LE AOS/1
         EX    RD,MOVELIST         MESSAGE TO BUFFER          LE AOS/1
         WTO   MF=(E,(RZ))    ISSUE WTO                       LE AOS/1
         FREEMAIN A=(RC),MF=(E,(RB)) FREE MSG BUFFER          LE AOS/1
SKIPWTO  EQU   *                                              LE AOS/1
         LR    RBAL,RE             RETURN CODE IN REG 15    D11  AOS/1
         SVC   EXIT                RETURN
CHECK1   SR    RZ,RZ               SET RZ EQ 0
         CR    RZ,RA               IS TASGND EQ 0, IF NOT RETURN CODE
         BNE   PREPMSG3            PREPARE FOR IFF534I        LE AOS/1
*                  OTHERWISE RETURN WITH CODE X'00'
CODE0    MODESET EXTKEY=SUPR       BACK TO SUPERKEY         D11 ZA07645
         SR    RCODE,RCODE         INDICATE RETCODE EQ 0    D11 ZA11442
         B     EXIT1               RETURN W CODE=0          D11 ZA07645
         TITLE 'IGC0007A CONSTANTS AND DSECTS'
*                                                                     *
TRANALL  DC   X'0000020304050607'
         DC    X'0001000304050607'
         DC    X'0001020004050607'
         DC    X'0001020300050607'
INQTAB   DC    X'00010000000000000000000000000000'
         DC    X'00000100000000000000000000000000'
         DC    X'00000001000000000000000000000000'
         DC    X'00000000010000000000000000000000'
         DC    X'00000000000100000000000000000000'
         DC    X'00000000000001000000000000000000'
         DC    X'00000000000000010000000000000000'
         DC    X'00000000000000000100000000000000'
*                                                                     *
*                                                                     *
         CNOP  2,4
         SPACE 5
TRTINQ   TRT   0(1,RIQNDX),0(RE)   SEARCH INSTRUCTION
         CNOP  0,4
ADDR1    DC    A(MSG1-ORG)         ADDRESS OF MSG 1           LE AOS/1
ADDR2    DC    A(MSG2-ORG)         ADDRESS OF MESSAGE 2       LE AOS/1
ADDR3    DC    A(MSG3-ORG)         ADDRESS OF MESSAGE 3       LE AOS/1
         EJECT
MSG1     WTO   'IFF532I BUFINQ FOUND TABLE NOT ALIGNED ON FULL-WORD',ROX
               UTCDE=11,DESC=7,MF=L                           LE AOS/1
         SPACE
LGTH1    EQU   *-MSG1                                         LE AOS/1
         SPACE 3
MSG2     WTO   'IFF533I BUFINQ FOUND TABLE SIZE LESS THAN FOUR',ROUTCDEX
               =11,DESC=7,MF=L                                LE AOS/1
         SPACE
LGTH2    EQU   *-MSG2                                         LE AOS/1
         SPACE 3
MSG3     WTO   'IFF534I BUFINQ TRUNCATED TABLE',ROUTCDE=11,DESC=7,MF=L
         SPACE
* THE FOLLOWING INFORMATION APPLIES TO MSG 3:                 LE AOS/1
LGTH3    EQU   *-MSG3                                         LE AOS/1
GMLIST   GETMAIN EC,LV=80,MF=L     GM FOR MESSAGE AREA        LE AOS/1
GMLNG    EQU   *-GMLIST                                       LE AOS/1
MOVELIST MVC   RX(RX,RZ),RX(RA)                               LE AOS/1
UCBLEN   DC    AL2(UCBBTB+L'UCBBTB-UCBOB+UCBCURPX) FOR 2250 D11 ZA07645
UCBPRFXL DC    AL2(UCBCURPX)       UCB LOCKWORD PREFIX LEN  D11 ZA07645
PATCH    DC    C'IGC0007A 40 BYTE PATCH AREA'               D11
         DS    0H   ITS NICE WHEN PATCH IS ON INST BOUND    D11
         DC    40X'FF'            PATCH AREA                D11
         EJECT
*
*                         DSECTS
*
         SPACE 3
BFRTBL   DSECT
TBLNGTH  DS    CL2
NUMDEV   DS    CL2
EXPBFR   DS    CL2
TOTAVAIL DS    CL2
TASGND   DS    CL2
DISP     DS    CL2
ZONESZ   DS    CL2
TG       DS    CL2
         DS    CL56
DVCASGND DS    CL128
         SPACE 3
PARLST   DSECT                          DSECT FOR PARAM LIST PASSED
CODE     DS    CL1                      REQUEST CODE
DCBADR   DS    CL3                      DCB-ADDRESS
BUFPRM   DS    CL4                      BUFPRAM PTR
         ORG   BUFPRM
TABADR   DS    CL4                      TABLE-ADDRESS
TABSIZ   DS    CL4                      TABLE SIZE
         EJECT
         IHAPSA
         EJECT
         IKJTCB
         EJECT                                              D11
         IEFUCBOB LIST=YES,PREFIX=YES                       D11
         END
