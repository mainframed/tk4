         TITLE 'IGE0010E - LOCAL 3270 ERROR RECOVERY PROCEDURE'
IGE0010E CSECT
*                                                              @YA02128
*        FOLLOWING CHANGES APPLIED:                            @YA02128
*              YA02128   OCT 1973                              @YA02128
*              YM2594    OCT 1973                              @YM2594K
*              YA01064   OCT 1973                              @YA01064
*              YA02456   OCT 1973                              @YA02456
*              YA00844   OCT 1973                              @YA00844
*              YA01061   NOV 1973                              @YA01061
*              YA02483   NOV 1973                              @YA02483
*              YA02484   NOV 1973                              @YA02484
*              YA03227   NOV 1973                              @YA03227
*              YM5690    JAN 1974                              @YM5690K
*              YA03250   JAN 1974                              @YA03250
*         ZA02301    JAN 1975          ZA02807    JAN 1975            *
*         ZA02808    JAN 1975          ZA02809    JAN 1975            *
*         ZA02815  (01/20/75)          ZA02841  (03/03/75)            *
*         ZA03552  (03/03/75)          ZA03553  (03/03/75)            *
*         AZ03951  (04/29/75)          AZ04166  (08/25/75)            *
*         AZ06396  (11/07/75)          AZ11043  (06/01/76)            *
*         AZ15403  (11/17/76)          AZ25106  (08/19/77)            *
*         AZ25738  (08/19/77)          AZ27951  (11/09/77)            *
*         AZ27984  (11/10/77)          AZ25921  (12/27/77)            *
*         (AZ30723-(03/06/78)G51AKXX-(05/24/77))                      *
*         AZ30908  (06/07/78)                                         *
*                                                                     *
***********************************************************************
*                                                                     *
* MODULE NAME:                                                        *
*    IGE0010E                                                         *
*                                                                     *
* DESCRIPTIVE NAME:                                                   *
*    LOCAL 3270 ERROR RECOVERY PROCEDURE                              *
*    ALSO USED FOR GRAPHIC CONSOLES                         D11       *
*                                                                     *
* COPYRIGHT:                                                          *
*    NONE                                                             *
*                                                                     *
* STATUS:                                                             *
*    CHANGE LEVEL 000                                                 *
*                                                                     *
* FUNCTION:                                                           *
*    THIS MODULE IS THE ERP FOR LOCALLY ATTACHED  DEVICES OF THE      *
*    3270 DISPLAY SYSTEM, AND IS ALSO USED FOR GRAPHIC CONSOLES       *
*    OF THE 3270 SYSTEM , 3056 AND 3036 CONSOLES.            @G51AKXX *
*    THE MODULE IS SCHEDULED BY IOS.                                  *
*    THE FOLLOWING FUNCTIONS ARE PERFORMED BY THIS MODULE:            *
*        * DETERMINES IF AN ERROR IS RETRYABLE BY THE ERP AND RETRIES *
*          THOSE THAT ARE.                                            *
*        * DETERMINES IF ERP RETRIES ARE SUCCESSFUL.                  *
*        * MAINTAINS THE STATISTICS TABLE FOR THE DEVICE.             *
*        * REQUESTS OBR LOGOUT WHEN REQUIRED.                         *
*        * REQUESTS INT REQ OR PERM ERROR MESSAGES WHEN REQUIRED.     *
*                                                                     *
* NOTES:                                                              *
*    DEPENDENCIES:                                                    *
*        NONE                                                         *
*    RESTRICTIONS:                                                    *
*        THIS ERP IS FOR LOCALLY ATTACHED DEVICES ONLY USING EXCP     *
*    REGISTER CONVENTIONS:                                            *
*        SEE 'REGISTER EQUATES' BELOW                                 *
*                                                                     *
* PATCH LABEL:                                                        *
*    PACHAREA (140 BYTES)                                             *
*                                                                     *
* MODULE TYPE:                                                        *
*    PROCEDURE                                                        *
*    PROCESSOR:                                                       *
*        BAL                                                          *
*    MODULE SIZE:                                                     *
*        APPROX. 1800 BYTES                                           *
*    ATTRIBUTES:                                                      *
*        REENTRANT, ENABLED, KEY 0, SUPERVISOR STATE,LOCAL LOCK HELD  *
*                                                                     *
* ENTRY POINT:                                                        *
*    IGE0010E                                                         *
*    PURPOSE:                                                         *
*        THIS MODULE IS ENTERED WHEN ONE OR MORE OF THE FOLLOWING     *
*        CONDITIONS IS ENCOUNTERED:                                   *
*            UNIT CHECK                                               *
*            UNIT EXCEPTION                                           *
*            INVALID COMMAND SEQUENCE                                 *
*            INCORRECT LENGTH                                         *
*            PROGRAM CHECK                                            *
*            PROTECTION CHECK                                         *
*            CHAINING CHECK                                           *
*            CHANNEL DATA CHECK                                       *
*            INTERFACE CONTROL CHECK                                  *
*            CHANNEL CONTROL CHECK                                    *
*            COMMAND REJECT                                           *
*    LINKAGE:                                                         *
*        THIS MODULE IS SCHEDULED FOR EXECUTION BY THE INPUT/OUTPUT   *
*        SUPERVISOR. IT RUNS UNDER AN SIRB WITH ADDRESSABILITY TO     *
*        THE APPLICATION'S ADDRESS SPACE.                             *
*    INPUT:                                                           *
*        REG 1 = ADDRESS OF IOSB                                      *
*        REG 15= ADDRESS OF ENTRY POINT                               *
*    OUTPUT:                                                          *
*      REG 1 = ADDRESS OF IOSB AND,                                   *
*        RECOVERABLE ERRORS:                                          *
*            IOSERR IS SET ON FOR RETRY                               *
*            IF A MESSAGE IS TO BE ISSUED, EXIT IS MADE TO IGE0025C   *
*            IF NO MESSAGE, SVC 15 IS ISSUED, THEN EXIT IS VIA SVC 3  *
*        CORRECTED ERRORS:                                            *
*            IOSEX AND IOSERR ARE SET OFF                             *
*            IOSB IS CLEANED UP                                       *
*            EXIT IS TO IGE0025D TO UPDATE STATISTICS TABLE           *
*        PERMANENT ERRORS:                                            *
*            AN OBR LOGOUT IS SCHEDULED                               *
*            A STATISTIC TABLE UPDATE IS SCHEDULED                    *
*            IOSEX IS SET ON                                          *
*            IOSERR IS SET OFF                                        *
*            EXIT IS TO IGE0025C TO ISSUE PERM ERROR MESSAGE          *
*        PROGRAMMING ERRORS:                                          *
*            SVC 15 IS ISSUED                                         *
*            IOSEX IS SET ON                                          *
*            IOSERR IS SET OFF                                        *
*            EXIT IS VIA SVC 3                                        *
*                                                                     *
* EXITS-NORMAL:                                                       *
*    SUPERVISOR VIA SVC 3                                             *
*    STATISTICS UPDATE ROUTINE (IGE0025D) VIA BRANCH ENTRY TO XCTL    *
*    IOS-WTO ROUTINE (IGE0025C) VIA BRANCH ENTRY TO XCTL              *
*                                                                     *
* EXITS-ERROR:                                                        *
*    NONE                                                             *
*                                                                     *
* EXTERNAL REFERENCES:                                                *
*    ROUTINES:                                                        *
*        SVC 15 ERROR EXCP                                            *
*    DATA AREAS                                                       *
*        CHANNEL PROGRAM                                              *
*        ERP WORKAREA (MAPPED BY IECDERWA)                            *
*    CONTROL BLOCKS                                                   *
*        UCB          (MAPPED BY IEFUCBOB)                            *
*        DCB          (MAPPED BY DCBD)                                *
*        IOSB         (MAPPED BY IECDIOSB)                            *
*        CVT          (MAPPED BY CVT)                                 *
*        IOB          (MAPPED BY IEZIOB)                              *
*        RQE          (MAPPED BY IECDRQE)                             *
*                                                                     *
* TABLES-WORKAREAS:                                                   *
*    ERP WORKAREA                                                     *
*                                                                     *
* MACROS:                                                             *
*    NONE                                                             *
*                                                                     *
***********************************************************************
         EJECT
*/*IGE0010E: CHART (AREF) */
*/* HEADER
*/*    LOCAL 3270 ERP ROUTINE FOR BTAM AND DIDOCS (OS/VS2 REL. 037)
*/*0)                    JUNE 30, 1977                 PAGE # */
*/* E IGE0010E */
*/* D (YES,,NO,RETEXIT) EXCP METHOD (IOSDVRID) */
*/* P SET ERP IN CONTROL (IOB + IOSB) */
*/* D (YES,,NO,CHKCLOS) FIRST TIME THROUGH (EWACNTR2 ) */
*/* P SET 1ST TIME FLAG (EWA) AND RESET ERROR CNT (IOBERRCT) */
*/* P RESET BITS FOR STAT UPDATE (EWASTUP) */
*/* D (YES,,NO,UNREC1) SUPPORTED GRAPHICS DEVICE (UCBTYP)*/ E12 ZA15403
*/*CHKCLOS: D (YES,SNOEXIT,NO,) CLOSE IN PROCESS (DCBOFLGS) */
*/* D (YES,ANALINT,NO,) IOSB INTERCEPT (X'7E' COMP) */
*/* D (YES,,NO,CHKINT) IOSSNS = X'10FE' */
*/* D (YES,SNOEXIT,NO,) SIO CC=3 (IOSCC) */
*/*CHKINT: D (YES,ANALCHAN,NO,) CHANNEL ERROR (CDC,CCC,ICC)*/
*/*CHKUCK: D (YES,ANALUCK,NO,) UNIT CHECK */
*/* D (YES,ANALUEX,NO,) UNIT EXCEPTION */
*/* D (YES,UNREC1,NO,) OTHER STATUS ERRORS */
*/* D (YES,SNOEXIT,NO,) INVALID SIOCC FOR STATUS */         E12 ZA25738
*/*NOERR: P RESET IOSB AND IOB ERROR FLAGS */
*/* P RESET IOSMSG, IOSLOG, FLAGS FOR APPENDAGE */
*/* P (,CHKSTAT) RESET DCB ERROR INDICATORS (DCBIFLGS) */
*/*ANALINT: D (YES,,NO,SNOEXIT) UNIT CHECK STATUS */
*/* D (YES,SNOEXIT,NO,) EWA SHOW BAD SENSE RECEIVED */
*/* D (YES,SETEC,NO,) EQUIP CHECK (IOSSNS) */
*/* D (YES,,NO,SNOEXIT) DATA CK,UNIT SPEC? */               E12 ZA15403
*/*SETDCUS: P (,SNOEXIT)  SET DC,US FOR STAT UPDATE */
*/*SNOEXIT: N */
*/*UNREC1: P (,SETPER) INDICATE LOGOUT REQUIRED (IOSLOG) */
*/*SETPER: P (,CHKSTAT) INDICATE PERMANENT ERROR IN IOB + IOSB */
*/*CHKSTAT: D (YES,STATEXIT,NO,) LOGOUT NEEDED (IOSLOG) */
*/* D (YES,STATEXIT,NO,CHKMULTI) SINGLE BIT ENTRIES (EWASTUP) */
*/*CHKMULTI: D (YES,,NO,RETEXIT) MULTI BIT ENTRIES (EWASTUP + 1) */
*/*STATEXIT: P LOAD STAT UPDATE ROUTINE ID (IGE0025D) */
*/* N (,XCTLEXIT) IF IOSLOG=1, STAT UPDATE ALWAYS GOES TO OBR
*/*(IGE0025F) */
*/*RTYCNT: D (YES,PERMEXIT,NO,) RETRY COUNT AT MAX (MAX = 3) */
*/* P UP RETRY COUNT BY ONE (IOBERRCT) */
*/* S GETCMD: GET FAILING AND RESTART CCW ADDR. */
*/* D (NO,,YES,RESTART) FAILING CCW ERASE WRITE ? */
*/* D (NO,,YES,RESTART) FAILING CCW ER/WRT ALT ? */         E12 ZA25921
*/* D (NO,,YES,PERMEXIT) D.C. U.S. IN SENSE ? */
*/* D (NO,,YES,EWAFLGOF) FAILING CCW A READ */
*/* D (NO,,YES,RESTART) FAILURE ON SELECT CCW */
*/* D (NO,,YES,RESTART) ERASE ALL UNPROTECTED */
*/* D (NO,,YES,WRITECHK) FAILING CCW A WRITE (X'01') */
*/* D (NO,SNOEXIT,YES,RESTART) FAILURE ON A NOP */
*/*EWAFLGOF: P (,RESTART) TURN OFF BIT 1 IN EWAFLG2 */
*/*WRITECHK: D (NO,,YES,RESTART) CHANNEL END IN STATUS */
*/* D (NO,,YES,CHKSBA) CONTROL CHECK IN SENSE */
*/* D (NO,PERMEXIT,YES,) E.C. U.S. IN SENSE */
*/*CHKSBA: D (NO,PERMEXIT,YES,) SBA FOLLOWING THE WCC */
*/*RESTART: P CHANGE VIRTUAL RESTART ADDR. TO REAL */
*/* P STORE RESTART ADDR. IN IOSRST */
*/* S XLATEVTV: XLATE VIRTUAL REAL TO VIRTUAL VIRTUAL */
*/* P (,CHKSTAT) STORE RESTART ADDR. IN IOBSTART */
*/*RETEXIT: S SVC 15: ERROR EXCP (REG 1 = @IOSB) */
*/* R SVC 3 */
*/*PERMEXIT: P INDICATE LOGOUT REQUIRED (IOSLOG) */            @YA02128
*/*PERMNOBR: D (YES,UNREC1,NO,) OP CONSOLE (UCB) */            @YA02128
*/* P (,WTOEXIT) SET PERM ERROR (IOB + IOB) AND ERROR MESSAGE (IOSMSG)
*/**/
*/*WTOEXIT: P LOAD WTO ROUTINE ID (IGE0025C) */
*/* N IF IOSLOG=1, WTO GOES TO OBR OR STAT UPDATE */
*/*XCTLEXIT: N WTO, STAT UPDATE OR OBR WILL DO THE SVC 15, SVC 3 */
*/* R BRANCH TO XCTL ROUTINE */
*/*ANALUCK: D (YES,UNREC1,NO,)  IOSSNS = X'10FC'*/
*/* S STATUP: SET APPROPRIATE BITS FOR STAT UPDATE */
*/*CHKIR: D (YES,INTVREQ,NO,) INT REQ (IOSSNS) */             @YA02128
*/* D (NO,,YES,RTYCNT) CONTROL CK. IN SENSE ? */
*/* D (NO,,YES,RTYCNT) D.C., U.S. IN SENSE ? */
*/* D (NO,,YES,EWAFLGON) DATA CHECK IN SENSE ? */
*/* D (NO,,YES,RTYCNT) B.O.C. IN SENSE ? */
*/* D (NO,SNOEXIT,YES,RTYCNT) E.C., U.S. IN SENSE ? */
*/*EWAFLGON: P (,RTYCNT) TURN ON BIT 1 IN EWAFLG2 */
*/*ANALUEX: D (YES,CKCECMDS,NO,) CHAN END AND DEV END */
*/* D (YES,CKDECMDS,NO,SNOEXIT) DEV END ALONE */
*/*CKCECMDS: P GET FIRST REAL CCW (IOSRST) */
*/* S TRANSRTV: GET VIRTUAL ADDRESS OF REAL CCW */
*/* D (YES,SNOEXIT,NO,RETEXIT) SENSE OR NO-OP CCW */
*/*CKDECMDS: P GET FIRST REAL CCW (IOSRST) */
*/* S TRANSRTV: GET VIRTUAL ADDRESS OF REAL CCW */
*/* D (YES,RETEXIT,NO,SNOEXIT) SELECT OR ERASE UNPROT CCW */
*/*INTVREQ: D (YES,,NO,IRPERM) 3284 OR 3286 DEVICE (UCBTYP) */ @YA02128
*/*TESTCONS: D (YES,IRMSG,NO,) OP CONSOLE (UCB) */             @YA02128
*/*IRPERM: P TURN OFF UCBIVRR + UCBIVRS (UCBFLC) */
*/* D (YES,SNOEXIT,NO,) BTAM OPEN CCW? (TP OP CODE AT IOB+ X'45' */
*/* P (,PERMNOBR) SET 'DEVICE NOT READY' FLAG (UCBGRAF) */     @YA02128
*/*IRMSG: D (NO,IRRETRY,YES,) DEVICE END ONLY? */
*/* S GETCMD: GET FAILING AND RESTART CCW ADDR. */
*/* D (YES,DEIRRTY,NO,) WRITE CCW */                           @YA02484
*/* D (YES,,NO,UNREC1) ERASE WRITE OR EWA CCW */            E12 ZA25921
*/*MAKEWRT: P CHANGE CCW CMD TO WRT */                      E12 ZA25921
*/*DEIRRTY: P CHANGE RESTART VIRTUAL ADDR. TO REAL */
*/* P SET TO RETRY WITH RESTART CCW (IOSRST) */
*/* S XLATEVTV: XLATE VIRTUAL REAL TO VIRTUAL VIRTUAL */
*/* P SET IOBSTART TO RESTART ADDR. */
*/*IRRETRY: P (,WTOEXIT) SET FOR INT REQ MESSAGE (IOSMSG = 0) */
*/*ANALCHAN: D (NO,CHECKCHN,YES,) CDC ?*/
*/* S (,RTYCNT) STATUP: SET CDC FOR STAT UPDATE */
*/*CHECKCHN: D (NO,,YES,UNREC1) IS THE ERPIB ZERO */
*/* D (YES,,NO,UNREC1) CAN RETRY BE DONE*/
*/* D (YES,,NO,UNREC1) INTER @, SEQ CODE & CHAN @ VALID*/
*/* D (NO,,YES,UNREC1) HALT I/O OR TEST I/O*/
*/* D (YES,,NO,TSTRESET) START I/O*/
*/* D (YES,,NO,UNREC1) DEVICE ADDRESS VALID*/
*/*TSTRESET: D (NO,,YES,SNOEXIT) SYSTEM RESET*/
*/* D (NO,,YES,SNOEXIT) SEQUENCE CODE 0*/
*/* D (NO,,YES,SNOEXIT) SEQUENCE CODE 6*/
*/* D (NO,,YES,SNOEXIT) SEQUENCE CODE 7*/
*/* D (NO,,YES,UNREC1) SIO COND CODE 3*/
*/* D (YES,,NO,CKCMDVAL) SIO COND CODE 1*/*
*/* P (,SEQ5CHK) GET ADDR OF FAILING CCW FROM IOSVST*/
*/*CKCMDVAL: D (YES,,NO,UNREC1) COMMAND ADDRESS VALID*/
*/* S GETCMD: GET ADDRESS OF FAILING COMMAND*/
*/*SEQ5CHK: D (NO,,YES,SEQ5PROC) SEQUENCE CODE 5*/
*/* D (NO,,YES,SEQ4PROC) SEQUENCE CODE 4*/
*/* D (NO,,YES,SEQ3PROC) SEQUENCE CODE 3*/
*/* D (NO,,YES,SNOEXIT) COMMAND A TIC*/
*/* D (NO,,YES, SEQ2PROC) SEQUENCE CODE 2*/
*/*SEQ1PROC: D (NO,,YES,CONDRTRY) TERMINATION CODE 2*/
*/*SEQ1TRM1: D (YES,SNOEXIT,NO,RETRY) TERMINATION CODE 1*/
*/*SEQ2PROC: D (YES,RETRY,NO,SEQ1TRM1) TERMINATION CODE 2*/
*/*SEQ3PROC: D (NO,,YES,SNOEXIT) SELECT*/
*/* D (NO,,YES,SNOEXIT) ERASE ALL UNPROTECTED*/
*/* D (NO,RETRY,YES,SNOEXIT) NO-OP*/
*/*SEQ4PROC: D (NO,,YES,CONDRTRY) TERMINATION CODE 2*/
*/*RETRY: D (YES,,NO,RTYERR) WRITE COMMAND*/
*/* D (YES,,NO,UNREC1) 2ND BYTE OF WRITE DATA AN SBA*/
*/*RTYERR: D (NO,,YES,PERMEXIT) IS RETRY COUNT MAX*/
*/* P (,RESTART) INCR RETRY COUNT BY ONE */
*/*CONDRTRY: D (NO,,YES,UNREC1) IS FAILING COMMAND 1ST CCW*/
*/* D (NO,RETRY,YES,UNREC1) IS FAILING COMMAND CHAINED*/
*/*SEQ5PROC: D (NO,,YES,SEQ3PROC) CSW STORED AFTER SIO*/
*/* D (YES,,NO,UNREC1) CSW STORED AFTER INTERRUPT*/
*/* M CLEAR RETRY FIELDS*/
*/* M (,RETEXIT) TURN OFF ERP IN CONTROL (IOB & IOSB) */
*/* E TRANSRTV */
*/* S IEAPTRV: TRANSLATE TO VIRTUAL ADDRESS */                 @YM2594K
*/* D (YES,,NO,UNREC1) RETURN CODE = 0 */                     @YM2594K
*/* R TO CALLER */
*/* E GETCMD */
*/* P GET CCW ADDR FROM IOSCSW & CLEAR HI ORDER BYTE */
*/* D (NO,,YES,CHKDE) IS THE CCW ADDR 0 */
*/* P SUBTRACT 8 TO POINT TO FAILING CCW */
*/* D (NO,SNOEXIT,YES,GETSTART) IS THE ADDRESS VALID ? */
*/*CHKDE: D (NO,,YES,SNOEXIT) CHNL. END IN CSW STATUS */
*/* D (YES,,NO,SNOEXIT) DVC. END IN CSW STATUS */
*/*GETSTART: P GET START OF CHANNEL PROG. (IOSVST) */
*/*CHNLOOP: D (NO,,YES,FOUNDCMD) FAILING CCW ? */
*/* D (NO,,YES,TICRTN) IS THIS A TIC CCW ? */
*/* D (YES,,NO,TSTCMDCH) IS THE CCW DATA CHAINED */
*/* P (,CHNLOOP) ADD 8 TO FAILING CCW ADDRESS */
*/*TSTCMDCH: D (YES,,NO,SEEIFDE) IS CCW CMD. CHAINED */
*/* P (,CHNLOOP) ADD 8 TO FAIL CCW ADDR. AND UPDATE RST ADDR. */
*/*SEEIFDE: D (YES,FOUNDCMD,NO,SNOEXIT) IS CSW ADDR. ZERO */
*/*TICRTN: S TRANSRTV: XLATE TICED TO ADDR. REAL TO VIRTUAL */
*/* D (NO,,YES,TICTOADR) IS PREVIOUS CCW DATA CHAINED */
*/* P SET RESTART ADDR. TO ADDR. TICED TO */
*/*TICTOADR: P (,CHNLOOP) FAILING CCW ADDR. TO CCW TICED TO */
*/*FOUNDCMD: D (YES,,NO,CMDOUT) IS RESTART CCW A TIC */
*/* S TRANSRTV: GET VIRTUAL ADDR. OF CCW TICED TO */
*/* P SET RESTART ADDR. TO ADDR. TICED TO */
*/*CMDOUT: R RETURN TO CALLER */
*/* E XLATEVTV */
*/* P PUT CCW ADDR. TO BE TRANSLATED IN REG. ZERO */
*/* P GET ADDR. OF TCCW OUT OF RQETCCW & PUT IN REG. ONE */
*/* P SET TCCWOPTN TO X'04' */
*/* P GET ADDR. OF IOCOM OUT OF CVT (CVTIXAVL) */
*/* P GET ADDR. OF TRANSLATE ROUTINE OUT OF IOCOM (IOCTCCW) */
*/* S IECVTCCW: LINK TO TRANSLATE ROUTINE */
*/* D (YES,,NO,UNREC1) RETURN CODE ZERO */
*/* R RETURN TO CALLER */
*/* E STATUP */
*/* D (NO,,YES,UNREC1) C.R. OR OP. CK. */
*/* D (NO,,YES,CHKIRUS) U.S. IN STATUS ? */
*/* D (NO,,YES,SETCDC) CHNL DATA CHECK IN STATUS */
*/* P (,STATRTN) OR SENSE BYTE IN EWASTUP FOR STAT UPDATE */
*/*CHKIRUS: D (YES,,NO,CKIRECUS) IR,US IN SENSE ? */
*/* P (,STATRTN) OR ON BIT 4 EWASTUP+1 */
*/*CKIRECUS: D (YES,,NO,CHKDCUS) IR, EC, US ? */
*/* P (,STATRTN) OR ON BIT 5 IN EWASTUP+1 */
*/*CHKDCUS: D (YES,,NO,CHKECUS) DC, US ? */
*/* P (,STATRTN) OR ON BIT 3 IN EWASTUP+1 */
*/*CHKECUS: D (YES,,NO,STATRTN) EC, US ? */
*/* P (,STATRTN) OR ON BIT 6 IN EWASTUP+1 */
*/*SETCDC: P OR ON BIT 7 IN EWASTUP+1 */
*/*STATRTN: R RETURN TO CALLER */
*/*IGE0010E: END */
         EJECT
         USING IOSB,IOSBREG
         USING UCBSET,UCBREG
         USING CVTMAP,CVTREG
         USING RQE,DCBREG
         USING IOBSTDRD,IOBREG
         USING EWA,EWAREG
         USING START,BASREG                                    @ZA04166
START    B     CONTIN                  BRANCH AROUND ID        @YA02128
         DC    CL8'IGE0010E'             MODULE ID             @YA02128
         DC    X'8158'                     AND DATE            @ZA30908
         DC    C'&SYSDATE'          DATE LAST ASSEMBLY
CONTIN   DS    0H                                              @YA02128
         LR    IOSBREG,PARMREG          BASE IOSB
         CLI   IOSDVRID,IOSXCPID        EXCP I/O               @YM5690K
         BNE   RETEXIT                  NO, PERM ERROR         @YM5690K
         L     UCBREG,IOSUCB            BASE UCB
         L     EWAREG,IOSERP            BASE ERP WORKAREA
         L     CVTREG,CVTPTR            BASE CVT               @YM2594K
         L     DCBREG,IOSUSE            BASE RQE
         L     IOBREG,RQEIOB            BASE IOB
         DROP  DCBREG
         USING IHADCB,DCBREG
         L     DCBREG,IOBDCBPT          BASE DCB
         OI    IOSFLA,IOSERR+IOSEX      INDICATE ERP IN CONTROL
         OI    IOBFLAG1,IOBERRTN+IOBIOERR      ALSO IN IOB
*              2 LINES MOVED TO NEAR LINE 148500               @YM5690K
         TM    EWACNTR2,FIRSTFLG        FIRST TIME THRU ERP
         BO    CHKCLOS                  NO, CONTINUE
         MVI   EWACNTR1,ZERO            RESET COUNTER
         OI    EWACNTR2,FIRSTFLG        FIRST TIME THRU ERP
         XC    EWASTUP,EWASTUP         RESET INTERFACE TO STAT UPDATE
         MVI   IOBERRCT+ONE,HEX07       FLAGS FOR CHANNEL END APPENDAGE
*   TEN LINES OF CODE REDUCED TO FOUR BY APAR------------->    @ZA15403
         CLC   UCBTBYT3(2),LOWDVC       IS DEVICE 3270         @ZA15403
         BL    UNREC1                   NO EXIT WITH ERROR     @ZA15403
         CLC   UCBTBYT3(2),HIGHDVC    MAYBE TEST FURTHER       @G51AKXX
         BH    UNREC1                   NO EXIT WITH ERROR     @ZA15403
CHKCLOS  EQU   *
         TM    DCBOFLGS,DCBOFOPN+DCBOFIOF   IS CLOSE IN PROGRESS
         BO    SNOEXIT                  YES, EXIT WITH ERROR
*              7 LINES DELETED                                 @YM5690K
         CLI   IOSCOD,IOSFINTC          IS I/O REQUEST INTERCEPTED
         BE    ANALINT                  YES, ANALYZE
         TM    EWAFLG1,EWABDSNS        TEST BAD SENSE          @YM5690K
         BO    CHKINT                   TO ELEMINATE SIO CC=3  @YM5690K
         CLC   IOSSNS(TWO),CC3SNS       SENSE FOR SIOCC=3      @YM5690K
         BNE   CHKINT                   NO                     @YM5690K
         TM    IOSCC,IOSCC3             SIOCC=3                @YM5690K
         BO    SNOEXIT            YES, PERM ERROR, NO MESSAGE  @YM5690K
CHKINT   DS    0H                                              @YM5690K
         TM    IOSTSB,CATCHAN           ANY CHANNEL ERRORS
         BNZ   ANALCHAN                 YES, CHECK THEM
CHKUCK   EQU   *
         TM    IOSTSA,CSWUCK            UNIT CHECK
         BO    ANALUCK                  IF YES-ANALYZE
         TM    IOSTSA,CSWUEX            UNIT EXCEPTION
         BO    ANALUEX                  YES, ANALYZE
         TM    IOSTSB,CATERR            ANY OTHER STATUS ERRORS
         BNZ   UNREC1                   YES, EXIT WITH ERROR
         TM    IOSCC,IOSCC3       NON-ZERO SIOCC            E12 ZA25738
         BNZ   NOERR                 YES,RETURN TO IOS      E12 ZA25738
         TM    IOSTATUS,CSWSMBSY        STAT MOD OR BUSY    E12 ZA25738
         BNZ   SNOEXIT             SNO FOR SIOCC=0          E12 ZA25738
NOERR    EQU   *
         NI    IOSFLA,N255-IOSERR-IOSEX   CLEAR IOSB ERROR FLAGS
         NI    IOBFLAG1,N255-IOBERRTN-IOBIOERR    ALSO IN IOB
         NI    IOSFLB,N255-IOSMSG-IOSLOG   CLEAR IOSB ERROR FLAGS
         NI    IOBERRCT+ONE,N255-HEX07   RESET APPENDAGE FLAGS
         NI    DCBIFLGS,N255-DCBIFEC    CLEAR DCB ERROR FLAGS
***** THE FOLLOWING LINE OF CODE DELETED. *****************    @ZA03951
******   XC    UCBSNS(TWO),UCBSNS       CLEAR SENSE         LD @ZA02807
         B     CHKSTAT                  EXIT TO STAT UPDATE OR RETURN
ANALINT  EQU   *
         TM    IOSTSA,CSWUCK       UNIT CHECK SENSE?           @YM5690K
         BNO   SNOEXIT            NO, PERM ERROR (ONLT LIKELY) @YM5690K
         TM    EWAFLG1,EWABDSNS        BAD SENSE               @YM2594K
         BO    SNOEXIT                 YES,  GET OUT           @YM2594K
         CLI   IOSSNS,SENEC             EQUIP CHECK
         BE    SETEC                   YES, STAT UPDATE, RETRY
         CLI   IOSSNS,SENDCUS          DATA CHK, UNIT SPECIFY
*    TWO LINES REDUCED TO ONE AND THREE MOVED HERE BY APAR-->  @ZA15403
         BNE   SNOEXIT                 NO, EXIT WITH ERROR     @ZA15403
SETDCUS  DS    0H
         OI    EWASTUP+ONE,STDCUS      INDICATE DC, US IN STAT TABLE
         B     SNOEXIT                 EXIT WITH ERROR
SETEC    EQU   *
         OI    EWASTUP,STATEC          INDICATE EC IN          @YA01061
*                                                STAT TABLE    @YA01061
         MVI   IOSCOD,IOSNRMC           CLEAR INTCPT INDICATOR
         NI    IOSFLA,N255-IOSEX        CLEAR PER FLAG
         NI    IOBFLAG1,N255-IOBIOERR            ALSO IN IOB
         MVI   IOSSNS,ZERO              CLEAR SENSE
         MVI   IOBSENS0,ZERO               ALSO IN IOB
         NI    IOBERRCT+ONE,N255-HEX07   RESET APPENDAGE FLAGS
         NI    DCBIFLGS,N255-DCBIFEC    CLEAR DCB ERROR FLAGS
         B     RETEXIT                  EXIT TO RETRY
*
ANALUCK  EQU   *
         TM    EWAFLG1,EWABDSNS         BAD SENSE
         BO    UNREC1                   YES, EXIT WITH ERROR
         CLI   IOSSNS,SENIR             INTER. REQ. SENSE?  E12 ZA27951
         BNE   CONTUC                   NO DON'T TEST FLAG  E12 ZA27951
         TM    UCBGRAF,UCBDWNR          FLAG SET            E12 ZA27951
         BO    INTVREQ                  YES,RECORD AND POST E12 ZA27951
*         TWO LINES OF CODE DELETED BY APAR ---------------->  @ZA06396
CONTUC   TM    IOSTSA,CSWCDE            CHAN END AND D. E.  E12 ZA27951
         BO    CHKCESNS                 YES, CHECK CE SENSE COND
         TM    IOSTSA,CSWDVE            DEVICE END ALONE
         BO    ANALDERR                 YES
*              2 LINES MOVED TO NEAR LINE 200500               @YM5690K
         BAL   LNKREGB,CHKDIAG          CHECK FOR DIAG CMD
         B     BRTAB3(IXREG)            DIAG CHK RTN BR TBL
BRTAB3  EQU   *
         B     PERMEXIT                 DIAG CMD, PERM ERR EXIT
         CLI   IOSSNS,SENBOC            BUS OUT CHECK
         BNE   CHKCR                   NO, CHECK FOR CR
         OI    EWASTUP,STATBOC    YES, SET BOC FOR STAT UPDATE @YA01061
*     ONE LINE DELETED AND ELEVEN MOVED HERE BY APAR------>    @ZA15403
RTYCNT   EQU   *
         CLI   EWACNTR1,THREE           RETRY COUNT AT MAX
         BNL   PERMEXIT                 MAX CNT-PER ERR EXIT
         SR    ICREG,ICREG              CLEAR REG
         IC    ICREG,EWACNTR1           PICK UP COUNT
         LA    ICREG,ONE(ICREG)         BUMP BY ONE
         STC   ICREG,EWACNTR1           SAVE COUNT
RETEXIT  EQU   *
         LR    PARMREG,IOSBREG     RESTORE REG 1 TO IOSB ADDR  @YM2594K
         SVC   EREXCP                   ERROR EXCP
         SVC   RETURN                   RETURN TO SVPR
CHKCR    EQU   *
         CLI   IOSSNS,SENCR             COMMAND REJECT
         BE    UNREC2                   YES
         CLI   IOSSNS,SENIR            INTERVENTION REQ        @ZA06396
*    TWO LINES REDUCED TO ONE AND FIFTY ONE MOVED HERE BY ---> @ZA15403
         BNE   UNREC1                NO UNRECOV ERROR          @ZA15403
         EJECT
*                                                              @YA02128
*              HANDLE INTERVENTION REQUIRED AS                 @YA02128
*              PERMANENT ERRORS                                @YA02128
*              EXCEPT THAT THE 3284 AND 3286 PRINTERS          @YM5690K
*              WILL BE PROCESSED FOR INTERVENTION REQUIRED     @YM5690K
*              IF BEING USED AS CONSOLES                       @YM5690K
*                                                              @YA02128
INTVREQ  DS    0H                                              @YM5690K
         BAL   LNKREGB,CHKDIAG          CHECK FOR DIAG CMD     @YA02128
         B     BRTAB1(IXREG)    DIAG CHECK RETURN BRANCH TABLE @YA02128
BRTAB1   EQU   *                                               @YA02128
         B     SNOEXIT          DIAGNOSE COMMAND PERM ERROR    @YM5690K
         OI    EWASTUP,STATIR          SET IR FOR STAT UPDATE  @YA02128
*      FIVE LINES OF CODE REMOVED BY APAR------------------>   @ZA15403
TESTCONS EQU   *                                               @YA02128
         TM    SRTESTAT,UCBONLI+UCBSYSR   DEV. AN ONLINE       @YA02128
*                                             ACTIVE CONSOLE   @YA02128
         BNO   IRPERM             NO,SET PERM ERROR         E12 ZA25106
         CLI   UCBTBYT4,DEV3284    HARDCOPY CONSOLE         E12 ZA25106
         BE    IRMSG                YES, EXIT IR MESSAGE    E12 ZA25106
         CLI   UCBTBYT4,DEV3286     HARDCOPY CONSOLE        E12 ZA25106
         BE    IRMSG                 IF YES-EXIT IR MESSAGE E12 ZA25106
IRPERM   DS    0H                                              @YM5690K
         NI    UCBFLC,N255-(UCBIVRR+UCBIVRS)    TURN OFF       @YM5690K
*                                             SINCE NO IR MSG  @YM5690K
         MVC   IOBWORK(ONE),IOBCPA+FIVE  SET UP TP CODE...  LD @ZA02301*
                                   ...IN WORK AREA.         LD @ZA02301
         NI    IOBWORK,N255-(CCWCD+CCWCC) CLEAR UNUSED BITS LD @ZA02301
         CLI   IOBWORK,BTAMOPEN    OPEN TP OP CODE          LD @ZA02301
         BE    SNOEXIT             OPEN, PERMANENT ERROR... LD @ZA02301*
                                   ...NO MSG OR LOG.        LD @ZA02301
*     THE FOLLOWING CODE CHANGED DUE TO BTAM READYQ CHANGE  E12 ZA27984
*  ERP SHOULD NOT SET UCBDWNR SINCE BTAM IS THE ONLY USER   E12 ZA27984
* BTAM WILL NOW BE RESPONSIBLE TO SET AND RESET IT. IF ANY  E12 ZA27984
*  OTHER ACCESS METHODS OR APPLICATIONS USE THIS THEY MUST  E12 ZA27984
*  SET AND RESET IT ALSO. IT IS ONLY VALID FOR INTERVENTION E12 ZA27984
*  REQUIRED SITUATIONS. AS AN INTERM MEASURE THE FOLLOWING  E12 ZA27984
*  BRANCH MAY BE NO-OPED TO ALLOW ERP TO SET IT.            E12 ZA27984
         B     PERMNOBR                                     E12 ZA27984
         OI    UCBGRAF,UCBDWNR       SET FAILED FLAG IN GCB    @YA02128
         B     PERMNOBR                                        @YA02128
IRMSG    EQU   *                                               @YM5690K
         TM    IOSTSA,CSWDVE       DEVICE END?                 @YM5690K
         BNO   IRRETRY             NO, SHOULD BE SIO CC=1      @YM5690K
         TM    IOSTSA,CSWCHE       CHANNEL END                 @YM5690K
         BO    IRRETRY     YES, ERROR BEFORE BUFFER COMPLETE   @YM5690K
*                    NO, ERROR WHILE PRINTER DUMPING BUFFER    @YM5690K
         BAL   LNKREG,CMDSRCH           FIND LAST COMMAND
         CLI   CCWCMD(CCWREG),CCWWRT    WRITE
         BE    DEIRRTY                  YES-RETRY WCC ONLY
         CLI   CCWCMD(CCWREG),CCWEWR    ERASE WRITE
         BE    MAKEWRT                  YES, CHANGE TO WRT  E12 ZA25921
         CLI   CCWCMD(CCWREG),CCWEWA    ER/WRT ALTERNATE    E12 ZA25921
         BNE   UNREC1                  NO-SNO, LOG             @YM5690K
MAKEWRT  EQU   *                                            E12 ZA25921
         MVI   CCWCMD(CCWREG),CCWWRT   CHANGE TO WRITE         @YM5690K
DEIRRTY  EQU   *
         LA    WKREG1,ONE               PICK UP RTY BYTE CNT
         STH   WKREG1,CCWCNT(CCWREG)    SET CNT TO RETRY WCC
         NI    CCWFLGS(CCWREG),N255-CCWCD   NO DATA CHAINING   @YM5690K
         LRA   CCWREG,ZERO(CCWREG)      SET REAL ADDRESS FOR IOS
         ST    CCWREG,IOSRST            RETRY LAST/ONLY CMD
IRRETRY  DS    0H                                              @YM5690K
         NI    IOBERRCT+ONE,N255-HEX07   RESET APPENDAGE FLAGS @YM5690K
         NI    IOSFLB,N255-IOSMSG       INT REQ MSG INDICATOR
         B     WTOEXIT                  EXIT TO WTO AND RETRY
CHKCESNS EQU   *
         BAL   LNKREGB,CHKDIAG          CHECK FOR DIAG CMD
         B     BRTAB2(IXREG)            DIAG CMD RTN BR TBL
BRTAB2   EQU   *
         B     PERMEXIT                 DIAG CMD, PER ERR EXIT
         SR    CCWREG,CCWREG            GET CCW ADDR WITH      @ZA15403
         ICM   CCWREG,M7,IOSCSWCA       HI BYTE CLEAR          @ZA15403
         SH    CCWREG,CONEIGHT          FAILING CCW ADDR
         BNP   UNREC1               BRANCH IF ADDRESS WAS ZERO @YA03250
         CLI   IOSSNS,SENBOC            BUS OUT CHECK
         BE    BOCCMDS                  YES-CHECK CMDS
         CLI   IOSSNS,SENDC             DATA CHECK
         BE    CMDCHK                   YES-CHECK CMDS
         CLI   IOSSNS,SENCC             CONTROL CHECK
         BE    CMDCHK                   YES-CHECK CMDS
         CLI   IOSSNS,SENDCUS           DATA CHK,UNIT SPECIFY
         BE    CMDCHK                   YES-CHECK CMDS
         CLI   IOSSNS,SENOC             OPERATION CHECK
         BNE   UNREC1                   NO                     @YA03250
         CLI   CCWCMD(CCWREG),CCWWRT    WRITE
         BE    UNREC2                   YES
*          *****LINES 228600-228700 REMOVED BY ZA02841****  L5 @ZA02841
         CLI   CCWCMD(CCWREG),CCWEWR    ERASE WRITE
         BE    UNREC2                   YES,USER RETRYABLE  E12 ZA25921
         CLI   CCWCMD(CCWREG),CCWEWA    ER/WRT ALTERNATE?   E12 ZA25921
*   TWO LINES REDUCED TO ONE AND THREE MOVED HERE BY APAR--->  @ZA15403
         BNE   UNREC1                   NO, EXIT WITH ERROR    @ZA15403
UNREC2   EQU   *
         NI    IOBERRCT+ONE,N255-HEX01  INDICATE USER RETRYABLE
         B     SETPER                   EXIT
BOCCMDS  EQU   *
         CLI   CCWCMD(CCWREG),CCWWRT    WRITE
         BE    UNREC1                   YES, EXIT
         CLI   CCWCMD(CCWREG),CCWEWR    ERASE WRITE
         BE    BOCSTAT                  YES,SET STAT FLAG   E12 ZA25921
         CLI   CCWCMD(CCWREG),CCWEWA    ER/WRT ALTERNATE?   E12 ZA25921
         BNE   UNREC1                   NO, EXIT WITH ERR      @YA03250
BOCSTAT  EQU   *                                            E12 ZA25921
         OI    EWASTUP,STATBOC         SET BOC FOR STAT UPDATE @YA01061
         B     RTYCNT                   RETRY CHAN PGM
CMDCHK   EQU   *
         CLI   CCWCMD(CCWREG),CCWWRT    WRITE
         BE    CKFSTCCW                 YES, IS FST IS EWR  L5 @ZA02841
*      ****LINES 236100-236200 REMOVED BY ZA02841*****      L5 @ZA02841
         CLI   CCWCMD(CCWREG),CCWEWR    ERASE WRITE
         BE    RECRTY                   YES-RETRY
         CLI   CCWCMD(CCWREG),CCWEWA   ER/WRT ALTERNATE?    E12 ZA25921
         BE    RECRTY                  YES, RETRY           E12 ZA25921
         CLI   CCWCMD(CCWREG),CCWSEL    SELECT
         BE    RECRTY                   YES-RETRY
         CLI   CCWCMD(CCWREG),CCWEUP    ERASE UNPROTECTED
         BE    RECRTY                   YES-RETRY
         CLI   IOSSNS,SENDCUS           DATA CHK,UNIT SPECIFY
         BE    RDERR                    YES-CHK RD CMDS
         CLI   CCWCMD(CCWREG),CCWRDM    READ MODIFIED
         BE    CHKWRCMD                 YES-CHECK CHAN PGN
         CLI   CCWCMD(CCWREG),CCWRDB    READ BUFFER
         BE    CHKWRCMD                LOOK FOR WRITE       L5 @ZA02841
*                                      BEFORE FAILING       L5 @ZA02841
         TM    CCWFLGS(CCWREG),CCWCD   DATA CHAIN?          L5 @ZA02841
         BZ    UNREC1                  NO,SET UNRECOVERABLE L5 @ZA02841
CKFSTCCW EQU   *                                            L5 @ZA02841
         L     PARMREG,IOSRST          REAL ADDR FST CCW    L5 @ZA02841
         BAL   ICREG,TRANSRTV          GET VIRT ADDR REAL   L5 @ZA02841
         LA    CCWREG,ZERO(PARMREG)    INTO CORRECT REG     L5 @ZA02841
         CLI   CCWCMD(CCWREG),CCWEWR   IS IT EWR?           L5 @ZA02841
         BE    RECRTY                  YES,RETRY CHAN PROG  L5 @ZA02841
         CLI   CCWCMD(CCWREG),CCWEWA    ER/WRT ALTERNATE?   E12 ZA25921
         BE    RECRTY                   YES RETRY CHA PROG  E12 ZA25921
*  ONE LINE DELETED AND NINETEEN MOVED HERE BY APAR-------->   @ZA15403
UNREC1   EQU   *
         OI    IOSFLB,IOSLOG            INDICATE OBR LOGOUT
SNOEXIT  EQU   *
         NI    IOBERRCT+ONE,N255-HEX04   RESET APPENDAGE CORRECTABLE
SETPER   EQU   *
         NI    IOSFLA,N255-IOSERR       INDICATE PER IN IOSB FLAGS
         NI    IOBFLAG1,N255-IOBERRTN     ALSO IN IOB
CHKSTAT  EQU   *
         MVI   EWACNTR1,ZERO            CLEAR RETRY COUNT
         TM    IOSFLB,IOSLOG            OBR LOGOUT REQUIRED
         BO    STATEXIT                 IF YES-EXIT TO STAT UPDATE
         CLI   EWASTUP,ZERO            CHECK FOR SINGLE BIT ENTRIES
         BNE   STATEXIT                 IF PRESENT, EXIT TO STAT UPDATE
CHKMULTI EQU   *
         CLI   EWASTUP+ONE,ZERO         CHECK FOR MULTI BIT ENTRIES
         BE    RETEXIT                  IF NONE, STAT UPDATE NOT REQD
STATEXIT EQU   *
         LA    LDNAMREG,STATUP          ADDRESS OF STAT UPDATE ROUTINE
         B     XCTLEXIT                 EXIT VIA XCTL BRANCH ENTRY
CHKWRCMD EQU   *
         LA    CMDREG,CCWWRT            WRITE CMD
         BAL   LNKREG,CHKCMD            LINK TO CHK CHAN PGM
         B     BRTAB5(IXREG)            RETURN BRANCH TABLE
BRTAB5   EQU   *
         B     UNREC1                   WRT IN CHAN PGM-EXIT
         CLI   IOSSNS,SENDC            DATA CHECK
         BE    SETDC                 YES, SET DATA CHK ERR     @ZA15403
         OI    EWASTUP,SENCC           NO, SET CC FOR STAT UPDATE
         B     RTYCNT                   RETRY CHAN PGM
*   THREE LINES DELETED BY APAR----------------------------->  @ZA15403
*
RECRTY   EQU   *
         CLI   IOSSNS,SENDC            DATA CHECK
         BE    SETDC                   YES, SET ERROR
         CLI   IOSSNS,SENCC            CTRL CHK
         BE    SETCC                   YES, SET CC
         OI    EWASTUP+ONE,STDCUS      SET DC, US FOR STAT UPDATE
         B     RTYCNT                  RETRY CHANNEL PROG
*
SETDC    EQU   *
         OI    EWASTUP,STATDC          SET DC FOR STAT UPDATE  @YA01061
         B     RTYCNT                  RETRY CHAN PROG
*
SETCC    EQU   *
         OI    EWASTUP,SENCC           SET CC FOR STAT UPDATE
         B     RTYCNT                  RETRY
*
RDERR    EQU   *
         CLI   CCWCMD(CCWREG),CCWRDM    READ MODIFIED
         BE    UNREC1                   YES-EXIT WITH ERROR
         CLI   CCWCMD(CCWREG),CCWRDB    READ BUFFER
         BE    UNREC1                   YES-EXIT WITH ERROR
         B     UNREC1                   EXIT                   @YA03250
ANALUEX  EQU   *
         BAL   LNKREGB,CHKDIAG          CHECK FOR DIAG CMD
         B     BRTAB4(IXREG)            DIAG CHK RTN BR TBL
BRTAB4   EQU   *
         B     PERMEXIT                 DIAG CMD-PER ERR EXIT
*  THREE LINES MOVED HERE BY APAR-------------------------->   @ZA15403
         L     PARMREG,IOSRST      REAL ADDRESS OF FIRST CCW   @YM2594K
         BAL   ICREG,TRANSRTV      GET VIRTUAL ADDRESS OF REAL @YM2594K
         LA    CCWREG,ZERO(PARMREG)    INTO CORRECT REG        @YM2594K
         TM    IOSTSA,CSWCDE            CHANNEL END AND DEVICE END
         BO    CKCECMDS                 YES-CHECK FIRST CMD ON CE/DE
         TM    IOSTSA,CSWDVE            DEVICE END ALONE
         BNO   SNOEXIT                  EXIT
*  ONE LINE DELETED AND SEVEN MOVED HERE BY APAR------------>  @ZA15403
CKDECMDS EQU   *
*    THREE LINES DELETED BY APAR--------------------------->   @ZA15403
         CLI   CCWCMD(CCWREG),CCWSEL    SELECT
         BE    UERETRY                  YES
         CLI   CCWCMD(CCWREG),CCWEUP    ERASE UNPROTECTED
         BE    UERETRY                  YES
         B     SNOEXIT                  EXIT
CKCECMDS EQU   *
         CLI   CCWCMD(CCWREG),CCWSNS    SENSE
         BE    SNOEXIT                  EXIT
         CLI   CCWCMD(CCWREG),CCWNOP    NO-OP
         BE    SNOEXIT                  EXIT
UERETRY  EQU   *
         OI    IOBERRCT+ONE,UEXRETRY    UNIT EXCEPTION RETRIED
*                                      ONE LINE DELETED        @YA02483
         B     RETEXIT                  EXIT TO RETRY
ANALDERR EQU   *
         BAL   LNKREGB,CHKDIAG          CHECK FOR DIAG CMD
         B     BRTABLE1(IXREG)          DIAG CMD RTN BR TBL
BRTABLE1 EQU   *
         B     PERMEXIT                 DIAG CMD-PER ERR EXIT
         LA    IXREG,4            SET NOSELECT RETRY           @YA02456
         SR    CCWREG,CCWREG      GET FAILING CCW ADDRESS      @ZA15403
         ICM   CCWREG,M7,IOSCSWCA WITH ERROR FLAGS CLEAR       @ZA15403
         SH    CCWREG,CONEIGHT    BACK UP ONE CCW              @YA02456
         BNP   ANDERCNT           IF NOT VALID ADDRESS,        @YA02456
*                                 GO CHECK LAST CCW            @YA02456
         L     PARMREG,IOSRST      REAL ADDRESS OF FIRST CCW   @YM2594K
         BAL   ICREG,TRANSRTV      GET VIRTUAL ADDRESS OF REAL @YM2594K
         LA    WKREG1,ZERO(PARMREG)    INTO CORRECT REG        @YM2594K
         CR    CCWREG,WKREG1      FAILING IS FIRST?            @YA02456
         BNE   ANDERCNT           NO,CHECK LAST                @YA02456
         CLI   CCWCMD(CCWREG),CCWSEL FAIL ON SELECT?           @YA02456
         BNE   ANDERCNT           NO,CHECK LAST                @YA02456
         LA    IXREG,0            SET RETRY SELSCT             @YA02456
ANDERCNT EQU   *                  RETRY SELECT ARGUMENT SET    @YA02456
*              2 LINES DELETED                                 @YM5690K
         CLI   IOSSNS,SENIR    INTV REQ WITH DE UC STATUS IS   @ZA06396
         BE    IRMSG                   ASYNC ERROR - RETRY     @ZA06396
         CLI   IOSSNS,SNIRECUS          IR,EQUIP CHK,UNIT SP
         BE    CHKEC(IXREG)             YES-CHECK CHAN PGM     @YA02456
         CLI   IOSSNS,SENECUS           EQUIP CHK,UNIT SP
         BE    CHKEC(IXREG)             YES-CHECK CHAN PGM     @YA02456
         CLI   IOSSNS,SENDC             DATA CHECK
         BE    ANALCMD(IXREG)           YES-CHECK CHAN PGM     @YA02456
         CLI   IOSSNS,SENCC             CONTROL CHECK
         BE    ANALCMD(IXREG)           YES-CHECK CHAN PGM     @YA02456
         CLI   IOSSNS,SENDCUS           DATA CHK,UNIT SPECIFY
         BE    ANALCMD(IXREG)           YES-CHECK CHAN PGM     @YA02456
         B     UNREC1                   EXIT                   @YA03250
*              22 LINES MOVED TO NEAR LINE 314465 OR DELETED   @YM5690K
CHKEC    EQU   *
         B     RECRTY1            RETRY THE SELECT             @YA02456
         BAL   LNKREG,CMDSRCH           FIND LAST COMMAND
         CLI   CCWCMD(CCWREG),CCWWRT    WRITE
         BE    PERMEXIT                 YES-PER ERROR EXIT
         CLI   CCWCMD(CCWREG),CCWEWR    ERASE WRITE
         BE    PERMEXIT                 YES PER ERROR EXIT  E12 ZA25921
         CLI   CCWCMD(CCWREG),CCWEWA     ER/WRT ALTERNATE?  E12 ZA25921
*     TWO LINES REDUCED TO ONE AND SIXTEEN MOVED HERE BY APAR  @ZA15403
         BNE   UNREC1                   NO, EXIT WITH ERROR    @ZA15403
PERMEXIT EQU   *
         OI    IOSFLB,IOSLOG            INDICATE OBR LOGOUT    @YA02128
PERMNOBR DS    0H                                              @YA02128
         TM    SRTESTAT,UCBONLI+UCBSYSR   DEV. AN ONLINE ACTIVE CONSOLE
         BO    UNREC1                   IF YES-LOG WITHOUT ERROR MSG
         NI    IOBERRCT+ONE,N255-HEX04   RESET USER CORRECTABLE
         MVI   EWACNTR1,ZERO            CLEAR RETRY COUNT
*              1 LINE MOVED                                    @YA02128
         NI    IOSFLA,N255-IOSERR       INDICATE PER IN IOSB FLAGS
         NI    IOBFLAG1,N255-IOBERRTN      ALSO IN IOB
         OI    IOSFLB,IOSMSG            PERM ERROR MSG REQUIRED
WTOEXIT  EQU   *
         LA    LDNAMREG,IOSWTO          ADDRESS OF IOS WTO ROUTINE
XCTLEXIT EQU   *
         LR    PARMREG,IOSBREG     RESTORE REG 1 TO IOSB ADDR  @YM2594K
         L     RETREG,CVTXTLER          POINT TO BRANCH ENTRY
         BR    RETREG                   EXIT VIA XCTL BRANCH ENTRY
ANALCMD  EQU   *
         B     RECRTY1            RETRY THE SELECT             @YA02456
         BAL   LNKREG,CMDSRCH           FIND LAST COMMAND
         CLI   CCWCMD(CCWREG),CCWWRT    WRITE
         BE    UNREC1                   YES-EXIT WITH ERROR
         CLI   CCWCMD(CCWREG),CCWEWR    ERASE WRITE
         BE    RECRTY1                  YES-RETRY
         CLI   CCWCMD(CCWREG),CCWEWA   ER/WRT ALTERNATE?    E12 ZA25921
         BE    RECRTY1                 YES RETRY            E12 ZA25921
         CLI   CCWCMD(CCWREG),CCWSEL    SELECT
         BE    CHKRTY                   YES-CHECK FOR RETRY
         CLI   CCWCMD(CCWREG),CCWEUP    ERASE UNPROTECTED
         BNE   UNREC1                   NO, EXIT               @YA03250
CHKRTY   EQU   *
         CLI   IOSSNS,SENDCUS           DATA CHK,UNIT SPECIFY
         BE    UNREC1                   YES-EXIT WITH ERROR
RECRTY1  EQU   *
         CLI   IOSSNS,SENDC            DATA CHECK?
         BE    SETDC1                  YES,SET ERROR
         CLI   IOSSNS,SENCC            CTRL CHK?
         BE    SETCC1                  YES, SET CC
         OI    EWASTUP+ONE,STDCUS      SET DC, US FOR STAT UPDATE
*     ONE LINE DELETED AND FOUR MOVED HERE BY APAR------->     @ZA15403
STORCCW  EQU   *
         LRA   CCWREG,ZERO(CCWREG)      GET REAL ADDRESS FOR IOS
         ST    CCWREG,IOSRST            RETRY CCW ADDR
         B     RTYCNT
*
SETDC1   EQU   *
         OI    EWASTUP,STATDC          SET DC FOR STAT UPDATE  @YA01061
         B     STORCCW                 RETRY CCW ADDR
*
SETCC1   EQU   *
         OI    EWASTUP,SENCC           SET CC FOR STAT UPDATE
         B     STORCCW                 RETRY CCW ADDR
CDCERR   EQU   *
         L     CCWREG,IOSCC             ADDR OF CCW
         LA    CCWREG,ZERO(CCWREG)      CLEAR HI BYTE
         SH    CCWREG,CONEIGHT          FAILING CCW ADDR
         BNP   UNREC1              BRANCH IF ADDRESS WAS ZERO  @YA03250
         TM    CCWCMD(CCWREG),CCWX07    TIC COMMAND
         BNZ   CDCNTIC                 CAN NOT BE A TIC        @YA01064
         TM    CCWCMD(CCWREG),CCWTIC   TIC BIT PRESENT         @YA01064
         BO    UNREC1                   YES-UNREC EXIT         @YA01064
CDCNTIC  DS    0H                                              @YA01064
         CLI   CCWCMD(CCWREG),CCWWRT    WRITE
         BE    UNREC1                   YES-UNREC EXIT
         CLI   CCWCMD(CCWREG),CCWEWR    ERASE WRITE
         BE    CHKCHAIN                 YES-CHECK CHAINING
         CLI   CCWCMD(CCWREG),CCWEWA    ER/WRT ALTERNATE?   E12 ZA25921
         BE    CHKCHAIN                 YES CHECK CHAINING  E12 ZA25921
         CLI   CCWCMD(CCWREG),CCWRDM    READ MODIFIED
         BE    CHKWRTCM                 YES-CHECK CHAN PGM FOR WRITE
         CLI   CCWCMD(CCWREG),CCWRDB    READ BUFFER
         BE    CHKWRTCM                 YES-CHECK CHAN PGM FOR WRITE
RTYCCW   EQU   *
         OI    EWASTUP+ONE,STCDC       SET CDC FOR STAT UPDATE
         B     STORCCW                  RETRY FAILING CMD
CHKCHAIN EQU   *
         TM    IOSFLA,IOSDCHN           DATA CHAIN IN CH PGM
         BO    RTYCHPGM                 YES-RETRY CHAN PGM
         B     RTYCCW                   NO-RETRY FAILING CMD
CHKWRTCM EQU   *
         LA    CMDREG,CCWWRT            ANY WRITE CMD
         BAL   LNKREG,CHKCMD            LINK TO CHK CHAN PGM
         B     BRTABLE3(IXREG)          RETURN BRANCH TABLE
BRTABLE3 EQU   *
         B     UNREC1                   WRT IN CHAN PGM-EXIT
RTYCHPGM EQU   *
         OI    EWASTUP+ONE,STCDC       SET CDC FOR STAT UPDATE
         B     RTYCNT                   RETRY CHAN PGM
         SPACE 3
*                                                           LD @ZA02809
ANALCHAN EQU   *
         BAL   LNKREGB,CHKDIAG          CHECK FOR DIAG CMD
         B     BRTABLE2(IXREG)          DIAG CMD RTN BR TBL
BRTABLE2 EQU   *
         B     PERMEXIT                 DIAG CMD-PER ERR EXIT
         TM    IOSTSB,CSWCDC            CHANNEL DATA CHECK
         BO    CDCERR                   YES-CHECK FOR RETRY
         TM    IOSTSB,CSWCCC+CSWICC     CCC OR ICC
         BZ    SNOEXIT                  NO, EXIT
         TM    CVTOPTA,CVTCCH      CCH IN SYSTEM            LD @ZA02809
*   TWO LINES REDUCED TO ONE AND TWELVE MOVED HERE BY APAR-->  @ZA15403
         BNO   PERMEXIT                  NO-PER ERR EXIT       @ZA15403
*                                                           LD @ZA02809
*              PROCESS CHANNEL ERRORS (ICC AND CCC)         LD @ZA02809
*                                                           LD @ZA02809
*                                                           LD @ZA02809
CHKCHAN  EQU   *                                            LD @ZA02809
         MVC   ERPIBTRM(ONE),EWAXCSW2  MOVE TRM CODE        LD @ZA02809
         NI    ERPIBTRM,EWACTEC    CLEAR UNWANTED BITS      LD @ZA02809
         MVC   ERPIBSEQ(ONE),EWAXCSW2  MOVE SEQ CODE        LD @ZA02809
         NI    ERPIBSEQ,EWACSEQ    CLEAR UNWANTED BITS      LD @ZA02809
         TM    EWARGFG1,EWANORTY   CAN RETRY BE DONE        LD @ZA02809
         BO    UNREC1              NO, UNREC                LD @ZA02809
         TM    EWAXCSW1,EWACSQV+EWACCHV  SEQ CODE AND...    LD @ZA02809*
                                   ...CHAN ADDR VALID ?     LD @ZA02809
         BNO   UNREC1              NO, UNREC                LD @ZA02809
         TM    EWARGFG1,EWACTIO+EWACHIO  HALT I/O OR...     LD @ZA02809*
                                   ...TEST I/O ?            LD @ZA02809
         BM    UNREC1              YES, UNREC               LD @ZA02809
         TM    EWARGFG1,EWACSIO    START I/O ?              LD @ZA02809
         BZ    TSTRESET            NO, BRANCH               LD @ZA02809
         TM    EWAXCSW1,EWACDAV    DEVICE ADDR VALID ?      LD @ZA02809
         BNO   UNREC1              NO, UNREC                LD @ZA02809
TSTRESET EQU   *                                            LD @ZA02809
         CLI   ERPIBTRM,EWATER3    SYSTEM ERROR ?           LD @ZA02809
         BE    SNOEXIT             YES, SNO                 LD @ZA02809
         CLI   ERPIBSEQ,EWASEQ0    SEQ CODE 0 ?             LD @ZA02809
         BE    SNOEXIT             YES, SNO                 LD @ZA02809
         CLI   ERPIBSEQ,EWASEQ6    SEQ CODE 6 ?             LD @ZA02809
         BE    SNOEXIT             YES, SNO                 LD @ZA02809
         CLI   ERPIBSEQ,EWASEQ7    SEQ CODE 7 ?             LD @ZA02809
         BE    SNOEXIT             YES, SNO                 LD @ZA02809
         TM    IOSCC,IOSCC3        SIO COND CODE 3 ?        LD @ZA02809
         BO    UNREC1              YES, UNREC               LD @ZA02809
         TM    IOSCC,IOSCC1        SIO COND CODE 1 ?        LD @ZA02809
         BNO   CKCMDVAL            NO, BRANCH               LD @ZA02809
         L     PARMREG,IOSRST      REAL ADDR OF CCW         LD @ZA02809
         BAL   ICREG,TRANSRTV      GET VIRTUAL ADDR OF REAL LD @ZA02809
         LA    CCWREG,ZERO(PARMREG)  INTO CORRECT REG       LD @ZA02809
         B     SEQ5CHK             BRANCH                   LD @ZA02809
CKCMDVAL EQU   *                                            LD @ZA02809
         TM    EWAXCSW1,EWACCMD    CMD ADDR VALID ?         LD @ZA02809
         BNO   UNREC1              NO, UNREC                LD @ZA02809
         BAL   LNKREG,GETCMD       GET ADDR OF...           LD @ZA02809*
                                   ...FAILING CCW           LD @ZA02809
SEQ5CHK  EQU   *                                            LD @ZA02809
         CLI   ERPIBSEQ,EWASEQ5    SEQ CODE 5 ?             LD @ZA02809
         BE    SEQ5PROC            YES, HANDLE              LD @ZA02809
         CLI   ERPIBSEQ,EWASEQ4    SEQ CODE 4 ?             LD @ZA02809
         BE    SEQ4PROC            YES, HANDLE              LD @ZA02809
         CLI   ERPIBSEQ,EWASEQ3    SEQ CODE 3 ?             LD @ZA02809
         BE    SEQ3PROC            YES, HANDLE              LD @ZA02809
         CLI   ZERO(CCWREG),CCWTIC CMD A TIC ?              LD @ZA02809
         BE    SNOEXIT             YES, SNO                 LD @ZA02809
         CLI   ERPIBSEQ,EWASEQ2    SEQ CODE 2 ?             LD @ZA02809
         BE    SEQ2PROC            YES,HANDLE               LD @ZA02809
SEQ1PROC EQU   *                                            LD @ZA02809
         CLI   ERPIBTRM,EWATER2    SELECTIVE RESET          LD @ZA02809
         BE    CONDRTRY            YES, MAY BE RETRIED      LD @ZA02809
SEQ1TRM1 EQU   *                                            LD @ZA02809
         CLI   ERPIBTRM,EWATER3-EWATER2  NORMAL TERMINATION LD @ZA02809
         BE    SNOEXIT             YES, SNO                 LD @ZA02809
         B     RETRY               NO, RETRY                LD @ZA02809
SEQ2PROC EQU   *                                            LD @ZA02809
         CLI   ERPIBTRM,EWATER2    SELECTIVE RESET          LD @ZA02809
         BE    RETRY               YES, RETRY               LD @ZA02809
         B     SEQ1TRM1            NO, BRANCH               LD @ZA02809
SEQ3PROC EQU   *                                            LD @ZA02809
         CLI   ZERO(CCWREG),CCWSEL SELECT CMD ?             LD @ZA02809
         BE    SNOEXIT             YES, SNO                 LD @ZA02809
         CLI   ZERO(CCWREG),CCWEUP ERASE ALL UNPROCTECTED ? LD @ZA02809
         BE    SNOEXIT             YES, SNO                 LD @ZA02809
         CLI   ZERO(CCWREG),CCWNOP NO-OP ?                  LD @ZA02809
         BE    SNOEXIT             YES, SNO                 LD @ZA02809
         B     RETRY               NO, RETRY                LD @ZA02809
SEQ4PROC EQU   *                                            LD @ZA02809
         CLI   ERPIBTRM,EWATER2    SELECTIVE RESET          LD @ZA02809
         BE    CONDRTRY            YES, MAY BE RETRIED      LD @ZA02809
RETRY    EQU   *                                            LD @ZA02809
         CLI   ZERO(CCWREG),CCWWRT WRITE CMD ?              LD @ZA02809
         BNE   RTYERR              NO, BRANCH               LD @ZA02809
         L     PARMREG,ZERO(CCWREG)    GET REAL DATA ADDR   L5 @ZA03552
         BAL   ICREG,TRANSRTV          GET VIRT DATA ADDR   L5 @ZA03552
         LA    ICREG,ZERO(PARMREG)     INTO CORRECT REG     L5 @ZA03552
         CLI   SBABYTE(ICREG),SBA  2ND BYTE AN SBA ?        LD @ZA02809
         BNE   UNREC1              NO, UNREC                LD @ZA02809
RTYERR   EQU   *                                            LD @ZA02809
         LRA   CCWREG,ZERO(CCWREG) SET REAL ADDR FOR IOS    LD @ZA02809
         ST    CCWREG,IOSRST       POINT TO FAILING CMD     LD @ZA02809
         B     RTYCNT              GO RETRY                 LD @ZA02809
CONDRTRY EQU   *                                            LD @ZA02809
         L     PARMREG,IOSRST      REAL ADDR OF 1ST CCW     LD @ZA02809
         BAL   ICREG,TRANSRTV      GET VIRTUAL ADDR OF REAL LD @ZA02809
         LA    ICREG,ZERO(PARMREG)  INTO CORRECT REG        LD @ZA02809
         CR    ICREG,CCWREG        IS FAILING CMD 1ST...    LD @ZA02809*
                                   ...IN STRING ?           LD @ZA02809
         BE    UNREC1              YES, UNREC               LD @ZA02809
         B     RETRY               GO RETRY                 LD @ZA02809
SEQ5PROC EQU   *                                            LD @ZA02809
         TM    EWARGFG1,EWACSIO    CSW STORE AFTER SIO ?    LD @ZA02809
         BO    SEQ3PROC            YES, HANDLE AS SEQ 3     LD @ZA02809
         B     RETRY               NO, RETRY                LD @ZA02809
         SPACE 3
***********************************************************************
*                                                                     *
*                  GETCMD SUBROUTINE                                  *
*                                                                     *
*        THIS SUBROUTINE STORES THE ADDR OF FAILING                   *
*        COMMAND IN CCWREG, IF THE FAILING CCW HAS DATA               *
*        CHAINIG ON, THIS ROUTINE BACKS UP THE ADDR TO                *
*        THE 1ST CCW IN THE STRING WITH DATA CHAINING.                *
*        IF THE FAILING CCW IS A TIC, THE ADDRESS OS THE              *
*        CCW TIC'ED TO IS USED.                                       *
*        NOTE: IF THE CSW ADDRESS IS ZERO AND DEVICE END,             *
*        THE FAILING CCW IS THE LAST IN THE CHAIN.                    *
*                                                                     *
***********************************************************************
         SPACE 2
GETCMD   EQU   *                                            LD @ZA02809
         SR    ICREG,ICREG         GET CCW ADDR FR CSW WITH    @ZA15403
         ICM   ICREG,M7,IOSCSWCA   HIGH BYTE CLEAR             @ZA15403
         LTR   ICREG,ICREG         IS ADDR ZERO ?           LD @ZA02809
         BZ    CHKDE               YES,SEE IF DE WITHOUT CE LD @ZA02809
         SH    ICREG,CONEIGHT      NO, BACK UP TO...        LD @ZA02809*
                                   ...FAILING CCW.          LD @ZA02809
         BNP   SNOEXIT             IF BAD, GET OUT          LD @ZA02809
         B     GETSTART            GO TO GET CPA ADDR       LD @ZA02809
CHKDE    EQU   *                                            LD @ZA02809
         TM    IOSTSA,CSWCHE       IS CHAN END ON ?         LD @ZA02809
         BO    SNOEXIT             ADDR SHOULD NOT BE ZERO  LD @ZA02809
         TM    IOSTSA,CSWDVE       IS DVC END ON ?          LD @ZA02809
         BNO   SNOEXIT             NO, SHOULDN'T OCCUR.     LD @ZA02809
GETSTART EQU   *                                            LD @ZA02809
         LR    WKREG1,ICREG        SAVE CCW ADDR            LD @ZA02809
         L     PARMREG,IOSRST      SET PARM FOR TRANSLATION LD @ZA02809
         BAL   ICREG,TRANSRTV      GET VIRTUAL ADDR OF REAL LD @ZA02809
         LA    CCWREG,ZERO(PARMREG)  INTO CORRECT REG.      LD @ZA02809
         LR    ICREG,WKREG1        RESTORE CCW ADDRESS      LD @ZA02809
         LR    WKREG1,CCWREG                                LD @ZA02809
CHNLOOP  EQU   *                                            LD @ZA02809
         CR    WKREG1,ICREG        IS THIS THE FAILING CCW  LD @ZA02809
         BE    FOUNDCMD            YES, BRANCH              LD @ZA02809
         CLI   CCWCMD(WKREG1),CCWTIC  IS THIS CCW A TIC ?   LD @ZA02809
         BE    TICRTN              YES, HANDLE              LD @ZA02809
         TM    CCWFLGS(WKREG1),CCWCD IS THIS CCW DATA CHN'D LD @ZA02809
         BNO   TSTCMDCH            NO,CONTINUE CHECKING     LD @ZA02809
         AH    WKREG1,CONEIGHT     UP FAILING CCW ADDR      LD @ZA02809
         B     CHNLOOP             CHECK NEXT CCW           LD @ZA02809
TSTCMDCH EQU   *                                            LD @ZA02809
         TM    CCWFLGS(WKREG1),CCWCC IS THIS CCW CMD CHN'D  LD @ZA02809
         BNO   SEEIFDE             NO, END OF CHAN PGM      LD @ZA02809
         AH    WKREG1,CONEIGHT     UPDATE FAILING CCW...    LD @ZA02809*
                                   ...ADDR AND              LD @ZA02809
         LR    CCWREG,WKREG1       RESTART ADDR             LD @ZA02809
         B     CHNLOOP             CHECK NEXT CCW           LD @ZA02809
SEEIFDE  EQU   *                                            LD @ZA02809
         LTR   ICREG,ICREG         IS CSW ADDR ZERO ?       LD @ZA02809
         BNZ   SNOEXIT             NO, SHOULD HAVE FOUND... LD @ZA02809*
                                   ...FAILING CCW.          LD @ZA02809
         B     FOUNDCMD            YES, FOUND               LD @ZA02809
TICRTN   EQU   *                                            LD @ZA02809
         SH    WKREG1,CONEIGHT     BACK UP TO PREV. CCW     LD @ZA02809
         TM    CCWFLGS(WKREG1),CCWCD  IS IT DATA CHN'D ?    LD @ZA02809
         BO    TICTOADR            YES, BRANCH              LD @ZA02809
         LR    WKREG7,ICREG             SAVE ICREG          L5 @ZA03552
         L     PARMREG,ZERO(CCWREG)   GET REAL TICD TO ADDR L5 @ZA03552
         BAL   ICREG,TRANSRTV          GET VIRT TICD ADDR   L5 @ZA03552
         LA    CCWREG,ZERO(PARMREG)    INTO CORRECT REG     L5 @ZA03552
         LR    ICREG,WKREG7            RESTORE ICREG        L5 @ZA03552
TICTOADR EQU   *                                            LD @ZA02809
         AH    WKREG1,CONEIGHT     GET FAILING TIC ADDR     LD @ZA02809
         LR    WKREG7,ICREG            SAVE ICREG           L5 @ZA03552
         L     PARMREG,ZERO(WKREG1)   GET REAL TICD TO ADDR L5 @ZA03552
         BAL   ICREG,TRANSRTV         GET VIRT TICD TO ADDR L5 @ZA03552
         LA    WKREG1,ZERO(PARMREG)    INTO CORRECT REG     L5 @ZA03552
         LR    ICREG,WKREG7            RESTORE ICREG        L5 @ZA03552
         B     CHNLOOP             CONTINUE                 LD @ZA02809
FOUNDCMD EQU   *                                            LD @ZA02809
         CLI   ZERO(WKREG1),CCWTIC IS RESTART CCW A TIC ?   LD @ZA02809
         BNE   CMDOUT              NO, RETURN               LD @ZA02809
         SH    WKREG1,CONEIGHT     BACK UP TO PREV. CCW     LD @ZA02809
         TM    CCWFLGS(WKREG1),CCWCD  DATA CHAINED ?        LD @ZA02809
         BO    CMDOUT              YES,RETURN               LD @ZA02809
         L     PARMREG,EIGHT(WKREG1)  GET REAL TICD TO ADDR L5 @ZA03552
         BAL   ICREG,TRANSRTV         GET VIRT TICD TO ADDR L5 @ZA03552
         LA    CCWREG,ZERO(PARMREG)    INTO CORRECT REG     L5 @ZA03552
CMDOUT   EQU   *                                            LD @ZA02809
         BR    LNKREG              RETURN TO CALLER         LD @ZA02809
         EJECT
***********************************************************************
*              CHKDIAG SUBROUTINE                                     *
*        THIS  SUBROUTINE PLACES A DIAGNOSTIC WRITE / DIAGNOSTIC READ *
*        COMMAND CODE IN CMDREG AND LINKS TO THE CHKCMD SUBRTN. THE   *
*        CHKCMD SUBRTN CHECKS IF EITHER COMMAND IS CONTAINED IN THE   *
*        CHANNEL PROGRAM.THE RETURN CODE RETURNED BY THE CHKCMD SUBRTN*
*        IS PASSED BACK TO THE CALLER.                                *
***********************************************************************
CHKDIAG  EQU   *
         LA    CMDREG,CCWDWR            DIAG WRITE CMD
         BAL   LNKREG,CHKCMD            LINK TO CHECK CMD
         B     BRTABD(IXREG)            RETURN BRANCH TABLE
BRTABD   EQU   *
         BR    LNKREGB                  DWR FOUND-RETURN
         NOPR  TEMPREG                  PAD FOR RET CODE INDEX
         LA    CMDREG,CCWDRD            DIAG READ CMD
         BAL   LNKREG,CHKCMD            LINK TO CHECK CMD
         BR    LNKREGB                  RETURN WITH RET CODE
         SPACE 3
***********************************************************************
*              CHKCMD SUBROUTINE                                      *
*        THIS SUBROUTINE COMPARES THE COMMAND CODE OF EACH CCW IN A   *
*        CHANNEL PROGRAM TO THE COMMAND CODE CONTAINED IN CMDREG.     *
*        IF THE COMMAND IS FOUND,A RETURN CODE OF ZERO IS PLACED IN   *
*        IXREG. IF IT IS NOT FOUND,THE RETURN CODE IS FOUR.           *
***********************************************************************
CHKCMD   EQU   *
         L     PARMREG,IOSRST      REAL ADDRESS OF FIRST CCW   @YM2594K
         BAL   ICREG,TRANSRTV      GET VIRTUAL ADDRESS OF REAL @YM2594K
         LA    CCWREG,ZERO(PARMREG)    INTO CORRECT REG        @YM2594K
         SR    IXREG,IXREG              CLEAR FOR CMD          @YM2594K
CMDLOOP  EQU   *
         IC    IXREG,CCWCMD(CCWREG)     PICK UP COMMAND        @YM2594K
         CLR   CMDREG,IXREG             CHECK FOR COMMAND      @YM2594K
         BE    SETCFND                  YES-SET COMMAND FOUND RET CODE
         CLI   CCWCMD(CCWREG),CCWTIC   IS IT TIC?           L5 @ZA02841
         BE    ADJADR1                 YES                  L5 @ZA02841
CMDNOTIC EQU   *
         TM    CCWFLGS(CCWREG),CCWCC+CCWCD CHAINING INDICATED
         BZ    SETCNFND                 NO-SET CMD NOT FOUND RET CODE
         LA    CCWREG,EIGHT(CCWREG)     YES-INCR TO NEXT CCW
         CLM   CCWREG,SEVEN,IOSCSWCA   IS NXT CCW FAIL CCW? L5 @ZA02841
*  TWO LINES REDUCED TO ONE AND THREE MOVED HERE BY APAR-->    @ZA15403
         BNE   CMDLOOP                 NO  CONTINUE CHECKING   @ZA15403
SETCNFND EQU   *
         LA    IXREG,FOUR               SET CMD NOT FOUND RC
         BR    LNKREG                   RETURN TO CALLER
ADJADR1  EQU   *
         L     PARMREG,ZERO(CCWREG)     PICK UP NEXT CCW ADDR  @YM2594K
         BAL   ICREG,TRANSRTV      GET VIRTUAL ADDRESS OF REAL @YM2594K
         LA    CCWREG,ZERO(PARMREG)    INTO CORRECT REG        @YM2594K
         B     CMDLOOP                  CONTINUE TO CHECK COMMAND
SETCFND  EQU   *
         LA    IXREG,ZERO               SET CMD FOUND RC
         BR    LNKREG                   RETURN TO CALLER
         SPACE 3
***********************************************************************
*              CMDSRCH SUBROUTINE                                     *
*        THE CMDSRCH SUBROUTINE SEARCHS A CHANNEL PROGRAM,BEGINNING   *
*        WITH THE ADDRESS IN IOBSTART,TO FIND THE ADDRESS OF THE LAST *
*        COMMAND IN THE CHANNEL PROGRAM. THAT IS,THE LAST CCW THAT IS *
*        NOT A TIC AND DOES NOT HAVE THE COMMAND CHAINING FLAG ON.    *
*        WHEN CONTROL IS RETURNED TO THE CALLER,THE LAST COMMAND      *
*        ADDRESS IS IN CCWREG.                                        *
***********************************************************************
CMDSRCH  EQU   *
         L     PARMREG,IOSRST      REAL ADDRESS OF FIRST CCW   @YM2594K
         BAL   ICREG,TRANSRTV      GET VIRTUAL ADDRESS OF REAL @YM2594K
         LA    CCWREG,ZERO(PARMREG)    INTO CORRECT REG        @YM2594K
         LR    WKREG1,CCWREG            ESTABLISH WORK REG
CHKLOOP  EQU   *
         TM    CCWFLGS(WKREG1),CCWCC    CMD CHAINING
         BO    NEXTCCWA                 YES-CHECK NEXT CCW
         TM    CCWFLGS(WKREG1),CCWCD    DATA CHAINING
         BO    NEXTCCWB                 YES-CHECK NEXT CCW
         TM    CCWCMD(WKREG1),CCWX07    LOW ORDER BITS 0'S     @YA01064
         BNZ   NOTICCMD                 BRANCH IF NOT          @YA01064
         TM    CCWCMD(WKREG1),CCWTIC    TIC COMMAND            @YA01064
         BO    ADJADR2                  YES-ADJUST ADDR        @YA01064
NOTICCMD EQU   *                                               @YA01064
         BR    LNKREG                   NO-LAST FOUND,RETURN
NEXTCCWA EQU   *
         LA    WKREG1,EIGHT(WKREG1)     NEXT CCW ADDR
         LR    CCWREG,WKREG1            MAINTAIN LAST CMD ADR
         B     CHKLOOP                  CONTINUE CHAINING CHK
NEXTCCWB EQU   *
         LA    WKREG1,EIGHT(WKREG1)     NEXT CCW ADDR
         B     CHKLOOP                  CONTINUE CHAINING CHK
ADJADR2  EQU   *
         L     PARMREG,ZERO(WKREG1)      NEXT CCW ADDR         @YM2594K
         BAL   ICREG,TRANSRTV      GET VIRTUAL ADDRESS OF REAL @YM2594K
         LA    WKREG1,ZERO(PARMREG)    INTO CORRECT REG        @YM2594K
         LR    CCWREG,WKREG1            MAINTAIN LAST CMD ADR
         B     CHKLOOP                  CONTINUE CHAINING CHK
         SPACE 3
***********************************************************************
*
*              TRANSLATE REAL TO VIRTUAL SUBROUTINE
*        HANDLES INTERFACE TO THE PAGE SUPERVISOR'S ROUTINE WHICH
*        TRANSLATES REAL ADDRESS INTO VIRTUAL ADDRESSES
*
*        NOTE THAT THIS DESTROYS WKREG7 (REG 7) AS WELL AS THE
*        INTERFACE REGS USED GOING TO IEAPTRV AND ICREG (REG 9)
*        WHICH IS USED AS A RETURN REG.
*
***********************************************************************
TRANSRTV DS    0H                     ENTER TRANSLATE ROUTINE  @YM2594K
         LA    PARMREG,ZERO(PARMREG)   CLEAR BYTE ZERO         @YM2594K
*
*              1 LINE DELETED FOR ----->                    LD @ZA02815
*
         STM   ICREG,BASREG,EWAIERP+16  SAVE REGS              @ZA11043
         SR    WKREG7,WKREG7                                   @ZA11043
         USING RQE,RQEBASE             BASE RQE                @ZA04166
         L     RQEBASE,IOSUSE          LOAD RQE BASE REG       @ZA04166
         TM    RQETYPE,RQE1TO1         DOES V EQUAL R ?        @ZA04166
         BO    TRRETRN           YES RETURN NO TRANSLATION     @ZA11043
         DROP  RQEBASE                                         @ZA04166
         L     BASREG,CVTPTRV          GET ENTRY TO TRANSLATE  @YM2594K
*                                              REAL TO VIRTUAL @YM2594K
*        GETLOCK SETLOCK OBTAIN DELETED BY APAR-------->    E12 ZA30908
         BALR  EWAREG,BASREG           GO DO TRANSLATION       @YM2594K
         LR    WKREG7,BASREG       SAVE RETURN CODE         LD @ZA02815
*
*              2 LINES DELETED FOR ----->                   LD @ZA02815
*
*        FREELOCK SETLOCK RELEASE DELETED BY APAR---------> E12 ZA30908
         USING START,BASREG                                    @ZA04166
         L     EWAREG,IOSERP           RESTORE BASE FOR EWA LD @ZA02815
TRRETRN  LM    ICREG,BASREG,EWAIERP+16  RESTORE REGS           @ZA11043
         LTR   WKREG7,WKREG7       CHECK RETURN CODE...     LD @ZA02815*
                                   ...FROM CCW TRANSLATOR.  LD @ZA02815
         BNZ   UNREC1                  BRANCH ON BAD           @YA03250
*                                                TRANSLATION   @YM2594K
         BR    ICREG                   RETURN TO CALLER        @YM2594K
         EJECT
**********
*
*        REGISTER DEFINITIONS
*
**********
TEMPREG  EQU   0                        SELDOM USED WORKREG
PARMREG  EQU   1                        INPUT PARAMETER REG
IOSBREG  EQU   2                        IOSB ADDRESS
DCBREG   EQU   3                        DCB ADDRESS
UCBREG   EQU   4                        UCB ADDRESS
CVTREG   EQU   5                        CVT ADDRESS
CCWREG   EQU   6                        CCW ADDRESS
WKREG7   EQU   7                        WORK REG
WKREG1   EQU   8                        WORK REG
CMDREG   EQU   WKREG1                   COMMAND REG
ICREG    EQU   9                        CHAR REG
LNKREG   EQU   10                       LINK REG
IXREG    EQU   11                       INDEX REG
LNKREGB  EQU   12                       SECOND LINK REG
LDNAMREG EQU   13                       NEXT LOAD MODULE NAME
IOBREG   EQU   LDNAMREG                 IOB BASE
RETREG   EQU   14                       BRANCH ENTRY ADDR TO XCTL
EWAREG   EQU   RETREG                   ERP WORKAREA BASE
BASREG   EQU   15                       ERP BASE REG
RQEBASE  EQU   ICREG                                           @ZA11043
         SPACE 2
**********
*
*        DEVICE TYPE FLAGS USED WITH UCBTBYT4
*
**********
DEV3277  EQU   X'09'                    3277 DEVICE
DEV3284  EQU   X'0A'                    3284 DEVICE
DEV3286  EQU   X'0B'                    3286 DEVICE
DEV3158  EQU   X'0C'                    3158 DEVICE
         SPACE 2
**********
*
*        CSW  FLAGS
*
**********
CSWATTN  EQU   X'80'                    ATTENTION           E12 ZA25738
CSWSTMOD EQU   X'40'                    STATUS MODIFIER     E12 ZA25738
CSWCUE   EQU   X'20'                    CONTROL UNIT END    E12 ZA25738
CSWBUSY  EQU   X'10'                    BUSY                E12 ZA25738
CSWSMBSY EQU   CSWSTMOD+CSWBUSY         ST. MOD. AND BUSY   E12 ZA25738
CSWCHE   EQU   X'08'                    CHANNEL END
CSWDVE   EQU   X'04'                    DEVICE END
CSWCDE   EQU   CSWCHE+CSWDVE            CHANNEL END AND DEVICE END
CSWUCK   EQU   X'02'                    UNIT CHECK
CSWUEX   EQU   X'01'                    UNIT EXCEPTION
CSWIL    EQU   X'40'                    INCORRECT LENGTH
CSWPGC   EQU   X'20'                    PROGRAM CHECK
CSWPTC   EQU   X'10'                    PROTECTION CHECK
CSWCDC   EQU   X'08'                    CHANNEL DATA CHECK
CSWCCC   EQU   X'04'                    CHANNEL CONTROL CHECK
CSWICC   EQU   X'02'                    INTERFACE CONTROL CHECK
CSWCCK   EQU   X'01'                    CHAINING CHECK
CATCHAN  EQU   CSWCDC+CSWCCC+CSWICC     CATASTROPHIC CHANNEL ERRORS
CATERR   EQU   CSWIL+CSWPGC+CSWPTC+CSWCCK STATUS ERRORS
         SPACE 2
**********
*
*        SENSE FLAGS
*
**********
SENCR    EQU   X'80'                    COMMAND REJECT
SENIR    EQU   X'40'                    INTERVENTION REQUIRED
SENBOC   EQU   X'20'                    BUS OUT CHECK
SENEC    EQU   X'10'                    EQUIPMENT CHECK
SENDC    EQU   X'08'                    DATA CHECK
SENCC    EQU   X'02'                    CONTROL CHECK
SENOC    EQU   X'01'                    OPERATION CHECK
SENDCUS  EQU   X'0C'                  DATA CHECK,UNIT SPECIFY  @YA00844
SNIRECUS EQU   X'54'                    INT REQ,EQUIP CHK,UNIT SPECIFY
SENECUS  EQU   X'14'                    EQUIP CHECK,UNIT SPECIFY
         SPACE 2
*                                                              @YA01061
*        THE FOLLOWING FLAGS ARE USED TO SET THE PROPER BITS   @YA01061
*        IN EWASTUP (INTERFACE TO STATISTICS TABLE UPDATE      @YA01061
*        ROUTINE) SO THERE WILL BE PROPER EDITING AND PRINTING @YA01061
*        WHEN IFCEREP0 PRINTS SYS1.LOGREC.                     @YA01061
*                                                              @YA01061
STATDC   EQU   X'80'                   DATA CHECK              @YA03227
STATEC   EQU   X'10'                   EQUIPMENT CHECK         @YA03227
STATBOC  EQU   X'20'                   BUS OUT CHECK           @YA03227
STATIR   EQU   X'40'                   INTERVENTION REQUIRED   @YA03227
**********
*
*        STATISTICS TABLE MULTI BIT SENSE FLAGS
*
**********
STDCUS   EQU   X'10'                    DATA CHECK,UNIT SPECIFY
STCDC    EQU   X'01'                    CHANNEL DATA CHECK
STIRUS   EQU   X'08'                    INT REQ,UNIT SPECIFY
STIRECUS EQU   X'04'                    INT REQ,EQUIP CHK,UNIT SPECIFY
STECUS   EQU   X'02'                    EQUIP CHECK,UNIT SPECIFY
         SPACE 2
**********
*
*        CCW COMMAND CODES , DEFINITIONS AND FLAGS
*
**********
CCWCPY   EQU   X'07'                    COPY
CCWWRT   EQU   X'01'                    WRITE
CCWEWR   EQU   X'05'                    ERASE WRITE
CCWRDM   EQU   X'06'                    READ MODIFIED
CCWSNS   EQU   X'04'                    SENSE
CCWNOP   EQU   X'03'                    NO-OP
CCWRDB   EQU   X'02'                    READ BUFFER
CCWDWR   EQU   X'09'                    DIAGNOSTIC WRITE
CCWDRD   EQU   X'0A'                    DIAGNOSTIC READ
CCWSEL   EQU   X'0B'                    SELECT
CCWEWA   EQU   X'0D'                    ER/WRT ALTERNATE    E12 ZA25921
CCWEUP   EQU   X'0F'                    ERASE ALL UNPROTECTED
CCWCC    EQU   X'40'                    COMMAND CHAINING
CCWCD    EQU   X'80'                    DATA CHAINING
CCWTIC   EQU   X'08'                    TIC OP CODE
CCWX07   EQU   X'07'                    TIC ISOLATER
CCWCMD   EQU   0                        COMMAND FIELD
CCWFLGS  EQU   4                        FLAGS FIELD
CCWCNT   EQU   6                        COUNT FIELD
         SPACE 2
**********
*
*        MISC   DEFINITIONS,FLAGS AND CONSTANTS
*
**********
FIRSTFLG EQU   X'80'                    FIRST TIME FLAG
INTRETRY EQU   X'10'                    AEA FLAG
UEXRETRY EQU   X'20'                   AEA FLAG
ZERO     EQU   0                        ZERO
ONE      EQU   1                        ONE
TWO      EQU   2                        TWO
THREE    EQU   3                        THREE
FOUR     EQU   4                        FOUR
FIVE     EQU   5                   FIVE                        @YM5690K
EIGHT    EQU   8                        EIGHT
NINE     EQU   9                        NINE
IOSWTO   EQU   253                      IOS WTO ROUTINE ID
STATUP   EQU   254                      STATISTICS UPDATE ROUTINE ID
RETURN   EQU   3                        RETURN SVC
EREXCP   EQU   15                       ERROR SVC
N255     EQU   255                      AND MASK
HEX01    EQU   X'01'                    APPENDAGE FLAG
HEX04    EQU   X'04'                    APPENDAGE FLAG
HEX07    EQU   X'07'                    APPENDAGE FLAG
BTAMOPEN EQU   X'24'       TP OP-CODE USED BY BTAM OPEN        @YM5690K
SBABYTE  EQU   1           DISP OF SBA IN DATA STREAM.      LD @ZA02809
SBA      EQU   X'11'       SET BUFFER ADDRESS CHAR          LD @ZA02809
SEVEN    EQU   7                       VALUE OF SEVEN       L5 @ZA02841
HIGHDVC  DC    X'100D'            HIGH DEVICE TYPE SUPPORTED   @ZA30723
LOWDVC   DC    X'1009'             LOW DEVICE TYPE SUPPORTED   @ZA15403
M7       EQU   7              MASK VALUE OF SEVEN              @ZA15403
         SPACE 2
**********
*
*        CONSTANTS
*
**********
CONEIGHT DC    H'8'                     CONSTANT EIGHT
CC3SNS   DC    XL2'10FE'                SPECIAL SENSE FOR SIOCC=3
PACHAREA EQU   *
         DC    35C'010E'                PATCH AREA FOR MAINTENANCE
         EJECT
UCBSET   DSECT
         IEFUCBOB
         EJECT
CVTSET   DSECT
         CVT
         EJECT
         IEZIOB
ERPIBTRM EQU   IOBWORK             TERM CODE FROM ERPIB     LD @ZA02809
ERPIBSEQ EQU   IOBWORK+ONE         SEQ CODE FROM ERPIB      LD @ZA02809
         EJECT
         IECDRQE
         EJECT
         IECDERWA  (NONE)
         EJECT
         IECDIOSB
         EJECT
         DCBD  DSORG=CX
         EJECT
         IHAPSA
         END
