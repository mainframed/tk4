         TITLE 'GSVPLT SCALE AND PLOT'
*STATUS. CHANGE LEVEL 0
*
*FUNCTION/OPERATION. GSVPLT GENERATES THE GRAPHIC ORDERS TO DISPLAY A
*   POINT,CHARACTER,OR VECTOR PLOT.  A COMBINATION OF THE VARIOUS PLOT
*   TYPES MAY BE DISPLAYED.
*   THE GRAPHIC ORDERS ARE STORED IN THE GRAPHIC DATA OUTPUT AREA(GDOA)
*
*ENTRY POINTS. GSVPLT VIA CALL OR LINK MACRO   ALIAS NAME IFFPGA
*INPUT.OUTPUT CONTROL BLOCK POINTER (OCBP) AND A PARAMETER ADDRESS
*   WHICH POINTS TO A SEQUENCE OF ADDRESSES AND EBCDIC CHARACTERS IN A
*   USER PROVIDED PARAMETER TABLE
*
*OUTPUT. A STRING OF GRAPHIC ORDERS SUITABLE FOR PLOTTING
*EXTERNAL ROUTINES. GOFFSG-OFF SCREEN/GRID INTERSECTION ROUTINE
*
*EXITS-NORMAL. COMPLETION OF TASK EXIT VIA RETURN MACRO
*     -ERROR. HEXADECIMAL 4,C,10,18,1C, OR 20 IN REG. 15
*  IMMEDIATE RETURN. EXIT VIA RETURN MACRO
*     -ERROR. HEXADECIMAL 28,2C OR 30 IN REG. 15 DOES NOT RETURN
*      IMMEDIATELY-COMPLETION OF TASK AND RETURN VIA RETURN MACRO
*
*TABLES/WORK AREAS. USER SPECIFIED PARAMETER TABLE, XYLIM TABLE, UTAB,
*   VTAB VALUE TABLES AND A USER SUPPLIED WORK AREA
*
*ATTRIBUTES. READ ONLY, REENTRANT
*
IFFPGAVP CSECT                          GSVPLT
* 102700,107040-107160,172700                                    A29402
* 138060,138120,174100                                           A28795
*0669                                                              7468
* GSVPLT ROUTINE-SAVE REGISTERS-SET RETURN REGISTER AND INITIALIZE
*
         ENTRY GSVPLT
GSVPLT   SAVE  (14,12),T,*              SYSTEM SAVE MACRO
         BALR  9,0
         USING *,9                      BASE REGISTER
         USING XYLIM,PATREG
         USING X1,XYLREG
         USING OVFSAVE,WKAREG
         SR    15,15                    CLEAR RETURN CODE
         LM    OBPREG,PATREG,0(1)       LOAD CONTROL BLOCK AND PARTAB
         L     OABREG,0(0,OBPREG)       CONTROL BLOCK ADDRESS
         L     WKAREG,4(0,OBPREG)       WORK AREA ADDRESS
*  SAVE MASK BITS AS SET BY USER
         ST    9,MASKSV
         SR    WRKREG,WRKREG
         SPM   WRKREG
*   CLEAR WORKAREA-TOTAL TEMPORARY STORAGE
*
         LA    CNTREG,72                COUNT FOR WORK AREA
         SR    CONREG,CONREG            SET INDEX CONTROL
CLEARWK  ST    15,OVFSAVE(CONREG)       CLEAR WORK AREA
         A     CONREG,FOUR              MODIFY
         BCT   CNTREG,CLEARWK           CONTINUE
         MVI   COUNT+1,X'01'            SET COUNT TO 1
* CHECK INPUT PARAMETERS
*
         L     XYLREG,XYLIM             XYLIM ADDRESS
         BAL   INTREG,XYLCHK            CHK X1,X2,Y1,Y2 FOR LIMITS
*
* TEST IF FLOATING PT.OR FIXED IS SPECIFIED
*
         CLI   F,C'B'                   FIXED PARAMETER
         BE    OV1                      YES
         CLI   F,C'F'                   FLOAT PRAAMETER
         BE    OV1                      YES
         BAL   LINREG,ERR40             SET ERROR CODE-COUNT ERRORS
OV1      CLI   S,C'S'                   SCALE
         BE    OV2                      YES
         CLI   S,C'N'                   NO SCALE
         BE    OV2                      YES
         BAL   LINREG,ERR40             SET ERROR CODE-COUNT ERRORS
*
* TEST FOR ABSOLUTE OR RELATIVE MODE
*
OV2      CLI   A,C'A'                   ABSOLUTE MODE
         BE    OV3                      YES
         CLI   A,C'R'                   RELATIVE MODE
         BE    OV3                      YES
         BAL   LINREG,ERR40             SET ERROR CODE-COUNT ERRORS
*
* TEST INCREMENT CODE
*
OV3      CLI   I,C'W'                   NO-INCREMENT
         BE    OV4                      YES
         CLI   I,C'X'                   INCREMENT U-ONLY
         BE    OV4                      YES
         CLI   I,C'Y'                   INCREMENT V-ONLY
         BE    OV4                      YES
         CLI   I,C'Z'                   INCREMENT U AND V
         BE    OV4                      YES
         BAL   LINREG,ERR40             SET ERROR CODE-COUNT ERRORS
*
* TEST PLOT TYPE CODE
*
*
OV4      CLI   PTYPE,C'A'               POINT PLOT
         BE    OV5                      YES
         CLI   PTYPE,C'B'               CHARACTER PLOT
         BE    OV5                      YES
         CLI   PTYPE,C'C'               VECTOR PLOT
         BE    OV5                      YES
         CLI   PTYPE,C'D'               VECTOR AND POINT
         BE    OV5                      YES
         CLI   PTYPE,C'E'               VECTOR AND CHARACTER
         BE    OV5                      YES
         BAL   LINREG,ERR40             SET ERROR CODE-COUNT ERRORS
*
* CHECK S/G OPTIONS
*
*
*   TEST OFF S/G OPTION SPECIFIED AND DECIDE BOUNDARY TO BE OBSERVED
*
OV5      CLI   SG,C'A'                  IS OPTION A SPECIFIED
         BE    MVGRDLIM                 IF YES USE GRID LIMITS
         CLI   SG,C'B'                  IS OPTION B SPECIFIED
         BE    MVSCRLIM                 IF YES USE SCREEN LIMITS
         CLI   SG,C'C'                  IS C OPTION SPECIFIED
         BE    MVGRDLIM                 IF YES USE GRID LIMITS
         CLI   SG,C'D'                  IS D OPTION SPECIFIED
         BE    MVGRDLIM                 IF YES USE GRID LIMITS
         CLI   SG,C'E'                  IS E OPTION SPECIFIED
         BE    MVSCRLIM                 IF YES USE SCREEN LIMITS
         BAL   LINREG,ERR40             OTHERWISE INPUT ERROR ASSUME E
MVSCRLIM LA    WRKREG,SCLCHK           GET SCREEN CHECK RT ADDRESS
         ST    WRKREG,WRTADDR           STORE THE ROUTINE ADDR USED
         LA    WRKREG,LOHI              SCREEN LIMITS START ADDRESS
         ST    WRKREG,SABL              STORE THE ADDRESS AT SABL
         B     OV6
MVGRDLIM LA    WRKREG,GRLCHK           LOAD GRID ROUTINE CHECK ADDRESS
         ST    WRKREG,WRTADDR           STORE THE ROUTINE ADDR USED
         ST    XYLREG,SABL              STORE GRID LIMITS ADDR
OV6      CLC   N,ZERO                   N COMPARED TO ZERO
         BH    OV7                      N GREATER THAN ZERO
         BAL   LINREG,ERR40             SET ERROR CODE-COUNT ERRORS
* IS SYMBOL IN PARAMETER TABLE
*
OV7      CLI   PTYPE,C'B'               CHARACTER PLOT SPECIFIED
         BE    OV8                      YES
         CLI   PTYPE,C'E'               VECTOR AND CHARACTER SPECIFIED
         BNE   STADD                    SKIP OVER-LAP CHECK
*
* IS CHARACTER GIVEN IN TABLE
*
OV8      LH    VALREG,SYMBOL            LETTER TO PLOT
         N     VALREG,BYTE3             MASK FOR THIRD BYTE
         BC    4,CHSMOD                 LETTER PRESENT
         BAL   LINREG,ERR40             SET ERROR CODE-COUNT ERRORS
*
*   SUBROUTINE TO TEST AND DEVELOPE GRAPHIC ORDER  FOR
*   CHARACTER MODE AND SIZE
*   PATREG CONTAINS THE ADDRESS OF THE PARAMETER TABLE ON ENTRY
*   ORDREG CONTAINS THE GRAPHIC ORDER DEVELOPED ON RETURN
*   IF MODE OR SIZE ARE INCORRECTLY SPECIFIED, UNPROTECTED AND BASIC
*   ARE ASSUMED
CHSMOD   CLI   CMOD,C'P'                PROTECTED
         BE    PLEG
         CLI   CMOD,C'F'                UNPROTECTED
         BE    FLEG
         BAL   LINREG,ERR40             SET ERROR CODE-COUNT ERRORS
FLEG     LH    VALREG,GFSC
SIZE     CLI   CSIZE,C'L'               LARGE
         BE    SIZEL
         CLI   CSIZE,C'B'               BASIC
         BE    ORDSTO
         BAL   LINREG,ERR40             SET ERROR CODE-COUNT ERRORS
ORDSTO   STH   VALREG,CHARMOD           ORDER-MODE-SIZE
         B     NOCHK                    CHECK OVERLAP LETTER
SIZEL    A     VALREG,ONE               MODIFY ORDER TO LARGE
         B     ORDSTO
PLEG     LH    VALREG,GFPC
         B     SIZE
GFSC     DC    X'2A40'
GFPC     DC    X'2A44'
*
* CHECK OVERLAP LETTERS
NOCHK    CLI   E,C'O'                   OVERLAP LETTER PRESENT
         BE    STADD                    YES
         CLI   E,C'N'                   NO-OVERLAP-WANTED
         BE    STADD                    YES
         BAL   LINREG,ERR40             SET ERROR CODE-COUNT ERRORS
*
* STORE VALUES FROM UTAB AND VTAB IN WORKAREA-SCALED VALUES AFTER SCALE
*
STADD    L     WRKREG,UTAB              UTAB ADDRESS
         L     VALREG,0(0,WRKREG)       FIRST VALUE
         ST    VALREG,UA                ABSOLUTE UA
         ST    VALREG,UASCALE           ABSOLUTE-MAY BE SCALED
         STH   VALREG,X2FIN             MAY BE FINAL FIXED VALUE
         L     WRKREG,VTAB              VTAB ADDRESS
         L     VALREG,0(0,WRKREG)       FIRST VALUE
         ST    VALREG,VA                ABSOLUTE VA
         ST    VALREG,VASCALE           ABSOLUTE-MAY BE SCALED
         STH   VALREG,Y2FIN             MAY BE FINAL FIXED VALUE
*
* IS FLOATING SPECIFIED
*
         CLI   F,C'F'                   FLOATING PT. SPECIFIED
         BNE   NOFLOAT                  INDICATES FIXED OR NO PARAMETER
*
* IS SCALING SPECIFIED
*
         CLI   S,C'S'                   SCALING SPECIFIED
         BNE   NOSCALE1                 INDICATES NO SCALE-CONVERT TO
*                                       FIXED PT. UA VALUES
*
* SET UP VALUES TO CONVERT XYLIM TABLE TO FLOATING POINT VALUES
*
         LA    CONREG,4                 DO FOUR VALUES
         SR    INXREG,INXREG            CLEAR CONTROL MODIFICATION
         SR    CNTREG,CNTREG            CLEAR CONTROL MODIFICATION
NEXTXY   LH    VALREG,X1(INXREG)        GET X1,Y1,X2,Y2 VALUES
         BAL   LINREG,FLTCONV           CONVERT FIXED VALUE TO FLOAT PT
         ST    VALREG,FX1(CNTREG)       STORE IN WORKAREA
         A     INXREG,TWO               MODIFY BY TWO BYTES
         A     CNTREG,FOUR              MODIFY BY FOUR BYTES
         BCT   CONREG,NEXTXY
*
* FLOATING POINT SCALE-SUBROUTINE
* EQUATION XS=(UA-U1)*(X2-X1)/(U2-U1)+X1
* EQUATION YS=(VA-V1)*(Y2-Y1)/(V2-V1)+Y1
*
FLTSCAL  LA    CNTREG,2                 SET CONTROL
         SR    CONREG,CONREG            CLEAR MODIFIER
         SR    INXREG,INXREG            CLEAR MODIFIER
FLTSCAL1 LE    6,U1(CONREG)             U1 THEN V1
         LE    4,U2(CONREG)             U2 THEN V2
         SER   4,6                      U2-U1 THEN V2-V1
         BC    13,ERR16RET         MINUS OR ZERO
* LOAD FLOATING PT VALUE FROM WORKAREA
         LE    0,UA(INXREG)             UA-STORED THRU UN
         SER   0,6                      UA-U1 VARIABLE RESULT
         LE    6,FX1(INXREG)            X1 OR Y1 CONVERTED VALUE
         LE    2,FX2(INXREG)            X2 OR Y2 CONVERTED VALUE
         SER   2,6
         MER   0,2                      UA-U1*X2-X1 OR VA-V1*Y2-Y1
         DER   0,4                      /U2-U1 OR V2-V1
         AER   0,6                      +X1 OR Y1
         STE   0,UASCALE(INXREG)        X OR Y SCALED VALUE
         A     CONREG,EIGHT             MODIFY FOR V1-V2
         A     INXREG,FOUR
         BCT   CNTREG,FLTSCAL1
*
* SCALE WAS SPECIFIED OR NO SCALE IS REQUIRED-CONVERT DATA TO FIXED PT.
*
*
NOSCALE1 LA    CONREG,2                 SET CONTROL
         SR    CNTREG,CNTREG            CLEAR INDEX VALUE
         SR    INXREG,INXREG
NEXTSCAL L     VALREG,UASCALE(INXREG)   LOAD SCALED OR UNSCALED VALUE
         BAL   INTREG,FIXCONV           CONVERT TO FIXED PT.
         ST    VALREG,UASCALE(INXREG)   CONVERTED FIXED VALUE
         STH   VALREG,X2FIN(CNTREG)     FINAL VALUE
         A     CNTREG,TWO               MODIFY
         A     INXREG,FOUR
         BCT   CONREG,NEXTSCAL
         B     CHKCNT
*
* FLOATING PT IS NOT SPECIFIED
* IS SCALING SPECIFIED
*
*
*
* STORE  X1,Y1,X2,Y2 IN WORK AREA
NOFLOAT  LA    CONREG,4
         SR    INXREG,INXREG
         SR    CNTREG,CNTREG
NEXXY    LH    VALREG,X1(INXREG)        X1,Y1,X2,Y2
         ST    VALREG,FX1(CNTREG)       X1,Y1,X2,Y2 IN WORKAREA
         A     INXREG,TWO
         A     CNTREG,FOUR
         BCT   CONREG,NEXXY
*
         CLI   S,C'S'                   IS SCALE INDICATED
         BNE   CHKCNT                   INDICATES NO SCALE
* DATA MUST BE SCALED IN FIXED PT.
*
FIXSCAL  LA    INTREG,2                 SET INTERNAL CONTROL
         SR    CONREG,CONREG            CLEAR MODIFIER
         SR    INXREG,INXREG            CLEAR MODIFIER
FIXSCAL1 L     VALREG,U1(CONREG)        U1 THEN V1
         L     TEMREG,U2(CONREG)        U2 THEN V2
         SR    TEMREG,VALREG            U2-U1
         BC    13,ERR16RET         MINUS OR ZERO
         L     XREG,UA(INXREG)          UA
         SR    XREG,VALREG              UA-U1  VARIABLE RESULT
         L     YREG,FX1(INXREG)         X1 OR Y1
         L     VALREG,FX2(INXREG)       X2 OR Y2
         SR    VALREG,YREG              X2-X1
         SR    EREG,EREG                CLEAR MULTIPLICAND
         MR    EREG,VALREG              UA-U1*X2-X1
         DR    EREG,TEMREG
         AR    XREG,YREG
         ST    XREG,UASCALE(INXREG)     X OR Y SCALED
         A     CONREG,EIGHT
         A     INXREG,FOUR
         BCT   INTREG,FIXSCAL1
         LH    VALREG,UAS2              X
         STH   VALREG,X2FIN             SCALED VALUE OF X
         LH    VALREG,VAS2              Y
         STH   VALREG,Y2FIN             SCALED VALUE OF Y
*
*CHECK COUNT-IS IT EQUAL TO TWO OR MORE
*
CHKCNT   CLC   COUNT,TWO+2              COMPARE COUNT TO TWO
         BNL   SECOND                   YES
         L     WRKREG,WRTADDR           CHECK FOR GRID IF APPLIES
         BALR  LINREG,WRKREG
         CLC   N,ONE+2                 FOR ONLY ONE POINT
         BE    ONEPT                   HANDLE IT IN POINT MODE
         LA    CNTREG,2
         LA    ADDREG,ORDER1
         CLI   PTYPE,C'B'
         BNH   PTMODE                   MODE INITIALIZE GDOA FOR PTONLY
*                                       GENERATE
         MVI   ORDER1,X'2A'             ORDER FOR VECTOR PLOTTING
         MVI   ORDER2,X'02'
         MVC   GOMODE,ORDER1
         BAL   LINREG,STORE             GIVE TO STORE ROUTINE
         B     SECOND
PTMODE   MVI   ORDER1,X'2A'             ORDER FOR POINT PLOTTING
         MVI   ORDER2,X'00'             GENERATED GIVE
         MVC   GOMODE,ORDER1
         BAL   LINREG,STORE             TO STORE ROUTINE
         B     SECOND
*
* IS N VALUE EQUAL TO OR LESS THAN 1
*
*
*
* WAS PT. OFF SCREEN-ONLY 1 POINT ESTABLISHED
*
ONEPT    BAL   LINREG,SCLCHK            DISCONTINUE IF ONLY ONE
         CLC   SWSTATUS,STATUS1         POINT AND IT IS OFF SCREEN
         BNE   ERR32RET
*
* PT ON SCREEN- SET UP ORDER FOR A PT.
*
         MVI   ORDER1,X'2A'             PT PLOT MODE
         MVI   ORDER2,X'00'
         MVC   GOMODE,ORDER1
         MVC   ORDER3,X2FINAL           X AND Y FOR A POINT
         LA    CNTREG,6                 MOVE SIX BYTES
         LA    ADDREG,ORDER1            ADDRESS OF DATA
         BAL   LINREG,STORE             STORE GRAPHIC DATA IN GDOA
         B     RET                      RETURN TO USER
*
* IS COUNT EQUAL TO N
*
NOT1     CLC   N,COUNT                  COMPARE N TO COUNT
         BE    RET                      END OF PROGRAM
* UPDATE COUNT FOR NEXT POINT
         LH    CNTREG,COUNT             COUNT
         A     CNTREG,ONE               UPDATE COUNT
         STH   CNTREG,COUNT             SAVE COUNT
*
         L     VALREG,ZERO              CLEAR SKIPSW
         STH   VALREG,SKIPSW
         MVC   PT1SW,OFFSW              UPDATE SCREEN GRID SWITCH
* SAVE THE PREVIOUS CALCULATED VALUE
         L     VALREG,UASCALE           X VALUE MAXIMUM SIZE
         ST    VALREG,UASCALE2          PT1-X-VALUE
         L     VALREG,VASCALE           Y VALUE MAXIMUM SIZE
         ST    VALREG,VASCALE2          PT1-Y-VALUE
         L     VALREG,X2FINAL
         ST    VALREG,X1FINAL
*
         SR    CONREG,CONREG            CLEAR MODIFIER
         LA    CNTREG,2                 SET LOOP CONTROL
* THIS ROUTINE GET U-AND V TABLE VALUES
*
* GET NEXT VALUE FROM TABLE-UTAB
*
INCU     LH    INXREG,INDEX             TABLE INDEX VALUE
         L     WRKREG,UTAB              UTAB ADDRESS
         CLI   I,C'X'                   U ARRAY INCREMENTAL
         BE    UINCR                    YES
         CLI   I,C'Z'                   U AND V ARRAY INCREMENTAL
         BE    UINCR                    YES-BOTH U AND V ARE INCREMENT
FLCHK    CLI   F,C'F'                   FLOATING PT.
         BE    FLRCHK                   YES-IS IT RELATIVE
FIXVAL   L     VALREG,4(INXREG,WRKREG)  NO -BINARY OR ASSUMED BINARY
         CLI   A,C'R'                   RELATIVE
         BNE   USTORE                   NOT RELATIVE-STORE INDEXED VAL.
         B     USTORA                   RELATIVE-ADD PREVIOUS VALUE
UINCR    CLI   F,C'F'                   FLOATING PT.
         BE    FLOATAD                  FLOAT SPECIFIED
         L     VALREG,4(0,WRKREG)       FIXED INCREMENT VALUE-NOT INDEX
USTORA   A     VALREG,UA(CONREG)        ADD PREVIOUS ABS. VALUE
USTORE   ST    VALREG,UA(CONREG)        NEXT ABS. VALUE
         ST    VALREG,UASCALE(CONREG)   NEW X OR Y VALUE
         B     INCV                     GET THE V VALUE
*
* FLOATING PT NUMBERS SPECIFIED
*
FLRCHK   LE    0,4(INXREG,WRKREG)       NEXT FLOATING VALUE-INDEXED
         CLI   A,C'R'                   IS FLOAT RELATIVE
         BNE   STORFL                   NO REPLACE VALUE
         B     STORAF                   YES
FLOATAD  LE    0,4(0,WRKREG)            FLOAT INCREMENT-NOT INDEXED
STORAF   AE    0,UA(CONREG)             FLOAT ADD ABS. VALUE
STORFL   STE   0,UA(CONREG)             NEW VALUE X OR Y
         STE   0,UASCALE(CONREG)        NEW X OR Y VALUE
*
* SET UP V TABLE AND MAKE CHECKS
*
INCV     BCT   CNTREG,DOV               DO V TABLE
         B     OUT
DOV      LA    CONREG,4                 SET MODIFIER
         L     WRKREG,VTAB              VTAB ADDRESS
         CLI   I,C'Y'                   V INCREMENTAL
         BE    UINCR                    YES
         CLI   I,C'Z'                   V AND U INCREMENTAL
         BE    UINCR                    YES
         B     FLCHK                    NO
*
* BOTH TABLE VALUES STORED-UPDATE INDEX
*
OUT      A     INXREG,FOUR              UPDATE INDEX VALUE
         STH   INXREG,INDEX             SAVE TABLE INDEX VALUE
         CLI   F,C'F'
         BE    CHKSCA                   YES
         CLI   S,C'S'
         BE    FIXSCAL                  YES-SCALE NEW VALUES
* STORE FIXED UNSCALED VALUES FOR NEXT PT VALUE
STOXY    L     VALREG,UA
         STH   VALREG,X2FIN             X2 UNSCALED FIXED VALUE
         L     VALREG,VA
         STH   VALREG,Y2FIN             Y2 UNSCALED FIXED VALUE
         B     CHKCNT                   NO
CHKSCA   CLI   S,C'S'                   SCALING SPECIFIED
         BE    FLTSCAL                  YES
         B     NOSCALE1                 NO
SECOND   BAL   LINREG,SCRNGRD
         CLC   SKIPSW,ONE+2             SKIP PLOTTING IF REQUIRED
         BE    NOT1
         CLI   PTYPE,C'B'               FOR CHARACTER MODE
         BE    BEAMOFF                  POSITION BEAM OFF
         CLI   PTYPE,C'A'               FOR POINT MODE
         BE    BEAMON                   POSITION BEAM ON
         CLC   COUNT,ONE+2              FOR OTHER THAN
         BH    BEAMON                   FIRST POINT,POSITION BEAM ON
BEAMOFF  MVC   ORDER3,X2FINAL           OTHERWISE INSERT
         OI    ORDER3,X'40'             BLANK BEAM BIT IN
         LA    CNTREG,4                 ORDER AND
         LA    ADDREG,ORDER3
         BAL   LINREG,STORE             STORE
         B     FLOW2                    BACK TO NORMAL FLOW
BEAMON   MVC   ORDER3,X2FINAL           POSITION AT
         LA    ADDREG,ORDER3
         LA    CNTREG,4                 PT2,BEAM ON
         BAL   LINREG,STORE             STORE
FLOW2    CLI   PTYPE,C'B'               IF CHARACTER
         BE    CHAR                     MODE OR
         CLI   PTYPE,C'E'               VECTOR AND CHARACTER
         BE    CHAR                     PLOT CHARACTER
         CLI   PTYPE,C'D'               IF NOT POINT-VECTOR MODE
         BNE   NOT1                     GO TO UPDATE THE COUNTER
         LA    CNTREG,4                 OTHERWISE REPEAT ORDER TO
         LA    ADDREG,ORDER3
         BAL   LINREG,STORE             STORE TO INTENSIFY END POINT
         B     NOT1                     GO TO UPDATE THE COUNTER
CHAR     BAL   LINREG,PLTCH             GO PLOT A CHARACTER
         BAL   LINREG,STORE             STORE GRAPHIC ORDERS IN GDOA
         CLI   PTYPE,C'E'               IF NOT VECTOR CHARACTER MODE
         BNE   REPTM                    REPEAT ENTER POINT MODE
         MVI   ORDER1,X'2A'             OTHERWISE REENTER VECTOR MODE
         MVI   ORDER2,X'02'
         MVC   GOMODE,ORDER1
         OI    ORDER3,X'40'             TURN BEAM OFF
         LA    CNTREG,6                 AND REPEAT ORDER
         LA    ADDREG,ORDER1
         BAL   LINREG,STORE             TO STORE OF CURRENT POSITION
         B     NOT1                     GET NEXT VALUES
REPTM    LA    CNTREG,2
         LA    ADDREG,ORDER1
         MVI   ORDER1,X'2A'             ORDER FOR POINT PLOTTING
         MVI   ORDER2,X'00'
         MVC   GOMODE,ORDER1
         BAL   LINREG,STORE             TO STORE ROUTINE
         B     NOT1                     UPDATE THE COUNTER
* STORE GRAPHIC DATA IN GDOA FOR POR
* INPUT TO SUBROUTINE
*   CNTREG = NUMBER OF BYTES OF GRAPHIC DATA TO STORE
*   ADDREG = ADDRESS OF THE GRAPHIC DATA
*   WKAREG = REGISTER 1 MUST CONTAIN THE WORKAREA ADDRESS
*   OABREG = ADDRESS OF OACB
STORE    STM   8,12,PORSAVE             SAVE REGISTERS
         SR    PASREG,PASREG            CLEAR OVERFLOW INDICATOR
STORE1   L     OLPREG,16(0,OABREG)      ADDRESS OF OLP FROM OACB
         LR    WRKREG,CNTREG            LOAD BYTES TO MOVE
*
* CALCULATE ADDRESSES BASED ON N VALUE AND SIZE OF GDOA
*
STORE2   AR    OLPREG,WRKREG            OLP ADDRESS PLUS N VALUE
         LA    TEMREG,4
         AR    TEMREG,OLPREG            OLP PLUS N PLUS 4
         L     SLOREG,0(OABREG)         SLOA ADDRESS
         A     SLOREG,4(OABREG)         ADD LOA EQUALS TOTAL GDOA
         L     OLPREG,16(0,OABREG)      RESET INITIAL OLP ADDRESS
         CR    TEMREG,SLOREG
         BNH   OK
*
* NOT ENOUGH ROOM TO STORE ALL OF THE DATA-DETERMINE AMOUNT TO STORE
*
         SR    TEMREG,SLOREG            EQUAL BYTES-CAN'T STORE
         SR    WRKREG,TEMREG            NUMBER OF BYTES CAN STORE
*
* ANY BYTES TO STORE
*
         C     WRKREG,ZERO
         BNH   STORE4                   LESS OF EQUAL TO ZERO
         LH    TEMREG,H2A02
         CH    TEMREG,GOMODE
         BH    STORE3B                                           A29402
         LH    TEMREG,H0003
         NR    TEMREG,WRKREG
         BM    STORE4      GO TO USER OVERFLOW ROUTINE (GAVP)      7468
STORE3A  SR    CNTREG,WRKREG       BYTES REMAINING
         BAL   INTREG,STORE6            LINK INTERNALLY
STORE3   LA    PASREG,1                 SET PASS INDICATOR
*
* STORE REGISTERS IN WORKAREA
*
         STM   0,15,OVFSAVE             OVERFLOW SAVE IN WORKAREA
         CLC   GOFFSGAD,ZERO           WAS OFF SCREEN/GRID LOADED  5800
         BE    LAOVFLO                  NO
         SR    WRKREG,WRKREG
         ST    WRKREG,GOFFSGAD         CLEAR ADDRESS               5800
         LR    3,1                      SAVE REG 1.
         DELETE EP=GOFFSG
         LR    1,3                      RESTORE REG 1.
LAOVFLO  L     15,8(0,OABREG)           LOAD OVERFLOW ADDRESS
         LM    2,12,28(13)              RELOAD USER'S REGISTERS
         BALR  14,15                    LINK TO ROUTINE-SET RETURN
         LM    0,15,OVFSAVE             RELOAD AND CONTINUE TO STORE
         B     STORE1                   GET NEW OLP ADDRESS-CONTINUE
STORE3B  C     WRKREG,FOUR             ROOM FOR FOUR BYTES ?     A29402
         BNL   STORE3A                 YES-STORE X,Y PAIR        A29402
         MVC   0(2,OLPREG),H2A80       NO-NOP TWO BYTES          A29402
         B     STORE3                  GO TO USER OVRFLOW        A29402
*
* NO SPACE AVAILABLE
*
*
STORE4   C     PASREG,ONE               WAS A TRANSFER TO OVERFLOW MADE
         BL    STORE3
*
* SET ERROR CODE AND RETURN TO POR-LEAVE POR WITH RETURN MACRO
*
         B     ERR24RET
*
*
OK       BAL   INTREG,STORE6            LINK INTERNALLY
         LM    8,12,PORSAVE            RELOAD REGISTERS
         BR    LINREG
STORE6   LA    TEMREG,255               SET REG. EQUAL TO 255
STORE6A  CR    WRKREG,TEMREG            IS AMOUNT TO MOVE OVER 255
         BH    STORE7
         LR    TEMREG,WRKREG
         S     TEMREG,ONE               COMPENSATE FOR EXTRA BYTE
         EX    TEMREG,MOVE              MOVE GRAPHIC DATA
         AR    OLPREG,WRKREG            UPDATE OLP ADDRESS
         AR    ADDREG,WRKREG            UPDATE DATA ADDR
         ST    OLPREG,16(0,OABREG)      STORE NEW OLP ADDRESS
         BR    INTREG                   RETURN INTERNALLY
STORE7   LR    SLOREG,TEMREG
         S     SLOREG,ONE               COMPENSATE FOR EXTRA BYTE
         EX    SLOREG,MOVE              MOVE GRAPHIC DATA
         AR    OLPREG,TEMREG            UPDATE OLP ADDRESS
         AR    ADDREG,TEMREG            UPDATE INPUT ADDRESS
         SR    WRKREG,TEMREG           REDUCE BY 255
         B     STORE6A                  MAKE NEXT COMPARISON
MOVE     MVC   0(0,OLPREG),0(ADDREG)    MOVE DATA TO GDOA
*
*    CONVERT  FLOATING  POINT  TO  FIXED  POINT  VALUES
*    VALREG CONTAINS THE VALUE TO BE CONVERTED
*
FIXCONV  ST    1,OVFSAVE                STORE IN FIRST WORD REG. 1
         TM    OVFSAVE+3,X'07'          TEST LAST THREE BITS
         BZ    SETMODI                  NO BITS ON SET INDEX TO ZERO
         LA    TEMREG,4                 SET MODIFIER
         B     SAVFLT                   START CONVERSION
SETMODI  LA    TEMREG,0                 SET MODIFIER TO ZERO
SAVFLT   ST    VALREG,TEMFLT(TEMREG)    SAVE FLOAT VALUE
         SR    WRKREG,WRKREG
         ST    WRKREG,TEMFLT+4(TEMREG)  CLEAR SECOND WORD
         LD    6,TEMFLT(TEMREG)         VALUE TO FLOAT REGISTERS
         N     VALREG,FCHAR
         BE    FLERR1                   CHARACTERISTIC IS ZERO
         AE    6,FLPT5                  ADD .5 TO ROUND
         AW    6,X4E                    ADD UNNORMALIZED-RIGHT JUSTIFY
         STD   6,TEMFLT(TEMREG)         SAVE VALUES
         L     WRKREG,TEMFLT+4(TEMREG)  CHECK SECOND WORD
         N     WRKREG,MZERO             CHECK BIT 32
         BM    ERR12RET                 INDICATE ERROR
         L     WRKREG,TEMFLT(TEMREG)
         N     WRKREG,BYTE123
         BM    ERR12RET
         L     WRKREG,TEMFLT(TEMREG)
         N     WRKREG,MZERO             DROP CHARACTERISTIC
         L     VALREG,TEMFLT+4(TEMREG)  NEW FIXED VALUE
         LTR   WRKREG,WRKREG
         BNL   NOTNEG                   NOT NEGATIVE
         LNR   VALREG,VALREG            TAKE TWO'S COMPLIMENT
NOTNEG   BR    INTREG                   RETURN TO N S I
FLERR1   CE    6,ZERO                   IS TOTAL VALUE ZERO
         BE    NOTNEG                   RETURN
         B     ERR12RET                 SET ERROR CODE AND RETURN
*
*    CONVERT  FIXED  POINT  TO  FLOATING  POINT  VALUES
*    VALREG CONTAINS THE VALUE TO BE CONVERTED
*
FLTCONV  O     VALREG,X6                EXPONENT OF 6
         ST    VALREG,OVFSAVE
         LE    0,OVFSAVE                LOAD TO FLOAT REG.
         AE    0,X6                     NORMALIZE
         STE   0,OVFSAVE
         L     VALREG,OVFSAVE           FLOAT PT. VALUE IN REG.
         BR    LINREG
*   ROUTINE TO CHECK IF PT. IS OUTSIDE OF GRID BOUNDARY
*
GRLCHK   LH    VALREG,X1                X1
         C     VALREG,UASCALE           X VALUE COMPARED TO X1
         BH    SETIND                   OFF GRID LIMIT
         LH    VALREG,X2                X2
         C     VALREG,UASCALE           X VALUE COMPARED TO X2
         BL    SETIND                   OFF GRID LIMIT
         LH    VALREG,Y1                Y1
         C     VALREG,VASCALE           Y VALUE COMPARED TO Y1
         BH    SETIND                   OFF GRID
         LH    VALREG,Y2                Y2
         C     VALREG,VASCALE           Y VALUE COMPARED TO Y2
         BL    SETIND                   OFF GRID
         MVI   OFFSW,X'00'              WITHIN LIMIT SET OFF
         B     OV10
SETIND   MVI   OFFSW,X'11'              SET INDICATOR
OV10     BR    LINREG                   RETURN
*
*    ROUTINE TO CHECK IF POINT IS OFF THE SCREEN
*
SCLCHK   L     VALREG,UASCALE           GET X VALUE
         C     VALREG,ZERO              X VALUE COMPARED TO ZERO
         BL    SETBITS                  OFF SCREEN
         C     VALREG,HIGH              X VALUE COMPARED TO 4095
         BH    SETBITS                  OFF SCREEN
         L     VALREG,VASCALE           GET Y VALUE
         C     VALREG,ZERO              Y VALUE COMPARED TO ZERO
         BL    SETBITS                  OFF SCREEN
         C     VALREG,HIGH              Y VALUE COMPARED TO 4095
         BH    SETBITS                  OFF SCREEN
         MVI   OFFSW,X'00'              WITHIN LIMIT SET OFF
         BR    LINREG                   RETURN
SETBITS  MVI   OFFSW,X'11'              SET INDICATOR
         BR    LINREG                   RETURN
*
*
SCRNGRD  ST    LINREG,RSAVE             SAVE THE BRANCH REGISTER
         L     WRKREG,WRTADDR           GET BOUNDARY CHECK RT ADDRESS
         BALR  LINREG,WRKREG             AND BRANCH TO CHECK
         CLC   SWSTATUS,STATUS1         CHECK THE SWS STATUS IF STATUS1
         BE    RESREG                   ARE ALL POINTS ON ANSWER  YES
OPTIONA  CLI   SG,C'A'                  OTHERWISE OFFSG CONDITION EXIST
         BNE   OPTIONB                   CHECK USER-SPECIFIED OPTION
         BAL   LINREG,ERR44             IF A OPTION SET ERR CODE AND
         B     ANALOFF                   ANALIZE OFF STATUS TO HANDLE
OPTIONB  CLI   SG,C'B'                  IS B OPTION SPECIFIED
         BNE   OPTIONC                  IF NOT TEST FOR C
         BAL   LINREG,ERR48             IF YES SET ERR CODE AND
         B     ANALOFF                   ANALIZE OFF STATUS TO HANDLE
OPTIONC  CLI   SG,C'C'                  IS C OPTION SPECIFIED
         BNE   OPTIOND                  IF NOT TEST FOR D
         BAL LINREG,SCLCHK              CHECK FURTHER IF POINT
         CLI   OFFSW,X'11'               OFF SCREEN
         BE    ERR32RET                 IFF OFF SCREEN IMMEDIATE RET
         LA    15,32                    OTHERWISE SET ERROR CODE AND
         BAL   LINREG,ERRCNT             CONTINUE THE JOB
         BAL   LINREG,GRLCHK            CHECK FURTHER FOR GRID
         B     ANALOFF                  GO TO ANALIZE OFF STATUS
OPTIOND  CLI   SG,C'D'                  IS OPTION D SPECIFIED
         BNE   ASSUMEE                  IF NOT ASSUME OPTION E
         B     ERR28RET                 IMMEDIATE ERROR RETURN
ASSUMEE  B     ERR32RET                 IMMEDIATE ERROR RETURN
         BE    ERR32RET                 IF OFF SCREEN IMMEDIATE RETURN
         BAL   LINREG,SCLCHK            IF OPTION C TEST FOR OFF SCRN
         LA    15,32                    OTHERWISE SET ERROR CODE
         BAL   LINREG,ERRCNT            UPDATE ERROR COUNT
         MVI   OFFSW,X'11'              RESTORE OFF BOUNDARY STATUS
         B     RESREG                   CONTINUE JOB
SETSKIP  L     VALREG,ONE               SET SWITCH TO SKIP TO NEXT
         STH   VALREG,SKIPSW            POINT
         B     RESREG                   AND RETURN VIA RESTORE REG
ANALOFF  CLI   PTYPE,C'B'               IF NOT VECTOR
         BH    ANALVEC                  TYPE SKIP IT IF
         CLC   SWSTATUS,STATUS3         IT IS POINT 2 OFF
         BE    SETSKIP
         CLC   SWSTATUS,STATUS4        ANOTHER PT OFF?           A28795
         BE    SETSKIP                 YES GET NEXT PT           A28795
         B     RESREG                   OTHERWISE CONTINUE
ANALVEC  CLC   COUNT,ONE+2              IF FIRST POINT OFF, GET
         BNH   SETSKIP                  GET ANOTHER
         STM   13,0,PORSAVE             SAVE REGISTERS
         ST    13,OVFSAVE+4             SAVE POR SAVEAREA CHAINING ADDR
         ST    15,SVR15                 SAVE ERROR REGISTER
         LA    13,OVFSAVE               LOAD GOFFSG RT SAVEAREA ADDR
         LR    WRKREG,1                 SAVE REG1-WKAREA POINTER
         CLC   GOFFSGAD,ZERO            CHECK IF GOFFSG RT ADDR AREA 0
         BNE   OFFHDLG                  IF NOT RT BROUGHT IN GO TO HDL
         LA    1,SABL                   LOAD 24-WORD PARTAB START ADDR
         LOAD  EP=GOFFSG                RETAIN THE MODULE
         LR    1,WRKREG                 RESTORE REGISTER 1
         ST    0,GOFFSGAD               SAVE GOFFSG RT ADDRESS
OFFHDLG  L     15,GOFFSGAD              LOAD GOFFSG RT ADDRESS
         LA    1,SABL                   LOAD 24-WORD PARTAB ADDR
         BALR  14,15                    BRANCH TO GOFFSG RT
         LR    1,WRKREG                 RESTORE REG 1
LINKOUT  LM    13,0,PORSAVE             RESTORE REG 13 TO 0
         L     15,SVR15                 RESTORE ERROR REGISTER
*   ANALIZE THE RESPONSE OF GOFFSG ROUTINE AND GENERATE PROPER DATA
ANALRES  CLC   NI,ZERO                  IS NI=0
         BE    NOINTS                   IF SO GO TO NO INTERSECT RT
         CLC   NI,ONE                   IS NI=1
         BE    ONEINTS                  IF SO GO TO ONE INTERSECT RT
BOTHOUT  MVC   X1FINAL,XYINT1           OTHERWISE GDV I1X,I1Y,B
         MVC   X2FINAL,XYINT2
         MVC   ORDER3,X1FINAL           AND GDV I2X,I2Y,U
         MVC   ORDER4,X2FINAL
         OI    ORDER3,X'40'
         LA    CNTREG,8                 LOAD BYTE NUMBER
         LA    ADDREG,ORDER3
         BAL   LINREG,STORE             GIVE TO STORE ROUTINE
         B     SETSKIP                  SKIP THE NEXT POINT
NOINTS   CLC   SWSTATUS,STATUS2         SEE IF PT1 OFF PT2 ON
         BE    NOINTSA                  IF SO IT'S NO INTS CONDITION A
         B     SETSKIP                  GO ON TO NEXT POINT
NOINTSA  MVC   X1FINAL,X2FINAL          GDV X2,Y2,B
         MVC   ORDER3,X1FINAL           AND GDV X2,Y2,U
         MVC   ORDER4,X2FINAL
         OI    ORDER3,X'40'
         LA    CNTREG,8                 AND GIVE TO STORE ROUTINE
         LA    ADDREG,ORDER3
         B     STOREP
ONEINTS  CLC   SWSTATUS,STATUS2         SEE IF PT1 OFF PT2 ON
         BE    ONEINTSA                 IF SO GO TO ONE INTS CONDITIONA
         CLC   SWSTATUS,STATUS3         SEE IF PT1 ON PT2 OFF
         BE    ONEINTSB                 IF SO GO TO ONE INTS CONDITIONB
         B     BOTHOUT
ONEINTSA MVC   X1FINAL,XYINT1           GENERATE I1X,I1Y,B
         MVC   ORDER3,X1FINAL
         OI    ORDER3,X'40'             BLAND BEAM BIT
         LA CNTREG,4                    AND GIVE TO STORE ROUTINE
         LA    ADDREG,ORDER3
         B     STOREP
ONEINTSB MVC   X2FINAL,XYINT1
         MVC   ORDER3,X2FINAL
         LA CNTREG,4                    GDVI1X,I1Y,U AND THEN STORE
         LA    ADDREG,ORDER3
         BAL   LINREG,STORE             STORE THE POINT AND
         B     SETSKIP                  AND SKIP ANYTHING ELSE
STOREP   BAL   LINREG,STORE
RESREG   L     LINREG,RSAVE             RESTORE THE L INE REGISTER
         BR    LINREG                   AND RETURN
* SUBROUTINE TO PLOT A CHARACTER
PLTCH    CLI   E,C'O'                   NO OVERLAP
         BE    OV9                      YES-NO OVER LAP PERMITTER
         B     PLTCH1                   VECTOR AND CHAR OR VECTOR ONLY
OV9      LH    VALREG,X2FIN             X2
         SH    VALREG,X1FIN             X2-X1
         LPR   XREG,VALREG              ABSOLUTE OF DELTA X
         C     XREG,EIGHT
         BH    PLTCH1                   MORE THAN EIGHT
         LH    VALREG,Y2FIN             Y2
         SH    VALREG,Y1FIN             Y2-Y1
         LPR   YREG,VALREG              ABSOLUTE OF DELTA Y
         C     YREG,EIGHT
         BH    PLTCH1                   MOVE THAN EIGHT
*
* DIFFERENCE IS LESS THAN EIGHT BETWEEN POINTS
*
         L     VALREG,X1FINAL           X1,Y1
         ST    VALREG,X2FINAL           STORE X1,Y1 OVER X2,Y2
         B     NOT1                     CHECK COUNT
PLTCH1   MVC   ORDER5,CHARMOD           MODE AND CHARACTER SIZE
         MVC   GOMODE,CHARMOD
         MVC   ORDER6,SYMBOL            LETTER
         MVI   ORDER7,X'00'             NULL CHARACTER
         LA    CNTREG,4                 COUNT TO MOVE
         LA    ADDREG,ORDER5
         BR    LINREG
*
*        XYLCHK     SUBROUTINE
*        ADDRESS OF XYLIM TABLE IN  XYLREG BEFORE  BAL
XYLCHK   LA    CONREG,4                SET LOOP CONTROL
         LA    INXREG,0                 SET  INDEX
XYLLOOP  LH    TEMREG,X1(INXREG)        X1,Y1,X2,Y2
         C     TEMREG,ZERO
         BL    ERR4RET
         C     TEMREG,HIGH
         BH    ERR4RET
         A     INXREG,TWO
         BCT   CONREG,XYLLOOP
         CLC   X1,X2                    X1 COMPARED TO X2
         BNL   ERR4RET
         CLC   Y1,Y2                    Y1 COMPARED TO Y2
         BNL   ERR4RET
         BR    INTREG                   RETURN TO MAIN LINE
ERR4RET  LA    15,4                     XYLIM X1,Y2,X2,Y2 LIMIT ERROR
         B     ERRCNTR
ERR8RET  LA    15,8
         B     ERRCNTR
ERR12RET LA    15,12                    FLOATING POINT ERROR DETECTED
         B     ERRCNTR
ERR16RET LA    15,16                    U1,V1 GREATER THAN U2,V2
         B     ERRCNTR
ERR20RET LA    15,20
         B     ERRCNTR
ERR24RET LA    15,24                    USERS OVERFLOW-OLP NOT RESET
         B     ERRCNTR
ERR28RET LA    15,28
         B     ERRCNTR
ERR32RET LA    15,32                    OPTION C
         B     ERRCNTR
ERR40    LA    15,40                    PARAMETERS ERROR-NOT SERIOUS
         B     ERRCNT                   ADD TO COUNT
ERR44    LA    15,44
         B     ERRCNT
ERR48    LA    15,48
         B     ERRCNT                   ADD TO COUNT
ERRCNTR  LA    LINREG,RET
ERRCNT   L     TEMREG,ERRCOUNT
         A     TEMREG,ONE
         ST    TEMREG,ERRCOUNT
         BR    LINREG
*
*   RET SUBROUTINE TESTS COUNT IN WORK AREA,(ERRCOUNT) AND
*   SETS BIT IN SIGN POSITION OF REG. 15 IF MULTIBLE ERRORS
*   (MORE THAN ONE)
RET      CLC   GOFFSGAD,ZERO           HAS OFF SCREEN/GRID ROUTINE 5800
         BE    RET1
         ST    15,SVR15                 SAVE ERROR REGISTER
         LR    WRKREG,1                 SAVE REGISTER 1
         DELETE EP=GOFFSG
         LR    1,WRKREG                 RESTORE REGISTER 1
         L     15,SVR15                 RESTORE ERROR REGISTER
RET1     LA    TEMREG,1
         C     TEMREG,ERRCOUNT
         BL    SETBIT
* RESTORE PROGRAM MASK TO SETTING UPON ENTRY
RETMACRO L     WRKREG,MASKSV
         SPM   WRKREG
         RETURN (14,12),T,RC=(15)
SETBIT   O     15,MZERO
         B     RETMACRO
BYCT     DC    F'120'
ZERO     DC    F'0'                     ZERO
MZERO    DC    X'80000000'              MINUS ZERO
ONE      DC    F'1'
TWO      DC    F'2'
MTWO     DC    X'FFFFFFFE'              MINUS TWO
FOUR     DC    F'4'
EIGHT    DC    F'8'
HIGH     DC    F'4095'                  HIGH LIMIT
BYTE3    DC    X'0000FF00'              MASK SYMBOL-EBCDIC CODE
BYTE123  DC    X'00FFFFFF'
ALLFF    DC    X'FFFFFFFF'              ALL BITS
X6       DC    X'46000000'              EXPONENT OF SIX
         DS    0D                       ALIGN BOUNDARY
X4E      DC    X'4E00000000000000'
FLPT5    DC    E'.5'
FCHAR    DC    X'7F000000'              MASK FOR CHARACTERISTIC
LOHI     DC    F'0'                     X1,Y1
H2A80    DC    X'2A80'                 NOP                       A29402
H2A02    DC    X'2A02'
H0003    DC    H'0003'
         DC    H'4095'                  UPPER LIMIT
         DC    H'4095'                  UPPER LIMIT
STATUS1  DC    H'0'                     BOTH PT1 AND PT2 WITHIN LIMITS
STATUS2  DC    X'1100'                  PT1 OFF PT2 ON
STATUS3  DC    X'0011'                  PT1 ON PT2 OFF
STATUS4  DC    X'1111'                 TWO SUCCESSIVE PTS OFF    A28795
* REGISTER ASSIGN MENT
VALREG   EQU   0
PASREG   EQU   0
WKAREG   EQU   1
XYLREG   EQU   2
OBPREG   EQU   2                        MUST BE IN THIS ORDER
PATREG   EQU   3                        MUST BE IN THIS ORDER
WRKREG   EQU   4
EREG     EQU   4                        EVEN REGISTER
XREG     EQU   5                        ODD  REGISTER
CNTREG   EQU   5
TEMREG   EQU   6
OREG     EQU   6                        EVEN REGISTER
YREG     EQU   7                        ODD REGISTER
ADDREG   EQU   7
INXREG   EQU   8
SLOREG   EQU   8
OABREG   EQU   10
INTREG   EQU   11
OLPREG   EQU   12
CONREG   EQU   12
LINREG   EQU   14
* PARTAB DEFINED STORAGE MAP
* PATREG EQUALS A GENERAL REGISTER
PARTAB   DSECT
XYLIM    DS    CL4                      XYLIM ADDRESS
UTAB     DS    CL4                      UTAB  ADDRESS
VTAB     DS    CL4                      VTAB  ADDRESS
F        DS    CL1                      MODE OF INPUT
S        DS    CL1                      SCALE OR NO SCALE
CSIZE    DS    CL1                      CHARACTER SIZE
CMOD     DS    CL1                      PROTECTED OR UNPROTECTED MODE
A        DS    CL1                      RELATIVE OR ABSOLUTE
I        DS    CL1                      INCREMENT OR NO INCREMENT
PTYPE    DS    CL1                      PLOT TYPE
SG       DS    CL1
N        DS    CL2                      NUMBER OF POINTS TO PLOT
SYMBOL   DS    CL1                      LETTER TO PLOT
E        DS    CL1                      OVERLAP OR NO OVERLAP
* XYLIM TABLE DEFINED.STORAGE MAP
* XYLREG EQUALS A GENERAL REGISTER
XYLIMTB  DSECT
X1       DS    CL2                      LOWER LEFT COORDINATE VALUE
Y1       DS    CL2                      LOWER LEFT COORDINATE VALUE
X2       DS    CL2                      UPPER RIGHT COORDINATE VALUE
Y2       DS    CL2                      UPPER RIGHT COORDINATE VALUE
U1       DS    CL4                      LOWER LEFT SCALING COORDINATE
U2       DS    CL4                      LOWER LEFT SCALING COORDINATE
V1       DS    CL4                      UPPER RIGHT SCALING COORDINATE
V2       DS    CL4                      UPPER RIGHT SCALING COORDINATE
* WORK AREA DEFINED STORAGE MAP
* WKAREG EQUALS A GENERAL REGISTER
WKAREA   DSECT
         DS    0D
OVFSAVE  DS    0CL72
TEMFLT   DS    0CL8
         DS    CL72
ERRCOUNT DS    CL4                      COUNT OF PARAMETER ERRORS
INCOUNT  DS    CL4
         ORG   INCOUNT
INDEX    DS    CL2                      TABLE INDEX OF UTAB OR VTAB
COUNT    DS    CL2                      NUMBER OF POINTS PROCESSED
MASKSV   DS    F                   SAVE SETTING OF USER PROGRAM MASK
FX1      DS    CL4                      FLOAT X1
FY1      DS    CL4                      FLOAT Y1
FX2      DS    CL4                      FLOAT X2
FY2      DS    CL4                      FLOAT Y2
UA       DS    CL4                      ABSOLUTE FLOAT OR FIXED UA
VA       DS    CL4                      ABSOLUTE FLOAT OR FIXED VA
X1FINAL  DS    CL4                      X1,Y1
         ORG   X1FINAL
X1FIN    DS    CL2                      X1
Y1FIN    DS    CL2                      Y1
X2FINAL  DS    CL4                      X2,Y2
         ORG   X2FINAL
X2FIN    DS    CL2                      X2
Y2FIN    DS    CL2                      Y2
WRTADDR  DS    CL4                      ADDR OF GRID OR SCREEN CHECK RT
GOFFSGAD DS    CL4                      GOFFSG RT ADDR AREA
SWSTATUS DS    CL2                      SWITCH STATUS OF PT1 AND PT2
         ORG   SWSTATUS
PT1SW    DS    CL1                      PREVIOUS STATUS
OFFSW    DS    CL1                      CURRENT STATUS
SKIPSW   DS    CL2                      SET TO ONE TO SKIP POINT
RSAVE    DS    CL4                      PLACE TO SAVE LINE REGISTER
SVR15    DS    CL4                      PLACE TO SAVE ERROR REGISTER
ORDER1   DS    CL1                      GRAPHICORDERS-MODE
ORDER2   DS    CL1
ORDER3   DS    CL4                      PT. TO PLOT
ORDER4   DS    CL4
         ORG   ORDER4
ORDER5   DS    CL2
ORDER6   DS    CL1
ORDER7   DS    CL1
ORDER8   DS    CL2
EPRGMOD  DS    CL4
         ORG   EPRGMOD
EOPRG    DS    CL2                      LAST PT. INDICATOR
CHARMOD  DS    CL2                      ORDER FOR CHARACTER AND MODE
PT1VEC   DS    CL4                      SIMULATED VECTOR X1,Y1
         ORG   PT1VEC
PT1VE    DS    CL2
PT2VE    DS    CL2
PT2VEC   DS    CL4                      SIMULATED VECTOR X2,Y2
         ORG   PT2VEC
PT2VECT  DS    CL2
PT2VECS  DS    CL2
DELTAX   DS    CL2                      DELTA X
DELTAY   DS    CL2                      DELTA Y
TOTAL    DS    CL4
         ORG   TOTAL
INTEGER  DS    CL2                      INTEGER-SIMULATED VECTOR
FRACTION DS    CL2                      FRACTION-SIMULATED VECTOR
ABVTEMP  DS    CL4                      VECTOR MODE-TEMP STORAGE
         ORG   ABVTEMP
ABVMODE  DS    CL2                      VECTOR MODE INDICATOR
TEMP     DS    CL2                      TEMP STORAGE
XYINCR   DS    CL4                      CHANGING X OR Y VALUE
PORSAVE  DS    CL28
ADGOFFSG DS    CL4                      ADDRESS OF GOFFSG
SABL     DS    CL4                      ADDRESS OF BOUNDARY
UASCALE2 DS    CL4
VASCALE2 DS    CL4
UASCALE  DS    CL4                      ABSOLUTE FLOAT-FIX-THEN SCALE
         ORG   UASCALE
UAS1     DS    CL2
UAS2     DS    CL2                      FIXED HALF WORD-MAY BE SCALED
VASCALE  DS    CL4
         ORG   VASCALE
VAS1     DS    CL2
VAS2     DS    CL2                      FIXED HALF WORD-MAY BE SCALED
NI       DS    CL4                      NUMBER OF INTERATIONS
XYINT1   DS    CL4                      FIRST INTERSECTION
XYINT2   DS    CL4                      SECOND INTERSECTION
INTWKA   DS    CL64                     INTERNAL WORKAREA
         DS    0D
         ORG   OVFSAVE+396
GOMODE   DS    CL2
         END
