*TITLE 'DELETE ATTENTION ROUTINE'
*STATUS:CHANGE LEVEL 0
*FUNCTION:DELETE ROUTINES SPECIFIED BY SPAR.
*        1.ENSURES AN ACTIVE ROUTINE CANNOT DELETE ITSELF.
*        2.FREES UP
*         A.REB
*         B.IRB
*         C.IQES
*        3.UPDATES TE REB CHAIN
*ENTRY:VIA SVC 74 FROM P/P
*INPUT:GR#1 POINTS TO PARAMETER LIST
*OUTPUT:1.SEE FUNCTION
*       2.UNIQUE RETURN CODES
*EXTERNAL ROUTINES:N/A
*EXIT:VIA SVC 73
*TABLES/WORK AREAS:N/A
*ATTRIBUTES:1.RE-ENTRANT
*           2.SUPERVISOR STATE
*           3.PRIVILEDGED
*           4.OPERATES ENABLED AND DISABLED
*NOTES:N/A
*
*        REGISTER DEFINITION
*
IGC0007D CSECT
*A96700-98100,A102600-104400,A261200-263400,A333100-337400       A28803
*A775000-776000                                                  A28803
*D336000                                                         A28803
*                                                                A28803
* 096700-098100,102600-104400,261200-263400,306000-309000        S21016
* 333100-342000,348000,354000,372000-375000,381000,462000        S21016
* 441000,786000,792000,798000                                 LB  AOS/1
*C357000                                                         Y01021
         EJECT
R0       EQU   0                       PARAM REG
R1       EQU   1                       PARAM REG
RBASE    EQU   2                       BASE REG
RPARM    EQU   3                       PARAMETER LIST PTR
RPARMC   EQU   4                       CURRENT PARAMETER LIST PTR
RLEN     EQU   5                       LENGTH OF LIST
RGACB    EQU   6                       GACB ADR
R7       EQU   7                       WORK REG
R8       EQU   8                       WORK REG
R9       EQU   9                       WORK REG
R10      EQU   10                      WORK REG
RDCB     EQU   11                      DCB ADR
REBRG    EQU   12                      REB ADR
R13      EQU   13                      SAVE PTR
R14      EQU   14                      RTN REG
RCODE    EQU   15                      RTN  CODE REG
         EJECT
*          CONSTANTS USED IN THIS MODULE                              *
*                                                                     *
LENGTH   EQU   2                       PARAMETER LIST LENGTH
IRBIQE   EQU   100                     ADR OF IQE CREATED IN IRB
NEXAVL   EQU   96                      IQE NEXT AVAILABLE FIELD
ZERO     EQU   0                       ZERO
NEXT     EQU   4                       FOUR
ONE      EQU   1                       ONE
RTNOTFND EQU   X'08'                   ROUTINE NOT FOUND
EXIT     EQU   3                       SVC EXIT #
SHORTLST EQU   X'0C'                    LIST LENGTH WRONG
BADDCB   EQU   X'04'                   INVALID DCB
OPEN     EQU   X'10'                   OPEN BIT IN OFLGS
ABENDON  EQU   29
ABENDIN  EQU   33
GRAPHIC  EQU   X'80'                   GRAPHIC BIT IN DSORG+1
REB      EQU   40                      REB ADR IN GACB
RTNF     EQU   0                       LINK FLD
RTNB     EQU   4                       LINK FLD
RTNGACB  EQU   12                      GACB PTR
RTNIRB   EQU   16                      IRB ADR IN REB
FLAGS    EQU   20                      REB FLAG FLD
RTNTCB   EQU   32                      OFFSET FOR REB TCB ADR
RTNQ2    EQU   28                      REB IQES PTR
DEB      EQU   44                      DEB ADR
UCB      EQU   32                      UCB ADR
TE       EQU   28                      TE ADR
TERTN    EQU   4                       REB PTR
RBIQE    EQU   24                      ACTIVE IQE PTR
IRB      EQU   16                      IRB ADR
ACTIVE   EQU   X'10'                    ROUTINE ACTIVE
MVTERR   EQU   X'14'
NOTOPEN  EQU   X'18'                   RET CODE-DCB NOT OPEN     S21016
NOTGRPHC EQU   X'1C'                   RET CODE-DCB NOT GRAPHIC  S21016
NOTBASIC EQU   X'20'                   RET CODE-NOT BASIC ENVIRONS21016
RENO     EQU   X'40'                   REB POINTS TO TE BIT
NORMAL   EQU   0                       ZERO RTN CODE
CVTPTR   EQU   16                      POINTER TO CVT
CVTBTERM EQU   52
CURTCB   EQU   4                       CURRENT TCB OFFSET
FLAG     EQU   29
ABEND    EQU   X'80'
CLSDAR   EQU   47
RBSTAB2  EQU   11                       OFFSET OF STATUS BYTE 2   M4120
*                                            OF REQUEST BLOCK     M4120
IRBACTIV EQU   X'40'                    FLAG BYTE TO INDICATE     M4120
*                                            THE INTERRUPT        M4120
*                                            REQUEST BLOCK IS     M4120
*                                            ACTIVE               M4120
XDUMMY   EQU   X'00'                   IMMED. OPERAND         LB  AOS/1
GACB0    EQU   0                       GACB DISPLACEMENT      LB  AOS/1
GACBEND  EQU   55                      GACB DISPLACEMENT(END) LB  AOS/1
         EJECT
         USING IHADCB,RDCB
         BALR  RBASE,R0
         USING *,RBASE
         B     *+24
MODID    DC    C'IGC0007D.VS2R2.73263'          MODULE EYECATCHER ID
         LR    RPARM,R1                PARAM TO WORK REG
         LA    RPARMC,NEXT(0,RPARM)    LOAD CURRENT PARAM(ADR OF 1ST
*                                      GACB)
         SR    RLEN,RLEN               CLEAR REGISTER
         LH    RLEN,LENGTH(0,RPARM)    LOAD LIST LENGTH
         LA    R7,ONE                  LOAD ONE
         SR    RLEN,R7                 REDUCE LENGTH BY ONE
         LTR   RLEN,RLEN               REG=0
         BC    3,DAR01                 BRANCH IF NOT ZERO
         LA    RCODE,SHORTLST          LOAD ERROR CODE
         B     XCTLMSG                 GO INVOKE MSG RTN         S21016
DAR01    L     RGACB,ZERO(0,RPARMC)    LOAD GACB  ADR
         LA    RGACB,ZERO(0,RGACB)     CLEAR HI ORDER BYTE
         LTR   RGACB,RGACB             ADR=0
         BC    8,DAR02                 BRANCH IF YES
         L     RDCB,NEXT(RGACB)         LOAD DCB ADR
         LA    RDCB,ZERO(0,RDCB)       ZERO HI ORDER BYTE
         LTR   RDCB,RDCB               REG=0
         BC    7,DAR03                 BRANCH IF NO
DAR04    LA    RCODE,BADDCB            LOAD RETURN CODE
         B     XCTLMSG                 GO INVOKE MSG RTN         S21016
DAR03    TM    DCBOFLGS,OPEN           IS DCB OPEN
         BO    DAR03A                  BRANCH IF DCB OPEN        S21016
         LA    RCODE,NOTOPEN           LOAD RETURN CODE          S21016
         B     XCTLMSG                 GO INVOKE MSG RTN         S21016
DAR03A   EQU   *                                                 S21016
         TM    DCBDSORG+1,GRAPHIC      IS IT A GRAPHIC DCB
         BO    DAR03B                  BRANCH IF DCB GRAPHIC     S21016
         LA    RCODE,NOTGRPHC          LOAD RETURN CODE          S21016
         B     XCTLMSG                 GO INVOKE MSG RTN         S21016
         EJECT
DAR03B   EQU   *                                                 S21016
         DEBCHK (RDCB),TYPE=VERIFY,AM=GAM   VALIDATE DEB      LB Y01021
         LR    R7,R1                   DEB ADDRESS            LB Y01021
         L     R7,UCB(0,R7)            LOAD UCB ADR
         L     R7,TE(0,R7)             LOAD TE ADR
         LTR   R7,R7                   TE ADR=0
         BC    7,DAR05                 BRANCH IF NOT 0
         LA    RCODE,NOTBASIC          LOAD RETURN CODE          S21016
         B     XCTLMSG                 GO INVOKE MSG RTN         S21016
DAR05    CLC   TERTN+1(3,R7),ZERO1     ARE THERE ANY RTN ENTRIES
         BNE   DAR05A                  RTN ENTRIES-SKIP ERROR EX S21016
DAR07    LA    RCODE,RTNOTFND          LOAD RETURN CODE
         B     XCTLMSG                 GO INVOKE MSG RTN         S21016
DAR05A   EQU   *                                                 S21016
         L     REBRG,TERTN(0,R7)       LOAD FIRST REB PTR
DAR09    CLC   RTNGACB+1(3,REBRG),ONE(RPARMC) GACB ADRS COMPARE
         BC     8,DAR00
         CLC   RTNF+1(3,REBRG),ZERO1   ANY MORE REBS
         BC    8,DAR07                 BRANCH IF NO
         L     REBRG,RTNF(0,REBRG)     LOAD NEXT REB PTR
         B     DAR09                   BRANCH
*
*                   PICK UP CURRENT TCB ADR
*
DAR00    L     R13,CVTPTR              LOAD ADR OF CVT
         L     R13,ZERO(R13)           LOAD ADR OF TCB DOUBLE WORD
         L     R13,CURTCB(R13)         LOADCURRENT TCB ADR
         LA    R13,ZERO(R13)           CLEAR HIGH-ORDER BYTE
         L     R7,REB(RGACB)           LOAD REB ADR FROM GACB
         L     R7,RTNTCB(R7)           LOAD REB TCB ADR
         LA    R7,ZERO(R7)             CLEAR HIGH-ORDER BYTE
         CR    R13,R7                  DOES CURRENT TCB = REBTCB
         BNE   DARMVT                  BRANCH IF NO
DAR20    EQU   *                                              LB  AOS/1
         CLI   GACB0(RGACB),XDUMMY     FORCE PAGE-IN OF GACB  LB  AOS/1
         CLI   GACBEND(RGACB),XDUMMY   *BEFORE DISABLING      LB  AOS/1
         CLI   ENABL1,XDUMMY           FORCE PAGE-IN          LB  AOS/1
SSM1OFF  SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=(LOCAL,IGC0007D(*
               SSM1ON)),REGS=USE
         XI    CLSDAR(RGACB),X'01'     TURN GACB FLG OFF SET BY CLOSE
         L     R7,IRB(0,REBRG)         LOAD IRB ADDRESS
         CLC   RBIQE+1(3,R7),ZERO1     IQE ACTIVE
         BC    8,DAR11                 BRANCH IF NO
SSM1ON   SETLOCK RELEASE,TYPE=LOCAL,RELATED=(LOCAL,IGC0007D(SSM1OFF)), *
               REGS=USE
         LA    RCODE,ACTIVE            LOAD RETURN CODE
         B     XCTLMSG                 GO INVOKE MSG RTN         S21016
DAR11    TM    FLAGS(REBRG),RENO       POINT TO A TE
         BC    1,DAR12                 BRANCH IF YES
         CLC   RTNF+1(3,REBRG),ZERO1   LAST REB IN LAST
         BC    7,DAR13                 BRANCH IF NO
         L     R8,RTNB(REBRG)          LOAD PREVIOUS REB ADR
         MVC   ZERO(4,R8),ZERO1        ZERO PREVIOUS RTNF FLD
         MVC   REB(4,RGACB),ZERO1      ZERO REB PTR IN GACB
DAR14    EQU   *
SSM2ON   SETLOCK RELEASE,TYPE=LOCAL,RELATED=(LOCAL,IGC0007D(SSM1OFF)), *
               REGS=USE
         LA    R8,IRBIQE(0,R7)         LOAD ADR OF THE IQE CREATED
*                                      IN THE IRB
DAR17    CLC   NEXAVL+1(3,R7),ZERO1    ANY IQES ON IRB
         BC    8,DAR16                 BRANCH IF NO
         L     R9,NEXAVL(0,R7)         LOAD IQE ADR
         LA    R9,ZERO(0,R9)           ZERO HI ORDER BYTE
         MVC   NEXAVL+1(3,R7),ONE(R9)  UPDATE IRB NEXAVL FLD
         CLR   R8,R9                   IS THIS THE IQE CREATED
*                                      IRB
         BC    8,DAR17                 BRANCH IF YES
         LR    R1,R9                   IQE ADR TO PARAM REG
         L     R0,XTRAIQE          LOAD REQUEST FOR USER IQE
         FREEMAIN R,LV=(0),A=(1)
         B     DAR17                   BRANCH
DAR16    CLC   RTNQ2+1(3,REBRG),ZERO1  ANY IQES ON REB Q2 FLD
         BC    8,DAR18                 BRANCH IF NO
         L     R9,RTNQ2(0,REBRG)       LOAD IQE ADR
         LA    R9,ZERO(0,R9)           ZERO HI ORDER BYTE
         MVC   RTNQ2+1(3,REBRG),ONE(R9) UPDATE QI PTR FLD IN REB
         CLR   R8,R9                   IS THIS THE IQE CREATED IN
*                                      THE IRB
         BC    8,DAR16                 BRANCH IF YES
         LR    R1,R9                   IQE ADR TO PARAM REG
         L     R0,XTRAIQE          LOAD REQUEST FOR USER IQE
         FREEMAIN R,LV=(0),A=(1)
         B     DAR16                   BRANCH
DAR18    TM    FLAG(R13),ABEND         ABEND IN PROGRESS
         BC    1,DAR02                 BRANCH IF YES
         TM    RBSTAB2(R7),IRBACTIV     IS THIS IRB ACTIVE        M4120
         BO    DAR02                    IF YES TAKE BRANCH        M4120
         L     R1,0(R7)                LOAD PP SVAREA ADR FROM IRB
         L     R0,REQUEST2             LOAD SVAREA LNGTH
         FREEMAIN  R,LV=(0),A=(1)      FREE PP SVAREA
         DELETE  EP=IGG019OK           DELETE ATTNINQ RTN
         XC    48(4,RGACB),48(RGACB)        CLEAR ATTNINQ ADR TO ZERO
         LR    R1,R7                   LOAD IRB ADR TO PARAM REG
         L     R0,REQUEST1             LOAD # OF BYTES
         FREEMAIN R,LV=(0),A=(1)
         LR    R1,REBRG                REB ADR TO PARAM REG
         L     R0,REQUEST              LOAD NUMBR OF BYTES
         FREEMAIN R,LV=(0),A=(1)
DAR02    LA    RPARMC,NEXT(0,RPARMC)   STEP TO NEXT GACB ADR PTR
         BCT   RLEN,DAR01              BRANCH IF MORE GACBS TO SERVICE
         LA    RCODE,NORMAL            LOAD RET CODE
         SVC   EXIT                    RETURN TO IOS
DAR12    CLC   RTNF(3,REBRG),ZERO1     LAST REB
         BC    7,DAR15                 BRANCH IF NO
         L     R9,RTNB(0,REBRG)        LOAD TE PTR
         MVC   TERTN(4,R9),ZERO1
         MVC   REB(4,RGACB),ZERO1      ZERO REB PTR IN GACB
         B     DAR14                   BRANCH
DAR15    L     R9,RTNB(0,REBRG)        LOAD TE PTR
         MVC   TERTN(4,R9),RTNF(REBRG) MOVE LINK FLD TO TE
         L     R10,RTNF(0,REBRG)       LOAD ADR OF NEXT REB
         MVC   RTNB(4,R10),RTNB(REBRG) UPDATE CHAIN
         OI    FLAGS(R10),RENO         INDICATE REB PTS TO A TE
         MVC   REB(4,RGACB),ZERO1      ZERO REB PTR IN GACB
         B     DAR14                   BRANCH
DAR13    MVC   REB(4,RGACB),ZERO1      ZERO REB PTR IN GACB
         L     R14,RTNB(0,REBRG)       LOAD PTR
         L     R13,RTNF(0,REBRG)       LOAD PTR
         MVC   RTNF(4,R14),RTNF(REBRG) PRESENT RTNF TP PREVIOUS RTNF
         MVC   RTNB(4,R13),RTNB(REBRG) PRESENT RTNB TO NEXT RTNB
         B     DAR14                   BRANCH
ENABL1   EQU   *                       END OF DISABLED CODE   LB  AOS/1
         EJECT
*
*                   PREVENT OPTION 4 VIOLATIONS
*
DARMVT   TM    CLSDAR(RGACB),X'01'     DID CLOSE ISSUE  DAR
         BC    1,DARMVT1               BRANCH IF YES
         LA    RCODE,MVTERR            LOAD RETURN CODE
         B     XCTLMSG                 GO INVOKE MSG RTN         S21016
*
DARMVT1  TM    ABENDON(R7),X'80'       IS REBTCB IN ABEND
         BC    7,DAROUT                BRANCH IF YES
         TM    ABENDIN(R7),X'40'       IS REBTCB TO BE ENDED BY ABEND
         BC    1,DAROUT                BRANCH IF YES
         O     R7,HIBITON              SET CLOSE ERROR FOR 7D LB
         B     XCTLMSG1                GO INVOKE MSG RTN      LB
DAROUT  XI   CLSDAR(RGACB),X'01'       TURN FLG OFF SET BY CLOSE
         SVC   EXIT
         EJECT
XCTLMSG  EQU   *                       SET UP TO XCTL TO MSG RTN S21016
         LR    R7,RCODE                PASS RETURN CODE          S21016
XCTLMSG1 EQU   *
         L     R9,CVTPTR               CVT ADDRESS               S21016
         L     R9,D0(R9)               ADDR TCB WORDS            S21016
         L     R9,D4(R9)               CURRENT TCB ADDR          S21016
         L     R9,D0(R9)               CURRENT RB ADDR           S21016
         LA    RCODE,D96(R9)           ADDR SUPVSR PARM LIST     S21016
         LA    R9,D104(R9)             ADDR FOR EP NAME          S21016
         ST    R9,D0(RCODE)            WORD1=ADDR EP NAME        S21016
         SR    R9,R9                                             S21016
         ST    R9,D4(RCODE)            WORD2=0 (DCB ADDR)        S21016
         MVC   D8(D8,RCODE),EPMSGRTN   NAME OF MSG RTN           S21016
         XCTL  MF=(E,(1)),SF=(E,(15))  TRANSFER CONTROL          S21016
EPMSGRTN DC    CL8'IGC0107D'           NAME FOR MSG MODULE       S21016
D0       EQU   0                                                 S21016
D4       EQU   4                                                 S21016
D8       EQU   8                                                 S21016
D96      EQU   96                                                S21016
D104     EQU   104                                               S21016
         DS    0F
HIBITON  DC    X'80000000'             OPERAND TO SET BIT 0
ZERO1    DC    1F'0'
DISABLE  DC    AL1(0)
ENABLE   DC    X'FF'
         DS    0F
XTRAIQE  DC    X'EA'                   SP 234 FOR USER IQE    LB  AOS/1
         DC    AL3(32)
REQUEST  DC    X'E9'                   SP 233 FOR REB         LB  AOS/1
         DC    AL3(40)                 BYTE REQUEST FOR REB
REQUEST1 DC    X'E9'                   SP 233 FOR IRB         LB  AOS/1
         DC    AL3(128)
REQUEST2 DC    X'FA'                   SUBPOOL 250
         DC    AL3(72)                 PP SVAREA LENGTH
         CNOP  0,8
         EJECT
         DCBD  DSORG=GS
         IHAPSA
         END
