         TITLE 'GPGRID -  POINT POLAR GRID GENEREATION ROUTINE'
*
*
*   STATUS.              CHANGE LEVEL 0.
*
*   FUNCTION/OPERATION.  GPGRID GENERATES THE GRAPHIC ORDERS TO DISPLAY
*                        A SET OF CONCENTRIC CIRCLES, DIVIDED INTO
*                        EQUAL SECTORS BY A NUMBER OF RADIAL VECTORS.
*                        THE SPACING BETWEEN THE CIRCLES MAY BE LINEAR
*                        OR LOGARITHMIC.  THIS ROUTINE PROVIDES THE
*                        GRAPHIC ORDERS TO  DISPLAY  POINTS ON THE
*                        PERIMETERS OF THE CIRCLES.
*
*   ENTRY POINTS.        GPGRID VIA CALL OR LINK MACRO.
*                        ALIAS NAME - IFFPIAPG
*
*   INPUT.               OUTPUT CONTROL BLOCK POINTER (OACB).
*                        PARAMETER TABLE WHICH DEFINES THE POSITION,
*                        SIZE, AND TYPE OF POLAR GRID.
*
*   OUTPUT.              GRAPHIC ORDERS STORED IN THE GDOA.
*
*   EXTERNAL ROUTINES.   GOFFSG - OFF SCREEN OFF GRID ROUTINE.
*
*   EXITS-NORMAL.        COMPLETION OF TASK. EXIT VIA RETURN MACRO.
*        -ERROR.         IMMEDIATE RETURN. EXIT VIA RETURN MACRO.
*                        HEXADECIMAL 4,8,C,10,14, OR 18 IN RET CODE REG
*        -ERROR.         DOES NOT RETURN IMMEDIATELY. COMPLETION OF
*                        TASK AND RETURN VIA RETURN MACRO.
*                        HEXADECIMAL 28 IN RETURN CODE REGISTER.
*
*   TABLES/WORK AREAS.   USER SPECIFIED PARAMETER TABLE, XYLIM TABLE
*                        AND WORK AREA.
*
*   ATTRIBUTER.          READ ONLY. REENTRANT.
         EJECT
IFFPIAPG CSECT                          GPGRID
*0669                                                              7468
         ENTRY GPGRID
PASREG   EQU   0
WKAREG   EQU   1                        WORK AREA ADDRESS REGISTER
PARREG   EQU   1
OBPREG   EQU   2                        CONTROL BLOCK POINTER ADDR REG
OABREG   EQU   2                        CONTROL BLOCK ADDRESS REGISTER
PATREG   EQU   3                        ADDRESS OF PARAMETER TABLE
XYLREG   EQU   4                        ADDRESS OF XYLIM TABLE
XREG     EQU   5                        X-COMPUTING REGISTER
SLOREG   EQU   5                        SLOA ADDRESS REGISTER
COSREG   EQU   5                        COSINE REGISTER
SINREG   EQU   6                        SINE REGISTER
YREG     EQU   6                        Y-COMPUTING REGISTER
INTLNK   EQU   6                        INTERNAL POR LINK REGISTER
INDEXREG EQU   7                        INDEX REGISTER
WRKREG   EQU   7                        WORK REGISTER
CNTREG   EQU   8                        COUNT REGISTER
LINKREG  EQU   8                        INTERNAL POR LINK REGISTER
BASE9    EQU   9                        BASE REGISTER FOR GPGRID
INXREG   EQU   10                       INDEX AND POR LINK REGISTER
OLPREG   EQU   10                       ORDER LOAD POINT ADDRESS
EVEREG   EQU   10                       ARITHMETIC WORK REGISTER
ODDREG   EQU   11                       ARITHMETIC WORK REGISTER
VALREG   EQU   11                       WORK REGISTER
TEMREG   EQU   11                       WORK REGISTER
LINREG   EQU   12                       INTERNAL POR LINK REGISTER
ADDREG   EQU   14                       GENERAL USE ADDRESS REGISTER
CONREG   EQU   14                       CONTROL COUNT REGISTER
ERREG    EQU   15                       ERROR CODE REGISTER
         EJECT
*************************
*   INITIALIZATION      *
*************************
GPGRID   STM   14,12,12(13)
         BALR  BASE9,0
         USING *,BASE9
         USING PARTAB,PATREG
         USING WKAREA,WKAREG
         USING XYLIMT,XYLREG
         SR    ERREG,ERREG
         LM    OBPREG,PATREG,0(PARREG)  LOAD OCBP AND PARTAB ADDRESSES.
         L     XYLREG,XYLIM             LOAD ADDR OF XYLIM TABLE.
         L     WKAREG,4(0,OBPREG)       LOAD ADDR OF USER WORK AREA.
         L     OABREG,0(0,OBPREG)       LOAD ADDR OF CONTROL BLOCK.
*  SAVE MASK BITS AS SET BY USER
         ST    9,MASKSV
         SR    WRKREG,WRKREG
         SPM   WRKREG
         BAL   LINREG,XYLCHK            LINK TO XYLIM CHECK
         MVC   ERCOUNT,ZERO         CLEAR ERROR COUNTER
         MVI   LOADSW,X'00'
         MVI   SGSW,X'00'
         CLI   F,C'F'                   CHECK FOR FLOATING POINT VALUES
         BE    FLOAT                    BRANCH IF FIX FL OPTION = F
         CLI   F,C'B'
         BE    CHKS                     IF F PARA NOT = F OR B,
         BAL   LINKREG,ER40             LINK TO SET ERROR CODE.
CHKS     CLI   S,C'S'                   CHECK IF SCALING REQUIRED.
         BE    LINK1                    SCALE FIXED POINT VALUES.
         MVC   RINK(4),RINC             STORE RINC AND MAX-RADIUS
         MVC   MAXR(4),MAXRAD           IN THE USER WORK AREA.
         MVC   XC(8),UC                 UC,VC TO USER WORK AREA.
TSTS     CLI   S,C'N'
         BE    CHKPARA                  IF SCALE PARA NOT S OR N,
         BAL   LINKREG,ER40             LINK TO SET ERROR CODE.
         B     CHKPARA
FLOAT    CLI   S,C'S'
         BE    LINK2
         CLI   S,C'N'                   IF SCALE PARA NOT S OR N,
         BE    LINK0                    LINK TO SET ERROR CODE.
         BAL   LINKREG,ER40
LINK0    L     VALREG,UC                CONVERT UC,VC,RINC AND
         BAL   LINKREG,FCONVERT         MAX-RADIUS TO FIXED POINT.
         ST    VALREG,XC
         L     VALREG,VC
         BAL   LINKREG,FCONVERT
         ST    VALREG,YC
         L     VALREG,RINC
         BAL   LINKREG,FCONVERT
         ST    VALREG,RINK
         L     VALREG,MAXRAD
         BAL   LINKREG,FCONVERT
         ST    VALREG,MAXR
         B     CHKPARA
LINK1    L     XREG,UC                  SCALE FIXED-POINT VALUES
         L     YREG,VC                  UC,VC,RINC,AND MAX-RADIUS.
         BAL   LINREG,SCALFIX
         ST    XREG,XC
         ST    YREG,YC
         L     XREG,RINC
         BAL   LINREG,FIXSCAL
         ST    XREG,RINK
         L     XREG,MAXRAD
         BAL   LINREG,FIXSCAL           BR TO SCALE MAXIMUM RADIUS.
         ST    XREG,MAXR
         B     CHKPARA
LINK2    BAL   LINKREG,SCALFLT          SCALE FLOATING POINT VALUES
         MVC   VALUE1(4),RINC           UC,VC,RINC, AND MAXRAD.
         BAL   LINKREG,FLTSCAL
         ST    VALREG,RINK              STORE SCALED VALUES IN
         MVC   VALUE1(4),MAXRAD         XC,YC,RINK, AND MAXR.
         BAL   LINKREG,FLTSCAL
         ST    VALREG,MAXR
******************************
*   CHECK PARAMETER TABLE    *
******************************
CHKPARA  LM    XREG,YREG,XC             CHECK INPUT PARAMETERS.
         C     XREG,ZERO                IF XC IS LESS THAN ZERO,
         BL    ER8                      BR TO SET ERROR CODE & RETURN.
         C     XREG,C4095               IF XC IS GREATER THAN 4095,
         BH    ER8                      BR TO SET ERROR CODE & RETURN.
         C     YREG,ZERO                IF YC IS LESS THAN ZERO,
         BL    ER8                      BR TO SET ERROR CODE & RETURN.
         C     YREG,C4095
         BH    ER8
         L     WRKREG,MAXR              CHECK MAXR AND RINK
         C     WRKREG,FOUR              TO SEE IF GT FOUR.
         BL    ER20                     SET ERROR CODE AND RET IF NOT.
         L     WRKREG,RINK
         C     WRKREG,FOUR
         BL    ER20
         MVC   R(4),RINK
         CLI   TYPE,C'A'
         BE    TSTINC
         CLI   TYPE,C'B'                IF TYPE NOT A OR B,
         BNE   ER20                     SET ERROR CODE AND RETURN.
RLOG     MVI   J,X'01'                  LOG GRID REQUESTED. SET J=1.
         MVC   LOGSAV(2),MINUS2
TSTINC   CLI   INC,C'A'                 CHECK PARAMETER INC TO SEE
         BE    SETA                     IF ALPHA OR DENSITY IS SPEC.
         CLI   INC,C'D'
         BE    SETD
SETC     BAL   LINKREG,ER40             IF INC NOT A OR D, SET INTERNAL
         MVI   INK,C'C'                 INDICATOR TO C, ERROR CODE TO
         B     AOK                      40 AND CONTINUE PROCESSING.
SETA     LH    WRKREG,ALPHA             ALPHA SPECIFIED.
         CH    WRKREG,ZERO
         BL    SETC
         BE    SETCC
         CH    WRKREG,H360
         BNL   SETC
         MVI   INK,C'A'                 ALPHA OK.
         MVC   ALPH(2),ALPHA            MOVE ALPHA TO USER WORK AREA.
         B     AOK
SETCC    MVI   INK,C'C'
         B     AOK
SETD     LH    WRKREG,DENSITY           DENSITY SPECIFIED.
         CH    WRKREG,FOUR
         BL    SETC
         MVI   INK,C'D'
AOK      LA    CNTREG,2                 LENGTH OF GEPM ORDER TO CNTREG.
         LA    ADDREG,GEPM              ADDR OF GEPM ORDER TO ADDREG.
         MVC   GOMODE,GEPM
         BAL   LINREG,STORE             LINK TO STORE GEPM ORDER.
         MVC   I(4),ONE                 SET I=1.
         EJECT
TESTINC  CLI   INK,C'C'                 IF INK=C, COMPUTE ALPHA=2048/R
         BE    COMPA
         CLI   INK,C'D'                 IF INK NOT D, INK=A.
         BNE   SETNPT
**************************************************
* COMPUTE  TEMP=360*DENSITY/(2PI*R)              *
*          ALPHA=INTEGRAL PART OF (TEMP+0.5)     *
**************************************************
ALPHAGET L     EVEREG,C360
         MH    EVEREG,DENSITY           COMPUTE 360*DENSITY
         SRDA  EVEREG,32
         SLDA  EVEREG,29
         D     EVEREG,TWOPI             COMPUTE 360*DENSITY/2PI
         SR    EVEREG,EVEREG
         L     WRKREG,R
         DR    EVEREG,WRKREG            COMPUTE ALPHA=360*DENSITY/2PI/R
         A     ODDREG,ONE
         SRA   ODDREG,1
         STH   ODDREG,ALPH              STORE ALPHA IN USER WORK AREA.
CHKA1    CLC   ALPH(2),ZERO
         BH    CHKA2
SETALP   MVC   ALPH(2),ONE+2            SET ALPHA = 1
         B     SETNPT
CHKA2    CLC   ALPH(2),H360
         BL    SETNPT
         BAL   LINKREG,ER40
******************************
*   COMPUTE ALPHA=2048/R     *
******************************
COMPA    CLC   R(4),C1365               IF R IS GT 1365,
         BH    SETALP                   BR TO SET ALPHA TO ONE.
         CLC   R+2(2),C46               IF R IS LESS THAN 46,
         BL    SETA45                   SET ALPHA = 45.
         LA    EVEREG,2048              IF NOT, COMPUTE ALPHA.
         SRDA  EVEREG,32
         SLDA  EVEREG,1
         D     EVEREG,R
         A     ODDREG,ONE
         SRA   ODDREG,1
         STH   ODDREG,ALPH              STORE ALPHA IN USER WORK AREA.
         B     SETNPT
SETA45   MVC   ALPH(2),C45
         B     SETNPT
GETR     STH   INDEXREG,LOGSAV
         SR    EVEREG,EVEREG            COMPUTE  R=RINC*(I-1+LOG(J))
         L     EVEREG,I                 EVEREG=I
         SH    EVEREG,ONE+2             EVEREG=I-1
         SLA   EVEREG,14
         AH    EVEREG,LOGJ(INDEXREG)    EVEREG=I-1+LOG(J)
         SRDA  EVEREG,32
         M     EVEREG,RINK              EVEREG=R=RINC*(I-1+LOG(J))
         AH    ODDREG,POINT5
         SRA   ODDREG,14                REMOVE DECIMAL PORTION OF R
         ST    ODDREG,R                 AND STORE IN USER WORK AREA.
         BR    LINKREG
SETNPT   MVC   K(2),ZERO
         LA    EVEREG,360               SET NPT EQ TO INTEGRAL
         SRDA  EVEREG,32                PART OF 360/ALPHA.
         LH    XREG,ALPH
         DR    EVEREG,XREG
         STH   ODDREG,NPT               NPT=THE # OF POINTS PER CIRCLE.
         CLC  R(4),C5793                SEE IF ALL POINTS WITH CURRENT
         BNH   SETPHI                   RADIUS WILL BE OUTSIDE SCREEN.
         MVC   K(2),NPT
         B     OFFSCR                   BR TO CHECK OFF SCREEN OPTION.
SETPHI   LH    ODDREG,K                 SET PHI=K*ALPHA
         MH    ODDREG,ALPH
         STH   ODDREG,PHI               STORE VALUE IN USER WRK AREA.
         EJECT
***********************************
*   DETERMINE QUADRANT OF PHI.    *
*   GET SIN%PHI< AND COS%PHI<     *
*   FROM SINE/COSINE TABLE.       *
***********************************
         CLC   PHI(2),C90               CHECK IF PHI IN 1'ST QUADRANT.
         BH    CK180                    IF NOT, CHECK QUADRANT 2.
         CLC   PHI(2),C46
         BL    TBLOK
         MVI   FUNCSW,X'0F'             PHI IN RANGE OF 46-90 DEG.
         LA    WRKREG,90
         B     LOOKUP1                  GO TO EXTRACT SIN(PHI),COS(PHI)
TBLOK    MVI   FUNCSW,X'00'             PHI IN RANGE OF 0-45 DEG.
         LA    WRKREG,0
         B     LOOKUP2                  GO TO EXTRACT SIN(PHI),COS(PHI)
CK180    CLC   PHI(2),C180              CHECK IF PHI IN 2'ND QUADRANT
         BH    CK270                    IF NOT, CHECK QUADRANT 3.
         CLC   PHI(2),C136
         BL    PHI180
         MVI   FUNCSW,X'30'             PHI IN RANGE OF 136-180 DEG.
         LA    WRKREG,180
         B     LOOKUP1                  GO TO EXTRACT SIN(PHI),COS(PHI)
PHI180   MVI   FUNCSW,X'3F'             PHI IN RANGE OF 91-135 DEG.
         LA    WRKREG,90
         B     LOOKUP2                  GO TO EXTRACT SIN(PHI),COS(PHI)
CK270    CLC   PHI(2),C270              CHECK IF PHI IN 3'RD QUAD.
         BH    CK315                    IF NOT, PHI IN QUADRANT 4.
         CLC   PHI(2),C226
         BL    PHI270
         MVI   FUNCSW,X'FF'             PHI IN RANGE OF 226-270 DEG.
         LA    WRKREG,270
         B     LOOKUP1                  GO TO EXTRACT SIN(PHI),COS(PHI)
PHI270   MVI   FUNCSW,X'F0'             PHI IN RANGE OF 181-225 DEG.
         LA    WRKREG,180
         B     LOOKUP2                  GO TO EXTRACT SIN(PHI),COS(PHI)
CK315    CLC   PHI(2),C315
         BH    PHI360
         MVI   FUNCSW,X'CF'             PHI IN RANGE OF 271-315 DEG.
         LA    WRKREG,270
         B     LOOKUP2                  GO TO EXTRACT SIN(PHI),COS(PHI)
PHI360   CLC   PHI(2),H360
         BNL   OMIT
         MVI   FUNCSW,X'C0'             PHI IN RANGE OF 316-360 DEG.
         LA    WRKREG,360
         B     LOOKUP1
LOOKUP1  SH    WRKREG,PHI
         LR    INXREG,WRKREG
         B     EXTRACT
LOOKUP2  LH    INXREG,PHI
         SR    INXREG,WRKREG
EXTRACT  MH    INXREG,FOUR+2
         TM    FUNCSW,X'0F'             IF FUNCSW=0F, GO TO PUT COS
         BO    SWITCH                   IN SINREG AND SIN IN COSREG.
         LH    SINREG,SINE(INXREG)      LOAD SINE TO SINREG.
         LH    COSREG,COSINE(INXREG)    LOAD COSINE TO COSREG.
         B     TSIGNS                   GO TO TEST SIGN OF FUNCTIONS.
SWITCH   LH    SINREG,COSINE(INXREG)    LOAD COSINE TO SINREG.
         LH    COSREG,SINE(INXREG)      LOAD SINE TO COSREG.
TSIGNS   TM    FUNCSW,X'C0'             SEE IF SIGN OF SINE IS MINUS.
         BZ    TSIGNC
         MH    SINREG,MINUS1
TSIGNC   TM    FUNCSW,X'30'             SEE IF SIGN OF COSINE IS MINUS.
         BZ    MULTR
         MH    COSREG,MINUS1
         EJECT
**************************************************
*   COMPUTE  X=XC+R*COS(PHI) AND Y=YC+R*SIN(PHI) *
**************************************************
MULTR    LR    EVEREG,COSREG            LOAD COS(PHI)
         SRDA  EVEREG,32
         M     EVEREG,R                 R*COS(PHI)
         L     COSREG,XC
         SLA   COSREG,14
         AR    COSREG,ODDREG            XC+R*COS(PHI)
         AH    COSREG,POINT5
         SRA   COSREG,14                SHIFT OFF DECIMAL PORTION OF X.
         LR    EVEREG,SINREG            LOAD SIN(PHI)
         SRDA  EVEREG,32
         M     EVEREG,R                 R*SIN(PHI)
         L     SINREG,YC
         SLA   SINREG,14
         AR    SINREG,ODDREG            YC+R*SIN(PHI)
         AH    SINREG,POINT5
         SRA   SINREG,14                SHIFT OFF DECIMAL PORTION OF Y.
****************************************
*   XREG=COSREG=X   YREG=SINREG=Y      *
****************************************
OFFCHECK BAL   LINKREG,CHKOFF           LINK TO OFF GRID/SCREEN CHECK.
         B     OFFGRD                   IF POINT OFF GRID.
         B     OFFSCR                   IF POINT OFF SCREEN.
         B     CONT                     IF POINT OK.
CHKOFF   CH    XREG,H4095               TEST X- AND Y-COORDINATES
         BH    4(0,LINKREG)             TO SEE IF OFF-SCREEN/GRID.
         CH    XREG,ZERO
         BL    4(0,LINKREG)
         CH    YREG,H4095
         BH    4(0,LINKREG)
         CH    YREG,ZERO
         BL    4(0,LINKREG)
         CH    XREG,X1
         BL    0(0,LINKREG)
         CH    XREG,X2
         BH    0(0,LINKREG)
         CH    YREG,Y1
         BL    0(0,LINKREG)
         CH    YREG,Y2
         BH    0(0,LINKREG)
         B     8(0,LINKREG)
OFFGRD   BAL   LINKREG,TSTGR            LINK TO TEST USER OPTION.
         B     OMIT                       IF OPTION = A OR C.
         TM    SGSW,X'F0'
         BO    PT2ON
         B     CONT                       IF OPTION = B,E, OR INVALID.
TSTGR    CLI   OFFSG,C'A'
         BNE   GRDB
         BAL   LINREG,ER44              OMIT POINT AND SET ERROR CODE
         BR    LINKREG                  IF S/G OPTION=A.
GRDB     CLI   OFFSG,C'B'               SHOW POINT IF S/G-OPTION=B
         BE    4(0,LINKREG)
GRDC     CLI   OFFSG,C'C'               OMIT POINT IF S/G OPTION=C
         BE    0(0,LINKREG)
GRDD     CLI   OFFSG,C'D'
         BNE   GRDE
         LA    LINREG,RET               SET ERROR CODE AND RETURN TO
         B     ER28                     CALLING PROG IF S/G OPTION=D
GRDE     CLI   OFFSG,C'E'
         BE    4(0,LINKREG)             OMIT POINT IF S/G OPTION=E
         LR    TEMREG,LINKREG
         BAL   LINKREG,ER40             S/G OPTION INVALID.
         B     4(0,TEMREG)
OFFSCR   BAL   LINKREG,TSTSR            LINK TO TEST USER OPTION.
         B     OMIT                       IF OPTION = A OR B.
         B     OMIT
TSTSR    CLI   OFFSG,C'A'
         BNE   SCRB
         BAL   LINREG,ER44              OMIT POINT AND SET ERROR CODE
         B     4(0,LINKREG)             IF S/G OPTION=A.
SCRB     CLI   OFFSG,C'B'
         BNE   SCRC
         BAL   LINREG,ER48              OMIT POINT AND SET ERROR CODE
         BR    LINKREG                  IF S/G OPTION=B.
SCRC     CLI   OFFSG,C'C'               SEE IF OPTION C
         BNE   SCRD
         LA    LINREG,RET
         B     ER32
SCRD     CLI   OFFSG,C'D'
         BNE   SCRE
         LA    LINREG,RET               SET ERROR CODE AND RETURN TO
         B     ER28                     CLLING PROG IF S/G OPTION=D
SCRE     LA    LINREG,RET
         B     ER32                     ERROR 32 ASSUMED.
CONT     STH   XREG,GDV1                STORE X-COORDINATE IN GDV.
         STH   YREG,GDV1+2              STORE Y-COORDINATE IN GDV.
         LA    CNTREG,4                 LENGTH OF GDV TO COUNT REG.
         LA    ADDREG,GDV1
         BAL   LINREG,STORE             LINK TO STORE GDV X,Y,U.
OMIT     CLC   NPT(2),K                 CHECK NO OF POINTS DRAWN
         BE    TSTGRD                   WITH NO OF POINTS PER CIRCLE.
         LH    EVEREG,K                 IF K AND NPT UNEQUAL, SET
         A     EVEREG,ONE               K=K+1 AND RETURN TO COMPUTE
         STH   EVEREG,K                 THE NEXT X,Y VALUES.
         B     SETPHI
TSTGRD   CLI   TYPE,C'B'
         BNE   TESTI                    BRANCH IF LINEAR GRID.
         CLI   J,X'08'
         BH    TESTI
         SR    EVEREG,EVEREG
         IC    EVEREG,J
         A     EVEREG,ONE               SET J=J+1
         STC   EVEREG,J
         LH    INDEXREG,LOGSAV          GET ADDRESS OF
         A     INDEXREG,TWO             CURRENT LOG(J).
         BAL   LINKREG,GETR
         B     TESTINC
TESTI    SR    EVEREG,EVEREG
         L     EVEREG,I                 LOAD THE NO OF CIRCLES.
         A     EVEREG,ONE               SET I=I+1      I=# OF CIRCLES,
         ST    EVEREG,I                                OR LOG CYCLES.
         SRDA  EVEREG,32
         M     EVEREG,RINK              MULTIPLY I BY RINC.
         CL    ODDREG,MAXR              IF MAX-RADIUS IS LT I*RINC
         BH    TESTNR                   BR TO TEST THE NO OF RADII.
         ST    ODDREG,R                 NEW LOG CYCLE.
         CLI   TYPE,C'B'
         BE    SETJ
         B     TESTINC
SETJ     MVI   J,X'01'                  SET J=1 AND
         MVC   LOGSAV(2),MINUS2         RETURN TO GEN
         B     TESTINC                  NEXT LOG CYCLE
         EJECT
TESTNR   CLC   NR(2),ZERO               IF NO RADII REQUESTED,
         BE    RET                      RETURN TO USER ROUTINE.
         LA    CNTREG,2                 LENGTH OF GEVM ORDER TO CNTREG.
         LA    ADDREG,GEVM              LOAD ADDR OF GEVM ORDER.
         MVC   GOMODE,GEVM
         BAL   LINREG,STORE             LINK TO STORE GEVM ORDER.
**************************************************
*   COMPUTE END POINTS OF 90,0,180,& 270 DEG RAD *
**************************************************
         L     EVEREG,XC
         A     EVEREG,MAXR              VV1=XC+MAXR
         ST    EVEREG,VV1
         L     EVEREG,XC
         S     EVEREG,MAXR              VV2=XC-MAXR
         ST    EVEREG,VV2
         L     EVEREG,YC
         A     EVEREG,MAXR              VV3=YC+MAXR
         ST    EVEREG,VV3
         L     EVEREG,YC
         S     EVEREG,MAXR              VV4=YC-MAXR
         ST    EVEREG,VV4
         LM    XREG,YREG,XC
         BAL   LINKREG,CHKOFF           LINK TO CHECK CENTER OF CIRCLE
         B     XCOFF                    FOR OFF GRID CONDITION.
         B     XCOFF
         MVI   SGSW,X'00'               CENTER POINT ON GRID. SET SGSW
         B     CHKNR                    AND GO TO CHECK NUM OF RADII.
XCOFF    MVI   SGSW,X'F0'               CENTER POINT OFF GRID.
CHKNR    STM   XREG,YREG,PT1X
         CLC   NR(2),C8                 CHECK THE NUMBER
         BE    GETUVAL                  OF RADII TO SEE
         CLC   NR(2),FOUR+2             IF VALID.
         BE    GEN4
         CLC   NR(2),TWO+2              NR MUST = 1,2,4, OR 8.
         BE    GEN2
         CLC   NR(2),ONE+2
         BE    GEN1
         BAL   LINKREG,ER40             ASSUME ZERO IF NR IS INVALID.
         B     RET                      RETURN TO CALLING PROGRAM.
GEN4     MVC   PT2X(4),XC               GENERATE RADII
         MVC   PT2Y(4),VV4              ON Y AXIS.
         LM    XREG,YREG,PT2X
         BAL   INXREG,CHKPOINT          CHECK FOR OFF SCR/GRD.
         MVC   PT2Y(4),VV3
         LM    XREG,YREG,PT2X
         BAL   INXREG,CHKPOINT
GEN2     MVC   PT2X(4),VV2              GENERATE RADII
         MVC   PT2Y(4),YC               ON X AXIS
         LM    XREG,YREG,PT2X
         BAL   INXREG,CHKPOINT          CHECK FOR OFF SCR/GRD.
GEN1     MVC   PT2X(4),VV1
         MVC   PT2Y(4),YC
         LM    XREG,YREG,PT2X
         BAL   INXREG,CHKPOINT
         B     RET                      RETURN TO CALLING PROGRAM.
CHKPOINT ST    INXREG,VALUE1
         OI    SGSW,X'0C'
         BAL   LINKREG,CHKOFF
         B     GRID
         B     SCREEN
         NI    SGSW,X'F0'
         TM    SGSW,X'F0'
         BO    GRID
ONSCR    MVC   GDV1(2),XC+2             ALL POINTS ON SCREEN.
         MVC   GDV1+2(2),YC+2           PUT GDV'S NEEDED TO PUT
         STH   XREG,GDV2                VECTOR AS COMPUTED.
         STH   YREG,GDV2+2
PUTRAD1  OI    GDV1,X'40'               SET BEAM BIT OF GDV1 OFF.
         LA    CNTREG,8
         LA    ADDREG,GDV1
         BAL   LINREG,STORE             STORE GDV'S IN GDOA.
         NI    SGSW,X'F0'
         L     INXREG,VALUE1            RETURN TO MAINLINE.
         BR    INXREG
GRID      BAL  LINKREG,TSTGR            LINK TO TEST OFF GRID OPTION.
         B     LINKGR                         OFF GRID BRANCH.
         B     ONSCR                          SHOW ON SCREEN BRANCH.
         B     SEENI                          SHOW ON GRID ONLY.
SCREEN   BAL   LINKREG,TSTSR            LINK TO TEST OFF SCREEN OPTION.
         B     LINKSR                         SHOW ON SCREEN BRANCH.
         B     LINKGR                         SHOW ON GRID BRANCH.
SEENI    CLI   NI+3,X'02'               SEE IF TWO INTERSECT POINTS
         BE    TWOIN
         CLI   NI+3,X'01'
         BE    ONEIN1
         NI    SGSW,X'F0'
         L     INXREG,VALUE1            RETURN TO MAINLINE.
         BR    INXREG
TWOIN    MVC   GDV1(4),INTS1X
         MVC   GDV2(4),INTS2X
         B     PUTRAD1
ONEIN1   TM    SGSW,X'F0'
         BO    ONEIN2
PUTCNTR  MVC   GDV1(2),XC+2
         MVC   GDV1+2(2),YC+2
         MVC   GDV2(4),INTS1X
         B     PUTRAD1
ONEIN2   TM    SGSW,X'0F'               IF PT2 PART OF SGSW IS OFF,
         BZ    PUTP2                    BR TO PUT GDV PT2X,PT2Y,U.
         TM    SGSW,X'03'
         BO    PUTCNTR
         MVC   GDV1(4),INTS1X             PUT GDV'S NEEDED TO GENERATE
         MVC   GDV2(4),INTS1X             POINT AT INTERSECT ONE.
         B     PUTRAD1
PUTP2    STH   XREG,GDV2
         STH   YREG,GDV2+2
         MVC   GDV1(4),INTS1X
         B     PUTRAD1
         EJECT
*********************************************
*   COMPUTE END POINTS OF 45 DEGREE RADII   *
*********************************************
GETUVAL  LH    EVEREG,COS45                    UU1=XC+MAXR*COS(45)
         SRDA  EVEREG,32
         M     EVEREG,MAXR
         AH    ODDREG,POINT5
         SRDA  EVEREG,14
         A     ODDREG,XC
         ST    ODDREG,UU1
         LH    EVEREG,SIN45                    UU1=YC+MAXR*SIN(45)
         SRDA  EVEREG,32
         M     EVEREG,MAXR
         AH    ODDREG,POINT5
         SRDA  EVEREG,14
         A     ODDREG,YC
         ST    ODDREG,UU2
         LH    EVEREG,COS45                    UU3=XC-MAXR*COS(45)
         SRDA  EVEREG,32
         M     EVEREG,MAXR
         AH    ODDREG,POINT5
         SRDA  EVEREG,14
         L     XREG,XC
         SR    XREG,ODDREG
         ST    XREG,UU3
         LH    EVEREG,SIN45                    UU4=YC-MAXR*SIN(45)
         SRDA  EVEREG,32
         M     EVEREG,MAXR
         AH    ODDREG,POINT5
         SRDA  EVEREG,14
         L     YREG,YC
         SR    YREG,ODDREG
         ST    YREG,UU4
*********************************************
*   COMPUTE X- AND Y-COORDINATES (XE,YE)    *
*   AND STORE THE GDV'S NEEDED TO GENERATE  *
*   RADII AT +45 DEGREES FROM EACH AXIS.    *
*********************************************
         MVC   PT2X(8),UU1              SET END POINT FOR RADII AT 45
         MVC   TEMP(2),C56+2            DEGREES EQ TO UU1,UU2.
         LM    XREG,YREG,PT2X
         BAL   INXREG,CHECKUU
         MVC   PT2X(4),UU3              END POINT FOR RADII AT 135
         MVC   TEMP(2),MINUS56          DEGREES EQ TO UU3,UU2.
         LM    XREG,YREG,PT2X
         BAL   INXREG,CHECKUU
         MVC   PT2Y(4),UU4              END POINT FOR RADII AT 225
         MVC   TEMP(2),C56+2            DEGREES EQ TO UU3,UU4.
         LM    XREG,YREG,PT2X
         BAL   INXREG,CHECKUU
         MVC   PT2X(4),UU1              END POINT FOR RADII AT 315
         MVC   TEMP(2),MINUS56          DEGREES EQ TO UU1,UU4.
         LM    XREG,YREG,PT2X
         BAL   INXREG,CHECKUU
         B     GEN4                     GO TO PUT RADII ON X & Y AXIS.
CHECKUU  ST    INXREG,VALUE1
         OI    SGSW,X'0C'
         BAL   LINKREG,CHKOFF           LINK TO CHECK PT2.
         B     GRDOFF                   OFF GRID BRANCH.
         B     SCROFF                   OFF SCREEN BRANCH.
         NI    SGSW,X'F0'
         TM    SGSW,X'F0'               SEE IF XC,YC OFF GRID.
         BO    GRDOFF
         B     PUT20RU
GRDOFF   BAL   LINKREG,TSTGR            LINK TO TEST USER OPTION.
         B     LINKGR                   SHOW ON GRID.
         B     PUT20RU                  SHOW ON SCREEN.
         B     TESTNI                   GO TO TEST NUMBER OF INTERSECTS
SCROFF   BAL   LINKREG,TSTSR            LINK  TO TEST USER OPTION.
         B     LINKSR                   SHOW ON SCREEN.
         B     LINKGR                   SHOW ON GRID.
TESTNI   CLI   NI+3,X'02'
         BE    PUT2
         CLI   NI+3,X'01'
         BE    PUT1A
         NI    SGSW,X'F0'
         L     INXREG,VALUE1
         BR    INXREG
PUT2     LH    YREG,INTS1Y              TWO INTERSECT POINTS.
         LH    XREG,INTS2Y
         CR    XREG,YREG                SEE IF INTS2 IS LT INTS1.
         BL    INT2LO
         MVC   XE(4),INTS1X             START OF RADII IS INTERSECT 1.
         MVC   ZE(4),INTS2X
         B     PUTRAD2
INT2LO   MVC   XE(4),INTS2X             START OF RADII IS INTERSECT 2
         MVC   ZE(4),INTS1X
         B     PUTRAD2
PUT1A    TM    SGSW,X'F0'               SEE IF XC,YC OFF GRID.
         BO    PUT1B
PUTXYC   L     YREG,YC                  ONE INTERSECT POINT.
         LH    XREG,INTS1Y
         CR    XREG,YREG                FIND LOW POINT OF RADII
         BL    INT1LO
         MVC   XE(2),XC+2               START OF RADII IS XC,YC.
         MVC   YE(2),YC+2
         MVC   ZE(4),INTS1X             END OF RADII IS INTS1.
         B     PUTRAD2
INT1LO   MVC   XE(4),INTS1X             START OF RADII IS INTS1.
         MVC   ZE(2),XC+2               END OF RADII IS XC,YC.
         MVC   ZE+2(2),YC+2
         B     PUTRAD2
PUT1B    TM    SGSW,X'0F'               SEE IF BOTH POINTS OFF.
         BZ    FINDLO
         TM    SGSW,X'03'
         BO    PUTXYC
         MVC   GDV1(4),INTS1X           GENERATE POINT AT INTERSECT
         MVC   GDV2(4),INTS1X           ONE IF BOTH POINTS OFF GRID.
         B     PUTRAD1
PUT20RU  MVC   INTS1X(2),XC+2
         MVC   INTS1Y(2),YC+2
FINDLO   LH    YREG,INTS1Y              FIND LOW POINT OF RADII.
         L     XREG,PT2Y
         CR    XREG,YREG
         BL    PT2LO
         MVC   XE(4),INTS1X             INTS1 IS START OF RADII.
         MVC   ZE(2),PT2X+2             PT2 IS END OF RADII.
         MVC   ZE+2(2),PT2Y+2
         B     PUTRAD2
PT2LO    MVC   XE(2),PT2X+2
         MVC   YE(2),PT2Y+2             PT2 IS START OF RADII.
         MVC   ZE(4),INTS1X             INTS1 IS END OF RADII.
PUTRAD2  MVC   GDV1(2),XE               SET UP A GDV FOR POSITIONING
         MVC   GDV1+2(2),YE             BEAM AT XE,YE BLANKED.
         OI    GDV1,X'40'
         LA    CNTREG,4
         LA    ADDREG,GDV1
         BAL   LINREG,STORE
NEWXE    LH    EVEREG,XE                XE=XE+TEMP
         AH    EVEREG,TEMP
         STH   EVEREG,XE
         LH    EVEREG,YE                YE=YE+56
         AH    EVEREG,C56+2
         STH   EVEREG,YE
         CH    EVEREG,ZE+2
         BNL   LAST1
         MVC   GDV1(2),XE               SET UP GDV FOR NEW
         MVC   GDV1+2(2),YE             BEAM POSITION.
         LA    ADDREG,GDV1              GDV1= GDV XE,YE,U
         LA    CNTREG,4
         BAL   LINREG,STORE
         B     NEWXE
LAST1    MVC   GDV1(4),ZE               SET UP GDV TO COMPLETE RADII.
         LA    ADDREG,GDV1
         LA    CNTREG,4
         BAL   LINREG,STORE
         NI    SGSW,X'F0'
         L     INXREG,VALUE1
         BR    INXREG
LINKGR   ST    XYLREG,SABL
         B     PT2ON
LINKSR   OI    SGSW,X'03'
         LA    WRKREG,ZERO
         ST    WRKREG,SABL
PT2ON    STM   XREG,YREG,PT2X           STORE COORDINATES IN PT2X,PT2Y.
         STM   14,1,SAVE                STORE VITAL REGISTERS.
         ST    13,OVFSAVE+4
         ST    15,SVR15                 SAVE ERROR REGISTER
         LA    13,OVFSAVE               SET UP SAVE AREA FOR GOFFSG,
         LR    WRKREG,WKAREG            SAVE WORK AREA ADDRESS
         CLI   LOADSW,X'FF'             IF LOADSW IS ON, BR TO GET ADDR
         BE    GETIT                    OF GOFFSG. IF LOADSW IS OFF,
         LA    1,SABL                   AND POINT TO PARAMETER TABLE.
         LOAD EP=GOFFSG                 GET ADDR OF OFF SCREEN/GR1D RTN
         LR    WKAREG,WRKREG
         ST    0,LOADSW                 STORE ADDR OF GOFFSG ROUTINE.
         OI    LOADSW,X'FF'             SET LOAD SWITCH ON.
GETIT    L     15,LOADSW                LOAD ADDR OF GOFFSG ROUTINE AND
         LA    1,SABL                   POINT TO WORK AREA
         BALR  14,15                    BRANCH & LINK TO GOFFSG.
RESET    LR    WKAREG,WRKREG
         LM    14,0,SAVE
         L     13,OVFSAVE+4             RESTORE SAVE AREA ADDRESS.
         L     15,SVR15                 RESTORE ERROR REGISTER
         B     8(0,LINKREG)
         EJECT
*********************************************
*        XYLCHK     SUBROUTINE              *
*        ADDRESS OF XYLIM TABLE IN XYLREG   *
*********************************************
XYLCHK   LA    CNTREG,4                 SET  LOOP  COUNT
         LA    INXREG,0                 SET  INDEX
XYLLOOP  LH    WRKREG,0(XYLREG,INXREG)  LOAD  X1,Y1,X2,Y2
         C     WRKREG,ZERO
         BL    XYLERR
         C     WRKREG,HIGH
         BH    XYLERR
         A     INXREG,TWO
         BCT   CNTREG,XYLLOOP
         CLC   0(2,XYLREG),4(XYLREG)    X1 COMP  X2
         BNL   XYLERR
         CLC   2(2,XYLREG),6(XYLREG)    Y1 COMP  Y2
         BNL   XYLERR
         BR    LINREG
XYLERR   LA    15,4                     SET ERROR CODE = 4
         BAL   LINREG,ERRCNT
         B     RET
ER8      LA    ERREG,8                  UC,VC PARAMETER ERROR,
         BAL   LINREG,ERRCNT            IMMEDIATE RETURN.
         B     RET
ER16     BAL   LINREG,ERRCNT
         LA    ERREG,16
         B     RET
ER20     LA    ERREG,20                 INPUT PARAMETER ERROR,
         BAL   LINREG,ERRCNT            IMMEDIATE RETURN.
         B     RET
ER28     LA    ERREG,28                 S/G OPTION = D.
         B     ERRCNT
ER32     LA    ERREG,32                 S/G OPTION = C OR E.
         B     ERRCNT
ER40     LA    ERREG,40                 INPUT PARAMETER ERROR,
         BAL   LINREG,ERRCNT            COUNT ERRORS AND CONTINUE.
         BR    LINKREG
ER44     LA    ERREG,44                 S/G OPTION = A.
         B     ERRCNT
ER48     LA    ERREG,48                 S/G OPTION = B.
ERRCNT   L     TEMREG,ERCOUNT
         A     TEMREG,ONE
         ST    TEMREG,ERCOUNT
         BR    LINREG
RET      LA    TEMREG,1
         C     TEMREG,ERCOUNT
         BL    SETBIT
RETURN   CLI   LOADSW,X'00'
         BE    RETMACRO
         ST    15,SVR15                 SAVE ERROR REGISTER
         LR    WRKREG,1                 SAVE REGISTER 1
DELETE   DELETE EP=GOFFSG
         LR    1,WRKREG                 RESTORE REGISTER 1
         L     15,SVR15                 RESTORE ERROR REGISTER
* RESTORE PROGRAM MASK TO SETTING UPON ENTRY
RETMACRO L     WRKREG,MASKSV
         SPM   WRKREG
         RETURN (14,12),T,RC=(15)
SETBIT   O     15,MZERO
         B     RETURN
         EJECT
SCALFLT  LA    CONREG,4                 LOOP  COUNT
         LA    INXREG,0                 SET INDEX
         LA    WRKREG,0
FLTLOOP  LH    VALREG,0(XYLREG,INXREG)  GET X1Y1,X2Y2 VALUES
         BAL   LINREG,FLTCONV
         ST    VALREG,4(WKAREG,WRKREG)
         A     INXREG,TWO
         A     WRKREG,FOUR
         BCT   CONREG,FLTLOOP
***********************************************
*   SUBROUTINE TO SCALE FLOATING  *
*   POINT COORDINATES UC,VC.      *
***********************************************
         LE    0,UC
         SE    0,U1                     UC-U1
         LE    2,12(WKAREG)             LOAD CONVERTED X2.
         SE    2,4(WKAREG)              X2-X1
         MER   0,2                      (UC-U1)*(X2-X1)
         LE    2,U2
         SE    2,U1                     U2-U1
         BNP   ER16
         DER   0,2                      ((UC-U1)*(X2-X1))/(U2-U1)
         AE    0,4(WKAREG)              ADD X1 TO COMPLETE FUNCTION.
         L     VALREG,0(WKAREG)
         STE   0,0(WKAREG)
         BAL   LINREG,FIXCONV
         ST    VALREG,XC
         LE    0,VC
         SE    0,V1
         LE    2,16(WKAREG)
         SE    2,8(WKAREG)
         MER   0,2
         LE    2,V2
         SE    2,V1                     V2-V1
         BNP   ER16
         DER   0,2                      ((VC-V1)*(Y2-Y1)/(V2-V1)
         AE    0,8(WKAREG)              ADD Y1 TO COMPLETE FUNCTION
         L     VALREG,0(WKAREG)
         STE   0,0(WKAREG)
         BAL   LINREG,FIXCONV
         ST    VALREG,YC
         BR    LINKREG
**************************************************
*   SUBROUTINE TO SCALE FLOATING POINT VALUES    *
*   SVAL=XINC*((X2-X1)/(U2-U1))  XINC=RINC OR MRU*
*   SVAL REPRESENTS RINC OR MRU SCALED           *
**************************************************
FLTSCAL  LE    0,12(WKAREG)             X2
         SE    0,4(WKAREG)              -X1
         ME    0,VALUE1                 *UI
         LE    2,12(XYLREG)             U2
         SE    2,8(XYLREG)              -U1
         DER   0,2
         STE   0,0(WKAREG)
         L     XREG,0(WKAREG)           XREG CONTAINS SCALED FP UI
         L     VALREG,0(WKAREG)
         BAL   LINREG,FIXCONV           BR AND LINK TO CONVERT RTN.
         LR    XREG,VALREG              LOAD XREG WITH SCALED INC
         BR    LINKREG                  AND RETURN TO MAINLINE.
         EJECT
*********************************************
*   CONVERT FLOATING POINT TO FIXED POINT   *
*   VALREG = VALUE TO BE CONVERTED          *
*********************************************
FCONVERT LR    VALREG,XREG              FIXCONVERT -(CONVERT FLOAT
         BAL   LINREG,FIXCONV           TO FIX)
         LR    XREG,VALREG
         LR    VALREG,YREG
         BAL   LINREG,FIXCONV
         LR    YREG,VALREG
         BR    LINKREG
FIXCONV  ST    1,OVFSAVE                STORE REG 1 IN WORK AREA
         TM    OVFSAVE+3,X'07'          TEST LAST THREE BITS
         BZ    *+12                     NO BITS ON, SET INDEX TO ZERO
         LA    TEMREG,4                 SET MODIFIER
         B     *+8                      START CONVERSION
         LA    TEMREG,0                 SET MODIFIER TO ZERO
         ST    VALREG,TEMFLT(TEMREG)    SAVE FLOAT VALUE
         SR    WRKREG,WRKREG
         ST    WRKREG,TEMFLT+4(TEMREG)  CLEAR SECOND WORD
         LD    6,TEMFLT(TEMREG)         VALUE TO FLOAT REGISTERS
         N     VALREG,FCHAR
         BE    FLERR1                   CHARACTERISTIC IS ZERO
         AE    6,FLPT5                  ADD .5 TO ROUND
         AW    6,X4E                    ADD UNNORMALIZED-RIGHT JUSTIFY
         STD   6,TEMFLT(TEMREG)         SAVE VALUES
         L     WRKREG,TEMFLT+4(TEMREG)  CHECK SECOND WORD
         N     WRKREG,MZERO             CHECK BIT 32
         BM    ER12                     BRANCH ON MINUS
         L     WRKREG,TEMFLT(TEMREG)
         N     WRKREG,BYTE123
         BM    ER12                     BRANCH ON MINUS
         L     WRKREG,TEMFLT(TEMREG)
         N     WRKREG,MZERO             DROP CHARACTERISTIC
         L     VALREG,TEMFLT+4(TEMREG)  NEW FIXED VALUE
         LTR   WRKREG,WRKREG
         BNL   NOTNEG                   NOT NEGATIVE
         LNR   VALREG,VALREG            TAKE TWO'S COMPLEMENT
NOTNEG   BR    LINREG                   RETURN TO MAINLINE.
FLERR1   CE    6,ZERO                   IS TOTAL VALUE ZERO
         BE    NOTNEG                   RETURN
         B     ER12                     ERROR 12
ER12   LA    ERREG,12
       BAL   LINKREG,ERRCNT
       B     RET
**************************************************
*    CONVERT  FIXED  POINT  TO  FLOATING  POINT  *
*    VALREG CONTAINS THE VALUE TO BE CONVERTED   *
**************************************************
FLTCONV  O     VALREG,X6                EXPONENT OF 6
         ST    VALREG,0(WKAREG)
         LE    0,0(WKAREG)              LOAD FLOATING PT REG
         AE    0,X6                     NORMALIZE
         STE   0,0(WKAREG)
         L     VALREG,0(WKAREG)         FLOAT PT VAL IN VALREG
         BR    LINREG
         EJECT
**********************************
*   SUBROUTINE TO SCALE FIXED     *
*   FIXED POINT COORDINATES UC,VC *
***********************************
SCALFIX  S     XREG,U1                  COMPUTE UC-U1
         LR    ODDREG,XREG              LOAD MULTIPLICAND
         LH    XREG,X2
         SH    XREG,X1                  COMPUTE X2-X1
         SR    EVEREG,EVEREG                 AND
         MR    EVEREG,XREG              (UC-U1)*(X2-X1)
         L     XREG,U2
         S     XREG,U1                  COMPUTE U2-U1
         BNP   ER16
         DR    EVEREG,XREG              COMPUTE ((UC-U1)<(X2-X1))/U2-U1
         AH    ODDREG,X1                COMPLETE FUNCTION BY ADDING X1.
         LR    XREG,ODDREG              RETURN SCALED VALUE IN XREG.
         S     YREG,V1                  COMPUTE VC-V1
         LR    ODDREG,YREG
         LH    YREG,Y2
         SH    YREG,Y1                  COMPUTE Y2-Y1
         SR    EVEREG,EVEREG
         MR    EVEREG,YREG              (VC-V1)*(Y2-Y1)
         L     YREG,V2
         S     YREG,V1                  COMPUTE V2-V1
         BNP   ER16
         DR    EVEREG,YREG              COMPUTE ((VC-V1)*(Y2-Y1))/U2-V1
         AH    ODDREG,Y1                COMPLETE FUNCTION BY ADDING Y1.
         LR    YREG,ODDREG              RETURN SCALED VALUE IN YREG.
         BR    LINREG                   RETURN TO MAINLINE.
**************************************************
*   SUBROUTINE TO SCALE   FIXED  POINT  VALUES   *
*   SVAL=XINC*((X2-X1)/(U2-U1))  XINC=RINC OR MRU*
*   SVAL REPRESENTS RINC OR MRU SCALED           *
**************************************************
FIXSCAL  LH    ODDREG,4(XYLREG)         X2
         SH    ODDREG,0(XYLREG)         -X1
         SR    EVEREG,EVEREG            ZERO EVEN REG
         MR    EVEREG,XREG              * UI
         L     XREG,12(XYLREG)          U2
         S     XREG,8(XYLREG)           -U1
         BNP   ER16
         SR    EVEREG,EVEREG            ZERO EVEN REG
         DR    EVEREG,XREG
         LR    XREG,ODDREG              SCALED U VALUE IN XREG
         BR    LINREG
         EJECT
*********************************************
* STORE GRAPHIC DATA IN GDOA FOR POR        *
* INPUT TO SUBROUTINE                       *
*   CNTREG = NUMBER OF BYTES TO BE STORED   *
*   ADDREG = ADDRESS OF THE GRAPHIC DATA    *
*   WKAREG = WORK AREA ADDRESS              *
*   OABREG = ADDRESS OF OACB                *
*********************************************
STORE    SR    PASREG,PASREG            CLEAR OVERFLOW PASS INDICATOR
STORE1   L     OLPREG,16(0,OABREG)      ADDRESS OF OLP FROM OACB
         LR    WRKREG,CNTREG            LOAD BYTES TO MOVE
* CALCULATE ADDRESSES BASED ON N VALUE AND SIZE OF GDOA
STORE2   AR    OLPREG,WRKREG            OLP ADDRESS PLUS N VALUE
         LA    TEMREG,4
         AR    TEMREG,OLPREG            OLP PLUS N PLUS 4
         L     SLOREG,0(OABREG)         SLOA ADDRESS
         A     SLOREG,4(OABREG)         ADD LOA EQUALS TOTAL GDOA
         CR    TEMREG,SLOREG
         L     OLPREG,16(0,OABREG)      RESET INITIAL OLP ADDRESS
         BNH   OK
* NOT ENOUGH ROOM TO STORE ALL OF THE DATA-DETERMINE AMOUNT TO STORE
         SR    TEMREG,SLOREG            EQUAL BYTES-CAN'T STORE
         SR    WRKREG,TEMREG            NUMBER OF BYTES CAN STORE
* ANY BYTES TO STORE
         C     WRKREG,ZERO
         BNH   STORE4                   LESS OF EQUAL TO ZERO
         LH    TEMREG,H2A02
         CH    TEMREG,GOMODE
         BH    STORE3A
         LH    TEMREG,H0003
         NR    TEMREG,WRKREG
         BM    STORE4      GO TO USER OVERFLOW ROUTINE (IAPG)      7468
STORE3A  SR    CNTREG,WRKREG       BYTES REMAINING
         BAL   INTLNK,STORE6            LINK INTERNALLY
STORE3   LA    PASREG,1                 SET PASS INDICATOR
* STORE REGISTERS IN WORKAREA
         STM   0,15,0(WKAREG)           SAVE REGISTERS IN WORKAREA
         CLI   LOADSW,X'FF'
         BNE   LOADREG
         LR    3,1                      SAVE REG 1.
         DELETE EP=GOFFSG
         LR    1,3                      RESTORE REG 1.
LOADREG  L     15,8(0,OABREG)       OVERFLOW ADDRESS
         LM    2,12,28(13)           RELOAD USERS REG
         BALR  14,15                    LINK TO ROUTINE-SET RETURN
         MVI   LOADSW,X'00'
         LM    0,15,0(WKAREG)           RELOAD FROM WORKAREA
         B     STORE1                   GET NEW OLP ADDRESS-CONTINUE
* NO SPACE AVAILABLE
STORE4   C     PASREG,ONE               WAS A TRANSFER TO OVERFLOW MADE
         BL    STORE3
*
* SET ERROR CODE AND RETURN TO POR-LEAVE POR WITH RETURN MACRO
         LA    15,28                    SET ERROR CODE REG.
         B     RET                      SYMBOLIC IN POR
OK       BAL   INTLNK,STORE6            LINK INTERNALLY
         BR    LINREG
STORE6   LA    TEMREG,255               SET REG. EQUAL TO 255
STORE6A  CR    WRKREG,TEMREG            IS AMOUNT TO MOVE OVER 255
         BH    STORE7
         LR    TEMREG,WRKREG
         S     TEMREG,ONE               COMPENSATE FOR EXTRA BYTE
         EX    TEMREG,MOVE              MOVE GRAPHIC DATA
         AR    OLPREG,WRKREG            UPDATE OLP ADDRESS
         AR    ADDREG,WRKREG            UPDATE DATA ADDR
         ST    OLPREG,16(0,OABREG)      STORE NEW OLP ADDRESS
         BR    INTLNK                   RETURN INTERNALLY
STORE7   LR    SLOREG,TEMREG
         S     SLOREG,ONE               COMPENSATE FOR EXTRA BYTE
         EX    SLOREG,MOVE              MOVE GRAPHIC DATA
         AR    OLPREG,TEMREG            UPDATE OLP ADDRESS
         AR    ADDREG,TEMREG            UPDATE INPUT ADDRESS
         SR    WRKREG,TEMREG           REDUCE BY 255
         B     STORE6A                  MAKE NEXT COMPARISON
MOVE     MVC   0(0,OLPREG),0(ADDREG)    MOVE DATA TO GDOA
         CNOP  0,4
         EJECT
******************************
*   CONSTANTS USED BY GPGRID *
******************************
         DS    0D
X4E      DC    X'4E00000000000000'
ZERO     DC    F'0'
H4095    DC    H'4095,4095'
ONE      DC    F'1'
TWO      DC    F'2'
FOUR     DC    F'4'
FLPT5    DC    E'.5'
C56      DC    F'56'
C360     DC    F'360'
C1365    DC    F'1365'
C4095    DC    F'4095'
C5793    DC    F'5793'
TWOPI    DC    FS28'6.2832'
HIGH     DC    F'4095'
BYTE123  DC    X'00FFFFFF'
FCHAR    DC    X'7F000000'
XZERO    DC    X'80FFFFFF'
X6       DC    X'46000000'                   EXPONENT OF SIX
MZERO    DC    X'80000000'
POINT5   DC    HS14'.5'
MINUS1   DC    H'-1'
MINUS2   DC    H'-2'
MINUS56  DC    H'-56'
C8       DC    H'8'
C45      DC    H'45'
C46      DC    H'46'
C90      DC    H'90'
C136     DC    H'136'
C180     DC    H'180'
C226     DC    H'226'
C270     DC    H'270'
C315     DC    H'315'
H360     DC    H'360'
H2A02    DC    X'2A02'
H0003    DC    H'0003'
GEPM     DC    X'2A00'
GEVM     DC    X'2A02'
LOGJ     DC    HS14'.3010,.4771,.6021,.6990,.7782,.8451,.9031,.9542'
*   LOGJ TABLE=LOG VALUES FOR THE CYCLES OF LOG GRID. WHEN J=2,3,4,...9
LOGTBL   EQU   LOGJ
         EJECT
******************************
*    SINE/COSINE TABLE       *
******************************
SCTBL    DC    HS14'0.0000,1.0000,0.0175,0.9999'             0- 1
         DC    HS14'0.0349,0.9994,0.0523,0.9986'             2- 3
         DC    HS14'0.0698,0.9976,0.0872,0.9962'             4- 5
         DC    HS14'0.1045,0.9945,0.1219,0.9926'             6- 7
         DC    HS14'0.1392,0.9903,0.1564,0.9877'             8- 9
         DC    HS14'0.1737,0.9848,0.1908,0.9816'            10-11
         DC    HS14'0.2079,0.9782,0.2250,0.9744'            12-13
         DC    HS14'0.2419,0.9703,0.2588,0.9659'            14-15
         DC    HS14'0.2756,0.9613,0.2924,0.9563'            16-17
         DC    HS14'0.3090,0.9511,0.3256,0.9455'            18-19
         DC    HS14'0.3420,0.9397,0.3584,0.9336'            20-21
         DC    HS14'0.3746,0.9272,0.3907,0.9205'            22-23
         DC    HS14'0.4067,0.9136,0.4226,0.9063'            24-25
         DC    HS14'0.4384,0.8988,0.4540,0.8910'            26-27
         DC    HS14'0.4695,0.8830,0.4848,0.8746'            28-29
         DC    HS14'0.5000,0.8660,0.5150,0.8572'            30-31
         DC    HS14'0.5299,0.8481,0.5446,0.8387'            32-33
         DC    HS14'0.5592,0.8290,0.5736,0.8192'            34-35
         DC    HS14'0.5878,0.8090,0.6018,0.7986'            36-37
         DC    HS14'0.6157,0.7880,0.6293,0.7772'            38-39
         DC    HS14'0.6428,0.7660,0.6561,0.7547'            40-41
         DC    HS14'0.6691,0.7431,0.6820,0.7314'            42-43
S4445    DC    HS14'0.6947,0.7193,0.7071,0.7071'            44-45
SINE     EQU   SCTBL
COSINE   EQU   SCTBL+2
SIN45    EQU   S4445+4
COS45    EQU   S4445+6
         EJECT
******************************
******************************
*   PARAMETER TABLE FORMAT   *
******************************
PARTAB   DSECT
XYLIM    DS    CL4                      ADDR OF XY LIMIT TABLE.
UC       DS    CL4                      X-COORDINATE OF ARC CENTER.
VC       DS    CL4                      Y-COORDINATE OF ARC CENTER.
F        DS    CL1                      FIXED/FLOATING POINT INDICATOR.
S        DS    CL1                      SCALING INDICATOR.
INC      DS    CL1                      ALPHA/DENSITY INDICATOR.
OFFSG    DS    CL1                      OFF SCREEN/GRID OPTION IND.
RINC     DS    CL4                      INCREMENT IN RADIAL DIRECTION.
NR       DS    CL2                      # OF RADII
DENSITY  DS    CL2                   ** DENSITY OF CONSECUTIVE POINTS.
ALPHA    EQU   DENSITY               ** DEGREE OF SUCCESIVE POINTS.
MAXRAD   DS    CL4                      MAXIMUM LENGTH OF RADIUS.
TYPE     DS    CL1                      GRID TYPE.
         EJECT
******************************
*   GPGRID USE OF WORK AREA  *
******************************
WKAREA   DSECT
OVFSAVE  DS    0CL72
TEMFLT   DS    0CL8
         DS    CL128
SABL     DS    CL4
PT1X     DS    CL4
PT1Y     DS    CL4
PT2X     DS    CL4
PT2Y     DS    CL4
NI       DS    CL4
INTS1X   DS    CL2
INTS1Y   DS    CL2
INTS2X   DS    CL2
INTS2Y   DS    CL2
         DS    CL64
SAVE     DS    CL16
LOADSW   DS    CL4
GDV1     DS    CL4
GDV2     DS    CL4
XC       DS    CL4
YC       DS    CL4
MAXR     DS    CL4
RINK     DS    CL4
R        DS    CL4
VALUE1   DS    CL4
UU1      DS    CL4
UU2      DS    CL4
UU3      DS    CL4
UU4      DS    CL4
VV1      DS    CL4
VV2      DS    CL4
VV3      DS    CL4
VV4      DS    CL4
I        DS    CL4
SVR15    DS    CL4                      PLACE TO SAVE ERROR REGISTER
ERCOUNT  DS    CL4
ALPH     DS    CL2
NPT      DS    CL2
PHI      DS    CL2
K        DS    CL2
LOGSAV   DS    CL2
TEMP     DS    CL2
XE       DS    CL2
YE       DS    CL2
ZE       DS    CL4
SGSW     DS    CL1
FUNCSW   DS    CL1
INK      DS    CL1
J        DS    CL1
MASKSV   DS    F                   SAVE SETTING OF USER PROGRAM MASK
         ORG   OVFSAVE+396
GOMODE   DS    CL2
XYLIMT   DSECT
X1       DS    CL2
Y1       DS    CL2
X2       DS    CL2
Y2       DS    CL2
U1       DS    CL4
U2       DS    CL4
V1       DS    CL4
V2       DS    CL4
         END
