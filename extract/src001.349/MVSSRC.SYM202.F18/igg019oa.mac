         TITLE 'GRAPHIC INPUT/OUTPUT CONTROL ROUTINE'
***********************************************************************
*                                                                     *
*              GRAPHIC INPUT/OUTPUT CONTROL ROUTINE                   *
*                                                                     *
*STATUS CHANGE LEVEL 1
*                                                                     *
* FUNCTION: TAKES THE PARAMETER LIST WHICH IS BUILDED BY THE I/O      *
*           MACRO AND BUILDS THE APPROPIATE CHANNEL COMMAND WORDS.    *
*           IF REQUIRED PARAMETERS ARE MISSING, THE ROUTINE WILL      *
*           ABEND. IF COUNT INCORRECT, OR BUFFER                      *
*           LIMITS EXCEEDED, A CODE IS RETURNED IN REGISTER 15 AND    *
*           CONTROL IS RETURNED TO PROBLEM PROGRAM.                   *
*                                                                     *
* ENTRY POINT: IGG019OA, GIOCR VIA BALR IN I/O MACRO                  *
*                                                                     *
* INPUT: ADDRESS OF DECB IN REGISTER 1                                *
*                                                                     *
* OUTPUT: RETURN CODE IN REGISTER 15-00 = NORMAL                      *
*                                    04 = BUFFER LIMITS VIOLATED      *
*                                    08 = BYTE COUNT IMPROPER         *
*                                    0C = 2ND DCB USE INVALID (STR)   *
*                                                                     *
* EXTERNAL ROUTINES - IGC084 VIA SVC 084                              *
*                                                                     *
* EXITS: NORMAL -'RETURN'                                             *
*        ERROR - 'ABEND'                                              *
*                                                                     *
* TABLE: OGATABLE - TABLE OF COMMAND CODES AND COUNTS ASSOCIATED WITH *
*                   TABLE LOOK-UP USING 1ST FIVE BITS OF TYPE CODE    *
*                   IN MACRO.                                         *
*                                                                     *
* WORK AREA: N/A                                                      *
*                                                                     *
* ATTRIBUTES: PROBLEM PROGRAM RESIDENCE, PROBLEM PROGRAM STATE AND    *
*             REENTRANT                                               *
*                                                                     *
* NOTES: N/A                                                          *
*                                                                     *
***********************************************************************
*
*
*              REGISTER USE IN THIS ROUTINE
*
*
REG0     EQU   0
RX       EQU   0
RDECB    EQU   1                        DECB ADDRESS REGISTER
RY       EQU   1
RDCB     EQU   2                        DCB ADDRESS REGISTER
RZ       EQU   2
RBASE    EQU   3                        BASE REGISTER
RIOB     EQU   4                        IOB ADDRESS REGISTER
RB       EQU   4
REG5     EQU   5
REG6     EQU   6
REG7     EQU   7
REG8     EQU   8
RUCB     EQU   8
REG9     EQU   9
RBFTBL   EQU   9
REG10    EQU   10                       CCW ADDRESS REGISTER
REG11    EQU   11
REG12    EQU   12
ROACB    EQU   12
RA       EQU   12
RSAVE    EQU   13                       SAVE ADDRESS REGISTER
REG14    EQU   14
REG15    EQU   15
T2250    EQU   X'02'                                               3841
*
IGG019OA CSECT
* 090000,094050-094800,565100-565600                             A33619
*2515,024000,036000,467000
* A219090-212900,A554500                                      LI A44376
* C216000                                                     LI A44376
* 327000,328000,426000-430000                                     AOS/1
*C466000                                                     LG @ZM2358
*A460500,C461000                                            LG @Z30AALG
         ENTRY GIOCR
GIOCR    SAVE  (14,12),,*               SAVE REGISTERS IN USER AREA
         BALR  RBASE,0
         USING *,RBASE
         B     *+24      BRANCH AROUND EYECATCHER
MODID    DC    C'IGG019OA.VS2R3.74350'
*
*       LOAD DCB ADDRESS IN REGISTER AND CHECK FOR LEGAL DCB
*
         L     RDCB,8(0,RDECB)          DCB ADDRESS
         LA    RDCB,0(0,RDCB)           STRIP HIGH ORDER BITS
         C     RDCB,FZERO               CHECK IF DCB IN PRAM
         BNE   OGANO
         WTO   'IFF201I GIOCR FOUND NO DCB ADDRESS IN DECB',ROUTCDE=11,X
               DESC=7
         LA    REG15,X'10'              DECB DOES NOT HAVE         JFCD
         B     OGASTR                   DCB ADDR--RETURN           JFCD
OGANO    L     RIOB,28(0,RDCB)          1ST IOB ADDRESS IN DCB
         L     REG5,20(0,RIOB)          DCB PTR IN IOB
         LA    REG5,0(0,REG5)           DROP HIGH ORDER BITS
         CR    RDCB,REG5                CHECK IF LEGAL DCB
         BE    TESTDEB                 YES                       A33619
         WTO   'IFF202I GIOCR FOUND UNEQUAL DCB ADDRESSES IN DECB AND AX
               SSOCIATED IOB',ROUTCDE=11,DESC=7
         LA    REG15,X'14'              ILLEGAL DCB ADDRESS
         B     OGASTR                   IN DECB--RETURN            JFCD
*
TESTDEB  L     REG6,DCBDEBAD(RDCB)     GET DEB ADDR FROM DCB     A33619
         L     REG7,DEBDCBAD(REG6)     GET DCB ADDR FROM DEB     A33619
         LA    REG7,ZERO(REG7)        CLEAR HIGH-ORDER BYTE      A33619
         CR    REG7,RDCB               DCB ADDRESSES MATCH?      A33619
         BE    TESTINDX                YES                       A33619
         WTO   'IFF203I GIOCR FOUND UNEQUAL DCB ADDRESSES IN DECB AND AX
               SSOCIATED DEB',ROUTCDE=11,DESC=7
         LA    REG15,X'28'             INVALID DEB - DEB DOES    A33619
*                                      NOT CONTAIN CORRECT DCB   A33619
*                                      ADDRESS                   A33619
         B     OGASTR                  RETURN                    A33619
TESTINDX CLC   DEBNMEXT(ONE,REG6),UNITINDX(RDECB)    NUMBER IN   A33619
*                                      DEBNMEXT IN DEB MUST BE   A33619
*                                      LARGER THAN NUMBER IN     A33619
*                                      UNIT INDEX FIELD IN DEB   A33619
         BH    OGAOCBP                 COMPARE VALID - CONTINUE  A33619
         WTO   'IFF204I GIOCR FOUND DECB UNIT INDEX EXCEEDS UNITS SPECIX
               FIED IN DD RECORD',ROUTCDE=11,DESC=7
         LA    REG15,X'2C'             DECB REFERENCING UCB NOT  A33619
*                                      IN DEB                    A33619
         B     OGASTR                  RETURN                    A33619
*       TEST IF OCBP USED, IF SO, LOAD ADDRESSES TO REGISTERS
*       FROM OACB. IF NOT, LOAD REGISTERS FROM DECB.
*
OGAOCBP  TM    4(RDECB),X'C0'           IF 2260 READ/WRITE
         BO    OGACOMP                  OCBP NOT USED
         TM    4(RDECB),X'70'           IF 2260 ERASE
         BO    OGACOMP                  OCBP NOT USED
         TM    4(RDECB),X'80'           READ/WRITE
         BC    12,OGACOMP               OCBP NOT USED
         TM    20(RDECB),X'80'          TEST FOR OCBP USED
         BZ    OGACOMP                  NOT SPECIFIED
         L     REG7,20(0,RDECB)         OCBP ADDRESS
         LA    REG7,0(0,REG7)           STRIP HIGH ORDER BITS
         C     REG7,FZERO               CHECK IF OCBP IN PRAM
         BNE   OGANO1
         WTO   'IFF205I GIOCR FOUND NO OCBP ADDRESS IN DECB',ROUTCDE=11X
               ,DESC=7
         LA    REG15,X'18'              DECB DOES NOT HAVE         JFCD
         B     OGASTR                   OCBP PTR--RETURN           JFCD
OGANO1   L     REG8,0(0,REG7)           LOAD OACB ADDRESS
         L     REG6,12(0,REG8)          CRSA ADDRESS (AREA ADDRESS)
         LA    REG5,22(0,REG8)          START ADDRESS (BUFFER ADDRESS)
         L     REG0,24(0,RDECB)         START ADDRESS IN REGISTER
         C     REG0,FZERO               CHECK IF START ADDRESS
         BNE   OGAOLP                   YES
         LR    REG0,REG5                BUFFER ADDRESS TO START REG
OGAOLP   L     REG8,16(0,REG8)          OLP
         LA    REG8,0(0,REG8)           STRIP HIGH ORDER BITS
         LA    REG6,0(0,REG6)           STRIP HIGH ORDER BITS
         SR    REG8,REG6                LENGTH
         BC    11,OGARWS                NOT NEGATIVE LENGTH
         WTO   'IFF206I GIOCR, USING OACB, COMPUTED NEGATIVE BYTE COUNTX
                FOR I/O OPERATION',ROUTCDE=11,DESC=7
         LA    REG15,X'08'              LOAD THE RETURN CODE
         B     OGASTR                   RESTORE REGISTERS AND EXIT
*
*       TEST IF TYPE CODE IN DECB, IF START ADDRESS EVEN
*
OGACOMP  L     REG0,24(0,RDECB)         START ADDRESS IN REGISTER
         L     REG8,20(0,RDECB)         LENGTH IN REGISTER
         TM    4(RDECB),X'80'           FOR TYPE CODE IN LENGTH
         BZ    OGAPASS
         C     REG8,FZERO               TEST IF NEGATIVE
         BC    11,OGAPASS               YES                      S21016
         WTO   'IFF207I GIOCR FOUND NEGATIVE LENGTH IN DECB',ROUTCDE=11X
               ,DESC=7
         LA    REG15,X'3C'             LOAD RETURN CODE          S21016
         B     OGASTR                  GO RETURN
OGAPASS  L     REG6,12(0,RDECB)         AREA ADDRESS TO REGISTER
         L     REG5,28(0,RDECB)         BUFFER ADDRESS TO REGISTER
         LA    REG5,0(0,REG5)           DROP EIGHT HIGH ORDER BITS
OGARWS   L     REG7,4(0,RDECB)          TYPE CODE
         C     REG7,FZERO               CHECK IF TYPE IN PARM
         BNE   OGABUF2                  YES
         WTO   'IFF208I GIOCR FOUND NO TYPE CODE IN DECB',ROUTCDE=11,DEX
               SC=7
         LA    REG15,X'1C'              DECB DOES NOT HAVE         JFCD
         B     OGASTR                   TYPE CODE--RETURN          JFCD
*
*       CHECK IF BUFFER LIMIT TEST REQUIRED, IF SO, GO TO BUFFER
*       TEST ROUTINE.
*
OGABUF2  TM    4(RDECB),X'C0'           2260 READ/WRITE
         BC    1,OGANEXT                NO BUFFER CHECK
         TM    4(RDECB),X'70'           2260 ERS
         BC    1,OGANEXT                NO BUFFER CHECK
         TM    4(RDECB),X'80'           TEST FOR READ/WRITE
         BC    1,OGAMAN                 YES
         TM    4(RDECB),X'48'           TEST FOR HLT/INS/STR
         BC    1,OGAMAN0                YES
         TM    4(RDECB),X'62'           TEST FOR RMV
         BC    1,OGAMAN                 YES
         B     OGANEXT
OGAMAN0  TM    4(RDECB),SRTYP           SEE IF STR TYPE IN DECB.
         BZ    OGAMAN                   NO
         TM    24(RDECB),DCB2           SEE IF 2ND DCB PRESENT.
         BZ    OGAMAN                   NO DCB2 SPECIFIED
         L     RDCB,12(0,RDECB)         LOAD 2'ND DCB ADDR.
         LA    RDCB,0(0,RDCB)           ZERO HI-ORDER BYTE.
         L     REG10,28(0,RDCB)        IOB ADDRESS FROM DCB.
         L     REG10,20(0,REG10)       DCB PTR FROM IOB.
         LA    REG10,0(0,REG10)         ZERO HI-ORDER BYTE.
         CR    REG10,RDCB               DOES IOB POINT TO DCB2.
         BE    CONT1                    NO-INVALID DCB           S21016
         WTO   'IFF209I GIOCR FOUND DCB2 ADDRESS IN DECB NOT EQUAL TO DX
               CB ADDRESS IN IOB',ROUTCDE=11,DESC=7
         LA    REG15,X'38'             LOAD RETURN CODE          S21016
         B     OGASTR                  GO RETURN
CONT1    EQU   *                                                 S21016
         L     REG10,44(0,RDCB)         DEB ADDR FROM DCB2
         L     REG10,32(0,REG10)        UCB ADDR IN DEB.
         L     REG11,8(0,RDECB)         DCB1 ADDR TO REG 11.
         L     REG11,44(0,REG11)        DEB ADDR FROM DCB1.
         L     REG11,32(0,REG11)        UCB ADDR IN DEB
         CLC   BTBL(3,REG10),BTBL(REG11)  ARE BUF TBL ADDR EQUAL.
         BE    SWITCH                     YES.
         WTO   'IFF210I GIOCR FOUND DEVICES FOR DCB AND DCB2 ON DIFFEREX
               NT CONTROL UNITS',ROUTCDE=11,DESC=7
         LA    REG15,OGA0CR
         B     OGASTR
SWITCH   MVC   12(4,RDECB),8(RDECB)     REVERSE DCB POINTERS
         ST    RDCB,8(0,RDECB)          IN DECB FOR BUFFER CHECK.
OGAMAN   LR    REG14,REG8               STORE REG. 8
         LR    REG11,RIOB               STORE REG. 4
         LR    REG10,REG0               STORE REG. 0
         LA    REG10,0(0,REG10)        CLEAR HIGH ORDER BYTE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*        BUFFER PROTECT ROUTINE                                       *
*FUNCTION/OPERATION: CHECK BUFFER ADDRESSES INVOLVED IN INPUT/OUTPUT  *
*   OPERATIONS AGAINST THE LIMITS OF THE BUFFER ASSIGNMENT TO THAT    *
*   DEVICE TO PROTECT BUFFER STORAGE ASSIGNED TO OTHER DEVICES.       *
*ENTRY POINT: IGG019OC                                                *
*INPUT: ADDRESS OF DECB IN REGISTER 1                                 *
*OUTPUT: RETURN CODE IN REGISTER 15 - 00 = PROCEED WITH I/O           *
*                                     04 = ERROR, DO NOT PROCEED      *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
IGGBUFPR EQU   *                                                  AOS/1
         USING DECB,RDECB
*
         L     RUCB,DCBAD          LOAD RUCB WITH DCB ADR
         L     RUCB,44(RUCB)       LOAD RUCB WITH DEB ADR
         L     RUCB,32(RUCB)       LOAD RUCB WITH UCB ADR
         L     RBFTBL,36(RUCB)     LOAD RBFTBL WITH BFR TBL ADR
*
         TM    OCBP,X'80'          TEST OACB INDICATOR BYTE
         BC    1,COMPUTE
*
         TM    TYPE,SRTYP          CHK FOR STR TYPE
         BO    CHKSTR              BRANCH IF START TYPE
         L     RA,BUFFER           NO - ACCESS BFR START ADDR
         LA    RA,ZERO(RA)             CLEAR HI BYTE             S21016
         LTR   RA,RA                   IS BFR START ADDR PRESENT S21016
         BZ    NOBUFAD                 BRANCH IF BFR ADDR ZERO   S21016
         LH    RA,0(RA)
         LH    RB,LENGTH           ACCESS LENGTH FROM DECB
         TM    4(RDECB),X'06'      TEST FOR 2260              LI A44376
         BNO   NOT2260             BRANCH IF NOT              LI A44376
         CLC   4(RDECB),ERSTYPE    TEST FOR 2260 GCNTRL       LI A44376
         BE    NOLNGTH             BRANCH IF YES              LI A44376
         B     ADJUST              NOT 2260 GCNTRL            LI A44376
NOT2260  EQU   *                                              LI A44376
         TM    4(RDECB),X'40'      IS THIS 2250 GCNTRL        LI A44376
         BNO   ADJUST              NO, USE LENGTH             LI A44376
NOLNGTH  EQU   *                                              LI A44376
         SR    RB,RB               ZERO LRNGTH REG            LI A44376
         B     ADJUST
CHKSTR   L     RA,START            ACCESS BUFFER START ADDR IN DECB
         LH    RA,0(RA)
         SR    RB,RB               ZERO LENGTH REG            LI A44376
*
*POSITIVE CHECK FOR LEGAL ADR, I.E., WITHIN BUFFER SIZE
*
ADJUST   LH    RX,0(RBFTBL)        LOAD TBLNGTH IN RX
         SLL   RX,8                MULTIPLY TBLNGTH BY 256
         CLR   RA,RX                IS ADR LARGER THAN SIZE
         BH    ERROR1        YES GO TO ERROR ROUTN               S21016
         AR    RA,RB               ADD LENGTH TO START ADR FOR END ADR
         CLR   RA,RX               IS END ADR LARGER THAN SIZE
         BH    ERROR2        YES GO TO ERROR ROUTN               S21016
         SR    RA,RB               OTHERWISE SET RA EQ START ADR AND GO
         SRL   RA,8                BUFFER ADR ROUNDED DOWN TO MULT 256
         CLI   16(RUCB),X'31'           SEE IF MODEL ONE
         BE    MOD1                     YES
         LA    RX,HEADISP          LOAD RX EQ 72
*
GOON     AR    RA,RX               ADD HEADER LENGTH TO ADR
         AR    RA,RBFTBL           ADD ADDR OF BFR TBL, RA EQ DISP OF
*                                       SECTION ENTRY FOR THAT BFR ADR
*                                       IN BFR TBL
*ADJUST LENGTH TO 256-BYTE SECTIONS
*
         LA    RX,MASK1            LOAD RX WITH ALL ONES
         AR    RB,RX               ADD CONVERSION FACTOR
         SRL   RB,8                PUT NUMBER OF SECTIONS IN LO-ORDER
*                                       BYTES OF RB
         CL    RB,FZERO            CHK FOR ZERO LENGTH
         BH    INITRX              BRANCH IF NOT ZERO
         LA    RB,RY
INITRX   LA    RX,RY               SET RX EQ 1
CHECKALL CLC   0(1,RA),36(RUCB)    COMPARE BFR TBL ENTRY TO DEVNDX
         BNE   ERROR3        NOT EQUAL GO TO ERROR ROUTN         S21016
         AR    RA,RX               INCREMENT ENTRY DISP BY 1
         BCT   RB,CHECKALL
         B     OUT
*
MOD1     LA    RX,16                LOAD MOD 1 BFRTBL HEADER LNGYH
         B     GOON
*
COMPUTE  L     ROACB,OCBP          LOAD ADDR OF OCBP IN ROACB
         L     ROACB,0(ROACB)      LOAD ADDR OF OACB IN ROACB
         USING OACB,ROACB          SET UP OACB DSECT REGISTER
         L     RB,OLP              LOAD RB WITH OLP ADDR
         S     RB,CRSA             SUBTRACT CRSA TO GET LNG IN BYTES
         L     RA,BLP              LOAD BUFFER START ADDR IN RA
         B     ADJUST              GO TO CONVERT ROUTINE
*
ERROR1   WTO   'IFF211I GIOCR FOUND BUFFER START ADDRESS EXCEEDS BUFFERX
                SIZE',ROUTCDE=11,DESC=7
         LA    REG15,X'04'             LOAD RETURN CODE          S21016
         B     CHKRET
OUT      LA    15,0(0,0)                LOAD RETURN CODE.
         B     CHKRET                  BRANCH TO RETURN          S21016
ERROR2   WTO   'IFF212I GIOCR FOUND BUFFER ENDING ADDRESS EXCEEDS BUFFEX
               R SIZE',ROUTCDE=11,DESC=7
         LA    REG15,X'30'             LOAD RETURN CODE          S21016
         B     CHKRET                  GO RESTORE REGS           S21016
ERROR3   WTO   'IFF213I GIOCR FOUND I/O OPERATION VIOLATES BUFFER STORAX
               GE ASSIGNED',ROUTCDE=11,DESC=7
         LA    REG15,X'34'             LOAD RETURN CODE          S21016
         B     CHKRET                   BRANCH TO PD PROCESSING  S21016
CHKRET   EQU   *
*
         LR    REG8,REG14               RESTORE REG. 8
         LR    RIOB,REG11               RESTORE REG. 4
         LR    REG0,REG10               RESTORE REG. 0
         C     REG15,FZERO              TEST IF BEYOND LIMITS
         BNE   OGASTR                   BUFFER ERROR-RETURN.
OGAMAN1  TM    24(RDECB),DCB2           WAS DCB2 CHECKED BY BUF PROTECT
         BZ    OGAMAN2                  NO.
         MVC   8(4,RDECB),12(RDECB)     RESTORE DCB PTRS
         ST    RDCB,12(0,RDECB)         IN DECB.
         L     RDCB,8(0,RDECB)          RELOAD DCB1 ADDR.
         B     OGANEXT
OGAMAN2  CLI   4(RDECB),X'92'           TEST FOR FND
         BNE   OGANEXT
         A     REG8,FONE                ONE TO LENGTH FOR FIND TYPE
*
*        FIND NEXT IOB AND ASSIGN
*
OGANEXT  LR    REG10,RIOB               FIND NEXT IOB AVAILABLE
OGALOOP  TS    36(REG10)                IS THIS IOB AVAILABLE
         BZ    OGASGN                   YES - ASGN
         LA    REG10,36(0,REG10)        LOCATION OF NEXT IOB
         CLC   1(3,REG10),FZERO         TEST FOR ZERO
         BZ    OGAWAIT                  NON-AVAILABLE, WAIT
         L     REG10,0(0,REG10)         LOAD NEXT IOB AVAILABLE
         B     OGALOOP
OGAWAIT  LR    REG11,RDECB              STORE REGISTER 1
         LR    REG12,REG0               STORE REGISTER 0
         LR    RDECB,RIOB               FIRST IOB LOCATION
         S     RDECB,FOUR               LOCATION
         MVC   0(4,RDECB),FZERO         CLEAR ECB
         WAIT  ECB=(1)
         LR    REG0,REG12               RESTORE REGISTER 0
         LR    RDECB,REG11              RESTORE REGISTER 1
         B     OGANEXT                  FIND AVAIL IOB
OGASGN   LR    RIOB,REG10               IOB REG WITH NEW IOB ASGN
         LA    REG10,40(0,RIOB)         CCW LOCATION ADDRESS
         L     REG9,4(0,RDECB)          TYPE CODE TO REGISTER
*
*        IS NON-STOP REGENERATION TYPE CODE
*
         TM    4(RDECB),X'C0'           2260 READ/WRITE
         BC    1,OGACCW                 BUILD CCW
         TM    4(RDECB),X'70'           2260 ERASE
         BC    1,OGACCW                 BUILD CCW
         CLI   4(RDECB),X'4A'           HLT TYPE
         BE    OGACCW                   BUILD CCW
         CLI   4(RDECB),X'08'           MIP TYPE
         BE    OGACCW                   BUILD CCW
         CLI   4(RDECB),X'10'           XYP TYPE
         BE    OGACCW                   BUILD CCW
         CLI   4(RDECB),X'40'           ALM TYPE
         BE    OGACCW                   BUILD CCW
         CLI   4(RDECB),X'50'           IND TYPE
         BE    OGACCW                   BUILD CCW
         CLI   4(RDECB),X'6C'           STR TYPE
         BE    OGACCW                   BUILD CCW
         CLI   4(RDECB),X'A8'           UNB TYPE
         BE    OGACCW                   BUILD CCW
         CLI   4(RDECB),X'00'           DEV TYPE
         BE    OGACCW                   BUILD CCW
         CLI   4(RDECB),X'18'           'SEN' TYPE               A25397
         BE    OGACCW                   IF YES GO BUILD CCW      A25397
*
*       BUILD  -  SET BUFFER ADDRESS REGISTER AND STOP - CHANNEL
*       COMMAND WORD WITH CHAINING
*
OGAHALT  SR    REG11,REG11              CLEAR REGISTER
         ST    REG11,4(0,REG10)         CLEAR FIELD
         IC    REG11,HLTCT              HALT COMMAND CODE COUNT
         STC   REG11,7(0,REG10)         COUNT IN CCW FOR HALT
         C     REG5,FZERO               BUFFER ADDRESS IN PRAM
         BNE   OGANO3
NOBUFAD  EQU   *                                                 S21016
         WTO   'IFF214I GIOCR FOUND NO BUFFER ADDRESS IN DECB',ROUTCDE=X
               11,DESC=7
         LA    REG15,X'20'              DECB DOES NOT HAVE         JFCD
         MVI   36(RIOB),X'00'           MARK IOB AS NOW          A29793
*                                            AVAILABLE           A29793
         B     OGASTR                   BUFF ADR.--RETURN          JFCD
OGANO3   ST    REG5,0(0,REG10)          BUFFER ADDRESS IN CCW
         SR    REG11,REG11              CLEAR REGISTER
         IC    REG11,HALT               HALT COMMAND CODE
         STC   REG11,0(0,REG10)         COMMAND CODE IN CCW FOR HALT
         MVI   4(REG10),X'60'           CCW FLAG BITS
         A     REG10,EIGHT              UPDATE CCW POINTER
*
*       BUILD APPROPIATE CHANNEL COMMAND WORD FOR I/O OPERATION. IF
*       ANOTHER COMMAND FOLLOW, BRANCH BACK WITH CHAINING. IF LAST
*       COMMAND, TEST FOR UNBUFFERED.
*
OGACCW   LR    REG12,REG8               SHIFT LENGTH TO REG12
OGACCW1  SR    REG8,REG8                CLEAR REGISTER
         ST    REG8,4(0,REG10)          CLEAR FIELD
         SLDL  REG8,5                    TYPE CODE 5 HIGH ORDER BITS
         TM    4(RDECB),X'06'           FOR ONE
         BC    4,OGABUF                 NEXT TEST
         ST    REG6,0(0,REG10)          AREA ADDRESS TO CCW
         B     OGACODE                  COMMAND CODE AND COUNT
OGABUF   TM    4(RDECB),X'02'           FOR BUFFER CODE
         BC    12,OGASTART              START CODE
         ST    REG5,0(0,REG10)          BUFFER ADDRESS TO CCW
         B     OGACODE                  COMMAND CODE AND COUNT
OGASTART TM    4(RDECB),X'04'           FOR START CODE
         BC    12,OGACODE               COMMAND CODE AND COUNT
         ST    REG0,0(0,REG10)          START ADDRESS TO CCW
OGACODE  LA    REG11,OGATABLE           COMMAND CODE AND COUNT TABLE
         L     REG15,44(RDCB)           DEB ADDR
         L     REG15,32(REG15)          UCB ADDR
         CLI   UCBTYP(REG15),T2260      2260
         BNE   OGACODE1                 NO
         CLI    29(RDECB),X'01'
         BE    DATENTRY
OGACODE1 CLI   4(RDECB),X'40'           FOR ALM TYPE
         BE    OGANCK
         CLI   4(RDECB),X'70'           FOR ERS TYPE 2260
         BE    OGANCK
         L     REG15,0(0,REG10)         DATA ADDRESS IN CCW
         C     REG15,FZERO              CHECK IF ADDRESS PRESENT
         BNE   OGANCK
         MVI   36(RIOB),X'00'           MARK IOB AS NOW          A29793
*                                            AVAILABLE           A29793
         WTO   'IFF215I GIOCR DISCOVERED AREA,BUFFER, OR START ADDRESS X
               MISSING',ROUTCDE=11,DESC=7
         LA    REG15,X'24'              DECB DOES NOT HAVE         JFCD
         B     OGASTR                   AREA ADR.--RETURN          JFCD
DATENTRY  A  REG11,THRESIX
         B     OGANCK
OGANCK   AR    REG8,REG8                DOUBLE BITS IN REGISTER
         LH    REG11,0(REG8,REG11)      COMMAND CODE AND COUNT
         STC   REG11,7(0,REG10)         COUNT IN CCW
         SRL   REG11,8                  SHIFT OUT COUNT
         STC   REG11,0(0,REG10)         COMMAND CODE INTO CCW
         TM    7(REG10),X'FF'           IS COUNT ZERO
         BC    5,OGACMD                 NO
         ST    REG12,4(0,REG10)         LENGTH FROM REGISTER TO CCW
OGACMD   L     REG11,FZERO              ZERO TO REGISTER
         STH   REG11,4(0,REG10)         CLEAR UNUSED AREA IN CCW
         TM    4(RDECB),X'92'           TYPE CODE FOR FIND
         BC    12,OGAREAD               NO
         SR    REG11,REG11              CLEAR REGISTER
         IC    REG11,FNDB               FIND FLAG BITS
         STC   REG11,4(0,REG10)         BITS IN FLAG IN CCW FOR FIND
         B     OGABIT                   NEXT TYPE CODE
OGAREAD  TM    4(RDECB),X'80'           TYPE CODE FOR READ/WRITE
         BC    12,OGAOTHB               OTHER CODES
         SR    REG11,REG11              CLEAR REGISTER
         CLI   4(RDECB),X'88'           TEST IF CUR TYPE
         BE    OGABIT                   YES
         CLI   4(RDECB),X'D8'           TEST FOR SMI READ
         BE    OGABIT                   YES
         CLI   4(RDECB),X'E0'           TEST IF DSM READ TYPE
         BE    OGABIT                   YES
         CLI   4(RDECB),X'E8'           TEST IF DSB READ TYPE
         BE    OGABIT                   YES
         IC    REG11,RDWTB              READ/WRITE FLAG BITS
         STC   REG11,4(0,REG10)         BITS IN FLAG OF CCW FOR RD/WR
         B     OGABIT                   NEXT TYPE CODE
OGAOTHB  SR    REG11,REG11              CLEAR REGISTER
         CLI   4(RDECB),X'4A'           TEST IF HLT TYPE
         BE    OGABIT                   YES
         CLI   4(RDECB),X'6C'           TEST IF STR TYPE
         BE    OGABIT                   YES
         CLI   4(RDECB),X'50'           TEST IF IND TYPE
         BE    OGABIT                   YES
         CLI   4(RDECB),X'08'           TEST IF MIP TYPE
         BE    OGABIT                   YES
         CLI   4(RDECB),X'10'           TEST IF XYP TYPE
         BE    OGABIT                   YES
         CLI   4(RDECB),X'18'           TEST IF DFS TYPE
         BE    OGABIT                   YES
OGASIL   IC    REG11,FLAG               BITS FOR OTHERS FLAG
         STC   REG11,4(0,REG10)         BITS IN FLAG OF CCW FOR OTHERS
OGABIT   SLDL  REG8,3                   SHIFT OUT LAST BITS
         L     REG11,4(0,RDECB)         TYPE CODE
         SLL   REG11,8                  1ST TYPE CODE
         ST    REG11,4(0,RDECB)         TYPE CODE BACK
         TM    4(RDECB),X'FF'           ANOTHER TYPE CODE FOLLOWS
         BC    8,OGASET                 NON-FOLLOW
         TM    4(REG10),X'40'           TEST IF COMMAND CHAINING
         BC    5,OGAUPD                 YES
         L     REG11,4(0,REG10)         FLAG FIELD
         O     REG11,BFOUR              TURN ON COMMAND CHAIN FLAG
         ST    REG11,4(0,REG10)         FLAG W/COMMAND CHAINING IN CCW
OGAUPD   A     REG10,EIGHT              UPDATE CCW POINTER
         B     OGACCW1                  LOOP FOR NEXT CCW
OGASET   ST    REG7,4(0,RDECB)          RESTORE TYPE CODE IN DECB
*
*       TURN OFF APPROPIATE FLAGS IN CCW AND STORE RESTART ADDRESS
*       IN DCB. STORE ECB ADDRESS IN IOB AND SET ECB TO ZERO
*
         TM    4(REG10),X'40'           TEST IF COMMAND CHAINING
         BC    8,OGAECB                 OFF
         L     REG11,4(0,REG10)         FLAG OF CCW
         N     REG11,BNTWO              TURN OFF
         ST    REG11,4(0,REG10)         FLAG TO CCW
OGAECB   LR    REG11,REG0
         CLI   0(REG10),X'27'           WAS LAST COMMAND A START   3841
         BNE   OGASKIP1                 NO SKIP ADDR SAVE          3841
         MVC   12(2,RDCB),0(REG11)      RESTART BUF ADD IN DCB
         L     REG5,44(0,RDCB)          DEB ADDRESS FROM DCB
         LR    REG10,RDECB              SAVE REG 1.
         DEBCHK (RDCB),TYPE=VERIFY,AM=GAM   VALIDATE DEB      LB Y01021
         LH    REG0,0(0,REG11)          GET RESTART ADDRESS.
         SR    RDECB,RDECB        CLEAR WORK REGISTER       LG @Z30AALG
         ICM   RDECB,3,34(REG5)   UCB ADDRESS FROM DEB      LG @Z30AALG
         CLI   UCBTYP(RDECB),T2250                                 3841
         BH    OGASKIP                                             3841
         SLL   REG0,16                  LEFT JUSTIFY IN REG0.
         OR    REG0,RDECB               UCB AND BUFF ADDR TO REG 0.
         LR    RY,RDCB             LD DCB ADDR               LG @ZM2358
         SVC   84                  RESTART ADDRESS TO UCB          TMGA
OGASKIP  LR    RDECB,REG10              RESTORE DECB ADDR IN REG1
OGASKIP1 ST    RDECB,4(0,RIOB)          ECB ADDR IN IOB            3841
OGAEXCP  L     REG11,FZERO              ZERO TO REGISTER
         STH   REG11,30(0,RIOB)         CLEAR COUNT AREA IN IOB
         L     REG7,28(0,RDECB)         BUFFER ADDRESS
         SRL   REG7,24
         STC   REG7,32(0,RIOB)          UCB INDEX INTO IOB
*
*       ISSUE SVC 0 FOR EXCP AND RETURN
*
         LR    RDECB,RIOB               IOB POINTER TO REG 1
         SVC   0                        EXCP
         LA    REG15,ZERO              LOAD RETURN CODE          S21016
OGASTR   RETURN (14,12),RC=(15)
*
*       ABEND AND DUMP ON PROPER CODE
*
         DS    0D
*
*
*       COMMAND CODE AND COUNT TABLE ON HALH WORD BOUNDARY USED
*       FOR BUILDING CCW'S. THE FIRST BYTE IS THE COMMAND CODE
*       AND THE LAST BYTE IS THE COUNT ASSOCIATED WITH EACH COMMAND
*       IF APPROPIATE. THE MACRO ID REQUIRED TO HAVA A COUNT IF THE
*       COUNT IS ZERO.
*
*
OGATABLE DS    0F
OGADEV   DC    X'1612'                  0
OGAMIP   DC    X'0E03'                  1
OGAXYP   DC    X'1204'                  2
OGADFS   DC    X'0404'                  3
OGADCS   DC    X'0404'                  4
         DC    X'0000'                  5    UNASSIGNED
         DC    X'0000'                  6    UNASSIGNED
         DC    X'0000'                  7    UNASSIGNED
OGAALM   DC    X'0B02'                  8
OGASTOP  DC    X'0702'                  9
OGAIND   DC    X'1B04'                  10
OGAINS   DC    X'0F02'                  11
OGARMV   DC    X'1F02'                  12
OGASTR1  DC    X'2702'                  13
OGAERS   DC    X'0702'                  14
         DC    X'0000'                  15   UNASSIGNED
OGABUF1  DC    X'0200'                  16
OGACUR   DC    X'0600'                  17
OGAFND   DC    X'0600'                  18
         DC    X'0000'                  19   UNASSIGNED
OGAWBUF  DC    X'0100'                  20
OGAUNB   DC    X'0100'                  21
         DC    X'0000'                  22   UNASSIGNED
         DC    X'0000'                  23   UNASSIGNED
         DC    X'0000'                  24   UNASSIGNED
         DC    X'0000'                  25   UNASSIGNED
         DC    X'0000'                  26   UNASSIGNED
OGASMI   DC    X'0A00'                  27   2260
OGADSM   DC    X'0200'                  28   2260
OGADSB   DC    X'0600'                  29   2260
OGAWDSB  DC    X'0100'                  30   2260
OGALNE   DC    X'0500'                  31   2260
OGAERSW  DC    X'1702'
         DC    24X'00'
OGASMIW  DC    X'1A00'             DATA ENTRY COMMANDS
OGADSMW  DC    X'1200'
OGADSBW  DC    X'1600'
OGADSBWW DC    X'1100'
OGALNEW  DC    X'1500'
*
*
*        CONSTANT
*
         DS    0F
FONE     DC    XL4'01'
FZERO    DC    XL4'0'
TWO      DC    F'2'
FOUR     DC    F'4'
EIGHT    DC    F'8'
BFOUR    DC    X'40000000'
BNTWO    DC    X'20FFFFFF'
FLAG     DC    X'20'
CONCF    DC    C'C0'
HLTCT    DC    X'02'
T2260    EQU   X'03'
HALT     DC    X'07'
FNDB     DC    X'30'
RDWTB    DC    X'20'
ERSTYPE  DC    X'7000'             2260 GCNTRL TYPE           LI A44376
PATCH    DC    C'IGG019OA 50 BYTE PATCH AREA.'
         DC    C'50 BYTE AREA ENDS HERE'
THRESIX  DC  F'36'
OGA4R    EQU   4
OGA8R    EQU   8
OGA0CR   EQU   12
OGA10R   EQU   16
UCBTYP   EQU   19
BTBL     EQU   37
HEADISP  EQU   40
SRTYP    EQU   X'6C'
DCB2     EQU   X'80'
MASK1    EQU   X'FF'
DCBDEBAD EQU   44                      DISP IN DCB FOR DEB ADDR  A33619
DEBDCBAD EQU   24                      DISP IN DEB FOR DCB ADDR  A33619
DEBNMEXT EQU   16                      DISP IN DEB FOR NUMBER OF A33619
*                                      EXTENTS                   A33619
UNITINDX EQU   28                      DISP TO UNIT INDEX IN DECBA33619
ZERO     EQU   0                       DISPLACEMENT              A33619
ONE      EQU   1                       LENGTH OF UNIT INDEX ENTRYA33619
         CNOP  0,8
*DUMMY SECTIONS
DECB     DSECT
         DS    F
TYPE     DS    F
DCBAD    DS    F
AREADR   DS    F
         DS    F
OCBP     DS    CL2
LENGTH   DS    CL2
START    DS    F
BUFFER   DS    F
*
*
OACB     DSECT
SLOA     DS    F
         DS    2F
CRSA     DS    F
OLP      DS    F
BLP      DS    F
         END
