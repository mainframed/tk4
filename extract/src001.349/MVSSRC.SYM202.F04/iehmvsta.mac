*TITLE                                                                *
*   'IEHMVSTA-MOVE/COPY/LOAD/UNLOAD CATALOG'                          *
*FUNCTION/OPERATION                                                   *
*   THIS ROUTINE PUTS THE CATALOG OR PART OF THE CATALOG ON A         *
*   SPECIFIED DEVICE. IF MOVE IS SPECIFIED THE ORIGINAL CATALOG       *
*   ENTRIES ARE UNCATALOGED. IF UNLOAD IS SPECIFIED THE CATALOG       *
*   ENTRIES ARE WRITTEN ON THE OUTPUT DATA SET IN UNLOADED FORMAT.    *
*   IF LOAD IS INDICATED THE ENTRIES FROM THE INPUT DATA SET ARE      *
*   CATALOGED. NORMALLY CATALOG ENTRIES ARE TAKEN FROM THE ORIGINAL   *
*   CATALOG BY IEHMVSSC AND WRITTEN ON A WORK DATA SET WHICH IS READ  *
*   BY THIS ROUTINE. IF THE NECESSARY INDEX STRUCTURE DOES NOT EXIST  *
*   ON THE 'TO' VOLUME IT IS BUILT.                                   *
*ENTRY POINTS                                                         *
*   IEHMVETA-ONLY ENTRY POINT                                         *
*   CALLING SEQUENCE   L     14,12(0,13)                              *
*                      XCTL  (2,12),EP=IEHMVETA                       *
*INPUT                                                                *
*   WORK DATA SET CONSISTING OF RECORDS CONTAINING NAME AND VOLUME    *
*   INFORMATION OBTAINED BY IEHMVSSC FROM THE ORIGINAL ('FROM')       *
*   CATALOG.                                                          *
*OUTPUT                                                               *
*   ENTRIES IN THE 'TO' VOLUME CATALOG.                               *
*EXTERNAL ROUTINES                                                    *
*   IEHMVSRK  READS UNLOADED FORMAT DATA SETS.                        *
*   IEHMVSRM  WRITES UNLOADED FORMAT RECORDS                          *
*EXITS-NORMAL                                                         *
*   END OF INPUT - WRITE MESSAGE,FREEMAIN,TRANSFER CONTROL TO IEHMVEST*
*       IF MORE REQUESTS,TRANSFER CONTROL TO IEHMVESK IF NONE.        *
*      ERRORS                                                         *
*   I/O ERRORS, MACRO ERRORS - WRITE MESSAGE,INDICATE REQUEST NOT     *
*       COMPLETED,FREEMAIN,TRANSFER CONTROL TO IEHMVEST IF MORE       *
*       REQUESTS,TRANSFER CONTROL TO IEHMVESK IF NONE.                *
*TABLES/WORK AREAS                                                    *
*   TABLE OF MESSAGE TEXT.                                            *
*   TABLE OF MACRO CODES.                                             *
*   WORK AREA OF 900 BYTES.                                           *
*ATTRIBUTES                                                           *
*   REENTRANT,READ ONLY,REUSABLE.                                     *
*
*
***** REGISTER DESIGNATION *****
*
*
REG0     EQU   0
REG1     EQU   1
REG2     EQU   2
REG3     EQU   3
REG4     EQU   4
REG5     EQU   5
REG6     EQU   6
REG7     EQU   7
REG8     EQU   8
REG9     EQU   9
REG10    EQU   10
REG11    EQU   11
REG12    EQU   12
REG13    EQU   13
REG14    EQU   14
REG15    EQU   15
IEHMVSTA CSECT
* 029120,032600,091600                                           A37886
*A019300,019320,034300,056040-056096,056420,067900-067960        A48776
*A096700,105700                                                  A48776
*C019000,034200,080600,084400                                    A48776
*                                                                A27719
* 091000,092000                                                  A29225
*033600,056200                                                   A23930
*2164                                                             21076
*  033750-033800,105200                                          S21042
*A032487,032489,033704-033719                                    A52004
*C032450,032486,032488,032490,032500                             A52004
*D032444-032448,032484                                           A52004
*A 052700                                                      @XA04148
*A 054230-054350,055660-055720,067946-067952                   @XA05827
*C 055200                                                      @XA05827
*                                                              @Z40CSJH
*      THE ENTIRE MODULE WAS REACTIVATED IN SUPPORT            @Z40CSJH
*      OF THE EXTENDED MVS CVOL FUNCTION                       @Z40CSJH
*
         EXTRN IEHMVERM
         EXTRN IEHMVERK
         ENTRY A
         ENTRY B
         ENTRY C
         ENTRY D
         ENTRY E
         ENTRY F
         ENTRY G
         ENTRY H
         ENTRY J
         ENTRY  MYEOD
         EXTRN TATBL1
         EXTRN TAEODAD
         EXTRN MSGTERM
         EXTRN MSG300
         EXTRN MSG301
         ENTRY IEHMVETA
IEHMVETA SAVE  (14,12),T,TA9/15
         IEHPRE ,TF
         BALR  10,0
         USING IEHMVV,REG12
         USING TADSECT,REG8
         USING *,REG10
         TM    IEHMVV20,DSGROUP         IS THIS A DSGROUP FUNCTION
         BZ    TA00                    NO
         L     REG2,IEHMVV41           DCB ADDR-SYSUT2
         MVI   16(REG2),KEYLN           PUT KEY LENGTH IN DCB
         B     *+8
TA00     L     REG2,IEHMVV40           DCB ADDR-SYSUT1
         MVC   57(3,REG2),TASYNAD      PUT SYNAD IN DCB
         MVC   33(3,REG2),MYEOD
         GETMAIN  R,LV=944              GET 900 BYTES OF WORK AREA
         LR    REG8,REG1               ADDR OF STORAGE ACQUIRED
         MVI   CATNAME,X'40'      BLANK DSNAME                   A48776
         MVC   CATNAME+1(43),CATNAME  SAVE AREA                  A48776
         POINT (2),TATTRK
*
*
***** INITIALIZE MACRO PARAMETER LISTS *****
*
*
         MVI   TALST1,X'00'
         MVC   TALST1+1(47),TALST1     CLEAR PARAM LIST AREA
         MVI   TALST1,CATMAC            CODE FOR CATALOG MACRO
         MVI   TALST2,UNCATMAC          CODE FOR UNCATALOG
         TM    IEHMVV20+1,CVOL          WAS CVOL SPECIFIED
         BZ    TA02                    NO
         OI    TALST2,CVOLIND           CVOL INDICATOR
         L     REG2,IEHMVV24           ADDR OF CVOL ID
         LA    REG2,4(0,REG2)          ADD 4
         ST    REG2,TALST2+8           PUT IN UNCAT LIST
TA02     L     REG2,IEHMVV23           ADDR OF 'TO' VOL ID
         LA    REG2,4(0,REG2)          ADD 4
         ST    REG2,TALST1+8           PUT IN CATALOG LIST
         ST    REG2,TALST3+8           PUT IN INDEX LIST
         LA    REG2,TAWRK+3            ADDR OF NAME
         ST    REG2,TALST1+4           PUT IN CATALOG LIST
         ST    REG2,TALST2+4           PUT IN UNCAT LIST
         ST    REG2,TALST3+4           PUT IN INDEX LIST
         LA    REG2,TAWRK+47           ADDR OF VOLUME LIST
         ST    REG2,TALST1+12          PUT IN CATALOG LIST
*
*
***** GET A CATALOG ENTRY FROM WORK FILE *****
*
*
TA04     TM    IEHMVV20+1,LOAD          IS THIS A LOAD SITUATION
         BO    TA03                    YES
         TM    IEHMVV20,DSGROUP         IS THIS A DSGROUP FUNCTION
         BZ    TA04A                   NO
         L     REG2,IEHMVV41           DCB ADDR-SYSUT2
         L     REG3,IEHMVV41+4         DECB ADDR
         B     TA04B
TA04A    L     REG2,IEHMVV40           DCB ADDR-SYSUT1
         L     REG3,IEHMVV40+4         DECB ADDR
TA04B    LA    REG4,TAPRE              INPUT AREA ADDR
         LA    REG2,0(0,REG2)          CLEAR
         LA    REG3,0(0,REG3)          UPPER BYTES
         LA    REG4,0(0,REG4)          OF REGISTERS
         READ  (REG3),SF,(REG2),(REG4),'S',MF=E
         LA    REG3,0(0,REG3)           CLEAR HIGH ORDER BYTE
         CHECK (REG3)
         CLI   TAWRK+2,X'FF'           LAST RECORD
         BE    TAEOD                   YES
         TM    IEHMVV74+13,X'20'       IS VCB BIT ON?            A27719
         BO    TAREBLD1                                          A27719
         CLC   TAPRE+12(5),EXTEND      IS THIS SPEC VCB RECORD   A37886
         BE    TAREBLD                 GO BUILD VCB REC          A27719
*
*
***** DETERMINE TYPE OF ENTRY AND TAKE APPROPRIATE ACTION *****
*
*
TA11     CLI   TAWRK+2,VALIND           IS INDICATOR VALID
         BH    TA17                    NO
         TM    IEHMVV20+1,UNLOAD        IS THIS AN UNLOAD SITUATION
         BO    TA06                    YES
         TM    IEHMVV20+1,UNCATLG       UNCATALOG REQUEST (DSGROUP)
         BO    TA12                    YES
TA11A    SR    REG1,REG1
         IC    REG1,TAWRK+2            INDICATOR FROM ENTRY
         L     REG3,TATBL2(REG1)       GET CODE FROM LIST
         ST    REG3,TALST3             PUT CODE IN INDEX PARAM LIST
         L     REG3,TATBL3(REG1)       GET ADDR FROM LIST
         BR    REG3
*
*
*****  REBUILD LONG VCB RECORD  *****
*
*
TAREBLD  TM    IEHMVV20+1,UNLOAD       UNLOAD SITUATION?         A27719
         BO    TABLD1                  YES -                     A27719
         SR    REG2,REG2                                         A27719
         IC    REG2,TAWRK              PICK UP LENGTH            A27719
         SLL   REG2,8                  OF RECORD AND             A27719
         IC    REG2,TAWRK+1            ADD THE BASE OF 20.       A27719
         AH    REG2,TWENTY             GETMAIN FOR THAT          A27719
         LA    REG2,8(REG2)            ALLOW FOR REGISTER SAVE   A27719
         LA    REG2,240(REG2)          ADD SAFTY FACTOR          A27719
         LR    REG0,REG2               CORE FOR THE RECONSTRUCT  A27719
         GETMAIN  R,LV=(0)             RECORD                    A27719
         LR    REG9,REG1               REG9 WILL POINT TO MY AREAA27719
         LR    REG3,REG1               REG3 WILL VARY AS INFOR-  A27719
         ST    REG2,SAVCORE            SAVE THE LENGTH OF CORE   A27719
         LA    REG3,8(REG3)            INCREMENT PAST REG AREA   A27719
         MVC   0(46,REG3),TAWRK+3      MOVE DSNAME AND VCB COUNT A27719
         LA    REG3,46(REG3)           START OF VCB ENTRIES      A52004
         SR    REG2,REG2               CLEAR REG FOR VCB COUNT   A27719
         IC    REG2,TAVCBS             MATION IS ADDED TO RECORD A27719
         SLL   REG2,8                  PUT NUMBER OF VCBS IN     A27719
         IC    REG2,TAVCBS+1           REGISTER                  A27719
         STM   REG2,REG3,0(REG9)       SAVE THE REGS             A27719
TAREBLD1 LM    REG2,REG3,0(REG9)                                 A27719
         LA    REG5,TAINFO             INPUT VCB'S               A27719
         LA    REG1,2                  LOOP CONTROL              A27719
LOOPD    MVC   0(240,REG3),0(REG5)                               A27719
         LA    REG3,240(REG3)          INCREMENT R3 BY NO. MOVE  A27719
         LA    REG5,240(REG5)          INCREMENT R5 BY NO. MOVE  A27719
         SH    REG2,TWENTY             SUBTRACT VCBS MOVED       A27719
         BNP   TA11                    FINISHED LAST REC         A27719
         BCT   REG1,LOOPD                                        A27719
         STM   REG2,REG3,0(REG9)                                 A27719
         OI    IEHMVV74+13,X'20'       TURN OF VCB BIT           A27719
         B     TARERD                  YES-READ NEXT RECORD      A52004
CLRVCBS  LA    REG2,16            SET REG2 TO 16                 A52004
         SR    REG2,REG15         IS RETURN CODE CTLG 16         A52004
         BZ    BLDINDX            YES -BUILD INDEX FIRST         A52004
         NI    IEHMVV74+13,X'DF'       TURN OFF VCB BIT          A52004
         L     REG0,SAVCORE            LOAD LENGTH OF GETAREA    A27719
         ST    REG15,SAVCORE           SAVE RETURN FROM CATALOG  A27719
         FREEMAIN  R,LV=(0),A=(9)                                A27719
         L     REG15,SAVCORE           PICK UP RETURN CODE       A27719
BLDINDX  LA    REG2,TAWRK+3            ADDR OF NAME              A52004
         ST    REG2,TALST1+4           PUT IN CATALOG LIST       A27719
         LA    REG2,TAWRK+47           ADDR OF VOLUME LIST       A27719
         ST    REG2,TALST1+12          PUT IN CATALOG LIST       A27719
         B     TA16                                              A27719
TABLD1   MVI   TAWRK+47,X'EE'          VCB BUILD CODE            A27719
         MVC   TALNG(2),TAWRK          PUT TRUE LENGTH IN SAFTY  A27719
         MVI   TAWRK,X'02'             PUT LENGTH OF RECORD TO   A27719
         MVI   TAWRK+1,X'17'           UNLOAD IN PLACE           A27719
         CLI   IEHMVV74+13,X'05'       FIRST EXTEND BLOCK        A37886
         BE    *+12                    NO CONTINUE               A37886
         LA    REG9,46                 TO CHECK NUMBER OF        A37886
         MVI   IEHMVV74+13,X'05'       EXTEND BLOCKS PROCESSED   A37886
         B     TA06                    GO TO UNLOAD              A27719
TABLD2   MVI   TAWRK+47,X'00'          PUT ZEROS IN COUNT FIELD  A27719
         TM    IEHMVV74+13,X'20'       IS VCB BIT ON?            A27719
         BO    TAREBLD1                SKIP SETUP IF YES         A27719
         MVC   TAWRK(2),TALNG          SET UP TOTAL LENGTH       A27719
         B     TAREBLD                 GO BUILD LONG VCB RECORD  A27719
TARERD   TM    IEHMVV20+1,LOAD         IS THIS A LOAD SITUATION? A27719
         BO    TA03                    YES- READ FROM TAPE       A27719
         B     TA04A                   NO- READ FROM SYSUT1      A27719
*
***** CATALOG ENTRY ON 'TO' VOLUME *****
*
*
TA11B    CLI   TAWRK+47,X'FF'          IS INDEX SWITCH ON        A23930
         BE    TA11E                   IF SO GO TO TURN          A23930
*                                      SWITCH OFF                A23930
         CLI   TAWRK+47,X'EE'          IS THIS A LOADED VCB?     A27719
         BE    TABLD2                  GO PREPARE RECORD         A27719
         CLI   TAWRK+48,X'00'          IS VOL COUNT = ZERO       A23930
         BE    TA11D                   IF SO GO TO TURN          A23930
*                                      INDEX SWITCH ON           A23930
         TM    IEHMVV74+13,X'20'       VCB BIT ON?               A52004
         BZ    TA11BA                  NO  -                     A52004
         LA    REG2,8(REG9)            INCREMENT PAST REG AREA   A52004
         ST    REG2,TALST1+4           ADDRESS OF NAME IN CTLG   A52004
         LA    REG2,44(REG2)           OBTAIN AND STORE ADDRESS  A52004
         ST    REG2,TALST1+12          OF VCB IN CATLG LIST      A52004
TA11BA   EQU   *                                                 A52004
         CLI   TAWRK+48,X'02'          HOW MUCH VOLS?            S21042
         BNL   NORMCAT                 MORE THAN 1,BRACH         S21042
         OI    TALST1+1,X'02'     1 VOL THEN TTRPOINTER BIT ON   S21042
         LA    REG1,TAPRE+12           PUT ADDRESS OF TTR IN REG1S21042
         ST    REG1,TALST1+16     STORE ADDRESS IN PARAMETERLIST S21042
NORMCAT  CATALOG TALST1                                          S21042
         NI    TALST1+1,X'FD'          SET OFF INDICATION OF TTR S21042
         TM    IEHMVV74+13,X'20'       VCB BIT ON?               A27719
         BO    CLRVCBS                 YES -                     A27719
         B     TA16
TA11C    MVC   CATNAME(L'CATNAME),TAWRK+3  SAVE DSNAME           A48776
         TM    IEHMVV20+1,UNCATLG UNCATLG REQ                    A48776
         BO    TA04                    YES
*
*
***** UNCATALOG ENTRY FROM CVOL IF MOVE SPECIFIED *****
*
*
TA12     TM    IEHMVV20+1,LOAD          IS THIS A LOAD SITUATION
         BO    TA03                    YES
         CLI   TAWRK+2,ZERO             DATA SET ENTRY
         BNE   TA04                    NO
         TM    IEHMVV20+1,UNCATLG       UNCATALOG REQUEST (DSGROUP)
         BO    *+12                    YES
         TM    IEHMVV20,MOVE            MOVE CATALOG
         BZ    TA04                    NO
         LA    REG2,TALST2             ADDR OF UNCAT LIST
         CATALOG (2)
         LTR   REG15,REG15             ENTRY UNCATALOGED
         BNE   TA16                    NO
         TM    IEHMVV20,MOVE            MOVE REQUEST
         BZ    TA11A                   NO-RECAT REQUEST
         LA    REG15,124(0,0)          RETURN CODE
         B     TA16
*
*
***** INTERPRET RETURN CODE *****
*
*
TA16     CL    REG15,TAMXCD            CODE VALID
         BH    TA17                    NO
         SLL   REG15,1                 DOUBLE CODE
         L     REG3,ADTATBL1            GET MESSAGE ADDRESS
         L     REG11,ATATBL1            GET RETURN ADDR FROM LIST
         L     REG3,0(REG3,REG15)
         L     REG11,0(REG11,REG15)
         L     REG11,0(REG11)
         LTR   REG3,REG3               PRINT MSG
         BZ    0(0,REG11)              NO
*
*
***** GENERATE MESSAGE *****
*
*
TAMSG    SR    REG5,REG5
         MVI   TAPRNT,X'00'             CLEAR MESSAGE AREA.
         MVC   TAPRNT+1(120),TAPRNT    MESSAGE AREA
         LA    REG1,TAPRNT+1           ADDR OF MSG AREA
         BAL   REG2,TAMSGB             GO TO MOVE SEGMENT
         L     REG2,ADTATBL1
         LA    REG15,0(REG2,REG15)
         TM    0(REG15),NAME
         BZ    TAMSGA                  NO
         LR    REG6,REG3               SAVE MSG ADDR
         BM    TAMSGX                  INDEX NAME REQUIRED
         L     REG3,MSG300AD           ADDR OF MSG SEGMENT
         B     *+8
TAMSGX   L     REG3,MSG301AD           ADDR OF MSG SEGMENT
         BAL   REG2,TAMSGB             GO TO MOVE SEGMENT
         MVC   0(44,REG1),TAWRK+3      PUT NAME IN MSG
         LA    REG1,45(0,REG1)         ADDR OF NEXT PART OF MSG
         IC    REG5,0(0,REG6)          LGTH OF PREVIOUS MSG SEGMENT
         LA    REG3,2(REG5,REG6)       ADDR OF NEXT MSG SEGMENT
         BAL   REG2,TAMSGB             GO TO MOVE SEGMENT
TAMSGA   LA    REG3,TAPRNT             ADDR OF MSG OUTPUT AREA
         LINK  EP=IEHMVESU             GO TO MSG WRITER
         LTR   REG15,REG15             MESSAGE WRITTEN
         BNE   TA31                    NO
         BR    REG11
TAMSGB   IC    REG5,0(0,REG3)          LENGTH OF MSG SEGMENT
         EX    REG5,TAMVM1             PUT SEGMENT IN MSG AREA
         LA    REG1,2(REG5,REG1)       ADDR OF NEXT PART OF MSG AREA
         BR    REG2                    RETURN
*
*
***** REQUEST NOT COMPLETELY SERVICED *****
*
*
TA17     OI    IEHMVV32,X'04'          RETURN CODE TO WRAP-UP RTN
*
*
***** END OF   DATA EXIT FOR WORK FILE *****
*
*
TAEOD    LA    REG15,68(0,0)           RETURN CODE
         L     REG2,IEHMVV41           ADDR OF SYSUT2 DCB
         MVI   16(REG2),KEY             RESTORE KEY LGTH IN DCB
         TM    IEHMVV20,DSGROUP                                  A34094
         BO    TA30D                                             A34094
         B     TA16
*
*
***** SYNCHRONOUS I/O ERROR EXIT FOR WORK FILE *****
*
*
TASYN    LA    REG15,84(0,0)           RETURN CODE
         OI    IEHMVV41+13,X'04'       RET CODE EQUAL 12       @XA04148
         B     TA16
*
*
***** WHEN INDEX STRUCTURE INCOMPLETE BUILD NECESSARY INDEXES *****
*
*
TA21     LA    REG4,TAWRK+3            ADDR OF FULLY QUALIFIED NAME
TA22     LA    REG4,1(0,REG4)          ADD 1
         CLI   TAWRK+2,GDG             GDG ENTRY ?             @XA05827
         BE    TA22C                   YES....BRANCH           @XA05827
         LA    REG15,TAWRK+47          MASK FOR NAME=44 BYTES  @XA05827
TA22A    CR    REG4,REG15              NAME 44 OR 35 BYTES ?   @XA05827
         BNL   TA22B                   YES....BRANCH           @XA05827
         CLI   0(REG4),PERIOD           IS THIS BYTE A PERIOD
         BE    TA23                    YES
         CLI   0(REG4),BLANK            IS THIS BYTE A BLANK
         BNE   TA22                    NO
TA22B    CLI   TAWRK+2,GDG              GDG INDEX              @XA05827
         BE    TA25D                   YES
         B     TA11B
TA22C    LA    REG15,TAWRK+38          MASK FOR NAME=35 BYTES  @XA05827
         B     TA22A                   BRANCH TO TEST          @XA05827
*
TA23     MVI   0(REG4),BLANK            BLANK OUT PERIOD
         LA    REG15,TAWRK+4      COMPUTE LENGTH OF NAME         A48776
         LR    REG5,REG4          SAVE VALUE                     A48776
         SR    REG5,REG15         LENGTH FOR EXECUTE             A48776
         EX    REG5,CLC1          COMPARE NAMES                  A48776
***CLC1  CLC   CATNAME(1),TAWRK+3 COMMENT ONLY                   A48776
         BNE   TA23A              *B IF NOT EQUAL                A48776
         SR    REG15,REG15        SIMULATE RC OF INDEX=0         A48776
         B     AFTINDEX           BYPASS SVC 26                  A48776
TA23A    LA    REG2,TALST3             ADDR OF INDEX             A23930
*                                      MACRO PARAM LIST          A23930
         INDEX (2)
AFTINDEX EQU   *                                                 A48776
         CLI   TAWRK+47,X'AA'          IS LOW LEVEL SWITCH ON    A23930
         BE    TA04                    GO TO GET ANOTHER         A23930
*                                      ENTRY FROM WORK FILE      A23930
         MVI   0(REG4),PERIOD           RESTORE PERIOD IN NAME
         LA    REG15,32(0,REG15)       ADD 32 TO RETURN CODE
         B     TA16                    GO TO TEST RETURN CODE
TA11D    MVI   TAWRK+47,X'FF'          TURN INDEX SW ON          A23930
         B     TA21                    BLDX FOR INCOMPLETE       A23930
*                                      STRUCTURE                 A23930
TA11E    MVI   TAWRK+47,X'AA'          TURN LOW LEVEL SW ON      A23930
         B     TA23A                   BLDX FOR LOW LEVEL        A23930
*
*
***** BUILD ALIAS CATALOG ENTRY OR CVOL CATALOG ENTRY *****
*
*
*
TA24B    MVI   TALST3,CHANGE            CHANGE INDEX
         MVI   TALST3+1,MACODE          MACRO CODE
TA24     LA    REG2,TAWRK+12       POINT TO ALIAS NAME             7622
         ST    REG2,TALST3+12          PUT IN INDEX MACRO LIST
         B     TA27                    GO TO ISSUE INDEX MACRO
*
*
***** BUILD GENERATION INDEX AND PUT MODEL DSCB ON 'TO' VOLUME *****
*
*
TA25     MVC   TALST3+3(1),TAWRK+39    PUT MAX NO OF GEN IN PARAM LIST
         TM    TAWRK+38,EMPTY           OPTION = EMPTY
*
         BZ    TA25A                   NO
         OI    TALST3+2,EMTCODE         PUT EMPTY CODE IN PARAM LIST
TA25A    TM    TAWRK+38,DELETE          OPTION = DELETE
         BZ    TA25C                   NO
         OI    TALST3+2,DELCODE         PUT DELETE CODE IN PARAM LIST
TA25C    CLI   TAWRK+40,X'BB'  IS THIS A GDG WITH NO DSCB         21076
         BE    TA21          YES                                  21076
         MVI   TAWRK+38,BLANK  PUT BLANKS                         21076
         MVC   TAWRK+39(7),TAWRK+38    ON END OF NAME
         MVI   TAWRK+62,ZERO            NO OF EXTENTS
         MVI   TAWRK+101,ZERO           SET
         MVC   TAWRK+102(41),TAWRK+101 ALLOCATION QTY
         GETMAIN  R,LV=140
         LR    REG7,REG1
         MVC   0(43,REG7),TAWRK+3
         MVI   43(REG7),X'40'
         MVI   44(REG7),X'F1'
       MVC   51(89,REG7),TAWRK+47
         L     REG1,IEHMVV31+8
         LH    REG1,14(0,REG1)
         MVC   45(6,REG7),28(REG1)
         L     REG1,IEHMVV31+8         ADDR IN TIOT
         LA    REG1,12(0,REG1)
         LR    REG0,REG7
         O     REG0,TAMSK1
         SVC   32
         LR    REG1,REG7
         LR    REG7,REG15
         FREEMAIN  R,LV=140,A=(1)
         LA    REG15,4            PREPARE FOR TEST TO SEE IF.....  7130
         CR    REG7,REG15         MODEL DSCB IS ON TO VOLUME ?     7130
         BNH   TA21               YES, TA21 .... NO, DROP THROUGH  7130
         LA    REG15,116               RETURN CODE
         B     TA16
TA25D    MVI   TALST3+1,INDMAC          CHANGE INDEX MACRO CODE
*
*
         MVC   CATNAME(35),TAWRK+3 SAVE GDG NAME                 A48776
         MVI   CATNAME+35,X'40'   BLANK REST OF SAVE AREA        A48776
         MVC   CATNAME+36(8),CATNAME+35                          A48776
         MVI   TAWRK+38,X'40'          BLANK GDG INFORMATION   @XA05827
         MVC   TAWRK+39(8),TAWRK+38                            @XA05827
*                                                                A48776
         B     TA27
***** DETERMINE TYPE OF INDEX BUILT AND TAKE APPROPRIATE ACTION *****
*
*
TA26     CLI   TALST3+1,NORINDX         NORMAL INDEX
         BNE   TA04                    NO
         CLI   TAWRK+2,RNALIAS          REAL NAME FOR ALIAS
         BE    TA24B                   YES
         B     TA22
*
*
***** USE INDEX MACRO TO CONSTRUCT DESIRED INDEX *****
*
*
TA27     LA    REG2,TALST3             ADDR OF PARAM LIST
         INDEX (2)
         CLI   TAWRK+2,RNALIAS         IS THIS AN ALIAS?         A27719
         BE    TA27B                   YES - BRANCH              A27719
         CLI   TALST3+1,NORINDX         NORMAL INDEX
         BE    TA27A                   YES
         CLI   TAWRK+2,CVOLENT          CVOL ENTRY
         BH    TA27B                   NO-GDG ENTRY
         BE    TA27A                   YES
         MVC   TAWRK+3(8),TAWRK+48     PUT ALIAS IN PLACE OF REAL NAME
TA27A    MVI   TAWRK+11,BLANK           BLANK OUT
         MVC   TAWRK+12(35),TAWRK+11   REST OF NAME AREA
TA27B    LA    REG15,32(0,REG15)       ADD 32 TO RETURN CODE
         B     TA16                    GO TO TEST RETURN CODE
*
*
***** PROCEDURE WHEN CATALOG STRUCTURE INCONSISTENT AFTER CATALOG *****
***** MACRO HAS BEEN ISSUED
*
*
TA28     LA    REG15,88(0,REG1)        PUT ADJUSTED CODE IN  REG 15
         B     TA16
*
*
***** PROCEDURE WHEN CATALOG STRUCTURE INCONSISTENT AFTER INDEX *****
***** MACRO HAS BEEN ISSUED
*
*
TA29     CH    REG1,TAK12              INDEX BLOCK FOUND BY LOCATE MACR
         BZ    TA26                    YES
         LA    REG15,88(0,REG1)        PUT ADJUSTED CODE IN REG 15
         B     TA16
*
*
***** PROCEDURE FOR I/O ERROR IN SYSOUT *****
*
*
TA31     OI    IEHMVV32,WRAPCODE        RETURN CODE TO WRAP-UP ROUTINE
*
*
***** PROCEDURE FOR ENDING FUNCTION *****
*
*
TA30     TM    IEHMVV20+1,UNLOAD        IS UNLOAD SPECIFIED
         BZ    TA30A                   NO
         LR    REG0,REG10              INDICATE END OF DATA SET
         L     REG15,TABWRT            ADDR OF WRITER
         BALR  REG14,REG15
         L     REG5,IEHMVV31      TO DCB ADDR
* THIS ROUTINE SAVES THE VOL SER NBR AND FILE SEQ NBR OF IEHMVESN
         TM    48(REG5),X'10'          DCB OPEN                  A43752
         BNO   SKIPSAVE                NO SKIP THE SAVE RTN      A43752
         L     REG4,44(REG5)           DEB ADDRESS               A43752
         SR    REG2,REG2               CLEAR FOR INSERT          A43752
         IC    REG2,16(REG4)           NBR OF EXTENTS            A43752
         TM    28(REG4),X'04'          DA DEVICE                 A43752
         BO    OFFS16                  YES FIND LAST EXTENT      A43752
         LA    REG4,28(REG4)           SCAN THE EXTENTS          A43752
NEXTEXT1 LA    REG4,4(REG4)            JUMP TO NEXT EXTENT       A43752
         BCT   REG2,NEXTEXT1           SCAN FURTHER              A43752
         B     SAVEUCB                 STORE UCB ADDR            A43752
OFFS16   DS    0H                                                A43752
         LA    REG4,16(REG4)                                     A43752
NEXTEXT2 LA    REG4,16(REG4)           JUMP TO NEXT EXTENT       A43752
         BCT   REG2,NEXTEXT2           SCAN FURTHER              A43752
SAVEUCB  L     REG4,0(REG4)            GET UCB ADDR              A43752
         MVC   IEHMVV82+24(2),38(REG4) SAVE LOG FILE SEQ NBR     A43752
         MVC   IEHMVV82+26(6),28(REG4) SAVE THE VOL SER NBR      A43752
         OI    IEHMVV82+24,X'80'       SET SWITCH TO IND         A43752
SKIPSAVE DS    0H                                                A43752
         CLOSE   ((REG5))
         IEHPOST ,T
         FREEMAIN R,LV=944,A=(8)                                 A48776
         L     REG14,12(0,REG13)       RESTORE REG 14
         XCTL  (2,12),EP=IEHMVESN
TA30A    TM    IEHMVV20+1,LOAD          IS LOAD SPECIFIED
         BZ    TA30C                   NO
         L     REG5,IEHMVV30           ADDR OF FROM DCB
         CLOSE ((5))
TA30C    TM    IEHMVV32,REQABORT        REQUEST ABORTED
         BO    TA30D                   YES
         L     REG3,MSGTRMAD           ADDR OF MESSAGE
         MVI   TAPRNT,X'00'             CLEAR PRINT AREA
         MVC   TAPRNT+1(120),TAPRNT    MESSAGE AREA
         SR    REG5,REG5
         LA    REG1,TAPRNT+1           ADDR OF MSG AREA
         BAL   REG2,TAMSGB             GO TO MOVE MSG
         L     REG2,IEHMVV23           ADDR OF TO VOL ID
         MVC   0(6,REG1),4(REG2)       PUT VOL ID IN MSG
         BAL   REG11,TAMSGA
TA30D    IEHPOST ,T
         FREEMAIN R,LV=944,A=(8)                                 A48776
         L     REG14,12(0,REG13)     RESTORE REG 14
         TM    IEHMVV32,SYSERR          SYSOUT ERROR
         BO    TA30B                   YES
         TM    IEHMVV20+2,EOI           ANY OTHR REQUESTS--END OF INPUT
         BO    TA30B                   NO
         XCTL  (2,12),EP=IEHMVEST
TA30B    XCTL  (2,12),EP=IEHMVESK
*
*
***** PROCEDURE FOR LOAD SITUATION *****
*
*
TA03     SR    REG0,REG0
         LA    REG1,TAWRK              ADDR OF INPUT AREA
         L     REG15,TABRD             ADDR OF RTN WHICH READS
*                                        UNLOADED CATALOG
         BALR  REG14,REG15             GO TO GET CATALOG ENTRY
         LTR   REG15,REG15             ENTRY FOUND
         BZ    TA11                    YES
         LA    REG15,68(0,REG15)       ADD 68 TO RETURN CODE
         B     TA16                    GO TO TEST RETURN CODE
*
*
***** PROCEDURE FOR UNLOAD SITUATION *****
*
*
TA06     SR    REG0,REG0
         LA    REG1,TAWRK              ADDR OF OUTPUT AREA
         L     REG15,TABWRT            ADDR OF RTN TO WRITE
*                                       UNLOADED CATALOG
         BALR  REG14,REG15             GO TO WRITE ENTRY
         LTR   REG15,REG15             ENTRY WRITTEN
         BNE   TA06A                   NO                        A29225
         TM    TAWRK+2,DSENT            DATA SET ENTRY
         BM    TA12                    NO
         CLI   TAWRK+48,X'00'          IS THIS AN INDEX ENTRY    A23930
*                                      WITHOUT DATA SET          A23930
         BE    TA04                    YES-DO NOT WRITE MESSAGE  A23930
*                                      GO TO GET ANOTHER ENTRY   A23930
         CLI   IEHMVV74+13,X'05'       EXTENDED VCBS             A37886
         BNE   WRTMSG                  NO CONTINUE               A37886
         LA    REG9,480(REG9)          YES  UPDATE EXT LENGTHCT  A37886
         CH    REG9,TALNG              LAST BLOCK PROCESSED      A37886
         BL    TA12                    NO READ NEXT              A37886
         MVI   IEHMVV74+13,X'00'       YES  TURN OFF INDIC       A37886
WRTMSG   LA    REG15,120(0,0)          RETURN CODE               A37886
         B     TA16
TA06A    LA    REG15,60(0,REG15)       ADD 60 TO RETURN CODE     A29225
         B     TA16                    GO TO TEST RETURN CODE
*
*
***** CONSTANTS *****
*
*
TAMXCD   DC    F'124'
TAMSK1   DC    X'80000000'
TAK12    DC    H'12'
TAK8     DC    H'8'
TATTRK   DC    A(256)
EXTEND   DC    CL5'XVCBS'                                        A27719
TWENTY   DC    H'20'                                             A27719
SAVCORE  DS    1F                                                A27719
*
*
***** ADDRESS CONSTANTS *****
*
*
TASYNAD  DC    AL3(TASYN)
TABWRT   DC    A(IEHMVERM)
TABRD    DC    A(IEHMVERK)
*
*
***** INSTRUCTIONS PERFORMED THRU EXECUTE *****
*
CLC1     CLC   CATNAME(1),TAWRK+3                                A48776
*
TAMVM1   MVC   0(1,REG1),1(REG3)       MOVE MSG TEXT TO MSG AREA
A        DC    A(TA11C)
B        DC    A(TA28)
C        DC    A(TA21)
D        DC    A(TA26)
E        DC    A(TA29)
F        DC    A(TA30)
G        DC    A(TA04)
H        DC    A(TA17)
J        DC    A(TA12)
MYEOD    DC    A(TAEOD)
ADTATBL1 DC    A(TATBL1)
ATATBL1  DC    A(TATBL1+4)
ATAEODAD DC    A(TAEODAD)
MSGTRMAD DC    A(MSGTERM)              CATALOG MOVED/COPIED
MSG300AD DC    A(MSG300)
MSG301AD DC    A(MSG301)
*
*
***** TABLE OF CODES FOR INDEX MACRO *****
*
*
TATBL2   DS    0F
         DC    X'84400000'             BLDX
         DC    X'84400000'             BLDA
         DC    X'C4080000'             LINKX
         DC    X'84400000'             BLDG (HIGHER INDEX LEVELS)
***** TABLE OF ROUTINE ADDRESSES FOR DIFFERENT TYPES OF ENTRIES *****
TATBL3   DS    0F
         DC    A(TA11B)                DATA SET
         DC    A(TA27)             ALIAS                           7622
         DC    A(TA24)                 CVOL
         DC    A(TA25)                 GDG INDEX
*
*
***** DEFINE WORK STORAGE *****
*
*
TADSECT  DSECT
TAPRNT   DS    121C
TAST1    DS    F
TALST1   DS    5F                                                S21042
TALST2   DS    4F
TALST3   DS    4F
CATNAME  DS    CL44               SAVE DS- & GDG NAMES           A48776
TAPRE    DS    17C
TAWRK    DS    C
*
*
***** E Q U A T E S  *****
*
*
DSGROUP  EQU   X'10'
KEYLN    EQU   X'0C'
BLANK    EQU   C' '
CATMAC   EQU   X'E4'
UNCATMAC EQU   X'0C'
CVOL     EQU   X'40'
CVOLIND  EQU   X'80'
LOAD     EQU   X'02'
VALIND   EQU   X'0C'
UNLOAD   EQU   X'01'
UNCATLG  EQU   X'20'
MOVE     EQU   X'80'
NAME     EQU   X'FF'
KEY      EQU   X'08'
PERIOD   EQU   C'.'
GDG      EQU   X'0C'
CHANGE   EQU   X'C4'
MACODE   EQU   X'10'
EMPTY    EQU   X'01'
EMTCODE  EQU   X'08'
DELETE   EQU   X'02'
DELCODE  EQU   X'40'
ZERO     EQU   X'00'
INDMAC   EQU   X'20'
NORINDX  EQU   X'40'
RNALIAS  EQU   X'04'
CVOLENT  EQU   X'08'
WRAPCODE EQU   X'08'
REQABORT EQU   X'04'
SYSERR   EQU   X'08'
EOI      EQU   X'20'
DSENT    EQU   X'FF'
TAVCBS   EQU   TAWRK+47                                          A27719
TAINFO   EQU   TAWRK+49                                          A27719
TALNG    EQU   TAWRK+529                                         A27719
         IEHMVV
         END
