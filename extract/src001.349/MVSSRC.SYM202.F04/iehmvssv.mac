*TITLE 'IEHMVSSV                                                      *
*FUNCTION/OPERATION: THIS MODULE HANDLES THE MOUNTING OF THE FROM, TO *
*AND CVOL VOLUMES; AND OBTAINING THE DSCB ON THE FROM DATA SET IF IT  *
*RESIDES ON A DIRECT ACCESS DEVICE                                    *
*ENTRY POINTS: IEHMVESV                                               *
*INPUT: MOVE/COPY COMMUNICATIONS TABLE                                *
*OUTPUT: DSCB IN MOVE/COPY COMMUNICATIONS TABLE                       *
*EXTERNAL ROUTINES: IEHMVXSF                                          *
*EXITS-NORMAL XCTL IEHMVXSF; RETURN TO CALLING ROUTINE IEHMVSSZ       *
*ERRORS: UNABLE TO MOUNT REQUIRED VOLUMES                             *
*TABLES/WORKAREAS: MOVE/COPY COMMUNICATIONS TABLE                     *
*ATTRUBUTES: REUSEABLE                                                *
*NOTES: PART OF LOAD MODULE IEHMVESZ                                  *
*2050022200-024600                                                 4173
*2892074000                                                        DT0I
         EJECT
IEHCULAT CSECT
*A023946-023952,065460-065520                                  @ZA28250
*A023800-023940                                                @ZA16493
*C023960                                                       @ZA16493
*C056400,056600                                                @ZM30153
*A056500,089500,089520                                         @ZM30153
* 019100                                                         A29225
*                                                                A17911
* 014600-014800,025800-026800,027200-027400                      A17911
*                                                                A17911
* 014800,027600-027700                                           A24209
*036000-039400,040200-040800,046200-047200,087800                S21042
*
*                             REGISTER NOTATION AND USAGE
*
ZERO     EQU   0
PARAM    EQU   1
ACCE     EQU   2
WORK2    EQU   2
WORK3    EQU   3
ACCO     EQU   3
BASE     EQU   4                        BASE FOR IEHMVESV
M5       EQU   5
M6       EQU   6
DSCB     EQU   7                        BASE FOR DSCB DSECT
MCTABLE  EQU   12                       BASE FOR IEHMVV, WORK AREA
SAVE     EQU   13                      SAVE REG
RETURN   EQU   14                       RETURN REG
LINK     EQU   15                      ENTRY POINT REG
*
*                             ASSEMBLER EQUATE STATEMENTS
*
CODE03   EQU   X'03'                    UNABLE TO LOCATE VOL INFO
CODE08   EQU   X'08'                    UNABLE TO MOUNT FROM VOLUME
CODE10   EQU   X'0A'                    DATA SET NOT FOUND
CODE12   EQU   X'0C'                    UNABLE TO COPY ON SAME VOLUME
*                                       WITHOUT RENAME FUNCTION
CODE19   EQU   X'13'                    DSORG FIELD IS INCORRECT A24209
CODE26   EQU   X'1A'                    UNABLE TO MOUNT TO VOL
UNMOVE   EQU   X'08'
RENAME   EQU   X'04'
COMTAB   EQU   16                       POINTER TO THE CVT
SYSRES   EQU   X'02'
DASD     EQU   X'20'
COPY     EQU   X'40'
CATALOG  EQU   X'04'
VOLUME   EQU   X'02'
FROM     EQU   X'01'
CVOL     EQU   X'40'
*
*                             ENTRY AND EXTRN STATEMENTS
*
         ENTRY IEHMVESV
         ENTRY RTNVM
         ENTRY CALLMT
         EXTRN COPYRTN
         EXTRN KK1
         EXTRN KK2
         EXTRN PREABORT
*
*                             ASSEMBLER USING STATEMENTS
*
         USING IEHMVV,MCTABLE
         USING DSCBDSEC,DSCB
         USING IEHMVESV,BASE
*
*
IEHMVESV SAVE  (14,12),T,IEHMVSSV-OZ28250                      @ZA28250
         LR    BASE,LINK                SET UP ADDRESSABILITY
         IEHPRE (14,1),TFC
         B     IEHMVESP                 OTHERWISE, GOTO MOUNT FROM VOL
IEHMVRSP DS    0H             ENTRY POINT TO TEST FOR COPY OPERATION
     TM   IEHMVV20,COPY
    BO   COPYYES
    TM   IEHMVV20,CATALOG
    BO   COPYYES
NOTCOPY  DS    0H             ENTRY POINT TO FIND THE FROM DSCB.
*                             THE PERMANENT WORK AREA POINTER IS
*                             DISPLACED BY 140 BYTES TO BE OCCUPIED BY
*                             THE DSCB. IF THE FROM DEVICE IS DIRECT
*                             ACCESS, THE DSCB IS OBTAINED. OTHERWISE,
*                             NO MOUNTING OPERATION TAKES PLACE AND
*                             CONTROL IS RETURNED TO THE CALLER
         L     ACCE,IEHMVV10
         LA    ACCO,140(ACCE)
         ST    ACCO,IEHMVV10
         ST    ACCE,IEHMVV30+8               DSCB POINTER
     XC   0(140,ACCE),0(ACCE)
         L     ACCE,IEHMVV22+4          FROM DEVICE DASD
         CLI   2(ACCE),DASD
         BNE   IEHMVEEJ                PREPARE TO EXIT           A29225
         L     ACCE,IEHMVV30+8
*                                                                S21042
*  IF THE TTR OF THE 'FROM' DSCB IS AVAILABLE, IT IS CONVERTED   S21042
*  TO CCHHR AND THE DSCB OBTAIN'D BY SEEK CCHHR. IF NO TTR IS    S21042
*  AVAILABLE OR THE OBTAIN FAILS A SEARCH DSNAME OBTAIN IS DONE  S21042
*                                                                S21042
         OC    IEHMVV82(3),IEHMVV82    IS TTR ZERO ?             S21042
         BZ    SEARCH                  YES, SEARCH DSCB BY NAME  S21042
         L     PARAM,IEHMVV30+12       GET PTR TO 'FROM' DDNAME  S21042
         LA    PARAM,0(PARAM)    CLEAR HIGH-ORDER BYTE           S21042
         DEVTYPE (PARAM),INFO,DEVTAB   GET DEVICE CHARACTERISTICSS21042
         L     PARAM,IEHMVV82          GET TTR OF 'FROM' DSCB    S21042
         SRL   PARAM,8                 MOVE R TO RIGHTMOST BYTE  S21042
         STC   PARAM,CCHHR+4           SAVE R                    S21042
         SRL   PARAM,8                 MOVE TT TO RIGHTMOST BYTESS21042
         SR    ZERO,ZERO               CLEAR REG FOR DIVISION    S21042
         LH    M5,TRCYL                PICK UP NR OF TRKS/CYL    S21042
         DR    ZERO,M5                 DIVIDE TT BY TRKS/CYL     S21042
         STH   PARAM,CCHHR             SAVE CC                   S21042
         STH   ZERO,CCHHR+2            SAVE HH                   S21042
         LA    PARAM,CCHHR             GET ADDR OF CCHHR         S21042
         MVI   IEHMVV00,X'C0'          +INDICATE                 S21042
         MVI   IEHMVV00,X'80'          +SEEK MODE                S21042
         ST    PARAM,IEHMVV00+4        SET UP PTR TO CCHHR       S21042
         L     ACCO,IEHMVV22+4         +                         S21042
         LA    ACCO,4(ACCO)            +SET UP VOL SEQ NUMBER    S21042
         ST    ACCO,IEHMVV00+8         +                         S21042
         LA    ACCO,IEHMVV00+16        SET UP PTR                S21042
         ST    ACCO,IEHMVV00+12        TO WORK AREA              S21042
         OBTAIN IEHMVV00                                         S21042
*                                                                S21042
         LTR   LINK,LINK               OBTAIN SUCCESSFUL ?       S21042
         BNZ   SEARCH                  NO, SEARCH DSCB BY NAME   S21042
         L     ACCO,IEHMVV21           GET PTR TO 'FROM' DSNAME  S21042
         CLC   IEHMVV00+16(44),0(ACCO) SAME DSNAMES ?            S21042
         BNE   SEARCH                  NO, SEARCH DSCB BY NAME   S21042
         MVC   0(140,ACCE),IEHMVV00+16 MOVE DSCB                 S21042
         B     SKIPMT                  SKIP DSCB SEARCH BY NAME  S21042
*                                                                S21042
*  OBTAIN BY SEARCH DSNAME                                       S21042
SEARCH   DS    0H                                                S21042
         XC    IEHMVV00(20),IEHMVV00    INDICATE SEARCH MODE
         OI    IEHMVV00,X'C1'
         MVC   IEHMVV00+4(4),IEHMVV21   SET UP DSNAME
         L     ACCO,IEHMVV22+4
         LA    ACCO,4(ACCO)             SET UP VOLUME SEQUENCE NUMBER
         ST    ACCO,IEHMVV00+8
         LA    ACCO,IEHMVV00+16         SET UP POINTER TO WORK AREA
         ST    ACCO,IEHMVV00+12
*
*
         OBTAIN IEHMVV00
*
         B     CUOBT(LINK)              CHECK OBTAIN RETURNS
CUOBT    DS    0H
*                       RTN CODE       MEANING                     4173
         B     OBOK          0         DSCB FOUND                  4173
         B     EOBTAIN       4         VOL NOT MOUNTED, PRINT MSG  4173
         B     NTINVTOC      8         DSCB NOT FOUND IN VTOC      4173
         B     SVC27ERR      12        I/O ERR RETN FROM SVC27     4173
         B     SVC27ERR      16        WORK AREA ALLOC ERR SVC 27  4173
         B     SVC27ERR      20        VTOC EXTENT VIOLATED SVC 27 4173
NTINVTOC MVI   IEHMVV61,X'0A'          CODE FOR MSG MODULE         4173
         L     ACCO,IEHMVV23+4        ADDRESS OF ACTIVE TO VOL @ZA16393
         LA    ACCO,0(ACCO)            CLEAR HIGH ORDER BYTE   @ZA16393
         CLI   2(ACCO),X'80'           TO DEV TAPE ?           @ZA16393
         BNE   MSGNOUT                 NO, PRINT MSG IEH406I   @ZA16493
         TM    IEHMVV20,X'16'          DSGROP/VOLUME/CATALOG   @ZA16493
         BM    MSGNOUT                 YES, PRINT MSG IEH406I  @ZA16493
         OI    IEHMVV20+5,X'08'      SET TO WRITE A DUMMY FILE @ZA16493
         OI    IEHMVV20+1,X'01'        SET UNLOAD SWITCH       @ZA16493
         B     IEHMVEEJ                MOUNT TO VOLUME         @ZA28250
DUMMY    EQU   *                                               @ZA28250
         B     MSGNOUT                 PRINT MSG IEH406I       @ZA16493
SVC27ERR MVI   IEHMVV61,X'0E'          THIS WILL CAUSE THE MSG     4173
*                                      MODULE TO ISSUE THE I/O ERR 4173
*                                      MSG FOR THREE DIFF RTNS,NB  4173
MSGNOUT  L     LINK,PREAB              PREPARE TO LEAVE MODULE     4173
         BR    LINK
OBOK     DS    0H
         L     ACCO,IEHMVV21
         MVC   0(44,ACCE),0(ACCO)       MOVE DSNAME
         MVC   44(96,ACCE),IEHMVV00+16  MOVE DSCB
         L     ACCO,IEHMVV00+12        GET PTR TO WORKAREA       S21042
         L     PARAM,IEHMVV30+12       GET PTR TO 'FROM' DDNAME  S21042
         LA    PARAM,0(PARAM)    CLEAR HIGH ORDER BYTE           S21042
         DEVTYPE (PARAM),INFO,DEVTAB   GET DEVICE CHARACTERISTICSS21042
         MVC   CCHHR(5),96(ACCO)       MOVE CCHHR IN ABS ADDR LOCS21042
         LH    PARAM,CCHHR             GET CC                    S21042
         MH    PARAM,TRCYL             CONVERT CC TO TT          S21042
         AH    PARAM,CCHHR+2           GET TOTAL TT              S21042
         SLL   PARAM,8                 FREE RIGHTMOST BYTE       S21042
         IC    PARAM,CCHHR+4           INSERT R                  S21042
         SLL   PARAM,8                 MOVE TTR TO LEFT 3 BYTES  S21042
         ST    PARAM,IEHMVV82          SAVE TTR                  S21042
SKIPMT   DS    0H
         TM    IEHMVV20,X'04'           IS THIS A CATALOG MOVE   A24209
         BZ    IEHMVEEJ                 NO. GO MOUNT TO VOLUME   A24209
  TM   DS1DSORG-DS1DSNAM(ACCE),X'E2'    IS DSORG =0              A24209
         BZ    IEHMVEEJ                 YES. GO MOUNT TO VOLUME  A24209
         MVI   IEHMVV61,CODE19          CATALOG HAS WRONG DSORG  A24209
         B     MSGNOUT                  GO TO PRINT MESSAGE      A24209
IEHMVREJ DS    0H             ENTRY POINT FOR LEAVING THIS PROGRAM
        IEHPOST (14,1),TC
*
         MVC   12(4,SAVE),MNOP          SET UP ADDRESS FOR ENTRY INTO
*                                       IEHMVSSZ. ENTRY POINT IS
*                                       CALLED COPYRTN.
         RETURN (14,12),T
COPYYES  DS    0H             ENTRY POINT FOR COPY OPERATION
         TM    IEHMVV20+3,RENAME       IS RENAME SPECIFIED
         BO    NOTCOPY                  YES ALLOW COPY ON SAME VOLUME
         L     ACCE,IEHMVV22            NO. GET POINTERS TO THE FROM
*                                       AND TO VOLUME LISTS AND COMPARE
*                                       THE VOLUME SERIAL NUMBERS
         L     ACCO,IEHMVV23+4
         CLC   4(6,ACCE),4(ACCO)
         BNE   NOTCOPY                  IT THE VOLUME IDS ARE NOT EQUAL
*                                       CONTINUE PROCESSING
         MVI   IEHMVV61,CODE12          IF EQUAL, ABORT STEP WITH MSG
*                                       UNABLE TO COPY ON SAME VOLUME
*                                       STEP WILL BE TERMINATED IF AN
*                                       ATTEMPT IS MADE TO COPY ONTO
*                                       THE SAME VOLUME WITHOUT
*                                       SPECIFYING THE RENAME FUNCTION
GOOUT    L     LINK,PREAB
         BR    LINK
EOBTAIN  DS    0H             ENTRY POINT TO ABORT A REQUEST IF THE
*                             FROM VOLUME CANNOT BE MOUNTED
         MVI   IEHMVV61,CODE08          SET MSG CODE UNABLE TO MOUNT
*                                       FROM VOLUME
         B     GOOUT
IEHMVESP DS    0H             ENTRY POINT FOR MOUNTING THE FROM VOLUME
         TM    IEHMVV20,FROM            FROM VOL SPECIDIED
         BO    MTFROM                   YES,PROCEED TO MOUNT FROM VOL
*
*                                       NO, TEST FOR CVOL
         TM    IEHMVV20+1,CVOL          CVOL SPECIFIED
         BO    MTCVOL                   YES, PROCEED TO MOUNT CVOL
*
      TM    IEHMVV20,CATALOG            CATALOG FUNCTION
         BO    SYSCAT         IF YES, CHECK TO SEE IF SYSTEM RESIDENCE
*                             VOLUME HAS BEEN MOUNTED
GOLO     DS    0H
         L     M5,IEHMVV10
         LA    M5,4(M5)
         IC    ACCE,IEHMVV22           GET NUMBER OF VOLUMES     S21042
         LA    ACCO,12
         MR    ACCE,ACCO                GET LENGTH OF LIST
         EX    ACCO,LOMO                MOVE THE VOLUME LIST TO THE
*                                       PERMANENT WORK AREA, READJUST
*                                       POINTER TO THE BEGINNING OF
*                                       THIS WORK AREA AND GO TO MOUNT
*                                       THE FROM VOLUME
         AR    M5,ACCO
         ST    M5,IEHMVV10
         B     MTFROM
MTCVOL   DS    0H             ENTRY POINT FOR MOUNTING CONTROL VOLUME
*                             WHEN CVOL IS SPECIFIED
         L     PARAM,IEHMVV24           GET PNTR TO CVOL LIST
         MVI   IEHMVV00+4,X'90'         SET UP INDICATOR
         MVI   IEHMVV00+400,X'00'       SET CODE FOR VOLUME MOUNTING
*                                       ROUTINE TO RETURN HERE
         BAL   RETURN,CALLMT            GO TO VOLUME MOUNTER
RTN100   DS    0H             RETURN IS HERE FROM VOLUME MOUNTER WITH
*                             RETURN CODES IN REGISTER 15 AS FOLLOWS
*
*                             0 =  VOLUME NOT MOUNTED
*                             4 =  VOLUME MOUNTED
         B     TETMTR(LINK)
TETMTR   B     BADMT
         TM    IEHMVV20,CATALOG         CATALOG ;UNCTION
     BO   CVOLCAT
         B     GOLO                    READJUST PTR TO WORKAREA  S21042
*                                       INFORMATION FOR NEXT DATA SET
*                                       TO BE MOVED
MTFROM   DS    0H             ENTRY POINT FOR MOUNTING FROM VOLUME
         L     PARAM,IEHMVV22           GET PNTR TO FROM VOLUME LIST
         MVI   IEHMVV00+4,X'90'         SET UP INDICATOR
         MVI   IEHMVV00+400,X'04'       SET CODE FOR VOLUME MOUNTER TO
*                                       TO RETURN HERE
         BAL   RETURN,CALLMT            GO TO VOLUME MOUNTER
RTN200   DS    0H             RETURN FROM VOLUME MOUNTER HERE
*                             RETURN CODES ARE
*
*                             0 = VOLUME NOT MOUNTED
*                             4 = VOLUME MOUNTED
         B     TESTMTR(LINK)            MOUNT OK
TESTMTR  B     BADMT                    NO
         ST    PARAM,IEHMVV30+12        IF MOUNT OK, SAVE POINTER TO
*                                       FROM DDNAME RETURNED BY VOLUME
*                                       MOUNTER
         MVC   IEHMVV22+4(4),IEHMVV22   UPDATE ACTIVE FROM VOL LIST
         B     IEHMVRSP                 PNTR AND RETURN TO CHECK FOR
*                                       COPY OPERATION
BADMT    DS    0H             ENTRY POINT FOR ABORTING REQUEST IF
*                             VOLUME NOT MOUNTED
         MVI   IEHMVV61,CODE08          SET MSG CODE UNABLE TO MOUNT
*                                       FROM VOLUME AND ABORT THE
*                                       REQUEST
         L     LINK,PREAB
         BR    LINK
LOMO     MVC   0(1,M5),IEHMVV00+18
CVOLCAT  DS    0H             ENTRY POINT FOR UPDATING THE FROM VOLUME
*                             LIST POINTER FOR A CATALOG MOVE REQUEST
    MVC   IEHMVV22(4),IEHMVV24
         B     MTFROM                   RETURN TO MOUNT FROM VOLUME
SYSCAT   DS    0H             ENTRY POINT FOR CHECKING IF THE SYSTEM
*                             RESIDENCE VOLUME IS MOUNTED
         L     WORK2,COMTAB             GET POINTER TO THE CVT
         L     WORK2,40(WORK2)          AND POINTER TO THE UCB TABLE
*                                       OF ADDRESSES
*                             AT THIS POINT THE UCB TABLE IS SEARCHED
*                             FOR THE SYSTEM RESIDENCE UCB. IF NOT
*                             FOUND, THE STEP IS ABORTED. IF FOUND,
*                             DEVICE CLASS AND VOLUME INFORMATION ARE
*                             MOVED FROM THE UCB TO THE PERMANENT
*                             WORK AREA AND CONTROL IS RETURNED TO
*                             MOUNT SYSTEM RESIDENCE AS THE FROM VOLUME
VON      ICM   WORK3,3,0(WORK2)         GET UCB PTR            @ZM30153
         N     WORK3,FOXES              ZERO LEFT HALF OF REG  @ZM30153
         C     WORK3,FOXES              END OF UCB TABLE?      @ZM30153
         BE    BADMT                    YES. ABORT
         TM    3(WORK3),SYSRES          NO. IS THIS THE SYS RES UCB
         BO    VFIND                    YES
NNVV     DS    0H
         LA    WORK2,2(WORK2)           NO.INCREMENT PNTR TO UCB TABLE
         B     VON                      AND CONTINUE SEARCH
VFIND    DS    0H
         CLI   18(WORK3),DASD           IS DEVICE CLASS DIRECT ACCESS
*                             IF NO, RETURN TO UCB TABLE SEARCH. IF YES
*                             MOVE DEVICE CLASS AND VOLUME SERIAL
*                             NUMBER FROM THE UCB TO THE PERMANET WORK
*                             AREA, UPDATE THE ACTIVE FROM VOL LIST
*                             PNTR AND THE PERMANENT WORK AREA PNTR
*                             AND RETURN TO MOUNT THE FROM VOLUME
   BNE  NNVV
    L    ACCE,IEHMVV10
    LA   ACCE,4(ACCE)
     XC    10(2,ACCE),10(ACCE)
     MVC   0(4,ACCE),16(WORK3)
       MVC   4(6,ACCE),28(WORK3)
    ST    ACCE,IEHMVV22
    LA   ACCO,1
         STC   ACCO,IEHMVV22
   MVC    IEHMVV22+4(4),IEHMVV22
     LA   ACCO,12(ACCE,0)
    ST   ACCO,IEHMVV10
     B    MTFROM
IEHMVEEJ DS    0H             ENTRY POINT FOR MOUNTING THE TO VOLUME
         L     PARAM,IEHMVV23+4         GET PNTR TO ACTIVE TO VOL
         MVI   IEHMVV00+4,X'B0'         INDICATE TO VOLUME MOUNTER THAT
*                                       OLD MOUNTS ARE VALID
         MVI   IEHMVV00+400,X'08'       SET CODE FOR VOLUME MOUNTER TO
*                                       RETURN HERE
         BAL   RETURN,CALLMT            GO TO VOLUME MOUNTER
RTN300   DS    0H             RETURN HERE FORM VOLUME MOUNTER
*                             RETURN CODES ARE
*
*                             0 =  TO VOLUME HAS NOT BEEN MOUNTED
*                             4 =  TO VOLUME MOUNTED
         B     TOTST(LINK)
TOTST    DS    0H
         B     BADMTTO                  VOLUME NOT MOUNTED, ABORT
         ST    PARAM,IEHMVV31+8         YES.SAVE PNTR TO THE DDNAME
*                                       RETURNED BY VOLUME MOUNT AND
         TM    IEHMVV20+5,X'08'  SHALL A DUMMY FILE BE WRITTEN @ZA28250
         BO    DUMMY                    YES, BRANCH BACK       @ZA28250
         B     IEHMVREJ                 EXIT FROM THE PROGRAM
BADMTTO  DS    0H
         MVI   IEHMVV61,CODE26          SET MSG CODE UNABLE TO MOUNT
*                                       TO VOLUME AND ABORT REQUEST
         L     LINK,PREAB
         BR    LINK
CALLMT   DS    0H             ENTRY POINT FOR SETTING UP VOLUME
*                             MOUNTING REQUEST AND GIVING CONTROL TO
*                             IEHMVXSF WHICH IS THE VOLUME MOUNTING
*                             ROUTINE
*
*                             REGISTER 1 CONTAINS A POINTER TO THE
*                             VOLUME LIST WHICH THE VOLUME MOUNTING
*                             ROUTINE USES TO DETERMINE WHAT VOLUME TO
*                             MOUNT.
*
*                             THE VOLUME MOUNTING REQUEST IS BUILT BY
*                             THIS ROUTINE AT IEHMVV00
*
*                             IEHMVSSZ CONTAINS EXTERNAL REFERENCES TO
*                             THIS ROUTINE
*                             IEHMVSSZ USES THIS ROUTINE TO MOUNT THE
*                             FROM AND TO VOLUMES WHEN A VOLUME MOVE
*                             OPERATION IS REQUESTED
*
*                             PARAMETERS PASSED TO IEHMVXSF ARE
*
*                             REGISTER 3     PNTR TO THE VOLUME
*                                            MOUNTING REQUEST
*                             REGISTER 4     RETURN INDICATOR 'SZ'
*                                            SPECIFIES THAT IEHMVXSF
*                             IS TO GIVE CONTROL TO IEHMVSSZ AFTER THE
*                             VOLUME HAS BEEN MOUNTED
*                             IF THE VOLUME HAS BEEN MOUNTED, IEHMVSSZ
*                             RETURNS CONTROL TO THIS MODULE AT
*                             ALTERNATE ENTRY POINT, RTNVM.
         DROP  BASE
         BALR  LINK,ZERO
         USING *,LINK
         MVC   IEHMVV00+5(3),IEHMVV50+5 SET UP PNTR TO INTERNAL TABLE
         MVC   IEHMVV00+10(1),IEHMVV50+4
         MVI   IEHMVV00+11,X'01'        SET UP NUMBER OF REQUESTS
         MVC   IEHMVV00+12(19),0(PARAM)  SET UP DEVICE CLASS       DT0I
*                                      AND VOLUME                  DT0I
*                                       SERIAL NUMBER
         LA    ACCO,IEHMVV00            SET UP PARAMETERS, PNTR TO
         L     BASE,DOG                 VOLUME MOUNTING REQUEST AND
*                                       SUFFIX OF MODULE TO BE GIVEN
*                                       CONTROL BY IEHMVXSF
         TM    IEHMVV00+400,X'F0'
         BM    OVERPOST
         IEHPOST (14,1),T
OVERPOST DS    0H             PASS CONTROL TO IEHMVXSF VIA XCTL
         BALR  M6,ZERO
         USING *,M6
         DROP  LINK
    XCTL  EP=IEHMVXSF
         DROP  M6
         USING *,RETURN
         EJECT
RTNVM    DS    0H             ALTERNATE ENTRY POINT FOR THIS MODULE
*                             GIVEN CONTROL BY IEHMVSSZ
*                             THIS ROUTINE TESTS FOR GOOD VOLUME
*                             MOUNTING OPERATION
*
*                             IT RETURNS A CODE IN REGISTER 15 TO THE
*                             ROUTINE WHICH REQUESTED THE VOLUME
*                             MOUNTING AS FOLLOWS
*
*                             0 = VOLUME NOT MOUNTED
*                             4 = VOLUME MOUNTED
*
*                             IF THE VOLUME WAS MOUNTED, REGISTER 1
*                             CONTAINS A POINTER TO THE DDNAME USED
*
*                             THIS ROUTINE DETERMINES WHICH MODULE IS
*                             TO RECEIVE CONTROL NEXT ON THE BASIS OF
*                             A CODE PLACED AT IEHMVV00+400 BY THE
*                             ROUTINE WHICH REQUESTED THE VOLUME
*                             MOUNTING.
         SR    LINK,LINK                SETUP RETURN CODE 0
         TM    IEHMVV00+4,X'01'         WAS VOLUME MOUNTED
         BZ    NOMOUNT                  NO
         LA    LINK,4                   YES.RETURN CODE 4 GOOD MOUNT
         L     PARAM,IEHMVV00+4         GET PNTR TO INTERNAL TABLE
         LA    PARAM,0(PARAM)           ZERO HIGH ORDER BYTE
         AH    PARAM,IEHMVV00+22        ADJUST PNTR TO RELATIVE TABLE
*                                       ADDRESS WITHIN THE INTERNAL TAB
         L     PARAM,0(PARAM)           GET PNTR TO DDNAME
NOMOUNT  DS    0H
         TM    IEHMVV00+400,X'F0'
         L     BASE,ABSE
         BM    OVERPRE
         DROP  RETURN
         USING IEHMVESV,BASE
         IEHPRE (14,1),T
OVERPRE  SR    RETURN,RETURN
         IC    RETURN,IEHMVV00+400      PICK UP VALUE TO BE USED IN
*                                       COMPUTING CORRECT RETURN
*                                       LOCATION. VALUES ARE AS
*                                       INDICATED BELOW.
         B     DDRTN(RETURN)
DDRTN    B     RTN100              00 = RETURN TO SSV
         B     RTN200              04 = RETURN TO SSV
         B     RTN300              08 = RETURN TO SSV
         B     RTN100              12 = RETURN TO SSV
         B     AB101               16 = RETURN TO SSZ
         L     RETURN,AB200        20 = RETURN TO SSZ
         BR    RETURN
AB101    L     RETURN,AB100
         BR    RETURN
         EJECT
*                                      DC AND DS STATEMENTS      S21042
*
AB100    DC    A(KK1)         EXTERNAL REFERENCE TO IEHMVSSZ
AB200    DC    A(KK2)         EXTERNAL REFERENCE TO IEHMVSSZ
MNOP     DC    A(COPYRTN)     EXTERNAL REFERENCE TO IEHMVSSZ
ABSE     DC    A(IEHMVESV)    ENTRY POINT FOR THIS MODULE
PREAB    DC    A(PREABORT)    EXTERNAL REFERENCE TO IEHMVSSZ
         DS    0F
FF       DC    4X'FF'
FOXES    DC    X'0000FFFF'              BIT SETTINGS TO        @ZM30153
*                                       CLEAR REGISTER         @ZM30153
DOG      DC    C'  SZ'
INFO     DS    0CL20                   +                         S21042
         DS    CL10                    +DEVICE TYPE              S21042
TRCYL    DS    CL2                     +CHARACTERISTICS          S21042
         DS    CL8                     +                         S21042
CCHHR    DS    CL5                     ABS ADDR OF 'FROM' DSCB   S21042
         EJECT
ITHEAD   DSECT
GENERICC DS    CL1                      GENERIC NAME COUNT
GENERICP EQU   GENERICC                 POINTER TO GENERIC DDNAMES
         DS    CL3
INDICATO DS    CL1                      INDICATOR BYTE
*
MOUNT    EQU   X'80'
SELECT   EQU   X'40'
OLDVALID EQU   X'20'
TABLE    EQU   X'10'
YESMOUNT EQU   X'01'
*
         DS    CL3
PTRINTAB EQU   INDICATO
LENINTAB DS    CL2
CNTINTAB DS    CL1
CNTVMR   DS    CL1
         TITLE 'DSCB FORMAT'
DSCBDSEC DSECT
         IECSDSL1 (1)
         TITLE 'MOVE-COPY COMMUNICATIONS TABLE'
         IEHMVV
         ORG   IEHMVV00
         IEFJFCBN
         TITLE 'DCB FORMAT'
         DCBD  DSORG=(PS,IS,DA,PO)
         END
