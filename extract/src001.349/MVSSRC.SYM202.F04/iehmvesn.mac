 TITLE 'IEHMVSSN-WRAPUP,CLOSE OF FROM,TO DSETS--IEHMOVE LOAD MOD VESN'
*TITLE--IEHMVSSN-WRAPUP,CLOSE OF FROM,TO DSETS--IEHMOVE LOAD MOD VESN
*FUNCTION/OPERATION: TO COMPLETE THE JOB OF MOVING OR COPYING A DATA  *
*SET, IEHMVSSN FIRST CLOSES THE 'FROM' AND 'TO' DATA SETS AND THEN    *
*PASSES CONTROL TO ANOTHER WRAP UP ROUTINE DEPENDING UPON THE TYPE OF *
*OPERATION PERFORMED AND UPON THE RESULTS OF THAT OPERATION           *
*ENTRY POINTS: IEHMVESN                                               *
*INPUT: NONE                                                          *
*OUTPUT: NONE                                                         *
*EXTERNAL ROUTINES: IEHMVSSU                                          *
*EXITS - NORMAL  IEHMVESP, IEHMVESQ,                                  *
*        ERRORS: IEHMVESO, IEHMVSSK                                   *
*TABLES/WORK AREAS: IEHMVV00                                          *
*ATTRIBUTES: REENTRANT                                                *
*********************************************************************
**
**                            IEHMVSSN
**
*********************************************************************
*
IEHMVSSN CSECT                                                     8650
*A008366-008382                                                @ZA01745
*D008366-008381                                                @ZA01745
*A009050-009260                                                 YA01457
*D009050-009300                                                 YA01457
*A032140,083800                                                  S21042
*A008900,014200,014800,D015000-015200,A015950,D016000            A43752
*A021400,D021500-021600,A030280,030520,032000,D032200-038600     A43752
*C038800,A083310                                                 A43752
*A009300,D009350                                                 A41754
*C034500,034560                                                  A38758
*A044600                                                          19030
*D034100-034300,034700,035100                                    A26597
*A023500                                                        YL026VC
*C030300                                                        YL026VC
*C2000,41600                                                     Y02918
*D41800-42000,42800,47800-50000                                  Y02918
*A025100-025200,028000-029004,030040-030060                    @Z40CSJH
*A041300-041320,047800-047900,026600-026980,028000-029004      @Z40CSJH
*A083370                                                       @Z40CSJH
A0       EQU   0
A1       EQU   1
A2       EQU   2
A3       EQU   3
A4       EQU   4
A5       EQU   5
A6       EQU   6
A7       EQU   7
A8       EQU   8
A9       EQU   9
A10      EQU   10
A11      EQU   11
A12      EQU   12
A13      EQU   13
A14      EQU   14
A15      EQU   15
IEHMVESN SAVE  (2,12),T,ESN-WRAP-UP---
         ENTRY IEHMVESN
         EXTRN IEHMVMSN
         LR    A9,A15                  SET BASE REGISTER
         USING IEHMVESN,A9
         USING  IEHMVV,A12
         IEHPRE ,TFC
* THIS RTN FINDS AND SAVES THE VOL SER NBR AND FILE SEQ NBR      A43752
* FOR THE TO-VOLUMELIST ROUTINE.                                 A43752
* FOR OPEN TO-DATA SETS THE UCB ADDRESS IS FOUND IN THE          A43752
* LAST EXTENTDESCRIPTION OF THE DEB                              A43752
* FOR CLOSED DATASETS OR DATASETS WITHOUT A DCB THE UCB ADDRESS  A43752
* IS FOUND IN THE TIOT                                           A43752
* ALWAYS THE VOL SER NBR IS STORED IN THE COMMUNICATIONS AREA    A43752
* AT IEHMVV82+26                                                 A43752
* IN SOME CASES THE VOL SER NBR HAS BEEN SAVED IN IEHMVV82+26    A43752
* EARLIER ( I.E. BY MODULES IEHMVSTA OR IEHMVETG )               A43752
         CLI   IEHMVV72+11,X'FF'       UL TRACK MISSING(SSX)     A43752
         BE    TIOTUCB                 YES GET UCB ADDR VIA TIOT A43752
         TM    IEHMVV20+4,X'08'        MODEL DSCB                A43752
         BO    TIOTUCB                                           A43752
         L     A2,IEHMVV31             GET TO DCB ADDR           A43752
         TM    48(A2),X'10'            IS THE DCB OPEN           A43752
         BO    DEBUCB                  YES GET UCB ADDR VIA DEB  A43752
         TM    IEHMVV82+24,X'80'       VOL FROM STA OR ETG       A43752
         BO    CONTINUE                YES VOL SER ALREADY FOUND A43752
TIOTUCB  DS    0H                      NO GET UCB VIA TIOT       A43752
         L     A4,IEHMVV31+8           DDNAME IN TIOT            A43752
         LA    A4,12(A4)               UCB ADDR IN TIOT          A43752
         B     SAVEUCB                 SAVE UCB ADDRESS          A43752
DEBUCB   DS    0H                                                A43752
         L     A4,44(A2)               DEB ADDR                  A43752
         SR    A2,A2                   CLEAR FOR INSERT          A43752
         IC    A2,16(A4)               NBR OF EXTENTS            A43752
         TM    28(A4),X'04'            DA DEVICE                 A43752
         BO    OFFS16                  YES FIND LAST EXTENT      A43752
         LA    A4,28(A4)               SCAN THE EXTENTS   T      A43752
NEXTEXT1 LA    A4,4(A4)                JUMP TO NEXT EXTENT       A43752
         BCT   A2,NEXTEXT1             SCAN FURTHER              A43752
         B     SAVEUCB                 STORE UCB ADDR            A43752
OFFS16   DS    0H                                                A43752
         LA    A4,16(A4)               JUMP TO NEXT EXTENT       A43752
NEXTEXT2 LA    A4,16(A4)               JUMP                      A43752
         BCT   A2,NEXTEXT2             SCAN FURTHER              A43752
SAVEUCB  L     A4,0(A4)                GET UCB ADDR              A43752
         LR    A3,A4                   BASE THE UCB              A43752
         USING IEFUCBOB,A3             WITH REG 3                A43752
         L     A4,IEHMVV23+4           ADDRESS OF ACTIVE       @ZA01745
*                                      TO VOLUME               @ZA01745
         MVC   IEHMVV82+26(6),4(A4)    SAVE VOL SER NBR        @ZA01745
         CLI   3(A4),X'05'             2321 DEVICE             @ZA01745
         BE    CONTINUE                YES                     @ZA01745
STOREVOL MVC   IEHMVV82+26(6),SRTEVOLI                           A43752
         MVC   IEHMVV82+24(2),SRTEFSEQ SAVE LOGICAL FILE SEQ NBR A43752
CONTINUE NI    IEHMVV82+24,X'7F'       CLEAR THE SWITCH          A43752
         TM    IEHMVV20+2,MIDABRT  TEST FOR MID ABORT BIT ON     PTM504
         BZ    *+14                 IF NOT, BYPASS NEXT 2 INSTR  PTM504
         MVI   UDCBIHLE,DEACTIVE    IF SO, DEACTIVATE ALL USER   PTM504
         MVC   UDCBIHLE+1(15),UDCBIHLE  LABEL EXITS SINCE ONLY   PTM504
*                                  CODING FOR OTLE EXISTS IN ESN PTM504
         TM    IEHMVV20+4,X'08'        IS MODEL DSCB SWITCH ON     2695
         BC    1,NOFREEA     SEE IF FROM DCB OPEN                A25571
         CLI   UDCBITLE,DEACTIVE       IS ITLE INACTIVE            UL0H
         BE    SETLABSW                YES, CONTINUE               UL0H
         MVC   UDCBOTLE(4),XXOTLE      NO, SET UP OTLE LIST ADDR   UL0H
         MVI  UDCBITLE,DEACTIVE  DEACTIVATE INPUT TRAILER LABEL  A21645
SETLABSW DS    0H                                                  UL0H
         MVC   IEHMVV72+4(4),IEHMVV72  INITIALIZE 1ST LABEL PTR    UL0H
         CLI   IEHMVV72+14,X'FF'       DID EOV REQUEST OUTPUT      UL0H
         BNE   WRAPUP                  NO, CLOSE DATA SETS         UL0H
*                                                                  UL0H
* OUTPUT MESSAGE - NO USER LABELS MOVED/COPIED. NO LABEL TRACK     UL0H
*                                                                  UL0H
         LA    A8,IEHMVV00+1           LOCATION FOR MESSAGE STORE  UL0H
         LA    A15,20                  GET MESSAGE CONSTANT        UL0H
         ST    A14,SAVE14              SAVE REG14                  UL0H
         BAL   A14,MSGCLEAR            CLEAR AREA, MOVE IN MSG     UL0H
         L     A14,SAVE14              RESTORE REG 14              UL0H
         BAL   A2,LINEPR               GO PRINT MESSAGE            UL0H
WRAPUP   DS    0H                                                  UL0H
         L     A2,IEHMVV30             LOAD ADDR OF 'FROM' DCB
         CLOSE ((A2))                  CLOSE THE 'FROM' DATA SET
         CLI   IEHMVV72+11,X'FF'       NO U.L. TRK FLG SET BY SSX  UL0H
         BE    CHECK                   YES, SKIP CLOSE OF 'TO' DATAUL0H
         TM    IEHMVV20+4,X'08'   IS IT A MODEL DSCB             A25571
         BO    NOFREE         YES, BYPASS CLOSE OF TO DATA SET   A25571
*                                      SET - WAS NEVER OPENED      UL0H
         L     A2,IEHMVV31             LOAD ADDR OF 'TO' DCB
         CLI   17(2),X'81'             IS TO VOLUME 2400        YA01457
         BE    TEST                     YES , GO TO TEST        YA01457
         CLI   17(2),X'83'             IS TO VOLUME 3420        YA01457
         BNE   NOLEAVE                  NO , GO TO NOLEAVE      YA01457
TEST     TM    IEHMVV20,VOLUME         MOVE/COPY VOLUME         YA01457
         BO    LEAVE                    YES , GO TO LEAVE       YA01457
         TM    IEHMVV20,DSGROUP        MOVE/COPY DSGROUP        YA01457
         BO    LEAVE                    YES , GO TO LEAVE       YA01457
NOLEAVE  CLOSE ((2))                   CLOSE NO LEAVE              8650
         TM    IEHMVV82+16,X'80' BDAM DATA SET                   A41754
         BNO   CHECK                    NO CONTINUE              A41754
         NI    IEHMVV82+16,X'7F'       CLEAR THE SWITCH          A41754
         L     A1,IEHMVV82+16    YES, GET BDAM-AREA              A41754
         LA    A1,0(A1)                 CLEAR HIGH ORDER BYTE    A41754
         L     A0,IEHMVV82+20    GET SIZE OF CORE                A41754
         FREEMAIN R,LV=(0),A=(1)        RELEASE THE AREA         A41754
         B     CHECK                                               8650
NOFREEA  TM    IEHMVV10-4,FROMOP                                PTM2138
         BZ    NOFREE                                           PTM2138
         NI    IEHMVV10-4,X'7F'                                 PTM2138
         B     WRAPUP                                           PTM2138
LEAVE    CLOSE ((2),LEAVE)             CLOSE WITH LEAVE            8650
CHECK    CLI   IEHMVV74+4,X'FF'         I/O ERR IN U.L. EXIT RTN   UL0H
         BE    IOERRMSG                 YES, TELL USER             UL0H
ERMSGRET DS    0H                                                  UL0H
         LA    A10,IEHMVV00+8          SET UP ADDRESSIBILITY TO    UL0H
         USING IEFJFCBN,A10            THE JFCB                    UL0H
         MVI   UDCBIHLE,DEACTIVE                                   UL0H
         MVI   UDCBOHLE,DEACTIVE                                   UL0H
         MVI   UDCBITLE,DEACTIVE                                   UL0H
         MVI   UDCBOTLE,DEACTIVE                                   UL0H
         NI    JFCBLTYP,X'F7'           CLEAR SUL INDICATOR SET AT UL0H
         DROP  A10
*                                       U.L. TRK ALLOCATION TIME   UL0H
         TM    IEHMVV20+1,UNLOAD        UNLOAD                     UL0H
*                                          IF YES FREE BUFFERS
         BZ    NOFREE                     IF NOT ---
         TM    IEHMVV20+1,LOAD          IS THIS A LOAD/UNLOAD
         BO    NOFREE
         L     A1,IEHMVV31             LOAD ADDR OF TO DCB
         FREEPOOL  (1)
NOFREE   DS    0H
***********************************************************************
**        V O L U M E   L I S T   F O R M A T                         *
***********************************************************************
***********************************************************************
**                      **                              **            *
** DEVICE  TYPE         **   VOLUME SERIAL NUMBER       ** SEQUENCE # *
**  (4 BYTES)           **       (6 BYTES)              **  (2 BYTES) *
**                      **                              **            *
***********************************************************************
***********************************************************************
**
**
********************************************************************
**
**       HANDLES THE ESTABLISHMENT OF A CORRECT ACTIVE VOL PTR
**
********************************************************************
         SR    A8,A8                                             A43752
         SR    A4,A4
         IC    A4,IEHMVV23+4      LOAD NO OF ACTIVE VOLUMES
         L     A1,IEHMVV23+4      ADDR OF ACTIVE VOL ID
         NI    IEHMVV20+4,X'FD'        CLEAR VOLSWITCH INDIC     A43752
*
*
*
CHECKVOL CLC   IEHMVV82+26(6),4(A1)    VOL SWITCH OCCURRED       A43752
         BE    ACTVOLOK                NO                        A43752
*
*
         OI    IEHMVV20+4,X'02'         INDICATE VOLUMESWITCH    A43752
         LA    A8,1(A8)                 COUNT NUMBER OF SWITCHES A43752
         LA    A1,OFFSVL(A1)            BUMP ACTIVE POINTER      A43752
         BCT   A4,CHECKVOL
         LA    A4,OFFSVL                VOLUMELIST ENTRYLENGTH   A43752
         SR    A1,A4              BACK UP ACTIVE PTR WITHIN LIST
         LA    A4,1                    SET VOL CNT TO 1          A43752
         BCTR  A8,0                    REDUCE NBR OF VOL'S IN MSGA43752
         LTR   A8,A8                   ONLY ONE ACT TO VOL       A43752
         BNZ   *+8                     NO CONTINUE               A43752
         NI    IEHMVV20+4,X'FD'        YES  DON'T HANDLE VOLSW   A43752
         MVC   4(6,A1),IEHMVV82+26     MOVE IN VOL SER NBR       A43752
ONMAIN   XC    SEQ(2,A1),SEQ(A1)       SEQ NBR ZERO              A43752
         CLI   2(A1),X'20'             TO DEVICE DA              A43752
         BE    ACTVOLOK                YES CONTINUE              A43752
         MVC   SEQ(2,A1),IEHMVV82+24   USE LOG FILE SEQ NBR      A43752
ACTVOLOK ST    A1,IEHMVV23+4      STORE PTR TO ACTIVE PTR
         STC   A4,IEHMVV23+4      STORE NO. OF VOLUMES IN LIST
         STC   A8,IEHMVV23             SAVE NBR OF VOLSWITCHES   A43752
         TM    IEHMVV20,DSGROUP         TEST FOR GROUP OPERATION
         BO    UPSEQ                      IF SO ---
         TM    IEHMVV20,VOLUME          TEST FOR VOLUME OPERATION
         BO    UPSEQ                     IF SO ---
         B     SEQON
UPSEQ    L     A1,IEHMVV23+4           LOAD ADDR OF ACTIVE VOL ID
         CLI   2(A1),TAPEOUT            IS OUTPUT ON TAPE
********************************************************************
**
**       HANDLES UPING THE SEQ NO IN THE ACTIVE VOL LIST FOR TAPE OUT
**
********************************************************************
         BNE   SEQON                     IF NOT ---
         TM    IEHMVV20+4,X'02'         VOLUME SWITCH            A43752
         BNO   CONTIN1                  NO CONTINUE              A43752
         SR    A7,A7                    YES GET FILE SEQ NBR     A43752
MOREVOL  LA    A7,OFFSVL(A7)                                     A43752
         BCT   A8,MOREVOL               FIND START OF LIST       A43752
         LR    A5,A1                    ADDR ACTIVE VOLUME       A43752
         SR    A5,A7                    ADDR START OF LIST       A43752
         MVC   DTCRT(2),SEQ(A5)         GET SEQ NUMBER           A43752
         B     CONTIN2                                           A43752
CONTIN1  MVC   DTCRT(2),SEQ(A1)         GET SEQ NUMBER           A43752
CONTIN2  LH    A2,DTCRT                                          A43752
         LA    A2,1(A2)                BUMP SEQ NO BY ONE
         LA    A3,1
         CR    A3,A2              WAS SEQ UPED TO 1
         BNE   *+8                    IF NOT --- DONE
         LA    A2,1(A2)             OTHERWISE BUMP IT TO 2
         STH   A2,DTCRT                 REPLACE THE SEQUENCE       DT0I
         MVC   SEQ(2,A1),DTCRT                NUMBER               DT0I
SEQON    DS    0H
********************************************************************
**
**       HANDLES THE CONSTRUCTION OF A TO CVOL PTR IF ONE DID NOT EXIST
**
**        LINES 023000-029179 WERE REACTIVATED IN              @Z40CSJH
**        SUPPORT OF THE MVS EXTENDED CVOL FUNCTION            @Z40CSJH
********************************************************************
         TM    IEHMVV20+1,CVOL         WAS CVOL SPECIFIED
         BO    GOTCVOL                      IF SO ---
         TM    IEHMVV20+5,X'20'        DSGRP(NAME) SPECIFIED   @Z40CSJH
         BO    GOTCVOL                 BR IF YES               @Z40CSJH
         TM    IEHMVV20,X'01'          FROM VOL SPECIFIED      @Z40CSJH
         BO    GOTCVOL                 BR IF YES               @Z40CSJH
         TM    IEHMVV20,X'20'          DSNAME SPECIFIED        @Z40CSJH
         BO    GOTCVOL                 YES-BYPASS SYSRES       @Z40CSJH
         TM    IEHMVV20,X'08'          PDS SPECIFIED           @Z40CSJH
         BO    GOTCVOL                 YES-BYPASS SYSRES       @Z40CSJH
         L     WORK2,CVTSTRT            OTHERWISE -- FIND SYSRES UCB
         L     WORK2,CVTILK2(WORK2)       TO GET ASSUMED VOLUME ID
VON      ICM   WORK3,3,0(WORK2)        GET UCB @               @Z40CSJH
         N     WORK3,CLEARMSK          SAVE 16 BITS            @Z40CSJH
         TM    0(WORK2),X'FF'          IS IT LAST PTR          @Z40CSJH
         BC    1,GOTCVOL               BRANCH IF YES           @Z40CSJH
         LTR   WORK3,WORK3             CHECK FOR PTR V 0
         BZ    NOTAUCB
         TM    UCBTBYT3,DAUCB          IS THIS UCB FOR DA
         BZ    NOTAUCB
         TM    SRTESTAT,SYSRUCB        IS THIS A UCB FOR SYSRES
         BO    VFIND
NOTAUCB  DS    0H
         LA    WORK2,2(WORK2)          BUMP THE UCB PTR TABLE PTR
         B     VON
VFIND    MVC   IEHMVV24(4),IEHMVV10    SET CVOL LIST PTR
         L     WORK2,IEHMVV10          LOAD ADDR OF PERM WK AREA
         MVC   0(4,WORK2),UCBTYP       MOVE DEVICE TYPE
         MVC   4(6,WORK2),SRTEVOLI     MOVE VOLUME ID
         DROP  A3
         LA    WORK2,12(WORK2)         BUMP WK AREA PTR BY AMOUNT OF
         ST    WORK2,IEHMVV10              CORE USED AND STOR
         OI    IEHMVV20+1,CVOL          TURN ON CVOL BIT
         B     GOTCVOL
*******************************************************************2695
*                                                                 *2695
* VSSX HAS JUST ALLOCATED A MODEL DSCB.  NO DCB WAS CREATED, AND  *2695
* THUS VESN MUST BYPASS READING JFCB TO GET VOLID OF 'TO' VOLUME. *2695
*                                                                 *2695
*******************************************************************2695
*                                                                  UL0H
*                                O R                               UL0H
*                                                                  UL0H
*******************************************************************UL0H
*                                                                  UL0H
* VESN WAS ENTERED FROM VSSX.  VSSX FOUND USER LABELS IN CORE,    *UL0H
* BUT NO USER LABEL TRACK WAS ALLOCATED FOR LABELS ON THE 'TO'    *UL0H
* DATA SET.  A DCB WAS THEREFORE NEITHER CREATED OR OPENED FOR    *UL0H
* THE 'TO' DATA SET, AND READING OF THE JFCB MUST BE BYPASSED.    *UL0H
*                                                                  UL0H
*******************************************************************UL0H
         DS    0F
CLEARMSK DC    X'0000FFFF'                                     @Z40CSJH
GOTCVOL  DS    0H                                              @Z40CSJH
***********************************************************************
*
** HANDLES THE BUILDING OF A LIST OF VOLS USED BY THE DS JUST MOVED
*
***********************************************************************
LISTVOL  L     A3,IEHMVV10              GET ADDR PERM WORKAREA  YL026VC
         L     A6,IEHMVV23+4            GET ADDR OF VOLUMELIST   A43752
         TM    IEHMVV20+4,X'08'        MODEL DSCB INDICATOR ON     2695
         BC    1,NORDJFCB              YES, BYPASS READ OF JFCB    2695
         CLI   IEHMVV72+11,X'FF'       DID WE COME HERE FROM VSSX  UL0H
         BE    NORDJFCB                YES, SKIP READ OF JFCB OF   UL0H
*                                      'TO' VOL. IT HAS NO DCB AND UL0H
*                                      WAS NEVER OEPNED.           UL0H
         LA    A1,IEHMVV00+8      ADDR TO READ JFCB INTO
         ST    A1,IEHMVV00        BUILD EXIT LIST FOR OPEN
         MVI   IEHMVV00,ALLOW           INDICATES CORE SET FOR EXT LST
         L     A1,IEHMVV31             ADDR OF TO DCB
         LA    A2,IEHMVV00        ADDR OF EXIT LIST
         ST    A2,DCBEXLST(A1)          STORE EXIT LIST ADDR INTO DCB
         LR    A2,A1
         RDJFCB ((A2))
NORDJFCB LA    A10,IEHMVV00+8           SET UP ADDRESSABILITY    A43752
         USING IEFJFCBN,A10             FOR THE JFCB             A43752
         MVC   IEHMVV82+4(3),JFCBDSL1  MOVE DSCBTTR TO SAVEAREA  S21042
         TM    IEHMVV20+4,X'02'         VOLUME SWITCH OCCURRED   A43752
         BO    VOLSWTCH                 YES MORE ENTRIES TO MAKE A43752
         XC    12(2,A3),12(A3)          NO CLEAR FILE SEQ NBR    A43752
         MVC   2(10,A3),0(A6)           COPY VOLLIST ENTRY       A43752
         LA    A4,1                                              A43752
         STH   A4,0(A3)                 PWA COUNT IS 1           A43752
         CLI   2(A6),X'20'              TOVOL DA                 A43752
         BE    TESTBITS                 YES FILE SEQ NBR ZERO    A43752
         MVC   12(2,A3),JFCBFLSQ        NO GET FILE SEQ NBR      A43752
         B     CONTIN3                                           A43752
VOLSWTCH SR    A7,A7                                             A43752
         SR    A8,A8                                             A43752
         IC    A8,IEHMVV23              GET NBR OF SWITCHES      A43752
NEXTVOL  LA    A7,OFFSVL(A7)                                     A43752
         BCT   A8,NEXTVOL                                        A43752
         SR    A6,A7                    POINT TO FIRST VOLUME    A43752
         IC    A8,IEHMVV23              GET NBR OF SWITCHES      A43752
         LA    A8,1(A8)                 NBR OF VOLUMES USED      A43752
         STH   A8,0(A3)                 STORE PWA COUNT          A43752
PWALOOP  MVC   2(10,A3),0(A6)           COPY VOLLIST ENTRY       A43752
         XC    12(2,A3),12(A3)          CLEAR FILE SEQ NBR       A43752
         LA    A6,OFFSVL(A6)            BUMP LIST POINTER        A43752
         LA    A3,12(A3)                BUMP PWA POINTER         A43752
         BCT   A8,PWALOOP                                        A43752
         L     A3,IEHMVV10             POINT TO FIRST VOL        A43752
         CLI   4(A3),X'20'             TO DA                     A43752
         BE    TESTBITS                YES ALL SEQ NBRS ZERO     A43752
         MVC   12(2,A3),JFCBFLSQ        GIVE FILE SEQ NBR        A43752
CONTIN3  TM    JFCBLTYP,X'0A'          UNLABELED TAPE            A43752
         BNZ   TESTBITS                NO  IT'S SL OR SUL        A43752
         DROP  A10                                               A43752
         MVI   IEHMVV74+12,X'FF'  TURN NL TAPE SWITCH ON         A19476
WORK2    EQU   2
WORK3    EQU   3
TESTBITS DS    0H
         NI    IEHMVV20+4,X'FD'        SET VOLUME SWITCH OFF    A43752
         BO    PREABORT                   IF SO ---
         TM    IEHMVV20+2,MIDABRT       TEST FOR MID ABORT BIT ON
         BO    MIDMSG                     IF SO ---
         TM    IEHMVV20,MCCATLG         TEST FOR M/C CATALOG   @Z40CSJH
         BO    COPYGRP                    IF SO ---            @Z40CSJH
         TM    IEHMVV20,MORC            TEST FOR MOVE OR COPY
         BO    MOVESET                    IF A MOVE OPERATION    Y02918
         B     COPYSET                    IF NOT ---
MIDMSG   NOP   0(0)
         OI    IEHMVV41+13,X'02'   SET RET CODE = 8
         LA    A8,IEHMVV00+1       ******
         LA    A15,4                    *
         BAL   A14,MSGCLEAR             *
         BAL   A14,MSGDS                *    WRITE MESSAGE-
         LA    A15,16                   *
         BAL   A14,MSG                  *       'DS XX NOT M/C'
         BAL   A2,LINEPR           ******
         SR    A15,A15                  *                         19030
         BAL   A14,MSGVOL               *                         19030
         BAL   A2,LINEPR           ******                         19030
         B     MIDABORT
RETURN   IEHPOST ,TC
         L     14,12(0,13)             RESTORE FINAL WRAP RETURN
         TM    IEHMVV20,X'04'          TEST FOR M/C CATALOG
         BO    WRAPCAT                    IF SO ---
         XCTL  (2,12),EP=IEHMVESH       GO TO CONTINUE REST OF GROUP
WRAPCAT  TM    IEHMVV20+2,X'20'        TEST FOR END OF INPUT
         BO    END                        IF SO ---
         XCTL  (2,12),EP=IEHMVEST         IF NOT --- GO TO SCAN CARDS
END      XCTL  (2,12),EP=IEHMVESK      GO TO FINAL WRAP UP
MIDABORT XCTL  EP=IEHMVESO                           - MIDABORT *******
PREABORT OI    IEHMVV20+2,EOI           TURN ON END OF INPUT SWITCH
         B     MIDABORT
COPYSET  XCTL  EP=IEHMVESP                           - COPY SING DS ***
MOVESET  XCTL  EP=IEHMVESQ                           - MOVE SING DS ***
***********************************************************************
**       LINES 048100-050192 WERE REACTIVATED IN               @Z40CSJH
**       SUPPORT OF THE MVS EXTENDED CVOL FUNCTION             @Z40CSJH
***********************************************************************
COPYGRP  NOP   0(0)
         LA    A8,IEHMVV00+1       ******
         LA    A15,8                    *
         BAL   A14,MSGCLEAR             *
         BAL   A14,MSGDS                *
         LA    A15,12                   *    WRITE MESSAGE -
         BAL   A14,MSG                  *
         BAL   A2,LINEPR                *       'DS XX COPIED TO VOL X'
         SR    A15,A15                  *
         BAL   A14,MSGVOL               *
         BAL   A2,LINEPR           ******
         B     RETURN
*
*********************************************************************
**
**                            MESSAGE MOVER
**
**       THIS SUBROUTINE IS LINKED TO IN ORDER TO MOVE MESSAGES
**       FROM THE MESSAGE CSECT TO THE PRINT AREA (IEHMVV00)
**       THE LINKAGE IS AS FOLLOWS:          A8= LOCATION FOR MSG
**                                 A14= RETURN ADDR
**                       A15= DISPLACEMENT OF ADCON OF CORRECT MSG
**       WHEN THIS ROUTINE IS DONE A8  WILL POINT ONE SPACE PAST
**       THE MOVED MESSAGE --- ALL REGISTERS ARE TRANSPARENT
**       EXCEPT REGISTERS A1 AND A15 -- THE PRINT AREA IS CLEARED
**       IF THE INSTRUCTION 'MSGCLEAR' IS LINKED TO
**
*********************************************************************
*
MSGCLEAR MVI   IEHMVV00,BLANK           CLEAR THE PRINT AREA
         MVC   IEHMVV00+1(120),IEHMVV00
MSG      L     A1,MSGAD                 GET ADDR OF MSG CSECT
         AR    A1,A15                   ADD DISP OF CORRECT ADCON
         L     A1,0(A1)                 LOAD ADDR OF MSG-1
         IC    A15,0(A1)               LOAD LENGTH OF MSG
         EX    A15,MSGMOVE              EXECUTE MOVE
         AR    A8,A15                   CALC ADDR OF END OF MSG
         LA    A8,2(A8)                BUMP REG TO END OF MSG +1
         BR    A14                      RETURN
MSGMOVE  MVC   0(1,A8),1(A1)           MOVE MSG
*
*********************************************************************
**
**                            DATA SET NAME MOVER
**
**       THIS SUBROUTINE IS LINKED TO IN ORDER TO MOVE DATA SET
**       NAMES INTO A MESSAGE THE LINKAGE IS AS FOLLOWS:
**                                           A8= LOCATION FOR NAME
**                                 A14= RETURN ADDR
**                       A15= CODE TO DEFINE WHICH DS NAME
**                             IF A15=0 ---MOVE 'TO' DS NAME
**                             IF A15= NOT 0 --- MOVE 'FROM' DS NAME
**       WHEN THIS ROUTINE IS DONE A8 WILL POINT ONE SPACE PAST
**       THE MOVED NAME
**
*********************************************************************
*
MSGDS    LTR   A15,A15                  TEST FOR A15=0
         BZ    TODS                       IF SO BRANCH
         L     A15,IEHMVV21             GET ADDR OF 'FROM' DS NAME
         B     DSMOVE
TODS     L     A15,IEHMVV21+4           GET ADDR OF 'TO' DS NAME
DSMOVE   MVC   0(44,A8),0(A15)          MOVE DS NAME TO PRINT AREA
CHKEND   CLI   0(A8),BLANK              CHECK FOR END OF NAME
         BE    NAMEEND                    IF REACHED BRANCH ---
         LA    A8,1(A8)                 BUMP POINTER TO PRINT AREA
         B     CHKEND
NAMEEND  LA    A8,1(A8)                 ALLOW FOR SPACE AFTER NAME
         BR    A14                      RETURN
*
********************************************************************
**
**                            MESSAGE WRITE CALLER
**
**       THIS ROUTINE WILL BE LINKED TO WHENEVER A LINE OF OUTPUT
**       IS TO BE WRITTEN ON 'SYSPRINT' IT WILL HAVE NO PARAMETERS
**       AND ASSUME THAT THE LINE TO BE WRITTEN IS LOCATED AT IEHMVV00
**       AFTER THE WRITE IS COMPLETE, CONTROL WILL BE PASSED BACK VIA
**       A2  UNLESS A PERMINANT I/O ERROR WAS ENCOUNTERED
**
********************************************************************
*
LINEPR   ST    A3,IEHMVV00+128         SAVE REG 3
         LA    A3,IEHMVV00             LOAD ADDR OF PRINT AREA
         LINK EP=IEHMVESU              GO TO MSG WTR
         L     A3,IEHMVV00+128
         B     *+4(A15)                 CHECK RETURN CODE
         B     0(A2)                         =0  OK WRITE
         IEHPOST ,TC
         L     14,12(0,13)              RESTORE REG 14
         XCTL  (2,12),EP=IEHMVESK
*
*********************************************************************
**
**                            VOLUME LIST MOVER
**
**       THIS ROUTINE IS LINKED TO  IN ORDER TO MOVE A VOLUME LIST
**       TO THE PRINT AREA PLUS 20 BYTES(IEHMVV00+20)
**       THE LINKAGE IS AS FOLLOWS
**                                 A14= RETURN ADDRESS
**       THE FORMAT OF THE LIST IS AS FOLLOWS
**         FOR DIRECT ACCESS --- 123 7986 A1763 IBM403
**         FOR TAPE          --- 24,0001 7987,0007
**         FOR UNIT RECORD   --- UNIT RECORD EQUIP -- UNIT = HR
**
**                            A15= CODE TO DEFINE WHICH VOL LIST
**                                 IF A15=0 --- 'TO' VOL LIST
**                                 IF A15= NOT ZERO --- 'FROM' VOL LIST
*********************************************************************
*
MSGVOL   MVI   IEHMVV00,BLANK          CLEAR PRINT AREA
         ST    A14,SAVE14               SAVE RETURN ADDR
         SR    A0,A0                    CLEAR A0
         MVC   IEHMVV00+1(120),IEHMVV00
         LTR   A15,A15                  CHECK WHICH LIST TO MOVE
         BZ    TOVOL                      IF 'TO' LIST ---
         L     A1,IEHMVV22              LOAD ADDR OF FROM VOL LIST
         IC    A0,IEHMVV22              LOAD NO OF VOLUMES IN FROM LIST
         B     MOVEVOL
TOVOL    L     A1,IEHMVV10             LOAD ADDR OF TO VOL LIST
         LH    A0,0(A1)                LOAD COUNT OF VOLUMES
         LA    A1,2(A1)                BUMP PTR TO START OF VOL IDS
MOVEVOL  TM    2(A1),UNITREC            TEST FOR VOL = UNIT RECORD
         BO    UNITVOL                    IF SO ---
         CLI   IEHMVV74+12,X'FF'  WAS OUTPUT ON NL TAPE          A19476
         BE    UNITVOL                    IF SO ---
         LA    A15,IEHMVV00+20          LOAD ADDR OF PRINT AREA+20
CHKLIST  MVC   0(6,A15),4(A1)           MOVE VOL ID
         LA    A15,6(A15)               BUMP REG PAST VOL ID
         MVC   DTCRT(2),SEQ(A1)        PICK UP THE                 DT0I
         LH    A14,DTCRT                    SEQUENCE NUMBER        DT0I
         LTR   A14,A14                  CHECK IF TAPE
         BZ    SETBLNK                    IF NOT TAPE ---
         MVI   0(A15),COMMA             MOVE COMMA TO VOLUME LIST
         CVD   A14,IEHMVV00+128         CONVERT TO DEC
         UNPK  1(4,A15),IEHMVV00+128(8) UNPACK
         OI    4(A15),PLUS              RESET SIGN
         LA    A15,5(A15)               BUMP REG PAST SEQ NO
SETBLNK  LA    A15,1(A15)               LEAVE SPACE IN VOL LIST
         LA    A1,12(A1)
         BCT   A0,CHKLIST               LOOP IF MORE VOL ID.S
         L     A14,SAVE14               RESTORE REG A14
         BR    A14                      RETURN
SAVE14   DS    F
UNITVOL  L     A15,MSGAD                LOAD ADDR OF MSG CSECT
         L     A15,0(A15)               LOAD ADDR OF FIRST MSG
         MVC   IEHMVV00+20(26),1(A15)      MOVE MSG TO PRINT
         MVI   IEHMVV74+12,X'00'  TURN NL TAPE SWITCH OFF        A19476
         BR    A14                      RETURN
MOVEGRP EQU   MOVESET                               - MOVE DS GROUP **
MSGAD    DC    A(IEHMVMSN)
*******************************************************************UL0H
*                                                                  UL0H
*   U S E R   L A B E L   E X I T   R O U T I N E                  UL0H
*                                                                  UL0H
*******************************************************************UL0H
XXOTLE   DC    X'04'                   OUTPUT TRAILER LABEL        UL0H
         DC    AL3(OTLR)               ROUTINE EXIT IN DCB EXLST   UL0H
OTLR     DS    0H                                                  UL0H
OFFSET1  EQU   OTLR-IEHMVESN                                       UL0H
         LA    A8,OFFSET1                                          UL0H
         SR    A15,A8                                              UL0H
         LR    A9,A15                  RESET ADDRESSABILITY        UL0H
         CLC   IEHMVV72(4),ALLZEROS    LABELS IN GOTTEN CORE       UL0H
         BE    IGNORE                  NO, IGNORE LABEL REQUEST    UL0H
         CLI   IEHMVV72+12,X'00'       LABEL CTR AT ZERO           UL0H
         BE    RELCORE                 YES, FREE LABEL CORE        UL0H
         L     A8,0(A1)                LOAD PTR TO CLOSE LBL BUFF  UL0H
         LTR   A8,A8                   BUFFER ADDRESS ZERO         UL0H
         BZ    IGNORE                  YES, RETURN TO CLOSE        UL0H
IOERR    DS    0H                                                  UL0H
         CLI   8(A1),X'80'             PERM I/O ERR FROM PARM LIST UL0H
         BNE   PROVIDE                 NO, PROVIDE A LABEL         UL0H
         OI    IEHMVV74+4,X'FF'         YES, SET FLAG TO OUTPUT    UL0H
*                                        MSG AFTER OPEN/CLOSE/EOV  UL0H
         BR    A14                     RETURN TO CLOSE             UL0H
PROVIDE  DS    0H                                                  UL0H
         L     A11,IEHMVV72+4          GET ADDR OF CURRENT LBL     UL0H
         L     A15,0(0,A1)             GET CLOSE LABEL BUFF ADDR   UL0H
         MVC   0(80,A15),0(A11)        MOVE LABEL TO OUTPUT BUFFER UL0H
         LA    A11,80(A11)             UPDATE PTR TO NEXT LABEL    UL0H
         ST    A11,IEHMVV72+4          SAVE ADDRESS                UL0H
         SR    A11,A11                 REDUCE                      UL0H
         IC    A11,IEHMVV72+12            USER                     UL0H
         BCTR  A11,0                         LABEL                 UL0H
         STC   A11,IEHMVV72+12                  COUNT              UL0H
         LA    A15,8                   RETURN CODE OF 8 FOR        UL0H
         BR    14                      ANOTHER LABEL               UL0H
*                                                                  UL0H
RELCORE  DS    0H                                                  UL0H
         L     A11,IEHMVV72            GET ADDR OF GOTTEN CORE     UL0H
         FREEMAIN  R,LV=640,A=(11)     FREE GOTTEN CORE            UL0H
         XC    IEHMVV72(8),IEHMVV72    RESET POINTERS              UL0H
IGNORE   DS    0H                      RETURN CODE OF ZERO TO      UL0H
         SR    A15,A15                 CLOSE TO IGNORE LABELS      UL0H
         BR    A14                     RETURN TO CLOSE             UL0H
*
IOERRMSG DS    0H
         OI    IEHMVV74+4,X'00'         CLEAR I/O ERROR FLAG       UL0H
         LA    A8,IEHMVV00+1            LOCATION FOR MESSAGE STORE UL0H
         LA    A15,24                   CONSTANT FOR MESSAGE IN MSNUL0H
         ST    A14,SAVE14               SAVE REG 14                UL0H
         BAL   A14,MSGCLEAR             CLEAR AREA, MOVE MSG IN    UL0H
         L     A14,SAVE14               RESTORE REG 14             UL0H
         BAL   A2,LINEPR                PUT MESSAGE OUT      IN    UL0H
         B     ERMSGRET                 RETURN TO INLINE PROCESSINGUL0H
*
*  E Q U A T E S
*
*
FROMOP  EQU  X'80'                                               A25571
UNLOAD   EQU   X'01'
LOAD     EQU   X'02'
TAPEOUT  EQU   X'80'
DSGROUP  EQU   X'10'
VOLUME   EQU   X'02'
CVOL     EQU   X'40'
CVTSTRT  EQU   16                       PTR TO CVT
CVTILK2  EQU   40                       PTR TO UCB LOOKUP TABLE
ALLOW    EQU   X'87'
UNLBLED  EQU   X'02'
UNLBLSW  EQU   X'FF'
PREABRT  EQU   X'01'
MIDABRT  EQU   X'40'
MCCATLG  EQU   X'04'
MORC     EQU   X'80'
BLANK    EQU   X'40'
UNLABEL  EQU   X'FF'
COMMA    EQU   C','
PLUS     EQU   X'F0'
DAUCB    EQU   X'20'
SYSRUCB  EQU   X'02'
DCBEXLST EQU   36
EOI      EQU   X'20'
UNITREC  EQU   X'08'
USERLABL EQU   X'0A'                                               UL0H
DEACTIVE EQU   X'00'
SEQ      EQU   10
OFFSVL   EQU   17                       VOLUMELIST ENTRYLENGTH   A43752
UCBSAVE  DS    1H                       UCB ADDR FROM DEB        A43752
DTCRT    DS    1H
ALLZEROS DC    F'0'
PATCH    DS    10F                     PATCH AREA              @Z40CSJH
         IEHMVV
         ORG   IEHMVV70                                            UL0H
         IEHDCBXL                                                  UL0H
IEFJFCBN DSECT
         IEFJFCBN
JFCBDSL1 EQU   JFCBDSNM+53                                       S21042
IEFUCBOB DSECT
         IEFUCBOB
         END
