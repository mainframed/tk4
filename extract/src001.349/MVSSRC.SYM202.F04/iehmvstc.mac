*TITLE                                                                *
*   'IEHMVSTC - PDS DIRECTORY SCANNER'                                *
*FUNCTION/OPERATION:                                                  *
*   THIS ROUTINE READS A SPECIFIED PDS DIRECTORY AND WRITES THE       *
*   DIRECTORY RECORDS ON A WORK FILE FOR THE USE OF THE               *
*   MOVE/COPY/UNLOAD PDS FUNCTIONS.  IF ANY MEMBERS ARE TO EXCLUDED OR*
*    REPLACED EACH MEMBER NAME READ IS COMPARED TO THE MEMBER NAMES IN*
*    A FILE OF EXCLUDES AND REPLACES AND IF IT MATCHES THE ENTRY IS   *
*   NOT PUT ON THE OUTPUT WORK FILE.                                  *
*ENTRY POINTS:                                                        *
*        IEHMVETC - ONLY ENTRY POINT L 15, A (IEHMVETC) BALR 14,15    *
*INPUT:                                                               *
*   1.  SPECIFIED PDS DIRECTORY ENTRIES FROM A DIRECT ACCESS DEVICE.  *
*   2.  WORK FILE (SYSUT2) OF EXCLUDES/REPLACES FROM DIRECT ACCESS    *
*   DEVICE.                                                           *
*OUTPUT:                                                              *
*   WORK FILE (SYSUT3) OF MEMBERS TO MOVED/COPIED/UNLOADED TO DIRECT  *
*   ACCESS DEVICE.                                                    *
*EXITS - NORMAL                                                       *
*   FREEMAIN AND RETURN TO CALLING ROUTINE                            *
*ERRORS:                                                              *
*   FREEMAIN AND TRANSFER CONTROL TO IEHMVESN WHEN I/O ERROR OCCURS.  *
*TABLES/WORK AREAS:                                                   *
*   136 BYTE WORK AREA.                                               *
*ATTRIBUTES:                                                          *
*   READ ONLY,REENTRANT,REUSABLE.                                     *
*D036300                                                       @ZA11965
*C036100                                                       @ZA04392
*A019100                                                       @ZA01234
*A036300                                                       @YA02535
*A018900                                                        OY01177
*A034900                                                         YM5090
*C036100                                                       @ZA28365
*A035400,035700,036000                                         @ZA28365
*A067260-067360                                                @ZA28914
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
CVTPCNVT EQU   28
CVTPRLTV EQU   32
SEVENT   EQU   17                      BYTES TO CORRECT TIC      S20201
NINE1    EQU   9                       BYTES TO CORRECT CCW      S20201
RPS      EQU   4                       BYTES TO BYTE IN IEHMVV   S20201
CODE     EQU   136                     BYTES IN CCW CHAIN        S20201
CCWCLR   EQU   187                     BYTES TO CLEAR IN STCP    S20201
RECLN    EQU   91                      LENGTH OF RECORD AND KEY  S20201
EXCLUDE  EQU   C'E'
ERMASK   EQU   X'C0'
EXCREP   EQU   X'04'
DSGROUP  EQU   X'10'
FIRSTIME EQU   X'FF'
* THIS IS THE ROUTINE TO BREAK UP A PDS DIRECTORY SO THAT THE PDS MAY
*              BE COPIED WITHOUT MISSING AN ENTRY
*2039 0350-0358,0366-0370,0816-0818,0908-0918                      7491
*
IEHMVSTC CSECT
*C062000                                                         A48801
*  ALL CODE FLAGGED S20201 WAS ADDED OR CHANGED FOR              S20201
*  MERLIN/ZEUS SUPPORT                                           S20201
         ENTRY IEHMVETC
IEHMVETC SAVE  (14,12),T,IEHMVSTC-OZ28914                      @ZA28914
         LR    11,15
         USING IEHMVETC,11
         USING IEHMVV,12
*
         IEHPRE ,FT           SETS UP NEW SAVE AREA
*
         SR    R10,R10
         L     R3,IEHMVV41         ADDR OF SYSUT2 DCB
         LA    R3,0(0,R3)          CLEAR HIGH ORDER BYTE
         L     R4,IEHMVV42         ADDR OF SYSUT3 DCB
         LA    R4,0(0,R4)          CLEAR HIGH ORDER BYTE
         USING OUTDCB,4
         MVC   57(3,R4),ERRAD          PUT SYNAD IN UT3 DCB
         TM    IEHMVV20,DSGROUP    DSGROUP OPERATION
         BO    POINT3                  YES
         TM    IEHMVV20+2,EXCREP   ANY EXCLUDES OR REPLACES
         BZ    POINT3                  NO
         POINT (R3),TTRA1              REPOSITION SYSUT2
POINT3   POINT (R4),TTRA1              REPOSITION SYSUT3
         MVC   57(3,R3),ERRAD          PUT SYNAD IN UT2 DCB
*
         MVC   OPAREA(SW2-DOPEN+1),DOPEN   REENTRANT OPEN AND DCB SETUP
         L     R9,IEHMVV30+12      ADDR OF 'FROM' DDNAME
         MVC   INDCB+40(8),0(R9)   PUT DDNAME IN DCB
         GETMAIN  R,LV=650                                       S20201
         LR    R5,R1
         USING STCP,R5
         MVI   MODJFCB,X'00'           CLEAR
         MVC   MODJFCB+1(175),MODJFCB   MODEL JFCB
         LA    R1,MODJFCB              ADDR OF MODEL JFCB
         ST    R1,EXLIST               PUT IN EXIT LIST
         LA    R1,EXLIST               EXIT LIST ADDR
         ST    R1,INDCB+36         PUT IN DCB
         MVI   INDCB+36,X'81'
         MVI   EXLIST,X'87'
         L     R1,IEHMVV21             ADDR OF DS NAME
         MVC   MODJFCB(44),0(R1)       PUT DS NAME IN JFCB
         MVI   MODJFCB+44,X'40'
         MVI   MODJFCB+52,X'08'        DON'T WRITE BACK JFCB    OY01177
         MVI   MODJFCB+117,X'01'       NO OF VOLS
         MVI   MODJFCB+87,X'C0'        INDICATE NEW DATA SET   @ZA01234
         L     R1,IEHMVV22+4           ADDR OF VOL ID
         MVI   MODJFCB+124,X'40'
         MVC   MODJFCB+118(6),4(R1)    PUT VOL ID IN JFCB
         MVC   MODJFCB+53(3),IEHMVV82  MOVE TTR9IN JFCB          S21042
         OPEN  (INDCB),TYPE=J,MF=(E,OPAREA)
***** INITIALIZE CHANNEL PROGRAM AND IOB ******
         MVI   EXIOB,X'00'             CLEAR
         MVC   EXIOB+1(CCWCLR),EXIOB   AREA                      S20201
         LA    R1,EXECB                ADDR OF ECB
         ST    R1,EXIOB+4              PUT IN IOB
         LA    R1,EXCPENT              ADDR OF CHANNEL PROGRAM
         ST    R1,EXIOB+16             PUT IN IOB
         ST    R1,EXCPENT+8            PUT IN CHAN PROG
         LA    R1,CHANID+3             ADDR OF MBBCCHHR OF FIRST RECORD
         ST    R1,EXCPENT              PUT IN CHAN PROG
         LA    R1,EXCP3                TIC ADDR
         ST    R1,EXCP2+8              PUT IN CHAN PROG
         LA    R1,SW3
         ST    R1,EXCP2+16
         LA    R1,EXCPLAD              ADDR OF CCHHR OF LAST RECORD
         ST    R1,EXCP3                PUT IN CHAN PROG
         LA    R1,EXCP2                TIC ADDR
         ST    R1,EXCP3+8              PUT IN CHAN PROG
         MVI   NEWIOB,X'00'            CLEAR SWITCH
         LA    R1,EXCP2A               TIC ADDR
         ST    R1,EXCP2A+8             PUT IN CHAN PROG
         LA    R1,EXCP2A               TIC TO SEARCH ID EQ       S20201
         ST    R1,EXCP2B                                         S20201
         OC    EXCPENT(CODE),CHPROG   PUT CODES AND LNGTH IN CCWSS20201
* HOUSEKEEP FOR THE RUN
         MVC   CHANID(8),5(R3)          PUT START CCHHR IN IOB
         MVC   EXCPLAD(5),IEHMVV41+8    PUT END CCHHR IN TEST SLOT
         ST    R3,UT2DCB                STORE DCB ADDRESS IN IOB
         NI    IEHMVV20+2,X'7F'        CLEAR ALIAS INDICATOR
*
ABLE     READ  INPUT,SF,INDCB,INAREA,MF=E
         CHECK INPUT
*
         LA    R10,1(R10)     STEP RECORD COUNTER
*
         TM    IEHMVV20+2,X'02'       SELECTS SPECIFIED
         BO    ABLE                    YES
*        TEST TO SEE IF ALL ENTRIES PROCESSED. IF YES-READ TO CT RCDS
         TM    SWITCH,X'FF'
         BC    1,ABLE
*
*        SET UP BASE ADDRESS FOR BLOCK AND SAVE KEY
         LA    R9,INAREA
         MVC   KEY(8),0(R9)
*
*        GET ENTRY NAME ADDRESS
         LA    R9,10(R9)
*
*        COMPARE ENTRY NAME WITH KEY
REPEAT   CLC   KEY(8),0(R9)
         BE    DOG            EQUAL - LAST ENTRY FOR THIS RECORD
*
*        SET UP FOR WRITE
PROC     LR    R8,R9
         SH    R8,NINE
*        COMPUTE LENGTH OF RECORD TO BE WRITTEN IN R7
         LH    R7,10(0,R9)
         LA    R6,X'1F'
         NR    R7,R6
         AR    R7,R7
         LA    R7,17(0,R7)   DATA LENGTH IS IN R7
*
* TEST IF MEMBER IS TO BE EXCLUDED OR REPLACED
         TM    IEHMVV20+2,EXCREP
         BZ    PROC2               BRANCH IF NO
         MVC   EXECB(4),DEXECB
         ST    R9,NAMEADD          STORE ADDRESS OF ENTRY NAME
         MVC   EXCP2+1(3),NAMEADD+1
         MVC   EXCP2A+1(3),NAMEADD+1
         MVI   SW3,X'00'           CLEAR EXCLUDE SWITCH
         TM    IEHMVV20+RPS,X'04'      RPS BIT ON TEST           S20201
         BZ    PROC1                   NO - USE EXISTING CCWS    S20201
         LA    R1,EXCP3A               NEW FIRST CCW (SET SECTOR)S20201
         ST    R1,EXIOB+16             PUT IT IN THE IOB         S20201
         LA    R1,EXCPENT              GET PRESENT FIRST CCW     S20201
         ST    R1,NAMEADD              AND PUT IN TIC ADDRESS    S20201
         MVC   EXCP3A+NINE1(3),NAMEADD+1                         S20201
         LA    R1,EXCP3B               GET READ SECTOR CCW       S20201
         ST    R1,NAMEADD              AND PUT IT IN THE CCW     S20201
         MVC   EXCP2B+1(3),NAMEADD+1   AFTER THE READ            S20201
         LA    R1,EXCP2A               GET SEARCH AFTER READ     S20201
         ST    R1,NAMEADD              AND PUT IN TIC AFTER      S20201
         MVC   EXCP3B+SEVENT(3),NAMEADD+1  SET SECTOR            S20201
         LA    R1,SECTOR               GET ADDR TO PUT SECTOR    S20201
         ST    R1,NAMEADD              VALUE AND PUT IN          S20201
         MVC   EXCP3B+1(3),NAMEADD+1   CCW FOR READ              S20201
         MVC   EXCP3B+9(3),NAMEADD+1   AND SET SECTORS           S20201
         LA    R1,EXCP3+18             GET A BYTE OF ZERO        S20201
         ST    R1,NAMEADD              FOR 0 SECTOR VALUE        S20201
         MVC   EXCP3A+1(3),NAMEADD+1   PUT IN SET SECTOR CCW     S20201
         MVC   NAMEADD+1(3),EXCP2+1    PUT NAME BACK IN DSECT    S20201
PROC1    LA    R1,EXIOB                                          S20201
         EXCP  (1)                     SEARCH SYSUT2
         L     R1,EXIOB+4
         WAIT  ECB=(1)
         L     R3,IEHMVV41             DCB ADDR
         TM    44(R3),ERMASK
         BZ    EXOK                BRANCH IF NO ERRORS
         NI    44(R3),X'FF'-ERMASK SET PERM ERROR OFF            YM5090
*
ERROR    MVI   IEHMVV61,X'20'  SET 61 TO WRITE I/O ERR WORK FILE   7491
*                              MSG IEH417I                     @ZA28365
         B     ERROR2A                                             7491
ERROR1   MVI   IEHMVV61,X'22'  SET 61 TO WRITE I/O ERR FROM DA SET 7491
*                              MSG IEH418I                     @ZA28365
         B     ERROR2A                                             7491
ERROR2   MVI   IEHMVV61,X'24'  SET 61 TO WRITE I/O ERR SYSPRINT    7491
*                              MSG IEH419I                     @ZA28365
ERROR2A  OI    IEHMVV20+2,X'40'        INDICATE ABORTION       @ZA28365
         CLOSE (INDCB),MF=(E,OPAREA)
         FREEMAIN  R,LV=650,A=(5)                                S20201
         IEHPOST ,T
         LA    15,4            SET RETURN CODE ERROR               7491
         RETURN (14,12),T,RC=(15)                                  7491
*
EXOK     TM    SW3,X'FF'
         BZ    PROC2               NO MATCH - BRANCH TO PROCESS ENTRY
         TM    IEHMVV20+1,X'01'
         BZ    PROC3               EXCLUDE ENTRY IF NOT UNLOAD MODE
         TM    SW3,EXCLUDE
         BO    PROC3               BRANCH IF IT WAS AN E TO EXCLUDE
*
*        WILL RECORD FIT ON THIS TRACK
PROC2    L     R1,IEHMVV42             GET THE DEVICE OVERHEAD FOR
         USING IHADCB,R1               THE LAST RECORD ON A TRACK
         L     R1,DCBDVTBL             BY GOING TO THE DEVICE
         USING UNITABLE,R1             CHARACTERISTICS TABLE FOR
         SR    R6,R6                   SYSUT3 -- THEN CHECK TO SEE
         TM    UNITFLAG,X'08'          IF 2-BYTE OVERHEAD        S20201
         BZ    ONEBYTE                 NO-GET 1 BYTE AND CONTINUES20201
         LH    R6,UNITOVHI             GET 2 BYTE OVERHEAD       S20201
         B     ADDREC                  TEST REC ON TRACK         S20201
ONEBYTE  IC    R6,UNITOVHL             CHECK TO SEE IF REC.      S20201
ADDREC   LA    R6,RECLN(0,R6)          (4 BYTE KEY+87 BYTE OF    S20201
*                                      DATA) WILL FIT            S20201
         TM    NEWIOB,FIRSTIME
         BZ    BAKER                   YES
         CH    R6,OUTDCB+18
         BL    BAKER         BRANCH IF RECORD WILL FIT
*
*        ZERO TRACK BALANCE
         SR    R6,R6
         STH   R6,OUTDCB+18
*
*        COMPUTE NEXT TRACK ADDRESS
         L     R1,OUTDCB+44        SET UP FOR CONVERT ROUTINE
         LA    R2,OUTDCB+5
         LR    R3,R13
         STM   R9,R13,72(R13)      STORE REGISTERS
         L    R15,16(0,0)
         L    R15,CVTPRLTV(R0,R15)
         BALR  R14,R15             BRANCH TO CONVERT CCHHR TO TTR
*
         LR    R15,R0              SET UP FOR NEXT TRACK
         SRL   R15,16
         LA    R15,1(R0,R15)
         SLL   R15,16
         LR    R0,R15
         LA    R2,1(R0,R8)
         L     R15,16(R0,R0)
         L     R15,CVTPCNVT(R0,R15)
         BALR  R14,R15             BRANCH TO CONVERT TTR TO CCHHR
*
*        RESET REGS
         LM    R9,R13,72(R3)
*
*        MAKE FIELD R A ONE
         MVI   8(R8),X'01'
         B     CHARLIE
*
*        RECORD WILL FIT. MOVE CCHHR TO OUT AREA
BAKER    MVC   1(8,R8),OUTDCB+5
*
*        ADD ONE TO FIELD R
         LA    R8,1(0,R8)
         LH    R1,6(0,R8)
         LA    R1,1(0,R1)
         STH   R1,6(0,R8)
         BCTR  R8,0
*
*        MOVE TTR INTO KEY FIELD
CHARLIE  MVC   1(3,R8),8(R9)
*
*        MOVE ALIAS BIT STATUS TO OUTPUT AREA AND WORK FILE CONTROL
         MVC   0(1,R8),11(R9)
         NI    0(R8),X'80'
*
*        PUT RECORD IN OUTPUT AREA
         OC    IEHMVV20+2(1),0(R8)
         MVC   WRAREA(91),0(R8)
         LR    R8,R5
         MVC   RENAME(8),9(R5)         PUT NAME IN RECORD
*
*        WRITE THE RECORD
         WRITE OUTPUT,SF,OUTDCB,(R8),87,MF=E
         CHECK OUTPUT
         MVI   NEWIOB,X'FF'            INDICATE WRITE DONE
*
*        IS THIS LAST ENTRY OF INPUT RECORD
PROC3    TM    EORSW,X'FF'
         BC    1,EASY
*
*        NO - HOUSEKEEP FOR NEXT ENTRY
         SH    R7,FIVE
         AR    R9,R7
*
*        BRANCH FOR NEXT ENTRY
         B     REPEAT
*
*        IT IS LAST ENTRY - CLEAR SWITCH AND GO READ NEXT RECORD
EASY     MVI   EORSW,X'00'
         B     ABLE
*
*
*        ENTRY NAME IS EQUAL TO KEY
*        IS IT ALL F'S
DOG      CLC   RECTERM(8),0(R9)
         BE    FOX
*
*        NO IT IS NOT - SET EORSW ON AND CONTINUE PROCESSING
         MVI   EORSW,X'FF'
         B     PROC
*
*        IT IS EQUAL - SET SWITCH ON AND GO TO READ NEXT RECORD
FOX      MVI   SWITCH,X'FF'
         B     ABLE
*
*
*        END OF DATA ROUTINE
*        STORE RECORD COUNT - CLOSE - END PGM
ENDIN    STH   R10,IEHMVV25
         TM    IEHMVV20+2,X'02'       SELECTS SPECIFIED
         BO    NOTWRITE                YES
*
* WRITE OUT DUMMY LAST RECORD
         WRITE OUTPUT,SF,OUTDCB,ENDREC,5,MF=E
         CHECK OUTPUT
*
* PUT CCHHR OF RECORD JUST WRITTEN INTO IEHMVV
         MVC   IEHMVV42+8(5),OUTDCB+8
NOTWRITE EQU   *
         CLOSE (INDCB),MF=(E,OPAREA)
         TM    IEHMVV20+2,EXCREP   ANY EXCLUDES OR REPLACES      A48801
         BZ    ENDB                     NO, SKIP EXCLUDE WRAPUP
RDEX     L     R3,IEHMVV41             DCB ADDR
         MVI   44(R3),X'00'
         L     R2,IEHMVV41+4           DECB ADDR
         READ  (2),SF,(3),INAREA,'S',MF=E
         L     R2,IEHMVV41+4           DECB ADDR
         CHECK (2)
         CLC   IEHMVV41+8(5),8(R3)     LAST RECORD
         BE    ENDB                    YES
         CLI   INAREA+8,X'FF'          THIS NAME EXCLUDED
         BE    RDEX                    YES
         L     R2,M320AD               MSG ADDR
         BAL   R4,MSGMOVE
         LA    R1,2(R3,R1)             LOCATION OF NAME IN MSG
         MVC   0(8,R1),INAREA          PUT NAME IN MSG
         LA    R1,9(0,R1)              LOCATION OF NEXT PART IN MSG
         LA    R2,2(R3,R2)             ADDR OF NEXT MSG SEGMENT
         IC    R3,0(0,R2)              GET LENGTH OF SEGMENT
         EX    R3,MOVEMSG              PUT MSG IN AREA
         LA    R1,2(R3,R1)             LOCATION OF DSNAME IN MSG
         L     R2,IEHMVV21             ADDR OF DS NAME
         MVC   0(44,R1),0(R2)          PUT NAME IN MSG
         LA    R4,RDEX                 RETURN ADDR
         B     MSGMOVEB                GO TO WRITE MSG
ENDB     IEHPOST ,T
         FREEMAIN R,LV=600,A=(5)
         XC    57(3,R3),57(R3)  CLEAR SYNAD ADDR IN SYSUT2 DCB @ZA28914
         MVI   59(R3),X'01'     SET LAST BYTE HEX 01           @ZA28914
         XC    57(3,R4),57(R4)  CLEAR SYNAD ADDR IN SYSUT3 DCB @ZA28914
         MVI   59(R4),X'01'     SET LAST BYTE HEX 01           @ZA28914
         LA    R15,0
         RETURN (14,12),T,RC=(15)
*        MESSAGE MOVING ROUTINE
MSGMOVE  MVI   MSGAREA,X'00'
         MVC   MSGAREA+1(120),MSGAREA
MSGMOVEA SR    R3,R3                   CLEAR REG THREE
         IC    R3,0(R2)                INSERT MSG LENGTH
         LA    R1,MSGAREA+1            ADDR OF MSG AREA
         EX    R3,MOVEMSG              PUT MSG IN AREA
         CLI   4(R1),C'2'              DOES MSG NEED NAME
         BE    0(0,R4)                 YES
MSGMOVEB LA    3,MSGAREA               ADDR OF MSG OUTPUT AREA
         LINK  EP=IEHMVESU             GO TO MSG WRITER
         LTR   R15,R15
         BNE   ERROR2                  NO
         BR    R4
DOPEN    OPEN  (,(INPUT)),MF=L
*
DIDCB    DCB   DSORG=PS,MACRF=R,                                       B
               DDNAME=DIRINPT,DEVD=DA,KEYLEN=8,                        B
               SYNAD=ERROR1,                                           *
               RECFM=F,                                                B
               BLKSIZE=256,EODAD=ENDIN
*
SW1      DC    X'00'
SW2      DC    X'00'
ERRAD    DC    AL3(ERROR)
*
* CHANNEL PROGRAM FOR SEARCHING FOR EXCLUDES AND REPLACES
         DS    0D
CHPROG   DC    X'31'                   SEARCH ID EQUAL FIRST RECORD
         DC    AL3(0)
         DC    X'40'
         DC    X'000005'
         DC    X'08'               IF NOT KEEP SEARCH GOING
         DC    AL3(0)
         DC    X'40000001'
         DC    X'A9'                   NOW SEARCH KEY EQUAL TO NAME
         DC    AL3(0)
         DC    X'60000008'
         DC    X'08'               IF NOT SEARCH ID
         DC    AL3(0)
         DC    X'40000001'
         DC    X'06'               KEY EQUAL READ DATA
         DC    AL3(0)
         DC    X'60000001'
         DC    X'08'                   IF RPS, GO SET SECTOR     S20201
         DC    AL3(0)                                            S20201
         DC    X'40000001'                                       S20201
         DC    X'29'                   SEARCH KEY EQUAL TO NAME
         DC    AL3(0)
         DC    X'60000008'
         DC    X'08'              IF NOT GO BACK TO SEARCH KEY
         DC    AL3(0)
         DC    X'40000001'
         DC    X'05'              INDICATE NAME MATCHED
         DC    AL3(RECTERM)
         DC    X'20000001'
         DC    X'B1'                   SEARCH ID EQUAL TO LAST RECORD
         DC    AL3(0)
         DC    X'40000005'
         DC    X'08'               IF NOT EQUAL GO BACK TO SEARCH KEY
         DC    AL3(0)
         DC    X'40000001'
         DC    X'03'               END SEARCH NO MATCH FOUND
         DC    AL3(0)
         DC    X'00000001'
         DC    X'23'                   SET SECTOR                S20201
         DC    AL3(0)                                            S20201
         DC    X'40000001'                                       S20201
         DC    X'08'                   SEARCH FOR RECORD         S20201
         DC    AL3(0)                                            S20201
         DC    X'40000001'                                       S20201
         DC    X'22'                   READ SECTPR               S20201
         DC    AL3(0)                                            S20201
         DC    X'40000001'                                       S20201
         DC    X'23'                   SET SECTOR                S20201
         DC    AL3(0)                                            S20201
         DC    X'40000001'                                       S20201
         DC    X'08'                   RETURN TO OLD CCWS        S20201
         DC    AL3(0)                                            S20201
         DC    X'40000001'                                       S20201
DEXECB   DC    F'0'
         DS    0H
NINE     DC    X'0009'
FIVE     DC    X'0005'
RECTERM  DC    X'FFFFFFFFFFFFFFFF'
ENDREC   DC    X'00BEB000'
         DC    C'DUMMY'
TTRA1    DC    A(256)
M320AD   DC    A(M320)
MOVEMSG  MVC   0(1,R1),1(R2)           MOVE A MSG TO THE OUTPUT AREA
*
         IEHMVV
         ORG   IEHMVV00
OPAREA   OPEN  (,(INPUT)),MF=L
*
INDCB    DCB   DSORG=PS,MACRF=R,                                       B
               DDNAME=DIRINPT,DEVD=DA,KEYLEN=8,                        B
               RECFM=F,                                                B
               BLKSIZE=256,EODAD=ENDIN
*
SWITCH   DS    CL1
EORSW    DS    CL1
         DS    0F
INAREA   DS    CL264
KEY      DS    CL8
         READ  INPUT,SF,INDCB,INAREA,MF=L
         WRITE OUTPUT,SF,OUTDCB,MF=L
*
STCP     DSECT
WRAREA   DS    CL83
RENAME   DS    CL8
MSGAREA  DS    CL121
EXIOB    DS    5F
UT2DCB   DS    3F
CHANID   DS    2F
EXECB    DS    F
NAMEADD  DS    F
EXCPENT  DS    2D
EXCP2    DS    6F
EXCP2B   DS    2F                                                S20201
EXCP2A   DS    6F
EXCP3    DS    6F
EXCP3A   DS    4F                                                S20201
EXCP3B   DS    6F                                                S20201
SW3      DS    C
EXCPLAD  DS    5C
STIOBAD  DS    6C
NEWIOB   DS    C
SECTOR   DS    C                                                 S20201
MODJFCB  DS    44F
         DS    0F
EXLIST   DC    X'87'
         DC    AL3(0)
OUTDCB   DSECT
***** TABLE OF MESSAGES. EACH MESSAGE IS PRECEDED BY ITS LENGTH *****
MSGSECT  CSECT
M320     DC    AL1(M321-M320-2)
         DC    CL14'IEH320I MEMBER'
M321     DC    AL1(MEND-M321-2)
         DC    CL21'NOT FOUND IN DATA SET'
MEND     DS    0C
         EJECT
         DCBD  DSORG=PS,DEVD=DA
         EJECT
UNITABLE DSECT
UNITSICC DS    H                       DEFINE THE VARIOUS DEVICE
UNITSIHH DS    H                        CHARACTERISTICS
UNITTRLN DS    H
UNITOVHI DS    CL1
UNITOVHL DS    CL1
UNITOVHK DS    CL1
UNITFLAG DS    CL1
UNITTOLR DS    CL1
         END
