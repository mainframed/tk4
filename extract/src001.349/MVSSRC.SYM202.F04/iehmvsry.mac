  TITLE  'IEHMVSRY-ROUTING AND ERRORS FOR IEHMOVE LOAD MODULE ESV'
*TITLE--IEHMVSRY---ROUTING AND ERRORS FOR IEHMOVE LOAD MODULE ESV
*FUNCTION/OPERATION: M                                                *
*FUNCTION/OPERATION: HANDLES CONTROL AND MESSAGES FOR LOAD MODULE     *
*IEHMVESV                                                             *
*ENTRY POINTS: IEHMVESY                                               *
*INPUT: MOVE/COPY COMMUNICATIONS TABLE                                *
*OUTPUT: MESSAGES RESULTING FROM RETURNS FROM CALLED MODULES          *
*EXTERNAL ROUTINES: IEHMVSSX                                          *
*EXITS-NORMAL XCTL TO IEHMVESY                                        *
*ERROR: NONE INITIATED IN MODULE                                      *
*TABLES/WORK AREAS: MOVE/COPY COMMUNICATIONS TABLE                    *
*ATTRUBUTES: REUSEABLE                                                *
*NOTES: PART OF LOAD MODULE IEHMVESV                                  *
*
         TITLE 'SINGLE DATA SET TRANSFER ROUTINE'
*
*3050                                                              2695
*2163                                                              UL0H
IEHMVSSY CSECT
*A662400-664800,665800-667800,671800,701800-704800             @ZA03360
*A778600-781000,855800                                         @ZA03360
*D665800,701800                                                @ZA03360
*D780800                                                       @ZM40458
*A786300                                                       @ZM40458
*A330300-333500                                                @ZA11965
*C333800                                                       @ZA11965
*
*
IEHMVESY SAVE  (14,12),T,IEHMVSRY-OZ11965                      @ZA11965
         ENTRY IEHMVESY
*
*              REGISTERS
*
PASSA    EQU   0
PASSB    EQU   1
R2       EQU   2
R3       EQU   3
ACCE     EQU   4
ACCO     EQU   5
BASE     EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
MCTABLE  EQU   12
SAVE     EQU   13
RETURN   EQU   14
LINK     EQU   15
*
*
BASESET  BALR   BASE,0
    USING  *,BASE
BB       DS    0H
         USING IEHMVV,MCTABLE
*                                  PROCESS
*                                       CALL BUILD DCB AND GO TO DADSM
    IEHPRE  (14,1),TFC,
*
         L     LINK,BUILDDCB            GET ADDRESS
         BALR  RETURN,LINK              BRANCH
*
*
   IEHPOST  (14,1),TFC,
         TM    IEHMVV20+4,X'08'        MODEL DSCB INDICATOR ON     2695
         BC    1,GOTOVESN              YES, LINK DIRECTLY TO WRAP  2695
*                                      UP OR TO FINISH VOLUME OR   2695
*                                      DSGROUP MOVE/COPY           2695
         CLI   IEHMVV72+11,X'FF'       REQUEST FROM VSSX TO GO     UL0H
*                                      DIRECTLY TO VESN            UL0H
         BE    GOTOVESN                YES, GO AROUND XCTL TO VESY UL0H
    XCTL   (2,12),EP=IEHMVESY
GOTOVESN XCTL  (2,12),EP=IEHMVESN
***** REGISTER DESIGNATION *****
BUILDDCB DC    A(IEHMVESX)
         EXTRN IEHMVESX
         DS    0D
MODNAME  DC    CL6'IEHMVE'
EOF      EQU   X'20'
         TITLE 'PRE ABORT ROUTINE'
PREABORT DS    0H
         ENTRY PREABORT
*
   BALR   BASE,0
    USING   *,BASE
   L   BASE,B
    USING   BB,BASE
         TM    IEHMVV10-4,FVOLUME  FROM VOLUME TO BE CLOSED
         BO    CLOSEF
FCLOSE   TM    IEHMVV10-4,BLANK    TO VOLUME TO BE CLOSED
         BO    CLOSET
TCLOSE   DS    0H
*
   IEHPOST  (14,1),TFC,
PREAB1   DS    0H
    BALR   BASE,0
     USING   *,BASE
    L    BASE,B
   USING   BB,BASE
               BAL  RETURN,MSG     GO TO MESSAGE WRITER
    IEHPOST  (14,1),TFC,
         OI    IEHMVV41+13,X'01'   RET CODE = 4
         L     R2,IEHMVV23             ADDR OF TO VOL LIST     @ZA11965
         TM    2(R2),X'80'             TO VOL TAPE             @ZA11965
         BNO   NOTAPE                  NO, BRANCH              @ZA11965
         TM    IEHMVV20+2,X'01'        PERM ABORT ON           @ZA11965
         BNO   NOTAPE                  NO, BRANCH              @ZA11965
         MVC   IEHMVV00(6),MODNAME     MOVE IN MODULE NAME     @ZA11965
         MVI   IEHMVV00+6,C'S'         ADD S TO MODULE NAME    @ZA11965
         MVI   IEHMVV00+7,C'K'         ADD K TO MODULE NAME    @ZA11965
         OI    IEHMVV41+13,X'04'       SET RETURN CODE = 12    @ZA11965
         B     ALLDONE                 BRANCH TO IEHMVESK      @ZA11965
NOTAPE   OI    IEHMVV20+2,MIDABORT TURN ON MIDABORT            @ZA11965
         TM    IEHMVV20,VOLUME     VOLUME OPERATION?
    BO   SINGLE
         MVC   IEHMVV00(6),MODNAME MOVE IN MODULE NAME
         MVI   IEHMVV00+6,C'S'           ADD S TO MOCULE NAME
         TM    IEHMVV20,DSGROUP
         BO    GODSG
         TM    IEHMVV20+2,EOF
         BO    GOHOME
         MVI   IEHMVV00+7,C'T'     ADD TO MODULE NAME
ALLDONE  DS    0H
         XCTL  (2,12),EPLOC=(12)
SINGLE   MVC   IEHMVV00(6),MODNAME
         MVI   IEHMVV00+6,C'S'     ADD S TO MODULE NAME
         MVI   IEHMVV00+7,C'Z'     ADD Z TO MODULE NAME
         B     ALLDONE
*
GOHOME   MVI   IEHMVV00+7,C'K'
         B     ALLDONE
GODSG    DS    0H
         MVI   IEHMVV00+7,C'H'
         B     ALLDONE
CLOSEF   DS    0H
         L     ACCE,IEHMVV30       ADDR OF FROM DCB
         MVI   UDCBITLE,X'00'          DEACTIVATE INPUT TRLR EXIT  UL0H
         CLOSE ((ACCE))
         B     FCLOSE
CLOSET   DS    0H
         L     ACCE,IEHMVV31       ADDR OF TO DCB
         MVI   UDCBOTLE,X'00'          DEACTIVATE OUTPUT TRLR EXIT UL0H
         CLOSE ((ACCE))
         B     TCLOSE
DEACTIVE EQU   X'00'                                               UL0H
VOLUME   EQU   X'02'
MIDABORT EQU   X'40'
BLANK    EQU   C' '
FVOLUME  EQU   X'80'
DSGROUP  EQU   X'10'
CATALOG  EQU   X'04'
DASD     EQU   X'20'
         TITLE 'MESSAGE HANDLER'
ONES     EQU   X'FF'
ODD      EQU   X'01'
NOTMOV   EQU   X'80'
ZERO     EQU   X'00'
UNLOAD   EQU   X'01'
UNLOADM  EQU   X'7F'
MSG      DS    0H
         STM   PASSA,LINK,200(MCTABLE)  STORE REGISTERS
    DROP   BASE
         BALR  LINK,PASSA          SET UP ADDRESSABILITY
         USING *,LINK
   L   BASE,B
         DROP  LINK                DROP BASE REGISTERS
    USING   BB,BASE
         LR    R7,RETURN
         MVI   IEHMVV00,ONES
         MVI   IEHMVV00+1,BLANK    BLANK OUT PRINT LINE
         MVC   IEHMVV00+2(120),IEHMVV00+1
         TM    IEHMVV61,ODD        DATA SET MESSAGE OR NORMAL
*                                       MESSAGE
         BO    NORMMES                       NORMAL MESSAGE
*                                            DATA SET MESSAGE
*
         MVC   IEHMVV00+1(4),IEH4       SET UP MSG NUMBER
         LA    ACCE,127
         SR    ACCO,ACCO           MAKE HIGH ORDER BIT OF
         IC    ACCO,IEHMVV61       FIRST BYTE ZERO
         NR    ACCO,ACCE
         L     R3,AIEH4DD         ADDRESS OF CODE
         LA    ACCO,0(R3,ACCO)    SET UP MESSAGE DIAGNOSTIC CODE
         MVC   IEHMVV00+5(2),0(ACCO)
         MVI   IEHMVV00+7,C'I'
         L     ACCE,MSGH                SET UP MSG HEADER
         LA    ACCO,7
         BAL   R8,MSGMOVE
*
         L     ACCE,IEHMVV21            SET UP DSNAME
         LA    ACCO,43
         BAL   R8,MSGMOVE
         TM    IEHMVV61,NOTMOV    UNLOAD MSG OR NOT MOVE
         BO    MSGUNLD                       UNLOAD MSG
         LA    ACCE,2                        NOT MOVED
MSGAA    EQU   *
         BAL   R8,MSGDMOVE              SET UP FINAL PART
         SR    ACCE,ACCE
         OI    SW,X'01'                SET SWITCH              @ZA03360
         SR    PASSA,PASSA             CLEAR                   @ZA03360
         LA    R3,IEHMVV00                                     @ZA03360
         LINK  EP=IEHMVESU                                     @ZA03360
         B     MSGCHECK(LINK)          CHECK RETURNS           @ZA03360
SECPRINT IC    ACCE,IEHMVV61                                   @ZA03360
         MVI   IEHMVV00+1,BLANK        BLANK OUT               @ZA03360
         MVC   IEHMVV00+2(120),IEHMVV00+1  PRINTAREA           @ZA03360
         BAL   R8,MSGDMOVE
         NI    SW,X'FE'                RESET SWITCH            @ZA03360
PRINTMES SR    PASSA,PASSA         TO PRINT A NORMAL MESSAGE
         LA    R3,IEHMVV00
         LINK  EP=IEHMVESU
         B     MSGCHECK(LINK)           CHECK RETURNS
MSGCHECK B     GOODMSG                  GOOR WRITE
         XCTL  EP=IEHMVESK              I/O ERROR
*
GOODMSG  TM    SW,X'01'                PRINT SECOND PART       @ZA03360
*                                      OF MSG                  @ZA03360
         BO    SECPRINT                YES                     @ZA03360
         LR    RETURN,R7               NO RETURN               @ZA03360
         MVI   IEHMVV61,ZERO       MOVE ZERO INTO MSG INDICATOR
         LM    PASSA,LINK,200(MCTABLE)
         BR    RETURN              BRANCH BACK TO CALLING ROUTINE
MSGUNLD  DS    0H
         NI    IEHMVV61,UNLOADM   TURN OFF UNLOAD MSG BIT
         LA    ACCE,0
         B     MSGAA
MSGDMOVE DS    0H
         SLL   ACCE,1
         L     R3,ADMSG          LOAD ADDRESS OF MESSAGESTART
         LH    ACCO,2(R3,ACCE)
         LH    ACCE,0(R3,ACCE)
         A     ACCE,MSGH           GET ADDRESS OF PROPER MSG
MSGMOVE  DS    0H
         LA    R9,IEHMVV00+121
MSGLOOP  CLI   0(R9),BLANK         FIND LAST NON BLANK
         BNE   MSGPL                         CHARACTER IN
         BCT   R9,MSGLOOP                    MSG AREA
MSGPL    DS    0H
         TM    SW,X'01'                PRINT SECOND PART       @ZA03360
*                                      OF MSG                  @ZA03360
         BNO   *+8                     NO BRANCH AROUND        @ZA03360
         LA    R9,IEHMVV00                                     @ZA03360
         EX    ACCO,MSMOVE         MOVE MESSAGE IN PRINTOUT AREA
         BR    R8                  BRANCH BACK TO FINISH MESSAGE
SW       DC    X'00'                                           @ZM40458
NORMMES  DS    0H
         SR    ACCE,ACCE
         IC    ACCE,IEHMVV61            GET MESSAGE CODE
         LA    ACCE,1(PASSA,ACCE)
         SLL   ACCE,1              MULTIPLY BY TWO
*
         L     R3,ANORMALM     LOAD ADDRESS OF NORMAL MESSAGE
         L     ACCE,0(R3,ACCE)    GET MESSAGE POINTER
         SR    ACCO,ACCO
         IC    ACCO,0(ACCE,PASSA)  GET MESSAGE LENGTH
         LA    ACCE,1(PASSA,ACCE)
         EX    ACCO,NORMM          MOVE MESSAGE TO PRINT AREA
         B     PRINTMES                 GO TO PRINT MESSAGE
NORMM    MVC   IEHMVV00+1(1),0(ACCE)
B        DC    A(BB)
         ENTRY MSG
IEH4     DC    CL4'IEH4'
MSMOVE   MVC   2(1,R9),0(ACCE)
MSGH     DC    A(MSGHEAD)               POINTER TO MESSAGES
ADMSG    DC    A(MSGSTART)
ANORMALM DC    A(NORMALM)
AIEH4DD  DC    A(IEH4DD)
         EXTRN MSGSTART
         EXTRN NORMALM
         EXTRN IEH4DD
         EXTRN MSGHEAD
         IEHMVV
         ORG   IEHMVV70                                            UL0H
         IEHDCBXL                                                  UL0H
         END
