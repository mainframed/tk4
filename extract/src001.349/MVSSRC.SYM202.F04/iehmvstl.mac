*FUNCTION/OPERATION: MOVE OR COPY, UNLOAD AND LOAD DATA SETS USING    *
*BASIC DIRECT ACCESS METHOD (BDAM). THE BDAM DATASETS MUST USE        *
*RELATIVE TRACK OR RELATIVE RECORD ACCESS METHODS. THE MODULE DOES A  *
*GETMAIN FOR A WORKAREA AND BUFFER. READS BDAM DATASET USING BDAM READ*
*MACRO WRITES BDAM DATASET USING BSAM WRITE CREATE MODE.              *
*ENTRY POINTS: IEHMVETL ONLY ENTRY POINT                              *
*INPUT: AT ENTRY TO THIS MODULE REG 13 POINTS TO SAVEAREA AND REG 12  *
*POINTS TO COMMUNICATION TABLE FOR MOVE COPY PROGRAM.                 *
*OUTPUT: REG. ARE THE SAME AS INPUT.                                  *
*EXTERNAL ROUTINES: IEHMVLSU, IEHMVSRM, IEHMVSRK                      *
*EXITS - NORMAL XCTL TO IEHMVSSN                                      *
*ERRORS: XCTL TO IEHMVSSN                                             *
*TABLES/WORK AREAS: IEHMVV IS COMMUNICATION TABLE WRKBUF IS WORKAREA  *
*DSECT                                                                *
IEHMVSTL CSECT
*C047400                                                       @ZA01710
*A078500                                                       @ZA01249
*D078500-078610                                                @ZA01249
*A078500-078610                                                  A52005
*D078608                                                         A52005
*C047400                                                         A45172
*A042740-042784,043100,043120                                    A50933
*D060800,064050-064150                                           A44346
*A060700-060900                                                  A44346
*                                                                 19030
*        ALL STATEMENTS FLAGGED 19030 PERTAIN TO THE BDAM-VRE     19030
*        LINE ITEM. BDAM-VRE IS SUPPORT FOR SPANNED RECORDS IN    19030
*        DIRECT DATA SETS WITH VARIABLE RECORD FORMAT             19030
*
*                                                                A27313
* 063200-063400                                                  MBVRE1
*089644,089680-089681,089716-089720                             PTM3086
*044200                                                          A32036
*                                                                A37878
* 078600-079000                                                  A41754
*047200-047600                                                   A38749
RG0      EQU   0
RG1      EQU   1
RG2      EQU   2
RG3      EQU   3
RG4      EQU   4
RG5      EQU   5
RG6      EQU   6
RG7      EQU   7
RG8      EQU   8
RG9      EQU   9
BAL9     EQU   9
BASE10   EQU   10
RG11     EQU   11
BASE12   EQU   12
RET14    EQU   14
LINK15   EQU   15
RTCD15   EQU   15
KEY      EQU   16
BLKLH    EQU   62
DSORG    EQU   26
IOBBD    EQU   28
CSWCT    EQU   14
IOFLG    EQU   44
UPTTI    EQU   X'80'
UGTLN    EQU   X'40'
INVL1    EQU   X'21'
TEST2    EQU   X'10'
IOER     EQU   X'08'
EOFM     EQU   X'04'
UNEX     EQU   X'02'
GOOD     EQU   X'00'
FIXED    EQU   X'80'
VARBL    EQU   X'40'
UNKNW    EQU   X'C0'
RECFM    EQU   36
IOBBS    EQU   68
SYNAD    EQU   57
IFLGS    EQU   44
OFFSET   EQU   46
LODE     EQU   X'02'
BLANK    EQU   C' '
DONE     EQU   X'00'
CAPREC   EQU   X'02'
UNLODE   EQU   X'01'
MIDABORT EQU   X'40'
DEACTIVE EQU   X'00'                                               UL0H
***********************************************************************
*
*                       THIS MODULE WILL MOVE OR COPY A BDAM
*                        DATASET WHICH ADDRESSES RECORDS USING
*                        RELATIVE TRACK OR RELATIVE RECORD NOTATION
*
***********************************************************************
IEHMVETL SAVE  (14,12),T,ETL-10-4-65-KCD
         USING IEHMVETL,BASE10
         USING IEHMVV,BASE12            COMMUNICATIONS REGION
         USING WRKBUF,RG11              WORK AREA
         ENTRY IEHMVETL
         EXTRN M01
         EXTRN M02
         EXTRN M03
         EXTRN M04
         EXTRN M05
         EXTRN M06
         EXTRN M07                                                 UL0H
         EXTRN M08                                               A27313
         LR    BASE10,LINK15           LOAD  BASE REGISTER         VS0H
*                                                                  UL0H
*  ACTIVATE USER INPUT TRAILER LABEL ROUTINE EXIT IF REQUIRED.     UL0H
*                                                                  UL0H
         CLI   UDCBITLE,DEACTIVE       IS ITLE INACTIVE            UL0H
         BE    NEXTCODE                YES, CONTINUE               UL0H
         MVC   UDCBITLE(4),XXITLE      ACTIVATE DCB EXLIST ENTRY PTM504
NEXTCODE DS    0H                                                  UL0H
         L     RG2,IEHMVV31            ADDRESS OF TO DCB
         MVC   SYNAD(3,RG2),SYNBSM      MOVE ADDR OF OUTPUT ERROR RTN
         IEHPRE (14,1),TF
         TM    IEHMVV20+1,LODE          IS THIS A LOAD SITUATION
         BZ    *+12
         L     RG2,IEHMVV31             SUPPLY ADDRESS OF 'TO'DCB
         B     *+8
         L     RG2,IEHMVV30             SUPPLY ADDRESS OF 'FROM' DCB
         SR    RG3,RG3
         LA    RG4,123        AMOUNT NEEDED FOR WORKAREA          19030
         IC    RG3,KEY(0,RG2)      INSERT KEY LENGTH FROM DCB
         LH    RG5,BLKLH(0,RG2)    LOAD BLKSIZE FROM DCB
         LR    RG0,RG4                  DETERMINE AMOUNT OF
         AR    RG0,RG3                  SPACE NEEDED IN
         AR    RG0,RG5                  GETMAIN AREA
         LR    RG4,RG0             SAVE GETMAIN AMOUNT          PTM2137
         GETMAIN  R,LV=(0)         GET MAIN FOR WORKAREA AND BUFFERS
         LR    RG11,RG1
        MVI   0(RG11),X'00'           CLEAR WORK AREA
         MVC   1(122,RG11),0(RG11)                                19030
         ST    RG4,GOTEN          STORE GETMAIN AMOUNT          PTM2137
         LA    RG4,123        SIZE OF WKAREA DISPLACEMENT         19030
         AR    RG1,RG4
         ST    RG1,KEYADR          STORE ADDRESS OF KEY BUFFER
         AR    RG1,RG3
         ST    RG1,BUFADR          STORE ADDRESS OF DATA BUFFER
         LA    RG1,INDECB         ADDR OF INPUT DECB              19030
         ST    RG1,IEHMVV30+4     SAVE DECB ADDR IN IEHMVV DSECT  19030
         LA    RG1,DECBOUT        ADDR OF OUTPUT DECB             19030
         ST    RG1,IEHMVV31+4     SAVE DECB ADDR IN IEHMVV DSECT  19030
         STH   RG3,KEYLGN          STORE LENGTH OF KEY
         STH   RG5,BLKSIZ          STORE LENGTH OF DATA RECORD
         B     FRSTUPDT
***********************************************************************
*
*                                THE UPDAT ROUTINE WILL BUMP THE
*                             TTI IN THE BLKREF FIELD BY ADDING ONE
*                             TO THE  I  UNTIL A NO RECORD FOUND
*                             CONDITION IS RETURNED FROM READ
*
***********************************************************************
UPDAT00  DS    0H
         L     RG2,IEHMVV30             FROM DCB
         TM    RECFM(RG2),X'C0'   TEST FOR UNDEFINED RCD FRMT      6429
         BO    *+12               RECORD FORMAT IS 'U' TYPE        6429
         TM    RECFM(RG2),FIXED         FORMAT= F ?
         BO    CONT1
         LH    RG8,TTIR     LOAD TT FROM BLKREF AND ADD
         LA    RG8,1(0,RG8)         ONE TO IT STORE UPDATED TT BACK
         STH   RG8,TTIR             IN BLKREF  RESET IREC TO ZERO
FRSTUPDT SR    RG8,RG8
         STH   RG8,IREC                SET RECORD NUMBER TO ZERO
CONT1    DS    0H
         TM    IEHMVV20+1,LODE          IS THIS A LOAD SITUATION
         BO    FIRSTON        YES,TURN ON FSTR0SW                 19030
         L     RG2,IEHMVV30             FROM DCB
         TM    RECFM(RG2),X'C0'   TEST FOR UNDEFINED RCD FRMT      6429
         BO    *+12               RECORD FORMAT IS 'U' TYPE        6429
         TM    RECFM(RG2),FIXED
         BO    READ1
         TM    RECFM(RG2),X'48'  IS RECFM VS                      19030
         BO    VREPROC        YES,GO PROCESS VS                   19030
         L     RG8,TTIR                 SET UP TO READ R ZERO RECORDS
         ST    RG8,BLKREF              OF NEXT  TRACK
         L     RG2,IEHMVV30             ADDR OF FROM DCB
         LA    RG3,INDECB
         SR    RG4,RG4
         LA    RG5,CCHH                INPUT AREA FOR R ZERO RECORD
         READ  (3),DIF,(2),(5),8,(4),BLKREF,MF=E
         BAL   RET14,CHLIOER     CHECK FOR I/O ERROR ON LABELS    UL0H
         WAIT  1,ECB=INDECB            WAIT FOR COMPLETION OF READ
         CLI   EXCD01,DONE              IS OPERATION COMPLETE
         BNE   ARWEDONE
         SR    RG6,RG6
         IC    RG6,R0                  PLACE RECORD COUNT IN REG 6
UPDAT01  DS    0H
         L     RG2,IEHMVV30
         TM    RECFM(RG2),VARBL   RECORD FORMAT U OR V?          A21645
         BZ    READ1              NO,MUST BE FIXED?              A21645
         SR    RG8,RG8
         IC    RG8,IREC            PICK UP OLD RECORD NUMBER
         LA    RG8,1(0,RG8)        ADD ONE TO RECORD NUMBER
         STC   RG8,IREC            STORE CURRENT RECORD NUMBER
READ1    MVC   BLKREF(4),TTIR
READ     LA    RG3,INDECB     ADDRESS OF DECB
         L     RG2,IEHMVV30        ADDRESS OF DCB
         L     RG4,KEYADR          ADDRESS OF KEY BUFFER
         L     RG5,BUFADR          ADDRESS OF DATA BUFFER
         TM    IEHMVV20+1,LODE          IS THIS A LOAD SITUATION
         BC    1,LOAD              SURE IS
         TM    RECFM(RG2),X'C0'   TEST FOR UNDEFINED RCD FRMT      6429
         BO    *+12               RECORD FORMAT IS 'U' TYPE        6429
         TM    RECFM(RG2),FIXED
         BO    CONT2
         LTR   RG6,RG6                 HAVE ALL RECORDS BEEN READ
         BZ    FRMT01                  YES SIR
CONT2    DS    0H
         READ  (3),DIF,(2),(5),'S',(4),BLKREF,MF=E
         BAL   RET14,CHLIOER     CHECK FOR I/O ERROR ON LABELS    UL0H
         WAIT  1,ECB=INDECB
*                                  TEST EXCEPTION CONDITION BITS
         TM    RECFM(RG2),X'C0'   TEST FOR UNDEFINED RCD FRMT      6429
         BO    CONT3              RECFM  IS  U  TYPE             A21645
         TM    RECFM(RG2),FIXED
         BZ    CONT3
         L     RG6,TTIR                 ADD ONE TO RELATIVE BLOCK
         A     RG6,ONEO                 ADDRESS.
         ST    RG6,TTIR
         B     CONT4
FIRSTON  OI    FSTR0SW,X'01'  TURN ON FSTR0SW TO INDCT FIRSTIN    19030
         B     LOAD           GO LOAD DATA SET                    19030
*
*
CONT3    DS    0H
         BCTR  RG6,0            SUBT 1 FROM RECORD COUNT
CONT4    DS    0H
         CLI   EXCD01,GOOD      IF EXCD IS ZERO WRITE THE RECORD READ
         BE    FRMT02
ARWEDONE TM    EXCD01,UPTTI            THIS SHOULD NEVER HAPPEN
         BO    UNEXPLND                PRINT UNEXPLAINED ERROR MSG
*                                FORMAT BEFOR UPDATING TTI
         TM    EXCD01,UGTLN     IF EXCD IS 40
         BO    LENERR                 WRITE ERROR MSG,
*
         TM    EXCD01,EOFM      IF EXCD IS 04 CHECK FORMAT,IF FORMAT U
         BO    FRMTO3                                            A27588
*                                MESSAGE.
         TM    EXCD01,IOER      IF EXCD IS 08 A I/O ERROR HAS BEEN
         BO    PRMERR            ENCOUNTERED
*                                WRITE ERROR MSG
         TM    EXCD01,INVL1     IF EXCD IS 20,01,21 PRINT INVALID
         BC    5,INVALD          RETURN MSG
*
         TM    EXCD01,UNEX      IF EXCD IS 02 PRINT ERROR MSG
         BO    UNEXPLND
         TM    EXCD01,TEST2     IF EXCD IS 10 TEST EXCEPTION CODE
         BO    TSTX2             BYTE 2
         B     UNCORECT           GO PRINT MESSAGE               A27313
TSTX2    TM    EXCD02,TEST2     IF  EXCD02 IS 10 GO TO END OF JOB
         BO    FINISHED
         B     INVALD           IF  EXCD02 IS OTHER THAN 10 PRINT
***********************************************************************
*
*                            WRITIT WILL WRITE THE RECORD IN THE NEW
*                              DATASET CHECK RETURN CODES AND CHECK FOR
*                              ERRORS AFTER WRITING GOOD RECORD WILL
*                              GO TO UPDATE ROUTINE
*
***********************************************************************
WRIT01   L     RG2,IEHMVV31             ADDR OF 'TO'DCB
         LA    RG2,0(0,RG2)        CLEAR HIGH ORDER BYTE
         TM    IEHMVV20+1,UNLODE        IS THIS AN UNLOAD SITUATION
         BC    1,UNLOAD            SURE IS
         TM    RECFM(RG2),X'48'    IS RECFM VS                    19030
         BO    LNTHCHK             YES, CHECK FOR ZERO LENGTH     19030
         CLI   16(RG2),X'00'      TEST FOR KEY                   A50933
         BE    WRIT02             IF NO KEY, WRITE               A50933
         CLI   INPUT,X'FF'        CHECK FOR DUMMY RECORD         A50933
         BE    WRTDUMMY           IF SO, WRITE A DUMMY RECORD    A50933
WRIT02   WRITE DECBOUT,SF,(2),INPUT,(5),MF=E
         BR    RG9
WRTDUMMY WRITE DECBOUT,SD,(2),INPUT,(5),MF=E                     A50933
         BR    RG9                                               A50933
*
*
GETLGNTH L     RG2,IEHMVV30             ADDR OF FROM DCB
*
         SR    RG5,RG5            SUBTRACT RESIDUAL COUNT FROM   A32036
         AH    RG5,BLKLH(0,RG2)   CSW FROM BLKSIZE TO COMPUTE    A32036
*                                 THE LENGTH                     A32036
         L     RG3,IOBBD(0,RG2)        *OF THE RECORD READ
         SH    RG5,CSWCT(0,RG3)                                  A27588
         L     RG2,IEHMVV31             ADDR OF 'TO' DCB
         LA    RG2,0(0,RG2)             CLEAR HIGH ORDER BYTE
         BR    RG9                      BRANCH TO WRITE ROUTINE
*
FRMT02   L     RG2,IEHMVV30             ADDR OF 'FROM' DCB
         TM    RECFM(RG2),UNKNW    IS THIS A FORMAT U DATASET
         BO    GETL                  YES GO TO COMPUTE LENGTH
         LH    RG5,BLKLH(0,RG2)        LOAD BLOCK SIZE IN REG 5
         BAL   RG9,WRIT01
         B     BACK01(15)
         SPACE 3
WRITEOK  LH    RG5,LLI                 LOAD LENGTH OF UNLOAD REC A38749
         SR    RG1,RG1                                           A38749
         IC    RG1,KEYLGN+1            GET KEYLENGTH           @ZA01710
         LA    RG1,8(RG1)              AND ADD 8 FOR MBBCCHHR    A38749
         SR    RG5,RG1                 SUBTRACT GIVES INIT BLKSZ A38749
         TM    LLI+2,CAPREC             IS THIS A CAPACITY RECORD
         BO    WRIT03                  IT IS FOR A FACT
         BAL   RG9,WRIT01     NO PRINT ERROR MESSAGE
         B     BACK01(15)
GETL     BAL   RG9,GETLGNTH
         BAL   RG9,WRIT01
         B     BACK01(15)
BACK01   B     CHEK01              TEST ROUTINES TO TEST REG 15 RETURN
         B     TRKFUL
         B     CHEK01
         EX    0,*                   CODES FROM WRITE CREATE
FRMT01   L     RG2,IEHMVV30             ADDRESS OF 'FROM' DCB
         TM    RECFM(RG2),VARBL         IS FORMAT V OR U
         BO    WRIT03                    YES
         B     UPDAT00                   NO MUST BE F
*
*
TRKFUL   TM    RECFM(RG2),VARBL         IS FORMAT V OR U
         BO    UNEXPLND                 IF V OR U FORMAT,IT INDICATES--
*                                       NO ROOM ON CURRENT TRACK TO
*                                       WRITE BLOCK; USER MUSTWRITE CAP
*                                       ACITY RECORD BEFORE REISSUING
*                                       THIS REQUEST
*
         B     CHEK01                   IF F FORMAT, IT INDICATES--
*                                       BLOCK WILL BE WRITTEN - THE CUR
*                                       RENT TRACK WILL THEN BE FULL -
*                                       THEREFORE, BRANCH TO CHECK RTN
*
***********************************************************************
*
*                                  THIS ROUTINE FOR FORMATS V AND U
*                               WRITES A CAPACITY RECORD IN R 0  AND
*                               THEN GOES TO UPDATE TTI TO NEXT TRACK
*
***********************************************************************
WRIT03   L     RG2,IEHMVV31             ADDR OF 'TO' DCB
         BCTR  RG6,0                   SUBTRACT ONE
         TM    IEHMVV20+1,UNLODE        IS THIS AN UNLOAD SITUATION
         BO    UNLD01                  YES IT IS
         TM    RECFM(RG2),X'48'    IS THE RECFM VS                19030
         BO    VSR0TST             YES                            19030
R0WRITE  WRITE DECBOUT,SZ,(RG2),MF=E   WRITE CAPACITY RECORD      19030
         CHECK DECBOUT
         TM    RECFM(RG2),X'48'    IS RECFM VS                    19030
         BO    UPDATWRT            YES,GO UPDATE NEXT WRITE PTR   19030
         B     UPDAT00
*                                  THIS IS THE CHECK ROUTINE FOR
*                               WRITE A RECORD AND RETURNS TO UPDAT01
CHEK01   CHECK DECBOUT
         B     UPDAT01
FRMTO3   L     RG2,IEHMVV30            ADDRESS OF THE FROM DCB   A27588
         TM    RECFM(RG2),UNKNW        IS RECFM UNDEFINED?       A27588
         BO    UNDEF                   YES -                     A27588
         LH    RG5,BLKLH(0,RG2)        PUT BLKSIZE IN REG2       A27588
         B     WRTEOF                                            A27588
UNDEF    BAL   RG9,GETLGNTH            GO CALCULATE BLK LENGTH   A27588
         B     WRTEOF                                            A27588
***********************************************************************
*
*                                  THIS ROUTINES WRITES AN EOF MARK
*                               RESETS  ERROR FLAGS IN  DCB AND RESET
*                               THE UNAVAILABLE SWITCH IN THE IOB
*
***********************************************************************
WRTEOF   TM    RECFM(RG2),FIXED         IS REC. FRMT. FIXED      A44346
         BO    FINISHED                 STOP COPYING             A44346
         L     RG2,IEHMVV31             ADDRESS OF TO-DCB        A44346
         MVC   SYNAD(3,RG2),SYNEOF      MOVE ADDR OF EOFRET IN DCB
         LH    RG8,BLKLH(0,RG2)         SAVE BLOCKSIZE FROM DCB
         STH   RG8,BLKOUT
         SR    RG5,RG5                                           A28895
         STH   RG5,BLKLH(0,RG2)   SET BLKSIZE TO ZERO.           A28895
         BAL   RG9,WRIT01
*
EOFRET   STM   14,4,12(13)              SAVE REGISTERS
         L     RG2,IEHMVV31             LOAD ADDR OF 'TO' DCB
         MVI   IFLGS(RG2),GOOD          RESET I/O ERR FLAGS
         MVC   SYNAD(3,RG2),SYNBSM      RESTORE ORIGINAL SYNAD ROUTINE
         LH    RG8,BLKOUT               LOAD DCB BLOCKSIZE
         STH   RG8,BLKLH(0,RG2)         RESTORE BLOCKSIZE IN DCB
         B     UPDAT01
*
PRMERR   B     INPUTERR
*
INPUTERR BAL   RG9,CLEAR           CLEAR PRINT BUFFER
         L     RG1,IEHMVV21        ADDR OF FROM DATA SET NAME
         L     RG8,AM04                 LOAD MESSAGE ADDRESS
         IC    RG7,0(RG8)
         L     RG8,0(RG8)
         B     MESG01                   I/O ERROR ON INPUT
NOTUNLD  BAL   RG9,CLEAR           CLEAR PRINT BUFFER
         L     RG1,IEHMVV21        ADDR OF FROM DATA SET NAME
         L     RG8,AM05                 LOAD ADDRESS OF MESSAGE
         IC    RG7,0(RG8)
         L     RG8,0(RG8)
         B     MESG02                   NOT AN UNLOADED DATA SET
OUTPTERR BAL   RG9,CLEAR      CLEAR PRINT BUFFER
         L     RG1,IEHMVV21+4      ADDR OF 'TO' DATA SET NAME
         L     RG8,AM06                 LOAD MESSAGE ADDRESS
         IC    RG7,0(RG8)
         L     RG8,0(RG8)
         B     MESG01
*
CLEAR    MVI   0(12),BLANK              CLEAR PRINT BUFFER
         MVC   1(120,12),0(12)
         BR    RG9
*
MESG01   EX    7,MOVER                  MOVE MESSAGE TO BUFFER
         MVC   50(44,12),0(1)           MOVE DATASET NAME TO BUFFER
         B     MESG03
UNCORMSG EX    RG7,MOVER     MOVE MSG TO BUFFER                  A27313
         MVC   62(44,BASE12),0(RG1) MOVE DATA SET NAME TO BUFFER A27313
         B     MESG03             GO PRINT MESSAGE               A27313
MESG02   EX    7,MOVER                  MOVE MESSAGE TO BUFFER
         MVC   18(44,12),0(1)           MOVE DATASET NAME TO BUFFER
MESG03   LR    RG1,RG3                 SAVE REG 3
         LR    RG3,BASE12
         LINK  EP=IEHMVESU
         LR    RG3,RG1                 RESTORE REG 3
         B     ABORT
*
UNCORECT BAL   RG9,CLEAR          CLEAR PRINT BUFFER             A27313
         L     RG8,AM08           LOAD ADDRESS OF MSG            A27313
         IC    RG7,0(RG8)         INSERT LENGTH                  A27313
         L     RG8,0(RG8)         CLEAR OUT HIGH ORDER BYTE      A27313
         L     RG1,IEHMVV21       ADDR OF PRINT BUFFER           A27313
         B     UNCORMSG      GO SET UP MSG                       A27313
*
SYNRET   B     OUTPTERR                 GO TO OUTPUT ERROR ROUTINE
*
INVALD   EX    0,*                      LOOP DUMP
*
*
UNEXPLND BAL   RG9,CLEAR                WRITE MESSAGE
         L     RG8,AM03                 LOAD MESSAGE START ADDR
         IC    RG7,0(RG8)
         L     RG8,0(RG8)
        L     RG1,IEHMVV21            ADDR OF PRINT BUFFER
         B     MESG01                   UNEXPLAINED ERROR DURING READ
*
*
ABORT    OI    IEHMVV20+2,MIDABORT      SET BIT AND TERMINATE
         B     GETOUT
*
MOVER    MVC   1(1,12),0(RG8)
*
*
LENERR   BAL   RG9,CLEAR                CLEAR PRINT BUFFER
         L     RG8,AM02                 LOAD ADDRESS OF MESSAGE
         IC    RG7,0(RG8)
         L     RG8,0(RG8)
        L     RG1,IEHMVV21            ADDR OF PRINT BUFFER
         B     MESG01                   WRONG LENGTH RECORD
LASTR    L     RG2,IEHMVV31  ADDR OF TO DCB                       19030
         TM    RECFM(RG2),X'48'  IS RECFM VS                      19030
         BNO   GETOUT        NO - GO TO FREE CORE                 19030
         TM    IEHMVV20+1,LODE  IS THIS A LOAD SITUATION          19030
         BZ    GETOUT        NO - GO TO FREE CORE                 19030
*
*    TEST TO SEE IF TRACK IS FULL OF DATA - IF SO, DATA MGMT      19030
*    WILL HAVE ADVANCED WRTTR TO NEXT TRACK AND WILL HAVE         19030
*    WRITTEN THE R0 ON PRIOR TRACK                                19030
*
         CLI   LSTWRTI,X'01' WAS LAST WRITE A DATA RECORD         19030
         BNE   FINAL         NO - GO WRITE LAST R0                19030
         CLI   WRTTR+2,X'01' IS NEXT WRITE SET FOR R1             19030
         BC    8,LOADEND     YES - BYPASS R0 WRITE                19030
FINAL    BAL   RG9,WRTR01    WRITE LAST R0 FOR LOAD               19030
LOADEND  TM    SWITCH,X'08'  IS THIS END OF EXTENT                19030
         BO    GETOUT        YES                                  19030
         BAL   RG9,WRTR01    LOOP TO WRITE R0 RECORDS             19030
         B     LOADEND       TO END OF EXTENT                     19030
*
FINISHED TM    IEHMVV20+1,UNLODE        IS THIS AN UNLOAD SITUATION
         BZ    LASTR         NOT UNLOAD SITUATION                 19030
         LA    RG0,10                   YES, SET UP PARAMETER
         L     LINK15,BWRITE            ADDR OF BWRITE ROUTINE
         BALR  RET14,LINK15             LINK TO MODULE IEHMVERM
         B     *+4(15)                  RESULTING CONDITION CODE
         B     GETOUT                   DETERMINES WHICH BRANCH
         B     OUTPTERR                 IS TAKEN
GETOUT   ST    RG11,IEHMVV82+16        SAVE AREA-ADDR. FOR ESN @ZA01249
         MVI   IEHMVV82+16,X'80' INDICATION FOR ESN              A41754
         MVC   IEHMVV82+20(4),GOTEN SAVE LENGTH OF AREA          A41754
*  IEHMVESN WILL FREEMAIN IEHMVESL'S WORKAREA AFTER CLOSE        A41754
*  BECAUSE THE CLOSEROUTINES USE THE DECB                        A41754
         IEHPOST (14,1),T
         XCTL  (2,12),EP=IEHMVESN
*
*THIS ROUTINE WILL SET UP THE OUTPUT TO CONFORM TO THE BWRITE FORMAT.
*PRECEDING EVERY RECORD WILL BE ELEVEN BYTES OF DATA,THE FIRST THREE TO
*BE USED BY BWRITE AND THE NEXT EIGHT BYTES TO BE USED BY BDAM LOAD ROU
*TINE.
*THESE ELEVEN BYTES BREAK DOWN INTO:
*      LL= LENGTH OF RECORD (BLKSIZE+KEY+8FOR MBBCCHHR)
*       I= INDICATOR FOR UNLOAD PDS AND IN BDAM WILL EQUAL ZERO
*MBBCCHHR= USED WHEN LOADING BY ABSOLUTE DISK ADDRESS
UNLD01   OI    LLI+2,X'02'
         LA    RG5,8                   CAPACITY RECORD SHOULD BE READ
UNLOAD   DS    0H
         LR    RG3,RG5        RG5= BLKSIZE
         AH    RG3,KEYLGN     ADD KEY LENGTH IF ANY
         LA    RG3,08(0,RG3)  MBBCCHHR= 8 BYTES
         STH   RG3,LLI        STORE LENGTH IN LL BYTES
         MVC   MBBCCHHR(8),BLKREF  USED WHEN LOADING BY ABSOLUTE DISK A
         LA    RG1,LLI        PASS BWRITE ADDRESS OF INPUT
         SR    RG0,RG0        OTHER THAN FIRST TIME SWITCH
         L     LINK15,BWRITE  ADDRESS OF BWRITE ROUTINE
         BALR  RET14,LINK15   GO TO BWRITE ROUTINE
         B     *+4(LINK15)    CHECK RETURN CODE FROM BWRITE
         B     GDRETRN
         B     OUTPTERR       I/O ERROR DETECTED
*
GDRETRN  SR RG8,RG8
         STC   RG8,LLI+2               RESET R0 INDICATOR
         L     RG2,IEHMVV30             FROM DCB.
         TM    RECFM(RG2),X'C0'   TEST FOR UNDEFINED RCD FRMT      6429
         BO    *+12               RECORD FORMAT IS 'U' TYPE        6429
         TM    RECFM(RG2),FIXED
         BO    READ1
         TM    RECFM(RG2),X'48'    IS RECFM VS                    19030
         BO    TESTRD        YES                                  19030
         LTR   RG6,RG6                 HAVE ALL RECORDS BEEN READ
         BP    UPDAT01                  NO
         BZ    WRIT03
         BM    UPDAT00
VREPROC  L     RG2,IEHMVV30        ADDR OF FROM DCB               19030
         MVC   SYNAD(3,RG2),SYNVRE1 PUT INPUT SYNAD ADDR          19030
*                                  INTO FROM DCB                  19030
         L     RG2,IEHMVV31       ADDR OF TO DCB                  19030
         MVC   SYNAD(3,RG2),SYNBSM  PUT OUTPUT SYNAD ADDR         19030
*                                  INTO 'TO' DCB                  19030
R0READ   LA    RG3,INDECB         DECB ADDRESS                    19030
         L     RG2,IEHMVV30       FROM DCB                        19030
         L     RG4,KEYADR    LOAD ADDR OF KEY BUFFER              19030
         L     RG5,BUFADR         BUFFER ADDR                     19030
         READ  (RG3),DIRU,(RG2),(RG5),8,0,TTIR,NXTRD,MF=E         19030
         CHECK (RG3)                                              19030
         OC    EXCD01(1),EXCD01   WAS THE READ SUCCESSFULL        19030
         BC    4,INPUTCHK         NO, GO CHECK INDICATOR BITS     19030
         B     CHKR0              GO CHECH FOR UNLOAD             19030
*
TTRUPDT  MVC   TTIR(3),NXTRD      UPDATES TTIR                    19030
VREREAD1 OC    IREC(1),IREC       R0 RECORD                       19030
         BC    8,R0READ      YES                                  19030
         LA    RG3,INDECB         DECB ADDR                       19030
         L     RG2,IEHMVV30        LOAD ADDR OF FROM DCB          19030
         L     RG4,KEYADR          LOAD ADDR OF KEY BUFFER        19030
         L     RG5,BUFADR          LOAD ADDR OF DATA BUFFER       19030
*                                                                 19030
*        READ DATA RECORD                                         19030
*                                                                 19030
         READ  (RG3),DIRU,(RG2),(RG5),'S',(RG4),TTIR,NXTRD,MF=E   19030
         BAL   RET14,CHLIOER       CHECK FOR I/O ERROR ON U/L     19030
         CHECK (RG3)                                              19030
         OC    EXCD01(1),EXCD01   WAS THE READ SUCCESSFULL        19030
         BC    4,INPUTCHK         NO, GO CHECK INDICATOR BITS     19030
CHKUNLD1 TM    IEHMVV20+1,UNLODE   CHECK FOR UNLOAD               19030
         BNO   CHKTT2              NOT UNLOAD-CHECK TT            19030
         MVC   BLKREF(4),TTIR      YES UNLOAD-PUT TTR IN BLKREF   19030
         L     RG5,BUFADR         GET ADDR OF DATA PORTION OF RECD19030
         MVC   RECSIZE(2),0(RG5)  MOVE RECORD SIZE TO RECORD SAVE 19030
         LH    RG5,RECSIZE        LOAD SIZE OF RECORD JUST READ   19030
         B     UNLOAD              GO TO UNLOAD DATA RECORD       19030
*
CHKR0    TM    IEHMVV20+1,UNLODE  IS THIS AN UNLOAD SITUATION     19030
         BO    R0SETTR            YES, SET UP FOR UNLOAD OF R0 RCD19030
         CLI   4(RG5),X'00'  ANY RCDS ON THIS TRK                 19030
         BE    CHKTT1             NO,                             19030
         B     TTRUPDT            GO READ DATA RECORD             19030
*
R0SETTR  MVC   BLKREF(4),TTIR     MOVE TTR OF RCD TO BLKREF       19030
         B     UNLD01             GO UNLOAD R0 RECORD             19030
*
CHKTT1   CLC   TTIR(2),WRTTR       COMPARE READ AND WRITE TT      19030
         BE    EQUAL         GO TO CHECK RECORD COUNT             19030
         BAL   RG9,WRTR01    GO TO WRITE R0 RECORD                19030
         B     CHKTT1        COMPARE TT AGAIN                     19030
*
EQUAL    L     RG5,BUFADR    LOAD DATA BUFFER ADDR                19030
         CLI   4(RG5),X'00'        DOES TRACK REC CNT = 0         19030
         BNE   LOADTEST           NO, TEST LOAD CONDITION         19030
         OC    NXTRD(3),NXTRD     IS THIS THE LAST RECORD OF INPUT19030
         BC    8,LOADTEST         YES, PRACESS END OF DATA        19030
         BAL   RG9,WRTR01    GO TO WRITE R0 RECORD                19030
LOADTEST TM    IEHMVV20+1,LODE     IS THIS A LOAD                 19030
         BO    LOAD                YES-GO TO LOAD                 19030
         MVC   TTIR(3),NXTRD       SET TTR TO NEXT RECORD         19030
EXTNTEND OC    NXTRD(3),NXTRD     CHECK TTR FOR ZEROS             19030
         BC    4,VREREAD1          IF NOT 0 GO TO READ DATA       19030
         L     RG2,IEHMVV31        LOAD ADDR OF TO DCB            19030
         WRITE DECBOUT,SZ,(RG2),MF=E   WRITE R0 RECORD            19030
         STC   RTCD15,SWITCH      SAVE RETURN CODE                19030
         CHECK DECBOUT                                            19030
         TM    SWITCH,X'08'       IS THIS THE END OF EXTENT       19030
         BNO   EXTNTEND           NO, LOOP TO WRITE R0 RECORDS    19030
*                                 TO THE END OF THE EXTENT        19030
         B     GETOUT              GO TO FREEMAIN                 19030
*
CHKTT2   CLC   TTIR(2),WRTTR       COMPARE READ AND WRITE TT      19030
         BE    WRITEVS             TT EQUAL-GO TO WRITE DATA      19030
         BAL   RG9,WRTR01          TT NOT EQUAL-WRITE R0          19030
         B     CHKTT2              GO TO CHECK TT AGAIN           19030
*
***********************************************************************
*
*THIS ROUTINE WILL RE-LOAD (PERFORM THE MOVE/COPY) AN UNLOADED DATA SET
*ITS INPUT CAN ONLY BE THAT WHICH WAS PREVIOUSLY UNLOADED.
*
***********************************************************************
LOAD     LA    RG1,LLI        ADDRESS OF WHERE RECORD IS TO GO
         SR    RG0,RG0        OTHER THAN FIRST CALL TO BREAD
         L     LINK15,BREAD   ADDRESS OF BREAD ROUTINE
         BALR  RET14,LINK15   GO TO BREAD(LOAD) ROUTINE
         B     *+4(LINK15)    CHECK RETURN CODE FROM BREAD
         B     GOODREAD
         B     FINISHED       END OF FILE
         B     INPUTERR       I/O ERROR
         B     NOTUNLD        THIS IS NOT AN UNLOADED DATA SET
GOODREAD MVC   BLKREF(8),MBBCCHHR
         B     WRITEOK
WRITEVS  L     RG2,IEHMVV31        LOAD ADDR OF TO DCB            19030
         LA    RG2,0(0,RG2)        CLEAR HIGH ORDER BYTE          19030
         WRITE DECBOUT,SFR,(RG2),INPUT,,WRTTR,MF=E  WRITE DATA    19030
         MVI   LSTWRTI,X'01'       SET LAST WRITE SW TO DATA      19030
         CHECK DECBOUT                                            19030
         B     LOADTEST            GO TO TEST FOR LOAD            19030
*
WRTR01   L     RG2,IEHMVV31        LOAD ADDR  OF TO DCB           19030
         WRITE DECBOUT,SZ,(RG2),MF=E  WRITE R0 RECORD             19030
         STC   RTCD15,SWITCH SAVE RETURN CODE                     19030
         CHECK DECBOUT                                            19030
         LH    RG8,WRTTR           LOAD TTR ON NEXT WRITE         19030
         LA    RG8,1(0,RG8)        ADD ONE TO TT                  19030
         STH   RG8,WRTTR          STORE TT FOR NEXT WRITE         19030
         BR    RG9                                                19030
TESTRD   OC    NXTRD(3),NXTRD      HAVE ALL RCD BEEN READ         19030
         BC    8,FINISHED  SET CODE FOR END OF UNLOADED DATA SET  19030
*                          AND GO TO WRAPUP                       19030
         TM    IEHMVV20+1,LODE     IS THIS A LODE SITUATION       19030
         BO    LOAD                YES                            19030
         MVC   TTIR(4),NXTRD       GET TTR OF NEXT RECORD TO READ 19030
         B     VREREAD1            GO READ NEXT RECORD            19030
*
VSR0TST  CLI   FSTR0SW,X'01'  IS THIS FIRST R0 TO BE PROCESSED    19030
         BNE   TSTLSWTI       NO,TEST LAST WRITE INDICATOR        19030
         MVI   FSTR0SW,X'00'  TURN OFF FIRST R0 SWITCH            19030
         B     LOAD           GO GET NEXT RECORD                  19030
*
TSTLSWTI CLI   LSTWRTI,X'01'  WAS LAST WRITE A DATA RECORD        19030
         BNE   R0WRITE        NO,GO WRITE R0 RECORD               19030
         CLI   WRTTR+2,X'01'      IS NEXT WRITE SET FOR R0        19030
         BNE   R0WRITE            NO, GO WRITE R0 RECORD          19030
         MVI   LSTWRTI,X'00'  SET LAST WRITE INDICATOR TO R0      19030
         B     LOAD           CONTINUE LOADING PROCEEDURE         19030
*
UPDATWRT LH    RG8,WRTTR      GET TRACK NUMBER                    19030
         LA    RG8,1(0,RG8)   ADD ONE TO TRACK COUNT              19030
         STH   RG8,WRTTR      UPDATE TTR FOR NEXT WRITE           19030
         MVI   LSTWRTI,X'00'  SET LAST WRITE INDICATOR TO R0      19030
         B     LOAD           CONTINUE LOADING                    19030
*
LNTHCHK  SR    RG1,RG1            CLEAR REGISTER ONE            PTM3086
         IC    RG1,KEYLGN+1       GET LENGTH OF KEY BEING USED  PTM3086
         SR    RG5,RG1            SUBTRACT KEYLENGTH FROM 'LL'    19030
         LTR   RG5,RG5        IS DATA LENGTH ZREO                 19030
         BC    8,LASTEOF      YES,WRITE IMBEDDED EOF              19030
         AR    RG5,RG1        RESTORE RECORD SIZE FOR WRITE DATA  19030
         B     WRITEVS        GO WRITE VS DATA RECORD             19030
SYNVRE1  DC    AL3(SYNREAD)        SYNAD RTN FOR VRE INPUT        19030
*        THIS IS THE INPUT SYNAD ROUTINE FOR VS RECORDS.THE CODE  19030
*        CHECKS FOR ERRORS AFTER THE READ CHECK IS ISSUED         19030
SYNREAD  BR    RET14              RETURN TO CHECK ROUTINE         19030
INPUTCHK TM    EXCD01,X'04'       IS THIS END OF FILE             19030
         BO    EOFCHEK            YES, CHECK FOR IMBEDDEED EOF    19030
         TM    EXCD01,X'08'       DID AN I/O ERROR OCCUR          19030
         BO    INPUTERR           YES PRINT MSG                   19030
         TM    EXCD01,X'80'       WAS THE RECORD FOUND            19030
         BO    UNEXPLND           NO, PRINT MSG AND ABORT         19030
         TM    EXCD01,X'40'       IS THIS A RECORD LENGTH CHECK   19030
         BO    LENERR             YES, PRINT MSG                  19030
         B     UNCORECT      AN UNCORRECTABLE ERROR OCCURED       19030
*
EOFCHEK  DS    0H                 THIS ROUTIN IS ENTERED WHEN     19030
*                                 AN EOF MARK IS READ ON THE      19030
*                   INPUT DATA SET.-THERE IS A POSSIBILITY OF     19030
*                   THERE BEING AN IMBEDDED END OF FILE WITHIN    19030
*                   THE DATA SET.- THE ONLY WAY OF KNOWING IF IT  19030
*                   IS AN IMBEDDED EOF OR THE ACTUAL END OF THE   19030
*                   DATA SET IS BY TESTING THE NEXT READ ADDRESS  19030
*                   FOR A TTR OF ZERO.-THE TTR OF ZERO'S IS AN    19030
*                   INDICATOR FROM DATA MANAGMENT THAT THE LAST   19030
*                   RECORD HAS BEEN READ.-IF THE TTR IS NOT ZERO  19030
*                   THEN A ZERO LENGTH RECORD MUST BE WRITTEN TO  19030
*                   THE OUTPUT DATA SET TO MAKE AN EOF MARK       19030
         TM    IEHMVV20+1,UNLODE  IS THIS A UNLOAD SITUATION    PTM3086
         BO    SETZERO            YES, SET UNLOAD RCD LNTH TO 0 PTM3086
         OC    NXTRD(3),NXTRD     IS THIS THE LAST RECORD       PTM3086
         BC    8,TESTTRK         YES, GO SEE IF TRKS ARE EQUAL  PTM3086
TRKCMPR  CLC   TTIR(2),WRTTR      ARE TR'S EQUAL                  19030
         BE    LASTEOF            YES, GO WRITE EOF               19030
         BAL   RG9,WRTR01         WRITE R0 FOR LAST TRK           19030
         B     TRKCMPR            GO COMPARE TRKS                 19030
LASTEOF  OC    KEYLGN(2),KEYLGN   IS KEYLENGTH ZERO             PTM3086
         BNZ   SETLNZRO           NO, SET DATA LNTH TO ZERO     PTM3086
         L     RG2,KEYADR         GET ADDRESS OF KEY            PTM3086
         XC    0(3,RG2),0(RG2)    CLEAR KEY AND RECORD LNTH     PTM3086
         L     RG2,IEHMVV31       ADDR OF TO DCB                PTM3086
         OI    KEY(RG2),X'01'     SET KEY TO ONE                PTM3086
ZROLNWRT L     RG2,IEHMVV31        ADDR OF 'TO' DCB             PTM3086
         WRITE DECBOUT,SFR,(RG2),INPUT,,WRTTR,MF=E ZERO LEN REC PTM3086
         CHECK DECBOUT                                          PTM3086
         OI    LSTWRTI,X'01'      SET LST WRT INDCTR TO DATA    PTM3086
         MVC   KEY(1,RG2),KEYLGN+1  RESET KEY LENGTH IN DCB     PTM3086
         TM    IEHMVV20+1,LODE     IS THIS A LOAD SITUATION     PTM3086
         BO    LOAD               YES,GO LOAD NEXT RCD          PTM3086
         TM    FSTR0SW+1,X'01'     IS LAST EOF WRITTEN          PTM3086
         BO    LSTWRT              YES TEST FOR LAST R0 WRITE   PTM3086
         CLI   NXTRD+2,X'00'      IS NEXT READ A R0             PTM3086
         BNE   LOADTEST           GO PROCESS NEXT RECORD        PTM3086
GOWRITSZ BAL   RG9,WRTR01         GO WRITE R0                   PTM3086
         OI    LSTWRTI,X'00'      INDICATE LAST WRITE WAS R0    PTM3086
         B     LOADTEST           GO PROCESS NEXT RECORD        PTM3086
SETLNZRO L     RG2,BUFADR         GET ADDRESS OF DATA BUFFER    PTM3086
         XC    0(2,RG2),0(RG2)    SET DATA LENGTH TO ZERO       PTM3086
         B     ZROLNWRT           GO WRITE ZERO LNTH RECORD     PTM3086
TESTTRK  CLC   TTIR(2),WRTTR      ARE THE TRKS EQUAL            PTM3086
         BE    SETLAST            YES, PROCESS LAST RECORD      PTM3086
         BAL   RG9,WRTR01         GO WRITE R0 FOR LAST TRK      PTM3086
         B     TESTTRK            CHECK TRACK EQUALITY          PTM3086
SETLAST  OI    FSTR0SW+1,X'01'    INDICATE RETURN TO LSTWRT     PTM3086
         B     LASTEOF            GO WRITE LAST LAST EOF        PTM3086
         B     LASTEOF             GO WRITE LAST ZERO LNTH RCD    19030
*
LSTWRT   CLI   WRTTR+2,X'01'      IS NEXT WRITE AN R0             19030
         BE    GETOUT             YES,DATA MNGMNT WROTE R0        19030
         L     RG2,IEHMVV31       ADDR OF 'TO' DCB                19030
         WRITE DECBOUT,SZ,(RG2),MF=E  WRITE LAST R0               19030
         CHECK DECBOUT                                            19030
         B     GETOUT               WRAPUP                        19030
*
SETZERO  SR    RG5,RG5                                            19030
         B     UNLOAD                                             19030
SYNBSM   DC    AL3(SYNRET)
SYNEOF   DC    AL3(EOFRET)
XXITLE   DC    X'03'                                               UL0H
         DC    AL3(ITLR)                                           UL0H
ZEROS    DC    F'0'                                                UL0H
UTL1DEF  DC    CL4'UTL1'                                           UL0H
BWRITE   DC    A(IEHMVERM)
         EXTRN IEHMVERM
BREAD    DC    A(IEHMVERK)
         EXTRN IEHMVERK
         DS    0H
ONEO     DC    X'00000100'
*                                                                  UL0H
*              USER   INPUT   TRAILER   LABEL   EXIT   ROUTINE     UL0H
*                                                                  UL0H
ITLR     DS    0H                                                  UL0H
OFFSET1  EQU   ITLR-IEHMVETL                                       UL0H
         LA    RG3,OFFSET1             SET UP                      UL0H
         SR    RTCD15,RG3              ADDRESSABILITY              UL0H
         LR    BASE10,RTCD15           FOR EXIT ROUTINE            UL0H
         L     RG3,0(RG1)              GET ADDR OF LABEL BUFFER    UL0H
         LTR   RG3,RG3                 ANY LABELS PRESENT          UL0H
         BNZ   IOERR                   YES, GO CHK IF I/O ERROR    UL0H
NOLABEL  DS    0H                                                  UL0H
         SR    RTCD15,RTCD15           NO LABELS,RETURN CODE ZERO  UL0H
         BR    RET14                   RETURN TO EOV               UL0H
*                                                                  UL0H
IOERR    DS    0H                                                  UL0H
         TM    8(RG1),X'80'            I/O ERR FLAG ON IN PARAMS   UL0H
         BC    14,TRKAVAIL             NO, CHECK IF U.L. TRACK     UL0H
*                                      WAS ALLOCATED FOR LABELS    UL0H
*                                                                  UL0H
LABERR   DS    0H                                                  UL0H
*                                                                  UL0H
* I/O ERROR ENCOUNTERED READING USER INPUT TRAILER LBLS, GIVE MSG  UL0H
*                                                                  UL0H
         OI    IEHMVV74+4,X'FF'   SET LABEL I/O ERROR FLAG         UL0H
         BR    RET14              RETURN TO EEOV
*                                                                  UL0H
TRKAVAIL DS    0H                                                  UL0H
         CLI   IEHMVV72+10,X'FF'       DA + NLT FLAG ON            UL0H
         BNE   CORAVAIL                NO, IS CORE ALREADY GOTTEN  UL0H
*                                                                  UL0H
* VESN WILL OUTPUT MESSAGE NO USER LBLS MOVED/COPIED. NO U.L. TRK  UL0H
*                                                                  UL0H
         MVI   IEHMVV72+14,X'FF'       TELL VESN TO PUT OUT MSG    UL0H
CANCEL   MVI   UDCBITLE,X'00'          DEACTIVATE INPUT, OUTPUT    UL0H
         MVI   UDCBOTLE,X'00'          TRAILER LBL EXITS IN DCB    UL0H
         OI    IEHMVV20+2,X'40'        SET FLAG FOR VESN MESSAGE   UL0H
*                                      DATA SET(S) NOT MOVED OR    UL0H
*                                      COPIED, ERROR SITUATION     UL0H
         B     NOLABEL                 RETURN TO EOV               UL0H
*                                                                  UL0H
CORAVAIL DS    0H                                                  UL0H
         CLC   IEHMVV72(4),ZEROS       ANY CORE AVAILABLE ALREADY  UL0H
         BNE   INITIAL                 YES, INITIALIZE POINTERS    UL0H
*                                                                  UL0H
         GETMAIN  R,LV=640             NO, GETMAIN TO SAVE LABELS  UL0H
*                                                                  UL0H
         ST    RG1,IEHMVV72+4          SAVE GOTTEN CORE ADDRESS    UL0H
*                                                                  UL0H
INITIAL  DS    0H                                                  UL0H
         CLC   0(4,RG3),UTL1DEF        FRST LABEL IN GROUP         UL0H
         BNE   SAVLABEL                NO, BYPASS 1ST LABEL SETUP  UL0H
         MVC   IEHMVV72+4(4),IEHMVV72  NO, SET PTR TO LBL SAVEAREA UL0H
         MVI   IEHMVV72+12,X'00'       INITIALIZE LBL CTR TO ZERO  UL0H
*                                                                  UL0H
SAVLABEL DS    0H                                                  UL0H
         L     RG1,IEHMVV72+4          GET ADDR OF CURRENT LBL AREAUL0H
         MVC   0(80,RG1),0(RG3)        SAVE LABEL IN GOTTEN CORE   UL0H
         LA    RG1,80(RG1)             UP PTR TO NEXT LOCATION     UL0H
         ST    RG1,IEHMVV72+4          AND SAVE ADDRESS            UL0H
         SR    RG1,RG1                 INCREMENT                   UL0H
         IC    RG1,IEHMVV72+12            LABEL                    UL0H
         LA    RG1,1(RG1)                    COUNTER               UL0H
         STC   RG1,IEHMVV72+12                  BY 1, AND SAVE     UL0H
         LA    RTCD15,4                SET RC=4 FOR MORE LABELS    UL0H
         BR    RET14                   RETURN TO EOV PROCESSING    UL0H
CHLIOER  TM    IEHMVV74+4,X'FF'   TEST LABEL I/O ERROR FLAG        UL0H
         BCR   12,RET14           NOT ON - RETURN.                 UL0H
         BAL   RG9,CLEAR          BLANK OUT PRINT BUFFER           UL0H
         L     RG8,AM07           LOAD ADDRESS OF MSG ADDRESS      UL0H
         IC    RG7,0(RG8)         LOAD MSG LENGTH                  UL0H
         L     RG8,0(RG8)         LOAD ACTUAL MSG ADDRESS          UL0H
         EX    7,MOVER            MOVE MSG TO PRINT BUFFER         UL0H
         B     MESG03             GO TO MESSAGE WRITER             UL0H
AM01     DC    A(M01)
AM02     DC    A(M02)
AM03     DC    A(M03)
AM04     DC    A(M04)
AM05     DC    A(M05)
AM06     DC    A(M06)
AM07     DC    A(M07)                                              UL0H
AM08     DC    A(M08)             ADDRESS OF UNCORRECTABLE ERROR A27313
*
*
*
         SPACE 3
WRKBUF   DSECT
CCHH     DS    F
R0       DS    CL1                     COUNT OF NUMBER OF RECORDS
COUNT    DS    CL2                     ON TRACK
         DS    CL1
SWITCH   DS    H   FOR VS RECORDS THIS IS USED TO SAVE THE        19030
*                  RETURN CODE FROM THE WRITE R0 MACRO. ITS       19030
*                  CONTENTS WILL BE TESTED FOR END OF EXTENT      19030
BLKOUT   DS    H                   WORK AREA 64 BYTES
KEYLGN   DS    H
BLKSIZ   DS    H
KEYADR   DS    F
BUFADR   DS    F
NXTRD    DS    F             FEEDBACK FROM READ                   19030
WRTTR    DS    F             FEEDBACK FROM WRITE                  19030
RECSIZE  DS    F             SAVE AREA FOR RECORD SIZE            19030
FSTR0SW  DS    H             FIRST R0 SW  0=OFF  1=ON             19030
*                            SECOND BYTE USED AS INDICATOR        19030
*                            01= LAST EOF WAS WRITTEN             19030
*                            00= IMBEDDED EOF WAS WRITTEN         19030
LSTWRTI  DS    H             LAST REC WRITTEN  0=R0  1=DATA       19030
*                            SECOND BYTE USED AS INDICATOR        19030
*                            01= KEY WAS CHANGED FOR EOF WRITE    19030
*                            00= KEY WAS NOT CHANGED              19030
INDECB   DS    CL1
EXCD01   DS    CL1
EXCD02   DS    CL2
         DS    7F                 INPUT DECB EXTENSION            19030
DECBOUT  DS    6F                 OUTPUT DECB                     19030
BLKREF   DS    2F
TTIR     DS    H
IREC     DS    H
GOTEN    DS    F
LLI      DS    CL3            LENGTH AND INDICATOR FOR BWRITE
MBBCCHHR DS    CL8            USED WHEN LOADING WITH ABSOLUTE DISK ADDR
INPUT    DS    CL1            READ IN AREA
         IEHMVV
         ORG   IEHMVV70                                            UL0H
         IEHDCBXL                                                  UL0H
*
*
         END   IEHMVSTL                                           19030
