         TITLE 'IEHMVSSX-BUILD DCB AND GO TO DADSM'
*TITLE--IEHMVSSX--RENAME AND REBLOCK FOR IEHMOVE LOAD MODULE ESV-  UL0H
*FUNCTION/OPERATION: THIS MODULE HANDLES RENAMING OF DATA SETS AND THE*
*ALLOCATION OF THE TO DATA SET. IT ALSO HANDLES REBLOCKING PARAMETERS *
*AND PREALLOCATED DATA SETS                                           *
*ENTRY POINTS: IEHMVESX                                               *
*INPUT: MOVE/COPY COMMUNICATIONS TABLE                                *
*OUTPUT: NONE                                                         *
*EXTERNAL ROUTINES: IEHMVSTC                                          *
*EXITS-NORMAL RETURN TO CALLING RETURN-IEHMVSRY                       *
*ERRORS: UNABLE TO ALLOCATE TO DATA SET                               *
*TABLES/WORK AREAS: MOVE/COPY COMMUNICATIONS TABLE                    *
*ATTRIBUTES: REUSEABLE                                                *
*NOTES: PART OF LOAD MODULE IEHMVESV                                  *
*
*
*
*        PURPOSE    THIS ROUTINE CONSTRUCTS THE PROPER DCB'S AND
*                   ACQUIRES SPACE ALLOCATION FOR THE TO DATASET.
*
*        CHART SX
*
*
*        INSERT THE CALLING SEQUENCE
IEHMVSSX CSECT
*A075300                                     @XA21512-@YA20602-@ZA30700
*C077060-077140                                                @ZA31059
*C034227,034304,038544                       @XA19907-@YA19884-@ZA28198
*D034312-034384,038520-038540                @XA19907-@YA19884-@ZA28198
*A065760-065768,065784,067800-067804                           @ZA24602
*C067805                                                       @ZA24602
*A067800-067880                              @ZA18362-@XA16955-@YA15387
*C067900                                     @ZA18362-@XA16955-@YA15387
*C056900                                     @ZA16483-@XA16944-@YA15376
*A046225-046227                              @ZA13789-@XA16035-@YA14040
*C034384,046200,046228                       @ZA13789-@XA16035-@YA14040
*D034301-034302                              @ZA13789-@XA16035-@YA14040
*A023263-023342                                                @ZA11963
*C023350,023418                                                @ZA11963
*A034301-034302                                                @ZA10937
*C034384,046200                                                @ZA11931
*A019614,020900-020960,080981                                  @ZA07399
*C020400,020800,021000-021200,021600                           @ZA07399
*C006000,034130-034140                                         @ZA07359
*A056830-056860                                                @ZA06516
*A034220-034304                                                @ZA04412
*D034220-034306                                                @ZA04412
*A065987-066001                                                @ZA04409
*C038804                                                       @ZA03353
*A046200-046244                                                @ZA01734
*D046200                                                       @ZA01734
*A067720-067760                                                @ZA01727
*D062945-062955                                                @ZA01727
*A062802-062812,062945-062955                                  @ZA01244
*A038804-038810                                                @ZA01243
*D038804-038809                                                @ZA01243
*A034346-034347                                                @ZA01238
*A056900                                                       @ZA01234
*C044950,054150                                                @ZM30153
*A033250                                                       @ZA01233
*A044920,054144                                                @ZM30153
*D033250-033550                                                @ZA01233
*A058150-058190                                                @YA02601
*D058150                                                       @YA02601
*A023086-023087                                                @YA02577
*A034306-034384,081405                                         @YA02566
*A079135                                                       @YA01681
*C023065,023075                                                @YA01681
*C079137                                                       @YA01720
*A023252-023298,080980-080982                                   YA01684
*A053850-054510                                                 YA01675
*D053850-054400                                                 YA01675
*A022920,023050-023090,033733-033787,035300-035320,035450-035730YA01193
*A038498-038514,038800-038804,041900-042260,042550-042570       YA01193
*A043345-043346,081810-081820                                   YA01193
*C034400-034520,034700-035000,042650-043050,043344              YA01193
*D023050,035300,035450-035700,038498-038500,038800-038803       YA01193
*D041900-042300,042550                                          YA01193
*A008600                                                        YA01219
*C066670                                                        YA01219
*A019600-019800,066790-066820,081400-081440                     OY01172
*D019800                                                        OY01172
*A034240-034400                                                 OY01179
*C054000-054200                                                  A45176
*D022420,023300-023900,028650-029050                            OY01192
*A029650-033910                                                 OY01178
*C023050                                                        OY01175
*C044650,044700                                                 OY01178
*A014040,079138                                                 OY01175
*D029650-034120                                                 OY01178
*A013950,022402-022432,023300-023450,029300                     OY01192
*D065800-067042                                                  A45147
*C059370                                                         A45147
*A013660,013720,059370-059395,065800-066940                      A45147
*                                                                A44334
*023450,023550,023650                                            S21042
*063400-063600,066000,066400,066630,077060,077180                S21042
*                                                               PTM6813
*066600                                                          A36065
*007800-009000,009400-010800,011600-011800,012200-012400,013920- S20201
*-017600,022400-051200,066750,067600,071800,072200,081200-084400 S20201
*085860,085920                                                   S20201
*  ALL CODE FLAGGED S20201 WAS ADDED OR CHANGED FOR              S20201
*  MERLIN/ZEUS SUPPORT                                           S20201
*                                                                A30639
*                                                                A30084
* 027870-027880                                                  A25571
*1600022200                                                        0659
*2572 005400
*1600                                                              2695
*1600036300-036500,038804-038972                                   3919
*1600                                                           PTM1219
*036800,042200,042600                                             19030
*--ANY STATEMENTS FLAGGED 19030 PERTAIN TO VARIABLE SPANNED RECORD--
*--SUPPORT FOR BDAM DATA SETS
*037000-037200                                                   A27060
*                                                                A27710
*066200                                                          A27312
*
*       VS2 RELEASE2 SU32                                      @G32DSFS
*058202-058204,077060-077140                                   @ZM44439
*058190-058393,067260-067312                                   @G32DSFS
*
*
IEHMVESX SAVE  (14,12),T,IEHMVSSX-OZ30700-SU32                 @ZA30700
         ENTRY IEHMVESX
         LR    BASE,LINK
         USING IEHMVESX,BASE
    IEHPRE  (14,1),TFC,
*
*
         USING IEHMVV,MCTABLE
*
         EXTRN IEHMVETC                                          S20201
*                                                                S20201
MOVE     EQU   X'80'                   KEYWORD 'MOVE' SPECIFIED YA01219
PDS      EQU   X'08'
EXPAND   EQU   X'04'
LOAD     EQU   X'02'
UNLOAD   EQU   X'01'
PHONYTO  EQU   X'10'
RENAME   EQU   X'04'
PREALBIT EQU   X'08'
PREALLOC EQU   X'20'
CATALOGF EQU   X'04'
VBLOCKED EQU   X'10'
FBLOCKED EQU   X'20'
VOLUME   EQU   X'02'                                             A45147
PSBIT    EQU   X'40'                                             A45147
PDSBIT   EQU   X'02'
LABALLO  EQU   X'40'                   FLAG DSCB FOR U.L. TRK ALLO UL0H
MODLDSCB EQU   X'08'                   MODEL-DSCB INDICATOR      A45176
DUMP     EQU   X'01'                                             S20201
BDAM     EQU   X'20'                                             S20201
X22      EQU   X'22'                                            OY01175
*                                                                S20201
***      REGISTER EQUATIONS ****                                 S20201
*                                                                S20201
R0       EQU   0                                                 S20201
PASSA    EQU   R0                                                S20201
*                                                                S20201
R1       EQU   1                                                 S20201
PASSB    EQU   R1                                                S20201
*                                                                S20201
R2       EQU   2                                                 S20201
*                                                                S20201
R3       EQU   3                                                 S20201
*                                                                S20201
R4       EQU   4                                                 S20201
ACCE     EQU   R4                                                S20201
*                                                                S20201
R5       EQU   5                                                 S20201
ACCO     EQU   R5                                                S20201
*                                                                S20201
R6       EQU   6                                                 S20201
M6       EQU   R6                                                S20201
*                                                                S20201
R7       EQU   7                                                 S20201
*                                                                S20201
R8       EQU   8                                                 S20201
*                                                                S20201
R9       EQU   9                                                 S20201
*                                                                S20201
R10      EQU   10                                                S20201
*                                                                S20201
R11      EQU   11                                                S20201
BASE     EQU   R11                                               S20201
*                                                                S20201
R12      EQU   12                                                S20201
MCTABLE  EQU   R12                                               S20201
*                                                                S20201
R13      EQU   13                                                S20201
SAVE     EQU   13                                                S20201
*                                                                S20201
R14      EQU   14                                                S20201
RETURN   EQU   R14                                               S20201
*                                                                S20201
R15      EQU   15                                                S20201
LINK     EQU   R15                                               S20201
*                                                                S20201
*                                                                S20201
*                                                                S20201
         EJECT
         L     R0,WALENGTH             GET LENGTH FOR GETMAIN    S20201
         GETMAIN  R,LV=(R0)            GET WORK AREA             S20201
         LR    R10,R1                  ESTABLISH ADDRESSABILITY  S20201
         USING WORKAREA,R10            TO WORKAREA               S20201
*                                                                S20201
*
         TM    IEHMVV20+3,RENAME   TEST RENAME BIT
         BO    NOV
         L     ACCE,IEHMVV22       ADDRESS OF FROM VOLUME LIST
         L     ACCO,IEHMVV23+4     ADDRESS OF ACTIVE TO VOLUME
         CLC   4(6,ACCE),4(ACCO)   COMPARE VOLUME ID OF TO & FROM VOLS
         BE    ENAMEX
         MVC   IEHMVV21+4(4),IEHMVV21 SET ADDR OF TO & FROM DS NAMES =
         B     NOV
ENAMEX   DS    0H
         TIME  ,                                                OY01172
         ST    R0,SAVEREG0             SAVE REG0               @ZA07399
         XC    DW,DW                                            OY01172
         STH   R1,DW+6                                          OY01172
         CVB   R4,DW                                            OY01172
         STH   R4,DW+6                                          OY01172
         MVC   TIMEDATE+1(2),DW+6                               YA01172
         SR    R0,R0                                            OY01172
         SLDL  R0,16                                            OY01172
         SLL   R1,12                                            OY01172
         SRDL  R0,28                                            OY01172
         STH   R1,DW+6                                          OY01172
         CVB   R4,DW                                            OY01172
         STC   R4,TIMEDATE                                      OY01172
         L     R2,IEHMVV30+8                                    OY01172
         MVC   DSCBDATE(3),56(R2)                               OY01172
         CLC   TIMEDATE(3),DSCBDATE                             OY01172
         BNL   GOON                                             OY01172
         B     MSGNOMOV                                         OY01172
GOON     L     ACCE,IEHMVV10                                    OY01172
         LA    ACCO,44(ACCE)
         ST    ACCO,IEHMVV10
         ST    ACCE,IEHMVV21+4     SAVE ADDR OF DS NAME AREA   @ZA07399
         OI    IEHMVV20+2,PHONYTO  TURN PHONYTO BIT ON
         MVC   0(8,ACCE),DUNAME   **TEMP.T TO DS NAME AREA     @ZA07399
         L     R0,SAVEREG0         RELOAD REG0                 @ZA07399
         ST    R0,DV               STORE CLOCK TIME            @ZA07399
         OI    DV+3,X'0F'          SET SIGN BYTE               @ZA07399
         UNPK  8(7,ACCE),DV(4)     UNPACK                      @ZA07399
         MVI   15(ACCE),C' '       MOVE BLANKS INTO DS NAME    @ZA07399
         MVC   16(29,ACCE),15(ACCE) AREA                       @ZA07399
         B     NOV
DUNAME   DC    CL8'**TEMP.T'                                   @ZA07399
NOV      DS    0H
*
*
         NI    IEHMVV20+4,X'F7'   TURN OFF MODEL DSCB SWITCH       0659
         L     R2,IEHMVV30+8           ADDRESS OF FROM DSCB      S20201
         USING FT1DSCB,R2              ESTABLISH ADDRESSABILITY  S20201
         LA    R3,DEVCHAR              ESTABLISH ADDRESSABILITY  A45176
         USING UNITCHAR,R3             FROM-DEV CHARACTERISTICS  A45176
         L     R4,IEHMVV30+12          PTR TO FROM-DDNAME        A45176
         LA    R4,0(R4)                ZERO HIGH-ORDER BYTE      A45176
         XC    0(40,R3),0(R3)          ZERO BOTH DEVTYPE AREAS   A45176
         DEVTYPE (R4),(R3),DEVTAB      GET FROM-DEVTYPE          A45176
         CLC   DS1EXT1+2(8),ZEROS      CHECK FOR MODEL-DSCB      A45176
         BNE   NOTMOD                  NO MODEL-DSCB             A45176
         CLC   DS1SCALO+1(3),ZEROS     CHECK FOR MODEL-DSCB      A45176
         BNE   NOTMOD                  NO MODEL DSCB             A45176
         CLI   DEVTYPE+2,DASD          TEST FROM-DEVICE DASD     A45176
         BE    SETMOD                  YES, MUST BE MODEL DSCB   A45176
         TM    IEHMVV20+1,LOAD         DATA SET TO BE LOADED     A45176
         BNO   NOTMOD                  NO, MUST BE TAPE INPUT    A45176
SETMOD   OI    IEHMVV20+4,MODLDSCB     INDICATE MODEL-DSCB       A45176
         B     AFTERSCK                                          A45176
NOTMOD   DS    0H                                                S21042
         TM    DS1DSORG,PDSBIT         IS THIS A PDS             S20201
         BO    YPDS                    *B IF YES                 S20201
AFTERSCK MVC   IEHMVV00(100),0(R2)     MOVE DSCB                 S20201
         LR    R2,MCTABLE              TEMPORARY ADDRESS THE     S20201
*                                      MOVED DSCB WITH R2        S20201
         XC    DS1LSTAR(10),DS1LSTAR   BLANK OUT                 S20201
         XC    DADDQ+4(83),DADDQ+4                               S20201
         L     R2,IEHMVV30+8           RE-ADDRESS FROM DSCB      S20201
         MVC   DADPQ-IECSDSL1(4,MCTABLE),DADPQ COPY PRIM QUANT   S20201
*                                      INTO NEW DSCB             S20201
         MVI   UNLOADSW,X'00'          SWITCH INITIALY OFF      YA01193
         L     R3,IEHMVV23+4           PTR TO TO VOLLIST         S20201
         CLI   2(R3),DASD              TO DEVICE DIRECT ACCESS   S20201
         BE    SETVOLSR                IF SO, CALCULATE SPACE   YA01193
*                                      IF NOT TO DIRECT ACCESS, YA01193
         TM    IEHMVV20+1,UNLOAD         AND NOT TO BE UNLOADED,YA01193
         BNO   YTAPE2                  BYPASS SPACE-CALC.      @YA01681
         TM    IEHMVV20+1,LOAD+UNLOAD  FOR A LOAD-UNLOAD        YA01193
         BO    YTAPE2                  NO SPACE-VALUE REQ.     @YA01681
         OI    UNLOADSW,X'80'          INDICATE SPACE ONLY REQRDYA01193*
                                         FOR UNLOAD-INFORMATION YA01193
         TM    IEHMVV20+4,MODLDSCB     TEST IF MODEL-DSCB      @YA02577
         BO    YTAPE2                  YES                     @YA02577
SETVOLSR EQU   *                                                YA01193
         LA    R3,4(R3)                BUMP TO VOLSER            S20201
         MVC   DS1DSSN-DS1DSNAM(6,MCTABLE),0(R3)                 S20201
*                                      UPDATE DS SERIAL IN NEW   S20201
*                                      DSCB                      S20201
****************************************************************
*                                                              *
*  IF COPY, PUT IN CURRENT DATE AS CREATION DATE IN TO-DSCB    *
*  IF MOVE, KEEP THE OLD CREATION DATE IN TO-DSCB              *
*                                                              *
****************************************************************
         L     R4,IEHMVV22             ADDR OF FROM VOL LIST   @ZA11963
         LA    R4,0(R4)                CLEAR HIGH ORDER BYTE   @ZA11963
         TM    2(R4),X'80'             FROM TAPE               @ZA11963
         BNO   NOTAPE                  NO, BRANCH              @ZA11963
         TM    IEHMVV20+1,LOAD         LOAD FUNCTION           @ZA11963
         BO    NOTAPE                  YES, BRANCH             @ZA11963
         MVI   52(R12),X'01'           SET VOL SEQ = 1         @ZA11963
         B     TIME                    GET CURRENT DATE        @ZA11963
NOTAPE   TM    IEHMVV20,X'80'          MOVE OPERATION          @ZA11963
         BO    MOVE1                   BRANCH IF YES            YA01684
         ST    R1,SAVEREG1             SAVE REG1 FOR TIME MACRO YA01684
TIME     TIME  ,                       GET CURRENT DATE        @ZA11963
         XC    DV,DV                   CLEAR CONVERSION AREA    YA01684
         LR    R4,R1                   GET DATE IN REG4         YA01684
         STH   R1,DV+6                 STORE 'DDDC'             YA01684
         CVB   R1,DV                   CONVERT IT TO BINARY     YA01684
         STH   R1,DV+6                 STORE IT IN ALIGNED AREA YA01684
         MVC   54(2,R12),DV+6          MOVE IT INTO NEW DSCB    YA01684
         SRDL  R4,4                    PUT X'F' INTO REG5       YA01684
         SRL   R4,12                   REMOVE 'DDD' FROM REG4   YA01684
         SLDL  R4,4                    PUT 'YYF' INTO REG4      YA01684
         STH   R4,DV+6                 STORE 'YYF' INTO AREA    YA01684
         CVB   R1,DV                   CONVERT IT TO BINARY     YA01684
         STC   R1,53(R12)              STORE IT INTO NEW DSCB   YA01684
         L     R1,SAVEREG1             RESET REG1               YA01684
MOVE1    EQU   *                                                YA01684
         L     R4,IEHMVV21+4           PTR TO NEW DSNAME         A45176
         MVC   IEHMVV00(44),0(R4)      PUT IN NEW DSCB           A45176
         TM    IEHMVV20+4,MODLDSCB     TEST FOR MODEL-DSCB       A45176
         BO    CALLALLO                BRANCH TO ALLOCATE IF ONE A45176
         EJECT
REGUPROC EQU   *                                                 S20201
*****************************************************************S20201
*                                                                S20201
*   SPACE ALLOCATION ALGORITHM -                                 S20201
*                                                                S20201
*     THE FOLLOWING SECTION OF CODE DETERMINES THE NUMBER OF     S20201
*     BYTES OF AUXILIAIRY STORAGE NEEDED FOR THE TO DATASET.     S20201
*     FROM THIS NUMBER,THE NUMBER OF TRACKS NEEDED CAN BE        S20201
*     DERIVED                                                    S20201
*                                                                S20201
*     FOR BDAM DATASETS,ALL EXTENTS (MAX 16) WILL BE TAKEN INTO  S20201
*     ACCOUNT                                                    S20201
*                                                                S20201
*     FOR NON-BDAM DATASETS ONLY THE PRIMARY ALLOCATION,WHICH    S20201
*     EXISTS IN UP TO 5 EXTENTS,WILL BE USED TO DETERMINE THE    S20201
*     NUMBER OF TRACKS IN THE FROM DATASET. AS SOON AS AN EXTENT S20201
*     IS FOUND THAT CORRESPONDS TO THE SECONDARY ALLOCATION      S20201
*     AMOUNT,WE STOP COUNTING THE NUMBER OF TRACKS AND CYLINDERS S20201
*     IN THE FROM DATASET, EXCEPT WHEN THIS EXTENT IS THE FIRST. S20201
*         THIS WILL GIVE THE USER THE ABILITY TO RECLAIM UNUSED  S20201
*     SPACE IN A PDS,(CAUSED BY REPLACING MEMBERS) MERELY BY     S20201
*     MOVING THE DATASET THUS GETTING ONLY THE ORIGINAL          S20201
*     PRIMARY ALLOCATION BACK.                                   S20201
*                                                                S20201
*     ONCE WE HAVE ACCUMULATED THE NUMBER OF TRACKS OCCUPIED     S20201
*     BY THE FROM DATASET,WE MULTIPLY THIS NUMBER BY THE TRACK-  S20201
*     CAPACITY OF THE FROM DEVICE,GIVING US THE APPROXIMATE      S20201
*     NUMBER OF BYTES IN THE FROM DATASET                        S20201
*                                                                S20201
*     DIVIDING THIS NUMBER BY THE SUM OF KEYLENGTH,BLOCKSIZE AND S20201
*     DEVICE OVERHEAD WILL GIVE US THE APPROXIMATE NUMBER OF     S20201
*     RECORDS IN THE FROM DATASET.                               S20201
*          SOMETIMES,LIKE IN THE CASE OF THE SYS1.SYSJOBQE DATA- S20201
*     SET OR IN USER DEFINED ACCESS METHODS,THE BLOCKSIZE AND    S20201
*     KEYLENGTHWILL NOT BE DEFINED IN THE FROM DATASETS' DSCB.   S20201
*     FOR THESE SITUATIONS,THE BLOCKSIZE IS DEFAULTED TO FIT THE S20201
*     THE AVERAGE BLOCKSIZE OF AN AVERAGE JOB QUEUE.             S20201
*                                                                S20201
*     IT SHOULD BE NOTED,HOWEVER,THAT THIS NUMBER OF RECORDS     S20201
*     IS IN NO WAY REALISTIC FOR DATASETS WITH UNDEFINED OR VAR- S20201
*     IABLE RECORD FORMATS. THE BLKSIZE GIVEN IN THE DSCB OF     S20201
*     THESE DATASETS IS THE MAXIMUM SIZE,SO THE NUMBER OF        S20201
*     RECORDS WILL BE TO LOW. THIS WOULD ONLY IMPACT THE RESULT  S20201
*     WHEN THE 'TO' DEVICE OVERHEAD IS NOT THE SAME AS THE'FROM' S20201
*     OVERHEAD. THEREFORE WE NEUTRALIZE THIS DIFFERENCE BY       S20201
*     MULTIPLYING THE SUM OF MAXIMUM BLOCKSIZE,KEYLENGTH AND     S20201
*     OVERHEAD BY THE QUOTIENT OF 'FROM' AND 'TO' OVERHEAD,PRIOR S20201
*     TO DIVIDING THE NUMBER OF BYTES BY IT.    WHEN WE ARE      S20201
*     COPYING TO A DEVICE WITH A BIGGER OVERHEAD,THE RESULTING   S20201
*     AVERAGE BLOCKSIZE WILL BE SMALLER THAN THE ORIGINAL MAXI-  S20201
*     MUM,THUS BOOSTING UP THE RESULTING NUMBER OF RECORDS,AND   S20201
*     THUS THE RESULTING NMBR OF TRACKS,WHICH SHOULD BE ENOUGH   S20201
*     TO MAKE UP FOR THE DIFFERENCE IN OVERHEAD.                 S20201
*        WHEN WE ARE COPYING BETWEEN THE SAME TYPES OF DEVICES,  S20201
*     THE AVERAGE BLOCKLENGTH WILL BE THE SAME AS THE MAXIMUM    S20201
*     BLOCKLENGTH ,WHICH CAN'T DO ANY HARM,AS THE OVERHEAD ARE   S20201
*     EQUAL TO.                                                  S20201
*        WHEN COPYING TO A DEVICE WITH A SMALLER OVERHEAD,THE    S20201
*     AVERAGE BLOCKSIZE WILL BE GREATER THAN THE MAX BLOCKSIZE,  S20201
*     WHICH RESULTS IN A LOWER NUMBER OF TRACKS FOR THE NEW DATA S20201
*     SET THAN IT WOULD HAVE BEEN WITH THE MAX BLOCKSIZE.        S20201
*                                                                S20201
*     THE NUMBER OF RECORDS THUS DERIVED,IS MULTIPLIED BY THE    S20201
*     SUM OF KEYLENGTH,BLOCKSIZE AND DEVICE OVERHEAD OF THE 'TO' S20201
*     DATASET,TAKING INTO CONSIDERATION ANY DE-BLOCKING          S20201
*     CONSTRAINTS,POSED UPON THE OPERATION DUE TO TRACK CAPACITY S20201
*     INCOMPATABILITY.(ALSO THE NUMBER OF RECORDS IS ADJUSTED    S20201
*     INCASE OF DE-BLOCKING).   THE PRODUCT OF THIS MULTIPLI-    S20201
*     CATION IS THE APPROXIMATE NUMBER OF BYTES IN THE NEW DATA- S20201
*     SET.                                                       S20201
*                                                                S20201
*     DIVIDING THIS NUMBER OF BYTES BY THE TRACK CAPACITY OF     S20201
*     THE 'TO' DEVICE ,WILL GIVE USE THE DESIRED NUMBER OF TRACKSS20201
*     TO BE USED IN ALLOCATION.                                  S20201
*                                                                S20201
*     THE SAME PROCEDURE IS FOLLOWED FOR THE SECONDARY ALLOCATIONS20201
*     AMOUNT,AFTER CONVERTING THE AMOUNT TO TRACKS IF APPROPRIATES20201
*                                                                S20201
*     NOTE: THIS ALGORITHM WAS REVISED AND REWRITTEN IN ITS ENTI-S20201
*     RETY FOR RELEASE 20.2 RECORD READY SUPPORT                 S20201
*                                                                S20201
*****************************************************************S20201
         SPACE 2
         TM    IEHMVV20+1,LOAD         IS DATASET BEING LOADED   S20201
         BO    CALLALLO                *B IF YES-USE F1 DSCB OF  S20201
*                                      ORIGINAL DATASET TO ALLOC-S20201
*                                      ATE THE NEW DATASET       S20201
*                                                                S20201
         TM    DS1DSORG,ISAM           IS THIS AN ISAM DATASET   S20201
         BO    GOODALLO                *B IF YES LIKE ALL IS OK  S20201
*                                                                S20201
ISAM     EQU   X'80'                                             S20201
*                                                                S20201
         L     R4,IEHMVV31+8           GET PTR TO'TO'DDNAME      S20201
         LA    R4,0(R4)                ZERO HI-BYTE              S20201
         DEVTYPE (R4),DEVCHAR2,DEVTAB   GET ANOTHER 5 WORDS      S20201
         MVI   DEFSW,X'00'             CLEAR SWITCH              S20201
         LA    R3,DEVCHAR              ADDRESS FROM DEVTYPE      A45176
         CLI   DEVTYPE+2,DASD          FROM DEVICE DA            S20201
         BNE   GETDEFLT                 USE DEFAULT ALLOCATION   A44334
*                                      PRIMARY ALLOCATION AMOUNT S20201
         XC    SECALLO,SECALLO         ZERO SAVE AREA FOR SECON- S20201
*                                      DARY ALLOCATION           S20201
         CLC   DS1PTRDS(5),ZEROS       TEST FOR FORMAT3-DSCB    OY01178
         BE    DSCBNOF3                IF NO,SKIP F3-ROUTINE    OY01178
         MVC   CAMLIST(4),CAMLST1      MOVE SEEK MODE BYTES     OY01178
         LA    R14,DS1PTRDS            PTR TO F3 CCHHR ADDRESS  OY01178
         L     R15,IEHMVV22+4          PTR TO FROM VOLUME LIST  OY01178
         LA    R15,4(R15)              PTR TO FROM-VOLUME SERNR OY01178
         LA    R0,FT3DSCB              PTR TO OBTAINAREA        OY01178
         STM   R14,R0,CAMLIST+4        STORE PTRS IN CAMLIST    OY01178
         LA    R1,CAMLIST              PTR TO CAMLIST           OY01178
         OBTAIN (R1)                   OBTAIN FORMAT3-DSCB      OY01178
         LTR   R15,R15                 TEST F3-DSCB FOUND       OY01178
         BNZ   BALLO                   MSG,IF NOT               OY01178
         MVC   EXTENTS(30),DS1EXT1     MOVE 3 F1-EXTENTS        OY01178
         MVC   EXTENTS+70(91),EXTENTS+71 ELIMINATE F3-INDICATOR OY01178
         B     DSCBSECA                                         OY01178
DSCBNOF3 MVC   EXTENTS(31),DS1EXT1     MOVE EXTENTS+ZERO BYTE   OY01178
DSCBSECA EQU   *                                                OY01178
*                                                               OY01178
*  COMPUTE NUMBER OF TRACKS OF 'FROM' SELONDARY ALLOCATION      OY01178
*                                                               OY01178
         TM    DS1SCALO,X'80'          TEST TYPE OF SEC ALLOC   OY01178
         BZ    DSCBSCAN                FOR ABS/BLKS SEC ALLOC=0 OY01178
         MVC   SECSAVE+1(3),DS1SCALO+1 GET SEC ALLOC QUANTITY   OY01178
         MVI   SECSAVE,X'00'                                    OY01178
         TM    DS1SCALO,X'40'          TEST ALLOCATION IN       OY01178
         BZ    DSCBBDAM                CYLINDERS OR TRACKS      OY01178
         L     R4,SECSAVE              IF IN CYLINDERS,         OY01178
         MH    R4,TRPCYL               MULTIPLY BY NR OF        OY01178
         ST    R4,SECSAVE              TRACKS PER CYLINDER.     OY01178
DSCBBDAM TM    DS1DSORG,BDAM           TEST FOR BDAM DATA SET   OY01178
         BO    DSCBSCAN                IF NOT BDAM,USE          OY01178
         MVC   SECALLO(4),SECSAVE      THIS VALUE TO COMPARE    OY01178
DSCBSCAN EQU   *                                                OY01178
*                                                               OY01178
*  SCAN EXTENTS TO DEFINE TOTAL 'FROM' PRIMARY ALLOCATION.      OY01178
*  WHEN AN EXTENT IS SMALLER THAN OR EQUAL TO THE SECONDARY     OY01178
*  ALLOCATION,IT WILL BE CONSIDERED AS A SECONDARY ALLOCATION,  OY01178
*  EXCEPT FOR THE FIRST EXTENT. THE SUM OF THE SPACES USED BY   OY01178
*  THE OTHER EXTENTS WILL BE CONSIDERED AS PRIMARY ALLOCATION.  OY01178
*  NOTE: FOR BDAM DATA SETS,OR IF THE ALLOCATION WAS 'ABS' OR   OY01178
*  'BLK',ALL EXTENTS WILL BE USED AS PRIMARY (BECAUSE'SECALLO'  OY01178
*  HAS BEEN SET TO ZERO).                                       OY01178
*                                                               OY01178
         LA    R15,EXTENTS                                      OY01178
         MVI   FIRSTEXT,X'FF'          INDICATE FIRST EXTENT    OY01178
         SR    R7,R7                   PRIMARY ALLOC INIT ZERO  OY01178
         TM    EXTENTS,X'40'           TEST FIRST EXT USER LABELOY01178
         BNO   DSCBNOUL                IF USER LABEL TRACK,     OY01178
DSCBEXTS LA    R15,10(R15)             SKIP THIS EXTENT         OY01178
DSCBNOUL CLI   0(R15),X'00'            CHECK EXTENT USED        OY01178
         BE    DSCBCONV                IF NOT,NO MORE EXTENTS   OY01178
         TM    DEVCHAR+17,X'02'        TEST FOR 2321            OY01178
         BO    DEV2321                 SPECIAL ROUTINE FOR 2321 OY01178
         LH    R6,6(R15)               GET UPPER CC             OY01178
         SH    R6,2(R15)               SUBTRACT LOWER CC        OY01178
         MH    R6,TRPCYL               CONVERT CYLS TO TRACKS   OY01178
         AH    R6,8(R15)               ADD UPPER TT             OY01178
         SH    R6,4(R15)               SUBTRACT LOWER TT        OY01178
         LA    R6,1(R6)                ADD ONE FOR FIRST TRACK  OY01178
*                                                               OY01178
BACK2321 AR    R7,R6                   ADD EXTENT TO PRIMARY   @ZA01233
         MVI   FIRSTEXT,X'00'          RESET FIRST EXTENT SWITCHOY01178
         B     DSCBEXTS                SCAN NEXT EXTENT         OY01178
DSCBCONV ST    R7,PRIME                SAVE TOTAL PRIMARY ALLOC OY01178
         TM    IEHMVV20+1,UNLOAD       TEST FOR UNLOAD          YA01193
         BNO   CONVDSCB                IF NOT, GO AROUND        YA01193
         L     R1,IEHMVV10             ELSE, - RESERVE SPACE IN YA01193
         MH    R7,TRLENGTH               THE PERMANENT WORK AREAYA01193
         ST    R7,0(R1)                - SET NBR BYTES IN PRIME YA01193
         XC    4(4,R1),4(R1)           - ZERO FOR SEC IF TRK-CYLYA01193
         TM    DS1SCALO,X'80'          TEST TYPE OF SEC ALLOC   YA01193
         BZ    SETPTR                  USE ZERO, OR             YA01193
         L     R7,SECSAVE              CALCULATE NBR OF SECOND. YA01193
         MH    R7,TRLENGTH               BYTES                  YA01193
         ST    R7,4(R1)                  AND SAVE               YA01193
SETPTR   ST    R1,IEHMVV85             SAVE POINTER TO BE       YA01193*
                                         PASSED TO IEHMVSSY     YA01193
         LA    R1,8(R1)                UPDATE POINTER TO THE    YA01193
         ST    R1,IEHMVV10               PERMANENT WORK AREA    YA01193
         TM    UNLOADSW,X'80'          IF SPACE ONLY NEEDED IN  YA01193
         BO    YTAPE1                    UNLOADED DATA SET, SKIPYA01193*
                                         REST OF CALCULATIONS   YA01193
CONVDSCB EQU   *                                                YA01193
         TM    DS1DSORG,BDAM           TEST FOR BDAM            OY01178
         BNO   GETBLKSZ                                         OY01178
         MVC   SECALLO+1(3),SECSAVE+1  IF BDAM GET SEC ALLOC    OY01178
         TM    DS1RECFM,X'40'          RECFM V OR U            @ZA07359
         BO    FINISH                  YES TRACK INTEGRITY     @ZA07359
GETBLKSZ CLC   DEVCHAR+2(1),DEVCHAR2+2 TEST DEV CLASS          @ZA04412
         BNE   NOTEQUAL                NOT EQUAL               @ZA28198
         CLI   DEVCHAR+3,X'09'         FROM 3330-1             @ZA04412
         BE    TESTTO                  YES                     @ZA04412
         CLI   DEVCHAR+3,X'0D'         FROM 3330-11            @ZA04412
         BNE   EQUAL                   TEST IF EQUAL           @ZA04412
TESTTO   CLI   DEVCHAR2+3,X'09'        TO 3330-1               @ZA04412
         BE    FINISH                  YES                     @ZA04412
         CLI   DEVCHAR2+3,X'0D'        TO 3330-11              @ZA04412
         BE    FINISH                  YES                     @ZA04412
EQUAL    CLC   DEVCHAR+3(1),DEVCHAR2+3 TO AND FROM EQUAL       @ZA04412
         BE    FINISH                  YES                     @ZA04412
NOTEQUAL EQU   *                       NO                      @ZA28198
* CLACULATE NUMBER OF BYTES (DATA + GAPS) REQUIRED FOR A NORMAL YA01193
* RECORD (IN R1), AND FOR THE LAST RECORD ON A TRACK (IN R8)    YA01193
         SR    R1,R1                                            YA01193
         IC    R1,DS1KEYL              KEYLENGTH                YA01193
         AH    R1,DS1BLKL                        + BLKSIZE      YA01193
         BNZ   SETR8                   IF NOT ZERO, USE THESE   YA01193
         LH    R1,DEFBLK               ELSE, SET DEFAULT VALUE  YA01193
*                                      TO SUIT JOBQUEUE          S20201
         MVI   DEFSW,X'FF'             INDICATE DEFAULT USED     S20201
SETR8    LR    R8,R1                   USE SAME VALUE FOR LAST  YA01193
         TM    OVHIND,X'01'            TEST FOR TOLERANCE FACTORYA01193
         BZ    ADDOVH1                 BRANCH AROUND IF NOT     YA01193*
                                                      APPLICABLEYA01193
         LH    R5,TOLERANC             GET TOLERANCE FACTOR     YA01193
         MR    R0,R5                   (BLKSIZE + KEYLEN) * TOL YA01193
         SRDA  R0,9                    DIVIDE BY 512            YA01193
ADDOVH1  TM    OVHIND,X'08'            2-BYTE OVERHEAD           S20201
         BO    BIGOVHD1                *B IF YES                 S20201
         SR    R6,R6                   CLEAR FOR INSERT          S20201
         IC    R6,OVHCNT               GET ONE BYTE OVH          S20201
         AR    R1,R6                   ADD FOR NORMAL RECORD    YA01193
         IC    R6,OVHCNT+1             FOR LAST RECORD          YA01193
         B     ADD2                                             YA01193
BIGOVHD1 LH    R6,OVHCNT               GET TWO BYTES OVERHEAD    S20201
ADD1     AR    R1,R6                   ADD OVERHEAD TO BLKSIZE   S20201
ADD2     AR    R8,R6                   ADD OVHD FOR LAST RECORD YA01193
         CLI   DS1KEYL,X'00'           TEST FOR KEY             YA01193
         BNE   ENDOVHD                 IF WITH KEY NO ADJUSTMENTYA01193
         SR    R6,R6                   IF WITHOUT KEY,          YA01193
         IC    R6,KEYOVHD              - GET OVERHEAD FOR KEY   YA01193
         SR    R1,R6                   - SUBTRACT FOR NORMAL    YA01193
         SR    R8,R6                   - SUBTRACT FOR LAST REC. YA01193
ENDOVHD  EQU   *                                                YA01193
*                                                                S20201
         CLI   DEFSW,X'FF'             WAS DEFAULT BLKSIZE USED  S20201
         BE    NOADJUST                *B IF YES-SKIP RECFM CHECKS20201
*                                                                S20201
*                                                                S20201
         TM    DS1RECFM,X'40'          CHECK RECFM               S20201
         BZ    NOADJUST                *B IF FIXED(BLOCKED)      S20201
         TM    DS1RECFM,X'48'          CHECK RECFM               S20201
         BO    NOADJUST                *B IF VARIABLE SPANNED    S20201
         CLI   DEVTYPE+2,DASD          FROM DEVICE DA            S20201
         BNE   NOADJUST                *B IF NOT                 S20201
*                                                                S20201
*                                      ADJUST THE TOTAL MAXIMUM  S20201
*                                      BLOCKSIZE FOR VARIABLE    S20201
*                                      AND UNDEFINED RECORDS     S20201
*                                                                S20201
         TM    OVHIND,X'08'            2-BYTE OVERHEAD           S20201
         BO    BIGOVHD3                *B IF YES                 S20201
         XR    R0,R0                   CLEAR FOR INSERT          S20201
         IC    R0,OVHCNT               GET 1-BYTE OVERHEAD       S20201
         MR    R0,R0                   GET 1-ST PART OF ADJUST-  S20201
*                                      MENT DONE:MULTIPLY        S20201
         B     PART2                   *B TO DO SECOND PART      S20201
BIGOVHD3 MH    R1,OVHCNT               MULTIPLY WITH 2-BYTE OVHD S20201
PART2    LA    R3,DEVCHAR2             TEMPORARY ADDRESS 'TO'    S20201
*                                      DEVICE CHARACTERISTICS    S20201
         XR    R0,R0                   CLEAR FOR DIVIDE          S20201
         TM    OVHIND,X'08'            2-BYTE OVERHEAD           S20201
         BO    BIGOVHD4                *B IF YES                 S20201
         XR    R5,R5                   CLEAR FOR INSERT          S20201
         IC    R5,OVHCNT               GET 1-BYTE OVERHEAD       S20201
         B     DIVIDE                  *B TO DIVIDE              S20201
BIGOVHD4 LH    R5,OVHCNT               GET 2-BYTE OVERHEAD       S20201
DIVIDE   DR    R0,R5                   DIVIDE BY 'TO' OVHD       S20201
         LTR   R0,R0                   ANY REMAINDER             S20201
         BZ    *+8                     *B IF NOT                 S20201
         LA    R1,1(R1)                ADD ONE FOR REMAINDER     S20201
         LA    R3,DEVCHAR              RE-ADDRESS FROM DEVICE    S20201
*                                      CHARACTERISTICS           S20201
NOADJUST EQU   *                                                 S20201
*                                                                S20201
*                                      R1 CONTAINS THE AVERAGE   S20201
*                                      NUMBER OF BYTES THAT A    S20201
*                                      BLOCK NEEDS IN THE FROM   S20201
*                                      DATASET                   S20201
         TM    DS1RECFM,X'20'          TRACKOVERFLOW             A44334
         BO    MIXED                   YES CONTINUE              A44334
         TM    DS1RECFM,X'80'          FIXED LENGTH              A44334
         BZ    MIXED                   NO, CONTINUE              A44334
* FOR A FIXED LENGTH DATASET THE NUMBER OF RECORDS PER TRACK     A44334
* IS CALCULATED AND MULTIPLIED WITH THE NUMBER OF TRACKS TO      A44334
* FIND THE EXACT NUMBER OF BLOCKS IN THE FROM DATASET            A44334
         L     R6,PRIME                CALCULATE THE NUMBER      A44334
         BAL   R9,FROMRECS             OF RECORDS IN THE         A44334
         ST    R5,PRIME                PRIMARY ALLOCATION        A44334
         L     R6,SECALLO              YES, CALCULATE THE NUMBER A44334
         BAL   R9,FROMRECS             OF RECORDS IN THE         A44334
         B     STORESEC                SECONDARY ALLOCATION      A44334
MIXED    DS    0H                      STANDARD CALCULATION      A44334
         L     R4,PRIME                GO TO MULTIPLY TRACKS     A44334
         BAL   R9,NOFIXED              WITH TRACKCAP AND DIVIDE  A44334
         ST    R5,PRIME                BY REAL BLOCKSIZE         A44334
         L     R4,SECALLO              GET NBR OF SECONDARY      A44334
         BAL   R9,NOFIXED              TRACKS TO CALCULATE NBR   A44334
         B     STORESEC                OF SECONDARY BLOCKS       A44334
FROMRECS DS    0H                                                A44334
         LH    R5,TRLENGTH             GET TRACK LENGTH         YA01193
         SR    R5,R8                   ADJUST FOR LAST RECORD   YA01193
         AR    R5,R1                   (REPLACE BY NORMAL)      YA01193
         SR    R4,R4                   PREPARE FOR DIVIDE       YA01193
         DR    R4,R1                   NBR OF BLOCKS PER TRACK   A44334
         LA    R5,1(R5)                ADD ONE                 @ZA28198
         MR    R4,R6                   FIND SUM OF BLOCKS        A44334
         BR    R9                      RETURN TO SAVE THE NBR    A44334
NOFIXED  DS    0H                                                A44334
         MH    R4,TRACKCAP             CALC TOTAL NBR OF BYTES   A44334
         SRDA  R4,32                   NBR OF BYTES FOR THE      A44334
*                                      DS AS A DOUBLE LENGTH     A44334
*                                      SIGNED INTEGER            A44334
         DR    R4,R1                   FIND NBR OF BLOCKS        A44334
         LTR   R5,R5                   ZERO ALLOCATION           A44334
         BNZ   NOREM                   NO, CONTINUE              A44334
         LTR   R4,R4                   YES TEST FOR REMAINDER    A44334
         BZ    NOREM                   NO, ZERO ALLOCATION       A44334
         LA    R5,1(R5)                YES ALLOCATE MINIMUM      A44334
NOREM    BR    R9                      RETURN TO SAVE AMOUNT     A44334
GETDEFLT EQU   *                                                YA01193
         TM    UNLOADSW,X'80'          IF SPACE OMLY NEEDED IN  YA01193
         BO    YTAPE1                    UNLOADED D.S., DEFAULTSYA01193*
                                       ARE SET IN IEHMVSSY      YA01193
         MVI   IEHMVV10-4,X'04'        RELEASE UNUSED SPACE    @ZA03353
         LH    R1,DEVCHAR2+12          TRACKCAPACITY FOR TO    @ZA01243
*                                       DEVICE                 @ZA01243
         SLL   R1,16                   CLEAR HIGH ORDER BYTES  @ZA01243
         SRL   R1,16                                           @ZA01243
         L     R5,DEFAULT1             DEFAULT PRIMARY ALLOC   @ZA01243
         AR    R5,R1                   ADD TRACKCAPACITY       @ZA01243
         BCTR  R5,0                     MINUS ONE TO ROUND UP    A44334
         SR    R4,R4                    CLEAR TO DIVIDE          A44334
         DR    R4,R1                    GIVES NUMBER TRKS PRIME  A44334
         ST    R5,PRIME                 SAVE PRIME ALLOCATION    A44334
         L     R5,DEFAULT2              DEFAULT SECONDARY ALLOC  A44334
         AR    R5,R1                    ADD TRACKCAPACITY        A44334
         BCTR  R5,0                     MINUS ONE TO ROUND UP    A44334
         SR    R4,R4                    CLEAR TO DIVIDE          A44334
         DR    R4,R1                    DIVIDED BY TRACKCAPACITY A44334
*                                       GIVES NUMBER TRACKS SEC  A44334
         ST    R5,SECALLO               SAVE SECONDARY ALLOC     A44334
         MVI   DS1SCALO-IECSDSL1(MCTABLE),X'80'                  S20201
*                                      INDICATE THAT IT WILL BE  S20201
*                                      ALLOCATED IN UNITS        S20201
*                                      OF TRACKS                 S20201
         B     FINISH                                            A44334
STORESEC ST    R5,SECALLO              SAVE NMBR OF BLOCKS SECONDS20201
*                                                                S20201
*                                                                S20201
         LA    R3,DEVCHAR2             ADDRESS 'TO' DEVICE       S20201
*                                      CHARACERISTICS FROM NOW ONS20201
*                                                                S20201
         TM    IEHMVV10-4,FBLOCKED     FIXED DEBLOCKING FORCED   S20201
         BZ    TESTVB                  *B IF NOT                 S20201
         LH    R4,DS1LRECL             YES-USE LRECL AS NEW      S20201
*                                      BLOCK LENGTH              S20201
         B     TESTDEF                                           S20201
TESTVB   TM    IEHMVV10-4,VBLOCKED     VARIABLE DEBLOCKING FORCEDS20201
         BZ    GETBLK                  *B IF NOT                 S20201
         LH    R4,IEHMVV10-10          YES-USE MAX LRECL AS NEW  S20201
*                                      BLOCK LENGTH              S20201
         B     TESTDEF                                           S20201
GETBLK   LH    R4,DS1BLKL              USE OLD BLOCKSIZE         S20201
TESTDEF  LTR   R4,R4                   WAS IT DEFINED            S20201
         BNZ   GETBF                   *B IF YES                 S20201
         LH    R4,DEFBLK               NO-USE ARBITRARY DEFAULT  S20201
*                                      TO SUIT JOBQUEUE          S20201
GETBF    EQU   *                                                 S20201
*                                      DETERMINE THE DE-BLOCKING S20201
*                                      FACTOR (NEEDED TO BE ABLE S20201
*                                      TO CALCULATE THE NEW NMBR S20201
*                                      OF RECORDS AFTER DE-      S20201
*                                      BLOCKING)                 S20201
*                                                                S20201
         LH    R1,DS1BLKL              GET ORIGINAL BLKSIZE      S20201
         LTR   R1,R1                   WAS IT DEFINED            S20201
         BNZ   CLEAR0                  *B IF YES                 S20201
         LH    R1,DEFBLK               NO-GET ARBITRARY DEFAULT  S20201
*                                      TO SUIT JOBQUEUE          S20201
CLEAR0   SR    R0,R0                   CLEAR FOR DIVIDE          S20201
         DR    R0,R4                   GET DEBLOCKING FACTOR     S20201
         LTR   R0,R0                   ANY REMAINDER             S20201
         BZ    XMIT                    *B IF NOT                 S20201
         LA    R1,1(R1)                ADD ONE FOR REMAINDER     S20201
*                                                                S20201
*                                      R1 HAS THE DEBLOCKING     S20201
*                                      FACTOR=THE NUMBER TO MUL- S20201
*                                      TIPLY THE NUMBERS OF REC- S20201
*                                      ORDS WITH                 S20201
*                                                                S20201
XMIT     LR    R5,R1                   R5 DOES,TOO               S20201
         M     R0,PRIME                MULTIPLY PRIME AMOUNT     S20201
         ST    R1,PRIME                SAVE NEW NUMBER OF RECS   S20201
         LR    R1,R5                   GET MULTIPLICAND BACK     S20201
         M     R0,SECALLO              MULTIPLY SECONDARY AMNT   S20201
         ST    R1,SECALLO              SAVE                      S20201
         SR    R1,R1                                            YA01193
         IC    R1,DS1KEYL              KEYLENGTH                YA01193
         AR    R1,R4                             + BLKSIZE      YA01193
         LR    R8,R1                   USE SAME FOR LAST RECORD YA01193
         TM    OVHIND,X'01'            TEST FOR TOLERANCE FACTORYA01193
         BZ    ADDOVH2                 BRANCH AROUND IF NOT     YA01193*
                                                      APPLICABLEYA01193
         LH    R5,TOLERANC             GET TOLERANCE FACTOR     YA01193
         MR    R0,R5                   (BLKSIZE + KEYLEN) * TOL YA01193
         SRDA  R0,9                    DIVIDE BY 512            YA01193
ADDOVH2  TM    OVHIND,X'08'            2-BYTE OVERHEAD           S20201
         BO    BIGOVHD2                *B IF YES                 S20201
         SR    R6,R6                   CLEAR FOR INSERT          S20201
         IC    R6,OVHCNT               GET ONE BYTE OVHD         S20201
         AR    R1,R6                   ADD OVHD FOR NORMAL RECRDYA01193
         IC    R6,OVHCNT+1             FOR LAST RECORD          YA01193
         B     ADD3                      GO TO ADD OVERHEAD     YA01193
BIGOVHD2 LH    R6,OVHCNT               GET 2 BYTES OVHD          S20201
         AR    R1,R6                   ADD OVHD FOR NORMAL RECRDYA01193
ADD3     AR    R8,R6                   ADD OVHD FOR LAST RECORD YA01193
         CLI   DS1KEYL,X'00'           TEST FOR KEY             YA01193
         BNE   ENDOVHD2                IF WITH KEY NO ADJUSTMENTYA01193
         SR    R6,R6                   IF WITHOUT KEY,          YA01193
         IC    R6,KEYOVHD              - GET OVERHEAD FOR KEY   YA01193
         SR    R1,R6                   - SUBTRACT FOR NORMAL    YA01193
         SR    R8,R6                   - SUBTRACT FOR LAST RECRDYA01193
ENDOVHD2 EQU   *                                                YA01193
*                                                                S20201
         TM    DS1RECFM,X'20'          TRACKOVERFLOW             A44334
         BO    NORMPROC                YES NORMAL PROCEDURE      A44334
         TM    DS1RECFM,X'80'          FIXED RECORDS             A44334
         BZ    NORMPROC                NO, NORMAL PROCEDURE      A44334
* FOR RECFM=F OR FB THE NUMBER OF RECEIVING TRACKS IS CALCULATED A44334
* BY DIVIDING THE NUMBER OF RECORDS IN THE DATASET BY THE NUMBER A44334
* OF RECORDS PER RECEIVING TRACK                                 A44334
         L     R7,PRIME                 GET NUMBER OF BLOCKS     A44334
         BAL   R9,BLKTRK               FIND NBR OF TRACKS        A44334
         TM    DS1DSORG,X'02'          PARTITIONED DATASET       A44334
         BZ    *+8                     NO  CONTINUE              A44334
         LA    R7,1(R7)                 YES ADD 1 FOR DIRECTORY  A44334
         ST    R7,PRIME                 NBR OF TRACKS REQUIRED   A44334
         L     R7,SECALLO              GET NBR OF BLOCKS         A44334
         BAL   R9,BLKTRK               CALCULATE SECONDARY       A44334
         ST    R7,SECALLO               ALLOCATION IN TRACKS     A44334
         B     FINISH                  CONTINUE                  A44334
NORMPROC DS    0H                                                A44334
         L     R5,PRIME                GET NBR OF BLOCKS         A44334
         BAL   R9,NORMCALC             FIND NBR OF TRACKS        A44334
         ST    R5,PRIME                FOR PRIMARY ALLOCATION    A44334
         L     R5,SECALLO              GET NBR OF BLOCKS         A44334
         BAL   R9,NORMCALC             FIND NBR OF TRACKS        A44334
         ST    R5,SECALLO              FOR SECONDARY ALLOCATION  A44334
         B     FINISH                  CONTINUE                  A44334
BLKTRK   DS    0H                      TRACK CALC FOR F OR FB    A44334
         LH    R5,TRLENGTH             GET TRACK LENGTH         YA01193
         SR    R5,R8                   ADJUST FOR LAST RECORD   YA01193
         AR    R5,R1                   (REPLACE BY NORMAL)      YA01193
         SR    R4,R4                   PREPARE FOR DIVIDE        A44334
         DR    R4,R1                   NBR OF BLOCKS PER TRACK   A44334
         LTR   R5,R5                   LET THIS NUMBER BE        A44334
         BNZ   *+8                     ONE AT LEAST              A44334
         LA    R5,1(R5)                                          A44334
         SR    R6,R6                    PREPARE FOR DIVIDE       A44334
         DR    R6,R5                    NUMBER OF TRACKS REQUIRE A44334
         LTR   R6,R6                    ANY REMAINDER            A44334
         BCR   8,R9                     NO,CONTINUE              A44334
         LA    R7,1(R7)                 ADD ONE FOR REMAINDER    A44334
         BR    R9                      RETURN TO STORE AMOUNT    A44334
NORMCALC DS    0H                                                A44334
         LH    R0,TRACKCAP             GET TRACKCAPACITY         A44334
         MR    R4,R1                   GET NUMBER OF BYTES       S20201
         DR    R4,R0                   GET NMBR OF TRACKS        S20201
         LTR   R4,R4                   ANY REMAINDER             S20201
         BZ    *+8                     *B IF NOT                 S20201
         LA    R5,1(R5)                ADD ONE FOR REMAINDER     S20201
         BR    R9                      RETURN TO STORE AMOUNT    A44334
*                                                                S20201
*                                                                S20201
*                                                                S20201
*                                                                S20201
DEV2321  EQU   *                                                 S20201
*        BUILD A FAKE DEB FOR USE BY THE RESIDENT CCHH TO TTR    S20201
*        CONVERSION ROUTINE                                      S20201
*                                                                S20201
         MVI   CONVINP,X'00'           CLEAR CONVERSION-         S20201
         MVC   CONVINP+1(31),CONVINP   WORKAREA                  S20201
         MVI   CONVINP,X'01'           SET M=1                   S20201
         MVC   CONVINP+7(4),6(R15)     INPUT CCHH FOR CONVERSIONOY01178
         MVC   DEBSTRCC(8),2(R15)      SET FAKE'S EXTENTS       OY01178
         MVI   DEBUCBAD+14,X'7F'       SET NUMBER OF TRACKS-     S20201
         MVI   DEBUCBAD+15,X'FF'       HIGH                      S20201
         L     R1,IEHMVV30+12          PTR TO TIOT ENTRY         S20201
         L     R1,12(0,R1)             PTR TO SUB-UCB            S20201
         SR    R8,R8                    CLEAR REGISTER         @ZM30153
         ICM   R8,3,0(R1)               BACK                   @ZM30153
         SLL   R8,4                    TO                        S20201
         LA    R8,56(R8)               MAIN                      S20201
         SR    R1,R8                   UCB                       S20201
         ST    R1,DEBUCBAD             STORE IN FAKE DEB         S20201
         STM   R10,R13,CONVSAVE        SAVE BASE REGISTERS       S20201
         STM   R2,R5,CONVSVE2          SAVE DATA REGISTERS       S20201
         ST    R15,SAVE15              SAVE EXTENT PTR           S20201
         LA    R2,CONVINP+4            INPUT CCHH FOR CONVERSION S20201
         LA    R1,CONVSAVE             PTR TO FAKED DEB          S20201
         L     R15,CVTPTR              PTR TO CVT                S20201
         USING CVT,R15                 ESTABLISH ADDRESSABILITY  S20201
         L     R15,CVTPRLTV            EP TO CONVERT RTN         S20201
         DROP R15                                                S20201
         BALR  R14,R15                 BRANCH TO CONVERT ROUTINE S20201
         LM    R10,R13,0(R1)           RESTORE BASES             S20201
         LM    R2,R5,CONVSVE2          RESTORE DATA REGS         S20201
         L     R15,SAVE15              RESTORE EXTENT PTR        S20201
         SRL   R0,16                   SHIFT OUT RN OF TTRN      S20201
         LR    R6,R0                   GET TT IN PROPER REG      S20201
         LA    R6,1(R6)                UP IT BY ONE              S20201
         B     BACK2321                *B TO REGULAR PROCEDURE   S20201
*                                                                S20201
*                                                                S20201
*                                                                S20201
FINISH   LR    R2,MCTABLE              ADDRESS THE NEW DSCB      S20201
         TM    DS1SCALO,X'C0'          ALLOCATED IN CYLS       @ZA13789
         BNO   NOCYL                   NO                      @ZA01734
         XR    R4,R4                   CLEAR REG4              @ZA01734
         L     R5,PRIME                PRIMARY FROM ALLOC      @ZA01734
         LH    R1,DEVCHAR2+10          TO DEV TRACK CAPACITY   @ZA01734
         DR    R4,R1                   DIV PRIMARY WITH        @ZA01734
*                                      TO TRACK CAPACITY       @ZA01734
         LTR   R4,R4                   ANY REMAINDER           @ZA13789
         BZ    AROUND                  NO, BRANCH              @ZA13789
         LA    R5,1(R5)                ADD ONE FOR REMAINDER   @ZA13789
AROUND   MH    R5,DEVCHAR2+10          MULT R5 WITH TO DEV     @ZA13789
*                                      TRACK CAPACITY          @ZA01734
         ST    R5,PRIME                NEW PRIMARY ALLOC       @ZA01734
NOCYL    LR    R2,MCTABLE              ADDRESS THE NEW DSCB    @ZA10937
         MVC   DADPQ(4),PRIME          PUT PRIMARY QUANTITY    @ZA01734
*                                      IN TO DSCB              @ZA01734
         L     R5,SECALLO              GET SEC ALLOC AMOUNT      S20201
         TM    DS1SCALO,X'80'          TEST ALLOC TYPE           S20201
         BZ    CALLALLO                *B IF ABSOLUTE OR BLOCKS  S20201
         TM    DS1SCALO,X'40'          TEST IF CYLS              S20201
         BZ    SETQ                    *B IF NOT-SET TRACKS      S20201
         XR    R4,R4                   CLEAR FOR DIVIDE          S20201
         LH    R1,TRPCYL               GET TRACKS PER CYL        S20201
         DR    R4,R1                   DIVIDE TO GET CYLS        S20201
         LTR   R4,R4                   ANY REMAINDER             S20201
         BZ    *+8                     *B IF NOT                 S20201
         LA    R5,1(R5)                ADD ONE FOR REMAINDER     S20201
         ST    R5,SECALLO              SET CYLS BACK             S20201
SETQ     MVC   DS1SCALO+1(3),SECALLO+1 SET IN NEW DSCB           S20201
*                                                                S20201
*                                                                S20201
*
CALLALLO DS    0H
*
         LR    R2,MCTABLE              ADDRESS THE NEW DSCB      S20201
         TM    IEHMVV10-4,FBLOCKED ANY FIXED BLOCK REBLOCKING
         BO    CCHBLK
         TM    IEHMVV10-4,VBLOCKED ANY VARIABLE BLOCKED REBLOCKING
         BZ    RTNXX               IF NO BRANCH AROUND REBLOCKING ROUTN
         MVC   DS1BLKL(2),IEHMVV10-10   MOVE IN MAX LRECL AS NEW
         B     RTNXX                       BLOCKING FACTOR
CCHBLK   MVC   DS1BLKL(2),DS1LRECL MOVE IN LRECL FFORMAT AS BLOCK FACTR
RTNXX    DS    0H
*
*
****************************************************************
*                                                              *
*  TEST IF 'TO'-VOLUME IS MOUNTED, IF NOT PRINT FOLLOWING MSG  *
*  IEH416I DATA SET XXX NOT MOVED/COPIED BECAUSE UNABLE TO     *
*  ALLOCATE TO DATA SET                                        *
*                                                              *
****************************************************************
*
*
         L     R1,IEHMVV31+8           GET PTR TO DDNAME (TIOT) YA01675
         BCTR  R1,R0                   BACK 2 BYTES TO POINT TO YA01675
         BCTR  R1,R0                   NO. OF DEVICES REQUESTED YA01675
         SR    R7,R7                   GET NO OF DEVICES        YA01675
         IC    R7,0(R1)                REQUESTED.               YA01675
         LA    R1,14(R1)               STEP TO FIRST DEV. ENTRY YA01675
         L     R8,IEHMVV23+4           ADDRESS OF 'TO'-VOL LIST YA01675
FINDUCB  EQU   *                                                YA01675
         SR    R6,R6                    CLEAR REGISTER         @ZM30153
         ICM   R6,3,2(R1)               LOAD(SUB-) UCB ADDRESS @ZM30153
         CLI   3(R8),X'05'             TEST IF UNIT IS 2321     YA01675
         BE    SUBUCB                  IF 2321 USE SUBUCB       YA01675
         CLC   28(6,R6),4(R8)          ELSE, COMPARE UCB-VOLSER YA01675*
                                       WITH 'TO'-VOLSER.        YA01675
         BE    UCBFOUND                IF FOUND, VOL IS MOUNTED YA01675
NEXTUCB  EQU   *                                                YA01675
         LA    R1,4(R1)                POINT TO NEXT DEV. ENTRY YA01675
         BCT   R7,FINDUCB              IF AN UCB TO COMPARE     YA01675
         B     BALLO                   IF LAST, VOL NOT MOUNTED YA01675
SUBUCB   EQU   *                                                YA01675
         CLC   4(6,R6),4(R8)           COMPARE VOLSER IN SUBUCB YA01675*
                                       WITH 'TO'-VOLSER.        YA01675
         BNE   NEXTUCB                 IF NOT EQUAL BRANCH      YA01675
****************************************************************
UCBFOUND EQU   *                                                YA01675
         ST    R6,IEHMVV31             STORE (SUB-) UCB ADDRESS YA01675
         LA    R1,IEHMVV31
DDUCB    EQU   14
*
*
DIRECT   LA    R0,IEHMVV00             GET ADDRESS OF DSCB         2695
*
*
         LA    ACCE,2048           MAKE SIGN NEGATIVE
         SLL   ACCE,20             PLACE A ONE IN HIGH ORDER BIT
         OR    R0,ACCE            ONE BIT INFORMS ALLOCATE THAT ENTRY
*                                 WAS MADE FROM A UTILITY PROGRAM
*
         TM    IEHMVV20+3,X'04'        RENAME SPEC.            @ZA06516
         BNO   *+8                     NO BRANCH AROUND        @ZA06516
         NI    IEHMVV00+93,X'EB'  TURN OFF SECUR BITS          @ZA16483
         TM    IEHMVV20+1,UNLOAD
         BO    OKUN
NOWTRY   DS    0H
         TM    IEHMVV20+4,X'08'        MODEL DSCB INDICATOR ON     2695
         BC    1,NOWTRY1               YES, BYPASS MOVING NO.EXT'S 2695
         MVI   DS1NOEPV,X'01'     MOVE NO OF EXTENTS ON VOL INTO DSCB
NOWTRY1  DS    0H                                                  UL0H
         L     ACCO,IEHMVV30+8         GET FROM DSCB ADDRESS       UL0H
         CLI   105(ACCO),X'40'         U.L. TRK FOR FROM DATA SET  UL0H
         BE    TRKALLO                  YES, ASK FOR U.L. TRK      UL0H
*                            FROM DEVICE MAY HAVE BEEN U.L. TAPE   UL0H
         CLC   IEHMVV72(4),ZEROS        WERE HEADER LABELS SAVED   UL0H
         BNE   TRKALLO                  YES, ASK FOR U.L. TRK      UL0H
         B     ALLO                     NO, NORMAL ALLOCATE        UL0H
TRKALLO  DS    0H                                                  UL0H
         MVI   DS1EXT1,LABALLO         YES, ALLOCATE U.L. TRACK    UL0H
*                                      FOR 'TO' DATA SET           UL0H
ALLO     DS    0H
         TM    IEHMVV10-4,X'08'    IS THE DATA SET UNMOVABLE     A99999
         BZ    ALLO1               NO.                           A99999
         OI    DS1DSORG,X'01'      TURN DSCB UNMOVABLE BIT ON.   A99999
         TM    IEHMVV20+3,X'08'    PREALLOCATED DATA SET ?       S21042
         BO    DUPNAME+6           YES, BYPASS ALLOCATION        S21042
ALLO1    TM    82(R12),X'02'           'TO' DATA SET A PDS     @YA02601
         BNO   ALLO2                   NO ALLOCATE             @YA02601
         CLC   112(4,R12),ZEROS        YES ANY DIR BLOCKS      @YA02601
         BNE   ALLO2                   YES ALLOCATE            @YA02601
         CLC   108(4,R12),ZEROS        NO PRIM QUANTITY ZERO   @YA02601
         BE    ALLO2                   YES ALLOCATE            @YA02601
         MVI   IEHMVV61,X'34'          NO PRINT MSG IEH432I    @YA02601
         B     DIFMES                  GO AND PRINT            @YA02601
ALLO2    EQU   *                                               @G32DSFS
**                                                             @G32DSFS
** IF COPYAUTH IS SPECIFIED ,BUT THE FROM DATA SET IS NOT      @G32DSFS
** RACF DEFINED THEN NO MODEL WILL BE DONE. HOWEVER            @G32DSFS
** IF ADSP IS SPECIFIED THEN A RACF DEFINE WILL                @G32DSFS
** BE DONE. IF NEITHER, GO TO ALLOCATE WITHOUT RACF ACTION.    @G32DSFS
**                                                             @G32DSFS
         TM    IEHMVV20+3,X'08'    PREALLOCATED DATA SET ?     @ZM44439
         BO    DUPNAME+6           YES, BYPASS ALLOCATION      @ZM44439
         TM    IEHMVV20+5,COPYAUTH     COPYAUTH SPECIFIED      @G32DSFS
         BZ    ADSPCHK                 NO,BR TO ADSP CHECK     @G32DSFS
         TM    DS1DSIND,DS1RACDF       IS FROM D.S. RACF DEF   @G32DSFS
         BO    AUTHCHK                 YES,CHECK AUTHORIZATION @G32DSFS
**                                                             @G32DSFS
** CHECK THE JSCB FOR AUTO DATA SET PROTECT                    @G32DSFS
**                                                             @G32DSFS
ADSPCHK  EQU   *                       CHECK FOR ADSP          @G32DSFS
         USING CVT,R15                                         @G32DSFS
         L     R15,CVTPTR              PTR TO CVT              @G32DSFS
         L     R15,CVTTCBP             PTR TO TCB WORDS        @G32DSFS
         L     R15,4(R15)              CURRENT TCB PTR         @G32DSFS
         USING TCB,R15                                         @G32DSFS
         L     R15,TCBJSCB             PTR TO JSCB             @G32DSFS
         USING IEZJSCB,R15                                     @G32DSFS
         L     R15,JSCBACT             CURRENT JSCB            @G32DSFS
         NI    NEWDSCB1(R12),X'FF'-DS1RACDF RESET RACF IND.    @G32DSFS
         TM    JSCBFBYT,JSCBADSP       AUTO DATA SET PROTECT   @G32DSFS
         BZ    ALLO2B                  NO,GO TO ALLOCATE       @G32DSFS
         DROP  R15                                             @G32DSFS
**                                                             @G32DSFS
** RACF DEFINE                                                 @G32DSFS
**                                                             @G32DSFS
DEFINE   EQU   *                       RACF DEFINE             @G32DSFS
         L     R7,TODS                 SET TO DATA SET AND     @G32DSFS
         L     R15,TOVOL               VOLUMN ADDR.-4          @G32DSFS
         LA    R15,4(R15)              ACTIVE TO VOL           @G32DSFS
         MVC   RACDEF(LRACDEF),MRACDEF MOVE PARM LIST          @G32DSFS
         RACDEF ENTITY=((R7)),VOLSER=((R15)),MF=(E,RACDEF)     @G32DSFS
         OI    NEWDSCB1(R12),DS1RACDF  DSCB1 RACF DEFINED      @G32DSFS
         LTR   R15,R15                 WAS DEFINE SUCCESSFUL   @G32DSFS
         BZ    ALLO2A                  YES,BR TO ALLOCATE      @G32DSFS
         CH    R15,RACRET16            VALID RETURN CODE       @G32DSFS
         BH    BALLO1                  NO BR,UNABLE TO ALLO MSG@G32DSFS
DIFMESA  EQU   *                       RET=8,NOT AUTHORIZED    @G32DSFS
         SRL   R15,2                   DIVIDE RET CODE BY 4    @G32DSFS
         LA    R15,RACFMSGT-1(R15)     ADDR OF ERROR CODE      @G32DSFS
         MVC   IEHMVV61(1),0(R15)      ERROR CODE TO WORK AREA @G32DSFS
         B     DIFMES                  BRANCH TO ERROR MSG     @G32DSFS
**                                                             @G32DSFS
** CHECK FOR ALTER AUTHORIZATION TO THE MODEL DATA SET         @G32DSFS
**                                                             @G32DSFS
AUTHCHK  EQU   *                                               @G32DSFS
         L     R7,FROMDS               SET FROM DATA SET AND-  @G32DSFS
         L     R15,FROMVOL             VOLUME -4               @G32DSFS
         LA    R15,4(R15)              FIRST TO VOL PTR        @G32DSFS
         MVC   RACHECK(LRACHECK),MRACHECK MOVE PARM LIST       @G32DSFS
         RACHECK ATTR=ALTER,ENTITY=((R7)), AUTHORIZATION CHECK @G32DSFS*
               VOLSER=((R15)),MF=(E,RACHECK)                   @G32DSFS
         LTR   R15,R15                 RET = 0,SUCCESSFUL      @G32DSFS
         BZ    RACMODEL                YES,DO MODEL            @G32DSFS
         CH    R15,RACRET16            VALID RETURN CODE       @G32DSFS
         BH    BALLO1                  NO,UNABLE TO ALLO MSG   @G32DSFS
         CH    R15,RACRET4             DS NOT RACF DEFINED     @G32DSFS
         BNE   DIFMESA                 NO,ISSUE ERROR MSG      @G32DSFS
         LA    R15,16                  YES,FORCE MODEL DATA-   @G32DSFS
         B     DIFMESA                 SET NOT DEFINED MSG.    @G32DSFS
**                                                             @G32DSFS
** DO RACF MODEL                                               @G32DSFS
**                                                             @G32DSFS
RACMODEL EQU   *                                               @G32DSFS
         L     R7,FROMDS               ADDR OF FROM DATA SET   @G32DSFS
         L     R2,FROMVOL              ADDR OF FROM VOLUMN -4  @G32DSFS
         LA    R2,4(R2)                FIRST FROM VOL PTR      @G32DSFS
         L     R15,TOVOL               ADDR OF ACTIVE 'TOVOL'-4@G32DSFS
         LA    R15,4(R15)              TO VOL PTR              @G32DSFS
         L     R14,TODS                ADDR OF TO DATA SET     @G32DSFS
         MVC   RACDEF(LRACDEF),MRACDEF MOVE PARM LIST          @G32DSFS
         RACDEF TYPE=DEFINE,MENTITY=((R7)),MVOLSER=((R2)),     @G32DSFS*
               VOLSER=((R15)),ENTITY=((R14)),MF=(E,RACDEF)     @G32DSFS
         L     R2,IEHMVV30+8           RESTORE FROM DSCB1 ADDR @G32DSFS
         OI    NEWDSCB1(R12),DS1RACDF  SET RACF DEFINED        @G32DSFS
         LTR   R15,R15                 WAS MODEL SUCCESSFUL    @G32DSFS
         BZ    ALLO2A                  YES,BR TO ALLOCATE      @G32DSFS
         CH    R15,RACRET16            VALID RETURN CODE       @G32DSFS
         BH    BALLO1                  RET CODE GT. 16-INVALID @G32DSFS
         B     DIFMESA                 RET=8,BR TO ERROR MSG   @G32DSFS
**                                                             @G32DSFS
** GO TO DADSM ALLOCATE                                        @G32DSFS
**                                                             @G32DSFS
ALLO2A   EQU   *                       RESTORE REGS 1 AND 0    @G32DSFS
         LA    R1,IEHMVV31             RESTORE UCB ADDR REG1   @G32DSFS
         LA    R0,IEHMVV00             GET ADDRESS OF DSCB     @G32DSFS
*
* TURN ON HIGH ORDER BIT OF REGISTER 0 TO INFORM DADSM         @G32DSFS
* ALLOCATE THAT ENTRY WAS FROM A UTILITY PROGRAM               @G32DSFS
*
         LA    ACCE,2048               MAKE SIGN NEGATIVE      @G32DSFS
         SLL   ACCE,20                 SHIFT TO HI ORDER BYTE  @G32DSFS
         OR    R0,ACCE                 SET BIT IN REG 0        @G32DSFS
ALLO2B   EQU   *                       NO RACF ACTION          @G32DSFS
         SVC   32                      ALLOCATION SVC          @G32DSFS
         LA    RETURN,4
         SR    LINK,RETURN
         BZ    DUPNAME
         BM    GOODALLO
         BP    BALLO
*
*
DUPNAME  DS    0H                  PREALLOCATED DATA SET
         MVC   IEHMVV82+4(3),DS1DSNAM+62 SAVE TTR                S21042
         TM    IEHMVV20+4,X'08'        MODEL DSCB INDICATOR ON     2695
         BC    1,DUPMODL               YES, GIVE MSG FOR DUPLICATE 2695
*                                      NAME ON 'TO' VOLUME         2695
         TM    DS1DSORG,X'20'          A BDAM DATASET            S20201
         BNO   DUPNAMES                FROM-DS NOT BDAM          A45147
         TM    IEHMVV20+1,UNLOAD       FROM-DS BDAM, TEST UNLOAD A45147
         BNO   BDAMDUP                 CANNOT COPY BDAM IN PREAL A45147
*                                      DS - NOT ABLE TO TEST FOR A45147
*                                      EMPTY OR NOT              A45147
DUPNAMES DS    0H                                                A45147
         NI    IEHMVV10-4,X'CF'    TURN OFF 2 SWITCHES IN COM REGION
         TM    IEHMVV20,CATALOGF
     BO   GOODALLO
         TM    IEHMVV20,PDS        PDS FUNCTION
         BO    TSTOB                                             A36065
         TM    IEHMVV20+2,PHONYTO      PHONY NAME USED
         BZ    TSTOB                   NO GO TO OBTAIN TO DS NAME
         L     ACCE,IEHMVV21+4         YES CREATE NEW PHONY NAME
         LA    ACCO,43(0,ACCE)
UNDOTR   DS    0H
         CLI   0(ACCO),C' '
         BNE   UNDOTHIS
         BCT   ACCO,UNDOTR
UNDOTHIS DS    0H
         MVI   1(ACCO),C'.'
         MVI   2(ACCO),C'M'
         MVC   IEHMVV00(44),0(ACCE)
         B     CALLALLO
************************************************************   @ZA01244
*                                                          *   @ZA01244
*   WAY OUT IF FOUND DUPLICATE NAME ON TO-VOL AND FROM     *   @ZA01244
*   DATA SET IS A MODELDSCB.                               *   @ZA01244
*                                                          *   @ZA01244
************************************************************   @ZA01244
DUPMODL  IC    ACCE,IEHMVV61           SAVE CURRENT CODE IN REG    2695
         MVI   IEHMVV61,X'28'          MOVE IN MSG CODE FOR DUPE   2695
*                                      NAME ON TO VOLUME WHEN      2695
*                                      FROM DSET IS MODEL DSCB     2695
         NI    IEHMVV10-4,X'BF'        TURN OFF SWITCH FOR CLOSE   2695
*                                      OF 'TO' DCB (NOT OPEN)      2695
         OI    IEHMVV10-4,X'80'        TURN ON SW TO CLOSE FROM    2695
         B     DIFMES                  GO TO PREABORT ROUTINE      2695
TSTOB    DS    0H
         TM    IEHMVV20+3,X'08'        PREALLOCATED DATA SET ?   S21042
         BO    GETDSCB                 YES, BYPASS OBTAIN        S21042
         L     ACCO,IEHMVV31+8         GET PTR TO 'TO' DDNAME    S21042
         LA    ACCO,0(ACCO)            CLEAR HIGH ORDER BYTE     S21042
         DEVTYPE (ACCO),INFO,DEVTAB    GET DEVICE CHARACTERISTICSS21042
         L     ACCO,IEHMVV82+4         GET TTR OF 'TO' DSCB      S21042
         SRL   ACCO,8                  MOVE R TO RIGHTMOST BYTE  S21042
         STC   ACCO,CCHHR+4            SAVE R                    S21042
         SRL   ACCO,8                  MOVE TT TO RIGHTMOST BYTESS21042
         SR    ACCE,ACCE               CLEAR REG FOR DIVISION    S21042
         LH    R6,TRCYL                PICK UP NR OF TRKS/CYL    S21042
         DR    ACCE,R6                 DIVIDE TT BY TRKS/CYL     S21042
         STH   ACCO,CCHHR              SAVE CC                   S21042
         STH   ACCE,CCHHR+2            SAVE HH                   S21042
         LA    ACCO,CCHHR              GET ADDR OF CCHHR         S21042
         XC    IEHMVV00(4),IEHMVV00    SET UP TO OBTAIN
         MVI   IEHMVV00,X'C0'          +INDICATE                 S21042
         MVI   IEHMVV00+1,X'80'        +SEEK MODE                S21042
         ST    ACCO,IEHMVV00+4         SET UP PTR TO CCHHR       S21042
         L     ACCO,IEHMVV23+4
         LA    ACCO,4(ACCO)            SET UP VOL SERIAL
         ST    ACCO,IEHMVV00+8
         LA    ACCO,IEHMVV00+16
         ST    ACCO,IEHMVV00+12        WORK AREA
         OBTAIN   IEHMVV00
         LTR   LINK,LINK               DSCB FOUND                S21042
         BZ    GOTDSCB                 YES                       S21042
         B     BALLO                   DSCB NOT FOUND            S21042
GETDSCB  EQU   *                                                 S21042
         L     R1,IEHMVV82+12          GET PTR TO DSCB SAVE AREA S21042
         MVC   IEHMVV00+60(96),16(R1)  MOVE DSCB TO WORK AREA    S21042
         TM    IEHMVV20+5,X'01'        GETMAIN DONE BY SRV     @ZA24602
         BNO   GOTDSCB                 NO,SKIP FREEMAIN        @ZA24602
         FREEMAIN R,LV=120,A=(1)       FREE SAVE AREA            S21042
         NI    IEHMVV20+5,X'FE'        INDICATE FREEMAIN DONE  @ZA24602
GOTDSCB  EQU   *                       CHECK PREALLOCATED DATA   A45147
*                                      SET WITH FROM-DS, TO      A45147
*                                      ALLOW MOVE-COPY/UNLOAD    A45147
         TM    DS1DSORG+16-DS1DSNAM(MCTABLE),BDAM  TEST TO-DS DA A45147
         BO    ACINCOMP                UNABLE TO DETERMINE BDAM  A45147
*                                      DS EMPTY OR NOT, MSG411   A45147
         L     ACCO,IEHMVV30+8         LOAD FROM-DSCB ADDRESS    A45147
         CLI   DS1DSORG-DS1DSNAM(ACCO),X'00' DSORG UNDEFINED   @ZA04409
         BNE   *+8                     NO GO ON                @ZA04409
         MVI   DS1DSORG-DS1DSNAM(ACCO),X'40' SET DEFAULT PS    @ZA04409
         TM    DS1DSORG-DS1DSNAM(ACCO),PSBIT  TEST FROM-DSORG    A45147
         BO    PSORUNLD                IF PS, CHECK TO-DS PS     A45147
         TM    IEHMVV20+1,UNLOAD       IF UNLOAD,CHECK TO-DS PS  A45147
         BNO   FROMPDS                 FROM-DS NOT PS OR BDAM    A45147
*                                      MUST BE PDS (NO UNLOAD)   A45147
*                                                                A45147
PSORUNLD EQU   *                       FROM-DS PS OR TO UNLOAD   A45147
         TM    DS1DSORG+16-DS1DSNAM(MCTABLE),PDSBIT+BDAM+ISAM    A45147
*                                       TEST TO-DSORG            A45147
         BNZ   ACINCOMP                IF NOT PS, MSG411         A45147
*                                      IF PS COPY IF TO-DS EMPTY A45147
         CLC   DS1LSTAR+16-DS1DSNAM(3,MCTABLE),NOTUTST           A45147
         BE    PREALLO                 IF EMPTY, USE DS TO COPY  A45147
         MVI   IEHMVV61,X'30'          IF NOT EMPTY, MSG428      A45147
         B     DIFMES                                            A45147
FROMPDS  EQU   *                       FROM-DS IS PO (NO UNLOAD) A45147
         CLC   DS1LSTAR+16-DS1DSNAM(3,MCTABLE),NOTUTST           A45147
         BNE   PSORPDS                 IF TO-DS NOT EMPTY TEST   A45147
*                                      FOR PS OR PDS             A45147
         MVI   IEHMVV61,X'2E'          TO-DS EMPTY, MSG424 'NO   A45147
         B     DIFMES                  DIRECTORY' - NOT COPIED   A45147
PSORPDS  EQU   *                                                 A45147
         TM    IEHMVV20,MOVE+VOLUME    CHECK FOR MOVE-VOLUME    YA01219
         BO    DUPPDS                   IF SO, PDS NOT MERGED    A45147
         TM    DS1DSORG+16-DS1DSNAM(MCTABLE),PDSBIT              A45147
         BO    PREALLO                 TO-DS PDS, MOVE/COPY      A45147
*                                      TO-DS NOT PDS, MSG411     A45147
MSGNOMOV MVI   IEHMVV61,X'32'                                   OY01172
         B     DIFMES                                           OY01172
ACINCOMP EQU   *                                                 A45147
         MVI   IEHMVV61,X'14'          MSG411 'ACCESS METHOD NOT A45147
         B     DIFMES                  COMPATIBLE'               A45147
DUPPDS   MVI   IEHMVV61,X'2C'           MSG 423 DUPLICATE PDS    A45147
         B     DIFMES                                            A45147
BDAMDUP  DS    0H                                                A27312
         MVI   IEHMVV61,X'2A'     SET UP DUP NAME MSG            A27312
         B     DIFMES                                            A27312
**                                                             @G32DSFS
** IF THE ALLOCATION FAILED FOR A RACF DEFINED DATA SET,       @G32DSFS
** A RACF DELETE WILL BE DONE                                  @G32DSFS
**                                                             @G32DSFS
BALLO    DS    0H
         TM    NEWDSCB1(R12),DS1RACDF  WAS D.S. RACF DEFINED   @G32DSFS
         BZ    BALLO1                                          @G32DSFS
         L     R7,TODS                 ADDR OF TO DATA SET     @G32DSFS
         L     R15,TOVOL               ADDR OF TO VOLUMN -4    @G32DSFS
         LA    R15,4(R15)              PTR TO 'TOVOL'          @G32DSFS
         MVC   RACDEF(LRACDEF),MRACDEF MOVE PARM LIST          @G32DSFS
         RACDEF TYPE=DELETE,ENTITY=((R7)),VOLSER=((R15)),      @G32DSFS*
               MF=(E,RACDEF)                                   @G32DSFS
         NI    NEWDSCB1(R12),X'FF'-DS1RACDF RESET RACF DEFINED @G32DSFS
BALLO1   EQU   *                                               @G32DSFS
         MVI   IEHMVV61,X'1E'
DIFMES   TM    IEHMVV20+3,DUMP         DUMP TO BE GIVEN INSTEAD  S20201
*                                      OF MESSAGE                S20201
         BZ    ABORT                   *B IF NOT GIVE MSG        S20201
         ABEND 4095,DUMP                                         S20201
ABORT    EQU   *                                                 S20201
         L     R0,WALENGTH             LENGTH OF AREA TO       @ZA01727
*                                      BE FREED                @ZA01727
         FREEMAIN R,LV=(R0),A=(R10)                            @ZA01727
         TM    IEHMVV20+5,X'01'        GETMAIN DONE BY SRV     @ZA24602
         BNO   DONTFREE                NO,SKIP FREEMAIN        @ZA24602
         L     R1,IEHMVV82+12    GET POINTER TO DSCB SAVE AREA @ZA24602
         FREEMAIN R,LV=120,A=(1)       ISSUE FREEMAIN          @ZA24602
         NI    IEHMVV20+5,X'FE'        INDICATE FREEMAIN DONE  @ZA24602
DONTFREE L     ACCO,IEHMVV22+4     ADDRESS OF ACTIVE FROM VOL  @ZA18362
         LA    ACCO,0(ACCO)            CLEAR HIGH ORDER BYTE   @ZA18362
         CLI   2(ACCO),X'80'           FROM DEVICE TAPE        @ZA18362
         BNE   PREAB1                  NO, BRANCH              @ZA18362
         L     ACCO,IEHMVV30           ADDRESS OF FROM DCB     @ZA18362
         LA    ACCO,0(ACCO)            CLEAR HIGH ORDER BYTE   @ZA18362
         TM    48(ACCO),X'10'          FROM DCB OPEN           @ZA18362
         BNO   PREAB1                  NO, BRANCH              @ZA18362
         OI    IEHMVV10-4,X'80'        SET TO CLOSE IN SRY     @ZA18362
PREAB1   L     LINK,PREAB                                      @ZA18362
         BR    LINK                GO TO PREABORT ROUTINE
OKUN     DS    0H
         LR    ACCE,PASSA
     MVI   DS1DSORG,X'00'
         MVC   DS1DSORG+1(12),DS1DSORG  ZERO DSORG FIELD OF DSCB
         B     NOWTRY
NOTUTST   DC   X'000000'
*
*
         DS    0H
*
YPDS     DS    0H
         TM    IEHMVV20+1,LOAD     LOAD CONDITION
         BO    YLOAD               YES
*                                  NO
         L     15,BERT             GO TO DIRECTORY DEPHONKER
         BALR  14,15
         LH    ACCE,IEHMVV25       GET DIRECTORY COUNT
         LTR   15,15         ERROR FROM DIRECTORY DEPHONKER        7491
         BNZ   DIFMES                  *B IF YES                 S20201
AFTERB   DS    0H
         TM    IEHMVV20,PDS        PDS KEYWORD
         BO    YPDSS                    YES, GO TO USE EXPAND
AFTERPDS DS    0H
         TM    IEHMVV20+1,UNLOAD   UNLOAD CONDITION
         BO    YUNLOAD             YES, GO TO CONSTRUCT UNLOAD DSCB
         ST    ACCE,DADDQ-DS1DSNAM(0,MCTABLE)  REQUEST DIRECTORY S20201
*                                              SPACE             S20201
         B     AFTERSCK
YLOAD    DS    0H
         LH    ACCE,IEHMVV25       DIRECTORY COUNT
         B     AFTERB
YPDSS    DS    0H
         AH    ACCE,IEHMVV25+2          GET EXPAND
         B     AFTERPDS
YUNLOAD  DS    0H
         MVI   IEHMVV10-4,X'04'        RELEASE UNUSED SPACE    @ZA30700
         STH   ACCE,IEHMVV25
         B     AFTERSCK
ZEROS    DC    2F'0'                   DOUBLE WORD OF HEX ZEROS    2695
DEACTIVE EQU   X'00'                                               UL0H
ACTIVOHL EQU   X'02'                                               UL0H
ACTIVITL EQU   X'03'                                               UL0H
ACTIVOTL EQU   X'04'                                               UL0H
BERT     DC    A(IEHMVETC)
ADMSG    DC    A(MSG)
         EXTRN MSG
PREALLOS DS    0H
         MVC   DS1RECFM(1),IEHMVV00+84  SAVE RECFM IN FROM DSCB    UL0H
         MVC   IEHMVV31(1),DS1RECFM      AND IN 1ST BYTE OF TO     UL0H
*                                         DCB POINTER              UL0H
         B     PREALLOX                 INDICATE PREALLOCATION     UL0H
PREALLO  DS    0H
         TM    IEHMVV20,PDS            TEST FOR PDS              A36065
         BO    PREALLOS                                          A36065
         MVC   IEHMVV74(1),DS1EXT1+16   SAVE UL TRK INDIC TO BE@ZA31059
*                                        DESTROYED IN MSG WRITE    UL0H
         MVC   IEHMVV31(1),DS1RECFM+16  SAVE RECFM IN 1ST BYTE @ZA31059
*                                       OF  POINTER TO TO DCB      UL0H
PREALLOX OI    IEHMVV20+3,PREALBIT        TURN ON PREALLOCATE BIT  UL0H
         IC    ACCE,IEHMVV61
         MVI   IEHMVV61,X'03'
         L     LINK,ADMSG
         BALR  RETURN,LINK         GO TO MESSAGE WRITER
         STC   ACCE,IEHMVV61
         CLI   IEHMVV74,LABALLO         U.L. TRK FOR 'TO' DATA SET UL0H
         BE    YTAPE                    YES, ACTIVATE EXITS        UL0H
         B     GOODALLB                 NO, CHECK FURTHUR          UL0H
GOODALLO DS    0H                                                  UL0H
         MVC   IEHMVV82+4(3),DS1DSNAM+62 SAVE TTR                S21042
         CLI   DS1EXT1,LABALLO          U.L. TRK FOR 'TO' DATA SET UL0H
         BE    YTAPE                   YES, ACTIVATE EXITS         UL0H
*
GOODALLB DS    0H                                                  UL0H
         CLC   IEHMVV72(4),ZEROS        WERE HEADER LABELS SAVED   UL0H
         BE    NORMEXIT                 NO, NORMAL EXIT            UL0H
         B     RELCORE                  YES, FREE CORE AND GIVE MSGUL0H
YTAPE2   NI    IEHMVV20+4,X'F7'        SET MODEL DSCB SW OF    @YA01681
YTAPE1   NOP   0(0)                                            @YA01720
YTAPE    DS    0H                                                  UL0H
         CLC   IEHMVV72(4),ZEROS        WERE HEADER LABELS SAVED   UL0H
         BE    TAPEPRO                  NO, CONTINUE               UL0H
         MVI   UDCBOHLE,ACTIVOHL       ACTIVATE EXIT LIST          UL0H
TAPEPRO  DS    0H                                                  UL0H
         MVI   UDCBITLE,ACTIVITL       ACTIVATE EXIT LIST          UL0H
NORMEXIT LA    PASSB,3                                             UL0H
         EJECT
PROCEED  DS    0H
         L     R0,WALENGTH             LENGTH TO FREE            S20201
         FREEMAIN R,LV=(R0),A=(R10)                              S20201
*
       IEHPOST  (14,1),TFC,
         RETURN (14,12),T
*                                                                  UL0H
*   DIRECT ACCESS OUTPUT DEVICE AND NO LABEL TRACK ALLOCATED       UL0H
*                                                                  UL0H
RELCORE  DS    0H                                                  UL0H
         L     M6,IEHMVV72             GET ADDR OF GOTTEN CORE     UL0H
         FREEMAIN  R,LV=640,A=(M6)     FREE GOTTEN CORE            UL0H
SETFLGS  MVI   IEHMVV72+11,X'FF'       SET FLAG TO SHOW MSG        UL0H
*                                      REQUEST IS FROM VSSX        UL0H
         MVI   IEHMVV72+10,X'FF'       SET DA+NLT FLAG TO SHOW     UL0H
*                                      U.L. TRK NOT ALLOCATED      UL0H
         MVI   IEHMVV72+14,X'FF'       SET FLAG FOR VESN TO PUT    UL0H
*                                      OUT NO U.L. TRK MESSAGE     UL0H
         B     PROCEED                 RETURN TO VSRY FOR ROUTING  UL0H
*                                                                  UL0H
SAVEREG1 DS    F                       SAVE AREA FOR REG1       YA01684
SAVEREG0 DS    F                       SAVE AREA FOR REG0      @ZA07399
DV       DS    D                       CONVERSION AREA          YA01684
INFO     DS    0CL20                   +                         S21042
         DS    CL10                    +DEVICE TYPE              S21042
TRCYL    DS    CL2                     +CHARACTERISTICS          S21042
         DS    CL8                     +                         S21042
CCHHR    DS    CL5                     ABS ADDR OF 'TO' DSCB     S21042
PREAB    DC    A(PREABORT)                                         UL0H
         EXTRN  PREABORT                                           UL0H
WALENGTH DC    A(ENDWA-WORKAREA)       DEFINE WORKAREA LENGTH    S20201
DEFAULT1 DC    F'72500'                DEFAULT PRIMARY           S20201
DEFAULT2 DC    F'36250'                DEFAULT SECONDARY         S20201
DEFBLK   DC    H'160'                  ARBITRARY DEFAULT         S20201
HW1      DC    H'1'                                              S20201
CONST    DC    F'2'                                            @YA02566
DW       DS    D                                                OY01172
TIMEDATE DS    3C                                               OY01172
DSCBDATE DS    3C                                               OY01172
CAMLST1  CAMLST SEEK,0,0,0             OPTION BYTES FOR SEEK     S20201
*** RACF VERSION 2 EQUATES AND DECLARES                        @G32DSFS
RACFMSGT EQU   *                       RACF MESSAGE TABLE      @G32DSFS
         DC    X'36'                   PREVIOUSLY DEFINED      @G32DSFS
         DC    X'38'                   UNAUTHORIZED            @G32DSFS
         DC    X'1E'                   INVALID RET CODE        @G32DSFS
         DC    X'3A'                   MODEL NOT RACF DEFINED  @G32DSFS
ENDTAB   EQU *                         END RACF MSG TABLE      @G32DSFS
COPYAUTH EQU   X'10'                   COPYAUTH KEYWORD        @G32DSFS
DS1RACDF EQU   X'40'                   DSCB1 RACF BIT          @G32DSFS
RACRET4  DC    H'4'                    RACF RETURN CODE 4      @G32DSFS
RACRET16 DC    H'16'                   RACF RETURN CODE 16     @G32DSFS
MRACDEF  RACDEF DSTYPE=N,CLASS='DATASET',    RACDEF PARM LIST  @G32DSFS*
               MF=L                                            @G32DSFS
LRACDEF  EQU   *-MRACDEF                                       @G32DSFS
MRACHECK RACHECK CLASS='DATASET',MF=L        RACHECK PARM LIST @G32DSFS
LRACHECK EQU   *-MRACHECK                                      @G32DSFS
         DC    CL50'CE PATCH AREA - 50 BYTES'                    S20201
         EJECT
WORKAREA DSECT                                                   S20201
DEFSW    DS    CL1                                               S20201
FIRSTEXT DS    CL1                     X'FF',WHEN SCAN OF EXT1  OY01178
UNLOADSW DS    XL1                     X'80' WHEN SPACE QUANTITYYA01193*
                                         ONLY REQUIRED FOR UNLD.YA01193
DEVCHAR  DS    5F                                                S20201
DEVCHAR2 DS    5F                                                S20201
SECSAVE  DS    F                       TO SAVE SECALLO FOR BDAM OY01178
SECALLO  DS    F                                                 S20201
PRIME    DS    F                                                 S20201
* THE NEXT SEVEN WORDS ARE BEING REUSED BY RACDEF AND RACHECK  @G32DSFS
ALIGN    DS    2F                                                S20201
RACDEF   EQU   ALIGN                   REUSE CAMLIST AREA      @G32DSFS
RACHECK  EQU   RACDEF                  REUSE CAMLIST AREA      @G32DSFS
CAMLIST  DS    4F                                                S20201
CONVSVE2 DS    4F                                                S20201
SAVE15   DS    F                                                 S20201
CONVSAVE DS    4F                                                S20201
CONVINP  DS    4F                                                S20201
DEBUCBAD DS    F                                                 S20201
         DS    H                                                 S20201
DEBSTRCC DS    CL8                                               S20201
         DS    H                                                 S20201
         DS    H                                                OY01178
EXTENTS  DS    CL26                                             OY01178
FT3DSCB  DS    CL350                                             S20201
ENDWA    EQU   *                                                 S20201
         EJECT
UNITCHAR DSECT                                                   S20201
DEVTYPE  DS    F                                                 S20201
         DS    H                                                 S20201
TRACKCAP DS    H                                                 S20201
CYLPDEV  DS    H                                                 S20201
TRPCYL   DS    H                                                 S20201
TRLENGTH DS    H                                                 S20201
OVHCNT   DS    H                                                 S20201
KEYOVHD  DS    C                                                 S20201
OVHIND   DS    C                                                 S20201
TOLERANC DS    H                                                 S20201
         EJECT                                                 @G32DSFS
         IECDSECS TCB,JSCB,EXPAND=YES                          @G32DSFS
         EJECT
CVT      DSECT                                                   S20201
         CVT
         IEHMVV
FROMVOL  EQU   IEHMVV22                ADDR OF FROMVOL -4      @G32DSFS
TOVOL    EQU   IEHMVV23+4              ADDR OF TOVOL -4        @G32DSFS
FROMDS   EQU   IEHMVV21                ADDR OF FROM DATA SET   @G32DSFS
TODS     EQU   IEHMVV21+4              ADDR OF TO DATA SET     @G32DSFS
         ORG   IEHMVV70
         IEHDCBXL
FT1DSCB  DSECT                                                   S20201
         IECSDSL1 (1)
         ORG   DS1EXT1+3
DADPQ    DS    F
DADDQ    DS    F
DASD     EQU   X'20'
NEWDSCB1 EQU   DS1DSIND-DS1DSNAM       OFFSET TO RECEIVING DSCB@G32DSFS
         END
