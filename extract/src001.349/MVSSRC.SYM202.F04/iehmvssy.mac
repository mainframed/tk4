 TITLE 'IEHMVSSY-ROUTING AND ERRORS FOR IEHMOVE LOAD MODULE ESY'
 TITLE 'IEHMVSSY-ROUTING AND ERRORS FOR IEHMOVE LOAD MODULE ESY'
*TITLE -IEHMVSSY
*FUNCTION/OPERATION: MODULE IEHMVSSY HANDLES THE WRITING OF THE FIRST *
*RECORDS OF AN UNLOADED DATA SET AND MAKES THE DECISION OF WHICH IS   *
*TO BE GIVEN CONTROL TO DO THE ACTUAL MOVE/COPY OPERATION             *
*THIS CSECT HANDLES ABNORMAL CLOSES IF PREABORT IS DEMANDED AS THE    *
*RESULT OF ERRORS.  NO USER LABELS ARE PROCESSED DURING THESE ABNORMAL*
*TERMINATIONS.  FOR VARIABLE SPANNED RECORDS, THIS MODULE WILL IDEN-  *
*TIFY THIS FORMAT AND USE THIS ANALYSIS TO DETERMINE THE NEXT MODULE  *
*TO BE GIVEN CONTROL.                                                 *
*ENTRY POINTS: IEHMVESY                                               *
*INPUT: MOVE/COPY COMMUNICATIONS TABLE                                *
*OUTPUT: UNLOADED DATA SET HEADER RECORDS                             *
*EXTERNAL ROUTINES: BALR TO IEHMVSRM FOR UNLOADED WRITES              *
*                   LINK TO IEHMVLSU FOR MESSAGE WRITING              *
*                   BALR TO IEHMVSRX TO BUILD DCB'S                   *
*                   XCTL TO IEHMVESK FOR I/O ERRORS                   *
*EXITS-NORMAL DETERMINED AT EXECUTION TIME FROM TYPE OF REQUEST       *
*ERRORS: NONE                                                         *
*TABLES/WORKAREAS: MOVE/COPY COMMUNICATIONS TABLE                     *
*ATTRIBUTES: REUSEABLE                                                *
*NOTES: PART OF LOAD MODULE-IEHMVESY                                  *
*
*
IEHMVSSY CSECT                                                 @YA01681
*
*D017450-017550,019630-019750                                  @YA02612
*A024860-024920,030650-030750                                  @YA02605
*A072340-072370,110700                                         @YA01681
*D072340                                                       @YA01681
*
*D035400-047400,115600-116120                                   YA01193
*A035400-044400                                                 YA01193
*C053200                                                         A44360
*                                                                A30505
*                                                                A29052
*086200                                                          A18773
*3387000200,001600,003500,069400,069800,076800,077600,077760,078800VS0H
*019690,021200,028000,057850-058300,059300-059700                 19030
*--ANY STATEMENTS FLAGGED 19030 PERTAIN TO VARIABLE SPANNED RECORD--
*--SUPPORT FOR BDAM DATA SETS
*
*
IEHMVESY SAVE  (14,12),T,SSY-V2-L1
         ENTRY IEHMVESY
*
*              REGISTERS
*
PASSA    EQU   0
PASSB    EQU   1
R0       EQU   0
R1       EQU   1
R15      EQU   15
R2       EQU   2
R3       EQU   3
ACCE     EQU   4
ACCO     EQU   5
BASE     EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
MCTABLE  EQU   12
SAVE     EQU   13
RETURN   EQU   14
LINK     EQU   15
*
ANYSEL   EQU   X'02'
BLANK    EQU   C' '
BLOCKED  EQU   X'10'
DSGROUP  EQU   X'10'
FIXED    EQU   X'80'
FVOLUME  EQU   X'80'
NOTMOVE  EQU   X'80'
ODD      EQU   X'01'
ONES     EQU   X'FF'
UDSORG   EQU   X'04'
UNLOADM  EQU   X'7F'
UNMOVE   EQU   X'08'
U        EQU   X'C0'              RECFM UNDEFINED                  9373
F        EQU   X'80'              RECFM FIXED                      9373
V        EQU   X'40'              RECFM VAR                        9373
FB       EQU   X'90'              RECFM FIXED BLOCKED              9373
VB       EQU   X'50'              RECFM VAR BLOCKED                9373
VS       EQU   X'48'              RECFM VARIABLE SPANNED           VS0H
VBS      EQU   X'58'              RECFM VARIABLE BLOCKED SPANNED   VS0H
VOLUME   EQU   X'02'
ZERO     EQU   X'00'
DEACTIVE EQU   X'00'                                               UL0H
*
BASESET  BALR   BASE,0
    USING  *,BASE
BB       DS    0H
         USING IEHMVV,MCTABLE
*                                  PROCESS
*                                       CALL BUILD DCB AND GO TO DADSM
    IEHPRE  (14,1),TFC,
*
         L     LINK,BUILDDCB            GET ADDRESS
         BALR  RETURN,LINK              BRANCH
*
*
*
*                                  SET UP TO SEARCH DSORG TABLE
         L     ACCE,IEHMVV30+8          GET ADDR OF DSCB
         LA    ACCO,DSORGTAB
*
*                                  TURN OFF UNMOVEABLE
DSLOOP   DS    0H
         CLC   0(2,ACCO),FILETYPE(ACCE) COMPARE DSORG WITH TABLE
*
         BE    EQDSORG                  EQUAL
         LA    ACCO,4(ACCO)             INCREMENT COMPARE
         CLI   0(ACCO),ONES
         BNE   DSLOOP                   NO
*                                       YES, ERROR CONDITION
*        MESSAGE
         MVI   IEHMVV61,UDSORG
         B     PREAB1
*
*
EQDSORG  DS    0H
         LA    R3,PATIS                TEST FOR ISAM ORGANIZATION
         CR    R3,ACCO                 BY CHECKING POINTER TO
         BNE   *+12                    DSORG TABLE - BRANCH IF NOT
         MVI   IEHMVV61,32             PRINT A MESSAGE IF IT IS ISAM
         B     PREAB1                  AND SKIP THE DATASET
         SR    R3,R3                    GET XCTL TABLE DISPLACEMENT
         IC    R3,3(0,ACCO)
*
         TM    IEHMVV20,CATALOG         CATALOG FUNCTION
         BO    TCAT                     YES
*                                       NO
*
         TM    IEHMVV20+2,ANYSEL
         BO    SELECT
*
TST20    TM    IEHMVV20+1,BOTH     BOTH LOAD AND UNLOAD           19030
         BO    YESBOTH                  YES
*                                       NO
         TM    IEHMVV20+1,LOAD          ONLY LOAD
         BO    YESLOAD                  YES
*                                       NO
         TM    IEHMVV20+1,UNLOAD        UNLOAD ONLY
         BO    YESUNLD                  YES
         B     XCTLEXEC                 NO
*
SELECT   DS    0H
         LA    R3,GOSELECT(0,0)
    B  XCTLEXEC
GOSELECT EQU    30
TCAT     DS    0H
         L     ACCE,IEHMVV23+4          TO DEVICE DIRECT ACCESS
         CLI   2(ACCE),DASD
         BE    OKCAT                    YES
         OI    IEHMVV20+1,UNLOAD        NO, UNLOAD
         TM    IEHMVV20+5,X'40'        UNLOAD REQUEST          @YA02605
         BO    *+12                    YES DO NOT PRINT MSG    @YA02605
         MVI   IEHMVV61,X'01'           INDICATE MESSAGE
     BAL   RETURN,MSG
         TM    IEHMVV20+1,LOAD          LOAD ALSO
         BO    LUCAT                    YES
         LA    R3,DAVEBRCE              NO
DAVEBRCE EQU   28
         B     UNCAT
OKCAT    DS    0H
         LA    R3,DAVEBRCE              SET UP TO GO TO CATALOG
         TM    IEHMVV20+1,LOAD          LOAD CONDITION
    BZ   *+8
         LA    R3,LOADCAT               YES, SET UP XCTL ROUTE
LOADCAT  EQU   26
         B     XCTLEXEC
*
YESBOTH  TM    26(ACCE),X'20'      TEST FOR BDAM DSORG            19030
         BC    1,*+8               IT IS BDAM WE'RE SET FOR 'STL' 19030
         LA    R3,LUDIS(0,0)       SET TO XCTL TO 'ERA'           19030
LUCAT    EQU   YESBOTH
LUDIS    EQU   24
         CLI   IEHMVV61,ZERO       IS THERE A MESSAGE TO BE PRINTED3826
         BE    *+8                 NO SKUP MESSAGE WRITER          3826
         BAL   RETURN,MSG               GO TO MSG WRITER
         B     XCTLEXEC
YESLOAD  EQU   *
         LA    R3,LOADDIS(R3)           SET UP XCTL TAB FOR LOAD
LOADDIS  EQU   4
         B     XCTLEXEC
YESUNLD  DS    0H
         CLI   IEHMVV61,ZERO       IS THERE A MESSAGE ?          A29052
         BE    UNWRITE             NO.                           A29052
         BAL   RETURN,MSG
UNWRITE  DS    0H
         LA    R3,UNLDDIS(R3)           SET UP XCTL TABLE FOR UNLOAD
UNCAT    DS    0H
         TM    IEHMVV20+5,X'40'        UNLOAD REQUEST          @YA02605
         BNO   *+8                     NO BRANCH AROUND        @YA02605
         NI    IEHMVV41+13,X'FE'       YES RESET RETURN CODE   @YA02605
*
*
***** WRITE FIRST RECORD OF UNLOADED DATA SET *****
         LA    REG0,1(0,0)
         LNR   REG0,REG0               SET UP REGISTER FOR BWRITE RTN
         LA    REG1,UNLREC1            ADDR OF RECORD
         BAL   REG2,UNLWRT
***** WRITE DSCB ON UNLOADED DATA SET *****
         L     REG2,IEHMVV30+8         DSCB ADDR
         LR    REG1,MCTABLE
         USING UNLDLLI,REG1
         MVC   IECSDSL1(140),0(REG2)   COPY THE DSCB INTO RECORD
         MVC   UNLDLLI(3),UNLKDS       SET UP LLI IN RECORD
         MVC   UNLDDIR(2),IEHMVV25     COPY THE DIRECTORY QUANTITY
         MVI   UNLDFLAG,X'00'          SET THE OLD UNLOAD FLAG
         SPACE 1
         L     ACCO,IEHMVV30+12        GET THE 'FROM' DDNAME
         LA    ACCO,0(ACCO)            STRIP OFF HI-ORDER BYTE    S2021
         DEVTYPE (ACCO),DEVCHAR,DEVTAB GET THE 'FROM' CHARACTERISTICS
         LR    REG1,MCTABLE
         MVC   UNLDDEVT(4),DEVCHAR      SAVE ORIGINAL DEVICE TYPE
         CLI   DEVCHAR+2,X'20'         TEST 'FROM' DEVICE FOR D.A.
         BNE   PATCH2                  BRANCH IF NOT D.A.
         MVI   UNLDFLAG,X'40'          SET THE NEW UNLOAD FLAG
         L     ACCO,IEHMVV85           GET PTR TO INFORMATION   YA01193*
                                         PASSED FROM IEHMVSSX   YA01193
         MVC   UNLDSIZE(8),0(ACCO)     SET PRIM. AND SEC. SIZE  YA01193
         XC    UNLDSPAR(42),UNLDSPAR   ZERO OUT UNUSED BYTES    YA01193
         SPACE 3
PATCH2   DS    0H
         LR    REG1,MCTABLE             WRITE OUT HEADER RECORD
         LA    REG0,1
         TM    IEHMVV10-4,UNMOVE
    BZ   AZBY
       OI    145(REG1),X'80'        SET UNLOAD UNMOVEABLE SWITCH
AZBY     DS    0H
         LA    REG0,0(0,0)
         BAL   REG2,UNLWRT
UNLRET   DS    0H
         B     THISUN
UNLWRT   L     REG15,ADBWRT            ADDR OF BWRITE RTN
         BALR  REG14,REG15
         LTR   REG15,REG15             IO ERROR
         BH    UNLIO
         BR    REG2
UNLIO    EQU   *
         MVI   IEHMVV61,X'06'
         B     PREAB1
***** CONSTANTS *****
UNLREC1  DC    FL2'75'
         DC    X'0E'
         DC    CL32'THIS IS AN UNLOADED DATA SET PRO'
         DC    CL8'DUCED BY'
         DC    X'80'
         DC    CL32'THE IBM UTILITY, SYSMOVE.OMMBRLD'
         DC    CL2'WB'
UNLKDS   DC    X'00C500'                                         A44360
ADBWRT   DC    A(IEHMVERM)
         EXTRN IEHMVERM
         ENTRY UNLREC1
***** REGISTER DESIGNATION *****
REG0     EQU   0
REG1     EQU   1
REG2     EQU   2
REG12    EQU   12
REG14    EQU   14
REG15    EQU   15
THISUN   EQU   *
UNLDDIS  EQU   2
         B     XCTLEXEC
*
*
XCTLEXEC EQU   *
*
*
XCTLREEN DS    0H
*
         LA    R3,XCTLTAB(R3)
         CLI   0(R3),ONES          XCTL OR BRANCH
         BE    BRTO                    BRANCH, NOT XCTL            VS0H
         B     XCTLPRE             XCTL TO MODULE                 19030
*                                                                  VS0H
XCTLPRE  MVC   ENTMOD(2),0(R3)          SETUP XCTL NAME
XCTL     DS    0H
       IEHPOST (14,1),TFC,                                         9373
*
         L     14,12(0,13)
         XCTL  (2,12),EPLOC=MODNAME
BRTO     DS    0H
*                                            IN THIS LOAD MODULE
         SR    ACCE,ACCE
         IC    ACCE,1(R3)
         L     LINK,BRANCHTO(ACCE)
         BALR  RETURN,LINK              GO TO ROUTINE
*
         LA    ACCO,BRANCHTO(ACCE)
         MVC   ENTMOD(2),6(ACCO)
         B     XCTL                     BRANCH TO XCTL ROUTINE
BUILDDCB DC    A(IEHMVESX)
         EXTRN IEHMVESX
FILETYPE EQU   X'52'
PS       EQU   X'02'
BOTH     EQU   X'03'
         DS    0D
MODNAME  DC    CL6'IEHMVE'
ENTMOD   DS    CL2
         DS    0F
DSORGTAB DS    0H
         DC    X'4000'                  PHYSICAL SEQUENCIAL
         DC    H'0'
         DC    X'0000'
         DC    H'0'
         DC    X'2000'                  BDAM
         DC    H'6'
PATIS    DC    X'8000'                 ISAM DSORG
         DC    H'0'
         DC    X'0200'                  PDS
         DC    H'18'
         DC    X'FFFF'                  END OF TABLE
         DS    0D
XCTLTAB  DS    0H
         DC    X'FF00'             BSAM NORMAL
      DC   CL2'RD'                      SAM UNLOAD
         DC    CL2'RA'                  SAM LOAD
         DC    CL2'TL'                  BDAM NORMAL
     DC    CL2'TL'                      BDAM UNLOAD
     DC   CL2'TL'                       BDAM LOAD
         DC    3XL2'0'                 SPACE FOR ISAM - NEVER USED
         DC    X'FF08'             PDS  NORMAL
         DC    CL2'RD'                  PDS UNLOAD
         DC    CL2'RA'                  PDS  LOAD
    DC   CL2'TJ'     LOAD-UNLOAD
         DC    CL2'TA'                  CATALOG
         DC    CL2'SC'                  CATALOG AND UNLOAD CATALOG
         DC    CL2'TG'                  SELECT
         DC    CL2'TJ'        BSAM U                   CODE=32
         DC    C'TJ'                   BSAM V, VS NORMAL CODE=34   VS0H
   DC   X'FF10'    BSAM  VB  REBLOCK    CODE=36
         DC    C'SM'                   BSAM VB OR VBS    CODE=38   VS0H
         DC    CL2'TJ'        BSAM F   NORMAL          CODE=40
         DC    X'FF18'        BSAM,FB,REBLOCK     CODE=42
         DC    CL2'TJ'        BSAM FB  NO REBLOCK      CODE=44
*                                                                  VS0H
*THE FOLLOWING ENTERIES ARE CURRENTLY UNUSED.  PDS ROUTINES USE THEVS0H
* SAME ROUTINES AS BSAM AND USE TABLE OFFSETS 32 THRU 44 ABOVE     VS0H
*                                                                  VS0H
         DC    CL2'TJ'        PDS  U                   CODE=46
         DC    CL2'TJ'        PDS  V   NORMAL          CODE=48
    DC   X'FF10'    PDS   VB  REBLOCK  CODE=50
         DC    CL2'TJ'        PDS  VB  NO REBLOCK      CODE=52
         DC    CL2'TJ'        PDS  F   NORMAL          CODE=54
         DC    X'FF18'         PDS,FB,REBLOCK    CODE=56
         DC    CL2'TJ'        PDS  FB  NO REBLOCK      CODE=58
         DS    0F
BRANCHTO DS    0H
         DC    A(SAM)
         DC    CL4'  SK'
         DC    A(PDS)
         DC    CL4'  SK'
         DC    A(SMBIT)
         DC    CL4'  SM'
         DC    A(SLBIT)
         DC    CL4'  SL'
*
BUILDREQ DS    0H
LOAD     EQU   X'02'
UNLOAD   EQU   X'01'
EOF      EQU   X'20'
SAM      EQU   *                                                   9373
PDS      L     R2,IEHMVV30+8           GET FROM DSCB ADDRESS   @YA01681
         CLC   107(8,R2),ZEROS         CHECK FOR MODEL-DSCB    @YA01681
         BNE   NODSCB                  NO MODEL-DSCB           @YA01681
         CLC   95(3,R2),ZEROS          CHECK FOR MODEL-DSCB    @YA01681
         BNE   NODSCB                  NO MODEL DSCB           @YA01681
         L     R2,IEHMVV22+4           ADDRESS OF FROM VOLLIST @YA01681
         CLI   2(R2),X'20'             FROM DEVICE DA          @YA01681
         LA    R3,44                   SET UP XCTL TO ETJ      @YA01681
         BE    XCTLREEN                YES MUST BE MODEL DSCB  @YA01681
NODSCB   L     ACCE,IEHMVV30           FROM DCB ADDRESS        @YA01681
         L     ACCO,IEHMVV31           TO DCB ADDR                 9373
         TM    36(ACCE),U              FROM U RECFM                9373
         BO    FROMU                   YES                         9373
         TM    36(ACCO),U              TO U RECFM                  9373
         BO    TOISU                   YES                         9373
         TM    36(ACCE),FB             FROM FB RECFM               9373
         BC    12,ISFROMF              NO                          9373
         TM    36(ACCO),FB             TO FB RECFM                 9373
         BC    12,FBTOF                NO                          9373
         CLC   82(2,ACCE),82(ACCO)     LRECL EQUAL                 9373
         BNE   FMERR                   NO IT IS AN ERROR           9373
         CLC   62(2,ACCE),62(ACCO)     BLKSIZE EQUAL               9373
         BNE   ESLMOD                  NO GO TO REBLOCK            9373
         LA    R3,44                    SET UP FOR FB MOD ETJ      VS0H
         B     XCTLREEN                GO SET UP XCTL TO ETJ       VS0H
ETJMOD   LA    R3,32                   SET UP FOR IEHMVETJ         9373
         B     XCTLREEN                                            9373
FBTOF    TM    36(ACCO),F              TO F RECFM                  9373
         BC    12,FMERR                NO IT IS AN ERROR           9373
         CLC   62(2,ACCO),82(ACCE)     TO BLK EQU FROM LRECL       9373
         BNE   FMERR                   NO IT IS AN ERROR           9373
ESLMOD   CLI   16(ACCE),ZERO       FROM KEYLENGTH ZERO ?         A30505
         BNE   FMERR               NO--CAN'T REBLOCK KEYED DS    A30505
         CLI   16(ACCO),ZERO       IS TO KEYLENGTH ZERO ?        A30505
         BNE   FMERR               NO- CAN'T REBLOCK KEYED DS.   A30505
         LA    R3,42               SET UP FOR ESL.               A30505
         B     XCTLREEN
ISFROMF  TM    36(ACCE),F              FROM F RECFM                9373
         BC    12,ISFRMVBS             NO                          VS0H
         TM    36(ACCO),FB             TO FB RECFM                 9373
         BC    12,FTOF                 NO                          9373
         CLC   62(2,ACCE),82(ACCO)     FROM BLK EQU TO LRECL       9373
         BE    ESLMOD                  YES                         9373
         B     FMERR                   NO IT IS AN ERROR           9373
FTOF     TM    36(ACCO),F              TO F RECFM                  9373
         BC    12,FMERR                NO IT IS AN ERROR           9373
         CLC   62(2,ACCE),62(ACCO)     BLKS EQUAL                  9373
         BNE   FMERR                   NO IT IS AN ERROR           9373
         LA    R3,40                    SET UP F TO F MOD ETJ      VS0H
         B     XCTLREEN                GO SET UP XCTL TO ETJ       VS0H
ISFRMVBS DS    0H                                                  VS0H
         TM    36(ACCE),VBS             FROM VBS RECFM             VS0H
         BC    12,ISFROMVB              NO                         VS0H
         TM    36(ACCO),VBS             TO VBS RECFM               VS0H
         BC    12,FMERR                 NO IT IS AN ERROR          VS0H
         CLC   82(2,ACCE),82(ACCO)      LRECL EQUAL                VS0H
         BNE   FMERR                    NO IT IS AN ERROR          VS0H
         CLC   62(2,ACCE),62(ACCO)      BLKSIZE EQUAL              VS0H
         BNE   FMERR                    NO IT IS AN ERROR          VS0H
         LA    R3,38                   SET UP FOR VBS/VBS (ESM)    VS0H
         LA    R3,34               SET UP FOR ETJ                A30505
         B     XCTLREEN                GO GIVE CONTROL TO ESM      VS0H
ISFROMVB TM    36(ACCE),VB             FROM VB RECFM               9373
         BC    12,ISFROMVS             NO                          VS0H
         TM    36(ACCO),VB             TO VB RECFM                 9373
         BC    12,VBTOV            NO
         CLC   62(2,ACCE),62(ACCO)   BLKSIZES EQUAL ?            A30505
         BE    ETJMOD              NO REBLOCKING GO TO ETJ       A30505
         B     ESMMOD              IF REBLOCKING CHECK FOR KEYS  A30505
         LA    R3,38                   SET UP FOR VB TO VB--ESM    VS0H
         B     XCTLREEN                GO SET UP TO PASS CONTROL   VS0H
ESMMOD   CLI   16(ACCE),ZERO       IS FROM KEYLENGTH ZERO.       A30505
         BNE   FMERR               NO-- CAN'T REBLOCK KEYED DS.  A30505
         CLI   16(ACCO),ZERO       IS TO KEYLENGHT ZERO?         A30505
         BNE   FMERR               NO--CAN'T REBLOCK KEYED DS.   A30505
         LA    R3,38               SET UP TO REBLOCK IN ESM.     A30505
         B     XCTLREEN
VBTOV    TM    36(ACCE),V              TO V RECFM                  9373
         BO    ESMMOD                  YES                         9373
         B     FMERR                   NO IT IS AN ERROR           9373
ISFROMVS DS    0H                                                  VS0H
         TM    36(ACCE),VS              FROM VS RECFM              VS0H
         BC    12,ISFROMV               NO                         VS0H
         TM    36(ACCO),VS              TO VS RECFM                VS0H
         BC    12,FMERR                 NO IT IS AN ERROR          VS0H
         CLC   82(2,ACCE),82(ACCO)      LRECL EQUAL                VS0H
         BNE   FMERR                    NO IT IS AN ERROR          VS0H
         CLC   62(2,ACCE),62(ACCO)      BLKSIZE EQUAL              VS0H
         BNE   FMERR                    NO IT IS AN ERROR          VS0H
VSETJMOD LA    R3,34                    SET UP FOR VS TO VS MOD ETJVS0H
         B     XCTLREEN                GO SET UP TO PASS CONTROL   VS0H
ISFROMV  TM    36(ACCE),V              FROM V RECFM                9373
         BC    12,FMERR                NO                          9373
         TM    36(ACCO),VB             TO VB RECFM                 9373
         BO    ESMMOD                  YES                         9373
         TM    36(ACCO),V              TO V RECFM                  9373
         BO    VSETJMOD                SET UP FOR VS/VS MOD VETJ   VS0H
         B     FMERR                   NO IT IS AN ERROR           9373
FROMU   TM    36(ACCO),U               TO U RECFM                  9373
         BC    12,FMERR                NO IT IS AN ERROR           9373
         B     ETJMOD                  YES                         9373
TOISU    CLC   62(2,ACCO),62(ACCE)     TO BLK EQU OR GRTR FROM     9373
         BL    FMERR                   NO IT IS AN ERROR           9373
         B     ETJMOD                  YES                         9373
ZZW      DC    X'0000'
FMERR    MVI   IEHMVV61,X'24'          SET ERROR MESSAGE CODE      9373
         B     PREAB1                                              9373
SMBIT    DS    0H
    OI   IEHMVV20+4,X'20'    INDICATE SM RETURN
   BR   RETURN
SLBIT    DS    0H
         OI    IEHMVV20+4,BLANK
    BR   RETURN
         TITLE 'PRE ABORT ROUTINE'
PREABORT DS    0H
         ENTRY PREABORT
*
   BALR   BASE,0
    USING   *,BASE
   L   BASE,B
    USING   BB,BASE
*
   IEHPOST  (14,1),TFC,
PREAB1   DS    0H
    BALR   BASE,0
     USING   *,BASE
    L    BASE,B
   USING   BB,BASE
         TM    IEHMVV10-4,FVOLUME  FROM VOLUME TO BE CLOSED        9373
         BO    CLOSEF              YES                             9373
FCLOSE   TM    IEHMVV10-4,BLANK    TO VOLUME TO BE CLOSED          9373
         BO    CLOSET              YES                             9373
TCLOSE   DS    0H                                                  9373
    BAL   RETURN,MSG
    IEHPOST  (14,1),TFC,
         MVI   IEHMVV41+13,X'04'       SET RETURN CODE           A18773
         OI    IEHMVV20+2,BLANK   TURN ON MIDABORT
         TM    IEHMVV20,VOLUME     VOLUME OPERATION
    BO   SINGLE
         MVC   IEHMVV00(6),MODNAME
         MVI   IEHMVV00+6,C'S'     ADD S TO MODULE NAME
         TM    IEHMVV20,DSGROUP    DSGROUP OPERATION
         BO    GODSG
         TM    IEHMVV20+2,EOF
         BO    GOHOME
         MVI   IEHMVV00+7,C'T'     ADD T TO MODULE NAME
ALLDONE  DS    0H
         XCTL  (2,12),EPLOC=(12)
SINGLE   MVC   IEHMVV00(6),MODNAME
         MVI   IEHMVV00+6,C'S'
         MVI   IEHMVV00+7,C'Z'
         B     ALLDONE
*
GOHOME   MVI   IEHMVV00+7,C'K'
         B     ALLDONE
GODSG    DS    0H
         MVI   IEHMVV00+7,C'H'
         B     ALLDONE
CLOSEF   DS    0H
         L     ACCE,IEHMVV30       ADDRESS OF FROM DCB
         MVI   IEHMVV70+8,DEACTIVE     DEACTIVATE INPUT TRLR EXIT  UL0H
         CLOSE ((ACCE))
         B     FCLOSE
CLOSET   DS    0H
         L     ACCE,IEHMVV31       ADDRESS OF TO DCB
         MVI   IEHMVV70+12,DEACTIVE    DEACTIVATE OUTPUT TRLR EXIT UL0H
         CLOSE ((ACCE))
         B     TCLOSE
CATALOG  EQU   X'04'
DASD     EQU   X'20'
         TITLE 'MESSAGE HANDLER'
MSG      DS    0H
         STM   REG0,REG15,200(REG12) STORE REGISTERS
    DROP   BASE
         BALR  REG15,0
         USING *,REG15
   L   BASE,B
         DROP  REG15
    USING   BB,BASE
         LR    R7,RETURN
         MVI   IEHMVV00,ONES
         MVI   IEHMVV00+1,BLANK
         MVC   IEHMVV00+2(120),IEHMVV00+1
         TM    IEHMVV61,ODD
*                                       MESSAGE
         BO    NORMMES                       NORMAL MESSAGE
*                                            DATA SET MESSAGE
*
         MVC   IEHMVV00+1(4),IEH4       SET UP MSG NUMBER
         LA    ACCE,127
         SR    ACCO,ACCO           MAKE HIGH ORDER BIT OF FIRST BYTE
         IC    ACCO,IEHMVV61               ZERO
         NR    ACCO,ACCE
         L     R3,AIEH4DD          ADDR OF CODE
         LA    ACCO,0(R3,ACCO)     SET UP MESSAGE DIAGNOSTIC CODE
    MVC  IEHMVV00+5(2),0(ACCO)
         MVI   IEHMVV00+7,X'C9'
         L     ACCE,MSGH                SET UP MSG HEADER
         LA    ACCO,7
         BAL   R8,MSGMOVE
*
         L     ACCE,IEHMVV21            SET UP DSNAME
         LA    ACCO,43
         BAL   R8,MSGMOVE
         TM    IEHMVV61,NOTMOVE    UNLOAD MSG OR NOT MOVED
         BO    MSGUNLD                       UNLOAD MSG
         LA    ACCE,2                        NOT MOVED
MSGAA    DS    0H
         BAL   R8,MSGDMOVE              SET UP FINAL PART
         SR    ACCE,ACCE
         IC    ACCE,IEHMVV61                 OF MSG
         BAL   R8,MSGDMOVE
PRINTMES SR    REG0,REG0           TO PRINT A NORMAL MSG
         LA    3,IEHMVV00
         LINK  EP=IEHMVESU
         B     MSGCHECK(LINK)           CHECK RETURNS
MSGCHECK B     GOODMSG                  GOOR WRITE
         XCTL  EP=IEHMVESK              I/O ERROR
*
GOODMSG  LR    RETURN,R7
         MVI   IEHMVV61,ZERO       MOVE ZERO INTO MSG INDICATOR
         LM    REG0,REG15,200(REG12)
         BR    RETURN
MSGUNLD  DS    0H
         NI    IEHMVV61,UNLOADM    TURN OFF UNLOAD MSG BIT
         LA    ACCE,0
         B     MSGAA
MSGDMOVE DS    0H
    SLL   ACCE,1
         L     R3,ADMSG            LOAD ADDRESS OF MESSAGESTART
         LH    ACCO,2(R3,ACCE)
         LH    ACCE,0(R3,ACCE)
         A     ACCE,MSGH
MSGMOVE  DS    0H
         LA    R9,IEHMVV00+121
MSGLOOP  CLI   0(R9),BLANK         FIND LAST NONBLANK
         BNE   MSGPL                         CHARACTER IN
         BCT   R9,MSGLOOP                    MSG AREA
MSGPL    DS    0H
         EX    ACCO,MSMOVE         MOVE MSG INTO PRINTOUT AREA
         BR    R8                  BRANCH BACK TO FINISH MSG
NORMMES  DS    0H
         SR    ACCE,ACCE
         IC    ACCE,IEHMVV61            GET MESSAGE CODE
         LA    ACCE,1(0,ACCE)
         SLL   ACCE,1                   CALCULATE MESSAGE POINTER
*
         L     R3,ANORMALM         LOAD ADDR OF NORMAL MSG
         L     ACCE,0(R3,ACCE)     GET MSG PTR
         SR    ACCO,ACCO
         IC    ACCO,0(ACCE,0)           GET MESSAGE LENGTH
         LA    ACCE,1(0,ACCE)
         EX    ACCO,NORMM               MOVE MESSAGE TO PRINT AREA
         B     PRINTMES                 GO TO PRINT MESSAGE
NORMM    MVC   IEHMVV00+1(1),0(ACCE)
B        DC    A(BB)
         ENTRY MSG
IEH4     DC    CL4'IEH4'
MSMOVE   MVC   2(1,R9),0(ACCE)
MSGH     DC    A(MSGHEAD)               POINTER TO MESSAGES
ZEROS    DC    2F'0'                                           @YA01681
ADMSG    DC    A(MSGSTART)
ANORMALM DC    A(NORMALM)
AIEH4DD  DC    A(IEH4DD)
         EXTRN MSGSTART
         EXTRN NORMALM
         EXTRN IEH4DD
         EXTRN MSGHEAD
         IEHMVV
         SPACE
DEVCHAR  EQU   IEHMVV00+200            SPACE FOR DEVICE CHARACTER DATA
         SPACE 3
UNLDREC  DS    0D                      DEFINE THE HEADER RECORD
         DS    XL1   (PHONY BYTE)      FOR UNLOADED DATASETS
UNLDLLI  DS    XL3                     LENGTH FIELD
         SPACE 2
F1DSCB   DS    0F
         IECSDSL1  (1)                 DEFINE A FORMAT 1 DSCB
         SPACE 2
UNLDDIR  DS    XL2                     DIRECTORY QUANTITY
UNLDFLAG DS    XL1                     UNLOAD CONTROL FLAG
UNLDSIZE DS    XL4                      PRIM ALLOC OF DS (IN BYTES)
UNLDSSIZ DS    XL4                      SEC ALLOCATION OF DS (IN BYTES)
UNLDSPAR DS    XL42                     UNUSED SPARE BYTES
UNLDDEVT DS    XL4                      FROM DEVICE TYPE
         SPACE 1
         END   IEHMVESY
