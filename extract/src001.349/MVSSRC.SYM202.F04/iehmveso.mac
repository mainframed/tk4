*TITLE 'IEHMVSSO'                                                     *
*FUNCTION/OPERATION: THIS ROUTINE HANDLES MOVE AND COPY SITUATIONS    *
*WHEN AN I/O ERROR OCCURES WHILE WORKING WITH A DATA SET,WORK FILE,   *
*SYSIN, OR SYSOUT. IT WILL ATTEMPT TO SCRATCH THE 'TO' DATA SET AND   *
*THEN GO TO THE PROPER ROUTINE TO CONTINUE WITH THE USERS REQUESTS. IF*
*HOWEVER, THIS ROUTINE GOT CONTROL BECAUSE OF AN I/O ERROR ON SYSOUT  *
*IT WILL PASS CONTROL TO FINAL WRAP (IEHMVSSK) WHO WILL TERMINATE THE *
*JOB.                                                                 *
*ENTRY POINTS: IEHMVESO                                               *
*INPUT: NONE                                                          *
*INPUT: NONE                                                          *
*OUTPUT: NONE                                                         *
*EXTERNAL ROUTINES: IEHMVSSU                                          *
*EXITS - NORMAL IEHMUSSK, IEHMVSSH, IEHMVSSZ, IEHMUSST                *
*        ERRORS: IEHMVSSK                                             *
*TABLES/WORK AREAS: IEHMVV00                                          *
*ATTRIBUTES: REENTRANT                                                *
*
*********************************************************************
**
**                            IEHMUSSO
**
*********************************************************************
*
IEHMVSSO CSECT                                                   A19476
*041600,045800                                                   A19476
*C009800,010000                                                @ZM30153
*A009900                                                       @ZM30153
*C009800,010000                                                @ZA10916
A0       EQU   0
A1       EQU   1
A2       EQU   2
A3       EQU   3
A4       EQU   4
A5       EQU   5
A6       EQU   6
A7       EQU   7
A8       EQU   8
A9       EQU   9
A10      EQU   10
A11      EQU   11
A12      EQU   12
A13      EQU   13
A14      EQU   14
A15      EQU   15
IEHMVESO BALR  A9,0                     ESTABLISH ADDR FOR PROGRAM
         ENTRY IEHMVESO
         USING *,A9
         USING IEHMVV,A12               ESTABLISH ADDR TO COMMUNICATION
         L     A10,MSGAD                ESTABLISH ADDR TO MESSAGES
         USING IEHMSGSO,A10
         TM    IEHMVV20+3,X'08'         TEST PREALLOCATE BIT
         BO    RETURN                     IF DS WAS PREALLOCATED ---
         L     A2,IEHMVV31+8            LOAD ADDR OF TO DDNAME @ZA10916
         SR    A1,A1                    CLEAR REGISTER         @ZM30153
         ICM   A1,3,14(A2)              LOAD ADDR OF TO UCB    @ZA10916
         LR    A0,A1                    PUT UCB ADDR IN A0
         USING UCB,A1
         TM    UCBID,X'FF'
         DROP  A1
         BC    12,SCRH2321
         TM    18(A1),X'20'             TEST FOR 'TO' VOL BEING
         BZ    RETURN                     DIRECT ACCESS - IF NOT ---
SCRH2321 L     A1,SCRHCODE              LOAD SCRATCH COLTROL BIT
         L     A2,IEHMVV21+4            LOAD ADDR OF 'TO' DSNAME
         SR    A3,A3                    CLEAR A3
         L     A4,IEHMVV10             ADDR OF TO VOL LIST MADE BY SN
         STM   A1,A4,IEHMVV00           STORE PARAMETER LIST
         SCRATCH IEHMVV00               SCRATCH THE 'TO' DATA SET
         B     *+4(A15)                 CHECK ERROR RETURN
         B     SCRHOK    =0              --- OK SCRATCH
         B     SCRHBAD   =4              --- VOL NOT MOUNTED
         B     SCRHBAD   =8              --- UNUSUAL CONDITION
SCRHOK   NOP   0(0)
         B     RETURN
SCRHBAD  NOP   0(0)
         TM    IEHMVV20+2,X'01'        TEST PERMANENT ABORT
         BO    NOMSG                      IF ON ---
         LA    A8,IEHMVV00+1       ******
         LA    A15,4                    *
         BAL   A14,MSGCLEAR             *
         SR    A15,A15                  *
         BAL   A14,MSGDS                *    WRITE MESSAGE -
         LA    A15,8                    *
         BAL   A14,MSG                  *       'DS XX MAY NOT BE SCR'
         BAL   A2,LINEPR                *
         SR    A15,A15                  *
         BAL   A14,MSGVOL               *
         BAL   A2,LINEPR           ******
NOMSG    NOP   0(0)
         B     RETURN
RETURN   IEHPOST ,TC
         L     14,12(0,13)              RESTORE FINAL WRAP RETURN
         TM    IEHMVV20+2,X'01'        TEST FOR PERM ABORT
         BO    END                        IF ON ---
         TM    IEHMVV20,X'10'           TEST FOR GROUP OPERATION
         BO    ENDGRP                     IF SO ---
         TM    IEHMVV20,X'02'           TEST FOR VOLUME OPERATION
         BO    ENDVOL                     IF SO ---
         TM    IEHMVV20+2,X'20'        TEST FOR END BIT
         BO    END                        IF ON ---
         XCTL  (2,12),EP=IEHMVEST       CARD SCAN
END      XCTL  (2,12),EP=IEHMVESK       FINAL WRAP
ENDGRP   XCTL  (2,12),EP=IEHMVESH       DO REST OF GROUP
ENDVOL   XCTL  (2,12),EP=IEHMVESZ       DO REST OF VOLUME
*
*********************************************************************
**
**                            MESSAGE MOVER
**
**       THIS SUBROUTINE IS LINKED TO IN ORDER TO MOVE MESSAGES
**       FROM THE MESSAGE CSECT TO THE PRINT AREA (IEHMVV00)
**       THE LINKAGE IS AS FOLLOWS:          A8= LOCATION FOR MSG
**                                 A14= RETURN ADDR
**                       A15= DISPLACEMENT OF ADCON OF CORRECT MSG
**       WHEN THIS ROUTINE IS DONE A8  WILL POINT ONE SPACE PAST
**       THE MOVED MESSAGE --- ALL REGISTERS ARE TRANSPARENT
**       EXCEPT REGISTERS A1 AND A15 -- THE PRINT AREA IS CLEARED
**       IF THE INSTRUCTION 'MSGCLEAR' IS LINKED TO
**
*********************************************************************
*
MSGCLEAR MVI   IEHMVV00,X'40'           CLEAR THE PRINT AREA
         MVC   IEHMVV00+1(120),IEHMVV00
MSG      L     A1,MSGAD                 GET ADDR OF MSG CSECT
         AR    A1,A15                   ADD DISP OF CORRECT ADCON
         L     A1,0(A1)                 LOAD ADDR OF MSG-1
         IC    A15,0(A1)               LOAD LENGTH OF MSG
         EX    A15,MSGMOVE              EXECUTE MOVE
         AR    A8,A15                   CALC ADDR OF END OF MSG
         LA    A8,2(A8)                BUMP REG TO END OF MSG +1
         BR    A14                      RETURN
MSGMOVE  MVC   0(1,A8),1(A1)           MOVE MSG
*
*********************************************************************
**
**                            DATA SET NAME MOVER
**
**       THIS SUBROUTINE IS LINKED TO IN ORDER TO MOVE DATA SET
**       NAMES INTO A MESSAGE THE LINKAGE IS AS FOLLOWS:
**                                           A8= LOCATION FOR NAME
**                                 A14= RETURN ADDR
**                       A15= CODE TO DEFINE WHICH DS NAME
**                             IF A15=0 ---MOVE 'TO' DS NAME
**                             IF A15= NOT 0 --- MOVE 'FROM' DS NAME
**       WHEN THIS ROUTINE IS DONE A8 WILL POINT ONE SPACE PAST
**       THE MOVED NAME
**
*********************************************************************
*
MSGDS    LTR   A15,A15                  TEST FOR A15=0
         BZ    TODS                       IF SO BRANCH
         L     A15,IEHMVV21             GET ADDR OF 'FROM' DS NAME
         B     DSMOVE
TODS     L     A15,IEHMVV21+4           GET ADDR OF 'TO' DS NAME
DSMOVE   MVC   0(44,A8),0(A15)          MOVE DS NAME TO PRINT AREA
CHKEND   CLI   0(A8),X'40'              CHECK FOR END OF NAME
         BE    NAMEEND                    IF REACHED BRANCH ---
         LA    A8,1(A8)                 BUMP POINTER TO PRINT AREA
         B     CHKEND
NAMEEND  LA    A8,1(A8)                 ALLOW FOR SPACE AFTER NAME
         BR    A14                      RETURN
*
********************************************************************
**
**                            MESSAGE WRITE CALLER
**
**       THIS ROUTINE WILL BE LINKED TO WHENEVER A LINE OF OUTPUT
**       IS TO BE WRITTEN ON 'SYSPRINT' IT WILL HAVE NO PARAMETERS
**       AND ASSUME THAT THE LINE TO BE WRITTEN IS LOCATED AT IEHMVV00
**       AFTER THE WRITE IS COMPLETE, CONTROL WILL BE PASSED BACK VIA
**       A2  UNLESS A PERMINANT I/O ERROR WAS ENCOUNTERED
**
********************************************************************
*
LINEPR   ST    A3,IEHMVV00+128         SAVE REG 3
         LA    A3,IEHMVV00             LOAD ADDR OF PRINT AREA
         LINK EP=IEHMVESU              GO TO MSG WTR
         L     A3,IEHMVV00+128
         B     *+4(A15)                 CHECK RETURN CODE
         B     0(A2)                         =0  OK WRITE
         IEHPOST ,TC
         L     14,12(0,13)              RESTORE REG 14
         XCTL  (2,12),EP=IEHMVESK
*
*********************************************************************
**
**                            VOLUME LIST MOVER
**
**       THIS ROUTINE IS LINKED TO  IN ORDER TO MOVE A VOLUME LIST
**       TO THE PRINT AREA PLUS 20 BYTES(IEHMVV00+20)
**       THE LINKAGE IS AS FOLLOWS
**                                 A14= RETURN ADDRESS
**       THE FORMAT OF THE LIST IS AS FOLLOWS
**         FOR DIRECT ACCESS --- 123 7986 A1763 IBM403
**         FOR TAPE          --- 24,0001 7987,0007
**         FOR UNIT RECORD   --- UNIT RECORD EQUIP -- UNIT = HR
**
**                            A15= CODE TO DEFINE WHICH VOL LIST
**                                 IF A15=0 --- 'TO' VOL LIST
**                                 IF A15= NOT ZERO --- 'FROM' VOL LIST
*********************************************************************
*
MSGVOL   MVI   IEHMVV00,X'40'           CLEAR PRINT AREA
         ST    A14,SAVE14               SAVE RETURN ADDR
         SR    A0,A0                    CLEAR A0
         MVC   IEHMVV00+1(120),IEHMVV00
         LTR   A15,A15                  CHECK WHICH LIST TO MOVE
         BZ    TOVOL                      IF 'TO' LIST ---
         L     A1,IEHMVV22              LOAD ADDR OF FROM VOL LIST
         IC    A0,IEHMVV22              LOAD NO OF VOLUMES IN FROM LIST
         B     MOVEVOL
TOVOL    L     A1,IEHMVV10             LOAD ADDR OF TO VOL LIST
         LH    A0,0(A1)                LOAD COUNT OF VOLUMES
         LA    A1,2(A1)                BUMP PTR TO START OF VOL IDS
MOVEVOL  TM    2(A1),X'08'             TEST FOR VOL = UNIT REC
         BO    UNITVOL                    IF SO ---
         CLI   IEHMVV74+12,X'FF'  WAS OUTPUT ON NL TAPE          A19476
         BE    UNITVOL                    IF SO ---
         LA    A15,IEHMVV00+20          LOAD ADDR OF PRINT AREA+20
CHKLIST  MVC   0(6,A15),4(A1)           MOVE VOL ID
         LA    A15,6(A15)               BUMP REG PAST VOL ID
         LH    A14,10(A1)               LOAD VOL SEQ
         LTR   A14,A14                  CHECK IF TAPE
         BZ    SETBLNK                    IF NOT TAPE ---
         MVI   0(A15),C','              MOVE , TO VOL LIST
         CVD   A14,IEHMVV00+128         CONVERT TO DEC
         UNPK  1(4,A15),IEHMVV00+128(8) UNPACK
         OI    4(A15),X'F0'             RESET SIGN
         LA    A15,5(A15)               BUMP REG PAST SEQ NO
SETBLNK  LA    A15,1(A15)               LEAVE SPACE IN VOL LIST
         LA    A1,12(A1)
         BCT   A0,CHKLIST               LOOP IF MORE VOL ID.S
         L     A14,SAVE14               RESTORE REG A14
         BR    A14                      RETURN
SAVE14   DS    F
UNITVOL  L     A15,MSGAD                LOAD ADDR OF MSG CSECT
         L     A15,0(A15)               LOAD ADDR OF FIRST MSG
         MVC   IEHMVV00+20(26),1(A15)      MOVE MSG TO PRINT
         MVI   IEHMVV74+12,X'00'  TURN NL TAPE SWITCH OFF        A19476
         BR    A14                      RETURN
         DS    0F
SCRHCODE DC    XL4'41005000'
MSGAD    DC    A(IEHMSGSO)
         IEHMVV
UCB      DSECT
         IEFUCBOB
IEHMSGSO CSECT
*
*********************************************************************
**
**                            MSG CSECT FOR IEHMVSSO
**
*********************************************************************
*
         DC    A(MSGA)
         DC    A(MSGB)
         DC    A(MSGC)
MSGA     DC    AL1(MSGB-MSGA-2)
         DC    CL26'UNIT REC OR UNLABLED TAPE'
MSGB     DC    AL1(MSGC-MSGB-2)
         DC    CL16'IEH362I DATA SET'
MSGC     DC    AL1(MSGD-MSGC-2)
         DC    CL30'MAY NOT BE SCRATCHED ON VOLUME'
         DC    CL3'(S)'
MSGD     EQU   *
         END
