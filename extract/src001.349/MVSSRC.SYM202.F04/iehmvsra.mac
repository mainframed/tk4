*TITLE B'I                                                            *
*'IEHMVSRA-IEHMOVE   BPAM/SAM RELOAD'                              2365
         TITLE 'IEHMVSRA-IEHMOVE   BPAM/SAM RELOAD'                2365
*                                                                     *
*                                                                     *
*FUNCTION/OPERATION:                                                  *
*   THIS ROUTINE RESTORES DATA SETS WHICH HAVE BEEN 'UNLOAD' TO THEIR *
*ORIGINAL FORM (BPAM/SAM) AND PLACES THEM UPON THE ALLOCATED DEVICES. *
*FOR BPAM IF THE INPUT IS A NORMAL RECORD IT IS WRITTEN OUT ON THE    *
*ALLOCATED DEVICE, IF THE INPUT IS A NOTE LIST THE TTR'S IN IT ARE    *
*UPDATED TO REFLECT THE NEW LOCATIONS, IF THE INPUT IS A DIRECTORY    *
*ENTRY ANY TTR'S IN IT ARE UPDATED. FOR BSAM THE INPUT IS WRITTEN OUT *
*OUT ON THE ALLOCATED DEVICE.                                         *
*                                                                     *
*                                                                     *
*                                                                     *
*ENTRY POINTS:                                                        *
*        IEHMVERA - ONLY ENTRY, L  15, A (IEHMVERA) BALR 15,15        *
*INPUT:                                                               *
*   RECORDS READ BY IEHMVSRK WHICH HAVE CONTROL INFORMATION APPENDED  *
*TO THEM AND MAY CONTAIN LOCATION DEPENDENT INFORMATION.              *
*OUTPUT:                                                              *
*   INPUT RECORDS WITH CONTROL INFORMATION REMOVED AND LOCATION       *
*DEPENDENT INFORMATION UPDATED.                                       *
*EXTERNAL ROUTINES:                                                   *
*        'IEHMVSRK - BREAD' READS 'UNLOADED DATA SET AND FORMATS THE  *
*RECORDS WHICH ARE PASSED TO IEHMVSRA.                                *
*EXITS - NORMAL                                                       *
*   PRINT MESSAGE, FREEMAIN AND TRANSFER CONTROL TO IEHMVESN WHEN     *
*THE ENTIRE DATA SET HAS BEEN 'LOADED'.                               *
*ERRORS:                                                              *
*   SET ABORT INDICATOR, PRINT MESSAGE, FREEMAIN, AND TRANSFER CONTROL*
*TO IEHMVESN WHEN ANY ERROR OCCURS.                                   *
*TABLES/WORK AREAS:                                                   *
*   TABLE OF MESSAGE TEXTS, VARIABLE SIZE WORK AREA FOR INPUT         *
*ATTRIBUTES:                                                          *
*   READ ONLY, REENTRANT, REUSABLE                                    *
REG0     EQU   0
REG1     EQU   1
REG2     EQU   2
REG3     EQU   3
REG4     EQU   4
REG5     EQU   5
REG6     EQU   6
REG7     EQU   7
REG8     EQU   8
REG9     EQU   9
REG10    EQU   10
REG11    EQU   11
REG12    EQU   12
REG13    EQU   13
REG14    EQU   14
REG15    EQU   15
         SPACE 2                                                   2365
***** THIS ROUTINE TRANSFORMS PARTITIONED DATA SETS THAT HAVE BEEN ****
*****  'UNLOADED'INTO PROPERLY FORMATTED PDS AND 'LOADS' THEM ON   ****
*****  A SPECIFIED DIRECT ACCESS DEVICE.                           ****
IEHMVSRA CSECT
*C015080                                                       @ZA13724
*A014480-015080                                                @ZA07335
*D014480-015440                                                @ZA07335
*A043170-043190                                                @ZA03361
*C043800                                                       @ZA03361
         SPACE 2                                                   2365
*A036831-036833                                                @YA01704
*D016050-016070                                                @YA01704
*A016050-016070,036805-036980,083060-083120                     YA01221
*C014050                                                        YA01221
*A026200,038800,065350,082800                                    A44326
* 012920,053600-053800,055240-055280,080100                      A34119
* 054000-054600                                                  A34119
* 015610,015700                                                  A37919
*                                                                A31964
* 058000,022800,036400                                          PTM3039
* 12820-12940,55450-55550,67800,68840-68960,75860-72920          A26493
* 79600,80060-80120,    014000                                   A26493
* 080000                                                         A26581
* 044200,044400                                                  PM2166
*                                                                A22318
* 015600,016000                                                  00GM0I
* 014600-015400                                                  A23094
*2633066400                                                        3606
         EXTRN IEHMVERK
         ENTRY IEHMVERA
IEHMVERA SAVE  (14,12),T,IEHMVSRA-OZ13724                      @ZA13724
         BALR  REG10,0
         USING *,REG10
         USING IEHMVV,REG12
         USING PDSLWORK,REG9
         USING PDSIO,REG8
*****  CHECK FOR VALID RECORD FORMAT AND BLOCKSIZE  *****
         L     REG3,IEHMVV30+8         COMPARE RECORD FORMATS OF A26493
         L     REG4,IEHMVV31           FROM DSCB AND TO DCB      A26493
         CLC   DCBRECFM(1,REG4),DS1RECFM(REG3)                   A26493
         BNE   PDSLFMT                 NO -- ISSUE MESSAGE       A26493
         CLC   DCBBLK(2,REG4),DS1BLK(REG3)  BLKSIZE EQU          A34119
         BNE   PDSLFMT                 NO -- ISSUE MESSAGE       A26493
***** INITIALIZATION PROCEDURE *****
         SR    REG3,REG3
         L     REG4,IEHMVV31           DCB ADDR
         IC    REG3,16(0,REG4)         INSERT KEY LENGTH
         LA    REG3,6(0,REG3)          LENGTH OF RECORD INFO FIELD
         LA    REG0,276            BASIC SIZE OF WORKAREA--FOUR YA01221
*                                    BYTES ADDED IN RLS18 FOR    PM2166
*                                    STORING TRACK BALANCE.      PM2166
         TM    26(REG4),X'02'          DSORG=PO
         BZ    PDSLIN                  NO
         LH    REG2,62(REG4)        INCREASE WORKAREA PDSLWORK @ZA07335
*                                   BY THE BLKSIZE IN CASE OF  @ZA07335
         AR    REG0,REG2            NOTELIST RECORDS           @ZA13724
         AR    REG0,REG3                OF WORKAREA---PDSLWORK.  A23094
PDSLIN   LR    REG8,REG0               SAVE SIZE OF 'PDSLWORK'   A37919
         GETMAIN R,LV=(0)                                        A37919
         LR    REG9,REG1               SAVE WORK AREA ADDR
         ST    REG8,PDSLSTM1       SAVE SIZE OF 'PDSLWORK'       00GM01
         TM    IEHMVV20+2,PDSABORT     INVALID LRECL/BLKSIZE?    A34119
         BO    PDSLFMT2                YES RETURN TO MSGRTN      A34119
         MVC   PDSTRKBL(2),18(REG4) SAVE INITIAL TRACK BALANCE.  PM2166
         LA    REG1,PDSNOTE            ADDR OF NOTE LIST AREA
         AR    REG1,REG3               ADD LGTH OF RECORD INFO AND KEY
         ST    REG1,PDSLAD3            SAVE ADDR OF NOTE LIST PROPER
         LH    REG0,62(0,REG4)         BLOCK SIZE
         AR    REG0,REG3               TOTAL IO AREA
         ST    REG0,PDSLSTM2           SAVE SIZE OF AREA
         GETMAIN R,LV=(0)              GET STORAGE FOR IO AREA
         LR    REG8,REG1               ADDR OF MAIN STORAGE ACQUIRED
         AR    REG1,REG3               ADD LGTH OF RECORD INFO AND KEY
         MVI   PDSLSW,X'C0'            INITIALIZE INDICATOR
         IEHPRE (14,1),TF
         MVI   PDSPTR,X'00'
         MVC   PDSPTR+1(11),PDSPTR     CLEAR WORK AREA
         L     REG1,IEHMVV31           DCB ADDR
         LA    REG3,PDSLSYNX           SYNAD
         ST    REG3,PDSLSTR            SAVE SYNAD
         MVC   57(3,REG1),PDSLSTR+1    PUT IN DCB
***** GET AN UNLOADED RECORD *****
PDSGET   SR    REG0,REG0               ZERO PARAM REGISTER
         LA    REG1,PDSREC             ADDR OF INPUT AREA
         L     REG15,ADBREAD           ADDR OF READING RTN
         BALR  REG14,REG15             GO TO GET RECORD
***** ACT ON RETURN CODE FROM BREAD *****
         B     PDSLMSG                 GO TO MSG RTN
***** END OF INPUT PROCEDURE *****
PDSLEOI  TM    PDSREC+2,X'02'          SEQUENTIAL ACCESS METHOD
         BO    PDSLEOD                 YES
         TM    PDSLSW,X'40'            ENTRY ALREADY STOWED
         BO    PDSLEOD                 YES
         LA    REG11,PDSLEOD           RETURN ADDR FROM MSG RTN
         B     PDSL26                  GO TO STOW DIRECTORY ENTRY
***** DETERMINE TYPE OF RECORD *****
PDSLRET  LH    REG2,PDSREC             LENGTH OF RECORD
         STH   REG2,IEHMVV10-2                                  PTM3039
         TM    PDSREC+2,X'22'          PDS MEMBER OR SAM RECORD
         BM    PDSL1                   YES
         TM    PDSREC+2,X'10'          IS THIS A NOTE LIST
         BO    PDSL2                   YES
         TM    PDSREC+2,X'08'          IS THIS A DIRECTORY ENTRY
         BO    PDSL3                   YES
         TM    PDSREC+2,X'04'          DOES THIS INDICATE N L POSITION
         BO    PDSL4B                  YES
         LA    REG15,12(0,0)           RETURN CODE
         B     PDSLMSG                 ABORT-NO RECORD TYPE
***** PROCESS A RECORD WHICH IS A MEMBER OF A PDS *****
PDSL1    LA    REG3,PDSREC+6           ADDR OF RECORD
         BAL   REG11,PDSL15            GO TO WRITE RECORD
         TM    PDSREC+2,X'02'          SAM RECORD
         BO    PDSGET                  YES
         LTR   REG7,REG7               POINTERS IN DIRECTORY ENTRY
         BH    PDSL11                  YES
PDSL13   DS    0H                                                A44326
         TM    PDSLSW,X'04'            NOTE LIST EXCHANGE        A44326
         BO    PDSL2E                  YES RETURN                A44326
         TM    PDSLSW,X'80'            ANY POINTERS IN NOTE LIST
         BO    PDSGET                  NO
PDSL18   DS    0H                                                A44326
         LR    REG3,REG5               INIT SCAN CNTR            A44326
         L     REG4,PDSLAD3            GET NL ADDR               A44326
PDSL18A  DS    0H                                                A44326
         TM    0(REG4),X'80'           TTR UPDATED               A44326
         BO    PDSL18D                 YES GET NEXT TTRX         A44326
         CLI   2(REG4),X'00'           TTRX ZERO                 A44326
         BE    PDSL18B                 YES FLAG THIS TTR         A44326
         CLC   PDSREC+3(3),0(REG4)     TTR'S EQUAL               A44326
         BNE   PDSL18C                 NO GET NEXT TTRX          A44326
         BAL   REG11,PDSL12            YES NOTE THIS TTR         A44326
         IC    REG1,3(0,REG4)          ZERO LAST BYTE            A44326
         ST    REG1,PDSLSTR            SAVE NEW PTR              A44326
         MVC   0(4,REG4),PDSLSTR       UPDATE TTRX               A44326
PDSL18B  DS    0H                                                A44326
         OI    0(REG4),X'80'           FLAG THIS TTRX            A44326
         BCT   REG5,PDSL18C            GET NEXT TTR IF ANY       A44326
         L     REG4,PDSLAD3            GO TO BEGIN OF NL         A44326
PDSL18E  DS    0H                                                A44326
         NI    0(REG4),X'7F'           RESTORE TTRX              A44326
         LA    REG4,4(REG4)            JUMP TO NEXT TTRX         A44326
         BCT   REG6,PDSL18E            IF ANY                    A44326
         OI    PDSLSW,X'80'            INDIC NL UPDATED          A44326
         B     PDSGET                  GET NEXT RECORD           A44326
PDSL18C  DS    0H                                                A44326
         BCT   REG3,PDSL18D            GET NEXT TTR IF ANY       A44326
         B     PDSGET                  GET NEXT RECORD           A44326
PDSL18D  DS    0H                                                A44326
         LA    REG4,4(REG4)            JUMP TO NEXT TTRX         A44326
         B     PDSL18A                 AND CHECK IT              A44326
***** PROCESS A RECORD WHICH IS A NOTE LIST *****
PDSL2    DS    0H                                                A44326
         TM    PDSLSW,X'08'            NOTE LIST IN CORE         A44326
         BNO   PDSL2C                  NO CONTINUE               A44326
         MVC   PDSNTTR(3),PDSREC+3     YES SAVE NEW NL TTR       A44326
         OI    PDSLSW,X'04'            SET RET SW                A44326
         B     PDSL4                   WRITE OLD NL FIRST        A44326
PDSL2E   DS    0H                                                A44326
         NI    PDSLSW,X'FB'            RESET EXCH SWITCH         A44326
         MVC   PDSREC+3(3),PDSNTTR     RESTORE NEW NL TTR        A44326
PDSL2C   DS    0H                                                A44326
         OI    PDSLSW,X'08'            INDIC NOTE LIST IN CORE   A44326
         L     REG1,IEHMVV31           DCB ADDR                  A44326
         NI    PDSLSW,X'7F'            CLEAR INDICATOR           A44326
         LH    REG5,PDSPTRNO           ORG NBR TTRN'S            A44326
         LA   REG11,PDSDIR+12                                    A44326
FINDN    CLC   0(3,REG11),PDSREC+3     TTRN FOUND                A44326
         BE    TTRNFND                 YES SAVE BYTE N           A44326
         LA    REG11,4(REG11)          NO GO TO NEXT TTRN        A44326
         BCT   REG5,FINDN              IF ANY                    A44326
TTRNFND  DS    0H                                                A44326
        IC     REG5,3(REG11)           SAVE NBR OF POINTERS      A44326
         LH    REG2,PDSREC             GET RECORD LENGTH         A44326
         LA    REG2,6(0,REG2)          ADD 6 TO GET FULL RECORD LENGTH
         LA    REG0,256(0,0)           PUT 256 IN REG 0
         LA    REG1,PDSNOTE            ADDR OF NOTE LIST AREA
         LA    REG3,PDSREC             ADDR OF RECORD
PDSL2A   CLR   REG2,REG0               LENGTH GREATER THAN 256
         BNH   PDSL2B                  NO
         MVC   0(256,REG1),0(REG3)     MOVE MOVE NEXT 256 BYTES OF REC
         AR    REG3,REG0               INCREASE ADDR BY 256
         SR    REG2,REG0               DECREASE LGTH BY 256
         AR    REG1,REG0     INCREASE ADDRESS BY 256               3606
         B     PDSL2A
PDSL2B   BCTR  REG2,0                  SUBTRACT 1 FROM LGTH
         EX    REG2,PDSL10             HAVE RECORD MOVED
         LR    REG6,REG5               SAVE NBR OF TTRX'S        A44326
         L     REG1,PDSLAD3            START OF NL               A52050
MAKEZERO DS    0H                                                A52050
         NI    0(REG1),X'7F'           CLEAR FIRST BIT           A52050
         LA    REG1,4(REG1)            POINT TO NEXT NOTE        A52050
         BCT   REG6,MAKEZERO           IF ANY                    A52050
         LR    REG6,REG5               SAVE NBR OF TTRX'S        A52050
         B     PDSGET                  GET ANOTHER RECORD
***** PROCESS A RECORD WHICH IS A DIRECTORY ENTRY *****
PDSL3    MVC   IEHMVV00(74),PDSREC+6   SAVE DIRECTORY ENTRY
         TM    PDSLSW,X'40'            DIRECTORY ENTRY ALREADY STOWED
         BO    PDSL3A                  YES
         BAL   REG11,PDSL26            GO TO STOW DIRECTORY ENTRY
PDSL3A   NI    PDSLSW,X'BF'            INDICATE NOT FIRST ENTRY
         TM    PDSREC+17,X'80'         IS THIS AN ALIAS ENTRY
         BO    PDSL7                   YES
         LH    REG2,IEHMVV10-2                                  PTM3039
         BCTR  REG2,0                  SUBTRACT 1 FROM LGTH
         EX    REG2,PDSL6              HAVE RECORD MOVED
         TM    IEHMVV20+3,X'08'        PREALLOCATION            YA01221
         BZ    PDSL3B                  NO CONTINUE              YA01221
*  THIS ROUTINE WILL CHECK THE OUTPUT DATA SET'S DIRECTORY      YA01221
*  TO SEE WHETHER THE MEMBER ALREADY EXISTS                     YA01221
*  IN SUCH A CASE THE MEMBER WILL BE SKIPPED                    YA01221
         MVC   BLDLIST+4(8),PDSDIR     GET THE NAME             YA01221
         XC    BLDLIST(4),BLDLIST      CLEAR THE FIELD         @YA01704
         MVI   BLDLIST+1,X'01'         INDIC ONE ENTRY         @YA01704
         MVI   BLDLIST+3,X'0E'         LENGTH OF THE ENTRY     @YA01704
         L     REG7,IEHMVV31           ADDR OUTPUT DCB          YA01221
         BLDL  (REG7),BLDLIST                                   YA01221
         LTR   REG15,REG15             DUPLICATE NAME           YA01221
         BNZ   PDSL3B                  NO CONTINUE              YA01221
PDSL3C   DS    0H                      YES SKIP THE FILE        YA01221
         SR    REG0,REG0               INDIC: NOT FIRST ENTRY   YA01221
         LA    REG1,PDSREC             ADDR INPUT AREA          YA01221
         L     REG15,ADBREAD           ADDR OF READER           YA01221
         BALR  REG14,REG15             GO TO READ               YA01221
         B     PDSL3D(REG15)           USE THE BRANCH TABLE     YA01221
PDSL3D   DS    0H                                               YA01221
         B     PDSL3E                  RC=0  CHECK THE RECORD   YA01221
         B     PDSL3F                  RC=4  END OF FILE        YA01221
         B     PDSLMSG                 RC=8  ERROR              YA01221
         B     PDSLMSG                 RC=12 ERROR              YA01221
PDSL3E   DS    0H                      CHECK THE RECORD         YA01221
         TM    PDSREC+2,X'08'          NEW MEMBER               YA01221
         BZ    PDSL3C                  NO SKIP ANOTHER RECORD   YA01221
         LA    REG15,20                CODE FOR MSG IEH319I     YA01221
         BAL   REG11,PDSLMSG           INDIC DUP MEMBER FOUND   YA01221
         OI    PDSLSW,X'40'            SKIP THE STOW            YA01221
         B     PDSL3                   PROCESS NEXT MEMBER      YA01221
PDSL3F   DS    0H                      END OF DATA              YA01221
         LA    REG15,20                CODE FOR MSG IEH319I     YA01221
         BAL   REG11,PDSLMSG           INDIC DUP MEMBER FOUND   YA01221
         L     REG7,IEHMVV31           ADDR OUTPUT DCB          YA01221
         OI    48(REG7),X'80'          INDIC LAST OPERATION     YA01221
*  WAS A WRITE TO HAVE THE TTRLL FIELD OF THE LABEL UPDATED     YA01221
         B     PDSLEOD                 GO TO TERMINATION        YA01221
PDSL3B   DS    0H                      CONTINUE PROCESSING      YA01221
         SR    REG7,REG7
         IC    REG7,PDSDIR+11          'C' BYTE FROM DIRECTORY ENTRY
         SRL   REG7,5                  NUMBER OF POINTERS PUT IN LOW
*                                        ORDER END OF REGISTER
         STH   REG7,PDSPTRNO           NUMBER OF POINTERS
         B     PDSGET                  GET ANOTHER RECORD
***** PUT OUT A NOTE LIST AND UPDATE POINTER IN DIRECTORY ENTRY *****
PDSL4B   DS    0H                                                A44326
         NI    PDSLSW,X'F7'            CLEAR NL IN CORE INDIC    A44326
PDSL4    DS    0H                                                A44326
         TM    PDSLSW,X'80'            ALL TTRX'S UPDATED        A44326
         BO    PDSL4A                  YES CONTINUE              A44326
         B     BADNOTE                 NO WRITE WARNING MSG      A44326
PDSL4A   DS    0H                                                A44326
         LA    REG3,PDSNOTE+6          ADDR OF RECORD
         LH    REG2,PDSNOTE            LENGTH OF NOTE LIST
         MVC   PDSREC+3(3),PDSNOTE+3   SAVE TTR OF NOTE LIST
         LA    REG11,PDSL11            ADDR OF UPDATE RTN
         B     PDSL15                  GO TO WRITE NOTE LIST
***** PROCESS AN ALIAS DIRECTORY ENTRY *****
PDSL7    MVC   IEHMVV00+8(3),PDSDIR+8  PUT TTR OF MEMBER IN ENTRY
         CLI   PDSPTRNO+1,X'00'        ANY POINTERS IN DIRECTORY
         BE    PDSL7A                  NO
         LH    REG1,PDSPTRNO           NUMBER OF POINTERS
         SLL   REG1,2                  MULT BY 4 TO GET LGTH OF UPDATE
         BCTR  REG1,0                  SUBTRACT 1 FROM LGTH
         EX    REG1,PDSL21             HAVE POINTERS UPDATED
PDSL7A   OI    PDSLSW,X'40'            INDICATE ENTRY STOWED
         LA    REG11,PDSGET            RETURN ADDR FROM STOW
         LA    REG2,IEHMVV00           ADDR OF DIRECTORY ENTRY
         MVC   PDSDIR(8),IEHMVV00      PUT ALIAS NAME IN DIRECTORY
PDSL8    L     REG1,IEHMVV31                                       2365
         LA    REG1,0(0,REG1)          CLEAR HIGH ORDER BYTE
         STOW  (1),(2),A               PUT OUT DIRECTORY ENTRY
*****  ACT ON RETURN CODE FROM STOW  *****
         LA    REG3,4              TO TEST FOR DUP NAME.         A22318
         CLR   REG15,REG3          IS RET CODE 4 (DUP NAME) ?    A22318
         BNE   NOTDUP              NO.                           A22318
*                                  YES. DUP MEMBER NAME IN TO DS A22318
         TM    IEHMVV20+3,X'08'        PREALLOCATED            @ZA03361
         BO    PRE                     YES BRANCH AROUND       @ZA03361
         L     REG1,IEHMVV31       'TO' DCB ADDR                 22318
         MVC   0(3,REG1),PDSDIR+8  SET RELAD FIELD IN TO DCB.    A22318
         MVI   PDSDIR+11,X'00'     ZERO 'C' BYTE OF STOW LIST    A22318
*                                     AND USE TTR RETURNED       A22318
*                                     BY STOW FOR BLOCK ADDR     A22318
*                                     IN POINT. POINT TO         A22318
*                                     RECOVER SPACE WHERE        A22318
*                                     DUP MEMBER WRITTEN.        A22318
         LA    REG0,PDSDIR+8       POINT R0 TO STOW LIST TTR.    A22318
         POINT (1),(0)             RECOVER DUP NAME SPACE.       A22318
PRE      L     REG1,IEHMVV31                                   @ZA03361
         MVC   18(2,REG1),PDSTRKBL RESTORE TRACK BALANCE STORED  PM2166
*                                    FROM LAST SUCCESSFUL STOW   PM2166
         OI    48(REG1),X'80'      SET DCBOFLGS TO INDICATE LAST PM2166
*                                    I/O OPERATION WAS A WRITE.  PM2166
*                                    THIS WILL FORCE A MERGE TO  PM2166
*                                    THE DSCB AT CLOSE TIME IF   PM2166
*                                    LAST MEMBER IS A DUP.       PM2166
         LR    REG15,REG3          RESTORE STOW RET CODE         A22318
         B     STOWRCDE            GO TEST STOW RET CODE         PM2166
NOTDUP   L     REG1,IEHMVV31       'TO' DCB ADDR.                PM2166
         MVC   PDSTRKBL(2),18(REG1) SAVE TRACK BALANCE AFTER     PM2166
*                                    SUCCESSFUL STOW.            PM2166
STOWRCDE LA    REG15,16(REG15)     ADD 16 TO STOW RET CODE.      PM2166
******************************************************************21919
*                                                                *21919
*   THE RETURN CODES X'14',X'18' AND X'1C' OF THE STOW MACRO     *21919
*   GIVE THE MESSAGE:                                            *21919
*         IEH326I I/O ERROR ENCOUNTERED IN OUTPUT DATA SET       *21919
*   THIS MESSAGE IS THE GOOD ONE FOR RETURN CODE X'10'           *21919
*   THE ABOVE MENTIONED RETURN CODES ARE CAUSED BY               *21919
*   X'14' I/O REQUESTS AGAINST THE SAME DCB ARE STILL            *21919
*   OUTSTANDING                                                  *21919
*   X'18' THE DCB IS NOT OPEN                                    *21919
*   X'1C' CONDITIONAL GETMAIN WITHIN STOW WAS UNSUCCESSFUL       *21919
*                                                                *21919
******************************************************************21919
         CL    REG15,PDSMAXCD     INVALID RETURN CODE?
         BH    PDSLABT            YES, GO AND ABORT JOB           21919
         LA    REG0,32            IN REG0 SAME CONTENTS AS IN     21919
*                                 REG15 IN CASE OF I/O ERROR      21919
         CR    REG15,REG0         NEW OR OLD RETURN CODE?         21919
         BNH   PDSLMSG            OLD RETURN CODE, THEN BRANCH    21919
         LR    REG15,REG0         NOW R15 INDICATES I/O ERROR     21919
         B     PDSLMSG             GO TO ACT ON STOW R. C.       A22318
***** COMPARE TTR OF MEMBER RECORD JUST READ WITH POINTERS IN *****
*****  DIRECTORY ENTRY. IF DIRECTORY ENTRY POINTS TO THIS     *****
*****  RECORD UPDATE THE POINTER TO NEW TTR.                  *****
PDSL11   LA    REG4,PDSDIR+12          ADDR OF POINTERS
         LH    REG3,PDSPTRNO           NUMBER OF POINTERS
         SR    REG2,REG2
PDSL11A  CLC   PDSREC+3(3),0(REG4)     COMPARE TTR TO POINTER
         BE    PDSL16
         LA    REG4,4(0,REG4)          ADDR OF NEXT POINTER
         LA    REG2,4(0,REG2)          DISPLACEMENT OF POINTER
         BCT   REG3,PDSL11A            COUNT POINTERS COMPARED
         B     PDSL13                  IF ALL POINTERS COMPARED
***** UPDATE POINTER IN DIRECTORY ENTRY *****
PDSL16   BAL   REG11,PDSL12            GO TO GET TTR OF RECORD WRITTEN
         IC    REG1,3(0,REG4)          4TH BYTE OF POINTER
         ST    REG1,PDSPTR(REG2)       SAVE UPDATED POINTER
         BCTR  REG7,0                  COUNT POINTER
         B     PDSL13
***** WRITE A MEMBER OR A NOTE LIST *****
PDSL15   STM   REG4,REG5,IEHMVV00      SAVE REGISTERS
         L     REG4,IEHMVV31+4         DECB ADDR
         SR    REG0,REG0
         L     REG1,IEHMVV31           DCB ADDR
         IC    REG0,16(0,REG1)         INSERT KEY LENGTH
         SR    REG2,REG0               SUBTRACT KEY LENGTH
         L     REG5,IEHMVV31           DCB ADDR
         LA    REG4,0(0,REG4)          CLEAR HIGH
         LA    REG5,0(0,REG5)           ORDER BYTE
         STH   REG2,62(0,REG1)         PUT COUNT IN DCB BLKSIZE    6778
         WRITE (REG4),SF,(REG5),(REG3),(REG2),MF=E
         L     REG1,IEHMVV31+4         DECB ADDR
         LA    REG1,0(0,REG1)          CLEAR HIGH ORDER BYTE
         CHECK (1)
         LM    REG4,REG5,IEHMVV00      RESTORE REGISTERS
         BR    REG11
***** GET TTR OF RECORD JUST WRITTEN
PDSL12   L     REG1,IEHMVV31           DCB ADDR
         LA    REG1,0(0,REG1)          CLEAR HIGH ORDER BYTE
         NOTE  (1)                     GET TTR OF RECORD JUST WRITTEN
         BR    REG11
PDSLABT  OI    IEHMVV20+2,PDSABORT     INDICATE ABORTION
***** END OF LOAD PROCEDURE **
PDSLEOD  L     REG0,PDSLSTM2                                     A26943
         FREEMAIN R,LV=(0),A=(8)
         L     REG1,IEHMVV30     LOAD DCB-ADDRESS                A34119
         L     REG7,IEHMVV30+4   LOAD DECB-ADDRESS               A34119
         LH    REG0,62(REG1)     LOAD CORE LEN                   A34119
         L     REG7,12(REG7)     LOAD CORE-ADDR.                 A34119
         FREEMAIN R,LV=(0),A=(7)
FREEM440 L     REG0,PDSLSTM1                                     A34119
         FREEMAIN  R,LV=(0),A=(9)                                A34119
PDSLPOST IEHPOST  ,T                                             A26493
         L     REG14,12(0,REG13)       RESTORE REG14
         XCTL  (2,12),EP=IEHMVESN
*****  INVALID RECORD FORMAT OR BLOCKSIZE  *****
PDSLFMT  LA    REG0,252                SPACE FOR MSG             A34119
         LR    REG8,REG0               SAVE THE SPACE            A34119
         OI    IEHMVV20+2,PDSABORT     INDICATE ABORTION         A34119
         B     PDSLIN                  GETMAIN MSGAREA           A34119
PDSLFMT2 LA    REG15,36                INDICATE MSG              A34119
         LA    REG11,FREEM440          RETURN ADDRESS            A34119
         IEHPRE
         B     PDSLMSG                                           A26493
***** I/O ERROR EXIT ROUTINE *****
PDSLSYNX LA    REG15,32(0,0)           RETURN CODE
         B     PDSLMSG                 GO TO MSG RTN
***** INTERPRET RETURN CODE *****
PDSLMSG  CL    REG15,PDSMAXCD          CODE VALID
         BH    PDSLABT                 NO
         L     REG3,PDSLTAB1(REG15)    ACCESS TABLE USING RETURN CODE
         LA    REG15,PDSLTAB1(REG15)   ADDR OF ACTION CODE
         TM    0(REG15),X'03'          ACTION CODE-WRITE MESSAGE
         BZ    0(0,REG3)               NO, GO TO ADDR TAKEN FROM TABLE
         BO    PDSLMSGA                GO TO WRITE MSG THEN CONTINUE
         OI    IEHMVV20+2,PDSABORT     INDICATE ABORTION
         LA    REG11,PDSLEOD           EXIT ADDR
PDSLMSGA MVI   PDSMSGAR,X'40'          CLEAR                    PTM3039
         MVC   PDSMSGAR+1(120),PDSMSGAR MSG AREA
***** GENERATE MESSAGE *****
         SR    REG2,REG2
         IC    REG2,0(0,REG3)          GET MSG LENGTH
         LA    REG1,PDSMSGAR+1         ADDR OF MSG AREA
         EX    REG2,PDSLMOV            PUT MSG IN OUTPUT AREA
         TM    0(REG15),X'80'          ACTION CODE-PUT NAME IN MESSAGE
         BZ    PDSLMSGD                NO
         LA    REG1,2(REG2,REG1)       ADDR WHERE NEXT SEGMENT PLACED
         LA    REG3,2(REG2,REG3)       ADDR OF NEXT MSG SEGMENT
         IC    REG2,0(0,REG3)          GET MSG LENGTH
         EX    REG2,PDSLMOV            PUT SEGMENT IN MSG AREA
         LA    REG1,2(REG2,REG1)       ADDR WHERE NAME PLACED
         TM    0(REG15),X'40'          ACTION CODE-USE DATA SET NAME
         BO    PDSLMSGB                YES
         MVC   0(8,REG1),PDSDIR        PUT MEMBER NAME IN MSG
         LA    REG1,9(0,REG1)          ADDR WHERE NEXT SEGMENT PLACED
         B     PDSLMSGC
PDSLMSGB L     REG15,IEHMVV21          ADDR OF DATA SET NAME
         MVC   0(44,REG1),0(REG15)     PUT DS NAME IN MSG
         LA    REG1,45(0,REG1)         ADDR WHERE NEXT SEGMENT PLACED
PDSLMSGC LA    REG3,2(REG2,REG3)       ADDR OF NEXT MSG SEGMENT
         IC    REG2,0(0,REG3)          GET MSG LENGTH
         EX    REG2,PDSLMOV            PUT SEGMENT IN MSG AREA
PDSLMSGD LA    REG3,PDSMSGAR           ADDR OF MSG OUTPUT AREA
         LINK  EP=IEHMVESU             GO TO MSG WRITER
         LTR   REG15,REG15             MSG WRITTEN
         BNE   PDSLABT                 NO
         BR    REG11
PDSL26   LA    REG2,PDSDIR             ADDR OF DIRECTORY ENTRY
         CLI   PDSPTRNO+1,X'00'        ANY POINTERS IN DIR ENTRY
         BE    PDSL8                   NO
CKTTRN   LTR   REG7,REG7           HAVE ALL DIRECTORY TTRNS BEEN A31964
*                                      UPDATED ?                 A31964
         BNZ   BADTTRN             NO.                           A31964
TTRNS    LH    REG1,PDSPTRNO       NO OF POINTERS TO UPDATE.     A31964
         SLL   REG1,2                  MULT BY 4 TO GET LGTH OF UPDATE
         BCTR  REG1,0                  SUBTRACT 1 FROM LGTH
         EX    REG1,PDSL27         HAVE POINTERS UPDATED.        A31964
         LA    REG2,PDSDIR         ADDR OF DIRECTORY ENTRY       A31964
         B     PDSL8                                             A31964
BADNOTE  LA    REG15,40            IEH328I NOTELIST TTR BAD.     A31964
         L     REG3,PDSLTAB1(REG15)   ADDR OF IEH328I.           A31964
         LA    REG15,PDSLTAB1(REG15) POINT TO ACTION CODE X'03'  A31964
         BAL   REG11,PDSLMSGA      HAVE MESSAGE PRINTED.         A31964
         OI    PDSLSW,X'80'            CLEAR THE SWITCH          A44326
         L     REG11,PDSLAD3           FIND BEGIN OF NL          A44326
BADNOTE1 DS    0H                                                A44326
         NI    0(REG11),X'7F'          CLEAR TTRX FLAG           A44326
         LA    REG11,4(REG11)          GO TO NEXT TTRX           A44326
         BCT   REG6,BADNOTE1           IF ANY                    A44326
         B     PDSL4A                  RETURN                    A44326
BADTTRN  LA    REG15,44            IEH327I BAD TTRN.             A31964
         L     REG3,PDSLTAB1(REG15)  ADDR OF IEH327I.            A31964
         LA    REG15,PDSLTAB1(REG15) POINT TO ACTION CODE X'03'  A31964
         LR    REG4,REG11         SAVE RETURN ADDRESS
         BAL   REG11,PDSLMSGA        HAVE MESSAGE PRINTED.       A31964
         LR    REG11,REG4         RESTORE RETURN ADDRESS
         B     TTRNS               UPDATE DIRECTORY TTRNS.       A31964
***** ADDRESS CONSTANTS *****
ADBREAD  DC    V(IEHMVERK)
***** OPERATIONS TO BE PERFORMED THRU THE EXECUTE INSTRUCTION *****
PDSL6    MVC   PDSDIR(1),IEHMVV00      SAVE DIRECTORY ENTRY
PDSL10   MVC   0(1,REG1),0(REG3)       SAVE NOTE LIST              3606
PDSL21   MVC   IEHMVV00+12(1),PDSDIR+12 UPDATE POINTERS IN ALIAS ENTRY
PDSL27   MVC   PDSDIR+12(1),PDSPTR     UPDATE POINTERS IN DIRECTORY
PDSLMOV  MVC   0(1,REG1),1(REG3)       PUT MSG IN OUTPUT AREA
***** CONSTANTS *****
PDSLK4   DC    H'4'
PDSLK8   DC    H'8'
PDSMAXCD DC    F'44'                                             A31964
         DS    0F
PDSLMSK1 DC    X'01000000'
PDSALIAS DC    CL7'(ALIAS)'
PDSLK12  DC    H'12'
PDSABORT EQU   X'40'
DCBRECFM EQU   36                                                A26493
DS1RECFM EQU   84                                                A26493
DCBBLK   EQU   62                                                A26493
DS1BLK   EQU   86                                                A26493
***** TABLE OF MESSAGE ADDRESSES, ROUTINE ADDRESSES AND ACTION CODES **
PDSLTAB1 DS    0F
         DC    AL1(0)                  INPUT RECORD READ
         DC    AL3(PDSLRET)
         DC    AL1(0)                  END OF INPUT
         DC    AL3(PDSLEOI)
         DC    AL1(1)                  I/O ERROR ON INPUT
         DC    AL3(M389)
         DC    X'C1'                   NOT UNLOADED FORMAT
         DC    AL3(M313)
         DC    X'83'                   MEMBER LOADED
         DC    AL3(MCOP)
         DC    X'83'        DUP NAME
         DC    AL3(M319)
         DC    AL1(0)                  INVALID CODE
         DC    AL3(PDSLABT)
         DC    X'81'                   NO SPACE IN DIRECTORY
         DC    AL3(M321)
         DC    AL1(1)                  I/O ERROR ON OUTPUT
         DC    AL3(M326)
         DC    X'03'                   INVALID RECFM OR BLKSIZE  A26493
         DC    AL3(M440)                                         A26493
         DC    X'03'               CODE=40  MESSAGE=IEH328I      A31964
         DC    AL3(M441)                                         A31964
         DC    X'03'               CODE=44  MESSAGE=IEH327I      A31964
         DC    AL3(M442)                                         A31964
***** TABLE OF MESSAGE SEGMENTS. EACH SEGMENT IS PRECEDED BY ITS LENGTH
MSGTAB   CSECT
M313     DC    AL1(6)
         DC    CL7'IEH313I'
M313A    DC    AL1(M313B-M313A-2)
         DC    CL8'DATA SET'
M313B    DC    AL1(M319-M313B-2)
         DC    CL32'HAS INCORRECT FORMAT FOR UNLOADE'
         DC    CL11'D DATA SET.'
M319     DC    AL1(6)
         DC    CL7'IEH319I'
M319A    DC    AL1(M319B-M319A-2)
         DC    CL6'MEMBER'
M319B    DC    AL1(M321-M319B-2)
         DC    CL32'NOT MOVED/COPIED. DUPLICATE NAME'
         DC    CL20' IN OUTPUT DATA SET.'
M321     DC    AL1(6)
         DC    CL7'IEH321I'
M321A    DC    AL1(M321B-M321A-2)
         DC    CL6'MEMBER'
M321B    DC    AL1(M326-M321B-2)
         DC    CL32'NOT MOVED/COPIED. OUTPUT DIRECTO'
         DC    CL11'RY IS FULL.'
M326     DC    AL1(MCOP-M326-2)
         DC    CL32'IEH326I I/O ERROR ENCOUNTERED IN'
         DC    CL18' OUTPUT DATA SET.'
MCOP     DC    X'0000'
MCOPA    DC    AL1(MCOPB-MCOPA-2)
         DC    CL6'MEMBER'
MCOPB    DC    AL1(MLEND-MCOPB-2)
         DC    CL22'HAS BEEN MOVED/COPIED.'
MLEND    DC    AL1(M389-MLEND-2)
         DC    CL24'LOAD ROUTINE TERMINATED.'
M389     DC    AL1(M440-M389-2)                                  A26493
         DC    CL32'IEH389I I/O ERROR ENCOUNTERED IN'
         DC    CL16' INPUT DATA SET.'                            A26581
M440     DC    AL1(M441-M440-2)                                  A31964
         DC    CL41'IEH440I  RECFM OR BLKSIZE IS INCONSISTENT'   A34119
M441     DC    AL1(M442-M441-2)                                  A31964
         DC    CL38'IEH328I  A TTR IN THE NOTELIST RECORD '      A31964
         DC    CL21'HAS NOT BEEN UPDATED.'                       A31964
M442     DC    AL1(MTERM-M442-2)                                 A31964
         DC    CL41'IEH327I A TTR IN THE USER DATA FIELD OF '    A31964
         DC    CL35'THE DIRECTORY HAS NOT BEEN UPDATED.'         A31964
MTERM    DS    0C
***** DEFINE INPUT AND OUTPUT AREAS AND WORK AREAS *****
PDSIO    DSECT
PDSREC   DS    100F
PDSLWORK DSECT
PDSTRKBL DS    H         TRACJ BALANCE STORED HERE AFTER EVERY   A22318
*                          SUCCESSFUL STOW.  RESTORED FROM HERE  A22318
*                          TO DCB AFTER DUP NAME STOW.           A22318
         DS    H         UNUSED                                  A22318
PDSLSTM1 DS    F
PDSLSTM2 DS    F
PDSLAD3  DS    F
PDSDIR   DS    19F
PDSMSGAR DS    121C
PDSPTR   DS    3F
PDSPTRNO DS    H
PDSLSW   DS    C
PDSLSTR  DS    F
PDSNTTR  DS    F                       NEW NOTE LIST TTR         A44326
PDSNOTE  DS    F
         DS    H                                                YA01221
BLDLIST  DS    CL18                                             YA01221
         IEHMVV
         END
         IEHMVV
