 TITLE 'IEHMVSSL-FIXED RECORD DEBLOCKING FOR IEHMOVE-LOAD MODULE ESL'
*TITLE -IEHMVSSL
*FUNCTION/OPERATION: THIS MODULE WILL MOVE OR COPY DATA SETS WHICH    *
*ARE PDS OR PHYSICAL SEQUENTIAL WHICH HAVE FIXED FORMAT RECORDS       *
*WITHOUT KEYS. THIS MODULE WILL READ RECORDS AND BLOCK OR DEBLOCK THE *
*RECORDS TO THE BLOCKSIZE OF OUTPUT DCB. ISSUES A GETMAIN FOR WORKAREA*
*AND FOR A BUFFER WHICH IS AS LARGE AS COMBINED BLOCKSIZE OF INPUT AND*
*OUTPUT.                                                              *
*IF USER LABEL PROCESSING WAS REQUESTED, THIS MODULE WILL, AT END-OF- *
*DATA OR VOLUME SWITCH TIME GETMAIN IF NECESSARY FOR A LABEL SAVEAREA.*
*THE SAVED LABELS WILL THEN BE PASSED TO IEHMVSSN TO BE OUTPUT DURING *
*DATA SET WRAP-UP.                                                    *
*                                                                     *
*ENTRY POINTS: IEHMVESL                                               *
*INPUT: AT ENTRY REG 13 POINTS SAVEAREA AND REG 12 POINTS TO          *
*COMMUNICATION TABLE                                                  *
*OUTPUT: REG ARE SAME AS INPUT                                        *
*EXTERNAL ROUTINES: IEHMVSSR- PDS SUBROUTINE TO GET DIRECTORY ENTERIES*
*                   IEHMVLSU- MESSAGE WRITER                          *
*EXITS - NORMAL IEHMVSSN - IEHMVSTG                                   *
*ERRORS: IEHMVSSN                                                     *
*TABLES/WORK AREAS: IEHMVV - COMMUNICATION TABLE.                     *
***   ***   ***   ***   ***   ***   ***   ***   ***   ***   ***
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***   ***   ***   ***   ***   ***   ***   ***   ***   ***   ***
IEHMVSSL CSECT                THIS MODULE WILL READ BPAM OR BSAM
*                        BLOCKED RECORDS AND REBLOCK THE RECORDS
*                        TO THE OUTPUT DATASET SPECIFICATIONS IT
*                        WILL DEBLOCK RECORDS WHICH ARE TOO LONG
*                        FOR OUTPUT DATASET                    @YA02544
*A020800-021920                                                @YA02544
*C067180                                                       @YA02544
*D020800-021800                                                @YA02544
*C079000                                                         A99999
*                                                                A37903
* 018000,040000                                                  A37888
*0326000200,002400,005700,070200                                   UL0H
*0326 058800-059200                                                8114
*
BAS10    EQU   10
BAS11    EQU   11
BAS12    EQU   12
RE0      EQU   0
RE1      EQU   1
RE2      EQU   2
RE3      EQU   3
RE4      EQU   4
RE5      EQU   5
RE6      EQU   6
RE7      EQU   7
RE8      EQU   8
RE9      EQU   9
RTRN     EQU   14
GOTO     EQU   15
DSORG    EQU   26
EODAD    EQU   33
SYNAD    EQU   57
BLKSZ    EQU   62
RECFM    EQU   36
FIXED    EQU   X'80'
VARID    EQU   X'40'
TRUNC    EQU   X'08'
         SPACE 3
IEHMVESL SAVE  (14,12),T,ESJ-TEST-9-20-65
         USING IEHMVESL,BAS10
         USING IEHMVV,BAS12
         USING WRKBUF,BAS11
         USING PRINT,1
         ENTRY IEHMVESL
         LR    BAS10,GOTO          LOAD BASE FOR PROGRAM
*                                                                  UL0H
* ACTIVATE USER INPUT TRAILER LABEL EXIT IF REQUIRED               UL0H
*                                                                  UL0H
         CLI   UDCBITLE,DEACTIVE        IS ITLE INACTIVE           UL0H
         BE    NEXTCODE                 YES,CONTINUE               UL0H
         MVC   UDCBITLE(4),XXITLE       NO, SET UP ITLE LIST ADDR  UL0H
NEXTCODE DS    0H                                                  UL0H
*                                                                  UL0H
         L     RE2,IEHMVV30        ADDR OF FROM DCB
         MVC   SYNAD(3,RE2),SINAD
         L     RE3,IEHMVV31        ADDR OF TO DCB
         MVC   SYNAD(3,RE3),SINAD
         LA    RE0,148             LOAD AMOUNT FOR WORKBUF       A25706
         GETMAIN  R,LV=(0)
         LR    BAS11,RE1
         MVI   0(11),X'00'         CLEAR WORKAREA TO ZEROS
         MVC   1(143,11),0(11)
         MVC   BLKIN(2),BLKSZ(RE2)
         MVC   BLKOUT(2),BLKSZ(RE3)
         ST    BAS11,GOTAT              STORE ADDR OF WORKAREA
         IEHPRE (14,1),TF
         TM    DSORG(RE3),X'40'         IS THIS A BSAM DATASET
         BO    BSMRTN                   YES  SET UP FOR BSAM
PDSRTN   MVC   EODAD(3,RE2),BPEOD
         L     RE2,IEHMVV31        ADDR OF 'TO' DCB.             A25706
         MVC   PDSTRKBL(2),18(RE2)   SAVE INITIAL TRACK BALANCE  A25706
         SR    RE2,RE2
         SPACE 3
PDGETM   LA    RE3,CCHHR                ADDR OF BUFFER FOR DIRECTORY
         LINK   EP=IEHMVESR             GET MEMBER NAME
         B     BACK(15)
BACK     B     CHKALS
         B     ENDJOB
         SPACE 3
MVMOR    LH    RE0,BLKIN                ADD BLOCKSIZE OF FROM AND TO
         AH    RE0,BLKOUT                DCB'S TO COMPUTE LENGTH OF
         ST    RE0,GOTEN               STORE AMOUNT FOR BUFFER
         GETMAIN R,LV=(0)                BUFFER
         ST    RE1,BUFPTR               ADDR OF BUFFER
         TM    IEHMVV30+4,X'80'        HAS FIRST REC BEEN READ   A37888
         BO    HAVBUF
         SR    RE6,RE6
         SR    RE7,RE7                                             8114
         L     RE1,IEHMVV30             ADDR OF FROM DCB           8114
         TM    17(RE1),X'81'            TEST DEVICE TYPE FOR TAPE  8114
         BO    FXDRTN                   YES  BYPASS POINT MACRO    8114
         L     RE0,TTRC                 SET UP POINTER FOR
         IC    RE0,ZERO                  POINT ROUTINE TO POINT TO
         ST    RE0,POINT                 FIRST RECORD OF MEMBER
         BAL   RE9,PTRTN
         B     FXDRTN
         SPACE 3
CHKALS   TM    CTT,X'80'           IS THIS AN ALIAS DIRECTORY ENTRY
         BO    STALS               YES  STOW ALIAS
         NI    SWITCH,X'FE'        ZERO NOSTOW SWITCH SET WHEN   A25706
*                                    LAST TRUE MEMBER WAS A DUP. A25706
         TM    CTT,X'60'           ARE USER DATA TTR'S PRESENT
         BC    5,ABORT                 YES BRANCH TO ABORT     @YA02544
         TM    IEHMVV20+3,X'08'        PREALLOCATION           @YA02544
         BZ    MVMOR                   NO DON'T CHECK          @YA02544
         XC    BLDLIST,BLDLIST         CLEAR                   @YA02544
         MVI   BLDLIST+1,X'01'         INDIC ONE ENTRY         @YA02544
         MVI   BLDLIST+3,X'0E'         ENTRY LENGTH            @YA02544
         MVC   BLDLIST+4(8),RENAME     GET MEMBER NAME         @YA02544
         L     (RE7),IEHMVV31          TO DCB ADDRESS          @YA02544
         BLDL  (RE7),BLDLIST           SEE IF MEMBER EXISTS    @YA02544
         LTR   15,15                   MEMBER FOUND            @YA02544
         BZ    DUPE1                   YES PRINT MSG           @YA02544
         B     MVMOR                   NO CONTINUE             @YA02544
PTRTN    LA    RE1,0(0,RE1)                                    @YA02544
         LA    RE0,POINT               TTR ADDR FOR POINT      @YA02544
         POINT (1),(0)                                         @YA02544
         BR    RE9
         SPACE 3
WRITF    L     RE3,BUFPTR              LOAD ADDR OF BUFFER
WRITF2   L     RE2,IEHMVV31             ADDRESS OF DCB
         LA    2,0(0,2)                 CLEAR HIGH ORDER BYTE
         L     RE1,IEHMVV31+4           ADDR OF DECB
         LA    1,0(0,1)                 CLEAR HIGH ORDER BYTE
         WRITE (1),SF,(2),(3),MF=E      WRITE RECORD
         L     RE1,IEHMVV31+4           ADDR OF DECB
         LA    1,0(0,1)                 CLEAR HIGH ORDER BYTE
         CHECK (1)                      CHECK FOR GOOD READ
         SH    RE7,BLKOUT               SUBT BLKOUT FROM AMT IN CORE
         CH    RE7,BLKOUT               IS AMT IN CORE MORE THAN BLKOUT
         BL    SHIFT                    NO  GO TO SHIF ROUTINE
         AH    RE3,BLKOUT               ADJUST PTR TO DATA IN CORE
         B     WRITF2                   YES  WRITE ANOTHER RECORD
*
*
SHIFT    LTR   RE7,RE7                  IS AMT IN CORE ZERO
         BZ    READF                    YES  GO TO READ
         BP    SHFT2                    NO   GO TO SHFT2
         EX    0,*
MOVER    MVC   0(1,8),0(3)              MOVE DATA TO START OF BUFFER
         SPACE 3
HAVBUF   L     RE1,IEHMVV30+4          SET UP TO MOVE THE FIRST
         L     RE6,12(0,RE1)           RECORD READ BY ESV INTO THE
         ST    RE6,SAV03               BUFFER GOTTEN BY ESL MODULE
         L     RE2,IEHMVV30
         LH    RE6,BLKIN
         ST    RE6,SAV02
         L     RE3,SAV03
         L     RE8,BUFPTR
         LR    RE7,RE6
         CH    RE7,BLKOUT IS ESV RECORD LARGE ENOUGH TO WRITE?     7207
         BNL   WRITF2  IF YES, WRITE FROM ESV BUFFER.              7207
         B     SHFTSAV   NO, BR TO XFER RECORD FROM ESV TO ESL BUF 7207
FXDRTN   CH    RE7,BLKOUT               SHOULD WE READ OR WRITE
         BNL   WRITF                     BRANCH TO WRITE
READF    LR    RE6,RE7                  LOAD INDEX REG WITH AMOUNT
         L     RE8,BUFPTR
RDCHK    L     RE2,IEHMVV30        ADDR OF FROM DCB
         L     RE1,IEHMVV30+4      ADDR OF FROM DECB
         LA    RE3,0(RE6,RE8)      ADDR OF START OF DATA
         BAL   RE9,READM
         L     RE1,IEHMVV30+4
         BAL   RE9,CHECM
         B     TSTRNC
SHFT2    AH    RE3,BLKOUT  SET PTR TO START OF INFO TO BE MOVED    7207
SHFTSAV  LR    RE4,RE7  LOAD REG 4 WITH NO OF BYTES TO BE MOVED    7207
SHFT3    LA    RE5,256                  SET UP MAXIMUM LENGTH FOR MOVE
         CR    RE4,RE5    IS AMOUNT TO BE MOVED LARGER THAN 256?   7207
         BL    ADJST                      256  NO  BRANCH TO ADJUST
MOVE     BCTR  RE5,0                    SUBT ONE FOR EXECUTE
         EX    RE5,MOVER                EXECUTE MOVER
         LA    RE5,1(0,5)               ADD ONE TO LENGTH MOVED
         AR    RE3,RE5   BUMP PTR. TO NEXT INFO TO BE MOVED-       7207
*          (APPLICABLE ONLY WHEN MORE THAN ONE MOVE IS EXECUTED)   7207
         AR    RE8,RE5         BUMP BUFFER POINTER                 7207
         SR    RE4,RE5        SUBTRACT AMOUNT MOVED THIS TIME      7207
         LTR   RE4,RE4        TEST COUNT OF BYTES MOVED            7207
         BZ    READF    BRANCH TO READ IF ALL HAVE BEEN MOVED      7207
         B     SHFT3                    NO  LOOP TO SHIFT MORE
ADJST    LR    RE5,RE4   LOAD NO. OF BYTES FOR FINAL MOVE          7207
         B     MOVE
HAVBUF01 L     RE0,SAV02
         L     RE1,SAV03
         FREEMAIN  R,LV=(0),A=(1)
         B     GIVBAC
         SPACE 3
TSTRNC   L     RE2,IEHMVV30             ADDR  OF  DCB
         LR    RE1,RE2
         L     RE2,68(0,2)              ADDR  OF  IOB
         SR    RE5,RE5
         IC    RE5,16(0,1)              ADD KEY LENGTH
         AH    RE5,BLKSZ(0,RE1)         ADD BLOCKSIZE
         SH    RE5,22(0,RE2)            SUBT RESIDUAL LNG FROM IOB
         AR    RE7,RE5
         B     FXDRTN
         SPACE 3
BSMRTN   MVC   EODAD(3,RE2),BSEOD
         LA    RE2,256
         ST    RE2,TTRC
         B     MVMOR
ALDONE   LTR   RE7,RE7      HAS EVERYTHING BEEN WRITTEN?           7207
         BZ    SEQDONE       EVERYTHING HAS BEEN WRITTEN           7207
         BAL   RE4,WRTRSEQ    NO, GO TO WRITE TRUNCATED BLOCK      7207
SEQDONE  L     RE0,GOTEN          SET REG ZERO FOR FREEMAIN        7207
         L     RE1,BUFPTR              ADDR OF BUFFER
         FREEMAIN  R,LV=(0),A=(1)
ENDJOB   IEHPOST (14,1),T
         TM    IEHMVV30+4,X'80'        HAS FIRST REC BEEN READ   A37888
         BO    HAVBUF01                FREEMAIN THAT WAS PASSED TO SSL
GIVBAC   LA    RE0,148             SIZE OF WORKBUF WORKAREA      A25706
         LR    RE1,BAS11
         FREEMAIN  R,LV=(0),A=(1)
         TM    IEHMVV20+2,X'40'        IS MIDABORT BIT ON
         BO    WRAPIT                  YES
         TM    IEHMVV20+2,X'08'        IS INC REP BIT ON
         BO    INCLUDES                YES
WRAPIT   XCTL  (2,12),EP=IEHMVESN
INCLUDES TM    IEHMVV20,X'10'          DSGROUP OPERATION           VS0H
         BC    1,WRAPIT                YES, TO VESN FOR WRAPUP     VS0H
         XCTL  (2,12),EP=IEHMVETG      NO, TO PDS INC-REP MODULE   VS0H
         SPACE 3
DONE     LTR   RE7,RE7                  HAS EVERYTHING BEEN WRITTEN
         BZ    STOWER                   YES GO TO STOW
         LA    RE4,STOWER    SET END OF PDS OR SDS                 9256
WRTRSEQ  L     RE2,IEHMVV31      LOAD ADDRESS OF DCB               7207
         LA    2,0(0,2)
         STH   RE7,BLKSZ(0,RE2)         CHANGE BLOCK SIZE FOR SHORT REC
         L     RE1,IEHMVV31+4           ADDR OF DECB
         LA    1,0(0,1)                 CLEAR HIGH ORDER BYTE
         L     RE3,BUFPTR        ADDR OF BUFFER
         BAL   RE9,WRITM                GO TO WRITE LAST RECORD
         BAL   RE9,CHECM
         LH    RE5,BLKOUT               RESTORE BLOCKSIZE IN DCB
         STH   RE5,BLKSZ(0,RE2)
         BR    RE4  BR TO 'STOWAL' FOR PDS OR 'SEQDONE' FOR SEQ DS 7207
STOWAL   MVC   NAME(8),RENAME           STOW MEMBER
         L     RE1,IEHMVV31
         LA    1,0(0,1)
         LA    RE0,NAME
         STOW  (1),(0),A
         MVC   OLDTTR(3),TTRC
         B     STOWED(15)
STOWED   B     STWMSG
         B     DUPLCTE
         EX    0,*
         B     DIRFUL
         B     STOERR
******************************************************************21919
*                                                                *21919
*   NEXT RETURN CODES ALSO GIVE THE MESSAGE:                     *21919
*         IEH326I I/O ERROR ENCOUNTERED IN OUTPUT DATA SET       *21919
*   BUT THESE RETURN CODES ARE CAUSED BY OTHER ERRORS            *21919
*                                                                *21919
******************************************************************21919
         B     STOERR        INDICATES I/O REQUESTS AGAINST THE   21919
*                            DCB ARE STILL OUTSTANDING            21919
         B     STOERR        INDICATES THE DCB IS NOT OPEN        21919
         B     STOERR        INDICATES CONDITIONAL GETMAIN WITHIN 21919
*                            STOW WAS UNSUCCESSFUL                21919
         SPACE 3
WRITM    WRITE (1),SF,(2),(3),MF=E      WRITE RECORD
         BR    RE9
         SPACE 3
CHECM    LA    1,0(0,1)                 CLEAR HIGH ORDER BYTE
         CHECK (1)
         BR    RE9
         SPACE 3
READM    LA    1,0(0,1)
         LA    2,0(0,2)
         READ  (1),SF,(2),(3),MF=E
         TM    IEHMVV74+4,X'FF'   TEST FOR I/O ERROR ON LABELS     UL0H
         BO    YESLABER           DURING EOV,IF YES - BRANCH       UL0H
         BR    RE9
YESLABER L     RE3,A126           PROVIDE MSG FOR MOVE TO BUFFER   UL0H
         IC    RE2,A126           PROVIDE MSG FOR MOVE INSTR       UL0H
         BAL   RE5,CLEAR          CLEAR PRINT BUFFER               UL0H
         LA    RE1,IEHMVV00       PRINT BUF ADDRESS FOR MSG MOVE   UL0H
         EX    2,MOVMES           MOVE MSG TO PRINT BUFFER         UL0H
         ST    RE9,SAVERE9        SAVE REISTER 9                   UL0H
         BAL   RE9,MESSAG02       PRINT MSG                        UL0H
         L     RE9,SAVERE9        RESTORE REGISTER 9               UL0H
         NI    IEHMVV74+4,X'00'   RESET I/O ERROR ON LABEL SWITCH  UL0H
         BR    RE9                RETURN
STOWER   L     RE1,BUFPTR          FREE BUFFER BEFORE STOW
         L     RE0,GOTEN
         FREEMAIN R,LV=(0),A=(1)
         LA    2,10
STALS    TM    SWITCH,X'01'
         BO    NOSTOW
         MVC   TTRC(3),OLDTTR
         B     STOWAL
NOSTOW   L     RE3,A125
         IC    RE2,A125
         BAL   RE9,MESSAGE
         B     PDGETM
DUPLCTE  TM    CTT,X'80'           IS THIS AN ALIAS DIR ENTRY.   A25706
         BO    DUPE1               YES-- THIS IS A DUP ALIAS.    A25706
         OI    SWITCH,X'01'        SET NO STOW SWITCH.           A25706
         L     RE1,IEHMVV31        ADDR OF 'TO' DCB.             A25706
         MVC   0(3,RE1),TTRC       SET RELAD FIELD IN TO DCB.    A25706
         MVI   CTT,X'00'           ZERO 'C' BYTE OF STOW LIST    A25706
*                                     AND USE TTR RETURNED BY    A25706
*                                     STOW FOR BLOCK ADDR IN     A25706
*                                     POINT.  POINT TO RECOVER   A25706
*                                     SPACE WHERE DUP  MEMBER    A25706
*                                     WRITTEN.                   A25706
         LA    RE0,TTRC            POINT R0 TO STOW LIST TTR.    A25706
         POINT (1),(0)             RECOVER DUP NAME SPACE.       A25706
         L     RE1,IEHMVV31        'TO' DCB ADDR.                A25706
         MVC   18(2,RE1),PDSTRKBL   RESTORE TRACK BALANCE STORED A25706
*                                      FROM LAST SUCCESFUL STOW  A25706
         OI    48(RE1),X'80'       SET DCBOFLGS TO INDICATE      A25706
*                                      LAST I/O OPERATION WAS    A25706
*                                      A WRITE.  THIS WILL FORCE A25706
*                                      A MERGE TO THE DSCB AT    A25706
*                                      CLOSE TIME IF LAST        A25706
*                                      MEMBER IS A DUP.          A25706
DUPE1    L     RE3,A119
         IC    RE2,A119
         BAL   RE9,MESSAGE
         B     PDGETM
         B     ABORT
STWMSG   L     RE1,IEHMVV31        'TO' DCB ADDR.                A25706
         MVC   PDSTRKBL(2),18(RE1)  SAVE TRACK BALANCE AFTER     A25706
*                                      SUCCESSFUL STOW.          A25706
         L     RE3,A118            MEMBER MOVED/COPIED MESSAGE   A25706
         IC    RE2,A118
         BAL   RE9,MESSAGE
         B     PDGETM
         B     ABORT
DIRFUL   L     RE3,A121
         IC    RE2,A121
         BAL   RE9,MESSAGE
         B     ABORT
         B     ABORT
ABORT    OI    IEHMVV20+2,X'40'
         B     ENDJOB
STOERR   L     RE3,A124
         IC    RE2,A124
         L     RE4,IEHMVV21+4
         BAL   RE9,MESSAG03
         B     ABORT
         B     ABORT
SORRY    ST    RE1,POINT                *** SYNAD ROUTINE ***      8114
         TM    POINT,X'80'
         BO    READERR
         TM    POINT,X'40'
         BO    WRITERR
ABORTED  OI    IEHMVV20+2,X'40'
         OI    IEHMVV41+13,X'02'       SET RETURNCODE TO 8       A37903
         B     ALDONE
READERR  L     RE3,A122
         IC    RE2,A122
         L     RE4,IEHMVV21
         BAL   RE9,MESSAG01
         B     ABORTED
         B     ABORTED
WRITERR  L     RE3,A123
         IC    RE2,A123
         L     RE4,IEHMVV21+4
         BAL   RE9,MESSAG01
         B     ABORTED
         B     ABORTED
MOVMES   MVC   MSG(1),0(3)
MESSAGE  BAL   RE5,CLEAR
         LA    RE1,IEHMVV00
         EX    2,MOVMES
         MVC   NAMES(8),NAME
         B     MESSAG02
MESSAG01 BAL   RE5,CLEAR
         LA    RE1,IEHMVV00
         EX    2,MOVMES
         MVC   NAMES01(8),NAME                                     8114
         MVC   NAMES02(44),0(4)
         B     MESSAG02
MESSAG03 BAL   RE5,CLEAR
         LA    RE1,IEHMVV00
         EX    2,MOVMES
         MVC   NAMES03(44),0(4)
         B     MESSAG02
MESSAG02 LR    RE3,RE1
         LINK   EP=IEHMVESU           GO TO MESSAGE WRITER
         AR    RE9,15
         BR    RE9
CLEAR    LA    RE1,IEHMVV00
         MVC   CC(1),BLANK
         MVC   MSG(120),CC
         BR    RE5
*                                                                  UL0H
* USER INPUT TRAILER EXIT ROUTINE                                  UL0H
*                                                                  UL0H
ITLR     DS    0H                                                  UL0H
         LA    RE4,OFFSET1             SET UP                      UL0H
         SR    GOTO,RE4                ADDRESSABILITY              UL0H
         LR    BAS10,GOTO              FOR EXIT ROUTINE            UL0H
         L     RE4,0(0,RE1)             GET ADDRESS OF LABEL READ  UL0H
*                            FOR LATER MOVE TO USER                UL0H
         LTR   RE4,RE4                  ARE USER LABELS PRESENT    UL0H
         BNE   IOERR                    YES.  CHECK IF OK          UL0H
*                                                                  UL0H
NOLABEL  DS    0H                                                  UL0H
         MVI   UDCBITLE,X'00'           DEACTIVATE LABEL EXIT      UL0H
         MVI   UDCBOTLE,X'00'           DEACTIVATE LABEL EXIT      UL0H
         MVI   IEHMVV20+2,X'40'        SET MIDABORT SWITCH TO TELL UL0H
*                                      VESN THIS IS END OF ACTION  UL0H
         SR    GOTO,GOTO                NO, RETURN CODE 0 TO EOV   UL0H
*                                         TO IGNORE ADDITIONAL LAB UL0H
         BR    RTRN                     RETURN TO EOV              UL0H
*                                                                  UL0H
IOERR    DS    0H                                                  UL0H
         CLI   8(RE1),X'80'             PERM ERROR FROM PARAM LIST UL0H
         BNE   TRKAVAIL                 NO. CHECK FOR TRACK AVAIL  UL0H
LABERR   DS    0H                                                  UL0H
         OI    IEHMVV74+4,X'FF'   SET LABELI/O ERROR FLAG          UL0H
         BR    RTRN                     RETURN TO EOV OPERATION    UL0H
TRKAVAIL DS    0H                                                  UL0H
         CLI   IEHMVV72+10,X'FF'        DA+NLT FLAG ON             UL0H
*                            INDICATES NO U.L. TRACK ALLOCATED     UL0H
         BNE   CORAVAIL                 NO PROCESS LABELS          UL0H
*                                                                  UL0H
*  OUTPUT MESSAGE - NO USER LABELS MOVE/COPIED.  NO LABEL TRACK.   UL0H
*                                                                  UL0H
         MVI   IEHMVV72+14,X'FF'        TELL CLOSE TO OUTPUT MSG   UL0H
         B     NOLABEL                 GO SET RC, RETURN TO CLOSE  UL0H
*                                                                  UL0H
CORAVAIL DS    0H                                                  UL0H
         CLC   IEHMVV72(4),ALLZEROS     CORE OBTAINED FOR LABELS   UL0H
         BNE   INITIAL                  YES, INITIALIZE POINTERS   UL0H
         GETMAIN R,LV=640              GET CORE FOR LABELS         UL0H
         ST    RE1,IEHMVV72            SAVE GOTTEN CORE ADDRESS    UL0H
INITIAL  DS    0H                                                  UL0H
         CLC   0(4,RE4),UTL1DEF        FIRST LABEL IN GROUP        UL0H
         BNE   SAVLABEL                NO, BYPASS 1ST LABEL SETUP  UL0H
         MVC   IEHMVV72+4(4),IEHMVV72   SET POINTER TO LABEL SAVLOCUL0H
         MVI   IEHMVV72+12,X'00'        CLEAR LABEL COUNTER        UL0H
*                                                                  UL0H
SAVLABEL DS    0H                                                  UL0H
         L     RE1,IEHMVV72+4           GET ADDRESS OF CURRENT     UL0H
*                                         LABEL SAVEAREA           UL0H
         MVC   0(80,RE1),0(RE4)         SAVE LABEL IN GOTTEN CORE  UL0H
         LA    RE1,80(0,RE1)            UPDATE POINTER TO NEXT LO- UL0H
         ST    RE1,IEHMVV72+4           CATION IN LABEL SAVEAREA   UL0H
         SR    RE4,RE4                  UPDATE                     UL0H
         IC    RE4,IEHMVV72+12          LABEL                      UL0H
         LA    RE4,1(RE4)               COUNTER                    UL0H
         STC   RE4,IEHMVV72+12          BY ONE                     UL0H
         LA    GOTO,4                   RETURN CODE OF 4 TO EOV    UL0H
*                                         TO GET ADDITIONAL LABELS UL0H
         BR    RTRN                     RETURN TO EOV              UL0H
*                                                                  UL0H
XXITLE   DC    X'03'                   INPUT TRAILER LABEL         UL0H
         DC    AL3(ITLR)                   ROUTINE EXIT            UL0H
OFFSET1   EQU   ITLR-IEHMVESL                                      UL0H
ALLZEROS DC    1F'0'                                               UL0H
UTL1DEF  DC    CL4'UTL1'                                           UL0H
DEACTIVE EQU   X'00'                                               UL0H
BLDLIST  DS    CL18                                            @YA02544
         DS    0F
A118     DC    AL1(M119-M118-1)         LENGTH MINUS ONE OF MESSAGE
         DC    AL3(M118)
A119     DC    AL1(M120-M119-1)
         DC    AL3(M119)
A120     DC    AL1(M121-M120-1)
         DC    AL3(M120)
A121     DC    AL1(M122-M121-1)
         DC    AL3(M121)
A122     DC    AL1(M123-M122-1)
         DC    AL3(M122)
A123     DC    AL1(M124-M123-1)
         DC    AL3(M123)
A124     DC    AL1(M125-M124-1)
         DC    AL3(M124)
A125     DC    AL1(M126-M125-1)                                    UL0H
         DC    AL3(M125)
A126     DC    AL1(M130-M126-1)                                    UL0H
         DC    AL3(M126)                                           UL0H
A130     DC    AL1(M131-M130-1)
         DC    AL3(M130)
SINAD    DC    AL3(SORRY)
BSEOD    DC    AL3(ALDONE)
BPEOD    DC    AL3(DONE)
BLANK    DC    CL1' '
ZERO     DC    X'00'
WRKBUF   DSECT 0D
PDSTRKBL DS    H                   TRACK BALANCE STORED HERE     A25706
*                                      AFTER EVERY SUCCESSFULL   A25706
*                                      STOW.  RESTORED FROM      A25706
*                                      HERE TO DCB AFTER DUP     A25706
*                                      NAME STOW.                A25706
         DS    H                   UNUSED.                       A25706
POINT    DS    F
BLKIN    DS    H
BLKOUT   DS    H
GOTEN    DS    F
GOTAT    DS    F
BUFPTR   DS    F
SAV01    DS    F
SAV02    DS    F
SAV03    DS    F
SAV04    DS    F
SAVERE9  DS    1F                 SAVE AREA FOR REGISTER 9         UL0H
OLDTTR   DS    F
SWITCH   DS    CL3
CCHHR    DS    CL5
NAME     DS    CL8
TTRC     DS    CL3
CTT      DS    CL1
         DS    CL62
RENAME   DS    CL8
PRINT    DSECT
CC       DS    CL1
MSG      DS    CL15
NAMES    DS    CL17
NAMES01  DS    CL17
NAMES03  DS    CL10
NAMES02  DS    CL61
        IEHMVV
         ORG   IEHMVV70                                            UL0H
         IEHDCBXL                                                  UL0H
SPEAK    CSECT
M118     DC    CL24'  MEMBER NAMED          '
         DC    CL22'HAS BEEN MOVED/COPIED.'
M119     DC    CL30'IEH319I MEMBER          NOT MO'
         DC    CL30'VED/COPID. DUPLICATE NAME IN O'
         DC    CL15'UTPUT DATA SET.'
M120     DC    X'00'
M121     DC    CL30'IEH321I MEMBER          NOT MO'
         DC    CL30'VED/COPIED. OUTPUT DIRECTORY I'              A99999
         DC    CL7'S FULL.'
M122     DC    CL30'I/O ERROR ENCOUNTERED IN MEMBE'
         DC    CL29'R          OF INPUT DATA SET '
M123     DC    CL30'I/O ERROR ENCOUNTERED IN MEMBE'
         DC    CL30'R          OF OUTPUT DATA SET '
M124     DC    CL30'IEH326I I/O ERROR ENCOUNTERED '
         DC    CL19'IN OUTPUT DATA SET '
M125     DC    CL24'  MEMBER NAMED          '
         DC    CL32'IS AN ALIAS AND HAS NOT BEEN STO'
         DC    CL32'WED, TRUE MEMBER WAS NOT STOWED.'
M126     DC    CL29'PERM I/O ERROR WHILE READING '                 UL0H
         DC    CL30'USER INPUT TRAILER LABELS. NO '                UL0H
         DC    CL30'MORE LABELS WILL BE PROCESSED.'                UL0H
M130     DC    X'00'
M131     DC    X'40'
         END
