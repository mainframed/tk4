         TITLE 'IEHMVESQ09 --- DATA SET WRAPUP FOR A MOVE OPERATION'
*                                                                     *
*TITLE 'IEHMVSSQ'                                                     *
*                                                                     *
*FUNCTION/OPERATION: THIS ROUTINE HANDLES THE WRAPUP PROCEDURE FOR ALL*
*'MOVE' REQUESTS THIS INCLUDES SCRATCHING THE 'FROM' DATA SET, RE-    *
*NAMEING THE 'TO' DATA SET IF BOTH THE 'TO' AND 'FROM' DATA SETS START*
*ED ON THE SAME VOLUME, AND UNCATALOGING OR CATALOGING THE DATASET    *
*IF IT WAS FOUND VIA A CATALOG.                                       *
* ON MOVE DSNAME AND MOVE PDS OPERATIONS FOR WHICH THE SOURCE DATA    *
* SET WAS CATALOGED, THE ASSUMPTION IS MADE THAT THE RECEIVING DATA   *
* SET CAN BE CATALOGED IN PLACE OF THE SOURCE DATA SET.               *
* IF THE RECEIVING DATA SET IS TO BE CATALOGED, THE SOURCE DATA SET IS*
* UNCATALOGED AND THE RECEIVING DATA SET CATALOGED. THE RECATALOG     *
* SET MUST BE UNCATALOGED TO ALLOW THE USER TO MOVE THE CATALOG ENTRY *
* FROM ONE CATALOG TO ANOTHER SINCE CVOL IS NOT ALLOWED. THE RECATALOG*
* MACRO WILL ONLY UPDATE THE VOLUME LIST IN THE SPECIFIED CATALOG AND *
* NOT ALLOW A CHANGE OF CATALOGS AS THE UNCATALOG-CATALOG SEQUENCE    *
* WILL.                                                               *
*                                                                     *
*ENTRY POINTS: IEHMVESQ                                               *
*                                                                     *
*INPUT: NONE                                                          *
*                                                                     *
*OUTPUT: NONE                                                         *
*                                                                     *
*EXTERNAL ROUTINES- IEHMVSSU(MESSAGE WRITER)                          *
*                                                                     *
*EXITS- N O R M A L   IEHMVSSK(FINAL WRAPUP)                          *
*                                                                     *
*                     IEHMVSSH(DSGROUP WRAPUP)                        *
*                                                                     *
*                     IEHMVSSZ(CONTINUE MOVING DATA SETS)             *
*                                                                     *
*                     IEHMVSST(CARD SCANNER)                          *
*                                                                     *
*       E R R O R S   IEHMVSSK(FINAL WRAPUP)                          *
*                                                                     *
*TABLES/WORK AREAS: NONE                                              *
*                                                                     *
*ATTRIBUTES: REENTRANT                                                *
*                                                                     *
*NOTE: THIS MODULE WILL PRINT OUT A VOLUME LIST THAT CONTAINS MORE    *
*THAN FIVE VOLUMES.                                                   *
*                                                                     *
         EJECT
*
*********************************************************************
**
**                            IEHMVSSQ
**
*********************************************************************
*
IEHMVSSQ CSECT                                                     000H
* 092800                                                         A35444
* 039200,044800,047800,048600,049000,092800-094200               S21042
*                                                                A37862
* 051000,057000,094200                                           A38740
*                                                                A41787
*A087100-087200,092700,094500                                    A41824
*A016900-017200,057619-057663,077400-077560,087020-087020-087040 A48782
*A094540-094560                                                  A48782
*D017000-017240,077400,083600                                    A48782
*C013720,017800-19200,057666,083400,084200,084600                A48782
*A1900-1997                                                     YL026VC
*C1600,35200,36000,36200,37200,37360,38000,38600,46400,50000    YL026VC
*C51000,52200,92740                                             YL026VC
*D33000-34600,38800-46200,47000-48900,51100=51120,57120-57593   YL026VC
*D92760-94300                                                   YL026VC
*A31700-31760,32700,95220                                        Y)2918
*D32000,32400-32600,32800                                        Y02918
*C016800,017000,028600                                         @ZM30153
*A016920,028500                                                @ZM30153
*D001980-001984                                                @Z40CSJH
*A031700-032000,034200-034300,037188-037320                    @Z40CSJH
*A092744-092757                                                @Z40CSJH
*A037058-037078                                                @Z40CSJH
*A018336-018344                                                @ZA11951
*C018352                                                       @ZA11951
*A036924-036969                                                @ZA18380
*C036923,037025                                                @ZA18380
A0       EQU   0
A1       EQU   1
A2       EQU   2
A3       EQU   3
A4       EQU   4
A5       EQU   5
A6       EQU   6
A7       EQU   7
A8       EQU   8
A9       EQU   9                       IEHMVESQ BASE REGISTER
A10      EQU   10                      BASE REGISTER FOR MESSAGES
A11      EQU   11
A12      EQU   12                      BASE REG FOR COMMUNICATION AREA
A13      EQU   13
A14      EQU   14
A15      EQU   15
         ENTRY IEHMVESQ
IEHMVESQ BALR  A9,0
         USING *,A9
         USING IEHMVV,A12               ESTABLISH ADDR TO COMMUNICATION
         EJECT
*
*          V O L U M E    L I S T
*
***********************************************************************
*       *NUMBER *              *                      *               *
*BINARY *OF     *              *                      * TAPE          *
* ZEROS *ENTRIES* DEVICE TYPE  * VOLUME  SERIAL       *    SEQUENCE   *
*       *IN     *              *       NUMBER         *      NUMBER   *
*       * LIST  *              *                      *               *
*       *       *              *                      *               *
***********************************************************************
*       *       *              *                      *               *
*1-BYTE *1-BYTE *4-BYTES       *6-BYTES               *2-BYTES        *
*
**N O T E S --- THE FIRST TWO BYTES PICTURED ABOVE ARE PRESENT ONLY
**              IN THE FIRST ENTRY OF THE LIST,THE FIRST BYTE OF
**              WHICH IS NOT USED. THE TAPE SEQUENCE NUMBER IS ZERO
**              FOR DASD.
*
         L     A3,IEHMVV30+12           ADDR OF 'FROM' DD      @ZM30153
         XC    FROMVOLL,FROMVOLL        INDICATE NO GETMAIN DONE A48782
         SR    A1,A1                    CLEAR REGISTER         @ZM30153
         ICM   A1,3,14(A3)              GET UCB ADDR           @ZM30153
         LR    A3,A1                                             A48782
         USING UCB,A3                                            A48782
         TM    UCBID,X'FF'
         DROP  A3                                                A48782
         BC    12,SCRH2321
         TM    18(A1),X'20'             TEST FOR FROM VOL BEING
         BZ    SCRTCHOK                  DIRECT ACCESS - IF NOT BRANCH
SCRH2321 L     A4,IEHMVV10              ADDR OF 'TO' VOL LIST    A48782
         SR    A7,A7                                             A48782
         IC    A7,1(A4)                 NO OF VOLS IN 'TO'LIST   A48782
         LA    A5,12                    LENGTH OF ENTRY IN LIST  A48782
         MR    A6,A5                    TOTAL LENGTH OF ENTRIES  A48782
         LA    A4,3(A4,A7)              ADDR OF END OF 'TO' LIST A48782
         SRL   A4,1                     PLUS ONE                 A48782
         SLL   A4,1                     ROUNDED TO HALFWORD BDRY A48782
         ST    A4,FROMVOLA              SAVE BEGIN OF NEW LIST   A48782
         SR    A7,A7                                             A48782
         IC    A7,IEHMVV22              NO OF VOLS IN FROM LIST  A48782
         LR    A8,A7                    SAVE                     A48782
         MR    A6,A5                    LENGTH OF ENTRIES IN NEW A48782
         LA    A0,2(A7)                 LENGTH OF NEW FROM LIST  A48782
         AR    A4,A0                    END OF NEW FROM LIST     A48782
         L     A7,IEHMVV10+4            END OF WORKAREA          A48782
         LA    A7,1(A7)                                          A48782
         CR    A4,A7                    CHECK IF NEW LIST FITS   A48782
*                                       IN WORKAREA              A48782
         BNH   BUILDLST                 IF YES, USE WORKAREA     A48782
         GETMAIN R,LV=(0)               IF NOT, GETMAIN NEW AREA A48782
         STH   A0,FROMVOLL              SAVE LENGTH OF AREA      A48782
         LA    A1,0(A1)                                          A48782
         ST    A1,FROMVOLA              SAVE ADDR OF VOL LIST    A48782
BUILDLST L     A7,IEHMVV22              ADDR OF OLD FROM LIST    A48782
         L     A4,FROMVOLA              LOAD ADDR OF VOL LIST    A48782
         STH   A8,0(A4)                 STORE NO OF VOLS IN NEW  A48782
         LA    A6,2(A4)                 SET TO FIRST VOL ENTRY   A48782
MOVENTRY MVC   0(12,A6),0(A7)           MOVE ENTRY INTO NEW LIST A48782
         CLI   3(A6),X'00'              IS UNIT TYPE ZERO      @ZA11951
         BNE   NEXT                     NO, BRANCH             @ZA11951
         MVC   0(4,A6),16(A3)           GET DEV TYPE FROM UCB  @ZA11951
NEXT     AR    A6,A5                    NEXT ENTRY IN NEW LIST @ZA11951
         LA    A7,17(A7)                NEXT ENTRY IN OLD LIST   A48782
         BCT   A8,MOVENTRY              REPEAT IF MORE ENTRIES   A48782
         LR    A0,A3                    GET UCB ADDRESS          A48782
         L     A1,SCRHCODE              LOAD SCRATCH CONTROLBITS A48782
         L     A2,IEHMVV21              LOAD ADDR OF 'FROM' DSN  A48782
         SR    A3,A3                    CLEAR A3                 A48782
         STM   A1,A4,IEHMVV00           STORE PARAMETERS FOR SCRATCH
         SCRATCH IEHMVV00               SCRATCH THE 'FROM' DATA SET
         LTR   A15,A15                 TEST RETURN CODE
         BZ    SCRTCHOK                ZERO --- SCRATCH OK
         B     BADSCR                  NON-ZERO SCRATCH NO GOOD - ERROR
SCRTCHOK DS    0H
         BAL   A14,BIGMSG          ******    LINK TO WRITE MSG
         B     RENAME
         EJECT
BADSCR   DS    0H
         BAL   A14,BIGMSG          ******    LINK TO WRITE MSG
         LA    A8,IEHMVV00+1       ******
         LA    A15,16                   *
         BAL   A14,MSGCLEAR             *
         BAL   A14,MSGDS                *    WRITE MESSAGE-
         LA    A15,20                   *       'DS XX MAY STILL EXIST'
         BAL   A14,MSG                  *
         BAL   A2,LINEPR                *
         LA    A15,ANY                 *                         A37862
         BAL   A14,MSGVOL               *
         BAL   A2,LINEPR           ******
         B     RENAME
BIGMSG   ST    A14,BIG14           ******
         LA    A8,IEHMVV00+1            *
         LA    A15,4                    *
         BAL   A14,MSGCLEAR             *
         BAL   A14,MSGDS                *
         LA    A15,8                    *
         BAL   A14,MSG
         BAL   A2,LINEPR                *
         SR    A15,A15                  *    WRITE MESSAGE-
         BAL   A14,MSGVOL               *       'DS XX MOVED TO VOL X
         BAL   A2,LINEPR                *           AND NOW NAMED YY'
         TM    IEHMVV20+3,RENAM
         BZ    BIGDONE                  *
         LA    A8,IEHMVV00+1            *
         LA    A15,12                   *
         BAL   A14,MSGCLEAR             *
         SR    A15,A15                  *
         BAL   A14,MSGDS                *
         BAL   A2,LINEPR                *
BIGDONE  L     A14,BIG14                *
         BR    A14                      *
         EJECT
RENAME   TM    IEHMVV20+2,PHONYTO      WAS 'TO' DSNAME FAKED
         BZ    FROMKEY                 NO - BRANCH
         L     A1,IEHMVV31+8           YES -- GET ADDRESS OF 'TO' DDNAM
         SR    A0,A0                    CLEAR REGISTER         @ZM30153
         ICM   A0,3,14(A1)              LOAD UCB ADDR          @ZM30153
         L     A1,RENMCODE              LOAD RENAME CONTROL BITS
         L     A2,IEHMVV21+4            LOAD ADDR OF 'TO' DS NAME
         L     A3,IEHMVV21              LOAD ADDR OF 'FROM' DS NAME
         L     A4,IEHMVV10             ADDR OF TO VOL LIST MADE BY SN
         STM   A1,A4,IEHMVV00           STORE PARAMETERS FOR RENAME
         RENAME IEHMVV00                RENAME THE 'TO' DATA SET
         LTR   A15,A15                 TEST RETURN CODE -- ZERO IS OK
         BZ    FROMKEY                 RENAME WORKED OK
         LA    A8,IEHMVV00+1       ******
         LA    A15,24                   *    WRITE MESSAGE -
         BAL   A14,MSGCLEAR             *       'DS MAY HAVE GEN NAME'
         BAL   A2,LINEPR                *
         SR    A15,A15                  *
         BAL   A14,MSGVOL               *
         BAL   A2,LINEPR           ******
**********************************************************************
*        LINES 032100-034796 WERE REACTIVATED IN SUPPORT       @Z40CSJH
*        OF THE EXTENDED MVS CVOL FUNCTION                     @Z40CSJH
**********************************************************************
FROMKEY  MVI   IEHMVV00+16,X'00'       CLEAR SW
         TM    IEHMVV20+1,X'40'         WAS CVOL SPECIFIED
         BO    CVOLCAT                  YES-TO CATLG CVOL
         TM    IEHMVV20,X'10'          TEST FOR GROUP OPERATION
         BO    RECATRSA                 IF SO- CHECK FOR NAME
         TM    IEHMVV20,X'01'           IS FROM BIT SET        @Z40CSJH
         BO    RETURN                   YES - TO RETURN        @Z40CSJH
         TM    IEHMVV20,X'20'           DSNAME SPECIFIED
         BO    RECATRES                 YES-TO VSAM CATLG
         TM    IEHMVV20,X'08'           PDS SPECIFIED
         BO    RECATRES                 YES-TO VSAM CATLG
         B     FROMKEYA                 TO CHECK UNCATLG
RECATRSA TM    IEHMVV20+5,X'20'         DSGRP NAME SPEC.
         BO    RECATRES                 YES=TO VSAM CATLG
         B     RECATRSC                 TO SYSRES HNDLING
FROMKEYA TM    IEHMVV20+1,X'20'         WAS UNCATALOG SPECIFIED
         BO    UNCATRES                   IF SO ---
         B     RECATRSC                   IF NOT ---
CVOLCAT  DS    0H
         TM    IEHMVV20+1,X'20'         WAS UNCATALOG SPECIFIED
         BO    UNCATVOL                   IF SO ---
         B     RECATVOL                   IF NOT ---
         EJECT
********************************************************************
**       HANDLES UNCATALOGING IF UNCATLG KEYWORD SPECIFIED
********************************************************************
UNCATRES L     A1,CATCODE1              LOAD UNCATALOG CONTROL BITS
         L     A2,IEHMVV21              LOAD ADDR OF 'FROM' DSNAME
         SR    A3,A3                    INDICATE NO CVOL
         SR    A4,A4                    SET SWITCH
         B     CATALOGY
*********************************************************************
*
*     THIS ROUTINE HANDLES UNCATALOGING-CATALOGING OF A DATA SET
*     IF IT WAS DEFINED IN THE VSAM MASTER CATALOG
*
*********************************************************************
RECATRES EQU   *
         L     A2,IEHMVV21              GET @ OF FROM DSNAME
         L     A4,IEHMVV10              GET @ OF TO VOL LIST
         SR    A3,A3                    INDICATE NO CVOL
         L     A1,CATCODE1              UNCATLG CONTROL BITS
         MVI   IEHMVV00+16,X'FF'
         B     CATALOG                  BR TO CATALOG OPER.
REDOCAT  EQU   *                                               @ZA18380
         L     A2,IEHMVV21+4            GET @ OF TO DSNAME     @ZA18380
         TM    IEHMVV20+3,X'04'         RENAME SPECIFIED       @ZA18380
         BO    RENAME1                  YES, BRANCH AROUND     @ZA18380
         L     A2,IEHMVV21              GET @ OF FROM DSNAME   @ZA18380
RENAME1  L     A1,CATCODE5             LOAD CATLG CONTROL BITS @ZA18380
CATALOG1 LA    A10,IEHMVV82+4           GET @ OF TTR FIELD
         ST    A10,IEHMVV00+16          STORE IN PARM LIST
CATALOG  STM   A1,A4,IEHMVV00           STORE PARM LIST
         CATALOG IEHMVV00
         LTR   A15,A15                  TEST RETURN CODE
         BC    7,CATBAD                 BR + OR -,0 OK
         LTR   A4,A4                    WAS UNCATLG ATTEMPTED
         BZ    UNCATOK                  YES - BRANCH
         TM    IEHMVV20+1,X'20'         WAS UNCATLG SPEC'D     @Z40CSJH
         BO    UNCATOK                  BRANCH IF YES          @Z40CSJH
         CLI   IEHMVV00+16,X'FF'        CATLG/UNCATLG PAIR
         BE    REDOCAT                  IF SO ---
         LA    A8,IEHMVV00+1            *****
         LA    A15,32                   *   WRITE MESSAGE-
         BAL   A14,MSGCLEAR             * 'DS MOVED-RECATLG
         BAL   A2,LINEPR                *****
         B     RETURN                   TO NEXT MODULE
*
********************************************************************
*        LINES 031700-058271 WERE REACTIVATED IN SUPPORT       @Z40CSJH
*        OF THE EXTENDED MVS CVOL FUNCTION                     @Z40CSJH
*                                                              @Z40CSJH
********************************************************************
**
**       HANDLES RECATALOGING ON SYS RES
**
********************************************************************
*
RECATRSC L     A1,CATCODE2              LOAD RECATALOG CONTROL BITS
         L     A2,IEHMVV21              LOAD ADDR OF 'FROM' DSNAME
         L     A4,IEHMVV10             ADDR OF TO VOL LIST MADE BY SN
         SR    A3,A3                    CLEAR A3
         TM    IEHMVV20+3,X'04'        WAS RENAME SPEC
         BO    RERECAT1                   IF SO ---
         B     CATALOGX                                          S21042
*
********************************************************************
**
**       HANDLES UNCATALOGING ON A CVOL
**
********************************************************************
*
UNCATVOL L     A1,CATCODE3              LOAD UNCATALOG CONTROL BITS
         L     A2,IEHMVV21              LOAD ADDR OF FROM DS NAME
         L     A3,IEHMVV24              LOAD ADDR OF CVOL LIST
         LA    A3,4(A3)                 BUMP POINTER TO VOL ID
         SR    A4,A4                    CLEAR A4
         B     CATALOGY
*
********************************************************************
**
**       HANDLES RECATALOGING ON A CVOL
**
********************************************************************
*
RECATVOL L     A1,CATCODE4              LOAD RECATALOG CONTROL BITS
         L     A2,IEHMVV21              LOAD ADDR OF 'FROM' DS NAME
         L     A3,IEHMVV24              LOAD ADDR OF CVOL LIST
         LA    A3,4(A3)                 BUMP TO POINT TO VOL ID
         L     A4,IEHMVV10             ADDR OF TO VOL LIST MADE BY SN
         TM    IEHMVV20+3,X'04'        WAS RENAME SPEC
         BO    RERECAT2                   IF SO ---
         B     CATALOGX                                          S21042
*
*********************************************************************
**
**       HANDLES RECATALOGING A RENAMED DATA SET
**
*********************************************************************
*
RERECAT1 L     A1,CATCODE1             LOAD CATALOG CONTROL BITS
         MVI   IEHMVV00+16,X'FF'
         B     CATALOGY
RERECAT2 L     A1,CATCODE3             LOAD CATALOG CONTROL BITS
         MVI   IEHMVV00+16,X'FF'
         B     CATALOGY
REDOCATA L     A2,IEHMVV21+4           LOAD ADDR OF TO DSNAME
         TM    IEHMVV20+1,X'40'        WAS CVOL SPEC
         BO    CATCVOL                    IF SO ---
         L     A1,CATCODE5             LOAD CATALOG CONTROL BITS
         B     CATALOGX                                          S21042
CATCVOL  L     A1,CATCODE6             LOAD CATALOG CONTROL BITS
*        B     CATALOGX BE CARE *** NO INSTRUCTION *** COMMENT   S21042
*
********************************************************************
**
**       THIS ROUTINE ISSUES THE 'CATALOG' MACRO FOR UNCATALOGING
**         OR RECATALOGING THE MOVED DATA SET
**
********************************************************************
*
CATALOGX LA    A10,IEHMVV82+4          LOAD ADDRESS TTR FIELD    S21042
         ST    A10,IEHMVV00+16         STORE IT IN PARAMETERLIST S21042
CATALOGY STM   A1,A4,IEHMVV00           STORE PARAMETER LIST
         CATALOG  IEHMVV00              UNCATALOG OR RECATALOG
         CH    A15,=H'16'              MISSING INDEX             A38740
         BE    BUILDX                  IF SO, BUILD INDEX        A38740
         LTR   A15,A15                 TEST RETURN CODE
         BC    7,CATBAD                BRANCH ON PLUS OR MINUS - ZERO
*                                      IS THE ONLY CODE THATS OK
         LTR   A4,A4                   TEST TO SEE IF UNCATALOG WAS
         BZ    UNCATOK                   ATTEMPTED - IF SO BRANCH
         CLI   IEHMVV00+16,X'FF'       IS THIS A RENAME,RECATALOG
         BE    REDOCATA                   IF SO ---
         LA    A8,IEHMVV00+1       ******
         LA    A15,32                   *    WRITE MESSAGE-
         BAL   A14,MSGCLEAR             *       'DS JUST MOVED-RECTLG
         BAL   A2,LINEPR           ******
         B     RETURN
UNCATOK  DS    0H
         LA    A8,IEHMVV00+1       ******
         LA    A15,28                   *    WRITE MESSAGE-
         BAL   A14,MSGCLEAR             *       'DS JUST MOVED-UNCTLG
         BAL   A2,LINEPR           ******
         B     RETURN
CATBAD   LTR   A4,A4                    TEST TO SEE IF UNCATALOG WAS
         BZ    UNCATBAD                   ATTEMPTED -- IF SO BRANCH
         LA    A8,IEHMVV00+1       ******
         LA    A15,40                   *    WRITE MESSAGE-
         BAL   A14,MSGCLEAR             *       'DS JUST MOVED-NOT RECT
         BAL   A2,LINEPR           ******
         B     RETURN
UNCATBAD DS    0H
         LA    A8,IEHMVV00+1       ******
         LA    A15,36                   *    WRITE MESSAGE-
         BAL   A14,MSGCLEAR             *       'DS JUST MOVED-NOT UNCT
         BAL   A2,LINEPR           ******
         B     RETURN                                            A38740
BUILDX   LTR   A5,A5                   CHECK FOR FIRST TIME      A38740
         BZ    CATBAD                  IF NOT ---                A38740
         L     A1,CATCODE7             LOAD BUILDX CONTROL BITS  A38740
         ST    A1,IEHMVV00             STORE IN PARAMETER LIST   A38740
         SR    A5,A5                   CLEAR A5 FOR FIRST TIME IN CHECK
         L     A3,IEHMVV21+4           ADDRESS OF TO-DSNAME      A38740
         LA    A2,44(A3)               ADDRESS OF END OF DSNAME  A38740
FINDPER  CLI   0(A3),C'.'              CHECK FOR PERIOD          A38740
         BE    DOBUILD                   IF SO ---               A38740
         CR    A3,A2                   CHECK FOR END OF NAME     A38740
         BE    DOCAT                   IF SO ---                 A38740
BUMP     LA    A3,1(A3)                BUMP POINTER UP ONE       A38740
         B     FINDPER                                           A38740
DOCAT    L     A1,CATCODE6             LOAD CATALOG CONTROL BITS A38740
         L     A2,IEHMVV21+4                                     A38740
         L     A4,IEHMVV10                                       A38740
         L     A3,IEHMVV24             LOAD ADDR OF CVOL LIST  @XA04175
         LA    A3,4(A3)                BUMP TO POINT TO VOL ID @XA04175
         B     CATALOGY                GO AND CATALOG          @XA04175
DOBUILD  MVI   0(A3),C' '              REPLACE . WITH BLANK      A38740
         INDEX IEHMVV00                BUILD INDEX               A38740
         MVI   0(A3),C'.'              MOVE . BACKM IN           A38740
         B     *+4(A15)                                          A38740
         B     BUMP                                              A38740
         B     CATBAD                                            A38740
         B     BUMP                                              A38740
         B     CATBAD                                            A38740
         B     CATBAD                                            A38740
         B     CATBAD                                            A38740
         B     CATBAD                                            A38740
         B     CATBAD                                            A38740
         EJECT
RETURN   LH    A0,FROMVOLL              LENGTH OF GETMAIN AREA   A48782
         LTR   A0,A0                    CHECK LENGTH             A48782
         BZ    RETURN1                  IF ZERO, NO GETMAIN DONE A48782
         FREEMAIN R,LV=(0),A=FROMVOLA   IF NOT ZERO, FREE AREA   A48782
RETURN1  IEHPOST ,TC                                             A48782
         L     14,12(0,13)             RESTORE REG 14 TO KEEP PTR HOME
         TM    IEHMVV20,X'10'          TEST FOR GROUP OPERATION
         BO    ENDGRP                     IF SO ---
         TM    IEHMVV20,X'02'          TEST FOR VOLUME OPERATION
         BO    ENDVOL                     IF SO -----
         TM    IEHMVV20+2,X'20'        TEST FOR END BIT
         BO    END                        IF ON ---
         LA    A1,EST                  GO TO CARD SCANNER
EOJ      XCTL  (2,12),EPLOC=(A1)
END      LA    A1,ESK                  GO TO FINAL WRAPUP
         B     EOJ
ENDGRP   LA    A1,ESH                  GO TO GROUP WRAPUP
         B     EOJ
ENDVOL   LA    A1,ESZ                  CONTINUE VOLUME OPERATION
         B     EOJ
         SPACE 4
         DS    0D
EST      DC    CL8'IEHMVEST'           CARD SCANNER ROUTINE
ESK      DC    CL8'IEHMVESK'           FINAL WRAPUP ROUTINE
ESH      DC    CL8'IEHMVESH'           GROUP WRAPUP ROUTINE
ESZ      DC    CL8'IEHMVESZ'           VOLUME MOVE ROUTINE
         EJECT
*
*********************************************************************
**
**                            MESSAGE MOVER
**
**       THIS SUBROUTINE IS LINKED TO IN ORDER TO MOVE MESSAGES
**       FROM THE MESSAGE CSECT TO THE PRINT AREA (IEHMVV00)
**       THE LINKAGE IS AS FOLLOWS:          A8= LOCATION FOR MSG
**                                 A14= RETURN ADDR
**                       A15= DISPLACEMENT OF ADCON OF CORRECT MSG
**       WHEN THIS ROUTINE IS DONE A8  WILL POINT ONE SPACE PAST
**       THE MOVED MESSAGE --- ALL REGISTERS ARE TRANSPARENT
**       EXCEPT REGISTERS A1 AND A15 -- THE PRINT AREA IS CLEARED
**       IF THE INSTRUCTION 'MSGCLEAR' IS LINKED TO
**
*********************************************************************
*
MSGCLEAR MVI   IEHMVV00,C' '           CLEAR THE PRINT AREA
         MVC   IEHMVV00+1(120),IEHMVV00
MSG      L     A1,MSGAD                 GET ADDR OF MSG CSECT
         AR    A1,A15                   ADD DISP OF CORRECT ADCON
         L     A1,0(A1)                 LOAD ADDR OF MSG-1
         IC    A15,0(A1)               LOAD LENGTH OF MSG
         EX    A15,MSGMOVE              EXECUTE MOVE
         AR    A8,A15                   CALC ADDR OF END OF MSG
         LA    A8,2(A8)                BUMP REG TO END OF MSG +1
         BR    A14                      RETURN
MSGMOVE  MVC   0(1,A8),1(A1)           MOVE MSG
         EJECT
*
*********************************************************************
**
**                            DATA SET NAME MOVER
**
**       THIS SUBROUTINE IS LINKED TO IN ORDER TO MOVE DATA SET
**       NAMES INTO A MESSAGE THE LINKAGE IS AS FOLLOWS:
**                                           A8= LOCATION FOR NAME
**                                 A14= RETURN ADDR
**                       A15= CODE TO DEFINE WHICH DS NAME
**                             IF A15=0 ---MOVE 'TO' DS NAME
**                             IF A15= NOT 0 --- MOVE 'FROM' DS NAME
**       WHEN THIS ROUTINE IS DONE A8 WILL POINT ONE SPACE PAST
**       THE MOVED NAME
**
*********************************************************************
*
MSGDS    LTR   A15,A15                  TEST FOR A15=0
         BZ    TODS                       IF SO BRANCH
         L     A15,IEHMVV21             GET ADDR OF 'FROM' DS NAME
         B     DSMOVE
TODS     L     A15,IEHMVV21+4           GET ADDR OF 'TO' DS NAME
DSMOVE   MVC   0(44,A8),0(A15)          MOVE DS NAME TO PRINT AREA
CHKEND   CLI   0(A8),C' '              CHECK FOR END OF NAME
         BE    NAMEEND                    IF REACHED BRANCH ---
         LA    A8,1(A8)                 BUMP POINTER TO PRINT AREA
         B     CHKEND
NAMEEND  LA    A8,1(A8)                 ALLOW FOR SPACE AFTER NAME
         BR    A14                      RETURN
         EJECT
*
********************************************************************
**
**                            MESSAGE WRITE CALLER
**
**       THIS ROUTINE WILL BE LINKED TO WHENEVER A LINE OF OUTPUT
**       IS TO BE WRITTEN ON 'SYSPRINT' IT WILL HAVE NO PARAMETERS
**       AND ASSUME THAT THE LINE TO BE WRITTEN IS LOCATED AT IEHMVV00
**       AFTER THE WRITE IS COMPLETE, CONTROL WILL BE PASSED BACK VIA
**       A2 UNLESS A PERMANENT I/O ERROR WAS ENCOUNTERED
**
********************************************************************
*
LINEPR   LA    A3,IEHMVV00             LOAD ADDRESS OF PRINT AREA
         LINK EP=IEHMVESU              GO TO MSG WTR
         LTR   A15,A15                 CHECK RETURN CODE
         BZ    0(A2)                   IF ZERO WRITE OK - IF NOT EOJ
* E R R O R    E X I T
         LH    A0,FROMVOLL              LENGTH OF GETMAIN AREA   A48782
         LTR   A0,A0                    CHECK LENGTH             A48782
         BZ    ERREXIT                  IF ZERO, NO GETMAIN DONE A48782
         FREEMAIN R,LV=(0),A=FROMVOLA   IF NOT ZERO, FREE AREA   A48782
ERREXIT  IEHPOST ,TC                                             A48782
         L     14,12(0,13)              RESTORE REG 14
         SPACE 2
         XCTL  (2,12),EP=IEHMVESK
         EJECT
*
*********************************************************************
**
**                            VOLUME LIST MOVER
**
**       THIS ROUTINE IS LINKED TO  IN ORDER TO MOVE A VOLUME LIST
**       TO THE PRINT AREA PLUS 20 BYTES(IEHMVV00+20)
**       THE LINKAGE IS AS FOLLOWS
**                                 A14= RETURN ADDRESS
**       THE FORMAT OF THE LIST IS AS FOLLOWS
**         FOR DIRECT ACCESS --- 123 7986 A1763 IBM403
**         FOR TAPE          --- 24,0001 7987,0007
**         FOR UNIT RECORD   --- UNIT RECORD EQUIP -- UNIT = HR
**
**                            A15= CODE TO DEFINE WHICH VOL LIST
**                                 IF A15=0 --- 'TO' VOL LIST
**                                 IF A15= NOT ZERO --- 'FROM' VOL LIST
*********************************************************************
*
MSGVOL   MVI   IEHMVV00,C' '           CLEAR PRINT AREA
         MVC   IEHMVV00+1(120),IEHMVV00
         ST    A14,SAVE14               SAVE RETURN ADDR
         XR    A7,A7                   CLEAR A7
         LTR   A15,A15                  CHECK WHICH LIST TO MOVE
         BZ    TOVOL                      IF 'TO' LIST ---
         L     A5,FROMVOLA             ADDRESS OF FROM VOL LIST  A48782
         B     MOVEVOL
TOVOL    L     A5,IEHMVV10             LOAD ADR OF 'TO' VOLUME LIST
MOVEVOL  IC    A7,1(A5)                LOAD NO OF VOLS IN TO LST A48782
         LA    A5,2(A5)                BUMP PTR TO START OF VOL LIST
         TM    2(A5),X'08'             TEST DEVTYPE UNIT RECORD  A48782
         BO    UNITVOL                    IF SO ---
         CLI   IEHMVV74+12,X'FF'  WAS OUTPUT ON NL TAPE          A19476
         BE    UNITVOL                    IF SO ---
         LA    A6,8                    LOAD MAX VOLUME COUNT PER LINE
PRTLIST  DS    0H
         LA    A11,IEHMVV00+20         LOAD ADDRESS OF PRINT AREA
         CR    A7,A6                   COMPARE MAX VALUE TO ACTUAL
         LR    A0,A7                   LOAD COUNT IN CASE NOT HIGH
         BNH   CHKLIST                 IF NOT HIGHER CONTINUE NORMALLY
         LR    A0,A6                   MOVE MAX TO LOOP CONTROL REG
CHKLIST  MVC   0(6,A11),4(A5)          MOVE VOLUME SERIAL NUMBER
         LA    A11,6(A11)              BUMP PTR PAST VOLUME SERIAL NO.
         CLI   2(A5),X'80'             CHECK TAPE                A48782
         BNE   SETBLNK                 IF NOT, OMIT SEQNO IN LST A48782
         MVC   SEQNR(2),10(A5)    MOVE VOL. SEQ.NR.              A41824
         LH    A14,SEQNR          LOAD VOL. SEQ.NR.              A41824
         MVI   0(A11),C','             MOVE COMMA TO PRINT AREA
         CVD   A14,IEHMVV00+128         CONVERT TO DEC
         UNPK  1(4,A11),IEHMVV00+128(8) UNPACK TAPE SEQUENCE NUMBER
         OI    4(A11),X'F0'            RESET SIGN TO PRINTABLE CHAR.
         LA    A11,5(A11)              BUMP PTR PAST TAPE SEQUENCE NO.
SETBLNK  LA    A11,1(A11)              LEAVE SPACE IN PRINT AREA
         LA    A5,12(A5)               BUMP PTR TO NEXT ENTRY IN LIST
         BCTR  A7,A0                   REDUCE INITIAL VOLUME COUNT ALSO
         BCT   A0,CHKLIST               LOOP IF MORE VOL ID.S
         OR    A0,A7                   TEST FOR VOLUME LIST FINISHED
         BZ    NOMORE                  INITIAL COUNT ZERO ALSO - END
         BAL   A2,LINEPR               BRANCH TO PRINT FIRST LINE
         MVI   IEHMVV00,C' '           CLEAR PRINT AREA AFTER PRINTING
         MVC   IEHMVV00+1(120),IEHMVV00
         B     PRTLIST                 REPEAT LOOP TO PRINT REST OF LST
NOMORE   DS    0H
         L     A14,SAVE14               RESTORE REG A14
         BR    A14                      RETURN
UNITVOL  L     A15,MSGAD                LOAD ADDR OF MSG CSECT
         L     A15,0(A15)               LOAD ADDR OF FIRST MSG
         MVC   IEHMVV00+20(26),1(A15)      MOVE MSG TO PRINT
         MVI   IEHMVV74+12,X'00'  TURN NL TAPE SWITCH OFF        A19476
         BR    A14                      RETURN
*
*          C O N S T A N T S
*
         DS    0F                                                A41824
SCRHCODE CAMLST  SCRATCH,MSGAD,,MSGAD                            S21042
RENMCODE CAMLST  RENAME,MSGAD,MSGAD,MSGAD                        S21042
CATCODE1 CAMLST  UNCAT,MSGAD         UNCATALOG ON SYSRES         S21042
**********************************************************************
* LINES 092760,093280,093780,094280,094380 WERE                @Z40CSJH
* REACTIVATED IN SUPPORT OF THE EXTENDED MVS                   @Z40CSJH
* CVOL FUNCTION                                                @Z40CSJH
**********************************************************************
CATCODE2 CAMLST RECAT,MSGAD,,MSGAD,DSCBTTR=MSGAD RECAT ON SYSRES S21042
CATCODE5 CAMLST CAT,MSGAD,,MSGAD,DSCBTTR=MSGAD CATALOG ON SYSRES S21042
CATCODE3 CAMLST  UNCAT,MSGAD,MSGAD           UNCATALOG ON CVOL   S21042
CATCODE4 CAMLST RECAT,MSGAD,MSGAD,MSGAD,DSCBTTR=MSGAD   CVOL     S21042
CATCODE6 CAMLST CAT,MSGAD,MSGAD,MSGAD,DSCBTTR=MSGAD    CVOL      S21042
CATCODE7 DC    XL4'84400000'           FOR BUILD INDEX           A38740
SAVE14   DS    F                       AREA TO SAVE REG 14 FOR PRT LOOP
SEQNR    DS    H                  AREA TO SAVE VOL.SEQ.NR.       A41824
FROMVOLL DS    H                       LENGTH OF GETMAIN AREA    A48782
FROMVOLA DS    F                       ADDRESS OF GETMAIN AREA   A48782
MSGAD    DC    V(IEHMVMSQ)             ADDRESS OF MESSAGE MODULE
BIG14    DS    F                       REG 14 SAVE AREA FOR BIGMSG ROUT
RENAM    EQU   X'04'
PHONYTO  EQU   X'10'
DSGRP    EQU   X'10'                   GROUP OPERATION           Y02918
ANY      EQU   1                       ANY VALUE NOT ZERO        A37862
PATCH    DS    10F                      PATCH AREA
         IEHMVV
UCB      DSECT
         IEFUCBOB
         END
