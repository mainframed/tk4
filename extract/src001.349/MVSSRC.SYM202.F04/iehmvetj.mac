*TITLE ' IEHMVSTJ                                                     *
* /* START OF SPECIFICATIONS***
*01* PROCESSOR = ASSEM;
**** END OF SPECIFICATIONS ***/
*FUNCTION/OPERATION: MOVE OR COPY DATASET WHICH ARE PDS OR PHYSICAL   *
*SEQUENTIAL. WHEN MOVING OR COPYING PDS DATA SET THE PROGRAM UPDATES  *
*TTR'S IN DIRECTORY ENTRY AND UPDATES TTR POINTERS IN NOTELISTS IF    *
*THE PDS CONTAINS NOTELISTS. THE MODULE DOES A GET MAIN FOR BUFFERS   *
*AND FREEMAIN BEFORE XCTL.                                            *
*ENTRY POINTS: IEHMVETJ                                               *
*INPUT: AT ENTRY REG13 POINTS TO SAVEAREA AND REG 12 POINTS TO        *
*COMMUNICATION TABLE.                                                 *
*OUTPUT: REGISTERS ARE SAME AS ENTRY.                                 *
*EXTERNAL ROUTINES: IEHMVSSR, IEHMVLSU.                               *
*EXITS - NORMAL XCTL TO IEHMVSSN XCTL TO IEHMVETG                     *
*ERRORS: XCTL TO IEHMVSSN                                             *
*TABLES/WORK AREAS: IEHMVV - COMMUNICATION TABLE THE WORKAREA IS IN   *
*THE COMMUNICATION TABLE                                              *
IEHMVSTJ CSECT
*A050020-050180,062460                  (ORG)@ZA31216=@XA21663=@YA20729
*A017500                                                       @ZA10917
*C017870                                                       @YA01724
*A27580                                                         YA01458
*D27560-27720,27800,28200-28900                                 YA01458
* YM0566 IS REINSERTION OF CODE REMOVED BY XA00077               YM0566
*C 027560                                                        YM0566
*A 027660-027860,028500-028948                                   YM0566
*A008730-008760,017810-017920,130330-130360                     YA01221
*C007800,008700                                                 YA01221
*C007800,D008400-008600,A008700,018200,C020800,D039000,040000,   A48812
*041000,A041600,D043400-043600,A043700,043720,C045600,A051000,   A48812
*D051200-053200,C053400,A058600,064400,070400,D071030-071810,    A48812
*A073320,D073370,080400-082000,A130200                           A48812
*                                                                A37903
* 032200,032800                                                  A31964
*045400                                                          A31964
* 019000                                                         A27706
* 093200,094600,115660                                           A26560
*                                                               PTM2433
* 103450-103550                                                 PTM2433
*1796005800,111800                                               PTM019
*
*1796                                                              UL0H
*                                                                  UL0H
*                                                                     *
*  THIS ROUTINE COPIES A PDS TO A NEW PDS WITH OPTIONS FOR         UL0H
*  REPLACING MEMBERS AND INCLUDING NEW MEMBERS IN THE NEW PDS.     UL0H
*                                                                  UL0H
*A031300-031384                                                @YA01458
*C029000                                                       @YA01458
IEHMVETJ SAVE  (14,12),T,IEHMVETJ-78/04/17-OZ31216             @ZA31216
         USING IEHMVETJ,BASE10
         USING IEHGOTEN,BASE11
         USING IEHMVV,BASE12
         USING PRINTBUF,1
         ENTRY IEHMVETJ
*                                                                  UL0H
*  THIS ROUTINE COMPUTES AMOUNT OF CORE NEEDED FOR WORK AREA       UL0H
*  AND BUFFER, AND CLEARS WORK AREA TO ZEROS.                      UL0H
*                                                                  UL0H
FIRST    LR    BASE10,15                LOAD BASE REGISTER
         SR    REGZERO,REGZERO
         L     3,IEHMVV62
         LTR   3,3
         BP    ENTRY2
         L     2,IEHMVV10
         ST    2,IEHMVV62
         LA    2,188(0,2)                                       YA01221
         ST    2,IEHMVV10
ENTRY2   L     11,IEHMVV62
         XC    0(188,11),0(11)         CLEAR THE WORKAREA       YA01221
         MVI   BLDLIST+1,X'01'         INDIC ONE ENTRY          YA01221
         MVI   BLDLIST+3,X'0E'         ENTRY LENGTH             YA01221
         L     REG4,IEHMVV31
         MVC   SYNAD(3,REG4),ERREXT         ADDR OF SYNAD EXIT
         L     REG2,IEHMVV30             LOAD ADDR OF FROMDCB
         MVC   EODAD(3,REG2),PDSOUT+1   PUT EODAD EXIT IN DCB
         MVC   SYNAD(3,REG2),ERREXT         ADDR OF SYNAD EXIT
*                                                                  UL0H
*  ACTIVATE USER INPUT TRAILER LABEL EXIT IF REQUIRED.             UL0H
*                                                                  UL0H
         CLI   UDCBITLE,DEACTIVE       IS ITLE INACTIVE            UL0H
         BE    NEXTCODE                YES, CONTINUE               UL0H
         MVC   UDCBITLE(4),XXITLE      NO, SET UP ITLE EXLST ADDR  UL0H
NEXTCODE DS    0H                                                  UL0H
         SR    REG3,REG3
         IC    REG3,KEYL(0,REG2)        INSERT KEY LENGTH FROM DCB
         STC   REG3,KEYLEN
         LH    REGONE,BLKS(0,REG2)      LOAD WITH BLOCKSIZE FROM DCB
         STH   REGONE,BLKSIZE
         IEHPRE  (14,1),TF
         TM    DSORG(REG2),X'02'        IS THIS A BSAM DATASET
         BC    8,BSAMRTN               YES GO TO BSAM ROUTINE
         SR    2,2
         B     GETMEMBR
GBSBF    SR    0,0
         IC    REGZERO,KEYLEN           ADD KEY LENGTH
         AH    REGZERO,BLKSIZE          PLUS BLKSIZE TO COMPUTE
         ST    REGZERO,BUFF            STORE AMOUNT FOR BUFFER
         GETMAIN R,LV=(0)               BUFFER SIZE
         ST    REGONE,BUFFER
         B     READ01
*      THIS ROUTINE WILL GET MEMBER DIRECTORY RECORD PLACED IN DIRENTRY
*    AND BRANCH TO ROUTINE INDEXED BY RETURN CODE
GETMBR02 LA    REG2,10
         B     GETMEMBR
*      GETMBR01 WILL SET ENTRY SWITCH FOR MEMBER ENTRY  WILL
*    PRINT MESSAGE THAT MEMBER HAS BEEN MOVED
GETMBR01 L     REG3,A118
         IC    REG2,A118
         BAL   REG9,MESSAGE
GETMEMBR LA    REG3,DIRENTRY-5
         LINK  EP=IEHMVESR
         B     BACK(15)
BACK     B     CKALIAS
         B     FINISHED            END OF JOB
         B     WRKFLE
*
*      THIS ROUTINE CHECKS FOR ALIAS BIT IF PRESENT GO TO STOW ALIAS
*    IF TRUE MEMBER NAME CHECK FOR PRESENCE OF NOTELIST TTRS
*
CKALIAS  LA    2,DIRENTRY-5
         MVI   0(2),X'00'
         MVC   1(4,2),0(2)
         XC    TTRXPTR,TTRXPTR         CLEAR TTRXPTR           @ZA10917
         TM    C,BIT0
         BO    STALRTN        YES GO TO STOW ALIAS ROUTINE
         TM    IEHMVV20+3,X'08'        PREALLOCATION            YA01221
         BZ    CONTINUE                NO  DON'T CHECK          YA01221
* THE NEXT ROUTINE READS THE DIRECTORY OF THE RECEIVING         YA01221
* DATA SET                                                      YA01221
* IF THE MEMBER TO BE COPIED ALREADY EXISTS THEN THE MEMBER     YA01221
* WILL NOT BE COPIED AND A WARNING MESSAGE WILL BE ISSUED       YA01221
         MVC   BLDLIST+4(8),RENAME     GET THE MEMBER NAME     @YA01724
         L     REG2,IEHMVV31           ADDR TO-DCB              YA01221
         BLDL  (REG2),BLDLIST                                   YA01221
         LTR   REG15,REG15             MEMBER FOUND             YA01221
         BZ    DUP01                   YES  PRINT MSG           YA01221
CONTINUE DS    0H                      NO COPY THE MEMBER       YA01221
         TM    C,X'60'                  ARE THERE TTRS
         BZ    PDSBUF                   NO
         SR    REGZERO,REGZERO         CLEAR FOR INSERT          A48812
         IC    REGZERO,C               CALCULATE NUMBER          A48812
         SRL   REGZERO,5               OF USER TTRN'S            A48812
         LA    REG2,N1                 BYTE N OF FIRST TTR       A48812
SRCHNL   DS    0H                                                A48812
         CLI   0(REG2),X'00'           NOTELIST PTR              A48812
         BNE   NLBUF                   YES GET A NL AREA         A48812
         LA    REG2,4(REG2)            JUMP TO NEXT TTRN         A48812
         BCT   REGZERO,SRCHNL          IF ANY                    A48812
         B     PDSBUF                  SKIP NL GETMAIN           A48812
NLBUF    DS    0H                                                A48812
         LA    REGZERO,1024
         LH    REGONE,BLKSIZE
         CR    REGZERO,REGONE
         BH    ADDKEY                                            A27706
         LR    REGZERO,REGONE
ADDKEY   AH    REGZERO,KEY
         LA    REG2,4                  ADD 4 INTO REGISTER
         AR    REGZERO,REG2            ADD 4 TO SIZE OF AREA
         ST    REGZERO,NOTE            STORE AMT FOR NOTELIST BUFF
         GETMAIN R,LV=(0)               GET AREA FOR NOTELIST
         ST    REGONE,NOTELIST
         AH    REGONE,KEY
         ST    REGONE,TTRXPTR          BEGIN OF NL DATA          A48812
PDSBUF   SR    0,0
         AH    REGZERO,KEY
         AH    REGZERO,BLKSIZE
         ST    REGZERO,BUFF            STORE AMOUNT FOR BUFFER
         GETMAIN  R,LV=(0)              GET AREA FOR RECORDS
         ST    REGONE,BUFFER            ADDRESS OF CORE
         SR    REG6,REG6                                         A31964
         ST    REG6,TTR1           ZERO TTR SAVE AREAS           A31964
         ST    REG6,TTR2                                         A31964
         ST    REG6,TTR3                                         A31964
         TM    C,THREENL
         BC    7,HASNOTE
COPYMBR  L     REGONE,IEHMVV30          ADDRESS OF FROM DCB
         MVI   IOFLG(REGONE),X'00'      RESET I/O FLAGS
         L     REG2,IEHMVV31            ADDRESS OF TO DCB
         MVI   IOFLG(REG2),X'00'        RESET I/O FLAGS
         LA    1,0(0,1)
         MVC   NXTPT(3),TTR             LOAD TTR FROM DIRECTORY
*                                        ENTRY AND POINT TO FIRST
         LA    REGZERO,NXTPT
         POINT (1),(0)
         B     READ01
*
*
*      THIS READS A RECORD  COMPUTES THE LENGTH OF RECORD THEN WRITES
*    THE RECORD IN THE NEW PDS  THIS ROUTINE COPIES MEMBERS THAT HAVE
*    NO NOTELISTS
*
*
READ01   L     REG2,IEHMVV30            ADDRESS OF FROMDCB
         L     REGONE,IEHMVV30+4
         L     REG3,BUFFER              POINTER TO BUFFER
         SR    REG5,REG5
         AH    REG5,BLKS(0,REG2)        ADD BLOCKSIZE FROM DCB
         BAL   REG9,READ               READ A RECORD
         CLI   IEHMVV74+4,X'FF'         I/O ERR IN U.L. EXIT RTN   UL0H
         BNE   READ01A                 NOT ON - CONTINUE           UL0H
         BAL   REG9,IOERRMSG            OUTPUT I/O ERR MSG         UL0H
READ01A  DS    0H                                                  UL0H
         L     REGONE,IEHMVV30+4
         BAL   REG9,CHECK              CHECK THE READ
WRIT01   SR    REG5,REG5                                           8696
         TM    17(REG2),X'20'          TEST FOR DA               YM0566
         LA    REG9,RETRN              RETURN ADDRESS            YM0566
         BO    GETLNGTH                YES DA                    YM0566
         B     NOKEYLN                 NO VALID KEYS             YM0566
RETRN    L     REG2,IEHMVV31      ADDRESS OF TO DCB                8696
         MVC   BLKSAVE(2),BLKS(REG2)
         LH    REGONE,CSWCT(0,REG4)   PORTION OF BLOCK NOT MOVED YM0566
         LTR   REGONE,REGONE                                     YM0566
         BZ    GOOD                    NOT A TRUNCATED BLOCK     YM0566
         L     REG4,IEHMVV30           PTR TO FROM DCB           YM0566
         TM    17(REG2),X'20'          TEST FROM FOR DA          YM0566
         BZ    CHANGE                  NOT DA                    YM0566
         SR    REG9,REG9                                         YM0566
         IC    REG9,KEYL(0,REG2)       FROM KEY LENGTH           YM0566
         SR    REG5,REG9               DATA LENGTH               YM0566
CHANGE   STH   REG5,BLKS(0,REG2)   CHANGE DCB BLKSIZE              8696
GOOD1    L      REGONE,IEHMVV31+4    ADDRESS OF TO DECB        @YA01458
         L     REG3,BUFFER
         LTR   5,5           IS THE BLOCK COUNT ZERO?              8193
         BZ    FINISHED      YES--DO NOT ISSUE WRITE               8193
         BAL   REG9,WRITE              WRITE A RECORD
         L     REGONE,IEHMVV31+4
         LA    1,0(0,1)
         CHECK  (1)
         L     REG2,IEHMVV31
         MVC   BLKS(2,REG2),BLKSAVE
         B     READ01
GOOD     TM    36(REG2),X'C0'          UNDEFINED RECFM ?       @YA01458
         BNO   GOOD1                   NO-BRANCH               @YA01458
         SR    REG9,REG9               SUBTRACT                @YA01458
         IC    REG9,KEYL(0,REG2)        KEYLENGTH FROM         @YA01458
         SR    REG5,REG9                 DATA LENGTH           @YA01458
         B     GOOD1                                           @YA01458
*      THE HASNOTE ROUTINE CHECKS THE NUMBER OF TTRNS IN THE USER DATA
*    AND PLACES THE TTRS INTO A COMPARE AREA AND SAVES THE NUMBER OF
*    TTRS PRESENT
*
HASNOTE  TM    C,THREENL           ARE THERE TTRNS ?             A31964
         BC    1,SET3                   HAS THREE TTR POINTERS
         TM    C,TWONL
         BC    1,SET2                   HAS TWO TTR POINTERS
         B     SET1
SET3     MVC   TTR3(4),TTRN3            MOVE TTR TO COMPARE AREA
         LA    REG6,1(0,REG6)           ADD COUNT OF ONE TO
SET2     MVC   TTR2(4),TTRN2
         LA    REG6,1(0,REG6)
SET1     MVC   TTR1(4),TTRN1
         LA    REG6,1(0,REG6)
*
*      CHECK TO SEE IF ALL NOTELISTS HAVE BEEN UPDATED IF SO GO TO
*    READ01 IF NOTELIST REMAINS TO BE UPDATE GO TO POINTER
*
GETNTLST LTR   REG6,REG6
         BC    8,READ01
         B     POINTER
*      POINTER ROUTINE DETERMINES WHICH NOTELIST SHOULD BE READ INTO
*    CORE NEXT  KEEPS TRACK OF NUMBER OF NOTELISTS WHICH HAVE BEEN
*    UPDATED
*
POINTER  NI    TESTSW,X'00'
         CLI   TTRPT,X'01'
         BL    PTONE
         BE    PTTWO
         BH    PTTHRE
PTONE    CLI   TTR1+3,NONL
         BE    PTTWO
         L     REGZERO,TTR1
         B     POINT
PTTWO    CLI   TTR2+3,NONL
         BE    PTTHRE
         L     REGZERO,TTR2
         B     POINT
PTTHRE   CLI   TTR3+3,NONL
         BE    WCHREAD                 GO TO READ AND NOTE ROUTINE
         L     REGZERO,TTR3
*      FALL THROUGH TO POINT
POINT    L     REGONE,IEHMVV30          ADDRESS OF FROMDCB
         LA    1,0(0,1)
         STC   REGZERO,TTRXPTR         SAVE NBR OF TTRX'S        A48812
         IC    REGZERO,ZERO            CLEAR THE LOW ORDER BYTE  A48812
         SR    REG8,REG8
         IC    REG8,TTRPT
         LA    REG8,1(0,REG8)           ADD ONE TO TTR POINTER
         STC   REG8,TTRPT
         IC    REGZERO,ZERO
         ST    REGZERO,NXTPT
         LA    REGZERO,NXTPT
         POINT (1),(0)
         SR    REG8,REG8               CLEAR FOR INSERT          A48812
         IC    REG8,TTRXPTR            SAVE TOTAL NBR OF NLTTRX'SA48812
         L     REG2,IEHMVV30            ADDRESS OF FROMDCB
         MVI   IOFLG(REG2),X'00'        RESET I O FLAGS
         L     REG3,NOTELIST            POINTER TO NOTELIST BUFFER
         LH    REG5,BLKSIZE
         L     REGONE,IEHMVV30+4
         BAL   REG9,READ               READ A RECORD
         CLI   IEHMVV74+4,X'FF'         I/O ERR IN U.L. EXIT RTN   UL0H
         BNE   POINTA                  NOT ON - CONTINUE           UL0H
         BAL   REG9,IOERRMSG            OUTPUT I/O ERR MSG         UL0H
POINTA   DS    0H                                                  UL0H
         L     REGONE,IEHMVV30+4
         BAL   REG9,CHECK              CHECK THE READ
         BAL   REG9,GETLNGTH
* THIS ROUTINE ZEROES THE FIRST BIT OF EACH TTRX                 A52050
         LR    REGONE,REG8             SAVE THE NBR OF TTRX'S    A52050
         BAL   REG2,RESTNL             CLEAR THE HIGH ORDER BIT  A52050
         LR    REG8,REGONE             RESTORE                   A52050
         STC   REG8,TTRXPTR            SET THE COUNTER           A52050
         B     WCHREAD                                           A48812
*      READ NOTELIST INTO CORE IF THIS IS FIRST POINT FIND START OF
*    MEMBER  IF NOT FIRST POINT GO TO READNEXT RECORD
*
*      READNEXT ADJUSTS THE TTR AND POINTS TO THE NEXT RECORD
READNEXT L     REGZERO,RDNOTE
         A     REGZERO,ADDTOR
         L     REGONE,IEHMVV30
         LA    1,0(0,1)
         IC    REGZERO,ZERO
         ST    REGZERO,NXTPT
         LA    REGZERO,NXTPT
         POINT (1),(0)
READREC  LH    REG5,BLKSIZE
         L     REGONE,IEHMVV30+4
         L     REG2,IEHMVV30            ADDRESS OF FROMDCB
         L     REG3,BUFFER
         BAL   REG9,READ               READ A RECORD
         CLI   IEHMVV74+4,X'FF'         I/O ERR IN U.L. EXIT RTN   UL0H
         BNE   READRECA                NOT ON - CONTINUE           UL0H
         BAL   REG9,IOERRMSG            OUTPUT I/O ERR MSG         UL0H
READRECA DS    0H                                                  UL0H
         L     REGONE,IEHMVV30+4
         BAL   REG9,CHECK              CHECK THE READ
         NOTE  (2)
         ST    REGONE,RDNOTE
         BAL   REG9,GETLNGTH
         L     REG2,IEHMVV31            ADDRESS OF TO DCB      @ZA31216
         L     REG4,IEHMVV30            ADDRESS OF FROM DCB    @ZA31216
         MVC   BLKSAVE(2),BLKS(REG2)    SAVE TO BLKSIZE        @ZA31216
         TM    17(REG4),X'20'           TEST FROM FOR DA       @ZA31216
         BZ    CHANGE1                  NOT DA                 @ZA31216
         SR    REG9,REG9                                       @ZA31216
         IC    REG9,KEYL(0,REG4)        FROM KEY LENGTH        @ZA31216
         SR    REG5,REG9                DATA LENGTH            @ZA31216
CHANGE1  STH   REG5,BLKS(0,REG2)        CHANGE DCB BLKSIZE     @ZA31216
*      THIS ROUTINE COMPARES THE TTR RETURNED BY NOTE TO THE TTRS IN
*    THE DIRECTORY ENTRY AND THE TTR IN THE NOTELIST IF AN EQUAL
*    CONDITION IS FOUND UPDATE TTR WITH THE TTR RETURNED FROM NOTE
*    AFTER WRITE
*
CMPTTRS  DS    0H                                                A48812
         CLC   RDNOTE(3),TTR1                                    A48812
         BE    *+8
         B     CMP3
         SR    REG7,REG7
         IC    REG7,N1
         BAL   REG9,WRTEST1
         MVC   TTRN1(3),WRNOTE          UPDATE TTRN IN DIRECTORY
         MVC   TTR1(4),ZERO             SET UPDATED COMPARE AREA TO
CMP3     CLC   RDNOTE(3),TTR2
         BE    *+8
         B     CMP4
         SR    REG7,REG7
         IC    REG7,N2
         BAL   REG9,WRTEST1
         MVC   TTRN2(3),WRNOTE
         MVC   TTR2(4),ZERO
CMP4     CLC   RDNOTE(3),TTR3
         BE    *+8
         B     CMPDONE
         SR    REG7,REG7
         IC    REG7,N3
         BAL   REG9,WRTEST1
         MVC   TTRN3(3),WRNOTE
         MVC   TTR3(4),ZERO
CMPDONE  BAL   REG9,WNTEST
         NI    TESTSW,X'10'
         TM    TESTSW,X'10'            NOTELIST WRITTEN          A48812
         BO    POINTER                 YES LOOK FOR ANOTHER      A48812
         SR    REG7,REG7               CLEAR FOR INSERT          A48812
         IC    REG7,TTRXPTR            NBR OF TTRX'S TO CHECK    A48812
         LTR   REG7,REG7               ALL TTRX'S UPDATED        A48812
         BZ    READREC                 YES CONTINUE              A48812
         LR    REG2,REG7               SAVE THE NBR              A48812
         L     REG9,TTRXPTR            START OF NOTE LIST        A48812
NLTTRA   DS    0H                                                A48812
         TM    0(REG9),X'80'           TTRX FLAGGED              A48812
         BO    NLTTRD                  YES CHECK NEXT ONE        A48812
         CLI   2(REG9),X'00'           ZERO TTRX                 A48812
         BE    NLTTRB                  YES FLAG THIS ONE         A48812
         CLC   0(3,REG9),RDNOTE        EQUAL TTR'S               A48812
         BNE   NLTTRC                  NO GO TO NEXT ONE         A48812
         MVC   0(3,REG9),WRNOTE        YES UPDATE THE TTR        A48812
NLTTRB   DS    0H                                                A48812
         OI    0(REG9),X'80'           FLAG THIS TTR             A48812
         BCT   REG7,NLTTRC             NEXT ONE  IF ANY          A48812
         BAL   REG2,RESTNL             RESTORE THE NL            A48812
NLTTRE   DS    0H                                                A48812
         B     READREC                 CONTINUE                  A48812
NLTTRC   DS    0H                                                A48812
         BCT   REG2,NLTTRD             GO TO NEXT TTRX           A48812
         STC   REG7,TTRXPTR            STORE NEW NL COUNT        A48812
         B     READREC                 CONTINUE                  A48812
NLTTRD   DS    0H                                                A48812
         LA    REG9,4(REG9)            JUMP TO NEXT TTR          A48812
         B     NLTTRA                                            A48812
*
*            THIS ROUTINE CHECKS TO SEE IF RECORD HAS BEEN WRITTEN
*               DECIDES WHETHER TO WRITE THE BUFFER OR THE UPDATED
*               NOTELIST  GO TO UPDATE ROUTINE
*
WNTEST   TM    TESTSW,X'01'
         BC    1,GOBACK
         OI    TESTSW,X'01'
         L     REG3,BUFFER
WRTREC   L     REG2,IEHMVV31            ADDRESS OF  TODCB
         L     REGONE,IEHMVV31+4
         ST    REG9,NINSAV            SAVE RETURN ADDR
         BAL   REG9,WRITE              WRITE A RECORD
         L     REGONE,IEHMVV31+4
         LA    1,0(0,1)
         CHECK  (1)
         L     REG9,NINSAV             LOAD SAVED ADDR
         L     REGONE,IEHMVV31         ADDRESS OF TODCB
         MVC   BLKS(2,REGONE),BLKSAVE  RESTORE TO BLKSIZE      @ZA31216
         LA    1,0(0,1)
         NOTE  (1)
         ST    REGONE,WRNOTE
SETTEST  OI    TESTSW,X'01'
GOBACK   BR    REG9
*
*
WRTEST1  LTR   REG7,REG7
         BE    WNTEST
         OI    TESTSW,X'10'
         CLI   TTRXPTR,X'00'           NOTELIST UPDATED          A48812
         BE    WRNLIST1                YES CONTINUE              A48812
         ST    REG9,NINSAV             SAVE RETURN ADDRESS       A48812
         BAL   REG2,RESTNL             RESTORE NL BEFORE WRITE   A48812
         B     BADNOTE                 ISSUE WARNING             A48812
WRNLIST  DS    0H                                                A48812
         L     REG9,NINSAV             RESTORE RETURN ADDRESS    A48812
WRNLIST1 DS    0H                                                A48812
         L     REG3,NOTELIST
         B     WRTREC
*      THIS ROUTINE WILL STOW AN ALIAS MEMBER INTO THE NEW PDS  AFTER
*    UPDATING THE TTRS PRESENT
STALRTN  TM    STOWBIT,X'01'
         BC    1,NOSTALIS
         MVC   TTR(3),TTRSAVE
         TM    C,THREENL
         BC    1,SWAP3
         TM    C,TWONL
         BC    1,SWAP2
         TM    C,ONENL
         BC    1,SWAP1
         B     NOSWAP
SWAP3    MVC   TTRN3(4),SAVTTR3
SWAP2    MVC   TTRN2(4),SAVTTR2
SWAP1    MVC   TTRN1(4),SAVTTR1
NOSWAP   B     STOWMBR
*              THIS ROUTINE CALCULATES THE LENGTH OF THE RECORD
*               READ A PLACES LENGT IN REGISTER 5 TO BE USED BY
*               WRITE
*
GETLNGTH SR    REG5,REG5
         L     REG2,IEHMVV30            ADDRESS OF FROMDCB
         IC    REG5,KEYL(0,REG2)        INSERT KEY LENGTH FROM DCB
NOKEYLN  AH    REG5,BLKS(0,REG2)  ADD BLKSIZE FROM DCB             8696
         L     REG4,IEHMVV30+4         ADDRESS OF DECB
         L     REG4,IOBAD(0,REG4)       LOAD ADDR OF IOB
         SH    REG5,CSWCT(0,REG4)       SUBT COUNT FROM CSW
         BR    REG9
*  THIS ROUTINE RESTORES THE NOTELIST BEFORE                     A48812
*  IT IS WRITTEN                                                 A48812
* IT IS ALSO INVOKED TO ZERO THE HIGH ORDER BIT OF               A52050
* EACH TTRX BEFORE PROCESSING                                    A52050
RESTNL   DS    0H                                                A48812
         L     REG9,TTRXPTR            START OF NOTELIST         A48812
NLTTRG   NI    0(REG9),X'7F'           UNFLAG THE TTR            A48812
         LA    REG9,4(REG9)            JUMP TO NEXT TTR          A48812
         BCT   REG8,NLTTRG             IF ANY                    A48812
         STC   REG8,TTRXPTR            INDIC NL CHECKED          A48812
         BR    REG2                    RETURN TO CALLER          A48812
*      THIS ROUTINE WILL STOW MEMBER IN DIRECTORY OF NEW PDS
*
STOWMBRF L     REGONE,NOTELIST     LOAD NOTELIST BUFFER ADDRESS. A31964
         LTR   REGONE,REGONE       DOES MEMBER HAVE NOTELIST ?   A31964
         BZ    FREBUF              NO.                           A31964
         SR    REGZERO,REGZERO                                   A31964
FRENOTE  L     REGONE,NOTELIST     LOAD NOTELIST BUFFER ADDR.    A31964
         L     REGZERO,NOTE        LENGTH OF NOTELIST BUFFER.    A31964
         FREEMAIN   R,LV=(0),A=(1)                               A31964
         SR    REG2,REG2                                         A31964
         ST    REG2,NOTE           ZERO NOTELIST BUFFER ADDR     A31964
         ST    REG2,NOTELIST          AND LENGTH.                A31964
*   CHECK TO SEE IF ALL USER TTRNS HAVE BEEN UPDATED.            A31964
FREBUF   CLC   TTR1(4),ZERO        HAS FIRST TTRN BEEN UPDATED ? A31964
         BNE   BADTTRN             NO--PRINT MESSAGE.            A31964
         CLC   TTR2(4),ZERO        HAS SECOND BEEN UPDATED ?     A31964
         BNE   BADTTRN             NO                            A31964
         CLC   TTR3(4),ZERO        HAS THIRD BEEN UPDATED ?      A31964
         BNE   BADTTRN             NO                            A31964
FREBUF1  L     REGZERO,BUFF                                      A31964
         L     REGONE,BUFFER                                     A31964
         FREEMAIN   R,LV=(0),A=(1)                               A31964
         SR    REG2,REG2                                         A31964
         ST    REG2,BUFF                                         A31964
         ST    REG2,BUFFER                                       A31964
         B     STOWMBR             STOW THIS MEMBER              A31964
*   A TTR WITHIN THE NOTELIST HAS NOT BEEN UPDATED.  PRINT       A31964
*       MESSAGE.  THEN STOW MEMBER.                              A31964
BADNOTE  L     REG3,A129           GET ADDR OF IEH328I.          A31964
         IC    REG2,A129           LENGTH MINUS ONE OF IEH328I.  A31964
         BAL   REG8,CLEAR          HAVE BLANKS PUT IN BUFFER.    A31964
         EX    REG2,MOVER          MOVE MESSAGE TO BUFFER.       A31964
         BAL   REG9,MESSAG02       HAVE MESSAGE PRINTED.         A31964
         B     WRNLIST                 RETURN TO WRITE THE NL    A48812
*   A TTRN IN THE USER DATA FIELD OF THE DIRECTORY HAS NOT BEEN  A31964
*       UPDATED.  PRINT MESSAGE.  THEN STOW MEMBER               A31964
BADTTRN  L     REG3,A128           GET ADDR OF IEH327I.          A31964
         IC    REG2,A128           LENGTH MINUS ONE OF MESSAGE.  A31964
         BAL   REG8,CLEAR          HAVE BLANKS PUT IN BUFFER.    A31964
         EX    REG2,MOVER          MOVE MESSAGE TO BUFFER.       A31964
         BAL   REG9,MESSAG02       HAVE MESSAGE PRINTED.         A31964
         B     FREBUF1                                           A31964
STOWMBR  LA    REGZERO,DIRENTRY                                  A31964
         MVC   DIRENTRY(8),RENAME      MOVE MEMBER NAME FOR STOW
         L     REGONE,IEHMVV31          ADDRESS OF TODCB
         LA    1,0(0,1)
         STOW  (1),(0),A
         MVC   TTRSAVE(16),TTR         SAVE  TTRS FROM REAL MEMBER
         B     GO(15)
GO       B     GETMBR01
         B     DUPLCTE
         EX    0,*
         B     DIRFULL
         B     STOERR
******************************************************************21919
*                                                                *21919
*   NEXT RETURN CODES ALSO GIVE THE MESSAGE:                     *21919
*         IEH326I I/O ERROR ENCOUNTERED IN OUTPUT DATA SET       *21919
*   BUT THESE RETURN CODES ARE CAUSED BY OTHER ERRORS            *21919
*                                                                *21919
******************************************************************21919
         B     STOERR        INDICATES I/O REQUESTS AGAINST THE   21919
*                            DCB ARE STILL OUTSTANDING            21919
         B     STOERR        INDICATES THE DCB IS NOT OPEN        21919
         B     STOERR        INDICATES CONDITIONAL GETMAIN WITHIN 21919
*                            STOW WAS UNSUCCESSFUL                21919
*
*
*
WCHREAD  TM    PNTSW,X'01'
         BC    1,READNEXT
*                             POINT TO FIRST RECORD IN MEMBER AND SET
*                               PNTSW  ON AFTER POINT
         L     REGONE,IEHMVV30
         LA    1,0(0,1)
         MVI   IOFLG(REGONE),X'00'      RESET I/O FLAGS IN DCB
         L     REG2,IEHMVV31
         MVI   IOFLG(REG2),X'00'        RESET I/O FLAGS IN DCB
         MVC   NXTPT(3),TTR             PICK UP TTR FROM DIRECTORY
*                                        RECORD OF THE MEMBER TO BE
*                                        USED BY NEXT READ
         LA    REGZERO,NXTPT            LOAD ADDR OF TTR
         POINT (1),(0)
         OI    PNTSW,X'01'
         B     READREC
*
*      THIS ROUTINE PRINT OUT A MESSAGE TO OPERATOR
MESSAGE  BAL   REG8,CLEAR
         LR    REGONE,BASE12            ADDRESS OF PRINT BUFFER
         EX    2,MOVER
         MVC   NAMES(8),DIRENTRY
         B     MESSAG02
MESSAG01 BAL   REG8,CLEAR
         LR    REGONE,BASE12            ADDRESS OF PRINT BUFFER
         EX    2,MOVER
         MVC   NAMES01(8),DIRENTRY
         B     MESSAG02
MESSAG03 BAL   REG8,CLEAR
         LR    REGONE,BASE12            ADDRESS OF PRINT BUFFER
         EX    2,MOVER
         MVC   NAMES03(44),0(4)
         B     MESSAG02
MESSAG02 LR    REG3,REGONE
         LINK  EP=IEHMVESU
         LTR   15,15                    IS RETURN CODE ZERO
         BP    PRMABORT                 NO
         BR    REG9
MOVER    MVC   MSG(1),0(3)
CLEAR    LR    REGONE,BASE12            ADDRESS OF PRINT BUFFER
         MVI   0(1),X'40'
         MVC   1(120,1),0(1)
         SR    0,0
         BR    8
*
*
DUPLCTE  TM    C,BIT0
         BO    DUP01
         OI    STOWBIT,X'01'       SET STOWBIT TO RECOVER SPACE
         MVC   TTRSAV(3),TTR
DUP01    L     REG3,A119           SET UP TO PRINT MESSAGE
         IC    REG2,A119
         BAL   REG9,MESSAGE
         B     GETMBR02
DIRFULL  L     REG3,A121
         IC    REG2,A121
         BAL   REG9,MESSAGE
         B     ABORT
STOERR   L     REG3,A124
         IC    REG2,A124
         L     REG4,IEHMVV21+4
         BAL   REG9,MESSAG03
         B     ABORT
*
WRKFLE   L     REG3,A120
         IC    REG2,A120
         BAL   REG8,CLEAR
         LR    REGONE,BASE12            ADDRESS OF PRINT BUFFER
         EX    2,MOVER
         BAL   REG9,MESSAG02
         B     ABORT
REAERR   L     REG3,IEHMVV30+8                                   A26560
         TM    ORG(REG3),X'02'         IS THIS A PDS             A26560
         BZ    RDSEQ                   NO -- ISSUE SEQ MSG       A26560
*
         L     REG3,A122                                         A26560
         IC    REG2,A122
         L     REG4,IEHMVV21
         BAL   REG9,MESSAG01
         B     ABORT
RDSEQ    L     REG3,A127                                         A26560
         IC    REG2,A127                                         A26560
         L     REG4,IEHMVV21                                     A26560
         BAL   REG8,CLEAR              SEQ I/O ERROR ON READ     A26560
         LR    REGONE,BASE12                                     A26560
         EX    2,MOVER                                           A26560
         BAL   REG9,MESSAG02                                     A26560
         B     ABORT
WRTERR   L     REG3,IEHMVV30+8                                   A26560
         TM    ORG(REG3),X'02'         IS THIS A PDS             A26560
         BZ    WTSEQ                   NO -- ISSUE SEQ MESSAGE   A26560
*
*
         L     REG3,A123                                         A26560
         IC    REG2,A123
         L     REG4,IEHMVV21+4
         BAL   REG9,MESSAG01
         B     ABORT
WTSEQ    L     REG3,A124                                         A26560
         IC    REG2,A124                                         A26560
         L     REG4,IEHMVV21+4                                   A26560
         BAL   REG9,MESSAG03           SEQ I/O ERROR ON WRITE    A26560
         B     ABORT                                             A26560
NOSTALIS L     REG3,A125
         IC    REG2,A125
         BAL   REG9,MESSAGE
         B     GETMBR02
READ     LA    1,0(0,1)
         LA    2,0(0,2)
         READ  (1),SF,(2),(3),(5),MF=E
         BR    REG9
CHECK    LA    1,0(0,1)
         CHECK (1)
         BR    REG9
WRITE    LA    1,0(0,1)
         LA    2,0(0,2)
         TM    STOWBIT,X'01'
         BC    1,RCOVR
WRIT02   WRITE (1),SF,(2),(3),(5),MF=E
         BR    REG9
BSAMRTN  MVC   EODAD(3,REG2),BSEXIT+1
         TM    IEHMVV30+4,X'80'        IS BUUFER PRESENT
         BC    8,GBSBF                 NO, GET BSAM BUFFER
         L     REG7,IEHMVV30+4         DECB ADDRESS
         L     REG6,12(0,REG7)         ADDRESS OF BUFFER
         ST    REG6,BUFFER
         L     REG2,IEHMVV30           SET UP TO FREE MAIN WHICH
         LH    REG3,BLKS(0,REG2)       WAS PASSED TO IEHMVSTJ
         ST    REG3,BUFF
         B     WRIT01
ABORT    B     PRMABORT
RCOVR    NI    STOWBIT,X'00'
         MVC   NXTPT(3),TTRSAV
         MVC   0(3,REG2),TTRSAV        SET RELAD FIELD IN DCB      9312
         LA    REGZERO,NXTPT
         L     REGONE,IEHMVV31
         LA    1,0(0,1)
         POINT (1),(0)
         L     REGONE,IEHMVV31+4       GET ADDR OF DECB
         B     WRIT02
PRMABORT L     2,IEHMVV20
         O     REG2,ABORTBIT
         ST    REG2,IEHMVV20
         OI    IEHMVV41+13,X'02'       SET RETURNCODE TO 8       A37903
BSEODAD  B     FINISHED
INVALID  EX    0,*
FINISHED L     REG2,IEHMVV30
         TM    DSORG(REG2),X'40'       IS THIS A BSAM DATASET
         BC    1,FRMAIN01              YES, FREE BUFFER
         B     FRMAIN                  WAS A PDS
SINAD    ST    REGONE,ERRSAV           STORE ERROR CODE
         TM    ERRSAV,X'80'
         BC    1,REAERR
         TM    ERRSAV,X'40'
         BC    1,WRTERR
         TM    ERRSAV,X'20'
         BC    1,ABORT
         B     INVALID
FRMAIN   L     REGONE,NOTELIST
         LTR   1,1
         BZ    FRMAIN01
         L     REGZERO,NOTE
         FREEMAIN  R,LV=(0),A=(1)
FRMAIN01 L     REGONE,BUFFER
         LTR   1,1
         BZ    FRMAIN02
         L     REGZERO,BUFF
         FREEMAIN  R,LV=(0),A=(1)
FRMAIN02 TM    IEHMVV20+2,X'40'        IS MIDABORT BIT ON
         BO    WRAPITUP                YES
         TM    IEHMVV20,X'08'
         BZ    WRAPITUP
         TM    IEHMVV20+2,X'08'        IS INC REP BIT ON
         BO    INCLUDE
WRAPITUP  IEHPOST  (14,1),T
         XCTL  (2,12),EP=IEHMVESN
INCLUDE  TM    IEHMVV20,X'10'          DSGROUP OPERATION           VS0H
         BC    1,WRAPITUP              YES, TO VESN FOR WRAPUP     VS0H
         IEHPOST  (14,1),T                                         VS0H
         XCTL  (2,12),EP=IEHMVETG
XXITLE   DC    X'03'                                               VS0H
         DC    AL3(ITLR)                                           VS0H
*                                                                  VS0H
*    USER  INPUT  TRAILER  LABEL  ROUTINE                          VS0H
*                                                                  VS0H
ITLR     DS    0H                                                  VS0H
OFFSET1  EQU   ITLR-IEHMVETJ                                       VS0H
         LA    REG6,OFFSET1                                        VS0H
         SR    REG15,REG6                                          VS0H
         LR    BASE10,REG15                                        VS0H
         L     REG6,0(REGONE)          GET ADDR OF LABEL BUFFER    UL0H
         LTR   REG6,REG6               ANY LABELS TO PROCESS       UL0H
         BNZ   IOERR                   YES, GO CHK 1ST FOR ERRORS  UL0H
NOLABEL  DS    0H                                                  UL0H
         MVI   UDCBITLE,X'00'          DEACTIVATE INPUT, OUTPUT    UL0H
         MVI   UDCBOTLE,X'00'          TRLR LABEL EXITS IN DCB     UL0H
         SR    REG15,REG15             NO LABELS, RETURN CODE ZERO UL0H
         BR    RETREG                  TO EOV TO END PROCESSING    UL0H
*                                                                  UL0H
IOERR    DS    0H                                                  UL0H
         TM    8(REGONE),X'80'         I/O ERROR FLG ON IN PARMS   UL0H
         BZ    TRKAVAIL                 NO, CHK FOR U.L. TRK AVAIL UL0H
LABERR   DS    0H                                                  UL0H
         OI    IEHMVV74+4,X'FF'         YES, SET FLAG TO OUTPUT    UL0H
*                                        MSG AFTER OPEN/CLOSE/EOV  UL0H
         L     REG2,IEHMVV20           TURN ON                  PTM2433
         O     REG2,ABORTBIT              MID - ABORT           PTM2433
         ST    REG2,IEHMVV20                  SWITCH            PTM2433
         B     ABORT                   GO SET ABORT FLAG (VV20+2)  UL0H
*                                                                  UL0H
TRKAVAIL DS    0H                                                  UL0H
         CLI   IEHMVV72+10,X'FF'       DA+NLT FLAG ON              UL0H
         BNE   CORAVAIL                NO, HAVE TRK, CHK FOR CORE  UL0H
*                                                                  UL0H
*  VESN WILL OUTPUT MESSAGE NO USER LBLS MOVED/COPIED. NO U.L. TRK UL0H
*                                                                  UL0H
         MVI   IEHMVV72+14,X'FF'       TELL VESN TO PUT OUT MSG    UL0H
         B     NOLABEL                 RETURN TO EOV               UL0H
*                                                                  UL0H
CORAVAIL DS    0H                                                  UL0H
         CLC   IEHMVV72(4),ALLZEROS    CORE GOTTEN FOR LABELS      UL0H
         BNE   INITIAL                 YES, INITIALIZE POINTERS    UL0H
         GETMAIN  R,LV=640             NO, GET CORE NEEDED         UL0H
         ST    REGONE,IEHMVV72         SAVE GOTTEN CORE ADDRESS    UL0H
INITIAL  DS    0H                                                  UL0H
         CLC   0(4,REG6),UTL1DEF       FIRST LABEL IN GROUP        UL0H
         BNE   SAVLABEL                NO, GO AROUND SET UP        UL0H
         MVC   IEHMVV72+4,IEHMVV72     NO, SET PTR TO LBL SAVEAREA UL0H
         MVI   IEHMVV72+12,X'00'       CLEAR LABEL COUNTER         UL0H
*                                                                  UL0H
SAVLABEL DS    0H                                                  UL0H
         L     REGONE,IEHMVV72+4       GET ADDR OF CURRENT         UL0H
*                                      LABEL SAVE AREA             UL0H
         MVC   0(80,REGONE),0(REG6)    SAVE LABEL IN GOTTEN CORE   UL0H
         LA    REGONE,80(REGONE)       UP PTR TO NEXT LOCATION     UL0H
         ST    REGONE,IEHMVV72+4       IN LBL SAVEAREA, SAVE PTR   UL0H
         SR    REG6,REG6                                           UL0H
         IC    REG6,IEHMVV72+12        UPDATE LABEL                UL0H
         LA    REG6,1(REG6)                 COUNTER                UL0H
         STC   REG6,IEHMVV72+12                  BY ONE, AND SAVE  UL0H
         LA    REG15,4                 RETURN CODE OF 4 TO EOV TO  UL0H
*                                      GET ADDITIONAL LABELS       UL0H
         BR    RETREG                  RETURN TO EOV               UL0H
*                                                                  UL0H
ALLZEROS DC    F'0'                                                UL0H
UTL1DEF  DC    CL4'UTL1'                                           UL0H
DEACTIVE EQU   X'00'                                               UL0H
SAVE14   DS    F                                                   UL0H
*                                                                  UL0H
*
IOERRMSG DS    0H                                                  UL0H
         NI    IEHMVV74+4,X'00'         CLEAR I/O ERROR FLAG       UL0H
         ST    RETREG,SAVE14            SAVE EOV RETURN ADDRESS    UL0H
         L     REG3,A126                GET ADDRESS OF MESSAGE     UL0H
         IC    REG2,A126                GET LENGTH OF MESSAGE      UL0H
         BAL   REG8,CLEAR               BLANK OUT MESSAGE BUFFER   UL0H
         LR    REGONE,BASE12            GET ADDR OF BUFFER FOR PRT UL0H
         EX    2,MOVER                  MOVE MESSAGE TO BUFFER      L0H
         BAL   REG9,MESSAG02            GO TO MESSAGE WRITER       UL0H
         B     ABORT                    GO SET ABORT FLAG (VV20+2) UL0H
BLKSAVE  DC    X'0000'
         DS    0F
ZERO     DC    F'0'
ENDNOTE  DC    X'FFFF0000'
ABORTBIT DC    X'00004000'
ADDTOR   DC    X'00000100'
MASK     DC    X'FFFFFFF8'
PDSOUT   DC    A(STOWMBRF)
BSEXIT   DC    A(BSEODAD)
         DS    0F
A118     DC    AL1(M119-M118-1)
         DC    AL3(M118)
A119     DC    AL1(M120-M119-1)
         DC    AL3(M119)
A120     DC    AL1(M121-M120-1)
         DC    AL3(M120)
A121     DC    AL1(M122-M121-1)
         DC    AL3(M121)
A122     DC    AL1(M123-M122-1)
         DC    AL3(M122)
A123     DC    AL1(M124-M123-1)
         DC    AL3(M123)
A124     DC    AL1(M125-M124-1)
         DC    AL3(M124)
A125     DC    AL1(M126-M125-1)                                    UL0H
         DC    AL3(M125)
A126     DC    AL1(M127-M126-1)                                  A26560
         DC    AL3(M126)                                           UL0H
A127     DC    AL1(M128-M127-1)                                  A31964
         DC    AL3(M127)                                         A31964
A128     DC    AL1(M129-M128-1)                                  A31964
         DC    AL3(M128)                                         A31964
A129     DC    AL1(M130-M129-1)                                  A31964
         DC    AL3(M129)                                         A31964
A130     DC    AL1(M131-M130-1)
         DC    AL3(M130)
A131     DC    AL1(M132-M131-1)
         DC    AL3(M131)
ERREXT   DC    AL3(SINAD)
REGZERO  EQU   0
REGONE   EQU   1
REG2     EQU   2
REG3     EQU   3
REG4     EQU   4
REG5     EQU   5
REG6     EQU   6
REG7     EQU   7
REG8     EQU   8
REG9     EQU   9
BASE10   EQU   10
BASE11   EQU   11
BASE12   EQU   12
BASE13   EQU   13
RETREG   EQU   14
REG15    EQU   15
BIT0     EQU   X'80'
ONENL    EQU   X'20'
TWONL    EQU   X'40'
THREENL  EQU   X'60'
NONL     EQU   X'00'
EODAD    EQU   33
SYNAD    EQU   57
BLKS     EQU   62
KEYL     EQU   16
DSORG    EQU   26
ORG      EQU   82                                                A26560
IOFLG    EQU   44
IOBAD    EQU   16
CSWCT    EQU   14
IEHGOTEN DSECT
RDNOTE   DS    1F
WRNOTE   DS    1F
TTR1     DS    1F
TTR2     DS    1F
TTR3     DS    1F
TTRNL    DS    1F
STOWBIT  DS    CL2
TESTSW   DS    CL1
TESTSW1  DS    CL1
TTRPT    DS    CL1
PNTSW    DS    CL1
DIRENTRY DS    0CL74
NAME     DS    CL8
TTR      DS    CL3
C        DS    CL1
TTRN1    DS    CL3
N1       DS    CL1
TTRN2    DS    CL3
N2       DS    CL1
TTRN3    DS    CL3
N3       DS    CL1
         DS    CL50
RENAME   DS    CL8
NOTE     DS    CL4
BUFF     DS    CL4
NOTELIST DS    CL4
BUFFER   DS    CL4
KEY      DS    CL1
KEYLEN   DS    CL1
BLKSIZE  DS    1H
TTRSAVE  DS    CL4
SAVTTR1  DS    CL4
SAVTTR2  DS    CL4
SAVTTR3  DS    CL4
NXTPT    DS    CL4
TTRSAV   DS    CL4
ERRSAV   DC    F'0'
NINSAV   DS    1F
TTRXPTR  DS    1F                      START OF NOTELIST         A48812
         DS    1H                                               YA01221
BLDLIST  DS    CL18                                             YA01221
PRINTBUF DSECT
CC       DS    CL1
MSG      DS    CL15
NAMES    DS    CL25
NAMES01  DS    CL9
NAMES03  DS    CL10
NAMES02  DS    CL61
        IEHMVV
         ORG   IEHMVV70                                            UL0H
         IEHDCBXL                                                  UL0H
ORATOR   CSECT
M118     DC    CL24'  MEMBER NAMED          '
         DC    CL22'HAS BEEN MOVED/COPIED.'
M119     DC    CL30'IEH319I MEMBER          NOT MO'
         DC    CL30'VED/COPID. DUPLICATE NAME IN O'
         DC    CL15'UTPUT DATA SET.'
M120     DC    CL8'IEH372I'
         DC    CL30'I/O ERROR ENCOUNTERED IN WORK '
         DC    CL5'FILE.'
M121     DC    CL30'IEH321I MEMBER          NOT MO'
         DC    CL30'VED/COPIED. OUTPUT DIRECTORY 1'
         DC    CL7'S FULL.'
M122   DC    CL8'IEH322I'
       DC    CL30'I/O ERROR ENCOUNTERED IN MEMBE'
         DC    CL29'R          OF INPUT DATA SET.'
M123   DC    CL8'IEH323I'
       DC    CL30'I/O ERROR ENCOUNTERED IN MEMBE'
         DC    CL30'R          OF OUTPUT DATA SET.'
M124     DC    CL30'IEH326I I/O ERROR ENCOUNTERED '
         DC    CL19'IN OUTPUT DATA SET '
M125     DC    CL24'  MEMBER NAMED          '
         DC    CL32'IS AN ALIAS AND HAS NOT BEEN STO'
         DC    CL32'WED, TRUE MEMBER WAS NOT STOWED.'
M126     DC    CL36'IEH333I PERM I/O ERROR WHILE READING'          UL0H
         DC    CL36' USER INPUT TRAILER LABELS. NO MORE '          UL0H
         DC    CL25'LABELS WILL BE PROCESSED.'                     UL0H
M127     DC    CL32'IEH339 I/O ERROR ENCOUNTERED IN'             A26560
         DC    CL16' INPUT DATA SET.'                            A26560
M128     DC    CL41'IEH327I A TTRN IN THE USER DATA FIELD OF '   A31964
         DC    CL35'THE DIRECTORY HAS NOT BEEN UPDATED '         A31964
M129     DC    CL38'IEH328I  A TTR IN THE NOTELIST RECORD '      A31964
         DC    CL21'HAS NOT BEEN UPDATED '                       A31964
M130     DC    X'00'                                             A31964
M131     DC    X'40'
M132     DC    X'00'
         END
