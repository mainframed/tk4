*TITLE 'IEHMVSSP'                                                     *
*FUNCTION/OPERATION: THIS ROUTINE HANDLES THE WRAP UP PROCEDURE FOR   *
*COPY REQUESTS . THIS INCLUDES UNCATALOGING                           *
*THE DATA SET FROM THE CATALOG IN WHICH IT WAS CATALOGED PRIOR TO THE *
*COPY (IF ANY) AND CATALOGING THE DATA SET  IF THE                    *
*'CATLG' OPTION WAS CHOSEN ON THE COPY CONTROL CARD.                  *
* THE VERIFICATION ROUTINE, IEHMVSSS, CHECKS THAT A COPY PDS OR COPY  *
* DSNAME WITH CATLG HAS ALSO SPECIFIED FROM AND/OR RENAME SO THAT THE *
* CATALOGING CAN TAKE PLACE WITHOUT 'DUPLICATE NAME' ERROR.           *
*ENTRY POINTS: IEHMVESP                                               *
*INPUT: NONE                                                          *
*OUTPUT: NONE                                                         *
*EXTERNAL ROUTINES: IEHMVSSU                                          *
*EXITS - NORMAL IEHMVSSK, IEHMVSSZ, IEHMVSST,IEHMVESH                 *
*        ERRORS: IEHMVSSK                                             *
*TABLES/WORK AREAS: IEHMVV00                                          *
*ATTRIBUTES: REENTRANT                                                *
*
********************************************************************
**
**                            IEHMVSSP
**
********************************************************************
*
IEHMVSSP CSECT                                                   A19476
*060000,064200                                                   A19476
*   024200,064800-065400                                         S21042
*A1300-1380                                                     YL026VC
*C600,1000,14000,14200,21600,22600,24000,25600,64700,64720      YL026VC
*C647800                                                        YL026VC
*D15000-15200,15600-16400,28800-34200.64760,64784-65600         YL026VC
*A7500-7540,12500-12584,12900,15300,36100-36120,37500            Y02918
*C600,2200                                                       Y02918
*A012500-016599,021900-021920,023500                           @Z40CSJH
*A023900,028620-028900,065900-065920                           @Z40CSJH
*A064760,065280                                                @Z40CSJH
*A028624-028640,065784-065788                                  @Z40CSJH
A0       EQU   0
A1       EQU   1
A2       EQU   2
A3       EQU   3
A4       EQU   4
A5       EQU   5
A6       EQU   6
A7       EQU   7
A8       EQU   8
A9       EQU   9
A10      EQU   10
A11      EQU   11
A12      EQU   12
A13      EQU   13
A14      EQU   14
A15      EQU   15
DSGRP    EQU   X'10'                   DSGROUP OPERATION         Y02918
CATLG    EQU   X'10'                   CATLG OPTION              Y02918
D1       EQU   1                       DISPLACEMENT OF 1         Y02918
IEHMVESP BALR  A9,0
         ENTRY IEHMVESP
         USING *,A9
         USING IEHMVV,A12               ESTABLISH ADDR TO COMMUNICATION
         L     A10,MSGAD                ESTABLISH ADDR TO MESSAGES
         USING IEHMSGSP,A10
         LA    A8,IEHMVV00+1       ******
         LA    A15,4                    *
         BAL   A14,MSGCLEAR             *
         BAL   A14,MSGDS                *
         LA    A15,24                   *    WRITE MESSAGE -
         BAL   A14,MSG                  *
         BAL   A2,LINEPR                *       'DS XX COPIED TO VOL X'
         SR    A15,A15                  *
         BAL   A14,MSGVOL               *
         BAL   A2,LINEPR               *
         TM    IEHMVV20+3,X'04'        *
         BZ    NORE                    *
         LA    A8,IEHMVV00+1           *
         LA    A15,28                  *    AND IS NOW NAMED YY
         BAL   A14,MSGCLEAR            *
         SR    A15,A15                 *
         BAL   A14,MSGDS               *
         BAL   A2,LINEPR               *
NORE     EQU   *                  ******
*********************************************************************
*        THE FOLLOWING SECTION SUPPORTS THE                    @Z40CSJH
*        EXTENDED MVS CVOL FUNCTION                            @Z40CSJH
*********************************************************************
         TM    IEHMVV20,X'10'           DSGRP SPECIFIED        @Z40CSJH
         BZ    NOTDSGRP                 BR IF NOT              @Z40CSJH
         TM    IEHMVV20+1,X'10'         CATLG SPECIFIED        @Z40CSJH
         BO    CVLCATST                 YES-UNCATLG FIRST      @Z40CSJH
         B     SKPFR                    SKIP FROM TEST         @Z40CSJH
NOTDSGRP EQU   *                        NOT DSGRP OP           @Z40CSJH
         TM    IEHMVV20,X'01'           WAS 'FROM' VOL SPEC'D  @Z40CSJH
         BO    NOUNCAT                  IF SO, SKIP FROM TEST  @Z40CSRC
         TM    IEHMVV20+1,X'10'         WAS 'CATLG' SPECIFIED  @Z40CSRC
         BZ    SKPFR                    NO, SKIP 'RENAME' TEST @Z40CSRC
         TM    IEHMVV20+3,X'04'         WAS 'RENAME' SPECIFIED @Z40CSRC
         BZ    CVLCATST                 NO, MAY NEED TO UNCAT  @Z40CSRC
SKPFR    EQU   *                        SKIP FRM TST           @Z40CSJH
         TM    IEHMVV20+1,X'20'         WAS 'UNCATALOG' SPEC'D @Z40CSJH
         BZ    NOUNCAT                    IF NOT ---           @Z40CSJH
         TM    IEHMVV20+1,X'40'         CVOL SPECIFIED         @Z40CSJH
         BO    UNCATCVO                 UNCTLG CVOL            @Z40CSJH
         L     A1,CATCODE1              GET UNCATLG BITS       @Z40CSJH
         B     UNCAT                    GO UNCATLG             @Z40CSJH
CVLCATST TM    IEHMVV20+1,X'40'         WAS 'CVOL' SPECIFIED   @Z40CSJH
         BO    SKPFR                    BR IF YES              @Z40CSJH
UNCVSAM  L     A1,CATCODE1              GET UNCTLG BITS        @Z40CSJH
         SR    A3,A3                    CLEAR CVOL INDICATOR   @Z40CSJH
         B     UNCAT                    GO UNCATLG             @Z40CSJH
*
*********************************************************************
**
**       THIS SECTION TAKES CARE OF UNCATALOGING A DATA SET ON A CVOL
**       OR SYSRES IF SPECIFIED ON A COPY DATA SET OR VOL REQUEST
**                                                             @Z40CSJH
*********************************************************************
*
UNCATCVO L     A1,CATCODE2              LOAD CATALOG CONTRBITS @Z40CSJH
         L     A3,IEHMVV24              LOAD ADDR OF CVOL LIST @Z40CSJH
         LA    A3,4(A3)                 BUMP ADDR TO CVOL ID   @Z40CSJH
* GET CVOL MOUNTED                                             @Z40CSJH
UNCAT    L     A2,IEHMVV21              LOAD ADDR OF 'FROM' DS NAME
         SR    A4,A4                    CLEAR A4
         STM   A1,A4,IEHMVV00           SET UP PARAMETER LIST
         CATALOG IEHMVV00               UNCATALOG ON FROM VOL
         B     *+4(A15)                CHECK ERROR RETURN
         B     UNCATOK   = 0            OK RETURN
         B     UNCATBAD  = 4            NO CATALOG FOUND
         B     UNCATBAD  = 8            INCONSISTANT STRUCTURE
         B     UNCATBAD  =12            NOT USED
         B     UNCATBAD  =16            NOT USED
         B     UNCATBAD  =20            NO SPACE
         B     UNCATBAD  =24            IMPROPER NAME
         B     UNCATBAD  =28            PERM I/O ERROR
UNCATOK  NOP   0(0)
         LA    A8,IEHMVV00+1       ******
         LA    A15,8                    *    WRITE MESSAGE -
         BAL   A14,MSGCLEAR             *       'DS JUST MOVED-UNCTLG
         BAL   A2,LINEPR           ******
         B     NOUNCAT
UNCATBAD NOP   0(0)
         LA    A8,IEHMVV00+1       ******
         LA    A15,12                   *    WRITE MESSAGE -
         BAL   A14,MSGCLEAR             *       'DS JUST MOVED-NOT UNCT
         BAL   A2,LINEPR           ******
         B     NOUNCAT
NOUNCAT  TM    IEHMVV20+1,X'10'         WAS CATLG SPECIFIED
         BZ    RETURN                     IF NOT -- -
         TM    IEHMVV20+1,X'40'         CVOL SPECIFIED         @Z40CSJH
         BZ    CATVSAM                  NO-GO VSAM CTLG        @Z40CSJH
*
*********************************************************************
**
**       THIS SECTION HANDLES CATALOGING THE DATA SET
**
*********************************************************************
*
CATALOG  L     A1,CATCODE3              LOAD CATALOG CONTROL BITS
         O     A1,CVOLBIT               SET CVOL BIT           @Z40CSJH
         L     A2,IEHMVV21+4           LOAD ADDR OF TO DSNAME
         L     A4,IEHMVV10             ADDR OF TO VOL LIST MADE BY SN
         LA    A3,6(A4)                LOAD ADDR OF CVOL       @Z40CSJH
         LR    A6,A5                   SAVE REGISTER 5           S21042
         LA    A5,IEHMVV82+4           LOAD ADDRESS OF TTR       S21042
         STM   A1,A5,IEHMVV00     STORE PARAMETERS IN PARALIST   S21042
         LR    A5,A6                   RESET REGISTER 5          S21042
         CATALOG IEHMVV00               CATALOG THE DATA SET
         B     *+4(A15)                 CHECK ERROR RETURN
         B     GOODCAT   = 0            CATALOG OK
         B     BADCAT    = 4            NO CATALOG
         B     BADCAT    = 8            BAD STRUCTURE
         B     BADCAT    =12            NOT USED
         B     BADCAT    =16            MISSING INDEX           YL026VC
         B     BADCAT    =20            NO SPACE
         B     BADCAT    =24            BAD GDG NAME
         B     BADCAT    =28            PERM I/O ERROR
GOODCAT  NOP   0(0)
         LA    A8,IEHMVV00+1       ******
         LA    A15,16                   *    WRITE MESSAGE -
         BAL   A14,MSGCLEAR             *       'DS JUST MOVED-CTLG
         BAL   A2,LINEPR           ******
         B     RETURN
BADCAT   NOP   0(0)
         LA    A8,IEHMVV00+1       ******
         LA    A15,20
         BAL   A14,MSGCLEAR             *       'DS JUST MOVED-NOT CTLG
         BAL   A2,LINEPR           ******
         B     RETURN
CATVSAM  L     A1,CATCODE3              GET CTLG CONTRL BITS   @Z40CSJH
CATVSAM2 L     A2,IEHMVV21+4            ADDR OF TO DSNAME      @Z40CSJH
         L     A4,IEHMVV10              TO VOL LIST            @Z40CSJH
         SR    A3,A3                    INDICATE NO CVOL       @Z40CSJH
         LR    A6,A5                    SAVE REG 5             @Z40CSJH
         LA    A5,IEHMVV82+4            GET TTR ADDR           @Z40CSJH
         STM   A1,A5,IEHMVV00           PARMS TO PARMLIST      @Z40CSJH
         LR    A5,A6                    RESET REG 5            @Z40CSJH
         CATALOG IEHMVV00               CATLG THE DATA SET     @Z40CSJH
         B     *+4(A15)                 CHECK ERROR RETURN     @Z40CSJH
         B     GOODCAT                  =0 CATLG OK            @Z40CSJH
         B     BADCAT                   =4 NO CATLG            @Z40CSJH
         B     BADCAT                   =8 BAD STRUCTURE       @Z40CSJH
         B     BADCAT                   =12 NOT USED           @Z40CSJH
         B     BADCAT                   =16 MISING INDEX       @Z40CSJH
         B     BADCAT                   =20 NO SPACE           @Z40CSJH
         B     BADCAT                   =24 BAD GDG NAME       @Z40CSJH
         B     BADCAT                   =28 PERM I/0 ERROR     @Z40CSJH
*********************************************************************
*        LINES 029100-034526 WERE REACTIVATED IN SUPPORT OF    @Z40CSJH
*        THE EXTENDED MVS CVOL FUNCTION                        @Z40CSJH
*********************************************************************
BUILDX   LTR   A5,A5                    CHECK TO SEE IF FIRST TIME IN
         BZ    BADCAT                     IF NOT ---
         L     A1,CATCODE4              LOAD BUILDX CONTROL BITS
         ST    A1,IEHMVV00              STORE IN PARAMETER LIST
         SR    A5,A5                    CLEAR A5 FOR FIRST TIME IN CHK
         L     A3,IEHMVV21+4           ADDR OF 'TO' DSNAME
         LA    A2,44(A3)               ADDR OF END OF DSNAME
FINDPER  CLI   0(A3),C'.'               CHECK FOR PERIOD
         BE    DOBUILD                    IF SO ---
         CR    A3,A2                    CHECK FOR END OF NAME
         BE    DOCAT                      IF SO ---
BUMP     LA    A3,1(A3)                 BUMP POINTER UP ONE
         B     FINDPER
DOCAT    L     A1,CATCODE3              LOAD CATALOG CONTROL BITS
         ST    A1,IEHMVV00              STORE IN PARAMETER LIST
         B     CATALOG
DOBUILD  MVI   0(A3),C' '               REPLACE . WITH BLANK
         INDEX IEHMVV00                 BUILD INDEX
         MVI   0(A3),C'.'               MOVE . BACK IN
         B     *+4(A15)                 CHECK ERROR RETURN
         B     BUMP      = 0            INDX BUILT
         B     BADCAT    = 4            NO CATALOG
         B     BUMP  =8                INDEX THERE
         B     BADCAT    =12            NOT USED
         B     BADCAT    =16            MISSING INDEX
         B     BADCAT    =20            NO SPACE
         B     BADCAT    =24            NOT USED
         B     BADCAT    =28            PERM I/O ERROR
*
*********************************************************************
**
**       THIS SECTION PASSES CONTROL TO THE NEXT LOAD OF MOVE/COPY
**
*********************************************************************
*
RETURN   IEHPOST ,TC
         L     14,12(0,13)              RESTORE FINAL WRAP RETURN
         TM    IEHMVV20,DSGRP          TEST FOR GROUP OPERATION  Y02918
         BO    ENDGRP                    IF ON ---               Y02918
         TM    IEHMVV20,X'02'           TEST FOR VOL OPERATION
         BO    ENDVOL                     IF ON ---
         TM    IEHMVV20+2,X'20'        TEST FOR END BIT
         BO    END                        IF ON ---
         XCTL  (2,12),EP=IEHMVEST
END      XCTL  (2,12),EP=IEHMVESK
ENDVOL   XCTL  (2,12),EP=IEHMVESZ
ENDGRP   XCTL  (2,12),EP=IEHMVESH                                Y02918
*
*********************************************************************
**
**                            MESSAGE MOVER
**
**       THIS SUBROUTINE IS LINKED TO IN ORDER TO MOVE MESSAGES
**       FROM THE MESSAGE CSECT TO THE PRINT AREA (IEHMVV00)
**       THE LINKAGE IS AS FOLLOWS:          A8= LOCATION FOR MSG
**                                 A14= RETURN ADDR
**                       A15= DISPLACEMENT OF ADCON OF CORRECT MSG
**       WHEN THIS ROUTINE IS DONE A8  WILL POINT ONE SPACE PAST
**       THE MOVED MESSAGE --- ALL REGISTERS ARE TRANSPARENT
**       EXCEPT REGISTERS A1 AND A15 -- THE PRINT AREA IS CLEARED
**       IF THE INSTRUCTION 'MSGCLEAR' IS LINKED TO
**
*********************************************************************
*
MSGCLEAR MVI   IEHMVV00,X'40'           CLEAR THE PRINT AREA
         MVC   IEHMVV00+1(120),IEHMVV00
MSG      L     A1,MSGAD                 GET ADDR OF MSG CSECT
         AR    A1,A15                   ADD DISP OF CORRECT ADCON
         L     A1,0(A1)                 LOAD ADDR OF MSG-1
         IC    A15,0(A1)               LOAD LENGTH OF MSG
         EX    A15,MSGMOVE              EXECUTE MOVE
         AR    A8,A15                   CALC ADDR OF END OF MSG
         LA    A8,2(A8)                BUMP REG TO END OF MSG +1
         BR    A14                      RETURN
MSGMOVE  MVC   0(1,A8),1(A1)           MOVE MSG
*
*********************************************************************
**
**                            DATA SET NAME MOVER
**
**       THIS SUBROUTINE IS LINKED TO IN ORDER TO MOVE DATA SET
**       NAMES INTO A MESSAGE THE LINKAGE IS AS FOLLOWS:
**                                           A8= LOCATION FOR NAME
**                                 A14= RETURN ADDR
**                       A15= CODE TO DEFINE WHICH DS NAME
**                             IF A15=0 ---MOVE 'TO' DS NAME
**                             IF A15= NOT 0 --- MOVE 'FROM' DS NAME
**       WHEN THIS ROUTINE IS DONE A8 WILL POINT ONE SPACE PAST
**       THE MOVED NAME
**
*********************************************************************
*
MSGDS    LTR   A15,A15                  TEST FOR A15=0
         BZ    TODS                       IF SO BRANCH
         L     A15,IEHMVV21             GET ADDR OF 'FROM' DS NAME
         B     DSMOVE
TODS     L     A15,IEHMVV21+4           GET ADDR OF 'TO' DS NAME
DSMOVE   MVC   0(44,A8),0(A15)          MOVE DS NAME TO PRINT AREA
CHKEND   CLI   0(A8),X'40'              CHECK FOR END OF NAME
         BE    NAMEEND                    IF REACHED BRANCH ---
         LA    A8,1(A8)                 BUMP POINTER TO PRINT AREA
         B     CHKEND
NAMEEND  LA    A8,1(A8)                 ALLOW FOR SPACE AFTER NAME
         BR    A14                      RETURN
*
********************************************************************
**
**                            MESSAGE WRITE CALLER
**
**       THIS ROUTINE WILL BE LINKED TO WHENEVER A LINE OF OUTPUT
**       IS TO BE WRITTEN ON 'SYSPRINT' IT WILL HAVE NO PARAMETERS
**       AND ASSUME THAT THE LINE TO BE WRITTEN IS LOCATED AT IEHMVV00
**       AFTER THE WRITE IS COMPLETE, CONTROL WILL BE PASSED BACK VIA
**       A2  UNLESS A PERMINANT I/O ERROR WAS ENCOUNTERED
**
********************************************************************
*
LINEPR   ST    A3,IEHMVV00+128         SAVE REG 3
         LA    A3,IEHMVV00             LOAD ADDR OF PRINT AREA
         LINK EP=IEHMVESU              GO TO MSG WTR
         L     A3,IEHMVV00+128
         B     *+4(A15)                 CHECK RETURN CODE
         B     0(A2)                         =0  OK WRITE
         IEHPOST ,TC
         L     14,12(0,13)              RESTORE REG 14
         XCTL  (2,12),EP=IEHMVESK
*
*********************************************************************
**
**                            VOLUME LIST MOVER
**
**       THIS ROUTINE IS LINKED TO  IN ORDER TO MOVE A VOLUME LIST
**       TO THE PRINT AREA PLUS 20 BYTES(IEHMVV00+20)
**       THE LINKAGE IS AS FOLLOWS
**                                 A14= RETURN ADDRESS
**       THE FORMAT OF THE LIST IS AS FOLLOWS
**         FOR DIRECT ACCESS --- 123 7986 A1763 IBM403
**         FOR TAPE          --- 24,0001 7987,0007
**         FOR UNIT RECORD   --- UNIT RECORD EQUIP -- UNIT = HR
**
**                            A15= CODE TO DEFINE WHICH VOL LIST
**                                 IF A15=0 --- 'TO' VOL LIST
**                                 IF A15= NOT ZERO --- 'FROM' VOL LIST
*********************************************************************
*
MSGVOL   MVI   IEHMVV00,X'40'           CLEAR PRINT AREA
         ST    A14,SAVE14               SAVE RETURN ADDR
         SR    A0,A0                    CLEAR A0
         MVC   IEHMVV00+1(120),IEHMVV00
         LTR   A15,A15                  CHECK WHICH LIST TO MOVE
         BZ    TOVOL                      IF 'TO' LIST ---
         L     A1,IEHMVV22              LOAD ADDR OF FROM VOL LIST
         IC    A0,IEHMVV22              LOAD NO OF VOLUMES IN FROM LIST
         B     MOVEVOL
TOVOL    L     A1,IEHMVV10             LOAD ADDR OF TO VOL LIST
         LH    A0,0(A1)                LOAD COUNT OF VOLUMES
         LA    A1,2(A1)                BUMP PTR TO START OF VOL IDS
MOVEVOL  TM    2(A1),X'08'             TEST FOR VOL = UNIT REC
         BO    UNITVOL                    IF SO ---
         CLI   IEHMVV74+12,X'FF'  WAS OUTPUT ON NL TAPE          A19476
         BE    UNITVOL                    IF SO ---
         LA    A15,IEHMVV00+20          LOAD ADDR OF PRINT AREA+20
CHKLIST  MVC   0(6,A15),4(A1)           MOVE VOL ID
         LA    A15,6(A15)               BUMP REG PAST VOL ID
         LH    A14,10(A1)               LOAD VOL SEQ
         LTR   A14,A14                  CHECK IF TAPE
         BZ    SETBLNK                    IF NOT TAPE ---
         MVI   0(A15),C','              MOVE , TO VOL LIST
         CVD   A14,IEHMVV00+128         CONVERT TO DEC
         UNPK  1(4,A15),IEHMVV00+128(8) UNPACK
         OI    4(A15),X'F0'             RESET SIGN
         LA    A15,5(A15)               BUMP REG PAST SEQ NO
SETBLNK  LA    A15,1(A15)               LEAVE SPACE IN VOL LIST
         LA    A1,12(A1)
         BCT   A0,CHKLIST               LOOP IF MORE VOL ID.S
         L     A14,SAVE14               RESTORE REG A14
         BR    A14                      RETURN
SAVE14   DS    F
UNITVOL  L     A15,MSGAD                LOAD ADDR OF MSG CSECT
         L     A15,0(A15)               LOAD ADDR OF FIRST MSG
         MVC   IEHMVV00+20(26),1(A15)      MOVE MSG TO PRINT
         MVI   IEHMVV74+12,X'00'  TURN NL TAPE SWITCH OFF        A19476
         BR    A14                      RETURN
         DS    0F
***** IN THE 2 FOLLOWING CAMLST MACRO INSTRUCTIONS ONLY THE FIRSTY02063
***** FULLWORD (OPTIONBITS) IS ACTIVE                            S21042
CATCODE1 CAMLST UNCAT,MSGAD            UNCATALOG ON SYSRES       S21042
CATCODE2 CAMLST UNCAT,MSGAD,MSGAD       UNCATALOG ON CVOL      @Z40CSJH
CATCODE3 CAMLST CAT,MSGAD,,MSGAD,DSCBTTR=MSGAD CATALOG          YL026VC
CATCODE4 CAMLST BLDX,MSGAD,MSGAD        BUILD INDEX ON CVOL    @Z40CSJH
FF       DC    XL4'FFFFFFFF'
MSGAD    DC    A(IEHMSGSP)
CVOLBIT  DC    XL4'80000000'            CVOL BIT FOR SVC26     @Z40CSJH
PATCH    DS    10F                      PATCH AREA             @Z40CSJH
         IEHMVV
IEHMSGSP CSECT
*
*********************************************************************
**
**                            MSG CSECT FOR IEHMVSSP
**
*********************************************************************
*
         DC    A(MSGA)
         DC    A(MSGB)
         DC    A(MSGC)
         DC    A(MSGD)
         DC    A(MSGE)
         DC    A(MSGF)
         DC    A(MSGG)
         DC    A(MSGH)
MSGA     DC    AL1(MSGB-MSGA-2)
         DC    CL26'UNIT REC OR UNLABLED TAPE'
MSGB     DC    AL1(MSGC-MSGB-2)
         DC    CL16'        DATA SET'
MSGC     DC    AL1(MSGD-MSGC-2)
         DC    CL31'        THE DATA SET JUST COPIE'
         DC    CL30'D HAS BEEN SUCCESSFULLY UNCATA'
         DC    CL5'LOGED'
MSGD     DC    AL1(MSGE-MSGD-2)
         DC    CL30'IEH363I THE DATA SET JUST COPI'
         DC    CL30'ED WAS NOT SUCCESSFULLY UNCATA'
         DC    CL5'LOGED'
MSGE     DC    AL1(MSGF-MSGE-2)
         DC    CL30'        THE DATA SET JUST COPI'
         DC    CL30'ED HAS BEEN SUCCESSFULLY CATAL'
         DC    CL4'OGED'
MSGF     DC    AL1(MSGG-MSGF-2)
         DC    CL30'IEH364I THE DATA SET JUST COPI'
         DC    CL30'ED WAS NOT SUCCESSFULLY CATALO'
         DC    CL3'GED'
MSGG     DC    AL1(MSGH-MSGG-2)
         DC    CL28'HAS BEEN COPIED TO VOLUME(S)'
MSGH     DC    AL1(MSGI-MSGH-2)
         DC    CL30'                   AND IS NOW '
         DC    CL5'NAMED'
MSGI     EQU   *
         END
