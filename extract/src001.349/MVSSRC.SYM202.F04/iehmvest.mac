*TITLE ' IEHMVSST                                                     *
*ENTRY POINTS: IEHMVEST                                               *
*INPUT: POINTER TO IEHMOVE1 WORKAREA IN REG 12                        *
*EXTERNAL ROUTINES:  IEHMVSSS (CARD                                   *
*PARAMETER ANALIZER) IEHMVSSJ (CARD SCANNER RTN) IEHMVSSA (MESSAGE    *
*MODULE)                                                              *
*EXITS - NORMAL IEHMVSSH FOR DSGROUP OPERATION - IEHMVSSZ FOR ALL     *
*OTHER OPERATIONS                                                     *
*TABLES/WORK AREAS: WORK AREA POINTED TO BY REG 12 IS DESCRIBED BY    *
*DSECT IEHMVV                                                         *
*
*
*
*
*        PURPOSE                         THIS MODULE IS COMPOSED OF
*                                       THE ROUTINES TO PERFORM FOUR
*                                       SEPERATE FUNCTIONS   ALL  OF
*                                       WHICH ARE CONNECTED WITH
*                                       ANALIZING AN IEHMOVE REQUEST
*
*                                        THE FOUR FUNCTIONS ARE
*
*                                         1  INITIALIZATION OF THE
*                                            WORKING STORAGE PRIOR TO
*                                            SETTING IT UP FOR A
*                                            REQUEST
*
*                                         2  WRITE APPRORRIATE DATA
*                                             INCLUDES
*                                             EXCLUDES
*                                             REPLACE
*                                             SELECT
*                                            ON WORK FILES UT1 AND UT2
*
*                                              3  FIND  FROM  VOLUME
*                                                 INFORMATION IN THE
*                                                 CATALOG WHEN
*                                                 NECESSARY
*
*                                              4  ANALIZE THE
*                                                 INFORMATION PROVIDED
*                                                 IN THE REQUEST PRIOR
*                                                 TO GOING TO MODULES
*                                                 THAT ACT UPON THE
*                                                 REQUEST
*
*BYTES USED AS
*SWITCHES                A ONE EQUALS ON
*
*LABEL OF SWITCH    LOOKFOR    INDICATES WHAT PARAM CARD SCANNER
*                              IS LOOKING FOR.
*
*               BIT POS 8      KEYWORD DDNAME
*                       4      ANY KEYWORD
*                       2      A TYPE CODE
*                       1      A VOL ID
*                       8      SEQ NUMBER
*                       4      A DATA SET NAME
*                       2      A MEMBER NAME
*                       1      EXPAND DATA
*                 ALL BITS OF  COMMAND
*
*
*                   LOOKFOR+1
*
*
*               BIT POS 8     I,E,R FILL  FILLING INCLUDE,EXCLUDE
*                             REPLACE BLOCK IN PERM WORK AREA
*                       4     ON WHEN PROCESSING INC EXC OR REP OR SEL
*                             CARDS
*                       2     COMPLEX  MORE THAN ONE TYPE-VOLID-SEQNO
*                             IN TO OR FROM LIST.
*                       1     INCLUDE BLOCK WRITE OUT SW  ON WHEN BLOCK
*                             HAS BEEN WRITTEN ON WORK FILE  UT1
*                       8     EXCLUDE BLOCK WRITE OUT  ON WHEN BLOCK
*                             HAS BEEN WRITTEN ON UT2
*                       4     INCLUDE CARD ENCOUNTERED
*                       2     EXCLUDE ENCOUNTERED
*                       1     SELECT  CARD ENCOUNTERED
*
*
*                   IEHMVV74 + 14  CHECKS THE CONTENTS
*                   OF INCLUDE BLOCK
*
*               BIT POS 8     DSNAME
*                       4     FROM  (TYPE-VOLID-SEQNO)
*                       2     CVOL  (TYPE-VOLID-SEQNO)
*                       1     MEMBER NAME
*                       8     UNUSED
*                       4     UNUSED
*                       2     UNUSED
*                       1     UNUSED
*
*
*                        XSWITCHS
*
*               BIT  POS 8     SELECT CARD HAS BEEN OR IS BEING
*                             PROCESSED
*                       4     COMPLEX MEMBER  (MEMBER NAME LIST)
*
*                       2     MEMBER RENAME
*                       1     UNUSED
*                       8     UNUSED
*                       4     UNUSED
*                       2     UNUSED
*                       1     UNUSED
*
*
*                        SWITCHRD       SET BY CARD SCANNER RTN
*
*               BIT  POS 8     SCAN ERROR     SYNTAX ERROR
*
*                       4     BYPASS   IF ON-NEXT ENTRY TO SCAN WILL
*                             RETURN OPERATOR FLD OF NEXT CARD
*                       2     END OF FILL ON SYSIN
*                       1     SCAN RTN FIRST TIME IN
*
*                       8     OPERATOR
*
*                       4     KEYWORD
*
*                       2     PARAMETER
*
*                       1     RIGHT PARENTHESIS
*
*
*NOTE    ABOVE SWITCHES EXCEPT SWITCHRD ARE RESET TO ZEROS BEFORE
*        PROCESSING EACH IEHMOVE REQUEST
*
*        SWITCHRD IS RESET TO ZEROS PRIOR TO GOING TO CARD SCANNER
*        FOR FIRST TIME ONLY
*
*
*
*
*
*
IEHMVSST CSECT
*A128200-128360                                                @ZA07411
*C028800                                                       @ZA07411
*D128200                                                       @ZA07411
         EJECT
*D109200-109400,110000-110200,110600-110800,111400,111600        A50958
*D11440                                                          A50958
*A109900-110400                                                  A50958
*D130816-132400                                                  A48781
*A131310-132348                                                  A48781
*A131114-131115                                                  A45139
*C131102                                                         A45139
*   ALL CODE FLAGGED S20201 WAS ADDED FOR RPS SUPPORT            S20201
* 130820,131050                                                  A33297
* 016400,067200,093000,099600,103200                             A27307
* 036600                                                         S21042
* 053000-053600,068800,078400,079600,082200                      A27307
*                                                                  I276
* 113600                                                         A15815
*A29900,89300,91500,106300-106320,107900-107940,108100          YL026VC
*C800,108400,134600                                             YL026VC
*D34600-35200,90600-91000,91800-104400,105400-105800            YL026VC
*D107200-107400                                                 YL026VC
*C1400,130810                                                    Y02918
*A33500-33520,130740                                             Y02918
*A034900-035200,093700-094084,097600-098900,090400-090900      @Z40CSJH
*A103600,105336,107500-107520,130760-130800,107700-107720      @Z40CSJH
*A130910-131110,134520,134700,105502,031900,104593-104596      @Z40CSJH
*D108100                                                       @Z40CSJH
*C108400,105502                                                @Z40CSJH
         ENTRY IEHMVEST
         USING IEHMVV,12
         USING IEHMVEST,BASE
IEHMVEST SAVE  (14,12),T,IEHMVEST-OZ07411                      @ZA07411
         LR    BASE,15
        IEHPRE (14,1),TFC
RO       EQU   0
SCANAD   EQU   1
LENGTH   EQU   2
BADLOC   EQU   20                      BAD LOCATE MESSAGE CODE  YL026VC
DBR1     EQU   3
DBR3     EQU   4
DBCOMPR  EQU   5
R6       EQU   6
R7       EQU   7
DBNXRPTR EQU   7                                                 A28295
BASE     EQU   8
R9       EQU   9
R10      EQU   10
NXRPTR   EQU   11
R12      EQU   12
R15      EQU   15                                              @Z40CSJH
SAVEREG  EQU   13
RETURN   EQU   14
GOTO     EQU   15
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
L8       EQU   8                       LENGTH OF 8               Y02918
D12      EQU   12                      DISPLACEMENT OF 12        Y02918
*                                                                     *
*              ANALIZE ENTRY CONTROL AND GIVE CONTROL TO              *
*              THE PROPER ROUTINE                                     *
*                                                                     *
*                                                                     *
         TM    IEHMVV20+4,X'10'         RETURN FROM VXSF       @Z40CSJH
         BZ    *+12                     BRANCH IF NOT          @Z40CSJH
         NI    IEHMVV20+4,X'EF'         CLEAR VXSF BIT         @Z40CSJH
         B     MNT3                     BR TO CHECK ON MOUNT   @Z40CSJH
         SR    R1,R1
         IC    R1,ESTENTRY             INSERT ENTRY SW BYTE
         MVI   ESTENTRY,X'00'
         EX    0,BRANCH(R1)
BRANCH   B     INIT
         B     FINDFROM
         B     PREWRUT1          USER DID SPECIFY 'FROM' VOLUME  S21042
         B     SCAEXIT1
*                                                                     *
*                                                                     *
*              INITIALIZE WORKING STORAGE  IEHMVV  AS NECESSARY       *
*              PRIOR TO SETTING UP AN IEHMOVE REQUEST                 *
*                                                                     *
*              POINT WORK FILES UT1 AND UT2  TO BEGINING OF FILES     *
*                                                                     *
*                                                                     *
INIT     DS    0H
         MVI   IEHMVV51,X'60'
         XC    IEHMVV20+5(35),IEHMVV20+5  COMMAREA CLEAR         S20201
         XC    IEHMVV27+5(27),IEHMVV27+5  COMMAREA CLEAR
         NC    IEHMVV20(6),MASK1 TURN OFF ALL BUT PRINT CNTRL    A37919
*                                      AND RPS INDICATORS        S20201
         XC    IEHMVV61(8),IEHMVV61     CLEAR PDS RTN WORDS IN COMM
*                                       AREA
         L     NXRPTR,FAADD             IS FIRST AVILIBLE ADDR POINTER
         LTR   NXRPTR,NXRPTR            ZERO
         BNE   INIT1                    BRANCH IF ND
         L     DBR1,NXTPTR              SET UP FIRST AVAILIBLE ADDR
         LA    DBR1,1(DBR1)             HALF WORD ALIGN THE BEGINING
         SRL   DBR1,1                   ADDR OF THE WORK AREA USED BY
         SLL   DBR1,1                   THE CONTROL CARD PARAMETER
         ST    DBR1,FAADD               RTN
         ST    DBR1,NXTPTR
         B     INIT2
INIT1    ST    NXRPTR,NXTPTR
INIT2    L     NXRPTR,NXTPTR
         XC    0(256,NXRPTR),0(NXRPTR)  CLEAR 256 BYTES OF PERM WORK
         LA    1,256                   TTRZ OF 0010
         ST    1,SARG
         LA    1,SARG                  ADDR OF 0010
         LR    0,1
         L     1,IEHMVV40              LOAD UT1 DCB PTR
         POINT (1),(0)
         LA    0,SARG
         L     1,IEHMVV41              LOAD UT2 DCB PTR
         POINT (1),(0)
         CLI   ESSENTRY,X'10'          ESS ENTRY TO MOVE RTN
         BE    ESSEXIT
         CLI   ESSENTRY,X'14'          ESS ENTRY FOR COPY RTN
         BE    ESSEXIT
         B     ESJEXIT
*                                       AREA FOR CC PARAMETER RTN
TRANS2   MVI   ESSENTRY,X'0C'
         B     ESSEXIT
TRANS3   MVI   ESSENTRY,X'08'
         B     ESSEXIT
*                                                                     *
*                                                                     *
*              THIS ROUTINE IS USED TO WRITE WORK FILES UT1 AND UT2   *
*                                                                     *
*              IT WILL GET AN INCLUDE  EXCLUDE  REPLACE  OR A SELECT  *
*              BLOCK OF INFORMATION THAT HAS PREVIOUSLY BEEN FORMED   *
*              IN WORKING STORAGE AND PLACE THE INFORMATION IN THE    *
*              PROPER RECORD FORMAT AND WRITE IT ON THE PROPER WORK   *
*              FILE                                                   *
*                                                                     *
*                                                                     *
         EJECT
*              THE RECORD FORMATS ARE AS FOLLOWS
*
*                1  RECORD PRODUCED BY AN  INCLUDE  REPLACE AND A
*                   SELECT ASSOCIATED WITH A PDS REQUEST    ON UT1
*
*                   BYTES IN KEY
*
*                     4       DEVICE TYPE CODE
*                     6       VOLUME ID
*                     2       DEQUENCE NUMBER
*
*                   BYTES IN DATA
*
*                     5       CCHHR OF THIS RECORD
*                     1       BLOCK IDENTIFIER  I  E  R  ETC  EBCDIC
*                     44      DATA SET NAME
*                     8       MEMBER NAME
*                     4       DEVICE TYPE CODE
*                     6       VOLUME ID
*                     2       DEQUENCE NUMBER
*                     5       SPECIFIC UNIT IF SPECIFIED           DT0I
*                     8       MEMBER RENAME     V                  DT0I
*
*                  TOTAL  95  BYTES KEY AND DATA                   DT0I
         EJECT
*                2  RECORD PRODUCED BY AN INCLUDE ASSOCIATED WITH     *
*                   A DSGROUP REQUEST   ON UT1                        *
*                                                                     *
*                   BYTES  IN KEY                                     *
*                                                                     *
*                     12      UNUSED                                  *
*                                                                     *
*                   BYTES  IN DATA                                    *
*                                                                     *
*                     5       UNUSED                                  *
*                     2       BINARY  LENGTH OF REMAINDER OF RECORD   *
*                     1       CODE BINARY ZERO FOR DSGROUP INCLUDE    *
*                     44      DATA SET NAME                           *
*                     2       BINARY COUNT OF 12 BYTE VOL ENTRIES     *
*                             TO FOLLOW  ALWAYS 1 ON DSGROUP INCLUDE  *
*                     4       DEVICE TYPE CODE                        *
*                     6       VOLUME ID                               *
*                     2       SEQUENCE NUMBER                         *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
         EJECT
*                                                                     *
*                                                                     *
*                   RECORD PRODUCED BY AN EXCLUDE OR REPLACE          *
*                   ASSOCIATED WITH A PDS REQUEST       ON  UT2       *
*                                                                     *
*                   BYTES  IN KEY                                     *
*                                                                     *
*                     8       MEMBER NAME                             *
*                                                                     *
*                   BYTES  IN DATA                                    *
*                                                                     *
*                     1       BLOCK IDENTIFIER                        *
*                     9       UNUSED                                  *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
PREWRUT1 XC    IEHMVV82(3),IEHMVV82 FROM VOL SPEC, CLEAR DSCBTTR S21042
WRITEUT1 DS    0H
         L     DBR1,IEHMVV40            LOAD ADDR OF UT1 DCB
         TM    LOOKFOR+1,X'10'          FIRST TIME IN
         BZ    OPENUT1                  BRANCH IF YES
WRITE1   L     R6,IEHMVV26              I,E,R BLOCK PTR
         LR    R10,R6
         SRL   R6,24                    DROP ADDR AND RETAIN COUNT
         SLL   R10,8
         SRL   R10,8                    DROP COUNT AND RETAIN ADDR
         LR    NXRPTR,R10
         ST    NXRPTR,NXTPTR            RECLAIM PERM WORK AREA USED
*                                       FOR I,E,R BLOCK
         ST    NXRPTR,IEHMVV26          STORE BLOCK PTR WITHOUT COUNT
WRITE4   CLI   0(R10),C'I'              IS THIS AN INCLUDE BLOCK
         BE    IWRITE                   BRANCH YES
         CLI   0(R10),C'E'                         EXCLUDE BLOCK
         BE    EWRITE                   BRANCH YES
         CLI   0(R10),C'R'                         REPLACE BLOCK
         BE    EWRITE
CWRITE   MVC   WRITAREA+17(78),0(R10)  MOVE BLOCK TO WRITE AREA  A27307
         XC    WRITAREA(12),WRITAREA    ZERO KEY AREA
CWRITE1  DS    0H
         L     DBR1,IEHMVV40            COMPARE KL+DL+20 TO TRACK BAL
         L     R3,IEHMVV40             POINT TO SYSUT1 DCB         7972
         L     R3,12(0,R3)             POINT TO DEVICE TABLE       7972
         SR    R4,R4                   CLEAR REG                   7972
         IC    R4,7(0,R3)              LAST RECORD OVERHEAD        7972
         LA    R4,95(0,R4)             KEY DATA AND OVERHEAD CT    DT0I
         L     R3,IEHMVV40             POINT TO SYSUT1 DCB         7972
         CH    R4,18(0,R3)             WILL RECORD FIT ON TRACK    7972
         BH    CWRITE2                 NO  WILL NOT FIT            7972
         MVC   WRITAREA+12(5),8(DBR1)   MOVE CCHAR FROM DCB TO WRITAREA
         SR    DBR3,DBR3
         IC    DBR3,WRITAREA+16
         LA    DBR3,1(DBR3)             BUMP R OF CCHHR BY ONE
         STC   DBR3,WRITAREA+16
         B     CWRITE3
CWRITE2  DS    0H
         SR    DBR3,DBR3
         STH   DBR3,18(DBR1)
         L     2,IEHMVV40               LOAD UT1 DCB ADDR
         LA    2,5(2)
         LA    1,39(2)                  LOAD ADDR OF DEBAD
         L     1,0(1)                   LOAD DEB ADDR
         L     15,16
         L     15,32(0,15)              ADDR OF MBBCCHHR TO TTR RTN
         STM   14,12,12(13)
         LA    13,88(13)
         LR    5,13
         BALR  14,15
         LR    13,5
         LA    3,88
         SR    13,3
         LM    8,12,52(13)
         SRL   0,8
         AH    0,DBCTONE          ADD ONE TO T IN TTR
         IC    0,DBCTONE               SET R OF TTR TO ONE
         SLL   0,8
         L     1,IEHMVV40               LOAD UT1 DCB ADDR
         LA    1,44(1)                  PLUS 44 TO DEBAD IN DCB
         L     1,0(1)                   LOAD DEB ADDR
         LA    2,IEHMVV00+150           LOAD WORK AREA ADDR 8 BYTES
         L     15,16                    LOAD CVT PTR
         L     15,28(0,15)              ADDR OF TTX TO MBBCCHHR RTN
         LA    13,88(13)
         LR    5,13
         BALR  14,15
         LR    13,5
         LA    3,88
         SR    13,3
         LM    14,12,12(13)
         MVC   WRITAREA+12(5),IEHMVV00+153
CWRITE3  DS    0H
         L     DBR1,IEHMVV40            UT1 DCB ADDR
         L     DBR3,IEHMVV40+4          UT1 DECB ADDR
         LA    LENGTH,83               LENGTH                      DT0I
         LA    NXRPTR,WRITAREA          REC ADDR
         BAL   R7,WRITE3
WRITE7   BCTR  R6,0                     REDUCE COUNT BY ONE
         LTR   R6,R6                    IS COUNT ZERO
         BZ    TRANS2                   LEAVE RTN IF YES
         LA    R10,78(R10)             MOVE PTR TO NXT BLOCK TO BE DT0I
         B     WRITE4                   WRITTEN
IWRITE   TM    IEHMVV20,X'10'           DSGROUP BIT ON
         BZ    IWRITE1
         MVI   WRITAREA+17,X'00'        BLOCK
         MVI   WRITAREA+18,X'3A'       LENGTH                    A27307
         MVI   WRITAREA+19,X'00'        BLOCK CODE ZERO
         MVC   WRITAREA+20(44),1(R10)  MOVE INTO BLOCK DSNAME
         MVI   WRITAREA+64,X'00'        VOL ENTRY COUNT
         MVI   WRITAREA+65,X'01'
         MVC   WRITAREA+66(12),53(R10) MOVE VOL ENTRY INTO BLOCK
         B     CWRITE1
IWRITE1  DS    0H
         MVC   WRITAREA+17(78),0(R10)  MOVE I BLOCK INOT WRITE AREADT0I
         MVC   WRITAREA(12),53(R10)    MOVE VOL ENTRY TO KEY
         B     CWRITE1
EWRITE   MVC   WRITAREA(8),45(R10)      MOVE MEMBER NAME TO WRITE AREA
         MVC   WRITAREA+8(1),0(R10)     MOVE BLOCK CODE TO WRITE AREA
         XC    WRITAREA+9(9),WRITAREA+9 CLEAR 9 BYTES OF DATA REC
         BAL   R7,WRITE5
         CLI   0(R10),C'R'              IS THIS BLOCK A REPLACE BLOCK
         BE    IWRITE                   BRANCH YES
         B     WRITE7
OPENUT1  EQU   *
         L     1,IEHMVV40               ADDR OF UT1 DCB
         MVI   18(1),X'7F'              SET MAX TRACK BALANCE
         MVI   19(1),X'FF'
         B     WRITE1
OPENUT2  EQU   *
         L     DBR1,IEHMVV41
         OI    LOOKFOR+1,X'08'          TURN ON WRITE OUT EXC SW
         B     WRITE6
WRITE5   TM    LOOKFOR+1,X'08'          IS EXC WRITE OUT SW ON
         BZ    OPENUT2
WRITE6   L     DBR3,IEHMVV41+4          UT2 DECB ADDR
         L     DBR1,IEHMVV41            UT2 DCB ADDR
         LA    LENGTH,10                LENGTH
         LA    NXRPTR,WRITAREA
         WRITE (DBR3),SF,(DBR1),(NXRPTR),(LENGTH),MF=E
         CHECK (DBR3)
         BR    R7
WRITE3   WRITE (DBR3),SF,(DBR1),(NXRPTR),(LENGTH),MF=E
         CHECK (DBR3)
         TM    LOOKFOR+1,X'10'          FIRST REC WRITTEN SW
         BO    0(R7)
         NOTE  (DBR1)
         ST    1,NOTEAREA               SAVE TTR IN AREA
         OI    LOOKFOR+1,X'10'         TURN ON FIRST REC WRITTEN SW
         BR    R7
***********************************************************************
*                                                                     *
*                                                                     *
*              THIS ROUTINE IS USED TO FIND  FROM VOLUME INFORMATION  *
*              THAT IS LOCATED IN THE CATALOG WHEN FROM VOLUME        *
*              INFORMATION IS NOT GIVEN WITH THE  REQUEST             *
*        LINES 091600-105265 WERE REACTIVATED                  @Z40CSJH
*        FOR MVS EXTENDED CVOL SUPPORT.                        @Z40CSJH
*                                                                     *
***********************************************************************
FINDFROM DS    0H
         TM    LOOKFOR+1,X'80'          IER SW ON
         BO    CHECK2
         TM    IEHMVV20+1,X'40'         IS CVOL BIT ON
         BO    MOUNTVOL
         TM    IEHMVV20,X'10'         DSGROUP SPECIFIED        @Z40CSJH
         BO    CHKNAME                YES-CHECK FOR NAME       @Z40CSJH
         TM    IEHMVV20,X'20'         DSNAME SPECIFIED         @Z40CSJH
         BO    LOCATE1B               YES-LOCATE DATA SET      @Z40CSJH
         TM    IEHMVV20,X'08'         PDS SPECIFIED            @Z40CSJH
         BO    LOCATE1B               YES-LOCATE DATA SET      @Z40CSJH
         B     FINDRES                GET SYSRES VOLID         @Z40CSJH
CHKNAME  TM    IEHMVV20+5,X'20'       WAS NAME SPECIFIED       @Z40CSJH
         BO    LOCATE1B               YES-DO LOCATE            @Z40CSJH
         B     FINDRES
CHECK2   L     R1,IEHMVV26
         TM    IEHMVV74+14,X'20'     TEST IER CHEDK BIT FOR CVOL A27307
         BO    MOUNTVOL
         B     LOCATE1B                IF OFF GO TO FIND RES   @Z40CSJH
FINDRES  L     R2,16                   LOAD ADDR OF CVT
         L     R2,40(R2)               LOAD ADDR OF UCB PTR TABLE
VON      SR    R3,R3                  CLEAR UCB REG            @Z40CSJH
         ICM   R3,3,0(R2)             GET UCB ADDR             @Z40CSJH
         N     R3,CLEARMSK              SAVE 16 BITS           @Z40CSJH
         TM    0(R2),X'FF'              LAST ENTRY             @Z40CSJH
         BO    ERROUT                   BR IF NO UCB FOUND     @Z40CSJH
         LTR   R3,R3                   CHECK FOR BLANK UCB ADDR
         BZ    NOTAUCB                    IF SO ---
         TM    18(R3),X'20'            IS THIS UCB FOR D.A.
         BZ    NOTAUCB                    IF NOT ---
         TM    3(R3),X'02'             IS THIS UCB FOR SYSRES
         BO    FIND                       IF SO ---
NOTAUCB  LA    R2,2(R2)                LOAD ADDR OF NEXT UCB
         B     VON
         DS    0F
CLEARMSK DC    X'0000FFFF'             UCB MASK                @Z40CSJH
FIND     LR    R2,R3                   LOAD R2 WITH SYSRES UCB ADDR
         TM    LOOKFOR+1,X'80'     TEST IERFILL SW
         BO    IERCVOL
         L     R3,NXTPTR                LOAD WORK AREA PTR
         XC    0(12,R3),0(R3)           ZERO 12 BYTE AREA
         MVC   0(4,R3),16(R2)           MOVE TYPE INTO LIST
         MVC   4(6,R3),28(R2)           MOVE VOL ID INTO LIST
         ST    R3,IEHMVV24              STORE IN CVOL LIST PTR
         LA    R3,12(R3)                BUMP PTR
         ST    R3,NXTPTR                SAVE PTR
         LA    R3,1
         STC   R3,IEHMVV24              PUT COUNT OF ONE ENTRY IN PTR
         C     R15,CLEARMSK            DSGRP-W/NO NAME-OR CVOL @Z40CSJH
         BNE   LOCATE1                  BR IF NOT TRUE         @Z40CSJH
         OI    IEHMVV20+1,X'40'         SET CVOL=SYSRES        @Z40CSJH
         B     TOESIA                   TO ESI EXIT            @Z40CSJH
IERCVOL  L     R3,IEHMVV26              LOAD PTR TO INC LBOCK
         LA    R3,53(R3)                BUMP PTR TO FROM VOL SLOT
         XC    0(17,R3),0(R3)          CLEAR FROM LIST AREA      A27307
         MVC   0(4,R3),16(R2)      PUT TYPE IN LIST
         MVC   4(6,R3),28(R2)           MOVE VOL ID INTO LIST
         B     MOUNTVOL
MOUNTVOL DS    0H
         TM    LOOKFOR+1,X'80'          I,E,R FILL
         BO    MNT1
         L     R1,IEHMVV24              PTR TO CVOL LIST
         B     MNT2
MNT1     L     R1,IEHMVV26              I,E,R BLOCK
         LA    R1,53(R1)
         B     MNT2
MNT2     DS    0H
         LR    R3,R1
         LH    R4,ST
    MVC  IEHMVV00+5(3),IEHMVV50+5        SET UP INTERNAL TABLE  POINTER
    MVC  IEHMVV00+10(1),IEHMVV50+4      SET  UP INTERNAL TABLE COUNT
     MVI  IEHMVV00+11,X'01'         SET UP NUMBER OF REQUESTS
         MVC   IEHMVV00+12(17),0(R1)                             A27307
     LA   3,IEHMVV00
    MVI   IEHMVV00+4,X'10'      SET UP INDICATOR BYTE
       IEHPOST (14),T
         XCTL  (5,12),EP=IEHMVXSF
MNT3     TM    IEHMVV00+4,X'01'         WAS VOL MOUNTED
         BZ    ERROUT
LOCATE1  MVC   IEHMVV00(4),LOCSW2       FIRST WORD LOCATE LIST @Z40CSJH
LOCATE1A TM    LOOKFOR+1,X'80'          IS I,E,R. SW ON        @Z40CSJH
         BO    LOCATE2                  BRANCH YES
         MVC   IEHMVV00+4(4),IEHMVV21   SECOND WORD OF LIST FOR LOCATE
         L     R1,IEHMVV24              CVOL LIST PTR
         LA    R1,4(R1)
         ST    R1,IEHMVV00+8            THIRD WORD OF LIST FOR LOCATE
LOCATE3  LA    R1,IEHMVV00+16
         ST    R1,IEHMVV00+12           FORTH WORD FOR LOCATE
         B     LOCATE4
LOCATE2  L     R1,IEHMVV26              LOAD ADDR OF I E R BLOCK
         LA    R1,1(R1)
         ST    R1,IEHMVV00+4            SECOND WORD OF LOCATE LIST
         LA    R1,56(R1)                                       @Z40CSJH
         ST    R1,IEHMVV00+8            THIRD WORD-LOCATE      @Z40CSJH
         B     LOCATE3
LOCATE1B MVC   IEHMVV00(4),LOCSW        SET OPTION BYTES       @Z40CSJH
         B     LOCATE1A                 CONT. CAMLST SETUP     @Z40CSJH
LOCATE4 LOCATE IEHMVV00
***********************************************************************
* IF UNABLE TO LOCATE THE DATA SET, PRINT IEH471I AND QUIT            *
***********************************************************************
         LA    15,0(15)
         LTR   15,15
         BNE   ERROUT                    BRANCH IF NOT SUCCESS @Z40CSJH
         TM    LOOKFOR+1,X'80'          I,E,R SW ON
         BO    SETLIST1
         LH    R3,IEHMVV00+16          LOAD COUNT OF VOL ENTRIES
         BCT   R3,*+10                 1 VOL, THEN SAVE DSCBTTR  S21042
         MVC   IEHMVV82(3),IEHMVV00+268 SAVE DSCBTTR             S21042
         LA    R3,1(R3)                 RESET R3                 S21042
         L     R1,NXTPTR               LOAD PERM WORK AREA PTR
         LA    R1,2(R1)                SKIP TWO BYTES
         ST    R1,IEHMVV22              STORE PTR TO FROM LIST   A50958
         ST    R1,IEHMVV22+4            PTR TO ACTIVE FROM LIST  A50958
         LA    R4,IEHMVV00+18           FIRST CATALOG ENTRY      A50958
MOVELIST MVC   0(12,R1),0(R4)           MOVE ENTRY TO FROM LIST  A50958
         XC    12(5,R1),12(R1)          CLEAR UNIT FIELD         A50958
         LA    R1,17(R1)                NEXT FROM VOL LIST ENTRY A50958
         LA    R4,12(R4)                NEXT CATALOG ENTRY       A50958
         BCT   R3,MOVELIST              MOVE NEXT ENTRY IF ONE   A50958
         LA    R1,3(R1)                 ADD 3 TO PTR TO          A50958
         SRL   R1,2                     SET PTR TO NEXT          A50958
         SLL   R1,2                     FULLWORD BOUNDARY        A50958
         ST    R1,NXTPTR                STORE PERM WORK AREA PTR A50958
         TM    LOOKFOR+1,X'80'         IER FILL
         BO    LOCATE5
         IC    R1,IEHMVV00+17          INSERT COUNT OF ENTRIESIN LIST
         STC   R1,IEHMVV22             STORE IN HIGH ORDER BYTE OF PTR
LOCATE5  EQU   *
         B     TRANS3
SETLIST1 L     R1,IEHMVV26              LOAD ADDR OF IER BLOCK
         MVC   53(12,R1),IEHMVV00+18    MOVE VOL LIST INTO IER BLOCK
         B     WRITEUT1
ERROUT   EQU   *
         LA    R3,12                   LOAD MSG NO IN RS
LABEL    LA    R2,16                   RETURN TO ESK             A28295
         TM    IEHMVV90,X'20'          IS THIS END OF INPUT      A15815
         BO    OUT                     YES-- GO TO OUT           A15815
         LA    R2,12                                             A15815
OUT      MVI   ESTENTRY,X'00'          EST ENTRY TO INITIALIZE RTN15815
         MVI   ESTENTRY,X'00'          EST ENTRY TO INITIALIZE RTN
         DELETE EP=DEVNAMET            DELETE DEVICE NAME TABLE    I276
         XC    IEHMVV74+16(4),IEHMVV74+16        CLEAR ADDRESS     I276
       IEHPOST (14),T
         XCTL  EP=IEHMVESA
*
*
*
*              THIS ROUTINE IS ENTERED IMMEDIATLY PRIOR TO TRANSFERING
*              CONTROL TO THE REQUEST HANDLING MODULES
*
*              IT WILL ANALIZE THE INFORMATION PASSED BY THE REQUEST
*              TO INSURE THAT AT LEAST A MINIMUM OF INFORMATION
*              IS PRESENT
*
*                                                                     *
*              IT WILL WRITE DUMMY OR FILE TEXMINATOR RECORDS ON      *
*              UT1 AND UT2 IF EITHER FILE HAS BEEN WRITTEN ON         *
*              FOR THIS REQUEST     EXCEPT FOR A DSGROUP REQUEST      *
*                                                                     *
*                                                                     *
*                                                                     *
SCAEXIT1 TM    IEHMVV20,X'3E'           IS SUB OPERATION BIT ON
         BNE   *+12
         LA    R3,11
         B     ERROUT+4
         TM    IEHMVV20,X'10'          IS DS GROUP BIT ON
         BO    EX3
         TM    LOOKFOR+1,X'10'          IS UNC WRITE OUT SW ON
         BZ    SCANEX1
         MVC   IEHMVV26+1(3),NOTEAREA   MOVE TTR TO COMM AREA
         MVI   IEHMVV26,X'FF'
SCANEX1  DS    0H
         MVI   WRITAREA,C' '            MOVE BLANK TO FIRST BYTE OF KEY
         TM    LOOKFOR+1,X'10'          IS INC WRITE OUT SW ON
         BO    DUMUT1
EX2      TM    LOOKFOR+1,X'08'          IS EXC WRITE OUT SW ON
         BO    DUMUT2                   BRANCH YES
         B     EX3
DWRITE   WRITE (DBR3),SF,(DBR1),WRITAREA,82,MF=E
         CHECK (DBR3)
         BR    DBCOMPR
DUMUT1   L     DBR3,IEHMVV40+4          LOAD DECB ADDR
         L     DBR1,IEHMVV40            LOAD DCB ADDR
         BAL   DBCOMPR,DWRITE
         MVC   IEHMVV39(5),8(DBR1)      MOVE CCHHR TO COMM AREA
         B     EX2
DUMUT2   L     DBR3,IEHMVV41+4          LOAD DECB ADDR
         L     DBR1,IEHMVV41            LOAD DCB ADDR
         BAL   DBCOMPR,DWRITE
         MVC   IEHMVV41+8(5),8(DBR1)    MOVE CCHHR TO COMMAREA
         B     EX3
EX3      DS    0H
         TM    IEHMVV20+1,X'80'         IS TO VOL BIT ON
         LA    R3,11
         BZ    ERROUT+4                 BRANCH IF NO
         MVI   LOOKFOR,X'00'
         TM    LOOKFOR+1,X'10'         IS INC WRITE OUT SW ON
         BZ    SET1                     BRANCH IF NO
         OI    XSWITCHS+1,X'08'
SET1     TM    LOOKFOR+1,X'08'          IS EXC WRITE OUT SW ON
         BZ    SET2                     BRANCH IF NO
         OI    XSWITCHS+1,X'04'         TURN ON ANY EXC REP SW
SET2     TM    LOOKFOR+1,X'01'          SEL INPUT BIT ON
         BZ    SET3                     BRANCH NO
         OI    XSWITCHS+1,X'02'         TURN ON ANY SEL SW
SET3     DS    0H
         MVC   IEHMVV20+2(1),XSWITCHS+1
         L     NXRPTR,NXTPTR            ALIGN PERM WORK AREA PTR
         LA    NXRPTR,4(NXRPTR)        BUMP BY 4
         SRL   NXRPTR,2
         SLL   NXRPTR,2
         ST    NXRPTR,IEHMVV10
         TM    IEHMVV20+3,X'40'        TODD SW ON              @ZA07411
         BNO   OK                      NO STOP CHECKING        @ZA07411
         TM    IEHMVV20,X'02'          VOLUME SW ON            @ZA07411
         BNO   OK                      NO STOP CHECKING        @ZA07411
         L     R9,IEHMVV23             CHECK IF TO DEVICE      @ZA07411
         TM    2(R9),X'80'             IS TAPE OR NOT          @ZA07411
         BO    OK                      IF TAPE OK              @ZA07411
         NI    IEHMVV20+3,X'BF'        IF NOT RESET TODD SW    @ZA07411
OK       TM    IEHMVV20,X'10'          IS DSGROUP SW ON        @ZA07411
         BO    ESIEXIT
         B     ESZEXIT
ESSEXIT  EQU   *
       IEHPOST (14),T
         XCTL  (4,12),EP=IEHMVESS
ESZEXIT  EQU   *
         TM    IEHMVV20+3,X'04'        RENAME SWITCH ON?         A28295
         BZ    TOESZ                   NO - BRANCH               A28295
         BAL   R9,RENAMCHK             CHECK FOR VALID RENAME    A28295
TOESZ    DELETE  EP=DEVNAMET           DELETE DEVICE NAME TABLE  A28295
         XC    IEHMVV74+16(4),IEHMVV74+16        CLEAR ADDRESS     I276
       IEHPOST (14),T
         XCTL  (4,12),EP=IEHMVESZ
ESJEXIT  EQU   *
       IEHPOST (14),T
    XCTL   (4,12),EP=IEHMVESJ
ESIEXIT  EQU   *
         TM    IEHMVV20+3,X'04'        RENAME SWITCH ON?         A28295
         BZ    TOESI                   NO - BRANCH               A28295
         BAL   R9,RENAMCHK             CHECK FOR VALID RENAME    A28295
TOESI    DELETE  EP=DEVNAMET           DELETE DEVICE NAME TABLE  A28295
         XC    IEHMVV74+16(4),IEHMVV74+16        CLEAR ADDRESS     I276
         XC    IEHMVV27+D12(L8),IEHMVV27+D12  CLEAR AREA         Y02918
         TM    IEHMVV20+5,X'20'       WAS NAME SPECIFIED       @Z40CSJH
         BO    TOESH                  YES-TO VESH              @Z40CSJH
         TM    IEHMVV20+1,X'40'         WAS CVOL SPECIFIED     @Z40CSJH
         BO    TOESIA                   BR IF YES              @Z40CSJH
         L     R15,CLEARMSK             SET R15 SWITCH         @Z40CSJH
         B     FINDRES                  GET SYSRES VOLID       @Z40CSJH
TOESIA IEHPOST (14),T                                          @Z40CSJH
         XCTL  (4,12),EP=IEHMVESI                                Y02918
TOESH    EQU   *                      IEHMVESH EXIT            @Z40CSJH
         TM    IEHMVV20+1,X'40'         IS CVOL BIT ON         @Z40CSJH
         BO    TOESIA                   YES-TO VESI            @Z40CSJH
         IEHPOST (14),T                                        @Z40CSJH
         XCTL  (4,12),EP=IEHMVESH     GENERIC LOCATE           @Z40CSJH
***********************************************************************
*                                                                     *
*                                                                     *
*  THE FOLLOWING ROUTINE CHECKS THE VALIDITY OF THE             A48781*
*  DATA SET NAME, AS SPECIFIED IN THE RENAME-PARAMETER.         A48781*
*  EACH NAME OR SUBNAME (FOR CATALOGUED DATA SETS CORRESPONDING A48781*
*  TO THE LEVELS) MAY CONSIST ONLY OF ALPHAMERIC OR NATIONAL OR A48781*
*  HYPHEN OR +0 (I.E. A 12-0 MULTIPUNCH) CHARACTERS,WHILE THE   A48781*
*  FIRST ONE IN EACH NAME OR SUBNAME MUST BE ALPHABETIC OR      A48781*
*  NATIONAL. FURTHERMORE EACH NAME MUST CONTAIN 1 TO 8 CHARAC-  A48781*
*  TERS.                                                        A48781*
*                                                                     *
*                                                                     *
***********************************************************************
RENAMCHK L     DBR1,IEHMVV21        FIND FROM- AND TO-DATA SET-  A48781
         L     DBNXRPTR,IEHMVV21+4  NAME-ADDRESSES               A48781
         CLC   0(44,DBNXRPTR),0(DBR1) COMPARE FROM-WITH NEW-NAME A48781
         BNE   TESTNAME             IF UNEQUAL,CHECK VALIDITY    A48781
         NI    IEHMVV20+3,X'FB'     OTHERWISE,TURN OFF RENAMEBIT A48781
         B     0(R9)                AND CONTINUE PROCESSING      A48781
TESTNAME LA    DBCOMPR,44(DBNXRPTR) INITIALISATION OF END OF NEW A48781
         BCTR  DBNXRPTR,0           DATA SET NAME                A48781
CHKCHAR1 SR    DBR1,DBR1            INITIALISATION OF COUNTER    A48781
*                                   FOR CHARS IN EACH NAME       A48781
         LA    DBNXRPTR,1(DBNXRPTR) POINTER TO NEXT CHAR IN DSN. A48781
         CR    DBNXRPTR,DBCOMPR     CHECK FOR END OF DSNAME AFTERA48781
         BE    INVALID              HAVING FOUND A PERIOD        A48781
TEST     CLI   0(DBNXRPTR),X'5B'    CHECK FOR DOLLAR-SIGN        A48781
         BE    VALID                DOLLAR-SIGN ALLOWED          A48781
         CLI   0(DBNXRPTR),X'7B'    CHECK FOR NUMBER-SIGN        A48781
         BE    VALID                NUMBER-SIGN ALLOWED          A48781
         CLI   0(DBNXRPTR),X'7C'    CHECK FOR @-SIGN             A48781
         BE    VALID                @-SIGN ALLOWED               A48781
         CLI   0(DBNXRPTR),X'C1'    CHECK FOR                    A48781
         BL    INVALID                    ALPHABETIC CHARACTERS  A48781
         CLI   0(DBNXRPTR),X'CA'    ALPHABETIC CHARACTERS A      A48781
         BL    VALID                      THROUGH I ALLOWED      A48781
         CLI   0(DBNXRPTR),X'D1'    CHECK FOR                    A48781
         BL    INVALID                    ALPHABETIC CHARACTERS  A48781
         CLI   0(DBNXRPTR),X'DA'    ALPHABETIC CHARACTERS J      A48781
         BL    VALID                      THROUGH R ALLOWED      A48781
         CLI   0(DBNXRPTR),X'E2'    CHECK FOR                    A48781
         BL    INVALID                    ALPHABETIC CHARACTERS  A48781
         CLI   0(DBNXRPTR),X'EA'    ALPHABETIC CHARACTERS S      A48781
         BL    VALID                      THROUGH Z ALLOWED      A48781
INVALID  LA    DBR1,18              INDIC. MSG. IEH390I-INVALID  A48781
         B     LABEL                DSNAME IN RENAME-PARAMETER   A48781
VALID    LA    DBR1,1(DBR1)         UPDATE CTR FOR NMBR OF       A48781
         CH    DBR1,DBEIGHT         VALID CHARACTERS IN DSNAME   A48781
         BH    INVALID              ERROR IF MORE THAN 8 CHAR.   A48781
         LA    DBNXRPTR,1(DBNXRPTR) POINTER TO NEXT CHAR. IN DSN.A48781
         CR    DBNXRPTR,DBCOMPR     CHECK FOR END OF VALID       A48781
         BE    0(R9)                DSNAME WITH 44 CHARACTERS    A48781
         CLI   0(DBNXRPTR),X'40'    CHECK FOR END OF VALID       A48781
         BE    0(R9)                DSNAME WITH LESS THAN 44CHAR A48781
         CLI   0(DBNXRPTR),X'4B'    CHECK FOR PERIOD             A48781
         BE    CHKCHAR1             IF PERIOD,RESET CTR ANDBRANCHA48781
         CLI   0(DBNXRPTR),X'60'    CHECK FOR HYPHEN             A48781
         BE    VALID                HYPHEN ALLOWED AS NOT-FIRST  A48781
*                                                  CHARACTER     A48781
         CLI   0(DBNXRPTR),X'C0'    CHECK FOR 12-0 MULTIPUNCH    A48781
         BE    VALID                12-0 MULTIPUNCH ALLOWED      A48781
*                                       AS NON-FIRST CHARACTER   A48781
         CLI   0(DBNXRPTR),X'F0'    CHECK FOR NUMERIC CHARACTERS A48781
         BL    TEST                 NUMERIC CHARACTERS           A48781
         CLI   0(DBNXRPTR),X'FA'    ALLOWED AS                   A48781
         BL    VALID                NON-FIRST CHARACTERS IN NAME A48781
         B     INVALID              TEST FOR ALPHABETIC OR       A48781
*                                       NATIONAL CHARACTERS      A48781
        IEHMVV                                                   A48781
IEHMVSST CSECT                                                   A48781
WRITAREA EQU   IEHMVV00                                          A48781
FAADD    EQU   IEHMVV27                                          A48781
SARG     EQU   IEHMVV27+12                                       A48781
NOTEAREA EQU   IEHMVV27+20                                       A48781
LOOKFOR  EQU   IEHMVV27+24
ESSENTRY EQU   IEHMVV27+4
ESTENTRY EQU   IEHMVV27+5
XSWITCHS EQU   IEHMVV27+28
NXTPTR   EQU   IEHMVV10
MASK1    DC    XL6'000000300400'                                 A37919
         DS    0H
DBCTONE  DC    XL4'01000000'
FUDJFACT DC    HL2'114'
ST       DC    C'ST'
         DS    0F
DBEIGHT  DC    XL2'08'                                           A33297
LOCSW2   DC    XL4'C0000000'            LOC OPTIONS            @Z40CSJH
LOCSW    CAMLST  NAME,LOCSW,,LOCSW   LOCATE BY NAME WITHOUT CVOLYL026VC
PATCH    DS    10F                      PATCH AREA             @Z40CSJH
         END
