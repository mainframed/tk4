       TITLE   'IFCELEX1 MODEL 165 CPU EDIT TABLE 4'
*  DSGEN MACRO     DSGEN MACRO     DSGEN MACRO     DSGEN MACRO        *
         SPACE 2
         MACRO
&NAME    DSGEN ,
.*                            THIS MACRO GENERATES ONE DSECT WORD
.*                                 FORMATTED FOR THE SUBJECT LOG RECORD
.*                                 EACH OPERAND HAS TWO SUB LISTS. THE
.*                                 FIRST IS THE NAME OF THE LOG ITEM
.*                                 WHILE THE SECOND IS THE # OF BITS TO
.*                                 ALLOCATE FOR THIS ITEM. ITEMS MUST
.*                                 BE DEFINED CONTIGUOUSLY WITHOUT GAPS
.*                                 UNUSED BIT GROUPS MUST BE GIVEN
.*                                 DUMMY NAMES. THE NAMES PROVIDED FOR
.*                                 THE LOG ITEMS MAY THEN BE USED IN
.*                                 THE CONVERSION MACRO INSTRUCTIONS.
         GBLC &ITEM(2000)
         GBLA &ITEMNBR,&BITS(2000),&SHIFT(2000)
         LCLB  &ONLY1,&CTIND
         LCLA  &START1,&START2,&END1,&END2
         LCLC  &SYMBOL,&EQUSYM
         LCLA  &OP,&COUNT,&BYTE,&EQUCNT
         ACTR  100000
.START   AIF   (N'&SYSLIST(&OP+1) LT 3).LOOP
         AIF   ('&SYSLIST(&OP+1,3)' EQ 'EQU').LOOP     TEST FOR EQU
  AIF   ('&SYSLIST(&OP+1,3)' EQ '' OR '&SYSLIST(&OP+1,4)' EQ '').ERR1
         AIF   ('&SYSLIST(&OP+1,3)' GT '&SYSLIST(&OP+1,4)').ERR3
&START1  SETA  &SYSLIST(&OP+1,3)        GET START COUNT OF 1
&START2  SETA  &SYSLIST(&OP+1,4)        GET FIRST END COUNT
         AGO   .SET2A                   BRANCH AROUND
.ERR1    MNOTE '**FIRST SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.SET2A   AIF   ('&SYSLIST(&OP+1,5)' EQ ''AND '&SYSLIST(&OP+1,6)' EQ '' X
               ).SET2                   TEST FOR NO SECOND
  AIF   ('&SYSLIST(&OP+1,5)' EQ '' OR '&SYSLIST(&OP+1,6)' EQ '').ERR2
         AIF   ('&SYSLIST(&OP+1,5)' GT '&SYSLIST(&OP+1,6)').ERR3
&END1    SETA  &SYSLIST(&OP+1,5)        GET START COUNT OF 2
&END2    SETA  &SYSLIST(&OP+1,6)        GET END COUNT OF 2
         AGO   .LOOP
.SET2    ANOP
&ONLY1   SETB  1                        INDICATE ONLY ONE CONCATENATION
         AGO   .LOOP
.ERR2    MNOTE '**SECOND SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.ERR3    MNOTE '**START GREATER THAN END CONCATENATION**'
         MEXIT
.LOOP    ANOP
&OP      SETA  &OP+1
         AIF   (&OP GT N'&SYSLIST).DONE      TEST IF ALL DONE
&ITEMNBR SETA  &ITEMNBR+1
         AIF   ('&SYSLIST(&OP,2)' NE '').OK1
         MNOTE '**NULL BIT COUNT FIELD**'
         MEXIT
.OK1     ANOP
&SYMBOL  SETC  '&SYSLIST(&OP,1)'
         AIF   ('&SYMBOL' NE '').OK
*              *****     LOG ITEM SYMBOL NOT PROVIDED     *****
         AIF   ('&SYSLIST(&OP,3)' NE 'EQU').CNT
         AGO   .START                   GET NEXT
.OK      AIF   (N'&SYSLIST(&OP) LT 3).NO3    TEST FOR OLD FORMAT
         AIF   ('&SYSLIST(&OP,3)' EQ 'EQU').EQU   TEST FOR EQU
         AIF   (&ONLY1).OK2             TEST FOR ONLY ONE CONCAT
&SYMBOL  SETC  '&SYMBOL.&START1.&END1'       GET 1 AND 2 CONCAT
         AGO   .NO3                     BRANCH AROUND
.OK2     ANOP
&SYMBOL  SETC  '&SYMBOL.&START1'        GET 1 CONCATENATED
.NO3     ANOP
&SYMBOL  EQU   *+&BYTE
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL IN GLOBAL
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)
&SHIFT(&ITEMNBR) SETA &COUNT-&BYTE*8
.CNT     ANOP
&CTIND   SETB  1                        SET COUNT INDICATOR
&COUNT   SETA  &COUNT+&SYSLIST(&OP,2)
&BYTE    SETA  &COUNT/8
         AIF   (N'&SYSLIST(&OP) LT 3).START  TEST FOR OLD FORMAT
         AIF   (&ONLY1).TSTST           TEST FOR ONLY ONE CONCAT
         AIF   (&END1 EQ &END2).TSTST   TEST FOR SECOND END
&END1    SETA  &END1+1                  INCREMENT COUNT
&OP      SETA  &OP-1                    DECREMENT INCREMENT
         AGO   .LOOP                    GENERATE NEXT
.TSTST   ANOP
         AIF   (&START1 EQ &START2).LPDONE   TEST FOR END
         AIF   (&ONLY1).NSET1           TEST FOR ONLY ONE CONCAT
&END1    SETA  &SYSLIST(&OP,5)          RE-INIT SECOND START COUNT
.NSET1   ANOP
&OP      SETA  &OP-1                    DECREMENT INDEX
&START1  SETA  &START1+1                INCREMENT FIRST COUNT
         AGO   .LOOP                    GO DO NEXT
.LPDONE  ANOP
&ONLY1   SETB  0                        CLEAR INDICATOR
         AGO   .START                   GO TEST FOR MORE SUB-LISTS
.DONE    AIF   (&COUNT-&COUNT/8*8 NE 0).ERR  TEST FOR MULTIPLE OF EIGHT
         AIF   (&CTIND EQ 0).END        NO DS IF NO COUNT
&COUNT   SETA  &COUNT/8                 GET NUMBER OF BYTES
&NAME    DS    &COUNT.C
.END     MEXIT
.ERR     MNOTE '**BIT COUNT FLDS DO NOT TOTAL MULTIPLE OF 8**'
         MEXIT
.EQU     AIF   ('&SYSLIST(&OP,4)' NE '').EQU1     TEST FOR NULL LABEL
.ERR4    MNOTE '**EQU OPERAND OMITTED OR NOT FOUND**'
         MEXIT
.EQU1    AIF   (&SYSLIST(&OP,2) LT 16).EQU2  COUNT OVER FIFTEEN
*****               THE FOLLOWING STATEMENT                *****
*****     NUMBER OF BITS EXCEED 15 - DO NOT USE AS BIN     *****
.EQU2    ANOP
&EQUCNT  SETA  0                        CLEAR COUNTER
&EQUSYM  SETC  '&SYSLIST(&OP,4)'        GET EQU OPERAND
.EQULOP  ANOP
&EQUCNT  SETA  &EQUCNT+1                INCREMENT INDEX
         AIF   ('&ITEM(&EQUCNT)' EQ '&EQUSYM').EQUOUT  LABEL FOUND?
         AIF   (&EQUCNT EQ &ITEMNBR).ERR4    ALL TESTED?
         AGO   .EQULOP                  NO-GET NEXT
.EQUOUT  ANOP
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL NAME
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)    GET NUMBER OF BITS
&SHIFT(&ITEMNBR) SETA &SHIFT(&EQUCNT)   GET SHIFT COUNT
&SYMBOL  EQU   &EQUSYM                  THIS SYMBOL EQUATED
         AGO   .START                   RETURN FOR NEXT
         MEND
         EJECT
         MACRO
         LINEND
.*                            THIS MACRO IS USED ONLY BY THE LINE
.*                                 MACRO TO SET THE NUMBER OF ENTRIES
.*                                 ASSOCIATED WITH EACH LINE.
         GBLA  &NRENTS
         GBLC &NRENTSX
         AIF   (&NRENTS EQ 0).NORENTS   TEST FOR NO COUNT
         ORG   &NRENTSX
         DC    FL1'&NRENTS'
         ORG
&NRENTS  SETA  0
.NORENTS ANOP
B&SYSNDX EQU   *
&NRENTSX SETC  'B&SYSNDX'
         MEND
*
         MACRO
         BIN   ,
.*                                 &SYSLIST(&OP,1) - NAME OF LOG ITEM
.*                                      RECORD DSECT
.*                                 $SYSLIST(&OP,2) - NBR OF SPACES
.*                                      TO SKIP ON MULTIPLE
.*                                      PRINT OR NBR OF SPACES
.*                                      TO BACK UP FROM COLUMN FOR
.*                                      START OF PRINTING. THE LETTER
.*                                      B PRECEEDS THE NUMBER (B5) IF
.*                                      THE LATTER IS DESIRED. OMISSION
.*                                      OF THIS OPERAND FORCES OPTION 2
.*                                      WITH BACKUP SPACING EQUAL TO
.*                                 THE NUMBER OF BITS IN THE ITEM
.*                                 DEFINITION (VIA MACRO 'DSGEN').
.*                            A LIMIT OF 15 BITS IS IMPOSED FOR THE
.*                                 TOTAL NUMBER OF BITS TO PRINT.
         GBLA  &INITIAL
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         GBLC &ITEM(2000)
         GBLA &ITEMNBR,&BITS(2000),&SHIFT(2000),&NRENTS
         GBLC  &DSECT
         LCLB  &B,&SUB
         LCLA  &IBITS,&NDX,&ISHIFT,&K
         LCLA  &TEMP,&T,&OP
         LCLC  &S
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP
&SUB     SETB  1
.LOOP    ANOP
&OP      SETA  &OP+1
.LOOP1   ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&SYSLIST(&OP,1)').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP1
         MNOTE '**LOG ITEM NOT DEFINED**'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
&T       SETA  &IBITS-1
&B       SETB  0
         AIF   (&IBITS GT 0 AND &IBITS LT 16).SUB0
         MNOTE '**NO. OF BITS OUTSIDE RANGE OF 1-15**'
         MEXIT
.SUB0    AIF   (&SUB EQ 1).SUBA
         AIF   ('&SYSLIST(2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(2)
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)
         AGO   .SUBB
.SUBA    ANOP
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
.SUBB    ANOP
&T       SETA  &S
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
&TEMP    SETA  &ISHIFT
         AIF   (&IBITS NE 1 OR &B NE 0).BIN2
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'&TEMP'
         AGO   .OUT
.BIN2    AIF   ('&SYSLIST(&OP,2)' NE '').BIN3
&B       SETB  1
.BIN3    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'C'
         DC    BL.1'&B',AL.7(&T),AL.4(&IBITS),FL.4'&ISHIFT'
.OUT     ANOP
&NDX     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LOOP
.OUTA    ANOP
         MEND
         EJECT
         MACRO
         HEX
.*                            THIS MACRO FACILITATES GENERATION OF THE
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE
.*                                 CONVERSIONS.
.*                            &SYSLIST(&OP,1) - NAME OF DATA ITEM TO BE
.*                                 CONVERTED
.*                            &SYSLIST(&OP,2) - # OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO
.*                                 BACK UP FROM COLUMN FOR START OF
.*                                 PRINTING. THE LETTER B PRECEEDS THE
.*                                 NUMBER (B8) IF THE LATTER OPTION IS
.*                                 DESIRED. OMISSION OF THIS OPERAND
.*                                 FORCES OPTION 2 WITH BACKUP SPACING
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR
.*                                 IMPLICITLY B).
.*                            &SYSLIST(&OP,3) - NUMBER OF BYTES TO
.*                                 PROCESS. THIS NUMBER IS SUFFIXED
.*                                 WITH AN L,R, OR B TO STIPULATE
.*                                 PRINTING OF THE LEFT HALF, RIGHT
.*                                 HALF, OR BOTH HALVES OF THE BYTE
.*                                 RESPECTIVELY. OMISSION OF THIS
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES-
.*                                 SARY. THIS MACRO MUST BE THE FIRST
.*                                 MACRO INSTRUCTION ISSUED FOR THE
.*                                 SUBJECT LINE(S).
         GBLC &ITEM(2000),&DSECT
         GBLA &ITEMNBR,&BITS(2000),&SHIFT(2000),&NRENTS
         GBLA  &INITIAL
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLB  &B,&SUB
         LCLA  &IBITS,&NDX,&ISHIFT,&K,&T,&CODE,&BYTESP,&OP
         LCLC  &S,&LETTER
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP
&SUB     SETB  1
.LOOP    ANOP
&OP      SETA  &OP+1
.LOOP1   ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&SYSLIST(&OP,1)').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP1
         MNOTE '**LOG ITEM NOT DEFINED**'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).ALIGN
.ERR     MNOTE '**DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY**'
         MEXIT
.ALIGN   ANOP
&CODE    SETA  1
         AIF   (&SUB EQ 1).SUBA
&K       SETA  K'&SYSLIST(3)
         AGO   .SUBB
.SUBA    ANOP
&K       SETA  K'&SYSLIST(&OP,3)
.SUBB    ANOP
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK
         MNOTE '**BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL**'
         MEXIT
.OK      AIF   (&SUB EQ 1).SUBC
         AIF   ('&SYSLIST(3)' EQ '').USEDEFN
&LETTER  SETC  '&SYSLIST(3)'(&K,1)
&S       SETC  '&SYSLIST(3)'(1,&K-1)
         AGO   .SUBD
.SUBC    ANOP
         AIF   ('&SYSLIST(&OP,3)' EQ '').USEDEFN
&LETTER  SETC  '&SYSLIST(&OP,3)'(&K,1)
&S       SETC  '&SYSLIST(&OP,3)'(1,&K-1)
.SUBD    ANOP
&BYTESP  SETA  &S
         AIF   ('&LETTER' EQ 'B').BOTH
         AIF   ('&LETTER' EQ 'L').LEFT
&CODE    SETA  2
         AGO   .L
.LEFT    ANOP
&CODE    SETA  1
         AGO   .L
.USEDEFN ANOP
&BYTESP  SETA  &IBITS/8
.BOTH    AIF   (&ISHIFT NE 0).ERR
&CODE    SETA  3
&T       SETA  &BYTESP*2-1
&S       SETC  '&T'
.OK2     AIF   (&ISHIFT EQ 0).L
&CODE    SETA  2
.L       ANOP
&B       SETB  1
         AIF   (&SUB EQ 1).SUBE
         AIF   ('&SYSLIST(2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(2)
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)
         AGO   .SUBF
.SUBE    ANOP
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
.SUBF    ANOP
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
         AIF   (&BYTESP GT 0 AND &BYTESP LT 16).SUB0
         MNOTE '**NO. OF BYTES OUTSIDE RANGE OF 1-15**'
         MEXIT
.SUB0    AIF   (&SUB EQ 1).SUBG
         DC    AL.12(&SYSLIST(1)-&DSECT),XL.4'A'
         AGO   .SUBH
.SUBG    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'A'
.SUBH    ANOP
         DC    BL.1'&B',FL.7'&S',AL.4(&BYTESP),FL.4'&CODE'
.OUT     ANOP
&NDX     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LOOP
.OUTA    ANOP
         MEND
         MACRO
         LSTART ,
.*                            THIS MACRO IS ISSUED WHEN THE LABEL AREA
.*                                 OF THE TABLE IS TO BEGIN.
         GBLA  &LABELNR
         GBLC  &LBL(100)
         GBLC &LABELS(2000)
         GBLA  &LBLCTR(100)
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLA  &NDX,&CTR
         AIF   (&DIAGTST EQ 0).NODIAG
         AIF   (&DIAGSET EQ 0).NODIAG
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
.NODIAG  ANOP
         LINEND
&CTR     SETA  1
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   (&LBLCTR(&CTR) NE &NDX).NOLBL
&LBL(&CTR) DC  C'&LABELS(&NDX)'
&CTR     SETA  &CTR+1
         AGO   .LOOPCTL
.NOLBL   ANOP
         DC    C'&LABELS(&NDX)'
.LOOPCTL AIF   (&NDX LT &LABELNR).LOOP
         MEND
         EJECT
         MACRO
&NAME    LABEL &LABEL1,&LABEL2,&LABEL3,&LABEL4,&LABEL5,&LABEL6,        C
               &LABEL7,&LABEL8
.*                                 THIS MACRO ALLOWS LABELS TO
.*                                 BE SPECIFIED FOR A GIVEN LINE. THE
.*                                 LABELS SHOULD BE ENCLOSED IN QUOTA-
.*                                 TION MARKS. THE COLUMN AND LINE END
.*                                 CONTROLS WILL BE INSERTED BY THE
.*                                 MACRO. OMITTED OPERANDS MEAN NO
.*                                 LABEL REQUIRED FOR RESPECTIVE
.*                                 COLUMN.
         GBLC &LABELS(2000)
         GBLC  &LBL(100)
         GBLA  &LBLCTR(100)
         GBLA  &LABELNR
         GBLA  &NRENTS,&LPTR,&INITIAL
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLC  &MARGIN,&TACK
         LCLC  &TEXT
         LCLA  &OP,&K,&START,&NRCHAR,&REMAIN
         AIF   (&INITIAL EQ 0).DIAGCLR
         AIF   (&DIAGTST EQ 0).DIAGCLR
         AIF   (&DIAGLIN EQ 1).DIAGCLR
         MNOTE '**NO LINE ASSOCIATED WITH PREVIOUS LABEL**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LINE
         LINE
.DIAGCLR ANOP
&DIAGSET SETB  0
&DIAGLIN SETB  0
&MARGIN  SETC  '*'
         AIF   ('&NAME' EQ '').LOOPOUT
&LPTR    SETA  &LPTR+1
&LBL(&LPTR) SETC '&NAME'
&LBLCTR(&LPTR) SETA &LABELNR+1
.LOOPOUT ANOP
&OP      SETA  &OP+1
&K       SETA  K'&SYSLIST(&OP)
         AIF (&K GE 2).NORM
&K       SETA  2
.NORM    ANOP
&START   SETA  2
         AIF (&OP LT N'&SYSLIST).NOTLAST
&MARGIN  SETC  '$'
.NOTLAST ANOP
&NRCHAR  SETA  8
&TACK    SETC  ''
.LOOPIN  ANOP
&REMAIN  SETA  &K-&START
         AIF (&REMAIN GE 8).MORE
&TACK    SETC  '&MARGIN'
&NRCHAR  SETA  &REMAIN
.MORE    ANOP
&TEXT    SETC  ''
         AIF (&REMAIN EQ 0).ENDTEXT
&TEXT    SETC  '&SYSLIST(&OP)'(&START,&NRCHAR)
.ENDTEXT ANOP
&LABELNR SETA  &LABELNR+1
&LABELS(&LABELNR) SETC '&TEXT'.'&TACK'
&START   SETA  &START+8
         AIF ('&TACK' EQ '').LOOPIN
         AIF ('&TACK' EQ '*').LOOPOUT
         MEND
         EJECT
         MACRO
&NAME    ROUTINE &LOGITEM,&RNAME
         GBLA  &NRENTS
         GBLC  &DSECT,&CSECT
         GBLA  &INITIAL
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS ROUTINE**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
&NAME    DC    AL.12(&LOGITEM-&DSECT),XL.4'D'
         DC    AL2(&RNAME-&CSECT)
&NRENTS  SETA  &NRENTS+1
         MEND
         EJECT
         MACRO
&NAME    LINE  &DATA,&LABEL,&SKIP=
.*                            THIS MACRO ESTABLISHES THE MARGINS OR
.*                                 COLUMN SETTINGS FOR EACH LINE. IT
.*                                 GENERATES NECESSARY CARRIAGE CONTROL
.*                                 ENTRIES. LASTLY IT DETERMINES THE
.*                                 NUMBER OF ENTRIES ASSOCIATED WITH
.*                                 THE PREVIOUS LINE AND STORES THAT #
.*                                 INTO THE APPROPRIATE BYTE.
.*                            &DATA(1) - CHARACTER POSITION TO BEGIN
.*                                 DATA.
.*                            &DATA(2) - # OF SPACES BETWEEN SUCCESSIVE
.*                                 DATA COLUMN STARTING CHARACTERS.
.*                            &LABEL(1) - CHAR. POS. TO BEGIN LABELS.
.*                            &LABEL(2) - # SPACES BETWEEN LINE'S LABEL
.*                                 STARTING CHARACTERS.
.*                            &SKIP= - # OF LINES TO ADVANCE CARRIAGE
.*                                 TO BEGIN NEXT PRINTED LINE.
.*                            NEW ENTRIES ARE GENERATED ONLY WHEN
.*                                 NECESSARY. OMISSION OF ITEMS MEANS
.*                                 THEY HAVE NOT CHANGED SINCE PREVIOUS
.*                                 SETTINGS. A LINE MACRO IS REQUIRED
.*                                 FOR EACH PRINTED LINE. IF NO SETTING
.*                                 CHANGES ARE REQUIRED ALL OPERANDS
.*                                 ARE OMITTED IN WHICH CASE ONLY THE
.*                                 # OF ENTRIES FOR THE PREVIOUS LINE
.*                                 IS COMPUTED. THIS MACRO MUST BE THE
.*                                 FIRST MACRO INSTRUCTION ISSUED FOR
.*                                 THE SUBJECT LINE
         GBLA  &DB,&DT,&LB,&LT,&NRENTS
         GBLA  &LASTCC,&INITIAL
         GBLC  &NRENTSX
         GBLC  &CARRCON
         GBLB  &TEST
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLA  &S
         AIF   (&INITIAL EQ 0 OR &DIAGTST EQ 0).DIAGSET
         AIF   (&DIAGSET EQ 0).DIAGSET
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
.DIAGSET ANOP
&DIAGSET SETB  1
&DIAGLIN SETB  1
&NAME    DS    0C
         AIF   (&INITIAL EQ 0).FIRSTLN
         LINEND
         AGO   .NTFIRST
.FIRSTLN ANOP
&NRENTSX SETC  'N&SYSNDX'
&INITIAL SETA  1
N&SYSNDX EQU   *
.NTFIRST ANOP
         DC    AL1(0)
         AIF   ('&DATA(1)' EQ '').CKDTABS
         AIF   (&DATA(1) EQ &DB).CKDTABS
&DB      SETA  &DATA(1)
         AGO   .AA
.CKDTABS AIF   ('&DATA(2)' EQ '').NCDATA
         AIF   (&DATA(2) EQ &DT).NCDATA
         AGO   .CC
.AA      AIF   ('&DATA(2)' EQ '').BB
         AIF   (&DATA(2) EQ &DT).BB
.CC      ANOP
&DT      SETA  &DATA(2)
.BB      DC    XL2'FFFE'
         DC    FL1'&DB'
         DC    FL1'&DT'
&NRENTS  SETA  &NRENTS+1
.NCDATA  ANOP
         AIF   ('&LABEL(1)' EQ '').CKLTABS
         AIF   (&LABEL(1) EQ &LB).CKLTABS
&LB      SETA  &LABEL(1)
         AGO   .AAA
.CKLTABS AIF   ('&LABEL(2)' EQ '').NCLABEL
         AIF   (&LABEL(2) EQ &LT).NCLABEL
         AGO   .CCC
.AAA     AIF   ('&LABEL(2)' EQ '').BBB
         AIF   (&LABEL(2) EQ &LT).BBB
.CCC     ANOP
&LT      SETA  &LABEL(2)
.BBB     DC    XL2'FFFF'
         DC    FL1'&LB'
         DC    FL1'&LT'
&NRENTS  SETA  &NRENTS+1
.NCLABEL ANOP
         AIF   ('&SKIP' NE '').CONT
         AIF   (&TEST EQ 0).NOCHANG
         AGO   .DEFALTA
.CONT    ANOP
         AIF   (&TEST EQ 0).AB
         AIF   ('&SKIP' EQ 'E').AB
&S       SETA  &SKIP
.DEFAULT ANOP
         AIF   (&SKIP EQ &LASTCC).DEFALTA
         ORG   &CARRCON+3
         DC    AL.3(0),AL.2(&S),AL.3(1)
         ORG
&LASTCC  SETA  &S
.DEFALTA ANOP
&TEST    SETB  0
         AGO   .DD
.AB      AIF   ('&SKIP' NE 'E').ABB
A&SYSNDX DC    X'FFFB8B00'              EJECT
         AGO   .ABC
.ABB     AIF   (&SKIP EQ &LASTCC).NOCHANG
A&SYSNDX DC    XL2'FFFB'
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
&LASTCC  SETA  &SKIP
&TEST    SETB  1
.ABC     ANOP
&CARRCON SETC  'A&SYSNDX'
&NRENTS  SETA  &NRENTS+1
.DD      ANOP
.NOCHANG ANOP
         MEND
         EJECT
         GBLC  &DSECT,&CSECT
&DSECT   SETC  'INDEPEND'
&CSECT   SETC  'IFCELEX1'
IFCELEX1 CSECT
         USING *,R9
INDEPEND DSECT
         DS    0F
         DSGEN (XKEY,16),(XSWS8,9),(XSWS9,1),(XSWS10,1),(XSWS11,1),    C
               (XSWS12,1),(XSWS13,1),(XSWS14,1),(XSWS15,1)
         DSGEN (XDUM1,32)
         DSGEN (XDATE,32)
         DSGEN (XTIME,32)
         DSGEN (XDUM2,8),(XSER,24)
         DSGEN (XCPUMOD,16),(XDUM3,16)
         DSGEN (XPGMID,64)
         DSGEN (XJOBID,64)
         ORG   XJOBID
         DSGEN (MCETEF,1,0,7),(MCEMEF,1,0,7),(MCEIEF,1,0,7),           X
               (MCESEF,1,0,7),(PDAR0,1,0,7),(PDAR1,1,0,7),             X
               (PDAR2,1,0,7),(WDSIZE,8)
         DSGEN (XMCKPSW,64)
M165     DS    214F
         DSGEN (A1LB,32)
         DSGEN (A1LC,32)
         DSGEN (A1LD,32)
         DSGEN (A1LE,32)
         DSGEN (A1LF,32)
         DSGEN (A1LG,32)
         DSGEN (A1LH,32)
         DSGEN (A1LJ,32)
         DSGEN (A1LK,32)
         DSGEN (A1LL,32)
         DSGEN (A2LB,32)
         DSGEN (A2LC,32)
         DSGEN (A2LD,32)
         DSGEN (A2LE,32)
         DSGEN (A2LF,32)
         DSGEN (A2LG,32)
         DSGEN (A2LH,32)
         DSGEN (A2LJ,32)
         DSGEN (A2LK,32)
         DSGEN (A2LL,32)
         DSGEN (A3LB,32)
         DSGEN (A3LC,32)
         DSGEN (A3LD,32)
         DSGEN (A3LE,32)
         DSGEN (A3LF,32)
         DSGEN (A3LG,32)
         DSGEN (A3LH,32)
         DSGEN (A3LJ,32)
         DSGEN (A3LK,32)
         DSGEN (A3LL,32)
         DSGEN (A4LB,32)
         DSGEN (A4LC,32)
         DSGEN (A4LD,32)
         DSGEN (A4LE,32)
         DSGEN (A4LF,32)
         DSGEN (A4LG,32)
         DSGEN (A4LH,32)
         DSGEN (A4LJ,32)
         DSGEN (A4LK,32)
         DSGEN (A4LL,32)
         DSGEN (A5LB,32)
         DSGEN (A5LC,32)
         DSGEN (A5LD,32)
         DSGEN (A5LE,32)
         DSGEN (A5LF,32)
         DSGEN (A5LG,32)
         DSGEN (A5LH,32)
         DSGEN (A5LJ,32)
         DSGEN (A5LK,32)
         DSGEN (A5LL,32)
         DSGEN (A6LB,32)
         DSGEN (A6LC,32)
         DSGEN (A6LD,32)
         DSGEN (A6LE,32)
         DSGEN (A6LF,32)
         DSGEN (A6LG,32)
         DSGEN (A6LH,32)
         DSGEN (A6LJ,32)
         DSGEN (A6LK,32)
         DSGEN (A6LL,32)
         DSGEN (A7LB,32)
         DSGEN (A7LC,32)
         DSGEN (A7LD,32)
         DSGEN (A7LE,32)
         DSGEN (A7LF,32)
         DSGEN (A7LG,32)
         DSGEN (A7LH,32)
         DSGEN (A7LJ,32)
         DSGEN (A7LK,32)
         DSGEN (A7LL,32)
         DSGEN (B0LB,32)
         DSGEN (B0LC,32)
         DSGEN (B0LD,32)
         DSGEN (B0LE,32)
         DSGEN (B0LF,32)
         DSGEN (B0LG,32)
         DSGEN (B0LH,32)
         DSGEN (B0LJ,32)
         DSGEN (B0LK,32)
         DSGEN (B0LL,32)
         DSGEN (B1LB,32)
         DSGEN (B1LC,32)
         DSGEN (B1LD,32)
         DSGEN (B1LE,32)
         DSGEN (B1LF,32)
         DSGEN (B1LG,32)
         DSGEN (B1LH,32)
         DSGEN (B1LJ,32)
         DSGEN (B1LK,32)
         DSGEN (B1LL,32)
         DSGEN (B2LB,32)
         DSGEN (B2LC,32)
         DSGEN (B2LD,32)
         DSGEN (B2LE,32)
         DSGEN (B2LF,32)
         DSGEN (B2LG,32)
         DSGEN (B2LH,32)
         DSGEN (B2LJ,32)
         DSGEN (B2LK,32)
         DSGEN (B2LL,32)
         DSGEN (B3LB,32)
         DSGEN (B3LC,32)
         DSGEN (B3LD,32)
         DSGEN (B3LE,32)
         DSGEN (B3LF,32)
         DSGEN (B3LG,32)
         DSGEN (B3LH,32)
         DSGEN (B3LJ,32)
         DSGEN (B3LK,32)
         DSGEN (B3LL,32)
         DSGEN (B4LB,32)
         DSGEN (B4LC,32)
         DSGEN (B4LD,32)
         DSGEN (B4LE,32)
         DSGEN (B4LF,32)
         DSGEN (B4LG,32)
         DSGEN (B4LH,32)
         DSGEN (B4LJ,32)
         DSGEN (B4LK,32)
         DSGEN (B4LL,32)
         DSGEN (B5LB,32)
         DSGEN (B5LC,32)
         DSGEN (B5LD,32)
         DSGEN (B5LE,32)
         DSGEN (B5LF,32)
         DSGEN (B5LG,32)
         DSGEN (B5LH,32)
         DSGEN (B5LJ,32)
         DSGEN (B5LK,32)
         DSGEN (B5LL,32)
         DSGEN (B6LB,32)
         DSGEN (B6LC,32)
         DSGEN (B6LD,32)
         DSGEN (B6LE,32)
         DSGEN (B6LF,32)
         DSGEN (B6LG,32)
         DSGEN (B6LH,32)
         DSGEN (B6LJ,32)
         DSGEN (B6LK,32)
         DSGEN (B6LL,32)
         DSGEN (C0LB,32)
         DSGEN (C0LC,32)
         DSGEN (C0LD,32)
         DSGEN (C0LE,32)
         DSGEN (C0LF,32)
         DSGEN (C0LG,32)
         DSGEN (C0LH,32)
         DSGEN (C0LJ,32)
         DSGEN (C0LK,32)
         DSGEN (C0LL,32)
         DSGEN (C1LB,32)
         DSGEN (C1LC,32)
         DSGEN (C1LD,32)
         DSGEN (C1LE,32)
         DSGEN (C1LF,32)
         DSGEN (C1LG,32)
         DSGEN (C1LH,32)
         DSGEN (C1LJ,32)
         DSGEN (C1LK,32)
         DSGEN (C1LL,32)
         DSGEN (C2LB,32)
         DSGEN (C2LC,32)
         DSGEN (C2LD,32)
         DSGEN (C2LE,32)
         DSGEN (C2LF,32)
         DSGEN (C2LG,32)
         DSGEN (C2LH,32)
         DSGEN (C2LJ,32)
         DSGEN (C2LK,32)
         DSGEN (C2LL,32)
         DSGEN (C3LB,32)
         DSGEN (C3LC,32)
         DSGEN (C3LD,32)
         DSGEN (C3LE,32)
         DSGEN (C3LF,32)
         DSGEN (C3LG,32)
         DSGEN (C3LH,32)
         DSGEN (C3LJ,32)
         DSGEN (C3LK,32)
         DSGEN (C3LL,32)
         DSGEN (C4LB,32)
         DSGEN (C4LC,32)
         DSGEN (C4LD,32)
         DSGEN (C4LE,32)
         DSGEN (C4LF,32)
         DSGEN (C4LG,32)
         DSGEN (C4LH,32)
         DSGEN (C4LJ,32)
         DSGEN (C4LK,32)
         DSGEN (C4LL,32)
         DSGEN (C5LB,32)
         DSGEN (C5LC,32)
         DSGEN (C5LD,32)
         DSGEN (C5LE,32)
         DSGEN (C5LF,32)
         DSGEN (C5LG,32)
         DSGEN (C5LH,32)
         DSGEN (C5LJ,32)
         DSGEN (C5LK,32)
         DSGEN (C5LL,32)
         DSGEN (C6LB,32)
         DSGEN (C6LC,32)
         DSGEN (C6LD,32)
         DSGEN (C6LE,32)
         DSGEN (C6LF,32)
         DSGEN (C6LG,32)
         DSGEN (C6LH,32)
         DSGEN (C6LJ,32)
         DSGEN (C6LK,32)
         DSGEN (C6LL,32)
         DSGEN (DARLNGTH,16),(,48)
         DSGEN (SYSSTAT,1,0,7)
         DSGEN (AREADT,1,0,15)
         DSGEN (ERRTYPE,1,0,7)
         DSGEN (RMSACTN,1,0,7)
         DSGEN (RMSINFO,1,0,7)
         DSGEN (WAITSUFF,8),(,8),(MCHFSAR,32),(,32)
         DSGEN (TRNSMOD,32,0,7)
         DSGEN (MCHPDR,1,0,7,0,7)
         DSGEN (MCHFSAV,32),(MCHFSEAV,32),(MCHPDARI,32),(MCHTCBCU,32)
LOGEND   EQU   *-2
IFCELEX1 CSECT
***********************************************************************
*
***********************************************************************
ENTRYPTR DC    A(FORMAT1)
TABLNAME DC    CL8'IFCELEX1'
REG9     DS    F
SAVE     DS    F
***
*              ***     SPECIAL ROUTINES AREA     ***
*
***********************************************************************
         USING INDEPEND,R2
ISITVS2  STM   R5,R8,XSAVE             SAVE REGS
         CLI   XKEY,H13                IS IT VS2?
         BE    ISVS2                   YES
FIN      SR    R15,R15                 ELIM. LABEL
         LM    R5,R8,XSAVE
         BR    R14
ISVS2    SR    R5,R5
         L     R5,LINA
         ST    R5,REG9
         L     R6,LABA
         ST    R6,SAVE
         B     FIN
NOTVS2   STM   R5,R8,XSAVE
         L     R5,LINC
         ST    R5,REG9
         B     FIN
LINA     DC    A(LINE1-4)
LABA     DC    A(LAB1-1)
LINC     DC    A(VS2DUMP-4)
************************************************************** @XA21819
* THIS ROUTINE WILL SET THE PROPER DUMP SIZE TO DUMP THE WHOLE @XA21819
* RECORD BASED ON THE SIZE WHICH PRECEDES THE START OF THE     @XA21819
* MCH RECORD.                                                  @XA21819
************************************************************** @XA21819
DUMPSET  STM   R4,R8,XSAVE             SAVE WORK REGS          @XA21819
         S     R4,TWO                  BACK UP PTR TO REC LEN  @XA21819
         MVC   WORKSIZE(2),0(R4)       GET RECORD LENGTH       @XA21819
         SR    R5,R5                   ZERO REG                @XA21819
         LH    R5,WORKSIZE             R5 = RECORD LENGTH      @XA21819
         SH    R5,HTWO                 GET ACTUAL RECD LENGTH  @XA21819
         BC    3,DUMPSET1              NO, LENGTH > ZERO       @XA21819
         MVC   DUMPSIZE(2),DUMPAMT     YES, USE DEFAULT SIZE   @XA21819
         B     DUMPDONE                EXIT                    @XA21819
DUMPSET1 STH   R5,WORKSIZE             STORE FOR MOVE TO AVOID @XA21819
         MVC   DUMPSIZE(2),WORKSIZE    BOUNDARY PROBLEMS       @XA21819
DUMPDONE SR    R15,R15                 DO NOT PRINT            @XA21819
         LM    R4,R8,XSAVE             RESTORE WORK REGS       @XA21819
         BR    R14                     EXIT                    @XA21819
TWO      DC    F'00000002'                                     @XA21819
HTWO     DC    H'0002'                                         @XA21819
WORKSIZE DC    H'0000'                 WORK AREA               @XA21819
DUMPAMT  DC    H'1754'                 DUMPSIZE IF LEN IS BAD  @XA21819
************************************************************** @XA21819
ROUT0    DS    0C
         STM   R3,R4,SAVER34            SAVE PRINT BFR PTR- LOG START
         BR    R14                      RETURN
ROUT1    DS    0C
         STM   R3,R8,XSAVE              SAVE ROUTINE REGISTERS
         L     R3,SAVER3                LOAD ADR OF PRINT BFR
         L     R7,L0(R4)                LOAD LOG DATA
         LA    R3,L3(R3)                INCREMENT PRINT BFR POINTER
         LA    R8,L4                    LOAD BYTE COUNT
ROUT1A   DS    0C
         LA    R5,L6                    LOAD BIT COUNT
ROUT1B   DS    0C
         SR    R6,R6                    CLEAR REGISTER R6
         MVI   L0(R3),CB                ASSUME 0 - SET BFR TO BLANK
         SLDL  R6,L1                    SHIFT DATA BIT INTO R6
         LTR   R6,R6                    TEST VALUE IN R6
         BZ    ROUT1C                   BRANCH IF R6 ZERO
         MVI   L0(R3),CS                MOVE SPLAT TO PRINT BFR
ROUT1C   DS    0C
         LA    R3,L3(R3)                INCREMENT PRINT BFR POINTER
         BCT   R5,ROUT1B                BRANCH ON BIT COUNT
         SLL   R7,L2                    BYPASS BITS 6 AND 7
         BCT   R8,ROUT1A                BRANCH ON BYTE COUNT
         LM    R3,R8,XSAVE              RESTORE REGISTERS
SKIPPER  BR    R14                      RETURN
C165     DC    X'0165'
C168     DC    X'0168'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
CC1      EQU   1
CC2      EQU   2
CC4      EQU   4
CC7      EQU   7
CC8      EQU   8
L0       EQU   0
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4
L5       EQU   5
L6       EQU   6
L7       EQU   7
L8       EQU   8
L9       EQU   9
L10      EQU   10
H13      EQU   X'13'
CB       EQU   C' '
CS       EQU   C'*'
XWORK    DS    D
XSAVE    DS    6F
SAVER34  DS    2F
SAVER3   EQU   SAVER34
SAVER4   EQU   SAVER34+4
***********************************************************************
*
FORMAT1  DC    F'0'
FORMAT2  DC    F'0'
LABELPTR DC    A(LABLAREA)
DISP     DC    FL2'0'
***********************************************************************
ALTLINE  LINE  (1,1),(19,1),SKIP=1
         ROUTINE  C0LB,ROUT0
        LABEL  'M/F FRAME C0 STORAGE CONTROLS'
         LINE  ,(12,1)
         LABEL 'PREFIX HOLD REGISTER             SS OSC SS X INTRLEAVE X
               RS    CONFIG'                                   CZ30LIFR
         LINE  ,(3,1)
         LABEL 'P1  8  9 10 11 12 13 14 15 P2 16 17 18 19 IND ON DTCON *
               S     4  EN    V'                               CZ30LIFR
         LINE  ,(1,1)
         ROUTINE  C0LB,ROUT1
       LABEL  'LB'
         LINE  ,(3,1)
       LABEL  'CONF 0                              CONF 4'
         LINE  ,(4,1)
       LABEL  '0  1  2  3  L  R                    0  1  2  3  L  R'
         LINE  ,(1,1)
         ROUTINE  C0LC,ROUT1
       LABEL  'LC'
         LINE  ,(3,1)
       LABEL  'CONF 1                              CONF 5'
         LINE  ,(4,1)
       LABEL  '0  1  2  3  L  R                    0  1  2  3  L  R'
         LINE  ,(1,1)
         ROUTINE  C0LD,ROUT1
       LABEL  'LD'
         LINE  ,(3,1)
       LABEL  'CONF 2                              CONF 6'
         LINE  ,(4,1)
         LABEL '0  1  2  3  L  R                    0  1  2  3  L  R'
         LINE  ,(1,1)
         ROUTINE  C0LE,ROUT1
       LABEL  'LE'
         LINE  ,(3,1)
         LABEL 'CONF 3                              CONF 7'
         LINE  ,(4,1)
         LABEL '0  1  2  3  L  R                    0  1  2  3  L  R'
         LINE  ,(1,1)
         ROUTINE    C0LF,ROUT1
       LABEL  'LF'
         LINE  ,(3,1)
       LABEL  '                                    STOR SZE LOCAL'
         LINE  ,(4,1)
         LABEL '                                    0  1  2  3'
         LINE  ,(1,1)
         ROUTINE    C0LG,ROUT1
       LABEL  'LG'
         LINE  ,(3,1)
       LABEL  '               MAINT       IPU      STOR SZE REMTE      C
                    TST   '
         LINE  ,(4,1)
        LABEL '              CPU APU     ADR       0  1  2  3          X
                   LTH'
         LINE  ,(1,1)
         ROUTINE  C0LH,ROUT1
       LABEL  'LH'
         LINE  ,(1,1),SKIP=1
         ROUTINE  C0LJ,ROUT1
       LABEL  'LJ'
         LINE  ,(3,1)
       LABEL  'STOR PROT CHECKS                 PRFX'
         LINE  ,(3,1)
       LABEL  '   IK    OK  R  C                CHK'
         LINE  ,(1,1),SKIP=3
         ROUTINE  C0LK,ROUT1
       LABEL  'LK'
        LINE   ,(1,1),SKIP=1
       LABEL  'LL'
        LINE   ,(3,1)
        LABEL  '                           FILE'
        LINE   ,(4,1),SKIP=3
        LABEL  '                           CHK'
C1LINE   LINE  ,(19,1),SKIP=1
C1LAB  LABEL  'M/F FRAME C1 SEGMENT TABLE ORIGIN STACK'
         LINE  (1,1),(26,1),SKIP=1
MFC1   LABEL  'STOK BFR REG                       CR 0 PSW'
         LINE  ,(7,1)
       LABEL  '8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  8 C
               11  P'
         LINE  ,(1,1),SKIP=3
         ROUTINE  C1LB,ROUT1
       LABEL  'LB'
         LINE  ,(1,1),SKIP=1
       LABEL  'LC'
         LINE  ,(6,1)
       LABEL  '      PSW/CR          CMP  BLK                XLAT CTL XC
               L'
         LINE  ,(6,1)
       LABEL  '                      FUL  MOD                   0  1  BX
               SY'
         LINE  ,(1,1)
         ROUTINE  C1LD,ROUT1
       LABEL  'LD'
         LINE  ,(5,1)
       LABEL  'STK RP ST P=5        DLAT  INV DAT DLAT        REQUESTS'
         LINE  ,(6,1)
       LABEL  'ON LH VD TGR      RSSRCH DLAT ENT 0  1          XLT K'
         LINE  ,(1,1)
         ROUTINE  C1LE,ROUT1
       LABEL  'LE'
         LINE  ,(52,1)
       LABEL  'XLATOR INGATES'
         LINE  ,(53,1)
       LABEL  'SAL STE PTE'
         LINE  ,(1,1)
         ROUTINE  C1LF,ROUT1
       LABEL  'LF'
         LINE  ,(54,1)
       LABEL  'TAR INGATES'
         LINE  ,(54,1)
       LABEL  'LAR TL RA'
         LINE  ,(1,1)
         ROUTINE  C1LG,ROUT1
       LABEL  'LG'
         LINE  ,(53,1)
       LABEL  'DLAT CTRLS'
         LINE  ,(53,1)
       LABEL  'SSK  W  R'
         LINE  ,(1,1)
         ROUTINE  C1LH,ROUT1
       LABEL  'LH'
         LINE  ,(53,1)
       LABEL  'EXCEPTIONS'
         LINE  ,(53,1)
       LABEL  'SEG PG SPL'
         LINE  ,(1,1)
         ROUTINE  C1LJ,ROUT1
       LABEL  'LJ'
         LINE  ,(24,1)
       LABEL  'STOK CHECKS               TIR TAL HS CKS'
         LINE  ,(23,1)
       LABEL  'BFR    SP  ID              PTY  8 16 24'
         LINE  ,(1,1)
         ROUTINE  C1LK,ROUT1
       LABEL  'LK'
         LINE  ,(24,1)
       LABEL  'DLAT CHECKS                   TAL FS CKS'
         LINE  ,(24,1)
       LABEL  'MC  C IK OK  RA                8 16 24'
         LINE  ,(1,1),SKIP=3
         ROUTINE  C1LL,ROUT1
       LABEL  'LL'
         LINE  ,(19,1),SKIP=1
MFC3   LABEL  'M/F FRAME C3 CONTROL REGISTERS'
         LINE  ,(24,1)
       LABEL  'CONTROL REGISTER 0 BITS 0-15'
         LINE  ,(13,1)
       LABEL  'P BM  M  2  3  4  5  6  7  P PG SZ/PE/SG SZ  13 14 15'
         LINE  ,(1,1)
         ROUTINE  C3LB,ROUT1
       LABEL  'LB'
         LINE  ,(24,1)
       LABEL  'CONTROL REGISTER 0 BITS 16-31'
         LINE  ,(13,1)
       LABEL  'P 16 17 18 19 CC CT 22 23  P IT IK ES  27 28 29 30 31'
         LINE  ,(1,1)
         ROUTINE  C3LC,ROUT1
       LABEL  'LC'
         LINE  ,(24,1)
       LABEL  'CONTROL REGISTER 1 BITS 0-15'
         LINE  ,(13,1)
       LABEL  'P  0  SGMNT TABLE LGTH  7  P SGMT TAB ORG AD BITS 0-7'
         LINE  ,(1,1)
         ROUTINE  C3LD,ROUT1
       LABEL  'LD'
         LINE  ,(24,1)
       LABEL  'CONTROL REGISTER 1 BITS 16-31'
         LINE  ,(13,1)
       LABEL  'P  SGMNT TABLE ORG ADDR  BITS 8-17  26 27 28 29 30 31'
         LINE  ,(1,1)
         ROUTINE  C3LE,ROUT1
       LABEL  'LE'
         LINE  ,(24,1)
       LABEL  'CONTROL REGISTER 2 BITS 0-15'
         LINE  ,(13,1)
       LABEL  'P  0  1  2  CHANNEL  6  7  P   CHANNEL    12 13 14 15'
         LINE  ,(1,1)
         ROUTINE  C3LF,ROUT1
       LABEL  'LF'
         LINE  ,(24,1)
       LABEL  'CONTROL REGISTER 2 BITS 16-31'
         LINE  ,(13,1)
       LABEL  'P  16 17 18 19 20 21 22 23 P  24 25 26 27 28 29 30 31'
         LINE  ,(1,1),SKIP=3
         ROUTINE  C3LG,ROUT1
       LABEL  'LG'
         LINE  ,(1,1),SKIP=3
       LABEL  'LH'
         LINE  ,(1,1),SKIP=3
       LABEL  'LJ'
         LINE  ,(1,1),SKIP=3
       LABEL  'LK'
         LINE  ,(1,1),SKIP=3
       LABEL  'LL'
         LINE  ,(19,1),SKIP=1
MFC5   LABEL  'M/F FRAME C5 CONTROL REGISTERS'
         LINE  ,(24,1)
       LABEL  'CONTROL REGISTER 8 BITS 0-15'
         LINE  ,(13,1)
       LABEL  'P  0  1  2  3  4  5  6  7  P  8  9  10 11 12 13 14 15'
         LINE  ,(1,1)
         ROUTINE  C5LB,ROUT1
       LABEL  'LB'
         LINE  ,(24,1)
       LABEL  'CONTROL REGISTER 8 BITS 16-31'
         LINE  ,(13,1)
       LABEL  'P 16 17 18 19 20 21 22 23  P 24 25 26 27 28 29 30 31'
         LINE  ,(1,1)
         ROUTINE  C5LC,ROUT1
       LABEL  'LC'
         LINE  ,(24,1)
       LABEL  'CONTROL REGISTER 9 BITS 0-15'
         LINE  ,(13,1)
       LABEL  'P SB FTH SA GA 4  5  6  7  P  8  9  10 11 12 13 14 15'
         LINE  ,(1,1)
         ROUTINE  C5LD,ROUT1
       LABEL  'LD'
         LINE  ,(24,1)
       LABEL  'CONTROL REGISTER 9 BITS 16-31'
         LINE  ,(13,1)
       LABEL  'P  0  1  2  3  4  5  6  7  P  8  9  10 11 12 13 14 15'
         LINE  ,(1,1)
         ROUTINE  C5LE,ROUT1
       LABEL  'LE'
         LINE  ,(24,1)
       LABEL  'CONTROL REGISTER 10 BITS 0-15'
         LINE  ,(13,1)
       LABEL  'P  0  1  2  3  4  5  6  7  P  8  9 10 11 12 13 14 15'
         LINE  ,(1,1)
         ROUTINE  C5LF,ROUT1
       LABEL  'LF'
         LINE  ,(24,1)
       LABEL  'CONTROL REGISTER 10 BITS 16-31'
         LINE  ,(13,1)
       LABEL  'P 16 17 18 19 20 21 22 23  P 24 25 26 27 28 29 30 31'
         LINE  ,(1,1)
         ROUTINE  C5LG,ROUT1
       LABEL  'LG'
         LINE  ,(24,1)
       LABEL  'CONTROL REGISTER 11 BITS 0-15'
         LINE  ,(13,1)
       LABEL  'P  0  1  2  3  4  5  6  7  P  8  9 10 11 12 13 14 15'
         LINE  ,(1,1)
         ROUTINE  C5LH,ROUT1
       LABEL  'LH'
         LINE  ,(24,1)
       LABEL  'CONTROL REGISTER 11 BITS 16-31'
         LINE  ,(13,1)
       LABEL  'P 16 17 18 19 20 21 22 23  P 24 25 26 27 28 29 30 31'
         LINE  ,(1,1),SKIP=3
         ROUTINE  C5LJ,ROUT1
       LABEL  'LJ'
         LINE  ,(1,1),SKIP=3
       LABEL  'LK'
         LINE  ,(1,1),SKIP=3
       LABEL  'LL'
         LINE  ,(19,1),SKIP=1
MFC6   LABEL  'M/F FRAME C6 CONTROL REGISTERS'
         LINE  ,(1,1),SKIP=3
       LABEL  'LB'
         LINE  ,(1,1),SKIP=3
       LABEL  'LC'
         LINE  ,(1,1),SKIP=3
       LABEL  'LD'
         LINE  ,(1,1),SKIP=1
       LABEL  'LE'
         LINE  ,(24,1),SKIP=1
       LABEL  'CONTROL REGISTER 14 BITS 0-15'
         LINE  ,(13,1),
       LABEL  'P HS SM ELM 3 RMR 5 DRM 7  P AM AFL 10 11 12 13 14 15'
         LINE  ,(1,1)
         ROUTINE  C6LF,ROUT1
       LABEL  'LF'
         LINE  ,(24,1)
       LABEL  'CONTROL REGISTER 14 BITS 16-31'
         LINE  ,(13,1)
       LABEL  'P  16 17 18 19 20 21 22 23 P  24 25 26 27 28 29 30 31'
         LINE  ,(1,1)
         ROUTINE  C6LG,ROUT1
       LABEL  'LG'
         LINE  ,(24,1)
       LABEL  'CONTROL REGISTER 15 BITS 0-15'
         LINE  ,(13,1)
       LABEL  'P  0  1  2  3  4  5  6  7  P  8  9 10 11 12 13 14 15'
         LINE  ,(1,1)
         ROUTINE  C6LH,ROUT1
       LABEL  'LH'
         LINE  ,(24,1)
       LABEL  'CONTROL REGISTER 15 BITS 16-31'
         LINE  ,(13,1)
       LABEL  'P 16 17 18 19 20 21 22 23  P 24 25 26 27 28 29 30 31'
         LINE  ,(1,1),SKIP=3
         ROUTINE  C6LJ,ROUT1
       LABEL  'LJ'
         LINE  ,(1,1),SKIP=3
       LABEL  'LK'
         LINE  ,(1,1),SKIP=3
       LABEL  'LL'
         LINE  ,,SKIP=1
         ROUTINE   XKEY,ISITVS2
         LABEL ''
         LINE  ,,SKIP=1
         ROUTINE   B6LG,SKIPPER
         LABEL ''
         LINE  ,(19,1),SKIP=2
         LABEL 'MACHINE CHECK STATUS FIELD'
         LINE  (41,),(1,),SKIP=1
         HEX   DARLNGTH,0,2B
         LABEL 'MCSTATD FIELD LENGTH'
         LINE  ,(5,)
         LABEL '--- SYSTEM STATUS ---'
         LINE  (35,35),(1,40)
         BIN   SYSSTAT0
         BIN   SYSSTAT1
         LABEL 'HARDWARE RECOVERY','SOFTWARE RECOVERY'
         LINE
         BIN   SYSSTAT2
         BIN   SYSSTAT3
         LABEL 'TASK ABORTED','TASK SET NON-DISPATCHABLE'
         LINE
         BIN   SYSSTAT4
         BIN   SYSSTAT5
         LABEL 'OPERATING SYSTEM TERMINATION','QUIET MODE IN EFFECT'
         LINE  ,(5,)
         LABEL '--- DAMAGE AREA ---'
         LINE  ,(1,40)
         BIN   AREADT0
         BIN   AREADT1
         LABEL 'MAIN STORAGE','BUFFER'
         LINE
         BIN   AREADT2
         BIN   AREADT3
         LABEL 'CONTROL STORAGE','INTERVAL TIMER'
         LINE
         BIN   AREADT4
         BIN   AREADT5
         LABEL 'PROCESSOR','CHANNEL ERROR'
         LINE
         BIN   AREADT6
         BIN   AREADT7
         LABEL 'TOD CLOCK','SYSTEM DAMAGE'
         LINE  ,(5,)
         LABEL '--- ERROR TYPE ---'
         LINE  ,(1,40)
         BIN   ERRTYPE0
         BIN   ERRTYPE1
         LABEL 'INTERMITTENT','SOLID'
         LINE
         BIN   ERRTYPE2
         BIN   ERRTYPE3
         LABEL 'DATA','RESERVED'
         LINE
         BIN   ERRTYPE4
         BIN   ERRTYPE5
         LABEL 'RESERVED','PROTECT'
         LINE  ,(5,)
         LABEL '--- RMS ACTION DATA ---'
         LINE  ,(1,40)
         BIN   RMSACTN0
         BIN   RMSACTN1
         LABEL 'LOOP TIME OUT','REPAIR'
         LINE
         BIN   RMSACTN2
         BIN   RMSACTN3
         LABEL 'STORAGE RECONFIGURE','BUFFER RECONFIGURE'
         LINE  ,(5,)
         LABEL '--- RMS INFORMATION STATUS ---'
         LINE  ,(1,40)
         BIN   RMSINFO0
         BIN   RMSINFO1
         LABEL 'RESERVED','INVALID MCI CODE'
         LINE
         BIN   RMSINFO2
         BIN   RMSINFO3
         LABEL 'INVALID FAILING STORAGE ADDRESS','PROGRAM CHECK IN MCH'
         LINE  (15,),(5,),SKIP=1
         LABEL '--- HISTORY OF TRANSIENT MODULES ---'
         LINE  (1,15)
         HEX   TRNSMOD0,1,4B
         HEX   TRNSMOD1,1,4B
         HEX   TRNSMOD2,1,4B
         HEX   TRNSMOD3,1,4B
         LABEL ''
         LINE  ,,SKIP=2
         HEX   TRNSMOD4,1,4B
         HEX   TRNSMOD5,1,4B
         HEX   TRNSMOD6,1,4B
         HEX   TRNSMOD7,1,4B
         LABEL ''
         LINE  ,(5,),SKIP=1
         LABEL '--- PDAR ACTION ---'
         LINE  (35,35),(1,40)
         BIN   MCHPDR00
         BIN   MCHPDR01
         LABEL 'TERMINATION OF CURRENT TASK','RETRY POSSIBLE'
         LINE
         BIN   MCHPDR02
         BIN   MCHPDR03
         LABEL 'BYPASS(AFFECTED TASK) POSSIBLE','REPAIR UNSUCCESSFUL'
         LINE
         BIN   MCHPDR04
         BIN   MCHPDR05
         LABEL 'INDETERMINATE INSTRUCTION COUNTER','RESERVED'
         LINE  ,(5,)
         LABEL '--- FAILURE TYPE ---'
         LINE ,(1,40)
         BIN   MCHPDR10
         BIN   MCHPDR11
         LABEL 'SOLID STORAGE DATA ERROR','INTERMITTENT STOR. DATA ERR'
         LINE
         BIN   MCHPDR12
         BIN   MCHPDR13
         LABEL 'SOLID SPF KEY ERROR','INTERMITTENT SPF KEY ERROR'
         LINE  ,(5,)
         LABEL '--- OPERATING SYSTEM STATUS ---'
         LINE ,(1,40)
         BIN   MCHPDR20
         BIN   MCHPDR21
         LABEL 'WAIT PSEUDO TASK','PAGE SUPERVISOR TASK'
         LINE
         BIN   MCHPDR22
         BIN   MCHPDR23
         LABEL 'MASTER SCHEDULER TASK','SYSTEM TASK'
         LINE
         BIN   MCHPDR24
         BIN   MCHPDR25
         LABEL 'PROBLEM PROGRAM TASK','CURRENT PSW DISABLED FOR I/O'
         LINE  ,(5,)
         LABEL '--- LOCATION OF FAILURE ---'
         LINE ,(1,40)
         BIN   MCHPDR30
         BIN   MCHPDR31
         LABEL 'NUCLEUS','SQA AREA'
         LINE
         BIN   MCHPDR32
         BIN   MCHPDR33
         LABEL 'LSQA AREA','PQA'
         LINE
         BIN   MCHPDR34
         BIN   MCHPDR35
         LABEL 'PAGEABLE AREA','FIXED PAGE AREA'
         LINE
         BIN   MCHPDR36
         BIN   MCHPDR37
         LABEL 'V=R ADDRESS AREA','CRITICAL AREA'
         LINE  ,(5,)
         LABEL '--- REQUESTED OPERATOR AWARENESS ---'
         LINE ,(1,40)
         BIN   MCHPDR50
         BIN   MCHPDR51
         LABEL 'SUPERVISOR DAMAGE MESSAGE','TASK ABNORM TERMINATION MSGC
               '
         LINE
         BIN   MCHPDR52
         BIN   MCHPDR53
         LABEL 'DAMAGED PAGE NOW UNAVAILABLE MSG','DAMAGED PAGE NOW DELC
               ETED MSG'
         LINE
         BIN   MCHPDR54
         BIN   MCHPDR55
         LABEL 'TASK NON-DISPATCHABLE MESSAGE','SOFTWARE RECOVERY MESSAC
               GE'
         LINE  ,(5,)
         LABEL '--- FOOTPRINTS ---'
         LINE ,(1,40)
         BIN   MCHPDR60
         BIN   MCHPDR61
         LABEL 'CHANGE BIT ACTIVE','KEY IN EXTERNAL PAGE TABLE'
         LINE
         BIN   MCHPDR62
         BIN   MCHPDR63
         LABEL 'PAGE RECURSION','PAGE FIX ACTIVE IN LOW END'
         LINE
         BIN   MCHPDR64
         BIN   MCHPDR65
         LABEL 'TRANSLATE ERROR','NO PAGE EXISTS'
         LINE
         BIN   MCHPDR66
         BIN   MCHPDR67
         LABEL 'RELOCATE OFF','LOW END INTERFACE ACTIVE'
         LINE  ,(5,)
         LABEL '--- FOOTPRINTS - INTERFACES ---'
         LINE ,(1,40)
         BIN   MCHPDR70
         BIN   MCHPDR71
         LABEL 'ABTERM INTERFACE ACTIVE','TRANSLATE INTERFACE ACTIVE'
         LINE
         BIN   MCHPDR72
         BIN   MCHPDR73
         LABEL 'FIND PAGE INTERFACE ACTIVE','PAGE DEQUEUE INTERFACE ACTC
               .'
         LINE
         BIN   MCHPDR74
         BIN   MCHPDR75
         LABEL 'PAGE ENQUEUE INTERFACE ACTIVE',                        C
               'STAT FUNCTION INTERFACE ACT.'
         LINE  ,,SKIP=2
         BIN   MCHPDR76
         BIN   MCHPDR77
         LABEL 'V=R RELEASE INTERFACE ACTIVE','POST INTERFACE ACTIVE'
         LINE  (45,1),(1,),SKIP=1
         HEX   MCHFSAR,0,4B
         LABEL 'FAILING STORAGE REAL ADDRESS'
         LINE
         HEX   MCHFSAV,0,4B
         LABEL 'BEGINNING FAILING STORAGE VIRTUAL ADDRESS'
         LINE
         HEX   MCHFSEAV,0,4B
         LABEL 'ENDING FAILING STORAGE VIRTUAL ADDRESS'
         LINE
         HEX   MCHPDARI,0,4B
         LABEL 'INSTRUCTION ADDRESS AT FAILURE'
         LINE  ,,SKIP=2
         HEX   MCHTCBCU,0,4B
         LABEL 'CURRENT TCB POINTER'
         LINE  ,,SKIP=1
         LABEL ''
         LINE  ,
         ROUTINE   XKEY,NOTVS2
         LABEL ''
LINE1    LINE  ,(52,),SKIP=2
         ROUTINE   XKEY,SKIPPER
LAB1     LABEL 'MACHINE-CHECK-ERROR INDICATORS'
         LINE  (5,35),(1,31)
         ROUTINE   XKEY,SKIPPER
         LABEL 'TERMINAL ERROR FLAGS','HARD-MACHINE ERROR FLAGS',      X
               'INTERMEDIATE ERROR','SOFT-MACHINE-ERROR FLAGS'
         LINE  (26,31),(1,31),SKIP=1
         BIN   (MCETEF0),(MCEMEF0),(MCEIEF0),(MCESEF0)
         LABEL 'RESERVED','ASSUMED HD ERR FLG','RESERVED',             X
               'ASSUMED SOFT ERROR '
         LINE  ,
         BIN   (MCETEF1),(MCEMEF1),(MCEIEF1),(MCESEF1)
         LABEL 'RESERVED','RESERVED','RESERVED','RESERVED'
         LINE  ,
         BIN   (MCETEF2),(MCEMEF2),(MCEIEF2),(MCESEF2)
         LABEL 'RESERVED','RESERVED','RESERVED','RESERVED'
         LINE  ,
         BIN   (MCETEF3),(MCEMEF3),(MCEIEF3),(MCESEF3)
         LABEL 'SECONDARY ERROR FLAG','RESERVED','RESERVED','RESERVED'
         LINE  ,
         BIN   (MCETEF4),(MCEMEF4),(MCEIEF4),(MCESEF4)
         LABEL 'CHECK STOP FLAG','REG/PSW INVALID FLAG',               X
               'TOD CLOCK ERROR FLAG','EXT DAMAGE FLAG'
         LINE  ,
         BIN   (MCETEF5),(MCEMEF5),(MCEIEF5),(MCESEF5)
         LABEL 'POWER WARNING FLAG','HARD STOR. ERR. FLAG',            X
               'CLOCK COMP ERR. FLAG','ECC CORR. STOR. ERR. FLG'
         LINE  ,
         BIN   (MCETEF6),(MCEMEF6),(MCEIEF6),(MCESEF6)
         LABEL 'SYS. DAMAGE FLAG','HARD PROTECT. KEY ERR.',            X
               'CPU TIMER ERR. FLAG','HIR CORR PROC. ERR FG'
         LINE  ,SKIP=2
         BIN   (MCETEF7),(MCEMEF7),(MCEIEF7),(MCESEF7)
         LABEL 'INVALID LOGOUT FLAG','INST. PROC. DAMAGE FLAG',        X
               'INTERVAL TIMER ERR. FLAG','BUFFER ERR. FLAG'
         LINE  ,(30),SKIP=2
         ROUTINE   XKEY,SKIPPER
         LABEL 'PROGRAM DAMAGE ASSESSMENT AND REPAIR'
         LINE  (30,32),(1,35),SKIP=2
         ROUTINE   XKEY,SKIPPER
         LABEL 'PDAR DATA','STOR. RECONFIG. STATUS',                   X
               'STORAGE RECONFIG. STATUS'
         LINE  (26,32),(1,32),SKIP=1
         BIN   (PDAR00),(PDAR10),(PDAR20)
         LABEL 'RESERVED','RESERVED','FR OFF LN/SCHED OFF LN'
         LINE  ,
         BIN   (PDAR01),(PDAR11),(PDAR21)
         LABEL 'RESERVED','RESERVED','INTERCEPT'
         LINE  ,
         BIN   (PDAR02),(PDAR12),(PDAR22)
         LABEL 'RESERVED','RESERVED','PERM. ERR. IN FRAME'
         LINE  ,
         BIN   (PDAR03),(PDAR13),(PDAR23)
         LABEL 'STORAGE RECONFIG.','RESERVED',                         X
               'FRAME-PERM. RES. SYS.'
         LINE  ,
         BIN   (PDAR04),(PDAR14),(PDAR24)
         LABEL 'STOR. REFIG. STST AVAIL.','RESERVED','FRAME USE SQA'
         LINE  ,
         BIN   (PDAR05),(PDAR15),(PDAR25)
         LABEL 'STOR REFIG. NOT ATTEMP.','RESERVED','FRAME USE LSQA'
         LINE  ,
         BIN   (PDAR06),(PDAR16),(PDAR26)
         LABEL 'RESERVED','STOR ERR SET IN FRAME','FRAME-FIXED PG DATA'
         LINE  ,,SKIP=2
         BIN   (PDAR07),(PDAR17),(PDAR27)
         LABEL 'RESERVED','FRAME-CHG IND. ON','FRAME-IS V=R OR SCHED.'
         LINE  (25,30),(1,),SKIP=2
         HEX   WDSIZE
         LABEL 'PHYSICAL WORD LENGTH'
         LINE  ,,SKIP=1
         LABEL ''
VS2DUMP  LINE  ,                                               @XA21819
         ROUTINE XKEY,DUMPSET                                  @XA21819
         LABEL ''                                              @XA21819
         DC    XL1'FF'                                         @XA21819
DUMPSIZE DC    AL2(0)                                          @XA21819
         DC    AL2(48)
         DC    AL2(232)
***********************************************************************
*              *****     LABEL AREA     *****
***********************************************************************
LABLAREA EQU   *
         LSTART
         END
