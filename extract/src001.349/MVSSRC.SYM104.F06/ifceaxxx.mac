 TITLE 'IFCEAXXX - VTAM RECORD EDIT'
*          THIS MODULE IN SUPPORT OF                            XL03004
         MACRO
&NAME    DSGEN ,
.*                            THIS MACRO GENERATES ONE DSECT WORD
.*                                 FORMATTED FOR THE SUBJECT LOG RECORD
.*                                 EACH OPERAND HAS TWO SUB LISTS. THE
.*                                 FIRST IS THE NAME OF THE LOG ITEM
.*                                 WHILE THE SECOND IS THE # OF BITS TO
.*                                 ALLOCATE FOR THIS ITEM. ITEMS MUST
.*                                 BE DEFINED CONTIGUOUSLY WITHOUT GAPS
.*                                 UNUSED BIT GROUPS MUST BE GIVEN
.*                                 DUMMY NAMES. THE NAMES PROVIDED FOR
.*                                 THE LOG ITEMS MAY THEN BE USED IN
.*                                 THE CONVERSION MACRO INSTRUCTIONS.
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         LCLB  &ONLY1,&CTIND
         LCLA  &START1,&START2,&END1,&END2
         LCLC  &SYMBOL,&EQUSYM
         LCLA  &OP,&COUNT,&BYTE,&EQUCNT
         ACTR  100000
         AIF   (&ITEMITR EQ 0).START
 MNOTE   20,'DSGEN MACRO OCCURRS AFTER ITEMSORT MACRO HAS BEEN ISSUED.'
         MEXIT
.START   AIF   (N'&SYSLIST(&OP+1) LT 3).LOOP
         AIF   ('&SYSLIST(&OP+1,3)' EQ 'EQU').LOOP     TEST FOR EQU
  AIF   ('&SYSLIST(&OP+1,3)' EQ '' OR '&SYSLIST(&OP+1,4)' EQ '').ERR1
         AIF   ('&SYSLIST(&OP+1,3)' GT '&SYSLIST(&OP+1,4)').ERR3
&START1  SETA  &SYSLIST(&OP+1,3)        GET START COUNT OF 1
&START2  SETA  &SYSLIST(&OP+1,4)        GET FIRST END COUNT
         AGO   .SET2A                   BRANCH AROUND
         AIF   ('&SYSLIST(&OP+1,5)' GT '&SYSLIST(&OP+1,6)').ERR3
.ERR1    MNOTE '**FIRST SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.SET2A   AIF   ('&SYSLIST(&OP+1,5)' EQ ''AND '&SYSLIST(&OP+1,6)' EQ '' X
               ).SET2                   TEST FOR NO SECOND
  AIF   ('&SYSLIST(&OP+1,5)' EQ '' OR '&SYSLIST(&OP+1,6)' EQ '').ERR2
&END1    SETA  &SYSLIST(&OP+1,5)        GET START COUNT OF 2
&END2    SETA  &SYSLIST(&OP+1,6)        GET END COUNT OF 2
         AGO   .LOOP
.SET2    ANOP
&ONLY1   SETB  1                        INDICATE ONLY ONE CONCATENATION
         AGO   .LOOP
.ERR2    MNOTE '**SECOND SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.ERR3    MNOTE '**START GREATER THAN END CONCATENATION**'
         MEXIT
.LOOP    ANOP
&OP      SETA  &OP+1
         AIF   (&OP GT N'&SYSLIST).DONE      TEST IF ALL DONE
&ITEMNBR SETA  &ITEMNBR+1
         AIF   ('&SYSLIST(&OP,2)' NE '').OK1
         MNOTE '**NULL BIT COUNT FIELD**'
         MEXIT
.OK1     ANOP
&SYMBOL  SETC  '&SYSLIST(&OP,1)'
         AIF   ('&SYMBOL' NE '').OK
*              *****     LOG ITEM SYMBOL NOT PROVIDED     *****
         AIF   ('&SYSLIST(&OP,3)' NE 'EQU').CNT
         AGO   .START                   GET NEXT
.OK      AIF   (N'&SYSLIST(&OP) LT 3).NO3    TEST FOR OLD FORMAT
         AIF   ('&SYSLIST(&OP,3)' EQ 'EQU').EQU   TEST FOR EQU
         AIF   (&ONLY1).OK2             TEST FOR ONLY ONE CONCAT
&SYMBOL  SETC  '&SYMBOL.&START1.&END1'       GET 1 AND 2 CONCAT
         AGO   .NO3                     BRANCH AROUND
.OK2     ANOP
&SYMBOL  SETC  '&SYMBOL.&START1'        GET 1 CONCATENATED
.NO3     ANOP
&SYMBOL  EQU   *+&BYTE
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL IN GLOBAL
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)
&SHIFT(&ITEMNBR) SETA &COUNT-&BYTE*8
.CNT     ANOP
&CTIND   SETB  1                        SET COUNT INDICATOR
&COUNT   SETA  &COUNT+&SYSLIST(&OP,2)
&BYTE    SETA  &COUNT/8
         AIF   (N'&SYSLIST(&OP) LT 3).START  TEST FOR OLD FORMAT
         AIF   (&ONLY1).TSTST           TEST FOR ONLY ONE CONCAT
         AIF   (&END1 EQ &END2).TSTST   TEST FOR SECOND END
&END1    SETA  &END1+1                  INCREMENT COUNT
&OP      SETA  &OP-1                    DECREMENT INCREMENT
         AGO   .LOOP                    GENERATE NEXT
.TSTST   ANOP
         AIF   (&START1 EQ &START2).LPDONE   TEST FOR END
         AIF   (&ONLY1).NSET1           TEST FOR ONLY ONE CONCAT
&END1    SETA  &SYSLIST(&OP,5)          RE-INIT SECOND START COUNT
.NSET1   ANOP
&OP      SETA  &OP-1                    DECREMENT INDEX
&START1  SETA  &START1+1                INCREMENT FIRST COUNT
         AGO   .LOOP                    GO DO NEXT
.LPDONE  ANOP
&ONLY1   SETB  0                        CLEAR INDICATOR
         AGO   .START                   GO TEST FOR MORE SUB-LISTS
.DONE    AIF   (&COUNT-&COUNT/8*8 NE 0).ERR  TEST FOR MULTIPLE OF EIGHT
         AIF   (&CTIND EQ 0).END        NO DS IF NO COUNT
&COUNT   SETA  &COUNT/8                 GET NUMBER OF BYTES
&NAME    DS    &COUNT.C
.END     MEXIT
.ERR     MNOTE '**BIT COUNT FLDS DO NOT TOTAL MULTIPLE OF 8**'
         MEXIT
.EQU     AIF   ('&SYSLIST(&OP,4)' NE '').EQU1     TEST FOR NULL LABEL
.ERR4    MNOTE '**EQU OPERAND OMITTED OR NOT FOUND**'
         MEXIT
.EQU1    AIF   (&SYSLIST(&OP,2) LT 16).EQU2  COUNT OVER FIFTEEN
*****               THE FOLLOWING STATEMENT                *****
*****     NUMBER OF BITS EXCEED 15 - DO NOT USE AS BIN     *****
.EQU2    ANOP
&EQUCNT  SETA  0                        CLEAR COUNTER
&EQUSYM  SETC  '&SYSLIST(&OP,4)'        GET EQU OPERAND
.EQULOP  ANOP
&EQUCNT  SETA  &EQUCNT+1                INCREMENT INDEX
         AIF   ('&ITEM(&EQUCNT)' EQ '&EQUSYM').EQUOUT  LABEL FOUND?
         AIF   (&EQUCNT EQ &ITEMNBR).ERR4    ALL TESTED?
         AGO   .EQULOP                  NO-GET NEXT
.EQUOUT  ANOP
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL NAME
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)    GET NUMBER OF BITS
&SHIFT(&ITEMNBR) SETA &SHIFT(&EQUCNT)   GET SHIFT COUNT
&SYMBOL  EQU   &EQUSYM                  THIS SYMBOL EQUATED
         AGO   .START                   RETURN FOR NEXT
         MEND
         MACRO
         HEX   ,
.*                            THIS MACRO FACILITATES GENERATION OF THE
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE
.*                                 CONVERSIONS.
.*                            &SYSLIST(&OP,1) - NAME OF DATA ITEM TO BE
.*                                 CONVERTED
.*                            &SYSLIST(&OP,2) - # OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO
.*                                 BACK UP FROM COLUMN FOR START OF
.*                                 PRINTING. THE LETTER B PRECEEDS THE
.*                                 NUMBER (B8) IF THE LATTER OPTION IS
.*                                 DESIRED. OMISSION OF THIS OPERAND
.*                                 FORCES OPTION 2 WITH BACKUP SPACING
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR
.*                                 IMPLICITLY B).
.*                            &SYSLIST(&OP,3) - NUMBER OF BYTES TO
.*                                 PROCESS. THIS NUMBER IS SUFFIXED
.*                                 WITH AN L,R, OR B TO STIPULATE
.*                                 PRINTING OF THE LEFT HALF, RIGHT
.*                                 HALF, OR BOTH HALVES OF THE BYTE
.*                                 RESPECTIVELY. OMISSION OF THIS
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES-
.*                                 SARY. THIS MACRO MUST BE THE FIRST
.*                                 MACRO INSTRUCTION ISSUED FOR THE
.*                                 SUBJECT LINE(S).
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         LCLB  &B,&SUB
         LCLA  &IBITS,&ISHIFT,&K,&T,&CODE,&BYTESP,&OP
         LCLC  &S,&LETTER,&ARG
       ACTR  500000
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP
&SUB     SETB  1
.LOOP    ANOP
&OP      SETA  &OP+1
&ARG     SETC  '&SYSLIST(&OP,1)'
         ITEMFIND  &ARG
         AIF   (&ITEMXPT EQ 0).MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&ITEMXPT)
&IBITS   SETA  &BITS(&ITEMXPT)
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).ALIGN
.ERR     MNOTE '**DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY**'
.MEXIT   MEXIT
.ALIGN   ANOP
&CODE    SETA  1
         AIF   (&SUB EQ 1).SUBA
&K       SETA  K'&SYSLIST(3)
         AGO   .SUBB
.SUBA    ANOP
&K       SETA  K'&SYSLIST(&OP,3)
.SUBB    ANOP
         AIF   (&K EQ 1).ERR3
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK
         MNOTE '**BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL**'
         MEXIT
.OK      AIF   (&SUB EQ 1).SUBC
         AIF   ('&SYSLIST(3)' EQ '').USEDEFN
&LETTER  SETC  '&SYSLIST(3)'(&K,1)
&S       SETC  '&SYSLIST(3)'(1,&K-1)
         AGO   .SUBD
.SUBC    ANOP
         AIF   ('&SYSLIST(&OP,3)' EQ '').USEDEFN
&LETTER  SETC  '&SYSLIST(&OP,3)'(&K,1)
&S       SETC  '&SYSLIST(&OP,3)'(1,&K-1)
.SUBD    ANOP
&BYTESP  SETA  &S
         AIF   ('&LETTER' EQ 'B').BOTH
         AIF   ('&LETTER' EQ 'L').LEFT
         AIF   ('&LETTER' EQ 'R').RIGHT
.ERR3    MNOTE '**PARAMETER 3 INCOMPLETE-DSGEN DEFINITION USED**'
         AGO   .USEDEFN
.RIGHT   ANOP
&CODE    SETA  2
         AGO   .L
.LEFT    ANOP
&CODE    SETA  1
         AGO   .L
.USEDEFN ANOP
&BYTESP  SETA  &IBITS/8
.BOTH    AIF   (&ISHIFT NE 0).ERR
&CODE    SETA  3
&T       SETA  &BYTESP*2-1
&S       SETC  '&T'
.OK2     AIF   (&ISHIFT EQ 0).L
&CODE    SETA  2
.L       ANOP
&B       SETB  1
         AIF   (&SUB EQ 1).SUBE
         AIF   ('&SYSLIST(2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(2)
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)
         AGO   .SUBF
.SUBE    ANOP
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
.SUBF    ANOP
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
         AIF   (&BYTESP GT 0 AND &BYTESP LT 16).SUB0
         MNOTE '**NO. OF BYTES OUTSIDE RANGE OF 1-15**'
         MEXIT
.SUB0    AIF   (&SUB EQ 1).SUBG
         DC    AL.12(&SYSLIST(1)-&DSECT),XL.4'A'
         AGO   .SUBH
.SUBG    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'A'
.SUBH    ANOP
         DC    BL.1'&B',FL.7'&S',AL.4(&BYTESP),FL.4'&CODE'
.OUT     ANOP
&ITEMXPT     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LOOP
.OUTA    ANOP
         MEND
         MACRO
         BIN   ,
.*                                 &SYSLIST(&OP,1) - NAME OF LOG ITEM
.*                                      RECORD DSECT
.*                                 $SYSLIST(&OP,2) - NBR OF SPACES
.*                                      TO SKIP ON MULTIPLE
.*                                      PRINT OR NBR OF SPACES
.*                                      TO BACK UP FROM COLUMN FOR
.*                                      START OF PRINTING. THE LETTER
.*                                      B PRECEEDS THE NUMBER (B5) IF
.*                                      THE LATTER IS DESIRED. OMISSION
.*                                      OF THIS OPERAND FORCES OPTION 2
.*                                      WITH BACKUP SPACING EQUAL TO
.*                                 THE NUMBER OF BITS IN THE ITEM
.*                                 DEFINITION (VIA MACRO 'DSGEN').
.*                            A LIMIT OF 15 BITS IS IMPOSED FOR THE
.*                                 TOTAL NUMBER OF BITS TO PRINT.
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         LCLB  &B,&SUB
         LCLA  &IBITS,&ISHIFT,&K
         LCLA  &TEMP,&T,&OP
         LCLC  &S,&ARG
          ACTR  500000
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP
&SUB     SETB  1
.LOOP    ANOP
&OP      SETA  &OP+1
&ARG     SETC  '&SYSLIST(&OP,1)'
         ITEMFIND &ARG
         AIF   (&ITEMXPT EQ 0).MEXIT
&ISHIFT  SETA  &SHIFT(&ITEMXPT)
&IBITS   SETA  &BITS(&ITEMXPT)
         AIF   (&SUB EQ 1).SUB00
         AIF   ('&SYSLIST(3)' EQ '').SETT
&IBITS   SETA  &SYSLIST(3)
         AGO   .SETT
.SUB00   AIF   ('&SYSLIST(&OP,3)' EQ '').SETT
&IBITS   SETA  &SYSLIST(&OP,3)
.SETT    ANOP
&T       SETA  &IBITS-1
&B       SETB  0
         AIF   (&IBITS GT 0 AND &IBITS LT 16).SUB0
         MNOTE '**NO. OF BITS OUTSIDE RANGE OF 1-15**'
.MEXIT   MEXIT
.SUB0    AIF   (&SUB EQ 1).SUBA
         AIF   ('&SYSLIST(2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(2)
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)
         AGO   .SUBB
.SUBA    ANOP
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
.SUBB    ANOP
&T       SETA  &S
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
&TEMP    SETA  &ISHIFT
         AIF   (&IBITS NE 1 OR &B NE 0).BIN2
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'&TEMP'
         AGO   .OUT
         AIF   (&SUB EQ 1).BIN2
         AIF   ('&SYSLIST(2)' NE '').BIN3
         AGO   .BIN2A
.BIN2    AIF   ('&SYSLIST(&OP,2)' NE '').BIN3
.BIN2A   ANOP
&B       SETB  1
.BIN3    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'C'
         DC    BL.1'&B',AL.7(&T),AL.4(&IBITS),FL.4'&ISHIFT'
.OUT     ANOP
&ITEMXPT     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LOOP
.OUTA    ANOP
         MEND
         MACRO
&NAME    LINE  &DATA,&LABEL,&SKIP=
.*                            THIS MACRO ESTABLISHES THE MARGINS OR
.*                                 COLUMN SETTINGS FOR EACH LINE. IT
.*                                 GENERATES NECESSARY CARRIAGE CONTROL
.*                                 ENTRIES. LASTLY IT DETERMINES THE
.*                                 NUMBER OF ENTRIES ASSOCIATED WITH
.*                                 THE PREVIOUS LINE AND STORES THAT #
.*                                 INTO THE APPROPRIATE BYTE.
.*                            &DATA(1) - CHARACTER POSITION TO BEGIN
.*                                 DATA.
.*                            &DATA(2) - # OF SPACES BETWEEN SUCCESSIVE
.*                                 DATA COLUMN STARTING CHARACTERS.
.*                            &LABEL(1) - CHAR. POS. TO BEGIN LABELS.
.*                            &LABEL(2) - # SPACES BETWEEN LINE'S LABEL
.*                                 STARTING CHARACTERS.
.*                            &SKIP= - # OF LINES TO ADVANCE CARRIAGE
.*                                 TO BEGIN NEXT PRINTED LINE.
.*                            NEW ENTRIES ARE GENERATED ONLY WHEN
.*                                 NECESSARY. OMISSION OF ITEMS MEANS
.*                                 THEY HAVE NOT CHANGED SINCE PREVIOUS
.*                                 SETTINGS. A LINE MACRO IS REQUIRED
.*                                 FOR EACH PRINTED LINE. IF NO SETTING
.*                                 CHANGES ARE REQUIRED ALL OPERANDS
.*                                 ARE OMITTED IN WHICH CASE ONLY THE
.*                                 # OF ENTRIES FOR THE PREVIOUS LINE
.*                                 IS COMPUTED. THIS MACRO MUST BE THE
.*                                 FIRST MACRO INSTRUCTION ISSUED FOR
.*                                 THE SUBJECT LINE
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         LCLA  &S
         AIF   (&INITIAL EQ 0 OR &DIAGTST EQ 0).DIAGSET
         AIF   (&DIAGSET EQ 0).DIAGSET
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
.DIAGSET ANOP
&DIAGSET SETB  1
&DIAGLIN SETB  1
&NAME    DS    0C
         AIF   (&INITIAL EQ 0).FIRSTLN
         LINEND
         AGO   .NTFIRST
.FIRSTLN ANOP
&NRENTSX SETC  'N&SYSNDX'
&INITIAL SETA  1
N&SYSNDX EQU   *
.NTFIRST ANOP
         DC    AL1(0)
         AIF   ('&DATA(1)' EQ '').CKDTABS
         AIF   (&DATA(1) EQ &DB).CKDTABS
&DB      SETA  &DATA(1)
         AGO   .AA
.CKDTABS AIF   ('&DATA(2)' EQ '').NCDATA
         AIF   (&DATA(2) EQ &DT).NCDATA
         AGO   .CC
.AA      AIF   ('&DATA(2)' EQ '').BB
         AIF   (&DATA(2) EQ &DT).BB
.CC      ANOP
&DT      SETA  &DATA(2)
.BB      DC    XL2'FFFE'
         DC    FL1'&DB'
         DC    FL1'&DT'
&NRENTS  SETA  &NRENTS+1
.NCDATA  ANOP
         AIF   ('&LABEL(1)' EQ '').CKLTABS
         AIF   (&LABEL(1) EQ &LB).CKLTABS
&LB      SETA  &LABEL(1)
         AGO   .AAA
.CKLTABS AIF   ('&LABEL(2)' EQ '').NCLABEL
         AIF   (&LABEL(2) EQ &LT).NCLABEL
         AGO   .CCC
.AAA     AIF   ('&LABEL(2)' EQ '').BBB
         AIF   (&LABEL(2) EQ &LT).BBB
.CCC     ANOP
&LT      SETA  &LABEL(2)
.BBB     DC    XL2'FFFF'
         DC    FL1'&LB'
         DC    FL1'&LT'
&NRENTS  SETA  &NRENTS+1
.NCLABEL ANOP
         AIF   ('&SKIP' NE '').CONT
         AIF   (&TEST EQ 0).NOCHANG
         AGO   .DEFALTA
.CONT    ANOP
         AIF   (&TEST EQ 0).AB
         AIF   ('&SKIP' EQ 'E').AB
&S       SETA  &SKIP
.DEFAULT ANOP
         AIF   (&SKIP EQ &LASTCC).DEFALTA
         ORG   &CARRCON+3
         DC    AL.3(0),AL.2(&S),AL.3(1)
         ORG
&LASTCC  SETA  &S
.DEFALTA ANOP
&TEST    SETB  0
         AGO   .DD
.AB      AIF   ('&SKIP' NE 'E').ABB
A&SYSNDX DC    X'FFFB8B00'              EJECT
         AGO   .ABC
.ABB     AIF   (&SKIP EQ &LASTCC).NOCHANG
A&SYSNDX DC    XL2'FFFB'
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
&LASTCC  SETA  &SKIP
&TEST    SETB  1
.ABC     ANOP
&CARRCON SETC  'A&SYSNDX'
&NRENTS  SETA  &NRENTS+1
.DD      ANOP
.NOCHANG ANOP
         MEND
         MACRO
         LINEND ,
.*                                 THIS MACRO IS USED ONLY BY THE LINE
.*                                 MACRO TO SET THE NUMBER OF ENTRIES
.*                                 ASSOCIATED WITH EACH LINE.
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         ORG   &NRENTSX
         DC    FL1'&NRENTS'
         ORG
&NRENTS  SETA  0
B&SYSNDX EQU   *
&NRENTSX SETC  'B&SYSNDX'
         MEND
           MACRO
&NAME    LABEL &LABEL1,&LABEL2,&LABEL3,&LABEL4,&LABEL5,&LABEL6,        C
               &LABEL7,&LABEL8
.*                                 THIS MACRO ALLOWS LABELS TO
.*                                 BE SPECIFIED FOR A GIVEN LINE. THE
.*                                 LABELS SHOULD BE ENCLOSED IN QUOTA-
.*                                 TION MARKS. THE COLUMN AND LINE END
.*                                 CONTROLS WILL BE INSERTED BY THE
.*                                 MACRO. OMITTED OPERANDS MEAN NO
.*                                 LABEL REQUIRED FOR RESPECTIVE
.*                                 COLUMN.
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         LCLC  &MARGIN,&TACK
         LCLC  &TEXT
         LCLA  &OP,&K,&START,&NRCHAR,&REMAIN
         AIF   (&INITIAL EQ 0).DIAGCLR
         AIF   (&DIAGTST EQ 0).DIAGCLR
         AIF   (&DIAGLIN EQ 1).DIAGCLR
         MNOTE '**NO LINE ASSOCIATED WITH PREVIOUS LABEL**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LINE
         LINE
.DIAGCLR ANOP
&DIAGSET SETB  0
&DIAGLIN SETB  0
&MARGIN  SETC  '*'
         AIF   ('&NAME' EQ '').LOOPOUT
&LPTR    SETA  &LPTR+1
&LBL(&LPTR) SETC '&NAME'
&LBLCTR(&LPTR) SETA &LABELNR+1
.LOOPOUT ANOP
&OP      SETA  &OP+1
&K       SETA  K'&SYSLIST(&OP)
         AIF (&K GE 2).NORM
&K       SETA  2
.NORM    ANOP
&START   SETA  2
         AIF (&OP LT N'&SYSLIST).NOTLAST
&MARGIN  SETC  '$'
.NOTLAST ANOP
&NRCHAR  SETA  8
&TACK    SETC  ''
.LOOPIN  ANOP
&REMAIN  SETA  &K-&START
         AIF (&REMAIN GE 8).MORE
&TACK    SETC  '&MARGIN'
&NRCHAR  SETA  &REMAIN
.MORE    ANOP
&TEXT    SETC  ''
         AIF (&REMAIN EQ 0).ENDTEXT
&TEXT    SETC  '&SYSLIST(&OP)'(&START,&NRCHAR)
.ENDTEXT ANOP
&LABELNR SETA  &LABELNR+1
&LABELS(&LABELNR) SETC '&TEXT'.'&TACK'
&START   SETA  &START+8
         AIF ('&TACK' EQ '').LOOPIN
         AIF ('&TACK' EQ '*').LOOPOUT
         MEND
         MACRO
&NAME    ROUTINE &LOGITEM,&RNAME
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS ROUTINE**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
&NAME    DC    AL.12(&LOGITEM-&DSECT),XL.4'D'
         DC    AL2(&RNAME-&CSECT)
&NRENTS  SETA  &NRENTS+1
         MEND
         MACRO
         ITEMFIND &ARG,&ITFDIAG=
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         LCLA  &A,&B,&X,&I
         LCLC  &C1,&C2,&S
         ACTR  100000
&ITEMXPT SETA  0                  INDICATE ITEM NOT FOUND.
         AIF   ('&ARG' NE '').NORM
         AIF   ('&ITFDIAG' EQ 'OFF'  OR  '&ITFDIAG' EQ 'ON').DIAGSET
  MNOTE 0,'ITEMFIND - OPERAND (&ITFDIAG) INVALID FOR ITFDIAG KEYWORD.'
         MEXIT
.DIAGSET ANOP
&DIAGITF SETB  ('&ITFDIAG' EQ 'ON')
         MEXIT
.NORM    AIF   (&ITEMITR GT 0).SORTED
         ITEMSORT
.SORTED  ANOP
&I       SETA  &ITEMITR           COMPUTED ITTERATION COUNT.
&X       SETA  &ITEMMDX           COMPUTED MAXIMUM INDEX.
&C1      SETC  '&ARG'             ISOLATE SEARCH ARGUMENT.
&C1      SETC  '&C1'.'       '(1,8-K'&C1) PAD TO FULL 8 CHARACTERS.
.SRCHUP  ANOP
&A       SETA  &A+&X              CURRENT TABLE SUBSCRIPT + INDEX.
&S       SETC  '+'
         AIF   (&A  GT &ITEMNBR  AND  NOT &DIAGITF).SRCHDN1
         AIF   (&A  LE &ITEMNBR).SRCH00
&C2      SETC  '*-OVER-*'
&I       SETA  &I-1               DECREMENT ITTERATION COUNTER.
&X       SETA  &X/2               HALVE INDEX VALUE.
 MNOTE *,'&ARG - &C2   ITRCTR = &I   PTR = &A&S &X'
         AIF   (&I GE 0).SRCHDWN  IF ITTERATION COUNT NOT EXPIRED.
.NOFIND  MNOTE  20,' ITEMFIND FAILED FOR NAME  &C1  '
         MEXIT
.SRCH00  ANOP
&I       SETA  &I-1               DECREMENT ITTERATION COUNTER.
         AIF   (&I LT 0).NOFIND   IF COUNT HAS GONE TO ZERO.
&X       SETA  &X/2               HALVE INDEX VALUE.
&B       SETA  &ITEMNDX(&A)       GET SUBSCRIPT FROM INDEX TABLE.
&C2      SETC  '&ITEM(&B)'.'       '(1,8-K'&ITEM(&B))  PAD COMPARAND.
         AIF   (NOT &DIAGITF).COMPARE
 MNOTE *,'&ARG - &C2   ITRCTR = &I   PTR = &A&S &X   POS = &B'
.COMPARE AIF   ('&C1' LT '&C2').SRCHDWN   ARGUMENT LOWER, MOVE DOWN.
         AIF   ('&C1' GT '&C2').SRCHUP    ARGUMENT HIGHER, MOVE UP.
&ITEMXPT SETA  &B                 FOUND. SET INDEX POINTER FOR RETURN.
&ITEMFST(&I+1)  SETA  &ITEMFST(&I+1)+1
         MEXIT
.SRCHDWN ANOP
&A       SETA  &A-&X              CURRENT POINTER MINUS INDEX VALUE.
&S       SETC  '-'
         AIF   (&A LE &ITEMNBR).SRCH00    IF WITHIN BOUNDS OF TABLE.
.SRCHDN1 ANOP
&I       SETA  &I-1               DECREMENT ITTERATION COUNTER.
&X       SETA  &X/2               HALVE INDEX VALUE.
         AIF   (&I GE 0).SRCHDWN  IF ITTERATION COUNT NOT EXPIRED.
         MNOTE  20,' ITEMFIND FAILED FOR NAME  &C1  '
         MEND
         MACRO
         ITEMSORT  &DUMMY
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         LCLA  &R,&ZI,&I,&A1,&A2,&TEMP
         LCLB  &SR,&GOTO,&TB
         LCLB  &SW(3000)
         LCLC  &C1,&C2
         ACTR  100000
&A1      SETA  0
         AIF   (&ITEMITR EQ 0).LOOP0   TEST FOR RE-ENTRY.
 MNOTE   0,'ITEMSORT MACRO OCCURRS MORE THAN ONCE. TABLE NOT RESORTED.'
         MEXIT
.LOOP0   ANOP
&A1      SETA  &A1+1
&ITEMNDX(&A1) SETA &A1
         AIF   (&A1 LT &ITEMNBR).LOOP0
         AIF   (&ITEMNBR LT 2).MEXIT
&A1      SETA  &ITEMNBR/2         HALF OF TOTAL ENTRIES.
&A2      SETA  0
.LOOP1   ANOP
&A2      SETA  &A2+1
&SW(&A2) SETB  1                  SET FIRST HALF OF SWITCHES TO 1.
         AIF   (&A2 LT &A1).LOOP1
.LOOP2   ANOP
&A2      SETA  &A2+1
&SW(&A2) SETB  0                  SET SECOND HALF TO ZERO.
         AIF   (&A2 LT &ITEMNBR).LOOP2
&R       SETA  0                  SET R TO FIRST TRIAL ITEM.
&ZI      SETA  &ITEMNBR-1         SET ZI TO LAST ITEM.
&I       SETA  &ZI-1
.T3      ANOP
&SR      SETB  (&SW(&R+1))        GET FLAG, WHICH WAY TO GO?
&R       SETA  (&R*2)+1+&SR       R=2R+(1 OR 2)
         AIF   (&R LE &I).T3
.T4      ANOP
&R       SETA  (&R-1)/2           R=(R-1)/2
&SR      SETB  (&SW(&R+1))        GET SUBTREE SELECT FLAG.
         AIF   (&SR EQ 0).T7
         AIF   (&GOTO EQ 0).T5
.T7      ANOP
&A1      SETA  &ITEMNDX(&R+1)
&A2      SETA  &ITEMNDX(&ZI+1)
&C1      SETC  '&ITEM(&A1)'.'       '(1,8-K'&ITEM(&A1))
&C2      SETC  '&ITEM(&A2)'.'       '(1,8-K'&ITEM(&A2))
         AIF   ('&C1' LT '&C2').T8
.T9      ANOP
&TEMP    SETA  &ITEMNDX(&R+1)     Z(R) TO TEMP.
&TB      SETB  (&SW(&R+1))
&ITEMNDX(&R+1) SETA &ITEMNDX(&ZI+1)    Z(I) TO Z(R)
&SW(&R+1) SETB (&SW(&ZI+1))
&ITEMNDX(&ZI+1) SETA &TEMP        TEMP TO Z(I)
&SW(&ZI+1) SETB (&TB)
&SR      SETB  (&SR EQ 0)
&SW(&R+1) SETB (&SR)
.T8      AIF   (&R GT 0).T4
&GOTO    SETB  1                  SET 'GO TO' T7
&ZI      SETA  &ZI-1
&I       SETA  &I-1
         AIF   (&I GE 0).T3
.MEXIT   ANOP
&ITEMITR SETA 1
&ITEMMDX SETA 1
.ITRLOOP ANOP
&ITEMITR SETA &ITEMITR+1
&ITEMMDX SETA &ITEMMDX+&ITEMMDX
         AIF  (&ITEMMDX LT &ITEMNBR).ITRLOOP
&ITEMITR SETA &ITEMITR-1
&ITEMMDX SETA &ITEMMDX/2
&A1      SETA &ITEMNBR
&A2      SETA &ITEMMDX
&TEMP    SETA &ITEMITR
 MNOTE *,' ITEMS = &A1, MAX INDEX = &A2, ITTERATION COUNT = &TEMP'
         MEXIT
.T5      ANOP
&TEMP    SETA  &ITEMNDX(&R+1)     Z(R) TO TEMP.
&TB      SETB  (&SW(&R+1))
&ITEMNDX(&R+1) SETA &ITEMNDX(&ZI+1)    Z(I) TO Z(R)
&SW(&R+1) SETB (&SW(&ZI+1))
&ITEMNDX(&ZI+1) SETA &TEMP        TEMP TO Z(I)
&SW(&ZI+1) SETB (&TB)
&SR      SETB  (&SR EQ 0)
&SW(&R+1) SETB (&SR)
         AGO   .T3
         MEND
         MACRO
         LSTART ,
.*                            THIS MACRO IS ISSUED WHEN THE LABEL AREA
.*                                 OF THE TABLE IS TO BEGIN.
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         LCLA  &NDX,&CTR
         ACTR  500000
         AIF   (&DIAGTST EQ 0).NODIAG
         AIF   (&DIAGSET EQ 0).NODIAG
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
.NODIAG  ANOP
         LINEND
&CTR     SETA  1
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   (&LBLCTR(&CTR) NE &NDX).NOLBL
&LBL(&CTR) DC  C'&LABELS(&NDX)'
&CTR     SETA  &CTR+1
         AGO   .LOOPCTL
.NOLBL   ANOP
         DC    C'&LABELS(&NDX)'
.LOOPCTL AIF   (&NDX LT &LABELNR).LOOP
         MEND
         MACRO
         CONVT ,
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         LCLB  &SUB
         LCLA  &OP
         LCLA  &OFFSET,&OUT,&IN,&IND,&IBITS,&ISHIFT
.*
.*       CONVERT BINARY TO DECIMAL
.*             &NAME IS THE REFERENCE INTO THE DSECT RECORD
.*             &OUT    IS THE NUMBER OF CHARS TO BE PUT ONTO PRINT LINE
.*                                      DEFAULT IS FOUR MAXIMUM IS 8
.*             &IN       IS THE NUMBER OF BYTES AS INPUT
.*                                      ERROR DEFAULT IS 2 MAXIMUM IS 4
.*
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LLOP
&SUB     SETB  1
.LLOP    ANOP
&OP      SETA  &OP+1
&OUT     SETA  4                        .BR NOT NULL ELSE SET TO 4
         AIF   (&SUB EQ 1).SUBA
         AIF   ('&SYSLIST(3)' EQ '').B  TEST FOR NULL INPUT
&OUT     SETA  &SYSLIST(3)             SET &OUT FROM INPUT
         AGO   .A
.SUBA    AIF   ('&SYSLIST(&OP,3)' EQ '').B
&OUT     SETA  &SYSLIST(&OP,3)          SET &OUT FROM INPUT
.A       AIF   (&OUT GT 0 AND &OUT LT 9).B   TEST RANGE
.AERR    MNOTE '*** BYTES OUT INCORRECTLY SPECIFIED DEFAULT USED ***'
&OUT     SETA  4
.B       AIF   (&SUB EQ 1).SUBB
         AIF   ('&SYSLIST(2)' EQ '').LOOP    BRANCH IF NULL
&IN      SETA  &SYSLIST(2)              .SET &IN FROM INPUT
         AGO   .BB
.SUBB    AIF   ('&SYSLIST(&OP,2)' EQ '').LOOP
&IN      SETA  &SYSLIST(&OP,2)          .SET &IN FROM INPUT
.BB      AIF   (&IN GT 0 AND &IN LT 5).D     TEST RANGE
.BERR    MNOTE '*** BYTES IN INCORRECTLY SPECIFIED DEFAULT USED ***'
&IN      SETA  2
         AGO   .D
.LOOP    ANOP                           .LOOP TO FIND &NAME IN DSECT
&IND     SETA  &IND+1                   .SET UP LOOP COUNTER
         AIF   ('&ITEM(&IND)' EQ '&SYSLIST(&OP,1)').FOUND
         AIF   (&IND LT &ITEMNBR).LOOP  .TEST FOR END OF DSECT
         MNOTE '*** LOG ITEM NOT DEFINED ***'
         MEXIT
.FOUND   ANOP
&IBITS   SETA  &BITS(&IND)              .SET UP NUMBER OF BITS SPEC
         AIF   (&IBITS-((&IBITS/8)*8) EQ 0).C  .TEST FOR MULTIPLE OF 8
         MNOTE '*** DATA NOT DEFINED A MULTIPLE OF 8 BITS ***'
         MEXIT
.C       ANOP
&IN      SETA  &IBITS/8                 .COMPUTE NUMBER OF BYTES
         AIF   (&IN LT 1 OR &IN GT 4).BERR  .TEST RANGE B IF IN ERROR
&ISHIFT  SETA  &SHIFT(&IND)             .SET UP FOR TEST OF BYTE BNDR
         AIF   (&ISHIFT EQ 0).D         .TEST FOR BYTE BNDRY
         MNOTE '*** DATA NOT ALIGNED ON A BYTE BOUNDARY ***'
         MEXIT
.*
.D       ANOP
&NRENTS  SETA  &NRENTS+1
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),AL.4(9)
         DC    X'&IN',X'&OUT'
&IND     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LLOP
.OUTA    ANOP
         MEND
***********************************************************
* THIS ENTIRE MODULE IS IN SUPPORT OF  XL30040            *
***********************************************************
         GBLC  &DSECT,&CSECT
IFCEAXXX CSECT
&CSECT   SETC  'IFCEAXXX'
&DSECT   SETC  'AXXX'
*
*                   EDIT TABLE FOR  V T A M  OBR RECORDS
*
*         DEVICE CODE= 4005     DEVICE TYPE = 3705             @XA20412
*                      4006                   3705             @XA20412
*                      4015                   3705             @XA20412
*                      4025                   3705             @XA20412
*                      4035                   3705      TERMINAL TYPE
*                     1009                 3270     IBM 1050  IBM 1030
*                     40F1                 3790     ATT 83B3  CC TWX
*                                                   WTTA      IBM 2260
*                                                   S/360     IBM 1060
*                                                   WU 115A   IBM 1130
*                                                   IBM 2780  IBM 2740
*                                                   2741C     2741P
*
*
AXXX     DSECT
DUM      EQU   *                                                XL03004
         DSGEN (CLASRC,8),(SYSREL,8),(SWITCH1,8),(SWITCH2,8)   @X50DQMC
         DSGEN (SPARE1,32)
         DSGEN (DAY,32)
         DSGEN (HOUR,32)
         DSGEN (SPARE2,8),(CPUSERL,24)
         DSGEN (CPUID,16),(SPARE3,16)
         DSGEN (JOBID1,32)
         DSGEN (JOBID2,32)
         DSGEN (FCCWCC,8),(FCCWDA,24)
         DSGEN (FCCWFL,8),(FCCW,8),(FCCWCT,16)
         DSGEN (CSWK,8),(CSWCA,24)
         DSGEN (CSWUS1,1),(CSWUS2,1),(CSWUS3,1),(CSWUS4,1),(CSWUS5,1), C
               (CSWUS6,1),(CSWUS7,1),(CSWUS8,1),(CSWCS1,1),(CSWCS2,1), C
               (CSWCS3,1),(CSWCS4,1),(CSWCS5,1),(CSWCS6,1),(CSWCS7,1), C
               (CSWCS8,1),(CSWCT,16)
         DSGEN (DEVDPD,8),(SECCUA,24)
         DSGEN (DEVTYP1,8),(DEVTYP1A,8),(DEVTYP2,16)
         DSGEN (SPARE4,8),(CUA,24)
         DSGEN (IORET,16),(SBCNT,16)                           @X50DQMC
         DSGEN (SIOCNT,16),(TEMPER,8),(SPARE5,8)
         DSGEN (OP1,8),(OP2,8),(VTAMFL,8),(SPARE6,8)
         DSGEN (RESOU01,64)
         DSGEN (SDR01,4),(SDR02,4),(SDR03,4),(SDR04,4),                X
               (SDR05,4),(SDR06,4),(SDR07,4),(SDR08,4),(SDR09,4),      X
               (SDR10,4),(SDR11,4),(SDR12,4),(SDR13,4),(SDR14,4),      X
               (SDR15,4),(SDR16,4),(SDR17,4),(SDR18,4),(SDR19,4),      X
               (SDR20,4)
         DSGEN (ATSNB01,1),(ATSNB02,1),(ATSNB03,1),(ATSNB04,1), XL03004X
               (ATSNB05,1),(ATSNB06,1),(ATSNB07,1),(ATSNB08,1), XL03004X
               (ATSNB11,1),(ATSNB12,1),(ATSNB13,1),(ATSNB14,1), XL03004X
               (ATSNB15,1),(ATSNB16,1),(ATSNB17,1),(ATSNB18,1)  XL03004
         DSGEN (ATSNB21,1),(ATSNB22,1),(ATSNB23,1),            @X50DQMCX
               (ATSNB24,1),(ATSNB25,1),(ATSNB26,1),            @X50DQMCX
               (ATSNB27,1),(ATSNB28,1),(ATSNB31,1),            @X50DQMCX
               (ATSNB32,1),(ATSNB33,1),(ATSNB34,1),            @X50DQMCX
               (ATSNB35,1),(ATSNB36,1),(ATSNB37,1),            @X50DQMCX
               (ATSNB38,1)                                     @X50DQMC
         ORG   JOBID1                                          @X50DQMC
         DSGEN (SHRDEV1,8),(SHRDEV1A,8),(SHRDEV2,16)           @X50DQMC
         DSGEN (SHRSDRL,8),(SHRTCUA,24)                        @X50DQMC
         DSGEN (SHRSDR01,4),(SHRSDR02,4),(SHRSDR03,4),(SHRSDR04,4),    X
               (SHRSDR05,4),(SHRSDR06,4),(SHRSDR07,4),(SHRSDR08,4),    X
               (SHRSDR09,4),(SHRSDR10,4),(SHRSDR11,4),(SHRSDR12,4),    X
               (SHRSDR13,4),(SHRSDR14,4),(SHRSDR15,4),(SHRSDR16,4),    X
               (SHRSDR17,4),(SHRSDR18,4),(SHRSDR19,4),(SHRSDR20,4)
         DSGEN (SHRSIOC,16)                                    @X50DQMC
         EJECT
IFCEAXXX CSECT
         USING *,R9
         USING AXXX,R2
         DC    A(ENTRIES)
         DC    CL8'IFCEAXXX'
XR9PTR   DC    F'0'
XLABELP  DC    F'0'
SHRFLAG  DC    F'0'      FLAG FOR 3790 FAMILY                  @X50DQMC
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
L0       EQU   0
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4
L5       EQU   5
L6       EQU   6
L7       EQU   7
L8       EQU   8
L9       EQU   9
L10      EQU   10
L11      EQU   11
L12      EQU   12
L13      EQU   13
L14      EQU   14
L15      EQU   15
L16      EQU   16
L17      EQU   17
L18      EQU   18
L19      EQU   19
L20      EQU   20
L23      EQU   23
L24      EQU   24
L26      EQU   26
L29      EQU   29
L36      EQU   36
L46      EQU   46
L49      EQU   49
L74      EQU   74                                              @X50DQMC
H05      EQU   X'05'                                           @X50DQMC
H0F      EQU   X'0F'
H15      EQU   X'15'
HE0      EQU   X'E0'
H80      EQU   X'80'
H40      EQU   X'40'
H20      EQU   X'20'
H10      EQU   X'10'
H21      EQU   X'21'
H23      EQU   X'23'
H25      EQU   X'25'
H29      EQU   X'29'
H2C      EQU   X'2C'                                           @X50DQMC
H5E      EQU   X'5E'                                           @X50DQMC
*                                                              @X50DQMC
CLRSGN   EQU   X'F0'
NORCE    EQU   X'60'
*
*        RESTORE REGISTERS USED BY ROUTINES IN THIS MODULE
*
RETURN   LM    R5,R8,XSAVE             RESTORE REGS
         BR    R14                     RETURN
*
*        SET    RELEASE NUMBER
*
CONVREL  STM   R5,R8,XSAVE              SAVE WORK REGS
         SR    R6,R6                    CLEAR R6
         IC    R6,L0(R4)                PICK UP REL & SYS VALUES
         SRDL  R6,L5                    SAVE REL NO IN R7
        SLL   R6,L2                    MULTIPLY SYS VALUE BY 4
         L     R8,XLABELP               PICK UP LABEL POINTER
         LA    R6,RELTAB(R6)            INDEX INTO TABLE OF SYSTEMS
         MVC   L0(L4,R8),L0(R6)         MOVE SYSTEM NAME INTO LABEL
         SR    R6,R6                    CLEAR R6
         SLDL  R6,L5                    RETREIVE REL NO.
         LTR   R6,R6                    IS IT ZERO
         BZ    NOREL                    BR-YES
         CVD   R6,WORK                  CONVERT IT
         UNPK  L0(L2,R3),WORK+L6(L2)    UNPACK IT INTO PRINT BUFF
         MVZ   L1(L1,R3),L0(R3)         MOVE ON PROPER ZONE
         B     RETURN                   EXIT
NOREL    MVC   L0(L4,R3),NONE           MOVE IN NONE FOR REL
         B     RETURN
*
U3270    STM   R5,R8,XSAVE         SAVE WORK REG1STERS         @XA20412
         CLC   L0(L2,R4),UNIT70    IS DEVICE 3270              @XA20412
         BE    RETURN              YES,RETURN                  @XA20412
         B     SET90               *                           @XA20412
*                                                              @XA20412
U3790    STM   R5,R8,XSAVE         SAVE WORK REGISTERS         @XA20412
         CLC   L0(L2,R4),UNIT90    IS DEVICE 3790
         BE    RETURN              YES,RETURN                  @XA20412
         B     SKIPOUT             *                           @XA20412
*                                                              @XA20412
U3705    STM   R5,R8,XSAVE         SAVE WORK REGISTERS         @XA20412
         LA    R6,VALTYPES         GET VALID 3705 CODES        @XA20412
         LA    R7,L5               TABLE LENGTH LESS ONE       @XA20412
U3705LP  CLC   L1(L1,R4),L0(R6)    IS THIS A MATCH             @XA20412
         BE    RETURN              YES,RETURN                  @XA20412
         LA    R6,L1(R6)           NO GET NEXT ID              @XA20412
         BCT   R7,U3705LP          AND CHECK AGAIN             @XA20412
*                                                              @XA20412
GOCHK    CLC   L0(L2,R4),UNIT90    IS DEVICE 3790              @XA20412
         BNE   GO3270              NO CHECK FOR 3270           @XA20412
         L     R6,L3790            YES,SET UP LABEL            @XA20412
         LA    R7,LINE3790-4       AND LINE POINTERS           @XA20412
         B     GOOUT                                           @XA20412
GO3270   L     R6,L3270            *                           @XA20412
         LA    R7,LINE3270-4       AND LINE POINTERS           @XA20412
         B     GOOUT                                           @XA20412
SET90    CLC   L0(L2,R4),UNIT90    *                           @XA20412
         BNE   SKIPOUT             *                           @XA20412
         L     R6,L3790            *                           @XA20412
         LA    R7,LINE3790-4       *                           @XA20412
         B     GOOUT               *                           @XA20412
SKIPOUT  L     R6,LSTLAB           *                           @XA20412
         LA    R7,LASTLINA-4       *                           @XA20412
GOOUT    ST    R6,XLABELP          SAVE LABEL                  @XA20412
         ST    R7,XR9PTR           AND LINE POINTER            @XA20412
         B     RETURN                                          @XA20412
*                                                              @X50DQMC
RSET05   STM   R5,R8,XSAVE
         SR    R5,R5
         LA    R5,LABLIN
         ST    R5,XLABELP
         B     RETURN
TESTSHR  STM   R5,R8,XSAVE                                     @X50DQMC
         CLC   SHRFLAG(4),FONE  IF 3790 SHORT FAMILY           @X50DQMC
         BNE   RETURN    NO-                                   @X50DQMC
         SR    R5,R5                                           @X50DQMC
         L     R5,SHRLAB   YES- GOTO SHORT ROUTINE             @X50DQMC
         ST    R5,XLABELP                                      @X50DQMC
         LA    R5,SHROBRS-4                                    @X50DQMC
         ST    R5,XR9PTR                                       @X50DQMC
         B     RETURN                                          @X50DQMC
*                                                              @X50DQMC
SKIPSHR  STM   R5,R8,XSAVE                                     @X50DQMC
         CLC   SHRFLAG(4),FONE   IF 3790 SHORT RECORD          @X50DQMC
         BNE   SKIP  - NO-                                     @X50DQMC
SKIP     SR    R5,R5                                           @X50DQMC
         ST    R5,SHRFLAG    RESET FLAG                        @X50DQMC
         L     R5,SIOLAB                                       @X50DQMC
         ST    R5,XLABELP   SKIP SHORT RECORD ROUTINE          @X50DQMC
         LA    R5,LINESIO-4                                    @X50DQMC
         ST    R5,XR9PTR                                       @X50DQMC
         B     RETURN                                          @X50DQMC
RESTFLAG STM   R5,R8,XSAVE   SAVE REGISTERS                    @X50DQMC
         LA    R5,HEXLEN           SET HEX LENGTH FOR          @X50DQMC
         MVI   L1(R5),H2C          SHORT RECORD DUMP           @X50DQMC
         SR    R5,R5                                           @X50DQMC
         ST    R5,SHRFLAG   RESET SHRFLAG TO ZERO              @X50DQMC
         L     R5,FINLAB           SET POINTERS                @X50DQMC
         ST    R5,XLABELP          TO FINISH                   @X50DQMC
         LA    R5,FINISH-4                                     @X50DQMC
         ST    R5,XR9PTR                                       @X50DQMC
         B     RETURN                                          @X50DQMC
        EJECT
*
*
*        SET THE DATE READY FOR PRINT
*
SETDATE  UNPK  XSAVE(L8),L1(L3,R4)     UNPACK THE DATE
         MVC   L0(L3,R3),XSAVE+L5      MOVE DAY
         MVC   L6(L2,R3),XSAVE+L3      MOVE YEAR
         BR    R14
*
*        SET THE DEVICE TYPE READY FOR PRINT
*
SETDEVT  STM   R5,R8,XSAVE             SAVE REGS
         CLC   L0(L2,R4),UNIT90    IS DEVICE A 3790            @XA20412
         BNE   SET3270             NO,CHECK FOR 3270           @XA20412
         MVC   L0(L10,R3),LOC3791  YES,MOVE 3791 LOCAL TO IMAGE@XA20412
         B     RETURN              AND RETURN                  @XA20412
SET3270  CLC   L0(L2,R4),UNIT70    IS DEVICE A 3270            @XA20412
         BNE   SET3705             NO,CHECK FOR 3705           @XA20412
         MVC   L0(L4,R3),LOC3270   YES,MOVE 3270 TO IMAGE      @XA20412
         B     RETURN              AND RETURN                  @XA20412
SET3705  MVC   L0(L4,R3),LOC3705   MOVE 3705 TO IMAGE          @XA20412
         LA    R5,VALTYPES         GET LIST OF KNOWN CODES     @XA20412
         LA    R6,L5               COUNT OF TABLE LESS ONE     @XA20412
         CLI   L0(R4),H40          IS THIS A COMM TYPE DEVICE  @XA20412
         BNE   SETUNKWN            NO,UNKNOWN OR UNSUPPORTED   @XA20412
SETLP    CLC   L1(L1,R4),L0(R5)    YES,CHECK FOR 3705 ID       @XA20412
         BE    RETURN              FOUND IT,RETURN             @XA20412
         LA    R5,L1(R5)           GET NEXT AND TRY AGAIN      @XA20412
         BCT   R6,SETLP                                        @XA20412
SETUNKWN MVC   L0(L4,R3),UNKWN     NOT IN TABLE MUST BE UNKNOWN@XA20412
         B     RETURN
*
*        CHECK FOR CPU AND SERIAL NUMBER
*
SETCPUNO STM   R5,R8,XSAVE             SAVE REGS
         SR    R5,R5                   CLEAR R5
         IC    R5,L0(R4)               PICK UP MODEL NO
         SLL   R5,L8                   IN TO
         IC    R5,L1(R4)               R5
         LTR   R5,R5                   TEST FOR ZERO
         LR    R5,R3                   PUT LINE ADDRESS IN R5
         BNZ   SETSER                  NON ZERO BRANCH
         LA    R6,L46                  OFFSET IN REG SIX
         SR    R5,R6
         MVC   L0(L29,R5),UNIVERS      PUT IN UNIVERSAL NONE
         B     RETURN
*
SETSER   LA    R6,L36                  OFFSET IN REG 6
         SR    R5,R6                   SUBTRACT OFFSET
         MVC   L0(L10,R5),SERNO        MOVE IN SERIAL NO.
         B     RETURN
*
*        SET PROGRAM NAME TO PRINT LINE
*
SETPGMN  CLC   SHRFLAG(L4),FONE        IF 3790 SHORT RECORD    @X50DQMC
         BCR   8,R14               YES,NO NAME                 @X50DQMC
         MVC   0(L12,R3),JOBID    NOT SHORT,MOVE JOBID TITLE   @X50DQMC
         MVC   L13(L8,R3),L0(R4)     MOVE JOB NAME             @X50DQMC
         BR    R14                                             @X50DQMC
*                                                              @X50DQMC
SETRESOU MVC   L0(L8,R3),L0(R4)    MOVE 8 CHARACTERS TO LINE   @X50DQMC
         BR    R14              RETURN                         @X50DQMC
*                                                              @X50DQMC
NONAME   CLC   SHRFLAG(4),FONE       IF 3790 FAMILY            @X50DQMC
         BCR   7,R14               NO-PRINT HEX JOBID          @X50DQMC
         ST    R5,XSAVE   SAVE REGISTER                        @X50DQMC
         LA    R5,L74       YES-REPOSITION PRINT BUFFER        @X50DQMC
         SR    R3,R5                                           @X50DQMC
         MVC   0(L17,R3),BLANKS      BLANK OUT WRITE BUFFER    @X50DQMC
         BR    R14                     RETURN                  @X50DQMC
           EJECT
*
*        SET BINARY WITH R4 POINTING TO THE CHAR
*
SETBIN   STM   R5,R8,XSAVE             SAVE REGS
         IC    R7,L0(R4)               PICK UP CHAR TO PRINT
         SLL   R7,L24                  MOVE IT TO HI OF R7
         LR    R8,R3                   PRINT POS POINTER TO REG8
         LA    R5,L8                   LOOP COUNT
SETBINA  SR    R6,R6                   CLEAR REG 6
         SLDL  R6,L1                   MOVE BIT TO R6
         STC   R6,L0(R8)               PUT IT INTO PRINT LINE
         MVZ   L0(L1,R8),CHAR0
         LA    R8,L1(R8)               MOVE POINTER TO NEXT POS
         BCT   R5,SETBINA              LOOP TILL 8 PRINTED
         B     RETURN
*
*        SET HEX -PRINTS 1 CHAR HEX
*
SETHEX   STM   R5,R8,XSAVE             SAVE REGS
         LA    R8,CHARS                CHARACTER TABLE POINTER
         IC    R7,L0(R4)               PICK UP CHARACTER
         SLL   R7,L24                  MOVE TO HI R7
         SR    R6,R6                   CLEAR REGS
         SLDL  R6,L4                   MOVE FOUR BITS
         AR    R6,R8                   ADD OFFSET AND POINTER
         MVC   L0(L1,R3),L0(R6)        MOVE CHARACTER TO LINE
         SR    R6,R6                   CLEAR AGAIN
         SLDL  R6,L4                   MOVE LAST 4 BITS
         AR    R6,R8                   COMPUTE OFFSET
         MVC   L1(L1,R3),L0(R6)        MOVE LAST CHARACTER
         B     RETURN
SBCNTL   DC    X'02'
ON       EQU   1
HEX02    EQU   X'02'
*
*        NO OP RETURN
*
SKIPPER  BR    R14
*
*        TO ADD SPACES ON LINE
*
SPACER1  LA    R3,L1(R3)
         BR    R14
SPACER2  LA    R3,L2(R3)
         BR    14
SPACER19 LA    R3,L19(R3)
         BR    R14
BACK14   SH    R3,HALF14
         BR    R14
HALF14   DC    H'14'
           EJECT
*
*        DEFINE THE MODE IN WHICH VTAM RECORD WAS RECORDED
*
RECMODE  TM    L0(R4),HE0              TEST FOR UNRECOVERABLE
         BNZ   INTEST                  NO
         MVC   L0(L15,R3),UNREC        MOVE IN MODE
         BR    R14                     RETURN
INTEST   TM    L0(R4),H80              TEST FOR UNINTENSIVE
         BNO   OVERTST                 NO
         MVC   L0(L15,R3),INTEN        MOVE IN MODE
         BR    R14                     RETURN
OVERTST  TM    L0(R4),H40              TEST FOR OVERFLOW
         BNO   EODTST                  NO
         MVC   L0(L15,R3),OVERF        MOVE IN MODE
         BR    R14                     RETURN
EODTST   MVC   L0(L15,R3),EOD          MOVE IN MODE
         BR    R14
*                                                              @X50DQMC
MODE     TM    L0(R4),H80     IF INTENSIVE MODE                @X50DQMC
         BNO   DIAGMODE       NO-                              @X50DQMC
         MVC   L0(L15,R3),INTEN    YES-                        @X50DQMC
         BR    R14                                             @X50DQMC
DIAGMODE TM    L0(R4),H40     IF DIAGNOSTIC MODE               @X50DQMC
         BNO   NOMODE      NO-                                 @X50DQMC
         MVC   L0(L15,R3),DIAG       YES-                      @X50DQMC
         BR    R14                                             @X50DQMC
NOMODE   TM    L0(R4),H20     IF NO MODE                       @X50DQMC
         BNO   UNKNMODE            BRANCH IF NOT KNOWN MODE    @X50DQMC
         MVC   L0(L15,R3),NONEMD                               @X50DQMC
         BR    R14                                             @X50DQMC
UNKNMODE MVC   L0(L15,R3),UNKMODE  MOVE IN UNKNOWN             @X50DQMC
         BR    R14                                             @X50DQMC
*                                                              @X50DQMC
*
*        CONVERT COUNTERS FROM HEX TO DECIMAL READY FOR PRINT
*
FWWA    DC     F'0'
CONV1    STM   R5,R8,XSAVE             SAVE REGISTERS
         XC    READYP(L8),READYP       CLEAR UNPACK BUFFER
         XC    FWWA(4),FWWA
         SR    R6,R6                   ZERO REG
         MVC   FWWA+2(2),L0(R4)        MOVE DATA TO BE CONVERTED
         L     R6,FWWA                 LOAD DATA TO BE CONVERTED
         CVD   R6,READYP               CONVERT ERROR COUNTER TO DECI
         UNPK  READYP(L5),READYP+L5(L3)  UNPACK DECI COUNT
         OI    READYP+L4,CLRSGN        CLEAR SIGN
         MVC   L0(L5,R3),READYP        MOVE COUNTER READY TO PRINT
         SR    R7,R7
         IC    R7,L2(R4)
         CVD   R7,READYP
         UNPK  READYP(L5),READYP+L5(L3)
         OI      READYP+L4,CLRSGN
         MVC   L49(L5,R3),READYP
         B     RETURN
CONVL    STM   R5,R8,XSAVE             SAVE REGISTERS
         XC    READYP(L8),READYP       CLEAR UNPACK BUFFER
         SR    R6,R6                   ZERO REG
         IC    R6,L0(R4)               LOAD DATA TO BE CONVERTED
        SRL   R6,4                    GET RID OF 4 BITS
         CVD   R6,READYP               CONVERT ERROR COUNTER TO DECI
         UNPK  READYP(L5),READYP+L5(L3)  UNPACK DECI COUNT
         OI    READYP+L4,CLRSGN        CLEAR SIGN
         MVC   L1(L3,R3),READYP+L2     MOVE COUNTER READY TO PRINT
         B     RETURN
CONVR    STM   R5,R8,XSAVE             SAVE REGISTERS
         XC    READYP(L8),READYP       CLEAR UNPACK BUFFER
         SR    R6,R6                   ZERO REG
         IC    R6,L0(R4)               LOAD DATA TO BE CONVERTED
         SLL   R6,28                  GET RIT OF 4 BITS
         SRL   R6,28                  REPOSITION THE 4 BITS
         CVD   R6,READYP               CONVERT ERROR COUNTER TO DECI
         UNPK  READYP(L5),READYP+L5(L3)  UNPACK DECI COUNT
         OI    READYP+L4,CLRSGN        CLEAR SIGN
         MVC   L1(L3,R3),READYP+L2     MOVE COUNTER READY TO PRINT
         B     RETURN
CONV     STM   R5,R8,XSAVE                                     @X50DQMC
         XC    READYP(L8),READYP       CLEAR UNPACK BUFFER     @X50DQMC
         XC    FWWA(4),FWWA                                    @X50DQMC
         SR    R6,R6                   ZERO REG                @X50DQMC
         MVC   FWWA+2(2),L0(R4)        MOVE DATA TO BE CONVERTED
         L     R6,FWWA                 LOAD DATA TO BE CONVERTED
         CVD   R6,READYP               CONVERT ERROR COUNTER TO DECI
         UNPK  READYP(L5),READYP+L5(L3)  UNPACK DECI COUNT     @X50DQMC
         OI    READYP+L4,CLRSGN        CLEAR SIGN              @X50DQMC
         MVC   L0(L5,R3),READYP        MOVE COUNTER READY TO PRINT
         B     RETURN                                          @X50DQMC
*                                                              @X50DQMC
*
*        TEST FOR INITIAL SELECTION ERROR  ENTER 1 IF YES, 0 IF NO
*
RECMODE1 TM    L0(R4),H10              IS INITIAL SELECTION ON
         BZ    NOTON                   NO
         MVC   L0(L1,R3),ONE           YES MOVE IN ONE
         BR    R14                     RETURN
NOTON    MVC   L0(L1,R3),ZERO          NO MOVE IN ZERO
         BR    R14                     RETURN
DEVCHK   ST    R5,XSAVE                                        @X50DQMC
         LA    R5,HEXLEN           SET LENGTH FOR              @X50DQMC
         MVI   L1(R5),H5E          LONG RECORD DUMP            @X50DQMC
         L     R5,XSAVE                                        @X50DQMC
         TM    SWITCH2,H20         IF 3790 SHORT RECORD        @X50DQMC
         BCR   14,R14   NO-                                    @X50DQMC
         CLC   0(L2,R4),UNIT90    IF 3790 FAMILY               @X50DQMC
         BCR   7,R14     NO-                                   @X50DQMC
         ST    R5,XSAVE       SAVE REGISTER                    @X50DQMC
         L     R5,FONE                                         @X50DQMC
         ST    R5,SHRFLAG                                      @X50DQMC
         L     R5,XSAVE    RESTORE R5                          @X50DQMC
         BR    R14                                             @X50DQMC
*                                                              @X50DQMC
TYPECHK  STM   R5,R8,XSAVE      SAVE REGISTER                  @X50DQMC
         L     R8,XLABELP          REWRITE LABEL               @X50DQMC
         MVC   L23(L10,R8),UNITCHK 'UNIT CHECK' TO LINE        @X50DQMC
         CLC   SHRFLAG(4),FONE     IF 3790 FAMILY              @X50DQMC
         BNE    RETURN     NO-                                 @X50DQMC
         TM    SWITCH2,H80    YES- IF EOD                      @X50DQMC
         BZ    OVERFLOW        NO-THEN OVERFLOW                @X50DQMC
         MVC   L23(L10,R8),EODTYPE     MOVE EOD ID             @X50DQMC
         B     RETURN                                          @X50DQMC
OVERFLOW MVC   L23(L10,R8),OVFL         MOVE IN OVERFLOW ID    @X50DQMC
         B     RETURN                                          @X50DQMC
        EJECT
*
*        TEST FOR A GRAPHIC ERROR FROM A TERMINAL, OR AN END OF DAY OR
*        COUNTER OVER FLOW RECORD. IF YES LINE AND LABEL POINTERS GET
*        SET PAST THOSE THAT PRINT CCW AND SENSE.
*
CHECKMOD STM   R5,R8,XSAVE
         CLC   DEVTYP2,UNIT90    IF 3790 FAMILY                @X50DQMC
         BE    RETURN     YES-                                 @X50DQMC
         TM    L0(R4),NORCE            NO- IS THE EOD OR CNTR OVERFLOW
         BNZ   RIGHTON                 YES
         B     RETURN
*
RIGHTON  LA    R5,LASTLINE
         SH    R5,FOUR                 SUBTRACT FOUR FROM ADDRESS TO PR
         ST    R5,XR9PTR
         LA    R5,LABLIN-1
         ST    R5,XLABELP
         B     RETURN
*
*
*
*        GET COMMUNICATION ADAPTER TYPE AND MOVE IN READY FOR PRINT
*
*
*
SETADPT  STM   R5,R8,XSAVE             SAVE REGISTERS
         SR    R6,R6                   ZERO REG
         CLI   L0(R4),H40              COMPARE FOR COMUNICATIONS TYPE
         BNE   NOPRTRET                NO-FIX TO NO PRINT
         LA    R5,6                INCLUDE 3790 IN COUNT       @XA20412
         LA    R6,VALTYPES         GET KNOWN COMM TYPES        @XA20412
STADLP   CLC   L1(L1,R4),L0(R6)    IS THIS ONE OF THEM         @XA20412
         BE    NOPRTRET            YES,MUST NOT BE ADAPTER     @XA20412
         LA    R6,L1(R6)           STEP TO NEXT                @XA20412
         BCT   R5,STADLP           TRY AGAIN                   @XA20412
         XR    R6,R6               XR FASTER THAN SR           @XA20412
         IC    R6,L1(R4)               YES-PICK UP CHARACTER DEVICE TYP
         SRL   R6,L4                   DROP OFF LOW 4 BITS
         MH    R6,HALF13               COMPUTE INDEX
         LA    R5,ADPTYPE              PICK UP TABLE ADDRESS
         AR    R5,R6                   SET ADDRESS TO LABEL
         MVC   L0(L13,R3),L0(R5)       MOVE IN TYPE DEVICE
         B     RETURN
NOPRTRET SR    R15,R15
         B     RETURN
*
*        GET RESOURCE TYPE AND MOVE IN READY FOR PRINT
*
SETTERM  STM   R5,R8,XSAVE             SAVE REGISTERS
         CLI   L2(R4),H40              COMPARE FOR COMUNICATIONS TYPE
         BNE   NOPRTRET                NO-FIX TO NO PRINT OF TERM TYPE
         LA    R5,6                INCLUDE 3790 IN COUNT       @XA20412
         LA    R6,VALTYPES         GET KNOWN COMM TYPES        @XA20412
STTRMLP  CLC   L3(L1,R4),L0(R6)    IS THIS ONE                 @XA20412
         BE    NOPRTRET            YES,MUST NOT BE TERMINAL    @XA20412
         LA    R6,L1(R6)           GET NEXT COMM TYPE          @XA20412
         BCT   R5,STTRMLP          TRY AGAIN                   @XA20412
         XR    R6,R6               XR FASTER THAN SR           @XA20412
         XR    R7,R7               FOR CLEARING REGS           @XA20412
         IC    R7,L3(R4)               PICK UP CHARS FROM DEVICE TYPE
         IC    R6,L0(R4)               TO DETERMINE RESOURCE TYPE
         SRL   R7,L4                   DROP OFF LOW 4 BITS
         SLL   R7,L4
         SLL   R6,L8                   MOVE IT OVER ONE BYTE
         OR    R6,R7                   SET UP KEY HALF
         LA    R7,L15                  SET UP LOOP COUNT
         LA    R8,COMMTAB              SET PTR TO TERM TYPE TAB
COMLOOP  CH    R6,L0(R8)               IS IT THIS TYPE
         BE    COMFND                  BR-YES
         LA    R8,L10(R8)              UP POINTER TO NEXT
         BCT   R7,COMLOOP              LOOP
         MVC   L0(L6,R3),ADPTYPE       MOVE IN NONE
         B     RETURN
COMFND   MVC   L0(L8,R3),L2(R8)        MOVE IN TERM NAME
         B     RETURN
         DS    0F
XSAVE    DC    5F'0'
NONE     DC    CL8'NONE    '
CHARS    DC    C'0123456789ABCDEF'
CHAR0    DC    C'0'
UNIVERS  DC    C'UNIVERSAL   SERIAL NO. NONE  '
SERNO    DC    C'SERIAL NO.'
UNREC    DC    C'*UNRECOVERABLE*'
INTEN    DC    C'*INTENSIFIED*  '
OVERF    DC    C'*OVERFLOW*     '
EOD      DC    C'*END OF DAY*   '
DIAG     DC    C'*DIAGNOSTIC*   '                              @X50DQMC
NONEMD   DC    C'*NONE*         '                              @X50DQMC
UNKMODE  DC    C'*UNKNOWN*      '                              @X50DQMC
EODTYPE  DC    C'END OF DAY'                                   @X50DQMC
OVFL     DC    C'CNTR OVFLW'                                   @X50DQMC
UNITCHK  DC    C'UNIT CHECK'                                   @X50DQMC
SHRLAB   DC    A(LABSHR-1)                                     @X50DQMC
FINLAB   DC    A(LABFIN-1)                                     @X50DQMC
JOBID    DC    C'JOB IDENTITY'                                 @X50DQMC
BLANKS   DC    CL17' '                                         @X50DQMC
ONE      DC    C'1'
ZERO     DC    C'0'
FIVETWO  DC    H'52'
HALF13   DC    H'13'
FOUR     DC    X'0004'
         DS    0D
READYP   DC    CL8' '
LSTLAB   DC    A(LASTLAB-1)                                    @X50DQMC
SIOLAB   DC    A(LABSIO-1)                                     @X50DQMC
L3790    DC    A(LAB3790-1)                                    @X50DQMC
L3270    DC    A(LAB3270-1)                                    @XA20412
FONE     DC    F'1'                                            @X50DQMC
*                                                              @X50DQMC
*
RELTAB   DS    0C
         DC    C'OS  '
         DC    C'DOS '
         DC    C'VS 1'
         DC    C'V370'
         DC    C'VS 2'
         DC    C'    '
         DC    C'    '
         DC    C'    '
WORK     EQU   READYP
XRELN    EQU   SYSREL
*        DEVICE TYPES SUPPORTED BY THIS TABLE
*
VALTYPES DC    X'0506152535F1'     LAST ENTRY IS FOR 3791      @XA20412
*                                  ALL OTHERS ARE 3705         @XA20412
DEVTABLE EQU   *                                               @XA20412
UNIT70   DC    X'1009'                                         @XA20412
LOC3270  DC    C'3270'                                         @XA20412
UNIT90   DC    X'40F1'                                         @XA20412
LOC3705  DC    C'3705'                                         @XA20412
UNKWN    DC    C'UNKN'                                         @XA20412
LOC3791  DC    C'3791 LOCAL'                                   @X50DQMC
*        COMMUNICATION ADAPTER TYPES SUPPORTED BY THIS TABLE
*
ADPTYPE  DC    CL13'NONE'
         DC    CL13'IBM TERM I'
         DC    CL13'IBM TERM II'
         DC    CL13'IBM TELEGRAPH'
         DC    CL13'TELEGRAPH I'
         DC    CL13'TELEGRAPH II'
         DC    CL13'WT TELEGRAPH'
         DC    CL13'SYNCH I'
         DC    CL13'IBM TERM III'
         DC    CL13'SYNCH II'
*
*        TERMINAL TYPES SUPPORTED BY THIS TABLE
*
COMMTAB  DS    0F
         DC    X'0110'
         DC    C'IBM 1050'
         DC    X'0120'
         DC    C'IBM 1030'
         DC    X'0130'
         DC    C'IBM 1050'
         DC    X'0140'
         DC    C'ATT 83B3'
         DC    X'0150'
         DC    C'CC TWX  '
         DC    X'0160'
         DC    C'WTTA    '
         DC    X'0170'
         DC    C'IBM 2260'
         DC    X'0190'
         DC    C'S/360   '
         DC    X'0210'
         DC    C'IBM 1060'
         DC    X'0240'
         DC    C'WU 115A'
         DC    X'0290'
         DC    C'IBM 1130'
         DC    X'0390'
         DC    C'IBM 2780'
         DC    X'0410'
         DC    C'IBM 2740'
         DC    X'0510'
         DC    C'2741C   '
         DC    X'0610'
         DC    C'2741P   '
ENTRIES  DS    0F
         DC    XL4'00010001'           FORMAT 1
         DC    XL4'00010001'           FORMAT 2
         DC    A(LABELS)               LABEL POINTER
         DC    H'0'                    DISP
*
*        SKIP TO CHANNEL  1
*
         DC    X'01'
         DC    X'000B8B00'
*
STERTM   LINE  (78,23),(1,35),SKIP=1
         HEX   CPUID,0,2B
         HEX   CPUSERL,0,3B
         ROUTINE   CPUID,SETCPUNO
         ROUTINE SHRDEV2,DEVCHK                                @X50DQMC
         ROUTINE  SWITCH2,TYPECHK                              @X50DQMC
         LABEL '---RECORD ENTRY TYPE - UNIT CHECK','   SOURCE   VTAM OUC
               TBOARD','MODEL-'
*
         LINE  (16,38),(4,42)
         ROUTINE    SYSREL,CONVREL
         LABEL      'XXXX REL.'
*
         LINE  (84,1),(27,29)                                  @X50DQMC
         ROUTINE   JOBID1,SETPGMN
         LABEL 'DAY YEAR','HH MM SS.TH'                        @X50DQMC
*
         LINE  (27,29),(21,30),SKIP=2
         ROUTINE   DAY,SETDATE
         HEX   HOUR,1,4B
         ROUTINE   SPARE1,SKIPPER
         HEX   JOBID1,B16,4B
         HEX   JOBID2,B37,4B
         ROUTINE  SWITCH2,NONAME                               @X50DQMC
         LABEL 'DATE-','TIME'
         LINE  ,,SKIP=1                                        @X50DQMC
         ROUTINE  SWITCH2,TESTSHR                              @X50DQMC
         LABEL  ''                                             @X50DQMC
*
         LINE  (34,1),(2,32),SKIP=1
         ROUTINE   DEVTYP2,SETDEVT
         LABEL 'DEVICE TYPE'
         LINE
         HEX   CUA,B0,3B
         LABEL 'PRIMARY   CHANNEL UNIT ADDRESS'
         LINE
         HEX   SECCUA,B0,3B
         LABEL 'ALTERNATE CHANNEL UNIT ADDRESS'
         LINE
         ROUTINE   DEVTYP2,SETADPT
         LABEL 'COMMUNICATION ADAPTER TYPE'
         LINE  ,,SKIP=2
         ROUTINE   DEVTYP1,SETTERM
         LABEL 'RESOURCE TYPE'
         LINE  ,,SKIP=1
         ROUTINE   VTAMFL,CHECKMOD
         LABEL ' '
         LINE  ,(14,41),SKIP=1
         ROUTINE   SPARE1,SKIPPER
         LABEL 'CC   DA   FL     CT','K    CA    US CS  CT'    @X50DQMC
*
         LINE  (14,3),(1,49),SKIP=2
         HEX   FCCWCC,0,1B
         HEX   FCCWDA,0,3B
         ROUTINE   SPARE1,SPACER1
         HEX   FCCWFL,0,1B
         HEX   FCCW,0,1B
         HEX   FCCWCT,0,2B
         ROUTINE   SPARE1,SPACER19
         HEX   CSWK,0,1B
         HEX   CSWCA,0,3B
         ROUTINE   SPARE1,SPACER2
         ROUTINE   CSWUS1,SETHEX
         ROUTINE   CSWCS1,SETHEX
         HEX   CSWCT,0,2B
         LABEL 'FAILING CCW','CSW'
*
         LINE  ,(1,38),SKIP=1
         ROUTINE   SPARE1,SKIPPER
         LABEL 'UNIT STATUS','CHANNEL STATUS'
*
*        UNIT STATUS AND CHANNEL STATUS FIELDS IN DETAIL
*
         LINE  (21,38),(2,39)
         BIN   CSWUS1
         BIN   CSWCS1
         LABEL 'ATTENTION','PRGM-CTLD IRPT'                    @X50DQMC
         LINE
         BIN   CSWUS2
         BIN   CSWCS2
         LABEL 'STATUS MODIFIER','INCORRECT LENGTH'
         LINE
         BIN   CSWUS3
         BIN   CSWCS3
         LABEL 'CONTROL UNIT END','PROGRAM CHECK'
         LINE
         BIN   CSWUS4
         BIN   CSWCS4
         LABEL 'BUSY','PROTECTION CHECK'
         LINE
         BIN   CSWUS5
         BIN   CSWCS5
         LABEL 'CHANNEL END','CHAN DATA CHECK'
         LINE
         BIN   CSWUS6
         BIN   CSWCS6
         LABEL 'DEVICE END','CHAN CTL CHECK'
         LINE
         BIN   CSWUS7
         BIN   CSWCS8
         LABEL 'UNIT CHECK','I/F CTL CHECK'
         LINE  (21,38),(2,39),SKIP=2
         BIN   CSWUS8
         BIN   CSWCS8
         LABEL 'UNIT EXCEPTION','CHAINING CHECK'
LASTLINE LINE  ,,SKIP=1                                        @X50DQMC
         ROUTINE    SPARE1,RSET05
LABLIN   LABEL ' '
        LINE   ,                                               @X50DQMC
        ROUTINE DEVTYP2,U3705                                  @X50DQMC
        LABEL ''                                               @X50DQMC
         LINE  ,(1,65),SKIP=1
         ROUTINE   SPARE1,SKIPPER
         LABEL 'SENSE BYTE DATA','STATISTICAL DATA'
         LINE  ,(2,30),SKIP=2                                  @X50DQMC
         ROUTINE   SPARE1,SKIPPER
         LABEL 'INITIAL FAILURE','FINAL RETRY'
         LINE  (12,28),(3,28),SKIP=1
         ROUTINE ATSNB11,SETBIN
         ROUTINE ATSNB01,SETBIN
        LABEL 'BYTE 0','BYTE 0','    3705        ','    3705        '
*
*        SENSE BYTE DATA IN DETAIL
*
         LINE  (17,28),(4,28)
         BIN ATSNB11
         BIN ATSNB01
         ROUTINE SDR01,CONVL
         ROUTINE SDR02,CONVR
       LABEL 'CMND REJ','CMND REJ','NOT USED','NOT USED'
         LINE
         BIN ATSNB12
         BIN ATSNB02
         ROUTINE SDR03,CONVL
         ROUTINE SDR04,CONVR
         LABEL 'INTV REQD','INTV REQD','INTV  REQD','BUS OUT'
         LINE
         BIN ATSNB13
         BIN ATSNB03
         ROUTINE SDR05,CONVL
         ROUTINE SDR06,CONVR
         LABEL 'BUS O CHK','BUS O CHK','EQUIP CHK','NOT USED'
         LINE
         BIN ATSNB14
         BIN ATSNB04
         ROUTINE SDR07,CONVL
         ROUTINE SDR08,CONVR
           LABEL 'EQUIP CHK','EQUIP CHK','IPL REQ  ','NOT USED'
         LINE
         BIN ATSNB15
         BIN ATSNB05
         ROUTINE SDR09,CONVL
         ROUTINE SDR10,CONVR
         LABEL 'N/A','N/A','NOT USED','NOT USED'
         LINE
         BIN ATSNB16
         BIN ATSNB06
        ROUTINE SDR11,CONVL
        ROUTINE SDR12,CONVR
         LABEL 'N/A','N/A','NOT USED','NOT USED'
         LINE
         BIN ATSNB17
         BIN ATSNB07
        ROUTINE  SDR13,CONVL
        ROUTINE  SDR14,CONVR
         LABEL 'IPL REQST','IPL REQST','NOT USED','NOT USED'
         LINE
         BIN ATSNB18
         BIN ATSNB08
      ROUTINE  SDR15,CONVL
      ROUTINE  SDR16,CONVR
         LABEL 'ABORT','ABORT','NOT USED','CHAN DAT CHK'
       LINE
       ROUTINE  DEVTYP2,U3270
       LABEL ''
LINE3270 LINE  ,(1,65),SKIP=2                                  @X50DQMC
         ROUTINE SPARE1,SKIPPER                                @X50DQMC
LAB3270 LABEL 'SENSE BYTE DATA','STATISTICAL DATA'             @X50DQMC
         LINE  ,(2,30),SKIP=2                                  @X50DQMC
        ROUTINE SPARE1,SKIPPER                                 @X50DQMC
        LABEL 'INITIAL FAILURE','FINAL RETRY'                  @X50DQMC
         LINE  (12,28),(3,28),SKIP=1                           @X50DQMC
         ROUTINE ATSNB11,SETBIN                                @X50DQMC
         ROUTINE ATSNB01,SETBIN                                @X50DQMC
        LABEL 'BYTE 0','BYTE 0','    3270','    3270'          @X50DQMC
*                                                              @X50DQMC
*
*        SENSE BYTE DATA IN DETAIL
*
         LINE  (17,28),(4,28)
         BIN ATSNB11
         BIN ATSNB01
         ROUTINE SDR01,CONVL
         ROUTINE SDR02,CONVR
     LABEL 'CMND REJ','CMND REJ','READ DC','WRITE DC'
         LINE
         BIN ATSNB12
         BIN ATSNB02
         ROUTINE SDR03,CONVL
         ROUTINE SDR04,CONVR
         LABEL 'INTV REQD','INTV REQD','INTV  REQD','BUS OUT'
         LINE
         BIN ATSNB13
         BIN ATSNB03
         ROUTINE SDR05,CONVL
         ROUTINE SDR06,CONVR
         LABEL 'BUS O CHK','BUS O CHK','EQUIP CHK','NOT USED'
         LINE
         BIN ATSNB14
         BIN ATSNB04
         ROUTINE SDR07,CONVL
         ROUTINE SDR08,CONVR
           LABEL 'EQUIP CHK','EQUIP CHK','CNTL CHK','NOT USED'
         LINE
         BIN ATSNB15
         BIN ATSNB05
         ROUTINE SDR09,CONVL
         ROUTINE SDR10,CONVR
         LABEL 'DATA CHK','DATA CHK','NOT USED','NOT USED'
         LINE
         BIN ATSNB16
         BIN ATSNB06
        ROUTINE SDR11,CONVL
        ROUTINE SDR12,CONVR
         LABEL 'UNIT SPEC','UNIT SPEC','NOT USED','DATA CHK US'
         LINE
         BIN ATSNB17
         BIN ATSNB07
         ROUTINE  SDR13,CONVL
         ROUTINE  SDR14,CONVR
         LABEL 'CNTL CHK','CNTL CHK','INT REQ US','INTREQ EC US'
         LINE
         BIN ATSNB18
         BIN ATSNB08
        ROUTINE SDR15,CONVL
        ROUTINE SDR16,CONVR
         LABEL 'OPRTN','OPRTN','EQ US','CHAN DAT CHK'
*
         LINE   ,                                              @X50DQMC
         ROUTINE DEVTYP2,U3790                                 @X50DQMC
         LABEL ''                                              @X50DQMC
LINE3790 LINE  ,(1,65),SKIP=1                                  @X50DQMC
         ROUTINE SPARE1,SKIPPER                                @X50DQMC
LAB3790 LABEL 'SENSE BYTE DATA'                                @X50DQMC
         LINE  ,(19,57),SKIP=2                                 @X50DQMC
         ROUTINE SPARE1,SKIPPER                                @X50DQMC
         LABEL 'INITIAL FAILURE','FINAL FAILURE'               @X50DQMC
*                                                              @X50DQMC
         LINE  (15,28),(3,28),SKIP=1                           @X50DQMC
         ROUTINE ATSNB01,SETBIN                                @X50DQMC
         ROUTINE ATSNB11,SETBIN                                @X50DQMC
         ROUTINE ATSNB21,SETBIN                                @X50DQMC
         ROUTINE ATSNB31,SETBIN                                @X50DQMC
         LABEL 'BYTE 0','BYTE 1','BYTE 0','BYTE 1'             @X50DQMC
         LINE  (20,28),(4,28)                                  @X50DQMC
         BIN   ATSNB01                                         @X50DQMC
         BIN   ATSNB11                                         @X50DQMC
         BIN   ATSNB21                                         @X50DQMC
         BIN   ATSNB31                                         @X50DQMC
         LABEL 'COMMAND REJ','LENGTH CHK','COMMAND REJ','LENGTH CHK'
         LINE   ,                                              @X50DQMC
         BIN ATSNB02                                           @X50DQMC
         BIN ATSNB12                                           @X50DQMC
         BIN ATSNB22                                           @X50DQMC
         BIN ATSNB32                                           @X50DQMC
         LABEL 'INTERVN REQ','DATA REJECT','INTERVN REQ','DATA REJECT'
         LINE   ,                                              @X50DQMC
         BIN   ATSNB03                                         @X50DQMC
         BIN   ATSNB13                                         @X50DQMC
         BIN   ATSNB23                                         @X50DQMC
         BIN   ATSNB33                                         @X50DQMC
         LABEL 'BUS OUT CHK','BIT 2 (SNO)','BUS OUT CHK','BIT 2 (SNO)'
         LINE   ,                                              @X50DQMC
         BIN   ATSNB04                                         @X50DQMC
         BIN   ATSNB14                                         @X50DQMC
         BIN   ATSNB24                                         @X50DQMC
         BIN   ATSNB34                                         @X50DQMC
         LABEL 'EQUIPMENT CHK','BIT 3 (SNO)','EQUIPMENT CHK',  @X50DQMCC
               'BIT 3 (SNO)'                                   @X50DQMC
         LINE   ,                                              @X50DQMC
         BIN   ATSNB05                                         @X50DQMC
         BIN   ATSNB15                                         @X50DQMC
         BIN   ATSNB25                                         @X50DQMC
         BIN   ATSNB35                                         @X50DQMC
         LABEL 'DATA CHK','PARITY ERROR','DATA CHK','PARITY ERROR'
         LINE   ,                                              @X50DQMC
         BIN   ATSNB06                                         @X50DQMC
         BIN   ATSNB16                                         @X50DQMC
         BIN   ATSNB26                                         @X50DQMC
         BIN   ATSNB36                                         @X50DQMC
         LABEL 'BIT 5 (SNO)','PARITY CHK#1','BIT 5 (SNO)',     @X50DQMC*
               'PARITY CHK#2'                                  @X50DQMC
         LINE   ,                                              @X50DQMC
         BIN   ATSNB07                                         @X50DQMC
         BIN   ATSNB17                                         @X50DQMC
         BIN   ATSNB27                                         @X50DQMC
         BIN   ATSNB37                                         @X50DQMC
         LABEL 'NOT INITIALIZED','PARITY CHK#2','NOT INITIALIZED',     C
               'PARITY CHK#2'                                  @X50DQMC
         LINE  ,,SKIP=2                                        @X50DQMC
         BIN   ATSNB08                                         @X50DQMC
         BIN   ATSNB18                                         @X50DQMC
         BIN   ATSNB28                                         @X50DQMC
         BIN   ATSNB38                                         @X50DQMC
         LABEL 'BIT 7 (SNO)','MACHINE CHK','BIT 7 (SNO)','MACHINE CHK'
*                                                              @X50DQMC
         LINE  ,(1,10),SKIP=2                                  @X50DQMC
         ROUTINE  SPARE1,SKIPPER                               @X50DQMC
         LABEL 'SDR COUNTER'                                   @X50DQMC
         LINE  (33,39),(4,39),SKIP=1                           @X50DQMC
         ROUTINE SDR01,CONVL                                   @X50DQMC
         ROUTINE SDR09,CONVL                                   @X50DQMC
         LABEL '1 NOT USED',' 9 DATA CHK, LENGTH CHK'          @X50DQMC
         LINE   ,                                              @X50DQMC
         ROUTINE SDR02,CONVR                                   @X50DQMC
         ROUTINE SDR10,CONVR                                   @X50DQMC
         LABEL '2 NOT USED','10 DATA CHK, DATA REJECT'         @X50DQMC
         LINE   ,                                              @X50DQMC
         ROUTINE SDR03,CONVL                                   @X50DQMC
         ROUTINE SDR11,CONVL                                   @X50DQMC
          LABEL '3 BUS OUT, P-CHK #2','11 EQUIP CHK, MACH CHK' @X50DQMC
         LINE   ,                                              @X50DQMC
         ROUTINE SDR04,CONVR                                   @X50DQMC
         ROUTINE SDR12,CONVR                                   @X50DQMC
         LABEL '4 BUS OUT, P-CHK #1,2','12 NOT USED'           @X50DQMC
         LINE   ,                                              @X50DQMC
         ROUTINE SDR05,CONVL                                   @X50DQMC
         ROUTINE SDR13,CONVL                                   @X50DQMC
         LABEL '5 EQUIP CHK, P-CHK #1','13 NOT USED'           @X50DQMC
         LINE   ,                                              @X50DQMC
         ROUTINE SDR06,CONVR                                   @X50DQMC
         ROUTINE SDR14,CONVR                                   @X50DQMC
         LABEL '6 EQUIP CHK, P-CHK #2','14 NOT USED'           @X50DQMC
         LINE   ,                                              @X50DQMC
         ROUTINE SDR07,CONVL                                   @X50DQMC
         ROUTINE SDR15,CONVL                                   @X50DQMC
         LABEL '7 EQUIP CHK, P-ERR, P-CHK #1','15 NOT USED'    @X50DQMC
         LINE ,,SKIP=2                                         @X50DQMC
         ROUTINE SDR08,CONVR                                   @X50DQMC
         ROUTINE SDR16,CONVR                                   @X50DQMC
         LABEL '8 DATA CHK','16 CHANNEL DATA CHK'              @X50DQMC
         LINE  (24,33),(1,39),SKIP=1                           @X50DQMC
         ROUTINE IORET,CONV                                    @X50DQMC
         ROUTINE VTAMFL,MODE                                   @X50DQMC
         LABEL 'NUMBER OF I/O RETRY','RECORDING MODE'          @X50DQMC
         LINE   ,                                              @X50DQMC
         ROUTINE   SPARE1,SKIPSHR                              @X50DQMC
         LABEL  ''                                             @X50DQMC
*                                                              @X50DQMC
SHROBRS  LINE  (31,23),(2,40),SKIP=2                           @X50DQMC
         HEX   SHRTCUA,B0,3B                                   @X50DQMC
         ROUTINE  SHRDEV2,SETDEVT                              @X50DQMC
LABSHR   LABEL 'FAILING CHANNEL UNIT ADDRESS','DEVICE TYPE'    @X50DQMC
         LINE  ,(1,10),SKIP=2                                  @X50DQMC
         ROUTINE SPARE1,SKIPPER                                @X50DQMC
         LABEL 'SDR COUNTER'                                   @X50DQMC
         LINE  (33,39),(4,39),SKIP=1                           @X50DQMC
         ROUTINE SHRSDR01,CONVL                                @X50DQMC
         ROUTINE SHRSDR09,CONVL                                @X50DQMC
         LABEL '1 NOT USED',' 9 DATA CHK, LENGTH CHK'          @X50DQMC
         LINE   ,                                              @X50DQMC
         ROUTINE SHRSDR02,CONVR                                @X50DQMC
         ROUTINE SHRSDR10,CONVR                                @X50DQMC
         LABEL '2 NOT USED','10 DATA CHK, DATA REJECT'         @X50DQMC
         LINE   ,                                              @X50DQMC
         ROUTINE SHRSDR03,CONVL                                @X50DQMC
         ROUTINE SHRSDR11,CONVL                                @X50DQMC
          LABEL '3 BUS OUT, P-CHK #2','11 EQUIP CHK, MACH CHK' @X50DQMC
         LINE   ,                                              @X50DQMC
         ROUTINE SHRSDR04,CONVR                                @X50DQMC
         ROUTINE SHRSDR12,CONVR                                @X50DQMC
         LABEL '4 BUS OUT, P-CHK #1,2','12 NOT USED'           @X50DQMC
         LINE   ,                                              @X50DQMC
         ROUTINE SHRSDR05,CONVL                                @X50DQMC
         ROUTINE SHRSDR13,CONVL                                @X50DQMC
         LABEL '5 EQUIP CHK, P-CHK #1','13 NOT USED'           @X50DQMC
         LINE   ,                                              @X50DQMC
         ROUTINE SHRSDR06,CONVR                                @X50DQMC
         ROUTINE SHRSDR14,CONVR                                @X50DQMC
         LABEL '6 EQUIP CHK, P-CHK #2','14 NOT USED'           @X50DQMC
         LINE   ,                                              @X50DQMC
         ROUTINE SHRSDR07,CONVL                                @X50DQMC
         ROUTINE SHRSDR15,CONVL                                @X50DQMC
         LABEL '7 EQUIP CHK, P-ERR, P-CHK #1','15 NOT USED'    @X50DQMC
         LINE ,,SKIP=2                                         @X50DQMC
         ROUTINE SHRSDR08,CONVR                                @X50DQMC
         ROUTINE SHRSDR16,CONVR                                @X50DQMC
         LABEL '8 DATA CHK','16 CHANNEL DATA CHK'              @X50DQMC
         LINE  (34,1),(1,50),SKIP=1                            @X50DQMC
         ROUTINE  SHRSIOC,CONV                                 @X50DQMC
         LABEL 'NUMBER OF SIO FOR THIS DEVICE'                 @X50DQMC
         LINE  ,,SKIP=1                                        @X50DQMC
         ROUTINE  SPARE1,RESTFLAG                              @X50DQMC
         LABEL ''                                              @X50DQMC
*                                                              @X50DQMC
LASTLINA LINE  ,
           ROUTINE DUM,SKIPPER
LASTLAB  LABEL ''
*
*
LINES1   LINE  (15,41),(1,39),SKIP=2
         ROUTINE   RESOU01,SETPGMN
         ROUTINE   VTAMFL,RECMODE
         LABEL 'RESOURCE NAME','RECORDING MODE'
*
         LINE  (20,37),(1,39),SKIP=2                           @X50DQMC
         ROUTINE VTAMFL,RECMODE1                               @X50DQMC
         LABEL 'INITIAL SELECTION'                             @X50DQMC
*                                                              @X50DQMC
LINESIO  LINE  (11,49),(1,39),SKIP=1                           @X50DQMC
         ROUTINE   SIOCNT,CONV1                                @X50DQMC
LABSIO   LABEL 'SIO CNTR','TEMPORARY ERR CNTR'                 @X50DQMC
*                                                              @X50DQMC
         LINE  ,,SKIP=1                                        @X50DQMC
         ROUTINE SPARE1,SKIPPER                                @X50DQMC
         LABEL  ''                                             @X50DQMC
*                                                              @X50DQMC
          LINE (17,39),(1,39),SKIP=1                           @X50DQMC
          HEX  OP1
          HEX  OP2
          LABEL 'COMMAND CODE 1','COMMAND CODE 2'
*
         LINE  ,,SKIP=1
         ROUTINE   SPARE1,SKIPPER
         LABEL ' '
FINISH   LINE  ,,SKIP=1                                        @X50DQMC
         ROUTINE   SPARE1,SKIPPER                              @X50DQMC
LABFIN   LABEL ' '                                             @X50DQMC
         DC    X'FF'                                           @X50DQMC
HEXLEN   DC    XL2'005E'                                       @X50DQMC
         DC    X'0018'
         DC    XL2'0000'
LABELS   DS    0F
         DC    C'$'
         LSTART
       END
