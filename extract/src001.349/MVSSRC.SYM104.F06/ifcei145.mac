         TITLE 'IFCEI145 MODEL 145 CHANNEL EDIT'
         MACRO
&NAME    DSGEN
.*                            THIS MACRO GENERATES ONE DSECT WORD
.*                                 FORMATTED FOR THE SUBJECT LOG RECORD
.*                                 EACH OPERAND HAS TWO SUB LISTS. THE
.*                                 FIRST IS THE NAME OF THE LOG ITEM
.*                                 WHILE THE SECOND IS THE # OF BITS TO
.*                                 ALLOCATE FOR THIS ITEM. ITEMS MUST
.*                                 BE DEFINED CONTIGUOUSLY WITHOUT GAPS
.*                                 UNUSED BIT GROUPS MUST BE GIVEN
.*                                 DUMMY NAMES. THE NAMES PROVIDED FOR
.*                                 THE LOG ITEMS MAY THEN BE USED IN
.*                                 THE CONVERSION MACRO INSTRUCTIONS.
         GBLC &ITEM(1500)
         GBLA &ITEMNBR,&BITS(1500),&SHIFT(1500)
         LCLB  &ONLY1,&CTIND
         LCLA  &START1,&START2,&END1,&END2
         LCLC  &SYMBOL,&EQUSYM
         LCLA  &OP,&COUNT,&BYTE,&EQUCNT
         ACTR  100000
.START   AIF   (N'&SYSLIST(&OP+1) LT 3).LOOP
         AIF   ('&SYSLIST(&OP+1,3)' EQ 'EQU').LOOP     TEST FOR EQU
  AIF   ('&SYSLIST(&OP+1,3)' EQ '' AND '&SYSLIST(&OP+1,4)' EQ '').ERR1
  AIF   ('&SYSLIST(&OP+1,3)' EQ '' OR '&SYSLIST(&OP+1,4)' EQ '').ERR1
         AIF   ('&SYSLIST(&OP+1,3)' GT '&SYSLIST(&OP+1,4)').ERR3
&START1  SETA  &SYSLIST(&OP+1,3)        GET START COUNT OF 1
&START2  SETA  &SYSLIST(&OP+1,4)        GET FIRST END COUNT
         AGO   .SET2A                   BRANCH AROUND
.ERR1    MNOTE '**FIRST SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.SET2A   AIF   ('&SYSLIST(&OP+1,5)' EQ ''AND '&SYSLIST(&OP+1,6)' EQ '' X
               ).SET2                   TEST FOR NO SECOND
  AIF   ('&SYSLIST(&OP+1,5)' EQ '' OR '&SYSLIST(&OP+1,6)' EQ '').ERR2
         AIF   ('&SYSLIST(&OP+1,5)' GT '&SYSLIST(&OP+1,6)').ERR3
&END1    SETA  &SYSLIST(&OP+1,5)        GET START COUNT OF 2
&END2    SETA  &SYSLIST(&OP+1,6)        GET END COUNT OF 2
         AGO   .LOOP
.SET2    ANOP
&ONLY1   SETB  1                        INDICATE ONLY ONE CONCATENATION
         AGO   .LOOP
.ERR2    MNOTE '**SECOND SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.ERR3    MNOTE '**START GREATER THAN END CONCATENATION**'
         MEXIT
.LOOP    ANOP
&OP      SETA  &OP+1
         AIF   (&OP GT N'&SYSLIST).DONE      TEST IF ALL DONE
&ITEMNBR SETA  &ITEMNBR+1
         AIF   ('&SYSLIST(&OP,2)' NE '').OK1
         MNOTE '**NULL BIT COUNT FIELD**'
         MEXIT
.OK1     ANOP
&SYMBOL  SETC  '&SYSLIST(&OP,1)'
         AIF   ('&SYMBOL' NE '').OK
*              *****     LOG ITEM SYMBOL NOT PROVIDED     *****
         AIF   ('&SYSLIST(&OP,3)' NE 'EQU').CNT
         AGO   .START                   GET NEXT
.OK      AIF   (N'&SYSLIST(&OP) LT 3).NO3    TEST FOR OLD FORMAT
         AIF   ('&SYSLIST(&OP,3)' EQ 'EQU').EQU   TEST FOR EQU
         AIF   (&ONLY1).OK2             TEST FOR ONLY ONE CONCAT
&SYMBOL  SETC  '&SYMBOL.&START1.&END1'       GET 1 AND 2 CONCAT
         AGO   .NO3                     BRANCH AROUND
.OK2     ANOP
&SYMBOL  SETC  '&SYMBOL.&START1'        GET 1 CONCATENATED
.NO3     ANOP
&SYMBOL  EQU   *+&BYTE
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL IN GLOBAL
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)
&SHIFT(&ITEMNBR) SETA &COUNT-&BYTE*8
.CNT     ANOP
&CTIND   SETB  1                        SET COUNT INDICATOR
&COUNT   SETA  &COUNT+&SYSLIST(&OP,2)
&BYTE    SETA  &COUNT/8
         AIF   (N'&SYSLIST(&OP) LT 3).START  TEST FOR OLD FORMAT
         AIF   (&ONLY1).TSTST           TEST FOR ONLY ONE CONCAT
         AIF   (&END1 EQ &END2).TSTST   TEST FOR SECOND END
&END1    SETA  &END1+1                  INCREMENT COUNT
&OP      SETA  &OP-1                    DECREMENT INCREMENT
         AGO   .LOOP                    GENERATE NEXT
.TSTST   ANOP
         AIF   (&START1 EQ &START2).LPDONE   TEST FOR END
         AIF   (&ONLY1).NSET1           TEST FOR ONLY ONE CONCAT
&END1    SETA  &SYSLIST(&OP,5)          RE-INIT SECOND START COUNT
.NSET1   ANOP
&OP      SETA  &OP-1                    DECREMENT INDEX
&START1  SETA  &START1+1                INCREMENT FIRST COUNT
         AGO   .LOOP                    GO DO NEXT
.LPDONE  ANOP
&ONLY1   SETB  0                        CLEAR INDICATOR
         AGO   .START                   GO TEST FOR MORE SUB-LISTS
.DONE    AIF   (&COUNT-&COUNT/8*8 NE 0).ERR  TEST FOR MULTIPLE OF EIGHT
         AIF   (&CTIND EQ 0).END        NO DS IF NO COUNT
&COUNT   SETA  &COUNT/8                 GET NUMBER OF BYTES
&NAME    DS    &COUNT.C
.END     MEXIT
.ERR     MNOTE '**BIT COUNT FLDS DO NOT TOTAL MULTIPLE OF 8**'
         MEXIT
.EQU     AIF   ('&SYSLIST(&OP,4)' NE '').EQU1     TEST FOR NULL LABEL
.ERR4    MNOTE '**EQU OPERAND OMITTED OR NOT FOUND**'
         MEXIT
.EQU1    AIF   (&SYSLIST(&OP,2) LT 16).EQU2  COUNT OVER FIFTEEN
*****               THE FOLLOWING STATEMENT                *****
*****     NUMBER OF BITS EXCEED 15 - DO NOT USE AS BIN     *****
.EQU2    ANOP
&EQUCNT  SETA  0                        CLEAR COUNTER
&EQUSYM  SETC  '&SYSLIST(&OP,4)'        GET EQU OPERAND
.EQULOP  ANOP
&EQUCNT  SETA  &EQUCNT+1                INCREMENT INDEX
         AIF   ('&ITEM(&EQUCNT)' EQ '&EQUSYM').EQUOUT  LABEL FOUND?
         AIF   (&EQUCNT EQ &ITEMNBR).ERR4    ALL TESTED?
         AGO   .EQULOP                  NO-GET NEXT
.EQUOUT  ANOP
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL NAME
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)    GET NUMBER OF BITS
&SHIFT(&ITEMNBR) SETA &SHIFT(&EQUCNT)   GET SHIFT COUNT
&SYMBOL  EQU   &EQUSYM                  THIS SYMBOL EQUATED
         AGO   .START                   RETURN FOR NEXT
         MEND
         EJECT
*  LINE MACRO     LINE MACRO     LINE MACRO     LINE MACRO            *
         SPACE 2
         MACRO
&NAME    LINE  &DATA,&LABEL,&SKIP=
.*                            THIS MACRO ESTABLISHES THE MARGINS OR
.*                                 COLUMN SETTINGS FOR EACH LINE. IT
.*                                 GENERATES NECESSARY CARRIAGE CONTROL
.*                                 ENTRIES. LASTLY IT DETERMINES THE
.*                                 NUMBER OF ENTRIES ASSOCIATED WITH
.*                                 THE PREVIOUS LINE AND STORES THAT #
.*                                 INTO THE APPROPRIATE BYTE.
.*                            &DATA(1) - CHARACTER POSITION TO BEGIN
.*                                 DATA.
.*                            &DATA(2) - # OF SPACES BETWEEN SUCCESSIVE
.*                                 DATA COLUMN STARTING CHARACTERS.
.*                            &LABEL(1) - CHAR. POS. TO BEGIN LABELS.
.*                            &LABEL(2) - # SPACES BETWEEN LINE'S LABEL
.*                                 STARTING CHARACTERS.
.*                            &SKIP= - # OF LINES TO ADVANCE CARRIAGE
.*                                 TO BEGIN NEXT PRINTED LINE.
.*                            NEW ENTRIES ARE GENERATED ONLY WHEN
.*                                 NECESSARY. OMISSION OF ITEMS MEANS
.*                                 THEY HAVE NOT CHANGED SINCE PREVIOUS
.*                                 SETTINGS. A LINE MACRO IS REQUIRED
.*                                 FOR EACH PRINTED LINE. IF NO SETTING
.*                                 CHANGES ARE REQUIRED ALL OPERANDS
.*                                 ARE OMITTED IN WHICH CASE ONLY THE
.*                                 # OF ENTRIES FOR THE PREVIOUS LINE
.*                                 IS COMPUTED. THIS MACRO MUST BE THE
.*                                 FIRST MACRO INSTRUCTION ISSUED FOR
.*                                 THE SUBJECT LINE
         GBLA  &DB,&DT,&LB,&LT,&NRENTS
         GBLA  &LASTCC,&INITIAL
         GBLC  &NRENTSX
         GBLC  &CARRCON
         GBLB  &TEST
         LCLA  &S
&NAME    DS    0C
         AIF   (&INITIAL EQ 0).FIRSTLN
         LINEND
         AGO   .NTFIRST
.FIRSTLN ANOP
&NRENTSX SETC  'N&SYSNDX'
&INITIAL SETA  1
N&SYSNDX EQU   *
.NTFIRST ANOP
         DC    AL1(0)
         AIF   ('&DATA(1)' EQ '').CKDTABS
         AIF   (&DATA(1) EQ &DB).CKDTABS
&DB      SETA  &DATA(1)
         AGO   .AA
.CKDTABS AIF   ('&DATA(2)' EQ '').NCDATA
         AIF   (&DATA(2) EQ &DT).NCDATA
         AGO   .CC
.AA      AIF   ('&DATA(2)' EQ '').BB
         AIF   (&DATA(2) EQ &DT).BB
.CC      ANOP
&DT      SETA  &DATA(2)
.BB      DC    XL2'FFFE'
         DC    FL1'&DB'
         DC    FL1'&DT'
&NRENTS  SETA  &NRENTS+1
.NCDATA  ANOP
         AIF   ('&LABEL(1)' EQ '').CKLTABS
         AIF   (&LABEL(1) EQ &LB).CKLTABS
&LB      SETA  &LABEL(1)
         AGO   .AAA
.CKLTABS AIF   ('&LABEL(2)' EQ '').NCLABEL
         AIF   (&LABEL(2) EQ &LT).NCLABEL
         AGO   .CCC
.AAA     AIF   ('&LABEL(2)' EQ '').BBB
         AIF   (&LABEL(2) EQ &LT).BBB
.CCC     ANOP
&LT      SETA  &LABEL(2)
.BBB     DC    XL2'FFFF'
         DC    FL1'&LB'
         DC    FL1'&LT'
&NRENTS  SETA  &NRENTS+1
.NCLABEL ANOP
         AIF   ('&SKIP' NE '').CONT
         AIF   (&TEST EQ 0).NOCHANG
&S       SETA  &LASTCC
         AGO   .DEFAULT
.CONT    ANOP
         AIF   (&TEST EQ 0).AB
&S       SETA  &SKIP
.DEFAULT ANOP
         ORG   &CARRCON+3
         DC    AL.3(0),AL.2(&S),AL.3(1)
         ORG
&LASTCC  SETA  &S
&TEST    SETB  0
         AGO   .DD
.AB      AIF   (&SKIP EQ &LASTCC).NOCHANG
A&SYSNDX DC    XL2'FFFB'
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
         DC    FL1'9'
&LASTCC  SETA  &SKIP
&TEST    SETB  1
&CARRCON SETC  'A&SYSNDX'
&NRENTS  SETA  &NRENTS+1
.DD      ANOP
.NOCHANG ANOP
         MEND
         EJECT
         MACRO
         BIN
.*                                 &LOGITEM - NAME OF ITEM IN LOG
.*                                      RECORD DSECT
.*                                 &SKIP$OR - NBR OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES
.*                                      TO BACK UP FROM COLUMN FOR
.*                                      START OF PRINTING. THE LETTER
.*                                      B PRECEEDS THE NUMBER (B5) IF
.*                                      THE LATTER IS DESIRED. OMISSION
.*                                      OF THIS OPERAND FORCES OPTION 2
.*                                      WITH BACKUP SPACING EQUAL TO
.*                                 THE NUMBER OF BITS IN THE ITEM
.*                                 DEFINITION (VIA MACRO 'DSGEN').
.*                            A LIMIT OF 15 BITS IS IMPOSED FOR THE
.*                                 TOTAL NUMBER OF BITS TO PRINT.
         GBLC &ITEM(1500)
         GBLA &ITEMNBR,&BITS(1500),&SHIFT(1500),&NRENTS
         GBLC  &DSECT
         LCLB  &B
         LCLA  &IBITS,&NDX,&ISHIFT,&K
         LCLA  &TEMP,&T,&OP
         LCLC  &S
.LOOP    ANOP
&OP      SETA  &OP+1
.LOOP1   ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&SYSLIST(&OP,1)').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP1
         MNOTE *,'YOU BLEW IT'
         ROUTINE DUM,SKIPPER
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
&T       SETA  &IBITS-1
&B       SETB  0
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
&T       SETA  &S
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
&TEMP    SETA  &ISHIFT
         AIF   (&IBITS NE 1 OR &B NE 0).BIN2
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'&TEMP'
         AGO   .OUT
.BIN2    AIF   ('&SYSLIST(&OP,2)' NE '').BIN3
&B       SETB  1
.BIN3    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'C'
         DC    BL.1'&B',AL.7(&T),AL.4(&IBITS),FL.4'&ISHIFT'
.OUT     ANOP
&NDX     SETA  0
         AIF   (&OP LT N'&SYSLIST).LOOP
         MEND
         EJECT
         MACRO                                                 @YM2954P
         HEX   ,                                               @YM2954P
.*                            THIS MACRO FACILITATES GENERATION OF THE
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE
.*                                 CONVERSIONS.                @YM2954P
.*                            &SYSLIST(&OP,1) - NAME OF DATA ITEM TO BE
.*                                 CONVERTED                   @YM2954P
.*                            &SYSLIST(&OP,2) - # OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO
.*                                 BACK UP FROM COLUMN FOR START OF
.*                                 PRINTING. THE LETTER B PRECEEDS THE
.*                                 NUMBER (B8) IF THE LATTER OPTION IS
.*                                 DESIRED. OMISSION OF THIS OPERAND
.*                                 FORCES OPTION 2 WITH BACKUP SPACING
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR
.*                                 IMPLICITLY B).              @YM2954P
.*                            &SYSLIST(&OP,3) - NUMBER OF BYTES TO
.*                                 PROCESS. THIS NUMBER IS SUFFIXED
.*                                 WITH AN L,R, OR B TO STIPULATE
.*                                 PRINTING OF THE LEFT HALF, RIGHT
.*                                 HALF, OR BOTH HALVES OF THE BYTE
.*                                 RESPECTIVELY. OMISSION OF THIS
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES-
.*                                 SARY. THIS MACRO MUST BE THE FIRST
.*                                 MACRO INSTRUCTION ISSUED FOR THE
.*                                 SUBJECT LINE(S).            @YM2954P
         GBLA  &BITS(1500),&ITEMNBR,&SHIFT(1500),&NRENTS       @YM2954P
         GBLC  &ITEM(1500),&DSECT                              @YM2954P
         GBLA  &INITIAL                                        @YM2954P
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN                      @YM2954P
         LCLB  &B,&SUB                                         @YM2954P
         LCLA  &IBITS,&NDX,&ISHIFT,&K,&T,&CODE,&BYTESP,&OP     @YM2954P
         LCLC  &S,&LETTER                                      @YM2954P
         ACTR  500000                                          @YM2954P
         AIF   (&DIAGTST EQ 0).NOMSG                           @YM2954P
         AIF   (&INITIAL EQ 0).NOMSG                           @YM2954P
         AIF   (&DIAGLIN EQ 1).NOMSG                           @YM2954P
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'         @YM2954P
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****            @YM2954P
*        LINE                                                  @YM2954P
         LINE                                                  @YM2954P
.NOMSG   ANOP                                                  @YM2954P
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP         @YM2954P
&SUB     SETB  1                                               @YM2954P
.LOOP    ANOP                                                  @YM2954P
&OP      SETA  &OP+1                                           @YM2954P
.LOOP1   ANOP                                                  @YM2954P
&NDX     SETA  &NDX+1                                          @YM2954P
         AIF   ('&ITEM(&NDX)' EQ '&SYSLIST(&OP,1)').FOUND      @YM2954P
         AIF   (&NDX LT &ITEMNBR).LOOP1                        @YM2954P
         MNOTE '**LOG ITEM NOT DEFINED**'                      @YM2954P
         MEXIT                                                 @YM2954P
.FOUND   ANOP                                                  @YM2954P
&ISHIFT  SETA  &SHIFT(&NDX)                                    @YM2954P
&IBITS   SETA  &BITS(&NDX)                                     @YM2954P
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).ALIGN            @YM2954P
.ERR     MNOTE '**DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY**' @YM2954P
         MEXIT                                                 @YM2954P
.ALIGN   ANOP                                                  @YM2954P
&CODE    SETA  1                                               @YM2954P
         AIF   (&SUB EQ 1).SUBA                                @YM2954P
&K       SETA  K'&SYSLIST(3)                                   @YM2954P
         AGO   .SUBB                                           @YM2954P
.SUBA    ANOP                                                  @YM2954P
&K       SETA  K'&SYSLIST(&OP,3)                               @YM2954P
.SUBB    ANOP                                                  @YM2954P
         AIF   (&K EQ 1).ERR3                                  @YM2954P
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK                   @YM2954P
         MNOTE '**BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL**'
         MEXIT                                                 @YM2954P
.OK      AIF   (&SUB EQ 1).SUBC                                @YM2954P
         AIF   ('&SYSLIST(3)' EQ '').USEDEFN                   @YM2954P
&LETTER  SETC  '&SYSLIST(3)'(&K,1)                             @YM2954P
&S       SETC  '&SYSLIST(3)'(1,&K-1)                           @YM2954P
         AGO   .SUBD                                           @YM2954P
.SUBC    ANOP                                                  @YM2954P
         AIF   ('&SYSLIST(&OP,3)' EQ '').USEDEFN               @YM2954P
&LETTER  SETC  '&SYSLIST(&OP,3)'(&K,1)                         @YM2954P
&S       SETC  '&SYSLIST(&OP,3)'(1,&K-1)                       @YM2954P
.SUBD    ANOP                                                  @YM2954P
&BYTESP  SETA  &S                                              @YM2954P
         AIF   ('&LETTER' EQ 'B').BOTH                         @YM2954P
         AIF   ('&LETTER' EQ 'L').LEFT                         @YM2954P
         AIF   ('&LETTER' EQ 'R').RIGHT                        @YM2954P
.ERR3    MNOTE '**PARAMETER 3 INCOMPLETE-DSGEN DEFINITION USED**'
         AGO   .USEDEFN                                        @YM2954P
.RIGHT   ANOP                                                  @YM2954P
&CODE    SETA  2                                               @YM2954P
         AGO   .L                                              @YM2954P
.LEFT    ANOP                                                  @YM2954P
&CODE    SETA  1                                               @YM2954P
         AGO   .L                                              @YM2954P
.USEDEFN ANOP                                                  @YM2954P
&BYTESP  SETA  &IBITS/8                                        @YM2954P
.BOTH    AIF   (&ISHIFT NE 0).ERR                              @YM2954P
&CODE    SETA  3                                               @YM2954P
&T       SETA  &BYTESP*2-1                                     @YM2954P
&S       SETC  '&T'                                            @YM2954P
.OK2     AIF   (&ISHIFT EQ 0).L                                @YM2954P
&CODE    SETA  2                                               @YM2954P
.L       ANOP                                                  @YM2954P
&B       SETB  1                                               @YM2954P
         AIF   (&SUB EQ 1).SUBE                                @YM2954P
         AIF   ('&SYSLIST(2)' EQ '').BACKUP                    @YM2954P
&K       SETA  K'&SYSLIST(2)                                   @YM2954P
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')                     @YM2954P
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)                       @YM2954P
         AGO   .SUBF                                           @YM2954P
.SUBE    ANOP                                                  @YM2954P
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP                @YM2954P
&K       SETA  K'&SYSLIST(&OP,2)                               @YM2954P
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')                 @YM2954P
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)                   @YM2954P
.SUBF    ANOP                                                  @YM2954P
.BACKUP  ANOP                                                  @YM2954P
&NRENTS  SETA  &NRENTS+1                                       @YM2954P
         AIF   (&BYTESP GT 0 AND &BYTESP LT 16).SUB0           @YM2954P
         MNOTE '**NO. OF BYTES OUTSIDE RANGE OF 1-15**'        @YM2954P
         MEXIT                                                 @YM2954P
.SUB0    AIF   (&SUB EQ 1).SUBG                                @YM2954P
         DC    AL.12(&SYSLIST(1)-&DSECT),XL.4'A'               @YM2954P
         AGO   .SUBH                                           @YM2954P
.SUBG    ANOP                                                  @YM2954P
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'A'           @YM2954P
.SUBH    ANOP                                                  @YM2954P
         DC    BL.1'&B',FL.7'&S',AL.4(&BYTESP),FL.4'&CODE'     @YM2954P
.OUT     ANOP                                                  @YM2954P
&NDX     SETA  0                                               @YM2954P
         AIF   (&SUB EQ 0).OUTA                                @YM2954P
         AIF   (&OP LT N'&SYSLIST).LOOP                        @YM2954P
.OUTA    ANOP                                                  @YM2954P
         MEND                                                  @YM2954P
         EJECT
*  ROUTINE MACRO     ROUTINE MACRO     ROUTINE MACRO     ROUTINE MACRO*
         SPACE 2
         MACRO
&NAME    ROUTINE &LOGITEM,&RNAME
         GBLC  &DSECT,&CSECT
         GBLC  &ITEM(1500)
         GBLA  &SHIFT(1500),&ITEMNBR
         GBLA  &NRENTS
         LCLA  &ISHIFT,&NDX
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOG ITEM NOT DEFINED'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&NAME    DC    AL.12(&LOGITEM-&DSECT),XL.4'D'
         DC    AL.4(&ISHIFT),AL.12(&RNAME-&CSECT)
&NRENTS  SETA  &NRENTS+1
         MEND
         EJECT
*  LABEL MACRO     LABEL MACRO     LABEL MACRO     LABEL MACRO        *
         SPACE 2
         MACRO
&NAME    LABEL &LABEL1,&LABEL2,&LABEL3,&LABEL4,&LABEL5,&LABEL6,        C
               &LABEL7,&LABEL8
.*                            THIS MACRO ALLOWS UP TO ACHT LABELS TO
.*                                 BE SPECIFIED FOR A GIVEN LINE. THE
.*                                 LABELS SHOULD BE ENCLOSED IN QUOTA-
.*                                 TION MARKS. THE COLUMN AND LINE END
.*                                 CONTROLS WILL BE INSERTED BY THE
.*                                 MACRO. OMITTED OPERANDS MEAN NO
.*                                 LABEL REQUIRED FOR RESPECTIVE
.*                                 COLUMN. THIS MACRO WILL ALSO ALERT
.*                                 THE PROGRAMMER TO EXACTLY WHERE THE
.*                                 TABLE MUST BE BROKEN IF NECESSARY
.*                                 TO AVOID EXCEEDING THE MAXIMUM LIMIT
         GBLC &LABELS(2000)
         GBLC  &LBL(100)
         GBLA  &LBLCTR(100)
         GBLA  &LABELNR
         GBLA  &NRENTS,&LPTR
         LCLC  &MARGIN,&TACK
         LCLC  &TEXT
         LCLA  &OP,&K,&START,&NRCHAR,&REMAIN
&MARGIN  SETC  '*'
         AIF   ('&NAME' EQ '').LOOPOUT
&LPTR    SETA  &LPTR+1
&LBL(&LPTR) SETC '&NAME'
&LBLCTR(&LPTR) SETA &LABELNR+1
.LOOPOUT ANOP
&OP      SETA  &OP+1
&K       SETA  K'&SYSLIST(&OP)
         AIF (&K GE 2).NORM
&K       SETA  2
.NORM    ANOP
&START   SETA  2
         AIF (&OP LT N'&SYSLIST).NOTLAST
&MARGIN  SETC  '$'
.NOTLAST ANOP
&NRCHAR  SETA  8
&TACK    SETC  ''
.LOOPIN  ANOP
&REMAIN  SETA  &K-&START
         AIF (&REMAIN GE 8).MORE
&TACK    SETC  '&MARGIN'
&NRCHAR  SETA  &REMAIN
.MORE    ANOP
&TEXT    SETC  ''
         AIF (&REMAIN EQ 0).ENDTEXT
&TEXT    SETC  '&SYSLIST(&OP)'(&START,&NRCHAR)
.ENDTEXT ANOP
&LABELNR SETA  &LABELNR+1
&LABELS(&LABELNR) SETC '&TEXT'.'&TACK'
&START   SETA  &START+8
         AIF ('&TACK' EQ '').LOOPIN
         AIF ('&TACK' EQ '*').LOOPOUT
         MEND
         SPACE 2
         MACRO
         LSTART
.*                            THIS MACRO IS ISSUED WHEN THE LABEL AREA
.*                                 OF THE TABLE IS TO BEGIN.
         GBLC &LABELS(2000)
         GBLA  &LABELNR
         GBLC  &LBL(100)
         GBLA  &LBLCTR(100)
         LCLA  &NDX,&CTR
         LINEND
&CTR     SETA  1
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   (&LBLCTR(&CTR) NE &NDX).NOLBL
&LBL(&CTR) DC  C'&LABELS(&NDX)'
&CTR     SETA  &CTR+1
         AGO   .LOOPCTL
.NOLBL   ANOP
         DC    C'&LABELS(&NDX)'
.LOOPCTL AIF   (&NDX LT &LABELNR).LOOP
         MEND
         SPACE 2
         MACRO
         LINEND
.*                            THIS MACRO IS USED ONLY BY THE LINE
.*                                 MACRO TO SET THE NUMBER OF ENTRIES
.*                                 ASSOCIATED WITH EACH LINE.
         GBLA  &NRENTS
         GBLC &NRENTSX
         ORG   &NRENTSX
         DC    FL1'&NRENTS'
         ORG
&NRENTS  SETA  0
B&SYSNDX EQU   *
&NRENTSX SETC  'B&SYSNDX'
         MEND
         SPACE 2
         MACRO
         PARITY &ENTRY,&REPEAT,&SPACES,&PBITS=,&DISP=,&OFFBYTE=
         GBLC  &ITEM(1500),&DSECT
         GBLA  &SHIFT(1500),&ITEMNBR
         LCLA  &IBITS,&NDX,&ISHIFT
         DC    AL4(&ENTRY)
         DC    AL1(&REPEAT)
         DC    AL1(&SPACES)
         AIF   ('&PBITS' EQ '').HARDCD
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&PBITS').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'PARITY GROUP NOT FOUND'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
         DC    AL.12(&PBITS-&DSECT),AL.4(&ISHIFT)
         AGO   .OUT
.HARDCD  ANOP
&ISHIFT  SETA  &OFFBYTE
         DC    AL.12(&DISP),AL.4(&ISHIFT)
.OUT     ANOP
         MEND
         GBLC  &DSECT,&CSECT
&CSECT   SETC  'IFCEI145'
&DSECT   SETC  'CI145'
IFCEI145 CSECT
CI145    DSECT
DUM      EQU   *
         DSGEN (XKEY,8),(XRELN,8),(XSWS8,9),(SWS9,1),          @XL03976C
               (SWS10,1),(XSWS11,1),                           @XL03976C
               (XSWS12,1),(XSWS13,1),(XSWS14,1),(XSWS15,1)
         DSGEN (XDUM1,32)
         DSGEN (XDATE,32)
         DSGEN (XTIME,32)
         DSGEN (XDUM2,8),(XSER,24)
         DSGEN (XMOD,16),(MCEL,16)
         DSGEN (XJOBN,64)
         DSGEN (XAIO1,16),(XAIO2,16),(XAIO3,16),(XAIO4,16)
         DSGEN (XAIO5,16),(XAIO6,16),(XAIO7,16),(XAIO8,16)
         DSGEN (XFCCWCC,8),(XFCCWDA,24),(XFCCWFL,8),(XFCCW0,8),        C
               (XFCCWCT,16)
         DSGEN (XCSWK,8),(XCSWCA,24)
         DSGEN (XCSWUS0,1),(XCSWUS1,1),(XCSWUS2,1),(XCSWUS3,1),        *
               (XCSWUS4,1),(XCSWUS5,1),(XCSWUS6,1),(XCSWUS7,1),        *
               (XCSWCS0,1),(XCSWCS1,1),(XCSWCS2,1),(XCSWCS3,1),        *
               (XCSWCS4,1),(XCSWCS5,1),(XCSWCS6,1),(XCSWCS7,1),        *
               (XCSWCT,16)
         DSGEN (XECSW,32)
         DSGEN (XDEVT1,16),(XDEVT2,16)
         DSGEN (XCHID,8),(XCUA,24)
         DSGEN (XMPIN,32),(HARDWARE,32)
         ORG   XMPIN                                           @YL02021
         DSGEN (VCUA,16),(VLGSZ,16),(HD,32)                    @YL02021
MPXCTREG DSGEN (MCHLOG00,1),(MCHLOG01,1),(MCHLOG02,1),(MCHLOG03,1),    X
               (MCHLOG04,1),(MCHLOG05,1),(MCHLOG06,1),(MCHLOG07,1),    X
               (MCHLOG08,8),(MCHLOG09,16)
         DSGEN (MBSLOGA,16),(MBSLOG01,8),(DUMMY,8)
         DSGEN (MCLOCREG,8),(CCWADDR,24)
         DSGEN (MCHRG00,1),(MCHRG01,1),(MCHRG02,1),(MCHRG03,1),        X
               (MCHRG04,1),(MCHRG05,1),(MCHRG06,1),(MCHRG07,1),        X
               (MCHRG08,1),(MCHRG09,1),(MCHRG10,1),(MCHRG11,1),        X
               (MCHRG12,1),(MCHRG13,1),(MCHRG14,1),(MCHRG15,1),        X
               (MCHRG16,1),(MCHRG17,1),(MCHRG18,1),(MCHRG19,1),        X
               (MCHRG20,1),(MCHRG21,1),(MCHRG22,1),(MCHRG23,1),        X
               (MCHRG24,1),(MCHRG25,1),(MCHRG26,1),(MCHRG27,1),        X
               (MCHRG28,1),(MCHRG29,1),(MCHRG30,1),(MCHRG31,1)
         DSGEN (MCHRGB00,1),(MCHRGB01,1),(MCHRGB02,1),(MCHRGB03,1),    X
               (MCHRGB04,1),(MCHRGB05,1),(MCHRGB06,1),(MCHRGB07,1),    X
               (MCHRGB08,1),(MCHRGB09,1),(MCHRGB10,1),(MCHRGB11,1),    X
               (MCHRGB12,1),(MCHRGB13,1),(MCHRGB14,1),(MCHRGB15,1),    X
               (MCHRGB16,1),(MCHRGB17,1),(MCHRGB18,1),(MCHRGB19,1),    X
               (MCHRGB20,1),(MCHRGB21,1),(MCHRGB22,1),(MCHRGB23,1),    X
               (MCHRGB24,1),(MCHRGB25,1),(MCHRGB26,1),(MCHRGB27,1),    X
               (MCHRGB28,1),(MCHRGB29,1),(MCHRGB30,1),(MCHRGB31,1)
         DSGEN (MPXTAG00,1),(MPXTAG01,1),(MPXTAG02,1),(MPXTAG03,1),    X
               (MPXTAG04,1),(MPXTAG05,1),(MPXTAG06,1),(MPXTAG07,1),    X
               (MPXTAG08,1),(MPXTAG09,1),(MPXTAG10,1),(MPXTAG11,1),    X
               (MPXTAG12,1),(MPXTAG13,1),(MPXTAG14,1),(MPXTAG15,1),    X
               (MPXBUSIN,8),(MPXBSOUT,8)
         DSGEN (CONSWDIN,8),                                           X
               (CONSWD00,1),(CONSWD01,1),(CONSWD02,1),(CONSWD03,1),    X
               (CONSWD04,1),(CONSWD05,1),(CONSWD06,1),(CONSWD07,1),    X
               (CONSWD08,1),(CONSWD09,1),(CONSWD10,1),(CONSWD11,1),    X
               (CONSWD12,1),(CONSWD13,1),(CONSWD14,1),(CONSWD15,1),    X
               (CONSWOUT,8)
         DSGEN (MDUNUSED,16),(MDCATNBR,8),(,8)
         DSGEN (MDREGADD,32,EQU,MDUNUSED)
         DSGEN (LOCFLG00,1),(LOCFLG01,1),(LOCFLG02,1),(LOCFLG03,1),    X
               (LOCFLG04,1),(LOCFLG05,1),(LOCFLG06,1),(LOCFLG07,1),    X
               (CHSTAT00,1),(CHSTAT01,1),(CHSTAT02,1),(CHSTAT03,1),    X
               (CHSTAT04,1),(CHSTAT05,1),(CHSTAT06,1),(CHSTAT07,1),    X
               (STORCNTH,8),(STORCNTL,8)
         DSGEN (IOCREG,32)                                     @XA21957
         DSGEN (RETCNTUN,4),(RETCNT2H,4),(RETUNUS,16),(NONRETRY,8)
         DSGEN (RTYREG1,32),(RTYREG2,32)
         DSGEN (REGUNU,8),                                             X
               (HREG0,1),(HREG1,1),(HREG2,1),(HREG3,1),(HREG4,1),      X
               (HREG5,1),(HREG6,1),(HREG7,1),(RETRG23,16)
         DSGEN (RTYRG400,1),(RTYRG401,1),(RTYRG402,1),(RTYRG403,1),    X
               (RTYRG404,1),(RTYRG405,1),(RTYRG406,1),(RTYRG407,1),    X
               (RTYRG408,1),(RTYRG409,1),(RTYRG410,1),(RTYRG411,1),    X
               (RTYRG412,1),(RTYRG413,1),(RTYRG414,1),(RTYRG415,1),    X
               (RTUNSED,1),(RTYRG417,3),(RTYRG420,3),(RTYEXP,1),       C
               (RTYUNSD,1),                                            C
               (RTYRG425,3),(RTYRG428,3),(RTYNOTUS,1)
         DSGEN (CTRLDWD,32)
         DSGEN (SYSREG00,1),(SYSREG01,1),(SYSREG02,1),(SYSREG03,1),    X
               (SYSREG04,1),(SYSREG05,1),(SYSREG06,1),(SYSREG07,1),    X
               (SYSREG08,1),(SYSREG09,1),(SYSREG10,1),(SYSREG11,1),    X
               (SYSREG12,1),(SYSREG13,1),(SYSREG14,1),(SYSREG15,1),    X
               (SYSREG16,1),(SYSREG17,1),(SYSREG18,1),(SYSREG19,1),    X
               (SYSREG20,1),(SYSREG21,1),(SYSREG22,1),(SYSREG23,1),    X
               (SYSREG24,1),(SYSREG25,1),(SYSREG26,1),(SYSREG27,1),    X
               (SYSREG28,1),(SYSREG29,1),(SYSREG30,1),(SYSREG31,1)
         DSGEN (IREG,8),(IREGB,24)
         DSGEN (UREGA1,2),(UREGA2,2),(UREGA3,4),(UREGA4,4),(UREGA5,4), X
               (UREGC1,8),(UREGC2,8)
         DSGEN (SPARES,32,0,4)                                 @YM2954P
         DSGEN (VCCHPR0,1,1,9),(VCCHPR,1,10,16)                @YM2954P
         DSGEN (VCCHPR1,16,EQU,VCCHPR01)                       @YM2954P
         DSGEN (VDUM,24),(VFLAG,8),(VNOPRO,16)                 @YM2954P
         DSGEN (VPROC01,16),(VCHST01,16),(VPROC02,16),(VCHST02,16),    X
               (VPROC03,16),(VCHST03,16),(VPROC04,16),(VCHST04,16),    X
               (VPROC05,16),(VCHST05,16),(VPROC06,16),(VCHST06,16),    X
               (VPROC07,16),(VCHST07,16),(VPROC08,16),(VCHST08,16),    X
               (VPROC09,16),(VCHST09,16),(VPROC10,16),(VCHST10,16),    X
               (VPROC11,16),(VCHST11,16),(VPROC12,16),(VCHST12,16),    X
               (VPROC13,16),(VCHST13,16),(VPROC14,16),(VCHST14,16),    X
               (VPROC15,16),(VCHST15,16),(VPROC16,16),(VCHST16,16)
         EJECT
*
IFCEP000 DSECT
         DS    CL6
         DS    CL1
         DS    CL1
XPRTBUF  DS    15CL8
         DS    5CL8
         DS    3CL8
         DS    CL8
XSWITCH  DS    CL4
*
*      ROUTINE BRANCH TABLE
*
         DS    CL112
*
*      LOAD MODULE ENTRYPOINT NAMES
*
         DS    CL56
*
*      READ/WRITE BUFFER
*
XMCH     DC    XL2'00'
XCNTBUF  DS    CL8
XKEYBUF  DS    CL2
XDADBUF  DS    197CL8
XDUMMY   DS    CL1
         SPACE 3
ERPIB    DSECT                                                    19032
SOFWFLGS DS    CL1                 PROGRAM FLAGS FIELD IN ERPIB   19032
PROBERR  DS    CL1                 PROBABLE SOURCE OF ERROR FIELD 19032
VALFLAGS DS    CL1                 VALIDITY FLAGS FIELD           19032
CMPLBITS DS    CL1                 TERM AND RETRY CODES FIELD     19032
MPINFOFD DS    CL2                 MULTI-PROCESSING INFO FIELD    19032
CHSMS    DS    CL2                 CHANNEL STATUS FIELD           19032
         EJECT
IFCEI145 CSECT
ENTRYPTR DC    A(FORMAT1)
TABLNAME DC    CL8'IFCEI145'
REG9     DS    F
LP       DS    F
         SPACE 2
SKIPPER  EQU   *
         BR    14
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
****    ADDRESS EQUATES
AD0      EQU   0
AD1      EQU   1
***   LENGTH EQUATES
L0       EQU   0
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4
L5       EQU   5
L6       EQU   6
L7       EQU   7
L8       EQU   8
L10      EQU   10
L12      EQU   12
L14      EQU   14
L16      EQU   16
L19      EQU   19
L24      EQU   24
L26      EQU   26                                              @XA19715
L32      EQU   32
L60      EQU   60
***   CONDITION CODE EQUATES
CC2      EQU   2
CC4      EQU   4
****    NUMERICAL EQUATES
X09      EQU   X'09'
H01      EQU   X'01'                                           @YL02021
H21      EQU   X'21'                                           @YL02021
HEXBF    EQU   X'BF'
HEX48    EQU   X'48'
HEX02    EQU   X'02'
HEX04    EQU   X'04'
HEX08    EQU   X'08'
HEX10    EQU   X'10'
HEX20    EQU   X'20'
HEX40    EQU   X'40'
HEX00    EQU   X'00'
DIV1     EQU   X'0A'
DIV2     EQU   X'0C'
K1       EQU   1
         USING IFCEI145,R9,R6
         USING CI145,R2                                        @YM2954P
*                                                                     *
* IN CASE OF A INTERFACE CONTROL CHECK THE CATALOG NUMBER IS PUT      *
* OUT ON THE PRINTOUT BUT IT IS NOT VALID FOR OTHER TYPES OF ERRORS   *
* AND IS BLANKED OUT                                                  *
*                                                                     *
NEWENT   DC    A(SHRTENT-4)
NEWLAB   DC    A(SHRTLAB)
BASE2    DC    A(IFCEI145+4096)
CATNBR   STM   R5,R6,XSAVE        SAVE REGISTERS
         L     R6,BASE2           SET ADDRESSABILITY FOR DUMPSIZE
         LR    R5,R3              GET POINTER TO LINE POSITION
         TM    L0(R4),X'02'        IS THIS INTERFACE CONTROL CHECK
         BC    8,BLANK            NO IT IS NOT
         MVI   DUMPSIZE+1,X'7C'         SHORT RECORD           @YM2954P
         CLI   XKEY,H21                 VS2 RELEASE (MVM)      @YM2954P
         BNE   SHORTVS2                 NO                     @YM2954P
         MVI   DUMPSIZE+1,X'C4'         SHORT VS2 RECORD SIZE  @YM2954P
SHORTVS2 EQU   *                                               @YM2954P
         SH    R5,EIGHT0          POINT TO LABEL POSITION
         MVC   L0(L14,R5),CATLBL  MOVE IN LABEL
         LM    R5,R6,XSAVE        RESTORE REGISTERS
         BR    R14
BLANK    MVI   DUMPSIZE+1,X'B4'   PUT SIZE OF RECORD FOR HEX DUMP
         CLI   XKEY,H21                 VS2 RELEASE (MVM)      @YM2954P
         BNE   LONGVS2                  NO                     @YM2954P
         MVI   DUMPSIZE+1,X'FC'         LONG  VS2 RECORD SIZE  @YM2954P
LONGVS2  EQU   *                                               @YM2954P
         SH    R5,SIX2            POINT TO CATALOG NUMBER
         MVI   L0(R5),X'40'       PUT IN BLANK
         MVI   L1(R5),X'40'       PUT IN BLANK
         LM    R5,R6,XSAVE        RESTORE REGISTERS
         BR    R14
CATLBL   DC    C'CATALOG NUMBER'
SIX2     DC    H'62'
EIGHT0   DC    H'80'
************************************************************** @XA19715
* PRINT THE CURRENT LINE IF THIS IS A 148 CONSOLE (3148) CCH RECORD   *
************************************************************** @XA19715
PRT3148  TM    21(R2),X'48'             IS THIS A 148 CPU      @XA19715
         BO    CK3148                   YES                    @XA19715
         B     NOPRT                    NO, DO NOT PRINT LINE  @XA19715
CK3148   CLC   XDEVT2(L2),DEV3148       3148 CONSOLE CCH ?     @XA19715
         BCR   8,R14                    YES, PRINT THIS LINE   @XA19715
         B     NOPRT                    NO, DO NOT PRINT LINE  @XA19715
************************************************************** @XA19715
* PRINT THE CURRENT LINE IF THIS IS A 148 CCH RECORD           @XA19715
************************************************************** @XA19715
PRT148   TM    21(R2),X'48'             IS THIS A 148 CPU      @XA19715
         BOR   R14                      YES                    @XA19715
         B     NOPRT                    NO, DO NOT PRINT LINE  @XA19715
************************************************************** @XA19715
* PRINT THE CURRENT LINE IF THIS IS NOT A 148 CONSOLE (3148) CCH RECD *
************************************************************** @XA19715
NPRT3148 TM    21(R2),X'48'             IS THIS A 148 CPU      @XA19715
         BCR   14,R14                   NO, SO PRINT THIS LINE @XA19715
         CLC   XDEVT2(L2),DEV3148       3148 CONSOLE CCH ?     @XA19715
         BCR   7,R14                    NO, SO PRINT THIS LINE @XA19715
         B     NOPRT                    YES, DO NOT PRINT LINE @XA19715
DEV3148  DC    X'100F'                                         @XA19715
************************************************************** @XA19715
* PRINT THE CURRENT LINE IF THIS IS NOT A 148 CCH RECD         @XA19715
************************************************************** @XA19715
NPRT148  TM    21(R2),X'48'             IS THIS A 148 CPU      @XA19715
         BNOR  R14                      NO, SO PRINT THIS LINE @XA19715
         B     NOPRT                    YES, DO NOT PRINT LINE @XA19715
************************************************************** @XA19715
* SKIP OVER FORMATTING 145 TA/TT BYTES IF CURR. RECD IS 148    @XA19715
************************************************************** @XA19715
TEST148  TM    21(R2),X'48'             IS THIS A 148 CPU      @XA19715
         BCR   14,R14                   NO, EXIT               @XA19715
         CLC   XDEVT2(L2),DEV3148       3148 CONSOLE CCH ?     @XA19715
         BCR   7,R14                    NO, EXIT               @XA19715
         MVC   REG9(8),SKIP148          YES, UPDATE L/L PTRS   @XA19715
         B     NOPRT                    DO NOT PRINT THIS LINE @XA19715
SKIP148  DC    A(LINE148-4)                                    @XA19715
         DC    A(LAB148)                                       @XA19715
************************************************************** @XA19715
* SKIP OVER FORMATTING 148 TA/TT BYTES BECAUSE CURRENT RECD IS 145    *
************************************************************** @XA19715
JUMPN148 MVC   REG9(8),SKIPN148         UPDATE LINE/LABEL PTRS @XA19715
         SR    R15,R15                  DO NOT PRINT THIS LINE @XA19715
         BR    R14                      EXIT                   @XA19715
SKIPN148 DC    A(VS2LINE-4)                                    @XA19715
         DC    A(LABN148)                                      @XA19715
************************************************************** @XA19715
* DETERMINE THE PROPER LABEL FOR BITS 0,1 OF THE 148 TT BYTE   @XA19715
* BIT 0 1  REQUIRED LABEL                                      @XA19715
*     0 0  DISPLAY                                             @XA19715
*     0 1  3286                                                @XA19715
*     1 0  3203 NO. 1                                          @XA19715
*     1 1  3203 NO. 2                                          @XA19715
************************************************************** @XA19715
EXTPTR   STM   R5,R8,XSAVE              SAVE THE WORK REGS     @XA19715
         LR    R5,R3                    GET PTR TO POS IN BUFR @XA19715
         S     R5,TWOFIVE               BACK UP BUFR PTR       @XA19715
         TM    CONSWD08,X'C0'           CHK EXTN PTR BITS      @XA19715
         BZ    DISP00                   DISPLAY INDICATED      @XA19715
         BO    N320311                  3203 NO. 2 INDICATED   @XA19715
         TM    CONSWD08,X'80'           CHECK BIT              @XA19715
         BO    N320310                  3203 NO. 1 INDICATED   @XA19715
         MVC   L0(L26,R5),LAB3286       MOVE IN 3286 LABEL     @XA19715
         B     RETURN                   EXIT                   @XA19715
DISP00   MVC   L0(L26,R5),LABDISP       MOVE IN DISPLAY LABEL  @XA19715
         B     RETURN                   EXIT                   @XA19715
N320311  MVC   L0(L26,R5),LAB32032      MOVE IN 3203 NO. 2 LAB @XA19715
         B     RETURN                   EXIT                   @XA19715
N320310  MVC   L0(L26,R5),LAB32031      MOVE IN 3203 NO. 1 LAB @XA19715
         B     RETURN                   EXIT                   @XA19715
TWOFIVE  DC    F'25'                                           @XA19715
LAB32031 DC    C'EXT PTR (3203 NO. 1)    10'                   @XA19715
LAB32032 DC    C'EXT PTR (3203 NO. 2)    11'                   @XA19715
LABDISP  DC    C'EXT PTR (DISPLAY)       00'                   @XA19715
LAB3286  DC    C'EXT PTR (3286)          01'                   @XA19715
*                                                                     *
*                                                                     *
* IN CASE OF AN INTERFACE CONTROL CHECK ONLY NINE WORDS OF LOGOUT ARE *
* VALID AND THE REST HAS TO BE SKIPPED OVER.
*                                                                     *
WHERETO  TM    L0(R4),X'02'       IS THIS INTERFACE CONTROL CHECK
         BCR   8,R14              NO RETURN
         ST    R7,XSAVE           SAVE REGISTER
         L     R7,NEWENT          GET NEW ENTRY POINTER
         ST    R7,REG9
         L     R7,NEWLAB          GET NEW LABEL POINTER
         ST    R7,LP
         L     R7,XSAVE           RELOAD THE REGISTER
         B     NOPRT              GO TO SET REG FOR NO PRINT
SETSOURC STM   R5,R8,XSAVE              SAVE REGS
         XC    NOPRO(4),NOPRO           CLEAR                  @YM2954P
         MVC   L0(L3,R3),CCCH           MOVE CHANNEL RECORD
         CLI   L0(R4),HEX20             TEST REC SOURCE
         BE    RETURN
         CLI   L0(R4),H21               TEST SOURCE            @YM2954P
         BE    RETURN                   CCH VS2(MVM)           @YM2954P
         MVC   L0(L3,R3),MCHH           MOVE MCH RECORD
         B     RETURN                   RETURN
*
CONVREL  STM   R5,R8,XSAVE              SAVE WORK REGS         @XL03976
         SR    R6,R6                    CLEAR                  @XL03976
         IC    R6,L0(R4)                PICK UP REL & SYS VALUES
         SRDL  R6,L5                    SHIFT REL NO. TO R7    @XL03976
         SLL   R6,L2                    MULTIPLY SYS VALUE BY 4
         L     R8,LP                    PICK UP LABEL PTR      @XL03976
         LA    R6,RELTAB(R6)            INDEX INTO SYS TABLE   @XL03976
         MVC   L0(L4,R8),L0(R6)         MOVE SYS LABEL         @XL03976
         SR    R6,R6                    CLEAR                  @XL03976
         SLDL  R6,L5                    RETREIVE REL NO.       @XL03976
         LTR   R6,R6                    IS IT ZERO             @XL03976
         BZ    NOREL                                           @XL03976
         CVD   R6,XWORK                 CONVERT IT
         UNPK  L0(L2,R3),XWORK+L6(L2)   INPACK REL. NO.        @YM4854P
         MVZ   L1(L1,R3),L0(R3)         MOVE PROPER ZONE       @XL03976
         B     RETURN                   RETURN                 @XL03976
NOREL    MVC   L0(L4,R3),NONE           MOVE IN NONE FOR REL.  @XL03976
         B     RETURN                   RETURN                 @XL03976
*
SETPGMN  MVC   L0(L8,R3),L0(R4)         MOVE 8 CHAR NAME TO BUFF
         BR    R14
*
SPACER2  LA    R3,L2(R3)                BUMP R3 PTR BY 2
         BR    R14
*
SETHEX   STM   R5,R8,XSAVE              SAVE REGS
         LA    R8,CHARS                 CHAR TABLE PTR
         IC    R7,L0(R4)                PICK UP CHAR
         SLL   R7,L24                   MOVE IT TO HI POS
         SR    R6,R6
         SLDL  R6,L4                    MOVE 4 BITS TO R6
         AR    R6,R8                    INDEX FOR CHARS
         MVC   L0(L1,R3),L0(R6)         MOVE CHAR TO BUFF
         SR    R6,R6
         SLDL  R6,L4                    MOVE LAST 4 BITS TO R6
         AR    R6,R8                    INDEX INTO TABLE
         MVC   L1(L1,R3),L0(R6)         MOVE CHAR
         B     RETURN
*
*
*
*                              SET ACTIVE  I/O UNITS
SETAIO   STM   R5,R8,XSAVE              SAVE REGS
         LR    R5,R3                    SET R5 TO BUFFER
         SH    R5,H44                   POINT R5 TO BEGGIN OF DATA
         SR    R7,R7
         LA    R6,L8                    LOOP COUNT
SETAIOLP CLC   L0(L4,R5),CZEROS         TEST FOR ALL ZEROS
         BE    BLANKOUT                 BE-TO BLANK OUT ZEROS
SETAIOL1 LA    R5,L5(R5)                BUMP COUNT
         BCT   R6,SETAIOLP              LOOP TILL 8 TESTS
         CH    R7,H8                    ARE ALL ACTIVE IO ZERO
         BNE   RETURN                   NO RETURN
         LR    R5,R3                    YES
         SH    R5,H44                   PUT IN NONE
         MVC   L0(L4,R5),NONE           INTO PRINT BUFF
         B     RETURN
BLANKOUT MVC   L0(L4,R5),BLANKS         MOVE IN BLANKS
         LA    R7,L1(R7)                COUNT # OF ZERO FLDS
         B     SETAIOL1                 LOOP
RETURN   LM    R5,R8,XSAVE
         BR    R14
*
*
CHKSW9   TM    L1(R4),HEX40             TEST SWITCHES
CHECKCC  BZ    NOPRT                    IF SWITCHES OFF
         BR    R14                      DONOT PRINT
CHKSW10  TM    L1(R4),HEX20             R15 RETURNED ZERO
         B     CHECKCC                  STOPS PRINTING
CHKSW11  TM    L1(R4),HEX10
         B     CHECKCC
CHKSW12  TM    L1(R4),HEX08
         B     CHECKCC
CHKSW13  TM    L1(R4),HEX04
         B     CHECKCC
CHKSW14  TM    L1(R4),HEX02
         B     CHECKCC
NOPRT    SR    R15,R15
         BR    R14
*
SETDATE  UNPK  XWORK(L8),L0(L4,R4)      UNPACL DATE
         MVZ   XWORK+L7(L1),XWORK       SET ZONE
         MVC   L0(L3,R3),XWORK+L5       MOVE DAY
         MVC  L6(L2,R3),XWORK+L3
         BR    R14                      RETURN
*
CONVTIME EQU   *                                               @YM2954P
RETURNB  BR    R14                      RETURN
*
ISITVS2  STM   R5,R8,XSAVE             SAVE REGS               @YL02021
         CLI   XKEY,H21                TEST FOR VS2            @YL02021
         BE    RETURN                  NOT VS2                 @YL02021
         SR    R15,R15                 ELIM. LABEL             @YL02021
         B     RETURN                                          @YL02021
VS2TEST  STM   R5,R8,XSAVE             SAVE REGS               @YM2954P
         CLI   XKEY,H21                IS IT VS2               @YM2954P
         BNE   COMPL                    SET UP FOR DUMP AND RET
         MVC   LOGSIZA(L2),VLGSZ        GET LOG SIZE           @YM2954P
         LA    R5,HARDWARE              START OF LOG            YM5678P
         A     R5,LOGSIZE               ADD SIZE OF LOG
         LA    R6,VCCHPR1               START OF VS2 DATA
         LA    R7,L72                   LENGTH OF VS2 DATA-MAX @YM2954P
NXTBYT   IC    R8,L0(R7,R5)             MOVE DATA              @YM2954P
         STC   R8,L0(R7,R6)              BYTE BY BYTE          @YM2954P
         BCT   R7,NXTBYT                NEXT                   @YM2954P
         B     RETURN                                          @YM2954P
PROC     STM   R5,R8,XSAVE             SAVE REGS               @YM2954P
         SR    R5,R5                   CLEAR REG 5             @YM2954P
         L     R5,NOPRO                PLACE THE NO. OF PROC. IN REG 5
         LA    R5,1(R5)                ADD ONE TO REG. 5       @YM2954P
         ST    R5,NOPRO                PLACE BACK IN CORE      @YM2954P
         CLC   VNOPRO(2),NOPRO+2       COMP. WITH ACTUAL NO. OF PROC.
         BL    COMPLETE                FINISHED                @YM2954P
         LR    R5,R3                                           @YM2954P
         LA    R6,L47                   ADJUST OFFSET          @YM2954P
         SR    R5,R6                                           @YM2954P
         MVC   L0(L17,R5),MSGAA                                @YM2954P
         MVC   L27(L16,R5),MSGBA                               @YM2954P
PROCBIN  LH    R4,L0(R4)           FETCH DATA                  @YM2954P
         SLL   R4,L15                   POSITION DATA          @YM2954P
         LA    R6,L46              LENGTH OF LABEL             @YM2954P
         AR    R5,R6               SET UP POINTER              @YM2954P
         LA    R6,L16                   CHANGE COUNT           @YM2954P
TESTIT   SLL   R4,L1                    POSITION CHANNEL IND   @YM2954P
         LTR   R4,R4                    TEST FOR ON LINE       @YM2954P
         BNM   CHANACT                  BRANCH ON LINE         @YM2954P
PRINT    LA    R5,L3(R5)                UPDATE PRINT POINTER   @YM4854P
         BCT   R6,TESTIT           NEXT CHANNEL                @YM2954P
         B     RETURN                                          @YM2954P
CHANACT  MVI   L0(R5),C'X'         MOVE X TO PRINT             @YM2954P
         B     PRINT                    NEXT CHANNEL           @YM2954P
COMPLETE LA    R5,HARDWARE              START OF LOG            YM5678P
         A     R5,LOGSIZE               ADD SIZE OF LOG
         LA    R6,VCCHPR1               START OF VS2 DATA
         LA    R7,L72                   LENGTH OF VS2 DATA-MAX @YM2954P
         SR    R4,R4                    CLEAR                  @YM4854P
NXTBYTE  IC    R8,L0(R4,R6)             MOVE DATA              @YM4854P
         STC   R8,L0(R4,R5)              BYTE BY BYTE          @YM4854P
         LA    R4,L1(R4)                UPDATE                 @YM4854P
         BCT   R7,NXTBYTE               NEXT                   @YM2954P
COMPL    L     R5,DUMP                  LOAD ADDR OF DUMP AREA @YM2954P
         ST    R5,REG9                                         @YM2954P
         SR    R15,R15                  BLANK LABEL            @YM4854P
         B     RETURN                                          @YM2954P
NOPRO    DC    F'00'                                           @YM2954P
LOGSIZE  DC    F'0'                                            @YM2954P
LOGSIZA  EQU   LOGSIZE+2                                       @YM2954P
MSGAA    DC    C'PROCESSOR ADDRESS'                            @YM2954P
MSGBA    DC    C'CHANNELS ON LINE'                             @YM2954P
DUMP     DC    A(DUMPCODE-4)                                   @YM2954P
NOLOG    STM   R4,R7,ZSAVE              SAVE REGS              @YM2954P
         L     R6,BASE2                 SECOND BASE REG        @YM2954P
         SH    R4,HTWO                  BACK UP TO REC SIZE    @YM2954P
         CLI   XKEY,H21                VS2 RELEASE (MVM)       @YM2954P
         BE    CHKLOG                   YES                    @YM2954P
         CLC   HDRCNT(L2),L0(R4)        TEST SIZE              @YM2954P
         BL    NOPRINT                  LOG PRISENT            @YM2954P
         MVI   DUMPSIZE+1,X'54'         NO LOG RECORD SIZE     @YM2954P
BYPASLOG L     R5,NOLOGPTR              SET UP                 @YM2954P
         ST    R5,REG9                   TO                    @YM2954P
         L     R5,NOLOGLAB                BYPASS               @YM2954P
         ST    R5,LP                       LOG                 @YM2954P
         MVC   L0(L27,R3),NOLOGMSG      NO-LOGOUT MESSAGE      @YM4854P
RESTORE  LM    R4,R7,ZSAVE              RESTORE REGS           @YM2954P
         BR    R14                                             @YM2954P
NOPRINT  SR    R15,R15                  BLANK LABEL            @YM2954P
         B     RESTORE                                         @YM2954P
CHKLOG   CLC   HDRCNT2(L2),L0(R4)       TEST SIZE              @YM2954P
         BL    NOPRINT                  LOG PRESENT            @YM2954P
         MVI   DUMPSIZE+1,X'9C'         NO LOG SIZE            @YM2954P
         B     BYPASLOG                BYPASS LOG DATA         @YM2954P
SELCHAN  STM   R4,R7,ZSAVE
         CLI   AD0(R4),K1         TEST FO SEL OR OTHER LOG
         BE    MPXROUT
         LA    R5,NXTBL-L4         NEXT TABLE ADDRESS
         L     R15,RG9PTR
         ST    R5,0(R15)           STORE INTO R9 POINTER
         SR    R15,R15
MPXROUT  LM    R4,R7,ZSAVE
         BR    R14
ZSAVE    DS    4F
HDRCNT   DC    XL2'60'                                         @YM2954P
HDRCNT2  DC    XL2'A0'                                         @YM2954P
L15      EQU   15                                              @YM2954P
L17      EQU   17                                              @YM2954P
L25      EQU   25                                              @YM2954P
L27      EQU   27                                              @YM2954P
L46      EQU   46                                              @YM2954P
L47      EQU   47                                              @YM2954P
L66      EQU   66                                              @YM2954P
L72      EQU   72                                              @YM2954P
HTWO     DC    H'2'
XWORK    DS    D
XSAVE    DS    4F
H8       DC    H'8'                                            @YM2954P
H44      DC    H'44'                                           @YM2954P
NXTBL    DC    X'FE'
         DC    CL8'IFCEJ145'
CHARS    DC    C'0123456789ABCDEF'
NONE     DC    C'NONE'
CZEROS   DC    C'0000'
BLANKS   DC    C'    '
CCCH     DC    CL3'CCH'
MCHH     DC    CL3'MCH'
ONE      DC    F'1'
VS2FLG   DC    X'00'                                           @YL02021
CHNTYPE  MVC   AD1(L7,R3),MSGA          MOVE UNKOWN TYPE MSG   @XA19715
         CLI   AD0(R4),KA               COMPARE CCH TYPE TO 0A @XA19715
         BCR   CC2,R14                  EXIT IF CHAN TYPE HIGH @XA19715
         BL    CHNTYPE0                 CHAN TYPE LESS THAN 0A @XA19715
CHANTYPF MVC   AD1(L16,R3),MSGF         MOVE IN MSG F          @XA19715
         BR    R14                      EXIT                   @XA19715
CHNTYPE0 CLI   AD0(R4),K2               COMPARE CCH TYPE TO 02 @XA19715
         BH    CHNTYPE3                 CCH TYPE MORE THAN 02  @XA19715
         BL    CHNTYPE1                 CONTINUE CHECK         @XA19715
         MVC   AD1(L10,R3),MSGD         MOVE IN MSG D          @XA19715
         BR    R14                      EXIT                   @XA19715
CHNTYPE3 MVC   AD1(L14,R3),MSGB         MOVE IN MSG B          @XA19715
         BR    R14                      EXIT                   @XA19715
CHNTYPE1 CLI   AD0(R4),K1               COMPARE CCH TO A 01    @XA19715
         BCR   CC4,R14                  EXIT IF CCH IS LOW     @XA19715
         MVC   AD1(L10,R3),MSGC         MOVE IN MSG C          @XA19715
         BR    R14                      EXIT                   @XA19715
KA       EQU   X'0A'                                           @XA19715
MSGA     DC    C'UNKNOWN'                                      @XA19715
MSGB     DC    C'INTGTD BLK MPX'                               @XA19715
MSGC     DC    C'INTGTD MPX'                                   @XA19715
MSGD     DC    C'INTGTD SEL'                                   @XA19715
MSGF     DC    C'INTGTD FILE ADPT'                             @XA19715
         DROP  R6                                              @XA19715
         EJECT
IFCASR01 DS    0H
         USING *,R15
         STM   R14,R12,12(R13)          SAVE REGISTERS
         CLI   XKEY,H21                                        @YL02021
         BNE   CONTIN                                          @YL02021
         OI    VS2FLG,H01                                      @YL02021
CONTIN   ST    R13,SVR13               SAVE REG 13             @YL02021
         L     R11,NXENTRY              LOAD SUBROUTINE RETURN ADR
         LTR   R11,R11                  TEST FOR INITIAL ENTRY
         BZ    IFCASR02                 BRANCH IF 0-INITIAL ENTRY
         LM    R12,R10,MYSAVE           RELOAD SUBROUTINE REGS
         BR    R11                      CONTINUE PROCESSING
IFCASR02 DS    0H
         SH    R3,TWOX                  SUBTRACT 2 FROM PRNT BFR ADR
         MVC   L0(L1,R3),L1(R3)         MOVE PRINTER CNTRL CHAR
         LA    R3,L1(R3)                INCREMENT PRNT BFR ADR
         USING XDADBUF,R4
         USING XPRTBUF,R3
NEWMOVE  CLI   XKEYBUF+1,REL19          RELEASE 19                19E03
         BE    NEWMOVE1                 BRANCH--YES               19E03
         MVC   CSWORD(8),XDADBUF+54     MOVE CSW                  19E03
         MVC   ERPIBFLD(4),XDADBUF+62   MOVE ERPIB                19E03
         MVC   MULTISYS(4),XDADBUF+74   MOVE CHANSTAT INFO        19E03
         B     CONTINUE                 CONTINUE                  19E03
NEWMOVE1 MVC   CSWORD(8),XDADBUF+46     MOVE CSW                  19E03
         MVC   ERPIBFLD(4),XDADBUF+54   MOVE ERPIB                19E03
         MVC   MULTISYS(4),XDADBUF+66   MOVE CHANSTAT INFO        19E03
CONTINUE ST    R9,SAVBASE          SAVE THE BASE ADDRESS
         LA    R9,ERPIBFLD              DSECT ADDRESSIBILITY      19E03
         USING ERPIB,R9
         MVI   SETUPBFR+1,C'*'                                     MP
         MVC   SETUPBFR+2(78),SETUPBFR+1                           MP
         BAL   BRANPRT,XWRTPRT    MOVE BORDER TO BUFFER AND WRITE  MP
         L     R6,VS2                                          @YL02021
         CLI   0(R6),X'01'                                     @YL02021
         BE    DUMMYTST                                        @YL02021
         MVI   SETUPBFR,C'-'           SKIP TWO SPACES             MP
         TM    MPINFOFD,MSBIT      IS MULTI-SYSTEM BIT SET        19032
         BZ    DUMMYTST      IFNOT,CKECK FOR ENTRANCE FROM ASR01   MP
         LA    SETUPADR,SETUPBFR       ADDRESS OF PRINT BUFFER     MP
         MVC   24(24,SETUPADR),MSHEAD   MOVE MULTI-SYSTEM HDR TO BUFMP
         BAL   BRANPRT,XWRTPRT     WRITE HEADER                    MP
         MVI   SETUPBFR+1,C'*'                                     MP
         MVI   VDSTAR,C'*'                                         MP
         BAL   BRANPRT,XWRTPRT     WRITE LINE DIVIDER              MP
*                                                                  MP
*                                                                  MP
*              THIS ROUTINE FORMATS AND PRINTS A MESSAGE           MP
*              CONTAINING THE ID OF THE FAILING CPU AND            MP
*              THE STATUS OF THE MULTI-PROCESSING SYSTEM           MP
*                                                                  MP
*                                                                  MP
         MVC   10(12,SETUPADR),MSCPUID  MOVE CPUID MESSAGE TO BUFFERMP
         MVC   30(15,SETUPADR),MSCPUST  MOVE CPU STATUS MESSAGE    MP
         MVI   0(SETUPADR),C'-'    SKIP TWO SPACES AFTER LINE      MP
         TM    MPINFOFD,ID         TEST FOR WHICH CPU             19032
         BZ    STATEST       SKIP CPU ID                           MP
         MVI   14(SETUPADR),C'2'   INSERT CPUID=CPU2               MP
STATEST  IC    R1,MPINFOFD         GET MS BYTE IN MPINFO          19032
         SLL   R1,30               CLEAR FOR CPUSTAT               MP
         LTR   R1,R1               TEST FOR ZERO,NEGATIVE OR POSITIVEMP
         BC    12,SHARED           IS STATUS NOT PARTITION         MP
         MVC   45(11,SETUPADR),PART     STATUS WAS PARTITIONED     MP
         B     CHANTEST      GO FOR CHANNEL STATUS                 MP
SHARED   MVC   45(6,SETUPADR),SHAR      SHARED STATUS              MP
         BE    CHANTEST                 WAS CPU RECONFIGURED OUT   MP
         MVC   51(21,SETUPADR),RECON    YES                        MP
         EJECT
*                                                                  MP
*                                                                  MP
*              THIS ROUTINE TESTS A TWO BYTE FIELD                 MP
*              MPINFO FIELD                          TO DETERMINE
*              THE CHANNEL STATUS FOR BOTH CPUS AND FORMAT         MP
*              A MESSAGE TO INDICATE THAT STATUS                   MP
*                                                                  MP
*                                                                  MP
CHANTEST BAL   BRANPRT,XWRTPRT          PRINT INFORMATION          MP
         MVI   0(SETUPADR),C'-'         SKIP TWO SPACES            MP
         MVC   10(27,SETUPADR),CHCNFIG  CHANNEL CONFIGURATION MESSAGEMP
         LA    UPKREG,0                                            MP
         TM    MPINFOFD,ID         WAS CPUID=CPU2                 19032
         BZ    CCHMOVE                 NO                          MP
         MVI   14(SETUPADR),C'2'        YES, ENTER ID 2            MP
CCHMOVE  BAL   BRANPRT,XWRTPRT          PRINT MESSAGE              MP
         LA    R1,7                     LOOP CONTROL               MP
         LA    R2,14(SETUPADR)          PTR TO SLOT FOR 'OFF' MESSAGEMP
         IC    R5,CHSMS(UPKREG)         GET CHANNEL STATUS BYTE    MP
         MVC   10(55,SETUPADR),CHTAB    GET LIST OF CHANNELS       MP
         SLL   R5,24                    POSITION BYTE FOR BIT TESTINGMP
MSLOOP   LTR   R5,R5         IS BIT ON (NEGATIVE REG) OR OFF       MP
         BC    10,MSUPDT                NO                         MP
         MVC   0(3,R2),OFF              CHANNEL OFFLINE            MP
MSUPDT   SLL   R5,1                     MOVE TO NEXT CHANNEL BIT   MP
         LA    R2,8(R2)                 UPDATE MESSAGE POINTER     MP
         BCT   R1,MSLOOP                EXIT AFTER 7-BITS PROCESSED MP
MSREND   BAL   BRANPRT,XWRTPRT          WRITE CHANNEL STATUS MESSAGEMP
         LTR   UPKREG,UPKREG            TEST FOR SECOND TIME THROUGH MP
         BC    7,PRTHD                  BOTH BYTES OF CHANSTAT PRINTED
         LA    UPKREG,1(UPKREG)         PTR TO 2ND.BYTE OF CHANSTATMP
         MVC   10(27,SETUPADR),CHCNFIG  MOVE IN CHANNEL CONFIGURATIONMP
         TM    MPINFOFD,ID         ESTABLISH CPUID                19032
         BO    CCHMOVE                  BRANCH IF CPUID=CPU2       MP
         MVI   14(SETUPADR),C'2'        PUT CPU2 IN MESSAGE        MP
         B     CCHMOVE       PRINT MESSAGE                         MP
PRTHD    MVI   SETUPBFR+1,C'*'             SETUP TO PRINT DIVIDER
         MVC   2(78,SETUPADR),1(SETUPADR)
         MVI   SETUPBFR,C'0'               SPACE FIRST
         BAL   BRANPRT,XWRTPRT             PRINT DIVIDER
DUMMYTST LA    SETUPADR,SETUPBFR   GET ADDR OF BUFFER FOR PRINT    MP
*                                       MESSAGE                    MP
         MVI   0(SETUPADR),C'0'         SKIP SPACE AFTER NEXT MESSAGEMP
         OC    ERPIBFLD+1(3),ERPIBFLD+1  TEST FOR DUMMY ERPIB     19032
         BNE   MSCONT                   CONTINUE IF MEANINGFUL ERPIB MP
         MVC   10(39,SETUPADR),MSASR    PRINT ASR01 ENTRY MESSAGE  MP
         MVI   0(SETUPADR),C'-'         SKIP 2 LINES               MP
         BAL   BRANPRT,XWRTPRT          PRINT INFORAMATION         MP
         MVC   10(17,SETUPADR),MSNERPIB ERPIB NOT CREATED MESSAGE  MP
         BAL   BRANPRT,XWRTPRT          PRINT INFORMATION          MP
         B     RETCNTL       RETURN CONTROL                        MP
*                                                                  MP
         EJECT
MSCONT   EQU   *                                                   MP
*   *    *    *    *    *    *    *    *    *    *    *    *    *    *
*                          INSTRUCTION ANALYSIS                       *
*        THIS PROGRAM SECTION WILL INSPECT THE FIRST FOUR(4) BITS IN  *
*        THE FIRST BYTE  OF THE              ERPIB AREA, TO DETERMINE *
*        THE INSTRUCTION CAUSING THE ERROR.                           *
         LA    SETUPADR,SETUPBFR       SET UP HEADER BOARDER.
         MVC   SETUPBFR+27(25),HEADER    SET UP HEADER MESSAGE
         MVI   0(SETUPADR),C'0'          SPACE ONE LINE
         BAL   BRANPRT,XWRTPRT
*                                                                     *
*                            TEST FOR INTERRUPT                       *
*                                                                     *
         TM    SOFWFLGS,X'40'          INTERRUPT TEST.
         BZ    INST
         MVC   SETUPBFR(42),ERRINT     BUFFER INTERRUPT MESSAGE.
         B     RITEOUT
*                                                                     *
*   *    *    *    *    *    *    *    *    *    *    *    *    *    *
*                                                                     *
*        BITS 32-35 WILL BE TESTED                                    *
*                                                                     *
INST     MVC   SETUPBFR(33),CAUSERR    TYPE-INST ERROR HEADER.
         TM    SOFWFLGS,X'80'          TEST FOR SIO INSTRUCTION ERROR.
         BO    PRTERSIO                BRANCH TO SETUP PRINT BUFFER.
         TM    SOFWFLGS,X'20'          TEST FOR TIO INSTRUCTION.
         BO    PRTERTIO                BRANCH TO SETUP PRINT BUFFER.
*                                                                     *
PRTERHIO MVC   SET1(3),ERRHIO          MOVE HIO LABEL INTO BUFFER.
         B     RITEOUT                 PREPARE TO WRITE MESSAGE.
*                                                                     *
PRTERSIO MVC   SET1(3),ERRSIO          MOVE SIO LABEL INTO BUFFER.
         B     RITEOUT                 PREPARE TO WRITE MESSAGE.
*                                                                     *
PRTERTIO MVC   SET1(3),ERRTIO          MOVE TIO LABEL INTO BUFFER.
*                                                                     *
RITEOUT  BAL   BRANPRT,XWRTPRT         WRITE OUT APPROPRIATE MESSAGE.
*   *    *    *    *    *    *    *    *    *    *    *    *    *    *
*        THE FOLLOWING PROGRAM SECTION WILL INSPECT THE ERPIBFLD
*        TO DETERMINE IF AN ERPIB IS PRESENT.   IF  ONE IS
*        NOT FOUND, CONTROL WILL BE RETURNED.
*   *    *    *    *    *    *    *    *    *    *    *    *    *    *
         OC    ERPIBFLD+1(3),ERPIBFLD+1  TEST FOR  ERPIB PRESENT  19032
         BZ    NONEXIST                WRITE MSG TO INDICATE NONEXISTS.
         B     TEST1         TEST COMPLETION CODE                  MP
*                         UCB ADDRESS NON-EXISTANT
NONEXIST MVC   SETUPBFR(45),NOUCB        SET UP MSG FOR NO UCB
         BAL   BRANPRT,XWRTPRT         WRITE MESSAGE.
         B     RETCNTL                 RETURN TO CONTROL.
*   *    *    *    *    *    *    *    *    *    *    *    *    *    *
*        THE FOLLOWING PROGRAM SECTION WILL TEST  BYTE 5     OF THE
*        ERPIB FOR A NO RETRY BIT SETTING. IF ON, CONTROL IS RETURNED
*        AFTER MESSAGE IS PRINTED OUT.
*   *    *    *    *    *    *    *    *    *    *    *    *    *    *
*                       OUTPUT RETRY CODE VALUE
*
*   *    *    *    *    *    *    *    *    *    *    *    *    *    *
*                            TEST SOFTWARE FLAGS
TEST     MVC   SETUPBFR(32),RETCDVAL     BUFFER THE BASIC MESSAGE
         IC    WORK,CMPLBITS       CONTENTS OF BYTE 8 INTO R3     19032
         TM    VALFLAGS,X'10'            TEST FOR VALID RETRY CODE
         BO    VALFLG              IF VALID, GO SETUP MESSAGE
         MVC   33(43,SETUPADR),NOTVM  SETUP NOT ASSESSABLE MESSAGE
         B     BUFITA           GO PRINT IT
VALFLG   N     WORK,MASK           GET RID OF UNNEED BITS
         STC   WORK,RCMSG+12       STORE NUMBER IN RETRY CODE MESSAGE
         OI    RCMSG+12,X'F0'      MAKE PRINTABLE
         MH    WORK,CONST
         LA    WORK,MSGSTRT(WORK)  SETUP MESSAGE INDEX
         MVC   33(44,SETUPADR),0(WORK) MOVE MESSAGE TO BUFFER
BUFIT    BAL   BRANPRT,XWRTPRT     PRINT IT
         MVC   34(14,SETUPADR),RCMSG  MOVE RETRY MSG TO BUFFER
BUFITA   BAL   BRANPRT,XWRTPRT
         TM    CMPLBITS,X'08'      IS DISCONNECT IN SET           19032
         BNO   NOTDISIN            NO, SKIP MSG                   19032
         MVC   SETUPBFR(23),DISCIN SET UP MSG                     19032
         BAL   BRANPRT,XWRTPRT     PRINT MSG                      19032
NOTDISIN EQU   *                                                  19032
*
*                                  TEST NO-RETRY BIT
         TM    SOFWFLGS,X'01'          IF NORETRY BIT IS NOT ON,BRANCH
*                                      TO PRINT VALID INDICATOR MSG.
         BZ    VALIDIND
         MVC   SETUPBFR(28),NORETRY    INDICATES THAT THE BIT WAS ON.
         BAL   BRANPRT,XWRTPRT         WRITE THE MESSAGE.
         B     RETCNTL                 RETURN CONTROL.
VALIDIND MVC   SETUPBFR(29),VALIDITY   RECORDED DATA HEADING TO BUFFER
         BAL   BRANPRT,XWRTPRT         INDICATOR HEADER.
*
*                                  TEST VALID RETRY CODE
*
*
*                            TEST COUNT BIT
         MVC   SETUPBFR(42),VALCOUNT   BUFFER THE BASIC MESSAGE.
         TM    SOFWFLGS,X'02'          TEST COUNT VALIDITY.
         BZ    INVCOUNT                IF OFF, PRINT INVALID MSG.
         MVC   33(9,SETUPADR),37(SETUPADR) MODIFY THE BASIC MESSAGE.
INVCOUNT BAL   BRANPRT,XWRTPRT         WRITE MESSAGE.
*
*                            TEST FOR SENSE DATA STORED
*
         MVC   SETUPBFR(43),SENSDATA   BUFFER THE BASIC MESSAGE.
         TM    SOFWFLGS,X'04'          TEST SENSE BIT.
         BZ    NOSTORE                 IF OFF BRANCH TO WRITE NOSTORE.
         MVC   33(10,SETUPADR),37(SETUPADR) MODIFY THE BASIC MESSAGE.
NOSTORE  BAL   BRANPRT,XWRTPRT         WRITE THE MESSAGE.
*                            TEST UNIT STATUS BIT
         MVC   SETUPBFR(42),INVALUN    BUFFER THE BASIC MESSAGE.
         TM    VALFLAGS,X'08'          TEST FOR VALID UNIT STATUS.
         BZ    WRTOUT                  UNIT STATUS INVALID.
         MVC   33(9,SETUPADR),37(SETUPADR) MODIFY THE BASIC MESSAGE.
WRTOUT   BAL   BRANPRT,XWRTPRT         WRITE MESSAGE.
*
*                            TEST COMMAND ADDRESS BIT
*
         MVC   SETUPBFR(42),INVALCAD   MOVE INVALID COM MSG TO BUFFER.
         TM    VALFLAGS,X'04'          TEST FOR VALID COMMAND ADDRESS.
         BZ    PTOUT                   COMMAND ADDRESS INVALID.
         MVC   33(9,SETUPADR),37(SETUPADR) MODIFY THE BASIC MESSAGE.
PTOUT    BAL   BRANPRT,XWRTPRT         WRITE THE MESSAGE.
*
*                            TEST CHANNEL ADDRESS BIT
*
         MVC   SETUPBFR(42),INVALCHA   MOVE INVALID CHN MSG TO BFR.
         TM    VALFLAGS,X'02'          TEST FOR VALID CHANNEL ADDRESS.
         BZ    OUTWRT                  INVALID CHANNEL ADDRESS.
         MVC   33(9,SETUPADR),37(SETUPADR) MODIFY THE BASIC MESSAGE.
OUTWRT   BAL   BRANPRT,XWRTPRT         WRITE MESSAGE.
*
*                            TEST FOR VALID DEVICE ADDRESS
*
         MVC   SETUPBFR(42),INVALDVA   MOVE INVALID DVC ADDR MSG TO BFR
         TM    VALFLAGS,X'01'          TEST FOR VALID DEVICE ADDRESS.
         BZ    OUTPRT                  INVALID DEVICE ADDRESS.
         MVC   33(9,SETUPADR),37(SETUPADR) MODIFY THE BASIC MESSAGE.
OUTPRT   BAL   BRANPRT,XWRTPRT         WRITE MESSAGE.
*
*        PROBABLE SOURCE OF ERROR
*
         MVC   SETUPBFR(29),PSOERR      INSERT BASE MSG IN BUFFER
         CLI   PROBERR,X'80'            TEST FOR CPU ERROR
         BE    CPUER                    BRANCH TO SET UP CPU ERR MSG
         CLI   PROBERR,X'40'            TEST FOR CHANNEL ERROR
         BE    CHNER                    BRANCH TO SETUP CHANNEL ERROR
         CLI   PROBERR,X'20'       TEST FOR SCU ERROR             19032
         BE    SCUER               YES- GO SET UP FOR SCU ERRMSG  19032
         CLI   PROBERR,X'10'            TEST FOR STORAGE ERROR
         BE    STORGER                  GO SETUP STORAGE ERROR MSG
         CLI   PROBERR,X'08'            TEST FOR I/O INTERFACE ERROR
         BE    INFER                    GO SETUP I/O INTF ERROR MSG
         MVC   30(25,SETUPADR),NOTVM    SETUP NOT ASSESSABLE MESSAGE
         B     WPRMSG                   GO PRINT MSG
CPUER    MVC   30(3,SETUPADR),CPUERMSG  BUFFER CPU ERROR MESSAGE
         B     WPRMSG                   GO PRINT
CHNER    MVC   30(7,SETUPADR),CHANERMS  SETUP CHANNEL ERROR MESSAGE
         B     WPRMSG                   GO PRINT
SCUER    MVC   30(20,SETUPADR),SCUERMS  SET UP SCU MSG            19032
         B     WPRMSG                   GO PRINT IT               19032
STORGER  MVC   30(7,SETUPADR),STOGERMS  SETUP STORAGE ERROR MESSAGE
         B     WPRMSG                   GO PRINT
INFER    MVC   30(13,SETUPADR),IOINFER  SET UP INTERFACE ERROR MESSAGE
WPRMSG   BAL   BRANPRT,XWRTPRT          PRINT MESSAGE
         B     RETCNTL
*
*                            TEST COMPLETION CODE
*
TEST1    MVC   SETUPBFR(23),COMCODE    INSERT COMPLETION CODE MESSAGE
*                                      IN PRINT BUFFER.
         TM    CMPLBITS,X'C0'          TEST FOR COMPLETION CODE '3'.
         BO    SYSRET                  BRANCH FOR SYS RESET MSG OUTPUT.
         TM    CMPLBITS,X'80'          TEST FOR COMPLETION CODE '2'
         BO    SELRET                  BRANCH FOR SEL RESET MSG OUTPUT.
         TM    CMPLBITS,X'40'          TEST FOR COMPLETION CODE '1'
         BO    FORENDSQ                BRANCH FOR FORCED END MSG OUTPUT
*
*                            INTERFACE DISCONNECT
*
         MVC   SET2(29),INTDISCN      SET UP INTERFACE DISCONNECT MSG
         B     WRITER                  MESSAGE AND WRITE IT OUT.
*
*                            SYSTEM RESET
*
SYSRET   MVC   SET2(21),SYSRES        SETUP  THE SYSTEM RESET MSG AND
         B     WRITER                  WRITE IT OUT.
*
*                            SELECTIVE RESET
*
SELRET   MVC   SET2(24),SELRES          SETUP SELECTIVE RESET  MSG AND
         B     WRITER                  AND WRITE IT OUT.
*
*                            FORCED ENDING SEQUENCE
*
FORENDSQ MVC   SET2(31),FORCEND         SETUP FORCE END MESSAGE AND
*                                      WRITE IT OUT.
*
*                            OUTPUT OF COMPLETION
*                              CODE MESSAGES
*
WRITER   BAL   BRANPRT,XWRTPRT
         B     TEST
*
*                                 RETURN CONTROL
*
RETCNTL  EQU   *                                                  19032
         MVI   SETUPBFR+1,C'*'
         MVC   2(78,SETUPADR),1(SETUPADR)
         MVI   0(SETUPADR),C'-'         SETUP TO SPACE TWICE
         BAL   BRANPRT,XWRTPRT
         TM    CSWORD+5,X'06'          EITHER CHAN CTRL OR I/F CTRL CHK
         BC    8,MSG                   NO, PRINT LOGOUT MESSAGE.
FIN1     DS    0C
         LA    R0,0                     ZERO WORK REGISTER
         ST    R0,NXENTRY               CLEAR ENTRY POINTER
         L     R13,SVR13                RESTORE REG 13
         LM    R14,R12,12(R13)          RESTORE REGISTERS
         BR    R14                      RETURN
*
*                            PRINT NO-LOGOUT MESSAGE
*
MSG      MVC   SETUPBFR+1(78),ERMSG    BUFFER THE MESSAGE.
         BAL   BRANPRT,XWRTPRT
         L     R9,SAVBASE         RESTORE THE BASE ADDRESS
         L     R0,NOLOGPTR              POINT                  @YM2954P
         L     R1,RG9PTR                 AROUND                @YM2954P
         ST    R0,AD0(R1)                 LOGOUT               @YM2954P
         L     R0,NOLOGLAB                 LINES               @YM2954P
         L     R1,LPPTR                     AND                @YM2954P
         ST    R0,AD0(R1)                    LABELS            @YM2954P
         B     FIN1
SAVBASE  DC    F'0'
*                                                                  MP
***      THIS ROUTINE CONVERTS HEX CHARACTERS TO EBCDIC            MP
*                                                                  MP
*        INPUT   R1 -         LINKREG                               MP
*                CLEAREG -    COUNT OF BYTES TO BE CONVERTED        MP
*                R5 -         ADDRESS OF FIELD TO BE CONVERTED     MP
***              SETUPADR -   ADDRESS OF OUTPUT AREA               MP
*                                                                  MP
*                                                                  MP
CONVERT  SR    R2,R2                    CLEAR EVEN WORK REG (HI-ORDEMP
         IC    R2,0(R5)                 GET CHARACTER FROM INPUT FIE MP
         SRDL  R2,4                     SAVE HIGH ORDER BITS       MP
         SRL   WORK,28                  SAVE LOW ORDER BITS        MP
         IC    R2,CONTAB(R2)            GET EBCDIC EQUIVALENT      MP
         IC    WORK,CONTAB(WORK)             FROM TABLE            MP
         STC   R2,0(SETUPADR)           STORE CHARACTERS IN PRINTABL MP
         STC   WORK,1(SETUPADR)              FORM IN BUFFER        MP
         LA    R5,1(R5)                 UPDATE INPUT FIELD PTR     MP
         LA    SETUPADR,2(SETUPADR)     UPDATE BUFFER POINTER      MP
         BCT   CLEAREG,CONVERT          LOOP UNTIL ALL BYTES PROCESS MP
         BR    R1                       RETURN                     MP
         SPACE
****    ROUTINE TO RETURN CONTROL TO CONTROL MODULE
XWRTPRT  DS    0C
         ST    BRANPRT,NXENTRY          STORE LINK ADDRESS
         STM   R12,R10,MYSAVE           SAVE SUBROUTINE REGS
         L     R0,RTNPTR                LOAD ADCON FOR RETURN POINTER
         L     R1,RG9PTR                LOAD POINTER TO REG9
         ST    R0,AD0(R1)               STORE RETURN POINTER
         L     R0,LBLPTR                LOAD POINTER TO LABEL
         L     R1,LPPTR                 LOAD POINTER TO LP
         ST    R0,AD0(R1)               STORE LABEL POINTER
         L     R13,SVR13                RESTORE REG 13
         MVI   AD0(R3),X09
         LM    R14,R12,12(R13)          RESTORE REGISTERS
         BR    R14                      RETURN
*
*                            STORAGE
*
RELTAB   DS    0C                                              @XL03976
         DC    C'OS  '                                         @XL03976
         DC    C'DOS '                                         @XL03976
         DC    C'VS 1'                                         @XL03976
         DC    C'V370'                                         @XL03976
         DC    C'VS 2'                                         @XL03976
         DC    C'    '                                         @XL03976
         DC    C'    '                                         @XL03976
         DC    C'    '                                         @XL03976
         DS    0F
GPRMS    EQU   XDADBUF+248                                         MP
VDSTAR   EQU   XPRTBUF+79                                          MP
ID       EQU   X'08'                                               MP
MSBIT    EQU   X'10'                                                MP
K0       EQU   0                                                  19E03
K2       EQU   2                                                  19E03
K4       EQU   4                                                  19E03
K8       EQU   8                                                  19E03
K24      EQU   24                                                 19E03
FOXDOG   EQU   X'FD'                                              19E03
REL19    EQU   19                                                 19E02
XPRTBUF1 EQU   XPRTBUF+1                                          19E03
MODA48   DC    X'0155'                  MODEL 155 - NS A48        19E02
DECCOUNT DS    F                                                  19E03
*
SETUPBFR EQU   XPRTBUF
CSWORD   DC    D'0'                CSW LOCATION                   19032
ERPIBFLD DC    F'0'                LAST HALF ERPIB                19032
MULTISYS DC    F'0'                MULTI-PROCESSING INFO          19032
MASK     DC    F'7'
CONST    DC    H'44'
TWOX     DC    H'2'
SET1     EQU   SETUPBFR+22
SET2     EQU   SETUPBFR+21
*
*                            REGISTERS
WORK     EQU   11
UPKREG   EQU   6                       ADDRESSES UNPACK AREA.
SETUPADR EQU   7                       ADDRESSES PRINT BUFFER.
BRANPRT  EQU   11                      ADDRESSES PRINT ROUTINE.
CLEAREG  EQU   12
*
*                            MESSAGES
*
*
CAUSERR  DC    C'-  CSW STORED BY  --             '
ERRINT   DC    C'-  CSW STORED BY  INTERRUPT               '
ERRSIO   DC    C'SIO'
ERRTIO   DC    C'TIO'
ERRHIO   DC    C'HIO'
NOUCB    DC    C'   NO ADDITIONAL ERROR INFORMATION AVAILABLE.'
COMCODE  DC    C'   TERMINATION BY  --  '
SYSRES   DC    C' SYSTEM RESET- CODE 3'
SELRES   DC    C' SELECTIVE RESET- CODE 2'
FORCEND  DC    C' FORCED ENDING SEQUENCE- CODE 1'
INTDISCN DC    C' INTERFACE DISCONNECT- CODE 0'
RETCDVAL DC    C'   TIME CHANNEL DETECTED ERROR -'
RCMSG    DC    C'RETRY CODE    '
MSGSTRT  DC    C' WHILE EXECUTING TIO                        '
         DC    C' BETWEEN COMMAND OUT AND UNIT STATUS RETURN '
         DC    C' COMMAND ACCEPTED BUT BEFORE DATA TRANSFER  '
         DC    C' SOME DATA TRANSFER-CSW COMMAND ADR UPDATED '
         DC    C' COMMAND REJECTED OR COMMAND OUT NOT SENT   '
         DC    C' COMMAND ACCEPTED-DATA TRANSFER UNDETERMINED'
         DC    C' COULD NOT BE ASSESSED                      '
NOTVM    DC    C' COULD NOT BE ASSESSED                      '
NORETRY  DC    C'0  PROGRAM ASSESSED NO RETRY'
DISCIN   DC    C'   DISCONNECT IN ISSUED'                         19032
VALIDITY DC    C'0  VALIDITY OF RECORDED DATA '
VALCOUNT DC    C'            COUNT              = NOT VALID'
SENSDATA DC    C'            SENSE DATA         = NOT STORED'
INVALUN  DC    C'            UNIT STATUS        = NOT VALID'
INVALCAD DC    C'            COMMAND ADDRESS    = NOT VALID'
INVALCHA DC    C'            CHANNEL ADDRESS    = NOT VALID'
INVALDVA DC    C'            DEVICE ADDRESS     = NOT VALID'
PSOERR   DC    C'0  PROBABLE SOURCE OF ERROR- '
CPUERMSG DC    C'CPU'
CHANERMS DC    C'CHANNEL'
SCUERMS  DC    C'STORAGE CONTROL UNIT'                            19032
STOGERMS DC    C'STORAGE'
IOINFER  DC    C'CONTROL UNIT '
HEADER   DC    C' CHANNEL  ERROR  ANALYSIS'
ERMSG    DC    C'CHANNEL CTRL OR I/F CTRL CHECK '
         DC    C'NOT INDICATED IN CSW-'                        @YM4854P
NOLOGMSG DC    C'NO LOGOUT WITH THIS RECORD '                  @YM4854P
MSHEAD   DC    C'MULTI-SYSTEM INFORMATION'              MESSAGES   MP
MSCPUID  DC    C'CPU 1 FAILED'                           FOR        MP
MSCPUST  DC    C'CPU STATUS WAS '              ONLY THE            MP
PART     DC    C'PARTITIONED'                           M65MP TO BE  MP
SHAR     DC    C'SHARED'                        ONLY                MP
RECON    DC    C' BUT RECONFIGURED OUT'                 WRITTEN ON  MP
CHCNFIG  DC    C'CPU 1 CHANNEL CONFIGURATION'            SEC       MP
CHTAB    DC    C'CH0--ON CH1--ON CH2--ON CH3--ON CH4--ON'  *       MP
         DC    C' CH5--ON CH6--ON'                    STORAGE  FOR   MP
MSASR    DC    C'INBOARD RECORD ENTRY CONSTRUCTED BY MCH'  *        MP
MSNERPIB DC    C'ERPIB NOT CREATED'         EREP RECORDS           MP
NXENTRY  DC    F'0'
OFF      DC    C'OFF'                         CONSTANTS            MP
         DC    C'LINE   '                       MESSAGES            MP
RTNPTR   DC    A(PRTERPIB-4)
RG9PTR   DC    A(REG9)
LBLPTR   DC    A(LABELEND-1)
LPPTR    DC    A(LP)
NOLOGPTR DC    A(VS2LINE-4)                                    @YM2954P
NOLOGLAB DC    A(VS2LAB-1)                                     @YM2954P
MYSAVE   DS    15F
SVR13    DS    1F
VS2      DC    A(VS2FLG)                                       @YL02021
CONTAB   DC    C'0123456789ABCDEF'     HEX CHARACTERS F0-F6        MP
         DROP  R15
         USING IFCEI145,R9,R6                                  @XA19715
         EJECT
FORMAT1  DC    F'0'
FORMAT2  DC    F'0'
LABELPTR DC    A(LABLAREA)
DISP     DC    FL2'0'
         SPACE 2
         DC    X'01'
         DC         X'000B8B00'         SKIP TO CHANNEL 1
         LABEL ' '
*
         LINE       (9,40),(1,35),SKIP=2
         HEX        XMOD,0,2B
         HEX        XSER,0,3B
         LABEL      'MODEL','SERIAL NO.'
*
         LINE  (10,)                                           @XL03976
         ROUTINE XRELN,CONVREL                                 @XL03976
         LABEL 'XXXX REL.'                                     @XL03976
         LINE       (21,40)
         ROUTINE    XKEY,SETSOURC
         LABEL      '--- RECORD SOURCE -','TYPE - INBOARD'
*
         LINE
         ROUTINE    XJOBN,SETPGMN
         LABEL      'JOB NAME'
*
         LINE       ,(8,40),SKIP=1
         ROUTINE    XSWS8,CONVTIME
         LABEL      'DAY  YEAR','HH MM SS.TH'
         LINE       (8,40),(1,40),SKIP=2
         ROUTINE    XDATE,SETDATE
         HEX        XTIME,1,4B
         LABEL      'DATE _','TIME _'
*
         LINE       (23,1),(1,1)
         HEX        XCUA,0,3B
         LABEL      'CHANNEL/UNIT ADDRESS'
*
         LINE  (30,1),(1,1),SKIP=2                             @YL02021
         ROUTINE   XKEY,ISITVS2                                @YL02021
         HEX   VCUA                                            @YL02021
         LABEL 'ADDR.STORED IN LOC 184'                        @YL02021
         LINE       ,(14,1),SKIP=1
         ROUTINE    XKEY,SKIPPER
         LABEL      'CC   DA    FL     CT'
         LINE       (14,3),(1,1),SKIP=2
         HEX        XFCCWCC,0,1B
         HEX        XFCCWDA,0,3B
         ROUTINE    XKEY,SPACER2
         HEX        XFCCWFL,0,1B
         HEX        XFCCW0,0,1B
         HEX        XFCCWCT,0,2B
         LABEL      'FAILING CCW'
*
         LINE       ,(14,1),SKIP=1
         ROUTINE    XKEY,SKIPPER
         LABEL      'K    CA    US CS  CT'
         LINE       (14,3),(1,1),SKIP=2
         HEX        XCSWK,0,1B
         HEX        XCSWCA,0,3B
         ROUTINE    XKEY,SPACER2
         ROUTINE    XCSWUS0,SETHEX
         ROUTINE    XCSWCS0,SETHEX
         HEX        XCSWCT,0,2B
         LABEL      'CSW'
*
         LINE       ,(2,38),SKIP=1
         ROUTINE    XKEY,SKIPPER
         LABEL      'UNIT STATUS','CHANNEL STATUS'
*
         LINE       (21,38),(3,38)
         BIN        XCSWUS0
         BIN        XCSWCS0
         LABEL      'ATTENTION','PRGM-CTLD IRPT'
         LINE
         BIN        XCSWUS1
         BIN        XCSWCS1
         LABEL      'STATUS MODIFIER','INCORRECT LENGTH'
         LINE
         BIN        XCSWUS2
         BIN        XCSWCS2
         LABEL      'CONTROL UNIT END','PROGRAM CHECK'
         LINE
         BIN        XCSWUS3
         BIN        XCSWCS3
         LABEL      'BUSY','PROTECTION CHECK'
         LINE
         BIN        XCSWUS4
         BIN        XCSWCS4
         LABEL      'CHANNEL END','CHAN DATA CHECK'
         LINE
         BIN        XCSWUS5
         BIN        XCSWCS5
         LABEL      'DEVICE END','CHAN CTRL CHECK'
         LINE
         BIN        XCSWUS6
         BIN        XCSWCS6
         LABEL      'UNIT CHECK','I/F CTRL CHECK'
         LINE       ,,SKIP=2
         BIN        XCSWUS7
         BIN        XCSWCS7
         LABEL      'UNIT EXCEPTION','CHAINING CHECK'
*
         LINE       ,(1,1),SKIP=1
         ROUTINE    XKEY,SKIPPER
         LABEL 'I/O UNITS FOUND BUSY'
         LINE       (27,5),(1,1),SKIP=2
         HEX        XAIO1
         HEX        XAIO2
         HEX        XAIO3
         HEX        XAIO4
         HEX        XAIO5
         HEX        XAIO6
         HEX        XAIO7
         HEX        XAIO8
         ROUTINE    XKEY,SETAIO
         LABEL      'CHANNEL/UNIT ADDR'
*
         LINE       ,(1,1),SKIP=1
         LABEL      '--- CHANNEL TYPE ---'
         LINE  (1,1),(1,1),SKIP=2
         ROUTINE    XCHID,CHNTYPE
         LABEL      ''
         LINE       ,(1,1),SKIP=1
         LABEL      'HEADER SENSE SWITCHES FOUND ON'
         LINE       ,(2,1)
         ROUTINE    XSWS8,CHKSW9
         LABEL      'RECORD INCOMPLETE'
         LINE
         ROUTINE    XSWS8,CHKSW10
         LABEL      'SYSTEM TERMINATED'
         LINE
         ROUTINE    XSWS8,CHKSW11
         LABEL      'UNSUPPORTED CHANNEL'
         LINE
         ROUTINE    XSWS8,CHKSW12
         LABEL      'CUA ILLEGAL'
         LINE
         ROUTINE    XSWS8,CHKSW13
         LABEL      'PORTION OF RECORD HAS BEEN DESTROYED'
         LINE
         ROUTINE    XSWS8,CHKSW14
         LABEL      'ERP WERE IN PROGRESS'
         LINE
         ROUTINE    XKEY,SKIPPER                                 P0417
         LABEL      ' '                                          P0417
PRTERPIB LINE  (1,1),(1,1),SKIP=1
         ROUTINE    XSWS8,IFCASR01
LABELEND LABEL      ''
         EJECT
         DC    X'01000B8B00'
         LABEL ''
         LINE
         ROUTINE    XKEY,NOLOG
         LABEL ''                                              @YM4854P
         LINE  ,(40,1),SKIP=2
         LABEL 'CPU DEPENDENT LOGOUT'
         LINE  ,(30,1),SKIP=2
         LABEL '----------------------------------------------------'
         LINE  ,(40,1),SKIP=2
         LABEL 'MACHINE CHECK REGISTER A'
         LINE  ,(14,62),SKIP=2
         LABEL 'BYTE 0','BYTE 2'
         LINE  (38,60),(1,59),SKIP=1
         BIN   MCHRG00
         BIN   MCHRG16
         LABEL 'LOCAL STORAGE A SOURCE ADDR CHK','ALU 2 HALF SUM CHK'
         LINE
         BIN   MCHRG01
         BIN   MCHRG17
         LABEL 'LOCAL STORAGE B SOURCE ADDR CHK','ALU 3 HALF SUM CHK'
         LINE
         BIN   MCHRG02
         BIN   MCHRG18
         LABEL 'LOCAL STORAGE A DEST ADDR CHK','ALU LOGICAL CHK'
         LINE
         BIN   MCHRG03
         BIN   MCHRG19
         LABEL 'LOCAL STORAGE B DEST ADDR CHK','B REG SHIFT CHK'
         LINE
         BIN   MCHRG04
         BIN   MCHRG20
         LABEL 'DEST BYTE CTRL CHK','A REG PTY CHK'
         LINE
         BIN   MCHRG05
         BIN   MCHRG21
         LABEL 'LOCAL STORAGE A-B DEST ADDR COMPARE','B REG PTY CHK'
         LINE
         BIN   MCHRG06
         BIN   MCHRG22
         LABEL 'LOCAL STORAGE CTRL ASSM CHK','Z REG PTY CHK'
         LINE  (38,60),(1,59),SKIP=2
         BIN   MCHRG07
         BIN   MCHRG23
         LABEL 'CTRL REG PTY CHK','D REG PTY CHK'
         LINE  ,(14,62),SKIP=2
         LABEL 'BYTE 1','BYTE 3'
         LINE  (38,60),(1,59),SKIP=1
         BIN   MCHRG08
         BIN   MCHRG24
         LABEL 'ADDR CHK BOUND REC CHK','EXT REG DEST X COMP CHK'
         LINE
         BIN   MCHRG09
         BIN   MCHRG25
         LABEL 'LOCAL STORAGE COMP CHK','EXT REG DEST Y COMP CHK'
         LINE
         BIN   MCHRG10
         BIN   MCHRG26
         LABEL 'FLUSH THRU CHK','EXT REG SOURCE Y CHK'
         LINE
         BIN   MCHRG11
         BIN   MCHRG27
         LABEL 'H REG PTY CHK','EXT CTRL ASSM PTY CHK'
         LINE
         BIN   MCHRG12
         BIN   MCHRG28
         LABEL 'CLOCK COMPARATOR-CPU TIMER CHK','INTERV TIMER PTY CHK'
         LINE
         BIN   MCHRG13
         BIN   MCHRG29
         LABEL 'P REG PTY CHK','S REC DUP CHK'
         LINE
         BIN   MCHRG14
         BIN   MCHRG30
         LABEL 'T REG PTY CHK','TIME OF DAY CLOCK CHK'
         LINE  ,,SKIP=2
         BIN   MCHRG15
         BIN   MCHRG31
         ROUTINE XDUM1,NPRT148                                 @XA19715
         LABEL 'L REG PTY CHK','CTRL STORAGE ADDR CHK'         @XA19715
************************************************************** @XA19715
         LINE  ,,SKIP=2                                        @XA19715
         BIN   MCHRG15                                         @XA19715
         BIN   MCHRG31                                         @XA19715
         ROUTINE XDUM1,PRT148                                  @XA19715
         LABEL 'L REG PTY CHK','INC/DEC CHK'                   @XA19715
************************************************************** @XA19715
         LINE  ,(40,1),SKIP=2
         LABEL 'MACHINE CHECK REGISTER B'
         LINE  ,(14,62),SKIP=2
         LABEL 'BYTE 0','BYTE 2'
         LINE  (38,60),(1,59),SKIP=1
         BIN   MCHRGB00
         BIN   MCHRGB16
         LABEL 'STORAGE ADD CHK','I CYCLE HARD ERROR'
         LINE
         BIN   MCHRGB01
         BIN   MCHRGB17
         LABEL 'SDBI PTY CHK','DOUBLE ECC ERROR'
         LINE
         BIN   MCHRGB02
         BIN   MCHRGB18
         ROUTINE XDUM1,NPRT148                                 @XA19715
         LABEL 'SBDO PTR CHK','O2I CTRL LINE PTY CHK'          @XA19715
************************************************************** @XA19715
         LINE  ,                                               @XA19715
         BIN   MCHRGB02                                        @XA19715
         BIN   MCHRGB18                                        @XA19715
         ROUTINE XDUM1,PRT148                                  @XA19715
         LABEL 'SBDO PTR CHK','SPARE'                          @XA19715
************************************************************** @XA19715
         LINE
         BIN   MCHRGB03
         BIN   MCHRGB19
         ROUTINE XDUM1,NPRT148                                 @XA19715
         LABEL 'STORE PTY CHK','BUSY CHK'                      @XA19715
************************************************************** @XA19715
         LINE  ,                                               @XA19715
         BIN   MCHRGB03                                        @XA19715
         BIN   MCHRGB19                                        @XA19715
         ROUTINE XDUM1,PRT148                                  @XA19715
         LABEL 'STORE PTR CHK','MULTIPLY CHK'                  @XA19715
************************************************************** @XA19715
         LINE
         BIN   MCHRGB04
         BIN   MCHRGB20
         ROUTINE XDUM1,NPRT148                                 @XA19715
         LABEL 'TIME OUT CHK','ECC HARDWARE CHK'               @XA19715
************************************************************** @XA19715
         LINE  ,                                               @XA19715
         BIN   MCHRGB04                                        @XA19715
         BIN   MCHRGB20                                        @XA19715
         ROUTINE XDUM1,PRT148                                  @XA19715
         LABEL 'COUNT CHK','SHIFT LOAD CHK'                    @XA19715
************************************************************** @XA19715
         LINE
         BIN   MCHRGB05
         BIN   MCHRGB21
         LABEL 'STORAGE PROT STACK PTY CHK','DOUBLE ECC ERROR'
         LINE
         BIN   MCHRGB06
         BIN   MCHRGB22
         LABEL 'CLOCK SYN CHK A','SINGLE ECC ERROR'
         LINE  (38,60),(1,59),SKIP=2
         BIN   MCHRGB07
         BIN   MCHRGB23
         LABEL 'CLOCK SYN CHK B','SINGLE DATA BIT CORRCT'
         LINE  ,(14,62),SKIP=2
         LABEL 'BYTE 1','BYTE 3'
         LINE  (38,60),(1,59),SKIP=1
         BIN   MCHRGB08
         BIN   MCHRGB24
         ROUTINE XDUM1,NPRT148                                 @XA19715
         LABEL 'M REG COMP A CHK','02I CT ERROR CORRCT'        @XA19715
************************************************************** @XA19715
         LINE  ,                                               @XA19715
         BIN   MCHRGB08                                        @XA19715
         BIN   MCHRGB24                                        @XA19715
         ROUTINE XDUM1,PRT148                                  @XA19715
         LABEL 'M REG COMP A CHK','CT ERROR CORRCT'            @XA19715
************************************************************** @XA19715
         LINE
         BIN   MCHRGB09
         BIN   MCHRGB25
         LABEL 'M REG COMP B CHK','C32 DATA BIT CORRCT'
         LINE
         BIN   MCHRGB10
         BIN   MCHRGB26
         LABEL 'M REG COMP C CHK','C16 DATA BIT CORRCT'
         LINE
         BIN   MCHRGB11
         BIN   MCHRGB27
         LABEL 'M REG COMP D CHK','C8 DATA BIT CORRCT'
         LINE
         BIN   MCHRGB12
         BIN   MCHRGB28
         LABEL 'NO RELOCATE REGISTER MATCH','C4 DATA BIT CORRCT'
         LINE
         BIN   MCHRGB13
         BIN   MCHRGB29
         LABEL 'MULT RELOCATE REG MATCH','C2 DATA BIT CORRCT'
         LINE
         BIN   MCHRGB14
         BIN   MCHRGB30
         LABEL 'RELOCATE LRU INVALID','C1 DATA BIT CORRCT'
         LINE  (38,60),(1,59),SKIP=2
         BIN   MCHRGB15
         BIN   MCHRGB31
         LABEL 'ANY MACH CHK ON','C0 DATA BIT CORRCT'
         EJECT
         DC    X'01000B8B00'
         LABEL ''
         LINE  (28,1),(1,1),SKIP=3                             @XA21957
         HEX   IOCREG                                          @XA21957
         ROUTINE XDUM1,PRT148                                  @XA21957
         LABEL 'IOC REGISTER'                                  @XA21957
         LINE  ,,SKIP=1
         ROUTINE XCSWCS0,WHERETO
         LABEL ''
         LINE  ,(14,62),SKIP=2
         LABEL 'RETRY COUNTS','RETRY REGS 1,2'
         LINE  (38,60),(1,59)
         BIN   RETCNT2H
         HEX   RTYREG1
         LABEL 'RETRIES PER CURRENT MACRO','RETRY REG 1'
         LINE  (38,60),(1,59)
         HEX   NONRETRY
         HEX   RTYREG2
         LABEL 'NUMBER OF MACROS RETRIED','RETRY REG 2'
         LINE  ,(14,62),SKIP=2
         LABEL 'RETRY REG 3','RETRY REG 4'
         LINE  (38,60),(1,59),SKIP=1
         BIN   HREG0
         BIN   RTYRG404
         LABEL 'MACHINE CHECK TRAP','DEST BYTE LINE 0'
         LINE
         BIN   HREG1
         BIN   RTYRG405
         LABEL 'RETRY TRAP','DEST BYTE LINE 1'
         LINE
         BIN   HREG2
         BIN   RTYRG406
         LABEL 'CPU HIGH TRAP','DEST BYTE LINE 2'
         LINE
         BIN   HREG3
         BIN   RTYRG407
         LABEL 'INT FILE ADPTR OR SEL CHN 1,2 OR 3','DEST BYTE LINE 3'
         LINE
         BIN   HREG4
         LABEL 'SEL CHN 1,2,3(IF IFA) OR SEL CHN 4','RETRY FLAGS'
         LINE  (38,60),(1,59)
         BIN   HREG5
         BIN   RTYRG408
         LABEL 'MPX TRAP','STORAGE 2 CYCLE ERROR'
         LINE
         BIN   HREG6
         BIN   RTYRG409
         LABEL 'INT FILE ADAPTR TRAP','TYPE 1 ERROR'
         LINE
         BIN   HREG7
         BIN   RTYRG410
         LABEL 'STORE-DISPLAY','TYPE 2 ERROR'
         LINE  (98,1),(60,1)
         BIN   RTYRG411
         LABEL 'TYPE 3 ERROR'
         LINE  (38,60),(1,59)
         ROUTINE   REGUNU,SKIPPER
         BIN   RTYRG412
         LABEL 'CTRL WORD ADDR AT TIME','LOCAL(0) OR EXT REG(1) DEST'
         LINE  (38,60),(5,55)
         HEX   RETRG23
         BIN   RTYRG413
         LABEL 'OF FAILURE','STORAGE WORD IN ERROR'
         LINE  (98,1),(60,1)
         BIN   RTYRG414
         LABEL 'ERROR IN TRAP 2 CYCLE'
         LINE
         BIN   RTYRG415
         LABEL 'SPARE'
         LINE  ,(5,55)
         LABEL 'CONTROL WORD','LOCAL STORAGE DEST'
         LINE  (12,86),(64,1)
         HEX   CTRLDWD
         BIN   RTYRG417
         LABEL ' ','YYY'
         LINE  (98,1),(65,1)
         BIN   RTYRG420
         LABEL 'XXX'
         LINE  (98,1),(60,1),SKIP=2
         BIN   RTYEXP
         LABEL 'LOCAL STORE(0) OR EXP LOCAL STORE(1)'
         LINE  ,(60,1),SKIP=1
         LABEL 'EXTERNAL REGISTER DEST'
         LINE  (98,1),(65,1)
         BIN   RTYRG425
         LABEL 'YYY'
         LINE  (98,1),(65,1),SKIP=2
         BIN   RTYRG428
         LABEL 'XXX'
         LINE  ,(40,1),SKIP=2
         LABEL 'SYSTEM REGISTER'
         LINE  ,(14,62),SKIP=2
         LABEL 'BYTE 0','BYTE 2'
         LINE  (38,60),(1,59),SKIP=1
         BIN   SYSREG00
         BIN   SYSREG16
         LABEL 'MACHINE CHK INTERPT PENDING','ENABLE CLEAR SWITCH'
         LINE
         BIN   SYSREG01
         BIN   SYSREG17
         LABEL 'RETRY ROUTINE','TMPL'
         LINE
         BIN   SYSREG02
         BIN   SYSREG18
         LABEL 'MACHINE CHK ROUTINE','LOAD FILE WAIT'
         LINE
         BIN   SYSREG03
         BIN   SYSREG19
         LABEL 'DOCUMENTARY CONSOLE 2','CE KEY IN CE MODE'
         LINE
         BIN   SYSREG04
         BIN   SYSREG20
         LABEL 'LOG PRESENT','IPL'
         LINE
         BIN   SYSREG05
         BIN   SYSREG21
         LABEL 'SPARE','POWER ON RESET'
         LINE
         BIN   SYSREG06
         BIN   SYSREG22
         LABEL 'I/O INSTN LATCH','SPARE'
         LINE  (38,60),(1,59),SKIP=2
         BIN   SYSREG07
         BIN   SYSREG23
         LABEL 'FORCE MODULE 0 TO LSCS','INSTR PROC LATCH'
         LINE  ,(14,62),SKIP=1
         LABEL 'BYTE 1','BYTE 3'
         LINE  (38,60),(1,59)
         BIN   SYSREG08
         BIN   SYSREG24
         LABEL 'ADDR CONTENTS','MACHINE CHECK TRAP'
         LINE
         BIN   SYSREG09
         BIN   SYSREG25
         LABEL 'CPU INTRPT FORCE','RETRY TRAP'
         LINE
         BIN   SYSREG10
         BIN   SYSREG26
         LABEL 'SAR INTRPT FORCE','CPU HIGH TRAP'
         LINE
         BIN   SYSREG11
         BIN   SYSREG27
         LABEL 'PSW RESTART','INT FILE ADAPTR OR SEL CHN 1,2 OR 3'
         LINE
         BIN   SYSREG12
         BIN   SYSREG28
         LABEL 'EC MODE','SEL CHN 1,2,3(IF IFA) OR SEL CHN 4'
         LINE
         BIN   SYSREG13
         BIN   SYSREG29
         LABEL 'SYS CTRL INTRPT','MPX TRAP'
         LINE
         BIN   SYSREG14
         BIN   SYSREG30
         LABEL 'TIMER INTRPT FORCE','INT FILE ADAPTR TRAP'
         LINE  (38,60),(1,59),SKIP=1
         BIN   SYSREG15
         BIN   SYSREG31
         LABEL 'PRTY INTRUPT','STORE-DISPLAY'
         EJECT
         DC    X'01000B8B00'
         LABEL ''
         LINE  ,(40,1),SKIP=2
         LABEL '--- LOCAL STORAGE REGISTERS'
         LINE  ,(14,53),SKIP=2
         LABEL 'I REGISTER','U REGISTER'
         LINE  (23,74),(1,59),SKIP=1
         HEX   IREG
         BIN   UREGA1
         LABEL 'KEY','INSTR LENGTH CODE'
         LINE
         HEX   IREGB
         BIN   UREGA2
         LABEL 'INSTR ADDR','CONDITION CODE'
         LINE  (97,1),(60,1)
         BIN   UREGA3
         LABEL 'PROGRAM MASK'
         LINE
         BIN   UREGA4
         LABEL 'SPECIAL CPU USE'
         LINE
         BIN   UREGA5
         LABEL 'AMWP BITS'
         LINE
         HEX   UREGC1
         LABEL 'OP CODE'
         LINE  (97,1),(60,1),SKIP=1
         HEX   UREGC2
         LABEL 'IMMEDIATE BYTE'
         LINE
SHRTLAB  LABEL ''
SHRTENT  LINE  ,(2,35),SKIP=1
         ROUTINE    XCHID,SELCHAN
         LABEL 'INSTRUCTION CODES',' ---UNIT ADDRESS --','UCW ADDRESS',X
               'SEQ CODE'
         LINE  (25,30),(1,1),SKIP=1
         BIN   MCHLOG00
         HEX   MCHLOG08
         HEX   MCHLOG09
         HEX   MBSLOG01
         LABEL 'CHAN LOADED  X'
         LINE  (25,1),(1,1)
         BIN   MCHLOG01
         LABEL 'CONTROL COMMAND'
         LINE  (25,1),(1,36)
         BIN   MCHLOG02
         LABEL 'CHAINING','--- INTERRUPT BUFFER','--- BUS IN --',      X
               'BUS OUT'
         LINE  (25,30),(1,1)
         BIN   MCHLOG03
         HEX   MBSLOGA
         HEX   MPXBUSIN
         HEX   MPXBSOUT
         LABEL 'SHARE REQ'
         LINE  (25,1),(1,1)
         BIN   MCHLOG04
         LABEL 'INTERRUPT'
         LINE  (25,1),(1,36)
         BIN   MCHLOG05
         LABEL 'HIO','--- MC REG ---','--- MD REG ---','COUNT'
         LINE  (25,30),(1,30)
         BIN   MCHLOG06
         HEX   MCLOCREG
         HEX   MDREGADD
         HEX   STORCNTH
         LABEL 'TIO','  KEY','','    HIGH(MF2)'
         LINE  (25,30),(1,32),SKIP=2
         BIN   MCHLOG07
         HEX   CCWADDR
         HEX   MDCATNBR
         HEX   STORCNTL
         ROUTINE XCSWCS0,CATNBR
         LABEL 'SIO','NEXT CCW ADDR','','LO(MF3)'
         LINE  ,(2,30),SKIP=2
         LABEL 'FLAGS AND OPS(MF0)','TAGS IN(MTI)','TAGS OUT(MTO)',    C
               'UCW/CHAN STATUS(MF1)'
         LINE  (25,30),(1,29),SKIP=1
         BIN   LOCFLG00
         BIN   MPXTAG08
         BIN   MPXTAG00
         BIN   CHSTAT00
         LABEL 'CHAIN DATA','OP IN','OP OUT','ACTIVE/PCI'
         LINE
         BIN   LOCFLG01
         BIN   MPXTAG09
         BIN   MPXTAG01
         BIN   CHSTAT01
         LABEL 'CHAIN COMMAND','ADDR IN','SEL OUT','WLR'
         LINE
         BIN   LOCFLG02
         BIN   MPXTAG10
         BIN   MPXTAG02
         BIN   CHSTAT02
         LABEL 'SLI','STAT IN SIG','ADR OUT','PROG CK'
         LINE
         BIN   LOCFLG03
         BIN   MPXTAG11
         BIN   MPXTAG03
         BIN   CHSTAT03
         LABEL 'SKIP','SRV IN SIG','CMD OUT','PROT CK'
         LINE
         BIN   LOCFLG04
         BIN   MPXTAG12
         BIN   MPXTAG04
         BIN   CHSTAT04
         LABEL 'PCI','SEL IN','SRV OUT','CHAN DATA CK'
         LINE
         BIN   LOCFLG05
         BIN   MPXTAG13
         BIN   MPXTAG05
         BIN   CHSTAT05
         LABEL 'DA ','MPX REQUEST','MPX INT','CHAN CTRL CHECK'
         LINE
         BIN   LOCFLG06
         BIN   MPXTAG14
         BIN   MPXTAG06
         BIN   CHSTAT06
         LABEL 'INPUT/OUTPUT','CONSOLE REQ/MPX','SUPR OUT',            X
               'I/F CTL CHECK'
         LINE  (25,30),(1,29),SKIP=2
         BIN   LOCFLG07
         BIN   MPXTAG15
         BIN   MPXTAG07
         BIN   CHSTAT07
         LABEL 'INCR/DECR','DISC IN','MPX CHECK','STATUS NEXT'
         LINE  ,(40,1),SKIP=2
         LABEL 'DOCUMENTARY CONSOLE WORD'
         LINE  (15,30),(1,30)
         HEX   CONSWDIN
         HEX   CONSWOUT
         LABEL 'BUS IN','BUS OUT','TA','TT'
         LINE  (85,30),(60,30),SKIP=1
         BIN   CONSWD00
         BIN   CONSWD08
         ROUTINE XDUM1,TEST148                                 @XA19715
         LABEL 'READ LATCH','ATTENTION'
         LINE
         BIN   CONSWD01
         BIN   CONSWD09
         LABEL 'WRITE LATCH','READY'
         LINE
         BIN   CONSWD02
         BIN   CONSWD10
         LABEL 'STACKED REQ','ALTER/DISPLAY MODE'              @XA19715
         LINE
         BIN   CONSWD03
         BIN   CONSWD11                                        @XA19715
         LABEL 'SHARE RESET','TIME OUT'                        @XA19715
         LINE
         BIN   CONSWD04
         BIN   CONSWD12                                        @XA19715
         LABEL 'ATTEN RESET','BALL SIDE'                       @XA19715
         LINE
         BIN   CONSWD05
         BIN   CONSWD13                                        @XA19715
         LABEL 'SEN SHARE SET','END'                           @XA19715
************************************************************** @XA19715
         LINE  ,                                               @XA19715
         BIN   CONSWD06                                        @XA19715
         BIN   CONSWD14                                        @XA19715
         LABEL 'SPARE','CONSOLE REQ'                           @XA19715
************************************************************** @XA19715
         LINE  ,,SKIP=2                                        @XA19715
         BIN   CONSWD07                                        @XA19715
         BIN   CONSWD15                                        @XA19715
         LABEL 'ALARM','CANCEL'                                @XA19715
************************************************************** @XA19715
         LINE  ,,SKIP=1                                        @XA19715
         ROUTINE XDUM1,JUMPN148                                @XA19715
LAB148   LABEL ' '                                             @XA19715
************************************************************** @XA19715
LINE148  LINE  (85,30),(60,30),SKIP=1                          @XA19715
         BIN   CONSWD00                                        @XA19715
         ROUTINE CONSWD08,EXTPTR                               @XA19715
         LABEL 'READ MODE'                                     @XA19715
************************************************************** @XA19715
         LINE  ,                                               @XA19715
         BIN   CONSWD01                                        @XA19715
         BIN   CONSWD10                                        @XA19715
         LABEL 'WRITE MODE','ALTER/DISPLAY MODE'               @XA19715
************************************************************** @XA19715
         LINE  ,                                               @XA19715
         BIN   CONSWD02                                        @XA19715
         BIN   CONSWD11                                        @XA19715
         LABEL 'STACKED REQUEST','TIME OUT'                    @XA19715
************************************************************** @XA19715
         LINE  ,                                               @XA19715
         BIN   CONSWD03                                        @XA19715
         BIN   CONSWD12                                        @XA19715
         LABEL 'REQUEST RESET','CPU LOCK'                      @XA19715
************************************************************** @XA19715
         LINE  ,                                               @XA19715
         BIN   CONSWD04                                        @XA19715
         BIN   CONSWD13                                        @XA19715
         LABEL 'GENERAL RESET','END'                           @XA19715
************************************************************** @XA19715
         LINE  ,                                               @XA19715
         BIN   CONSWD05                                        @XA19715
         BIN   CONSWD14                                        @XA19715
         LABEL 'CCW IN IOCR (EXT 1F)','REQUEST'                @XA19715
************************************************************** @XA19715
         LINE  ,                                               @XA19715
         BIN   CONSWD06                                        @XA19715
         BIN   CONSWD15                                        @XA19715
         LABEL 'SET CIO INTERRUPT','SET BURST MODE'            @XA19715
************************************************************** @XA19715
         LINE  ,                                               @XA19715
         BIN   CONSWD07                                        @XA19715
LABN148  LABEL 'MODIFIER'                                      @XA19715
************************************************************** @XA19715
         EJECT
VS2LINE  LINE  ,,SKIP=1                                        @YM2954P
         ROUTINE XCHID,VS2TEST                                 @YM2954P
VS2LAB   LABEL ''                                              @YM2954P
         LINE  (30),(1),SKIP=2                                 @YM2954P
         HEX   VCCHPR1                                         @YM2954P
         LABEL 'CCH FOOTPRINTS'                                @YM2954P
         LINE  (50,1),(20,1),SKIP=1                            @YM2954P
         BIN   VCCHPR01                                        @YM2954P
         LABEL 'IOS GPRS SAVED'                                @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR02                                        @YM2954P
         LABEL 'UCB ADDRESS ZERO'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR03                                        @YM2954P
         LABEL 'ERPIB EXISTS'                                  @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR04                                        @YM2954P
         LABEL 'IGFCCHSI ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR05                                        @YM2954P
         LABEL 'IGFCCHII ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR06                                        @YM2954P
         LABEL 'IGFCCHFE ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR07                                        @YM2954P
         LABEL 'IGFC60 ENTERED'                                @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR08                                        @YM2954P
         LABEL 'IGFC70 ENTERED'                                @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR09                                        @YM2954P
         LABEL 'IGDC80 ENTERED'                                @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR10                                        @YM2954P
         LABEL 'IGFCIC ENTERED'                                @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR11                                        @YM2954P
         LABEL 'IGFCCHRD ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR12                                        @YM2954P
         LABEL 'IGFCCHMP ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR13                                        @YM2954P
         LABEL 'IGFCCHUC ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR14                                        @YM2954P
         LABEL 'IGFCCHAS ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR15                                        @YM2954P
         LABEL 'IGFCCHIO ENTERED'                              @YM2954P
         LINE  ,,SKIP=2                                        @YM2954P
         BIN   VCCHPR16                                        @YM2954P
         LABEL 'IGFCCHEX ENTERED'                              @YM2954P
         LINE  ,(30,30),SKIP=2                                 @YM2954P
         ROUTINE    XCHID,SKIPPER                              @YM2954P
         LABEL 'MULTIPROCESSING INFORMATION'                   @YM2954P
         LINE  ,(49,1),SKIP=1                                  @YM2954P
         LABEL '0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15'
         LINE  (25,25),(30,30),SKIP=1                          @YM2954P
         HEX   (VPROC01)                                       @YM2954P
         ROUTINE    VCHST01,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC02)                                       @YM2954P
         ROUTINE    VCHST02,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC03)                                       @YM2954P
         ROUTINE    VCHST03,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC04)                                       @YM2954P
         ROUTINE    VCHST04,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC05)                                       @YM2954P
         ROUTINE    VCHST05,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC06)                                       @YM2954P
         ROUTINE    VCHST06,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC07)                                       @YM2954P
         ROUTINE    VCHST07,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC08)                                       @YM2954P
         ROUTINE    VCHST08,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC09)                                       @YM2954P
         ROUTINE    VCHST09,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC10)                                       @YM2954P
         ROUTINE    VCHST10,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC11)                                       @YM2954P
         ROUTINE    VCHST11,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC12)                                       @YM2954P
         ROUTINE    VCHST12,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC13)                                       @YM2954P
         ROUTINE    VCHST13,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC14)                                       @YM2954P
         ROUTINE    VCHST14,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC15)                                       @YM2954P
         ROUTINE    VCHST15,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC16)                                       @YM2954P
         ROUTINE    VCHST16,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
DUMPCODE DC    XL1'FF'                                         @YM2954P
DUMPSIZE DC    XL2'FC'                                         @YM2954P
         DC    XL2'18'                                         @YM2954P
ADDRLABL DC    XL2'0'                                          @YM2954P
LABLAREA EQU   *                                               @YM2954P
         LSTART ,                                              @YM2954P
         END   ENTRYPTR                                        @YM2954P
