       TITLE   'IFCEC165 MODEL 165 VERSION 2 CPU EDIT TABLE 1'
*  DSGEN MACRO     DSGEN MACRO     DSGEN MACRO     DSGEN MACRO        *
         SPACE 2
         MACRO
&NAME    DSGEN
.*                            THIS MACRO GENERATES ONE DSECT WORD
.*                                 FORMATTED FOR THE SUBJECT LOG RECORD
.*                                 EACH OPERAND HAS TWO SUB LISTS. THE
.*                                 FIRST IS THE NAME OF THE LOG ITEM
.*                                 WHILE THE SECOND IS THE # OF BITS TO
.*                                 ALLOCATE FOR THIS ITEM. ITEMS MUST
.*                                 BE DEFINED CONTIGUOUSLY WITHOUT GAPS
.*                                 UNUSED BIT GROUPS MUST BE GIVEN
.*                                 DUMMY NAMES. THE NAMES PROVIDED FOR
.*                                 THE LOG ITEMS MAY THEN BE USED IN
.*                                 THE CONVERSION MACRO INSTRUCTIONS.
         GBLC &ITEM(2000)
         GBLA &ITEMNBR,&BITS(2000),&SHIFT(2000)
         LCLB  &ONLY1,&CTIND
         LCLA  &START1,&START2,&END1,&END2
         LCLC  &SYMBOL,&EQUSYM
         LCLA  &OP,&COUNT,&BYTE,&EQUCNT
         ACTR  100000
.START   AIF   (N'&SYSLIST(&OP+1) LT 3).LOOP
         AIF   ('&SYSLIST(&OP+1,3)' EQ 'EQU').LOOP     TEST FOR EQU
  AIF   ('&SYSLIST(&OP+1,3)' EQ '' OR '&SYSLIST(&OP+1,4)' EQ '').ERR1
         AIF   ('&SYSLIST(&OP+1,3)' GT '&SYSLIST(&OP+1,4)').ERR3
&START1  SETA  &SYSLIST(&OP+1,3)        GET START COUNT OF 1
&START2  SETA  &SYSLIST(&OP+1,4)        GET FIRST END COUNT
         AGO   .SET2A                   BRANCH AROUND
.ERR1    MNOTE '**FIRST SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.SET2A   AIF   ('&SYSLIST(&OP+1,5)' EQ ''AND '&SYSLIST(&OP+1,6)' EQ '' X
               ).SET2                   TEST FOR NO SECOND
  AIF   ('&SYSLIST(&OP+1,5)' EQ '' OR '&SYSLIST(&OP+1,6)' EQ '').ERR2
         AIF   ('&SYSLIST(&OP+1,5)' GT '&SYSLIST(&OP+1,6)').ERR3
&END1    SETA  &SYSLIST(&OP+1,5)        GET START COUNT OF 2
&END2    SETA  &SYSLIST(&OP+1,6)        GET END COUNT OF 2
         AGO   .LOOP
.SET2    ANOP
&ONLY1   SETB  1                        INDICATE ONLY ONE CONCATENATION
         AGO   .LOOP
.ERR2    MNOTE '**SECOND SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.ERR3    MNOTE '**START GREATER THAN END CONCATENATION**'
         MEXIT
.LOOP    ANOP
&OP      SETA  &OP+1
         AIF   (&OP GT N'&SYSLIST).DONE      TEST IF ALL DONE
&ITEMNBR SETA  &ITEMNBR+1
         AIF   ('&SYSLIST(&OP,2)' NE '').OK1
         MNOTE '**NULL BIT COUNT FIELD**'
         MEXIT
.OK1     ANOP
&SYMBOL  SETC  '&SYSLIST(&OP,1)'
         AIF   ('&SYMBOL' NE '').OK
*              *****     LOG ITEM SYMBOL NOT PROVIDED     *****
         AIF   ('&SYSLIST(&OP,3)' NE 'EQU').CNT
         AGO   .START                   GET NEXT
.OK      AIF   (N'&SYSLIST(&OP) LT 3).NO3    TEST FOR OLD FORMAT
         AIF   ('&SYSLIST(&OP,3)' EQ 'EQU').EQU   TEST FOR EQU
         AIF   (&ONLY1).OK2             TEST FOR ONLY ONE CONCAT
&SYMBOL  SETC  '&SYMBOL.&START1.&END1'       GET 1 AND 2 CONCAT
         AGO   .NO3                     BRANCH AROUND
.OK2     ANOP
&SYMBOL  SETC  '&SYMBOL.&START1'        GET 1 CONCATENATED
.NO3     ANOP
&SYMBOL  EQU   *+&BYTE
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL IN GLOBAL
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)
&SHIFT(&ITEMNBR) SETA &COUNT-&BYTE*8
.CNT     ANOP
&CTIND   SETB  1                        SET COUNT INDICATOR
&COUNT   SETA  &COUNT+&SYSLIST(&OP,2)
&BYTE    SETA  &COUNT/8
         AIF   (N'&SYSLIST(&OP) LT 3).START  TEST FOR OLD FORMAT
         AIF   (&ONLY1).TSTST           TEST FOR ONLY ONE CONCAT
         AIF   (&END1 EQ &END2).TSTST   TEST FOR SECOND END
&END1    SETA  &END1+1                  INCREMENT COUNT
&OP      SETA  &OP-1                    DECREMENT INCREMENT
         AGO   .LOOP                    GENERATE NEXT
.TSTST   ANOP
         AIF   (&START1 EQ &START2).LPDONE   TEST FOR END
         AIF   (&ONLY1).NSET1           TEST FOR ONLY ONE CONCAT
&END1    SETA  &SYSLIST(&OP,5)          RE-INIT SECOND START COUNT
.NSET1   ANOP
&OP      SETA  &OP-1                    DECREMENT INDEX
&START1  SETA  &START1+1                INCREMENT FIRST COUNT
         AGO   .LOOP                    GO DO NEXT
.LPDONE  ANOP
&ONLY1   SETB  0                        CLEAR INDICATOR
         AGO   .START                   GO TEST FOR MORE SUB-LISTS
.DONE    AIF   (&COUNT-&COUNT/8*8 NE 0).ERR  TEST FOR MULTIPLE OF EIGHT
         AIF   (&CTIND EQ 0).END        NO DS IF NO COUNT
&COUNT   SETA  &COUNT/8                 GET NUMBER OF BYTES
&NAME    DS    &COUNT.C
.END     MEXIT
.ERR     MNOTE '**BIT COUNT FLDS DO NOT TOTAL MULTIPLE OF 8**'
         MEXIT
.EQU     AIF   ('&SYSLIST(&OP,4)' NE '').EQU1     TEST FOR NULL LABEL
.ERR4    MNOTE '**EQU OPERAND OMITTED OR NOT FOUND**'
         MEXIT
.EQU1    AIF   (&SYSLIST(&OP,2) LT 16).EQU2  COUNT OVER FIFTEEN
*****               THE FOLLOWING STATEMENT                *****
*****     NUMBER OF BITS EXCEED 15 - DO NOT USE AS BIN     *****
.EQU2    ANOP
&EQUCNT  SETA  0                        CLEAR COUNTER
&EQUSYM  SETC  '&SYSLIST(&OP,4)'        GET EQU OPERAND
.EQULOP  ANOP
&EQUCNT  SETA  &EQUCNT+1                INCREMENT INDEX
         AIF   ('&ITEM(&EQUCNT)' EQ '&EQUSYM').EQUOUT  LABEL FOUND?
         AIF   (&EQUCNT EQ &ITEMNBR).ERR4    ALL TESTED?
         AGO   .EQULOP                  NO-GET NEXT
.EQUOUT  ANOP
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL NAME
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)    GET NUMBER OF BITS
&SHIFT(&ITEMNBR) SETA &SHIFT(&EQUCNT)   GET SHIFT COUNT
&SYMBOL  EQU   &EQUSYM                  THIS SYMBOL EQUATED
         AGO   .START                   RETURN FOR NEXT
         MEND
         MACRO
         LINEND
.*                            THIS MACRO IS USED ONLY BY THE LINE
.*                                 MACRO TO SET THE NUMBER OF ENTRIES
.*                                 ASSOCIATED WITH EACH LINE.
         GBLA  &NRENTS
         GBLC &NRENTSX
         AIF   (&NRENTS EQ 0).NORENTS   TEST FOR NO COUNT
         ORG   &NRENTSX
         DC    FL1'&NRENTS'
         ORG
&NRENTS  SETA  0
.NORENTS ANOP
B&SYSNDX EQU   *
&NRENTSX SETC  'B&SYSNDX'
         MEND
*
         MACRO
         BIN
.*                                 &SYSLIST(&OP,1) - NAME OF LOG ITEM
.*                                      RECORD DSECT
.*                                 $SYSLIST(&OP,2) - NBR OF SPACES
.*                                      TO SKIP ON MULTIPLE
.*                                      PRINT OR NBR OF SPACES
.*                                      TO BACK UP FROM COLUMN FOR
.*                                      START OF PRINTING. THE LETTER
.*                                      B PRECEEDS THE NUMBER (B5) IF
.*                                      THE LATTER IS DESIRED. OMISSION
.*                                      OF THIS OPERAND FORCES OPTION 2
.*                                      WITH BACKUP SPACING EQUAL TO
.*                                 THE NUMBER OF BITS IN THE ITEM
.*                                 DEFINITION (VIA MACRO 'DSGEN').
.*                            A LIMIT OF 15 BITS IS IMPOSED FOR THE
.*                                 TOTAL NUMBER OF BITS TO PRINT.
         GBLA  &INITIAL
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         GBLC &ITEM(2000)
         GBLA &ITEMNBR,&BITS(2000),&SHIFT(2000),&NRENTS
         GBLC  &DSECT
         LCLB  &B,&SUB
         LCLA  &IBITS,&NDX,&ISHIFT,&K
         LCLA  &TEMP,&T,&OP
         LCLC  &S
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP
&SUB     SETB  1
.LOOP    ANOP
&OP      SETA  &OP+1
.LOOP1   ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&SYSLIST(&OP,1)').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP1
         MNOTE '**LOG ITEM NOT DEFINED**'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
&T       SETA  &IBITS-1
&B       SETB  0
         AIF   (&IBITS GT 0 AND &IBITS LT 16).SUB0
         MNOTE '**NO. OF BITS OUTSIDE RANGE OF 1-15**'
         MEXIT
.SUB0    AIF   (&SUB EQ 1).SUBA
         AIF   ('&SYSLIST(2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(2)
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)
         AGO   .SUBB
.SUBA    ANOP
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
.SUBB    ANOP
&T       SETA  &S
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
&TEMP    SETA  &ISHIFT
         AIF   (&IBITS NE 1 OR &B NE 0).BIN2
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'&TEMP'
         AGO   .OUT
.BIN2    AIF   ('&SYSLIST(&OP,2)' NE '').BIN3
&B       SETB  1
.BIN3    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'C'
         DC    BL.1'&B',AL.7(&T),AL.4(&IBITS),FL.4'&ISHIFT'
.OUT     ANOP
&NDX     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LOOP
.OUTA    ANOP
         MEND
         MACRO
         HEX
.*                            THIS MACRO FACILITATES GENERATION OF THE
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE
.*                                 CONVERSIONS.
.*                            &SYSLIST(&OP,1) - NAME OF DATA ITEM TO BE
.*                                 CONVERTED
.*                            &SYSLIST(&OP,2) - # OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO
.*                                 BACK UP FROM COLUMN FOR START OF
.*                                 PRINTING. THE LETTER B PRECEEDS THE
.*                                 NUMBER (B8) IF THE LATTER OPTION IS
.*                                 DESIRED. OMISSION OF THIS OPERAND
.*                                 FORCES OPTION 2 WITH BACKUP SPACING
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR
.*                                 IMPLICITLY B).
.*                            &SYSLIST(&OP,3) - NUMBER OF BYTES TO
.*                                 PROCESS. THIS NUMBER IS SUFFIXED
.*                                 WITH AN L,R, OR B TO STIPULATE
.*                                 PRINTING OF THE LEFT HALF, RIGHT
.*                                 HALF, OR BOTH HALVES OF THE BYTE
.*                                 RESPECTIVELY. OMISSION OF THIS
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES-
.*                                 SARY. THIS MACRO MUST BE THE FIRST
.*                                 MACRO INSTRUCTION ISSUED FOR THE
.*                                 SUBJECT LINE(S).
         GBLC &ITEM(2000),&DSECT
         GBLA &ITEMNBR,&BITS(2000),&SHIFT(2000),&NRENTS
         GBLA  &INITIAL
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLB  &B,&SUB
         LCLA  &IBITS,&NDX,&ISHIFT,&K,&T,&CODE,&BYTESP,&OP
         LCLC  &S,&LETTER
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP
&SUB     SETB  1
.LOOP    ANOP
&OP      SETA  &OP+1
.LOOP1   ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&SYSLIST(&OP,1)').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP1
         MNOTE '**LOG ITEM NOT DEFINED**'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).ALIGN
.ERR     MNOTE '**DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY**'
         MEXIT
.ALIGN   ANOP
&CODE    SETA  1
         AIF   (&SUB EQ 1).SUBA
&K       SETA  K'&SYSLIST(3)
         AGO   .SUBB
.SUBA    ANOP
&K       SETA  K'&SYSLIST(&OP,3)
.SUBB    ANOP
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK
         MNOTE '**BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL**'
         MEXIT
.OK      AIF   (&SUB EQ 1).SUBC
         AIF   ('&SYSLIST(3)' EQ '').USEDEFN
&LETTER  SETC  '&SYSLIST(3)'(&K,1)
&S       SETC  '&SYSLIST(3)'(1,&K-1)
         AGO   .SUBD
.SUBC    ANOP
         AIF   ('&SYSLIST(&OP,3)' EQ '').USEDEFN
&LETTER  SETC  '&SYSLIST(&OP,3)'(&K,1)
&S       SETC  '&SYSLIST(&OP,3)'(1,&K-1)
.SUBD    ANOP
&BYTESP  SETA  &S
         AIF   ('&LETTER' EQ 'B').BOTH
         AIF   ('&LETTER' EQ 'L').LEFT
&CODE    SETA  2
         AGO   .L
.LEFT    ANOP
&CODE    SETA  1
         AGO   .L
.USEDEFN ANOP
&BYTESP  SETA  &IBITS/8
.BOTH    AIF   (&ISHIFT NE 0).ERR
&CODE    SETA  3
&T       SETA  &BYTESP*2-1
&S       SETC  '&T'
.OK2     AIF   (&ISHIFT EQ 0).L
&CODE    SETA  2
.L       ANOP
&B       SETB  1
         AIF   (&SUB EQ 1).SUBE
         AIF   ('&SYSLIST(2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(2)
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)
         AGO   .SUBF
.SUBE    ANOP
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
.SUBF    ANOP
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
         AIF   (&BYTESP GT 0 AND &BYTESP LT 16).SUB0
         MNOTE '**NO. OF BYTES OUTSIDE RANGE OF 1-15**'
         MEXIT
.SUB0    AIF   (&SUB EQ 1).SUBG
         DC    AL.12(&SYSLIST(1)-&DSECT),XL.4'A'
         AGO   .SUBH
.SUBG    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'A'
.SUBH    ANOP
         DC    BL.1'&B',FL.7'&S',AL.4(&BYTESP),FL.4'&CODE'
.OUT     ANOP
&NDX     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LOOP
.OUTA    ANOP
         MEND
         MACRO
         LSTART
.*                            THIS MACRO IS ISSUED WHEN THE LABEL AREA
.*                                 OF THE TABLE IS TO BEGIN.
         GBLA  &LABELNR
         GBLC  &LBL(100)
         GBLC &LABELS(2000)
         GBLA  &LBLCTR(100)
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLA  &NDX,&CTR
         AIF   (&DIAGTST EQ 0).NODIAG
         AIF   (&DIAGSET EQ 0).NODIAG
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
.NODIAG  ANOP
         LINEND
&CTR     SETA  1
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   (&LBLCTR(&CTR) NE &NDX).NOLBL
&LBL(&CTR) DC  C'&LABELS(&NDX)'
&CTR     SETA  &CTR+1
         AGO   .LOOPCTL
.NOLBL   ANOP
         DC    C'&LABELS(&NDX)'
.LOOPCTL AIF   (&NDX LT &LABELNR).LOOP
         MEND
         MACRO
&NAME    LABEL &LABEL1,&LABEL2,&LABEL3,&LABEL4,&LABEL5,&LABEL6,        C
               &LABEL7,&LABEL8
.*                                 THIS MACRO ALLOWS LABELS TO
.*                                 BE SPECIFIED FOR A GIVEN LINE. THE
.*                                 LABELS SHOULD BE ENCLOSED IN QUOTA-
.*                                 TION MARKS. THE COLUMN AND LINE END
.*                                 CONTROLS WILL BE INSERTED BY THE
.*                                 MACRO. OMITTED OPERANDS MEAN NO
.*                                 LABEL REQUIRED FOR RESPECTIVE
.*                                 COLUMN.
         GBLC &LABELS(2000)
         GBLC  &LBL(100)
         GBLA  &LBLCTR(100)
         GBLA  &LABELNR
         GBLA  &NRENTS,&LPTR,&INITIAL
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLC  &MARGIN,&TACK
         LCLC  &TEXT
         LCLA  &OP,&K,&START,&NRCHAR,&REMAIN
         AIF   (&INITIAL EQ 0).DIAGCLR
         AIF   (&DIAGTST EQ 0).DIAGCLR
         AIF   (&DIAGLIN EQ 1).DIAGCLR
         MNOTE '**NO LINE ASSOCIATED WITH PREVIOUS LABEL**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LINE
         LINE
.DIAGCLR ANOP
&DIAGSET SETB  0
&DIAGLIN SETB  0
&MARGIN  SETC  '*'
         AIF   ('&NAME' EQ '').LOOPOUT
&LPTR    SETA  &LPTR+1
&LBL(&LPTR) SETC '&NAME'
&LBLCTR(&LPTR) SETA &LABELNR+1
.LOOPOUT ANOP
&OP      SETA  &OP+1
&K       SETA  K'&SYSLIST(&OP)
         AIF (&K GE 2).NORM
&K       SETA  2
.NORM    ANOP
&START   SETA  2
         AIF (&OP LT N'&SYSLIST).NOTLAST
&MARGIN  SETC  '$'
.NOTLAST ANOP
&NRCHAR  SETA  8
&TACK    SETC  ''
.LOOPIN  ANOP
&REMAIN  SETA  &K-&START
         AIF (&REMAIN GE 8).MORE
&TACK    SETC  '&MARGIN'
&NRCHAR  SETA  &REMAIN
.MORE    ANOP
&TEXT    SETC  ''
         AIF (&REMAIN EQ 0).ENDTEXT
&TEXT    SETC  '&SYSLIST(&OP)'(&START,&NRCHAR)
.ENDTEXT ANOP
&LABELNR SETA  &LABELNR+1
&LABELS(&LABELNR) SETC '&TEXT'.'&TACK'
&START   SETA  &START+8
         AIF ('&TACK' EQ '').LOOPIN
         AIF ('&TACK' EQ '*').LOOPOUT
         MEND
         MACRO
&NAME    ROUTINE &LOGITEM,&RNAME
         GBLA  &NRENTS
         GBLC  &DSECT,&CSECT
         GBLA  &INITIAL
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS ROUTINE**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
&NAME    DC    AL.12(&LOGITEM-&DSECT),XL.4'D'
         DC    AL2(&RNAME-&CSECT)
&NRENTS  SETA  &NRENTS+1
         MEND
         MACRO
&NAME    LINE  &DATA,&LABEL,&SKIP=
.*                            THIS MACRO ESTABLISHES THE MARGINS OR
.*                                 COLUMN SETTINGS FOR EACH LINE. IT
.*                                 GENERATES NECESSARY CARRIAGE CONTROL
.*                                 ENTRIES. LASTLY IT DETERMINES THE
.*                                 NUMBER OF ENTRIES ASSOCIATED WITH
.*                                 THE PREVIOUS LINE AND STORES THAT #
.*                                 INTO THE APPROPRIATE BYTE.
.*                            &DATA(1) - CHARACTER POSITION TO BEGIN
.*                                 DATA.
.*                            &DATA(2) - # OF SPACES BETWEEN SUCCESSIVE
.*                                 DATA COLUMN STARTING CHARACTERS.
.*                            &LABEL(1) - CHAR. POS. TO BEGIN LABELS.
.*                            &LABEL(2) - # SPACES BETWEEN LINE'S LABEL
.*                                 STARTING CHARACTERS.
.*                            &SKIP= - # OF LINES TO ADVANCE CARRIAGE
.*                                 TO BEGIN NEXT PRINTED LINE.
.*                            NEW ENTRIES ARE GENERATED ONLY WHEN
.*                                 NECESSARY. OMISSION OF ITEMS MEANS
.*                                 THEY HAVE NOT CHANGED SINCE PREVIOUS
.*                                 SETTINGS. A LINE MACRO IS REQUIRED
.*                                 FOR EACH PRINTED LINE. IF NO SETTING
.*                                 CHANGES ARE REQUIRED ALL OPERANDS
.*                                 ARE OMITTED IN WHICH CASE ONLY THE
.*                                 # OF ENTRIES FOR THE PREVIOUS LINE
.*                                 IS COMPUTED. THIS MACRO MUST BE THE
.*                                 FIRST MACRO INSTRUCTION ISSUED FOR
.*                                 THE SUBJECT LINE
         GBLA  &DB,&DT,&LB,&LT,&NRENTS
         GBLA  &LASTCC,&INITIAL
         GBLC  &NRENTSX
         GBLC  &CARRCON
         GBLB  &TEST
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLA  &S
         AIF   (&INITIAL EQ 0 OR &DIAGTST EQ 0).DIAGSET
         AIF   (&DIAGSET EQ 0).DIAGSET
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
.DIAGSET ANOP
&DIAGSET SETB  1
&DIAGLIN SETB  1
&NAME    DS    0C
         AIF   (&INITIAL EQ 0).FIRSTLN
         LINEND
         AGO   .NTFIRST
.FIRSTLN ANOP
&NRENTSX SETC  'N&SYSNDX'
&INITIAL SETA  1
N&SYSNDX EQU   *
.NTFIRST ANOP
         DC    AL1(0)
         AIF   ('&DATA(1)' EQ '').CKDTABS
         AIF   (&DATA(1) EQ &DB).CKDTABS
&DB      SETA  &DATA(1)
         AGO   .AA
.CKDTABS AIF   ('&DATA(2)' EQ '').NCDATA
         AIF   (&DATA(2) EQ &DT).NCDATA
         AGO   .CC
.AA      AIF   ('&DATA(2)' EQ '').BB
         AIF   (&DATA(2) EQ &DT).BB
.CC      ANOP
&DT      SETA  &DATA(2)
.BB      DC    XL2'FFFE'
         DC    FL1'&DB'
         DC    FL1'&DT'
&NRENTS  SETA  &NRENTS+1
.NCDATA  ANOP
         AIF   ('&LABEL(1)' EQ '').CKLTABS
         AIF   (&LABEL(1) EQ &LB).CKLTABS
&LB      SETA  &LABEL(1)
         AGO   .AAA
.CKLTABS AIF   ('&LABEL(2)' EQ '').NCLABEL
         AIF   (&LABEL(2) EQ &LT).NCLABEL
         AGO   .CCC
.AAA     AIF   ('&LABEL(2)' EQ '').BBB
         AIF   (&LABEL(2) EQ &LT).BBB
.CCC     ANOP
&LT      SETA  &LABEL(2)
.BBB     DC    XL2'FFFF'
         DC    FL1'&LB'
         DC    FL1'&LT'
&NRENTS  SETA  &NRENTS+1
.NCLABEL ANOP
         AIF   ('&SKIP' NE '').CONT
         AIF   (&TEST EQ 0).NOCHANG
         AGO   .DEFALTA
.CONT    ANOP
         AIF   (&TEST EQ 0).AB
         AIF   ('&SKIP' EQ 'E').AB
&S       SETA  &SKIP
.DEFAULT ANOP
         AIF   (&SKIP EQ &LASTCC).DEFALTA
         ORG   &CARRCON+3
         DC    AL.3(0),AL.2(&S),AL.3(1)
         ORG
&LASTCC  SETA  &S
.DEFALTA ANOP
&TEST    SETB  0
         AGO   .DD
.AB      AIF   ('&SKIP' NE 'E').ABB
A&SYSNDX DC    X'FFFB8B00'              EJECT
         AGO   .ABC
.ABB     AIF   (&SKIP EQ &LASTCC).NOCHANG
A&SYSNDX DC    XL2'FFFB'
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
&LASTCC  SETA  &SKIP
&TEST    SETB  1
.ABC     ANOP
&CARRCON SETC  'A&SYSNDX'
&NRENTS  SETA  &NRENTS+1
.DD      ANOP
.NOCHANG ANOP
         MEND
         EJECT
         GBLC  &DSECT,&CSECT
&CSECT   SETC  'IFCEC165'
&DSECT   SETC  'INDEPEND'
IFCEC165 CSECT
         USING *,R9
*
INDEPEND DSECT
         DS    0F
         DSGEN (XKEY,16),(XSWS0,8),(XSWS8,1),                          C
               (XSWS9,1),(XSWS10,1),(XSWS11,1),                        C
               (XSWS12,1),(XSWS13,1),(XSWS14,1),(XSWS15,1)
         DSGEN (XDUM1,32)
         DSGEN (XDATE,32)
         DSGEN (XTIME,32)
         DSGEN (XDUM2,8),(XSER,24)
         DSGEN (XCPUMOD,16),(XDUM3,16)
         DSGEN (XPGMID,64)
         DSGEN (XJOBID,64)
         DSGEN (XMCKPSW,64)
M165     DSGEN (SYSDAM,1),(PROCD,1),(SYSREC,1),(TIMDAM,1),(CLOCKD,1),  X
               (EXTDAM,1),(MDUM0,1),(AUTOCON,1),(WARNG,1),             X
               (MDUM1,5),(BACKUP1,1),(DELAY,1),(UNSTOR,1),             X
               (CORRST,1),(KEYERR,1),(MDUM2,1),(EMWP,1),               X
               (SYSMSK,1),(PGMSK,1),(IAVLD,1),(FASTVLD,1),             X
               (RCVLD,1),(MDUM3,1),(FLPVLD,1),(GPRVLD,1),              X
               (CTLVLD,1),(LOGVLD,1),(STVLD,1)
         DSGEN (SYSDAM1,32,EQU,SYSDAM)                         @YM6450P
         DSGEN (LRBNVLD,1),(RESERVDA,15),(EXTDLOG,16)          @XA20224
         DSGEN (RESRVDB,64)
         DSGEN (MDUM4,8),(FAILSTA,24)
         DSGEN (RGNCODE,32)
         DSGEN (DUMMY1,32)              DUMMY
         DSGEN (MCAR,32)                MCAR
         DSGEN (MCDR1,32)               MCDR BITS 0-31
         DSGEN (MCDR2,32)               MCDR BITS 32-63
         DSGEN (MANTLTH1,32)            MAINT LATCH 0-31
         DSGEN (MANTLTH2,32)            MAINT LATCH 32-63
         DSGEN (MCRR1,32)               MCRR BITS 0-31
         DSGEN (MCRR2,32)               MCRR BITS 32-63
         DSGEN (ICM90,32)
         DSGEN (STATUS,32)
         DSGEN (ECCCNTR,32)                  ECC COUNTER
         DSGEN (RTRYCNTR,32)                 RETRY COUNTER
         DSGEN (FDUM3,32)
         DSGEN (FDUM4,32)
         DSGEN (FDUM5,32)
         DSGEN (FDUM6,32)
         DSGEN (FDUM7,32)
         DSGEN (FDUM8,32)
         DSGEN (FDUM9,32)
         DSGEN (FDUM10,32)
         DSGEN (FDUM11,32)
         DSGEN (FDUM12,32)
         DSGEN (FDUM13,32)
         DSGEN (FDUM14,32)
FLOATPTS DSGEN (FP0,32)
         DSGEN (FP1,32)
         DSGEN (FP2,32)
         DSGEN (FP3,32)
         DSGEN (FP4,32)
         DSGEN (FP5,32)
         DSGEN (FP6,32)
         DSGEN (FP7,32)
GENPURPR DSGEN (GPR0,32)
         DSGEN (GPR1,32)
         DSGEN (GPR2,32)
         DSGEN (GPR3,32)
         DSGEN (GPR4,32)
         DSGEN (GPR5,32)
         DSGEN (GPR6,32)
         DSGEN (GPR7,32)
         DSGEN (GPR8,32)
         DSGEN (GPR9,32)
         DSGEN (GP10,32)
         DSGEN (GP11,32)
         DSGEN (GP12,32)
         DSGEN (GP13,32)
         DSGEN (GP14,32)
         DSGEN (GP15,32)
         DSGEN (CTR0,32)
         DSGEN (CTR1,32)
         DSGEN (CTR2,32)
         DSGEN (CTR3,32)
         DSGEN (CTR4,32)
         DSGEN (CTR5,32)
         DSGEN (CTR6,32)
         DSGEN (CTR7,32)
         DSGEN (CTR8,32)
         DSGEN (CTR9,32)
         DSGEN (CR10,32)
         DSGEN (CR11,32)
         DSGEN (CR12,32)
         DSGEN (CR13,32)
         DSGEN (CR14,32)
         DSGEN (CR15,32)
         DSGEN (DUMMY7,8),(CHADR,24)
         DSGEN (CHNKEY,16),(CHNID,16)
         DSGEN (ADRARY0,16),(DUM1,8),(VLD0,8)  ADDR ARRAY 0
         DSGEN (DUM2,16),(XLATID0,8),(DUM3,8)  XLATOR ID
         DSGEN (DUM4,8),(BIASREG,24)           BIAS REG
         DSGEN (DUM5,16),(BIASSSK,8),(DUM6,8)  BIAS SSK
         DSGEN (ADRARY1,16),(DUM7,8),(VLD1,8)  ADDR ARRAY 1
         DSGEN (DUM8,8),(LAR,24)               LAR
         DSGEN (DUM9,8),(REDO,24)              REDO
         DSGEN (DUM10,16),(REDOID,8),(DUM11,8) REDO ID
         DSGEN (ADRARY2,16),(DUM12,8),(VLD2,8) ADDR ARRAY 2
         DSGEN (TIR,32)                        TIR
         DSGEN (DUM13,8),(STAR1,24)            STAR 1
         DSGEN (DUM14,8),(STARMK1,8),(STARID1,8),(DUM15,8) STAR MK & ID
         DSGEN (ADRARY3,16),(DUM16,8),(VLD3,8) ADDR ARRAY 3
         DSGEN (DUM17,8),(TAR,24)              TAR
         DSGEN (DUM18,8),(STAR2,24)            STAR2
         DSGEN (DUM19,8),(STARMK2,8),(STARID2,8),(DUM20,8) STAR MK & ID
         DSGEN (ADRARY4,16),(DUM21,8),(VLD4,8) ADDR ARRAY 4
         DSGEN (DUM22,16),(KR,8),(DUM23,8)     KR
         DSGEN (DUM24,8),(FAR,24)              FAR
         DSGEN (DUM25,16),(FARID,8),(DUM26,8)  FAR ID
         DSGEN (ADRARY5,16),(DUM27,8),(VLD5,8) ADDR ARRAY 5
         DSGEN (DUM28,32)
         DSGEN (DUM29,8),(FSAR,24)
         DSGEN (DUM30,32)
         DSGEN (ADRARY6,16),(DUM31,8),(VLD6,8) ADDR ARRAY 6
         DSGEN (DUM32,32)
         DSGEN (DUM33,32)
         DSGEN (DUM34,32)
         DSGEN (ADRARY7,16),(DUM35,8),(VLD7,8) ADDR ARRAY 7
         DSGEN (USEDLAT,8),(DPRHASH,8),(DUM36,16)  USE DLAT & DPR HASH
         DSGEN (AUXA0,32)                      AUX A
         DSGEN (AUXA32,32)
         DSGEN (DUM37,32)
         DSGEN (DUM38,32)
         DSGEN (MAINA0,32)                     MAIN A
         DSGEN (MAINA32,32)
         DSGEN (DUM39,32)
         DSGEN (DUM40,32)
         DSGEN (AUXB0,32)                      AUX B
         DSGEN (AUXB32,32)
         DSGEN (BRPL,16),(DUM41,8),(DLAT0LA,8) BRPL & DLAT 0 LA
         DSGEN (DLAT0RA,16),(DLAT0KEY,8),(DLAT0ID,8)  DLAT 0 KEY & ID
         DSGEN (MAINB0,32)                     MAIN B
         DSGEN (MAINB32,32)
         DSGEN (DBAR,24),(DLAT1LA,8)           DBAR & DLAT 1 LA
         DSGEN (DLAT1RA,16),(DLAT1KEY,8),(DLAT1ID,8)  DLAT 1 KEY & ID
         DSGEN (CHI0,32)                       CH I DATA REG
         DSGEN (CHI32,32)
         DSGEN (BAR,24),(DUM42,8)              BAR
         DSGEN (DUM43,24),(ACTID,8)            ACT ID
         DSGEN (CHO0,32)                       CH O DATA REG
         DSGEN (CHO32,32)
         DSGEN (DUM44,32)
         DSGEN (DUM45,32)
         DSGEN (SDBO0,32)                      SDB O
         DSGEN (SDBO32,32)
         DSGEN (DUM46,32)
         DSGEN (DUM47,32)
         DSGEN (DUM48,32)
         DSGEN (DUM49,32)
         DSGEN (IREG,32)                       I REG
         DSGEN (DUM50,16),(DSPL,16)            DSPL
         DSGEN (OP1REG0,32)                    OP 1 REG
         DSGEN (OP1REG32,32)
         DSGEN (IQ1,16),(DUM51,16)             IQ 1 REG
         DSGEN (DUM52,8),(BASEREG,24)          BASE REG
         DSGEN (OP2REG0,32)                    OP 2 REG
         DSGEN (OP2REG32,32)
         DSGEN (IQ2,16),(DUM53,16)             IQ 2 REG
         DSGEN (DUM54,8),(INDXREG,24)          INDEX REG
         DSGEN (AREG0,32)                      A REG
         DSGEN (AREG32,32)
         DSGEN (IQ3,16),(DUM55,16)             IQ 3 REG
         DSGEN (DUM56,16),(SHREG,16)           SH REG
         DSGEN (BREG0,32)                      B REG
         DSGEN (BREG32,32)
         DSGEN (IQ4,16),(DUM57,16)             IQ 4 REG
         DSGEN (DUM58,8),(OA1,24)              OA1 REG
         DSGEN (CREG0,32)                      C REG
         DSGEN (CREG32,32)
         DSGEN (EREG,16),(DUM59,16)            E REG
         DSGEN (DUM60,8),(OA2,24)              OA2 REG
         DSGEN (DREG0,32)                      D REG
         DSGEN (DREG32,32)
         DSGEN (DUM61,32)
         DSGEN (DUM62,24),(DIFA,8)             DIF A
         DSGEN (F1REG0,32)                     F1 REG
         DSGEN (F1REG32,32)
         DSGEN (DUM63,32)
         DSGEN (DUM64,8),(IAA,24)              IAA REG
         DSGEN (F2REG0,32)                     F2 REG
         DSGEN (F2REG32,32)
         DSGEN (DUM65,32)
         DSGEN (DUM66,24),(DIFB,8)             DIF B
         DSGEN (DUM67,32)
         DSGEN (DUM68,32)
         DSGEN (DUM69,32)
         DSGEN (DUM70,8),(IAB,24)              IAB REG
         DSGEN (MY1REG6,32)                    MY 1 REG
         DSGEN (MY1REG36,32)
         DSGEN (CSAR,16),(DUM71,16)            CSAR
         DSGEN (DUM72,32)
         DSGEN (MY2REG6,32)                    MY 2 REG
         DSGEN (MY2REG36,32)
         DSGEN (CSARA,16),(DUM73,8),(SLCSARA,8) CSARA & SELECT CSARA
         DSGEN (DUM74,32)
         DSGEN (SUM26,32)                      SUM 2
         DSGEN (SUM236,32)
         DSGEN (CSARB,16),(DUM75,8),(SLCSARB,8) CSARB & SELECT CSARB
         DSGEN (DUM76,8),(PRFX,16),(DUM77,8)   PRFX REG
         DSGEN (CAR26,32)                      CAR 2 REG
         DSGEN (CAR236,32)
         DSGEN (DUM78,32)
         DSGEN (DUM79,32)
         DSGEN (SPAR1,16),(DUM80,8),(SPAR20,8) SPAR 1 & SPAR 2
         DSGEN (SPAR24,8),(DUM81,24)           SPAR 2
         DSGEN (DUM82,32)
         DSGEN (DUM83,32)
         DSGEN (MCRR0,32)                      MCRR
         DSGEN (MCRR32,32)
         DSGEN (IC,32)                         IC
         DSGEN (MCER,8),(DUM84,24)             MCER
         DSGEN (MCDR0,32)                      MCDR
         DSGEN (MCDR32,32)
         DSGEN (MCAR0,32)                      MCAR
         DSGEN (MRAR,32)                       MRAR
         DSGEN (DUM85,1),(CHADRP,3),(CHKEYP,1),(CHMARKP,1),            C
               (DUM86,2),(ADRARY0P,2),(DUM87,7),(BIASREGP,3),          C
               (DUM88,4),(ADRARY1P,2),(DUM89,3),(LARP,3)
         DSGEN (DUM90,1),(REDOP,3),(DUM91,4),                          C
               (ADRARY2P,2),(DUM92,2),(TIRP,4),                        C
               (DUM93,1),(STAR1P,3),(DUM94,1),(STAR1MKP,1),(DUM95,2),  C
               (ADRARY3P,2),(DUM96,3),(TARP,3)
         DSGEN (DMY1,1),(STAR2P,3),(DMY2,1),(STAR2MKP,1),(DMY3,2),     C
               (ADRARY4P,2),(DMY4,4),(KRP,1),(DMY5,2),(FARP,3),        C
               (DMY6,4),(ADRARY5P,2),(DMY7,14),(ADRARY6P,2),           C
               (DMY8,6),(FSARP,3),(DMY8A,5),(ADRARY7P,2),(DMY9,6)
         DSGEN (AUXAP,8),(DMY10,8),(MAINAP,8),(DMY11,8)
         DSGEN (AUXBP,8),(BRPLP,1),(DMY12,2),(DLAT0P,4),(DMY13,1),     C
               (MAINBP,8),(DBARP,2),(DMY14,1),(DLAT1P,4),(DMY15,1)
         DSGEN (CHIP,8),(BARP,2),(DMY16,6),(CHOP,8),(DMY17,8)
         DSGEN (SDBOP,8),(DMY18,16),(IREGP,4),(DMY19,2),(DSPLP,2)
         DSGEN (OP1REGP,8),(IQ1P,2),(DMY20,3),(BASEREGP,3),            C
               (OP2REGP,8),(IQ2P,2),(DMY21,3),(INDXREGP,3)
         DSGEN (AREGP,8),(IQ3P,2),(DMY22,4),(SHREGP,2),                C
               (BREGP,8),(IQ4P,2),(DMY23,3),(OA1P,3)
         DSGEN (CREGP,8),(EREGP,2),(DMY24,3),(OA2P,3),                 C
               (DREGP,8),(DMY25,7),(DIFAP,1)
         DSGEN (F1REGP,8),(DMY26,5),(IAAP,3),                          C
               (F2REGP,8),(DMY27,7),(DIFBP,1)
         DSGEN (DMY28,13),(IABP,3),(MY1P,8),(DMY29,8)
         DSGEN (MY2P,8),(DMY30,8),(SUM2P,8),(DMY31,5),                 C
               (PRFXP,2),(DMY32,1)
         DSGEN (CAR2P,8),(DMY33,8),(SPAR1P,2),(DMY34,1),               C
               (SPAR2P,2),(DMY35,11)
         DSGEN (MCRRP,8),(ICP,4),(MCERP,1),(DMY36,3),                  C
               (MCDRP,8),(MCARP,4),(MRARP,4)
SOFTEND  DS    0C
IFCEC165 CSECT
***********************************************************************
ENTRYPTR DC    A(FORMAT1)
TABLNAME DC    CL8'IFCEC165'
REG9     DS    F
SAVE     DS    F
***
*              ***     SPECIAL ROUTINES AREA     ***
*
***********************************************************************
*
SETJOBN  MVC   L0(L8,R3),L0(R4)         MOVE JOB NAME
         BR    R14                      RETURN
*
SPACER2  LA    R3,L2(R3)                BUMP R3 PTR BY 2
         BR    R14
*
SETHEX   STM   R5,R8,XSAVE              SAVE REGS
         LA    R8,CHARS                 CHAR TABLE PTR
         IC    R7,L0(R4)                PICK UP CHAR
         SLL   R7,L24                   MOVE IT TO HI POS
         SR    R6,R6
         SLDL  R6,L4                    MOVE 4 BITS TO R6
         AR    R6,R8                    INDEX FOR CHARS
         MVC   L0(L1,R3),L0(R6)         MOVE CHAR TO BUFF
         SR    R6,R6
         SLDL  R6,L4                    MOVE LAST 4 BITS TO R6
         AR    R6,R8                    INDEX INTO TABLE
         MVC   L1(L1,R3),L0(R6)         MOVE CHAR
         LM    R5,R8,XSAVE                                     @XA20224
         BR    R14                      RETURN
*
*
CHKSW9   TM    L1(R4),HEX40             TEST SWITCHES
CHECKCC  BZ    NOPRT                    IF SWITCHES OFF
         BR    R14                      DONOT PRINT
CHKSW10  TM    L1(R4),HEX20             R15 RETURNED ZERO
         B     CHECKCC                  STOPS PRINTING
CHKSW11  TM    L1(R4),HEX10
         B     CHECKCC
CHKSW12  TM    L1(R4),HEX08
         B     CHECKCC
CHKSW13  TM    L1(R4),HEX04
         B     CHECKCC
CHKSW14  TM    L1(R4),HEX02
         B     CHECKCC
CHKSW15  TM    L1(R4),HEX01
         B     CHECKCC
NOPRT    SR    R15,R15
         BR    R14
*
SETDATE  UNPK  XWORK(L8),L0(L4,R4)      UNPACK DATE               P0415
         MVZ   XWORK+L7(L1),XWORK       SET ZONE
         MVC   L0(L3,R3),XWORK+L5       MOVE DAY
         MVC   L6(L2,R3),XWORK+L3       MOVE YEAR                 P0415
         BR    R14                      RETURN
*
CONVTIME TM    L0(R4),HEX48             TEST FOR NS/BIN CLOCK
         BZ    RETURNB                  ALL ZEROS-BIN CLOCK
         BO    RETURNB                  ALL ONES-ILLEGAL
         TM    L0(R4),HEX40             IF ON IS N/S CLOCK
         BO    NSCLOCK                  IF OFF TIME OK
RETURNB  BR    R14                      RETURN
*
         USING INDEPEND,R2
NSCLOCK  STM   R14,R12,L12(R13)         SAVE REGS
         NI    L0(R4),HEXBF
         MVC   XWORK(L8),XDATE          MOVE DATE
         LM    R4,R5,XWORK
         SRDL  R4,L12                   POSITION FOR MICRO SECS
         D     R4,MILLION               CONVERT TO SECONDS
         SRA   R4,L19                   POSITION FOR ROUNDING
         AR    R5,R4                    UP TO NXT SECONDS
         SR    R4,R4
         D     R4,SIXTY                 CONVERT TO NINS
         CVD   R4,XWORK                 CONVERT IT
         LH    R6,XWORK+L6              PICK UP SECONDS
         SRL   R6,L4                    SHIFT OFF ZONE
         STC   R6,XDATE+L6              STORE SECONDS IN  REC
         MVI   XDATE+L7,HEX00           ZERO OUT TH'S
         SR    R4,R4
         D     R4,SIXTY                 CONVERT TO HRS
         CVD   R4,XWORK                 CONVERT REMAINDER MINUTES
         LH    R6,XWORK+L6              PICK UP
         SRL   R6,L4                    DROP ZONE
         STC   R6,XDATE+L5              STORE MINUTES
         SR    R4,R4
         D     R4,T24                   DIVIDE TO GET DAYS
         CVD   R4,XWORK                 CONV REM
         LH    R6,XWORK+L6              PICK UP
         SRL   R6,L4                    DROP ZONE
         STC   R6,XDATE+L4              STORE HRS
         LA    R4,L60                   STARTINY YEAR 1960
         LA    R6,L1                    INC OF 1
LEAPYEAR LA    R7,L3(R4)                ADD 3 YRS
         S     R5,LPYEAR                DAYS IN LEAP YEAR 366
         BZ    THISYEAR                 BR-THIS YR+1
         BM    OVERSHOT                 BR-TOOFAR
         BXLE  R4,R6,REGYEAR            UPDATE YEAR BY ONE
REGYEAR  S     R5,RGYEAR                DAYS IN RG YEAR 365
         BZ    THISYEAR                 BR-YEAR+1
         BM    OVERSHT1                 BR-TOO FAR
         BXLE  R4,R6,REGYEAR            UPDATE AND TRY AGAIN
         B     LEAPYEAR
OVERSHOT A     R5,LPYEAR                ADD BACK LEAP YEAR
         B     THISYEAR                 & USE
OVERSHT1 A     R5,RGYEAR                ADD BACK REG YEAR
         B     THISYER                  & USE
THISYEAR AR    R4,R6                    ADD 1
THISYER  AR    R5,R6                    ADD 1
         CVD   R5,XWORK                 CONVERT DAYS
         MVC   XDATE+L2(L2),XWORK+L6    MOVE DAYS
         CVD   R4,XWORK                 CONVERT YEAR
         LH    R6,XWORK+L6              PICK UP
         SRL   R6,L4                    DROP ZONE
         STC   R6,XDATE+L1              PUT YEAR
         MVI   XDATE,HEX00              SET TO ZERO
RETURNC  OI    XSWS0,HEX08              TURN ON PACKED SWITCH
         LM    R14,R12,L12(R13)         RETURN
         BR    R14
*
MPBIT    EQU   X'80'                                           @YM6450P
MPIND    EQU   XKEY+X'41D'              MP IND IN M/F A-4      @YM6450P
ROUTMP   TM    MPIND,MPBIT              Q/ IS THIS AN MP SYSTEM
         BO    ROUT1                    YES-CONTINUE
         BR    R14                      RETURN
ROUT0    DS    0C
         STM   R3,R4,SAVER34            SAVE PRINT BFR PTR- LOG START
         BR    R14                      RETURN
ROUT1    DS    0C
         STM   R0,R15,XSAVE             SAVE REGISTERS
         USING INDEPEND,R2
         LA    R1,LOGTBL                LOAD ADDRESS OF LOG TABLE
         LA    R3,L92                   LOAD DATA ENTRY COUNT
         L     R6,SAVER4                LOAD LOGOUT BASE VALUE
ROUT1A   DS    0C
         LH    R5,L0(R1)                LOAD REG DATA DISPLACEMENT
         LA    R5,L0(R5,R6)             FORM LOG ADDRESS
         CR    R4,R5                    COMPARE TO PRESENT VALUE
         BE    ROUT1B                   BRANCH EQUAL TO PROCESS
         LA    R1,L12(R1)               INCREMENT DATA TABLE PTR
         BCT   R3,ROUT1A                BRANCH ON ENTRY COUNT
         B     RETURN                   ENTRY NOT FOUND - RETURN
ROUT1B   DS    0C
         LH    R5,L2(R1)                LOAD PTY LOG DISPLACEMENT
         LA    R5,L0(R5,R6)             FORM PARITY LOGOUT ADDRESS
         MVC   WORK1(L16),L0(R4)        MOVE REGISTER DATA
         MVC   WORK2(L2),L0(R5)         MOVE PARITY DATA
         L     R3,SAVER3                LOAD ADR OF PRINT BFR
         TM    L11(R1),XFF              TEST IF LABEL REQUIRED
         BZ    ROUT1Y                   BRANCH IF NO LABEL REQUIRED
         LH    R6,L8(R1)                LOAD LABEL DISPLACEMENT
         LA    R5,DHEAD                 LOAD ADR OF LABEL TABLE
         LA    R5,L0(R6,R5)             LOAD ADR OF LABEL
         SR    R6,R6                    CLEAR REGISTER 6
         IC    R6,L10(R1)               INSERT PRINT BFR DISPLACEMENT
         LA    R6,L0(R6,R3)             LOAD PRINT BFR LABEL PTR
         MVC   L0(L5,R6),L0(R5)         MOVE LABEL TO PRINT BFR
ROUT1Y   DS    0C
         SR    R5,R5                    CLEAR REG 5
         IC    R5,L6(R1)                INSERT PRINT BFR DSPLMENT
         LA    R3,L0(R5,R3)             FORM ADDRESS OF PRINT PTR
         IC    R5,L4(R1)                INSERT SHIFT COUNT
         L     R13,WORK2                LOAD PARITY DATA
         SLL   R13,L0(R5)               LEFT JUSTIFY PARITY DATA
         IC    R5,L5(R1)                INSERT BYTE COUNT
         LA    R10,WORK1                LOAD REGISTER DADA ADR
ROUT1X   DS    0C
         SR    R6,R6                    CLEAR REG 6
         IC    R6,L0(R10)               INSERT DATA BYTE
         SRDL  R6,L4                    SEPARATE HEX DIGITS
         SRL   R7,L28                   RIGHT JUSTIFY SECOND DIGIT
         IC    R6,CHARS(R6)             INSERT EBCDIC BYTE
         STC   R6,L1(R3)                STORE INTO PRINT BUFFER
         IC    R7,CHARS(R7)             INSERT EBCDIC BYTE
         STC   R7,L2(R3)                STORE INTO PRINT BUFFER
         TM    L7(R1),XFF               TEST FOR PARITY TEST
         BZ    ROUT1D                   BYPASS PARITY TEST
         SR    R2,R2                    CLEAR REG 2
         IC    R2,L0(R10)               INSERT REG DATA BYTE
         LA    R0,L8                    LOAD BIT COUNT
         LA    R8,L1                    INITIALIZE PTY PREDICT REG
ROUT1C   DS    0C
         LA    R4,L1                    LOAD PARITY MASK
         NR    R4,R2                    TEST DATA REG
         AR    R8,R4                    ADD PARITY FOR THIS BIT
         SRL   R2,L1                    SHIFT DATA BYTE
         BCT   R0,ROUT1C                BRANCH ON BIT COUNT
         LA    R4,L1                    LOAD MASK CONSTANT
         NR    R8,R4                    PARITY PREDICT BIT
         SR    R12,R12                  CLEAR REGISTER 12
         SLDL  R12,L1                   SHIFT PARITY BIT
         MVI   L0(R3),CB                ASSUME GOOD PTY-MOVE BLANK
         CR    R12,R8                   COMPARE PREDICT TO ACTUAL PTY
         BE    ROUT1D                   BRANCH EQUAL TO NEXT BYTE
         MVI   L0(R3),CS                MOVE SPLAT-BAD PARITY
ROUT1D   DS    0C
         LA    R10,L1(R10)              INCREMENT DATA ADDRESS
         LA    R3,L3(R3)                INCREMENT PRINT BFR PTR
         BCT   R5,ROUT1X                BRANCH ON BYTE COUNT
RETURN   DS    0C
         LM    R0,R15,XSAVE             RESTORE REGISTERS
         BR    R14                      RETURN
*   ROUTINE TO TEST FOR SHORT RECORD
ROUT2    DS    0C
         USING INDEPEND,R2
         ST    R3,XSAVE                 SAVE REGISTER 3
         TM    XSWS8,HEX80              TEST SHORT FORM RECORD SW
         BZ    ROUT2A                   BRANCH IF LONG FORM
         LA    R3,DUMPNOW-L4            END OF TABLE ADDRESS
         ST    R3,REG9                  STORE IN REG 9 PTR
         SR    R15,R15                  SET RETURN CODE OF 0
ROUT2A   DS    0C
         L     R3,XSAVE                 RESTORE REGISTER 3
         BR    R14                      RETURN
*   ROUTINE TO DETERMINE IF MCSTATD FIELD SHOULD BE PRINTED
ROUT3    DS    0C
         USING INDEPEND,R2
         ST    R3,XSAVE                 SAVE REGISTER 3
         TM    XSWS8,HEX80              TEST SHORT FORM RECORD SW
         BO    ROUT3A                   BRANCH IF SHORT FORM
         SR    R15,R15                  SET RETURN CODE OF 0
ROUT3A   DS    0C
         L     R3,XSAVE                 RESTORE REGISTER 3
         BR    R14                      RETURN
*        ELIMINATE LINE IF NOT MVS                             @XA20224
ISITMVS  CLI   XKEY,HEX13              IS IT MVS               @XA20224
         BE    RETURND                 YES MVS                 @XA20224
         SR    R15,R15                 ELIM. LINE              @XA20224
RETURND  BR    R14                                             @XA20224
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
CC1      EQU   1
CC2      EQU   2
CC4      EQU   4
CC7      EQU   7
CC8      EQU   8
XFF      EQU   X'FF'
HEX48    EQU   X'48'
HEXBF    EQU   X'BF'
HEX02    EQU   X'02'
HEX04    EQU   X'04'
HEX08    EQU   X'08'
HEX10    EQU   X'10'
HEX13    EQU   X'13'                                           @XA20224
HEX20    EQU   X'20'
HEX40    EQU   X'40'
HEX22    EQU   X'22'
HEX28    EQU   X'28'
HEX2A    EQU   X'2A'
HEX29    EQU   X'29'
HEX01    EQU   X'01'
HEX00    EQU   X'00'
HEX80    EQU   X'80'
DIV1     EQU   X'0A'
DIV2     EQU   X'0C'
L0       EQU   0
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4
L5       EQU   5
L6       EQU   6
L7       EQU   7
L8       EQU   8
L9       EQU   9
L10      EQU   10
L11      EQU   11
L12      EQU   12
L14      EQU   14
L16      EQU   16
L19      EQU   19
L24      EQU   24
L28      EQU   28
L32      EQU   32
L60      EQU   60
L63      EQU   63
L67      EQU   67
L92      EQU   92
L120     EQU   120
C0       EQU   C'0'
C1       EQU   C'1'
CB       EQU   C' '
CS       EQU   C'*'
ZERO     EQU   0
ONE      EQU   1
XWORK    DS    D
XSAVE    DS    16F
SAVER34  DS    2F
SAVER3   EQU   SAVER34
SAVER4   EQU   SAVER34+4
WORK1    DS    4F
WORK2    DS    1F
LOGTBL   DS    0F
         DC    AL2(CHADR-M165)
         DC    AL2(CHADRP-M165)
         DC    AL1(1)
         DC    AL1(5)
         DC    AL1(13)
         DC    AL1(255)
         DC    AL2(DCHN-DHEAD)
         DC    AL1(5)
         DC    AL1(255)
         DC    AL2(CHNID-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(2)
         DC    AL1(28)
         DC    AL1(0)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL2(ADRARY0-M165)
         DC    AL2(ADRARY0P-M165)
         DC    AL1(0)
         DC    AL1(2)
         DC    AL1(41)
         DC    AL1(255)
         DC    AL2(D0-DHEAD)
         DC    AL1(37)
         DC    AL1(255)
         DC    AL2(VLD0-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(1)
         DC    AL1(50)
         DC    AL1(0)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL2(XLATID0-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(1)
         DC    AL1(70)
         DC    AL1(0)
         DC    AL2(DXID-DHEAD)
         DC    AL1(61)
         DC    AL1(255)
         DC    AL2(BIASREG-M165)
         DC    AL2(BIASREGP-M165)
         DC    AL1(1)
         DC    AL1(3)
         DC    AL1(13)
         DC    AL1(255)
         DC    AL2(DBIASP-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(BIASSSK-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(1)
         DC    AL1(28)
         DC    AL1(0)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL2(ADRARY1-M165)
         DC    AL2(ADRARY1P-M165)
         DC    AL1(0)
         DC    AL1(2)
         DC    AL1(41)
         DC    AL1(255)
         DC    AL2(D1-DHEAD)
         DC    AL1(37)
         DC    AL1(255)
         DC    AL2(VLD1-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(1)
         DC    AL1(50)
         DC    AL1(0)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL2(LAR-M165)
         DC    AL2(LARP-M165)
         DC    AL1(5)
         DC    AL1(3)
         DC    AL1(67)
         DC    AL1(255)
         DC    AL2(DLAR-DHEAD)
         DC    AL1(60)
         DC    AL1(255)
         DC    AL2(REDO-M165)
         DC    AL2(REDOP-M165)
         DC    AL1(1)
         DC    AL1(3)
         DC    AL1(13)
         DC    AL1(255)
         DC    AL2(DREDO-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(REDOID-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(1)
         DC    AL1(28)
         DC    AL1(0)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL2(ADRARY2-M165)
         DC    AL2(ADRARY2P-M165)
         DC    AL1(0)
         DC    AL1(2)
         DC    AL1(41)
         DC    AL1(255)
         DC    AL2(D2-DHEAD)
         DC    AL1(37)
         DC    AL1(255)
         DC    AL2(VLD2-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(1)
         DC    AL1(50)
         DC    AL1(0)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL2(TIR-M165)
         DC    AL2(TIRP-M165)
         DC    AL1(5)
         DC    AL1(4)
         DC    AL1(64)
         DC    AL1(255)
         DC    AL2(DTID-DHEAD)
         DC    AL1(60)
         DC    AL1(255)
         DC    AL2(STAR1-M165)
         DC    AL2(STAR1P-M165)
         DC    AL1(1)
         DC    AL1(3)
         DC    AL1(13)
         DC    AL1(255)
         DC    AL2(DSTAR1-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(STARMK1-M165)
         DC    AL2(STAR1MKP-M165)
         DC    AL1(5)
         DC    AL1(1)
         DC    AL1(25)
         DC    AL1(255)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL2(STARID1-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(1)
         DC    AL1(28)
         DC    AL1(0)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL2(ADRARY3-M165)
         DC    AL2(ADRARY3P-M165)
         DC    AL1(0)
         DC    AL1(2)
         DC    AL1(41)
         DC    AL1(255)
         DC    AL2(D3-DHEAD)
         DC    AL1(37)
         DC    AL1(255)
         DC    AL2(VLD3-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(1)
         DC    AL1(50)
         DC    AL1(0)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL2(TAR-M165)
         DC    AL2(TARP-M165)
         DC    AL1(5)
         DC    AL1(3)
         DC    AL1(67)
         DC    AL1(255)
         DC    AL2(DTAR-DHEAD)
         DC    AL1(60)
         DC    AL1(255)
         DC    AL2(STAR2-M165)
         DC    AL2(STAR2P-M165)
         DC    AL1(1)
         DC    AL1(3)
         DC    AL1(13)
         DC    AL1(255)
         DC    AL2(DSTAR2-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(STARMK2-M165)
         DC    AL2(STAR2MKP-M165)
         DC    AL1(5)
         DC    AL1(1)
         DC    AL1(25)
         DC    AL1(255)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL2(STARID2-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(1)
         DC    AL1(28)
         DC    AL1(0)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL2(ADRARY4-M165)
         DC    AL2(ADRARY4P-M165)
         DC    AL1(0)
         DC    AL1(2)
         DC    AL1(41)
         DC    AL1(255)
         DC    AL2(D4-DHEAD)
         DC    AL1(37)
         DC    AL1(255)
         DC    AL2(VLD4-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(1)
         DC    AL1(50)
         DC    AL1(0)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL2(KR-M165)
         DC    AL2(KRP-M165)
         DC    AL1(6)
         DC    AL1(1)
         DC    AL1(70)
         DC    AL1(255)
         DC    AL2(DKR-DHEAD)
         DC    AL1(60)
         DC    AL1(255)
         DC    AL2(FAR-M165)
         DC    AL2(FARP-M165)
         DC    AL1(1)
         DC    AL1(3)
         DC    AL1(13)
         DC    AL1(255)
         DC    AL2(DFAR-DHEAD)
         DC    AL1(4)
         DC    AL1(255)
         DC    AL2(FARID-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(1)
         DC    AL1(28)
         DC    AL1(0)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL2(ADRARY5-M165)
         DC    AL2(ADRARY5P-M165)
         DC    AL1(0)
         DC    AL1(2)
         DC    AL1(41)
         DC    AL1(255)
         DC    AL2(D5-DHEAD)
         DC    AL1(37)
         DC    AL1(255)
         DC    AL2(VLD5-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(1)
         DC    AL1(50)
         DC    AL1(0)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL2(FSAR-M165)
         DC    AL2(FSARP-M165)
         DC    AL1(1)
         DC    AL1(3)
         DC    AL1(13)
         DC    AL1(255)
         DC    AL2(DFSAR-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(ADRARY6-M165)
         DC    AL2(ADRARY6P-M165)
         DC    AL1(0)
         DC    AL1(2)
         DC    AL1(41)
         DC    AL1(255)
         DC    AL2(D6-DHEAD)
         DC    AL1(37)
         DC    AL1(255)
         DC    AL2(VLD6-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(1)
         DC    AL1(50)
         DC    AL1(0)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL2(ADRARY7-M165)
         DC    AL2(ADRARY7P-M165)
         DC    AL1(0)
         DC    AL1(2)
         DC    AL1(41)
         DC    AL1(255)
         DC    AL2(D7-DHEAD)
         DC    AL1(37)
         DC    AL1(255)
         DC    AL2(VLD7-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(1)
         DC    AL1(50)
         DC    AL1(0)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL2(USEDLAT-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(2)
         DC    AL1(61)
         DC    AL1(0)
         DC    AL2(DDRR-DHEAD)
         DC    AL1(58)
         DC    AL1(255)
         DC    AL2(AUXA0-M165)
         DC    AL2(AUXAP-M165)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(255)
         DC    AL2(DAUXA-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(MAINA0-M165)
         DC    AL2(MAINAP-M165)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(255)
         DC    AL2(DMAINA-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(AUXB0-M165)
         DC    AL2(AUXBP-M165)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(255)
         DC    AL2(DAUXB-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(BRPL-M165)
         DC    AL2(BRPLP-M165)
         DC    AL1(0)
         DC    AL1(2)
         DC    AL1(41)
         DC    AL1(255)
         DC    AL2(DBRPL-DHEAD)
         DC    AL1(35)
         DC    AL1(255)
         DC    AL2(DLAT0LA-M165)
         DC    AL2(DLAT0P-M165)
         DC    AL1(3)
         DC    AL1(5)
         DC    AL1(61)
         DC    AL1(255)
         DC    AL2(DDLAT0-DHEAD)
         DC    AL1(55)
         DC    AL1(255)
         DC    AL2(MAINB0-M165)
         DC    AL2(MAINBP-M165)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(255)
         DC    AL2(DMAINB-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(DBAR-M165)
         DC    AL2(DBARP-M165)
         DC    AL1(0)
         DC    AL1(3)
         DC    AL1(41)
         DC    AL1(255)
         DC    AL2(DDBAR-DHEAD)
         DC    AL1(35)
         DC    AL1(255)
         DC    AL2(DLAT1LA-M165)
         DC    AL2(DLAT1P-M165)
         DC    AL1(3)
         DC    AL1(5)
         DC    AL1(61)
         DC    AL1(255)
         DC    AL2(DDLAT1-DHEAD)
         DC    AL1(55)
         DC    AL1(255)
         DC    AL2(CHI0-M165)
         DC    AL2(CHIP-M165)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(255)
         DC    AL2(DCHI-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(BAR-M165)
         DC    AL2(BARP-M165)
         DC    AL1(0)
         DC    AL1(3)
         DC    AL1(41)
         DC    AL1(255)
         DC    AL2(XBAR-DHEAD)
         DC    AL1(37)
         DC    AL1(255)
         DC    AL2(ACTID-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(1)
         DC    AL1(73)
         DC    AL1(0)
         DC    AL2(DACT-DHEAD)
         DC    AL1(54)
         DC    AL1(255)
         DC    AL2(CHO0-M165)
         DC    AL2(CHOP-M165)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(255)
         DC    AL2(DCHO-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(SDBO0-M165)
         DC    AL2(SDBOP-M165)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(255)
         DC    AL2(DSDBO-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(IREG-M165)
         DC    AL2(IREGP-M165)
         DC    AL1(0)
         DC    AL1(4)
         DC    AL1(41)
         DC    AL1(255)
         DC    AL2(DIREG-DHEAD)
         DC    AL1(36)
         DC    AL1(255)
         DC    AL2(DSPL-M165)
         DC    AL2(DSPLP-M165)
         DC    AL1(6)
         DC    AL1(2)
         DC    AL1(70)
         DC    AL1(255)
         DC    AL2(DDSMP-DHEAD)
         DC    AL1(59)
         DC    AL1(255)
         DC    AL2(OP1REG0-M165)
         DC    AL2(OP1REGP-M165)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(255)
         DC    AL2(DOP1-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(IQ1-M165)
         DC    AL2(IQ1P-M165)
         DC    AL1(0)
         DC    AL1(2)
         DC    AL1(41)
         DC    AL1(255)
         DC    AL2(DIQ1-DHEAD)
         DC    AL1(36)
         DC    AL1(255)
         DC    AL2(BASEREG-M165)
         DC    AL2(BASEREGP-M165)
         DC    AL1(5)
         DC    AL1(3)
         DC    AL1(67)
         DC    AL1(255)
         DC    AL2(DBASE-DHEAD)
         DC    AL1(59)
         DC    AL1(255)
         DC    AL2(OP2REG0-M165)
         DC    AL2(OP2REGP-M165)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(255)
         DC    AL2(DOP2-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(IQ2-M165)
         DC    AL2(IQ2P-M165)
         DC    AL1(0)
         DC    AL1(2)
         DC    AL1(41)
         DC    AL1(255)
         DC    AL2(DIQ2-DHEAD)
         DC    AL1(36)
         DC    AL1(255)
         DC    AL2(INDXREG-M165)
         DC    AL2(INDXREGP-M165)
         DC    AL1(5)
         DC    AL1(3)
         DC    AL1(67)
         DC    AL1(255)
         DC    AL2(DINDX-DHEAD)
         DC    AL1(58)
         DC    AL1(255)
         DC    AL2(AREG0-M165)
         DC    AL2(AREGP-M165)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(255)
         DC    AL2(DA-DHEAD)
         DC    AL1(6)
         DC    AL1(255)
         DC    AL2(IQ3-M165)
         DC    AL2(IQ3P-M165)
         DC    AL1(0)
         DC    AL1(2)
         DC    AL1(41)
         DC    AL1(255)
         DC    AL2(DIQ3-DHEAD)
         DC    AL1(36)
         DC    AL1(255)
         DC    AL2(SHREG-M165)
         DC    AL2(SHREGP-M165)
         DC    AL1(6)
         DC    AL1(2)
         DC    AL1(70)
         DC    AL1(255)
         DC    AL2(DSH-DHEAD)
         DC    AL1(61)
         DC    AL1(255)
         DC    AL2(BREG0-M165)
         DC    AL2(BREGP-M165)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(255)
         DC    AL2(DB-DHEAD)
         DC    AL1(6)
         DC    AL1(255)
         DC    AL2(IQ4-M165)
         DC    AL2(IQ4P-M165)
         DC    AL1(0)
         DC    AL1(2)
         DC    AL1(41)
         DC    AL1(255)
         DC    AL2(DIQ4-DHEAD)
         DC    AL1(36)
         DC    AL1(255)
         DC    AL2(OA1-M165)
         DC    AL2(OA1P-M165)
         DC    AL1(5)
         DC    AL1(3)
         DC    AL1(67)
         DC    AL1(255)
         DC    AL2(DOA1-DHEAD)
         DC    AL1(60)
         DC    AL1(255)
         DC    AL2(CREG0-M165)
         DC    AL2(CREGP-M165)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(255)
         DC    AL2(DC-DHEAD)
         DC    AL1(6)
         DC    AL1(255)
         DC    AL2(EREG-M165)
         DC    AL2(EREGP-M165)
         DC    AL1(0)
         DC    AL1(2)
         DC    AL1(41)
         DC    AL1(255)
         DC    AL2(DE-DHEAD)
         DC    AL1(38)
         DC    AL1(255)
         DC    AL2(OA2-M165)
         DC    AL2(OA2P-M165)
         DC    AL1(5)
         DC    AL1(3)
         DC    AL1(67)
         DC    AL1(255)
         DC    AL2(DOA2-DHEAD)
         DC    AL1(60)
         DC    AL1(255)
         DC    AL2(DREG0-M165)
         DC    AL2(DREGP-M165)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(255)
         DC    AL2(DD-DHEAD)
         DC    AL1(6)
         DC    AL1(255)
         DC    AL2(DIFA-M165)
         DC    AL2(DIFAP-M165)
         DC    AL1(7)
         DC    AL1(1)
         DC    AL1(73)
         DC    AL1(255)
         DC    AL2(DDIFA-DHEAD)
         DC    AL1(58)
         DC    AL1(255)
         DC    AL2(F1REG0-M165)
         DC    AL2(F1REGP-M165)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(255)
         DC    AL2(DF1-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(IAA-M165)
         DC    AL2(IAAP-M165)
         DC    AL1(5)
         DC    AL1(3)
         DC    AL1(67)
         DC    AL1(255)
         DC    AL2(DIAA-DHEAD)
         DC    AL1(58)
         DC    AL1(255)
         DC    AL2(F2REG0-M165)
         DC    AL2(F2REGP-M165)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(255)
         DC    AL2(DF2-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(DIFB-M165)
         DC    AL2(DIFBP-M165)
         DC    AL1(7)
         DC    AL1(1)
         DC    AL1(73)
         DC    AL1(255)
         DC    AL2(DDIFB-DHEAD)
         DC    AL1(58)
         DC    AL1(255)
         DC    AL2(IAB-M165)
         DC    AL2(IABP-M165)
         DC    AL1(5)
         DC    AL1(3)
         DC    AL1(67)
         DC    AL1(255)
         DC    AL2(DIAB-DHEAD)
         DC    AL1(58)
         DC    AL1(255)
         DC    AL2(MY1REG6-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(0)
         DC    AL2(DMY1LAB-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(CSAR-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(2)
         DC    AL1(41)
         DC    AL1(0)
         DC    AL2(DCSAR-DHEAD)
         DC    AL1(35)
         DC    AL1(255)
         DC    AL2(MY2REG6-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(0)
         DC    AL2(DMY2LAB-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(CSARA-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(2)
         DC    AL1(41)
         DC    AL1(0)
         DC    AL2(DCSARA-DHEAD)
         DC    AL1(35)
         DC    AL1(255)
         DC    AL2(SLCSARA-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(1)
         DC    AL1(50)
         DC    AL1(0)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL2(SUM26-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(0)
         DC    AL2(DSUM-DHEAD)
         DC    AL1(4)
         DC    AL1(255)
         DC    AL2(CSARB-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(2)
         DC    AL1(41)
         DC    AL1(0)
         DC    AL2(DCSARB-DHEAD)
         DC    AL1(35)
         DC    AL1(255)
         DC    AL2(SLCSARB-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(1)
         DC    AL1(50)
         DC    AL1(0)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL2(PRFX-M165)
         DC    AL2(PRFXP-M165)
         DC    AL1(5)
         DC    AL1(2)
         DC    AL1(67)
         DC    AL1(255)
         DC    AL2(DPRFX-DHEAD)
         DC    AL1(58)
         DC    AL1(255)
         DC    AL2(CAR26-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(0)
         DC    AL2(DCAR-DHEAD)
         DC    AL1(4)
         DC    AL1(255)
         DC    AL2(SPAR1-M165)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(2)
         DC    AL1(10)
         DC    AL1(0)
         DC    AL2(DSPAR-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(SPAR20-M165)
         DC    AL2(0)
         DC    AL1(3)
         DC    AL1(2)
         DC    AL1(19)
         DC    AL1(0)
         DC    AL2(0)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL2(MCRR0-M165)
         DC    AL2(MCRRP-M165)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(255)
         DC    AL2(DMCRR-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(IC-M165)
         DC    AL2(ICP-M165)
         DC    AL1(0)
         DC    AL1(4)
         DC    AL1(44)
         DC    AL1(255)
         DC    AL2(DIC-DHEAD)
         DC    AL1(38)
         DC    AL1(255)
         DC    AL2(MCER-M165)
         DC    AL2(MCERP-M165)
         DC    AL1(4)
         DC    AL1(1)
         DC    AL1(63)
         DC    AL1(255)
         DC    AL2(DMCER-DHEAD)
         DC    AL1(57)
         DC    AL1(255)
         DC    AL2(MCDR0-M165)
         DC    AL2(MCDRP-M165)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(10)
         DC    AL1(255)
         DC    AL2(DMCDR-DHEAD)
         DC    AL1(3)
         DC    AL1(255)
         DC    AL2(MCAR0-M165)
         DC    AL2(MCARP-M165)
         DC    AL1(0)
         DC    AL1(4)
         DC    AL1(44)
         DC    AL1(255)
         DC    AL2(DMCAR-DHEAD)
         DC    AL1(36)
         DC    AL1(255)
         DC    AL2(MRAR-M165)
         DC    AL2(MRARP-M165)
         DC    AL1(4)
         DC    AL1(4)
         DC    AL1(63)
         DC    AL1(255)
         DC    AL2(DMRAR-DHEAD)
         DC    AL1(57)
         DC    AL1(255)
DHEAD    DS    0C
DCHN   DC    C'CH   '
D0     DC    C'0    '
DXID     DC    C'ID   '
DBIASP   DC    C'BIAS '
D1     DC    C'1    '
DLAR     DC    C'LAR  '
DREDO  DC    C'REDO '
D2     DC    C'2    '
DTID     DC    C'TIR  '
DSTAR1   DC    C'STAR1'
D3     DC    C'3    '
DTAR     DC    C'TAR  '
DSTAR2   DC    C'STAR2'
D4       DC    C'4    '
DKR      DC    C' KR  '
DFAR   DC    C'FAR  '
D5       DC    C'5    '
DFSAR    DC    C'FSAR '
D6       DC    C'6    '
D7       DC    C'7    '
DDRR     DC    C'DRR  '
DAUXA    DC    C'AUX A'
DMAINA   DC    C'MAINA'
DAUXB    DC    C'AUX B'
DBRPL  DC    C'B RPL'
DDLAT0   DC    C'0    '
DMAINB   DC    C'MAINB'
DDBAR  DC    C'D BAR'
DDLAT1   DC    C'1    '
DCHI   DC    C'CH I '
XBAR   DC    C'BAR  '
DACT     DC    C'ACT  '
DCHO   DC    C'CH O '
DSDBO  DC    C'SDBO '
DIREG  DC    C'IREG '
DDSMP    DC    C'DSPL '
DOP1   DC    C'OP 1 '
DIQ1   DC    C'IQ 1 '
DBASE  DC    C'BASE '
DOP2   DC    C'OP 2 '
DIQ2   DC    C'IQ 2 '
DINDX  DC    C'INDX '
DA     DC    C'A    '
DIQ3   DC    C'IQ 3 '
DSH    DC    C'SH   '
DB     DC    C'B    '
DIQ4     DC    C'IQ 4 '
DOA1     DC    C'OA1  '
DC     DC    C'C    '
DE     DC    C'E    '
DOA2     DC    C'OA2  '
DD     DC    C'D    '
DDIFA  DC    C'DIF A'
DF1      DC    C'  F1 '
DIAA     DC    C'  IAA'
DF2    DC    C'  F2 '
DDIFB  DC    C'DIF B'
DIAB     DC    C'  IAB'
DMY1LAB  DC    C'MY 1 '
DCSAR    DC    C' CSAR'
DMY2LAB  DC    C'MY 2 '
DCSARA DC    C'CSARA'
DPRFX    DC    C' PRFX'
DSUM   DC    C'SUM  '
DCSARB DC    C'CSARB'
DCAR   DC    C'CAR  '
DSPAR  DC    C'SPAR '
DMCRR  DC    C'MCRR '
DIC    DC    C'IC   '
DMCER  DC    C'MCER '
DMCDR  DC    C'MCDR '
DMCAR  DC    C'MCAR '
DMRAR  DC    C'MRAR '
MILLION  DC    F'1000000'
SIXTY    DC    F'60'
T24      DC    F'24'
LPYEAR   DC    F'366'
RGYEAR   DC    F'365'
CHARS    DC    C'0123456789ABCDEF'
DUMPNOW  DC    X'FF'
         DC    AL2(70)
         DC    AL2(48)
         DC    AL2(232)
***********************************************************************
*
FORMAT1  DC    F'0'
FORMAT2  DC    F'0'
LABELPTR DC    A(LABLAREA)
DISP     DC    FL2'0'
***********************************************************************
*              *****     EDIT ENTRIES AREA     *****
*
*
***********************************************************************
START    DS    0C
         LINE  (1,1),(5,1),SKIP=2
         ROUTINE    SYSDAM,ROUT0
         LABEL '--- MACHINE CHECK INTERRUPT CODE ---'
         LINE  (1,1),(5,1),SKIP=1
         LABEL '--- INTERRUPTION SUB CLASSES ---'
         LINE  (41,50),(1,50)
         BIN   SYSDAM
         BIN   PROCD
         LABEL 'SYSTEM DAMAGE (SD)','INSTRUCTION PROCESSING DAMAGE (PD)X
               '
         LINE
         BIN   SYSREC
         BIN   TIMDAM
         LABEL 'SYSTEM RECOVERY (SR)','TIMER DAMAGE (TD)'
         LINE
         BIN   CLOCKD
         BIN   EXTDAM
         LABEL 'CLOCK DAMAGE (CD)','EXTERNAL DAMAGE (ED)'
         LINE
         BIN   AUTOCON
         BIN   WARNG
         LABEL 'DEGRADATION (DG)','WARNING (W)'
         LINE  (1,1),(5,1)
         LABEL '--- INTERRUPT TENSE CODES ---'
         LINE  (41,50),(1,50)
         BIN   BACKUP1
         BIN   DELAY
         LABEL 'BACKED UP (B)','DELAYED (D)'
         LINE  (1,1),(5,1)
         LABEL '--- STORAGE AND PROTECTION ERROR CODES ---'
         LINE  (41,50),(1,50)
         BIN   UNSTOR
         BIN   CORRST
         LABEL 'STORAGE ERROR UNCORRECTED (SE)','STORAGE ERROR CORRECTEX
               D (SC)'
         LINE
         BIN   KEYERR
         LABEL 'STORAGE KEY ERROR UNCORRECTED (KE)'
         LINE  (1,1),(5,1)
         LABEL '--- VALIDITY BITS ---'
         LINE  (41,50),(1,50)
         BIN   EMWP
         BIN   SYSMSK
         LABEL 'PSW EMWP VALIDITY (WP)','PSW MASKS AND KEY VALID (MS)'
         LINE  (41,50),(1,50)
         BIN   PGMSK
         BIN   IAVLD
         LABEL 'PGM MASK AND COND. CODE VALID (PM)','INSTRUCTION ADDRESX
               S VALID (IA)'
         LINE
         BIN   FASTVLD
         BIN   RCVLD
         LABEL 'FAILING STORAGE ADDRESS VALID (FA)','REGION CODE VALID X
               (RC)'
         LINE  (41,50),(1,50)
         BIN   FLPVLD
         BIN   GPRVLD
         LABEL 'FP REGS STORED ARE VALID (FP)','GP REGS STORED ARE VALIX
               D (GP)'
         LINE
         BIN   CTLVLD
         BIN   LOGVLD
         LABEL 'CONTROL REGS STORED ARE VALID (CR)','EXTENDED LOGOUT ARX
               EA VALID (LG)'
         LINE
         BIN   STVLD
         LABEL 'STORAGE LOGICAL VALID (ST)'
         LINE  (41,50),(1,50)                                  @XA20224
         ROUTINE XKEY,ISITMVS                                  @XA20224
         LABEL ''                                              @XA20224
         LINE  (58,1),(30,30),SKIP=2                           @XA20224
         BIN   LRBNVLD                                         @XA20224
         ROUTINE XKEY,ISITMVS                                  @XA20224
         LABEL '--- LRB MAY NOT BE VALID','---'                @XA20224
         LINE  (37,1),(1,1),SKIP=1                             @XA20224
         HEX   EXTDLOG,1,2B
         LABEL 'EXTENDED LOGOUT LENGTH'
         LINE  (37,1),(1,1)
         HEX   RESRVDB,1,14B
         ROUTINE    EXTDLOG,ROUT3
         LABEL 'MC STATUS FIELD'
         LINE  ,(1,1),SKIP=1
         ROUTINE    EXTDLOG,ROUT2
         LABEL ' '
         LINE  (1,1),(31,1),SKIP=2
       LABEL  'STATUS LOG'
         LINE  (29,1),(11,1),SKIP=1
         HEX   SYSDAM1,1,8B                                    @YM6450P
        LABEL  'MK INTRPT CODE'
         LINE  (19,1),(11,1),SKIP=1
         HEX   MCAR,1,4B
       LABEL  'MCAR'
         LINE  (19,1),(11,1)
         HEX   MCDR1,1,8B
       LABEL  'MCDR'
         LINE  (19,1),(8,1)
         HEX   MANTLTH1,1,8B
       LABEL  'MNT LTH'
         LINE  (19,1),(11,1)
         HEX   MCRR1,1,8B
       LABEL  'MCRR'
         LINE  (19,32),(7,34),SKIP=2
         HEX   ICM90,1,4B
         HEX   STATUS,1,4B
       LABEL  '90 EMICM','STATUS'
         LINE  (19,32),(4,30),SKIP=3
         HEX   ECCCNTR,1,4B
         HEX   RTRYCNTR,1,4B
         LABEL 'ECC COUNTER','RETRY COUNTER'
         LINE  (1,1,),(31,1),SKIP=1
         LABEL 'FPRS - GPRS'
         LINE  (12,36),(7,36)
         HEX   FP0,1,8B
         HEX   FP2,1,8B
         LABEL 'FPR0','FPR2'
         LINE  ,,SKIP=2
         HEX   FP4,1,8B
         HEX   FP6,1,8B
         LABEL 'FPR4','FPR6'
         LINE  (9,18),(4,18),SKIP=1
         HEX   GPR0,1,4B
         HEX   GPR1,1,4B
         HEX   GPR2,1,4B
         HEX   GPR3,1,4B
         LABEL 'GPR0','GPR1','GPR2','GPR3'
         LINE
         HEX   GPR4,1,4B
         HEX   GPR5,1,4B
         HEX   GPR6,1,4B
         HEX   GPR7,1,4B
         LABEL 'GPR4','GPR5','GPR6','GPR7'
         LINE
         HEX   GPR8,1,4B
         HEX   GPR9,1,4B
         HEX   GP10,1,4B
         HEX   GP11,1,4B
         LABEL 'GPR8','GPR9','GPRA','GPRB'
         LINE  ,,SKIP=3
         HEX   GP12,1,4B
         HEX   GP13,1,4B
         HEX   GP14,1,4B
         HEX   GP15,1,4B
         LABEL 'GPRC','GPRD','GPRE','GPRF'
         LINE  ,(31,1),SKIP=1
         LABEL 'CONTROL REGS'
         LINE  ,(4,18)
         HEX   CTR0,1,4B
         HEX   CTR1,1,4B
         HEX   CTR2,1,4B
         HEX   CTR3,1,4B
         LABEL 'ECR0','ECR1','ECR2','ECR3'
         LINE
         HEX   CTR4,1,4B
         HEX   CTR5,1,4B
         HEX   CTR6,1,4B
         HEX   CTR7,1,4B
         LABEL 'ECR4','ECR5','ECR6','ECR7'
         LINE
         HEX   CTR8,1,4B
         HEX   CTR9,1,4B
         HEX   CR10,1,4B
         HEX   CR11,1,4B
         LABEL 'ECR8','ECR9','ECRA','ECRB'
         LINE  ,,SKIP=3
         HEX   CR12,1,4B
         HEX   CR13,1,4B
         HEX   CR14,1,4B
         HEX   CR15,1,4B
         LABEL 'ECRC','ECRD','ECRE','ECRF'
         LINE  ,(31,1),SKIP=1
         LABEL 'CPU DISPLAY'
         LINE  ,(18,47)
         LABEL 'ADR   K  MK ID ST  ARRAY  ADR     VD','TRANSLATOR'
         LINE  (1,1),(1,1)
         ROUTINE    CHADR,ROUT1
         ROUTINE    CHNID,ROUT1
         ROUTINE    ADRARY0,ROUT1
         ROUTINE    VLD0,ROUT1
         ROUTINE   XLATID0,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE   BIASREG,ROUT1
         ROUTINE   BIASSSK,ROUT1
         ROUTINE    ADRARY1,ROUT1
         ROUTINE    VLD1,ROUT1
         ROUTINE   LAR,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE    REDO,ROUT1
         ROUTINE    REDOID,ROUT1
         ROUTINE    ADRARY2,ROUT1
         ROUTINE    VLD2,ROUT1
         ROUTINE   TIR,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE   STAR1,ROUT1
         ROUTINE   STARMK1,ROUT1
         ROUTINE   STARID1,ROUT1
         ROUTINE    ADRARY3,ROUT1
         ROUTINE    VLD3,ROUT1
         ROUTINE   TAR,ROUT1
         LABEL ' '
         LINE
         ROUTINE   STAR2,ROUT1
         ROUTINE   STARMK2,ROUT1
         ROUTINE   STARID2,ROUT1
         ROUTINE   ADRARY4,ROUT1
         ROUTINE   VLD4,ROUT1
         ROUTINE   KR,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE    FAR,ROUT1
         ROUTINE    FARID,ROUT1
         ROUTINE   ADRARY5,ROUT1
         ROUTINE   VLD5,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE   FSAR,ROUT1
         ROUTINE   ADRARY6,ROUT1
         ROUTINE   VLD6,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE   ADRARY7,ROUT1
         ROUTINE   VLD7,ROUT1
         ROUTINE   USEDLAT,ROUT1
         LABEL ' '
         LINE
         ROUTINE   AUXA0,ROUT1
         LABEL ' '
         LINE  ,(56,1),SKIP=0
         LABEL 'DLAT   LA  RA   K  ID'
         LINE  (1,1),(1,1),SKIP=1
         ROUTINE   MAINA0,ROUT1
         LABEL ' '
         LINE
         ROUTINE   AUXB0,ROUT1
         ROUTINE    BRPL,ROUT1
         ROUTINE   DLAT0LA,ROUT1
         LABEL ' '
         LINE
         ROUTINE   MAINB0,ROUT1
         ROUTINE    DBAR,ROUT1
         ROUTINE   DLAT1LA,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE    CHI0,ROUT1
         ROUTINE    BAR,ROUT1
         ROUTINE   ACTID,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE    CHO0,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE    SDBO0,ROUT1
         LABEL ' '
         LINE
         ROUTINE    IREG,ROUT1
         ROUTINE   DSPL,ROUT1
         LABEL ' '
         LINE
         ROUTINE    OP1REG0,ROUT1
         ROUTINE    IQ1,ROUT1
         ROUTINE    BASEREG,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE    OP2REG0,ROUT1
         ROUTINE    IQ2,ROUT1
         ROUTINE    INDXREG,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE    AREG0,ROUT1
         ROUTINE    IQ3,ROUT1
         ROUTINE    SHREG,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE    BREG0,ROUT1
         ROUTINE   IQ4,ROUT1
         ROUTINE   OA1,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE    CREG0,ROUT1
         ROUTINE    EREG,ROUT1
         ROUTINE   OA2,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE    DREG0,ROUT1
         ROUTINE    DIFA,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE   F1REG0,ROUT1
         ROUTINE   IAA,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE   F2REG0,ROUT1
         ROUTINE    DIFB,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE   IAB,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE    MY1REG6,ROUT1
         ROUTINE    CSAR,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE    MY2REG6,ROUT1
         ROUTINE    CSARA,ROUT1
         ROUTINE    SLCSARA,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE    SUM26,ROUT1
         ROUTINE    CSARB,ROUT1
         ROUTINE    SLCSARB,ROUT1
         ROUTINE   PRFX,ROUTMP
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE   CAR26,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE    SPAR1,ROUT1
         ROUTINE    SPAR20,ROUT1
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE    MCRR0,ROUT1
         ROUTINE    IC,ROUT1
         ROUTINE    MCER,ROUT1
         LABEL ' '
         LINE
         LABEL ' '
         LINE  (1,1),(1,1)
         ROUTINE    MCDR0,ROUT1
         ROUTINE    MCAR0,ROUT1
         ROUTINE   MRAR,ROUT1
         LABEL ' '
         DC    X'FE'
         DC    CL8'IFCED165'
LABLAREA EQU   *
         LSTART
         END
