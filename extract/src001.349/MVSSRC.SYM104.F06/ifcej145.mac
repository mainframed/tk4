         TITLE 'IFCEJ145 MODEL 145 CHANNEL EDIT LOAD 2'
         MACRO
&NAME    DSGEN
.*                            THIS MACRO GENERATES ONE DSECT WORD
.*                                 FORMATTED FOR THE SUBJECT LOG RECORD
.*                                 EACH OPERAND HAS TWO SUB LISTS. THE
.*                                 FIRST IS THE NAME OF THE LOG ITEM
.*                                 WHILE THE SECOND IS THE # OF BITS TO
.*                                 ALLOCATE FOR THIS ITEM. ITEMS MUST
.*                                 BE DEFINED CONTIGUOUSLY WITHOUT GAPS
.*                                 UNUSED BIT GROUPS MUST BE GIVEN
.*                                 DUMMY NAMES. THE NAMES PROVIDED FOR
.*                                 THE LOG ITEMS MAY THEN BE USED IN
.*                                 THE CONVERSION MACRO INSTRUCTIONS.
         GBLC &ITEM(1000)
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000)
         LCLB  &ONLY1,&CTIND
         LCLA  &START1,&START2,&END1,&END2
         LCLC  &SYMBOL,&EQUSYM
         LCLA  &OP,&COUNT,&BYTE,&EQUCNT
         ACTR  100000
.START   AIF   (N'&SYSLIST(&OP+1) LT 3).LOOP
         AIF   ('&SYSLIST(&OP+1,3)' EQ 'EQU').LOOP     TEST FOR EQU
  AIF   ('&SYSLIST(&OP+1,3)' EQ '' AND '&SYSLIST(&OP+1,4)' EQ '').ERR1
  AIF   ('&SYSLIST(&OP+1,3)' EQ '' OR '&SYSLIST(&OP+1,4)' EQ '').ERR1
         AIF   ('&SYSLIST(&OP+1,3)' GT '&SYSLIST(&OP+1,4)').ERR3
&START1  SETA  &SYSLIST(&OP+1,3)        GET START COUNT OF 1
&START2  SETA  &SYSLIST(&OP+1,4)        GET FIRST END COUNT
         AGO   .SET2A                   BRANCH AROUND
.ERR1    MNOTE '**FIRST SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.SET2A   AIF   ('&SYSLIST(&OP+1,5)' EQ ''AND '&SYSLIST(&OP+1,6)' EQ '' X
               ).SET2                   TEST FOR NO SECOND
  AIF   ('&SYSLIST(&OP+1,5)' EQ '' OR '&SYSLIST(&OP+1,6)' EQ '').ERR2
         AIF   ('&SYSLIST(&OP+1,5)' GT '&SYSLIST(&OP+1,6)').ERR3
&END1    SETA  &SYSLIST(&OP+1,5)        GET START COUNT OF 2
&END2    SETA  &SYSLIST(&OP+1,6)        GET END COUNT OF 2
         AGO   .LOOP
.SET2    ANOP
&ONLY1   SETB  1                        INDICATE ONLY ONE CONCATENATION
         AGO   .LOOP
.ERR2    MNOTE '**SECOND SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.ERR3    MNOTE '**START GREATER THAN END CONCATENATION**'
         MEXIT
.LOOP    ANOP
&OP      SETA  &OP+1
         AIF   (&OP GT N'&SYSLIST).DONE      TEST IF ALL DONE
&ITEMNBR SETA  &ITEMNBR+1
         AIF   ('&SYSLIST(&OP,2)' NE '').OK1
         MNOTE '**NULL BIT COUNT FIELD**'
         MEXIT
.OK1     ANOP
&SYMBOL  SETC  '&SYSLIST(&OP,1)'
         AIF   ('&SYMBOL' NE '').OK
*              *****     LOG ITEM SYMBOL NOT PROVIDED     *****
         AIF   ('&SYSLIST(&OP,3)' NE 'EQU').CNT
         AGO   .START                   GET NEXT
.OK      AIF   (N'&SYSLIST(&OP) LT 3).NO3    TEST FOR OLD FORMAT
         AIF   ('&SYSLIST(&OP,3)' EQ 'EQU').EQU   TEST FOR EQU
         AIF   (&ONLY1).OK2             TEST FOR ONLY ONE CONCAT
&SYMBOL  SETC  '&SYMBOL.&START1.&END1'       GET 1 AND 2 CONCAT
         AGO   .NO3                     BRANCH AROUND
.OK2     ANOP
&SYMBOL  SETC  '&SYMBOL.&START1'        GET 1 CONCATENATED
.NO3     ANOP
&SYMBOL  EQU   *+&BYTE
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL IN GLOBAL
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)
&SHIFT(&ITEMNBR) SETA &COUNT-&BYTE*8
.CNT     ANOP
&CTIND   SETB  1                        SET COUNT INDICATOR
&COUNT   SETA  &COUNT+&SYSLIST(&OP,2)
&BYTE    SETA  &COUNT/8
         AIF   (N'&SYSLIST(&OP) LT 3).START  TEST FOR OLD FORMAT
         AIF   (&ONLY1).TSTST           TEST FOR ONLY ONE CONCAT
         AIF   (&END1 EQ &END2).TSTST   TEST FOR SECOND END
&END1    SETA  &END1+1                  INCREMENT COUNT
&OP      SETA  &OP-1                    DECREMENT INCREMENT
         AGO   .LOOP                    GENERATE NEXT
.TSTST   ANOP
         AIF   (&START1 EQ &START2).LPDONE   TEST FOR END
         AIF   (&ONLY1).NSET1           TEST FOR ONLY ONE CONCAT
&END1    SETA  &SYSLIST(&OP,5)          RE-INIT SECOND START COUNT
.NSET1   ANOP
&OP      SETA  &OP-1                    DECREMENT INDEX
&START1  SETA  &START1+1                INCREMENT FIRST COUNT
         AGO   .LOOP                    GO DO NEXT
.LPDONE  ANOP
&ONLY1   SETB  0                        CLEAR INDICATOR
         AGO   .START                   GO TEST FOR MORE SUB-LISTS
.DONE    AIF   (&COUNT-&COUNT/8*8 NE 0).ERR  TEST FOR MULTIPLE OF EIGHT
         AIF   (&CTIND EQ 0).END        NO DS IF NO COUNT
&COUNT   SETA  &COUNT/8                 GET NUMBER OF BYTES
&NAME    DS    &COUNT.C
.END     MEXIT
.ERR     MNOTE '**BIT COUNT FLDS DO NOT TOTAL MULTIPLE OF 8**'
         MEXIT
.EQU     AIF   ('&SYSLIST(&OP,4)' NE '').EQU1     TEST FOR NULL LABEL
.ERR4    MNOTE '**EQU OPERAND OMITTED OR NOT FOUND**'
         MEXIT
.EQU1    AIF   (&SYSLIST(&OP,2) LT 16).EQU2  COUNT OVER FIFTEEN
*****               THE FOLLOWING STATEMENT                *****
*****     NUMBER OF BITS EXCEED 15 - DO NOT USE AS BIN     *****
.EQU2    ANOP
&EQUCNT  SETA  0                        CLEAR COUNTER
&EQUSYM  SETC  '&SYSLIST(&OP,4)'        GET EQU OPERAND
.EQULOP  ANOP
&EQUCNT  SETA  &EQUCNT+1                INCREMENT INDEX
         AIF   ('&ITEM(&EQUCNT)' EQ '&EQUSYM').EQUOUT  LABEL FOUND?
         AIF   (&EQUCNT EQ &ITEMNBR).ERR4    ALL TESTED?
         AGO   .EQULOP                  NO-GET NEXT
.EQUOUT  ANOP
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL NAME
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)    GET NUMBER OF BITS
&SHIFT(&ITEMNBR) SETA &SHIFT(&EQUCNT)   GET SHIFT COUNT
&SYMBOL  EQU   &EQUSYM                  THIS SYMBOL EQUATED
         AGO   .START                   RETURN FOR NEXT
         MEND
         EJECT
*  LINE MACRO     LINE MACRO     LINE MACRO     LINE MACRO            *
         SPACE 2
         MACRO
&NAME    LINE  &DATA,&LABEL,&SKIP=
.*                            THIS MACRO ESTABLISHES THE MARGINS OR
.*                                 COLUMN SETTINGS FOR EACH LINE. IT
.*                                 GENERATES NECESSARY CARRIAGE CONTROL
.*                                 ENTRIES. LASTLY IT DETERMINES THE
.*                                 NUMBER OF ENTRIES ASSOCIATED WITH
.*                                 THE PREVIOUS LINE AND STORES THAT #
.*                                 INTO THE APPROPRIATE BYTE.
.*                            &DATA(1) - CHARACTER POSITION TO BEGIN
.*                                 DATA.
.*                            &DATA(2) - # OF SPACES BETWEEN SUCCESSIVE
.*                                 DATA COLUMN STARTING CHARACTERS.
.*                            &LABEL(1) - CHAR. POS. TO BEGIN LABELS.
.*                            &LABEL(2) - # SPACES BETWEEN LINE'S LABEL
.*                                 STARTING CHARACTERS.
.*                            &SKIP= - # OF LINES TO ADVANCE CARRIAGE
.*                                 TO BEGIN NEXT PRINTED LINE.
.*                            NEW ENTRIES ARE GENERATED ONLY WHEN
.*                                 NECESSARY. OMISSION OF ITEMS MEANS
.*                                 THEY HAVE NOT CHANGED SINCE PREVIOUS
.*                                 SETTINGS. A LINE MACRO IS REQUIRED
.*                                 FOR EACH PRINTED LINE. IF NO SETTING
.*                                 CHANGES ARE REQUIRED ALL OPERANDS
.*                                 ARE OMITTED IN WHICH CASE ONLY THE
.*                                 # OF ENTRIES FOR THE PREVIOUS LINE
.*                                 IS COMPUTED. THIS MACRO MUST BE THE
.*                                 FIRST MACRO INSTRUCTION ISSUED FOR
.*                                 THE SUBJECT LINE
         GBLA  &DB,&DT,&LB,&LT,&NRENTS
         GBLA  &LASTCC,&INITIAL
         GBLC  &NRENTSX
         GBLC  &CARRCON
         GBLB  &TEST
         LCLA  &S
&NAME    DS    0C
         AIF   (&INITIAL EQ 0).FIRSTLN
         LINEND
         AGO   .NTFIRST
.FIRSTLN ANOP
&NRENTSX SETC  'N&SYSNDX'
&INITIAL SETA  1
N&SYSNDX EQU   *
.NTFIRST ANOP
         DC    AL1(0)
         AIF   ('&DATA(1)' EQ '').CKDTABS
         AIF   (&DATA(1) EQ &DB).CKDTABS
&DB      SETA  &DATA(1)
         AGO   .AA
.CKDTABS AIF   ('&DATA(2)' EQ '').NCDATA
         AIF   (&DATA(2) EQ &DT).NCDATA
         AGO   .CC
.AA      AIF   ('&DATA(2)' EQ '').BB
         AIF   (&DATA(2) EQ &DT).BB
.CC      ANOP
&DT      SETA  &DATA(2)
.BB      DC    XL2'FFFE'
         DC    FL1'&DB'
         DC    FL1'&DT'
&NRENTS  SETA  &NRENTS+1
.NCDATA  ANOP
         AIF   ('&LABEL(1)' EQ '').CKLTABS
         AIF   (&LABEL(1) EQ &LB).CKLTABS
&LB      SETA  &LABEL(1)
         AGO   .AAA
.CKLTABS AIF   ('&LABEL(2)' EQ '').NCLABEL
         AIF   (&LABEL(2) EQ &LT).NCLABEL
         AGO   .CCC
.AAA     AIF   ('&LABEL(2)' EQ '').BBB
         AIF   (&LABEL(2) EQ &LT).BBB
.CCC     ANOP
&LT      SETA  &LABEL(2)
.BBB     DC    XL2'FFFF'
         DC    FL1'&LB'
         DC    FL1'&LT'
&NRENTS  SETA  &NRENTS+1
.NCLABEL ANOP
         AIF   ('&SKIP' NE '').CONT
         AIF   (&TEST EQ 0).NOCHANG
&S       SETA  &LASTCC
         AGO   .DEFAULT
.CONT    ANOP
         AIF   (&TEST EQ 0).AB
&S       SETA  &SKIP
.DEFAULT ANOP
         ORG   &CARRCON+3
         DC    AL.3(0),AL.2(&S),AL.3(1)
         ORG
&LASTCC  SETA  &S
&TEST    SETB  0
         AGO   .DD
.AB      AIF   (&SKIP EQ &LASTCC).NOCHANG
A&SYSNDX DC    XL2'FFFB'
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
         DC    FL1'9'
&LASTCC  SETA  &SKIP
&TEST    SETB  1
&CARRCON SETC  'A&SYSNDX'
&NRENTS  SETA  &NRENTS+1
.DD      ANOP
.NOCHANG ANOP
         MEND
         EJECT
         MACRO
         BIN
.*                                 &LOGITEM - NAME OF ITEM IN LOG
.*                                      RECORD DSECT
.*                                 &SKIP$OR - NBR OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES
.*                                      TO BACK UP FROM COLUMN FOR
.*                                      START OF PRINTING. THE LETTER
.*                                      B PRECEEDS THE NUMBER (B5) IF
.*                                      THE LATTER IS DESIRED. OMISSION
.*                                      OF THIS OPERAND FORCES OPTION 2
.*                                      WITH BACKUP SPACING EQUAL TO
.*                                 THE NUMBER OF BITS IN THE ITEM
.*                                 DEFINITION (VIA MACRO 'DSGEN').
.*                            A LIMIT OF 15 BITS IS IMPOSED FOR THE
.*                                 TOTAL NUMBER OF BITS TO PRINT.
         GBLC &ITEM(1000)
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000),&NRENTS
         GBLC  &DSECT
         LCLB  &B
         LCLA  &IBITS,&NDX,&ISHIFT,&K
         LCLA  &TEMP,&T,&OP
         LCLC  &S
.LOOP    ANOP
&OP      SETA  &OP+1
.LOOP1   ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&SYSLIST(&OP,1)').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP1
         MNOTE *,'YOU BLEW IT'
         ROUTINE DUM,SKIPPER
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
&T       SETA  &IBITS-1
&B       SETB  0
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
&T       SETA  &S
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
&TEMP    SETA  &ISHIFT
         AIF   (&IBITS NE 1 OR &B NE 0).BIN2
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'&TEMP'
         AGO   .OUT
.BIN2    AIF   ('&SYSLIST(&OP,2)' NE '').BIN3
&B       SETB  1
.BIN3    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'C'
         DC    BL.1'&B',AL.7(&T),AL.4(&IBITS),FL.4'&ISHIFT'
.OUT     ANOP
&NDX     SETA  0
         AIF   (&OP LT N'&SYSLIST).LOOP
         MEND
         EJECT
*  HEX MACRO     HEX MACRO     HEX MACRO    HEXN MACRO     HEX MACRO  *
         SPACE 2
         MACRO                                                 @YL02021
         HEX   ,                                               @YL02021
.*                            THIS MACRO FACILITATES GENERATION OF THE
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE
.*                                 CONVERSIONS.                @YL02021
.*                            &SYSLIST(&OP,1) - NAME OF DATA ITEM TO BE
.*                                 CONVERTED                   @YL02021
.*                            &SYSLIST(&OP,2) - # OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO
.*                                 BACK UP FROM COLUMN FOR START OF
.*                                 PRINTING. THE LETTER B PRECEEDS THE
.*                                 NUMBER (B8) IF THE LATTER OPTION IS
.*                                 DESIRED. OMISSION OF THIS OPERAND
.*                                 FORCES OPTION 2 WITH BACKUP SPACING
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR
.*                                 IMPLICITLY B).              @YL02021
.*                            &SYSLIST(&OP,3) - NUMBER OF BYTES TO
.*                                 PROCESS. THIS NUMBER IS SUFFIXED
.*                                 WITH AN L,R, OR B TO STIPULATE
.*                                 PRINTING OF THE LEFT HALF, RIGHT
.*                                 HALF, OR BOTH HALVES OF THE BYTE
.*                                 RESPECTIVELY. OMISSION OF THIS
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES-
.*                                 SARY. THIS MACRO MUST BE THE FIRST
.*                                 MACRO INSTRUCTION ISSUED FOR THE
.*                                 SUBJECT LINE(S).            @YL02021
         GBLA  &BITS(1000),&ITEMNBR,&SHIFT(1000),&NRENTS       @YL02021
         GBLC  &ITEM(1000),&DSECT                              @YL02021
         GBLA  &INITIAL                                        @YL02021
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN                      @YL02021
         LCLB  &B,&SUB                                         @YL02021
         LCLA  &IBITS,&NDX,&ISHIFT,&K,&T,&CODE,&BYTESP,&OP     @YL02021
         LCLC  &S,&LETTER                                      @YL02021
         ACTR  500000                                          @YL02021
         AIF   (&DIAGTST EQ 0).NOMSG                           @YL02021
         AIF   (&INITIAL EQ 0).NOMSG                           @YL02021
         AIF   (&DIAGLIN EQ 1).NOMSG                           @YL02021
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'         @YL02021
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****            @YL02021
*        LINE                                                  @YL02021
         LINE                                                  @YL02021
.NOMSG   ANOP                                                  @YL02021
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP         @YL02021
&SUB     SETB  1                                               @YL02021
.LOOP    ANOP                                                  @YL02021
&OP      SETA  &OP+1                                           @YL02021
.LOOP1   ANOP                                                  @YL02021
&NDX     SETA  &NDX+1                                          @YL02021
         AIF   ('&ITEM(&NDX)' EQ '&SYSLIST(&OP,1)').FOUND      @YL02021
         AIF   (&NDX LT &ITEMNBR).LOOP1                        @YL02021
         MNOTE '**LOG ITEM NOT DEFINED**'                      @YL02021
         MEXIT                                                 @YL02021
.FOUND   ANOP                                                  @YL02021
&ISHIFT  SETA  &SHIFT(&NDX)                                    @YL02021
&IBITS   SETA  &BITS(&NDX)                                     @YL02021
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).ALIGN            @YL02021
.ERR     MNOTE '**DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY**' @YL02021
         MEXIT                                                 @YL02021
.ALIGN   ANOP                                                  @YL02021
&CODE    SETA  1                                               @YL02021
         AIF   (&SUB EQ 1).SUBA                                @YL02021
&K       SETA  K'&SYSLIST(3)                                   @YL02021
         AGO   .SUBB                                           @YL02021
.SUBA    ANOP                                                  @YL02021
&K       SETA  K'&SYSLIST(&OP,3)                               @YL02021
.SUBB    ANOP                                                  @YL02021
         AIF   (&K EQ 1).ERR3                                  @YL02021
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK                   @YL02021
         MNOTE '**BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL**'
         MEXIT                                                 @YL02021
.OK      AIF   (&SUB EQ 1).SUBC                                @YL02021
         AIF   ('&SYSLIST(3)' EQ '').USEDEFN                   @YL02021
&LETTER  SETC  '&SYSLIST(3)'(&K,1)                             @YL02021
&S       SETC  '&SYSLIST(3)'(1,&K-1)                           @YL02021
         AGO   .SUBD                                           @YL02021
.SUBC    ANOP                                                  @YL02021
         AIF   ('&SYSLIST(&OP,3)' EQ '').USEDEFN               @YL02021
&LETTER  SETC  '&SYSLIST(&OP,3)'(&K,1)                         @YL02021
&S       SETC  '&SYSLIST(&OP,3)'(1,&K-1)                       @YL02021
.SUBD    ANOP                                                  @YL02021
&BYTESP  SETA  &S                                              @YL02021
         AIF   ('&LETTER' EQ 'B').BOTH                         @YL02021
         AIF   ('&LETTER' EQ 'L').LEFT                         @YL02021
         AIF   ('&LETTER' EQ 'R').RIGHT                        @YL02021
.ERR3    MNOTE '**PARAMETER 3 INCOMPLETE-DSGEN DEFINITION USED**'
         AGO   .USEDEFN                                        @YL02021
.RIGHT   ANOP                                                  @YL02021
&CODE    SETA  2                                               @YL02021
         AGO   .L                                              @YL02021
.LEFT    ANOP                                                  @YL02021
&CODE    SETA  1                                               @YL02021
         AGO   .L                                              @YL02021
.USEDEFN ANOP                                                  @YL02021
&BYTESP  SETA  &IBITS/8                                        @YL02021
.BOTH    AIF   (&ISHIFT NE 0).ERR                              @YL02021
&CODE    SETA  3                                               @YL02021
&T       SETA  &BYTESP*2-1                                     @YL02021
&S       SETC  '&T'                                            @YL02021
.OK2     AIF   (&ISHIFT EQ 0).L                                @YL02021
&CODE    SETA  2                                               @YL02021
.L       ANOP                                                  @YL02021
&B       SETB  1                                               @YL02021
         AIF   (&SUB EQ 1).SUBE                                @YL02021
         AIF   ('&SYSLIST(2)' EQ '').BACKUP                    @YL02021
&K       SETA  K'&SYSLIST(2)                                   @YL02021
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')                     @YL02021
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)                       @YL02021
         AGO   .SUBF                                           @YL02021
.SUBE    ANOP                                                  @YL02021
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP                @YL02021
&K       SETA  K'&SYSLIST(&OP,2)                               @YL02021
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')                 @YL02021
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)                   @YL02021
.SUBF    ANOP                                                  @YL02021
.BACKUP  ANOP                                                  @YL02021
&NRENTS  SETA  &NRENTS+1                                       @YL02021
         AIF   (&BYTESP GT 0 AND &BYTESP LT 16).SUB0           @YL02021
         MNOTE '**NO. OF BYTES OUTSIDE RANGE OF 1-15**'        @YL02021
         MEXIT                                                 @YL02021
.SUB0    AIF   (&SUB EQ 1).SUBG                                @YL02021
         DC    AL.12(&SYSLIST(1)-&DSECT),XL.4'A'               @YL02021
         AGO   .SUBH                                           @YL02021
.SUBG    ANOP                                                  @YL02021
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'A'           @YL02021
.SUBH    ANOP                                                  @YL02021
         DC    BL.1'&B',FL.7'&S',AL.4(&BYTESP),FL.4'&CODE'     @YL02021
.OUT     ANOP                                                  @YL02021
&NDX     SETA  0                                               @YL02021
         AIF   (&SUB EQ 0).OUTA                                @YL02021
         AIF   (&OP LT N'&SYSLIST).LOOP                        @YL02021
.OUTA    ANOP                                                  @YL02021
         MEND                                                  @YL02021
         SPACE 2
*  ROUTINE MACRO     ROUTINE MACRO     ROUTINE MACRO     ROUTINE MACRO*
         SPACE 2
         MACRO
&NAME    ROUTINE &LOGITEM,&RNAME
         GBLC  &DSECT,&CSECT
         GBLC  &ITEM(1000)
         GBLA  &SHIFT(1000),&ITEMNBR
         GBLA  &NRENTS
         LCLA  &ISHIFT,&NDX
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOG ITEM NOT DEFINED'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&NAME    DC    AL.12(&LOGITEM-&DSECT),XL.4'D'
         DC    AL.4(&ISHIFT),AL.12(&RNAME-&CSECT)
&NRENTS  SETA  &NRENTS+1
         MEND
         EJECT
*  LABEL MACRO     LABEL MACRO     LABEL MACRO     LABEL MACRO        *
         SPACE 2
         MACRO
&NAME    LABEL &LABEL1,&LABEL2,&LABEL3,&LABEL4,&LABEL5,&LABEL6,        C
               &LABEL7,&LABEL8
.*                            THIS MACRO ALLOWS UP TO ACHT LABELS TO
.*                                 BE SPECIFIED FOR A GIVEN LINE. THE
.*                                 LABELS SHOULD BE ENCLOSED IN QUOTA-
.*                                 TION MARKS. THE COLUMN AND LINE END
.*                                 CONTROLS WILL BE INSERTED BY THE
.*                                 MACRO. OMITTED OPERANDS MEAN NO
.*                                 LABEL REQUIRED FOR RESPECTIVE
.*                                 COLUMN. THIS MACRO WILL ALSO ALERT
.*                                 THE PROGRAMMER TO EXACTLY WHERE THE
.*                                 TABLE MUST BE BROKEN IF NECESSARY
.*                                 TO AVOID EXCEEDING THE MAXIMUM LIMIT
         GBLC &LABELS(2000)
         GBLC  &LBL(100)
         GBLA  &LBLCTR(100)
         GBLA  &LABELNR
         GBLA  &NRENTS,&LPTR
         LCLC  &MARGIN,&TACK
         LCLC  &TEXT
         LCLA  &OP,&K,&START,&NRCHAR,&REMAIN
&MARGIN  SETC  '*'
         AIF   ('&NAME' EQ '').LOOPOUT
&LPTR    SETA  &LPTR+1
&LBL(&LPTR) SETC '&NAME'
&LBLCTR(&LPTR) SETA &LABELNR+1
.LOOPOUT ANOP
&OP      SETA  &OP+1
&K       SETA  K'&SYSLIST(&OP)
         AIF (&K GE 2).NORM
&K       SETA  2
.NORM    ANOP
&START   SETA  2
         AIF (&OP LT N'&SYSLIST).NOTLAST
&MARGIN  SETC  '$'
.NOTLAST ANOP
&NRCHAR  SETA  8
&TACK    SETC  ''
.LOOPIN  ANOP
&REMAIN  SETA  &K-&START
         AIF (&REMAIN GE 8).MORE
&TACK    SETC  '&MARGIN'
&NRCHAR  SETA  &REMAIN
.MORE    ANOP
&TEXT    SETC  ''
         AIF (&REMAIN EQ 0).ENDTEXT
&TEXT    SETC  '&SYSLIST(&OP)'(&START,&NRCHAR)
.ENDTEXT ANOP
&LABELNR SETA  &LABELNR+1
&LABELS(&LABELNR) SETC '&TEXT'.'&TACK'
&START   SETA  &START+8
         AIF ('&TACK' EQ '').LOOPIN
         AIF ('&TACK' EQ '*').LOOPOUT
         MEND
         MACRO
         LSTART
.*                            THIS MACRO IS ISSUED WHEN THE LABEL AREA
.*                                 OF THE TABLE IS TO BEGIN.
         GBLC &LABELS(2000)
         GBLA  &LABELNR
         GBLC  &LBL(100)
         GBLA  &LBLCTR(100)
         LCLA  &NDX,&CTR
         LINEND
&CTR     SETA  1
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   (&LBLCTR(&CTR) NE &NDX).NOLBL
&LBL(&CTR) DC  C'&LABELS(&NDX)'
&CTR     SETA  &CTR+1
         AGO   .LOOPCTL
.NOLBL   ANOP
         DC    C'&LABELS(&NDX)'
.LOOPCTL AIF   (&NDX LT &LABELNR).LOOP
         MEND
         MACRO
         LINEND
.*                            THIS MACRO IS USED ONLY BY THE LINE
.*                                 MACRO TO SET THE NUMBER OF ENTRIES
.*                                 ASSOCIATED WITH EACH LINE.
         GBLA  &NRENTS
         GBLC &NRENTSX
         ORG   &NRENTSX
         DC    FL1'&NRENTS'
         ORG
&NRENTS  SETA  0
B&SYSNDX EQU   *
&NRENTSX SETC  'B&SYSNDX'
         MEND
         SPACE 2
         GBLC  &DSECT,&CSECT
&CSECT   SETC  'IFCEJ145'
&DSECT   SETC  'DSECT145'
IFCEJ145 CSECT
DSECT145 DSECT
         DS    0F
         DSGEN (XKEY,16),(XSWS8,9),(XSWS9,1),(XSWS10,1),(XSWS11,1),    C
               (XSWS12,1),(XSWS13,1),(XSWS14,1),(XSWS15,1)
         DSGEN (XDUM1,32)
         DSGEN (XDATE,32)
         DSGEN (XTIME,32)
         DSGEN (XDUM2,8),(XSER,24)
         DSGEN (XMOD,16),(MCEL,16)
         DSGEN (XJOBN,64)
         DSGEN (XAIO1,16),(XAIO2,16),(XAIO3,16),(XAIO4,16)
         DSGEN (XAIO5,16),(XAIO6,16),(XAIO7,16),(XAIO8,16)
         DSGEN (XFCCWCC,8),(XFCCWDA,24),(XFCCWFL,8),(XFCCW0,8),        C
               (XFCCWCT,16)
         DSGEN (XCSWK,8),(XCSWCA,24)
         DSGEN (XCSWUS0,1),(XCSWUS1,1),(XCSWUS2,1),(XCSWUS3,1),        *
               (XCSWUS4,1),(XCSWUS5,1),(XCSWUS6,1),(XCSWUS7,1),        *
               (XCSWCS0,1),(XCSWCS1,1),(XCSWCS2,1),(XCSWCS3,1),        *
               (XCSWCS4,1),(XCSWCS5,1),(XCSWCS6,1),(XCSWCS7,1),        *
               (XCSWCT,16)
         DSGEN (XECSW,32)
         DSGEN (XDEVT1,16),(XDEVT2,16)
         DSGEN (XCHID,8),(XCUA,24)
         DSGEN (XMPIN,32)
         ORG   XMPIN                                           @YL02021
         DSGEN (VCUA,16),(VLGSZ,16)                            @YL02021
         DSGEN (HARDWARE,32)
         DSGEN (LOGLNGTH,8),(FCHAN1,1,0,23)
         DSGEN (FCHAN2,1,0,31)
         DSGEN (FCHAN3,1,0,23),(FCHANGR,8)
         DSGEN (MCHRG00,1),(MCHRG01,1),(MCHRG02,1),(MCHRG03,1),        X
               (MCHRG04,1),(MCHRG05,1),(MCHRG06,1),(MCHRG07,1),        X
               (MCHRG08,1),(MCHRG09,1),(MCHRG10,1),(MCHRG11,1),        X
               (MCHRG12,1),(MCHRG13,1),(MCHRG14,1),(MCHRG15,1),        X
               (MCHRG16,1),(MCHRG17,1),(MCHRG18,1),(MCHRG19,1),        X
               (MCHRG20,1),(MCHRG21,1),(MCHRG22,1),(MCHRG23,1),        X
               (MCHRG24,1),(MCHRG25,1),(MCHRG26,1),(MCHRG27,1),        X
               (MCHRG28,1),(MCHRG29,1),(MCHRG30,1),(MCHRG31,1)
         DSGEN (MCHRGB00,1),(MCHRGB01,1),(MCHRGB02,1),(MCHRGB03,1),    X
               (MCHRGB04,1),(MCHRGB05,1),(MCHRGB06,1),(MCHRGB07,1),    X
               (MCHRGB08,1),(MCHRGB09,1),(MCHRGB10,1),(MCHRGB11,1),    X
               (MCHRGB12,1),(MCHRGB13,1),(MCHRGB14,1),(MCHRGB15,1),    X
               (MCHRGB16,1),(MCHRGB17,1),(MCHRGB18,1),(MCHRGB19,1),    X
               (MCHRGB20,1),(MCHRGB21,1),(MCHRGB22,1),(MCHRGB23,1),    X
               (MCHRGB24,1),(MCHRGB25,1),(MCHRGB26,1),(MCHRGB27,1),    X
               (MCHRGB28,1),(MCHRGB29,1),(MCHRGB30,1),(MCHRGB31,1)
         DSGEN (DRLKEY,8),(DRLADDR,24)
         DSGEN (DREG,32),(CREG,32),(MREG,32),(WREG,32)
         DSGEN (RETCNT0,4),(RETCNT1,4),(RETCNT2,16),(RETCNT3,8)
         DSGEN (RETREG,32,1,2),(RTREG3,1,0,31),(RTREG4,1,0,15)
         DSGEN (,1),(RTREG417,3),(RTREG420,3),(,2),(RTREG425,3),       C
               (RTREG428,3),(,1)
         DSGEN (CTRLWRD,32)
         DSGEN (SYSREG00,1),(SYSREG01,1),(SYSREG02,1),(SYSREG03,1),    X
               (SYSREG04,1),(SYSREG05,1),(SYSREG06,1),(SYSREG07,1),    X
               (SYSREG08,1),(SYSREG09,1),(SYSREG10,1),(SYSREG11,1),    X
               (SYSREG12,1),(SYSREG13,1),(SYSREG14,1),(SYSREG15,1),    X
               (SYSREG16,1),(SYSREG17,1),(SYSREG18,1),(SYSREG19,1),    X
               (SYSREG20,1),(SYSREG21,1),(SYSREG22,1),(SYSREG23,1),    X
               (SYSREG24,1),(SYSREG25,1),(SYSREG26,1),(SYSREG27,1),    X
               (SYSREG28,1),(SYSREG29,1),(SYSREG30,1),(SYSREG31,1)
         DSGEN (IREGKEY,8),(IREGADDR,24)
         DSGEN (UREGA1,2),(UREGA2,2),(UREGA3,4),(UREGA4,4),(UREGA5,4), X
               (UREGC1,8),(UREGC2,8)
         DSGEN (SPARES,32,0,4)                                 @YM2954P
         DSGEN (VCCHPR0,1,1,9),(VCCHPR,1,10,16)                @YM2954P
         DSGEN (VCCHPR1,16,EQU,VCCHPR01)                       @YM2954P
         DSGEN (VDUM,24),(VFLAG,8),(VNOPRO,16)                 @YM2954P
         DSGEN (VPROC01,16),(VCHST01,16),(VPROC02,16),(VCHST02,16),    X
               (VPROC03,16),(VCHST03,16),(VPROC04,16),(VCHST04,16),    X
               (VPROC05,16),(VCHST05,16),(VPROC06,16),(VCHST06,16),    X
               (VPROC07,16),(VCHST07,16),(VPROC08,16),(VCHST08,16),    X
               (VPROC09,16),(VCHST09,16),(VPROC10,16),(VCHST10,16),    X
               (VPROC11,16),(VCHST11,16),(VPROC12,16),(VCHST12,16),    X
               (VPROC13,16),(VCHST13,16),(VPROC14,16),(VCHST14,16),    X
               (VPROC15,16),(VCHST15,16),(VPROC16,16),(VCHST16,16)
         DSGEN (FACTLWRD,16,EQU,RTREG316),(FTI,8,EQU,FCHAN38)
         DSGEN (FCNTHI,8,EQU,FCHAN10),(FCNTLO,8,EQU,FCHAN18)
         DSGEN (FCHANGO,8,EQU,FCHAN316)
         DSGEN (GCCNT,4,EQU,FCHAN112),(GDCNT,2,EQU,FCHAN117)
       DSGEN (GBCNT,5,EQU,FCHAN119)
         DSGEN (POSINDIC,2,EQU,FCHAN230)
         EJECT
IFCEJ145 CSECT
         USING DSECT145,R2
         USING *,R9
         USING DSECT145,R2                                     @YL02021
ENTRYPTR DC    A(STARTER)
TABLNAME DC    CL8'IFCEJ145'
REG9     DC    F'0'
LP       DC    F'0'
R2       EQU   2
R4       EQU   4                                               @YM2954P
R7       EQU   7
R8       EQU   8
R9       EQU   9
R14      EQU   14
R15      EQU   15
***   LENGTH EQUATES
L1       EQU   1
L2       EQU   2                                               @YM2954P
L3       EQU   3                                               @YM2954P
L4       EQU   4                                               @YM2954P
H21     EQU    X'21'                                           @YL02021
H01      EQU   X'01'                                           @YL02021
L0       EQU   X'00'                                           @YL02021
L14      EQU   14                                              @YL02021
L15      EQU   15                                              @YM2954P
L16      EQU   16                                              @YM2954P
L17      EQU   17                                              @YL02021
L25      EQU   25                                              @YL02021
L27      EQU   27                                              @YM2954P
L46      EQU   46                                              @YM2954P
L47      EQU   47                                              @YM2954P
L72      EQU   72                                              @YM2954P
R3       EQU   3                                               @YL02021
R5       EQU   5                                               @YL02021
R6       EQU   6                                               @YL02021
         DS    0F
*                  *        THIS SECTION HANDLES IF IT IS A SHORT OR
*                        LONG RECORD
*
SIZEREC  STM   R5,R8,XSAVE             SAVE REGS               @YM2954P
         XC    NOPRO(4),NOPRO           CLEAR                  @YM2954P
         MVI   DUMPSIZE+L1,X'FC'        VS2 LONG REC SIZE      @YM2954P
         CLI   XKEY,H21                 VS2 RELEASE (MVM)      @YM2954P
         BE    CHKLONG                  YES                    @YM2954P
         MVI   DUMPSIZE+L1,X'B4'        VS1 LONG REC SIZE      @YM2954P
CHKLONG  CLI   LOGLNGTH,X'4C'           FULL LOG               @YM2954P
         BE    WHATTYPE                                        @YM4854P
         MVI   DUMPSIZE+L1,X'C4'        VS2 SHORT REC SIZE     @YM2954P
         CLI   XKEY,H21                 VS2 RELEASE (MVM)      @YM2954P
         BE    WHATTYPE                 YES                    @YM2954P
         MVI   DUMPSIZE+L1,X'7C'        VS1 SHORT REC SIZE     @YM2954P
WHATTYPE CLI   XCHID,X'0A'              IFA CHANNEL            @YM2954P
         BE    IFA                      YES                    @YM2954P
RENOPRT  LM    R5,R8,XSAVE              RESTORE REGS           @YM2954P
NOPRINT  SR    R15,R15                  BLANK LABEL            @YM2954P
         BR    R14                      RETURN                 @YM2954P
IFA      LA    R7,IFAENT-4        SET POINTERS FOR IFA PRINTOUT
         ST    R7,REG9
         LA    R7,IFALAB
         ST    R7,LP
         B     RENOPRT                  RETURN WITH NO PRINT   @YM2954P
ISITVS2  STM   R5,R8,XSAVE             SAVE REGS               @YL02021
ISVS2    LA    R5,VS2LIN-4             SET UP LINE PTR         @YL02021
         LA    R6,VS2LAB-1             SET UP LABEL PTR        @YL02021
         ST    R5,REG9                                         @YL02021
         ST    R6,LP                                           @YL02021
         SR    R15,R15                 ELIM. LABEL             @YL02021
         B     RETURN                                          @YL02021
VS2TEST2 STM   R5,R8,XSAVE             SAVE REGS               @YL02021
         CLI   XKEY,H21                IS IT VS2               @YL02021
         BNE   COMPL                    SET UP FOR DUMP AND RET
         MVC   LOGSIZA(L2),VLGSZ        GET LOG SIZE           @YM2954P
         LA    R5,HARDWARE              START OF LOG            YM5678P
         A     R5,LOGSIZE               ADD SIZE OF LOG
         LA    R6,VCCHPR1               START OF VS2 DATA
         LA    R7,L72                   LENGTH OF VS2 DATA-MAX @YM2954P
NXTBYT   IC    R8,L0(R7,R5)             MOVE DATA              @YM2954P
         STC   R8,L0(R7,R6)              BYTE BY BYTE          @YM2954P
         BCT   R7,NXTBYT                NEXT                   @YM2954P
         B     RETURN                                          @YM2954P
RETURN   LM    R5,R8,XSAVE                                     @YL02021
SKIPPER  BR    R14                                             @YL02021
PROC     STM   R5,R8,XSAVE             SAVE REGS               @YL02021
         SR    R5,R5                   CLEAR REG 5             @YL02021
         L     R5,NOPRO                PLACE THE NO. OF PROC. IN REG 5
         LA    R5,1(R5)                ADD ONE TO REG. 5       @YL02021
         ST    R5,NOPRO                PLACE BACK IN CORE      @YL02021
         CLC   VNOPRO(2),NOPRO+2       COMP. WITH ACTUAL NO. OF PROC.
         BL    COMPLETE                FINISHED                @YM2954P
         LR    R5,R3                                           @YM4854P
         LA    R6,L47                   ADJUST OFFSET          @YM2954P
         SR    R5,R6                                           @YL02021
         MVC   L0(L17,R5),MSGA                                 @YL02021
         MVC   L27(L16,R5),MSGB                                @YM2954P
PROCBIN  LH    R4,L0(R4)           FETCH DATA                  @YM2954P
         SLL   R4,L15                   POSITION DATA          @YM2954P
         LA    R6,L46              LENGTH OF LABEL             @YM2954P
         AR    R5,R6               SET UP POINTER              @YM2954P
         LA    R6,L16                   CHANGE COUNT           @YM2954P
TESTIT   SLL   R4,L1                    POSITION CHANNEL IND   @YM2954P
         LTR   R4,R4                    TEST FOR ON LINE       @YM2954P
         BNM   CHANACT                  BRANCH ON LINE         @YM2954P
PRINT    LA    R5,L3(R5)          UPDATE PRT POINTER           @YM2954P
         BCT   R6,TESTIT           NEXT CHANNEL                @YM2954P
         B     RETURN                                          @YM2954P
CHANACT  MVI   L0(R5),C'X'         MOVE X TO PRINT             @YM2954P
         B     PRINT                    NEXT CHANNEL           @YM2954P
COMPLETE LA    R5,HARDWARE              START OF LOG            YM5678P
         A     R5,LOGSIZE               ADD SIZE OF LOG
         LA    R6,VCCHPR1               START OF VS2 DATA
         LA    R7,L72                   LENGTH OF VS2 DATA-MAX @YM2954P
         SR    R4,R4                    CLEAR                  @YM4854P
NXTBYTE  IC    R8,L0(R4,R6)             MOVE DATA              @YM4854P
         STC   R8,L0(R4,R5)              BYTE BY BYTE          @YM4854P
         LA    R4,L1(R4)                UPDATE                 @YM4854P
         BCT   R7,NXTBYTE               NEXT                   @YM2954P
COMPL    LA    R5,DUMPCODE-L4           DUMP ADDRESS           @YM2954P
         ST    R5,REG9                  STORE IT FOR CONTROL   @YM2954P
         SR    R15,R15                                         @YL02021
         B     RETURN                                          @YL02021
NOPRO    DC    F'00'                                           @YL02021
MSGA     DC    C'PROCESSOR ADDRESS'                            @YL02021
MSGB     DC    C'CHANNELS ON LINE'                             @YM2954P
LOGSIZE  DC    F'0'                                            @YM2954P
LOGSIZA  EQU   LOGSIZE+2                                       @YM2954P
XSAVE    DC    5F'00'                                          @YL02021
         LTORG
STARTER  DS    0F
         DC    XL4'00010001'
         DC    XL4'00010001'
         DC    A(LABAREA)
         DC    H'0'
         LINE  ,,SKIP=1
         ROUTINE XCHID,SIZEREC
SELLAB   LABEL ''
SELENT   LINE  ,(40,1),SKIP=2
         LABEL 'SHIFTER CONTROL BITS'
         LINE  (17,30),(1,30)
         HEX   LOGLNGTH
         BIN   FCHAN11
         BIN   FCHAN18
         LABEL 'LOG LENGTH','BF6','BFR CTRL CHK'
         LINE  (47,30),(31,30),SKIP=1
         BIN   FCHAN12
         BIN   FCHAN19
         LABEL 'BF5','CTR THRU ZERO'
         LINE  ,(7,1)
         LABEL 'GDRL'
         LINE (17,30),(1,30)
         HEX   DRLKEY
         BIN   FCHAN13
         BIN   FCHAN110
         LABEL 'PROTECT KEY','BF4','CHN DATA REQ'
         LINE  (21,1)
         HEX   DRLADDR
         LABEL 'DATA ADDRESS'
         LINE  (47,30),(31,30),SKIP=2
         BIN   FCHAN14
         BIN   FCHAN111
         LABEL 'BF3','BFR PART'
         LINE
         BIN   FCHAN15
         BIN   GCCNT
         LABEL 'BF2','GCL COUNTER'
         LINE
         BIN   FCHAN16
         BIN   GDCNT
         LABEL 'BF1','GD COUNTER'
         LINE  (47,30),(31,30),SKIP=2
         BIN   FCHAN17
         BIN   GBCNT
         LABEL 'BF0','GB COUNTER'
         LINE  (17,30),(1,30)
         LABEL 'GF','CHAN STATUS','GS','GL'
         LINE  (17,30),(1,30),SKIP=1
         BIN   FCHAN20
         BIN   FCHAN28
         BIN   FCHAN216
         BIN   FCHAN224
         LABEL 'CD','PCI','CHNL LOADED','CNT RDY'
         LINE
         BIN   FCHAN21
         BIN   FCHAN29
         BIN   FCHAN217
         BIN   FCHAN225
         LABEL 'CC','IL','INTR LAT','CNT ZERO'
         LINE
         BIN   FCHAN22
         BIN   FCHAN210
         BIN   FCHAN218
         BIN   FCHAN226
         LABEL 'SLI','PROG CK','POLL CTRL','GR FULL'
         LINE
         BIN   FCHAN23
         BIN   FCHAN211
         BIN   FCHAN219
         BIN   FCHAN227
         LABEL 'SKIP','PROT CK','PRIME','INTR COND'
         LINE
         BIN   FCHAN24
         BIN   FCHAN212
         BIN   FCHAN220
         BIN   FCHAN228
         LABEL 'ALLOW HALT','DATA CK','DCC LATCH','SHARE ERROR'
         LINE
         BIN   FCHAN25
         BIN   FCHAN213
         BIN   FCHAN221
         BIN   POSINDIC
         LABEL 'IN FWD','CTRL CK','CMD RTY','POSITN INDIC'
         LINE
         BIN   FCHAN26
         BIN   FCHAN214
         BIN   FCHAN222
         LABEL 'IN BWD','INFC CK','GATE A'
         LINE  (17,30),(1,30),SKIP=2
         BIN   FCHAN27
         BIN   FCHAN215
         BIN   FCHAN223
         LABEL 'OUT','CHAIN CK','GATE B'
         LINE  (77,30),(1,30)
         HEX   FCHANGO
         HEX   FCHANGR
         LABEL 'TAGS OUT','TAGS IN','GO','GR'
         LINE  (17,30),(1,30),SKIP=1
         BIN   FCHAN30
         BIN   FCHAN38
         LABEL 'OP OUT','OP IN'
         LINE
         BIN   FCHAN31
         BIN   FCHAN39
         LABEL 'SEL OUT','ADR IN'
         LINE
         BIN   FCHAN32
         BIN   FCHAN310
         LABEL 'ADR OUT','STAT IN'
         LINE
         BIN   FCHAN33
         BIN   FCHAN311
         LABEL 'CMD OUT','SRV IN'
         LINE
         BIN   FCHAN34
         BIN   FCHAN312
         LABEL 'SRV OUT','SEL IN'
         LINE
         BIN   FCHAN35
         BIN   FCHAN313
         LABEL 'DATA OUT','DATA IN'
         LINE
         BIN   FCHAN36
         BIN   FCHAN314
         LABEL 'SUPR OUT','REQ IN'
         LINE  (47,1),(31,1),SKIP=2
         BIN   FCHAN315
         LABEL 'DISC IN'
         LINE  ,(1,30),SKIP=1
         LABEL 'GD','GC','GM','GW'
         LINE  (8,30),,SKIP=1
         HEX   DREG
         HEX   CREG
         HEX   MREG
         HEX   WREG
         LABEL     ''
         LINE  ,,SKIP=1                                        @YL02021
         ROUTINE   XCHID,ISITVS2                               @YL02021
         LABEL ''                                              @YL02021
         LINE  ,,SKIP=1
         ROUTINE XCHID,NOPRINT
IFALAB   LABEL ''
IFAENT   LINE  ,(41,28),SKIP=1
         LABEL 'FTI','FDR'
         LINE  (19,),(1,30),SKIP=1
         HEX   LOGLNGTH
         LABEL 'LOG LENGTH','CYLINDER ADDRESS REGISTER','FILE DATA REGIC
               STER'
         LINE  (42,27),(1,)
         HEX   FTI
         HEX   FCHANGR
         LABEL 'FILE COUNTER  HI  LO'
         LINE  (16,4),,SKIP=2
         HEX   FCNTHI
         HEX   FCNTLO
         LABEL ''
         LINE  ,(7,1),SKIP=1
         LABEL 'FDRL'
         LINE  (17,30),(1,30)
         HEX   DRLKEY
         LABEL 'PROTECT KEY'
         LINE  (21,1),,SKIP=2
         HEX   DRLADDR
         LABEL 'DATA ADDRESS'
         LINE  ,(1,30),SKIP=2
         LABEL 'FFL','FCS','FST','FGL'
         LINE  (20,30),(1,30),SKIP=1
         BIN   FCHAN20
         BIN   FCHAN28
         BIN   FCHAN216
         BIN   FCHAN224
         LABEL 'CD','PCI','CHANNEL BUSY','MAIN STOR CNT RDY'
         LINE
         BIN   FCHAN21
         BIN   FCHAN29
         BIN   FCHAN217
         BIN   FCHAN225
         LABEL 'CC','IL','INTRPT LATCH','CNT ZERO'
         LINE
         BIN   FCHAN22
         BIN   FCHAN210
         BIN   FCHAN218
         BIN   FCHAN226
         LABEL 'SLI','PROG CK','CU END','FDR FULL'
         LINE
         BIN   FCHAN23
         BIN   FCHAN211
         BIN   FCHAN219
         BIN   FCHAN227
         LABEL 'SKIP','PROT CK','CU BUSY','INTRPT COND'
         LINE
         BIN   FCHAN24
         BIN   FCHAN212
         BIN   FCHAN220
         BIN   FCHAN228
         LABEL 'SPARE','DATA CHK','BLK CE MODE','SHARE CYCLE ERROR'
         LINE
         BIN   FCHAN25
         BIN   FCHAN213
         BIN   FCHAN221
         BIN   FCHAN229
         LABEL 'INPUT','CTRL CHK','SPARE','RETRY CODE 0'
         LINE
         BIN   FCHAN26
         BIN   FCHAN214
         BIN   FCHAN222
         BIN   FCHAN230
         LABEL 'CNTL STORE CNT RDY','I/F CK-OVRUN','SPARE',            C
               'RETRY CODE 1'
         LINE  ,,SKIP=2
         BIN   FCHAN27
         BIN   FCHAN215
         BIN   FCHAN223
         BIN   FCHAN231
         LABEL 'OUTPUT','SPARE','SPARE','RETRY CODE 2'
         LINE
         LABEL 'FTO','FBO','FOP'
         LINE  ,,SKIP=1
         BIN   FCHAN30
         BIN   FCHAN316
         BIN   FCHAN116
         LABEL 'SET CYLINDER TAG','WRITE GATE','OP CODE (READ)'
         LINE
         BIN   FCHAN31
         BIN   FCHAN317
         BIN   FCHAN117
         LABEL 'SET HEAD TAG','READ GATE','OP CODE (WRITE)'
         LINE
         BIN   FCHAN32
         BIN   FCHAN318
         BIN   FCHAN118
         LABEL 'SET DIFF TAG','SEEK START','ADDRESS MARK'
         LINE
         BIN   FCHAN33
         BIN   FCHAN319
         BIN   FCHAN119
         LABEL 'CONTROL TAG','RST HEAD REG','SEARCH'
         LINE
         BIN   FCHAN34
         BIN   FCHAN320
         BIN   FCHAN120
         LABEL 'CUA LOAD','ERASE GATE','SCAN'
         LINE
         BIN   FCHAN35
         BIN   FCHAN321
         BIN   FCHAN121
         LABEL 'SPARE-A','SELECT HEAD','INDEX HOLD'
         LINE
         BIN   FCHAN36
         BIN   FCHAN322
         BIN   FCHAN122
         LABEL 'SPARE-B','RETURN TO 000','FORMAT'
         LINE  ,,SKIP=2
         BIN   FCHAN37
         BIN   FCHAN323
         BIN   FCHAN123
         LABEL 'SPARE-C','HEAD ADVANCE','SKIP'
         LINE  ,,SKIP=1
         LABEL 'FD','FC','FM','FW'
         LINE  (8,30),,SKIP=1
         HEX   DREG
         HEX   CREG
         HEX   MREG
         HEX   WREG
         LABEL ''
VS2LIN   LINE  ,,SKIP=1                                        @YM2954P
         ROUTINE XCHID,VS2TEST2                                @YM2954P
VS2LAB   LABEL ''                                              @YM2954P
         LINE  (30),(1),SKIP=2                                 @YM2954P
         HEX   VCCHPR1                                         @YM2954P
         LABEL 'CCH FOOTPRINTS'                                @YM2954P
         LINE  (50,1),(20,1),SKIP=1                            @YM2954P
         BIN   VCCHPR01                                        @YM2954P
         LABEL 'IOS GPRS SAVED'                                @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR02                                        @YM2954P
         LABEL 'UCB ADDRESS ZERO'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR03                                        @YM2954P
         LABEL 'ERPIB EXISTS'                                  @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR04                                        @YM2954P
         LABEL 'IGFCCHSI ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR05                                        @YM2954P
         LABEL 'IGFCCHII ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR06                                        @YM2954P
         LABEL 'IGFCCHFE ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR07                                        @YM2954P
         LABEL 'IGFC60 ENTERED'                                @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR08                                        @YM2954P
         LABEL 'IGFC70 ENTERED'                                @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR09                                        @YM2954P
         LABEL 'IGDC80 ENTERED'                                @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR10                                        @YM2954P
         LABEL 'IGFCIC ENTERED'                                @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR11                                        @YM2954P
         LABEL 'IGFCCHRD ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR12                                        @YM2954P
         LABEL 'IGFCCHMP ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR13                                        @YM2954P
         LABEL 'IGFCCHUC ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR14                                        @YM2954P
         LABEL 'IGFCCHAS ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR15                                        @YM2954P
         LABEL 'IGFCCHIO ENTERED'                              @YM2954P
         LINE  ,,SKIP=2                                        @YM2954P
         BIN   VCCHPR16                                        @YM2954P
         LABEL 'IGFCCHEX ENTERED'                              @YM2954P
         LINE  ,(30,30),SKIP=2                                 @YM2954P
         ROUTINE    XCHID,SKIPPER                              @YM2954P
         LABEL 'MULTIPROCESSING INFORMATION'                   @YM2954P
         LINE  ,(49,1),SKIP=1                                  @YM2954P
         LABEL '0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15'
         LINE  (25,25),(30,30),SKIP=1                          @YM2954P
         HEX   (VPROC01)                                       @YM2954P
         ROUTINE    VCHST01,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC02)                                       @YM2954P
         ROUTINE    VCHST02,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC03)                                       @YM2954P
         ROUTINE    VCHST03,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC04)                                       @YM2954P
         ROUTINE    VCHST04,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC05)                                       @YM2954P
         ROUTINE    VCHST05,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC06)                                       @YM2954P
         ROUTINE    VCHST06,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC07)                                       @YM2954P
         ROUTINE    VCHST07,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC08)                                       @YM2954P
         ROUTINE    VCHST08,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC09)                                       @YM2954P
         ROUTINE    VCHST09,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC10)                                       @YM2954P
         ROUTINE    VCHST10,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC11)                                       @YM2954P
         ROUTINE    VCHST11,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC12)                                       @YM2954P
         ROUTINE    VCHST12,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC13)                                       @YM2954P
         ROUTINE    VCHST13,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC14)                                       @YM2954P
         ROUTINE    VCHST14,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC15)                                       @YM2954P
         ROUTINE    VCHST15,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC16)                                       @YM2954P
         ROUTINE    VCHST16,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
DUMPCODE DC    X'FF'                                           @YM2954P
DUMPSIZE DC    X'00FC'                                         @YM2954P
         DC    X'0018'                                         @YM2954P
         DC    X'0000'                                         @YM2954P
LABAREA  EQU   *                                               @YM2954P
         LSTART ,                                              @YM2954P
         END   ENTRYPTR                                        @YM2954P
