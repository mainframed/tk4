         TITLE 'HMASMTM2-ICT MOD SECTION BUILD (INIT ENTRY FOR ++MAC)'
HMASMTM2 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMTM2  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  LA    @10,4095(,@12)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@10                                    0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(16),0(@01)                                 0001
*   CALL INITPROC;                  /*                               */
*                                                                  0211
         BAL   @14,INITPROC                                        0211
*   /*****************************************************************/
*   /*                                                               */
*   /* ATTEMPT TO LOCATE THE ELEMENT ENTRY FOR THE CURRENT ELEMENT ON*/
*   /* THE (A)CDS DATASET SO THAT DATA CAN BE RETRIEVED FROM THE     */
*   /* MEMBER.                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0212
*   CALL CDSPROC;                   /* CALL PROC TO DO LOCATE        */
         BAL   @14,CDSPROC                                         0212
*   IF TM2HIRC<STOPPTF              /* NO ERRORS                     */
*       &ELMCBPTR^=ZERO THEN        /* WAS AN ELEMENT MCB PTR PASSED?*/
*                                                                  0213
         CH    TM2HIRC,@CH00061                                    0213
         BNL   @RF00213                                            0213
         L     @05,@PC00001+12                                     0213
         ICM   @03,15,ELMCBPTR(@05)                                0213
         BZ    @RF00213                                            0213
*     /***************************************************************/
*     /*                                                             */
*     /* INITIALIZE THE ICT MODULE MAPPING FROM THE MCB PASSED FROM  */
*     /* THE CALLING MODULE                                          */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0214
*     CALL MCBPROC;                 /* CALL PROCEDURE TO FILL IN ICT
*                                      MOD ENTRY FIELDS FROM MCB     */
         BAL   @14,MCBPROC                                         0214
*   IF TM2HIRC<STOPPTF THEN         /* PREVIOUS PROCEDURE SUCCESSFUL?*/
*                                                                  0215
@RF00213 CH    TM2HIRC,@CH00061                                    0215
         BNL   @RF00215                                            0215
*     /***************************************************************/
*     /*                                                             */
*     /* CHECK FOR VALID DISTLIB DATA.                               */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0216
*     CALL DISTCHK;                 /* CALL PROCEDURE TO CHECK IF A
*                                      DLIB CONFLICT EXISTS          */
         BAL   @14,DISTCHK                                         0216
*   IF TM2HIRC<STOPPTF              /* PREVIOUS PROCEDURE SUCCESSFUL?*/
*       &CCAACCPT=ON THEN           /* AND ACCEPT FUNCTION           */
*                                                                  0217
@RF00215 CH    TM2HIRC,@CH00061                                    0217
         BNL   @RF00217                                            0217
         TM    CCAACCPT(CCAPTR),B'00100000'                        0217
         BNO   @RF00217                                            0217
*     /***************************************************************/
*     /*                                                             */
*     /* SPECIAL PROCESSING FOR THE ACCEPT FUNCTION.                 */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0218
*     CALL ACCPROC;                 /* CALL PROCEDURE TO CHECK IF A
*                                      DLIB SHOULD BE UPDATED WITH 0218
*                                      DLIB VALUE FROM THE MCB       */
         BAL   @14,ACCPROC                                         0218
*   IF TM2HIRC<STOPPTF              /* PREVIOUS PROCEDURE SUCCESSFUL?*/
*       &(CCAAPPLY=ON×CCARES=ON)    /* FUNCTION APPLY OR RESTORE     */
*       &ICTMDSTE(1)=OFF            /* NO DISTLIB CONFLICT?          */
*       &(ICTMSYSL(1)=BLANKS        /* SYSLIB NAME(S) NOT FOUND      */
*       ×MACFND=OFF                 /* CDS MAC ENTRY NOT FOUND       */
*       ×STOWMAC=ON)                /* CDS MAC ENTRY TO BE UPDATED   */
*     THEN                                                         0219
*                                                                  0219
@RF00217 CH    TM2HIRC,@CH00061                                    0219
         BNL   @RF00219                                            0219
         TM    CCAAPPLY(CCAPTR),B'01001000'                        0219
         BZ    @RF00219                                            0219
         L     @05,@PC00001+4                                      0219
         L     @05,ICMODPTR(,@05)                                  0219
         TM    ICTMDSTE(@05),B'00000100'                           0219
         BNZ   @RF00219                                            0219
         CLC   ICTMSYSL(8,@05),BLANKS                              0219
         BE    @RT00219                                            0219
         TM    STOWMAC,B'01000000'                                 0219
         BNZ   @RT00219                                            0219
         TM    MACFND,B'10000000'                                  0219
         BO    @RF00219                                            0219
@RT00219 DS    0H                                                  0220
*     /***************************************************************/
*     /*                                                             */
*     /* ADDITIONAL DATA FOR CDS ENTRIES MAY BE ADDED OR CDS ENTRIES */
*     /* CREATED. SYSLIB NAMES ARE DETERMINED.                       */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0220
*     CALL SYSCHK;                  /* CALL PROCEDURE TO CHECK IF ANY
*                                      CDS ENTRIES MUST BE CREATED OR
*                                      MODIFIED                      */
*                                                                  0220
         BAL   @14,SYSCHK                                          0220
*   /*****************************************************************/
*   /*                                                               */
*   /* SET FROMLIB (SYSUT1 FOR IEBUPDTE).                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0221
*   IF TM2HIRC<STOPPTF THEN         /* PREVIOUS PROCEDURE SUCCESSFUL?*/
@RF00219 CH    TM2HIRC,@CH00061                                    0221
         BNL   @RF00221                                            0221
*     CALL FMLIBCK;                 /*                               */
         BAL   @14,FMLIBCK                                         0222
*                                                                  0223
*/*   DETERMINE OUTPUT DATASET FOR UPDATES.                          */
*                                                                  0223
*   IF TM2HIRC<STOPPTF THEN         /*                               */
@RF00221 CH    TM2HIRC,@CH00061                                    0223
         BNL   @RF00223                                            0223
*     CALL TOLIBCK;                 /*                               */
         BAL   @14,TOLIBCK                                         0224
*   IF TM2HIRC<STOPPTF THEN         /* PREVIOUS PROCEDURE SUCCESSFUL?*/
*                                                                  0225
@RF00223 CH    TM2HIRC,@CH00061                                    0225
         BNL   @RF00225                                            0225
*     /***************************************************************/
*     /*                                                             */
*     /* INITIALIZE THE MODID LIST FOR THIS ELEMENT.                 */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0226
*     CALL MODIDCHK;                /* CALL PROCEDURE TO BUILD MODID
*                                      LIST OR CHAIN TO IF PRESENT   */
         BAL   @14,MODIDCHK                                        0226
*                                                                  0227
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD ICT MOD ENTRIES FOR MODS TO BE ASSEMBLED                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0227
*   IF TM2HIRC<STOPPTF              /* NO ERRORS                     */
*       &ICTMHASM(1)=ON             /* ASSEMBLIES FOUND FOR MACRO    */
*       &ICTMIDEL(1)=OFF            /* MACRO NOT BEING DELETED       */
*     THEN                                                         0227
@RF00225 CH    TM2HIRC,@CH00061                                    0227
         BNL   @RF00227                                            0227
         L     @05,@PC00001+4                                      0227
         L     @15,ICMODPTR(,@05)                                  0227
         TM    ICTMHASM(@15),B'01000000'                           0227
         BNO   @RF00227                                            0227
         TM    ICTMIDEL(@15),B'01000000'                           0227
         BNZ   @RF00227                                            0227
*     DO;                           /*                               */
*       CALL HMASMTM4(              /*                               */
*           TBLXPARM,               /* STD PARMS (WITH GTP)          */
*           ICMODPTR,               /* ICT MAC ENTRY ADDRESS         */
*           ICPTFPTR,               /* SYSMOD OWNING THE MAC         */
*           ELMCBPTR,               /* MCB FOR MAC                   */
*           GTPPTR);                /* GTP ADDRESS , ASSEM NAMES     */
         L     @15,@PC00001                                        0229
         ST    @15,@AL00001                                        0229
         ST    @05,@AL00001+4                                      0229
         L     @05,@PC00001+8                                      0229
         ST    @05,@AL00001+8                                      0229
         L     @05,@PC00001+12                                     0229
         ST    @05,@AL00001+12                                     0229
         LA    @05,GTPPTR                                          0229
         ST    @05,@AL00001+16                                     0229
         L     @15,@CV01859                                        0229
         LA    @01,@AL00001                                        0229
         BALR  @14,@15                                             0229
*       RFY                                                        0230
*         RTNCODE RSTD;             /*                               */
*       TM2HIRC=MAX(TM2HIRC,RTNCODE);/* ERROR CODE                   */
         CR    TM2HIRC,RTNCODE                                     0231
         BNL   *+6
         LR    TM2HIRC,RTNCODE                                     0231
*       RFY                                                        0232
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /*                               */
*                                                                  0233
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE ANY GTA AREAS GOTTEN.                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0234
*   CALL CLEANUP;                   /*                               */
*                                                                  0234
@RF00227 BAL   @14,CLEANUP                                         0234
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF HMASMTM2 PROCESSING. RETURN TO CALLER WITH HIGHEST     */
*   /* RETURN CODE ENCOUNTERED DURING PROCESSING.                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0235
*   RETURN CODE(TM2HIRC);           /* RETURN TO CALLER WITH MAX RC  */
         LR    @15,TM2HIRC                                         0235
         L     @13,4(,@13)                                         0235
         L     @14,12(,@13)                                        0235
         LM    @00,@12,20(@13)                                     0235
         BR    @14                                                 0235
*                                                                  0236
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE POINTERS SWITCHES ETC.                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0236
*INITPROC:                                                         0236
*   PROC;                           /*                               */
@EL00001 L     @13,4(,@13)                                         0236
@EF00001 DS    0H                                                  0236
@ER00001 LM    @14,@12,12(@13)                                     0236
         BR    @14                                                 0236
INITPROC STM   @14,@01,@SA00002                                    0236
         ST    @03,@SA00002+16                                     0236
         STM   @05,@12,@SA00002+20                                 0236
*   RFY                                                            0237
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0238
*     ICTMOD BASED(ICMODPTR);       /* BASE ON MOD PARAMETER PASSED  */
*   RFY                                                            0239
*     ICTPTF BASED(ICPTFPTR);       /* BASE ON SYSMOD PARAMETER    0239
*                                      PASSED                        */
*   RFY                                                            0240
*     MCBELEMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   RFY                                                            0241
*     MCBPTFMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   HMASMMGP=''B;                   /* AND MSG                       */
         XC    HMASMMGP(24),HMASMMGP                               0242
*   MGPPRINT=ON;                    /* ALL MSGS TO SMPOUT AND        */
*   MGPHLDS=ON;                     /* LOG                           */
         OI    MGPPRINT,B'10010000'                                0244
*   IOPPTR=CCAIOPTR;                /* SET UP BASE IOP ADDRESS       */
         L     IOPPTR,CCAIOPTR(,CCAPTR)                            0245
*   TM2HIRC=ZERO;                   /* INITIALIZE HIGHEST RC       0246
*                                      COLLECTOR                     */
         SLR   TM2HIRC,TM2HIRC                                     0246
*   TM2SWCH1=OFF;                   /* INITIALIZE LOCAL SWITCHES     */
         MVI   TM2SWCH1,B'00000000'                                0247
*   TM2SWCH2=OFF;                   /* INITIALIZE LOCAL SWITCHES     */
*                                                                  0248
         MVI   TM2SWCH2,B'00000000'                                0248
*   /*****************************************************************/
*   /*                                                               */
*   /* FILL IN ICT MOD VALUES FROM PTF ENTRY PASSED AND OTHER FIELDS */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0249
*   ICTPPTR(1)=ICPTFPTR;            /* PTR TO ICT PTF ENTRY          */
*                                                                  0249
         L     @05,@PC00001+4                                      0249
         L     @05,ICMODPTR(,@05)                                  0249
         L     @03,@PC00001+8                                      0249
         MVC   ICTPPTR(4,@05),ICPTFPTR(@03)                        0249
*   /*****************************************************************/
*   /*                                                               */
*   /* GTA PARM INITIALIZATION                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0250
*   GTPPTR=ADDR(ASMGTP);            /* ADDRESS OF GTP                */
         LA    @05,ASMGTP                                          0250
         ST    @05,GTPPTR                                          0250
*   HMASMGTP=''B;                   /* INIT FOR CALLS TO GTA         */
         XC    HMASMGTP(28,@05),HMASMGTP(@05)                      0251
*   GTPBUFAD=ADDR(ASSMLST);         /* INPUT TO GTA                  */
         LA    @03,ASSMLST                                         0252
         ST    @03,GTPBUFAD(,@05)                                  0252
*   GTPPSIZE=GTP512B;               /*                               */
         NI    GTPPSIZE(@05),B'11111001'                           0253
         OI    GTPPSIZE(@05),B'00000001'                           0253
*   GTPRCDLN=LENGTH(ASSMLST);       /* RECORD LENGTH                 */
         MVC   GTPRCDLN(2,@05),@CH00036                            0254
*   GTPKEYLN=LENGTH(ASSMNM);        /* KEY LENGTH                    */
         MVC   GTPKEYLN(2,@05),@CH00061                            0255
*   GTPFUNCT=GTPFREE;               /*                               */
         MVI   GTPFUNCT(@05),X'0A'                                 0256
*   CALL HMASMGTA(HMASMGTP);        /* INIT FILE                     */
         ST    @05,@AL00001                                        0257
         L     @15,@CV01858                                        0257
         LA    @01,@AL00001                                        0257
         BALR  @14,@15                                             0257
*   END INITPROC;                   /*                               */
@EL00002 DS    0H                                                  0258
@EF00002 DS    0H                                                  0258
@ER00002 LM    @14,@01,@SA00002                                    0258
         L     @03,@SA00002+16                                     0258
         LM    @05,@12,@SA00002+20                                 0258
         BR    @14                                                 0258
*CDSPROC:                                                          0259
*   PROC;                           /*                               */
CDSPROC  STM   @14,@03,@SA00003                                    0259
         STM   @05,@12,@SA00003+24                                 0259
*   RFY                                                            0260
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0261
*     ICTMOD BASED(ICMODPTR);       /* BASE ON MOD PARAMETER PASSED  */
*   RFY                                                            0262
*     ICTPTF BASED(ICPTFPTR);       /* BASE ON SYSMOD PARAMETER    0262
*                                      PASSED                        */
*   RFY                                                            0263
*     MCBELEMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   RFY                                                            0264
*     MCBPTFMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*                                                                  0264
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP PARAMETER LIST FOR CALL TO HMASMIO                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0265
*   IOPFUNCT=IOPLOC;                /* INDICATE LOCATE OPERATION     */
         MVI   IOPFUNCT(IOPPTR),X'03'                              0265
*   IOPTYPE=IOPMAC;                 /* INDICATE (A)CDS MAC ENTRY     */
         MVI   IOPTYPE(IOPPTR),X'03'                               0266
*   IOPNAME=ICTMNAME(1);            /* ELEMENT ENTRY BEING PROCESSED */
         L     @05,@PC00001+4                                      0267
         L     @05,ICMODPTR(,@05)                                  0267
         MVC   IOPNAME(8,IOPPTR),ICTMNAME(@05)                     0267
*   IOPDSID=TBLXCDSI;               /* PROPER DATASET FROM TBLX      */
         L     @05,@PC00001                                        0268
         MVC   IOPDSID(1,IOPPTR),TBLXCDSI(@05)                     0268
*   CALL HMASMIO(HMASMIOP);         /* CALL SMP IO INTERFACE MODULE  */
         ST    IOPPTR,@AL00001                                     0269
         L     @15,@CV01854                                        0269
         LA    @01,@AL00001                                        0269
         BALR  @14,@15                                             0269
*   IF IOPRETRN>IOPNOTFD THEN       /* SET ERROR CODE                */
         CLI   IOPRETRN(IOPPTR),4                                  0270
         BNH   @RF00270                                            0270
*     TM2HIRC=MAX(TM2HIRC,IOPRETRN);/*                               */
         SLR   @05,@05                                             0271
         IC    @05,IOPRETRN(,IOPPTR)                               0271
         CR    TM2HIRC,@05                                         0271
         BNL   *+6
         LR    TM2HIRC,@05                                         0271
*   IF IOPRETRN=IOPNOTFD            /* ENTRY STILL NOT FOUND/ADDED,  */
*       &CCAACCPT=ON                /* FUNCTION IS ACCEPT, AND A MCB */
*       &ELMCBPTR^=ZERO             /* WAS PASSED AS A PARAMETER,    */
*       &MCBEDIST^=BLANKS THEN      /* AND A DISTLIB VALUE ENTERED   */
*                                                                  0272
@RF00270 CLI   IOPRETRN(IOPPTR),4                                  0272
         BNE   @RF00272                                            0272
         TM    CCAACCPT(CCAPTR),B'00100000'                        0272
         BNO   @RF00272                                            0272
         L     @05,@PC00001+12                                     0272
         L     @05,ELMCBPTR(,@05)                                  0272
         LTR   @05,@05                                             0272
         BZ    @RF00272                                            0272
         CLC   MCBEDIST(8,@05),BLANKS                              0272
         BE    @RF00272                                            0272
*     /***************************************************************/
*     /*                                                             */
*     /* FOR A NOT FOUND MAC ENTRY AND THE FUNCTION IS ACCEPT, AND A */
*     /* MCB WAS INPUT AND A DISTLIB VALUE EXISTS IN THE MCB,        */
*     /* INDICATE THE NEED FOR A ACDS MOD ENTRY TO BE BUILT FOR THIS */
*     /* ELEMENT. IT WILL BE BUILT AFTER THE ICT ENTRY HAS BEEN BUILT*/
*     /* FROM THE INPUTS.                                            */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0273
*     BLDACDSM=ON;                  /* SET BIT TO BUILD ACDS MOD   0273
*                                      ENTRY                         */
         OI    BLDACDSM,B'00000100'                                0273
*   IF IOPRETRN=IOPGOOD THEN        /* WAS AN ENTRY WAS FOUND EITHER */
@RF00272 CLI   IOPRETRN(IOPPTR),0                                  0274
         BNE   @RF00274                                            0274
*     DO;                           /*                               */
*       IF IOPMCDLB^=BLANKS THEN    /* CHECK FOR DISTLIB IN IOP      */
         CLC   IOPMCDLB(8,IOPPTR),BLANKS                           0276
         BE    @RF00276                                            0276
*         DO;                       /*                               */
*           DLIBBIT=ON;             /* INDICATE'DLIB VALUE FOUND     */
         OI    DLIBBIT,B'10000000'                                 0278
*           ICTMDSTL(1)=IOPMCDLB;   /* SAVE DISTLIB                  */
         L     @05,@PC00001+4                                      0279
         L     @05,ICMODPTR(,@05)                                  0279
         MVC   ICTMDSTL(8,@05),IOPMCDLB(IOPPTR)                    0279
*         END;                      /*                               */
*       ICTMSYSL(1)=IOPMCSYS;       /* SAVE SYSLIB                   */
@RF00276 L     @05,@PC00001+4                                      0281
         L     @05,ICMODPTR(,@05)                                  0281
         MVC   ICTMSYSL(8,@05),IOPMCSYS(IOPPTR)                    0281
*       MACFND=ON;                  /* AND CDS ENTRY FOUND           */
*                                                                  0282
         OI    MACFND,B'10000000'                                  0282
*       /*************************************************************/
*       /*                                                           */
*       /* SAVE ASSEMBLY NAMES FROM CDS ENTRY                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0283
*       GTPFUNCT=GTPADD;            /* ADD FUNTION                   */
         L     @05,GTPPTR                                          0283
         MVI   GTPFUNCT(@05),X'04'                                 0283
*       DO S=1 BY 1 WHILE(IOPMACND(S)^=IOPEOLST);/*                  */
         LA    S,1                                                 0284
         B     @DE00284                                            0284
@DL00284 DS    0H                                                  0285
*         IF IOPMCTYP(S)=IOPMASMS THEN/* THIS IS ASSEM TYPE          */
         LR    @05,S                                               0285
         MH    @05,@CH00525                                        0285
         SLR   @15,@15                                             0285
         IC    @15,IOPMCTYP-9(@05,IOPPTR)                          0285
         CH    @15,@CH00069                                        0285
         BNE   @RF00285                                            0285
*           DO;                     /*                               */
*             ASSMNM=IOPMCASM(S);   /* NAME TO ADD TO GTA FILE       */
         ALR   @05,IOPPTR                                          0287
         MVC   ASSMNM(8),IOPMCASM-9(@05)                           0287
*             ASSM@=ZERO;           /* INIT ADDRESS AREA             */
         SLR   @05,@05                                             0288
         ST    @05,ASSM@                                           0288
*             CALL HMASMGTA(HMASMGTP);/* ALL PARMS PREVIOUSLY SET    */
         L     @05,GTPPTR                                          0289
         ST    @05,@AL00001                                        0289
         L     @15,@CV01858                                        0289
         LA    @01,@AL00001                                        0289
         BALR  @14,@15                                             0289
*             TM2HIRC=MAX(TM2HIRC,GTPRETRN);/* ERROR CODE            */
         L     @05,GTPPTR                                          0290
         SLR   @15,@15                                             0290
         IC    @15,GTPRETRN(,@05)                                  0290
         CR    TM2HIRC,@15                                         0290
         BNL   *+6
         LR    TM2HIRC,@15                                         0290
*             ICTMHASM(1)=ON;       /* INDICATE GTA USED FOR ASSEM   */
         L     @05,@PC00001+4                                      0291
         L     @05,ICMODPTR(,@05)                                  0291
         OI    ICTMHASM(@05),B'01000000'                           0291
*           END;                    /*                               */
*       END;                        /*                               */
@RF00285 AH    S,@CH00069                                          0293
@DE00284 LR    @05,S                                               0293
         MH    @05,@CH00525                                        0293
         SLR   @15,@15                                             0293
         IC    @15,IOPMACND-9(@05,IOPPTR)                          0293
         CH    @15,@CH00714                                        0293
         BNE   @DL00284                                            0293
*     END;                          /*                               */
*                                                                  0294
*   /*****************************************************************/
*   /*                                                               */
*   /* ALIAS NAMES INTO ICT                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0295
*   IF TM2HIRC=ZERO                 /* IF THE MCB IS NOT PRESENT     */
*       &ELMCBPTR=ZERO THEN         /* GET ALIAS NAMES NOW           */
@RF00274 SLR   @05,@05                                             0295
         CR    TM2HIRC,@05                                         0295
         BNE   @RF00295                                            0295
         L     @03,@PC00001+12                                     0295
         C     @05,ELMCBPTR(,@03)                                  0295
         BNE   @RF00295                                            0295
*     CALL ALASPROC;                /*                               */
         BAL   @14,ALASPROC                                        0296
*   END CDSPROC;                    /*                               */
@EL00003 DS    0H                                                  0297
@EF00003 DS    0H                                                  0297
@ER00003 LM    @14,@03,@SA00003                                    0297
         LM    @05,@12,@SA00003+24                                 0297
         BR    @14                                                 0297
*MCBPROC:                                                          0298
*   PROC;                           /*                               */
MCBPROC  STM   @14,@03,@SA00004                                    0298
         STM   @05,@12,@SA00004+24                                 0298
*   RFY                                                            0299
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0300
*     ICTMOD BASED(ICMODPTR);       /* BASE ON MOD PARAMETER PASSED  */
*   RFY                                                            0301
*     ICTPTF BASED(ICPTFPTR);       /* BASE ON SYSMOD PARAMETER    0301
*                                      PASSED                        */
*   RFY                                                            0302
*     MCBELEMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   RFY                                                            0303
*     MCBPTFMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*                                                                  0303
*   /*****************************************************************/
*   /*                                                               */
*   /* FILL IN ICT MOD VALUES FROM MCB ELEMENT PASSED                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0304
*   IF MCBMCRTP=ON THEN             /* MACRO REPLACEMENT             */
*     ICTMMACR(1)=ON;               /*                               */
*   IF MCBMCUTP=ON THEN             /* MACRO UPDATE                  */
*     ICTMMACU(1)=ON;               /*                               */
*                                                                  0307
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE ON ++MAC CONTROL STATEMENT                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0308
*   IF MCBEDEL=ON THEN              /* WAS DELETE ENTERED ON ++MAC?  */
         L     @05,@PC00001+12                                     0308
         L     @05,ELMCBPTR(,@05)                                  0308
         TM    MCBEDEL(@05),B'01000000'                            0308
         BNO   @RF00308                                            0308
*     ICTMIDEL(1)=ON;               /* YES- SET ON ICT DELETE FLAG   */
*                                                                  0309
         L     @05,@PC00001+4                                      0309
         L     @05,ICMODPTR(,@05)                                  0309
         OI    ICTMIDEL(@05),B'01000000'                           0309
*   /*****************************************************************/
*   /*                                                               */
*   /* DISTLIB ON ++MAC CONTROL STATEMENT                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0310
*   IF ICTMDSTL(1)=BLANKS           /* NOT ALREADY DETERMINED        */
*       &MCBEDIST^=BLANKS THEN      /* AND SPECIFIED ON ++           */
@RF00308 L     @05,@PC00001+4                                      0310
         L     @05,ICMODPTR(,@05)                                  0310
         CLC   ICTMDSTL(8,@05),BLANKS                              0310
         BNE   @RF00310                                            0310
         L     @03,@PC00001+12                                     0310
         L     @03,ELMCBPTR(,@03)                                  0310
         CLC   MCBEDIST(8,@03),BLANKS                              0310
         BE    @RF00310                                            0310
*     DO;                           /*                               */
*       ICTMDSTL(1)=MCBEDIST;       /* PICK UP MCB DISTLIB VALUE     */
         MVC   ICTMDSTL(8,@05),MCBEDIST(@03)                       0312
*       IF DLIBBIT=OFF              /* IF DISTLIB NOT KNOWN          */
*           ×MACFND=OFF THEN        /* OR NO MAC ENTRY NOW ONE CAN   */
         TM    DLIBBIT,B'10000000'                                 0313
         BZ    @RT00313                                            0313
         TM    MACFND,B'10000000'                                  0313
         BNZ   @RF00313                                            0313
@RT00313 DS    0H                                                  0314
*         STOWMAC=ON;               /* BE CREATED OR MODIFIED.       */
         OI    STOWMAC,B'01000000'                                 0314
*     END;                          /*                               */
*                                                                  0315
@RF00313 DS    0H                                                  0316
*   /*****************************************************************/
*   /*                                                               */
*   /* DISTOBJ FROM CONTROL STATEMENT                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0316
*   ICTMDOBJ(1)=MCBEDOBJ;           /*                               */
*                                                                  0316
@RF00310 L     @05,@PC00001+4                                      0316
         L     @05,ICMODPTR(,@05)                                  0316
         L     @03,@PC00001+12                                     0316
         L     @03,ELMCBPTR(,@03)                                  0316
         MVC   ICTMDOBJ(8,@05),MCBEDOBJ(@03)                       0316
*   /*****************************************************************/
*   /*                                                               */
*   /* ASMLIB FROM CONTROL STATEMENT                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0317
*   ICTMASLB(1)=MCBEASLB;           /*                               */
*                                                                  0317
         MVC   ICTMASLB(8,@05),MCBEASLB(@03)                       0317
*   /*****************************************************************/
*   /*                                                               */
*   /* SSI FROM CONTROL STATEMENT                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0318
*   ICTMSSI(1)=MCBESSI;             /*                               */
*                                                                  0318
         MVC   ICTMSSI(8,@05),MCBESSI(@03)                         0318
*   /*****************************************************************/
*   /*                                                               */
*   /* GET SYSLIB FROM MCB                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0319
*   IF ICTMSYSL(1)=BLANKS THEN      /* IF NOT FOUND YET              */
         CLC   ICTMSYSL(8,@05),BLANKS                              0319
         BNE   @RF00319                                            0319
*     ICTMSYSL(1)=MCBESYS;          /* GET FROM ++MAC SYSLIB KYWRD   */
*                                                                  0320
         MVC   ICTMSYSL(8,@05),MCBESYS(@03)                        0320
*   /*****************************************************************/
*   /*                                                               */
*   /* VERSION SUBENTRIES ON CONTROL STATEMENT                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0321
*   DO S=1 BY 1 WHILE MCBEND(S)^=IOPEOLST/* LOOP ON SUBENTRIES       */
*         &TM2HIRC<STOPPTF;         /* WHILE NO TERMINATING ERRORS   */
@RF00319 LA    S,1                                                 0321
         B     @DE00321                                            0321
@DL00321 DS    0H                                                  0322
*     IF MCBEIND(S)=MCBEVERS THEN   /* SUBENTRY A VERSION NUMBER?    */
         LR    @05,S                                               0322
         MH    @05,@CH00525                                        0322
         L     @15,@PC00001+12                                     0322
         L     @15,ELMCBPTR(,@15)                                  0322
         SLR   @14,@14                                             0322
         IC    @14,MCBEIND-9(@05,@15)                              0322
         CH    @14,@CH00069                                        0322
         BNE   @RF00322                                            0322
*       DO;                         /*                               */
*         CALL HMASMTAI(TBLXPARM,   /* PARAMETER FOR TABLE MODULES   */
*             ICTMVCHN(1),          /* CHAIN TO BE BUILT             */
*             ADDR(MCBEVLST(S)),    /* DATA TO BE CHAINED            */
*             LENGTH(ICTMVRLS(1))); /* DATA TO CHAIN LENGTH          */
         L     @14,@PC00001                                        0324
         ST    @14,@AL00001                                        0324
         L     @14,@PC00001+4                                      0324
         L     @01,ICMODPTR(,@14)                                  0324
         LA    @14,ICTMVCHN(,@01)                                  0324
         ST    @14,@AL00001+4                                      0324
         LA    @05,MCBEVLST-9(@05,@15)                             0324
         ST    @05,@TF00001                                        0324
         LA    @05,@TF00001                                        0324
         ST    @05,@AL00001+8                                      0324
         LA    @05,@CF00061                                        0324
         ST    @05,@AL00001+12                                     0324
         L     @15,@CV01857                                        0324
         LA    @01,@AL00001                                        0324
         BALR  @14,@15                                             0324
*         RFY                                                      0325
*           RTNCODE RSTD;           /* RESTRICT REG 15 USAGE         */
*         TM2HIRC=MAX(TM2HIRC,RTNCODE);/* NO- PICK UP HIGHEST RC     */
         CR    TM2HIRC,RTNCODE                                     0326
         BNL   *+6
         LR    TM2HIRC,RTNCODE                                     0326
*         RFY                                                      0327
*           RTNCODE UNRSTD;         /* RELEASE REG 15                */
*       END;                        /*                               */
*   END;                            /*                               */
*                                                                  0329
@RF00322 AH    S,@CH00069                                          0329
@DE00321 LR    @05,S                                               0329
         MH    @05,@CH00525                                        0329
         L     @15,@PC00001+12                                     0329
         L     @01,ELMCBPTR(,@15)                                  0329
         SLR   @00,@00                                             0329
         IC    @00,MCBEND-9(@05,@01)                               0329
         CH    @00,@CH00714                                        0329
         BE    @DC00321                                            0329
         CH    TM2HIRC,@CH00061                                    0329
         BL    @DL00321                                            0329
@DC00321 DS    0H                                                  0330
*   /*****************************************************************/
*   /*                                                               */
*   /* ALIAS NAMES ARE TAKEN FROM THE MCB. IF NO NAMES ARE PRESENT   */
*   /* THEN THE (A)CDS ELEMENT ENTRY IS USED AS THE SOURCE OF ALIAS  */
*   /* NAMES.                                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0330
*   CALL ALASPROC;                  /*                               */
*                                                                  0330
         BAL   @14,ALASPROC                                        0330
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS THE ASSEMBLY NAMES. PUT IN GTA FILE                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0331
*   DO S=1 BY 1 WHILE MCBEND(S)^=IOPEOLST/* LOOP ON SUBENTRIES       */
*         &TM2HIRC<STOPPTF;         /* WHILE NO TERMINATING ERRORS   */
         LA    S,1                                                 0331
         B     @DE00331                                            0331
@DL00331 DS    0H                                                  0332
*     IF MCBEIND(S)=MCBEASSM THEN   /*                               */
         LR    @05,S                                               0332
         MH    @05,@CH00525                                        0332
         L     @02,@PC00001+12                                     0332
         L     @02,ELMCBPTR(,@02)                                  0332
         SLR   @15,@15                                             0332
         IC    @15,MCBEIND-9(@05,@02)                              0332
         CH    @15,@CH00092                                        0332
         BNE   @RF00332                                            0332
*       DO;                         /*                               */
*         ICTMHASM(1)=ON;           /* ASSEMBLIES TO BE DONE         */
         L     @15,@PC00001+4                                      0334
         L     @01,ICMODPTR(,@15)                                  0334
         OI    ICTMHASM(@01),B'01000000'                           0334
*         GTPFUNCT=GTPADD;          /* ADD TO LIST                   */
         L     @15,GTPPTR                                          0335
         MVI   GTPFUNCT(@15),X'04'                                 0335
*         ASSMNM=MCBEVLST(S);       /* PICK UP NAME                  */
         ALR   @02,@05                                             0336
         MVC   ASSMNM(8),MCBEVLST-9(@02)                           0336
*         ASSM@=ZERO;               /* INIT ICT ENTRY ADDRESS        */
         SLR   @05,@05                                             0337
         ST    @05,ASSM@                                           0337
*         CALL HMASMGTA(HMASMGTP);  /* STICK INTO GTA FILE           */
         ST    @15,@AL00001                                        0338
         L     @15,@CV01858                                        0338
         LA    @01,@AL00001                                        0338
         BALR  @14,@15                                             0338
*         TM2HIRC=MAX(TM2HIRC,GTPRETRN);/* ERROR CODE                */
         L     @05,GTPPTR                                          0339
         SLR   @02,@02                                             0339
         IC    @02,GTPRETRN(,@05)                                  0339
         CR    TM2HIRC,@02                                         0339
         BNL   *+6
         LR    TM2HIRC,@02                                         0339
*       END;                        /*                               */
*   END;                            /*                               */
@RF00332 AH    S,@CH00069                                          0341
@DE00331 LR    @05,S                                               0341
         MH    @05,@CH00525                                        0341
         L     @02,@PC00001+12                                     0341
         L     @02,ELMCBPTR(,@02)                                  0341
         SLR   @15,@15                                             0341
         IC    @15,MCBEND-9(@05,@02)                               0341
         CH    @15,@CH00714                                        0341
         BE    @DC00331                                            0341
         CH    TM2HIRC,@CH00061                                    0341
         BL    @DL00331                                            0341
@DC00331 DS    0H                                                  0342
*   END MCBPROC;                    /*                               */
@EL00004 DS    0H                                                  0342
@EF00004 DS    0H                                                  0342
@ER00004 LM    @14,@03,@SA00004                                    0342
         LM    @05,@12,@SA00004+24                                 0342
         BR    @14                                                 0342
*ALASPROC:                                                         0343
*   PROC;                           /*                               */
*                                                                  0343
ALASPROC STM   @14,@03,@SA00005                                    0343
         STM   @05,@12,@SA00005+24                                 0343
*   /*****************************************************************/
*   /*                                                               */
*   /* ALIAS NAMES ARE INSERTER IN TO THE ICT. IF THE MCB IS PROSENT */
*   /* THEN THE IT IS SEARCHED FIRST. IF AFTER THE MCB SEARCH THERE  */
*   /* ARE NO NAMES THE THE IOP FROM THE LOCATED (A)CDS ELEMENT ENTRY*/
*   /* IS SEARCHEC.                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0344
*   IF ELMCBPTR^=ZERO THEN          /* IS THERE AN MCB ?             */
         L     @05,@PC00001+12                                     0344
         ICM   @03,15,ELMCBPTR(@05)                                0344
         BZ    @RF00344                                            0344
*     DO S=1 BY 1 WHILE MCBEND(S)^=IOPEOLST/* LOOP ON MCB SUBENTRIES */
*           &TM2HIRC<STOPPTF;       /* WHILE NO TERMINATING ERRORS   */
         LA    S,1                                                 0345
         B     @DE00345                                            0345
@DL00345 DS    0H                                                  0346
*       IF MCBEIND(S)=MCBEALIS THEN /* SUBENTRY A ALIAS NAME?        */
         LR    @05,S                                               0346
         MH    @05,@CH00525                                        0346
         L     @15,@PC00001+12                                     0346
         L     @15,ELMCBPTR(,@15)                                  0346
         SLR   @14,@14                                             0346
         IC    @14,MCBEIND-9(@05,@15)                              0346
         CH    @14,@CH00278                                        0346
         BNE   @RF00346                                            0346
*         DO;                       /*                               */
*           ICTMALIS(1)=ON;         /* ALIAS PRESENT                 */
         L     @14,@PC00001+4                                      0348
         L     @14,ICMODPTR(,@14)                                  0348
         OI    ICTMALIS(@14),B'00000100'                           0348
*           CALL HMASMTAI(TBLXPARM, /* PARAMETER FOR TABLE MODULES   */
*               ICTMTCHN(1),        /* CHAIN TO BE BUILT             */
*               ADDR(MCBEVLST(S)),  /* DATA TO BE CHAINED            */
*               LENGTH(ICTTALLS(1)));/* DATA TO CHAIN LENGTH         */
         L     @09,@PC00001                                        0349
         ST    @09,@AL00001                                        0349
         LA    @14,ICTMTCHN(,@14)                                  0349
         ST    @14,@AL00001+4                                      0349
         LA    @05,MCBEVLST-9(@05,@15)                             0349
         ST    @05,@TF00001                                        0349
         LA    @05,@TF00001                                        0349
         ST    @05,@AL00001+8                                      0349
         LA    @05,@CF00061                                        0349
         ST    @05,@AL00001+12                                     0349
         L     @15,@CV01857                                        0349
         LA    @01,@AL00001                                        0349
         BALR  @14,@15                                             0349
*           RFY                                                    0350
*             RTNCODE RSTD;         /* RESTRICT REG 15 USAGE         */
*           TM2HIRC=MAX(TM2HIRC,RTNCODE);/* NO- PICK UP HIGHEST RC   */
         CR    TM2HIRC,RTNCODE                                     0351
         BNL   *+6
         LR    TM2HIRC,RTNCODE                                     0351
*           RFY                                                    0352
*             RTNCODE UNRSTD;       /* RELEASE REG 15                */
*         END;                      /*                               */
*     END;                          /*                               */
*                                                                  0354
@RF00346 AH    S,@CH00069                                          0354
@DE00345 LR    @05,S                                               0354
         MH    @05,@CH00525                                        0354
         L     @15,@PC00001+12                                     0354
         L     @01,ELMCBPTR(,@15)                                  0354
         SLR   @00,@00                                             0354
         IC    @00,MCBEND-9(@05,@01)                               0354
         CH    @00,@CH00714                                        0354
         BE    @DC00345                                            0354
         CH    TM2HIRC,@CH00061                                    0354
         BL    @DL00345                                            0354
@DC00345 DS    0H                                                  0355
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK IF CDS MUST BE SEARCHED FOR ALLIAS NAMES.               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0355
*   IF MACFND=ON                    /* IF ELEMENT EXIST AND NO ALIAS */
*       &ICTMALIS(1)=OFF THEN       /* .. NAMES YET FOUND THEN TRY   */
@RF00344 TM    MACFND,B'10000000'                                  0355
         BNO   @RF00355                                            0355
         L     @05,@PC00001+4                                      0355
         L     @05,ICMODPTR(,@05)                                  0355
         TM    ICTMALIS(@05),B'00000100'                           0355
         BNZ   @RF00355                                            0355
*     DO S=1 BY 1 WHILE IOPMACND(S)^=IOPEOLST/* ... THE IOP.         */
*           &TM2HIRC<STOPPTF;       /*                               */
         LA    S,1                                                 0356
         B     @DE00356                                            0356
@DL00356 DS    0H                                                  0357
*       IF IOPMCTYP(S)=IOPMCMAL THEN/* ALIAS SUBENTRY ?              */
         LR    @05,S                                               0357
         MH    @05,@CH00525                                        0357
         SLR   @15,@15                                             0357
         IC    @15,IOPMCTYP-9(@05,IOPPTR)                          0357
         CH    @15,@CH00278                                        0357
         BNE   @RF00357                                            0357
*         DO;                       /*                               */
*           ICTMALIS(1)=ON;         /* ALIAS PRESENT INDICATOR       */
         L     @15,@PC00001+4                                      0359
         L     @15,ICMODPTR(,@15)                                  0359
         OI    ICTMALIS(@15),B'00000100'                           0359
*           CALL HMASMTAI(TBLXPARM, /* PARAMETER FOR TABLE MODULES   */
*               ICTMTCHN(1),        /* CHAIN TO BE BUILT             */
*               ADDR(IOPMCDTA(S)),  /* DATA TO BE CHAINED            */
*               LENGTH(ICTTALLS(1)));/* DATA TO CHAIN LENGTH         */
         L     @14,@PC00001                                        0360
         ST    @14,@AL00001                                        0360
         LA    @15,ICTMTCHN(,@15)                                  0360
         ST    @15,@AL00001+4                                      0360
         LA    @05,IOPMCDTA-9(@05,IOPPTR)                          0360
         ST    @05,@TF00001                                        0360
         LA    @05,@TF00001                                        0360
         ST    @05,@AL00001+8                                      0360
         LA    @05,@CF00061                                        0360
         ST    @05,@AL00001+12                                     0360
         L     @15,@CV01857                                        0360
         LA    @01,@AL00001                                        0360
         BALR  @14,@15                                             0360
*           RFY                                                    0361
*             RTNCODE RSTD;         /* RESTRICT REG 15 USAGE         */
*           TM2HIRC=MAX(TM2HIRC,RTNCODE);/* NO- PICK UP HIGHEST RC   */
         CR    TM2HIRC,RTNCODE                                     0362
         BNL   *+6
         LR    TM2HIRC,RTNCODE                                     0362
*           RFY                                                    0363
*             RTNCODE UNRSTD;       /* RELEASE REG 15                */
*         END;                      /*                               */
*     END;                          /*                               */
@RF00357 AH    S,@CH00069                                          0365
@DE00356 LR    @05,S                                               0365
         MH    @05,@CH00525                                        0365
         SLR   @15,@15                                             0365
         IC    @15,IOPMACND-9(@05,IOPPTR)                          0365
         CH    @15,@CH00714                                        0365
         BE    @DC00356                                            0365
         CH    TM2HIRC,@CH00061                                    0365
         BL    @DL00356                                            0365
@DC00356 DS    0H                                                  0366
*   END ALASPROC;                   /*                               */
@EL00005 DS    0H                                                  0366
@EF00005 DS    0H                                                  0366
@ER00005 LM    @14,@03,@SA00005                                    0366
         LM    @05,@12,@SA00005+24                                 0366
         BR    @14                                                 0366
*DISTCHK:                                                          0367
*   PROC;                           /*                               */
DISTCHK  STM   @14,@03,@SA00006                                    0367
         STM   @05,@12,@SA00006+24                                 0367
*   RFY                                                            0368
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0369
*     ICTMOD BASED(ICMODPTR);       /* BASE ON MOD PARAMETER PASSED  */
*   RFY                                                            0370
*     ICTPTF BASED(ICPTFPTR);       /* BASE ON SYSMOD PARAMETER    0370
*                                      PASSED                        */
*   RFY                                                            0371
*     MCBELEMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   RFY                                                            0372
*     MCBPTFMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*                                                                  0372
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR A DISTLIB VALUE FOUND. FOR ANY FUNCTION, IF ONE NOT */
*   /* FOUND THEN SEND ERROR MESSAGE HMA431I (INSUFFICIENT INFOR-    */
*   /* MATION AVAILABLE FOR SYSMOD PROCESSING) AND SET THE RETURN    */
*   /* CODE TO STOPPTF (RC=8).                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0373
*   IF ICTMDSTL(1)=BLANKS THEN      /* HAS A DISTLIB VALUE BEEN FOUND*/
         L     @05,@PC00001+4                                      0373
         L     @05,ICMODPTR(,@05)                                  0373
         CLC   ICTMDSTL(8,@05),BLANKS                              0373
         BNE   @RF00373                                            0373
*     DO;                           /* NO- THEN SEND ERROR MESSAGE   */
*       ICTMCPL(1)=ON;              /* SET COMPLETE BIT ON           */
*       ICTMNOGO(1)=ON;             /* SET NOGO BIT ON               */
*       ICTMPROC(1)=ON;             /* SET INPROCESS                 */
*       ICTMMSG(1)=ON;              /* SET MESSAGE SENT BIT ON       */
*                                                                  0378
         OI    ICTMCPL(@05),B'11110000'                            0378
*       /*************************************************************/
*       /*                                                           */
*       /* GENERATE ERROR MSG HMA431                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0379
*       ETYPE='MAC     ';           /* TYPE INTO MSG 431             */
         MVC   ETYPE(8),@CC01956                                   0379
*       MGPCLEAR=MGPCLEAR&&MGPCLEAR;/* ZERO FIELD                    */
         XC    MGPCLEAR(6),MGPCLEAR                                0380
*       MGPTYPE=MGPERR;             /* SET FOR RETURN CODE=8         */
         MVI   MGPTYPE,X'03'                                       0381
*       MGPMGNO1=HMA431I;           /* INSUFFICIENT INFORMATION MSG  */
         MVC   MGPMGNO1(2),@CH01861                                0382
*       MGPVARPT(1)=ADDR(ETYPE);    /* MAC TYPE                      */
         LA    @03,ETYPE                                           0383
         ST    @03,MGPVARPT                                        0383
*       MGPVARPT(2)=ADDR(ICTMNAME(1));/* MAC NAME                    */
         ST    @05,MGPVARPT+4                                      0384
*       MGPVARPT(3)=ADDR(ICTPTFS(1));/* SYSMOD NUMBER                */
         L     @05,@PC00001+8                                      0385
         L     @05,ICPTFPTR(,@05)                                  0385
         ST    @05,MGPVARPT+8                                      0385
*       CALL HMASMMSG(HMASMMGP);    /* SEND ERROR MESSAGE            */
*                                                                  0386
         L     @15,@CV01855                                        0386
         LA    @01,@AL00386                                        0386
         BALR  @14,@15                                             0386
*       /*************************************************************/
*       /*                                                           */
*       /* SET RETURN CODE TO STOPPTF (RC=8)                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0387
*       TM2HIRC=MAX(TM2HIRC,STOPPTF);/*                              */
         LA    @05,8                                               0387
         CR    TM2HIRC,@05                                         0387
         BNL   *+6
         LR    TM2HIRC,@05                                         0387
*     END;                          /*                               */
*                                                                  0389
*   /*****************************************************************/
*   /*                                                               */
*   /* IF A DLIB VALUE WAS FOUND ON THE CDS, AND APPLY FUNCTION IS   */
*   /* BEING EXECUTED, AND A MCB WAS PASSED, AND MCB DISTLIB VALUE   */
*   /* WAS ENTERED, THEN COMPARE THE CDS DISTLIB AND THE MCB DISTLIB */
*   /* VALUES. IF DIFFERENT DLIB VALUES ARE FOUND, THEN BLANK OUT THE*/
*   /* ICTMOD ENTRY AND SET THE DISTLIB CONFLICT BIT (ICTMDSTE) ON.  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0389
*   IF DLIBBIT=ON                   /* WAS A DLIB VALUE FOUND, AND   */
*       &CCAAPPLY=ON                /* IS THE FUNCTION APPLY, AND    */
*       &ELMCBPTR^=ZERO             /* WAS A MCB PASSED, AND         */
*       &MCBEDIST^=BLANKS           /* MCB DISTLIB WAS ENTERED, AND  */
*       &MCBEDIST^=IOPMCDLB THEN    /* MCB DISTLIB ^= IOPMCDLB?      */
@RF00373 TM    DLIBBIT,B'10000000'                                 0389
         BNO   @RF00389                                            0389
         TM    CCAAPPLY(CCAPTR),B'01000000'                        0389
         BNO   @RF00389                                            0389
         L     @05,@PC00001+12                                     0389
         L     @05,ELMCBPTR(,@05)                                  0389
         LTR   @05,@05                                             0389
         BZ    @RF00389                                            0389
         CLC   MCBEDIST(8,@05),BLANKS                              0389
         BE    @RF00389                                            0389
         CLC   MCBEDIST(8,@05),IOPMCDLB(IOPPTR)                    0389
         BE    @RF00389                                            0389
*     DO;                           /*                               */
*       ICTMDSTL(1)=BLANKS;         /* BLANK OUT THE ICT DISTLIB     */
         L     @05,@PC00001+4                                      0391
         L     @05,ICMODPTR(,@05)                                  0391
         MVC   ICTMDSTL(8,@05),BLANKS                              0391
*       ICTMDSTE(1)=ON;             /* INDICATE A DLIB CONFLICT      */
         OI    ICTMDSTE(@05),B'00000100'                           0392
*     END;                          /*                               */
*   END DISTCHK;                    /*                               */
@EL00006 DS    0H                                                  0394
@EF00006 DS    0H                                                  0394
@ER00006 LM    @14,@03,@SA00006                                    0394
         LM    @05,@12,@SA00006+24                                 0394
         BR    @14                                                 0394
*ACCPROC:                                                          0395
*   PROC;                           /*                               */
ACCPROC  STM   @14,@03,@SA00007                                    0395
         STM   @05,@12,@SA00007+24                                 0395
*   RFY                                                            0396
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0397
*     ICTMOD BASED(ICMODPTR);       /* BASE ON MOD PARAMETER PASSED  */
*   RFY                                                            0398
*     ICTPTF BASED(ICPTFPTR);       /* BASE ON SYSMOD PARAMETER    0398
*                                      PASSED                        */
*   RFY                                                            0399
*     MCBELEMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   RFY                                                            0400
*     MCBPTFMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*                                                                  0400
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ACCEPT FUNCTION, AND A DLIB VALUE WAS FOUND IN THE ACDS,   */
*   /* AND A MCB WAS PASSED, AND THE VALUES ARE DIFFERENT, THEN CHECK*/
*   /* 1) IF NOAPPLY WAS NOT SPECIFIED 2) IF SYSMOD OWNING THE       */
*   /* ELEMENT IS APPLIED ON THE CDS 3) IF THE SYSMOD OWNING THE     */
*   /* ELEMENT APPEARS AS AN FMID,RMID OR UMID VALUE IN THE ELEMENT  */
*   /* CDS ENTRY 4) IF THE CDS ENTRY DISTLIB VALUE IS THE SAME AS THE*/
*   /* VALUE IN THE MCB. IF ALL CHECKS (1-4) ARE TRUE THEN THE ICT,  */
*   /* AND ACDS ELEMENT VALUES ARE SET TO THE MCB VALUE, OTHERWISE   */
*   /* THE DLIB CONFLICT BIT (ICTMDSTE)IS SET ON.                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0401
*   IF DLIBBIT=ON                   /* WAS A DLIB VALUE FOUND, AND   */
*       &ELMCBPTR^=ZERO             /* WAS A MCB PASSED, AND         */
*       &MCBEDIST^=BLANKS           /* VALID                         */
*       &MCBEDIST^=IOPMCDLB THEN    /* ARE MCB & IOP DLIB VALUES ^=? */
         TM    DLIBBIT,B'10000000'                                 0401
         BNO   @RF00401                                            0401
         L     @05,@PC00001+12                                     0401
         L     @05,ELMCBPTR(,@05)                                  0401
         LTR   @05,@05                                             0401
         BZ    @RF00401                                            0401
         CLC   MCBEDIST(8,@05),BLANKS                              0401
         BE    @RF00401                                            0401
         CLC   MCBEDIST(8,@05),IOPMCDLB(IOPPTR)                    0401
         BE    @RF00401                                            0401
*     DO;                           /*                               */
*                                                                  0402
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE IF CHECK 1 IS SUCCESSFULL                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0403
*       IF TBLNOAPP=OFF THEN        /* NOAPPLY NOT SPECIFIED?        */
         L     @05,@PC00001                                        0403
         L     @05,TBLXTBL(,@05)                                   0403
         TM    TBLNOAPP(@05),B'10000000'                           0403
         BNZ   @RF00403                                            0403
*         DO;                       /*                               */
*           SAVADLIB=IOPMCDLB;      /* SAVE ACDS DLIB VALUE          */
         MVC   SAVADLIB(8),IOPMCDLB(IOPPTR)                        0405
*           IOPFUNCT=IOPLOC;        /* SET UP TO LOCATE OWNER        */
         MVI   IOPFUNCT(IOPPTR),X'03'                              0406
*           IOPDSID=IOPCDS;         /* SET DATASET TO CDS            */
         MVI   IOPDSID(IOPPTR),X'02'                               0407
*           IOPTYPE=IOPSMD;         /* SYSMOD TYPE ENTRY             */
         MVI   IOPTYPE(IOPPTR),X'0B'                               0408
*           IOPNAME=ICTPTFS(1);     /* OWNER OF ELEMENT              */
*                                                                  0409
         MVI   IOPNAME+7(IOPPTR),C' '                              0409
         L     @05,@PC00001+8                                      0409
         L     @05,ICPTFPTR(,@05)                                  0409
         MVC   IOPNAME(7,IOPPTR),ICTPTFS(@05)                      0409
*           /*********************************************************/
*           /*                                                       */
*           /* LOCATE SYSMOD ON CDS DATASET                          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0410
*           CALL HMASMIO(HMASMIOP); /* CALL SMP IO INTERFACE MODULE  */
         ST    IOPPTR,@AL00001                                     0410
         L     @15,@CV01854                                        0410
         LA    @01,@AL00001                                        0410
         BALR  @14,@15                                             0410
*           IF IOPRETRN=IOPGOOD THEN/* IS OWNER APPLIED ON CDS?      */
         CLI   IOPRETRN(IOPPTR),0                                  0411
         BNE   @RF00411                                            0411
*             DO;                   /*                               */
*               SMDAPPLY=ON;        /* INDICATE SYSMOD IS APPLIED    */
         OI    SMDAPPLY,B'01000000'                                0413
*               IOPTYPE=IOPMAC;     /* INDICATE MOD TYPE ENTRY       */
         MVI   IOPTYPE(IOPPTR),X'03'                               0414
*               IOPFUNCT=IOPLOC;    /* LOCATE ELEMENT ON CDS         */
         MVI   IOPFUNCT(IOPPTR),X'03'                              0415
*               IOPNAME=ICTMNAME(1);/* FILL IN ELEMENT NAME          */
         L     @05,@PC00001+4                                      0416
         L     @05,ICMODPTR(,@05)                                  0416
         MVC   IOPNAME(8,IOPPTR),ICTMNAME(@05)                     0416
*                                                                  0417
*               /*****************************************************/
*               /*                                                   */
*               /* LOCATE MAC ENTRY ON CDS DATASET                   */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0417
*               CALL HMASMIO(HMASMIOP);/* CALL SMP IO INTERFACE    0417
*                                      MODULE                        */
         ST    IOPPTR,@AL00001                                     0417
         L     @15,@CV01854                                        0417
         LA    @01,@AL00001                                        0417
         BALR  @14,@15                                             0417
*               IF IOPRETRN=IOPGOOD THEN/* IS ELEMENT ALSO ON CDS?   */
*                                                                  0418
         CLI   IOPRETRN(IOPPTR),0                                  0418
         BNE   @RF00418                                            0418
*                 /***************************************************/
*                 /*                                                 */
*                 /* CHECK IF SYSMOD OWNING ELEMENT IS FMID/RMID/UMID*/
*                 /* IN ENTRY                                        */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0419
*                 DO;               /*                               */
*                   IF IOPFMID=ICTPTFS(1)/* DOES FMID MATCH OWNER, OR*/
*                       ×IOPRMID=ICTPTFS(1) THEN/* DOES RMID MATCH 0420
*                                      OWNER?                        */
         L     @05,@PC00001+8                                      0420
         L     @05,ICPTFPTR(,@05)                                  0420
         CLC   IOPFMID(7,IOPPTR),ICTPTFS(@05)                      0420
         BE    @RT00420                                            0420
         CLC   IOPRMID(7,IOPPTR),ICTPTFS(@05)                      0420
         BNE   @RF00420                                            0420
@RT00420 DS    0H                                                  0421
*                     XMID=ON;      /* INDICATE RMID/FMID MATCH      */
         OI    XMID,B'00100000'                                    0421
*                   ELSE                                           0422
*                     DO L=1 BY 1 WHILE IOPMODND(L)^=IOPEOLST/* TO 0422
*                                      EOF,                          */
*                           &XMID=OFF;/* OR TILL HIT FOUND           */
         B     @RC00420                                            0422
@RF00420 LA    L,1                                                 0422
         B     @DE00422                                            0422
@DL00422 DS    0H                                                  0423
*                       IF IOPMODID(L)=ICTPTFS(1) THEN/* UMID MATCH? */
         LR    @05,L                                               0423
         MH    @05,@CH00525                                        0423
         L     @15,@PC00001+8                                      0423
         L     @01,ICPTFPTR(,@15)                                  0423
         ALR   @05,IOPPTR                                          0423
         CLC   IOPMODID-9(7,@05),ICTPTFS(@01)                      0423
         BNE   @RF00423                                            0423
*                         XMID=ON;  /* INDICATE UMID MATCH           */
         OI    XMID,B'00100000'                                    0424
*                     END;          /*                               */
@RF00423 AH    L,@CH00069                                          0425
@DE00422 LR    @05,L                                               0425
         MH    @05,@CH00525                                        0425
         SLR   @15,@15                                             0425
         IC    @15,IOPMODND-9(@05,IOPPTR)                          0425
         CH    @15,@CH00714                                        0425
         BE    @DC00422                                            0425
         TM    XMID,B'00100000'                                    0425
         BZ    @DL00422                                            0425
@DC00422 DS    0H                                                  0426
*                 END;              /*                               */
@RC00420 DS    0H                                                  0427
*             END;                  /*                               */
*                                                                  0427
@RF00418 DS    0H                                                  0428
*           /*********************************************************/
*           /*                                                       */
*           /* DETERMINE IF CHECKS (2-4) ARE SUCCESSFULL             */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0428
*           IF IOPRETRN=IOPGOOD     /* NO ERRORS FROM HMASMIO        */
*               &SMDAPPLY=ON        /* OWNER SYSMOD IS APPLIED       */
*               &XMID=ON            /* EITHER FMID/RMID/UMID MATCH   */
*               &IOPMCDLB=MCBEDIST THEN/* CDS DLIB MATCHES MCB DLIB  */
@RF00411 CLI   IOPRETRN(IOPPTR),0                                  0428
         BNE   @RF00428                                            0428
         TM    SMDAPPLY,B'01100000'                                0428
         BNO   @RF00428                                            0428
         L     @05,@PC00001+12                                     0428
         L     @05,ELMCBPTR(,@05)                                  0428
         CLC   IOPMCDLB(8,IOPPTR),MCBEDIST(@05)                    0428
         BNE   @RF00428                                            0428
*             DO;                   /*                               */
*                                                                  0429
*               /*****************************************************/
*               /*                                                   */
*               /* UPDATE ELEMENT ENTRY IN ACDS DLIB = CDS AND MCB   */
*               /* DLIB VALUES AND MAKE ICT DLIB VALUE EQUAL TO MCB  */
*               /* DLIB VALUE                                        */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0430
*               ICTMDSTL(1)=MCBEDIST;/* SET ICT VALUE = MCB VALUE    */
         L     @03,@PC00001+4                                      0430
         L     @03,ICMODPTR(,@03)                                  0430
         MVC   ICTMDSTL(8,@03),MCBEDIST(@05)                       0430
*               IOPFUNCT=IOPLOC;    /* LOCATE FUNCTION               */
         MVI   IOPFUNCT(IOPPTR),X'03'                              0431
*               IOPDSID=IOPACDS;    /* ACDS DATASET                  */
         MVI   IOPDSID(IOPPTR),X'0C'                               0432
*               IOPNAME=ICTMNAME(1);/* ELEMENT NAME                  */
         MVC   IOPNAME(8,IOPPTR),ICTMNAME(@03)                     0433
*               IOPTYPE=IOPMAC;     /* MAC TYPE ENTRY                */
*                                                                  0434
         MVI   IOPTYPE(IOPPTR),X'03'                               0434
*               /*****************************************************/
*               /*                                                   */
*               /* RE LOCATE ACDS MAC ENTRY TO BUFFER FOR UPDATE     */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0435
*               CALL HMASMIO(HMASMIOP);/* CALL SMP IO INTERFACE    0435
*                                      MODULE                        */
         ST    IOPPTR,@AL00001                                     0435
         L     @15,@CV01854                                        0435
         LA    @01,@AL00001                                        0435
         BALR  @14,@15                                             0435
*               IF IOPRETRN=IOPGOOD THEN/* ELEMENT MOD ENTRY FOUND?  */
         CLI   IOPRETRN(IOPPTR),0                                  0436
         BNE   @RF00436                                            0436
*                 DO;               /*                               */
*                   SAVADLIB=MCBEDIST;/* UPDATE TO MCB DISTLIB VALUE */
         L     @05,@PC00001+12                                     0438
         L     @05,ELMCBPTR(,@05)                                  0438
         MVC   SAVADLIB(8),MCBEDIST(@05)                           0438
*                   IOPMCDLB=MCBEDIST;/* UPDATE TO CDS/MCB DISTLIB   */
         MVC   IOPMCDLB(8,IOPPTR),MCBEDIST(@05)                    0439
*                   IOPBUSMD=ICTPTFS(1);/* SYSMOD CAUSING STOW       */
         L     @05,@PC00001+8                                      0440
         L     @05,ICPTFPTR(,@05)                                  0440
         MVC   IOPBUSMD(7,IOPPTR),ICTPTFS(@05)                     0440
*                   IOPBUTYP=IOPBUMOD;/* MODIFY                      */
         MVI   IOPBUTYP(IOPPTR),X'03'                              0441
*                   IOPFUNCT=IOPSTOWR;/* INDICATE STOW REPLACE       */
*                                                                  0442
         MVI   IOPFUNCT(IOPPTR),X'54'                              0442
*                   /*************************************************/
*                   /*                                               */
*                   /* REPLACE WITH UPDATED DLIB VALUE FROM MCB      */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0443
*                   CALL HMASMIO(HMASMIOP);/* CALL IO INTERFACE    0443
*                                      MODULE                        */
         ST    IOPPTR,@AL00001                                     0443
         L     @15,@CV01854                                        0443
         LA    @01,@AL00001                                        0443
         BALR  @14,@15                                             0443
*                 END;              /*                               */
*             END;                  /*                               */
*           ELSE                                                   0446
*             ICTMDSTE(1)=ON;       /* SET ON DLIB CONFLICT BIT      */
         B     @RC00428                                            0446
@RF00428 L     @05,@PC00001+4                                      0446
         L     @05,ICMODPTR(,@05)                                  0446
         OI    ICTMDSTE(@05),B'00000100'                           0446
*           IOPMCDLB=SAVADLIB;      /* RESTORE DLIB VALUE IF CHANGED */
@RC00428 MVC   IOPMCDLB(8,IOPPTR),SAVADLIB                         0447
*         END;                      /*                               */
*       ELSE                                                       0449
*         ICTMDSTE(1)=ON;           /* SET ON DLIB CONFLICT BIT      */
         B     @RC00403                                            0449
@RF00403 L     @05,@PC00001+4                                      0449
         L     @05,ICMODPTR(,@05)                                  0449
         OI    ICTMDSTE(@05),B'00000100'                           0449
*     END;                          /*                               */
@RC00403 DS    0H                                                  0451
*   IF IOPRETRN>IOPNOTFD THEN       /* IF ERROR SET CODE             */
@RF00401 CLI   IOPRETRN(IOPPTR),4                                  0451
         BNH   @RF00451                                            0451
*     TM2HIRC=MAX(TM2HIRC,IOPRETRN);/* SET RC                        */
         SLR   @05,@05                                             0452
         IC    @05,IOPRETRN(,IOPPTR)                               0452
         CR    TM2HIRC,@05                                         0452
         BNL   *+6
         LR    TM2HIRC,@05                                         0452
*   IF TM2HIRC<STOPPTF              /* PREVIOUS PROCESSING OK, AND A */
*       &BLDACDSM=ON THEN           /* ACDS MOD ENTRY MUST BE BUILT  */
@RF00451 CH    TM2HIRC,@CH00061                                    0453
         BNL   @RF00453                                            0453
         TM    BLDACDSM,B'00000100'                                0453
         BNO   @RF00453                                            0453
*     DO;                           /* BUILD AND ADD A MOD ENTRY     */
*                                                                  0454
*       /*************************************************************/
*       /*                                                           */
*       /* IF NO ACDS MAC ENTRY WAS FOUND, THEN CREATE A ACDS MAC    */
*       /* ENTRY FOR THIS ELEMENT                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0455
*       IOPMACNT=''B;               /* INIT MAC ENTRY                */
         XC    IOPMACNT(104,IOPPTR),IOPMACNT(IOPPTR)               0455
*       IOPMACFX=BLANKS;            /* FIXED RECORD INIT             */
         MVI   IOPMACFX+8(IOPPTR),C' '                             0456
         MVC   IOPMACFX+9(71,IOPPTR),IOPMACFX+8(IOPPTR)            0456
         MVC   IOPMACFX(8,IOPPTR),BLANKS                           0456
*       IOPNAME=ICTMNAME(1);        /* MOD ENTRY NAME TO ADD         */
         L     @05,@PC00001+4                                      0457
         L     @05,ICMODPTR(,@05)                                  0457
         MVC   IOPNAME(8,IOPPTR),ICTMNAME(@05)                     0457
*       IOPTYPE=IOPMAC;             /* MAC TYPE ENTRY                */
         MVI   IOPTYPE(IOPPTR),X'03'                               0458
*       IOPMCLNG=IOPMCASI;          /* LANGUAGE TYPE                 */
         MVI   IOPMCLNG(IOPPTR),X'00'                              0459
*       IOPNTLVL=IOPMODLC;          /* CURENT LEVEL                  */
         MVI   IOPNTLVL(IOPPTR),X'02'                              0460
*       IOPRMID=NULLPTF#;           /* RMID VALUE ==> NEW ELEMENT    */
         MVC   IOPRMID(7,IOPPTR),@CC01873                          0461
*       IOPFMID=NULLPTF#;           /* FMID VALUE ==> NEW ELEMENT    */
         MVC   IOPFMID(7,IOPPTR),@CC01873                          0462
*       IOPBUSMD=ICTPTFS(1);        /* SYSMOD CAUSING STOW           */
         L     @05,@PC00001+8                                      0463
         L     @05,ICPTFPTR(,@05)                                  0463
         MVC   IOPBUSMD(7,IOPPTR),ICTPTFS(@05)                     0463
*       IOPBUTYP=IOPBUADD;          /* ADD ENTRY                     */
         MVI   IOPBUTYP(IOPPTR),X'01'                              0464
*       IOPMCDLB=MCBEDIST;          /* DISTRIBUTION LIB FROM MCB     */
         L     @05,@PC00001+12                                     0465
         L     @05,ELMCBPTR(,@05)                                  0465
         MVC   IOPMCDLB(8,IOPPTR),MCBEDIST(@05)                    0465
*       IOPMACND(1)=IOPEOLST;       /* SET END OF LIST MARKER        */
         MVI   IOPMACND(IOPPTR),X'FF'                              0466
*       IOPFUNCT=IOPSTOWR;          /* INDICATE STOW REPLACE FUNCTION*/
*                                                                  0467
         MVI   IOPFUNCT(IOPPTR),X'54'                              0467
*       /*************************************************************/
*       /*                                                           */
*       /* ADD NEW MOD ENTRY TO THE CDS FOR THIS ELEMENT             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0468
*       CALL HMASMIO(HMASMIOP);     /* CALL SMP IO INTERFACE MODULE  */
         ST    IOPPTR,@AL00001                                     0468
         L     @15,@CV01854                                        0468
         LA    @01,@AL00001                                        0468
         BALR  @14,@15                                             0468
*       TM2HIRC=MAX(TM2HIRC,IOPRETRN);/* PICK UP HIGHEST RC          */
         SLR   @05,@05                                             0469
         IC    @05,IOPRETRN(,IOPPTR)                               0469
         CR    TM2HIRC,@05                                         0469
         BNL   *+6
         LR    TM2HIRC,@05                                         0469
*     END;                          /*                               */
*   END ACCPROC;                    /*                               */
@EL00007 DS    0H                                                  0471
@EF00007 DS    0H                                                  0471
@ER00007 LM    @14,@03,@SA00007                                    0471
         LM    @05,@12,@SA00007+24                                 0471
         BR    @14                                                 0471
*SYSCHK:                                                           0472
*   PROC;                           /*                               */
SYSCHK   STM   @14,@03,@SA00008                                    0472
         STM   @05,@12,@SA00008+24                                 0472
*   RFY                                                            0473
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0474
*     ICTMOD BASED(ICMODPTR);       /* ADDRESS MOD SECT ENTRY PASSED */
*   RFY                                                            0475
*     ICTPTF BASED(ICPTFPTR);       /* ADDRESS PTF SECT ENTRY PASSED */
*   RFY                                                            0476
*     MCBELEMP BASED(ELMCBPTR);     /* ADDRESS MCB PASSED            */
*   RFY                                                            0477
*     MCBPTFMP BASED(ELMCBPTR);     /* ADDRESS MCB PASSED            */
*   IF ICTMSYSL(1)=BLANKS           /* SYSLIB NOT YET DETERMINED     */
*     THEN                                                         0478
         L     @05,@PC00001+4                                      0478
         L     @05,ICMODPTR(,@05)                                  0478
         CLC   ICTMSYSL(8,@05),BLANKS                              0478
         BNE   @RF00478                                            0478
*     DO;                                                          0479
*                                                                  0479
*       /*************************************************************/
*       /*                                                           */
*       /* MACRO'S SYSLIB NOT YET DETERMINED ... DETERMINE IF THIS   */
*       /* ELEMENT'S DISTLIB IS A TOTALLY COPIED LIBRARY (I.E., A CDS*/
*       /* DLIB ENTRY EXISTS).                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0480
*       RFY                                                        0480
*         HMASMIOP BASED(TBLXIOP2); /* IOP FOR DLIB PROCESSING       */
*       IOPFUNCT=IOPLOC;            /* SET FUNCTION TO LOCATE        */
         L     @03,@PC00001                                        0481
         L     @03,TBLXIOP2(,@03)                                  0481
         MVI   IOPFUNCT(@03),X'03'                                 0481
*       IOPTYPE=IOPDLB;             /* INDICATE DLIB ENTRY           */
         MVI   IOPTYPE(@03),X'06'                                  0482
*       IOPNAME=ICTMDSTL(1);        /* DISTLIB ENTRY NAME            */
         MVC   IOPNAME(8,@03),ICTMDSTL(@05)                        0483
*       IOPDSID=IOPCDSM;            /*                               */
         MVI   IOPDSID(@03),X'02'                                  0484
*       CALL HMASMIO(HMASMIOP);     /* CALL SMP IO INTERFACE MODULE  */
         ST    @03,@AL00001                                        0485
         L     @15,@CV01854                                        0485
         LA    @01,@AL00001                                        0485
         BALR  @14,@15                                             0485
*       IF IOPRETRN=IOPGOOD THEN    /* TOTAL COPY DLIB (IE.-FOUND)   */
*                                                                  0486
         L     @05,@PC00001                                        0486
         L     @05,TBLXIOP2(,@05)                                  0486
         CLI   IOPRETRN(@05),0                                     0486
         BNE   @RF00486                                            0486
*         /***********************************************************/
*         /*                                                         */
*         /* OBTAIN TARGET SYSLIB FOR MACRO FROM CDS DLIB ENTRY      */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0487
*         DO L=1 BY 1 WHILE IOPDLBND(L)^=IOPEOLST;/* DO TO END OF  0487
*                                      LIST                          */
         LA    L,1                                                 0487
         B     @DE00487                                            0487
@DL00487 DS    0H                                                  0488
*           IF IOPDLIND(L)=IOPDLSYS THEN/* SYSLIB TYPE ENTRY?        */
         LR    @05,L                                               0488
         MH    @05,@CH00525                                        0488
         L     @15,@PC00001                                        0488
         L     @15,TBLXIOP2(,@15)                                  0488
         SLR   @14,@14                                             0488
         IC    @14,IOPDLIND-9(@05,@15)                             0488
         CH    @14,@CH00069                                        0488
         BNE   @RF00488                                            0488
*             DO;                   /*                               */
*               STOWMAC=ON;         /* STOW ENTRY WITH SYSLIBS       */
         OI    STOWMAC,B'01000000'                                 0490
*               ICTMSYSL(1)=IOPDSYS(L);/* SAVE SYSLIB                */
         L     @14,@PC00001+4                                      0491
         L     @01,ICMODPTR(,@14)                                  0491
         ALR   @15,@05                                             0491
         MVC   ICTMSYSL(8,@01),IOPDSYS-9(@15)                      0491
*             END;                  /*                               */
*         END;                      /*                               */
@RF00488 AH    L,@CH00069                                          0493
@DE00487 LR    @05,L                                               0493
         MH    @05,@CH00525                                        0493
         L     @15,@PC00001                                        0493
         L     @01,TBLXIOP2(,@15)                                  0493
         SLR   @00,@00                                             0493
         IC    @00,IOPDLBND-9(@05,@01)                             0493
         CH    @00,@CH00714                                        0493
         BNE   @DL00487                                            0493
*       IF IOPRETRN>IOPNTFND THEN   /* IF ERROR                      */
@RF00486 L     @05,@PC00001                                        0494
         L     @05,TBLXIOP2(,@05)                                  0494
         CLI   IOPRETRN(@05),4                                     0494
         BNH   @RF00494                                            0494
*         TM2HIRC=MAX(TM2HIRC,IOPRETRN);/* SET CODE                  */
         SLR   @03,@03                                             0495
         IC    @03,IOPRETRN(,@05)                                  0495
         CR    TM2HIRC,@03                                         0495
         BNL   *+6
         LR    TM2HIRC,@03                                         0495
*     END;                          /* SYSLIB DETERMINATION          */
@RF00494 DS    0H                                                  0497
*   IF STOWMAC=ON                   /* ENTRY TO BE CREATED/UPDATED   */
*       &TM2HIRC<STOPPTF            /* PTF IS NOT BEING TERMINATED   */
*     THEN                                                         0497
@RF00478 TM    STOWMAC,B'01000000'                                 0497
         BNO   @RF00497                                            0497
         CH    TM2HIRC,@CH00061                                    0497
         BNL   @RF00497                                            0497
*     DO;                                                          0498
*                                                                  0498
*       /*************************************************************/
*       /*                                                           */
*       /* CREATE/UPDATE THE CDS MAC ENTRY                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0499
*       RFY                                                        0499
*         HMASMIOP BASED(IOPPTR);   /* MAC IOP                       */
*       IOPBUTYP=IOPBUMOD;          /* MODIFY THE ENTRY              */
         MVI   IOPBUTYP(IOPPTR),X'03'                              0500
*       IF MACFND=OFF THEN          /* NO CDS ENTRY                  */
         TM    MACFND,B'10000000'                                  0501
         BNZ   @RF00501                                            0501
*         DO;                       /* SETUP TO CREATE NEW ONE       */
*                                                                  0502
*           /*********************************************************/
*           /*                                                       */
*           /* INITIALIZE FIELDS FOR A NEW ENTRY                     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0503
*           IOPMACNT=''B;           /* INIT MAC ENTRY                */
         XC    IOPMACNT(104,IOPPTR),IOPMACNT(IOPPTR)               0503
*           IOPMACFX=BLANKS;        /* INIT FIXED FIELD              */
         MVI   IOPMACFX+8(IOPPTR),C' '                             0504
         MVC   IOPMACFX+9(71,IOPPTR),IOPMACFX+8(IOPPTR)            0504
         MVC   IOPMACFX(8,IOPPTR),BLANKS                           0504
*           IOPMCLNG=IOPMCASI;      /* LANGUAGE TYPE                 */
         MVI   IOPMCLNG(IOPPTR),X'00'                              0505
*           IOPNTLVL=IOPMACLC;      /* CURENT LEVEL                  */
         MVI   IOPNTLVL(IOPPTR),X'03'                              0506
*           IOPRMID=NULLPTF#;       /* RMID VALUE ==> NEW ELEMENT    */
         MVC   IOPRMID(7,IOPPTR),@CC01873                          0507
*           IOPFMID=NULLPTF#;       /* FMID VALUE ==> NEW ELEMENT    */
         MVC   IOPFMID(7,IOPPTR),@CC01873                          0508
*           IOPBUTYP=IOPBUADD;      /* ADD THE ENTRY                 */
         MVI   IOPBUTYP(IOPPTR),X'01'                              0509
*           IOPMACND(1)=IOPEOLST;   /* VARIABLE LIST NULL            */
         MVI   IOPMACND(IOPPTR),X'FF'                              0510
*         END;                                                     0511
*                                                                  0511
*       /*************************************************************/
*       /*                                                           */
*       /* SET FIELDS COMMON TO BOTH A NEW AND AN EXISTING ENTRY     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0512
*       IOPMCSYS=ICTMSYSL(1);       /* SYSLIB VALUE                  */
@RF00501 L     @05,@PC00001+4                                      0512
         L     @05,ICMODPTR(,@05)                                  0512
         MVC   IOPMCSYS(8,IOPPTR),ICTMSYSL(@05)                    0512
*       IF DLIBBIT=OFF THEN         /* NEED DISTLIB NAME             */
         TM    DLIBBIT,B'10000000'                                 0513
         BNZ   @RF00513                                            0513
*         IOPMCDLB=ICTMDSTL(1);     /* DISTRIBUTION LIB FROM ICT     */
         MVC   IOPMCDLB(8,IOPPTR),ICTMDSTL(@05)                    0514
*       IOPFUNCT=IOPSTOWR;          /* INDICATE STOW REPLACE FUNCTION*/
@RF00513 MVI   IOPFUNCT(IOPPTR),X'54'                              0515
*       IOPTYPE=IOPMAC;             /* INDICATE MOD ENTRY            */
         MVI   IOPTYPE(IOPPTR),X'03'                               0516
*       IOPNAME=ICTMNAME(1);        /* MOD NAME BEING PROCESSED      */
         L     @05,@PC00001+4                                      0517
         L     @05,ICMODPTR(,@05)                                  0517
         MVC   IOPNAME(8,IOPPTR),ICTMNAME(@05)                     0517
*       IOPBUSMD=ICTPTFS(1);        /* SYSMOD CAUSING STOW           */
         L     @05,@PC00001+8                                      0518
         L     @05,ICPTFPTR(,@05)                                  0518
         MVC   IOPBUSMD(7,IOPPTR),ICTPTFS(@05)                     0518
*       IOPDSID=IOPCDSM;            /*                               */
         MVI   IOPDSID(IOPPTR),X'02'                               0519
*       CALL HMASMIO(HMASMIOP);     /* CALL SMP IO INTERFACE MODULE  */
         ST    IOPPTR,@AL00001                                     0520
         L     @15,@CV01854                                        0520
         LA    @01,@AL00001                                        0520
         BALR  @14,@15                                             0520
*       TM2HIRC=MAX(TM2HIRC,IOPRETRN);/* SET CODE                    */
         SLR   @05,@05                                             0521
         IC    @05,IOPRETRN(,IOPPTR)                               0521
         CR    TM2HIRC,@05                                         0521
         BNL   *+6
         LR    TM2HIRC,@05                                         0521
*     END;                                                         0522
*   RETURN;                                                        0523
@EL00008 DS    0H                                                  0523
@EF00008 DS    0H                                                  0523
@ER00008 LM    @14,@03,@SA00008                                    0523
         LM    @05,@12,@SA00008+24                                 0523
         BR    @14                                                 0523
*   END SYSCHK;                     /*                               */
         B     @EL00008                                            0524
*                                                                  0525
*   /*****************************************************************/
*   /*                                                               */
*   /* FROM LIB DETERMINATION                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0525
*FMLIBCK:                                                          0525
*   PROC;                           /*                               */
FMLIBCK  STM   @14,@03,@SA00009                                    0525
         STM   @05,@12,@SA00009+24                                 0525
*   RFY                                                            0526
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0527
*     ICTMOD BASED(ICMODPTR);       /* BASE ON MOD PARAMETER PASSED  */
*   RFY                                                            0528
*     ICTPTF BASED(ICPTFPTR);       /* BASE ON SYSMOD PARAMETER    0528
*                                      PASSED                        */
*   RFY                                                            0529
*     MCBELEMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   RFY                                                            0530
*     MCBPTFMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*                                                                  0530
*   /*****************************************************************/
*   /*                                                               */
*   /* MACRO REPLACENTS                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0531
*   IF ICTMMACR(1)=ON THEN          /* PROCESS REPLACEMENTS FIRST    */
         L     @05,@PC00001+4                                      0531
         L     @05,ICMODPTR(,@05)                                  0531
         TM    ICTMMACR(@05),B'00001000'                           0531
         BNO   @RF00531                                            0531
*     DO;                           /*                               */
*                                                                  0532
*       /*************************************************************/
*       /*                                                           */
*       /* APPLY / ACCEPT PROCESSING FOR REPLACEMENTS.               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0533
*       IF CCAAPPLY=ON              /* IS FUNCTION APPLY OR ACCEPT?  */
*           ×CCAACCPT=ON THEN       /*                               */
         TM    CCAAPPLY(CCAPTR),B'01100000'                        0533
         BZ    @RF00533                                            0533
*         DO;                       /*                               */
*           IF MCBETXLB^=BLANKS THEN/* WAS TXLIB ENTERED ON ++MAC?   */
         L     @03,@PC00001+12                                     0535
         L     @03,ELMCBPTR(,@03)                                  0535
         CLC   MCBETXLB(8,@03),BLANKS                              0535
         BE    @RF00535                                            0535
*             DO;                   /*                               */
*               ICTFMLIB(1)=MCBETXLB;/* YES- SET FROMLIB TO MCBETXLB */
         MVC   ICTFMLIB(8,@05),MCBETXLB(@03)                       0537
*               ICTLIBTX(1)=ON;     /* INDICATE TXLIB                */
         OI    ICTLIBTX(@05),B'01000000'                           0538
*             END;                  /*                               */
*           ELSE                                                   0540
*             IF MCBERLF^=BLANKS(1:4) THEN/* RELFILE ENTERED ON    0540
*                                      ++MAC?                        */
         B     @RC00535                                            0540
@RF00535 L     @05,@PC00001+12                                     0540
         L     @05,ELMCBPTR(,@05)                                  0540
         CLC   MCBERLF(4,@05),BLANKS                               0540
         BE    @RF00540                                            0540
*               DO;                 /* YES- PROCESS FOR RELFILE      */
*                 ICTMRELF(1)=ON;   /* SET BIT TO INDICATE RELF      */
         L     @05,@PC00001+4                                      0542
         L     @05,ICMODPTR(,@05)                                  0542
         OI    ICTMRELF(@05),B'00100000'                           0542
*                 ICTFMLIB(1)=SMPTLIB;/* SET FROMLIB TO SMPTLIB      */
*                                                                  0543
         MVC   ICTFMLIB(8,@05),@CC01865                            0543
*                 /***************************************************/
*                 /*                                                 */
*                 /* CONVERT RELFILE TO HEX AND MOVE INTO ICTMRELN(1)*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0544
*                 RADJ=CZEROS;      /* INIT WORKAREA TO RECEIVE RIGHT
*                                      ADJUSTED RELFILE NUMBER       */
         MVC   RADJ(8),@CC01871                                    0544
*                 S=LENGTH(RADJ);   /* INDEX SET TO RIGHT HAND BYTE  */
         LA    S,8                                                 0545
*                 DO T=LENGTH(MCBERLF) TO 1 BY-1;/* MOVE THROUGH   0546
*                                      MCBERLF FROM RIGHT TO LEFT    */
         LA    T,4                                                 0546
@DL00546 DS    0H                                                  0547
*                   IF MCBERLF(T)^=' ' THEN/* IGNORE BLANKS IN FIELD */
         L     @15,@PC00001+12                                     0547
         L     @15,ELMCBPTR(,@15)                                  0547
         LR    @14,@15                                             0547
         ALR   @14,T                                               0547
         CLI   MCBERLF-1(@14),C' '                                 0547
         BE    @RF00547                                            0547
*                     DO;           /*                               */
*                       RADJ(S)=MCBERLF(T);/* PUT CHAR IN WORKAREA   */
         LA    @01,RADJ-1(S)                                       0549
         ALR   @15,T                                               0549
         MVC   0(1,@01),MCBERLF-1(@15)                             0549
*                       S=S-1;      /* MOVE INDEX 1 TO LEFT          */
         BCTR  S,0                                                 0550
*                     END;          /*                               */
*                 END;              /*                               */
@RF00547 BCTR  T,0                                                 0552
         CH    T,@CH00069                                          0552
         BNL   @DL00546                                            0552
*                 PACK(PKDEC,RADJ); /* CONVERT CHAR TO PACKED DECIMAL*/
         PACK  PKDEC(8),RADJ(8)                                    0553
*                 CVB(FIX31,PKDEC); /* CONVERT PACKED DECIMAL->BINARY*/
         CVB   FIX31,PKDEC                                         0554
*                 ICTMRELN(1)=FIX31;/* SET CURRENT ELEMENT RELFILE#  */
         L     @05,@PC00001+4                                      0555
         L     @05,ICMODPTR(,@05)                                  0555
         STH   FIX31,ICTMRELN(,@05)                                0555
*               END;                /*                               */
*             ELSE                                                 0557
*               ICTFMLIB(1)=SMPWRK1;/* YES- SET FROMLIB TO SMPWRK1   */
         B     @RC00540                                            0557
@RF00540 L     @05,@PC00001+4                                      0557
         L     @05,ICMODPTR(,@05)                                  0557
         MVC   ICTFMLIB(8,@05),@CC01867                            0557
*         END;                      /*                               */
*                                                                  0558
@RC00540 DS    0H                                                  0558
@RC00535 DS    0H                                                  0559
*       /*************************************************************/
*       /*                                                           */
*       /* FROMLIB AT RESTORE FOR REPLACEMENT                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0559
*       IF CCARES=ON THEN           /*                               */
@RF00533 TM    CCARES(CCAPTR),B'00001000'                          0559
         BNO   @RF00559                                            0559
*         ICTFMLIB(1)=ICTMDSTL(1);  /* FROMLIB IS THE DLIB           */
*                                                                  0560
         L     @05,@PC00001+4                                      0560
         L     @05,ICMODPTR(,@05)                                  0560
         MVC   ICTFMLIB(8,@05),ICTMDSTL(@05)                       0560
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE IF IEBCOPY SHOULD BE USED FOR MODIFICATION      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0561
*       ICTMCOPY(1)=ON;             /* DEFAULT TO COPY               */
@RF00559 L     @05,@PC00001+4                                      0561
         L     @05,ICMODPTR(,@05)                                  0561
         OI    ICTMCOPY(@05),B'01000000'                           0561
*       IF(ICTMALIS(1)=ON           /* DONT COPY IF ALIAS AND        */
*           &(ICTLIBTX(1)=ON        /* COMING FROM TXLIB             */
*           ×ICTFMLIB(1)=SMPWRK1))  /* OR PTFIN                      */
*           ×                       /* OR                            */
*           (ICTMSSI(1)^=BLANKS     /* OR SSI SPECIFIED ON ++        */
*           &ICTFMLIB(1)=SMPWRK1)   /* AND COMING FROM PTFIN         */
*         THEN                      /*                               */
         TM    ICTMALIS(@05),B'00000100'                           0562
         BNO   @GL00033                                            0562
         TM    ICTLIBTX(@05),B'01000000'                           0562
         BO    @RT00562                                            0562
         CLC   ICTFMLIB(8,@05),@CC01867                            0562
         BE    @RT00562                                            0562
@GL00033 L     @05,@PC00001+4                                      0562
         L     @05,ICMODPTR(,@05)                                  0562
         CLC   ICTMSSI(8,@05),BLANKS                               0562
         BE    @RF00562                                            0562
         CLC   ICTFMLIB(8,@05),@CC01867                            0562
         BNE   @RF00562                                            0562
@RT00562 DS    0H                                                  0563
*         ICTMCOPY(1)=OFF;          /* USE UPDATE TO PROCESS         */
         L     @05,@PC00001+4                                      0563
         L     @05,ICMODPTR(,@05)                                  0563
         NI    ICTMCOPY(@05),B'10111111'                           0563
*     END;                          /*                               */
@RF00562 DS    0H                                                  0565
*                                                                  0565
*   /*****************************************************************/
*   /*                                                               */
*   /* UPDATE FROMLIB DETERMINATION.                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0565
*   IF ICTMMACU(1)=ON THEN          /*                               */
@RF00531 L     @05,@PC00001+4                                      0565
         L     @05,ICMODPTR(,@05)                                  0565
         TM    ICTMMACU(@05),B'00000100'                           0565
         BNO   @RF00565                                            0565
*     DO;                           /*                               */
*                                                                  0566
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK ICT FOR ANOTHER OCCURANCE OF THIS ELEMENT AND USE   */
*       /* SOME DATA FROM THE OTHER ENTRY (IN CASE WHERE THE ELEMENT */
*       /* IS BEING INITIALLY INTRODUCED TO THE SYSTEM).             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0567
*       RFY                                                        0567
*         ICTMOD BASED(CCAICMOD);   /* ENTIRE ICT MOD SECTION        */
*       DO M=1 BY 1 WHILE ICTMEND(M)^=ICTENDNT/*                     */
*             &ENTRYICT=OFF;        /*                               */
         LA    M,1                                                 0568
         B     @DE00568                                            0568
@DL00568 DS    0H                                                  0569
*         IF ICTMMACR(M)=ON         /* REPLACEMENT TYPE              */
*             &ICMODPTR->ICTMNAME(1)=ICTMNAME(M)/* ...SAME NAME      */
*           THEN                    /*                               */
         LR    @05,M                                               0569
         MH    @05,@CH02012                                        0569
         L     @15,CCAICMOD(,CCAPTR)                               0569
         ST    @05,@TF00001                                        0569
         ALR   @05,@15                                             0569
         AL    @05,@CF02027                                        0569
         TM    ICTMMACR-9(@05),B'00001000'                         0569
         BNO   @RF00569                                            0569
         L     @05,@PC00001+4                                      0569
         L     @05,ICMODPTR(,@05)                                  0569
         LR    @14,@15                                             0569
         AL    @14,@TF00001                                        0569
         AL    @14,@CF02028                                        0569
         CLC   ICTMNAME(8,@05),ICTMNAME(@14)                       0569
         BNE   @RF00569                                            0569
*           DO;                     /*                               */
*             ENTRYICT=ON;          /* SET SWITCH                    */
         OI    ENTRYICT,B'00000010'                                0571
*             ICMODPTR->ICTFMLIB(1)=ICTTOLIB(M);/* GET ITS TOLIB     */
         AL    @15,@TF00001                                        0572
         AL    @15,@CF02030                                        0572
         MVC   ICTFMLIB(8,@05),ICTTOLIB-32(@15)                    0572
*           END;                    /*                               */
*       END;                        /*                               */
@RF00569 AH    M,@CH00069                                          0574
@DE00568 LR    @05,M                                               0574
         MH    @05,@CH02012                                        0574
         L     @01,CCAICMOD(,CCAPTR)                               0574
         AL    @01,@CF02028                                        0574
         L     @05,ICTMEND(@05,@01)                                0574
         CL    @05,ICTENDNT                                        0574
         BE    @DC00568                                            0574
         TM    ENTRYICT,B'00000010'                                0574
         BZ    @DL00568                                            0574
@DC00568 DS    0H                                                  0575
*       RFY                                                        0575
*         ICTMOD BASED(ICMODPTR);   /* CURRENT ICT ELEMENT BASE      */
*                                                                  0575
*       /*************************************************************/
*       /*                                                           */
*       /* IF FROMLIB KNOWN SKIP REST OF PROCESSING                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0576
*       IF ICTFMLIB(1)=BLANKS THEN  /*                               */
         L     @05,@PC00001+4                                      0576
         L     @05,ICMODPTR(,@05)                                  0576
         CLC   ICTFMLIB(8,@05),BLANKS                              0576
         BNE   @RF00576                                            0576
*         DO;                       /*                               */
*                                                                  0577
*           /*********************************************************/
*           /*                                                       */
*           /* APPLY PROCESSING FOR UPDATE TYPES.                    */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0578
*           IF CCAAPPLY=ON THEN     /*                               */
         TM    CCAAPPLY(CCAPTR),B'01000000'                        0578
         BNO   @RF00578                                            0578
*             DO;                   /*                               */
*                                                                  0579
*               /*****************************************************/
*               /*                                                   */
*               /* IF UPDATE IS NOT TO SMPMTS THE INPUT DATASET FOR  */
*               /* UPDATE IS THE SYSLIB(ICTMSYSL).                   */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0580
*               IF ICTMSYSL(1)^=BLANKS THEN/*                        */
         CLC   ICTMSYSL(8,@05),BLANKS                              0580
         BE    @RF00580                                            0580
*                 DO;               /*                               */
*                   ICTFMLIB(1)=ICTMSYSL(1);/* OPERATIG SYSTEM     0582
*                                      LIBRARY                       */
         MVC   ICTFMLIB(8,@05),ICTMSYSL(@05)                       0582
*                 END;              /*                               */
*               ELSE                /*                               */
*                                                                  0584
*                 /***************************************************/
*                 /*                                                 */
*                 /* IF INPUT FOR UPDATE IS TO BE SMPMTS THE CHECK   */
*                 /* FOR MEMBER PRESENT, OTHERWISE USE THE DLIB AS   */
*                 /* INPUT.                                          */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0584
*                 DO;               /*                               */
         B     @RC00580                                            0584
@RF00580 DS    0H                                                  0585
*                   IOPFUNCT=IOPBLDL;/* LOCATE MENBER ON MTS         */
         MVI   IOPFUNCT(IOPPTR),X'04'                              0585
*                   IOPDSID=IOPMTS; /*                               */
         MVI   IOPDSID(IOPPTR),X'12'                               0586
*                   IOPNAME=ICTMNAME(1);/*                           */
         L     @05,@PC00001+4                                      0587
         L     @05,ICMODPTR(,@05)                                  0587
         MVC   IOPNAME(8,IOPPTR),ICTMNAME(@05)                     0587
*                   CALL HMASMIO(HMASMIOP);/*                        */
         ST    IOPPTR,@AL00001                                     0588
         L     @15,@CV01854                                        0588
         LA    @01,@AL00001                                        0588
         BALR  @14,@15                                             0588
*                   IF IOPRETRN=IOPGOOD THEN/* FOUND ON MTS          */
         CLI   IOPRETRN(IOPPTR),0                                  0589
         BNE   @RF00589                                            0589
*                     DO;           /*                               */
*                       ICTFMLIB(1)=SMPMTS;/* INPUT FOR UPDATE IS MTS*/
         L     @05,@PC00001+4                                      0591
         L     @05,ICMODPTR(,@05)                                  0591
         MVC   ICTFMLIB(8,@05),@CC01869                            0591
*                     END;          /*                               */
*                   ELSE            /*                               */
*                     IF IOPRETRN=IOPNOTFD THEN/* NOT ON MTS USE DLIB*/
         B     @RC00589                                            0593
@RF00589 CLI   IOPRETRN(IOPPTR),4                                  0593
         BNE   @RF00593                                            0593
*                       ICTFMLIB(1)=ICTMDSTL(1);/* INPUT FOR UPDATE  */
         L     @05,@PC00001+4                                      0594
         L     @05,ICMODPTR(,@05)                                  0594
         MVC   ICTFMLIB(8,@05),ICTMDSTL(@05)                       0594
*                     ELSE          /* IO ERROR                      */
*                       TM2HIRC=MAX(TM2HIRC,IOPRETRN);/* ERROR CODE  */
         B     @RC00593                                            0595
@RF00593 SLR   @05,@05                                             0595
         IC    @05,IOPRETRN(,IOPPTR)                               0595
         CR    TM2HIRC,@05                                         0595
         BNL   *+6
         LR    TM2HIRC,@05                                         0595
*                 END;              /*                               */
@RC00593 DS    0H                                                  0596
@RC00589 DS    0H                                                  0597
*             END;                  /*                               */
*                                                                  0597
@RC00580 DS    0H                                                  0598
*           /*********************************************************/
*           /*                                                       */
*           /* FOR ACCEPT THE INPUT FOR UPDATE IS THE DLIB.          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0598
*           IF CCAACCPT=ON THEN     /*                               */
@RF00578 TM    CCAACCPT(CCAPTR),B'00100000'                        0598
         BNO   @RF00598                                            0598
*             ICTFMLIB(1)=ICTMDSTL(1);/*                             */
         L     @05,@PC00001+4                                      0599
         L     @05,ICMODPTR(,@05)                                  0599
         MVC   ICTFMLIB(8,@05),ICTMDSTL(@05)                       0599
*         END;                      /*                               */
*     END;                          /*                               */
*   END FMLIBCK;                    /*                               */
@EL00009 DS    0H                                                  0602
@EF00009 DS    0H                                                  0602
@ER00009 LM    @14,@03,@SA00009                                    0602
         LM    @05,@12,@SA00009+24                                 0602
         BR    @14                                                 0602
*TOLIBCK:                                                          0603
*   PROC;                           /*                               */
TOLIBCK  STM   @14,@12,12(@13)                                     0603
*   RFY                                                            0604
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0605
*     ICTMOD BASED(ICMODPTR);       /* BASE ON MOD PARAMETER PASSED  */
*   RFY                                                            0606
*     ICTPTF BASED(ICPTFPTR);       /* BASE ON SYSMOD PARAMETER    0606
*                                      PASSED                        */
*   RFY                                                            0607
*     MCBELEMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   RFY                                                            0608
*     MCBPTFMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*                                                                  0608
*   /*****************************************************************/
*   /*                                                               */
*   /* THE OUTPUT (SYSUT2) FOR UPDATE PROCESSING IS DETERMINED.      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0609
*                                                                  0609
*   /*****************************************************************/
*   /*                                                               */
*   /* FOR ACCEPT THE OUTPUT DATA SET IS THE DISTLIB                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0609
*   IF CCAACCPT=ON THEN             /*                               */
         TM    CCAACCPT(CCAPTR),B'00100000'                        0609
         BNO   @RF00609                                            0609
*     ICTTOLIB(1)=ICTMDSTL(1);      /* USE DISTLIB                   */
*                                                                  0610
         L     @15,@PC00001+4                                      0610
         L     @15,ICMODPTR(,@15)                                  0610
         MVC   ICTTOLIB(8,@15),ICTMDSTL(@15)                       0610
*   /*****************************************************************/
*   /*                                                               */
*   /* FOR APPLY AND RESTORE USE SYSLIB IF THERE OR MTS.             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0611
*   ELSE                            /*                               */
*     IF ICTMSYSL(1)=BLANKS THEN    /* NO SYSLIB                     */
         B     @RC00609                                            0611
@RF00609 L     @15,@PC00001+4                                      0611
         L     @15,ICMODPTR(,@15)                                  0611
         CLC   ICTMSYSL(8,@15),BLANKS                              0611
         BNE   @RF00611                                            0611
*       ICTTOLIB(1)=SMPMTS;         /* USE SMPMTS                    */
         MVC   ICTTOLIB(8,@15),@CC01869                            0612
*     ELSE                          /*                               */
*       ICTTOLIB(1)=ICTMSYSL(1);    /* USE SYSLIB                    */
         B     @RC00611                                            0613
@RF00611 L     @15,@PC00001+4                                      0613
         L     @15,ICMODPTR(,@15)                                  0613
         MVC   ICTTOLIB(8,@15),ICTMSYSL(@15)                       0613
*   END TOLIBCK;                    /*                               */
@EL00010 DS    0H                                                  0614
@EF00010 DS    0H                                                  0614
@ER00010 LM    @14,@12,12(@13)                                     0614
         BR    @14                                                 0614
*MODIDCHK:                                                         0615
*   PROC;                           /*                               */
MODIDCHK STM   @14,@03,@SA00011                                    0615
         STM   @05,@12,@SA00011+24                                 0615
*   RFY                                                            0616
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0617
*     ICTMOD BASED(CCAICMOD);       /* BASE TO FULL ICT MOD SECTION  */
*   RFY                                                            0618
*     ICTPTF BASED(ICPTFPTR);       /* BASE ON SYSMOD PARAMETER    0618
*                                      PASSED                        */
*   RFY                                                            0619
*     MCBELEMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   RFY                                                            0620
*     MCBPTFMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   ICMODPTR->ICTMICHN(1)=ZERO;     /* CLEAR ELEMENT''S MODID LIST 0621
*                                      POINTER                       */
*                                                                  0621
         L     @05,@PC00001+4                                      0621
         L     @05,ICMODPTR(,@05)                                  0621
         SLR   @03,@03                                             0621
         ST    @03,ICTMICHN(,@05)                                  0621
*   /*****************************************************************/
*   /*                                                               */
*   /* SEARCH THE ICT MODULE SECTION FOR ANOTHER VERSION OF THIS     */
*   /* ELEMENT WHICH ALREADY HAS A MODID LIST BUILT. IF FOUND, THEN  */
*   /* CHAIN THIS ICT MOD ENTRY TO THAT ENTRY'S MODID LIST.          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0622
*   DO L=1 BY 1 WHILE ICTMEND(L)^=ICTENDNT/* TILL END OF ICT MOD     */
*         &ICTMATCH=OFF;            /* SECTION OR MATCH FOUND        */
         LA    L,1                                                 0622
         B     @DE00622                                            0622
@DL00622 DS    0H                                                  0623
*     IF ICTMNAME(L)=ICMODPTR->ICTMNAME(1)/* SAME ELEMENT NAMES      */
*         &ICTMICHN(L)^=ZERO        /* AND NOT SAME ENTRY            */
*         &((ICTMMACR(1)=ON&ICMODPTR->ICTMMACR(1)=ON)/* BOTH MACS    */
*         ×(ICTMMACU(1)=ON&ICMODPTR->ICTMMACU(1)=ON)/* BOTH MACUPD   */
*         ×(ICTMMACU(1)=ON&ICMODPTR->ICTMMACR(1)=ON)/* MACUPD - MAC  */
*         ×(ICTMMACR(1)=ON&ICMODPTR->ICTMMACU(1)=ON))/* MAC - MACUPD */
*       THEN                                                       0623
         LR    @05,L                                               0623
         MH    @05,@CH02012                                        0623
         L     @15,CCAICMOD(,CCAPTR)                               0623
         L     @14,@PC00001+4                                      0623
         L     @14,ICMODPTR(,@14)                                  0623
         ST    @05,@TF00001                                        0623
         ALR   @05,@15                                             0623
         AL    @05,@CF02028                                        0623
         CLC   ICTMNAME(8,@05),ICTMNAME(@14)                       0623
         BNE   @RF00623                                            0623
         L     @05,@TF00001                                        0623
         AL    @05,@CF02031                                        0623
         L     @05,ICTMICHN-104(@05,@15)                           0623
         LTR   @05,@05                                             0623
         BZ    @RF00623                                            0623
         TM    ICTMMACR(@15),B'00001000'                           0623
         BNO   @GL00043                                            0623
         TM    ICTMMACR(@14),B'00001000'                           0623
         BO    @RT00623                                            0623
@GL00043 L     @05,CCAICMOD(,CCAPTR)                               0623
         TM    ICTMMACU(@05),B'00000100'                           0623
         BNO   @GL00042                                            0623
         L     @05,@PC00001+4                                      0623
         L     @05,ICMODPTR(,@05)                                  0623
         TM    ICTMMACU(@05),B'00000100'                           0623
         BO    @RT00623                                            0623
@GL00042 L     @05,CCAICMOD(,CCAPTR)                               0623
         TM    ICTMMACU(@05),B'00000100'                           0623
         BNO   @GL00041                                            0623
         L     @05,@PC00001+4                                      0623
         L     @05,ICMODPTR(,@05)                                  0623
         TM    ICTMMACR(@05),B'00001000'                           0623
         BO    @RT00623                                            0623
@GL00041 L     @05,CCAICMOD(,CCAPTR)                               0623
         TM    ICTMMACR(@05),B'00001000'                           0623
         BNO   @RF00623                                            0623
         L     @05,@PC00001+4                                      0623
         L     @05,ICMODPTR(,@05)                                  0623
         TM    ICTMMACU(@05),B'00000100'                           0623
         BNO   @RF00623                                            0623
@RT00623 DS    0H                                                  0624
*       DO;                         /*                               */
*         ICTMATCH=ON;              /* INDICATE ANOTHER ENTRY FOUND  */
         OI    ICTMATCH,B'00001000'                                0625
*         ICMODPTR->ICTMICHN(1)=ICTMICHN(L);/* CHAIN TO EXISTING   0626
*                                      MODID LIST POINTER            */
         L     @05,@PC00001+4                                      0626
         L     @05,ICMODPTR(,@05)                                  0626
         LR    @15,L                                               0626
         MH    @15,@CH02012                                        0626
         L     @14,CCAICMOD(,CCAPTR)                               0626
         LA    @01,0(@15,@14)                                      0626
         AL    @01,@CF02031                                        0626
         L     @09,ICTMICHN-104(,@01)                              0626
         ST    @09,ICTMICHN(,@05)                                  0626
*         ICMODPTR->ICTMICHA(1)=ICTMICHA(L);/* CHAIN TO EXISTING   0627
*                                      MODID LIST POINTER            */
         AL    @14,@CF02033                                        0627
         L     @15,ICTMICHA-108(@15,@14)                           0627
         ST    @15,ICTMICHA(,@05)                                  0627
*       END;                        /*                               */
*   END;                            /*                               */
*                                                                  0629
@RF00623 AH    L,@CH00069                                          0629
@DE00622 LR    @05,L                                               0629
         MH    @05,@CH02012                                        0629
         L     @01,CCAICMOD(,CCAPTR)                               0629
         AL    @01,@CF02028                                        0629
         L     @05,ICTMEND(@05,@01)                                0629
         CL    @05,ICTENDNT                                        0629
         BE    @DC00622                                            0629
         TM    ICTMATCH,B'00001000'                                0629
         BZ    @DL00622                                            0629
@DC00622 DS    0H                                                  0630
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NO CHAIN WAS AVAILABLE FROM ANOTHER VERSION TO HOOK ON TO, */
*   /* THEN CALL HMASMIO TO READ THE (A)CDS ELEMENT ENTRY FOR THIS   */
*   /* ELEMENT SO THAT HMASMTID CAN BE CALLED TO BUILD A MODID LIST  */
*   /* FOR THIS ELEMENT.                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0630
*   IF ICTMATCH=OFF THEN            /* WAS A CHAIN HOOKED ON TO?     */
         TM    ICTMATCH,B'00001000'                                0630
         BNZ   @RF00630                                            0630
*     DO;                           /*                               */
*       IOPFUNCT=IOPLOC;            /* INDICATE LOCATE FUNCTION      */
         MVI   IOPFUNCT(IOPPTR),X'03'                              0632
*       IOPTYPE=IOPMAC;             /* MACROE TYPE ENTRY             */
*                                                                  0633
         MVI   IOPTYPE(IOPPTR),X'03'                               0633
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE FUNCTION TO SET UP DATASET (A)CDS               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0634
*       IF CCAACCPT=ON THEN         /* ACCEPT FUNCTION?              */
         TM    CCAACCPT(CCAPTR),B'00100000'                        0634
         BNO   @RF00634                                            0634
*         IOPDSID=IOPACDS;          /* YES- ACDS DATASET             */
         MVI   IOPDSID(IOPPTR),X'0C'                               0635
*       ELSE                                                       0636
*         IOPDSID=IOPCDS;           /* INDICATE CDS DATASET          */
         B     @RC00634                                            0636
@RF00634 MVI   IOPDSID(IOPPTR),X'02'                               0636
*       IOPNAME=ICMODPTR->ICTMNAME(1);/* GET NAME                    */
@RC00634 L     @05,@PC00001+4                                      0637
         L     @05,ICMODPTR(,@05)                                  0637
         MVC   IOPNAME(8,IOPPTR),ICTMNAME(@05)                     0637
*                                                                  0638
*       /*************************************************************/
*       /*                                                           */
*       /* LOCATE THE ELEMENT ON THE (A)CDS                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0638
*       CALL HMASMIO(HMASMIOP);     /* CALL SMP IO INTERFACE MODULE  */
         ST    IOPPTR,@AL00001                                     0638
         L     @15,@CV01854                                        0638
         LA    @01,@AL00001                                        0638
         BALR  @14,@15                                             0638
*       IF IOPRETRN=IOPGOOD THEN    /* WAS ENTRY FOUND               */
         CLI   IOPRETRN(IOPPTR),0                                  0639
         BNE   @RF00639                                            0639
*         DO;                       /*                               */
*                                                                  0640
*           /*********************************************************/
*           /*                                                       */
*           /* CALL HMASMTID TO BUILD A ICT MODID LIST FOR THIS ICT  */
*           /* MOD ENTRY WITH THE FMID,RMID, AND UMID DATA.          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0641
*           CALL HMASMTID(TBLXPARM, /*                               */
*               ICMODPTR,           /* ICT MOD SECT ENTRY            */
*               ICMODPTR->ICTMICHN(1),/* (A)CDS MODID LIST   @Z67SP00*/
*               HMASMIOP);          /* (A)CDS ELEMENT ENTRY IOP ...
*                                      BUILD MODID LIST FOR THIS   0641
*                                      ELEMENT               @Z67SP00*/
         L     @05,@PC00001                                        0641
         ST    @05,@AL00001                                        0641
         L     @05,@PC00001+4                                      0641
         ST    @05,@AL00001+4                                      0641
         L     @05,ICMODPTR(,@05)                                  0641
         LA    @05,ICTMICHN(,@05)                                  0641
         ST    @05,@AL00001+8                                      0641
         ST    IOPPTR,@AL00001+12                                  0641
         L     @15,@CV01856                                        0641
         LA    @01,@AL00001                                        0641
         BALR  @14,@15                                             0641
*           RFY                                                    0642
*             RTNCODE RSTD;         /* RESTRICT REG 15 USAGE         */
*           TM2HIRC=MAX(TM2HIRC,RTNCODE);/* PICK UP HIGHEST RC       */
         CR    TM2HIRC,RTNCODE                                     0643
         BNL   *+6
         LR    TM2HIRC,RTNCODE                                     0643
*           RFY                                                    0644
*             RTNCODE UNRSTD;       /* RELEASE REG 15                */
*         END;                      /*                               */
*       ELSE                                                       0646
*         IF IOPRETRN=IOPNOTFD THEN /* WAS SYSMOD FOUND?             */
         B     @RC00639                                            0646
@RF00639 CLI   IOPRETRN(IOPPTR),4                                  0646
         BNE   @RF00646                                            0646
*           DO;                     /* NO- SET CHAINS TO NULL LIST   */
*             ICMODPTR->ICTMICHN(1)=TBLXNULL;/* CHAIN TO EXISTING  0648
*                                      NULL LIST POINTER             */
         L     @05,@PC00001+4                                      0648
         L     @05,ICMODPTR(,@05)                                  0648
         L     @03,@PC00001                                        0648
         L     @03,TBLXNULL(,@03)                                  0648
         ST    @03,ICTMICHN(,@05)                                  0648
*             ICMODPTR->ICTMICHA(1)=TBLXNULL;/* CHAIN TO EXISTING  0649
*                                      NULL LIST POINTER             */
         ST    @03,ICTMICHA(,@05)                                  0649
*           END;                    /* END- SET CHAINS TO NULL LIST  */
*     END;                          /*                               */
@RF00646 DS    0H                                                  0651
@RC00639 DS    0H                                                  0652
*   IF IOPRETRN>IOPNOTFD THEN       /* IF ERROR                      */
@RF00630 CLI   IOPRETRN(IOPPTR),4                                  0652
         BNH   @RF00652                                            0652
*     TM2HIRC=MAX(TM2HIRC,IOPRETRN);/* SET RC                        */
         SLR   @05,@05                                             0653
         IC    @05,IOPRETRN(,IOPPTR)                               0653
         CR    TM2HIRC,@05                                         0653
         BNL   *+6
         LR    TM2HIRC,@05                                         0653
*   END MODIDCHK;                   /*                               */
@EL00011 DS    0H                                                  0654
@EF00011 DS    0H                                                  0654
@ER00011 LM    @14,@03,@SA00011                                    0654
         LM    @05,@12,@SA00011+24                                 0654
         BR    @14                                                 0654
*CLEANUP:                                                          0655
*   PROC;                           /*                               */
CLEANUP  STM   @14,@12,@SA00012                                    0655
*   RFY                                                            0656
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0657
*     ICTMOD BASED(ICMODPTR);       /* BASE ON MOD PARAMETER PASSED  */
*   RFY                                                            0658
*     ICTPTF BASED(ICPTFPTR);       /* BASE ON SYSMOD PARAMETER    0658
*                                      PASSED                        */
*   RFY                                                            0659
*     MCBELEMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   RFY                                                            0660
*     MCBPTFMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*                                                                  0660
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE GTA FILE IF GOTTEN                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0661
*   IF ICTMHASM(1)=ON THEN          /* CHECK IF GTA USED             */
         L     @15,@PC00001+4                                      0661
         L     @01,ICMODPTR(,@15)                                  0661
         TM    ICTMHASM(@01),B'01000000'                           0661
         BNO   @RF00661                                            0661
*     DO;                           /*                               */
*       GTPFUNCT=GTPFREE;           /*                               */
         L     @15,GTPPTR                                          0663
         MVI   GTPFUNCT(@15),X'0A'                                 0663
*       CALL HMASMGTA(HMASMGTP);    /*                               */
         ST    @15,@AL00001                                        0664
         L     @15,@CV01858                                        0664
         LA    @01,@AL00001                                        0664
         BALR  @14,@15                                             0664
*     END;                          /*                               */
*   END CLEANUP;                    /*                               */
@EL00012 DS    0H                                                  0666
@EF00012 DS    0H                                                  0666
@ER00012 LM    @14,@12,@SA00012                                    0666
         BR    @14                                                 0666
*   END HMASMTM2                    /*                               */
*                                                                  0667
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMICT)                                       */
*/*%INCLUDE SYSLIB  (HMASMMCB)                                       */
*/*%INCLUDE SYSLIB  (HMASMMGP)                                       */
*/*%INCLUDE SYSLIB  (HMASMGTP)                                       */
*                                                                  0667
*       ;                                                          0667
@DATA    DS    0H
@CH00069 DC    H'1'
@CH00278 DC    H'2'
@CH00092 DC    H'3'
@CH00525 DC    H'9'
@CH00036 DC    H'12'
@CH02012 DC    H'144'
@CH01861 DC    H'232'
@CH00714 DC    H'255'
         DS    0F
@AL00386 DC    A(HMASMMGP)             LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@PC00001 DS    4F
@SA00003 DS    14F
@SA00004 DS    14F
@SA00005 DS    0F
@SA00012 DS    0F
@SA00011 DS    0F
@SA00009 DS    0F
@SA00008 DS    0F
@SA00007 DS    0F
@SA00006 DS    0F
@SA00002 DS    0F
         DS    15F
@AL00001 DS    5A
@TF00001 DS    F
         DS    0F
@CF00061 DC    F'8'
@CH00061 EQU   @CF00061+2
@CF02028 DC    F'-144'
@CF02027 DC    F'-135'
@CF02030 DC    F'-112'
@CF02031 DC    F'-40'
@CF02033 DC    F'-36'
@CV01854 DC    V(HMASMIO)
@CV01855 DC    V(HMASMMSG)
@CV01856 DC    V(HMASMTID)
@CV01857 DC    V(HMASMTAI)
@CV01858 DC    V(HMASMGTA)
@CV01859 DC    V(HMASMTM4)
         DS    0D
GTPPTR   DS    A
@CC01865 DC    C'SMPTLIB '
@CC01867 DC    C'SMPWRK1 '
@CC01869 DC    C'SMPMTS  '
@CC01871 DC    C'00000000'
@CC01956 DC    C'MAC     '
@CC01873 DC    C'       '
         DS    CL1
ICTENDCH DC    X'FFFFFFFF'
HMASMMGP DS    CL24
         ORG   HMASMMGP
MGPFIXED DS    CL12
         ORG   MGPFIXED
MGPCLEAR DS    CL6
         ORG   MGPCLEAR
MGPMGNO1 DS    FL2
MGPMGNO2 DS    FL2
MGPMGNO3 DS    FL2
         ORG   MGPFIXED+6
MGPFLAGS DS    BL2
         ORG   MGPFLAGS
MGPPRINT DS    BL1
MGPLIST  EQU   MGPFLAGS+0
MGPRPT   EQU   MGPFLAGS+0
MGPHLDS  EQU   MGPFLAGS+0
MGPWTOR  EQU   MGPFLAGS+0
MGPWTO   EQU   MGPFLAGS+0
MGPWTP   EQU   MGPFLAGS+0
@NM00250 EQU   MGPFLAGS+0
         ORG   MGPFIXED+8
MGPTYPE  DS    FL1
@NM00251 DS    CL3
         ORG   HMASMMGP+12
MGPVAR   DS    CL12
         ORG   MGPVAR
MGPVARPT DS    3A
         ORG   HMASMMGP+24
ASSMLST  DS    CL12
         ORG   ASSMLST
ASSMNM   DS    CL8
ASSM@    DS    AL4
         ORG   ASSMLST+12
ASMGTP   DS    CL28
ETYPE    DS    CL8
TM2SWCH1 DS    BL1
         ORG   TM2SWCH1
DLIBBIT  DS    BL1
SMDAPPLY EQU   TM2SWCH1+0
XMID     EQU   TM2SWCH1+0
MODALMOD EQU   TM2SWCH1+0
ICTMATCH EQU   TM2SWCH1+0
BLDACDSM EQU   TM2SWCH1+0
ENTRYICT EQU   TM2SWCH1+0
@NM00255 EQU   TM2SWCH1+0
         ORG   TM2SWCH1+1
TM2SWCH2 DS    BL1
         ORG   TM2SWCH2
MACFND   DS    BL1
STOWMAC  EQU   TM2SWCH2+0
@NM00256 EQU   TM2SWCH2+0
         ORG   TM2SWCH2+1
SAVADLIB DS    CL8
         DS    CL6
PKDEC    DS    CL8
RADJ     DS    CL8
BLANKS   DC    CL8'        '
PATCHTM2 DS    CL80
         ORG   PATCHTM2
@NM00257 DC    80X'FF'
         ORG   PATCHTM2+80
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
T        EQU   @05
S        EQU   @03
L        EQU   @03
M        EQU   @03
FIX31    EQU   @03
TM2HIRC  EQU   @04
IOPPTR   EQU   @02
CCAPTR   EQU   @11
RTNCODE  EQU   @15
RTNREG   EQU   @14
TBLXOPTS EQU   0
TBLFLAGS EQU   TBLXOPTS+8
TBLFLG1  EQU   TBLFLAGS
TBLNOAPP EQU   TBLFLG1
TBLFLG2  EQU   TBLFLAGS+2
TBLFLG3  EQU   TBLFLAGS+3
TBLFLG4  EQU   TBLFLAGS+5
TBLFLG5  EQU   TBLFLAGS+7
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAIOPTR EQU   CCAFIOP
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAICT   EQU   CCAFICT
CCAICPTF EQU   CCAFICT+4
CCAICMOD EQU   CCAFICT+8
CCAICLMD EQU   CCAFICT+12
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00023 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAAPPLY EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAFLAG2 EQU   CCAFFUNC+11
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCABLDLA EQU   0
@NM00039 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00041 EQU   CCABLDLL
CCALKDRC EQU   @NM00041+20
@NM00043 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00043+20
@NM00045 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00045+20
@NM00047 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00047+20
@NM00049 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00049+20
@NM00051 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00051+20
@NM00053 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00053+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
@NM00057 EQU   HMASMIOP+12
@NM00058 EQU   @NM00057
IOPDDNAM EQU   HMASMIOP+24
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00168 EQU   IOPQSMIF
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPBS02  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
HMASMICT EQU   0
ICTCORE  EQU   HMASMICT
ICTPSPLN EQU   ICTCORE
ICTMSPLN EQU   ICTCORE+4
ICTLSPLN EQU   ICTCORE+8
ICTGMSPL EQU   0
ICTPTF   EQU   0
ICTPTFS  EQU   ICTPTF
ICTPFLG1 EQU   ICTPTF+7
ICTPFLG3 EQU   ICTPTF+8
ICTPPROC EQU   ICTPFLG3
ICTPFLG5 EQU   ICTPTF+9
ICTPFLG6 EQU   ICTPTF+11
ICTPFLF  EQU   ICTPFLG6
ICTPFLG2 EQU   ICTPTF+12
ICTPFLG4 EQU   ICTPTF+13
ICTPFLG8 EQU   ICTPTF+14
ICTPFLG9 EQU   ICTPTF+15
@NM00195 EQU   ICTPFLG9
ICTPFLGA EQU   ICTPTF+16
ICTPUSR1 EQU   ICTPFLGA
ICTPCHN  EQU   ICTPTF+64
ICTPRCHN EQU   ICTPTF+68
ICTPSCHN EQU   ICTPTF+72
ICTPPCHN EQU   ICTPTF+76
ICTPICHN EQU   ICTPTF+80
ICTPNCHN EQU   ICTPTF+84
ICTPVCHN EQU   ICTPTF+88
ICTPDCHN EQU   ICTPTF+92
ICTPBCHN EQU   ICTPTF+96
ICTIXPF  EQU   0
ICTENTLS EQU   0
ICTENTNT EQU   ICTENTLS
ICTENTNM EQU   ICTENTNT
ICTENTST EQU   ICTENTNT+7
ICTREQLS EQU   0
ICTREQNT EQU   ICTREQLS
ICTREQNM EQU   ICTREQNT
ICTREQST EQU   ICTREQNT+7
ICTSUPLS EQU   0
ICTSUPNT EQU   ICTSUPLS
ICTSUPNM EQU   ICTSUPNT
ICTPRELS EQU   0
ICTPRENT EQU   ICTPRELS
ICTPRENM EQU   ICTPRENT
ICTPREST EQU   ICTPRENT+7
ICTIRQLS EQU   0
ICTIRQNT EQU   ICTIRQLS
ICTIRQNM EQU   ICTIRQNT
ICTIRQST EQU   ICTIRQNT+7
ICTCSRST EQU   ICTIRQNT+15
ICTNPRLS EQU   0
ICTNPRNT EQU   ICTNPRLS
ICTNPRNM EQU   ICTNPRNT
ICTVRSLS EQU   0
ICTVRSNT EQU   ICTVRSLS
ICTVRSNM EQU   ICTVRSNT
ICTDELLS EQU   0
ICTDELNT EQU   ICTDELLS
ICTDELNM EQU   ICTDELNT
ICTDELST EQU   ICTDELNT+7
ICTSBYLS EQU   0
ICTSBYNT EQU   ICTSBYLS
ICTSBYNM EQU   ICTSBYNT
ICTMOD   EQU   0
ICTMNAME EQU   ICTMOD
ICTMEND  EQU   ICTMNAME
ICTMFLG2 EQU   ICTMOD+8
ICTMPROC EQU   ICTMFLG2
ICTMNOGO EQU   ICTMFLG2
ICTMCPL  EQU   ICTMFLG2
ICTMMSG  EQU   ICTMFLG2
ICTMFLG1 EQU   ICTMOD+9
ICTMMODR EQU   ICTMFLG1
ICTMMACR EQU   ICTMFLG1
ICTMMACU EQU   ICTMFLG1
ICTMFLG3 EQU   ICTMOD+10
ICTLIBTX EQU   ICTMFLG3
ICTMRELF EQU   ICTMFLG3
ICTMALIS EQU   ICTMFLG3
ICTMFLG4 EQU   ICTMOD+11
ICTMIDEL EQU   ICTMFLG4
ICTMDSTE EQU   ICTMFLG4
ICTMFLG5 EQU   ICTMOD+12
ICTMCOPY EQU   ICTMFLG5
ICTMODF4 EQU   ICTMOD+13
ICTMLEP1 EQU   ICTMODF4
ICTMODF5 EQU   ICTMOD+14
ICTMLEP2 EQU   ICTMODF5
ICTMODF6 EQU   ICTMOD+15
ICTMLEP3 EQU   ICTMODF6
ICTMODF7 EQU   ICTMOD+16
ICTMLEP4 EQU   ICTMODF7
ICTMACF4 EQU   ICTMOD+17
ICTMHASM EQU   ICTMACF4
ICTMRELN EQU   ICTMOD+22
ICTFMLIB EQU   ICTMOD+24
ICTTOLIB EQU   ICTMOD+32
ICTMASLB EQU   ICTMOD+40
ICTMDSTL EQU   ICTMOD+48
ICTMSYSL EQU   ICTMOD+56
ICTMDOBJ EQU   ICTMOD+64
ICTMSSI  EQU   ICTMOD+72
ICTPPTR  EQU   ICTMOD+96
ICTMCHN  EQU   ICTMOD+100
ICTMICHN EQU   ICTMOD+104
ICTMICHA EQU   ICTMOD+108
ICTMACHN EQU   ICTMOD+112
ICTMTCHN EQU   ICTMOD+116
ICTMVCHN EQU   ICTMOD+120
ICTMUCHN EQU   ICTMOD+124
ICTIXMF  EQU   0
ICTMIDLS EQU   0
ICTMID   EQU   ICTMIDLS
ICTMODID EQU   ICTMID
ICTMODST EQU   ICTMID+7
ICTASMLS EQU   0
ICTASMAD EQU   ICTASMLS
ICTTALLS EQU   0
ICTTALNM EQU   ICTTALLS
ICTMVRLS EQU   0
ICTMVRNT EQU   ICTMVRLS
ICTMVRNM EQU   ICTMVRNT
ICTMUMLS EQU   0
ICTMUMNT EQU   ICTMUMLS
ICTMUMNM EQU   ICTMUMNT
ICTLMOD  EQU   0
ICTLMNAM EQU   ICTLMOD
ICTLNAME EQU   ICTLMNAM
ICTLFLG4 EQU   ICTLMOD+8
ICTLFLG1 EQU   ICTLMOD+9
ICTLFLG5 EQU   ICTLMOD+10
ICTLFLG6 EQU   ICTLMOD+11
ICTLFLG7 EQU   ICTLMOD+12
ICTLFLG2 EQU   ICTLMOD+13
ICTLFLG3 EQU   ICTLMOD+14
ICTLCHN  EQU   ICTLMOD+34
ICTIXLF  EQU   0
MCBPTFMP EQU   0
MCBVERMP EQU   0
MCBVEND  EQU   MCBVERMP+8
MCBIFMP  EQU   0
MCBIEND  EQU   MCBIFMP+8
MCBELEMP EQU   0
MCBEDIST EQU   MCBELEMP+9
MCBEDOBJ EQU   MCBELEMP+17
MCBESYS  EQU   MCBELEMP+25
MCBETXLB EQU   MCBELEMP+33
MCBEASLB EQU   MCBELEMP+49
MCBESSI  EQU   MCBELEMP+65
MCBERLF  EQU   MCBELEMP+73
MCBELEPM EQU   MCBELEMP+136
MCBEFLG1 EQU   MCBELEPM
MCBEFLG2 EQU   MCBELEPM+1
MCBEFLG3 EQU   MCBELEPM+2
MCBEFLG4 EQU   MCBELEPM+3
MCBEFLG5 EQU   MCBELEMP+140
MCBEDEL  EQU   MCBEFLG5
MCBEEND  EQU   MCBELEMP+141
HMASMGTP EQU   0
GTPFUNCT EQU   HMASMGTP
GTPRETRN EQU   HMASMGTP+1
GTPRCDLN EQU   HMASMGTP+4
GTPKEYLN EQU   HMASMGTP+6
GTPBUFAD EQU   HMASMGTP+12
GTPRESTR EQU   HMASMGTP+16
GTPFLGS1 EQU   HMASMGTP+26
GTPPSIZE EQU   GTPFLGS1
CCADSIDA EQU   0
CCATYPEA EQU   0
IOPBS01  EQU   0
IOPBS03  EQU   0
TBLXPARM EQU   0
TBLXINDX EQU   TBLXPARM+4
TBLXIOP2 EQU   TBLXPARM+16
TBLXTBL  EQU   TBLXPARM+28
TBLXNULL EQU   TBLXPARM+36
TBLXCDSI EQU   TBLXPARM+60
TBLXFLG1 EQU   TBLXPARM+80
TBLXRC   EQU   TBLXPARM+92
ICMODPTR EQU   0
ICPTFPTR EQU   0
ELMCBPTR EQU   0
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00064 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
@NM00075 EQU   IOPUDATA
@NM00076 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPNTLVL EQU   IOPASMDR
IOPABUNT EQU   IOPASMDR+1
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPLMDF2 EQU   IOPLMLEP+1
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPLMDFX EQU   IOPLMDNT+24
@NM00085 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMID  EQU   IOPRMIDE
IOPRMST  EQU   IOPRMIDE+7
IOPFMIDE EQU   IOPMACDR+9
IOPFMID  EQU   IOPFMIDE
IOPMCLNG EQU   IOPMACDR+17
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPBUSMD EQU   IOPBUNT
IOPBUTYP EQU   IOPBUNT+7
IOPMCSYS EQU   IOPMACFX+64
IOPMCDLB EQU   IOPMACFX+72
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACND EQU   IOPMACID
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPMCTYP EQU   IOPMCIND
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00096 EQU   IOPSRCDR+1
@NM00098 EQU   @NM00096+7
@NM00102 EQU   IOPSRCDR+9
IOPSRCFX EQU   IOPSRCNT+24
@NM00106 EQU   IOPSRCFX
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00112 EQU   IOPMODDR+1
@NM00114 EQU   @NM00112+7
@NM00118 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00122 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODND EQU   IOPMODID
IOPMODST EQU   IOPLMODS+7
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00133 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPDLBND EQU   IOPDSYS
IOPDLIND EQU   IOPDNTRY+8
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPSYSFX EQU   IOPSYSNT+24
@NM00140 EQU   IOPSYSFX
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPPTFFX EQU   IOPPTFNT+24
@NM00149 EQU   IOPPTFFX
@NM00150 EQU   @NM00149
IOPPDTES EQU   IOPPTFFX+41
@NM00153 EQU   IOPPDTES
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPPTFG1 EQU   IOPPTSFX+34
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00178 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00178
IOPPTREL EQU   IOPPTFMD
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBLEP2 EQU   IOPBPDS+9
@NM00182 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00182
IOPBFTB1 EQU   IOPBFTB0
ICTENDNT EQU   ICTENDCH
MCBVVLST EQU   MCBVEND
MCBVNTRY EQU   MCBVVLST
MCBVNUM  EQU   MCBVNTRY
MCBIVLST EQU   MCBIEND
MCBINTRY EQU   MCBIVLST
MCBINUM  EQU   MCBINTRY
MCBEVLST EQU   MCBEEND
MCBENTRY EQU   MCBEVLST
MCBENUM  EQU   MCBENTRY
MCBEND   EQU   MCBENUM
MCBEIND  EQU   MCBEVLST+8
ICTENDIX EQU   ICTENDCH
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00249 EQU   MCBENTRY+7
MCBIIND  EQU   MCBIVLST+8
@NM00242 EQU   MCBINTRY+7
MCBIND   EQU   MCBINUM
MCBVIND  EQU   MCBVVLST+8
@NM00240 EQU   MCBVNTRY+7
MCBVND   EQU   MCBVNUM
IOPBCEND EQU   IOPBPDS+21
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00184 EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
@NM00183 EQU   IOPBFTB1
IOPBAOSL EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBREFR EQU   IOPBLEP2
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
@NM00181 EQU   IOPBLEP2
IOPBDC   EQU   IOPBLEP2
@NM00180 EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00179 EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBRENT EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
IOPPTIND EQU   IOPPTNTR+8
IOPPTSND EQU   IOPPTREL
@NM00177 EQU   IOPPTSFX+872
IOPSYZPP EQU   IOPPTSFX+772
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZAP EQU   IOPPTSFX+755
IOPSYUPP EQU   IOPPTSFX+655
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPD EQU   IOPPTSFX+638
IOPSYSPP EQU   IOPPTSFX+538
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSUP EQU   IOPPTSFX+521
IOPSYLKP EQU   IOPPTSFX+421
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKD EQU   IOPPTSFX+404
IOPSYCPP EQU   IOPPTSFX+304
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOM EQU   IOPPTSFX+170
IOPSYASP EQU   IOPPTSFX+70
IOPSYASR EQU   IOPPTSFX+69
IOPSYASS EQU   IOPPTSFX+61
IOPSYASM EQU   IOPPTSFX+53
@NM00176 EQU   IOPPTSFX+35
@NM00175 EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPPTSNP EQU   IOPPTFG1
IOPSYPLN EQU   IOPPTSFX+32
IOPDSPFX EQU   IOPPTSFX+6
IOPDSDIR EQU   IOPDSSPC+4
IOPDSSEC EQU   IOPDSSPC+2
IOPDSPRM EQU   IOPDSSPC
@NM00174 EQU   IOPPTSDR+4
IOPPTPEM EQU   IOPPTSDR+2
IOPPCNVL EQU   IOPPTSDR+1
@NM00173 EQU   IOPPTSDR
IOPQFMTP EQU   IOPQFMLS+8
@NM00172 EQU   IOPQFMLS+7
IOPQFMND EQU   IOPQFMNM
@NM00171 EQU   IOPQFMDR
@NM00167 EQU   IOPQSMDR
@NM00166 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
IOPSBYNM EQU   IOPSBYNT
@NM00165 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00164 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00163 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00162 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00161 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00160 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00159 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00158 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00157 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00156 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00155 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
IOPPIND  EQU   IOPPNTRY+8
IOPPTFND EQU   IOPPMODS
IOPPFMID EQU   IOPPTFFX+73
@NM00154 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
IOPACCT  EQU   IOPDATES+15
IOPACCD  EQU   IOPDATES+12
IOPRSTT  EQU   IOPDATES+9
IOPRSTD  EQU   IOPDATES+6
IOPAPPT  EQU   IOPDATES+3
IOPAPPD  EQU   IOPDATES
IOPRECT  EQU   @NM00153+3
IOPRECD  EQU   @NM00153
@NM00152 EQU   IOPPTFFX+8
@NM00151 EQU   @NM00149+7
IOPPRELN EQU   @NM00150
@NM00148 EQU   IOPPTFDR+20
IOPSBYNO EQU   IOPPTFDR+13
IOPDBYNO EQU   IOPPTFDR+6
@NM00147 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPSBYP  EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00146 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPREGEN EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
IOPDUMMP EQU   IOPFLGS5
@NM00145 EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
IOPAPP   EQU   IOPFLGS5
IOPPTYPE EQU   IOPPTFDR+1
@NM00144 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
IOPSYSND EQU   IOPSYNTR
@NM00143 EQU   IOPSYSFX+21
IOPSYSID EQU   IOPSYSFX+13
IOPNUCID EQU   IOPSYSFX+12
IOPSREL  EQU   IOPSYSFX+8
@NM00142 EQU   @NM00140+7
@NM00141 EQU   @NM00140
@NM00139 EQU   IOPSYSDR+5
@NM00138 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPMTSNP EQU   IOPFLGS7
IOPPEMAX EQU   IOPSYSDR+2
IOPSCNVL EQU   IOPSYSDR+1
@NM00137 EQU   IOPSYSDR
@NM00136 EQU   IOPDLBFX+8
@NM00135 EQU   @NM00133+7
@NM00134 EQU   @NM00133
@NM00132 EQU   IOPDLBDR+1
@NM00131 EQU   IOPDLBDR
IOPMDIND EQU   IOPMNTRY+8
@NM00130 EQU   IOPMODST
IOPDLIB  EQU   IOPMODFX+72
@NM00129 EQU   IOPMODFX+12
@NM00128 EQU   IOPMODF4
@NM00127 EQU   IOPMODF3
@NM00126 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00125 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00124 EQU   @NM00122+7
@NM00123 EQU   @NM00122
@NM00121 EQU   IOPMODDR+17
@NM00120 EQU   @NM00118+7
@NM00119 EQU   @NM00118
@NM00117 EQU   @NM00114
@NM00116 EQU   @NM00114
@NM00115 EQU   @NM00114
@NM00113 EQU   @NM00112
@NM00111 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00110 EQU   IOPSRCST
IOPSRCND EQU   IOPSRCID
IOPSRDLB EQU   IOPSRCFX+72
IOPSRSYS EQU   IOPSRCFX+64
@NM00109 EQU   IOPSRCFX+8
@NM00108 EQU   @NM00106+7
@NM00107 EQU   @NM00106
@NM00105 EQU   IOPSRCDR+18
IOPSRLNG EQU   IOPSRCDR+17
@NM00104 EQU   @NM00102+7
@NM00103 EQU   @NM00102
@NM00101 EQU   @NM00098
@NM00100 EQU   @NM00098
@NM00099 EQU   @NM00098
@NM00097 EQU   @NM00096
@NM00095 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
@NM00094 EQU   IOPMACST
@NM00093 EQU   IOPMACFX+8
@NM00092 EQU   IOPMACDR+18
IOPFMST  EQU   IOPFMIDE+7
@NM00091 EQU   IOPRMST
IOPRMASM EQU   IOPRMST
@NM00090 EQU   IOPRMST
@NM00089 EQU   IOPMACDR
IOPLMIND EQU   IOPLNTRY+8
IOPLMDND EQU   IOPSYSLB
@NM00087 EQU   @NM00085+7
@NM00086 EQU   @NM00085
@NM00084 EQU   IOPLMDDR+6
@NM00083 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPCOPY  EQU   IOPFLGS3
@NM00082 EQU   IOPLMDF4
@NM00081 EQU   IOPLMDF3
@NM00080 EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPNE    EQU   IOPLMDF2
@NM00079 EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPAPF   EQU   IOPFLGS2
@NM00078 EQU   IOPLMDDR
@NM00077 EQU   IOPASMDR+9
IOPABUTP EQU   IOPABUNT+7
IOPABUPT EQU   IOPABUNT
IOPALLOC EQU   @NM00076+4
IOPUSED  EQU   @NM00076
IOPTPSEQ EQU   @NM00075+8
IOPVLSER EQU   @NM00075+2
IOPBLKSI EQU   @NM00075
IOPCQMAX EQU   IOPCQMAP+12
@NM00074 EQU   IOPCQMAP+11
@NM00073 EQU   IOPCQMAP+8
@NM00072 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00071 EQU   IOPSCMAP+11
@NM00070 EQU   IOPSCMAP+8
@NM00069 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00068 EQU   IOPNTMAX+11
@NM00067 EQU   IOPNTMAX+8
@NM00066 EQU   IOPNTMAX
@NM00065 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00064+5
IOPIPTF3 EQU   @NM00064
TBLXEND0 EQU   TBLXPARM+124
@NM00007 EQU   TBLXPARM+108
TBLXIOP3 EQU   TBLXPARM+104
TBLXD2GT EQU   TBLXPARM+100
TBLXDLGT EQU   TBLXPARM+96
@NM00006 EQU   TBLXRC+3
TBLXIRC  EQU   TBLXRC+2
TBLXLRC  EQU   TBLXRC+1
TBLXTRC  EQU   TBLXRC
TBLXIBGN EQU   TBLXPARM+88
TBLXTSLP EQU   TBLXPARM+84
@NM00005 EQU   TBLXPARM+83
@NM00004 EQU   TBLXPARM+82
@NM00003 EQU   TBLXPARM+81
@NM00002 EQU   TBLXFLG1
TBLXTCRC EQU   TBLXFLG1
TBLXFUND EQU   TBLXPARM+72
TBLXFUNC EQU   TBLXPARM+64
@NM00001 EQU   TBLXPARM+62
TBLXCRQI EQU   TBLXPARM+61
TBLXLMGT EQU   TBLXPARM+56
TBLXSCGT EQU   TBLXPARM+52
TBLXSREL EQU   TBLXPARM+48
TBLXASGT EQU   TBLXPARM+44
TBLXIFGT EQU   TBLXPARM+40
TBLXTOP  EQU   TBLXPARM+32
TBLXSEGT EQU   TBLXPARM+24
TBLXIOPF EQU   TBLXPARM+20
TBLXEND  EQU   TBLXINDX+8
TBLXSTRT EQU   TBLXINDX+4
TBLXCUR  EQU   TBLXINDX
TBLXHDR  EQU   TBLXPARM
@NM00254 EQU   HMASMGTP+27
@NM00253 EQU   GTPFLGS1
GTPRCDNF EQU   GTPFLGS1
GTPNOSPM EQU   GTPFLGS1
GTPPOS   EQU   GTPRESTR+8
GTPRCD   EQU   GTPRESTR+4
GTPPAG   EQU   GTPRESTR
GTPWKAD  EQU   HMASMGTP+8
@NM00252 EQU   HMASMGTP+2
@NM00248 EQU   MCBEFLG5
MCBESTD  EQU   MCBEFLG5
@NM00247 EQU   MCBEFLG4
@NM00246 EQU   MCBEFLG3
@NM00245 EQU   MCBEFLG2
MCBEPAGA EQU   MCBEFLG2
MCBENE   EQU   MCBEFLG2
@NM00244 EQU   MCBEFLG1
MCBEDC   EQU   MCBEFLG1
MCBEREFR EQU   MCBEFLG1
MCBEOVLY EQU   MCBEFLG1
MCBESCTR EQU   MCBEFLG1
MCBEREUS EQU   MCBEFLG1
MCBERENT EQU   MCBEFLG1
MCBEAPF  EQU   MCBEFLG1
MCBERMID EQU   MCBELEMP+129
MCBELLKD EQU   MCBELEMP+128
MCBEJLKD EQU   MCBELEMP+116
MCBELUPI EQU   MCBELEMP+115
MCBEJUPI EQU   MCBELEMP+103
MCBELCPY EQU   MCBELEMP+102
MCBEJCPY EQU   MCBELEMP+90
MCBELASM EQU   MCBELEMP+89
MCBEJASM EQU   MCBELEMP+77
MCBEDALS EQU   MCBELEMP+57
MCBELKLB EQU   MCBELEMP+41
MCBENAME EQU   MCBELEMP+1
@NM00243 EQU   MCBELEMP
MCBIFENV EQU   MCBIFMP+1
@NM00241 EQU   MCBIFMP
MCBSFMID EQU   MCBVERMP+1
@NM00239 EQU   MCBVERMP
MCBPTP   EQU   MCBPTFMP+10
MCBPRELN EQU   MCBPTFMP+8
MCBPNO   EQU   MCBPTFMP+1
MCBTYPE  EQU   MCBPTFMP
ICTIXL   EQU   ICTIXLF
@NM00238 EQU   ICTLMOD+38
ICTLTTR  EQU   ICTLMOD+31
ICTTG2   EQU   ICTLMOD+23
ICTTG1   EQU   ICTLMOD+15
@NM00237 EQU   ICTLFLG3
ICTLZAP  EQU   ICTLFLG3
ICTLLKD  EQU   ICTLFLG3
ICTLCPY  EQU   ICTLFLG3
ICTLXPND EQU   ICTLFLG3
ICTTIND2 EQU   ICTLFLG3
ICTTIND1 EQU   ICTLFLG3
@NM00236 EQU   ICTLFLG2
ICTLDEL  EQU   ICTLFLG2
@NM00235 EQU   ICTLFLG2
ICTLTDEL EQU   ICTLFLG2
ICTLINK  EQU   ICTLFLG2
ICTCOPY  EQU   ICTLFLG2
@NM00234 EQU   ICTLFLG7
@NM00233 EQU   ICTLFLG6
@NM00232 EQU   ICTLFLG5
ICTLPAGA EQU   ICTLFLG5
ICTLNE   EQU   ICTLFLG5
@NM00231 EQU   ICTLFLG1
ICTLDC   EQU   ICTLFLG1
ICTLREFR EQU   ICTLFLG1
ICTLOVLY EQU   ICTLFLG1
ICTLSCTR EQU   ICTLFLG1
ICTLREUS EQU   ICTLFLG1
ICTLRENT EQU   ICTLFLG1
ICTLAPF  EQU   ICTLFLG1
@NM00230 EQU   ICTLFLG4
ICTLPASS EQU   ICTLFLG4
ICTLDDCK EQU   ICTLFLG4
ICTLMSG  EQU   ICTLFLG4
ICTLCPL  EQU   ICTLFLG4
ICTLNOGO EQU   ICTLFLG4
ICTLPROC EQU   ICTLFLG4
ICTLEND  EQU   ICTLNAME
@NM00229 EQU   ICTMUMNT+7
ICTMUMND EQU   ICTMUMNM
@NM00228 EQU   ICTMVRNT+7
ICTMVRND EQU   ICTMVRNM
ICTTALND EQU   ICTTALNM
ICTASMND EQU   ICTASMAD
ICTMIDTY EQU   ICTMODST
ICTMIDAM EQU   ICTMODST
ICTMIDRG EQU   ICTMODST
ICTMIDF1 EQU   ICTMODST
ICTMIDPL EQU   ICTMODST
ICTMIDPS EQU   ICTMODST
@NM00227 EQU   ICTMODST
ICTMIDND EQU   ICTMODID
ICTIXM   EQU   ICTIXMF
@NM00226 EQU   ICTMOD+128
@NM00225 EQU   ICTMOD+95
ICTMFMID EQU   ICTMOD+88
@NM00224 EQU   ICTMOD+87
ICTMRMID EQU   ICTMOD+80
@NM00223 EQU   ICTMOD+21
ICTMLANG EQU   ICTMOD+20
@NM00222 EQU   ICTMOD+19
ICTMACF5 EQU   ICTMOD+18
ICTMZMPR EQU   ICTMACF4
ICTMZOMZ EQU   ICTMACF4
ICTMDOAS EQU   ICTMACF4
ICTMXUPD EQU   ICTMACF4
ICTMFXC  EQU   ICTMACF4
ICTMFXBS EQU   ICTMACF4
ICTMACDL EQU   ICTMACF4
@NM00221 EQU   ICTMLEP4
@NM00220 EQU   ICTMLEP3
@NM00219 EQU   ICTMLEP2
ICTMPAGA EQU   ICTMLEP2
ICTMNE   EQU   ICTMLEP2
@NM00218 EQU   ICTMLEP1
ICTMDC   EQU   ICTMLEP1
ICTMREFR EQU   ICTMLEP1
ICTMOVLY EQU   ICTMLEP1
ICTMSCTR EQU   ICTMLEP1
ICTMREUS EQU   ICTMLEP1
ICTMRENT EQU   ICTMLEP1
ICTMAPF  EQU   ICTMLEP1
@NM00217 EQU   ICTMFLG5
ICTMNORL EQU   ICTMFLG5
ICTMELCK EQU   ICTMFLG5
ICTMPASS EQU   ICTMFLG5
@NM00216 EQU   ICTMFLG4
ICTMTSEL EQU   ICTMFLG4
ICTMMIDE EQU   ICTMFLG4
ICTMASOC EQU   ICTMFLG4
ICTMSELM EQU   ICTMFLG4
ICTMISEL EQU   ICTMFLG4
@NM00215 EQU   ICTMFLG3
ICTMPRMS EQU   ICTMFLG3
ICTMWRK  EQU   ICTMFLG3
ICTMTRX  EQU   ICTMFLG3
ICTLIBLK EQU   ICTMFLG3
ICTMSRCU EQU   ICTMFLG1
ICTMSRCR EQU   ICTMFLG1
ICTMXPND EQU   ICTMFLG1
ICTMZAP  EQU   ICTMFLG1
ICTMASM  EQU   ICTMMODR
ICTMMOD  EQU   ICTMMODR
@NM00214 EQU   ICTMFLG2
@NM00213 EQU   ICTMFLG2
ICTMMIDU EQU   ICTMFLG2
ICTMDEL  EQU   ICTMFLG2
@NM00212 EQU   ICTSBYNT+7
ICTSBYND EQU   ICTSBYNM
ICTDELEX EQU   ICTDELST
ICTDELND EQU   ICTDELNM
@NM00211 EQU   ICTVRSNT+7
ICTVRSND EQU   ICTVRSNM
@NM00210 EQU   ICTNPRNT+7
ICTNPRND EQU   ICTNPRNM
@NM00209 EQU   ICTCSRST
@NM00208 EQU   ICTCSRST
ICTCSRF  EQU   ICTCSRST
@NM00207 EQU   ICTCSRST
ICTCSRNM EQU   ICTIRQNT+8
@NM00206 EQU   ICTIRQST
ICTIREQT EQU   ICTIRQST
ICTIREQI EQU   ICTIRQST
ICTIREQB EQU   ICTIRQST
ICTIREQS EQU   ICTIRQST
@NM00205 EQU   ICTIRQST
ICTIRQND EQU   ICTIRQNM
@NM00204 EQU   ICTPREST
ICTPREQT EQU   ICTPREST
ICTPREQI EQU   ICTPREST
ICTPREQB EQU   ICTPREST
ICTPREQS EQU   ICTPREST
@NM00203 EQU   ICTPREST
ICTPREND EQU   ICTPRENM
@NM00202 EQU   ICTSUPNT+7
ICTSUPND EQU   ICTSUPNM
@NM00201 EQU   ICTREQST
ICTRREQT EQU   ICTREQST
ICTRREQI EQU   ICTREQST
ICTRREQB EQU   ICTREQST
ICTRREQS EQU   ICTREQST
@NM00200 EQU   ICTREQST
ICTREQND EQU   ICTREQNM
@NM00199 EQU   ICTENTST
ICTEREQT EQU   ICTENTST
ICTEREQI EQU   ICTENTST
ICTEREQB EQU   ICTENTST
ICTEREQS EQU   ICTENTST
@NM00198 EQU   ICTENTST
ICTENTND EQU   ICTENTNM
ICTIXP   EQU   ICTIXPF
@NM00197 EQU   ICTPTF+100
ICTPTPFX EQU   ICTPTF+38
ICTPRELN EQU   ICTPTF+36
ICTPRECT EQU   ICTPTF+33
ICTPRECD EQU   ICTPTF+30
ICTPVERN EQU   ICTPTF+29
ICTPFMID EQU   ICTPTF+22
ICTPSUPN EQU   ICTPTF+20
ICTPONUM EQU   ICTPTF+18
ICTPTYPE EQU   ICTPTF+17
ICTPUSR8 EQU   ICTPFLGA
ICTPUSR7 EQU   ICTPFLGA
ICTPUSR6 EQU   ICTPFLGA
ICTPUSR5 EQU   ICTPFLGA
ICTPUSR4 EQU   ICTPFLGA
ICTPUSR3 EQU   ICTPFLGA
ICTPUSR2 EQU   ICTPFLGA
ICTPPASS EQU   ICTPUSR1
@NM00196 EQU   @NM00195
ICTPRQBY EQU   @NM00195
ICTPRQOK EQU   @NM00195
ICTPRQCK EQU   @NM00195
@NM00194 EQU   ICTPFLG9
ICTPPDEL EQU   ICTPFLG9
ICTPWRKO EQU   ICTPFLG9
ICTPMSL  EQU   ICTPFLG9
@NM00193 EQU   ICTPFLG8
ICTPDCPL EQU   ICTPFLG8
ICTPECPL EQU   ICTPFLG8
ICTPGCPL EQU   ICTPFLG8
@NM00192 EQU   ICTPFLG4
@NM00191 EQU   ICTPFLG4
@NM00190 EQU   ICTPFLG4
ICTPGELM EQU   ICTPFLG4
ICTPDIMP EQU   ICTPFLG4
ICTPDEXP EQU   ICTPFLG4
ICTPREDO EQU   ICTPFLG4
ICTPCDSE EQU   ICTPFLG4
@NM00189 EQU   ICTPFLG2
ICTPRCND EQU   ICTPFLG2
ICTPTPS  EQU   ICTPFLG2
ICTPTR1  EQU   ICTPFLG2
ICTPVRSP EQU   ICTPFLG2
@NM00188 EQU   ICTPFLG6
ICTFLF   EQU   ICTPFLF
ICTPDBYP EQU   ICTPFLG6
ICTPSBYP EQU   ICTPFLG6
ICTPMDLP EQU   ICTPFLG5+1
ICTPADDP EQU   ICTPFLG5+1
@NM00187 EQU   ICTPFLG5+1
ICTPLRFP EQU   ICTPFLG5
ICTPJCLP EQU   ICTPFLG5
ICTPSUPP EQU   ICTPFLG5
ICTPREQP EQU   ICTPFLG5
ICTPPREP EQU   ICTPFLG5
ICTPNPRP EQU   ICTPFLG5
ICTPIRQP EQU   ICTPFLG5
ICTPDELP EQU   ICTPFLG5
@NM00186 EQU   ICTPFLG3
ICTPSLST EQU   ICTPFLG3
ICTPNOLB EQU   ICTPFLG3
ICTPVERJ EQU   ICTPFLG3
ICTPMSG  EQU   ICTPFLG3
ICTPCPL  EQU   ICTPFLG3
ICTPNOGO EQU   ICTPFLG3
ICTPROCS EQU   ICTPPROC
ICTREGEN EQU   ICTPFLG1
ICTBYP   EQU   ICTPFLG1
ICTDUMMP EQU   ICTPFLG1
@NM00185 EQU   ICTPFLG1
ICTERROR EQU   ICTPFLG1
ICTACC   EQU   ICTPFLG1
ICTRES   EQU   ICTPFLG1
ICTAPP   EQU   ICTPFLG1
ICTPEND  EQU   ICTPTFS
ICTLEN   EQU   ICTGMSPL+1
ICTSP    EQU   ICTGMSPL
ICTLLEN  EQU   ICTLSPLN+1
ICTLSP   EQU   ICTLSPLN
ICTMLEN  EQU   ICTMSPLN+1
ICTMSP   EQU   ICTMSPLN
ICTPLEN  EQU   ICTPSPLN+1
ICTPSP   EQU   ICTPSPLN
IOPBS04E EQU   IOPBS04+2
IOPBAPFC EQU   IOPBAPF+1
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
IOPQSMTP EQU   IOPQSMLS+8
@NM00170 EQU   IOPQSMLS+7
IOPQSMND EQU   IOPQSMNM
@NM00169 EQU   @NM00168+7
IOPQSMFM EQU   @NM00168
@NM00088 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00063 EQU   IOPUSERL
@NM00062 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00061 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00060 EQU   @NM00057+10
IOPSEQNO EQU   @NM00057+8
@NM00059 EQU   @NM00058+7
IOPPTFNM EQU   @NM00058
IOPNAM17 EQU   IOPNAME
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00056 EQU   CCABLDLM+2
@NM00055 EQU   CCABLDLM
CCAUPDPM EQU   @NM00053+24
@NM00054 EQU   @NM00053+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00053+12
CCAUPDTE EQU   @NM00053+8
CCAUPDNM EQU   @NM00053
CCASUPPM EQU   @NM00051+24
@NM00052 EQU   @NM00051+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00051+12
CCAIOSUP EQU   @NM00051+8
CCASUPNM EQU   @NM00051
CCAZAPPM EQU   @NM00049+24
@NM00050 EQU   @NM00049+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00049+12
CCASPZAP EQU   @NM00049+8
CCAZAPNM EQU   @NM00049
CCACOMPM EQU   @NM00047+24
@NM00048 EQU   @NM00047+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00047+12
CCACOMRS EQU   @NM00047+8
CCACOMNM EQU   @NM00047
CCACPYPM EQU   @NM00045+24
@NM00046 EQU   @NM00045+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00045+12
CCACOPY  EQU   @NM00045+8
CCACPYNM EQU   @NM00045
CCAASMPM EQU   @NM00043+24
@NM00044 EQU   @NM00043+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00043+12
CCAASM   EQU   @NM00043+8
CCAASMNM EQU   @NM00043
CCALKDPM EQU   @NM00041+24
@NM00042 EQU   @NM00041+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00041+12
CCALKED  EQU   @NM00041+8
CCALKDNM EQU   @NM00041
CCAPGMPM EQU   @NM00039+24
@NM00040 EQU   @NM00039+21
CCABPGRC EQU   @NM00039+20
CCABPGSP EQU   @NM00039+12
CCABPGAD EQU   @NM00039+8
CCABPGNM EQU   @NM00039
CCAEND   EQU   HMASMCCA+371
@NM00038 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00037 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00036 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00035 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00034 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00033 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00032 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00031 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00030 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00029 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00028 EQU   @NM00023+18
@NM00027 EQU   @NM00023+16
CCATBLPA EQU   @NM00023+12
@NM00026 EQU   @NM00023+8
@NM00025 EQU   @NM00023+4
@NM00024 EQU   @NM00023
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00022 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
@NM00021 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00020 EQU   CCAFBUFR+122
@NM00019 EQU   CCAFBUFR+120
@NM00018 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00017 EQU   CCAFBUFR+88
@NM00016 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00015 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
@NM00014 EQU   TBLFLG5
TBLICTOK EQU   TBLFLG5
@NM00013 EQU   TBLFLG4
TBLBPFM  EQU   TBLFLG4
@NM00012 EQU   TBLFLG4
TBLBPIRQ EQU   TBLFLG4
TBLBPREQ EQU   TBLFLG4
TBLBPPRE EQU   TBLFLG4
TBLBPID  EQU   TBLFLG4
@NM00011 EQU   TBLFLG3+1
TBLSTS   EQU   TBLFLG3
TBLMTS   EQU   TBLFLG3
TBLPTS   EQU   TBLFLG3
TBLACRQ  EQU   TBLFLG3
TBLCRQ   EQU   TBLFLG3
TBLSCDS  EQU   TBLFLG3
TBLACDS  EQU   TBLFLG3
TBLCDS   EQU   TBLFLG3
TBLMASS  EQU   TBLFLG2
@NM00010 EQU   TBLFLG2
TBLFMID  EQU   TBLFLG2
TBLGROUP EQU   TBLFLG2
TBLEXC   EQU   TBLFLG2
TBLSEL   EQU   TBLFLG2
@NM00009 EQU   TBLFLG1+1
TBLDISW  EQU   TBLFLG1+1
TBLDISR  EQU   TBLFLG1+1
TBLDISN  EQU   TBLFLG1+1
TBLNOJCL EQU   TBLFLG1
TBLFLUSH EQU   TBLFLG1
TBLUSER  EQU   TBLFLG1
TBLAPAR  EQU   TBLFLG1
TBLCOMP  EQU   TBLFLG1
TBLASSEM EQU   TBLFLG1
TBLCHECK EQU   TBLFLG1
@NM00008 EQU   TBLXOPTS+5
TBLNUCID EQU   TBLXOPTS+4
TBLJCLGT EQU   TBLXOPTS
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00295 EQU   @EL00003
@RF00355 EQU   @EL00005
@RF00389 EQU   @EL00006
@RF00436 EQU   @RC00428
@RF00453 EQU   @EL00007
@RF00497 EQU   @EL00008
@RF00565 EQU   @EL00009
@RF00576 EQU   @EL00009
@RF00598 EQU   @EL00009
@RC00611 EQU   @EL00010
@RC00609 EQU   @EL00010
@RF00652 EQU   @EL00011
@RF00661 EQU   @EL00012
@ENDDATA EQU   *
         END   HMASMTM2,(C'PLS2155',0802,78334)
