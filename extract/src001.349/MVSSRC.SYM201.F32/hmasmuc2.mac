         TITLE 'HMASMUC2 - SMP PTS/MTS/STS UCLIN PROCESSOR'
HMASMUC2 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMUC2  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  LA    @10,4095(,@12)                                      0001
         LA    @08,4095(,@10)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@10                                    0001
         USING @PSTART+8190,@08                                    0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(8),0(@01)                                  0001
*                                                                  0200
*   /*****************************************************************/
*   /*                                                               */
*   /* HMASMUC2 - SMP UPDATE CONTROL LANGUAGE HANDLER.               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0200
*   IOPPTR=CCAIOPTR;                /* SET ADDRESSABILITY FOR IO RTN */
         L     IOPPTR,CCAIOPTR(,CCAPTR)                            0200
*   SAVBUFAD=IOPBUFAD;              /* SAVE BUFFER ADDR              */
         MVC   SAVBUFAD(4),IOPBUFAD(IOPPTR)                        0201
*   SCPPTR=CRPSCPAD;                /* PICK UP SCP ADDR              */
         L     @15,@PC00001+4                                      0202
         MVC   SCPPTR(4),CRPSCPAD(@15)                             0202
*   UCLRTNCD=ZERO;                  /* INIT RETURN CODE              */
         MVI   UCLRTNCD,X'00'                                      0203
*   UCLSWTBL=''B;                   /* CLEAR CNTL SW                 */
*                                                                  0204
         XC    UCLSWTBL(3),UCLSWTBL                                0204
*   /*****************************************************************/
*   /*                                                               */
*   /* SET MGP FOR ALL MSG TO GO TO RCER AND LOG                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0205
*   HMASMMGP=HMASMMGP&&HMASMMGP;    /* CLEAR MGP FIRST               */
         XC    HMASMMGP(32),HMASMMGP                               0205
*   MGPPRINT=ON;                    /* MSG TO RCER                   */
*   MGPHLDS=ON;                     /* MSG TO LOG                    */
*                                                                  0207
         OI    MGPPRINT,B'10010000'                                0207
*   /*****************************************************************/
*   /*                                                               */
*   /* SET VALUE FOR IOPDSID BASED ON INPUT PARM                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0208
*   IF UCLPTS=ON                    /*                               */
*     THEN                          /*                               */
         L     @15,@PC00001                                        0208
         TM    UCLPTS(@15),B'00000100'                             0208
         BNO   @RF00208                                            0208
*     UC2DSID=IOPPTS;               /*                               */
         MVI   UC2DSID,X'06'                                       0209
*   ELSE                            /*                               */
*     IF UCLMTS=ON                  /*                               */
*       THEN                        /*                               */
         B     @RC00208                                            0210
@RF00208 L     @15,@PC00001                                        0210
         TM    UCLMTS(@15),B'00000010'                             0210
         BNO   @RF00210                                            0210
*       UC2DSID=IOPMTS;             /*                               */
         MVI   UC2DSID,X'12'                                       0211
*     ELSE                          /*                               */
*       UC2DSID=IOPSTS;             /*                               */
         B     @RC00210                                            0212
@RF00210 MVI   UC2DSID,X'1A'                                       0212
*                                                                  0213
*   /*****************************************************************/
*   /*                                                               */
*   /* PROGRAM INITIALIZATION - CLEAR CONTROL SWITCHES AND SET DATA  */
*   /* AREAS TO BLANK CHARACTERS                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0213
*   DO WHILE(                       /* CONTINUE LOOP WHILE           */
*         UCLRTNCD<STOPSMP          /* NO CRITICAL ERRS              */
*         &UCLTERM=OFF              /* NO TERMINAL ERRS              */
*         &CRPEOFEN=OFF             /* AND NOT END OF FILE           */
*         );                        /*                               */
@RC00210 DS    0H                                                  0213
@RC00208 B     @DE00213                                            0213
@DL00213 DS    0H                                                  0214
*     IF UCLRTNCD=STOPFUNC          /* STOP UCLIN PROCESSING         */
*         ×UCLFLUSH=ON              /* OR IN FLUSH MODE              */
*       THEN                        /* YES                           */
         CLI   UCLRTNCD,12                                         0214
         BE    @RT00214                                            0214
         L     @15,@PC00001                                        0214
         TM    UCLFLUSH(@15),B'00000010'                           0214
         BNO   @RF00214                                            0214
@RT00214 DS    0H                                                  0215
*       DO;                         /*                               */
*         SCPNORT=ON;               /* DONT CALL ROUTS               */
         L     @01,SCPPTR                                          0216
         OI    SCPNORT(@01),B'00000100'                            0216
*         UCLFLUSH=ON;              /* SET FLUSH BIT                 */
         L     @15,@PC00001                                        0217
         OI    UCLFLUSH(@15),B'00000010'                           0217
*       END;                        /*                               */
*     ELSE                          /*                               */
*       SCPNORT=OFF;                /* CALL ROUTS                    */
         B     @RC00214                                            0219
@RF00214 L     @01,SCPPTR                                          0219
         NI    SCPNORT(@01),B'11111011'                            0219
*     UCLSWTBL=''B;                 /* CLEAR THE CONTROL SWITCHES    */
@RC00214 XC    UCLSWTBL(3),UCLSWTBL                                0220
*     DO LOOPINDX=1 TO CCAPESIZ;    /* CLEAR IOP TO ZERO             */
         LA    @15,1                                               0221
         B     @DE00221                                            0221
@DL00221 DS    0H                                                  0222
*       IOPUDATA(LOOPINDX)=ZERO;    /* RESET THE IOP                 */
         SLR   @14,@14                                             0222
         STC   @14,IOPUDATA-1(@15,IOPPTR)                          0222
*     END;                          /* END CLEAR IOP GROUP           */
         AH    @15,@CH00042                                        0223
@DE00221 ST    @15,LOOPINDX                                        0223
         C     @15,CCAPESIZ(,CCAPTR)                               0223
         BNH   @DL00221                                            0223
*     IOPNAME=BLANK8;               /*                               */
*                                                                  0224
         MVC   IOPNAME(8,IOPPTR),BLANK8                            0224
*     /***************************************************************/
*     /*                                                             */
*     /* READ A CONTROL STATEMENT FROM THE INPUT DATA SET            */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0225
*     CALL HMASMCRD(HMASMCRP);      /* READ/RC CC                    */
         L     @15,@PC00001+4                                      0225
         ST    @15,@AL00001                                        0225
         L     @15,@CV01407                                        0225
         LA    @01,@AL00001                                        0225
         BALR  @14,@15                                             0225
*     IF CRPRETRN>CRPEOF            /* IF RC GREATER THAN            */
*       THEN                        /* EOF THEN                      */
         L     @15,@PC00001+4                                      0226
         CLI   CRPRETRN(@15),4                                     0226
         BNH   @RF00226                                            0226
*       UCLRTNCD=MAX(UCLRTNCD,CRPRETRN);/* SAVE RC                   */
*                                                                  0227
         SLR   @14,@14                                             0227
         IC    @14,UCLRTNCD                                        0227
         SLR   @07,@07                                             0227
         IC    @07,CRPRETRN(,@15)                                  0227
         CR    @14,@07                                             0227
         BNL   *+6
         LR    @14,@07                                             0227
         STC   @14,UCLRTNCD                                        0227
*     /***************************************************************/
*     /*                                                             */
*     /* IF A RECORD WAS SUCCESSFULLY READ THEN SCAN IT              */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0228
*     IF CRPRETRN=CRPGOOD           /* IF RECORD READ OK             */
*       THEN                        /*                               */
@RF00226 L     @15,@PC00001+4                                      0228
         CLI   CRPRETRN(@15),0                                     0228
         BNE   @RF00228                                            0228
*       DO;                         /*                               */
*         SCPSRCH=ADSCNTBL;         /* PLACE THE START OF THE SCAN 0230
*                                      TABLES INTO THE SCAN PARM LIST*/
         L     @15,SCPPTR                                          0230
         MVC   SCPSRCH(4,@15),ADSCNTBL                             0230
*         CALL HMASMSCN(HMASMSCP);  /* CALL THE SCAN ROUTINE TO SCAN
*                                      THE CARD WE JUST READ IN      */
         ST    @15,@AL00001                                        0231
         L     @15,@CV01410                                        0231
         LA    @01,@AL00001                                        0231
         BALR  @14,@15                                             0231
*                                                                  0232
*/********************************************************************/
*/*                                                                  */
*/*    SCAN RETURN CODES - SYNTAX ERROR & STATUS INDICATORS -        */
*/*                                                                  */
*/*    ERRAFTPR -  INDICATES A SYNTAX ERROR WAS DETECTED DURING      */
*/*                A SCAN EXIT ROUTINE                               */
*/*    SCPRET   -  THE RETURN CODE FROM THE SCAN ROUTINE - IF NON-   */
*/*                ZERO, THE SCAN ROUTINE HAS DETECTED A SYNTAX      */
*/*                ERROR                                             */
*/*    INVLOP   - INVALID OPERATION REQUESTED                        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0232
*         IF CRPEOFEN=ON            /* EOF ON INPUT?                 */
*           THEN                    /* YES                           */
         L     @15,@PC00001+4                                      0232
         TM    CRPEOFEN(@15),B'10000000'                           0232
         BNO   @RF00232                                            0232
*           CALL UCL252I;           /* WRITE MSG                     */
         BAL   @14,UCL252I                                         0233
*         ELSE                      /*                               */
*           DO;                     /*                               */
         B     @RC00232                                            0234
@RF00232 DS    0H                                                  0235
*             IF SCPRETRN>STOPPTF   /* IF I/O TYPE ERR               */
*               THEN                                               0235
         L     @15,SCPPTR                                          0235
         CLI   SCPRETRN(@15),8                                     0235
         BNH   @RF00235                                            0235
*               UCLRTNCD=MAX(UCLRTNCD,SCPRETRN);/* PASS ALONG RC     */
         SLR   @14,@14                                             0236
         IC    @14,UCLRTNCD                                        0236
         SLR   @07,@07                                             0236
         IC    @07,SCPRETRN(,@15)                                  0236
         CR    @14,@07                                             0236
         BNL   *+6
         LR    @14,@07                                             0236
         STC   @14,UCLRTNCD                                        0236
*             IF SCPRETRN^=SCPGOOD  /* IF SCAN NOT OK                */
*               THEN                /*                               */
@RF00235 L     @01,SCPPTR                                          0237
         CLI   SCPRETRN(@01),0                                     0237
         BE    @RF00237                                            0237
*               CALL UCL203I;       /* PUT OUT SYNTAX ERR            */
         BAL   @14,UCL203I                                         0238
*             IF(SCPRETRN^=SCPGOOD  /* IF SYNTAX ERROR               */
*                 ×DELERR=ON        /* OR INVALID DELETE             */
*                 ×INVLOP=ON)       /* OR INVALID OPERATION          */
*                 &ERRAFTPR=OFF     /* BUT NOT ERR AFTER PERIOD      */
*               THEN                /* YES                           */
@RF00237 L     @01,SCPPTR                                          0239
         CLI   SCPRETRN(@01),0                                     0239
         BNE   @GL00002                                            0239
         TM    DELERR,B'00001100'                                  0239
         BZ    @RF00239                                            0239
@GL00002 TM    ERRAFTPR,B'00100000'                                0239
         BNZ   @RF00239                                            0239
*               CALL FLUSH;         /* FLUSH REST OF CARD            */
         BAL   @14,FLUSH                                           0240
*             IF INVLOP=ON          /* IF INVALID OPERATION          */
*               THEN                /*                               */
@RF00239 TM    INVLOP,B'00001000'                                  0241
         BNO   @RF00241                                            0241
*               CALL UCL276I;       /* WRITE MSG                     */
         BAL   @14,UCL276I                                         0242
*             IF DELERR=ON          /*                               */
*               THEN                /*                               */
@RF00241 TM    DELERR,B'00000100'                                  0243
         BNO   @RF00243                                            0243
*               CALL UCL253I;       /*                               */
         BAL   @14,UCL253I                                         0244
*           END;                    /*                               */
@RF00243 DS    0H                                                  0246
*                                                                  0246
*         /***********************************************************/
*         /*                                                         */
*         /* IF THE OPERATION WAS NOT A TOTAL DELETE CHECK EACH TYPE */
*         /* ENTRY TO INSURE SUFFICIENT INFORMATION HAS EITHER BEEN  */
*         /* SPECIFIED OR WAS THERE AND NOT DELETED                  */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0246
*         IF UCLTERM=OFF            /* IF ENDUCL NOT FOUND           */
*             &UCLFLUSH=OFF         /* AND NOT IN FLUSH MODE         */
*           THEN                    /*                               */
@RC00232 TM    UCLTERM,B'00010000'                                 0246
         BNZ   @RF00246                                            0246
         L     @15,@PC00001                                        0246
         TM    UCLFLUSH(@15),B'00000010'                           0246
         BNZ   @RF00246                                            0246
*           DO;                     /*                               */
*             IF ERR1SW=OFF         /* IF NO PREV ERR                */
*                 &TOTALDEL=OFF     /* AND NOT TOTAL DEL             */
*               THEN                /* CHECK FOR SUFFICIENT          */
         TM    ERR1SW,B'10000000'                                  0248
         BNZ   @RF00248                                            0248
         TM    TOTALDEL,B'00001000'                                0248
         BNZ   @RF00248                                            0248
*               CALL CPLTCHK;       /* DATA IN ENTRY                 */
         BAL   @14,CPLTCHK                                         0249
*             IF ERR2SW=ON          /*                               */
*               THEN                /*                               */
@RF00248 TM    ERR2SW,B'01000000'                                  0250
         BNO   @RF00250                                            0250
*               ERR1SW=ON;          /*                               */
         OI    ERR1SW,B'10000000'                                  0251
*             IF ERR1SW=ON          /*                               */
*               THEN                /*                               */
@RF00250 TM    ERR1SW,B'10000000'                                  0252
         BNO   @RF00252                                            0252
*               UCLRTNCD=MAX(UCLRTNCD,STOPPTF);/*                    */
*                                                                  0253
         SLR   @15,@15                                             0253
         IC    @15,UCLRTNCD                                        0253
         LA    @14,8                                               0253
         CR    @15,@14                                             0253
         BNL   *+6
         LR    @15,@14                                             0253
         STC   @15,UCLRTNCD                                        0253
*             /*******************************************************/
*             /*                                                     */
*             /* WRITE OUT THE UPDATED ENTRY TO SPECIFIED DATA SET   */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0254
*             IF ERR1SW=OFF         /* IF NO ERRORS                  */
*               THEN                /*                               */
@RF00252 TM    ERR1SW,B'10000000'                                  0254
         BNZ   @RF00254                                            0254
*               DO;                 /*                               */
*                 CALL UCLSTOW;     /* STOW CHANGED ENTRY            */
         BAL   @14,UCLSTOW                                         0256
*                 RFY                                              0257
*                   RTNCODE RSTD;   /*                               */
*                 UCLRTNCD=MAX(UCLRTNCD,RTNCODE);/* SAVE RC          */
         SLR   @14,@14                                             0258
         IC    @14,UCLRTNCD                                        0258
         CR    @14,RTNCODE                                         0258
         BNL   *+6
         LR    @14,RTNCODE                                         0258
         STC   @14,UCLRTNCD                                        0258
*                 IF RTNCODE^=ZERO  /* IF STOW ERROR                 */
*                   THEN            /*                               */
         LTR   RTNCODE,RTNCODE                                     0259
         BZ    @RF00259                                            0259
*                   ERR1SW=ON;      /* SET ERROR INDICATOR           */
         OI    ERR1SW,B'10000000'                                  0260
*                 ELSE              /*                               */
*                   DO;             /*                               */
         B     @RC00259                                            0261
@RF00259 DS    0H                                                  0262
*                     IF SYS=ON     /*                               */
*                       THEN        /*                               */
         TM    SYS,B'00100000'                                     0262
         BNO   @RF00262                                            0262
*                       DO;         /*                               */
*                         SAVNAME=IOPNAME;/*                         */
         MVC   SAVNAME(8),IOPNAME(IOPPTR)                          0264
*                         CALL HMASMDS1(HMASMIOP,'Y');/*             */
         ST    IOPPTR,@AL00001                                     0265
         LA    @14,@CC01531                                        0265
         ST    @14,@AL00001+4                                      0265
         L     @15,@CV01408                                        0265
         LA    @01,@AL00001                                        0265
         BALR  @14,@15                                             0265
*                         UCLRTNCD=MAX(UCLRTNCD,RTNCODE);/*          */
         SLR   @14,@14                                             0266
         IC    @14,UCLRTNCD                                        0266
         CR    @14,RTNCODE                                         0266
         BNL   *+6
         LR    @14,RTNCODE                                         0266
         STC   @14,UCLRTNCD                                        0266
*                         IF RTNCODE=ZERO/* IF PROCESS OK            */
*                           THEN    /*                               */
         LTR   RTNCODE,RTNCODE                                     0267
         BNZ   @RF00267                                            0267
*                           DO;     /*                               */
*                             IOPPTR=CCAIOPTR;/* RESET PTR IN CASE   */
         L     IOPPTR,CCAIOPTR(,CCAPTR)                            0269
*                             IOPBUFAD=SAVBUFAD;/* ANOTHER IOP       */
         MVC   IOPBUFAD(4,IOPPTR),SAVBUFAD                         0270
*                           END;    /* WAS GETMAINED                 */
*                         ELSE      /* IF GETMAIN FAILED THEN USE    */
*                           IOPPTR=CCAIOPCS;/* SYSIOP FOR REST       */
         B     @RC00267                                            0272
@RF00267 L     IOPPTR,CCAIOPCS(,CCAPTR)                            0272
*                         IOPNAME=SAVNAME;/*                         */
@RC00267 MVC   IOPNAME(8,IOPPTR),SAVNAME                           0273
*                       END;        /*                               */
*                   END;            /*                               */
@RF00262 DS    0H                                                  0276
*                 RFY                                              0276
*                   RTNCODE UNRSTD; /*                               */
@RC00259 DS    0H                                                  0277
*               END;                /* END NO ERROR                  */
*                                                                  0277
*             /*******************************************************/
*             /*                                                     */
*             /* UPDATE COMPLETE - ISSUE MESSAGE TELLING USER THE CDS*/
*             /* ENTRY WAS UPDATED SUCCESSFULLY THEN CONTINUE        */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0278
*             IF ERR1SW=OFF         /* IF ENTRY UPDATED              */
*               THEN                /* ISSUE SUCCESS                 */
@RF00254 TM    ERR1SW,B'10000000'                                  0278
         BNZ   @RF00278                                            0278
*               CALL UCL255I;       /* MSG                           */
         BAL   @14,UCL255I                                         0279
*             ELSE                  /* ELSE ISSUE TERMINATE          */
*               CALL UCL256I;       /* MSG                           */
         B     @RC00278                                            0280
@RF00278 BAL   @14,UCL256I                                         0280
*           END;                    /*                               */
@RC00278 DS    0H                                                  0282
*         PRLFLGS=ZERO;             /*                               */
@RF00246 L     @15,IOPBUFAD(,IOPPTR)                               0282
         MVI   PRLFLGS(@15),X'00'                                  0282
*         PRLBLANK=ON;              /*                               */
         OI    PRLBLANK(@15),B'00100000'                           0283
*         IOPDSID=IOPPRINT;         /*                               */
         MVI   IOPDSID(IOPPTR),X'0B'                               0284
*         IOPFUNCT=IOPWRITE;        /*                               */
         MVI   IOPFUNCT(IOPPTR),X'51'                              0285
*         CALL HMASMIO(HMASMIOP);   /* WRITE BLANK LINE              */
         ST    IOPPTR,@AL00001                                     0286
         L     @15,@CV01409                                        0286
         LA    @01,@AL00001                                        0286
         BALR  @14,@15                                             0286
*         IF IOPRETRN=IOPGOOD       /*                               */
*           THEN                    /*                               */
         CLI   IOPRETRN(IOPPTR),0                                  0287
         BNE   @RF00287                                            0287
*           CALL HMASMIO(HMASMIOP); /* TWO LINES                     */
         ST    IOPPTR,@AL00001                                     0288
         L     @15,@CV01409                                        0288
         LA    @01,@AL00001                                        0288
         BALR  @14,@15                                             0288
*         UCLRTNCD=MAX(UCLRTNCD,IOPRETRN);/*                         */
@RF00287 SLR   @15,@15                                             0289
         IC    @15,UCLRTNCD                                        0289
         SLR   @14,@14                                             0289
         IC    @14,IOPRETRN(,IOPPTR)                               0289
         CR    @15,@14                                             0289
         BNL   *+6
         LR    @15,@14                                             0289
         STC   @15,UCLRTNCD                                        0289
*       END;                        /* END RC RCD AND SCANND         */
*   END;                            /* END READ/SCAN LOOP            */
@RF00228 DS    0H                                                  0291
@DE00213 CLI   UCLRTNCD,16                                         0291
         BNL   @DC00213                                            0291
         TM    UCLTERM,B'00010000'                                 0291
         BNZ   @DC00213                                            0291
         L     @15,@PC00001+4                                      0291
         TM    CRPEOFEN(@15),B'10000000'                           0291
         BZ    @DL00213                                            0291
@DC00213 DS    0H                                                  0292
*                                                                  0292
*   /*****************************************************************/
*   /*                                                               */
*   /* IF LOOP ENDED DUE TO I/O ERROR FROM READ ROUTINE THEN ISSUE   */
*   /* MESSAGE NOW                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0292
*   IF CRPRETRN=CRPEOF              /* IF END OF FILE                */
*       &UCLTERM=OFF                /* BEFORE ENDUCL                 */
*     THEN                          /*                               */
         L     @15,@PC00001+4                                      0292
         CLI   CRPRETRN(@15),4                                     0292
         BNE   @RF00292                                            0292
         TM    UCLTERM,B'00010000'                                 0292
         BNZ   @RF00292                                            0292
*     CALL UCL258I;                 /*                               */
         BAL   @14,UCL258I                                         0293
*   ELSE                            /*                               */
*     IF CRPRETRN>CRPEOF            /* IF GREATER THEN EOF           */
*       THEN                        /*                               */
         B     @RC00292                                            0294
@RF00292 L     @15,@PC00001+4                                      0294
         CLI   CRPRETRN(@15),4                                     0294
         BNH   @RF00294                                            0294
*       CALL UCL256I;               /*                               */
*                                                                  0295
         BAL   @14,UCL256I                                         0295
*   /*****************************************************************/
*   /*                                                               */
*   /* UCL UPDATE COMPLETED SUCCESSFULLY RETURN TO THE CALLER        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0296
*   RETURN CODE(UCLRTNCD);          /* RETURN TO CALLER WITH HIGHEST
*                                      RETURN CODE ENCOUNTERED       */
@RF00294 DS    0H                                                  0296
@RC00292 SLR   @15,@15                                             0296
         IC    @15,UCLRTNCD                                        0296
         L     @13,4(,@13)                                         0296
         L     @14,12(,@13)                                        0296
         LM    @00,@12,20(@13)                                     0296
         BR    @14                                                 0296
         EJECT
*                                                                  0297
*   /*****************************************************************/
*   /*                                                               */
*   /* THESE ROUTINE ARE CALLED WHEN THE FUNCTION KEYWORD IS         */
*   /* ENCOUNTERED. THEY SAVE AN INDICATOR AS TO THE TYPE FUNCTION   */
*   /* REQUESTED                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0297
*RXXXFNC:                           /*                               */
*   PROCEDURE;                      /*                               */
RXXXFNC  STM   @14,@12,12(@13)                                     0297
*RENDUCL:                           /*                               */
*   ENTRY;                          /*                               */
         B     @EC00298                                            0298
RENDUCL  STM   @14,@12,12(@13)                                     0298
@EC00298 DS    0H                                                  0299
*   UCLTERM=ON;                     /*                               */
         OI    UCLTERM,B'00010000'                                 0299
*   RETURN;                         /*                               */
@EL00002 DS    0H                                                  0300
@EF00002 DS    0H                                                  0300
@ER00002 LM    @14,@12,12(@13)                                     0300
         BR    @14                                                 0300
*RREP00:                            /* REPLACE VERB SCAN EXIT        */
*   ENTRY;                          /*                               */
RREP00   STM   @14,@12,12(@13)                                     0301
*   REP=ON;                         /* SET SWITCH IN TABLE           */
         OI    REP,B'10000000'                                     0302
*   RETURN;                         /* RETURN TO HMASMSCN            */
         B     @EL00002                                            0303
*RDEL00:                            /* DELETE VERB SCAN EXIT         */
*   ENTRY;                          /*                               */
RDEL00   STM   @14,@12,12(@13)                                     0304
*   DEL=ON;                         /* INDICATE DELETE               */
         OI    DEL,B'01000000'                                     0305
*   RETURN;                         /* RETURN TO HMASMSCN            */
         B     @EL00002                                            0306
*RADD00:                            /* ADD VERB SCAN EXIT            */
*   ENTRY;                          /*                               */
RADD00   STM   @14,@12,12(@13)                                     0307
*   ADD=ON;                         /* INDICATE ADD IN SWITCH TABLE  */
         OI    ADD,B'00100000'                                     0308
*   RETURN;                         /* RETURN TO HMASMSCN            */
         B     @EL00002                                            0309
*   END RXXXFNC;                    /* END FUNCTION ROUTS            */
         EJECT
*                                                                  0311
*   /*****************************************************************/
*   /*                                                               */
*   /* THESE ROUTINES ARE ENTERED WHEN THE ENTRY TYPE KEYWORD IS     */
*   /* ENCOUNTERED ON THE UCLIN STATEMENT. THEY SET UP THE IOP SO    */
*   /* THAT IF THE ENTRY IS NOT LOCATED THEN THE IOP WILL BE         */
*   /* INITIALIZED TO NULL VALUES.                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0311
*RXXX00:                            /*                               */
*   PROCEDURE;                      /*                               */
*                                                                  0311
RXXX00   STM   @14,@12,@SA00003                                    0311
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN EXIT FOR SYSTEM TYPE UCL UPDATE                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0312
*RSYS00:                            /* SYSTEM TYPE SCAN EXIT         */
*   ENTRY;                          /*                               */
         B     @EC00312                                            0312
RSYS00   STM   @14,@12,@SA00003                                    0312
@EC00312 DS    0H                                                  0313
*   SYS=ON;                         /* SET SYS SWITCH IN UCL TABLE   */
         OI    SYS,B'00100000'                                     0313
*   IOPTYPE=IOPSYS;                 /* INDICATE SYSTEM TYPE          */
         MVI   IOPTYPE(IOPPTR),X'07'                               0314
*   IOPDSPFX='';                    /* BLANK DSPFXFIX                */
         MVI   IOPDSPFX(IOPPTR),C' '                               0315
         MVC   IOPDSPFX+1(25,IOPPTR),IOPDSPFX(IOPPTR)              0315
*   IOPSYASM='';                    /* UTILITY NAMES                 */
         MVI   IOPSYASM(IOPPTR),C' '                               0316
         MVC   IOPSYASM+1(7,IOPPTR),IOPSYASM(IOPPTR)               0316
*   IOPSYASS='';                    /* UTILITY SYSPRINT DD NAMES     */
         MVI   IOPSYASS(IOPPTR),C' '                               0317
         MVC   IOPSYASS+1(7,IOPPTR),IOPSYASS(IOPPTR)               0317
*   IOPSYASP='';                    /* UTILITY PARMS                 */
         MVI   IOPSYASP(IOPPTR),C' '                               0318
         MVC   IOPSYASP+1(99,IOPPTR),IOPSYASP(IOPPTR)              0318
*   IOPSYASR=IOPEOLST;              /* UTILITY RC                    */
         MVI   IOPSYASR(IOPPTR),X'FF'                              0319
*   IOPSYCOM='';                    /* UTILITY NAMES                 */
         MVI   IOPSYCOM(IOPPTR),C' '                               0320
         MVC   IOPSYCOM+1(7,IOPPTR),IOPSYCOM(IOPPTR)               0320
*   IOPSYCOS='';                    /* UTILITY SYSPRINT DD NAMES     */
         MVI   IOPSYCOS(IOPPTR),C' '                               0321
         MVC   IOPSYCOS+1(7,IOPPTR),IOPSYCOS(IOPPTR)               0321
*   IOPSYCOP='';                    /* UTILITY PARMS                 */
         MVI   IOPSYCOP(IOPPTR),C' '                               0322
         MVC   IOPSYCOP+1(99,IOPPTR),IOPSYCOP(IOPPTR)              0322
*   IOPSYCOR=IOPEOLST;              /* UTILITY RC                    */
         MVI   IOPSYCOR(IOPPTR),X'FF'                              0323
*   IOPSYCPY='';                    /* UTILITY NAMES                 */
         MVI   IOPSYCPY(IOPPTR),C' '                               0324
         MVC   IOPSYCPY+1(7,IOPPTR),IOPSYCPY(IOPPTR)               0324
*   IOPSYCPS='';                    /* UTILITY SYSPRINT DD NAMES     */
         MVI   IOPSYCPS(IOPPTR),C' '                               0325
         MVC   IOPSYCPS+1(7,IOPPTR),IOPSYCPS(IOPPTR)               0325
*   IOPSYCPP='';                    /* UTILITY PARMS                 */
         MVI   IOPSYCPP(IOPPTR),C' '                               0326
         MVC   IOPSYCPP+1(99,IOPPTR),IOPSYCPP(IOPPTR)              0326
*   IOPSYCPR=IOPEOLST;              /* UTILITY RC                    */
         MVI   IOPSYCPR(IOPPTR),X'FF'                              0327
*   IOPSYLKD='';                    /* UTILITY NAMES                 */
         MVI   IOPSYLKD(IOPPTR),C' '                               0328
         MVC   IOPSYLKD+1(7,IOPPTR),IOPSYLKD(IOPPTR)               0328
*   IOPSYLKS='';                    /* UTILITY SYSPRINT DD NAMES     */
         MVI   IOPSYLKS(IOPPTR),C' '                               0329
         MVC   IOPSYLKS+1(7,IOPPTR),IOPSYLKS(IOPPTR)               0329
*   IOPSYLKP='';                    /* UTILITY PARMS                 */
         MVI   IOPSYLKP(IOPPTR),C' '                               0330
         MVC   IOPSYLKP+1(99,IOPPTR),IOPSYLKP(IOPPTR)              0330
*   IOPSYLKR=IOPEOLST;              /* UTILITY RC                    */
         MVI   IOPSYLKR(IOPPTR),X'FF'                              0331
*   IOPSYSUP='';                    /* UTILITY NAMES                 */
         MVI   IOPSYSUP(IOPPTR),C' '                               0332
         MVC   IOPSYSUP+1(7,IOPPTR),IOPSYSUP(IOPPTR)               0332
*   IOPSYSPS='';                    /* UTILITY SYSPRINT DD NAMES     */
         MVI   IOPSYSPS(IOPPTR),C' '                               0333
         MVC   IOPSYSPS+1(7,IOPPTR),IOPSYSPS(IOPPTR)               0333
*   IOPSYSPP='';                    /* UTILITY PARMS                 */
         MVI   IOPSYSPP(IOPPTR),C' '                               0334
         MVC   IOPSYSPP+1(99,IOPPTR),IOPSYSPP(IOPPTR)              0334
*   IOPSYSPR=IOPEOLST;              /* UTILITY RC                    */
         MVI   IOPSYSPR(IOPPTR),X'FF'                              0335
*   IOPSYUPD='';                    /* UTILITY NAMES                 */
         MVI   IOPSYUPD(IOPPTR),C' '                               0336
         MVC   IOPSYUPD+1(7,IOPPTR),IOPSYUPD(IOPPTR)               0336
*   IOPSYUPS='';                    /* UTILITY SYSPRINT DD NAMES     */
         MVI   IOPSYUPS(IOPPTR),C' '                               0337
         MVC   IOPSYUPS+1(7,IOPPTR),IOPSYUPS(IOPPTR)               0337
*   IOPSYUPP='';                    /* UTILITY PARMS                 */
         MVI   IOPSYUPP(IOPPTR),C' '                               0338
         MVC   IOPSYUPP+1(99,IOPPTR),IOPSYUPP(IOPPTR)              0338
*   IOPSYUPR=IOPEOLST;              /* UTILITY RC                    */
         MVI   IOPSYUPR(IOPPTR),X'FF'                              0339
*   IOPSYZAP='';                    /* UTILITY NAMES                 */
         MVI   IOPSYZAP(IOPPTR),C' '                               0340
         MVC   IOPSYZAP+1(7,IOPPTR),IOPSYZAP(IOPPTR)               0340
*   IOPSYZPS='';                    /* UTILITY SYSPRINT DD NAMES     */
         MVI   IOPSYZPS(IOPPTR),C' '                               0341
         MVC   IOPSYZPS+1(7,IOPPTR),IOPSYZPS(IOPPTR)               0341
*   IOPSYZPP='';                    /* UTILITY PARMS                 */
         MVI   IOPSYZPP(IOPPTR),C' '                               0342
         MVC   IOPSYZPP+1(99,IOPPTR),IOPSYZPP(IOPPTR)              0342
*   IOPSYZPR=IOPEOLST;              /* UTILITY RC                    */
         MVI   IOPSYZPR(IOPPTR),X'FF'                              0343
*   IOPPTSND(1)=IOPEOLST;           /*                               */
         MVI   IOPPTSND(IOPPTR),X'FF'                              0344
*   IF SCPNORT=OFF                  /* IF ROUTS TO BE CALLED         */
*     THEN                          /*                               */
         L     @01,SCPPTR                                          0345
         TM    SCPNORT(@01),B'00000100'                            0345
         BZ    @RT00345                                            0345
*     GO TO RXXXLOC;                /* LOCAT ENTRY                   */
*   RETURN;                         /* RETURN TO SCAN IF NO ROUT CALL*/
*                                                                  0347
@EL00003 DS    0H                                                  0347
@EF00003 DS    0H                                                  0347
@ER00003 LM    @14,@12,@SA00003                                    0347
         BR    @14                                                 0347
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN EXIT FOR SYSMOD TYPE UPDATE                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0348
*RSMD00:                            /* PTF TYPE SCAN EXIT            */
*   ENTRY;                          /*                               */
RSMD00   STM   @14,@12,@SA00003                                    0348
*   PTF=ON;                         /* INDICATE THAT IN THE TABLE    */
         OI    PTF,B'10000000'                                     0349
*   IOPTYPE=IOPSMD;                 /* INDICATE SYSMOD ENTRY         */
         MVI   IOPTYPE(IOPPTR),X'0B'                               0350
*   RETURN;                         /* RETURN TO SCAN                */
*                                                                  0351
         B     @EL00003                                            0351
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN EXIT FOR MACRO TYPE UCL UPDATE                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0352
*RMAC00:                            /* MACRO TYPE SCAN EXIT          */
*   ENTRY;                          /*                               */
RMAC00   STM   @14,@12,@SA00003                                    0352
*   MACRO=ON;                       /* SET MACRO SWITCH IN UCL TABLE */
         OI    MACRO,B'01000000'                                   0353
*   IOPTYPE=IOPMAC;                 /* SET MAC CDS TYPE              */
         MVI   IOPTYPE(IOPPTR),X'03'                               0354
*   IF DEL=OFF                      /*                               */
*     THEN                          /*                               */
         TM    DEL,B'01000000'                                     0355
         BNZ   @RF00355                                            0355
*     DO;                           /*                               */
*       INVLOP=ON;                  /*                               */
         OI    INVLOP,B'00001000'                                  0357
*       SCPRETRN=SCPNDSCN;          /*                               */
         L     @01,SCPPTR                                          0358
         MVI   SCPRETRN(@01),X'04'                                 0358
*     END;                          /*                               */
*   RETURN;                         /* RETURN TO SCAN                */
*                                                                  0360
         B     @EL00003                                            0360
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN EXIT FOR SOURCE TYPE UCL UPDATE                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0361
*RSRC00:                            /* SOURCE DSCAN EXIT             */
*   ENTRY;                          /*                               */
RSRC00   STM   @14,@12,@SA00003                                    0361
*   SRC=ON;                         /* SET SOURCE TYPE BIT           */
         OI    SRC,B'00010000'                                     0362
*   IOPTYPE=IOPSRC;                 /* IOP AND SET TYPE              */
         MVI   IOPTYPE(IOPPTR),X'08'                               0363
*   IF DEL=OFF                      /*                               */
*     THEN                          /*                               */
         TM    DEL,B'01000000'                                     0364
         BNZ   @RF00364                                            0364
*     DO;                           /*                               */
*       INVLOP=ON;                  /*                               */
         OI    INVLOP,B'00001000'                                  0366
*       SCPRETRN=SCPNDSCN;          /*                               */
         L     @01,SCPPTR                                          0367
         MVI   SCPRETRN(@01),X'04'                                 0367
*     END;                          /*                               */
*   RETURN;                         /* RETURN TO SCAN                */
*                                                                  0369
         B     @EL00003                                            0369
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS ENTERED WHEN A PERIOD IS FOUND IMMEDIATELY    */
*   /* AFTER THE DEL AND NAME OF THE UCL STATEMENT. SET A SWITCH TO  */
*   /* INDICATE DELETE ONLY OPERATION AFTER RETURN FROM SCAN         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0370
*RSYSTD:                                                           0370
*RSMDTD:                                                           0370
*RMACTD:                                                           0370
*RSRCTD:                                                           0370
*   ENTRY;                          /*                               */
RSYSTD   DS    0H                                                  0370
RSMDTD   DS    0H                                                  0370
RMACTD   DS    0H                                                  0370
RSRCTD   STM   @14,@12,@SA00003                                    0370
*   IF DEL=ON&UCLFLUSH=OFF          /* DEL VERB AND NOT TERMINATE?   */
*     THEN                                                         0371
         TM    DEL,B'01000000'                                     0371
         BNO   @RF00371                                            0371
         L     @15,@PC00001                                        0371
         TM    UCLFLUSH(@15),B'00000010'                           0371
         BNZ   @RF00371                                            0371
*     TOTALDEL=ON;                  /* INDICATE TOTAL DELETE         */
         OI    TOTALDEL,B'00001000'                                0372
*   RETURN;                         /* RETURN TO HMSMSCN             */
         B     @EL00003                                            0373
*                                                                  0374
*   /*****************************************************************/
*   /*                                                               */
*   /* PERFORM A LOCATE ON THE CDS ENTRY NOW THAT WE KNOW THE FULL   */
*   /* NAME. IF THE OPERATION IS ADD, THE LOCATE MUST FAIL OR THERE  */
*   /* IS AN ERROR. FOR ALL OTHER OPERATIONS THE LOCATE MUST FIND THE*/
*   /* ENTRY OR THERE IS AN ERROR. THE LOCATE OPERATION ALSO READS IN*/
*   /* THE EXTENDED DIRECTORY WHICH WILL BE USED FOR THE UPDATE      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0374
*RSYSNAM:                                                          0374
*RSMDNAM:                                                          0374
*RMACNAM:                                                          0374
*RSRCNAM:                                                          0374
*   ENTRY;                          /*                               */
RSYSNAM  DS    0H                                                  0374
RSMDNAM  DS    0H                                                  0374
RMACNAM  DS    0H                                                  0374
RSRCNAM  STM   @14,@12,@SA00003                                    0374
*   IOPNAME=SCPSTRNG(1:SCPPMLN);    /*                               */
         MVI   IOPNAME+1(IOPPTR),C' '                              0375
         MVC   IOPNAME+2(6,IOPPTR),IOPNAME+1(IOPPTR)               0375
         L     @15,SCPPTR                                          0375
         LH    @14,SCPPMLN(,@15)                                   0375
         BCTR  @14,0                                               0375
         L     @01,SCPCHAR(,@15)                                   0375
         EX    @14,@SM02023                                        0375
*RXXXLOC:                                                          0376
*   IOPDSID=UC2DSID;                /* SET DSID                      */
RXXXLOC  MVC   IOPDSID(1,IOPPTR),UC2DSID                           0376
*   IOPFUNCT=IOPLOC;                /* PREPARE FOR LOCATE OPERATION  */
         MVI   IOPFUNCT(IOPPTR),X'03'                              0377
*   CALL HMASMIO(HMASMIOP);         /* PERFORM THE LOCATE            */
*                                                                  0378
         ST    IOPPTR,@AL00001                                     0378
         L     @15,@CV01409                                        0378
         LA    @01,@AL00001                                        0378
         BALR  @14,@15                                             0378
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR ADD OR REP OF ENTRY NOT FOUND. SET INDICATOR THAT   */
*   /* ENTRY IS TOTAL ADD                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0379
*   IF(ADD=ON×REP=ON)               /* ADD/REP NEW ENTRY             */
*       &IOPRETRN=IOPNTFND          /* AND NTRY NOT FOUND            */
*     THEN                                                         0379
         TM    ADD,B'10100000'                                     0379
         BZ    @RF00379                                            0379
         CLI   IOPRETRN(IOPPTR),4                                  0379
         BNE   @RF00379                                            0379
*     DO;                           /*                               */
*       IF PTF=ON                   /* IF ADD OF NEW PTF             */
*         THEN                      /*                               */
         TM    PTF,B'10000000'                                     0381
         BNO   @RF00381                                            0381
*         DO;                       /*                               */
*           INVLOP=ON;              /* INVALID OPERATION             */
         OI    INVLOP,B'00001000'                                  0383
*           SCPRETRN=SCPNDSCN;      /* STOP SCAN WITH RC=0           */
         L     @01,SCPPTR                                          0384
         MVI   SCPRETRN(@01),X'04'                                 0384
*         END;                      /*                               */
*       ELSE                        /*                               */
*         TOTAL=ON;                 /* YES INDICATE THIS IN TABLE    */
         B     @RC00381                                            0386
@RF00381 OI    TOTAL,B'00010000'                                   0386
*     END;                          /*                               */
*                                                                  0387
@RC00381 DS    0H                                                  0388
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR VALID TYPE REQUEST FOR ENTRY FOUND/NOT FOUND        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0388
*   IF DEL=ON                       /* IF DEL                        */
*       &IOPRETRN=IOPNTFND          /* AND NOT FOUND                 */
*     THEN                          /* THEN ERROR CONDITION          */
@RF00379 TM    DEL,B'01000000'                                     0388
         BNO   @RF00388                                            0388
         CLI   IOPRETRN(IOPPTR),4                                  0388
         BNE   @RF00388                                            0388
*     DO;                           /* WRONG COMBINATION WAS FOUND   */
*       DELERR=ON;                  /* SET SW                        */
         OI    DELERR,B'00000100'                                  0390
*       SCPNORT=ON;                 /* DONT CALL ROUTS               */
         L     @01,SCPPTR                                          0391
         OI    SCPNORT(@01),B'00000100'                            0391
*     END;                          /* END DEL NOT FOUND             */
*   ELSE                            /*                               */
*     IF REP=ON                     /* IF REP AND NOT FOUND          */
*         &IOPRETRN=IOPNTFND        /*                               */
*       THEN                        /*                               */
         B     @RC00388                                            0393
@RF00388 TM    REP,B'10000000'                                     0393
         BNO   @RF00393                                            0393
         CLI   IOPRETRN(IOPPTR),4                                  0393
         BNE   @RF00393                                            0393
*       CALL UCL277I;               /* ADD ASSUMED                   */
         BAL   @14,UCL277I                                         0394
*     ELSE                          /*                               */
*       IF IOPRETRN>IOPNTFND        /* IF SERIOUS ERROR IN LOCATE    */
*         THEN                      /* YES - ERR                     */
         B     @RC00393                                            0395
@RF00393 CLI   IOPRETRN(IOPPTR),4                                  0395
         BNH   @RF00395                                            0395
*         DO;                       /*                               */
*           SCPRET=MAX(SCPRET,IOPRETRN);/*                           */
         L     @15,SCPPTR                                          0397
         SLR   @14,@14                                             0397
         IC    @14,SCPRET(,@15)                                    0397
         SLR   @07,@07                                             0397
         IC    @07,IOPRETRN(,IOPPTR)                               0397
         CR    @14,@07                                             0397
         BNL   *+6
         LR    @14,@07                                             0397
         STC   @14,SCPRET(,@15)                                    0397
*           IF IOPRETRN=IOPIOERR    /* CHECK FOR AN I/O ERROR ON THE
*                                      LOCATE OPERATION              */
*             THEN                  /* YES - THERE WAS AN ERROR      */
         CLI   IOPRETRN(IOPPTR),16                                 0398
         BNE   @RF00398                                            0398
*             CALL UCL256I;         /* ISSUE THE MESSAGE             */
         BAL   @14,UCL256I                                         0399
*         END;                      /*                               */
*   RETURN;                         /* RETURN TO HMASMSCN            */
         B     @EL00003                                            0401
*   END RXXX00;                     /*                               */
         B     @EL00003                                            0402
         EJECT
*                                                                  0403
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINES TO PROCESS OPTIONS FOR THE SYSTEM ENTRY              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0403
*RSYSXXX:                           /*                               */
*   PROCEDURE;                      /*                               */
*                                                                  0403
RSYSXXX  STM   @14,@12,@SA00004                                    0403
*   /*****************************************************************/
*   /*                                                               */
*   /* EXIT FOR SYSTEM SREL VALUE                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0404
*RSREL:                                                            0404
*   ENTRY;                          /*                               */
         B     @EC00404                                            0404
RSREL    STM   @14,@12,@SA00004                                    0404
@EC00404 DS    0H                                                  0405
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0405
         MVC   MSGPARTS+1(131),MSGPARTS                            0405
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @15,SCPPTR                                          0406
         LH    @14,SCPPMLN(,@15)                                   0406
         BCTR  @14,0                                               0406
         L     @01,SCPCHAR(,@15)                                   0406
         EX    @14,@SM02025                                        0406
*   VLPTYPE=IOPPTSRL;               /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'02'                                       0407
*   VLPLPTR=ADDR(IOPPTNTR(1));      /* SET PTR TO FIRST SUBENTRY     */
         LA    @15,IOPPTNTR(,IOPPTR)                               0408
         ST    @15,VLPLPTR                                         0408
*   VLPDLEN=LENGTH(IOPPTREL(1));    /* SET LEN OF ENT                */
         MVI   VLPDLEN,X'04'                                       0409
*   RETURN;                         /*                               */
*                                                                  0410
@EL00004 DS    0H                                                  0410
@EF00004 DS    0H                                                  0410
@ER00004 LM    @14,@12,@SA00004                                    0410
         BR    @14                                                 0410
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTS FOR FMID KEYWORD AND VALUES                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0411
*RFMID:                             /*                               */
*   ENTRY;                          /*                               */
RFMID    STM   @14,@12,@SA00004                                    0411
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0412
         MVC   MSGPARTS+1(131),MSGPARTS                            0412
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION           */
         L     @15,SCPPTR                                          0413
         LH    @14,SCPPMLN(,@15)                                   0413
         BCTR  @14,0                                               0413
         L     @01,SCPCHAR(,@15)                                   0413
         EX    @14,@SM02025                                        0413
*   VLPTYPE=IOPPTFM;                /*                               */
         MVI   VLPTYPE,X'01'                                       0414
*   VLPLPTR=ADDR(IOPPTNTR(1));      /* START OF LIST                 */
         LA    @15,IOPPTNTR(,IOPPTR)                               0415
         ST    @15,VLPLPTR                                         0415
*   VLPDLEN=LENGTH(IOPPTFMD(1));    /* LENGTH OF ENTRY               */
         MVI   VLPDLEN,X'07'                                       0416
*   RETURN;                         /*                               */
         B     @EL00004                                            0417
*                                                                  0418
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN EXIT FOR PEMAX KEYWORD                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0418
*RPEMAX:                            /*                               */
*   ENTRY;                          /*                               */
RPEMAX   STM   @14,@12,@SA00004                                    0418
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0419
         MVC   MSGPARTS+1(131),MSGPARTS                            0419
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION           */
         L     @15,SCPPTR                                          0420
         LH    @14,SCPPMLN(,@15)                                   0420
         BCTR  @14,0                                               0420
         L     @01,SCPCHAR(,@15)                                   0420
         EX    @14,@SM02025                                        0420
*   RETURN;                         /*                               */
         B     @EL00004                                            0421
*RPEMAXV:                                                          0422
*   ENTRY;                          /*                               */
*                                                                  0422
RPEMAXV  STM   @14,@12,@SA00004                                    0422
*   /*****************************************************************/
*   /*                                                               */
*   /* CONVERT PASSED VALUE INTO NEWPEMAX                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0423
*   CHAR8=EBCZEROS;                 /*                               */
         MVC   CHAR8(8),@CC01461                                   0423
*   CHAR8(9-SCPPMLN:8)=SCPSTRNG(1:SCPPMLN);/* MOVE DATA              */
         L     @15,SCPPTR                                          0424
         LA    @14,9                                               0424
         SH    @14,SCPPMLN(,@15)                                   0424
         LA    @01,CHAR8-1(@14)                                    0424
         LCR   @14,@14                                             0424
         AH    @14,@CH00036                                        0424
         L     @15,SCPCHAR(,@15)                                   0424
         EX    @14,@SM02027                                        0424
*   PACK(PACK8,CHAR8);              /* PACK DATA                     */
         PACK  PACK8(8),CHAR8(8)                                   0425
*   CVB(CVB15,PACK8);               /*                               */
         CVB   @15,PACK8                                           0426
         STH   @15,CVB15                                           0426
*   NEWPEMAX=CVB15;                 /* MOVE RC TO WORK AREA          */
*                                                                  0427
         STH   @15,NEWPEMAX                                        0427
*   /*****************************************************************/
*   /*                                                               */
*   /* CONVERT DATA IN PEMAX FOR POSSIBLE MESSAGES                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0428
*   CVD(IOPPTPEM,PACK8);            /*                               */
         LH    @15,IOPPTPEM(,IOPPTR)                               0428
         CVD   @15,PACK8                                           0428
*   UNPK(CHAR12,PACK8);             /*                               */
         UNPK  CHAR12(12),PACK8(8)                                 0429
*   CHAR12(12)=CHAR12(12)×HEX0;     /*                               */
         OI    CHAR12+11,X'F0'                                     0430
*   MSGPART3(1:4)=CHAR12(9:12);     /*                               */
*                                                                  0431
         MVC   MSGPART3(4),CHAR12+8                                0431
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW CHECK DATA ENTERED AGAINST FUNCTION REQUESTED AND CURRENT */
*   /* DATA VALUES                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0432
*   IF REP=ON                       /* IF REPLACE                    */
*     THEN                          /*                               */
         TM    REP,B'10000000'                                     0432
         BNO   @RF00432                                            0432
*     DO;                           /*                               */
*       IF IOPPTPEM=ZERO&TOTAL=OFF  /* IF NOT TOTAL REP              */
*         THEN                      /*                               */
         LTR   @15,@15                                             0434
         BNZ   @RF00434                                            0434
         TM    TOTAL,B'00010000'                                   0434
         BNZ   @RF00434                                            0434
*         CALL UCL358I;             /* ADD ASSUMED                   */
         BAL   @14,UCL358I                                         0435
*       IOPPTPEM=NEWPEMAX;          /* MOVE                          */
@RF00434 MVC   IOPPTPEM(2,IOPPTR),NEWPEMAX                         0436
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF ADD=ON                     /* IS IT ADD OPERATION           */
*       THEN                        /* EXIT BADLY TO SCAN            */
         B     @RC00432                                            0438
@RF00432 TM    ADD,B'00100000'                                     0438
         BNO   @RF00438                                            0438
*       DO;                         /*                               */
*         IF IOPPTPEM=ZERO          /* IF NO VALUE PRESENT           */
*           THEN                    /*                               */
         ICM   @15,3,IOPPTPEM(IOPPTR)                              0440
         BNZ   @RF00440                                            0440
*           IOPPTPEM=NEWPEMAX;      /* MOVE NEW VALUE                */
         MVC   IOPPTPEM(2,IOPPTR),NEWPEMAX                         0441
*         ELSE                      /*                               */
*           CALL UCL356I;           /* PEMAX ALREADY EXISTS          */
         B     @RC00440                                            0442
@RF00440 BAL   @14,UCL356I                                         0442
*       END;                        /*                               */
*     ELSE                          /* MUST BE DELETE                */
*       DO;                         /*                               */
         B     @RC00438                                            0444
@RF00438 DS    0H                                                  0445
*         IF IOPPTPEM=NEWPEMAX      /* IF VALUES EQUAL               */
*           THEN                    /*                               */
         CLC   IOPPTPEM(2,IOPPTR),NEWPEMAX                         0445
         BNE   @RF00445                                            0445
*           DO;                     /*                               */
*RPEMAXD:                           /*                               */
*             ENTRY;                /*                               */
         B     @EC00447                                            0447
RPEMAXD  STM   @14,@12,@SA00004                                    0447
@EC00447 DS    0H                                                  0448
*             IOPPTPEM=''B;         /* ZERO PEMAX                    */
         SLR   @15,@15                                             0448
         STH   @15,IOPPTPEM(,IOPPTR)                               0448
*           END;                    /*                               */
*         ELSE                      /*                               */
*           IF IOPPTPEM=ZERO        /* IF NO ENTRY                   */
*             THEN                  /*                               */
         B     @RC00445                                            0450
@RF00445 ICM   @15,3,IOPPTPEM(IOPPTR)                              0450
         BNZ   @RF00450                                            0450
*             CALL UCL357I;         /* ENTRY DOES NOT EXIST          */
         BAL   @14,UCL357I                                         0451
*           ELSE                    /*                               */
*             CALL UCL261I;         /* DATA DOES NOT MATCH           */
         B     @RC00450                                            0452
@RF00450 BAL   @14,UCL261I                                         0452
*       END;                        /*                               */
*   RETURN;                         /* RETURN TO HMASMSCN            */
         B     @EL00004                                            0454
*                                                                  0455
*   /*****************************************************************/
*   /*                                                               */
*   /* ENTRY TO PROCESS PURGE KEYWORD                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0455
*RPURGE:                            /*                               */
*   ENTRY;                          /*                               */
RPURGE   STM   @14,@12,@SA00004                                    0455
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       0456
         MVC   MSGPARTS+1(131),MSGPARTS                            0456
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @15,SCPPTR                                          0457
         LH    @14,SCPPMLN(,@15)                                   0457
         BCTR  @14,0                                               0457
         L     @01,SCPCHAR(,@15)                                   0457
         EX    @14,@SM02025                                        0457
*   IF DEL=ON                       /* IF DELETE                     */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     0458
         BNO   @RF00458                                            0458
*     DO;                           /*                               */
*       IF IOPPTSNP=OFF             /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPPTSNP(IOPPTR),B'10000000'                        0460
         BNZ   @RF00460                                            0460
*         IOPPTSNP=ON;              /* DELETE IT                     */
         OI    IOPPTSNP(IOPPTR),B'10000000'                        0461
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC00460                                            0462
@RF00460 BAL   @14,UCL357I                                         0462
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC00458                                            0464
@RF00458 TM    ADD,B'00100000'                                     0464
         BNO   @RF00464                                            0464
*       DO;                         /*                               */
*         IF IOPPTSNP=ON            /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPPTSNP(IOPPTR),B'10000000'                        0466
         BNO   @RF00466                                            0466
*           IOPPTSNP=OFF;           /* ADD IT                        */
         NI    IOPPTSNP(IOPPTR),B'01111111'                        0467
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC00466                                            0468
@RF00466 BAL   @14,UCL356I                                         0468
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPPTSNP=OFF;               /* ALWAYS ADD OPTION             */
         B     @RC00464                                            0470
@RF00464 NI    IOPPTSNP(IOPPTR),B'01111111'                        0470
*   RETURN;                         /* RETURN TO HMASMSCN            */
         B     @EL00004                                            0471
*                                                                  0472
*   /*****************************************************************/
*   /*                                                               */
*   /* ENTRY TO PROCESS REJECT KEYWORD                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0472
*RREJECT:                           /*                               */
*   ENTRY;                          /*                               */
RREJECT  STM   @14,@12,@SA00004                                    0472
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       0473
         MVC   MSGPARTS+1(131),MSGPARTS                            0473
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @15,SCPPTR                                          0474
         LH    @14,SCPPMLN(,@15)                                   0474
         BCTR  @14,0                                               0474
         L     @01,SCPCHAR(,@15)                                   0474
         EX    @14,@SM02025                                        0474
*   IF DEL=ON                       /* IF DELETE                     */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     0475
         BNO   @RF00475                                            0475
*     DO;                           /*                               */
*       IF IOPPTSNJ=OFF             /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPPTSNJ(IOPPTR),B'01000000'                        0477
         BNZ   @RF00477                                            0477
*         IOPPTSNJ=ON;              /* DELETE IT                     */
         OI    IOPPTSNJ(IOPPTR),B'01000000'                        0478
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC00477                                            0479
@RF00477 BAL   @14,UCL357I                                         0479
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC00475                                            0481
@RF00475 TM    ADD,B'00100000'                                     0481
         BNO   @RF00481                                            0481
*       DO;                         /*                               */
*         IF IOPPTSNJ=ON            /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPPTSNJ(IOPPTR),B'01000000'                        0483
         BNO   @RF00483                                            0483
*           IOPPTSNJ=OFF;           /* ADD IT                        */
         NI    IOPPTSNJ(IOPPTR),B'10111111'                        0484
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC00483                                            0485
@RF00483 BAL   @14,UCL356I                                         0485
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPPTSNJ=OFF;               /* ALWAYS ADD OPTION             */
         B     @RC00481                                            0487
@RF00481 NI    IOPPTSNJ(IOPPTR),B'10111111'                        0487
*   RETURN;                         /* RETURN TO HMASMSCN            */
         B     @EL00004                                            0488
*                                                                  0489
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTS FOR DSPFXFIX AT KEYWORD, THEN FOR VALUE ENTERED. CHECK  */
*   /* TO INSURE PREFIX NOT GREATER THAN MAX ALLOWED.                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0489
*RDSPFX:                            /*                               */
*   ENTRY;                          /*                               */
RDSPFX   STM   @14,@12,@SA00004                                    0489
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       0490
         MVC   MSGPARTS+1(131),MSGPARTS                            0490
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @15,SCPPTR                                          0491
         LH    @14,SCPPMLN(,@15)                                   0491
         BCTR  @14,0                                               0491
         L     @01,SCPCHAR(,@15)                                   0491
         EX    @14,@SM02025                                        0491
*   PFXLEN=ZERO;                    /* INIT PREFIX LENGTH            */
         SLR   @15,@15                                             0492
         ST    @15,PFXLEN                                          0492
*   SAVDATA(1:LENGTH(IOPDSPFX))=''; /* INIT SAVE AREA                */
         MVI   SAVDATA,C' '                                        0493
         MVC   SAVDATA+1(25),SAVDATA                               0493
*   RETURN;                         /*                               */
         B     @EL00004                                            0494
*RDSPFXV:                           /*                               */
*RDSPFXP:                           /*                               */
*   ENTRY;                          /*                               */
RDSPFXV  DS    0H                                                  0495
RDSPFXP  STM   @14,@12,@SA00004                                    0495
*   IF PFXLEN+SCPPMLN>LENGTH(IOPDSPFX)/* IF LENGTH EXCEEDED          */
*     THEN                          /*                               */
         L     @15,SCPPTR                                          0496
         LH    @14,SCPPMLN(,@15)                                   0496
         AL    @14,PFXLEN                                          0496
         CH    @14,@CH00568                                        0496
         BNH   @RF00496                                            0496
*     SCPRETRN=SCPSTOP;             /*                               */
         MVI   SCPRETRN(@15),X'08'                                 0497
*   ELSE                            /*                               */
*     DO;                           /*                               */
         B     @RC00496                                            0498
@RF00496 DS    0H                                                  0499
*       SAVDATA(PFXLEN+1:PFXLEN+SCPPMLN)=SCPSTRNG(1:SCPPMLN);/*      */
         L     @15,PFXLEN                                          0499
         LA    @14,SAVDATA(@15)                                    0499
         L     @07,SCPPTR                                          0499
         LH    @06,SCPPMLN(,@07)                                   0499
         LR    @05,@06                                             0499
         BCTR  @05,0                                               0499
         L     @01,SCPCHAR(,@07)                                   0499
         EX    @05,@SM02031                                        0499
*       PFXLEN=PFXLEN+SCPPMLN;      /*                               */
         ALR   @15,@06                                             0500
         ST    @15,PFXLEN                                          0500
*     END;                          /*                               */
*   RETURN;                         /*                               */
*                                                                  0502
         B     @EL00004                                            0502
*   /*****************************************************************/
*   /*                                                               */
*   /* DSPREFIX CLOSING PAREN FOUND. NOW CHECK DATA ENTERED, FUNCTION*/
*   /* REQUESTED AND PRESENT DATA IN DSPREFIX.                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0503
*RDSPFXRP:                          /*                               */
*   ENTRY;                          /*                               */
RDSPFXRP STM   @14,@12,@SA00004                                    0503
*   IF REP=ON                       /* IF REP BUT NOT TOTAL ADD      */
*     THEN                          /*                               */
         TM    REP,B'10000000'                                     0504
         BNO   @RF00504                                            0504
*     DO;                           /*                               */
*       IF IOPDSPFX(1)=BLANK&TOTAL=OFF/* AND DSPFXFIX NOT PRESENT    */
*         THEN                      /*                               */
         CLI   IOPDSPFX(IOPPTR),C' '                               0506
         BNE   @RF00506                                            0506
         TM    TOTAL,B'00010000'                                   0506
         BNZ   @RF00506                                            0506
*         CALL UCL358I;             /* ISSUE WARNING AND             */
         BAL   @14,UCL358I                                         0507
*       IOPDSPFX=SAVDATA(1:LENGTH(IOPDSPFX));/* MOVE PREFIX          */
@RF00506 MVC   IOPDSPFX(26,IOPPTR),SAVDATA                         0508
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF ADD=ON                     /* IF ADD                        */
*       THEN                        /*                               */
         B     @RC00504                                            0510
@RF00504 TM    ADD,B'00100000'                                     0510
         BNO   @RF00510                                            0510
*       DO;                         /*                               */
*         IF IOPDSPFX(1)=BLANK      /* AND NOT PRESENT               */
*           THEN                    /*                               */
         CLI   IOPDSPFX(IOPPTR),C' '                               0512
         BNE   @RF00512                                            0512
*           IOPDSPFX=SAVDATA(1:LENGTH(IOPDSPFX));/* MOVE PREFIX      */
         MVC   IOPDSPFX(26,IOPPTR),SAVDATA                         0513
*         ELSE                      /*                               */
*           CALL UCL356I;           /* IF PRESENT ISSUE ERR MSG      */
         B     @RC00512                                            0514
@RF00512 BAL   @14,UCL356I                                         0514
*       END;                        /*                               */
*     ELSE                          /*                               */
*       DO;                         /* IF DELETE                     */
         B     @RC00510                                            0516
@RF00510 DS    0H                                                  0517
*         IF IOPDSPFX=SAVDATA(1:LENGTH(IOPDSPFX))/* AND MATCH        */
*           THEN                    /*                               */
         CLC   IOPDSPFX(26,IOPPTR),SAVDATA                         0517
         BNE   @RF00517                                            0517
*           DO;                     /*                               */
*RDSPFXD:                           /*                               */
*             ENTRY;                /*                               */
         B     @EC00519                                            0519
RDSPFXD  STM   @14,@12,@SA00004                                    0519
@EC00519 DS    0H                                                  0520
*             IOPDSPFX='';          /* THEN DELETE IT                */
         MVI   IOPDSPFX(IOPPTR),C' '                               0520
         MVC   IOPDSPFX+1(25,IOPPTR),IOPDSPFX(IOPPTR)              0520
*           END;                    /*                               */
*         ELSE                      /*                               */
*           IF IOPDSPFX(1)=BLANK    /* IF NOTHIG PRESENT             */
*             THEN                  /*                               */
         B     @RC00517                                            0522
@RF00517 CLI   IOPDSPFX(IOPPTR),C' '                               0522
         BNE   @RF00522                                            0522
*             CALL UCL357I;         /* ISSUE CANT DELETE MSG         */
         BAL   @14,UCL357I                                         0523
*           ELSE                    /*                               */
*             CALL UCL261I;         /* ISSUE DOESNT MATCH MSG        */
         B     @RC00522                                            0524
@RF00522 BAL   @14,UCL261I                                         0524
*       END;                        /*                               */
*   RETURN;                         /*                               */
         B     @EL00004                                            0526
*                                                                  0527
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTS FOR DSSPACE OPTIONS                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0527
*RDSSPC:                            /*                               */
*   ENTRY;                          /*                               */
RDSSPC   STM   @14,@12,@SA00004                                    0527
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0528
         MVC   MSGPARTS+1(131),MSGPARTS                            0528
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/*                       */
         L     @15,SCPPTR                                          0529
         LH    @14,SCPPMLN(,@15)                                   0529
         BCTR  @14,0                                               0529
         L     @01,SCPCHAR(,@15)                                   0529
         EX    @14,@SM02025                                        0529
*   RETURN;                         /*                               */
*                                                                  0530
         B     @EL00004                                            0530
*   /*****************************************************************/
*   /*                                                               */
*   /* CONVERT PASSED VALUE INTO NEWSPACE FIELDS                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0531
*RDSSPCV1:                          /*                               */
*   ENTRY;                          /*                               */
RDSSPCV1 STM   @14,@12,@SA00004                                    0531
*   CHAR8=EBCZEROS;                 /*                               */
         MVC   CHAR8(8),@CC01461                                   0532
*   CHAR8(9-SCPPMLN:8)=SCPSTRNG(1:SCPPMLN);/* MOVE DATA              */
         L     @15,SCPPTR                                          0533
         LA    @14,9                                               0533
         SH    @14,SCPPMLN(,@15)                                   0533
         LA    @01,CHAR8-1(@14)                                    0533
         LCR   @14,@14                                             0533
         AH    @14,@CH00036                                        0533
         L     @07,SCPCHAR(,@15)                                   0533
         EX    @14,@SM02033                                        0533
*   PACK(PACK8,CHAR8);              /* PACK DATA                     */
         PACK  PACK8(8),CHAR8(8)                                   0534
*   CVB(CVB15,PACK8);               /*                               */
         CVB   @14,PACK8                                           0535
         STH   @14,CVB15                                           0535
*   NEWPRM=CVB15;                   /* MOVE VALUE TO WORK AREA       */
         STH   @14,NEWPRM                                          0536
*   IF NEWPRM=ZERO                  /* ZERO NOT ALLOWABLE VALUE      */
*     THEN                          /*                               */
         LTR   @14,@14                                             0537
         BNZ   @RF00537                                            0537
*     SCPRETRN=SCPSTOP;             /*                               */
         MVI   SCPRETRN(@15),X'08'                                 0538
*   RETURN;                         /*                               */
         B     @EL00004                                            0539
*RDSSPCV2:                          /*                               */
*   ENTRY;                          /*                               */
RDSSPCV2 STM   @14,@12,@SA00004                                    0540
*   CHAR8=EBCZEROS;                 /*                               */
         MVC   CHAR8(8),@CC01461                                   0541
*   CHAR8(9-SCPPMLN:8)=SCPSTRNG(1:SCPPMLN);/* MOVE DATA              */
         L     @15,SCPPTR                                          0542
         LA    @14,9                                               0542
         SH    @14,SCPPMLN(,@15)                                   0542
         LA    @01,CHAR8-1(@14)                                    0542
         LCR   @14,@14                                             0542
         AH    @14,@CH00036                                        0542
         L     @15,SCPCHAR(,@15)                                   0542
         EX    @14,@SM02027                                        0542
*   PACK(PACK8,CHAR8);              /* PACK DATA                     */
         PACK  PACK8(8),CHAR8(8)                                   0543
*   CVB(CVB15,PACK8);               /*                               */
         CVB   @15,PACK8                                           0544
         STH   @15,CVB15                                           0544
*   NEWSEC=CVB15;                   /* MOVE VALUE TO WORK AREA       */
         STH   @15,NEWSEC                                          0545
*   RETURN;                         /*                               */
         B     @EL00004                                            0546
*RDSSPCV3:                          /*                               */
*   ENTRY;                          /*                               */
RDSSPCV3 STM   @14,@12,@SA00004                                    0547
*   CHAR8=EBCZEROS;                 /*                               */
         MVC   CHAR8(8),@CC01461                                   0548
*   CHAR8(9-SCPPMLN:8)=SCPSTRNG(1:SCPPMLN);/* MOVE DATA              */
         L     @15,SCPPTR                                          0549
         LA    @14,9                                               0549
         SH    @14,SCPPMLN(,@15)                                   0549
         LA    @01,CHAR8-1(@14)                                    0549
         LCR   @14,@14                                             0549
         AH    @14,@CH00036                                        0549
         L     @07,SCPCHAR(,@15)                                   0549
         EX    @14,@SM02033                                        0549
*   PACK(PACK8,CHAR8);              /* PACK DATA                     */
         PACK  PACK8(8),CHAR8(8)                                   0550
*   CVB(CVB15,PACK8);               /*                               */
         CVB   @14,PACK8                                           0551
         STH   @14,CVB15                                           0551
*   NEWDIR=CVB15;                   /* MOVE VALUE TO WORK AREA       */
         STH   @14,NEWDIR                                          0552
*   IF NEWDIR=ZERO                  /* ZERO NOT ALLOWABLE VALUE      */
*     THEN                          /*                               */
         LTR   @14,@14                                             0553
         BNZ   @RF00553                                            0553
*     SCPRETRN=SCPSTOP;             /*                               */
         MVI   SCPRETRN(@15),X'08'                                 0554
*   RETURN;                         /*                               */
         B     @EL00004                                            0555
*                                                                  0556
*   /*****************************************************************/
*   /*                                                               */
*   /* ENTRY WHEN CLOSING PAREN FOUND FOR DSSPACE. FIRST CONVERT     */
*   /* EXISTING VALUES IN CASE MSG REQUIRED                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0556
*RDSSPCRP:                          /*                               */
*   ENTRY;                          /*                               */
RDSSPCRP STM   @14,@12,@SA00004                                    0556
*   CVD(IOPDSPRM,PACK8);            /*                               */
         LH    @15,IOPDSPRM(,IOPPTR)                               0557
         CVD   @15,PACK8                                           0557
*   UNPK(CHAR12,PACK8);             /*                               */
         UNPK  CHAR12(12),PACK8(8)                                 0558
*   CHAR12(12)=CHAR12(12)×HEX0;     /*                               */
         OI    CHAR12+11,X'F0'                                     0559
*   MSGPART3(1:4)=CHAR12(9:12);     /*                               */
         MVC   MSGPART3(4),CHAR12+8                                0560
*   MSGPART3(5)=',';                /*                               */
         MVI   MSGPART3+4,C','                                     0561
*   CVD(IOPDSSEC,PACK8);            /*                               */
         LH    @15,IOPDSSEC(,IOPPTR)                               0562
         CVD   @15,PACK8                                           0562
*   UNPK(CHAR12,PACK8);             /*                               */
         UNPK  CHAR12(12),PACK8(8)                                 0563
*   CHAR12(12)=CHAR12(12)×HEX0;     /*                               */
         OI    CHAR12+11,X'F0'                                     0564
*   MSGPART3(6:9)=CHAR12(9:12);     /*                               */
         MVC   MSGPART3+5(4),CHAR12+8                              0565
*   MSGPART3(10)=',';               /*                               */
         MVI   MSGPART3+9,C','                                     0566
*   CVD(IOPDSDIR,PACK8);            /*                               */
         LH    @15,IOPDSDIR(,IOPPTR)                               0567
         CVD   @15,PACK8                                           0567
*   UNPK(CHAR12,PACK8);             /*                               */
         UNPK  CHAR12(12),PACK8(8)                                 0568
*   CHAR12(12)=CHAR12(12)×HEX0;     /*                               */
         OI    CHAR12+11,X'F0'                                     0569
*   MSGPART3(11:14)=CHAR12(9:12);   /*                               */
         MVC   MSGPART3+10(4),CHAR12+8                             0570
*   MSGPART3(15)=',';               /*                               */
*                                                                  0571
         MVI   MSGPART3+14,C','                                    0571
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW CHECK VALUE ENTERED AND FUNCTION REQUESTED AGAINST DATA IN*/
*   /* ENTRY                                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0572
*   IF REP=ON                       /* IF REP BUT NOT TOTAL ADD      */
*     THEN                          /*                               */
         TM    REP,B'10000000'                                     0572
         BNO   @RF00572                                            0572
*     DO;                           /*                               */
*       IF IOPDSSPC=NULLSPC&TOTAL=OFF/* IF NOT THERE AND NOT ADD     */
*         THEN                      /*                               */
         CLC   IOPDSSPC(6,IOPPTR),NULLSPC                          0574
         BNE   @RF00574                                            0574
         TM    TOTAL,B'00010000'                                   0574
         BNZ   @RF00574                                            0574
*         CALL UCL358I;             /* ISSUE WARNING AND             */
         BAL   @14,UCL358I                                         0575
*       IOPDSSPC=NEWSPACE;          /* MOVE OVER NEW VALUE           */
@RF00574 MVC   IOPDSSPC(6,IOPPTR),NEWSPACE                         0576
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF ADD=ON                     /* IF ADD                        */
*       THEN                        /*                               */
         B     @RC00572                                            0578
@RF00572 TM    ADD,B'00100000'                                     0578
         BNO   @RF00578                                            0578
*       DO;                         /*                               */
*         IF IOPDSSPC=NULLSPC       /* AND NOT PRESENT               */
*           THEN                    /*                               */
         CLC   IOPDSSPC(6,IOPPTR),NULLSPC                          0580
         BNE   @RF00580                                            0580
*           IOPDSSPC=NEWSPACE;      /* MOVE NEW DATA                 */
         MVC   IOPDSSPC(6,IOPPTR),NEWSPACE                         0581
*         ELSE                      /*                               */
*           CALL UCL356I;           /* IF PRESENT ISSUE ERR MSG      */
         B     @RC00580                                            0582
@RF00580 BAL   @14,UCL356I                                         0582
*       END;                        /*                               */
*     ELSE                          /*                               */
*       DO;                         /* IF DELETE                     */
         B     @RC00578                                            0584
@RF00578 DS    0H                                                  0585
*         IF IOPDSSPC=NEWSPACE      /* AND MATCH                     */
*           THEN                    /*                               */
         CLC   IOPDSSPC(6,IOPPTR),NEWSPACE                         0585
         BNE   @RF00585                                            0585
*           DO;                     /*                               */
*RDSSPCD:                           /*                               */
*             ENTRY;                /*                               */
         B     @EC00587                                            0587
RDSSPCD  STM   @14,@12,@SA00004                                    0587
@EC00587 DS    0H                                                  0588
*             IOPDSSPC=NULLSPC;     /* THEN DELETE IT                */
         MVC   IOPDSSPC(6,IOPPTR),NULLSPC                          0588
*           END;                    /*                               */
*         ELSE                      /*                               */
*           IF IOPDSSPC=NULLSPC     /* IF NOTHIG PRESENT             */
*             THEN                  /*                               */
         B     @RC00585                                            0590
@RF00585 CLC   IOPDSSPC(6,IOPPTR),NULLSPC                          0590
         BNE   @RF00590                                            0590
*             CALL UCL357I;         /* ISSUE CANT DELETE MSG         */
         BAL   @14,UCL357I                                         0591
*           ELSE                    /*                               */
*             CALL UCL261I;         /* ISSUE DOESNT MATCH MSG        */
         B     @RC00590                                            0592
@RF00590 BAL   @14,UCL261I                                         0592
*       END;                        /*                               */
*   RETURN;                         /*                               */
         B     @EL00004                                            0594
*                                                                  0595
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTS FOR PAGELEN OPTION                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0595
*RPAGLN:                            /*                               */
*   ENTRY;                          /*                               */
RPAGLN   STM   @14,@12,@SA00004                                    0595
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0596
         MVC   MSGPARTS+1(131),MSGPARTS                            0596
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/*                       */
         L     @15,SCPPTR                                          0597
         LH    @14,SCPPMLN(,@15)                                   0597
         BCTR  @14,0                                               0597
         L     @01,SCPCHAR(,@15)                                   0597
         EX    @14,@SM02025                                        0597
*   RETURN;                         /*                               */
         B     @EL00004                                            0598
*RPAGLNV:                                                          0599
*   ENTRY;                          /*                               */
*                                                                  0599
RPAGLNV  STM   @14,@12,@SA00004                                    0599
*   /*****************************************************************/
*   /*                                                               */
*   /* CONVERT PASSED VALUE INTO NEWPAGLN                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0600
*   CHAR8=EBCZEROS;                 /*                               */
         MVC   CHAR8(8),@CC01461                                   0600
*   CHAR8(9-SCPPMLN:8)=SCPSTRNG(1:SCPPMLN);/* MOVE DATA              */
         L     @15,SCPPTR                                          0601
         LA    @14,9                                               0601
         SH    @14,SCPPMLN(,@15)                                   0601
         LA    @01,CHAR8-1(@14)                                    0601
         LCR   @14,@14                                             0601
         AH    @14,@CH00036                                        0601
         L     @15,SCPCHAR(,@15)                                   0601
         EX    @14,@SM02027                                        0601
*   PACK(PACK8,CHAR8);              /* PACK DATA                     */
         PACK  PACK8(8),CHAR8(8)                                   0602
*   CVB(CVB15,PACK8);               /*                               */
         CVB   @15,PACK8                                           0603
         STH   @15,CVB15                                           0603
*   NEWPAGLN=CVB15;                 /* MOVE TO WORK AREA             */
*                                                                  0604
         STH   @15,NEWPAGLN                                        0604
*   /*****************************************************************/
*   /*                                                               */
*   /* CONVERT DATA IN PAGLEN FOR POSSIBLE MESSAGES                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0605
*   CVD(IOPSYPLN,PACK8);            /*                               */
         LH    @15,IOPSYPLN(,IOPPTR)                               0605
         CVD   @15,PACK8                                           0605
*   UNPK(CHAR12,PACK8);             /*                               */
         UNPK  CHAR12(12),PACK8(8)                                 0606
*   CHAR12(12)=CHAR12(12)×HEX0;     /*                               */
         OI    CHAR12+11,X'F0'                                     0607
*   MSGPART3(1:4)=CHAR12(9:12);     /*                               */
*                                                                  0608
         MVC   MSGPART3(4),CHAR12+8                                0608
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW CHECK VALUE ENTERED, FUNCTION REQUESTED, AND CURRENT VALUE*/
*   /* OF DATA IN ENTRY.                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0609
*   IF REP=ON                       /* IF REPLACE                    */
*     THEN                          /*                               */
         TM    REP,B'10000000'                                     0609
         BNO   @RF00609                                            0609
*     DO;                           /*                               */
*       IF IOPSYPLN=ZERO&TOTAL=OFF  /* IF NOT TOTAL REP              */
*         THEN                      /*                               */
         LTR   @15,@15                                             0611
         BNZ   @RF00611                                            0611
         TM    TOTAL,B'00010000'                                   0611
         BNZ   @RF00611                                            0611
*         CALL UCL358I;             /* ADD ASSUMED                   */
         BAL   @14,UCL358I                                         0612
*       IOPSYPLN=NEWPAGLN;          /* MOVE                          */
@RF00611 MVC   IOPSYPLN(2,IOPPTR),NEWPAGLN                         0613
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF ADD=ON                     /* IS IT ADD OPERATION           */
*       THEN                        /* EXIT BADLY TO SCAN            */
         B     @RC00609                                            0615
@RF00609 TM    ADD,B'00100000'                                     0615
         BNO   @RF00615                                            0615
*       DO;                         /*                               */
*         IF IOPSYPLN=ZERO          /* IF NO VALUE PRESENT           */
*           THEN                    /*                               */
         ICM   @15,3,IOPSYPLN(IOPPTR)                              0617
         BNZ   @RF00617                                            0617
*           IOPSYPLN=NEWPAGLN;      /* MOVE NEW VALUE                */
         MVC   IOPSYPLN(2,IOPPTR),NEWPAGLN                         0618
*         ELSE                      /*                               */
*           CALL UCL356I;           /* PAGLN ALREADY EXISTS          */
         B     @RC00617                                            0619
@RF00617 BAL   @14,UCL356I                                         0619
*       END;                        /*                               */
*     ELSE                          /* MUST BE DELETE                */
*       DO;                         /*                               */
         B     @RC00615                                            0621
@RF00615 DS    0H                                                  0622
*         IF IOPSYPLN=NEWPAGLN      /* IF VALUES EQUAL               */
*           THEN                    /*                               */
         CLC   IOPSYPLN(2,IOPPTR),NEWPAGLN                         0622
         BNE   @RF00622                                            0622
*           DO;                     /*                               */
*RPAGLND:                           /*                               */
*             ENTRY;                /*                               */
         B     @EC00624                                            0624
RPAGLND  STM   @14,@12,@SA00004                                    0624
@EC00624 DS    0H                                                  0625
*             IOPSYPLN=''B;         /* ZERO PEMAX                    */
         SLR   @15,@15                                             0625
         STH   @15,IOPSYPLN(,IOPPTR)                               0625
*           END;                    /*                               */
*         ELSE                      /*                               */
*           IF IOPSYPLN=ZERO        /* IF NO ENTRY                   */
*             THEN                  /*                               */
         B     @RC00622                                            0627
@RF00622 ICM   @15,3,IOPSYPLN(IOPPTR)                              0627
         BNZ   @RF00627                                            0627
*             CALL UCL357I;         /* ENTRY DOES NOT EXIST          */
         BAL   @14,UCL357I                                         0628
*           ELSE                    /*                               */
*             CALL UCL261I;         /* DATA DOES NOT MATCH           */
         B     @RC00627                                            0629
@RF00627 BAL   @14,UCL261I                                         0629
*       END;                        /*                               */
*   RETURN;                         /* RETURN TO HMASMSCN            */
         B     @EL00004                                            0631
*                                                                  0632
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTS FOR UTILITY PROGRAM NAMES                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0632
*RASMNM:                            /*                               */
*   ENTRY;                          /*                               */
RASMNM   STM   @14,@12,@SA00004                                    0632
*   PGMPTR=ADDR(IOPSYASM);          /* PTR TO IOP FIELD              */
         LA    @15,IOPSYASM(,IOPPTR)                               0633
         ST    @15,PGMPTR                                          0633
*   GO TO RXXXNM;                   /*                               */
         B     RXXXNM                                              0634
*RCOMNM:                            /*                               */
*   ENTRY;                          /*                               */
RCOMNM   STM   @14,@12,@SA00004                                    0635
*   PGMPTR=ADDR(IOPSYCOM);          /* PTR TO IOP FIELD              */
         LA    @15,IOPSYCOM(,IOPPTR)                               0636
         ST    @15,PGMPTR                                          0636
*   GO TO RXXXNM;                   /*                               */
         B     RXXXNM                                              0637
*RCOPNM:                            /*                               */
*   ENTRY;                          /*                               */
RCOPNM   STM   @14,@12,@SA00004                                    0638
*   PGMPTR=ADDR(IOPSYCPY);          /* PTR TO IOP FIELD              */
         LA    @15,IOPSYCPY(,IOPPTR)                               0639
         ST    @15,PGMPTR                                          0639
*   GO TO RXXXNM;                   /*                               */
         B     RXXXNM                                              0640
*RLKDNM:                            /*                               */
*   ENTRY;                          /*                               */
RLKDNM   STM   @14,@12,@SA00004                                    0641
*   PGMPTR=ADDR(IOPSYLKD);          /* PTR TO IOP FIELD              */
         LA    @15,IOPSYLKD(,IOPPTR)                               0642
         ST    @15,PGMPTR                                          0642
*   GO TO RXXXNM;                   /*                               */
         B     RXXXNM                                              0643
*RSUPNM:                            /*                               */
*   ENTRY;                          /*                               */
RSUPNM   STM   @14,@12,@SA00004                                    0644
*   PGMPTR=ADDR(IOPSYSUP);          /* PTR TO IOP FIELD              */
         LA    @15,IOPSYSUP(,IOPPTR)                               0645
         ST    @15,PGMPTR                                          0645
*   GO TO RXXXNM;                   /*                               */
         B     RXXXNM                                              0646
*RUPDNM:                            /*                               */
*   ENTRY;                          /*                               */
RUPDNM   STM   @14,@12,@SA00004                                    0647
*   PGMPTR=ADDR(IOPSYUPD);          /* PTR TO IOP FIELD              */
         LA    @15,IOPSYUPD(,IOPPTR)                               0648
         ST    @15,PGMPTR                                          0648
*   GO TO RXXXNM;                   /*                               */
         B     RXXXNM                                              0649
*RZAPNM:                            /*                               */
*   ENTRY;                          /*                               */
RZAPNM   STM   @14,@12,@SA00004                                    0650
*   PGMPTR=ADDR(IOPSYZAP);          /* PTR TO IOP FIELD              */
         LA    @15,IOPSYZAP(,IOPPTR)                               0651
         ST    @15,PGMPTR                                          0651
*   GO TO RXXXNM;                   /*                               */
         B     RXXXNM                                              0652
*RXXXNM:                            /*                               */
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
RXXXNM   MVI   MSGPARTS,C' '                                       0653
         MVC   MSGPARTS+1(131),MSGPARTS                            0653
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @15,SCPPTR                                          0654
         LH    @14,SCPPMLN(,@15)                                   0654
         BCTR  @14,0                                               0654
         L     @01,SCPCHAR(,@15)                                   0654
         EX    @14,@SM02025                                        0654
*   RETURN;                         /*                               */
         B     @EL00004                                            0655
*RNAMV:                             /*                               */
*   ENTRY;                          /*                               */
RNAMV    STM   @14,@12,@SA00004                                    0656
*   SAVDATA(1:LENGTH(PGMNAME))=SCPSTRNG(1:SCPPMLN);/*                */
         MVI   SAVDATA+1,C' '                                      0657
         MVC   SAVDATA+2(6),SAVDATA+1                              0657
         L     @15,SCPPTR                                          0657
         LH    @14,SCPPMLN(,@15)                                   0657
         BCTR  @14,0                                               0657
         L     @01,SCPCHAR(,@15)                                   0657
         EX    @14,@SM02035                                        0657
*   IF REP=ON                       /* IF REP BUT NOT TOTAL ADD      */
*     THEN                          /*                               */
         TM    REP,B'10000000'                                     0658
         BNO   @RF00658                                            0658
*     DO;                           /*                               */
*       IF PGMNAME(1)=BLANK&TOTAL=OFF/* AND NAME NOT PRESENT         */
*         THEN                      /*                               */
         L     @01,PGMPTR                                          0660
         CLI   PGMNAME(@01),C' '                                   0660
         BNE   @RF00660                                            0660
         TM    TOTAL,B'00010000'                                   0660
         BNZ   @RF00660                                            0660
*         CALL UCL358I;             /* ISSUE WARNING AND             */
         BAL   @14,UCL358I                                         0661
*       PGMNAME=SAVDATA(1:LENGTH(PGMNAME));/*                        */
@RF00660 L     @01,PGMPTR                                          0662
         MVC   PGMNAME(8,@01),SAVDATA                              0662
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF ADD=ON                     /* IF ADD                        */
*       THEN                        /*                               */
         B     @RC00658                                            0664
@RF00658 TM    ADD,B'00100000'                                     0664
         BNO   @RF00664                                            0664
*       DO;                         /*                               */
*         IF PGMNAME(1)=BLANK       /* AND NOT PRESENT               */
*           THEN                    /*                               */
         L     @15,PGMPTR                                          0666
         CLI   PGMNAME(@15),C' '                                   0666
         BNE   @RF00666                                            0666
*           PGMNAME=SAVDATA(1:LENGTH(PGMNAME));/* ADD NAME           */
         MVC   PGMNAME(8,@15),SAVDATA                              0667
*         ELSE                      /*                               */
*           CALL UCL356I;           /* IF PRESENT ISSUE ERR MSG      */
         B     @RC00666                                            0668
@RF00666 BAL   @14,UCL356I                                         0668
*       END;                        /*                               */
*     ELSE                          /*                               */
*       DO;                         /* IF DELETE                     */
         B     @RC00664                                            0670
@RF00664 DS    0H                                                  0671
*         IF PGMNAME=SAVDATA(1:LENGTH(PGMNAME))/*                    */
*           THEN                    /*                               */
         L     @01,PGMPTR                                          0671
         CLC   PGMNAME(8,@01),SAVDATA                              0671
         BNE   @RF00671                                            0671
*           DO;                     /*                               */
*RNAMD:                             /*                               */
*             ENTRY;                /*                               */
         B     @EC00673                                            0673
RNAMD    STM   @14,@12,@SA00004                                    0673
@EC00673 DS    0H                                                  0674
*             PGMNAME='';           /* THEN DELETE IT                */
         L     @01,PGMPTR                                          0674
         MVI   PGMNAME(@01),C' '                                   0674
         MVC   PGMNAME+1(7,@01),PGMNAME(@01)                       0674
*           END;                    /*                               */
*         ELSE                      /*                               */
*           IF PGMNAME(1)=BLANK     /* IF NOTHIG PRESENT             */
*             THEN                  /*                               */
         B     @RC00671                                            0676
@RF00671 L     @01,PGMPTR                                          0676
         CLI   PGMNAME(@01),C' '                                   0676
         BNE   @RF00676                                            0676
*             CALL UCL357I;         /* ISSUE CANT DELETE MSG         */
         BAL   @14,UCL357I                                         0677
*           ELSE                    /*                               */
*             CALL UCL261I;         /* ISSUE DOESNT MATCH MSG        */
         B     @RC00676                                            0678
@RF00676 BAL   @14,UCL261I                                         0678
*       END;                        /*                               */
*   RETURN;                         /*                               */
         B     @EL00004                                            0680
*                                                                  0681
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTS FOR UTILITY SYSPRINT DD NAMES                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0681
*RASMPT:                            /*                               */
*   ENTRY;                          /*                               */
RASMPT   STM   @14,@12,@SA00004                                    0681
*   PRNTPTR=ADDR(IOPSYASS);         /* PTR TO IOP FIELD              */
         LA    @15,IOPSYASS(,IOPPTR)                               0682
         ST    @15,PRNTPTR                                         0682
*   GO TO RXXXPT;                   /*                               */
         B     RXXXPT                                              0683
*RCOMPT:                            /*                               */
*   ENTRY;                          /*                               */
RCOMPT   STM   @14,@12,@SA00004                                    0684
*   PRNTPTR=ADDR(IOPSYCOS);         /* PTR TO IOP FIELD              */
         LA    @15,IOPSYCOS(,IOPPTR)                               0685
         ST    @15,PRNTPTR                                         0685
*   GO TO RXXXPT;                   /*                               */
         B     RXXXPT                                              0686
*RCOPPT:                            /*                               */
*   ENTRY;                          /*                               */
RCOPPT   STM   @14,@12,@SA00004                                    0687
*   PRNTPTR=ADDR(IOPSYCPS);         /* PTR TO IOP FIELD              */
         LA    @15,IOPSYCPS(,IOPPTR)                               0688
         ST    @15,PRNTPTR                                         0688
*   GO TO RXXXPT;                   /*                               */
         B     RXXXPT                                              0689
*RLKDPT:                            /*                               */
*   ENTRY;                          /*                               */
RLKDPT   STM   @14,@12,@SA00004                                    0690
*   PRNTPTR=ADDR(IOPSYLKS);         /* PTR TO IOP FIELD              */
         LA    @15,IOPSYLKS(,IOPPTR)                               0691
         ST    @15,PRNTPTR                                         0691
*   GO TO RXXXPT;                   /*                               */
         B     RXXXPT                                              0692
*RSUPPT:                            /*                               */
*   ENTRY;                          /*                               */
RSUPPT   STM   @14,@12,@SA00004                                    0693
*   PRNTPTR=ADDR(IOPSYSPS);         /* PTR TO IOP FIELD              */
         LA    @15,IOPSYSPS(,IOPPTR)                               0694
         ST    @15,PRNTPTR                                         0694
*   GO TO RXXXPT;                   /*                               */
         B     RXXXPT                                              0695
*RUPDPT:                            /*                               */
*   ENTRY;                          /*                               */
RUPDPT   STM   @14,@12,@SA00004                                    0696
*   PRNTPTR=ADDR(IOPSYUPS);         /* PTR TO IOP FIELD              */
         LA    @15,IOPSYUPS(,IOPPTR)                               0697
         ST    @15,PRNTPTR                                         0697
*   GO TO RXXXPT;                   /*                               */
         B     RXXXPT                                              0698
*RZAPPT:                            /*                               */
*   ENTRY;                          /*                               */
RZAPPT   STM   @14,@12,@SA00004                                    0699
*   PRNTPTR=ADDR(IOPSYZPS);         /* PTR TO IOP FIELD              */
         LA    @15,IOPSYZPS(,IOPPTR)                               0700
         ST    @15,PRNTPTR                                         0700
*   GO TO RXXXPT;                   /*                               */
         B     RXXXPT                                              0701
*RXXXPT:                            /*                               */
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
RXXXPT   MVI   MSGPARTS,C' '                                       0702
         MVC   MSGPARTS+1(131),MSGPARTS                            0702
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @15,SCPPTR                                          0703
         LH    @14,SCPPMLN(,@15)                                   0703
         BCTR  @14,0                                               0703
         L     @01,SCPCHAR(,@15)                                   0703
         EX    @14,@SM02025                                        0703
*   RETURN;                         /*                               */
         B     @EL00004                                            0704
*RPRTV:                             /*                               */
*   ENTRY;                          /*                               */
RPRTV    STM   @14,@12,@SA00004                                    0705
*   SAVDATA(1:LENGTH(PGMPRNT))=SCPSTRNG(1:SCPPMLN);/*                */
         MVI   SAVDATA+1,C' '                                      0706
         MVC   SAVDATA+2(6),SAVDATA+1                              0706
         L     @15,SCPPTR                                          0706
         LH    @14,SCPPMLN(,@15)                                   0706
         BCTR  @14,0                                               0706
         L     @01,SCPCHAR(,@15)                                   0706
         EX    @14,@SM02035                                        0706
*   IF REP=ON                       /* IF REP BUT NOT TOTAL ADD      */
*     THEN                          /*                               */
         TM    REP,B'10000000'                                     0707
         BNO   @RF00707                                            0707
*     DO;                           /*                               */
*       IF PGMPRNT(1)=BLANK&TOTAL=OFF/* AND NAME NOT PRESENT         */
*         THEN                      /*                               */
         L     @01,PRNTPTR                                         0709
         CLI   PGMPRNT(@01),C' '                                   0709
         BNE   @RF00709                                            0709
         TM    TOTAL,B'00010000'                                   0709
         BNZ   @RF00709                                            0709
*         CALL UCL358I;             /* ISSUE WARNING AND             */
         BAL   @14,UCL358I                                         0710
*       PGMPRNT=SAVDATA(1:LENGTH(PGMPRNT));/*                        */
@RF00709 L     @01,PRNTPTR                                         0711
         MVC   PGMPRNT(8,@01),SAVDATA                              0711
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF ADD=ON                     /* IF ADD                        */
*       THEN                        /*                               */
         B     @RC00707                                            0713
@RF00707 TM    ADD,B'00100000'                                     0713
         BNO   @RF00713                                            0713
*       DO;                         /*                               */
*         IF PGMPRNT(1)=BLANK       /* AND NOT PRESENT               */
*           THEN                    /*                               */
         L     @15,PRNTPTR                                         0715
         CLI   PGMPRNT(@15),C' '                                   0715
         BNE   @RF00715                                            0715
*           PGMPRNT=SAVDATA(1:LENGTH(PGMPRNT));/* ADD NAME           */
         MVC   PGMPRNT(8,@15),SAVDATA                              0716
*         ELSE                      /*                               */
*           CALL UCL356I;           /* IF PRESENT ISSUE ERR MSG      */
         B     @RC00715                                            0717
@RF00715 BAL   @14,UCL356I                                         0717
*       END;                        /*                               */
*     ELSE                          /*                               */
*       DO;                         /* IF DELETE                     */
         B     @RC00713                                            0719
@RF00713 DS    0H                                                  0720
*         IF PGMPRNT=SAVDATA(1:LENGTH(PGMPRNT))/*                    */
*           THEN                    /*                               */
         L     @01,PRNTPTR                                         0720
         CLC   PGMPRNT(8,@01),SAVDATA                              0720
         BNE   @RF00720                                            0720
*           DO;                     /*                               */
*RPRTD:                             /*                               */
*             ENTRY;                /*                               */
         B     @EC00722                                            0722
RPRTD    STM   @14,@12,@SA00004                                    0722
@EC00722 DS    0H                                                  0723
*             PGMPRNT='';           /* THEN DELETE IT                */
         L     @01,PRNTPTR                                         0723
         MVI   PGMPRNT(@01),C' '                                   0723
         MVC   PGMPRNT+1(7,@01),PGMPRNT(@01)                       0723
*           END;                    /*                               */
*         ELSE                      /*                               */
*           IF PGMPRNT(1)=BLANK     /* IF NOTHIG PRESENT             */
*             THEN                  /*                               */
         B     @RC00720                                            0725
@RF00720 L     @01,PRNTPTR                                         0725
         CLI   PGMPRNT(@01),C' '                                   0725
         BNE   @RF00725                                            0725
*             CALL UCL357I;         /* ISSUE CANT DELETE MSG         */
         BAL   @14,UCL357I                                         0726
*           ELSE                    /*                               */
*             CALL UCL261I;         /* ISSUE DOESNT MATCH MSG        */
         B     @RC00725                                            0727
@RF00725 BAL   @14,UCL261I                                         0727
*       END;                        /*                               */
*   RETURN;                         /*                               */
         B     @EL00004                                            0729
*                                                                  0730
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTS FOR UTILITY RETURN CODES                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0730
*RASMRC:                            /*                               */
*   ENTRY;                          /*                               */
RASMRC   STM   @14,@12,@SA00004                                    0730
*   RCPTR=ADDR(IOPSYASR);           /* PTR TO IOP FIELD              */
         LA    @15,IOPSYASR(,IOPPTR)                               0731
         ST    @15,RCPTR                                           0731
*   GO TO RXXXRC;                   /*                               */
         B     RXXXRC                                              0732
*RCOMRC:                            /*                               */
*   ENTRY;                          /*                               */
RCOMRC   STM   @14,@12,@SA00004                                    0733
*   RCPTR=ADDR(IOPSYCOR);           /* PTR TO IOP FIELD              */
         LA    @15,IOPSYCOR(,IOPPTR)                               0734
         ST    @15,RCPTR                                           0734
*   GO TO RXXXRC;                   /*                               */
         B     RXXXRC                                              0735
*RCOPRC:                            /*                               */
*   ENTRY;                          /*                               */
RCOPRC   STM   @14,@12,@SA00004                                    0736
*   RCPTR=ADDR(IOPSYCPR);           /* PTR TO IOP FIELD              */
         LA    @15,IOPSYCPR(,IOPPTR)                               0737
         ST    @15,RCPTR                                           0737
*   GO TO RXXXRC;                   /*                               */
         B     RXXXRC                                              0738
*RLKDRC:                            /*                               */
*   ENTRY;                          /*                               */
RLKDRC   STM   @14,@12,@SA00004                                    0739
*   RCPTR=ADDR(IOPSYLKR);           /* PTR TO IOP FIELD              */
         LA    @15,IOPSYLKR(,IOPPTR)                               0740
         ST    @15,RCPTR                                           0740
*   GO TO RXXXRC;                   /*                               */
         B     RXXXRC                                              0741
*RSUPRC:                            /*                               */
*   ENTRY;                          /*                               */
RSUPRC   STM   @14,@12,@SA00004                                    0742
*   RCPTR=ADDR(IOPSYSPR);           /* PTR TO IOP FIELD              */
         LA    @15,IOPSYSPR(,IOPPTR)                               0743
         ST    @15,RCPTR                                           0743
*   GO TO RXXXRC;                   /*                               */
         B     RXXXRC                                              0744
*RUPDRC:                            /*                               */
*   ENTRY;                          /*                               */
RUPDRC   STM   @14,@12,@SA00004                                    0745
*   RCPTR=ADDR(IOPSYUPR);           /* PTR TO IOP FIELD              */
         LA    @15,IOPSYUPR(,IOPPTR)                               0746
         ST    @15,RCPTR                                           0746
*   GO TO RXXXPT;                   /*                               */
         B     RXXXPT                                              0747
*RZAPRC:                            /*                               */
*   ENTRY;                          /*                               */
RZAPRC   STM   @14,@12,@SA00004                                    0748
*   RCPTR=ADDR(IOPSYZPR);           /* PTR TO IOP FIELD              */
         LA    @15,IOPSYZPR(,IOPPTR)                               0749
         ST    @15,RCPTR                                           0749
*   GO TO RXXXRC;                   /*                               */
         B     RXXXRC                                              0750
*RXXXRC:                            /*                               */
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
RXXXRC   MVI   MSGPARTS,C' '                                       0751
         MVC   MSGPARTS+1(131),MSGPARTS                            0751
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @15,SCPPTR                                          0752
         LH    @14,SCPPMLN(,@15)                                   0752
         BCTR  @14,0                                               0752
         L     @01,SCPCHAR(,@15)                                   0752
         EX    @14,@SM02025                                        0752
*   RETURN;                         /*                               */
         B     @EL00004                                            0753
*RRCV:                              /*                               */
*   ENTRY;                          /*                               */
RRCV     STM   @14,@12,@SA00004                                    0754
*   SAVDATA(1:LENGTH(PGMPRNT))=SCPSTRNG(1:SCPPMLN);/*                */
*                                                                  0755
         MVI   SAVDATA+1,C' '                                      0755
         MVC   SAVDATA+2(6),SAVDATA+1                              0755
         L     @15,SCPPTR                                          0755
         LH    @14,SCPPMLN(,@15)                                   0755
         LR    @07,@14                                             0755
         BCTR  @07,0                                               0755
         L     @06,SCPCHAR(,@15)                                   0755
         EX    @07,@SM02037                                        0755
*   /*****************************************************************/
*   /*                                                               */
*   /* CONVERT PASSED VALUE INTO NEWRC                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0756
*   CHAR8=EBCZEROS;                 /*                               */
         MVC   CHAR8(8),@CC01461                                   0756
*   CHAR8(9-SCPPMLN:8)=SCPSTRNG(1:SCPPMLN);/* MOVE DATA              */
         LCR   @14,@14                                             0757
         AH    @14,@CH00538                                        0757
         LA    @01,CHAR8-1(@14)                                    0757
         LCR   @14,@14                                             0757
         AH    @14,@CH00036                                        0757
         EX    @14,@SM02039                                        0757
*   PACK(PACK8,CHAR8);              /* PACK DATA                     */
         PACK  PACK8(8),CHAR8(8)                                   0758
*   CVB(CVB15,PACK8);               /*                               */
         CVB   @14,PACK8                                           0759
         STH   @14,CVB15                                           0759
*   NEWRC=CVB15;                    /* MOVE RC TO WORK AREA          */
*                                                                  0760
         STC   @14,NEWRC                                           0760
*   /*****************************************************************/
*   /*                                                               */
*   /* CONVERT DATA IN RC FOR POSSIBLE MESSAGES                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0761
*   CVD(PGMRC,PACK8);               /*                               */
         L     @01,RCPTR                                           0761
         SLR   @00,@00                                             0761
         IC    @00,PGMRC(,@01)                                     0761
         CVD   @00,PACK8                                           0761
*   UNPK(CHAR12,PACK8);             /*                               */
         UNPK  CHAR12(12),PACK8(8)                                 0762
*   CHAR12(12)=CHAR12(12)×HEX0;     /*                               */
         OI    CHAR12+11,X'F0'                                     0763
*   MSGPART3(1:2)=CHAR12(11:12);    /*                               */
*                                                                  0764
         MVC   MSGPART3(2),CHAR12+10                               0764
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK DATA ENTEREED, FUNCTION REQUESTED, ANF CURRENT DATA IN  */
*   /* ENTRY. ALSO CHECK TO INSURE THAT RC MAX NOT EXCEEDED.         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0765
*   IF NEWRC>STOPSMP                /*                               */
*     THEN                          /*                               */
         CLI   NEWRC,16                                            0765
         BNH   @RF00765                                            0765
*     DO;                           /*                               */
*       SCPRETRN=SCPSTOP;           /*                               */
         MVI   SCPRETRN(@15),X'08'                                 0767
*       RETURN;                     /*                               */
         B     @EL00004                                            0768
*     END;                          /*                               */
*   IF REP=ON                       /* IF REP BUT NOT TOTAL ADD      */
*     THEN                          /*                               */
@RF00765 TM    REP,B'10000000'                                     0770
         BNO   @RF00770                                            0770
*     DO;                           /*                               */
*       IF PGMRC=IOPEOLST&TOTAL=OFF /* AND RC NOT PRESENT            */
*         THEN                      /*                               */
         L     @01,RCPTR                                           0772
         CLI   PGMRC(@01),255                                      0772
         BNE   @RF00772                                            0772
         TM    TOTAL,B'00010000'                                   0772
         BNZ   @RF00772                                            0772
*         CALL UCL358I;             /* ISSUE WARNING AND             */
         BAL   @14,UCL358I                                         0773
*       PGMRC=NEWRC;                /*                               */
@RF00772 L     @01,RCPTR                                           0774
         MVC   PGMRC(1,@01),NEWRC                                  0774
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF ADD=ON                     /* IF ADD                        */
*       THEN                        /*                               */
         B     @RC00770                                            0776
@RF00770 TM    ADD,B'00100000'                                     0776
         BNO   @RF00776                                            0776
*       DO;                         /*                               */
*         IF PGMRC=IOPEOLST         /* AND NOT PRESENT               */
*           THEN                    /*                               */
         L     @15,RCPTR                                           0778
         CLI   PGMRC(@15),255                                      0778
         BNE   @RF00778                                            0778
*           PGMRC=NEWRC;            /* ADD RC                        */
         MVC   PGMRC(1,@15),NEWRC                                  0779
*         ELSE                      /*                               */
*           CALL UCL356I;           /* IF PRESENT ISSUE ERR MSG      */
         B     @RC00778                                            0780
@RF00778 BAL   @14,UCL356I                                         0780
*       END;                        /*                               */
*     ELSE                          /*                               */
*       DO;                         /* IF DELETE                     */
         B     @RC00776                                            0782
@RF00776 DS    0H                                                  0783
*         IF PGMRC=NEWRC            /*                               */
*           THEN                    /*                               */
         L     @01,RCPTR                                           0783
         CLC   PGMRC(1,@01),NEWRC                                  0783
         BNE   @RF00783                                            0783
*           DO;                     /*                               */
*RRCD:                              /*                               */
*             ENTRY;                /*                               */
         B     @EC00785                                            0785
RRCD     STM   @14,@12,@SA00004                                    0785
@EC00785 DS    0H                                                  0786
*             PGMRC=IOPEOLST;       /* THEN DELETE IT                */
         L     @01,RCPTR                                           0786
         MVI   PGMRC(@01),X'FF'                                    0786
*           END;                    /*                               */
*         ELSE                      /*                               */
*           IF PGMRC=IOPEOLST       /* IF NOTHIG PRESENT             */
*             THEN                  /*                               */
         B     @RC00783                                            0788
@RF00783 L     @01,RCPTR                                           0788
         CLI   PGMRC(@01),255                                      0788
         BNE   @RF00788                                            0788
*             CALL UCL357I;         /* ISSUE CANT DELETE MSG         */
         BAL   @14,UCL357I                                         0789
*           ELSE                    /*                               */
*             CALL UCL261I;         /* ISSUE DOESNT MATCH MSG        */
         B     @RC00788                                            0790
@RF00788 BAL   @14,UCL261I                                         0790
*       END;                        /*                               */
*   RETURN;                         /*                               */
         B     @EL00004                                            0792
*                                                                  0793
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTS FOR UTILITY PARAMETERS                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0793
*RASMPRM:                           /*                               */
*   ENTRY;                          /*                               */
RASMPRM  STM   @14,@12,@SA00004                                    0793
*   PRMPTR=ADDR(IOPSYASP);          /* PTR TO IOP FIELD              */
         LA    @15,IOPSYASP(,IOPPTR)                               0794
         ST    @15,PRMPTR                                          0794
*   GO TO RXXXPRM;                  /*                               */
         B     RXXXPRM                                             0795
*RCOMPRM:                           /*                               */
*   ENTRY;                          /*                               */
RCOMPRM  STM   @14,@12,@SA00004                                    0796
*   PRMPTR=ADDR(IOPSYCOP);          /* PTR TO IOP FIELD              */
         LA    @15,IOPSYCOP(,IOPPTR)                               0797
         ST    @15,PRMPTR                                          0797
*   GO TO RXXXPRM;                  /*                               */
         B     RXXXPRM                                             0798
*RCOPPRM:                           /*                               */
*   ENTRY;                          /*                               */
RCOPPRM  STM   @14,@12,@SA00004                                    0799
*   PRMPTR=ADDR(IOPSYCPP);          /* PTR TO IOP FIELD              */
         LA    @15,IOPSYCPP(,IOPPTR)                               0800
         ST    @15,PRMPTR                                          0800
*   GO TO RXXXPRM;                  /*                               */
         B     RXXXPRM                                             0801
*RLKDPRM:                           /*                               */
*   ENTRY;                          /*                               */
RLKDPRM  STM   @14,@12,@SA00004                                    0802
*   PRMPTR=ADDR(IOPSYLKP);          /* PTR TO IOP FIELD              */
         LA    @15,IOPSYLKP(,IOPPTR)                               0803
         ST    @15,PRMPTR                                          0803
*   GO TO RXXXPRM;                  /*                               */
         B     RXXXPRM                                             0804
*RSUPPRM:                           /*                               */
*   ENTRY;                          /*                               */
RSUPPRM  STM   @14,@12,@SA00004                                    0805
*   PRMPTR=ADDR(IOPSYSPP);          /* PTR TO IOP FIELD              */
         LA    @15,IOPSYSPP(,IOPPTR)                               0806
         ST    @15,PRMPTR                                          0806
*   GO TO RXXXPRM;                  /*                               */
         B     RXXXPRM                                             0807
*RUPDPRM:                           /*                               */
*   ENTRY;                          /*                               */
RUPDPRM  STM   @14,@12,@SA00004                                    0808
*   PRMPTR=ADDR(IOPSYUPP);          /* PTR TO IOP FIELD              */
         LA    @15,IOPSYUPP(,IOPPTR)                               0809
         ST    @15,PRMPTR                                          0809
*   GO TO RXXXPRM;                  /*                               */
         B     RXXXPRM                                             0810
*RZAPPRM:                           /*                               */
*   ENTRY;                          /*                               */
RZAPPRM  STM   @14,@12,@SA00004                                    0811
*   PRMPTR=ADDR(IOPSYZPP);          /* PTR TO IOP FIELD              */
         LA    @15,IOPSYZPP(,IOPPTR)                               0812
         ST    @15,PRMPTR                                          0812
*   GO TO RXXXPRM;                  /*                               */
         B     RXXXPRM                                             0813
*RXXXPRM:                           /*                               */
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
RXXXPRM  MVI   MSGPARTS,C' '                                       0814
         MVC   MSGPARTS+1(131),MSGPARTS                            0814
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @15,SCPPTR                                          0815
         LH    @14,SCPPMLN(,@15)                                   0815
         BCTR  @14,0                                               0815
         L     @01,SCPCHAR(,@15)                                   0815
         EX    @14,@SM02025                                        0815
*   LPCNT=1;                        /*                               */
         MVC   LPCNT(4),@CF00042                                   0816
*   PRMLEN=ZERO;                    /*                               */
         SLR   @15,@15                                             0817
         ST    @15,PRMLEN                                          0817
*   SAVDATA(1:LENGTH(PGMPRM))='';   /*                               */
         MVI   SAVDATA,C' '                                        0818
         MVC   SAVDATA+1(99),SAVDATA                               0818
*   RETURN;                         /*                               */
*                                                                  0819
         B     @EL00004                                            0819
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK DATA ENTERED TO FIND MATCHING CLOSING PAREN. IF NOT     */
*   /* PAREN MOVE DATA TO PARM AREA. WHEN CLOSING PAREN FOUND SET BIT*/
*   /* INDICATING FOR SCAN TO CONTINUE AT SUCC ROUT. CHECK TO INSURE */
*   /* MAX PARM LEN NOT EXCEEDED.                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0820
*RPRMV:                             /*                               */
*   ENTRY;                          /*                               */
RPRMV    STM   @14,@12,@SA00004                                    0820
*   SCPNOSUC=ON;                    /* DONT RETURN TO SUCC DSCAN     */
         L     @15,SCPPTR                                          0821
         OI    SCPNOSUC(@15),B'00001000'                           0821
*   IF SCPPMLN=ZERO                 /*                               */
*     THEN                          /*                               */
         ICM   @14,3,SCPPMLN(@15)                                  0822
         BNZ   @RF00822                                            0822
*     SCPPMLN=1;                    /*                               */
         MVC   SCPPMLN(2,@15),@CH00042                             0823
*   IF SCPSTRNG(1)='('              /*                               */
*     THEN                          /*                               */
@RF00822 L     @01,SCPPTR                                          0824
         L     @01,SCPCHAR(,@01)                                   0824
         CLI   SCPSTRNG(@01),C'('                                  0824
         BNE   @RF00824                                            0824
*     LPCNT=LPCNT+1;                /*                               */
         LA    @15,1                                               0825
         AL    @15,LPCNT                                           0825
         ST    @15,LPCNT                                           0825
*   ELSE                            /*                               */
*     IF SCPSTRNG(1)=')'            /*                               */
*       THEN                        /*                               */
         B     @RC00824                                            0826
@RF00824 L     @15,SCPPTR                                          0826
         L     @01,SCPCHAR(,@15)                                   0826
         CLI   SCPSTRNG(@01),C')'                                  0826
         BNE   @RF00826                                            0826
*       DO;                         /*                               */
*         LPCNT=LPCNT-1;            /*                               */
         L     @14,LPCNT                                           0828
         BCTR  @14,0                                               0828
         ST    @14,LPCNT                                           0828
*         IF LPCNT=ZERO             /*                               */
*           THEN                    /*                               */
         LTR   @14,@14                                             0829
         BNZ   @RF00829                                            0829
*           DO;                     /*                               */
*             SCPNOSUC=OFF;         /* GO TO SUCC DSCAN NOW          */
         NI    SCPNOSUC(@15),B'11110111'                           0831
*             GO TO RPRMRP;         /* CHECK PARM VALUE              */
         B     RPRMRP                                              0832
*           END;                    /*                               */
*       END;                        /* END STRING IS RP              */
@RF00829 DS    0H                                                  0835
*   IF PRMLEN+SCPPMLN>LENGTH(PGMPRM)/* IF LENGTH EXCEEDED            */
*     THEN                          /*                               */
@RF00826 DS    0H                                                  0835
@RC00824 L     @15,SCPPTR                                          0835
         LH    @14,SCPPMLN(,@15)                                   0835
         AL    @14,PRMLEN                                          0835
         CH    @14,@CH00367                                        0835
         BNH   @RF00835                                            0835
*     SCPRETRN=SCPSTOP;             /*                               */
         MVI   SCPRETRN(@15),X'08'                                 0836
*   ELSE                            /*                               */
*     DO;                           /*                               */
         B     @RC00835                                            0837
@RF00835 DS    0H                                                  0838
*       SAVDATA(PRMLEN+1:PRMLEN+SCPPMLN)=SCPSTRNG(1:SCPPMLN);/*      */
         L     @15,PRMLEN                                          0838
         LA    @14,SAVDATA(@15)                                    0838
         L     @07,SCPPTR                                          0838
         LH    @06,SCPPMLN(,@07)                                   0838
         LR    @05,@06                                             0838
         BCTR  @05,0                                               0838
         L     @01,SCPCHAR(,@07)                                   0838
         EX    @05,@SM02031                                        0838
*       PRMLEN=PRMLEN+SCPPMLN;      /*                               */
         ALR   @15,@06                                             0839
         ST    @15,PRMLEN                                          0839
*     END;                          /*                               */
*   RETURN;                         /*                               */
*                                                                  0841
         B     @EL00004                                            0841
*   /*****************************************************************/
*   /*                                                               */
*   /* CLOSING PARM PAREN FOUND. NOW CHECK DATA ENTERED, FUNCTION    */
*   /* REQUESTED, AND CURRENT DATA IN ENTRY.                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0842
*RPRMRP:                            /*                               */
*   IF REP=ON                       /* IF REP BUT NOT TOTAL ADD      */
*     THEN                          /*                               */
RPRMRP   TM    REP,B'10000000'                                     0842
         BNO   @RF00842                                            0842
*     DO;                           /*                               */
*       IF PGMPRM(1)=BLANK&TOTAL=OFF/* AND PRM NOT PRESENT           */
*         THEN                      /*                               */
         L     @01,PRMPTR                                          0844
         CLI   PGMPRM(@01),C' '                                    0844
         BNE   @RF00844                                            0844
         TM    TOTAL,B'00010000'                                   0844
         BNZ   @RF00844                                            0844
*         CALL UCL358I;             /* ISSUE WARNING AND             */
         BAL   @14,UCL358I                                         0845
*       PGMPRM=SAVDATA(1:LENGTH(PGMPRM));/*                          */
@RF00844 L     @01,PRMPTR                                          0846
         MVC   PGMPRM(100,@01),SAVDATA                             0846
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF ADD=ON                     /* IF ADD                        */
*       THEN                        /*                               */
         B     @RC00842                                            0848
@RF00842 TM    ADD,B'00100000'                                     0848
         BNO   @RF00848                                            0848
*       DO;                         /*                               */
*         IF PGMPRM(1)=BLANK        /* AND NOT PRESENT               */
*           THEN                    /*                               */
         L     @15,PRMPTR                                          0850
         CLI   PGMPRM(@15),C' '                                    0850
         BNE   @RF00850                                            0850
*           PGMPRM=SAVDATA(1:LENGTH(PGMPRM));/*                      */
         MVC   PGMPRM(100,@15),SAVDATA                             0851
*         ELSE                      /*                               */
*           CALL UCL356I;           /* IF PRESENT ISSUE ERR MSG      */
         B     @RC00850                                            0852
@RF00850 BAL   @14,UCL356I                                         0852
*       END;                        /*                               */
*     ELSE                          /*                               */
*       DO;                         /* IF DELETE                     */
         B     @RC00848                                            0854
@RF00848 DS    0H                                                  0855
*         IF PGMPRM=SAVDATA(1:LENGTH(PGMPRM))/*                      */
*           THEN                    /*                               */
         L     @01,PRMPTR                                          0855
         CLC   PGMPRM(100,@01),SAVDATA                             0855
         BNE   @RF00855                                            0855
*           DO;                     /*                               */
*RPRMD:                             /*                               */
*             ENTRY;                /*                               */
         B     @EC00857                                            0857
RPRMD    STM   @14,@12,@SA00004                                    0857
@EC00857 DS    0H                                                  0858
*             PGMPRM='';            /* THEN DELETE IT                */
         L     @01,PRMPTR                                          0858
         MVI   PGMPRM(@01),C' '                                    0858
         MVC   PGMPRM+1(99,@01),PGMPRM(@01)                        0858
*           END;                    /*                               */
*         ELSE                      /*                               */
*           IF PGMPRM(1)=BLANK      /* IF NOTHIG PRESENT             */
*             THEN                  /*                               */
         B     @RC00855                                            0860
@RF00855 L     @01,PRMPTR                                          0860
         CLI   PGMPRM(@01),C' '                                    0860
         BNE   @RF00860                                            0860
*             CALL UCL357I;         /* ISSUE CANT DELETE MSG         */
         BAL   @14,UCL357I                                         0861
*           ELSE                    /*                               */
*             CALL UCL261I;         /* ISSUE DOESNT MATCH MSG        */
         B     @RC00860                                            0862
@RF00860 BAL   @14,UCL261I                                         0862
*       END;                        /*                               */
*   RETURN;                         /*                               */
         B     @EL00004                                            0864
*   END RSYSXXX;                    /* END SYSTEM OPTIONS            */
         B     @EL00004                                            0865
         EJECT
*                                                                  0866
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN EXITS FOR SYSMOD ENTRY KEYWORDS AND OPTIONS              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0866
*RSMDXXX:                           /*                               */
*   PROCEDURE;                      /*                               */
*                                                                  0866
RSMDXXX  STM   @14,@12,@SA00005                                    0866
*   /*****************************************************************/
*   /*                                                               */
*   /* PTF APPLIED STATUS SCAN EXIT                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0867
*RSMDAPP:                                                          0867
*   ENTRY;                          /*                               */
         B     @EC00867                                            0867
RSMDAPP  STM   @14,@12,@SA00005                                    0867
@EC00867 DS    0H                                                  0868
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       0868
         MVC   MSGPARTS+1(131),MSGPARTS                            0868
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @15,SCPPTR                                          0869
         LH    @14,SCPPMLN(,@15)                                   0869
         BCTR  @14,0                                               0869
         L     @01,SCPCHAR(,@15)                                   0869
         EX    @14,@SM02025                                        0869
*   IF DEL=ON                       /* IF OPTION TO BE DEL           */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     0870
         BNO   @RF00870                                            0870
*     DO;                           /*                               */
*       IF IOPAPP=ON                /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPAPP(IOPPTR),B'10000000'                          0872
         BNO   @RF00872                                            0872
*         IOPAPP=OFF;               /* DELETE IT                     */
         NI    IOPAPP(IOPPTR),B'01111111'                          0873
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC00872                                            0874
@RF00872 BAL   @14,UCL357I                                         0874
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC00870                                            0876
@RF00870 TM    ADD,B'00100000'                                     0876
         BNO   @RF00876                                            0876
*       DO;                         /*                               */
*         IF IOPAPP=OFF             /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPAPP(IOPPTR),B'10000000'                          0878
         BNZ   @RF00878                                            0878
*           IOPAPP=ON;              /* ADD IT                        */
         OI    IOPAPP(IOPPTR),B'10000000'                          0879
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC00878                                            0880
@RF00878 BAL   @14,UCL356I                                         0880
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPAPP=ON;                  /* ALWAYS ADD OPTION             */
         B     @RC00876                                            0882
@RF00876 OI    IOPAPP(IOPPTR),B'10000000'                          0882
*   RETURN;                         /* RETURN TO SCAN                */
@EL00005 DS    0H                                                  0883
@EF00005 DS    0H                                                  0883
@ER00005 LM    @14,@12,@SA00005                                    0883
         BR    @14                                                 0883
*                                                                  0884
*   /*****************************************************************/
*   /*                                                               */
*   /* PTF ACCEPTED STATUS SCAN EXIT                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0884
*RSMDACC:                                                          0884
*   ENTRY;                          /*                               */
RSMDACC  STM   @14,@12,@SA00005                                    0884
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       0885
         MVC   MSGPARTS+1(131),MSGPARTS                            0885
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @15,SCPPTR                                          0886
         LH    @14,SCPPMLN(,@15)                                   0886
         BCTR  @14,0                                               0886
         L     @01,SCPCHAR(,@15)                                   0886
         EX    @14,@SM02025                                        0886
*   IF DEL=ON                       /* IF OPTION TO BE DEL           */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     0887
         BNO   @RF00887                                            0887
*     DO;                           /*                               */
*       IF IOPACC=ON                /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPACC(IOPPTR),B'00100000'                          0889
         BNO   @RF00889                                            0889
*         IOPACC=OFF;               /* DELETE IT                     */
         NI    IOPACC(IOPPTR),B'11011111'                          0890
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC00889                                            0891
@RF00889 BAL   @14,UCL357I                                         0891
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC00887                                            0893
@RF00887 TM    ADD,B'00100000'                                     0893
         BNO   @RF00893                                            0893
*       DO;                         /*                               */
*         IF IOPACC=OFF             /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPACC(IOPPTR),B'00100000'                          0895
         BNZ   @RF00895                                            0895
*           IOPACC=ON;              /* ADD IT                        */
         OI    IOPACC(IOPPTR),B'00100000'                          0896
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC00895                                            0897
@RF00895 BAL   @14,UCL356I                                         0897
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPACC=ON;                  /* ALWAYS ADD OPTION             */
         B     @RC00893                                            0899
@RF00893 OI    IOPACC(IOPPTR),B'00100000'                          0899
*   RETURN;                         /* RETURN TO SCAN                */
         B     @EL00005                                            0900
*                                                                  0901
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT CALLED FOR CDSID AND ACDSID                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0901
*RSMDCID:                           /*                               */
*   ENTRY;                          /*                               */
RSMDCID  STM   @14,@12,@SA00005                                    0901
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0902
         MVC   MSGPARTS+1(131),MSGPARTS                            0902
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @15,SCPPTR                                          0903
         LH    @14,SCPPMLN(,@15)                                   0903
         BCTR  @14,0                                               0903
         L     @01,SCPCHAR(,@15)                                   0903
         EX    @14,@SM02025                                        0903
*   VLPTYPE=IOPPAPID;               /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'28'                                       0904
*   VLPLPTR=ADDR(IOPPMODS(1));      /* SET PTR TO FIRST PTF SUB-   0905
*                                      ENTRY                         */
         LA    @15,IOPPMODS(,IOPPTR)                               0905
         ST    @15,VLPLPTR                                         0905
*   VLPDLEN=LENGTH(IOPPMODS(1));    /* SET LEN OF ENT                */
         MVI   VLPDLEN,X'08'                                       0906
*   RETURN;                         /*                               */
         B     @EL00005                                            0907
*RSMDAID:                           /*                               */
*   ENTRY;                          /*                               */
RSMDAID  STM   @14,@12,@SA00005                                    0908
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0909
         MVC   MSGPARTS+1(131),MSGPARTS                            0909
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @15,SCPPTR                                          0910
         LH    @14,SCPPMLN(,@15)                                   0910
         BCTR  @14,0                                               0910
         L     @01,SCPCHAR(,@15)                                   0910
         EX    @14,@SM02025                                        0910
*   VLPTYPE=IOPPACID;               /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'29'                                       0911
*   VLPLPTR=ADDR(IOPPMODS(1));      /* SET PTR TO FIRST PTF SUB-   0912
*                                      ENTRY                         */
         LA    @15,IOPPMODS(,IOPPTR)                               0912
         ST    @15,VLPLPTR                                         0912
*   VLPDLEN=LENGTH(IOPPMODS(1));    /* SET LEN OF ENT                */
         MVI   VLPDLEN,X'08'                                       0913
*   RETURN;                         /* RETURN TO SCAN                */
         B     @EL00005                                            0914
*   END RSMDXXX;                    /*                               */
         B     @EL00005                                            0915
         EJECT
*                                                                  0916
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROCEDURE CONTAINS ENTRIES ASSOCIATED WITH PROCESSING    */
*   /* UPDATES TO VARIABLE LISTS WITHIN AN ENTRY.                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0916
*ELEMSCAN:                          /*                               */
*   PROCEDURE;                      /*                               */
*                                                                  0916
ELEMSCAN STM   @14,@12,@SA00006                                    0916
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS USED TO RESET THE FIRST TIME REPL SWITCH WHEN */
*   /* ANOTHER KEYWORD IS HIT SO THAT THE REPL COMPRESS/DELETE CODE  */
*   /* WILL BE EXECUTED                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0917
*RSRELLP:                           /*                               */
*RFMIDLP:                           /*                               */
*RSMDXLP:                           /*                               */
*   ENTRY;                          /*                               */
         B     @EC00917                                            0917
RSRELLP  DS    0H                                                  0917
RFMIDLP  DS    0H                                                  0917
RSMDXLP  STM   @14,@12,@SA00006                                    0917
@EC00917 DS    0H                                                  0918
*   FRSTREPL=OFF;                   /* RESET SWITCH                  */
*   UNCDEL=OFF;                     /* NOT UNC DEL                   */
         NI    FRSTREPL,B'11111001'                                0919
*   RETURN;                         /*                               */
*                                                                  0920
@EL00006 DS    0H                                                  0920
@EF00006 DS    0H                                                  0920
@ER00006 LM    @14,@12,@SA00006                                    0920
         BR    @14                                                 0920
*   /*****************************************************************/
*   /*                                                               */
*   /* THESE ENTRY POINTS ARE CALLED OUT OF SCAN FOR ADD, DEL, REP   */
*   /* REQUESTS ON ONE DATA ITEM                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0921
*RSRELV:                            /* SYSTEM SREL                   */
*RFMIDV:                            /* SYSTEM FMID                   */
*RSMDXNAM:                          /* SYSMOD CDSID/ACDSID           */
*   ENTRY;                          /*                               */
RSRELV   DS    0H                                                  0921
RFMIDV   DS    0H                                                  0921
RSMDXNAM STM   @14,@12,@SA00006                                    0921
*   MSGPART2(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE NAME             */
         L     @15,SCPPTR                                          0922
         LH    @14,SCPPMLN(,@15)                                   0922
         BCTR  @14,0                                               0922
         L     @15,SCPCHAR(,@15)                                   0922
         EX    @14,@SM02043                                        0922
*   VLPDATA=''B;                    /*                               */
         XC    VLPDATA(8),VLPDATA                                  0923
*   VLPDATA(1:VLPDLEN)=BLANK8(1:VLPDLEN);/*                          */
         SLR   @07,@07                                             0924
         IC    @07,VLPDLEN                                         0924
         BCTR  @07,0                                               0924
         EX    @07,@SM02045                                        0924
*   VLPDATA(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/*                        */
         EX    @14,@SM02047                                        0925
*   GO TO ELEMCALL;                 /*                               */
*                                                                  0926
         B     ELEMCALL                                            0926
*   /*****************************************************************/
*   /*                                                               */
*   /* THESE ENTRY POINTS ARE CALLED FOR UNCONDITIONAL DELETES FOR A */
*   /* LIST OF ITEMS                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0927
*RSRELD:                            /* SYSTEM SREL                   */
*RFMIDD:                            /* SYSTEM FMID                   */
*RSMDXDEL:                          /* SYSMOD CDSID/ACDSID           */
*   ENTRY;                          /*                               */
RSRELD   DS    0H                                                  0927
RFMIDD   DS    0H                                                  0927
RSMDXDEL STM   @14,@12,@SA00006                                    0927
*   UNCDEL=ON;                      /*                               */
         OI    UNCDEL,B'00000100'                                  0928
*   GO TO ELEMCALL;                 /*                               */
*                                                                  0929
         B     ELEMCALL                                            0929
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERFACE WITH HMASMVLU. FOR SET VLU FUNCTION                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0930
*ELEMCALL:                          /*                               */
*   IF ADD=ON                       /*                               */
*       ×TOTAL=ON                   /*                               */
*     THEN                          /*                               */
ELEMCALL TM    ADD,B'00110000'                                     0930
         BZ    @RF00930                                            0930
*     VLPFUNCT=VLPADD;              /*                               */
         MVI   VLPFUNCT,X'01'                                      0931
*   ELSE                            /*                               */
*     IF REP=ON                     /*                               */
*       THEN                        /*                               */
         B     @RC00930                                            0932
@RF00930 TM    REP,B'10000000'                                     0932
         BNO   @RF00932                                            0932
*       DO;                         /*                               */
*         IF FRSTREPL=OFF           /*                               */
*           THEN                    /*                               */
         TM    FRSTREPL,B'00000010'                                0934
         BNZ   @RF00934                                            0934
*           DO;                     /*                               */
*             FRSTREPL=ON;          /*                               */
         OI    FRSTREPL,B'00000010'                                0936
*             VLPFUNCT=VLPREP;      /*                               */
         MVI   VLPFUNCT,X'03'                                      0937
*           END;                    /*                               */
*         ELSE                      /*                               */
*           VLPFUNCT=VLPADD;        /*                               */
         B     @RC00934                                            0939
@RF00934 MVI   VLPFUNCT,X'01'                                      0939
*       END;                        /*                               */
*     ELSE                          /*                               */
*       IF UNCDEL=ON                /*                               */
*         THEN                      /*                               */
         B     @RC00932                                            0941
@RF00932 TM    UNCDEL,B'00000100'                                  0941
         BNO   @RF00941                                            0941
*         VLPFUNCT=VLPCLR;          /*                               */
         MVI   VLPFUNCT,X'04'                                      0942
*       ELSE                        /*                               */
*         VLPFUNCT=VLPDEL;          /*                               */
*                                                                  0943
         B     @RC00941                                            0943
@RF00941 MVI   VLPFUNCT,X'02'                                      0943
*   /*****************************************************************/
*   /*                                                               */
*   /* SET TYPES FOR POSSIBLE MESSAGE FROM VLU                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0944
*   VLPMTYPE=CCATYPEA(IOPTYPE);     /*                               */
@RC00941 DS    0H                                                  0944
@RC00932 DS    0H                                                  0944
@RC00930 SLR   @15,@15                                             0944
         IC    @15,IOPTYPE(,IOPPTR)                                0944
         SLA   @15,3                                               0944
         L     @01,CCATPAD(,CCAPTR)                                0944
         ALR   @01,@15                                             0944
         AL    @01,@CF02049                                        0944
         MVC   VLPMTYPE(8),CCATYPEA(@01)                           0944
*   VLPMNAME=IOPNAME;               /*                               */
         MVC   VLPMNAME(8),IOPNAME(IOPPTR)                         0945
*   VLPSTYPE=MSGPART1;              /*                               */
*                                                                  0946
         MVC   VLPSTYPE(16),MSGPART1                               0946
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL VLU AND PROCESS RETURN CODE                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0947
*   CALL HMASMVLU(HMASMVLP);        /*                               */
         L     @15,@CV01412                                        0947
         LA    @01,@AL00947                                        0947
         BALR  @14,@15                                             0947
*   UCLRTNCD=MAX(UCLRTNCD,VLPRETRN);/* SAVE RC                       */
         SLR   @15,@15                                             0948
         IC    @15,UCLRTNCD                                        0948
         SLR   @14,@14                                             0948
         IC    @14,VLPRETRN                                        0948
         CR    @15,@14                                             0948
         BNL   *+6
         LR    @15,@14                                             0948
         STC   @15,UCLRTNCD                                        0948
*   IF VLPRETRN>VLPWARN             /* IF ERR                        */
*     THEN                          /*                               */
         CLI   VLPRETRN,4                                          0949
         BNH   @RF00949                                            0949
*     ERR2SW=ON;                    /* SET ERR SW                    */
         OI    ERR2SW,B'01000000'                                  0950
*   RETURN;                         /*                               */
         B     @EL00006                                            0951
*   END ELEMSCAN;                   /*                               */
         B     @EL00006                                            0952
         EJECT
*                                                                  0953
*   /*****************************************************************/
*   /*                                                               */
*   /* A SYNTAX ERROR WAS DETECTED BY A SCAN EXIT ROUTINE - INDICATE */
*   /* THE ERROR TO THE UCL CONTROL TABLE AND STOP THE SCAN          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0953
*RXTRADTA:                                                         0953
*   PROCEDURE;                      /*                               */
RXTRADTA STM   @14,@12,12(@13)                                     0953
*   ERRAFTPR=ON;                    /* SET ERROR CONTROL SWITCH      */
         OI    ERRAFTPR,B'00100000'                                0954
*   SCPRETRN=SCPSTOP;               /*                               */
         L     @01,SCPPTR                                          0955
         MVI   SCPRETRN(@01),X'08'                                 0955
*   RETURN;                         /* RETURN BUT STOP THE SCAN      */
@EL00007 DS    0H                                                  0956
@EF00007 DS    0H                                                  0956
@ER00007 LM    @14,@12,12(@13)                                     0956
         BR    @14                                                 0956
*   END RXTRADTA;                   /*                               */
*                                                                  0958
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN THE CONTROL STATEMENT LOOKING FOR A PERIOD (.)           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0958
*FLUSH:                                                            0958
*   PROCEDURE;                      /*                               */
FLUSH    STM   @14,@12,@SA00008                                    0958
*   SCPSRCH=ADFLSHTB;               /* POINT AT THE FLUSH TABLE      */
         L     @15,SCPPTR                                          0959
         MVC   SCPSRCH(4,@15),ADFLSHTB                             0959
*   SCPCHAR=ADDR(CRPBUFFR);         /* POINT TO SAVED RCD            */
         L     @14,@PC00001+4                                      0960
         LA    @14,CRPBUFFR(,@14)                                  0960
         ST    @14,SCPCHAR(,@15)                                   0960
*   CALL HMASMSCN(HMASMSCP);        /* SCAN FOR ENDING .             */
         ST    @15,@AL00001                                        0961
         L     @15,@CV01410                                        0961
         LA    @01,@AL00001                                        0961
         BALR  @14,@15                                             0961
*   ERR1SW=ON;                      /*                               */
         OI    ERR1SW,B'10000000'                                  0962
*   RETURN CODE(0);                 /* RETURN                        */
         SLR   @15,@15                                             0963
         L     @14,@SA00008                                        0963
         LM    @00,@12,@SA00008+8                                  0963
         BR    @14                                                 0963
*   END FLUSH;                      /*                               */
*                                                                  0964
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN EXIT FOR THE FLUSH ROUTINE                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0965
*RFLUSHCH:                                                         0965
*   PROCEDURE;                      /*                               */
RFLUSHCH STM   @14,@12,12(@13)                                     0965
*   IF SCPPMLN=ZERO                 /* TEST FOR ZERO PASS BACK       */
*     THEN                                                         0966
         L     @15,SCPPTR                                          0966
         ICM   @14,3,SCPPMLN(@15)                                  0966
         BNZ   @RF00966                                            0966
*     SCPPMLN=1;                    /* IF ZERO, SET TO ONE           */
         MVC   SCPPMLN(2,@15),@CH00042                             0967
*   RETURN;                         /* RETURN TO THE SCAN ROUTINE    */
@EL00009 DS    0H                                                  0968
@EF00009 DS    0H                                                  0968
@ER00009 LM    @14,@12,12(@13)                                     0968
         BR    @14                                                 0968
*   END RFLUSHCH;                   /*                               */
         B     @EL00009                                            0969
*                                                                  0970
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO CHECK MODIFIED ENTRY TO INSURE SUFFICIENT   */
*   /* INFO IN ENTRY                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0970
*CPLTCHK:                           /*                               */
*   PROCEDURE;                      /*                               */
CPLTCHK  STM   @14,@12,@SA00010                                    0970
*   DECLARE                         /*                               */
*     CPLTX FIXED(31);              /*                               */
*                                                                  0971
*   /*****************************************************************/
*   /*                                                               */
*   /* PTS SYSTEM ENTRY CHECKS                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0972
*   IF SYS=ON                       /* SYSTEM UPDATE ?               */
*     THEN                                                         0972
         TM    SYS,B'00100000'                                     0972
         BNO   @RF00972                                            0972
*     DO;                           /*                               */
*       IOPNTLVL=IOPSYSLC;          /* SET ENTRY LEVEL               */
         MVI   IOPNTLVL(IOPPTR),X'02'                              0974
*       IOPSCNVL=IOPSCNVC;          /* SET CONVERSION LEVEL          */
         MVI   IOPSCNVL(IOPPTR),X'02'                              0975
*       IF IOPDSPRM=ZERO            /* IF PRIMARY OR DIR IS ZERO     */
*           ×IOPDSDIR=ZERO          /* THEN ERR                      */
*         THEN                      /*                               */
         SLR   @15,@15                                             0976
         CH    @15,IOPDSPRM(,IOPPTR)                               0976
         BE    @RT00976                                            0976
         CH    @15,IOPDSDIR(,IOPPTR)                               0976
         BNE   @RF00976                                            0976
@RT00976 DS    0H                                                  0977
*         CALL UCL257I(TXTDSSPC);   /* DSPSPACE REQUIRED             */
         LA    @01,@AL00977                                        0977
         BAL   @14,UCL257I                                         0977
*       DO CPLTX=1 BY 1 WHILE(      /* LOOP THRU SUBENTRIES          */
*             IOPPTSND(CPLTX)^=IOPEOLST/* TILL END                   */
*             &IOPPTIND(CPLTX)^=IOPPTSRL);/* OR SREL FOUND           */
@RF00976 LA    @15,1                                               0978
         ST    @15,CPLTX                                           0978
         B     @DE00978                                            0978
@DL00978 DS    0H                                                  0979
*       END;                        /*                               */
         LA    @15,1                                               0979
         AL    @15,CPLTX                                           0979
         ST    @15,CPLTX                                           0979
@DE00978 L     @15,CPLTX                                           0979
         MH    @15,@CH00538                                        0979
         SLR   @14,@14                                             0979
         IC    @14,IOPPTSND-9(@15,IOPPTR)                          0979
         CH    @14,@CH00726                                        0979
         BE    @DC00978                                            0979
         SLR   @14,@14                                             0979
         IC    @14,IOPPTIND-9(@15,IOPPTR)                          0979
         CH    @14,@CH00291                                        0979
         BNE   @DL00978                                            0979
@DC00978 DS    0H                                                  0980
*       IF IOPPTSND(CPLTX)=IOPEOLST /* IF NO SREL FOUND              */
*         THEN                      /*                               */
         L     @15,CPLTX                                           0980
         MH    @15,@CH00538                                        0980
         SLR   @14,@14                                             0980
         IC    @14,IOPPTSND-9(@15,IOPPTR)                          0980
         CH    @14,@CH00726                                        0980
         BNE   @RF00980                                            0980
*         CALL UCL257I(TXTSREL);    /* SREL REQUIRED                 */
         LA    @01,@AL00981                                        0981
         BAL   @14,UCL257I                                         0981
*     END;                          /*                               */
@RF00980 DS    0H                                                  0983
*   RETURN CODE(ZERO);              /*                               */
@RF00972 SLR   @15,@15                                             0983
         L     @14,@SA00010                                        0983
         LM    @00,@12,@SA00010+8                                  0983
         BR    @14                                                 0983
*   END CPLTCHK;                    /*                               */
*                                                                  0985
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO RESTOW THE UPDATED ENTRY BACK TO THE      */
*   /* SPECIFIED DATA SET                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0985
*UCLSTOW:                           /*                               */
*   PROCEDURE;                      /*                               */
UCLSTOW  STM   @14,@12,@SA00011                                    0985
*   IOPDSID=UC2DSID;                /* SET DSID                      */
         MVC   IOPDSID(1,IOPPTR),UC2DSID                           0986
*   IF TOTALDEL=ON                  /* IF DELETE OPERATION           */
*     THEN                          /*                               */
         TM    TOTALDEL,B'00001000'                                0987
         BNO   @RF00987                                            0987
*     IOPFUNCT=IOPSTOWD;            /* SET TO DELETE                 */
         MVI   IOPFUNCT(IOPPTR),X'53'                              0988
*   ELSE                            /* ELSE SET TO CHANGE            */
*     IOPFUNCT=IOPSTOWR;            /* INDICATE OPERATION TO PERFORM */
         B     @RC00987                                            0989
@RF00987 MVI   IOPFUNCT(IOPPTR),X'54'                              0989
*   CALL HMASMIO(HMASMIOP);         /* DO REPLACE OR DELETE          */
@RC00987 ST    IOPPTR,@AL00001                                     0990
         L     @15,@CV01409                                        0990
         LA    @01,@AL00001                                        0990
         BALR  @14,@15                                             0990
*   IF IOPTYPE=IOPSMD               /* IF SYSMOD TYPE ENTRY          */
*       &TOTALDEL=ON                /* BEING TOTALLY DELETED         */
*       &IOPRETRN=IOPGOOD           /* AND STOW OK                   */
*     THEN                          /*                               */
         CLI   IOPTYPE(IOPPTR),11                                  0991
         BNE   @RF00991                                            0991
         TM    TOTALDEL,B'00001000'                                0991
         BNO   @RF00991                                            0991
         CLI   IOPRETRN(IOPPTR),0                                  0991
         BNE   @RF00991                                            0991
*     DO;                           /*                               */
*       IOPTYPE=IOPMCS;             /* ALSO DELETE                   */
         MVI   IOPTYPE(IOPPTR),X'10'                               0993
*       CALL HMASMIO(HMASMIOP);     /* MCS ENTRY                     */
         ST    IOPPTR,@AL00001                                     0994
         L     @15,@CV01409                                        0994
         LA    @01,@AL00001                                        0994
         BALR  @14,@15                                             0994
*     END;                          /*                               */
*   RETURN CODE(IOPRETRN);          /*                               */
@RF00991 SLR   @15,@15                                             0996
         IC    @15,IOPRETRN(,IOPPTR)                               0996
         L     @14,@SA00011                                        0996
         LM    @00,@12,@SA00011+8                                  0996
         BR    @14                                                 0996
*   END UCLSTOW;                    /*                               */
*                                                                  0998
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO WRITE ALL UCL MSGS                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0998
*UCLMSGS:                           /*                               */
*   PROCEDURE;                      /*                               */
*                                                                  0998
UCLMSGS  STM   @14,@12,@SA00012                                    0998
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO WRITE MSG HMA203I                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0999
*UCL203I:                           /*                               */
*   ENTRY;                          /*                               */
         B     @EC00999                                            0999
UCL203I  STM   @14,@12,@SA00012                                    0999
@EC00999 DS    0H                                                  1000
*   MGPMGNO1=HMA203I;               /* SYNTAX ERROR IN               */
         MVC   MGPMGNO1(2),@CH00145                                1000
*   MGPMGNO2=PART022;               /* UCL STATEMENT                 */
         MVC   MGPMGNO2(2),@CH00560                                1001
*   MGPMGNO3=PART026;               /* AT COL XX                     */
         MVC   MGPMGNO3(2),@CH00568                                1002
*   CVB15=(SCPCHAR-ADDR(CRPBUFFR))+1;/* COMPUTE DISPLACEMENT OF ERR
*                                      FROM START OF BUFFER          */
         L     @15,@PC00001+4                                      1003
         LA    @15,CRPBUFFR(,@15)                                  1003
         LCR   @15,@15                                             1003
         L     @14,SCPPTR                                          1003
         AL    @15,SCPCHAR(,@14)                                   1003
         AL    @15,@CF00042                                        1003
         STH   @15,CVB15                                           1003
*   CVD(CVB15,PACK8);               /* CONVERT TO DECIMAL NUMBER     */
         CVD   @15,PACK8                                           1004
*   UNPK(CHAR12,PACK8);             /* UNPACK IT                     */
         UNPK  CHAR12(12),PACK8(8)                                 1005
*   CHAR12(12)=CHAR12(12)×HEX0;     /*                               */
         OI    CHAR12+11,X'F0'                                     1006
*   MGPVARPT(1)=ADDR(CHAR12(11));   /* PLACE ADDR OF DATA IN LIST    */
         LA    @15,CHAR12+10                                       1007
         ST    @15,MGPVARPT                                        1007
*   MGPTYPE=MGPERR;                 /* SET MESSAGE SEVERITY          */
         MVI   MGPTYPE,X'03'                                       1008
*   CALL HMASMMSG(HMASMMGP);        /* WRITE THE MESSAGE             */
         L     @15,@CV01411                                        1009
         LA    @01,@AL01009                                        1009
         BALR  @14,@15                                             1009
*   UCLRTNCD=MAX(UCLRTNCD,STOPPTF); /* SET RC FOR SYNTAX             */
         SLR   @15,@15                                             1010
         IC    @15,UCLRTNCD                                        1010
         LA    @14,8                                               1010
         CR    @15,@14                                             1010
         BNL   *+6
         LR    @15,@14                                             1010
         STC   @15,UCLRTNCD                                        1010
*   RETURN CODE(0);                 /*                               */
*                                                                  1011
         SLR   @15,@15                                             1011
         L     @14,@SA00012                                        1011
         LM    @00,@12,@SA00012+8                                  1011
         BR    @14                                                 1011
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO WRITE MSG HMA252I - INCOMPLETE STMT                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1012
*UCL252I:                           /*                               */
*   ENTRY;                          /*                               */
UCL252I  STM   @14,@12,@SA00012                                    1012
*   MGPCLEAR=''B;                   /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                1013
*   MGPMGNO1=HMA252I;               /* INCOMPLETE HMASMP CONTROL   1014
*                                      STATEMENT                     */
         MVC   MGPMGNO1(2),@CH01415                                1014
*   MGPTYPE=MGPERR;                 /*                               */
         MVI   MGPTYPE,X'03'                                       1015
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1016
         LA    @01,@AL01016                                        1016
         BALR  @14,@15                                             1016
*   UCLRTNCD=MAX(UCLRTNCD,STOPPTF); /*                               */
         SLR   @15,@15                                             1017
         IC    @15,UCLRTNCD                                        1017
         LA    @14,8                                               1017
         CR    @15,@14                                             1017
         BNL   *+6
         LR    @15,@14                                             1017
         STC   @15,UCLRTNCD                                        1017
*   ERR1SW=ON;                      /*                               */
         OI    ERR1SW,B'10000000'                                  1018
*   RETURN CODE(0);                 /*                               */
         SLR   @15,@15                                             1019
         L     @14,@SA00012                                        1019
         LM    @00,@12,@SA00012+8                                  1019
         BR    @14                                                 1019
*                                                                  1020
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO WRITE MSG HMA253I - MSG FOR TOTAL ENTRY NOT FOUND  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1020
*UCL253I:                           /*                               */
*   ENTRY;                          /*                               */
UCL253I  STM   @14,@12,@SA00012                                    1020
*   MGPCLEAR=''B;                   /* ZERO MSG PARM                 */
         XC    MGPCLEAR(6),MGPCLEAR                                1021
*   MGPMGNO1=HMA253I;               /* XXXXXXXX ENTRY XXXXXXXX TO BE
*                                      DELETED DOES NOT EXIST        */
         MVC   MGPMGNO1(2),@CH01110                                1022
*   MGPVARPT(1)=ADDR(CCATYPEA(IOPTYPE));/* TYPE                      */
         SLR   @15,@15                                             1023
         IC    @15,IOPTYPE(,IOPPTR)                                1023
         SLA   @15,3                                               1023
         L     @01,CCATPAD(,CCAPTR)                                1023
         AL    @01,@CF02049                                        1023
         LA    @15,CCATYPEA(@15,@01)                               1023
         ST    @15,MGPVARPT                                        1023
*   MGPVARPT(2)=ADDR(IOPNAME);      /* ENTRY NAME                    */
         LA    @15,IOPNAME(,IOPPTR)                                1024
         ST    @15,MGPVARPT+4                                      1024
*   MGPTYPE=MGPERR;                 /*                               */
         MVI   MGPTYPE,X'03'                                       1025
*   ERR1SW=ON;                      /* SET ERR SW                    */
         OI    ERR1SW,B'10000000'                                  1026
*   CALL HMASMMSG(HMASMMGP);        /* WRITE OUT THE ERROR MESSAGE   */
         L     @15,@CV01411                                        1027
         LA    @01,@AL01027                                        1027
         BALR  @14,@15                                             1027
*   RETURN CODE(ZERO);              /*                               */
*                                                                  1028
         SLR   @15,@15                                             1028
         L     @14,@SA00012                                        1028
         LM    @00,@12,@SA00012+8                                  1028
         BR    @14                                                 1028
*   /*****************************************************************/
*   /*                                                               */
*   /* UCL COMPLETED OK MSG                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1029
*UCL255I:                           /*                               */
*   ENTRY;                          /*                               */
UCL255I  STM   @14,@12,@SA00012                                    1029
*   MGPCLEAR=''B;                   /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                1030
*   MGPMGNO1=HMA255I;               /* UPDATE COMPLETE               */
         MVC   MGPMGNO1(2),@CH00809                                1031
*   MGPMGNO2=PART018;               /* FOR XXXXXXXX                  */
         MVC   MGPMGNO2(2),@CH00553                                1032
*   MGPVARPT(1)=ADDR(IOPNAME);      /* INSERT ENTRY NAME ADDRESS     */
         LA    @15,IOPNAME(,IOPPTR)                                1033
         ST    @15,MGPVARPT                                        1033
*   MGPTYPE=MGPINFO;                /* SET MESSAGE SEVERITY          */
         MVI   MGPTYPE,X'01'                                       1034
*   CALL HMASMMSG(HMASMMGP);        /* WRITE THE MESSAGE             */
         L     @15,@CV01411                                        1035
         LA    @01,@AL01035                                        1035
         BALR  @14,@15                                             1035
*   RETURN CODE(ZERO);              /*                               */
         SLR   @15,@15                                             1036
         L     @14,@SA00012                                        1036
         LM    @00,@12,@SA00012+8                                  1036
         BR    @14                                                 1036
*                                                                  1037
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF FILE OR AN I/O ERROR HAS OCCURRED ON THE INPUT DATA    */
*   /* SET. SET THE SERIOUS ERROR CONDITION, WRITE ERROR MESSAGE     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1037
*UCL256I:                                                          1037
*   ENTRY;                                                         1037
UCL256I  STM   @14,@12,@SA00012                                    1037
*   MGPCLEAR=''B;                   /* ZERO ALL MGP                  */
         XC    MGPCLEAR(6),MGPCLEAR                                1038
*   MGPMGNO1=HMA256I;               /* UPDATE PROCESSING TERMINATED -
*                                      UPDATE NOT COMPLETE           */
         MVC   MGPMGNO1(2),@CH01115                                1039
*   MGPTYPE=MGPINFO;                /* SET MESSAGE SEVERITY          */
         MVI   MGPTYPE,X'01'                                       1040
*   CALL HMASMMSG(HMASMMGP);        /* WRITE THE MESSAGE             */
         L     @15,@CV01411                                        1041
         LA    @01,@AL01041                                        1041
         BALR  @14,@15                                             1041
*   RETURN CODE(0);                 /*                               */
*                                                                  1042
         SLR   @15,@15                                             1042
         L     @14,@SA00012                                        1042
         LM    @00,@12,@SA00012+8                                  1042
         BR    @14                                                 1042
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO WRITE MSG HMA257I                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1043
*UCL257I:                           /*                               */
*   ENTRY(TXT257);                  /*                               */
UCL257I  STM   @14,@12,@SA00012                                    1043
         MVC   @PC00012(4),0(@01)                                  1043
*   DECLARE                         /*                               */
*     TXT257 CHAR(8);               /*                               */
*   MGPCLEAR=''B;                   /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                1045
*   MGPMGNO1=HMA257I;               /* SPEFIFIED UPDATE RESULTS IN 1046
*                                      INSUFFICIENT DATA - XXXXXXXX
*                                      REQUIRED                      */
         MVC   MGPMGNO1(2),@CH01117                                1046
*   MGPVARPT(1)=ADDR(TXT257);       /*                               */
         L     @15,@PC00012                                        1047
         ST    @15,MGPVARPT                                        1047
*   MGPTYPE=MGPERR;                 /*                               */
         MVI   MGPTYPE,X'03'                                       1048
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1049
         LA    @01,@AL01049                                        1049
         BALR  @14,@15                                             1049
*   UCLRTNCD=MAX(UCLRTNCD,STOPPTF); /*                               */
         SLR   @15,@15                                             1050
         IC    @15,UCLRTNCD                                        1050
         LA    @14,8                                               1050
         CR    @15,@14                                             1050
         BNL   *+6
         LR    @15,@14                                             1050
         STC   @15,UCLRTNCD                                        1050
*   ERR2SW=ON;                      /* SET ERR SW                    */
         OI    ERR2SW,B'01000000'                                  1051
*   RETURN CODE(0);                 /*                               */
         SLR   @15,@15                                             1052
         L     @14,@SA00012                                        1052
         LM    @00,@12,@SA00012+8                                  1052
         BR    @14                                                 1052
*                                                                  1053
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO WRITE MSG HMA258I                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1053
*UCL258I:                           /*                               */
*   ENTRY;                          /*                               */
UCL258I  STM   @14,@12,@SA00012                                    1053
*   MGPCLEAR=''B;                   /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                1054
*   MGPMGNO1=HMA258I;               /* END OF FILE ON UCL INPUT    1055
*                                      STREAM - PROCESSING TERMINATED*/
         MVC   MGPMGNO1(2),@CH01119                                1055
*   MGPTYPE=MGPERR;                 /*                               */
         MVI   MGPTYPE,X'03'                                       1056
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1057
         LA    @01,@AL01057                                        1057
         BALR  @14,@15                                             1057
*   UCLRTNCD=MAX(UCLRTNCD,STOPPTF); /*                               */
         SLR   @15,@15                                             1058
         IC    @15,UCLRTNCD                                        1058
         LA    @14,8                                               1058
         CR    @15,@14                                             1058
         BNL   *+6
         LR    @15,@14                                             1058
         STC   @15,UCLRTNCD                                        1058
*   ERR1SW=ON;                      /* SET ERR SW                    */
         OI    ERR1SW,B'10000000'                                  1059
*   RETURN CODE(0);                 /*                               */
*                                                                  1060
         SLR   @15,@15                                             1060
         L     @14,@SA00012                                        1060
         LM    @00,@12,@SA00012+8                                  1060
         BR    @14                                                 1060
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO WRITE MSG 259I                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1061
*UCL259I:                           /*                               */
*   ENTRY;                          /*                               */
UCL259I  STM   @14,@12,@SA00012                                    1061
*   MGPCLEAR=''B;                   /* ZERO MSG PARM                 */
         XC    MGPCLEAR(6),MGPCLEAR                                1062
*   MGPMGNO1=HMA259I;               /* XXXXXXXX XXXXXXXX ELEMENT   1063
*                                      PEMAX EXCEEDED ATTEMPTING TO
*                                      ADD X16X X8X                  */
         MVC   MGPMGNO1(2),@CH00909                                1063
*   MGPVARPT(1)=ADDR(CCATYPEA(IOPTYPE));/* TYPE                      */
         SLR   @15,@15                                             1064
         IC    @15,IOPTYPE(,IOPPTR)                                1064
         SLA   @15,3                                               1064
         L     @01,CCATPAD(,CCAPTR)                                1064
         AL    @01,@CF02049                                        1064
         LA    @15,CCATYPEA(@15,@01)                               1064
         ST    @15,MGPVARPT                                        1064
*   MGPVARPT(2)=ADDR(IOPNAME);      /* NAME                          */
         LA    @15,IOPNAME(,IOPPTR)                                1065
         ST    @15,MGPVARPT+4                                      1065
*   MGPVARPT(3)=ADDR(MSGPART1);     /* TYPE SUB-ENTRY                */
         LA    @15,MSGPART1                                        1066
         ST    @15,MGPVARPT+8                                      1066
*   MGPVARPT(4)=ADDR(MSGPART2);     /* DATA VALUE                    */
         LA    @15,MSGPART2                                        1067
         ST    @15,MGPVARPT+12                                     1067
*   MGPTYPE=MGPERR;                 /* SET MESSAGE SEVERITY          */
         MVI   MGPTYPE,X'03'                                       1068
*   CALL HMASMMSG(HMASMMGP);        /* WRITE THE MESSAGE             */
         L     @15,@CV01411                                        1069
         LA    @01,@AL01069                                        1069
         BALR  @14,@15                                             1069
*   ERR2SW=ON;                      /* INDICATE THE ERROR            */
         OI    ERR2SW,B'01000000'                                  1070
*   RETURN CODE(ZERO);              /* RETURN                        */
         SLR   @15,@15                                             1071
         L     @14,@SA00012                                        1071
         LM    @00,@12,@SA00012+8                                  1071
         BR    @14                                                 1071
*                                                                  1072
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO WRITE MSG HMA261I                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1072
*UCL261I:                           /*                               */
*   ENTRY;                          /*                               */
UCL261I  STM   @14,@12,@SA00012                                    1072
*   MGPCLEAR=''B;                   /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                1073
*   MGPMGNO1=HMA261I;               /* XXXXXXXX ENTERED IS NOT EQUAL
*                                      XXXXXXXX X100X IN ENTRY       */
         MVC   MGPMGNO1(2),@CH00355                                1074
*   MGPVARPT(1)=ADDR(MSGPART1);     /*                               */
         LA    @15,MSGPART1                                        1075
         ST    @15,MGPVARPT                                        1075
*   MGPVARPT(2)=ADDR(MSGPART1);     /*                               */
         ST    @15,MGPVARPT+4                                      1076
*   MGPVARPT(3)=ADDR(MSGPART3);     /*                               */
         LA    @15,MSGPART3                                        1077
         ST    @15,MGPVARPT+8                                      1077
*   MGPTYPE=MGPERR;                 /*                               */
         MVI   MGPTYPE,X'03'                                       1078
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1079
         LA    @01,@AL01079                                        1079
         BALR  @14,@15                                             1079
*   ERR2SW=ON;                      /*                               */
         OI    ERR2SW,B'01000000'                                  1080
*   RETURN CODE(0);                 /*                               */
*                                                                  1081
         SLR   @15,@15                                             1081
         L     @14,@SA00012                                        1081
         LM    @00,@12,@SA00012+8                                  1081
         BR    @14                                                 1081
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO WRITE MSG HMA276I                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1082
*UCL276I:                           /*                               */
*   ENTRY;                          /*                               */
UCL276I  STM   @14,@12,@SA00012                                    1082
*   MGPCLEAR=''B;                   /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                1083
*   MGPMGNO1=HMA276I;               /* ILLEGAL UPDATE REQUEST        */
         MVC   MGPMGNO1(2),@CH01424                                1084
*   MGPMGNO2=PART016;               /* ON XXXXXXXX                   */
         MVC   MGPMGNO2(2),@CH00047                                1085
*   MGPVARPT(1)=ADDR(CCADSIDA(UC2DSID));/* DATASET                   */
         SLR   @15,@15                                             1086
         IC    @15,UC2DSID                                         1086
         SLA   @15,3                                               1086
         L     @01,CCADSAD(,CCAPTR)                                1086
         AL    @01,@CF02049                                        1086
         LA    @15,CCADSIDA(@15,@01)                               1086
         ST    @15,MGPVARPT                                        1086
*   MGPTYPE=MGPERR;                 /*                               */
         MVI   MGPTYPE,X'03'                                       1087
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1088
         LA    @01,@AL01088                                        1088
         BALR  @14,@15                                             1088
*   ERR1SW=ON;                      /*                               */
         OI    ERR1SW,B'10000000'                                  1089
*   RETURN CODE(0);                 /*                               */
         SLR   @15,@15                                             1090
         L     @14,@SA00012                                        1090
         LM    @00,@12,@SA00012+8                                  1090
         BR    @14                                                 1090
*                                                                  1091
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO WRITE MSG HMA277I                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1091
*UCL277I:                           /*                               */
*   ENTRY;                          /*                               */
UCL277I  STM   @14,@12,@SA00012                                    1091
*   MGPCLEAR=''B;                   /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                1092
*   MGPMGNO1=HMA277I;               /* XXXXXXXX XXXXXXXX TO BE     1093
*                                      REPLACED DOES NOT EXIST - ADD
*                                      ASSUMED                       */
         MVC   MGPMGNO1(2),@CH01426                                1093
*   MGPVARPT(1)=ADDR(CCATYPEA(IOPTYPE));/* TYPE                      */
         SLR   @15,@15                                             1094
         IC    @15,IOPTYPE(,IOPPTR)                                1094
         SLA   @15,3                                               1094
         L     @01,CCATPAD(,CCAPTR)                                1094
         AL    @01,@CF02049                                        1094
         LA    @15,CCATYPEA(@15,@01)                               1094
         ST    @15,MGPVARPT                                        1094
*   MGPVARPT(2)=ADDR(IOPNAME);      /*                               */
         LA    @15,IOPNAME(,IOPPTR)                                1095
         ST    @15,MGPVARPT+4                                      1095
*   MGPTYPE=MGPWARN;                /*                               */
         MVI   MGPTYPE,X'02'                                       1096
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1097
         LA    @01,@AL01097                                        1097
         BALR  @14,@15                                             1097
*   UCLRTNCD=MAX(UCLRTNCD,PTFWARN); /*                               */
         SLR   @15,@15                                             1098
         IC    @15,UCLRTNCD                                        1098
         LA    @14,4                                               1098
         CR    @15,@14                                             1098
         BNL   *+6
         LR    @15,@14                                             1098
         STC   @15,UCLRTNCD                                        1098
*   RETURN CODE(0);                 /*                               */
*                                                                  1099
         SLR   @15,@15                                             1099
         L     @14,@SA00012                                        1099
         LM    @00,@12,@SA00012+8                                  1099
         BR    @14                                                 1099
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO WRITE MSG HMA341                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1100
*UCL341I:                           /*                               */
*   ENTRY(TXT3411,TXT3412);         /*                               */
UCL341I  STM   @14,@12,@SA00012                                    1100
         MVC   @PC00012+4(8),0(@01)                                1100
*   DECLARE                         /*                               */
*     TXT3411 CHAR(8),              /*                               */
*     TXT3412 CHAR(8);              /*                               */
*   MGPCLEAR=''B;                   /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                1102
*   MGPMGNO1=HMA341I;               /* KEYWORDS XXXXXXXX AND XXXXXXXX
*                                      ARE MUTUALLY EXCLUSIVE        */
         MVC   MGPMGNO1(2),@CH01428                                1103
*   MGPVARPT(1)=ADDR(TXT3411);      /*                               */
         L     @15,@PC00012+4                                      1104
         ST    @15,MGPVARPT                                        1104
*   MGPVARPT(2)=ADDR(TXT3412);      /*                               */
         L     @15,@PC00012+8                                      1105
         ST    @15,MGPVARPT+4                                      1105
*   MGPTYPE=MGPERR;                 /*                               */
         MVI   MGPTYPE,X'03'                                       1106
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1107
         LA    @01,@AL01107                                        1107
         BALR  @14,@15                                             1107
*   ERR1SW=ON;                      /*                               */
         OI    ERR1SW,B'10000000'                                  1108
*   RETURN CODE(0);                 /*                               */
         SLR   @15,@15                                             1109
         L     @14,@SA00012                                        1109
         LM    @00,@12,@SA00012+8                                  1109
         BR    @14                                                 1109
*                                                                  1110
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO WRITE MSG HMA356                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1110
*UCL356I:                           /*                               */
*   ENTRY;                          /*                               */
UCL356I  STM   @14,@12,@SA00012                                    1110
*   MGPCLEAR=''B;                   /* ZERO MSG PARM                 */
         XC    MGPCLEAR(6),MGPCLEAR                                1111
*   MGPMGNO1=HMA356I;               /* XXXXXXXX XXXXXXXX TO BE ADDED
*                                      TO ENTRY ALREADY EXISTS       */
         MVC   MGPMGNO1(2),@CH01430                                1112
*   MGPVARPT(1)=ADDR(MSGPART1);     /* ENTRY TYPE                    */
         LA    @15,MSGPART1                                        1113
         ST    @15,MGPVARPT                                        1113
*   MGPVARPT(2)=ADDR(MSGPART2);     /* DATA                          */
         LA    @15,MSGPART2                                        1114
         ST    @15,MGPVARPT+4                                      1114
*   IF MSGPART3(1)^=BLANK           /* IF THIRD PART                 */
*     THEN                          /*                               */
         CLI   MSGPART3,C' '                                       1115
         BE    @RF01115                                            1115
*     DO;                           /*                               */
*       MGPMGNO2=PART003;           /* AS X100X                      */
         MVC   MGPMGNO2(2),@CH00044                                1117
*       MGPVARPT(3)=ADDR(MSGPART3); /* CURRENT VALUE                 */
         LA    @15,MSGPART3                                        1118
         ST    @15,MGPVARPT+8                                      1118
*     END;                          /*                               */
*   MGPTYPE=MGPERR;                 /*                               */
@RF01115 MVI   MGPTYPE,X'03'                                       1120
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1121
         LA    @01,@AL01121                                        1121
         BALR  @14,@15                                             1121
*   ERR2SW=ON;                      /*                               */
         OI    ERR2SW,B'01000000'                                  1122
*   RETURN CODE(ZERO);              /*                               */
*                                                                  1123
         SLR   @15,@15                                             1123
         L     @14,@SA00012                                        1123
         LM    @00,@12,@SA00012+8                                  1123
         BR    @14                                                 1123
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO WRITE MSG HMA357I                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1124
*UCL357I:                           /*                               */
*   ENTRY;                          /*                               */
UCL357I  STM   @14,@12,@SA00012                                    1124
*   MGPCLEAR=''B;                   /* ZERO MSG PARM                 */
         XC    MGPCLEAR(6),MGPCLEAR                                1125
*   MGPMGNO1=HMA357I;               /* XXXXXXXX XXXXXXXX TO BE     1126
*                                      DELETED FROM ENTRY DOES NOT 1126
*                                      EXIST                         */
         MVC   MGPMGNO1(2),@CH01432                                1126
*   MGPVARPT(1)=ADDR(MSGPART1);     /* ENTRY TYPE                    */
         LA    @15,MSGPART1                                        1127
         ST    @15,MGPVARPT                                        1127
*   MGPVARPT(2)=ADDR(MSGPART2);     /* DATA                          */
         LA    @15,MSGPART2                                        1128
         ST    @15,MGPVARPT+4                                      1128
*   MGPTYPE=MGPERR;                 /*                               */
         MVI   MGPTYPE,X'03'                                       1129
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1130
         LA    @01,@AL01130                                        1130
         BALR  @14,@15                                             1130
*   ERR2SW=ON;                      /*                               */
         OI    ERR2SW,B'01000000'                                  1131
*   RETURN CODE(ZERO);              /*                               */
         SLR   @15,@15                                             1132
         L     @14,@SA00012                                        1132
         LM    @00,@12,@SA00012+8                                  1132
         BR    @14                                                 1132
*                                                                  1133
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO WRITE MSG HMA358I                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1133
*UCL358I:                           /*                               */
*   ENTRY;                          /*                               */
UCL358I  STM   @14,@12,@SA00012                                    1133
*   MGPCLEAR=''B;                   /* ZERO MSG PARM                 */
         XC    MGPCLEAR(6),MGPCLEAR                                1134
*   MGPMGNO1=HMA358I;               /* XXXXXXXX XXXXXXXX TO REPLACED
*                                      IN ENTRY DOES NOT EXIST - ADD
*                                      ASSUMED                       */
         MVC   MGPMGNO1(2),@CH01434                                1135
*   MGPVARPT(1)=ADDR(MSGPART1);     /* ENTRY TYPE                    */
         LA    @15,MSGPART1                                        1136
         ST    @15,MGPVARPT                                        1136
*   MGPVARPT(2)=ADDR(MSGPART2);     /* DATA                          */
         LA    @15,MSGPART2                                        1137
         ST    @15,MGPVARPT+4                                      1137
*   MGPTYPE=MGPWARN;                /*                               */
         MVI   MGPTYPE,X'02'                                       1138
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1139
         LA    @01,@AL01139                                        1139
         BALR  @14,@15                                             1139
*   UCLRTNCD=MAX(UCLRTNCD,PTFWARN); /*                               */
         SLR   @15,@15                                             1140
         IC    @15,UCLRTNCD                                        1140
         LA    @14,4                                               1140
         CR    @15,@14                                             1140
         BNL   *+6
         LR    @15,@14                                             1140
         STC   @15,UCLRTNCD                                        1140
*   RETURN CODE(ZERO);              /*                               */
*                                                                  1141
         SLR   @15,@15                                             1141
         L     @14,@SA00012                                        1141
         LM    @00,@12,@SA00012+8                                  1141
         BR    @14                                                 1141
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO WRITE MSG HMA402I                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1142
*UCL402I:                           /*                               */
*   ENTRY(TXT4021,TXT4022);         /*                               */
UCL402I  STM   @14,@12,@SA00012                                    1142
         MVC   @PC00012+12(8),0(@01)                               1142
*   DECLARE                         /*                               */
*     TXT4021 CHAR(8),              /*                               */
*     TXT4022 CHAR(16);             /*                               */
*   MGPCLEAR=''B;                   /* ZERO MSG PARM                 */
         XC    MGPCLEAR(6),MGPCLEAR                                1144
*   MGPMGNO1=HMA402I;               /* XXXXXXXX IS INVALID FOR     1145
*                                      XXXXXXXXXXXXXXXX SYSMOD       */
         MVC   MGPMGNO1(2),@CH01436                                1145
*   MGPVARPT(1)=ADDR(TXT4021);      /* FIELD NAME                    */
         L     @15,@PC00012+12                                     1146
         ST    @15,MGPVARPT                                        1146
*   MGPVARPT(2)=ADDR(TXT4022);      /* SYSMOD TYPE                   */
         L     @15,@PC00012+16                                     1147
         ST    @15,MGPVARPT+4                                      1147
*   MGPTYPE=MGPERR;                 /*                               */
         MVI   MGPTYPE,X'03'                                       1148
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1149
         LA    @01,@AL01149                                        1149
         BALR  @14,@15                                             1149
*   ERR1SW=ON;                      /*                               */
         OI    ERR1SW,B'10000000'                                  1150
*   RETURN CODE(ZERO);              /*                               */
         SLR   @15,@15                                             1151
         L     @14,@SA00012                                        1151
         LM    @00,@12,@SA00012+8                                  1151
         BR    @14                                                 1151
*   END UCLMSGS;                    /*                               */
*   END HMASMUC2                                                   1153
*                                                                  1153
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCRP)                                       */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMPRL)                                       */
*/*%INCLUDE SYSLIB  (HMASMSCP)                                       */
*/*%INCLUDE SYSLIB  (HMASMMGP)                                       */
*/*%INCLUDE SYSLIB  (HMASMVLP)                                       */
*                                                                  1153
*       ;                                                          1153
@DATA    DS    0H
@CH00291 DC    H'2'
@CH00044 DC    H'3'
@CH00145 DC    H'4'
@CH00036 DC    H'8'
@CH00538 DC    H'9'
@CH00047 DC    H'16'
@CH00553 DC    H'18'
@CH00560 DC    H'22'
@CH00568 DC    H'26'
@CH01415 DC    H'53'
@CH01110 DC    H'54'
@CH00809 DC    H'56'
@CH01115 DC    H'57'
@CH01117 DC    H'58'
@CH01119 DC    H'59'
@CH00909 DC    H'60'
@CH00355 DC    H'62'
@CH01424 DC    H'77'
@CH01426 DC    H'78'
@CH00367 DC    H'100'
@CH01428 DC    H'142'
@CH01430 DC    H'157'
@CH01432 DC    H'158'
@CH01434 DC    H'159'
@CH01436 DC    H'203'
@CH00726 DC    H'255'
@SM02023 MVC   IOPNAME(0,IOPPTR),SCPSTRNG(@01)
@SM02025 MVC   MSGPART1(0),SCPSTRNG(@01)
@SM02027 MVC   0(0,@01),SCPSTRNG(@15)
@SM02031 MVC   0(0,@14),SCPSTRNG(@01)
@SM02033 MVC   0(0,@01),SCPSTRNG(@07)
@SM02035 MVC   SAVDATA(0),SCPSTRNG(@01)
@SM02037 MVC   SAVDATA(0),SCPSTRNG(@06)
@SM02039 MVC   0(0,@01),SCPSTRNG(@06)
@SM02043 MVC   MSGPART2(0),SCPSTRNG(@15)
@SM02045 MVC   VLPDATA(0),BLANK8
@SM02047 MVC   VLPDATA(0),SCPSTRNG(@15)
         DS    0F
@AL00947 DC    A(HMASMVLP)             LIST WITH   1 ARGUMENT(S)
@AL00977 DC    A(@CC01443)             LIST WITH   1 ARGUMENT(S)
@AL00981 DC    A(@CC01445)             LIST WITH   1 ARGUMENT(S)
@AL01009 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01016 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01027 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01035 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01041 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01049 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01057 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01069 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01079 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01088 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01097 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01107 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01121 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01130 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01139 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01149 DC    A(HMASMMGP)             LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@PC00001 DS    2F
@SA00010 DS    15F
@SA00003 DS    15F
@SA00004 DS    15F
@SA00005 DS    15F
@SA00012 DS    0F
@PC00012 EQU   @SA00012+60
@SA00006 DS    0F
@SA00011 DS    0F
@SA00008 DS    0F
         DS    20F
@AL00001 DS    2A
         DS    0F
@CF00042 DC    F'1'
@CH00042 EQU   @CF00042+2
@CF02049 DC    F'-8'
@CV01407 DC    V(HMASMCRD)
@CV01408 DC    V(HMASMDS1)
@CV01409 DC    V(HMASMIO)
@CV01410 DC    V(HMASMSCN)
@CV01411 DC    V(HMASMMSG)
@CV01412 DC    V(HMASMVLU)
         DS    0D
SCPPTR   DS    A
SAVBUFAD DS    A
LOOPINDX DS    A
LPCNT    DC    F'0'
PFXLEN   DC    F'0'
PRMLEN   DC    F'0'
PGMPTR   DS    A
PRNTPTR  DS    A
RCPTR    DS    A
PRMPTR   DS    A
ADFLSHTB DC    AL4(KFLUSH)
ADSCNTBL DC    AL4(KENDUCL)
CPLTX    DS    F
CVB15    DS    H
NEWPEMAX DS    H
NEWPAGLN DS    H
UCLRTNCD DS    FL1
NEWRC    DS    FL1
UC2DSID  DS    FL1
@CC01443 DC    C'DSSPACE '
@CC01445 DC    C'SREL    '
@CC01461 DC    C'00000000'
@CC01531 DC    C'Y'
         DS    CL2
HMASMMGP DS    CL32
         ORG   HMASMMGP
MGPFIXED DS    CL12
         ORG   MGPFIXED
MGPCLEAR DS    CL6
         ORG   MGPCLEAR
MGPMGNO1 DS    FL2
MGPMGNO2 DS    FL2
MGPMGNO3 DS    FL2
         ORG   MGPFIXED+6
MGPFLAGS DS    BL2
         ORG   MGPFLAGS
MGPPRINT DS    BL1
MGPLIST  EQU   MGPFLAGS+0
MGPRPT   EQU   MGPFLAGS+0
MGPHLDS  EQU   MGPFLAGS+0
MGPWTOR  EQU   MGPFLAGS+0
MGPWTO   EQU   MGPFLAGS+0
MGPWTP   EQU   MGPFLAGS+0
@NM00184 EQU   MGPFLAGS+0
         ORG   MGPFIXED+8
MGPTYPE  DS    FL1
@NM00185 DS    CL3
         ORG   HMASMMGP+12
MGPVAR   DS    CL20
         ORG   MGPVAR
MGPVARPT DS    5A
         ORG   HMASMMGP+32
HMASMVLP DS    CL52
         ORG   HMASMVLP
VLPFUNCT DS    FL1
VLPRETRN DS    FL1
VLPFLAG  DS    BL1
         ORG   VLPFLAG
VLPFMSG  DS    BL1
VLPFRSV  EQU   VLPFLAG+0
         ORG   HMASMVLP+3
VLPDLEN  DS    FL1
VLPSNTRY DS    CL9
         ORG   VLPSNTRY
VLPDATA  DS    CL8
VLPTYPE  DS    FL1
         ORG   HMASMVLP+13
@NM00186 DS    CL3
VLPLPTR  DS    AL4
VLPMTYPE DS    CL8
VLPMNAME DS    CL8
VLPSTYPE DS    CL16
         ORG   HMASMVLP+52
MSGPARTS DS    CL132
         ORG   MSGPARTS
MSGPART1 DS    CL16
MSGPART2 DS    CL16
MSGPART3 DS    CL100
         ORG   MSGPARTS+132
BLANK8   DC    CL8'        '
PACK8    DS    CL8
CHAR8    DS    CL8
CHAR12   DS    CL12
SAVNAME  DS    CL8
NEWSPACE DS    CL6
         ORG   NEWSPACE
NEWPRM   DS    FL2
NEWSEC   DS    FL2
NEWDIR   DS    FL2
         ORG   NEWSPACE+6
NULLSPC  DC    X'000000000000'
SAVDATA  DS    CL100
PATCHUC2 DS    CL80
         ORG   PATCHUC2
@NM00187 DC    80X'FF'
         ORG   PATCHUC2+80
UCLSWTBL DS    CL3
         ORG   UCLSWTBL
UCLVERB  DS    BL1
         ORG   UCLVERB
REP      DS    BL1
DEL      EQU   UCLVERB+0
ADD      EQU   UCLVERB+0
TOTAL    EQU   UCLVERB+0
TOTALDEL EQU   UCLVERB+0
UNCDEL   EQU   UCLVERB+0
FRSTREPL EQU   UCLVERB+0
@NM00188 EQU   UCLVERB+0
         ORG   UCLSWTBL+1
UCLTYPE  DS    BL1
         ORG   UCLTYPE
PTF      DS    BL1
MACRO    EQU   UCLTYPE+0
SYS      EQU   UCLTYPE+0
SRC      EQU   UCLTYPE+0
@NM00189 EQU   UCLTYPE+0
         ORG   UCLSWTBL+2
UCLERRSW DS    BL1
         ORG   UCLERRSW
ERR1SW   DS    BL1
ERR2SW   EQU   UCLERRSW+0
ERRAFTPR EQU   UCLERRSW+0
UCLTERM  EQU   UCLERRSW+0
INVLOP   EQU   UCLERRSW+0
DELERR   EQU   UCLERRSW+0
@NM00190 EQU   UCLERRSW+0
         ORG   UCLSWTBL+3
HMASMUC2 CSECT
**********************************************************************
*                                                                    *
*    UCL SCAN TABLES - THESE TABLES ARE USED BY THE SMP              *
*   SCAN ROUTINE. THEY CONTAIN THE KEYWORDS TO SEARCH FOR AND ALSO   *
*   THE LOGICAL ORDER OF THE SEARCH ( AS DETERMINED BY THE ALT       *
*      AND SUCCESSOR)                                                *
*                                                                    *
**********************************************************************
*                                                                    *
*                      VERB SCAN TABLE                               *
*                                                                    *
**********************************************************************
KENDUCL  DSCAN KEY='ENDUCL',ALT=KREP00,SUCC=KENDPER,ROUT=RENDUCL,      X
               CALLRT=YES
KREP00   DSCAN KEY='REP ',ALT=KDEL00,SUCC=KSMD00,ROUT=RREP00,          X
               CALLRT=YES
KDEL00   DSCAN KEY='DEL ',ALT=KADD00,SUCC=KSMD00,ROUT=RDEL00,          X
               CALLRT=YES
KADD00   DSCAN KEY='ADD ',SUCC=KSMD00,ROUT=RADD00,                     X
               CALLRT=YES
HMASMUC2 CSECT
**********************************************************************
*                                                                    *
*             SCAN TABLE FOR ENDING PERIOD PLUS CONTINUED COMMENTS   *
*                                                                    *
**********************************************************************
KENDPER  DSCAN KEY='.',SUCC=KXTRADTA
KXTRADTA DSCAN MINLEN=0,IO=NO,ROUT=RXTRADTA,CALLRT=YES
HMASMUC2 CSECT
**********************************************************************
*                                                                    *
*             SCAN TABLE FOR DETERMINATION OF ENTRY TYPE             *
*                                                                    *
**********************************************************************
KSMD00   DSCAN KEY='SYSMOD',ALT=KMAC00,SUCC=KSMDLP01,ROUT=RSMD00,      X
               CALLRT=YES
KMAC00   DSCAN KEY='MAC',ALT=KSRC00,SUCC=KMACLP01,ROUT=RMAC00,         X
               CALLRT=YES
KSRC00   DSCAN KEY='SRC',ALT=KSYS00,SUCC=KSRCLP01,ROUT=RSRC00,         X
               CALLRT=YES
KSYS00   DSCAN KEY='SYS',SUCC=KSYSTD,ROUT=RSYS00,                      X
               CALLRT=YES
HMASMUC2 CSECT
**********************************************************************
*                                                                    *
*                      SYSTEM TYPE SCAN TABLE                        *
*                                                                    *
**********************************************************************
KSYSTD   DSCAN KEY='.',ALT=KSREL,SUCC=KXTRADTA,ROUT=RSYSTD
*****
*****    DSCAN FOR SREL VALUES
*****
KSREL    DSCAN KEY='SREL',ALT=KFMID,SUCC=KSRELLP,ROUT=RSREL
KSRELLP  DSCAN KEY='(',SUCC=KSRELD,ROUT=RSRELLP
KSRELD   DSCAN KEY=')',ALT=KSRELV,SUCC=KSREL,ROUT=RSRELD
KSRELV   DSCAN MINLEN=4,MAXLEN=4,TYPE=AN,SUCC=KSRELRP,ROUT=RSRELV
KSRELRP  DSCAN KEY=')',ALT=KSRELV,SUCC=KSREL,COMMA=NO
*****
*****    DSCAN FOR FMID VALUES
*****
KFMID    DSCAN KEY='FMID',ALT=KPEMAX,SUCC=KFMIDLP,ROUT=RFMID
KFMIDLP  DSCAN KEY='(',SUCC=KFMIDD,ROUT=RFMIDLP
KFMIDD   DSCAN KEY=')',ALT=KFMIDV,SUCC=KSREL,ROUT=RFMIDD
KFMIDV   DSCAN MINLEN=7,MAXLEN=7,TYPE=AN,SUCC=KFMIDRP,ROUT=RFMIDV
KFMIDRP  DSCAN KEY=')',ALT=KFMIDV,SUCC=KSREL,COMMA=NO
*****
*****    DSCAN FOR PEMAX VALUE
*****
KPEMAX   DSCAN KEY='PEMAX',ALT=KPURGE,SUCC=KPEMAXLP,ROUT=RPEMAX
KPEMAXLP DSCAN KEY='(',SUCC=KPEMAXD
KPEMAXD  DSCAN KEY=')',ALT=KPEMAXV,SUCC=KSREL,ROUT=RPEMAXD
KPEMAXV  DSCAN MINLEN=1,MAXLEN=4,TYPE=N,SUCC=KPEMAXRP,ROUT=RPEMAXV
KPEMAXRP DSCAN KEY=')',SUCC=KSREL
*****
*****    DSCAN FOR PURGE AND REJECT OPTIONS
*****
KPURGE   DSCAN KEY='PURGE',ALT=KREJECT,SUCC=KSREL,ROUT=RPURGE
KREJECT  DSCAN KEY='REJECT',ALT=KDSPFX,SUCC=KSREL,ROUT=RREJECT
*****
*****    DSCAN FOR DSPFXFIX VALUE
*****
KDSPFX   DSCAN KEY='DSPREFIX',ALT=KDDSPC,SUCC=KDSPFXLP,ROUT=RDSPFX
KDSPFXLP DSCAN KEY='(',SUCC=KDSPFXD
KDSPFXD  DSCAN KEY=')',ALT=KDSPFXV,SUCC=KSREL,ROUT=RDSPFXD
KDSPFXV  DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KDSPFXP,ROUT=RDSPFXV,    X
               BLANKS=ON
KDSPFXP  DSCAN KEY='.',ALT=KDSPFXRP,SUCC=KDSPFXV,ROUT=RDSPFXP          X
               BLANKS=ON
KDSPFXRP DSCAN KEY=')',SUCC=KSREL,ROUT=RDSPFXRP
*****
*****    DSCAN FOR DSSPACE VALUE
*****
KDDSPC   DSCAN KEY='DSSPACE',ALT=KPAGLN,SUCC=KDSSPCLP,ROUT=RDSSPC
KDSSPCLP DSCAN KEY='(',SUCC=KDSSPCD
KDSSPCD  DSCAN KEY=')',ALT=KDSSPCV1,SUCC=KSREL,ROUT=RDSSPCD
KDSSPCV1 DSCAN MINLEN=1,MAXLEN=4,TYPE=N,SUCC=KDSSPCV2,ROUT=RDSSPCV1
KDSSPCV2 DSCAN MINLEN=1,MAXLEN=4,TYPE=N,SUCC=KDSSPCV3,ROUT=RDSSPCV2,   X
               COMMA=NO
KDSSPCV3 DSCAN MINLEN=1,MAXLEN=4,TYPE=N,SUCC=KDSSPCRP,ROUT=RDSSPCV3,   X
               COMMA=NO
KDSSPCRP DSCAN KEY=')',SUCC=KSREL,ROUT=RDSSPCRP
*****
*****    DSCAN FOR PAGELEN VALUE
*****
KPAGLN   DSCAN KEY='PAGELEN',ALT=KASMNM,SUCC=KPAGLNLP,ROUT=RPAGLN
KPAGLNLP DSCAN KEY='(',SUCC=KPAGLND
KPAGLND  DSCAN KEY=')',ALT=KPAGLNV,SUCC=KSREL,ROUT=RPAGLND
KPAGLNV  DSCAN MINLEN=1,MAXLEN=4,TYPE=N,SUCC=KPAGLNRP,ROUT=RPAGLNV
KPAGLNRP DSCAN KEY=')',SUCC=KSREL
*****
*****    DSCAN FOR UTILITY PROGRAM NAMES
*****
KASMNM   DSCAN KEY='ASMNAME',ALT=KLKDNM,SUCC=KNAMLP,ROUT=RASMNM
KLKDNM   DSCAN KEY='LKEDNAME',ALT=KUPDNM,SUCC=KNAMLP,ROUT=RLKDNM
KUPDNM   DSCAN KEY='UPDATNAME',ALT=KCOPNM,SUCC=KNAMLP,ROUT=RUPDNM
KCOPNM   DSCAN KEY='COPYNAME',ALT=KCOMNM,SUCC=KNAMLP,ROUT=RCOPNM
KCOMNM   DSCAN KEY='COMPNAME',ALT=KZAPNM,SUCC=KNAMLP,ROUT=RCOMNM
KZAPNM   DSCAN KEY='ZAPNAME',ALT=KSUPNM,SUCC=KNAMLP,ROUT=RZAPNM
KSUPNM   DSCAN KEY='IOSUPNAME',ALT=KASMPT,SUCC=KNAMLP,ROUT=RSUPNM
KNAMLP   DSCAN KEY='(',SUCC=KNAMD
KNAMD    DSCAN KEY=')',ALT=KNAMV,SUCC=KSREL,ROUT=RNAMD
KNAMV    DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KNAMRP,ROUT=RNAMV
KNAMRP   DSCAN KEY=')',SUCC=KSREL
*****
*****    DSCAN FOR UTILITY PROGRAM SYSPRINT DD NAMES
*****
KASMPT   DSCAN KEY='ASMPRINT',ALT=KLKDPT,SUCC=KPRTLP,ROUT=RASMPT
KLKDPT   DSCAN KEY='LKEDPRINT',ALT=KUPDPT,SUCC=KPRTLP,ROUT=RLKDPT
KUPDPT   DSCAN KEY='UPDATPRINT',ALT=KCOPPT,SUCC=KPRTLP,ROUT=RUPDPT
KCOPPT   DSCAN KEY='COPYPRINT',ALT=KCOMPT,SUCC=KPRTLP,ROUT=RCOPPT
KCOMPT   DSCAN KEY='COMPPRINT',ALT=KZAPPT,SUCC=KPRTLP,ROUT=RCOMPT
KZAPPT   DSCAN KEY='ZAPPRINT',ALT=KSUPPT,SUCC=KPRTLP,ROUT=RZAPPT
KSUPPT   DSCAN KEY='IOSUPPRINT',ALT=KASMRC,SUCC=KPRTLP,ROUT=RSUPPT
KPRTLP   DSCAN KEY='(',SUCC=KPRTD
KPRTD    DSCAN KEY=')',ALT=KPRTV,SUCC=KSREL,ROUT=RPRTD
KPRTV    DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KPRTRP,ROUT=RPRTV
KPRTRP   DSCAN KEY=')',SUCC=KSREL
*****
*****    DSCAN FOR UTILITY PROGRAM RETURN CODES
*****
KASMRC   DSCAN KEY='ASMRC',ALT=KLKDRC,SUCC=KRCLP,ROUT=RASMRC
KLKDRC   DSCAN KEY='LKEDRC',ALT=KUPDRC,SUCC=KRCLP,ROUT=RLKDRC
KUPDRC   DSCAN KEY='UPDATRC',ALT=KCOPRC,SUCC=KRCLP,ROUT=RUPDRC
KCOPRC   DSCAN KEY='COPYRC',ALT=KCOMRC,SUCC=KRCLP,ROUT=RCOPRC
KCOMRC   DSCAN KEY='COMPRC',ALT=KZAPRC,SUCC=KRCLP,ROUT=RCOMRC
KZAPRC   DSCAN KEY='ZAPRC',ALT=KSUPRC,SUCC=KRCLP,ROUT=RZAPRC
KSUPRC   DSCAN KEY='IOSUPRC',ALT=KASMPRM,SUCC=KRCLP,ROUT=RSUPRC
KRCLP    DSCAN KEY='(',SUCC=KRCD
KRCD     DSCAN KEY=')',ALT=KRCV,SUCC=KSREL,ROUT=RRCD
KRCV     DSCAN MINLEN=1,MAXLEN=2,TYPE=N,SUCC=KRCRP,ROUT=RRCV
KRCRP    DSCAN KEY=')',SUCC=KSREL
*****
*****    DSCAN FOR UTILITY PROGRAM PARAMETERS
*****
KASMPRM  DSCAN KEY='ASMPARM',ALT=KLKDPRM,SUCC=KPRMLP,ROUT=RASMPRM
KLKDPRM  DSCAN KEY='LKEDPARM',ALT=KUPDPRM,SUCC=KPRMLP,ROUT=RLKDPRM
KUPDPRM  DSCAN KEY='UPDATPARM',ALT=KCOPPRM,SUCC=KPRMLP,ROUT=RUPDPRM
KCOPPRM  DSCAN KEY='COPYPARM',ALT=KCOMPRM,SUCC=KPRMLP,ROUT=RCOPPRM
KCOMPRM  DSCAN KEY='COMPPARM',ALT=KZAPPRM,SUCC=KPRMLP,ROUT=RCOMPRM
KZAPPRM  DSCAN KEY='ZAPPARM',ALT=KSUPPRM,SUCC=KPRMLP,ROUT=RZAPPRM
KSUPPRM  DSCAN KEY='IOSUPPARM',ALT=KENDPER,SUCC=KPRMLP,ROUT=RSUPPRM
KPRMLP   DSCAN KEY='(',SUCC=KPRMD
KPRMD    DSCAN KEY=')',ALT=KPRMV,SUCC=KSREL,ROUT=RPRMD
KPRMV    DSCAN MINLEN=0,MAXLEN=100,TYPE=AN,ALT=KPRMV,SUCC=KSREL,       X
               ROUT=RPRMV,CALLRT=YES
HMASMUC2 CSECT
**********************************************************************
*                                                                    *
*     SYSMOD OPTIONS SCAN TABLE                                      *
*                                                                    *
**********************************************************************
KSMDLP01 DSCAN KEY='(',SUCC=KSMDNAM
KSMDNAM  DSCAN MINLEN=7,MAXLEN=7,TYPE=AN,SUCC=KSMDRP01,ROUT=RSMDNAM
KSMDRP01 DSCAN KEY=')',SUCC=KSMDTD
KSMDTD   DSCAN KEY='.',ALT=KSMDCID,SUCC=KXTRADTA,ROUT=RSMDTD
*****
*****    DSCAN FOR VARIOUS TYPEELEMENT SUB-ENTRIES
*****
KSMDCID  DSCAN KEY='APPID',ALT=KSMDAID,SUCC=KSMDXLP,ROUT=RSMDCID
KSMDAID  DSCAN KEY='ACCID',ALT=KSMDAPP1,SUCC=KSMDXLP,ROUT=RSMDAID
KSMDXLP  DSCAN KEY='(',SUCC=KSMDXDEL,ROUT=RSMDXLP
KSMDXDEL DSCAN KEY=')',ALT=KSMDXNAM,SUCC=KSMDCID,ROUT=RSMDXDEL
KSMDXNAM DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KSMDXRP,ROUT=RSMDXNAM
KSMDXRP  DSCAN KEY=')',ALT=KSMDXNAM,SUCC=KSMDCID,COMMA=NO
*****
*****    DSCAN TO HANDLE THE PTF STATUS KEYWORDS
*****
KSMDAPP1 DSCAN KEY='APPLY',ALT=KSMDAPP2,SUCC=KSMDCID,ROUT=RSMDAPP
KSMDAPP2 DSCAN KEY='APPL',ALT=KSMDAPP3,SUCC=KSMDCID,ROUT=RSMDAPP
KSMDAPP3 DSCAN KEY='APP',ALT=KSMDACC1,SUCC=KSMDCID,ROUT=RSMDAPP
KSMDACC1 DSCAN KEY='ACCEPT',ALT=KSMDACC2,SUCC=KSMDCID,ROUT=RSMDACC
KSMDACC2 DSCAN KEY='ACPT',ALT=KSMDACC3,SUCC=KSMDCID,ROUT=RSMDACC
KSMDACC3 DSCAN KEY='ACC',ALT=KENDPER,SUCC=KSMDCID,ROUT=RSMDACC
HMASMUC2 CSECT
**********************************************************************
*                                                                    *
*                      MACRO TYPE SCAN TABLE                         *
*                                                                    *
**********************************************************************
KMACLP01 DSCAN KEY='(',SUCC=KMACNAM
KMACNAM  DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KMACRP01,ROUT=RMACNAM
KMACRP01 DSCAN KEY=')',SUCC=KMACTD
KMACTD   DSCAN KEY='.',SUCC=KXTRADTA,ROUT=RMACTD
HMASMUC2 CSECT
**********************************************************************
*                                                                    *
*                      SRC TYPE DSCAN TABLE                          *
*                                                                    *
**********************************************************************
KSRCLP01 DSCAN KEY='(',SUCC=KSRCNAM
KSRCNAM  DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KSRCRP01,ROUT=RSRCNAM
KSRCRP01 DSCAN KEY=')',SUCC=KSRCTD
KSRCTD   DSCAN KEY='.',SUCC=KXTRADTA,ROUT=RSRCTD
HMASMUC2 CSECT
**********************************************************************
*                                                                    *
*                      FLUSH MODE SCAN TABLE                         *
*                                                                    *
**********************************************************************
KFLUSH   DSCAN KEY='ENDUCL',ALT=KFLUSHPR,SUCC=KENDPER,ROUT=RENDUCL
KFLUSHPR DSCAN KEY='.',ALT=KFLUSHCH,SUCC=KXTRADTA
KFLUSHCH DSCAN MINLEN=0,MAXLEN=255,TYPE=AN,SUCC=KFLUSH,ROUT=RFLUSHCH,  X
               CALLRT=YES
HMASMUC2 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CCAPTR   EQU   @11
IOPPTR   EQU   @09
RTNCODE  EQU   @15
RTNREG   EQU   @14
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAIOPTR EQU   CCAFIOP
CCAPESIZ EQU   CCAFIOP+4
CCAFSYS  EQU   HMASMCCA+148
CCAIOPCS EQU   CCAFSYS
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00019 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAFLAG2 EQU   CCAFFUNC+11
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCADSIDA EQU   0
CCATYPEA EQU   0
CCABLDLA EQU   0
@NM00035 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00037 EQU   CCABLDLL
CCALKDRC EQU   @NM00037+20
@NM00039 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00039+20
@NM00041 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00041+20
@NM00043 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00043+20
@NM00045 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00045+20
@NM00047 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00047+20
@NM00049 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00049+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
@NM00053 EQU   HMASMIOP+12
@NM00054 EQU   @NM00053
IOPDDNAM EQU   HMASMIOP+24
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00164 EQU   IOPQSMIF
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPBS02  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
HMASMPRL EQU   0
PRLSPAN  EQU   HMASMPRL+2
PRLFLGS  EQU   PRLSPAN
PRLBLANK EQU   PRLFLGS
PRLDATE  EQU   HMASMPRL+4
PRLTIME  EQU   HMASMPRL+7
PRLEND   EQU   HMASMPRL+10
HMASMSCP EQU   0
SCPCHAR  EQU   HMASMSCP
SCPSRCH  EQU   HMASMSCP+4
SCPIOPAD EQU   HMASMSCP+16
SCPPMLN  EQU   HMASMSCP+22
SCPEOR   EQU   HMASMSCP+24
SCPNOSUC EQU   SCPEOR
SCPNORT  EQU   SCPEOR
SCPRETRN EQU   HMASMSCP+25
SCPRET   EQU   SCPRETRN
SCPSTRNG EQU   0
PGMNAME  EQU   0
PGMPRNT  EQU   0
PGMRC    EQU   0
PGMPRM   EQU   0
IOPBS01  EQU   0
IOPBS03  EQU   0
SCPIOPRM EQU   0
UCLPARM  EQU   0
UCLFLAGS EQU   UCLPARM+8
UCLFLG1  EQU   UCLFLAGS
UCLFLUSH EQU   UCLFLG1
UCLFLG2  EQU   UCLFLAGS+2
UCLFLG3  EQU   UCLFLAGS+3
UCLPTS   EQU   UCLFLG3
UCLMTS   EQU   UCLFLG3
UCLFLG4  EQU   UCLFLAGS+5
UCLFLG5  EQU   UCLFLAGS+7
HMASMCRP EQU   0
CRPSCPAD EQU   HMASMCRP+4
CRPRETRN EQU   HMASMCRP+10
CRPFLG1  EQU   HMASMCRP+14
CRPEOFEN EQU   CRPFLG1+1
CRPFLG2  EQU   HMASMCRP+16
CRPINSW0 EQU   CRPFLG2
CRPINSW1 EQU   CRPFLG2
CRPINSW2 EQU   CRPFLG2
CRPINSW3 EQU   CRPFLG2
CRPBUFFR EQU   HMASMCRP+18
CRPBFCTL EQU   CRPBUFFR
TXT257   EQU   0
TXT3411  EQU   0
TXT3412  EQU   0
TXT4021  EQU   0
TXT4022  EQU   0
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00060 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
@NM00071 EQU   IOPUDATA
@NM00072 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPNTLVL EQU   IOPASMDR
IOPABUNT EQU   IOPASMDR+1
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPLMDF2 EQU   IOPLMLEP+1
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPLMDFX EQU   IOPLMDNT+24
@NM00081 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMST  EQU   IOPRMIDE+7
IOPFMIDE EQU   IOPMACDR+9
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00092 EQU   IOPSRCDR+1
@NM00094 EQU   @NM00092+7
@NM00098 EQU   IOPSRCDR+9
IOPSRCFX EQU   IOPSRCNT+24
@NM00102 EQU   IOPSRCFX
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00108 EQU   IOPMODDR+1
@NM00110 EQU   @NM00108+7
@NM00114 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00118 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODST EQU   IOPLMODS+7
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00129 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSCNVL EQU   IOPSYSDR+1
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPSYSFX EQU   IOPSYSNT+24
@NM00136 EQU   IOPSYSFX
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPAPP   EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPPTFFX EQU   IOPPTFNT+24
@NM00145 EQU   IOPPTFFX
@NM00146 EQU   @NM00145
IOPPDTES EQU   IOPPTFFX+41
@NM00149 EQU   IOPPDTES
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTPEM EQU   IOPPTSDR+2
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPDSPRM EQU   IOPDSSPC
IOPDSSEC EQU   IOPDSSPC+2
IOPDSDIR EQU   IOPDSSPC+4
IOPDSPFX EQU   IOPPTSFX+6
IOPSYPLN EQU   IOPPTSFX+32
IOPPTFG1 EQU   IOPPTSFX+34
IOPPTSNP EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPSYASM EQU   IOPPTSFX+53
IOPSYASS EQU   IOPPTSFX+61
IOPSYASR EQU   IOPPTSFX+69
IOPSYASP EQU   IOPPTSFX+70
IOPSYCOM EQU   IOPPTSFX+170
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPP EQU   IOPPTSFX+304
IOPSYLKD EQU   IOPPTSFX+404
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKP EQU   IOPPTSFX+421
IOPSYSUP EQU   IOPPTSFX+521
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPP EQU   IOPPTSFX+538
IOPSYUPD EQU   IOPPTSFX+638
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPP EQU   IOPPTSFX+655
IOPSYZAP EQU   IOPPTSFX+755
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPP EQU   IOPPTSFX+772
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00174 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00174
IOPPTREL EQU   IOPPTFMD
IOPPTSND EQU   IOPPTREL
IOPPTIND EQU   IOPPTNTR+8
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBLEP2 EQU   IOPBPDS+9
@NM00178 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00178
IOPBFTB1 EQU   IOPBFTB0
PRLDATA  EQU   PRLEND
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
IOPBCEND EQU   IOPBPDS+21
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00180 EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
@NM00179 EQU   IOPBFTB1
IOPBAOSL EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBREFR EQU   IOPBLEP2
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
@NM00177 EQU   IOPBLEP2
IOPBDC   EQU   IOPBLEP2
@NM00176 EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00175 EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBRENT EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
@NM00173 EQU   IOPPTSFX+872
@NM00172 EQU   IOPPTSFX+35
@NM00171 EQU   IOPPTFG1
@NM00170 EQU   IOPPTSDR+4
IOPPCNVL EQU   IOPPTSDR+1
@NM00169 EQU   IOPPTSDR
IOPQFMTP EQU   IOPQFMLS+8
@NM00168 EQU   IOPQFMLS+7
IOPQFMND EQU   IOPQFMNM
@NM00167 EQU   IOPQFMDR
@NM00163 EQU   IOPQSMDR
@NM00162 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
IOPSBYNM EQU   IOPSBYNT
@NM00161 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00160 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00159 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00158 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00157 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00156 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00155 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00154 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00153 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00152 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00151 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
IOPPIND  EQU   IOPPNTRY+8
IOPPTFND EQU   IOPPMODS
IOPPFMID EQU   IOPPTFFX+73
@NM00150 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
IOPACCT  EQU   IOPDATES+15
IOPACCD  EQU   IOPDATES+12
IOPRSTT  EQU   IOPDATES+9
IOPRSTD  EQU   IOPDATES+6
IOPAPPT  EQU   IOPDATES+3
IOPAPPD  EQU   IOPDATES
IOPRECT  EQU   @NM00149+3
IOPRECD  EQU   @NM00149
@NM00148 EQU   IOPPTFFX+8
@NM00147 EQU   @NM00145+7
IOPPRELN EQU   @NM00146
@NM00144 EQU   IOPPTFDR+20
IOPSBYNO EQU   IOPPTFDR+13
IOPDBYNO EQU   IOPPTFDR+6
@NM00143 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPSBYP  EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00142 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPREGEN EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
IOPDUMMP EQU   IOPFLGS5
@NM00141 EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
IOPPTYPE EQU   IOPPTFDR+1
@NM00140 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
IOPSYSND EQU   IOPSYNTR
@NM00139 EQU   IOPSYSFX+21
IOPSYSID EQU   IOPSYSFX+13
IOPNUCID EQU   IOPSYSFX+12
IOPSREL  EQU   IOPSYSFX+8
@NM00138 EQU   @NM00136+7
@NM00137 EQU   @NM00136
@NM00135 EQU   IOPSYSDR+5
@NM00134 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPMTSNP EQU   IOPFLGS7
IOPPEMAX EQU   IOPSYSDR+2
@NM00133 EQU   IOPSYSDR
IOPDLIND EQU   IOPDNTRY+8
IOPDLBND EQU   IOPDSYS
@NM00132 EQU   IOPDLBFX+8
@NM00131 EQU   @NM00129+7
@NM00130 EQU   @NM00129
@NM00128 EQU   IOPDLBDR+1
@NM00127 EQU   IOPDLBDR
IOPMDIND EQU   IOPMNTRY+8
@NM00126 EQU   IOPMODST
IOPMODND EQU   IOPMODID
IOPDLIB  EQU   IOPMODFX+72
@NM00125 EQU   IOPMODFX+12
@NM00124 EQU   IOPMODF4
@NM00123 EQU   IOPMODF3
@NM00122 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00121 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00120 EQU   @NM00118+7
@NM00119 EQU   @NM00118
@NM00117 EQU   IOPMODDR+17
@NM00116 EQU   @NM00114+7
@NM00115 EQU   @NM00114
@NM00113 EQU   @NM00110
@NM00112 EQU   @NM00110
@NM00111 EQU   @NM00110
@NM00109 EQU   @NM00108
@NM00107 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00106 EQU   IOPSRCST
IOPSRCND EQU   IOPSRCID
IOPSRDLB EQU   IOPSRCFX+72
IOPSRSYS EQU   IOPSRCFX+64
@NM00105 EQU   IOPSRCFX+8
@NM00104 EQU   @NM00102+7
@NM00103 EQU   @NM00102
@NM00101 EQU   IOPSRCDR+18
IOPSRLNG EQU   IOPSRCDR+17
@NM00100 EQU   @NM00098+7
@NM00099 EQU   @NM00098
@NM00097 EQU   @NM00094
@NM00096 EQU   @NM00094
@NM00095 EQU   @NM00094
@NM00093 EQU   @NM00092
@NM00091 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
IOPMCTYP EQU   IOPMCIND
@NM00090 EQU   IOPMACST
IOPMACND EQU   IOPMACID
IOPMCDLB EQU   IOPMACFX+72
IOPMCSYS EQU   IOPMACFX+64
@NM00089 EQU   IOPMACFX+8
IOPBUTYP EQU   IOPBUNT+7
IOPBUSMD EQU   IOPBUNT
@NM00088 EQU   IOPMACDR+18
IOPMCLNG EQU   IOPMACDR+17
IOPFMST  EQU   IOPFMIDE+7
IOPFMID  EQU   IOPFMIDE
@NM00087 EQU   IOPRMST
IOPRMASM EQU   IOPRMST
@NM00086 EQU   IOPRMST
IOPRMID  EQU   IOPRMIDE
@NM00085 EQU   IOPMACDR
IOPLMIND EQU   IOPLNTRY+8
IOPLMDND EQU   IOPSYSLB
@NM00083 EQU   @NM00081+7
@NM00082 EQU   @NM00081
@NM00080 EQU   IOPLMDDR+6
@NM00079 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPCOPY  EQU   IOPFLGS3
@NM00078 EQU   IOPLMDF4
@NM00077 EQU   IOPLMDF3
@NM00076 EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPNE    EQU   IOPLMDF2
@NM00075 EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPAPF   EQU   IOPFLGS2
@NM00074 EQU   IOPLMDDR
@NM00073 EQU   IOPASMDR+9
IOPABUTP EQU   IOPABUNT+7
IOPABUPT EQU   IOPABUNT
IOPALLOC EQU   @NM00072+4
IOPUSED  EQU   @NM00072
IOPTPSEQ EQU   @NM00071+8
IOPVLSER EQU   @NM00071+2
IOPBLKSI EQU   @NM00071
IOPCQMAX EQU   IOPCQMAP+12
@NM00070 EQU   IOPCQMAP+11
@NM00069 EQU   IOPCQMAP+8
@NM00068 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00067 EQU   IOPSCMAP+11
@NM00066 EQU   IOPSCMAP+8
@NM00065 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00064 EQU   IOPNTMAX+11
@NM00063 EQU   IOPNTMAX+8
@NM00062 EQU   IOPNTMAX
@NM00061 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00060+5
IOPIPTF3 EQU   @NM00060
CRPDDNAM EQU   HMASMCRP+98
CRPBFSEQ EQU   CRPBUFFR+72
CRPBFCNT EQU   CRPBFCTL+71
CRPBFDTA EQU   CRPBFCTL
CRPINSWF EQU   CRPFLG2+1
CRPINSWE EQU   CRPFLG2+1
CRPINSWD EQU   CRPFLG2+1
CRPINSWC EQU   CRPFLG2+1
CRPINSWB EQU   CRPFLG2+1
CRPINSWA EQU   CRPFLG2+1
CRPINSW9 EQU   CRPFLG2+1
CRPINSW8 EQU   CRPFLG2+1
CRPINSW7 EQU   CRPFLG2
CRPINSW6 EQU   CRPFLG2
CRPINSW5 EQU   CRPFLG2
CRPINSW4 EQU   CRPFLG2
CRPEOF1  EQU   CRPINSW3
CRPWRTLG EQU   CRPINSW2
CRPEXADD EQU   CRPINSW1
CRPEOFSW EQU   CRPINSW0
@NM00010 EQU   CRPFLG1+1
CRPRPT   EQU   CRPFLG1+1
CRPLIST  EQU   CRPFLG1+1
CRPNOWPP EQU   CRPFLG1+1
CRPTRMEX EQU   CRPFLG1+1
CRPSCNCL EQU   CRPFLG1
CRPOFFST EQU   CRPFLG1
CRPOTHER EQU   CRPFLG1
CRPPRINT EQU   CRPFLG1
CRPLOG   EQU   CRPFLG1
CRPPTS   EQU   CRPFLG1
CRPLOGCK EQU   CRPFLG1
CRPBFPRM EQU   CRPFLG1
@NM00009 EQU   HMASMCRP+11
CRPOUTDS EQU   HMASMCRP+9
CRPINDS  EQU   HMASMCRP+8
@NM00008 EQU   HMASMCRP+1
CRPUXNUM EQU   HMASMCRP
@NM00007 EQU   UCLFLG5
UCLICTOK EQU   UCLFLG5
@NM00006 EQU   UCLFLG4
UCLBPFM  EQU   UCLFLG4
@NM00005 EQU   UCLFLG4
UCLBPIRQ EQU   UCLFLG4
UCLBPREQ EQU   UCLFLG4
UCLBPPRE EQU   UCLFLG4
UCLBPID  EQU   UCLFLG4
@NM00004 EQU   UCLFLG3+1
UCLSTS   EQU   UCLFLG3
UCLACRQ  EQU   UCLFLG3
UCLCRQ   EQU   UCLFLG3
UCLSCDS  EQU   UCLFLG3
UCLACDS  EQU   UCLFLG3
UCLCDS   EQU   UCLFLG3
UCLMASS  EQU   UCLFLG2
@NM00003 EQU   UCLFLG2
UCLFMID  EQU   UCLFLG2
UCLGROUP EQU   UCLFLG2
UCLEXC   EQU   UCLFLG2
UCLSEL   EQU   UCLFLG2
@NM00002 EQU   UCLFLG1+1
UCLDISW  EQU   UCLFLG1+1
UCLDISR  EQU   UCLFLG1+1
UCLDISN  EQU   UCLFLG1+1
UCLNOJCL EQU   UCLFLG1
UCLUSER  EQU   UCLFLG1
UCLAPAR  EQU   UCLFLG1
UCLCOMP  EQU   UCLFLG1
UCLASSEM EQU   UCLFLG1
UCLCHECK EQU   UCLFLG1
UCLNOAPP EQU   UCLFLG1
@NM00001 EQU   UCLPARM+5
UCLNUCID EQU   UCLPARM+4
UCLJCLGT EQU   UCLPARM
@NM00183 EQU   SCPEOR
SCPRTERR EQU   SCPEOR
SCPCOMNT EQU   SCPEOR
SCPNOCT  EQU   SCPEOR
SCPCONT  EQU   SCPEOR
SCPINLN  EQU   HMASMSCP+20
SCPIORTN EQU   HMASMSCP+12
SCPWKAR  EQU   HMASMSCP+8
PRLCONC  EQU   PRLTIME+2
@NM00182 EQU   PRLTIME
PRLHDADR EQU   PRLDATE
@NM00181 EQU   PRLFLGS
PRLHEADO EQU   PRLFLGS
PRLHEAD  EQU   PRLFLGS
PRLRLEN  EQU   HMASMPRL
IOPBS04E EQU   IOPBS04+2
IOPBAPFC EQU   IOPBAPF+1
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
IOPQSMTP EQU   IOPQSMLS+8
@NM00166 EQU   IOPQSMLS+7
IOPQSMND EQU   IOPQSMNM
@NM00165 EQU   @NM00164+7
IOPQSMFM EQU   @NM00164
@NM00084 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00059 EQU   IOPUSERL
@NM00058 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00057 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00056 EQU   @NM00053+10
IOPSEQNO EQU   @NM00053+8
@NM00055 EQU   @NM00054+7
IOPPTFNM EQU   @NM00054
IOPNAM17 EQU   IOPNAME
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00052 EQU   CCABLDLM+2
@NM00051 EQU   CCABLDLM
CCAUPDPM EQU   @NM00049+24
@NM00050 EQU   @NM00049+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00049+12
CCAUPDTE EQU   @NM00049+8
CCAUPDNM EQU   @NM00049
CCASUPPM EQU   @NM00047+24
@NM00048 EQU   @NM00047+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00047+12
CCAIOSUP EQU   @NM00047+8
CCASUPNM EQU   @NM00047
CCAZAPPM EQU   @NM00045+24
@NM00046 EQU   @NM00045+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00045+12
CCASPZAP EQU   @NM00045+8
CCAZAPNM EQU   @NM00045
CCACOMPM EQU   @NM00043+24
@NM00044 EQU   @NM00043+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00043+12
CCACOMRS EQU   @NM00043+8
CCACOMNM EQU   @NM00043
CCACPYPM EQU   @NM00041+24
@NM00042 EQU   @NM00041+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00041+12
CCACOPY  EQU   @NM00041+8
CCACPYNM EQU   @NM00041
CCAASMPM EQU   @NM00039+24
@NM00040 EQU   @NM00039+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00039+12
CCAASM   EQU   @NM00039+8
CCAASMNM EQU   @NM00039
CCALKDPM EQU   @NM00037+24
@NM00038 EQU   @NM00037+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00037+12
CCALKED  EQU   @NM00037+8
CCALKDNM EQU   @NM00037
CCAPGMPM EQU   @NM00035+24
@NM00036 EQU   @NM00035+21
CCABPGRC EQU   @NM00035+20
CCABPGSP EQU   @NM00035+12
CCABPGAD EQU   @NM00035+8
CCABPGNM EQU   @NM00035
CCAEND   EQU   HMASMCCA+371
@NM00034 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00033 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00032 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00031 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00030 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00029 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00028 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00027 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00026 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00025 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCAAPPLY EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00024 EQU   @NM00019+18
@NM00023 EQU   @NM00019+16
CCATBLPA EQU   @NM00019+12
@NM00022 EQU   @NM00019+8
@NM00021 EQU   @NM00019+4
@NM00020 EQU   @NM00019
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCAICLMD EQU   CCAFICT+12
CCAICMOD EQU   CCAFICT+8
CCAICPTF EQU   CCAFICT+4
CCAICT   EQU   CCAFICT
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00018 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
@NM00017 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00016 EQU   CCAFBUFR+122
@NM00015 EQU   CCAFBUFR+120
@NM00014 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00013 EQU   CCAFBUFR+88
@NM00012 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00011 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00345 EQU   RXXXLOC
@RF00355 EQU   @EL00003
@RF00364 EQU   @EL00003
@RF00371 EQU   @EL00003
@RF00395 EQU   @EL00003
@RC00393 EQU   @EL00003
@RC00388 EQU   @EL00003
@RF00398 EQU   @EL00003
@RC00438 EQU   @EL00004
@RC00432 EQU   @EL00004
@RC00450 EQU   @EL00004
@RC00445 EQU   @EL00004
@RC00464 EQU   @EL00004
@RC00458 EQU   @EL00004
@RC00481 EQU   @EL00004
@RC00475 EQU   @EL00004
@RC00496 EQU   @EL00004
@RC00510 EQU   @EL00004
@RC00504 EQU   @EL00004
@RC00522 EQU   @EL00004
@RC00517 EQU   @EL00004
@RF00537 EQU   @EL00004
@RF00553 EQU   @EL00004
@RC00578 EQU   @EL00004
@RC00572 EQU   @EL00004
@RC00590 EQU   @EL00004
@RC00585 EQU   @EL00004
@RC00615 EQU   @EL00004
@RC00609 EQU   @EL00004
@RC00627 EQU   @EL00004
@RC00622 EQU   @EL00004
@RC00664 EQU   @EL00004
@RC00658 EQU   @EL00004
@RC00676 EQU   @EL00004
@RC00671 EQU   @EL00004
@RC00713 EQU   @EL00004
@RC00707 EQU   @EL00004
@RC00725 EQU   @EL00004
@RC00720 EQU   @EL00004
@RC00776 EQU   @EL00004
@RC00770 EQU   @EL00004
@RC00788 EQU   @EL00004
@RC00783 EQU   @EL00004
@RC00835 EQU   @EL00004
@RC00848 EQU   @EL00004
@RC00842 EQU   @EL00004
@RC00860 EQU   @EL00004
@RC00855 EQU   @EL00004
@RC00876 EQU   @EL00005
@RC00870 EQU   @EL00005
@RC00893 EQU   @EL00005
@RC00887 EQU   @EL00005
@RC00934 EQU   @RC00932
@RF00949 EQU   @EL00006
@RF00966 EQU   @EL00009
@RC00440 EQU   @RC00438
@RC00460 EQU   @RC00458
@RC00466 EQU   @RC00464
@RC00477 EQU   @RC00475
@RC00483 EQU   @RC00481
@RC00512 EQU   @RC00510
@RC00580 EQU   @RC00578
@RC00617 EQU   @RC00615
@RC00666 EQU   @RC00664
@RC00715 EQU   @RC00713
@RC00778 EQU   @RC00776
@RC00850 EQU   @RC00848
@RC00872 EQU   @RC00870
@RC00878 EQU   @RC00876
@RC00889 EQU   @RC00887
@RC00895 EQU   @RC00893
@ENDDATA EQU   *
         END   HMASMUC2,(C'PLS2226',0802,78334)
