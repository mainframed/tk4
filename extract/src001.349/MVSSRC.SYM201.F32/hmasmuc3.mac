         TITLE 'HMASMUC3 - HMASMP UCLIN TO SMPCRQ/SMPACRQ'
HMASMUC3 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMUC3  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(8),0(@01)                                  0001
         EJECT
*                                                                  0196
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE PTRS AND LOCAL VARIABLES                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0196
*   IOPPTR=CCAIOPTR;                /* COMMON IOP                    */
         L     IOPPTR,CCAIOPTR(,CCAPTR)                            0196
*   IOPPTR2=ADDR(UC3IOP);           /* IOP FOR SYSMODS               */
         LA    @10,UC3IOP                                          0197
         ST    @10,IOPPTR2                                         0197
*   SAVBUFAD=IOPBUFAD;              /* SAVE BUFFER ADDRESS           */
         MVC   SAVBUFAD(4),IOPBUFAD(IOPPTR)                        0198
*   SCPPTR=CRPSCPAD;                /* PICK UP SCP FROM CRP          */
         L     @10,@PC00001+4                                      0199
         MVC   SCPPTR(4),CRPSCPAD(@10)                             0199
*   HMASMMGP=''B;                   /* ZERO MSG PARM                 */
         XC    HMASMMGP(24),HMASMMGP                               0200
*   MGPPRINT=ON;                    /* ALL MSG TO SMPOUT AND SMPLOG  */
*   MGPHLDS=ON;                     /*                               */
         OI    MGPPRINT,B'10010000'                                0202
*   UC3RTNCD=ZERO;                  /* INIT RETURN CODE              */
         MVI   UC3RTNCD,X'00'                                      0203
*   UCLSWTBL=''B;                   /* ZERO INTERNAL SW              */
*                                                                  0204
         XC    UCLSWTBL(5),UCLSWTBL                                0204
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP READING INPUT CARDS AND SCANNING THEM UNTIL EITHER END OF*/
*   /* FILE OR END OF UCLIN STATEMENTS OR SEVERE ERROR ENCOUNTERED   */
*   /* DURING PROCESSING                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0205
*   DO WHILE(                       /* CONTINUE PROCESSING WHILE     */
*         UC3RTNCD<STOPSMP          /* NO ERRORS                     */
*         &ENDUCL=OFF               /* AND ENDUCL NOT FOUND          */
*         &CRPEOFEN=OFF             /* AND NOT END OF FILE ON INPUT  */
*         );                        /*                               */
         B     @DE00205                                            0205
@DL00205 DS    0H                                                  0206
*     TMPRTNCD=ZERO;                /* INIT THIS STMT RTN CD         */
         MVI   TMPRTNCD,X'00'                                      0206
*     UCLSWTBL=''B;                 /* INIT SW                       */
         XC    UCLSWTBL(5),UCLSWTBL                                0207
*     IF UC3RTNCD=STOPFUNC          /* IF PREV ERR TO STOP UCL       */
*         ×UCLFLUSH=ON              /* OR IN FLUSH MODE              */
*       THEN                        /* THEN SET                      */
         CLI   UC3RTNCD,12                                         0208
         BE    @RT00208                                            0208
         L     @10,@PC00001                                        0208
         TM    UCLFLUSH(@10),B'00000010'                           0208
         BNO   @RF00208                                            0208
@RT00208 DS    0H                                                  0209
*       DO;                         /* UP SO THAT STATEMENT WILL     */
*         UCLFLUSH=ON;              /* BE FLUSHED                    */
         L     @10,@PC00001                                        0210
         OI    UCLFLUSH(@10),B'00000010'                           0210
*         SCPNORT=ON;               /*                               */
         L     @10,SCPPTR                                          0211
         OI    SCPNORT(@10),B'00000100'                            0211
*       END;                        /*                               */
*     IOPNAME=BLANK8;               /* BLANK OUT IOPNAME             */
*                                                                  0213
@RF00208 MVC   IOPNAME(8,IOPPTR),@CC01471                          0213
*     /***************************************************************/
*     /*                                                             */
*     /* READ IN NEXT CONTROL CARD                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0214
*     CALL HMASMCRD(HMASMCRP);      /* READ NEXT RECORD              */
         L     @10,@PC00001+4                                      0214
         ST    @10,@AL00001                                        0214
         L     @15,@CV01449                                        0214
         LA    @01,@AL00001                                        0214
         BALR  @14,@15                                             0214
*     IF CRPRETRN>CRPEOF            /* IF ERR IN READ                */
*       THEN                        /*                               */
         L     @10,@PC00001+4                                      0215
         CLI   CRPRETRN(@10),4                                     0215
         BNH   @RF00215                                            0215
*       TMPRTNCD=MAX(TMPRTNCD,CRPRETRN);/* SAVE RC                   */
*                                                                  0216
         SLR   @08,@08                                             0216
         IC    @08,TMPRTNCD                                        0216
         SLR   @15,@15                                             0216
         IC    @15,CRPRETRN(,@10)                                  0216
         CR    @08,@15                                             0216
         BNL   *+6
         LR    @08,@15                                             0216
         STC   @08,TMPRTNCD                                        0216
*     /***************************************************************/
*     /*                                                             */
*     /* IF CARD READ OK THEN SCAN IT                                */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0217
*     IF CRPRETRN=ZERO              /* IF CARD READ OK               */
*       THEN                        /*                               */
@RF00215 L     @10,@PC00001+4                                      0217
         CLI   CRPRETRN(@10),0                                     0217
         BNE   @RF00217                                            0217
*       DO;                         /*                               */
*         SCPSRCH=ADSCNTBL;         /* PTR TO FIRST DSCAN            */
         L     @10,SCPPTR                                          0219
         MVC   SCPSRCH(4,@10),ADSCNTBL                             0219
*         CALL HMASMSCN(HMASMSCP);  /*                               */
         ST    @10,@AL00001                                        0220
         L     @15,@CV01452                                        0220
         LA    @01,@AL00001                                        0220
         BALR  @14,@15                                             0220
*         RFY                                                      0221
*           RTNCODE RSTD;           /*                               */
*         IF UCLFLUSH=OFF           /* IF NOT IN FLUSH MODE          */
*             &ENDUCL=OFF           /* AND NOT ENDUCL CARD           */
*           THEN                    /*                               */
         L     @14,@PC00001                                        0222
         TM    UCLFLUSH(@14),B'00000010'                           0222
         BNZ   @RF00222                                            0222
         TM    ENDUCL,B'10000000'                                  0222
         BNZ   @RF00222                                            0222
*           DO;                     /*                               */
*             CALL UC3ERRCK;        /*                               */
         BAL   @14,UC3ERRCK                                        0224
*             TMPRTNCD=MAX(TMPRTNCD,RTNCODE);/*                      */
         SLR   @14,@14                                             0225
         IC    @14,TMPRTNCD                                        0225
         CR    @14,RTNCODE                                         0225
         BNL   *+6
         LR    @14,RTNCODE                                         0225
         STC   @14,TMPRTNCD                                        0225
*             IF RTNCODE<STOPPTF    /*                               */
*               THEN                /*                               */
         CH    RTNCODE,@CH00059                                    0226
         BNL   @RF00226                                            0226
*               DO;                 /*                               */
*                 CALL UC3STOW;     /*                               */
         BAL   @14,UC3STOW                                         0228
*                 TMPRTNCD=MAX(TMPRTNCD,RTNCODE);/*                  */
         SLR   @14,@14                                             0229
         IC    @14,TMPRTNCD                                        0229
         CR    @14,RTNCODE                                         0229
         BNL   *+6
         LR    @14,RTNCODE                                         0229
         STC   @14,TMPRTNCD                                        0229
*               END;                /*                               */
*                                                                  0230
*             /*******************************************************/
*             /*                                                     */
*             /* NOW ISSUE ERROR OR SUCCESS MESSAGE                  */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0231
*             MGPCLEAR=''B;         /*                               */
@RF00226 XC    MGPCLEAR(6),MGPCLEAR                                0231
*             IF TMPRTNCD<STOPPTF   /*                               */
*               THEN                /*                               */
         CLI   TMPRTNCD,8                                          0232
         BNL   @RF00232                                            0232
*               DO;                 /*                               */
*                 MGPMGNO1=HMA255I; /* UPDATE COMPLETE               */
         MVC   MGPMGNO1(2),@CH00809                                0234
*                 MGPMGNO2=PART018; /* FOR XXXXXXXX                  */
         MVC   MGPMGNO2(2),@CH00553                                0235
*                 MGPVARPT(1)=ADDR(IOPNAME);/*                       */
         LA    @14,IOPNAME(,IOPPTR)                                0236
         ST    @14,MGPVARPT                                        0236
*                 MGPTYPE=MGPINFO;  /*                               */
         MVI   MGPTYPE,X'01'                                       0237
*               END;                /*                               */
*             ELSE                  /*                               */
*               DO;                 /*                               */
         B     @RC00232                                            0239
@RF00232 DS    0H                                                  0240
*                 MGPMGNO1=HMA256I; /* UPDATE PROCESSING TERMINATED -
*                                      UPDATE NOT COMPLETE           */
         MVC   MGPMGNO1(2),@CH01115                                0240
*                 MGPTYPE=MGPERR;   /*                               */
         MVI   MGPTYPE,X'03'                                       0241
*               END;                /*                               */
*             CALL HMASMMSG(HMASMMGP);/*                             */
@RC00232 L     @15,@CV01451                                        0243
         LA    @01,@AL00243                                        0243
         BALR  @14,@15                                             0243
*           END;                    /*                               */
*         RFY                                                      0245
*           RTNCODE UNRSTD;         /*                               */
*                                                                  0245
@RF00222 DS    0H                                                  0246
*         /***********************************************************/
*         /*                                                         */
*         /* WRITE BLANK LINE TO SEPERATE UCLIN STATEMENTS           */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0246
*         PRLFLGS=ZERO;             /*                               */
         L     @10,IOPBUFAD(,IOPPTR)                               0246
         MVI   PRLFLGS(@10),X'00'                                  0246
*         PRLBLANK=ON;              /*                               */
         OI    PRLBLANK(@10),B'00100000'                           0247
*         IOPDSID=IOPPRINT;         /*                               */
         MVI   IOPDSID(IOPPTR),X'0B'                               0248
*         IOPFUNCT=IOPWRITE;        /*                               */
         MVI   IOPFUNCT(IOPPTR),X'51'                              0249
*         CALL HMASMIO(HMASMIOP);   /*                               */
         ST    IOPPTR,@AL00001                                     0250
         L     @15,@CV01450                                        0250
         LA    @01,@AL00001                                        0250
         BALR  @14,@15                                             0250
*         IF IOPRETRN=IOPGOOD       /*                               */
*           THEN                    /*                               */
         CLI   IOPRETRN(IOPPTR),0                                  0251
         BNE   @RF00251                                            0251
*           CALL HMASMIO(HMASMIOP); /*                               */
         ST    IOPPTR,@AL00001                                     0252
         L     @15,@CV01450                                        0252
         LA    @01,@AL00001                                        0252
         BALR  @14,@15                                             0252
*         TMPRTNCD=MAX(TMPRTNCD,IOPRETRN);/*                         */
@RF00251 SLR   @10,@10                                             0253
         IC    @10,TMPRTNCD                                        0253
         SLR   @08,@08                                             0253
         IC    @08,IOPRETRN(,IOPPTR)                               0253
         CR    @10,@08                                             0253
         BNL   *+6
         LR    @10,@08                                             0253
         STC   @10,TMPRTNCD                                        0253
*       END;                        /*                               */
*     UC3RTNCD=MAX(UC3RTNCD,TMPRTNCD);/*                             */
@RF00217 SLR   @10,@10                                             0255
         IC    @10,UC3RTNCD                                        0255
         SLR   @08,@08                                             0255
         IC    @08,TMPRTNCD                                        0255
         CR    @10,@08                                             0255
         BNL   *+6
         LR    @10,@08                                             0255
         STC   @10,UC3RTNCD                                        0255
*   END;                            /*                               */
@DE00205 CLI   UC3RTNCD,16                                         0256
         BNL   @DC00205                                            0256
         TM    ENDUCL,B'10000000'                                  0256
         BNZ   @DC00205                                            0256
         L     @10,@PC00001+4                                      0256
         TM    CRPEOFEN(@10),B'10000000'                           0256
         BZ    @DL00205                                            0256
@DC00205 DS    0H                                                  0257
*   RETURN CODE(UC3RTNCD);          /*                               */
         SLR   @15,@15                                             0257
         IC    @15,UC3RTNCD                                        0257
         L     @13,4(,@13)                                         0257
         L     @14,12(,@13)                                        0257
         LM    @00,@12,20(@13)                                     0257
         BR    @14                                                 0257
         EJECT
*                                                                  0258
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTS CALLED WHEN UCL FUNCTION TYPE HIT                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0258
*RXXXFNC:                           /*                               */
*   PROCEDURE;                      /*                               */
RXXXFNC  STM   @14,@12,12(@13)                                     0258
*RENDUCL:                           /*                               */
*   ENTRY;                          /*                               */
         B     @EC00259                                            0259
RENDUCL  STM   @14,@12,12(@13)                                     0259
@EC00259 DS    0H                                                  0260
*   ENDUCL=ON;                      /* ENDUCL FOUND                  */
         OI    ENDUCL,B'10000000'                                  0260
*   RETURN;                         /*                               */
@EL00002 DS    0H                                                  0261
@EF00002 DS    0H                                                  0261
@ER00002 LM    @14,@12,12(@13)                                     0261
         BR    @14                                                 0261
*RREP00:                            /*                               */
*   ENTRY;                          /*                               */
RREP00   STM   @14,@12,12(@13)                                     0262
*   REP=ON;                         /*                               */
         OI    REP,B'10000000'                                     0263
*   RETURN;                         /*                               */
         B     @EL00002                                            0264
*RDEL00:                            /*                               */
*   ENTRY;                          /*                               */
RDEL00   STM   @14,@12,12(@13)                                     0265
*   DEL=ON;                         /*                               */
         OI    DEL,B'00100000'                                     0266
*   RETURN;                         /*                               */
         B     @EL00002                                            0267
*RADD00:                            /*                               */
*   ENTRY;                          /*                               */
RADD00   STM   @14,@12,12(@13)                                     0268
*   ADD=ON;                         /*                               */
         OI    ADD,B'01000000'                                     0269
*   RETURN;                         /*                               */
*                                                                  0270
         B     @EL00002                                            0270
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT TO HANDLE TOTAL DELETE OF ENTRY                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0271
*RXXXTD:                            /*                               */
*   ENTRY;                          /*                               */
RXXXTD   STM   @14,@12,12(@13)                                     0271
*   IF DEL=ON&UCLFLUSH=OFF          /*                               */
*     THEN                          /*                               */
         TM    DEL,B'00100000'                                     0272
         BNO   @RF00272                                            0272
         L     @10,@PC00001                                        0272
         TM    UCLFLUSH(@10),B'00000010'                           0272
         BNZ   @RF00272                                            0272
*     TOTALDEL=ON;                  /*                               */
         OI    TOTALDEL,B'00001000'                                0273
*   RETURN;                         /*                               */
*                                                                  0274
         B     @EL00002                                            0274
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT ENTERED WHEN DATA FOUND AFTER PERIOD                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0275
*RXTRADTA:                          /*                               */
*   ENTRY;                          /*                               */
RXTRADTA STM   @14,@12,12(@13)                                     0275
*   SCPRETRN=SCPSTOP;               /* SYNTAX ERROR                  */
         L     @10,SCPPTR                                          0276
         MVI   SCPRETRN(@10),X'08'                                 0276
*   RETURN;                         /*                               */
         B     @EL00002                                            0277
*   END RXXXFNC;                    /*                               */
         B     @EL00002                                            0278
         EJECT
*                                                                  0279
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTS CALLED WHEN ENTRY TYPE FOUND                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0279
*RXXX00:                            /*                               */
*   PROCEDURE;                      /*                               */
RXXX00   STM   @14,@12,@SA00003                                    0279
*   RFY                                                            0280
*     HMASMIOP BASED(IOPPTR);       /*                               */
*RSMD00:                            /*                               */
*   ENTRY;                          /*                               */
         B     @EC00281                                            0281
RSMD00   STM   @14,@12,@SA00003                                    0281
@EC00281 DS    0H                                                  0282
*   IOPTYPE=IOPCSR;                 /*                               */
         MVI   IOPTYPE(IOPPTR),X'0F'                               0282
*   IOPQSMNT=''B;                   /* INIT ENTRY                    */
         XC    IOPQSMNT(2,IOPPTR),IOPQSMNT(IOPPTR)                 0283
*   RETURN;                         /*                               */
@EL00003 DS    0H                                                  0284
@EF00003 DS    0H                                                  0284
@ER00003 LM    @14,@12,@SA00003                                    0284
         BR    @14                                                 0284
*RFMD00:                            /*                               */
*   ENTRY;                          /*                               */
RFMD00   STM   @14,@12,@SA00003                                    0285
*   IOPTYPE=IOPFMD;                 /*                               */
         MVI   IOPTYPE(IOPPTR),X'0E'                               0286
*   IOPQFMNT=''B;                   /* INIT ENTRY                    */
         XC    IOPQFMNT(2,IOPPTR),IOPQFMNT(IOPPTR)                 0287
*   IOPQFMND(1)=IOPEOLST;           /* INIT END OF ENTRY             */
         MVI   IOPQFMND(IOPPTR),X'FF'                              0288
*   RETURN;                         /*                               */
*                                                                  0289
         B     @EL00003                                            0289
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT TO LOCATE ENTRY WHEN NAME FOUND                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0290
*RXXXNAM:                           /*                               */
*   ENTRY;                          /*                               */
RXXXNAM  STM   @14,@12,@SA00003                                    0290
*   IOPNAME=SCPSTRNG(1:SCPPMLN);    /* MOVE NAME TO IOP              */
         MVI   IOPNAME+1(IOPPTR),C' '                              0291
         MVC   IOPNAME+2(6,IOPPTR),IOPNAME+1(IOPPTR)               0291
         L     @10,SCPPTR                                          0291
         LH    @08,SCPPMLN(,@10)                                   0291
         BCTR  @08,0                                               0291
         L     @10,SCPCHAR(,@10)                                   0291
         EX    @08,@SM01672                                        0291
*   IF UCLCRQ=ON                    /*                               */
*     THEN                          /*                               */
         L     @10,@PC00001                                        0292
         TM    UCLCRQ(@10),B'00010000'                             0292
         BNO   @RF00292                                            0292
*     IOPDSID=IOPCRQ;               /*                               */
         MVI   IOPDSID(IOPPTR),X'1C'                               0293
*   ELSE                            /*                               */
*     IOPDSID=IOPACRQ;              /*                               */
         B     @RC00292                                            0294
@RF00292 MVI   IOPDSID(IOPPTR),X'1E'                               0294
*   IOPFUNCT=IOPLOC;                /* LOCATE ENTRY ON DATASET       */
@RC00292 MVI   IOPFUNCT(IOPPTR),X'03'                              0295
*   CALL HMASMIO(HMASMIOP);         /*                               */
*                                                                  0296
         ST    IOPPTR,@AL00001                                     0296
         L     @15,@CV01450                                        0296
         LA    @01,@AL00001                                        0296
         BALR  @14,@15                                             0296
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK POSSIBLE CONDITIONS FROM LOCATE                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0297
*   IF IOPRETRN=IOPNTFND            /* IF NOT FOUND                  */
*     THEN                          /*                               */
         CLI   IOPRETRN(IOPPTR),4                                  0297
         BNE   @RF00297                                            0297
*     DO;                           /*                               */
*       TOTAL=ON;                   /* IS TOTAL ADD                  */
         OI    TOTAL,B'00010000'                                   0299
*       IF REP=ON                   /* IF REP                        */
*         THEN                      /* THEN ISSUE MSG                */
         TM    REP,B'10000000'                                     0300
         BNO   @RF00300                                            0300
*         DO;                       /*                               */
*           MGPCLEAR=''B;           /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                0302
*           MGPMGNO1=HMA277I;       /* XXXXXXXX XXXXXXXX TO BE     0303
*                                      REPLACED DOES NOT EXIST - ADD
*                                      ASSUMED                       */
         MVC   MGPMGNO1(2),@CH01460                                0303
*           MGPVARPT(1)=ADDR(CCATYPEA(IOPTYPE));/* TYPE ENTRY        */
         SLR   @10,@10                                             0304
         IC    @10,IOPTYPE(,IOPPTR)                                0304
         SLA   @10,3                                               0304
         L     @08,CCATPAD(,CCAPTR)                                0304
         AL    @08,@CF01675                                        0304
         LA    @10,CCATYPEA(@10,@08)                               0304
         ST    @10,MGPVARPT                                        0304
*           MGPVARPT(2)=ADDR(IOPNAME);/* MEMBER NAME                 */
         LA    @10,IOPNAME(,IOPPTR)                                0305
         ST    @10,MGPVARPT+4                                      0305
*           MGPTYPE=MGPWARN;        /*                               */
         MVI   MGPTYPE,X'02'                                       0306
*           CALL HMASMMSG(HMASMMGP);/*                               */
         L     @15,@CV01451                                        0307
         LA    @01,@AL00307                                        0307
         BALR  @14,@15                                             0307
*           WARNSW=ON;              /*                               */
         OI    WARNSW,B'00001000'                                  0308
*         END;                      /*                               */
*       ELSE                        /* IF NOT REP                    */
*         IF DEL=ON                 /* THEN IF DEL                   */
*           THEN                    /* THEN                          */
         B     @RC00300                                            0310
@RF00300 TM    DEL,B'00100000'                                     0310
         BNO   @RF00310                                            0310
*           DO;                     /*                               */
*             SCPRETRN=SCPNDSCN;    /*                               */
         L     @10,SCPPTR                                          0312
         MVI   SCPRETRN(@10),X'04'                                 0312
*             MGPCLEAR=''B;         /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                0313
*             MGPMGNO1=HMA253I;     /* XXXXXXXX ENTRY XXXXXXXX TO BE
*                                      DELETED DOES NOT EXIST        */
         MVC   MGPMGNO1(2),@CH01110                                0314
*             MGPVARPT(1)=ADDR(CCATYPEA(IOPTYPE));/* TYPE ENTRY      */
         SLR   @10,@10                                             0315
         IC    @10,IOPTYPE(,IOPPTR)                                0315
         SLA   @10,3                                               0315
         L     @08,CCATPAD(,CCAPTR)                                0315
         AL    @08,@CF01675                                        0315
         LA    @10,CCATYPEA(@10,@08)                               0315
         ST    @10,MGPVARPT                                        0315
*             MGPVARPT(2)=ADDR(IOPNAME);/* MEMBER NAME               */
         LA    @10,IOPNAME(,IOPPTR)                                0316
         ST    @10,MGPVARPT+4                                      0316
*             MGPTYPE=MGPERR;       /*                               */
         MVI   MGPTYPE,X'03'                                       0317
*             CALL HMASMMSG(HMASMMGP);/*                             */
         L     @15,@CV01451                                        0318
         LA    @01,@AL00318                                        0318
         BALR  @14,@15                                             0318
*             ERRSW=ON;             /* INDICATE ERROR FOUND          */
         OI    ERRSW,B'00010000'                                   0319
*           END;                    /*                               */
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF IOPRETRN>IOPNTFND          /*                               */
*       THEN                        /*                               */
         B     @RC00297                                            0322
@RF00297 CLI   IOPRETRN(IOPPTR),4                                  0322
         BNH   @RF00322                                            0322
*       DO;                         /*                               */
*         SCPRETRN=IOPRETRN;        /*                               */
         L     @10,SCPPTR                                          0324
         MVC   SCPRETRN(1,@10),IOPRETRN(IOPPTR)                    0324
*         MGPCLEAR=''B;             /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                0325
*         MGPMGNO1=HMA256I;         /* UPDATE PROCESSING TERMINATED -
*                                      UPDATE NOT COMPLETE           */
         MVC   MGPMGNO1(2),@CH01115                                0326
*         MGPTYPE=MGPERR;           /*                               */
         MVI   MGPTYPE,X'03'                                       0327
*         CALL HMASMMSG(HMASMMGP);  /*                               */
         L     @15,@CV01451                                        0328
         LA    @01,@AL00328                                        0328
         BALR  @14,@15                                             0328
*       END;                        /*                               */
*   RETURN;                         /*                               */
         B     @EL00003                                            0330
*   END RXXX00;                     /*                               */
         B     @EL00003                                            0331
         EJECT
*                                                                  0332
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTS TO HANDLE KEYWORD FOR SYSMOD TYPE ENTRIES               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0332
*RSMDXXX:                           /*                               */
*   PROCEDURE;                      /*                               */
RSMDXXX  STM   @14,@12,@SA00004                                    0332
*   RFY                                                            0333
*     HMASMIOP BASED(IOPPTR2);      /* IOP FOR SMD ENTRY             */
*                                                                  0333
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT CALLED WHEN CLOSING PAREN AFTER SYSMOD NAME IS FOUND.    */
*   /* THIS ROUTINE BUILDS A GTA FILE CONTAINING THE FMID/REQ PAIRS  */
*   /* IN THE EXISTING SYSMOD ENTRY                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0334
*RSMDRP01:                          /*                               */
*   ENTRY;                          /*                               */
         B     @EC00334                                            0334
RSMDRP01 STM   @14,@12,@SA00004                                    0334
@EC00334 DS    0H                                                  0335
*   HMASMIOP=IOPPTR->HMASMIOP;      /* MOVE IOP WITH SMD ENTRY       */
         L     @10,IOPPTR2                                         0335
         MVC   HMASMIOP(68,@10),HMASMIOP(IOPPTR)                   0335
*   IOPCQMAX=IOPPTR->IOPCQMAX;      /* TO SMD IOP                    */
         MVC   IOPCQMAX(2,@10),IOPCQMAX(IOPPTR)                    0336
*   HMASMGTP=''B;                   /* SET UP GTP FOR FMID/REQ PAIRS */
         XC    HMASMGTP(28),HMASMGTP                               0337
*   GTPRCDLN=LENGTH(SMDRCD);        /*                               */
         MVC   GTPRCDLN(2),@CH00580                                0338
*   GTPKEYLN=LENGTH(SMDKEY);        /* KEY LENGTH                    */
         MVC   GTPKEYLN(2),@CH00196                                0339
*   GTPBUFAD=ADDR(SMDRCD);          /*                               */
         LA    @08,SMDRCD                                          0340
         ST    @08,GTPBUFAD                                        0340
*   GTPPSIZE=GTP1K;                 /*                               */
         NI    GTPPSIZE,B'11111010'                                0341
         OI    GTPPSIZE,B'00000010'                                0341
*   SMDKEY='';                      /* INIT RCD TO BLANK             */
         MVI   SMDKEY,C' '                                         0342
         MVC   SMDKEY+1(31),SMDKEY                                 0342
*   IF TOTAL=OFF                    /* IF NOT TOTAL ADD/REP          */
*     THEN                          /*                               */
         TM    TOTAL,B'00010000'                                   0343
         BNZ   @RF00343                                            0343
*     DO;                           /*                               */
*       GTPFUNCT=GTPADD;            /* SET TO ADD RCD TO FILE        */
         MVI   GTPFUNCT,X'04'                                      0345
*       IOPFUNCT=IOPPOSI;           /* POSITION TO READ DATA RCDS    */
         MVI   IOPFUNCT(@10),X'02'                                 0346
*       CALL HMASMIO(HMASMIOP);     /*                               */
         ST    @10,@AL00001                                        0347
         L     @15,@CV01450                                        0347
         LA    @01,@AL00001                                        0347
         BALR  @14,@15                                             0347
*       IOPFUNCT=IOPREAD;           /*                               */
         L     @10,IOPPTR2                                         0348
         MVI   IOPFUNCT(@10),X'01'                                 0348
*       DO WHILE(                   /* LOOP                          */
*             IOPRETRN=IOPGOOD      /* TILL READ ERR OR EOF          */
*             &GTPRETRN=GTPGOOD);   /* AND NO GTP ERROR              */
         B     @DE00349                                            0349
@DL00349 DS    0H                                                  0350
*         CALL HMASMIO(HMASMIOP);   /* READ DATA RECORD              */
         L     @10,IOPPTR2                                         0350
         ST    @10,@AL00001                                        0350
         L     @15,@CV01450                                        0350
         LA    @01,@AL00001                                        0350
         BALR  @14,@15                                             0350
*         IF IOPRETRN=IOPGOOD       /* IF RECORD READ OK             */
*           THEN                    /*                               */
         L     @10,IOPPTR2                                         0351
         CLI   IOPRETRN(@10),0                                     0351
         BNE   @RF00351                                            0351
*           DO;                     /*                               */
*             SMDFMID=IOPQSMFM;     /* MOVE FMID                     */
         L     @10,IOPBUFAD(,@10)                                  0353
         MVC   SMDFMID(7),IOPQSMFM(@10)                            0353
*             SMDCODE=SMDEXIST;     /* EXISTING FMID/REQ PAIR        */
         MVI   SMDCODE,X'00'                                       0354
*             DO I=1 TO DIM(IOPQSMLS)/* LOOP THRU ALL REQ LIST       */
*                   WHILE(          /* LOOP WHILE                    */
*                   IOPQSMND(I)^=IOPEOLST/* TILL END OF LIST         */
*                   &GTPRETRN=GTPGOOD/* AND GTA ADD OK               */
*                   );              /*                               */
         LA    @10,1                                               0355
         ST    @10,I                                               0355
@DL00355 MH    @10,@CH00538                                        0355
         L     @08,IOPPTR2                                         0355
         L     @08,IOPBUFAD(,@08)                                  0355
         LA    @01,0(@10,@08)                                      0355
         BCTR  @01,0                                               0355
         SLR   @00,@00                                             0355
         IC    @00,IOPQSMND-8(,@01)                                0355
         CH    @00,@CH00726                                        0355
         BE    @DC00355                                            0355
         CLI   GTPRETRN,0                                          0355
         BNE   @DC00355                                            0355
*               SMDREQ=IOPQSMNM(I); /* MOVE REQ NUMBER               */
         ALR   @08,@10                                             0356
         BCTR  @08,0                                               0356
         MVC   SMDREQ(7),IOPQSMNM-8(@08)                           0356
*               CALL HMASMGTA(HMASMGTP);/* ADD RCD TO FILE           */
         L     @15,@CV01453                                        0357
         LA    @01,@AL00357                                        0357
         BALR  @14,@15                                             0357
*             END;                  /* END ONE DATA RCD LOOP         */
         LA    @10,1                                               0358
         AL    @10,I                                               0358
         ST    @10,I                                               0358
         CH    @10,@CH00059                                        0358
         BNH   @DL00355                                            0358
@DC00355 DS    0H                                                  0359
*           END;                    /* END DATA RCD READ OK          */
*       END;                        /* END READ OF ALL DATA RCDS     */
@RF00351 DS    0H                                                  0360
@DE00349 L     @10,IOPPTR2                                         0360
         CLI   IOPRETRN(@10),0                                     0360
         BNE   @DC00349                                            0360
         CLI   GTPRETRN,0                                          0360
         BE    @DL00349                                            0360
@DC00349 DS    0H                                                  0361
*       IF IOPRETRN=IOPEOF          /* IF END DUE TO EOF             */
*         THEN                      /*                               */
         L     @10,IOPPTR2                                         0361
         CLI   IOPRETRN(@10),4                                     0361
         BNE   @RF00361                                            0361
*         SCPRETRN=GTPRETRN;        /* RC IS LAST RC FROM GTA        */
         L     @10,SCPPTR                                          0362
         MVC   SCPRETRN(1,@10),GTPRETRN                            0362
*       ELSE                        /*                               */
*         SCPRETRN=MAX(IOPRETRN,GTPRETRN);/* ELSE MAX OF LAST RC FROM
*                                      IO OR GTA                     */
         B     @RC00361                                            0363
@RF00361 L     @10,IOPPTR2                                         0363
         SLR   @08,@08                                             0363
         IC    @08,IOPRETRN(,@10)                                  0363
         SLR   @10,@10                                             0363
         IC    @10,GTPRETRN                                        0363
         CR    @08,@10                                             0363
         BNL   *+6
         LR    @08,@10                                             0363
         L     @10,SCPPTR                                          0363
         STC   @08,SCPRETRN(,@10)                                  0363
*     END;                          /* END NOT TOTAL NEW RCD         */
*   RETURN;                         /*                               */
*                                                                  0365
@EL00004 DS    0H                                                  0365
@EF00004 DS    0H                                                  0365
@ER00004 LM    @14,@12,@SA00004                                    0365
         BR    @14                                                 0365
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT CALLED WHEN FMID VALUE FOUND                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0366
*RSMDFMDV:                          /*                               */
*   ENTRY;                          /*                               */
RSMDFMDV STM   @14,@12,@SA00004                                    0366
*   FMIDFND=ON;                     /* SET FMID FOUND                */
         OI    FMIDFND,B'10000000'                                 0367
*   SAVEFMID=SCPSTRNG(1:LENGTH(IOPQSMFM));/* SAVE FMID               */
         MVI   SAVEFMID+7,C' '                                     0368
         MVC   SAVEFMID+8(8),SAVEFMID+7                            0368
         L     @10,SCPPTR                                          0368
         L     @10,SCPCHAR(,@10)                                   0368
         MVC   SAVEFMID(7),SCPSTRNG(@10)                           0368
*   GTPFUNCT=GTPLOC;                /* SEE IF ANY FMID/REQ RECORD    */
         MVI   GTPFUNCT,X'03'                                      0369
*   SMDFMID=SAVEFMID;               /* EXISTS FOR THE FMID TO BE     */
         MVC   SMDFMID(7),SAVEFMID                                 0370
*   GTPKEYLN=LENGTH(SMDFMID);       /* REPLACED                      */
         MVC   GTPKEYLN(2),@CH00088                                0371
*   CALL HMASMGTA(HMASMGTP);        /*                               */
         L     @15,@CV01453                                        0372
         LA    @01,@AL00372                                        0372
         BALR  @14,@15                                             0372
*   IF GTPRETRN=GTPNTFND            /* IF NONE FOUND                 */
*     THEN                          /*                               */
         CLI   GTPRETRN,4                                          0373
         BNE   @RF00373                                            0373
*     DO;                           /*                               */
*       IF REP=ON&TOTAL=OFF         /* IF REP EXISTING RCD           */
*         THEN                      /*                               */
         TM    REP,B'10000000'                                     0375
         BNO   @RF00375                                            0375
         TM    TOTAL,B'00010000'                                   0375
         BNZ   @RF00375                                            0375
*         DO;                       /*                               */
*           MGPCLEAR=''B;           /* ZERO MSG PARM                 */
         XC    MGPCLEAR(6),MGPCLEAR                                0377
*           MGPMGNO1=HMA358I;       /* XXXXXXXX XXXXXXXX TO BE     0378
*                                      REPLACED IN ENTRY DOES NOT  0378
*                                      EXIST - ADD ASSUMED           */
         MVC   MGPMGNO1(2),@CH01466                                0378
*           MGPVARPT(1)=ADDR(TXTFMID);/*                             */
         LA    @10,@CC01478                                        0379
         ST    @10,MGPVARPT                                        0379
*           MGPVARPT(2)=ADDR(SAVEFMID);/*                            */
         LA    @10,SAVEFMID                                        0380
         ST    @10,MGPVARPT+4                                      0380
*           MGPTYPE=MGPWARN;        /*                               */
         MVI   MGPTYPE,X'02'                                       0381
*           CALL HMASMMSG(HMASMMGP);/*                               */
         L     @15,@CV01451                                        0382
         LA    @01,@AL00382                                        0382
         BALR  @14,@15                                             0382
*           WARNSW=ON;              /*                               */
         OI    WARNSW,B'00001000'                                  0383
*         END;                      /*                               */
*       IF DEL=ON                   /* IF DELETE                     */
*         THEN                      /*                               */
@RF00375 TM    DEL,B'00100000'                                     0385
         BNO   @RF00385                                            0385
*         DO;                       /*                               */
*           MGPCLEAR=''B;           /* ZERO MSG PARM                 */
         XC    MGPCLEAR(6),MGPCLEAR                                0387
*           MGPMGNO1=HMA357I;       /* XXXXXXXX XXXXXXXX TO BE     0388
*                                      DELETED FROM ENTRY DOES NOT 0388
*                                      EXIST                         */
         MVC   MGPMGNO1(2),@CH01464                                0388
*           MGPVARPT(1)=ADDR(TXTFMID);/*                             */
         LA    @10,@CC01478                                        0389
         ST    @10,MGPVARPT                                        0389
*           MGPVARPT(2)=ADDR(SAVEFMID);/*                            */
         LA    @10,SAVEFMID                                        0390
         ST    @10,MGPVARPT+4                                      0390
*           MGPTYPE=MGPERR;         /*                               */
         MVI   MGPTYPE,X'03'                                       0391
*           CALL HMASMMSG(HMASMMGP);/*                               */
         L     @15,@CV01451                                        0392
         LA    @01,@AL00392                                        0392
         BALR  @14,@15                                             0392
*           SCPRETRN=SCPNDSCN;      /*                               */
         L     @10,SCPPTR                                          0393
         MVI   SCPRETRN(@10),X'04'                                 0393
*           ERRSW=ON;               /* ERROR FOUND                   */
         OI    ERRSW,B'00010000'                                   0394
*         END;                      /*                               */
*     END;                          /*                               */
@RF00385 DS    0H                                                  0397
*   GTPKEYLN=LENGTH(SMDKEY);        /* RESET KEY LENGTH              */
@RF00373 MVC   GTPKEYLN(2),@CH00196                                0397
*   RETURN;                         /*                               */
         B     @EL00004                                            0398
*                                                                  0399
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT CALLED WHEN THE REQ KEYWORD IS FOUND AFTER FMID.         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0399
*RSMDREQ:                           /*                               */
*   ENTRY;                          /*                               */
RSMDREQ  STM   @14,@12,@SA00004                                    0399
*   REQFND=ON;                      /* REQ KEYWORD FOUND             */
         OI    REQFND,B'01000000'                                  0400
*   RETURN;                         /* END LOGIC TO BUILF GTA FILE   */
*                                                                  0401
         B     @EL00004                                            0401
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT CALLED IF DELETE OF ALL REQS FOR AN FMID                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0402
*RSMDREQD:                          /*                               */
*   ENTRY;                          /*                               */
RSMDREQD STM   @14,@12,@SA00004                                    0402
*   GTPFUNCT=GTPOPENN;              /*                               */
         MVI   GTPFUNCT,X'01'                                      0403
*   CALL HMASMGTA(HMASMGTP);        /*                               */
         L     @15,@CV01453                                        0404
         LA    @01,@AL00404                                        0404
         BALR  @14,@15                                             0404
*   DO WHILE(                       /* READ THRU GTA FILE            */
*         GTPRETRN=GTPGOOD);        /* TILL NO ERROS                 */
         B     @DE00405                                            0405
@DL00405 DS    0H                                                  0406
*     GTPFUNCT=GTPGETN;             /*                               */
         MVI   GTPFUNCT,X'08'                                      0406
*     CALL HMASMGTA(HMASMGTP);      /* GET NEXT RCD FROM FILE        */
         L     @15,@CV01453                                        0407
         LA    @01,@AL00407                                        0407
         BALR  @14,@15                                             0407
*     IF GTPRETRN=GTPGOOD           /* IF RCD READ                   */
*         &SMDFMID=SAVEFMID(1:LENGTH(SMDFMID))/* AND SYSMOD EQUAL    */
*       THEN                        /*                               */
         CLI   GTPRETRN,0                                          0408
         BNE   @RF00408                                            0408
         CLC   SMDFMID(7),SAVEFMID                                 0408
         BNE   @RF00408                                            0408
*       DO;                         /*                               */
*         SMDCODE=SMDDEL;           /* MARK RCD DELETED              */
         MVI   SMDCODE,X'02'                                       0410
*         GTPFUNCT=GTPADD;          /*                               */
         MVI   GTPFUNCT,X'04'                                      0411
*         CALL HMASMGTA(HMASMGTP);  /*                               */
         L     @15,@CV01453                                        0412
         LA    @01,@AL00412                                        0412
         BALR  @14,@15                                             0412
*       END;                        /*                               */
*   END;                            /*                               */
@RF00408 DS    0H                                                  0414
@DE00405 CLI   GTPRETRN,0                                          0414
         BE    @DL00405                                            0414
*   RETURN;                         /*                               */
         B     @EL00004                                            0415
*                                                                  0416
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT ENTERED WHEN REQ KEYWORD VALUE FOUND                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0416
*RSMDREQV:                          /*                               */
*   ENTRY;                          /*                               */
RSMDREQV STM   @14,@12,@SA00004                                    0416
*   IF FRSTREPL=ON                  /* IF FIRST VALUE FOR REP        */
*     THEN                          /*                               */
         TM    FRSTREPL,B'00000010'                                0417
         BNO   @RF00417                                            0417
*     DO;                           /*                               */
*       FRSTREPL=OFF;               /*                               */
         NI    FRSTREPL,B'11111101'                                0419
*       GTPFUNCT=GTPOPENN;          /*                               */
         MVI   GTPFUNCT,X'01'                                      0420
*       CALL HMASMGTA(HMASMGTP);    /*                               */
         L     @15,@CV01453                                        0421
         LA    @01,@AL00421                                        0421
         BALR  @14,@15                                             0421
*       DO WHILE GTPRETRN=GTPGOOD;  /* MARK ALL EXISTING RCDS AS DEL */
         B     @DE00422                                            0422
@DL00422 DS    0H                                                  0423
*         GTPFUNCT=GTPGETN;         /*                               */
         MVI   GTPFUNCT,X'08'                                      0423
*         CALL HMASMGTA(HMASMGTP);  /* GET NEXT RCD                  */
         L     @15,@CV01453                                        0424
         LA    @01,@AL00424                                        0424
         BALR  @14,@15                                             0424
*         IF SMDFMID=SAVEFMID(1:LENGTH(SMDFMID))/* IF FMID TO REP    */
*             &GTPRETRN=GTPGOOD     /* AND NOT EOF                   */
*           THEN                    /*                               */
         CLC   SMDFMID(7),SAVEFMID                                 0425
         BNE   @RF00425                                            0425
         CLI   GTPRETRN,0                                          0425
         BNE   @RF00425                                            0425
*           DO;                     /*                               */
*             SMDCODE=SMDDEL;       /* MARK AS DELETED               */
         MVI   SMDCODE,X'02'                                       0427
*             GTPFUNCT=GTPADD;      /*                               */
         MVI   GTPFUNCT,X'04'                                      0428
*             CALL HMASMGTA(HMASMGTP);/*                             */
         L     @15,@CV01453                                        0429
         LA    @01,@AL00429                                        0429
         BALR  @14,@15                                             0429
*           END;                    /*                               */
*       END;                        /*                               */
@RF00425 DS    0H                                                  0431
@DE00422 CLI   GTPRETRN,0                                          0431
         BE    @DL00422                                            0431
*     END;                          /*                               */
*   SMDFMID=SAVEFMID;               /* SET FMID VALUE IN GTA RCD     */
@RF00417 MVC   SMDFMID(7),SAVEFMID                                 0433
*   SMDREQ=SCPSTRNG(1:LENGTH(SMDREQ));/* MOVE REQ NUMBER             */
         L     @10,SCPPTR                                          0434
         L     @10,SCPCHAR(,@10)                                   0434
         MVC   SMDREQ(7),SCPSTRNG(@10)                             0434
*   GTPFUNCT=GTPLOC;                /*                               */
         MVI   GTPFUNCT,X'03'                                      0435
*   CALL HMASMGTA(HMASMGTP);        /* LOCATE RCD                    */
         L     @15,@CV01453                                        0436
         LA    @01,@AL00436                                        0436
         BALR  @14,@15                                             0436
*   IF GTPRETRN=GTPGOOD             /* IF FOUND                      */
*     THEN                          /*                               */
         CLI   GTPRETRN,0                                          0437
         BNE   @RF00437                                            0437
*     DO;                           /*                               */
*       IF ADD=ON                   /*                               */
*         THEN                      /*                               */
         TM    ADD,B'01000000'                                     0439
         BNO   @RF00439                                            0439
*         DO;                       /*                               */
*           MGPCLEAR=''B;           /* ZERO MSG PARM                 */
         XC    MGPCLEAR(6),MGPCLEAR                                0441
*           MGPMGNO1=HMA356I;       /* XXXXXXXX XXXXXXXX TO BE ADDED
*                                      TO ENTRY ALREADY EXISTS       */
         MVC   MGPMGNO1(2),@CH01462                                0442
*           MGPVARPT(1)=ADDR(TXTREQ);/*                              */
         LA    @10,@CC01481                                        0443
         ST    @10,MGPVARPT                                        0443
*           MGPVARPT(2)=ADDR(SMDREQ);/* REQ NUMBER                   */
         LA    @10,SMDREQ                                          0444
         ST    @10,MGPVARPT+4                                      0444
*           MGPTYPE=MGPERR;         /*                               */
         MVI   MGPTYPE,X'03'                                       0445
*           CALL HMASMMSG(HMASMMGP);/*                               */
         L     @15,@CV01451                                        0446
         LA    @01,@AL00446                                        0446
         BALR  @14,@15                                             0446
*           ERRSW=ON;               /* ERROR FOUND                   */
         OI    ERRSW,B'00010000'                                   0447
*         END;                      /*                               */
*       ELSE                        /*                               */
*         DO;                       /*                               */
         B     @RC00439                                            0449
@RF00439 DS    0H                                                  0450
*           IF REP=ON               /* IF REP AND REQ WAS FOUND IN   */
*             THEN                  /* GTA FILE THEN IF MARKED DEL   */
         TM    REP,B'10000000'                                     0450
         BNO   @RF00450                                            0450
*             IF SMDCODE=SMDDEL     /* THEN IT MUST HAVE EXISTED IN  */
*               THEN                /* THE ORIGINAL LIST AND HAVE    */
         CLI   SMDCODE,2                                           0451
         BNE   @RF00451                                            0451
*               SMDCODE=SMDEXIST;   /* BEEN MARKED FOR DELETION IN 0452
*                                      FIRST REP PROCESSING          */
         MVI   SMDCODE,X'00'                                       0452
*             ELSE                  /* ELSE MUST HAVE ALREADY BEEN   */
*               ;                   /* ADDED IN THIS REP SO DO NOT 0453
*                                      CHANGE TYPE CODE              */
@RF00451 DS    0H                                                  0454
*           ELSE                    /* IF DEL MARK RCD AS            */
*             SMDCODE=SMDDEL;       /* DELETED                       */
         B     @RC00450                                            0454
@RF00450 MVI   SMDCODE,X'02'                                       0454
*           GTPFUNCT=GTPADD;        /*                               */
@RC00450 MVI   GTPFUNCT,X'04'                                      0455
*           CALL HMASMGTA(HMASMGTP);/*                               */
         L     @15,@CV01453                                        0456
         LA    @01,@AL00456                                        0456
         BALR  @14,@15                                             0456
*           SCPRETRN=GTPRETRN;      /*                               */
         L     @10,SCPPTR                                          0457
         MVC   SCPRETRN(1,@10),GTPRETRN                            0457
*         END;                      /*                               */
*     END;                          /*                               */
*   ELSE                            /*                               */
*     DO;                           /*                               */
         B     @RC00437                                            0460
@RF00437 DS    0H                                                  0461
*       IF ADD=ON×REP=ON            /*                               */
*         THEN                      /*                               */
         TM    ADD,B'11000000'                                     0461
         BZ    @RF00461                                            0461
*         DO;                       /*                               */
*           SMDCODE=SMDADD;         /*                               */
         MVI   SMDCODE,X'01'                                       0463
*           GTPFUNCT=GTPADD;        /*                               */
         MVI   GTPFUNCT,X'04'                                      0464
*           CALL HMASMGTA(HMASMGTP);/*                               */
         L     @15,@CV01453                                        0465
         LA    @01,@AL00465                                        0465
         BALR  @14,@15                                             0465
*           SCPRETRN=GTPRETRN;      /*                               */
         L     @10,SCPPTR                                          0466
         MVC   SCPRETRN(1,@10),GTPRETRN                            0466
*         END;                      /*                               */
*       ELSE                        /*                               */
*         DO;                       /*                               */
         B     @RC00461                                            0468
@RF00461 DS    0H                                                  0469
*           MGPCLEAR=''B;           /* ZERO MSG PARM                 */
         XC    MGPCLEAR(6),MGPCLEAR                                0469
*           MGPMGNO1=HMA357I;       /* XXXXXXXX XXXXXXXX TO BE     0470
*                                      DELETED FROM ENTRY DOES NOT 0470
*                                      EXIST                         */
         MVC   MGPMGNO1(2),@CH01464                                0470
*           MGPVARPT(1)=ADDR(TXTREQ);/*                              */
         LA    @10,@CC01481                                        0471
         ST    @10,MGPVARPT                                        0471
*           MGPVARPT(2)=ADDR(SMDREQ);/*                              */
         LA    @10,SMDREQ                                          0472
         ST    @10,MGPVARPT+4                                      0472
*           MGPTYPE=MGPERR;         /*                               */
         MVI   MGPTYPE,X'03'                                       0473
*           CALL HMASMMSG(HMASMMGP);/*                               */
         L     @15,@CV01451                                        0474
         LA    @01,@AL00474                                        0474
         BALR  @14,@15                                             0474
*           ERRSW=ON;               /* ERROR FOUND                   */
         OI    ERRSW,B'00010000'                                   0475
*         END;                      /*                               */
*     END;                          /*                               */
*   RETURN;                         /*                               */
         B     @EL00004                                            0478
*                                                                  0479
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT ENTERED WHEN PERIOD FOUND IN SYSMOD UCLIN STATEMENT      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0479
*RSMDPER:                           /*                               */
*   ENTRY;                          /*                               */
RSMDPER  STM   @14,@12,@SA00004                                    0479
*   IF FMIDFND=OFF                  /* IF NO FMID KEYWORD            */
*     THEN                          /*                               */
         TM    FMIDFND,B'10000000'                                 0480
         BNZ   @RF00480                                            0480
*     IF DEL=ON                     /* THEN IF DELETE                */
*       THEN                        /*                               */
         TM    DEL,B'00100000'                                     0481
         BNO   @RF00481                                            0481
*       TOTALDEL=ON;                /* DELETE SYSMOD ENTRY           */
         OI    TOTALDEL,B'00001000'                                0482
*     ELSE                          /* IF ADD/REP                    */
*       SCPRETRN=SCPSTOP;           /* SYNTAX ERROR                  */
         B     @RC00481                                            0483
@RF00481 L     @10,SCPPTR                                          0483
         MVI   SCPRETRN(@10),X'08'                                 0483
*   RETURN;                         /*                               */
         B     @EL00004                                            0484
*   END RSMDXXX;                    /*                               */
         B     @EL00004                                            0485
         EJECT
*                                                                  0486
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTS TO HANDLE KEYWORD FOR FMID TYPE ENTRIES                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0486
*RFMDXXX:                           /*                               */
*   PROCEDURE;                      /*                               */
RFMDXXX  STM   @14,@12,@SA00005                                    0486
*RFMDSMDV:                          /*                               */
*   ENTRY;                          /*                               */
         B     @EC00487                                            0487
RFMDSMDV STM   @14,@12,@SA00005                                    0487
@EC00487 DS    0H                                                  0488
*   RFY                             /*                               */
*     HMASMIOP BASED(IOPPTR);       /* IOP WITH FMID ENTRY           */
*   HMASMVLP=''B;                   /*                               */
         XC    HMASMVLP(52),HMASMVLP                               0489
*   IF ADD=ON                       /* SET FUNCTION                  */
*       ×(REP=ON&FRSTREPL=OFF)      /*                               */
*     THEN                          /*                               */
         TM    ADD,B'01000000'                                     0490
         BO    @RT00490                                            0490
         TM    REP,B'10000000'                                     0490
         BNO   @RF00490                                            0490
         TM    FRSTREPL,B'00000010'                                0490
         BNZ   @RF00490                                            0490
@RT00490 DS    0H                                                  0491
*     VLPFUNCT=VLPADD;              /*                               */
         MVI   VLPFUNCT,X'01'                                      0491
*   ELSE                            /*                               */
*     IF DEL=ON                     /*                               */
*       THEN                        /*                               */
         B     @RC00490                                            0492
@RF00490 TM    DEL,B'00100000'                                     0492
         BNO   @RF00492                                            0492
*       VLPFUNCT=VLPDEL;            /*                               */
         MVI   VLPFUNCT,X'02'                                      0493
*     ELSE                          /*                               */
*       VLPFUNCT=VLPREP;            /*                               */
         B     @RC00492                                            0494
@RF00492 MVI   VLPFUNCT,X'03'                                      0494
*   FRSTREPL=OFF;                   /*                               */
@RC00492 DS    0H                                                  0495
@RC00490 NI    FRSTREPL,B'11111101'                                0495
*   IF TOTAL=OFF                    /* IF NOT TOTAL ADD OR REP       */
*     THEN                          /*                               */
         TM    TOTAL,B'00010000'                                   0496
         BNZ   @RF00496                                            0496
*     VLPFMSG=ON;                   /* WRITE MSG IF ERR              */
         OI    VLPFMSG,B'10000000'                                 0497
*   VLPDATA=SCPSTRNG(1:SCPPMLN);    /* DAT TO ADD                    */
@RF00496 MVI   VLPDATA+1,C' '                                      0498
         MVC   VLPDATA+2(6),VLPDATA+1                              0498
         L     @10,SCPPTR                                          0498
         LH    @08,SCPPMLN(,@10)                                   0498
         BCTR  @08,0                                               0498
         L     @10,SCPCHAR(,@10)                                   0498
         EX    @08,@SM01678                                        0498
*   VLPDATA(8)=''B;                 /*                               */
         MVI   VLPDATA+7,X'00'                                     0499
*   VLPTYPE=IOPQFMSM;               /* TYPE CODE                     */
         MVI   VLPTYPE,X'01'                                       0500
*   VLPDLEN=LENGTH(IOPQFMNM);       /* LENGTH OF KEY IN VLPDATA      */
         MVI   VLPDLEN,X'07'                                       0501
*   VLPLPTR=ADDR(IOPQFMLS(1));      /* START OF LIST                 */
         LA    @10,IOPQFMLS(,IOPPTR)                               0502
         ST    @10,VLPLPTR                                         0502
*   VLPMTYPE=CCATYPEA(IOPFMD);      /* FMID TYPE ENTRY               */
         L     @10,CCATPAD(,CCAPTR)                                0503
         MVC   VLPMTYPE(8),CCATYPEA+104(@10)                       0503
*   VLPMNAME=IOPNAME;               /* FMID VALUE                    */
         MVC   VLPMNAME(8),IOPNAME(IOPPTR)                         0504
*   VLPSTYPE=TXTSMD;                /* SYSMOD TYPE SUBENTRY          */
         MVC   VLPSTYPE(16),@CC01475                               0505
*   CALL HMASMVLU(HMASMVLP);        /*                               */
         L     @15,@CV01454                                        0506
         LA    @01,@AL00506                                        0506
         BALR  @14,@15                                             0506
*   IF VLPRETRN=VLPWARN             /* IF WARNING ISSUED             */
*     THEN                          /*                               */
         CLI   VLPRETRN,4                                          0507
         BNE   @RF00507                                            0507
*     WARNSW=ON;                    /* SET SW                        */
         OI    WARNSW,B'00001000'                                  0508
*   ELSE                            /*                               */
*     IF VLPRETRN=VLPERR            /* IF ERR THEN                   */
*       THEN                        /*                               */
         B     @RC00507                                            0509
@RF00507 CLI   VLPRETRN,8                                          0509
         BNE   @RF00509                                            0509
*       ERRSW=ON;                   /* SET ERR SW                    */
         OI    ERRSW,B'00010000'                                   0510
*   RETURN;                         /*                               */
@EL00005 DS    0H                                                  0511
@EF00005 DS    0H                                                  0511
@ER00005 LM    @14,@12,@SA00005                                    0511
         BR    @14                                                 0511
*                                                                  0512
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT CALLED TO DELETE ALL SYSMOD ENTRIES FROM FMID ENTRY      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0512
*RFMDSMDD:                          /*                               */
*   ENTRY;                          /*                               */
RFMDSMDD STM   @14,@12,@SA00005                                    0512
*   IF DEL=ON                       /*                               */
*     THEN                          /*                               */
         TM    DEL,B'00100000'                                     0513
         BNO   @RF00513                                            0513
*     TOTALDEL=ON;                  /*                               */
         OI    TOTALDEL,B'00001000'                                0514
*   ELSE                            /* IF ADD/REP                    */
*     SCPRETRN=SCPSTOP;             /* SYNTAX ERROR                  */
         B     @RC00513                                            0515
@RF00513 L     @10,SCPPTR                                          0515
         MVI   SCPRETRN(@10),X'08'                                 0515
*   RETURN;                         /*                               */
         B     @EL00005                                            0516
*   END RFMDXXX;                    /*                               */
         B     @EL00005                                            0517
         EJECT
*                                                                  0518
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT ENTERED WHEN ( BEFORE VARIABLE LIST ENCOUNTERED          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0518
*RESETRPL:                          /*                               */
*   PROCEDURE;                      /*                               */
RESETRPL STM   @14,@12,12(@13)                                     0518
*   FRSTREPL=ON;                    /* FIRST TIME FOR KEYWORD        */
         OI    FRSTREPL,B'00000010'                                0519
*   RETURN;                         /*                               */
@EL00006 DS    0H                                                  0520
@EF00006 DS    0H                                                  0520
@ER00006 LM    @14,@12,12(@13)                                     0520
         BR    @14                                                 0520
*   END RESETRPL;                   /*                               */
*                                                                  0521
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT ENTERED WHEN SCANNING FOR PERIOD AFTER SYNTAX ERROR      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0522
*RFLSHCHR:                          /*                               */
*   PROCEDURE;                      /*                               */
RFLSHCHR STM   @14,@12,12(@13)                                     0522
*   IF SCPPMLN=ZERO                 /* SKIP OVER SPECIAL CHAR        */
*     THEN                          /*                               */
         L     @10,SCPPTR                                          0523
         ICM   @08,3,SCPPMLN(@10)                                  0523
         BNZ   @RF00523                                            0523
*     SCPPMLN=1;                    /*                               */
         MVC   SCPPMLN(2,@10),@CH00039                             0524
*   RETURN;                         /*                               */
@EL00007 DS    0H                                                  0525
@EF00007 DS    0H                                                  0525
@ER00007 LM    @14,@12,12(@13)                                     0525
         BR    @14                                                 0525
*   END RFLSHCHR;                   /*                               */
         B     @EL00007                                            0526
         EJECT
*                                                                  0527
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO CHECK FOR ANY ERRORS DURING SCAN OF UCLIN   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0527
*UC3ERRCK:                          /*                               */
*   PROCEDURE;                      /*                               */
UC3ERRCK STM   @14,@12,@SA00008                                    0527
*   DECLARE                         /*                               */
*     ERRRC FIXED(8);               /*                               */
*   ERRRC=ZERO;                     /* INIT RC                       */
         MVI   ERRRC,X'00'                                         0529
*   IF SCPRETRN=SCPBAD              /* IF SYNTAX ERROR               */
*     THEN                          /*                               */
         L     @10,SCPPTR                                          0530
         CLI   SCPRETRN(@10),4                                     0530
         BNE   @RF00530                                            0530
*     DO;                           /*                               */
*       MGPCLEAR=''B;               /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                0532
*       MGPMGNO1=HMA203I;           /* SYNTAX ERROR IN               */
         MVC   MGPMGNO1(2),@CH00144                                0533
*       MGPMGNO2=PART022;           /* UCL STATEMENT                 */
         MVC   MGPMGNO2(2),@CH00560                                0534
*       MGPMGNO3=PART026;           /* AT COL XX                     */
         MVC   MGPMGNO3(2),@CH00568                                0535
*       HEXCOL=SCPCHAR-ADDR(CRPBUFFR);/* CALC COL                    */
         L     @08,@PC00001+4                                      0536
         LA    @08,CRPBUFFR(,@08)                                  0536
         LCR   @08,@08                                             0536
         AL    @08,SCPCHAR(,@10)                                   0536
         ST    @08,HEXCOL                                          0536
*       HEXCOL=HEXCOL+1;            /*                               */
         AH    @08,@CH00039                                        0537
         ST    @08,HEXCOL                                          0537
*       CVD(HEXCOL,DECCOL1);        /* CONVERT TO PRINTABLE          */
         CVD   @08,DECCOL1                                         0538
*       UNPK(COLUMN1,DECCOL(7:9));  /*                               */
         UNPK  COLUMN1(5),DECCOL+6(3)                              0539
*       MGPVARPT(1)=ADDR(COLUMN2);  /*                               */
         LA    @10,COLUMN2                                         0540
         ST    @10,MGPVARPT                                        0540
*       MGPTYPE=MGPERR;             /*                               */
         MVI   MGPTYPE,X'03'                                       0541
*       CALL HMASMMSG(HMASMMGP);    /*                               */
         L     @15,@CV01451                                        0542
         LA    @01,@AL00542                                        0542
         BALR  @14,@15                                             0542
*       ERRRC=STOPPTF;              /*                               */
         MVI   ERRRC,X'08'                                         0543
*       ERRSW=ON;                   /*                               */
         OI    ERRSW,B'00010000'                                   0544
*     END;                          /*                               */
*                                                                  0545
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ANY ERRORS SCAN REST OF CARD FOR ENDING PERIOD             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0546
*   IF ERRSW=ON                     /*                               */
*     THEN                          /*                               */
@RF00530 TM    ERRSW,B'00010000'                                   0546
         BNO   @RF00546                                            0546
*     DO;                           /*                               */
*       SCPSRCH=ADFLSHTB;           /*                               */
         L     @10,SCPPTR                                          0548
         MVC   SCPSRCH(4,@10),ADFLSHTB                             0548
*       SCPCHAR=ADDR(CRPBUFFR);     /*                               */
         L     @08,@PC00001+4                                      0549
         LA    @08,CRPBUFFR(,@08)                                  0549
         ST    @08,SCPCHAR(,@10)                                   0549
*       CALL HMASMSCN(HMASMSCP);    /*                               */
         ST    @10,@AL00001                                        0550
         L     @15,@CV01452                                        0550
         LA    @01,@AL00001                                        0550
         BALR  @14,@15                                             0550
*       ERRRC=STOPPTF;              /*                               */
         MVI   ERRRC,X'08'                                         0551
*     END;                          /*                               */
*   ELSE                            /* IF NO ERRORS                  */
*     IF WARNSW=ON                  /* CHECK FOR WARNING CONDITION   */
*       THEN                        /*                               */
         B     @RC00546                                            0553
@RF00546 TM    WARNSW,B'00001000'                                  0553
         BNO   @RF00553                                            0553
*       ERRRC=PTFWARN;              /*                               */
         MVI   ERRRC,X'04'                                         0554
*   RETURN CODE(ERRRC);             /*                               */
@RF00553 DS    0H                                                  0555
@RC00546 SLR   @15,@15                                             0555
         IC    @15,ERRRC                                           0555
         L     @14,@SA00008                                        0555
         LM    @00,@12,@SA00008+8                                  0555
         BR    @14                                                 0555
*   END UC3ERRCK;                   /*                               */
         EJECT
*                                                                  0557
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED AFTER UCLIN CARD SCANNED AND ALL CHECKING DONE */
*   /* THIS ROUTINE STOWS OUT THE ENTRY THAT WAS UPDATED PLUS ANY    */
*   /* ASSOCIATED ENTRIES                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0557
*UC3STOW:                           /*                               */
*   PROCEDURE;                      /*                               */
UC3STOW  STM   @14,@12,@SA00009                                    0557
*   RFY                                                            0558
*     HMASMIOP BASED(IOPPTR);       /* IOP WITH SYSMOD/FMID          */
*   DECLARE                         /*                               */
*     TMPFMID CHAR(7);              /*                               */
*                                                                  0559
*   /*****************************************************************/
*   /*                                                               */
*   /* IF SYSMOD TYPE RECORD WAS UPDATED THEN NOW MUST UPDATE ANY    */
*   /* ASSOCIATED FMID TYPE ENTRIES                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0560
*   IOPRETRN=IOPGOOD;               /* INIT IO RC FOR LATER CHECK    */
         MVI   IOPRETRN(IOPPTR),X'00'                              0560
*   IOPPTR2->IOPRETRN=IOPGOOD;      /*                               */
         L     @10,IOPPTR2                                         0561
         MVI   IOPRETRN(@10),X'00'                                 0561
*   IF IOPTYPE=IOPCSR               /* IF SYSMOD THEN MUST UPDATE    */
*     THEN                          /* ASSOCIATED FMID ENTRIES       */
         CLI   IOPTYPE(IOPPTR),15                                  0562
         BNE   @RF00562                                            0562
*     DO;                           /*                               */
*       GTPFUNCT=GTPOPENN;          /* RESET FOR GETN PROCESS        */
         MVI   GTPFUNCT,X'01'                                      0564
*       CALL HMASMGTA(HMASMGTP);    /*                               */
         L     @15,@CV01453                                        0565
         LA    @01,@AL00565                                        0565
         BALR  @14,@15                                             0565
*       IOPRETRN=IOPGOOD;           /* INIT IO RC                    */
         MVI   IOPRETRN(IOPPTR),X'00'                              0566
*       GTPFUNCT=GTPGETN;           /*                               */
         MVI   GTPFUNCT,X'08'                                      0567
*       TMPFMID=BLANK7;             /* INIT FMID HOLD AREA           */
         MVC   TMPFMID(7),@CC01473                                 0568
*       CALL HMASMGTA(HMASMGTP);    /* GET NEXT FMID/REQ PAIR        */
         L     @15,@CV01453                                        0569
         LA    @01,@AL00569                                        0569
         BALR  @14,@15                                             0569
*       DO WHILE(                   /* LOOP UPDATING FMID ENTRIES    */
*             IOPRETRN<=IOPNTFND    /* WHILE NO I/O ERRORS           */
*             &GTPRETRN=GTPGOOD);   /* OR EOF ON GTA FILE            */
         B     @DE00570                                            0570
@DL00570 DS    0H                                                  0571
*         TMPFMID=SMDFMID;          /* SAVE FMID                     */
         MVC   TMPFMID(7),SMDFMID                                  0571
*         UCLSMDSW=''B;             /*                               */
         MVI   UCLSMDSW,X'00'                                      0572
*         DO WHILE(                 /* LOOP WHILE                    */
*               GTPRETRN=GTPGOOD    /* RECORDS FOUND                 */
*               &SMDFMID=TMPFMID);  /* FOR SAME FMID AS FIRST READ   */
         B     @DE00573                                            0573
@DL00573 DS    0H                                                  0574
*           IF SMDCODE=SMDEXIST     /* IF FMID/REQ PAIR NOT CHANGED  */
*               &TOTALDEL=OFF       /* BUT NOT TOTAL DELETE          */
*             THEN                  /*                               */
         CLI   SMDCODE,0                                           0574
         BNE   @RF00574                                            0574
         TM    TOTALDEL,B'00001000'                                0574
         BNZ   @RF00574                                            0574
*             EXISTSMD=ON;          /* SET SW THAT PAIR SET          */
         OI    EXISTSMD,B'00100000'                                0575
*           ELSE                    /*                               */
*             IF SMDCODE=SMDADD     /*                               */
*                 &TOTALDEL=OFF     /* BUT NOT TOTAL DELETE          */
*               THEN                /*                               */
         B     @RC00574                                            0576
@RF00574 CLI   SMDCODE,1                                           0576
         BNE   @RF00576                                            0576
         TM    TOTALDEL,B'00001000'                                0576
         BNZ   @RF00576                                            0576
*               ADDSMD=ON;          /*                               */
         OI    ADDSMD,B'10000000'                                  0577
*             ELSE                  /*                               */
*               DELSMD=ON;          /*                               */
         B     @RC00576                                            0578
@RF00576 OI    DELSMD,B'01000000'                                  0578
*           CALL HMASMGTA(HMASMGTP);/*                               */
@RC00576 DS    0H                                                  0579
@RC00574 L     @15,@CV01453                                        0579
         LA    @01,@AL00579                                        0579
         BALR  @14,@15                                             0579
*         END;                      /*                               */
@DE00573 CLI   GTPRETRN,0                                          0580
         BNE   @DC00573                                            0580
         CLC   SMDFMID(7),TMPFMID                                  0580
         BE    @DL00573                                            0580
@DC00573 DS    0H                                                  0581
*         IF((ADDSMD=ON&DELSMD=OFF) /* IF SYSMOD ADDED AND NONE    0581
*                                      DELETED                       */
*             ×(ADDSMD=OFF&DELSMD=ON))/* OR SYSMOD DELETED AND NONE
*                                      ADDED OF REPLACED             */
*             &EXISTSMD=OFF         /* EXIST BEFORE                  */
*           THEN                    /*                               */
         TM    ADDSMD,B'10000000'                                  0581
         BNO   @GL00015                                            0581
         TM    DELSMD,B'01000000'                                  0581
         BZ    @GL00014                                            0581
@GL00015 TM    DELSMD,B'01000000'                                  0581
         BNO   @RF00581                                            0581
         TM    ADDSMD,B'10000000'                                  0581
         BNZ   @RF00581                                            0581
@GL00014 TM    EXISTSMD,B'00100000'                                0581
         BNZ   @RF00581                                            0581
*           DO;                     /*                               */
*             IOPFUNCT=IOPLOC;      /* LOCATE                        */
         MVI   IOPFUNCT(IOPPTR),X'03'                              0583
*             IOPTYPE=IOPFMD;       /* FMID                          */
         MVI   IOPTYPE(IOPPTR),X'0E'                               0584
*             IOPNAME=SMDFMID;      /* THAT FMID                     */
         MVI   IOPNAME+7(IOPPTR),C' '                              0585
         MVC   IOPNAME(7,IOPPTR),SMDFMID                           0585
*             IOPDSID=IOPPTR2->IOPDSID;/* ON CORRECT DATASET         */
         L     @10,IOPPTR2                                         0586
         MVC   IOPDSID(1,IOPPTR),IOPDSID(@10)                      0586
*             CALL HMASMIO(HMASMIOP);/*                              */
         ST    IOPPTR,@AL00001                                     0587
         L     @15,@CV01450                                        0587
         LA    @01,@AL00001                                        0587
         BALR  @14,@15                                             0587
*             IF IOPRETRN=IOPNTFND  /* IF NOT FOUND                  */
*               THEN                /*                               */
         CLI   IOPRETRN(IOPPTR),4                                  0588
         BNE   @RF00588                                            0588
*               DO;                 /*                               */
*                 IOPQFMNT=''B;     /*                               */
         XC    IOPQFMNT(2,IOPPTR),IOPQFMNT(IOPPTR)                 0590
*                 IOPQFMND(1)=IOPEOLST;/* INIT IOP ENTRY             */
         MVI   IOPQFMND(IOPPTR),X'FF'                              0591
*               END;                /*                               */
*             IF IOPRETRN<=IOPNTFND /* IF NO ERR IN LOCATE           */
*               THEN                /*                               */
@RF00588 CLI   IOPRETRN(IOPPTR),4                                  0593
         BH    @RF00593                                            0593
*               DO;                 /*                               */
*                 HMASMVLP=''B;     /*                               */
         XC    HMASMVLP(52),HMASMVLP                               0595
*                 VLPDATA(1:LENGTH(IOPQFMNM))=IOPPTR2->IOPNAM17;/*   */
         L     @10,IOPPTR2                                         0596
         MVC   VLPDATA(7),IOPNAM17(@10)                            0596
*                 VLPTYPE=IOPQFMSM; /*                               */
         MVI   VLPTYPE,X'01'                                       0597
*                 VLPDLEN=LENGTH(IOPQFMNM);/* LENGTH OF KEY IN DATA  */
         MVI   VLPDLEN,X'07'                                       0598
*                 VLPLPTR=ADDR(IOPQFMLS(1));/*                       */
         LA    @10,IOPQFMLS(,IOPPTR)                               0599
         ST    @10,VLPLPTR                                         0599
*                 IF DELSMD=ON      /* IF DELETE                     */
*                   THEN            /*                               */
         TM    DELSMD,B'01000000'                                  0600
         BNO   @RF00600                                            0600
*                   VLPFUNCT=VLPDEL;/*                               */
         MVI   VLPFUNCT,X'02'                                      0601
*                 ELSE              /*                               */
*                   VLPFUNCT=VLPADD;/* SET TO ADD NEW SYSMOD         */
         B     @RC00600                                            0602
@RF00600 MVI   VLPFUNCT,X'01'                                      0602
*                 VLPMTYPE=CCATYPEA(IOPFMD);/* FMID TYPE ENTRY       */
@RC00600 L     @10,CCATPAD(,CCAPTR)                                0603
         MVC   VLPMTYPE(8),CCATYPEA+104(@10)                       0603
*                 VLPMNAME=IOPNAME; /* FMID VALUE                    */
         MVC   VLPMNAME(8),IOPNAME(IOPPTR)                         0604
*                 VLPSTYPE=TXTSMD;  /* SYSMOD TYPE SUBENTRY          */
         MVC   VLPSTYPE(16),@CC01475                               0605
*                 CALL HMASMVLU(HMASMVLP);/* DEL SYSMOD FROM FMID    */
         L     @15,@CV01454                                        0606
         LA    @01,@AL00606                                        0606
         BALR  @14,@15                                             0606
*                 IOPFUNCT=IOPSTOWR;/*                               */
         MVI   IOPFUNCT(IOPPTR),X'54'                              0607
*                 CALL HMASMIO(HMASMIOP);/* UPDATE FMID ENTRY        */
         ST    IOPPTR,@AL00001                                     0608
         L     @15,@CV01450                                        0608
         LA    @01,@AL00001                                        0608
         BALR  @14,@15                                             0608
*               END;                /*                               */
*           END;                    /* END FMID MUST BE UPDATED      */
@RF00593 DS    0H                                                  0611
*       END;                        /* END GTA READ LOOP FOR 1 FMID  */
@RF00581 DS    0H                                                  0611
@DE00570 CLI   IOPRETRN(IOPPTR),4                                  0611
         BH    @DC00570                                            0611
         CLI   GTPRETRN,0                                          0611
         BE    @DL00570                                            0611
@DC00570 DS    0H                                                  0612
*       HMASMIOP=IOPPTR2->HMASMIOP; /* MOVE SYSMOD ENTRY BACK        */
         L     @10,IOPPTR2                                         0612
         MVC   HMASMIOP(68,IOPPTR),HMASMIOP(@10)                   0612
*       IOPCQMAX=IOPPTR2->IOPCQMAX; /*                               */
         MVC   IOPCQMAX(2,IOPPTR),IOPCQMAX(@10)                    0613
*     END;                          /* END SYSMOD TYPE UPDATE        */
*                                                                  0614
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NO PREVIOUS ERRORS AND SYSMOD TYPE RECORD REBUILD THE      */
*   /* SYSMOD DATA RECORD                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0615
*   IF IOPRETRN=IOPGOOD             /*                               */
*       &IOPTYPE=IOPCSR             /*                               */
*       &TOTALDEL=OFF               /* DONT REBUILD IF TOTAL DELETE  */
*     THEN                          /*                               */
@RF00562 CLI   IOPRETRN(IOPPTR),0                                  0615
         BNE   @RF00615                                            0615
         CLI   IOPTYPE(IOPPTR),15                                  0615
         BNE   @RF00615                                            0615
         TM    TOTALDEL,B'00001000'                                0615
         BNZ   @RF00615                                            0615
*     DO;                           /*                               */
*       GTPKEYLN=LENGTH(SMDKEY);    /*                               */
         MVC   GTPKEYLN(2),@CH00196                                0617
*       GTPFUNCT=GTPOPENN;          /*                               */
         MVI   GTPFUNCT,X'01'                                      0618
*       CALL HMASMGTA(HMASMGTP);    /*                               */
         L     @15,@CV01453                                        0619
         LA    @01,@AL00619                                        0619
         BALR  @14,@15                                             0619
*       GTPFUNCT=GTPGETN;           /*                               */
         MVI   GTPFUNCT,X'08'                                      0620
*       CALL HMASMGTA(HMASMGTP);    /*                               */
         L     @15,@CV01453                                        0621
         LA    @01,@AL00621                                        0621
         BALR  @14,@15                                             0621
*       DO WHILE(                   /* LOOP RECREATING RECORDS       */
*             GTPRETRN=GTPGOOD      /*                               */
*             &IOPRETRN=IOPGOOD);   /*                               */
         B     @DE00622                                            0622
@DL00622 DS    0H                                                  0623
*         TMPFMID=SMDFMID;          /* SAVE FMID NUMBER              */
         MVC   TMPFMID(7),SMDFMID                                  0623
*         IOPQSMFM=SMDFMID;         /* MOVE FMID TO RCD              */
         L     @10,IOPBUFAD(,IOPPTR)                               0624
         MVC   IOPQSMFM(7,@10),SMDFMID                             0624
*         I=0;                      /* INIT INDEX TO OUTPUT AREA     */
         SLR   @10,@10                                             0625
         ST    @10,I                                               0625
*         DO WHILE(                 /* LOOP READING GTA FILE         */
*               GTPRETRN=GTPGOOD    /* TILL EOF                      */
*               &IOPRETRN=IOPGOOD   /* AND NOT WRITE ERR             */
*               &TMPFMID=SMDFMID);  /* AND SAME FMID                 */
         B     @DE00626                                            0626
@DL00626 DS    0H                                                  0627
*           IF SMDCODE=SMDADD×SMDCODE=SMDEXIST/* IF NOT DELETED      */
*             THEN                  /*                               */
         CLI   SMDCODE,1                                           0627
         BE    @RT00627                                            0627
         CLI   SMDCODE,0                                           0627
         BNE   @RF00627                                            0627
@RT00627 DS    0H                                                  0628
*             DO;                   /*                               */
*               I=I+1;              /* INCR INDEX TO OUTPUT          */
         LA    @10,1                                               0629
         AL    @10,I                                               0629
         ST    @10,I                                               0629
*               IF I>DIM(IOPQSMLS)  /* IF BUFFER FULL                */
*                 THEN              /*                               */
         CH    @10,@CH00059                                        0630
         BNH   @RF00630                                            0630
*                 DO;               /*                               */
*                   IOPFUNCT=IOPWRITE;/* SET TO WRITE                */
         MVI   IOPFUNCT(IOPPTR),X'51'                              0632
*                   CALL HMASMIO(HMASMIOP);/* WRITE SYSMOD REQ RCD   */
         ST    IOPPTR,@AL00001                                     0633
         L     @15,@CV01450                                        0633
         LA    @01,@AL00001                                        0633
         BALR  @14,@15                                             0633
*                   I=1;            /* RESET INDEX                   */
         MVC   I(4),@CF00039                                       0634
*                 END;              /*                               */
*               IOPQSMLS(I)=''B;    /* ZERO ENTRY                    */
@RF00630 L     @10,I                                               0636
         MH    @10,@CH00538                                        0636
         L     @08,IOPBUFAD(,IOPPTR)                               0636
         ST    @10,@TF00001                                        0636
         ALR   @10,@08                                             0636
         BCTR  @10,0                                               0636
         XC    IOPQSMLS-8(9,@10),IOPQSMLS-8(@10)                   0636
*               IOPQSMNM(I)=SMDREQ; /*                               */
         LR    @10,@08                                             0637
         AL    @10,@TF00001                                        0637
         BCTR  @10,0                                               0637
         MVC   IOPQSMNM-8(7,@10),SMDREQ                            0637
*               IOPQSMTP(I)=IOPQSMRQ;/* TYPE SUBENTRY                */
         LA    @10,1                                               0638
         L     @01,@TF00001                                        0638
         STC   @10,IOPQSMTP-9(@01,@08)                             0638
*               IOPQSMND(I+1)=IOPEOLST;/* SET END OF LIST MARKER     */
         LA    @10,255                                             0639
         L     @01,@TF00001                                        0639
         STC   @10,IOPQSMND(@01,@08)                               0639
*             END;                  /* END REQ NOT DELETED           */
*           CALL HMASMGTA(HMASMGTP);/* GET NEXT RCD                  */
@RF00627 L     @15,@CV01453                                        0641
         LA    @01,@AL00641                                        0641
         BALR  @14,@15                                             0641
*         END;                      /* END GTA READ LOOP FOR 1 FMID  */
@DE00626 CLI   GTPRETRN,0                                          0642
         BNE   @DC00626                                            0642
         CLI   IOPRETRN(IOPPTR),0                                  0642
         BNE   @DC00626                                            0642
         CLC   TMPFMID(7),SMDFMID                                  0642
         BE    @DL00626                                            0642
@DC00626 DS    0H                                                  0643
*         IF I>0                    /* IF REQ RCD PARTIALLY BUILT    */
*             &IOPRETRN=IOPGOOD     /* AND PREV WRITES OK            */
*           THEN                    /*                               */
         ICM   @10,15,I                                            0643
         BNP   @RF00643                                            0643
         CLI   IOPRETRN(IOPPTR),0                                  0643
         BNE   @RF00643                                            0643
*           DO;                     /*                               */
*             IOPFUNCT=IOPWRITE;    /*                               */
         MVI   IOPFUNCT(IOPPTR),X'51'                              0645
*             CALL HMASMIO(HMASMIOP);/* WRITE SYSMOD REQ RCD         */
         ST    IOPPTR,@AL00001                                     0646
         L     @15,@CV01450                                        0646
         LA    @01,@AL00001                                        0646
         BALR  @14,@15                                             0646
*           END;                    /*                               */
*       END;                        /* END GTA READ LOOP             */
@RF00643 DS    0H                                                  0648
@DE00622 CLI   GTPRETRN,0                                          0648
         BNE   @DC00622                                            0648
         CLI   IOPRETRN(IOPPTR),0                                  0648
         BE    @DL00622                                            0648
@DC00622 DS    0H                                                  0649
*     END;                          /* END PREV FUNCT OK AND SMD     */
*                                                                  0649
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW STOW OUT UPDATED MEMBER                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0650
*   IF IOPRETRN=IOPGOOD             /* IF NO ERRORS SO FAR           */
*     THEN                          /*                               */
@RF00615 CLI   IOPRETRN(IOPPTR),0                                  0650
         BNE   @RF00650                                            0650
*     DO;                           /*                               */
*       IF TOTALDEL=ON              /* IF TOTAL DELET                */
*           ×(IOPTYPE=IOPFMD&IOPQFMND(1)=IOPEOLST)/* OR FMID ENTRY 0652
*                                      WITH NO SUBENTRIES            */
*         THEN                      /*                               */
         TM    TOTALDEL,B'00001000'                                0652
         BO    @RT00652                                            0652
         CLI   IOPTYPE(IOPPTR),14                                  0652
         BNE   @RF00652                                            0652
         CLI   IOPQFMND(IOPPTR),255                                0652
         BNE   @RF00652                                            0652
@RT00652 DS    0H                                                  0653
*         IOPFUNCT=IOPSTOWD;        /* DELETE ENTRY                  */
         MVI   IOPFUNCT(IOPPTR),X'53'                              0653
*       ELSE                        /* ELSE                          */
*         IOPFUNCT=IOPSTOWR;        /* REPLACE ENTRY                 */
         B     @RC00652                                            0654
@RF00652 MVI   IOPFUNCT(IOPPTR),X'54'                              0654
*       CALL HMASMIO(HMASMIOP);     /*                               */
@RC00652 ST    IOPPTR,@AL00001                                     0655
         L     @15,@CV01450                                        0655
         LA    @01,@AL00001                                        0655
         BALR  @14,@15                                             0655
*     END;                          /*                               */
*   RETURN CODE(IOPRETRN);          /*                               */
@RF00650 SLR   @15,@15                                             0657
         IC    @15,IOPRETRN(,IOPPTR)                               0657
         L     @14,@SA00009                                        0657
         LM    @00,@12,@SA00009+8                                  0657
         BR    @14                                                 0657
*   END UC3STOW;                    /*                               */
*   END HMASMUC3                    /*                               */
*                                                                  0659
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCRP)                                       */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMPRL)                                       */
*/*%INCLUDE SYSLIB  (HMASMMGP)                                       */
*/*%INCLUDE SYSLIB  (HMASMSCP)                                       */
*/*%INCLUDE SYSLIB  (HMASMGTP)                                       */
*/*%INCLUDE SYSLIB  (HMASMVLP)                                       */
*                                                                  0659
*       ;                                                          0659
@DATA    DS    0H
@CH00144 DC    H'4'
@CH00088 DC    H'7'
@CH00059 DC    H'8'
@CH00538 DC    H'9'
@CH00553 DC    H'18'
@CH00560 DC    H'22'
@CH00568 DC    H'26'
@CH00196 DC    H'32'
@CH00580 DC    H'33'
@CH01110 DC    H'54'
@CH00809 DC    H'56'
@CH01115 DC    H'57'
@CH01460 DC    H'78'
@CH01462 DC    H'157'
@CH01464 DC    H'158'
@CH01466 DC    H'159'
@CH00726 DC    H'255'
@SM01672 MVC   IOPNAME(0,IOPPTR),SCPSTRNG(@10)
@SM01678 MVC   VLPDATA(0),SCPSTRNG(@10)
         DS    0F
@AL00243 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00307 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00318 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00328 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00382 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00392 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00446 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00474 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00542 DC    A(HMASMMGP)             LIST WITH   1 ARGUMENT(S)
@AL00357 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00372 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00404 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00407 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00412 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00421 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00424 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00429 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00436 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00456 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00465 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00565 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00569 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00579 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00619 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00621 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00641 DC    A(HMASMGTP)             LIST WITH   1 ARGUMENT(S)
@AL00506 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00606 DC    A(HMASMVLP)             LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@PC00001 DS    2F
@SA00005 DS    0F
@SA00004 DS    0F
@SA00003 DS    0F
@SA00009 DS    0F
@SA00008 DS    0F
         DS    15F
@AL00001 DS    1A
@TF00001 DS    F
         DS    0F
@CF00039 DC    F'1'
@CH00039 EQU   @CF00039+2
@CF01675 DC    F'-8'
@CV01449 DC    V(HMASMCRD)
@CV01450 DC    V(HMASMIO)
@CV01451 DC    V(HMASMMSG)
@CV01452 DC    V(HMASMSCN)
@CV01453 DC    V(HMASMGTA)
@CV01454 DC    V(HMASMVLU)
         DS    0D
SCPPTR   DS    A
IOPPTR2  DS    A
SAVBUFAD DS    A
I        DS    F
HEXCOL   DS    F
ADSCNTBL DC    AL4(KENDUCL)
ADFLSHTB DC    AL4(KFLUSH)
UC3RTNCD DS    FL1
TMPRTNCD DS    FL1
ERRRC    DS    FL1
@CC01475 DC    C'SYSMOD          '
@CC01478 DC    C'FMID            '
@CC01481 DC    C'REQ             '
@CC01471 DC    C'        '
@CC01473 EQU   @CC01471
         DS    CL1
HMASMMGP DS    CL24
         ORG   HMASMMGP
MGPFIXED DS    CL12
         ORG   MGPFIXED
MGPCLEAR DS    CL6
         ORG   MGPCLEAR
MGPMGNO1 DS    FL2
MGPMGNO2 DS    FL2
MGPMGNO3 DS    FL2
         ORG   MGPFIXED+6
MGPFLAGS DS    BL2
         ORG   MGPFLAGS
MGPPRINT DS    BL1
MGPLIST  EQU   MGPFLAGS+0
MGPRPT   EQU   MGPFLAGS+0
MGPHLDS  EQU   MGPFLAGS+0
MGPWTOR  EQU   MGPFLAGS+0
MGPWTO   EQU   MGPFLAGS+0
MGPWTP   EQU   MGPFLAGS+0
@NM00183 EQU   MGPFLAGS+0
         ORG   MGPFIXED+8
MGPTYPE  DS    FL1
@NM00184 DS    CL3
         ORG   HMASMMGP+12
MGPVAR   DS    CL12
         ORG   MGPVAR
MGPVARPT DS    3A
         ORG   HMASMMGP+24
HMASMGTP DS    CL28
         ORG   HMASMGTP
GTPFUNCT DS    FL1
GTPRETRN DS    FL1
@NM00186 DS    CL2
GTPRCDLN DS    FL2
GTPKEYLN DS    FL2
GTPWKAD  DS    AL4
GTPBUFAD DS    AL4
GTPRESTR DS    CL10
         ORG   GTPRESTR
GTPPAG   DS    AL4
GTPRCD   DS    AL4
GTPPOS   DS    FL2
         ORG   HMASMGTP+26
GTPFLGS1 DS    BL1
         ORG   GTPFLGS1
GTPNOSPM DS    BL1
GTPRCDNF EQU   GTPFLGS1+0
@NM00187 EQU   GTPFLGS1+0
GTPPSIZE EQU   GTPFLGS1+0
         ORG   HMASMGTP+27
@NM00188 DS    FL1
         ORG   HMASMGTP+28
HMASMVLP DS    CL52
         ORG   HMASMVLP
VLPFUNCT DS    FL1
VLPRETRN DS    FL1
VLPFLAG  DS    BL1
         ORG   VLPFLAG
VLPFMSG  DS    BL1
VLPFRSV  EQU   VLPFLAG+0
         ORG   HMASMVLP+3
VLPDLEN  DS    FL1
VLPSNTRY DS    CL9
         ORG   VLPSNTRY
VLPDATA  DS    CL8
VLPTYPE  DS    FL1
         ORG   HMASMVLP+13
@NM00189 DS    CL3
VLPLPTR  DS    AL4
VLPMTYPE DS    CL8
VLPMNAME DS    CL8
VLPSTYPE DS    CL16
         ORG   HMASMVLP+52
UC3IOP   DS    CL71
UCLSWTBL DS    CL5
         ORG   UCLSWTBL
UCLVERB  DS    BL1
         ORG   UCLVERB
REP      DS    BL1
ADD      EQU   UCLVERB+0
DEL      EQU   UCLVERB+0
TOTAL    EQU   UCLVERB+0
TOTALDEL EQU   UCLVERB+0
UNCDEL   EQU   UCLVERB+0
FRSTREPL EQU   UCLVERB+0
@NM00190 EQU   UCLVERB+0
         ORG   UCLSWTBL+1
UCLTYPE  DS    BL1
         ORG   UCLTYPE
SMD      DS    BL1
FMD      EQU   UCLTYPE+0
@NM00191 EQU   UCLTYPE+0
         ORG   UCLSWTBL+2
UCLERRSW DS    BL1
         ORG   UCLERRSW
ENDUCL   DS    BL1
INVLOP   EQU   UCLERRSW+0
DELERR   EQU   UCLERRSW+0
ERRSW    EQU   UCLERRSW+0
WARNSW   EQU   UCLERRSW+0
@NM00192 EQU   UCLERRSW+0
         ORG   UCLSWTBL+3
UCLCTL   DS    BL1
         ORG   UCLCTL
FMIDFND  DS    BL1
REQFND   EQU   UCLCTL+0
@NM00193 EQU   UCLCTL+0
         ORG   UCLSWTBL+4
UCLSMDSW DS    BL1
         ORG   UCLSMDSW
ADDSMD   DS    BL1
DELSMD   EQU   UCLSMDSW+0
EXISTSMD EQU   UCLSMDSW+0
@NM00194 EQU   UCLSMDSW+0
         ORG   UCLSWTBL+5
SAVEFMID DS    CL16
DECCOL   DS    CL9
         ORG   DECCOL
DECCOL1  DC    CL8' '
DECPAD   DC    CL1' '
         ORG   DECCOL+9
         DS    CL3
COLUMN   DS    CL5
         ORG   COLUMN
COLUMN1  DC    CL5' '
         ORG   COLUMN1
@NM00195 DS    CL1
COLUMN2  DS    CL2
@NM00196 DS    CL2
         ORG   COLUMN+5
         DS    CL1
PATCHUC3 DS    CL80
         ORG   PATCHUC3
@NM00197 DC    80X'FF'
         ORG   PATCHUC3+80
SMDRCD   DS    CL33
         ORG   SMDRCD
SMDKEY   DS    CL32
         ORG   SMDKEY
SMDFMID  DS    CL7
@NM00198 DS    CL9
SMDREQ   DS    CL7
@NM00199 DS    CL9
         ORG   SMDRCD+32
SMDCODE  DS    FL1
         ORG   SMDRCD+33
TMPFMID  DS    CL7
HMASMUC3 CSECT
***********************************************************************
*                                                                     *
*   UCLIN SCAN TABLES TO CONTROL SCANNING OF INPUT STATEMENTS.        *
*                                                                     *
***********************************************************************
*                                                                     *
*   THIS SET OF DSCAN CONTROL THE FUNCTION TYPE VALUES                *
*                                                                     *
***********************************************************************
KENDUCL  DSCAN KEY='ENDUCL',ALT=KREP00,SUCC=KENDPER,ROUT=RENDUCL,      X
               CALLRT=YES
KREP00   DSCAN KEY='REP',ALT=KADD00,SUCC=KSMD00,ROUT=RREP00
KADD00   DSCAN KEY='ADD',ALT=KDEL00,SUCC=KSMD00,ROUT=RADD00
KDEL00   DSCAN KEY='DEL',SUCC=KSMD00,ROUT=RDEL00
HMASMUC3 CSECT
***********************************************************************
*                                                                     *
*   THIS SET OF DSCANS CHECKS FOR THE ENDING PERIOD OF EACH STATEMENT *
*   AND THE POSSIBLE COMMENT AFTER THE PERIOD                         *
*                                                                     *
***********************************************************************
KENDPER  DSCAN KEY='.',SUCC=KXTRADTA
KXTRADTA DSCAN MINLEN=0,IO=NO,ROUT=RXTRADTA
HMASMUC3 CSECT
***********************************************************************
*                                                                     *
*   THIS SET OF DSCANS FLUSHES THRU TO END OF CARD AFTER ANY ERRORS   *
*                                                                     *
***********************************************************************
KFLUSH   DSCAN KEY='ENDUCL',ALT=KFLSHPR,SUCC=KENDPER,ROUT=RENDUCL
KFLSHPR  DSCAN KEY='.',ALT=KFLSHCHR,SUCC=KXTRADTA
KFLSHCHR DSCAN MINLEN=0,MAXLEN=255,TYPE=AN,SUCC=KFLUSH,ROUT=RFLSHCHR
HMASMUC3 CSECT
***********************************************************************
*                                                                     *
*   THIS SET OF DSCANS CHECK FOR VALID ENTRY TYPES FOR THE CRQ/ACRQ   *
*                                                                     *
***********************************************************************
KSMD00   DSCAN KEY='SYSMOD',ALT=KFMD00,SUCC=KSMDLP01,ROUT=RSMD00
KFMD00   DSCAN KEY='FMID',SUCC=KFMDLP01,ROUT=RFMD00
HMASMUC3 CSECT
***********************************************************************
*                                                                     *
*   THIS SET OF DSCANS CHECK FOR VALID KEYWORDS FOR SYSMOD ENTRIES    *
*                                                                     *
***********************************************************************
KSMDLP01 DSCAN KEY='(',SUCC=KSMDNAM
KSMDNAM  DSCAN MINLEN=7,MAXLEN=7,TYPE=AN,SUCC=KSMDRP01,ROUT=RXXXNAM
KSMDRP01 DSCAN KEY=')',SUCC=KSMDFMID,ROUT=RSMDRP01
KSMDFMID DSCAN KEY='FMID',ALT=KSMDPER,SUCC=KSMDFMLP
KSMDFMLP DSCAN KEY='(',SUCC=KSMDFMDD
KSMDFMDD DSCAN KEY=')',ALT=KSMDFMDV,SUCC=KSMDPER
KSMDFMDV DSCAN MINLEN=7,MAXLEN=7,TYPE=AN,SUCC=KSMDFMRP,ROUT=RSMDFMDV
KSMDFMRP DSCAN KEY=')',SUCC=KSMDREQ
KSMDREQ  DSCAN KEY='REQ',ALT=KSMDPER,SUCC=KSMDRQLP,ROUT=RSMDREQ
KSMDRQLP DSCAN KEY='(',SUCC=KSMDREQD,ROUT=RESETRPL
KSMDREQD DSCAN KEY=')',ALT=KSMDREQV,SUCC=KSMDPER,ROUT=RSMDREQD
KSMDREQV DSCAN MINLEN=7,MAXLEN=7,TYPE=AN,SUCC=KSMDRQRP,ROUT=RSMDREQV
KSMDRQRP DSCAN KEY=')',ALT=KSMDREQV,SUCC=KSMDPER,COMMA=NO
KSMDPER  DSCAN KEY='.',SUCC=KXTRADTA,ROUT=RSMDPER
HMASMUC3 CSECT
***********************************************************************
*                                                                     *
*   THIS SET OF DSCANS CHECK FOR VALID KEYWORDS FOR FMID   ENTRIES    *
*                                                                     *
***********************************************************************
KFMDLP01 DSCAN KEY='(',SUCC=KFMDNAM
KFMDNAM  DSCAN MINLEN=7,MAXLEN=7,TYPE=AN,SUCC=KFMDRP01,ROUT=RXXXNAM
KFMDRP01 DSCAN KEY=')',SUCC=KFMDD
KFMDD    DSCAN KEY='.',ALT=KFMDSMD,SUCC=KXTRADTA,ROUT=RXXXTD
KFMDSMD  DSCAN KEY='SYSMOD',SUCC=KFMDSMLP
KFMDSMLP DSCAN KEY='(',SUCC=KFMDSMDD,ROUT=RESETRPL
KFMDSMDD DSCAN KEY=')',ALT=KFMDSMDV,ROUT=RFMDSMDD
KFMDSMDV DSCAN MINLEN=7,MAXLEN=7,TYPE=AN,SUCC=KFMDSMRP,ROUT=RFMDSMDV
KFMDSMRP DSCAN KEY=')',ALT=KFMDSMDV,SUCC=KFMDPER,COMMA=NO
KFMDPER  DSCAN KEY='.',SUCC=KXTRADTA
HMASMUC3 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CCAPTR   EQU   @11
IOPPTR   EQU   @09
RTNCODE  EQU   @15
RTNREG   EQU   @14
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAIOPTR EQU   CCAFIOP
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00019 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAFLAG2 EQU   CCAFFUNC+11
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCATYPEA EQU   0
CCABLDLA EQU   0
@NM00035 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00037 EQU   CCABLDLL
CCALKDRC EQU   @NM00037+20
@NM00039 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00039+20
@NM00041 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00041+20
@NM00043 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00043+20
@NM00045 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00045+20
@NM00047 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00047+20
@NM00049 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00049+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
IOPNAM17 EQU   IOPNAME
@NM00053 EQU   HMASMIOP+12
@NM00054 EQU   @NM00053
IOPDDNAM EQU   HMASMIOP+24
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00164 EQU   IOPQSMIF
IOPQSMFM EQU   @NM00164
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPQSMND EQU   IOPQSMNM
IOPQSMTP EQU   IOPQSMLS+8
IOPBS02  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
HMASMPRL EQU   0
PRLSPAN  EQU   HMASMPRL+2
PRLFLGS  EQU   PRLSPAN
PRLBLANK EQU   PRLFLGS
PRLDATE  EQU   HMASMPRL+4
PRLTIME  EQU   HMASMPRL+7
PRLEND   EQU   HMASMPRL+10
HMASMSCP EQU   0
SCPCHAR  EQU   HMASMSCP
SCPSRCH  EQU   HMASMSCP+4
SCPIOPAD EQU   HMASMSCP+16
SCPPMLN  EQU   HMASMSCP+22
SCPEOR   EQU   HMASMSCP+24
SCPNORT  EQU   SCPEOR
SCPRETRN EQU   HMASMSCP+25
SCPSTRNG EQU   0
CCADSIDA EQU   0
IOPBS01  EQU   0
IOPBS03  EQU   0
SCPIOPRM EQU   0
UCLPARM  EQU   0
UCLFLAGS EQU   UCLPARM+8
UCLFLG1  EQU   UCLFLAGS
UCLFLUSH EQU   UCLFLG1
UCLFLG2  EQU   UCLFLAGS+2
UCLFLG3  EQU   UCLFLAGS+3
UCLCRQ   EQU   UCLFLG3
UCLFLG4  EQU   UCLFLAGS+5
UCLFLG5  EQU   UCLFLAGS+7
HMASMCRP EQU   0
CRPSCPAD EQU   HMASMCRP+4
CRPRETRN EQU   HMASMCRP+10
CRPFLG1  EQU   HMASMCRP+14
CRPEOFEN EQU   CRPFLG1+1
CRPFLG2  EQU   HMASMCRP+16
CRPINSW0 EQU   CRPFLG2
CRPINSW1 EQU   CRPFLG2
CRPINSW2 EQU   CRPFLG2
CRPINSW3 EQU   CRPFLG2
CRPBUFFR EQU   HMASMCRP+18
CRPBFCTL EQU   CRPBUFFR
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00060 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
IOPCQMAX EQU   IOPCQMAP+12
@NM00071 EQU   IOPUDATA
@NM00072 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPABUNT EQU   IOPASMDR+1
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPLMDF2 EQU   IOPLMLEP+1
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPLMDFX EQU   IOPLMDNT+24
@NM00081 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMST  EQU   IOPRMIDE+7
IOPFMIDE EQU   IOPMACDR+9
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00092 EQU   IOPSRCDR+1
@NM00094 EQU   @NM00092+7
@NM00098 EQU   IOPSRCDR+9
IOPSRCFX EQU   IOPSRCNT+24
@NM00102 EQU   IOPSRCFX
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00108 EQU   IOPMODDR+1
@NM00110 EQU   @NM00108+7
@NM00114 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00118 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODST EQU   IOPLMODS+7
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00129 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPSYSFX EQU   IOPSYSNT+24
@NM00136 EQU   IOPSYSFX
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPPTFFX EQU   IOPPTFNT+24
@NM00145 EQU   IOPPTFFX
@NM00146 EQU   @NM00145
IOPPDTES EQU   IOPPTFFX+41
@NM00149 EQU   IOPPDTES
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPQFMND EQU   IOPQFMNM
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPPTFG1 EQU   IOPPTSFX+34
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00174 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00174
IOPPTREL EQU   IOPPTFMD
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBLEP2 EQU   IOPBPDS+9
@NM00178 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00178
IOPBFTB1 EQU   IOPBFTB0
PRLDATA  EQU   PRLEND
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
IOPBCEND EQU   IOPBPDS+21
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00180 EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
@NM00179 EQU   IOPBFTB1
IOPBAOSL EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBREFR EQU   IOPBLEP2
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
@NM00177 EQU   IOPBLEP2
IOPBDC   EQU   IOPBLEP2
@NM00176 EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00175 EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBRENT EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
IOPPTIND EQU   IOPPTNTR+8
IOPPTSND EQU   IOPPTREL
@NM00173 EQU   IOPPTSFX+872
IOPSYZPP EQU   IOPPTSFX+772
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZAP EQU   IOPPTSFX+755
IOPSYUPP EQU   IOPPTSFX+655
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPD EQU   IOPPTSFX+638
IOPSYSPP EQU   IOPPTSFX+538
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSUP EQU   IOPPTSFX+521
IOPSYLKP EQU   IOPPTSFX+421
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKD EQU   IOPPTSFX+404
IOPSYCPP EQU   IOPPTSFX+304
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOM EQU   IOPPTSFX+170
IOPSYASP EQU   IOPPTSFX+70
IOPSYASR EQU   IOPPTSFX+69
IOPSYASS EQU   IOPPTSFX+61
IOPSYASM EQU   IOPPTSFX+53
@NM00172 EQU   IOPPTSFX+35
@NM00171 EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPPTSNP EQU   IOPPTFG1
IOPSYPLN EQU   IOPPTSFX+32
IOPDSPFX EQU   IOPPTSFX+6
IOPDSDIR EQU   IOPDSSPC+4
IOPDSSEC EQU   IOPDSSPC+2
IOPDSPRM EQU   IOPDSSPC
@NM00170 EQU   IOPPTSDR+4
IOPPTPEM EQU   IOPPTSDR+2
IOPPCNVL EQU   IOPPTSDR+1
@NM00169 EQU   IOPPTSDR
IOPQFMTP EQU   IOPQFMLS+8
@NM00168 EQU   IOPQFMLS+7
@NM00167 EQU   IOPQFMDR
@NM00163 EQU   IOPQSMDR
@NM00162 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
IOPSBYNM EQU   IOPSBYNT
@NM00161 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00160 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00159 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00158 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00157 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00156 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00155 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00154 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00153 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00152 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00151 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
IOPPIND  EQU   IOPPNTRY+8
IOPPTFND EQU   IOPPMODS
IOPPFMID EQU   IOPPTFFX+73
@NM00150 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
IOPACCT  EQU   IOPDATES+15
IOPACCD  EQU   IOPDATES+12
IOPRSTT  EQU   IOPDATES+9
IOPRSTD  EQU   IOPDATES+6
IOPAPPT  EQU   IOPDATES+3
IOPAPPD  EQU   IOPDATES
IOPRECT  EQU   @NM00149+3
IOPRECD  EQU   @NM00149
@NM00148 EQU   IOPPTFFX+8
@NM00147 EQU   @NM00145+7
IOPPRELN EQU   @NM00146
@NM00144 EQU   IOPPTFDR+20
IOPSBYNO EQU   IOPPTFDR+13
IOPDBYNO EQU   IOPPTFDR+6
@NM00143 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPSBYP  EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00142 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPREGEN EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
IOPDUMMP EQU   IOPFLGS5
@NM00141 EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
IOPAPP   EQU   IOPFLGS5
IOPPTYPE EQU   IOPPTFDR+1
@NM00140 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
IOPSYSND EQU   IOPSYNTR
@NM00139 EQU   IOPSYSFX+21
IOPSYSID EQU   IOPSYSFX+13
IOPNUCID EQU   IOPSYSFX+12
IOPSREL  EQU   IOPSYSFX+8
@NM00138 EQU   @NM00136+7
@NM00137 EQU   @NM00136
@NM00135 EQU   IOPSYSDR+5
@NM00134 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPMTSNP EQU   IOPFLGS7
IOPPEMAX EQU   IOPSYSDR+2
IOPSCNVL EQU   IOPSYSDR+1
@NM00133 EQU   IOPSYSDR
IOPDLIND EQU   IOPDNTRY+8
IOPDLBND EQU   IOPDSYS
@NM00132 EQU   IOPDLBFX+8
@NM00131 EQU   @NM00129+7
@NM00130 EQU   @NM00129
@NM00128 EQU   IOPDLBDR+1
@NM00127 EQU   IOPDLBDR
IOPMDIND EQU   IOPMNTRY+8
@NM00126 EQU   IOPMODST
IOPMODND EQU   IOPMODID
IOPDLIB  EQU   IOPMODFX+72
@NM00125 EQU   IOPMODFX+12
@NM00124 EQU   IOPMODF4
@NM00123 EQU   IOPMODF3
@NM00122 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00121 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00120 EQU   @NM00118+7
@NM00119 EQU   @NM00118
@NM00117 EQU   IOPMODDR+17
@NM00116 EQU   @NM00114+7
@NM00115 EQU   @NM00114
@NM00113 EQU   @NM00110
@NM00112 EQU   @NM00110
@NM00111 EQU   @NM00110
@NM00109 EQU   @NM00108
@NM00107 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00106 EQU   IOPSRCST
IOPSRCND EQU   IOPSRCID
IOPSRDLB EQU   IOPSRCFX+72
IOPSRSYS EQU   IOPSRCFX+64
@NM00105 EQU   IOPSRCFX+8
@NM00104 EQU   @NM00102+7
@NM00103 EQU   @NM00102
@NM00101 EQU   IOPSRCDR+18
IOPSRLNG EQU   IOPSRCDR+17
@NM00100 EQU   @NM00098+7
@NM00099 EQU   @NM00098
@NM00097 EQU   @NM00094
@NM00096 EQU   @NM00094
@NM00095 EQU   @NM00094
@NM00093 EQU   @NM00092
@NM00091 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
IOPMCTYP EQU   IOPMCIND
@NM00090 EQU   IOPMACST
IOPMACND EQU   IOPMACID
IOPMCDLB EQU   IOPMACFX+72
IOPMCSYS EQU   IOPMACFX+64
@NM00089 EQU   IOPMACFX+8
IOPBUTYP EQU   IOPBUNT+7
IOPBUSMD EQU   IOPBUNT
@NM00088 EQU   IOPMACDR+18
IOPMCLNG EQU   IOPMACDR+17
IOPFMST  EQU   IOPFMIDE+7
IOPFMID  EQU   IOPFMIDE
@NM00087 EQU   IOPRMST
IOPRMASM EQU   IOPRMST
@NM00086 EQU   IOPRMST
IOPRMID  EQU   IOPRMIDE
@NM00085 EQU   IOPMACDR
IOPLMIND EQU   IOPLNTRY+8
IOPLMDND EQU   IOPSYSLB
@NM00083 EQU   @NM00081+7
@NM00082 EQU   @NM00081
@NM00080 EQU   IOPLMDDR+6
@NM00079 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPCOPY  EQU   IOPFLGS3
@NM00078 EQU   IOPLMDF4
@NM00077 EQU   IOPLMDF3
@NM00076 EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPNE    EQU   IOPLMDF2
@NM00075 EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPAPF   EQU   IOPFLGS2
@NM00074 EQU   IOPLMDDR
@NM00073 EQU   IOPASMDR+9
IOPABUTP EQU   IOPABUNT+7
IOPABUPT EQU   IOPABUNT
IOPNTLVL EQU   IOPASMDR
IOPALLOC EQU   @NM00072+4
IOPUSED  EQU   @NM00072
IOPTPSEQ EQU   @NM00071+8
IOPVLSER EQU   @NM00071+2
IOPBLKSI EQU   @NM00071
@NM00070 EQU   IOPCQMAP+11
@NM00069 EQU   IOPCQMAP+8
@NM00068 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00067 EQU   IOPSCMAP+11
@NM00066 EQU   IOPSCMAP+8
@NM00065 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00064 EQU   IOPNTMAX+11
@NM00063 EQU   IOPNTMAX+8
@NM00062 EQU   IOPNTMAX
@NM00061 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00060+5
IOPIPTF3 EQU   @NM00060
CRPDDNAM EQU   HMASMCRP+98
CRPBFSEQ EQU   CRPBUFFR+72
CRPBFCNT EQU   CRPBFCTL+71
CRPBFDTA EQU   CRPBFCTL
CRPINSWF EQU   CRPFLG2+1
CRPINSWE EQU   CRPFLG2+1
CRPINSWD EQU   CRPFLG2+1
CRPINSWC EQU   CRPFLG2+1
CRPINSWB EQU   CRPFLG2+1
CRPINSWA EQU   CRPFLG2+1
CRPINSW9 EQU   CRPFLG2+1
CRPINSW8 EQU   CRPFLG2+1
CRPINSW7 EQU   CRPFLG2
CRPINSW6 EQU   CRPFLG2
CRPINSW5 EQU   CRPFLG2
CRPINSW4 EQU   CRPFLG2
CRPEOF1  EQU   CRPINSW3
CRPWRTLG EQU   CRPINSW2
CRPEXADD EQU   CRPINSW1
CRPEOFSW EQU   CRPINSW0
@NM00010 EQU   CRPFLG1+1
CRPRPT   EQU   CRPFLG1+1
CRPLIST  EQU   CRPFLG1+1
CRPNOWPP EQU   CRPFLG1+1
CRPTRMEX EQU   CRPFLG1+1
CRPSCNCL EQU   CRPFLG1
CRPOFFST EQU   CRPFLG1
CRPOTHER EQU   CRPFLG1
CRPPRINT EQU   CRPFLG1
CRPLOG   EQU   CRPFLG1
CRPPTS   EQU   CRPFLG1
CRPLOGCK EQU   CRPFLG1
CRPBFPRM EQU   CRPFLG1
@NM00009 EQU   HMASMCRP+11
CRPOUTDS EQU   HMASMCRP+9
CRPINDS  EQU   HMASMCRP+8
@NM00008 EQU   HMASMCRP+1
CRPUXNUM EQU   HMASMCRP
@NM00007 EQU   UCLFLG5
UCLICTOK EQU   UCLFLG5
@NM00006 EQU   UCLFLG4
UCLBPFM  EQU   UCLFLG4
@NM00005 EQU   UCLFLG4
UCLBPIRQ EQU   UCLFLG4
UCLBPREQ EQU   UCLFLG4
UCLBPPRE EQU   UCLFLG4
UCLBPID  EQU   UCLFLG4
@NM00004 EQU   UCLFLG3+1
UCLSTS   EQU   UCLFLG3
UCLMTS   EQU   UCLFLG3
UCLPTS   EQU   UCLFLG3
UCLACRQ  EQU   UCLFLG3
UCLSCDS  EQU   UCLFLG3
UCLACDS  EQU   UCLFLG3
UCLCDS   EQU   UCLFLG3
UCLMASS  EQU   UCLFLG2
@NM00003 EQU   UCLFLG2
UCLFMID  EQU   UCLFLG2
UCLGROUP EQU   UCLFLG2
UCLEXC   EQU   UCLFLG2
UCLSEL   EQU   UCLFLG2
@NM00002 EQU   UCLFLG1+1
UCLDISW  EQU   UCLFLG1+1
UCLDISR  EQU   UCLFLG1+1
UCLDISN  EQU   UCLFLG1+1
UCLNOJCL EQU   UCLFLG1
UCLUSER  EQU   UCLFLG1
UCLAPAR  EQU   UCLFLG1
UCLCOMP  EQU   UCLFLG1
UCLASSEM EQU   UCLFLG1
UCLCHECK EQU   UCLFLG1
UCLNOAPP EQU   UCLFLG1
@NM00001 EQU   UCLPARM+5
UCLNUCID EQU   UCLPARM+4
UCLJCLGT EQU   UCLPARM
SCPRET   EQU   SCPRETRN
@NM00185 EQU   SCPEOR
SCPNOSUC EQU   SCPEOR
SCPRTERR EQU   SCPEOR
SCPCOMNT EQU   SCPEOR
SCPNOCT  EQU   SCPEOR
SCPCONT  EQU   SCPEOR
SCPINLN  EQU   HMASMSCP+20
SCPIORTN EQU   HMASMSCP+12
SCPWKAR  EQU   HMASMSCP+8
PRLCONC  EQU   PRLTIME+2
@NM00182 EQU   PRLTIME
PRLHDADR EQU   PRLDATE
@NM00181 EQU   PRLFLGS
PRLHEADO EQU   PRLFLGS
PRLHEAD  EQU   PRLFLGS
PRLRLEN  EQU   HMASMPRL
IOPBS04E EQU   IOPBS04+2
IOPBAPFC EQU   IOPBAPF+1
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
@NM00166 EQU   IOPQSMLS+7
@NM00165 EQU   @NM00164+7
@NM00084 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00059 EQU   IOPUSERL
@NM00058 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00057 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00056 EQU   @NM00053+10
IOPSEQNO EQU   @NM00053+8
@NM00055 EQU   @NM00054+7
IOPPTFNM EQU   @NM00054
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00052 EQU   CCABLDLM+2
@NM00051 EQU   CCABLDLM
CCAUPDPM EQU   @NM00049+24
@NM00050 EQU   @NM00049+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00049+12
CCAUPDTE EQU   @NM00049+8
CCAUPDNM EQU   @NM00049
CCASUPPM EQU   @NM00047+24
@NM00048 EQU   @NM00047+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00047+12
CCAIOSUP EQU   @NM00047+8
CCASUPNM EQU   @NM00047
CCAZAPPM EQU   @NM00045+24
@NM00046 EQU   @NM00045+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00045+12
CCASPZAP EQU   @NM00045+8
CCAZAPNM EQU   @NM00045
CCACOMPM EQU   @NM00043+24
@NM00044 EQU   @NM00043+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00043+12
CCACOMRS EQU   @NM00043+8
CCACOMNM EQU   @NM00043
CCACPYPM EQU   @NM00041+24
@NM00042 EQU   @NM00041+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00041+12
CCACOPY  EQU   @NM00041+8
CCACPYNM EQU   @NM00041
CCAASMPM EQU   @NM00039+24
@NM00040 EQU   @NM00039+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00039+12
CCAASM   EQU   @NM00039+8
CCAASMNM EQU   @NM00039
CCALKDPM EQU   @NM00037+24
@NM00038 EQU   @NM00037+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00037+12
CCALKED  EQU   @NM00037+8
CCALKDNM EQU   @NM00037
CCAPGMPM EQU   @NM00035+24
@NM00036 EQU   @NM00035+21
CCABPGRC EQU   @NM00035+20
CCABPGSP EQU   @NM00035+12
CCABPGAD EQU   @NM00035+8
CCABPGNM EQU   @NM00035
CCAEND   EQU   HMASMCCA+371
@NM00034 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00033 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00032 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00031 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00030 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00029 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00028 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00027 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00026 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00025 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCAAPPLY EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00024 EQU   @NM00019+18
@NM00023 EQU   @NM00019+16
CCATBLPA EQU   @NM00019+12
@NM00022 EQU   @NM00019+8
@NM00021 EQU   @NM00019+4
@NM00020 EQU   @NM00019
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCAICLMD EQU   CCAFICT+12
CCAICMOD EQU   CCAFICT+8
CCAICPTF EQU   CCAFICT+4
CCAICT   EQU   CCAFICT
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00018 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
@NM00017 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00016 EQU   CCAFBUFR+122
@NM00015 EQU   CCAFBUFR+120
@NM00014 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00013 EQU   CCAFBUFR+88
@NM00012 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00011 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00272 EQU   @EL00002
@RF00322 EQU   @EL00003
@RC00297 EQU   @EL00003
@RF00343 EQU   @EL00004
@RC00361 EQU   @EL00004
@RC00437 EQU   @EL00004
@RC00461 EQU   @EL00004
@RC00481 EQU   @EL00004
@RF00480 EQU   @EL00004
@RF00509 EQU   @EL00005
@RC00507 EQU   @EL00005
@RC00513 EQU   @EL00005
@RF00523 EQU   @EL00007
@RF00310 EQU   @RC00297
@RC00300 EQU   @RC00297
@RC00439 EQU   @RC00437
@ENDDATA EQU   *
         END   HMASMUC3,(C'PLS2226',0802,78334)
