         TITLE 'HMASMTPA - TABLE SYSMOD SELECTION FOR APPLY AND ACCEPT'
HMASMTPA CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMTPA  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  LA    @09,4095(,@12)                                      0001
         LA    @10,4095(,@09)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@09                                    0001
         USING @PSTART+8190,@10                                    0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*                                                                  0158
*   /*****************************************************************/
*   /*                                                               */
*   /* HMASMTPA << SYSMOD SELECTION FOR APPLY AND ACCEPT             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0158
*   TPARC=ZERO;                     /* CLEAR THE RETURN CODE         */
         SLR   TPARC,TPARC                                         0158
*   TPAFLAGS=''B;                   /* CLEAR CONTROL FLAGS           */
*                                                                  0159
         XC    TPAFLAGS(4),TPAFLAGS                                0159
*   /*****************************************************************/
*   /*                                                               */
*   /* INITALIZE FOR PROCESSING                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0160
*   CALL INITTPA;                   /*                               */
         BAL   @14,INITTPA                                         0160
*   RFY                                                            0161
*     RTNCODE RSTD;                                                0161
*   TPARC=MAX(TPARC,RTNCODE);       /* SAVE THE RETURN CODE          */
         CR    TPARC,RTNCODE                                       0162
         BNL   *+6
         LR    TPARC,RTNCODE                                       0162
*   RFY                                                            0163
*     RTNCODE UNRSTD;                                              0163
*   IF TPARC<STOPFUNC THEN          /* NO ERROR SO FAR?              */
         CH    TPARC,@CH00033                                      0164
         BNL   @RF00164                                            0164
*     DO;                           /* YES,                          */
*                                                                  0165
*       /*************************************************************/
*       /*                                                           */
*       /* BUILD GTA FILE LIST OF POSSIBLE SYSMODS BASED ON SELECTION*/
*       /* CRITERIA, FUNCTION AND DATA SET CONTENTS                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0166
*       CALL HMASMTPL(TBLXPARM);    /*                               */
         L     @08,@PC00001                                        0166
         ST    @08,@AL00001                                        0166
         L     @15,@CV01235                                        0166
         LA    @01,@AL00001                                        0166
         BALR  @14,@15                                             0166
*       RFY                                                        0167
*         RTNCODE RSTD;                                            0167
*       TPARC=MAX(TPARC,RTNCODE);   /* SAVE THE RETURN CODE          */
         CR    TPARC,RTNCODE                                       0168
         BNL   *+6
         LR    TPARC,RTNCODE                                       0168
*       RFY                                                        0169
*         RTNCODE UNRSTD;                                          0169
*     END;                          /*                               */
*   ELSE                                                           0171
*     ;                             /* PREVIOUS ERROR OCCURED        */
@RF00164 DS    0H                                                  0172
*   IF TPARC<STOPFUNC THEN          /* NO ERROR SO FAR?              */
         CH    TPARC,@CH00033                                      0172
         BNL   @RF00172                                            0172
*     DO;                           /* YES,                          */
*                                                                  0173
*       /*************************************************************/
*       /*                                                           */
*       /* DELETE SYSMODS IN THE SELECT/GROUP LIST ARE PROCESSED     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0174
*       IF TBLSEL=ON                /* SELECT MODE ...               */
*           ×TBLGROUP=ON THEN       /* ... OR GROUP MODE             */
         L     @08,@PC00001                                        0174
         L     @08,TBLXTBL(,@08)                                   0174
         TM    TBLSEL(@08),B'10100000'                             0174
         BZ    @RF00174                                            0174
*         DO;                       /*                               */
*           CALL DELSMD;            /*                               */
         BAL   @14,DELSMD                                          0176
*           RFY                                                    0177
*             RTNCODE RSTD;                                        0177
*           TPARC=MAX(TPARC,RTNCODE);/* SAVE THE RETURN CODE         */
         CR    TPARC,RTNCODE                                       0178
         BNL   *+6
         LR    TPARC,RTNCODE                                       0178
*           RFY                                                    0179
*             RTNCODE UNRSTD;                                      0179
*         END;                                                     0180
*       ELSE                                                       0181
*         ;                         /* SKIP DELETE PROCESSING        */
@RF00174 DS    0H                                                  0182
*     END;                          /*                               */
*   ELSE                                                           0183
*     ;                             /* PREVIOUS ERROR OCCURED        */
@RF00172 DS    0H                                                  0184
*   IF TPARC<STOPFUNC THEN          /* NO ERROR SO FAR?              */
         CH    TPARC,@CH00033                                      0184
         BNL   @RF00184                                            0184
*     DO;                           /* YES,                          */
*                                                                  0185
*       /*************************************************************/
*       /*                                                           */
*       /* 1ST LEVEL FUNCTION ICT PTF ENTRIES ARE BUILT              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0186
*       CALL F1BUILD;               /*                               */
         BAL   @14,F1BUILD                                         0186
*       RFY                                                        0187
*         RTNCODE RSTD;                                            0187
*       TPARC=MAX(TPARC,RTNCODE);   /* SAVE THE RETURN CODE          */
         CR    TPARC,RTNCODE                                       0188
         BNL   *+6
         LR    TPARC,RTNCODE                                       0188
*       RFY                                                        0189
*         RTNCODE UNRSTD;                                          0189
*     END;                          /*                               */
*   ELSE                                                           0191
*     ;                             /* PREVIOUS ERROR OCCURED        */
@RF00184 DS    0H                                                  0192
*   IF TPARC<STOPFUNC THEN          /* NO ERROR SO FAR?              */
         CH    TPARC,@CH00033                                      0192
         BNL   @RF00192                                            0192
*     DO;                           /* YES,                          */
*                                                                  0193
*       /*************************************************************/
*       /*                                                           */
*       /* LOWER LEVEL FUNCTION ICT PTF ENTRIES ARE BUILT            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0194
*       CALL F2BUILD;               /*                               */
         BAL   @14,F2BUILD                                         0194
*       RFY                                                        0195
*         RTNCODE RSTD;                                            0195
*       TPARC=MAX(TPARC,RTNCODE);   /* SAVE THE RETURN CODE          */
         CR    TPARC,RTNCODE                                       0196
         BNL   *+6
         LR    TPARC,RTNCODE                                       0196
*       RFY                                                        0197
*         RTNCODE UNRSTD;                                          0197
*     END;                          /*                               */
*   ELSE                                                           0199
*     ;                             /* PREVIOUS ERROR OCCURED        */
@RF00192 DS    0H                                                  0200
*   IF TPARC<STOPFUNC THEN          /* NO ERROR SO FAR?              */
         CH    TPARC,@CH00033                                      0200
         BNL   @RF00200                                            0200
*     DO;                           /* YES,                          */
*                                                                  0201
*       /*************************************************************/
*       /*                                                           */
*       /* SERVICE SYSMODS ARE ADDED TO THE ICT PTF SECTION          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0202
*       CALL SRVBUILD;              /*                               */
         BAL   @14,SRVBUILD                                        0202
*       RFY                                                        0203
*         RTNCODE RSTD;                                            0203
*       TPARC=MAX(TPARC,RTNCODE);   /* SAVE THE RETURN CODE          */
         CR    TPARC,RTNCODE                                       0204
         BNL   *+6
         LR    TPARC,RTNCODE                                       0204
*       RFY                                                        0205
*         RTNCODE UNRSTD;                                          0205
*     END;                          /*                               */
*   ELSE                                                           0207
*     ;                             /* PREVIOUS ERROR OCCURED        */
@RF00200 DS    0H                                                  0208
*   IF TPARC<STOPFUNC THEN          /* NO ERROR SO FAR?              */
         CH    TPARC,@CH00033                                      0208
         BNL   @RF00208                                            0208
*     DO;                           /* YES,                          */
*                                                                  0209
*       /*************************************************************/
*       /*                                                           */
*       /* ISSUE ERROR MESSAGE FOR ANY SELECTED SYSMODS NOT PROCESSED*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0210
*       CALL SELCHK;                /*                               */
         BAL   @14,SELCHK                                          0210
*       RFY                                                        0211
*         RTNCODE RSTD;                                            0211
*       TPARC=MAX(TPARC,RTNCODE);   /* SAVE THE RETURN CODE          */
         CR    TPARC,RTNCODE                                       0212
         BNL   *+6
         LR    TPARC,RTNCODE                                       0212
*       RFY                                                        0213
*         RTNCODE UNRSTD;                                          0213
*     END;                          /*                               */
*   ELSE                                                           0215
*     ;                             /* PREVIOUS ERROR OCCURED        */
@RF00208 DS    0H                                                  0216
*   IF TPARC<STOPFUNC               /* NO ERROR SO FAR?              */
*       &CCAACCPT=ON                /* ... AND ACCEPT ...            */
*       &TBLNOAPP=OFF THEN          /* NO APPLY ?                    */
         CH    TPARC,@CH00033                                      0216
         BNL   @RF00216                                            0216
         TM    CCAACCPT(CCAPTR),B'00100000'                        0216
         BNO   @RF00216                                            0216
         L     @08,@PC00001                                        0216
         L     @08,TBLXTBL(,@08)                                   0216
         TM    TBLNOAPP(@08),B'10000000'                           0216
         BNZ   @RF00216                                            0216
*     DO;                           /* YES,                          */
*                                                                  0217
*       /*************************************************************/
*       /*                                                           */
*       /* BUILD ANY REQUIRED SYSMOD ENTRIES FOR SUPERSEDED SYSMODS  */
*       /* THESE ENTRIES WILL BE USED TO REMOVE THE SYSMODS FROM THE */
*       /* PTS                                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0218
*       CALL SUPSMD;                /*                               */
         BAL   @14,SUPSMD                                          0218
*       RFY                                                        0219
*         RTNCODE RSTD;                                            0219
*       TPARC=MAX(TPARC,RTNCODE);   /* SAVE THE RETURN CODE          */
         CR    TPARC,RTNCODE                                       0220
         BNL   *+6
         LR    TPARC,RTNCODE                                       0220
*       RFY                                                        0221
*         RTNCODE UNRSTD;                                          0221
*     END;                          /*                               */
*   ELSE                                                           0223
*     ;                             /* PREVIOUS ERROR OCCURED        */
*                                                                  0223
@RF00216 DS    0H                                                  0224
*   /*****************************************************************/
*   /*                                                               */
*   /* CLEANUP PROCESSING FOR HMASMTPA                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0224
*   CALL TERMTPA;                   /*                               */
         BAL   @14,TERMTPA                                         0224
*   RFY                                                            0225
*     RTNCODE RSTD;                                                0225
*   TPARC=MAX(TPARC,RTNCODE);       /* SAVE THE RETURN CODE          */
         CR    TPARC,RTNCODE                                       0226
         BNL   *+6
         LR    TPARC,RTNCODE                                       0226
*   RFY                                                            0227
*     RTNCODE UNRSTD;                                              0227
*   RETURN CODE(TPARC);             /*                               */
         LR    @15,TPARC                                           0228
         L     @13,4(,@13)                                         0228
         L     @14,12(,@13)                                        0228
         LM    @00,@12,20(@13)                                     0228
         BR    @14                                                 0228
*                                                                  0229
*   /*****************************************************************/
*   /*                                                               */
*   /* INITTPA -                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0229
*INITTPA:                                                          0229
*   PROC;                                                          0229
INITTPA  STM   @14,@12,12(@13)                                     0229
*   DCL                                                            0230
*     INITRC FIXED(15);             /*                               */
*   INITRC=ZERO;                    /* CLEAR THE RETURN CODE         */
         SLR   INITRC,INITRC                                       0231
*   KEYSCLGN=''B;                   /* CLEAR GET NEXT SCL SAVED KEY  */
         XC    KEYSCLGN(15),KEYSCLGN                               0232
*   RETURN CODE(INITRC);            /* RETURN WITH THE RETURN CODE   */
         LR    @15,INITRC                                          0233
         L     @14,12(,@13)                                        0233
         LM    @00,@12,20(@13)                                     0233
         BR    @14                                                 0233
*   END INITTPA;                    /*                               */
*                                                                  0235
*   /*****************************************************************/
*   /*                                                               */
*   /* DELSMD - BUILD ICT ENTRIES FOR DELETING SYSMODS               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0235
*DELSMD:                                                           0235
*   PROC;                                                          0235
DELSMD   STM   @14,@12,@SA00003                                    0235
*   DCL                                                            0236
*     DELRC FIXED(15);              /*                               */
*   DCL                                                            0237
*     1 DELFLAGS BIT(8),            /* LOCAL CONTROL FLAGS           */
*      2 ENDFUNC BIT(1),            /* END OF IN L1 AND L2 ENTRIES IN
*                                      SCL                           */
*      2 DELSKIP BIT(1),            /* SKIP THIS SYSMOD              */
*      2 * BIT(1),                  /*                               */
*      2 DELGET BIT(1),             /* GET NEXT GTA RECORD           */
*      2 * BIT(4);                  /*                               */
*   DCL                                                            0238
*     DELICTP PTR(31);              /* ICT ENTRY POINTER RETURNED BY
*                                      VERBLD                        */
*   DCL                                                            0239
*     DELSCL CHAR(LENGTH(SCLMAP));  /* AREA FOR GET NEXT SCL TO SAVE
*                                      KEY                           */
*   RFY                                                            0240
*     HMASMIOP BASED(CCAIOPTR);     /*                               */
*   RFY                                                            0241
*     HMASMGTP BASED(TBLXSCGT);     /*                               */
*   RFY                                                            0242
*     SCLMAP BASED(GTPBUFAD);       /*                               */
*   RFY                                                            0243
*     TSLPARMS BASED(TBLXTSLP);     /*                               */
*   DELRC=ZERO;                     /* CLEAR THE RETURN CODE         */
         SLR   DELRC,DELRC                                         0244
*   DELFLAGS=''B;                   /* CLEAR LOCAL FLAGS             */
         MVI   DELFLAGS,X'00'                                      0245
*   GTPFUNCT=GTPOPENN;              /* POSITION TO THE BEGINNING OF
*                                      FILE                          */
         L     @08,@PC00001                                        0246
         L     @08,TBLXSCGT(,@08)                                  0246
         MVI   GTPFUNCT(@08),X'01'                                 0246
*   CALL HMASMGTA(HMASMGTP);        /* ...                           */
         ST    @08,@AL00001                                        0247
         L     @15,@CV01231                                        0247
         LA    @01,@AL00001                                        0247
         BALR  @14,@15                                             0247
*   ENDFUNC=OFF;                    /* END OF FUNCTIONS NOT FOUND IN
*                                      GTA                           */
*                                                                  0248
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THRU THE RECORDS IN THE SCL GTA FILE. FOR EACH RECORD    */
*   /* THAT HAS A DELETE, DETERMINE IF IT IS APPLICABELE. IF SO,     */
*   /* DETERMINE IF ANY OF THE SYSMODS NAMED IN THE DELETE LIST ARE  */
*   /* IN THE 'CURRENT DELETE ENVIRONMENT'. IF SO THE HIS IS A DELETE*/
*   /* SYSMOD AND WILL BE PROCESSED IN THIS ROUTINE.                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0249
*   DELGET=ON;                      /* GET FIRST RECORD              */
         OI    DELGET,B'00010000'                                  0249
         NI    ENDFUNC,B'01111111'                                 0249
*   IOPNAM17=''B;                   /* CLEAR IOP NAME FOR IO CHECK   */
         L     @08,CCAIOPTR(,CCAPTR)                               0250
         XC    IOPNAM17(7,@08),IOPNAM17(@08)                       0250
*   DO WHILE(ENDFUNC=OFF            /* PROCESS ALL FUNCTIONS         */
*         &DELRC<STOPSMD);          /*                               */
         B     @DE00251                                            0251
@DL00251 DS    0H                                                  0252
*     DELSKIP=OFF;                  /* CLEAR SKIP FLAG               */
         NI    DELSKIP,B'10111111'                                 0252
*     IF DELGET=ON THEN             /* NEED TO GET A RECORD?         */
         TM    DELGET,B'00010000'                                  0253
         BNO   @RF00253                                            0253
*       DO;                         /*                               */
*         GTPFUNCT=GTPGETN;         /* GET NEXT SYSMOD               */
         L     @08,@PC00001                                        0255
         L     @08,TBLXSCGT(,@08)                                  0255
         MVI   GTPFUNCT(@08),X'08'                                 0255
*         CALL HMASMGTA(HMASMGTP);  /* ...                           */
         ST    @08,@AL00001                                        0256
         L     @15,@CV01231                                        0256
         LA    @01,@AL00001                                        0256
         BALR  @14,@15                                             0256
*       END;                        /*                               */
*     ELSE                                                         0258
*       ;                           /* POSITIONED AT NEXT RECORD BY
*                                      AMBIGCK                       */
@RF00253 DS    0H                                                  0259
*     DELGET=ON;                    /* GET NEXT SCL RECORD           */
         OI    DELGET,B'00010000'                                  0259
*     IF GTPRETRN=GTPEOF THEN       /* END OF FILE?                  */
         L     @08,@PC00001                                        0260
         L     @08,TBLXSCGT(,@08)                                  0260
         CLI   GTPRETRN(@08),4                                     0260
         BNE   @RF00260                                            0260
*       DO;                         /* YES,                          */
*         ENDFUNC=ON;               /* ALL FUNCTIONS PROCESSED       */
         OI    ENDFUNC,B'10000000'                                 0262
*       END;                                                       0263
*     ELSE                          /* NOT END OF FILE               */
*       DO;                                                        0264
         B     @RC00260                                            0264
@RF00260 DS    0H                                                  0265
*         IF SCLISTNO^=SCLL1        /* PROCESSING A FUNCTION RECORD? */
*             &SCLISTNO^=SCLL2 THEN /* ...                           */
         L     @08,@PC00001                                        0265
         L     @08,TBLXSCGT(,@08)                                  0265
         L     @08,GTPBUFAD(,@08)                                  0265
         CLI   SCLISTNO(@08),C'1'                                  0265
         BE    @RF00265                                            0265
         CLI   SCLISTNO(@08),C'2'                                  0265
         BE    @RF00265                                            0265
*           DO;                     /* NO,                           */
*             ENDFUNC=ON;           /* ALL FUNCTION DONE             */
         OI    ENDFUNC,B'10000000'                                 0267
*           END;                    /*                               */
*         ELSE                                                     0269
*           ;                       /*                               */
@RF00265 DS    0H                                                  0270
*       END;                                                       0270
*     DELSCL=SCLMAP;                /* SAVE SCL RECORD SINCE GTP   0271
*                                      BUFFER MAY BE OVERLAID BY   0271
*                                      AMBIGCHK PROCESSING           */
@RC00260 L     @08,@PC00001                                        0271
         L     @08,TBLXSCGT(,@08)                                  0271
         L     @08,GTPBUFAD(,@08)                                  0271
         MVC   DELSCL(17),SCLMAP(@08)                              0271
*     IF ENDFUNC=OFF                /* NOT THRU ...                  */
*         &DELRC<STOPSMD            /* ... AND NO ERROR ...          */
*         &SCLDELP=ON               /* DELETE ON THIS CANDIDATE ++VER*/
*         &SCLCAND=ON               /* ...                           */
*         &SCLSELST=ON THEN         /* AND IN SELECT/GROUP LIST?     */
         TM    ENDFUNC,B'10000000'                                 0272
         BNZ   @RF00272                                            0272
         CH    DELRC,@CH00056                                      0272
         BNL   @RF00272                                            0272
         TM    SCLDELP(@08),B'11100000'                            0272
         BNO   @RF00272                                            0272
*       DO;                         /* YES,                          */
*         IF IOPNAM17^=SCLSMD THEN  /* DIFFERENT THAN PREVIOUS     0274
*                                      SYSMOD?                       */
         L     @02,CCAIOPTR(,CCAPTR)                               0274
         CLC   IOPNAM17(7,@02),SCLSMD(@08)                         0274
         BE    @RF00274                                            0274
*           DO;                                                    0275
*             IOPDSID=IOPPTS;       /* GET PTS EXTENDED ENTRY FOR  0276
*                                      FUNCTION                      */
         MVI   IOPDSID(@02),X'06'                                  0276
*             IOPTYPE=IOPSMD;       /* ...                           */
         MVI   IOPTYPE(@02),X'0B'                                  0277
*             IOPFUNCT=IOPLOC;      /* ...                           */
         MVI   IOPFUNCT(@02),X'03'                                 0278
*             IOPNAM17=SCLSMD;      /* ...                           */
         MVC   IOPNAM17(7,@02),SCLSMD(@08)                         0279
*             CALL HMASMIO(HMASMIOP);/* ...                          */
         ST    @02,@AL00001                                        0280
         L     @15,@CV01229                                        0280
         LA    @01,@AL00001                                        0280
         BALR  @14,@15                                             0280
*             DELRC=MAX(DELRC,IOPRETRN);/* RC IS IO RC               */
         L     @08,CCAIOPTR(,CCAPTR)                               0281
         SLR   @02,@02                                             0281
         IC    @02,IOPRETRN(,@08)                                  0281
         CR    DELRC,@02                                           0281
         BNL   *+6
         LR    DELRC,@02                                           0281
*           END;                                                   0282
*         ELSE                                                     0283
*           ;                       /* NO NEED TO DO IO              */
@RF00274 DS    0H                                                  0284
*         IF DELRC<STOPSMD THEN     /* ALL IS WELL                   */
         CH    DELRC,@CH00056                                      0284
         BNL   @RF00284                                            0284
*           DO;                     /* YES,                          */
*                                                                  0285
*             /*******************************************************/
*             /*                                                     */
*             /* DETERMINE IF THIS ++VER IS APPLICABLE TO THE 'DELETE*/
*             /* ENVIRONMENT'                                        */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0286
*             CALL VERDELCK(HMASMIOP,SCLMAP);/* DETERMINE IF THIS  0286
*                                      ++VER IS APPLICABLE           */
         L     @08,CCAIOPTR(,CCAPTR)                               0286
         ST    @08,@AL00001                                        0286
         L     @08,@PC00001                                        0286
         L     @08,TBLXSCGT(,@08)                                  0286
         L     @08,GTPBUFAD(,@08)                                  0286
         ST    @08,@AL00001+4                                      0286
         LA    @01,@AL00001                                        0286
         BAL   @14,VERDELCK                                        0286
*             RFY                                                  0287
*               RTNCODE RSTD;                                      0287
*             IF RTNCODE=TSLNTFND THEN/* APPLICABLE VER NOT FOUND?   */
         CH    RTNCODE,@CH00038                                    0288
         BNE   @RF00288                                            0288
*               DO;                 /*                               */
*                 DELSKIP=ON;       /* SKIP CURRENT ++VER RECORD     */
         OI    DELSKIP,B'01000000'                                 0290
*               END;                /*                               */
*             ELSE                  /* OTHER THAN NOT FOUND          */
*               DO;                                                0292
         B     @RC00288                                            0292
@RF00288 DS    0H                                                  0293
*                 DELRC=MAX(DELRC,RTNCODE);/* SAVE RETURN CODE       */
         CR    DELRC,RTNCODE                                       0293
         BNL   *+6
         LR    DELRC,RTNCODE                                       0293
*                 RFY                                              0294
*                   RTNCODE UNRSTD;                                0294
*               END;                                               0295
*           END;                                                   0296
@RC00288 DS    0H                                                  0297
*         IF DELRC<STOPSMD          /*                               */
*             &DELSKIP=OFF THEN     /* STILL GO?                     */
@RF00284 CH    DELRC,@CH00056                                      0297
         BNL   @RF00297                                            0297
         TM    DELSKIP,B'01000000'                                 0297
         BNZ   @RF00297                                            0297
*           DO;                     /*                               */
*             IF SCLISTNO^=SCLL1 THEN/* OTHER THAN L1, I.E. L2?      */
         L     @08,@PC00001                                        0299
         L     @08,TBLXSCGT(,@08)                                  0299
         L     @08,GTPBUFAD(,@08)                                  0299
         CLI   SCLISTNO(@08),C'1'                                  0299
         BE    @RF00299                                            0299
*               DO;                 /* YES,                          */
*                 CALL SELFND(SCLSMD);/* MARK SELECT LIST ENTRY SO 0301
*                                      THAT SELECTED SYSMOD NOT    0301
*                                      PROCESSED MESSAGE NOT ISSUED  */
*                                                                  0301
         LA    @08,SCLSMD(,@08)                                    0301
         ST    @08,@AL00001                                        0301
         LA    @01,@AL00001                                        0301
         BAL   @14,SELFND                                          0301
*                 /***************************************************/
*                 /*                                                 */
*                 /* DETERMINE IF THIS ++VER IS AMBIGUOUS            */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0302
*                 CALL AMBIGCK(SCLMAP);/* CHECK FOR AMBIGUOUS ++VER
*                                      SITUATION                     */
         L     @08,@PC00001                                        0302
         L     @08,TBLXSCGT(,@08)                                  0302
         L     @08,GTPBUFAD(,@08)                                  0302
         ST    @08,@AL00001                                        0302
         LA    @01,@AL00001                                        0302
         BAL   @14,AMBIGCK                                         0302
*                 RFY                                              0303
*                   RTNCODE RSTD;                                  0303
*                 DELGET=OFF;       /* DO NOT GET NEXT RECORD SINCE
*                                      AMBIGCK DID                   */
         NI    DELGET,B'11101111'                                  0304
*                 DELRC=MAX(DELRC,RTNCODE);/*                        */
         CR    DELRC,RTNCODE                                       0305
         BNL   *+6
         LR    DELRC,RTNCODE                                       0305
*                 RFY                                              0306
*                   RTNCODE UNRSTD;                                0306
*               END;                                               0307
*             ELSE                                                 0308
*               ;                   /* 1ST LEVEL FUNCTION            */
@RF00299 DS    0H                                                  0309
*             RFY                                                  0309
*               SCLMAP BASED(ADDR(DELSCL));                        0309
*             IF DELRC<STOPSMD      /* STILL PROCESSING SYSMOD?      */
*                 &DELSKIP=OFF THEN /*                               */
         CH    DELRC,@CH00056                                      0310
         BNL   @RF00310                                            0310
         TM    DELSKIP,B'01000000'                                 0310
         BNZ   @RF00310                                            0310
*               DO;                                                0311
*                                                                  0311
*                 /***************************************************/
*                 /*                                                 */
*                 /* CHECK TO SEE IF SYSMOD IS SUP'ED BY A SYSMOD    */
*                 /* THAT IS ALREADY IN THE ICT AND TO MARK SUP'ED   */
*                 /* SYSMODS IN THE ICT                              */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0312
*                 CALL SUPCK(DELETE,SCLMAP,HMASMIOP,DELSUPN);      0312
         LA    @08,@CC01285                                        0312
         ST    @08,@AL00001                                        0312
         LA    @08,DELSCL                                          0312
         ST    @08,@AL00001+4                                      0312
         L     @08,CCAIOPTR(,CCAPTR)                               0312
         ST    @08,@AL00001+8                                      0312
         LA    @08,DELSUPN                                         0312
         ST    @08,@AL00001+12                                     0312
         LA    @01,@AL00001                                        0312
         BAL   @14,SUPCK                                           0312
*                 RFY                                              0313
*                   RTNCODE RSTD;                                  0313
*                 IF RTNCODE^=ZERO THEN/* SUP'OR OR SUP'EE FND?      */
         LTR   RTNCODE,RTNCODE                                     0314
         BZ    @RF00314                                            0314
*                   DO;             /* YES,                          */
*                     DELRC=STOPSMD;/* STOP THE SYSMOD               */
         LA    DELRC,8                                             0316
*                     RFY                                          0317
*                       RTNCODE UNRSTD;                            0317
*                   END;                                           0318
*               END;                                               0319
@RF00314 DS    0H                                                  0320
*             IF DELRC<STOPSMD      /* STILL PROCESSING SYSMOD?      */
*                 &DELSKIP=OFF THEN /*                               */
@RF00310 CH    DELRC,@CH00056                                      0320
         BNL   @RF00320                                            0320
         TM    DELSKIP,B'01000000'                                 0320
         BNZ   @RF00320                                            0320
*               DO;                                                0321
*                                                                  0321
*                 /***************************************************/
*                 /*                                                 */
*                 /* DO NPRE AND DELETE CHECKING AND BUILD ICT ENTRY */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0322
*                 CALL VERBLD(DELETE,HMASMIOP,SCLMAP,DELICTP);/*     */
         LA    @08,@CC01285                                        0322
         ST    @08,@AL00001                                        0322
         L     @08,CCAIOPTR(,CCAPTR)                               0322
         ST    @08,@AL00001+4                                      0322
         LA    @08,DELSCL                                          0322
         ST    @08,@AL00001+8                                      0322
         LA    @08,DELICTP                                         0322
         ST    @08,@AL00001+12                                     0322
         LA    @01,@AL00001                                        0322
         BAL   @14,VERBLD                                          0322
*                 RFY                                              0323
*                   RTNCODE RSTD;                                  0323
*                 IF RTNCODE>=STOPSMD THEN/* ++VER OK AND ENTRY    0324
*                                      BUILT?                        */
         LA    @14,8                                               0324
         CR    RTNCODE,@14                                         0324
         BL    @RF00324                                            0324
*                   DO;             /* NO,                           */
*                     DELSKIP=ON;   /* SKIP THIS ++VER               */
         OI    DELSKIP,B'01000000'                                 0326
*                     IF RTNCODE>STOPSMD THEN/*                      */
         CR    RTNCODE,@14                                         0327
         BNH   @RF00327                                            0327
*                       DO;         /*                               */
*                         DELRC=MAX(DELRC,RTNCODE);/*                */
         CR    DELRC,RTNCODE                                       0329
         BNL   *+6
         LR    DELRC,RTNCODE                                       0329
*                       END;        /*                               */
*                     RFY                                          0331
*                       RTNCODE UNRSTD;                            0331
@RF00327 DS    0H                                                  0332
*                   END;                                           0332
*               END;                                               0333
@RF00324 DS    0H                                                  0334
*             IF DELSKIP=OFF        /* NOT SKIPPING OR ERROR         */
*                 &DELRC<STOPFUNC THEN/*                             */
@RF00320 TM    DELSKIP,B'01000000'                                 0334
         BNZ   @RF00334                                            0334
         CH    DELRC,@CH00033                                      0334
         BNL   @RF00334                                            0334
*               DO;                 /*                               */
*                                                                  0335
*                 /***************************************************/
*                 /*                                                 */
*                 /* SEARCH SELECT LIST FOR DELETEES                 */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0336
*                 CALL DELSELCK(SCLVERNO,/*                          */
*                     HMASMIOP);    /*                               */
         LA    @08,DELSCL                                          0336
         LA    @08,SCLVERNO(,@08)                                  0336
         ST    @08,@AL00001                                        0336
         L     @08,CCAIOPTR(,CCAPTR)                               0336
         ST    @08,@AL00001+4                                      0336
         LA    @01,@AL00001                                        0336
         BAL   @14,DELSELCK                                        0336
*                 RFY                                              0337
*                   RTNCODE RSTD;                                  0337
*                 DELRC=MAX(DELRC,RTNCODE);/* SAVE RETURN CODE       */
         CR    DELRC,RTNCODE                                       0338
         BNL   *+6
         LR    DELRC,RTNCODE                                       0338
*                 RFY                                              0339
*                   RTNCODE UNRSTD;                                0339
*               END;                /*                               */
*             IF DELSKIP=OFF        /* NOT SKIPPING OR ERROR         */
*                 &DELRC<STOPFUNC THEN/*                             */
@RF00334 TM    DELSKIP,B'01000000'                                 0341
         BNZ   @RF00341                                            0341
         CH    DELRC,@CH00033                                      0341
         BNL   @RF00341                                            0341
*               DO;                 /*                               */
*                                                                  0342
*                 /***************************************************/
*                 /*                                                 */
*                 /* PROCESS DELETE SYSMODS                          */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0343
*                 CALL HMASMTD1(TBLXPARM,DELICTP);                 0343
         L     @08,@PC00001                                        0343
         ST    @08,@AL00001                                        0343
         LA    @08,DELICTP                                         0343
         ST    @08,@AL00001+4                                      0343
         L     @15,@CV01234                                        0343
         LA    @01,@AL00001                                        0343
         BALR  @14,@15                                             0343
*                 RFY                                              0344
*                   RTNCODE RSTD;                                  0344
*                 DELRC=MAX(DELRC,RTNCODE);/*                        */
         CR    DELRC,RTNCODE                                       0345
         BNL   *+6
         LR    DELRC,RTNCODE                                       0345
*                 RFY                                              0346
*                   RTNCODE UNRSTD;                                0346
*               END;                /*                               */
*           END;                    /*                               */
*         ELSE                                                     0349
*           ;                       /* NO DELETE WITH THIS ++VER     */
@RF00297 DS    0H                                                  0350
*       END;                                                       0350
*     ELSE                                                         0351
*       ;                           /* END OF LISTS, ERROR, OR NOT A
*                                      DELETE CANDIDATE              */
@RF00272 DS    0H                                                  0352
*     IF DELRC>=STOPSMD THEN        /* SYSMOD FAILED?                */
@RC00272 CH    DELRC,@CH00056                                      0352
         BL    @RF00352                                            0352
*       DO;                         /* YES,                          */
*         DELRC=STOPFUNC;           /* HALT PROCESSING               */
         LA    DELRC,12                                            0354
*         CALL FUNCFM(SCLSMD);      /* ISSUE MESSAGE                 */
         LA    @08,DELSCL                                          0355
         LA    @08,SCLSMD(,@08)                                    0355
         ST    @08,@AL00001                                        0355
         LA    @01,@AL00001                                        0355
         BAL   @14,FUNCFM                                          0355
*       END;                        /*                               */
*     ELSE                                                         0357
*       ;                           /* SYSMOD IS OTHER THAN A      0357
*                                      FUNCTION                      */
@RF00352 DS    0H                                                  0358
*   END;                            /* END OF DELETE PROCESS LOOP    */
@DE00251 TM    ENDFUNC,B'10000000'                                 0358
         BNZ   @DC00251                                            0358
         CH    DELRC,@CH00056                                      0358
         BL    @DL00251                                            0358
@DC00251 DS    0H                                                  0359
*   IF DELRC<STOPFUNC THEN          /* ALL IS WELL?                  */
         CH    DELRC,@CH00033                                      0359
         BNL   @RF00359                                            0359
*     DO;                                                          0360
*                                                                  0360
*       /*************************************************************/
*       /*                                                           */
*       /* ADD IF REQ INDEX LISTS TO ALL ICT PTF ENTRIES JUST CREATED*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0361
*       CALL ADDIFS;                /*                               */
         BAL   @14,ADDIFS                                          0361
*       RFY                                                        0362
*         RTNCODE RSTD;                                            0362
*       DELRC=MAX(DELRC,RTNCODE);                                  0363
         CR    DELRC,RTNCODE                                       0363
         BNL   *+6
         LR    DELRC,RTNCODE                                       0363
*       RFY                                                        0364
*         RTNCODE UNRSTD;                                          0364
*                                                                  0364
*       /*************************************************************/
*       /*                                                           */
*       /* IF GROUP, ADD CANDIDATES                                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0365
*       IF DELRC<STOPFUNC THEN      /* ALL IS WELL?                  */
         CH    DELRC,@CH00033                                      0365
         BNL   @RF00365                                            0365
*         DO;                                                      0366
*           CALL GROUPADD;                                         0367
         BAL   @14,GROUPADD                                        0367
*           RFY                                                    0368
*             RTNCODE RSTD;                                        0368
*           DELRC=MAX(DELRC,RTNCODE);/* SAVE THE RETURN CODE         */
         CR    DELRC,RTNCODE                                       0369
         BNL   *+6
         LR    DELRC,RTNCODE                                       0369
*           RFY                                                    0370
*             RTNCODE UNRSTD;                                      0370
*         END;                                                     0371
*       IF DELRC<STOPFUNC THEN      /* ALL IS WELL?                  */
@RF00365 CH    DELRC,@CH00033                                      0372
         BNL   @RF00372                                            0372
*         DO;                                                      0373
*           TSLFUNCT=TSLFCLRP;      /* CLEAR PASS FLAGS IN THE ICT   */
         L     @08,@PC00001                                        0374
         L     @08,TBLXTSLP(,@08)                                  0374
         MVI   TSLFUNCT(@08),X'05'                                 0374
*           CALL HMASMTSB(TSLPARMS);/* CLEAR THE FLAGS               */
         ST    @08,@AL00001                                        0375
         L     @15,@CV01237                                        0375
         LA    @01,@AL00001                                        0375
         BALR  @14,@15                                             0375
*         END;                                                     0376
*     END;                                                         0377
@RF00372 DS    0H                                                  0378
*   RETURN CODE(DELRC);             /* RETURN WITH THE RETURN CODE   */
@RF00359 LR    @15,DELRC                                           0378
         L     @14,@SA00003                                        0378
         LM    @00,@12,@SA00003+8                                  0378
         BR    @14                                                 0378
*   RFY                                                            0379
*     HMASMIOP BASED;                                              0379
*   RFY                                                            0380
*     HMASMGTP BASED;                                              0380
*   RFY                                                            0381
*     SCLMAP BASED;                                                0381
*                                                                  0382
*   /*****************************************************************/
*   /*                                                               */
*   /* DELSELCK - CHECK FOR DELETE ERRORS                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0382
*DELSELCK:                                                         0382
*   PROC(DSCVER#,                   /* VER NUMBER                    */
*       DSCIOP);                    /* IOP FOR THE CURRENT SYSMOD    */
DELSELCK STM   @14,@12,@SA00004                                    0382
         MVC   @PC00004(8),0(@01)                                  0382
*   DCL                                                            0383
*     DSCIOP CHAR(*);               /* IOP                           */
*   DCL                                                            0384
*     DSCVER# FIXED(8);             /* ++VER NUMBER                  */
*   DCL                                                            0385
*     DSCRC FIXED(15);              /*                               */
*   DCL                                                            0386
*     1 DSCFLAGS,                   /*                               */
*      2 DSCEOLST BIT(1),           /* END OF SUB-ENTRIES FOUND IN 0386
*                                      DELETE SEARCH                 */
*      2 * BIT(6);                  /*                               */
*   RFY                                                            0387
*     HMASMIOP BASED(ADDR(DSCIOP));                                0387
*   RFY                                                            0388
*     HMASMGTP BASED(TBLXSEGT);                                    0388
*   RFY                                                            0389
*     HMASMSET BASED(GTPBUFAD);                                    0389
*   RFY                                                            0390
*     TSLPARMS BASED(TBLXTSLP);                                    0390
*   DSCRC=ZERO;                     /* CLEAR THE RETURN CODE         */
         SLR   DSCRC,DSCRC                                         0391
*   DSCFLAGS=''B;                   /* CLEAR LOCAL CONTROL FLAGS     */
*                                                                  0392
         MVI   DSCFLAGS,X'00'                                      0392
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK THAT CURRENT SYSMOD DOES NOT DELETE SYSMOD IN THE SELECT*/
*   /* LIST                                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0393
*   TSLENTSR=''B;                   /* CLEAR TSB PARMLIST            */
         L     @08,@PC00001                                        0393
         L     @08,TBLXTSLP(,@08)                                  0393
         L     @03,TSLPMLAD(,@08)                                  0393
         XC    TSLENTSR(16,@03),TSLENTSR(@03)                      0393
*   TSLEBGNP=ADDR(IOPPTFVR);        /* BEGINNING OF SEARCH PTR       */
         L     @15,@PC00004+4                                      0394
         LA    @15,IOPPTFVR(,@15)                                  0394
         ST    @15,TSLEBGNP(,@03)                                  0394
*   TSLFUNCT=TSLFENSR;              /* FUNCTION IS SEARCH IOP      0395
*                                      SUB-ENTRY                     */
         MVI   TSLFUNCT(@08),X'06'                                 0395
*   TSLETYPE=IOPPDEL;               /* TYPE IS DELETE ENTRY          */
         MVI   TSLETYPE(@03),X'A8'                                 0396
*   TSLEVER#=DSCVER#;               /* ++VER NUMBER                  */
*                                                                  0397
         L     @08,@PC00004                                        0397
         MVC   TSLEVER#(1,@03),DSCVER#(@08)                        0397
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS ALL RECORDS IN L1 AND L2 LOOKING FOR DEL SYSMODS      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0398
*   DO WHILE DSCRC=ZERO             /* PROCESS ENTIRE SELECT LIST    */
*         &DSCEOLST=OFF;            /*                               */
         B     @DE00398                                            0398
@DL00398 DS    0H                                                  0399
*     CALL HMASMTSB(TSLPARMS);      /* SEARCH FOR DEL TYPE           */
         L     @08,@PC00001                                        0399
         L     @08,TBLXTSLP(,@08)                                  0399
         ST    @08,@AL00001                                        0399
         L     @15,@CV01237                                        0399
         LA    @01,@AL00001                                        0399
         BALR  @14,@15                                             0399
*     TSLEONXT=ON;                  /* SET TO GET NEXT DELETE ENTRY  */
         L     @08,@PC00001                                        0400
         L     @08,TBLXTSLP(,@08)                                  0400
         L     @03,TSLPMLAD(,@08)                                  0400
         OI    TSLEONXT(@03),B'10000000'                           0400
*     IF TSLRETRN=TSLNTFND THEN     /* NOT FOUND ?                   */
         CLI   TSLRETRN(@08),4                                     0401
         BNE   @RF00401                                            0401
*       DO;                         /* YES,                          */
*         DSCEOLST=ON;              /* STOP THE SEARCH               */
         OI    DSCEOLST,B'10000000'                                0403
*       END;                        /*                               */
*     ELSE                          /* NOT FOUND                     */
*       DO;                         /*                               */
         B     @RC00401                                            0405
@RF00401 DS    0H                                                  0406
*         SELSTFLG=''B;             /* CLEAR FLAGS                   */
         L     @08,@PC00001                                        0406
         L     @03,TBLXSEGT(,@08)                                  0406
         L     @15,GTPBUFAD(,@03)                                  0406
         XC    SELSTFLG(2,@15),SELSTFLG(@15)                       0406
*         SESMD=ON;                 /* TYPE IS SYSMOD                */
         OI    SESMD(@15),B'00000001'                              0407
*         SENAME=TSLEFNDP->BASEDSMD;/* NAME IS FMID NAME             */
         MVI   SENAME+7(@15),C' '                                  0408
         L     @08,TBLXTSLP(,@08)                                  0408
         L     @08,TSLPMLAD(,@08)                                  0408
         L     @08,TSLEFNDP(,@08)                                  0408
         MVC   SENAME(7,@15),BASEDSMD(@08)                         0408
*         GTPFUNCT=GTPLOC;          /* DO THE LOCATE                 */
         MVI   GTPFUNCT(@03),X'03'                                 0409
*         CALL HMASMGTA(HMASMGTP);                                 0410
         ST    @03,@AL00001                                        0410
         L     @15,@CV01231                                        0410
         LA    @01,@AL00001                                        0410
         BALR  @14,@15                                             0410
*         IF GTPRETRN=GTPGOOD THEN  /* WAS THE FUNCTION FOUND?       */
         L     @08,@PC00001                                        0411
         L     @03,TBLXSEGT(,@08)                                  0411
         CLI   GTPRETRN(@03),0                                     0411
         BNE   @RF00411                                            0411
*           DO;                                                    0412
*             DSCRC=STOPSMD;        /* WE HAVE A LIVE DELETOR        */
*                                                                  0413
         LA    DSCRC,8                                             0413
*             /*******************************************************/
*             /*                                                     */
*             /* ISSUE MESSAGE HMA364I DELETE ERROR - SYSMOD XXXXXXX */
*             /* DELETES XXXXXXX BOTH OF WHICH ARE BEING XXXXXXXX    */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0414
*             DO;                   /* HMASMPMG M1(HMA364I)TYPE(ERR)V
*                                      AR(IOPNAM17,SENAME,TBLXFUND)TA
*                                      RGET(SYSOUT,LOG)              */
*               HMASMMGP=HMASMMGP&&HMASMMGP;/* SET PARMS TO ZEROS    */
         XC    HMASMMGP(28),HMASMMGP                               0415
*               MGPMGNO1=HMA364I;   /* SET UP MSG 1 CODE             */
         MVC   MGPMGNO1(2),@CH00791                                0416
*               MGPTYPE=MGPERR;     /* SET MESSAGE TYPE              */
         MVI   MGPTYPE,X'03'                                       0417
*               MGPPRINT='1'B;      /* SET TARGET FLAG               */
*               MGPHLDS='1'B;       /* SET TARGET FLAG               */
         OI    MGPPRINT,B'10010000'                                0419
*               MGPVARPT(1)=ADDR(IOPNAM17);/* SET VARIABLE PTR       */
         L     @15,@PC00004+4                                      0420
         LA    @15,IOPNAM17(,@15)                                  0420
         ST    @15,MGPVARPT                                        0420
*               MGPVARPT(2)=ADDR(SENAME);/* SET VARIABLE PTR         */
         L     @03,GTPBUFAD(,@03)                                  0421
         LA    @03,SENAME(,@03)                                    0421
         ST    @03,MGPVARPT+4                                      0421
*               MGPVARPT(3)=ADDR(TBLXFUND);/* SET VARIABLE PTR       */
         LA    @08,TBLXFUND(,@08)                                  0422
         ST    @08,MGPVARPT+8                                      0422
*               CALL HMASMMSG(HMASMMGP);/* HAVE MESSAGE ISSUED       */
         L     @15,@CV01230                                        0423
         LA    @01,@AL00423                                        0423
         BALR  @14,@15                                             0423
*             END;                  /*                               */
*           END;                                                   0425
*         ELSE                                                     0426
*           ;                       /* NOT IN SELECT LIST, CONTINUE
*                                      SEARCH WITH NEXT DELETED    0426
*                                      SYSMOD                        */
@RF00411 DS    0H                                                  0427
*       END;                                                       0427
*   END;                            /* END OF IOP DELETE SEARCH LOOP */
@RC00401 DS    0H                                                  0428
@DE00398 LTR   DSCRC,DSCRC                                         0428
         BNZ   @DC00398                                            0428
         TM    DSCEOLST,B'10000000'                                0428
         BZ    @DL00398                                            0428
@DC00398 DS    0H                                                  0429
*   RETURN CODE(DSCRC);             /* RETURN WITH THE RETURN CODE   */
         LR    @15,DSCRC                                           0429
         L     @14,@SA00004                                        0429
         LM    @00,@12,@SA00004+8                                  0429
         BR    @14                                                 0429
*   RFY                                                            0430
*     HMASMGTP BASED;                                              0430
*   RFY                                                            0431
*     HMASMSET BASED;                                              0431
*   RFY                                                            0432
*     TSLPARMS BASED;                                              0432
*   RFY                                                            0433
*     TSLPARMS BASED;                                              0433
*   END DELSELCK;                                                  0434
*   END DELSMD;                                                    0435
*                                                                  0436
*   /*****************************************************************/
*   /*                                                               */
*   /* F1BUILD - BUILD 1ST LEVEL FUNCTION ICT ENTRIES                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0436
*F1BUILD:                                                          0436
*   PROC;                                                          0436
F1BUILD  STM   @14,@12,@SA00005                                    0436
*   DCL                                                            0437
*     1 F1BFLAGS BIT(8),            /*                               */
*      2 F1BCMP BIT(1),             /* L1 BUILD COMPLETE (I.E. NO NEW
*                                      FUNCTIONS ADDED TO THE TABLE
*                                      IN THE LAST PASS THRU L1)     */
*      2 F1BL1END BIT(1),           /* END OF L1 ENCOUNTERRED IN SCL */
*      2 F1BSKIP BIT(1),            /* SKIP THIS SYSMOD              */
*      2 * BIT(5);                  /* UNUSED                        */
*   DCL                                                            0438
*     F1BRC FIXED(15);              /*                               */
*   DCL                                                            0439
*     F1BCKEY@ PTR(31);             /* PTR TO SCL KEY FOR CURRENT  0439
*                                      ENTRY                         */
*   DCL                                                            0440
*     F1BENTP PTR(31);              /* PTR TO ICT ENTRY FOR THE    0440
*                                      FUNCTION                      */
*   RFY                                                            0441
*     HMASMIOP BASED(CCAIOPTR);     /* EXTENDED IOP                  */
*   RFY                                                            0442
*     HMASMGTP BASED(TBLXSCGT);     /* GTP FOR SCL                   */
*   RFY                                                            0443
*     SCLMAP BASED(GTPBUFAD);       /* SCL IS IN GTP BUFFER          */
*   RFY                                                            0444
*     TSLPARMS BASED(TBLXTSLP);                                    0444
*   F1BRC=ZERO;                     /* CLEAR THE RETURN CODE         */
         SLR   F1BRC,F1BRC                                         0445
*   F1BFLAGS=''B;                   /* CLEAR LOCAL CONTROL FLAGS     */
         MVI   F1BFLAGS,X'00'                                      0446
*                                                                  0447
*/* NOTE THAT CANDIDATES IN L1 HAVE 1 AND ONLY 1 APPLICABLE ++VER    */
*                                                                  0447
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS ALL RECORDS IN THE SYSMOD CANDIDATE LIST UNTIL ALL    */
*   /* POSSIBLE CANDIDETES HAVE BEEN ADDED TO THE ICT. IF GROUP,     */
*   /* PROCESSING WILL CONTINUE UNTIL ALL POSSIBLE REQS HAVE BEEN    */
*   /* ADDED TO THE ICT                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0447
*   DO WHILE(F1BRC=ZERO             /* PROCESS UNTIL NO MORE       0447
*                                      FUNCTIONS ADDED               */
*         &F1BCMP=OFF);             /*                               */
         B     @DE00447                                            0447
@DL00447 DS    0H                                                  0448
*     F1BCMP=ON;                    /* ASSUME COMPLETION OF 1ST LEVEL
*                                      FUNC BUILD                    */
         OI    F1BCMP,B'10000000'                                  0448
*     F1BCKEY@=ZERO;                /* CURRENT SCL LIST PTR          */
*                                                                  0449
         SLR   @08,@08                                             0449
         ST    @08,F1BCKEY@                                        0449
*     /***************************************************************/
*     /*                                                             */
*     /* LOOP THRU LIST ONCE ADDING ALL POSSIBLE CANDIDATES          */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0450
*     F1BL1END=OFF;                 /* CLEAR END OF LIST FLAG        */
         NI    F1BL1END,B'10111111'                                0450
*     DO UNTIL(F1BL1END=ON          /* PASS THRU L1 LIST ONCE        */
*           ×F1BRC>STOPFUNC);       /*                               */
@DL00451 DS    0H                                                  0452
*       F1BSKIP=OFF;                /* ASSUME SYSMOD NOT TO BE     0452
*                                      SKIPPED                       */
         NI    F1BSKIP,B'11011111'                                 0452
*       CALL LOCNXT(HMASMIOP,SCLL1,F1BCKEY@);/*                      */
         MVC   @AL00001+4(8),@AL00453                              0453
         L     @08,CCAIOPTR(,CCAPTR)                               0453
         ST    @08,@AL00001                                        0453
         LA    @01,@AL00001                                        0453
         BAL   @14,LOCNXT                                          0453
*       RFY                                                        0454
*         RTNCODE RSTD;             /*                               */
*       IF RTNCODE=GTPEOF THEN      /* END OF FILE?                  */
         CH    RTNCODE,@CH00038                                    0455
         BNE   @RF00455                                            0455
*         DO;                       /* YES,                          */
*           F1BL1END=ON;            /* END OF L1 LIST                */
         OI    F1BL1END,B'01000000'                                0457
*         END;                      /*                               */
*       ELSE                        /* OTHER THAN NOT FOUND          */
*         DO;                                                      0459
         B     @RC00455                                            0459
@RF00455 DS    0H                                                  0460
*           F1BRC=MAX(F1BRC,RTNCODE);/* SAVE RC                      */
         CR    F1BRC,RTNCODE                                       0460
         BNL   *+6
         LR    F1BRC,RTNCODE                                       0460
*           RFY                                                    0461
*             RTNCODE UNRSTD;                                      0461
*         END;                                                     0462
*                                                                  0462
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK TO INSURE THAT CAN BE PUT ON                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0463
*       IF SCLCAND=ON               /* SYSMOD IS CANDIDATE           */
*           &F1BL1END=OFF           /* AND NOT END OF LIST           */
*           &F1BRC<STOPFUNC THEN    /* ++VER IS STILL GO?            */
@RC00455 L     @08,@PC00001                                        0463
         L     @02,TBLXSCGT(,@08)                                  0463
         L     @02,GTPBUFAD(,@02)                                  0463
         TM    SCLCAND(@02),B'00100000'                            0463
         BNO   @RF00463                                            0463
         TM    F1BL1END,B'01000000'                                0463
         BNZ   @RF00463                                            0463
         CH    F1BRC,@CH00033                                      0463
         BNL   @RF00463                                            0463
*         DO;                       /* YES,                          */
*           TSLICTSR=''B;           /* CLEAR PARMLIST                */
         L     @08,TBLXTSLP(,@08)                                  0465
         L     @15,TSLPMLAD(,@08)                                  0465
         XC    TSLICTSR(14,@15),TSLICTSR(@15)                      0465
*           TSLFUNCT=TSLFISRH;      /* SEARCH TO SEE IF SYSMOD ...   */
         MVI   TSLFUNCT(@08),X'01'                                 0466
*           TSLISMD=SCLSMD;         /* ... ALREADY IN THE ICT        */
         MVC   TSLISMD(7,@15),SCLSMD(@02)                          0467
*           CALL HMASMTSB(TSLPARMS);                               0468
         ST    @08,@AL00001                                        0468
         L     @15,@CV01237                                        0468
         LA    @01,@AL00001                                        0468
         BALR  @14,@15                                             0468
*           IF TSLIOK=ON            /* FOUND OK                      */
*               ×TSLISUP=ON         /* ... OR SUP'ED?                */
*             THEN                                                 0469
         L     @08,@PC00001                                        0469
         L     @08,TBLXTSLP(,@08)                                  0469
         L     @08,TSLPMLAD(,@08)                                  0469
         TM    TSLIOK(@08),B'01100000'                             0469
         BZ    @RF00469                                            0469
*             DO;                                                  0470
*               F1BSKIP=ON;         /* SKIP THE SYSMOD               */
         OI    F1BSKIP,B'00100000'                                 0471
*             END;                                                 0472
*           IF F1BRC<STOPSMD        /* ALL IS WELL ...               */
*               &F1BSKIP=OFF THEN   /* ... AND NOT SKIPPING          */
@RF00469 LA    @08,8                                               0473
         CR    F1BRC,@08                                           0473
         BNL   @RF00473                                            0473
         TM    F1BSKIP,B'00100000'                                 0473
         BNZ   @RF00473                                            0473
*             DO;                                                  0474
*               IF F1BRC<STOPSMD    /* STILL PROCESSING SYSMOD?      */
*                   &F1BSKIP=OFF THEN/*                              */
         CR    F1BRC,@08                                           0475
         BNL   @RF00475                                            0475
         TM    F1BSKIP,B'00100000'                                 0475
         BNZ   @RF00475                                            0475
*                 DO;                                              0476
*                                                                  0476
*                   /*************************************************/
*                   /*                                               */
*                   /* CHECK FOR FUNCTION BEING SUPERCEEDED          */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0477
*                   CALL SUPCK(LEVEL1,SCLMAP,HMASMIOP,F1SUPN);     0477
         LA    @08,@CC01106                                        0477
         ST    @08,@AL00001                                        0477
         L     @08,@PC00001                                        0477
         L     @08,TBLXSCGT(,@08)                                  0477
         L     @08,GTPBUFAD(,@08)                                  0477
         ST    @08,@AL00001+4                                      0477
         L     @08,CCAIOPTR(,CCAPTR)                               0477
         ST    @08,@AL00001+8                                      0477
         LA    @08,F1SUPN                                          0477
         ST    @08,@AL00001+12                                     0477
         LA    @01,@AL00001                                        0477
         BAL   @14,SUPCK                                           0477
*                   RFY                                            0478
*                     RTNCODE RSTD;                                0478
*                   IF RTNCODE=STOPSMD THEN/* SUPED BY ICT SYSMOD?   */
         CH    RTNCODE,@CH00056                                    0479
         BNE   @RF00479                                            0479
*                     DO;           /* YES,                          */
*                       F1BSKIP=ON; /* THEN SKIP SYSMOD              */
         OI    F1BSKIP,B'00100000'                                 0481
*                       RFY                                        0482
*                         RTNCODE UNRSTD;                          0482
*                     END;                                         0483
*                 END;                                             0484
*                                                                  0484
@RF00479 DS    0H                                                  0485
*               /*****************************************************/
*               /*                                                   */
*               /* NOW HAVE AN APPLICABLE 1ST LEVEL FUNCTION. IF IT  */
*               /* FAILS AFTER THIS POINT, THE SMP FUNCTION WILL BE  */
*               /* FAILED                                            */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0485
*               IF F1BRC<STOPSMD    /* STILL PROCESSING SYSMOD?      */
*                   &F1BSKIP=OFF THEN/*                              */
@RF00475 CH    F1BRC,@CH00056                                      0485
         BNL   @RF00485                                            0485
         TM    F1BSKIP,B'00100000'                                 0485
         BNZ   @RF00485                                            0485
*                 DO;                                              0486
*                   CALL SELFND(SCLSMD);/* MARK SELECT LIST ENTRY SO
*                                      THAT SELECTED SYSMOD NOT    0487
*                                      PROCESSED MESSAGE NOT ISSUED  */
         L     @08,@PC00001                                        0487
         L     @08,TBLXSCGT(,@08)                                  0487
         L     @08,GTPBUFAD(,@08)                                  0487
         LA    @08,SCLSMD(,@08)                                    0487
         ST    @08,@AL00001                                        0487
         LA    @01,@AL00001                                        0487
         BAL   @14,SELFND                                          0487
*                   CALL VERBLD(LEVEL1,HMASMIOP,SCLMAP,F1BENTP);/*   */
         LA    @08,@CC01106                                        0488
         ST    @08,@AL00001                                        0488
         L     @08,CCAIOPTR(,CCAPTR)                               0488
         ST    @08,@AL00001+4                                      0488
         L     @08,@PC00001                                        0488
         L     @08,TBLXSCGT(,@08)                                  0488
         L     @08,GTPBUFAD(,@08)                                  0488
         ST    @08,@AL00001+8                                      0488
         LA    @08,F1BENTP                                         0488
         ST    @08,@AL00001+12                                     0488
         LA    @01,@AL00001                                        0488
         BAL   @14,VERBLD                                          0488
*                   RFY                                            0489
*                     RTNCODE RSTD;                                0489
*                   F1BRC=MAX(F1BRC,RTNCODE);/* SAVE RC              */
         CR    F1BRC,RTNCODE                                       0490
         BNL   *+6
         LR    F1BRC,RTNCODE                                       0490
*                   IF RTNCODE=ZERO THEN/* ALL IS WELL?              */
         LTR   RTNCODE,RTNCODE                                     0491
         BNZ   @RF00491                                            0491
*                     DO;           /* YES,                          */
*                       F1BCMP=OFF;                                0493
         NI    F1BCMP,B'01111111'                                  0493
*                       F1BENTP->ICTPSUPN(1)=F1SUPN;/* SUP COUNT     */
         L     @14,F1BENTP                                         0494
         MVC   ICTPSUPN(2,@14),F1SUPN                              0494
*                     END;                                         0495
*                   RFY                                            0496
*                     RTNCODE UNRSTD;                              0496
@RF00491 DS    0H                                                  0497
*                 END;              /*                               */
*             END;                  /*                               */
*         END;                      /*                               */
*       ELSE                                                       0500
*         ;                         /*                               */
@RF00463 DS    0H                                                  0501
*       IF F1BRC=STOPSMD THEN       /* FUNCTION FAILED?              */
@RC00463 CH    F1BRC,@CH00056                                      0501
         BNE   @RF00501                                            0501
*         DO;                       /* YES,                          */
*           F1BRC=STOPFUNC;         /* STOP THE FUNCTION             */
         LA    F1BRC,12                                            0503
*           CALL FUNCFM(SCLSMD);    /* ISSUE SMP FUNCTION FAILED MSG */
         L     @08,@PC00001                                        0504
         L     @08,TBLXSCGT(,@08)                                  0504
         L     @08,GTPBUFAD(,@08)                                  0504
         LA    @08,SCLSMD(,@08)                                    0504
         ST    @08,@AL00001                                        0504
         LA    @01,@AL00001                                        0504
         BAL   @14,FUNCFM                                          0504
*         END;                      /*                               */
*       ELSE                                                       0506
*         ;                         /* NOT A STOP FUNCTION           */
@RF00501 DS    0H                                                  0507
*     END;                          /* END OF PASS THRU L1 LIST      */
@DE00451 TM    F1BL1END,B'01000000'                                0507
         BO    @DC00451                                            0507
         CH    F1BRC,@CH00033                                      0507
         BNH   @DL00451                                            0507
@DC00451 DS    0H                                                  0508
*     IF F1BRC<STOPFUNC THEN        /* ALL IS WELL?                  */
         CH    F1BRC,@CH00033                                      0508
         BNL   @RF00508                                            0508
*       DO;                                                        0509
*                                                                  0509
*         /***********************************************************/
*         /*                                                         */
*         /* ADD IF REQ INDEX LISTS TO ALL ICT PTF ENTRIES JUST      */
*         /* CREATED                                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0510
*         CALL ADDIFS;              /*                               */
         BAL   @14,ADDIFS                                          0510
*         RFY                                                      0511
*           RTNCODE RSTD;                                          0511
*         F1BRC=MAX(F1BRC,RTNCODE);                                0512
         CR    F1BRC,RTNCODE                                       0512
         BNL   *+6
         LR    F1BRC,RTNCODE                                       0512
*         RFY                                                      0513
*           RTNCODE UNRSTD;                                        0513
*                                                                  0513
*         /***********************************************************/
*         /*                                                         */
*         /* IF GROUP, ... CLEAR THIS PASS FLAGS                     */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0514
*         IF F1BRC<STOPFUNC THEN    /* ALL IS WELL?                  */
         CH    F1BRC,@CH00033                                      0514
         BNL   @RF00514                                            0514
*           DO;                                                    0515
*             CALL GROUPADD;                                       0516
         BAL   @14,GROUPADD                                        0516
*           END;                                                   0517
*         IF F1BRC<STOPFUNC THEN    /* ALL IS WELL?                  */
@RF00514 CH    F1BRC,@CH00033                                      0518
         BNL   @RF00518                                            0518
*           DO;                                                    0519
*             TSLFUNCT=TSLFCLRP;    /* CLEAR PASS FLAGS IN THE ICT   */
         L     @08,@PC00001                                        0520
         L     @08,TBLXTSLP(,@08)                                  0520
         MVI   TSLFUNCT(@08),X'05'                                 0520
*             CALL HMASMTSB(TSLPARMS);                             0521
         ST    @08,@AL00001                                        0521
         L     @15,@CV01237                                        0521
         LA    @01,@AL00001                                        0521
         BALR  @14,@15                                             0521
*           END;                                                   0522
*       END;                                                       0523
@RF00518 DS    0H                                                  0524
*   END;                            /* END OF 1ST LEVEL FUNCTION   0524
*                                      BUILD LOOP                    */
@RF00508 DS    0H                                                  0524
@DE00447 LTR   F1BRC,F1BRC                                         0524
         BNZ   @DC00447                                            0524
         TM    F1BCMP,B'10000000'                                  0524
         BZ    @DL00447                                            0524
@DC00447 DS    0H                                                  0525
*   RETURN CODE(F1BRC);             /* RETURN WITH THE RETURN CODE   */
         LR    @15,F1BRC                                           0525
         L     @14,@SA00005                                        0525
         LM    @00,@12,@SA00005+8                                  0525
         BR    @14                                                 0525
*   RFY                                                            0526
*     HMASMIOP BASED;                                              0526
*   RFY                                                            0527
*     HMASMGTP BASED;                                              0527
*   RFY                                                            0528
*     SCLMAP BASED;                                                0528
*   RFY                                                            0529
*     TSLPARMS BASED;                                              0529
*   END F1BUILD;                    /*                               */
*                                                                  0531
*   /*****************************************************************/
*   /*                                                               */
*   /* F2BUILD - BUILD ICT FOR SECOND LEVEL FUNCTIONS                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0531
*F2BUILD:                                                          0531
*   PROC;                                                          0531
F2BUILD  STM   @14,@12,@SA00006                                    0531
*   DCL                                                            0532
*     1 F2BFLAGS BIT(8),            /*                               */
*      2 F2BCMP BIT(1),             /* L2 BUILD COMPLETE (I.E. NO NEW
*                                      FUNCTIONS ADDED TO THE TABLE
*                                      IN THE LAST PASS THRU L2)     */
*      2 F2BL2END BIT(1),           /* END OF L2 ENCOUNTERRED IN SCL */
*      2 F2BSKIP BIT(1),            /* SKIP THIS SYSMOD              */
*      2 F2BGET BIT(1),             /* GET NEXT RECORD FROM SCL GTA
*                                      FILE                          */
*      2 * BIT(4);                  /* UNUSED                        */
*   DCL                                                            0533
*     F2BRC FIXED(15);              /*                               */
*   DCL                                                            0534
*     F2BCKEY@ PTR(31);             /* PTR TO SCL KEY FOR CURRENT  0534
*                                      ENTRY                         */
*   DCL                                                            0535
*     F2BENTP PTR(31);              /* PTR TO ICT ENTRY CREATED THE
*                                      CURRENT SYSMOD BEING PROCESSED*/
*   DCL                                                            0536
*     F2BSCL CHAR(LENGTH(SCLMAP));  /* SCL RECORD GOTTEN BY GETNLSMD */
*   RFY                                                            0537
*     HMASMIOP BASED(CCAIOPTR);     /* EXTENDED IOP                  */
*   RFY                                                            0538
*     HMASMGTP BASED(TBLXSCGT);     /* GTP FOR SCL                   */
*   RFY                                                            0539
*     SCLMAP BASED(GTPBUFAD);       /* SCL IS IN GTP BUFFER          */
*   RFY                                                            0540
*     TSLPARMS BASED(TBLXTSLP);                                    0540
*   F2BRC=ZERO;                     /* CLEAR THE RETURN CODE         */
         SLR   F2BRC,F2BRC                                         0541
*   F2BFLAGS=''B;                   /* CLEAR LOCAL CONTROL FLAGS     */
         MVI   F2BFLAGS,X'00'                                      0542
*   DO WHILE(F2BRC<STOPFUNC         /* PROCESS UNTIL NO MORE       0543
*                                      FUNCTIONS ADDED               */
*         &F2BCMP=OFF);             /*                               */
         B     @DE00543                                            0543
@DL00543 DS    0H                                                  0544
*     F2BCMP=ON;                    /* ASSUME COMPLETION OF 1ST LEVEL
*                                      FUNC BUILD                    */
         OI    F2BCMP,B'10000000'                                  0544
*     F2BCKEY@=ZERO;                /* CURRENT SCL LIST PTR          */
         SLR   @08,@08                                             0545
         ST    @08,F2BCKEY@                                        0545
*     F2BGET=ON;                    /* GET NEXT SCL RECORD           */
*     F2BL2END=OFF;                 /* CLEAR END OF L2 LIST FLAG     */
         OI    F2BGET,B'00010000'                                  0547
         NI    F2BL2END,B'10111111'                                0547
*     DO UNTIL(F2BL2END=ON          /* PASS THRU L2 LIST ONCE        */
*           ×F2BRC=>STOPFUNC);      /*                               */
@DL00548 DS    0H                                                  0549
*       F2BSKIP=OFF;                /* SKIP THE SYSMOD               */
         NI    F2BSKIP,B'11011111'                                 0549
*       IF F2BGET=ON THEN           /* GET NEXT RECORD?              */
         TM    F2BGET,B'00010000'                                  0550
         BNO   @RF00550                                            0550
*         DO;                                                      0551
*           CALL GETNLSMD(SCLL2,F2BCKEY@,F2BSCL);/* GET NEXT RECORD
*                                      FROM SCL FOR L2               */
         LA    @01,@AL00552                                        0552
         BAL   @14,GETNLSMD                                        0552
*           RFY                                                    0553
*             RTNCODE RSTD;         /*                               */
*         END;                                                     0554
*       ELSE                        /* NO NEED TO GET NEXT SCL RECORD*/
*         DO;                                                      0555
         B     @RC00550                                            0555
@RF00550 DS    0H                                                  0556
*           RTNCODE=GTPRETRN;       /* USE RETURN CODE FORM PREVIOUS
*                                      GETN                          */
         L     @08,@PC00001                                        0556
         L     @08,TBLXSCGT(,@08)                                  0556
         SLR   RTNCODE,RTNCODE                                     0556
         IC    RTNCODE,GTPRETRN(,@08)                              0556
*           F2BSCL=SCLMAP;          /* SET RECORD TO PREVIOUSLY    0557
*                                      GOTTEN ONE                    */
         L     @14,GTPBUFAD(,@08)                                  0557
         MVC   F2BSCL(17),SCLMAP(@14)                              0557
*         END;                                                     0558
*       IF RTNCODE=GTPEOF THEN      /* END OF FILE?                  */
@RC00550 CH    RTNCODE,@CH00038                                    0559
         BNE   @RF00559                                            0559
*         DO;                       /* YES,                          */
*           RFY                                                    0561
*             RTNCODE UNRSTD;                                      0561
*           F2BL2END=ON;            /* END OF L2 LIST                */
*           F2BSKIP=ON;             /* SKIP THE ++VER                */
         OI    F2BL2END,B'01100000'                                0563
*         END;                      /*                               */
*       F2BGET=ON;                  /* RESET GET NEXT RECORD FLAG    */
*                                                                  0565
@RF00559 OI    F2BGET,B'00010000'                                  0565
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK TO SEE IF THE SYSMOD IS ALREADY IN THE ICT. IF SO,  */
*       /* SKIP PROCESSING IT.                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0566
*       IF SCLCAND=ON               /* SYSMOD IS CANDIDATE           */
*           &F2BSKIP=OFF            /* AND NOT TO BE SKIPED          */
*           &F2BRC<STOPSMD THEN     /* ++VER IS STILL GO?            */
         L     @08,@PC00001                                        0566
         L     @02,TBLXSCGT(,@08)                                  0566
         L     @02,GTPBUFAD(,@02)                                  0566
         TM    SCLCAND(@02),B'00100000'                            0566
         BNO   @RF00566                                            0566
         TM    F2BSKIP,B'00100000'                                 0566
         BNZ   @RF00566                                            0566
         CH    F2BRC,@CH00056                                      0566
         BNL   @RF00566                                            0566
*         DO;                       /* YES,                          */
*           TSLICTSR=''B;           /* CLEAR PARMLIST                */
         L     @08,TBLXTSLP(,@08)                                  0568
         L     @15,TSLPMLAD(,@08)                                  0568
         XC    TSLICTSR(14,@15),TSLICTSR(@15)                      0568
*           TSLFUNCT=TSLFISRH;      /* SEARCH TO SEE IF SYSMOD ...   */
         MVI   TSLFUNCT(@08),X'01'                                 0569
*           TSLISMD=SCLSMD;         /* ... ALREADY IN THE ICT        */
         MVC   TSLISMD(7,@15),SCLSMD(@02)                          0570
*           CALL HMASMTSB(TSLPARMS);                               0571
         ST    @08,@AL00001                                        0571
         L     @15,@CV01237                                        0571
         LA    @01,@AL00001                                        0571
         BALR  @14,@15                                             0571
*           IF TSLIOK=ON            /* FOUND OK                      */
*               ×TSLISUP=ON         /* ... OR SUP'ED?                */
*             THEN                                                 0572
         L     @08,@PC00001                                        0572
         L     @08,TBLXTSLP(,@08)                                  0572
         L     @08,TSLPMLAD(,@08)                                  0572
         TM    TSLIOK(@08),B'01100000'                             0572
         BZ    @RF00572                                            0572
*             DO;                                                  0573
*               F2BSKIP=ON;         /* SKIP THE SYSMOD               */
         OI    F2BSKIP,B'00100000'                                 0574
*             END;                                                 0575
*         END;                                                     0576
*       ELSE                        /* NOT A CANDIDATE OR ERROR      */
*         DO;                                                      0577
         B     @RC00566                                            0577
@RF00566 DS    0H                                                  0578
*           F2BSKIP=ON;             /* SKIP THE VER                  */
         OI    F2BSKIP,B'00100000'                                 0578
*         END;                                                     0579
*       IF F2BRC<STOPSMD            /* ALL IS WELL?                  */
*           &F2BSKIP=OFF THEN       /* AND ^ SKIP ?                  */
@RC00566 CH    F2BRC,@CH00056                                      0580
         BNL   @RF00580                                            0580
         TM    F2BSKIP,B'00100000'                                 0580
         BNZ   @RF00580                                            0580
*         DO;                       /* YES,                          */
*                                                                  0581
*           /*********************************************************/
*           /*                                                       */
*           /* DETERMINE APPLICABILITY OF ++VER, I.E. THE SYSMOD IS  */
*           /* FMID'ED SYMOD ON THE SYSTEM OR ICT                    */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0582
*           CALL APPLVER(SCLMAP);   /* DETERMINE APPLICABLILITY OF 0582
*                                      THIS ++VER                    */
         L     @08,@PC00001                                        0582
         L     @08,TBLXSCGT(,@08)                                  0582
         L     @08,GTPBUFAD(,@08)                                  0582
         ST    @08,@AL00001                                        0582
         LA    @01,@AL00001                                        0582
         BAL   @14,APPLVER                                         0582
*           RFY                                                    0583
*             RTNCODE RSTD;                                        0583
*           IF RTNCODE^=ZERO THEN   /* IS THIS VER APPLICABLE?       */
         LTR   RTNCODE,RTNCODE                                     0584
         BZ    @RF00584                                            0584
*             DO;                                                  0585
*               F2BSKIP=ON;         /* SKIP THIS ++VER               */
         OI    F2BSKIP,B'00100000'                                 0586
*               IF RTNCODE>TSLNTFND THEN/* ERROR?                    */
         CH    RTNCODE,@CH00038                                    0587
         BNH   @RF00587                                            0587
*                 DO;               /* YES,                          */
*                   F2BRC=MAX(F2BRC,RTNCODE);/* SAVE THE RETURN CODE */
         CR    F2BRC,RTNCODE                                       0589
         BNL   *+6
         LR    F2BRC,RTNCODE                                       0589
*                 END;                                             0590
*               RFY                                                0591
*                 RTNCODE UNRSTD;                                  0591
@RF00587 DS    0H                                                  0592
*             END;                                                 0592
*           ELSE                                                   0593
*             DO;                                                  0593
         B     @RC00584                                            0593
@RF00584 DS    0H                                                  0594
*               CALL SELFND(SCLSMD);/* MARK SELECT LIST ENTRY SO THAT
*                                      SELECTED SYSMOD NOT PROCESSED
*                                      MESSAGE NOT ISSUED            */
*                                                                  0594
         L     @08,@PC00001                                        0594
         L     @08,TBLXSCGT(,@08)                                  0594
         L     @08,GTPBUFAD(,@08)                                  0594
         LA    @08,SCLSMD(,@08)                                    0594
         ST    @08,@AL00001                                        0594
         LA    @01,@AL00001                                        0594
         BAL   @14,SELFND                                          0594
*               /*****************************************************/
*               /*                                                   */
*               /* CHECK FOR AMBIGUOUS VER                           */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0595
*               CALL AMBIGCK(SCLMAP);                              0595
         L     @08,@PC00001                                        0595
         L     @08,TBLXSCGT(,@08)                                  0595
         L     @08,GTPBUFAD(,@08)                                  0595
         ST    @08,@AL00001                                        0595
         LA    @01,@AL00001                                        0595
         BAL   @14,AMBIGCK                                         0595
*               RFY                                                0596
*                 RTNCODE RSTD;                                    0596
*               F2BGET=OFF;         /* DO NOT GET NEXT SCL RECORD  0597
*                                      SINCE AMBIGCK ALREADY GOT IT  */
         NI    F2BGET,B'11101111'                                  0597
*               F2BRC=MAX(F2BRC,RTNCODE);/* SAVE RETURN CODE         */
         CR    F2BRC,RTNCODE                                       0598
         BNL   *+6
         LR    F2BRC,RTNCODE                                       0598
*               RFY                                                0599
*                 RTNCODE UNRSTD;                                  0599
*             END;                                                 0600
*         END;                                                     0601
@RC00584 DS    0H                                                  0602
*       RFY                                                        0602
*         SCLMAP BASED(ADDR(F2BSCL));                              0602
@RF00580 DS    0H                                                  0603
*       IF F2BRC<STOPSMD            /* SYSMOD IS GO?                 */
*           &F2BSKIP=OFF THEN       /* ...                           */
         CH    F2BRC,@CH00056                                      0603
         BNL   @RF00603                                            0603
         TM    F2BSKIP,B'00100000'                                 0603
         BNZ   @RF00603                                            0603
*         DO;                                                      0604
*                                                                  0604
*           /*********************************************************/
*           /*                                                       */
*           /* GET PTS EXTENDED ENTRY                                */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0605
*           CALL GETSMD(HMASMIOP,SCLSMD);                          0605
         L     @08,CCAIOPTR(,CCAPTR)                               0605
         ST    @08,@AL00001                                        0605
         LA    @08,F2BSCL                                          0605
         LA    @08,SCLSMD(,@08)                                    0605
         ST    @08,@AL00001+4                                      0605
         LA    @01,@AL00001                                        0605
         BAL   @14,GETSMD                                          0605
*           RFY                                                    0606
*             RTNCODE RSTD;                                        0606
*           F2BRC=MAX(F2BRC,RTNCODE);/* SAVE BUILD RETURN CODE       */
         CR    F2BRC,RTNCODE                                       0607
         BNL   *+6
         LR    F2BRC,RTNCODE                                       0607
*           RFY                                                    0608
*             RTNCODE UNRSTD;                                      0608
*           IF F2BRC<STOPSMD        /* STILL PROCESSING SYSMOD?      */
*               &F2BSKIP=OFF THEN   /*                               */
         CH    F2BRC,@CH00056                                      0609
         BNL   @RF00609                                            0609
         TM    F2BSKIP,B'00100000'                                 0609
         BNZ   @RF00609                                            0609
*             DO;                                                  0610
*                                                                  0610
*               /*****************************************************/
*               /*                                                   */
*               /* CHECK FOR SUP ERROR                               */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0611
*               CALL SUPCK(LEVEL2,SCLMAP,HMASMIOP,F2SUPN);         0611
         LA    @08,@CC01108                                        0611
         ST    @08,@AL00001                                        0611
         LA    @08,F2BSCL                                          0611
         ST    @08,@AL00001+4                                      0611
         L     @08,CCAIOPTR(,CCAPTR)                               0611
         ST    @08,@AL00001+8                                      0611
         LA    @08,F2SUPN                                          0611
         ST    @08,@AL00001+12                                     0611
         LA    @01,@AL00001                                        0611
         BAL   @14,SUPCK                                           0611
*               RFY                                                0612
*                 RTNCODE RSTD;                                    0612
*               F2BRC=MAX(F2BRC,RTNCODE);/* SAVE RETURN CODE         */
         CR    F2BRC,RTNCODE                                       0613
         BNL   *+6
         LR    F2BRC,RTNCODE                                       0613
*               IF RTNCODE=STOPSMD THEN/* SUPED BY ICT SYSMOD?       */
         CH    RTNCODE,@CH00056                                    0614
         BNE   @RF00614                                            0614
*                 DO;               /* YES,                          */
*                   F2BSKIP=ON;     /* THEN SKIP SYSMOD              */
         OI    F2BSKIP,B'00100000'                                 0616
*                   RFY                                            0617
*                     RTNCODE UNRSTD;                              0617
*                 END;                                             0618
*             END;                                                 0619
@RF00614 DS    0H                                                  0620
*           IF F2BRC<STOPSMD        /* STILL PROCESSING SYSMOD?      */
*               &F2BSKIP=OFF THEN   /*                               */
@RF00609 CH    F2BRC,@CH00056                                      0620
         BNL   @RF00620                                            0620
         TM    F2BSKIP,B'00100000'                                 0620
         BNZ   @RF00620                                            0620
*             DO;                                                  0621
*                                                                  0621
*               /*****************************************************/
*               /*                                                   */
*               /* DO DELETE, NPRE CHECKING AND BUILD ICT PTR ENTRY  */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0622
*               CALL VERBLD(LEVEL2,HMASMIOP,SCLMAP,F2BENTP);/*       */
         LA    @08,@CC01108                                        0622
         ST    @08,@AL00001                                        0622
         L     @08,CCAIOPTR(,CCAPTR)                               0622
         ST    @08,@AL00001+4                                      0622
         LA    @08,F2BSCL                                          0622
         ST    @08,@AL00001+8                                      0622
         LA    @08,F2BENTP                                         0622
         ST    @08,@AL00001+12                                     0622
         LA    @01,@AL00001                                        0622
         BAL   @14,VERBLD                                          0622
*               RFY                                                0623
*                 RTNCODE RSTD;                                    0623
*               F2BRC=MAX(F2BRC,RTNCODE);/* SAVE BUILD RETURN CODE   */
         CR    F2BRC,RTNCODE                                       0624
         BNL   *+6
         LR    F2BRC,RTNCODE                                       0624
*               IF RTNCODE=ZERO THEN/* ALL IS WELL?                  */
         LTR   RTNCODE,RTNCODE                                     0625
         BNZ   @RF00625                                            0625
*                 DO;               /* YES,                          */
*                   RFY                                            0627
*                     RTNCODE UNRSTD;                              0627
*                   F2BCMP=OFF;                                    0628
         NI    F2BCMP,B'01111111'                                  0628
*                   F2BENTP->ICTPSUPN(1)=F2SUPN;/* SUP COUNT         */
         L     @08,F2BENTP                                         0629
         MVC   ICTPSUPN(2,@08),F2SUPN                              0629
*                 END;                                             0630
*             END;                                                 0631
*         END;                                                     0632
*       ELSE                                                       0633
*         ;                         /* SYSMOD FAILED OR ++VER IS   0633
*                                      SKIPPED                       */
@RF00603 DS    0H                                                  0634
*       IF F2BRC=STOPSMD THEN       /* FUNCTION FAILED?              */
@RC00603 CH    F2BRC,@CH00056                                      0634
         BNE   @RF00634                                            0634
*         DO;                       /* YES,                          */
*           F2BRC=STOPFUNC;         /* STOP THE FUNCTION             */
         LA    F2BRC,12                                            0636
*           CALL FUNCFM(SCLSMD);    /* ISSUE SMP FUNCTION FAIL     0637
*                                      MESSAGE                       */
         LA    @08,F2BSCL                                          0637
         LA    @08,SCLSMD(,@08)                                    0637
         ST    @08,@AL00001                                        0637
         LA    @01,@AL00001                                        0637
         BAL   @14,FUNCFM                                          0637
*         END;                      /*                               */
*       ELSE                                                       0639
*         ;                         /* NOT A STOP FUNCTION           */
@RF00634 DS    0H                                                  0640
*     END;                          /* END OF PASS THRU L2 LIST      */
@DE00548 TM    F2BL2END,B'01000000'                                0640
         BO    @DC00548                                            0640
         CH    F2BRC,@CH00033                                      0640
         BL    @DL00548                                            0640
@DC00548 DS    0H                                                  0641
*     IF F2BRC<STOPFUNC THEN        /* ALL IS WELL?                  */
         CH    F2BRC,@CH00033                                      0641
         BNL   @RF00641                                            0641
*       DO;                                                        0642
*                                                                  0642
*         /***********************************************************/
*         /*                                                         */
*         /* ADD IF REQ INDEX LISTS TO ALL ICT PTF ENTRIES JUST      */
*         /* CREATED                                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0643
*         CALL ADDIFS;              /*                               */
         BAL   @14,ADDIFS                                          0643
*         RFY                                                      0644
*           RTNCODE RSTD;                                          0644
*         F2BRC=MAX(F2BRC,RTNCODE);                                0645
         CR    F2BRC,RTNCODE                                       0645
         BNL   *+6
         LR    F2BRC,RTNCODE                                       0645
*         RFY                                                      0646
*           RTNCODE UNRSTD;                                        0646
*                                                                  0646
*         /***********************************************************/
*         /*                                                         */
*         /* IF GROUP, ADD CANDIDATES AND CLEAR PASS FILAGS          */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0647
*         IF F2BRC<STOPFUNC THEN    /* ALL IS WELL?                  */
         CH    F2BRC,@CH00033                                      0647
         BNL   @RF00647                                            0647
*           DO;                                                    0648
*             CALL GROUPADD;                                       0649
         BAL   @14,GROUPADD                                        0649
*           END;                                                   0650
*         IF F2BRC<STOPFUNC THEN    /* ALL IS WELL?                  */
@RF00647 CH    F2BRC,@CH00033                                      0651
         BNL   @RF00651                                            0651
*           DO;                                                    0652
*             TSLFUNCT=TSLFCLRP;    /* CLEAR PASS FLAGS IN THE ICT   */
         L     @08,@PC00001                                        0653
         L     @08,TBLXTSLP(,@08)                                  0653
         MVI   TSLFUNCT(@08),X'05'                                 0653
*             CALL HMASMTSB(TSLPARMS);                             0654
         ST    @08,@AL00001                                        0654
         L     @15,@CV01237                                        0654
         LA    @01,@AL00001                                        0654
         BALR  @14,@15                                             0654
*           END;                                                   0655
*       END;                                                       0656
@RF00651 DS    0H                                                  0657
*   END;                            /* END OF 1ST LEVEL FUNCTION   0657
*                                      BUILD LOOP                    */
@RF00641 DS    0H                                                  0657
@DE00543 CH    F2BRC,@CH00033                                      0657
         BNL   @DC00543                                            0657
         TM    F2BCMP,B'10000000'                                  0657
         BZ    @DL00543                                            0657
@DC00543 DS    0H                                                  0658
*   RETURN CODE(F2BRC);             /* RETURN WITH THE RETURN CODE   */
         LR    @15,F2BRC                                           0658
         L     @14,@SA00006                                        0658
         LM    @00,@12,@SA00006+8                                  0658
         BR    @14                                                 0658
*   RFY                                                            0659
*     HMASMIOP BASED;                                              0659
*   RFY                                                            0660
*     HMASMGTP BASED;                                              0660
*   RFY                                                            0661
*     SCLMAP BASED;                                                0661
*   RFY                                                            0662
*     TSLPARMS BASED;                                              0662
*   END F2BUILD;                    /*                               */
*                                                                  0664
*   /*****************************************************************/
*   /*                                                               */
*   /* SRVBUILD - BUILD ICT ENTRIES FOR PTFS APARS AND USERMODS      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0664
*SRVBUILD:                                                         0664
*   PROC;                                                          0664
SRVBUILD STM   @14,@12,@SA00007                                    0664
*   DCL                                                            0665
*     1 SRVFLAGS BIT(8),            /*                               */
*      2 SRVCMP BIT(1),             /* BUILD COMPLETE (I.E. NO NEW 0665
*                                      SERVICE ADDED TO THE TABLE IN
*                                      THE LAST PASS THRU L3,L4,L5)  */
*      2 SRVEND BIT(1),             /* END OF SERVICE ENCOUNTERRED IN
*                                      SCL                           */
*      2 SRVSKIP BIT(1),            /* SKIP THIS SYSMOD              */
*      2 SRVGET BIT(1),             /* GET NEXT RECORD FROM SCL GTA
*                                      FILE                          */
*      2 SRVREC BIT(1),             /* RECORD FOUND IN SCL GTA FILE
*                                      FOR A SERVICE SYSMOD          */
*      2 * BIT(3);                  /* UNUSED                        */
*   DCL                                                            0666
*     SRVRC FIXED(15);              /*                               */
*   DCL                                                            0667
*     SRVCKEY@ PTR(31);             /* PTR TO SCL KEY FOR CURRENT  0667
*                                      ENTRY                         */
*   DCL                                                            0668
*     SRVENTP PTR(31);              /* PTR TO ICT ENTRY CREATED THE
*                                      CURRENT SYSMOD BEING PROCESSED*/
*   DCL                                                            0669
*     SRVSCL CHAR(LENGTH(SCLMAP));  /* SCL RECORD GOTTEN BY GETNLSMD */
*   DCL                                                            0670
*     SRVLISTX FIXED(15);           /* INDEX OF CURRENT SERVICE LIST */
*   RFY                                                            0671
*     HMASMIOP BASED(CCAIOPTR);     /* EXTENDED IOP                  */
*   RFY                                                            0672
*     HMASMGTP BASED(TBLXSCGT);     /* GTP FOR SCL                   */
*   RFY                                                            0673
*     SCLMAP BASED(GTPBUFAD);       /* SCL IS IN GTP BUFFER          */
*   RFY                                                            0674
*     TSLPARMS BASED(TBLXTSLP);                                    0674
*   SRVRC=ZERO;                     /* CLEAR THE RETURN CODE         */
         SLR   SRVRC,SRVRC                                         0675
*   SRVFLAGS=''B;                   /* CLEAR LOCAL CONTROL FLAGS     */
         MVI   SRVFLAGS,X'00'                                      0676
*   DO WHILE(SRVRC<STOPFUNC         /* PROCESS UNTIL NO MORE SERVICE
*                                      SYSMODS ADDED                 */
*         &SRVCMP=OFF);             /*                               */
         B     @DE00677                                            0677
@DL00677 DS    0H                                                  0678
*     SRVCMP=ON;                    /* ASSUME COMPLETION OF 1ST LEVEL
*                                      FUNC BUILD                    */
         OI    SRVCMP,B'10000000'                                  0678
*     SRVCKEY@=ZERO;                /* CURRENT SCL LIST PTR          */
         SLR   @08,@08                                             0679
         ST    @08,SRVCKEY@                                        0679
*     SRVGET=ON;                    /* GET NEXT SCL RECORD           */
*     SRVEND=OFF;                   /* CLEAR END OF SERVICE LISTS  0681
*                                      FLAG                          */
         OI    SRVGET,B'00010000'                                  0681
         NI    SRVEND,B'10111111'                                  0681
*     SRVLISTX=3;                   /*                               */
         LA    SRVLISTX,3                                          0682
*     DO UNTIL(SRVEND=ON            /* PASS THRU L3, L4, AND L5 ONCE */
*           ×SRVRC=>STOPFUNC);      /*                               */
@DL00683 DS    0H                                                  0684
*       SRVSKIP=OFF;                /* SKIP THE SYSMOD               */
*       SRVREC=OFF;                 /*                               */
         NI    SRVSKIP,B'11010111'                                 0685
*       DO WHILE(SRVREC=OFF&        /*                               */
*             SRVEND=OFF);          /*                               */
         B     @DE00686                                            0686
@DL00686 DS    0H                                                  0687
*         IF SRVGET=ON THEN         /* GET NEXT RECORD?              */
         TM    SRVGET,B'00010000'                                  0687
         BNO   @RF00687                                            0687
*           DO;                                                    0688
*             CALL GETNLSMD(LISTNMS(SRVLISTX),/*                     */
*                 SRVCKEY@,SRVSCL); /* GET NEXT RECORD FROM SCL FOR
*                                      SERVICE                       */
         MVC   @AL00001+4(8),@AL00689                              0689
         LA    @08,LISTNMS-1(SRVLISTX)                             0689
         ST    @08,@AL00001                                        0689
         LA    @01,@AL00001                                        0689
         BAL   @14,GETNLSMD                                        0689
*             RFY                                                  0690
*               RTNCODE RSTD;       /*                               */
*           END;                                                   0691
*         ELSE                      /* NO NEED TO GET NEXT SCL RECORD*/
*           DO;                                                    0692
         B     @RC00687                                            0692
@RF00687 DS    0H                                                  0693
*             RTNCODE=GTPRETRN;     /* USE RETURN CODE FROM PREVIOUS
*                                      GETN                          */
         L     @08,@PC00001                                        0693
         L     @08,TBLXSCGT(,@08)                                  0693
         SLR   RTNCODE,RTNCODE                                     0693
         IC    RTNCODE,GTPRETRN(,@08)                              0693
*             SRVSCL=SCLMAP;        /* USE PREVIOUSLY GOTTEN RECORD  */
         L     @14,GTPBUFAD(,@08)                                  0694
         MVC   SRVSCL(17),SCLMAP(@14)                              0694
*           END;                                                   0695
*         IF RTNCODE=GTPEOF THEN    /* END OF FILE?                  */
@RC00687 CH    RTNCODE,@CH00038                                    0696
         BNE   @RF00696                                            0696
*           DO;                     /* YES,                          */
*             RFY                                                  0698
*               RTNCODE UNRSTD;                                    0698
*             SRVCKEY@=ZERO;        /* CURRENT SCL LIST PTR          */
         SLR   @08,@08                                             0699
         ST    @08,SRVCKEY@                                        0699
*             SRVLISTX=SRVLISTX+1;  /* ADVANCE TO NEXT SERVICE LIST  */
         AH    SRVLISTX,@CH00064                                   0700
*             IF SRVLISTX>DIM(LISTNMS) THEN/* THRU WILL SERVICE LISTS
*                                      ?                             */
         CH    SRVLISTX,@CH00102                                   0701
         BNH   @RF00701                                            0701
*               DO;                 /*                               */
*                 SRVEND=ON;        /* END OF SERVICE LISTS          */
*                 SRVSKIP=ON;       /* SKIP PROCESSING FOR ++VER     */
         OI    SRVEND,B'01100000'                                  0704
*               END;                                               0705
*             ELSE                                                 0706
*               ;                   /* NOT THE END OF THE LISTS      */
@RF00701 DS    0H                                                  0707
*           END;                                                   0707
*         ELSE                      /* NOT THE END OF A LIST         */
*           DO;                     /*                               */
         B     @RC00696                                            0708
@RF00696 DS    0H                                                  0709
*             SRVREC=ON;            /* RECORD WAS GOTTEN             */
         OI    SRVREC,B'00001000'                                  0709
*           END;                    /*                               */
*       END;                                                       0711
@RC00696 DS    0H                                                  0711
@DE00686 TM    SRVREC,B'01001000'                                  0711
         BZ    @DL00686                                            0711
*       SRVGET=ON;                  /* GET NEXT SCL RECORD           */
*                                                                  0712
         OI    SRVGET,B'00010000'                                  0712
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK TO SEE IF THE SYSMOD IS ALREADY IN THE ICT. IF SO,  */
*       /* SKIP PROCESSING IT.                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0713
*       IF SCLCAND=ON               /* SYSMOD IS CANDIDATE           */
*           &SRVEND=OFF             /* AND NOT END OF LIST           */
*           &SRVRC<STOPFUNC THEN    /* ++VER IS STILL GO?            */
         L     @08,@PC00001                                        0713
         L     @05,TBLXSCGT(,@08)                                  0713
         L     @05,GTPBUFAD(,@05)                                  0713
         TM    SCLCAND(@05),B'00100000'                            0713
         BNO   @RF00713                                            0713
         TM    SRVEND,B'01000000'                                  0713
         BNZ   @RF00713                                            0713
         CH    SRVRC,@CH00033                                      0713
         BNL   @RF00713                                            0713
*         DO;                       /* YES,                          */
*           TSLICTSR=''B;           /* CLEAR PARMLIST                */
         L     @08,TBLXTSLP(,@08)                                  0715
         L     @02,TSLPMLAD(,@08)                                  0715
         XC    TSLICTSR(14,@02),TSLICTSR(@02)                      0715
*           TSLFUNCT=TSLFISRH;      /* SEARCH TO SEE IF SYSMOD ...   */
         MVI   TSLFUNCT(@08),X'01'                                 0716
*           TSLISMD=SCLSMD;         /* ... ALREADY IN THE ICT        */
         MVC   TSLISMD(7,@02),SCLSMD(@05)                          0717
*           CALL HMASMTSB(TSLPARMS);                               0718
         ST    @08,@AL00001                                        0718
         L     @15,@CV01237                                        0718
         LA    @01,@AL00001                                        0718
         BALR  @14,@15                                             0718
*           IF TSLIOK=ON            /* FOUND OK                      */
*               ×TSLISUP=ON         /* ... OR SUP'ED?                */
*             THEN                                                 0719
         L     @08,@PC00001                                        0719
         L     @08,TBLXTSLP(,@08)                                  0719
         L     @08,TSLPMLAD(,@08)                                  0719
         TM    TSLIOK(@08),B'01100000'                             0719
         BZ    @RF00719                                            0719
*             DO;                                                  0720
*               SRVGET=ON;          /* GET THE NEXT SCL RECORD       */
*               SRVSKIP=ON;         /* SKIP THE SYSMOD               */
         OI    SRVGET,B'00110000'                                  0722
*             END;                                                 0723
*         END;                                                     0724
*       ELSE                        /* NOT A CANDIDATE OR ERROR      */
*         DO;                                                      0725
         B     @RC00713                                            0725
@RF00713 DS    0H                                                  0726
*           SRVSKIP=ON;             /* SKIP THE VER                  */
         OI    SRVSKIP,B'00100000'                                 0726
*         END;                                                     0727
*       IF SRVRC<STOPFUNC           /* ALL IS WELL?                  */
*           &SRVSKIP=OFF THEN       /* AND ^ SKIP ?                  */
@RC00713 CH    SRVRC,@CH00033                                      0728
         BNL   @RF00728                                            0728
         TM    SRVSKIP,B'00100000'                                 0728
         BNZ   @RF00728                                            0728
*         DO;                       /* YES,                          */
*                                                                  0729
*           /*********************************************************/
*           /*                                                       */
*           /* DETERMINE APPLICABILITY OF ++VER, I.E. THE SYSMOD IS  */
*           /* FMID'ED SYMOD ON THE SYSTEM OR ICT                    */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0730
*           CALL APPLVER(SCLMAP);   /* DETERMINE APPLICABLILITY OF 0730
*                                      THIS ++VER                    */
         L     @08,@PC00001                                        0730
         L     @08,TBLXSCGT(,@08)                                  0730
         L     @08,GTPBUFAD(,@08)                                  0730
         ST    @08,@AL00001                                        0730
         LA    @01,@AL00001                                        0730
         BAL   @14,APPLVER                                         0730
*           RFY                                                    0731
*             RTNCODE RSTD;                                        0731
*           IF RTNCODE^=ZERO THEN   /* IS THIS VER APPLICABLE?       */
         LTR   RTNCODE,RTNCODE                                     0732
         BZ    @RF00732                                            0732
*             DO;                                                  0733
*               SRVGET=ON;          /* GET NEXT SCL RECORD           */
*               SRVSKIP=ON;         /* SKIP THIS ++VER               */
         OI    SRVGET,B'00110000'                                  0735
*               IF RTNCODE>TSLNTFND THEN/* ERROR?                    */
         CH    RTNCODE,@CH00038                                    0736
         BNH   @RF00736                                            0736
*                 DO;               /* YES,                          */
*                   SRVRC=MAX(SRVRC,RTNCODE);/* SAVE THE RETURN CODE */
         CR    SRVRC,RTNCODE                                       0738
         BNL   *+6
         LR    SRVRC,RTNCODE                                       0738
*                 END;                                             0739
*               RFY                                                0740
*                 RTNCODE UNRSTD;                                  0740
@RF00736 DS    0H                                                  0741
*             END;                                                 0741
*           ELSE                                                   0742
*             DO;                                                  0742
         B     @RC00732                                            0742
@RF00732 DS    0H                                                  0743
*               CALL SELFND(SCLSMD);/* MARK SELECT LIST ENTRY SO THAT
*                                      SELECTED SYSMOD NOT PROCESSED
*                                      MESSAGE NOT ISSUED            */
*                                                                  0743
         L     @08,@PC00001                                        0743
         L     @08,TBLXSCGT(,@08)                                  0743
         L     @08,GTPBUFAD(,@08)                                  0743
         LA    @08,SCLSMD(,@08)                                    0743
         ST    @08,@AL00001                                        0743
         LA    @01,@AL00001                                        0743
         BAL   @14,SELFND                                          0743
*               /*****************************************************/
*               /*                                                   */
*               /* CHECK FOR AMBIGUOUS VER                           */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0744
*               CALL AMBIGCK(SCLMAP);/* NOT THAT THIS WILL GET ALL 0744
*                                      SCL RECORDS UPTO AND INCLUDING
*                                      THE 1ST RECORD FOR THE NEXT 0744
*                                      SYSMOD                        */
         L     @08,@PC00001                                        0744
         L     @08,TBLXSCGT(,@08)                                  0744
         L     @08,GTPBUFAD(,@08)                                  0744
         ST    @08,@AL00001                                        0744
         LA    @01,@AL00001                                        0744
         BAL   @14,AMBIGCK                                         0744
*               RFY                                                0745
*                 RTNCODE RSTD;                                    0745
*               SRVGET=OFF;         /* CLEAR GET NEXT SCL RECORD FLAG*/
         NI    SRVGET,B'11101111'                                  0746
*               SRVRC=MAX(SRVRC,RTNCODE);/* SAVE RETURN CODE         */
         CR    SRVRC,RTNCODE                                       0747
         BNL   *+6
         LR    SRVRC,RTNCODE                                       0747
*               RFY                                                0748
*                 RTNCODE UNRSTD;                                  0748
*             END;                                                 0749
*         END;                                                     0750
@RC00732 DS    0H                                                  0751
*       RFY                                                        0751
*         SCLMAP BASED(ADDR(SRVSCL));                              0751
@RF00728 DS    0H                                                  0752
*       IF SRVRC<STOPFUNC           /* SYSMOD IS GO?                 */
*           &SRVSKIP=OFF THEN       /* ...                           */
         CH    SRVRC,@CH00033                                      0752
         BNL   @RF00752                                            0752
         TM    SRVSKIP,B'00100000'                                 0752
         BNZ   @RF00752                                            0752
*         DO;                                                      0753
*                                                                  0753
*           /*********************************************************/
*           /*                                                       */
*           /* GET PTS EXTENDED ENTRY                                */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0754
*           CALL GETSMD(HMASMIOP,SCLSMD);                          0754
         L     @08,CCAIOPTR(,CCAPTR)                               0754
         ST    @08,@AL00001                                        0754
         LA    @08,SRVSCL                                          0754
         LA    @08,SCLSMD(,@08)                                    0754
         ST    @08,@AL00001+4                                      0754
         LA    @01,@AL00001                                        0754
         BAL   @14,GETSMD                                          0754
*           RFY                                                    0755
*             RTNCODE RSTD;                                        0755
*           SRVRC=MAX(SRVRC,RTNCODE);/* SAVE BUILD RETURN CODE       */
         CR    SRVRC,RTNCODE                                       0756
         BNL   *+6
         LR    SRVRC,RTNCODE                                       0756
*           RFY                                                    0757
*             RTNCODE UNRSTD;                                      0757
*           IF SRVRC<STOPFUNC       /* STILL PROCESSING SYSMOD?      */
*               &SRVSKIP=OFF THEN   /*                               */
         CH    SRVRC,@CH00033                                      0758
         BNL   @RF00758                                            0758
         TM    SRVSKIP,B'00100000'                                 0758
         BNZ   @RF00758                                            0758
*             DO;                                                  0759
*                                                                  0759
*               /*****************************************************/
*               /*                                                   */
*               /* CHECK FOR SUP ERROR                               */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0760
*               CALL SUPCK(SERVICE,SCLMAP,HMASMIOP,SRVSUPN);       0760
         LA    @08,@CC01268                                        0760
         ST    @08,@AL00001                                        0760
         LA    @08,SRVSCL                                          0760
         ST    @08,@AL00001+4                                      0760
         L     @08,CCAIOPTR(,CCAPTR)                               0760
         ST    @08,@AL00001+8                                      0760
         LA    @08,SRVSUPN                                         0760
         ST    @08,@AL00001+12                                     0760
         LA    @01,@AL00001                                        0760
         BAL   @14,SUPCK                                           0760
*               RFY                                                0761
*                 RTNCODE RSTD;                                    0761
*               SRVRC=MAX(SRVRC,RTNCODE);/* SAVE RETURN CODE         */
         CR    SRVRC,RTNCODE                                       0762
         BNL   *+6
         LR    SRVRC,RTNCODE                                       0762
*               IF RTNCODE=STOPSMD THEN/* SUPED BY ICT SYSMOD?       */
         CH    RTNCODE,@CH00056                                    0763
         BNE   @RF00763                                            0763
*                 DO;               /* YES,                          */
*                   SRVSKIP=ON;     /* THEN SKIP SYSMOD              */
         OI    SRVSKIP,B'00100000'                                 0765
*                   RFY                                            0766
*                     RTNCODE UNRSTD;                              0766
*                 END;                                             0767
*             END;                                                 0768
@RF00763 DS    0H                                                  0769
*           IF SRVRC<STOPFUNC       /* STILL PROCESSING SYSMOD?      */
*               &SRVSKIP=OFF THEN   /*                               */
@RF00758 CH    SRVRC,@CH00033                                      0769
         BNL   @RF00769                                            0769
         TM    SRVSKIP,B'00100000'                                 0769
         BNZ   @RF00769                                            0769
*             DO;                                                  0770
*                                                                  0770
*               /*****************************************************/
*               /*                                                   */
*               /* BUILD ICT PTR ENTRY                               */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0771
*               CALL SMDICT(HMASMIOP,SCLMAP,SRVENTP);/*              */
         L     @08,CCAIOPTR(,CCAPTR)                               0771
         ST    @08,@AL00001                                        0771
         LA    @08,SRVSCL                                          0771
         ST    @08,@AL00001+4                                      0771
         LA    @08,SRVENTP                                         0771
         ST    @08,@AL00001+8                                      0771
         LA    @01,@AL00001                                        0771
         BAL   @14,SMDICT                                          0771
*               RFY                                                0772
*                 RTNCODE RSTD;                                    0772
*               SRVRC=MAX(SRVRC,RTNCODE);/* SAVE BUILD RETURN CODE   */
         CR    SRVRC,RTNCODE                                       0773
         BNL   *+6
         LR    SRVRC,RTNCODE                                       0773
*               IF RTNCODE=ZERO THEN/* ALL IS WELL?                  */
         LTR   RTNCODE,RTNCODE                                     0774
         BNZ   @RF00774                                            0774
*                 DO;               /* YES,                          */
*                   RFY                                            0776
*                     RTNCODE UNRSTD;                              0776
*                   SRVCMP=OFF;                                    0777
         NI    SRVCMP,B'01111111'                                  0777
*                   SRVENTP->ICTPSUPN(1)=SRVSUPN;/* SUP COUNT        */
         L     @08,SRVENTP                                         0778
         MVC   ICTPSUPN(2,@08),SRVSUPN                             0778
*                 END;                                             0779
*             END;                                                 0780
*         END;                                                     0781
*       ELSE                                                       0782
*         ;                         /* SYSMOD FAILED OR ++VER IS   0782
*                                      SKIPPED                       */
@RF00752 DS    0H                                                  0783
*     END;                          /* END OF PASS THRU L2 LIST      */
@RC00752 DS    0H                                                  0783
@DE00683 TM    SRVEND,B'01000000'                                  0783
         BO    @DC00683                                            0783
         CH    SRVRC,@CH00033                                      0783
         BL    @DL00683                                            0783
@DC00683 DS    0H                                                  0784
*     IF SRVRC<STOPFUNC THEN        /* ALL IS WELL?                  */
         CH    SRVRC,@CH00033                                      0784
         BNL   @RF00784                                            0784
*       DO;                                                        0785
*                                                                  0785
*         /***********************************************************/
*         /*                                                         */
*         /* ADD IF REQ INDEX LISTS TO ALL ICT PTF ENTRIES JUST      */
*         /* CREATED                                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0786
*         CALL ADDIFS;              /*                               */
         BAL   @14,ADDIFS                                          0786
*         RFY                                                      0787
*           RTNCODE RSTD;                                          0787
*         SRVRC=MAX(SRVRC,RTNCODE);                                0788
         CR    SRVRC,RTNCODE                                       0788
         BNL   *+6
         LR    SRVRC,RTNCODE                                       0788
*         RFY                                                      0789
*           RTNCODE UNRSTD;                                        0789
*                                                                  0789
*         /***********************************************************/
*         /*                                                         */
*         /* IF GROUP, ADD CANDIDATES AND CLEAR PASS FILAGS          */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0790
*         IF SRVRC<STOPFUNC THEN    /* ALL IS WELL?                  */
         CH    SRVRC,@CH00033                                      0790
         BNL   @RF00790                                            0790
*           DO;                                                    0791
*             CALL GROUPADD;                                       0792
         BAL   @14,GROUPADD                                        0792
*           END;                                                   0793
*         IF SRVRC<STOPFUNC THEN    /* ALL IS WELL?                  */
@RF00790 CH    SRVRC,@CH00033                                      0794
         BNL   @RF00794                                            0794
*           DO;                                                    0795
*             TSLFUNCT=TSLFCLRP;    /* CLEAR PASS FLAGS IN THE ICT   */
         L     @08,@PC00001                                        0796
         L     @08,TBLXTSLP(,@08)                                  0796
         MVI   TSLFUNCT(@08),X'05'                                 0796
*             CALL HMASMTSB(TSLPARMS);                             0797
         ST    @08,@AL00001                                        0797
         L     @15,@CV01237                                        0797
         LA    @01,@AL00001                                        0797
         BALR  @14,@15                                             0797
*           END;                                                   0798
*       END;                                                       0799
@RF00794 DS    0H                                                  0800
*   END;                            /* END OF 1ST LEVEL FUNCTION   0800
*                                      BUILD LOOP                    */
@RF00784 DS    0H                                                  0800
@DE00677 CH    SRVRC,@CH00033                                      0800
         BNL   @DC00677                                            0800
         TM    SRVCMP,B'10000000'                                  0800
         BZ    @DL00677                                            0800
@DC00677 DS    0H                                                  0801
*   RETURN CODE(SRVRC);             /* RETURN WITH THE RETURN CODE   */
         LR    @15,SRVRC                                           0801
         L     @14,@SA00007                                        0801
         LM    @00,@12,@SA00007+8                                  0801
         BR    @14                                                 0801
*   RFY                                                            0802
*     HMASMIOP BASED;                                              0802
*   RFY                                                            0803
*     HMASMGTP BASED;                                              0803
*   RFY                                                            0804
*     SCLMAP BASED;                                                0804
*   RFY                                                            0805
*     TSLPARMS BASED;                                              0805
*   END SRVBUILD;                   /*                               */
*                                                                  0807
*/********************************************************************/
*/*                                                                  */
*/* SELFND                                                           */
*/*                                                                  */
*/* INPUT  - SYSMOD TO BE LOCATED IN THE SELECT/GROUP GTA FILE       */
*/*                                                                  */
*/* OUTPUT - "SYSMOD FOUND" FLAG IN THE SELECT/GROUP GTA RECORD      */
*/*          FOR THE INPUT SYSMOD IF FOUND                           */
*/*        - RETURN CODE:                                            */
*/*           0 - FOUND IN THE GTA FILE                              */
*/*           4 - NOT FOUND IN THE GTA FILE                          */
*/*                                                                  */
*/********************************************************************/
*                                                                  0807
*SELFND:                                                           0807
*   PROC(SELFNAME);                 /* SYSMOD TO FIND                */
SELFND   STM   @14,@12,@SA00008                                    0807
         MVC   @PC00008(4),0(@01)                                  0807
*   DCL                                                            0808
*     SELFNAME CHAR(LENGTH(IOPNAM17));/* SYSMOD NAME TO SEARCH FOR   */
*   DCL                                                            0809
*     SELFNDRC FIXED(15);           /* RETURN CODE                   */
*   RFY                                                            0810
*     HMASMGTP BASED(TBLXSEGT);                                    0810
*   RFY                                                            0811
*     HMASMSET BASED(GTPBUFAD);                                    0811
*   SELFNDRC=ZERO;                  /* CLEAR RETURN CODE             */
         SLR   SELFNDRC,SELFNDRC                                   0812
*   IF TBLSEL=ON                    /* SELECT ...                    */
*       ×TBLGROUP=ON THEN           /* ... OR GROUP?                 */
         L     @08,@PC00001                                        0813
         L     @03,TBLXTBL(,@08)                                   0813
         TM    TBLSEL(@03),B'10100000'                             0813
         BZ    @RF00813                                            0813
*     DO;                           /* YES,                          */
*                                                                  0814
*       /*************************************************************/
*       /*                                                           */
*       /* INTIALIZE FOR SEARCH OF SELECT/GROUP LIST                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0815
*       HMASMSET=''B;               /* CLEAR BUFFER                  */
         L     @08,TBLXSEGT(,@08)                                  0815
         L     @03,GTPBUFAD(,@08)                                  0815
         XC    HMASMSET(12,@03),HMASMSET(@03)                      0815
*       SESMD=ON;                   /* SELECT LIST TYPE IS SYSMOD    */
         OI    SESMD(@03),B'00000001'                              0816
*       SENAME=' ';                 /* BLANK SELECT NAME             */
         MVI   SENAME+1(@03),C' '                                  0817
         MVC   SENAME+2(6,@03),SENAME+1(@03)                       0817
         MVI   SENAME(@03),C' '                                    0817
*       GTPFUNCT=GTPLOC;            /* GTP FUNCTION IS LOCATE        */
         MVI   GTPFUNCT(@08),X'03'                                 0818
*       SESMDNO=SELFNAME;           /* SEARCH FOR GIVEN SYSMOD       */
         L     @15,@PC00008                                        0819
         MVC   SESMDNO(7,@03),SELFNAME(@15)                        0819
*       CALL HMASMGTA(HMASMGTP);    /* ...                           */
         ST    @08,@AL00001                                        0820
         L     @15,@CV01231                                        0820
         LA    @01,@AL00001                                        0820
         BALR  @14,@15                                             0820
*       IF GTPRETRN^=GTPGOOD THEN   /* NOT FOUND?                    */
         L     @08,@PC00001                                        0821
         L     @08,TBLXSEGT(,@08)                                  0821
         CLI   GTPRETRN(@08),0                                     0821
         BE    @RF00821                                            0821
*         DO;                       /* YES,                          */
*           SELFNDRC=GTPNTFND;      /* NOT FOUND RETURN CODED        */
         LA    SELFNDRC,4                                          0823
*         END;                                                     0824
*       ELSE                        /* FOUND                         */
*         DO;                                                      0825
         B     @RC00821                                            0825
@RF00821 DS    0H                                                  0826
*           SEFLAG2A=ON;            /* MARK SELECT ENTRY AS FOUND ON
*                                      CDS                           */
         L     @08,@PC00001                                        0826
         L     @08,TBLXSEGT(,@08)                                  0826
         L     @03,GTPBUFAD(,@08)                                  0826
         OI    SEFLAG2A(@03),B'10000000'                           0826
*           GTPFUNCT=GTPADD;        /* ADD ENTRY BACK WITH FLAG SET  */
         MVI   GTPFUNCT(@08),X'04'                                 0827
*           CALL HMASMGTA(HMASMGTP);/* ...                           */
*                                                                  0828
         ST    @08,@AL00001                                        0828
         L     @15,@CV01231                                        0828
         LA    @01,@AL00001                                        0828
         BALR  @14,@15                                             0828
*           /*********************************************************/
*           /*                                                       */
*           /* RETURN CODE ????????                                  */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0829
*         END;                                                     0829
*     END;                                                         0830
*   ELSE                                                           0831
*     ;                             /* NOT SELECT OR GROUP, SKIP ALL
*                                      PROCESSING                    */
@RF00813 DS    0H                                                  0832
*   RETURN CODE(SELFNDRC);          /* RETURN W/ RC                  */
@RC00813 LR    @15,SELFNDRC                                        0832
         L     @14,@SA00008                                        0832
         LM    @00,@12,@SA00008+8                                  0832
         BR    @14                                                 0832
*   RFY                                                            0833
*     HMASMGTP BASED;                                              0833
*   RFY                                                            0834
*     HMASMSET BASED;                                              0834
*   END SELFND;                                                    0835
*                                                                  0836
*/********************************************************************/
*/*                                                                  */
*/* SELCHK                                                           */
*/*                                                                  */
*/* INPUT - 1) SELECT/GROUP GTA FILE                                 */
*/*         2) PTF SECTION OF THE ICT                                */
*/*                                                                  */
*/* OUTPUT - 1) ERROR MESSAGE FOR EACH SYSMOD IN THE SELECT LIST AND */
*/*             NOT IN THE ICT FOR WHICH AN ERROR MESSAGE HAS NOT    */
*/*             ALREADY BEEN ISSUED                                  */
*/*          2) THE SELECT LIST AND THE RESTORE CANDIDATE FLAGS      */
*/*             WILL BE SET FOR EACH SYSMOD IN BOTH THE GTA FILE     */
*/*             AND THE ICT.                                         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0836
*SELCHK:                                                           0836
*   PROC;                                                          0836
SELCHK   STM   @14,@12,@SA00009                                    0836
*   DCL                                                            0837
*     SELCHKRC FIXED(15);           /* RETURN CODE                   */
*   DCL                                                            0838
*     1 SELCFLGS,                   /* LOCAL CONTROL FLAGS           */
*      2 SELCEOF BIT(1),            /* END OF FILE ON SELEGCT/GROUP
*                                      GTA FILE                      */
*      2 * BIT(7);                  /* UNUSED                        */
*   RFY                                                            0839
*     HMASMGTP BASED(TBLXSEGT);                                    0839
*   RFY                                                            0840
*     HMASMSET BASED(GTPBUFAD);                                    0840
*   RFY                                                            0841
*     TSLPARMS BASED(TBLXTSLP);                                    0841
*   SELCHKRC=ZERO;                  /* CLEAR RETURN CODE             */
         SLR   SELCHKRC,SELCHKRC                                   0842
*   SELCFLGS=''B;                   /* CLEAR LOCAL FLAGS             */
         MVI   SELCFLGS,X'00'                                      0843
*   IF TBLSEL=ON                    /* SELECT ...                    */
*       ×TBLGROUP=ON THEN           /* ... OR GROUP?                 */
         L     @08,@PC00001                                        0844
         L     @03,TBLXTBL(,@08)                                   0844
         TM    TBLSEL(@03),B'10100000'                             0844
         BZ    @RF00844                                            0844
*     DO;                           /* YES,                          */
*       GTPFUNCT=GTPOPENN;          /* POSITION TO THE BEGINNING OF
*                                      THE SELECT/GROUP GTA FILE     */
         L     @08,TBLXSEGT(,@08)                                  0846
         MVI   GTPFUNCT(@08),X'01'                                 0846
*       CALL HMASMGTA(HMASMGTP);    /* ...                           */
         ST    @08,@AL00001                                        0847
         L     @15,@CV01231                                        0847
         LA    @01,@AL00001                                        0847
         BALR  @14,@15                                             0847
*       SELCEOF=OFF;                /* CLEAR END OF FILE             */
         NI    SELCEOF,B'01111111'                                 0848
*       GTPFUNCT=GTPGETN;           /* FUNCTION IS GET NEXT          */
         L     @08,@PC00001                                        0849
         L     @08,TBLXSEGT(,@08)                                  0849
         MVI   GTPFUNCT(@08),X'08'                                 0849
*       DO WHILE(SELCEOF=OFF        /*                               */
*             &SELCHKRC<STOPFUNC);  /*                               */
         B     @DE00850                                            0850
@DL00850 DS    0H                                                  0851
*         CALL HMASMGTA(HMASMGTP);  /* GET NEXT LIST ENTRY           */
         L     @08,@PC00001                                        0851
         L     @08,TBLXSEGT(,@08)                                  0851
         ST    @08,@AL00001                                        0851
         L     @15,@CV01231                                        0851
         LA    @01,@AL00001                                        0851
         BALR  @14,@15                                             0851
*         IF GTPRETRN=GTPEOF THEN   /* END OF FILE?                  */
         L     @08,@PC00001                                        0852
         L     @08,TBLXSEGT(,@08)                                  0852
         CLI   GTPRETRN(@08),4                                     0852
         BNE   @RF00852                                            0852
*           DO;                     /* YES,                          */
*             SELCEOF=ON;           /* END OF FILE                   */
         OI    SELCEOF,B'10000000'                                 0854
*           END;                                                   0855
*         ELSE                      /* NOT END OF FILE               */
*           DO;                                                    0856
*                                                                  0856
         B     @RC00852                                            0856
@RF00852 DS    0H                                                  0857
*             /*******************************************************/
*             /*                                                     */
*             /* SEARCH FOR THE SELECTED SYSMOD IN THE ICT           */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0857
*             TSLICTSR=''B;         /* CLEAR THE PARMLIST            */
         L     @08,@PC00001                                        0857
         L     @03,TBLXTSLP(,@08)                                  0857
         L     @15,TSLPMLAD(,@03)                                  0857
         XC    TSLICTSR(14,@15),TSLICTSR(@15)                      0857
*             TSLFUNCT=TSLFISRH;    /* SEARCH THE ICT                */
         MVI   TSLFUNCT(@03),X'01'                                 0858
*             TSLISMD=SESMDNO;      /* SEARCH FOR SELECT/GROUP LIST
*                                      SYSMOD                        */
         L     @08,TBLXSEGT(,@08)                                  0859
         L     @08,GTPBUFAD(,@08)                                  0859
         MVC   TSLISMD(7,@15),SESMDNO(@08)                         0859
*             CALL HMASMTSB(TSLPARMS);/* ...                         */
         ST    @03,@AL00001                                        0860
         L     @15,@CV01237                                        0860
         LA    @01,@AL00001                                        0860
         BALR  @14,@15                                             0860
*             IF TSLIFND=ON THEN    /* FOUND IN THE ICT?             */
         L     @08,@PC00001                                        0861
         L     @08,TBLXTSLP(,@08)                                  0861
         L     @08,TSLPMLAD(,@08)                                  0861
         TM    TSLIFND(@08),B'10000000'                            0861
         BNO   @RF00861                                            0861
*               DO;                 /* YES,                          */
*               END;                                               0863
*             ELSE                  /* NOT FOUND IN ICT THEN THERE IS
*                                      AN ERROR                      */
*               DO;                                                0864
         B     @RC00861                                            0864
@RF00861 DS    0H                                                  0865
*                 IF SEFLAG2A=OFF THEN/* ERROR MESSAGE NOT ISSUED?   */
         L     @08,@PC00001                                        0865
         L     @03,TBLXSEGT(,@08)                                  0865
         L     @03,GTPBUFAD(,@03)                                  0865
         TM    SEFLAG2A(@03),B'10000000'                           0865
         BNZ   @RF00865                                            0865
*                   DO;             /* YES,                          */
*                     SELCHKRC=STOPSMD;                            0867
*                                                                  0867
         LA    SELCHKRC,8                                          0867
*                     /***********************************************/
*                     /*                                             */
*                     /* ISSUE MESSAGE 'HMA379I SYSMOD XXXXXXX       */
*                     /* SELECTED SELECTED FOR XXXXXXXX ... HAS NO   */
*                     /* APPLICABLE VER                              */
*                     /*                                             */
*                     /***********************************************/
*                                                                  0868
*                     DO;           /* HMASMPMG M1(HMA379I)M2(PART119
*                                      )TYPE(ERR)VAR(SESMDNO,TBLXFUNC
*                                      ,CCADSIDA(IOPCDS))TARGET(SYSOU
*                                      T,LOG)                        */
*                       HMASMMGP=HMASMMGP&&HMASMMGP;/* SET PARMS TO
*                                      ZEROS                         */
         XC    HMASMMGP(28),HMASMMGP                               0869
*                       MGPMGNO1=HMA379I;/* SET UP MSG 1 CODE        */
         MVC   MGPMGNO1(2),@CH01249                                0870
*                       MGPMGNO2=PART119;/* SET UP MSG 2 CODE        */
         MVC   MGPMGNO2(2),@CH01258                                0871
*                       MGPTYPE=MGPERR;/* SET MESSAGE TYPE           */
         MVI   MGPTYPE,X'03'                                       0872
*                       MGPPRINT='1'B;/* SET TARGET FLAG             */
*                       MGPHLDS='1'B;/* SET TARGET FLAG              */
         OI    MGPPRINT,B'10010000'                                0874
*                       MGPVARPT(1)=ADDR(SESMDNO);/* SET VARIABLE PTR*/
         LA    @03,SESMDNO(,@03)                                   0875
         ST    @03,MGPVARPT                                        0875
*                       MGPVARPT(2)=ADDR(TBLXFUNC);/* SET VARIABLE 0876
*                                      PTR                           */
         LA    @08,TBLXFUNC(,@08)                                  0876
         ST    @08,MGPVARPT+4                                      0876
*                       MGPVARPT(3)=ADDR(CCADSIDA(IOPCDS));/* SET  0877
*                                      VARIABLE PTR                  */
         L     @08,CCADSAD(,CCAPTR)                                0877
         LA    @08,CCADSIDA+8(,@08)                                0877
         ST    @08,MGPVARPT+8                                      0877
*                       CALL HMASMMSG(HMASMMGP);/* HAVE MESSAGE    0878
*                                      ISSUED                        */
         L     @15,@CV01230                                        0878
         LA    @01,@AL00878                                        0878
         BALR  @14,@15                                             0878
*                     END;          /*                               */
*                   END;                                           0880
*                 ELSE                                             0881
*                   ;               /* ERROR MESSAGE ALREADY ISSUED  */
@RF00865 DS    0H                                                  0882
*               END;                                               0882
*           END;                                                   0883
@RC00861 DS    0H                                                  0884
*       END;                        /* END OF SELECT LIST PROCESSING */
@RC00852 DS    0H                                                  0884
@DE00850 TM    SELCEOF,B'10000000'                                 0884
         BNZ   @DC00850                                            0884
         CH    SELCHKRC,@CH00033                                   0884
         BL    @DL00850                                            0884
@DC00850 DS    0H                                                  0885
*     END;                                                         0885
*   ELSE                                                           0886
*     ;                             /* NOT SELECT OR GROUP, SKIP ALL
*                                      PROCESSING                    */
@RF00844 DS    0H                                                  0887
*   RETURN CODE(SELCHKRC);          /* RETURN W/ RC                  */
         LR    @15,SELCHKRC                                        0887
         L     @14,@SA00009                                        0887
         LM    @00,@12,@SA00009+8                                  0887
         BR    @14                                                 0887
*   RFY                                                            0888
*     HMASMGTP BASED;                                              0888
*   RFY                                                            0889
*     HMASMSET BASED;                                              0889
*   RFY                                                            0890
*     TSLPARMS BASED;                                              0890
*   END SELCHK;                                                    0891
*                                                                  0892
*/********************************************************************/
*/*                                                                  */
*/* SUPSMD                                                           */
*/*                                                                  */
*/* INPUT - 1) PTF SECTION OF THE ICT                                */
*/*                                                                  */
*/* OUTPUT - 1) ICT SYSMOD ENTRIES FOR ANY SUPERSEDED SYSMODS THAT   */
*/*             ARE ON THE CDS AND PTS.  THESE ENTRIES WILL BE USED  */
*/*             TO DRIVE ACCEPT REJECT PROCESSING                    */
*/*                                                                  */
*/********************************************************************/
*                                                                  0892
*SUPSMD:                                                           0892
*   PROC;                                                          0892
SUPSMD   STM   @14,@12,@SA00010                                    0892
*   DCL                                                            0893
*     SUPSRC FIXED(15);             /* RETURN CODE                   */
*   DCL                                                            0894
*     1 SUPSFLGS,                   /* LOCAL CONTROL FLAGS           */
*      2 * BIT(8);                  /* UNUSED                        */
*   DCL                                                            0895
*     SUPSX1 FIXED(31);             /* LOOP INDEX FOR ICT SYSMOD LOOP*/
*   DCL                                                            0896
*     SUPSX2 FIXED(31);             /* LOOP INDEX FOR SYSMOD SUP   0896
*                                      INDEX LIST                    */
*   DCL                                                            0897
*     SUPSICTP PTR(31);             /* ICT SYSMOD PTR FOR SUP'ED   0897
*                                      ENTRY                         */
*   RFY                                                            0898
*     HMASMIOP BASED(CCAIOPTR);                                    0898
*   RFY                                                            0899
*     ICTPTF BASED(CCAICPTF);                                      0899
*   RFY                                                            0900
*     TSLPARMS BASED(TBLXTSLP);                                    0900
*   RFY                                                            0901
*     ICTSUPLS BASED(ICTPSCHN(SUPSX1));                            0901
*   SUPSRC=ZERO;                    /* CLEAR RETURN CODE             */
         SLR   SUPSRC,SUPSRC                                       0902
*   SUPSFLGS=''B;                   /* CLEAR LOCAL FLAGS             */
         MVI   SUPSFLGS,X'00'                                      0903
*   DO SUPSX1=1 BY 1                /* CHECK ALL ICT SYSMOD ENTRIES  */
*         WHILE(ICTPEND(SUPSX1)^=ICTENDNT/*                          */
*         &SUPSRC<STOPFUNC);        /*                               */
         LA    SUPSX1,1                                            0904
         B     @DE00904                                            0904
@DL00904 DS    0H                                                  0905
*     IF ICTPNOGO(SUPSX1)=OFF       /* NOT NOGO,                     */
*         &ICTPSUPN(SUPSX1)=ZERO    /* AND NOT SUPED                 */
*         &ICTPDEXP(SUPSX1)=OFF     /* AND NOT DELETED               */
*         &ICTPDIMP(SUPSX1)=OFF     /* ...                           */
*       THEN                        /*                               */
         LR    @08,SUPSX1                                          0905
         MH    @08,@CH01757                                        0905
         L     @05,CCAICPTF(,CCAPTR)                               0905
         ST    @08,@TF00001                                        0905
         ALR   @08,@05                                             0905
         AL    @08,@CF01785                                        0905
         TM    ICTPNOGO-8(@08),B'01000000'                         0905
         BNZ   @RF00905                                            0905
         LR    @08,@05                                             0905
         AL    @08,@TF00001                                        0905
         AL    @08,@CF01786                                        0905
         SLR   @02,@02                                             0905
         ICM   @02,3,ICTPSUPN-20(@08)                              0905
         LTR   @02,@02                                             0905
         BNZ   @RF00905                                            0905
         AL    @05,@TF00001                                        0905
         AL    @05,@CF01787                                        0905
         TM    ICTPDEXP-13(@05),B'00110000'                        0905
         BNZ   @RF00905                                            0905
*       DO SUPSX2=1 BY 1            /*                               */
*             WHILE(ICTSUPND(SUPSX2)^=ICTENDIX/*                     */
*             &SUPSRC<STOPFUNC);    /*                               */
         LA    SUPSX2,1                                            0906
         B     @DE00906                                            0906
@DL00906 DS    0H                                                  0907
*         TSLICTSR=''B;             /* CLEAR THE PARMLIST            */
         L     @08,@PC00001                                        0907
         L     @08,TBLXTSLP(,@08)                                  0907
         L     @02,TSLPMLAD(,@08)                                  0907
         XC    TSLICTSR(14,@02),TSLICTSR(@02)                      0907
*         TSLFUNCT=TSLFISRH;        /* SEARCH THE ICT                */
         MVI   TSLFUNCT(@08),X'01'                                 0908
*         TSLISMD=ICTSUPNM(SUPSX2); /* SEARCH FOR SUP'ED SYSMOD      */
         LR    @15,SUPSX2                                          0909
         SLA   @15,3                                               0909
         LR    @14,SUPSX1                                          0909
         MH    @14,@CH01757                                        0909
         L     @01,CCAICPTF(,CCAPTR)                               0909
         AL    @01,@CF01788                                        0909
         L     @01,ICTPSCHN-72(@14,@01)                            0909
         ALR   @01,@15                                             0909
         AL    @01,@CF01789                                        0909
         MVC   TSLISMD(7,@02),ICTSUPNM(@01)                        0909
*         CALL HMASMTSB(TSLPARMS);  /* ...                           */
         ST    @08,@AL00001                                        0910
         L     @15,@CV01237                                        0910
         LA    @01,@AL00001                                        0910
         BALR  @14,@15                                             0910
*         IF TSLIFND^=ON THEN       /* NOT FOUND IN ICT?             */
         L     @08,@PC00001                                        0911
         L     @08,TBLXTSLP(,@08)                                  0911
         L     @08,TSLPMLAD(,@08)                                  0911
         TM    TSLIFND(@08),B'10000000'                            0911
         BO    @RF00911                                            0911
*           DO;                     /* YES,                          */
*                                                                  0912
*             /*******************************************************/
*             /*                                                     */
*             /* LOCATE ON THE PTS AND CDS, IF FOUND BUILD SYSMOD    */
*             /* ENTRY                                               */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0913
*             IOPDSID=IOPPTS;       /* ... IN PTS                    */
         L     @08,CCAIOPTR(,CCAPTR)                               0913
         MVI   IOPDSID(@08),X'06'                                  0913
*             IOPFUNCT=IOPBLDL;     /* ... BLDL                      */
         MVI   IOPFUNCT(@08),X'04'                                 0914
*             IOPTYPE=IOPSMD;       /* ....SYMOD ENTRY               */
         MVI   IOPTYPE(@08),X'0B'                                  0915
*             IOPNAME=ICTSUPNM(SUPSX2);/* ... FOR SUPED SYSMOD       */
         MVI   IOPNAME+7(@08),C' '                                 0916
         LR    @02,SUPSX2                                          0916
         SLA   @02,3                                               0916
         LR    @15,SUPSX1                                          0916
         MH    @15,@CH01757                                        0916
         L     @01,CCAICPTF(,CCAPTR)                               0916
         AL    @01,@CF01788                                        0916
         L     @01,ICTPSCHN-72(@15,@01)                            0916
         ALR   @01,@02                                             0916
         AL    @01,@CF01789                                        0916
         MVC   IOPNAME(7,@08),ICTSUPNM(@01)                        0916
*             CALL HMASMIO(HMASMIOP);/* ...                          */
         ST    @08,@AL00001                                        0917
         L     @15,@CV01229                                        0917
         LA    @01,@AL00001                                        0917
         BALR  @14,@15                                             0917
*             IF IOPRETRN^=ZERO THEN/* NON-ZERO RETURN?              */
         L     @08,CCAIOPTR(,CCAPTR)                               0918
         CLI   IOPRETRN(@08),0                                     0918
         BE    @RF00918                                            0918
*               DO;                 /* YES,                          */
*                 IF IOPRETRN>STOPSMD THEN/* IO ERROR?               */
         CLI   IOPRETRN(@08),8                                     0920
         BNH   @RF00920                                            0920
*                   DO;             /*                               */
*                     SUPSRC=MAX(SUPSRC,IOPRETRN);/* SAVE RC         */
         SLR   @02,@02                                             0922
         IC    @02,IOPRETRN(,@08)                                  0922
         CR    SUPSRC,@02                                          0922
         BNL   *+6
         LR    SUPSRC,@02                                          0922
*                   END;            /*                               */
*               END;                                               0924
*             ELSE                  /* FOUND ON THE PTS              */
*               DO;                 /*                               */
         B     @RC00918                                            0925
@RF00918 DS    0H                                                  0926
*                 RFY                                              0926
*                   HMASMIOP BASED(TBLXIOP2);/* USE ANOTHER IOP FOR
*                                      CDS BLDL                      */
*                 IOPDSID=IOPCDS;   /* CDS                           */
         L     @08,@PC00001                                        0927
         L     @08,TBLXIOP2(,@08)                                  0927
         MVI   IOPDSID(@08),X'02'                                  0927
*                 IOPFUNCT=IOPBLDL; /* ... BLDL                      */
         MVI   IOPFUNCT(@08),X'04'                                 0928
*                 IOPTYPE=IOPSMD;   /* ... SYMOD ENTRY               */
         MVI   IOPTYPE(@08),X'0B'                                  0929
*                 IOPNAME=ICTSUPNM(SUPSX2);/* ... FOR SUPED SYSMOD   */
         MVI   IOPNAME+7(@08),C' '                                 0930
         LR    @02,SUPSX2                                          0930
         SLA   @02,3                                               0930
         LR    @15,SUPSX1                                          0930
         MH    @15,@CH01757                                        0930
         L     @01,CCAICPTF(,CCAPTR)                               0930
         AL    @01,@CF01788                                        0930
         L     @01,ICTPSCHN-72(@15,@01)                            0930
         ALR   @01,@02                                             0930
         AL    @01,@CF01789                                        0930
         MVC   IOPNAME(7,@08),ICTSUPNM(@01)                        0930
*                 CALL HMASMIO(HMASMIOP);/* ...                      */
         ST    @08,@AL00001                                        0931
         L     @15,@CV01229                                        0931
         LA    @01,@AL00001                                        0931
         BALR  @14,@15                                             0931
*                 IF IOPRETRN^=ZERO THEN/* NON-ZERO RETURN?          */
         L     @08,@PC00001                                        0932
         L     @08,TBLXIOP2(,@08)                                  0932
         CLI   IOPRETRN(@08),0                                     0932
         BE    @RF00932                                            0932
*                   DO;             /* YES,                          */
*                     IF IOPRETRN>STOPSMD THEN/* IO ERROR?           */
         CLI   IOPRETRN(@08),8                                     0934
         BNH   @RF00934                                            0934
*                       DO;         /*                               */
*                         SUPSRC=MAX(SUPSRC,IOPRETRN);/* SAVE RC     */
         SLR   @02,@02                                             0936
         IC    @02,IOPRETRN(,@08)                                  0936
         CR    SUPSRC,@02                                          0936
         BNL   *+6
         LR    SUPSRC,@02                                          0936
*                       END;        /*                               */
*                   END;                                           0938
*                 ELSE              /* FOUND ON THE CDS              */
*                   DO;             /*                               */
         B     @RC00932                                            0939
@RF00932 DS    0H                                                  0940
*                     IF IOPSBYP=ON THEN/* CDS ENTRY IS SUPERSEDED?  */
         L     @08,@PC00001                                        0940
         L     @08,TBLXIOP2(,@08)                                  0940
         TM    IOPSBYP(@08),B'10000000'                            0940
         BNO   @RF00940                                            0940
*                       DO;         /* YES,                          */
*                         RFY                                      0942
*                           HMASMIOP BASED(CCAIOPTR);              0942
*                         IOPFUNCT=IOPXTND;/* EXTEND THE CDS IOP     */
         L     @08,CCAIOPTR(,CCAPTR)                               0943
         MVI   IOPFUNCT(@08),X'07'                                 0943
*                         CALL HMASMIO(HMASMIOP);/* ...              */
         ST    @08,@AL00001                                        0944
         L     @15,@CV01229                                        0944
         LA    @01,@AL00001                                        0944
         BALR  @14,@15                                             0944
*                         IF IOPRETRN^=ZERO THEN/* IO ERROR?         */
         L     @08,CCAIOPTR(,CCAPTR)                               0945
         CLI   IOPRETRN(@08),0                                     0945
         BE    @RF00945                                            0945
*                           DO;     /*                               */
*                             IF IOPRETRN>STOPSMD THEN/* IO ERROR?   */
         CLI   IOPRETRN(@08),8                                     0947
         BNH   @RF00947                                            0947
*                               DO; /*                               */
*                                 SUPSRC=MAX(SUPSRC,IOPRETRN);/* SAVE
*                                      RC                            */
         SLR   @02,@02                                             0949
         IC    @02,IOPRETRN(,@08)                                  0949
         CR    SUPSRC,@02                                          0949
         BNL   *+6
         LR    SUPSRC,@02                                          0949
*                               END;/*                               */
*                           END;                                   0951
*                         ELSE      /* IO SUCCESSFUL                 */
*                           DO;     /*                               */
         B     @RC00945                                            0952
@RF00945 DS    0H                                                  0953
*                             SUPSICTP=TBLXTOP;/* SAVE ICT ENTRY PTR */
         L     @08,@PC00001                                        0953
         MVC   SUPSICTP(4),TBLXTOP(@08)                            0953
*                             CALL HMASMTAD(/* GET AND INIT ICT    0954
*                                      SYSMOD ENTRY                  */
*                                 TBLXPARM,/* TBLX                   */
*                                 'S',/* ICT SYSMOD TO INIT          */
*                                 IOPNAME);/* ENTRY NAME             */
         ST    @08,@AL00001                                        0954
         LA    @08,@CC01268                                        0954
         ST    @08,@AL00001+4                                      0954
         L     @08,CCAIOPTR(,CCAPTR)                               0954
         LA    @08,IOPNAME(,@08)                                   0954
         ST    @08,@AL00001+8                                      0954
         L     @15,@CV01232                                        0954
         LA    @01,@AL00001                                        0954
         BALR  @14,@15                                             0954
*                             RFY                                  0955
*                               RTNCODE RSTD;                      0955
*                             SUPSRC=MAX(SUPSRC,RTNCODE);/*          */
         CR    SUPSRC,RTNCODE                                      0956
         BNL   *+6
         LR    SUPSRC,RTNCODE                                      0956
*                             RFY                                  0957
*                               RTNCODE UNRSTD;                    0957
*                             IF SUPSRC<STOPSMD THEN/* NO ERROR?     */
         CH    SUPSRC,@CH00056                                     0958
         BNL   @RF00958                                            0958
*                               DO; /* YES,                          */
*                                 CALL HMASMTEC(TBLXPARM,/* TBLX     */
*                                     SUPSICTP,/* ICT SYSMOD ENTRY 0960
*                                      PTR                           */
*                                     HMASMIOP,/* EXTENDED IOP       */
*                                     ZERO);/* NO ++VER NUMBER TO BE
*                                      USED                          */
         L     @08,@PC00001                                        0960
         ST    @08,@AL00001                                        0960
         LA    @08,SUPSICTP                                        0960
         ST    @08,@AL00001+4                                      0960
         L     @08,CCAIOPTR(,CCAPTR)                               0960
         ST    @08,@AL00001+8                                      0960
         LA    @08,@CF00082                                        0960
         ST    @08,@AL00001+12                                     0960
         L     @15,@CV01233                                        0960
         LA    @01,@AL00001                                        0960
         BALR  @14,@15                                             0960
*                                 RFY                              0961
*                                   RTNCODE RSTD;                  0961
*                                 SUPSRC=MAX(SUPSRC,RTNCODE);/*      */
         CR    SUPSRC,RTNCODE                                      0962
         BNL   *+6
         LR    SUPSRC,RTNCODE                                      0962
*                                 RFY                              0963
*                                   RTNCODE UNRSTD;                0963
*                                 SUPSICTP->ICTPSUPN(1)=1;/* SET SUP
*                                      COUNTER                       */
         L     @08,SUPSICTP                                        0964
         MVC   ICTPSUPN(2,@08),@CH00064                            0964
*                               END;                               0965
*                             ELSE                                 0966
*                               ;   /* ERROR GETTING ICT ENTRY       */
@RF00958 DS    0H                                                  0967
*                           END;                                   0967
*                       END;                                       0968
*                   END;            /*                               */
*               END;                                               0970
*           END;                                                   0971
*         ELSE                                                     0972
*           ;                       /* FOUND IN THE ICT, CONTINUE  0972
*                                      SEARCH                        */
@RF00911 DS    0H                                                  0973
*       END;                        /* END OF ONE SYSMOD SUP LIST  0973
*                                      SEARCH                        */
@RC00911 AH    SUPSX2,@CH00064                                     0973
@DE00906 LR    @08,SUPSX2                                          0973
         SLA   @08,3                                               0973
         LR    @02,SUPSX1                                          0973
         MH    @02,@CH01757                                        0973
         L     @01,CCAICPTF(,CCAPTR)                               0973
         AL    @01,@CF01788                                        0973
         L     @02,ICTPSCHN-72(@02,@01)                            0973
         AL    @02,@CF01789                                        0973
         L     @08,ICTSUPND(@08,@02)                               0973
         CL    @08,ICTENDIX                                        0973
         BE    @DC00906                                            0973
         CH    SUPSRC,@CH00033                                     0973
         BL    @DL00906                                            0973
@DC00906 DS    0H                                                  0974
*   END;                            /* END SYSMOD PROCESS LOOP       */
@RF00905 AH    SUPSX1,@CH00064                                     0974
@DE00904 LR    @08,SUPSX1                                          0974
         MH    @08,@CH01757                                        0974
         L     @05,CCAICPTF(,CCAPTR)                               0974
         AL    @05,@CF01790                                        0974
         L     @08,ICTPEND(@08,@05)                                0974
         CL    @08,ICTENDNT                                        0974
         BE    @DC00904                                            0974
         CH    SUPSRC,@CH00033                                     0974
         BL    @DL00904                                            0974
@DC00904 DS    0H                                                  0975
*   RETURN CODE(SUPSRC);            /* RETURN W/ RC                  */
         LR    @15,SUPSRC                                          0975
         L     @14,@SA00010                                        0975
         LM    @00,@12,@SA00010+8                                  0975
         BR    @14                                                 0975
*   END SUPSMD;                                                    0976
*   RFY                                                            0977
*     HMASMIOP BASED;                                              0977
*   RFY                                                            0978
*     ICTPTF BASED;                                                0978
*   RFY                                                            0979
*     TSLPARMS BASED;                                              0979
*   RFY                                                            0980
*     ICTSUPLS BASED;                                              0980
*                                                                  0981
*   /*****************************************************************/
*   /*                                                               */
*   /* TERMTPA - CLEAN UP PROCESSING                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0981
*TERMTPA:                                                          0981
*   PROC;                                                          0981
TERMTPA  STM   @14,@12,12(@13)                                     0981
*   TERMRC=ZERO;                    /* CLEAR THE RETURN CODE         */
         SLR   TERMRC,TERMRC                                       0982
*   DCL                                                            0983
*     TERMRC FIXED(15);             /*                               */
*   RETURN CODE(TERMRC);            /* RETURN WITH THE RETURN CODE   */
         LR    @15,TERMRC                                          0984
         L     @14,12(,@13)                                        0984
         LM    @00,@12,20(@13)                                     0984
         BR    @14                                                 0984
*   END TERMTPA;                    /*                               */
*                                                                  0986
*   /*****************************************************************/
*   /*                                                               */
*   /* GETNLSMD - GET NEXT/FIRST RECORD FROM SCL LIST                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0986
*GETNLSMD:                                                         0986
*   PROC(                           /*                               */
*       GNLLIST#,                   /* (CHAR 1) LIST NUMBER FOR NEXT
*                                      RECORD                        */
*       GNLPREV@,                   /* (INPUT/OUTPUT) PTR TO PREVIOUS
*                                      KEY OBTAINED BY THIS ROUTINE
*                                      OR ZERO IF THIS ROUTINE IS TO
*                                      POSITION TO THE FIRST RECORD
*                                      FOR GIVEN LIST. THIS PTR WILL
*                                      BE RESET ON EXIT TO ADDR OF 0986
*                                      GNLSCL                        */
*       GNLSCL);                    /* (OUTPUT) RECORD GOTTEN BY THIS
*                                      ROUTINE                       */
GETNLSMD STM   @14,@12,@SA00012                                    0986
         MVC   @PC00012(12),0(@01)                                 0986
*   DCL                                                            0987
*     GNLLIST# CHAR(1);             /* INPUT LIST NAME               */
*   DCL                                                            0988
*     GNLPREV@ PTR(31);             /* PTR TO PREV KEY OR ZERO       */
*   DCL                                                            0989
*     GNLSCL CHAR(LENGTH(SCLMAP));  /* RETURN RECORD                 */
*   DCL                                                            0990
*     1 GNLFLAGS BIT(8),            /* LOCAL CONTROL FLAGS           */
*      2 GNLPOSIT BIT(1),           /* POSITION IN THE GTA FILE    0990
*                                      REQUIRED                      */
*      2 GNLSKIP1 BIT(1),           /* SKIP OF 1 RECORD REQUIRED TO
*                                      POSITION                      */
*      2 * BIT(6);                  /* UNUSED                        */
*   DCL                                                            0991
*     GNLRC FIXED(15);              /*                               */
*   RFY                                                            0992
*     HMASMGTP BASED(TBLXSCGT);                                    0992
*   RFY                                                            0993
*     SCLMAP BASED(GTPBUFAD);                                      0993
*   GNLRC=ZERO;                     /* CLEAR THE RETURN CODE         */
         SLR   GNLRC,GNLRC                                         0994
*   GNLFLAGS=''B;                   /* CLEAR ALL CONTROL FLAGS       */
         MVI   GNLFLAGS,X'00'                                      0995
*   IF GNLPREV@=ZERO THEN           /* POSITION WITHIN THE SCL?      */
         L     @08,@PC00012+4                                      0996
         ICM   @03,15,GNLPREV@(@08)                                0996
         BNZ   @RF00996                                            0996
*     DO;                           /* YES,                          */
*       GNLPOSIT=ON;                /* INDICATE POSITIONING REQUIRED */
         OI    GNLPOSIT,B'10000000'                                0998
*       SCLKEY=''B;                 /* CLEAR THE KEY                 */
         L     @08,@PC00001                                        0999
         L     @08,TBLXSCGT(,@08)                                  0999
         L     @08,GTPBUFAD(,@08)                                  0999
         XC    SCLKEY(15,@08),SCLKEY(@08)                          0999
*       SCLISTNO=GNLLIST#;          /* SET THE LIST NAME             */
         L     @03,@PC00012                                        1000
         MVC   SCLISTNO(1,@08),GNLLIST#(@03)                       1000
*     END;                          /*                               */
*   ELSE                            /* POSITIONING NOT REQUESTED BY
*                                      CALLER                        */
*     DO;                           /*                               */
         B     @RC00996                                            1002
@RF00996 DS    0H                                                  1003
*       IF GNLPREV@->SCLKEY^=       /* PREVIOUS KEY SAME AS LAST GETN
*                                      KEY ?                         */
*           KEYSCLGN THEN                                          1003
         L     @08,@PC00012+4                                      1003
         L     @08,GNLPREV@(,@08)                                  1003
         CLC   SCLKEY(15,@08),KEYSCLGN                             1003
         BE    @RF01003                                            1003
*         DO;                       /* NO,                           */
*           SCLKEY=GNLPREV@->SCLKEY;/* KEY IS PREVIOUS KEY           */
         L     @03,@PC00001                                        1005
         L     @03,TBLXSCGT(,@03)                                  1005
         L     @03,GTPBUFAD(,@03)                                  1005
         MVC   SCLKEY(15,@03),SCLKEY(@08)                          1005
*           GNLPOSIT=ON;            /* POSITIONING IS REQUIRED       */
*           GNLSKIP1=ON;            /* SKIP THIS RECORD AFTER      1007
*                                      POSITIONING                   */
         OI    GNLPOSIT,B'11000000'                                1007
*         END;                      /*                               */
*       ELSE                                                       1009
*         ;                         /* ONLY A GET NEXT IS REQUIRED   */
@RF01003 DS    0H                                                  1010
*     END;                          /*                               */
*                                                                  1010
*   /*****************************************************************/
*   /*                                                               */
*   /* POSITION                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1011
*   IF GNLPOSIT=ON THEN             /* IS POSITIONING REQUIRED?      */
@RC00996 TM    GNLPOSIT,B'10000000'                                1011
         BNO   @RF01011                                            1011
*     DO;                           /* YES,                          */
*       GTPFUNCT=GTPLOC;            /* LOCATE RECORD                 */
         L     @08,@PC00001                                        1013
         L     @08,TBLXSCGT(,@08)                                  1013
         MVI   GTPFUNCT(@08),X'03'                                 1013
*       CALL HMASMGTA(HMASMGTP);    /* ...                           */
         ST    @08,@AL00001                                        1014
         L     @15,@CV01231                                        1014
         LA    @01,@AL00001                                        1014
         BALR  @14,@15                                             1014
*       GTPFUNCT=GTPSTRTN;          /* POSITION FOR GETN             */
         L     @08,@PC00001                                        1015
         L     @08,TBLXSCGT(,@08)                                  1015
         MVI   GTPFUNCT(@08),X'06'                                 1015
*       CALL HMASMGTA(HMASMGTP);    /* ...                           */
         ST    @08,@AL00001                                        1016
         L     @15,@CV01231                                        1016
         LA    @01,@AL00001                                        1016
         BALR  @14,@15                                             1016
*       IF GNLSKIP1=ON THEN         /* POSITIONED TO PREVIOUS RECORD?*/
         TM    GNLSKIP1,B'01000000'                                1017
         BNO   @RF01017                                            1017
*         DO;                       /* YES,                          */
*           GTPFUNCT=GTPGETN;       /* GETN NEXT SCL RECORD          */
         L     @08,@PC00001                                        1019
         L     @08,TBLXSCGT(,@08)                                  1019
         MVI   GTPFUNCT(@08),X'08'                                 1019
*           CALL HMASMGTA(HMASMGTP);/* ...                           */
         ST    @08,@AL00001                                        1020
         L     @15,@CV01231                                        1020
         LA    @01,@AL00001                                        1020
         BALR  @14,@15                                             1020
*           GNLRC=MAX(GNLRC,GTPRETRN);                             1021
         L     @08,@PC00001                                        1021
         L     @08,TBLXSCGT(,@08)                                  1021
         SLR   @03,@03                                             1021
         IC    @03,GTPRETRN(,@08)                                  1021
         CR    GNLRC,@03                                           1021
         BNL   *+6
         LR    GNLRC,@03                                           1021
*         END;                      /*                               */
*       ELSE                                                       1023
*         ;                         /* NO RECORD SKIPPING            */
@RF01017 DS    0H                                                  1024
*     END;                          /*                               */
*   ELSE                                                           1025
*     ;                             /* NO POSITIONING IS REQUIRED    */
*                                                                  1025
@RF01011 DS    0H                                                  1026
*   /*****************************************************************/
*   /*                                                               */
*   /* GET THE NEXT SCL RECORD                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1026
*   IF GNLRC=ZERO THEN              /* ALL IS WELL?                  */
         LTR   GNLRC,GNLRC                                         1026
         BNZ   @RF01026                                            1026
*     DO;                           /* YES,                          */
*       GTPFUNCT=GTPGETN;           /* GETN NEXT SCL RECORD          */
         L     @08,@PC00001                                        1028
         L     @08,TBLXSCGT(,@08)                                  1028
         MVI   GTPFUNCT(@08),X'08'                                 1028
*       CALL HMASMGTA(HMASMGTP);    /* ...                           */
         ST    @08,@AL00001                                        1029
         L     @15,@CV01231                                        1029
         LA    @01,@AL00001                                        1029
         BALR  @14,@15                                             1029
*       GNLRC=MAX(GNLRC,GTPRETRN);  /* SET RETURN CODE               */
         L     @08,@PC00001                                        1030
         L     @08,TBLXSCGT(,@08)                                  1030
         SLR   @03,@03                                             1030
         IC    @03,GTPRETRN(,@08)                                  1030
         CR    GNLRC,@03                                           1030
         BNL   *+6
         LR    GNLRC,@03                                           1030
*       IF GTPRETRN=GTPGOOD THEN    /* END OF FILE                   */
         CLI   GTPRETRN(@08),0                                     1031
         BNE   @RF01031                                            1031
*         DO;                       /* YES,                          */
*           GNLSCL=SCLMAP;          /* SAVE RECORD                   */
         L     @03,@PC00012+8                                      1033
         L     @08,GTPBUFAD(,@08)                                  1033
         MVC   GNLSCL(17,@03),SCLMAP(@08)                          1033
*           KEYSCLGN=SCLKEY;        /* SAVE KEY                      */
         MVC   KEYSCLGN(15),SCLKEY(@08)                            1034
*           GNLPREV@=ADDR(GNLSCL);  /* RETURN PTR TO SAVED KEY       */
         L     @15,@PC00012+4                                      1035
         ST    @03,GNLPREV@(,@15)                                  1035
*           IF SCLISTNO^=GNLLIST# THEN/* NEXT LIST IN SCL          1036
*                                      ENCOUNTERRED?                 */
         L     @03,@PC00012                                        1036
         CLC   SCLISTNO(1,@08),GNLLIST#(@03)                       1036
         BE    @RF01036                                            1036
*             DO;                   /* YES,                          */
*               GNLRC=MAX(GNLRC,GTPEOF);/* RETURN EOF RC             */
         LA    @08,4                                               1038
         CR    GNLRC,@08                                           1038
         BNL   *+6
         LR    GNLRC,@08                                           1038
*             END;                                                 1039
*           ELSE                                                   1040
*             ;                     /* SCL RECORD WITHIN SPECIFIED 1040
*                                      LIST                          */
@RF01036 DS    0H                                                  1041
*         END;                      /*                               */
*       ELSE                                                       1042
*         ;                         /* GTA ERROR                     */
@RF01031 DS    0H                                                  1043
*     END;                          /*                               */
*   ELSE                                                           1044
*     DO;                           /* PREVIOUS ERROR                */
         B     @RC01026                                            1044
@RF01026 DS    0H                                                  1045
*       GNLRC=MAX(GNLRC,GTPRETRN);                                 1045
         L     @08,@PC00001                                        1045
         L     @08,TBLXSCGT(,@08)                                  1045
         SLR   @03,@03                                             1045
         IC    @03,GTPRETRN(,@08)                                  1045
         CR    GNLRC,@03                                           1045
         BNL   *+6
         LR    GNLRC,@03                                           1045
*     END;                          /*                               */
*   RETURN CODE(GNLRC);             /* RETURN WITH THE RETURN CODE   */
@RC01026 LR    @15,GNLRC                                           1047
         L     @14,@SA00012                                        1047
         LM    @00,@12,@SA00012+8                                  1047
         BR    @14                                                 1047
*   RFY                                                            1048
*     HMASMGTP BASED;                                              1048
*   RFY                                                            1049
*     SCLMAP BASED;                                                1049
*   END GETNLSMD;                   /*                               */
*                                                                  1051
*   /*****************************************************************/
*   /*                                                               */
*   /* NPRECK - CHECK FOR NPRE ERRORS                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1051
*NPRECK:                                                           1051
*   PROC(NPCIOP,                    /* EXTENDED IOP FOR CURRENT    1051
*                                      SYSMOD'S SYSMOD ENTRY         */
*       NPCVER#);                   /* ++VER NUMBER FOR WHICH      1051
*                                      CHECKING IS TO BE DONE        */
NPRECK   STM   @14,@12,@SA00013                                    1051
         MVC   @PC00013(8),0(@01)                                  1051
*   DCL                                                            1052
*     NPCIOP CHAR(*);               /* EXTENDED IOP INPUT            */
*   DCL                                                            1053
*     NPCVER# FIXED(8);             /* ++VER NUMBER                  */
*   DCL                                                            1054
*     NPCLSOFF FIXED(31);           /* OFFSET OF NPRE LIST IN PTF ENT*/
*   DCL                                                            1055
*     NPCRC FIXED(15);              /*                               */
*   DCL                                                            1056
*     NPCICTP PTR(31);              /* PTR TO ICT PTF FOR NPREING  1056
*                                      SYSMOD                        */
*   DCL                                                            1057
*     1 NPCFLAGS,                   /*                               */
*      2 NPCFOUND BIT(1),           /* NPRE MATCH FOUND              */
*      2 NPCEOLST BIT(1),           /* END OF SUB-ENTRIES FOUND IN 1057
*                                      NPRE SEARCH                   */
*      2 * BIT(6);                  /*                               */
*   DCL                                                            1058
*     NPCRTN@ PTR(31);              /* NPRE ENTRY PTR IN THE IOP     */
*   RFY                                                            1059
*     HMASMIOP BASED(ADDR(NPCIOP));                                1059
*   RFY                                                            1060
*     TSLPARMS BASED(TBLXTSLP);                                    1060
*   NPCRC=ZERO;                     /* CLEAR THE RETURN CODE         */
         SLR   NPCRC,NPCRC                                         1061
*   NPCFLAGS=''B;                   /* CLEAR LOCAL CONTROL FLAGS     */
*                                                                  1062
         MVI   NPCFLAGS,X'00'                                      1062
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK TO SEE IF NPRED BY SYSMOD IN ICT                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1063
*   RFY                                                            1063
*     ICTPTF BASED(CCAICPTF);                                      1063
*   NPCLSOFF=ADDR(ICTPNCHN(1))      /* OFFSET OF NPRE CHAIN PTR      */
*       -ADDR(ICTPTF(1));           /*                               */
         L     @08,CCAICPTF(,CCAPTR)                               1064
         LA    NPCLSOFF,ICTPNCHN(,@08)                             1064
         SLR   NPCLSOFF,@08                                        1064
*   RFY                                                            1065
*     ICTPTF BASED;                                                1065
*   TSLLSTSR=''B;                   /* CLEAR PARMLIST                */
         L     @08,@PC00001                                        1066
         L     @08,TBLXTSLP(,@08)                                  1066
         L     @05,TSLPMLAD(,@08)                                  1066
         XC    TSLLSTSR(16,@05),TSLLSTSR(@05)                      1066
*   TSLFUNCT=TSLFLSRH;              /* SEARCH NPRE LIST FOR SYSMOD   */
         MVI   TSLFUNCT(@08),X'02'                                 1067
*   TSLLSMD=IOPNAM17;               /* SYSMOD NAME                   */
         L     @15,@PC00013                                        1068
         MVC   TSLLSMD(7,@05),IOPNAM17(@15)                        1068
*   TSLLOFST=NPCLSOFF;              /* OFFSET OF THE NPRE LIST       */
         ST    NPCLSOFF,TSLLOFST(,@05)                             1069
*   CALL HMASMTSB(TSLPARMS);                                       1070
         ST    @08,@AL00001                                        1070
         L     @15,@CV01237                                        1070
         LA    @01,@AL00001                                        1070
         BALR  @14,@15                                             1070
*   NPCICTP=TSLLRTNP;               /* ICT ENTRY PTR                 */
         L     @08,@PC00001                                        1071
         L     @02,TBLXTSLP(,@08)                                  1071
         L     @02,TSLPMLAD(,@02)                                  1071
         L     NPCICTP,TSLLRTNP(,@02)                              1071
*   RFY                                                            1072
*     RTNCODE RSTD;                                                1072
*   IF RTNCODE=TSLFOUND THEN        /* NPREING SYSMOD FOUND?         */
         LTR   RTNCODE,RTNCODE                                     1073
         BNZ   @RF01073                                            1073
*     DO;                           /* YES,                          */
*       RFY                                                        1075
*         RTNCODE UNRSTD;                                          1075
*       NPCRC=STOPSMD;              /* NPRE ERROR - STOP SYSMOD      */
*                                                                  1076
         LA    NPCRC,8                                             1076
*       /*************************************************************/
*       /*                                                           */
*       /* ISSUE MESSAGE HMA372 NPRE ERROR - SYSMOD XXXXXXX NPRES    */
*       /* XXXXXXX BOTH OF WHICH ARE BEING XXXXXXXX                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1077
*       DO;                         /* HMASMPMG M1(HMA372I)TYPE(ERR)V
*                                      AR((NPCICTP),IOPNAM17,TBLXFUND
*                                      )TARGET(SYSOUT,LOG)           */
*         HMASMMGP=HMASMMGP&&HMASMMGP;/* SET PARMS TO ZEROS          */
         XC    HMASMMGP(28),HMASMMGP                               1078
*         MGPMGNO1=HMA372I;         /* SET UP MSG 1 CODE             */
         MVC   MGPMGNO1(2),@CH01245                                1079
*         MGPTYPE=MGPERR;           /* SET MESSAGE TYPE              */
         MVI   MGPTYPE,X'03'                                       1080
*         MGPPRINT='1'B;            /* SET TARGET FLAG               */
*         MGPHLDS='1'B;             /* SET TARGET FLAG               */
         OI    MGPPRINT,B'10010000'                                1082
*         MGPVARPT(1)=(NPCICTP);    /* SET VARIABLE PTR              */
         ST    NPCICTP,MGPVARPT                                    1083
*         MGPVARPT(2)=ADDR(IOPNAM17);/* SET VARIABLE PTR             */
         L     @02,@PC00013                                        1084
         LA    @02,IOPNAM17(,@02)                                  1084
         ST    @02,MGPVARPT+4                                      1084
*         MGPVARPT(3)=ADDR(TBLXFUND);/* SET VARIABLE PTR             */
         LA    @08,TBLXFUND(,@08)                                  1085
         ST    @08,MGPVARPT+8                                      1085
*         CALL HMASMMSG(HMASMMGP);  /* HAVE MESSAGE ISSUED           */
         L     @15,@CV01230                                        1086
         LA    @01,@AL01086                                        1086
         BALR  @14,@15                                             1086
*       END;                        /*                               */
*     END;                          /*                               */
*   ELSE                                                           1089
*     ;                             /* NPREOR NOT FOUND IN ICT       */
*                                                                  1089
@RF01073 DS    0H                                                  1090
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK THAT CURRENT SYSMOD DOES NOT NPRE SYSMOD IN THE ICT     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1090
*   NPCFOUND=OFF;                   /* ASSUME NOT FOUND              */
         NI    NPCFOUND,B'01111111'                                1090
*   TSLENTSR=''B;                   /* CLEAR TSB PARMLIST            */
         L     @08,@PC00001                                        1091
         L     @08,TBLXTSLP(,@08)                                  1091
         L     @02,TSLPMLAD(,@08)                                  1091
         XC    TSLENTSR(16,@02),TSLENTSR(@02)                      1091
*   TSLEBGNP=ADDR(IOPPTFVR);        /* BEGINNING OF SEARCH PTR       */
         L     @15,@PC00013                                        1092
         LA    @15,IOPPTFVR(,@15)                                  1092
         ST    @15,TSLEBGNP(,@02)                                  1092
*   TSLFUNCT=TSLFENSR;              /* FUNCTION IS SEARCH IOP      1093
*                                      SUB-ENTRY                     */
         MVI   TSLFUNCT(@08),X'06'                                 1093
*   TSLETYPE=IOPPNPR;               /* TYPE IS NPRE ENTRY            */
         MVI   TSLETYPE(@02),X'A3'                                 1094
*   TSLEVER#=NPCVER#;               /* ++VER NUMBER                  */
         L     @08,@PC00013+4                                      1095
         MVC   TSLEVER#(1,@02),NPCVER#(@08)                        1095
*   DO WHILE NPCRC=ZERO             /* PROCESS ALL NPRE'S IN THE IOP */
*         &NPCFOUND=OFF             /*                               */
*         &NPCEOLST=OFF;            /*                               */
         B     @DE01096                                            1096
@DL01096 DS    0H                                                  1097
*     CALL HMASMTSB(TSLPARMS);      /* SEARCH FOR NPRE TYPE          */
         L     @08,@PC00001                                        1097
         L     @08,TBLXTSLP(,@08)                                  1097
         ST    @08,@AL00001                                        1097
         L     @15,@CV01237                                        1097
         LA    @01,@AL00001                                        1097
         BALR  @14,@15                                             1097
*     TSLEONXT=ON;                  /* SET TO GET NEXT NPRE          */
         L     @08,@PC00001                                        1098
         L     @08,TBLXTSLP(,@08)                                  1098
         L     @08,TSLPMLAD(,@08)                                  1098
         OI    TSLEONXT(@08),B'10000000'                           1098
*     NPCRTN@=TSLEFNDP;             /*                               */
         L     NPCRTN@,TSLEFNDP(,@08)                              1099
*     RFY                                                          1100
*       RTNCODE RSTD;                                              1100
*     IF RTNCODE^=ZERO THEN         /* NOT FOUND ?                   */
         LTR   RTNCODE,RTNCODE                                     1101
         BZ    @RF01101                                            1101
*       DO;                         /* YES,                          */
*         NPCEOLST=ON;              /* STOP THE SEARCH               */
         OI    NPCEOLST,B'01000000'                                1103
*       END;                        /*                               */
*     ELSE                          /* NOT FOUND                     */
*       DO;                         /*                               */
         B     @RC01101                                            1105
@RF01101 DS    0H                                                  1106
*         RFY                                                      1106
*           TSLPARMS BASED(ADDR(TPATSL2));                         1106
*         TSLSICDS=''B;             /* CLEAR PARMLIST                */
         LA    @14,TPATSL2                                         1107
         L     @08,TSLPMLAD(,@14)                                  1107
         XC    TSLSICDS(20,@08),TSLSICDS(@08)                      1107
*         TSLSOICT=ON;              /* SEARCH THE ICT ...            */
*         TSLSOCDS=ON;              /* ... AND (A)CDS                */
         OI    TSLSOICT(@08),B'11000000'                           1109
*         TSLFUNCT=TSLFICSR;        /* SEARCH ICT AND (A)CDS FOR NPRE
*                                      LIST SYSMOD                   */
         MVI   TSLFUNCT(@14),X'04'                                 1110
*         TSLSSMD=NPCRTN@->BASEDSMD;/* NPRE SYSMOD NAME              */
         MVC   TSLSSMD(7,@08),BASEDSMD(NPCRTN@)                    1111
*         CALL HMASMTSB(TSLPARMS);                                 1112
         ST    @14,@AL00001                                        1112
         L     @15,@CV01237                                        1112
         LA    @01,@AL00001                                        1112
         BALR  @14,@15                                             1112
*         NPCICTP=TSLICTP;          /* ICT PTR                       */
         LA    @14,TPATSL2                                         1113
         L     @14,TSLPMLAD(,@14)                                  1113
         L     NPCICTP,TSLICTP(,@14)                               1113
*         RFY                                                      1114
*           RTNCODE RSTD;           /*                               */
*         IF TSLIOK=ON              /* ENTRY IS IN THE ICT ...       */
*             ×TSLISUP=ON THEN      /* ... OR SUP'ED                 */
         TM    TSLIOK(@14),B'01100000'                             1115
         BZ    @RF01115                                            1115
*           DO;                     /* YES,                          */
*             RFY                                                  1117
*               RTNCODE UNRSTD;     /*                               */
*             NPCRC=STOPSMD;        /* STOP THE PTF                  */
*                                                                  1118
         LA    NPCRC,8                                             1118
*             /*******************************************************/
*             /*                                                     */
*             /* ISSUE MESSAGE HMA372 NPRE ERROR - SYSMOD XXXXXXX    */
*             /* NPRES XXXXXXX BOTH OF WHICH ARE BEING XXXXXXXX      */
*             /*                                                     */
*             /*******************************************************/
*                                                                  1119
*             DO;                   /* HMASMPMG M1(HMA372I)TYPE(ERR)V
*                                      AR(IOPNAM17,(NPCICTP),TBLXFUND
*                                      )TARGET(SYSOUT,LOG)           */
*               HMASMMGP=HMASMMGP&&HMASMMGP;/* SET PARMS TO ZEROS    */
         XC    HMASMMGP(28),HMASMMGP                               1120
*               MGPMGNO1=HMA372I;   /* SET UP MSG 1 CODE             */
         MVC   MGPMGNO1(2),@CH01245                                1121
*               MGPTYPE=MGPERR;     /* SET MESSAGE TYPE              */
         MVI   MGPTYPE,X'03'                                       1122
*               MGPPRINT='1'B;      /* SET TARGET FLAG               */
*               MGPHLDS='1'B;       /* SET TARGET FLAG               */
         OI    MGPPRINT,B'10010000'                                1124
*               MGPVARPT(1)=ADDR(IOPNAM17);/* SET VARIABLE PTR       */
         L     @08,@PC00013                                        1125
         LA    @08,IOPNAM17(,@08)                                  1125
         ST    @08,MGPVARPT                                        1125
*               MGPVARPT(2)=(NPCICTP);/* SET VARIABLE PTR            */
         ST    NPCICTP,MGPVARPT+4                                  1126
*               MGPVARPT(3)=ADDR(TBLXFUND);/* SET VARIABLE PTR       */
         L     @08,@PC00001                                        1127
         LA    @08,TBLXFUND(,@08)                                  1127
         ST    @08,MGPVARPT+8                                      1127
*               CALL HMASMMSG(HMASMMGP);/* HAVE MESSAGE ISSUED       */
         L     @15,@CV01230                                        1128
         LA    @01,@AL01128                                        1128
         BALR  @14,@15                                             1128
*             END;                  /*                               */
*           END;                    /*                               */
*         ELSE                      /* NOT FOUND IN THE ICT          */
*           DO;                     /* YES,                          */
         B     @RC01115                                            1131
@RF01115 DS    0H                                                  1132
*             IF TSLSCFND=ON        /* FOUND ON THE (A)CDS ...       */
*                 &TSLSCDEL=OFF THEN/* ... AND NOT DELETED?          */
         LA    @08,TPATSL2                                         1132
         L     @08,TSLPMLAD(,@08)                                  1132
         TM    TSLSCFND(@08),B'10000000'                           1132
         BNO   @RF01132                                            1132
         TM    TSLSCDEL(@08),B'00010000'                           1132
         BNZ   @RF01132                                            1132
*               DO;                 /* YES,                          */
*                 RFY                                              1134
*                   TSLPARMS BASED;                                1134
*                 NPCRC=STOPSMD;    /* STOP THE PTF                  */
*                                                                  1135
         LA    NPCRC,8                                             1135
*                 /***************************************************/
*                 /*                                                 */
*                 /* ISSUE MESSAGE HMA427 NPRE ERROR - SYSMOD XXXXXXX*/
*                 /* NPRES XXXXXXX WHICH IS ALREADY XXXXXXXX         */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1136
*                 DO;               /* HMASMPMG M1(HMA427I)TYPE(ERR)V
*                                      AR(IOPNAM17,(NPCRTN@),TBLXFUND
*                                      )TARGET(SYSOUT,LOG)           */
*                   HMASMMGP=HMASMMGP&&HMASMMGP;/* SET PARMS TO ZEROS*/
         XC    HMASMMGP(28),HMASMMGP                               1137
*                   MGPMGNO1=HMA427I;/* SET UP MSG 1 CODE            */
         MVC   MGPMGNO1(2),@CH01253                                1138
*                   MGPTYPE=MGPERR; /* SET MESSAGE TYPE              */
         MVI   MGPTYPE,X'03'                                       1139
*                   MGPPRINT='1'B;  /* SET TARGET FLAG               */
*                   MGPHLDS='1'B;   /* SET TARGET FLAG               */
         OI    MGPPRINT,B'10010000'                                1141
*                   MGPVARPT(1)=ADDR(IOPNAM17);/* SET VARIABLE PTR   */
         L     @08,@PC00013                                        1142
         LA    @08,IOPNAM17(,@08)                                  1142
         ST    @08,MGPVARPT                                        1142
*                   MGPVARPT(2)=(NPCRTN@);/* SET VARIABLE PTR        */
         ST    NPCRTN@,MGPVARPT+4                                  1143
*                   MGPVARPT(3)=ADDR(TBLXFUND);/* SET VARIABLE PTR   */
         L     @08,@PC00001                                        1144
         LA    @08,TBLXFUND(,@08)                                  1144
         ST    @08,MGPVARPT+8                                      1144
*                   CALL HMASMMSG(HMASMMGP);/* HAVE MESSAGE ISSUED   */
         L     @15,@CV01230                                        1145
         LA    @01,@AL01145                                        1145
         BALR  @14,@15                                             1145
*                 END;              /*                               */
*               END;                                               1147
*             ELSE                                                 1148
*               ;                   /* NOT ON THE (A)CDS OR DELETED  */
@RF01132 DS    0H                                                  1149
*           END;                    /*                               */
*       END;                        /*                               */
@RC01115 DS    0H                                                  1151
*   END;                            /* END OF IOP NPRE SEARCH LOOP   */
@RC01101 DS    0H                                                  1151
@DE01096 LTR   NPCRC,NPCRC                                         1151
         BNZ   @DC01096                                            1151
         TM    NPCFOUND,B'11000000'                                1151
         BZ    @DL01096                                            1151
@DC01096 DS    0H                                                  1152
*   RETURN CODE(NPCRC);             /* RETURN WITH THE RETURN CODE   */
         LR    @15,NPCRC                                           1152
         L     @14,@SA00013                                        1152
         LM    @00,@12,@SA00013+8                                  1152
         BR    @14                                                 1152
*   RFY                                                            1153
*     HMASMIOP BASED;                                              1153
*   RFY                                                            1154
*     TSLPARMS BASED;                                              1154
*   END NPRECK;                     /*                               */
*                                                                  1156
*   /*****************************************************************/
*   /*                                                               */
*   /* DELCK - CHECK FOR DELETE ERRORS                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1156
*DELCK:                                                            1156
*   PROC(DLCIOP,                    /* EXTENDED IOP FOR CURRENT    1156
*                                      SYSMOD'S SYSMOD ENTRY         */
*       DLCVER#);                   /* ++VER NUMBER FOR WHICH      1156
*                                      CHECKING IS TO BE DONE        */
DELCK    STM   @14,@12,@SA00014                                    1156
         MVC   @PC00014(8),0(@01)                                  1156
*   DCL                                                            1157
*     DLCIOP CHAR(*);               /* EXTENDED IOP INPUT            */
*   DCL                                                            1158
*     DLCVER# FIXED(8);             /* ++VER NUMBER                  */
*   DCL                                                            1159
*     DLCLSOFF FIXED(31);           /* OFFSET OF DEL LIST IN PTF ENT */
*   DCL                                                            1160
*     DLCRC FIXED(15);              /*                               */
*   DCL                                                            1161
*     DLCICTP PTR(31);              /* PTR TO ICT PTF FOR DELETEING
*                                      SYSMOD                        */
*   DCL                                                            1162
*     1 DLCFLAGS,                   /*                               */
*      2 DLCFOUND BIT(1),           /* DELETE MATCH FOUND            */
*      2 DLCEOLST BIT(1),           /* END OF SUB-ENTRIES FOUND IN 1162
*                                      DELETE SEARCH                 */
*      2 * BIT(6);                  /*                               */
*   DCL                                                            1163
*     DLCRTN@ PTR(31);              /* ICT ENTRY PTR RETURNED BY TSB */
*   RFY                                                            1164
*     HMASMIOP BASED(ADDR(DLCIOP));                                1164
*   RFY                                                            1165
*     TSLPARMS BASED(TBLXTSLP);                                    1165
*   DLCRC=ZERO;                     /* CLEAR THE RETURN CODE         */
         SLR   DLCRC,DLCRC                                         1166
*   DLCFLAGS=''B;                   /* CLEAR LOCAL CONTROL FLAGS     */
*                                                                  1167
         MVI   DLCFLAGS,X'00'                                      1167
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK TO SEE IF DELETED BY SYSMOD IN ICT                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1168
*   RFY                                                            1168
*     ICTPTF BASED(CCAICPTF);                                      1168
*   DLCLSOFF=ADDR(ICTPDCHN(1))      /* OFFSET OF DELETE CHAIN PTR    */
*       -ADDR(ICTPTF(1));           /*                               */
         L     @08,CCAICPTF(,CCAPTR)                               1169
         LA    DLCLSOFF,ICTPDCHN(,@08)                             1169
         SLR   DLCLSOFF,@08                                        1169
*   RFY                                                            1170
*     ICTPTF BASED;                                                1170
*   TSLLSTSR=''B;                   /* CLEAR PARMLIST                */
         L     @08,@PC00001                                        1171
         L     @08,TBLXTSLP(,@08)                                  1171
         L     @04,TSLPMLAD(,@08)                                  1171
         XC    TSLLSTSR(16,@04),TSLLSTSR(@04)                      1171
*   TSLFUNCT=TSLFLSRH;              /* SEARCH DELETE LIST FOR SYSMOD */
         MVI   TSLFUNCT(@08),X'02'                                 1172
*   TSLLSMD=IOPNAM17;               /* SYSMOD NAME                   */
         L     @15,@PC00014                                        1173
         MVC   TSLLSMD(7,@04),IOPNAM17(@15)                        1173
*   TSLLOFST=DLCLSOFF;              /* OFFSET OF THE DELETE LIST     */
         ST    DLCLSOFF,TSLLOFST(,@04)                             1174
*   CALL HMASMTSB(TSLPARMS);                                       1175
         ST    @08,@AL00001                                        1175
         L     @15,@CV01237                                        1175
         LA    @01,@AL00001                                        1175
         BALR  @14,@15                                             1175
*   DLCICTP=TSLLRTNP;               /* ICT ENTRY PTR                 */
         L     @08,@PC00001                                        1176
         L     @02,TBLXTSLP(,@08)                                  1176
         L     @02,TSLPMLAD(,@02)                                  1176
         L     DLCICTP,TSLLRTNP(,@02)                              1176
*   RFY                                                            1177
*     RTNCODE RSTD;                                                1177
*   IF RTNCODE=TSLFOUND THEN        /* DELETING SYSMOD FOUND?        */
         LTR   RTNCODE,RTNCODE                                     1178
         BNZ   @RF01178                                            1178
*     DO;                           /* YES,                          */
*       RFY                                                        1180
*         RTNCODE UNRSTD;                                          1180
*       DLCRC=STOPSMD;              /* DELETE ERROR - STOP SYSMOD    */
*                                                                  1181
         LA    DLCRC,8                                             1181
*       /*************************************************************/
*       /*                                                           */
*       /* ISSUE MESSAGE HMA364 DELETE ERROR - SYSMOD XXXXXXX DELETES*/
*       /* XXXXXXX BOTH OF WHICH ARE BEING XXXXXXXX                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1182
*       DO;                         /* HMASMPMG M1(HMA364I)TYPE(ERR)V
*                                      AR((DLCICTP),IOPNAM17,TBLXFUND
*                                      )TARGET(SYSOUT,LOG)           */
*         HMASMMGP=HMASMMGP&&HMASMMGP;/* SET PARMS TO ZEROS          */
         XC    HMASMMGP(28),HMASMMGP                               1183
*         MGPMGNO1=HMA364I;         /* SET UP MSG 1 CODE             */
         MVC   MGPMGNO1(2),@CH00791                                1184
*         MGPTYPE=MGPERR;           /* SET MESSAGE TYPE              */
         MVI   MGPTYPE,X'03'                                       1185
*         MGPPRINT='1'B;            /* SET TARGET FLAG               */
*         MGPHLDS='1'B;             /* SET TARGET FLAG               */
         OI    MGPPRINT,B'10010000'                                1187
*         MGPVARPT(1)=(DLCICTP);    /* SET VARIABLE PTR              */
         ST    DLCICTP,MGPVARPT                                    1188
*         MGPVARPT(2)=ADDR(IOPNAM17);/* SET VARIABLE PTR             */
         L     @02,@PC00014                                        1189
         LA    @02,IOPNAM17(,@02)                                  1189
         ST    @02,MGPVARPT+4                                      1189
*         MGPVARPT(3)=ADDR(TBLXFUND);/* SET VARIABLE PTR             */
         LA    @08,TBLXFUND(,@08)                                  1190
         ST    @08,MGPVARPT+8                                      1190
*         CALL HMASMMSG(HMASMMGP);  /* HAVE MESSAGE ISSUED           */
         L     @15,@CV01230                                        1191
         LA    @01,@AL01191                                        1191
         BALR  @14,@15                                             1191
*       END;                        /*                               */
*     END;                          /*                               */
*   ELSE                                                           1194
*     ;                             /* DELETOR NOT FOUND IN ICT      */
*                                                                  1194
@RF01178 DS    0H                                                  1195
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK THAT CURRENT SYSMOD DOES NOT DELETE SYSMOD IN THE ICT   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1195
*   DLCFOUND=OFF;                   /* ASSUME NOT FOUND              */
         NI    DLCFOUND,B'01111111'                                1195
*   TSLENTSR=''B;                   /* CLEAR TSB PARMLIST            */
         L     @08,@PC00001                                        1196
         L     @08,TBLXTSLP(,@08)                                  1196
         L     @02,TSLPMLAD(,@08)                                  1196
         XC    TSLENTSR(16,@02),TSLENTSR(@02)                      1196
*   TSLEBGNP=ADDR(IOPPTFVR);        /* BEGINNING OF SEARCH PTR       */
         L     @15,@PC00014                                        1197
         LA    @15,IOPPTFVR(,@15)                                  1197
         ST    @15,TSLEBGNP(,@02)                                  1197
*   TSLFUNCT=TSLFENSR;              /* FUNCTION IS SEARCH IOP      1198
*                                      SUB-ENTRY                     */
         MVI   TSLFUNCT(@08),X'06'                                 1198
*   TSLETYPE=IOPPDEL;               /* TYPE IS DELETE ENTRY          */
         MVI   TSLETYPE(@02),X'A8'                                 1199
*   TSLEVER#=DLCVER#;               /* ++VER NUMBER                  */
         L     @08,@PC00014+4                                      1200
         MVC   TSLEVER#(1,@02),DLCVER#(@08)                        1200
*   DO WHILE DLCRC=ZERO             /*                               */
*         &DLCFOUND=OFF             /*                               */
*         &DLCEOLST=OFF;            /*                               */
         B     @DE01201                                            1201
@DL01201 DS    0H                                                  1202
*     CALL HMASMTSB(TSLPARMS);      /* SEARCH FOR DEL TYPE           */
         L     @08,@PC00001                                        1202
         L     @08,TBLXTSLP(,@08)                                  1202
         ST    @08,@AL00001                                        1202
         L     @15,@CV01237                                        1202
         LA    @01,@AL00001                                        1202
         BALR  @14,@15                                             1202
*     RFY                                                          1203
*       RTNCODE RSTD;                                              1203
*     TSLEONXT=ON;                  /* SET TO GET NEXT DELETE        */
         L     @14,@PC00001                                        1204
         L     @14,TBLXTSLP(,@14)                                  1204
         L     @14,TSLPMLAD(,@14)                                  1204
         OI    TSLEONXT(@14),B'10000000'                           1204
*     DLCRTN@=TSLEFNDP;             /* SAVE PTF TO FOUND ENTRY       */
         L     DLCRTN@,TSLEFNDP(,@14)                              1205
*     IF RTNCODE^=ZERO THEN         /* NOT FOUND ?                   */
         LTR   RTNCODE,RTNCODE                                     1206
         BZ    @RF01206                                            1206
*       DO;                         /* YES,                          */
*         DLCEOLST=ON;              /* STOP THE SEARCH               */
         OI    DLCEOLST,B'01000000'                                1208
*       END;                        /*                               */
*     ELSE                          /* NOT FOUND                     */
*       DO;                         /*                               */
         B     @RC01206                                            1210
@RF01206 DS    0H                                                  1211
*         RFY                                                      1211
*           TSLPARMS BASED(ADDR(TPATSL2));                         1211
*         TSLSICDS=''B;             /* CLEAR PARMLIST                */
         LA    @14,TPATSL2                                         1212
         L     @08,TSLPMLAD(,@14)                                  1212
         XC    TSLSICDS(20,@08),TSLSICDS(@08)                      1212
*         TSLSOICT=ON;              /* SEARCH THE ICT ...            */
*         TSLSOCDS=ON;              /* ... AND (A)CDS                */
         OI    TSLSOICT(@08),B'11000000'                           1214
*         TSLFUNCT=TSLFICSR;        /* SEARCH ICT AND (A)CDS FOR   1215
*                                      DELETE LIST SYSMOD            */
         MVI   TSLFUNCT(@14),X'04'                                 1215
*         TSLSSMD=DLCRTN@->BASEDSMD;/* DELETE SYSMOD NAME            */
         MVC   TSLSSMD(7,@08),BASEDSMD(DLCRTN@)                    1216
*         CALL HMASMTSB(TSLPARMS);                                 1217
         ST    @14,@AL00001                                        1217
         L     @15,@CV01237                                        1217
         LA    @01,@AL00001                                        1217
         BALR  @14,@15                                             1217
*         DLCICTP=TSLICTP;          /* ICT PTR                       */
         LA    @14,TPATSL2                                         1218
         L     @14,TSLPMLAD(,@14)                                  1218
         L     DLCICTP,TSLICTP(,@14)                               1218
*         RFY                                                      1219
*           RTNCODE RSTD;           /*                               */
*         IF TSLIOK=ON              /* ENTRY IS IN THE ICT ...       */
*             ×TSLISUP=ON THEN      /* ... OR SUP'ED                 */
         TM    TSLIOK(@14),B'01100000'                             1220
         BZ    @RF01220                                            1220
*           DO;                     /* YES,                          */
*             RFY                                                  1222
*               RTNCODE UNRSTD;     /*                               */
*             DLCRC=STOPSMD;        /* STOP THE PTF                  */
*                                                                  1223
         LA    DLCRC,8                                             1223
*             /*******************************************************/
*             /*                                                     */
*             /* ISSUE MESSAGE HMA364 DELETE ERROR - SYSMOD XXXXXXX  */
*             /* DELETES XXXXXXX BOTH OF WHICH ARE BEING XXXXXXXX    */
*             /*                                                     */
*             /*******************************************************/
*                                                                  1224
*             DO;                   /* HMASMPMG M1(HMA364I)TYPE(ERR)V
*                                      AR(IOPNAM17,(DLCRTN@),TBLXFUND
*                                      )TARGET(SYSOUT,LOG)           */
*               HMASMMGP=HMASMMGP&&HMASMMGP;/* SET PARMS TO ZEROS    */
         XC    HMASMMGP(28),HMASMMGP                               1225
*               MGPMGNO1=HMA364I;   /* SET UP MSG 1 CODE             */
         MVC   MGPMGNO1(2),@CH00791                                1226
*               MGPTYPE=MGPERR;     /* SET MESSAGE TYPE              */
         MVI   MGPTYPE,X'03'                                       1227
*               MGPPRINT='1'B;      /* SET TARGET FLAG               */
*               MGPHLDS='1'B;       /* SET TARGET FLAG               */
         OI    MGPPRINT,B'10010000'                                1229
*               MGPVARPT(1)=ADDR(IOPNAM17);/* SET VARIABLE PTR       */
         L     @08,@PC00014                                        1230
         LA    @08,IOPNAM17(,@08)                                  1230
         ST    @08,MGPVARPT                                        1230
*               MGPVARPT(2)=(DLCRTN@);/* SET VARIABLE PTR            */
         ST    DLCRTN@,MGPVARPT+4                                  1231
*               MGPVARPT(3)=ADDR(TBLXFUND);/* SET VARIABLE PTR       */
         L     @08,@PC00001                                        1232
         LA    @08,TBLXFUND(,@08)                                  1232
         ST    @08,MGPVARPT+8                                      1232
*               CALL HMASMMSG(HMASMMGP);/* HAVE MESSAGE ISSUED       */
         L     @15,@CV01230                                        1233
         LA    @01,@AL01233                                        1233
         BALR  @14,@15                                             1233
*             END;                  /*                               */
*           END;                    /*                               */
*         ELSE                      /* NOT FOUND IN THE ICT          */
*           DO;                     /* YES,                          */
         B     @RC01220                                            1236
@RF01220 DS    0H                                                  1237
*             IF TSLSCFND=ON        /* FOUND ON THE (A)CDS ...       */
*                 &TSLSCDEL=OFF THEN/* ... AND NOT DELETED?          */
         LA    @08,TPATSL2                                         1237
         L     @08,TSLPMLAD(,@08)                                  1237
         TM    TSLSCFND(@08),B'10000000'                           1237
         BNO   @RF01237                                            1237
         TM    TSLSCDEL(@08),B'00010000'                           1237
         BNZ   @RF01237                                            1237
*               DO;                 /* YES,                          */
*                 RFY                                              1239
*                   TSLPARMS BASED(TBLXTSLP);                      1239
*                 DLCRC=STOPSMD;    /* STOP THE PTF                  */
*                                                                  1240
         LA    DLCRC,8                                             1240
*                 /***************************************************/
*                 /*                                                 */
*                 /* ISSUE MESSAGE HMA426 DELETE ERROR - SYSMOD      */
*                 /* XXXXXXX DELETES XXXXXXX WHICH IS ALREADY        */
*                 /* XXXXXXXX                                        */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1241
*                 DO;               /* HMASMPMG M1(HMA426I)TYPE(ERR)V
*                                      AR(IOPNAM17,(DLCRTN@),TBLXFUND
*                                      )TARGET(SYSOUT,LOG)           */
*                   HMASMMGP=HMASMMGP&&HMASMMGP;/* SET PARMS TO ZEROS*/
         XC    HMASMMGP(28),HMASMMGP                               1242
*                   MGPMGNO1=HMA426I;/* SET UP MSG 1 CODE            */
         MVC   MGPMGNO1(2),@CH01255                                1243
*                   MGPTYPE=MGPERR; /* SET MESSAGE TYPE              */
         MVI   MGPTYPE,X'03'                                       1244
*                   MGPPRINT='1'B;  /* SET TARGET FLAG               */
*                   MGPHLDS='1'B;   /* SET TARGET FLAG               */
         OI    MGPPRINT,B'10010000'                                1246
*                   MGPVARPT(1)=ADDR(IOPNAM17);/* SET VARIABLE PTR   */
         L     @08,@PC00014                                        1247
         LA    @08,IOPNAM17(,@08)                                  1247
         ST    @08,MGPVARPT                                        1247
*                   MGPVARPT(2)=(DLCRTN@);/* SET VARIABLE PTR        */
         ST    DLCRTN@,MGPVARPT+4                                  1248
*                   MGPVARPT(3)=ADDR(TBLXFUND);/* SET VARIABLE PTR   */
         L     @08,@PC00001                                        1249
         LA    @08,TBLXFUND(,@08)                                  1249
         ST    @08,MGPVARPT+8                                      1249
*                   CALL HMASMMSG(HMASMMGP);/* HAVE MESSAGE ISSUED   */
         L     @15,@CV01230                                        1250
         LA    @01,@AL01250                                        1250
         BALR  @14,@15                                             1250
*                 END;              /*                               */
*               END;                                               1252
*             ELSE                                                 1253
*               ;                   /* NOT ON THE (A)CDS OR DELETED  */
@RF01237 DS    0H                                                  1254
*           END;                    /*                               */
*       END;                        /*                               */
@RC01220 DS    0H                                                  1256
*   END;                            /* END OF IOP DELETE SEARCH LOOP */
@RC01206 DS    0H                                                  1256
@DE01201 LTR   DLCRC,DLCRC                                         1256
         BNZ   @DC01201                                            1256
         TM    DLCFOUND,B'11000000'                                1256
         BZ    @DL01201                                            1256
@DC01201 DS    0H                                                  1257
*   RETURN CODE(DLCRC);             /* RETURN WITH THE RETURN CODE   */
         LR    @15,DLCRC                                           1257
         L     @14,@SA00014                                        1257
         LM    @00,@12,@SA00014+8                                  1257
         BR    @14                                                 1257
*   RFY                                                            1258
*     HMASMIOP BASED;                                              1258
*   RFY                                                            1259
*     TSLPARMS BASED;                                              1259
*   END DELCK;                      /*                               */
*                                                                  1261
*   /*****************************************************************/
*   /*                                                               */
*   /* GROUPADD -                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1261
*GROUPADD:                                                         1261
*   PROC;                                                          1261
GROUPADD STM   @14,@12,@SA00015                                    1261
*   DCL                                                            1262
*     GRARC FIXED(15);              /* RETURN CODE                   */
*   DCL                                                            1263
*     GRASTAT BIT(8);               /*                               */
*   DCL                                                            1264
*     GRAPTFX FIXED(15);            /* PTF SEARCH INDEX              */
*   DCL                                                            1265
*     GRAPREX FIXED(15);            /* PRE SEARCH INDEX              */
*   DCL                                                            1266
*     GRAREQX FIXED(15);            /* REQ SEARCH INDEX              */
*   DCL                                                            1267
*     GRAIRQX FIXED(15);            /* IRQ SEARCH INDEX              */
*   DCL                                                            1268
*     GRAPTR PTR(31);               /* STATUS BYTE OFFSET PTR        */
*   DCL                                                            1269
*     GRASOFFS FIXED(31);           /* OFFSET OF SCLSTAT WITHIN    1269
*                                      SCLMAP                        */
*   DCL                                                            1270
*     GRAIFOPT CHAR(1);             /* ++IF PROCESSING OPTION TO BE
*                                      USED                          */
*   RFY                                                            1271
*     ICTPTF BASED(CCAICPTF);                                      1271
*   RFY                                                            1272
*     ICTPRELS BASED(ICTPPCHN(GRAPTFX));                           1272
*   RFY                                                            1273
*     ICTREQLS BASED(ICTPRCHN(GRAPTFX));                           1273
*   RFY                                                            1274
*     ICTIRQLS BASED(ICTPICHN(GRAPTFX));                           1274
*   RFY                                                            1275
*     HMASMGTP BASED(TBLXSCGT);                                    1275
*   RFY                                                            1276
*     SCLMAP BASED(GTPBUFAD);                                      1276
*   GRARC=ZERO;                     /* CLEAR THE RETURN CODE         */
         SLR   GRARC,GRARC                                         1277
*   IF TBLGROUP=ON THEN             /* GROUP ?                       */
         L     @08,@PC00001                                        1278
         L     @08,TBLXTBL(,@08)                                   1278
         TM    TBLGROUP(@08),B'00100000'                           1278
         BNO   @RF01278                                            1278
*     DO;                           /* YES,                          */
*                                                                  1279
*       /*************************************************************/
*       /*                                                           */
*       /* CREATE MASK TO OR INTO SCL STATUS FLAGS                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1280
*       GRASOFFS=ADDR(SCLSTAT)-ADDR(SCLMAP);/* OFFSET OF STATUS BYTE
*                                      IN SCL                        */
         LA    GRASOFFS,15                                         1280
*       GRASTAT=''B;                /* CLEAR STATUS BYTE             */
         MVI   GRASTAT,X'00'                                       1281
*       GRAPTR=                     /*                               */
*           (ADDR(GRASTAT)-GRASOFFS);/* SET GRASTAT CANDIDATE FLAG AS
*                                      ...                           */
         LA    GRAPTR,GRASTAT                                      1282
         SLR   GRAPTR,GRASOFFS                                     1282
*       GRAPTR->                    /*                               */
*           SCLCAND=ON;             /* ... MAPPED IN THE SCLSTAT BYTE*/
         OI    SCLCAND(GRAPTR),B'00100000'                         1283
*       DO GRAPTFX=1 BY 1           /* SEARCH ENTIRE ICT PTF SECTION */
*             WHILE(ICTPEND(GRAPTFX)^=ICTENDNT/*                     */
*             &GRARC<STOPFUNC);     /*                               */
         LA    GRAPTFX,1                                           1284
         B     @DE01284                                            1284
@DL01284 DS    0H                                                  1285
*         IF ICTPPASS(GRAPTFX)=ON THEN/* ADDED IN THIS PASS?         */
         LR    @08,GRAPTFX                                         1285
         MH    @08,@CH01757                                        1285
         L     @05,CCAICPTF(,CCAPTR)                               1285
         ST    @08,@TF00001                                        1285
         ALR   @08,@05                                             1285
         AL    @08,@CF01791                                        1285
         TM    ICTPPASS-16(@08),B'10000000'                        1285
         BNO   @RF01285                                            1285
*           DO;                     /* YES, PROCESS IT               */
*             IF ICTPNOGO(GRAPTFX)=OFF/* NOT NOGO ...                */
*                 &ICTPDEXP(GRAPTFX)=OFF/* ... AND NOT DELETED       */
*                 &ICTPDIMP(GRAPTFX)=OFF/* ...                       */
*                 &ICTPSUPN(GRAPTFX)=ZERO THEN/* ... AND NOT SUP'ED  */
         LR    @08,@05                                             1287
         AL    @08,@TF00001                                        1287
         AL    @08,@CF01785                                        1287
         TM    ICTPNOGO-8(@08),B'01000000'                         1287
         BNZ   @RF01287                                            1287
         LR    @08,@05                                             1287
         AL    @08,@TF00001                                        1287
         AL    @08,@CF01787                                        1287
         TM    ICTPDEXP-13(@08),B'00110000'                        1287
         BNZ   @RF01287                                            1287
         AL    @05,@TF00001                                        1287
         AL    @05,@CF01786                                        1287
         SLR   @08,@08                                             1287
         ICM   @08,3,ICTPSUPN-20(@05)                              1287
         LTR   @08,@08                                             1287
         BNZ   @RF01287                                            1287
*               DO;                 /*                               */
*                                                                  1288
*                 /***************************************************/
*                 /*                                                 */
*                 /* MARK PRE'S AS CANDIDATES                        */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1289
*                 ;                 /*                               */
*                 DO GRAPREX=1 BY 1 /* PROCESS ALL PRE'S IN PTF INDEX
*                                      LIST                          */
*                       WHILE(ADDR(ICTPRELS)^=ZERO/* IF CHAIN PTR    */
*                       &ICTPREND(GRAPREX)^=ICTENDIX);/*             */
         LA    GRAPREX,1                                           1290
         B     @DE01290                                            1290
@DL01290 DS    0H                                                  1291
*                   CALL SCLSET(ICTPRENM(GRAPREX),/* SYSMOD NAME     */
*                       GRASTAT,    /* FLAGS TO BE OR'ED INTO RECORD */
*                       ZERO);      /* NO REDO PREOCEESING           */
         MVC   @AL00001+4(8),@AL01291                              1291
         LR    @08,GRAPREX                                         1291
         SLA   @08,3                                               1291
         LR    @05,GRAPTFX                                         1291
         MH    @05,@CH01757                                        1291
         L     @01,CCAICPTF(,CCAPTR)                               1291
         AL    @01,@CF01792                                        1291
         L     @05,ICTPPCHN-76(@05,@01)                            1291
         AL    @05,@CF01789                                        1291
         LA    @08,ICTPRENM(@08,@05)                               1291
         ST    @08,@AL00001                                        1291
         LA    @01,@AL00001                                        1291
         BAL   @14,SCLSET                                          1291
*                 END;                                             1292
*                                                                  1292
         AH    GRAPREX,@CH00064                                    1292
@DE01290 LR    @08,GRAPTFX                                         1292
         MH    @08,@CH01757                                        1292
         L     @05,CCAICPTF(,CCAPTR)                               1292
         AL    @05,@CF01792                                        1292
         L     @08,ICTPPCHN-76(@08,@05)                            1292
         LTR   @08,@08                                             1292
         BZ    @DC01290                                            1292
         LR    @05,GRAPREX                                         1292
         SLA   @05,3                                               1292
         AL    @08,@CF01789                                        1292
         L     @08,ICTPREND(@05,@08)                               1292
         CL    @08,ICTENDIX                                        1292
         BNE   @DL01290                                            1292
@DC01290 DS    0H                                                  1293
*                 /***************************************************/
*                 /*                                                 */
*                 /* MARK REQ'S AS CANDIDATES                        */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1293
*                 DO GRAREQX=1 BY 1 /* PROCESS ALL REQ'S IN PTF INDEX
*                                      LIST                          */
*                       WHILE(ADDR(ICTREQLS)^=ZERO/* IF CHAIN PTR    */
*                       &ICTREQND(GRAREQX)^=ICTENDIX);/*             */
         LA    GRAREQX,1                                           1293
         B     @DE01293                                            1293
@DL01293 DS    0H                                                  1294
*                   CALL SCLSET(ICTREQNM(GRAREQX),/* SYSMOD NAME     */
*                       GRASTAT,    /* FLAGS TO BE OR'ED INTO RECORD */
*                       ZERO);      /* NO REDO PREOCEESING           */
         MVC   @AL00001+4(8),@AL01294                              1294
         LR    @08,GRAREQX                                         1294
         SLA   @08,3                                               1294
         LR    @05,GRAPTFX                                         1294
         MH    @05,@CH01757                                        1294
         L     @01,CCAICPTF(,CCAPTR)                               1294
         AL    @01,@CF01793                                        1294
         L     @05,ICTPRCHN-68(@05,@01)                            1294
         AL    @05,@CF01789                                        1294
         LA    @08,ICTREQNM(@08,@05)                               1294
         ST    @08,@AL00001                                        1294
         LA    @01,@AL00001                                        1294
         BAL   @14,SCLSET                                          1294
*                 END;              /*                               */
         AH    GRAREQX,@CH00064                                    1295
@DE01293 LR    @08,GRAPTFX                                         1295
         MH    @08,@CH01757                                        1295
         L     @05,CCAICPTF(,CCAPTR)                               1295
         AL    @05,@CF01793                                        1295
         L     @08,ICTPRCHN-68(@08,@05)                            1295
         LTR   @08,@08                                             1295
         BZ    @DC01293                                            1295
         LR    @05,GRAREQX                                         1295
         SLA   @05,3                                               1295
         AL    @08,@CF01789                                        1295
         L     @08,ICTREQND(@05,@08)                               1295
         CL    @08,ICTENDIX                                        1295
         BNE   @DL01293                                            1295
@DC01293 DS    0H                                                  1296
*                 ;                 /*                               */
*                                                                  1296
*                 /***************************************************/
*                 /*                                                 */
*                 /* MARK ++IF REQ'S AS CANDIDATES                   */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1297
*                 DO GRAIRQX=1 BY 1 /* PROCESS ALL IRQ'S IN PTF INDEX
*                                      LIST                          */
*                       WHILE(ADDR(ICTIRQLS)^=ZERO/* IF CHAIN PTR    */
*                       &ICTIRQND(GRAIRQX)^=ICTENDIX);/* AND NOT END */
         LA    GRAIRQX,1                                           1297
         B     @DE01297                                            1297
@DL01297 DS    0H                                                  1298
*                   GRAIFOPT=ZERO;  /* ASSUME ++IF PROCESSED ONLY IF
*                                      IT IS NOT ON THE (A)CDS       */
         MVI   GRAIFOPT,X'00'                                      1298
*                   IF ICTIREQI(GRAIRQX)=ON THEN/* ++IF REQ TO BE  1299
*                                      PROCESSED EVEN IF ALREADY   1299
*                                      PRESENT?                      */
         LR    @08,GRAIRQX                                         1299
         SLA   @08,4                                               1299
         LR    @05,GRAPTFX                                         1299
         MH    @05,@CH01757                                        1299
         L     @01,CCAICPTF(,CCAPTR)                               1299
         AL    @01,@CF01794                                        1299
         L     @05,ICTPICHN-80(@05,@01)                            1299
         ALR   @05,@08                                             1299
         AL    @05,@CF01795                                        1299
         TM    ICTIREQI-7(@05),B'00000100'                         1299
         BNO   @RF01299                                            1299
*                     DO;           /* YES,                          */
*                       GRAIFOPT=REDO;/* REPROCESS ++IF REQ          */
         MVI   GRAIFOPT,C'R'                                       1301
*                     END;                                         1302
*                   ELSE                                           1303
*                     ;             /* NO SPECIAL PROCESSING FOR ++IF
*                                      REQ                           */
@RF01299 DS    0H                                                  1304
*                   CALL SCLSET(ICTIRQNM(GRAIRQX),/* SYSMOD NAME     */
*                       GRASTAT,    /* FLAGS TO BE OR'ED INTO RECORD */
*                       GRAIFOPT);  /* REDO PREOCEESING FOR IF REQS  */
         MVC   @AL00001+4(8),@AL01304                              1304
         LR    @08,GRAIRQX                                         1304
         SLA   @08,4                                               1304
         LR    @05,GRAPTFX                                         1304
         MH    @05,@CH01757                                        1304
         L     @01,CCAICPTF(,CCAPTR)                               1304
         AL    @01,@CF01794                                        1304
         L     @05,ICTPICHN-80(@05,@01)                            1304
         AL    @05,@CF01796                                        1304
         LA    @08,ICTIRQNM(@08,@05)                               1304
         ST    @08,@AL00001                                        1304
         LA    @01,@AL00001                                        1304
         BAL   @14,SCLSET                                          1304
*                 END;              /*                               */
         AH    GRAIRQX,@CH00064                                    1305
@DE01297 LR    @08,GRAPTFX                                         1305
         MH    @08,@CH01757                                        1305
         L     @05,CCAICPTF(,CCAPTR)                               1305
         AL    @05,@CF01794                                        1305
         L     @08,ICTPICHN-80(@08,@05)                            1305
         LTR   @08,@08                                             1305
         BZ    @DC01297                                            1305
         LR    @05,GRAIRQX                                         1305
         SLA   @05,4                                               1305
         AL    @08,@CF01796                                        1305
         L     @08,ICTIRQND(@05,@08)                               1305
         CL    @08,ICTENDIX                                        1305
         BNE   @DL01297                                            1305
@DC01297 DS    0H                                                  1306
*               END;                /*                               */
*             ELSE                                                 1307
*               ;                   /* SKIP THIS ENTRY               */
@RF01287 DS    0H                                                  1308
*           END;                    /*                               */
*         ELSE                                                     1309
*           ;                       /* IGNORE ENTRY SINCE NOT FOR  1309
*                                      THIS PASS                     */
@RF01285 DS    0H                                                  1310
*       END;                        /* END OF ICT PTF SECTION LOOP   */
         AH    GRAPTFX,@CH00064                                    1310
@DE01284 LR    @08,GRAPTFX                                         1310
         MH    @08,@CH01757                                        1310
         L     @05,CCAICPTF(,CCAPTR)                               1310
         AL    @05,@CF01790                                        1310
         L     @08,ICTPEND(@08,@05)                                1310
         CL    @08,ICTENDNT                                        1310
         BE    @DC01284                                            1310
         CH    GRARC,@CH00033                                      1310
         BL    @DL01284                                            1310
@DC01284 DS    0H                                                  1311
*     END;                                                         1311
*   ELSE                                                           1312
*     ;                             /* GROUP NOT SPECIFIED           */
@RF01278 DS    0H                                                  1313
*   RETURN CODE(GRARC);             /* RETURN WITH THE RETURN CODE   */
         LR    @15,GRARC                                           1313
         L     @14,@SA00015                                        1313
         LM    @00,@12,@SA00015+8                                  1313
         BR    @14                                                 1313
*   RFY                                                            1314
*     ICTPTF BASED;                                                1314
*   RFY                                                            1315
*     ICTPRELS BASED;                                              1315
*   RFY                                                            1316
*     ICTPRELS BASED;                                              1316
*   RFY                                                            1317
*     ICTPRELS BASED;                                              1317
*   RFY                                                            1318
*     HMASMGTP BASED;                                              1318
*   RFY                                                            1319
*     SCLMAP BASED;                                                1319
*   END GROUPADD;                   /*                               */
*                                                                  1321
*   /*****************************************************************/
*   /*                                                               */
*   /* SCLSET -                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1321
*SCLSET:                                                           1321
*   PROC(SSTSMD,                    /* NAME OF THE SYSMOD FOR WHICH
*                                      STATUS IS TO BE SET           */
*       SSTSTAT,                    /* STATUS TO BE OR'ED INTO     1321
*                                      SCLSTAT FIELD (BIT(8))        */
*       SSTREDO);                   /* REDO PROCESSING TO BE DONE  1321
*                                      (CHAR(1))                     */
SCLSET   STM   @14,@12,@SA00016                                    1321
         MVC   @PC00016(12),0(@01)                                 1321
*   DCL                                                            1322
*     SSTSMD CHAR(LENGTH(IOPNAM17));/* SYSMOD NAME                   */
*   DCL                                                            1323
*     SSTSTAT BIT(8);               /* STATUS TO BE OR'ED IN         */
*   DCL                                                            1324
*     SSTREDO CHAR(1);              /* REDO PROCESSING PARM          */
*   DCL                                                            1325
*     1 SSTFLAGS,                   /* LOCAL CONTROL FLAGS           */
*      2 SSTEOF BIT(1),             /* END OF FILE ON SCL DURING   1325
*                                      STATUS UPDATE                 */
*      2 SSTFOUND BIT(1),           /* SYSMOD FOUND IN ONE OF THE  1325
*                                      LISTS                         */
*      2 SSTOK BIT(1),              /* SYSMOD IS OK TO BE A CANDIDATE*/
*      2 * BIT(5);                  /* UNUSED                        */
*   DCL                                                            1326
*     SSTSVKLN FIXED(15);           /* KEY BEFORE THIS ROUTINE     1326
*                                      CHANGED IT                    */
*   DCL                                                            1327
*     SSTNDX FIXED(15);             /* LIST NAME INDEX               */
*   DCL                                                            1328
*     SSTNTFRC FIXED(15) CONSTANT(4);/* NOT FOUND RC VALUE           */
*   DCL                                                            1329
*     SSTRC FIXED(15);              /* RETURN CODE                   */
*   RFY                                                            1330
*     HMASMGTP BASED(TBLXSCGT);                                    1330
*   RFY                                                            1331
*     SCLMAP BASED(GTPBUFAD);                                      1331
*   RFY                                                            1332
*     TSLPARMS BASED(TBLXTSLP);                                    1332
*   SSTRC=SSTNTFRC;                 /* ASSUME NOT FOUND RETURN CODE  */
         LA    SSTRC,4                                             1333
*   SSTFLAGS=''B;                   /* CLEAR CONTROL FLAGS           */
         MVI   SSTFLAGS,X'00'                                      1334
*                                                                  1335
*   /*****************************************************************/
*   /*                                                               */
*   /* FIND SYSMOD BY DOING A LOCATE ON EACH OF THE POSSIBLE LIST    */
*   /* NAMES                                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1335
*   SSTSVKLN=GTPKEYLN;              /* SAVE KEY LENGTH               */
         L     @08,@PC00001                                        1335
         L     @08,TBLXSCGT(,@08)                                  1335
         LH    SSTSVKLN,GTPKEYLN(,@08)                             1335
*   GTPKEYLN=LENGTH(SCLISTNO)+LENGTH(SCLSMD);/* KEY WILL BE LIST # 1336
*                                      PLUS SYSMOD NAME              */
         MVC   GTPKEYLN(2,@08),@CH00056                            1336
*   GTPFUNCT=GTPLOC;                /* FUNCTION IS LOCATE            */
         MVI   GTPFUNCT(@08),X'03'                                 1337
*   SCLSMD=SSTSMD;                  /* SYSMOD TO BE LOCATED          */
         L     @08,GTPBUFAD(,@08)                                  1338
         L     @05,@PC00016                                        1338
         MVC   SCLSMD(7,@08),SSTSMD(@05)                           1338
*   SSTFOUND=OFF;                   /* SYSMOD NOT YET FOUND          */
         NI    SSTFOUND,B'10111111'                                1339
*   DO SSTNDX=1 TO DIM(LISTNMS)     /*                               */
*         WHILE(SSTFOUND=OFF);      /*                               */
         LA    SSTNDX,1                                            1340
@DL01340 TM    SSTFOUND,B'01000000'                                1340
         BNZ   @DC01340                                            1340
*     SCLISTNO=LISTNMS(SSTNDX);     /*                               */
         L     @08,@PC00001                                        1341
         L     @08,TBLXSCGT(,@08)                                  1341
         L     @05,GTPBUFAD(,@08)                                  1341
         LA    @01,LISTNMS-1(SSTNDX)                               1341
         MVC   SCLISTNO(1,@05),0(@01)                              1341
*     CALL HMASMGTA(HMASMGTP);      /* DO LOCATE                     */
         ST    @08,@AL00001                                        1342
         L     @15,@CV01231                                        1342
         LA    @01,@AL00001                                        1342
         BALR  @14,@15                                             1342
*     IF GTPRETRN=GTPGOOD THEN      /* SYSMOD FOUND IN SCL?          */
         L     @08,@PC00001                                        1343
         L     @08,TBLXSCGT(,@08)                                  1343
         CLI   GTPRETRN(@08),0                                     1343
         BNE   @RF01343                                            1343
*       DO;                         /* YES,                          */
*         SSTRC=ZERO;               /* FOUND SYSMOD RETURN CODE      */
         SLR   SSTRC,SSTRC                                         1345
*         SSTFOUND=ON;              /* FOUND, STOP SEARCH            */
*         SSTOK=ON;                 /* OK TO MAKE SYSMOD A CANDIDATE */
         OI    SSTFOUND,B'01100000'                                1347
*       END;                                                       1348
*     ELSE                                                         1349
*       ;                           /* NOT FOUND, TRY NEXT LIST      */
@RF01343 DS    0H                                                  1350
*   END;                            /*                               */
         AH    SSTNDX,@CH00064                                     1350
         CH    SSTNDX,@CH00102                                     1350
         BNH   @DL01340                                            1350
@DC01340 DS    0H                                                  1351
*   GTPKEYLN=SSTSVKLN;              /* RESTORE THE KEY LENGTH        */
         L     @08,@PC00001                                        1351
         L     @08,TBLXSCGT(,@08)                                  1351
         STH   SSTSVKLN,GTPKEYLN(,@08)                             1351
*   IF SSTFOUND=ON                  /* FOUND AND ...                 */
*       &SCLREDO=ON                 /* ... A REDO LIST ENTRY         */
*       &SCLCAND=OFF THEN           /* ... THATS NOT A CANDIDATE     */
         TM    SSTFOUND,B'01000000'                                1352
         BNO   @RF01352                                            1352
         L     @08,GTPBUFAD(,@08)                                  1352
         TM    SCLREDO(@08),B'00010000'                            1352
         BNO   @RF01352                                            1352
         TM    SCLCAND(@08),B'00100000'                            1352
         BNZ   @RF01352                                            1352
*     DO;                           /* YES,                          */
*                                                                  1353
*       /*************************************************************/
*       /*                                                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1354
*       IF SSTREDO=REDO THEN        /* ... AND REDO SPECIFIED BY   1354
*                                      CALLER?                       */
         L     @08,@PC00016+8                                      1354
         CLI   SSTREDO(@08),C'R'                                   1354
         BNE   @RF01354                                            1354
*         DO;                       /* YES,                          */
*           SSTOK=ON;               /* ADD SYSMOD AS CANDIDATE       */
         OI    SSTOK,B'00100000'                                   1356
*         END;                                                     1357
*       ELSE                        /*                               */
*         DO;                       /* NO,                           */
         B     @RC01354                                            1358
@RF01354 DS    0H                                                  1359
*           SSTOK=OFF;              /* SKIP THE SYSMOD               */
         NI    SSTOK,B'11011111'                                   1359
*         END;                                                     1360
*     END;                                                         1361
@RC01354 DS    0H                                                  1362
*   IF SSTFOUND=ON                  /*                               */
*       &SSTOK=ON THEN              /*                               */
@RF01352 TM    SSTFOUND,B'01100000'                                1362
         BNO   @RF01362                                            1362
*     DO;                           /*                               */
*                                                                  1363
*       /*************************************************************/
*       /*                                                           */
*       /* SET STATUS IN THIS RECORD AND ALL SUBSEQUENT RECORDS THAT */
*       /* HAVE THE SAME SYSMOD NAME                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1364
*       GTPFUNCT=GTPSTRTN;          /* FUNCTION IS START NEXT        */
         L     @08,@PC00001                                        1364
         L     @08,TBLXSCGT(,@08)                                  1364
         MVI   GTPFUNCT(@08),X'06'                                 1364
*       CALL HMASMGTA(HMASMGTP);    /* POSITION FOR GET NEXT         */
         ST    @08,@AL00001                                        1365
         L     @15,@CV01231                                        1365
         LA    @01,@AL00001                                        1365
         BALR  @14,@15                                             1365
*       DO UNTIL(SSTEOF=ON);        /* SET STATUS UNTIL EOF OR END OF
*                                      CURRENT SYSMOD                */
@DL01366 DS    0H                                                  1367
*         GTPFUNCT=GTPGETN;         /* GET NEXT RECORD               */
         L     @08,@PC00001                                        1367
         L     @08,TBLXSCGT(,@08)                                  1367
         MVI   GTPFUNCT(@08),X'08'                                 1367
*         CALL HMASMGTA(HMASMGTP);  /* ...                           */
         ST    @08,@AL00001                                        1368
         L     @15,@CV01231                                        1368
         LA    @01,@AL00001                                        1368
         BALR  @14,@15                                             1368
*         IF GTPRETRN=GTPEOF THEN   /* END OF FILE?                  */
         L     @08,@PC00001                                        1369
         L     @08,TBLXSCGT(,@08)                                  1369
         CLI   GTPRETRN(@08),4                                     1369
         BNE   @RF01369                                            1369
*           DO;                     /* YES,                          */
*             SSTEOF=ON;            /* INDICATE END OF FILE          */
         OI    SSTEOF,B'10000000'                                  1371
*           END;                                                   1372
*         ELSE                      /* NOT END OF FILE               */
*           DO;                     /*                               */
         B     @RC01369                                            1373
@RF01369 DS    0H                                                  1374
*             IF SCLSMD^=SSTSMD THEN/* RECORD NOT FOR CURRENT SYSMOD?*/
         L     @08,@PC00001                                        1374
         L     @08,TBLXSCGT(,@08)                                  1374
         L     @08,GTPBUFAD(,@08)                                  1374
         L     @02,@PC00016                                        1374
         CLC   SCLSMD(7,@08),SSTSMD(@02)                           1374
         BE    @RF01374                                            1374
*               DO;                 /*                               */
*                 SSTEOF=ON;        /* LOGICAL EOF SINCE NO MORE   1376
*                                      RECORDS OR SMD                */
         OI    SSTEOF,B'10000000'                                  1376
*               END;                /*                               */
*             ELSE                  /* RECORD FOR THE CURRENT SYSMOD */
*               DO;                 /*                               */
         B     @RC01374                                            1378
@RF01374 DS    0H                                                  1379
*                 SCLSTAT=SCLSTAT×SSTSTAT;/* OR IN STATUS FLAGS      */
         L     @08,@PC00001                                        1379
         L     @08,TBLXSCGT(,@08)                                  1379
         L     @02,GTPBUFAD(,@08)                                  1379
         L     @15,@PC00016+4                                      1379
         OC    SCLSTAT(1,@02),SSTSTAT(@15)                         1379
*                 GTPFUNCT=GTPADD;  /* ADD RECORD BACK TO THE GTA  1380
*                                      FILE                          */
         MVI   GTPFUNCT(@08),X'04'                                 1380
*                 CALL HMASMGTA(HMASMGTP);/* ...                     */
         ST    @08,@AL00001                                        1381
         L     @15,@CV01231                                        1381
         LA    @01,@AL00001                                        1381
         BALR  @14,@15                                             1381
*               END;                /*                               */
*           END;                    /*                               */
@RC01374 DS    0H                                                  1384
*       END;                        /* END OF PROCESSING ALL ++VERS
*                                      FOR THE SYSMOD                */
@RC01369 DS    0H                                                  1384
@DE01366 TM    SSTEOF,B'10000000'                                  1384
         BNO   @DL01366                                            1384
*     END;                          /*                               */
*   ELSE                                                           1386
*     ;                             /* SYSMOD NOT FOUND IN ANY SCL 1386
*                                      LIST                          */
@RF01362 DS    0H                                                  1387
*   RETURN CODE(SSTRC);             /* RETURN WITH THE RETURN CODE   */
         LR    @15,SSTRC                                           1387
         L     @14,@SA00016                                        1387
         LM    @00,@12,@SA00016+8                                  1387
         BR    @14                                                 1387
*   RFY                                                            1388
*     HMASMGTP BASED;                                              1388
*   RFY                                                            1389
*     SCLMAP BASED;                                                1389
*   RFY                                                            1390
*     TSLPARMS BASED;                                              1390
*   END SCLSET;                     /*                               */
*                                                                  1392
*   /*****************************************************************/
*   /*                                                               */
*   /* GETSMDXX -                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1392
*GETSMD:                                                           1392
*   PROC(GETSIOP,GETSSMD);                                         1392
GETSMD   STM   @14,@12,@SA00017                                    1392
         MVC   @PC00017(8),0(@01)                                  1392
*   DCL                                                            1393
*     GETSIOP CHAR(*);              /* EXTENDED IOP                  */
*   DCL                                                            1394
*     GETSSMD CHAR(7);              /* SYSMOD NAME                   */
*   DCL                                                            1395
*     GETSMDRC FIXED(15);           /* RETURN CODE                   */
*   RFY                                                            1396
*     HMASMIOP BASED(ADDR(GETSIOP));                               1396
*   GETSMDRC=ZERO;                  /* CLEAR THE RETURN CODE         */
         SLR   GETSMDRC,GETSMDRC                                   1397
*   IOPDSID=IOPPTS;                 /* DATA SET IS PTS               */
         L     @08,@PC00017                                        1398
         MVI   IOPDSID(@08),X'06'                                  1398
*   IOPFUNCT=IOPLOC;                /* GET EXTENDED ENTRY ...        */
         MVI   IOPFUNCT(@08),X'03'                                 1399
*   IOPTYPE=IOPSMD;                 /* ... FOR THE SELECTED ...      */
         MVI   IOPTYPE(@08),X'0B'                                  1400
*   IOPNAM17=GETSSMD;               /* ... SYSMOD                    */
         L     @03,@PC00017+4                                      1401
         MVC   IOPNAM17(7,@08),GETSSMD(@03)                        1401
*   CALL HMASMIO(HMASMIOP);         /* ...                           */
         ST    @08,@AL00001                                        1402
         L     @15,@CV01229                                        1402
         LA    @01,@AL00001                                        1402
         BALR  @14,@15                                             1402
*   GETSMDRC=MAX(GETSMDRC,IOPRETRN);/* SET RETURN CODE               */
         L     @08,@PC00017                                        1403
         SLR   @03,@03                                             1403
         IC    @03,IOPRETRN(,@08)                                  1403
         CR    GETSMDRC,@03                                        1403
         BNL   *+6
         LR    GETSMDRC,@03                                        1403
*   RETURN CODE(GETSMDRC);          /* RETURN WITH THE RETURN CODE   */
         LR    @15,GETSMDRC                                        1404
         L     @14,@SA00017                                        1404
         LM    @00,@12,@SA00017+8                                  1404
         BR    @14                                                 1404
*   RFY                                                            1405
*     HMASMIOP BASED;                                              1405
*   END GETSMD;                     /*                               */
*                                                                  1407
*   /*****************************************************************/
*   /*                                                               */
*   /* ADDIFSXX -                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1407
*ADDIFS:                                                           1407
*   PROC;                                                          1407
ADDIFS   STM   @14,@12,@SA00018                                    1407
*   DCL                                                            1408
*     ADDIRC FIXED(15);             /* RETURN CODE                   */
*   DCL                                                            1409
*     ADDIPTFX FIXED(15);           /* ICT PTF SECTION INDEX         */
*   RFY                                                            1410
*     ICTPTF BASED(CCAICPTF);                                      1410
*   ADDIRC=ZERO;                    /* CLEAR THE RETURN CODE         */
         SLR   ADDIRC,ADDIRC                                       1411
*   DO ADDIPTFX=1 BY 1              /*                               */
*         WHILE(ICTPEND(ADDIPTFX)^=ICTENDNT/*                        */
*         &ADDIRC<STOPFUNC);                                       1412
         LA    ADDIPTFX,1                                          1412
         B     @DE01412                                            1412
@DL01412 DS    0H                                                  1413
*     IF ICTPPASS(ADDIPTFX)=ON THEN /* ICT ENTRY ADDED IN THIS PASS  */
         LR    @08,ADDIPTFX                                        1413
         MH    @08,@CH01757                                        1413
         L     @05,CCAICPTF(,CCAPTR)                               1413
         ST    @08,@TF00001                                        1413
         ALR   @08,@05                                             1413
         AL    @08,@CF01791                                        1413
         TM    ICTPPASS-16(@08),B'10000000'                        1413
         BNO   @RF01413                                            1413
*       DO;                                                        1414
*         CALL HMASMTP2(TBLXPARM,   /*                               */
*             ADDR(ICTPTF(ADDIPTFX)),/*                              */
*             TBLXIOP2->HMASMIOP);                                 1415
         L     @08,@PC00001                                        1415
         ST    @08,@AL00001                                        1415
         L     @02,@TF00001                                        1415
         AL    @05,@CF01790                                        1415
         LA    @05,ICTPTF(@02,@05)                                 1415
         ST    @05,@TF00001                                        1415
         LA    @05,@TF00001                                        1415
         ST    @05,@AL00001+4                                      1415
         L     @08,TBLXIOP2(,@08)                                  1415
         ST    @08,@AL00001+8                                      1415
         L     @15,@CV01236                                        1415
         LA    @01,@AL00001                                        1415
         BALR  @14,@15                                             1415
*         RFY                                                      1416
*           RTNCODE RSTD;                                          1416
*         IF RTNCODE^=ZERO THEN     /* ERROR OCCURRED?               */
         LTR   RTNCODE,RTNCODE                                     1417
         BZ    @RF01417                                            1417
*           DO;                                                    1418
*             ADDIRC=MAX(ADDIRC,RTNCODE);                          1419
         CR    ADDIRC,RTNCODE                                      1419
         BNL   *+6
         LR    ADDIRC,RTNCODE                                      1419
*             RFY                                                  1420
*               RTNCODE UNRSTD;                                    1420
*           END;                                                   1421
*         ELSE                                                     1422
*           ;                       /* ++IF DATA ADDED TO INDEX W/O
*                                      ERROR                         */
@RF01417 DS    0H                                                  1423
*       END;                                                       1423
*     ELSE                                                         1424
*       ;                           /* NOT IN THIS PASS              */
@RF01413 DS    0H                                                  1425
*   END;                                                           1425
         AH    ADDIPTFX,@CH00064                                   1425
@DE01412 LR    @08,ADDIPTFX                                        1425
         MH    @08,@CH01757                                        1425
         L     @05,CCAICPTF(,CCAPTR)                               1425
         AL    @05,@CF01790                                        1425
         L     @08,ICTPEND(@08,@05)                                1425
         CL    @08,ICTENDNT                                        1425
         BE    @DC01412                                            1425
         CH    ADDIRC,@CH00033                                     1425
         BL    @DL01412                                            1425
@DC01412 DS    0H                                                  1426
*   RETURN CODE(ADDIRC);            /* RETURN WITH THE RETURN CODE   */
         LR    @15,ADDIRC                                          1426
         L     @14,@SA00018                                        1426
         LM    @00,@12,@SA00018+8                                  1426
         BR    @14                                                 1426
*   RFY                                                            1427
*     ICTPTF BASED;                                                1427
*   END ADDIFS;                     /*                               */
*                                                                  1429
*   /*****************************************************************/
*   /*                                                               */
*   /* VERBLD -                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1429
*VERBLD:                                                           1429
*   PROC(VRBTYPE,                   /* TYPE OF PROCESSSING           */
*       VRBIOP,                     /* EXTENDED IOP                  */
*       VRBSCL,                     /* SYSMOD CANDIDATE RECORD       */
*       VRBICTP);                   /* ICT PTR TO BE RETURNED        */
VERBLD   STM   @14,@12,@SA00019                                    1429
         MVC   @PC00019(16),0(@01)                                 1429
*   DCL                                                            1430
*     VRBTYPE CHAR(1);                                             1430
*   DCL                                                            1431
*     VRBIOP CHAR(*);                                              1431
*   DCL                                                            1432
*     VRBSCL CHAR(LENGTH(SCLMAP));                                 1432
*   DCL                                                            1433
*     VRBICTP PTR(31);                                             1433
*   DCL                                                            1434
*     VRBRC FIXED(15);              /* RETURN CODE                   */
*   RFY                                                            1435
*     HMASMIOP BASED(ADDR(VRBIOP));                                1435
*   RFY                                                            1436
*     SCLMAP BASED(ADDR(VRBSCL));                                  1436
*   RFY                                                            1437
*     ICTPTF BASED(VRBICTP);                                       1437
*   VRBRC=ZERO;                     /* CLEAR THE RETURN CODE         */
         SLR   VRBRC,VRBRC                                         1438
*                                                                  1439
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR NPRE ERROR CONDITION                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1439
*   CALL NPRECK(HMASMIOP,SCLVERNO); /* CHECK FOR NPRE ERRORS         */
         L     @08,@PC00019+4                                      1439
         ST    @08,@AL00001                                        1439
         L     @08,@PC00019+8                                      1439
         LA    @08,SCLVERNO(,@08)                                  1439
         ST    @08,@AL00001+4                                      1439
         LA    @01,@AL00001                                        1439
         BAL   @14,NPRECK                                          1439
*   RFY                                                            1440
*     RTNCODE RSTD;                                                1440
*   VRBRC=MAX(VRBRC,RTNCODE);       /* SAVE BUILD RETURN CODE        */
         CR    VRBRC,RTNCODE                                       1441
         BNL   *+6
         LR    VRBRC,RTNCODE                                       1441
*   RFY                                                            1442
*     RTNCODE UNRSTD;                                              1442
*   IF VRBRC=ZERO                   /* ALL IS WELL?                  */
*       &VRBTYPE^=DELETE THEN       /* AND NOT DELETE        @Z67SP00*/
         LTR   VRBRC,VRBRC                                         1443
         BNZ   @RF01443                                            1443
         L     @08,@PC00019                                        1443
         CLI   VRBTYPE(@08),C'D'                                   1443
         BE    @RF01443                                            1443
*     DO;                           /* YES,                          */
*                                                                  1444
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK FOR DELETE ERROR CONDITION                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1445
*       CALL DELCK(HMASMIOP,SCLVERNO);/* CHECK FOR DEL ERRORS        */
         L     @08,@PC00019+4                                      1445
         ST    @08,@AL00001                                        1445
         L     @08,@PC00019+8                                      1445
         LA    @08,SCLVERNO(,@08)                                  1445
         ST    @08,@AL00001+4                                      1445
         LA    @01,@AL00001                                        1445
         BAL   @14,DELCK                                           1445
*       RFY                                                        1446
*         RTNCODE RSTD;                                            1446
*       VRBRC=MAX(VRBRC,RTNCODE);   /* SAVE BUILD RETURN CODE        */
         CR    VRBRC,RTNCODE                                       1447
         BNL   *+6
         LR    VRBRC,RTNCODE                                       1447
*       RFY                                                        1448
*         RTNCODE UNRSTD;                                          1448
*     END;                                                         1449
*   IF VRBRC<STOPSMD THEN           /* SYSMOD STILL GO?              */
@RF01443 CH    VRBRC,@CH00056                                      1450
         BNL   @RF01450                                            1450
*     DO;                           /*                               */
*                                                                  1451
*       /*************************************************************/
*       /*                                                           */
*       /* BUILD ICT PTF ENTRY FOR SYSMOD                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1452
*       CALL SMDICT(HMASMIOP,SCLMAP,VRBICTP);/*                      */
         L     @08,@PC00019+4                                      1452
         ST    @08,@AL00001                                        1452
         L     @08,@PC00019+8                                      1452
         ST    @08,@AL00001+4                                      1452
         L     @08,@PC00019+12                                     1452
         ST    @08,@AL00001+8                                      1452
         LA    @01,@AL00001                                        1452
         BAL   @14,SMDICT                                          1452
*       RFY                                                        1453
*         RTNCODE RSTD;                                            1453
*       VRBRC=MAX(VRBRC,RTNCODE);   /* SAVE BUILD RETURN CODE        */
         CR    VRBRC,RTNCODE                                       1454
         BNL   *+6
         LR    VRBRC,RTNCODE                                       1454
*       RFY                                                        1455
*         RTNCODE UNRSTD;                                          1455
*     END;                                                         1456
*   ELSE                                                           1457
*     ;                             /* SYSMOD ERROR                  */
@RF01450 DS    0H                                                  1458
*   RETURN CODE(VRBRC);             /* RETURN WITH THE RETURN CODE   */
         LR    @15,VRBRC                                           1458
         L     @14,@SA00019                                        1458
         LM    @00,@12,@SA00019+8                                  1458
         BR    @14                                                 1458
*   RFY                                                            1459
*     HMASMIOP BASED;                                              1459
*   RFY                                                            1460
*     SCLMAP BASED;                                                1460
*   RFY                                                            1461
*     ICTPTF BASED;                                                1461
*   END VERBLD;                     /*                               */
*                                                                  1463
*   /*****************************************************************/
*   /*                                                               */
*   /* VERDELCK -                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1463
*VERDELCK:                                                         1463
*   PROC(VDCIOP,                    /* EXTENDED IOP                  */
*       VDCSCL);                    /* SYSMOD CANDIDATE RECORD       */
VERDELCK STM   @14,@12,@SA00020                                    1463
         MVC   @PC00020(8),0(@01)                                  1463
*   DCL                                                            1464
*     VDCIOP CHAR(*);                                              1464
*   DCL                                                            1465
*     VDCSCL CHAR(LENGTH(SCLMAP));                                 1465
*   DCL                                                            1466
*     VDCFMID@ PTR(31);             /* PTR TO ++VER FMID OPERAND   1466
*                                      VALUE                         */
*   DCL                                                            1467
*     VDCRC FIXED(15);              /* RETURN CODE                   */
*   DCL                                                            1468
*     GOCODE FIXED(15) CONSTANT(0); /* DELETE OK RETURN CODE VALUE   */
*   DCL                                                            1469
*     SKIPCODE FIXED(15) CONSTANT(4);/* SKIP THIS ++VER BECAUSE IT 1469
*                                      DOES NOT MATCH THE DELETE   1469
*                                      ENVIRONMENT                   */
*   RFY                                                            1470
*     HMASMIOP BASED(ADDR(VDCIOP));                                1470
*   RFY                                                            1471
*     HMASMGTP BASED(TBLXSEGT);                                    1471
*   RFY                                                            1472
*     HMASMSET BASED(GTPBUFAD);                                    1472
*   RFY                                                            1473
*     TSLPARMS BASED(TBLXTSLP);                                    1473
*   RFY                                                            1474
*     SCLMAP BASED(ADDR(VDCSCL));                                  1474
*   VDCRC=SKIPCODE;                 /* ASSUME SYSMOD NOT TO BE     1475
*                                      PROCESSED                     */
*                                                                  1475
         LA    VDCRC,4                                             1475
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK TO SEE IF THE FMID, IF ANY, ON THE ++VER IS IN THE      */
*   /* 'CURRENT DELETE EVIRONMENT', I.E. IN THE SELECT LIST OR IN THE*/
*   /* (A)CDS                                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1476
*   IF IOPFLF^=ON THEN              /* NOT A 1ST LEVEL FUNCTION?     */
         L     @08,@PC00020                                        1476
         TM    IOPFLF(@08),B'00100000'                             1476
         BO    @RF01476                                            1476
*     DO;                                                          1477
*       TSLENTSR=''B;               /* CLEAR TSB PARMLIST            */
         L     @05,@PC00001                                        1478
         L     @05,TBLXTSLP(,@05)                                  1478
         L     @02,TSLPMLAD(,@05)                                  1478
         XC    TSLENTSR(16,@02),TSLENTSR(@02)                      1478
*       TSLEBGNP=ADDR(IOPPTFVR);    /* BEGINNING OF SEARCH PTR       */
         LA    @08,IOPPTFVR(,@08)                                  1479
         ST    @08,TSLEBGNP(,@02)                                  1479
*       TSLFUNCT=TSLFENSR;          /* FUNCTION IS SEARCH IOP      1480
*                                      SUB-ENTRY                     */
         MVI   TSLFUNCT(@05),X'06'                                 1480
*       TSLETYPE=IOPPFID;           /* TYPE IS DELETE ENTRY          */
         MVI   TSLETYPE(@02),X'A7'                                 1481
*       TSLEVER#=SCLVERNO;          /* ++VER NUMBER                  */
         L     @08,@PC00020+4                                      1482
         MVC   TSLEVER#(1,@02),SCLVERNO(@08)                       1482
*       CALL HMASMTSB(TSLPARMS);    /* FIND THE FMID FOR INPUTED VER
*                                      #                             */
         ST    @05,@AL00001                                        1483
         L     @15,@CV01237                                        1483
         LA    @01,@AL00001                                        1483
         BALR  @14,@15                                             1483
*       RFY                                                        1484
*         RTNCODE RSTD;                                            1484
*       VDCFMID@=TSLEFNDP;          /* PTR TO FMID FOUND             */
         L     @14,@PC00001                                        1485
         L     @08,TBLXTSLP(,@14)                                  1485
         L     @08,TSLPMLAD(,@08)                                  1485
         L     VDCFMID@,TSLEFNDP(,@08)                             1485
*       IF RTNCODE=ZERO THEN        /* FMID FOUND?                   */
         LTR   RTNCODE,RTNCODE                                     1486
         BNZ   @RF01486                                            1486
*         DO;                                                      1487
*                                                                  1487
*           /*********************************************************/
*           /*                                                       */
*           /* LOCATE THE FMID SYSMOD IN THE SET AND SEE IF IT IS IN */
*           /* THE SELECT LIST                                       */
*           /*                                                       */
*           /*********************************************************/
*                                                                  1488
*           SESMD=ON;               /* TYPE IS SYSMOD                */
         L     @14,TBLXSEGT(,@14)                                  1488
         L     @08,GTPBUFAD(,@14)                                  1488
         OI    SESMD(@08),B'00000001'                              1488
*           SENAME=VDCFMID@->BASEDSMD;/* NAME IS FMID NAME           */
         MVI   SENAME+7(@08),C' '                                  1489
         MVC   SENAME(7,@08),BASEDSMD(VDCFMID@)                    1489
*           GTPFUNCT=GTPLOC;        /* DO THE LOCATE                 */
         MVI   GTPFUNCT(@14),X'03'                                 1490
*           CALL HMASMGTA(HMASMGTP);                               1491
         ST    @14,@AL00001                                        1491
         L     @15,@CV01231                                        1491
         LA    @01,@AL00001                                        1491
         BALR  @14,@15                                             1491
*           IF GTPRETRN=GTPGOOD THEN/* WAS THE FUNCTION FOUND?       */
         L     @14,@PC00001                                        1492
         L     @14,TBLXSEGT(,@14)                                  1492
         CLI   GTPRETRN(@14),0                                     1492
         BNE   @RF01492                                            1492
*             DO;                                                  1493
*               VDCRC=GOCODE;       /* WE HAVE A LIVE DELETOR        */
         SLR   VDCRC,VDCRC                                         1494
*             END;                                                 1495
*           ELSE                    /* NOT IN SELECT LIST, CHECK   1496
*                                      (A)CDS                        */
*             DO;                                                  1496
         B     @RC01492                                            1496
@RF01492 DS    0H                                                  1497
*               TSLSICDS=''B;       /* CLEAR PARM LIST               */
         L     @14,@PC00001                                        1497
         L     @08,TBLXTSLP(,@14)                                  1497
         L     @02,TSLPMLAD(,@08)                                  1497
         XC    TSLSICDS(20,@02),TSLSICDS(@02)                      1497
*               TSLFUNCT=TSLFICSR;  /* SEARCH FOR SYSMOD ON THE CDS  */
         MVI   TSLFUNCT(@08),X'04'                                 1498
*               TSLSOCDS=ON;        /* SEARCH THE (A)CDS             */
         OI    TSLSOCDS(@02),B'01000000'                           1499
*               TSLSIOPP=ADDR(TBLXIOPF);                           1500
         LA    @14,TBLXIOPF(,@14)                                  1500
         ST    @14,TSLSIOPP(,@02)                                  1500
*               CALL HMASMTSB(TSLPARMS);                           1501
         ST    @08,@AL00001                                        1501
         L     @15,@CV01237                                        1501
         LA    @01,@AL00001                                        1501
         BALR  @14,@15                                             1501
*               IF TSLRETRN^=TSLFOUND THEN                         1502
         L     @14,@PC00001                                        1502
         L     @14,TBLXTSLP(,@14)                                  1502
         CLI   TSLRETRN(@14),0                                     1502
         BE    @RF01502                                            1502
*                 DO;                                              1503
*                   VDCRC=MAX(VDCRC,TSLRETRN);/* SAVE RETURN CODE    */
         SLR   @08,@08                                             1504
         IC    @08,TSLRETRN(,@14)                                  1504
         CR    VDCRC,@08                                           1504
         BNL   *+6
         LR    VDCRC,@08                                           1504
*                 END;                                             1505
*               ELSE                /* FMID WAS FOUND ON CDS         */
*                 DO;                                              1506
         B     @RC01502                                            1506
@RF01502 DS    0H                                                  1507
*                   IF TSLSCOK=ON   /* FMID OK ...                   */
*                       ×TSLSCSUP=ON THEN/* OR SUP'ED                */
         L     @14,@PC00001                                        1507
         L     @14,TBLXTSLP(,@14)                                  1507
         L     @14,TSLPMLAD(,@14)                                  1507
         TM    TSLSCOK(@14),B'01100000'                            1507
         BZ    @RF01507                                            1507
*                     DO;                                          1508
*                                                                  1508
*                       /*********************************************/
*                       /*                                           */
*                       /* ???? SUP'ED ????                          */
*                       /*                                           */
*                       /*********************************************/
*                                                                  1509
*                       VDCRC=GOCODE;/* WE HAVE A LIVE DELETOR       */
         SLR   VDCRC,VDCRC                                         1509
*                     END;                                         1510
*                   ELSE            /* NOT IN AN APPROPRIATE STATE   */
*                     DO;                                          1511
         B     @RC01507                                            1511
@RF01507 DS    0H                                                  1512
*                     END;                                         1512
*                 END;                                             1513
*             END;                                                 1514
*         END;                                                     1515
*       ELSE                                                       1516
*         ;                         /* FMID NOT FOUND                */
@RF01486 DS    0H                                                  1517
*     END;                                                         1517
*   ELSE                            /* 1ST LEVEL FUNCTION            */
*     DO;                                                          1518
         B     @RC01476                                            1518
@RF01476 DS    0H                                                  1519
*       VDCRC=GOCODE;               /* PROCESS THE SYSMOD RC         */
         SLR   VDCRC,VDCRC                                         1519
*     END;                                                         1520
*   RETURN CODE(VDCRC);             /* RETURN WITH THE RETURN CODE   */
@RC01476 LR    @15,VDCRC                                           1521
         L     @14,@SA00020                                        1521
         LM    @00,@12,@SA00020+8                                  1521
         BR    @14                                                 1521
*   RFY                                                            1522
*     HMASMIOP BASED;                                              1522
*   RFY                                                            1523
*     HMASMGTP BASED;                                              1523
*   RFY                                                            1524
*     HMASMSET BASED;                                              1524
*   RFY                                                            1525
*     TSLPARMS BASED;                                              1525
*   RFY                                                            1526
*     SCLMAP BASED;                                                1526
*   END VERDELCK;                   /*                               */
*                                                                  1528
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCNXT -                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1528
*LOCNXT:                                                           1528
*   PROC(LNXIOP,                    /* EXTENDED IOP TO CONTAIN THE 1528
*                                      PTS SYSMOD ENTRY              */
*       LNXLST,                     /* SCL LIST NAME TO PROCESS    1528
*                                      (CHAR(1))                     */
*       LNXCKEY@);                  /* ADDRESS OF KEY                */
LOCNXT   STM   @14,@12,@SA00021                                    1528
         MVC   @PC00021(12),0(@01)                                 1528
*   DCL                                                            1529
*     LNXIOP CHAR(*);               /* EXTENDED IOP                  */
*   DCL                                                            1530
*     LNXLST CHAR(1);               /* LIST NAME                     */
*   DCL                                                            1531
*     LNXCKEY@ PTR(31);             /* ADDRESS OF KEY                */
*   DCL                                                            1532
*     LNXCSCL CHAR(LENGTH(SCLMAP)); /* SCL GOTTEN BY GETNLSMD        */
*   DCL                                                            1533
*     LNXRC FIXED(15);              /* RETURN CODE                   */
*   RFY                                                            1534
*     HMASMIOP BASED(ADDR(LNXIOP));                                1534
*   RFY                                                            1535
*     SCLMAP BASED(TBLXSCGT->GTPBUFAD);                            1535
*   LNXRC=ZERO;                     /* CLEAR THE RETURN CODE         */
         SLR   LNXRC,LNXRC                                         1536
*   CALL GETNLSMD(LNXLST,           /* GET NEXT FROM LIST            */
*       LNXCKEY@,                   /* PREV/NEXT KEY PTR             */
*       LNXCSCL);                   /* ...                           */
         L     @14,@PC00021+4                                      1537
         ST    @14,@AL00001                                        1537
         L     @14,@PC00021+8                                      1537
         ST    @14,@AL00001+4                                      1537
         LA    @14,LNXCSCL                                         1537
         ST    @14,@AL00001+8                                      1537
         LA    @01,@AL00001                                        1537
         BAL   @14,GETNLSMD                                        1537
*   RFY                                                            1538
*     RTNCODE RSTD;                                                1538
*   IF RTNCODE=PTFWARN THEN         /* END OF FILE/LIST ?            */
         LA    @14,4                                               1539
         CR    RTNCODE,@14                                         1539
         BNE   @RF01539                                            1539
*     DO;                           /*                               */
*       RFY                                                        1541
*         RTNCODE UNRSTD;                                          1541
*       LNXRC=GTPEOF;               /* END OF LIST RETURN CODE       */
         LR    LNXRC,@14                                           1542
*     END;                          /*                               */
*   ELSE                            /* L1 LIST ENTRY GOTTEN          */
*     DO;                           /*                               */
         B     @RC01539                                            1544
@RF01539 DS    0H                                                  1545
*       IF SCLCAND=ON THEN          /* IS LIST ENTRY A CANDIDATE?    */
         L     @08,@PC00001                                        1545
         L     @08,TBLXSCGT(,@08)                                  1545
         L     @08,GTPBUFAD(,@08)                                  1545
         TM    SCLCAND(@08),B'00100000'                            1545
         BNO   @RF01545                                            1545
*         DO;                       /* YES,                          */
*                                                                  1546
*           /*********************************************************/
*           /*                                                       */
*           /* GET SYSMOD ENTRY FROM THE PTS                         */
*           /*                                                       */
*           /*********************************************************/
*                                                                  1547
*           CALL GETSMD(HMASMIOP,SCLSMD);                          1547
         L     @02,@PC00021                                        1547
         ST    @02,@AL00001                                        1547
         LA    @08,SCLSMD(,@08)                                    1547
         ST    @08,@AL00001+4                                      1547
         LA    @01,@AL00001                                        1547
         BAL   @14,GETSMD                                          1547
*           RFY                                                    1548
*             RTNCODE RSTD;                                        1548
*           LNXRC=MAX(LNXRC,RTNCODE);                              1549
         CR    LNXRC,RTNCODE                                       1549
         BNL   *+6
         LR    LNXRC,RTNCODE                                       1549
*           RFY                                                    1550
*             RTNCODE UNRSTD;                                      1550
*         END;                      /*                               */
*       ELSE                                                       1552
*         ;                         /* SKIP THIS ENTRY               */
@RF01545 DS    0H                                                  1553
*     END;                          /*                               */
*   RETURN CODE(LNXRC);             /* RETURN WITH THE RETURN CODE   */
@RC01539 LR    @15,LNXRC                                           1554
         L     @14,@SA00021                                        1554
         LM    @00,@12,@SA00021+8                                  1554
         BR    @14                                                 1554
*   RFY                                                            1555
*     HMASMIOP BASED;                                              1555
*   RFY                                                            1556
*     SCLMAP BASED;                                                1556
*   END LOCNXT;                     /*                               */
*                                                                  1558
*   /*****************************************************************/
*   /*                                                               */
*   /* SMDICT -                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1558
*SMDICT:                            /*                               */
*   PROC(SMIIOP,                    /* PTS EXTENDED IOP              */
*       SMISCL,                     /* SCL RECORD                    */
*       SMIICTP);                   /* (OUTPUT) PTR TO ICT ENTRY   1558
*                                      CREATED                       */
SMDICT   STM   @14,@12,@SA00022                                    1558
         MVC   @PC00022(12),0(@01)                                 1558
*   DCL                                                            1559
*     SMIIOP CHAR(*);               /* PTS EXTENDED IOP              */
*   DCL                                                            1560
*     SMISCL CHAR(LENGTH(SCLMAP));  /* SCL RECORD                    */
*   DCL                                                            1561
*     SMIICTP PTR(31);              /* (OUTPUT) PTR TO ICT ENTRY   1561
*                                      CREATED                       */
*   DCL                                                            1562
*     SMIRC FIXED(15);              /* LOCAL RETURN CODE             */
*   RFY                                                            1563
*     HMASMIOP BASED(ADDR(SMIIOP));                                1563
*   RFY                                                            1564
*     SCLMAP BASED(ADDR(SMISCL));                                  1564
*   RFY                                                            1565
*     ICTPTF BASED(SMIICTP);                                       1565
*   SMIRC=ZERO;                     /*                               */
         SLR   SMIRC,SMIRC                                         1566
*   SMIICTP=TBLXTOP;                /* ADDRESS OF PTF ENTRY          */
         L     @08,@PC00022+8                                      1567
         L     @02,@PC00001                                        1567
         MVC   SMIICTP(4,@08),TBLXTOP(@02)                         1567
*   CALL HMASMTPC(TBLXPARM,         /* TBLX                          */
*       HMASMIOP,                   /* SYSMOD PTS ENTRY              */
*       SCLVERNO,                   /* ++VER INDEX                   */
*       ZERO,                       /* CREATE ICT ENTRY              */
*       TBLXIOP2->HMASMIOP);        /* IOP FOR MCB                   */
         ST    @02,@AL00001                                        1568
         L     @08,@PC00022                                        1568
         ST    @08,@AL00001+4                                      1568
         L     @08,@PC00022+4                                      1568
         LA    @08,SCLVERNO(,@08)                                  1568
         ST    @08,@AL00001+8                                      1568
         LA    @08,@CF00082                                        1568
         ST    @08,@AL00001+12                                     1568
         L     @08,TBLXIOP2(,@02)                                  1568
         ST    @08,@AL00001+16                                     1568
         L     @15,@CV01238                                        1568
         LA    @01,@AL00001                                        1568
         BALR  @14,@15                                             1568
*   RFY                                                            1569
*     RTNCODE RSTD;                                                1569
*   SMIRC=MAX(SMIRC,RTNCODE);       /*                               */
         CR    SMIRC,RTNCODE                                       1570
         BNL   *+6
         LR    SMIRC,RTNCODE                                       1570
*   RFY                                                            1571
*     RTNCODE UNRSTD;                                              1571
*   IF SMIRC<STOPSMD THEN           /* SYSMOD STILL GO?              */
         CH    SMIRC,@CH00056                                      1572
         BNL   @RF01572                                            1572
*     DO;                           /* YES,                          */
*       IF IOPFLF(1)=ON THEN        /* THIS IS A 1ST LEVEL FUNCTION  */
         L     @08,@PC00022                                        1574
         TM    IOPFLF(@08),B'00100000'                             1574
         BNO   @RF01574                                            1574
*         ICTFLF(1)=ON;             /* ...                           */
         L     @08,@PC00022+8                                      1575
         L     @08,SMIICTP(,@08)                                   1575
         OI    ICTFLF(@08),B'00100000'                             1575
*       IF SCLSELST=ON THEN         /* COPY IN SELECT ...            */
@RF01574 L     @08,@PC00022+4                                      1576
         TM    SCLSELST(@08),B'01000000'                           1576
         BNO   @RF01576                                            1576
*         ICTPSLST(1)=ON;           /* ... LIST FLAG TO ICT          */
         L     @08,@PC00022+8                                      1577
         L     @08,SMIICTP(,@08)                                   1577
         OI    ICTPSLST(@08),B'00000010'                           1577
*       IF SCLREDO=ON THEN          /* COPY REAPPLY FLAG ....        */
@RF01576 L     @08,@PC00022+4                                      1578
         TM    SCLREDO(@08),B'00010000'                            1578
         BNO   @RF01578                                            1578
*         ICTPREDO(1)=ON;           /* RE APPLICATION                */
         L     @08,@PC00022+8                                      1579
         L     @08,SMIICTP(,@08)                                   1579
         OI    ICTPREDO(@08),B'01000000'                           1579
*       SMIICTP->ICTPPASS(1)=ON;    /* SYSMOD ADDED IN THIS PASS     */
@RF01578 L     @08,@PC00022+8                                      1580
         L     @08,SMIICTP(,@08)                                   1580
         OI    ICTPPASS(@08),B'10000000'                           1580
*     END;                                                         1581
*   ELSE                                                           1582
*     ;                             /* ERROR                         */
@RF01572 DS    0H                                                  1583
*   RETURN CODE(SMIRC);             /*                               */
         LR    @15,SMIRC                                           1583
         L     @14,@SA00022                                        1583
         LM    @00,@12,@SA00022+8                                  1583
         BR    @14                                                 1583
*   RFY                                                            1584
*     HMASMIOP BASED;                                              1584
*   RFY                                                            1585
*     SCLMAP BASED;                                                1585
*   RFY                                                            1586
*     ICTPTF BASED;                                                1586
*   END SMDICT;                     /*                               */
*                                                                  1588
*   /*****************************************************************/
*   /*                                                               */
*   /* FUNCFM - ISSUE SMP FUNCTION HALTED BECAUSE APPLICABLE FUNCTION*/
*   /* SYSMOD FAILED                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1588
*FUNCFM:                                                           1588
*   PROC(FFMSMD);                                                  1588
FUNCFM   STM   @14,@12,@SA00023                                    1588
         MVC   @PC00023(4),0(@01)                                  1588
*   DCL                                                            1589
*     FFMSMD CHAR(7);               /* FUNCTION NAME THAT FAILED     */
*                                                                  1589
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE MESSAGE 'HMA370I XXXXXXXX PROCESSING TERMINATED BECAUSE */
*   /* FUNCTION SYSMOD XXXXXXX FAILED'                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1590
*   DO;                             /* HMASMPMG M1(HMA370I)TYPE(SEV)V
*                                      AR(TBLXFUNC,FFMSMD)TARGET(SYSO
*                                      UT,LOG)                       */
*     HMASMMGP=HMASMMGP&&HMASMMGP;  /* SET PARMS TO ZEROS            */
         XC    HMASMMGP(28),HMASMMGP                               1591
*     MGPMGNO1=HMA370I;             /* SET UP MSG 1 CODE             */
         MVC   MGPMGNO1(2),@CH01243                                1592
*     MGPTYPE=MGPSEV;               /* SET MESSAGE TYPE              */
         MVI   MGPTYPE,X'04'                                       1593
*     MGPPRINT='1'B;                /* SET TARGET FLAG               */
*     MGPHLDS='1'B;                 /* SET TARGET FLAG               */
         OI    MGPPRINT,B'10010000'                                1595
*     MGPVARPT(1)=ADDR(TBLXFUNC);   /* SET VARIABLE PTR              */
         L     @08,@PC00001                                        1596
         LA    @08,TBLXFUNC(,@08)                                  1596
         ST    @08,MGPVARPT                                        1596
*     MGPVARPT(2)=ADDR(FFMSMD);     /* SET VARIABLE PTR              */
         L     @08,@PC00023                                        1597
         ST    @08,MGPVARPT+4                                      1597
*     CALL HMASMMSG(HMASMMGP);      /* HAVE MESSAGE ISSUED           */
         L     @15,@CV01230                                        1598
         LA    @01,@AL01598                                        1598
         BALR  @14,@15                                             1598
*   END;                            /*                               */
*   RETURN CODE(ZERO);                                             1600
         SLR   @15,@15                                             1600
         L     @14,@SA00023                                        1600
         LM    @00,@12,@SA00023+8                                  1600
         BR    @14                                                 1600
*   END FUNCFM;                                                    1601
*                                                                  1602
*   /*****************************************************************/
*   /*                                                               */
*   /* APPLVER - CHECK TO SEE IF THE FMID IN THE SCL RECORD PASSED IS*/
*   /* IS IN THE 'CURRENT ENVIRONMENT'                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1602
*APPLVER:                                                          1602
*   PROC(APVSCL);                                                  1602
APPLVER  STM   @14,@12,@SA00024                                    1602
         MVC   @PC00024(4),0(@01)                                  1602
*   DCL                                                            1603
*     APVSCL CHAR(*);               /* SCL FOR THE SYSMOD            */
*   DCL                                                            1604
*     NOAPPLCD FIXED(15) CONSTANT(4);/* NOT APPLICABLE RC            */
*   DCL                                                            1605
*     APVRC FIXED(15);                                             1605
*   RFY                                                            1606
*     SCLMAP BASED(ADDR(APVSCL));                                  1606
*   RFY                                                            1607
*     TSLPARMS BASED(TBLXTSLP);                                    1607
*   APVRC=ZERO;                     /* CLEAR RETURN CODE             */
         SLR   APVRC,APVRC                                         1608
*   TSLSICDS=''B;                   /* CLEAR PARMLIST                */
         L     @08,@PC00001                                        1609
         L     @08,TBLXTSLP(,@08)                                  1609
         L     @03,TSLPMLAD(,@08)                                  1609
         XC    TSLSICDS(20,@03),TSLSICDS(@03)                      1609
*   TSLFUNCT=TSLFICSR;              /* SEARCH ICT AND CDS            */
         MVI   TSLFUNCT(@08),X'04'                                 1610
*   TSLSSMD=SCLFMID;                /* ... FOR THE FMID ON THE SYSMOD
*                                      ...                           */
         L     @15,@PC00024                                        1611
         MVC   TSLSSMD(7,@03),SCLFMID(@15)                         1611
*   TSLSOPTF=''B;                   /* ...                           */
         MVI   TSLSOPTF(@03),X'00'                                 1612
*   TSLSOICT=ON;                    /* ...                           */
*   TSLSOCDS=ON;                    /* ...                           */
         OI    TSLSOICT(@03),B'11000000'                           1614
*   CALL HMASMTSB(TSLPARMS);        /* ...                           */
         ST    @08,@AL00001                                        1615
         L     @15,@CV01237                                        1615
         LA    @01,@AL00001                                        1615
         BALR  @14,@15                                             1615
*   IF TSLRETRN>TSLNTFND THEN                                      1616
         L     @08,@PC00001                                        1616
         L     @08,TBLXTSLP(,@08)                                  1616
         CLI   TSLRETRN(@08),4                                     1616
         BNH   @RF01616                                            1616
*     DO;                                                          1617
*       APVRC=MAX(APVRC,TSLRETRN);                                 1618
         SLR   @03,@03                                             1618
         IC    @03,TSLRETRN(,@08)                                  1618
         CR    APVRC,@03                                           1618
         BNL   *+6
         LR    APVRC,@03                                           1618
*     END;                                                         1619
*   ELSE                            /* NO ERROR                      */
*     DO;                                                          1620
         B     @RC01616                                            1620
@RF01616 DS    0H                                                  1621
*       IF TSLRETRN=TSLNTFND THEN                                  1621
         L     @08,@PC00001                                        1621
         L     @08,TBLXTSLP(,@08)                                  1621
         CLI   TSLRETRN(@08),4                                     1621
         BNE   @RF01621                                            1621
*         DO;                                                      1622
*           APVRC=NOAPPLCD;                                        1623
         LA    APVRC,4                                             1623
*         END;                                                     1624
*       ELSE                        /* FMID FOUND IN THE ICT OR    1625
*                                      (A)CDS                        */
*         DO;                                                      1625
         B     @RC01621                                            1625
@RF01621 DS    0H                                                  1626
*           IF TSLSIOK=ON           /* EITHER IN ICT OK ...          */
*               ×TSLSISUP=ON        /* ... OR SUP'ED ...             */
*               ×TSLSCOK=ON         /* OR ON CDS OK ...              */
*               ×TSLSCSUP=ON        /* ... OR SUP'ED ?               */
*             THEN                                                 1626
         L     @08,@PC00001                                        1626
         L     @08,TBLXTSLP(,@08)                                  1626
         L     @08,TSLPMLAD(,@08)                                  1626
         TM    TSLSIOK(@08),B'01100000'                            1626
         BNZ   @RT01626                                            1626
         TM    TSLSCOK(@08),B'01100000'                            1626
         BZ    @RF01626                                            1626
@RT01626 DS    0H                                                  1627
*             DO;                                                  1627
*               APVRC=ZERO;         /* THIS ++VER FOR SYSMOD IS    1628
*                                      APPLICABLE TO THE CURRENT   1628
*                                      ENVIRONMENT                   */
         SLR   APVRC,APVRC                                         1628
*             END;                                                 1629
*           ELSE                    /* FOUND IN WRONG STATE          */
*             DO;                                                  1630
         B     @RC01626                                            1630
@RF01626 DS    0H                                                  1631
*               APVRC=NOAPPLCD;                                    1631
         LA    APVRC,4                                             1631
*             END;                                                 1632
*         END;                                                     1633
@RC01626 DS    0H                                                  1634
*     END;                                                         1634
@RC01621 DS    0H                                                  1635
*   RETURN CODE(APVRC);                                            1635
@RC01616 LR    @15,APVRC                                           1635
         L     @14,@SA00024                                        1635
         LM    @00,@12,@SA00024+8                                  1635
         BR    @14                                                 1635
*   RFY                                                            1636
*     SCLMAP BASED;                                                1636
*   RFY                                                            1637
*     TSLPARMS BASED;                                              1637
*   END APPLVER;                                                   1638
*                                                                  1639
*   /*****************************************************************/
*   /*                                                               */
*   /* AMBIGCK -                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1639
*AMBIGCK:                                                          1639
*   PROC(AMBSCL);                                                  1639
AMBIGCK  STM   @14,@12,@SA00025                                    1639
         MVC   @PC00025(4),0(@01)                                  1639
*   DCL                                                            1640
*     AMBSCL CHAR(LENGTH(SCLMAP));  /* SCL RECORD                    */
*   DCL                                                            1641
*     AMBNAME CHAR(7);              /* NAME OF THE CURRENT SYSMOD    */
*   DCL                                                            1642
*     AMBSCL2 CHAR(LENGTH(SCLMAP)); /* SCL RECORD                    */
*   DCL                                                            1643
*     AMBPREV@ PTR(31);             /* PREVIOUS SCL RECORD ADDR      */
*   DCL                                                            1644
*     1 AMBFLAGS,                   /* LOCAL CONTROL FLAGS           */
*      2 AMBEND BIT(1),             /* END OF SCL RECORDS FOR CURRENT
*                                      SYSMOD                        */
*      2 * BIT(6);                                                 1644
*   DCL                                                            1645
*     AMBRC FIXED(15);                                             1645
*   RFY                                                            1646
*     SCLMAP BASED(ADDR(AMBSCL));                                  1646
*   AMBRC=ZERO;                                                    1647
         SLR   AMBRC,AMBRC                                         1647
*   AMBPREV@=ADDR(SCLMAP);                                         1648
         L     @08,@PC00025                                        1648
         ST    @08,AMBPREV@                                        1648
*   AMBNAME=SCLSMD;                 /* SAVE THE NAME OF THE CURRENT
*                                      SYSMOD                        */
         MVC   AMBNAME(7),SCLSMD(@08)                              1649
*   AMBFLAGS=''B;                   /* CLEAR CONTROL FLAGS           */
         MVI   AMBFLAGS,X'00'                                      1650
*   DO WHILE(AMBRC<STOPSMD          /* SEARCH UNTIL ERROR OR       1651
*                                      AMBIGUITY FOUND               */
*         &AMBEND=OFF);                                            1651
         B     @DE01651                                            1651
@DL01651 DS    0H                                                  1652
*     CALL GETNLSMD(SCLISTNO,       /*                               */
*         AMBPREV@,                 /*                               */
*         AMBSCL2);                                                1652
         MVC   @AL00001+4(8),@AL01652                              1652
         L     @08,@PC00025                                        1652
         ST    @08,@AL00001                                        1652
         LA    @01,@AL00001                                        1652
         BAL   @14,GETNLSMD                                        1652
*     RFY                                                          1653
*       RTNCODE RSTD;                                              1653
*     IF RTNCODE=GTPEOF THEN        /* END OF FILE OR LIST IN GTA  1654
*                                      FILE?                         */
         CH    RTNCODE,@CH00038                                    1654
         BNE   @RF01654                                            1654
*       DO;                         /* YES,                          */
*         RFY                                                      1656
*           RTNCODE UNRSTD;                                        1656
*         AMBEND=ON;                /* END OF SEARCH                 */
         OI    AMBEND,B'10000000'                                  1657
*       END;                                                       1658
*     ELSE                          /* NOT END OF LIST               */
*       DO;                                                        1659
         B     @RC01654                                            1659
@RF01654 DS    0H                                                  1660
*         IF SCLSMD=AMBNAME THEN    /* GOTTEN RECORD FOR CURRENT   1660
*                                      SYSMOD?                       */
         L     @08,@PC00025                                        1660
         CLC   SCLSMD(7,@08),AMBNAME                               1660
         BNE   @RF01660                                            1660
*           DO;                                                    1661
*             CALL APPLVER(SCLMAP); /* SEE IF IT IS APPLICABLE       */
         ST    @08,@AL00001                                        1662
         LA    @01,@AL00001                                        1662
         BAL   @14,APPLVER                                         1662
*             RFY                                                  1663
*               RTNCODE RSTD;                                      1663
*             IF RTNCODE=ZERO THEN  /* THE ++VER IS APPLICABLE       */
         LTR   RTNCODE,RTNCODE                                     1664
         BNZ   @RF01664                                            1664
*               DO;                                                1665
*                 RFY                                              1666
*                   RTNCODE UNRSTD;                                1666
*                 AMBRC=STOPSMD;    /* STOP THE PTF                  */
*                                                                  1667
         LA    AMBRC,8                                             1667
*                 /***************************************************/
*                 /*                                                 */
*                 /* ISSUE ERROR MESSAGE HMA373I SYSMOD XXXXXXX HAS  */
*                 /* MORE THAT ONE APPLICABLE VER STATEMENT          */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1668
*                 DO;               /* HMASMPMG M1(HMA373I)TYPE(ERR)V
*                                      AR(AMBNAME)TARGET(SYSOUT,LOG) */
*                   HMASMMGP=HMASMMGP&&HMASMMGP;/* SET PARMS TO ZEROS*/
         XC    HMASMMGP(28),HMASMMGP                               1669
*                   MGPMGNO1=HMA373I;/* SET UP MSG 1 CODE            */
         MVC   MGPMGNO1(2),@CH01247                                1670
*                   MGPTYPE=MGPERR; /* SET MESSAGE TYPE              */
         MVI   MGPTYPE,X'03'                                       1671
*                   MGPPRINT='1'B;  /* SET TARGET FLAG               */
*                   MGPHLDS='1'B;   /* SET TARGET FLAG               */
         OI    MGPPRINT,B'10010000'                                1673
*                   MGPVARPT(1)=ADDR(AMBNAME);/* SET VARIABLE PTR    */
         LA    @08,AMBNAME                                         1674
         ST    @08,MGPVARPT                                        1674
*                   CALL HMASMMSG(HMASMMGP);/* HAVE MESSAGE ISSUED   */
         L     @15,@CV01230                                        1675
         LA    @01,@AL01675                                        1675
         BALR  @14,@15                                             1675
*                 END;              /*                               */
*               END;                                               1677
*             ELSE                                                 1678
*               ;                   /* CONTINUE SEARCH WITH NEXT     */
@RF01664 DS    0H                                                  1679
*           END;                                                   1679
*         ELSE                      /* SCL RECORD FOR THE NEXT SYSMOD*/
*           DO;                                                    1680
         B     @RC01660                                            1680
@RF01660 DS    0H                                                  1681
*             AMBEND=ON;            /* END OF SEARCH                 */
         OI    AMBEND,B'10000000'                                  1681
*           END;                                                   1682
*       END;                                                       1683
@RC01660 DS    0H                                                  1684
*   END;                                                           1684
@RC01654 DS    0H                                                  1684
@DE01651 CH    AMBRC,@CH00056                                      1684
         BNL   @DC01651                                            1684
         TM    AMBEND,B'10000000'                                  1684
         BZ    @DL01651                                            1684
@DC01651 DS    0H                                                  1685
*   RETURN CODE(AMBRC);                                            1685
         LR    @15,AMBRC                                           1685
         L     @14,@SA00025                                        1685
         LM    @00,@12,@SA00025+8                                  1685
         BR    @14                                                 1685
*   RFY                                                            1686
*     SCLMAP BASED;                                                1686
*   END AMBIGCK;                                                   1687
*                                                                  1688
*   /*****************************************************************/
*   /*                                                               */
*   /* SUPCK - CHECK SUP'S                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1688
*SUPCK:                                                            1688
*   PROC(SUPTYPE,                   /* TYPE OF PROCESSING            */
*       SUPSCL,                     /* SYSMOD CANDIDATE LIST RECORD  */
*       SUPIOP,                     /* EXTENDED IOP                  */
*       SUPSUPN);                   /* SUPERCEDE COUNT               */
SUPCK    STM   @14,@12,@SA00026                                    1688
         MVC   @PC00026(16),0(@01)                                 1688
*   DCL                                                            1689
*     SUPTYPE CHAR(1);              /* TYPE                          */
*   DCL                                                            1690
*     SUPSCL CHAR(LENGTH(SCLMAP));  /* SCL RECORD                    */
*   DCL                                                            1691
*     SUPIOP CHAR(*);               /* IOP                           */
*   DCL                                                            1692
*     SUPSUPN FIXED(16);            /* SUPERCEDE COUNT FIELD         */
*   DCL                                                            1693
*     SUPRC FIXED(15);                                             1693
*   DCL                                                            1694
*     1 SUPFLAGS,                   /* LOCAL CONTROL FLAGS           */
*      2 SUPEOLST BIT(1),           /* END OF IOP LIST SEARCH        */
*      2 SUPICEND BIT(1),           /* END OF ICT SEARCH             */
*      2 * BIT(6);                  /* UNUSED                        */
*   RFY                                                            1695
*     HMASMIOP BASED(ADDR(SUPIOP));                                1695
*   RFY                                                            1696
*     SCLMAP BASED(ADDR(SUPSCL));                                  1696
*   RFY                                                            1697
*     TSLPARMS BASED(TBLXTSLP);                                    1697
*   SUPRC=ZERO;                                                    1698
         SLR   SUPRC,SUPRC                                         1698
*   SUPSUPN=ZERO;                   /* INIT SUPERCEDE COUNT          */
         L     @08,@PC00026+12                                     1699
         SLR   @02,@02                                             1699
         STH   @02,SUPSUPN(,@08)                                   1699
*   SUPFLAGS=''B;                   /* CLEAR LOCAL FLAGS             */
         MVI   SUPFLAGS,X'00'                                      1700
*   TSLLSTSR=''B;                   /* CLEAR TSB PARM LIST           */
*                                                                  1701
         L     @08,@PC00001                                        1701
         L     @08,TBLXTSLP(,@08)                                  1701
         L     @02,TSLPMLAD(,@08)                                  1701
         XC    TSLLSTSR(16,@02),TSLLSTSR(@02)                      1701
*   /*****************************************************************/
*   /*                                                               */
*   /* SEE IF SYSMOD IN SUP LIST OF ANY ICT SYSMOD                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1702
*   TSLLSMD=IOPNAM17;                                              1702
         L     @15,@PC00026+8                                      1702
         MVC   TSLLSMD(7,@02),IOPNAM17(@15)                        1702
*   TSLFUNCT=TSLFLSRH;                                             1703
         MVI   TSLFUNCT(@08),X'02'                                 1703
*   RFY                                                            1704
*     ICTPTF BASED(CCAICPTF);                                      1704
*   TSLLOFST=ADDR(ICTPSCHN(1))-ADDR(ICTPTF(1));/* SUP LIST OFFSET    */
         L     @08,CCAICPTF(,CCAPTR)                               1705
         LA    @15,ICTPSCHN(,@08)                                  1705
         SLR   @15,@08                                             1705
         ST    @15,TSLLOFST(,@02)                                  1705
*   RFY                                                            1706
*     ICTPTF BASED;                                                1706
*   DO WHILE(SUPICEND=OFF           /* SEARCH ENTIRE LIST            */
*         &SUPRC<STOPSMD);                                         1707
         B     @DE01707                                            1707
@DL01707 DS    0H                                                  1708
*     CALL HMASMTSB(TSLPARMS);                                     1708
         L     @08,@PC00001                                        1708
         L     @08,TBLXTSLP(,@08)                                  1708
         ST    @08,@AL00001                                        1708
         L     @15,@CV01237                                        1708
         LA    @01,@AL00001                                        1708
         BALR  @14,@15                                             1708
*     TSLLONXT=ON;                  /*                               */
         L     @08,@PC00001                                        1709
         L     @08,TBLXTSLP(,@08)                                  1709
         L     @08,TSLPMLAD(,@08)                                  1709
         OI    TSLLONXT(@08),B'10000000'                           1709
*     RFY                                                          1710
*       RTNCODE RSTD;                                              1710
*     IF RTNCODE=TSLFOUND THEN      /* FOUND SUP'ED?                 */
         LTR   RTNCODE,RTNCODE                                     1711
         BNZ   @RF01711                                            1711
*       DO;                                                        1712
*         RFY                                                      1713
*           RTNCODE UNRSTD;                                        1713
*         SUPSUPN=SUPSUPN+1;        /* INCREMENT SUPERCEDE FOUND CTR */
         L     @02,@PC00026+12                                     1714
         LA    @15,1                                               1714
         SLR   @14,@14                                             1714
         ICM   @14,3,SUPSUPN(@02)                                  1714
         ALR   @15,@14                                             1714
         STH   @15,SUPSUPN(,@02)                                   1714
*         IF SUPTYPE=DELETE THEN    /* DELETE PROCESSING?            */
         L     @02,@PC00026                                        1715
         CLI   SUPTYPE(@02),C'D'                                   1715
         BNE   @RF01715                                            1715
*           DO;                     /* YES,                          */
*             SUPRC=STOPSMD;        /* STOP THE SYSMOD               */
*                                                                  1717
         LA    SUPRC,8                                             1717
*             /*******************************************************/
*             /*                                                     */
*             /* ISSUE MESSAGE HMA384I DELETE FUNCTION XXXXXXX IS    */
*             /* SUPERCEEDED BY FUNCTION XXXXXXX                     */
*             /*                                                     */
*             /*******************************************************/
*                                                                  1718
*             DO;                   /* HMASMPMG M1(HMA384I)TYPE(ERR)V
*                                      AR(SCLSMD,TSLLRTNP->ICTPTFS(1)
*                                      )TARGET(SYSOUT,LOG)           */
*               HMASMMGP=HMASMMGP&&HMASMMGP;/* SET PARMS TO ZEROS    */
         XC    HMASMMGP(28),HMASMMGP                               1719
*               MGPMGNO1=HMA384I;   /* SET UP MSG 1 CODE             */
         MVC   MGPMGNO1(2),@CH01253                                1720
*               MGPTYPE=MGPERR;     /* SET MESSAGE TYPE              */
         MVI   MGPTYPE,X'03'                                       1721
*               MGPPRINT='1'B;      /* SET TARGET FLAG               */
*               MGPHLDS='1'B;       /* SET TARGET FLAG               */
         OI    MGPPRINT,B'10010000'                                1723
*               MGPVARPT(1)=ADDR(SCLSMD);/* SET VARIABLE PTR         */
         L     @02,@PC00026+4                                      1724
         LA    @02,SCLSMD(,@02)                                    1724
         ST    @02,MGPVARPT                                        1724
*               MGPVARPT(2)=ADDR(TSLLRTNP->ICTPTFS(1));/* SET      1725
*                                      VARIABLE PTR                  */
         L     @08,TSLLRTNP(,@08)                                  1725
         ST    @08,MGPVARPT+4                                      1725
*               CALL HMASMMSG(HMASMMGP);/* HAVE MESSAGE ISSUED       */
         L     @15,@CV01230                                        1726
         LA    @01,@AL01726                                        1726
         BALR  @14,@15                                             1726
*             END;                  /*                               */
*           END;                                                   1728
*         ELSE                                                     1729
*           ;                                                      1729
@RF01715 DS    0H                                                  1730
*         IF SUPTYPE=LEVEL2 THEN    /* PROCESSING A LOWER LEVEL    1730
*                                      FUNCTION?                     */
         L     @08,@PC00026                                        1730
         CLI   SUPTYPE(@08),C'2'                                   1730
         BNE   @RF01730                                            1730
*           DO;                                                    1731
*                                                                  1731
*             /*******************************************************/
*             /*                                                     */
*             /* CHECK FMID MATCH                                    */
*             /*                                                     */
*             /*******************************************************/
*                                                                  1732
*             IF SCLFMID^=TSLLRTNP->ICTPFMID(1) THEN/* DIFFERENT   1732
*                                      FMID'S                        */
         L     @08,@PC00026+4                                      1732
         L     @02,@PC00001                                        1732
         L     @02,TBLXTSLP(,@02)                                  1732
         L     @02,TSLPMLAD(,@02)                                  1732
         L     @01,TSLLRTNP(,@02)                                  1732
         CLC   SCLFMID(7,@08),ICTPFMID(@01)                        1732
         BE    @RF01732                                            1732
*               DO;                                                1733
*                                                                  1733
*                 /***************************************************/
*                 /*                                                 */
*                 /* ISSUE MESSAGE HMA383I FUNCTION XXXXXXX (FMID    */
*                 /* XXXXXXX) SUPERCEEDS FUNCTION XXXXXXX (FMID      */
*                 /* XXXXXXX) BUT THE FMIDS ARE NOT EQUAL            */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1734
*                 DO;               /* HMASMPMG M1(HMA383I)TYPE(ERR)V
*                                      AR(TSLICTP->ICTPTFS(1),TSLICTP
*                                      ->ICTPFMID(1),SCLSMD,SCLFMID)T
*                                      ARGET(SYSOUT,LOG)             */
*                   HMASMMGP=HMASMMGP&&HMASMMGP;/* SET PARMS TO ZEROS*/
         XC    HMASMMGP(28),HMASMMGP                               1735
*                   MGPMGNO1=HMA383I;/* SET UP MSG 1 CODE            */
         MVC   MGPMGNO1(2),@CH01251                                1736
*                   MGPTYPE=MGPERR; /* SET MESSAGE TYPE              */
         MVI   MGPTYPE,X'03'                                       1737
*                   MGPPRINT='1'B;  /* SET TARGET FLAG               */
*                   MGPHLDS='1'B;   /* SET TARGET FLAG               */
         OI    MGPPRINT,B'10010000'                                1739
*                   MGPVARPT(1)=ADDR(TSLICTP->ICTPTFS(1));/* SET   1740
*                                      VARIABLE PTR                  */
         L     @02,TSLICTP(,@02)                                   1740
         ST    @02,MGPVARPT                                        1740
*                   MGPVARPT(2)=ADDR(TSLICTP->ICTPFMID(1));/* SET  1741
*                                      VARIABLE PTR                  */
         LA    @02,ICTPFMID(,@02)                                  1741
         ST    @02,MGPVARPT+4                                      1741
*                   MGPVARPT(3)=ADDR(SCLSMD);/* SET VARIABLE PTR     */
         LA    @02,SCLSMD(,@08)                                    1742
         ST    @02,MGPVARPT+8                                      1742
*                   MGPVARPT(4)=ADDR(SCLFMID);/* SET VARIABLE PTR    */
         LA    @08,SCLFMID(,@08)                                   1743
         ST    @08,MGPVARPT+12                                     1743
*                   CALL HMASMMSG(HMASMMGP);/* HAVE MESSAGE ISSUED   */
         L     @15,@CV01230                                        1744
         LA    @01,@AL01744                                        1744
         BALR  @14,@15                                             1744
*                 END;              /*                               */
*               END;                                               1746
*             ELSE                  /* MATCHING FMID'S               */
*               DO;                                                1747
         B     @RC01732                                            1747
@RF01732 DS    0H                                                  1748
*               END;                                               1748
*           END;                                                   1749
*       END;                                                       1750
*     ELSE                          /* NOT FOUND SUP'ED              */
*       DO;                                                        1751
         B     @RC01711                                            1751
@RF01711 DS    0H                                                  1752
*         SUPICEND=ON;                                             1752
         OI    SUPICEND,B'01000000'                                1752
*       END;                                                       1753
*   END;                            /* END SEARCH FOR LIST ENTRY     */
@RC01711 DS    0H                                                  1754
@DE01707 TM    SUPICEND,B'01000000'                                1754
         BNZ   @DC01707                                            1754
         CH    SUPRC,@CH00056                                      1754
         BL    @DL01707                                            1754
@DC01707 DS    0H                                                  1755
*   IF SUPRC<STOPSMD THEN           /* NO ERROR SO FAR?              */
         CH    SUPRC,@CH00056                                      1755
         BNL   @RF01755                                            1755
*     DO;                           /* YES,                          */
*       TSLENTSR=''B;               /* CLEAR PARM LIST FOR SUB-ENTRY
*                                      SEARCH                        */
         L     @08,@PC00001                                        1757
         L     @02,TBLXTSLP(,@08)                                  1757
         L     @15,TSLPMLAD(,@02)                                  1757
         XC    TSLENTSR(16,@15),TSLENTSR(@15)                      1757
*       TSLETYPE=IOPPSUPV;          /* SEARCH TYPE IS SUP            */
         MVI   TSLETYPE(@15),X'A4'                                 1758
*       TSLFUNCT=TSLFENSR;          /* SEARCH IOP SUB-ENTRIES        */
         MVI   TSLFUNCT(@02),X'06'                                 1759
*       TSLEBGNP=ADDR(IOPPTFVR);    /* BEGIN AT BEGINNING            */
         L     @02,@PC00026+8                                      1760
         LA    @02,IOPPTFVR(,@02)                                  1760
         ST    @02,TSLEBGNP(,@15)                                  1760
*       TSLEVER#=SCLVERNO;          /* ++VER NUMBER                  */
         L     @02,@PC00026+4                                      1761
         MVC   TSLEVER#(1,@15),SCLVERNO(@02)                       1761
*       RFY                                                        1762
*         TSLPARMS BASED(ADDR(TPATSL2));                           1762
*       TSLPMLAD=ADDR(TPATSS2);     /* SETUP SECOND TSB PARM LIST    */
         LA    @02,TPATSL2                                         1763
         LA    @15,TPATSS2                                         1763
         ST    @15,TSLPMLAD(,@02)                                  1763
*       TSLTBLXP=ADDR(TBLXPARM);    /* POINT TO TBLX                 */
         ST    @08,TSLTBLXP(,@02)                                  1764
*       TSLICTSR=''B;               /* CLEAR SECONDARY PARM LIST     */
         XC    TSLICTSR(14,@15),TSLICTSR(@15)                      1765
*       TSLFUNCT=TSLFISRH;          /* SEARCH ICT                    */
         MVI   TSLFUNCT(@02),X'01'                                 1766
*       RFY                                                        1767
*         TSLPARMS BASED(TBLXTSLP);                                1767
*                                                                  1767
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE SYSMODS IN THE ICT THAT ARE SUP'ED BY THE       */
*       /* CURRENT SYSMOD                                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1768
*       DO WHILE(SUPRC<STOPSMD      /* SEARCH UNTIL END OF LIST      */
*             &SUPEOLST=OFF);                                      1768
         B     @DE01768                                            1768
@DL01768 DS    0H                                                  1769
*         CALL HMASMTSB(TSLPARMS);  /* FIND SUP IN THE IOP           */
         L     @08,@PC00001                                        1769
         L     @08,TBLXTSLP(,@08)                                  1769
         ST    @08,@AL00001                                        1769
         L     @15,@CV01237                                        1769
         LA    @01,@AL00001                                        1769
         BALR  @14,@15                                             1769
*         IF TSLRETRN=TSLNTFND THEN /* NOT FOUND?                    */
         L     @08,@PC00001                                        1770
         L     @08,TBLXTSLP(,@08)                                  1770
         CLI   TSLRETRN(@08),4                                     1770
         BNE   @RF01770                                            1770
*           DO;                                                    1771
*             SUPEOLST=ON;          /* END OF SUP SUB-ENTRY SEARCH   */
         OI    SUPEOLST,B'10000000'                                1772
*           END;                                                   1773
*         ELSE                      /* SUP SUB-ENTRY FOUND IN IOP    */
*           DO;                                                    1774
*                                                                  1774
         B     @RC01770                                            1774
@RF01770 DS    0H                                                  1775
*             /*******************************************************/
*             /*                                                     */
*             /* SEE IF SUP'ED SYSMOD IS IN THE ICT                  */
*             /*                                                     */
*             /*******************************************************/
*                                                                  1775
*             TSLEONXT=ON;          /* GET NXT SUP FROM IOP          */
         L     @08,@PC00001                                        1775
         L     @08,TBLXTSLP(,@08)                                  1775
         L     @08,TSLPMLAD(,@08)                                  1775
         OI    TSLEONXT(@08),B'10000000'                           1775
*             ADDR(TPATSS2)->TSLISMD=/* SYSMOD NAME                  */
*                 TSLEFNDP->BASEDSMD;                              1776
         LA    @02,TPATSS2                                         1776
         L     @08,TSLEFNDP(,@08)                                  1776
         MVC   TSLISMD(7,@02),BASEDSMD(@08)                        1776
*             CALL HMASMTSB(TPATSL2);                              1777
         L     @15,@CV01237                                        1777
         LA    @01,@AL01777                                        1777
         BALR  @14,@15                                             1777
*             IF ADDR(TPATSL2)->TSLRETRN=TSLFOUND THEN/* FOUND IN  1778
*                                      ICT?                          */
         LA    @08,TPATSL2                                         1778
         CLI   TSLRETRN(@08),0                                     1778
         BNE   @RF01778                                            1778
*               DO;                                                1779
*                 ADDR(TPATSS2)->   /* INCREMENT THE SUP COUNT       */
*                     TSLICTP->ICTPSUPN(1)=/*                        */
*                     ADDR(TPATSS2)->/*                              */
*                     TSLICTP->ICTPSUPN(1)+1;                      1780
*                                                                  1780
         LA    @08,TPATSS2                                         1780
         L     @08,TSLICTP(,@08)                                   1780
         LA    @02,1                                               1780
         SLR   @15,@15                                             1780
         ICM   @15,3,ICTPSUPN(@08)                                 1780
         ALR   @02,@15                                             1780
         STH   @02,ICTPSUPN(,@08)                                  1780
*                 /***************************************************/
*                 /*                                                 */
*                 /* CHECK FMID IF FUNCTION                          */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1781
*                 IF SUPTYPE=DELETE THEN/* DELETE PROCESSING?        */
         L     @08,@PC00026                                        1781
         CLI   SUPTYPE(@08),C'D'                                   1781
         BNE   @RF01781                                            1781
*                   DO;             /* YES,                          */
*                     SUPRC=STOPSMD;/* STOP THE SYSMOD               */
*                                                                  1783
         LA    SUPRC,8                                             1783
*                     /***********************************************/
*                     /*                                             */
*                     /* ISSUE MESSAGE HMA384I DELETE FUNCTION       */
*                     /* XXXXXXX IS SUPERCEEDED BY FUNCTION XXXXXXX  */
*                     /*                                             */
*                     /***********************************************/
*                                                                  1784
*                     DO;           /* HMASMPMG M1(HMA384I)TYPE(ERR)V
*                                      AR(TSLEFNDP->BASEDSMD,SCLSMD)T
*                                      ARGET(SYSOUT,LOG)             */
*                       HMASMMGP=HMASMMGP&&HMASMMGP;/* SET PARMS TO
*                                      ZEROS                         */
         XC    HMASMMGP(28),HMASMMGP                               1785
*                       MGPMGNO1=HMA384I;/* SET UP MSG 1 CODE        */
         MVC   MGPMGNO1(2),@CH01253                                1786
*                       MGPTYPE=MGPERR;/* SET MESSAGE TYPE           */
         MVI   MGPTYPE,X'03'                                       1787
*                       MGPPRINT='1'B;/* SET TARGET FLAG             */
*                       MGPHLDS='1'B;/* SET TARGET FLAG              */
         OI    MGPPRINT,B'10010000'                                1789
*                       MGPVARPT(1)=ADDR(TSLEFNDP->BASEDSMD);/* SET
*                                      VARIABLE PTR                  */
         L     @08,@PC00001                                        1790
         L     @08,TBLXTSLP(,@08)                                  1790
         L     @08,TSLPMLAD(,@08)                                  1790
         MVC   MGPVARPT(4),TSLEFNDP(@08)                           1790
*                       MGPVARPT(2)=ADDR(SCLSMD);/* SET VARIABLE PTR */
         L     @08,@PC00026+4                                      1791
         LA    @08,SCLSMD(,@08)                                    1791
         ST    @08,MGPVARPT+4                                      1791
*                       CALL HMASMMSG(HMASMMGP);/* HAVE MESSAGE    1792
*                                      ISSUED                        */
         L     @15,@CV01230                                        1792
         LA    @01,@AL01792                                        1792
         BALR  @14,@15                                             1792
*                     END;          /*                               */
*                   END;                                           1794
*                 ELSE                                             1795
*                   ;                                              1795
@RF01781 DS    0H                                                  1796
*                 IF SUPTYPE=LEVEL2 THEN/* PROCESSING A LOWER LEVEL
*                                      FUNCTION?                     */
         L     @08,@PC00026                                        1796
         CLI   SUPTYPE(@08),C'2'                                   1796
         BNE   @RF01796                                            1796
*                   DO;                                            1797
*                                                                  1797
*                     /***********************************************/
*                     /*                                             */
*                     /* CHECK FMID MATCH                            */
*                     /*                                             */
*                     /***********************************************/
*                                                                  1798
*                     IF SCLFMID^=  /* DIFFERENT FMIDS?              */
*                         ADDR(TPATSS2)->TSLICTP->ICTPFMID(1) THEN 1798
         L     @08,@PC00026+4                                      1798
         LA    @02,TPATSS2                                         1798
         L     @02,TSLICTP(,@02)                                   1798
         CLC   SCLFMID(7,@08),ICTPFMID(@02)                        1798
         BE    @RF01798                                            1798
*                       DO;                                        1799
*                                                                  1799
*                         /*******************************************/
*                         /*                                         */
*                         /* ISSUE MESSAGE HMA383I FUNCTION XXXXXXX  */
*                         /* (FMID XXXXXXX) SUPERCEEDS FUNCTION      */
*                         /* XXXXXXX (FMID XXXXXXX) BUT THE FMIDS ARE*/
*                         /* NOT EQUAL                               */
*                         /*                                         */
*                         /*******************************************/
*                                                                  1800
*                         DO;       /* HMASMPMG M1(HMA383I)TYPE(ERR)V
*                                      AR(SCLSMD,SCLFMID,ADDR(TPATSS2
*                                      )->TSLICTP->ICTPTFS(1),ADDR(TP
*                                      ATSS2)->TSLICTP->ICTPFMID(1))T
*                                      ARGET(SYSOUT,LOG)             */
*                           HMASMMGP=HMASMMGP&&HMASMMGP;/* SET PARMS
*                                      TO ZEROS                      */
         XC    HMASMMGP(28),HMASMMGP                               1801
*                           MGPMGNO1=HMA383I;/* SET UP MSG 1 CODE    */
         MVC   MGPMGNO1(2),@CH01251                                1802
*                           MGPTYPE=MGPERR;/* SET MESSAGE TYPE       */
         MVI   MGPTYPE,X'03'                                       1803
*                           MGPPRINT='1'B;/* SET TARGET FLAG         */
*                           MGPHLDS='1'B;/* SET TARGET FLAG          */
         OI    MGPPRINT,B'10010000'                                1805
*                           MGPVARPT(1)=ADDR(SCLSMD);/* SET VARIABLE
*                                      PTR                           */
         LA    @15,SCLSMD(,@08)                                    1806
         ST    @15,MGPVARPT                                        1806
*                           MGPVARPT(2)=ADDR(SCLFMID);/* SET VARIABLE
*                                      PTR                           */
         LA    @08,SCLFMID(,@08)                                   1807
         ST    @08,MGPVARPT+4                                      1807
*                           MGPVARPT(3)=ADDR(ADDR(TPATSS2)->TSLICTP->
*                               ICTPTFS(1));/* SET VARIABLE PTR      */
         ST    @02,MGPVARPT+8                                      1808
*                           MGPVARPT(4)=ADDR(ADDR(TPATSS2)->TSLICTP->
*                               ICTPFMID(1));/* SET VARIABLE PTR     */
         LA    @08,ICTPFMID(,@02)                                  1809
         ST    @08,MGPVARPT+12                                     1809
*                           CALL HMASMMSG(HMASMMGP);/* HAVE MESSAGE
*                                      ISSUED                        */
         L     @15,@CV01230                                        1810
         LA    @01,@AL01810                                        1810
         BALR  @14,@15                                             1810
*                         END;      /*                               */
*                       END;                                       1812
*                     ELSE          /* MATCHING FMID'S               */
*                       DO;                                        1813
         B     @RC01798                                            1813
@RF01798 DS    0H                                                  1814
*                       END;                                       1814
*                   END;                                           1815
*               END;                                               1816
*             ELSE                                                 1817
*               ;                   /* SUP IS NOT IN ICT             */
@RF01778 DS    0H                                                  1818
*           END;                                                   1818
@RC01778 DS    0H                                                  1819
*       END;                        /* END OF SEARCH LOOP            */
@RC01770 DS    0H                                                  1819
@DE01768 CH    SUPRC,@CH00056                                      1819
         BNL   @DC01768                                            1819
         TM    SUPEOLST,B'10000000'                                1819
         BZ    @DL01768                                            1819
@DC01768 DS    0H                                                  1820
*     END;                                                         1820
*   RETURN CODE(SUPRC);                                            1821
@RF01755 LR    @15,SUPRC                                           1821
         L     @14,@SA00026                                        1821
         LM    @00,@12,@SA00026+8                                  1821
         BR    @14                                                 1821
*   RFY                                                            1822
*     HMASMIOP BASED;                                              1822
*   RFY                                                            1823
*     TSLPARMS BASED;                                              1823
*   RFY                                                            1824
*     SCLMAP BASED;                                                1824
*   END SUPCK;                                                     1825
*   END HMASMTPA                    /*                               */
*                                                                  1826
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMICT)                                       */
*/*%INCLUDE SYSLIB  (HMASMMGP)                                       */
*/*%INCLUDE SYSLIB  (HMASMSET)                                       */
*/*%INCLUDE SYSLIB  (HMASMGTP)                                       */
*                                                                  1826
*       ;                                                          1826
@DATA    DS    0H
@CH00064 DC    H'1'
@CH00038 DC    H'4'
@CH00102 DC    H'5'
@CH00056 DC    H'8'
@CH00033 DC    H'12'
@CH01757 DC    H'116'
@CH01258 DC    H'119'
@CH00791 DC    H'165'
@CH01243 DC    H'171'
@CH01245 DC    H'173'
@CH01247 DC    H'174'
@CH01249 DC    H'180'
@CH01251 DC    H'184'
@CH01253 DC    H'185'
@CH01255 DC    H'227'
         DS    0F
@AL00423 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00878 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01086 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01128 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01145 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01191 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01233 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01250 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01598 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01675 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01726 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01744 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01792 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01810 DC    A(HMASMMGP)             LIST WITH   1 ARGUMENT(S)
@AL00453 DC    A(@CC01106)             LIST WITH   2 ARGUMENT(S)
         DC    A(F1BCKEY@)
@AL00552 DC    A(@CC01108)             LIST WITH   3 ARGUMENT(S)
         DC    A(F2BCKEY@)
         DC    A(F2BSCL)
@AL00689 DC    A(SRVCKEY@)             LIST WITH   2 ARGUMENT(S)
         DC    A(SRVSCL)
@AL01291 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01294 DC    A(GRASTAT)              LIST WITH   2 ARGUMENT(S)
         DC    A(@CF00082)
@AL01304 DC    A(GRASTAT)              LIST WITH   2 ARGUMENT(S)
         DC    A(GRAIFOPT)
@AL01652 DC    A(AMBPREV@)             LIST WITH   2 ARGUMENT(S)
         DC    A(AMBSCL2)
@AL01777 DC    A(TPATSL2)              LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00003 DS    15F
@SA00005 DS    15F
@SA00006 DS    15F
@SA00007 DS    15F
@SA00025 DS    15F
@PC00025 DS    1F
@SA00019 DS    15F
@PC00019 DS    4F
@SA00015 DS    15F
@SA00021 DS    15F
@PC00021 DS    3F
@SA00016 DS    0F
@PC00016 EQU   @SA00016+60
@SA00014 DS    0F
@PC00014 EQU   @SA00014+60
@SA00013 DS    0F
@PC00013 EQU   @SA00013+60
@SA00022 DS    0F
@PC00022 EQU   @SA00022+60
@SA00017 DS    0F
@PC00017 EQU   @SA00017+60
@SA00024 DS    0F
@PC00024 EQU   @SA00024+60
@SA00012 DS    0F
@PC00012 EQU   @SA00012+60
@SA00018 DS    0F
@SA00023 DS    0F
@PC00023 EQU   @SA00023+60
@SA00004 DS    0F
@PC00004 EQU   @SA00004+60
@SA00026 DS    0F
@PC00026 EQU   @SA00026+60
@SA00008 DS    0F
@PC00008 EQU   @SA00008+60
@SA00020 DS    0F
@PC00020 EQU   @SA00020+60
@SA00010 DS    0F
@SA00009 DS    0F
         DS    19F
@AL00001 DS    5A
@TF00001 DS    F
         DS    0F
@CF00082 DC    F'0'
@CF01790 DC    F'-116'
@CF01785 DC    F'-108'
@CF01787 DC    F'-103'
@CF01791 DC    F'-100'
@CF01786 DC    F'-96'
@CF01793 DC    F'-48'
@CF01788 DC    F'-44'
@CF01792 DC    F'-40'
@CF01794 DC    F'-36'
@CF01796 DC    F'-16'
@CF01795 DC    F'-9'
@CF01789 DC    F'-8'
@CV01229 DC    V(HMASMIO)
@CV01230 DC    V(HMASMMSG)
@CV01231 DC    V(HMASMGTA)
@CV01232 DC    V(HMASMTAD)
@CV01233 DC    V(HMASMTEC)
@CV01234 DC    V(HMASMTD1)
@CV01235 DC    V(HMASMTPL)
@CV01236 DC    V(HMASMTP2)
@CV01237 DC    V(HMASMTSB)
@CV01238 DC    V(HMASMTPC)
         DS    0D
IOPPTR   DS    A
DELICTP  DS    A
F1BCKEY@ DS    A
F1BENTP  DS    A
F2BCKEY@ DS    A
F2BENTP  DS    A
SRVCKEY@ DS    A
SRVENTP  DS    A
SUPSICTP DS    A
AMBPREV@ DS    A
DELSUPN  DS    H
F1SUPN   DS    H
F2SUPN   DS    H
SRVSUPN  DS    H
@CC01106 DC    C'1'
@CC01108 DC    C'2'
@CC01268 DC    C'S'
@CC01285 DC    C'D'
ICTENDCH DC    X'FFFFFFFF'
HMASMMGP DS    CL28
         ORG   HMASMMGP
MGPFIXED DS    CL12
         ORG   MGPFIXED
MGPCLEAR DS    CL6
         ORG   MGPCLEAR
MGPMGNO1 DS    FL2
MGPMGNO2 DS    FL2
MGPMGNO3 DS    FL2
         ORG   MGPFIXED+6
MGPFLAGS DS    BL2
         ORG   MGPFLAGS
MGPPRINT DS    BL1
MGPLIST  EQU   MGPFLAGS+0
MGPRPT   EQU   MGPFLAGS+0
MGPHLDS  EQU   MGPFLAGS+0
MGPWTOR  EQU   MGPFLAGS+0
MGPWTO   EQU   MGPFLAGS+0
MGPWTP   EQU   MGPFLAGS+0
@NM00118 EQU   MGPFLAGS+0
         ORG   MGPFIXED+8
MGPTYPE  DS    FL1
@NM00119 DS    CL3
         ORG   HMASMMGP+12
MGPVAR   DS    CL16
         ORG   MGPVAR
MGPVARPT DS    4A
         ORG   HMASMMGP+28
PATCHTPA DS    CL80
         ORG   PATCHTPA
@NM00142 DC    80X'FF'
         ORG   PATCHTPA+80
TPAFLAGS DS    BL4
         ORG   TPAFLAGS
@NM00143 DS    BL1
@NM00144 DS    BL1
@NM00145 DS    BL1
@NM00146 DS    BL1
         ORG   TPAFLAGS+4
KEYSCLGN DS    CL15
TPATSL2  DS    CL10
TPATSS2  DS    CL256
DELFLAGS DS    BL1
         ORG   DELFLAGS
ENDFUNC  DS    BL1
DELSKIP  EQU   DELFLAGS+0
@NM00147 EQU   DELFLAGS+0
DELGET   EQU   DELFLAGS+0
@NM00148 EQU   DELFLAGS+0
         ORG   DELFLAGS+1
DELSCL   DS    CL17
DSCFLAGS DS    CL1
         ORG   DSCFLAGS
DSCEOLST DS    BL1
@NM00149 EQU   DSCFLAGS+0
         ORG   DSCFLAGS+1
F1BFLAGS DS    BL1
         ORG   F1BFLAGS
F1BCMP   DS    BL1
F1BL1END EQU   F1BFLAGS+0
F1BSKIP  EQU   F1BFLAGS+0
@NM00150 EQU   F1BFLAGS+0
         ORG   F1BFLAGS+1
F2BFLAGS DS    BL1
         ORG   F2BFLAGS
F2BCMP   DS    BL1
F2BL2END EQU   F2BFLAGS+0
F2BSKIP  EQU   F2BFLAGS+0
F2BGET   EQU   F2BFLAGS+0
@NM00151 EQU   F2BFLAGS+0
         ORG   F2BFLAGS+1
F2BSCL   DS    CL17
SRVFLAGS DS    BL1
         ORG   SRVFLAGS
SRVCMP   DS    BL1
SRVEND   EQU   SRVFLAGS+0
SRVSKIP  EQU   SRVFLAGS+0
SRVGET   EQU   SRVFLAGS+0
SRVREC   EQU   SRVFLAGS+0
@NM00152 EQU   SRVFLAGS+0
         ORG   SRVFLAGS+1
SRVSCL   DS    CL17
SELCFLGS DS    CL1
         ORG   SELCFLGS
SELCEOF  DS    BL1
@NM00153 EQU   SELCFLGS+0
         ORG   SELCFLGS+1
SUPSFLGS DS    CL1
         ORG   SUPSFLGS
@NM00154 DS    BL1
         ORG   SUPSFLGS+1
GNLFLAGS DS    BL1
         ORG   GNLFLAGS
GNLPOSIT DS    BL1
GNLSKIP1 EQU   GNLFLAGS+0
@NM00155 EQU   GNLFLAGS+0
         ORG   GNLFLAGS+1
NPCFLAGS DS    CL1
         ORG   NPCFLAGS
NPCFOUND DS    BL1
NPCEOLST EQU   NPCFLAGS+0
@NM00156 EQU   NPCFLAGS+0
         ORG   NPCFLAGS+1
DLCFLAGS DS    CL1
         ORG   DLCFLAGS
DLCFOUND DS    BL1
DLCEOLST EQU   DLCFLAGS+0
@NM00157 EQU   DLCFLAGS+0
         ORG   DLCFLAGS+1
GRASTAT  DS    BL1
GRAIFOPT DS    CL1
SSTFLAGS DS    CL1
         ORG   SSTFLAGS
SSTEOF   DS    BL1
SSTFOUND EQU   SSTFLAGS+0
SSTOK    EQU   SSTFLAGS+0
@NM00158 EQU   SSTFLAGS+0
         ORG   SSTFLAGS+1
LNXCSCL  DS    CL17
AMBNAME  DS    CL7
AMBSCL2  DS    CL17
AMBFLAGS DS    CL1
         ORG   AMBFLAGS
AMBEND   DS    BL1
@NM00159 EQU   AMBFLAGS+0
         ORG   AMBFLAGS+1
SUPFLAGS DS    CL1
         ORG   SUPFLAGS
SUPEOLST DS    BL1
SUPICEND EQU   SUPFLAGS+0
@NM00160 EQU   SUPFLAGS+0
         ORG   SUPFLAGS+1
LISTNMS  DC    CL1'1'
         DC    CL1'2'
         DC    CL1'3'
         DC    CL1'4'
         DC    CL1'5'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SUPRC    EQU   @03
AMBRC    EQU   @03
APVRC    EQU   @02
SMIRC    EQU   @03
LNXRC    EQU   @03
VDCRC    EQU   @03
VDCFMID@ EQU   @04
VRBRC    EQU   @03
ADDIPTFX EQU   @04
ADDIRC   EQU   @03
GETSMDRC EQU   @02
SSTRC    EQU   @03
SSTNDX   EQU   @02
SSTSVKLN EQU   @04
GRASOFFS EQU   @02
GRAPTR   EQU   @03
GRAIRQX  EQU   @03
GRAREQX  EQU   @03
GRAPREX  EQU   @03
GRAPTFX  EQU   @02
GRARC    EQU   @04
DLCRTN@  EQU   @04
DLCICTP  EQU   @05
DLCRC    EQU   @03
DLCLSOFF EQU   @02
NPCRTN@  EQU   @05
NPCICTP  EQU   @04
NPCRC    EQU   @03
NPCLSOFF EQU   @02
GNLRC    EQU   @02
TERMRC   EQU   @02
SUPSX2   EQU   @05
SUPSX1   EQU   @04
SUPSRC   EQU   @03
SELCHKRC EQU   @02
SELFNDRC EQU   @02
SRVLISTX EQU   @04
SRVRC    EQU   @03
F2BRC    EQU   @03
F1BRC    EQU   @03
DSCRC    EQU   @02
DELRC    EQU   @03
INITRC   EQU   @02
TPARC    EQU   @03
CCAPTR   EQU   @11
RTNCODE  EQU   @15
RTNREG   EQU   @14
TBLXOPTS EQU   0
TBLFLAGS EQU   TBLXOPTS+8
TBLFLG1  EQU   TBLFLAGS
TBLNOAPP EQU   TBLFLG1
TBLFLG2  EQU   TBLFLAGS+2
TBLSEL   EQU   TBLFLG2
TBLGROUP EQU   TBLFLG2
TBLFLG3  EQU   TBLFLAGS+3
TBLFLG4  EQU   TBLFLAGS+5
TBLFLG5  EQU   TBLFLAGS+7
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAIOPTR EQU   CCAFIOP
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAICPTF EQU   CCAFICT+4
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00023 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAACCPT EQU   CCAFLAG1
CCAFLAG2 EQU   CCAFFUNC+11
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCADSIDA EQU   0
CCABLDLA EQU   0
@NM00039 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00041 EQU   CCABLDLL
CCALKDRC EQU   @NM00041+20
@NM00043 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00043+20
@NM00045 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00045+20
@NM00047 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00047+20
@NM00049 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00049+20
@NM00051 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00051+20
@NM00053 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00053+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
IOPNAM17 EQU   IOPNAME
@NM00057 EQU   HMASMIOP+12
@NM00058 EQU   @NM00057
IOPDDNAM EQU   HMASMIOP+24
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
ICTPTF   EQU   0
ICTPTFS  EQU   ICTPTF
ICTPEND  EQU   ICTPTFS
ICTPFLG1 EQU   ICTPTF+7
ICTPFLG3 EQU   ICTPTF+8
ICTPPROC EQU   ICTPFLG3
ICTPNOGO EQU   ICTPFLG3
ICTPSLST EQU   ICTPFLG3
ICTPFLG5 EQU   ICTPTF+9
ICTPFLG6 EQU   ICTPTF+11
ICTPFLF  EQU   ICTPFLG6
ICTFLF   EQU   ICTPFLF
ICTPFLG2 EQU   ICTPTF+12
ICTPFLG4 EQU   ICTPTF+13
ICTPREDO EQU   ICTPFLG4
ICTPDEXP EQU   ICTPFLG4
ICTPDIMP EQU   ICTPFLG4
ICTPFLG8 EQU   ICTPTF+14
ICTPFLG9 EQU   ICTPTF+15
@NM00100 EQU   ICTPFLG9
ICTPFLGA EQU   ICTPTF+16
ICTPUSR1 EQU   ICTPFLGA
ICTPPASS EQU   ICTPUSR1
ICTPSUPN EQU   ICTPTF+20
ICTPFMID EQU   ICTPTF+22
ICTPCHN  EQU   ICTPTF+64
ICTPRCHN EQU   ICTPTF+68
ICTPSCHN EQU   ICTPTF+72
ICTPPCHN EQU   ICTPTF+76
ICTPICHN EQU   ICTPTF+80
ICTPNCHN EQU   ICTPTF+84
ICTPVCHN EQU   ICTPTF+88
ICTPDCHN EQU   ICTPTF+92
ICTPBCHN EQU   ICTPTF+96
ICTIXPF  EQU   0
ICTENTLS EQU   0
ICTENTNT EQU   ICTENTLS
ICTENTNM EQU   ICTENTNT
ICTENTST EQU   ICTENTNT+7
ICTREQLS EQU   0
ICTREQNT EQU   ICTREQLS
ICTREQNM EQU   ICTREQNT
ICTREQND EQU   ICTREQNM
ICTREQST EQU   ICTREQNT+7
ICTSUPLS EQU   0
ICTSUPNT EQU   ICTSUPLS
ICTSUPNM EQU   ICTSUPNT
ICTSUPND EQU   ICTSUPNM
ICTPRELS EQU   0
ICTPRENT EQU   ICTPRELS
ICTPRENM EQU   ICTPRENT
ICTPREND EQU   ICTPRENM
ICTPREST EQU   ICTPRENT+7
ICTIRQLS EQU   0
ICTIRQNT EQU   ICTIRQLS
ICTIRQNM EQU   ICTIRQNT
ICTIRQND EQU   ICTIRQNM
ICTIRQST EQU   ICTIRQNT+7
ICTIREQI EQU   ICTIRQST
ICTCSRST EQU   ICTIRQNT+15
ICTNPRLS EQU   0
ICTNPRNT EQU   ICTNPRLS
ICTNPRNM EQU   ICTNPRNT
ICTVRSLS EQU   0
ICTVRSNT EQU   ICTVRSLS
ICTVRSNM EQU   ICTVRSNT
ICTDELLS EQU   0
ICTDELNT EQU   ICTDELLS
ICTDELNM EQU   ICTDELNT
ICTDELST EQU   ICTDELNT+7
ICTSBYLS EQU   0
ICTSBYNT EQU   ICTSBYLS
ICTSBYNM EQU   ICTSBYNT
HMASMSET EQU   0
SELSTENT EQU   HMASMSET
SELSTFLG EQU   SELSTENT
SESMD    EQU   SELSTFLG
SENAME   EQU   SELSTENT+2
SESMDNO  EQU   SENAME
SEFLAGS  EQU   HMASMSET+10
SEFLAG2  EQU   HMASMSET+11
SEFLAG2A EQU   SEFLAG2
HMASMGTP EQU   0
GTPFUNCT EQU   HMASMGTP
GTPRETRN EQU   HMASMGTP+1
GTPKEYLN EQU   HMASMGTP+6
GTPBUFAD EQU   HMASMGTP+12
GTPRESTR EQU   HMASMGTP+16
GTPFLGS1 EQU   HMASMGTP+26
SCLMAP   EQU   0
SCLKEY   EQU   SCLMAP
SCLISTNO EQU   SCLKEY
SCLSMD   EQU   SCLKEY+1
SCLFMID  EQU   SCLKEY+8
SCLDATA  EQU   SCLMAP+15
SCLSTAT  EQU   SCLDATA
SCLDELP  EQU   SCLSTAT
SCLSELST EQU   SCLSTAT
SCLCAND  EQU   SCLSTAT
SCLREDO  EQU   SCLSTAT
SCLVERNO EQU   SCLDATA+1
TSLPARMS EQU   0
TSLTBLXP EQU   TSLPARMS
TSLPMLAD EQU   TSLPARMS+4
TSLFUNCT EQU   TSLPARMS+8
TSLRETRN EQU   TSLPARMS+9
TSLICTSR EQU   0
TSLISMD  EQU   TSLICTSR
TSLIOPTF EQU   TSLICTSR+7
TSLICTP  EQU   TSLICTSR+8
TSLICTF  EQU   TSLICTSR+12
TSLIFND  EQU   TSLICTF
TSLIOK   EQU   TSLICTF
TSLISUP  EQU   TSLICTF
TSLLSTSR EQU   0
TSLLSMD  EQU   TSLLSTSR
TSLLOPTF EQU   TSLLSTSR+7
TSLLONXT EQU   TSLLOPTF
TSLLOFST EQU   TSLLSTSR+8
TSLLRTNP EQU   TSLLSTSR+12
TSLGET   EQU   0
TSLGOPTF EQU   TSLGET+7
TSLSICDS EQU   0
TSLSSMD  EQU   TSLSICDS
TSLSOPTF EQU   TSLSICDS+7
TSLSOICT EQU   TSLSOPTF
TSLSOCDS EQU   TSLSOPTF
TSLSIOPP EQU   TSLSICDS+12
TSLSICTF EQU   TSLSICDS+16
TSLSIOK  EQU   TSLSICTF
TSLSISUP EQU   TSLSICTF
TSLSCDSF EQU   TSLSICDS+18
TSLSCFND EQU   TSLSCDSF
TSLSCOK  EQU   TSLSCDSF
TSLSCSUP EQU   TSLSCDSF
TSLSCDEL EQU   TSLSCDSF
TSLENTSR EQU   0
TSLETYPE EQU   TSLENTSR
TSLEVER# EQU   TSLENTSR+1
TSLEOPTF EQU   TSLENTSR+2
TSLEONXT EQU   TSLEOPTF
TSLEBGNP EQU   TSLENTSR+8
TSLEFNDP EQU   TSLENTSR+12
TSLMFUNC EQU   0
TSLRELM  EQU   0
BASEDSMD EQU   0
CCATYPEA EQU   0
TBLXPARM EQU   0
TBLXINDX EQU   TBLXPARM+4
TBLXIOP2 EQU   TBLXPARM+16
TBLXIOPF EQU   TBLXPARM+20
TBLXSEGT EQU   TBLXPARM+24
TBLXTBL  EQU   TBLXPARM+28
TBLXTOP  EQU   TBLXPARM+32
TBLXSCGT EQU   TBLXPARM+52
TBLXFUNC EQU   TBLXPARM+64
TBLXFUND EQU   TBLXPARM+72
TBLXFLG1 EQU   TBLXPARM+80
TBLXTSLP EQU   TBLXPARM+84
TBLXRC   EQU   TBLXPARM+92
DSCVER#  EQU   0
DSCIOP   EQU   0
SELFNAME EQU   0
GNLLIST# EQU   0
GNLPREV@ EQU   0
GNLSCL   EQU   0
NPCIOP   EQU   0
NPCVER#  EQU   0
DLCIOP   EQU   0
DLCVER#  EQU   0
SSTSMD   EQU   0
SSTSTAT  EQU   0
SSTREDO  EQU   0
GETSIOP  EQU   0
GETSSMD  EQU   0
VRBTYPE  EQU   0
VRBIOP   EQU   0
VRBSCL   EQU   0
VRBICTP  EQU   0
VDCIOP   EQU   0
VDCSCL   EQU   0
LNXIOP   EQU   0
LNXLST   EQU   0
LNXCKEY@ EQU   0
SMIIOP   EQU   0
SMISCL   EQU   0
SMIICTP  EQU   0
FFMSMD   EQU   0
APVSCL   EQU   0
AMBSCL   EQU   0
SUPTYPE  EQU   0
SUPSCL   EQU   0
SUPIOP   EQU   0
SUPSUPN  EQU   0
IOPUDATA EQU   IOPEND
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPSBYP  EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPPTFFX EQU   IOPPTFNT+24
@NM00072 EQU   IOPPTFFX
@NM00073 EQU   @NM00072
IOPPDTES EQU   IOPPTFFX+41
@NM00076 EQU   IOPPDTES
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
ICTENDNT EQU   ICTENDCH
ICTENDIX EQU   ICTENDCH
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00089 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
IOPSBYNM EQU   IOPSBYNT
@NM00088 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00087 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00086 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00085 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00084 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00083 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00082 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00081 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00080 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00079 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00078 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
IOPPIND  EQU   IOPPNTRY+8
IOPPTFND EQU   IOPPMODS
IOPPFMID EQU   IOPPTFFX+73
@NM00077 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
IOPACCT  EQU   IOPDATES+15
IOPACCD  EQU   IOPDATES+12
IOPRSTT  EQU   IOPDATES+9
IOPRSTD  EQU   IOPDATES+6
IOPAPPT  EQU   IOPDATES+3
IOPAPPD  EQU   IOPDATES
IOPRECT  EQU   @NM00076+3
IOPRECD  EQU   @NM00076
@NM00075 EQU   IOPPTFFX+8
@NM00074 EQU   @NM00072+7
IOPPRELN EQU   @NM00073
@NM00071 EQU   IOPPTFDR+20
IOPSBYNO EQU   IOPPTFDR+13
IOPDBYNO EQU   IOPPTFDR+6
@NM00070 EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00069 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPREGEN EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
IOPDUMMP EQU   IOPFLGS5
@NM00068 EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
IOPAPP   EQU   IOPFLGS5
IOPPTYPE EQU   IOPPTFDR+1
@NM00067 EQU   IOPPTFDR
IOPPTMAX EQU   IOPCDMAX
@NM00066 EQU   IOPSCMAP+11
@NM00065 EQU   IOPSCMAP+8
@NM00064 EQU   IOPSCMAP
TBLXEND0 EQU   TBLXPARM+124
@NM00007 EQU   TBLXPARM+108
TBLXIOP3 EQU   TBLXPARM+104
TBLXD2GT EQU   TBLXPARM+100
TBLXDLGT EQU   TBLXPARM+96
@NM00006 EQU   TBLXRC+3
TBLXIRC  EQU   TBLXRC+2
TBLXLRC  EQU   TBLXRC+1
TBLXTRC  EQU   TBLXRC
TBLXIBGN EQU   TBLXPARM+88
@NM00005 EQU   TBLXPARM+83
@NM00004 EQU   TBLXPARM+82
@NM00003 EQU   TBLXPARM+81
@NM00002 EQU   TBLXFLG1
TBLXTCRC EQU   TBLXFLG1
@NM00001 EQU   TBLXPARM+62
TBLXCRQI EQU   TBLXPARM+61
TBLXCDSI EQU   TBLXPARM+60
TBLXLMGT EQU   TBLXPARM+56
TBLXSREL EQU   TBLXPARM+48
TBLXASGT EQU   TBLXPARM+44
TBLXIFGT EQU   TBLXPARM+40
TBLXNULL EQU   TBLXPARM+36
TBLXEND  EQU   TBLXINDX+8
TBLXSTRT EQU   TBLXINDX+4
TBLXCUR  EQU   TBLXINDX
TBLXHDR  EQU   TBLXPARM
TSLRRTNP EQU   TSLRELM+12
TSLRAPTR EQU   TSLRELM+8
@NM00141 EQU   TSLRELM+7
TSLRSMD  EQU   TSLRELM
TSLMSMD  EQU   TSLMFUNC+1
TSLMTYPE EQU   TSLMFUNC
TSLENMEP EQU   TSLENTSR+4
@NM00140 EQU   TSLENTSR+3
@NM00139 EQU   TSLEOPTF
@NM00138 EQU   TSLSICDS+19
TSLSDUM  EQU   TSLSCDSF
TSLSCERR EQU   TSLSCDSF
@NM00137 EQU   TSLSCDSF
@NM00136 EQU   TSLSCDSF
@NM00135 EQU   TSLSICDS+17
TSLSISLS EQU   TSLSICTF
TSLSINOG EQU   TSLSICTF
TSLSIDLI EQU   TSLSICTF
TSLSIDLE EQU   TSLSICTF
TSLSIDEL EQU   TSLSICTF
TSLSIFND EQU   TSLSICTF
TSLSICTP EQU   TSLSICDS+8
@NM00134 EQU   TSLSOPTF
TSLSOXTD EQU   TSLSOPTF
TSLSOMSG EQU   TSLSOPTF
TSLSOALL EQU   TSLSOPTF
TSLGDSID EQU   TSLGET+12
TSLGIOPP EQU   TSLGET+8
@NM00133 EQU   TSLGOPTF
TSLGOXTD EQU   TSLGOPTF
TSLGOMSG EQU   TSLGOPTF
@NM00132 EQU   TSLGOPTF
@NM00131 EQU   TSLGOPTF
@NM00130 EQU   TSLGOPTF
TSLGSMD  EQU   TSLGET
@NM00129 EQU   TSLLOPTF
@NM00128 EQU   TSLICTSR+13
@NM00127 EQU   TSLICTF
TSLINOG  EQU   TSLICTF
TSLIDLI  EQU   TSLICTF
TSLIDLE  EQU   TSLICTF
TSLIDEL  EQU   TSLICTF
@NM00126 EQU   TSLIOPTF
TSLIONXT EQU   TSLIOPTF
SCLEND   EQU   SCLDATA+2
@NM00125 EQU   HMASMGTP+27
GTPPSIZE EQU   GTPFLGS1
@NM00124 EQU   GTPFLGS1
GTPRCDNF EQU   GTPFLGS1
GTPNOSPM EQU   GTPFLGS1
GTPPOS   EQU   GTPRESTR+8
GTPRCD   EQU   GTPRESTR+4
GTPPAG   EQU   GTPRESTR
GTPWKAD  EQU   HMASMGTP+8
GTPRCDLN EQU   HMASMGTP+4
@NM00123 EQU   HMASMGTP+2
SEFLAG2H EQU   SEFLAG2
SEFLAG2G EQU   SEFLAG2
SEFLAG2F EQU   SEFLAG2
SEFLAG2E EQU   SEFLAG2
SEFLAG2D EQU   SEFLAG2
SEFLAG2C EQU   SEFLAG2
SEFLAG2B EQU   SEFLAG2
SEFOUND  EQU   SEFLAGS
@NM00122 EQU   SEFLAGS
SEFMID   EQU   SEFLAGS
SENOJCL  EQU   SEFLAGS
SEEXCLUD EQU   SEFLAGS
SESELECT EQU   SEFLAGS
SEGROUP  EQU   SEFLAGS
@NM00121 EQU   SENAME+7
SEPTFNO  EQU   SESMDNO
SESYS    EQU   SELSTFLG+1
SEFMD    EQU   SELSTFLG+1
SEASM    EQU   SELSTFLG+1
SELMD    EQU   SELSTFLG+1
SEMAC    EQU   SELSTFLG+1
SEMOD    EQU   SELSTFLG+1
SEDLB    EQU   SELSTFLG+1
SESRC    EQU   SELSTFLG+1
SEMCS    EQU   SELSTFLG
@NM00120 EQU   SELSTFLG
@NM00117 EQU   ICTSBYNT+7
ICTSBYND EQU   ICTSBYNM
ICTDELEX EQU   ICTDELST
ICTDELND EQU   ICTDELNM
@NM00116 EQU   ICTVRSNT+7
ICTVRSND EQU   ICTVRSNM
@NM00115 EQU   ICTNPRNT+7
ICTNPRND EQU   ICTNPRNM
@NM00114 EQU   ICTCSRST
@NM00113 EQU   ICTCSRST
ICTCSRF  EQU   ICTCSRST
@NM00112 EQU   ICTCSRST
ICTCSRNM EQU   ICTIRQNT+8
@NM00111 EQU   ICTIRQST
ICTIREQT EQU   ICTIRQST
ICTIREQB EQU   ICTIRQST
ICTIREQS EQU   ICTIRQST
@NM00110 EQU   ICTIRQST
@NM00109 EQU   ICTPREST
ICTPREQT EQU   ICTPREST
ICTPREQI EQU   ICTPREST
ICTPREQB EQU   ICTPREST
ICTPREQS EQU   ICTPREST
@NM00108 EQU   ICTPREST
@NM00107 EQU   ICTSUPNT+7
@NM00106 EQU   ICTREQST
ICTRREQT EQU   ICTREQST
ICTRREQI EQU   ICTREQST
ICTRREQB EQU   ICTREQST
ICTRREQS EQU   ICTREQST
@NM00105 EQU   ICTREQST
@NM00104 EQU   ICTENTST
ICTEREQT EQU   ICTENTST
ICTEREQI EQU   ICTENTST
ICTEREQB EQU   ICTENTST
ICTEREQS EQU   ICTENTST
@NM00103 EQU   ICTENTST
ICTENTND EQU   ICTENTNM
ICTIXP   EQU   ICTIXPF
@NM00102 EQU   ICTPTF+100
ICTPTPFX EQU   ICTPTF+38
ICTPRELN EQU   ICTPTF+36
ICTPRECT EQU   ICTPTF+33
ICTPRECD EQU   ICTPTF+30
ICTPVERN EQU   ICTPTF+29
ICTPONUM EQU   ICTPTF+18
ICTPTYPE EQU   ICTPTF+17
ICTPUSR8 EQU   ICTPFLGA
ICTPUSR7 EQU   ICTPFLGA
ICTPUSR6 EQU   ICTPFLGA
ICTPUSR5 EQU   ICTPFLGA
ICTPUSR4 EQU   ICTPFLGA
ICTPUSR3 EQU   ICTPFLGA
ICTPUSR2 EQU   ICTPFLGA
@NM00101 EQU   @NM00100
ICTPRQBY EQU   @NM00100
ICTPRQOK EQU   @NM00100
ICTPRQCK EQU   @NM00100
@NM00099 EQU   ICTPFLG9
ICTPPDEL EQU   ICTPFLG9
ICTPWRKO EQU   ICTPFLG9
ICTPMSL  EQU   ICTPFLG9
@NM00098 EQU   ICTPFLG8
ICTPDCPL EQU   ICTPFLG8
ICTPECPL EQU   ICTPFLG8
ICTPGCPL EQU   ICTPFLG8
@NM00097 EQU   ICTPFLG4
@NM00096 EQU   ICTPFLG4
@NM00095 EQU   ICTPFLG4
ICTPGELM EQU   ICTPFLG4
ICTPCDSE EQU   ICTPFLG4
@NM00094 EQU   ICTPFLG2
ICTPRCND EQU   ICTPFLG2
ICTPTPS  EQU   ICTPFLG2
ICTPTR1  EQU   ICTPFLG2
ICTPVRSP EQU   ICTPFLG2
@NM00093 EQU   ICTPFLG6
ICTPDBYP EQU   ICTPFLG6
ICTPSBYP EQU   ICTPFLG6
ICTPMDLP EQU   ICTPFLG5+1
ICTPADDP EQU   ICTPFLG5+1
@NM00092 EQU   ICTPFLG5+1
ICTPLRFP EQU   ICTPFLG5
ICTPJCLP EQU   ICTPFLG5
ICTPSUPP EQU   ICTPFLG5
ICTPREQP EQU   ICTPFLG5
ICTPPREP EQU   ICTPFLG5
ICTPNPRP EQU   ICTPFLG5
ICTPIRQP EQU   ICTPFLG5
ICTPDELP EQU   ICTPFLG5
@NM00091 EQU   ICTPFLG3
ICTPNOLB EQU   ICTPFLG3
ICTPVERJ EQU   ICTPFLG3
ICTPMSG  EQU   ICTPFLG3
ICTPCPL  EQU   ICTPFLG3
ICTPROCS EQU   ICTPPROC
ICTREGEN EQU   ICTPFLG1
ICTBYP   EQU   ICTPFLG1
ICTDUMMP EQU   ICTPFLG1
@NM00090 EQU   ICTPFLG1
ICTERROR EQU   ICTPFLG1
ICTACC   EQU   ICTPFLG1
ICTRES   EQU   ICTPFLG1
ICTAPP   EQU   ICTPFLG1
@NM00063 EQU   IOPUSERL
@NM00062 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
IOPBUFAD EQU   HMASMIOP+52
@NM00061 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00060 EQU   @NM00057+10
IOPSEQNO EQU   @NM00057+8
@NM00059 EQU   @NM00058+7
IOPPTFNM EQU   @NM00058
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00056 EQU   CCABLDLM+2
@NM00055 EQU   CCABLDLM
CCAUPDPM EQU   @NM00053+24
@NM00054 EQU   @NM00053+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00053+12
CCAUPDTE EQU   @NM00053+8
CCAUPDNM EQU   @NM00053
CCASUPPM EQU   @NM00051+24
@NM00052 EQU   @NM00051+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00051+12
CCAIOSUP EQU   @NM00051+8
CCASUPNM EQU   @NM00051
CCAZAPPM EQU   @NM00049+24
@NM00050 EQU   @NM00049+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00049+12
CCASPZAP EQU   @NM00049+8
CCAZAPNM EQU   @NM00049
CCACOMPM EQU   @NM00047+24
@NM00048 EQU   @NM00047+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00047+12
CCACOMRS EQU   @NM00047+8
CCACOMNM EQU   @NM00047
CCACPYPM EQU   @NM00045+24
@NM00046 EQU   @NM00045+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00045+12
CCACOPY  EQU   @NM00045+8
CCACPYNM EQU   @NM00045
CCAASMPM EQU   @NM00043+24
@NM00044 EQU   @NM00043+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00043+12
CCAASM   EQU   @NM00043+8
CCAASMNM EQU   @NM00043
CCALKDPM EQU   @NM00041+24
@NM00042 EQU   @NM00041+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00041+12
CCALKED  EQU   @NM00041+8
CCALKDNM EQU   @NM00041
CCAPGMPM EQU   @NM00039+24
@NM00040 EQU   @NM00039+21
CCABPGRC EQU   @NM00039+20
CCABPGSP EQU   @NM00039+12
CCABPGAD EQU   @NM00039+8
CCABPGNM EQU   @NM00039
CCAEND   EQU   HMASMCCA+371
@NM00038 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00037 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00036 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00035 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00034 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00033 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00032 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00031 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00030 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00029 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAAPPLY EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00028 EQU   @NM00023+18
@NM00027 EQU   @NM00023+16
CCATBLPA EQU   @NM00023+12
@NM00026 EQU   @NM00023+8
@NM00025 EQU   @NM00023+4
@NM00024 EQU   @NM00023
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCAICLMD EQU   CCAFICT+12
CCAICMOD EQU   CCAFICT+8
CCAICT   EQU   CCAFICT
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00022 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
@NM00021 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00020 EQU   CCAFBUFR+122
@NM00019 EQU   CCAFBUFR+120
@NM00018 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00017 EQU   CCAFBUFR+88
@NM00016 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00015 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
@NM00014 EQU   TBLFLG5
TBLICTOK EQU   TBLFLG5
@NM00013 EQU   TBLFLG4
TBLBPFM  EQU   TBLFLG4
@NM00012 EQU   TBLFLG4
TBLBPIRQ EQU   TBLFLG4
TBLBPREQ EQU   TBLFLG4
TBLBPPRE EQU   TBLFLG4
TBLBPID  EQU   TBLFLG4
@NM00011 EQU   TBLFLG3+1
TBLSTS   EQU   TBLFLG3
TBLMTS   EQU   TBLFLG3
TBLPTS   EQU   TBLFLG3
TBLACRQ  EQU   TBLFLG3
TBLCRQ   EQU   TBLFLG3
TBLSCDS  EQU   TBLFLG3
TBLACDS  EQU   TBLFLG3
TBLCDS   EQU   TBLFLG3
TBLMASS  EQU   TBLFLG2
@NM00010 EQU   TBLFLG2
TBLFMID  EQU   TBLFLG2
TBLEXC   EQU   TBLFLG2
@NM00009 EQU   TBLFLG1+1
TBLDISW  EQU   TBLFLG1+1
TBLDISR  EQU   TBLFLG1+1
TBLDISN  EQU   TBLFLG1+1
TBLNOJCL EQU   TBLFLG1
TBLFLUSH EQU   TBLFLG1
TBLUSER  EQU   TBLFLG1
TBLAPAR  EQU   TBLFLG1
TBLCOMP  EQU   TBLFLG1
TBLASSEM EQU   TBLFLG1
TBLCHECK EQU   TBLFLG1
@NM00008 EQU   TBLXOPTS+5
TBLNUCID EQU   TBLXOPTS+4
TBLJCLGT EQU   TBLXOPTS
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00297 EQU   @RC00272
@RF00473 EQU   @RC00463
@RF00485 EQU   @RC00463
@RF00572 EQU   @RC00566
@RF00620 EQU   @RC00603
@RF00625 EQU   @RC00603
@RF00719 EQU   @RC00713
@RF00769 EQU   @RC00752
@RF00774 EQU   @RC00752
@RC00821 EQU   @RC00813
@RC00918 EQU   @RC00911
@RC00932 EQU   @RC00911
@RF00940 EQU   @RC00911
@RC00945 EQU   @RC00911
@RC01486 EQU   @RC01476
@RF01730 EQU   @RC01711
@RC01732 EQU   @RC01711
@RF01796 EQU   @RC01778
@RC01798 EQU   @RC01778
@RF00341 EQU   @RC00297
@RF00920 EQU   @RC00918
@RF00934 EQU   @RC00932
@RF00947 EQU   @RC00945
@RC01492 EQU   @RC01486
@RC01502 EQU   @RC01486
@RC01507 EQU   @RC01486
@ENDDATA EQU   *
         END   HMASMTPA,(C'PLS2205',0802,78334)
