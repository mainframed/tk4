         TITLE 'HMASMVLU -- VARIABLE LIST UPDATE'
HMASMVLU CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMVLU  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*                                                                  0034
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZATION                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0034
*   VLPRETRN=VLPGOOD;               /* INITIALIZE RETURN CODE        */
         L     @10,@PC00001                                        0034
         MVI   VLPRETRN(@10),X'00'                                 0034
*   VPTR=VLPLPTR;                   /* PTR TO VARIABLE LIST          */
         L     VPTR,VLPLPTR(,@10)                                  0035
*   HMASMMGP=''B;                   /* CLEAR MSG PARM                */
         XC    HMASMMGP(40),HMASMMGP                               0036
*   MGPHLDS=ON;                     /* SET FOR MSG TO LOG            */
*   MGPPRINT=ON;                    /* AND PRINTER                   */
         OI    MGPHLDS,B'10010000'                                 0038
         EJECT
*                                                                  0039
*   /*****************************************************************/
*   /*                                                               */
*   /* FOR A REPLACE OR CLEAR FUNCTION DELETE ALL ENTRIES MATCHING   */
*   /* THE INPUT TYPE                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0039
*   IF VLPFUNCT=VLPREP              /* IF REP OR CLEAR THEN FIRST    */
*       ×VLPFUNCT=VLPCLR            /* ANY EXISTING ENTRIES          */
*     THEN                          /* OF THE SPECIFIED TYPE         */
         CLI   VLPFUNCT(@10),3                                     0039
         BE    @RT00039                                            0039
         CLI   VLPFUNCT(@10),4                                     0039
         BNE   @RF00039                                            0039
@RT00039 DS    0H                                                  0040
*     DO;                           /*                               */
*       FFOUND=OFF;                 /* NOTHING FOUND TO DELETE YET   */
         NI    FFOUND,B'01111111'                                  0041
*       DO I=1 BY 1 WHILE(          /* LOOP THRU ACTIVE ENTRIES      */
*             VENTMRK(I)^=LISTEND); /* TILL END OF LIST              */
         LA    I,1                                                 0042
         B     @DE00042                                            0042
@DL00042 DS    0H                                                  0043
*         IF VENTTYPE(I)=VLPTYPE    /* IF TYPE CODE MATCH            */
*           THEN                    /*                               */
         LR    @10,I                                               0043
         MH    @10,@CH00375                                        0043
         L     @15,@PC00001                                        0043
         LR    @01,VPTR                                            0043
         BCTR  @01,0                                               0043
         SLR   @00,@00                                             0043
         IC    @00,VENTTYPE-8(@10,@01)                             0043
         SLR   @14,@14                                             0043
         IC    @14,VLPTYPE(,@15)                                   0043
         CR    @00,@14                                             0043
         BNE   @RF00043                                            0043
*           DO;                     /* MATCH FOUND                   */
*             VENT(I)=NULLITM;      /* DELETE THE ITEM               */
         ALR   @10,VPTR                                            0045
         AL    @10,@CF00473                                        0045
         MVC   VENT(9,@10),@CB00415                                0045
*             FFOUND=ON;            /* NOTE THAT ATLEAST ONE ITEM WAS
*                                      DELETED                       */
         OI    FFOUND,B'10000000'                                  0046
*           END;                    /* END YTPE CODE MATCH           */
*       END;                        /* END DELETE ENTRIES LOOP       */
@RF00043 AH    I,@CH00039                                          0048
@DE00042 LR    @10,I                                               0048
         MH    @10,@CH00375                                        0048
         ALR   @10,VPTR                                            0048
         AL    @10,@CF00473                                        0048
         CLI   VENTMRK(@10),X'FF'                                  0048
         BNE   @DL00042                                            0048
*       IF FFOUND=ON                /* IF SOME ENTRIES WERE FOUND FOR*/
*         THEN                      /* SPECIFIED TYPE                */
         TM    FFOUND,B'10000000'                                  0049
         BNO   @RF00049                                            0049
*         CALL VLUCMPRS;            /* COMPRESS THE LIST             */
         BAL   @14,VLUCMPRS                                        0050
*       ELSE                        /* IF ENTRY WAS NOT FOUND THEN   */
*         DO;                       /* NO ENTRIES THERE TO BE      0051
*                                      REPLACED                      */
         B     @RC00049                                            0051
@RF00049 DS    0H                                                  0052
*           IF VLPFMSG=ON           /* IF MSG REQUESTED              */
*             THEN                  /* THEN DO IT AND SET RC         */
         L     @10,@PC00001                                        0052
         TM    VLPFMSG(@10),B'10000000'                            0052
         BNO   @RF00052                                            0052
*             DO;                   /*                               */
*               MGPVARPT(1)=ADDR(VLPSTYPE);/*                        */
         LA    @02,VLPSTYPE(,@10)                                  0054
         ST    @02,MGPVARPT                                        0054
*               MGPVARPT(2)=ADDR(DATA16);/*                          */
         LA    @02,DATA16                                          0055
         ST    @02,MGPVARPT+4                                      0055
*               IF VLPFUNCT=VLPREP  /* IF REP                        */
*                 THEN              /*                               */
         CLI   VLPFUNCT(@10),3                                     0056
         BNE   @RF00056                                            0056
*                 DO;               /*                               */
*                   VLPRETRN=VLPWARN;/* SET RETURN CODE              */
         MVI   VLPRETRN(@10),X'04'                                 0058
*                   MGPMGNO1=HMA358I;/* X16X X16X TO BE REPLACED IN
*                                      ENTRY DOES NOT EXIST - ADD  0059
*                                      ASSUMED                       */
         MVC   MGPMGNO1(2),@CH00409                                0059
*                   DATA16='';      /* NO SUBENTRY FOR THIS MSG      */
         MVI   DATA16,C' '                                         0060
         MVC   DATA16+1(15),DATA16                                 0060
*                   MGPTYPE=MGPWARN;/*                               */
         MVI   MGPTYPE,X'02'                                       0061
*                 END;              /*                               */
*               ELSE                /* IF CLEAR                      */
*                 DO;               /*                               */
         B     @RC00056                                            0063
@RF00056 DS    0H                                                  0064
*                   CALL VLUSTMSG;  /* SET MSG VARPT                 */
         BAL   @14,VLUSTMSG                                        0064
*                   VLPRETRN=VLPERR;/*                               */
         L     @10,@PC00001                                        0065
         MVI   VLPRETRN(@10),X'08'                                 0065
*                   MGPMGNO1=HMA357I;/* X16X X16X TO BE DELETED FROM
*                                      ENTRY DOES NOT EXIST          */
         MVC   MGPMGNO1(2),@CH00407                                0066
*                   MGPTYPE=MGPERR; /*                               */
         MVI   MGPTYPE,X'03'                                       0067
*                 END;              /*                               */
*               CALL HMASMMSG(HMASMMGP);/*                           */
@RC00056 L     @15,@CV00401                                        0069
         LA    @01,@AL00069                                        0069
         BALR  @14,@15                                             0069
*             END;                  /* END MSG REQUESTED             */
*         END;                      /* END ENTRY NOT FOUND           */
@RF00052 DS    0H                                                  0072
*     END;                          /* END REP/CLEAR REQUEST         */
@RC00049 DS    0H                                                  0073
         EJECT
*                                                                  0073
*   /*****************************************************************/
*   /*                                                               */
*   /* FOR AN ADD OR REPLACE OPERATION ADD THE ITEM                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0073
*   IF VLPFUNCT=VLPADD              /* IF ADD OR REP                 */
*       ×VLPFUNCT=VLPREP            /*                               */
*     THEN                          /*                               */
@RF00039 L     @10,@PC00001                                        0073
         CLI   VLPFUNCT(@10),1                                     0073
         BE    @RT00073                                            0073
         CLI   VLPFUNCT(@10),3                                     0073
         BNE   @RF00073                                            0073
@RT00073 DS    0H                                                  0074
*     DO;                           /*                               */
*       DO I=1 BY 1 WHILE(          /* LOOP THRU ACTIVE LIST ENTRIES */
*             VENTMRK(I)^=LISTEND   /* TILL END                      */
*             &(VENTTYPE(I)^=VLPTYPE/* AND NOT TYPE ASKED FOR        */
*             ×VENTDATA(I,1:VLPDLEN)^=VLPDATA(1:VLPDLEN)));/*        */
         LA    I,1                                                 0075
         B     @DE00075                                            0075
@DL00075 DS    0H                                                  0076
*       END;                        /*                               */
         AH    I,@CH00039                                          0076
@DE00075 LR    @10,I                                               0076
         MH    @10,@CH00375                                        0076
         ST    @10,@TF00001                                        0076
         ALR   @10,VPTR                                            0076
         AL    @10,@CF00473                                        0076
         CLI   VENTMRK(@10),X'FF'                                  0076
         BE    @DC00075                                            0076
         L     @10,@PC00001                                        0076
         L     @01,@TF00001                                        0076
         BCTR  @01,0                                               0076
         SLR   @00,@00                                             0076
         IC    @00,VENTTYPE-8(@01,VPTR)                            0076
         SLR   @01,@01                                             0076
         IC    @01,VLPTYPE(,@10)                                   0076
         CR    @00,@01                                             0076
         BNE   @DL00075                                            0076
         SLR   @15,@15                                             0076
         IC    @15,VLPDLEN(,@10)                                   0076
         BCTR  @15,0                                               0076
         LR    @01,VPTR                                            0076
         AL    @01,@TF00001                                        0076
         AL    @01,@CF00473                                        0076
         EX    @15,@SC00475                                        0076
         BNE   @DL00075                                            0076
@DC00075 DS    0H                                                  0077
*       IF VENTMRK(I)^=LISTEND      /* IF SUBENTRY PRESENT (ONLY FOR
*                                      ADD SINCE REP DELETES FIRST)  */
*         THEN                      /* (ONLY POSSIBLE FOR ADD)       */
         LR    @10,I                                               0077
         MH    @10,@CH00375                                        0077
         ALR   @10,VPTR                                            0077
         AL    @10,@CF00473                                        0077
         CLI   VENTMRK(@10),X'FF'                                  0077
         BE    @RF00077                                            0077
*         DO;                       /*                               */
*           IF VLPFMSG=ON           /* IF MESSAGE REQUESTED          */
*             THEN                  /*                               */
         L     @10,@PC00001                                        0079
         TM    VLPFMSG(@10),B'10000000'                            0079
         BNO   @RF00079                                            0079
*             DO;                   /*                               */
*               CALL VLUSTMSG;      /* SET UP MSG TEXT               */
         BAL   @14,VLUSTMSG                                        0081
*               VLPRETRN=VLPERR;    /* SET RETURN CODE               */
         L     @10,@PC00001                                        0082
         MVI   VLPRETRN(@10),X'08'                                 0082
*               MGPMGNO1=HMA356I;   /* X16X X16X TO BE ADDED TO ENTRY
*                                      ALREADY EXISTS                */
         MVC   MGPMGNO1(2),@CH00405                                0083
*               MGPVARPT(1)=ADDR(VLPSTYPE);/*                        */
         LA    @10,VLPSTYPE(,@10)                                  0084
         ST    @10,MGPVARPT                                        0084
*               MGPVARPT(2)=ADDR(DATA16);/*                          */
         LA    @10,DATA16                                          0085
         ST    @10,MGPVARPT+4                                      0085
*               MGPTYPE=MGPERR;     /*                               */
         MVI   MGPTYPE,X'03'                                       0086
*               CALL HMASMMSG(HMASMMGP);/*                           */
         L     @15,@CV00401                                        0087
         LA    @01,@AL00087                                        0087
         BALR  @14,@15                                             0087
*             END;                  /* END MESSAGE REQUESTED         */
*         END;                      /* END SUBENTRY FOUND            */
*       ELSE                        /* IF SUBENTRY NOT PRESENT       */
*         DO;                       /*                               */
         B     @RC00077                                            0090
@RF00077 DS    0H                                                  0091
*           IF I=CCAPEMAX           /* IF MAX ENTRIES REACHED        */
*             THEN                  /*                               */
         L     @10,@CA00065                                        0091
         CH    I,CCAPEMAX-HMASMCCA(,@10)                           0091
         BNE   @RF00091                                            0091
*             DO;                   /* LIST OVERFLOW                 */
*               CALL VLUSTMSG;      /*                               */
         BAL   @14,VLUSTMSG                                        0093
*               VLPRETRN=VLPPEEXC;  /* SET RETURN CODE               */
         L     @10,@PC00001                                        0094
         MVI   VLPRETRN(@10),X'08'                                 0094
*               MGPMGNO1=HMA259I;   /* X8X X8X ELEMENT PEMAX EXCEEDED
*                                      ATTEMPTING TO ADD X8X         */
         MVC   MGPMGNO1(2),@CH00403                                0095
*               MGPVARPT(1)=ADDR(VLPMTYPE);/*                        */
         LA    @15,VLPMTYPE(,@10)                                  0096
         ST    @15,MGPVARPT                                        0096
*               MGPVARPT(2)=ADDR(VLPMNAME);/*                        */
         LA    @15,VLPMNAME(,@10)                                  0097
         ST    @15,MGPVARPT+4                                      0097
*               MGPVARPT(3)=ADDR(VLPSTYPE);/*                        */
         LA    @10,VLPSTYPE(,@10)                                  0098
         ST    @10,MGPVARPT+8                                      0098
*               MGPVARPT(4)=ADDR(DATA16);/*                          */
         LA    @10,DATA16                                          0099
         ST    @10,MGPVARPT+12                                     0099
*               MGPTYPE=MGPERR;     /*                               */
         MVI   MGPTYPE,X'03'                                       0100
*               CALL HMASMMSG(HMASMMGP);/*                           */
         L     @15,@CV00401                                        0101
         LA    @01,@AL00101                                        0101
         BALR  @14,@15                                             0101
*             END;                  /* END MAX ENTRIES REACHED       */
*           ELSE                    /* IF OK TO ADD NEW ENTRY        */
*             DO;                   /* ADD NEW ENTRY TO END OF LIST  */
         B     @RC00091                                            0103
@RF00091 DS    0H                                                  0104
*               VENT(I)=VLPSNTRY;   /* MOVE IN NEW ENTRY             */
         LR    @10,I                                               0104
         MH    @10,@CH00375                                        0104
         ST    @10,@TF00001                                        0104
         ALR   @10,VPTR                                            0104
         AL    @10,@CF00473                                        0104
         L     @15,@PC00001                                        0104
         MVC   VENT(9,@10),VLPSNTRY(@15)                           0104
*               VENTMRK(I+1)=LISTEND;/* NEW END OF LIST MARKER       */
         LR    @10,VPTR                                            0105
         AL    @10,@TF00001                                        0105
         MVI   VENTMRK(@10),X'FF'                                  0105
*             END;                  /* END PEMAX NOT EXCEEDED        */
*         END;                      /* END SUBENTRY NOT PRESENT      */
*     END;                          /* END ADD OR REP                */
         EJECT
*                                                                  0109
*   /*****************************************************************/
*   /*                                                               */
*   /* FOR A DELETE OPERATION DELETE THE ITEM                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0109
*   ELSE                                                           0109
*     IF VLPFUNCT=VLPDEL            /* IF DELETE REQUEST             */
*       THEN                        /*                               */
         B     @RC00073                                            0109
@RF00073 L     @10,@PC00001                                        0109
         CLI   VLPFUNCT(@10),2                                     0109
         BNE   @RF00109                                            0109
*       DO;                         /* DELETE                        */
*         DO I=1 BY 1 WHILE(        /* LOOP THRU ACTIVE LIST ENTRIES */
*               VENTMRK(I)^=LISTEND /* TILL END                      */
*               &(VENTTYPE(I)^=VLPTYPE/* OR MATCH FOUND              */
*               ×VENTDATA(I,1:VLPDLEN)^=VLPDATA(1:VLPDLEN)));/*      */
         LA    I,1                                                 0111
         B     @DE00111                                            0111
@DL00111 DS    0H                                                  0112
*         END;                      /*                               */
         AH    I,@CH00039                                          0112
@DE00111 LR    @10,I                                               0112
         MH    @10,@CH00375                                        0112
         ST    @10,@TF00001                                        0112
         ALR   @10,VPTR                                            0112
         AL    @10,@CF00473                                        0112
         CLI   VENTMRK(@10),X'FF'                                  0112
         BE    @DC00111                                            0112
         L     @10,@PC00001                                        0112
         L     @01,@TF00001                                        0112
         BCTR  @01,0                                               0112
         SLR   @00,@00                                             0112
         IC    @00,VENTTYPE-8(@01,VPTR)                            0112
         SLR   @01,@01                                             0112
         IC    @01,VLPTYPE(,@10)                                   0112
         CR    @00,@01                                             0112
         BNE   @DL00111                                            0112
         SLR   @15,@15                                             0112
         IC    @15,VLPDLEN(,@10)                                   0112
         BCTR  @15,0                                               0112
         LR    @01,VPTR                                            0112
         AL    @01,@TF00001                                        0112
         AL    @01,@CF00473                                        0112
         EX    @15,@SC00475                                        0112
         BNE   @DL00111                                            0112
@DC00111 DS    0H                                                  0113
*         IF VENTMRK(I)^=LISTEND    /* IF MATCH FOUND                */
*           THEN                    /*                               */
         LR    @10,I                                               0113
         MH    @10,@CH00375                                        0113
         ST    @10,@TF00001                                        0113
         ALR   @10,VPTR                                            0113
         AL    @10,@CF00473                                        0113
         CLI   VENTMRK(@10),X'FF'                                  0113
         BE    @RF00113                                            0113
*           DO;                     /* MATCH FOUND                   */
*             VENT(I)=NULLITM;      /* DELETE THE ITEM               */
         LR    @10,VPTR                                            0115
         AL    @10,@TF00001                                        0115
         AL    @10,@CF00473                                        0115
         MVC   VENT(9,@10),@CB00415                                0115
*             CALL VLUCMPRS;        /* COMPRESS THE LIST             */
         BAL   @14,VLUCMPRS                                        0116
*           END;                    /* END FOUND IN LIST             */
*         ELSE                      /* IF NOT FOUND IN LIST          */
*           IF VLPFMSG=ON           /* IF MESSAGE REQUESTED          */
*             THEN                  /*                               */
         B     @RC00113                                            0118
@RF00113 L     @10,@PC00001                                        0118
         TM    VLPFMSG(@10),B'10000000'                            0118
         BNO   @RF00118                                            0118
*             DO;                   /*                               */
*               CALL VLUSTMSG;      /* SET UP MSG TEXT               */
         BAL   @14,VLUSTMSG                                        0120
*               VLPRETRN=VLPERR;    /* NO MATCHING ITEM FOUND TO   0121
*                                      DELETE. SET THE RETURN CODE.  */
         L     @10,@PC00001                                        0121
         MVI   VLPRETRN(@10),X'08'                                 0121
*               MGPMGNO1=HMA357I;   /* X16X X16X TO BE DELETED FROM
*                                      ENTRY DOES NOT EXIST          */
         MVC   MGPMGNO1(2),@CH00407                                0122
*               MGPVARPT(1)=ADDR(VLPSTYPE);/*                        */
         LA    @10,VLPSTYPE(,@10)                                  0123
         ST    @10,MGPVARPT                                        0123
*               MGPVARPT(2)=ADDR(DATA16);/*                          */
         LA    @10,DATA16                                          0124
         ST    @10,MGPVARPT+4                                      0124
*               MGPTYPE=MGPERR;     /*                               */
         MVI   MGPTYPE,X'03'                                       0125
*               CALL HMASMMSG(HMASMMGP);/*                           */
         L     @15,@CV00401                                        0126
         LA    @01,@AL00126                                        0126
         BALR  @14,@15                                             0126
*             END;                  /* END MSG REQUESTED             */
*       END;                        /* END DELETE REQUEST            */
*                                                                  0128
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR CLEAR REQUEST AND IF NOT THEN REQUEST IS BAD        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0129
*     ELSE                          /*                               */
*       IF VLPFUNCT=VLPCLR          /* IF CLEAR REQUEST              */
*         THEN                      /* THEN                          */
         B     @RC00109                                            0129
@RF00109 L     @10,@PC00001                                        0129
         CLI   VLPFUNCT(@10),4                                     0129
         BE    @RT00129                                            0129
*         ;                         /* DONE ALREADY                  */
*       ELSE                        /* IF INVALID FUNCTION           */
*         VLPRETRN=STOPSMP;         /* SET BAD RC                    */
         L     @10,@PC00001                                        0131
         MVI   VLPRETRN(@10),X'10'                                 0131
*   RETURN;                                                        0132
@EL00001 L     @13,4(,@13)                                         0132
@EF00001 DS    0H                                                  0132
@ER00001 LM    @14,@12,12(@13)                                     0132
         BR    @14                                                 0132
         EJECT
*                                                                  0133
*   /*****************************************************************/
*   /*                                                               */
*   /* COMPRESS THE LIST                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0133
*VLUCMPRS:                                                         0133
*   PROCEDURE;                      /* COMPRESS THE LIST             */
         B     @EL00001                                            0133
VLUCMPRS STM   @14,@12,12(@13)                                     0133
*   DECLARE                         /*                               */
*     P1 FIXED(31),                 /* FROM INDEX THRU LIST          */
*     P2 FIXED(31);                 /* TO INDEX THRU LIST            */
*   P2=1;                           /* INIT TO INDEX                 */
         LA    @10,1                                               0135
         LR    P2,@10                                              0135
*   DO P1=1 BY 1 WHILE(             /* LOOP THRU ACTIVE LIST ENTRIES */
*         VENTMRK(P1)^=LISTEND);    /* TILL END                      */
         LR    P1,@10                                              0136
         B     @DE00136                                            0136
@DL00136 DS    0H                                                  0137
*     IF VENT(P1)^=NULLITM          /* IF DELETED ENTRY              */
*       THEN                        /* THEN COMPRESS IT              */
         LA    @10,9                                               0137
         LR    @01,P1                                              0137
         MR    @00,@10                                             0137
         ST    @01,@TF00001                                        0137
         ALR   @01,VPTR                                            0137
         AL    @01,@CF00473                                        0137
         CLC   VENT(9,@01),@CB00415                                0137
         BE    @RF00137                                            0137
*       DO;                         /*                               */
*         VENT(P2)=VENT(P1);        /* MOVE FROM ENTRY TO TO ENTRY   */
         LR    @01,@10                                             0139
         MR    @00,P2                                              0139
         ALR   @01,VPTR                                            0139
         AL    @01,@CF00473                                        0139
         LR    @10,VPTR                                            0139
         AL    @10,@TF00001                                        0139
         AL    @10,@CF00473                                        0139
         MVC   @TS00001(9),VENT(@10)                               0139
         MVC   VENT(9,@01),@TS00001                                0139
*         P2=P2+1;                  /* UPDATE TO INDEX               */
         AH    P2,@CH00039                                         0140
*       END;                        /* END COMPRESS IT               */
*   END;                            /* END COMPRESS LOOP             */
@RF00137 AH    P1,@CH00039                                         0142
@DE00136 LA    @10,9                                               0142
         LR    @01,P1                                              0142
         MR    @00,@10                                             0142
         ALR   @01,VPTR                                            0142
         AL    @01,@CF00473                                        0142
         CLI   VENTMRK(@01),X'FF'                                  0142
         BNE   @DL00136                                            0142
*   VENTMRK(P2)=LISTEND;            /* RESET END OF LIST             */
         LR    @01,@10                                             0143
         MR    @00,P2                                              0143
         ALR   @01,VPTR                                            0143
         AL    @01,@CF00473                                        0143
         MVI   VENTMRK(@01),X'FF'                                  0143
*   END VLUCMPRS;                   /* END COMPRESS PROC             */
@EL00002 DS    0H                                                  0144
@EF00002 DS    0H                                                  0144
@ER00002 LM    @14,@12,12(@13)                                     0144
         BR    @14                                                 0144
         EJECT
*                                                                  0145
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK THE DATA TO INSURE NO NON-PRINTABLE CHARACTERS          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0145
*VLUSTMSG:                                                         0145
*   PROCEDURE;                      /* SET UP DATA AREA FOR MSG      */
VLUSTMSG STM   @14,@12,12(@13)                                     0145
*   DECLARE                         /*                               */
*     SP1 CHAR(1) CONSTANT('?'),    /* SPECIAL CHAR FOR MSG          */
*     SP2 CHAR(1) CONSTANT('#'),    /*                               */
*     SP3 CHAR(1) CONSTANT('$'),    /*                               */
*     SP4 CHAR(1) CONSTANT('@');    /*                               */
*   DECLARE                         /*                               */
*     CHARA CHAR(1) CONSTANT('A'),  /*                               */
*     CHARI CHAR(1) CONSTANT('I'),  /*                               */
*     CHARJ CHAR(1) CONSTANT('J'),  /*                               */
*     CHARR CHAR(1) CONSTANT('R'),  /*                               */
*     CHARS CHAR(1) CONSTANT('S'),  /*                               */
*     CHARZ CHAR(1) CONSTANT('Z'),  /*                               */
*     CHAR0 CHAR(1) CONSTANT('0'),  /*                               */
*     CHAR9 CHAR(1) CONSTANT('9');  /*                               */
*   DECLARE                         /*                               */
*     J FIXED(31);                  /*                               */
*                                                                  0148
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THRU VALUE AND BLANK OUT ALL NON-PRINTABLES              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0149
*   DATA16=VLPDATA;                 /* MOVE DATA TO WORK AREA        */
         MVI   DATA16+8,C' '                                       0149
         MVC   DATA16+9(7),DATA16+8                                0149
         L     @10,@PC00001                                        0149
         MVC   DATA16(8),VLPDATA(@10)                              0149
*   DO J=1 TO LENGTH(DATA16);       /* LOOP THRU ALL DATA            */
         LA    J,1                                                 0150
@DL00150 DS    0H                                                  0151
*     IF(DATA16(J)>=CHARA&DATA16(J)<=CHARI)/* IF ALPHA               */
*         ×(DATA16(J)>=CHARJ&DATA16(J)<=CHARR)/*                     */
*         ×(DATA16(J)>=CHARS&DATA16(J)<=CHARZ)/*                     */
*         ×(DATA16(J)>=CHAR0&DATA16(J)<=CHAR9)/* OR NUMERIC          */
*         ×DATA16(J)=SP1            /* OR SPECIAL CHAR               */
*         ×DATA16(J)=SP2            /*                               */
*         ×DATA16(J)=SP3            /*                               */
*         ×DATA16(J)=SP4            /*                               */
*       THEN                        /*                               */
         LA    @10,DATA16-1(J)                                     0151
         CLI   0(@10),C'A'                                         0151
         BL    @GL00013                                            0151
         LA    @10,DATA16-1(J)                                     0151
         CLI   0(@10),C'I'                                         0151
         BNH   @RT00151                                            0151
@GL00013 LA    @10,DATA16-1(J)                                     0151
         CLI   0(@10),C'J'                                         0151
         BL    @GL00012                                            0151
         LA    @10,DATA16-1(J)                                     0151
         CLI   0(@10),C'R'                                         0151
         BNH   @RT00151                                            0151
@GL00012 LA    @10,DATA16-1(J)                                     0151
         CLI   0(@10),C'S'                                         0151
         BL    @GL00011                                            0151
         LA    @10,DATA16-1(J)                                     0151
         CLI   0(@10),C'Z'                                         0151
         BNH   @RT00151                                            0151
@GL00011 LA    @10,DATA16-1(J)                                     0151
         CLI   0(@10),C'0'                                         0151
         BL    @GL00010                                            0151
         LA    @10,DATA16-1(J)                                     0151
         CLI   0(@10),C'9'                                         0151
         BNH   @RT00151                                            0151
@GL00010 LA    @10,DATA16-1(J)                                     0151
         CLI   0(@10),C'?'                                         0151
         BE    @RT00151                                            0151
         LA    @10,DATA16-1(J)                                     0151
         CLI   0(@10),C'#'                                         0151
         BE    @RT00151                                            0151
         LA    @10,DATA16-1(J)                                     0151
         CLI   0(@10),C'$'                                         0151
         BE    @RT00151                                            0151
         LA    @10,DATA16-1(J)                                     0151
         CLI   0(@10),C'@'                                         0151
         BE    @RT00151                                            0151
*       ;                           /*                               */
*     ELSE                          /*                               */
*       DATA16(J)=BLANK;            /* IF NOT ONE OF ABOVE THEN BLNK */
         LA    @10,DATA16-1(J)                                     0153
         MVI   0(@10),C' '                                         0153
*   END;                            /* END LOOP THRU DATA            */
@RT00151 AH    J,@CH00039                                          0154
         CH    J,@CH00053                                          0154
         BNH   @DL00150                                            0154
*   RETURN CODE(0);                 /*                               */
         SLR   @15,@15                                             0155
         L     @14,12(,@13)                                        0155
         LM    @00,@12,20(@13)                                     0155
         BR    @14                                                 0155
*   END VLUSTMSG;                   /*                               */
*   END HMASMVLU                                                   0157
*                                                                  0157
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMVLP)                                       */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMMGP)                                       */
*                                                                  0157
*       ;                                                          0157
@DATA    DS    0H
@CH00039 DC    H'1'
@CH00375 DC    H'9'
@CH00053 DC    H'16'
@CH00403 DC    H'60'
@CH00405 DC    H'157'
@CH00407 DC    H'158'
@CH00409 DC    H'159'
@SC00475 CLC   VENTDATA(0,@01),VLPDATA(@10)
         DS    0F
@AL00069 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00087 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00101 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00126 DC    A(HMASMMGP)             LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@TF00001 DS    F
         DS    0F
@CF00473 DC    F'-9'
@CA00065 DC    A(HMASMCCA)
@CV00401 DC    V(HMASMMSG)
         DS    0D
@TS00001 DS    CL9
@CB00415 DC    X'000000000000000000'
         DS    CL2
HMASMMGP DS    CL40
         ORG   HMASMMGP
MGPFIXED DS    CL12
         ORG   MGPFIXED
MGPCLEAR DS    CL6
         ORG   MGPCLEAR
MGPMGNO1 DS    FL2
MGPMGNO2 DS    FL2
MGPMGNO3 DS    FL2
         ORG   MGPFIXED+6
MGPFLAGS DS    BL2
         ORG   MGPFLAGS
MGPPRINT DS    BL1
MGPLIST  EQU   MGPFLAGS+0
MGPRPT   EQU   MGPFLAGS+0
MGPHLDS  EQU   MGPFLAGS+0
MGPWTOR  EQU   MGPFLAGS+0
MGPWTO   EQU   MGPFLAGS+0
MGPWTP   EQU   MGPFLAGS+0
@NM00044 EQU   MGPFLAGS+0
         ORG   MGPFIXED+8
MGPTYPE  DS    FL1
@NM00045 DS    CL3
         ORG   HMASMMGP+12
MGPVAR   DS    CL28
         ORG   MGPVAR
MGPVARPT DS    7A
         ORG   HMASMMGP+40
DATA16   DS    CL16
FLAGS    DS    BL1
         ORG   FLAGS
FFOUND   DS    BL1
@NM00046 EQU   FLAGS+0
         ORG   FLAGS+1
         DS    CL1
PATCHVLU DS    CL80
         ORG   PATCHVLU
@NM00047 DC    X'FF'
         DS    79XL1
         ORG   PATCHVLU+80
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
J        EQU   @02
P2       EQU   @04
P1       EQU   @02
VPTR     EQU   @03
I        EQU   @02
CCAPTR   EQU   @11
RTNCODE  EQU   @15
RTNREG   EQU   @14
         EXTRN HMASMCCA
CCABLDLA EQU   0
@NM00026 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00028 EQU   CCABLDLL
CCALKDRC EQU   @NM00028+20
@NM00030 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00030+20
@NM00032 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00032+20
@NM00034 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00034+20
@NM00036 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00036+20
@NM00038 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00038+20
@NM00040 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00040+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
VENT     EQU   0
VENTDATA EQU   VENT
VENTMRK  EQU   VENTDATA
VENTTYPE EQU   VENT+8
CCADSIDA EQU   0
CCATYPEA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAFSYS  EQU   HMASMCCA+148
CCAPEMAX EQU   CCAFSYS+10
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00010 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAFLAG2 EQU   CCAFFUNC+11
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
HMASMVLP EQU   0
VLPFUNCT EQU   HMASMVLP
VLPRETRN EQU   HMASMVLP+1
VLPFLAG  EQU   HMASMVLP+2
VLPFMSG  EQU   VLPFLAG
VLPDLEN  EQU   HMASMVLP+3
VLPSNTRY EQU   HMASMVLP+4
VLPDATA  EQU   VLPSNTRY
VLPTYPE  EQU   VLPSNTRY+8
VLPLPTR  EQU   HMASMVLP+16
VLPMTYPE EQU   HMASMVLP+20
VLPMNAME EQU   HMASMVLP+28
VLPSTYPE EQU   HMASMVLP+36
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00001 EQU   HMASMVLP+13
VLPFRSV  EQU   VLPFLAG
CCAEND   EQU   HMASMCCA+371
@NM00025 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00024 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00023 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00022 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00021 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00020 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00019 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00018 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00017 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00016 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCAAPPLY EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00015 EQU   @NM00010+18
@NM00014 EQU   @NM00010+16
CCATBLPA EQU   @NM00010+12
@NM00013 EQU   @NM00010+8
@NM00012 EQU   @NM00010+4
@NM00011 EQU   @NM00010
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCAICLMD EQU   CCAFICT+12
CCAICMOD EQU   CCAFICT+8
CCAICPTF EQU   CCAFICT+4
CCAICT   EQU   CCAFICT
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00009 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
CCAIOPTR EQU   CCAFIOP
@NM00008 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00007 EQU   CCAFBUFR+122
@NM00006 EQU   CCAFBUFR+120
@NM00005 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00004 EQU   CCAFBUFR+88
@NM00003 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00002 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00043 EQU   CCABLDLM+2
@NM00042 EQU   CCABLDLM
CCAUPDPM EQU   @NM00040+24
@NM00041 EQU   @NM00040+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00040+12
CCAUPDTE EQU   @NM00040+8
CCAUPDNM EQU   @NM00040
CCASUPPM EQU   @NM00038+24
@NM00039 EQU   @NM00038+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00038+12
CCAIOSUP EQU   @NM00038+8
CCASUPNM EQU   @NM00038
CCAZAPPM EQU   @NM00036+24
@NM00037 EQU   @NM00036+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00036+12
CCASPZAP EQU   @NM00036+8
CCAZAPNM EQU   @NM00036
CCACOMPM EQU   @NM00034+24
@NM00035 EQU   @NM00034+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00034+12
CCACOMRS EQU   @NM00034+8
CCACOMNM EQU   @NM00034
CCACPYPM EQU   @NM00032+24
@NM00033 EQU   @NM00032+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00032+12
CCACOPY  EQU   @NM00032+8
CCACPYNM EQU   @NM00032
CCAASMPM EQU   @NM00030+24
@NM00031 EQU   @NM00030+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00030+12
CCAASM   EQU   @NM00030+8
CCAASMNM EQU   @NM00030
CCALKDPM EQU   @NM00028+24
@NM00029 EQU   @NM00028+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00028+12
CCALKED  EQU   @NM00028+8
CCALKDNM EQU   @NM00028
CCAPGMPM EQU   @NM00026+24
@NM00027 EQU   @NM00026+21
CCABPGRC EQU   @NM00026+20
CCABPGSP EQU   @NM00026+12
CCABPGAD EQU   @NM00026+8
CCABPGNM EQU   @NM00026
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00129 EQU   @EL00001
@RC00109 EQU   @EL00001
@RC00073 EQU   @EL00001
@RC00077 EQU   @RC00073
@RC00091 EQU   @RC00073
@RF00118 EQU   @RC00109
@RC00113 EQU   @RC00109
@RF00079 EQU   @RC00077
@ENDDATA EQU   *
         END   HMASMVLU,(C'PLS2239',0802,78334)
