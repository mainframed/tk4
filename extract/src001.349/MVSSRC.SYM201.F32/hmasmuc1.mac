         TITLE 'HMASMUC1 - SMP CDS/ACDS UCLIN PROCESSOR'
HMASMUC1 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMUC1  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  LA    @10,4095(,@12)                                      0001
         LA    @08,4095(,@10)                                      0001
         LA    @07,4095(,@08)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@10                                    0001
         USING @PSTART+8190,@08                                    0001
         USING @PSTART+12285,@07                                   0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(8),0(@01)                                  0001
*                                                                  0205
*   /*****************************************************************/
*   /*                                                               */
*   /* HMASMUC1 - SMP UPDATE CONTROL LANGUAGE HANDLER.               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0205
*   IOPPTR=CCAIOPTR;                /* SET ADDRESSABILITY FOR I/O  0205
*                                      RTNE                  @Z63SP00*/
         L     IOPPTR,CCAIOPTR(,CCAPTR)                            0205
*   SAVBUFAD=IOPBUFAD;              /* SAVE BUFFER ADDR              */
         MVC   SAVBUFAD(4),IOPBUFAD(IOPPTR)                        0206
*   SCPPTR=CRPSCPAD;                /* PICK UP SCP ADDR              */
         L     @06,@PC00001+4                                      0207
         MVC   SCPPTR(4),CRPSCPAD(@06)                             0207
*   UCLRTNCD=ZERO;                  /* INIT RETURN CODE              */
         MVI   UCLRTNCD,X'00'                                      0208
*   UCLSWTBL=''B;                   /* CLEAR CNTL SW                 */
*                                                                  0209
         XC    UCLSWTBL(5),UCLSWTBL                                0209
*   /*****************************************************************/
*   /*                                                               */
*   /* SET MGP FOR ALL MSG TO GO TO PRINTER AND LOG                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0210
*   HMASMMGP=HMASMMGP&&HMASMMGP;    /* CLEAR MGP FIRST       @Z40SP00*/
         XC    HMASMMGP(32),HMASMMGP                               0210
*   MGPPRINT=ON;                    /* MSG TO PRINTER        @Z40SP00*/
*   MGPHLDS=ON;                     /* MSG TO LOG            @Z40SP00*/
*                                                                  0212
         OI    MGPPRINT,B'10010000'                                0212
*   /*****************************************************************/
*   /*                                                               */
*   /* INIT HMASMVLU PARMATER                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0213
*   HMASMVLP=''B;                   /*                               */
         XC    HMASMVLP(52),HMASMVLP                               0213
*   VLPFMSG=ON;                     /* ISSUE ERROR MESSAGES          */
*                                                                  0214
         OI    VLPFMSG,B'10000000'                                 0214
*   /*****************************************************************/
*   /*                                                               */
*   /* SET VALUE FOR IOPDSID BASED ON INPUT PARM                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0215
*   IF UCLCDS=ON                    /*                               */
*     THEN                          /*                               */
         L     @06,@PC00001                                        0215
         TM    UCLCDS(@06),B'10000000'                             0215
         BNO   @RF00215                                            0215
*     UC1DSID=IOPCDS;               /*                               */
         MVI   UC1DSID,X'02'                                       0216
*   ELSE                            /*                               */
*     UC1DSID=IOPACDS;              /*                               */
         B     @RC00215                                            0217
@RF00215 MVI   UC1DSID,X'0C'                                       0217
*                                                                  0218
*   /*****************************************************************/
*   /*                                                               */
*   /* PROGRAM INITIALIZATION - CLEAR CONTROL SWITCHES AND SET DATA  */
*   /* AREAS TO BLANK CHARACTERS                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0218
*   DO WHILE(                       /* CONTINUE LOOP WHILE           */
*         UCLRTNCD<STOPSMP          /* NO CRITICAL ERRS              */
*         &UCLTERM=OFF              /* NO TERMINAL ERRS              */
*         &CRPEOFEN=OFF             /* AND NOT END OF FILE           */
*         );                        /*                               */
@RC00215 B     @DE00218                                            0218
@DL00218 DS    0H                                                  0219
*     IF UCLRTNCD=STOPFUNC          /* STOP UCLIN PROCESSING @Z40SP00*/
*         ×UCLFLUSH=ON              /* OR IN FLUSH MODE              */
*       THEN                        /* YES                   @Z40SP00*/
         CLI   UCLRTNCD,12                                         0219
         BE    @RT00219                                            0219
         L     @06,@PC00001                                        0219
         TM    UCLFLUSH(@06),B'00000010'                           0219
         BNO   @RF00219                                            0219
@RT00219 DS    0H                                                  0220
*       DO;                         /*                               */
*         SCPNORT=ON;               /* DONT CALL ROUTS               */
         L     @06,SCPPTR                                          0221
         OI    SCPNORT(@06),B'00000100'                            0221
*         UCLFLUSH=ON;              /* SET FLUSH BIT         @Z40SP00*/
         L     @06,@PC00001                                        0222
         OI    UCLFLUSH(@06),B'00000010'                           0222
*       END;                        /*                               */
*     ELSE                          /*                               */
*       SCPNORT=OFF;                /* CALL ROUTS                    */
         B     @RC00219                                            0224
@RF00219 L     @06,SCPPTR                                          0224
         NI    SCPNORT(@06),B'11111011'                            0224
*     UCLSWTBL=''B;                 /* CLEAR THE CONTROL SWITCHES    */
@RC00219 XC    UCLSWTBL(5),UCLSWTBL                                0225
*     DO LOOPINDX=1 TO CCAPESIZ;    /* CLEAR IOP TO ZERO     @Z40SP00*/
         LA    @06,1                                               0226
         B     @DE00226                                            0226
@DL00226 DS    0H                                                  0227
*       IOPUDATA(LOOPINDX)=ZERO;    /* RESET THE IOP         @Z40SP00*/
         SLR   @15,@15                                             0227
         STC   @15,IOPUDATA-1(@06,IOPPTR)                          0227
*     END;                          /* END CLEAR IOP GROUP   @Z40SP00*/
         AH    @06,@CH00043                                        0228
@DE00226 ST    @06,LOOPINDX                                        0228
         C     @06,CCAPESIZ(,CCAPTR)                               0228
         BNH   @DL00226                                            0228
*     IOPNAME=BLANK8;               /*                               */
*                                                                  0229
         MVC   IOPNAME(8,IOPPTR),BLANK8                            0229
*     /***************************************************************/
*     /*                                                             */
*     /* READ A CONTROL STATEMENT FROM THE INPUT DATA SET    @Z63SP00*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0230
*     CALL HMASMCRD(HMASMCRP);      /* READ/PRINT CC                 */
         L     @06,@PC00001+4                                      0230
         ST    @06,@AL00001                                        0230
         L     @15,@CV01407                                        0230
         LA    @01,@AL00001                                        0230
         BALR  @14,@15                                             0230
*     IF CRPRETRN>CRPEOF            /* IF RC GREATER THAN            */
*       THEN                        /* EOF THEN                      */
         L     @06,@PC00001+4                                      0231
         CLI   CRPRETRN(@06),4                                     0231
         BNH   @RF00231                                            0231
*       UCLRTNCD=MAX(UCLRTNCD,CRPRETRN);/* SAVE RC                   */
*                                                                  0232
         SLR   @15,@15                                             0232
         IC    @15,UCLRTNCD                                        0232
         SLR   @14,@14                                             0232
         IC    @14,CRPRETRN(,@06)                                  0232
         CR    @15,@14                                             0232
         BNL   *+6
         LR    @15,@14                                             0232
         STC   @15,UCLRTNCD                                        0232
*     /***************************************************************/
*     /*                                                             */
*     /* IF A RECORD WAS SUCCESSFULLY READ THEN SCAN IT      @Z63SP00*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0233
*     IF CRPRETRN=CRPGOOD           /* IF RECORD READ OK             */
*       THEN                        /*                               */
@RF00231 L     @06,@PC00001+4                                      0233
         CLI   CRPRETRN(@06),0                                     0233
         BNE   @RF00233                                            0233
*       DO;                         /*                               */
*         SCPSRCH=ADSCNTBL;         /* PLACE THE START OF THE SCAN 0235
*                                      TABLES INTO THE SCAN PARM LIST*/
         L     @06,SCPPTR                                          0235
         MVC   SCPSRCH(4,@06),ADSCNTBL                             0235
*         CALL HMASMSCN(HMASMSCP);  /* CALL THE SCAN ROUTINE TO SCAN
*                                      THE CARD WE JUST READ IN      */
         ST    @06,@AL00001                                        0236
         L     @15,@CV01410                                        0236
         LA    @01,@AL00001                                        0236
         BALR  @14,@15                                             0236
*                                                                  0237
*/********************************************************************/
*/*                                                                  */
*/*    SCAN RETURN CODES - SYNTAX ERROR & STATUS INDICATORS -@Z63SP00*/
*/*                                                          @Z63SP00*/
*/*    ERRAFTPR -  INDICATES A SYNTAX ERROR WAS DETECTED DURING      */
*/*                A SCAN EXIT ROUTINE                       @Z63SP00*/
*/*    SCPRET   -  THE RETURN CODE FROM THE SCAN ROUTINE - IF NON-   */
*/*                ZERO, THE SCAN ROUTINE HAS DETECTED A SYNTAX      */
*/*                ERROR                                     @Z63SP00*/
*/*    INVLOP   - INVALID OPERATION REQUESTED                        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0237
*         IF CRPEOFEN=ON            /* EOF ON INPUT?         @SA72402*/
*           THEN                    /* YES                           */
         L     @06,@PC00001+4                                      0237
         TM    CRPEOFEN(@06),B'10000000'                           0237
         BNO   @RF00237                                            0237
*           CALL UCL252I;           /* WRITE MSG                     */
         BAL   @14,UCL252I                                         0238
*         ELSE                      /*                               */
*           DO;                     /*                               */
         B     @RC00237                                            0239
@RF00237 DS    0H                                                  0240
*             IF SCPRETRN>STOPPTF   /* IF I/O TYPE ERR               */
*               THEN                                               0240
         L     @06,SCPPTR                                          0240
         CLI   SCPRETRN(@06),8                                     0240
         BNH   @RF00240                                            0240
*               UCLRTNCD=MAX(UCLRTNCD,SCPRETRN);/* PASS ALONG RC     */
         SLR   @15,@15                                             0241
         IC    @15,UCLRTNCD                                        0241
         SLR   @14,@14                                             0241
         IC    @14,SCPRETRN(,@06)                                  0241
         CR    @15,@14                                             0241
         BNL   *+6
         LR    @15,@14                                             0241
         STC   @15,UCLRTNCD                                        0241
*             IF SCPRETRN^=SCPGOOD  /* IF SCAN NOT OK                */
*               THEN                /*                               */
@RF00240 L     @06,SCPPTR                                          0242
         CLI   SCPRETRN(@06),0                                     0242
         BE    @RF00242                                            0242
*               CALL UCL203I;       /* PUT OUT SYNTAX ERR            */
         BAL   @14,UCL203I                                         0243
*             IF(SCPRETRN^=SCPGOOD  /* IF SYNTAX ERROR               */
*                 ×DELERR=ON        /* OR INVALID DELETE             */
*                 ×INVLOP=ON)       /* OR INVALID OPERATION          */
*                 &ERRAFTPR=OFF     /* BUT NOT ERR AFTER PERIOD      */
*               THEN                /* YES                   @YA07506*/
@RF00242 L     @06,SCPPTR                                          0244
         CLI   SCPRETRN(@06),0                                     0244
         BNE   @GL00002                                            0244
         TM    DELERR,B'00000110'                                  0244
         BZ    @RF00244                                            0244
@GL00002 TM    ERRAFTPR,B'00010000'                                0244
         BNZ   @RF00244                                            0244
*               CALL FLUSH;         /* FLUSH REST OF CARD            */
         BAL   @14,FLUSH                                           0245
*             IF INVLOP=ON          /* IF INVALID OPERATION          */
*               THEN                /*                               */
@RF00244 TM    INVLOP,B'00000100'                                  0246
         BNO   @RF00246                                            0246
*               CALL UCL276I;       /* WRITE MSG                     */
         BAL   @14,UCL276I                                         0247
*             IF DELERR=ON          /*                               */
*               THEN                /*                               */
@RF00246 TM    DELERR,B'00000010'                                  0248
         BNO   @RF00248                                            0248
*               CALL UCL253I;       /*                               */
         BAL   @14,UCL253I                                         0249
*           END;                    /*                               */
@RF00248 DS    0H                                                  0251
*                                                                  0251
*         /***********************************************************/
*         /*                                                         */
*         /* IF THE OPERATION WAS NOT A TOTAL DELETE CHECK EACH TYPE */
*         /* ENTRY TO INSURE SUFFICIENT INFORMATION HAS EITHER BEEN  */
*         /* SPECIFIED OR WAS THERE AND NOT DELETED                  */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0251
*         IF UCLTERM=OFF            /* IF ENDUCL NOT FOUND           */
*             &UCLFLUSH=OFF         /* AND NOT IN FLUSH MODE         */
*           THEN                    /*                               */
@RC00237 TM    UCLTERM,B'00001000'                                 0251
         BNZ   @RF00251                                            0251
         L     @06,@PC00001                                        0251
         TM    UCLFLUSH(@06),B'00000010'                           0251
         BNZ   @RF00251                                            0251
*           DO;                     /*                               */
*             IF ERR1SW=OFF         /* IF NO PREV ERR                */
*                 &TOTALDEL=OFF     /* AND NOT TOTAL DEL             */
*               THEN                /* CHECK FOR SUFFICIENT          */
         TM    ERR1SW,B'10000000'                                  0253
         BNZ   @RF00253                                            0253
         TM    TOTALDEL,B'00001000'                                0253
         BNZ   @RF00253                                            0253
*               CALL CPLTCHK;       /* DATA IN ENTRY                 */
         BAL   @14,CPLTCHK                                         0254
*             IF ERR2SW=ON          /*                               */
*               THEN                /*                               */
@RF00253 TM    ERR2SW,B'01000000'                                  0255
         BNO   @RF00255                                            0255
*               ERR1SW=ON;          /*                               */
         OI    ERR1SW,B'10000000'                                  0256
*             IF ERR1SW=ON          /*                               */
*               THEN                /*                               */
@RF00255 TM    ERR1SW,B'10000000'                                  0257
         BNO   @RF00257                                            0257
*               UCLRTNCD=MAX(UCLRTNCD,STOPPTF);/*                    */
*                                                                  0258
         SLR   @06,@06                                             0258
         IC    @06,UCLRTNCD                                        0258
         LA    @15,8                                               0258
         CR    @06,@15                                             0258
         BNL   *+6
         LR    @06,@15                                             0258
         STC   @06,UCLRTNCD                                        0258
*             /*******************************************************/
*             /*                                                     */
*             /* WRITE OUT THE UPDATED ENTRY TO SPECIFIED DATA SET   */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0259
*             IF ERR1SW=OFF         /* IF NO ERRORS                  */
*               THEN                /*                               */
@RF00257 TM    ERR1SW,B'10000000'                                  0259
         BNZ   @RF00259                                            0259
*               DO;                 /*                               */
*                 CALL UCLSTOW;     /* STOW CHANGED ENTRY            */
         BAL   @14,UCLSTOW                                         0261
*                 RFY                                              0262
*                   RTNCODE RSTD;   /*                               */
*                 UCLRTNCD=MAX(UCLRTNCD,RTNCODE);/* SAVE RC          */
         SLR   @14,@14                                             0263
         IC    @14,UCLRTNCD                                        0263
         CR    @14,RTNCODE                                         0263
         BNL   *+6
         LR    @14,RTNCODE                                         0263
         STC   @14,UCLRTNCD                                        0263
*                 IF RTNCODE^=ZERO  /* IF STOW ERROR                 */
*                   THEN            /*                               */
         LTR   RTNCODE,RTNCODE                                     0264
         BZ    @RF00264                                            0264
*                   ERR1SW=ON;      /* SET ERROR INDICATOR           */
         OI    ERR1SW,B'10000000'                                  0265
*                 ELSE              /*                               */
*                   DO;             /*                               */
         B     @RC00264                                            0266
@RF00264 DS    0H                                                  0267
*                     IF SYS=ON     /*                               */
*                       THEN        /*                               */
         TM    SYS,B'00000100'                                     0267
         BNO   @RF00267                                            0267
*                       DO;         /*                               */
*                         SAVNAME=IOPNAME;/* SAVE NAME               */
         MVC   SAVNAME(8),IOPNAME(IOPPTR)                          0269
*                         CALL HMASMDS1(HMASMIOP,'Y');/*             */
         ST    IOPPTR,@AL00001                                     0270
         LA    @14,@CC01596                                        0270
         ST    @14,@AL00001+4                                      0270
         L     @15,@CV01408                                        0270
         LA    @01,@AL00001                                        0270
         BALR  @14,@15                                             0270
*                         UCLRTNCD=MAX(UCLRTNCD,RTNCODE);/*          */
         SLR   @14,@14                                             0271
         IC    @14,UCLRTNCD                                        0271
         CR    @14,RTNCODE                                         0271
         BNL   *+6
         LR    @14,RTNCODE                                         0271
         STC   @14,UCLRTNCD                                        0271
*                         IF RTNCODE=ZERO/* IF PROCESS OK            */
*                           THEN    /*                               */
         LTR   RTNCODE,RTNCODE                                     0272
         BNZ   @RF00272                                            0272
*                           DO;     /*                               */
*                             IOPPTR=CCAIOPTR;/* RESET PTR IN CASE   */
         L     IOPPTR,CCAIOPTR(,CCAPTR)                            0274
*                             IOPBUFAD=SAVBUFAD;/* ANOTHER IOP       */
         MVC   IOPBUFAD(4,IOPPTR),SAVBUFAD                         0275
*                           END;    /* WAS GETMAINED                 */
*                         ELSE      /* IF GETMAIN FAILED THEN USE    */
*                           IOPPTR=CCAIOPCS;/* SYSIOP FOR REST       */
         B     @RC00272                                            0277
@RF00272 L     IOPPTR,CCAIOPCS(,CCAPTR)                            0277
*                         IOPNAME=SAVNAME;/* RESET NAME              */
@RC00272 MVC   IOPNAME(8,IOPPTR),SAVNAME                           0278
*                       END;        /*                               */
*                   END;            /*                               */
@RF00267 DS    0H                                                  0281
*                 RFY                                              0281
*                   RTNCODE UNRSTD; /*                               */
@RC00264 DS    0H                                                  0282
*               END;                /* END NO ERROR                  */
*                                                                  0282
*             /*******************************************************/
*             /*                                                     */
*             /* UPDATE COMPLETE - ISSUE MESSAGE TELLING USER THE CDS*/
*             /* ENTRY WAS UPDATED SUCCESSFULLY THEN CONTINUE        */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0283
*             IF ERR1SW=OFF         /* IF ENTRY UPDATED              */
*               THEN                /* ISSUE SUCCESS                 */
@RF00259 TM    ERR1SW,B'10000000'                                  0283
         BNZ   @RF00283                                            0283
*               CALL UCL255I;       /* MSG                           */
         BAL   @14,UCL255I                                         0284
*             ELSE                  /* ELSE ISSUE TERMINATE          */
*               CALL UCL256I;       /* MSG                           */
         B     @RC00283                                            0285
@RF00283 BAL   @14,UCL256I                                         0285
*           END;                    /*                               */
@RC00283 DS    0H                                                  0287
*         PRLFLGS=ZERO;             /*                               */
@RF00251 L     @06,IOPBUFAD(,IOPPTR)                               0287
         MVI   PRLFLGS(@06),X'00'                                  0287
*         PRLBLANK=ON;              /*                               */
         OI    PRLBLANK(@06),B'00100000'                           0288
*         IOPDSID=IOPPRINT;         /*                               */
         MVI   IOPDSID(IOPPTR),X'0B'                               0289
*         IOPFUNCT=IOPWRITE;        /*                               */
         MVI   IOPFUNCT(IOPPTR),X'51'                              0290
*         CALL HMASMIO(HMASMIOP);   /* WRITE BLANK LINE              */
         ST    IOPPTR,@AL00001                                     0291
         L     @15,@CV01409                                        0291
         LA    @01,@AL00001                                        0291
         BALR  @14,@15                                             0291
*         IF IOPRETRN=IOPGOOD       /*                               */
*           THEN                    /*                               */
         CLI   IOPRETRN(IOPPTR),0                                  0292
         BNE   @RF00292                                            0292
*           CALL HMASMIO(HMASMIOP); /* TWO LINES                     */
         ST    IOPPTR,@AL00001                                     0293
         L     @15,@CV01409                                        0293
         LA    @01,@AL00001                                        0293
         BALR  @14,@15                                             0293
*         UCLRTNCD=MAX(UCLRTNCD,IOPRETRN);/*                         */
@RF00292 SLR   @06,@06                                             0294
         IC    @06,UCLRTNCD                                        0294
         SLR   @15,@15                                             0294
         IC    @15,IOPRETRN(,IOPPTR)                               0294
         CR    @06,@15                                             0294
         BNL   *+6
         LR    @06,@15                                             0294
         STC   @06,UCLRTNCD                                        0294
*       END;                        /* END RC RCD AND SCANND         */
*   END;                            /* END READ/SCAN LOOP            */
@RF00233 DS    0H                                                  0296
@DE00218 CLI   UCLRTNCD,16                                         0296
         BNL   @DC00218                                            0296
         TM    UCLTERM,B'00001000'                                 0296
         BNZ   @DC00218                                            0296
         L     @06,@PC00001+4                                      0296
         TM    CRPEOFEN(@06),B'10000000'                           0296
         BZ    @DL00218                                            0296
@DC00218 DS    0H                                                  0297
*                                                                  0297
*   /*****************************************************************/
*   /*                                                               */
*   /* IF LOOP ENDED DUE TO I/O ERROR FROM READ ROUTINE THEN ISSUE   */
*   /* MESSAGE NOW                                           @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0297
*   IF CRPRETRN=CRPEOF              /* IF END OF FILE                */
*       &UCLTERM=OFF                /* BEFORE ENDUCL                 */
*     THEN                          /*                               */
         L     @06,@PC00001+4                                      0297
         CLI   CRPRETRN(@06),4                                     0297
         BNE   @RF00297                                            0297
         TM    UCLTERM,B'00001000'                                 0297
         BNZ   @RF00297                                            0297
*     CALL UCL258I;                 /*                               */
         BAL   @14,UCL258I                                         0298
*   ELSE                            /*                               */
*     IF CRPRETRN>CRPEOF            /* IF GREATER THEN EOF           */
*       THEN                        /*                               */
         B     @RC00297                                            0299
@RF00297 L     @06,@PC00001+4                                      0299
         CLI   CRPRETRN(@06),4                                     0299
         BNH   @RF00299                                            0299
*       CALL UCL256I;               /*                               */
*                                                                  0300
         BAL   @14,UCL256I                                         0300
*   /*****************************************************************/
*   /*                                                               */
*   /* UCL UPDATE COMPLETED SUCCESSFULLY RETURN TO THE CALLER@Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0301
*   RETURN CODE(UCLRTNCD);          /* RETURN TO CALLER WITH HIGHEST
*                                      RETURN CODE ENCOUNTERED       */
@RF00299 DS    0H                                                  0301
@RC00297 SLR   @15,@15                                             0301
         IC    @15,UCLRTNCD                                        0301
         L     @13,4(,@13)                                         0301
         L     @14,12(,@13)                                        0301
         LM    @00,@12,20(@13)                                     0301
         BR    @14                                                 0301
         EJECT
*                                                                  0302
*   /*****************************************************************/
*   /*                                                               */
*   /* THESE ROUTINE ARE CALLED WHEN THE FUNCTION KEYWORD IS         */
*   /* ENCOUNTERED. THEY SAVE AN INDICATOR AS TO THE TYPE FUNCTION   */
*   /* REQUESTED                                             @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0302
*RXXXFNC:                           /*                               */
*   PROCEDURE;                      /*                               */
RXXXFNC  STM   @14,@12,12(@13)                                     0302
*RREP00:                            /* REPLACE VERB SCAN EXIT@Z63SP00*/
*   ENTRY;                          /*                               */
         B     @EC00303                                            0303
RREP00   STM   @14,@12,12(@13)                                     0303
@EC00303 DS    0H                                                  0304
*   REP=ON;                         /* SET SWITCH IN TABLE   @Z63SP00*/
         OI    REP,B'10000000'                                     0304
*   RETURN;                         /* RETURN TO HMASMSCN            */
@EL00002 DS    0H                                                  0305
@EF00002 DS    0H                                                  0305
@ER00002 LM    @14,@12,12(@13)                                     0305
         BR    @14                                                 0305
*RDEL00:                            /* DELETE VERB SCAN EXIT @Z63SP00*/
*   ENTRY;                          /*                               */
RDEL00   STM   @14,@12,12(@13)                                     0306
*   DEL=ON;                         /* INDICATE DELETE       @Z63SP00*/
         OI    DEL,B'01000000'                                     0307
*   RETURN;                         /* RETURN TO HMASMSCN            */
         B     @EL00002                                            0308
*RADD00:                            /* ADD VERB SCAN EXIT    @Z63SP00*/
*   ENTRY;                          /*                               */
RADD00   STM   @14,@12,12(@13)                                     0309
*   ADD=ON;                         /* INDICATE ADD IN SWITCH TABLE  */
         OI    ADD,B'00100000'                                     0310
*   RETURN;                         /* RETURN TO HMASMSCN            */
         B     @EL00002                                            0311
*   END RXXXFNC;                    /* END FUNCTION ROUTS            */
         EJECT
*                                                                  0313
*   /*****************************************************************/
*   /*                                                               */
*   /* THESE ROUTINES ARE ENTERED WHEN THE ENTRY TYPE KEYWORD IS     */
*   /* ENCOUNTERED ON THE UCLIN STATEMENT. THEY SET UP THE IOP SO    */
*   /* THAT IF THE ENTRY IS NOT LOCATED THEN THE IOP WILL BE         */
*   /* INITIALIZED TO NULL VALUES.                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0313
*RXXX00:                            /*                               */
*   PROCEDURE;                      /*                               */
RXXX00   STM   @14,@12,@SA00003                                    0313
*RSMD00:                            /* PTF TYPE SCAN EXIT    @Z63SP00*/
*   ENTRY;                          /*                               */
         B     @EC00314                                            0314
RSMD00   STM   @14,@12,@SA00003                                    0314
@EC00314 DS    0H                                                  0315
*   PTF=ON;                         /* INDICATE THAT IN THE TABLE    */
         OI    PTF,B'10000000'                                     0315
*   IOPTYPE=IOPSMD;                 /* INDICATE SYSMOD ENTRY         */
         MVI   IOPTYPE(IOPPTR),X'0B'                               0316
*   IOPNTLVL=IOPPTFLC;              /* CURRENT LEVEL         @Z67SP00*/
         MVI   IOPNTLVL(IOPPTR),X'02'                              0317
*   IOPDBYNO=BLANK7;                /* NO DEL BY             @Z67SP00*/
         MVC   IOPDBYNO(7,IOPPTR),@CC01416                         0318
*   IOPSBYNO=BLANK7;                /* NO SUP BY             @Z67SP00*/
         MVC   IOPSBYNO(7,IOPPTR),@CC01416                         0319
*   IOPPFMID=BLANK7;                /* NO FMID               @Z67SP00*/
         MVC   IOPPFMID(7,IOPPTR),@CC01416                         0320
*   IOPPTFND(1)=IOPEOLST;           /* SET END OF PTF LIST   @ZD00004*/
         MVI   IOPPTFND(IOPPTR),X'FF'                              0321
*   RETURN;                         /* RETURN TO SCAN                */
*                                                                  0322
@EL00003 DS    0H                                                  0322
@EF00003 DS    0H                                                  0322
@ER00003 LM    @14,@12,@SA00003                                    0322
         BR    @14                                                 0322
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN EXIT FOR MODULE TYPE UCL UPDATE                  @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0323
*RMOD00:                            /* CSECT TYPE SCAN EXIT  @Z63SP00*/
*   ENTRY;                          /*                               */
RMOD00   STM   @14,@12,@SA00003                                    0323
*   CSECT=ON;                       /* INDICATE CSECT IN UCL TABLE   */
         OI    CSECT,B'01000000'                                   0324
*   IOPTYPE=IOPMOD;                 /* SET TYPE ENTRY        @ZD00008*/
         MVI   IOPTYPE(IOPPTR),X'05'                               0325
*   IOPNTLVL=IOPMODLC;              /* CURRENT LEVEL                 */
         MVI   IOPNTLVL(IOPPTR),X'02'                              0326
*   IOPRMID=BLANK7;                 /* NO RMID                       */
         MVC   IOPRMID(7,IOPPTR),@CC01416                          0327
*   IOPFMID=BLANK7;                 /* NO FMID                       */
         MVC   IOPFMID(7,IOPPTR),@CC01416                          0328
*   IOPDLIB=BLANK8;                 /* INIT DLIB                     */
         MVC   IOPDLIB(8,IOPPTR),BLANK8                            0329
*   IOPMODND(1)=IOPEOLST;           /* SET END OF MOD ENTRY  @ZD00004*/
         MVI   IOPMODND(IOPPTR),X'FF'                              0330
*   RETURN;                         /* RETURN TO SCAN                */
*                                                                  0331
         B     @EL00003                                            0331
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN EXIT FOR LOAD MODULE TYPE UCL UPDATE                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0332
*RLMD00:                            /* LOAD MODULE TYPE SCAN EXIT    */
*   ENTRY;                          /*                               */
RLMD00   STM   @14,@12,@SA00003                                    0332
*   LMOD=ON;                        /* INDICATE LDMOM TO UCL TABLE   */
         OI    LMOD,B'00100000'                                    0333
*   IF UCLACDS=ON                   /* ASSEM INVALID FR ACDS         */
*     THEN                          /* YES                   @Z40SP00*/
         L     @06,@PC00001                                        0334
         TM    UCLACDS(@06),B'01000000'                            0334
         BNO   @RF00334                                            0334
*     DO;                           /*                               */
*       INVLOP=ON;                  /* INVALID OPERATION             */
         OI    INVLOP,B'00000100'                                  0336
*       SCPRETRN=SCPNDSCN;          /* SYNTAX ERR                    */
         L     @06,SCPPTR                                          0337
         MVI   SCPRETRN(@06),X'04'                                 0337
*       RETURN;                     /*                               */
         B     @EL00003                                            0338
*     END;                          /*                               */
*   IOPTYPE=IOPLMD;                 /* INDICATE LOAD MOD     @ZD00008*/
@RF00334 MVI   IOPTYPE(IOPPTR),X'02'                               0340
*   IOPNTLVL=IOPLMDLC;              /* CURRENT LEVEL                 */
         MVI   IOPNTLVL(IOPPTR),X'02'                              0341
*   IOPLMDND(1)=IOPEOLST;           /* SET END OF LMOD ENTRY @ZD00004*/
         MVI   IOPLMDND(IOPPTR),X'FF'                              0342
*   RETURN;                         /* RETURN TO SCAN                */
*                                                                  0343
         B     @EL00003                                            0343
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN EXIT FOR MACRO TYPE UCL UPDATE                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0344
*RMAC00:                            /* MACRO TYPE SCAN EXIT  @Z63SP00*/
*   ENTRY;                          /*                               */
RMAC00   STM   @14,@12,@SA00003                                    0344
*   MACRO=ON;                       /* SET MACRO SWITCH IN UCL TABLE */
         OI    MACRO,B'00010000'                                   0345
*   IOPTYPE=IOPMAC;                 /* SET MAC CDS TYPE      @ZD00008*/
         MVI   IOPTYPE(IOPPTR),X'03'                               0346
*   IOPNTLVL=IOPMACLC;              /* CURRENT LEVEL                 */
         MVI   IOPNTLVL(IOPPTR),X'03'                              0347
*   IOPRMID=BLANK7;                 /* NO RMID                       */
         MVC   IOPRMID(7,IOPPTR),@CC01416                          0348
*   IOPFMID=BLANK7;                 /* NO FMID                       */
         MVC   IOPFMID(7,IOPPTR),@CC01416                          0349
*   IOPMCLNG=IOPMCASI;              /* ASSEMBLER MACRO               */
         MVI   IOPMCLNG(IOPPTR),X'00'                              0350
*   IOPMCSYS=BLANK8;                /*                               */
         MVC   IOPMCSYS(8,IOPPTR),BLANK8                           0351
*   IOPMCDLB=BLANK8;                /*                               */
         MVC   IOPMCDLB(8,IOPPTR),BLANK8                           0352
*   IOPMACND(1)=IOPEOLST;           /* END OF MACRO ENTRY    @ZD00004*/
         MVI   IOPMACND(IOPPTR),X'FF'                              0353
*   RETURN;                         /* RETURN TO SCAN                */
*                                                                  0354
         B     @EL00003                                            0354
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN EXIT FOR SOURCE TYPE UCL UPDATE                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0355
*RSRC00:                            /* SOURCE DSCAN EXIT     @ZA17712*/
*   ENTRY;                          /*                               */
RSRC00   STM   @14,@12,@SA00003                                    0355
*   SRC=ON;                         /* SET SOURCE TYPE BIT   @Z40SP00*/
         OI    SRC,B'00000010'                                     0356
*   IOPTYPE=IOPSRC;                 /* IOP AND SET TYPE      @Z40SP00*/
         MVI   IOPTYPE(IOPPTR),X'08'                               0357
*   IOPNTLVL=IOPSRCLC;              /* CURRENT LEVEL                 */
         MVI   IOPNTLVL(IOPPTR),X'03'                              0358
*   IOPRMID=BLANK7;                 /* NO RMID                       */
         MVC   IOPRMID(7,IOPPTR),@CC01416                          0359
*   IOPFMID=BLANK7;                 /* NO FMID                       */
         MVC   IOPFMID(7,IOPPTR),@CC01416                          0360
*   IOPMCLNG=IOPMCASI;              /* ASSEMBLER MACRO               */
         MVI   IOPMCLNG(IOPPTR),X'00'                              0361
*   IOPSRSYS=BLANK8;                /*                               */
         MVC   IOPSRSYS(8,IOPPTR),BLANK8                           0362
*   IOPSRDLB=BLANK8;                /*                               */
         MVC   IOPSRDLB(8,IOPPTR),BLANK8                           0363
*   IOPSRCND(1)=IOPEOLST;           /* END OF SOURCE ENTRY   @ZD00004*/
         MVI   IOPSRCND(IOPPTR),X'FF'                              0364
*   RETURN;                         /* RETURN TO SCAN                */
*                                                                  0365
         B     @EL00003                                            0365
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN EXIT FOR DLIB TYPE UCL UPDATE                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0366
*RDLB00:                            /* DLIB TYPE SCAN EXIT   @ZA17712*/
*   ENTRY;                          /*                               */
RDLB00   STM   @14,@12,@SA00003                                    0366
*   DLIB=ON;                        /* SET DLIB SWITCH IN UCL TABLE  */
         OI    DLIB,B'00001000'                                    0367
*   IF UCLACDS=ON                   /* ASSEM INVALID FR ACDS         */
*     THEN                          /* YES                   @Z40SP00*/
         L     @06,@PC00001                                        0368
         TM    UCLACDS(@06),B'01000000'                            0368
         BNO   @RF00368                                            0368
*     DO;                           /*                               */
*       INVLOP=ON;                  /* INVALID OPERATION             */
         OI    INVLOP,B'00000100'                                  0370
*       SCPRETRN=SCPNDSCN;          /* SYNTAX ERR                    */
         L     @06,SCPPTR                                          0371
         MVI   SCPRETRN(@06),X'04'                                 0371
*       RETURN;                     /*                               */
         B     @EL00003                                            0372
*     END;                          /*                               */
*   IOPTYPE=IOPDLB;                 /* INDICATE DLIB TYPE    @ZD00008*/
@RF00368 MVI   IOPTYPE(IOPPTR),X'06'                               0374
*   IOPNTLVL=IOPDLBLC;              /*                               */
         MVI   IOPNTLVL(IOPPTR),X'02'                              0375
*   IOPDLBND(1)=IOPEOLST;           /* SET END OF DLIB ENTRY @ZD00004*/
         MVI   IOPDLBND(IOPPTR),X'FF'                              0376
*   RETURN;                         /* RETURN TO SCAN                */
*                                                                  0377
         B     @EL00003                                            0377
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN EXIT FOR ASSEM TO CHECK THAT REQUEST WAS DELETE          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0378
*RASM00:                            /*                       @Z40SP00*/
*   ENTRY;                          /*                               */
RASM00   STM   @14,@12,@SA00003                                    0378
*   ASSEM=ON;                       /* SET TYPE              @Z40SP00*/
         OI    ASSEM,B'00000001'                                   0379
*   IF UCLACDS=ON                   /* ASSEM INVALID FR ACDS         */
*       ×DEL=OFF                    /* ALL BUT DEL INVALID   @Z40SP00*/
*     THEN                          /* YES                   @Z40SP00*/
         L     @06,@PC00001                                        0380
         TM    UCLACDS(@06),B'01000000'                            0380
         BO    @RT00380                                            0380
         TM    DEL,B'01000000'                                     0380
         BNZ   @RF00380                                            0380
@RT00380 DS    0H                                                  0381
*     DO;                           /*                               */
*       INVLOP=ON;                  /* INVALID OPERATION             */
         OI    INVLOP,B'00000100'                                  0382
*       SCPRETRN=SCPNDSCN;          /* STOP SCAN                     */
         L     @06,SCPPTR                                          0383
         MVI   SCPRETRN(@06),X'04'                                 0383
*       RETURN;                     /*                               */
         B     @EL00003                                            0384
*     END;                          /*                               */
*   IOPTYPE=IOPASM;                 /* SET TYPE              @Z40SP00*/
@RF00380 MVI   IOPTYPE(IOPPTR),X'01'                               0386
*   IOPNTLVL=IOPASMLC;              /*                               */
         MVI   IOPNTLVL(IOPPTR),X'02'                              0387
*   RETURN;                         /* RETURN TO SCAN                */
*                                                                  0388
         B     @EL00003                                            0388
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN EXIT FOR SYSTEM TYPE UCL UPDATE                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0389
*RSYS00:                            /* SYSTEM TYPE SCAN EXIT @Z63SP00*/
*   ENTRY;                          /*                               */
RSYS00   STM   @14,@12,@SA00003                                    0389
*   SYS=ON;                         /* SET SYS SWITCH IN UCL TABLE   */
         OI    SYS,B'00000100'                                     0390
*   IOPTYPE=IOPSYS;                 /* INDICATE SYSTEM TYPE  @Z63SP00*/
         MVI   IOPTYPE(IOPPTR),X'07'                               0391
*   IOPNTLVL=IOPSYSLC;              /*                               */
         MVI   IOPNTLVL(IOPPTR),X'02'                              0392
*   IOPSCNVL=IOPSCNVC;              /*                               */
         MVI   IOPSCNVL(IOPPTR),X'02'                              0393
*   IOPSREL=BLANK4;                 /*                               */
         MVC   IOPSREL(4,IOPPTR),@CC01418                          0394
*   IOPNUCID=BLANK;                 /*                               */
         MVI   IOPNUCID(IOPPTR),C' '                               0395
*   IOPSYSID=BLANK8;                /*                               */
         MVC   IOPSYSID(8,IOPPTR),BLANK8                           0396
*   IOPSYSND(1)=IOPEOLST;           /*                               */
         MVI   IOPSYSND(IOPPTR),X'FF'                              0397
*   IF SCPNORT=OFF                  /* IF ROUTS TO BE CALLED         */
*     THEN                          /*                               */
         L     @06,SCPPTR                                          0398
         TM    SCPNORT(@06),B'00000100'                            0398
         BZ    @RT00398                                            0398
*     GO TO RXXXLOC;                /* LOCAT ENTRY                   */
*   RETURN;                         /* RETURN TO SCAN IF NO ROUT CALL*/
         B     @EL00003                                            0400
*                                                                  0401
*   /*****************************************************************/
*   /*                                                               */
*   /* PERFORM A LOCATE ON THE CDS ENTRY NOW THAT WE KNOW THE FULL   */
*   /* NAME. IF THE OPERATION IS ADD, THE LOCATE MUST FAIL OR THERE  */
*   /* IS AN ERROR. FOR ALL OTHER OPERATIONS THE LOCATE MUST FIND THE*/
*   /* ENTRY OR THERE IS AN ERROR. THE LOCATE OPERATION ALSO READS IN*/
*   /* THE EXTENDED DIRECTORY WHICH WILL BE USED FOR THE UPDATE      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0401
*RXXXNAM:                                                          0401
*   ENTRY;                          /*                               */
RXXXNAM  STM   @14,@12,@SA00003                                    0401
*   IOPNAME=SCPSTRNG(1:SCPPMLN);    /*                               */
         MVI   IOPNAME+1(IOPPTR),C' '                              0402
         MVC   IOPNAME+2(6,IOPPTR),IOPNAME+1(IOPPTR)               0402
         L     @06,SCPPTR                                          0402
         LH    @15,SCPPMLN(,@06)                                   0402
         BCTR  @15,0                                               0402
         L     @06,SCPCHAR(,@06)                                   0402
         EX    @15,@SM02279                                        0402
*RXXXLOC:                                                          0403
*   IOPDSID=UC1DSID;                /* SET DSID                      */
RXXXLOC  MVC   IOPDSID(1,IOPPTR),UC1DSID                           0403
*   IOPFUNCT=IOPLOC;                /* PREPARE FOR LOCATE OPERATION  */
         MVI   IOPFUNCT(IOPPTR),X'03'                              0404
*   CALL HMASMIO(HMASMIOP);         /* PERFORM THE LOCATE    @Z63SP00*/
*                                                                  0405
         ST    IOPPTR,@AL00001                                     0405
         L     @15,@CV01409                                        0405
         LA    @01,@AL00001                                        0405
         BALR  @14,@15                                             0405
*   /*****************************************************************/
*   /*                                                               */
*   /* THE LOCATE WAS COMPLETED WITHOUT AN I/O ERROR - NOW CHECK FOR */
*   /* THE CORRECT COMBINATION OF OPERATION (ADD/REP/DEL) AND LOCATE */
*   /* RETURN CODE (ENTRY PRESENT OR NOT PRESENT)            @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0406
*   IF(ADD=ON×REP=ON)               /* ADD/REP NEW ENTRY             */
*       &IOPRETRN=IOPNTFND          /* AND NTRY NOT FOUND            */
*     THEN                                                         0406
         TM    ADD,B'10100000'                                     0406
         BZ    @RF00406                                            0406
         CLI   IOPRETRN(IOPPTR),4                                  0406
         BNE   @RF00406                                            0406
*     TOTAL=ON;                     /* YES INDICATE THIS IN TABLE    */
         OI    TOTAL,B'00010000'                                   0407
*                                                                  0408
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK AT THIS POINT FOR TOTAL ADD OF LMOD ENTRIES..   @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0408
*   IF LMOD=ON                      /* CANNOT ADD LMOD CDS ENTRIES   */
*       &IOPRETRN<=IOPNTFND         /* NO SERIOS ERR ON LOCATE       */
*     THEN                          /*                               */
@RF00406 TM    LMOD,B'00100000'                                    0408
         BNO   @RF00408                                            0408
         CLI   IOPRETRN(IOPPTR),4                                  0408
         BH    @RF00408                                            0408
*     IF TOTAL=ON                   /*                               */
*       THEN                        /*                               */
         TM    TOTAL,B'00010000'                                   0409
         BNO   @RF00409                                            0409
*       DO;                                                        0410
*         INVLOP=ON;                /* SET SW                        */
         OI    INVLOP,B'00000100'                                  0411
*         SCPNORT=ON;               /* DONT CALL ROUTS               */
         L     @06,SCPPTR                                          0412
         OI    SCPNORT(@06),B'00000100'                            0412
*       END;                                                       0413
*     ELSE                          /* IF LMOD FOUND                 */
*       ;                           /*                               */
@RF00409 DS    0H                                                  0415
*   ELSE                            /*                               */
*     IF DEL=ON                     /* IF DEL                        */
*         &IOPRETRN=IOPNTFND        /* AND NOT FOUND         @YA07506*/
*       THEN                        /* THE CHECK IS MADE FOR THE   0415
*                                      ERROR CONDITION       @Z63SP00*/
         B     @RC00408                                            0415
@RF00408 TM    DEL,B'01000000'                                     0415
         BNO   @RF00415                                            0415
         CLI   IOPRETRN(IOPPTR),4                                  0415
         BNE   @RF00415                                            0415
*       DO;                         /* WRONG COMBINATION WAS FOUND   */
*         DELERR=ON;                /* SET SW                        */
         OI    DELERR,B'00000010'                                  0417
*         SCPNORT=ON;               /* DONT CALL ROUTS               */
         L     @06,SCPPTR                                          0418
         OI    SCPNORT(@06),B'00000100'                            0418
*       END;                                                       0419
*     ELSE                          /*                               */
*       IF REP=ON                   /*                               */
*           &IOPRETRN=IOPNTFND      /*                               */
*         THEN                      /*                               */
         B     @RC00415                                            0420
@RF00415 TM    REP,B'10000000'                                     0420
         BNO   @RF00420                                            0420
         CLI   IOPRETRN(IOPPTR),4                                  0420
         BNE   @RF00420                                            0420
*         CALL UCL277I;             /*                               */
         BAL   @14,UCL277I                                         0421
*       ELSE                        /*                               */
*         IF IOPRETRN>IOPNTFND      /* IF SERIOU ERROR IN LOX        */
*           THEN                    /* YES - ERR             @YA05690*/
         B     @RC00420                                            0422
@RF00420 CLI   IOPRETRN(IOPPTR),4                                  0422
         BNH   @RF00422                                            0422
*           DO;                     /*                       @YA07506*/
*             SCPRET=MAX(SCPRET,IOPRETRN);/*                         */
         L     @06,SCPPTR                                          0424
         SLR   @15,@15                                             0424
         IC    @15,SCPRET(,@06)                                    0424
         SLR   @14,@14                                             0424
         IC    @14,IOPRETRN(,IOPPTR)                               0424
         CR    @15,@14                                             0424
         BNL   *+6
         LR    @15,@14                                             0424
         STC   @15,SCPRET(,@06)                                    0424
*             IF IOPRETRN=IOPIOERR  /* CHECK FOR AN I/O ERROR ON THE
*                                      LOCATE OPERATION      @Z40SP00*/
*               THEN                /* YES - THERE WAS AN ERROR      */
         CLI   IOPRETRN(IOPPTR),16                                 0425
         BNE   @RF00425                                            0425
*               CALL UCL256I;       /* ISSUE THE MESSAGE             */
         BAL   @14,UCL256I                                         0426
*           END;                    /*                               */
*   RETURN;                         /* RETURN TO HMASMSCN            */
         B     @EL00003                                            0428
*                                                                  0429
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS ENTERED WHEN A PERIOD IS FOUND IMMEDIATELY    */
*   /* AFTER THE DEL AND NAME OF THE UCL STATEMENT. SET A SWITCH TO  */
*   /* INDICATE DELETE ONLY OPERATION AFTER RETURN FROM SCAN         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0429
*RXXXTD:                                                           0429
*   ENTRY;                          /*                               */
RXXXTD   STM   @14,@12,@SA00003                                    0429
*   IF DEL=ON&UCLFLUSH=OFF          /* DEL VERB AND NOT TERMINATE? 0430
*                                                            @YA07506*/
*     THEN                                                         0430
         TM    DEL,B'01000000'                                     0430
         BNO   @RF00430                                            0430
         L     @06,@PC00001                                        0430
         TM    UCLFLUSH(@06),B'00000010'                           0430
         BNZ   @RF00430                                            0430
*     TOTALDEL=ON;                  /* INDICATE TOTAL DELETE @Z40SP00*/
         OI    TOTALDEL,B'00001000'                                0431
*   RETURN;                         /* RETURN TO HMSMSCN             */
         B     @EL00003                                            0432
*   END RXXX00;                     /*                               */
         B     @EL00003                                            0433
         EJECT
*                                                                  0434
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN EXITS FOR SYSMOD ENTRY KEYWORDS AND OPTIONS      @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0434
*RSMDXXX:                           /*                               */
*   PROCEDURE;                      /*                               */
*                                                                  0434
RSMDXXX  STM   @14,@12,@SA00004                                    0434
*   /*****************************************************************/
*   /*                                                               */
*   /* PTF APPLIED STATUS SCAN EXIT                          @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0435
*RSMDAPP:                                                          0435
*   ENTRY;                          /*                               */
         B     @EC00435                                            0435
RSMDAPP  STM   @14,@12,@SA00004                                    0435
@EC00435 DS    0H                                                  0436
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       0436
         MVC   MSGPARTS+1(131),MSGPARTS                            0436
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @06,SCPPTR                                          0437
         LH    @15,SCPPMLN(,@06)                                   0437
         BCTR  @15,0                                               0437
         L     @06,SCPCHAR(,@06)                                   0437
         EX    @15,@SM02281                                        0437
*   IF DEL=ON                       /* IF OPTION TO BE DEL           */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     0438
         BNO   @RF00438                                            0438
*     DO;                           /*                               */
*       IF IOPAPP=ON                /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPAPP(IOPPTR),B'10000000'                          0440
         BNO   @RF00440                                            0440
*         IOPAPP=OFF;               /* DELETE IT                     */
         NI    IOPAPP(IOPPTR),B'01111111'                          0441
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC00440                                            0442
@RF00440 BAL   @14,UCL357I                                         0442
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC00438                                            0444
@RF00438 TM    ADD,B'00100000'                                     0444
         BNO   @RF00444                                            0444
*       DO;                         /*                               */
*         IF IOPAPP=OFF             /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPAPP(IOPPTR),B'10000000'                          0446
         BNZ   @RF00446                                            0446
*           IOPAPP=ON;              /* ADD IT                        */
         OI    IOPAPP(IOPPTR),B'10000000'                          0447
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC00446                                            0448
@RF00446 BAL   @14,UCL356I                                         0448
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPAPP=ON;                  /* ALWAYS ADD OPTION             */
         B     @RC00444                                            0450
@RF00444 OI    IOPAPP(IOPPTR),B'10000000'                          0450
*   RETURN;                         /* RETURN TO SCAN                */
@EL00004 DS    0H                                                  0451
@EF00004 DS    0H                                                  0451
@ER00004 LM    @14,@12,@SA00004                                    0451
         BR    @14                                                 0451
*                                                                  0452
*   /*****************************************************************/
*   /*                                                               */
*   /* PTF ACCEPTED STATUS SCAN EXIT                         @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0452
*RSMDACC:                                                          0452
*   ENTRY;                          /*                               */
RSMDACC  STM   @14,@12,@SA00004                                    0452
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       0453
         MVC   MSGPARTS+1(131),MSGPARTS                            0453
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @06,SCPPTR                                          0454
         LH    @15,SCPPMLN(,@06)                                   0454
         BCTR  @15,0                                               0454
         L     @06,SCPCHAR(,@06)                                   0454
         EX    @15,@SM02281                                        0454
*   IF DEL=ON                       /* IF OPTION TO BE DEL           */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     0455
         BNO   @RF00455                                            0455
*     DO;                           /*                               */
*       IF IOPACC=ON                /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPACC(IOPPTR),B'00100000'                          0457
         BNO   @RF00457                                            0457
*         IOPACC=OFF;               /* DELETE IT                     */
         NI    IOPACC(IOPPTR),B'11011111'                          0458
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC00457                                            0459
@RF00457 BAL   @14,UCL357I                                         0459
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC00455                                            0461
@RF00455 TM    ADD,B'00100000'                                     0461
         BNO   @RF00461                                            0461
*       DO;                         /*                               */
*         IF IOPACC=OFF             /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPACC(IOPPTR),B'00100000'                          0463
         BNZ   @RF00463                                            0463
*           IOPACC=ON;              /* ADD IT                        */
         OI    IOPACC(IOPPTR),B'00100000'                          0464
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC00463                                            0465
@RF00463 BAL   @14,UCL356I                                         0465
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPACC=ON;                  /* ALWAYS ADD OPTION             */
         B     @RC00461                                            0467
@RF00461 OI    IOPACC(IOPPTR),B'00100000'                          0467
*   RETURN;                         /* RETURN TO SCAN                */
         B     @EL00004                                            0468
*                                                                  0469
*   /*****************************************************************/
*   /*                                                               */
*   /* PTF FORCED STATUS SCAN EXIT                           @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0469
*RSMDBYP:                                                          0469
*   ENTRY;                          /*                               */
RSMDBYP  STM   @14,@12,@SA00004                                    0469
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       0470
         MVC   MSGPARTS+1(131),MSGPARTS                            0470
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @06,SCPPTR                                          0471
         LH    @15,SCPPMLN(,@06)                                   0471
         BCTR  @15,0                                               0471
         L     @06,SCPCHAR(,@06)                                   0471
         EX    @15,@SM02281                                        0471
*   IF DEL=ON                       /* IF OPTION TO BE DEL           */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     0472
         BNO   @RF00472                                            0472
*     DO;                           /*                               */
*       IF IOPBYP=ON                /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPBYP(IOPPTR),B'00000010'                          0474
         BNO   @RF00474                                            0474
*         IOPBYP=OFF;               /* DELETE IT                     */
         NI    IOPBYP(IOPPTR),B'11111101'                          0475
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC00474                                            0476
@RF00474 BAL   @14,UCL357I                                         0476
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC00472                                            0478
@RF00472 TM    ADD,B'00100000'                                     0478
         BNO   @RF00478                                            0478
*       DO;                         /*                               */
*         IF IOPBYP=OFF             /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPBYP(IOPPTR),B'00000010'                          0480
         BNZ   @RF00480                                            0480
*           IOPBYP=ON;              /* ADD IT                        */
         OI    IOPBYP(IOPPTR),B'00000010'                          0481
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC00480                                            0482
@RF00480 BAL   @14,UCL356I                                         0482
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPBYP=ON;                  /* ALWAYS ADD OPTION             */
         B     @RC00478                                            0484
@RF00478 OI    IOPBYP(IOPPTR),B'00000010'                          0484
*   RETURN;                         /* RETURN TO SCAN                */
         B     @EL00004                                            0485
*                                                                  0486
*   /*****************************************************************/
*   /*                                                               */
*   /* PTF COPIED FROM ACDS TO CDS AT SYSTEM REGEN TIME SCAN EXIT    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0486
*RSMDRGN:                           /* PTF REGEN SCAN EXIT   @VS05296*/
*   ENTRY;                          /*                               */
RSMDRGN  STM   @14,@12,@SA00004                                    0486
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       0487
         MVC   MSGPARTS+1(131),MSGPARTS                            0487
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @06,SCPPTR                                          0488
         LH    @15,SCPPMLN(,@06)                                   0488
         BCTR  @15,0                                               0488
         L     @06,SCPCHAR(,@06)                                   0488
         EX    @15,@SM02281                                        0488
*   IF DEL=ON                       /* IF OPTION TO BE DEL           */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     0489
         BNO   @RF00489                                            0489
*     DO;                           /*                               */
*       IF IOPREGEN=ON              /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPREGEN(IOPPTR),B'00000001'                        0491
         BNO   @RF00491                                            0491
*         IOPREGEN=OFF;             /* DELETE IT                     */
         NI    IOPREGEN(IOPPTR),B'11111110'                        0492
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC00491                                            0493
@RF00491 BAL   @14,UCL357I                                         0493
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC00489                                            0495
@RF00489 TM    ADD,B'00100000'                                     0495
         BNO   @RF00495                                            0495
*       DO;                         /*                               */
*         IF IOPREGEN=OFF           /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPREGEN(IOPPTR),B'00000001'                        0497
         BNZ   @RF00497                                            0497
*           IOPREGEN=ON;            /* ADD IT                        */
         OI    IOPREGEN(IOPPTR),B'00000001'                        0498
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC00497                                            0499
@RF00497 BAL   @14,UCL356I                                         0499
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPREGEN=ON;                /* ADD IT                        */
         B     @RC00495                                            0501
@RF00495 OI    IOPREGEN(IOPPTR),B'00000001'                        0501
*   RETURN;                         /* RETURN TO SCAN                */
         B     @EL00004                                            0502
*                                                                  0503
*   /*****************************************************************/
*   /*                                                               */
*   /* PTF IN ERROR SCAN EXIT                                @Z40SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0503
*RSMDERR:                           /* PTF IN ERROR EXIT     @Z40SP00*/
*   ENTRY;                          /*                               */
RSMDERR  STM   @14,@12,@SA00004                                    0503
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       0504
         MVC   MSGPARTS+1(131),MSGPARTS                            0504
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @06,SCPPTR                                          0505
         LH    @15,SCPPMLN(,@06)                                   0505
         BCTR  @15,0                                               0505
         L     @06,SCPCHAR(,@06)                                   0505
         EX    @15,@SM02281                                        0505
*   IF DEL=ON                       /* IF OPTION TO BE DEL           */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     0506
         BNO   @RF00506                                            0506
*     DO;                           /*                               */
*       IF IOPERROR=ON              /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPERROR(IOPPTR),B'00010000'                        0508
         BNO   @RF00508                                            0508
*         IOPERROR=OFF;             /* DELETE IT                     */
         NI    IOPERROR(IOPPTR),B'11101111'                        0509
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC00508                                            0510
@RF00508 BAL   @14,UCL357I                                         0510
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC00506                                            0512
@RF00506 TM    ADD,B'00100000'                                     0512
         BNO   @RF00512                                            0512
*       DO;                         /*                               */
*         IF IOPERROR=OFF           /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPERROR(IOPPTR),B'00010000'                        0514
         BNZ   @RF00514                                            0514
*           IOPERROR=ON;            /* ADD IT                        */
         OI    IOPERROR(IOPPTR),B'00010000'                        0515
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC00514                                            0516
@RF00514 BAL   @14,UCL356I                                         0516
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPERROR=ON;                /* ALWAYS ADD OPTION             */
         B     @RC00512                                            0518
@RF00512 OI    IOPERROR(IOPPTR),B'00010000'                        0518
*   RETURN;                         /* RETURN TO SCAN                */
         B     @EL00004                                            0519
*                                                                  0520
*   /*****************************************************************/
*   /*                                                               */
*   /* PTF RESTORED STATUS SCAN EXIT                         @Z40SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0520
*RSMDRES:                           /*                       @Z40SP00*/
*   ENTRY;                          /*                               */
RSMDRES  STM   @14,@12,@SA00004                                    0520
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       0521
         MVC   MSGPARTS+1(131),MSGPARTS                            0521
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @06,SCPPTR                                          0522
         LH    @15,SCPPMLN(,@06)                                   0522
         BCTR  @15,0                                               0522
         L     @06,SCPCHAR(,@06)                                   0522
         EX    @15,@SM02281                                        0522
*   IF UCLCDS=ON                    /* RESTORE ONLY FOR CDS          */
*     THEN                          /*                               */
         L     @06,@PC00001                                        0523
         TM    UCLCDS(@06),B'10000000'                             0523
         BNO   @RF00523                                            0523
*     DO;                           /*                               */
*       IF DEL=ON                   /* IF OPTION TO BE DEL           */
*         THEN                      /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     0525
         BNO   @RF00525                                            0525
*         DO;                       /*                               */
*           IF IOPRES=ON            /* IF OPTION PRESENT             */
*             THEN                  /*                               */
         TM    IOPRES(IOPPTR),B'01000000'                          0527
         BNO   @RF00527                                            0527
*             IOPRES=OFF;           /* DELETE IT                     */
         NI    IOPRES(IOPPTR),B'10111111'                          0528
*           ELSE                    /*                               */
*             CALL UCL357I;         /* OPTION NOT PRESENT            */
         B     @RC00527                                            0529
@RF00527 BAL   @14,UCL357I                                         0529
*         END;                      /* END DELETE REQUEST            */
*       ELSE                        /* IF NOT DELETE                 */
*         IF ADD=ON                 /* IF ADD REQUEST                */
*           THEN                    /* CHECK TO SEE IF THERE         */
         B     @RC00525                                            0531
@RF00525 TM    ADD,B'00100000'                                     0531
         BNO   @RF00531                                            0531
*           DO;                     /*                               */
*             IF IOPRES=OFF         /* IF NOT PRESENT                */
*               THEN                /*                               */
         TM    IOPRES(IOPPTR),B'01000000'                          0533
         BNZ   @RF00533                                            0533
*               IOPRES=ON;          /* ADD IT                        */
         OI    IOPRES(IOPPTR),B'01000000'                          0534
*             ELSE                  /*                               */
*               CALL UCL356I;       /* OPTION ALREADY THERE          */
         B     @RC00533                                            0535
@RF00533 BAL   @14,UCL356I                                         0535
*           END;                    /* END ADD                       */
*         ELSE                      /* MUST BE REPLACE SO            */
*           IOPRES=ON;              /* ADD IT                        */
         B     @RC00531                                            0537
@RF00531 OI    IOPRES(IOPPTR),B'01000000'                          0537
*     END;                          /* END CDS DATASET               */
*   ELSE                            /* SYNTAX ERR IF ACDS            */
*     SCPRETRN=SCPSTOP;             /*                               */
         B     @RC00523                                            0539
@RF00523 L     @06,SCPPTR                                          0539
         MVI   SCPRETRN(@06),X'08'                                 0539
*   RETURN;                         /* RETURN TO SCAN                */
         B     @EL00004                                            0540
*                                                                  0541
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT TO HANDLE FUNCTION KEYWORD                       @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0541
*RSMDFNC:                           /*                               */
*   ENTRY;                          /*                               */
RSMDFNC  STM   @14,@12,@SA00004                                    0541
*   STYPE=IOPPFUNC;                 /* SET SYSMOD TYPE               */
         MVI   STYPE,X'04'                                         0542
*   GO TO RTYPUPD;                  /* GO UPDATE IT                  */
*                                                                  0543
         B     RTYPUPD                                             0543
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT TO HANDLE PTF KEYWORD                            @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0544
*RSMDPTF:                           /*                               */
*   ENTRY;                          /*                               */
RSMDPTF  STM   @14,@12,@SA00004                                    0544
*   STYPE=IOPPPTF;                  /* SET SYSMOD TYPE               */
         MVI   STYPE,X'03'                                         0545
*   GO TO RTYPUPD;                  /* GO UPDATE IT                  */
*                                                                  0546
         B     RTYPUPD                                             0546
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT TO HANDLE APAR KEYWORD                           @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0547
*RSMDAPR:                           /*                               */
*   ENTRY;                          /*                               */
RSMDAPR  STM   @14,@12,@SA00004                                    0547
*   STYPE=IOPPAPAR;                 /* SET SYSMOD TYPE               */
         MVI   STYPE,X'02'                                         0548
*   GO TO RTYPUPD;                  /* GO UPDATE IT                  */
*                                                                  0549
         B     RTYPUPD                                             0549
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT TO HANLDE USERMOD KEYWORD                        @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0550
*RSMDUSR:                           /*                               */
*   ENTRY;                          /*                               */
RSMDUSR  STM   @14,@12,@SA00004                                    0550
*   STYPE=IOPPUSER;                 /* SET SYSMOD TYPE               */
         MVI   STYPE,X'01'                                         0551
*   GO TO RTYPUPD;                  /* GO UPDATE IT                  */
*                                                                  0552
         B     RTYPUPD                                             0552
*   /*****************************************************************/
*   /*                                                               */
*   /* COMMON SYSMOD TYPE UPDATE CODE                        @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0553
*RTYPUPD:                           /*                               */
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
RTYPUPD  MVI   MSGPARTS,C' '                                       0553
         MVC   MSGPARTS+1(131),MSGPARTS                            0553
*   MSGPART1(1:LENGTH(TXTSMDTP))=TXTSMDTP;/* SMD-TYP FOR MSG         */
         MVC   MSGPART1(8),@CC01518                                0554
*   MSGPART2(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SYSMOD TYPE           */
         L     @06,SCPPTR                                          0555
         LH    @15,SCPPMLN(,@06)                                   0555
         BCTR  @15,0                                               0555
         L     @06,SCPCHAR(,@06)                                   0555
         EX    @15,@SM02289                                        0555
*   IF REP=ON                       /*                               */
*     THEN                          /*                               */
         TM    REP,B'10000000'                                     0556
         BNO   @RF00556                                            0556
*     DO;                           /*                               */
*       IF IOPPTYPE=ZERO&TOTAL=OFF  /*                               */
*         THEN                      /*                               */
         CLI   IOPPTYPE(IOPPTR),0                                  0558
         BNE   @RF00558                                            0558
         TM    TOTAL,B'00010000'                                   0558
         BNZ   @RF00558                                            0558
*         CALL UCL358I;             /* ADD ASSUMED                   */
         BAL   @14,UCL358I                                         0559
*       IOPPTYPE=STYPE;             /* MOVE TYPE OVER                */
@RF00558 MVC   IOPPTYPE(1,IOPPTR),STYPE                            0560
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /*                               */
         B     @RC00556                                            0562
@RF00556 TM    ADD,B'00100000'                                     0562
         BNO   @RF00562                                            0562
*       DO;                         /*                               */
*         IF IOPPTYPE=ZERO          /* ADD ONLY IF NOTHING           */
*           THEN                    /* THERE                         */
         CLI   IOPPTYPE(IOPPTR),0                                  0564
         BNE   @RF00564                                            0564
*           IOPPTYPE=STYPE;         /* ALREADY                       */
         MVC   IOPPTYPE(1,IOPPTR),STYPE                            0565
*         ELSE                      /*                               */
*           CALL UCL356I;           /* ERROR                         */
         B     @RC00564                                            0566
@RF00564 BAL   @14,UCL356I                                         0566
*       END;                        /*                               */
*     ELSE                          /*                               */
*       DO;                         /*                               */
         B     @RC00562                                            0568
@RF00562 DS    0H                                                  0569
*         IF IOPPTYPE=STYPE         /* IF SAME TPE IN RCD            */
*           THEN                    /* THEN                          */
         CLC   IOPPTYPE(1,IOPPTR),STYPE                            0569
         BNE   @RF00569                                            0569
*           IOPPTYPE=ZERO;          /* DELETE IT                     */
         MVI   IOPPTYPE(IOPPTR),X'00'                              0570
*         ELSE                      /*                               */
*           IF IOPPTYPE=ZERO        /*                               */
*             THEN                  /*                               */
         B     @RC00569                                            0571
@RF00569 CLI   IOPPTYPE(IOPPTR),0                                  0571
         BNE   @RF00571                                            0571
*             CALL UCL357I;         /* DEL ITEM NOT PRESENT          */
         BAL   @14,UCL357I                                         0572
*           ELSE                    /*                               */
*             DO;                   /*                               */
         B     @RC00571                                            0573
@RF00571 DS    0H                                                  0574
*               IF IOPPTYPE=IOPPPTF /* SET CURRENT TYPE FOR MSG      */
*                 THEN              /*                               */
         CLI   IOPPTYPE(IOPPTR),3                                  0574
         BNE   @RF00574                                            0574
*                 MSGPART3(1:LENGTH(TXTPTF))=TXTPTF;/*               */
         MVC   MSGPART3(8),@CC01520                                0575
*               ELSE                /*                               */
*                 IF IOPPTYPE=IOPPFUNC/*                             */
*                   THEN            /*                               */
         B     @RC00574                                            0576
@RF00574 CLI   IOPPTYPE(IOPPTR),4                                  0576
         BNE   @RF00576                                            0576
*                   MSGPART3(1:LENGTH(TXTFUNC))=TXTFUNC;/*           */
         MVC   MSGPART3(8),@CC01522                                0577
*                 ELSE              /*                               */
*                   IF IOPPTYPE=IOPPAPAR/*                           */
*                     THEN          /*                               */
         B     @RC00576                                            0578
@RF00576 CLI   IOPPTYPE(IOPPTR),2                                  0578
         BNE   @RF00578                                            0578
*                     MSGPART3(1:LENGTH(TXTAPAR))=TXTAPAR;/*         */
         MVC   MSGPART3(8),@CC01524                                0579
*                   ELSE            /*                               */
*                     IF IOPPTYPE=IOPPUSER/*                         */
*                       THEN        /*                               */
         B     @RC00578                                            0580
@RF00578 CLI   IOPPTYPE(IOPPTR),1                                  0580
         BNE   @RF00580                                            0580
*                       MSGPART3(1:LENGTH(TXTUSER))=TXTUSER;/*       */
         MVC   MSGPART3(8),@CC01526                                0581
*               CALL UCL261I;       /* DEL NOT MATCH                 */
@RF00580 DS    0H                                                  0582
@RC00578 DS    0H                                                  0582
@RC00576 DS    0H                                                  0582
@RC00574 BAL   @14,UCL261I                                         0582
*             END;                  /*                               */
*       END;                        /*                               */
*   RETURN;                         /* RETURN TO HMASMSCN            */
         B     @EL00004                                            0585
*                                                                  0586
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN ROUTINE TO PROCESS THE DATE OPTIONS              @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0586
*RSMDRECD:                          /*                               */
*   ENTRY;                          /*                               */
RSMDRECD STM   @14,@12,@SA00004                                    0586
*   DATEPTR=ADDR(IOPRECD);          /* PTR TO PROPER DATE            */
         LA    @06,IOPRECD(,IOPPTR)                                0587
         ST    @06,DATEPTR                                         0587
*   GO TO RSMDDT;                   /*                               */
         B     RSMDDT                                              0588
*RSMDAPPD:                          /*                               */
*   ENTRY;                          /*                               */
RSMDAPPD STM   @14,@12,@SA00004                                    0589
*   DATEPTR=ADDR(IOPAPPD);          /* PTR TO PROPER DATE            */
         LA    @06,IOPAPPD(,IOPPTR)                                0590
         ST    @06,DATEPTR                                         0590
*   GO TO RSMDDT;                   /*                               */
         B     RSMDDT                                              0591
*RSMDRESD:                          /*                               */
*   ENTRY;                          /*                               */
RSMDRESD STM   @14,@12,@SA00004                                    0592
*   DATEPTR=ADDR(IOPRSTD);          /* PTR TO PROPER DATE            */
         LA    @06,IOPRSTD(,IOPPTR)                                0593
         ST    @06,DATEPTR                                         0593
*   GO TO RSMDDT;                   /*                               */
         B     RSMDDT                                              0594
*RSMDACCD:                          /*                               */
*   ENTRY;                          /*                               */
RSMDACCD STM   @14,@12,@SA00004                                    0595
*   DATEPTR=ADDR(IOPACCD);          /* PTR TO PROPER DATE            */
         LA    @06,IOPACCD(,IOPPTR)                                0596
         ST    @06,DATEPTR                                         0596
*   GO TO RSMDDT;                   /*                               */
         B     RSMDDT                                              0597
*RSMDDATE:                          /*                               */
*   ENTRY;                          /*                               */
RSMDDATE STM   @14,@12,@SA00004                                    0598
*   DATEPTR=ADDR(SAVDATE);          /* TEMP AREA FOR DATE            */
         LA    @06,SAVDATE                                         0599
         ST    @06,DATEPTR                                         0599
*   SAVDATE=''B;                    /* INIT AREA                     */
         XC    SAVDATE(6),SAVDATE                                  0600
*   DATEENT=ON;                     /* REMEMBER DATE ENTERED         */
         OI    DATEENT,B'00100000'                                 0601
*   GO TO RSMDDT;                   /*                               */
         B     RSMDDT                                              0602
*RSMDDT:                            /*                               */
*   MSGPARTS='';                    /* INIT MSG PARM                 */
RSMDDT   MVI   MSGPARTS,C' '                                       0603
         MVC   MSGPARTS+1(131),MSGPARTS                            0603
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE KEYWORD          */
         L     @06,SCPPTR                                          0604
         LH    @15,SCPPMLN(,@06)                                   0604
         BCTR  @15,0                                               0604
         L     @06,SCPCHAR(,@06)                                   0604
         EX    @15,@SM02281                                        0604
*   RETURN;                         /*                               */
         B     @EL00004                                            0605
*RSMDDTV:                                                          0606
*   ENTRY;                          /*                               */
RSMDDTV  STM   @14,@12,@SA00004                                    0606
*   DECLARE                         /*                               */
*     1 DATEPARM BASED(DATEPTR),    /* MAPPING OF IOP                */
*       3 MIOPD CHAR(3),            /* DATE AND                      */
*       3 MIOPT CHAR(3);            /* TIME                          */
*   UNPK(CNVDATE(1:5),MIOPD(1:3));  /* UNPACK EXISTING DATE          */
         L     @06,DATEPTR                                         0608
         UNPK  CNVDATE(5),MIOPD(3,@06)                             0608
*   DAY(3)=DAY(3)×HEX0;             /*                               */
         OI    DAY+2,X'F0'                                         0609
*   MSGPART3(1:5)=CNVDATE;          /* MOVE EXISTING DATE FOR MSG    */
         MVC   MSGPART3(5),CNVDATE                                 0610
*   PACK(TEMPDATE,SCPSTRNG(1:5));   /* PACK DATE                     */
         L     @01,SCPPTR                                          0611
         L     @01,SCPCHAR(,@01)                                   0611
         PACK  TEMPDATE(3),SCPSTRNG(5,@01)                         0611
*   IF REP=ON                       /*                               */
*     THEN                          /*                               */
         TM    REP,B'10000000'                                     0612
         BNO   @RF00612                                            0612
*     DO;                           /*                               */
*       IF MIOPD=ZERO&TOTAL=OFF     /* IF NOT FIRST ADD              */
*         THEN                      /*                               */
         ICM   @15,7,MIOPD(@06)                                    0614
         BNZ   @RF00614                                            0614
         TM    TOTAL,B'00010000'                                   0614
         BNZ   @RF00614                                            0614
*         CALL UCL358I;             /*                               */
         BAL   @14,UCL358I                                         0615
*       MIOPD=TEMPDATE;             /*                               */
@RF00614 L     @06,DATEPTR                                         0616
         MVC   MIOPD(3,@06),TEMPDATE                               0616
*       MIOPT=''B;                  /*                               */
         XC    MIOPT(3,@06),MIOPT(@06)                             0617
*     END;                          /*                               */
*   ELSE                            /* IF ADD OR REP                 */
*     IF ADD=ON                     /*                               */
*       THEN                        /*                               */
         B     @RC00612                                            0619
@RF00612 TM    ADD,B'00100000'                                     0619
         BNO   @RF00619                                            0619
*       DO;                         /*                               */
*         IF MIOPD=ZERO             /* IF NO DATE THEN CAN           */
*           THEN                    /* ADD ONE                       */
         L     @06,DATEPTR                                         0621
         ICM   @15,7,MIOPD(@06)                                    0621
         BNZ   @RF00621                                            0621
*           DO;                     /*                               */
*             MIOPD=TEMPDATE;       /*                               */
         MVC   MIOPD(3,@06),TEMPDATE                               0623
*             MIOPT=''B;            /*                               */
         XC    MIOPT(3,@06),MIOPT(@06)                             0624
*           END;                    /*                               */
*         ELSE                      /* IF ONE PRESENT THEN           */
*           CALL UCL356I;           /* ERROR                         */
         B     @RC00621                                            0626
@RF00621 BAL   @14,UCL356I                                         0626
*       END;                        /*                               */
*     ELSE                          /* MUST BE DELETE                */
*       DO;                         /*                               */
         B     @RC00619                                            0628
@RF00619 DS    0H                                                  0629
*         IF TEMPDATE=MIOPD         /* IF EQUAL L                    */
*           THEN                    /*                               */
         L     @06,DATEPTR                                         0629
         CLC   TEMPDATE(3),MIOPD(@06)                              0629
         BNE   @RF00629                                            0629
*           DO;                     /*                               */
*RSMDDTD:                           /* UNCONDITIONAL DEL             */
*             ENTRY;                /*                               */
         B     @EC00631                                            0631
RSMDDTD  STM   @14,@12,@SA00004                                    0631
@EC00631 DS    0H                                                  0632
*             MIOPD=''B;            /* DELETE DATE                   */
         L     @06,DATEPTR                                         0632
         XC    MIOPD(3,@06),MIOPD(@06)                             0632
*             MIOPT=''B;            /*                               */
         XC    MIOPT(3,@06),MIOPT(@06)                             0633
*           END;                    /*                               */
*         ELSE                      /*                               */
*           IF MIOPD=ZERO           /* IF NO DATE                    */
*             THEN                  /*                               */
         B     @RC00629                                            0635
@RF00629 L     @06,DATEPTR                                         0635
         ICM   @15,7,MIOPD(@06)                                    0635
         BNZ   @RF00635                                            0635
*             CALL UCL357I;         /*                               */
         BAL   @14,UCL357I                                         0636
*           ELSE                    /*                               */
*             CALL UCL261I;         /* WRITE MSG                     */
         B     @RC00635                                            0637
@RF00635 BAL   @14,UCL261I                                         0637
*       END;                        /* END DELETE                    */
*   RETURN;                         /*                               */
         B     @EL00004                                            0639
*                                                                  0640
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN EXITS TO EXTRACT THE PTF MODULE, MACRO, AND SUPER ZAP    */
*   /* MODULE NAMES, AND PTF REQ NUMBERS. IF THE OPERATION IS AN ADD */
*   /* OR REPLACE THE NAMES ARE ADDED AT THE END OF THE USER DATA IN */
*   /* THE IOP. IF THE OPERATION IS CHANGE/ADD THE USER DATA IS FIRST*/
*   /* SCANNED TO ENSURE THAT THE NAME IS NOT PRESENT THEN THE NAME  */
*   /* IS ADDED AT THE END OF USER DATA. IF THE OPERATION IS @Z63SP00*/
*   /* CHANGE/DELETE THE USER DATA IS CHECKED TO ENSURE THAT THE NAME*/
*   /* DOES EXIST                                            @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0640
*RSMDMOD:                           /*                               */
*   ENTRY;                          /*                               */
RSMDMOD  STM   @14,@12,@SA00004                                    0640
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0641
         MVC   MSGPARTS+1(131),MSGPARTS                            0641
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0642
         LH    @15,SCPPMLN(,@06)                                   0642
         BCTR  @15,0                                               0642
         L     @06,SCPCHAR(,@06)                                   0642
         EX    @15,@SM02281                                        0642
*   VLPTYPE=IOPPMODU;               /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'01'                                       0643
*   GO TO SMDADDLP;                 /*                               */
         B     SMDADDLP                                            0644
*RSMDMCU:                           /*                               */
*   ENTRY;                          /*                               */
RSMDMCU  STM   @14,@12,@SA00004                                    0645
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0646
         MVC   MSGPARTS+1(131),MSGPARTS                            0646
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0647
         LH    @15,SCPPMLN(,@06)                                   0647
         BCTR  @15,0                                               0647
         L     @06,SCPCHAR(,@06)                                   0647
         EX    @15,@SM02281                                        0647
*   VLPTYPE=IOPPMACU;               /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'05'                                       0648
*   GO TO SMDADDLP;                 /*                               */
         B     SMDADDLP                                            0649
*RSMDMCR:                           /*                               */
*   ENTRY;                          /*                               */
RSMDMCR  STM   @14,@12,@SA00004                                    0650
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0651
         MVC   MSGPARTS+1(131),MSGPARTS                            0651
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0652
         LH    @15,SCPPMLN(,@06)                                   0652
         BCTR  @15,0                                               0652
         L     @06,SCPCHAR(,@06)                                   0652
         EX    @15,@SM02281                                        0652
*   VLPTYPE=IOPPMACR;               /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'04'                                       0653
*   GO TO SMDADDLP;                 /*                               */
         B     SMDADDLP                                            0654
*RSMDSCU:                           /*                               */
*   ENTRY;                          /*                               */
RSMDSCU  STM   @14,@12,@SA00004                                    0655
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0656
         MVC   MSGPARTS+1(131),MSGPARTS                            0656
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0657
         LH    @15,SCPPMLN(,@06)                                   0657
         BCTR  @15,0                                               0657
         L     @06,SCPCHAR(,@06)                                   0657
         EX    @15,@SM02281                                        0657
*   VLPTYPE=IOPPSRCU;               /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'07'                                       0658
*   GO TO SMDADDLP;                 /*                               */
         B     SMDADDLP                                            0659
*RSMDSCR:                           /*                               */
*   ENTRY;                          /*                               */
RSMDSCR  STM   @14,@12,@SA00004                                    0660
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0661
         MVC   MSGPARTS+1(131),MSGPARTS                            0661
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0662
         LH    @15,SCPPMLN(,@06)                                   0662
         BCTR  @15,0                                               0662
         L     @06,SCPCHAR(,@06)                                   0662
         EX    @15,@SM02281                                        0662
*   VLPTYPE=IOPPSRCR;               /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'06'                                       0663
*   GO TO SMDADDLP;                 /*                               */
         B     SMDADDLP                                            0664
*RSMDSZP:                           /*                               */
*   ENTRY;                          /*                               */
RSMDSZP  STM   @14,@12,@SA00004                                    0665
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0666
         MVC   MSGPARTS+1(131),MSGPARTS                            0666
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0667
         LH    @15,SCPPMLN(,@06)                                   0667
         BCTR  @15,0                                               0667
         L     @06,SCPCHAR(,@06)                                   0667
         EX    @15,@SM02281                                        0667
*   VLPTYPE=IOPPZAP;                /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'02'                                       0668
*   GO TO SMDADDLP;                 /*                               */
         B     SMDADDLP                                            0669
*RSMDXZP:                           /*                               */
*   ENTRY;                          /*                               */
RSMDXZP  STM   @14,@12,@SA00004                                    0670
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0671
         MVC   MSGPARTS+1(131),MSGPARTS                            0671
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0672
         LH    @15,SCPPMLN(,@06)                                   0672
         BCTR  @15,0                                               0672
         L     @06,SCPCHAR(,@06)                                   0672
         EX    @15,@SM02281                                        0672
*   VLPTYPE=IOPPXPD;                /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'03'                                       0673
*   GO TO SMDADDLP;                 /*                               */
         B     SMDADDLP                                            0674
*RSMDASM:                           /*                               */
*   ENTRY;                          /*                               */
RSMDASM  STM   @14,@12,@SA00004                                    0675
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0676
         MVC   MSGPARTS+1(131),MSGPARTS                            0676
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0677
         LH    @15,SCPPMLN(,@06)                                   0677
         BCTR  @15,0                                               0677
         L     @06,SCPCHAR(,@06)                                   0677
         EX    @15,@SM02281                                        0677
*   VLPTYPE=IOPPASM;                /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'08'                                       0678
*   GO TO SMDADDLP;                 /*                               */
         B     SMDADDLP                                            0679
*RSMDRMOD:                          /*                               */
*   ENTRY;                          /*                               */
RSMDRMOD STM   @14,@12,@SA00004                                    0680
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0681
         MVC   MSGPARTS+1(131),MSGPARTS                            0681
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0682
         LH    @15,SCPPMLN(,@06)                                   0682
         BCTR  @15,0                                               0682
         L     @06,SCPCHAR(,@06)                                   0682
         EX    @15,@SM02281                                        0682
*   VLPTYPE=IOPPRMOD;               /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'51'                                       0683
*   GO TO SMDADDLP;                 /*                               */
         B     SMDADDLP                                            0684
*RSMDRMCU:                          /*                               */
*   ENTRY;                          /*                               */
RSMDRMCU STM   @14,@12,@SA00004                                    0685
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0686
         MVC   MSGPARTS+1(131),MSGPARTS                            0686
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0687
         LH    @15,SCPPMLN(,@06)                                   0687
         BCTR  @15,0                                               0687
         L     @06,SCPCHAR(,@06)                                   0687
         EX    @15,@SM02281                                        0687
*   VLPTYPE=IOPPRMCU;               /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'55'                                       0688
*   GO TO SMDADDLP;                 /*                               */
         B     SMDADDLP                                            0689
*RSMDRMCR:                          /*                               */
*   ENTRY;                          /*                               */
RSMDRMCR STM   @14,@12,@SA00004                                    0690
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0691
         MVC   MSGPARTS+1(131),MSGPARTS                            0691
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0692
         LH    @15,SCPPMLN(,@06)                                   0692
         BCTR  @15,0                                               0692
         L     @06,SCPCHAR(,@06)                                   0692
         EX    @15,@SM02281                                        0692
*   VLPTYPE=IOPPRMCR;               /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'54'                                       0693
*   GO TO SMDADDLP;                 /*                               */
         B     SMDADDLP                                            0694
*RSMDRSCU:                          /*                               */
*   ENTRY;                          /*                               */
RSMDRSCU STM   @14,@12,@SA00004                                    0695
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0696
         MVC   MSGPARTS+1(131),MSGPARTS                            0696
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0697
         LH    @15,SCPPMLN(,@06)                                   0697
         BCTR  @15,0                                               0697
         L     @06,SCPCHAR(,@06)                                   0697
         EX    @15,@SM02281                                        0697
*   VLPTYPE=IOPPRSCU;               /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'57'                                       0698
*   GO TO SMDADDLP;                 /*                               */
         B     SMDADDLP                                            0699
*RSMDRSCR:                          /*                               */
*   ENTRY;                          /*                               */
RSMDRSCR STM   @14,@12,@SA00004                                    0700
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0701
         MVC   MSGPARTS+1(131),MSGPARTS                            0701
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0702
         LH    @15,SCPPMLN(,@06)                                   0702
         BCTR  @15,0                                               0702
         L     @06,SCPCHAR(,@06)                                   0702
         EX    @15,@SM02281                                        0702
*   VLPTYPE=IOPPRSCR;               /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'56'                                       0703
*   GO TO SMDADDLP;                 /*                               */
         B     SMDADDLP                                            0704
*RSMDRSZP:                          /*                               */
*   ENTRY;                          /*                               */
RSMDRSZP STM   @14,@12,@SA00004                                    0705
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0706
         MVC   MSGPARTS+1(131),MSGPARTS                            0706
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0707
         LH    @15,SCPPMLN(,@06)                                   0707
         BCTR  @15,0                                               0707
         L     @06,SCPCHAR(,@06)                                   0707
         EX    @15,@SM02281                                        0707
*   VLPTYPE=IOPPRZAP;               /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'52'                                       0708
*   GO TO SMDADDLP;                 /*                               */
         B     SMDADDLP                                            0709
*RSMDRXZP:                          /*                               */
*   ENTRY;                          /*                               */
RSMDRXZP STM   @14,@12,@SA00004                                    0710
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0711
         MVC   MSGPARTS+1(131),MSGPARTS                            0711
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0712
         LH    @15,SCPPMLN(,@06)                                   0712
         BCTR  @15,0                                               0712
         L     @06,SCPCHAR(,@06)                                   0712
         EX    @15,@SM02281                                        0712
*   VLPTYPE=IOPPRXPD;               /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'53'                                       0713
*   GO TO SMDADDLP;                 /*                               */
         B     SMDADDLP                                            0714
*SMDADDLP:                          /* SET UP TO POINT TO FIRST PTF
*                                      SUBENTRY FOR ADD RTN  @Z40SP00*/
*   VLPLPTR=ADDR(IOPPMODS(1));      /* SET PTR TO FIRST PTF SUB-   0715
*                                      ENTRY                 @Z40SP00*/
SMDADDLP LA    @06,IOPPMODS(,IOPPTR)                               0715
         ST    @06,VLPLPTR                                         0715
*   VLPDLEN=LENGTH(IOPPMODS(1));    /* SET LEN OF ENT        @ZA14010*/
         MVI   VLPDLEN,X'08'                                       0716
*   RETURN;                         /* RETURN TO SCAN                */
         B     @EL00004                                            0717
*                                                                  0718
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTS TO HANDLE THE VARIOUS PTF NUMBER PTF SUB-ENTRY  @ZD00006*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0718
*RSMDPRE:                           /*                               */
*   ENTRY;                          /*                               */
RSMDPRE  STM   @14,@12,@SA00004                                    0718
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0719
         MVC   MSGPARTS+1(131),MSGPARTS                            0719
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0720
         LH    @15,SCPPMLN(,@06)                                   0720
         BCTR  @15,0                                               0720
         L     @06,SCPCHAR(,@06)                                   0720
         EX    @15,@SM02281                                        0720
*   VLPTYPE=IOPPPRE;                /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'A2'                                       0721
*   GO TO SMDADD2;                  /*                               */
         B     SMDADD2                                             0722
*RSMDREQ:                           /*                               */
*   ENTRY;                          /*                               */
RSMDREQ  STM   @14,@12,@SA00004                                    0723
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0724
         MVC   MSGPARTS+1(131),MSGPARTS                            0724
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0725
         LH    @15,SCPPMLN(,@06)                                   0725
         BCTR  @15,0                                               0725
         L     @06,SCPCHAR(,@06)                                   0725
         EX    @15,@SM02281                                        0725
*   VLPTYPE=IOPPREQ;                /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'A5'                                       0726
*   GO TO SMDADD2;                  /*                               */
         B     SMDADD2                                             0727
*RSMDNPR:                           /*                               */
*   ENTRY;                          /*                               */
RSMDNPR  STM   @14,@12,@SA00004                                    0728
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0729
         MVC   MSGPARTS+1(131),MSGPARTS                            0729
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0730
         LH    @15,SCPPMLN(,@06)                                   0730
         BCTR  @15,0                                               0730
         L     @06,SCPCHAR(,@06)                                   0730
         EX    @15,@SM02281                                        0730
*   VLPTYPE=IOPPNPR;                /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'A3'                                       0731
*   GO TO SMDADD2;                  /*                               */
         B     SMDADD2                                             0732
*RSMDISUP:                          /*                               */
*   ENTRY;                          /*                               */
RSMDISUP STM   @14,@12,@SA00004                                    0733
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0734
         MVC   MSGPARTS+1(131),MSGPARTS                            0734
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0735
         LH    @15,SCPPMLN(,@06)                                   0735
         BCTR  @15,0                                               0735
         L     @06,SCPCHAR(,@06)                                   0735
         EX    @15,@SM02281                                        0735
*   VLPTYPE=IOPPSUPV;               /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'A4'                                       0736
*   GO TO SMDADD2;                  /*                               */
         B     SMDADD2                                             0737
*RSMDVERS:                          /*                               */
*   ENTRY;                          /*                               */
RSMDVERS STM   @14,@12,@SA00004                                    0738
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0739
         MVC   MSGPARTS+1(131),MSGPARTS                            0739
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0740
         LH    @15,SCPPMLN(,@06)                                   0740
         BCTR  @15,0                                               0740
         L     @06,SCPCHAR(,@06)                                   0740
         EX    @15,@SM02281                                        0740
*   VLPTYPE=IOPPVER;                /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'A9'                                       0741
*   GO TO SMDADD2;                  /*                               */
         B     SMDADD2                                             0742
*RSMDSBY:                           /*                               */
*   ENTRY;                          /*                               */
RSMDSBY  STM   @14,@12,@SA00004                                    0743
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0744
         MVC   MSGPARTS+1(131),MSGPARTS                            0744
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0745
         LH    @15,SCPPMLN(,@06)                                   0745
         BCTR  @15,0                                               0745
         L     @06,SCPCHAR(,@06)                                   0745
         EX    @15,@SM02281                                        0745
*   VLPTYPE=IOPPSBY;                /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'AA'                                       0746
*   GO TO SMDADD2;                  /*                               */
         B     SMDADD2                                             0747
*RSMDDEL:                           /*                               */
*   ENTRY;                          /*                               */
RSMDDEL  STM   @14,@12,@SA00004                                    0748
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0749
         MVC   MSGPARTS+1(131),MSGPARTS                            0749
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          0750
         LH    @15,SCPPMLN(,@06)                                   0750
         BCTR  @15,0                                               0750
         L     @06,SCPCHAR(,@06)                                   0750
         EX    @15,@SM02281                                        0750
*   VLPTYPE=IOPPDEL;                /* SET SUBENTRY TYPE CODE        */
         MVI   VLPTYPE,X'A8'                                       0751
*   GO TO SMDADD2;                  /*                               */
         B     SMDADD2                                             0752
*SMDADD2:                           /*                               */
*   VLPLPTR=ADDR(IOPPMODS(1));      /* SET START OF LIST     @ZA14010*/
SMDADD2  LA    @06,IOPPMODS(,IOPPTR)                               0753
         ST    @06,VLPLPTR                                         0753
*   VLPDLEN=LENGTH(IOPENTNM(1));    /* SET LENGTH OF ENT IN PTF FOR
*                                      COMPARE LOOP. LENGTH OF REQ 0754
*                                      PTF NUMBER IS EQUAL TO LENGTH
*                                      OF PTF NUMBER FOR OTHER TYPES
*                                      OF ENTRIES            @ZD00002*/
         MVI   VLPDLEN,X'07'                                       0754
*   RETURN;                         /*                               */
         B     @EL00004                                            0755
*                                                                  0756
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN ROUTINES TO PROCESS THE FMID KEYWORD                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0756
*RSMDFMDV:                                                         0756
*   ENTRY;                          /*                               */
RSMDFMDV STM   @14,@12,@SA00004                                    0756
*   SAVDATA(1:LENGTH(IOPPFMID))=SCPSTRNG(1:SCPPMLN);/* SAVE DATA     */
         MVI   SAVDATA+1,C' '                                      0757
         MVC   SAVDATA+2(5),SAVDATA+1                              0757
         L     @06,SCPPTR                                          0757
         LH    @15,SCPPMLN(,@06)                                   0757
         BCTR  @15,0                                               0757
         L     @06,SCPCHAR(,@06)                                   0757
         EX    @15,@SM02291                                        0757
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0758
         MVC   MSGPARTS+1(131),MSGPARTS                            0758
*   MSGPART1=TXTFMID;               /*                               */
         MVI   MSGPART1+8,C' '                                     0759
         MVC   MSGPART1+9(7),MSGPART1+8                            0759
         MVC   MSGPART1(8),@CC01545                                0759
*   MSGPART3(1:LENGTH(IOPPFMID))=IOPPFMID;/* OLD DATA FOR MSG        */
         MVC   MSGPART3(7),IOPPFMID(IOPPTR)                        0760
*   IF REP=ON                       /*                               */
*     THEN                          /*                               */
         TM    REP,B'10000000'                                     0761
         BNO   @RF00761                                            0761
*     DO;                           /*                               */
*       IF IOPPFMID=BLANK7&TOTAL=OFF/* IF NOT THERE AND NOT TOTAL    */
*         THEN                      /*                               */
         CLC   IOPPFMID(7,IOPPTR),@CC01416                         0763
         BNE   @RF00763                                            0763
         TM    TOTAL,B'00010000'                                   0763
         BNZ   @RF00763                                            0763
*         CALL UCL358I;             /*                               */
         BAL   @14,UCL358I                                         0764
*       IOPPFMID=SAVDATA(1:LENGTH(IOPPFMID));/* MOVE OVER DATA       */
@RF00763 MVC   IOPPFMID(7,IOPPTR),SAVDATA                          0765
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF ADD=ON                     /* IF ADD                        */
*       THEN                        /*                               */
         B     @RC00761                                            0767
@RF00761 TM    ADD,B'00100000'                                     0767
         BNO   @RF00767                                            0767
*       DO;                         /*                               */
*         IF IOPPFMID=BLANK7        /* IF NOT ALREDY THERE           */
*           THEN                    /*                               */
         CLC   IOPPFMID(7,IOPPTR),@CC01416                         0769
         BNE   @RF00769                                            0769
*           IOPPFMID=SAVDATA(1:LENGTH(IOPPFMID));/* ADD DATA         */
         MVC   IOPPFMID(7,IOPPTR),SAVDATA                          0770
*         ELSE                      /*                               */
*           CALL UCL356I;           /* ALREADY PRESENT               */
         B     @RC00769                                            0771
@RF00769 BAL   @14,UCL356I                                         0771
*       END;                        /*                               */
*     ELSE                          /* MUST BE DELETE                */
*       DO;                         /*                               */
         B     @RC00767                                            0773
@RF00767 DS    0H                                                  0774
*         IF IOPPFMID=SAVDATA(1:LENGTH(IOPPFMID))/* IF EQUAL         */
*           THEN                    /*                               */
         CLC   IOPPFMID(7,IOPPTR),SAVDATA                          0774
         BNE   @RF00774                                            0774
*           DO;                     /*                               */
*RSMDFMDD:                          /*                               */
*             ENTRY;                /*                               */
         B     @EC00776                                            0776
RSMDFMDD STM   @14,@12,@SA00004                                    0776
@EC00776 DS    0H                                                  0777
*             IOPPFMID=BLANK7;      /* ZERO FMID                     */
         MVC   IOPPFMID(7,IOPPTR),@CC01416                         0777
*           END;                    /*                               */
*         ELSE                      /*                               */
*           IF IOPPFMID=BLANK7      /* IF NO DATA                    */
*             THEN                  /*                               */
         B     @RC00774                                            0779
@RF00774 CLC   IOPPFMID(7,IOPPTR),@CC01416                         0779
         BNE   @RF00779                                            0779
*             CALL UCL357I;         /* DOES NOT EXIST                */
         BAL   @14,UCL357I                                         0780
*           ELSE                    /*                               */
*             CALL UCL261I;         /* DOES NOT MATCH                */
         B     @RC00779                                            0781
@RF00779 BAL   @14,UCL261I                                         0781
*       END;                        /*                               */
*   RETURN;                         /*                               */
         B     @EL00004                                            0783
*                                                                  0784
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN ROUTINES TO PROCESS THE LASTSUP KEYWORD                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0784
*RSMDLSV:                                                          0784
*   ENTRY;                          /*                               */
RSMDLSV  STM   @14,@12,@SA00004                                    0784
*   SAVDATA(1:LENGTH(IOPSBYNO))=SCPSTRNG(1:SCPPMLN);/* SAVE DATA     */
         MVI   SAVDATA+1,C' '                                      0785
         MVC   SAVDATA+2(5),SAVDATA+1                              0785
         L     @06,SCPPTR                                          0785
         LH    @15,SCPPMLN(,@06)                                   0785
         BCTR  @15,0                                               0785
         L     @06,SCPCHAR(,@06)                                   0785
         EX    @15,@SM02291                                        0785
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0786
         MVC   MSGPARTS+1(131),MSGPARTS                            0786
*   MSGPART1=TXTLSUP;               /*                               */
         MVI   MSGPART1+8,C' '                                     0787
         MVC   MSGPART1+9(7),MSGPART1+8                            0787
         MVC   MSGPART1(8),@CC01512                                0787
*   MSGPART3(1:LENGTH(IOPSBYNO))=IOPSBYNO;/* OLD DATA FOR MSG        */
         MVC   MSGPART3(7),IOPSBYNO(IOPPTR)                        0788
*   IF REP=ON                       /*                               */
*     THEN                          /*                               */
         TM    REP,B'10000000'                                     0789
         BNO   @RF00789                                            0789
*     DO;                           /*                               */
*       IF IOPSBYNO=BLANK7&TOTAL=OFF/* IF NOT THERE                  */
*         THEN                      /*                               */
         CLC   IOPSBYNO(7,IOPPTR),@CC01416                         0791
         BNE   @RF00791                                            0791
         TM    TOTAL,B'00010000'                                   0791
         BNZ   @RF00791                                            0791
*         CALL UCL358I;             /* ADD ASSUMED                   */
         BAL   @14,UCL358I                                         0792
*       IOPSBYNO=SAVDATA(1:LENGTH(IOPSBYNO));/* REP DATA             */
@RF00791 MVC   IOPSBYNO(7,IOPPTR),SAVDATA                          0793
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF ADD=ON                     /* IF ADD                        */
*       THEN                        /*                               */
         B     @RC00789                                            0795
@RF00789 TM    ADD,B'00100000'                                     0795
         BNO   @RF00795                                            0795
*       DO;                         /*                               */
*         IF IOPSBYNO=BLANK7        /* IF NOT ALREDY THERE           */
*           THEN                    /*                               */
         CLC   IOPSBYNO(7,IOPPTR),@CC01416                         0797
         BNE   @RF00797                                            0797
*           IOPSBYNO=SAVDATA(1:LENGTH(IOPSBYNO));/* ADD DATA         */
         MVC   IOPSBYNO(7,IOPPTR),SAVDATA                          0798
*         ELSE                      /*                               */
*           CALL UCL356I;           /* ALREADY PRESENT               */
         B     @RC00797                                            0799
@RF00797 BAL   @14,UCL356I                                         0799
*       END;                        /*                               */
*     ELSE                          /* MUST BE DELETE                */
*       DO;                         /*                               */
         B     @RC00795                                            0801
@RF00795 DS    0H                                                  0802
*         IF IOPSBYNO=SAVDATA(1:LENGTH(IOPSBYNO))/* IF EQUAL         */
*           THEN                    /*                               */
         CLC   IOPSBYNO(7,IOPPTR),SAVDATA                          0802
         BNE   @RF00802                                            0802
*           DO;                     /*                               */
*RSMDLSTD:                          /*                               */
*             ENTRY;                /*                               */
         B     @EC00804                                            0804
RSMDLSTD STM   @14,@12,@SA00004                                    0804
@EC00804 DS    0H                                                  0805
*             IOPSBYNO=BLANK7;      /* ZERO SUPBUNO                  */
         MVC   IOPSBYNO(7,IOPPTR),@CC01416                         0805
*           END;                    /*                               */
*         ELSE                      /*                               */
*           IF IOPSBYNO=BLANK7      /* IF NO DATA                    */
*             THEN                  /*                               */
         B     @RC00802                                            0807
@RF00802 CLC   IOPSBYNO(7,IOPPTR),@CC01416                         0807
         BNE   @RF00807                                            0807
*             CALL UCL357I;         /* DOES NOT EXIST                */
         BAL   @14,UCL357I                                         0808
*           ELSE                    /*                               */
*             CALL UCL261I;         /* DOES NOT MATCH                */
         B     @RC00807                                            0809
@RF00807 BAL   @14,UCL261I                                         0809
*       END;                        /*                               */
*   RETURN;                         /*                               */
         B     @EL00004                                            0811
*                                                                  0812
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN ROUTINES TO PROCESS THE DELBY KEYWORD                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0812
*RSMDDBYV:                                                         0812
*   ENTRY;                          /*                               */
RSMDDBYV STM   @14,@12,@SA00004                                    0812
*   SAVDATA(1:LENGTH(IOPDBYNO))=SCPSTRNG(1:SCPPMLN);/* SAVE DATA     */
         MVI   SAVDATA+1,C' '                                      0813
         MVC   SAVDATA+2(5),SAVDATA+1                              0813
         L     @06,SCPPTR                                          0813
         LH    @15,SCPPMLN(,@06)                                   0813
         BCTR  @15,0                                               0813
         L     @06,SCPCHAR(,@06)                                   0813
         EX    @15,@SM02291                                        0813
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0814
         MVC   MSGPARTS+1(131),MSGPARTS                            0814
*   MSGPART1=TXTDELBY;              /*                               */
         MVI   MSGPART1+8,C' '                                     0815
         MVC   MSGPART1+9(7),MSGPART1+8                            0815
         MVC   MSGPART1(8),@CC01514                                0815
*   MSGPART3(1:LENGTH(IOPDBYNO))=IOPDBYNO;/* OLD DATA FOR MSG        */
         MVC   MSGPART3(7),IOPDBYNO(IOPPTR)                        0816
*   IF REP=ON                       /*                               */
*     THEN                          /*                               */
         TM    REP,B'10000000'                                     0817
         BNO   @RF00817                                            0817
*     DO;                           /*                               */
*       IF IOPDBYNO=BLANK7&TOTAL=OFF/* IF NOT THERE                  */
*         THEN                      /*                               */
         CLC   IOPDBYNO(7,IOPPTR),@CC01416                         0819
         BNE   @RF00819                                            0819
         TM    TOTAL,B'00010000'                                   0819
         BNZ   @RF00819                                            0819
*         CALL UCL358I;             /* ADD ASSUMED                   */
         BAL   @14,UCL358I                                         0820
*       IOPDBYNO=SAVDATA(1:LENGTH(IOPDBYNO));/* REPLACE DATA         */
@RF00819 MVC   IOPDBYNO(7,IOPPTR),SAVDATA                          0821
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF ADD=ON                     /* IF ADD                        */
*       THEN                        /*                               */
         B     @RC00817                                            0823
@RF00817 TM    ADD,B'00100000'                                     0823
         BNO   @RF00823                                            0823
*       DO;                         /*                               */
*         IF IOPDBYNO=BLANK7        /* IF NOT ALREDY THERE           */
*           THEN                    /*                               */
         CLC   IOPDBYNO(7,IOPPTR),@CC01416                         0825
         BNE   @RF00825                                            0825
*           IOPDBYNO=SAVDATA(1:LENGTH(IOPDBYNO));/* ADD DATA         */
         MVC   IOPDBYNO(7,IOPPTR),SAVDATA                          0826
*         ELSE                      /*                               */
*           CALL UCL356I;           /* ALREADY PRESENT               */
         B     @RC00825                                            0827
@RF00825 BAL   @14,UCL356I                                         0827
*       END;                        /*                               */
*     ELSE                          /* MUST BE DELETE                */
*       DO;                         /*                               */
         B     @RC00823                                            0829
@RF00823 DS    0H                                                  0830
*         IF IOPDBYNO=SAVDATA(1:LENGTH(IOPDBYNO))/* IF EQUAL         */
*           THEN                    /*                               */
         CLC   IOPDBYNO(7,IOPPTR),SAVDATA                          0830
         BNE   @RF00830                                            0830
*           DO;                     /*                               */
*RSMDDBTD:                          /*                               */
*             ENTRY;                /*                               */
         B     @EC00832                                            0832
RSMDDBTD STM   @14,@12,@SA00004                                    0832
@EC00832 DS    0H                                                  0833
*             IOPDBYNO=BLANK7;      /* ZERO FMID                     */
         MVC   IOPDBYNO(7,IOPPTR),@CC01416                         0833
*           END;                    /*                               */
*         ELSE                      /*                               */
*           IF IOPDBYNO=BLANK7      /* IF NO DATA                    */
*             THEN                  /*                               */
         B     @RC00830                                            0835
@RF00830 CLC   IOPDBYNO(7,IOPPTR),@CC01416                         0835
         BNE   @RF00835                                            0835
*             CALL UCL357I;         /* DOES NOT EXIST                */
         BAL   @14,UCL357I                                         0836
*           ELSE                    /*                               */
*             CALL UCL261I;         /* DOES NOT MATCH                */
         B     @RC00835                                            0837
@RF00835 BAL   @14,UCL261I                                         0837
*       END;                        /*                               */
*   RETURN;                         /*                               */
         B     @EL00004                                            0839
*   END RSMDXXX;                    /*                               */
         B     @EL00004                                            0840
         EJECT
*                                                                  0841
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO PROCESS KEYWORDS ASSOCIATED WITH MAC AND SRC       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0841
*RMACXXX:                           /*                               */
*   PROCEDURE;                      /*                               */
*                                                                  0841
RMACXXX  STM   @14,@12,@SA00005                                    0841
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT TO PROCESS DISTLIB KEYWORD                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0842
*RMACDLBV:                          /*                               */
*   ENTRY;                          /*                               */
         B     @EC00842                                            0842
RMACDLBV STM   @14,@12,@SA00005                                    0842
@EC00842 DS    0H                                                  0843
*   SAVDATA(1:LENGTH(IOPMCDLB))=SCPSTRNG(1:SCPPMLN);/* SAVE DATA     */
         MVI   SAVDATA+1,C' '                                      0843
         MVC   SAVDATA+2(6),SAVDATA+1                              0843
         L     @06,SCPPTR                                          0843
         LH    @15,SCPPMLN(,@06)                                   0843
         BCTR  @15,0                                               0843
         L     @06,SCPCHAR(,@06)                                   0843
         EX    @15,@SM02291                                        0843
*   MSGPARTS='';                    /* CLEAR MSG PART                */
         MVI   MSGPARTS,C' '                                       0844
         MVC   MSGPARTS+1(131),MSGPARTS                            0844
*   MSGPART1(1:LENGTH(TXTDIST))=TXTDIST;/* SET TYPE                  */
         MVC   MSGPART1(8),@CC01539                                0845
*   MSGPART3(1:LENGTH(IOPMCDLB))=IOPMCDLB;/* SAVE OLD VALUE          */
         MVC   MSGPART3(8),IOPMCDLB(IOPPTR)                        0846
*   IF REP=ON                       /*                               */
*     THEN                          /*                               */
         TM    REP,B'10000000'                                     0847
         BNO   @RF00847                                            0847
*     DO;                           /*                               */
*       IF IOPMCDLB=BLANK8&TOTAL=OFF/*                               */
*         THEN                      /*                               */
         CLC   IOPMCDLB(8,IOPPTR),BLANK8                           0849
         BNE   @RF00849                                            0849
         TM    TOTAL,B'00010000'                                   0849
         BNZ   @RF00849                                            0849
*         CALL UCL358I;             /* ADD ASSUMED                   */
         BAL   @14,UCL358I                                         0850
*       IOPMCDLB=SAVDATA(1:LENGTH(IOPMCDLB));/* REP OLD DATA         */
@RF00849 MVC   IOPMCDLB(8,IOPPTR),SAVDATA                          0851
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /*                               */
         B     @RC00847                                            0853
@RF00847 TM    ADD,B'00100000'                                     0853
         BNO   @RF00853                                            0853
*       DO;                         /*                               */
*         IF IOPMCDLB=BLANK8        /* IF NO DATA THERE              */
*           THEN                    /*                               */
         CLC   IOPMCDLB(8,IOPPTR),BLANK8                           0855
         BNE   @RF00855                                            0855
*           IOPMCDLB=SAVDATA(1:LENGTH(IOPMCDLB));/* ADD NEW DATA     */
         MVC   IOPMCDLB(8,IOPPTR),SAVDATA                          0856
*         ELSE                      /*                               */
*           CALL UCL356I;           /* ALREADY THERE MSG             */
         B     @RC00855                                            0857
@RF00855 BAL   @14,UCL356I                                         0857
*       END;                        /*                               */
*     ELSE                          /* MUST BE DELETE                */
*       DO;                         /*                               */
         B     @RC00853                                            0859
@RF00853 DS    0H                                                  0860
*         IF IOPMCDLB=SAVDATA(1:LENGTH(IOPMCDLB))/* IF EQUAL         */
*           THEN                    /*                               */
         CLC   IOPMCDLB(8,IOPPTR),SAVDATA                          0860
         BNE   @RF00860                                            0860
*           DO;                     /*                               */
*RMACDLBD:                          /*                               */
*             ENTRY;                /*                               */
         B     @EC00862                                            0862
RMACDLBD STM   @14,@12,@SA00005                                    0862
@EC00862 DS    0H                                                  0863
*             IOPMCDLB=BLANK8;      /* DELETE IT                     */
         MVC   IOPMCDLB(8,IOPPTR),BLANK8                           0863
*           END;                    /*                               */
*         ELSE                      /*                               */
*           IF IOPMCDLB=BLANK8      /* IF NO DLIB PRESENT            */
*             THEN                  /*                               */
         B     @RC00860                                            0865
@RF00860 CLC   IOPMCDLB(8,IOPPTR),BLANK8                           0865
         BNE   @RF00865                                            0865
*             CALL UCL357I;         /* DATA NOT PRESENT              */
         BAL   @14,UCL357I                                         0866
*           ELSE                    /*                               */
*             CALL UCL261I;         /* DATA DOES NOT MATCH           */
         B     @RC00865                                            0867
@RF00865 BAL   @14,UCL261I                                         0867
*       END;                        /*                               */
*   RETURN;                         /*                               */
@EL00005 DS    0H                                                  0869
@EF00005 DS    0H                                                  0869
@ER00005 LM    @14,@12,@SA00005                                    0869
         BR    @14                                                 0869
*                                                                  0870
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT TO PROCESS SYSLIB KEYWORD                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0870
*RMACSYV:                           /*                               */
*   ENTRY;                          /*                               */
RMACSYV  STM   @14,@12,@SA00005                                    0870
*   SAVDATA(1:LENGTH(IOPMCSYS))=SCPSTRNG(1:SCPPMLN);/* SAVE DATA     */
         MVI   SAVDATA+1,C' '                                      0871
         MVC   SAVDATA+2(6),SAVDATA+1                              0871
         L     @06,SCPPTR                                          0871
         LH    @15,SCPPMLN(,@06)                                   0871
         BCTR  @15,0                                               0871
         L     @06,SCPCHAR(,@06)                                   0871
         EX    @15,@SM02291                                        0871
*   MSGPARTS='';                    /* CLEAR MSG PART                */
         MVI   MSGPARTS,C' '                                       0872
         MVC   MSGPARTS+1(131),MSGPARTS                            0872
*   MSGPART1(1:LENGTH(TXTDIST))=TXTSYSLB;/* SET TYPE                 */
         MVC   MSGPART1(8),@CC01547                                0873
*   MSGPART3(1:LENGTH(IOPMCSYS))=IOPMCSYS;/* SAVE OLD VALUE          */
         MVC   MSGPART3(8),IOPMCSYS(IOPPTR)                        0874
*   IF REP=ON                       /*                               */
*     THEN                          /*                               */
         TM    REP,B'10000000'                                     0875
         BNO   @RF00875                                            0875
*     DO;                           /*                               */
*       IF IOPMCSYS=BLANK8&TOTAL=OFF/*                               */
*         THEN                      /*                               */
         CLC   IOPMCSYS(8,IOPPTR),BLANK8                           0877
         BNE   @RF00877                                            0877
         TM    TOTAL,B'00010000'                                   0877
         BNZ   @RF00877                                            0877
*         CALL UCL358I;             /* ADD ASSUMED                   */
         BAL   @14,UCL358I                                         0878
*       IOPMCSYS=SAVDATA(1:LENGTH(IOPMCSYS));/* REP OLD DATA         */
@RF00877 MVC   IOPMCSYS(8,IOPPTR),SAVDATA                          0879
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /*                               */
         B     @RC00875                                            0881
@RF00875 TM    ADD,B'00100000'                                     0881
         BNO   @RF00881                                            0881
*       DO;                         /*                               */
*         IF IOPMCSYS=BLANK8        /* IF NO DATA THERE              */
*           THEN                    /*                               */
         CLC   IOPMCSYS(8,IOPPTR),BLANK8                           0883
         BNE   @RF00883                                            0883
*           IOPMCSYS=SAVDATA(1:LENGTH(IOPMCSYS));/* ADD NEW DATA     */
         MVC   IOPMCSYS(8,IOPPTR),SAVDATA                          0884
*         ELSE                      /*                               */
*           CALL UCL356I;           /* ALREADY THERE MSG             */
         B     @RC00883                                            0885
@RF00883 BAL   @14,UCL356I                                         0885
*       END;                        /*                               */
*     ELSE                          /* MUST BE DELETE                */
*       DO;                         /*                               */
         B     @RC00881                                            0887
@RF00881 DS    0H                                                  0888
*         IF IOPMCSYS=SAVDATA(1:LENGTH(IOPMCSYS))/* IF EQUAL         */
*           THEN                    /*                               */
         CLC   IOPMCSYS(8,IOPPTR),SAVDATA                          0888
         BNE   @RF00888                                            0888
*           DO;                     /*                               */
*RMACSYD:                           /*                               */
*             ENTRY;                /*                               */
         B     @EC00890                                            0890
RMACSYD  STM   @14,@12,@SA00005                                    0890
@EC00890 DS    0H                                                  0891
*             IOPMCSYS=BLANK8;      /* DELETE IT                     */
         MVC   IOPMCSYS(8,IOPPTR),BLANK8                           0891
*           END;                    /*                               */
*         ELSE                      /*                               */
*           IF IOPMCSYS=BLANK8      /* IF NO SYSLIB PRESENT          */
*             THEN                  /*                               */
         B     @RC00888                                            0893
@RF00888 CLC   IOPMCSYS(8,IOPPTR),BLANK8                           0893
         BNE   @RF00893                                            0893
*             CALL UCL357I;         /* DATA NOT PRESENT              */
         BAL   @14,UCL357I                                         0894
*           ELSE                    /*                               */
*             CALL UCL261I;         /* DATA DOES NOT MATCH           */
         B     @RC00893                                            0895
@RF00893 BAL   @14,UCL261I                                         0895
*       END;                        /*                               */
*   RETURN;                         /*                               */
         B     @EL00005                                            0897
*                                                                  0898
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT TO PROCESS VARIABLE ENTRIES IN MAC                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0898
*RMACUMID:                          /*                               */
*   ENTRY;                          /*                               */
RMACUMID STM   @14,@12,@SA00005                                    0898
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0899
         MVC   MSGPARTS+1(131),MSGPARTS                            0899
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/*                       */
         L     @06,SCPPTR                                          0900
         LH    @15,SCPPMLN(,@06)                                   0900
         BCTR  @15,0                                               0900
         L     @06,SCPCHAR(,@06)                                   0900
         EX    @15,@SM02281                                        0900
*   VLPTYPE=IOPUMID;                /*                               */
         MVI   VLPTYPE,X'32'                                       0901
*   VLPDLEN=LENGTH(IOPMACID(1));    /*                               */
         MVI   VLPDLEN,X'07'                                       0902
*   GO TO RMACADD1;                 /*                               */
         B     RMACADD1                                            0903
*RMACGASM:                          /*                               */
*   ENTRY;                          /*                               */
RMACGASM STM   @14,@12,@SA00005                                    0904
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0905
         MVC   MSGPARTS+1(131),MSGPARTS                            0905
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/*                       */
         L     @06,SCPPTR                                          0906
         LH    @15,SCPPMLN(,@06)                                   0906
         BCTR  @15,0                                               0906
         L     @06,SCPCHAR(,@06)                                   0906
         EX    @15,@SM02281                                        0906
*   IF IOPTYPE=IOPMAC               /* IF MAC                        */
*     THEN                          /*                               */
         CLI   IOPTYPE(IOPPTR),3                                   0907
         BNE   @RF00907                                            0907
*     DO;                           /*                               */
*       VLPTYPE=IOPMASMS;           /* OK                            */
         MVI   VLPTYPE,X'01'                                       0909
*       VLPDLEN=LENGTH(IOPMCASM);   /*                               */
         MVI   VLPDLEN,X'08'                                       0910
*     END;                          /*                               */
*   ELSE                            /* IF SRC                        */
*     SCPRETRN=SCPSTOP;             /* SYNTAX                        */
         B     @RC00907                                            0912
@RF00907 L     @06,SCPPTR                                          0912
         MVI   SCPRETRN(@06),X'08'                                 0912
*   GO TO RMACADD1;                 /*                               */
         B     RMACADD1                                            0913
*RMACMAL:                           /*                               */
*   ENTRY;                          /*                               */
RMACMAL  STM   @14,@12,@SA00005                                    0914
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       0915
         MVC   MSGPARTS+1(131),MSGPARTS                            0915
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/*                       */
         L     @06,SCPPTR                                          0916
         LH    @15,SCPPMLN(,@06)                                   0916
         BCTR  @15,0                                               0916
         L     @06,SCPCHAR(,@06)                                   0916
         EX    @15,@SM02281                                        0916
*   IF IOPTYPE=IOPMAC               /* IF MAC                        */
*     THEN                          /*                               */
         CLI   IOPTYPE(IOPPTR),3                                   0917
         BNE   @RF00917                                            0917
*     DO;                           /*                               */
*       VLPTYPE=IOPMCMAL;           /*                               */
         MVI   VLPTYPE,X'02'                                       0919
*       VLPDLEN=LENGTH(IOPMCASM);   /*                               */
         MVI   VLPDLEN,X'08'                                       0920
*     END;                          /*                               */
*   ELSE                            /* IF SRC                        */
*     SCPRETRN=SCPSTOP;             /* SYNTAX                        */
         B     @RC00917                                            0922
@RF00917 L     @06,SCPPTR                                          0922
         MVI   SCPRETRN(@06),X'08'                                 0922
*   GO TO RMACADD1;                 /*                               */
         B     RMACADD1                                            0923
*RMACADD1:                          /*                               */
*   VLPLPTR=ADDR(IOPMCENT(1));      /*                               */
RMACADD1 LA    @06,IOPMCENT(,IOPPTR)                               0924
         ST    @06,VLPLPTR                                         0924
*   RETURN;                         /*                               */
         B     @EL00005                                            0925
*                                                                  0926
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTS TO CHECK FOR R3 KEYWORD                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0926
*RMACASSM:                          /*                               */
*RMACASML:                          /*                               */
*   ENTRY;                          /*                               */
RMACASSM DS    0H                                                  0926
RMACASML STM   @14,@12,@SA00005                                    0926
*   IF IOPTYPE^=IOPMAC              /* IF NOT MAC (SRC)              */
*     THEN                          /* THEN ERR                      */
         CLI   IOPTYPE(IOPPTR),3                                   0927
         BE    @RF00927                                            0927
*     SCPRETRN=SCPSTOP;             /*                               */
         L     @06,SCPPTR                                          0928
         MVI   SCPRETRN(@06),X'08'                                 0928
*   RETURN;                         /*                               */
         B     @EL00005                                            0929
*   END RMACXXX;                    /*                               */
         B     @EL00005                                            0930
         EJECT
*                                                                  0931
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTS TO PROCESS KEYWORDS ASSOCIATED WITH MOD ENTRIES         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0931
*RMODXXX:                           /*                               */
*   PROCEDURE;                      /*                               */
RMODXXX  STM   @14,@12,@SA00006                                    0931
*RMODRMDV:                          /*                               */
*RMACRMDV:                          /*                               */
*   ENTRY;                          /*                               */
         B     @EC00932                                            0932
RMODRMDV DS    0H                                                  0932
RMACRMDV STM   @14,@12,@SA00006                                    0932
@EC00932 DS    0H                                                  0933
*   SAVDATA(1:LENGTH(IOPRMID))=SCPSTRNG(1:SCPPMLN);/* SAVE DATA      */
         MVI   SAVDATA+1,C' '                                      0933
         MVC   SAVDATA+2(5),SAVDATA+1                              0933
         L     @06,SCPPTR                                          0933
         LH    @15,SCPPMLN(,@06)                                   0933
         BCTR  @15,0                                               0933
         L     @06,SCPCHAR(,@06)                                   0933
         EX    @15,@SM02291                                        0933
*   MSGPARTS='';                    /* CLEAR MSG PART                */
         MVI   MSGPARTS,C' '                                       0934
         MVC   MSGPARTS+1(131),MSGPARTS                            0934
*   MSGPART1(1:LENGTH(TXTRMID))=TXTRMID;/* SET TYPE                  */
         MVC   MSGPART1(4),@CC01541                                0935
*   MSGPART3(1:LENGTH(IOPRMID))=IOPRMID;/* SAVE OLD VALUE            */
         MVC   MSGPART3(7),IOPRMID(IOPPTR)                         0936
*   IF REP=ON                       /*                               */
*     THEN                          /*                               */
         TM    REP,B'10000000'                                     0937
         BNO   @RF00937                                            0937
*     DO;                           /*                               */
*       IF IOPRMID=BLANK7&TOTAL=OFF /*                               */
*         THEN                      /*                               */
         CLC   IOPRMID(7,IOPPTR),@CC01416                          0939
         BNE   @RF00939                                            0939
         TM    TOTAL,B'00010000'                                   0939
         BNZ   @RF00939                                            0939
*         CALL UCL358I;             /*                               */
         BAL   @14,UCL358I                                         0940
*       IOPRMID=SAVDATA(1:LENGTH(IOPRMID));/* REP OLD RMID           */
@RF00939 MVC   IOPRMID(7,IOPPTR),SAVDATA                           0941
*       IOPRMST=''B;                /* ZERO STATUS                   */
         MVI   IOPRMST(IOPPTR),X'00'                               0942
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /*                               */
         B     @RC00937                                            0944
@RF00937 TM    ADD,B'00100000'                                     0944
         BNO   @RF00944                                            0944
*       DO;                         /*                               */
*         IF IOPRMID=BLANK7         /* IF NO DATA THERE              */
*           THEN                    /*                               */
         CLC   IOPRMID(7,IOPPTR),@CC01416                          0946
         BNE   @RF00946                                            0946
*           IOPRMID=SAVDATA(1:LENGTH(IOPRMID));/*                    */
         MVC   IOPRMID(7,IOPPTR),SAVDATA                           0947
*         ELSE                      /*                               */
*           CALL UCL356I;           /* ALREADY THERE MSG             */
         B     @RC00946                                            0948
@RF00946 BAL   @14,UCL356I                                         0948
*       END;                        /*                               */
*     ELSE                          /* MUST BE DELETE                */
*       DO;                         /*                               */
         B     @RC00944                                            0950
@RF00944 DS    0H                                                  0951
*         IF IOPRMID=SAVDATA(1:LENGTH(IOPRMID))/* IF EQUAL           */
*           THEN                    /*                               */
         CLC   IOPRMID(7,IOPPTR),SAVDATA                           0951
         BNE   @RF00951                                            0951
*           DO;                     /*                               */
*RMODRMDD:                          /*                               */
*RMACRMDD:                          /*                               */
*             ENTRY;                /*                               */
         B     @EC00953                                            0953
RMODRMDD DS    0H                                                  0953
RMACRMDD STM   @14,@12,@SA00006                                    0953
@EC00953 DS    0H                                                  0954
*             IOPRMID=BLANK7;       /* DELETE IT                     */
         MVC   IOPRMID(7,IOPPTR),@CC01416                          0954
*             IOPRMST=''B;          /* ZERO STATUS BITS              */
         MVI   IOPRMST(IOPPTR),X'00'                               0955
*           END;                    /*                               */
*         ELSE                      /*                               */
*           IF IOPRMID=BLANK7       /* IF NO RMID PRESENT            */
*             THEN                  /*                               */
         B     @RC00951                                            0957
@RF00951 CLC   IOPRMID(7,IOPPTR),@CC01416                          0957
         BNE   @RF00957                                            0957
*             CALL UCL357I;         /* DATA NOT PRESENT              */
         BAL   @14,UCL357I                                         0958
*           ELSE                    /*                               */
*             CALL UCL261I;         /* DATA DOES NOT MATCH           */
         B     @RC00957                                            0959
@RF00957 BAL   @14,UCL261I                                         0959
*       END;                        /*                               */
*   RETURN;                         /*                               */
@EL00006 DS    0H                                                  0961
@EF00006 DS    0H                                                  0961
@ER00006 LM    @14,@12,@SA00006                                    0961
         BR    @14                                                 0961
*                                                                  0962
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT TO PROCESS DISTLIB KEYWORD                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0962
*RMODDLBV:                          /*                               */
*   ENTRY;                          /*                               */
RMODDLBV STM   @14,@12,@SA00006                                    0962
*   SAVDATA(1:LENGTH(IOPDLIB))=SCPSTRNG(1:SCPPMLN);/* SAVE DATA      */
         MVI   SAVDATA+1,C' '                                      0963
         MVC   SAVDATA+2(6),SAVDATA+1                              0963
         L     @06,SCPPTR                                          0963
         LH    @15,SCPPMLN(,@06)                                   0963
         BCTR  @15,0                                               0963
         L     @06,SCPCHAR(,@06)                                   0963
         EX    @15,@SM02291                                        0963
*   MSGPARTS='';                    /* CLEAR MSG PART                */
         MVI   MSGPARTS,C' '                                       0964
         MVC   MSGPARTS+1(131),MSGPARTS                            0964
*   MSGPART1(1:LENGTH(TXTDIST))=TXTDIST;/* SET TYPE                  */
         MVC   MSGPART1(8),@CC01539                                0965
*   MSGPART3(1:LENGTH(IOPDLIB))=IOPDLIB;/* SAVE OLD VALUE            */
         MVC   MSGPART3(8),IOPDLIB(IOPPTR)                         0966
*   IF REP=ON                       /*                               */
*     THEN                          /*                               */
         TM    REP,B'10000000'                                     0967
         BNO   @RF00967                                            0967
*     DO;                           /*                               */
*       IF IOPDLIB=BLANK8&TOTAL=OFF /*                               */
*         THEN                      /*                               */
         CLC   IOPDLIB(8,IOPPTR),BLANK8                            0969
         BNE   @RF00969                                            0969
         TM    TOTAL,B'00010000'                                   0969
         BNZ   @RF00969                                            0969
*         CALL UCL358I;             /* ADD ASSUMED                   */
         BAL   @14,UCL358I                                         0970
*       IOPDLIB=SAVDATA(1:LENGTH(IOPDLIB));/* REP OLD DATA           */
@RF00969 MVC   IOPDLIB(8,IOPPTR),SAVDATA                           0971
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /*                               */
         B     @RC00967                                            0973
@RF00967 TM    ADD,B'00100000'                                     0973
         BNO   @RF00973                                            0973
*       DO;                         /*                               */
*         IF IOPDLIB=BLANK8         /* IF NO DATA THERE              */
*           THEN                    /*                               */
         CLC   IOPDLIB(8,IOPPTR),BLANK8                            0975
         BNE   @RF00975                                            0975
*           IOPDLIB=SAVDATA(1:LENGTH(IOPDLIB));/* ADD NEW DATA       */
         MVC   IOPDLIB(8,IOPPTR),SAVDATA                           0976
*         ELSE                      /*                               */
*           CALL UCL356I;           /* ALREADY THERE MSG             */
         B     @RC00975                                            0977
@RF00975 BAL   @14,UCL356I                                         0977
*       END;                        /*                               */
*     ELSE                          /* MUST BE DELETE                */
*       DO;                         /*                               */
         B     @RC00973                                            0979
@RF00973 DS    0H                                                  0980
*         IF IOPDLIB=SAVDATA(1:LENGTH(IOPDLIB))/* IF EQUAL           */
*           THEN                    /*                               */
         CLC   IOPDLIB(8,IOPPTR),SAVDATA                           0980
         BNE   @RF00980                                            0980
*           DO;                     /*                               */
*RMODDLBD:                          /*                               */
*             ENTRY;                /*                               */
         B     @EC00982                                            0982
RMODDLBD STM   @14,@12,@SA00006                                    0982
@EC00982 DS    0H                                                  0983
*             IOPDLIB=BLANK8;       /* DELETE IT                     */
         MVC   IOPDLIB(8,IOPPTR),BLANK8                            0983
*           END;                    /*                               */
*         ELSE                      /*                               */
*           IF IOPDLIB=BLANK8       /* IF NO DLIB PRESENT            */
*             THEN                  /*                               */
         B     @RC00980                                            0985
@RF00980 CLC   IOPDLIB(8,IOPPTR),BLANK8                            0985
         BNE   @RF00985                                            0985
*             CALL UCL357I;         /* DATA NOT PRESENT              */
         BAL   @14,UCL357I                                         0986
*           ELSE                    /*                               */
*             CALL UCL261I;         /* DATA DOES NOT MATCH           */
         B     @RC00985                                            0987
@RF00985 BAL   @14,UCL261I                                         0987
*       END;                        /*                               */
*   RETURN;                         /*                               */
         B     @EL00006                                            0989
*                                                                  0990
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT TO PROCESS FMID KEYWORD                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0990
*RMODFMDV:                          /*                               */
*RMACFMDV:                          /*                               */
*   ENTRY;                          /*                               */
RMODFMDV DS    0H                                                  0990
RMACFMDV STM   @14,@12,@SA00006                                    0990
*   SAVDATA(1:LENGTH(IOPFMID))=SCPSTRNG(1:SCPPMLN);/* SAVE DATA      */
         MVI   SAVDATA+1,C' '                                      0991
         MVC   SAVDATA+2(5),SAVDATA+1                              0991
         L     @06,SCPPTR                                          0991
         LH    @15,SCPPMLN(,@06)                                   0991
         BCTR  @15,0                                               0991
         L     @06,SCPCHAR(,@06)                                   0991
         EX    @15,@SM02291                                        0991
*   MSGPARTS='';                    /* CLEAR MSG PART                */
         MVI   MSGPARTS,C' '                                       0992
         MVC   MSGPARTS+1(131),MSGPARTS                            0992
*   MSGPART1(1:LENGTH(TXTFMID))=TXTFMID;/* SET TYPE                  */
         MVC   MSGPART1(8),@CC01545                                0993
*   MSGPART3(1:LENGTH(IOPFMID))=IOPFMID;/* SAVE OLD VALUE            */
         MVC   MSGPART3(7),IOPFMID(IOPPTR)                         0994
*   IF REP=ON                       /*                               */
*     THEN                          /*                               */
         TM    REP,B'10000000'                                     0995
         BNO   @RF00995                                            0995
*     DO;                           /*                               */
*       IF IOPFMID=BLANK7&TOTAL=OFF /*                               */
*         THEN                      /*                               */
         CLC   IOPFMID(7,IOPPTR),@CC01416                          0997
         BNE   @RF00997                                            0997
         TM    TOTAL,B'00010000'                                   0997
         BNZ   @RF00997                                            0997
*         CALL UCL358I;             /*                               */
         BAL   @14,UCL358I                                         0998
*       IOPFMID=SAVDATA(1:LENGTH(IOPFMID));/* REP OLD DATA           */
@RF00997 MVC   IOPFMID(7,IOPPTR),SAVDATA                           0999
*       IOPFMST=''B;                /* ZERO STATUS                   */
         MVI   IOPFMST(IOPPTR),X'00'                               1000
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /*                               */
         B     @RC00995                                            1002
@RF00995 TM    ADD,B'00100000'                                     1002
         BNO   @RF01002                                            1002
*       DO;                         /*                               */
*         IF IOPFMID=BLANK7         /* IF NO DATA THERE              */
*           THEN                    /*                               */
         CLC   IOPFMID(7,IOPPTR),@CC01416                          1004
         BNE   @RF01004                                            1004
*           IOPFMID=SAVDATA(1:LENGTH(IOPFMID));/* ADD NEW DATA       */
         MVC   IOPFMID(7,IOPPTR),SAVDATA                           1005
*         ELSE                      /*                               */
*           CALL UCL356I;           /* ALREADY THERE MSG             */
         B     @RC01004                                            1006
@RF01004 BAL   @14,UCL356I                                         1006
*       END;                        /*                               */
*     ELSE                          /* MUST BE DELETE                */
*       DO;                         /*                               */
         B     @RC01002                                            1008
@RF01002 DS    0H                                                  1009
*         IF IOPFMID=SAVDATA(1:LENGTH(IOPFMID))/* IF EQUAL           */
*           THEN                    /*                               */
         CLC   IOPFMID(7,IOPPTR),SAVDATA                           1009
         BNE   @RF01009                                            1009
*           DO;                     /*                               */
*RMODFMDD:                          /*                               */
*RMACFMDD:                          /*                               */
*             ENTRY;                /*                               */
         B     @EC01011                                            1011
RMODFMDD DS    0H                                                  1011
RMACFMDD STM   @14,@12,@SA00006                                    1011
@EC01011 DS    0H                                                  1012
*             IOPFMID=BLANK7;       /* DELETE IT                     */
         MVC   IOPFMID(7,IOPPTR),@CC01416                          1012
*             IOPFMST=''B;          /* ZERO STATUS BITS              */
         MVI   IOPFMST(IOPPTR),X'00'                               1013
*           END;                    /*                               */
*         ELSE                      /*                               */
*           IF IOPFMID=BLANK7       /* IF NO FMID PRESENT            */
*             THEN                  /*                               */
         B     @RC01009                                            1015
@RF01009 CLC   IOPFMID(7,IOPPTR),@CC01416                          1015
         BNE   @RF01015                                            1015
*             CALL UCL357I;         /* DATA NOT PRESENT              */
         BAL   @14,UCL357I                                         1016
*           ELSE                    /*                               */
*             CALL UCL261I;         /* DATA DOES NOT MATCH           */
         B     @RC01015                                            1017
@RF01015 BAL   @14,UCL261I                                         1017
*       END;                        /*                               */
*   RETURN;                         /*                               */
         B     @EL00006                                            1019
*                                                                  1020
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT TO HANDLE MOD SUBENTRIES                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1020
*RMODUMID:                          /*                               */
*   ENTRY;                          /*                               */
RMODUMID STM   @14,@12,@SA00006                                    1020
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       1021
         MVC   MSGPARTS+1(131),MSGPARTS                            1021
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          1022
         LH    @15,SCPPMLN(,@06)                                   1022
         BCTR  @15,0                                               1022
         L     @06,SCPCHAR(,@06)                                   1022
         EX    @15,@SM02281                                        1022
*   VLPTYPE=IOPUMID;                /*                               */
         MVI   VLPTYPE,X'32'                                       1023
*   GO TO MODADDLP;                 /*                               */
         B     MODADDLP                                            1024
*RMODLMOD:                          /*                               */
*   ENTRY;                          /*                               */
RMODLMOD STM   @14,@12,@SA00006                                    1025
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       1026
         MVC   MSGPARTS+1(131),MSGPARTS                            1026
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          1027
         LH    @15,SCPPMLN(,@06)                                   1027
         BCTR  @15,0                                               1027
         L     @06,SCPCHAR(,@06)                                   1027
         EX    @15,@SM02281                                        1027
*   VLPTYPE=IOPMDLMD;               /*                               */
         MVI   VLPTYPE,X'01'                                       1028
*   GO TO MODADDLP;                 /*                               */
         B     MODADDLP                                            1029
*RMODTAL:                           /*                               */
*   ENTRY;                          /*                               */
RMODTAL  STM   @14,@12,@SA00006                                    1030
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       1031
         MVC   MSGPARTS+1(131),MSGPARTS                            1031
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          1032
         LH    @15,SCPPMLN(,@06)                                   1032
         BCTR  @15,0                                               1032
         L     @06,SCPCHAR(,@06)                                   1032
         EX    @15,@SM02281                                        1032
*   VLPTYPE=IOPMDTAL;               /*                               */
         MVI   VLPTYPE,X'02'                                       1033
*   GO TO MODADDLP;                 /*                               */
         B     MODADDLP                                            1034
*RMODDAL:                           /*                               */
*   ENTRY;                          /*                               */
RMODDAL  STM   @14,@12,@SA00006                                    1035
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       1036
         MVC   MSGPARTS+1(131),MSGPARTS                            1036
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION NAME      */
         L     @06,SCPPTR                                          1037
         LH    @15,SCPPMLN(,@06)                                   1037
         BCTR  @15,0                                               1037
         L     @06,SCPCHAR(,@06)                                   1037
         EX    @15,@SM02281                                        1037
*   VLPTYPE=IOPMDDAL;               /*                               */
         MVI   VLPTYPE,X'03'                                       1038
*   GO TO MODADDLP;                 /*                               */
         B     MODADDLP                                            1039
*MODADDLP:                          /*                               */
*   VLPLPTR=ADDR(IOPMNTRY(1));      /* START OF LIST                 */
MODADDLP LA    @06,IOPMNTRY(,IOPPTR)                               1040
         ST    @06,VLPLPTR                                         1040
*   VLPDLEN=LENGTH(IOPLMODS(1));    /* LENGTH OF ENTRY               */
         MVI   VLPDLEN,X'08'                                       1041
*   RETURN;                         /*                               */
         B     @EL00006                                            1042
*   END RMODXXX;                    /*                               */
         B     @EL00006                                            1043
         EJECT
*                                                                  1044
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINES TO HANDLE LMOD OPTIONS                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1044
*RLMDXXX:                           /*                               */
*   PROCEDURE;                      /*                               */
*                                                                  1044
RLMDXXX  STM   @14,@12,@SA00007                                    1044
*   /*****************************************************************/
*   /*                                                               */
*   /* LOAD MODULE RE-ENTRANT LKED ATTRIBUTE SCAN EXIT - RECORDS THE */
*   /* RENT ATTRIBUTE IN THE IOP OR DELETES THE ATTRIBUTE IF A       */
*   /* CHANGE/DELETE OPERATION                               @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1045
*RLMDRENT:                                                         1045
*   ENTRY;                          /*                               */
         B     @EC01045                                            1045
RLMDRENT STM   @14,@12,@SA00007                                    1045
@EC01045 DS    0H                                                  1046
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       1046
         MVC   MSGPARTS+1(131),MSGPARTS                            1046
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @06,SCPPTR                                          1047
         LH    @15,SCPPMLN(,@06)                                   1047
         BCTR  @15,0                                               1047
         L     @06,SCPCHAR(,@06)                                   1047
         EX    @15,@SM02281                                        1047
*   IF DEL=ON                       /* IF OPTION TO BE DEL           */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     1048
         BNO   @RF01048                                            1048
*     DO;                           /*                               */
*       IF IOPRENT=ON               /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPRENT(IOPPTR),B'01000000'                         1050
         BNO   @RF01050                                            1050
*         IOPRENT=OFF;              /* DELETE IT                     */
         NI    IOPRENT(IOPPTR),B'10111111'                         1051
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC01050                                            1052
@RF01050 BAL   @14,UCL357I                                         1052
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC01048                                            1054
@RF01048 TM    ADD,B'00100000'                                     1054
         BNO   @RF01054                                            1054
*       DO;                         /*                               */
*         IF IOPRENT=OFF            /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPRENT(IOPPTR),B'01000000'                         1056
         BNZ   @RF01056                                            1056
*           IOPRENT=ON;             /* ADD IT                        */
         OI    IOPRENT(IOPPTR),B'01000000'                         1057
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC01056                                            1058
@RF01056 BAL   @14,UCL356I                                         1058
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPRENT=ON;                 /* ALWAYS ADD OPTION             */
         B     @RC01054                                            1060
@RF01054 OI    IOPRENT(IOPPTR),B'01000000'                         1060
*   RETURN;                         /* RETURN TO SCAN                */
@EL00007 DS    0H                                                  1061
@EF00007 DS    0H                                                  1061
@ER00007 LM    @14,@12,@SA00007                                    1061
         BR    @14                                                 1061
*                                                                  1062
*   /*****************************************************************/
*   /*                                                               */
*   /* LOAD MODULE TYPE REUSABLE LKED ATTRIBUTE SCAN EXIT - RECORDS  */
*   /* THE REUS ATTRIBUTE IN THE IOP OR DELETES THE ATTRIBUTE IF A   */
*   /* CHANGE/DELETE OPERATION                               @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1062
*RLMDREUS:                                                         1062
*   ENTRY;                          /*                               */
RLMDREUS STM   @14,@12,@SA00007                                    1062
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       1063
         MVC   MSGPARTS+1(131),MSGPARTS                            1063
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @06,SCPPTR                                          1064
         LH    @15,SCPPMLN(,@06)                                   1064
         BCTR  @15,0                                               1064
         L     @06,SCPCHAR(,@06)                                   1064
         EX    @15,@SM02281                                        1064
*   IF DEL=ON                       /* IF OPTION TO BE DEL           */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     1065
         BNO   @RF01065                                            1065
*     DO;                           /*                               */
*       IF IOPREUS=ON               /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPREUS(IOPPTR),B'00100000'                         1067
         BNO   @RF01067                                            1067
*         IOPREUS=OFF;              /* DELETE IT                     */
         NI    IOPREUS(IOPPTR),B'11011111'                         1068
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC01067                                            1069
@RF01067 BAL   @14,UCL357I                                         1069
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC01065                                            1071
@RF01065 TM    ADD,B'00100000'                                     1071
         BNO   @RF01071                                            1071
*       DO;                         /*                               */
*         IF IOPREUS=OFF            /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPREUS(IOPPTR),B'00100000'                         1073
         BNZ   @RF01073                                            1073
*           IOPREUS=ON;             /* ADD IT                        */
         OI    IOPREUS(IOPPTR),B'00100000'                         1074
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC01073                                            1075
@RF01073 BAL   @14,UCL356I                                         1075
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPREUS=ON;                 /* ALWAYS ADD OPTION             */
         B     @RC01071                                            1077
@RF01071 OI    IOPREUS(IOPPTR),B'00100000'                         1077
*   RETURN;                         /* RETURN TO SCAN                */
         B     @EL00007                                            1078
*                                                                  1079
*   /*****************************************************************/
*   /*                                                               */
*   /* LOAD MODULE TYPE SCATTER-LOAD LKED ATTRIBUTE SCAN EXIT -      */
*   /* RECORDS THE SCTR ATTRIBUTE IN THE IOP OR DELETES THE ATTRIBUTE*/
*   /* IF A CHANGE/DELETE OPERATION                          @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1079
*RLMDSCTR:                                                         1079
*   ENTRY;                          /*                               */
RLMDSCTR STM   @14,@12,@SA00007                                    1079
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       1080
         MVC   MSGPARTS+1(131),MSGPARTS                            1080
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @06,SCPPTR                                          1081
         LH    @15,SCPPMLN(,@06)                                   1081
         BCTR  @15,0                                               1081
         L     @06,SCPCHAR(,@06)                                   1081
         EX    @15,@SM02281                                        1081
*   IF DEL=ON                       /* IF OPTION TO BE DEL           */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     1082
         BNO   @RF01082                                            1082
*     DO;                           /*                               */
*       IF IOPSCTR=ON               /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPSCTR(IOPPTR),B'00010000'                         1084
         BNO   @RF01084                                            1084
*         IOPSCTR=OFF;              /* DELETE IT                     */
         NI    IOPSCTR(IOPPTR),B'11101111'                         1085
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC01084                                            1086
@RF01084 BAL   @14,UCL357I                                         1086
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC01082                                            1088
@RF01082 TM    ADD,B'00100000'                                     1088
         BNO   @RF01088                                            1088
*       DO;                         /*                               */
*         IF IOPSCTR=OFF            /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPSCTR(IOPPTR),B'00010000'                         1090
         BNZ   @RF01090                                            1090
*           IOPSCTR=ON;             /* ADD IT                        */
         OI    IOPSCTR(IOPPTR),B'00010000'                         1091
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC01090                                            1092
@RF01090 BAL   @14,UCL356I                                         1092
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPSCTR=ON;                 /* ALWAYS ADD OPTION             */
         B     @RC01088                                            1094
@RF01088 OI    IOPSCTR(IOPPTR),B'00010000'                         1094
*   RETURN;                         /* RETURN TO SCAN                */
         B     @EL00007                                            1095
*                                                                  1096
*   /*****************************************************************/
*   /*                                                               */
*   /* LOAD MODULE TYPE OVERLAY LKED ATTRIBUTE SCAN EXIT - RECORDS   */
*   /* THE OVLY ATTRIBUTE IN THE IOP OR DELETES THE ATTRIBUTE IF A   */
*   /* CHANGE/DELETE OPERATION                               @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1096
*RLMDOVLY:                                                         1096
*   ENTRY;                          /*                               */
RLMDOVLY STM   @14,@12,@SA00007                                    1096
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       1097
         MVC   MSGPARTS+1(131),MSGPARTS                            1097
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @06,SCPPTR                                          1098
         LH    @15,SCPPMLN(,@06)                                   1098
         BCTR  @15,0                                               1098
         L     @06,SCPCHAR(,@06)                                   1098
         EX    @15,@SM02281                                        1098
*   IF DEL=ON                       /* IF OPTION TO BE DEL           */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     1099
         BNO   @RF01099                                            1099
*     DO;                           /*                               */
*       IF IOPOVLY=ON               /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPOVLY(IOPPTR),B'00001000'                         1101
         BNO   @RF01101                                            1101
*         IOPOVLY=OFF;              /* DELETE IT                     */
         NI    IOPOVLY(IOPPTR),B'11110111'                         1102
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC01101                                            1103
@RF01101 BAL   @14,UCL357I                                         1103
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC01099                                            1105
@RF01099 TM    ADD,B'00100000'                                     1105
         BNO   @RF01105                                            1105
*       DO;                         /*                               */
*         IF IOPOVLY=OFF            /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPOVLY(IOPPTR),B'00001000'                         1107
         BNZ   @RF01107                                            1107
*           IOPOVLY=ON;             /* ADD IT                        */
         OI    IOPOVLY(IOPPTR),B'00001000'                         1108
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC01107                                            1109
@RF01107 BAL   @14,UCL356I                                         1109
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPOVLY=ON;                 /* ALWAYS ADD OPTION             */
         B     @RC01105                                            1111
@RF01105 OI    IOPOVLY(IOPPTR),B'00001000'                         1111
*   RETURN;                         /* RETURN TO SCAN                */
         B     @EL00007                                            1112
*                                                                  1113
*   /*****************************************************************/
*   /*                                                               */
*   /* LOAD MODULE TYPE REFRESHABLE LKED ATTRIBUTE SCAN EXIT -       */
*   /* RECORDS THE ATTRIBUTE IN THE THE IOP OR DELETES THE ATTRIBUTE */
*   /* IF A CHANGE/DELETE OPERATION                          @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1113
*RLMDREFR:                                                         1113
*   ENTRY;                          /*                               */
RLMDREFR STM   @14,@12,@SA00007                                    1113
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       1114
         MVC   MSGPARTS+1(131),MSGPARTS                            1114
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @06,SCPPTR                                          1115
         LH    @15,SCPPMLN(,@06)                                   1115
         BCTR  @15,0                                               1115
         L     @06,SCPCHAR(,@06)                                   1115
         EX    @15,@SM02281                                        1115
*   IF DEL=ON                       /* IF OPTION TO BE DEL           */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     1116
         BNO   @RF01116                                            1116
*     DO;                           /*                               */
*       IF IOPREFR=ON               /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPREFR(IOPPTR),B'00000100'                         1118
         BNO   @RF01118                                            1118
*         IOPREFR=OFF;              /* DELETE IT                     */
         NI    IOPREFR(IOPPTR),B'11111011'                         1119
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC01118                                            1120
@RF01118 BAL   @14,UCL357I                                         1120
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC01116                                            1122
@RF01116 TM    ADD,B'00100000'                                     1122
         BNO   @RF01122                                            1122
*       DO;                         /*                               */
*         IF IOPREFR=OFF            /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPREFR(IOPPTR),B'00000100'                         1124
         BNZ   @RF01124                                            1124
*           IOPREFR=ON;             /* ADD IT                        */
         OI    IOPREFR(IOPPTR),B'00000100'                         1125
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC01124                                            1126
@RF01124 BAL   @14,UCL356I                                         1126
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPREFR=ON;                 /* ALWAYS ADD OPTION             */
         B     @RC01122                                            1128
@RF01122 OI    IOPREFR(IOPPTR),B'00000100'                         1128
*   RETURN;                         /* RETURN TO SCAN                */
         B     @EL00007                                            1129
*                                                                  1130
*   /*****************************************************************/
*   /*                                                               */
*   /* LOAD MODULE TYPE DOWNWARD-COMPATIBLE LKED ATTRIBUTE SCAN EXIT */
*   /* - RECORDS THE ATTRIBUTE IN THE IOP OR DELETE THE ATTRIBUTE IF */
*   /* A CHANGE/DELETE OP                                    @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1130
*RLMDDC:                                                           1130
*   ENTRY;                          /*                               */
RLMDDC   STM   @14,@12,@SA00007                                    1130
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       1131
         MVC   MSGPARTS+1(131),MSGPARTS                            1131
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @06,SCPPTR                                          1132
         LH    @15,SCPPMLN(,@06)                                   1132
         BCTR  @15,0                                               1132
         L     @06,SCPCHAR(,@06)                                   1132
         EX    @15,@SM02281                                        1132
*   IF DEL=ON                       /* IF OPTION TO BE DEL           */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     1133
         BNO   @RF01133                                            1133
*     DO;                           /*                               */
*       IF IOPDC=ON                 /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPDC(IOPPTR),B'00000010'                           1135
         BNO   @RF01135                                            1135
*         IOPDC=OFF;                /* DELETE IT                     */
         NI    IOPDC(IOPPTR),B'11111101'                           1136
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC01135                                            1137
@RF01135 BAL   @14,UCL357I                                         1137
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC01133                                            1139
@RF01133 TM    ADD,B'00100000'                                     1139
         BNO   @RF01139                                            1139
*       DO;                         /*                               */
*         IF IOPDC=OFF              /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPDC(IOPPTR),B'00000010'                           1141
         BNZ   @RF01141                                            1141
*           IOPDC=ON;               /* ADD IT                        */
         OI    IOPDC(IOPPTR),B'00000010'                           1142
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC01141                                            1143
@RF01141 BAL   @14,UCL356I                                         1143
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPDC=ON;                   /* ALWAYS ADD OPTION             */
         B     @RC01139                                            1145
@RF01139 OI    IOPDC(IOPPTR),B'00000010'                           1145
*   RETURN;                         /* RETURN TO SCAN                */
         B     @EL00007                                            1146
*                                                                  1147
*   /*****************************************************************/
*   /*                                                               */
*   /* LOAD MODULE TYPE NOT-EDITABLE LKED ATTRIBUTE SCAN EXIT -      */
*   /* RECORDS THE ATTRIBUTE IN THE IOP OR DELETES THE ATTRIBUTE IF A*/
*   /* CHANGE/DELETE OPERATION                               @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1147
*RLMDNE:                                                           1147
*   ENTRY;                          /*                               */
RLMDNE   STM   @14,@12,@SA00007                                    1147
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       1148
         MVC   MSGPARTS+1(131),MSGPARTS                            1148
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @06,SCPPTR                                          1149
         LH    @15,SCPPMLN(,@06)                                   1149
         BCTR  @15,0                                               1149
         L     @06,SCPCHAR(,@06)                                   1149
         EX    @15,@SM02281                                        1149
*   IF DEL=ON                       /* IF OPTION TO BE DEL           */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     1150
         BNO   @RF01150                                            1150
*     DO;                           /*                               */
*       IF IOPNE=ON                 /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPNE(IOPPTR),B'10000000'                           1152
         BNO   @RF01152                                            1152
*         IOPNE=OFF;                /* DELETE IT                     */
         NI    IOPNE(IOPPTR),B'01111111'                           1153
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC01152                                            1154
@RF01152 BAL   @14,UCL357I                                         1154
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC01150                                            1156
@RF01150 TM    ADD,B'00100000'                                     1156
         BNO   @RF01156                                            1156
*       DO;                         /*                               */
*         IF IOPNE=OFF              /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPNE(IOPPTR),B'10000000'                           1158
         BNZ   @RF01158                                            1158
*           IOPNE=ON;               /* ADD IT                        */
         OI    IOPNE(IOPPTR),B'10000000'                           1159
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC01158                                            1160
@RF01158 BAL   @14,UCL356I                                         1160
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPNE=ON;                   /* ALWAYS ADD OPTION             */
         B     @RC01156                                            1162
@RF01156 OI    IOPNE(IOPPTR),B'10000000'                           1162
*   RETURN;                         /* RETURN TO SCAN                */
         B     @EL00007                                            1163
*                                                                  1164
*   /*****************************************************************/
*   /*                                                               */
*   /* LOAD MODULE TYPE APF (AC=1) LKED ATTRIBUTE SCAN EXIT RECORDS  */
*   /* THE APF ATTRIBUTE IN THE IOP OR DELETES THE ATTRIBUTE IF A    */
*   /* CHANGE/ DELETE OPERATION                              @VS08700*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1164
*RLMDAPF:                           /*                       @VS08700*/
*   ENTRY;                          /*                               */
RLMDAPF  STM   @14,@12,@SA00007                                    1164
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       1165
         MVC   MSGPARTS+1(131),MSGPARTS                            1165
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @06,SCPPTR                                          1166
         LH    @15,SCPPMLN(,@06)                                   1166
         BCTR  @15,0                                               1166
         L     @06,SCPCHAR(,@06)                                   1166
         EX    @15,@SM02281                                        1166
*   IF DEL=ON                       /* IF OPTION TO BE DEL           */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     1167
         BNO   @RF01167                                            1167
*     DO;                           /*                               */
*       IF IOPAPF=ON                /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPAPF(IOPPTR),B'10000000'                          1169
         BNO   @RF01169                                            1169
*         IOPAPF=OFF;               /* DELETE IT                     */
         NI    IOPAPF(IOPPTR),B'01111111'                          1170
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC01169                                            1171
@RF01169 BAL   @14,UCL357I                                         1171
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC01167                                            1173
@RF01167 TM    ADD,B'00100000'                                     1173
         BNO   @RF01173                                            1173
*       DO;                         /*                               */
*         IF IOPAPF=OFF             /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPAPF(IOPPTR),B'10000000'                          1175
         BNZ   @RF01175                                            1175
*           IOPAPF=ON;              /* ADD IT                        */
         OI    IOPAPF(IOPPTR),B'10000000'                          1176
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC01175                                            1177
@RF01175 BAL   @14,UCL356I                                         1177
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPAPF=ON;                  /* ALWAYS ADD OPTION             */
         B     @RC01173                                            1179
@RF01173 OI    IOPAPF(IOPPTR),B'10000000'                          1179
*   RETURN;                         /* RETURN TO SCAN                */
         B     @EL00007                                            1180
*                                                                  1181
*   /*****************************************************************/
*   /*                                                               */
*   /* LOAD MODULE TYPE ALIGN2 LKED ATTRIBUTE SCAN EXIT - RECORDS THE*/
*   /* ATTRIBUTE IN THE IOP OR DELETES THE ATTRIBUTE IF A CHANGE/    */
*   /* DELETE OPERATION.                                     @XA05949*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1181
*RLMDALN2:                                                         1181
*   ENTRY;                          /*                               */
RLMDALN2 STM   @14,@12,@SA00007                                    1181
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       1182
         MVC   MSGPARTS+1(131),MSGPARTS                            1182
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @06,SCPPTR                                          1183
         LH    @15,SCPPMLN(,@06)                                   1183
         BCTR  @15,0                                               1183
         L     @06,SCPCHAR(,@06)                                   1183
         EX    @15,@SM02281                                        1183
*   IF DEL=ON                       /* IF OPTION TO BE DEL           */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     1184
         BNO   @RF01184                                            1184
*     DO;                           /*                               */
*       IF IOPPAGA=ON               /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPPAGA(IOPPTR),B'01000000'                         1186
         BNO   @RF01186                                            1186
*         IOPPAGA=OFF;              /* DELETE IT                     */
         NI    IOPPAGA(IOPPTR),B'10111111'                         1187
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC01186                                            1188
@RF01186 BAL   @14,UCL357I                                         1188
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC01184                                            1190
@RF01184 TM    ADD,B'00100000'                                     1190
         BNO   @RF01190                                            1190
*       DO;                         /*                               */
*         IF IOPPAGA=OFF            /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPPAGA(IOPPTR),B'01000000'                         1192
         BNZ   @RF01192                                            1192
*           IOPPAGA=ON;             /* ADD IT                        */
         OI    IOPPAGA(IOPPTR),B'01000000'                         1193
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC01192                                            1194
@RF01192 BAL   @14,UCL356I                                         1194
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPPAGA=ON;                 /* ALWAYS ADD OPTION             */
         B     @RC01190                                            1196
@RF01190 OI    IOPPAGA(IOPPTR),B'01000000'                         1196
*   RETURN;                         /* RETURN TO SCAN                */
         B     @EL00007                                            1197
*                                                                  1198
*   /*****************************************************************/
*   /*                                                               */
*   /* UPDATE LOAD MODULE ENTRY TO SET 'STANDARD' LKED PARMS OR CLEAR*/
*   /* STANDARD INDICATOR                                    @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1198
*RLMDSTD:                                                          1198
*   ENTRY;                          /*                               */
RLMDSTD  STM   @14,@12,@SA00007                                    1198
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       1199
         MVC   MSGPARTS+1(131),MSGPARTS                            1199
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @06,SCPPTR                                          1200
         LH    @15,SCPPMLN(,@06)                                   1200
         BCTR  @15,0                                               1200
         L     @06,SCPCHAR(,@06)                                   1200
         EX    @15,@SM02281                                        1200
*   IF DEL=ON                       /* IF OPTION TO BE DEL           */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     1201
         BNO   @RF01201                                            1201
*     DO;                           /*                               */
*       IF IOPLINK=ON               /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPLINK(IOPPTR),B'01000000'                         1203
         BNO   @RF01203                                            1203
*         IOPLINK=OFF;              /* DELETE IT                     */
         NI    IOPLINK(IOPPTR),B'10111111'                         1204
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC01203                                            1205
@RF01203 BAL   @14,UCL357I                                         1205
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC01201                                            1207
@RF01201 TM    ADD,B'00100000'                                     1207
         BNO   @RF01207                                            1207
*       DO;                         /*                               */
*         IF IOPLINK=OFF            /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPLINK(IOPPTR),B'01000000'                         1209
         BNZ   @RF01209                                            1209
*           IOPLINK=ON;             /* ADD IT                        */
         OI    IOPLINK(IOPPTR),B'01000000'                         1210
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC01209                                            1211
@RF01209 BAL   @14,UCL356I                                         1211
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPLINK=ON;                 /* ALWAYS ADD OPTION             */
         B     @RC01207                                            1213
@RF01207 OI    IOPLINK(IOPPTR),B'01000000'                         1213
*   RETURN;                         /* RETURN TO SCAN                */
         B     @EL00007                                            1214
*                                                                  1215
*   /*****************************************************************/
*   /*                                                               */
*   /* LOAD MODULE TYPE 'COPY' STATUS CDS INDICATOR - THIS SCAN EXIT */
*   /* RECORDS THE COPY STATUS (MODULE COPIED AT SYS GEN - NOT LINK  */
*   /* EDITED) INTO THE IOP OR WILL DELETE THE STATUS IF A   @Z63SP00*/
*   /* CHANGE/DELETE OPERATION                               @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1215
*RLMDCOPY:                                                         1215
*   ENTRY;                          /*                               */
RLMDCOPY STM   @14,@12,@SA00007                                    1215
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       1216
         MVC   MSGPARTS+1(131),MSGPARTS                            1216
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @06,SCPPTR                                          1217
         LH    @15,SCPPMLN(,@06)                                   1217
         BCTR  @15,0                                               1217
         L     @06,SCPCHAR(,@06)                                   1217
         EX    @15,@SM02281                                        1217
*   IF DEL=ON                       /* IF OPTION TO BE DEL           */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     1218
         BNO   @RF01218                                            1218
*     DO;                           /*                               */
*       IF IOPCOPY=ON               /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPCOPY(IOPPTR),B'10000000'                         1220
         BNO   @RF01220                                            1220
*         IOPCOPY=OFF;              /* DELETE IT                     */
         NI    IOPCOPY(IOPPTR),B'01111111'                         1221
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC01220                                            1222
@RF01220 BAL   @14,UCL357I                                         1222
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC01218                                            1224
@RF01218 TM    ADD,B'00100000'                                     1224
         BNO   @RF01224                                            1224
*       DO;                         /*                               */
*         IF IOPCOPY=OFF            /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPCOPY(IOPPTR),B'10000000'                         1226
         BNZ   @RF01226                                            1226
*           IOPCOPY=ON;             /* ADD IT                        */
         OI    IOPCOPY(IOPPTR),B'10000000'                         1227
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC01226                                            1228
@RF01226 BAL   @14,UCL356I                                         1228
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPCOPY=ON;                 /* ALWAYS ADD OPTION             */
         B     @RC01224                                            1230
@RF01224 OI    IOPCOPY(IOPPTR),B'10000000'                         1230
*   RETURN;                         /* RETURN TO SCAN                */
         B     @EL00007                                            1231
*                                                                  1232
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT TO PROCESS THE SYSLIB KEYWORD FOR LMODS                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1232
*RLMDSYLB:                          /*                               */
*   ENTRY;                          /*                               */
RLMDSYLB STM   @14,@12,@SA00007                                    1232
*   MSGPARTS='';                    /* INIT MESSAGE                  */
         MVI   MSGPARTS,C' '                                       1233
         MVC   MSGPARTS+1(131),MSGPARTS                            1233
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION ID        */
         L     @06,SCPPTR                                          1234
         LH    @15,SCPPMLN(,@06)                                   1234
         BCTR  @15,0                                               1234
         L     @06,SCPCHAR(,@06)                                   1234
         EX    @15,@SM02281                                        1234
*   VLPTYPE=IOPLMSYS;               /* SUB ENTRY TYPE CODE           */
         MVI   VLPTYPE,X'01'                                       1235
*   VLPLPTR=ADDR(IOPLNTRY(1));      /*                               */
         LA    @06,IOPLNTRY(,IOPPTR)                               1236
         ST    @06,VLPLPTR                                         1236
*   VLPDLEN=LENGTH(IOPLSYS);        /* ENTRY LENGTH                  */
         MVI   VLPDLEN,X'08'                                       1237
*   RETURN;                         /*                               */
         B     @EL00007                                            1238
*   END RLMDXXX;                    /*                               */
         B     @EL00007                                            1239
         EJECT
*                                                                  1240
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT TO PROCESS THE DLIB KEYWORDS                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1240
*RDLBXXX:                           /*                               */
*   PROCEDURE;                      /*                               */
*                                                                  1240
RDLBXXX  STM   @14,@12,12(@13)                                     1240
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUT TO PROCESS DLIB SYSLIB KEYWORD                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1241
*RDLBSYLB:                          /*                               */
*   ENTRY;                          /*                               */
         B     @EC01241                                            1241
RDLBSYLB STM   @14,@12,12(@13)                                     1241
@EC01241 DS    0H                                                  1242
*   MSGPARTS='';                    /* INIT MESSAGE                  */
         MVI   MSGPARTS,C' '                                       1242
         MVC   MSGPARTS+1(131),MSGPARTS                            1242
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE OPTION ID        */
         L     @06,SCPPTR                                          1243
         LH    @15,SCPPMLN(,@06)                                   1243
         BCTR  @15,0                                               1243
         L     @06,SCPCHAR(,@06)                                   1243
         EX    @15,@SM02281                                        1243
*   VLPTYPE=IOPDLSYS;               /* SUB ENTRY TYPE CODE           */
         MVI   VLPTYPE,X'01'                                       1244
*   VLPLPTR=ADDR(IOPDNTRY(1));      /*                               */
         LA    @06,IOPDNTRY(,IOPPTR)                               1245
         ST    @06,VLPLPTR                                         1245
*   VLPDLEN=LENGTH(IOPDSYS);        /* ENTRY LENGTH                  */
         MVI   VLPDLEN,X'08'                                       1246
*   RETURN;                         /*                               */
@EL00008 DS    0H                                                  1247
@EF00008 DS    0H                                                  1247
@ER00008 LM    @14,@12,12(@13)                                     1247
         BR    @14                                                 1247
*   END RDLBXXX;                    /*                               */
         EJECT
*                                                                  1249
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINES TO PROCESS OPTIONS FOR THE SYSTEM ENTRY      @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1249
*RSYSXXX:                           /*                               */
*   PROCEDURE;                      /*                               */
*                                                                  1249
RSYSXXX  STM   @14,@12,@SA00009                                    1249
*   /*****************************************************************/
*   /*                                                               */
*   /* EXIT FOR SYSTEM SREL VALUE                            @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1250
*RSYSSRLV:                                                         1250
*   ENTRY;                          /*                       @Z63SP00*/
         B     @EC01250                                            1250
RSYSSRLV STM   @14,@12,@SA00009                                    1250
@EC01250 DS    0H                                                  1251
*   SAVDATA(1:LENGTH(IOPSREL))=SCPSTRNG(1:SCPPMLN);/* SAVE DATA      */
         MVI   SAVDATA+1,C' '                                      1251
         MVC   SAVDATA+2(2),SAVDATA+1                              1251
         L     @06,SCPPTR                                          1251
         LH    @15,SCPPMLN(,@06)                                   1251
         BCTR  @15,0                                               1251
         L     @06,SCPCHAR(,@06)                                   1251
         EX    @15,@SM02291                                        1251
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       1252
         MVC   MSGPARTS+1(131),MSGPARTS                            1252
*   MSGPART1(1:LENGTH(TXTSREL))=TXTSREL;/* TYPE ENTRY                */
         MVC   MSGPART1(8),@CC01492                                1253
*   MSGPART3(1:LENGTH(IOPSREL))=IOPSREL;/* CURRENT VALUE             */
         MVC   MSGPART3(4),IOPSREL(IOPPTR)                         1254
*   IF REP=ON                       /* IF REPLACE THEN               */
*     THEN                          /*                               */
         TM    REP,B'10000000'                                     1255
         BNO   @RF01255                                            1255
*     DO;                           /*                               */
*       IF IOPSREL=BLANK4&TOTAL=OFF /* IF NOT TOTAL REP              */
*         THEN                      /*                               */
         CLC   IOPSREL(4,IOPPTR),@CC01418                          1257
         BNE   @RF01257                                            1257
         TM    TOTAL,B'00010000'                                   1257
         BNZ   @RF01257                                            1257
*         CALL UCL358I;             /* ADD ASSUMED                   */
         BAL   @14,UCL358I                                         1258
*       IOPSREL=SAVDATA(1:LENGTH(IOPSREL));/* REP OLD DATA           */
@RF01257 MVC   IOPSREL(4,IOPPTR),SAVDATA                           1259
*     END;                          /*                               */
*   ELSE                            /* OTHERWISE - DELETE    @Z63SP00*/
*     IF ADD=ON                     /* IS IT ADD OPERATION   @Z63SP00*/
*       THEN                        /* EXIT BADLY TO SCAN    @Z63SP00*/
         B     @RC01255                                            1261
@RF01255 TM    ADD,B'00100000'                                     1261
         BNO   @RF01261                                            1261
*       DO;                         /*                               */
*         IF IOPSREL=BLANK4         /* IF NO SREL                    */
*           THEN                    /* THEN ADD ONE                  */
         CLC   IOPSREL(4,IOPPTR),@CC01418                          1263
         BNE   @RF01263                                            1263
*           IOPSREL=SAVDATA(1:LENGTH(IOPSREL));/* ADD NEW DATA       */
         MVC   IOPSREL(4,IOPPTR),SAVDATA                           1264
*         ELSE                      /* IF ONE THERE THEN ERR         */
*           CALL UCL356I;           /*                               */
         B     @RC01263                                            1265
@RF01263 BAL   @14,UCL356I                                         1265
*       END;                        /*                               */
*     ELSE                          /*                               */
*       DO;                         /*                               */
         B     @RC01261                                            1267
@RF01261 DS    0H                                                  1268
*         IF IOPSREL=SAVDATA(1:LENGTH(IOPSREL))/* IF MATCH           */
*           THEN                    /*                               */
         CLC   IOPSREL(4,IOPPTR),SAVDATA                           1268
         BNE   @RF01268                                            1268
*           DO;                     /*                               */
*RSYSSRLD:                          /*                               */
*             ENTRY;                /*                               */
         B     @EC01270                                            1270
RSYSSRLD STM   @14,@12,@SA00009                                    1270
@EC01270 DS    0H                                                  1271
*             IOPSREL=BLANK4;       /* BLANK OUT SREL                */
         MVC   IOPSREL(4,IOPPTR),@CC01418                          1271
*           END;                    /*                               */
*         ELSE                      /* VALUES DONT MATCH             */
*           IF IOPSREL=BLANK4       /*                               */
*             THEN                  /*                               */
         B     @RC01268                                            1273
@RF01268 CLC   IOPSREL(4,IOPPTR),@CC01418                          1273
         BNE   @RF01273                                            1273
*             CALL UCL357I;         /* ENT DOES NOT EXIST            */
         BAL   @14,UCL357I                                         1274
*           ELSE                    /*                               */
*             CALL UCL261I;         /* DATA DOES NOT MATCH           */
         B     @RC01273                                            1275
@RF01273 BAL   @14,UCL261I                                         1275
*       END;                        /*                               */
*   RETURN;                         /* RETURN TO HMASMSCN            */
@EL00009 DS    0H                                                  1277
@EF00009 DS    0H                                                  1277
@ER00009 LM    @14,@12,@SA00009                                    1277
         BR    @14                                                 1277
*                                                                  1278
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN EXIT FOR NUCID KEYWORD                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1278
*RSYSNCV:                                                          1278
*   ENTRY;                          /*                               */
RSYSNCV  STM   @14,@12,@SA00009                                    1278
*   SAVDATA(1:LENGTH(IOPNUCID))=SCPSTRNG(1:SCPPMLN);/* SAVE DATA     */
         L     @06,SCPPTR                                          1279
         L     @06,SCPCHAR(,@06)                                   1279
         MVC   SAVDATA(1),SCPSTRNG(@06)                            1279
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       1280
         MVC   MSGPARTS+1(131),MSGPARTS                            1280
*   MSGPART1(1:LENGTH(TXTNUCID))=TXTNUCID;/* SET KEYWORD             */
         MVC   MSGPART1(8),@CC01494                                1281
*   MSGPART3(1:LENGTH(IOPNUCID))=IOPNUCID;/* SET CURR MSG            */
         MVC   MSGPART3(1),IOPNUCID(IOPPTR)                        1282
*   IF REP=ON                       /* IS REPLACE                    */
*     THEN                          /*                               */
         TM    REP,B'10000000'                                     1283
         BNO   @RF01283                                            1283
*     DO;                           /*                               */
*       IF IOPNUCID=BLANK&TOTAL=OFF /* IF NOT TOTAL REP              */
*         THEN                      /*                               */
         CLI   IOPNUCID(IOPPTR),C' '                               1285
         BNE   @RF01285                                            1285
         TM    TOTAL,B'00010000'                                   1285
         BNZ   @RF01285                                            1285
*         CALL UCL358I;             /* ADD ASSUMED                   */
         BAL   @14,UCL358I                                         1286
*       IOPNUCID=SAVDATA(1:LENGTH(IOPNUCID));/* REP OLD DATA         */
@RF01285 MVC   IOPNUCID(1,IOPPTR),SAVDATA                          1287
*     END;                          /*                               */
*   ELSE                            /* OTHERWISE - DELETE NUCID      */
*     IF ADD=ON                     /* IS IT ADD OPERATION   @Z63SP00*/
*       THEN                        /* EXIT BADLY TO SCAN    @Z63SP00*/
         B     @RC01283                                            1289
@RF01283 TM    ADD,B'00100000'                                     1289
         BNO   @RF01289                                            1289
*       DO;                         /*                               */
*         IF IOPNUCID=BLANK         /* IF NO NUCID                   */
*           THEN                    /*                               */
         CLI   IOPNUCID(IOPPTR),C' '                               1291
         BNE   @RF01291                                            1291
*           IOPNUCID=SAVDATA(1:LENGTH(IOPNUCID));/* ADD NEW DATA     */
         MVC   IOPNUCID(1,IOPPTR),SAVDATA                          1292
*         ELSE                      /*                               */
*           CALL UCL356I;           /*                               */
         B     @RC01291                                            1293
@RF01291 BAL   @14,UCL356I                                         1293
*       END;                        /*                               */
*     ELSE                          /* MUST BE DELETE                */
*       DO;                         /*                               */
         B     @RC01289                                            1295
@RF01289 DS    0H                                                  1296
*         IF IOPNUCID=SAVDATA(1:LENGTH(IOPNUCID))/* IF EQUAL         */
*           THEN                    /*                               */
         CLC   IOPNUCID(1,IOPPTR),SAVDATA                          1296
         BNE   @RF01296                                            1296
*           DO;                     /*                               */
*RSYSNCD:                           /*                               */
*             ENTRY;                /*                               */
         B     @EC01298                                            1298
RSYSNCD  STM   @14,@12,@SA00009                                    1298
@EC01298 DS    0H                                                  1299
*             IOPNUCID=BLANK;       /* BLANK NUCID                   */
         MVI   IOPNUCID(IOPPTR),C' '                               1299
*           END;                    /*                               */
*         ELSE                      /*                               */
*           IF IOPNUCID=BLANK       /* IF NOT PRESENT                */
*             THEN                  /*                               */
         B     @RC01296                                            1301
@RF01296 CLI   IOPNUCID(IOPPTR),C' '                               1301
         BNE   @RF01301                                            1301
*             CALL UCL357I;         /* DATA DOES NOT EXIST           */
         BAL   @14,UCL357I                                         1302
*           ELSE                    /*                               */
*             CALL UCL261I;         /* DEL NOT MATCH MSG             */
         B     @RC01301                                            1303
@RF01301 BAL   @14,UCL261I                                         1303
*       END;                        /*                               */
*   RETURN;                         /* RETURN TO HMASMSCN            */
         B     @EL00009                                            1305
*                                                                  1306
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN EXIT FOR PEMAX KEYWORD                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1306
*RSYSPMV:                                                          1306
*   ENTRY;                          /*                               */
RSYSPMV  STM   @14,@12,@SA00009                                    1306
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       1307
         MVC   MSGPARTS+1(131),MSGPARTS                            1307
*   MSGPART1(1:LENGTH(TXTPEMAX))=TXTPEMAX;/* KEYWORD FOR MSG         */
*                                                                  1308
         MVC   MSGPART1(8),@CC01496                                1308
*   /*****************************************************************/
*   /*                                                               */
*   /* CONVERT PASSED VALUE INTO NEWPEMAX                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1309
*   CHAR8=EBCZEROS;                 /*                               */
         MVC   CHAR8(8),@CC01428                                   1309
*   CHAR8(9-SCPPMLN:8)=SCPSTRNG(1:SCPPMLN);/*                        */
         L     @06,SCPPTR                                          1310
         LA    @15,9                                               1310
         SH    @15,SCPPMLN(,@06)                                   1310
         LA    @14,CHAR8-1(@15)                                    1310
         LCR   @15,@15                                             1310
         AH    @15,@CH00036                                        1310
         L     @06,SCPCHAR(,@06)                                   1310
         EX    @15,@SM02294                                        1310
*   PACK(PACK8,CHAR8);              /*                               */
         PACK  PACK8(8),CHAR8(8)                                   1311
*   CVB(CVB15,PACK8);               /*                               */
         CVB   @06,PACK8                                           1312
         STH   @06,CVB15                                           1312
*   NEWPEMAX=CVB15;                 /*                               */
*                                                                  1313
         STH   @06,NEWPEMAX                                        1313
*   /*****************************************************************/
*   /*                                                               */
*   /* CONVERT OLD PEMAX FOR POSSIBLE MESSAGES                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1314
*   CVD(IOPPEMAX,PACK8);            /* CONVERT CURRENT VALUE         */
         LH    @06,IOPPEMAX(,IOPPTR)                               1314
         CVD   @06,PACK8                                           1314
*   UNPK(CHAR12,PACK8);             /*                               */
         UNPK  CHAR12(12),PACK8(8)                                 1315
*   CHAR12(12)=CHAR12(12)×HEX0;     /*                               */
         OI    CHAR12+11,X'F0'                                     1316
*   MSGPART3(1:4)=CHAR12(9:12);     /* SAVE EXISTING VALUE           */
         MVC   MSGPART3(4),CHAR12+8                                1317
*   IF REP=ON                       /* IF REPLACE                    */
*     THEN                          /*                               */
         TM    REP,B'10000000'                                     1318
         BNO   @RF01318                                            1318
*     DO;                           /*                               */
*       IF IOPPEMAX=ZERO&TOTAL=OFF  /* IF NOT TOTAL REP              */
*         THEN                      /*                               */
         LTR   @06,@06                                             1320
         BNZ   @RF01320                                            1320
         TM    TOTAL,B'00010000'                                   1320
         BNZ   @RF01320                                            1320
*         CALL UCL358I;             /* ADD ASSUMED                   */
         BAL   @14,UCL358I                                         1321
*       IOPPEMAX=NEWPEMAX;          /* MOVE                  @Z63SP00*/
@RF01320 MVC   IOPPEMAX(2,IOPPTR),NEWPEMAX                         1322
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF ADD=ON                     /* IS IT ADD OPERATION   @Z63SP00*/
*       THEN                        /* EXIT BADLY TO SCAN    @Z63SP00*/
         B     @RC01318                                            1324
@RF01318 TM    ADD,B'00100000'                                     1324
         BNO   @RF01324                                            1324
*       DO;                         /*                               */
*         IF IOPPEMAX=ZERO          /* IF NO VALUE PRESENT           */
*           THEN                    /*                               */
         ICM   @06,3,IOPPEMAX(IOPPTR)                              1326
         BNZ   @RF01326                                            1326
*           IOPPEMAX=NEWPEMAX;      /* MOVE NEW VALUE                */
         MVC   IOPPEMAX(2,IOPPTR),NEWPEMAX                         1327
*         ELSE                      /*                               */
*           CALL UCL356I;           /* PEMAX ALREADY EXISTS          */
         B     @RC01326                                            1328
@RF01326 BAL   @14,UCL356I                                         1328
*       END;                        /*                               */
*     ELSE                          /* MUST BE DELETE                */
*       DO;                         /*                               */
         B     @RC01324                                            1330
@RF01324 DS    0H                                                  1331
*         IF IOPPEMAX=NEWPEMAX      /* IF VALUES EQUAL               */
*           THEN                    /*                               */
         CLC   IOPPEMAX(2,IOPPTR),NEWPEMAX                         1331
         BNE   @RF01331                                            1331
*           DO;                     /*                               */
*RSYSPMD:                           /*                               */
*             ENTRY;                /*                               */
         B     @EC01333                                            1333
RSYSPMD  STM   @14,@12,@SA00009                                    1333
@EC01333 DS    0H                                                  1334
*             IOPPEMAX=''B;         /* ZERO PEMAX                    */
         SLR   @06,@06                                             1334
         STH   @06,IOPPEMAX(,IOPPTR)                               1334
*           END;                    /*                               */
*         ELSE                      /*                               */
*           IF IOPPEMAX=ZERO        /* IF NO ENTRY                   */
*             THEN                  /*                               */
         B     @RC01331                                            1336
@RF01331 ICM   @06,3,IOPPEMAX(IOPPTR)                              1336
         BNZ   @RF01336                                            1336
*             CALL UCL357I;         /* ENTRY DOES NOT EXIST          */
         BAL   @14,UCL357I                                         1337
*           ELSE                    /*                               */
*             CALL UCL261I;         /* DATA DOES NOT MATCH           */
         B     @RC01336                                            1338
@RF01336 BAL   @14,UCL261I                                         1338
*       END;                        /*                               */
*   RETURN;                         /* RETURN TO HMASMSCN            */
         B     @EL00009                                            1340
*                                                                  1341
*   /*****************************************************************/
*   /*                                                               */
*   /* ENTRY TO PROCESS SAVEMTS KEYWORD                      @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1341
*RSYSSMTS:                          /*                               */
*   ENTRY;                          /*                               */
RSYSSMTS STM   @14,@12,@SA00009                                    1341
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       1342
         MVC   MSGPARTS+1(131),MSGPARTS                            1342
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @06,SCPPTR                                          1343
         LH    @15,SCPPMLN(,@06)                                   1343
         BCTR  @15,0                                               1343
         L     @06,SCPCHAR(,@06)                                   1343
         EX    @15,@SM02281                                        1343
*   IF DEL=ON                       /* IF DELETE                     */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     1344
         BNO   @RF01344                                            1344
*     DO;                           /*                               */
*       IF IOPMTSNP=ON              /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPMTSNP(IOPPTR),B'10000000'                        1346
         BNO   @RF01346                                            1346
*         IOPMTSNP=OFF;             /* DELETE IT                     */
         NI    IOPMTSNP(IOPPTR),B'01111111'                        1347
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC01346                                            1348
@RF01346 BAL   @14,UCL357I                                         1348
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC01344                                            1350
@RF01344 TM    ADD,B'00100000'                                     1350
         BNO   @RF01350                                            1350
*       DO;                         /*                               */
*         IF IOPMTSNP=OFF           /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPMTSNP(IOPPTR),B'10000000'                        1352
         BNZ   @RF01352                                            1352
*           IOPMTSNP=ON;            /* ADD IT                        */
         OI    IOPMTSNP(IOPPTR),B'10000000'                        1353
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC01352                                            1354
@RF01352 BAL   @14,UCL356I                                         1354
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPMTSNP=ON;                /* ALWAYS ADD OPTION             */
         B     @RC01350                                            1356
@RF01350 OI    IOPMTSNP(IOPPTR),B'10000000'                        1356
*   RETURN;                         /* RETURN TO HMASMSCN            */
         B     @EL00009                                            1357
*                                                                  1358
*   /*****************************************************************/
*   /*                                                               */
*   /* ENTRY TO PROCESS SAVESTS KEYWORD                      @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1358
*RSYSSSTS:                          /*                               */
*   ENTRY;                          /*                               */
RSYSSSTS STM   @14,@12,@SA00009                                    1358
*   MSGPARTS='';                    /* BLANK OUT MSG PART            */
         MVI   MSGPARTS,C' '                                       1359
         MVC   MSGPARTS+1(131),MSGPARTS                            1359
*   MSGPART1(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* MOVE TYPE             */
         L     @06,SCPPTR                                          1360
         LH    @15,SCPPMLN(,@06)                                   1360
         BCTR  @15,0                                               1360
         L     @06,SCPCHAR(,@06)                                   1360
         EX    @15,@SM02281                                        1360
*   IF DEL=ON                       /* IF DELETE                     */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    DEL,B'01000000'                                     1361
         BNO   @RF01361                                            1361
*     DO;                           /*                               */
*       IF IOPSTSNP=ON              /* IF OPTION PRESENT             */
*         THEN                      /*                               */
         TM    IOPSTSNP(IOPPTR),B'01000000'                        1363
         BNO   @RF01363                                            1363
*         IOPSTSNP=OFF;             /* DELETE IT                     */
         NI    IOPSTSNP(IOPPTR),B'10111111'                        1364
*       ELSE                        /*                               */
*         CALL UCL357I;             /* OPTION NOT PRESENT            */
         B     @RC01363                                            1365
@RF01363 BAL   @14,UCL357I                                         1365
*     END;                          /* END DELETE REQUEST            */
*   ELSE                            /* IF NOT DELETE                 */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC01361                                            1367
@RF01361 TM    ADD,B'00100000'                                     1367
         BNO   @RF01367                                            1367
*       DO;                         /*                               */
*         IF IOPSTSNP=OFF           /* IF NOT PRESENT                */
*           THEN                    /*                               */
         TM    IOPSTSNP(IOPPTR),B'01000000'                        1369
         BNZ   @RF01369                                            1369
*           IOPSTSNP=ON;            /* ADD IT                        */
         OI    IOPSTSNP(IOPPTR),B'01000000'                        1370
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC01369                                            1371
@RF01369 BAL   @14,UCL356I                                         1371
*       END;                        /* END ADD                       */
*     ELSE                          /* MUST BE REPLACE SO            */
*       IOPSTSNP=ON;                /* ALWAYS ADD OPTION             */
         B     @RC01367                                            1373
@RF01367 OI    IOPSTSNP(IOPPTR),B'01000000'                        1373
*   RETURN;                         /* RETURN TO HMASMSCN            */
         B     @EL00009                                            1374
*                                                                  1375
*   /*****************************************************************/
*   /*                                                               */
*   /* ENTRY TO PROCESS CDSID KEYWORD                        @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1375
*RSYSCDV:                           /*                               */
*   ENTRY;                          /*                               */
RSYSCDV  STM   @14,@12,@SA00009                                    1375
*   SAVDATA(1:LENGTH(IOPSYSID))=SCPSTRNG(1:SCPPMLN);/* SAVE DATA     */
         MVI   SAVDATA+1,C' '                                      1376
         MVC   SAVDATA+2(6),SAVDATA+1                              1376
         L     @06,SCPPTR                                          1376
         LH    @15,SCPPMLN(,@06)                                   1376
         BCTR  @15,0                                               1376
         L     @06,SCPCHAR(,@06)                                   1376
         EX    @15,@SM02291                                        1376
*   MSGPARTS='';                    /*                               */
         MVI   MSGPARTS,C' '                                       1377
         MVC   MSGPARTS+1(131),MSGPARTS                            1377
*   MSGPART1(1:LENGTH(TXTCDSID))=TXTCDSID;/*                         */
         MVC   MSGPART1(8),@CC01498                                1378
*   MSGPART3(1:LENGTH(IOPSYSID))=IOPSYSID;/* SAVE OLD DATA           */
         MVC   MSGPART3(8),IOPSYSID(IOPPTR)                        1379
*   IF REP=ON                       /* IF REPLACE                    */
*     THEN                          /* THEN CHECK PRENSENCE          */
         TM    REP,B'10000000'                                     1380
         BNO   @RF01380                                            1380
*     DO;                           /*                               */
*       IF IOPSYSID=BLANK8&TOTAL=OFF/* IF NOT TOTAL REP              */
*         THEN                      /*                               */
         CLC   IOPSYSID(8,IOPPTR),BLANK8                           1382
         BNE   @RF01382                                            1382
         TM    TOTAL,B'00010000'                                   1382
         BNZ   @RF01382                                            1382
*         CALL UCL358I;             /* ADD ASSUMED                   */
         BAL   @14,UCL358I                                         1383
*       IOPSYSID=SAVDATA(1:LENGTH(IOPSYSID));/* REP OLD DATA         */
@RF01382 MVC   IOPSYSID(8,IOPPTR),SAVDATA                          1384
*     END;                          /*                               */
*   ELSE                            /* IF DELETE                     */
*     IF ADD=ON                     /* IF ADD REQUEST                */
*       THEN                        /* CHECK TO SEE IF THERE         */
         B     @RC01380                                            1386
@RF01380 TM    ADD,B'00100000'                                     1386
         BNO   @RF01386                                            1386
*       DO;                         /*                               */
*         IF IOPSYSID=BLANK8        /* IF NO DATA THERE              */
*           THEN                    /*                               */
         CLC   IOPSYSID(8,IOPPTR),BLANK8                           1388
         BNE   @RF01388                                            1388
*           IOPSYSID=SAVDATA(1:LENGTH(IOPSYSID));/* ADD NEW DATA     */
         MVC   IOPSYSID(8,IOPPTR),SAVDATA                          1389
*         ELSE                      /*                               */
*           CALL UCL356I;           /* OPTION ALREADY THERE          */
         B     @RC01388                                            1390
@RF01388 BAL   @14,UCL356I                                         1390
*       END;                        /*                               */
*     ELSE                          /* MUST BE DELETE                */
*       DO;                         /*                               */
         B     @RC01386                                            1392
@RF01386 DS    0H                                                  1393
*         IF IOPSYSID=SAVDATA(1:LENGTH(IOPSYSID))/* IF MATCH         */
*           THEN                    /*                               */
         CLC   IOPSYSID(8,IOPPTR),SAVDATA                          1393
         BNE   @RF01393                                            1393
*           DO;                     /*                               */
*RSYSCDD:                           /*                               */
*             ENTRY;                /*                               */
         B     @EC01395                                            1395
RSYSCDD  STM   @14,@12,@SA00009                                    1395
@EC01395 DS    0H                                                  1396
*             IOPSYSID=BLANK8;      /* DELETE IT                     */
         MVC   IOPSYSID(8,IOPPTR),BLANK8                           1396
*           END;                    /*                               */
*         ELSE                      /* IF NOT EQUAL                  */
*           IF IOPSYSID=BLANK8      /* IF NO CDSID                   */
*             THEN                  /*                               */
         B     @RC01393                                            1398
@RF01393 CLC   IOPSYSID(8,IOPPTR),BLANK8                           1398
         BNE   @RF01398                                            1398
*             CALL UCL357I;         /* DOES NOT EXIST                */
         BAL   @14,UCL357I                                         1399
*           ELSE                    /*                               */
*             CALL UCL261I;         /* DOES NOT MATCH                */
         B     @RC01398                                            1400
@RF01398 BAL   @14,UCL261I                                         1400
*       END;                        /*                               */
*   RETURN;                         /* RETURN TO HMASMSCN            */
         B     @EL00009                                            1402
*   END RSYSXXX;                    /* END SYSTEM OPTIONS            */
         B     @EL00009                                            1403
*                                                                  1404
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS USED TO RESET THE FIRST TIME REPL SWITCH WHEN */
*   /* ANOTHER KEYWORD IS HIT SO THAT THE REPL COMPRESS/DELETE CODE  */
*   /* WILL BE EXECUTED                                      @Z40SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1404
*RESETRPL:                          /*                       @Z40SP00*/
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                          */
RESETRPL DS    0H                                                  1405
*   FRSTREPL=OFF;                   /* RESET SWITCH          @Z40SP00*/
*   UNCDEL=OFF;                     /* NOT UNC DEL                   */
         NI    FRSTREPL,B'11111001'                                1406
*   END RESETRPL;                   /* RETURN TO SCAN        @Z40SP00*/
@EL00010 DS    0H                                                  1407
@EF00010 DS    0H                                                  1407
@ER00010 BR    @14                                                 1407
         EJECT
*                                                                  1408
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE ADDS THE NEW NAME TAKEN FROM THE SCAN ROUTINE TO */
*   /* THE IOP USER DATA NAME LIST IF THE OPERATION TOTAL NEW OR     */
*   /* REPLACE                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1408
*ELEMSCAN:                          /*                       @ZD00004*/
*                                                                  1408
*   /*****************************************************************/
*   /*                                                               */
*   /* THESE ENTRY POINTS ARE CALLED OUT OF SCAN FOR ADD, DEL, AND   */
*   /* REP REQUESTS FOR ONE DATA ITEM                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1408
*RSMDXNAM:                          /* SYSMOD SUBENTRIES             */
*RSMDYNAM:                          /* SYSMOD PTF SUBENTRIES         */
*RMACXV:                            /* MACRO SUBENTRIES              */
*RMODXNAM:                          /* MOD SUBENTRIES                */
*RLMDSYV:                           /* LMOD SUBENTRIES               */
*RDLBSYV:                           /* DLIB SUBENTRIES               */
*   PROCEDURE;                      /*                               */
ELEMSCAN DS    0H                                                  1408
RSMDXNAM DS    0H                                                  1408
RSMDYNAM DS    0H                                                  1408
RMACXV   DS    0H                                                  1408
RMODXNAM DS    0H                                                  1408
RLMDSYV  DS    0H                                                  1408
RDLBSYV  STM   @14,@12,@SA00011                                    1408
*   MSGPART2(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/* SAVE SUBENTRY NAME    */
         L     @06,SCPPTR                                          1409
         LH    @15,SCPPMLN(,@06)                                   1409
         BCTR  @15,0                                               1409
         L     @06,SCPCHAR(,@06)                                   1409
         EX    @15,@SM02289                                        1409
*   VLPDATA=''B;                    /*                               */
         XC    VLPDATA(8),VLPDATA                                  1410
*   VLPDATA(1:VLPDLEN)=BLANK8(1:VLPDLEN);/*                          */
         SLR   @14,@14                                             1411
         IC    @14,VLPDLEN                                         1411
         BCTR  @14,0                                               1411
         EX    @14,@SM02296                                        1411
*   VLPDATA(1:SCPPMLN)=SCPSTRNG(1:SCPPMLN);/*                        */
         EX    @15,@SM02298                                        1412
*   GO TO ELEMCALL;                 /* TO ADD IT             @ZD00006*/
*                                                                  1413
         B     ELEMCALL                                            1413
*   /*****************************************************************/
*   /*                                                               */
*   /* THESE ENTRY POINTS ARE CALLED FOR UNCONDITIONAL DELETES FOR A */
*   /* LIST OF ITEMS                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1414
*RSMDWDEL:                          /* SYSMOD SUBENTRIES             */
*RSMDXDEL:                          /* SYSMOD SUBENTRIES             */
*RSMDYDEL:                          /* SYSMOD SUBENTRIES             */
*RSMDZDEL:                          /* SYSMOD SUBENTRIES             */
*RMACXD:                            /* MACRO SUBENTRIES              */
*RMODUMDD:                          /* MODULE UMIDS                  */
*RMODLMDD:                          /* MODULE LMODS                  */
*RMODTALD:                          /* MODULE TALIAS                 */
*RMODDALD:                          /* MODULE DALIAS                 */
*RLMDSYD:                           /* LMOD SYSLIBS                  */
*RDLBSYD:                           /* DLIB SYSLIBS                  */
*   ENTRY;                          /*                               */
RSMDWDEL DS    0H                                                  1414
RSMDXDEL DS    0H                                                  1414
RSMDYDEL DS    0H                                                  1414
RSMDZDEL DS    0H                                                  1414
RMACXD   DS    0H                                                  1414
RMODUMDD DS    0H                                                  1414
RMODLMDD DS    0H                                                  1414
RMODTALD DS    0H                                                  1414
RMODDALD DS    0H                                                  1414
RLMDSYD  DS    0H                                                  1414
RDLBSYD  STM   @14,@12,@SA00011                                    1414
*   UNCDEL=ON;                      /* SET SW                        */
         OI    UNCDEL,B'00000100'                                  1415
*   GO TO ELEMCALL;                 /* TO ADD IT             @ZD00006*/
*                                                                  1416
         B     ELEMCALL                                            1416
*   /*****************************************************************/
*   /*                                                               */
*   /* SET VLU FUNCTION BASED ON TYPE REQUEST                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1417
*ELEMCALL:                          /* COMMON ADD/DEL/REP LOGIC      */
*   IF ADD=ON                       /* IF ADD REQUEST                */
*       ×TOTAL=ON                   /* OR TOTAL REP                  */
*     THEN                          /*                               */
ELEMCALL TM    ADD,B'00110000'                                     1417
         BZ    @RF01417                                            1417
*     VLPFUNCT=VLPADD;              /* SET VLU FUNCTION TO ADD       */
         MVI   VLPFUNCT,X'01'                                      1418
*   ELSE                            /* NOT ADD REQUEST               */
*     IF REP=ON                     /* IF REPLACE REQUEST            */
*       THEN                        /* THEN                          */
         B     @RC01417                                            1419
@RF01417 TM    REP,B'10000000'                                     1419
         BNO   @RF01419                                            1419
*       DO;                                                        1420
*         IF FRSTREPL=OFF           /* IF FIRST TIME FOR THIS TYPE   */
*           THEN                    /* THEN SET                      */
         TM    FRSTREPL,B'00000010'                                1421
         BNZ   @RF01421                                            1421
*           DO;                     /*                               */
*             VLPFUNCT=VLPREP;      /* VLU FUNCTION TO REPLACE       */
         MVI   VLPFUNCT,X'03'                                      1423
*             FRSTREPL=ON;          /* RESET SW                      */
         OI    FRSTREPL,B'00000010'                                1424
*           END;                    /*                               */
*         ELSE                      /* IF SUBSEQUENT REP PASS        */
*           VLPFUNCT=VLPADD;        /* THEN FUNCTION IS ADD          */
         B     @RC01421                                            1426
@RF01421 MVI   VLPFUNCT,X'01'                                      1426
*       END;                                                       1427
*     ELSE                          /* NOT REP OR ADD - MUST BE DEL  */
*       IF UNCDEL=ON                /* IF DEL ALL OF THIS TYPE       */
*         THEN                      /*                               */
         B     @RC01419                                            1428
@RF01419 TM    UNCDEL,B'00000100'                                  1428
         BNO   @RF01428                                            1428
*         VLPFUNCT=VLPCLR;          /* SET VLU FUNCTION TO CLEAR     */
         MVI   VLPFUNCT,X'04'                                      1429
*       ELSE                        /*                               */
*         VLPFUNCT=VLPDEL;          /* SET TO DEL ONE ENTRY          */
*                                                                  1430
         B     @RC01428                                            1430
@RF01428 MVI   VLPFUNCT,X'02'                                      1430
*   /*****************************************************************/
*   /*                                                               */
*   /* SET TYPES FOR POSSIBLE MESSAGES FROM VLU                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1431
*   VLPMTYPE=CCATYPEA(IOPTYPE);     /*                               */
@RC01428 DS    0H                                                  1431
@RC01419 DS    0H                                                  1431
@RC01417 SLR   @06,@06                                             1431
         IC    @06,IOPTYPE(,IOPPTR)                                1431
         SLA   @06,3                                               1431
         L     @01,CCATPAD(,CCAPTR)                                1431
         ALR   @01,@06                                             1431
         AL    @01,@CF02300                                        1431
         MVC   VLPMTYPE(8),CCATYPEA(@01)                           1431
*   VLPMNAME=IOPNAME;               /*                               */
         MVC   VLPMNAME(8),IOPNAME(IOPPTR)                         1432
*   VLPSTYPE=MSGPART1;              /*                               */
*                                                                  1433
         MVC   VLPSTYPE(16),MSGPART1                               1433
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL HMASMVLU AND PROCESS RETURN CODE                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1434
*   CALL HMASMVLU(HMASMVLP);        /*                               */
         L     @15,@CV01412                                        1434
         LA    @01,@AL01434                                        1434
         BALR  @14,@15                                             1434
*   UCLRTNCD=MAX(UCLRTNCD,VLPRETRN);/*                               */
         SLR   @06,@06                                             1435
         IC    @06,UCLRTNCD                                        1435
         SLR   @15,@15                                             1435
         IC    @15,VLPRETRN                                        1435
         CR    @06,@15                                             1435
         BNL   *+6
         LR    @06,@15                                             1435
         STC   @06,UCLRTNCD                                        1435
*   IF VLPRETRN>VLPWARN             /* IF BAD RC                     */
*     THEN                          /*                               */
         CLI   VLPRETRN,4                                          1436
         BNH   @RF01436                                            1436
*     ERR2SW=ON;                    /* SET ERR SW                    */
         OI    ERR2SW,B'01000000'                                  1437
*   RETURN;                         /* RETURN TO THE SCAN ROUTINE    */
@EL00011 DS    0H                                                  1438
@EF00011 DS    0H                                                  1438
@ER00011 LM    @14,@12,@SA00011                                    1438
         BR    @14                                                 1438
*   END ELEMSCAN;                   /*                               */
         B     @EL00011                                            1439
*                                                                  1440
*   /*****************************************************************/
*   /*                                                               */
*   /* A SYNTAX ERROR WAS DETECTED BY A SCAN EXIT ROUTINE - INDICATE */
*   /* THE ERROR TO THE UCL CONTROL TABLE AND STOP THE SCAN          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1440
*RXTRADTA:                                                         1440
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                          */
RXTRADTA DS    0H                                                  1441
*   ERRAFTPR=ON;                    /* SET ERROR CONTROL SWITCH      */
         OI    ERRAFTPR,B'00010000'                                1441
*   SCPRETRN=SCPSTOP;               /*                               */
         L     @06,SCPPTR                                          1442
         MVI   SCPRETRN(@06),X'08'                                 1442
*   RETURN;                         /* RETURN BUT STOP THE SCAN      */
@EL00012 DS    0H                                                  1443
@EF00012 DS    0H                                                  1443
@ER00012 BR    @14                                                 1443
*   END RXTRADTA;                   /*                               */
*                                                                  1445
*   /*****************************************************************/
*   /*                                                               */
*   /* THE TERMINATING UCL CONTROL STATEMENT WAS FOUND BY THE SCAN   */
*   /* ROUTINE. THE CONTROL SWITCH INDICATING SUCCESSFUL COMPLETION  */
*   /* OF THE UPDATE IS SET AND CONTROL IS RETURNED TO THE SCAN      */
*   /* ROUTINE TO ALLOW IT TO FINISH                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1445
*RENDUCL:                                                          1445
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                          */
RENDUCL  DS    0H                                                  1446
*   UCLTERM=ON;                     /* SET ALL OK INDICATOR  @Z63SP00*/
         OI    UCLTERM,B'00001000'                                 1446
*   RETURN;                         /* SKIP PAST REG LOAD    @Z63SP00*/
@EL00013 DS    0H                                                  1447
@EF00013 DS    0H                                                  1447
@ER00013 BR    @14                                                 1447
*   END RENDUCL;                    /*                               */
*                                                                  1449
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN THE CONTROL STATEMENT LOOKING FOR A PERIOD (.)   @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1449
*FLUSH:                                                            1449
*   PROCEDURE;                      /*                               */
FLUSH    STM   @14,@12,@SA00014                                    1449
*   SCPSRCH=ADFLSHTB;               /* POINT AT THE FLUSH TABLE      */
         L     @06,SCPPTR                                          1450
         MVC   SCPSRCH(4,@06),ADFLSHTB                             1450
*   SCPCHAR=ADDR(CRPBUFFR);         /* POINT TO SAVED RCD    @Z40SP00*/
         L     @15,@PC00001+4                                      1451
         LA    @15,CRPBUFFR(,@15)                                  1451
         ST    @15,SCPCHAR(,@06)                                   1451
*   CALL HMASMSCN(HMASMSCP);        /* SCAN FOR ENDING .     @Z40SP00*/
         ST    @06,@AL00001                                        1452
         L     @15,@CV01410                                        1452
         LA    @01,@AL00001                                        1452
         BALR  @14,@15                                             1452
*   ERR1SW=ON;                      /*                               */
         OI    ERR1SW,B'10000000'                                  1453
*   RETURN CODE(0);                 /* RETURN                        */
         SLR   @15,@15                                             1454
         L     @14,@SA00014                                        1454
         LM    @00,@12,@SA00014+8                                  1454
         BR    @14                                                 1454
*   END FLUSH;                      /*                               */
*                                                                  1455
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN EXIT FOR THE FLUSH ROUTINE                       @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1456
*RFLUSHCH:                                                         1456
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                          */
RFLUSHCH DS    0H                                                  1457
*   IF SCPPMLN=ZERO                 /* TEST FOR ZERO PASS BACK       */
*     THEN                                                         1457
         L     @06,SCPPTR                                          1457
         ICM   @15,3,SCPPMLN(@06)                                  1457
         BNZ   @RF01457                                            1457
*     SCPPMLN=1;                    /* IF ZERO, SET TO ONE   @Z40SP00*/
         MVC   SCPPMLN(2,@06),@CH00043                             1458
*   RETURN;                         /* RETURN TO THE SCAN ROUTINE    */
@EL00015 DS    0H                                                  1459
@EF00015 DS    0H                                                  1459
@ER00015 BR    @14                                                 1459
*   END RFLUSHCH;                   /*                               */
         B     @EL00015                                            1460
*                                                                  1461
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO CHECK MODIFIED ENTRY TO INSURE SUFFICIENT   */
*   /* INFO IN ENTRY                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1461
*CPLTCHK:                           /*                               */
*   PROCEDURE;                      /*                               */
CPLTCHK  STM   @14,@12,@SA00016                                    1461
*   DECLARE                         /*                               */
*     ENTCNT FIXED(31);             /*                               */
*/********************************************************************/
*/*                                                                  */
*/* SYSMOD TYPE CDS UPDATES - THE ENTRY MUST CONTAIN                 */
*/*   1.RECDATE IF NOT DUMMY                                         */
*/*   2.APPDATE IF CDS                                               */
*/*   3.ACCDATE IF ACDS                                              */
*/*   4.AT LEAST ONE SUBENTRY IF NOT DUMMY                           */
*/*                                                                  */
*/********************************************************************/
*                                                                  1463
*   IF PTF=ON                       /* TEST FOR A PTF TYPE UPDATE    */
*     THEN                          /* YES                   @VS05270*/
         TM    PTF,B'10000000'                                     1463
         BNO   @RF01463                                            1463
*     DO;                           /*                       @OY04178*/
*                                                                  1464
*       /*************************************************************/
*       /*                                                           */
*       /* RESET TYPE ENTRY INDICATORS                               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1465
*       IOPDELP=OFF;                /* RESET ALL BYTES       @ZD00004*/
*       IOPIRQP=OFF;                /*                               */
*       IOPNPRP=OFF;                /*                               */
*       IOPPREP=OFF;                /*                               */
*       IOPREQP=OFF;                /*                               */
*       IOPSUPP=OFF;                /*                               */
         NI    IOPDELP(IOPPTR),B'00000011'                         1470
*       IOPSBYP=OFF;                /*                               */
*       IOPDBYP=OFF;                /*                               */
         NI    IOPSBYP(IOPPTR),B'00111111'                         1472
*       IF IOPSBYNO^=BLANK7         /* IF NO SUPBY NUMBER            */
*         THEN                      /*                       @ZD00008*/
         CLC   IOPSBYNO(7,IOPPTR),@CC01416                         1473
         BE    @RF01473                                            1473
*         IOPSBYP=ON;               /* SUPBY PRESENT         @ZD00008*/
         OI    IOPSBYP(IOPPTR),B'10000000'                         1474
*       IF IOPDBYNO^=BLANK7         /* IF NO DELBY NUMBER            */
*         THEN                      /*                               */
@RF01473 CLC   IOPDBYNO(7,IOPPTR),@CC01416                         1475
         BE    @RF01475                                            1475
*         IOPDBYP=ON;               /* DELBY PRESENT                 */
*                                                                  1476
         OI    IOPDBYP(IOPPTR),B'01000000'                         1476
*       /*************************************************************/
*       /*                                                           */
*       /* NOW CHECK AND SET DEFAULT SYSMOD TYPE FIELD               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1477
*       IF IOPPTYPE=ZERO            /* IF NO TYPE                    */
*         THEN                      /* THEN                          */
@RF01475 CLI   IOPPTYPE(IOPPTR),0                                  1477
         BNE   @RF01477                                            1477
*         IF IOPDBYP=ON             /* IF SYSMOD DELETED THEN TYPE   */
*           THEN                    /*                               */
         TM    IOPDBYP(IOPPTR),B'01000000'                         1478
         BNO   @RF01478                                            1478
*           IOPPTYPE=IOPPFUNC;      /* IS FUNCTION                   */
         MVI   IOPPTYPE(IOPPTR),X'04'                              1479
*         ELSE                      /*                               */
*           IOPPTYPE=IOPPPTF;       /* DEFAULT IS PTF                */
*                                                                  1480
         B     @RC01478                                            1480
@RF01478 MVI   IOPPTYPE(IOPPTR),X'03'                              1480
*       /*************************************************************/
*       /*                                                           */
*       /* IF SUPED ENTRY ONLY THEN ALL OK                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1481
*       SUPONLY=OFF;                /*                               */
@RC01478 DS    0H                                                  1481
@RF01477 NI    SUPONLY,B'11111110'                                 1481
*       IF IOPSBYP=ON               /* IF SUPBY                      */
*           &IOPPTFND(1)=IOPEOLST   /* AND HAS NO MODS       @ZD00004*/
*         THEN                      /* THEN DUMMY SUP ONLY   @ZA14010*/
         TM    IOPSBYP(IOPPTR),B'10000000'                         1482
         BNO   @RF01482                                            1482
         CLI   IOPPTFND(IOPPTR),255                                1482
         BNE   @RF01482                                            1482
*         DO;                       /*                               */
*           IOPDUMMP=ON;            /* PTF IS SUPBY ONLY             */
         OI    IOPDUMMP(IOPPTR),B'00000100'                        1484
*           SUPONLY=ON;             /*                               */
         OI    SUPONLY,B'00000001'                                 1485
*         END;                      /*                               */
*       IF IOPDBYP=ON               /* DELETED ARE ALSO DUMMYS       */
*           &IOPPTFND(1)=IOPEOLST   /*                               */
*         THEN                      /*                               */
@RF01482 TM    IOPDBYP(IOPPTR),B'01000000'                         1487
         BNO   @RF01487                                            1487
         CLI   IOPPTFND(IOPPTR),255                                1487
         BNE   @RF01487                                            1487
*         IOPDUMMP=ON;              /*                               */
*                                                                  1488
         OI    IOPDUMMP(IOPPTR),B'00000100'                        1488
*       /*************************************************************/
*       /*                                                           */
*       /* IF NOT SUPED ONLY RESET TYPE ENTRY PRESENT SW AND CHECK TO*/
*       /* INSURE AT LEAST ONE MOD/MAC/SRC ENTRY PRESENT             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1489
*       ELSE                        /*                               */
*         DO;                       /*                               */
         B     @RC01487                                            1489
@RF01487 DS    0H                                                  1490
*           DO PTFX=1 BY 1 WHILE    /* LOOP THRU PTF ENTRY   @ZA14010*/
*                 IOPPTFND(PTFX)^=IOPEOLST;/* TILL END       @ZD00004*/
         LA    @06,1                                               1490
         ST    @06,PTFX                                            1490
         B     @DE01490                                            1490
@DL01490 DS    0H                                                  1491
*             IF IOPPIND(PTFX)=IOPPREQ/* IF PTF HAS REQS     @ZA14010*/
*               THEN                /*                       @ZA14010*/
         L     @06,PTFX                                            1491
         MH    @06,@CH00538                                        1491
         SLR   @15,@15                                             1491
         IC    @15,IOPPIND-9(@06,IOPPTR)                           1491
         CH    @15,@CH01158                                        1491
         BNE   @RF01491                                            1491
*               IOPREQP=ON;         /* SET BIT IN STATUS     @ZD00004*/
         OI    IOPREQP(IOPPTR),B'00001000'                         1492
*             ELSE                  /*                               */
*               IF IOPPIND(PTFX)=IOPPPRE/* IF PTF HAS PRES   @ZD00004*/
*                 THEN              /*                       @ZD00004*/
         B     @RC01491                                            1493
@RF01491 L     @06,PTFX                                            1493
         MH    @06,@CH00538                                        1493
         SLR   @15,@15                                             1493
         IC    @15,IOPPIND-9(@06,IOPPTR)                           1493
         CH    @15,@CH01152                                        1493
         BNE   @RF01493                                            1493
*                 IOPPREP=ON;       /* SET BIT IN STATUS     @ZD00004*/
         OI    IOPPREP(IOPPTR),B'00010000'                         1494
*               ELSE                /*                               */
*                 IF IOPPIND(PTFX)=IOPPNPR/* IF PTF HAS NPRES      1495
*                                                            @ZD00004*/
*                   THEN            /*                       @ZD00004*/
         B     @RC01493                                            1495
@RF01493 L     @06,PTFX                                            1495
         MH    @06,@CH00538                                        1495
         SLR   @15,@15                                             1495
         IC    @15,IOPPIND-9(@06,IOPPTR)                           1495
         CH    @15,@CH01154                                        1495
         BNE   @RF01495                                            1495
*                   IOPNPRP=ON;     /* SET BIT IN STATUS     @ZD00004*/
         OI    IOPNPRP(IOPPTR),B'00100000'                         1496
*                 ELSE              /*                               */
*                   IF IOPPIND(PTFX)=IOPPSUPV/* IF PTF HAS SUPS    1497
*                                                            @ZD00004*/
*                     THEN          /*                       @ZD00004*/
         B     @RC01495                                            1497
@RF01495 L     @06,PTFX                                            1497
         MH    @06,@CH00538                                        1497
         SLR   @15,@15                                             1497
         IC    @15,IOPPIND-9(@06,IOPPTR)                           1497
         CH    @15,@CH01156                                        1497
         BNE   @RF01497                                            1497
*                     IOPSUPP=ON;   /* SET BIT IN STATUS     @ZD00004*/
         OI    IOPSUPP(IOPPTR),B'00000100'                         1498
*                   ELSE            /*                               */
*                     IF IOPPIND(PTFX)=IOPPIRQ/* IF PTF HAS IFREQ  1499
*                                                            @ZD00004*/
*                       THEN        /*                       @ZD00004*/
         B     @RC01497                                            1499
@RF01497 L     @06,PTFX                                            1499
         MH    @06,@CH00538                                        1499
         SLR   @15,@15                                             1499
         IC    @15,IOPPIND-9(@06,IOPPTR)                           1499
         CH    @15,@CH01160                                        1499
         BNE   @RF01499                                            1499
*                       IOPIRQP=ON; /* SET BIT IN STATUS     @ZD00004*/
         OI    IOPIRQP(IOPPTR),B'01000000'                         1500
*                     ELSE          /*                               */
*                       IF IOPPIND(PTFX)=IOPPDEL/* IF PTF HAS DELS 1501
*                                                            @ZD00004*/
*                         THEN      /*                       @ZD00004*/
         B     @RC01499                                            1501
@RF01499 L     @06,PTFX                                            1501
         MH    @06,@CH00538                                        1501
         SLR   @15,@15                                             1501
         IC    @15,IOPPIND-9(@06,IOPPTR)                           1501
         CH    @15,@CH01164                                        1501
         BNE   @RF01501                                            1501
*                         IOPDELP=ON;/* SET BIT IN STATUS    @ZD00004*/
         OI    IOPDELP(IOPPTR),B'10000000'                         1502
*                       ELSE        /*                               */
*                         IF IOPPIND(PTFX)=IOPPSBY/* IF SUPBY        */
*                           THEN    /*                               */
         B     @RC01501                                            1503
@RF01501 L     @06,PTFX                                            1503
         MH    @06,@CH00538                                        1503
         SLR   @15,@15                                             1503
         IC    @15,IOPPIND-9(@06,IOPPTR)                           1503
         CH    @15,@CH01168                                        1503
         BNE   @RF01503                                            1503
*                           IOPSBYP=ON;/* SET SBY PRESENT            */
         OI    IOPSBYP(IOPPTR),B'10000000'                         1504
*           END;                    /*                       @ZA14010*/
@RF01503 DS    0H                                                  1505
@RC01501 DS    0H                                                  1505
@RC01499 DS    0H                                                  1505
@RC01497 DS    0H                                                  1505
@RC01495 DS    0H                                                  1505
@RC01493 DS    0H                                                  1505
@RC01491 LA    @06,1                                               1505
         AL    @06,PTFX                                            1505
         ST    @06,PTFX                                            1505
@DE01490 L     @06,PTFX                                            1505
         MH    @06,@CH00538                                        1505
         SLR   @15,@15                                             1505
         IC    @15,IOPPTFND-9(@06,IOPPTR)                          1505
         CH    @15,@CH00726                                        1505
         BNE   @DL01490                                            1505
*           STOP=OFF;               /* SET TO CONTINUE LOOP          */
         NI    STOP,B'11011111'                                    1506
*           DO PTFX=1 BY 1 WHILE(   /* LOOP THRU PTF ENTRY   @ZD00004*/
*                 IOPPTFND(PTFX)^=IOPEOLST/* UNTIL END       @ZD00004*/
*                 &STOP=OFF);       /* AND VALID NTRY NT FND         */
         LA    @06,1                                               1507
         ST    @06,PTFX                                            1507
         B     @DE01507                                            1507
@DL01507 DS    0H                                                  1508
*             IF IOPPIND(PTFX)=IOPPMOD/* IF MOD                      */
*                 ×IOPPIND(PTFX)=IOPPZAP/* OR ZAP                    */
*                 ×IOPPIND(PTFX)=IOPPXPD/* OR EXPAND ZAP             */
*                 ×IOPPIND(PTFX)=IOPPMCR/* OR MAC                    */
*                 ×IOPPIND(PTFX)=IOPPMCU/* OR MACUPD                 */
*                 ×IOPPIND(PTFX)=IOPPSCR/* OR SRC                    */
*                 ×IOPPIND(PTFX)=IOPPSCU/* OR SRCUPD                 */
*                 ×IOPPIND(PTFX)=IOPPASM/* OR ASSEM                  */
*                 ×IOPPIND(PTFX)=IOPPRMOD/* OR REGRESSED MOD         */
*                 ×IOPPIND(PTFX)=IOPPRZAP/* OR REGRESSED ZAP         */
*                 ×IOPPIND(PTFX)=IOPPRXPD/* OR REGRESSED EXPAND ZAP  */
*                 ×IOPPIND(PTFX)=IOPPRMCR/* OR REGRESSED MAC         */
*                 ×IOPPIND(PTFX)=IOPPRMCU/* OR REGRESSED MACUPD      */
*                 ×IOPPIND(PTFX)=IOPPRSCR/* OR REGRESSED SRC         */
*                 ×IOPPIND(PTFX)=IOPPRSCU/* OR REGRESSED SRCUPD      */
*               THEN                /* THEN IT IS VALID      @ZD00002*/
         L     @06,PTFX                                            1508
         MH    @06,@CH00538                                        1508
         SLR   @15,@15                                             1508
         IC    @15,IOPPIND-9(@06,IOPPTR)                           1508
         CH    @15,@CH00043                                        1508
         BE    @RT01508                                            1508
         CH    @15,@CH00291                                        1508
         BE    @RT01508                                            1508
         CH    @15,@CH00045                                        1508
         BE    @RT01508                                            1508
         CH    @15,@CH00145                                        1508
         BE    @RT01508                                            1508
         CH    @15,@CH00061                                        1508
         BE    @RT01508                                            1508
         CH    @15,@CH00307                                        1508
         BE    @RT01508                                            1508
         CH    @15,@CH00037                                        1508
         BE    @RT01508                                            1508
         CH    @15,@CH00036                                        1508
         BE    @RT01508                                            1508
         CH    @15,@CH00618                                        1508
         BE    @RT01508                                            1508
         CH    @15,@CH00620                                        1508
         BE    @RT01508                                            1508
         CH    @15,@CH00622                                        1508
         BE    @RT01508                                            1508
         CH    @15,@CH00624                                        1508
         BE    @RT01508                                            1508
         CH    @15,@CH00626                                        1508
         BE    @RT01508                                            1508
         CH    @15,@CH00628                                        1508
         BE    @RT01508                                            1508
         CH    @15,@CH00630                                        1508
         BNE   @RF01508                                            1508
@RT01508 DS    0H                                                  1509
*               STOP=ON;            /* STOP LOOP                     */
         OI    STOP,B'00100000'                                    1509
*           END;                    /*                               */
@RF01508 LA    @06,1                                               1510
         AL    @06,PTFX                                            1510
         ST    @06,PTFX                                            1510
@DE01507 L     @06,PTFX                                            1510
         MH    @06,@CH00538                                        1510
         SLR   @15,@15                                             1510
         IC    @15,IOPPTFND-9(@06,IOPPTR)                          1510
         CH    @15,@CH00726                                        1510
         BE    @DC01507                                            1510
         TM    STOP,B'00100000'                                    1510
         BZ    @DL01507                                            1510
@DC01507 DS    0H                                                  1511
*           IF IOPSBYP=ON           /* IF SYSMOD HAS SUPS            */
*               &STOP=OFF           /* AND NO ELEMENTS               */
*               &IOPREQP=OFF        /* AND NO REQS                   */
*               &IOPPREP=OFF        /* AND NO PRES                   */
*               &IOPNPRP=OFF        /* AND NO NPRES                  */
*               &IOPSUPP=OFF        /* AND NO SUPS                   */
*               &IOPIRQP=OFF        /* AND NO IFREQS                 */
*               &IOPDELP=OFF        /* AND NO DELETES                */
*             THEN                  /* THEN PTF REQUIRES NO OTHER    */
         TM    IOPSBYP(IOPPTR),B'10000000'                         1511
         BNO   @RF01511                                            1511
         TM    STOP,B'00100000'                                    1511
         BNZ   @RF01511                                            1511
         TM    IOPREQP(IOPPTR),B'11111100'                         1511
         BNZ   @RF01511                                            1511
*             SUPONLY=ON;           /* DATA                          */
         OI    SUPONLY,B'00000001'                                 1512
*           ELSE                    /*                               */
*             IF STOP=OFF           /* IF NO VALID ENTRY FND         */
*               THEN                /*                               */
         B     @RC01511                                            1513
@RF01511 TM    STOP,B'00100000'                                    1513
         BNZ   @RF01513                                            1513
*               CALL UCL257I(TXTSUBNT);/* SUBNTRY REQUIRED           */
         LA    @01,@AL01514                                        1514
         BAL   @14,UCL257I                                         1514
*         END;                      /* END DATE AND MOD OK   @ZA14010*/
*                                                                  1515
@RF01513 DS    0H                                                  1515
@RC01511 DS    0H                                                  1516
*       /*************************************************************/
*       /*                                                           */
*       /* SET TYPE SYSMOD FOR POSSIBLE MESSAGES                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1516
*       IF IOPPTYPE=IOPPPTF         /*                               */
*         THEN                      /*                               */
@RC01487 CLI   IOPPTYPE(IOPPTR),3                                  1516
         BNE   @RF01516                                            1516
*         TXTTYPE=TXTPTF;           /*                               */
         MVC   TXTTYPE(8),@CC01520                                 1517
*       ELSE                        /*                               */
*         IF IOPPTYPE=IOPPFUNC      /*                               */
*           THEN                    /*                               */
         B     @RC01516                                            1518
@RF01516 CLI   IOPPTYPE(IOPPTR),4                                  1518
         BNE   @RF01518                                            1518
*           TXTTYPE=TXTFUNC;        /*                               */
         MVC   TXTTYPE(8),@CC01522                                 1519
*         ELSE                      /*                               */
*           IF IOPPTYPE=IOPPAPAR    /*                               */
*             THEN                  /*                               */
         B     @RC01518                                            1520
@RF01518 CLI   IOPPTYPE(IOPPTR),2                                  1520
         BNE   @RF01520                                            1520
*             TXTTYPE=TXTAPAR;      /*                               */
         MVC   TXTTYPE(8),@CC01524                                 1521
*           ELSE                    /*                               */
*             TXTTYPE=TXTUSER;      /*                               */
*                                                                  1522
         B     @RC01520                                            1522
@RF01520 MVC   TXTTYPE(8),@CC01526                                 1522
*       /*************************************************************/
*       /*                                                           */
*       /* IF SUPERCEDED ONLY OR DELETED THEN CHECK TO INSURE THAT NO*/
*       /* EXTRA DATA WAS SPECIFIED                                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1523
*       IF SUPONLY=ON               /* IF SUPED ONLY                 */
*           ×IOPDBYP=ON             /* OR DELETED THEN               */
*         THEN                      /* NO TYPE ASSOCIATED            */
@RC01520 DS    0H                                                  1523
@RC01518 DS    0H                                                  1523
@RC01516 TM    SUPONLY,B'00000001'                                 1523
         BO    @RT01523                                            1523
         TM    IOPDBYP(IOPPTR),B'01000000'                         1523
         BNO   @RF01523                                            1523
@RT01523 DS    0H                                                  1524
*         DO;                       /*                               */
*           IF IOPDBYP=ON           /* SET TYPE FOR MSG              */
*             THEN                  /*                               */
         TM    IOPDBYP(IOPPTR),B'01000000'                         1525
         BNO   @RF01525                                            1525
*             MSGPART1=TXTDELTD;    /*                               */
         MVC   MSGPART1(16),@CC01531                               1526
*           ELSE                    /*                               */
*             MSGPART1=TXTSUPED;    /*                               */
         B     @RC01525                                            1527
@RF01525 MVC   MSGPART1(16),@CC01534                               1527
*           IF IOPDBYP=ON           /* IF DELETED SYSMOD             */
*             THEN                  /*                               */
@RC01525 TM    IOPDBYP(IOPPTR),B'01000000'                         1528
         BNO   @RF01528                                            1528
*             DO;                   /*                               */
*               IF IOPSBYP=ON&IOPSBYNO(1)^=BLANK/* AND ALSO SUPED    */
*                 THEN              /* WITH LAST SUP FILLED IN       */
         TM    IOPSBYP(IOPPTR),B'10000000'                         1530
         BNO   @RF01530                                            1530
         CLI   IOPSBYNO(IOPPTR),C' '                               1530
         BE    @RF01530                                            1530
*                 CALL UCL341I(TXTDELBY,TXTLSUP);/* MUTUALLY EXC     */
         LA    @01,@AL01531                                        1531
         BAL   @14,UCL341I                                         1531
*               IF IOPPTYPE^=IOPPFUNC/* IF NOT FUNCTION SYSMOD       */
*                 THEN              /*                               */
@RF01530 CLI   IOPPTYPE(IOPPTR),4                                  1532
         BE    @RF01532                                            1532
*                 CALL UCL341I(TXTDELBY,TXTTYPE);/*                  */
         LA    @01,@AL01533                                        1533
         BAL   @14,UCL341I                                         1533
*               IF IOPPTFND(1)^=IOPEOLST/* IF ANY SUBENTRIES         */
*                 THEN              /*                               */
@RF01532 CLI   IOPPTFND(IOPPTR),255                                1534
         BE    @RF01534                                            1534
*                 CALL UCL402I(TXTSUBNT,MSGPART1);/*                 */
         LA    @01,@AL01535                                        1535
         BAL   @14,UCL402I                                         1535
*             END;                  /*                               */
@RF01534 DS    0H                                                  1537
*           IF IOPPFMID^=BLANK7     /* IF FMID SPECIFIED             */
*             THEN                  /*                               */
@RF01528 CLC   IOPPFMID(7,IOPPTR),@CC01416                         1537
         BE    @RF01537                                            1537
*             CALL UCL402I(TXTFMID,MSGPART1);/* INVALID              */
         LA    @01,@AL01538                                        1538
         BAL   @14,UCL402I                                         1538
*           IF IOPRECD^=ZERO        /*                               */
*             THEN                  /*                               */
@RF01537 ICM   @06,7,IOPRECD(IOPPTR)                               1539
         BZ    @RF01539                                            1539
*             CALL UCL402I(TXTRECDT,MSGPART1);/*                     */
         LA    @01,@AL01540                                        1540
         BAL   @14,UCL402I                                         1540
*           IF IOPAPPD^=ZERO        /*                               */
*             THEN                  /*                               */
@RF01539 ICM   @06,7,IOPAPPD(IOPPTR)                               1541
         BZ    @RF01541                                            1541
*             CALL UCL402I(TXTAPPDT,MSGPART1);/*                     */
         LA    @01,@AL01542                                        1542
         BAL   @14,UCL402I                                         1542
*           IF IOPRSTD^=ZERO        /*                               */
*             THEN                  /*                               */
@RF01541 ICM   @06,7,IOPRSTD(IOPPTR)                               1543
         BZ    @RF01543                                            1543
*             CALL UCL402I(TXTRESDT,MSGPART1);/*                     */
         LA    @01,@AL01544                                        1544
         BAL   @14,UCL402I                                         1544
*           IF IOPACCD^=ZERO        /*                               */
*             THEN                  /*                               */
@RF01543 ICM   @06,7,IOPACCD(IOPPTR)                               1545
         BZ    @RF01545                                            1545
*             CALL UCL402I(TXTACCDT,MSGPART1);/*                     */
         LA    @01,@AL01546                                        1546
         BAL   @14,UCL402I                                         1546
*           IF IOPAPP=ON            /*                               */
*               ×IOPRES=ON          /*                               */
*               ×IOPACC=ON          /*                               */
*               ×IOPERROR=ON        /*                               */
*               ×IOPBYP=ON          /*                               */
*               ×IOPREGEN=ON        /*                               */
*             THEN                  /*                               */
@RF01545 TM    IOPAPP(IOPPTR),B'11110011'                          1547
         BZ    @RF01547                                            1547
*             CALL UCL402I(TXTSTAT,MSGPART1);/*                      */
         LA    @01,@AL01548                                        1548
         BAL   @14,UCL402I                                         1548
*         END;                      /*                               */
*                                                                  1549
*       /*************************************************************/
*       /*                                                           */
*       /* IF NOR SUPERCEDDED ONLY TYPE ENTRY THEN CHECK TO INSURE   */
*       /* THAT ALL REQUIRED FIELDS ARE PRESENT                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1550
*       ELSE                        /*                               */
*         DO;                       /* NOT SUPED ONLY                */
         B     @RC01523                                            1550
@RF01523 DS    0H                                                  1551
*           IF IOPPFMID=BLANK7      /*                               */
*             THEN                  /*                               */
         CLC   IOPPFMID(7,IOPPTR),@CC01416                         1551
         BNE   @RF01551                                            1551
*             IF IOPPTYPE=IOPPFUNC  /* IF FUNCTION TYPE SYSMOD       */
*               THEN                /* THEN FMID EQUALS              */
         CLI   IOPPTYPE(IOPPTR),4                                  1552
         BNE   @RF01552                                            1552
*               IOPPFMID=IOPNAM17;  /* FUNCTION ID                   */
         MVC   IOPPFMID(7,IOPPTR),IOPNAM17(IOPPTR)                 1553
*             ELSE                  /* FMID REQUIRED FOR ALL OTHER   */
*               IF(ADD=ON×REP=ON)   /* IF ADD OR REP REQUEST         */
*                   &CCAFMID^=BLANK7/* AND FMID SPECIFIED ON EXEC    */
*                 THEN              /*                               */
         B     @RC01552                                            1554
@RF01552 TM    ADD,B'10100000'                                     1554
         BZ    @RF01554                                            1554
         CLC   CCAFMID(7,CCAPTR),@CC01416                          1554
         BE    @RF01554                                            1554
*                 IOPPFMID=CCAFMID; /* USE THAT ONE                  */
         MVC   IOPPFMID(7,IOPPTR),CCAFMID(CCAPTR)                  1555
*               ELSE                /*                               */
*                 CALL UCL257I(TXTFMID);/* ELSE ERROR                */
         B     @RC01554                                            1556
@RF01554 LA    @01,@AL01556                                        1556
         BAL   @14,UCL257I                                         1556
*           IF IOPACC=ON            /* IF ACCEPT INDICATOR           */
*               &(IOPDSID=IOPACDS   /* FOR ACDS              @Z67SP00*/
*               ×IOPAPP=OFF)        /* OFR CDS NO APPLY      @Z67SP00*/
*             THEN                  /* THEN MUST                     */
@RC01554 DS    0H                                                  1557
@RC01552 DS    0H                                                  1557
@RF01551 TM    IOPACC(IOPPTR),B'00100000'                          1557
         BNO   @RF01557                                            1557
         CLI   IOPDSID(IOPPTR),12                                  1557
         BE    @RT01557                                            1557
         TM    IOPAPP(IOPPTR),B'10000000'                          1557
         BNZ   @RF01557                                            1557
@RT01557 DS    0H                                                  1558
*             IOPREGEN=ON;          /* ALSO SET REGEN                */
         OI    IOPREGEN(IOPPTR),B'00000001'                        1558
*           IF IOPREGEN=ON          /* IF REGEN SPECIFIED            */
*             THEN                  /* MUST ALSO SET                 */
@RF01557 TM    IOPREGEN(IOPPTR),B'00000001'                        1559
         BNO   @RF01559                                            1559
*             IOPACC=ON;            /* ACCEPT                        */
         OI    IOPACC(IOPPTR),B'00100000'                          1560
*           IF IOPRES=ON            /* IF RESTORE                    */
*             THEN                  /* THEN MUST                     */
@RF01559 TM    IOPRES(IOPPTR),B'01000000'                          1561
         BNO   @RF01561                                            1561
*             DO;                   /*                               */
*               IOPERROR=ON;        /* SET ERROR                     */
*               IOPAPP=ON;          /* ALSO SET APPLY                */
         OI    IOPERROR(IOPPTR),B'10010000'                        1564
*             END;                  /*                               */
*                                                                  1565
*           /*********************************************************/
*           /*                                                       */
*           /* IF DATE KEYWORD WAS ENTERED AND THE FMID EXEC PARM WAS*/
*           /* ENTERED THEN CHECK THE TYPES OF DATES THAT SHOULD BE  */
*           /* SET BASED ON STATUS INDICATORS                        */
*           /*                                                       */
*           /*********************************************************/
*                                                                  1566
*           IF DATEENT=ON&CCAFMID(1)^=BLANK/* IF DATE AND FMID       */
*             THEN                  /*                               */
@RF01561 TM    DATEENT,B'00100000'                                 1566
         BNO   @RF01566                                            1566
         CLI   CCAFMID(CCAPTR),C' '                                1566
         BE    @RF01566                                            1566
*             DO;                   /*                               */
*               IF IOPRECD(1)=ZERO  /* IF NO RECEIVED DATE           */
*                 THEN              /*                               */
         CLI   IOPRECD(IOPPTR),0                                   1568
         BNE   @RF01568                                            1568
*                 IOPRECD=SAVDATE;  /* PUT IN DATE VALUE             */
         MVC   IOPRECD(3,IOPPTR),SAVDATE                           1569
*               IF IOPAPP=ON×UCLCDS=ON/* IF APPLY STATUS OR CDS      */
*                   &IOPAPPD(1)=ZERO/* BUT NO APPLY DATE             */
*                 THEN              /*                               */
@RF01568 TM    IOPAPP(IOPPTR),B'10000000'                          1570
         BO    @RT01570                                            1570
         L     @06,@PC00001                                        1570
         TM    UCLCDS(@06),B'10000000'                             1570
         BNO   @RF01570                                            1570
         CLI   IOPAPPD(IOPPTR),0                                   1570
         BNE   @RF01570                                            1570
@RT01570 DS    0H                                                  1571
*                 DO;               /*                               */
*                   IOPAPP=ON;      /*                               */
         OI    IOPAPP(IOPPTR),B'10000000'                          1572
*                   IOPAPPD=SAVDATE;/*                               */
         MVC   IOPAPPD(3,IOPPTR),SAVDATE                           1573
*                 END;              /*                               */
*               IF IOPACC=ON×UCLACDS=ON/* IF ACCEPT STAUS OR ACDS    */
*                   &IOPACCD(1)=ZERO/* BUT NO ACCEPT DATE            */
*                 THEN              /*                               */
@RF01570 TM    IOPACC(IOPPTR),B'00100000'                          1575
         BO    @RT01575                                            1575
         L     @06,@PC00001                                        1575
         TM    UCLACDS(@06),B'01000000'                            1575
         BNO   @RF01575                                            1575
         CLI   IOPACCD(IOPPTR),0                                   1575
         BNE   @RF01575                                            1575
@RT01575 DS    0H                                                  1576
*                 DO;               /*                               */
*                   IOPACC=ON;      /*                               */
         OI    IOPACC(IOPPTR),B'00100000'                          1577
*                   IOPACCD=SAVDATE;/*                               */
         MVC   IOPACCD(3,IOPPTR),SAVDATE                           1578
*                 END;              /*                               */
*               IF IOPRES=ON&IOPRSTD(1)=ZERO/* RES NOT DATE          */
*                 THEN              /*                               */
@RF01575 TM    IOPRES(IOPPTR),B'01000000'                          1580
         BNO   @RF01580                                            1580
         CLI   IOPRSTD(IOPPTR),0                                   1580
         BNE   @RF01580                                            1580
*                 IOPRSTD=SAVDATE;  /*                               */
         MVC   IOPRSTD(3,IOPPTR),SAVDATE                           1581
*             END;                  /*                               */
*                                                                  1582
@RF01580 DS    0H                                                  1583
*           /*********************************************************/
*           /*                                                       */
*           /* NOW CHECK FOR MISSING DATE FIELDS BASED ON STATUS     */
*           /* INDICATORS ON CDS SYSMOD ENTRY                        */
*           /*                                                       */
*           /*********************************************************/
*                                                                  1583
*           IF IOPRECD(1)=ZERO      /* IF NO DATE                    */
*             THEN                  /* SOME THERE            @VS05270*/
@RF01566 CLI   IOPRECD(IOPPTR),0                                   1583
         BNE   @RF01583                                            1583
*             CALL UCL257I(TXTRECDT);/* DATE REQUIRED                */
         LA    @01,@AL01584                                        1584
         BAL   @14,UCL257I                                         1584
*           IF IOPACCD=ZERO         /* IF NO ACCEPT DATE             */
*             THEN                  /*                               */
@RF01583 ICM   @06,7,IOPACCD(IOPPTR)                               1585
         BNZ   @RF01585                                            1585
*             DO;                   /*                               */
*               IF UCLACDS=ON×IOPACC=ON/* IF ACDS OR ACCEPT STATUS   */
*                 THEN              /*                               */
         L     @06,@PC00001                                        1587
         TM    UCLACDS(@06),B'01000000'                            1587
         BO    @RT01587                                            1587
         TM    IOPACC(IOPPTR),B'00100000'                          1587
         BNO   @RF01587                                            1587
@RT01587 DS    0H                                                  1588
*                 CALL UCL257I(TXTACCDT);/*                          */
         LA    @01,@AL01588                                        1588
         BAL   @14,UCL257I                                         1588
*             END;                  /*                               */
*           ELSE                    /* IF ACCDATE SPECIFIED THEN     */
*             IOPACC=ON;            /* ASSUME ACC STATUS ALSO        */
         B     @RC01585                                            1590
@RF01585 OI    IOPACC(IOPPTR),B'00100000'                          1590
*           IF IOPRSTD=ZERO         /* IF NO RESTORE DATE BUT HAVE   */
*             THEN                  /*                               */
@RC01585 ICM   @06,7,IOPRSTD(IOPPTR)                               1591
         BNZ   @RF01591                                            1591
*             DO;                   /*                               */
*               IF IOPRES=ON        /*                               */
*                 THEN              /*                               */
         TM    IOPRES(IOPPTR),B'01000000'                          1593
         BNO   @RF01593                                            1593
*                 CALL UCL257I(TXTRESDT);/* NEED RESTORE DATE        */
         LA    @01,@AL01594                                        1594
         BAL   @14,UCL257I                                         1594
*             END;                  /*                               */
*           ELSE                    /*                               */
*             DO;                   /*                               */
         B     @RC01591                                            1596
@RF01591 DS    0H                                                  1597
*               IOPRES=ON;          /*                               */
*               IOPAPP=ON;          /*                               */
*               IOPERROR=ON;        /*                               */
         OI    IOPRES(IOPPTR),B'11010000'                          1599
*             END;                  /*                               */
*           IF IOPAPPD=ZERO         /* IF NO APPLY DATE              */
*             THEN                  /*                               */
@RC01591 ICM   @06,7,IOPAPPD(IOPPTR)                               1601
         BNZ   @RF01601                                            1601
*             DO;                   /*                               */
*               IF UCLCDS=ON×IOPAPP=ON/* IF CDS OF APPLY SPECIFIED   */
*                 THEN              /*                               */
         L     @06,@PC00001                                        1603
         TM    UCLCDS(@06),B'10000000'                             1603
         BO    @RT01603                                            1603
         TM    IOPAPP(IOPPTR),B'10000000'                          1603
         BNO   @RF01603                                            1603
@RT01603 DS    0H                                                  1604
*                 CALL UCL257I(TXTAPPDT);/*                          */
         LA    @01,@AL01604                                        1604
         BAL   @14,UCL257I                                         1604
*             END;                  /*                               */
*           ELSE                    /* IF APPDATE SPECIFIED          */
*             IOPAPP=ON;            /* THEN ASSUME APPLY STATUS ALSO */
         B     @RC01601                                            1606
@RF01601 OI    IOPAPP(IOPPTR),B'10000000'                          1606
*           IF IOPAPPD^=ZERO        /* IF APPLY DATE                 */
*               &IOPAPP=OFF         /* BUT NOT APPLY STATUS          */
*             THEN                  /*                               */
@RC01601 ICM   @06,7,IOPAPPD(IOPPTR)                               1607
         BZ    @RF01607                                            1607
         TM    IOPAPP(IOPPTR),B'10000000'                          1607
         BNZ   @RF01607                                            1607
*             CALL UCL257I(TXTAPPST);/* NEED APPLY STATUS            */
         LA    @01,@AL01608                                        1608
         BAL   @14,UCL257I                                         1608
*           IF IOPACCD^=ZERO        /* IF ACCEPT DATE                */
*               &IOPACC=OFF         /* BUT NOT ACCEPT STATUS         */
*             THEN                  /*                               */
@RF01607 ICM   @06,7,IOPACCD(IOPPTR)                               1609
         BZ    @RF01609                                            1609
         TM    IOPACC(IOPPTR),B'00100000'                          1609
         BNZ   @RF01609                                            1609
*             CALL UCL257I(TXTACCST);/* NEED ACCEPT STATUS           */
         LA    @01,@AL01610                                        1610
         BAL   @14,UCL257I                                         1610
*         END;                      /*                               */
*                                                                  1611
@RF01609 DS    0H                                                  1612
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK FOR INVALID COMBINATIONS OK KEYWORD                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1612
*       IF IOPNPRP=ON               /* IF NPRES                      */
*           &IOPPTYPE^=IOPPFUNC     /* NOT FOR FUNCTION              */
*         THEN                      /*                               */
@RC01523 TM    IOPNPRP(IOPPTR),B'00100000'                         1612
         BNO   @RF01612                                            1612
         CLI   IOPPTYPE(IOPPTR),4                                  1612
         BE    @RF01612                                            1612
*         CALL UCL341I(TXTNPRE,TXTTYPE);/* MUTUALLY EXCLUSIVE        */
         LA    @01,@AL01613                                        1613
         BAL   @14,UCL341I                                         1613
*       IF IOPDELP=ON               /* IF NPRES                      */
*           &IOPPTYPE^=IOPPFUNC     /* NOT FOR FUNCTION              */
*         THEN                      /*                               */
@RF01612 TM    IOPDELP(IOPPTR),B'10000000'                         1614
         BNO   @RF01614                                            1614
         CLI   IOPPTYPE(IOPPTR),4                                  1614
         BE    @RF01614                                            1614
*         CALL UCL341I(TXTDELBY,TXTTYPE);/* MUTUALLY EXCLUSIVE       */
         LA    @01,@AL01615                                        1615
         BAL   @14,UCL341I                                         1615
*       IOPUCLD=CCADATE;            /* SET UCL DATE AND TIME         */
@RF01614 MVC   IOPUCLD(3,IOPPTR),CCADATE(CCAPTR)                   1616
*       IOPUCLT=CCATIME;            /*                               */
         MVC   IOPUCLT(3,IOPPTR),CCATIME(CCAPTR)                   1617
*     END;                          /* END PTF SECTION       @OY04178*/
*                                                                  1619
*/********************************************************************/
*/*                                                                  */
*/*    MODULE TYPE UPDATE - THE ENTRY MUST CONTAIN AT LEAST  @Z63SP00*/
*/*         1. DISTRIBUTION LIBRARY                          @Z63SP00*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1619
*   IF CSECT=ON                     /* TEST FOR A MODULE TYPE UPDATE */
*     THEN                          /* YES - MODULE UPDATE   @Z63SP00*/
@RF01463 TM    CSECT,B'01000000'                                   1619
         BNO   @RF01619                                            1619
*     DO;                                                          1620
*       IF IOPFMID=BLANK7           /* IF NO FMID IN ENTRY           */
*           &(ADD=ON×REP=ON)        /* AND ADD OR REP                */
*           &CCAFMID^=BLANK7        /* AND FMID SPECIFIED ON EXEC    */
*         THEN                      /* THEN USE                      */
         CLC   IOPFMID(7,IOPPTR),@CC01416                          1621
         BNE   @RF01621                                            1621
         TM    ADD,B'10100000'                                     1621
         BZ    @RF01621                                            1621
         CLC   CCAFMID(7,CCAPTR),@CC01416                          1621
         BE    @RF01621                                            1621
*         IOPFMID=CCAFMID;          /* IT IN ENTRY                   */
         MVC   IOPFMID(7,IOPPTR),CCAFMID(CCAPTR)                   1622
*       IF IOPFMID=BLANK7           /* IF NO FMID VALUE              */
*           &(UCLACDS=ON            /* FOR ACDS                      */
*           ×(UCLCDS=ON&TOTAL=ON))  /* IF ADDING NEW CDS ENTRY       */
*         THEN                      /* THEN                          */
@RF01621 CLC   IOPFMID(7,IOPPTR),@CC01416                          1623
         BNE   @RF01623                                            1623
         L     @06,@PC00001                                        1623
         TM    UCLACDS(@06),B'01000000'                            1623
         BO    @RT01623                                            1623
         TM    UCLCDS(@06),B'10000000'                             1623
         BNO   @RF01623                                            1623
         TM    TOTAL,B'00010000'                                   1623
         BNO   @RF01623                                            1623
@RT01623 DS    0H                                                  1624
*         CALL UCL257I(TXTFMID);    /* ISSUE ERROR MSG               */
         LA    @01,@AL01624                                        1624
         BAL   @14,UCL257I                                         1624
*       IF IOPRMID=BLANK7           /* IF NO RMID                    */
*           &IOPFMID^=BLANK7        /* AND FMID SPECIFIED            */
*         THEN                      /*                               */
@RF01623 CLC   IOPRMID(7,IOPPTR),@CC01416                          1625
         BNE   @RF01625                                            1625
         CLC   IOPFMID(7,IOPPTR),@CC01416                          1625
         BE    @RF01625                                            1625
*         IOPRMID=IOPFMID;          /* FMID ALSO RMID                */
         MVC   IOPRMID(7,IOPPTR),IOPFMID(IOPPTR)                   1626
*       IF IOPDLIB=BLANK8           /* IF NO DLIB PRESENT            */
*         THEN                                                     1627
@RF01625 CLC   IOPDLIB(8,IOPPTR),BLANK8                            1627
         BNE   @RF01627                                            1627
*         CALL UCL257I(TXTDIST);    /* DISTLIB REQUIRED              */
         LA    @01,@AL01628                                        1628
         BAL   @14,UCL257I                                         1628
*     END;                                                         1629
@RF01627 DS    0H                                                  1630
*                                                                  1630
*/********************************************************************/
*/*                                                                  */
*/*    LOAD MODULE TYPE CDS UPDATES -- THE ENTRY MUST CONTAIN AT     */
*/*    LEAST                                                 @Z63SP00*/
*/*         1. ONE SYSTEM LIBRARY NAME                       @Z63SP00*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1630
*   IF LMOD=ON                      /* LOAD MODULE TYPE UPDATE ?     */
*     THEN                          /* YES - CHECK THE DATA GIVEN    */
@RF01619 TM    LMOD,B'00100000'                                    1630
         BNO   @RF01630                                            1630
*     DO;                           /*                       @ZD00004*/
*       IF IOPLMDND(1)=IOPEOLST     /* IF NO SYSLIBS                 */
*         THEN                                                     1632
         CLI   IOPLMDND(IOPPTR),255                                1632
         BNE   @RF01632                                            1632
*         CALL UCL257I(TXTSYSLB);   /* SYSLIB REQUIRED               */
         LA    @01,@AL01633                                        1633
         BAL   @14,UCL257I                                         1633
*       ENTCNT=ZERO;                /*                               */
@RF01632 SLR   @06,@06                                             1634
         ST    @06,ENTCNT                                          1634
*       DO LOOPINDX=1 BY 1 WHILE(   /* LOOP THRU SUBENTRIES          */
*             IOPLMDND(LOOPINDX)^=IOPEOLST);/*                       */
         LA    @06,1                                               1635
         ST    @06,LOOPINDX                                        1635
         B     @DE01635                                            1635
@DL01635 DS    0H                                                  1636
*         IF IOPLMIND(LOOPINDX)=IOPLMSYS/* IF SYSLIB                 */
*           THEN                    /*                               */
         LA    @06,1                                               1636
         L     @15,LOOPINDX                                        1636
         MH    @15,@CH00538                                        1636
         SLR   @14,@14                                             1636
         IC    @14,IOPLMIND-9(@15,IOPPTR)                          1636
         CR    @06,@14                                             1636
         BNE   @RF01636                                            1636
*           DO;                     /*                               */
*             ENTCNT=ENTCNT+1;      /* BUMP COUNTER                  */
         AL    @06,ENTCNT                                          1638
         ST    @06,ENTCNT                                          1638
*             IF ENTCNT>IOPLSMAX    /* IF GREATER THAN MAX SYSLIBS   */
*               THEN                /*                               */
         CH    @06,@CH00291                                        1639
         BNH   @RF01639                                            1639
*               DO;                 /*                               */
*                 MSGPART1=TXTSYSLB;/*                               */
         MVI   MSGPART1+8,C' '                                     1641
         MVC   MSGPART1+9(7),MSGPART1+8                            1641
         MVC   MSGPART1(8),@CC01547                                1641
*                 MSGPART2=IOPSYSLB(LOOPINDX);/*                     */
         MVI   MSGPART2+8,C' '                                     1642
         MVC   MSGPART2+9(7),MSGPART2+8                            1642
         ALR   @15,IOPPTR                                          1642
         MVC   MSGPART2(8),IOPSYSLB-9(@15)                         1642
*                 CALL UCL259I;     /*                               */
         BAL   @14,UCL259I                                         1643
*               END;                /*                               */
*           END;                    /*                               */
@RF01639 DS    0H                                                  1646
*       END;                        /*                               */
@RF01636 LA    @06,1                                               1646
         AL    @06,LOOPINDX                                        1646
         ST    @06,LOOPINDX                                        1646
@DE01635 L     @06,LOOPINDX                                        1646
         MH    @06,@CH00538                                        1646
         SLR   @15,@15                                             1646
         IC    @15,IOPLMDND-9(@06,IOPPTR)                          1646
         CH    @15,@CH00726                                        1646
         BNE   @DL01635                                            1646
*       IF IOPAPF=ON                /* IF ANY LINEK EDIT             */
*           ×IOPRENT=ON             /* IS ON THEN                    */
*           ×IOPREUS=ON             /*                               */
*           ×IOPSCTR=ON             /*                               */
*           ×IOPOVLY=ON             /*                               */
*           ×IOPREFR=ON             /*                               */
*           ×IOPDC=ON               /*                               */
*           ×IOPNE=ON               /*                               */
*           ×IOPPAGA=ON             /*                               */
*         THEN                      /*                               */
         TM    IOPAPF(IOPPTR),B'11111110'                          1647
         BNZ   @RT01647                                            1647
         TM    IOPNE(IOPPTR),B'11000000'                           1647
         BZ    @RF01647                                            1647
@RT01647 DS    0H                                                  1648
*         IOPLINK=ON;               /* SET LINK OBTAINED             */
         OI    IOPLINK(IOPPTR),B'01000000'                         1648
*     END;                          /*                       @ZD00004*/
@RF01647 DS    0H                                                  1650
*                                                                  1650
*/********************************************************************/
*/*                                                                  */
*/*  MACRO TYPE CDS UPDATES HAVE NO REQUIRED FIELDS                  */
*/*      1. BUT MUST CHECK FOR MISSING FMID AND USE EXEC ONE         */
*/*                                                                  */
*/********************************************************************/
*                                                                  1650
*   IF MACRO=ON                     /* MAC TYPE UPDATE ?             */
*     THEN                                                         1650
@RF01630 TM    MACRO,B'00010000'                                   1650
         BNO   @RF01650                                            1650
*     DO;                                                          1651
*       IF IOPFMID=BLANK7           /* IF NO FMID IN ENTRY           */
*           &(ADD=ON×REP=ON)        /* AND ADD OR REP                */
*           &CCAFMID^=BLANK7        /* AND FMID SPECIFIED ON EXEC    */
*         THEN                      /* THEN USE                      */
         CLC   IOPFMID(7,IOPPTR),@CC01416                          1652
         BNE   @RF01652                                            1652
         TM    ADD,B'10100000'                                     1652
         BZ    @RF01652                                            1652
         CLC   CCAFMID(7,CCAPTR),@CC01416                          1652
         BE    @RF01652                                            1652
*         IOPFMID=CCAFMID;          /* IT IN ENTRY                   */
         MVC   IOPFMID(7,IOPPTR),CCAFMID(CCAPTR)                   1653
*       IF IOPFMID=BLANK7           /* IF NO FMID VALUE              */
*           &(UCLACDS=ON            /* FOR ACDS                      */
*           ×(UCLCDS=ON&TOTAL=ON))  /* IF ADDING NEW CDS ENTRY       */
*         THEN                      /* THEN                          */
@RF01652 CLC   IOPFMID(7,IOPPTR),@CC01416                          1654
         BNE   @RF01654                                            1654
         L     @06,@PC00001                                        1654
         TM    UCLACDS(@06),B'01000000'                            1654
         BO    @RT01654                                            1654
         TM    UCLCDS(@06),B'10000000'                             1654
         BNO   @RF01654                                            1654
         TM    TOTAL,B'00010000'                                   1654
         BNO   @RF01654                                            1654
@RT01654 DS    0H                                                  1655
*         CALL UCL257I(TXTFMID);    /* ISSUE ERROR MSG               */
         LA    @01,@AL01655                                        1655
         BAL   @14,UCL257I                                         1655
*       IF IOPRMID=BLANK7           /* IF NO RMID                    */
*           &IOPFMID^=BLANK7        /* AND FMID SPECIFIED            */
*         THEN                      /*                               */
@RF01654 CLC   IOPRMID(7,IOPPTR),@CC01416                          1656
         BNE   @RF01656                                            1656
         CLC   IOPFMID(7,IOPPTR),@CC01416                          1656
         BE    @RF01656                                            1656
*         IOPRMID=IOPFMID;          /* FMID ALSO RMID                */
         MVC   IOPRMID(7,IOPPTR),IOPFMID(IOPPTR)                   1657
*       IF IOPDLIB=BLANK8           /* IF DLIB NOT IN ENTRY          */
*           &UCLACDS=ON             /* FOR ACDS                      */
*         THEN                      /*                               */
@RF01656 CLC   IOPDLIB(8,IOPPTR),BLANK8                            1658
         BNE   @RF01658                                            1658
         L     @06,@PC00001                                        1658
         TM    UCLACDS(@06),B'01000000'                            1658
         BNO   @RF01658                                            1658
*         CALL UCL257I(TXTDIST);    /*                               */
         LA    @01,@AL01659                                        1659
         BAL   @14,UCL257I                                         1659
*     END;                                                         1660
*                                                                  1660
@RF01658 DS    0H                                                  1661
*/********************************************************************/
*/*                                                                  */
*/*  SOURCE TYPE CDS UPDATES - THE ENTRY MUST CONTAIN                */
*/*     1. - DISTLIB DATA SET DD NAME                                */
*/*                                                                  */
*/********************************************************************/
*                                                                  1661
*   IF SRC=ON                       /* SRC TYPE UPDATE ?             */
*     THEN                                                         1661
@RF01650 TM    SRC,B'00000010'                                     1661
         BNO   @RF01661                                            1661
*     DO;                                                          1662
*       IF IOPFMID=BLANK7           /* IF NO FMID IN ENTRY           */
*           &(ADD=ON×REP=ON)        /* AND ADD OR REP                */
*           &CCAFMID^=BLANK7        /* AND FMID SPECIFIED ON EXEC    */
*         THEN                      /* THEN USE                      */
         CLC   IOPFMID(7,IOPPTR),@CC01416                          1663
         BNE   @RF01663                                            1663
         TM    ADD,B'10100000'                                     1663
         BZ    @RF01663                                            1663
         CLC   CCAFMID(7,CCAPTR),@CC01416                          1663
         BE    @RF01663                                            1663
*         IOPFMID=CCAFMID;          /* IT IN ENTRY                   */
         MVC   IOPFMID(7,IOPPTR),CCAFMID(CCAPTR)                   1664
*       IF IOPFMID=BLANK7           /* IF NO FMID VALUE              */
*           &(UCLACDS=ON            /* FOR ACDS                      */
*           ×(UCLCDS=ON&TOTAL=ON))  /* IF ADDING NEW CDS ENTRY       */
*         THEN                      /* THEN                          */
@RF01663 CLC   IOPFMID(7,IOPPTR),@CC01416                          1665
         BNE   @RF01665                                            1665
         L     @06,@PC00001                                        1665
         TM    UCLACDS(@06),B'01000000'                            1665
         BO    @RT01665                                            1665
         TM    UCLCDS(@06),B'10000000'                             1665
         BNO   @RF01665                                            1665
         TM    TOTAL,B'00010000'                                   1665
         BNO   @RF01665                                            1665
@RT01665 DS    0H                                                  1666
*         CALL UCL257I(TXTFMID);    /* ISSUE ERROR MSG               */
         LA    @01,@AL01666                                        1666
         BAL   @14,UCL257I                                         1666
*       IF IOPRMID=BLANK7           /* IF NO RMID                    */
*           &IOPFMID^=BLANK7        /* AND FMID SPECIFIED            */
*         THEN                      /*                               */
@RF01665 CLC   IOPRMID(7,IOPPTR),@CC01416                          1667
         BNE   @RF01667                                            1667
         CLC   IOPFMID(7,IOPPTR),@CC01416                          1667
         BE    @RF01667                                            1667
*         IOPRMID=IOPFMID;          /* FMID ALSO RMID                */
         MVC   IOPRMID(7,IOPPTR),IOPFMID(IOPPTR)                   1668
*       IF IOPDLIB=BLANK8           /* IF DLIB NOT IN ENTRY          */
*         THEN                      /*                               */
@RF01667 CLC   IOPDLIB(8,IOPPTR),BLANK8                            1669
         BNE   @RF01669                                            1669
*         CALL UCL257I(TXTDIST);    /*                               */
         LA    @01,@AL01670                                        1670
         BAL   @14,UCL257I                                         1670
*     END;                                                         1671
@RF01669 DS    0H                                                  1672
*                                                                  1672
*/********************************************************************/
*/*                                                                  */
*/* DLIB TYPE CDS UPDATE - THE ENTRY MUST CONTAIN            @Z63SP00*/
*/*    1. AT LEAST ONE SYSTEM LIBRARY                        @Z63SP00*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1672
*   IF DLIB=ON                      /* DLIB TYPE OPERATION ? @Z63SP00*/
*     THEN                                                         1672
@RF01661 TM    DLIB,B'00001000'                                    1672
         BNO   @RF01672                                            1672
*     DO;                           /*                       @ZD00004*/
*       IOPNTLVL=IOPDLBLC;          /* SET ENTRY LEVEL       @ZD00004*/
         MVI   IOPNTLVL(IOPPTR),X'02'                              1674
*       IF IOPDLBND(1)=IOPEOLST     /* IF NO SYSLIBS                 */
*         THEN                      /*                               */
         CLI   IOPDLBND(IOPPTR),255                                1675
         BNE   @RF01675                                            1675
*         CALL UCL257I(TXTSYSLB);   /*                               */
         LA    @01,@AL01676                                        1676
         BAL   @14,UCL257I                                         1676
*       ENTCNT=ZERO;                /*                               */
@RF01675 SLR   @06,@06                                             1677
         ST    @06,ENTCNT                                          1677
*       DO LOOPINDX=1 BY 1 WHILE(   /* LOOP THRU SUBENTRIES          */
*             IOPDLBND(LOOPINDX)^=IOPEOLST);/*                       */
         LA    @06,1                                               1678
         ST    @06,LOOPINDX                                        1678
         B     @DE01678                                            1678
@DL01678 DS    0H                                                  1679
*         IF IOPDLIND(LOOPINDX)=IOPDLSYS/* IF SYSLIB                 */
*           THEN                    /*                               */
         LA    @06,1                                               1679
         L     @15,LOOPINDX                                        1679
         MH    @15,@CH00538                                        1679
         SLR   @14,@14                                             1679
         IC    @14,IOPDLIND-9(@15,IOPPTR)                          1679
         CR    @06,@14                                             1679
         BNE   @RF01679                                            1679
*           DO;                     /*                               */
*             ENTCNT=ENTCNT+1;      /* BUMP COUNTER                  */
         AL    @06,ENTCNT                                          1681
         ST    @06,ENTCNT                                          1681
*             IF ENTCNT>IOPDSMAX    /* IF GREATER THAN MAX SYSLIBS   */
*               THEN                /*                               */
         CH    @06,@CH00291                                        1682
         BNH   @RF01682                                            1682
*               DO;                 /*                               */
*                 MSGPART1=TXTSYSLB;/*                               */
         MVI   MSGPART1+8,C' '                                     1684
         MVC   MSGPART1+9(7),MSGPART1+8                            1684
         MVC   MSGPART1(8),@CC01547                                1684
*                 MSGPART2=IOPDSYS(LOOPINDX);/*                      */
         MVI   MSGPART2+8,C' '                                     1685
         MVC   MSGPART2+9(7),MSGPART2+8                            1685
         ALR   @15,IOPPTR                                          1685
         MVC   MSGPART2(8),IOPDSYS-9(@15)                          1685
*                 CALL UCL259I;     /*                               */
         BAL   @14,UCL259I                                         1686
*               END;                /*                               */
*           END;                    /*                               */
@RF01682 DS    0H                                                  1689
*       END;                        /*                               */
@RF01679 LA    @06,1                                               1689
         AL    @06,LOOPINDX                                        1689
         ST    @06,LOOPINDX                                        1689
@DE01678 L     @06,LOOPINDX                                        1689
         MH    @06,@CH00538                                        1689
         SLR   @15,@15                                             1689
         IC    @15,IOPDLBND-9(@06,IOPPTR)                          1689
         CH    @15,@CH00726                                        1689
         BNE   @DL01678                                            1689
*     END;                          /*                       @ZD00004*/
*                                                                  1691
*   /*****************************************************************/
*   /*                                                               */
*   /* CDS SYSTEM ENTRY UPDATE - CHECK FOR BOTH SREL AND NUCID       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1691
*   IF SYS=ON                       /* SYSTEM UPDATE ?       @Z63SP00*/
*     THEN                                                         1691
@RF01672 TM    SYS,B'00000100'                                     1691
         BNO   @RF01691                                            1691
*     DO;                           /*                               */
*       IOPNTLVL=IOPSYSLC;          /* SET ENTRY LEVEL       @ZD00004*/
         MVI   IOPNTLVL(IOPPTR),X'02'                              1693
*       IOPSCNVL=IOPSCNVC;          /* SET CONVERSION LEVEL  @ZD00004*/
         MVI   IOPSCNVL(IOPPTR),X'02'                              1694
*       IF IOPSREL=BLANK4           /* IF NO SREL                    */
*         THEN                                                     1695
         CLC   IOPSREL(4,IOPPTR),@CC01418                          1695
         BNE   @RF01695                                            1695
*         CALL UCL257I(TXTSREL);    /* SREL REQUIRED                 */
         LA    @01,@AL01696                                        1696
         BAL   @14,UCL257I                                         1696
*       IF IOPNUCID=BLANK           /* IF NO NUCID                   */
*         THEN                                                     1697
@RF01695 CLI   IOPNUCID(IOPPTR),C' '                               1697
         BNE   @RF01697                                            1697
*         CALL UCL257I(TXTNUCID);   /* NUCID REQUIED                 */
         LA    @01,@AL01698                                        1698
         BAL   @14,UCL257I                                         1698
*       IF IOPSYSID=BLANK8          /* IF NO SYSTEM ID               */
*         THEN                      /*                               */
@RF01697 CLC   IOPSYSID(8,IOPPTR),BLANK8                           1699
         BNE   @RF01699                                            1699
*         CALL UCL257I(TXTCDSID);   /* SYS ID                        */
         LA    @01,@AL01700                                        1700
         BAL   @14,UCL257I                                         1700
*     END;                          /*                               */
@RF01699 DS    0H                                                  1702
*   RETURN CODE(ZERO);              /*                               */
@RF01691 SLR   @15,@15                                             1702
         L     @14,@SA00016                                        1702
         LM    @00,@12,@SA00016+8                                  1702
         BR    @14                                                 1702
*   END CPLTCHK;                    /*                               */
*                                                                  1704
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO RESTOW THE UPDATED ENTRY BACK TO THE      */
*   /* SPECIFIED DATA SET                                    @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1704
*UCLSTOW:                           /*                               */
*   PROCEDURE;                      /*                               */
UCLSTOW  STM   @14,@12,@SA00017                                    1704
*   IOPDSID=UC1DSID;                /* SET DSID                      */
         MVC   IOPDSID(1,IOPPTR),UC1DSID                           1705
*   IOPRETRN=IOPGOOD;               /* INIT RC                       */
         MVI   IOPRETRN(IOPPTR),X'00'                              1706
*   IF TOTALDEL=ON                  /* IF DELETE OPERATION   @Z40SP00*/
*     THEN                          /*                       @Z40SP00*/
         TM    TOTALDEL,B'00001000'                                1707
         BNO   @RF01707                                            1707
*     IOPFUNCT=IOPSTOWD;            /* SET TO DELETE         @Z40SP00*/
         MVI   IOPFUNCT(IOPPTR),X'53'                              1708
*   ELSE                            /* ELSE SET TO CHANGE    @Z40SP00*/
*     DO;                           /*                               */
         B     @RC01707                                            1709
@RF01707 DS    0H                                                  1710
*       IOPBUSMD=TXTUCLIN;          /* LAST UPDATE = UCLIN           */
         MVC   IOPBUSMD(7,IOPPTR),@CC01490                         1710
*       IF TOTAL=ON                 /*                               */
*         THEN                      /*                               */
         TM    TOTAL,B'00010000'                                   1711
         BNO   @RF01711                                            1711
*         IOPBUTYP=IOPBUADD;        /* ADD                           */
         MVI   IOPBUTYP(IOPPTR),X'01'                              1712
*       ELSE                        /*                               */
*         IOPBUTYP=IOPBUMOD;        /* MOD EXISTING RCD              */
         B     @RC01711                                            1713
@RF01711 MVI   IOPBUTYP(IOPPTR),X'03'                              1713
*       IF LMOD=ON                  /* IF LMOD THEN USE              */
*         THEN                      /*                               */
@RC01711 TM    LMOD,B'00100000'                                    1714
         BNO   @RF01714                                            1714
*         DO;                       /*                               */
*           IOPBUFAD=ADDR(IOPLMDFX);/*                               */
         LA    @06,IOPLMDFX(,IOPPTR)                               1716
         ST    @06,IOPBUFAD(,IOPPTR)                               1716
*           DO UNTIL IOPRETRN^=IOPGOOD;/*                            */
@DL01717 DS    0H                                                  1718
*             IOPFUNCT=IOPWRITE;    /*                               */
         MVI   IOPFUNCT(IOPPTR),X'51'                              1718
*             CALL HMASMIO(HMASMIOP);/* WRITE CONTRO RECORD          */
         ST    IOPPTR,@AL00001                                     1719
         L     @15,@CV01409                                        1719
         LA    @01,@AL00001                                        1719
         BALR  @14,@15                                             1719
*             IOPBUFAD=SAVBUFAD;    /* RESET BUFFER ADDR             */
         MVC   IOPBUFAD(4,IOPPTR),SAVBUFAD                         1720
*             IF IOPRETRN=IOPGOOD   /*                               */
*               THEN                /*                               */
         CLI   IOPRETRN(IOPPTR),0                                  1721
         BNE   @RF01721                                            1721
*               DO;                 /*                               */
*                 IOPFUNCT=IOPREAD; /*                               */
         MVI   IOPFUNCT(IOPPTR),X'01'                              1723
*                 CALL HMASMIO(HMASMIOP);/* READ NEXT RECORD         */
         ST    IOPPTR,@AL00001                                     1724
         L     @15,@CV01409                                        1724
         LA    @01,@AL00001                                        1724
         BALR  @14,@15                                             1724
*               END;                /*                               */
*           END;                    /*                               */
@RF01721 DS    0H                                                  1726
@DE01717 CLI   IOPRETRN(IOPPTR),0                                  1726
         BE    @DL01717                                            1726
*           IF IOPRETRN=IOPEOF      /* IF STOP DUE TO EOF            */
*             THEN                  /*                               */
         CLI   IOPRETRN(IOPPTR),4                                  1727
         BNE   @RF01727                                            1727
*             IOPRETRN=IOPGOOD;     /* RESET RC                      */
         MVI   IOPRETRN(IOPPTR),X'00'                              1728
*         END;                      /*                               */
@RF01727 DS    0H                                                  1730
*       IOPFUNCT=IOPSTOWR;          /* INDICATE OPERATION TO PERFORM */
@RF01714 MVI   IOPFUNCT(IOPPTR),X'54'                              1730
*     END;                          /*                               */
*   IF IOPRETRN=IOPGOOD             /* IF PREV PROCESS OK            */
*     THEN                          /*                               */
@RC01707 CLI   IOPRETRN(IOPPTR),0                                  1732
         BNE   @RF01732                                            1732
*     CALL HMASMIO(HMASMIOP);       /* DO REPLACE OR DELETE  @Z40SP00*/
         ST    IOPPTR,@AL00001                                     1733
         L     @15,@CV01409                                        1733
         LA    @01,@AL00001                                        1733
         BALR  @14,@15                                             1733
*   RETURN CODE(IOPRETRN);          /*                               */
@RF01732 SLR   @15,@15                                             1734
         IC    @15,IOPRETRN(,IOPPTR)                               1734
         L     @14,@SA00017                                        1734
         LM    @00,@12,@SA00017+8                                  1734
         BR    @14                                                 1734
*   END UCLSTOW;                    /*                               */
*                                                                  1736
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO WRITE ALL UCL MSGS                @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1736
*UCLMSGS:                           /*                               */
*   PROCEDURE;                      /*                               */
*                                                                  1736
UCLMSGS  STM   @14,@12,@SA00018                                    1736
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO WRITE MSG HMA203I                 @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1737
*UCL203I:                           /*                               */
*   ENTRY;                          /*                               */
         B     @EC01737                                            1737
UCL203I  STM   @14,@12,@SA00018                                    1737
@EC01737 DS    0H                                                  1738
*   MGPMGNO1=HMA203I;               /* SYNTAX ERROR IN       @Z63SP00*/
         MVC   MGPMGNO1(2),@CH00145                                1738
*   MGPMGNO2=PART022;               /* UCL STATEMENT         @Z63SP00*/
         MVC   MGPMGNO2(2),@CH00560                                1739
*   MGPMGNO3=PART026;               /* AT COL XX             @Z63SP00*/
         MVC   MGPMGNO3(2),@CH00568                                1740
*   CVB15=(SCPCHAR-ADDR(CRPBUFFR))+1;/* DISPLACEMENT TO SYNTAX ERR   */
         L     @06,@PC00001+4                                      1741
         LA    @06,CRPBUFFR(,@06)                                  1741
         LCR   @06,@06                                             1741
         L     @01,SCPPTR                                          1741
         AL    @06,SCPCHAR(,@01)                                   1741
         AH    @06,@CH00043                                        1741
         STH   @06,CVB15                                           1741
*   CVD(CVB15,PACK8);               /* CONVERT TO DECIMAL            */
         CVD   @06,PACK8                                           1742
*   UNPK(CHAR12,PACK8);             /* UNPACK IT                     */
         UNPK  CHAR12(12),PACK8(8)                                 1743
*   CHAR12(12)=CHAR12(12)×HEX0;     /*                               */
         OI    CHAR12+11,X'F0'                                     1744
*   MGPVARPT(1)=ADDR(CHAR12(11));   /* PLACE ADDR OF DATA IN LIST    */
         LA    @06,CHAR12+10                                       1745
         ST    @06,MGPVARPT                                        1745
*   MGPTYPE=MGPERR;                 /* SET MESSAGE SEVERITY  @ZD00002*/
         MVI   MGPTYPE,X'03'                                       1746
*   CALL HMASMMSG(HMASMMGP);        /* WRITE THE MESSAGE     @Z63SP00*/
         L     @15,@CV01411                                        1747
         LA    @01,@AL01747                                        1747
         BALR  @14,@15                                             1747
*   UCLRTNCD=MAX(UCLRTNCD,STOPPTF); /* SET RC FOR SYNTAX     @YA07506*/
         SLR   @06,@06                                             1748
         IC    @06,UCLRTNCD                                        1748
         LA    @15,8                                               1748
         CR    @06,@15                                             1748
         BNL   *+6
         LR    @06,@15                                             1748
         STC   @06,UCLRTNCD                                        1748
*   RETURN CODE(0);                 /*                               */
*                                                                  1749
         SLR   @15,@15                                             1749
         L     @14,@SA00018                                        1749
         LM    @00,@12,@SA00018+8                                  1749
         BR    @14                                                 1749
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO WRITE MSG HMA252I - INCOMPLETE STMT                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1750
*UCL252I:                           /*                               */
*   ENTRY;                          /*                               */
UCL252I  STM   @14,@12,@SA00018                                    1750
*   MGPCLEAR=''B;                   /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                1751
*   MGPMGNO1=HMA252I;               /* INCOMPLETE HMASMP CONTROL   1752
*                                      STATEMENT                     */
         MVC   MGPMGNO1(2),@CH01462                                1752
*   MGPTYPE=MGPERR;                 /*                               */
         MVI   MGPTYPE,X'03'                                       1753
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1754
         LA    @01,@AL01754                                        1754
         BALR  @14,@15                                             1754
*   UCLRTNCD=MAX(UCLRTNCD,STOPPTF); /*                               */
         SLR   @06,@06                                             1755
         IC    @06,UCLRTNCD                                        1755
         LA    @15,8                                               1755
         CR    @06,@15                                             1755
         BNL   *+6
         LR    @06,@15                                             1755
         STC   @06,UCLRTNCD                                        1755
*   ERR1SW=ON;                      /*                               */
         OI    ERR1SW,B'10000000'                                  1756
*   RETURN CODE(0);                 /*                               */
*                                                                  1757
         SLR   @15,@15                                             1757
         L     @14,@SA00018                                        1757
         LM    @00,@12,@SA00018+8                                  1757
         BR    @14                                                 1757
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO WRITE MSG HMA253I - MSG FOR TOTAL ENTRY NOT FOUND  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1758
*UCL253I:                           /*                               */
*   ENTRY;                          /*                               */
UCL253I  STM   @14,@12,@SA00018                                    1758
*   MGPCLEAR=''B;                   /* ZERO MSG PARM                 */
         XC    MGPCLEAR(6),MGPCLEAR                                1759
*   MGPMGNO1=HMA253I;               /* XXXXXXXX ENTRY XXXXXXXX TO BE
*                                      DELETED DOES NOT EXIST        */
         MVC   MGPMGNO1(2),@CH01110                                1760
*   MGPVARPT(1)=ADDR(CCATYPEA(IOPTYPE));/* TYPE                      */
         SLR   @06,@06                                             1761
         IC    @06,IOPTYPE(,IOPPTR)                                1761
         SLA   @06,3                                               1761
         L     @01,CCATPAD(,CCAPTR)                                1761
         AL    @01,@CF02300                                        1761
         LA    @06,CCATYPEA(@06,@01)                               1761
         ST    @06,MGPVARPT                                        1761
*   MGPVARPT(2)=ADDR(IOPNAME);      /* ENTRY NAME                    */
         LA    @06,IOPNAME(,IOPPTR)                                1762
         ST    @06,MGPVARPT+4                                      1762
*   MGPTYPE=MGPERR;                 /*                               */
         MVI   MGPTYPE,X'03'                                       1763
*   ERR1SW=ON;                      /* SET ERR SW                    */
         OI    ERR1SW,B'10000000'                                  1764
*   CALL HMASMMSG(HMASMMGP);        /* WRITE OUT THE ERROR MESSAGE   */
         L     @15,@CV01411                                        1765
         LA    @01,@AL01765                                        1765
         BALR  @14,@15                                             1765
*   RETURN CODE(ZERO);              /*                               */
         SLR   @15,@15                                             1766
         L     @14,@SA00018                                        1766
         LM    @00,@12,@SA00018+8                                  1766
         BR    @14                                                 1766
*                                                                  1767
*   /*****************************************************************/
*   /*                                                               */
*   /* UCL COMPLETED OK MSG                                  @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1767
*UCL255I:                           /*                               */
*   ENTRY;                          /*                               */
UCL255I  STM   @14,@12,@SA00018                                    1767
*   MGPCLEAR=''B;                   /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                1768
*   MGPMGNO1=HMA255I;               /* UPDATE COMPLETE       @Z63SP00*/
         MVC   MGPMGNO1(2),@CH00809                                1769
*   MGPMGNO2=PART018;               /* FOR XXXXXXXX          @Z63SP00*/
         MVC   MGPMGNO2(2),@CH00553                                1770
*   MGPVARPT(1)=ADDR(IOPNAME);      /* INSERT ENTRY NAME ADDRESS     */
         LA    @06,IOPNAME(,IOPPTR)                                1771
         ST    @06,MGPVARPT                                        1771
*   MGPTYPE=MGPINFO;                /* SET MESSAGE SEVERITY  @ZD00002*/
         MVI   MGPTYPE,X'01'                                       1772
*   CALL HMASMMSG(HMASMMGP);        /* WRITE THE MESSAGE     @Z63SP00*/
         L     @15,@CV01411                                        1773
         LA    @01,@AL01773                                        1773
         BALR  @14,@15                                             1773
*   RETURN CODE(ZERO);              /*                               */
*                                                                  1774
         SLR   @15,@15                                             1774
         L     @14,@SA00018                                        1774
         LM    @00,@12,@SA00018+8                                  1774
         BR    @14                                                 1774
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF FILE OR AN I/O ERROR HAS OCCURRED ON THE INPUT DATA    */
*   /* SET. SET THE SERIOUS ERROR CONDITION, WRITE ERROR MESSAGE     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1775
*UCL256I:                                                          1775
*   ENTRY;                                                         1775
UCL256I  STM   @14,@12,@SA00018                                    1775
*   MGPCLEAR=''B;                   /* ZERO ALL MGP          @Z40SP00*/
         XC    MGPCLEAR(6),MGPCLEAR                                1776
*   MGPMGNO1=HMA256I;               /* UPDATE PROCESSING TERMINATED -
*                                      UPDATE NOT COMPLETE           */
         MVC   MGPMGNO1(2),@CH01115                                1777
*   MGPTYPE=MGPINFO;                /* SET MESSAGE SEVERITY  @ZD00002*/
         MVI   MGPTYPE,X'01'                                       1778
*   CALL HMASMMSG(HMASMMGP);        /* WRITE THE MESSAGE     @Z63SP00*/
         L     @15,@CV01411                                        1779
         LA    @01,@AL01779                                        1779
         BALR  @14,@15                                             1779
*   RETURN CODE(0);                 /*                               */
*                                                                  1780
         SLR   @15,@15                                             1780
         L     @14,@SA00018                                        1780
         LM    @00,@12,@SA00018+8                                  1780
         BR    @14                                                 1780
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO WRITE MSG HMA257I                   @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1781
*UCL257I:                           /*                               */
*   ENTRY(TXT257);                  /*                               */
UCL257I  STM   @14,@12,@SA00018                                    1781
         MVC   @PC00018(4),0(@01)                                  1781
*   DECLARE                         /*                               */
*     TXT257 CHAR(8);               /*                               */
*   MGPCLEAR=''B;                   /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                1783
*   MGPMGNO1=HMA257I;               /* SPEFIFIED UPDATE RESULTS IN 1784
*                                      INSUFFICIENT DATA - XXXXXXXX
*                                      REQUIRED                      */
         MVC   MGPMGNO1(2),@CH01117                                1784
*   MGPVARPT(1)=ADDR(TXT257);       /*                               */
         L     @06,@PC00018                                        1785
         ST    @06,MGPVARPT                                        1785
*   MGPTYPE=MGPERR;                 /*                               */
         MVI   MGPTYPE,X'03'                                       1786
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1787
         LA    @01,@AL01787                                        1787
         BALR  @14,@15                                             1787
*   UCLRTNCD=MAX(UCLRTNCD,STOPPTF); /*                               */
         SLR   @06,@06                                             1788
         IC    @06,UCLRTNCD                                        1788
         LA    @15,8                                               1788
         CR    @06,@15                                             1788
         BNL   *+6
         LR    @06,@15                                             1788
         STC   @06,UCLRTNCD                                        1788
*   ERR2SW=ON;                      /* SET ERR SW                    */
         OI    ERR2SW,B'01000000'                                  1789
*   RETURN CODE(0);                 /*                               */
         SLR   @15,@15                                             1790
         L     @14,@SA00018                                        1790
         LM    @00,@12,@SA00018+8                                  1790
         BR    @14                                                 1790
*                                                                  1791
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO WRITE MSG HMA258I                   @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1791
*UCL258I:                           /*                               */
*   ENTRY;                          /*                               */
UCL258I  STM   @14,@12,@SA00018                                    1791
*   MGPCLEAR=''B;                   /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                1792
*   MGPMGNO1=HMA258I;               /* END OF FILE ON UCL INPUT    1793
*                                      STREAM - PROCESSING TERMINATED*/
         MVC   MGPMGNO1(2),@CH01119                                1793
*   MGPTYPE=MGPERR;                 /*                               */
         MVI   MGPTYPE,X'03'                                       1794
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1795
         LA    @01,@AL01795                                        1795
         BALR  @14,@15                                             1795
*   UCLRTNCD=MAX(UCLRTNCD,STOPPTF); /*                               */
         SLR   @06,@06                                             1796
         IC    @06,UCLRTNCD                                        1796
         LA    @15,8                                               1796
         CR    @06,@15                                             1796
         BNL   *+6
         LR    @06,@15                                             1796
         STC   @06,UCLRTNCD                                        1796
*   ERR1SW=ON;                      /* SET ERR SW                    */
         OI    ERR1SW,B'10000000'                                  1797
*   RETURN CODE(0);                 /*                               */
*                                                                  1798
         SLR   @15,@15                                             1798
         L     @14,@SA00018                                        1798
         LM    @00,@12,@SA00018+8                                  1798
         BR    @14                                                 1798
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO WRITE MSG 259I                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1799
*UCL259I:                           /*                               */
*   ENTRY;                          /*                               */
UCL259I  STM   @14,@12,@SA00018                                    1799
*   MGPCLEAR=''B;                   /* ZERO MSG PARM                 */
         XC    MGPCLEAR(6),MGPCLEAR                                1800
*   MGPMGNO1=HMA259I;               /* XXXXXXXX XXXXXXXX ELEMENT   1801
*                                      PEMAX EXCEEDED ATTEMPTING TO
*                                      ADD X16X X8X                  */
         MVC   MGPMGNO1(2),@CH00909                                1801
*   MGPVARPT(1)=ADDR(CCATYPEA(IOPTYPE));/* TYPE                      */
         SLR   @06,@06                                             1802
         IC    @06,IOPTYPE(,IOPPTR)                                1802
         SLA   @06,3                                               1802
         L     @01,CCATPAD(,CCAPTR)                                1802
         AL    @01,@CF02300                                        1802
         LA    @06,CCATYPEA(@06,@01)                               1802
         ST    @06,MGPVARPT                                        1802
*   MGPVARPT(2)=ADDR(IOPNAME);      /* NAME                          */
         LA    @06,IOPNAME(,IOPPTR)                                1803
         ST    @06,MGPVARPT+4                                      1803
*   MGPVARPT(3)=ADDR(MSGPART1);     /* TYPE SUB-ENTRY                */
         LA    @06,MSGPART1                                        1804
         ST    @06,MGPVARPT+8                                      1804
*   MGPVARPT(4)=ADDR(MSGPART2);     /* DATA VALUE                    */
         LA    @06,MSGPART2                                        1805
         ST    @06,MGPVARPT+12                                     1805
*   MGPTYPE=MGPERR;                 /* SET MESSAGE SEVERITY  @ZD00002*/
         MVI   MGPTYPE,X'03'                                       1806
*   CALL HMASMMSG(HMASMMGP);        /* WRITE THE MESSAGE     @Z63SP00*/
         L     @15,@CV01411                                        1807
         LA    @01,@AL01807                                        1807
         BALR  @14,@15                                             1807
*   ERR2SW=ON;                      /* INDICATE THE ERROR    @Z63SP00*/
         OI    ERR2SW,B'01000000'                                  1808
*   RETURN CODE(ZERO);              /* RETURN                        */
         SLR   @15,@15                                             1809
         L     @14,@SA00018                                        1809
         LM    @00,@12,@SA00018+8                                  1809
         BR    @14                                                 1809
*                                                                  1810
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO WRITE MSG HMA261I                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1810
*UCL261I:                           /*                               */
*   ENTRY;                          /*                               */
UCL261I  STM   @14,@12,@SA00018                                    1810
*   MGPCLEAR=''B;                   /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                1811
*   MGPMGNO1=HMA261I;               /* XXXXXXXX ENTERED IS NOT EQUAL
*                                      XXXXXXXX X100X IN ENTRY       */
         MVC   MGPMGNO1(2),@CH00355                                1812
*   MGPVARPT(1)=ADDR(MSGPART1);     /*                               */
         LA    @06,MSGPART1                                        1813
         ST    @06,MGPVARPT                                        1813
*   MGPVARPT(2)=ADDR(MSGPART1);     /*                               */
         ST    @06,MGPVARPT+4                                      1814
*   MGPVARPT(3)=ADDR(MSGPART3);     /*                               */
         LA    @06,MSGPART3                                        1815
         ST    @06,MGPVARPT+8                                      1815
*   MGPTYPE=MGPERR;                 /*                               */
         MVI   MGPTYPE,X'03'                                       1816
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1817
         LA    @01,@AL01817                                        1817
         BALR  @14,@15                                             1817
*   ERR2SW=ON;                      /*                               */
         OI    ERR2SW,B'01000000'                                  1818
*   RETURN CODE(0);                 /*                               */
*                                                                  1819
         SLR   @15,@15                                             1819
         L     @14,@SA00018                                        1819
         LM    @00,@12,@SA00018+8                                  1819
         BR    @14                                                 1819
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO WRITE MSG HMA276I                   @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1820
*UCL276I:                           /*                               */
*   ENTRY;                          /*                               */
UCL276I  STM   @14,@12,@SA00018                                    1820
*   MGPCLEAR=''B;                   /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                1821
*   MGPMGNO1=HMA276I;               /* ILLEGAL UPDATE REQUEST        */
         MVC   MGPMGNO1(2),@CH01471                                1822
*   MGPMGNO2=PART016;               /* ON XXXXXXXX                   */
         MVC   MGPMGNO2(2),@CH00048                                1823
*   MGPVARPT(1)=ADDR(CCADSIDA(UC1DSID));/* DATASET                   */
         SLR   @06,@06                                             1824
         IC    @06,UC1DSID                                         1824
         SLA   @06,3                                               1824
         L     @01,CCADSAD(,CCAPTR)                                1824
         AL    @01,@CF02300                                        1824
         LA    @06,CCADSIDA(@06,@01)                               1824
         ST    @06,MGPVARPT                                        1824
*   MGPTYPE=MGPERR;                 /*                               */
         MVI   MGPTYPE,X'03'                                       1825
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1826
         LA    @01,@AL01826                                        1826
         BALR  @14,@15                                             1826
*   ERR1SW=ON;                      /*                               */
         OI    ERR1SW,B'10000000'                                  1827
*   RETURN CODE(0);                 /*                               */
*                                                                  1828
         SLR   @15,@15                                             1828
         L     @14,@SA00018                                        1828
         LM    @00,@12,@SA00018+8                                  1828
         BR    @14                                                 1828
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO WRITE MSG HMA277I                   @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1829
*UCL277I:                           /*                               */
*   ENTRY;                          /*                               */
UCL277I  STM   @14,@12,@SA00018                                    1829
*   MGPCLEAR=''B;                   /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                1830
*   MGPMGNO1=HMA277I;               /* XXXXXXXX XXXXXXXX TO BE     1831
*                                      REPLACED DOES NOT EXIST - ADD
*                                      ASSUMED                       */
         MVC   MGPMGNO1(2),@CH01473                                1831
*   MGPVARPT(1)=ADDR(CCATYPEA(IOPTYPE));/* TYPE                      */
         SLR   @06,@06                                             1832
         IC    @06,IOPTYPE(,IOPPTR)                                1832
         SLA   @06,3                                               1832
         L     @01,CCATPAD(,CCAPTR)                                1832
         AL    @01,@CF02300                                        1832
         LA    @06,CCATYPEA(@06,@01)                               1832
         ST    @06,MGPVARPT                                        1832
*   MGPVARPT(2)=ADDR(IOPNAME);      /*                               */
         LA    @06,IOPNAME(,IOPPTR)                                1833
         ST    @06,MGPVARPT+4                                      1833
*   MGPTYPE=MGPWARN;                /*                               */
         MVI   MGPTYPE,X'02'                                       1834
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1835
         LA    @01,@AL01835                                        1835
         BALR  @14,@15                                             1835
*   UCLRTNCD=MAX(UCLRTNCD,PTFWARN); /*                               */
         SLR   @06,@06                                             1836
         IC    @06,UCLRTNCD                                        1836
         LA    @15,4                                               1836
         CR    @06,@15                                             1836
         BNL   *+6
         LR    @06,@15                                             1836
         STC   @06,UCLRTNCD                                        1836
*   RETURN CODE(0);                 /*                               */
         SLR   @15,@15                                             1837
         L     @14,@SA00018                                        1837
         LM    @00,@12,@SA00018+8                                  1837
         BR    @14                                                 1837
*                                                                  1838
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO WRITE MSG HMA341                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1838
*UCL341I:                           /*                               */
*   ENTRY(TXT3411,TXT3412);         /*                               */
UCL341I  STM   @14,@12,@SA00018                                    1838
         MVC   @PC00018+4(8),0(@01)                                1838
*   DECLARE                         /*                               */
*     TXT3411 CHAR(8),              /*                               */
*     TXT3412 CHAR(8);              /*                               */
*   MGPCLEAR=''B;                   /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                1840
*   MGPMGNO1=HMA341I;               /* KEYWORDS XXXXXXXX AND XXXXXXXX
*                                      ARE MUTUALLY EXCLUSIVE        */
         MVC   MGPMGNO1(2),@CH01475                                1841
*   MGPVARPT(1)=ADDR(TXT3411);      /*                               */
         L     @06,@PC00018+4                                      1842
         ST    @06,MGPVARPT                                        1842
*   MGPVARPT(2)=ADDR(TXT3412);      /*                               */
         L     @06,@PC00018+8                                      1843
         ST    @06,MGPVARPT+4                                      1843
*   MGPTYPE=MGPERR;                 /*                               */
         MVI   MGPTYPE,X'03'                                       1844
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1845
         LA    @01,@AL01845                                        1845
         BALR  @14,@15                                             1845
*   ERR1SW=ON;                      /*                               */
         OI    ERR1SW,B'10000000'                                  1846
*   RETURN CODE(0);                 /*                               */
         SLR   @15,@15                                             1847
         L     @14,@SA00018                                        1847
         LM    @00,@12,@SA00018+8                                  1847
         BR    @14                                                 1847
*                                                                  1848
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO WRITE MSG HMA356                  @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1848
*UCL356I:                           /*                               */
*   ENTRY;                          /*                               */
UCL356I  STM   @14,@12,@SA00018                                    1848
*   MGPCLEAR=''B;                   /* ZERO MSG PARM                 */
         XC    MGPCLEAR(6),MGPCLEAR                                1849
*   MGPMGNO1=HMA356I;               /* XXXXXXXX XXXXXXXX TO BE ADDED
*                                      TO ENTRY ALREADY EXISTS       */
         MVC   MGPMGNO1(2),@CH01477                                1850
*   MGPVARPT(1)=ADDR(MSGPART1);     /* ENTRY TYPE                    */
         LA    @06,MSGPART1                                        1851
         ST    @06,MGPVARPT                                        1851
*   MGPVARPT(2)=ADDR(MSGPART2);     /* DATA                          */
         LA    @06,MSGPART2                                        1852
         ST    @06,MGPVARPT+4                                      1852
*   IF MSGPART3(1)^=BLANK           /* IF THIRD PART                 */
*     THEN                          /*                               */
         CLI   MSGPART3,C' '                                       1853
         BE    @RF01853                                            1853
*     DO;                           /*                               */
*       MGPMGNO2=PART003;           /* AS X100X                      */
         MVC   MGPMGNO2(2),@CH00045                                1855
*       MGPVARPT(3)=ADDR(MSGPART3); /* CURRENT VALUE                 */
         LA    @06,MSGPART3                                        1856
         ST    @06,MGPVARPT+8                                      1856
*     END;                          /*                               */
*   MGPTYPE=MGPERR;                 /*                               */
@RF01853 MVI   MGPTYPE,X'03'                                       1858
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1859
         LA    @01,@AL01859                                        1859
         BALR  @14,@15                                             1859
*   ERR2SW=ON;                      /*                               */
         OI    ERR2SW,B'01000000'                                  1860
*   RETURN CODE(ZERO);              /*                               */
*                                                                  1861
         SLR   @15,@15                                             1861
         L     @14,@SA00018                                        1861
         LM    @00,@12,@SA00018+8                                  1861
         BR    @14                                                 1861
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO WRITE MSG HMA357I                 @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1862
*UCL357I:                           /*                               */
*   ENTRY;                          /*                               */
UCL357I  STM   @14,@12,@SA00018                                    1862
*   MGPCLEAR=''B;                   /* ZERO MSG PARM                 */
         XC    MGPCLEAR(6),MGPCLEAR                                1863
*   MGPMGNO1=HMA357I;               /* XXXXXXXX XXXXXXXX TO BE     1864
*                                      DELETED FROM ENTRY DOES NOT 1864
*                                      EXIST                         */
         MVC   MGPMGNO1(2),@CH01479                                1864
*   MGPVARPT(1)=ADDR(MSGPART1);     /* ENTRY TYPE                    */
         LA    @06,MSGPART1                                        1865
         ST    @06,MGPVARPT                                        1865
*   MGPVARPT(2)=ADDR(MSGPART2);     /* DATA                          */
         LA    @06,MSGPART2                                        1866
         ST    @06,MGPVARPT+4                                      1866
*   MGPTYPE=MGPERR;                 /*                               */
         MVI   MGPTYPE,X'03'                                       1867
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1868
         LA    @01,@AL01868                                        1868
         BALR  @14,@15                                             1868
*   ERR2SW=ON;                      /*                               */
         OI    ERR2SW,B'01000000'                                  1869
*   RETURN CODE(ZERO);              /*                               */
         SLR   @15,@15                                             1870
         L     @14,@SA00018                                        1870
         LM    @00,@12,@SA00018+8                                  1870
         BR    @14                                                 1870
*                                                                  1871
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO WRITE MSG HMA358I                 @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1871
*UCL358I:                           /*                               */
*   ENTRY;                          /*                               */
UCL358I  STM   @14,@12,@SA00018                                    1871
*   MGPCLEAR=''B;                   /* ZERO MSG PARM                 */
         XC    MGPCLEAR(6),MGPCLEAR                                1872
*   MGPMGNO1=HMA358I;               /* XXXXXXXX XXXXXXXX TO REPLACED
*                                      IN ENTRY DOES NOT EXIST - ADD
*                                      ASSUMED                       */
         MVC   MGPMGNO1(2),@CH01481                                1873
*   MGPVARPT(1)=ADDR(MSGPART1);     /* ENTRY TYPE                    */
         LA    @06,MSGPART1                                        1874
         ST    @06,MGPVARPT                                        1874
*   MGPVARPT(2)=ADDR(MSGPART2);     /* DATA                          */
         LA    @06,MSGPART2                                        1875
         ST    @06,MGPVARPT+4                                      1875
*   MGPTYPE=MGPWARN;                /*                               */
         MVI   MGPTYPE,X'02'                                       1876
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1877
         LA    @01,@AL01877                                        1877
         BALR  @14,@15                                             1877
*   UCLRTNCD=MAX(UCLRTNCD,PTFWARN); /* SET WARNING RC                */
         SLR   @06,@06                                             1878
         IC    @06,UCLRTNCD                                        1878
         LA    @15,4                                               1878
         CR    @06,@15                                             1878
         BNL   *+6
         LR    @06,@15                                             1878
         STC   @06,UCLRTNCD                                        1878
*   RETURN CODE(ZERO);              /*                               */
*                                                                  1879
         SLR   @15,@15                                             1879
         L     @14,@SA00018                                        1879
         LM    @00,@12,@SA00018+8                                  1879
         BR    @14                                                 1879
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO WRITE MSG HMA402I                 @Z63SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1880
*UCL402I:                           /*                               */
*   ENTRY(TXT4021,TXT4022);         /*                               */
UCL402I  STM   @14,@12,@SA00018                                    1880
         MVC   @PC00018+12(8),0(@01)                               1880
*   DECLARE                         /*                               */
*     TXT4021 CHAR(8),              /*                               */
*     TXT4022 CHAR(16);             /*                               */
*   MGPCLEAR=''B;                   /* ZERO MSG PARM                 */
         XC    MGPCLEAR(6),MGPCLEAR                                1882
*   MGPMGNO1=HMA402I;               /* XXXXXXXX IS INVALID FOR     1883
*                                      XXXXXXXXXXXXXXXX SYSMOD       */
         MVC   MGPMGNO1(2),@CH01483                                1883
*   MGPVARPT(1)=ADDR(TXT4021);      /* FIELD NAME                    */
         L     @06,@PC00018+12                                     1884
         ST    @06,MGPVARPT                                        1884
*   MGPVARPT(2)=ADDR(TXT4022);      /* SYSMOD TYPE                   */
         L     @06,@PC00018+16                                     1885
         ST    @06,MGPVARPT+4                                      1885
*   MGPTYPE=MGPERR;                 /*                               */
         MVI   MGPTYPE,X'03'                                       1886
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV01411                                        1887
         LA    @01,@AL01887                                        1887
         BALR  @14,@15                                             1887
*   ERR1SW=ON;                      /*                               */
         OI    ERR1SW,B'10000000'                                  1888
*   RETURN CODE(ZERO);              /*                               */
         SLR   @15,@15                                             1889
         L     @14,@SA00018                                        1889
         LM    @00,@12,@SA00018+8                                  1889
         BR    @14                                                 1889
*   END UCLMSGS;                    /*                               */
*   END HMASMUC1                                                   1891
*                                                                  1891
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCRP)                                       */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMPRL)                                       */
*/*%INCLUDE SYSLIB  (HMASMSCP)                                       */
*/*%INCLUDE SYSLIB  (HMASMMGP)                                       */
*/*%INCLUDE SYSLIB  (HMASMVLP)                                       */
*                                                                  1891
*       ;                                                          1891
@DATA    DS    0H
@CH00043 DC    H'1'
@CH00291 DC    H'2'
@CH00045 DC    H'3'
@CH00145 DC    H'4'
@CH00061 DC    H'5'
@CH00307 DC    H'6'
@CH00037 DC    H'7'
@CH00036 DC    H'8'
@CH00538 DC    H'9'
@CH00048 DC    H'16'
@CH00553 DC    H'18'
@CH00560 DC    H'22'
@CH00568 DC    H'26'
@CH01462 DC    H'53'
@CH01110 DC    H'54'
@CH00809 DC    H'56'
@CH01115 DC    H'57'
@CH01117 DC    H'58'
@CH01119 DC    H'59'
@CH00909 DC    H'60'
@CH00355 DC    H'62'
@CH01471 DC    H'77'
@CH01473 DC    H'78'
@CH00618 DC    H'81'
@CH00620 DC    H'82'
@CH00622 DC    H'83'
@CH00624 DC    H'84'
@CH00626 DC    H'85'
@CH00628 DC    H'86'
@CH00630 DC    H'87'
@CH01475 DC    H'142'
@CH01477 DC    H'157'
@CH01479 DC    H'158'
@CH01481 DC    H'159'
@CH01152 DC    H'162'
@CH01154 DC    H'163'
@CH01156 DC    H'164'
@CH01158 DC    H'165'
@CH01160 DC    H'166'
@CH01164 DC    H'168'
@CH01168 DC    H'170'
@CH01483 DC    H'203'
@CH00726 DC    H'255'
@SM02279 MVC   IOPNAME(0,IOPPTR),SCPSTRNG(@06)
@SM02281 MVC   MSGPART1(0),SCPSTRNG(@06)
@SM02289 MVC   MSGPART2(0),SCPSTRNG(@06)
@SM02291 MVC   SAVDATA(0),SCPSTRNG(@06)
@SM02294 MVC   0(0,@14),SCPSTRNG(@06)
@SM02296 MVC   VLPDATA(0),BLANK8
@SM02298 MVC   VLPDATA(0),SCPSTRNG(@06)
         DS    0F
@AL01434 DC    A(HMASMVLP)             LIST WITH   1 ARGUMENT(S)
@AL01531 DC    A(@CC01514)             LIST WITH   2 ARGUMENT(S)
         DC    A(@CC01512)
@AL01533 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01615 DC    A(@CC01514)             LIST WITH   2 ARGUMENT(S)
         DC    A(TXTTYPE)
@AL01535 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01514 DC    A(@CC01516)             LIST WITH   1 ARGUMENT(S)
         DC    A(MSGPART1)
@AL01538 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01556 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01624 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01655 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01666 DC    A(@CC01545)             LIST WITH   1 ARGUMENT(S)
         DC    A(MSGPART1)
@AL01540 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01584 DC    A(@CC01508)             LIST WITH   1 ARGUMENT(S)
         DC    A(MSGPART1)
@AL01542 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01604 DC    A(@CC01506)             LIST WITH   1 ARGUMENT(S)
         DC    A(MSGPART1)
@AL01544 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01594 DC    A(@CC01504)             LIST WITH   1 ARGUMENT(S)
         DC    A(MSGPART1)
@AL01546 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01588 DC    A(@CC01510)             LIST WITH   1 ARGUMENT(S)
         DC    A(MSGPART1)
@AL01548 DC    A(@CC01537)             LIST WITH   2 ARGUMENT(S)
         DC    A(MSGPART1)
@AL01608 DC    A(@CC01500)             LIST WITH   1 ARGUMENT(S)
@AL01610 DC    A(@CC01502)             LIST WITH   1 ARGUMENT(S)
@AL01613 DC    A(@CC01529)             LIST WITH   2 ARGUMENT(S)
         DC    A(TXTTYPE)
@AL01628 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01659 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01670 DC    A(@CC01539)             LIST WITH   1 ARGUMENT(S)
@AL01633 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01676 DC    A(@CC01547)             LIST WITH   1 ARGUMENT(S)
@AL01696 DC    A(@CC01492)             LIST WITH   1 ARGUMENT(S)
@AL01698 DC    A(@CC01494)             LIST WITH   1 ARGUMENT(S)
@AL01700 DC    A(@CC01498)             LIST WITH   1 ARGUMENT(S)
@AL01747 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01754 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01765 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01773 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01779 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01787 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01795 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01807 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01817 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01826 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01835 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01845 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01859 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01868 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01877 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01887 DC    A(HMASMMGP)             LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@PC00001 DS    2F
@SA00016 DS    15F
@SA00003 DS    15F
@SA00004 DS    15F
@SA00005 DS    15F
@SA00006 DS    15F
@SA00007 DS    15F
@SA00009 DS    15F
@SA00018 DS    0F
@PC00018 EQU   @SA00018+60
@SA00011 DS    0F
@SA00017 DS    0F
@SA00014 DS    0F
         DS    20F
@AL00001 DS    2A
         DS    0F
@CF02300 DC    F'-8'
@CV01407 DC    V(HMASMCRD)
@CV01408 DC    V(HMASMDS1)
@CV01409 DC    V(HMASMIO)
@CV01410 DC    V(HMASMSCN)
@CV01411 DC    V(HMASMMSG)
@CV01412 DC    V(HMASMVLU)
         DS    0D
SCPPTR   DS    A
SAVBUFAD DS    A
DATEPTR  DS    A
LOOPINDX DS    A
PTFX     DS    F
ADFLSHTB DC    AL4(KFLUSH)
ADSCNTBL DC    AL4(KENDUCL)
ENTCNT   DS    F
CVB15    DS    H
NEWPEMAX DS    H
STYPE    DC    AL1(0)
UCLRTNCD DS    FL1
UC1DSID  DS    FL1
@CC01531 DC    C'DELETED         '
@CC01534 DC    C'SUPERSEDED ONLY '
@CC01428 DC    C'00000000'
@CC01492 DC    C'SREL    '
@CC01494 DC    C'NUCID   '
@CC01496 DC    C'PEMAX   '
@CC01498 DC    C'CDSID   '
@CC01500 DC    C'APPLY   '
@CC01502 DC    C'ACCEPT  '
@CC01504 DC    C'RESDATE '
@CC01506 DC    C'APPDATE '
@CC01508 DC    C'RECDATE '
@CC01510 DC    C'ACCDATE '
@CC01512 DC    C'LASTSUP '
@CC01514 DC    C'DELBY   '
@CC01516 DC    C'SUBENTRY'
@CC01518 DC    C'SMD-TYP '
@CC01520 DC    C'PTF     '
@CC01522 DC    C'FUNCTION'
@CC01524 DC    C'APAR    '
@CC01526 DC    C'USERMOD '
@CC01529 DC    C'NPRE    '
@CC01537 DC    C'STATUS  '
@CC01539 DC    C'DISTLIB '
@CC01545 DC    C'FMID    '
@CC01547 DC    C'SYSLIB  '
@CC01416 DC    C'       '
@CC01490 DC    C'UCLIN  '
@CC01418 EQU   @CC01416
@CC01541 DC    C'RMID'
@CC01596 DC    C'Y'
         DS    CL2
HMASMMGP DS    CL32
         ORG   HMASMMGP
MGPFIXED DS    CL12
         ORG   MGPFIXED
MGPCLEAR DS    CL6
         ORG   MGPCLEAR
MGPMGNO1 DS    FL2
MGPMGNO2 DS    FL2
MGPMGNO3 DS    FL2
         ORG   MGPFIXED+6
MGPFLAGS DS    BL2
         ORG   MGPFLAGS
MGPPRINT DS    BL1
MGPLIST  EQU   MGPFLAGS+0
MGPRPT   EQU   MGPFLAGS+0
MGPHLDS  EQU   MGPFLAGS+0
MGPWTOR  EQU   MGPFLAGS+0
MGPWTO   EQU   MGPFLAGS+0
MGPWTP   EQU   MGPFLAGS+0
@NM00184 EQU   MGPFLAGS+0
         ORG   MGPFIXED+8
MGPTYPE  DS    FL1
@NM00185 DS    CL3
         ORG   HMASMMGP+12
MGPVAR   DS    CL20
         ORG   MGPVAR
MGPVARPT DS    5A
         ORG   HMASMMGP+32
HMASMVLP DS    CL52
         ORG   HMASMVLP
VLPFUNCT DS    FL1
VLPRETRN DS    FL1
VLPFLAG  DS    BL1
         ORG   VLPFLAG
VLPFMSG  DS    BL1
VLPFRSV  EQU   VLPFLAG+0
         ORG   HMASMVLP+3
VLPDLEN  DS    FL1
VLPSNTRY DS    CL9
         ORG   VLPSNTRY
VLPDATA  DS    CL8
VLPTYPE  DS    FL1
         ORG   HMASMVLP+13
@NM00186 DS    CL3
VLPLPTR  DS    AL4
VLPMTYPE DS    CL8
VLPMNAME DS    CL8
VLPSTYPE DS    CL16
         ORG   HMASMVLP+52
BLANK8   DC    CL8'        '
PACK8    DS    CL8
CHAR8    DS    CL8
CHAR12   DS    CL12
CNVDATE  DS    CL5
         ORG   CNVDATE
@NM00187 DS    CL2
DAY      DS    CL3
         ORG   CNVDATE+5
SAVNAME  DS    CL8
TEMPDATE DS    CL3
SAVDATA  DS    CL8
SAVDATE  DS    CL6
         ORG   SAVDATE
@NM00190 DS    CL3
@NM00191 DS    CL3
         ORG   SAVDATE+6
PATCHUC1 DS    CL80
         ORG   PATCHUC1
@NM00192 DC    80X'FF'
         ORG   PATCHUC1+80
TXTTYPE  DC    CL8'        '
MSGPARTS DS    CL132
         ORG   MSGPARTS
MSGPART1 DS    CL16
MSGPART2 DS    CL16
MSGPART3 DS    CL100
         ORG   MSGPARTS+132
         DS    CL2
UCLSWTBL DS    CL5
         ORG   UCLSWTBL
UCLVERB  DS    BL1
         ORG   UCLVERB
REP      DS    BL1
DEL      EQU   UCLVERB+0
ADD      EQU   UCLVERB+0
TOTAL    EQU   UCLVERB+0
TOTALDEL EQU   UCLVERB+0
UNCDEL   EQU   UCLVERB+0
FRSTREPL EQU   UCLVERB+0
@NM00193 EQU   UCLVERB+0
         ORG   UCLSWTBL+1
UCLTYPE  DS    BL2
         ORG   UCLTYPE
PTF      DS    BL1
CSECT    EQU   UCLTYPE+0
LMOD     EQU   UCLTYPE+0
MACRO    EQU   UCLTYPE+0
DLIB     EQU   UCLTYPE+0
SYS      EQU   UCLTYPE+0
SRC      EQU   UCLTYPE+0
ASSEM    EQU   UCLTYPE+0
ZAP      DS    BL1
@NM00194 EQU   UCLTYPE+1
         ORG   UCLSWTBL+3
SYSTYPE  DS    BL1
         ORG   SYSTYPE
PEMAX    DS    BL1
PECHNG   EQU   SYSTYPE+0
DATEENT  EQU   SYSTYPE+0
@NM00195 EQU   SYSTYPE+0
         ORG   UCLSWTBL+4
UCLERRSW DS    BL1
         ORG   UCLERRSW
ERR1SW   DS    BL1
ERR2SW   EQU   UCLERRSW+0
STOP     EQU   UCLERRSW+0
ERRAFTPR EQU   UCLERRSW+0
UCLTERM  EQU   UCLERRSW+0
INVLOP   EQU   UCLERRSW+0
DELERR   EQU   UCLERRSW+0
SUPONLY  EQU   UCLERRSW+0
         ORG   UCLSWTBL+5
HMASMUC1 CSECT
**********************************************************************
*                                                                    *
*    UCL SCAN TABLES - THESE TABLES ARE USED BY THE SMP              *
*   SCAN ROUTINE. THEY CONTAIN THE KEYWORDS TO SEARCH FOR AND ALSO   *
*   THE LOGICAL ORDER OF THE SEARCH ( AS DETERMINED BY THE ALT       *
*      AND SUCCESSOR)                                                *
*                                                                    *
**********************************************************************
*                                                                    *
*                      VERB SCAN TABLE                               *
*                                                                    *
**********************************************************************
KENDUCL  DSCAN KEY='ENDUCL',ALT=KREP00,SUCC=KENDPER,ROUT=RENDUCL,      X
               CALLRT=YES
KREP00   DSCAN KEY='REP ',ALT=KDEL00,SUCC=KSMD00,ROUT=RREP00,          X
               CALLRT=YES
KDEL00   DSCAN KEY='DEL ',ALT=KADD00,SUCC=KSMD00,ROUT=RDEL00,          X
               CALLRT=YES
KADD00   DSCAN KEY='ADD ',SUCC=KSMD00,ROUT=RADD00,                     X
               CALLRT=YES
HMASMUC1 CSECT
**********************************************************************
*                                                                    *
*             SCAN TABLE FOR ENDING PERIOD PLUS CONTINUED COMMENTS   *
*                                                                    *
**********************************************************************
KENDPER  DSCAN KEY='.',SUCC=KXTRADTA
KXTRADTA DSCAN MINLEN=0,IO=NO,ROUT=RXTRADTA,CALLRT=YES
HMASMUC1 CSECT
**********************************************************************
*                                                                    *
*             SCAN TABLE FOR DETERMINATION OF ENTRY TYPE             *
*                                                                    *
**********************************************************************
KSMD00   DSCAN KEY='SYSMOD',ALT=KSMD01,SUCC=KSMDLP01,ROUT=RSMD00,      X
               CALLRT=YES
KSMD01   DSCAN KEY='PTF',ALT=KMOD00,SUCC=KSMDLP01,ROUT=RSMD00,         X
               CALLRT=YES
KMOD00   DSCAN KEY='MOD',ALT=KLMD00,SUCC=KMODLP01,ROUT=RMOD00,         X
               CALLRT=YES
KLMD00   DSCAN KEY='LMOD',ALT=KMAC00,SUCC=KLMDLP01,ROUT=RLMD00,        X
               CALLRT=YES
KMAC00   DSCAN KEY='MAC',ALT=KSRC00,SUCC=KMACLP01,ROUT=RMAC00,         X
               CALLRT=YES
KSRC00   DSCAN KEY='SRC',ALT=KDLB00,SUCC=KSRCLP01,ROUT=RSRC00,         X
               CALLRT=YES
KDLB00   DSCAN KEY='DLIB',ALT=KASM00,SUCC=KDLBLP01,ROUT=RDLB00,        X
               CALLRT=YES
KASM00   DSCAN KEY='ASSEM',ALT=KSYS00,SUCC=KASMLP01,ROUT=RASM00,       X
               CALLRT=YES
KSYS00   DSCAN KEY='SYS',SUCC=KSYSTD,ROUT=RSYS00,                      X
               CALLRT=YES
HMASMUC1 CSECT
**********************************************************************
*                                                                    *
*     SYSMOD OPTIONS SCAN TABLE                                      *
*                                                                    *
**********************************************************************
KSMDLP01 DSCAN KEY='(',SUCC=KSMDNAM
KSMDNAM  DSCAN MINLEN=7,MAXLEN=7,TYPE=AN,SUCC=KSMDRP01,ROUT=RXXXNAM
KSMDRP01 DSCAN KEY=')',SUCC=KSMDTD
KSMDTD   DSCAN KEY='.',ALT=KSMDRECD,SUCC=KXTRADTA,ROUT=RXXXTD
*****
*****    DSCAN FOR PTF DATE KEYWORD
*****
KSMDRECD DSCAN KEY='RECDATE',ALT=KSMDAPPD,SUCC=KSMDDTLP,ROUT=RSMDRECD
KSMDAPPD DSCAN KEY='APPDATE',ALT=KSMDRESD,SUCC=KSMDDTLP,ROUT=RSMDAPPD
KSMDRESD DSCAN KEY='RESDATE',ALT=KSMDACCD,SUCC=KSMDDTLP,ROUT=RSMDRESD
KSMDACCD DSCAN KEY='ACCDATE',ALT=KSMDDATE,SUCC=KSMDDTLP,ROUT=RSMDACCD
KSMDDATE DSCAN KEY='DATE',ALT=KSMDAPP1,SUCC=KSMDDTLP,ROUT=RSMDDATE
KSMDDTLP DSCAN KEY='(',SUCC=KSMDDTD
KSMDDTD  DSCAN KEY=')',ALT=KSMDDTV,SUCC=KSMDRECD,ROUT=RSMDDTD
KSMDDTV  DSCAN MINLEN=5,MAXLEN=5,TYPE=N,SUCC=KSMDDTRP,ROUT=RSMDDTV
KSMDDTRP DSCAN KEY=')',SUCC=KSMDRECD
*****
*****    DSCAN TO HANDLE THE PTF STATUS KEYWORDS
*****
KSMDAPP1 DSCAN KEY='APPLY',ALT=KSMDAPP2,SUCC=KSMDRECD,ROUT=RSMDAPP
KSMDAPP2 DSCAN KEY='APPL',ALT=KSMDAPP3,SUCC=KSMDRECD,ROUT=RSMDAPP
KSMDAPP3 DSCAN KEY='APP',ALT=KSMDACC1,SUCC=KSMDRECD,ROUT=RSMDAPP
KSMDACC1 DSCAN KEY='ACCEPT',ALT=KSMDACC2,SUCC=KSMDRECD,ROUT=RSMDACC
KSMDACC2 DSCAN KEY='ACPT',ALT=KSMDACC3,SUCC=KSMDRECD,ROUT=RSMDACC
KSMDACC3 DSCAN KEY='ACC',ALT=KSMDBYP1,SUCC=KSMDRECD,ROUT=RSMDACC
KSMDBYP1 DSCAN KEY='BYPASS',ALT=KSMDBYP2,SUCC=KSMDRECD,ROUT=RSMDBYP
KSMDBYP2 DSCAN KEY='BYP',ALT=KSMDRGN1,SUCC=KSMDRECD,ROUT=RSMDBYP
KSMDRGN1 DSCAN KEY='REGEN',ALT=KSMDRGN2,SUCC=KSMDRECD,ROUT=RSMDRGN
KSMDRGN2 DSCAN KEY='RGN',ALT=KSMDERR1,SUCC=KSMDRECD,ROUT=RSMDRGN
KSMDERR1 DSCAN KEY='ERROR',ALT=KSMDERR2,SUCC=KSMDRECD,ROUT=RSMDERR
KSMDERR2 DSCAN KEY='ERR',ALT=KSMDRES1,SUCC=KSMDRECD,ROUT=RSMDERR
KSMDRES1 DSCAN KEY='RESTORE',ALT=KSMDRES2,SUCC=KSMDRECD,ROUT=RSMDRES
KSMDRES2 DSCAN KEY='REST',ALT=KSMDRES3,SUCC=KSMDRECD,ROUT=RSMDRES
KSMDRES3 DSCAN KEY='RES',ALT=KSMDFNC1,SUCC=KSMDRECD,ROUT=RSMDRES
*****
*****    DSCAN FOR TYPE SYSMOD OPTIONS
*****
KSMDFNC1 DSCAN KEY='FUNCTION',ALT=KSMDPTF1,SUCC=KSMDRECD,ROUT=RSMDFNC
KSMDPTF1 DSCAN KEY='PTF',ALT=KSMDAPR1,SUCC=KSMDRECD,ROUT=RSMDPTF
KSMDAPR1 DSCAN KEY='APAR',ALT=KSMDUSR1,SUCC=KSMDRECD,ROUT=RSMDAPR
KSMDUSR1 DSCAN KEY='USERMOD',ALT=KSMDMOD,SUCC=KSMDRECD,ROUT=RSMDUSR
*****
*****    DSCAN FOR VARIOUS TYPEELEMENT SUB-ENTRIES
*****
KSMDMOD  DSCAN KEY='MOD',ALT=KSMDMCU1,SUCC=KSMDXLP,ROUT=RSMDMOD
KSMDMCU1 DSCAN KEY='MACUPD',ALT=KSMDMCU2,SUCC=KSMDXLP,ROUT=RSMDMCU
KSMDMCU2 DSCAN KEY='UPDTE',ALT=KSMDMCR,SUCC=KSMDXLP,ROUT=RSMDMCU
KSMDMCR  DSCAN KEY='MAC',ALT=KSMDSCU,SUCC=KSMDXLP,ROUT=RSMDMCR
KSMDSCU  DSCAN KEY='SRCUPD',ALT=KSMDSCR,SUCC=KSMDXLP,ROUT=RSMDSCU
KSMDSCR  DSCAN KEY='SRC',ALT=KSMDSZP,SUCC=KSMDXLP,ROUT=RSMDSCR
KSMDSZP  DSCAN KEY='SZAP',ALT=KSMDXZP,SUCC=KSMDXLP,ROUT=RSMDSZP
KSMDXZP  DSCAN KEY='XZAP',ALT=KSMDASM,SUCC=KSMDXLP,ROUT=RSMDXZP
KSMDASM  DSCAN KEY='ASSEM',ALT=KSMDRMDR,SUCC=KSMDXLP,ROUT=RSMDASM
KSMDRMDR DSCAN KEY='RMOD',ALT=KSMDRMCU,SUCC=KSMDXLP,ROUT=RSMDRMOD
KSMDRMCU DSCAN KEY='RMUPD',ALT=KSMDRMCR,SUCC=KSMDXLP,ROUT=RSMDRMCU
KSMDRMCR DSCAN KEY='RMAC',ALT=KSMDRSCU,SUCC=KSMDXLP,ROUT=RSMDRMCR
KSMDRSCU DSCAN KEY='RSUPD',ALT=KSMDRSCR,SUCC=KSMDXLP,ROUT=RSMDRSCU
KSMDRSCR DSCAN KEY='RSRC',ALT=KSMDRSZP,SUCC=KSMDXLP,ROUT=RSMDRSCR
KSMDRSZP DSCAN KEY='RSZAP',ALT=KSMDRXZP,SUCC=KSMDXLP,ROUT=RSMDRSZP
KSMDRXZP DSCAN KEY='RXZAP',ALT=KSMDPRE,SUCC=KSMDXLP,ROUT=RSMDRXZP
KSMDXLP  DSCAN KEY='(',SUCC=KSMDXDEL,ROUT=RESETRPL
KSMDXDEL DSCAN KEY=')',ALT=KSMDXNAM,SUCC=KSMDRECD,ROUT=RSMDXDEL
KSMDXNAM DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KSMDXRP,ROUT=RSMDXNAM
KSMDXRP  DSCAN KEY=')',ALT=KSMDXNAM,SUCC=KSMDRECD,COMMA=NO
*****
*****    DSCANS TO HANDLE THE PTF NUMBER SUB-ENTRIES
*****
KSMDPRE  DSCAN KEY='PRE',ALT=KSMDREQ,SUCC=KSMDYLP,ROUT=RSMDPRE
KSMDREQ  DSCAN KEY='REQ',ALT=KSMDNPR,SUCC=KSMDYLP,ROUT=RSMDREQ
KSMDNPR  DSCAN KEY='NPRE',ALT=KSMDISUP,SUCC=KSMDYLP,ROUT=RSMDNPR
KSMDISUP DSCAN KEY='SUPING',ALT=KSMDVERS,SUCC=KSMDYLP,ROUT=RSMDISUP
KSMDVERS DSCAN KEY='VERSION',ALT=KSMDSBY1,SUCC=KSMDYLP,ROUT=RSMDVERS
KSMDSBY1 DSCAN KEY='SUPBY',ALT=KSMDSBY2,SUCC=KSMDYLP,ROUT=RSMDSBY
KSMDSBY2 DSCAN KEY='SUP',ALT=KSMDDEL,SUCC=KSMDYLP,ROUT=RSMDSBY
KSMDDEL  DSCAN KEY='DELETE',ALT=KSMDLSUP,SUCC=KSMDYLP,ROUT=RSMDDEL
KSMDYLP  DSCAN KEY='(',SUCC=KSMDYDEL,ROUT=RESETRPL
KSMDYDEL DSCAN KEY=')',ALT=KSMDYNAM,SUCC=KSMDRECD,ROUT=RSMDYDEL
KSMDYNAM DSCAN MINLEN=7,MAXLEN=7,TYPE=AN,SUCC=KSMDYRP,ROUT=RSMDYNAM
KSMDYRP  DSCAN KEY=')',ALT=KSMDYNAM,SUCC=KSMDRECD,COMMA=NO
*****
*****    DSCANS TO HANDLE THE LAST SUP KEYWORD
*****
KSMDLSUP DSCAN KEY='LASTSUP',ALT=KSMDDBY,SUCC=KSMDLSLP
KSMDLSLP DSCAN KEY='(',SUCC=KSMDLSTD
KSMDLSTD DSCAN KEY=')',ALT=KSMDLSV,SUCC=KSMDRECD,ROUT=RSMDLSTD
KSMDLSV  DSCAN MINLEN=7,MAXLEN=7,TYPE=AN,SUCC=KSMDLSRP,ROUT=RSMDLSV
KSMDLSRP DSCAN KEY=')',SUCC=KSMDRECD
*****
*****    DSCANS TO HANDLE THE DELBY KEYWORD
*****
KSMDDBY  DSCAN KEY='DELBY',ALT=KSMDFMD,SUCC=KSMDDBLP
KSMDDBLP DSCAN KEY='(',SUCC=KSMDDBTD
KSMDDBTD DSCAN KEY=')',ALT=KSMDDBYV,SUCC=KSMDRECD,ROUT=RSMDDBTD
KSMDDBYV DSCAN MINLEN=7,MAXLEN=7,TYPE=AN,SUCC=KSMDDBRP,ROUT=RSMDDBYV
KSMDDBRP DSCAN KEY=')',SUCC=KSMDRECD
*****
*****    DSCANS TO HANDLE THE FMID KEYWORD
*****
KSMDFMD  DSCAN KEY='FMID',ALT=KENDPER,SUCC=KSMDFMLP
KSMDFMLP DSCAN KEY='(',SUCC=KSMDFMDD
KSMDFMDD DSCAN KEY=')',ALT=KSMDFMDV,SUCC=KSMDRECD,ROUT=RSMDFMDD
KSMDFMDV DSCAN MINLEN=7,MAXLEN=7,TYPE=AN,SUCC=KSMDFMRP,ROUT=RSMDFMDV
KSMDFMRP DSCAN KEY=')',SUCC=KSMDRECD
HMASMUC1 CSECT
**********************************************************************
*                                                                    *
*                     MODULE TYPE SCAN TABLE                         *
*                                                                    *
**********************************************************************
KMODLP01 DSCAN KEY='(',SUCC=KMODNAM
KMODNAM  DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KMODRP01,ROUT=RXXXNAM
KMODRP01 DSCAN KEY=')',SUCC=KMODTD
KMODTD   DSCAN KEY='.',ALT=KMODRMID,SUCC=KXTRADTA,ROUT=RXXXTD
KMODRMID DSCAN KEY='RMID',ALT=KMODUMID,SUCC=KMODRMLP
KMODRMLP DSCAN KEY='(',SUCC=KMODRMDD
KMODRMDD DSCAN KEY=')',ALT=KMODRMDV,SUCC=KMODRMID,ROUT=RMODRMDD
KMODRMDV DSCAN MINLEN=7,MAXLEN=7,TYPE=AN,SUCC=KMODRMRP,ROUT=RMODRMDV
KMODRMRP DSCAN KEY=')',SUCC=KMODRMID
KMODUMID DSCAN KEY='UMID',ALT=KMODDLB1,SUCC=KMODUMLP,ROUT=RMODUMID
KMODUMLP DSCAN KEY='(',SUCC=KMODUMD,ROUT=RESETRPL
KMODUMD  DSCAN KEY=')',ALT=KMODUMV,SUCC=KMODRMID,ROUT=RMODUMDD
KMODUMV  DSCAN MINLEN=7,MAXLEN=7,TYPE=AN,SUCC=KMODUMRP,ROUT=RMODXNAM
KMODUMRP DSCAN KEY=')',ALT=KMODUMV,SUCC=KMODRMID,COMMA=NO
KMODDLB1 DSCAN KEY='DLIB',ALT=KMODDLB2,SUCC=KMODDLLP
KMODDLB2 DSCAN KEY='DISTLIB',ALT=KMODLMOD,SUCC=KMODDLLP
KMODDLLP DSCAN KEY='(',SUCC=KMODDLBD
KMODDLBD DSCAN KEY=')',ALT=KMODDLBV,SUCC=KMODRMID,ROUT=RMODDLBD
KMODDLBV DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KMODDLRP,ROUT=RMODDLBV
KMODDLRP DSCAN KEY=')',SUCC=KMODRMID
KMODLMOD DSCAN KEY='LMOD',ALT=KMODFMID,SUCC=KMODLMLP,ROUT=RMODLMOD
KMODLMLP DSCAN KEY='(',SUCC=KMODLMDD,ROUT=RESETRPL
KMODLMDD DSCAN KEY=')',ALT=KMODLMDV,SUCC=KMODRMID,ROUT=RMODLMDD
KMODLMDV DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KMODLMRP,ROUT=RMODXNAM
KMODLMRP DSCAN KEY=')',ALT=KMODLMDV,SUCC=KMODRMID,COMMA=NO
KMODFMID DSCAN KEY='FMID',ALT=KMODTAL,SUCC=KMODFMLP
KMODFMLP DSCAN KEY='(',SUCC=KMODFMDD
KMODFMDD DSCAN KEY=')',ALT=KMODFMDV,SUCC=KMODRMID,ROUT=RMODFMDD
KMODFMDV DSCAN MINLEN=1,MAXLEN=7,TYPE=AN,SUCC=KMODFMRP,ROUT=RMODFMDV
KMODFMRP DSCAN KEY=')',SUCC=KMODRMID
KMODTAL  DSCAN KEY='TALIAS',ALT=KMODDAL,SUCC=KMODTALP,ROUT=RMODTAL
KMODTALP DSCAN KEY='(',SUCC=KMODTALD,ROUT=RESETRPL
KMODTALD DSCAN KEY=')',ALT=KMODTALV,SUCC=KMODRMID,ROUT=RMODTALD
KMODTALV DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KMODTARP,ROUT=RMODXNAM
KMODTARP DSCAN KEY=')',ALT=KMODTALV,SUCC=KMODRMID,COMMA=NO
KMODDAL  DSCAN KEY='DALIAS',ALT=KENDPER,SUCC=KMODDALP,ROUT=RMODDAL
KMODDALP DSCAN KEY='(',SUCC=KMODDALD,ROUT=RESETRPL
KMODDALD DSCAN KEY=')',ALT=KMODDALV,SUCC=KMODRMID,ROUT=RMODDALD
KMODDALV DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KMODDARP,ROUT=RMODXNAM
KMODDARP DSCAN KEY=')',SUCC=KMODRMID
HMASMUC1 CSECT
**********************************************************************
*                                                                    *
*                    LOAD MODULE TYPE SCAN TABLE                     *
*                                                                    *
**********************************************************************
KLMDLP01 DSCAN KEY='(',SUCC=KLMDNAM
KLMDNAM  DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KLMDRP01,ROUT=RXXXNAM
KLMDRP01 DSCAN KEY=')',SUCC=KLMDTD
KLMDTD   DSCAN KEY='.',ALT=KLMDRENT,SUCC=KXTRADTA,ROUT=RXXXTD
KLMDRENT DSCAN KEY='RENT',ALT=KLMDREUS,SUCC=KLMDRENT,ROUT=RLMDRENT
KLMDREUS DSCAN KEY='REUS',ALT=KLMDSCTR,SUCC=KLMDRENT,ROUT=RLMDREUS
KLMDSCTR DSCAN KEY='SCTR',ALT=KLMDOVLY,SUCC=KLMDRENT,ROUT=RLMDSCTR
KLMDOVLY DSCAN KEY='OVLY',ALT=KLMDREFR,SUCC=KLMDRENT,ROUT=RLMDOVLY
KLMDREFR DSCAN KEY='REFR',ALT=KLMDDC,SUCC=KLMDRENT,ROUT=RLMDREFR
KLMDDC   DSCAN KEY='DC',ALT=KLMDNE,SUCC=KLMDRENT,ROUT=RLMDDC
KLMDNE   DSCAN KEY='NE',ALT=KLMDAPF,SUCC=KLMDRENT,ROUT=RLMDNE
KLMDAPF  DSCAN KEY='AC=1',ALT=KLMDALN2,SUCC=KLMDRENT,ROUT=RLMDAPF
KLMDALN2 DSCAN KEY='ALN2',ALT=KLMDAL2B,SUCC=KLMDRENT,ROUT=RLMDALN2
KLMDAL2B DSCAN KEY='ALIGN2',ALT=KLMDSTD,SUCC=KLMDRENT,ROUT=RLMDALN2
KLMDSTD  DSCAN KEY='STD',ALT=KLMDCOPY,SUCC=KLMDRENT,ROUT=RLMDSTD
KLMDCOPY DSCAN KEY='COPY',ALT=KLMDSYLB,SUCC=KLMDRENT,ROUT=RLMDCOPY
KLMDSYLB DSCAN KEY='SYSLIB',ALT=KENDPER,SUCC=KLMDSYLP,ROUT=RLMDSYLB
KLMDSYLP DSCAN KEY='(',SUCC=KLMDSYD,ROUT=RESETRPL
KLMDSYD  DSCAN KEY=')',ALT=KLMDSYV,SUCC=KLMDRENT,ROUT=RLMDSYD
KLMDSYV  DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KLMDSYRP,ROUT=RLMDSYV
KLMDSYRP DSCAN KEY=')',ALT=KLMDSYV,SUCC=KLMDRENT,COMMA=NO
HMASMUC1 CSECT
**********************************************************************
*                                                                    *
*                      MACRO TYPE SCAN TABLE                         *
*                                                                    *
**********************************************************************
KMACLP01 DSCAN KEY='(',SUCC=KMACNAM
KMACNAM  DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KMACRP01,ROUT=RXXXNAM
KMACRP01 DSCAN KEY=')',SUCC=KMACTD
KMACTD   DSCAN KEY='.',ALT=KMACDLIB,SUCC=KXTRADTA,ROUT=RXXXTD
KMACDLIB DSCAN KEY='DISTLIB',ALT=KMACDLB2,SUCC=KMACDLLP
KMACDLB2 DSCAN KEY='DLIB',ALT=KMACSYLB,SUCC=KMACDLLP
KMACDLLP DSCAN KEY='(',SUCC=KMACDLBD
KMACDLBD DSCAN KEY=')',ALT=KMACDLBV,SUCC=KMACDLIB,ROUT=RMACDLBD
KMACDLBV DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KMACDLRP,ROUT=RMACDLBV
KMACDLRP DSCAN KEY=')',SUCC=KMACDLIB
KMACSYLB DSCAN KEY='SYSLIB',ALT=KMACFMID,SUCC=KMACSYLP
KMACSYLP DSCAN KEY='(',SUCC=KMACSYD
KMACSYD  DSCAN KEY=')',ALT=KMACSYV,SUCC=KMACDLIB,ROUT=RMACSYD
KMACSYV  DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KMACSYRP,ROUT=RMACSYV
KMACSYRP DSCAN KEY=')',SUCC=KMACDLIB
KMACFMID DSCAN KEY='FMID',ALT=KMACRMID,SUCC=KMACFMLP
KMACFMLP DSCAN KEY='(',SUCC=KMACFMDD
KMACFMDD DSCAN KEY=')',ALT=KMACFMDV,SUCC=KMACDLIB,ROUT=RMACFMDD
KMACFMDV DSCAN MINLEN=1,MAXLEN=7,TYPE=AN,SUCC=KMACFMRP,ROUT=RMACFMDV
KMACFMRP DSCAN KEY=')',SUCC=KMACDLIB
KMACRMID DSCAN KEY='RMID',ALT=KMACUMID,SUCC=KMACRMLP
KMACRMLP DSCAN KEY='(',SUCC=KMACRMDD
KMACRMDD DSCAN KEY=')',ALT=KMACRMDV,SUCC=KMACDLIB,ROUT=RMACRMDD
KMACRMDV DSCAN MINLEN=1,MAXLEN=7,TYPE=AN,SUCC=KMACRMRP,ROUT=RMACRMDV
KMACRMRP DSCAN KEY=')',SUCC=KMACDLIB
KMACUMID DSCAN KEY='UMID',ALT=KMACGASM,SUCC=KMACXLP,ROUT=RMACUMID
KMACXLP  DSCAN KEY='(',SUCC=KMACXD,ROUT=RESETRPL
KMACXD   DSCAN KEY=')',ALT=KMACXV,SUCC=KMACDLIB,ROUT=RMACXD
KMACXV   DSCAN MINLEN=1,MAXLEN=7,TYPE=AN,SUCC=KMACXRP,ROUT=RMACXV
KMACXRP  DSCAN KEY=')',ALT=KMACXV,SUCC=KMACDLIB,COMMA=NO
KMACGASM DSCAN KEY='GENASM',ALT=KMACMAL,SUCC=KMACYLP,ROUT=RMACGASM,    X
               CALLRT=YES
KMACMAL  DSCAN KEY='MALIAS',ALT=KMACASSM,SUCC=KMACYLP,ROUT=RMACMAL,    X
               CALLRT=YES
KMACYLP  DSCAN KEY='(',SUCC=KMACYD,ROUT=RESETRPL
KMACYD   DSCAN KEY=')',ALT=KMACYV,SUCC=KMACDLIB,ROUT=RMACXD
KMACYV   DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KMACYRP,ROUT=RMACXV
KMACYRP  DSCAN KEY=')',ALT=KMACYV,SUCC=KMACDLIB,COMMA=NO
KMACASSM DSCAN KEY='ASSEM',ALT=KMACASML,SUCC=KMACZLP,ROUT=RMACASSM,    X
               CALLRT=YES
KMACZLP  DSCAN KEY='(',SUCC=KMACZD
KMACZD   DSCAN KEY=')',ALT=KMACZV,SUCC=KMACDLIB
KMACZV   DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KMACZRP
KMACZRP  DSCAN KEY=')',ALT=KMACZV,SUCC=KMACDLIB,COMMA=NO
KMACASML DSCAN KEY='ASMLIB',ALT=KMACBASE,SUCC=KMACALLP,ROUT=RMACASML,  X
               CALLRT=YES
KMACALLP DSCAN KEY='(',SUCC=KMACALD
KMACALD  DSCAN KEY=')',ALT=KMACALV,SUCC=KMACDLIB
KMACALV  DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KMACALRP
KMACALRP DSCAN KEY=')',SUCC=KMACDLIB
KMACBASE DSCAN KEY='BASE',ALT=KENDPER,SUCC=KMACBSLP
KMACBSLP DSCAN KEY='(',SUCC=KMACBSFX
KMACBSFX DSCAN KEY='FIXED',SUCC=KMACBSRP
KMACBSRP DSCAN KEY=')',SUCC=KMACDLIB
HMASMUC1 CSECT
**********************************************************************
*                                                                    *
*                           DLIB TYPE SCAN TABLE                     *
*                                                                    *
**********************************************************************
KDLBLP01 DSCAN KEY='(',SUCC=KDLBNAM
KDLBNAM  DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KDLBRP01,ROUT=RXXXNAM
KDLBRP01 DSCAN KEY=')',SUCC=KDLBTD
KDLBTD   DSCAN KEY='.',ALT=KDLBSYLB,SUCC=KXTRADTA,ROUT=RXXXTD
KDLBSYLB DSCAN KEY='SYSLIB',ALT=KENDPER,SUCC=KDLBSYLP,ROUT=RDLBSYLB
KDLBSYLP DSCAN KEY='(',SUCC=KDLBSYD,ROUT=RESETRPL
KDLBSYD  DSCAN KEY=')',SUCC=KDLBSYLB,ALT=KDLBSYV,ROUT=RDLBSYD
KDLBSYV  DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KDLBSYRP,ROUT=RDLBSYV
KDLBSYRP DSCAN KEY=')',ALT=KDLBSYV,SUCC=KDLBSYLB,COMMA=NO
HMASMUC1 CSECT
**********************************************************************
*                                                                    *
*                      SRC TYPE DSCAN TABLE                          *
*                                                                    *
**********************************************************************
KSRCLP01 DSCAN KEY='(',SUCC=KSRCNAM
KSRCNAM  DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KSRCRP01,ROUT=RXXXNAM
KSRCRP01 DSCAN KEY=')',SUCC=KMACTD
HMASMUC1 CSECT
**********************************************************************
*                                                                    *
*                      ASSEM TYPE SCAN TABLE                         *
*                                                                    *
**********************************************************************
KASMLP01 DSCAN KEY='(',SUCC=KASMNAM                          @Z40SP00
KASMNAM  DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KASMRP,ROUT=RXXXNAM
KASMRP   DSCAN KEY=')',SUCC=KASMD
KASMD    DSCAN KEY='.',SUCC=KXTRADTA,ROUT=RXXXTD
HMASMUC1 CSECT
**********************************************************************
*                                                                    *
*                      SYSTEM TYPE SCAN TABLE                        *
*                                                                    *
**********************************************************************
KSYSTD   DSCAN KEY='.',ALT=KSYSSREL,SUCC=KXTRADTA,ROUT=RXXXTD
KSYSSREL DSCAN KEY='SREL',ALT=KSYSNCID,SUCC=KSYSSRLP
KSYSSRLP DSCAN KEY='(',SUCC=KSYSSRLD
KSYSSRLD DSCAN KEY=')',ALT=KSYSSRLV,SUCC=KSYSSREL,ROUT=RSYSSRLD
KSYSSRLV DSCAN MINLEN=4,MAXLEN=4,TYPE=AN,SUCC=KSYSSRRP,ROUT=RSYSSRLV
KSYSSRRP DSCAN KEY=')',SUCC=KSYSSREL
KSYSNCID DSCAN KEY='NUCID',ALT=KSYSPEMX,SUCC=KSYSNCLP
KSYSNCLP DSCAN KEY='(',SUCC=KSYSNCD
KSYSNCD  DSCAN KEY=')',ALT=KSYSNCV,SUCC=KSYSSREL,ROUT=RSYSNCD
KSYSNCV  DSCAN MINLEN=1,MAXLEN=1,TYPE=N,SUCC=KSYSNCRP,ROUT=RSYSNCV
KSYSNCRP DSCAN KEY=')',SUCC=KSYSSREL
KSYSPEMX DSCAN KEY='PEMAX',ALT=KSYSSMTS,SUCC=KSYSPMLP
KSYSPMLP DSCAN KEY='(',SUCC=KSYSPMD
KSYSPMD  DSCAN KEY=')',ALT=KSYSPMV,SUCC=KSYSSREL,ROUT=RSYSPMD
KSYSPMV  DSCAN MINLEN=1,MAXLEN=4,TYPE=N,SUCC=KSYSPMRP,ROUT=RSYSPMV
KSYSPMRP DSCAN KEY=')',SUCC=KSYSSREL
KSYSSMTS DSCAN KEY='SAVEMTS',ALT=KSYSSSTS,SUCC=KSYSSREL,ROUT=RSYSSMTS
KSYSSSTS DSCAN KEY='SAVESTS',ALT=KSYSCDID,SUCC=KSYSSREL,ROUT=RSYSSSTS
KSYSCDID DSCAN KEY='CDSID',ALT=KENDPER,SUCC=KSYSCDLP
KSYSCDLP DSCAN KEY='(',SUCC=KSYSCDD
KSYSCDD  DSCAN KEY=')',ALT=KSYSCDV,SUCC=KSYSSREL,ROUT=RSYSCDD
KSYSCDV  DSCAN MINLEN=1,MAXLEN=8,TYPE=AN,SUCC=KSYSCDRP,ROUT=RSYSCDV
KSYSCDRP DSCAN KEY=')',SUCC=KSYSSREL
HMASMUC1 CSECT
**********************************************************************
*                                                                    *
*                      FLUSH MODE SCAN TABLE                         *
*                                                                    *
**********************************************************************
KFLUSH   DSCAN KEY='ENDUCL',ALT=KFLUSHPR,SUCC=KENDPER,ROUT=RENDUCL
KFLUSHPR DSCAN KEY='.',ALT=KFLUSHCH,SUCC=KXTRADTA           @Z40SP00
KFLUSHCH DSCAN MINLEN=0,MAXLEN=255,TYPE=AN,SUCC=KFLUSH,ROUT=RFLUSHCH,  X
               CALLRT=YES
HMASMUC1 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CCAPTR   EQU   @11
IOPPTR   EQU   @09
RTNCODE  EQU   @15
RTNREG   EQU   @14
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAIOPTR EQU   CCAFIOP
CCAPESIZ EQU   CCAFIOP+4
CCAFSYS  EQU   HMASMCCA+148
CCAIOPCS EQU   CCAFSYS
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00019 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAFLAG2 EQU   CCAFFUNC+11
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCADATE  EQU   CCAFCTL+1
CCATIME  EQU   CCAFCTL+4
CCAFMID  EQU   HMASMCCA+291
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCADSIDA EQU   0
CCATYPEA EQU   0
CCABLDLA EQU   0
@NM00035 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00037 EQU   CCABLDLL
CCALKDRC EQU   @NM00037+20
@NM00039 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00039+20
@NM00041 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00041+20
@NM00043 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00043+20
@NM00045 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00045+20
@NM00047 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00047+20
@NM00049 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00049+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
IOPNAM17 EQU   IOPNAME
@NM00053 EQU   HMASMIOP+12
@NM00054 EQU   @NM00053
IOPDDNAM EQU   HMASMIOP+24
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00164 EQU   IOPQSMIF
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPBS02  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
HMASMPRL EQU   0
PRLSPAN  EQU   HMASMPRL+2
PRLFLGS  EQU   PRLSPAN
PRLBLANK EQU   PRLFLGS
PRLDATE  EQU   HMASMPRL+4
PRLTIME  EQU   HMASMPRL+7
PRLEND   EQU   HMASMPRL+10
HMASMSCP EQU   0
SCPCHAR  EQU   HMASMSCP
SCPSRCH  EQU   HMASMSCP+4
SCPIOPAD EQU   HMASMSCP+16
SCPPMLN  EQU   HMASMSCP+22
SCPEOR   EQU   HMASMSCP+24
SCPNORT  EQU   SCPEOR
SCPRETRN EQU   HMASMSCP+25
SCPRET   EQU   SCPRETRN
SCPSTRNG EQU   0
PECHAR   EQU   0
PECHAR4  EQU   PECHAR
PECHAR3  EQU   PECHAR4
DATEPARM EQU   0
MIOPD    EQU   DATEPARM
MIOPT    EQU   DATEPARM+3
IOPBS01  EQU   0
IOPBS03  EQU   0
SCPIOPRM EQU   0
UCLPARM  EQU   0
UCLFLAGS EQU   UCLPARM+8
UCLFLG1  EQU   UCLFLAGS
UCLFLUSH EQU   UCLFLG1
UCLFLG2  EQU   UCLFLAGS+2
UCLFLG3  EQU   UCLFLAGS+3
UCLCDS   EQU   UCLFLG3
UCLACDS  EQU   UCLFLG3
UCLFLG4  EQU   UCLFLAGS+5
UCLFLG5  EQU   UCLFLAGS+7
HMASMCRP EQU   0
CRPSCPAD EQU   HMASMCRP+4
CRPRETRN EQU   HMASMCRP+10
CRPFLG1  EQU   HMASMCRP+14
CRPEOFEN EQU   CRPFLG1+1
CRPFLG2  EQU   HMASMCRP+16
CRPINSW0 EQU   CRPFLG2
CRPINSW1 EQU   CRPFLG2
CRPINSW2 EQU   CRPFLG2
CRPINSW3 EQU   CRPFLG2
CRPBUFFR EQU   HMASMCRP+18
CRPBFCTL EQU   CRPBUFFR
TXT257   EQU   0
TXT3411  EQU   0
TXT3412  EQU   0
TXT4021  EQU   0
TXT4022  EQU   0
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00060 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
@NM00071 EQU   IOPUDATA
@NM00072 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPNTLVL EQU   IOPASMDR
IOPABUNT EQU   IOPASMDR+1
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPAPF   EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPLMDF2 EQU   IOPLMLEP+1
IOPNE    EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPCOPY  EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPLMDFX EQU   IOPLMDNT+24
@NM00081 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPLMDND EQU   IOPSYSLB
IOPLMIND EQU   IOPLNTRY+8
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMID  EQU   IOPRMIDE
IOPRMST  EQU   IOPRMIDE+7
IOPFMIDE EQU   IOPMACDR+9
IOPFMID  EQU   IOPFMIDE
IOPFMST  EQU   IOPFMIDE+7
IOPMCLNG EQU   IOPMACDR+17
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPBUSMD EQU   IOPBUNT
IOPBUTYP EQU   IOPBUNT+7
IOPMCSYS EQU   IOPMACFX+64
IOPMCDLB EQU   IOPMACFX+72
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACND EQU   IOPMACID
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00092 EQU   IOPSRCDR+1
@NM00094 EQU   @NM00092+7
@NM00098 EQU   IOPSRCDR+9
IOPSRCFX EQU   IOPSRCNT+24
@NM00102 EQU   IOPSRCFX
IOPSRSYS EQU   IOPSRCFX+64
IOPSRDLB EQU   IOPSRCFX+72
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCND EQU   IOPSRCID
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00108 EQU   IOPMODDR+1
@NM00110 EQU   @NM00108+7
@NM00114 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00118 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPDLIB  EQU   IOPMODFX+72
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODND EQU   IOPMODID
IOPMODST EQU   IOPLMODS+7
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00129 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPDLBND EQU   IOPDSYS
IOPDLIND EQU   IOPDNTRY+8
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSCNVL EQU   IOPSYSDR+1
IOPPEMAX EQU   IOPSYSDR+2
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPMTSNP EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPSYSFX EQU   IOPSYSNT+24
@NM00136 EQU   IOPSYSFX
IOPSREL  EQU   IOPSYSFX+8
IOPNUCID EQU   IOPSYSFX+12
IOPSYSID EQU   IOPSYSFX+13
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPSYSND EQU   IOPSYNTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPTYPE EQU   IOPPTFDR+1
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPAPP   EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPDUMMP EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
IOPREGEN EQU   IOPFLGS5
IOPPTFF2 EQU   IOPPSTAT+1
IOPDELP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPPTFF3 EQU   IOPPSTAT+3
IOPSBYP  EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPDBYNO EQU   IOPPTFDR+6
IOPSBYNO EQU   IOPPTFDR+13
IOPPTFFX EQU   IOPPTFNT+24
@NM00145 EQU   IOPPTFFX
@NM00146 EQU   @NM00145
IOPPDTES EQU   IOPPTFFX+41
@NM00149 EQU   IOPPDTES
IOPRECD  EQU   @NM00149
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPAPPD  EQU   IOPDATES
IOPRSTD  EQU   IOPDATES+6
IOPACCD  EQU   IOPDATES+12
IOPUCLD  EQU   IOPDATES+18
IOPUCLT  EQU   IOPDATES+21
IOPPFMID EQU   IOPPTFFX+73
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPPTFND EQU   IOPPMODS
IOPPIND  EQU   IOPPNTRY+8
IOPENTNT EQU   IOPUDATA+104
IOPENTNM EQU   IOPENTNT
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPPTFG1 EQU   IOPPTSFX+34
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00174 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00174
IOPPTREL EQU   IOPPTFMD
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBLEP2 EQU   IOPBPDS+9
@NM00178 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00178
IOPBFTB1 EQU   IOPBFTB0
PRLDATA  EQU   PRLEND
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
IOPBCEND EQU   IOPBPDS+21
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00180 EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
@NM00179 EQU   IOPBFTB1
IOPBAOSL EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBREFR EQU   IOPBLEP2
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
@NM00177 EQU   IOPBLEP2
IOPBDC   EQU   IOPBLEP2
@NM00176 EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00175 EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBRENT EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
IOPPTIND EQU   IOPPTNTR+8
IOPPTSND EQU   IOPPTREL
@NM00173 EQU   IOPPTSFX+872
IOPSYZPP EQU   IOPPTSFX+772
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZAP EQU   IOPPTSFX+755
IOPSYUPP EQU   IOPPTSFX+655
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPD EQU   IOPPTSFX+638
IOPSYSPP EQU   IOPPTSFX+538
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSUP EQU   IOPPTSFX+521
IOPSYLKP EQU   IOPPTSFX+421
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKD EQU   IOPPTSFX+404
IOPSYCPP EQU   IOPPTSFX+304
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOM EQU   IOPPTSFX+170
IOPSYASP EQU   IOPPTSFX+70
IOPSYASR EQU   IOPPTSFX+69
IOPSYASS EQU   IOPPTSFX+61
IOPSYASM EQU   IOPPTSFX+53
@NM00172 EQU   IOPPTSFX+35
@NM00171 EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPPTSNP EQU   IOPPTFG1
IOPSYPLN EQU   IOPPTSFX+32
IOPDSPFX EQU   IOPPTSFX+6
IOPDSDIR EQU   IOPDSSPC+4
IOPDSSEC EQU   IOPDSSPC+2
IOPDSPRM EQU   IOPDSSPC
@NM00170 EQU   IOPPTSDR+4
IOPPTPEM EQU   IOPPTSDR+2
IOPPCNVL EQU   IOPPTSDR+1
@NM00169 EQU   IOPPTSDR
IOPQFMTP EQU   IOPQFMLS+8
@NM00168 EQU   IOPQFMLS+7
IOPQFMND EQU   IOPQFMNM
@NM00167 EQU   IOPQFMDR
@NM00163 EQU   IOPQSMDR
@NM00162 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
IOPSBYNM EQU   IOPSBYNT
@NM00161 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00160 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00159 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00158 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00157 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00156 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00155 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00154 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00153 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00152 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00151 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
@NM00150 EQU   IOPPTPFX+24
IOPACCT  EQU   IOPDATES+15
IOPRSTT  EQU   IOPDATES+9
IOPAPPT  EQU   IOPDATES+3
IOPRECT  EQU   @NM00149+3
@NM00148 EQU   IOPPTFFX+8
@NM00147 EQU   @NM00145+7
IOPPRELN EQU   @NM00146
@NM00144 EQU   IOPPTFDR+20
@NM00143 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00142 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
@NM00141 EQU   IOPFLGS5
@NM00140 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
@NM00139 EQU   IOPSYSFX+21
@NM00138 EQU   @NM00136+7
@NM00137 EQU   @NM00136
@NM00135 EQU   IOPSYSDR+5
@NM00134 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
@NM00133 EQU   IOPSYSDR
@NM00132 EQU   IOPDLBFX+8
@NM00131 EQU   @NM00129+7
@NM00130 EQU   @NM00129
@NM00128 EQU   IOPDLBDR+1
@NM00127 EQU   IOPDLBDR
IOPMDIND EQU   IOPMNTRY+8
@NM00126 EQU   IOPMODST
@NM00125 EQU   IOPMODFX+12
@NM00124 EQU   IOPMODF4
@NM00123 EQU   IOPMODF3
@NM00122 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00121 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00120 EQU   @NM00118+7
@NM00119 EQU   @NM00118
@NM00117 EQU   IOPMODDR+17
@NM00116 EQU   @NM00114+7
@NM00115 EQU   @NM00114
@NM00113 EQU   @NM00110
@NM00112 EQU   @NM00110
@NM00111 EQU   @NM00110
@NM00109 EQU   @NM00108
@NM00107 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00106 EQU   IOPSRCST
@NM00105 EQU   IOPSRCFX+8
@NM00104 EQU   @NM00102+7
@NM00103 EQU   @NM00102
@NM00101 EQU   IOPSRCDR+18
IOPSRLNG EQU   IOPSRCDR+17
@NM00100 EQU   @NM00098+7
@NM00099 EQU   @NM00098
@NM00097 EQU   @NM00094
@NM00096 EQU   @NM00094
@NM00095 EQU   @NM00094
@NM00093 EQU   @NM00092
@NM00091 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
IOPMCTYP EQU   IOPMCIND
@NM00090 EQU   IOPMACST
@NM00089 EQU   IOPMACFX+8
@NM00088 EQU   IOPMACDR+18
@NM00087 EQU   IOPRMST
IOPRMASM EQU   IOPRMST
@NM00086 EQU   IOPRMST
@NM00085 EQU   IOPMACDR
@NM00083 EQU   @NM00081+7
@NM00082 EQU   @NM00081
@NM00080 EQU   IOPLMDDR+6
@NM00079 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
@NM00078 EQU   IOPLMDF4
@NM00077 EQU   IOPLMDF3
@NM00076 EQU   IOPLMDF2
@NM00075 EQU   IOPFLGS2
@NM00074 EQU   IOPLMDDR
@NM00073 EQU   IOPASMDR+9
IOPABUTP EQU   IOPABUNT+7
IOPABUPT EQU   IOPABUNT
IOPALLOC EQU   @NM00072+4
IOPUSED  EQU   @NM00072
IOPTPSEQ EQU   @NM00071+8
IOPVLSER EQU   @NM00071+2
IOPBLKSI EQU   @NM00071
IOPCQMAX EQU   IOPCQMAP+12
@NM00070 EQU   IOPCQMAP+11
@NM00069 EQU   IOPCQMAP+8
@NM00068 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00067 EQU   IOPSCMAP+11
@NM00066 EQU   IOPSCMAP+8
@NM00065 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00064 EQU   IOPNTMAX+11
@NM00063 EQU   IOPNTMAX+8
@NM00062 EQU   IOPNTMAX
@NM00061 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00060+5
IOPIPTF3 EQU   @NM00060
CRPDDNAM EQU   HMASMCRP+98
CRPBFSEQ EQU   CRPBUFFR+72
CRPBFCNT EQU   CRPBFCTL+71
CRPBFDTA EQU   CRPBFCTL
CRPINSWF EQU   CRPFLG2+1
CRPINSWE EQU   CRPFLG2+1
CRPINSWD EQU   CRPFLG2+1
CRPINSWC EQU   CRPFLG2+1
CRPINSWB EQU   CRPFLG2+1
CRPINSWA EQU   CRPFLG2+1
CRPINSW9 EQU   CRPFLG2+1
CRPINSW8 EQU   CRPFLG2+1
CRPINSW7 EQU   CRPFLG2
CRPINSW6 EQU   CRPFLG2
CRPINSW5 EQU   CRPFLG2
CRPINSW4 EQU   CRPFLG2
CRPEOF1  EQU   CRPINSW3
CRPWRTLG EQU   CRPINSW2
CRPEXADD EQU   CRPINSW1
CRPEOFSW EQU   CRPINSW0
@NM00010 EQU   CRPFLG1+1
CRPRPT   EQU   CRPFLG1+1
CRPLIST  EQU   CRPFLG1+1
CRPNOWPP EQU   CRPFLG1+1
CRPTRMEX EQU   CRPFLG1+1
CRPSCNCL EQU   CRPFLG1
CRPOFFST EQU   CRPFLG1
CRPOTHER EQU   CRPFLG1
CRPPRINT EQU   CRPFLG1
CRPLOG   EQU   CRPFLG1
CRPPTS   EQU   CRPFLG1
CRPLOGCK EQU   CRPFLG1
CRPBFPRM EQU   CRPFLG1
@NM00009 EQU   HMASMCRP+11
CRPOUTDS EQU   HMASMCRP+9
CRPINDS  EQU   HMASMCRP+8
@NM00008 EQU   HMASMCRP+1
CRPUXNUM EQU   HMASMCRP
@NM00007 EQU   UCLFLG5
UCLICTOK EQU   UCLFLG5
@NM00006 EQU   UCLFLG4
UCLBPFM  EQU   UCLFLG4
@NM00005 EQU   UCLFLG4
UCLBPIRQ EQU   UCLFLG4
UCLBPREQ EQU   UCLFLG4
UCLBPPRE EQU   UCLFLG4
UCLBPID  EQU   UCLFLG4
@NM00004 EQU   UCLFLG3+1
UCLSTS   EQU   UCLFLG3
UCLMTS   EQU   UCLFLG3
UCLPTS   EQU   UCLFLG3
UCLACRQ  EQU   UCLFLG3
UCLCRQ   EQU   UCLFLG3
UCLSCDS  EQU   UCLFLG3
UCLMASS  EQU   UCLFLG2
@NM00003 EQU   UCLFLG2
UCLFMID  EQU   UCLFLG2
UCLGROUP EQU   UCLFLG2
UCLEXC   EQU   UCLFLG2
UCLSEL   EQU   UCLFLG2
@NM00002 EQU   UCLFLG1+1
UCLDISW  EQU   UCLFLG1+1
UCLDISR  EQU   UCLFLG1+1
UCLDISN  EQU   UCLFLG1+1
UCLNOJCL EQU   UCLFLG1
UCLUSER  EQU   UCLFLG1
UCLAPAR  EQU   UCLFLG1
UCLCOMP  EQU   UCLFLG1
UCLASSEM EQU   UCLFLG1
UCLCHECK EQU   UCLFLG1
UCLNOAPP EQU   UCLFLG1
@NM00001 EQU   UCLPARM+5
UCLNUCID EQU   UCLPARM+4
UCLJCLGT EQU   UCLPARM
@NM00189 EQU   PECHAR4+3
@NM00188 EQU   PECHAR3+2
PECHAR2  EQU   PECHAR3
@NM00183 EQU   SCPEOR
SCPNOSUC EQU   SCPEOR
SCPRTERR EQU   SCPEOR
SCPCOMNT EQU   SCPEOR
SCPNOCT  EQU   SCPEOR
SCPCONT  EQU   SCPEOR
SCPINLN  EQU   HMASMSCP+20
SCPIORTN EQU   HMASMSCP+12
SCPWKAR  EQU   HMASMSCP+8
PRLCONC  EQU   PRLTIME+2
@NM00182 EQU   PRLTIME
PRLHDADR EQU   PRLDATE
@NM00181 EQU   PRLFLGS
PRLHEADO EQU   PRLFLGS
PRLHEAD  EQU   PRLFLGS
PRLRLEN  EQU   HMASMPRL
IOPBS04E EQU   IOPBS04+2
IOPBAPFC EQU   IOPBAPF+1
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
IOPQSMTP EQU   IOPQSMLS+8
@NM00166 EQU   IOPQSMLS+7
IOPQSMND EQU   IOPQSMNM
@NM00165 EQU   @NM00164+7
IOPQSMFM EQU   @NM00164
@NM00084 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00059 EQU   IOPUSERL
@NM00058 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00057 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00056 EQU   @NM00053+10
IOPSEQNO EQU   @NM00053+8
@NM00055 EQU   @NM00054+7
IOPPTFNM EQU   @NM00054
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00052 EQU   CCABLDLM+2
@NM00051 EQU   CCABLDLM
CCAUPDPM EQU   @NM00049+24
@NM00050 EQU   @NM00049+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00049+12
CCAUPDTE EQU   @NM00049+8
CCAUPDNM EQU   @NM00049
CCASUPPM EQU   @NM00047+24
@NM00048 EQU   @NM00047+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00047+12
CCAIOSUP EQU   @NM00047+8
CCASUPNM EQU   @NM00047
CCAZAPPM EQU   @NM00045+24
@NM00046 EQU   @NM00045+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00045+12
CCASPZAP EQU   @NM00045+8
CCAZAPNM EQU   @NM00045
CCACOMPM EQU   @NM00043+24
@NM00044 EQU   @NM00043+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00043+12
CCACOMRS EQU   @NM00043+8
CCACOMNM EQU   @NM00043
CCACPYPM EQU   @NM00041+24
@NM00042 EQU   @NM00041+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00041+12
CCACOPY  EQU   @NM00041+8
CCACPYNM EQU   @NM00041
CCAASMPM EQU   @NM00039+24
@NM00040 EQU   @NM00039+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00039+12
CCAASM   EQU   @NM00039+8
CCAASMNM EQU   @NM00039
CCALKDPM EQU   @NM00037+24
@NM00038 EQU   @NM00037+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00037+12
CCALKED  EQU   @NM00037+8
CCALKDNM EQU   @NM00037
CCAPGMPM EQU   @NM00035+24
@NM00036 EQU   @NM00035+21
CCABPGRC EQU   @NM00035+20
CCABPGSP EQU   @NM00035+12
CCABPGAD EQU   @NM00035+8
CCABPGNM EQU   @NM00035
CCAEND   EQU   HMASMCCA+371
@NM00034 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00033 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
@NM00032 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00031 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00030 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00029 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00028 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00027 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00026 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00025 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCAAPPLY EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00024 EQU   @NM00019+18
@NM00023 EQU   @NM00019+16
CCATBLPA EQU   @NM00019+12
@NM00022 EQU   @NM00019+8
@NM00021 EQU   @NM00019+4
@NM00020 EQU   @NM00019
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCAICLMD EQU   CCAFICT+12
CCAICMOD EQU   CCAFICT+8
CCAICPTF EQU   CCAFICT+4
CCAICT   EQU   CCAFICT
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00018 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
@NM00017 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00016 EQU   CCAFBUFR+122
@NM00015 EQU   CCAFBUFR+120
@NM00014 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00013 EQU   CCAFBUFR+88
@NM00012 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00011 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00398 EQU   RXXXLOC
@RF00422 EQU   @EL00003
@RC00420 EQU   @EL00003
@RC00415 EQU   @EL00003
@RC00408 EQU   @EL00003
@RF00425 EQU   @EL00003
@RF00430 EQU   @EL00003
@RC00444 EQU   @EL00004
@RC00438 EQU   @EL00004
@RC00461 EQU   @EL00004
@RC00455 EQU   @EL00004
@RC00478 EQU   @EL00004
@RC00472 EQU   @EL00004
@RC00495 EQU   @EL00004
@RC00489 EQU   @EL00004
@RC00512 EQU   @EL00004
@RC00506 EQU   @EL00004
@RC00523 EQU   @EL00004
@RC00562 EQU   @EL00004
@RC00556 EQU   @EL00004
@RC00571 EQU   @EL00004
@RC00569 EQU   @EL00004
@RC00619 EQU   @EL00004
@RC00612 EQU   @EL00004
@RC00635 EQU   @EL00004
@RC00629 EQU   @EL00004
@RC00767 EQU   @EL00004
@RC00761 EQU   @EL00004
@RC00779 EQU   @EL00004
@RC00774 EQU   @EL00004
@RC00795 EQU   @EL00004
@RC00789 EQU   @EL00004
@RC00807 EQU   @EL00004
@RC00802 EQU   @EL00004
@RC00823 EQU   @EL00004
@RC00817 EQU   @EL00004
@RC00835 EQU   @EL00004
@RC00830 EQU   @EL00004
@RC00853 EQU   @EL00005
@RC00847 EQU   @EL00005
@RC00865 EQU   @EL00005
@RC00860 EQU   @EL00005
@RC00881 EQU   @EL00005
@RC00875 EQU   @EL00005
@RC00893 EQU   @EL00005
@RC00888 EQU   @EL00005
@RC00907 EQU   RMACADD1
@RC00917 EQU   RMACADD1
@RF00927 EQU   @EL00005
@RC00944 EQU   @EL00006
@RC00937 EQU   @EL00006
@RC00957 EQU   @EL00006
@RC00951 EQU   @EL00006
@RC00973 EQU   @EL00006
@RC00967 EQU   @EL00006
@RC00985 EQU   @EL00006
@RC00980 EQU   @EL00006
@RC01002 EQU   @EL00006
@RC00995 EQU   @EL00006
@RC01015 EQU   @EL00006
@RC01009 EQU   @EL00006
@RC01054 EQU   @EL00007
@RC01048 EQU   @EL00007
@RC01071 EQU   @EL00007
@RC01065 EQU   @EL00007
@RC01088 EQU   @EL00007
@RC01082 EQU   @EL00007
@RC01105 EQU   @EL00007
@RC01099 EQU   @EL00007
@RC01122 EQU   @EL00007
@RC01116 EQU   @EL00007
@RC01139 EQU   @EL00007
@RC01133 EQU   @EL00007
@RC01156 EQU   @EL00007
@RC01150 EQU   @EL00007
@RC01173 EQU   @EL00007
@RC01167 EQU   @EL00007
@RC01190 EQU   @EL00007
@RC01184 EQU   @EL00007
@RC01207 EQU   @EL00007
@RC01201 EQU   @EL00007
@RC01224 EQU   @EL00007
@RC01218 EQU   @EL00007
@RC01261 EQU   @EL00009
@RC01255 EQU   @EL00009
@RC01273 EQU   @EL00009
@RC01268 EQU   @EL00009
@RC01289 EQU   @EL00009
@RC01283 EQU   @EL00009
@RC01301 EQU   @EL00009
@RC01296 EQU   @EL00009
@RC01324 EQU   @EL00009
@RC01318 EQU   @EL00009
@RC01336 EQU   @EL00009
@RC01331 EQU   @EL00009
@RC01350 EQU   @EL00009
@RC01344 EQU   @EL00009
@RC01367 EQU   @EL00009
@RC01361 EQU   @EL00009
@RC01386 EQU   @EL00009
@RC01380 EQU   @EL00009
@RC01398 EQU   @EL00009
@RC01393 EQU   @EL00009
@RC01421 EQU   @RC01419
@RF01436 EQU   @EL00011
@RF01457 EQU   @EL00015
@RF01547 EQU   @RC01523
@RF01587 EQU   @RC01585
@RF01593 EQU   @RC01591
@RF01603 EQU   @RC01601
@RC00440 EQU   @RC00438
@RC00446 EQU   @RC00444
@RC00457 EQU   @RC00455
@RC00463 EQU   @RC00461
@RC00474 EQU   @RC00472
@RC00480 EQU   @RC00478
@RC00491 EQU   @RC00489
@RC00497 EQU   @RC00495
@RC00508 EQU   @RC00506
@RC00514 EQU   @RC00512
@RC00531 EQU   @RC00523
@RC00525 EQU   @RC00523
@RC00564 EQU   @RC00562
@RC00621 EQU   @RC00619
@RC00769 EQU   @RC00767
@RC00797 EQU   @RC00795
@RC00825 EQU   @RC00823
@RC00855 EQU   @RC00853
@RC00883 EQU   @RC00881
@RC00946 EQU   @RC00944
@RC00975 EQU   @RC00973
@RC01004 EQU   @RC01002
@RC01050 EQU   @RC01048
@RC01056 EQU   @RC01054
@RC01067 EQU   @RC01065
@RC01073 EQU   @RC01071
@RC01084 EQU   @RC01082
@RC01090 EQU   @RC01088
@RC01101 EQU   @RC01099
@RC01107 EQU   @RC01105
@RC01118 EQU   @RC01116
@RC01124 EQU   @RC01122
@RC01135 EQU   @RC01133
@RC01141 EQU   @RC01139
@RC01152 EQU   @RC01150
@RC01158 EQU   @RC01156
@RC01169 EQU   @RC01167
@RC01175 EQU   @RC01173
@RC01186 EQU   @RC01184
@RC01192 EQU   @RC01190
@RC01203 EQU   @RC01201
@RC01209 EQU   @RC01207
@RC01220 EQU   @RC01218
@RC01226 EQU   @RC01224
@RC01263 EQU   @RC01261
@RC01291 EQU   @RC01289
@RC01326 EQU   @RC01324
@RC01346 EQU   @RC01344
@RC01352 EQU   @RC01350
@RC01363 EQU   @RC01361
@RC01369 EQU   @RC01367
@RC01388 EQU   @RC01386
@RC00527 EQU   @RC00525
@RC00533 EQU   @RC00531
@ENDDATA EQU   *
         END   HMASMUC1,(C'PLS2226',0802,78334)
