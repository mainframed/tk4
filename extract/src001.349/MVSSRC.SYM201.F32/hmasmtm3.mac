         TITLE 'HMASMTM3-ICT MOD SECTION BUILD (INIT ENTRY FOR ++SRC)'
HMASMTM3 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMTM3  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  LA    @10,4095(,@12)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@10                                    0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(16),0(@01)                                 0001
*   CALL INITPROC;                  /*                               */
*                                                                  0211
         BAL   @14,INITPROC                                        0211
*   /*****************************************************************/
*   /*                                                               */
*   /* ATTEMPT TO LOCATE THE ELEMENT ENTRY FOR THE CURRENT ELEMENT ON*/
*   /* THE (A)CDS DATASET SO THAT DATA CAN BE RETRIEVED FROM THE     */
*   /* MEMBER.                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0212
*   CALL CDSPROC;                   /* CALL PROC TO DO LOCATE        */
         BAL   @14,CDSPROC                                         0212
*   IF TM3HIRC<STOPPTF              /* NO ERRORS                     */
*       &ELMCBPTR^=ZERO THEN        /* WAS AN ELEMENT MCB PTR PASSED?*/
*                                                                  0213
         CH    TM3HIRC,@CH00061                                    0213
         BNL   @RF00213                                            0213
         L     @15,@PC00001+12                                     0213
         ICM   @14,15,ELMCBPTR(@15)                                0213
         BZ    @RF00213                                            0213
*     /***************************************************************/
*     /*                                                             */
*     /* INITIALIZE THE ICT MODULE MAPPING FROM THE MCB PASSED FROM  */
*     /* THE CALLING MODULE                                          */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0214
*     CALL MCBPROC;                 /* CALL PROCEDURE TO FILL IN ICT
*                                      MOD ENTRY FIELDS FROM MCB     */
         BAL   @14,MCBPROC                                         0214
*   IF TM3HIRC<STOPPTF THEN         /* PREVIOUS PROCEDURE SUCCESSFUL?*/
*                                                                  0215
@RF00213 CH    TM3HIRC,@CH00061                                    0215
         BNL   @RF00215                                            0215
*     /***************************************************************/
*     /*                                                             */
*     /* CHECK FOR VALID DISTLIB DATA.                               */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0216
*     CALL DISTCHK;                 /* CALL PROCEDURE TO CHECK IF A
*                                      DLIB CONFLICT EXISTS          */
         BAL   @14,DISTCHK                                         0216
*   IF TM3HIRC<STOPPTF              /* PREVIOUS PROCEDURE SUCCESSFUL?*/
*       &CCAACCPT=ON THEN           /* AND ACCEPT FUNCTION           */
*                                                                  0217
@RF00215 CH    TM3HIRC,@CH00061                                    0217
         BNL   @RF00217                                            0217
         TM    CCAACCPT(CCAPTR),B'00100000'                        0217
         BNO   @RF00217                                            0217
*     /***************************************************************/
*     /*                                                             */
*     /* SPECIAL PROCESSING FOR THE ACCEPT FUNCTION.                 */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0218
*     CALL ACCPROC;                 /* CALL PROCEDURE TO CHECK IF A
*                                      DLIB SHOULD BE UPDATED WITH 0218
*                                      DLIB VALUE FROM THE MCB       */
         BAL   @14,ACCPROC                                         0218
*   IF TM3HIRC<STOPPTF              /* PREVIOUS PROCEDURE SUCCESSFUL?*/
*       &(CCAAPPLY=ON×CCARES=ON)    /* FUNCTION APPLY OR RESTORE     */
*       &ICTMDSTE(1)=OFF            /* NO DISTLIB CONFLICT?          */
*       &(ICTMSYSL(1)=BLANKS        /* SYSLIB NAME(S) NOT FOUND      */
*       ×SRCFND=OFF                 /* CDS SRC ENTRY NOT FOUND       */
*       ×STOWSRC=ON)                /* CDS SRC ENTRY TO BE UPDATED   */
*     THEN                                                         0219
*                                                                  0219
@RF00217 CH    TM3HIRC,@CH00061                                    0219
         BNL   @RF00219                                            0219
         TM    CCAAPPLY(CCAPTR),B'01001000'                        0219
         BZ    @RF00219                                            0219
         L     @15,@PC00001+4                                      0219
         L     @15,ICMODPTR(,@15)                                  0219
         TM    ICTMDSTE(@15),B'00000100'                           0219
         BNZ   @RF00219                                            0219
         CLC   ICTMSYSL(8,@15),BLANKS                              0219
         BE    @RT00219                                            0219
         TM    STOWSRC,B'01000000'                                 0219
         BNZ   @RT00219                                            0219
         TM    SRCFND,B'10000000'                                  0219
         BO    @RF00219                                            0219
@RT00219 DS    0H                                                  0220
*     /***************************************************************/
*     /*                                                             */
*     /* ADDITIONAL DATA FOR CDS ENTRIES MAY BE ADDED OR CDS ENTRIES */
*     /* CREATED. SYSLIB NAMES ARE DETERMINED.                       */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0220
*     CALL SYSCHK;                  /* CALL PROCEDURE TO CHECK IF ANY
*                                      CDS ENTRIES MUST BE CREATED OR
*                                      MODIFIED                      */
*                                                                  0220
         BAL   @14,SYSCHK                                          0220
*   /*****************************************************************/
*   /*                                                               */
*   /* SET FROMLIB (SYSUT1 FOR IEBUPDTE).                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0221
*   IF TM3HIRC<STOPPTF THEN         /* PREVIOUS PROCEDURE SUCCESSFUL?*/
@RF00219 CH    TM3HIRC,@CH00061                                    0221
         BNL   @RF00221                                            0221
*     CALL FMLIBCK;                 /*                               */
         BAL   @14,FMLIBCK                                         0222
*                                                                  0223
*/*   DETERMINE OUTPUT DATASET FOR UPDATES.                          */
*                                                                  0223
*   IF TM3HIRC<STOPPTF THEN         /*                               */
@RF00221 CH    TM3HIRC,@CH00061                                    0223
         BNL   @RF00223                                            0223
*     CALL TOLIBCK;                 /*                               */
         BAL   @14,TOLIBCK                                         0224
*   IF TM3HIRC<STOPPTF THEN         /* PREVIOUS PROCEDURE SUCCESSFUL?*/
*                                                                  0225
@RF00223 CH    TM3HIRC,@CH00061                                    0225
         BNL   @RF00225                                            0225
*     /***************************************************************/
*     /*                                                             */
*     /* INITIALIZE THE MODID LIST FOR THIS ELEMENT.                 */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0226
*     CALL MODIDCHK;                /* CALL PROCEDURE TO BUILD MODID
*                                      LIST OR CHAIN TO IF PRESENT   */
         BAL   @14,MODIDCHK                                        0226
*                                                                  0227
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD ICT MOD ENTRIES FOR MODS TO BE ASSEMBLED                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0227
*   IF TM3HIRC<STOPPTF THEN         /*                               */
@RF00225 CH    TM3HIRC,@CH00061                                    0227
         BNL   @RF00227                                            0227
*     DO;                           /*                               */
*       CALL MODICT;                /*                               */
         BAL   @14,MODICT                                          0229
*     END;                          /*                               */
*                                                                  0230
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE ANY GTA AREAS GOTTEN.                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0231
*   CALL CLEANUP;                   /*                               */
*                                                                  0231
@RF00227 BAL   @14,CLEANUP                                         0231
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF HMASMTM3 PROCESSING. RETURN TO CALLER WITH HIGHEST     */
*   /* RETURN CODE ENCOUNTERED DURING PROCESSING.                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0232
*   RETURN CODE(TM3HIRC);           /* RETURN TO CALLER WITH MAX RC  */
         LR    @15,TM3HIRC                                         0232
         L     @13,4(,@13)                                         0232
         L     @14,12(,@13)                                        0232
         LM    @00,@12,20(@13)                                     0232
         BR    @14                                                 0232
*                                                                  0233
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE POINTERS SWITCHES ETC.                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0233
*INITPROC:                                                         0233
*   PROC;                           /*                               */
@EL00001 L     @13,4(,@13)                                         0233
@EF00001 DS    0H                                                  0233
@ER00001 LM    @14,@12,12(@13)                                     0233
         BR    @14                                                 0233
INITPROC STM   @14,@01,@SA00002                                    0233
         STM   @04,@12,@SA00002+16                                 0233
*   RFY                                                            0234
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0235
*     ICTMOD BASED(ICMODPTR);       /* BASE ON MOD PARAMETER PASSED  */
*   RFY                                                            0236
*     ICTPTF BASED(ICPTFPTR);       /* BASE ON SYSMOD PARAMETER    0236
*                                      PASSED                        */
*   RFY                                                            0237
*     MCBELEMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   RFY                                                            0238
*     MCBPTFMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   HMASMMGP=''B;                   /* AND MSG                       */
         XC    HMASMMGP(24),HMASMMGP                               0239
*   MGPPRINT=ON;                    /* ALL MSGS TO SMPOUT AND        */
*   MGPHLDS=ON;                     /* LOG                           */
         OI    MGPPRINT,B'10010000'                                0241
*   IOPPTR=CCAIOPTR;                /* SET UP BASE IOP ADDRESS       */
         L     IOPPTR,CCAIOPTR(,CCAPTR)                            0242
*   TM3HIRC=ZERO;                   /* INITIALIZE HIGHEST RC       0243
*                                      COLLECTOR                     */
         SLR   TM3HIRC,TM3HIRC                                     0243
*   TM3SWCH1=OFF;                   /* INITIALIZE LOCAL SWITCHES     */
         MVI   TM3SWCH1,B'00000000'                                0244
*   TM3SWCH2=OFF;                   /* INITIALIZE LOCAL SWITCHES     */
*                                                                  0245
         MVI   TM3SWCH2,B'00000000'                                0245
*   /*****************************************************************/
*   /*                                                               */
*   /* FILL IN ICT MOD VALUES FROM PTF ENTRY PASSED AND OTHER FIELDS */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0246
*   ICTPPTR(1)=ICPTFPTR;            /* PTR TO ICT PTF ENTRY          */
*                                                                  0246
         L     @15,@PC00001+4                                      0246
         L     @01,ICMODPTR(,@15)                                  0246
         L     @15,@PC00001+8                                      0246
         MVC   ICTPPTR(4,@01),ICPTFPTR(@15)                        0246
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP GTA PARMS                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0247
*   GTPPTR=ADDR(ASMGTP);            /* ASSEM LIST FOR TM4            */
         LA    @15,ASMGTP                                          0247
         ST    @15,GTPPTR                                          0247
*   HMASMGTP=''B;                   /* INIT FOR CALLS TO GTA         */
         XC    HMASMGTP(28,@15),HMASMGTP(@15)                      0248
*   GTPBUFAD=ADDR(ASSMLST);         /* INPUT TO GTA                  */
         LA    @14,ASSMLST                                         0249
         ST    @14,GTPBUFAD(,@15)                                  0249
*   GTPPSIZE=GTP512B;               /*                               */
         NI    GTPPSIZE(@15),B'11111001'                           0250
         OI    GTPPSIZE(@15),B'00000001'                           0250
*   GTPRCDLN=LENGTH(ASSMLST);       /* RECORD LENGTH                 */
         MVC   GTPRCDLN(2,@15),@CH00036                            0251
*   GTPKEYLN=LENGTH(ASSMNM);        /* KEY LENGTH                    */
         MVC   GTPKEYLN(2,@15),@CH00061                            0252
*   GTPFUNCT=GTPFREE;               /*                               */
         MVI   GTPFUNCT(@15),X'0A'                                 0253
*   CALL HMASMGTA(HMASMGTP);        /* INIT FILE                     */
         ST    @15,@AL00001                                        0254
         L     @15,@CV01858                                        0254
         LA    @01,@AL00001                                        0254
         BALR  @14,@15                                             0254
*   END INITPROC;                   /*                               */
@EL00002 DS    0H                                                  0255
@EF00002 DS    0H                                                  0255
@ER00002 LM    @14,@01,@SA00002                                    0255
         LM    @04,@12,@SA00002+16                                 0255
         BR    @14                                                 0255
*CDSPROC:                                                          0256
*   PROC;                           /*                               */
CDSPROC  STM   @14,@02,@SA00003                                    0256
         STM   @04,@12,@SA00003+20                                 0256
*   RFY                                                            0257
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0258
*     ICTMOD BASED(ICMODPTR);       /* BASE ON MOD PARAMETER PASSED  */
*   RFY                                                            0259
*     ICTPTF BASED(ICPTFPTR);       /* BASE ON SYSMOD PARAMETER    0259
*                                      PASSED                        */
*   RFY                                                            0260
*     MCBELEMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   RFY                                                            0261
*     MCBPTFMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*                                                                  0261
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP PARAMETER LIST FOR CALL TO HMASMIO                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0262
*   IOPFUNCT=IOPLOC;                /* INDICATE LOCATE OPERATION     */
         MVI   IOPFUNCT(IOPPTR),X'03'                              0262
*   IOPTYPE=IOPSRC;                 /* INDICATE (A)CDS MOD ENTRY     */
         MVI   IOPTYPE(IOPPTR),X'08'                               0263
*   IOPNAME=ICTMNAME(1);            /* ELEMENT ENTRY BEING PROCESSED */
         L     @15,@PC00001+4                                      0264
         L     @01,ICMODPTR(,@15)                                  0264
         MVC   IOPNAME(8,IOPPTR),ICTMNAME(@01)                     0264
*   IOPDSID=TBLXCDSI;               /* DETERMINE DATA SET            */
         L     @15,@PC00001                                        0265
         MVC   IOPDSID(1,IOPPTR),TBLXCDSI(@15)                     0265
*   CALL HMASMIO(HMASMIOP);         /* CALL SMP IO INTERFACE MODULE  */
         ST    IOPPTR,@AL00001                                     0266
         L     @15,@CV01854                                        0266
         LA    @01,@AL00001                                        0266
         BALR  @14,@15                                             0266
*   IF IOPRETRN>IOPNOTFD THEN       /* SET ERROR CODE                */
         CLI   IOPRETRN(IOPPTR),4                                  0267
         BNH   @RF00267                                            0267
*     TM3HIRC=MAX(TM3HIRC,IOPRETRN);/*                               */
         SLR   @15,@15                                             0268
         IC    @15,IOPRETRN(,IOPPTR)                               0268
         CR    TM3HIRC,@15                                         0268
         BNL   *+6
         LR    TM3HIRC,@15                                         0268
*   IF IOPRETRN=IOPNOTFD            /* ENTRY STILL NOT FOUND/ADDED,  */
*       &CCAACCPT=ON                /* FUNCTION IS ACCEPT, AND A MCB */
*       &ELMCBPTR^=ZERO             /* WAS PASSED AS A PARAMETER,    */
*       &MCBEDIST^=BLANKS THEN      /* AND A DISTLIB VALUE ENTERED   */
*                                                                  0269
@RF00267 CLI   IOPRETRN(IOPPTR),4                                  0269
         BNE   @RF00269                                            0269
         TM    CCAACCPT(CCAPTR),B'00100000'                        0269
         BNO   @RF00269                                            0269
         L     @15,@PC00001+12                                     0269
         L     @15,ELMCBPTR(,@15)                                  0269
         LTR   @15,@15                                             0269
         BZ    @RF00269                                            0269
         CLC   MCBEDIST(8,@15),BLANKS                              0269
         BE    @RF00269                                            0269
*     /***************************************************************/
*     /*                                                             */
*     /* FOR A NOT FOUND SRC ENTRY AND THE FUNCTION IS ACCEPT, AND A */
*     /* MCB WAS INPUT AND A DISTLIB VALUE EXISTS IN THE MCB,        */
*     /* INDICATE THE NEED FOR A ACDS MOD ENTRY TO BE BUILT FOR THIS */
*     /* ELEMENT. IT WILL BE BUILT AFTER THE ICT ENTRY HAS BEEN BUILT*/
*     /* FROM THE INPUTS.                                            */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0270
*     BLDACDSM=ON;                  /* SET BIT TO BUILD ACDS MOD   0270
*                                      ENTRY                         */
         OI    BLDACDSM,B'00000100'                                0270
*   IF IOPRETRN=IOPGOOD THEN        /* WAS AN ENTRY WAS FOUND EITHER */
@RF00269 CLI   IOPRETRN(IOPPTR),0                                  0271
         BNE   @RF00271                                            0271
*     DO;                           /*                               */
*       ICTMSYSL(1)=IOPSRSYS;       /* SAVE SYSLIB                   */
         L     @15,@PC00001+4                                      0273
         L     @15,ICMODPTR(,@15)                                  0273
         MVC   ICTMSYSL(8,@15),IOPSRSYS(IOPPTR)                    0273
*       SRCFND=ON;                  /* AND CDS ENTRY FOUND           */
         OI    SRCFND,B'10000000'                                  0274
*       IF IOPSRDLB^=BLANKS THEN    /* IF DISTLIB AVAILABLE THERE    */
         CLC   IOPSRDLB(8,IOPPTR),BLANKS                           0275
         BE    @RF00275                                            0275
*         DO;                       /*                               */
*           ICTMDSTL(1)=IOPSRDLB;   /* SAVE DISTLIB                  */
         MVC   ICTMDSTL(8,@15),IOPSRDLB(IOPPTR)                    0277
*           DLIBBIT=ON;             /* DLIB FOUND IN (A)CDS SRC ENTRY*/
         OI    DLIBBIT,B'10000000'                                 0278
*         END;                      /*                               */
*     END;                          /*                               */
*   END CDSPROC;                    /*                               */
@EL00003 DS    0H                                                  0281
@EF00003 DS    0H                                                  0281
@ER00003 LM    @14,@02,@SA00003                                    0281
         LM    @04,@12,@SA00003+20                                 0281
         BR    @14                                                 0281
*MCBPROC:                                                          0282
*   PROC;                           /*                               */
MCBPROC  STM   @14,@02,@SA00004                                    0282
         STM   @04,@12,@SA00004+20                                 0282
*   RFY                                                            0283
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0284
*     ICTMOD BASED(ICMODPTR);       /* BASE ON MOD PARAMETER PASSED  */
*   RFY                                                            0285
*     ICTPTF BASED(ICPTFPTR);       /* BASE ON SYSMOD PARAMETER    0285
*                                      PASSED                        */
*   RFY                                                            0286
*     MCBELEMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   RFY                                                            0287
*     MCBPTFMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*                                                                  0287
*   /*****************************************************************/
*   /*                                                               */
*   /* FILL IN ICT MOD VALUES FROM MCB ELEMENT PASSED                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0288
*   IF MCBSCRTP=ON THEN             /* SOURCE REPLACEMENT            */
*     ICTMSRCR(1)=ON;               /*                               */
*   IF MCBSCUTP=ON THEN             /* SOURCE UPDATE                 */
*     ICTMSRCU(1)=ON;               /*                               */
*                                                                  0291
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE ON CONTROL STATEMENT                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0292
*   IF MCBEDEL=ON THEN              /* WAS DELETE ENTERED ON ++SRC?  */
         L     @02,@PC00001+12                                     0292
         L     @02,ELMCBPTR(,@02)                                  0292
         TM    MCBEDEL(@02),B'01000000'                            0292
         BNO   @RF00292                                            0292
*     ICTMIDEL(1)=ON;               /* YES- SET ON ICT DELETE FLAG   */
*                                                                  0293
         L     @02,@PC00001+4                                      0293
         L     @02,ICMODPTR(,@02)                                  0293
         OI    ICTMIDEL(@02),B'01000000'                           0293
*   /*****************************************************************/
*   /*                                                               */
*   /* DISTLIB ON CONTROL STATEMENT                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0294
*   IF ICTMDSTL(1)=BLANKS           /* NO DISTLIB YET                */
*       &MCBEDIST^=BLANKS THEN      /* AND ON ++ STMT                */
@RF00292 L     @02,@PC00001+4                                      0294
         L     @02,ICMODPTR(,@02)                                  0294
         CLC   ICTMDSTL(8,@02),BLANKS                              0294
         BNE   @RF00294                                            0294
         L     @15,@PC00001+12                                     0294
         L     @15,ELMCBPTR(,@15)                                  0294
         CLC   MCBEDIST(8,@15),BLANKS                              0294
         BE    @RF00294                                            0294
*     DO;                           /*                               */
*       ICTMDSTL(1)=MCBEDIST;       /* PICK UP MCB DISTLIB VALUE     */
         MVC   ICTMDSTL(8,@02),MCBEDIST(@15)                       0296
*       IF DLIBBIT=OFF              /* DLIB NOT IN (A)CDS SRC ENTRY  */
*           ×SRCFND=OFF THEN        /* NO SRC ENTRY, NOW ONE CAN     */
         TM    DLIBBIT,B'10000000'                                 0297
         BZ    @RT00297                                            0297
         TM    SRCFND,B'10000000'                                  0297
         BNZ   @RF00297                                            0297
@RT00297 DS    0H                                                  0298
*         STOWSRC=ON;               /* BE CREATED OR MODIFIED        */
         OI    STOWSRC,B'01000000'                                 0298
*     END;                          /*                               */
*                                                                  0299
@RF00297 DS    0H                                                  0300
*   /*****************************************************************/
*   /*                                                               */
*   /* DISTOBJ FROM CONTROL STATEMENT                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0300
*   ICTMDOBJ(1)=MCBEDOBJ;           /*                               */
*                                                                  0300
@RF00294 L     @02,@PC00001+4                                      0300
         L     @02,ICMODPTR(,@02)                                  0300
         L     @15,@PC00001+12                                     0300
         L     @15,ELMCBPTR(,@15)                                  0300
         MVC   ICTMDOBJ(8,@02),MCBEDOBJ(@15)                       0300
*   /*****************************************************************/
*   /*                                                               */
*   /* SSI FROM CONTROL STATEMENT                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0301
*   ICTMSSI(1)=MCBESSI;             /*                               */
*                                                                  0301
         MVC   ICTMSSI(8,@02),MCBESSI(@15)                         0301
*   /*****************************************************************/
*   /*                                                               */
*   /* GET SYSLIB FROM MCB.                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0302
*   IF ICTMSYSL(1)=BLANKS THEN      /* NONE YET                      */
         CLC   ICTMSYSL(8,@02),BLANKS                              0302
         BNE   @RF00302                                            0302
*     ICTMSYSL(1)=MCBESYS;          /* GET IT                        */
*                                                                  0303
         MVC   ICTMSYSL(8,@02),MCBESYS(@15)                        0303
*   /*****************************************************************/
*   /*                                                               */
*   /* VERSION SUBENTRIES ON CONTROL STATEMENT                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0304
*   DO S=1 BY 1 WHILE MCBEND(S)^=IOPEOLST/* LOOP ON SUBENTRIES       */
*         &TM3HIRC<STOPPTF;         /* WHILE NO TERMINATING ERRORS   */
@RF00302 LA    S,1                                                 0304
         B     @DE00304                                            0304
@DL00304 DS    0H                                                  0305
*     IF MCBEIND(S)=MCBEVERS THEN   /* SUBENTRY A VERSION NUMBER?    */
         LR    @05,S                                               0305
         MH    @05,@CH00525                                        0305
         L     @02,@PC00001+12                                     0305
         L     @02,ELMCBPTR(,@02)                                  0305
         SLR   @15,@15                                             0305
         IC    @15,MCBEIND-9(@05,@02)                              0305
         CH    @15,@CH00069                                        0305
         BNE   @RF00305                                            0305
*       DO;                         /*                               */
*         CALL HMASMTAI(TBLXPARM,   /* PARAMETER FOR TABLE MODULES   */
*             ICTMVCHN(1),          /* CHAIN TO BE BUILT             */
*             ADDR(MCBEVLST(S)),    /* DATA TO BE CHAINED            */
*             LENGTH(ICTMVRLS(1))); /* DATA TO CHAIN LENGTH          */
         L     @15,@PC00001                                        0307
         ST    @15,@AL00001                                        0307
         L     @15,@PC00001+4                                      0307
         L     @01,ICMODPTR(,@15)                                  0307
         LA    @15,ICTMVCHN(,@01)                                  0307
         ST    @15,@AL00001+4                                      0307
         LA    @05,MCBEVLST-9(@05,@02)                             0307
         ST    @05,@TF00001                                        0307
         LA    @05,@TF00001                                        0307
         ST    @05,@AL00001+8                                      0307
         LA    @05,@CF00061                                        0307
         ST    @05,@AL00001+12                                     0307
         L     @15,@CV01857                                        0307
         LA    @01,@AL00001                                        0307
         BALR  @14,@15                                             0307
*         RFY                                                      0308
*           RTNCODE RSTD;           /* RESTRICT REG 15 USAGE         */
*         TM3HIRC=MAX(TM3HIRC,RTNCODE);/* NO- PICK UP HIGHEST RC     */
         CR    TM3HIRC,RTNCODE                                     0309
         BNL   *+6
         LR    TM3HIRC,RTNCODE                                     0309
*         RFY                                                      0310
*           RTNCODE UNRSTD;         /* RELEASE REG 15                */
*       END;                        /*                               */
*   END;                            /*                               */
@RF00305 AH    S,@CH00069                                          0312
@DE00304 LR    @05,S                                               0312
         MH    @05,@CH00525                                        0312
         L     @02,@PC00001+12                                     0312
         L     @02,ELMCBPTR(,@02)                                  0312
         SLR   @15,@15                                             0312
         IC    @15,MCBEND-9(@05,@02)                               0312
         CH    @15,@CH00714                                        0312
         BE    @DC00304                                            0312
         CH    TM3HIRC,@CH00061                                    0312
         BL    @DL00304                                            0312
@DC00304 DS    0H                                                  0313
*   END MCBPROC;                    /*                               */
@EL00004 DS    0H                                                  0313
@EF00004 DS    0H                                                  0313
@ER00004 LM    @14,@02,@SA00004                                    0313
         LM    @04,@12,@SA00004+20                                 0313
         BR    @14                                                 0313
*DISTCHK:                                                          0314
*   PROC;                           /*                               */
DISTCHK  STM   @14,@02,@SA00005                                    0314
         STM   @04,@12,@SA00005+20                                 0314
*   RFY                                                            0315
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0316
*     ICTMOD BASED(ICMODPTR);       /* BASE ON MOD PARAMETER PASSED  */
*   RFY                                                            0317
*     ICTPTF BASED(ICPTFPTR);       /* BASE ON SYSMOD PARAMETER    0317
*                                      PASSED                        */
*   RFY                                                            0318
*     MCBELEMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   RFY                                                            0319
*     MCBPTFMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*                                                                  0319
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR A DISTLIB VALUE FOUND. FOR ANY FUNCTION, IF ONE NOT */
*   /* FOUND THEN SEND ERROR MESSAGE HMA431I (INSUFFICIENT INFOR-    */
*   /* MATION AVAILABLE FOR SYSMOD PROCESSING) AND SET THE RETURN    */
*   /* CODE TO STOPPTF (RC=8).                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0320
*   IF ICTMDSTL(1)=BLANKS THEN      /* HAS A DISTLIB VALUE BEEN FOUND*/
         L     @15,@PC00001+4                                      0320
         L     @15,ICMODPTR(,@15)                                  0320
         CLC   ICTMDSTL(8,@15),BLANKS                              0320
         BNE   @RF00320                                            0320
*     DO;                           /* NO- THEN SEND ERROR MESSAGE   */
*       ICTMCPL(1)=ON;              /* SET COMPLETE BIT ON           */
*       ICTMNOGO(1)=ON;             /* SET NOGO BIT ON               */
*       ICTMPROC(1)=ON;             /* SET INPROCESS                 */
*       ICTMMSG(1)=ON;              /* SET MESSAGE SENT BIT ON       */
*                                                                  0325
         OI    ICTMCPL(@15),B'11110000'                            0325
*       /*************************************************************/
*       /*                                                           */
*       /* GENERATE ERROR MSG HMA431                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0326
*       ETYPE='SRC     ';           /* ELEMENT TYPE                  */
         MVC   ETYPE(8),@CC01953                                   0326
*       MGPCLEAR=MGPCLEAR&&MGPCLEAR;/* ZERO FIELD                    */
         XC    MGPCLEAR(6),MGPCLEAR                                0327
*       MGPTYPE=MGPERR;             /* SET FOR RETURN CODE=8         */
         MVI   MGPTYPE,X'03'                                       0328
*       MGPMGNO1=HMA431I;           /* INSUFFICIENT INFORMATION MSG  */
         MVC   MGPMGNO1(2),@CH01861                                0329
*       MGPVARPT(1)=ADDR(ETYPE);    /* TYPE                          */
         LA    @14,ETYPE                                           0330
         ST    @14,MGPVARPT                                        0330
*       MGPVARPT(2)=ADDR(ICTMNAME(1));/* NAME                        */
         ST    @15,MGPVARPT+4                                      0331
*       MGPVARPT(3)=ADDR(ICTPTFS(1));/* SYSMOD                       */
         L     @15,@PC00001+8                                      0332
         L     @01,ICPTFPTR(,@15)                                  0332
         ST    @01,MGPVARPT+8                                      0332
*       CALL HMASMMSG(HMASMMGP);    /* SEND ERROR MESSAGE            */
*                                                                  0333
         L     @15,@CV01855                                        0333
         LA    @01,@AL00333                                        0333
         BALR  @14,@15                                             0333
*       /*************************************************************/
*       /*                                                           */
*       /* SET RETURN CODE TO STOPPTF (RC=8)                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0334
*       TM3HIRC=MAX(TM3HIRC,STOPPTF);/*                              */
         LA    @15,8                                               0334
         CR    TM3HIRC,@15                                         0334
         BNL   *+6
         LR    TM3HIRC,@15                                         0334
*     END;                          /*                               */
*                                                                  0336
*   /*****************************************************************/
*   /*                                                               */
*   /* IF A DLIB VALUE WAS FOUND ON THE CDS, AND APPLY FUNCTION IS   */
*   /* BEING EXECUTED, AND A MCB WAS PASSED, AND MCB DISTLIB VALUE   */
*   /* WAS ENTERED, THEN COMPARE THE CDS DISTLIB AND THE MCB DISTLIB */
*   /* VALUES. IF DIFFERENT DLIB VALUES ARE FOUND, THEN BLANK OUT THE*/
*   /* ICTMOD ENTRY AND SET THE DISTLIB CONFLICT BIT (ICTMDSTE) ON.  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0336
*   IF DLIBBIT=ON                   /* DLIB FOUND IN (A)CDS SRC ENTRY*/
*       &CCAAPPLY=ON                /* APPLY FUCNTION                */
*       &ELMCBPTR^=ZERO             /* MCB WAS PASSED                */
*       &MCBEDIST^=BLANKS           /* MCB DISTLIB WAS ENTERED       */
*       &MCBEDIST^=IOPSRDLB THEN    /* MCB DISTLIB ^= IOPSRDLB       */
@RF00320 TM    DLIBBIT,B'10000000'                                 0336
         BNO   @RF00336                                            0336
         TM    CCAAPPLY(CCAPTR),B'01000000'                        0336
         BNO   @RF00336                                            0336
         L     @15,@PC00001+12                                     0336
         L     @15,ELMCBPTR(,@15)                                  0336
         LTR   @15,@15                                             0336
         BZ    @RF00336                                            0336
         CLC   MCBEDIST(8,@15),BLANKS                              0336
         BE    @RF00336                                            0336
         CLC   MCBEDIST(8,@15),IOPSRDLB(IOPPTR)                    0336
         BE    @RF00336                                            0336
*     DO;                           /*                               */
*       ICTMDSTL(1)=BLANKS;         /* BLANK OUT THE ICT DISTLIB     */
         L     @15,@PC00001+4                                      0338
         L     @15,ICMODPTR(,@15)                                  0338
         MVC   ICTMDSTL(8,@15),BLANKS                              0338
*       ICTMDSTE(1)=ON;             /* INDICATE A DLIB CONFLICT      */
         OI    ICTMDSTE(@15),B'00000100'                           0339
*     END;                          /*                               */
*   END DISTCHK;                    /*                               */
@EL00005 DS    0H                                                  0341
@EF00005 DS    0H                                                  0341
@ER00005 LM    @14,@02,@SA00005                                    0341
         LM    @04,@12,@SA00005+20                                 0341
         BR    @14                                                 0341
*ACCPROC:                                                          0342
*   PROC;                           /*                               */
ACCPROC  STM   @14,@02,@SA00006                                    0342
         STM   @04,@12,@SA00006+20                                 0342
*   RFY                                                            0343
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0344
*     ICTMOD BASED(ICMODPTR);       /* BASE ON MOD PARAMETER PASSED  */
*   RFY                                                            0345
*     ICTPTF BASED(ICPTFPTR);       /* BASE ON SYSMOD PARAMETER    0345
*                                      PASSED                        */
*   RFY                                                            0346
*     MCBELEMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   RFY                                                            0347
*     MCBPTFMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*                                                                  0347
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ACCEPT FUNCTION, AND A DLIB VALUE WAS FOUND IN THE ACDS,   */
*   /* AND A MCB WAS PASSED, AND THE VALUES ARE DIFFERENT, THEN CHECK*/
*   /* 1) IF NOAPPLY WAS NOT SPECIFIED 2) IF SYSMOD OWNING THE       */
*   /* ELEMENT IS APPLIED ON THE CDS 3) IF THE SYSMOD OWNING THE     */
*   /* ELEMENT APPEARS AS AN FMID,RMID OR UMID VALUE IN THE ELEMENT  */
*   /* CDS ENTRY 4) IF THE CDS ENTRY DISTLIB VALUE IS THE SAME AS THE*/
*   /* VALUE IN THE MCB. IF ALL CHECKS (1-4) ARE TRUE THEN THE ICT,  */
*   /* AND ACDS ELEMENT VALUES ARE SET TO THE MCB VALUE, OTHERWISE   */
*   /* THE DLIB CONFLICT BIT (ICTMDSTE)IS SET ON.                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0348
*   IF DLIBBIT=ON                   /* DLIB FOUND IN (A)CDS SRC ENTRY*/
*       &ELMCBPTR^=ZERO             /* WAS A MCB PASSED, AND         */
*       &MCBEDIST^=BLANKS           /* VALID                         */
*       &MCBEDIST^=IOPSRDLB THEN    /* ARE MCB & IOP DLIB VALUES ^=? */
         TM    DLIBBIT,B'10000000'                                 0348
         BNO   @RF00348                                            0348
         L     @15,@PC00001+12                                     0348
         L     @15,ELMCBPTR(,@15)                                  0348
         LTR   @15,@15                                             0348
         BZ    @RF00348                                            0348
         CLC   MCBEDIST(8,@15),BLANKS                              0348
         BE    @RF00348                                            0348
         CLC   MCBEDIST(8,@15),IOPSRDLB(IOPPTR)                    0348
         BE    @RF00348                                            0348
*     DO;                           /*                               */
*                                                                  0349
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE IF CHECK 1 IS SUCCESSFULL                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0350
*       IF TBLNOAPP=OFF THEN        /* NOAPPLY NOT SPECIFIED?        */
         L     @15,@PC00001                                        0350
         L     @01,TBLXTBL(,@15)                                   0350
         TM    TBLNOAPP(@01),B'10000000'                           0350
         BNZ   @RF00350                                            0350
*         DO;                       /*                               */
*           SAVADLIB=IOPSRDLB;      /* SAVE ACDS DLIB VALUE          */
         MVC   SAVADLIB(8),IOPSRDLB(IOPPTR)                        0352
*           IOPFUNCT=IOPLOC;        /* SET UP TO LOCATE OWNER        */
         MVI   IOPFUNCT(IOPPTR),X'03'                              0353
*           IOPDSID=IOPCDS;         /* SET DATASET TO CDS            */
         MVI   IOPDSID(IOPPTR),X'02'                               0354
*           IOPTYPE=IOPSMD;         /* SYSMOD TYPE ENTRY             */
         MVI   IOPTYPE(IOPPTR),X'0B'                               0355
*           IOPNAME=ICTPTFS(1);     /* OWNER OF ELEMENT              */
*                                                                  0356
         MVI   IOPNAME+7(IOPPTR),C' '                              0356
         L     @15,@PC00001+8                                      0356
         L     @01,ICPTFPTR(,@15)                                  0356
         MVC   IOPNAME(7,IOPPTR),ICTPTFS(@01)                      0356
*           /*********************************************************/
*           /*                                                       */
*           /* LOCATE SYSMOD ON CDS DATASET                          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0357
*           CALL HMASMIO(HMASMIOP); /* CALL SMP IO INTERFACE MODULE  */
         ST    IOPPTR,@AL00001                                     0357
         L     @15,@CV01854                                        0357
         LA    @01,@AL00001                                        0357
         BALR  @14,@15                                             0357
*           IF IOPRETRN=IOPGOOD THEN/* IS OWNER APPLIED ON CDS?      */
         CLI   IOPRETRN(IOPPTR),0                                  0358
         BNE   @RF00358                                            0358
*             DO;                   /*                               */
*               SMDAPPLY=ON;        /* INDICATE SYSMOD IS APPLIED    */
         OI    SMDAPPLY,B'01000000'                                0360
*               IOPTYPE=IOPSRC;     /* INDICATE MOD TYPE ENTRY       */
         MVI   IOPTYPE(IOPPTR),X'08'                               0361
*               IOPFUNCT=IOPLOC;    /* LOCATE ELEMENT ON CDS         */
         MVI   IOPFUNCT(IOPPTR),X'03'                              0362
*               IOPNAME=ICTMNAME(1);/* FILL IN ELEMENT NAME          */
         L     @15,@PC00001+4                                      0363
         L     @01,ICMODPTR(,@15)                                  0363
         MVC   IOPNAME(8,IOPPTR),ICTMNAME(@01)                     0363
*                                                                  0364
*               /*****************************************************/
*               /*                                                   */
*               /* LOCATE ENTRY ON CDS DATASET                       */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0364
*               CALL HMASMIO(HMASMIOP);/* CALL SMP IO INTERFACE    0364
*                                      MODULE                        */
         ST    IOPPTR,@AL00001                                     0364
         L     @15,@CV01854                                        0364
         LA    @01,@AL00001                                        0364
         BALR  @14,@15                                             0364
*               IF IOPRETRN=IOPGOOD THEN/* IS ELEMENT ALSO ON CDS?   */
*                                                                  0365
         CLI   IOPRETRN(IOPPTR),0                                  0365
         BNE   @RF00365                                            0365
*                 /***************************************************/
*                 /*                                                 */
*                 /* CHECK IF SYSMOD OWNING ELEMENT IS FMID/RMID/UMID*/
*                 /* IN ENTRY                                        */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0366
*                 DO;               /*                               */
*                   IF IOPFMID=ICTPTFS(1)/* DOES FMID MATCH OWNER, OR*/
*                       ×IOPRMID=ICTPTFS(1) THEN/* DOES RMID MATCH 0367
*                                      OWNER?                        */
         L     @15,@PC00001+8                                      0367
         L     @15,ICPTFPTR(,@15)                                  0367
         CLC   IOPFMID(7,IOPPTR),ICTPTFS(@15)                      0367
         BE    @RT00367                                            0367
         CLC   IOPRMID(7,IOPPTR),ICTPTFS(@15)                      0367
         BNE   @RF00367                                            0367
@RT00367 DS    0H                                                  0368
*                     XMID=ON;      /* INDICATE RMID/FMID MATCH      */
         OI    XMID,B'00100000'                                    0368
*                   ELSE                                           0369
*                     DO L=1 BY 1 WHILE IOPSRCND(L)^=IOPEOLST/* TO 0369
*                                      EOF,                          */
*                           &XMID=OFF;/* OR TILL HIT FOUND           */
         B     @RC00367                                            0369
@RF00367 LA    L,1                                                 0369
         B     @DE00369                                            0369
@DL00369 DS    0H                                                  0370
*                       IF IOPSRCID(L)=ICTPTFS(1) THEN/* UMID MATCH? */
         LR    @05,L                                               0370
         MH    @05,@CH00525                                        0370
         L     @15,@PC00001+8                                      0370
         L     @01,ICPTFPTR(,@15)                                  0370
         ALR   @05,IOPPTR                                          0370
         CLC   IOPSRCID-9(7,@05),ICTPTFS(@01)                      0370
         BNE   @RF00370                                            0370
*                         XMID=ON;  /* INDICATE UMID MATCH           */
         OI    XMID,B'00100000'                                    0371
*                     END;          /*                               */
@RF00370 AH    L,@CH00069                                          0372
@DE00369 LR    @05,L                                               0372
         MH    @05,@CH00525                                        0372
         SLR   @15,@15                                             0372
         IC    @15,IOPSRCND-9(@05,IOPPTR)                          0372
         CH    @15,@CH00714                                        0372
         BE    @DC00369                                            0372
         TM    XMID,B'00100000'                                    0372
         BZ    @DL00369                                            0372
@DC00369 DS    0H                                                  0373
*                 END;              /*                               */
@RC00367 DS    0H                                                  0374
*             END;                  /*                               */
*                                                                  0374
@RF00365 DS    0H                                                  0375
*           /*********************************************************/
*           /*                                                       */
*           /* DETERMINE IF CHECKS (2-4) ARE SUCCESSFULL             */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0375
*           IF IOPRETRN=IOPGOOD     /* NO ERRORS FROM HMASMIO        */
*               &SMDAPPLY=ON        /* OWNER SYSMOD IS APPLIED       */
*               &XMID=ON            /* EITHER FMID/RMID/UMID MATCH   */
*               &IOPSRDLB=MCBEDIST THEN/* CDS DLIB MATCHES MCB DLIB  */
@RF00358 CLI   IOPRETRN(IOPPTR),0                                  0375
         BNE   @RF00375                                            0375
         TM    SMDAPPLY,B'01100000'                                0375
         BNO   @RF00375                                            0375
         L     @15,@PC00001+12                                     0375
         L     @15,ELMCBPTR(,@15)                                  0375
         CLC   IOPSRDLB(8,IOPPTR),MCBEDIST(@15)                    0375
         BNE   @RF00375                                            0375
*             DO;                   /*                               */
*                                                                  0376
*               /*****************************************************/
*               /*                                                   */
*               /* UPDATE ELEMENT ENTRY IN ACDS DLIB = CDS AND MCB   */
*               /* DLIB VALUES AND MAKE ICT DLIB VALUE EQUAL TO MCB  */
*               /* DLIB VALUE                                        */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0377
*               ICTMDSTL(1)=MCBEDIST;/* SET ICT VALUE = MCB VALUE    */
         L     @14,@PC00001+4                                      0377
         L     @14,ICMODPTR(,@14)                                  0377
         MVC   ICTMDSTL(8,@14),MCBEDIST(@15)                       0377
*               IOPFUNCT=IOPLOC;    /* LOCATE FUNCTION               */
         MVI   IOPFUNCT(IOPPTR),X'03'                              0378
*               IOPDSID=IOPACDS;    /* ACDS DATASET                  */
         MVI   IOPDSID(IOPPTR),X'0C'                               0379
*               IOPNAME=ICTMNAME(1);/* ELEMENT NAME                  */
         MVC   IOPNAME(8,IOPPTR),ICTMNAME(@14)                     0380
*               IOPTYPE=IOPSRC;     /* SRC TYPE ENTRY                */
*                                                                  0381
         MVI   IOPTYPE(IOPPTR),X'08'                               0381
*               /*****************************************************/
*               /*                                                   */
*               /* RE LOCATE ACDS ENTRY TO BUFFER FOR UPDATE         */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0382
*               CALL HMASMIO(HMASMIOP);/* CALL SMP IO INTERFACE    0382
*                                      MODULE                        */
         ST    IOPPTR,@AL00001                                     0382
         L     @15,@CV01854                                        0382
         LA    @01,@AL00001                                        0382
         BALR  @14,@15                                             0382
*               IF IOPRETRN=IOPGOOD THEN/* ELEMENT MOD ENTRY FOUND?  */
         CLI   IOPRETRN(IOPPTR),0                                  0383
         BNE   @RF00383                                            0383
*                 DO;               /*                               */
*                   SAVADLIB=MCBEDIST;/* UPDATE TO MCB DISTLIB VALUE */
         L     @15,@PC00001+12                                     0385
         L     @15,ELMCBPTR(,@15)                                  0385
         MVC   SAVADLIB(8),MCBEDIST(@15)                           0385
*                   IOPSRDLB=MCBEDIST;/* UPDATE TO CDS/MCB DISTLIB   */
         MVC   IOPSRDLB(8,IOPPTR),MCBEDIST(@15)                    0386
*                   IOPBUSMD=ICTPTFS(1);/* SYSMOD CAUSING STOW       */
         L     @15,@PC00001+8                                      0387
         L     @01,ICPTFPTR(,@15)                                  0387
         MVC   IOPBUSMD(7,IOPPTR),ICTPTFS(@01)                     0387
*                   IOPBUTYP=IOPBUMOD;/* MODIFY                      */
         MVI   IOPBUTYP(IOPPTR),X'03'                              0388
*                   IOPFUNCT=IOPSTOWR;/* INDICATE STOW REPLACE       */
*                                                                  0389
         MVI   IOPFUNCT(IOPPTR),X'54'                              0389
*                   /*************************************************/
*                   /*                                               */
*                   /* REPLACE WITH UPDATED DLIB VALUE FROM MCB      */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0390
*                   CALL HMASMIO(HMASMIOP);/* CALL IO INTERFACE    0390
*                                      MODULE                        */
         ST    IOPPTR,@AL00001                                     0390
         L     @15,@CV01854                                        0390
         LA    @01,@AL00001                                        0390
         BALR  @14,@15                                             0390
*                 END;              /*                               */
*             END;                  /*                               */
*           ELSE                                                   0393
*             ICTMDSTE(1)=ON;       /* SET ON DLIB CONFLICT BIT      */
         B     @RC00375                                            0393
@RF00375 L     @15,@PC00001+4                                      0393
         L     @01,ICMODPTR(,@15)                                  0393
         OI    ICTMDSTE(@01),B'00000100'                           0393
*           IOPSRDLB=SAVADLIB;      /* RESTORE DLIB VALUE IF CHANGED */
@RC00375 MVC   IOPSRDLB(8,IOPPTR),SAVADLIB                         0394
*         END;                      /*                               */
*       ELSE                                                       0396
*         ICTMDSTE(1)=ON;           /* SET ON DLIB CONFLICT BIT      */
         B     @RC00350                                            0396
@RF00350 L     @15,@PC00001+4                                      0396
         L     @01,ICMODPTR(,@15)                                  0396
         OI    ICTMDSTE(@01),B'00000100'                           0396
*     END;                          /*                               */
@RC00350 DS    0H                                                  0398
*   IF IOPRETRN>IOPNOTFD THEN       /* IF ERROR SET CODE             */
@RF00348 CLI   IOPRETRN(IOPPTR),4                                  0398
         BNH   @RF00398                                            0398
*     TM3HIRC=MAX(TM3HIRC,IOPRETRN);/* SET RC                        */
         SLR   @15,@15                                             0399
         IC    @15,IOPRETRN(,IOPPTR)                               0399
         CR    TM3HIRC,@15                                         0399
         BNL   *+6
         LR    TM3HIRC,@15                                         0399
*   IF TM3HIRC<STOPPTF              /* PREVIOUS PROCESSING OK, AND A */
*       &BLDACDSM=ON THEN           /* ACDS MOD ENTRY MUST BE BUILT  */
@RF00398 CH    TM3HIRC,@CH00061                                    0400
         BNL   @RF00400                                            0400
         TM    BLDACDSM,B'00000100'                                0400
         BNO   @RF00400                                            0400
*     DO;                           /* BUILD AND ADD A MOD ENTRY     */
*                                                                  0401
*       /*************************************************************/
*       /*                                                           */
*       /* IF NO ACDS SRC ENTRY WAS FOUND, THEN CREATE A ACDS SRC    */
*       /* ENTRY FOR THIS ELEMENT                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0402
*       IOPSRCNT=''B;               /* INIT SRC ENTRY                */
         XC    IOPSRCNT(104,IOPPTR),IOPSRCNT(IOPPTR)               0402
*       IOPSRCFX=BLANKS;            /* FIXED RECORD INIT             */
         MVI   IOPSRCFX+8(IOPPTR),C' '                             0403
         MVC   IOPSRCFX+9(71,IOPPTR),IOPSRCFX+8(IOPPTR)            0403
         MVC   IOPSRCFX(8,IOPPTR),BLANKS                           0403
*       IOPNAME=ICTMNAME(1);        /* MOD ENTRY NAME TO ADD         */
         L     @15,@PC00001+4                                      0404
         L     @01,ICMODPTR(,@15)                                  0404
         MVC   IOPNAME(8,IOPPTR),ICTMNAME(@01)                     0404
*       IOPTYPE=IOPSRC;             /* SRC TYPE ENTRY                */
         MVI   IOPTYPE(IOPPTR),X'08'                               0405
*       IOPSRLNG=IOPMCASI;          /* LANGUAGE TYPE                 */
         MVI   IOPSRLNG(IOPPTR),X'00'                              0406
*       IOPNTLVL=IOPMODLC;          /* CURENT LEVEL                  */
         MVI   IOPNTLVL(IOPPTR),X'02'                              0407
*       IOPRMID=NULLPTF#;           /* RMID VALUE ==> NEW ELEMENT    */
         MVC   IOPRMID(7,IOPPTR),@CC01873                          0408
*       IOPFMID=NULLPTF#;           /* FMID VALUE ==> NEW ELEMENT    */
         MVC   IOPFMID(7,IOPPTR),@CC01873                          0409
*       IOPBUSMD=ICTPTFS(1);        /* SYSMOD CAUSING STOW           */
         L     @15,@PC00001+8                                      0410
         L     @01,ICPTFPTR(,@15)                                  0410
         MVC   IOPBUSMD(7,IOPPTR),ICTPTFS(@01)                     0410
*       IOPBUTYP=IOPBUADD;          /* ADD ENTRY                     */
         MVI   IOPBUTYP(IOPPTR),X'01'                              0411
*       IOPSRDLB=MCBEDIST;          /* DISTRIBUTION LIB FROM MCB     */
         L     @15,@PC00001+12                                     0412
         L     @01,ELMCBPTR(,@15)                                  0412
         MVC   IOPSRDLB(8,IOPPTR),MCBEDIST(@01)                    0412
*       IOPSRCND(1)=IOPEOLST;       /* SET END OF LIST MARKER        */
         MVI   IOPSRCND(IOPPTR),X'FF'                              0413
*       IOPFUNCT=IOPSTOWR;          /* INDICATE STOW REPLACE FUNCTION*/
*                                                                  0414
         MVI   IOPFUNCT(IOPPTR),X'54'                              0414
*       /*************************************************************/
*       /*                                                           */
*       /* ADD NEW MOD ENTRY TO THE CDS FOR THIS ELEMENT             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0415
*       CALL HMASMIO(HMASMIOP);     /* CALL SMP IO INTERFACE MODULE  */
         ST    IOPPTR,@AL00001                                     0415
         L     @15,@CV01854                                        0415
         LA    @01,@AL00001                                        0415
         BALR  @14,@15                                             0415
*       TM3HIRC=MAX(TM3HIRC,IOPRETRN);/* PICK UP HIGHEST RC          */
         SLR   @15,@15                                             0416
         IC    @15,IOPRETRN(,IOPPTR)                               0416
         CR    TM3HIRC,@15                                         0416
         BNL   *+6
         LR    TM3HIRC,@15                                         0416
*     END;                          /*                               */
*   END ACCPROC;                    /*                               */
@EL00006 DS    0H                                                  0418
@EF00006 DS    0H                                                  0418
@ER00006 LM    @14,@02,@SA00006                                    0418
         LM    @04,@12,@SA00006+20                                 0418
         BR    @14                                                 0418
*SYSCHK:                                                           0419
*   PROC;                           /*                               */
SYSCHK   STM   @14,@02,@SA00007                                    0419
         STM   @04,@12,@SA00007+20                                 0419
*   RFY                                                            0420
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0421
*     ICTMOD BASED(ICMODPTR);       /* BASE ON MOD PARAMETER PASSED  */
*   RFY                                                            0422
*     ICTPTF BASED(ICPTFPTR);       /* BASE ON SYSMOD PARAMETER    0422
*                                      PASSED                        */
*   RFY                                                            0423
*     MCBELEMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   RFY                                                            0424
*     MCBPTFMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   IF ICTMSYSL(1)=BLANKS           /* SYSLIB NOT YET DETERMINED     */
*     THEN                                                         0425
         L     @15,@PC00001+4                                      0425
         L     @15,ICMODPTR(,@15)                                  0425
         CLC   ICTMSYSL(8,@15),BLANKS                              0425
         BNE   @RF00425                                            0425
*     DO;                                                          0426
*                                                                  0426
*       /*************************************************************/
*       /*                                                           */
*       /* SRC'S SYSLIB NOT YET DETERMINED ... DETERMINE IF THIS     */
*       /* ELEMENT'S DISTLIB IS A TOTALLY COPIED LIBRARY (I.E., A CDS*/
*       /* DLIB ENTRY EXISTS).                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0427
*       RFY                                                        0427
*         HMASMIOP BASED(TBLXIOP2); /* IOP FOR DLIB PROCESSING       */
*       IOPFUNCT=IOPLOC;            /* SET FUNCTION TO LOCATE        */
         L     @14,@PC00001                                        0428
         L     @14,TBLXIOP2(,@14)                                  0428
         MVI   IOPFUNCT(@14),X'03'                                 0428
*       IOPTYPE=IOPDLB;             /* INDICATE DLIB ENTRY           */
         MVI   IOPTYPE(@14),X'06'                                  0429
*       IOPNAME=ICTMDSTL(1);        /* DISTLIB ENTRY NAME            */
         MVC   IOPNAME(8,@14),ICTMDSTL(@15)                        0430
*       IOPDSID=IOPCDSM;            /*                               */
         MVI   IOPDSID(@14),X'02'                                  0431
*       CALL HMASMIO(HMASMIOP);     /* CALL SMP IO INTERFACE MODULE  */
         ST    @14,@AL00001                                        0432
         L     @15,@CV01854                                        0432
         LA    @01,@AL00001                                        0432
         BALR  @14,@15                                             0432
*       IF IOPRETRN=IOPGOOD THEN    /* TOTAL COPY DLIB (IE.-FOUND)   */
*                                                                  0433
         L     @15,@PC00001                                        0433
         L     @01,TBLXIOP2(,@15)                                  0433
         CLI   IOPRETRN(@01),0                                     0433
         BNE   @RF00433                                            0433
*         /***********************************************************/
*         /*                                                         */
*         /* OBTAIN TARGET SYSLIB FOR SRC FROM CDS DLIB ENTRY        */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0434
*         DO L=1 BY 1 WHILE IOPDLBND(L)^=IOPEOLST;/* DO TO END OF  0434
*                                      LIST                          */
         LA    L,1                                                 0434
         B     @DE00434                                            0434
@DL00434 DS    0H                                                  0435
*           IF IOPDLIND(L)=IOPDLSYS THEN/* SYSLIB TYPE ENTRY?        */
         LR    @05,L                                               0435
         MH    @05,@CH00525                                        0435
         L     @15,@PC00001                                        0435
         L     @15,TBLXIOP2(,@15)                                  0435
         SLR   @14,@14                                             0435
         IC    @14,IOPDLIND-9(@05,@15)                             0435
         CH    @14,@CH00069                                        0435
         BNE   @RF00435                                            0435
*             DO;                   /*                               */
*               STOWSRC=ON;         /* STOW ENTRY WITH SYSLIBS       */
         OI    STOWSRC,B'01000000'                                 0437
*               ICTMSYSL(1)=IOPDSYS(L);/* SAVE SYSLIB                */
         L     @14,@PC00001+4                                      0438
         L     @01,ICMODPTR(,@14)                                  0438
         ALR   @15,@05                                             0438
         MVC   ICTMSYSL(8,@01),IOPDSYS-9(@15)                      0438
*             END;                  /*                               */
*         END;                      /*                               */
@RF00435 AH    L,@CH00069                                          0440
@DE00434 LR    @05,L                                               0440
         MH    @05,@CH00525                                        0440
         L     @15,@PC00001                                        0440
         L     @01,TBLXIOP2(,@15)                                  0440
         SLR   @00,@00                                             0440
         IC    @00,IOPDLBND-9(@05,@01)                             0440
         CH    @00,@CH00714                                        0440
         BNE   @DL00434                                            0440
*       IF IOPRETRN>IOPNTFND THEN   /* IF ERROR                      */
@RF00433 L     @15,@PC00001                                        0441
         L     @15,TBLXIOP2(,@15)                                  0441
         CLI   IOPRETRN(@15),4                                     0441
         BNH   @RF00441                                            0441
*         TM3HIRC=MAX(TM3HIRC,IOPRETRN);/* SET CODE                  */
         SLR   @14,@14                                             0442
         IC    @14,IOPRETRN(,@15)                                  0442
         CR    TM3HIRC,@14                                         0442
         BNL   *+6
         LR    TM3HIRC,@14                                         0442
*     END;                          /* SYSLIB DETERMINATION          */
@RF00441 DS    0H                                                  0444
*   IF STOWSRC=ON                   /* ENTRY TO BE CREATED/UPDATED   */
*       &TM3HIRC<STOPPTF            /* PTF NOT BEING TERMINATED      */
*     THEN                                                         0444
@RF00425 TM    STOWSRC,B'01000000'                                 0444
         BNO   @RF00444                                            0444
         CH    TM3HIRC,@CH00061                                    0444
         BNL   @RF00444                                            0444
*     DO;                                                          0445
*                                                                  0445
*       /*************************************************************/
*       /*                                                           */
*       /* CREATE/UPDATE THE CDS SRC ENTRY                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0446
*       RFY                                                        0446
*         HMASMIOP BASED(IOPPTR);   /* SRC IOP                       */
*       IOPBUTYP=IOPBUMOD;          /* MODIFY THE ENTRY              */
         MVI   IOPBUTYP(IOPPTR),X'03'                              0447
*       IF SRCFND=OFF THEN          /* NO CDS ENTRY                  */
         TM    SRCFND,B'10000000'                                  0448
         BNZ   @RF00448                                            0448
*         DO;                       /* SETUP TO CREATE NEW ONE       */
*                                                                  0449
*           /*********************************************************/
*           /*                                                       */
*           /* INITIALIZE FIELDS FOR A NEW ENTRY                     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0450
*           IOPSRCNT=''B;           /* INIT SRC ENTRY                */
         XC    IOPSRCNT(104,IOPPTR),IOPSRCNT(IOPPTR)               0450
*           IOPSRCFX=BLANKS;        /* INIT FIXED FIELD              */
         MVI   IOPSRCFX+8(IOPPTR),C' '                             0451
         MVC   IOPSRCFX+9(71,IOPPTR),IOPSRCFX+8(IOPPTR)            0451
         MVC   IOPSRCFX(8,IOPPTR),BLANKS                           0451
*           IOPSRLNG=IOPMCASI;      /* LANGUAGE TYPE                 */
         MVI   IOPSRLNG(IOPPTR),X'00'                              0452
*           IOPNTLVL=IOPSRCLC;      /* CURENT LEVEL                  */
         MVI   IOPNTLVL(IOPPTR),X'03'                              0453
*           IOPRMID=NULLPTF#;       /* RMID VALUE ==> NEW ELEMENT    */
         MVC   IOPRMID(7,IOPPTR),@CC01873                          0454
*           IOPFMID=NULLPTF#;       /* FMID VALUE ==> NEW ELEMENT    */
         MVC   IOPFMID(7,IOPPTR),@CC01873                          0455
*           IOPBUTYP=IOPBUADD;      /* ADD THE ENTRY                 */
         MVI   IOPBUTYP(IOPPTR),X'01'                              0456
*           IOPSRCND(1)=IOPEOLST;   /* VARIABLE LIST NULL            */
         MVI   IOPSRCND(IOPPTR),X'FF'                              0457
*         END;                      /*                               */
*                                                                  0458
*       /*************************************************************/
*       /*                                                           */
*       /* SET FIELDS COMMON TO BOTH A NEW AND AN EXISTING ENTRY     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0459
*       IOPSRSYS=ICTMSYSL(1);       /* SYSLIB VALUE                  */
@RF00448 L     @15,@PC00001+4                                      0459
         L     @15,ICMODPTR(,@15)                                  0459
         MVC   IOPSRSYS(8,IOPPTR),ICTMSYSL(@15)                    0459
*       IF DLIBBIT=OFF THEN         /* DLIB NOT IN (A)CDS SRC ENTRY  */
         TM    DLIBBIT,B'10000000'                                 0460
         BNZ   @RF00460                                            0460
*         IOPSRDLB=ICTMDSTL(1);     /* DISTRIBUTION LIB FROM ICT     */
         MVC   IOPSRDLB(8,IOPPTR),ICTMDSTL(@15)                    0461
*       IOPFUNCT=IOPSTOWR;          /* INDICATE STOW REPLACE FUNCTION*/
@RF00460 MVI   IOPFUNCT(IOPPTR),X'54'                              0462
*       IOPTYPE=IOPSRC;             /* INDICATE MOD ENTRY            */
         MVI   IOPTYPE(IOPPTR),X'08'                               0463
*       IOPNAME=ICTMNAME(1);        /* MOD NAME BEING PROCESSED      */
         L     @15,@PC00001+4                                      0464
         L     @01,ICMODPTR(,@15)                                  0464
         MVC   IOPNAME(8,IOPPTR),ICTMNAME(@01)                     0464
*       IOPBUSMD=ICTPTFS(1);        /* SYSMOD CAUSING STOW           */
         L     @15,@PC00001+8                                      0465
         L     @01,ICPTFPTR(,@15)                                  0465
         MVC   IOPBUSMD(7,IOPPTR),ICTPTFS(@01)                     0465
*       IOPDSID=IOPCDSM;            /*                               */
         MVI   IOPDSID(IOPPTR),X'02'                               0466
*       CALL HMASMIO(HMASMIOP);     /* CALL SMP IO INTERFACE MODULE  */
         ST    IOPPTR,@AL00001                                     0467
         L     @15,@CV01854                                        0467
         LA    @01,@AL00001                                        0467
         BALR  @14,@15                                             0467
*       TM3HIRC=MAX(TM3HIRC,IOPRETRN);/* SET CODE                    */
         SLR   @15,@15                                             0468
         IC    @15,IOPRETRN(,IOPPTR)                               0468
         CR    TM3HIRC,@15                                         0468
         BNL   *+6
         LR    TM3HIRC,@15                                         0468
*     END;                          /*                               */
*   RETURN;                                                        0470
@EL00007 DS    0H                                                  0470
@EF00007 DS    0H                                                  0470
@ER00007 LM    @14,@02,@SA00007                                    0470
         LM    @04,@12,@SA00007+20                                 0470
         BR    @14                                                 0470
*   END SYSCHK;                     /*                               */
         B     @EL00007                                            0471
*                                                                  0472
*   /*****************************************************************/
*   /*                                                               */
*   /* FROM LIB DETERMINATION                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0472
*FMLIBCK:                                                          0472
*   PROC;                           /*                               */
FMLIBCK  STM   @14,@02,@SA00008                                    0472
         STM   @04,@12,@SA00008+20                                 0472
*   RFY                                                            0473
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0474
*     ICTMOD BASED(ICMODPTR);       /* BASE ON MOD PARAMETER PASSED  */
*   RFY                                                            0475
*     ICTPTF BASED(ICPTFPTR);       /* BASE ON SYSMOD PARAMETER    0475
*                                      PASSED                        */
*   RFY                                                            0476
*     MCBELEMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   RFY                                                            0477
*     MCBPTFMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*                                                                  0477
*   /*****************************************************************/
*   /*                                                               */
*   /* SOURCE REPLACENTS                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0478
*   IF ICTMSRCR(1)=ON THEN          /* PROCESS REPLACEMENTS FIRST    */
         L     @15,@PC00001+4                                      0478
         L     @15,ICMODPTR(,@15)                                  0478
         TM    ICTMSRCR(@15),B'00000010'                           0478
         BNO   @RF00478                                            0478
*     DO;                           /*                               */
*                                                                  0479
*       /*************************************************************/
*       /*                                                           */
*       /* APPLY / ACCEPT PROCESSING FOR REPLACEMENTS.               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0480
*       IF CCAAPPLY=ON              /* IS FUNCTION APPLY OR ACCEPT?  */
*           ×CCAACCPT=ON THEN       /*                               */
         TM    CCAAPPLY(CCAPTR),B'01100000'                        0480
         BZ    @RF00480                                            0480
*         DO;                       /*                               */
*           IF MCBETXLB^=BLANKS THEN/* WAS TXLIB ENTERED ON ++SRC?   */
         L     @14,@PC00001+12                                     0482
         L     @14,ELMCBPTR(,@14)                                  0482
         CLC   MCBETXLB(8,@14),BLANKS                              0482
         BE    @RF00482                                            0482
*             DO;                   /*                               */
*               ICTFMLIB(1)=MCBETXLB;/* YES- SET FROMLIB TO MCBETXLB */
         MVC   ICTFMLIB(8,@15),MCBETXLB(@14)                       0484
*               ICTLIBTX(1)=ON;     /* INDICATE TXLIB                */
         OI    ICTLIBTX(@15),B'01000000'                           0485
*             END;                  /*                               */
*           ELSE                                                   0487
*             IF MCBERLF^=BLANKS(1:4) THEN/* RELFILE ENTERED ON    0487
*                                      ++SRC?                        */
         B     @RC00482                                            0487
@RF00482 L     @15,@PC00001+12                                     0487
         L     @01,ELMCBPTR(,@15)                                  0487
         CLC   MCBERLF(4,@01),BLANKS                               0487
         BE    @RF00487                                            0487
*               DO;                 /* YES- PROCESS FOR RELFILE      */
*                 ICTMRELF(1)=ON;   /* SET BIT TO INDICATE RELF      */
         L     @05,@PC00001+4                                      0489
         L     @05,ICMODPTR(,@05)                                  0489
         OI    ICTMRELF(@05),B'00100000'                           0489
*                 ICTFMLIB(1)=SMPTLIB;/* SET FROMLIB TO SMPTLIB      */
*                                                                  0490
         MVC   ICTFMLIB(8,@05),@CC01865                            0490
*                 /***************************************************/
*                 /*                                                 */
*                 /* CONVERT RELFILE TO HEX AND MOVE INTO ICTMRELN(1)*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0491
*                 RADJ=CZEROS;      /* INIT WORKAREA TO RECEIVE RIGHT
*                                      ADJUSTED RELFILE NUMBER       */
         MVC   RADJ(8),@CC01871                                    0491
*                 S=LENGTH(RADJ);   /* INDEX SET TO RIGHT HAND BYTE  */
         LA    S,8                                                 0492
*                 DO T=LENGTH(MCBERLF) TO 1 BY-1;/* MOVE THROUGH   0493
*                                      MCBERLF FROM RIGHT TO LEFT    */
         LA    T,4                                                 0493
@DL00493 DS    0H                                                  0494
*                   IF MCBERLF(T)^=' ' THEN/* IGNORE BLANKS IN FIELD */
         L     @15,@PC00001+12                                     0494
         L     @15,ELMCBPTR(,@15)                                  0494
         LR    @14,@15                                             0494
         ALR   @14,T                                               0494
         CLI   MCBERLF-1(@14),C' '                                 0494
         BE    @RF00494                                            0494
*                     DO;           /*                               */
*                       RADJ(S)=MCBERLF(T);/* PUT CHAR IN WORKAREA   */
         LA    @01,RADJ-1(S)                                       0496
         ALR   @15,T                                               0496
         MVC   0(1,@01),MCBERLF-1(@15)                             0496
*                       S=S-1;      /* MOVE INDEX 1 TO LEFT          */
         BCTR  S,0                                                 0497
*                     END;          /*                               */
*                 END;              /*                               */
@RF00494 BCTR  T,0                                                 0499
         CH    T,@CH00069                                          0499
         BNL   @DL00493                                            0499
*                 PACK(PKDEC,RADJ); /* CONVERT CHAR TO PACKED DECIMAL*/
         PACK  PKDEC(8),RADJ(8)                                    0500
*                 CVB(FIX31,PKDEC); /* CONVERT PACKED DECIMAL->BINARY*/
         CVB   FIX31,PKDEC                                         0501
*                 ICTMRELN(1)=FIX31;/* SET CURRENT ELEMENT RELFILE#  */
         L     @05,@PC00001+4                                      0502
         L     @05,ICMODPTR(,@05)                                  0502
         STH   FIX31,ICTMRELN(,@05)                                0502
*               END;                /*                               */
*             ELSE                                                 0504
*               ICTFMLIB(1)=SMPWRK2;/* YES- SET FROMLIB TO SMPWRK2   */
         B     @RC00487                                            0504
@RF00487 L     @15,@PC00001+4                                      0504
         L     @01,ICMODPTR(,@15)                                  0504
         MVC   ICTFMLIB(8,@01),@CC01867                            0504
*         END;                      /*                               */
*                                                                  0505
@RC00487 DS    0H                                                  0505
@RC00482 DS    0H                                                  0506
*       /*************************************************************/
*       /*                                                           */
*       /* FROMLIB AT RESTORE FOR REPLACEMENT                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0506
*       IF CCARES=ON THEN           /*                               */
@RF00480 TM    CCARES(CCAPTR),B'00001000'                          0506
         BNO   @RF00506                                            0506
*         ICTFMLIB(1)=ICTMDSTL(1);  /* FROMLIB IS THE DLIB           */
*                                                                  0507
         L     @15,@PC00001+4                                      0507
         L     @15,ICMODPTR(,@15)                                  0507
         MVC   ICTFMLIB(8,@15),ICTMDSTL(@15)                       0507
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE IF IEBCOPY SHOULD BE USED FOR MODIFICATION      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0508
*       ICTMCOPY(1)=ON;             /* DEFAULT TO COPY               */
@RF00506 L     @15,@PC00001+4                                      0508
         L     @15,ICMODPTR(,@15)                                  0508
         OI    ICTMCOPY(@15),B'01000000'                           0508
*       IF                          /* UNLESS                        */
*           (ICTMSSI(1)^=BLANKS     /* SSI SPECIFIED ON ++           */
*           &ICTFMLIB(1)=SMPWRK2)   /* AND COMING FROM PTFIN         */
*         THEN                      /*                               */
         CLC   ICTMSSI(8,@15),BLANKS                               0509
         BE    @RF00509                                            0509
         CLC   ICTFMLIB(8,@15),@CC01867                            0509
         BNE   @RF00509                                            0509
*         ICTMCOPY(1)=OFF;          /* USE UPDATE TO PROCESS         */
         NI    ICTMCOPY(@15),B'10111111'                           0510
*     END;                          /*                               */
@RF00509 DS    0H                                                  0512
*                                                                  0512
*   /*****************************************************************/
*   /*                                                               */
*   /* UPDATE FROMLIB DETERMINATION.                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0512
*   IF ICTMSRCU(1)=ON THEN          /*                               */
@RF00478 L     @15,@PC00001+4                                      0512
         L     @01,ICMODPTR(,@15)                                  0512
         TM    ICTMSRCU(@01),B'00000001'                           0512
         BNO   @RF00512                                            0512
*     DO;                           /*                               */
*                                                                  0513
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK ICT FOR IDENTICAL ENTRY, USE SOME DATA IN THE CASE  */
*       /* WHERE THIS IS THE FIRST OCCURANCE OF THIS ELEMENT         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0514
*       RFY                                                        0514
*         ICTMOD BASED(CCAICMOD);   /* BASE FOR ENTRIE ICT MODS      */
*       DO M=1 BY 1 WHILE ICTMEND(M)^=ICTENDNT/*                     */
*             &ENTRYICT=OFF;        /*                               */
         LA    M,1                                                 0515
         B     @DE00515                                            0515
@DL00515 DS    0H                                                  0516
*         IF ICTMSRCR(M)=ON         /* SOURCE REPLACEMENT TYPE       */
*             &ICMODPTR->ICTMNAME(1)=ICTMNAME(M)/* ..SAME NAME       */
*           THEN                    /*                               */
         LR    @05,M                                               0516
         MH    @05,@CH02012                                        0516
         L     @15,CCAICMOD(,CCAPTR)                               0516
         ST    @05,@TF00001                                        0516
         ALR   @05,@15                                             0516
         AL    @05,@CF02027                                        0516
         TM    ICTMSRCR-9(@05),B'00000010'                         0516
         BNO   @RF00516                                            0516
         L     @05,@PC00001+4                                      0516
         L     @05,ICMODPTR(,@05)                                  0516
         LR    @14,@15                                             0516
         AL    @14,@TF00001                                        0516
         AL    @14,@CF02028                                        0516
         CLC   ICTMNAME(8,@05),ICTMNAME(@14)                       0516
         BNE   @RF00516                                            0516
*           DO;                     /*                               */
*             ENTRYICT=ON;          /* MATCH FOUND SWITHC            */
         OI    ENTRYICT,B'00000010'                                0518
*             ICMODPTR->ICTFMLIB(1)=ICTTOLIB(M);/* GET TOLIB         */
         AL    @15,@TF00001                                        0519
         AL    @15,@CF02030                                        0519
         MVC   ICTFMLIB(8,@05),ICTTOLIB-32(@15)                    0519
*           END;                    /*                               */
*       END;                        /*                               */
@RF00516 AH    M,@CH00069                                          0521
@DE00515 LR    @05,M                                               0521
         MH    @05,@CH02012                                        0521
         L     @01,CCAICMOD(,CCAPTR)                               0521
         AL    @01,@CF02028                                        0521
         L     @05,ICTMEND(@05,@01)                                0521
         CL    @05,ICTENDNT                                        0521
         BE    @DC00515                                            0521
         TM    ENTRYICT,B'00000010'                                0521
         BZ    @DL00515                                            0521
@DC00515 DS    0H                                                  0522
*       RFY                                                        0522
*         ICTMOD BASED(ICMODPTR);   /* BASE FOR ENTRY UNDER STUDY    */
*                                                                  0522
*       /*************************************************************/
*       /*                                                           */
*       /* IF FROMLIB ALREADY KNOW THEN SKIP REST                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0523
*       IF ICTFMLIB(1)=BLANKS THEN  /*                               */
         L     @15,@PC00001+4                                      0523
         L     @15,ICMODPTR(,@15)                                  0523
         CLC   ICTFMLIB(8,@15),BLANKS                              0523
         BNE   @RF00523                                            0523
*         DO;                       /*                               */
*                                                                  0524
*           /*********************************************************/
*           /*                                                       */
*           /* APPLY PROCESSING FOR UPDATE TYPES.                    */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0525
*           IF CCAAPPLY=ON THEN     /*                               */
         TM    CCAAPPLY(CCAPTR),B'01000000'                        0525
         BNO   @RF00525                                            0525
*             DO;                   /*                               */
*                                                                  0526
*               /*****************************************************/
*               /*                                                   */
*               /* USE SYSLIB AS FROMLIB IF IT IS NOWN OTHERWISE USE */
*               /* STS OR DISTLIB                                    */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0527
*               IF ICTMSYSL(1)^=BLANKS THEN/*                        */
         CLC   ICTMSYSL(8,@15),BLANKS                              0527
         BE    @RF00527                                            0527
*                 DO;               /*                               */
*                   ICTFMLIB(1)=ICTMSYSL(1);/* OPERATIG SYSTEM     0529
*                                      LIBRARY                       */
         MVC   ICTFMLIB(8,@15),ICTMSYSL(@15)                       0529
*                 END;              /*                               */
*               ELSE                /*                               */
*                                                                  0531
*                 /***************************************************/
*                 /*                                                 */
*                 /* IF INPUT FOR UPDATE IS TO BE SMPSTS THE CHECK   */
*                 /* FOR MEMBER PRESENT, OTHERWISE USE THE DLIB AS   */
*                 /* INPUT.                                          */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0531
*                 DO;               /*                               */
         B     @RC00527                                            0531
@RF00527 DS    0H                                                  0532
*                   IOPFUNCT=IOPBLDL;/* LOCATE MEMBER ON STS         */
         MVI   IOPFUNCT(IOPPTR),X'04'                              0532
*                   IOPDSID=IOPSTS; /*                               */
         MVI   IOPDSID(IOPPTR),X'1A'                               0533
*                   IOPNAME=ICTMNAME(1);/*                           */
         L     @15,@PC00001+4                                      0534
         L     @01,ICMODPTR(,@15)                                  0534
         MVC   IOPNAME(8,IOPPTR),ICTMNAME(@01)                     0534
*                   CALL HMASMIO(HMASMIOP);/*                        */
         ST    IOPPTR,@AL00001                                     0535
         L     @15,@CV01854                                        0535
         LA    @01,@AL00001                                        0535
         BALR  @14,@15                                             0535
*                   IF IOPRETRN=IOPGOOD THEN/* FOUND ON STS          */
         CLI   IOPRETRN(IOPPTR),0                                  0536
         BNE   @RF00536                                            0536
*                     DO;           /*                               */
*                       ICTFMLIB(1)=SMPSTS;/* INPUT FOR UPDATE IS STS*/
         L     @15,@PC00001+4                                      0538
         L     @01,ICMODPTR(,@15)                                  0538
         MVC   ICTFMLIB(8,@01),@CC01869                            0538
*                     END;          /*                               */
*                   ELSE            /*                               */
*                     IF IOPRETRN=IOPNOTFD THEN/* NOT ON STS USE DLIB*/
         B     @RC00536                                            0540
@RF00536 CLI   IOPRETRN(IOPPTR),4                                  0540
         BNE   @RF00540                                            0540
*                       ICTFMLIB(1)=ICTMDSTL(1);/* INPUT FOR UPDATE  */
         L     @15,@PC00001+4                                      0541
         L     @15,ICMODPTR(,@15)                                  0541
         MVC   ICTFMLIB(8,@15),ICTMDSTL(@15)                       0541
*                     ELSE          /* IO ERROR                      */
*                       TM3HIRC=MAX(TM3HIRC,IOPRETRN);/* ERROR CODE  */
         B     @RC00540                                            0542
@RF00540 SLR   @15,@15                                             0542
         IC    @15,IOPRETRN(,IOPPTR)                               0542
         CR    TM3HIRC,@15                                         0542
         BNL   *+6
         LR    TM3HIRC,@15                                         0542
*                 END;              /*                               */
@RC00540 DS    0H                                                  0543
@RC00536 DS    0H                                                  0544
*             END;                  /*                               */
*                                                                  0544
@RC00527 DS    0H                                                  0545
*           /*********************************************************/
*           /*                                                       */
*           /* FOR ACCEPT THE INPUT FOR UPDATE IS THE DLIB.          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0545
*           IF CCAACCPT=ON THEN     /*                               */
@RF00525 TM    CCAACCPT(CCAPTR),B'00100000'                        0545
         BNO   @RF00545                                            0545
*             ICTFMLIB(1)=ICTMDSTL(1);/*                             */
         L     @15,@PC00001+4                                      0546
         L     @15,ICMODPTR(,@15)                                  0546
         MVC   ICTFMLIB(8,@15),ICTMDSTL(@15)                       0546
*         END;                      /*                               */
*     END;                          /*                               */
*   END FMLIBCK;                    /*                               */
@EL00008 DS    0H                                                  0549
@EF00008 DS    0H                                                  0549
@ER00008 LM    @14,@02,@SA00008                                    0549
         LM    @04,@12,@SA00008+20                                 0549
         BR    @14                                                 0549
*TOLIBCK:                                                          0550
*   PROC;                           /*                               */
TOLIBCK  STM   @14,@12,12(@13)                                     0550
*   RFY                                                            0551
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0552
*     ICTMOD BASED(ICMODPTR);       /* BASE ON MOD PARAMETER PASSED  */
*   RFY                                                            0553
*     ICTPTF BASED(ICPTFPTR);       /* BASE ON SYSMOD PARAMETER    0553
*                                      PASSED                        */
*   RFY                                                            0554
*     MCBELEMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   RFY                                                            0555
*     MCBPTFMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*                                                                  0555
*   /*****************************************************************/
*   /*                                                               */
*   /* THE OUTPUT (SYSUT2) FOR UPDATE PROCESSING IS DETERMINED.      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0556
*                                                                  0556
*   /*****************************************************************/
*   /*                                                               */
*   /* FOR ACCEPT THE OUTPUT DATA SET IS THE DISTLIB                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0556
*   IF CCAACCPT=ON THEN             /*                               */
         TM    CCAACCPT(CCAPTR),B'00100000'                        0556
         BNO   @RF00556                                            0556
*     ICTTOLIB(1)=ICTMDSTL(1);      /* USE DISTLIB                   */
*                                                                  0557
         L     @15,@PC00001+4                                      0557
         L     @15,ICMODPTR(,@15)                                  0557
         MVC   ICTTOLIB(8,@15),ICTMDSTL(@15)                       0557
*   /*****************************************************************/
*   /*                                                               */
*   /* FOR APPLY AND RESTORE USE SYSLIB IF THERE OR STS.             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0558
*   ELSE                            /*                               */
*     IF ICTMSYSL(1)=BLANKS THEN    /* NO SYSLIB                     */
         B     @RC00556                                            0558
@RF00556 L     @15,@PC00001+4                                      0558
         L     @15,ICMODPTR(,@15)                                  0558
         CLC   ICTMSYSL(8,@15),BLANKS                              0558
         BNE   @RF00558                                            0558
*       ICTTOLIB(1)=SMPSTS;         /* USE SMPSTS                    */
         MVC   ICTTOLIB(8,@15),@CC01869                            0559
*     ELSE                          /*                               */
*       ICTTOLIB(1)=ICTMSYSL(1);    /* USE SYSLIB                    */
         B     @RC00558                                            0560
@RF00558 L     @15,@PC00001+4                                      0560
         L     @15,ICMODPTR(,@15)                                  0560
         MVC   ICTTOLIB(8,@15),ICTMSYSL(@15)                       0560
*   END TOLIBCK;                    /*                               */
@EL00009 DS    0H                                                  0561
@EF00009 DS    0H                                                  0561
@ER00009 LM    @14,@12,12(@13)                                     0561
         BR    @14                                                 0561
*MODIDCHK:                                                         0562
*   PROC;                           /*                               */
MODIDCHK STM   @14,@02,@SA00010                                    0562
         STM   @04,@12,@SA00010+20                                 0562
*   RFY                                                            0563
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0564
*     ICTMOD BASED(CCAICMOD);       /* BASE TO FULL ICT MOD SECTION  */
*   RFY                                                            0565
*     ICTPTF BASED(ICPTFPTR);       /* BASE ON SYSMOD PARAMETER    0565
*                                      PASSED                        */
*   RFY                                                            0566
*     MCBELEMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   RFY                                                            0567
*     MCBPTFMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   ICMODPTR->ICTMICHN(1)=ZERO;     /* CLEAR ELEMENT''S MODID LIST 0568
*                                      POINTER                       */
*                                                                  0568
         L     @15,@PC00001+4                                      0568
         L     @01,ICMODPTR(,@15)                                  0568
         SLR   @00,@00                                             0568
         ST    @00,ICTMICHN(,@01)                                  0568
*   /*****************************************************************/
*   /*                                                               */
*   /* SEARCH THE ICT MODULE SECTION FOR ANOTHER VERSION OF THIS     */
*   /* ELEMENT WHICH ALREADY HAS A MODID LIST BUILT. IF FOUND, THEN  */
*   /* CHAIN THIS ICT MOD ENTRY TO THAT ENTRY'S MODID LIST.          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0569
*   DO L=1 BY 1 WHILE ICTMEND(L)^=ICTENDNT/* TILL END OF ICT MOD     */
*         &ICTMATCH=OFF;            /* SECTION OR MATCH FOUND        */
         LA    L,1                                                 0569
         B     @DE00569                                            0569
@DL00569 DS    0H                                                  0570
*     IF ICTMNAME(L)=ICMODPTR->ICTMNAME(1)/* SAME ELEMENT NAMES      */
*         &ICTMICHN(L)^=ZERO        /* AND NOT SAME ENTRY            */
*         &((ICTMSRCR(1)=ON&ICMODPTR->ICTMSRCR(1)=ON)/* BOTH SRCS    */
*         ×(ICTMSRCU(1)=ON&ICMODPTR->ICTMSRCU(1)=ON)/* BOTH SRCUPD   */
*         ×(ICTMSRCU(1)=ON&ICMODPTR->ICTMSRCR(1)=ON)/* SRCUPD - SRC  */
*         ×(ICTMSRCR(1)=ON&ICMODPTR->ICTMSRCU(1)=ON))/* SRC -  SRCUPD*/
*       THEN                                                       0570
         LR    @05,L                                               0570
         MH    @05,@CH02012                                        0570
         L     @15,CCAICMOD(,CCAPTR)                               0570
         L     @14,@PC00001+4                                      0570
         L     @14,ICMODPTR(,@14)                                  0570
         ST    @05,@TF00001                                        0570
         ALR   @05,@15                                             0570
         AL    @05,@CF02028                                        0570
         CLC   ICTMNAME(8,@05),ICTMNAME(@14)                       0570
         BNE   @RF00570                                            0570
         L     @05,@TF00001                                        0570
         AL    @05,@CF02031                                        0570
         L     @05,ICTMICHN-104(@05,@15)                           0570
         LTR   @05,@05                                             0570
         BZ    @RF00570                                            0570
         TM    ICTMSRCR(@15),B'00000010'                           0570
         BNO   @GL00033                                            0570
         TM    ICTMSRCR(@14),B'00000010'                           0570
         BO    @RT00570                                            0570
@GL00033 L     @05,CCAICMOD(,CCAPTR)                               0570
         TM    ICTMSRCU(@05),B'00000001'                           0570
         BNO   @GL00032                                            0570
         L     @05,@PC00001+4                                      0570
         L     @05,ICMODPTR(,@05)                                  0570
         TM    ICTMSRCU(@05),B'00000001'                           0570
         BO    @RT00570                                            0570
@GL00032 L     @05,CCAICMOD(,CCAPTR)                               0570
         TM    ICTMSRCU(@05),B'00000001'                           0570
         BNO   @GL00031                                            0570
         L     @05,@PC00001+4                                      0570
         L     @05,ICMODPTR(,@05)                                  0570
         TM    ICTMSRCR(@05),B'00000010'                           0570
         BO    @RT00570                                            0570
@GL00031 L     @05,CCAICMOD(,CCAPTR)                               0570
         TM    ICTMSRCR(@05),B'00000010'                           0570
         BNO   @RF00570                                            0570
         L     @05,@PC00001+4                                      0570
         L     @05,ICMODPTR(,@05)                                  0570
         TM    ICTMSRCU(@05),B'00000001'                           0570
         BNO   @RF00570                                            0570
@RT00570 DS    0H                                                  0571
*       DO;                         /*                               */
*         ICTMATCH=ON;              /* INDICATE ANOTHER ENTRY FOUND  */
         OI    ICTMATCH,B'00001000'                                0572
*         ICMODPTR->ICTMICHN(1)=ICTMICHN(L);/* CHAIN TO EXISTING   0573
*                                      MODID LIST POINTER            */
         L     @05,@PC00001+4                                      0573
         L     @05,ICMODPTR(,@05)                                  0573
         LR    @15,L                                               0573
         MH    @15,@CH02012                                        0573
         L     @14,CCAICMOD(,CCAPTR)                               0573
         LA    @01,0(@15,@14)                                      0573
         AL    @01,@CF02031                                        0573
         L     @09,ICTMICHN-104(,@01)                              0573
         ST    @09,ICTMICHN(,@05)                                  0573
*         ICMODPTR->ICTMICHA(1)=ICTMICHA(L);/* CHAIN TO EXISTING   0574
*                                      MODID LIST POINTER            */
         AL    @14,@CF02033                                        0574
         L     @15,ICTMICHA-108(@15,@14)                           0574
         ST    @15,ICTMICHA(,@05)                                  0574
*       END;                        /*                               */
*   END;                            /*                               */
*                                                                  0576
@RF00570 AH    L,@CH00069                                          0576
@DE00569 LR    @05,L                                               0576
         MH    @05,@CH02012                                        0576
         L     @01,CCAICMOD(,CCAPTR)                               0576
         AL    @01,@CF02028                                        0576
         L     @05,ICTMEND(@05,@01)                                0576
         CL    @05,ICTENDNT                                        0576
         BE    @DC00569                                            0576
         TM    ICTMATCH,B'00001000'                                0576
         BZ    @DL00569                                            0576
@DC00569 DS    0H                                                  0577
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NO CHAIN WAS AVAILABLE FROM ANOTHER VERSION TO HOOK ON TO, */
*   /* THEN CALL HMASMIO TO READ THE (A)CDS ELEMENT ENTRY FOR THIS   */
*   /* ELEMENT SO THAT HMASMTID CAN BE CALLED TO BUILD A MODID LIST  */
*   /* FOR THIS ELEMENT.                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0577
*   IF ICTMATCH=OFF THEN            /* WAS A CHAIN HOOKED ON TO?     */
         TM    ICTMATCH,B'00001000'                                0577
         BNZ   @RF00577                                            0577
*     DO;                           /*                               */
*       IOPFUNCT=IOPLOC;            /* INDICATE LOCATE FUNCTION      */
         MVI   IOPFUNCT(IOPPTR),X'03'                              0579
*       IOPTYPE=IOPSRC;             /* SRC TYPE ENTRY                */
*                                                                  0580
         MVI   IOPTYPE(IOPPTR),X'08'                               0580
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE FUNCTION TO SET UP DATASET (A)CDS               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0581
*       IF CCAACCPT=ON THEN         /* ACCEPT FUNCTION?              */
         TM    CCAACCPT(CCAPTR),B'00100000'                        0581
         BNO   @RF00581                                            0581
*         IOPDSID=IOPACDS;          /* YES- ACDS DATASET             */
         MVI   IOPDSID(IOPPTR),X'0C'                               0582
*       ELSE                                                       0583
*         IOPDSID=IOPCDS;           /* INDICATE CDS DATASET          */
         B     @RC00581                                            0583
@RF00581 MVI   IOPDSID(IOPPTR),X'02'                               0583
*       IOPNAME=ICMODPTR->ICTMNAME(1);/* GET NAME                    */
@RC00581 L     @15,@PC00001+4                                      0584
         L     @01,ICMODPTR(,@15)                                  0584
         MVC   IOPNAME(8,IOPPTR),ICTMNAME(@01)                     0584
*                                                                  0585
*       /*************************************************************/
*       /*                                                           */
*       /* LOCATE THE ELEMENT ON THE (A)CDS                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0585
*       CALL HMASMIO(HMASMIOP);     /* CALL SMP IO INTERFACE MODULE  */
         ST    IOPPTR,@AL00001                                     0585
         L     @15,@CV01854                                        0585
         LA    @01,@AL00001                                        0585
         BALR  @14,@15                                             0585
*       IF IOPRETRN=IOPGOOD THEN    /* WAS ENTRY FOUND               */
         CLI   IOPRETRN(IOPPTR),0                                  0586
         BNE   @RF00586                                            0586
*         DO;                       /*                               */
*                                                                  0587
*           /*********************************************************/
*           /*                                                       */
*           /* CALL HMASMTID TO BUILD A ICT MODID LIST FOR THIS ICT  */
*           /* MOD ENTRY WITH THE FMID,RMID, AND UMID DATA.          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0588
*           CALL HMASMTID(TBLXPARM, /*                               */
*               ICMODPTR,           /* ICT MOD SECT ENTRY            */
*               ICMODPTR->ICTMICHN(1),/* (A)CDS MODID LIST   @Z67SP00*/
*               HMASMIOP);          /* (A)CDS ELEMENT ENTRY IOP ...
*                                      BUILD MODID LIST FOR THIS   0588
*                                      ELEMENT               @Z67SP00*/
         L     @15,@PC00001                                        0588
         ST    @15,@AL00001                                        0588
         L     @15,@PC00001+4                                      0588
         ST    @15,@AL00001+4                                      0588
         L     @01,ICMODPTR(,@15)                                  0588
         LA    @15,ICTMICHN(,@01)                                  0588
         ST    @15,@AL00001+8                                      0588
         ST    IOPPTR,@AL00001+12                                  0588
         L     @15,@CV01856                                        0588
         LA    @01,@AL00001                                        0588
         BALR  @14,@15                                             0588
*           RFY                                                    0589
*             RTNCODE RSTD;         /* RESTRICT REG 15 USAGE         */
*           TM3HIRC=MAX(TM3HIRC,RTNCODE);/* PICK UP HIGHEST RC       */
         CR    TM3HIRC,RTNCODE                                     0590
         BNL   *+6
         LR    TM3HIRC,RTNCODE                                     0590
*           RFY                                                    0591
*             RTNCODE UNRSTD;       /* RELEASE REG 15                */
*         END;                      /*                               */
*       ELSE                                                       0593
*         IF IOPRETRN=IOPNOTFD THEN /* WAS SYSMOD FOUND?             */
         B     @RC00586                                            0593
@RF00586 CLI   IOPRETRN(IOPPTR),4                                  0593
         BNE   @RF00593                                            0593
*           DO;                     /* NO- SET CHAINS TO NULL LIST   */
*             ICMODPTR->ICTMICHN(1)=TBLXNULL;/* CHAIN TO EXISTING  0595
*                                      NULL LIST POINTER             */
         L     @15,@PC00001+4                                      0595
         L     @15,ICMODPTR(,@15)                                  0595
         L     @14,@PC00001                                        0595
         L     @14,TBLXNULL(,@14)                                  0595
         ST    @14,ICTMICHN(,@15)                                  0595
*             ICMODPTR->ICTMICHA(1)=TBLXNULL;/* CHAIN TO EXISTING  0596
*                                      NULL LIST POINTER             */
         ST    @14,ICTMICHA(,@15)                                  0596
*           END;                    /* END- SET CHAINS TO NULL LIST  */
*     END;                          /*                               */
@RF00593 DS    0H                                                  0598
@RC00586 DS    0H                                                  0599
*   IF IOPRETRN>IOPNOTFD THEN       /* IF ERROR                      */
@RF00577 CLI   IOPRETRN(IOPPTR),4                                  0599
         BNH   @RF00599                                            0599
*     TM3HIRC=MAX(TM3HIRC,IOPRETRN);/* SET RC                        */
         SLR   @15,@15                                             0600
         IC    @15,IOPRETRN(,IOPPTR)                               0600
         CR    TM3HIRC,@15                                         0600
         BNL   *+6
         LR    TM3HIRC,@15                                         0600
*   END MODIDCHK;                   /*                               */
@EL00010 DS    0H                                                  0601
@EF00010 DS    0H                                                  0601
@ER00010 LM    @14,@02,@SA00010                                    0601
         LM    @04,@12,@SA00010+20                                 0601
         BR    @14                                                 0601
*CLEANUP:                                                          0602
*   PROC;                           /*                               */
CLEANUP  STM   @14,@12,@SA00011                                    0602
*   RFY                                                            0603
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0604
*     ICTMOD BASED(ICMODPTR);       /* BASE ON MOD PARAMETER PASSED  */
*   RFY                                                            0605
*     ICTPTF BASED(ICPTFPTR);       /* BASE ON SYSMOD PARAMETER    0605
*                                      PASSED                        */
*   RFY                                                            0606
*     MCBELEMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*   RFY                                                            0607
*     MCBPTFMP BASED(ELMCBPTR);     /* BASE ON MCB PARAMETER PASSED  */
*                                                                  0607
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE GTA FILE IF GOTTEN                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0608
*   IF ICTMHASM(1)=ON THEN          /* CHECK IF GTA USED             */
         L     @15,@PC00001+4                                      0608
         L     @01,ICMODPTR(,@15)                                  0608
         TM    ICTMHASM(@01),B'01000000'                           0608
         BNO   @RF00608                                            0608
*     DO;                           /*                               */
*       GTPFUNCT=GTPFREE;           /*                               */
         L     @15,GTPPTR                                          0610
         MVI   GTPFUNCT(@15),X'0A'                                 0610
*       CALL HMASMGTA(HMASMGTP);    /*                               */
         ST    @15,@AL00001                                        0611
         L     @15,@CV01858                                        0611
         LA    @01,@AL00001                                        0611
         BALR  @14,@15                                             0611
*     END;                          /*                               */
*   END CLEANUP;                    /*                               */
@EL00011 DS    0H                                                  0613
@EF00011 DS    0H                                                  0613
@ER00011 LM    @14,@12,@SA00011                                    0613
         BR    @14                                                 0613
*                                                                  0614
*   /*****************************************************************/
*   /*                                                               */
*   /* SETUP THE GTA FILE WITH THE THE SOURCE NAME AS THE ASSEMBLY   */
*   /* NAME AND CALL TM4 TO BUILD A MOD ENTRY TO REPRESENT THE       */
*   /* ASSEMBLY OF THIS SOURCE.                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0614
*MODICT:                                                           0614
*   PROC;                           /*                               */
MODICT   STM   @14,@02,@SA00012                                    0614
         STM   @04,@12,@SA00012+20                                 0614
*   IF ICTMIDEL(1)=OFF              /* SRC NOT BEING DELETED         */
*     THEN                                                         0615
         L     @02,@PC00001+4                                      0615
         L     @02,ICMODPTR(,@02)                                  0615
         TM    ICTMIDEL(@02),B'01000000'                           0615
         BNZ   @RF00615                                            0615
*     DO;                                                          0616
*                                                                  0616
*       /*************************************************************/
*       /*                                                           */
*       /* SAVE ASSEMBLY NAME IN GTA FILE.                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0617
*       GTPFUNCT=GTPADD;            /* ADD FUNTION                   */
         L     @15,GTPPTR                                          0617
         MVI   GTPFUNCT(@15),X'04'                                 0617
*       ASSMNM=ICTMNAME(1);         /* NAME TO ADD TO GTA FILE       */
         MVC   ASSMNM(8),ICTMNAME(@02)                             0618
*       ASSM@=ZERO;                 /* INIT ICT ENTRY ADDRESS        */
         SLR   @02,@02                                             0619
         ST    @02,ASSM@                                           0619
*       CALL HMASMGTA(HMASMGTP);    /* ALL PARMS PREVIOUSLY SET      */
         ST    @15,@AL00001                                        0620
         L     @15,@CV01858                                        0620
         LA    @01,@AL00001                                        0620
         BALR  @14,@15                                             0620
*       TM3HIRC=MAX(TM3HIRC,GTPRETRN);/* ERROR CODE                  */
         L     @02,GTPPTR                                          0621
         SLR   @15,@15                                             0621
         IC    @15,GTPRETRN(,@02)                                  0621
         CR    TM3HIRC,@15                                         0621
         BNL   *+6
         LR    TM3HIRC,@15                                         0621
*       ICTMHASM(1)=ON;             /* INDICATE GTA USED FOR ASSEM   */
         L     @02,@PC00001+4                                      0622
         L     @01,ICMODPTR(,@02)                                  0622
         OI    ICTMHASM(@01),B'01000000'                           0622
*       IF TM3HIRC<STOPPTF THEN     /*                               */
*                                                                  0623
         CH    TM3HIRC,@CH00061                                    0623
         BNL   @RF00623                                            0623
*         /***********************************************************/
*         /*                                                         */
*         /* BUILD ICT MOD ENTRY FOR SRC ASSEMBLY.                   */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0624
*         DO;                       /*                               */
*           CALL HMASMTM4(          /*                               */
*               TBLXPARM,           /* STD PARMS (WITH GTP)          */
*               ICMODPTR,           /* ICT SRC ENTRY ADDRESS         */
*               ICPTFPTR,           /* SYSMOD OWNING THE SRC         */
*               ELMCBPTR,           /* MCB FOR SRC                   */
*               GTPPTR);            /* ASSEM NAME IN GTA FILE        */
         L     @15,@PC00001                                        0625
         ST    @15,@AL00001                                        0625
         ST    @02,@AL00001+4                                      0625
         L     @02,@PC00001+8                                      0625
         ST    @02,@AL00001+8                                      0625
         L     @02,@PC00001+12                                     0625
         ST    @02,@AL00001+12                                     0625
         LA    @02,GTPPTR                                          0625
         ST    @02,@AL00001+16                                     0625
         L     @15,@CV01859                                        0625
         LA    @01,@AL00001                                        0625
         BALR  @14,@15                                             0625
*           RFY                                                    0626
*             RTNCODE RSTD;         /*                               */
*           TM3HIRC=MAX(TM3HIRC,RTNCODE);/* ERROR CODE               */
         CR    TM3HIRC,RTNCODE                                     0627
         BNL   *+6
         LR    TM3HIRC,RTNCODE                                     0627
*           RFY                                                    0628
*             RTNCODE UNRSTD;       /*                               */
*         END;                      /*                               */
*     END;                                                         0630
*   RETURN;                                                        0631
@EL00012 DS    0H                                                  0631
@EF00012 DS    0H                                                  0631
@ER00012 LM    @14,@02,@SA00012                                    0631
         LM    @04,@12,@SA00012+20                                 0631
         BR    @14                                                 0631
*   END MODICT;                     /*                               */
         B     @EL00012                                            0632
*   END HMASMTM3                    /*                               */
*                                                                  0633
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMICT)                                       */
*/*%INCLUDE SYSLIB  (HMASMMCB)                                       */
*/*%INCLUDE SYSLIB  (HMASMMGP)                                       */
*/*%INCLUDE SYSLIB  (HMASMGTP)                                       */
*                                                                  0633
*       ;                                                          0633
@DATA    DS    0H
@CH00069 DC    H'1'
@CH00525 DC    H'9'
@CH00036 DC    H'12'
@CH02012 DC    H'144'
@CH01861 DC    H'232'
@CH00714 DC    H'255'
         DS    0F
@AL00333 DC    A(HMASMMGP)             LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@PC00001 DS    4F
@SA00011 DS    0F
@SA00012 DS    0F
@SA00010 DS    0F
@SA00008 DS    0F
@SA00007 DS    0F
@SA00006 DS    0F
@SA00005 DS    0F
@SA00004 DS    0F
@SA00003 DS    0F
@SA00002 DS    0F
         DS    15F
@AL00001 DS    5A
@TF00001 DS    F
         DS    0F
@CF00061 DC    F'8'
@CH00061 EQU   @CF00061+2
@CF02028 DC    F'-144'
@CF02027 DC    F'-135'
@CF02030 DC    F'-112'
@CF02031 DC    F'-40'
@CF02033 DC    F'-36'
@CV01854 DC    V(HMASMIO)
@CV01855 DC    V(HMASMMSG)
@CV01856 DC    V(HMASMTID)
@CV01857 DC    V(HMASMTAI)
@CV01858 DC    V(HMASMGTA)
@CV01859 DC    V(HMASMTM4)
         DS    0D
GTPPTR   DS    A
@CC01865 DC    C'SMPTLIB '
@CC01867 DC    C'SMPWRK2 '
@CC01869 DC    C'SMPSTS  '
@CC01871 DC    C'00000000'
@CC01953 DC    C'SRC     '
@CC01873 DC    C'       '
         DS    CL1
ICTENDCH DC    X'FFFFFFFF'
HMASMMGP DS    CL24
         ORG   HMASMMGP
MGPFIXED DS    CL12
         ORG   MGPFIXED
MGPCLEAR DS    CL6
         ORG   MGPCLEAR
MGPMGNO1 DS    FL2
MGPMGNO2 DS    FL2
MGPMGNO3 DS    FL2
         ORG   MGPFIXED+6
MGPFLAGS DS    BL2
         ORG   MGPFLAGS
MGPPRINT DS    BL1
MGPLIST  EQU   MGPFLAGS+0
MGPRPT   EQU   MGPFLAGS+0
MGPHLDS  EQU   MGPFLAGS+0
MGPWTOR  EQU   MGPFLAGS+0
MGPWTO   EQU   MGPFLAGS+0
MGPWTP   EQU   MGPFLAGS+0
@NM00250 EQU   MGPFLAGS+0
         ORG   MGPFIXED+8
MGPTYPE  DS    FL1
@NM00251 DS    CL3
         ORG   HMASMMGP+12
MGPVAR   DS    CL12
         ORG   MGPVAR
MGPVARPT DS    3A
         ORG   HMASMMGP+24
ASSMLST  DS    CL12
         ORG   ASSMLST
ASSMNM   DS    CL8
ASSM@    DS    AL4
         ORG   ASSMLST+12
ASMGTP   DS    CL28
ETYPE    DS    CL8
TM3SWCH1 DS    BL1
         ORG   TM3SWCH1
DLIBBIT  DS    BL1
SMDAPPLY EQU   TM3SWCH1+0
XMID     EQU   TM3SWCH1+0
MODALMOD EQU   TM3SWCH1+0
ICTMATCH EQU   TM3SWCH1+0
BLDACDSM EQU   TM3SWCH1+0
ENTRYICT EQU   TM3SWCH1+0
@NM00255 EQU   TM3SWCH1+0
         ORG   TM3SWCH1+1
TM3SWCH2 DS    BL1
         ORG   TM3SWCH2
SRCFND   DS    BL1
STOWSRC  EQU   TM3SWCH2+0
@NM00256 EQU   TM3SWCH2+0
         ORG   TM3SWCH2+1
SAVADLIB DS    CL8
         DS    CL6
PKDEC    DS    CL8
RADJ     DS    CL8
BLANKS   DC    CL8'        '
PATCHTM3 DS    CL80
         ORG   PATCHTM3
@NM00257 DC    80X'FF'
         ORG   PATCHTM3+80
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
T        EQU   @05
S        EQU   @04
L        EQU   @04
M        EQU   @04
FIX31    EQU   @04
TM3HIRC  EQU   @03
IOPPTR   EQU   @02
CCAPTR   EQU   @11
RTNCODE  EQU   @15
RTNREG   EQU   @14
TBLXOPTS EQU   0
TBLFLAGS EQU   TBLXOPTS+8
TBLFLG1  EQU   TBLFLAGS
TBLNOAPP EQU   TBLFLG1
TBLFLG2  EQU   TBLFLAGS+2
TBLFLG3  EQU   TBLFLAGS+3
TBLFLG4  EQU   TBLFLAGS+5
TBLFLG5  EQU   TBLFLAGS+7
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAIOPTR EQU   CCAFIOP
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAICT   EQU   CCAFICT
CCAICPTF EQU   CCAFICT+4
CCAICMOD EQU   CCAFICT+8
CCAICLMD EQU   CCAFICT+12
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00023 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAAPPLY EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAFLAG2 EQU   CCAFFUNC+11
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCABLDLA EQU   0
@NM00039 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00041 EQU   CCABLDLL
CCALKDRC EQU   @NM00041+20
@NM00043 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00043+20
@NM00045 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00045+20
@NM00047 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00047+20
@NM00049 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00049+20
@NM00051 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00051+20
@NM00053 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00053+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
@NM00057 EQU   HMASMIOP+12
@NM00058 EQU   @NM00057
IOPDDNAM EQU   HMASMIOP+24
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00168 EQU   IOPQSMIF
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPBS02  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
HMASMICT EQU   0
ICTCORE  EQU   HMASMICT
ICTPSPLN EQU   ICTCORE
ICTMSPLN EQU   ICTCORE+4
ICTLSPLN EQU   ICTCORE+8
ICTGMSPL EQU   0
ICTPTF   EQU   0
ICTPTFS  EQU   ICTPTF
ICTPFLG1 EQU   ICTPTF+7
ICTPFLG3 EQU   ICTPTF+8
ICTPPROC EQU   ICTPFLG3
ICTPFLG5 EQU   ICTPTF+9
ICTPFLG6 EQU   ICTPTF+11
ICTPFLF  EQU   ICTPFLG6
ICTPFLG2 EQU   ICTPTF+12
ICTPFLG4 EQU   ICTPTF+13
ICTPFLG8 EQU   ICTPTF+14
ICTPFLG9 EQU   ICTPTF+15
@NM00195 EQU   ICTPFLG9
ICTPFLGA EQU   ICTPTF+16
ICTPUSR1 EQU   ICTPFLGA
ICTPCHN  EQU   ICTPTF+64
ICTPRCHN EQU   ICTPTF+68
ICTPSCHN EQU   ICTPTF+72
ICTPPCHN EQU   ICTPTF+76
ICTPICHN EQU   ICTPTF+80
ICTPNCHN EQU   ICTPTF+84
ICTPVCHN EQU   ICTPTF+88
ICTPDCHN EQU   ICTPTF+92
ICTPBCHN EQU   ICTPTF+96
ICTIXPF  EQU   0
ICTENTLS EQU   0
ICTENTNT EQU   ICTENTLS
ICTENTNM EQU   ICTENTNT
ICTENTST EQU   ICTENTNT+7
ICTREQLS EQU   0
ICTREQNT EQU   ICTREQLS
ICTREQNM EQU   ICTREQNT
ICTREQST EQU   ICTREQNT+7
ICTSUPLS EQU   0
ICTSUPNT EQU   ICTSUPLS
ICTSUPNM EQU   ICTSUPNT
ICTPRELS EQU   0
ICTPRENT EQU   ICTPRELS
ICTPRENM EQU   ICTPRENT
ICTPREST EQU   ICTPRENT+7
ICTIRQLS EQU   0
ICTIRQNT EQU   ICTIRQLS
ICTIRQNM EQU   ICTIRQNT
ICTIRQST EQU   ICTIRQNT+7
ICTCSRST EQU   ICTIRQNT+15
ICTNPRLS EQU   0
ICTNPRNT EQU   ICTNPRLS
ICTNPRNM EQU   ICTNPRNT
ICTVRSLS EQU   0
ICTVRSNT EQU   ICTVRSLS
ICTVRSNM EQU   ICTVRSNT
ICTDELLS EQU   0
ICTDELNT EQU   ICTDELLS
ICTDELNM EQU   ICTDELNT
ICTDELST EQU   ICTDELNT+7
ICTSBYLS EQU   0
ICTSBYNT EQU   ICTSBYLS
ICTSBYNM EQU   ICTSBYNT
ICTMOD   EQU   0
ICTMNAME EQU   ICTMOD
ICTMEND  EQU   ICTMNAME
ICTMFLG2 EQU   ICTMOD+8
ICTMPROC EQU   ICTMFLG2
ICTMNOGO EQU   ICTMFLG2
ICTMCPL  EQU   ICTMFLG2
ICTMMSG  EQU   ICTMFLG2
ICTMFLG1 EQU   ICTMOD+9
ICTMMODR EQU   ICTMFLG1
ICTMSRCR EQU   ICTMFLG1
ICTMSRCU EQU   ICTMFLG1
ICTMFLG3 EQU   ICTMOD+10
ICTLIBTX EQU   ICTMFLG3
ICTMRELF EQU   ICTMFLG3
ICTMFLG4 EQU   ICTMOD+11
ICTMIDEL EQU   ICTMFLG4
ICTMDSTE EQU   ICTMFLG4
ICTMFLG5 EQU   ICTMOD+12
ICTMCOPY EQU   ICTMFLG5
ICTMODF4 EQU   ICTMOD+13
ICTMLEP1 EQU   ICTMODF4
ICTMODF5 EQU   ICTMOD+14
ICTMLEP2 EQU   ICTMODF5
ICTMODF6 EQU   ICTMOD+15
ICTMLEP3 EQU   ICTMODF6
ICTMODF7 EQU   ICTMOD+16
ICTMLEP4 EQU   ICTMODF7
ICTMACF4 EQU   ICTMOD+17
ICTMHASM EQU   ICTMACF4
ICTMRELN EQU   ICTMOD+22
ICTFMLIB EQU   ICTMOD+24
ICTTOLIB EQU   ICTMOD+32
ICTMDSTL EQU   ICTMOD+48
ICTMSYSL EQU   ICTMOD+56
ICTMDOBJ EQU   ICTMOD+64
ICTMSSI  EQU   ICTMOD+72
ICTPPTR  EQU   ICTMOD+96
ICTMCHN  EQU   ICTMOD+100
ICTMICHN EQU   ICTMOD+104
ICTMICHA EQU   ICTMOD+108
ICTMACHN EQU   ICTMOD+112
ICTMTCHN EQU   ICTMOD+116
ICTMVCHN EQU   ICTMOD+120
ICTMUCHN EQU   ICTMOD+124
ICTIXMF  EQU   0
ICTMIDLS EQU   0
ICTMID   EQU   ICTMIDLS
ICTMODID EQU   ICTMID
ICTMODST EQU   ICTMID+7
ICTASMLS EQU   0
ICTASMAD EQU   ICTASMLS
ICTTALLS EQU   0
ICTTALNM EQU   ICTTALLS
ICTMVRLS EQU   0
ICTMVRNT EQU   ICTMVRLS
ICTMVRNM EQU   ICTMVRNT
ICTMUMLS EQU   0
ICTMUMNT EQU   ICTMUMLS
ICTMUMNM EQU   ICTMUMNT
ICTLMOD  EQU   0
ICTLMNAM EQU   ICTLMOD
ICTLNAME EQU   ICTLMNAM
ICTLFLG4 EQU   ICTLMOD+8
ICTLFLG1 EQU   ICTLMOD+9
ICTLFLG5 EQU   ICTLMOD+10
ICTLFLG6 EQU   ICTLMOD+11
ICTLFLG7 EQU   ICTLMOD+12
ICTLFLG2 EQU   ICTLMOD+13
ICTLFLG3 EQU   ICTLMOD+14
ICTLCHN  EQU   ICTLMOD+34
ICTIXLF  EQU   0
MCBPTFMP EQU   0
MCBVERMP EQU   0
MCBVEND  EQU   MCBVERMP+8
MCBIFMP  EQU   0
MCBIEND  EQU   MCBIFMP+8
MCBELEMP EQU   0
MCBEDIST EQU   MCBELEMP+9
MCBEDOBJ EQU   MCBELEMP+17
MCBESYS  EQU   MCBELEMP+25
MCBETXLB EQU   MCBELEMP+33
MCBESSI  EQU   MCBELEMP+65
MCBERLF  EQU   MCBELEMP+73
MCBELEPM EQU   MCBELEMP+136
MCBEFLG1 EQU   MCBELEPM
MCBEFLG2 EQU   MCBELEPM+1
MCBEFLG3 EQU   MCBELEPM+2
MCBEFLG4 EQU   MCBELEPM+3
MCBEFLG5 EQU   MCBELEMP+140
MCBEDEL  EQU   MCBEFLG5
MCBEEND  EQU   MCBELEMP+141
HMASMGTP EQU   0
GTPFUNCT EQU   HMASMGTP
GTPRETRN EQU   HMASMGTP+1
GTPRCDLN EQU   HMASMGTP+4
GTPKEYLN EQU   HMASMGTP+6
GTPBUFAD EQU   HMASMGTP+12
GTPRESTR EQU   HMASMGTP+16
GTPFLGS1 EQU   HMASMGTP+26
GTPPSIZE EQU   GTPFLGS1
CCADSIDA EQU   0
CCATYPEA EQU   0
IOPBS01  EQU   0
IOPBS03  EQU   0
TBLXPARM EQU   0
TBLXINDX EQU   TBLXPARM+4
TBLXIOP2 EQU   TBLXPARM+16
TBLXTBL  EQU   TBLXPARM+28
TBLXNULL EQU   TBLXPARM+36
TBLXCDSI EQU   TBLXPARM+60
TBLXFLG1 EQU   TBLXPARM+80
TBLXRC   EQU   TBLXPARM+92
ICMODPTR EQU   0
ICPTFPTR EQU   0
ELMCBPTR EQU   0
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00064 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
@NM00075 EQU   IOPUDATA
@NM00076 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPNTLVL EQU   IOPASMDR
IOPABUNT EQU   IOPASMDR+1
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPLMDF2 EQU   IOPLMLEP+1
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPLMDFX EQU   IOPLMDNT+24
@NM00085 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMID  EQU   IOPRMIDE
IOPRMST  EQU   IOPRMIDE+7
IOPFMIDE EQU   IOPMACDR+9
IOPFMID  EQU   IOPFMIDE
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPBUSMD EQU   IOPBUNT
IOPBUTYP EQU   IOPBUNT+7
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00096 EQU   IOPSRCDR+1
@NM00098 EQU   @NM00096+7
@NM00102 EQU   IOPSRCDR+9
IOPSRLNG EQU   IOPSRCDR+17
IOPSRCFX EQU   IOPSRCNT+24
@NM00106 EQU   IOPSRCFX
IOPSRSYS EQU   IOPSRCFX+64
IOPSRDLB EQU   IOPSRCFX+72
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCND EQU   IOPSRCID
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00112 EQU   IOPMODDR+1
@NM00114 EQU   @NM00112+7
@NM00118 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00122 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODST EQU   IOPLMODS+7
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00133 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPDLBND EQU   IOPDSYS
IOPDLIND EQU   IOPDNTRY+8
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPSYSFX EQU   IOPSYSNT+24
@NM00140 EQU   IOPSYSFX
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPPTFFX EQU   IOPPTFNT+24
@NM00149 EQU   IOPPTFFX
@NM00150 EQU   @NM00149
IOPPDTES EQU   IOPPTFFX+41
@NM00153 EQU   IOPPDTES
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPPTFG1 EQU   IOPPTSFX+34
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00178 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00178
IOPPTREL EQU   IOPPTFMD
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBLEP2 EQU   IOPBPDS+9
@NM00182 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00182
IOPBFTB1 EQU   IOPBFTB0
ICTENDNT EQU   ICTENDCH
MCBVVLST EQU   MCBVEND
MCBVNTRY EQU   MCBVVLST
MCBVNUM  EQU   MCBVNTRY
MCBIVLST EQU   MCBIEND
MCBINTRY EQU   MCBIVLST
MCBINUM  EQU   MCBINTRY
MCBEVLST EQU   MCBEEND
MCBENTRY EQU   MCBEVLST
MCBENUM  EQU   MCBENTRY
MCBEND   EQU   MCBENUM
MCBEIND  EQU   MCBEVLST+8
ICTENDIX EQU   ICTENDCH
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00249 EQU   MCBENTRY+7
MCBIIND  EQU   MCBIVLST+8
@NM00242 EQU   MCBINTRY+7
MCBIND   EQU   MCBINUM
MCBVIND  EQU   MCBVVLST+8
@NM00240 EQU   MCBVNTRY+7
MCBVND   EQU   MCBVNUM
IOPBCEND EQU   IOPBPDS+21
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00184 EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
@NM00183 EQU   IOPBFTB1
IOPBAOSL EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBREFR EQU   IOPBLEP2
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
@NM00181 EQU   IOPBLEP2
IOPBDC   EQU   IOPBLEP2
@NM00180 EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00179 EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBRENT EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
IOPPTIND EQU   IOPPTNTR+8
IOPPTSND EQU   IOPPTREL
@NM00177 EQU   IOPPTSFX+872
IOPSYZPP EQU   IOPPTSFX+772
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZAP EQU   IOPPTSFX+755
IOPSYUPP EQU   IOPPTSFX+655
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPD EQU   IOPPTSFX+638
IOPSYSPP EQU   IOPPTSFX+538
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSUP EQU   IOPPTSFX+521
IOPSYLKP EQU   IOPPTSFX+421
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKD EQU   IOPPTSFX+404
IOPSYCPP EQU   IOPPTSFX+304
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOM EQU   IOPPTSFX+170
IOPSYASP EQU   IOPPTSFX+70
IOPSYASR EQU   IOPPTSFX+69
IOPSYASS EQU   IOPPTSFX+61
IOPSYASM EQU   IOPPTSFX+53
@NM00176 EQU   IOPPTSFX+35
@NM00175 EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPPTSNP EQU   IOPPTFG1
IOPSYPLN EQU   IOPPTSFX+32
IOPDSPFX EQU   IOPPTSFX+6
IOPDSDIR EQU   IOPDSSPC+4
IOPDSSEC EQU   IOPDSSPC+2
IOPDSPRM EQU   IOPDSSPC
@NM00174 EQU   IOPPTSDR+4
IOPPTPEM EQU   IOPPTSDR+2
IOPPCNVL EQU   IOPPTSDR+1
@NM00173 EQU   IOPPTSDR
IOPQFMTP EQU   IOPQFMLS+8
@NM00172 EQU   IOPQFMLS+7
IOPQFMND EQU   IOPQFMNM
@NM00171 EQU   IOPQFMDR
@NM00167 EQU   IOPQSMDR
@NM00166 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
IOPSBYNM EQU   IOPSBYNT
@NM00165 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00164 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00163 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00162 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00161 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00160 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00159 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00158 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00157 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00156 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00155 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
IOPPIND  EQU   IOPPNTRY+8
IOPPTFND EQU   IOPPMODS
IOPPFMID EQU   IOPPTFFX+73
@NM00154 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
IOPACCT  EQU   IOPDATES+15
IOPACCD  EQU   IOPDATES+12
IOPRSTT  EQU   IOPDATES+9
IOPRSTD  EQU   IOPDATES+6
IOPAPPT  EQU   IOPDATES+3
IOPAPPD  EQU   IOPDATES
IOPRECT  EQU   @NM00153+3
IOPRECD  EQU   @NM00153
@NM00152 EQU   IOPPTFFX+8
@NM00151 EQU   @NM00149+7
IOPPRELN EQU   @NM00150
@NM00148 EQU   IOPPTFDR+20
IOPSBYNO EQU   IOPPTFDR+13
IOPDBYNO EQU   IOPPTFDR+6
@NM00147 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPSBYP  EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00146 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPREGEN EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
IOPDUMMP EQU   IOPFLGS5
@NM00145 EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
IOPAPP   EQU   IOPFLGS5
IOPPTYPE EQU   IOPPTFDR+1
@NM00144 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
IOPSYSND EQU   IOPSYNTR
@NM00143 EQU   IOPSYSFX+21
IOPSYSID EQU   IOPSYSFX+13
IOPNUCID EQU   IOPSYSFX+12
IOPSREL  EQU   IOPSYSFX+8
@NM00142 EQU   @NM00140+7
@NM00141 EQU   @NM00140
@NM00139 EQU   IOPSYSDR+5
@NM00138 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPMTSNP EQU   IOPFLGS7
IOPPEMAX EQU   IOPSYSDR+2
IOPSCNVL EQU   IOPSYSDR+1
@NM00137 EQU   IOPSYSDR
@NM00136 EQU   IOPDLBFX+8
@NM00135 EQU   @NM00133+7
@NM00134 EQU   @NM00133
@NM00132 EQU   IOPDLBDR+1
@NM00131 EQU   IOPDLBDR
IOPMDIND EQU   IOPMNTRY+8
@NM00130 EQU   IOPMODST
IOPMODND EQU   IOPMODID
IOPDLIB  EQU   IOPMODFX+72
@NM00129 EQU   IOPMODFX+12
@NM00128 EQU   IOPMODF4
@NM00127 EQU   IOPMODF3
@NM00126 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00125 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00124 EQU   @NM00122+7
@NM00123 EQU   @NM00122
@NM00121 EQU   IOPMODDR+17
@NM00120 EQU   @NM00118+7
@NM00119 EQU   @NM00118
@NM00117 EQU   @NM00114
@NM00116 EQU   @NM00114
@NM00115 EQU   @NM00114
@NM00113 EQU   @NM00112
@NM00111 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00110 EQU   IOPSRCST
@NM00109 EQU   IOPSRCFX+8
@NM00108 EQU   @NM00106+7
@NM00107 EQU   @NM00106
@NM00105 EQU   IOPSRCDR+18
@NM00104 EQU   @NM00102+7
@NM00103 EQU   @NM00102
@NM00101 EQU   @NM00098
@NM00100 EQU   @NM00098
@NM00099 EQU   @NM00098
@NM00097 EQU   @NM00096
@NM00095 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
IOPMCTYP EQU   IOPMCIND
@NM00094 EQU   IOPMACST
IOPMACND EQU   IOPMACID
IOPMCDLB EQU   IOPMACFX+72
IOPMCSYS EQU   IOPMACFX+64
@NM00093 EQU   IOPMACFX+8
@NM00092 EQU   IOPMACDR+18
IOPMCLNG EQU   IOPMACDR+17
IOPFMST  EQU   IOPFMIDE+7
@NM00091 EQU   IOPRMST
IOPRMASM EQU   IOPRMST
@NM00090 EQU   IOPRMST
@NM00089 EQU   IOPMACDR
IOPLMIND EQU   IOPLNTRY+8
IOPLMDND EQU   IOPSYSLB
@NM00087 EQU   @NM00085+7
@NM00086 EQU   @NM00085
@NM00084 EQU   IOPLMDDR+6
@NM00083 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPCOPY  EQU   IOPFLGS3
@NM00082 EQU   IOPLMDF4
@NM00081 EQU   IOPLMDF3
@NM00080 EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPNE    EQU   IOPLMDF2
@NM00079 EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPAPF   EQU   IOPFLGS2
@NM00078 EQU   IOPLMDDR
@NM00077 EQU   IOPASMDR+9
IOPABUTP EQU   IOPABUNT+7
IOPABUPT EQU   IOPABUNT
IOPALLOC EQU   @NM00076+4
IOPUSED  EQU   @NM00076
IOPTPSEQ EQU   @NM00075+8
IOPVLSER EQU   @NM00075+2
IOPBLKSI EQU   @NM00075
IOPCQMAX EQU   IOPCQMAP+12
@NM00074 EQU   IOPCQMAP+11
@NM00073 EQU   IOPCQMAP+8
@NM00072 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00071 EQU   IOPSCMAP+11
@NM00070 EQU   IOPSCMAP+8
@NM00069 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00068 EQU   IOPNTMAX+11
@NM00067 EQU   IOPNTMAX+8
@NM00066 EQU   IOPNTMAX
@NM00065 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00064+5
IOPIPTF3 EQU   @NM00064
TBLXEND0 EQU   TBLXPARM+124
@NM00007 EQU   TBLXPARM+108
TBLXIOP3 EQU   TBLXPARM+104
TBLXD2GT EQU   TBLXPARM+100
TBLXDLGT EQU   TBLXPARM+96
@NM00006 EQU   TBLXRC+3
TBLXIRC  EQU   TBLXRC+2
TBLXLRC  EQU   TBLXRC+1
TBLXTRC  EQU   TBLXRC
TBLXIBGN EQU   TBLXPARM+88
TBLXTSLP EQU   TBLXPARM+84
@NM00005 EQU   TBLXPARM+83
@NM00004 EQU   TBLXPARM+82
@NM00003 EQU   TBLXPARM+81
@NM00002 EQU   TBLXFLG1
TBLXTCRC EQU   TBLXFLG1
TBLXFUND EQU   TBLXPARM+72
TBLXFUNC EQU   TBLXPARM+64
@NM00001 EQU   TBLXPARM+62
TBLXCRQI EQU   TBLXPARM+61
TBLXLMGT EQU   TBLXPARM+56
TBLXSCGT EQU   TBLXPARM+52
TBLXSREL EQU   TBLXPARM+48
TBLXASGT EQU   TBLXPARM+44
TBLXIFGT EQU   TBLXPARM+40
TBLXTOP  EQU   TBLXPARM+32
TBLXSEGT EQU   TBLXPARM+24
TBLXIOPF EQU   TBLXPARM+20
TBLXEND  EQU   TBLXINDX+8
TBLXSTRT EQU   TBLXINDX+4
TBLXCUR  EQU   TBLXINDX
TBLXHDR  EQU   TBLXPARM
@NM00254 EQU   HMASMGTP+27
@NM00253 EQU   GTPFLGS1
GTPRCDNF EQU   GTPFLGS1
GTPNOSPM EQU   GTPFLGS1
GTPPOS   EQU   GTPRESTR+8
GTPRCD   EQU   GTPRESTR+4
GTPPAG   EQU   GTPRESTR
GTPWKAD  EQU   HMASMGTP+8
@NM00252 EQU   HMASMGTP+2
@NM00248 EQU   MCBEFLG5
MCBESTD  EQU   MCBEFLG5
@NM00247 EQU   MCBEFLG4
@NM00246 EQU   MCBEFLG3
@NM00245 EQU   MCBEFLG2
MCBEPAGA EQU   MCBEFLG2
MCBENE   EQU   MCBEFLG2
@NM00244 EQU   MCBEFLG1
MCBEDC   EQU   MCBEFLG1
MCBEREFR EQU   MCBEFLG1
MCBEOVLY EQU   MCBEFLG1
MCBESCTR EQU   MCBEFLG1
MCBEREUS EQU   MCBEFLG1
MCBERENT EQU   MCBEFLG1
MCBEAPF  EQU   MCBEFLG1
MCBERMID EQU   MCBELEMP+129
MCBELLKD EQU   MCBELEMP+128
MCBEJLKD EQU   MCBELEMP+116
MCBELUPI EQU   MCBELEMP+115
MCBEJUPI EQU   MCBELEMP+103
MCBELCPY EQU   MCBELEMP+102
MCBEJCPY EQU   MCBELEMP+90
MCBELASM EQU   MCBELEMP+89
MCBEJASM EQU   MCBELEMP+77
MCBEDALS EQU   MCBELEMP+57
MCBEASLB EQU   MCBELEMP+49
MCBELKLB EQU   MCBELEMP+41
MCBENAME EQU   MCBELEMP+1
@NM00243 EQU   MCBELEMP
MCBIFENV EQU   MCBIFMP+1
@NM00241 EQU   MCBIFMP
MCBSFMID EQU   MCBVERMP+1
@NM00239 EQU   MCBVERMP
MCBPTP   EQU   MCBPTFMP+10
MCBPRELN EQU   MCBPTFMP+8
MCBPNO   EQU   MCBPTFMP+1
MCBTYPE  EQU   MCBPTFMP
ICTIXL   EQU   ICTIXLF
@NM00238 EQU   ICTLMOD+38
ICTLTTR  EQU   ICTLMOD+31
ICTTG2   EQU   ICTLMOD+23
ICTTG1   EQU   ICTLMOD+15
@NM00237 EQU   ICTLFLG3
ICTLZAP  EQU   ICTLFLG3
ICTLLKD  EQU   ICTLFLG3
ICTLCPY  EQU   ICTLFLG3
ICTLXPND EQU   ICTLFLG3
ICTTIND2 EQU   ICTLFLG3
ICTTIND1 EQU   ICTLFLG3
@NM00236 EQU   ICTLFLG2
ICTLDEL  EQU   ICTLFLG2
@NM00235 EQU   ICTLFLG2
ICTLTDEL EQU   ICTLFLG2
ICTLINK  EQU   ICTLFLG2
ICTCOPY  EQU   ICTLFLG2
@NM00234 EQU   ICTLFLG7
@NM00233 EQU   ICTLFLG6
@NM00232 EQU   ICTLFLG5
ICTLPAGA EQU   ICTLFLG5
ICTLNE   EQU   ICTLFLG5
@NM00231 EQU   ICTLFLG1
ICTLDC   EQU   ICTLFLG1
ICTLREFR EQU   ICTLFLG1
ICTLOVLY EQU   ICTLFLG1
ICTLSCTR EQU   ICTLFLG1
ICTLREUS EQU   ICTLFLG1
ICTLRENT EQU   ICTLFLG1
ICTLAPF  EQU   ICTLFLG1
@NM00230 EQU   ICTLFLG4
ICTLPASS EQU   ICTLFLG4
ICTLDDCK EQU   ICTLFLG4
ICTLMSG  EQU   ICTLFLG4
ICTLCPL  EQU   ICTLFLG4
ICTLNOGO EQU   ICTLFLG4
ICTLPROC EQU   ICTLFLG4
ICTLEND  EQU   ICTLNAME
@NM00229 EQU   ICTMUMNT+7
ICTMUMND EQU   ICTMUMNM
@NM00228 EQU   ICTMVRNT+7
ICTMVRND EQU   ICTMVRNM
ICTTALND EQU   ICTTALNM
ICTASMND EQU   ICTASMAD
ICTMIDTY EQU   ICTMODST
ICTMIDAM EQU   ICTMODST
ICTMIDRG EQU   ICTMODST
ICTMIDF1 EQU   ICTMODST
ICTMIDPL EQU   ICTMODST
ICTMIDPS EQU   ICTMODST
@NM00227 EQU   ICTMODST
ICTMIDND EQU   ICTMODID
ICTIXM   EQU   ICTIXMF
@NM00226 EQU   ICTMOD+128
@NM00225 EQU   ICTMOD+95
ICTMFMID EQU   ICTMOD+88
@NM00224 EQU   ICTMOD+87
ICTMRMID EQU   ICTMOD+80
ICTMASLB EQU   ICTMOD+40
@NM00223 EQU   ICTMOD+21
ICTMLANG EQU   ICTMOD+20
@NM00222 EQU   ICTMOD+19
ICTMACF5 EQU   ICTMOD+18
ICTMZMPR EQU   ICTMACF4
ICTMZOMZ EQU   ICTMACF4
ICTMDOAS EQU   ICTMACF4
ICTMXUPD EQU   ICTMACF4
ICTMFXC  EQU   ICTMACF4
ICTMFXBS EQU   ICTMACF4
ICTMACDL EQU   ICTMACF4
@NM00221 EQU   ICTMLEP4
@NM00220 EQU   ICTMLEP3
@NM00219 EQU   ICTMLEP2
ICTMPAGA EQU   ICTMLEP2
ICTMNE   EQU   ICTMLEP2
@NM00218 EQU   ICTMLEP1
ICTMDC   EQU   ICTMLEP1
ICTMREFR EQU   ICTMLEP1
ICTMOVLY EQU   ICTMLEP1
ICTMSCTR EQU   ICTMLEP1
ICTMREUS EQU   ICTMLEP1
ICTMRENT EQU   ICTMLEP1
ICTMAPF  EQU   ICTMLEP1
@NM00217 EQU   ICTMFLG5
ICTMNORL EQU   ICTMFLG5
ICTMELCK EQU   ICTMFLG5
ICTMPASS EQU   ICTMFLG5
@NM00216 EQU   ICTMFLG4
ICTMTSEL EQU   ICTMFLG4
ICTMMIDE EQU   ICTMFLG4
ICTMASOC EQU   ICTMFLG4
ICTMSELM EQU   ICTMFLG4
ICTMISEL EQU   ICTMFLG4
@NM00215 EQU   ICTMFLG3
ICTMPRMS EQU   ICTMFLG3
ICTMALIS EQU   ICTMFLG3
ICTMWRK  EQU   ICTMFLG3
ICTMTRX  EQU   ICTMFLG3
ICTLIBLK EQU   ICTMFLG3
ICTMMACU EQU   ICTMFLG1
ICTMMACR EQU   ICTMFLG1
ICTMXPND EQU   ICTMFLG1
ICTMZAP  EQU   ICTMFLG1
ICTMASM  EQU   ICTMMODR
ICTMMOD  EQU   ICTMMODR
@NM00214 EQU   ICTMFLG2
@NM00213 EQU   ICTMFLG2
ICTMMIDU EQU   ICTMFLG2
ICTMDEL  EQU   ICTMFLG2
@NM00212 EQU   ICTSBYNT+7
ICTSBYND EQU   ICTSBYNM
ICTDELEX EQU   ICTDELST
ICTDELND EQU   ICTDELNM
@NM00211 EQU   ICTVRSNT+7
ICTVRSND EQU   ICTVRSNM
@NM00210 EQU   ICTNPRNT+7
ICTNPRND EQU   ICTNPRNM
@NM00209 EQU   ICTCSRST
@NM00208 EQU   ICTCSRST
ICTCSRF  EQU   ICTCSRST
@NM00207 EQU   ICTCSRST
ICTCSRNM EQU   ICTIRQNT+8
@NM00206 EQU   ICTIRQST
ICTIREQT EQU   ICTIRQST
ICTIREQI EQU   ICTIRQST
ICTIREQB EQU   ICTIRQST
ICTIREQS EQU   ICTIRQST
@NM00205 EQU   ICTIRQST
ICTIRQND EQU   ICTIRQNM
@NM00204 EQU   ICTPREST
ICTPREQT EQU   ICTPREST
ICTPREQI EQU   ICTPREST
ICTPREQB EQU   ICTPREST
ICTPREQS EQU   ICTPREST
@NM00203 EQU   ICTPREST
ICTPREND EQU   ICTPRENM
@NM00202 EQU   ICTSUPNT+7
ICTSUPND EQU   ICTSUPNM
@NM00201 EQU   ICTREQST
ICTRREQT EQU   ICTREQST
ICTRREQI EQU   ICTREQST
ICTRREQB EQU   ICTREQST
ICTRREQS EQU   ICTREQST
@NM00200 EQU   ICTREQST
ICTREQND EQU   ICTREQNM
@NM00199 EQU   ICTENTST
ICTEREQT EQU   ICTENTST
ICTEREQI EQU   ICTENTST
ICTEREQB EQU   ICTENTST
ICTEREQS EQU   ICTENTST
@NM00198 EQU   ICTENTST
ICTENTND EQU   ICTENTNM
ICTIXP   EQU   ICTIXPF
@NM00197 EQU   ICTPTF+100
ICTPTPFX EQU   ICTPTF+38
ICTPRELN EQU   ICTPTF+36
ICTPRECT EQU   ICTPTF+33
ICTPRECD EQU   ICTPTF+30
ICTPVERN EQU   ICTPTF+29
ICTPFMID EQU   ICTPTF+22
ICTPSUPN EQU   ICTPTF+20
ICTPONUM EQU   ICTPTF+18
ICTPTYPE EQU   ICTPTF+17
ICTPUSR8 EQU   ICTPFLGA
ICTPUSR7 EQU   ICTPFLGA
ICTPUSR6 EQU   ICTPFLGA
ICTPUSR5 EQU   ICTPFLGA
ICTPUSR4 EQU   ICTPFLGA
ICTPUSR3 EQU   ICTPFLGA
ICTPUSR2 EQU   ICTPFLGA
ICTPPASS EQU   ICTPUSR1
@NM00196 EQU   @NM00195
ICTPRQBY EQU   @NM00195
ICTPRQOK EQU   @NM00195
ICTPRQCK EQU   @NM00195
@NM00194 EQU   ICTPFLG9
ICTPPDEL EQU   ICTPFLG9
ICTPWRKO EQU   ICTPFLG9
ICTPMSL  EQU   ICTPFLG9
@NM00193 EQU   ICTPFLG8
ICTPDCPL EQU   ICTPFLG8
ICTPECPL EQU   ICTPFLG8
ICTPGCPL EQU   ICTPFLG8
@NM00192 EQU   ICTPFLG4
@NM00191 EQU   ICTPFLG4
@NM00190 EQU   ICTPFLG4
ICTPGELM EQU   ICTPFLG4
ICTPDIMP EQU   ICTPFLG4
ICTPDEXP EQU   ICTPFLG4
ICTPREDO EQU   ICTPFLG4
ICTPCDSE EQU   ICTPFLG4
@NM00189 EQU   ICTPFLG2
ICTPRCND EQU   ICTPFLG2
ICTPTPS  EQU   ICTPFLG2
ICTPTR1  EQU   ICTPFLG2
ICTPVRSP EQU   ICTPFLG2
@NM00188 EQU   ICTPFLG6
ICTFLF   EQU   ICTPFLF
ICTPDBYP EQU   ICTPFLG6
ICTPSBYP EQU   ICTPFLG6
ICTPMDLP EQU   ICTPFLG5+1
ICTPADDP EQU   ICTPFLG5+1
@NM00187 EQU   ICTPFLG5+1
ICTPLRFP EQU   ICTPFLG5
ICTPJCLP EQU   ICTPFLG5
ICTPSUPP EQU   ICTPFLG5
ICTPREQP EQU   ICTPFLG5
ICTPPREP EQU   ICTPFLG5
ICTPNPRP EQU   ICTPFLG5
ICTPIRQP EQU   ICTPFLG5
ICTPDELP EQU   ICTPFLG5
@NM00186 EQU   ICTPFLG3
ICTPSLST EQU   ICTPFLG3
ICTPNOLB EQU   ICTPFLG3
ICTPVERJ EQU   ICTPFLG3
ICTPMSG  EQU   ICTPFLG3
ICTPCPL  EQU   ICTPFLG3
ICTPNOGO EQU   ICTPFLG3
ICTPROCS EQU   ICTPPROC
ICTREGEN EQU   ICTPFLG1
ICTBYP   EQU   ICTPFLG1
ICTDUMMP EQU   ICTPFLG1
@NM00185 EQU   ICTPFLG1
ICTERROR EQU   ICTPFLG1
ICTACC   EQU   ICTPFLG1
ICTRES   EQU   ICTPFLG1
ICTAPP   EQU   ICTPFLG1
ICTPEND  EQU   ICTPTFS
ICTLEN   EQU   ICTGMSPL+1
ICTSP    EQU   ICTGMSPL
ICTLLEN  EQU   ICTLSPLN+1
ICTLSP   EQU   ICTLSPLN
ICTMLEN  EQU   ICTMSPLN+1
ICTMSP   EQU   ICTMSPLN
ICTPLEN  EQU   ICTPSPLN+1
ICTPSP   EQU   ICTPSPLN
IOPBS04E EQU   IOPBS04+2
IOPBAPFC EQU   IOPBAPF+1
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
IOPQSMTP EQU   IOPQSMLS+8
@NM00170 EQU   IOPQSMLS+7
IOPQSMND EQU   IOPQSMNM
@NM00169 EQU   @NM00168+7
IOPQSMFM EQU   @NM00168
@NM00088 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00063 EQU   IOPUSERL
@NM00062 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00061 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00060 EQU   @NM00057+10
IOPSEQNO EQU   @NM00057+8
@NM00059 EQU   @NM00058+7
IOPPTFNM EQU   @NM00058
IOPNAM17 EQU   IOPNAME
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00056 EQU   CCABLDLM+2
@NM00055 EQU   CCABLDLM
CCAUPDPM EQU   @NM00053+24
@NM00054 EQU   @NM00053+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00053+12
CCAUPDTE EQU   @NM00053+8
CCAUPDNM EQU   @NM00053
CCASUPPM EQU   @NM00051+24
@NM00052 EQU   @NM00051+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00051+12
CCAIOSUP EQU   @NM00051+8
CCASUPNM EQU   @NM00051
CCAZAPPM EQU   @NM00049+24
@NM00050 EQU   @NM00049+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00049+12
CCASPZAP EQU   @NM00049+8
CCAZAPNM EQU   @NM00049
CCACOMPM EQU   @NM00047+24
@NM00048 EQU   @NM00047+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00047+12
CCACOMRS EQU   @NM00047+8
CCACOMNM EQU   @NM00047
CCACPYPM EQU   @NM00045+24
@NM00046 EQU   @NM00045+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00045+12
CCACOPY  EQU   @NM00045+8
CCACPYNM EQU   @NM00045
CCAASMPM EQU   @NM00043+24
@NM00044 EQU   @NM00043+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00043+12
CCAASM   EQU   @NM00043+8
CCAASMNM EQU   @NM00043
CCALKDPM EQU   @NM00041+24
@NM00042 EQU   @NM00041+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00041+12
CCALKED  EQU   @NM00041+8
CCALKDNM EQU   @NM00041
CCAPGMPM EQU   @NM00039+24
@NM00040 EQU   @NM00039+21
CCABPGRC EQU   @NM00039+20
CCABPGSP EQU   @NM00039+12
CCABPGAD EQU   @NM00039+8
CCABPGNM EQU   @NM00039
CCAEND   EQU   HMASMCCA+371
@NM00038 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00037 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00036 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00035 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00034 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00033 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00032 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00031 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00030 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00029 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00028 EQU   @NM00023+18
@NM00027 EQU   @NM00023+16
CCATBLPA EQU   @NM00023+12
@NM00026 EQU   @NM00023+8
@NM00025 EQU   @NM00023+4
@NM00024 EQU   @NM00023
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00022 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
@NM00021 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00020 EQU   CCAFBUFR+122
@NM00019 EQU   CCAFBUFR+120
@NM00018 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00017 EQU   CCAFBUFR+88
@NM00016 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00015 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
@NM00014 EQU   TBLFLG5
TBLICTOK EQU   TBLFLG5
@NM00013 EQU   TBLFLG4
TBLBPFM  EQU   TBLFLG4
@NM00012 EQU   TBLFLG4
TBLBPIRQ EQU   TBLFLG4
TBLBPREQ EQU   TBLFLG4
TBLBPPRE EQU   TBLFLG4
TBLBPID  EQU   TBLFLG4
@NM00011 EQU   TBLFLG3+1
TBLSTS   EQU   TBLFLG3
TBLMTS   EQU   TBLFLG3
TBLPTS   EQU   TBLFLG3
TBLACRQ  EQU   TBLFLG3
TBLCRQ   EQU   TBLFLG3
TBLSCDS  EQU   TBLFLG3
TBLACDS  EQU   TBLFLG3
TBLCDS   EQU   TBLFLG3
TBLMASS  EQU   TBLFLG2
@NM00010 EQU   TBLFLG2
TBLFMID  EQU   TBLFLG2
TBLGROUP EQU   TBLFLG2
TBLEXC   EQU   TBLFLG2
TBLSEL   EQU   TBLFLG2
@NM00009 EQU   TBLFLG1+1
TBLDISW  EQU   TBLFLG1+1
TBLDISR  EQU   TBLFLG1+1
TBLDISN  EQU   TBLFLG1+1
TBLNOJCL EQU   TBLFLG1
TBLFLUSH EQU   TBLFLG1
TBLUSER  EQU   TBLFLG1
TBLAPAR  EQU   TBLFLG1
TBLCOMP  EQU   TBLFLG1
TBLASSEM EQU   TBLFLG1
TBLCHECK EQU   TBLFLG1
@NM00008 EQU   TBLXOPTS+5
TBLNUCID EQU   TBLXOPTS+4
TBLJCLGT EQU   TBLXOPTS
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00271 EQU   @EL00003
@RF00275 EQU   @EL00003
@RF00336 EQU   @EL00005
@RF00383 EQU   @RC00375
@RF00400 EQU   @EL00006
@RF00444 EQU   @EL00007
@RF00512 EQU   @EL00008
@RF00523 EQU   @EL00008
@RF00545 EQU   @EL00008
@RC00558 EQU   @EL00009
@RC00556 EQU   @EL00009
@RF00599 EQU   @EL00010
@RF00608 EQU   @EL00011
@RF00615 EQU   @EL00012
@RF00623 EQU   @EL00012
@ENDDATA EQU   *
         END   HMASMTM3,(C'PLS2201',0802,78334)
