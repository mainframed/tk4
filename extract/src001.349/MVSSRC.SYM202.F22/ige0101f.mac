         TITLE 'IGE0101F,3886 ERROR RECOVERY PROCEDURE-2ND LOAD        *
                        '
ER3886B  CSECT ,                                                   0001
@PROLOG  BALR  @06,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@06                                         0001
*                                                                  0105
*   /*****************************************************************/
*   /*                                                               */
*   /* MAIN FLOW                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0105
*   UCBPTR=IOSUCB;                  /* INIT POINTER TO UCB Y02870    */
         L     UCBPTR,IOSUCB(,IOSBPTR)                             0105
*   EWAPTR=IOSERP;                  /* INIT POINTER TO ERP WORK    0106
*                                      Y02870                        */
         L     EWAPTR,IOSERP(,IOSBPTR)                             0106
*   CCWREG=IOSCSWCA-CCWLEN;         /* FIND FAILING CCW Y02870       */
         L     CCWREG,IOSCSWCA-1(,IOSBPTR)                         0107
         LA    CCWREG,0(,CCWREG)                                   0107
         SL    CCWREG,@CF00052                                     0107
*/*                                                                  */
*/* UNITCHCK SEGMENT-PERFORMS PRIORITY CHECK FOR SENSE BITS AND      */
*/*    INCLUDES SEGMENTS TO SETUP ACTION                             */
*/*                                                                  */
*                                                                  0108
*   SDRINDEX=ZERO;                  /* INIT SDR INDEX TO ZERO        */
         MVI   SDRINDEX(EWAPTR),X'00'                              0108
*STRTCHCK:                          /* START SENSE CHECKING          */
*   IF IOBS0B5=ON×                  /* NOT USED SENSE ON OR          */
*       IOBS0B4=ON×                 /* NON INIT OR                   */
*       IOBS0B7=ON×                 /* RCP ERROR                     */
*       IOBS0B6=ON×IOBS1B5=ON×IOBS1B3=ON×IOBS1B0=ON THEN/* YES,SETUP
*                                      ACTION                        */
STRTCHCK TM    IOBS0B5(IOSBPTR),B'00001111'                        0109
         BNZ   @RT00109                                            0109
         TM    IOBS1B5(IOSBPTR),B'10010100'                        0109
         BZ    @RF00109                                            0109
@RT00109 DS    0H                                                  0110
*     DO;                                                          0110
*       IOBOBR=ON;                  /* OBR NEEDED                    */
*       IOBPMS=ON;                  /* PERM ERR MSG                  */
         OI    IOBOBR(IOSBPTR),B'00000101'                         0112
*       IF IOBS0B6=ON&              /* NONINIT                       */
*           IOBS0B7=BOF             /* AND NOT RCP ERROR             */
*         THEN                      /* YES,IND OBR NEEDED            */
         TM    IOBS0B6(IOSBPTR),B'00000010'                        0113
         BNO   @RF00113                                            0113
         TM    IOBS0B7(IOSBPTR),B'00000001'                        0113
         BNZ   @RF00113                                            0113
*         IOBOBR=BOF;               /* OBR NEEDED                    */
         NI    IOBOBR(IOSBPTR),B'11111110'                         0114
*       ELSE                                                       0115
*         ;                                                        0115
@RF00113 DS    0H                                                  0116
*     END;                                                         0116
*   ELSE                            /* NOT 1 OF FIRST SENSE BITS     */
*/*                                                                  */
*/* UNITCHK2 SEGMENT- PERFORMS PRIORITY CHECK FOR SENSE BITS         */
*/*                                                                  */
*                                                                  0117
*     DO;                                                          0117
         B     @RC00109                                            0117
@RF00109 DS    0H                                                  0118
*       IF IOBS1B7=ON               /* OBR SENSE ON                  */
*         THEN                      /* YES,                          */
         TM    IOBS1B7(IOSBPTR),B'00000001'                        0118
         BNO   @RF00118                                            0118
*         IOBOBR=ON;                /* IND OBR NEEDED                */
         OI    IOBOBR(IOSBPTR),B'00000001'                         0119
*       ELSE                                                       0120
*         ;                                                        0120
@RF00118 DS    0H                                                  0121
*EQUIPCHK:                          /* TEST FOR EQUIPMENT CHECK      */
*       IF IOBS0B3=ON               /* EQUIPMENT CHECK               */
*         THEN                      /* YES,PROCESS EQUIP CHECK       */
EQUIPCHK TM    IOBS0B3(IOSBPTR),B'00010000'                        0121
         BNO   @RF00121                                            0121
*/*                                                                  */
*/* EQUIPCHK SEGMENT- SETS UP ACTION TO BE TAKEN FOR EQUIPMENT CHECK */
*/*                                                                  */
*                                                                  0122
*         DO;                                                      0122
*           IF IOSSENS1=SNSUTCK     /* UNIT CK ON SENSE CMNDY02870   */
*             THEN                  /* WHEN EQUIP CHK,YES,           */
         CLI   IOSSENS1(IOSBPTR),X'FE'                             0123
         BNE   @RF00123                                            0123
*             DO;                   /*                               */
*               IOBPMS=ON;          /* PERM ERR MSG                  */
*               IOBOBR=ON;          /* OBR NEEDED                    */
         OI    IOBPMS(IOSBPTR),B'00000101'                         0126
*             END;                  /*                               */
*           ELSE                    /* NO,                           */
*             DO;                                                  0128
         B     @RC00123                                            0128
@RF00123 DS    0H                                                  0129
*               IF EWCSNSB3>=SDRB1A&/* SDR TO BE UPDATEDY02870       */
*                   EWCSNSB3<=SDRB1B/* Y02870                        */
*                 THEN              /* YES,FIND JDR TAB INDX         */
         CLI   EWCSNSB3(EWAPTR),X'40'                              0129
         BL    @RF00129                                            0129
         CLI   EWCSNSB3(EWAPTR),X'46'                              0129
         BH    @RF00129                                            0129
*                 SDRINDEX=EWCSNS3-ALGN1;/* SET SDR INDEX Y02870     */
         SLR   @15,@15                                             0130
         IC    @15,EWCSNS3(,EWAPTR)                                0130
         SL    @15,@CF00098                                        0130
         STC   @15,SDRINDEX(,EWAPTR)                               0130
*               ELSE                                               0131
*                 ;                 /* NULL ELSE                     */
@RF00129 DS    0H                                                  0132
*               IF IOBEQC=ON×       /* RETRY ATTEMPTED               */
*                   IOSCOD=INTRCPT× /* INTRCPT CONDITION Y02870      */
*                   ^(COMMAND=SCAN× /* NOT(SCAN OR                   */
*                   COMMAND=LFORMAT)/* LOAD FORMAT CMMD)             */
*                 THEN              /* YES,PERM ERR,EXIT             */
         TM    IOBEQC(EWAPTR),B'01000000'                          0132
         BO    @RT00132                                            0132
         CLI   IOSCOD(IOSBPTR),X'7E'                               0132
         BE    @RT00132                                            0132
         CLI   COMMAND(CCWREG),X'73'                               0132
         BE    @RF00132                                            0132
         CLI   COMMAND(CCWREG),X'53'                               0132
         BE    @RF00132                                            0132
@RT00132 DS    0H                                                  0133
*                 IOBPMS=ON;        /* PERM ERR MSG                  */
         OI    IOBPMS(IOSBPTR),B'00000100'                         0133
*               ELSE                /* NO, RETRY CCW                 */
*                 IOBEQC=ON;        /* SET RETRY BIT ON              */
         B     @RC00132                                            0134
@RF00132 OI    IOBEQC(EWAPTR),B'01000000'                          0134
*             END;                                                 0135
*         END;                                                     0136
*       ELSE                        /* NO, CONTINUE PRIORITY CHK     */
*NONRECOV:                          /* TEST FOR NON RECOVERY         */
*         IF IOBS1B6=ON             /* NON-RECOVERY                  */
*           THEN                    /* YES,PROCESS NON-RECOVERY      */
         B     @RC00121                                            0137
@RF00121 DS    0H                                                  0137
NONRECOV TM    IOBS1B6(IOSBPTR),B'00000010'                        0137
         BNO   @RF00137                                            0137
*           DO;                                                    0138
*             IOBPMS=ON;            /* IND PERM ERROR                */
         OI    IOBPMS(IOSBPTR),B'00000100'                         0139
*             IF EWCSNSB3=SDRB1I×   /* SDR TO BE Y02870              */
*                 EWCSNSB3=SDRB1J   /* COUNTED Y02870                */
*               THEN                /* YES FIND INDEX                */
         CLI   EWCSNSB3(EWAPTR),X'70'                              0140
         BE    @RT00140                                            0140
         CLI   EWCSNSB3(EWAPTR),X'71'                              0140
         BNE   @RF00140                                            0140
@RT00140 DS    0H                                                  0141
*               SDRINDEX=EWCSNS3-ALGN5;/* SET INDEX FOR NON REC    0141
*                                      YM2516                        */
         SLR   @15,@15                                             0141
         IC    @15,EWCSNS3(,EWAPTR)                                0141
         SL    @15,@CF00105                                        0141
         STC   @15,SDRINDEX(,EWAPTR)                               0141
*             ELSE                                                 0142
*               ;                   /* NULL ELSE                     */
@RF00140 DS    0H                                                  0143
*           END;                    /* END DO                        */
*         ELSE                      /* NO,CONTINUE PRIORITY          */
*INCPSCAN:                          /* TEST FOR INCOMPLETE SCAN      */
*           IF IOBS1B4=ON           /* INCOMPLETE SCAN               */
*             THEN                  /* YES,PROCESS INCOMPL SCAN      */
         B     @RC00137                                            0144
@RF00137 DS    0H                                                  0144
INCPSCAN TM    IOBS1B4(IOSBPTR),B'00001000'                        0144
         BNO   @RF00144                                            0144
*/*                                                                  */
*/* INCPLSCN SEGMENT- SETS UP ACTION TO BE TAKEN FOR THE INCOMPLETE  */
*/*    SCAN SENSE BIT SETTING                                        */
*/*                                                                  */
*                                                                  0145
*             DO;                                                  0145
*               IF EWCSNSB3>=SDRB1C&/* SDR TO BE UPDATED Y02870      */
*                   EWCSNSB3<=SDRB1D/* Y02870                        */
*                 THEN              /* YES,FIND SDR TAB INDEX        */
         CLI   EWCSNSB3(EWAPTR),X'60'                              0146
         BL    @RF00146                                            0146
         CLI   EWCSNSB3(EWAPTR),X'66'                              0146
         BH    @RF00146                                            0146
*                 SDRINDEX=EWCSNS3-ALGN2;/* SET SDR INDEX Y02870     */
         SLR   @15,@15                                             0147
         IC    @15,EWCSNS3(,EWAPTR)                                0147
         SL    @15,@CF00100                                        0147
         STC   @15,SDRINDEX(,EWAPTR)                               0147
*               ELSE                                               0148
*                 ;                 /* NULL ELESE                    */
@RF00146 DS    0H                                                  0149
*               IF IOBICS=ON×       /* INCPL SCAN RETRIED OR         */
*                   IOSCOD=INTRCPT  /* INTERCEPT Y02870              */
*                 THEN              /* YES,PERM ERROR-NO MSG         */
         TM    IOBICS(EWAPTR),B'00010000'                          0149
         BO    @RT00149                                            0149
         CLI   IOSCOD(IOSBPTR),X'7E'                               0149
         BNE   @RF00149                                            0149
@RT00149 DS    0H                                                  0150
*                 IOSERR=BOF;       /* NO MORE RETRY Y02870          */
         NI    IOSERR(IOSBPTR),B'11011111'                         0150
*               ELSE                /* NO, SETUP RETRY               */
*                 IOBICS=ON;        /* TURN ON RETRY BIT             */
         B     @RC00149                                            0151
@RF00149 OI    IOBICS(EWAPTR),B'00010000'                          0151
*             END;                                                 0152
*           ELSE                    /* NOT INCPL SCAN,CONTINUE       */
*MARKCHK:                           /* MARK CHECK TEST               */
*             IF IOBS1B1=ON         /* MARK CHECK                    */
*               THEN                /* YES,                          */
         B     @RC00144                                            0153
@RF00144 DS    0H                                                  0153
MARKCHK  TM    IOBS1B1(IOSBPTR),B'01000000'                        0153
         BNO   @RF00153                                            0153
*               DO;                 /*                               */
*                 IOBPMS=ON;        /* IND PERM ERR MSG              */
         OI    IOBPMS(IOSBPTR),B'00000100'                         0155
*                 IF EWCSNSB3>=SDRB1E&/* UPDATE TO Y02870            */
*                     EWCSNSB3<=SDRB1F/* MAKE Y02870                 */
*                   THEN            /* YES,FIND TABLE INDEX          */
         CLI   EWCSNSB3(EWAPTR),X'50'                              0156
         BL    @RF00156                                            0156
         CLI   EWCSNSB3(EWAPTR),X'54'                              0156
         BH    @RF00156                                            0156
*                   SDRINDEX=EWCSNS3-ALGN3;/* INDEX Y02870           */
         SLR   @15,@15                                             0157
         IC    @15,EWCSNS3(,EWAPTR)                                0157
         SL    @15,@CF00102                                        0157
         STC   @15,SDRINDEX(,EWAPTR)                               0157
*                 ELSE                                             0158
*                   ;               /* NULL ELSE                     */
@RF00156 DS    0H                                                  0159
*               END;                /*                               */
*             ELSE                  /* NO LMSTMC,CONTINUE PRIORTY    */
*INTRVREQ:                          /* TEST FOR INTRVTN REQ          */
*               IF IOBS0B1=ON       /* INTERV REQUIRED               */
*                 THEN              /* YES,PROCESS INT REQ           */
         B     @RC00153                                            0160
@RF00153 DS    0H                                                  0160
INTRVREQ TM    IOBS0B1(IOSBPTR),B'01000000'                        0160
         BNO   @RF00160                                            0160
*/*                                                                  */
*/* INTREQ SEGMENT- SETS UP ACTION TO BE TAKEN FOR THE INTERVENTION  */
*/*    REQUIRED SENSE BIT SETTING                                    */
*/*                                                                  */
*                                                                  0161
*                 DO;                                              0161
*                   IOBIRM=ON;      /* IND INT REQ MSG               */
         OI    IOBIRM(EWAPTR),B'00001000'                          0162
*                   IF EWCSNSB3>=SDRB1G&/* IND INT REQ MSG Y02870    */
*                       EWCSNSB3<=SDRB1H/* Y02870                    */
*                     THEN          /* YES,FIND SDR TAB INDEX        */
         CLI   EWCSNSB3(EWAPTR),X'10'                              0163
         BL    @RF00163                                            0163
         CLI   EWCSNSB3(EWAPTR),X'22'                              0163
         BH    @RF00163                                            0163
*                     SDRINDEX=EWCSNS3-ALGN4;/* SET SDR INDEX Y02870 */
         SLR   @15,@15                                             0164
         IC    @15,EWCSNS3(,EWAPTR)                                0164
         SL    @15,@CF00062                                        0164
         STC   @15,SDRINDEX(,EWAPTR)                               0164
*                   ELSE                                           0165
*                     ;             /* NULL ELSE                     */
@RF00163 DS    0H                                                  0166
*                   IF IOSCOD=INTRCPT/* INTERCEPT Y02870             */
*                     THEN          /* YES,PERM ERROR                */
         CLI   IOSCOD(IOSBPTR),X'7E'                               0166
         BNE   @RF00166                                            0166
*                     IOBPMS=ON;    /* PERM ERROR                    */
         OI    IOBPMS(IOSBPTR),B'00000100'                         0167
*                   ELSE            /* NO,NOT INTERCEPT ON INT RQ    */
*                     IF COMMAND=EJECT&/* ENDING STATUS OF EJECT     */
*                         STBYT1B5=ON/* COMMAND                      */
*                       THEN        /* YES,INT REQ MSG,NO RETRY      */
         B     @RC00166                                            0168
@RF00166 CLI   COMMAND(CCWREG),X'63'                               0168
         BNE   @RF00168                                            0168
         TM    STBYT1B5(IOSBPTR),B'00000100'                       0168
         BNO   @RF00168                                            0168
*                       IF IOBRSTRT=ON/* RESTART ON-INDS COMMND CHN  */
*                         THEN      /* YES, ALLOW RESTART            */
         TM    IOBRSTRT(EWAPTR),B'00000010'                        0169
         BNO   @RF00169                                            0169
*                         IOSRST=IOSRST+CCWLEN;/* BUMP START ADDR  0170
*                                      Y02870                        */
         LA    @15,8                                               0170
         AL    @15,IOSRST(,IOSBPTR)                                0170
         ST    @15,IOSRST(,IOSBPTR)                                0170
*                       ELSE        /* NO,                           */
*                         DO;       /* DONT ALLOW RETRY              */
         B     @RC00169                                            0171
@RF00169 DS    0H                                                  0172
*                           IOSERR=BOF;/* TURN OFF ERP IN CONTROL  0172
*                                      Y02870                        */
*                           IOSEX=BOF;/* TURN OF PERM ERRROR Y02870  */
         NI    IOSERR(IOSBPTR),B'11011011'                         0173
*                         END;      /*                               */
*                     ELSE                                         0175
*                       ;           /* NULL ELSE                     */
@RF00168 DS    0H                                                  0176
*                   IF IOCC3886=NOTOPER/* SIOOC IS NOT OPERATIONAL   */
*                     THEN          /* YES,USE START ADDRESS         */
@RC00168 DS    0H                                                  0176
@RC00166 TM    IOCC3886(IOSBPTR),B'00110000'                       0176
         BNO   @RF00176                                            0176
*                     IOBRSTRT=BOF; /* RESTART ADDR MAY BE BAD       */
         NI    IOBRSTRT(EWAPTR),B'11111101'                        0177
*                   ELSE                                           0178
*                     ;             /* NULL ELSE                     */
@RF00176 DS    0H                                                  0179
*                 END;                                             0179
*               ELSE                /* NOT INT REQ,CONTINUE PRIO     */
*BUSOUT:                            /* TEST FOR BUS OUT              */
*                 IF IOBS0B2=ON     /* BUS OUT CHECK                 */
*                   THEN            /* YES,PROCESS BUSOUT            */
         B     @RC00160                                            0180
@RF00160 DS    0H                                                  0180
BUSOUT   TM    IOBS0B2(IOSBPTR),B'00100000'                        0180
         BNO   @RF00180                                            0180
*/*                                                                  */
*/* BUSOUT SEGMENT- SETS UP ACTION FOR BUSOUT SENSE INDICATION       */
*/*                                                                  */
*                                                                  0181
*                   DO;                                            0181
*                     IOBOBR=ON;    /* LOGOUT NEEDED                 */
         OI    IOBOBR(IOSBPTR),B'00000001'                         0182
*                     IF IOBBOC=ON  /* COMMAND BEEN RETRIED          */
*                       THEN        /* YES,INDICATE MSG, PERM ERR    */
         TM    IOBBOC(EWAPTR),B'00100000'                          0183
         BNO   @RF00183                                            0183
*                       IOBPMS=ON;  /* PERM ERR MSG                  */
         OI    IOBPMS(IOSBPTR),B'00000100'                         0184
*                     ELSE          /* NO,NOT RETRIED                */
*                       IOBBOC=ON;  /* RETRY COMMAND                 */
         B     @RC00183                                            0185
@RF00183 OI    IOBBOC(EWAPTR),B'00100000'                          0185
*                   END;                                           0186
*                 ELSE              /* NO,CONTINUE PRIORITY CHECK    */
*CMDRINVF:                          /* COMMD REJ OR INV FORMAT       */
*                   IF IOBS0B0=ON×  /* COMMAND REJECT                */
*                       IOBS1B2=ON  /* INVALID FORMAT                */
*                     THEN          /* YES,PROCESS                   */
         B     @RC00180                                            0187
@RF00180 DS    0H                                                  0187
CMDRINVF TM    IOBS0B0(IOSBPTR),B'10000000'                        0187
         BO    @RT00187                                            0187
         TM    IOBS1B2(IOSBPTR),B'00100000'                        0187
         BNO   @RF00187                                            0187
@RT00187 DS    0H                                                  0188
*                     IOBPMS=ON;    /* PERM ERR MSG                  */
         OI    IOBPMS(IOSBPTR),B'00000100'                         0188
*                   ELSE            /* UNIT CHK AND NO SENSE         */
*                     DO;           /*                               */
         B     @RC00187                                            0189
@RF00187 DS    0H                                                  0190
*                       IOBPMS=ON;  /* OERM ERR MSG                  */
*                       IOBOBR=ON;  /* IND LOGOUT NEEDED             */
         OI    IOBPMS(IOSBPTR),B'00000101'                         0191
*                     END;          /*                               */
*     END;                          /* END OF SENSE PRIORITY         */
@RC00187 DS    0H                                                  0193
@RC00180 DS    0H                                                  0193
@RC00160 DS    0H                                                  0193
@RC00153 DS    0H                                                  0193
@RC00144 DS    0H                                                  0193
@RC00137 DS    0H                                                  0193
@RC00121 DS    0H                                                  0194
*                                                                  0194
*/*                                                                  */
*/* EXITCODE SEGMENT-                                                */
*/* ONE OF THE FOLLOWING EXITS MAY BE TAKEN                          */
*/*     A) WTO MODULE FOR MSG AND POSSIBLE LOGOUT                    */
*/*     B) OBR MODULE FOR LOGOUT AND POSSIBLE RETRY                  */
*/*     C) IOS FOR RETRY OR ERROR CORRECTED                          */
*/*                                                                  */
*/* SDROBRCK SEGMENT- UPDATES SDR COUNTER WHEN INDICATED AND SETS UP */
*/*    OBR LOGOUT RECORD WHEN INDICATED                              */
*                                                                  0194
*   EWADDISP=ADDR(EWCOBR);          /* POINTER TO OBR INFO Y02870    */
@RC00109 LA    @15,EWCOBR(,EWAPTR)                                 0194
         STCM  @15,7,EWADDISP(EWAPTR)                              0194
*   EWADCNT='08'X;                  /* OBR COUNT IS 8 BYTES Y02870   */
         MVI   EWADCNT(EWAPTR),X'08'                               0195
*   IF SDRINDEX^=ZERO×              /* SDR TO BE UPDATED             */
*       IOBOBR=ON                   /* OR LOGOUT REQ                 */
*     THEN                          /* YES,LOCATE AND UPDATE CTR     */
         CLI   SDRINDEX(EWAPTR),0                                  0196
         BNE   @RT00196                                            0196
         TM    IOBOBR(IOSBPTR),B'00000001'                         0196
         BNO   @RF00196                                            0196
@RT00196 DS    0H                                                  0197
*     DO;                                                          0197
*                                                                  0197
*/* LOCATE THE SDR TABLE                                             */
*                                                                  0198
*       STTPTR=CVTSTB;              /* GET POINTER STATISTIC TAB     */
         L     @15,CVTPTR                                          0198
         L     STTPTR,CVTSTB(,@15)                                 0198
*       WK2PTR=STTPTR;              /* USE REG AS INDEX THRU TAB     */
         LR    WK2PTR,STTPTR                                       0199
*       WK1PTR=UCBSTI;              /* GET STAT TABLE INDEX          */
         L     @15,UCBEXTPT(,UCBPTR)                               0200
         SLR   WK1PTR,WK1PTR                                       0200
         IC    WK1PTR,UCBSTI(,@15)                                 0200
*       DO WHILE(IOSUCB>STUCBPTR)&  /* CORCT SECT OF TABL    @Z30AE83*/
*             (WK2PTR^=SDREND);     /* IS IT TABLE END       @Z30AE83*/
         B     @DE00201                                            0201
@DL00201 DS    0H                                                  0202
*         WK1PTR=WK1PTR+STIND;      /* INCR INDEX + 256              */
         AL    WK1PTR,@CF00063                                     0202
*         WK2PTR=WK2PTR+CTENLEN;    /* INCR ENTRY + 2                */
         AL    WK2PTR,@CF00065                                     0203
*       END;                                                       0204
@DE00201 LH    @15,STUCBPTR(,WK2PTR)                               0204
         N     @15,@CF01566                                        0204
         C     @15,IOSUCB(,IOSBPTR)                                0204
         BNL   @DC00201                                            0204
         C     WK2PTR,@CF00086                                     0204
         BNE   @DL00201                                            0204
@DC00201 DS    0H                                                  0205
*       IF WK2PTR^=SDREND           /* IS UCBPTR IN TABLE?   @Z30AE83*/
*         THEN                      /* IF IT IS              @Z30AE83*/
         C     WK2PTR,@CF00086                                     0205
         BE    @RF00205                                            0205
*         DO;                       /* UPDATE SDR INFO       @Z30AE83*/
*           WK1PTR=WK1PTR*STENLEN;  /* MULT INDEX BY ENTRY LEN 10    */
         LR    @15,WK1PTR                                          0207
         MH    @15,@CH00067                                        0207
         LR    WK1PTR,@15                                          0207
*           STTPTR=STTPTR+WK1PTR;   /* LOCATE DEVICES ENTRY          */
         ALR   STTPTR,WK1PTR                                       0208
*           SDRAFLGS=SDR30BTS;      /* INIT SDR AREA TO SHOW 30 BYTES*/
         MVI   SDRAFLGS(STTPTR),X'82'                              0209
*           EWCOBR=EWCOBR&&EWCOBR;  /* ZERO OUT OBR AREA Y02870      */
         XC    EWCOBR(8,EWAPTR),EWCOBR(EWAPTR)                     0210
*           EWCFRID=UCBFRIDS;       /* MOVE FORMAT RECORD ID YM2514  */
         MVC   EWCFRID(4,EWAPTR),UCBFRIDS(UCBPTR)                  0211
*         END;                      /*                       @Z30AE83*/
*       ELSE                                                       0213
*         DO;                                                      0213
         B     @RC00205                                            0213
@RF00205 DS    0H                                                  0214
*           SDRINDEX=ZERO;          /* DONT DO SDR           @Z30AE83*/
         MVI   SDRINDEX(EWAPTR),X'00'                              0214
*           IOBOBR=BOF;             /* DONT DO OBR           @Z30AE83*/
         NI    IOBOBR(IOSBPTR),B'11111110'                         0215
*         END;                                                     0216
*       IF SDRINDEX^=ZERO           /* SDR CTR TO BE UPDATED         */
*         THEN                      /* YES, DO UPDATE                */
@RC00205 CLI   SDRINDEX(EWAPTR),0                                  0217
         BE    @RF00217                                            0217
*         DO;                       /* UPDATE CTR                    */
*           WK1PTR=SDRINDEX//TWO;   /* IS INDEX ODD                  */
         SLR   @10,@10                                             0219
         IC    @10,SDRINDEX(,EWAPTR)                               0219
         SRDA  @10,32                                              0219
         D     @10,@CF00065                                        0219
         LR    WK1PTR,@10                                          0219
*           WK2PTR=SDRINDEX/TWO+WK1PTR;/* CONVERT INDEX TO TABLE   0220
*                                      INDEX                         */
         SLR   WK2PTR,WK2PTR                                       0220
         IC    WK2PTR,SDRINDEX(,EWAPTR)                            0220
         SRL   WK2PTR,1                                            0220
         ALR   WK2PTR,WK1PTR                                       0220
*           IF WK1PTR=ZERO          /* RIGHT SIDE OF BYTE            */
*             THEN                  /* YES, UPDATE COUNTER           */
         LTR   WK1PTR,WK1PTR                                       0221
         BNZ   @RF00221                                            0221
*             DO;                                                  0222
*               STATELEM(WK2PTR)=STATELEM(WK2PTR)+INCR1;/* INCR CTR  */
         LA    @15,1                                               0223
         SLR   @12,@12                                             0223
         IC    @12,STATELEM-1(WK2PTR,STTPTR)                       0223
         ALR   @15,@12                                             0223
         STC   @15,STATELEM-1(WK2PTR,STTPTR)                       0223
*               IF(STATELEM(WK2PTR)&CTRMASK)>=FIFTN/* COUNTER      0224
*                                      OVERFLOW                      */
*                 THEN              /* YES,                          */
         LA    @15,15                                              0224
         SLR   @12,@12                                             0224
         IC    @12,STATELEM-1(WK2PTR,STTPTR)                       0224
         NR    @15,@12                                             0224
         C     @15,@CF00062                                        0224
         BL    @RF00224                                            0224
*                 IOBOBR=ON;        /* IND OBR NEEDED                */
         OI    IOBOBR(IOSBPTR),B'00000001'                         0225
*               ELSE                                               0226
*                 ;                                                0226
@RF00224 DS    0H                                                  0227
*             END;                                                 0227
*           ELSE                    /* MUST BE LEFT SIDE OF BYTE     */
*             DO;                                                  0228
         B     @RC00221                                            0228
@RF00221 DS    0H                                                  0229
*               STATELEM(WK2PTR)=STATELEM(WK2PTR)+INCR16;/* INCR CTR */
         LA    @15,16                                              0229
         SLR   @12,@12                                             0229
         IC    @12,STATELEM-1(WK2PTR,STTPTR)                       0229
         ALR   @15,@12                                             0229
         STC   @15,STATELEM-1(WK2PTR,STTPTR)                       0229
*               IF STATELEM(WK2PTR)>=TFORTY/* COUNTER OVERFLOW       */
*                 THEN              /* YES,                          */
         SLR   @15,@15                                             0230
         IC    @15,STATELEM-1(WK2PTR,STTPTR)                       0230
         C     @15,@CF00126                                        0230
         BL    @RF00230                                            0230
*                 IOBOBR=ON;        /* IND OBR NEEDED                */
         OI    IOBOBR(IOSBPTR),B'00000001'                         0231
*               ELSE                                               0232
*                 ;                                                0232
@RF00230 DS    0H                                                  0233
*             END;                                                 0233
*         END;                                                     0234
@RC00221 DS    0H                                                  0235
*       IF IOBOBR=ON&               /* LOGOUT OUT NEEDED             */
*           IOSCOD^=INTRCPT&        /* INTERCEPT Y02870              */
*           SDRINDEX=ZERO           /* NOT AN SDR UPDATE             */
*         THEN                      /* VALID ADDRESS, YES            */
@RF00217 TM    IOBOBR(IOSBPTR),B'00000001'                         0235
         BNO   @RF00235                                            0235
         CLI   IOSCOD(IOSBPTR),X'7E'                               0235
         BE    @RF00235                                            0235
         CLI   SDRINDEX(EWAPTR),0                                  0235
         BNE   @RF00235                                            0235
*         DO;                       /* FIND DEV DEPEN DATA           */
*           UCBSHOB3=UCBSHOB3&&UCBSHOB3;/* ZERO OUT UCB EXTENSION    */
         XC    UCBSHOB3(3,EWAPTR),UCBSHOB3(EWAPTR)                 0237
*           IF COMMAND=LFORMAT×     /* LOAD FORMAT COMMAND OR Y02870 */
*               COMMAND=SCAN×       /* SCAN COMMAND OR Y02870        */
*               COMMAND=LLMFORM×    /* LD LIN MK COMMAND OR Y02870   */
*               COMMAND=LPMFORM×    /* LD PAGE MK COMMAND OR Y02870  */
*               COMMAND=EJECT       /* EJECT COMMAND Y02870          */
*             THEN                  /* YES, SET UP DATA BYTES Y02870 */
         CLI   COMMAND(CCWREG),X'53'                               0238
         BE    @RT00238                                            0238
         CLI   COMMAND(CCWREG),X'73'                               0238
         BE    @RT00238                                            0238
         CLI   COMMAND(CCWREG),X'51'                               0238
         BE    @RT00238                                            0238
         CLI   COMMAND(CCWREG),X'55'                               0238
         BE    @RT00238                                            0238
         CLI   COMMAND(CCWREG),X'63'                               0238
         BNE   @RF00238                                            0238
@RT00238 DS    0H                                                  0239
*/*                                                           Y02870 */
*/* OBRDATA SEGMENT- DATA IS MOVED FROM DATA AREA TO UCB EXT  Y02870 */
*/* EACH REAL DATA ADDR IN CCW IS TRANSLATED TO VIRTUAL ADDR  Y02870 */
*/* BEFORE DATA IS MOVED                                      Y02870 */
*/*                                                           Y02870 */
*                                                                  0239
*             DO;                   /* MOVE OBR INFORMATION Y02870   */
*               EWCSAVE=IOSBPTR;    /* SAVE IOSB PTR Y02870          */
         ST    IOSBPTR,EWCSAVE(,EWAPTR)                            0240
*               IOSBPTR=DATADDR+ONE;/* SET UP REAL ADDR Y02870       */
         LA    IOSBPTR,1                                           0241
         L     @15,DATADDR-1(,CCWREG)                              0241
         LA    @15,0(,@15)                                         0241
         ALR   IOSBPTR,@15                                         0241
*               CALL TRNRTN;        /* CALL IOS TRANSLATE RTN Y02870 */
         L     @12,CVTPTR                                          0242
         L     @15,CVTPTRV(,@12)                                   0242
         BALR  @14,@15                                             0242
*               IOSBPTR=IOSBPTR-ONE;/* ADJUST VIRTUAL ADDR Y02870    */
         BCTR  IOSBPTR,0                                           0243
*               WK1PTR=IOSBPTR;     /* SAVE IDA LIST POINTER Y02870  */
         LR    WK1PTR,IOSBPTR                                      0244
*               WK2PTR=IOSBPTR;     /* SAVE OBRDATA ADDRESS YM2514   */
         LR    WK2PTR,IOSBPTR                                      0245
*               IOSBPTR=EWCSAVE;    /* RESTORE IOSB PTR Y02870       */
         L     IOSBPTR,EWCSAVE(,EWAPTR)                            0246
*               IF IDA=ON           /* INDIRECT ADDR SPECIFIED Y02870*/
*                 THEN              /* YES,TRANSLATE IDA LIST Y02870 */
         TM    IDA(CCWREG),B'00000100'                             0247
         BNO   @RF00247                                            0247
*                 DO WKPTR=1 TO 2;  /* TRANSLATE EACH ADDR Y02870    */
         LA    WKPTR,1                                             0248
@DL00248 DS    0H                                                  0249
*                   IOSBPTR=IDALIST(WRPTR)+ONE;/* ADJUST REAL      0249
*                                      ADDRY02870                    */
         L     @15,WRPTR                                           0249
         SLA   @15,2                                               0249
         LA    IOSBPTR,1                                           0249
         AL    @15,@CF01567                                        0249
         AL    IOSBPTR,IDALIST(@15,WK1PTR)                         0249
*                   CALL TRNRTN;    /* CALL IOS TRANSLATE RTN Y02870 */
         L     @12,CVTPTR                                          0250
         L     @15,CVTPTRV(,@12)                                   0250
         BALR  @14,@15                                             0250
*                   WK2PTR=IOSBPTR-ONE;/* ADJUST VTL ADDR Y02870     */
         LR    WK2PTR,IOSBPTR                                      0251
         BCTR  WK2PTR,0                                            0251
*                   IF WKPTR=1      /* FIRST ADDR IN LIST Y02870     */
*                     THEN          /* YES COMPUTE LENGTH Y02870     */
         C     WKPTR,@CF00047                                      0252
         BNE   @RF00252                                            0252
*                     DO;           /* Y02870                        */
*                       DATALNG=ABS(WK2PTR//4096-4096);/* Y02870     */
         LR    @10,WK2PTR                                          0254
         SRDA  @10,32                                              0254
         D     @10,@CF01546                                        0254
         SL    @10,@CF01546                                        0254
         LPR   @10,@10                                             0254
         STH   @10,DATALNG(,EWAPTR)                                0254
*                       UCBSHOB3=OBRDATA(1:DATALNG);/* MOVE OBR    0255
*                                      INFOY02870                    */
         MVI   UCBSHOB3+1(EWAPTR),C' '                             0255
         MVI   UCBSHOB3+2(EWAPTR),C' '                             0255
         LH    @15,DATALNG(,EWAPTR)                                0255
         BCTR  @15,0                                               0255
         EX    @15,@SM01568                                        0255
*                     END;          /* Y02870                        */
*                   ELSE            /* Y02870                        */
*                     UCBSHOB3(DATALNG+1:3)=OBRDATA(1:3-DATALNG);  0257
         B     @RC00252                                            0257
@RF00252 LH    @15,DATALNG(,EWAPTR)                                0257
         ALR   @15,EWAPTR                                          0257
         LA    @12,2                                               0257
         SH    @12,DATALNG(,EWAPTR)                                0257
         EX    @12,@SM01570                                        0257
*                 END;              /* Y02870                        */
@RC00252 AL    WKPTR,@CF00047                                      0258
         C     WKPTR,@CF00065                                      0258
         BNH   @DL00248                                            0258
*               ELSE                /* Y02870                        */
*                 UCBSHOB3=OBRDATA(1:3);/* MOVE OBR INFOY02870       */
         B     @RC00247                                            0259
@RF00247 MVC   UCBSHOB3(3,EWAPTR),OBRDATA(WK2PTR)                  0259
*               IF COMMAND=LFORMAT  /* LOAD FORMAT COMMAND           */
*                 THEN              /* YES, SETUP 3-BYTES            */
@RC00247 CLI   COMMAND(CCWREG),X'53'                               0260
         BNE   @RF00260                                            0260
*                 EWCDATA3=UCBSHOB3;/* DEVICE DEPENDENT DATA Y02870  */
         MVC   EWCDATA3(3,EWAPTR),UCBSHOB3(EWAPTR)                 0261
*               ELSE                                               0262
*                 ;                 /* NULL ELSE                     */
@RF00260 DS    0H                                                  0263
*               IF COMMAND=SCAN×    /* SCAN COMMAND OR               */
*                   COMMAND=LLMFORM /* LD LIN MK FORMAT COMMAND      */
*                 THEN              /* YES, SETUP 2-BYTES            */
         CLI   COMMAND(CCWREG),X'73'                               0263
         BE    @RT00263                                            0263
         CLI   COMMAND(CCWREG),X'51'                               0263
         BNE   @RF00263                                            0263
@RT00263 DS    0H                                                  0264
*                 EWCDATA2=UCBSHOB2;/* DEVICE DEPENDENT DATA Y02870  */
         MVC   EWCDATA2(2,EWAPTR),UCBSHOB2(EWAPTR)                 0264
*               ELSE                                               0265
*                 ;                 /* NULL ELSE                     */
@RF00263 DS    0H                                                  0266
*               IF COMMAND=LPMFORM× /* LD PG MK FORMAT COMMAND OR    */
*                   COMMAND=EJECT   /* EJECT COMMAND                 */
*                 THEN              /* YES, SETUP 1-BYTE             */
         CLI   COMMAND(CCWREG),X'55'                               0266
         BE    @RT00266                                            0266
         CLI   COMMAND(CCWREG),X'63'                               0266
         BNE   @RF00266                                            0266
@RT00266 DS    0H                                                  0267
*                 EWCDATA1=UCBSHOB1;/* DEVICE DEPENDENT DATA Y02870  */
         MVC   EWCDATA1(1,EWAPTR),UCBSHOB1(EWAPTR)                 0267
*               ELSE                                               0268
*                 ;                 /* NULL ELSE                     */
@RF00266 DS    0H                                                  0269
*             END;                  /* Y02870                        */
*           ELSE                                                   0270
*             ;                     /* NULL ELSE Y02870              */
@RF00238 DS    0H                                                  0271
*         END;                                                     0271
*       ELSE                                                       0272
*         ;                         /* NULL ELSE                     */
@RF00235 DS    0H                                                  0273
*     END;                                                         0273
*   ELSE                                                           0274
*     ;                             /* NULL ELSE                     */
@RF00196 DS    0H                                                  0275
*EXITHERE:                          /* CODE TO TAKE RIGHT EXIT       */
*   IF IOBPMS=ON                    /* PERMANENT ERROR YM2514        */
*     THEN                          /* YM2514                        */
EXITHERE TM    IOBPMS(IOSBPTR),B'00000100'                         0275
         BNO   @RF00275                                            0275
*     IOSERR=BOF;                   /* ERP NO LONGER IN CONTROL    0276
*                                      YM2514                        */
         NI    IOSERR(IOSBPTR),B'11011111'                         0276
*   ELSE                                                           0277
*     ;                             /* NULL ELSE YM2514              */
@RF00275 DS    0H                                                  0278
*   IF IOBPMS=ON×                   /* WTO ROUTINE NEEDED            */
*       IOBIRM=ON                   /*                               */
*     THEN                          /* YES,                          */
         TM    IOBPMS(IOSBPTR),B'00000100'                         0278
         BO    @RT00278                                            0278
         TM    IOBIRM(EWAPTR),B'00001000'                          0278
         BNO   @RF00278                                            0278
@RT00278 DS    0H                                                  0279
*     DO;                           /*                               */
*       XCTLPR=WTORTN;              /* LOAD RTN NUMBER FOR XCTL      */
         LA    XCTLPR,253                                          0280
*       XCTLRG=CVTXTLER;            /* LOAD XCTL ADDR FOR XCTL       */
         L     @12,CVTPTR                                          0281
         L     XCTLRG,CVTXTLER(,@12)                               0281
*       GO TO XCTL;                 /* BRANCH TO XCTL ROUTINE        */
         L     @15,CVTPTR                                          0282
         L     @15,CVTXTLER(,@15)                                  0282
         BR    @15                                                 0282
*     END;                          /*                               */
*   ELSE                                                           0284
*     ;                             /* NULL ELSE                     */
@RF00278 DS    0H                                                  0285
*   IF IOBOBR=ON                    /* NO MSG BUT OBR                */
*     THEN                          /* YES,                          */
         TM    IOBOBR(IOSBPTR),B'00000001'                         0285
         BNO   @RF00285                                            0285
*     DO;                                                          0286
*       XCTLPR=LOGOBR;              /* LD OBR RTN NO FOR XCTL        */
         LA    XCTLPR,256                                          0287
*       XCTLRG=CVTXTLER;            /* LOAD XCTL ADDR FOR XCTL       */
         L     @12,CVTPTR                                          0288
         L     XCTLRG,CVTXTLER(,@12)                               0288
*       GO TO XCTL;                 /* BRANCH TO XCTL ROUTINE        */
         L     @15,CVTPTR                                          0289
         L     @15,CVTXTLER(,@15)                                  0289
         BR    @15                                                 0289
*     END;                                                         0290
*   ELSE                                                           0291
*     ;                             /* NULL ELSE                     */
@RF00285 DS    0H                                                  0292
*   GENERATE;                                                      0292
ERREXCP  EQU   15                      ERROR EXCP
RETURN   EQU   3                       RETURN
         SVC   ERREXCP                 ERROR EXCP
         SVC   RETURN                  RETURN
*   END ER3886B                                                    0293
*                                                                  0293
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSUT5  (TOPSEGMT)                                       */
*/*%INCLUDE SYSUT5  (PROLOGUE)                                       */
*/*%INCLUDE SYSUT5  (DECLARES)                                       */
*/*%INCLUDE SYSUT5  (DCLREG  )                                       */
*/*%INCLUDE SYSUT5  (DCLCONST)                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IECDIOSB)                                       */
*/*%INCLUDE SYSLIB  (EWAMAP  )                                       */
*/*%INCLUDE SYSUT5  (IOBUCBOL)                                       */
*/*%INCLUDE SYSUT5  (UNITCHCK)                                       */
*/*%INCLUDE SYSUT5  (UNITCHK2)                                       */
*/*%INCLUDE SYSUT5  (EQUIPCHK)                                       */
*/*%INCLUDE SYSUT5  (INCPLSCN)                                       */
*/*%INCLUDE SYSUT5  (INTREQ  )                                       */
*/*%INCLUDE SYSUT5  (BUSOUT  )                                       */
*/*%INCLUDE SYSUT5  (EXITCODE)                                       */
*/*%INCLUDE SYSUT5  (SDROBRCK)                                       */
*/*%INCLUDE SYSUT5  (OBRDATA )                                       */
*                                                                  0293
*       ;                                                          0293
@EL00001 DS    0H                                                  0293
@EF00001 DS    0H                                                  0293
@ER00001 BR    @14                                                 0293
@DATA    DS    0H
@CH00067 DC    H'10'
@SM01568 MVC   UCBSHOB3(0,EWAPTR),OBRDATA(WK2PTR)
@SM01570 MVC   UCBSHOB3(0,@15),OBRDATA(WK2PTR)
         DS    0F
         DS    0F
@CF00047 DC    F'1'
@CF00065 DC    F'2'
@CF00052 DC    F'8'
@CF00062 DC    F'15'
@CF00098 DC    F'42'
@CF00102 DC    F'51'
@CF00100 DC    F'62'
@CF00105 DC    F'92'
@CF00126 DC    F'240'
@CF00063 DC    F'256'
@CF01546 DC    F'4096'
@CF01567 DC    F'-4'
@CF01566 DC    XL4'0000FFFF'
@CF00086 DC    XL4'FFFF'
         DS    0D
WRPTR    DS    F
MTAREA   DS    CL100
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
IOSBPTR  EQU   @01
WK1PTR   EQU   @02
STTPTR   EQU   @03
WK2PTR   EQU   @04
CCWREG   EQU   @05
UCBPTR   EQU   @07
EWAPTR   EQU   @08
WKPTR    EQU   @09
XCTLPR   EQU   @13
XCTLRG   EQU   @14
BASREG   EQU   @06
CVTPTR   EQU   16
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBSTI   EQU   UCBCMEXT+1
UCBATI   EQU   UCBCMEXT+3
@NM00004 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
CVTMAP   EQU   0
CVTXTLER EQU   CVTMAP+44
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTSTB   EQU   CVTMAP+112
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTPTRV  EQU   CVTMAP+288
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IOSB     EQU   0
IOSFLA   EQU   IOSB
IOSACHN  EQU   IOSFLA
IOSERR   EQU   IOSFLA
IOSEX    EQU   IOSFLA
IOSFLB   EQU   IOSB+1
IOSFLC   EQU   IOSB+2
IOSDVALT EQU   IOSFLC
IOSPKEY  EQU   IOSB+12
IOSCOD   EQU   IOSB+13
IOSOPT   EQU   IOSB+14
IOSOPT2  EQU   IOSB+15
IOSUCB   EQU   IOSB+16
@NM00008 EQU   IOSB+20
IOSCC    EQU   @NM00008
IOSCSW   EQU   @NM00008+1
IOSCSWCA EQU   IOSCSW
IOSTATUS EQU   IOSCSW+3
IOSSNS   EQU   IOSB+42
IOSIPIB  EQU   IOSB+44
IOSERP   EQU   IOSB+52
IOSRST   EQU   IOSB+72
IOSPATH  EQU   IOSB+86
IOSCHN   EQU   IOSPATH
IOSCKEY  EQU   IOSB+89
IOSEEKA  EQU   IOSB+100
IOSCCHH  EQU   IOSEEKA+3
IOSSKHH  EQU   IOSCCHH+2
EWA      EQU   0
EWAHDR   EQU   EWA
EWAFLAGS EQU   EWA+4
EWAFLG1  EQU   EWAFLAGS
EWASCCD  EQU   EWAFLG1
EWASCC3  EQU   EWASCCD
EWAFLG2  EQU   EWAFLAGS+1
EWAFLG3  EQU   EWAFLAGS+2
EWASNSCT EQU   EWAFLAGS+3
EWACNTRS EQU   EWA+10
EWACNTR2 EQU   EWACNTRS+1
EWACNTR3 EQU   EWACNTRS+2
EWAERPIB EQU   EWA+16
EWARGFG1 EQU   EWAERPIB+4
EWARGFG2 EQU   EWAERPIB+5
EWAXCSW1 EQU   EWAERPIB+6
EWAXCSW2 EQU   EWAERPIB+7
EWADCNT  EQU   EWA+28
EWADDISP EQU   EWA+29
EWAIERP  EQU   EWA+32
STUCBPTR EQU   0
STATTAB  EQU   0
SDRAFLGS EQU   STATTAB
STATELEM EQU   STATTAB+2
FAILCCW  EQU   0
COMMAND  EQU   FAILCCW
DATADDR  EQU   FAILCCW+1
CCWFLAG  EQU   FAILCCW+4
IDA      EQU   CCWFLAG
OBRDATA  EQU   0
IDALIST  EQU   0
XCTL     EQU   0
TRNRTN   EQU   0
UCBBGN   EQU   0
IOSSENS1 EQU   IOSSNS+1
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00003 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBOBS09 EQU   UCBDEV
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
IOSATTSC EQU   IOSIPIB
IOSWTOWA EQU   IOSIPIB
IOSPCISC EQU   IOSIPIB
EWADDIOS EQU   EWAIERP
IOBSENS  EQU   IOSSNS
IOBS0B0  EQU   IOBSENS
IOBS0B1  EQU   IOBSENS
IOBS0B2  EQU   IOBSENS
IOBS0B3  EQU   IOBSENS
IOBS0B4  EQU   IOBSENS
IOBS0B5  EQU   IOBSENS
IOBS0B6  EQU   IOBSENS
IOBS0B7  EQU   IOBSENS
IOBS1B0  EQU   IOBSENS+1
IOBS1B1  EQU   IOBSENS+1
IOBS1B2  EQU   IOBSENS+1
IOBS1B3  EQU   IOBSENS+1
IOBS1B4  EQU   IOBSENS+1
IOBS1B5  EQU   IOBSENS+1
IOBS1B6  EQU   IOBSENS+1
IOBS1B7  EQU   IOBSENS+1
IOBDDFLG EQU   IOSFLB
IOBPMS   EQU   IOBDDFLG
IOBOBR   EQU   IOBDDFLG
IOBCSWXX EQU   IOSCSW
STBYT1   EQU   IOBCSWXX+3
STBYT1B5 EQU   STBYT1
STBYT2   EQU   IOBCSWXX+4
IOBCNT   EQU   EWACNTR3
IOBEQC   EQU   IOBCNT
IOBBOC   EQU   IOBCNT
IOBICS   EQU   IOBCNT
SIOC3886 EQU   IOSCC
IOCC3886 EQU   SIOC3886
EWAFLG   EQU   EWAFLG3
IOBIRM   EQU   EWAFLG
IOBRSTRT EQU   EWAFLG
UCBFRIDS EQU   UCBXTADR
EWC      EQU   EWAIERP
SYSBYTES EQU   EWC
EWCSNSB3 EQU   SYSBYTES+3
EWCOBR   EQU   EWC+8
EWCFRID  EQU   EWCOBR
EWCDATA  EQU   EWCOBR+4
EWCSAVE  EQU   EWC+16
DATALNG  EQU   EWC+20
EWCWORK  EQU   EWC+22
UCBSHOB3 EQU   EWCWORK
UCBSHOB2 EQU   UCBSHOB3
UCBSHOB1 EQU   UCBSHOB3
EWCSNS3  EQU   EWCSNSB3
SDRINDEX EQU   EWACNTR2
EWCDATA3 EQU   EWCDATA
EWCDATA2 EQU   EWCDATA
EWCDATA1 EQU   EWCDATA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00042 EQU   SYSBYTES+4
@NM00041 EQU   SYSBYTES
@NM00040 EQU   EWAFLG
@NM00039 EQU   EWAFLG
@NM00038 EQU   EWAFLG
@NM00037 EQU   SIOC3886
@NM00036 EQU   SIOC3886
@NM00035 EQU   IOBCNT
@NM00034 EQU   IOBCNT
STBYT2B7 EQU   STBYT2
STBYT2B6 EQU   STBYT2
STBYT2B5 EQU   STBYT2
STBYT2B4 EQU   STBYT2
STBYT2B3 EQU   STBYT2
STBYT2B2 EQU   STBYT2
STBYT2B1 EQU   STBYT2
@NM00033 EQU   STBYT2
STBYT1B7 EQU   STBYT1
STBYT1B6 EQU   STBYT1
@NM00032 EQU   STBYT1
@NM00031 EQU   STBYT1
STBYT1B2 EQU   STBYT1
STBYT1B1 EQU   STBYT1
STBYT1B0 EQU   STBYT1
CMDADR   EQU   IOBCSWXX
@NM00030 EQU   IOBDDFLG
@NM00029 EQU   IOBDDFLG
@NM00028 EQU   IOBDDFLG
EWAEND   EQU   EWADDIOS+71
EWASCSW  EQU   EWADDIOS+64
EWASNS   EQU   EWADDIOS
IOSPCIWA EQU   IOSPCISC+44
IOSPCIRS EQU   IOSPCISC+8
@NM00013 EQU   IOSPCISC+4
@NM00012 EQU   IOSPCISC
IOSWRNDR EQU   IOSWTOWA+4
IOSWTOPT EQU   IOSWTOWA+3
IOSWTOCP EQU   IOSWTOWA+2
IOSWTOCH EQU   IOSWTOWA
IOSATTWA EQU   IOSATTSC+40
@NM00011 EQU   IOSATTSC+24
IOSATTSN EQU   IOSATTSC
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTRV612 EQU   CVTS01+664
CVTRV611 EQU   CVTS01+660
CVTRV610 EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTRV608 EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTRV603 EQU   CVTS01+628
CVTRV602 EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTRV629 EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTRV301 EQU   CVTS01+475
CVTRV300 EQU   CVTS01+474
CVTRV299 EQU   CVTS01+473
CVTRV298 EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTRV519 EQU   CVTS01+92
CVTRV327 EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBCTCF1 EQU   UCBOBS08+4
UCBCTCAD EQU   UCBOBS08
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00003
UCBSKPFG EQU   @NM00003
UCBRIPND EQU   @NM00003
UCBRTIAC EQU   @NM00003
UCBRSV79 EQU   @NM00003
UCBRSV78 EQU   @NM00003
UCBRSV77 EQU   @NM00003
UCBOLTEP EQU   @NM00003
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBRV038 EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00002 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRV028 EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
@NM00027 EQU   FAILCCW+6
@NM00026 EQU   CCWFLAG
@NM00025 EQU   CCWFLAG
@NM00024 EQU   STATTAB+22
@NM00023 EQU   STATTAB+1
EWACPU   EQU   EWA+27
@NM00022 EQU   EWA+26
EWACHA   EQU   EWA+24
EWACSEQ  EQU   EWAXCSW2
EWACDIN  EQU   EWAXCSW2
@NM00021 EQU   EWAXCSW2
EWACTEC  EQU   EWAXCSW2
EWACDAV  EQU   EWAXCSW1
EWACCHV  EQU   EWAXCSW1
EWACCMD  EQU   EWAXCSW1
EWACUNS  EQU   EWAXCSW1
EWACSQV  EQU   EWAXCSW1
@NM00020 EQU   EWAXCSW1
EWACITF  EQU   EWAXCSW1
@NM00019 EQU   EWARGFG2
EWACCUE  EQU   EWARGFG2
EWACSTG  EQU   EWARGFG2
EWACSCU  EQU   EWARGFG2
EWACCHA  EQU   EWARGFG2
EWACCPU  EQU   EWARGFG2
EWANORTY EQU   EWARGFG1
EWACCNT  EQU   EWARGFG1
EWACSNS  EQU   EWARGFG1
@NM00018 EQU   EWARGFG1
EWACHIO  EQU   EWARGFG1
EWACTIO  EQU   EWARGFG1
EWACINT  EQU   EWARGFG1
EWACSIO  EQU   EWARGFG1
EWAUCB   EQU   EWAERPIB+1
@NM00017 EQU   EWAERPIB
EWASTUP  EQU   EWA+14
EWACNTR4 EQU   EWACNTRS+3
EWACNTR1 EQU   EWACNTRS
EWASSTAT EQU   EWA+8
EWASCTMX EQU   EWASNSCT
@NM00016 EQU   EWASNSCT
@NM00015 EQU   EWAFLG2
EWADIR   EQU   EWAFLG2
EWACOVF  EQU   EWAFLG2
EWAWTEMP EQU   EWAFLG2
EWAMDR   EQU   EWAFLG2
EWABDSNS EQU   EWAFLG1
EWADDMSG EQU   EWAFLG1
EWASCC1  EQU   EWASCC3
EWASCC2  EQU   EWASCC3
@NM00014 EQU   EWAFLG1
EWASLIS  EQU   EWAFLG1
EWAEXT   EQU   EWAHDR
IOSEND   EQU   IOSB+108
IOSSKR   EQU   IOSEEKA+7
IOSSKH2  EQU   IOSSKHH+1
IOSSKH1  EQU   IOSSKHH
IOSSKCC  EQU   IOSCCHH
IOSSKBB  EQU   IOSEEKA+1
IOSSKM   EQU   IOSEEKA
IOSEEK   EQU   IOSB+92
IOSMDM   EQU   IOSB+91
IOSMDB   EQU   IOSB+90
IOSCKEY7 EQU   IOSCKEY
IOSCKEY6 EQU   IOSCKEY
IOSCKEY5 EQU   IOSCKEY
IOSCKEY4 EQU   IOSCKEY
@NM00010 EQU   IOSCKEY
IOSFMSK  EQU   IOSB+88
IOSCUDEV EQU   IOSPATH+1
@NM00009 EQU   IOSCHN
IOSPATH3 EQU   IOSCHN
IOSPATH2 EQU   IOSCHN
IOSEXP   EQU   IOSCHN
IOSGDP   EQU   IOSCHN
IOSAFF   EQU   IOSB+85
IOSRSS1B EQU   IOSB+84
IOSDSID  EQU   IOSB+80
IOSVST   EQU   IOSB+76
IOSDIE   EQU   IOSB+68
IOSABN   EQU   IOSB+64
IOSNRM   EQU   IOSB+60
IOSPCI   EQU   IOSB+56
IOSPCHN  EQU   IOSB+48
IOSAPMSK EQU   IOSB+40
IOSRES4A EQU   IOSB+36
IOSUSE   EQU   IOSB+32
IOSSRB   EQU   IOSB+28
IOSCSWRC EQU   IOSCSW+5
IOSTSB   EQU   IOSTATUS+1
IOSTSA   EQU   IOSTATUS
IOSOPT2X EQU   IOSOPT2
IOSHTP   EQU   IOSOPT2
IOSRELSE EQU   IOSOPT
IOSAPR   EQU   IOSOPT
IOSTSLL  EQU   IOSOPT
IOSNERP  EQU   IOSOPT
IOSPSLL  EQU   IOSOPT
IOSQISCE EQU   IOSOPT
IOSDEP   EQU   IOSOPT
IOSBYP   EQU   IOSOPT
IOSPKY7  EQU   IOSPKEY
IOSPGDPX EQU   IOSPKEY
IOSIDR   EQU   IOSPKEY
IOSLCL   EQU   IOSPKEY
@NM00007 EQU   IOSPKEY
IOSPGAD  EQU   IOSB+8
IOSASID  EQU   IOSB+6
IOSPRLVL EQU   IOSB+5
IOSDVRID EQU   IOSB+4
IOSPROC  EQU   IOSB+3
IOSFLC7  EQU   IOSFLC
IOSFLC6  EQU   IOSFLC
IOSGLC5  EQU   IOSFLC
IOSFLC4  EQU   IOSFLC
IOSFLC3  EQU   IOSFLC
IOSFLC2  EQU   IOSFLC
IOSVERIF EQU   IOSDVALT
IOSDVMNT EQU   IOSFLC
IOSLOG   EQU   IOSFLB
IOSBDCST EQU   IOSFLB
IOSMSG   EQU   IOSFLB
IOSFLB4  EQU   IOSFLB
IOSFLB3  EQU   IOSFLB
IOSFLB2  EQU   IOSFLB
IOSFLB1  EQU   IOSFLB
IOSDIESE EQU   IOSFLB
IOSIOSB  EQU   IOSFLA
IOSFLA6  EQU   IOSFLA
IOSSMDB  EQU   IOSFLA
IOSSMDA  EQU   IOSFLA
IOSCCHN  EQU   IOSACHN
IOSDCHN  EQU   IOSACHN
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00006 EQU   CVTFIX+248
@NM00005 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRSV37 EQU   CVTDMSR
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBRSV50 EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBRV064 EQU   UCB3540X+6
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBRV034 EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBRV032 EQU   UCBFLP1
UCBRV031 EQU   UCBFLP1
UCBRV030 EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00004
UCBHALI  EQU   @NM00004
UCBRSV09 EQU   @NM00004
UCBRSV08 EQU   @NM00004
UCBRSV07 EQU   @NM00004
UCBRSV06 EQU   @NM00004
UCBRSV05 EQU   @NM00004
UCBRSV04 EQU   @NM00004
UCBDTI   EQU   UCBCMEXT+2
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBNAME  EQU   UCBOB+13
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBFLB7  EQU   UCBFLB
UCBFLB6  EQU   UCBFLB
UCBFLB5  EQU   UCBFLB
UCBFLB4  EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBRSV02 EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBRV002 EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00001 EQU   UCB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00123 EQU   @RC00121
@RC00132 EQU   @RC00121
@RC00149 EQU   @RC00144
@RC00169 EQU   @RC00168
@RC00183 EQU   @RC00180
@ENDDATA EQU   *
         END   ER3886B,(C'PLS1101',0603,74213)
