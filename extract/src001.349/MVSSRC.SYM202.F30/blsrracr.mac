RACR     TITLE 'BLSRRACR--DESCRIBE SYSTEM/370 REAL ADDRESS SPACE       *
                        '
*/* CHANGE ACTIVITY -------------------------------------------------*/
*/*   THIS MODULE WAS WRITTEN FOR @G57LPRW                           */
*/*   THIS MODULE HAS BEEN CHANGED BY APAR OZ33007-ILG       @ZA33007*/
*/*------------------------------------------------------------------*/
BLSRRACR CSECT ,                                                01S0002
@MAINENT DS    0H                                               01S0002
         USING *,@15                                            01S0002
         B     @PROLOG                                          01S0002
         DC    AL1(16)                                          01S0002
         DC    C'BLSRRACR  78.172'                              01S0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0002
         BALR  @12,0                                            01S0002
@PSTART  DS    0H                                               01S0002
         USING @PSTART,@12                                      01S0002
         L     @00,@SIZDATD                                     01S0002
         BLSUALLS R,LV=(0)
         LR    @11,@01                                          01S0002
         LA    @10,4095(,@11)                                   01S0002
         USING @DATD,@11                                        01S0002
         USING @DATD+4095,@10                                   01S0002
         ST    @13,@SA00001+4                                   01S0002
         LM    @00,@01,20(@13)                                  01S0002
         ST    @11,8(,@13)                                      01S0002
         LR    @13,@11                                          01S0002
         MVC   @PC00001(8),0(@01)                               01S0002
*   IF ZZ6DFDU=ZZZ0×ZZ6DFAB=ZZZ0×ZZ6DFST=ZZZ0 THEN/* NOT SUPPORTED   */
*                                                               01S0141
         L     @14,ZZ2AZZ6P(,R9)                                01S0141
         TM    ZZ6DFDU(@14),B'01011000'                         01S0141
         BO    @RF00141                                         01S0141
*     /***************************************************************/
*     /*                                                             */
*     /* REAL STORAGE NOT SUPPORTED                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0142
*     DO;                           /* REAL STORAGE NOT SUPPORTED    */
*       RETC=ZZZFLAGS;              /* RETURN CODE                   */
         LA    RETC,12                                          01S0143
*       GO TO EXIT;                 /* COMMON EXIT PATH              */
         B     EXIT                                             01S0144
*     END;                          /* REAL STORAGE NOT SUPORTED     */
*   RETC=ZZZFLAGI;                  /* RETURN CODE                   */
@RF00141 SLR   RETC,RETC                                        01S0146
         SPACE 1
*                                                               01S0147
*/*------------------------------------------------------------------*/
*/* LOCATE THE PREFIXED STORAGE AREA FOR THE DESIGNATED CPU          */
*/*------------------------------------------------------------------*/
*                                                               01S0147
*   ESAUSYM='PSA';                  /* SYMBOL                        */
         MVI   ESAUSYM+3,C' '                                   01S0147
         MVC   ESAUSYM+4(27),ESAUSYM+3                          01S0147
         MVC   ESAUSYM(3),@CC00982                              01S0147
*   RABAPTR=ADDR(RAPA);             /* ->RABA (ALIAS FOR RAPA)       */
*                                                               01S0148
         L     RABAPTR,@PC00001+4                               01S0148
*    DO;/*BLRCNVUC(RABAAS1) FROM(UNSIGNED BINARY)TO(CHARACTER)SET(SYMB)
*EMARK(CPU ADDRESS)*/                                           01S0149
*      /*CPU ADDRESS*/                                          01S0150
*      CVD(RABAAS1,PACKED);/*BINARY=>PACKED DECIMAL*/           01S0150
         L     @14,RABAAS1(,RABAPTR)                            01S0150
         CVD   @14,PACKED                                       01S0150
*      UNPK(SYMB,PACKED);/*PACKED DECIMAL=>ZONED DECIMAL*/      01S0151
         UNPK  SYMB(2),PACKED(8)                                01S0151
*      SYMB(LENGTH(SYMB):LENGTH(SYMB))=SYMB(LENGTH(SYMB):LENGTH(SYMB))×
*0';/*ZONED DECIMAL=>EBCDIC*/                                   01S0152
         OI    SYMB+1,C'0'                                      01S0152
*    END;/*BLRCNVUC(RABAAS1) FROM(UNSIGNED BINARY)TO(CHARACTER)SET(SYMB
*REMARK(CPU ADDRESS)*/                                          01S0153
*   ESAUDT=DTPSA;                   /* DATA TYPE                     */
         MVC   ESAUDT(34),DTPSA                                 01S0154
*   CALL BLSRESGU(ZZ2,ESAU);        /* LOCATE THE PSA FOR THE CPU    */
         ST    R9,@AL00001                                      01S0155
         LA    @14,ESAU                                         01S0155
         ST    @14,@AL00001+4                                   01S0155
         L     @08,ZZ2RVTP(,R9)                                 01S0155
         L     @15,RVTESGUP(,@08)                               01S0155
         LA    @01,@AL00001                                     01S0155
         BALR  @14,@15                                          01S0155
*   IF RF>ZZZFLAGE THEN             /* BLSRESGU DETECTED AN ERROR    */
*                                                               01S0156
         CH    RF,@CH00055                                      01S0156
         BNH   @RF00156                                         01S0156
*     /***************************************************************/
*     /*                                                             */
*     /* BLSRESGU DETECTED AN ERROR                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0157
*     DO;                           /* BLSRESGU DETECTED AN ERROR    */
*       RETC=RF;                    /* RETURN CODE                   */
         LR    RETC,RF                                          01S0158
*       GO TO EXIT;                 /* COMMON EXIT PATH              */
         B     EXIT                                             01S0159
*     END;                          /* BLSRESGU DETECTED AN ERROR    */
*   PSAPTR=ESAULAD;                 /* ->PSA FOR THE SPECIFIED CPU   */
@RF00156 L     PSAPTR,ESAULAD                                   01S0161
         SPACE 1
*                                                               01S0162
*/*------------------------------------------------------------------*/
*/* MAP REAL STORAGE SECTION 1--THE REAL PSA                         */
*/*------------------------------------------------------------------*/
*                                                               01S0162
*   RAAUAS=DATSA;                   /* ABSOLUTE ADDRESS SPACE        */
         MVC   RAAUAS(16),DATSA                                 01S0162
*   RAAUFAD=PSAPTR;                 /* ->REAL PSA (ABSOLUTE STORAGE) */
         ST    PSAPTR,RAAUFAD                                   01S0163
*   CALL BLSRRAGE(ZZ2,RAAU);        /* LOCATE REAL PSA               */
         ST    R9,@AL00001                                      01S0164
         LA    @14,RAAU                                         01S0164
         ST    @14,@AL00001+4                                   01S0164
         L     @08,ZZ2RVTP(,R9)                                 01S0164
         L     @15,RVTRAGEP(,@08)                               01S0164
         LA    @01,@AL00001                                     01S0164
         BALR  @14,@15                                          01S0164
*   IF RF^=ZZZFLAGI THEN            /* BLSRRAGE DETECTED AN ERROR    */
*                                                               01S0165
         LTR   RF,RF                                            01S0165
         BZ    @RF00165                                         01S0165
*     /***************************************************************/
*     /*                                                             */
*     /* BLSRRAGE DETECTED AN ERROR                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0166
*     DO;                           /* BLSRRAGE DETECTED AN ERROR    */
*       RETC=RF;                    /* RETURN CODE                   */
         LR    RETC,RF                                          01S0167
*       GO TO EXIT;                 /* COMMON EXIT PATH              */
         B     EXIT                                             01S0168
*     END;                          /* BLSRRAGE DETECTED AN ERROR    */
*   RAAUAS=RABAAS;                  /* REAL ADDRESS SPACE            */
@RF00165 MVC   RAAUAS(16),RABAAS(RABAPTR)                       01S0170
*   RAAUFAD=ZZZLENP4-1;             /* ->FINAL BYTE DESCRIBED        */
         MVC   RAAUFAD(4),@CF01163                              01S0171
*   RAAUUSE=1;                      /* ONE ENTRY IN USE              */
         LA    @14,1                                            01S0172
         STH   @14,RAAUUSE                                      01S0172
*   RAAURIA(1)=ZZZZNULL;            /* ->FIRST BYTE DESCRIBED        */
         SLR   @08,@08                                          01S0173
         ST    @08,RAAURIA                                      01S0173
*   RAAURNM(1)=1;                   /* ONE RECORD                    */
         STH   @14,RAAURNM                                      01S0174
*   RAAURFP(1)=ZZZ1;                /* PREFIXED                      */
         OI    RAAURFP,B'01000000'                              01S0175
*   CALL BLSRRAAR(ZZ2,RAAU);        /* DESCRIBE REAL PSA             */
         ST    R9,@AL00001                                      01S0176
         LA    @14,RAAU                                         01S0176
         ST    @14,@AL00001+4                                   01S0176
         L     @08,ZZ2RVTP(,R9)                                 01S0176
         L     @15,RVTRAARP(,@08)                               01S0176
         LA    @01,@AL00001                                     01S0176
         BALR  @14,@15                                          01S0176
*   IF RF^=ZZZFLAGI THEN            /* BLSRRAAR DETECTED AN ERROR    */
*                                                               01S0177
         LTR   RF,RF                                            01S0177
         BZ    @RF00177                                         01S0177
*     /***************************************************************/
*     /*                                                             */
*     /* BLSRRAAR DETECTED AN ERROR                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0178
*     DO;                           /* BLSRRAAR DETECTED AN ERROR    */
*       RETC=RF;                    /* RETURN CODE                   */
         LR    RETC,RF                                          01S0179
*       GO TO EXIT;                 /* COMMON EXIT PATH              */
         B     EXIT                                             01S0180
*     END;                          /* BLSRRAAR DETECTED AN ERROR    */
         SPACE 1
*                                                               01S0182
*/*------------------------------------------------------------------*/
*/* MAP REAL STORAGE SECTION 2--REAL PSA TO ABSOLUTE PSA WHERE       */
*/* ABSOLUTE AND REAL STORAGE MAPPINGS ARE IDENTICAL                 */
*/*------------------------------------------------------------------*/
*                                                               01S0182
*   RAAUFAD=ZZZLENP4;               /* ->BYTE OF INTEREST            */
@RF00177 MVC   RAAUFAD(4),@CF00095                              01S0182
*   DO WHILE(RAAUFAD<PSAPTR);       /* PROCESS SECTION 2             */
         B     @DE00183                                         01S0183
@DL00183 DS    0H                                               01S0184
*     RAAUAS=DATSA;                 /* ABSOLUTE STORAGE              */
         MVC   RAAUAS(16),DATSA                                 01S0184
*     CALL BLSRRAGE(ZZ2,RAAU);      /* LOCATE SECTION 2 STORAGE      */
         ST    R9,@AL00001                                      01S0185
         LA    @14,RAAU                                         01S0185
         ST    @14,@AL00001+4                                   01S0185
         L     @08,ZZ2RVTP(,R9)                                 01S0185
         L     @15,RVTRAGEP(,@08)                               01S0185
         LA    @01,@AL00001                                     01S0185
         BALR  @14,@15                                          01S0185
*     IF RF^=ZZZFLAGI THEN          /* BLSRRAGE DETECTED AN ERROR    */
*                                                               01S0186
         LTR   RF,RF                                            01S0186
         BZ    @RF00186                                         01S0186
*       /*************************************************************/
*       /*                                                           */
*       /* BLSRRAGE DETECTED AN ERROR                                */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0187
*       DO;                         /* BLSRRAGE DETECTED AN ERROR    */
*         RETC=RF;                  /* RETURN CODE                   */
         LR    RETC,RF                                          01S0188
*         GO TO EXIT;               /* COMMON EXIT PATH              */
         B     EXIT                                             01S0189
*       END;                        /* BLSRRAGE DETECTED AN ERROR    */
*     RAAUAS=RABAAS;                /* CONVERT TO REAL STORAGE MAP   */
*                                                               01S0191
@RF00186 MVC   RAAUAS(16),RABAAS(RABAPTR)                       01S0191
*     /***************************************************************/
*     /*                                                             */
*     /* ELIMINATE RECORD ENTRIES WHICH DESCRIBE ONLY PAGES FROM     */
*     /* SECTIONS 3 AND 4                                            */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0192
*     DO WHILE(RAAURIA(RAAUUSE)>=PSAPTR);/* EDIT EXCESS ENTRIES      */
         B     @DE00192                                         01S0192
@DL00192 DS    0H                                               01S0193
*       RAAUUSE=RAAUUSE-1;          /* ELIMINATE UNDESIRED ENTRY     */
         LH    @14,RAAUUSE                                      01S0193
         BCTR  @14,0                                            01S0193
         STH   @14,RAAUUSE                                      01S0193
*     END;                          /* EDIT EXCESS ENTRIES           */
@DE00192 LH    @14,RAAUUSE                                      01S0194
         SLA   @14,5                                            01S0194
         L     @08,RAAURIA-32(@14)                              01S0194
         CLR   @08,PSAPTR                                       01S0194
         BNL   @DL00192                                         01S0194
*     P1=RAAURIA(RAAUUSE)+RAAURNM(RAAUUSE)*ZZZLENP4;/* ->FIRST BYTE
*                                      NOT DESCRIBED BY THIS RECORD  */
         LH    P1,RAAURNM-32(@14)                               01S0195
         SLA   P1,12                                            01S0195
         ALR   P1,@08                                           01S0195
*     IF P1>PSAPTR THEN             /* EDIT FINAL RECORD ENTRY       */
*                                                               01S0196
         CR    P1,PSAPTR                                        01S0196
         BNH   @RF00196                                         01S0196
*       /*************************************************************/
*       /*                                                           */
*       /* EDIT FINAL ENTRY TO DESCRIBE ONLY SECTION 2 PAGES         */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0197
*       DO;                         /* EDIT FINAL RECORD ENTRY       */
*         RAAURNM(RAAUUSE)=(PSAPTR-RAAURIA(RAAUUSE))/ZZZLENP4;  01S0198
         LR    @00,@08                                          01S0198
         LCR   @00,@00                                          01S0198
         ALR   @00,PSAPTR                                       01S0198
         SRL   @00,12                                           01S0198
         STH   @00,RAAURNM-32(@14)                              01S0198
*         P1=PSAPTR;                /* ->PREFIXED PAGE               */
         LR    P1,PSAPTR                                        01S0199
*       END;                        /* EDIT FINAL RECORD ENTRY       */
*     RAAUFAD=P1-1;                 /* ->FINAL BYTE DESCRIBED        */
@RF00196 LR    @14,P1                                           01S0201
         BCTR  @14,0                                            01S0201
         ST    @14,RAAUFAD                                      01S0201
*     CALL BLSRRAAR(ZZ2,RAAU);      /* DESCRIBE SECTION 2 STORAGE    */
         ST    R9,@AL00001                                      01S0202
         LA    @14,RAAU                                         01S0202
         ST    @14,@AL00001+4                                   01S0202
         L     @08,ZZ2RVTP(,R9)                                 01S0202
         L     @15,RVTRAARP(,@08)                               01S0202
         LA    @01,@AL00001                                     01S0202
         BALR  @14,@15                                          01S0202
*     IF RF^=ZZZFLAGI THEN          /* BLSRRAAR DETECTED AN ERROR    */
*                                                               01S0203
         LTR   RF,RF                                            01S0203
         BZ    @RF00203                                         01S0203
*       /*************************************************************/
*       /*                                                           */
*       /* BLSRRAAR DETECTED AN ERROR                                */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0204
*       DO;                         /* BLSRRAAR DETECTED AN ERROR    */
*         RETC=RF;                  /* RETURN CODE                   */
         LR    RETC,RF                                          01S0205
*         GO TO EXIT;               /* COMMON EXIT PATH              */
         B     EXIT                                             01S0206
*       END;                        /* BLSRRAAR DETECTED AN ERROR    */
*     RAAUFAD=P1;                   /* ->NEXT STORAGE OF INTEREST    */
@RF00203 ST    P1,RAAUFAD                                       01S0208
*   END;                            /* PROCESS SECTION 2             */
@DE00183 CL    PSAPTR,RAAUFAD                                   01S0209
         BH    @DL00183                                         01S0209
         SPACE 1
*                                                               01S0210
*/*------------------------------------------------------------------*/
*/* MAP REAL STORAGE SECTION 3--THE ABSOLUTE PSA                     */
*/*------------------------------------------------------------------*/
*                                                               01S0210
*   RAAUAS=DATSA;                   /* ABSOLUTE STORAGE              */
         MVC   RAAUAS(16),DATSA                                 01S0210
*   RAAUFAD=ZZZZNULL;               /* ->ABSOLUTE PSA                */
         SLR   @14,@14                                          01S0211
         ST    @14,RAAUFAD                                      01S0211
*   CALL BLSRRAGE(ZZ2,RAAU);        /* LOCATE ABSOLUTE PSA           */
         ST    R9,@AL00001                                      01S0212
         LA    @14,RAAU                                         01S0212
         ST    @14,@AL00001+4                                   01S0212
         L     @08,ZZ2RVTP(,R9)                                 01S0212
         L     @15,RVTRAGEP(,@08)                               01S0212
         LA    @01,@AL00001                                     01S0212
         BALR  @14,@15                                          01S0212
*   IF RF^=ZZZFLAGI THEN            /* BLSRRAGE DETECTED AN ERROR    */
*                                                               01S0213
         LTR   RF,RF                                            01S0213
         BZ    @RF00213                                         01S0213
*     /***************************************************************/
*     /*                                                             */
*     /* BLSRRAGE DETECTED AN ERROR                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0214
*     DO;                           /* BLSRRAGE DETECTED AN ERROR    */
*       RETC=RF;                    /* RETURN CODE                   */
         LR    RETC,RF                                          01S0215
*       GO TO EXIT;                 /* COMMON EXIT PATH              */
         B     EXIT                                             01S0216
*     END;                          /* BLSRRAGE DETECTED AN ERROR    */
*   RAAUAS=RABAAS;                  /* REAL STORAGE                  */
@RF00213 MVC   RAAUAS(16),RABAAS(RABAPTR)                       01S0218
*   RAAUFAD=PSAPTR+ZZZLENP4-1;      /* ->FINAL BYTE DESCRIBED        */
         LR    @14,PSAPTR                                       01S0219
         SH    @14,@CH01164                                     01S0219
         ST    @14,RAAUFAD                                      01S0219
*   RAAURIA(1)=PSAPTR;              /* ->FIRST BYTE DESCRIBED        */
         ST    PSAPTR,RAAURIA                                   01S0220
*   RAAURNM(1)=1;                   /* ONE RECORD                    */
         LA    @14,1                                            01S0221
         STH   @14,RAAURNM                                      01S0221
*   RAAURFP(1)=ZZZ1;                /* PREFIXED                      */
         OI    RAAURFP,B'01000000'                              01S0222
*   RAAUUSE=1;                     /*ONE ENTRY OF DUMP RECDS @ZA33007*/
         STH   @14,RAAUUSE                                      01S0223
*   CALL BLSRRAAR(ZZ2,RAAU);        /* DESCRIBE ABSOLUTE PSA         */
         ST    R9,@AL00001                                      01S0224
         LA    @14,RAAU                                         01S0224
         ST    @14,@AL00001+4                                   01S0224
         L     @08,ZZ2RVTP(,R9)                                 01S0224
         L     @15,RVTRAARP(,@08)                               01S0224
         LA    @01,@AL00001                                     01S0224
         BALR  @14,@15                                          01S0224
*   IF RF^=ZZZFLAGI THEN            /* BLSRRAAR DETECTED AN ERROR    */
*                                                               01S0225
         LTR   RF,RF                                            01S0225
         BZ    @RF00225                                         01S0225
*     /***************************************************************/
*     /*                                                             */
*     /* BLSRRAAR DETECTED AN ERROR                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0226
*     DO;                           /* BLSRRAAR DETECTED AN ERROR    */
*       RETC=RF;                    /* RETURN CODE                   */
         LR    RETC,RF                                          01S0227
*       GO TO EXIT;                 /* COMMON EXIT PATH              */
         B     EXIT                                             01S0228
*     END;                          /* BLSRRAAR DETECTED AN ERROR    */
         SPACE 1
*                                                               01S0230
*/*------------------------------------------------------------------*/
*/* MAP REAL STORAGE SECTION 4--AFTER THE ABSOLUTE PSA THE ABSOLUTE  */
*/* AND REAL STORAGE MAPPINGS ARE IDENTICAL                          */
*/*------------------------------------------------------------------*/
*                                                               01S0230
*   RAAUFAD=PSAPTR+ZZZLENP4;        /* ->BYTE OF INTEREST            */
@RF00225 LR    @14,PSAPTR                                       01S0230
         AL    @14,@CF00095                                     01S0230
         ST    @14,RAAUFAD                                      01S0230
*   DO WHILE(RAAUFAD<ZZZP31MX);     /* DESCRIBE SECTION 4 STORAGE    */
         B     @DE00231                                         01S0231
@DL00231 DS    0H                                               01S0232
*     RAAUAS=DATSA;                 /* ABSOLUTE STORAGE              */
         MVC   RAAUAS(16),DATSA                                 01S0232
*     CALL BLSRRAGE(ZZ2,RAAU);      /* LOCATE SECTION 4 STORAGE      */
         ST    R9,@AL00001                                      01S0233
         LA    @14,RAAU                                         01S0233
         ST    @14,@AL00001+4                                   01S0233
         L     @08,ZZ2RVTP(,R9)                                 01S0233
         L     @15,RVTRAGEP(,@08)                               01S0233
         LA    @01,@AL00001                                     01S0233
         BALR  @14,@15                                          01S0233
*     IF RF^=ZZZFLAGI THEN          /* BLSRRAGE DETECTED AN ERROR    */
*                                                               01S0234
         LTR   RF,RF                                            01S0234
         BZ    @RF00234                                         01S0234
*       /*************************************************************/
*       /*                                                           */
*       /* BLSRRAGE DETECTED AN ERROR                                */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0235
*       DO;                         /* BLSRRAGE DETECTED AN ERROR    */
*         RETC=RF;                  /* RETURN CODE                   */
         LR    RETC,RF                                          01S0236
*         GO TO EXIT;               /* COMMON EXIT PATH              */
         B     EXIT                                             01S0237
*       END;                        /* BLSRRAGE DETECTED AN ERROR    */
*     RAAUAS=RABAAS;                /* REAL ADDRESS SPACE            */
@RF00234 MVC   RAAUAS(16),RABAAS(RABAPTR)                       01S0239
*     CALL BLSRRAAR(ZZ2,RAAU);      /* DESCRIBE SECTION 4 STORAGE    */
         ST    R9,@AL00001                                      01S0240
         LA    @14,RAAU                                         01S0240
         ST    @14,@AL00001+4                                   01S0240
         L     @08,ZZ2RVTP(,R9)                                 01S0240
         L     @15,RVTRAARP(,@08)                               01S0240
         LA    @01,@AL00001                                     01S0240
         BALR  @14,@15                                          01S0240
*     IF RF^=ZZZFLAGI THEN          /* BLSRRAAR DETECTED AN ERROR    */
*                                                               01S0241
         LTR   RF,RF                                            01S0241
         BZ    @RF00241                                         01S0241
*       /*************************************************************/
*       /*                                                           */
*       /* BLSRRAAR DETECTED AN ERROR                                */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0242
*       DO;                         /* BLSRRAAR DETECTED AN ERROR    */
*         RETC=RF;                  /* RETURN CODE                   */
         LR    RETC,RF                                          01S0243
*         GO TO EXIT;               /* COMMON EXIT PATH              */
         B     EXIT                                             01S0244
*       END;                        /* BLSRRAAR DETECTED AN ERROR    */
*     RAAUFAD=RAAUFAD+1;            /* ->NEXT BYTE OF INTEREST       */
@RF00241 LA    @14,1                                            01S0246
         AL    @14,RAAUFAD                                      01S0246
         ST    @14,RAAUFAD                                      01S0246
*   END;                            /* DESCRIBE SECTION 4 STORAGE    */
@DE00231 CLC   RAAUFAD(4),@CF00127                              01S0247
         BL    @DL00231                                         01S0247
         SPACE 1
*                                                               01S0248
*/*------------------------------------------------------------------*/
*/* PROVIDE INFORMATION REGARDING THE REAL PAGE OF INTEREST TO THE   */
*/* CALLER                                                           */
*/*------------------------------------------------------------------*/
*                                                               01S0248
*   RABAAS=DATSA;                   /* CONVERT TO ABSOLUTE REQUEST   */
         MVC   RABAAS(16,RABAPTR),DATSA                         01S0248
*   PAGEP=RABAFAD&ZZZP4M31;         /* ->PAGE                        */
         L     PAGEP,RABAFAD(,RABAPTR)                          01S0249
         N     PAGEP,@CF00121                                   01S0249
*   IF PAGEP=ZZZZNULL THEN          /* REAL PSA                      */
         LTR   PAGEP,PAGEP                                      01S0250
         BNZ   @RF00250                                         01S0250
*     RABAFAD=PSAPTR;               /* ->BYTE OF INTEREST            */
         ST    PSAPTR,RABAFAD(,RABAPTR)                         01S0251
*   ELSE                            /* NOT THE REAL PSA              */
*     IF PAGEP=PSAPTR THEN          /* ABSOLUTE PSA                  */
         B     @RC00250                                         01S0252
@RF00250 CR    PAGEP,PSAPTR                                     01S0252
         BNE   @RF00252                                         01S0252
*       RABAFAD=ZZZZNULL;           /* ->BYTE OF INTEREST            */
         SLR   @14,@14                                          01S0253
         ST    @14,RABAFAD(,RABAPTR)                            01S0253
*     ELSE                          /* PAGE NOT PREFIXED             */
*       RABAFAD=PAGEP;              /* ->PAGE OF INTEREST            */
         B     @RC00252                                         01S0254
@RF00252 ST    PAGEP,RABAFAD(,RABAPTR)                          01S0254
*   CALL BLSRRAGE(ZZ2,RABA);        /* LOCATE PAGE                   */
@RC00252 DS    0H                                               01S0255
@RC00250 ST    R9,@AL00001                                      01S0255
         ST    RABAPTR,@AL00001+4                               01S0255
         L     @08,ZZ2RVTP(,R9)                                 01S0255
         L     @15,RVTRAGEP(,@08)                               01S0255
         LA    @01,@AL00001                                     01S0255
         BALR  @14,@15                                          01S0255
*   RABAAS=RAAUAS;                  /* RESTORE ADDRESS SPACE         */
         MVC   RABAAS(16,RABAPTR),RAAUAS                        01S0256
*   RETC=RF;                        /* RETURN CODE                   */
         LR    RETC,RF                                          01S0257
*   IF RETC^=ZZZFLAGI THEN          /* BLSRRAGE DETECTED AN ERROR    */
         SLR   @14,@14                                          01S0258
         CR    RETC,@14                                         01S0258
         BNE   @RT00258                                         01S0258
*     GO TO EXIT;                   /* COMMON EXIT PATH              */
*   RABAUSE=1;                      /* ONE ENTRY                     */
         LA    @08,1                                            01S0260
         STH   @08,RABAUSE(,RABAPTR)                            01S0260
*   RABARNM(1)=1;                   /* ONE RECORD DESCRIBED          */
         STH   @08,RABARNM(,RABAPTR)                            01S0261
*   IF PAGEP=ZZZZNULL THEN          /* REAL PSA                      */
*                                                               01S0262
         CR    PAGEP,@14                                        01S0262
         BNE   @RF00262                                         01S0262
*     /***************************************************************/
*     /*                                                             */
*     /* REAL PREFIXED STORAGE AREA                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0263
*     DO;                           /* REAL PSA                      */
*       RABARIA(1)=ZZZZNULL;        /* ->FIRST BYTE DESCRIBED        */
         ST    @14,RABARIA(,RABAPTR)                            01S0264
*       IF RABARFU(1)=ZZZ0 THEN     /* REAL PSA LOCATED              */
         TM    RABARFU(RABAPTR),B'10000000'                     01S0265
         BNZ   @RF00265                                         01S0265
*         RABARFP(1)=ZZZ1;          /* PREFIXED PAGE                 */
         OI    RABARFP(RABAPTR),B'01000000'                     01S0266
*     END;                          /* REAL PSA                      */
*   ELSE                            /* NOT THE REAL PSA              */
*     IF PAGEP=PSAPTR THEN          /* ABSOLUTE PSA                  */
*                                                               01S0268
         B     @RC00262                                         01S0268
@RF00262 CR    PAGEP,PSAPTR                                     01S0268
         BNE   @RF00268                                         01S0268
*       /*************************************************************/
*       /*                                                           */
*       /* ABSOLUTE PREFIXED STORAGE AREA                            */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0269
*       DO;                         /* ABSOLUTE PSA                  */
*         RABARIA(1)=PSAPTR;        /* ->BYTE OF INTEREST            */
         ST    PSAPTR,RABARIA(,RABAPTR)                         01S0270
*         IF RABARFU(1)=ZZZ0 THEN   /* ABSOLUTE PSA LOCATED          */
         TM    RABARFU(RABAPTR),B'10000000'                     01S0271
         BNZ   @RF00271                                         01S0271
*           RABARFP(1)=ZZZ1;        /* PREFIXED PAGE                 */
         OI    RABARFP(RABAPTR),B'01000000'                     01S0272
*       END;                        /* ABSOLUTE PSA                  */
@RF00271 DS    0H                                               01S0274
*   RABARLE(1)=ZZZLENP4;            /* LENGTH OF DATA DESCRIBED      */
@RF00268 DS    0H                                               01S0274
@RC00262 MVC   RABARLE(4,RABAPTR),@CF00095                      01S0274
*   RABAFAD=RABARIA(1)+ZZZLENP4-1;  /* ->FINAL BYTE DESCRIBED        */
         L     @14,RABARIA(,RABAPTR)                            01S0275
         SL    @14,@CF01164                                     01S0275
         ST    @14,RABAFAD(,RABAPTR)                            01S0275
*EXIT:                              /* COMMON EXIT PATH              */
*   RETURN CODE(RETC);                                          01S0276
*                                                               01S0276
EXIT     L     @13,4(,@13)                                      01S0276
         L     @00,@SIZDATD                                     01S0276
         LR    @01,@11                                          01S0276
         BLSUFRES R,LV=(0),A=(1)
         LR    @15,@04                                          01S0276
         L     @14,12(,@13)                                     01S0276
         LM    @00,@12,20(@13)                                  01S0276
         BR    @14                                              01S0276
*/*BLSRPEND--DEBUGGING MODULE*/                                 01S0277
*                                                               01S0277
*/*BLSUPEND--MVS IPCS MODULE*/                                  01S0277
*                                                               01S0277
*   DECLARE/*DATA FOR AHB MACROS*/                              01S0277
*     PACKED BIT(64) BOUNDARY(DWORD);/*DATA CONVERSION WORK AREA*/
*                                                               01S0277
*                                                               01S0277
*    DECLARE /* COMMON VARIABLES */                             01S0278
*      I256C CHAR(256) BASED,                                   01S0278
*      I031F FIXED(31) BASED,                                   01S0278
*      I031P PTR(31)   BASED,                                   01S0278
*      I015F FIXED(15) BASED,                                   01S0278
*      I015P PTR(15)   BASED,                                   01S0278
*      I008P PTR(8)    BASED,                                   01S0278
*      I001C CHAR(1)   BASED;                                   01S0278
*    GENERATE NODEFS NOREFS DATA;                               01S0279
*   END BLSRRACR /*BLRPEND(BLSRRACR) */                         01S0280
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (BLSRZZZ )                                        *
*/*%INCLUDE SYSLIB  (BLSUZZZ )                                        *
*/*%INCLUDE SYSLIB  (BLRFULL )                                        *
*/*%INCLUDE SYSLIB  (IKJCPPL )                                        *
*/*%INCLUDE SYSLIB  (IKJPSCB )                                        *
*/*%INCLUDE SYSLIB  (IKJECT  )                                        *
*/*%INCLUDE SYSLIB  (IKJUPT  )                                        *
*/*%INCLUDE SYSLIB  (BLSUSERV)                                        *
*/*%INCLUDE SYSLIB  (BLRSERV )                                        *
*/*%INCLUDE SYSLIB  (BLRSERVD)                                        *
*/*%INCLUDE SYSLIB  (BLSRSERV)                                        *
*;                                                              01S0280
@EL00001 L     @13,4(,@13)                                      01S0280
@EF00001 L     @00,@SIZDATD                                     01S0280
         LR    @01,@11                                          01S0280
         BLSUFRES R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                  01S0280
         BR    @14                                              01S0280
@DATA    DS    0H
@CH00055 DC    H'8'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    2F
@AL00001 DS    2A
BLSRRACR CSECT
         DS    0F
@CF01163 DC    F'4095'
@CF00095 DC    F'4096'
@CF00127 DC    F'2147483647'
@CF01164 DC    F'-4095'
@CH01164 EQU   @CF01164+2
@CF00121 DC    XL4'7FFFF000'
@DATD    DSECT
         DS    0D
ESAU     DS    CL694
         ORG   ESAU
ESAURID  DS    CL2
@NM00090 DS    BL6
@NM00091 DS    CL8
@NM00092 DS    BL8
ESAURDX  DS    FL4
ESAUSYM  DS    CL31
ESAUELK  DS    0C
ESAURV1  DS    CL1
ESAUAS   DS    CL16
         ORG   ESAUAS
ESAUAS0  DS    0C
ESAUAST  DS    CL2
@NM00093 DS    BL2
ESAUAS1  DS    FL4
ESAUAS2  DS    FL4
@NM00094 DS    BL4
ESAUAS9  DS    0C
         ORG   ESAU+76
ESAULAD  DS    AL4
ESAUD    DS    CL60
         ORG   ESAUD
ESAUD00  DS    0C
ESAUDOF  DS    FL4
ESAUDLE  DS    FL4
ESAUDOB  DS    FL1
ESAUDLB  DS    FL1
ESAUDT   DS    CL34
         ORG   ESAUDT
ESAUDT0  DS    0C
ESAUDTY  DS    CL1
@NM00095 DS    BL1
ESAUDTD  DS    CL31
ESAUDTE  DS    CL1
ESAUDT9  DS    0C
         ORG   ESAUD+44
ESAUDIM  DS    FL4
ESAUDIL  DS    FL4
ESAUDF   DS    BL4
         ORG   ESAUDF
ESAUDFA  DS    BL1
@NM00096 EQU   ESAUDF+0
         ORG   ESAUD+56
@NM00097 DS    BL4
ESAUD99  DS    0C
         ORG   ESAU+140
ESAUMAD  DS    AL4
@NM00098 DS    BL16
ESAUKEY  DS    BL1
ESAUF    DS    BL3
         ORG   ESAUF
ESAUFS   DS    BL1
         ORG   ESAUFS
ESAUFSC  DS    BL1
ESAUFS2  EQU   ESAUFS+0
ESAUFSM  EQU   ESAUFS+0
ESAUFSA  EQU   ESAUFS+0
ESAUFSP  EQU   ESAUFS+0
ESAUFSR  EQU   ESAUFS+0
ESAUFSX  EQU   ESAUFS+0
ESAUFSS  EQU   ESAUFS+0
         ORG   ESAUF+1
ESAUFC   DS    BL1
         ORG   ESAUFC
ESAUFCD  DS    BL1
@NM00099 EQU   ESAUFC+0
         ORG   ESAUF+2
@NM00100 DS    BL1
         ORG   ESAU+164
ESAUABS  DS    FL4
@NM00101 DS    BL12
ESAUR    DS    CL514
         ORG   ESAUR
ESAURL   DS    FL2
ESAURT   DS    CL512
         ORG   ESAURT
ESAURT1  DS    CL512
         ORG   ESAU+694
ESAU999  DS    0C
         ORG   ESAU+694
         DS    CL2
RAAU     DS    CL148
         ORG   RAAU
RAAURID  DS    CL2
@NM00102 DS    BL6
RAAURDX  DS    FL4
RAAUAS   DS    CL16
         ORG   RAAUAS
RAAUAS0  DS    0C
RAAUAST  DS    CL2
@NM00103 DS    BL2
RAAUAS1  DS    FL4
RAAUAS2  DS    FL4
@NM00104 DS    BL4
RAAUAS9  DS    0C
         ORG   RAAU+28
RAAUFAD  DS    AL4
RAAUELK  DS    0C
@NM00105 DS    BL16
RAAUDIM  DS    FL2
RAAUUSE  DS    FL2
RAAUR    DS    CL32
         ORG   RAAUR+0
RAAURIA  DS    AL4
RAAURLE  DS    FL4
RAAURNM  DS    FL2
RAAURF   DS    BL2
         ORG   RAAURF+0
RAAURFU  DS    BL1
RAAURFP  EQU   RAAURF+0
RAAURFR  EQU   RAAURF+0
@NM00106 EQU   RAAURF+0
         ORG   RAAUR+12
RAAURDA  DS    FL4
RAAUROF  DS    FL4
@NM00107 DS    BL12
         ORG   RAAU+148
RAAU999  DS    0C
         ORG   RAAU+148
         DS    CL4
PACKED   DS    BL8
BLSRRACR CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00982 DC    C'PSA'
         DS    CL1
DATSA    DS    CL16
         ORG   DATSA
DATSA0   DS    0C
DATSAT   DC    CL2'A '
@NM00087 DC    X'0000'
DATSA1   DC    A(0)
DATSA2   DC    A(0)
@NM00088 DC    X'00'
         DC    XL3'0'
DATSA9   DS    0C
         ORG   DATSA+16
DTPSA    DS    CL34
         ORG   DTPSA
DTPSA0   DS    0C
DTPSAY   DC    CL1'M'
@NM00089 DC    X'00'
DTPSAD   DC    CL31'PSA'
DTPSAE   DC    CL1' '
DTPSA9   DS    0C
         ORG   DTPSA+34
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSRRACR CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSRRACR+19)/20+7)/8)CL8'BLSRRACR'
@DATD    DSECT
         DS    0H
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSRRACR CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RETC     EQU   @04
P1       EQU   @04
PSAPTR   EQU   @05
PAGEP    EQU   @06
RABAPTR  EQU   @03
R9       EQU   @09
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
RB       EQU   @11
RD       EQU   @13
RE       EQU   @14
RF       EQU   @15
RA       EQU   @10
RC       EQU   @12
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
ZZ1      EQU   0
ZZ1ATTN  EQU   ZZ1+360
ZZ1EVE   EQU   ZZ1ATTN+4
ZZ1F     EQU   ZZ1+368
ZZ1N     EQU   ZZ1+1116
ZZ2      EQU   0
ZZ2AMD   EQU   ZZ2
@NM00021 EQU   ZZ2AMD+7
ZZ2PRT   EQU   ZZ2+138
ZZ2PRTT  EQU   ZZ2PRT+4
ZZ2PRTT1 EQU   ZZ2PRTT+1
ZZ2A     EQU   ZZ2+272
ZZ2AF    EQU   ZZ2A+16
ZZ2APID  EQU   ZZ2A+64
ZZ2AD    EQU   ZZ2A+74
ZZ2ADD   EQU   ZZ2AD
ZZ2ADDT  EQU   ZZ2ADD+2
ZZ2ADM   EQU   ZZ2AD+46
ZZ2ADMT  EQU   ZZ2ADM+2
ZZ2ADP   EQU   ZZ2AD+56
ZZ2ADPT  EQU   ZZ2ADP+2
ZZ2AZZ6P EQU   ZZ2A+140
ZZ2AQAS  EQU   ZZ2A+144
ZZ2AQD   EQU   ZZ2A+160
ZZ2AQDT  EQU   ZZ2AQD+10
ZZ2AQDF  EQU   ZZ2AQD+52
ZZ2STG   EQU   ZZ2+960
ZZ2ALLOP EQU   ZZ2+992
ZZ2FREEP EQU   ZZ2+996
ZZ2FF19P EQU   ZZ2+1000
ZZ2FRE1P EQU   ZZ2+1004
ZZ2FF18P EQU   ZZ2+1008
ZZ2DYNAP EQU   ZZ2+1012
ZZ2ZZ2CP EQU   ZZ2+1016
ZZ2ZZ2DP EQU   ZZ2+1020
ZZ2STAIP EQU   ZZ2+1024
ZZ2FF02P EQU   ZZ2+1028
ZZ2GETLP EQU   ZZ2+1032
ZZ2PARSP EQU   ZZ2+1036
ZZ2PTGTP EQU   ZZ2+1040
ZZ2PUTLP EQU   ZZ2+1044
ZZ2SCANP EQU   ZZ2+1048
ZZ2STCKP EQU   ZZ2+1052
ZZ2TRMOP EQU   ZZ2+1064
ZZ2TRMVP EQU   ZZ2+1068
ZZ2PUTNP EQU   ZZ2+1084
ZZ2TRMNP EQU   ZZ2+1088
ZZ2ZZ1P  EQU   ZZ2+1264
ZZ2BVTP  EQU   ZZ2+1280
ZZ2RVTP  EQU   ZZ2+1284
ZZ2CPPL  EQU   ZZ2+1292
ZZ2CPPLC EQU   ZZ2CPPL
ZZ2F     EQU   ZZ2+2824
ZZ2ITR   EQU   ZZ2+2840
ZZ2ITRE  EQU   ZZ2ITR+16
ZZ2ITSE  EQU   ZZ2+2864
ZZ2ES    EQU   ZZ2+2872
ZZ2AMDX  EQU   ZZ2+7160
ZZ2AXO   EQU   ZZ2+7934
ZZ2AXOT  EQU   ZZ2AXO+2
CMD      EQU   0
CMDT     EQU   CMD+4
PSCB     EQU   0
PSCBATR1 EQU   PSCB+16
ECT      EQU   0
ECTSWS   EQU   ECT+28
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
UPT      EQU   0
UPTSWS   EQU   UPT+12
SA       EQU   0
SA1      EQU   SA
SAR      EQU   SA+12
SAR1     EQU   SAR+12
BVT      EQU   0
BVTPUTLP EQU   BVT+4
BVTPUTOP EQU   BVT+12
BVTPUTTP EQU   BVT+16
BVTPUTVP EQU   BVT+20
BVTPUTAP EQU   BVT+24
BVTPRTTP EQU   BVT+28
BVTPRTAP EQU   BVT+32
BVTPUTDP EQU   BVT+36
BVTMONP  EQU   BVT+40
BVTMON2P EQU   BVT+44
BVTVSARP EQU   BVT+48
BVTVSENP EQU   BVT+64
BVTVSERP EQU   BVT+68
BVTVSGEP EQU   BVT+72
BVTVSGUP EQU   BVT+76
BVTVSPOP EQU   BVT+80
BVTVSPUP EQU   BVT+84
BVTMPKNP EQU   BVT+104
BVTMONLP EQU   BVT+108
BVTPUTCP EQU   BVT+132
BVTMPK1P EQU   BVT+136
BVTZZ2RP EQU   BVT+140
BVTPGMRP EQU   BVT+144
BVTMONAP EQU   BVT+148
BVTBLDDP EQU   BVT+152
BVTBLDLP EQU   BVT+156
BVTPGMCP EQU   BVT+160
BVTPGMDP EQU   BVT+164
BVTPGMLP EQU   BVT+168
BVTMONCP EQU   BVT+180
BVTMONDP EQU   BVT+184
BVTMONTP EQU   BVT+188
BVTPARIP EQU   BVT+192
BVTPARUP EQU   BVT+196
BVTPRTNP EQU   BVT+204
BVTVSCRP EQU   BVT+208
BVTVSMRP EQU   BVT+212
BVTMONXP EQU   BVT+216
BVTTRMAP EQU   BVT+228
ZZ6      EQU   0
ZZ6D     EQU   ZZ6+128
ZZ6DD    EQU   ZZ6D+8
ZZ6DDT   EQU   ZZ6DD+4
ZZ6DQA   EQU   ZZ6D+68
ZZ6DF    EQU   ZZ6D+92
ZZ6DFDU  EQU   ZZ6DF
ZZ6DFAB  EQU   ZZ6DF
ZZ6DFST  EQU   ZZ6DF
ZZ6F     EQU   ZZ6+504
ZZ6B     EQU   ZZ6+768
BLSRESGU EQU   0
BLSRRAAR EQU   0
BLSRRAGE EQU   0
RVT      EQU   0
RVTADDRP EQU   RVT
RVTT01P  EQU   RVT+4
RVTTAP   EQU   RVT+8
RVTTBP   EQU   RVT+12
RVTTCP   EQU   RVT+16
RVTTFP   EQU   RVT+24
RVTTYP   EQU   RVT+40
RVTT02P  EQU   RVT+48
RVTT03P  EQU   RVT+52
RVTT04P  EQU   RVT+56
RVTACCLP EQU   RVT+60
RVTRACCP EQU   RVT+64
RVTTLP   EQU   RVT+68
RVTTMP   EQU   RVT+72
RVTTUP   EQU   RVT+80
RVTESGEP EQU   RVT+84
RVTESGUP EQU   RVT+88
RVTESARP EQU   RVT+92
RVTRAARP EQU   RVT+96
RVTRAGEP EQU   RVT+100
RVTADDPP EQU   RVT+104
RVTACCQP EQU   RVT+108
RVTSAGUP EQU   RVT+124
RVTSAGEP EQU   RVT+128
RVTESCKP EQU   RVT+132
RVTMSGAP EQU   RVT+136
RVTMSGDP EQU   RVT+140
RVTADDTP EQU   RVT+160
RVTADDUP EQU   RVT+164
RVTADD1P EQU   RVT+176
RVTADD2P EQU   RVT+180
RVTRSAGP EQU   RVT+184
RVTMSGBP EQU   RVT+188
RVTADDSP EQU   RVT+192
RVTADD3P EQU   RVT+196
RVTT05P  EQU   RVT+200
RVTPADSP EQU   RVT+204
RVTTRP   EQU   RVT+228
RVTADD4P EQU   RVT+232
RVTSAPCP EQU   RVT+236
RVTSAARP EQU   RVT+240
RVTSAGNP EQU   RVT+244
RVTT06P  EQU   RVT+248
RVTSAGCP EQU   RVT+252
RVTSAGQP EQU   RVT+256
RVTESGCP EQU   RVT+260
RVTESGQP EQU   RVT+264
RVTDUCKP EQU   RVT+276
RVTDUCCP EQU   RVT+280
RABA     EQU   0
RABAAS   EQU   RABA+12
RABAAS1  EQU   RABAAS+4
RABAFAD  EQU   RABA+28
RABAUSE  EQU   RABA+50
RABAR    EQU   RABA+52
RABARIA  EQU   RABAR
RABARLE  EQU   RABAR+4
RABARNM  EQU   RABAR+8
RABARF   EQU   RABAR+10
RABARFU  EQU   RABARF
RABARFP  EQU   RABARF
BLSRACC  EQU   0
BLSRACCL EQU   0
BLSRACCQ EQU   0
BLSRADDP EQU   0
BLSRADDR EQU   0
BLSRADDS EQU   0
BLSRADDT EQU   0
BLSRADDU EQU   0
BLSRADD1 EQU   0
BLSRADD2 EQU   0
BLSRADD3 EQU   0
BLSRADD4 EQU   0
BLSRDUCC EQU   0
BLSRDUCK EQU   0
BLSRESAR EQU   0
BLSRESCK EQU   0
BLSRESGC EQU   0
BLSRESGE EQU   0
BLSRESGQ EQU   0
BLSRMSGA EQU   0
BLSRMSGB EQU   0
BLSRMSGD EQU   0
BLSRPADS EQU   0
BLSRSAAR EQU   0
BLSRSAG  EQU   0
BLSRSAGC EQU   0
BLSRSAGE EQU   0
BLSRSAGN EQU   0
BLSRSAGQ EQU   0
BLSRSAGU EQU   0
BLSRSAPC EQU   0
BLSTA    EQU   0
BLSTB    EQU   0
BLSTC    EQU   0
BLSTF    EQU   0
BLSTL    EQU   0
BLSTM    EQU   0
BLSTR    EQU   0
BLSTU    EQU   0
BLSTY    EQU   0
BLST01   EQU   0
BLST02   EQU   0
BLST03   EQU   0
BLST04   EQU   0
BLST05   EQU   0
BLST06   EQU   0
BLSUALLO EQU   0
BLSUBLDD EQU   0
BLSUBLDL EQU   0
BLSUDYNA EQU   0
BLSUFREE EQU   0
BLSUFRE1 EQU   0
BLSUMON  EQU   0
BLSUMONA EQU   0
BLSUMONC EQU   0
BLSUMOND EQU   0
BLSUMONL EQU   0
BLSUMONT EQU   0
BLSUMONX EQU   0
BLSUMON2 EQU   0
BLSUMPKN EQU   0
BLSUMPK1 EQU   0
BLSUPARI EQU   0
BLSUPARU EQU   0
BLSUPGMC EQU   0
BLSUPGMD EQU   0
BLSUPGML EQU   0
BLSUPGMR EQU   0
BLSUPRTA EQU   0
BLSUPRTN EQU   0
BLSUPRTT EQU   0
BLSUPUTA EQU   0
BLSUPUTC EQU   0
BLSUPUTD EQU   0
BLSUPUTL EQU   0
BLSUPUTN EQU   0
BLSUPUTO EQU   0
BLSUPUTT EQU   0
BLSUPUTV EQU   0
BLSUSTAI EQU   0
BLSUTRMA EQU   0
BLSUTRMN EQU   0
BLSUTRMO EQU   0
BLSUTRMV EQU   0
BLSUVSAR EQU   0
BLSUVSCR EQU   0
BLSUVSEN EQU   0
BLSUVSER EQU   0
BLSUVSGE EQU   0
BLSUVSGU EQU   0
BLSUVSMR EQU   0
BLSUVSPO EQU   0
BLSUVSPU EQU   0
BLSUZZ2C EQU   0
BLSUZZ2D EQU   0
BLSUZZ2R EQU   0
IKJEFF02 EQU   0
IKJEFF18 EQU   0
IKJEFF19 EQU   0
IKJGETL  EQU   0
IKJPARS  EQU   0
IKJPTGT  EQU   0
IKJPUTL  EQU   0
IKJSCAN  EQU   0
IKJSTCK  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
PZ2      EQU   0
RAPA     EQU   0
RAPAAS   EQU   RAPA+12
RAPAR    EQU   RAPA+52
RAPARF   EQU   RAPAR+10
CPPL     EQU   ZZ2CPPL
CPPLUPT  EQU   CPPL+4
CPPLPSCB EQU   CPPL+8
CPPLECT  EQU   CPPL+12
SYM      EQU   ESAUSYM
SYMB     EQU   SYM+3
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
SYMA     EQU   SYM
CPPLCBUF EQU   CPPL
RAPA999  EQU   RAPA+3060
@NM00006 EQU   RAPAR+20
RAPAROF  EQU   RAPAR+16
RAPARDA  EQU   RAPAR+12
@NM00005 EQU   RAPARF
RAPARFR  EQU   RAPARF
RAPARFP  EQU   RAPARF
RAPARFU  EQU   RAPARF
RAPARNM  EQU   RAPAR+8
RAPARLE  EQU   RAPAR+4
RAPARIA  EQU   RAPAR
RAPAUSE  EQU   RAPA+50
RAPADIM  EQU   RAPA+48
@NM00004 EQU   RAPA+32
RAPAELK  EQU   RAPA+32
RAPAFAD  EQU   RAPA+28
RAPAAS9  EQU   RAPAAS+16
@NM00003 EQU   RAPAAS+12
RAPAAS2  EQU   RAPAAS+8
RAPAAS1  EQU   RAPAAS+4
@NM00002 EQU   RAPAAS+2
RAPAAST  EQU   RAPAAS
RAPAAS0  EQU   RAPAAS
RAPARDX  EQU   RAPA+8
@NM00001 EQU   RAPA+2
RAPARID  EQU   RAPA
RABA999  EQU   RABA+148
@NM00113 EQU   RABAR+20
RABAROF  EQU   RABAR+16
RABARDA  EQU   RABAR+12
@NM00112 EQU   RABARF
RABARFR  EQU   RABARF
RABADIM  EQU   RABA+48
@NM00111 EQU   RABA+32
RABAELK  EQU   RABA+32
RABAAS9  EQU   RABAAS+16
@NM00110 EQU   RABAAS+12
RABAAS2  EQU   RABAAS+8
@NM00109 EQU   RABAAS+2
RABAAST  EQU   RABAAS
RABAAS0  EQU   RABAAS
RABARDX  EQU   RABA+8
@NM00108 EQU   RABA+2
RABARID  EQU   RABA
RVT99999 EQU   RVT+384
RVT0096P EQU   RVT+380
RVT0095P EQU   RVT+376
RVT0094P EQU   RVT+372
RVT0093P EQU   RVT+368
RVT0092P EQU   RVT+364
RVT0091P EQU   RVT+360
RVT0090P EQU   RVT+356
RVT0089P EQU   RVT+352
RVT0088P EQU   RVT+348
RVT0087P EQU   RVT+344
RVT0086P EQU   RVT+340
RVT0085P EQU   RVT+336
RVT0084P EQU   RVT+332
RVT0083P EQU   RVT+328
RVT0082P EQU   RVT+324
RVT0081P EQU   RVT+320
RVT0080P EQU   RVT+316
RVT0079P EQU   RVT+312
RVT0078P EQU   RVT+308
RVT0077P EQU   RVT+304
RVT0076P EQU   RVT+300
RVT0075P EQU   RVT+296
RVT0074P EQU   RVT+292
RVT0073P EQU   RVT+288
RVT0072P EQU   RVT+284
RVTDTUTP EQU   RVT+272
RVTDTMTP EQU   RVT+268
RVT0057P EQU   RVT+224
RVT0056P EQU   RVT+220
RVT0055P EQU   RVT+216
RVT0054P EQU   RVT+212
RVT0053P EQU   RVT+208
RVT0044P EQU   RVT+172
RVT0043P EQU   RVT+168
RVT0040P EQU   RVT+156
RVT0039P EQU   RVT+152
RVT0038P EQU   RVT+148
RVT0037P EQU   RVT+144
RVT0031P EQU   RVT+120
RVT0030P EQU   RVT+116
RVT0029P EQU   RVT+112
RVT0020P EQU   RVT+76
RVT0012P EQU   RVT+44
RVT0010P EQU   RVT+36
RVT0009P EQU   RVT+32
RVT0008P EQU   RVT+28
RVT0006P EQU   RVT+20
ZZ69999  EQU   ZZ6+1792
ZZ6BRB   EQU   ZZ6B+12
ZZ6BRC   EQU   ZZ6B+8
@NM00086 EQU   ZZ6B+6
ZZ6BFL   EQU   ZZ6B+4
ZZ6BDA   EQU   ZZ6B
@NM00085 EQU   ZZ6+540
ZZ6BUFI  EQU   ZZ6+536
ZZ6BUFP  EQU   ZZ6+532
ZZ6FILE  EQU   ZZ6+524
ZZ6BUFB  EQU   ZZ6+520
ZZ6BUFL  EQU   ZZ6+518
ZZ6BUFN  EQU   ZZ6+516
ZZ6ZZ6P  EQU   ZZ6+512
@NM00084 EQU   ZZ6F
ZZ6FINIT EQU   ZZ6F
ZZ6FDUOP EQU   ZZ6F
@NM00083 EQU   ZZ6+256
ZZ6D999  EQU   ZZ6D+128
@NM00082 EQU   ZZ6D+116
ZZ6DCAP  EQU   ZZ6D+112
ZZ6DPRP  EQU   ZZ6D+108
ZZ6DDA2  EQU   ZZ6D+104
ZZ6DDA1  EQU   ZZ6D+100
@NM00081 EQU   ZZ6DF
ZZ6DFSU  EQU   ZZ6DF
ZZ6DFMP  EQU   ZZ6DF
ZZ6DFBS  EQU   ZZ6DF
ZZ6DQ2   EQU   ZZ6D+88
ZZ6DQ1   EQU   ZZ6D+84
ZZ6DQA9  EQU   ZZ6DQA+16
@NM00080 EQU   ZZ6DQA+12
ZZ6DQA2  EQU   ZZ6DQA+8
ZZ6DQA1  EQU   ZZ6DQA+4
@NM00079 EQU   ZZ6DQA+2
ZZ6DQAT  EQU   ZZ6DQA
ZZ6DQA0  EQU   ZZ6DQA
ZZ6DRDX  EQU   ZZ6D+64
ZZ6DELK  EQU   ZZ6D+64
ZZ6DMEM  EQU   ZZ6D+56
ZZ6DDT1  EQU   ZZ6DDT
ZZ6DDO   EQU   ZZ6DD+2
ZZ6DDL   EQU   ZZ6DD
@NM00078 EQU   ZZ6D+2
ZZ6DRID  EQU   ZZ6D
ZZ6RDCB  EQU   ZZ6
ZZ60000  EQU   ZZ6
BVT99999 EQU   BVT+256
BVT0064P EQU   BVT+252
BVT0063P EQU   BVT+248
BVT0062P EQU   BVT+244
BVT0061P EQU   BVT+240
BVT0060P EQU   BVT+236
BVT0059P EQU   BVT+232
BVT0057P EQU   BVT+224
BVT0056P EQU   BVT+220
BVTSTBLP EQU   BVT+200
BVT0045P EQU   BVT+176
BVT0044P EQU   BVT+172
BVT0033P EQU   BVT+128
BVT0032P EQU   BVT+124
BVT0031P EQU   BVT+120
BVT0030P EQU   BVT+116
BVT0029P EQU   BVT+112
BVT0026P EQU   BVT+100
BVT0025P EQU   BVT+96
BVT0024P EQU   BVT+92
BVT0023P EQU   BVT+88
BVT0016P EQU   BVT+60
BVT0015P EQU   BVT+56
BVT0014P EQU   BVT+52
BVT0003P EQU   BVT+8
BVT0001P EQU   BVT
SA99     EQU   SA+72
SARC     EQU   SAR+56
SARB     EQU   SAR+52
SARA     EQU   SAR+48
SAR9     EQU   SAR+44
SAR8     EQU   SAR+40
SAR7     EQU   SAR+36
SAR6     EQU   SAR+32
SAR5     EQU   SAR+28
SAR4     EQU   SAR+24
SAR3     EQU   SAR+20
SAR2     EQU   SAR+16
SAR0     EQU   SAR+8
SARF     EQU   SAR+4
SARE     EQU   SAR
SAFWD    EQU   SA+8
SABAK    EQU   SA+4
SA1L     EQU   SA1+1
SA1P     EQU   SA1
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00077 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00076 EQU   UPT
@NM00075 EQU   ECT+52
@NM00074 EQU   ECT+48
@NM00073 EQU   ECT+44
@NM00072 EQU   ECTSWS2+1
@NM00071 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00070 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00069 EQU   PSCB+36
@NM00068 EQU   PSCB+32
@NM00067 EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00066 EQU   PSCBATR1
@NM00065 EQU   PSCBATR1
@NM00064 EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
PSCBUSRL EQU   PSCB+7
PSCBUSER EQU   PSCB
CMDT1    EQU   CMDT
CMDO     EQU   CMD+2
CMDL     EQU   CMD
ZZ299999 EQU   ZZ2+8192
ZZ2AXOT1 EQU   ZZ2AXOT
ZZ2AXOL  EQU   ZZ2AXO
@NM00063 EQU   ZZ2+7288
@NM00062 EQU   ZZ2AMDX+4
ZZ2AMDXC EQU   ZZ2AMDX
ZZ2HSD   EQU   ZZ2+3056
@NM00061 EQU   ZZ2ES
@NM00060 EQU   ZZ2+2868
ZZ2ITSEC EQU   ZZ2ITSE+1
@NM00059 EQU   ZZ2ITSE
ZZ2ITSEP EQU   ZZ2ITSE
ZZ2ITSEW EQU   ZZ2ITSE
@NM00058 EQU   ZZ2ITR+20
ZZ2ITREC EQU   ZZ2ITRE+1
@NM00057 EQU   ZZ2ITRE
ZZ2ITREP EQU   ZZ2ITRE
ZZ2ITREW EQU   ZZ2ITRE
@NM00056 EQU   ZZ2ITR+9
ZZ2ITRRC EQU   ZZ2ITR+8
ZZ2ITR2P EQU   ZZ2ITR+4
ZZ2ITRPP EQU   ZZ2ITR
@NM00055 EQU   ZZ2F
ZZ2F3270 EQU   ZZ2F
@NM00054 EQU   ZZ2+1544
ZZ2PGM   EQU   ZZ2+1536
@NM00053 EQU   ZZ2+1526
ZZ2CW    EQU   ZZ2+1524
@NM00052 EQU   ZZ2+1504
@NM00051 EQU   ZZ2+1352
ZZ2FFSYP EQU   ZZ2+1348
ZZ2SASYP EQU   ZZ2+1344
ZZ2RDSYP EQU   ZZ2+1340
ZZ2RASYP EQU   ZZ2+1336
ZZ2PHSYP EQU   ZZ2+1332
ZZ2ESSYP EQU   ZZ2+1328
ZZ200SYP EQU   ZZ2+1324
ZZ2SCWP  EQU   ZZ2+1320
ZZ2TTLP  EQU   ZZ2+1316
ZZ2LOADP EQU   ZZ2+1312
ZZ2VRESP EQU   ZZ2+1308
ZZ2CPPLE EQU   ZZ2CPPL+12
ZZ2CPPLP EQU   ZZ2CPPL+8
ZZ2CPPLU EQU   ZZ2CPPL+4
ZZ2VRSAP EQU   ZZ2+1288
ZZ2DVTP  EQU   ZZ2+1276
@NM00050 EQU   ZZ2+1272
@NM00049 EQU   ZZ2+1268
ZZ2RPLP  EQU   ZZ2+1260
ZZ2TCBP  EQU   ZZ2+1256
@NM00048 EQU   ZZ2+1252
ZZ2ZZ2P  EQU   ZZ2+1248
@NM00047 EQU   ZZ2+1112
ZZ2FPDRP EQU   ZZ2+1108
ZZ2FDSDP EQU   ZZ2+1104
ZZ2APDRP EQU   ZZ2+1100
ZZ2ADSDP EQU   ZZ2+1096
ZZ2ENQ0P EQU   ZZ2+1092
@NM00046 EQU   ZZ2+1080
ZZ2MSG0P EQU   ZZ2+1076
ZZ2FT25P EQU   ZZ2+1072
ZZ2MSGSP EQU   ZZ2+1060
ZZ2ALOCP EQU   ZZ2+1056
@NM00045 EQU   ZZ2+976
ZZ2TOD   EQU   ZZ2+968
ZZ2STGN  EQU   ZZ2STG+4
ZZ2STGP  EQU   ZZ2STG
@NM00044 EQU   ZZ2+952
ZZ2SCMDE EQU   ZZ2+944
ZZ2SCMDN EQU   ZZ2+936
ZZ2IDENT EQU   ZZ2+928
ZZ2A9999 EQU   ZZ2A+656
@NM00043 EQU   ZZ2A+224
@NM00042 EQU   ZZ2A+220
ZZ2AQD99 EQU   ZZ2AQD+60
@NM00041 EQU   ZZ2AQD+56
@NM00040 EQU   ZZ2AQDF
ZZ2AQDFA EQU   ZZ2AQDF
ZZ2AQDIL EQU   ZZ2AQD+48
ZZ2AQDIM EQU   ZZ2AQD+44
ZZ2AQDT9 EQU   ZZ2AQDT+34
ZZ2AQDTE EQU   ZZ2AQDT+33
ZZ2AQDTD EQU   ZZ2AQDT+2
@NM00039 EQU   ZZ2AQDT+1
ZZ2AQDTY EQU   ZZ2AQDT
ZZ2AQDT0 EQU   ZZ2AQDT
ZZ2AQDLB EQU   ZZ2AQD+9
ZZ2AQDOB EQU   ZZ2AQD+8
ZZ2AQDLE EQU   ZZ2AQD+4
ZZ2AQDOF EQU   ZZ2AQD
ZZ2AQD00 EQU   ZZ2AQD
ZZ2AQAS9 EQU   ZZ2AQAS+16
@NM00038 EQU   ZZ2AQAS+12
ZZ2AQAS2 EQU   ZZ2AQAS+8
ZZ2AQAS1 EQU   ZZ2AQAS+4
@NM00037 EQU   ZZ2AQAS+2
ZZ2AQAST EQU   ZZ2AQAS
ZZ2AQAS0 EQU   ZZ2AQAS
ZZ2ADPTA EQU   ZZ2ADPT
ZZ2ADPL  EQU   ZZ2ADP
ZZ2ADMTA EQU   ZZ2ADMT
ZZ2ADML  EQU   ZZ2ADM
ZZ2ADDTA EQU   ZZ2ADDT
ZZ2ADDL  EQU   ZZ2ADD
@NM00036 EQU   ZZ2A+72
ZZ2APIDB EQU   ZZ2APID+3
ZZ2APIDA EQU   ZZ2APID
@NM00035 EQU   ZZ2A+24
@NM00034 EQU   ZZ2AF+5
ZZ2AFX   EQU   ZZ2AF+5
@NM00033 EQU   ZZ2AF+3
ZZ2AFS   EQU   ZZ2AF+2
ZZ2AFD   EQU   ZZ2AF+2
ZZ2AFQ   EQU   ZZ2AF+2
ZZ2AF$   EQU   ZZ2AF+2
@NM00032 EQU   ZZ2AF+2
ZZ2AFM   EQU   ZZ2AF+2
@NM00031 EQU   ZZ2AF+2
@NM00030 EQU   ZZ2AF+1
ZZ2AFV   EQU   ZZ2AF+1
@NM00029 EQU   ZZ2AF+1
ZZ2AFC   EQU   ZZ2AF+1
@NM00028 EQU   ZZ2AF
ZZ2AFFS  EQU   ZZ2AF
ZZ2AFT   EQU   ZZ2AF
ZZ2AFP   EQU   ZZ2AF
@NM00027 EQU   ZZ2A+8
ZZ2ALINE EQU   ZZ2A+4
@NM00026 EQU   ZZ2A+3
ZZ2ASE   EQU   ZZ2A+2
ZZ2ACH   EQU   ZZ2A
@NM00025 EQU   ZZ2+264
@NM00024 EQU   ZZ2+263
ZZ2PRTT0 EQU   ZZ2PRTT
ZZ2PRTO  EQU   ZZ2PRT+2
ZZ2PRTL  EQU   ZZ2PRT
@NM00023 EQU   ZZ2AMD+56
ZZ2AMDXP EQU   ZZ2AMD+52
ZZ2AMDD  EQU   ZZ2AMD+48
ZZ2AMDL  EQU   ZZ2AMD+44
ZZ2AMDU  EQU   ZZ2AMD+28
ZZ2AMDF  EQU   ZZ2AMD+24
ZZ2AMDS  EQU   ZZ2AMD+20
ZZ2AMDC  EQU   ZZ2AMD+16
ZZ2AMDP  EQU   ZZ2AMD+12
ZZ2AMDB  EQU   ZZ2AMD+8
@NM00022 EQU   @NM00021
ZZ2AMD2  EQU   @NM00021
ZZ2AMD1  EQU   @NM00021
ZZ2AMD0  EQU   ZZ2AMD+6
ZZ2AMDA  EQU   ZZ2AMD+4
ZZ2AMDT  EQU   ZZ2AMD
ZZ199999 EQU   ZZ1+3072
@NM00020 EQU   ZZ1+2160
ZZ1TRTAS EQU   ZZ1+1904
ZZ1TRUPC EQU   ZZ1+1648
ZZ1TRCTX EQU   ZZ1+1392
ZZ1NASID EQU   ZZ1N+274
ZZ1NSTRL EQU   ZZ1N+272
ZZ1NOFF  EQU   ZZ1N+268
ZZ1NBDY  EQU   ZZ1N+264
ZZ1NADE  EQU   ZZ1N+260
ZZ1NADB  EQU   ZZ1N+256
ZZ1NSTR  EQU   ZZ1N
@NM00019 EQU   ZZ1+1080
ZZ1TREBC EQU   ZZ1+824
ZZ1TRHEX EQU   ZZ1+568
@NM00018 EQU   ZZ1+377
ZZ1USTAE EQU   ZZ1+376
@NM00017 EQU   ZZ1F+3
@NM00016 EQU   ZZ1F+2
ZZ1FPRNT EQU   ZZ1F+2
@NM00015 EQU   ZZ1F+1
ZZ1FTCAM EQU   ZZ1F+1
ZZ1FACCM EQU   ZZ1F+1
@NM00014 EQU   ZZ1F
ZZ1FM    EQU   ZZ1F
ZZ1FX    EQU   ZZ1F
ZZ1FU    EQU   ZZ1F
ZZ1EVEC  EQU   ZZ1EVE+1
@NM00013 EQU   ZZ1EVE
ZZ1EVEP  EQU   ZZ1EVE
ZZ1EVEW  EQU   ZZ1EVE
ZZ1ACMP  EQU   ZZ1ATTN
@NM00012 EQU   ZZ1+144
ZZ1FPP   EQU   ZZ1+140
ZZ1ZZ6P  EQU   ZZ1+136
@NM00011 EQU   ZZ1+84
ZZ1PLINE EQU   ZZ1+80
ZZ1PGSZ  EQU   ZZ1+76
ZZ1PCNT  EQU   ZZ1+72
@NM00010 EQU   ZZ1+68
ZZ1TPAGE EQU   ZZ1+64
ZZ1TLINE EQU   ZZ1+60
@NM00009 EQU   ZZ1+52
ZZ1DMCBP EQU   ZZ1+48
ZZ1DSDP  EQU   ZZ1+44
ZZ1PDRP  EQU   ZZ1+40
ZZ1ZZ2P  EQU   ZZ1+36
ZZ1327WP EQU   ZZ1+32
ZZ1ACBP  EQU   ZZ1+28
@NM00008 EQU   ZZ1+24
ZZ1PDCBP EQU   ZZ1+20
ZZ1BLRBL EQU   ZZ1+16
@NM00007 EQU   ZZ1+12
ZZ1PNULL EQU   ZZ1+8
ZZ1NULL  EQU   ZZ1+4
ZZ1IDE   EQU   ZZ1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00258 EQU   EXIT
@RF00265 EQU   @RC00262
@ENDDATA EQU   *
         END   BLSRRACR,(C'PLS2051',0701,78172)
