MSGA     TITLE 'BLSRMSGA--IPCS ADDRESS SPACE NAME FORMATTER            *
                        '
*/* CHANGE ACTIVITY -------------------------------------------------*/
*/*   THIS MODULE WAS WRITTEN FOR @G57LPLK                           */
*/*------------------------------------------------------------------*/
BLSRMSGA CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'BLSRMSGA  78.080'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         BLSUALLS R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(12),0(@01)                                 0002
*                                                                  0135
*/********************************************************************/
*/*                                                                  */
*/* BLSRMSGA--IPCS ADDRESS SPACE NAME FORMATTER                      */
*/*                                                                  */
*/********************************************************************/
*                                                                  0136
*   RETC=ZZZFLAGI;                  /* ANTICIPATE NORMAL COMPLETION  */
         SLR   RETC,RETC                                           0136
*   DO J1=1 TO DIM(XX) WHILE(RDAIT^=XXC(J1));/* FIND ADDRESS SPACE   */
         LA    J1,1                                                0137
@DL00137 L     @10,@PC00001+8                                      0137
         LR    @08,J1                                              0137
         SLA   @08,2                                               0137
         LA    @01,XXC-4(@08)                                      0137
         CLC   RDAIT(2,@10),0(@01)                                 0137
         BE    @DC00137                                            0137
*   END;                                                           0138
         AL    J1,@CF00050                                         0138
         C     J1,@CF00157                                         0138
         BNH   @DL00137                                            0138
@DC00137 DS    0H                                                  0139
*   IF J1<=DIM(XX) THEN                                            0139
*                                                                  0139
         C     J1,@CF00157                                         0139
         BH    @RF00139                                            0139
*     /***************************************************************/
*     /*                                                             */
*     /* ADDRESS SPACE SUPPORTED                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0140
*     DO;                           /* ADDRESS SPACE SUPPORTED       */
*       CALL EVAL(ADDR(E010)+XXO(J1))->XXE;/* COMPLETE MESSAGE       */
         LA    @15,E010                                            0141
         LR    @10,J1                                              0141
         SLA   @10,2                                               0141
         AH    @15,XXO-4(@10)                                      0141
         BALR  @14,@15                                             0141
*       CALL BLSUMPK1(ZZ2,MCXB);    /* REMOVE EXTRANEOUS BLANKS      */
         ST    R9,@AL00001                                         0142
         LA    @10,MCXB                                            0142
         ST    @10,@AL00001+4                                      0142
         L     @10,ZZ2BVTP(,R9)                                    0142
         L     @15,BVTMPK1P(,@10)                                  0142
         LA    @01,@AL00001                                        0142
         BALR  @14,@15                                             0142
*       MSG(1:MCXBL)=MCXB(1:MCXBL); /* TRANSCRIBE TO INPUT BUFFER    */
         L     @10,@PC00001+4                                      0143
         LH    @08,MCXBL                                           0143
         N     @08,@CF01087                                        0143
         BCTR  @08,0                                               0143
         EX    @08,@SM01088                                        0143
*     END;                                                         0144
*   ELSE                                                           0145
*     RETC=ZZZFLAGS;                /* RETURN CODE                   */
         B     @RC00139                                            0145
@RF00139 LA    RETC,12                                             0145
*   RETURN CODE(RETC);                                             0146
@RC00139 L     @13,4(,@13)                                         0146
         L     @00,@SIZDATD                                        0146
         LR    @01,@11                                             0146
         BLSUFRES R,LV=(0),A=(1)
         LR    @15,@03                                             0146
         L     @14,12(,@13)                                        0146
         LM    @00,@12,20(@13)                                     0146
         BR    @14                                                 0146
*                                                                  0147
*/********************************************************************/
*/*                                                                  */
*/* E010--MVS VIRTUAL STORAGE DATA                                   */
*/*                                                                  */
*/********************************************************************/
*                                                                  0147
*E010:                              /* MVS VIRTUAL STORAGE DATA      */
*   PROCEDURE;                                                     0147
E010     STM   @14,@12,@SA00002                                    0147
*   IF ZZ6DFMP='1'B THEN                                           0148
*                                                                  0148
         L     @10,ZZ2AZZ6P(,R9)                                   0148
         TM    ZZ6DFMP(@10),B'00100000'                            0148
         BNO   @RF00148                                            0148
*     /***************************************************************/
*     /*                                                             */
*     /* MULTI-PROCESSOR DUMP--CONTAINS CPU STATUS INFORMATION FOR   */
*     /* MORE THAN ONE CPU                                           */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0149
*     DO;                           /* MULTI-PROCESSOR DUMP          */
*       CALL E100;                  /* ADD CPU ADDRESS               */
         BAL   @14,E100                                            0150
*       DO;                         /* BLRCNVUC(RDAI2) FROM(UNSIGNED
*                                      BINARY)TO(CHARACTER)SET(MCXBT2
*                                      31)PATTERN('402020202120'X)OPT
*                                      IONS(PATTERN IN             0151
*                                      PLACE)REMARK(ASID)            */
*                                                                  0151
*         /***********************************************************/
*         /*                                                         */
*         /* ASID                                                    */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0152
*         CVD(RDAI2,PACKED);        /* UNSIGNED BINARY=>PACKED     0152
*                                      DECIMAL                       */
         L     @10,@PC00001+8                                      0152
         L     @10,RDAI2(,@10)                                     0152
         CVD   @10,PACKED                                          0152
*         ED(MCXBT231,PACKED(41:64));/* PACKED DECIMAL=>EBCDIC       */
         ED    MCXBT231(6),PACKED+5                                0153
*       END;                        /* BLRCNVUC(RDAI2) FROM(UNSIGNED
*                                      BINARY)TO(CHARACTER)SET(MCXBT2
*                                      31)PATTERN('402020202120'X)OPT
*                                      IONS(PATTERN IN             0154
*                                      PLACE)REMARK(ASID)            */
*     END;                                                         0155
*   ELSE                                                           0156
*                                                                  0156
*     /***************************************************************/
*     /*                                                             */
*     /* MULTIPLE PROCESOR QUALIFICATION DATA NOT AVAILABLE          */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0156
*     DO;                           /* NOT A MULTI-PROCESSOR DUMP    */
         B     @RC00148                                            0156
@RF00148 DS    0H                                                  0157
*       MCVB=MCVS;                  /* MCV LITERAL DATA              */
         MVC   MCVB(17),MCVS                                       0157
*       DO;                         /* BLRCNVUC(RDAI2) FROM(UNSIGNED
*                                      BINARY)TO(CHARACTER)SET(MCVBT3
*                                      )PATTERN('402020202120'X)OPTIO
*                                      NS(PATTERN IN               0158
*                                      PLACE)REMARK(ASID)            */
*                                                                  0158
*         /***********************************************************/
*         /*                                                         */
*         /* ASID                                                    */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0159
*         CVD(RDAI2,PACKED);        /* UNSIGNED BINARY=>PACKED     0159
*                                      DECIMAL                       */
         L     @10,@PC00001+8                                      0159
         L     @10,RDAI2(,@10)                                     0159
         CVD   @10,PACKED                                          0159
*         ED(MCVBT3,PACKED(41:64)); /* PACKED DECIMAL=>EBCDIC        */
         ED    MCVBT3(6),PACKED+5                                  0160
*       END;                        /* BLRCNVUC(RDAI2) FROM(UNSIGNED
*                                      BINARY)TO(CHARACTER)SET(MCVBT3
*                                      )PATTERN('402020202120'X)OPTIO
*                                      NS(PATTERN IN               0161
*                                      PLACE)REMARK(ASID)            */
*     END;                                                         0162
*   RETURN;                                                        0163
@EL00002 DS    0H                                                  0163
@EF00002 DS    0H                                                  0163
@ER00002 LM    @14,@12,@SA00002                                    0163
         BR    @14                                                 0163
*                                                                  0164
*/********************************************************************/
*/*                                                                  */
*/* E020--MVS REAL STORAGE DATA                                      */
*/*                                                                  */
*/********************************************************************/
*                                                                  0164
*E020:                              /* MVS REAL STORAGE DATA         */
*   ENTRY;                                                         0164
E020     STM   @14,@12,@SA00002                                    0164
*   IF ZZ6DFMP='1'B THEN                                           0165
*                                                                  0165
         L     @10,ZZ2AZZ6P(,R9)                                   0165
         TM    ZZ6DFMP(@10),B'00100000'                            0165
         BNO   @RF00165                                            0165
*     /***************************************************************/
*     /*                                                             */
*     /* MULTI-PROCESSOR DUMP--CONTAINS CPU STATUS INFORMATION FOR   */
*     /* MORE THAN ONE CPU                                           */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0166
*     DO;                           /* MULTI-PROCESSOR DUMP          */
*       CALL E100;                  /* ADD CPU ADDRESS               */
         BAL   @14,E100                                            0167
*       MCXBT23=MCRST2;             /* REAL STORAGE KEYWORD          */
         MVI   MCXBT23+4,C' '                                      0168
         MVC   MCXBT23+5(7),MCXBT23+4                              0168
         MVC   MCXBT23(4),MCRST2                                   0168
*       MCXBL=LENGTH(MCXB)-(LENGTH(MCXBT23)-LENGTH(MCRST2));       0169
         MVC   MCXBL(2),@CH01085                                   0169
*     END;                                                         0170
*   ELSE                                                           0171
*     MCRB=MCRS;                    /* REAL STORAGE MESSAGE          */
         B     @RC00165                                            0171
@RF00165 MVC   MCRB(9),MCRS                                        0171
*   RETURN;                                                        0172
         B     @EL00002                                            0172
*                                                                  0173
*/********************************************************************/
*/*                                                                  */
*/* E030--MVS ABSOLUTE STORAGE                                       */
*/*                                                                  */
*/********************************************************************/
*                                                                  0173
*E030:                              /* MVS ABSOLUTE STORAGE DATA     */
*   ENTRY;                                                         0173
E030     STM   @14,@12,@SA00002                                    0173
*   MAB=MAS;                        /* LITERAL MESSAGE TEXT          */
         MVC   MAB(13),MAS                                         0174
*   RETURN;                                                        0175
         B     @EL00002                                            0175
*                                                                  0176
*/********************************************************************/
*/*                                                                  */
*/* E040--MVS CPU STATUS DATA                                        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0176
*E040:                              /* MVS CPU STATUS DATA           */
*   ENTRY;                                                         0176
E040     STM   @14,@12,@SA00002                                    0176
*   IF ZZ6DFMP='1'B THEN                                           0177
*                                                                  0177
         L     @10,ZZ2AZZ6P(,R9)                                   0177
         TM    ZZ6DFMP(@10),B'00100000'                            0177
         BNO   @RF00177                                            0177
*     /***************************************************************/
*     /*                                                             */
*     /* MULTI-PROCESSOR DUMP--CONTAINS CPU STATUS INFORMATION FOR   */
*     /* MORE THAN ONE CPU                                           */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0178
*     DO;                           /* MULTI-PROCESSOR DUMP          */
*       CALL E100;                  /* ADD CPU ADDRESS               */
         BAL   @14,E100                                            0179
*       MCXBT23=MCST2;              /* STATUS KEYWORD                */
         MVI   MCXBT23+6,C' '                                      0180
         MVC   MCXBT23+7(5),MCXBT23+6                              0180
         MVC   MCXBT23(6),MCST2                                    0180
*       MCXBL=LENGTH(MCXB)-(LENGTH(MCXBT23)-LENGTH(MCST2));        0181
         MVC   MCXBL(2),@CH01086                                   0181
*     END;                                                         0182
*   ELSE                                                           0183
*     MCB=MCS;                      /* REAL STORAGE MESSAGE          */
         B     @RC00177                                            0183
@RF00177 MVC   MCB(11),MCS                                         0183
*   RETURN;                                                        0184
         B     @EL00002                                            0184
*                                                                  0185
*/********************************************************************/
*/*                                                                  */
*/* E050--MVS HEADER DATA                                            */
*/*                                                                  */
*/********************************************************************/
*                                                                  0185
*E050:                              /* MVS HEADER DATA               */
*   ENTRY;                                                         0185
E050     STM   @14,@12,@SA00002                                    0185
*   MHB=MHS;                        /* LITERAL MESSAGE TEXT          */
         MVC   MHB(11),MHS                                         0186
*   RETURN;                                                        0187
         B     @EL00002                                            0187
*   END E010;                                                      0188
         B     @EL00002                                            0188
*                                                                  0189
*/********************************************************************/
*/*                                                                  */
*/* E100--MVS STORAGE QUALIFIED BY CPU ADDRESS                       */
*/*                                                                  */
*/********************************************************************/
*                                                                  0189
*E100:                              /* MVS STORAGE QUALIFIED BY CPU  */
*   PROCEDURE;                                                     0189
E100     STM   @14,@12,12(@13)                                     0189
*   MCXB=MCXS;                      /* LITERAL MESSAGE TEXT          */
         MVC   MCXB(27),MCXS                                       0190
*   DO;                             /* BLRCNVUC(RDAI1) FROM(UNSIGNED
*                                      BINARY)TO(CHARACTER)SET(MCXBT2
*                                      1)PATTERN('40202120'X)OPTIONS(
*                                      PATTERN IN PLACE)REMARK(CPU 0191
*                                      ADDRESS)                      */
*                                                                  0191
*     /***************************************************************/
*     /*                                                             */
*     /* CPU ADDRESS                                                 */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0192
*     CVD(RDAI1,PACKED);            /* UNSIGNED BINARY=>PACKED     0192
*                                      DECIMAL                       */
         L     @10,@PC00001+8                                      0192
         L     @10,RDAI1(,@10)                                     0192
         CVD   @10,PACKED                                          0192
*     ED(MCXBT21,PACKED(49:64));    /* PACKED DECIMAL=>EBCDIC        */
         ED    MCXBT21(4),PACKED+6                                 0193
*   END;                            /* BLRCNVUC(RDAI1) FROM(UNSIGNED
*                                      BINARY)TO(CHARACTER)SET(MCXBT2
*                                      1)PATTERN('40202120'X)OPTIONS(
*                                      PATTERN IN PLACE)REMARK(CPU 0194
*                                      ADDRESS)                      */
*   RETURN;                                                        0195
@EL00003 DS    0H                                                  0195
@EF00003 DS    0H                                                  0195
@ER00003 LM    @14,@12,12(@13)                                     0195
         BR    @14                                                 0195
*   END E100;                                                      0196
*                                                                  0196
*/*BLSRPEND--DEBUGGING MODULE                                        */
*/*BLSUPEND--MVS IPCS MODULE                                         */
*                                                                  0197
*   DECLARE                         /* DATA FOR AHB MACROS           */
*     PACKED BIT(64) BOUNDARY(DWORD);/* DATA CONVERSION WORK AREA    */
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0198
*     I031F FIXED(31) BASED,                                       0198
*     I031P PTR(31) BASED,                                         0198
*     I015F FIXED(15) BASED,                                       0198
*     I015P PTR(15) BASED,                                         0198
*     I008P PTR(8) BASED,                                          0198
*     I001C CHAR(1) BASED;                                         0198
*   GENERATE NODEFS NOREFS DATA;                                   0199
*   END BLSRMSGA                    /* BLRPEND(BLSRMSGA)             */
*                                                                  0200
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (BLSRZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLSUZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLRFULL )                                       */
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */
*/*%INCLUDE SYSLIB  (IKJPSCB )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJUPT  )                                       */
*/*%INCLUDE SYSLIB  (BLSUSERV)                                       */
*/*%INCLUDE SYSLIB  (BLRSERV )                                       */
*/*%INCLUDE SYSLIB  (BLRSERVD)                                       */
*/*%INCLUDE SYSLIB  (BLSRSERV)                                       */
*                                                                  0200
*       ;                                                          0200
@EL00001 L     @13,4(,@13)                                         0200
@EF00001 L     @00,@SIZDATD                                        0200
         LR    @01,@11                                             0200
         BLSUFRES R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0200
         BR    @14                                                 0200
@DATA    DS    0H
@CH01085 DC    H'19'
@CH01086 DC    H'21'
@SM01088 MVC   MSG(0,@10),MCXB
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@SA00002 DS    15F
@AL00001 DS    2A
BLSRMSGA CSECT
         DS    0F
@CF00050 DC    F'1'
@CF00157 DC    F'5'
@CF01087 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
MCXB     DS    CL27
         ORG   MCXB
MCXBL    DS    FL2
MCXBO    DS    FL2
MCXBT    DS    CL23
         ORG   MCXBT
MCXBT1   DS    CL1
MCXBT2   DS    CL22
         ORG   MCXBT2
MCXBT20  DS    CL4
MCXBT21  DS    CL4
MCXBT22  DS    CL2
MCXBT23  DS    CL12
         ORG   MCXBT23
MCXBT230 DS    CL5
MCXBT231 DS    CL6
MCXBT232 DS    CL1
         ORG   MCXB+27
         DS    CL5
PACKED   DS    BL8
BLSRMSGA CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
MCXS     DS    CL27
         ORG   MCXS
MCXSL    DC    AL2(27)
MCXSO    DC    AL2(0)
MCXST    DS    CL23
         ORG   MCXST
MCXST1   DC    CL1' '
MCXST2   DS    CL22
         ORG   MCXST2
MCXST20  DC    CL4'CPU('
MCXST21  DC    X'40202120'
MCXST22  DC    CL2') '
MCXST23  DS    CL12
         ORG   MCXST23
MCXST230 DC    CL5'ASID('
MCXST231 DC    X'402020202120'
MCXST232 DC    CL1')'
         ORG   MCXS+27
         DS    CL1
MCS      DS    CL11
         ORG   MCS
MCSL     DC    AL2(11)
MCSO     DC    AL2(0)
MCST     DS    CL7
         ORG   MCST
MCST1    DC    CL1' '
MCST2    DC    CL6'STATUS'
         ORG   MCS+11
         DS    CL1
MCRS     DS    CL9
         ORG   MCRS
MCRSL    DC    AL2(9)
MCRSO    DC    AL2(0)
MCRST    DS    CL5
         ORG   MCRST
MCRST1   DC    CL1' '
MCRST2   DC    CL4'REAL'
         ORG   MCRS+9
         DS    CL1
MCVS     DS    CL17
         ORG   MCVS
MCVSL    DC    AL2(17)
MCVSO    DC    AL2(0)
MCVST    DS    CL13
         ORG   MCVST
MCVST1   DC    CL1' '
MCVST2   DC    CL5'ASID('
MCVST3   DC    X'402020202120'
MCVST4   DC    CL1')'
         ORG   MCVS+17
         DS    CL1
MAS      DS    CL13
         ORG   MAS
MASL     DC    AL2(13)
MASO     DC    AL2(0)
MAST     DS    CL9
         ORG   MAST
MAST1    DC    CL9' ABSOLUTE'
         ORG   MAS+13
         DS    CL1
MHS      DS    CL11
         ORG   MHS
MHSL     DC    AL2(11)
MHSO     DC    AL2(0)
MHST     DS    CL7
         ORG   MHST
MHST1    DC    CL7' HEADER'
         ORG   MHS+11
         DS    CL1
XX       DS    CL4
         ORG   XX+0
XXC      DC    CL2'CV'
XXO      DC    AL2(0)
         ORG   XX+4
         ORG   XX+4
         DC    CL2'CR'
         DC    AL2(E020-E010)
         ORG   XX+8
         ORG   XX+8
         DC    CL2'A '
         DC    AL2(E030-E010)
         ORG   XX+12
         ORG   XX+12
         DC    CL2'C '
         DC    AL2(E040-E010)
         ORG   XX+16
         ORG   XX+16
         DC    CL2'H '
         DC    AL2(E050-E010)
         ORG   XX+20
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSRMSGA CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSRMSGA+19)/20+7)/8)CL8'BLSRMSGA'
@DATD    DSECT
         DS    0H
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSRMSGA CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RETC     EQU   @03
J1       EQU   @02
R9       EQU   @09
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
RB       EQU   @11
RD       EQU   @13
RE       EQU   @14
RF       EQU   @15
RA       EQU   @10
RC       EQU   @12
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
ZZ1      EQU   0
ZZ1ATTN  EQU   ZZ1+360
ZZ1EVE   EQU   ZZ1ATTN+4
ZZ1F     EQU   ZZ1+368
ZZ1N     EQU   ZZ1+1116
ZZ2      EQU   0
ZZ2AMD   EQU   ZZ2
@NM00013 EQU   ZZ2AMD+7
ZZ2PRT   EQU   ZZ2+138
ZZ2PRTT  EQU   ZZ2PRT+4
ZZ2PRTT1 EQU   ZZ2PRTT+1
ZZ2A     EQU   ZZ2+272
ZZ2AF    EQU   ZZ2A+16
ZZ2APID  EQU   ZZ2A+64
ZZ2AD    EQU   ZZ2A+74
ZZ2ADD   EQU   ZZ2AD
ZZ2ADDT  EQU   ZZ2ADD+2
ZZ2ADM   EQU   ZZ2AD+46
ZZ2ADMT  EQU   ZZ2ADM+2
ZZ2ADP   EQU   ZZ2AD+56
ZZ2ADPT  EQU   ZZ2ADP+2
ZZ2AZZ6P EQU   ZZ2A+140
ZZ2AQAS  EQU   ZZ2A+144
ZZ2AQD   EQU   ZZ2A+160
ZZ2AQDT  EQU   ZZ2AQD+10
ZZ2AQDF  EQU   ZZ2AQD+52
ZZ2STG   EQU   ZZ2+960
ZZ2ALLOP EQU   ZZ2+992
ZZ2FREEP EQU   ZZ2+996
ZZ2FF19P EQU   ZZ2+1000
ZZ2FRE1P EQU   ZZ2+1004
ZZ2FF18P EQU   ZZ2+1008
ZZ2DYNAP EQU   ZZ2+1012
ZZ2ZZ2CP EQU   ZZ2+1016
ZZ2ZZ2DP EQU   ZZ2+1020
ZZ2STAIP EQU   ZZ2+1024
ZZ2FF02P EQU   ZZ2+1028
ZZ2GETLP EQU   ZZ2+1032
ZZ2PARSP EQU   ZZ2+1036
ZZ2PTGTP EQU   ZZ2+1040
ZZ2PUTLP EQU   ZZ2+1044
ZZ2SCANP EQU   ZZ2+1048
ZZ2STCKP EQU   ZZ2+1052
ZZ2TRMOP EQU   ZZ2+1064
ZZ2TRMVP EQU   ZZ2+1068
ZZ2PUTNP EQU   ZZ2+1084
ZZ2TRMNP EQU   ZZ2+1088
ZZ2ZZ1P  EQU   ZZ2+1264
ZZ2BVTP  EQU   ZZ2+1280
ZZ2RVTP  EQU   ZZ2+1284
ZZ2CPPL  EQU   ZZ2+1292
ZZ2CPPLC EQU   ZZ2CPPL
ZZ2ITR   EQU   ZZ2+2840
ZZ2ITRE  EQU   ZZ2ITR+16
ZZ2ITSE  EQU   ZZ2+2864
ZZ2ES    EQU   ZZ2+2872
ZZ2AMDX  EQU   ZZ2+7160
ZZ2AXO   EQU   ZZ2+7934
ZZ2AXOT  EQU   ZZ2AXO+2
CMD      EQU   0
CMDT     EQU   CMD+4
PSCB     EQU   0
PSCBATR1 EQU   PSCB+16
ECT      EQU   0
ECTSWS   EQU   ECT+28
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
UPT      EQU   0
UPTSWS   EQU   UPT+12
SA       EQU   0
SA1      EQU   SA
SAR      EQU   SA+12
SAR1     EQU   SAR+12
BLSUMPK1 EQU   0
BVT      EQU   0
BVTPUTLP EQU   BVT+4
BVTPUTOP EQU   BVT+12
BVTPUTTP EQU   BVT+16
BVTPUTVP EQU   BVT+20
BVTPUTAP EQU   BVT+24
BVTPRTTP EQU   BVT+28
BVTPRTAP EQU   BVT+32
BVTPUTDP EQU   BVT+36
BVTMONP  EQU   BVT+40
BVTMON2P EQU   BVT+44
BVTVSARP EQU   BVT+48
BVTVSENP EQU   BVT+64
BVTVSERP EQU   BVT+68
BVTVSGEP EQU   BVT+72
BVTVSGUP EQU   BVT+76
BVTVSPOP EQU   BVT+80
BVTVSPUP EQU   BVT+84
BVTMPKNP EQU   BVT+104
BVTMONLP EQU   BVT+108
BVTPUTCP EQU   BVT+132
BVTMPK1P EQU   BVT+136
BVTZZ2RP EQU   BVT+140
BVTPGMRP EQU   BVT+144
BVTMONAP EQU   BVT+148
BVTBLDDP EQU   BVT+152
BVTBLDLP EQU   BVT+156
BVTPGMCP EQU   BVT+160
BVTPGMDP EQU   BVT+164
BVTPGMLP EQU   BVT+168
BVTMONCP EQU   BVT+180
BVTMONDP EQU   BVT+184
BVTMONTP EQU   BVT+188
BVTPARIP EQU   BVT+192
BVTPARUP EQU   BVT+196
BVTPRTNP EQU   BVT+204
BVTVSCRP EQU   BVT+208
BVTVSMRP EQU   BVT+212
BVTMONXP EQU   BVT+216
BVTTRMAP EQU   BVT+228
ZZ6      EQU   0
ZZ6D     EQU   ZZ6+128
ZZ6DD    EQU   ZZ6D+8
ZZ6DDT   EQU   ZZ6DD+4
ZZ6DQA   EQU   ZZ6D+68
ZZ6DF    EQU   ZZ6D+92
ZZ6DFMP  EQU   ZZ6DF
ZZ6B     EQU   ZZ6+768
RVT      EQU   0
RVTADDRP EQU   RVT
RVTT01P  EQU   RVT+4
RVTTAP   EQU   RVT+8
RVTTBP   EQU   RVT+12
RVTTCP   EQU   RVT+16
RVTTFP   EQU   RVT+24
RVTTYP   EQU   RVT+40
RVTT02P  EQU   RVT+48
RVTT03P  EQU   RVT+52
RVTT04P  EQU   RVT+56
RVTACCLP EQU   RVT+60
RVTRACCP EQU   RVT+64
RVTTLP   EQU   RVT+68
RVTTMP   EQU   RVT+72
RVTTUP   EQU   RVT+80
RVTESGEP EQU   RVT+84
RVTESGUP EQU   RVT+88
RVTESARP EQU   RVT+92
RVTRAARP EQU   RVT+96
RVTRAGEP EQU   RVT+100
RVTADDPP EQU   RVT+104
RVTACCQP EQU   RVT+108
RVTSAGUP EQU   RVT+124
RVTSAGEP EQU   RVT+128
RVTESCKP EQU   RVT+132
RVTMSGDP EQU   RVT+140
RVTADDTP EQU   RVT+160
RVTADDUP EQU   RVT+164
RVTADD1P EQU   RVT+176
RVTADD2P EQU   RVT+180
RVTRSAGP EQU   RVT+184
RVTMSGBP EQU   RVT+188
RVTADDSP EQU   RVT+192
RVTADD3P EQU   RVT+196
RVTT05P  EQU   RVT+200
RVTPADSP EQU   RVT+204
RVTTRP   EQU   RVT+228
RVTADD4P EQU   RVT+232
RVTSAPCP EQU   RVT+236
RVTSAARP EQU   RVT+240
RVTSAGNP EQU   RVT+244
RVTT06P  EQU   RVT+248
RVTSAGCP EQU   RVT+252
RVTSAGQP EQU   RVT+256
RVTESGCP EQU   RVT+260
RVTESGQP EQU   RVT+264
RVTDUCKP EQU   RVT+276
RVTDUCCP EQU   RVT+280
XXE      EQU   0
BLSRACC  EQU   0
BLSRACCL EQU   0
BLSRACCQ EQU   0
BLSRADDP EQU   0
BLSRADDR EQU   0
BLSRADDS EQU   0
BLSRADDT EQU   0
BLSRADDU EQU   0
BLSRADD1 EQU   0
BLSRADD2 EQU   0
BLSRADD3 EQU   0
BLSRADD4 EQU   0
BLSRDUCC EQU   0
BLSRDUCK EQU   0
BLSRESAR EQU   0
BLSRESCK EQU   0
BLSRESGC EQU   0
BLSRESGE EQU   0
BLSRESGQ EQU   0
BLSRESGU EQU   0
BLSRMSGB EQU   0
BLSRMSGD EQU   0
BLSRPADS EQU   0
BLSRRAAR EQU   0
BLSRRAGE EQU   0
BLSRSAAR EQU   0
BLSRSAG  EQU   0
BLSRSAGC EQU   0
BLSRSAGE EQU   0
BLSRSAGN EQU   0
BLSRSAGQ EQU   0
BLSRSAGU EQU   0
BLSRSAPC EQU   0
BLSTA    EQU   0
BLSTB    EQU   0
BLSTC    EQU   0
BLSTF    EQU   0
BLSTL    EQU   0
BLSTM    EQU   0
BLSTR    EQU   0
BLSTU    EQU   0
BLSTY    EQU   0
BLST01   EQU   0
BLST02   EQU   0
BLST03   EQU   0
BLST04   EQU   0
BLST05   EQU   0
BLST06   EQU   0
BLSUALLO EQU   0
BLSUBLDD EQU   0
BLSUBLDL EQU   0
BLSUDYNA EQU   0
BLSUFREE EQU   0
BLSUFRE1 EQU   0
BLSUMON  EQU   0
BLSUMONA EQU   0
BLSUMONC EQU   0
BLSUMOND EQU   0
BLSUMONL EQU   0
BLSUMONT EQU   0
BLSUMONX EQU   0
BLSUMON2 EQU   0
BLSUMPKN EQU   0
BLSUPARI EQU   0
BLSUPARU EQU   0
BLSUPGMC EQU   0
BLSUPGMD EQU   0
BLSUPGML EQU   0
BLSUPGMR EQU   0
BLSUPRTA EQU   0
BLSUPRTN EQU   0
BLSUPRTT EQU   0
BLSUPUTA EQU   0
BLSUPUTC EQU   0
BLSUPUTD EQU   0
BLSUPUTL EQU   0
BLSUPUTN EQU   0
BLSUPUTO EQU   0
BLSUPUTT EQU   0
BLSUPUTV EQU   0
BLSUSTAI EQU   0
BLSUTRMA EQU   0
BLSUTRMN EQU   0
BLSUTRMO EQU   0
BLSUTRMV EQU   0
BLSUVSAR EQU   0
BLSUVSCR EQU   0
BLSUVSEN EQU   0
BLSUVSER EQU   0
BLSUVSGE EQU   0
BLSUVSGU EQU   0
BLSUVSMR EQU   0
BLSUVSPO EQU   0
BLSUVSPU EQU   0
BLSUZZ2C EQU   0
BLSUZZ2D EQU   0
BLSUZZ2R EQU   0
IKJEFF02 EQU   0
IKJEFF18 EQU   0
IKJEFF19 EQU   0
IKJGETL  EQU   0
IKJPARS  EQU   0
IKJPTGT  EQU   0
IKJPUTL  EQU   0
IKJSCAN  EQU   0
IKJSTCK  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
PZ2      EQU   0
MSG      EQU   0
MSGT     EQU   MSG+4
MSGT1    EQU   MSGT
RDAI     EQU   0
RDAIT    EQU   RDAI
RDAI1    EQU   RDAI+4
RDAI2    EQU   RDAI+8
CPPL     EQU   ZZ2CPPL
CPPLUPT  EQU   CPPL+4
CPPLPSCB EQU   CPPL+8
CPPLECT  EQU   CPPL+12
MCB      EQU   MCXB
MCBT     EQU   MCB+4
MCRB     EQU   MCXB
MCRBT    EQU   MCRB+4
MCVB     EQU   MCXB
MCVBT    EQU   MCVB+4
MCVBT3   EQU   MCVBT+6
MAB      EQU   MCXB
MABT     EQU   MAB+4
MHB      EQU   MCXB
MHBT     EQU   MHB+4
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
MHBT1    EQU   MHBT
MHBO     EQU   MHB+2
MHBL     EQU   MHB
MABT1    EQU   MABT
MABO     EQU   MAB+2
MABL     EQU   MAB
MCVBT4   EQU   MCVBT+12
MCVBT2   EQU   MCVBT+1
MCVBT1   EQU   MCVBT
MCVBO    EQU   MCVB+2
MCVBL    EQU   MCVB
MCRBT2   EQU   MCRBT+1
MCRBT1   EQU   MCRBT
MCRBO    EQU   MCRB+2
MCRBL    EQU   MCRB
MCBT2    EQU   MCBT+1
MCBT1    EQU   MCBT
MCBO     EQU   MCB+2
MCBL     EQU   MCB
CPPLCBUF EQU   CPPL
RDAI9    EQU   RDAI+16
@NM00078 EQU   RDAI+12
@NM00077 EQU   RDAI+2
RDAI0    EQU   RDAI
MSGT14   EQU   MSGT1+17
MSGT13   EQU   MSGT1+14
MSGT12   EQU   MSGT1+7
MSGT11   EQU   MSGT1+5
MSGT10   EQU   MSGT1
MSGO     EQU   MSG+2
MSGL     EQU   MSG
RVT99999 EQU   RVT+384
RVT0096P EQU   RVT+380
RVT0095P EQU   RVT+376
RVT0094P EQU   RVT+372
RVT0093P EQU   RVT+368
RVT0092P EQU   RVT+364
RVT0091P EQU   RVT+360
RVT0090P EQU   RVT+356
RVT0089P EQU   RVT+352
RVT0088P EQU   RVT+348
RVT0087P EQU   RVT+344
RVT0086P EQU   RVT+340
RVT0085P EQU   RVT+336
RVT0084P EQU   RVT+332
RVT0083P EQU   RVT+328
RVT0082P EQU   RVT+324
RVT0081P EQU   RVT+320
RVT0080P EQU   RVT+316
RVT0079P EQU   RVT+312
RVT0078P EQU   RVT+308
RVT0077P EQU   RVT+304
RVT0076P EQU   RVT+300
RVT0075P EQU   RVT+296
RVT0074P EQU   RVT+292
RVT0073P EQU   RVT+288
RVT0072P EQU   RVT+284
RVTDTUTP EQU   RVT+272
RVTDTMTP EQU   RVT+268
RVT0057P EQU   RVT+224
RVT0056P EQU   RVT+220
RVT0055P EQU   RVT+216
RVT0054P EQU   RVT+212
RVT0053P EQU   RVT+208
RVT0044P EQU   RVT+172
RVT0043P EQU   RVT+168
RVT0040P EQU   RVT+156
RVT0039P EQU   RVT+152
RVT0038P EQU   RVT+148
RVT0037P EQU   RVT+144
RVTMSGAP EQU   RVT+136
RVT0031P EQU   RVT+120
RVT0030P EQU   RVT+116
RVT0029P EQU   RVT+112
RVT0020P EQU   RVT+76
RVT0012P EQU   RVT+44
RVT0010P EQU   RVT+36
RVT0009P EQU   RVT+32
RVT0008P EQU   RVT+28
RVT0006P EQU   RVT+20
ZZ69999  EQU   ZZ6+1792
ZZ6BRB   EQU   ZZ6B+12
ZZ6BRC   EQU   ZZ6B+8
@NM00076 EQU   ZZ6B+6
ZZ6BFL   EQU   ZZ6B+4
ZZ6BDA   EQU   ZZ6B
@NM00075 EQU   ZZ6+540
ZZ6BUFI  EQU   ZZ6+536
ZZ6BUFP  EQU   ZZ6+532
ZZ6FILE  EQU   ZZ6+524
ZZ6BUFB  EQU   ZZ6+520
ZZ6BUFL  EQU   ZZ6+518
ZZ6BUFN  EQU   ZZ6+516
ZZ6ZZ6P  EQU   ZZ6+512
@NM00074 EQU   ZZ6+256
ZZ6D999  EQU   ZZ6D+128
@NM00073 EQU   ZZ6D+116
ZZ6DCAP  EQU   ZZ6D+112
ZZ6DPRP  EQU   ZZ6D+108
ZZ6DDA2  EQU   ZZ6D+104
ZZ6DDA1  EQU   ZZ6D+100
@NM00072 EQU   ZZ6DF
ZZ6DFSU  EQU   ZZ6DF
ZZ6DFST  EQU   ZZ6DF
ZZ6DFAB  EQU   ZZ6DF
ZZ6DFDU  EQU   ZZ6DF
ZZ6DFBS  EQU   ZZ6DF
ZZ6DQ2   EQU   ZZ6D+88
ZZ6DQ1   EQU   ZZ6D+84
ZZ6DQA9  EQU   ZZ6DQA+16
@NM00071 EQU   ZZ6DQA+12
ZZ6DQA2  EQU   ZZ6DQA+8
ZZ6DQA1  EQU   ZZ6DQA+4
@NM00070 EQU   ZZ6DQA+2
ZZ6DQAT  EQU   ZZ6DQA
ZZ6DQA0  EQU   ZZ6DQA
ZZ6DRDX  EQU   ZZ6D+64
ZZ6DELK  EQU   ZZ6D+64
ZZ6DMEM  EQU   ZZ6D+56
ZZ6DDT1  EQU   ZZ6DDT
ZZ6DDO   EQU   ZZ6DD+2
ZZ6DDL   EQU   ZZ6DD
@NM00069 EQU   ZZ6D+2
ZZ6DRID  EQU   ZZ6D
ZZ6RDCB  EQU   ZZ6
ZZ60000  EQU   ZZ6
BVT99999 EQU   BVT+256
BVT0064P EQU   BVT+252
BVT0063P EQU   BVT+248
BVT0062P EQU   BVT+244
BVT0061P EQU   BVT+240
BVT0060P EQU   BVT+236
BVT0059P EQU   BVT+232
BVT0057P EQU   BVT+224
BVT0056P EQU   BVT+220
BVTSTBLP EQU   BVT+200
BVT0045P EQU   BVT+176
BVT0044P EQU   BVT+172
BVT0033P EQU   BVT+128
BVT0032P EQU   BVT+124
BVT0031P EQU   BVT+120
BVT0030P EQU   BVT+116
BVT0029P EQU   BVT+112
BVT0026P EQU   BVT+100
BVT0025P EQU   BVT+96
BVT0024P EQU   BVT+92
BVT0023P EQU   BVT+88
BVT0016P EQU   BVT+60
BVT0015P EQU   BVT+56
BVT0014P EQU   BVT+52
BVT0003P EQU   BVT+8
BVT0001P EQU   BVT
SA99     EQU   SA+72
SARC     EQU   SAR+56
SARB     EQU   SAR+52
SARA     EQU   SAR+48
SAR9     EQU   SAR+44
SAR8     EQU   SAR+40
SAR7     EQU   SAR+36
SAR6     EQU   SAR+32
SAR5     EQU   SAR+28
SAR4     EQU   SAR+24
SAR3     EQU   SAR+20
SAR2     EQU   SAR+16
SAR0     EQU   SAR+8
SARF     EQU   SAR+4
SARE     EQU   SAR
SAFWD    EQU   SA+8
SABAK    EQU   SA+4
SA1L     EQU   SA1+1
SA1P     EQU   SA1
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00068 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00067 EQU   UPT
@NM00066 EQU   ECT+52
@NM00065 EQU   ECT+48
@NM00064 EQU   ECT+44
@NM00063 EQU   ECTSWS2+1
@NM00062 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00061 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00060 EQU   PSCB+36
@NM00059 EQU   PSCB+32
@NM00058 EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00057 EQU   PSCBATR1
@NM00056 EQU   PSCBATR1
@NM00055 EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
PSCBUSRL EQU   PSCB+7
PSCBUSER EQU   PSCB
CMDT1    EQU   CMDT
CMDO     EQU   CMD+2
CMDL     EQU   CMD
ZZ299999 EQU   ZZ2+8192
ZZ2AXOT1 EQU   ZZ2AXOT
ZZ2AXOL  EQU   ZZ2AXO
@NM00054 EQU   ZZ2+7288
@NM00053 EQU   ZZ2AMDX+4
ZZ2AMDXC EQU   ZZ2AMDX
ZZ2HSD   EQU   ZZ2+3056
@NM00052 EQU   ZZ2ES
@NM00051 EQU   ZZ2+2868
ZZ2ITSEC EQU   ZZ2ITSE+1
@NM00050 EQU   ZZ2ITSE
ZZ2ITSEP EQU   ZZ2ITSE
ZZ2ITSEW EQU   ZZ2ITSE
@NM00049 EQU   ZZ2ITR+20
ZZ2ITREC EQU   ZZ2ITRE+1
@NM00048 EQU   ZZ2ITRE
ZZ2ITREP EQU   ZZ2ITRE
ZZ2ITREW EQU   ZZ2ITRE
@NM00047 EQU   ZZ2ITR+9
ZZ2ITRRC EQU   ZZ2ITR+8
ZZ2ITR2P EQU   ZZ2ITR+4
ZZ2ITRPP EQU   ZZ2ITR
@NM00046 EQU   ZZ2+1544
ZZ2PGM   EQU   ZZ2+1536
@NM00045 EQU   ZZ2+1526
ZZ2CW    EQU   ZZ2+1524
@NM00044 EQU   ZZ2+1504
@NM00043 EQU   ZZ2+1352
ZZ2FFSYP EQU   ZZ2+1348
ZZ2SASYP EQU   ZZ2+1344
ZZ2RDSYP EQU   ZZ2+1340
ZZ2RASYP EQU   ZZ2+1336
ZZ2PHSYP EQU   ZZ2+1332
ZZ2ESSYP EQU   ZZ2+1328
ZZ200SYP EQU   ZZ2+1324
ZZ2SCWP  EQU   ZZ2+1320
ZZ2TTLP  EQU   ZZ2+1316
ZZ2LOADP EQU   ZZ2+1312
ZZ2VRESP EQU   ZZ2+1308
ZZ2CPPLE EQU   ZZ2CPPL+12
ZZ2CPPLP EQU   ZZ2CPPL+8
ZZ2CPPLU EQU   ZZ2CPPL+4
ZZ2VRSAP EQU   ZZ2+1288
ZZ2DVTP  EQU   ZZ2+1276
@NM00042 EQU   ZZ2+1272
@NM00041 EQU   ZZ2+1268
ZZ2RPLP  EQU   ZZ2+1260
ZZ2TCBP  EQU   ZZ2+1256
@NM00040 EQU   ZZ2+1252
ZZ2ZZ2P  EQU   ZZ2+1248
@NM00039 EQU   ZZ2+1112
ZZ2FPDRP EQU   ZZ2+1108
ZZ2FDSDP EQU   ZZ2+1104
ZZ2APDRP EQU   ZZ2+1100
ZZ2ADSDP EQU   ZZ2+1096
ZZ2ENQ0P EQU   ZZ2+1092
@NM00038 EQU   ZZ2+1080
ZZ2MSG0P EQU   ZZ2+1076
ZZ2FT25P EQU   ZZ2+1072
ZZ2MSGSP EQU   ZZ2+1060
ZZ2ALOCP EQU   ZZ2+1056
@NM00037 EQU   ZZ2+976
ZZ2TOD   EQU   ZZ2+968
ZZ2STGN  EQU   ZZ2STG+4
ZZ2STGP  EQU   ZZ2STG
@NM00036 EQU   ZZ2+952
ZZ2SCMDE EQU   ZZ2+944
ZZ2SCMDN EQU   ZZ2+936
ZZ2IDENT EQU   ZZ2+928
ZZ2A9999 EQU   ZZ2A+656
@NM00035 EQU   ZZ2A+224
@NM00034 EQU   ZZ2A+220
ZZ2AQD99 EQU   ZZ2AQD+60
@NM00033 EQU   ZZ2AQD+56
@NM00032 EQU   ZZ2AQDF
ZZ2AQDFA EQU   ZZ2AQDF
ZZ2AQDIL EQU   ZZ2AQD+48
ZZ2AQDIM EQU   ZZ2AQD+44
ZZ2AQDT9 EQU   ZZ2AQDT+34
ZZ2AQDTE EQU   ZZ2AQDT+33
ZZ2AQDTD EQU   ZZ2AQDT+2
@NM00031 EQU   ZZ2AQDT+1
ZZ2AQDTY EQU   ZZ2AQDT
ZZ2AQDT0 EQU   ZZ2AQDT
ZZ2AQDLB EQU   ZZ2AQD+9
ZZ2AQDOB EQU   ZZ2AQD+8
ZZ2AQDLE EQU   ZZ2AQD+4
ZZ2AQDOF EQU   ZZ2AQD
ZZ2AQD00 EQU   ZZ2AQD
ZZ2AQAS9 EQU   ZZ2AQAS+16
@NM00030 EQU   ZZ2AQAS+12
ZZ2AQAS2 EQU   ZZ2AQAS+8
ZZ2AQAS1 EQU   ZZ2AQAS+4
@NM00029 EQU   ZZ2AQAS+2
ZZ2AQAST EQU   ZZ2AQAS
ZZ2AQAS0 EQU   ZZ2AQAS
ZZ2ADPTA EQU   ZZ2ADPT
ZZ2ADPL  EQU   ZZ2ADP
ZZ2ADMTA EQU   ZZ2ADMT
ZZ2ADML  EQU   ZZ2ADM
ZZ2ADDTA EQU   ZZ2ADDT
ZZ2ADDL  EQU   ZZ2ADD
@NM00028 EQU   ZZ2A+72
ZZ2APIDB EQU   ZZ2APID+3
ZZ2APIDA EQU   ZZ2APID
@NM00027 EQU   ZZ2A+24
@NM00026 EQU   ZZ2AF+5
ZZ2AFX   EQU   ZZ2AF+5
@NM00025 EQU   ZZ2AF+3
ZZ2AFS   EQU   ZZ2AF+2
ZZ2AFD   EQU   ZZ2AF+2
ZZ2AFQ   EQU   ZZ2AF+2
ZZ2AF$   EQU   ZZ2AF+2
@NM00024 EQU   ZZ2AF+2
ZZ2AFM   EQU   ZZ2AF+2
@NM00023 EQU   ZZ2AF+2
@NM00022 EQU   ZZ2AF+1
ZZ2AFV   EQU   ZZ2AF+1
@NM00021 EQU   ZZ2AF+1
ZZ2AFC   EQU   ZZ2AF+1
@NM00020 EQU   ZZ2AF
ZZ2AFFS  EQU   ZZ2AF
ZZ2AFT   EQU   ZZ2AF
ZZ2AFP   EQU   ZZ2AF
@NM00019 EQU   ZZ2A+8
ZZ2ALINE EQU   ZZ2A+4
@NM00018 EQU   ZZ2A+3
ZZ2ASE   EQU   ZZ2A+2
ZZ2ACH   EQU   ZZ2A
@NM00017 EQU   ZZ2+264
@NM00016 EQU   ZZ2+263
ZZ2PRTT0 EQU   ZZ2PRTT
ZZ2PRTO  EQU   ZZ2PRT+2
ZZ2PRTL  EQU   ZZ2PRT
@NM00015 EQU   ZZ2AMD+56
ZZ2AMDXP EQU   ZZ2AMD+52
ZZ2AMDD  EQU   ZZ2AMD+48
ZZ2AMDL  EQU   ZZ2AMD+44
ZZ2AMDU  EQU   ZZ2AMD+28
ZZ2AMDF  EQU   ZZ2AMD+24
ZZ2AMDS  EQU   ZZ2AMD+20
ZZ2AMDC  EQU   ZZ2AMD+16
ZZ2AMDP  EQU   ZZ2AMD+12
ZZ2AMDB  EQU   ZZ2AMD+8
@NM00014 EQU   @NM00013
ZZ2AMD2  EQU   @NM00013
ZZ2AMD1  EQU   @NM00013
ZZ2AMD0  EQU   ZZ2AMD+6
ZZ2AMDA  EQU   ZZ2AMD+4
ZZ2AMDT  EQU   ZZ2AMD
ZZ199999 EQU   ZZ1+3072
@NM00012 EQU   ZZ1+2160
ZZ1TRTAS EQU   ZZ1+1904
ZZ1TRUPC EQU   ZZ1+1648
ZZ1TRCTX EQU   ZZ1+1392
ZZ1NASID EQU   ZZ1N+274
ZZ1NSTRL EQU   ZZ1N+272
ZZ1NOFF  EQU   ZZ1N+268
ZZ1NBDY  EQU   ZZ1N+264
ZZ1NADE  EQU   ZZ1N+260
ZZ1NADB  EQU   ZZ1N+256
ZZ1NSTR  EQU   ZZ1N
@NM00011 EQU   ZZ1+1080
ZZ1TREBC EQU   ZZ1+824
ZZ1TRHEX EQU   ZZ1+568
@NM00010 EQU   ZZ1+377
ZZ1USTAE EQU   ZZ1+376
@NM00009 EQU   ZZ1F+1
@NM00008 EQU   ZZ1F
ZZ1FM    EQU   ZZ1F
ZZ1FX    EQU   ZZ1F
ZZ1FU    EQU   ZZ1F
ZZ1EVEC  EQU   ZZ1EVE+1
@NM00007 EQU   ZZ1EVE
ZZ1EVEP  EQU   ZZ1EVE
ZZ1EVEW  EQU   ZZ1EVE
ZZ1ACMP  EQU   ZZ1ATTN
@NM00006 EQU   ZZ1+144
ZZ1FPP   EQU   ZZ1+140
ZZ1ZZ6P  EQU   ZZ1+136
@NM00005 EQU   ZZ1+84
ZZ1PLINE EQU   ZZ1+80
ZZ1PGSZ  EQU   ZZ1+76
ZZ1PCNT  EQU   ZZ1+72
@NM00004 EQU   ZZ1+68
ZZ1TPAGE EQU   ZZ1+64
ZZ1TLINE EQU   ZZ1+60
@NM00003 EQU   ZZ1+52
ZZ1DMCBP EQU   ZZ1+48
ZZ1DSDP  EQU   ZZ1+44
ZZ1PDRP  EQU   ZZ1+40
ZZ1ZZ2P  EQU   ZZ1+36
ZZ1327WP EQU   ZZ1+32
ZZ1ACBP  EQU   ZZ1+28
@NM00002 EQU   ZZ1+24
ZZ1PDCBP EQU   ZZ1+20
ZZ1BLRBL EQU   ZZ1+16
@NM00001 EQU   ZZ1+12
ZZ1PNULL EQU   ZZ1+8
ZZ1NULL  EQU   ZZ1+4
ZZ1IDE   EQU   ZZ1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00148 EQU   @EL00002
@RC00165 EQU   @EL00002
@RC00177 EQU   @EL00002
@ENDDATA EQU   *
         END   BLSRMSGA,(C'PLS1542',0701,78080)
