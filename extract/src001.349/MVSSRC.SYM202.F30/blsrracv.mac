RACV     TITLE 'BLSRRACV--BUILD MVS VIRTUAL ADDRESS SPACE DESCRIPTION  *
                        '
*/* CHANGE ACTIVITY -------------------------------------------------*/
*/*   THIS MODULE WAS WRITTEN FOR @G57LPRW                           */
*/*------------------------------------------------------------------*/
BLSRRACV CSECT ,                                                01S0002
@MAINENT DS    0H                                               01S0002
         USING *,@15                                            01S0002
         B     @PROLOG                                          01S0002
         DC    AL1(16)                                          01S0002
         DC    C'BLSRRACV  78.058'                              01S0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0002
         BALR  @12,0                                            01S0002
@PSTART  DS    0H                                               01S0002
         USING @PSTART,@12                                      01S0002
         L     @00,@SIZDATD                                     01S0002
         BLSUALLS R,LV=(0)
         LR    @11,@01                                          01S0002
         USING @DATD,@11                                        01S0002
         ST    @13,@SA00001+4                                   01S0002
         LM    @00,@01,20(@13)                                  01S0002
         ST    @11,8(,@13)                                      01S0002
         LR    @13,@11                                          01S0002
         MVC   @PC00001(8),0(@01)                               01S0002
*   FLAG='00'X;                     /* PROCESSING CONTROL FLAGS      */
         MVI   FLAG,X'00'                                       01S0147
*   RETC=ZZZFLAGI;                  /* RETURN CODE                   */
         SLR   RETC,RETC                                        01S0148
*   RABAPTR=ADDR(RAPA);             /* ->RABA (ALIAS FOR RAPA)       */
         L     RABAPTR,@PC00001+4                               01S0149
*   DATS=RABAAS;                    /* REQUESTED ADDRESS SPACE       */
         MVC   DATS(16),RABAAS(RABAPTR)                         01S0150
*   REQPAGEP=RABAFAD&ZZZP4M24;      /* ->INTERESTING PAGE            */
         L     REQPAGEP,RABAFAD(,RABAPTR)                       01S0151
         N     REQPAGEP,@CF00118                                01S0151
*   IF DATS2^=ZZ6DQA2 THEN          /* SECONDARY ADDRESS SPACE       */
*                                                               01S0152
         L     @14,ZZ2AZZ6P(,R9)                                01S0152
         CLC   DATS2(4),ZZ6DQA2(@14)                            01S0152
         BE    @RF00152                                         01S0152
*     /***************************************************************/
*     /*                                                             */
*     /* SECONDARY ADDRESS SPACE FOR THIS DUMP                       */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0153
*     DO;                           /* SECONDARY ADDRESS SPACE       */
*       IF                          /* COMMON STORAGE                */
*           REQPAGEP<ZZ6DPRP×       /* BELOW THE PRIVATE AREA        */
*           REQPAGEP>=ZZ6DCAP THEN  /* IN THE COMMON AREA            */
*                                                               01S0154
         CL    REQPAGEP,ZZ6DPRP(,@14)                           01S0154
         BL    @RT00154                                         01S0154
         CL    REQPAGEP,ZZ6DCAP(,@14)                           01S0154
         BL    @RF00154                                         01S0154
@RT00154 DS    0H                                               01S0155
*         /***********************************************************/
*         /*                                                         */
*         /* COMMON STORAGE                                          */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0155
*         DO;                       /* COMMON STORAGE                */
*           RABAAS2=ZZ6DQA2;        /* PRIMARY MVS ASID              */
         L     @14,ZZ2AZZ6P(,R9)                                01S0156
         MVC   RABAAS2(4,RABAPTR),ZZ6DQA2(@14)                  01S0156
*           CALL BLSRRAGE(ZZ2,RABA);/* LOCATE COMMON STORAGE         */
         ST    R9,@AL00001                                      01S0157
         ST    RABAPTR,@AL00001+4                               01S0157
         L     @10,ZZ2RVTP(,R9)                                 01S0157
         L     @15,RVTRAGEP(,@10)                               01S0157
         LA    @01,@AL00001                                     01S0157
         BALR  @14,@15                                          01S0157
*           RETC=RF;                /* RETURN CODE                   */
         LR    RETC,RF                                          01S0158
*           IF RETC>ZZZFLAGE THEN   /* LOCATION NOT RECORDED         */
*                                                               01S0159
         CH    RETC,@CH00054                                    01S0159
         BNH   @RF00159                                         01S0159
*             /*******************************************************/
*             /*                                                     */
*             /* LOCATION NOT RECORDED                               */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S0160
*             DO;                   /* LOCATION NOT RECORDED         */
*               RABAAS2=DATS2;      /* RESTORE REQUESTED ASID        */
         MVC   RABAAS2(4,RABAPTR),DATS2                         01S0161
*               GO TO EXIT;         /* ERROR EXIT                    */
         B     EXIT                                             01S0162
*             END;                  /* LOCATION NOT RECORDED         */
*           IF REQPAGEP<ZZ6DPRP THEN/* NUCLEUS/SYSTEM AREA           */
*                                                               01S0164
@RF00159 L     @14,ZZ2AZZ6P(,R9)                                01S0164
         L     @14,ZZ6DPRP(,@14)                                01S0164
         CLR   REQPAGEP,@14                                     01S0164
         BNL   @RF00164                                         01S0164
*             /*******************************************************/
*             /*                                                     */
*             /* NUCLEUS/SYSTEM AREA                                 */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S0165
*             DO;                   /* NUCLEUS/SYSTEM AREA           */
*               RABAUSE=1;          /* ENTRIES IN USE                */
         LA    @10,1                                            01S0166
         STH   @10,RABAUSE(,RABAPTR)                            01S0166
*               RABAFAD=            /* ->FINAL BYTE DESCRIBED        */
*                   RABARIA(1)+RABARNM(1)*RABARLE(1)-1;         01S0167
         L     @08,RABARIA(,RABAPTR)                            01S0167
         LH    @06,RABARNM(,RABAPTR)                            01S0167
         L     @02,RABARLE(,RABAPTR)                            01S0167
         LR    @01,@06                                          01S0167
         MR    @00,@02                                          01S0167
         ALR   @01,@08                                          01S0167
         BCTR  @01,0                                            01S0167
         ST    @01,RABAFAD(,RABAPTR)                            01S0167
*               IF                  /* MAKE FINAL GROUP 1 RECORD     */
*                   RABAFAD>=ZZ6DPRP&/* PENETRATES PRIVATE AREA      */
*                   RABARNM(1)^=1 THEN/* MULTIPLE RECORD GROUP       */
*                                                               01S0168
         CLR   @01,@14                                          01S0168
         BL    @RF00168                                         01S0168
         CR    @06,@10                                          01S0168
         BE    @RF00168                                         01S0168
*                 /***************************************************/
*                 /*                                                 */
*                 /* MAKE FINAL GROUP CONSIST OF 1 RECORD            */
*                 /*                                                 */
*                 /***************************************************/
*                                                               01S0169
*                 DO;               /* MAKE FINAL GROUP 1 RECORD     */
*                   RABAFAD=RABARIA(1)+RABARLE(1)-1;/* ->FINAL BYTE  */
         ALR   @08,@02                                          01S0170
         BCTR  @08,0                                            01S0170
         ST    @08,RABAFAD(,RABAPTR)                            01S0170
*                   RABARNM(1)=1;   /* NUMBER OF RECORDS             */
         STH   @10,RABARNM(,RABAPTR)                            01S0171
*                 END;              /* MAKE FINAL GROUP 1 RECORD     */
*               IF RABAFAD>=ZZ6DPRP THEN/* TRUNCATE FINAL GROUP      */
*                                                               01S0173
@RF00168 L     @14,ZZ2AZZ6P(,R9)                                01S0173
         L     @14,ZZ6DPRP(,@14)                                01S0173
         CL    @14,RABAFAD(,RABAPTR)                            01S0173
         BH    @RF00173                                         01S0173
*                 /***************************************************/
*                 /*                                                 */
*                 /* TRUNCATE FINAL GROUP AT THE PRIVATE AREA        */
*                 /*                                                 */
*                 /***************************************************/
*                                                               01S0174
*                 DO;               /* TRUNCATE FINAL GROUP          */
*                   RABAFAD=ZZ6DPRP-1;/* ->FINAL BYTE DESCRIBED      */
         LR    @10,@14                                          01S0175
         BCTR  @10,0                                            01S0175
         ST    @10,RABAFAD(,RABAPTR)                            01S0175
*                   RABARLE(1)=ZZ6DPRP-RABARIA(1);/* LENGTH          */
         SL    @14,RABARIA(,RABAPTR)                            01S0176
         ST    @14,RABARLE(,RABAPTR)                            01S0176
*                 END;              /* TRUNCATE FINAL GROUP          */
*             END;                  /* NUCLEUS/SYSTEM AREA           */
@RF00173 DS    0H                                               01S0179
*           RABAAS2=DATS2;          /* RESTORE REQUESTED ASID        */
@RF00164 MVC   RABAAS2(4,RABAPTR),DATS2                         01S0179
*           GO TO EXIT;             /* COMMON EXIT PATH              */
         B     EXIT                                             01S0180
*         END;                      /* COMMON STORAGE                */
*     END;                          /* SECONDARY ADDRESS SPACE       */
@RF00154 DS    0H                                               01S0183
*   RABA=RACO;                      /* INITIALIZE RABA               */
@RF00152 L     @14,ZZ2RASYP(,R9)                                01S0183
         MVC   RABA(148,RABAPTR),RACO(@14)                      01S0183
*   RABAAS=DATS;                    /* ADDRESS SPACE REQUESTED       */
         MVC   RABAAS(16,RABAPTR),DATS                          01S0184
*   RABAFAD=REQPAGEP×'00000FFF'X;   /* ->FINAL BYTE DESCRIBED        */
         LR    @14,REQPAGEP                                     01S0185
         O     @14,@CF00116                                     01S0185
         ST    @14,RABAFAD(,RABAPTR)                            01S0185
*   RABAUSE=1;                      /* ONE ENTRY IN USE              */
         LA    @14,1                                            01S0186
         STH   @14,RABAUSE(,RABAPTR)                            01S0186
*   RABARLE(1)=ZZZLENP4;            /* LENGTH OF DATA                */
         MVC   RABARLE(4,RABAPTR),@CF00094                      01S0187
*   RABARNM(1)=1;                   /* ONE STORAGE RECORD            */
         STH   @14,RABARNM(,RABAPTR)                            01S0188
*   RABAROF(1)=0;                   /* NO DATA OFFSET                */
         SLR   @14,@14                                          01S0189
         ST    @14,RABAROF(,RABAPTR)                            01S0189
*   RABARDA(1)=0;                   /* NO DISK RECORD                */
         ST    @14,RABARDA(,RABAPTR)                            01S0190
*   RABARFU(1)=ZZZ1;                /* STORAGE NOT AVAILABLE         */
         OI    RABARFU(RABAPTR),B'10000000'                     01S0191
*   RABARIA(1)=REQPAGEP;            /* ->FIRST BYTE DESCRIBED        */
         ST    REQPAGEP,RABARIA(,RABAPTR)                       01S0192
*   IF ZZ6DFAB=ZZZ0 THEN            /* VIRTUAL DUMP                  */
         L     @14,ZZ2AZZ6P(,R9)                                01S0193
         TM    ZZ6DFAB(@14),B'00010000'                         01S0193
         BZ    @RT00193                                         01S0193
*     GO TO EXIT;                   /* COMMON EXIT PATH              */
*   ESAUSYM='SGT';                  /* RETRIEVE SGT DEFINITION       */
         MVI   ESAUSYM+3,C' '                                   01S0195
         MVC   ESAUSYM+4(27),ESAUSYM+3                          01S0195
         MVC   ESAUSYM(3),@CC01290                              01S0195
*   DO;                             /* BLRCNVUC(DATS2) FROM(UNSIGNED
*                                      BINARY)TO(CHARACTER)SET(ESAUSY
*                                      M(4:6))REMARK(ASID)           */
*                                                               01S0196
*     /***************************************************************/
*     /*                                                             */
*     /* ASID                                                        */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0197
*     CVD(DATS2,PACKED);            /* BINARY=>PACKED DECIMAL        */
         L     @14,DATS2                                        01S0197
         CVD   @14,PACKED                                       01S0197
*     UNPK(ESAUSYM(4:6),PACKED);    /* PACKED DECIMAL=>ZONED DECIMAL */
         UNPK  ESAUSYM+3(3),PACKED(8)                           01S0198
*     ESAUSYM(6:6)=ESAUSYM(6:6)×'0';/* ZONED DECIMAL=>EBCDIC         */
         OI    ESAUSYM+5,C'0'                                   01S0199
*   END;                            /* BLRCNVUC(DATS2) FROM(UNSIGNED
*                                      BINARY)TO(CHARACTER)SET(ESAUSY
*                                      M(4:6))REMARK(ASID)           */
*   ESAUDT=DTSGT;                   /* DATA TYPE                     */
         MVC   ESAUDT(34),DTSGT                                 01S0201
*   CALL BLSRESGU(ZZ2,ESAU);        /* RETRIEVE SGT DEFINITION       */
         ST    R9,@AL00001                                      01S0202
         LA    @14,ESAU                                         01S0202
         ST    @14,@AL00001+4                                   01S0202
         L     @10,ZZ2RVTP(,R9)                                 01S0202
         L     @15,RVTESGUP(,@10)                               01S0202
         LA    @01,@AL00001                                     01S0202
         BALR  @14,@15                                          01S0202
*   IF RF>ZZZFLAGE THEN             /* ERROR LOCATING SEGMENT TABLE  */
*                                                               01S0203
         CH    RF,@CH00054                                      01S0203
         BNH   @RF00203                                         01S0203
*     /***************************************************************/
*     /*                                                             */
*     /* ERROR LOCATING SEGMENT TABLE                                */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0204
*     DO;                           /* ERROR LOCATING SEGMENT TABLE  */
*       IF DATS2=ZZZAS2M THEN       /* MASTER SEGMENT TABLE          */
*                                                               01S0205
         CLC   DATS2(4),@CF00046                                01S0205
         BNE   @RF00205                                         01S0205
*         /***********************************************************/
*         /*                                                         */
*         /* MASTER SEGMENT TABLE                                    */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0206
*         DO;                       /* MASTER SEGMENT TABLE          */
*           P1=ZZZP24P1;            /* ->BYTE FOLLOWING DESCRIPTION  */
         L     P1,@CF00124                                      01S0207
*           P2=ZZZZNULL;            /* ->FIRST BYTE DESCRIBED        */
         SLR   P2,P2                                            01S0208
*         END;                      /* MASTER SEGMENT TABLE          */
*       ELSE                        /* SGT002, SGT003, ....          */
*                                                               01S0210
*         /***********************************************************/
*         /*                                                         */
*         /* SEGMENT TABLE FOR SECONDARY ADDRESS SPACE               */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0210
*         DO;                       /* SGT002, SGT003, ....          */
         B     @RC00205                                         01S0210
@RF00205 DS    0H                                               01S0211
*           P1=ZZ6DCAP;             /* ->BYTE FOLLOWING DESCRIPTION  */
         L     @14,ZZ2AZZ6P(,R9)                                01S0211
         L     P1,ZZ6DCAP(,@14)                                 01S0211
*           P2=ZZ6DPRP;             /* ->FIRST BYTE DESCRIBED        */
         L     P2,ZZ6DPRP(,@14)                                 01S0212
*         END;                      /* SGT002, SGT003, ....          */
*       RABAFAD=P1-1;               /* ->FINAL BYTE DESCRIBED        */
@RC00205 LR    @14,P1                                           01S0214
         BCTR  @14,0                                            01S0214
         ST    @14,RABAFAD(,RABAPTR)                            01S0214
*       RABARIA(1)=P2;              /* ->FIRST BYTE DESCRIBED        */
         ST    P2,RABARIA(,RABAPTR)                             01S0215
*       RABARLE(1)=P1-P2;           /* LENGTH OF DATA                */
         LR    @14,P1                                           01S0216
         SLR   @14,P2                                           01S0216
         ST    @14,RABARLE(,RABAPTR)                            01S0216
*       GO TO EXIT;                 /* COMMON EXIT PATH              */
         B     EXIT                                             01S0217
*     END;                          /* ERROR LOCATING SEGMENT TABLE  */
*   ESAUSYM(1:1)='P';               /* CHANGE SGT=>PGT               */
@RF00203 MVI   ESAUSYM,C'P'                                     01S0219
*   SEGNUM=REQPAGEP/ZZZLENS6;       /* SEGMENT NUMBER                */
         LR    SEGNUM,REQPAGEP                                  01S0220
         SRL   SEGNUM,16                                        01S0220
*   ESAUSYM(7:7)=ALPHASEQ(SEGNUM/ZZZALPSM+1);/* FIRST SEGMENT DIGIT  */
         LA    @14,26                                           01S0221
         LR    @01,SEGNUM                                       01S0221
         SLR   @00,@00                                          01S0221
         DR    @00,@14                                          01S0221
         LA    @10,ALPHASEQ(@01)                                01S0221
         MVC   ESAUSYM+6(1),0(@10)                              01S0221
*   ESAUSYM(8:8)=ALPHASEQ(SEGNUM//ZZZALPSM+1);/* 2ND SEGMENT DIGIT   */
         LR    @00,SEGNUM                                       01S0222
         SRDA  @00,32                                           01S0222
         DR    @00,@14                                          01S0222
         LR    @14,@00                                          01S0222
         LA    @10,ALPHASEQ(@14)                                01S0222
         MVC   ESAUSYM+7(1),0(@10)                              01S0222
*   ESAUDT=DATCPGT;                 /* DATA TYPE STRUCTURE(PGTE)     */
         MVC   ESAUDT(34),DATCPGT                               01S0223
*   CALL BLSRESGU(ZZ2,ESAU);        /* LOCATE PAGE TABLE             */
         ST    R9,@AL00001                                      01S0224
         LA    @14,ESAU                                         01S0224
         ST    @14,@AL00001+4                                   01S0224
         L     @10,ZZ2RVTP(,R9)                                 01S0224
         L     @15,RVTESGUP(,@10)                               01S0224
         LA    @01,@AL00001                                     01S0224
         BALR  @14,@15                                          01S0224
*   IF RF>ZZZFLAGE THEN             /* REQUESTED SEGMENT IS INVALID  */
*                                                               01S0225
         CH    RF,@CH00054                                      01S0225
         BNH   @RF00225                                         01S0225
*     /***************************************************************/
*     /*                                                             */
*     /* REQUESTED SEGMENT IS INVALID                                */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0226
*     DO;                           /* REQUESTED SEGMENT IS INVALID  */
*       RABAFAD=REQPAGEP×'0000FFFF'X;/* ->FINAL BYTE DESCRIBED       */
         LR    @14,REQPAGEP                                     01S0227
         O     @14,@CF01295                                     01S0227
         ST    @14,RABAFAD(,RABAPTR)                            01S0227
*       RABARIA(1)=REQPAGEP&'FFFF0000'X;/* ->FIRST BYTE DESCRIBED    */
         LR    @14,REQPAGEP                                     01S0228
         N     @14,@CF01296                                     01S0228
         ST    @14,RABARIA(,RABAPTR)                            01S0228
*       RABARLE(1)=ZZZLENS6;        /* LENGTH OF DATA                */
         MVC   RABARLE(4,RABAPTR),@CF00096                      01S0229
*       CALL E100;                  /* WRITE RA RECORD               */
         BAL   @14,E100                                         01S0230
*       GO TO EXIT;                 /* COMMON EXIT PATH              */
         B     EXIT                                             01S0231
*     END;                          /* REQUESTED SEGMENT IS INVALID  */
*   ESAUD=DATCPG;                   /* DATA CHARACTERISTICS OF PGTE  */
@RF00225 MVC   ESAUD(60),DATCPG                                 01S0233
*   ESAUDIL=(REQPAGEP&'0000F000'X)/ZZZLENP4;/* ENTRY NUMBER          */
         LR    @00,REQPAGEP                                     01S0234
         N     @00,@CF01298                                     01S0234
         SRL   @00,12                                           01S0234
         ST    @00,ESAUDIL                                      01S0234
*   ESAUDOF=ESAUDIL*LENGTH(PGTPTE); /* OFFSET                        */
         ALR   @00,@00                                          01S0235
         ST    @00,ESAUDOF                                      01S0235
*   CALL BLSRACCQ(ZZ2,ESAU,HOLDWORD);/* RETRIEVE PGTPTE IMAGE        */
         ST    R9,@AL00001                                      01S0236
         LA    @14,ESAU                                         01S0236
         ST    @14,@AL00001+4                                   01S0236
         LA    @14,HOLDWORD                                     01S0236
         ST    @14,@AL00001+8                                   01S0236
         L     @10,ZZ2RVTP(,R9)                                 01S0236
         L     @15,RVTACCQP(,@10)                               01S0236
         LA    @01,@AL00001                                     01S0236
         BALR  @14,@15                                          01S0236
*   PTEPTR=ADDR(HOLDWORD);          /* ->PGTPTE IMAGE                */
         LA    PTEPTR,HOLDWORD                                  01S0237
*   IF RF^=ZZZFLAGI×                /* PGTPTE STORAGE NOT AVAILABLE  */
*       (PGTPVM=ZZZ1&               /* INVALID PAGE                  */
*       PGTPAM=ZZZ0) THEN           /* PAGE NOT GETMAINED            */
*                                                               01S0238
         LTR   RF,RF                                            01S0238
         BNZ   @RT00238                                         01S0238
         TM    PGTPVM(PTEPTR),B'00001000'                       01S0238
         BNO   @RF00238                                         01S0238
         TM    PGTPAM(PTEPTR),B'00000001'                       01S0238
         BNZ   @RF00238                                         01S0238
@RT00238 DS    0H                                               01S0239
*     /***************************************************************/
*     /*                                                             */
*     /* REQUESTED PAGE IS INVALID                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0239
*     DO;                           /* REQUESTED PAGE IS INVALID     */
*       CALL E100;                  /* WRITE MISSING STORAGE RECORD  */
         BAL   @14,E100                                         01S0240
*       GO TO EXIT;                 /* COMMON EXIT PATH              */
         B     EXIT                                             01S0241
*     END;                          /* REQUESTED PAGE IS INVALID     */
*   IF PGTPVM=ZZZ1 THEN             /* GETMAINED BUT INVALID         */
*                                                               01S0243
@RF00238 TM    PGTPVM(PTEPTR),B'00001000'                       01S0243
         BNO   @RF00243                                         01S0243
*     /***************************************************************/
*     /*                                                             */
*     /* ATTEMPT RECLAIM FOR AN INVALID PAGE                         */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0244
*     DO;                           /* ATTEMPT RECLAIM FOR ONE PAGE  */
*       RBNTIM16=PGTRSA&'FFF0'X;    /* 16*REAL BLOCK NUMBER          */
         L     RBNTIM16,@CF01299                                01S0245
         SLR   @14,@14                                          01S0245
         ICM   @14,3,PGTRSA(PTEPTR)                             01S0245
         NR    RBNTIM16,@14                                     01S0245
*       ESAUSYM='PFT';              /* RETREIVE PFT DEFINITION       */
         MVI   ESAUSYM+3,C' '                                   01S0246
         MVC   ESAUSYM+4(27),ESAUSYM+3                          01S0246
         MVC   ESAUSYM(3),@CC01300                              01S0246
*       ESAUDT=DATCPFT;             /* DATA TYPE STRUCTURE(PFTE)     */
         MVC   ESAUDT(34),DATCPFT                               01S0247
*       CALL BLSRESGU(ZZ2,ESAU);    /* RETRIEVE PFT DEFINITION       */
         ST    R9,@AL00001                                      01S0248
         LA    @14,ESAU                                         01S0248
         ST    @14,@AL00001+4                                   01S0248
         L     @10,ZZ2RVTP(,R9)                                 01S0248
         L     @15,RVTESGUP(,@10)                               01S0248
         LA    @01,@AL00001                                     01S0248
         BALR  @14,@15                                          01S0248
*       IF RF>ZZZFLAGE×             /* PFT NOT FOUND                 */
*           RBNTIM16<ESAUDOF×       /* NUCLEUS PAGE                  */
*           RBNTIM16>=ESAUDOF+ESAUDIM*ESAUDLE THEN/* NO SUCH REAL
*                                      STORAGE PAGE                  */
*                                                               01S0249
         CH    RF,@CH00054                                      01S0249
         BH    @RT00249                                         01S0249
         L     @14,ESAUDOF                                      01S0249
         CR    RBNTIM16,@14                                     01S0249
         BL    @RT00249                                         01S0249
         L     @01,ESAUDIM                                      01S0249
         M     @00,ESAUDLE                                      01S0249
         ALR   @14,@01                                          01S0249
         CLR   RBNTIM16,@14                                     01S0249
         BL    @RF00249                                         01S0249
@RT00249 DS    0H                                               01S0250
*         /***********************************************************/
*         /*                                                         */
*         /* PAGE FRAME TABLE NOT USEFUL                             */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0250
*         DO;                       /* PFT NOT USEFUL                */
*           CALL E100;              /* WRITE MISSING STORAGE RECORD  */
         BAL   @14,E100                                         01S0251
*           GO TO EXIT;             /* COMMON EXIT PATH              */
         B     EXIT                                             01S0252
*         END;                      /* PFT NOT USEFUL                */
*       ESAUD=DATCPF;               /* DATA CHARACTERISTICS OF PFTE  */
@RF00249 MVC   ESAUD(60),DATCPF                                 01S0254
*       ESAUDOF=RBNTIM16;           /* OFFSET OF INTERESTING PFTE    */
         ST    RBNTIM16,ESAUDOF                                 01S0255
*       ESAUDIL=RBNTIM16/(ZZZLENS6/ZZZLENP4);/* REAL BLOCK NUMBER    */
         LR    @14,RBNTIM16                                     01S0256
         SRL   @14,4                                            01S0256
         ST    @14,ESAUDIL                                      01S0256
*       VBNTIM16=(REQPAGEP&ZZZP4M24)/(ZZZP24P1/ZZZLENS6);       01S0257
         LR    @00,REQPAGEP                                     01S0257
         N     @00,@CF00118                                     01S0257
         SRL   @00,8                                            01S0257
         LR    VBNTIM16,@00                                     01S0257
*       CALL BLSRACCQ(ZZ2,ESAU,HOLD20);/* RETRIEVE PFTE              */
         ST    R9,@AL00001                                      01S0258
         LA    @14,ESAU                                         01S0258
         ST    @14,@AL00001+4                                   01S0258
         LA    @14,HOLD20                                       01S0258
         ST    @14,@AL00001+8                                   01S0258
         L     @10,ZZ2RVTP(,R9)                                 01S0258
         L     @15,RVTACCQP(,@10)                               01S0258
         LA    @01,@AL00001                                     01S0258
         BALR  @14,@15                                          01S0258
*       PFTEPTR=ADDR(HOLD20);       /* ->PFTE IMAGE                  */
         LA    PFTEPTR,HOLD20                                   01S0259
*       IF RF^=ZZZFLAGI×            /* PFTE STORAGE NOT AVAILABLE    */
*           PFTIRRG=ZZZ1×           /* VIO PAGE                      */
*           (PFTASID^='FFFF'X&PFTASID^=DATS2)×/* BACKING FOR ANOTHER
*                                      ADDRESS SPACE                 */
*           VBNTIM16^=PFTVBN THEN   /* BACKING FOR ANOTHER BLOCK     */
*                                                               01S0260
         LTR   RF,RF                                            01S0260
         BNZ   @RT00260                                         01S0260
         TM    PFTIRRG(PFTEPTR),B'00010000'                     01S0260
         BO    @RT00260                                         01S0260
         SLR   @14,@14                                          01S0260
         ICM   @14,3,PFTASID(PFTEPTR)                           01S0260
         C     @14,@CF00141                                     01S0260
         BE    @GL00006                                         01S0260
         CL    @14,DATS2                                        01S0260
         BNE   @RT00260                                         01S0260
@GL00006 SLR   @14,@14                                          01S0260
         ICM   @14,3,PFTVBN(PFTEPTR)                            01S0260
         CR    VBNTIM16,@14                                     01S0260
         BE    @RF00260                                         01S0260
@RT00260 DS    0H                                               01S0261
*         /***********************************************************/
*         /*                                                         */
*         /* LAST BACKING FRAME NOT USEFUL                           */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0261
*         DO;                       /* LAST BACKING FRAME NOT USEFUL */
*           CALL E100;              /* WRITE MISSING STORAGE RECORD  */
         BAL   @14,E100                                         01S0262
*           GO TO EXIT;             /* COMMON EXIT PATH              */
         B     EXIT                                             01S0263
*         END;                      /* LAST BACKING FRAME NOT USEFUL */
*       FLAGR=ZZZ1;                 /* RECLAIMED STORAGE PENDING     */
@RF00260 OI    FLAGR,B'10000000'                                01S0265
*     END;                          /* ATTEMPT RECLAIM FOR ONE PAGE  */
*   RABAAST=ZZZASTCR;               /* REAL STORAGE                  */
@RF00243 MVC   RABAAST(2,RABAPTR),@CC00076                      01S0267
*   RABAAS2=ZZZAS2NU;               /* NO ASID                       */
         SLR   @14,@14                                          01S0268
         ST    @14,RABAAS2(,RABAPTR)                            01S0268
*   RABAFAD=(HOLDWORD&'FFF00000'X)/(ZZZP24P1/ZZZLENS6);/* ->REAL PAGE*/
         L     @00,HOLDWORD                                     01S0269
         N     @00,@CF01301                                     01S0269
         SRL   @00,8                                            01S0269
         ST    @00,RABAFAD(,RABAPTR)                            01S0269
*   CALL BLSRRAGE(ZZ2,RABA);        /* RETRIEVE PREVIOUS RESULTS     */
         ST    R9,@AL00001                                      01S0270
         ST    RABAPTR,@AL00001+4                               01S0270
         L     @10,ZZ2RVTP(,R9)                                 01S0270
         L     @15,RVTRAGEP(,@10)                               01S0270
         LA    @01,@AL00001                                     01S0270
         BALR  @14,@15                                          01S0270
*   RETC=RF;                        /* RETURN CODE                   */
         LR    RETC,RF                                          01S0271
*   RABAAS=DATS;                    /* REQUESTED ADDRESS SPACE       */
         MVC   RABAAS(16,RABAPTR),DATS                          01S0272
*   IF RETC=ZZZFLAGI THEN           /* INFORMATION OBTAINED          */
*                                                               01S0273
         LTR   RETC,RETC                                        01S0273
         BNZ   @RF00273                                         01S0273
*     /***************************************************************/
*     /*                                                             */
*     /* INFORMATION OBTAINED                                        */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0274
*     DO;                           /* INFORMATION OBTAINED          */
*       RABAFAD=REQPAGEP×'00000FFF'X;/* ->FINAL BYTE DESCRIBED       */
         LR    @14,REQPAGEP                                     01S0275
         O     @14,@CF00116                                     01S0275
         ST    @14,RABAFAD(,RABAPTR)                            01S0275
*       RABAUSE=1;                  /* ONE ENTRY IN USE              */
         LA    @14,1                                            01S0276
         STH   @14,RABAUSE(,RABAPTR)                            01S0276
*       RABARIA(1)=REQPAGEP;        /* ->FIRST BYTE DESCRIBED        */
         ST    REQPAGEP,RABARIA(,RABAPTR)                       01S0277
*       RABARNM(1)=1;               /* ONE RECORD DESCRIBED          */
         STH   @14,RABARNM(,RABAPTR)                            01S0278
*       IF                          /* RECLAIMED STORAGE             */
*           RABARFU(1)=ZZZ0&        /* REAL FRAME AVAILABLE          */
*           FLAGR(1)=ZZZ1 THEN      /* RECLAIMED STORAGE PENDING     */
         TM    RABARFU(RABAPTR),B'10000000'                     01S0279
         BNZ   @RF00279                                         01S0279
         TM    FLAGR,B'10000000'                                01S0279
         BNO   @RF00279                                         01S0279
*         RABARFR(1)=ZZZ1;          /* RECLAIMED STORAGE             */
         OI    RABARFR(RABAPTR),B'00100000'                     01S0280
*       CALL E100;                  /* WRITE RA RECORD               */
@RF00279 BAL   @14,E100                                         01S0281
*     END;                          /* INFORMATION OBTAINED          */
*EXIT:                              /* COMMON EXIT PATH              */
*   RETURN CODE(RETC);                                          01S0283
@RF00273 DS    0H                                               01S0283
EXIT     L     @13,4(,@13)                                      01S0283
         L     @00,@SIZDATD                                     01S0283
         LR    @01,@11                                          01S0283
         BLSUFRES R,LV=(0),A=(1)
         LR    @15,@07                                          01S0283
         L     @14,12(,@13)                                     01S0283
         LM    @00,@12,20(@13)                                  01S0283
         BR    @14                                              01S0283
         SPACE 1
*                                                               01S0284
*/*------------------------------------------------------------------*/
*/* E100--WRITE AN ADDRESS SPACE RECORD                              */
*/*------------------------------------------------------------------*/
*                                                               01S0284
*E100:                              /* WRITE RA RECORD               */
*   PROCEDURE;                                                  01S0284
E100     STM   @14,@12,@SA00002                                 01S0284
*   CALL BLSRRAAR(ZZ2,RABA);        /* WRITE RA RECORD               */
         ST    R9,@AL00001                                      01S0285
         ST    RABAPTR,@AL00001+4                               01S0285
         L     @10,ZZ2RVTP(,R9)                                 01S0285
         L     @15,RVTRAARP(,@10)                               01S0285
         LA    @01,@AL00001                                     01S0285
         BALR  @14,@15                                          01S0285
*   RETURN;                                                     01S0286
@EL00002 DS    0H                                               01S0286
@EF00002 DS    0H                                               01S0286
@ER00002 LM    @14,@12,@SA00002                                 01S0286
         BR    @14                                              01S0286
*   END E100;                                                   01S0287
*                                                               01S0287
*/*BLSRPEND--DEBUGGING MODULE                                        */
*/*BLSUPEND--MVS IPCS MODULE                                         */
*                                                               01S0288
*   DECLARE                         /* DATA FOR AHB MACROS           */
*     PACKED BIT(64) BOUNDARY(DWORD);/* DATA CONVERSION WORK AREA    */
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                    01S0289
*     I031F FIXED(31) BASED,                                    01S0289
*     I031P PTR(31) BASED,                                      01S0289
*     I015F FIXED(15) BASED,                                    01S0289
*     I015P PTR(15) BASED,                                      01S0289
*     I008P PTR(8) BASED,                                       01S0289
*     I001C CHAR(1) BASED;                                      01S0289
*   GENERATE NODEFS NOREFS DATA;                                01S0290
*   END BLSRRACV                    /* BLRPEND(BLSRRACV)             */
*                                                               01S0291
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (BLSRZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLSUZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLRFULL )                                       */
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */
*/*%INCLUDE SYSLIB  (IKJPSCB )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJUPT  )                                       */
*/*%INCLUDE SYSLIB  (BLSUSERV)                                       */
*/*%INCLUDE SYSLIB  (BLRSERV )                                       */
*/*%INCLUDE SYSLIB  (BLRSERVD)                                       */
*/*%INCLUDE SYSLIB  (BLSRSERV)                                       */
*/*%INCLUDE SYSLIB  (IHAPFTE )                                       */
*/*%INCLUDE SYSLIB  (IHAPGTE )                                       */
*                                                               01S0291
*       ;                                                       01S0291
@EL00001 L     @13,4(,@13)                                      01S0291
@EF00001 L     @00,@SIZDATD                                     01S0291
         LR    @01,@11                                          01S0291
         BLSUFRES R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                  01S0291
         BR    @14                                              01S0291
@DATA    DS    0H
@CH00054 DC    H'8'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    2F
@SA00002 DS    15F
@AL00001 DS    3A
BLSRRACV CSECT
         DS    0F
@CF00046 DC    F'1'
@CF00094 DC    F'4096'
@CF00096 DC    F'65536'
@CF00124 DC    F'16777216'
@CF00116 DC    XL4'00000FFF'
@CF00118 DC    XL4'00FFF000'
@CF01295 DC    XL4'0000FFFF'
@CF01296 DC    XL4'FFFF0000'
@CF01298 DC    XL4'0000F000'
@CF01301 DC    XL4'FFF00000'
@CF00141 DC    XL4'FFFF'
@CF01299 DC    XL4'FFF0'
@DATD    DSECT
         DS    0D
HOLDWORD DS    F
DATS     DS    CL16
         ORG   DATS
DATS0    DS    0C
DATST    DS    CL2
@NM00097 DS    BL2
DATS1    DS    FL4
DATS2    DS    FL4
@NM00098 DS    BL4
DATS9    DS    0C
         ORG   DATS+16
         DS    CL4
ESAU     DS    CL694
         ORG   ESAU
ESAURID  DS    CL2
@NM00100 DS    BL6
@NM00101 DS    CL8
@NM00102 DS    BL8
ESAURDX  DS    FL4
ESAUSYM  DS    CL31
ESAUELK  DS    0C
ESAURV1  DS    CL1
ESAUAS   DS    CL16
         ORG   ESAUAS
ESAUAS0  DS    0C
ESAUAST  DS    CL2
@NM00103 DS    BL2
ESAUAS1  DS    FL4
ESAUAS2  DS    FL4
@NM00104 DS    BL4
ESAUAS9  DS    0C
         ORG   ESAU+76
ESAULAD  DS    AL4
ESAUD    DS    CL60
         ORG   ESAUD
ESAUD00  DS    0C
ESAUDOF  DS    FL4
ESAUDLE  DS    FL4
ESAUDOB  DS    FL1
ESAUDLB  DS    FL1
ESAUDT   DS    CL34
         ORG   ESAUDT
ESAUDT0  DS    0C
ESAUDTY  DS    CL1
@NM00105 DS    BL1
ESAUDTD  DS    CL31
ESAUDTE  DS    CL1
ESAUDT9  DS    0C
         ORG   ESAUD+44
ESAUDIM  DS    FL4
ESAUDIL  DS    FL4
ESAUDF   DS    BL4
         ORG   ESAUDF
ESAUDFA  DS    BL1
@NM00106 EQU   ESAUDF+0
         ORG   ESAUD+56
@NM00107 DS    BL4
ESAUD99  DS    0C
         ORG   ESAU+140
ESAUMAD  DS    AL4
@NM00108 DS    BL16
ESAUKEY  DS    BL1
ESAUF    DS    BL3
         ORG   ESAUF
ESAUFS   DS    BL1
         ORG   ESAUFS
ESAUFSC  DS    BL1
ESAUFS2  EQU   ESAUFS+0
ESAUFSM  EQU   ESAUFS+0
ESAUFSA  EQU   ESAUFS+0
ESAUFSP  EQU   ESAUFS+0
ESAUFSR  EQU   ESAUFS+0
ESAUFSX  EQU   ESAUFS+0
ESAUFSS  EQU   ESAUFS+0
         ORG   ESAUF+1
ESAUFC   DS    BL1
         ORG   ESAUFC
ESAUFCD  DS    BL1
@NM00109 EQU   ESAUFC+0
         ORG   ESAUF+2
@NM00110 DS    BL1
         ORG   ESAU+164
ESAUABS  DS    FL4
@NM00111 DS    BL12
ESAUR    DS    CL514
         ORG   ESAUR
ESAURL   DS    FL2
ESAURT   DS    CL512
         ORG   ESAURT
ESAURT1  DS    CL512
         ORG   ESAU+694
ESAU999  DS    0C
         ORG   ESAU+694
FLAG     DS    BL1
         ORG   FLAG
FLAGR    DS    BL1
@NM00124 EQU   FLAG+0
         ORG   FLAG+1
         DS    CL1
HOLD20   DS    CL20
         DS    CL4
PACKED   DS    BL8
BLSRRACV CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC01290 DC    C'SGT'
@CC01300 DC    C'PFT'
@CC00076 DC    C'CR'
DATCPF   DS    CL60
         ORG   DATCPF
DATCPF00 DS    0C
DATCPFOF DC    F'0'
DATCPFLE DC    AL4(16)
DATCPFOB DC    AL1(0)
DATCPFLB DC    AL1(0)
DATCPFT  DS    CL34
         ORG   DATCPFT
DATCPFT0 DS    0C
DATCPFTY DC    CL1'M'
@NM00091 DC    X'00'
DATCPFTD DC    CL31'PFTE'
DATCPFTE DC    CL1' '
DATCPFT9 DS    0C
         ORG   DATCPF+44
DATCPFIM DC    AL4(1+1-1)
DATCPFIL DC    F'1'
DATCPFF  DC    X'80000000'
         ORG   DATCPFF
DATCPFFA DS    BL1
@NM00092 EQU   DATCPFF+0
         ORG   DATCPF+56
@NM00093 DC    X'00'
         DC    XL3'0'
DATCPF99 DS    0C
         ORG   DATCPF+60
DATCPG   DS    CL60
         ORG   DATCPG
DATCPG00 DS    0C
DATCPGOF DC    F'0'
DATCPGLE DC    AL4(2)
DATCPGOB DC    AL1(0)
DATCPGLB DC    AL1(0)
DATCPGT  DS    CL34
         ORG   DATCPGT
DATCPGT0 DS    0C
DATCPGTY DC    CL1'M'
@NM00094 DC    X'00'
DATCPGTD DC    CL31'PGTE'
DATCPGTE DC    CL1' '
DATCPGT9 DS    0C
         ORG   DATCPG+44
DATCPGIM DC    AL4(1+1-1)
DATCPGIL DC    F'1'
DATCPGF  DC    X'80000000'
         ORG   DATCPGF
DATCPGFA DS    BL1
@NM00095 EQU   DATCPGF+0
         ORG   DATCPG+56
@NM00096 DC    X'00'
         DC    XL3'0'
DATCPG99 DS    0C
         ORG   DATCPG+60
DTSGT    DS    CL34
         ORG   DTSGT
DTSGT0   DS    0C
DTSGTY   DC    CL1'M'
@NM00099 DC    X'00'
DTSGTD   DC    CL31'SGTE'
DTSGTE   DC    CL1' '
DTSGT9   DS    0C
         ORG   DTSGT+34
ALPHASEQ DC    CL26'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSRRACV CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSRRACV+19)/20+7)/8)CL8'BLSRRACV'
@DATD    DSECT
         DS    0H
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSRRACV CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
VBNTIM16 EQU   @06
SEGNUM   EQU   @04
RETC     EQU   @07
RBNTIM16 EQU   @04
REQPAGEP EQU   @05
P2       EQU   @04
P1       EQU   @05
RABAPTR  EQU   @03
PTEPTR   EQU   @06
PFTEPTR  EQU   @04
R9       EQU   @09
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
RB       EQU   @11
RD       EQU   @13
RE       EQU   @14
RF       EQU   @15
RA       EQU   @10
RC       EQU   @12
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
ZZ1      EQU   0
ZZ1ATTN  EQU   ZZ1+360
ZZ1EVE   EQU   ZZ1ATTN+4
ZZ1F     EQU   ZZ1+368
ZZ1N     EQU   ZZ1+1116
ZZ2      EQU   0
ZZ2AMD   EQU   ZZ2
@NM00019 EQU   ZZ2AMD+7
ZZ2PRT   EQU   ZZ2+138
ZZ2PRTT  EQU   ZZ2PRT+4
ZZ2PRTT1 EQU   ZZ2PRTT+1
ZZ2A     EQU   ZZ2+272
ZZ2AF    EQU   ZZ2A+16
ZZ2APID  EQU   ZZ2A+64
ZZ2AD    EQU   ZZ2A+74
ZZ2ADD   EQU   ZZ2AD
ZZ2ADDT  EQU   ZZ2ADD+2
ZZ2ADM   EQU   ZZ2AD+46
ZZ2ADMT  EQU   ZZ2ADM+2
ZZ2ADP   EQU   ZZ2AD+56
ZZ2ADPT  EQU   ZZ2ADP+2
ZZ2AZZ6P EQU   ZZ2A+140
ZZ2AQAS  EQU   ZZ2A+144
ZZ2AQD   EQU   ZZ2A+160
ZZ2AQDT  EQU   ZZ2AQD+10
ZZ2AQDF  EQU   ZZ2AQD+52
ZZ2STG   EQU   ZZ2+960
ZZ2ALLOP EQU   ZZ2+992
ZZ2FREEP EQU   ZZ2+996
ZZ2FF19P EQU   ZZ2+1000
ZZ2FRE1P EQU   ZZ2+1004
ZZ2FF18P EQU   ZZ2+1008
ZZ2DYNAP EQU   ZZ2+1012
ZZ2ZZ2CP EQU   ZZ2+1016
ZZ2ZZ2DP EQU   ZZ2+1020
ZZ2STAIP EQU   ZZ2+1024
ZZ2FF02P EQU   ZZ2+1028
ZZ2GETLP EQU   ZZ2+1032
ZZ2PARSP EQU   ZZ2+1036
ZZ2PTGTP EQU   ZZ2+1040
ZZ2PUTLP EQU   ZZ2+1044
ZZ2SCANP EQU   ZZ2+1048
ZZ2STCKP EQU   ZZ2+1052
ZZ2TRMOP EQU   ZZ2+1064
ZZ2TRMVP EQU   ZZ2+1068
ZZ2PUTNP EQU   ZZ2+1084
ZZ2TRMNP EQU   ZZ2+1088
ZZ2ZZ1P  EQU   ZZ2+1264
ZZ2BVTP  EQU   ZZ2+1280
ZZ2RVTP  EQU   ZZ2+1284
ZZ2CPPL  EQU   ZZ2+1292
ZZ2CPPLC EQU   ZZ2CPPL
ZZ2RASYP EQU   ZZ2+1336
ZZ2ITR   EQU   ZZ2+2840
ZZ2ITRE  EQU   ZZ2ITR+16
ZZ2ITSE  EQU   ZZ2+2864
ZZ2ES    EQU   ZZ2+2872
ZZ2AMDX  EQU   ZZ2+7160
ZZ2AXO   EQU   ZZ2+7934
ZZ2AXOT  EQU   ZZ2AXO+2
CMD      EQU   0
CMDT     EQU   CMD+4
PSCB     EQU   0
PSCBATR1 EQU   PSCB+16
ECT      EQU   0
ECTSWS   EQU   ECT+28
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
UPT      EQU   0
UPTSWS   EQU   UPT+12
SA       EQU   0
SA1      EQU   SA
SAR      EQU   SA+12
SAR1     EQU   SAR+12
BVT      EQU   0
BVTPUTLP EQU   BVT+4
BVTPUTOP EQU   BVT+12
BVTPUTTP EQU   BVT+16
BVTPUTVP EQU   BVT+20
BVTPUTAP EQU   BVT+24
BVTPRTTP EQU   BVT+28
BVTPRTAP EQU   BVT+32
BVTPUTDP EQU   BVT+36
BVTMONP  EQU   BVT+40
BVTMON2P EQU   BVT+44
BVTVSARP EQU   BVT+48
BVTVSENP EQU   BVT+64
BVTVSERP EQU   BVT+68
BVTVSGEP EQU   BVT+72
BVTVSGUP EQU   BVT+76
BVTVSPOP EQU   BVT+80
BVTVSPUP EQU   BVT+84
BVTMPKNP EQU   BVT+104
BVTMONLP EQU   BVT+108
BVTPUTCP EQU   BVT+132
BVTMPK1P EQU   BVT+136
BVTZZ2RP EQU   BVT+140
BVTPGMRP EQU   BVT+144
BVTMONAP EQU   BVT+148
BVTBLDDP EQU   BVT+152
BVTBLDLP EQU   BVT+156
BVTPGMCP EQU   BVT+160
BVTPGMDP EQU   BVT+164
BVTPGMLP EQU   BVT+168
BVTMONCP EQU   BVT+180
BVTMONDP EQU   BVT+184
BVTMONTP EQU   BVT+188
BVTPARIP EQU   BVT+192
BVTPARUP EQU   BVT+196
BVTPRTNP EQU   BVT+204
BVTVSCRP EQU   BVT+208
BVTVSMRP EQU   BVT+212
BVTMONXP EQU   BVT+216
BVTTRMAP EQU   BVT+228
ZZ6      EQU   0
ZZ6D     EQU   ZZ6+128
ZZ6DD    EQU   ZZ6D+8
ZZ6DDT   EQU   ZZ6DD+4
ZZ6DQA   EQU   ZZ6D+68
ZZ6DQA2  EQU   ZZ6DQA+8
ZZ6DF    EQU   ZZ6D+92
ZZ6DFAB  EQU   ZZ6DF
ZZ6DPRP  EQU   ZZ6D+108
ZZ6DCAP  EQU   ZZ6D+112
ZZ6B     EQU   ZZ6+768
BLSRACCQ EQU   0
BLSRESGU EQU   0
BLSRRAAR EQU   0
BLSRRAGE EQU   0
RVT      EQU   0
RVTADDRP EQU   RVT
RVTT01P  EQU   RVT+4
RVTTAP   EQU   RVT+8
RVTTBP   EQU   RVT+12
RVTTCP   EQU   RVT+16
RVTTFP   EQU   RVT+24
RVTTYP   EQU   RVT+40
RVTT02P  EQU   RVT+48
RVTT03P  EQU   RVT+52
RVTT04P  EQU   RVT+56
RVTACCLP EQU   RVT+60
RVTRACCP EQU   RVT+64
RVTTLP   EQU   RVT+68
RVTTMP   EQU   RVT+72
RVTTUP   EQU   RVT+80
RVTESGEP EQU   RVT+84
RVTESGUP EQU   RVT+88
RVTESARP EQU   RVT+92
RVTRAARP EQU   RVT+96
RVTRAGEP EQU   RVT+100
RVTADDPP EQU   RVT+104
RVTACCQP EQU   RVT+108
RVTSAGUP EQU   RVT+124
RVTSAGEP EQU   RVT+128
RVTESCKP EQU   RVT+132
RVTMSGAP EQU   RVT+136
RVTMSGDP EQU   RVT+140
RVTADDTP EQU   RVT+160
RVTADDUP EQU   RVT+164
RVTADD1P EQU   RVT+176
RVTADD2P EQU   RVT+180
RVTRSAGP EQU   RVT+184
RVTMSGBP EQU   RVT+188
RVTADDSP EQU   RVT+192
RVTADD3P EQU   RVT+196
RVTT05P  EQU   RVT+200
RVTPADSP EQU   RVT+204
RVTTRP   EQU   RVT+228
RVTADD4P EQU   RVT+232
RVTSAPCP EQU   RVT+236
RVTSAARP EQU   RVT+240
RVTSAGNP EQU   RVT+244
RVTT06P  EQU   RVT+248
RVTSAGCP EQU   RVT+252
RVTSAGQP EQU   RVT+256
RVTESGCP EQU   RVT+260
RVTESGQP EQU   RVT+264
RVTDUCKP EQU   RVT+276
RVTDUCCP EQU   RVT+280
PFTE     EQU   0
PFTPGID  EQU   PFTE
PFTASID  EQU   PFTPGID
PFTVBN   EQU   PFTPGID+2
PFTQPTRS EQU   PFTE+4
PFTFLAGS EQU   PFTE+12
PFTFLAG1 EQU   PFTFLAGS
PFTFLAG2 EQU   PFTFLAGS+1
PFTIRRG  EQU   PFTFLAG2
PGTPTE   EQU   0
PGTRSA   EQU   PGTPTE
PGTBITS  EQU   PGTRSA+1
PGTPVM   EQU   PGTBITS
PGTPAM   EQU   PGTBITS
RABA     EQU   0
RABAAS   EQU   RABA+12
RABAAST  EQU   RABAAS
RABAAS2  EQU   RABAAS+8
RABAFAD  EQU   RABA+28
RABAUSE  EQU   RABA+50
RABAR    EQU   RABA+52
RABARIA  EQU   RABAR
RABARLE  EQU   RABAR+4
RABARNM  EQU   RABAR+8
RABARF   EQU   RABAR+10
RABARFU  EQU   RABARF
RABARFR  EQU   RABARF
RABARDA  EQU   RABAR+12
RABAROF  EQU   RABAR+16
RACO     EQU   0
RACOAS   EQU   RACO+12
RACOR    EQU   RACO+52
RACORF   EQU   RACOR+10
BLSRACC  EQU   0
BLSRACCL EQU   0
BLSRADDP EQU   0
BLSRADDR EQU   0
BLSRADDS EQU   0
BLSRADDT EQU   0
BLSRADDU EQU   0
BLSRADD1 EQU   0
BLSRADD2 EQU   0
BLSRADD3 EQU   0
BLSRADD4 EQU   0
BLSRDUCC EQU   0
BLSRDUCK EQU   0
BLSRESAR EQU   0
BLSRESCK EQU   0
BLSRESGC EQU   0
BLSRESGE EQU   0
BLSRESGQ EQU   0
BLSRMSGA EQU   0
BLSRMSGB EQU   0
BLSRMSGD EQU   0
BLSRPADS EQU   0
BLSRSAAR EQU   0
BLSRSAG  EQU   0
BLSRSAGC EQU   0
BLSRSAGE EQU   0
BLSRSAGN EQU   0
BLSRSAGQ EQU   0
BLSRSAGU EQU   0
BLSRSAPC EQU   0
BLSTA    EQU   0
BLSTB    EQU   0
BLSTC    EQU   0
BLSTF    EQU   0
BLSTL    EQU   0
BLSTM    EQU   0
BLSTR    EQU   0
BLSTU    EQU   0
BLSTY    EQU   0
BLST01   EQU   0
BLST02   EQU   0
BLST03   EQU   0
BLST04   EQU   0
BLST05   EQU   0
BLST06   EQU   0
BLSUALLO EQU   0
BLSUBLDD EQU   0
BLSUBLDL EQU   0
BLSUDYNA EQU   0
BLSUFREE EQU   0
BLSUFRE1 EQU   0
BLSUMON  EQU   0
BLSUMONA EQU   0
BLSUMONC EQU   0
BLSUMOND EQU   0
BLSUMONL EQU   0
BLSUMONT EQU   0
BLSUMONX EQU   0
BLSUMON2 EQU   0
BLSUMPKN EQU   0
BLSUMPK1 EQU   0
BLSUPARI EQU   0
BLSUPARU EQU   0
BLSUPGMC EQU   0
BLSUPGMD EQU   0
BLSUPGML EQU   0
BLSUPGMR EQU   0
BLSUPRTA EQU   0
BLSUPRTN EQU   0
BLSUPRTT EQU   0
BLSUPUTA EQU   0
BLSUPUTC EQU   0
BLSUPUTD EQU   0
BLSUPUTL EQU   0
BLSUPUTN EQU   0
BLSUPUTO EQU   0
BLSUPUTT EQU   0
BLSUPUTV EQU   0
BLSUSTAI EQU   0
BLSUTRMA EQU   0
BLSUTRMN EQU   0
BLSUTRMO EQU   0
BLSUTRMV EQU   0
BLSUVSAR EQU   0
BLSUVSCR EQU   0
BLSUVSEN EQU   0
BLSUVSER EQU   0
BLSUVSGE EQU   0
BLSUVSGU EQU   0
BLSUVSMR EQU   0
BLSUVSPO EQU   0
BLSUVSPU EQU   0
BLSUZZ2C EQU   0
BLSUZZ2D EQU   0
BLSUZZ2R EQU   0
IKJEFF02 EQU   0
IKJEFF18 EQU   0
IKJEFF19 EQU   0
IKJGETL  EQU   0
IKJPARS  EQU   0
IKJPTGT  EQU   0
IKJPUTL  EQU   0
IKJSCAN  EQU   0
IKJSTCK  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
PGTEND   EQU   0
PZ2      EQU   0
RAPA     EQU   0
RAPAAS   EQU   RAPA+12
RAPAR    EQU   RAPA+52
RAPARF   EQU   RAPAR+10
CPPL     EQU   ZZ2CPPL
CPPLUPT  EQU   CPPL+4
CPPLPSCB EQU   CPPL+8
CPPLECT  EQU   CPPL+12
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CPPLCBUF EQU   CPPL
RAPA999  EQU   RAPA+3060
@NM00006 EQU   RAPAR+20
RAPAROF  EQU   RAPAR+16
RAPARDA  EQU   RAPAR+12
@NM00005 EQU   RAPARF
RAPARFR  EQU   RAPARF
RAPARFP  EQU   RAPARF
RAPARFU  EQU   RAPARF
RAPARNM  EQU   RAPAR+8
RAPARLE  EQU   RAPAR+4
RAPARIA  EQU   RAPAR
RAPAUSE  EQU   RAPA+50
RAPADIM  EQU   RAPA+48
@NM00004 EQU   RAPA+32
RAPAELK  EQU   RAPA+32
RAPAFAD  EQU   RAPA+28
RAPAAS9  EQU   RAPAAS+16
@NM00003 EQU   RAPAAS+12
RAPAAS2  EQU   RAPAAS+8
RAPAAS1  EQU   RAPAAS+4
@NM00002 EQU   RAPAAS+2
RAPAAST  EQU   RAPAAS
RAPAAS0  EQU   RAPAAS
RAPARDX  EQU   RAPA+8
@NM00001 EQU   RAPA+2
RAPARID  EQU   RAPA
RACO999  EQU   RACO+148
@NM00123 EQU   RACOR+20
RACOROF  EQU   RACOR+16
RACORDA  EQU   RACOR+12
@NM00122 EQU   RACORF
RACORFR  EQU   RACORF
RACORFP  EQU   RACORF
RACORFU  EQU   RACORF
RACORNM  EQU   RACOR+8
RACORLE  EQU   RACOR+4
RACORIA  EQU   RACOR
RACOUSE  EQU   RACO+50
RACODIM  EQU   RACO+48
@NM00121 EQU   RACO+32
RACOELK  EQU   RACO+32
RACOFAD  EQU   RACO+28
RACOAS9  EQU   RACOAS+16
@NM00120 EQU   RACOAS+12
RACOAS2  EQU   RACOAS+8
RACOAS1  EQU   RACOAS+4
@NM00119 EQU   RACOAS+2
RACOAST  EQU   RACOAS
RACOAS0  EQU   RACOAS
RACORDX  EQU   RACO+8
@NM00118 EQU   RACO+2
RACORID  EQU   RACO
RABA999  EQU   RABA+148
@NM00117 EQU   RABAR+20
@NM00116 EQU   RABARF
RABARFP  EQU   RABARF
RABADIM  EQU   RABA+48
@NM00115 EQU   RABA+32
RABAELK  EQU   RABA+32
RABAAS9  EQU   RABAAS+16
@NM00114 EQU   RABAAS+12
RABAAS1  EQU   RABAAS+4
@NM00113 EQU   RABAAS+2
RABAAS0  EQU   RABAAS
RABARDX  EQU   RABA+8
@NM00112 EQU   RABA+2
RABARID  EQU   RABA
@NM00090 EQU   PGTBITS
@NM00089 EQU   PGTBITS
@NM00088 EQU   PGTBITS
@NM00087 EQU   PGTBITS
@NM00086 EQU   PGTBITS
@NM00085 EQU   PGTBITS
PGTREAL  EQU   PGTRSA
PFTUIC   EQU   PFTE+15
PFTQNDX  EQU   PFTE+14
@NM00084 EQU   PFTFLAG2
@NM00083 EQU   PFTFLAG2
PFTPREF  EQU   PFTFLAG2
PFTSTEAL EQU   PFTFLAG2
PFTVR    EQU   PFTFLAG2
PFTOFFLN EQU   PFTFLAG2
PFTDFRLS EQU   PFTFLAG2
PFTOFINT EQU   PFTFLAG1
PFTVRALC EQU   PFTFLAG1
PFTBADPG EQU   PFTFLAG1
PFTPCBSI EQU   PFTFLAG1
PFTLNGFX EQU   PFTFLAG1
PFTLSQA  EQU   PFTFLAG1
PFTVRINT EQU   PFTFLAG1
PFTONAVQ EQU   PFTFLAG1
PFTRSV1  EQU   PFTE+10
PFTFXCT  EQU   PFTE+8
PFTBQPTR EQU   PFTQPTRS+2
PFTFQPTR EQU   PFTQPTRS
RVT99999 EQU   RVT+384
RVT0096P EQU   RVT+380
RVT0095P EQU   RVT+376
RVT0094P EQU   RVT+372
RVT0093P EQU   RVT+368
RVT0092P EQU   RVT+364
RVT0091P EQU   RVT+360
RVT0090P EQU   RVT+356
RVT0089P EQU   RVT+352
RVT0088P EQU   RVT+348
RVT0087P EQU   RVT+344
RVT0086P EQU   RVT+340
RVT0085P EQU   RVT+336
RVT0084P EQU   RVT+332
RVT0083P EQU   RVT+328
RVT0082P EQU   RVT+324
RVT0081P EQU   RVT+320
RVT0080P EQU   RVT+316
RVT0079P EQU   RVT+312
RVT0078P EQU   RVT+308
RVT0077P EQU   RVT+304
RVT0076P EQU   RVT+300
RVT0075P EQU   RVT+296
RVT0074P EQU   RVT+292
RVT0073P EQU   RVT+288
RVT0072P EQU   RVT+284
RVTDTUTP EQU   RVT+272
RVTDTMTP EQU   RVT+268
RVT0057P EQU   RVT+224
RVT0056P EQU   RVT+220
RVT0055P EQU   RVT+216
RVT0054P EQU   RVT+212
RVT0053P EQU   RVT+208
RVT0044P EQU   RVT+172
RVT0043P EQU   RVT+168
RVT0040P EQU   RVT+156
RVT0039P EQU   RVT+152
RVT0038P EQU   RVT+148
RVT0037P EQU   RVT+144
RVT0031P EQU   RVT+120
RVT0030P EQU   RVT+116
RVT0029P EQU   RVT+112
RVT0020P EQU   RVT+76
RVT0012P EQU   RVT+44
RVT0010P EQU   RVT+36
RVT0009P EQU   RVT+32
RVT0008P EQU   RVT+28
RVT0006P EQU   RVT+20
ZZ69999  EQU   ZZ6+1792
ZZ6BRB   EQU   ZZ6B+12
ZZ6BRC   EQU   ZZ6B+8
@NM00082 EQU   ZZ6B+6
ZZ6BFL   EQU   ZZ6B+4
ZZ6BDA   EQU   ZZ6B
@NM00081 EQU   ZZ6+540
ZZ6BUFI  EQU   ZZ6+536
ZZ6BUFP  EQU   ZZ6+532
ZZ6FILE  EQU   ZZ6+524
ZZ6BUFB  EQU   ZZ6+520
ZZ6BUFL  EQU   ZZ6+518
ZZ6BUFN  EQU   ZZ6+516
ZZ6ZZ6P  EQU   ZZ6+512
@NM00080 EQU   ZZ6+256
ZZ6D999  EQU   ZZ6D+128
@NM00079 EQU   ZZ6D+116
ZZ6DDA2  EQU   ZZ6D+104
ZZ6DDA1  EQU   ZZ6D+100
@NM00078 EQU   ZZ6DF
ZZ6DFSU  EQU   ZZ6DF
ZZ6DFST  EQU   ZZ6DF
ZZ6DFMP  EQU   ZZ6DF
ZZ6DFDU  EQU   ZZ6DF
ZZ6DFBS  EQU   ZZ6DF
ZZ6DQ2   EQU   ZZ6D+88
ZZ6DQ1   EQU   ZZ6D+84
ZZ6DQA9  EQU   ZZ6DQA+16
@NM00077 EQU   ZZ6DQA+12
ZZ6DQA1  EQU   ZZ6DQA+4
@NM00076 EQU   ZZ6DQA+2
ZZ6DQAT  EQU   ZZ6DQA
ZZ6DQA0  EQU   ZZ6DQA
ZZ6DRDX  EQU   ZZ6D+64
ZZ6DELK  EQU   ZZ6D+64
ZZ6DMEM  EQU   ZZ6D+56
ZZ6DDT1  EQU   ZZ6DDT
ZZ6DDO   EQU   ZZ6DD+2
ZZ6DDL   EQU   ZZ6DD
@NM00075 EQU   ZZ6D+2
ZZ6DRID  EQU   ZZ6D
ZZ6RDCB  EQU   ZZ6
ZZ60000  EQU   ZZ6
BVT99999 EQU   BVT+256
BVT0064P EQU   BVT+252
BVT0063P EQU   BVT+248
BVT0062P EQU   BVT+244
BVT0061P EQU   BVT+240
BVT0060P EQU   BVT+236
BVT0059P EQU   BVT+232
BVT0057P EQU   BVT+224
BVT0056P EQU   BVT+220
BVTSTBLP EQU   BVT+200
BVT0045P EQU   BVT+176
BVT0044P EQU   BVT+172
BVT0033P EQU   BVT+128
BVT0032P EQU   BVT+124
BVT0031P EQU   BVT+120
BVT0030P EQU   BVT+116
BVT0029P EQU   BVT+112
BVT0026P EQU   BVT+100
BVT0025P EQU   BVT+96
BVT0024P EQU   BVT+92
BVT0023P EQU   BVT+88
BVT0016P EQU   BVT+60
BVT0015P EQU   BVT+56
BVT0014P EQU   BVT+52
BVT0003P EQU   BVT+8
BVT0001P EQU   BVT
SA99     EQU   SA+72
SARC     EQU   SAR+56
SARB     EQU   SAR+52
SARA     EQU   SAR+48
SAR9     EQU   SAR+44
SAR8     EQU   SAR+40
SAR7     EQU   SAR+36
SAR6     EQU   SAR+32
SAR5     EQU   SAR+28
SAR4     EQU   SAR+24
SAR3     EQU   SAR+20
SAR2     EQU   SAR+16
SAR0     EQU   SAR+8
SARF     EQU   SAR+4
SARE     EQU   SAR
SAFWD    EQU   SA+8
SABAK    EQU   SA+4
SA1L     EQU   SA1+1
SA1P     EQU   SA1
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00074 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00073 EQU   UPT
@NM00072 EQU   ECT+52
@NM00071 EQU   ECT+48
@NM00070 EQU   ECT+44
@NM00069 EQU   ECTSWS2+1
@NM00068 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00067 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00066 EQU   PSCB+36
@NM00065 EQU   PSCB+32
@NM00064 EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00063 EQU   PSCBATR1
@NM00062 EQU   PSCBATR1
@NM00061 EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
PSCBUSRL EQU   PSCB+7
PSCBUSER EQU   PSCB
CMDT1    EQU   CMDT
CMDO     EQU   CMD+2
CMDL     EQU   CMD
ZZ299999 EQU   ZZ2+8192
ZZ2AXOT1 EQU   ZZ2AXOT
ZZ2AXOL  EQU   ZZ2AXO
@NM00060 EQU   ZZ2+7288
@NM00059 EQU   ZZ2AMDX+4
ZZ2AMDXC EQU   ZZ2AMDX
ZZ2HSD   EQU   ZZ2+3056
@NM00058 EQU   ZZ2ES
@NM00057 EQU   ZZ2+2868
ZZ2ITSEC EQU   ZZ2ITSE+1
@NM00056 EQU   ZZ2ITSE
ZZ2ITSEP EQU   ZZ2ITSE
ZZ2ITSEW EQU   ZZ2ITSE
@NM00055 EQU   ZZ2ITR+20
ZZ2ITREC EQU   ZZ2ITRE+1
@NM00054 EQU   ZZ2ITRE
ZZ2ITREP EQU   ZZ2ITRE
ZZ2ITREW EQU   ZZ2ITRE
@NM00053 EQU   ZZ2ITR+9
ZZ2ITRRC EQU   ZZ2ITR+8
ZZ2ITR2P EQU   ZZ2ITR+4
ZZ2ITRPP EQU   ZZ2ITR
@NM00052 EQU   ZZ2+1544
ZZ2PGM   EQU   ZZ2+1536
@NM00051 EQU   ZZ2+1526
ZZ2CW    EQU   ZZ2+1524
@NM00050 EQU   ZZ2+1504
@NM00049 EQU   ZZ2+1352
ZZ2FFSYP EQU   ZZ2+1348
ZZ2SASYP EQU   ZZ2+1344
ZZ2RDSYP EQU   ZZ2+1340
ZZ2PHSYP EQU   ZZ2+1332
ZZ2ESSYP EQU   ZZ2+1328
ZZ200SYP EQU   ZZ2+1324
ZZ2SCWP  EQU   ZZ2+1320
ZZ2TTLP  EQU   ZZ2+1316
ZZ2LOADP EQU   ZZ2+1312
ZZ2VRESP EQU   ZZ2+1308
ZZ2CPPLE EQU   ZZ2CPPL+12
ZZ2CPPLP EQU   ZZ2CPPL+8
ZZ2CPPLU EQU   ZZ2CPPL+4
ZZ2VRSAP EQU   ZZ2+1288
ZZ2DVTP  EQU   ZZ2+1276
@NM00048 EQU   ZZ2+1272
@NM00047 EQU   ZZ2+1268
ZZ2RPLP  EQU   ZZ2+1260
ZZ2TCBP  EQU   ZZ2+1256
@NM00046 EQU   ZZ2+1252
ZZ2ZZ2P  EQU   ZZ2+1248
@NM00045 EQU   ZZ2+1112
ZZ2FPDRP EQU   ZZ2+1108
ZZ2FDSDP EQU   ZZ2+1104
ZZ2APDRP EQU   ZZ2+1100
ZZ2ADSDP EQU   ZZ2+1096
ZZ2ENQ0P EQU   ZZ2+1092
@NM00044 EQU   ZZ2+1080
ZZ2MSG0P EQU   ZZ2+1076
ZZ2FT25P EQU   ZZ2+1072
ZZ2MSGSP EQU   ZZ2+1060
ZZ2ALOCP EQU   ZZ2+1056
@NM00043 EQU   ZZ2+976
ZZ2TOD   EQU   ZZ2+968
ZZ2STGN  EQU   ZZ2STG+4
ZZ2STGP  EQU   ZZ2STG
@NM00042 EQU   ZZ2+952
ZZ2SCMDE EQU   ZZ2+944
ZZ2SCMDN EQU   ZZ2+936
ZZ2IDENT EQU   ZZ2+928
ZZ2A9999 EQU   ZZ2A+656
@NM00041 EQU   ZZ2A+224
@NM00040 EQU   ZZ2A+220
ZZ2AQD99 EQU   ZZ2AQD+60
@NM00039 EQU   ZZ2AQD+56
@NM00038 EQU   ZZ2AQDF
ZZ2AQDFA EQU   ZZ2AQDF
ZZ2AQDIL EQU   ZZ2AQD+48
ZZ2AQDIM EQU   ZZ2AQD+44
ZZ2AQDT9 EQU   ZZ2AQDT+34
ZZ2AQDTE EQU   ZZ2AQDT+33
ZZ2AQDTD EQU   ZZ2AQDT+2
@NM00037 EQU   ZZ2AQDT+1
ZZ2AQDTY EQU   ZZ2AQDT
ZZ2AQDT0 EQU   ZZ2AQDT
ZZ2AQDLB EQU   ZZ2AQD+9
ZZ2AQDOB EQU   ZZ2AQD+8
ZZ2AQDLE EQU   ZZ2AQD+4
ZZ2AQDOF EQU   ZZ2AQD
ZZ2AQD00 EQU   ZZ2AQD
ZZ2AQAS9 EQU   ZZ2AQAS+16
@NM00036 EQU   ZZ2AQAS+12
ZZ2AQAS2 EQU   ZZ2AQAS+8
ZZ2AQAS1 EQU   ZZ2AQAS+4
@NM00035 EQU   ZZ2AQAS+2
ZZ2AQAST EQU   ZZ2AQAS
ZZ2AQAS0 EQU   ZZ2AQAS
ZZ2ADPTA EQU   ZZ2ADPT
ZZ2ADPL  EQU   ZZ2ADP
ZZ2ADMTA EQU   ZZ2ADMT
ZZ2ADML  EQU   ZZ2ADM
ZZ2ADDTA EQU   ZZ2ADDT
ZZ2ADDL  EQU   ZZ2ADD
@NM00034 EQU   ZZ2A+72
ZZ2APIDB EQU   ZZ2APID+3
ZZ2APIDA EQU   ZZ2APID
@NM00033 EQU   ZZ2A+24
@NM00032 EQU   ZZ2AF+5
ZZ2AFX   EQU   ZZ2AF+5
@NM00031 EQU   ZZ2AF+3
ZZ2AFS   EQU   ZZ2AF+2
ZZ2AFD   EQU   ZZ2AF+2
ZZ2AFQ   EQU   ZZ2AF+2
ZZ2AF$   EQU   ZZ2AF+2
@NM00030 EQU   ZZ2AF+2
ZZ2AFM   EQU   ZZ2AF+2
@NM00029 EQU   ZZ2AF+2
@NM00028 EQU   ZZ2AF+1
ZZ2AFV   EQU   ZZ2AF+1
@NM00027 EQU   ZZ2AF+1
ZZ2AFC   EQU   ZZ2AF+1
@NM00026 EQU   ZZ2AF
ZZ2AFFS  EQU   ZZ2AF
ZZ2AFT   EQU   ZZ2AF
ZZ2AFP   EQU   ZZ2AF
@NM00025 EQU   ZZ2A+8
ZZ2ALINE EQU   ZZ2A+4
@NM00024 EQU   ZZ2A+3
ZZ2ASE   EQU   ZZ2A+2
ZZ2ACH   EQU   ZZ2A
@NM00023 EQU   ZZ2+264
@NM00022 EQU   ZZ2+263
ZZ2PRTT0 EQU   ZZ2PRTT
ZZ2PRTO  EQU   ZZ2PRT+2
ZZ2PRTL  EQU   ZZ2PRT
@NM00021 EQU   ZZ2AMD+56
ZZ2AMDXP EQU   ZZ2AMD+52
ZZ2AMDD  EQU   ZZ2AMD+48
ZZ2AMDL  EQU   ZZ2AMD+44
ZZ2AMDU  EQU   ZZ2AMD+28
ZZ2AMDF  EQU   ZZ2AMD+24
ZZ2AMDS  EQU   ZZ2AMD+20
ZZ2AMDC  EQU   ZZ2AMD+16
ZZ2AMDP  EQU   ZZ2AMD+12
ZZ2AMDB  EQU   ZZ2AMD+8
@NM00020 EQU   @NM00019
ZZ2AMD2  EQU   @NM00019
ZZ2AMD1  EQU   @NM00019
ZZ2AMD0  EQU   ZZ2AMD+6
ZZ2AMDA  EQU   ZZ2AMD+4
ZZ2AMDT  EQU   ZZ2AMD
ZZ199999 EQU   ZZ1+3072
@NM00018 EQU   ZZ1+2160
ZZ1TRTAS EQU   ZZ1+1904
ZZ1TRUPC EQU   ZZ1+1648
ZZ1TRCTX EQU   ZZ1+1392
ZZ1NASID EQU   ZZ1N+274
ZZ1NSTRL EQU   ZZ1N+272
ZZ1NOFF  EQU   ZZ1N+268
ZZ1NBDY  EQU   ZZ1N+264
ZZ1NADE  EQU   ZZ1N+260
ZZ1NADB  EQU   ZZ1N+256
ZZ1NSTR  EQU   ZZ1N
@NM00017 EQU   ZZ1+1080
ZZ1TREBC EQU   ZZ1+824
ZZ1TRHEX EQU   ZZ1+568
@NM00016 EQU   ZZ1+377
ZZ1USTAE EQU   ZZ1+376
@NM00015 EQU   ZZ1F+1
@NM00014 EQU   ZZ1F
ZZ1FM    EQU   ZZ1F
ZZ1FX    EQU   ZZ1F
ZZ1FU    EQU   ZZ1F
ZZ1EVEC  EQU   ZZ1EVE+1
@NM00013 EQU   ZZ1EVE
ZZ1EVEP  EQU   ZZ1EVE
ZZ1EVEW  EQU   ZZ1EVE
ZZ1ACMP  EQU   ZZ1ATTN
@NM00012 EQU   ZZ1+144
ZZ1FPP   EQU   ZZ1+140
ZZ1ZZ6P  EQU   ZZ1+136
@NM00011 EQU   ZZ1+84
ZZ1PLINE EQU   ZZ1+80
ZZ1PGSZ  EQU   ZZ1+76
ZZ1PCNT  EQU   ZZ1+72
@NM00010 EQU   ZZ1+68
ZZ1TPAGE EQU   ZZ1+64
ZZ1TLINE EQU   ZZ1+60
@NM00009 EQU   ZZ1+48
ZZ1DSDP  EQU   ZZ1+44
ZZ1PDRP  EQU   ZZ1+40
ZZ1ZZ2P  EQU   ZZ1+36
ZZ1327WP EQU   ZZ1+32
ZZ1ACBP  EQU   ZZ1+28
@NM00008 EQU   ZZ1+24
ZZ1PDCBP EQU   ZZ1+20
ZZ1BLRBL EQU   ZZ1+16
@NM00007 EQU   ZZ1+12
ZZ1PNULL EQU   ZZ1+8
ZZ1NULL  EQU   ZZ1+4
ZZ1IDE   EQU   ZZ1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00193 EQU   EXIT
@ENDDATA EQU   *
         END   BLSRRACV,(C'PLS1830',0701,78058)
