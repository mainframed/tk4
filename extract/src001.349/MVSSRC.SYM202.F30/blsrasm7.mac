ASM7     TITLE 'BLSRASM7--IPCS ASMCHECK SUBCOMMAND PROCESSOR           *
                        '
*/* CHANGE ACTIVITY -------------------------------------------------*/
*/*   THIS MODULE WAS WRITTEN FOR @G57LPGW                           */
*/*   THIS MODULE IS CHANGED FOR @ZA32007                            */
*/*------------------------------------------------------------------*/
BLSRASM7 CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'BLSRASM7  78.117'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         BLSUALLR R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
*   RETC=0;                         /* INITIALIZE RETURN CODE        */
         SLR   RETC,RETC                                           0272
*   IN81L=12;                       /* SET SEGMENT LENGTH            */
         LA    @14,12                                              0273
         STH   @14,IN81L                                           0273
*   IN82L=12;                       /* SET SEGMENT LENGTH            */
         STH   @14,IN82L                                           0274
*   IN83L=12;                       /* SET SEGMENT LENGTH            */
         STH   @14,IN83L                                           0275
*   RESPECIFY                                                      0276
*     R1 RESTRICTED;                /* RESTRICT PARM REG             */
*    DO; /*GETMAIN (R) LV(BUFSIZE)SP(1)*/                          0277
*    RESPECIFY (GPR01F,GPR00F) RESTRICTED;                         0278
*    GPR00F = BUFSIZE; /* LENGTH REQUESTED*/                       0279
         L     GPR00F,@CF02736                                     0279
*    GPR01F = 1; /* SP IN REG 1 */                                 0280
         LA    GPR01F,1                                            0280
*    GEN   (SLL   GPR01F,24)                                       0281
*    NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;                  0281
         SLL   GPR01F,24
*    GPR00F = GPR00F × GPR01F; /* SP IN HIGH BYTE */               0282
         OR    GPR00F,GPR01F                                       0282
*    GPR01F = -1; /* INDICATE A GETMAIN REQUEST */                 0283
         SLR   GPR01F,GPR01F                                       0283
         BCTR  GPR01F,0                                            0283
*    SVC(10); /* R-FORM OF GETMAIN*/                               0284
         SVC   10                                                  0284
*    RESPECIFY (GPR01F,GPR00F) UNRESTRICTED;                       0285
*    END; /*GETMAIN (R) LV(BUFSIZE)SP(1)*/                         0286
*   BLOKBASE=R1;                    /* BUFFER ADDRESS                */
         LR    BLOKBASE,R1                                         0287
*   PAREPTR=R1+(BUFSIZE-(LENGTH(PART)+(MAXPAGES*(LENGTH(PARTENT)))));
         LA    PAREPTR,4016                                        0288
         ALR   PAREPTR,R1                                          0288
*                                   /* LEAVE ROOM FOR MAX NUMBER OF
*                                      PART ENTRIES                  */
*   RESPECIFY                                                      0289
*     R1 UNRESTRICTED;              /* UNRESTRICT R1                 */
*                                                                  0290
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL IKJPARS AND ANALYZE OPERANDS                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0290
*                                                                  0290
*                                                                  0290
*    DO;/*BLSRPARS ROUTING FLAG MF(E,PX)*/                         0290
*                                                                  0290
*    DO;/*BLSRPARD CSECT()DSECT(PD)EQUATE(ESAU)EXIT(EXITRLSA,)MF(EXECUT
*,PX)ROUTING FLAG*/                                                0291
*                                                                  0291
*                                                                  0291
*    DO;/*BLSUPARS CSECT(PC)DSECT(PD)EXIT(EXITRLSA,)MF(EXECUTE,PX)FLAG
*OUTING*/                                                          0292
*      CALL BLSUPARI(ZZ2,PCCSECT,PDAPTR);/*PARSE OPERANDS*/        0293
         ST    R9,@AL00001                                         0293
         L     @14,PCPTR                                           0293
         ST    @14,@AL00001+4                                      0293
         LA    @14,PDAPTR                                          0293
         ST    @14,@AL00001+8                                      0293
         L     @10,ZZ2BVTP(,R9)                                    0293
         L     @15,BVTPARIP(,@10)                                  0293
         LA    @01,@AL00001                                        0293
         BALR  @14,@15                                             0293
*      RESPECIFY                                                   0294
*       (GPR15F) RESTRICTED;                                       0294
*      IF GPR15F^=ZZZFLAGI THEN                                    0295
         LTR   GPR15F,GPR15F                                       0295
         BZ    @RF00295                                            0295
*        /*UNABLE TO PARSE*/                                       0296
*        DO;/*UNABLE TO PARSE*/                                    0296
*          RETC=GPR15F;/*RETURN CODE*/                             0297
         LR    RETC,GPR15F                                         0297
*          GO TO EXITNORL;/*EXIT WITHOUT PDL*/                     0298
         B     EXITNORL                                            0298
*        END;                                                      0299
*      RESPECIFY                                                   0300
*       (GPR15F) UNRESTRICTED;                                     0300
@RF00295 DS    0H                                                  0301
*      RESPECIFY                                                   0301
*       (PDRPTR) RESTRICTED;                                       0301
*      PDRPTR=PDAPTR;/*->PDL*/                                     0302
         L     PDRPTR,PDAPTR                                       0302
*      GENERATE REFS(PD,PDRPTR) CODE(USING PD,PDRPTR);             0303
         USING PD,PDRPTR
*      IF PXTEST=PXTEST1 THEN                                      0304
         CLC   PXTEST(2),@CH00043                                  0304
         BNE   @RF00304                                            0304
*        ZZ2AFX=ZZZ1;/*TEST*/                                      0305
         OI    ZZ2AFX(R9),B'10000000'                              0305
*      ELSE                                                        0306
*        IF PXTEST=PXTEST0 THEN                                    0306
         B     @RC00304                                            0306
@RF00304 CLC   PXTEST(2),@CH00068                                  0306
         BNE   @RF00306                                            0306
*          ZZ2AFX=ZZZ0;/*NOTEST*/                                  0307
         NI    ZZ2AFX(R9),B'01111111'                              0307
*      CALL BLSUPARU(ZZ2,PDDSECT,PXRO);/*SET ROUTING OPTIONS*/     0308
@RF00306 DS    0H                                                  0308
@RC00304 ST    R9,@AL00001                                         0308
         ST    PDRPTR,@AL00001+4                                   0308
         LA    @14,PXRO                                            0308
         ST    @14,@AL00001+8                                      0308
         L     @08,ZZ2BVTP(,R9)                                    0308
         L     @15,BVTPARUP(,@08)                                  0308
         LA    @01,@AL00001                                        0308
         BALR  @14,@15                                             0308
*      RESPECIFY                                                   0309
*       (GPR15F) RESTRICTED;                                       0309
*      RETC=MAX(RETC,GPR15F);/*RETURN CODE*/                       0310
         CR    RETC,GPR15F                                         0310
         BNL   *+6
         LR    RETC,GPR15F                                         0310
*      RESPECIFY                                                   0311
*       (GPR15F) UNRESTRICTED;                                     0311
*      IF RETC>ZZZFLAGE THEN/*SERIOUS ERROR*/                      0312
         C     RETC,@CF00051                                       0312
         BH    @RT00312                                            0312
*        GO TO EXITRLSA;/*EXIT WITH PDL*/                          0313
*    END;/*BLSUPARS CSECT(PC)DSECT(PD)EXIT(EXITRLSA,)MF(EXECUTE,PX)FLAG
*ROUTING*/                                                         0314
*    END;/*BLSRPARD CSECT()DSECT(PD)EQUATE(ESAU)EXIT(EXITRLSA,)MF(EXECU
*E,PX)ROUTING FLAG*/                                               0315
*    END;/*BLSRPARS ROUTING FLAG MF(E,PX)*/                        0316
*                                                                  0317
*   /*****************************************************************/
*   /*                                                               */
*   /* OBTAIN CVT PTR                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0317
*   ESAU(1:LENGTH(ESCO))=ESCO;      /* INITIALIZE REQUEST BLOCK      */
         MVC   ESAU(182),ESCO                                      0317
*   ESAUDT=DTCVT;                   /* MOVE CONSTANTS                */
         MVC   ESAUDT(34),DTCVT                                    0318
*   ESAUSYM='CVT';                  /* SYMBOL TO BE FOUND            */
         MVI   ESAUSYM+3,C' '                                      0319
         MVC   ESAUSYM+4(27),ESAUSYM+3                             0319
         MVC   ESAUSYM(3),@CC02450                                 0319
*   CALL BLSRESGU(ZZ2,ESAU);        /* GET RECORD UNCONDITIONALLY    */
         ST    R9,@AL00001                                         0320
         LA    @14,ESAU                                            0320
         ST    @14,@AL00001+4                                      0320
         L     @08,ZZ2RVTP(,R9)                                    0320
         L     @15,RVTESGUP(,@08)                                  0320
         LA    @01,@AL00001                                        0320
         BALR  @14,@15                                             0320
*   IF RF^=0 THEN                   /* IF UNSUCCESSFUL               */
         LTR   RF,RF                                               0321
         BNZ   @RT00321                                            0321
*     GO TO EXITRLSA;               /* EXIT                          */
*   THECVTPT=ESAULAD;               /* SAVE CVT POINTER              */
*                                                                  0323
         L     THECVTPT,ESAULAD                                    0323
*   /*****************************************************************/
*   /*                                                               */
*   /* GET ASMVT                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0324
*   ADDRHOLD=THECVTPT+(ADDR(CVTASMVT)-ADDR(CVT));/* ASMVT PTR        */
         LA    @14,704                                             0324
         ALR   @14,THECVTPT                                        0324
         ST    @14,ADDRHOLD                                        0324
*   CALL ACCESS(0,ADDRHOLD,LENGTH(CVTASMVT),'CVTASMVT');/* GET     0325
*                                      CVTASMVT                      */
         MVC   @AL00001(16),@AL00325                               0325
         LA    @14,ADDRHOLD                                        0325
         ST    @14,@AL00001+4                                      0325
         LA    @01,@AL00001                                        0325
         BAL   @14,ACCESS                                          0325
*   IF RF^=0 THEN                   /* IF UNSUCCESSFUL               */
         LTR   RF,RF                                               0326
         BNZ   @RT00326                                            0326
*     GO TO EXITRLSA;               /* EXIT                          */
*   ADDRHOLD=FIRSTWD;               /* SAVE ASMVT ADDRESS            */
         L     @14,FIRSTWD(,BLOKBASE)                              0328
         ST    @14,ADDRHOLD                                        0328
*   CALL ACCESS(ASIDASM,ADDRHOLD,LENGTH(ASMVT),'ASMVT   ');/* GET  0329
*                                      ASMVT                         */
         MVC   @AL00001(16),@AL00329                               0329
         LA    @14,ADDRHOLD                                        0329
         ST    @14,@AL00001+4                                      0329
         LA    @01,@AL00001                                        0329
         BAL   @14,ACCESS                                          0329
*   IF RF^=0 THEN                   /* IF UNSUCCESSFUL               */
         LTR   RF,RF                                               0330
         BNZ   @RT00330                                            0330
*     GO TO EXITRLSA;               /* EXIT                          */
*   ESAUSYM='ASMVT';                /* SET SYMBOL                    */
         MVI   ESAUSYM+5,C' '                                      0332
         MVC   ESAUSYM+6(25),ESAUSYM+5                             0332
         MVC   ESAUSYM(5),@CC02750                                 0332
*   ESAUDTY='M';                    /* INDICATE STRUCTURE            */
         MVI   ESAUDTY,C'M'                                        0333
*   ESAUDTD='ASMVT';                /* STRUCTURE NAME                */
         MVI   ESAUDTD+5,C' '                                      0334
         MVC   ESAUDTD+6(25),ESAUDTD+5                             0334
         MVC   ESAUDTD(5),@CC02750                                 0334
*   CALL BLSRESAR(ZZ2,ESAU);        /* ADD TO CLUSTER                */
*                                                                  0335
         ST    R9,@AL00001                                         0335
         LA    @14,ESAU                                            0335
         ST    @14,@AL00001+4                                      0335
         L     @08,ZZ2RVTP(,R9)                                    0335
         L     @15,RVTESARP(,@08)                                  0335
         LA    @01,@AL00001                                        0335
         BALR  @14,@15                                             0335
*    DO;/*BLRCNVPC(ADDRHOLD) FROM(POINTER)TO(CHARACTER)SET(IN82T1)REMAR
*(CONVERT ASMVT ADDRESS)TR(ZZ1TRHEX)*/                             0336
*      /*CONVERT ASMVT ADDRESS*/                                   0337
*      PTRPTR=ADDRHOLD;/*SOURCE TO BIT/POINTER INTERMEDIATE*/      0337
         L     @14,ADDRHOLD                                        0337
         ST    @14,PTRPTR                                          0337
*      UNPK(IN82T1(1:LENGTH(IN82T1)-1),PTRBIT);/*BIT=>ZONED HEXADECIMAL
*/     IN82T1(LENGTH(IN82T1):LENGTH(IN82T1))=PTRBIT(25:32);/*FINAL ZONE
* HEXADECIMAL DIGIT*/                                              0338
         UNPK  IN82T1(7),PTRBIT(4)                                 0338
         MVC   IN82T1+7(1),PTRBIT+3                                0339
*      TR(IN82T1,ZZ1TRHEX);/*ZONED HEXADECIMAL=>EBCDIC*/           0340
         L     @14,ZZ2ZZ1P(,R9)                                    0340
         TR    IN82T1(8),ZZ1TRHEX(@14)                             0340
*    END;/*BLRCNVPC(ADDRHOLD) FROM(POINTER)TO(CHARACTER)SET(IN82T1)REMA
*K(CONVERT ASMVT ADDRESS)TR(ZZ1TRHEX)*/                            0341
*   OLDN=3;                         /* 3 SEGMENTS                    */
         MVC   OLDN(4),@CF00155                                    0342
*   OLDP(1)=ADDR(M000);             /* FIRST SEGMENT                 */
         LA    @14,M000                                            0343
         ST    @14,OLDP                                            0343
*   OLDP(2)=ADDR(IN81);             /* SEGMENT FOR BLOCK NAME        */
         LA    @14,IN81                                            0344
         ST    @14,OLDP+4                                          0344
*   OLDP(3)=ADDR(IN82);             /* SEGMENT FOR ADDRESS           */
         LA    @14,IN82                                            0345
         ST    @14,OLDP+8                                          0345
*   IN81T1='ASMVT';                 /* TEXT FOR MESSAGE              */
         MVI   IN81T1+5,C' '                                       0346
         MVC   IN81T1+6(2),IN81T1+5                                0346
         MVC   IN81T1(5),@CC02750                                  0346
*   IN81O=ADDR(M000T2)-ADDR(M000T); /* OFFSET FOR SEGMENT            */
         MVC   IN81O(2),@CH00544                                   0347
*   IN82O=ADDR(M000T3)-ADDR(M000T); /* OFFSET FOR SEGMENT            */
         MVC   IN82O(2),@CH02797                                   0348
*   IN81L=9;                        /* SEGMENT LENGTH                */
         MVC   IN81L(2),@CH02756                                   0349
*   IN82L=12;                       /* SEGMENT LENGTH                */
         MVC   IN82L(2),@CH00032                                   0350
*   CALL BLSUMPK1(ZZ2,IN82);        /* EDIT SEGMENT                  */
         ST    R9,@AL00001                                         0351
         LA    @14,IN82                                            0351
         ST    @14,@AL00001+4                                      0351
         L     @08,ZZ2BVTP(,R9)                                    0351
         L     @15,BVTMPK1P(,@08)                                  0351
         LA    @01,@AL00001                                        0351
         BALR  @14,@15                                             0351
*   CALL BLSUPUTO(ZZ2,OLD);         /* OUTPUT MESSAGE                */
         ST    R9,@AL00001                                         0352
         LA    @14,OLD                                             0352
         ST    @14,@AL00001+4                                      0352
         L     @08,ZZ2BVTP(,R9)                                    0352
         L     @15,BVTPUTOP(,@08)                                  0352
         LA    @01,@AL00001                                        0352
         BALR  @14,@15                                             0352
*                                                                  0353
*   /*****************************************************************/
*   /*                                                               */
*   /* INFORM USER OF ASM I/O REQUESTS RECEIVED AND COMPLETED        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0353
*   OLDN=3;                         /* 3 SEGMENTS                    */
         MVC   OLDN(4),@CF00155                                    0353
*   OLDP(1)=ADDR(M001);             /* POINT TO SEGMENT              */
         LA    @14,M001                                            0354
         ST    @14,OLDP                                            0354
*   OLDP(2)=ADDR(IN81);             /* POINT TO SEGMENT              */
         LA    @14,IN81                                            0355
         ST    @14,OLDP+4                                          0355
*   OLDP(3)=ADDR(IN82);             /* POINT TO SEGMENT              */
         LA    @14,IN82                                            0356
         ST    @14,OLDP+8                                          0356
*   IN81O=ADDR(M001T2)-ADDR(M001T); /* OFFSET OF SEGMENT             */
         MVC   IN81O(2),@CH02756                                   0357
*   IN82O=ADDR(M001T3)-ADDR(M001T); /* OFFSET OF SEGMENT             */
         MVC   IN82O(2),@CH00062                                   0358
*   IN81L=12;                       /* SEGMENT LENGTH                */
         LA    @14,12                                              0359
         STH   @14,IN81L                                           0359
*   IN82L=12;                       /* SEGMENT LENGTH                */
*                                                                  0360
         STH   @14,IN82L                                           0360
*    DO;/*BLRCNVUC(ASMIORQR) FROM(UNSIGNED BINARY)TO(CHARACTER)SET(IN81
*1)PATTERN REMARK(CONVERT I/O REQUESTS RECEIVED)*/                 0361
*      /*CONVERT I/O REQUESTS RECEIVED*/                           0362
*      CVD(ASMIORQR,PACKED);/*UNSIGNED BINARY=>PACKED DECIMAL*/    0362
         L     @14,ASMIORQR(,BLOKBASE)                             0362
         CVD   @14,PACKED                                          0362
*      ZONED='40404040402020202020202020202120'X;/*ED PATTERN*/    0363
         MVC   ZONED(16),@CB02760                                  0363
*      ED(ZONED(5:16),PACKED(17:64));/*PACKED DECIMAL=>EBCDIC*/    0364
         ED    ZONED+4(12),PACKED+2                                0364
*      IN81T1=ZONED(17-LENGTH(IN81T1):16);/*EBCDIC RESULT*/        0365
         MVC   IN81T1(8),ZONED+8                                   0365
*    END;/*BLRCNVUC(ASMIORQR) FROM(UNSIGNED BINARY)TO(CHARACTER)SET(IN8
*T1)PATTERN REMARK(CONVERT I/O REQUESTS RECEIVED)*/                0366
*                                                                  0366
*    DO;/*BLRCNVUC(ASMIORQC) FROM(UNSIGNED BINARY)TO(CHARACTER)SET(IN82
*1)PATTERN REMARK(CONVERT I/O REQUESTS COMPLETED)*/                0367
*      /*CONVERT I/O REQUESTS COMPLETED*/                          0368
*      CVD(ASMIORQC,PACKED);/*UNSIGNED BINARY=>PACKED DECIMAL*/    0368
         L     @14,ASMIORQC(,BLOKBASE)                             0368
         CVD   @14,PACKED                                          0368
*      ZONED='40404040402020202020202020202120'X;/*ED PATTERN*/    0369
         MVC   ZONED(16),@CB02760                                  0369
*      ED(ZONED(5:16),PACKED(17:64));/*PACKED DECIMAL=>EBCDIC*/    0370
         ED    ZONED+4(12),PACKED+2                                0370
*      IN82T1=ZONED(17-LENGTH(IN82T1):16);/*EBCDIC RESULT*/        0371
         MVC   IN82T1(8),ZONED+8                                   0371
*    END;/*BLRCNVUC(ASMIORQC) FROM(UNSIGNED BINARY)TO(CHARACTER)SET(IN8
*T1)PATTERN REMARK(CONVERT I/O REQUESTS COMPLETED)*/               0372
*   CALL BLSUMPK1(ZZ2,IN81);        /* EDIT SEGMENT                  */
         ST    R9,@AL00001                                         0373
         LA    @14,IN81                                            0373
         ST    @14,@AL00001+4                                      0373
         L     @08,ZZ2BVTP(,R9)                                    0373
         L     @15,BVTMPK1P(,@08)                                  0373
         LA    @01,@AL00001                                        0373
         BALR  @14,@15                                             0373
*   CALL BLSUMPK1(ZZ2,IN82);        /* EDIT SEGMENT                  */
         ST    R9,@AL00001                                         0374
         LA    @14,IN82                                            0374
         ST    @14,@AL00001+4                                      0374
         L     @08,ZZ2BVTP(,R9)                                    0374
         L     @15,BVTMPK1P(,@08)                                  0374
         LA    @01,@AL00001                                        0374
         BALR  @14,@15                                             0374
*   CALL BLSUPUTO(ZZ2,OLD);         /* PUT OUT MESSAGE               */
         ST    R9,@AL00001                                         0375
         LA    @14,OLD                                             0375
         ST    @14,@AL00001+4                                      0375
         L     @08,ZZ2BVTP(,R9)                                    0375
         L     @15,BVTPUTOP(,@08)                                  0375
         LA    @01,@AL00001                                        0375
         BALR  @14,@15                                             0375
*                                                                  0376
*   /*****************************************************************/
*   /*                                                               */
*   /* GET PART                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0376
*   ADDRHOLD=ASMPART;               /* SAVE PART ADDRESS             */
         L     @14,ASMPART(,BLOKBASE)                              0376
         ST    @14,ADDRHOLD                                        0376
*   CALL ACCESS(ASIDASM,ADDRHOLD,LENGTH(PART),'PART    ');/* GET PART*/
         MVC   @AL00001(16),@AL00377                               0377
         LA    @14,ADDRHOLD                                        0377
         ST    @14,@AL00001+4                                      0377
         LA    @01,@AL00001                                        0377
         BAL   @14,ACCESS                                          0377
*   IF RF^=0 THEN                   /* IF UNSUCCESSFUL               */
         LTR   RF,RF                                               0378
         BNZ   @RT00378                                            0378
*     GO TO EXITRLSA;               /* EXIT                          */
*   IF PARTIDEN^='PART' THEN        /* INVALID PART                  */
         CLC   PARTIDEN(4,BLOKBASE),@CC02766                       0380
         BE    @RF00380                                            0380
*     DO;                                                          0381
*       CALL BLSUPUTO(ZZ2,OLD);     /* PUT OUT MESSAGE               */
         ST    R9,@AL00001                                         0382
         LA    @14,OLD                                             0382
         ST    @14,@AL00001+4                                      0382
         L     @08,ZZ2BVTP(,R9)                                    0382
         L     @15,BVTPUTOP(,@08)                                  0382
         LA    @01,@AL00001                                        0382
         BALR  @14,@15                                             0382
*       RETC=ZZZFLAGE;              /* SET RETURN CODE               */
         LA    RETC,8                                              0383
*       GO TO EXITRLSA;             /* EXIT                          */
         B     EXITRLSA                                            0384
*     END;                                                         0385
*   LENPART=LENGTH(PART)+(PARTSIZE*LENGTH(PARTENT));/* LENGTH OF PART*/
@RF00380 L     @14,PARTSIZE(,BLOKBASE)                             0386
         SLA   @14,6                                               0386
         AL    @14,@CF01026                                        0386
         ST    @14,LENPART                                         0386
*   CALL ACCESS(ASIDASM,ADDRHOLD,LENPART,'PART    ');/* WHOLE PART   */
         LA    @14,@CF00068                                        0387
         ST    @14,@AL00001                                        0387
         LA    @14,ADDRHOLD                                        0387
         ST    @14,@AL00001+4                                      0387
         LA    @14,LENPART                                         0387
         ST    @14,@AL00001+8                                      0387
         LA    @14,@CC02765                                        0387
         ST    @14,@AL00001+12                                     0387
         LA    @01,@AL00001                                        0387
         BAL   @14,ACCESS                                          0387
*   IF RF^=0 THEN                   /* IF UNSUCCESSFUL               */
         LTR   RF,RF                                               0388
         BNZ   @RT00388                                            0388
*     GO TO EXITRLSA;               /* EXIT                          */
*   ESAUSYM='PART';                 /* SYMBOL                        */
         MVI   ESAUSYM+4,C' '                                      0390
         MVC   ESAUSYM+5(26),ESAUSYM+4                             0390
         MVC   ESAUSYM(4),@CC02766                                 0390
*   ESAUDTY='M';                    /* STRUCTURE                     */
         MVI   ESAUDTY,C'M'                                        0391
*   ESAUDTD='PART';                 /* STRUCTURE NAME                */
         MVI   ESAUDTD+4,C' '                                      0392
         MVC   ESAUDTD+5(26),ESAUDTD+4                             0392
         MVC   ESAUDTD(4),@CC02766                                 0392
*   CALL BLSRESAR(ZZ2,ESAU);        /* ADD TO EQ DATASET             */
*                                                                  0393
         ST    R9,@AL00001                                         0393
         LA    @14,ESAU                                            0393
         ST    @14,@AL00001+4                                      0393
         L     @08,ZZ2RVTP(,R9)                                    0393
         L     @15,RVTESARP(,@08)                                  0393
         LA    @01,@AL00001                                        0393
         BALR  @14,@15                                             0393
*    DO;/*BLRCNVPC(ADDRHOLD) FROM(POINTER)TO(CHARACTER)SET(IN82T1)REMAR
*(CONVERT PART ADDRESS)TR(ZZ1TRHEX)*/                              0394
*      /*CONVERT PART ADDRESS*/                                    0395
*      PTRPTR=ADDRHOLD;/*SOURCE TO BIT/POINTER INTERMEDIATE*/      0395
         L     @14,ADDRHOLD                                        0395
         ST    @14,PTRPTR                                          0395
*      UNPK(IN82T1(1:LENGTH(IN82T1)-1),PTRBIT);/*BIT=>ZONED HEXADECIMAL
*/     IN82T1(LENGTH(IN82T1):LENGTH(IN82T1))=PTRBIT(25:32);/*FINAL ZONE
* HEXADECIMAL DIGIT*/                                              0396
         UNPK  IN82T1(7),PTRBIT(4)                                 0396
         MVC   IN82T1+7(1),PTRBIT+3                                0397
*      TR(IN82T1,ZZ1TRHEX);/*ZONED HEXADECIMAL=>EBCDIC*/           0398
         L     @14,ZZ2ZZ1P(,R9)                                    0398
         TR    IN82T1(8),ZZ1TRHEX(@14)                             0398
*    END;/*BLRCNVPC(ADDRHOLD) FROM(POINTER)TO(CHARACTER)SET(IN82T1)REMA
*K(CONVERT PART ADDRESS)TR(ZZ1TRHEX)*/                             0399
*   OLDN=3;                         /* 3 SEGMENTS                    */
         MVC   OLDN(4),@CF00155                                    0400
*   OLDP(1)=ADDR(M000);             /* POINT TO SEGMENT              */
         LA    @14,M000                                            0401
         ST    @14,OLDP                                            0401
*   OLDP(2)=ADDR(IN81);             /* POINT TO SEGMENT              */
         LA    @14,IN81                                            0402
         ST    @14,OLDP+4                                          0402
*   OLDP(3)=ADDR(IN82);             /* POINT TO SEGMENT              */
         LA    @14,IN82                                            0403
         ST    @14,OLDP+8                                          0403
*   IN81T1='PART';                  /* SEGMENT TEXT                  */
         MVI   IN81T1+4,C' '                                       0404
         MVC   IN81T1+5(3),IN81T1+4                                0404
         MVC   IN81T1(4),@CC02766                                  0404
*   IN81O=ADDR(M000T2)-ADDR(M000T); /* SEGMENT OFFSET                */
         MVC   IN81O(2),@CH00544                                   0405
*   IN82O=ADDR(M000T3)-ADDR(M000T); /* SEGMENT OFFSET                */
         MVC   IN82O(2),@CH02797                                   0406
*   IN81L=8;                        /* SEGMENT LENGTH                */
         MVC   IN81L(2),@CH00051                                   0407
*   IN82L=12;                       /* SEGMENT LENGTH                */
         MVC   IN82L(2),@CH00032                                   0408
*   CALL BLSUMPK1(ZZ2,IN82);        /* EDIT SEGMENT                  */
         ST    R9,@AL00001                                         0409
         LA    @14,IN82                                            0409
         ST    @14,@AL00001+4                                      0409
         L     @08,ZZ2BVTP(,R9)                                    0409
         L     @15,BVTMPK1P(,@08)                                  0409
         LA    @01,@AL00001                                        0409
         BALR  @14,@15                                             0409
*   CALL BLSUPUTO(ZZ2,OLD);         /* PUT OUT MESSAGE               */
         ST    R9,@AL00001                                         0410
         LA    @14,OLD                                             0410
         ST    @14,@AL00001+4                                      0410
         L     @08,ZZ2BVTP(,R9)                                    0410
         L     @15,BVTPUTOP(,@08)                                  0410
         LA    @01,@AL00001                                        0410
         BALR  @14,@15                                             0410
*   PAREPTR=ADDR(PARTENTS);         /* POINT TO PART ENTRIES         */
         LA    PAREPTR,PARTENTS(,BLOKBASE)                         0411
*                                                                  0412
*   /*****************************************************************/
*   /*                                                               */
*   /* EXAMINE PART ENTRIES                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0412
*   MAXPARTS=PARTEUSE;              /* SAVE NUMBER OF PARES USED     */
         L     MAXPARTS,PARTEUSE(,BLOKBASE)                        0412
*   DO I=1 TO MAXPARTS;             /* GO DOWN PART ENTRIES          */
         LA    I,1                                                 0413
         B     @DE00413                                            0413
@DL00413 DS    0H                                                  0414
*     IF PARENUSE='1'B THEN                                        0414
         TM    PARENUSE(PAREPTR),B'10000000'                       0414
         BO    @RT00414                                            0414
*       GO TO ENDPART;              /* NOT IN USE                    */
*                                                                  0415
*      DO;/*BLRCNVUC(PARENN) FROM(UNSIGNED BINARY)TO(CHARACTER)SET(SAVE
*N)PATTERN REMARK(CONVERT PART NUMBER)*/                           0416
*        /*CONVERT PART NUMBER*/                                   0417
*        CVD(PARENN,PACKED);/*UNSIGNED BINARY=>PACKED DECIMAL*/    0417
         LH    @14,PARENN(,PAREPTR)                                0417
         CVD   @14,PACKED                                          0417
*        ZONED='40404040402020202020202020202120'X;/*ED PATTERN*/  0418
         MVC   ZONED(16),@CB02760                                  0418
*        ED(ZONED(5:16),PACKED(17:64));/*PACKED DECIMAL=>EBCDIC*/  0419
         ED    ZONED+4(12),PACKED+2                                0419
*        SAVENN=ZONED(17-LENGTH(SAVENN):16);/*EBCDIC RESULT*/      0420
         MVC   SAVENN(8),ZONED+8                                   0420
*      END;/*BLRCNVUC(PARENN) FROM(UNSIGNED BINARY)TO(CHARACTER)SET(SAV
*NN)PATTERN REMARK(CONVERT PART NUMBER)*/                          0421
*     CALL ACCESS(0,PAREUCBP,(ADDR(UCBNAME)-ADDR(UCBOB))+LENGTH(UCBNAME
*         ),'UCB     ');            /* GET PART OF UCB THRU UCBNAME
*                                      FIELD                         */
         MVC   @AL00001(16),@AL00422                               0422
         LA    @14,PAREUCBP(,PAREPTR)                              0422
         ST    @14,@AL00001+4                                      0422
         LA    @01,@AL00001                                        0422
         BAL   @14,ACCESS                                          0422
*     IF RF^=0 THEN                 /* IF UNSUCCESSFUL               */
         LTR   RF,RF                                               0423
         BNZ   @RT00423                                            0423
*       GO TO EXITRLSA;             /* EXIT                          */
*     OLDN=3;                       /* 3 SEGMENTS                    */
         MVC   OLDN(4),@CF00155                                    0425
*     IN81L=12;                     /* SEGMENT LENGTH                */
         LA    @14,12                                              0426
         STH   @14,IN81L                                           0426
*     IN82L=12;                     /* SEGMENT LENGTH                */
         STH   @14,IN82L                                           0427
*     IN81T1=SAVENN;                /* SEGMENT TEXT                  */
         MVC   IN81T1(8),SAVENN                                    0428
*     CALL BLSUMPK1(ZZ2,IN81);      /* EDIT SEGMENT                  */
         ST    R9,@AL00001                                         0429
         LA    @14,IN81                                            0429
         ST    @14,@AL00001+4                                      0429
         L     @04,ZZ2BVTP(,R9)                                    0429
         L     @15,BVTMPK1P(,@04)                                  0429
         LA    @01,@AL00001                                        0429
         BALR  @14,@15                                             0429
*     OLDP(1)=ADDR(M002);           /* POINT TO SEGMENT              */
         LA    @14,M002                                            0430
         ST    @14,OLDP                                            0430
*     OLDP(2)=ADDR(IN81);           /* POINT TO SEGMENT              */
         LA    @14,IN81                                            0431
         ST    @14,OLDP+4                                          0431
*     OLDP(3)=ADDR(IN82);           /* POINT TO SEGMENT              */
         LA    @14,IN82                                            0432
         ST    @14,OLDP+8                                          0432
*     IN82T1=UCBNAME;               /* SEGMENT TEXT                  */
         MVI   IN82T1+3,C' '                                       0433
         MVC   IN82T1+4(4),IN82T1+3                                0433
         MVC   IN82T1(3),UCBNAME(BLOKBASE)                         0433
*     IN81O=ADDR(M002T2)-ADDR(M002T);/* SEGMENT OFFSET               */
         MVC   IN81O(2),@CH00309                                   0434
*     IN82O=ADDR(M002T3)-ADDR(M002T);/* SEGMENT OFFSET               */
         MVC   IN82O(2),@CH02798                                   0435
*     CALL BLSUPUTO(ZZ2,OLD);       /* PUT OUT MESSAGE               */
         ST    R9,@AL00001                                         0436
         LA    @14,OLD                                             0436
         ST    @14,@AL00001+4                                      0436
         L     @04,ZZ2BVTP(,R9)                                    0436
         L     @15,BVTPUTOP(,@04)                                  0436
         LA    @01,@AL00001                                        0436
         BALR  @14,@15                                             0436
*     NUMIORB=PAREIORN;             /* NUMBER OF IORBS               */
         SLR   NUMIORB,NUMIORB                                     0437
         IC    NUMIORB,PAREIORN(,PAREPTR)                          0437
*     NEXTIORB=PAREIORB;            /* IORB POINTER                  */
*                                                                  0438
         L     @14,PAREIORB(,PAREPTR)                              0438
         ST    @14,NEXTIORB                                        0438
*     /***************************************************************/
*     /*                                                             */
*     /* EXAMINE IORBS                                               */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0439
*     DO J=1 TO NUMIORB WHILE(NEXTIORB^=0);/* EXAMINE IORBS          */
         LA    @14,1                                               0439
         B     @DE00439                                            0439
@DL00439 L     @14,NEXTIORB                                        0439
         LTR   @14,@14                                             0439
         BZ    @DC00439                                            0439
*       CALL ACCESS(0,NEXTIORB,(ADDR(IORIOSB)-ADDR(IORB))+LENGTH(  0440
*           IORIOSB),'IORB    ');   /* GET PART OF IORB THRU IOSB PTR*/
         MVC   @AL00001(16),@AL00440                               0440
         LA    @14,NEXTIORB                                        0440
         ST    @14,@AL00001+4                                      0440
         LA    @01,@AL00001                                        0440
         BAL   @14,ACCESS                                          0440
*       IF RF^=0 THEN                                              0441
         LTR   RF,RF                                               0441
         BZ    @RF00441                                            0441
*         DO;                       /* IF UNSUCCESSFUL               */
*           RETC=MAX(RETC,ZZZFLAGE);/* SET RETURN CODE               */
         LA    @14,8                                               0443
         CR    RETC,@14                                            0443
         BNL   *+6
         LR    RETC,@14                                            0443
*           GO TO ENDPART;          /* PROCESS NEXT PARTE            */
         B     ENDPART                                             0444
*         END;                                                     0445
*       IF IORID^='88'X THEN        /* OR IORB ID BAD                */
@RF00441 CLI   IORID(BLOKBASE),X'88'                               0446
         BE    @RF00446                                            0446
*         DO;                                                      0447
*           RETC=MAX(RETC,ZZZFLAGE);/* SET RETURN CODE               */
         LA    @14,8                                               0448
         CR    RETC,@14                                            0448
         BNL   *+6
         LR    RETC,@14                                            0448
*           CALL BLSUPUTO(ZZ2,OLD); /* PUT OUT ERROR MESSAGE         */
         ST    R9,@AL00001                                         0449
         LA    @14,OLD                                             0449
         ST    @14,@AL00001+4                                      0449
         L     @04,ZZ2BVTP(,R9)                                    0449
         L     @15,BVTPUTOP(,@04)                                  0449
         LA    @01,@AL00001                                        0449
         BALR  @14,@15                                             0449
*           GO TO ENDPART;          /* PROCESS NEXT PARTE            */
         B     ENDPART                                             0450
*         END;                                                     0451
*       NEXTIORB=IORIORB;           /* GET NEXT IORB POINTER         */
@RF00446 L     @14,IORIORB(,BLOKBASE)                              0452
         ST    @14,NEXTIORB                                        0452
*       IF IORFUSE='1'B THEN                                       0453
         TM    IORFUSE(BLOKBASE),B'10000000'                       0453
         BNO   @RF00453                                            0453
*         DO;                       /* IORB IN USE                   */
*                                                                  0454
*           /*********************************************************/
*           /*                                                       */
*           /* GET IOSB                                              */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0455
*           CALL ACCESS(0,IORIOSB,(ADDR(IOSUCB)-ADDR(IOSB))+LENGTH(
*               IOSUCB),'IOSB    ');/* GET PART OF IOSB THRU UCB PTR */
         MVC   @AL00001(16),@AL00455                               0455
         LA    @14,IORIOSB(,BLOKBASE)                              0455
         ST    @14,@AL00001+4                                      0455
         LA    @01,@AL00001                                        0455
         BAL   @14,ACCESS                                          0455
*           IF RF^=0 THEN           /* IF UNSUCCESSFUL               */
         LTR   RF,RF                                               0456
         BZ    @RF00456                                            0456
*             DO;                                                  0457
*               RETC=MAX(RETC,ZZZFLAGE);/* SET RETURN CODE           */
         LA    @14,8                                               0458
         CR    RETC,@14                                            0458
         BNL   *+6
         LR    RETC,@14                                            0458
*               GO TO ENDPART;      /* PROCESS NEXT PARTE            */
         B     ENDPART                                             0459
*             END;                                                 0460
*           OLDN=1;                 /* 1 SEGMENT                     */
@RF00456 MVC   OLDN(4),@CF00043                                    0461
*           OLDP(1)=ADDR(M003);     /* 1ST SEGMENT                   */
         LA    @14,M003                                            0462
         ST    @14,OLDP                                            0462
*           CALL BLSUPUTO(ZZ2,OLD); /* PUT OUT MESSAGE               */
         ST    R9,@AL00001                                         0463
         LA    @14,OLD                                             0463
         ST    @14,@AL00001+4                                      0463
         L     @04,ZZ2BVTP(,R9)                                    0463
         L     @15,BVTPUTOP(,@04)                                  0463
         LA    @01,@AL00001                                        0463
         BALR  @14,@15                                             0463
*           IF SAVECODB^=IOSNRMC THEN                              0464
         CLI   SAVECODB(BLOKBASE),X'7F'                            0464
         BE    @RF00464                                            0464
*             DO;                   /* ABNORMAL RETURN CODE          */
*                                                                  0465
*                DO;/*BLRCNVBC(SAVECODB) FROM(BIT)TO(CHARACTER)SET(IN81
*1(1:2))REMARK(CONVERT ABNORMAL IOS RETURN CODE)TR(ZZ1TRHEX)*/     0466
*                  /*CONVERT ABNORMAL IOS RETURN CODE*/            0467
*                  UNPK(IN81T1(1:1),SAVECODB);/*BIT=>ZONED HEXADECIMAL*
         UNPK  IN81T1(1),SAVECODB(1,BLOKBASE)                      0467
*                  IN81T1(2:2)=SAVECODB(LENGTH(SAVECODB)-7:LENGTH(SAVEC
*DB));/*FINAL ZONED HEXADECIMAL DIGIT*/                            0468
         MVC   IN81T1+1(1),SAVECODB(BLOKBASE)                      0468
*                  TR(IN81T1(1:2),ZZ1TRHEX);/*ZONED HEXADECIMAL=>EBCDIC
*/               END;/*BLRCNVBC(SAVECODB) FROM(BIT)TO(CHARACTER)SET(IN8
*T1(1:2))REMARK(CONVERT ABNORMAL IOS RETURN CODE)TR(ZZ1TRHEX)*/    0469
         L     @14,ZZ2ZZ1P(,R9)                                    0469
         TR    IN81T1(2),ZZ1TRHEX(@14)                             0469
*               IN81L=6;            /* LENGTH                        */
         MVC   IN81L(2),@CH00215                                   0471
*               OLDN=2;             /* 2 SEGMENTS                    */
         MVC   OLDN(4),@CF00068                                    0472
*               OLDP(1)=ADDR(M004); /* POINT TO SEGMENT              */
         LA    @14,M004                                            0473
         ST    @14,OLDP                                            0473
*               OLDP(2)=ADDR(IN81); /* POINT TO SEGMENT              */
         LA    @14,IN81                                            0474
         ST    @14,OLDP+4                                          0474
*               IN81O=ADDR(M004T2)-ADDR(M004T);/* SEGMENT OFFSET     */
         MVC   IN81O(2),@CH02799                                   0475
*               CALL BLSUPUTO(ZZ2,OLD);/* PUT OUT MESSAGE            */
         ST    R9,@AL00001                                         0476
         LA    @14,OLD                                             0476
         ST    @14,@AL00001+4                                      0476
         L     @04,ZZ2BVTP(,R9)                                    0476
         L     @15,BVTPUTOP(,@04)                                  0476
         LA    @01,@AL00001                                        0476
         BALR  @14,@15                                             0476
*               IN81L=12;           /* RESET LENGTH                  */
         MVC   IN81L(2),@CH00032                                   0477
*               RETC=MAX(RETC,ZZZFLAGW);/* SET WARNING CODE          */
         LA    @14,4                                               0478
         CR    RETC,@14                                            0478
         BNL   *+6
         LR    RETC,@14                                            0478
*             END;                                                 0479
*         END;                                                     0480
@RF00464 DS    0H                                                  0481
*     END;                                                         0481
@RF00453 LA    @14,1                                               0481
         AL    @14,J                                               0481
@DE00439 ST    @14,J                                               0481
         CR    @14,NUMIORB                                         0481
         BNH   @DL00439                                            0481
@DC00439 DS    0H                                                  0482
*ENDPART:                                                          0482
*     PAREPTR=PAREPTR+LENGTH(PARTENT);/* GO TO NEXT PART ENTRY       */
ENDPART  AL    PAREPTR,@CF00209                                    0482
*   END;                                                           0483
         AL    I,@CF00043                                          0483
@DE00413 CR    I,MAXPARTS                                          0483
         BNH   @DL00413                                            0483
*   RF=0;                           /* SUCCESSFUL COMPLETION         */
         SLR   RF,RF                                               0484
*                                                                  0485
*   /*****************************************************************/
*   /*                                                               */
*   /* PROGRAM EXIT                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0485
*EXITRLSA:                                                         0485
*   RETC=MIN(MAX(RF,RETC),ZZZFLAGT);/* SET MAX RETURN CODE           */
*                                                                  0485
EXITRLSA LR    @14,RETC                                            0485
         CR    @14,RF                                              0485
         BNL   *+6
         LR    @14,RF                                              0485
         LA    @08,16                                              0485
         CR    @14,@08                                             0485
         BNH   *+6
         LR    @14,@08                                             0485
         LR    RETC,@14                                            0485
*    DO WHILE(PDAPTR^=0);/*BLRRLSA MF(E,PD)*/                      0486
         B     @DE00486                                            0486
@DL00486 DS    0H                                                  0487
*      PDRPTR=PDAPTR;                                              0487
         L     PDRPTR,PDAPTR                                       0487
*      PDAPTR=PDXP;                                                0488
*                                                                  0488
         L     @14,PDXP-1(,PDRPTR)                                 0488
         LA    @14,0(,@14)                                         0488
         ST    @14,PDAPTR                                          0488
*    DO; /*FREEMAIN(R) LV(PDL)SP(1)A(PDDSECT)*/                    0489
*    RESPECIFY (GPR01F,GPR00F) RESTRICTED;                         0490
*    GPR00F = PDL; /* LENGTH REQUESTED*/                           0491
         L     GPR00F,PDL-1(,PDRPTR)                               0491
         ICM   GPR00F,8,@CB01966                                   0491
*    GPR01F = 1; /* SP IN REG 1 */                                 0492
         LA    GPR01F,1                                            0492
*    GEN   (SLL   GPR01F,24)                                       0493
*    NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;                  0493
         SLL   GPR01F,24
*    GPR00F = GPR00F × GPR01F; /* SP IN HI BYTE */                 0494
         OR    GPR00F,GPR01F                                       0494
*    GPR01F=ADDR(PDDSECT); /*SET REGISTER ONE*/                    0495
         LR    GPR01F,PDRPTR                                       0495
*    SVC(10); /* R-FORM OF GETMAIN*/                               0496
         SVC   10                                                  0496
*    RESPECIFY (GPR01F,GPR00F) UNRESTRICTED;                       0497
*    END; /*FREEMAIN(R) LV(PDL)SP(1)A(PDDSECT)*/                   0498
*    END;/*BLRRLSA MF(E,PD)*/                                      0499
@DE00486 L     @14,PDAPTR                                          0499
         LTR   @14,@14                                             0499
         BNZ   @DL00486                                            0499
*EXITNORL:                                                         0500
*    DO; /*FREEMAIN(R) LV(BUFSIZE)SP(1)A(INBFR)*/                  0500
EXITNORL DS    0H                                                  0501
*    RESPECIFY (GPR01F,GPR00F) RESTRICTED;                         0501
*    GPR00F = BUFSIZE; /* LENGTH REQUESTED*/                       0502
         L     GPR00F,@CF02736                                     0502
*    GPR01F = 1; /* SP IN REG 1 */                                 0503
         LA    GPR01F,1                                            0503
*    GEN   (SLL   GPR01F,24)                                       0504
*    NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;                  0504
         SLL   GPR01F,24
*    GPR00F = GPR00F × GPR01F; /* SP IN HI BYTE */                 0505
         OR    GPR00F,GPR01F                                       0505
*    GPR01F=ADDR(INBFR); /*SET REGISTER ONE*/                      0506
         LR    GPR01F,BLOKBASE                                     0506
*    SVC(10); /* R-FORM OF GETMAIN*/                               0507
         SVC   10                                                  0507
*    RESPECIFY (GPR01F,GPR00F) UNRESTRICTED;                       0508
*    END; /*FREEMAIN(R) LV(BUFSIZE)SP(1)A(INBFR)*/                 0509
*   RETURN CODE(RETC);              /* RETURN WITH CODE              */
         L     @13,4(,@13)                                         0510
         L     @00,@SIZDATD                                        0510
         LR    @01,@11                                             0510
         BLSUFRER R,LV=(0),A=(1)
         LR    @15,@06                                             0510
         L     @14,12(,@13)                                        0510
         LM    @00,@12,20(@13)                                     0510
         BR    @14                                                 0510
*                                                                  0511
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO OBTAIN DATA FROM DUMP                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0511
*ACCESS:                                                           0511
*   PROCEDURE(ACCASID,ACCADDR,ACCLENTH,ACCIDENT);                  0511
ACCESS   STM   @14,@12,@SA00002                                    0511
         MVC   @PC00002(16),0(@01)                                 0511
*   DCL                                                            0512
*     ACCIDENT CHARACTER(8);        /* IDENTIFIER                    */
*   ESAU(1:LENGTH(ESCO))=ESCO;      /* INITIALIZE RECORD             */
         MVC   ESAU(182),ESCO                                      0513
*   ESAUAS2=ACCASID;                /* ASID                  @ZA32007*/
         L     @14,@PC00002                                        0514
         L     @14,ACCASID(,@14)                                   0514
         ST    @14,ESAUAS2                                         0514
*   IF ACCASID=0 THEN                                              0515
         LTR   @14,@14                                             0515
         BNZ   @RF00515                                            0515
*     ESAUAS2=ZZ6DQ2;               /* COMMON ASID           @ZA32007*/
         L     @14,ZZ2AZZ6P(,R9)                                   0516
         L     @14,ZZ6DQ2(,@14)                                    0516
         ST    @14,ESAUAS2                                         0516
*   ESAULAD=ACCADDR;                /* ADDRESS                       */
@RF00515 L     @14,@PC00002+4                                      0517
         L     @14,ACCADDR(,@14)                                   0517
         ST    @14,ESAULAD                                         0517
*   ESAUDLE=ACCLENTH;               /* LENGTH                        */
         L     @14,@PC00002+8                                      0518
         L     @14,ACCLENTH(,@14)                                  0518
         ST    @14,ESAUDLE                                         0518
*   ESAUAST=ZZZASTCV;               /* VIRTUAL                       */
         MVC   ESAUAST(2),@CC00075                                 0519
*   ESAUAS1=ZZ6DQ1;                 /* CPU                           */
         L     @14,ZZ2AZZ6P(,R9)                                   0520
         L     @14,ZZ6DQ1(,@14)                                    0520
         ST    @14,ESAUAS1                                         0520
*   ESAUSYM(1:8)=ACCIDENT;          /* SYMBOL                        */
         L     @14,@PC00002+12                                     0521
         MVC   ESAUSYM(8),ACCIDENT(@14)                            0521
*   CALL BLSRACC(ZZ2,ESAU,INBFR);   /* CALL ACCESS SERVICE RTN       */
         ST    R9,@AL00001                                         0522
         LA    @14,ESAU                                            0522
         ST    @14,@AL00001+4                                      0522
         ST    BLOKBASE,@AL00001+8                                 0522
         L     @08,ZZ2RVTP(,R9)                                    0522
         L     @15,RVTRACCP(,@08)                                  0522
         LA    @01,@AL00001                                        0522
         BALR  @14,@15                                             0522
*   IF RF^=0 THEN                   /* IF UNSUCCESSFUL               */
         LTR   RF,RF                                               0523
         BZ    @RF00523                                            0523
*     RETURN CODE(RF);              /* RETURN                        */
*                                                                  0524
         L     @14,@SA00002                                        0524
         LM    @00,@12,@SA00002+8                                  0524
         BR    @14                                                 0524
*    DO;/*BLRCNVPC(ACCADDR) FROM(POINTER)TO(CHARACTER)SET(IN82T1)TR(ZZ1
*RHEX)*/                                                           0525
@RF00523 DS    0H                                                  0526
*      PTRPTR=ACCADDR;/*SOURCE TO BIT/POINTER INTERMEDIATE*/       0526
         L     @14,@PC00002+4                                      0526
         L     @14,ACCADDR(,@14)                                   0526
         ST    @14,PTRPTR                                          0526
*      UNPK(IN82T1(1:LENGTH(IN82T1)-1),PTRBIT);/*BIT=>ZONED HEXADECIMAL
*/     IN82T1(LENGTH(IN82T1):LENGTH(IN82T1))=PTRBIT(25:32);/*FINAL ZONE
* HEXADECIMAL DIGIT*/                                              0527
         UNPK  IN82T1(7),PTRBIT(4)                                 0527
         MVC   IN82T1+7(1),PTRBIT+3                                0528
*      TR(IN82T1,ZZ1TRHEX);/*ZONED HEXADECIMAL=>EBCDIC*/           0529
         L     @14,ZZ2ZZ1P(,R9)                                    0529
         TR    IN82T1(8),ZZ1TRHEX(@14)                             0529
*    END;/*BLRCNVPC(ACCADDR) FROM(POINTER)TO(CHARACTER)SET(IN82T1)TR(ZZ
*TRHEX)*/                                                          0530
*                                                                  0530
*    DO;/*BLRCNVUC(ESAUAS2) FROM(UNSIGNED BINARY)TO(CHARACTER)SET(IN83T
*)PATTERN*/                                                        0531
*      CVD(ESAUAS2,PACKED);/*UNSIGNED BINARY=>PACKED DECIMAL*/     0532
         L     @14,ESAUAS2                                         0532
         CVD   @14,PACKED                                          0532
*      ZONED='40404040402020202020202020202120'X;/*ED PATTERN*/    0533
         MVC   ZONED(16),@CB02760                                  0533
*      ED(ZONED(5:16),PACKED(17:64));/*PACKED DECIMAL=>EBCDIC*/    0534
         ED    ZONED+4(12),PACKED+2                                0534
*      IN83T1=ZONED(17-LENGTH(IN83T1):16);/*EBCDIC RESULT*/        0535
         MVC   IN83T1(8),ZONED+8                                   0535
*    END;/*BLRCNVUC(ESAUAS2) FROM(UNSIGNED BINARY)TO(CHARACTER)SET(IN83
*1)PATTERN*/                    /*                       @ZA32007*/
*   IN81T1=ACCIDENT;                /* NAME OF BLOCK                 */
         L     @14,@PC00002+12                                     0537
         MVC   IN81T1(8),ACCIDENT(@14)                             0537
*   OLDN=4;                         /* 4 SEGMENTS                    */
         MVC   OLDN(4),@CF00040                                    0538
*   IN81L=12;                       /* SEGMENT LENGTH                */
         LA    @14,12                                              0539
         STH   @14,IN81L                                           0539
*   IN82L=12;                       /* SEGMENT LENGTH                */
         STH   @14,IN82L                                           0540
*   IN83L=12;                       /* SEGMENT LENGTH                */
         STH   @14,IN83L                                           0541
*   OLDP(1)=ADDR(M005);             /* POINT TO SEGMENT              */
         LA    @14,M005                                            0542
         ST    @14,OLDP                                            0542
*   OLDP(2)=ADDR(IN81);             /* POINT TO SEGMENT              */
         LA    @14,IN81                                            0543
         ST    @14,OLDP+4                                          0543
*   OLDP(3)=ADDR(IN82);             /* POINT TO SEGMENT              */
         LA    @14,IN82                                            0544
         ST    @14,OLDP+8                                          0544
*   OLDP(4)=ADDR(IN83);             /* POINT TO SEGMENT              */
         LA    @14,IN83                                            0545
         ST    @14,OLDP+12                                         0545
*   IN81O=ADDR(M005T2)-ADDR(M005T); /* SEGMENT OFFSET                */
         MVC   IN81O(2),@CH02800                                   0546
*   IN82O=ADDR(M005T3)-ADDR(M005T); /* SEGMENT OFFSET                */
         MVC   IN82O(2),@CH02801                                   0547
*   IN83O=ADDR(M005T4)-ADDR(M005T); /* SEGMENT OFFSET                */
         MVC   IN83O(2),@CH01949                                   0548
*   CALL BLSUMPK1(ZZ2,IN81);        /* EDIT SEGMENT                  */
         ST    R9,@AL00001                                         0549
         LA    @14,IN81                                            0549
         ST    @14,@AL00001+4                                      0549
         L     @08,ZZ2BVTP(,R9)                                    0549
         L     @15,BVTMPK1P(,@08)                                  0549
         LA    @01,@AL00001                                        0549
         BALR  @14,@15                                             0549
*   CALL BLSUMPK1(ZZ2,IN83);        /* EDIT SEGMENT                  */
         ST    R9,@AL00001                                         0550
         LA    @14,IN83                                            0550
         ST    @14,@AL00001+4                                      0550
         L     @08,ZZ2BVTP(,R9)                                    0550
         L     @15,BVTMPK1P(,@08)                                  0550
         LA    @01,@AL00001                                        0550
         BALR  @14,@15                                             0550
*   RETURN CODE(0);                 /* RETURN TO CALLER              */
         SLR   @15,@15                                             0551
         L     @14,@SA00002                                        0551
         LM    @00,@12,@SA00002+8                                  0551
         BR    @14                                                 0551
*   END ACCESS;                                                    0552
*                                                                  0553
*/*BLSRPEND--DEBUGGING MODULE*/                                    0553
*                                                                  0553
*/*BLSUPEND--MVS IPCS MODULE*/                                     0553
*                                                                  0553
*   DECLARE/*DATA FOR AHB MACROS*/                                 0553
*     PTRBIT BIT(32) BOUNDARY(WORD),/*DATA CONVERSION WORK AREA FOR POI
*TER DATA*/                                                        0553
*     PTRPTR POINTER DEFINED(PTRBIT),/* DATA CONVERSION WORK AREA FOR P
*INTER DATA*/                                                      0553
*     PACKED BIT(64) BOUNDARY(DWORD),/*DATA CONVERSION WORK AREA*/ 0553
*     ZONED CHARACTER(16) BOUNDARY(DWORD);/*DATA CONVERSION WORK AREA*/
*                                                                  0553
*                                                                  0553
*    DECLARE /*GENERAL PURPOSE REGISTERS */                        0554
*      GPR00F FIXED(31) REG(0),                                    0554
*      GPR01F FIXED(31) REG(1),                                    0554
*      GPR15F FIXED(31) REG(15);                                   0554
*                                                                  0554
*    DECLARE /* COMMON VARIABLES */                                0555
*      I256C CHAR(256) BASED,                                      0555
*      I031F FIXED(31) BASED,                                      0555
*      I031P PTR(31)   BASED,                                      0555
*      I015F FIXED(15) BASED,                                      0555
*      I015P PTR(15)   BASED,                                      0555
*      I008P PTR(8)    BASED,                                      0555
*      I001C CHAR(1)   BASED;                                      0555
*    GENERATE NODEFS NOREFS DATA;                                  0556
*   END BLSRASM7 /*BLRPEND(BLSRASM7) */                            0557
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (BLSRZZZ )                                        *
*/*%INCLUDE SYSLIB  (BLSUZZZ )                                        *
*/*%INCLUDE SYSLIB  (BLRFULL )                                        *
*/*%INCLUDE SYSLIB  (IKJCPPL )                                        *
*/*%INCLUDE SYSLIB  (IKJPSCB )                                        *
*/*%INCLUDE SYSLIB  (IKJECT  )                                        *
*/*%INCLUDE SYSLIB  (IKJUPT  )                                        *
*/*%INCLUDE SYSLIB  (BLSUSERV)                                        *
*/*%INCLUDE SYSLIB  (BLRSERV )                                        *
*/*%INCLUDE SYSLIB  (BLRSERVD)                                        *
*/*%INCLUDE SYSLIB  (BLSRSERV)                                        *
*/*%INCLUDE SYSLIB  (ILRASMVT)                                        *
*/*%INCLUDE SYSLIB  (CVT     )                                        *
*/*%INCLUDE SYSLIB  (ILRIORB )                                        *
*/*%INCLUDE SYSLIB  (ILRPART )                                        *
*/*%INCLUDE SYSLIB  (IECDIOSB)                                        *
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                        *
*;                                                                 0557
@EL00001 L     @13,4(,@13)                                         0557
@EF00001 L     @00,@SIZDATD                                        0557
         LR    @01,@11                                             0557
         BLSUFRER R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0557
         BR    @14                                                 0557
@DATA    DS    0H
@CH00215 DC    H'6'
@CH02756 DC    H'9'
@CH00544 DC    H'10'
@CH00032 DC    H'12'
@CH02797 DC    H'14'
@CH02800 DC    H'18'
@CH00309 DC    H'23'
@CH02801 DC    H'30'
@CH00062 DC    H'32'
@CH02798 DC    H'35'
@CH01949 DC    H'36'
@CH02799 DC    H'53'
         DS    0F
@AL00325 DC    A(@CF00048)             LIST WITH   4 ARGUMENT(S)
         DS    F
         DC    A(@CF00040)
         DC    A(@CC02748)
@AL00329 DC    A(@CF00068)             LIST WITH   4 ARGUMENT(S)
         DS    F
         DC    A(@CF00464)
         DC    A(@CC02749)
@AL00377 DC    A(@CF00068)             LIST WITH   4 ARGUMENT(S)
         DS    F
         DC    A(@CF01026)
         DC    A(@CC02765)
@AL00422 DC    A(@CF00048)             LIST WITH   4 ARGUMENT(S)
         DS    F
         DC    A(@CF00054)
         DC    A(@CC02768)
@AL00440 DC    A(@CF00048)             LIST WITH   4 ARGUMENT(S)
         DS    F
         DC    A(@CF00054)
         DC    A(@CC02769)
@AL00455 DC    A(@CF00048)             LIST WITH   4 ARGUMENT(S)
         DS    F
         DC    A(@CF01054)
         DC    A(@CC02771)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00002 DS    15F
@PC00002 DS    4F
@AL00001 DS    4A
BLSRASM7 CSECT
         DS    0F
@CF00048 DC    F'0'
@CF00043 DC    F'1'
@CH00043 EQU   @CF00043+2
@CF00068 DC    F'2'
@CH00068 EQU   @CF00068+2
@CF00155 DC    F'3'
@CF00040 DC    F'4'
@CF00051 DC    F'8'
@CH00051 EQU   @CF00051+2
@CF00054 DC    F'16'
@CF01054 DC    F'20'
@CF00209 DC    F'64'
@CF01026 DC    F'80'
@CF00464 DC    F'1024'
@CF02736 DC    F'8192'
@DATD    DSECT
         DS    0D
PDAPTR   DS    A
J        DS    F
LENPART  DS    F
NEXTIORB DS    F
ADDRHOLD DS    F
         DS    CL4
ESAU     DS    CL694
         ORG   ESAU
ESAURID  DS    CL2
@NM00108 DS    BL6
@NM00109 DS    CL8
@NM00110 DS    BL8
ESAURDX  DS    FL4
ESAUSYM  DS    CL31
ESAUELK  DS    0C
ESAURV1  DS    CL1
ESAUAS   DS    CL16
         ORG   ESAUAS
ESAUAS0  DS    0C
ESAUAST  DS    CL2
@NM00111 DS    BL2
ESAUAS1  DS    FL4
ESAUAS2  DS    FL4
@NM00112 DS    BL4
ESAUAS9  DS    0C
         ORG   ESAU+76
ESAULAD  DS    AL4
ESAUD    DS    CL60
         ORG   ESAUD
ESAUD00  DS    0C
ESAUDOF  DS    FL4
ESAUDLE  DS    FL4
ESAUDOB  DS    FL1
ESAUDLB  DS    FL1
ESAUDT   DS    CL34
         ORG   ESAUDT
ESAUDT0  DS    0C
ESAUDTY  DS    CL1
@NM00113 DS    BL1
ESAUDTD  DS    CL31
ESAUDTE  DS    CL1
ESAUDT9  DS    0C
         ORG   ESAUD+44
ESAUDIM  DS    FL4
ESAUDIL  DS    FL4
ESAUDF   DS    BL4
         ORG   ESAUDF
ESAUDFA  DS    BL1
@NM00114 EQU   ESAUDF+0
         ORG   ESAUD+56
@NM00115 DS    BL4
ESAUD99  DS    0C
         ORG   ESAU+140
ESAUMAD  DS    AL4
@NM00116 DS    BL16
ESAUKEY  DS    BL1
ESAUF    DS    BL3
         ORG   ESAUF
ESAUFS   DS    BL1
         ORG   ESAUFS
ESAUFSC  DS    BL1
ESAUFS2  EQU   ESAUFS+0
ESAUFSM  EQU   ESAUFS+0
ESAUFSA  EQU   ESAUFS+0
ESAUFSP  EQU   ESAUFS+0
ESAUFSR  EQU   ESAUFS+0
ESAUFSX  EQU   ESAUFS+0
ESAUFSS  EQU   ESAUFS+0
         ORG   ESAUF+1
ESAUFC   DS    BL1
         ORG   ESAUFC
ESAUFCD  DS    BL1
@NM00117 EQU   ESAUFC+0
         ORG   ESAUF+2
@NM00118 DS    BL1
         ORG   ESAU+164
ESAUABS  DS    FL4
@NM00119 DS    BL12
ESAUR    DS    CL514
         ORG   ESAUR
ESAURL   DS    FL2
ESAURT   DS    CL512
         ORG   ESAURT
ESAURT1  DS    CL512
         ORG   ESAU+694
ESAU999  DS    0C
         ORG   ESAU+694
         DS    CL2
OLD      DS    CL20
         ORG   OLD
OLDN     DS    FL4
OLDP     DS    4A
         ORG   OLD+20
IN81     DS    CL12
         ORG   IN81
IN81L    DS    FL2
IN81O    DS    FL2
IN81T    DS    CL8
         ORG   IN81T
IN81T1   DS    CL8
         ORG   IN81+12
IN82     DS    CL12
         ORG   IN82
IN82L    DS    FL2
IN82O    DS    FL2
IN82T    DS    CL8
         ORG   IN82T
IN82T1   DS    CL8
         ORG   IN82+12
IN83     DS    CL12
         ORG   IN83
IN83L    DS    FL2
IN83O    DS    FL2
IN83T    DS    CL8
         ORG   IN83T
IN83T1   DS    CL8
         ORG   IN83+12
SAVENN   DS    CL8
PTRBIT   DS    BL4
         DS    CL4
PACKED   DS    BL8
ZONED    DS    CL16
BLSRASM7 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
PCPTR    DC    AL4(PC)
@CC02748 DC    C'CVTASMVT'
@CC02749 DC    C'ASMVT   '
@CC02765 DC    C'PART    '
@CC02768 DC    C'UCB     '
@CC02769 DC    C'IORB    '
@CC02771 DC    C'IOSB    '
@CC02750 EQU   @CC02749
@CC02766 EQU   @CC02765
@CC02450 EQU   @CC02748
@CC00075 EQU   @CC02748
@CB02760 DC    X'40404040402020202020202020202120'
@CB01966 DC    X'00'
         DS    CL1
DTCVT    DS    CL34
         ORG   DTCVT
DTCVT0   DS    0C
DTCVTY   DC    CL1'M'
@NM00107 DC    X'00'
DTCVTD   DC    CL31'CVT'
DTCVTE   DC    CL1' '
DTCVT9   DS    0C
         ORG   DTCVT+34
ESCO     DS    CL182
         ORG   ESCO
ESCORID  DC    CL2'ES'
@NM00120 DC    X'000000000000'
@NM00121 DC    CL8' '
@NM00122 DC    X'00'
         DC    XL7'0'
ESCORDX  DC    A(0)
ESCOSYM  DC    CL31' '
ESCOELK  DS    0C
ESCORV1  DC    CL1' '
ESCOAS   DS    CL16
         ORG   ESCOAS
ESCOAS0  DS    0C
ESCOAST  DC    CL2'  '
@NM00123 DC    X'0000'
ESCOAS1  DC    A(0)
ESCOAS2  DC    A(0)
@NM00124 DC    X'00'
         DC    XL3'0'
ESCOAS9  DS    0C
         ORG   ESCO+76
ESCOLAD  DC    A(0)
ESCOD    DS    CL60
         ORG   ESCOD
ESCOD00  DS    0C
ESCODOF  DC    F'0'
ESCODLE  DC    A(4)
ESCODOB  DC    AL1(0)
ESCODLB  DC    AL1(0)
ESCODT   DS    CL34
         ORG   ESCODT
ESCODT0  DS    0C
ESCODTY  DC    CL1'U'
@NM00125 DC    X'00'
ESCODTD  DC    CL31'                               '
ESCODTE  DC    CL1' '
ESCODT9  DS    0C
         ORG   ESCOD+44
ESCODIM  DC    A(0)
ESCODIL  DC    F'0'
ESCODF   DC    X'00000000'
         ORG   ESCODF
ESCODFA  DS    BL1
@NM00126 EQU   ESCODF+0
         ORG   ESCOD+56
@NM00127 DC    X'00'
         DC    XL3'0'
ESCOD99  DS    0C
         ORG   ESCO+140
ESCOMAD  DC    A(0)
@NM00128 DC    X'00'
         DC    XL15'0'
ESCOKEY  DS    BL1
ESCOF    DC    X'00'
         DC    XL2'0'
         ORG   ESCOF
ESCOFS   DS    BL1
         ORG   ESCOFS
ESCOFSC  DS    BL1
ESCOFS2  EQU   ESCOFS+0
ESCOFSM  EQU   ESCOFS+0
ESCOFSA  EQU   ESCOFS+0
ESCOFSP  EQU   ESCOFS+0
ESCOFSR  EQU   ESCOFS+0
ESCOFSX  EQU   ESCOFS+0
ESCOFSS  EQU   ESCOFS+0
         ORG   ESCOF+1
ESCOFC   DS    BL1
         ORG   ESCOFC
ESCOFCD  DS    BL1
@NM00129 EQU   ESCOFC+0
         ORG   ESCOF+2
@NM00130 DS    BL1
         ORG   ESCO+164
ESCOABS  DC    A(0)
@NM00131 DC    X'00'
         DC    XL11'0'
ESCOR    DS    CL2
         ORG   ESCOR
ESCORL   DC    AL2(0)
ESCORT   DS    0C
         ORG   ESCORT
ESCORT1  DS    0C
         ORG   ESCO+182
ESCO999  DS    0C
         ORG   ESCO+182
M000     DS    CL18
         ORG   M000
M000L    DC    AL2(18)
M000O    DC    AL2(0)
M000T    DS    CL14
         ORG   M000T
M000T1   DC    CL10'BLS18000I '
M000T2   DC    CL4' AT '
M000T3   DS    0C
         ORG   M000+18
M001     DS    CL66
         ORG   M001
M001L    DC    AL2(66)
M001O    DC    AL2(0)
M001T    DS    CL62
         ORG   M001T
M001T1   DC    CL9'BLS18001I'
M001T2   DC    CL23' I/O REQUESTS RECEIVED,'
M001T3   DC    CL30' I/O REQUESTS COMPLETED BY ASM'
         ORG   M001+66
M002     DS    CL39
         ORG   M002
M002L    DC    AL2(39)
M002O    DC    AL2(0)
M002T    DS    CL35
         ORG   M002T
M002T1   DC    CL23'BLS18002I PAGE DATA SET'
M002T2   DC    CL12' IS ON UNIT '
M002T3   DS    0C
         ORG   M002+39
         DS    CL1
M003     DS    CL51
         ORG   M003
M003L    DC    AL2(51)
M003O    DC    AL2(0)
M003T    DS    CL47
         ORG   M003T
M003T1   DC    CL47'BLS18003I I/O REQUEST ACTIVE FOR ABOVE DATA SET'
         ORG   M003+51
         DS    CL1
M004     DS    CL58
         ORG   M004
M004L    DC    AL2(58)
M004O    DC    AL2(0)
M004T    DS    CL54
         ORG   M004T
M004T1   DC    CL53'BLS18004I IOSB FOR ABOVE HAD ABNORMAL IOSCOD VALUE C
               X'''
M004T2   DC    CL1''''
         ORG   M004+58
M005     DS    CL40
         ORG   M005
M005L    DC    AL2(40)
M005O    DC    AL2(0)
M005T    DS    CL36
         ORG   M005T
M005T1   DC    CL18'BLS18005I INVALID '
M005T2   DC    CL12' AT ADDRESS '
M005T3   DC    CL6', ASID'
M005T4   DS    0C
         ORG   M005+40
PXRO     DC    AL2(PXPRINT-PD)
         DC    AL2(PXTERM-PD)
         DC    AL2(PXDFLG-PD)
         DC    AL2(PXDFLV-PD)
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSRASM7 CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSRASM7+19)/20+7)/8)CL8'BLSRASM7'
@DATD    DSECT
         DS    0H
@DATD    DSECT
         SPACE 2
***********************************************************************
* IKJPARM--BEGIN MACROS SPECIFYING COMMAND SYNTAX                     *
***********************************************************************
         SPACE
BLSRASM7 CSECT
PC       IKJPARM DSECT=PD
@DATD    DSECT
BLSRASM7 CSECT
PXPRINT  IKJKEYWD
@DATD    DSECT
BLSRASM7 CSECT
         IKJNAME 'PRINT'
@DATD    DSECT
BLSRASM7 CSECT
         IKJNAME 'NOPRINT'
@DATD    DSECT
BLSRASM7 CSECT
PXTERM   IKJKEYWD
@DATD    DSECT
BLSRASM7 CSECT
         IKJNAME 'TERMINAL'
@DATD    DSECT
BLSRASM7 CSECT
         IKJNAME 'NOTERMINAL'
@DATD    DSECT
BLSRASM7 CSECT
PXDFLG   IKJKEYWD
@DATD    DSECT
BLSRASM7 CSECT
         IKJNAME 'FLAG',SUBFLD=PXSUBFM
@DATD    DSECT
BLSRASM7 CSECT
PXTEST   IKJKEYWD
@DATD    DSECT
BLSRASM7 CSECT
         IKJNAME 'TEST'
@DATD    DSECT
BLSRASM7 CSECT
         IKJNAME 'NOTEST'
@DATD    DSECT
BLSRASM7 CSECT
         SPACE
PXSUBFM  IKJSUBF
@DATD    DSECT
BLSRASM7 CSECT
PXDFLV   IKJKEYWD
@DATD    DSECT
BLSRASM7 CSECT
         IKJNAME 'INFORMATIONAL'
@DATD    DSECT
BLSRASM7 CSECT
         IKJNAME 'WARNING'
@DATD    DSECT
BLSRASM7 CSECT
         IKJNAME 'ERROR'
@DATD    DSECT
BLSRASM7 CSECT
         IKJNAME 'SERIOUS',ALIAS=('SEVERE')
@DATD    DSECT
BLSRASM7 CSECT
         IKJNAME 'TERMINATING'
@DATD    DSECT
PD       DSECT
PDZZ     DS    0C
BLSRASM7 CSECT
         IKJENDP
         SPACE 2
***********************************************************************
* IKJENDP--END SYNTAX DESCRIPTION                                     *
***********************************************************************
         SPACE
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSRASM7 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
NUMIORB  EQU   @03
MAXPARTS EQU   @02
I        EQU   @08
RETC     EQU   @06
THECVTPT EQU   @02
PAREPTR  EQU   @07
BLOKBASE EQU   @05
R9       EQU   @09
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
RB       EQU   @11
RD       EQU   @13
RE       EQU   @14
RF       EQU   @15
PDRPTR   EQU   @10
GPR01F   EQU   @01
GPR00F   EQU   @00
GPR15F   EQU   @15
RA       EQU   @10
RC       EQU   @12
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
ZZ1      EQU   0
ZZ1ATTN  EQU   ZZ1+360
ZZ1EVE   EQU   ZZ1ATTN+4
ZZ1F     EQU   ZZ1+368
ZZ1TRHEX EQU   ZZ1+568
ZZ1N     EQU   ZZ1+1116
ZZ2      EQU   0
ZZ2AMD   EQU   ZZ2
@NM00015 EQU   ZZ2AMD+7
ZZ2PRT   EQU   ZZ2+138
ZZ2PRTT  EQU   ZZ2PRT+4
ZZ2PRTT1 EQU   ZZ2PRTT+1
ZZ2A     EQU   ZZ2+272
ZZ2AF    EQU   ZZ2A+16
ZZ2AFX   EQU   ZZ2AF+5
ZZ2APID  EQU   ZZ2A+64
ZZ2AD    EQU   ZZ2A+74
ZZ2ADD   EQU   ZZ2AD
ZZ2ADDT  EQU   ZZ2ADD+2
ZZ2ADM   EQU   ZZ2AD+46
ZZ2ADMT  EQU   ZZ2ADM+2
ZZ2ADP   EQU   ZZ2AD+56
ZZ2ADPT  EQU   ZZ2ADP+2
ZZ2AZZ6P EQU   ZZ2A+140
ZZ2AQAS  EQU   ZZ2A+144
ZZ2AQD   EQU   ZZ2A+160
ZZ2AQDT  EQU   ZZ2AQD+10
ZZ2AQDF  EQU   ZZ2AQD+52
ZZ2STG   EQU   ZZ2+960
ZZ2ALLOP EQU   ZZ2+992
ZZ2FREEP EQU   ZZ2+996
ZZ2FF19P EQU   ZZ2+1000
ZZ2FRE1P EQU   ZZ2+1004
ZZ2FF18P EQU   ZZ2+1008
ZZ2DYNAP EQU   ZZ2+1012
ZZ2ZZ2CP EQU   ZZ2+1016
ZZ2ZZ2DP EQU   ZZ2+1020
ZZ2STAIP EQU   ZZ2+1024
ZZ2FF02P EQU   ZZ2+1028
ZZ2GETLP EQU   ZZ2+1032
ZZ2PARSP EQU   ZZ2+1036
ZZ2PTGTP EQU   ZZ2+1040
ZZ2PUTLP EQU   ZZ2+1044
ZZ2SCANP EQU   ZZ2+1048
ZZ2STCKP EQU   ZZ2+1052
ZZ2TRMOP EQU   ZZ2+1064
ZZ2TRMVP EQU   ZZ2+1068
ZZ2PUTNP EQU   ZZ2+1084
ZZ2TRMNP EQU   ZZ2+1088
ZZ2ZZ1P  EQU   ZZ2+1264
ZZ2BVTP  EQU   ZZ2+1280
ZZ2RVTP  EQU   ZZ2+1284
ZZ2CPPL  EQU   ZZ2+1292
ZZ2CPPLC EQU   ZZ2CPPL
ZZ2F     EQU   ZZ2+2824
ZZ2ITR   EQU   ZZ2+2840
ZZ2ITRE  EQU   ZZ2ITR+16
ZZ2ITSE  EQU   ZZ2+2864
ZZ2ES    EQU   ZZ2+2872
ZZ2AMDX  EQU   ZZ2+7160
ZZ2AXO   EQU   ZZ2+7934
ZZ2AXOT  EQU   ZZ2AXO+2
CMD      EQU   0
CMDT     EQU   CMD+4
PSCB     EQU   0
PSCBATR1 EQU   PSCB+16
ECT      EQU   0
ECTSWS   EQU   ECT+28
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
UPT      EQU   0
UPTSWS   EQU   UPT+12
SA       EQU   0
SA1      EQU   SA
SAR      EQU   SA+12
SAR1     EQU   SAR+12
BLSUMPK1 EQU   0
BLSUPARI EQU   0
BLSUPARU EQU   0
BLSUPUTO EQU   0
BVT      EQU   0
BVTPUTLP EQU   BVT+4
BVTPUTOP EQU   BVT+12
BVTPUTTP EQU   BVT+16
BVTPUTVP EQU   BVT+20
BVTPUTAP EQU   BVT+24
BVTPRTTP EQU   BVT+28
BVTPRTAP EQU   BVT+32
BVTPUTDP EQU   BVT+36
BVTMONP  EQU   BVT+40
BVTMON2P EQU   BVT+44
BVTVSARP EQU   BVT+48
BVTVSENP EQU   BVT+64
BVTVSERP EQU   BVT+68
BVTVSGEP EQU   BVT+72
BVTVSGUP EQU   BVT+76
BVTVSPOP EQU   BVT+80
BVTVSPUP EQU   BVT+84
BVTMPKNP EQU   BVT+104
BVTMONLP EQU   BVT+108
BVTPUTCP EQU   BVT+132
BVTMPK1P EQU   BVT+136
BVTZZ2RP EQU   BVT+140
BVTPGMRP EQU   BVT+144
BVTMONAP EQU   BVT+148
BVTBLDDP EQU   BVT+152
BVTBLDLP EQU   BVT+156
BVTPGMCP EQU   BVT+160
BVTPGMDP EQU   BVT+164
BVTPGMLP EQU   BVT+168
BVTMONCP EQU   BVT+180
BVTMONDP EQU   BVT+184
BVTMONTP EQU   BVT+188
BVTPARIP EQU   BVT+192
BVTPARUP EQU   BVT+196
BVTPRTNP EQU   BVT+204
BVTVSCRP EQU   BVT+208
BVTVSMRP EQU   BVT+212
BVTMONXP EQU   BVT+216
BVTTRMAP EQU   BVT+228
ZZ6      EQU   0
ZZ6D     EQU   ZZ6+128
ZZ6DD    EQU   ZZ6D+8
ZZ6DDT   EQU   ZZ6DD+4
ZZ6DQA   EQU   ZZ6D+68
ZZ6DQ1   EQU   ZZ6D+84
ZZ6DQ2   EQU   ZZ6D+88
ZZ6DF    EQU   ZZ6D+92
ZZ6F     EQU   ZZ6+504
ZZ6B     EQU   ZZ6+768
BLSRACC  EQU   0
BLSRESAR EQU   0
BLSRESGU EQU   0
RVT      EQU   0
RVTADDRP EQU   RVT
RVTT01P  EQU   RVT+4
RVTTAP   EQU   RVT+8
RVTTBP   EQU   RVT+12
RVTTCP   EQU   RVT+16
RVTTFP   EQU   RVT+24
RVTTYP   EQU   RVT+40
RVTT02P  EQU   RVT+48
RVTT03P  EQU   RVT+52
RVTT04P  EQU   RVT+56
RVTACCLP EQU   RVT+60
RVTRACCP EQU   RVT+64
RVTTLP   EQU   RVT+68
RVTTMP   EQU   RVT+72
RVTTUP   EQU   RVT+80
RVTESGEP EQU   RVT+84
RVTESGUP EQU   RVT+88
RVTESARP EQU   RVT+92
RVTRAARP EQU   RVT+96
RVTRAGEP EQU   RVT+100
RVTADDPP EQU   RVT+104
RVTACCQP EQU   RVT+108
RVTSAGUP EQU   RVT+124
RVTSAGEP EQU   RVT+128
RVTESCKP EQU   RVT+132
RVTMSGAP EQU   RVT+136
RVTMSGDP EQU   RVT+140
RVTADDTP EQU   RVT+160
RVTADDUP EQU   RVT+164
RVTADD1P EQU   RVT+176
RVTADD2P EQU   RVT+180
RVTRSAGP EQU   RVT+184
RVTMSGBP EQU   RVT+188
RVTADDSP EQU   RVT+192
RVTADD3P EQU   RVT+196
RVTT05P  EQU   RVT+200
RVTPADSP EQU   RVT+204
RVTTRP   EQU   RVT+228
RVTADD4P EQU   RVT+232
RVTSAPCP EQU   RVT+236
RVTSAARP EQU   RVT+240
RVTSAGNP EQU   RVT+244
RVTT06P  EQU   RVT+248
RVTSAGCP EQU   RVT+252
RVTSAGQP EQU   RVT+256
RVTESGCP EQU   RVT+260
RVTESGQP EQU   RVT+264
RVTDUCKP EQU   RVT+276
RVTDUCCP EQU   RVT+280
ASMVT    EQU   0
ASMFLAG1 EQU   ASMVT
ASMFLAG2 EQU   ASMVT+1
ASMPART  EQU   ASMVT+8
ASMSTAGQ EQU   ASMVT+32
ASMIORQR EQU   ASMVT+40
ASMIORQC EQU   ASMVT+44
ASMPCCWQ EQU   ASMVT+64
ASMLSAI  EQU   ASMVT+144
ASMGOSQS EQU   ASMVT+152
ASMWKSA1 EQU   ASMVT+368
ASMWKSA2 EQU   ASMVT+448
ASMWKSA3 EQU   ASMVT+528
ASMWKSA4 EQU   ASMVT+608
ASMWKSA5 EQU   ASMVT+688
ASMPOOLS EQU   0
ASMCPAVQ EQU   ASMPOOLS+8
ASMCPRSQ EQU   ASMPOOLS+16
CVTMAP   EQU   0
CVT      EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IORB     EQU   0
IORID    EQU   IORB
IORFLGS  EQU   IORB+3
IORFUSE  EQU   IORFLGS
IORAPND  EQU   IORFLGS
IORIORB  EQU   IORB+4
IORPCCW  EQU   IORB+8
IORIOSB  EQU   IORB+12
PART     EQU   0
PARTHDR  EQU   PART
PARTIDEN EQU   PARTHDR
PARTSIZE EQU   PARTHDR+4
PARTEUSE EQU   PARTHDR+8
PARTTPAR EQU   PARTHDR+24
PARTCOMQ EQU   PARTHDR+48
PARTSPLQ EQU   PARTHDR+56
PARTDUPQ EQU   PARTHDR+64
PARTLOCQ EQU   PARTHDR+72
PARTENTS EQU   PART+80
PARTENT  EQU   0
PARELKUP EQU   PARTENT+4
PARELKFL EQU   PARELKUP
PAREIORN EQU   PARELKUP+1
PARETYPE EQU   PARTENT+8
PAREFLG1 EQU   PARTENT+9
PARENUSE EQU   PAREFLG1
PARENN   EQU   PARTENT+10
PAREIORB EQU   PARTENT+28
PAREUCBP EQU   PARTENT+44
IOSB     EQU   0
IOSFLA   EQU   IOSB
IOSACHN  EQU   IOSFLA
IOSFLB   EQU   IOSB+1
IOSFLC   EQU   IOSB+2
IOSDVALT EQU   IOSFLC
IOSPKEY  EQU   IOSB+12
IOSCOD   EQU   IOSB+13
IOSOPT   EQU   IOSB+14
IOSOPT2  EQU   IOSB+15
IOSUCB   EQU   IOSB+16
@NM00095 EQU   IOSB+20
IOSCSW   EQU   @NM00095+1
IOSTATUS EQU   IOSCSW+3
IOSIPIB  EQU   IOSB+44
IOSPATH  EQU   IOSB+86
IOSCHN   EQU   IOSPATH
IOSCKEY  EQU   IOSB+89
IOSEEKA  EQU   IOSB+100
IOSCCHH  EQU   IOSEEKA+3
IOSSKHH  EQU   IOSCCHH+2
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBNAME  EQU   UCBOB+13
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00104 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMIHTI EQU   UCBCMEXT+16
@NM00105 EQU   UCBMIHTI
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
PCCSECT  EQU   0
PDDSECT  EQU   0
PDXP     EQU   PDDSECT+1
PDL      EQU   PDDSECT+5
INBFR    EQU   0
BLSRACCL EQU   0
BLSRACCQ EQU   0
BLSRADDP EQU   0
BLSRADDR EQU   0
BLSRADDS EQU   0
BLSRADDT EQU   0
BLSRADDU EQU   0
BLSRADD1 EQU   0
BLSRADD2 EQU   0
BLSRADD3 EQU   0
BLSRADD4 EQU   0
BLSRDUCC EQU   0
BLSRDUCK EQU   0
BLSRESCK EQU   0
BLSRESGC EQU   0
BLSRESGE EQU   0
BLSRESGQ EQU   0
BLSRMSGA EQU   0
BLSRMSGB EQU   0
BLSRMSGD EQU   0
BLSRPADS EQU   0
BLSRRAAR EQU   0
BLSRRAGE EQU   0
BLSRSAAR EQU   0
BLSRSAG  EQU   0
BLSRSAGC EQU   0
BLSRSAGE EQU   0
BLSRSAGN EQU   0
BLSRSAGQ EQU   0
BLSRSAGU EQU   0
BLSRSAPC EQU   0
BLSTA    EQU   0
BLSTB    EQU   0
BLSTC    EQU   0
BLSTF    EQU   0
BLSTL    EQU   0
BLSTM    EQU   0
BLSTR    EQU   0
BLSTU    EQU   0
BLSTY    EQU   0
BLST01   EQU   0
BLST02   EQU   0
BLST03   EQU   0
BLST04   EQU   0
BLST05   EQU   0
BLST06   EQU   0
BLSUALLO EQU   0
BLSUBLDD EQU   0
BLSUBLDL EQU   0
BLSUDYNA EQU   0
BLSUFREE EQU   0
BLSUFRE1 EQU   0
BLSUMON  EQU   0
BLSUMONA EQU   0
BLSUMONC EQU   0
BLSUMOND EQU   0
BLSUMONL EQU   0
BLSUMONT EQU   0
BLSUMONX EQU   0
BLSUMON2 EQU   0
BLSUMPKN EQU   0
BLSUPGMC EQU   0
BLSUPGMD EQU   0
BLSUPGML EQU   0
BLSUPGMR EQU   0
BLSUPRTA EQU   0
BLSUPRTN EQU   0
BLSUPRTT EQU   0
BLSUPUTA EQU   0
BLSUPUTC EQU   0
BLSUPUTD EQU   0
BLSUPUTL EQU   0
BLSUPUTN EQU   0
BLSUPUTT EQU   0
BLSUPUTV EQU   0
BLSUSTAI EQU   0
BLSUTRMA EQU   0
BLSUTRMN EQU   0
BLSUTRMO EQU   0
BLSUTRMV EQU   0
BLSUVSAR EQU   0
BLSUVSCR EQU   0
BLSUVSEN EQU   0
BLSUVSER EQU   0
BLSUVSGE EQU   0
BLSUVSGU EQU   0
BLSUVSMR EQU   0
BLSUVSPO EQU   0
BLSUVSPU EQU   0
BLSUZZ2C EQU   0
BLSUZZ2D EQU   0
BLSUZZ2R EQU   0
IKJEFF02 EQU   0
IKJEFF18 EQU   0
IKJEFF19 EQU   0
IKJGETL  EQU   0
IKJPARS  EQU   0
IKJPTGT  EQU   0
IKJPUTL  EQU   0
IKJSCAN  EQU   0
IKJSTCK  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
UCBBGN   EQU   0
ACCASID  EQU   0
ACCADDR  EQU   0
ACCLENTH EQU   0
ACCIDENT EQU   0
CPPL     EQU   ZZ2CPPL
CPPLUPT  EQU   CPPL+4
CPPLPSCB EQU   CPPL+8
CPPLECT  EQU   CPPL+12
ASM1WKSV EQU   ASMWKSA1
ASM1RGSV EQU   ASM1WKSV
ASM1WRKA EQU   ASM1WKSV+60
ASM2WKSV EQU   ASMWKSA2
ASM2WRKA EQU   ASM2WKSV+52
ASM2FLGS EQU   ASM2WRKA+12
ASM3WKSV EQU   ASMWKSA3
ASM4WKSV EQU   ASMWKSA4
ASM4RGSV EQU   ASM4WKSV
ASM5WKSV EQU   ASMWKSA5
ASM5RGSV EQU   ASM5WKSV
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTASMVT EQU   CVTS01+356
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
IOSATTSC EQU   IOSIPIB
IOSWTOWA EQU   IOSIPIB
IOSPCISC EQU   IOSIPIB
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00103 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
SAVECODB EQU   IOSCOD
FIRSTWD  EQU   INBFR
PTRPTR   EQU   PTRBIT
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00103
UCBSKPFG EQU   @NM00103
UCBRIPND EQU   @NM00103
UCBRTIAC EQU   @NM00103
UCBRSV79 EQU   @NM00103
UCBRSV78 EQU   @NM00103
UCBRSV77 EQU   @NM00103
UCBOLTEP EQU   @NM00103
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBDQDSP EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00102 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
IOSPCIWA EQU   IOSPCISC+44
IOSPCIRS EQU   IOSPCISC+8
@NM00100 EQU   IOSPCISC+4
@NM00099 EQU   IOSPCISC
IOSWRNDR EQU   IOSWTOWA+4
IOSWTOPT EQU   IOSWTOWA+3
IOSWTOCP EQU   IOSWTOWA+2
IOSWTOCH EQU   IOSWTOWA
IOSATTWA EQU   IOSATTSC+40
@NM00098 EQU   IOSATTSC+24
IOSATTSN EQU   IOSATTSC
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
ASM5FLGS EQU   ASM5WKSV+64
ASM5AIA  EQU   ASM5WKSV+60
ASM5GCTR EQU   ASM5WKSV+56
ASM5SR14 EQU   ASM5WKSV+52
@NM00084 EQU   ASM5RGSV+4
ASM5RG2  EQU   ASM5RGSV
@NM00083 EQU   ASM4RGSV+4
ASM4RG2  EQU   ASM4RGSV
ASM3SR13 EQU   ASM3WKSV+28
ASM3R14B EQU   ASM3WKSV+24
ASM3R14A EQU   ASM3WKSV+20
ASM3GRPA EQU   ASM3WKSV+16
ASM3TMPA EQU   ASM3WKSV+12
ASM3PIOP EQU   ASM3WKSV+8
ASM3GENQ EQU   ASM3WKSV+4
ASM3SWPQ EQU   ASM3WKSV
ASM2SR14 EQU   ASM2WRKA+16
@NM00082 EQU   ASM2WRKA+13
ASM2WFLG EQU   ASM2FLGS
ASM2RFLG EQU   ASM2FLGS
ASM2DUPQ EQU   ASM2WRKA+8
ASM2CAQ  EQU   ASM2WRKA+4
ASM2PAQ  EQU   ASM2WRKA
ASM2RGSV EQU   ASM2WKSV
ASM1NXTA EQU   ASM1WRKA+4
ASM1ASCB EQU   ASM1WRKA
ASM1RG15 EQU   ASM1RGSV+56
@NM00081 EQU   ASM1RGSV+4
ASM1RG1  EQU   ASM1RGSV
CPPLCBUF EQU   CPPL
PDSP     EQU   PDDSECT+4
@NM00132 EQU   PDDSECT
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBFCBPE EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
@NM00106 EQU   @NM00105
UCBMIHSF EQU   @NM00105
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBMIHPB EQU   UCBFLP1
UCBMIHTB EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBSWAPF EQU   UCBFLP1
UCBINHIO EQU   UCBFLP1
UCBNSWAP EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00104
UCBHALI  EQU   @NM00104
UCBRSV09 EQU   @NM00104
UCBRSV08 EQU   @NM00104
UCBRSV07 EQU   @NM00104
UCBRSV06 EQU   @NM00104
UCBRSV05 EQU   @NM00104
UCBRSV04 EQU   @NM00104
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBMMSGP EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00101 EQU   UCB
IOSEND   EQU   IOSB+108
IOSSKR   EQU   IOSEEKA+7
IOSSKH2  EQU   IOSSKHH+1
IOSSKH1  EQU   IOSSKHH
IOSSKCC  EQU   IOSCCHH
IOSSKBB  EQU   IOSEEKA+1
IOSSKM   EQU   IOSEEKA
IOSEEK   EQU   IOSB+92
IOSMDM   EQU   IOSB+91
IOSMDB   EQU   IOSB+90
IOSCKEY7 EQU   IOSCKEY
IOSCKEY6 EQU   IOSCKEY
IOSCKEY5 EQU   IOSCKEY
IOSCKEY4 EQU   IOSCKEY
@NM00097 EQU   IOSCKEY
IOSFMSK  EQU   IOSB+88
IOSCUDEV EQU   IOSPATH+1
@NM00096 EQU   IOSCHN
IOSPATH3 EQU   IOSCHN
IOSPATH2 EQU   IOSCHN
IOSEXP   EQU   IOSCHN
IOSGDP   EQU   IOSCHN
IOSAFF   EQU   IOSB+85
IOSRSS1B EQU   IOSB+84
IOSDSID  EQU   IOSB+80
IOSVST   EQU   IOSB+76
IOSRST   EQU   IOSB+72
IOSDIE   EQU   IOSB+68
IOSABN   EQU   IOSB+64
IOSNRM   EQU   IOSB+60
IOSPCI   EQU   IOSB+56
IOSERP   EQU   IOSB+52
IOSPCHN  EQU   IOSB+48
IOSSNS   EQU   IOSB+42
IOSAPMSK EQU   IOSB+40
IOSRES4A EQU   IOSB+36
IOSUSE   EQU   IOSB+32
IOSSRB   EQU   IOSB+28
IOSCSWRC EQU   IOSCSW+5
IOSTSB   EQU   IOSTATUS+1
IOSTSA   EQU   IOSTATUS
IOSCSWCA EQU   IOSCSW
IOSCC    EQU   @NM00095
IOSOPT2X EQU   IOSOPT2
IOSIGP   EQU   IOSOPT2
IOSHTP   EQU   IOSOPT2
IOSRELSE EQU   IOSOPT
IOSAPR   EQU   IOSOPT
IOSTSLL  EQU   IOSOPT
IOSNERP  EQU   IOSOPT
IOSPSLL  EQU   IOSOPT
IOSQISCE EQU   IOSOPT
IOSDEP   EQU   IOSOPT
IOSBYP   EQU   IOSOPT
IOSPKY7  EQU   IOSPKEY
IOSPGDPX EQU   IOSPKEY
IOSIDR   EQU   IOSPKEY
IOSLCL   EQU   IOSPKEY
@NM00094 EQU   IOSPKEY
IOSPGAD  EQU   IOSB+8
IOSASID  EQU   IOSB+6
IOSPRLVL EQU   IOSB+5
IOSDVRID EQU   IOSB+4
IOSPROC  EQU   IOSB+3
IOSFLC7  EQU   IOSFLC
IOSCTCNR EQU   IOSFLC
IOSRWAIT EQU   IOSFLC
IOSTP    EQU   IOSFLC
IOSCC3WE EQU   IOSFLC
IOSVERIF EQU   IOSDVALT
IOSDVMNT EQU   IOSFLC
IOSLOG   EQU   IOSFLB
IOSBDCST EQU   IOSFLB
IOSMSG   EQU   IOSFLB
IOSFLB4  EQU   IOSFLB
IOSFLB3  EQU   IOSFLB
IOSNOTRS EQU   IOSFLB
IOSSDR   EQU   IOSFLB
IOSDIESE EQU   IOSFLB
IOSIOSB  EQU   IOSFLA
IOSDOM   EQU   IOSFLA
IOSEX    EQU   IOSFLA
IOSSMDB  EQU   IOSFLA
IOSSMDA  EQU   IOSFLA
IOSERR   EQU   IOSFLA
IOSCCHN  EQU   IOSACHN
IOSDCHN  EQU   IOSACHN
@NM00093 EQU   PARTENT+62
PARELCYL EQU   PARTENT+60
PARERQTM EQU   PARTENT+56
PAREWTQE EQU   PARTENT+52
PARENODE EQU   PARTENT+48
PAREEDBP EQU   PARTENT+40
PAREPCTP EQU   PARTENT+36
PAREPATP EQU   PARTENT+32
PARERRCT EQU   PARTENT+24
PARESLTA EQU   PARTENT+20
PARESZSL EQU   PARTENT+16
PAREIOEQ EQU   PARTENT+12
@NM00092 EQU   PAREFLG1
PAREINCP EQU   PAREFLG1
PAREDSBD EQU   PAREFLG1
@NM00091 EQU   PARETYPE
PARELOCL EQU   PARETYPE
PAREDPLX EQU   PARETYPE
PARECOMM EQU   PARETYPE
PAREPLPA EQU   PARETYPE
PARECPCT EQU   PARELKUP+2
@NM00090 EQU   PARELKFL
PAREFSIP EQU   PARELKFL
PAREPARE EQU   PARTENT
PARTLOCL EQU   PARTLOCQ+4
PARTLOCF EQU   PARTLOCQ
PARTDUPL EQU   PARTDUPQ+4
PARTDUPF EQU   PARTDUPQ
PARTSPLL EQU   PARTSPLQ+4
PARTSPLF EQU   PARTSPLQ
PARTCOML EQU   PARTCOMQ+4
PARTCOMF EQU   PARTCOMQ
PARTLOCK EQU   PARTHDR+44
PARTLKUP EQU   PARTHDR+40
@NM00089 EQU   PARTHDR+34
PARTLCNT EQU   PARTHDR+32
PARTPCTQ EQU   PARTHDR+28
PARTDSNL EQU   PARTTPAR
PARTCIR2 EQU   PARTHDR+20
PARTCIR1 EQU   PARTHDR+16
PARTAIAE EQU   PARTHDR+12
@NM00088 EQU   IORB+40
IORRSV   EQU   IORB+36
IORPARTE EQU   IORB+32
IORTSMP  EQU   IORB+24
IORERR   EQU   IORB+20
IORSAVE  EQU   IORB+16
IORSCCW  EQU   IORPCCW
IORFAE   EQU   IORAPND
IORFNE   EQU   IORAPND
IORFDI   EQU   IORAPND
IORSWAP  EQU   IORFLGS
@NM00087 EQU   IORFLGS
IORFRPS  EQU   IORFLGS
IORRQSZ  EQU   IORB+2
IORNUM   EQU   IORB+1
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00086 EQU   CVTFIX+248
@NM00085 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
ASMCPRES EQU   ASMCPRSQ+4
ASMCPTAK EQU   ASMCPRSQ
ASMCPCNT EQU   ASMCPAVQ+4
ASMCPAVL EQU   ASMCPAVQ
ASMCPEXT EQU   ASMPOOLS+6
ASMCPSIZ EQU   ASMPOOLS+4
ASMCPID  EQU   ASMPOOLS
ASMRSV12 EQU   ASMVT+1000
ASMSAVE  EQU   ASMVT+928
ASMWKSA7 EQU   ASMVT+848
ASMWKSA6 EQU   ASMVT+768
ASMACEPC EQU   ASMVT+344
ASMSWKPC EQU   ASMVT+328
ASMBWKPC EQU   ASMVT+312
ASMIOEPC EQU   ASMVT+296
ASMRSV10 EQU   ASMVT+280
ASMPVACE EQU   ASMVT+276
ASMPIOFR EQU   ASMVT+272
ASMPVACQ EQU   ASMVT+268
ASMPMSGS EQU   ASMVT+264
ASMPMSG0 EQU   ASMVT+260
ASMPFRLG EQU   ASMVT+256
ASMPRLG  EQU   ASMVT+252
ASMPACT  EQU   ASMVT+248
ASMPSAV  EQU   ASMVT+244
ASMPCMP  EQU   ASMVT+240
ASMPCMPA EQU   ASMVT+236
ASMPCMPN EQU   ASMVT+232
ASMPCMPD EQU   ASMVT+228
ASMPEX   EQU   ASMVT+224
ASMVRMTR EQU   ASMVT+220
ASMPSRBC EQU   ASMVT+216
ASMPSRMT EQU   ASMVT+212
ASMPSWPD EQU   ASMVT+208
ASMPTM   EQU   ASMVT+204
ASMPFRSW EQU   ASMVT+200
ASMPFRSL EQU   ASMVT+196
ASMPQIOE EQU   ASMVT+192
ASMRSV8  EQU   ASMVT+188
ASMVSAMW EQU   ASMVT+184
ASMTASCB EQU   ASMVT+180
ASMRLGWQ EQU   ASMVT+176
ASMRLGRQ EQU   ASMVT+172
ASMTMECB EQU   ASMVT+168
ASMTCBPT EQU   ASMVT+164
ASMREQCT EQU   ASMVT+160
ASMGOSWK EQU   ASMGOSQS+4
ASMGOSWT EQU   ASMGOSQS
ASMLSAIH EQU   ASMLSAI+4
ASMLSAIL EQU   ASMLSAI
ASMCINV  EQU   ASMVT+140
ASMSTGXA EQU   ASMVT+136
ASMLGVT  EQU   ASMVT+132
ASMSLOTV EQU   ASMVT+128
ASMERRS  EQU   ASMVT+124
ASMNVSC  EQU   ASMVT+120
ASMVSC   EQU   ASMVT+116
ASMSLOTS EQU   ASMVT+112
ASMBKSLT EQU   ASMVT+108
ASMRSV7  EQU   ASMVT+92
ASMPSRB  EQU   ASMVT+88
ASMSRBCT EQU   ASMVT+84
ASMIOCNT EQU   ASMVT+80
ASMBURST EQU   ASMVT+76
ASMPCCWN EQU   ASMVT+72
ASMPCCWC EQU   ASMPCCWQ+4
ASMPCCWA EQU   ASMPCCWQ
ASMRSV6  EQU   ASMVT+48
ASMSTAGL EQU   ASMSTAGQ+4
ASMSTAGF EQU   ASMSTAGQ
ASMRSV5  EQU   ASMVT+28
ASMMSGBF EQU   ASMVT+24
ASMEREC  EQU   ASMVT+20
ASMTRPAG EQU   ASMVT+16
ASMGOS   EQU   ASMVT+12
ASMSART  EQU   ASMVT+4
ASMDSSFS EQU   ASMVT+2
ASMWARM  EQU   ASMFLAG2
ASMQUICK EQU   ASMFLAG2
ASMNOTPT EQU   ASMFLAG2
ASMNOTMR EQU   ASMFLAG2
ASMNOSAV EQU   ASMFLAG2
ASMCALLQ EQU   ASMFLAG2
ASMPLPAS EQU   ASMFLAG1
ASMCOMMF EQU   ASMFLAG1
ASMPLPAF EQU   ASMFLAG1
ASMNODPX EQU   ASMFLAG1
ASMRSV1  EQU   ASMFLAG1
ASMNOLCL EQU   ASMFLAG1
ASMNOCWQ EQU   ASMFLAG1
ASMDUPLX EQU   ASMFLAG1
RVT99999 EQU   RVT+384
RVT0096P EQU   RVT+380
RVT0095P EQU   RVT+376
RVT0094P EQU   RVT+372
RVT0093P EQU   RVT+368
RVT0092P EQU   RVT+364
RVT0091P EQU   RVT+360
RVT0090P EQU   RVT+356
RVT0089P EQU   RVT+352
RVT0088P EQU   RVT+348
RVT0087P EQU   RVT+344
RVT0086P EQU   RVT+340
RVT0085P EQU   RVT+336
RVT0084P EQU   RVT+332
RVT0083P EQU   RVT+328
RVT0082P EQU   RVT+324
RVT0081P EQU   RVT+320
RVT0080P EQU   RVT+316
RVT0079P EQU   RVT+312
RVT0078P EQU   RVT+308
RVT0077P EQU   RVT+304
RVT0076P EQU   RVT+300
RVT0075P EQU   RVT+296
RVT0074P EQU   RVT+292
RVT0073P EQU   RVT+288
RVT0072P EQU   RVT+284
RVTDTUTP EQU   RVT+272
RVTDTMTP EQU   RVT+268
RVT0057P EQU   RVT+224
RVT0056P EQU   RVT+220
RVT0055P EQU   RVT+216
RVT0054P EQU   RVT+212
RVT0053P EQU   RVT+208
RVT0044P EQU   RVT+172
RVT0043P EQU   RVT+168
RVT0040P EQU   RVT+156
RVT0039P EQU   RVT+152
RVT0038P EQU   RVT+148
RVT0037P EQU   RVT+144
RVT0031P EQU   RVT+120
RVT0030P EQU   RVT+116
RVT0029P EQU   RVT+112
RVT0020P EQU   RVT+76
RVT0012P EQU   RVT+44
RVT0010P EQU   RVT+36
RVT0009P EQU   RVT+32
RVT0008P EQU   RVT+28
RVT0006P EQU   RVT+20
ZZ69999  EQU   ZZ6+1792
ZZ6BRB   EQU   ZZ6B+12
ZZ6BRC   EQU   ZZ6B+8
@NM00080 EQU   ZZ6B+6
ZZ6BFL   EQU   ZZ6B+4
ZZ6BDA   EQU   ZZ6B
@NM00079 EQU   ZZ6+540
ZZ6BUFI  EQU   ZZ6+536
ZZ6BUFP  EQU   ZZ6+532
ZZ6FILE  EQU   ZZ6+524
ZZ6BUFB  EQU   ZZ6+520
ZZ6BUFL  EQU   ZZ6+518
ZZ6BUFN  EQU   ZZ6+516
ZZ6ZZ6P  EQU   ZZ6+512
@NM00078 EQU   ZZ6F
ZZ6FINIT EQU   ZZ6F
ZZ6FDUOP EQU   ZZ6F
@NM00077 EQU   ZZ6+256
ZZ6D999  EQU   ZZ6D+128
@NM00076 EQU   ZZ6D+116
ZZ6DCAP  EQU   ZZ6D+112
ZZ6DPRP  EQU   ZZ6D+108
ZZ6DDA2  EQU   ZZ6D+104
ZZ6DDA1  EQU   ZZ6D+100
@NM00075 EQU   ZZ6DF
ZZ6DFSU  EQU   ZZ6DF
ZZ6DFST  EQU   ZZ6DF
ZZ6DFAB  EQU   ZZ6DF
ZZ6DFMP  EQU   ZZ6DF
ZZ6DFDU  EQU   ZZ6DF
ZZ6DFBS  EQU   ZZ6DF
ZZ6DQA9  EQU   ZZ6DQA+16
@NM00074 EQU   ZZ6DQA+12
ZZ6DQA2  EQU   ZZ6DQA+8
ZZ6DQA1  EQU   ZZ6DQA+4
@NM00073 EQU   ZZ6DQA+2
ZZ6DQAT  EQU   ZZ6DQA
ZZ6DQA0  EQU   ZZ6DQA
ZZ6DRDX  EQU   ZZ6D+64
ZZ6DELK  EQU   ZZ6D+64
ZZ6DMEM  EQU   ZZ6D+56
ZZ6DDT1  EQU   ZZ6DDT
ZZ6DDO   EQU   ZZ6DD+2
ZZ6DDL   EQU   ZZ6DD
@NM00072 EQU   ZZ6D+2
ZZ6DRID  EQU   ZZ6D
ZZ6RDCB  EQU   ZZ6
ZZ60000  EQU   ZZ6
BVT99999 EQU   BVT+256
BVT0064P EQU   BVT+252
BVT0063P EQU   BVT+248
BVT0062P EQU   BVT+244
BVT0061P EQU   BVT+240
BVT0060P EQU   BVT+236
BVT0059P EQU   BVT+232
BVT0057P EQU   BVT+224
BVT0056P EQU   BVT+220
BVTSTBLP EQU   BVT+200
BVT0045P EQU   BVT+176
BVT0044P EQU   BVT+172
BVT0033P EQU   BVT+128
BVT0032P EQU   BVT+124
BVT0031P EQU   BVT+120
BVT0030P EQU   BVT+116
BVT0029P EQU   BVT+112
BVT0026P EQU   BVT+100
BVT0025P EQU   BVT+96
BVT0024P EQU   BVT+92
BVT0023P EQU   BVT+88
BVT0016P EQU   BVT+60
BVT0015P EQU   BVT+56
BVT0014P EQU   BVT+52
BVT0003P EQU   BVT+8
BVT0001P EQU   BVT
SA99     EQU   SA+72
SARC     EQU   SAR+56
SARB     EQU   SAR+52
SARA     EQU   SAR+48
SAR9     EQU   SAR+44
SAR8     EQU   SAR+40
SAR7     EQU   SAR+36
SAR6     EQU   SAR+32
SAR5     EQU   SAR+28
SAR4     EQU   SAR+24
SAR3     EQU   SAR+20
SAR2     EQU   SAR+16
SAR0     EQU   SAR+8
SARF     EQU   SAR+4
SARE     EQU   SAR
SAFWD    EQU   SA+8
SABAK    EQU   SA+4
SA1L     EQU   SA1+1
SA1P     EQU   SA1
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00071 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00070 EQU   UPT
@NM00069 EQU   ECT+52
@NM00068 EQU   ECT+48
@NM00067 EQU   ECT+44
@NM00066 EQU   ECTSWS2+1
@NM00065 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00064 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00063 EQU   PSCB+36
@NM00062 EQU   PSCB+32
@NM00061 EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00060 EQU   PSCBATR1
@NM00059 EQU   PSCBATR1
@NM00058 EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
PSCBUSRL EQU   PSCB+7
PSCBUSER EQU   PSCB
CMDT1    EQU   CMDT
CMDO     EQU   CMD+2
CMDL     EQU   CMD
ZZ299999 EQU   ZZ2+8192
ZZ2AXOT1 EQU   ZZ2AXOT
ZZ2AXOL  EQU   ZZ2AXO
@NM00057 EQU   ZZ2+7288
@NM00056 EQU   ZZ2AMDX+4
ZZ2AMDXC EQU   ZZ2AMDX
ZZ2HSD   EQU   ZZ2+3056
@NM00055 EQU   ZZ2ES
@NM00054 EQU   ZZ2+2868
ZZ2ITSEC EQU   ZZ2ITSE+1
@NM00053 EQU   ZZ2ITSE
ZZ2ITSEP EQU   ZZ2ITSE
ZZ2ITSEW EQU   ZZ2ITSE
@NM00052 EQU   ZZ2ITR+20
ZZ2ITREC EQU   ZZ2ITRE+1
@NM00051 EQU   ZZ2ITRE
ZZ2ITREP EQU   ZZ2ITRE
ZZ2ITREW EQU   ZZ2ITRE
@NM00050 EQU   ZZ2ITR+9
ZZ2ITRRC EQU   ZZ2ITR+8
ZZ2ITR2P EQU   ZZ2ITR+4
ZZ2ITRPP EQU   ZZ2ITR
@NM00049 EQU   ZZ2F
ZZ2F3270 EQU   ZZ2F
@NM00048 EQU   ZZ2+1544
ZZ2PGM   EQU   ZZ2+1536
@NM00047 EQU   ZZ2+1526
ZZ2CW    EQU   ZZ2+1524
@NM00046 EQU   ZZ2+1504
@NM00045 EQU   ZZ2+1352
ZZ2FFSYP EQU   ZZ2+1348
ZZ2SASYP EQU   ZZ2+1344
ZZ2RDSYP EQU   ZZ2+1340
ZZ2RASYP EQU   ZZ2+1336
ZZ2PHSYP EQU   ZZ2+1332
ZZ2ESSYP EQU   ZZ2+1328
ZZ200SYP EQU   ZZ2+1324
ZZ2SCWP  EQU   ZZ2+1320
ZZ2TTLP  EQU   ZZ2+1316
ZZ2LOADP EQU   ZZ2+1312
ZZ2VRESP EQU   ZZ2+1308
ZZ2CPPLE EQU   ZZ2CPPL+12
ZZ2CPPLP EQU   ZZ2CPPL+8
ZZ2CPPLU EQU   ZZ2CPPL+4
ZZ2VRSAP EQU   ZZ2+1288
ZZ2DVTP  EQU   ZZ2+1276
@NM00044 EQU   ZZ2+1272
@NM00043 EQU   ZZ2+1268
ZZ2RPLP  EQU   ZZ2+1260
ZZ2TCBP  EQU   ZZ2+1256
@NM00042 EQU   ZZ2+1252
ZZ2ZZ2P  EQU   ZZ2+1248
@NM00041 EQU   ZZ2+1112
ZZ2FPDRP EQU   ZZ2+1108
ZZ2FDSDP EQU   ZZ2+1104
ZZ2APDRP EQU   ZZ2+1100
ZZ2ADSDP EQU   ZZ2+1096
ZZ2ENQ0P EQU   ZZ2+1092
@NM00040 EQU   ZZ2+1080
ZZ2MSG0P EQU   ZZ2+1076
ZZ2FT25P EQU   ZZ2+1072
ZZ2MSGSP EQU   ZZ2+1060
ZZ2ALOCP EQU   ZZ2+1056
@NM00039 EQU   ZZ2+976
ZZ2TOD   EQU   ZZ2+968
ZZ2STGN  EQU   ZZ2STG+4
ZZ2STGP  EQU   ZZ2STG
@NM00038 EQU   ZZ2+952
ZZ2SCMDE EQU   ZZ2+944
ZZ2SCMDN EQU   ZZ2+936
ZZ2IDENT EQU   ZZ2+928
ZZ2A9999 EQU   ZZ2A+656
@NM00037 EQU   ZZ2A+224
@NM00036 EQU   ZZ2A+220
ZZ2AQD99 EQU   ZZ2AQD+60
@NM00035 EQU   ZZ2AQD+56
@NM00034 EQU   ZZ2AQDF
ZZ2AQDFA EQU   ZZ2AQDF
ZZ2AQDIL EQU   ZZ2AQD+48
ZZ2AQDIM EQU   ZZ2AQD+44
ZZ2AQDT9 EQU   ZZ2AQDT+34
ZZ2AQDTE EQU   ZZ2AQDT+33
ZZ2AQDTD EQU   ZZ2AQDT+2
@NM00033 EQU   ZZ2AQDT+1
ZZ2AQDTY EQU   ZZ2AQDT
ZZ2AQDT0 EQU   ZZ2AQDT
ZZ2AQDLB EQU   ZZ2AQD+9
ZZ2AQDOB EQU   ZZ2AQD+8
ZZ2AQDLE EQU   ZZ2AQD+4
ZZ2AQDOF EQU   ZZ2AQD
ZZ2AQD00 EQU   ZZ2AQD
ZZ2AQAS9 EQU   ZZ2AQAS+16
@NM00032 EQU   ZZ2AQAS+12
ZZ2AQAS2 EQU   ZZ2AQAS+8
ZZ2AQAS1 EQU   ZZ2AQAS+4
@NM00031 EQU   ZZ2AQAS+2
ZZ2AQAST EQU   ZZ2AQAS
ZZ2AQAS0 EQU   ZZ2AQAS
ZZ2ADPTA EQU   ZZ2ADPT
ZZ2ADPL  EQU   ZZ2ADP
ZZ2ADMTA EQU   ZZ2ADMT
ZZ2ADML  EQU   ZZ2ADM
ZZ2ADDTA EQU   ZZ2ADDT
ZZ2ADDL  EQU   ZZ2ADD
@NM00030 EQU   ZZ2A+72
ZZ2APIDB EQU   ZZ2APID+3
ZZ2APIDA EQU   ZZ2APID
@NM00029 EQU   ZZ2A+24
@NM00028 EQU   ZZ2AF+5
@NM00027 EQU   ZZ2AF+3
ZZ2AFS   EQU   ZZ2AF+2
ZZ2AFD   EQU   ZZ2AF+2
ZZ2AFQ   EQU   ZZ2AF+2
ZZ2AF$   EQU   ZZ2AF+2
@NM00026 EQU   ZZ2AF+2
ZZ2AFM   EQU   ZZ2AF+2
@NM00025 EQU   ZZ2AF+2
@NM00024 EQU   ZZ2AF+1
ZZ2AFV   EQU   ZZ2AF+1
@NM00023 EQU   ZZ2AF+1
ZZ2AFC   EQU   ZZ2AF+1
@NM00022 EQU   ZZ2AF
ZZ2AFFS  EQU   ZZ2AF
ZZ2AFT   EQU   ZZ2AF
ZZ2AFP   EQU   ZZ2AF
@NM00021 EQU   ZZ2A+8
ZZ2ALINE EQU   ZZ2A+4
@NM00020 EQU   ZZ2A+3
ZZ2ASE   EQU   ZZ2A+2
ZZ2ACH   EQU   ZZ2A
@NM00019 EQU   ZZ2+264
@NM00018 EQU   ZZ2+263
ZZ2PRTT0 EQU   ZZ2PRTT
ZZ2PRTO  EQU   ZZ2PRT+2
ZZ2PRTL  EQU   ZZ2PRT
@NM00017 EQU   ZZ2AMD+56
ZZ2AMDXP EQU   ZZ2AMD+52
ZZ2AMDD  EQU   ZZ2AMD+48
ZZ2AMDL  EQU   ZZ2AMD+44
ZZ2AMDU  EQU   ZZ2AMD+28
ZZ2AMDF  EQU   ZZ2AMD+24
ZZ2AMDS  EQU   ZZ2AMD+20
ZZ2AMDC  EQU   ZZ2AMD+16
ZZ2AMDP  EQU   ZZ2AMD+12
ZZ2AMDB  EQU   ZZ2AMD+8
@NM00016 EQU   @NM00015
ZZ2AMD2  EQU   @NM00015
ZZ2AMD1  EQU   @NM00015
ZZ2AMD0  EQU   ZZ2AMD+6
ZZ2AMDA  EQU   ZZ2AMD+4
ZZ2AMDT  EQU   ZZ2AMD
ZZ199999 EQU   ZZ1+3072
@NM00014 EQU   ZZ1+2160
ZZ1TRTAS EQU   ZZ1+1904
ZZ1TRUPC EQU   ZZ1+1648
ZZ1TRCTX EQU   ZZ1+1392
ZZ1NASID EQU   ZZ1N+274
ZZ1NSTRL EQU   ZZ1N+272
ZZ1NOFF  EQU   ZZ1N+268
ZZ1NBDY  EQU   ZZ1N+264
ZZ1NADE  EQU   ZZ1N+260
ZZ1NADB  EQU   ZZ1N+256
ZZ1NSTR  EQU   ZZ1N
@NM00013 EQU   ZZ1+1080
ZZ1TREBC EQU   ZZ1+824
@NM00012 EQU   ZZ1+377
ZZ1USTAE EQU   ZZ1+376
@NM00011 EQU   ZZ1F+3
@NM00010 EQU   ZZ1F+2
ZZ1FPRNT EQU   ZZ1F+2
@NM00009 EQU   ZZ1F+1
ZZ1FTCAM EQU   ZZ1F+1
ZZ1FACCM EQU   ZZ1F+1
@NM00008 EQU   ZZ1F
ZZ1FM    EQU   ZZ1F
ZZ1FX    EQU   ZZ1F
ZZ1FU    EQU   ZZ1F
ZZ1EVEC  EQU   ZZ1EVE+1
@NM00007 EQU   ZZ1EVE
ZZ1EVEP  EQU   ZZ1EVE
ZZ1EVEW  EQU   ZZ1EVE
ZZ1ACMP  EQU   ZZ1ATTN
@NM00006 EQU   ZZ1+144
ZZ1FPP   EQU   ZZ1+140
ZZ1ZZ6P  EQU   ZZ1+136
@NM00005 EQU   ZZ1+84
ZZ1PLINE EQU   ZZ1+80
ZZ1PGSZ  EQU   ZZ1+76
ZZ1PCNT  EQU   ZZ1+72
@NM00004 EQU   ZZ1+68
ZZ1TPAGE EQU   ZZ1+64
ZZ1TLINE EQU   ZZ1+60
@NM00003 EQU   ZZ1+52
ZZ1DMCBP EQU   ZZ1+48
ZZ1DSDP  EQU   ZZ1+44
ZZ1PDRP  EQU   ZZ1+40
ZZ1ZZ2P  EQU   ZZ1+36
ZZ1327WP EQU   ZZ1+32
ZZ1ACBP  EQU   ZZ1+28
@NM00002 EQU   ZZ1+24
ZZ1PDCBP EQU   ZZ1+20
ZZ1BLRBL EQU   ZZ1+16
@NM00001 EQU   ZZ1+12
ZZ1PNULL EQU   ZZ1+8
ZZ1NULL  EQU   ZZ1+4
ZZ1IDE   EQU   ZZ1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00312 EQU   EXITRLSA
@RT00321 EQU   EXITRLSA
@RT00326 EQU   EXITRLSA
@RT00330 EQU   EXITRLSA
@RT00378 EQU   EXITRLSA
@RT00388 EQU   EXITRLSA
@RT00414 EQU   ENDPART
@RT00423 EQU   EXITRLSA
@ENDDATA EQU   *
         END   BLSRASM7,(C'PLS1736',0701,78117)
