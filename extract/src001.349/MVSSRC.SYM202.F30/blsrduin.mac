DUIN     TITLE 'BLSRDUIN--DUMP INITIALIZATION PROCESSOR'
*/* CHANGE ACTIVITY -------------------------------------------------*/
*/*   THIS MODULE WAS WRITTEN FOR @G57LPRW                           */
*/*   THIS MODULE WAS CHANGED FOR @ZA33629                   @ZA33629*/
*/*------------------------------------------------------------------*/
BLSRDUIN CSECT ,                                                01S0002
@MAINENT DS    0H                                               01S0002
         USING *,@15                                            01S0002
         B     @PROLOG                                          01S0002
         DC    AL1(16)                                          01S0002
         DC    C'BLSRDUIN  78.208'                              01S0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0002
         BALR  @12,0                                            01S0002
@PSTART  DS    0H                                               01S0002
         USING @PSTART,@12                                      01S0002
         L     @00,@SIZDATD                                     01S0002
         BLSUALLR R,LV=(0)
         LR    @11,@01                                          01S0002
         USING @DATD,@11                                        01S0002
         ST    @13,@SA00001+4                                   01S0002
         LM    @00,@01,20(@13)                                  01S0002
         ST    @11,8(,@13)                                      01S0002
         LR    @13,@11                                          01S0002
*   FLAG='00'X;                     /* PROCESSING CONTROL FLAGS      */
         MVI   FLAG,X'00'                                       01S0168
*   ZZ2ACH=0;                       /* TEMPORARY SCAN DEPTH LIMIT    */
         SLR   @14,@14                                          01S0169
         STH   @14,ZZ2ACH(,R9)                                  01S0169
*   RESPECIFY                                                   01S0170
*    (R1) RESTRICTED;               /* ->CPPL                        */
*   R1=ADDR(CPPL);                  /* ->PARAMETER LIST              */
         LA    R1,CPPL(,R9)                                     01S0171
*   CALL IKJEFT25;                  /* DISPLAY TIME STAMP            */
         L     @15,ZZ2FT25P(,R9)                                01S0172
         BALR  @14,@15                                          01S0172
*   RESPECIFY                                                   01S0173
*    (R1) UNRESTRICTED;             /* ->CPPL                        */
*   RESPECIFY                                                   01S0174
*    (RA) RESTRICTED;               /* ->ZZ6                         */
*   RA=ADDR(ZZ6);                   /* ->ZZ6                         */
         L     RA,ZZ2AZZ6P(,R9)                                 01S0175
*   RESPECIFY                                                   01S0176
*     ZZ6 BASED(RA);                /* ZZ6--DUMP FILE CONTROL BLOCK  */
*   DCBEODA=ADDR(L010);             /* ->EODAD EXIT                  */
         LA    @14,L010                                         01S0177
         STCM  @14,7,DCBEODA+28(RA)                             01S0177
*   CALL BLSUTRMV(ZZ2,M122);        /* TRANSMIT MESSAGE M122         */
         ST    R9,@AL00001                                      01S0178
         LA    @14,M122                                         01S0178
         ST    @14,@AL00001+4                                   01S0178
         L     @15,ZZ2TRMVP(,R9)                                01S0178
         LA    @01,@AL00001                                     01S0178
         BALR  @14,@15                                          01S0178
         SPACE 1
*                                                               01S0179
*/*------------------------------------------------------------------*/
*/* READ DUMP RECORDS AND WRITE VSAM RECORDS                         */
*/*------------------------------------------------------------------*/
*                                                               01S0179
*   DO ZZ6DDA1=0 TO 16777215 WHILE(FLAGEND=ZZZ0);               01S0179
         SLR   @14,@14                                          01S0179
         ST    @14,ZZ6DDA1(,RA)                                 01S0179
@DL00179 TM    FLAGEND,B'01000000'                              01S0179
         BNZ   @DC00179                                         01S0179
*     FLAGEND=ZZZ1;                 /* ANTICIPATE EOF ON GET         */
*     FLAGPUT=ZZZ1;                 /* CREATE ADDRESS SPACE RECORD   */
         OI    FLAGEND,B'01010000'                              01S0181
*     RESPECIFY                                                 01S0182
*      (R1) RESTRICTED;             /* ->HSD--HIGH SPEED DUMP RECORD */
*     GENERATE FLOWS(L010) SETS(ZZ6RDCB) CODE(GET   (RA));      01S0183
         GET   (RA)
*     HSDPTR=R1;                    /* ->HSD--HIGH SPEED DUMP RECORD */
         LR    HSDPTR,R1                                        01S0184
*     RESPECIFY                                                 01S0185
*      (R1) UNRESTRICTED;           /* ->HSD--HIGH SPEED DUMP RECORD */
*     FLAGEND=ZZZ0;                 /* NO EOF ON GET                 */
         NI    FLAGEND,B'10111111'                              01S0186
*     RAAU=RACO;                    /* INITIALIZE ADDRESS SPACE RCD. */
         L     @14,ZZ2RASYP(,R9)                                01S0187
         MVC   RAAU(148),RACO(@14)                              01S0187
*     RAAURDA(1)=ZZ6DDA1;           /* RELATIVE RECORD NUMBER        */
         MVC   RAAURDA(4),ZZ6DDA1(RA)                           01S0188
*     IF HSDTYPE=HSDTYPES&HSDCLA=HSDCLAH THEN/* HEADER RECORD        */
*                                                               01S0189
         CLI   HSDTYPE(HSDPTR),X'FF'                            01S0189
         BNE   @RF00189                                         01S0189
         CLI   HSDCLA(HSDPTR),X'FF'                             01S0189
         BNE   @RF00189                                         01S0189
*       /*************************************************************/
*       /*                                                           */
*       /* HEADER RECORD                                             */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0190
*       DO;                         /* HEADER RECORD                 */
*         IF FLAGASID = ZZZ1 THEN DO; /*QUIT IF APPARENT     @ZA33629*/
         TM    FLAGASID,B'10000000'                             01S0191
         BNO   @RF00191                                         01S0191
*           FLAGEND = ZZZ1;           /*SECOND HEADER        @ZA33629*/
         OI    FLAGEND,B'01000000'                              01S0193
*           GO TO L010;               /*APPEARS              @ZA33629*/
         B     L010                                             01S0194
*         END;                        /*                     @ZA33629*/
*         RAAUAS=DATSH;             /* HEADER ADDRESS SPACE          */
@RF00191 MVC   RAAUAS(16),DATSH                                 01S0196
*         RAAURLE(1)=LENGTH(HSDH);  /* FULL RECORD ADDRESS SPACE     */
         MVC   RAAURLE(4),@CF00462                              01S0197
*         RAAUROF(1)=0;             /* DATA ORIGIN=RECORD ORIGIN     */
         SLR   @14,@14                                          01S0198
         ST    @14,RAAUROF                                      01S0198
*         CALL BLSRDUIH(ZZ2,HSDH);  /* PROCESS HEADER RECORD         */
         ST    R9,@AL00001                                      01S0199
         ST    HSDPTR,@AL00001+4                                01S0199
         L     @15,@CV01584                                     01S0199
         LA    @01,@AL00001                                     01S0199
         BALR  @14,@15                                          01S0199
*         FLAGASID=ZZZ1;            /* DEFAULT ASID ESTABLISHED      */
         OI    FLAGASID,B'10000000'                             01S0200
*       END;                        /* HEADER RECORD                 */
*     ELSE                          /* NOT A HEADER RECORD           */
*       IF HSDTYPE=HSDTYPES&HSDCLA=HSDCLAC THEN/* CPU STATUS RCD     */
*                                                               01S0202
         B     @RC00189                                         01S0202
@RF00189 CLI   HSDTYPE(HSDPTR),X'FF'                            01S0202
         BNE   @RF00202                                         01S0202
         CLI   HSDCLA(HSDPTR),X'0F'                             01S0202
         BNE   @RF00202                                         01S0202
*         /***********************************************************/
*         /*                                                         */
*         /* CPU STATUS RECORD                                       */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0203
*         DO;                       /* CPU STATUS RECORD             */
*           RAAUAS=DATSC;           /* CPU STATUS ADDRESS SPACE      */
         MVC   RAAUAS(16),DATSC                                 01S0204
*           IF HSDCSFU=ZZZ1 THEN    /* UNIPROCESSOR OR HALF-DUPLEX   */
         TM    HSDCSFU(HSDPTR),B'10000000'                      01S0205
         BNO   @RF00205                                         01S0205
*             RAAUAS1=HSDCPADD;     /* CPU ADDRESS                   */
         SLR   @14,@14                                          01S0206
         ICM   @14,3,HSDCPADD(HSDPTR)                           01S0206
         ST    @14,RAAUAS1                                      01S0206
*           ELSE                    /* MULTIPROCESSOR                */
*             RAAUAS1=HSDCSCPU;     /* CPU ADDRESS                   */
         B     @RC00205                                         01S0207
@RF00205 SLR   @14,@14                                          01S0207
         ICM   @14,3,HSDCSCPU(HSDPTR)                           01S0207
         ST    @14,RAAUAS1                                      01S0207
*           CALL BLSRDUIC(ZZ2,HSDC);/* PROCESS CPU STATUS RECORD     */
@RC00205 ST    R9,@AL00001                                      01S0208
         ST    HSDPTR,@AL00001+4                                01S0208
         L     @15,@CV01583                                     01S0208
         LA    @01,@AL00001                                     01S0208
         BALR  @14,@15                                          01S0208
*         END;                      /* CPU STATUS RECORD             */
*       ELSE                        /* NOT A CPU STATUS RECORD       */
*         IF HSDTYPE^=HSDTYPES THEN /* DUMP STORAGE RECORD           */
*                                                               01S0210
         B     @RC00202                                         01S0210
@RF00202 CLI   HSDTYPE(HSDPTR),X'FF'                            01S0210
         BE    @RF00210                                         01S0210
*           /*********************************************************/
*           /*                                                       */
*           /* DUMP STORAGE RECORD                                   */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0211
*           DO;                     /* DUMP STORAGE RECORD           */
*             RAAURIA(1)=HSDSP;     /* ->FIRST BYTE                  */
         MVC   RAAURIA(4),HSDSP(HSDPTR)                         01S0212
*             IF HSDSASI=HSDSASIR THEN/* ABSOLUTE STORAGE RECORD     */
         ICM   @14,3,HSDSASI(HSDPTR)                            01S0213
         BNZ   @RF00213                                         01S0213
*               RAAUAS=DATSA;       /* ABSOLUTE ADDRESS SPACE        */
         MVC   RAAUAS(16),DATSA                                 01S0214
*             ELSE                  /* VIRTUAL STORAGE RECORD        */
*                                                               01S0215
*               /*****************************************************/
*               /*                                                   */
*               /* VIRTUAL STORAGE RECORD                            */
*               /*                                                   */
*               /*****************************************************/
*                                                               01S0215
*               DO;                 /* VIRTUAL STORAGE RECORD        */
         B     @RC00213                                         01S0215
@RF00213 DS    0H                                               01S0216
*                 RAAUAS=ZZ6DQA;    /* PREFERRED ADDRESS SPACE       */
         MVC   RAAUAS(16),ZZ6DQA(RA)                            01S0216
*                 IF HSDSASI^=HSDSASIC THEN/* EXPLICIT ASID          */
*                                                               01S0217
         SLR   @14,@14                                          01S0217
         ICM   @14,3,HSDSASI(HSDPTR)                            01S0217
         C     @14,@CF01023                                     01S0217
         BE    @RF00217                                         01S0217
*                   /*************************************************/
*                   /*                                               */
*                   /* EXPLICIT ASID                                 */
*                   /*                                               */
*                   /*************************************************/
*                                                               01S0218
*                   DO;             /* EXPLICIT ASID                 */
*                     RAAUAS2=HSDSASI;/* ASID                        */
         ST    @14,RAAUAS2                                      01S0219
*                     IF HSDSASI=HSDSASIS&FLAGSUMM=ZZZ0 THEN    01S0220
*                                                               01S0220
         C     @14,@CF00084                                     01S0220
         BNE   @RF00220                                         01S0220
         TM    FLAGSUMM,B'00000100'                             01S0220
         BNZ   @RF00220                                         01S0220
*                       /*********************************************/
*                       /*                                           */
*                       /* FIRST SUMMARY DUMP RECORD                 */
*                       /*                                           */
*                       /*********************************************/
*                                                               01S0221
*                       DO;         /* FIRST SUMMARY DUMP RECORD     */
*                         ZZ6DPRP=HSDSP;/* ->PRIVATE AREA            */
         MVC   ZZ6DPRP(4,RA),HSDSP(HSDPTR)                      01S0222
*                         FLAGSUMM=ZZZ1;/* SUMMARY DUMP RECORD  01S0223
*                                      PROCESSED                     */
         OI    FLAGSUMM,B'00000100'                             01S0223
*                         DUISDATA='00'X;/* NO RESIDUAL SUMDUMP DATA */
         XC    DUISDATA+1(7),DUISDATA+1                         01S0224
         MVI   DUISDATA,X'00'                                   01S0224
*                       END;        /* FIRST SUMMARY DUMP RECORD     */
*                   END;            /* EXPLICIT ASID                 */
@RF00220 DS    0H                                               01S0227
*               END;                /* VIRTUAL STORAGE RECORD        */
@RF00217 DS    0H                                               01S0228
*             IF FLAGASID=ZZZ0 THEN /* ESTABLISH DEFAULT ASID        */
*                                                               01S0228
@RC00213 TM    FLAGASID,B'10000000'                             01S0228
         BNZ   @RF00228                                         01S0228
*               /*****************************************************/
*               /*                                                   */
*               /* ESTABLISH DEFAULT ASID                            */
*               /*                                                   */
*               /*****************************************************/
*                                                               01S0229
*               DO;                 /* ESTABLISH DEFAULT ASID        */
*                 ZZ6DQA2=MAX(RAAUAS2,1);/* DEFAULT ASID             */
         L     @14,RAAUAS2                                      01S0230
         LA    @08,1                                            01S0230
         CLR   @14,@08                                          01S0230
         BNL   *+6
         LR    @14,@08                                          01S0230
         ST    @14,ZZ6DQA2(,RA)                                 01S0230
*                 ZZ6DQ2=ZZ6DQA2;   /* ACTIVE ASID                   */
         ST    @14,ZZ6DQ2(,RA)                                  01S0231
*                 FLAGASID=ZZZ1;    /* DEFAULT ASID ESTABLISHED      */
         OI    FLAGASID,B'10000000'                             01S0232
*               END;                /* ESTABLISH DEFAULT ASID        */
*             CALL BLSRDUIS(ZZ2,HSDS,DUISDATA);/* PROCESS STG. RCD.  */
@RF00228 ST    R9,@AL00001                                      01S0234
         ST    HSDPTR,@AL00001+4                                01S0234
         LA    @14,DUISDATA                                     01S0234
         ST    @14,@AL00001+8                                   01S0234
         L     @15,@CV01585                                     01S0234
         LA    @01,@AL00001                                     01S0234
         BALR  @14,@15                                          01S0234
*           END;                    /* DUMP STORAGE RECORD           */
*         ELSE                      /* UNSUPPORTED RECORD TYPE       */
*           FLAGPUT=ZZZ0;           /* IGNORE DUMP RECORD            */
         B     @RC00210                                         01S0236
@RF00210 NI    FLAGPUT,B'11101111'                              01S0236
*     IF FLAGPUT=ZZZ1 THEN          /* CREATE ADDRESS SPACE RECORD   */
*                                                               01S0237
@RC00210 DS    0H                                               01S0237
@RC00202 DS    0H                                               01S0237
@RC00189 TM    FLAGPUT,B'00010000'                              01S0237
         BNO   @RF00237                                         01S0237
*       /*************************************************************/
*       /*                                                           */
*       /* CREATE ADDRESS SPACE RECORD                               */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0238
*L010:                              /* END OF FILE ON INPUT          */
*       DO;                         /* CREATE ADDRESS SPACE RECORD   */
L010     DS    0H                                               01S0239
*         IF FLAGW1=ZZZ0 THEN       /* INITIALIZE DEFERRED RECORD    */
*                                                               01S0239
         TM    FLAGW1,B'00000010'                               01S0239
         BNZ   @RF00239                                         01S0239
*           /*********************************************************/
*           /*                                                       */
*           /* INITIALIZE DEFERRED RECORD                            */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0240
*           DO;                     /* INITIALIZE DEFERRED RECORD    */
*             RADE=RAAU;            /* INITIALIZE DEFERRED RECORD    */
         MVC   RADE(148),RAAU                                   01S0241
*             FLAGW1=ZZZ1;          /* DEFERRED RECORD INITIALIZED   */
         OI    FLAGW1,B'00000010'                               01S0242
*           END;                    /* INITIALIZE DEFERRED RECORD    */
*         ELSE                      /* 2ND, ... ADDRESS SPACE RECORD */
*           IF FLAGEND=ZZZ0&        /* NEW RECORD READ               */
*               RAAUAS=RADEAS&      /* DEFERRED ADDRESS SPACE        */
*               RAAURIA(1)=RADERIA(1)+RADERLE(1)*RADERNM(1) THEN
         B     @RC00239                                         01S0244
@RF00239 TM    FLAGEND,B'01000000'                              01S0244
         BNZ   @RF00244                                         01S0244
         CLC   RAAUAS(16),RADEAS                                01S0244
         BNE   @RF00244                                         01S0244
         LH    @14,RADERNM                                      01S0244
         L     @01,RADERLE                                      01S0244
         MR    @00,@14                                          01S0244
         AL    @01,RADERIA                                      01S0244
         CL    @01,RAAURIA                                      01S0244
         BNE   @RF00244                                         01S0244
*             RADERNM(1)=RADERNM(1)+1;/* SEQUENTIAL RECORDS          */
         AH    @14,@CH00041                                     01S0245
         STH   @14,RADERNM                                      01S0245
*           ELSE                    /* WRITE DEFERRED RECORD         */
*                                                               01S0246
*             /*******************************************************/
*             /*                                                     */
*             /* WRITE DEFERRED RECORD                               */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S0246
*             DO;                   /* WRITE DEFERRED RECORD         */
         B     @RC00244                                         01S0246
@RF00244 DS    0H                                               01S0247
*               CALL BLSRRAAR(ZZ2,RADE);/* ADD/REPLACE RA RECORD     */
         ST    R9,@AL00001                                      01S0247
         LA    @14,RADE                                         01S0247
         ST    @14,@AL00001+4                                   01S0247
         L     @08,ZZ2RVTP(,R9)                                 01S0247
         L     @15,RVTRAARP(,@08)                               01S0247
         LA    @01,@AL00001                                     01S0247
         BALR  @14,@15                                          01S0247
*               IF RF^=ZZZFLAGI THEN/* VSAM ERROR                    */
*                                                               01S0248
         LTR   RF,RF                                            01S0248
         BZ    @RF00248                                         01S0248
*                 /***************************************************/
*                 /*                                                 */
*                 /* VSAM ERROR                                      */
*                 /*                                                 */
*                 /***************************************************/
*                                                               01S0249
*                 DO;               /* VSAM ERROR                    */
*                   FLAGEND=ZZZ1;   /* TERMINATE PROCESSING LOOP     */
*                   FLAGERR=ZZZ1;   /* ERROR DURING PROCESSING       */
         OI    FLAGEND,B'01100000'                              01S0251
*                 END;              /* VSAM ERROR                    */
*               IF RADEAS^=DATSH&RADERIA(1)=ZZZZNULL THEN       01S0253
*                                                               01S0253
@RF00248 CLC   RADEAS(16),DATSH                                 01S0253
         BE    @RF00253                                         01S0253
         SLR   @14,@14                                          01S0253
         CL    @14,RADERIA                                      01S0253
         BNE   @RF00253                                         01S0253
*                 /***************************************************/
*                 /*                                                 */
*                 /* RECORD PSA IN STORAGE MAP                       */
*                 /*                                                 */
*                 /***************************************************/
*                                                               01S0254
*                 DO;               /* RECORD PSA IN STORAGE MAP     */
*                   SAAUAS=RADEAS;  /* ADDRESS SPACE                 */
         MVC   SAAUAS(16),RADEAS                                01S0255
*                   SAAULAD=ZZZZNULL;/* LOGICAL ADDRESS              */
         ST    @14,SAAULAD                                      01S0256
*                   SAAUDT=DTPSA;   /* DATA TYPE                     */
         MVC   SAAUDT(34),DTPSA                                 01S0257
*                   CALL BLSRSAG(ZZ2,SAAU,0);/* RECORD PSA           */
         ST    R9,@AL00001                                      01S0258
         LA    @14,SAAU                                         01S0258
         ST    @14,@AL00001+4                                   01S0258
         LA    @14,@CF00046                                     01S0258
         ST    @14,@AL00001+8                                   01S0258
         L     @08,ZZ2RVTP(,R9)                                 01S0258
         L     @15,RVTRSAGP(,@08)                               01S0258
         LA    @01,@AL00001                                     01S0258
         BALR  @14,@15                                          01S0258
*                 END;              /* RECORD PSA IN STORAGE MAP     */
*               IF FLAGEND=ZZZ0 THEN/* MORE RECORDS TO READ          */
@RF00253 TM    FLAGEND,B'01000000'                              01S0260
         BNZ   @RF00260                                         01S0260
*                 RADE=RAAU;        /* RESET DEFERRED RECORD         */
         MVC   RADE(148),RAAU                                   01S0261
*             END;                  /* WRITE DEFERRED RECORD         */
@RF00260 DS    0H                                               01S0263
*         IF FLAGEND=ZZZ1 THEN      /* FINAL PASS                    */
*                                                               01S0263
@RC00244 DS    0H                                               01S0263
@RC00239 TM    FLAGEND,B'01000000'                              01S0263
         BNO   @RF00263                                         01S0263
*           /*********************************************************/
*           /*                                                       */
*           /* FINAL PASS                                            */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0264
*           DO;                     /* FINAL PASS                    */
*             ZZ6DDA2=ZZ6DDA1+1;    /* FIRST RECORD BEYOND DATA SET  */
         LA    @14,1                                            01S0265
         L     @08,ZZ6DDA1(,RA)                                 01S0265
         LR    @07,@08                                          01S0265
         ALR   @07,@14                                          01S0265
         ST    @07,ZZ6DDA2(,RA)                                 01S0265
*             IF ZZ6DDA1<=1 THEN    /* EMPTY DUMP DATA SET           */
         CLR   @08,@14                                          01S0266
         BH    @RF00266                                         01S0266
*               FLAGERR=ZZZ1;       /* ERROR DURING PROCESSING       */
*                                                               01S0267
         OI    FLAGERR,B'00100000'                              01S0267
*             /*******************************************************/
*             /*                                                     */
*             /* DESCRIBE DUMP DATA SET                              */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S0268
*             M123B=M123S;          /* PREPARE M123                  */
*                                                               01S0268
@RF00266 MVC   M123B(73),M123S                                  01S0268
*              DO;/*BLRCNVUC(ZZ6DDA1) FROM(UNSIGNED BINARY)TO(CHARACTER
*PATTERN('4020206B2020206B2020206B202120'X)SET(M123BTB)OPTIONS(PATTERN
*N PLACE)REMARK(NUMBER OF RECORDS)*/                            01S0269
*                /*NUMBER OF RECORDS*/                          01S0270
*                CVD(ZZ6DDA1,PACKED);/*UNSIGNED BINARY=>PACKED DECIMAL*
         L     @14,ZZ6DDA1(,RA)                                 01S0270
         CVD   @14,PACKED                                       01S0270
*                ED(M123BTB,PACKED(17:64));/*PACKED DECIMAL=>EBCDIC*/
         ED    M123BTB(15),PACKED+2                             01S0271
*              END;/*BLRCNVUC(ZZ6DDA1) FROM(UNSIGNED BINARY)TO(CHARACTE
*)PATTERN('4020206B2020206B2020206B202120'X)SET(M123BTB)OPTIONS(PATTERN
*IN PLACE)REMARK(NUMBER OF RECORDS)*/                           01S0272
*                                                               01S0272
*              DO;/*BLRCNVUC(ZZ6DDA1*LENGTH(HSD)) FROM(UNSIGNED BINARY)
*O(CHARACTER)PATTERN('4020206B2020206B2020206B202120'X)SET(M123BTD)OPTI
*NS(PATTERN IN PLACE)REMARK(NUMBER OF BYTES)*/                  01S0273
*                /*NUMBER OF BYTES*/                            01S0274
*                U0000001=ZZ6DDA1*LENGTH(HSD);/*SOURCE EXPRESSION*/
         MH    @14,@CH00462                                     01S0274
         LR    U0000001,@14                                     01S0274
*                CVD(U0000001,PACKED);/*UNSIGNED BINARY=>PACKED DECIMAL
*/               ED(M123BTD,PACKED(17:64));/*PACKED DECIMAL=>EBCDIC*/
         CVD   U0000001,PACKED                                  01S0275
         ED    M123BTD(15),PACKED+2                             01S0276
*              END;/*BLRCNVUC(ZZ6DDA1*LENGTH(HSD)) FROM(UNSIGNED BINARY
*TO(CHARACTER)PATTERN('4020206B2020206B2020206B202120'X)SET(M123BTD)OPT
*ONS(PATTERN IN PLACE)REMARK(NUMBER OF BYTES)*/                 01S0277
*             CALL BLSUMPK1(ZZ2,M123B);/* COMPRESS MESSAGE M123      */
         ST    R9,@AL00001                                      01S0278
         LA    @14,M123B                                        01S0278
         ST    @14,@AL00001+4                                   01S0278
         L     @08,ZZ2BVTP(,R9)                                 01S0278
         L     @15,BVTMPK1P(,@08)                               01S0278
         LA    @01,@AL00001                                     01S0278
         BALR  @14,@15                                          01S0278
*             CALL BLSUTRMV(ZZ2,M123B);/* TRANSMIT MESSAGE M123      */
         ST    R9,@AL00001                                      01S0279
         LA    @14,M123B                                        01S0279
         ST    @14,@AL00001+4                                   01S0279
         L     @15,ZZ2TRMVP(,R9)                                01S0279
         LA    @01,@AL00001                                     01S0279
         BALR  @14,@15                                          01S0279
*           END;                    /* FINAL PASS                    */
*       END;                        /* CREATE ADDRESS SPACE RECORD   */
@RF00263 DS    0H                                               01S0282
*   END;                            /* READ DUMP DATA SET            */
@RF00237 LA    @14,1                                            01S0282
         AL    @14,ZZ6DDA1(,RA)                                 01S0282
         ST    @14,ZZ6DDA1(,RA)                                 01S0282
         C     @14,@CF00117                                     01S0282
         BNH   @DL00179                                         01S0282
@DC00179 DS    0H                                               01S0283
*   RESPECIFY                                                   01S0283
*    (R1) RESTRICTED;               /* ->CPPL                        */
*   R1=ADDR(CPPL);                  /* ENDING TIME STAMP             */
         LA    R1,CPPL(,R9)                                     01S0284
*   CALL IKJEFT25;                  /* DISPLAY TIME STAMP            */
         L     @15,ZZ2FT25P(,R9)                                01S0285
         BALR  @14,@15                                          01S0285
*   RESPECIFY                                                   01S0286
*    (R1) UNRESTRICTED;             /* ->CPPL                        */
*   IF FLAGERR=ZZZ0 THEN            /* NO ERRORS DETECTED            */
         TM    FLAGERR,B'00100000'                              01S0287
         BNZ   @RF00287                                         01S0287
*     RETC=ZZZFLAGI;                /* NORMAL COMPLETION             */
         SLR   RETC,RETC                                        01S0288
*   ELSE                            /* ERRORS DETECTED               */
*     RETC=ZZZFLAGT;                /* ERROR RETURN CODE             */
         B     @RC00287                                         01S0289
@RF00287 LA    RETC,16                                          01S0289
*EXIT:                              /* NO DUMP DATA SET              */
*   RETURN CODE(RETC);                                          01S0290
*                                                               01S0290
@RC00287 DS    0H                                               01S0290
EXIT     L     @13,4(,@13)                                      01S0290
         L     @00,@SIZDATD                                     01S0290
         LR    @01,@11                                          01S0290
         BLSUFRER R,LV=(0),A=(1)
         LR    @15,@02                                          01S0290
         L     @14,12(,@13)                                     01S0290
         LM    @00,@12,20(@13)                                  01S0290
         BR    @14                                              01S0290
*/*BLSRPEND--DEBUGGING MODULE*/                                 01S0291
*                                                               01S0291
*/*BLSUPEND--MVS IPCS MODULE*/                                  01S0291
*                                                               01S0291
*   DECLARE/*DATA FOR AHB MACROS*/                              01S0291
*     PACKED BIT(64) BOUNDARY(DWORD),/*DATA CONVERSION WORK AREA*/
*     U0000001 UNSIGNED BINARY(31);/*DATA CONVERSION EXPRESSION HOLDER*
*                                                               01S0291
*                                                               01S0291
*                                                               01S0291
*    DECLARE /* COMMON VARIABLES */                             01S0292
*      I256C CHAR(256) BASED,                                   01S0292
*      I031F FIXED(31) BASED,                                   01S0292
*      I031P PTR(31)   BASED,                                   01S0292
*      I015F FIXED(15) BASED,                                   01S0292
*      I015P PTR(15)   BASED,                                   01S0292
*      I008P PTR(8)    BASED,                                   01S0292
*      I001C CHAR(1)   BASED;                                   01S0292
*    GENERATE NODEFS NOREFS DATA;                               01S0293
*   END BLSRDUIN /*BLRPEND(BLSRDUIN) */                         01S0294
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (BLSRZZZ )                                        *
*/*%INCLUDE SYSLIB  (BLSUZZZ )                                        *
*/*%INCLUDE SYSLIB  (BLRFULL )                                        *
*/*%INCLUDE SYSLIB  (IKJCPPL )                                        *
*/*%INCLUDE SYSLIB  (IKJPSCB )                                        *
*/*%INCLUDE SYSLIB  (IKJECT  )                                        *
*/*%INCLUDE SYSLIB  (IKJUPT  )                                        *
*/*%INCLUDE SYSLIB  (BLSUSERV)                                        *
*/*%INCLUDE SYSLIB  (BLRSERV )                                        *
*/*%INCLUDE SYSLIB  (BLRSERVD)                                        *
*/*%INCLUDE SYSLIB  (BLSRSERV)                                        *
*/*%INCLUDE SYSLIB  (BLSRHSD )                                        *
*/*%INCLUDE SYSLIB  (IHADCBDF)                                        *
*/*%INCLUDE SYSLIB  (IHADCB  )                                        *
*;                                                              01S0294
@EL00001 L     @13,4(,@13)                                      01S0294
@EF00001 L     @00,@SIZDATD                                     01S0294
         LR    @01,@11                                          01S0294
         BLSUFRER R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                  01S0294
         BR    @14                                              01S0294
@DATA    DS    0H
@CH00041 DC    H'1'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@AL00001 DS    3A
BLSRDUIN CSECT
         DS    0F
@CF00046 DC    F'0'
@CF00462 DC    F'4104'
@CH00462 EQU   @CF00462+2
@CF00084 DC    F'65530'
@CF01023 DC    F'65535'
@CF00117 DC    F'16777215'
@DATD    DSECT
         DS    0D
RAAU     DS    CL148
         ORG   RAAU
RAAURID  DS    CL2
@NM00133 DS    BL6
RAAURDX  DS    FL4
RAAUAS   DS    CL16
         ORG   RAAUAS
RAAUAS0  DS    0C
RAAUAST  DS    CL2
@NM00134 DS    BL2
RAAUAS1  DS    FL4
RAAUAS2  DS    FL4
@NM00135 DS    BL4
RAAUAS9  DS    0C
         ORG   RAAU+28
RAAUFAD  DS    AL4
RAAUELK  DS    0C
@NM00136 DS    BL16
RAAUDIM  DS    FL2
RAAUUSE  DS    FL2
RAAUR    DS    CL32
         ORG   RAAUR+0
RAAURIA  DS    AL4
RAAURLE  DS    FL4
RAAURNM  DS    FL2
RAAURF   DS    BL2
         ORG   RAAURF+0
RAAURFU  DS    BL1
RAAURFP  EQU   RAAURF+0
RAAURFR  EQU   RAAURF+0
@NM00137 EQU   RAAURF+0
         ORG   RAAUR+12
RAAURDA  DS    FL4
RAAUROF  DS    FL4
@NM00138 DS    BL12
         ORG   RAAU+148
RAAU999  DS    0C
         ORG   RAAU+148
         DS    CL4
RADE     DS    CL148
         ORG   RADE
RADERID  DS    CL2
@NM00145 DS    BL6
RADERDX  DS    FL4
RADEAS   DS    CL16
         ORG   RADEAS
RADEAS0  DS    0C
RADEAST  DS    CL2
@NM00146 DS    BL2
RADEAS1  DS    FL4
RADEAS2  DS    FL4
@NM00147 DS    BL4
RADEAS9  DS    0C
         ORG   RADE+28
RADEFAD  DS    AL4
RADEELK  DS    0C
@NM00148 DS    BL16
RADEDIM  DS    FL2
RADEUSE  DS    FL2
RADER    DS    CL32
         ORG   RADER+0
RADERIA  DS    AL4
RADERLE  DS    FL4
RADERNM  DS    FL2
RADERF   DS    BL2
         ORG   RADERF+0
RADERFU  DS    BL1
RADERFP  EQU   RADERF+0
RADERFR  EQU   RADERF+0
@NM00149 EQU   RADERF+0
         ORG   RADER+12
RADERDA  DS    FL4
RADEROF  DS    FL4
@NM00150 DS    BL12
         ORG   RADE+148
RADE999  DS    0C
         ORG   RADE+148
         DS    CL4
SAAU     DS    CL3072
         ORG   SAAU
SAAURID  DS    CL2
@NM00151 DS    BL6
SAAURDX  DS    FL4
SAAUAS   DS    CL16
         ORG   SAAUAS
SAAUAS0  DS    0C
SAAUAST  DS    CL2
@NM00152 DS    BL2
SAAUAS1  DS    FL4
SAAUAS2  DS    FL4
@NM00153 DS    BL4
SAAUAS9  DS    0C
         ORG   SAAU+28
SAAULAD  DS    AL4
SAAUDT   DS    CL34
         ORG   SAAUDT
SAAUDT0  DS    0C
SAAUDTY  DS    CL1
@NM00154 DS    BL1
SAAUDTD  DS    CL31
SAAUDTE  DS    CL1
SAAUDT9  DS    0C
         ORG   SAAU+66
SAAUELK  DS    0C
@NM00155 DS    BL2
SAAUF    DS    CL60
         ORG   SAAUF
SAAUF00  DS    0C
SAAUFOF  DS    FL4
SAAUFLE  DS    FL4
SAAUFOB  DS    FL1
SAAUFLB  DS    FL1
SAAUFT   DS    CL34
         ORG   SAAUFT
SAAUFT0  DS    0C
SAAUFTY  DS    CL1
@NM00156 DS    BL1
SAAUFTD  DS    CL31
SAAUFTE  DS    CL1
SAAUFT9  DS    0C
         ORG   SAAUF+44
SAAUFIM  DS    FL4
SAAUFIL  DS    FL4
SAAUFF   DS    BL4
         ORG   SAAUFF
SAAUFFA  DS    BL1
@NM00157 EQU   SAAUFF+0
         ORG   SAAUF+56
@NM00158 DS    BL4
SAAUF99  DS    0C
         ORG   SAAU+128
SAAUSF   DS    BL8
         ORG   SAAUSF
SAAUSF1  DS    BL1
SAAUSF9  EQU   SAAUSF+0
SAAUSFI  EQU   SAAUSF+0
SAAUSFS  EQU   SAAUSF+0
@NM00159 EQU   SAAUSF+0
         ORG   SAAU+136
SAAUGMT  DS    BL8
SAAUPGV  DS    CL8
SAAUSRC  DS    FL1
@NM00160 DS    101BL1
SAAUC    DS    CL2818
         ORG   SAAUC
SAAUCL   DS    FL2
SAAUCT   DS    CL2816
         ORG   SAAUCT
SAAUCT1  DS    CL2816
         ORG   SAAU+3072
SAAU999  DS    0C
         ORG   SAAU+3072
MA       DS    CL254
         ORG   MA
MAL      DS    FL2
@NM00161 DS    BL2
MAT      DS    CL250
         ORG   MAT
MATA     DS    CL250
         ORG   MA+254
FLAG     DS    BL1
         ORG   FLAG
FLAGASID DS    BL1
FLAGEND  EQU   FLAG+0
FLAGERR  EQU   FLAG+0
FLAGPUT  EQU   FLAG+0
FLAGV2   EQU   FLAG+0
FLAGSUMM EQU   FLAG+0
FLAGW1   EQU   FLAG+0
@NM00165 EQU   FLAG+0
         ORG   FLAG+1
         DS    CL1
DUISDATA DS    BL8
PACKED   DS    BL8
BLSRDUIN CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV01583 DC    V(BLSRDUIC)
@CV01584 DC    V(BLSRDUIH)
@CV01585 DC    V(BLSRDUIS)
         DS    0D
DATSA    DS    CL16
         ORG   DATSA
DATSA0   DS    0C
DATSAT   DC    CL2'A '
@NM00122 DC    X'0000'
DATSA1   DC    A(0)
DATSA2   DC    A(0)
@NM00123 DC    X'00'
         DC    XL3'0'
DATSA9   DS    0C
         ORG   DATSA+16
DATSC    DS    CL16
         ORG   DATSC
DATSC0   DS    0C
DATSCT   DC    CL2'C '
@NM00124 DC    X'0000'
DATSC1   DC    A(0)
DATSC2   DC    A(0)
@NM00125 DC    X'00'
         DC    XL3'0'
DATSC9   DS    0C
         ORG   DATSC+16
DATSCR   DS    CL16
         ORG   DATSCR
DATSCR0  DS    0C
DATSCRT  DC    CL2'CR'
@NM00126 DC    X'0000'
DATSCR1  DC    A(0)
DATSCR2  DC    A(0)
@NM00127 DC    X'00'
         DC    XL3'0'
DATSCR9  DS    0C
         ORG   DATSCR+16
DATSCV   DS    CL16
         ORG   DATSCV
DATSCV0  DS    0C
DATSCVT  DC    CL2'CV'
@NM00128 DC    X'0000'
DATSCV1  DC    A(0)
DATSCV2  DC    A(0)
@NM00129 DC    X'00'
         DC    XL3'0'
DATSCV9  DS    0C
         ORG   DATSCV+16
DATSH    DS    CL16
         ORG   DATSH
DATSH0   DS    0C
DATSHT   DC    CL2'H '
@NM00130 DC    X'0000'
DATSH1   DC    A(0)
DATSH2   DC    A(0)
@NM00131 DC    X'00'
         DC    XL3'0'
DATSH9   DS    0C
         ORG   DATSH+16
DTPSA    DS    CL34
         ORG   DTPSA
DTPSA0   DS    0C
DTPSAY   DC    CL1'M'
@NM00132 DC    X'00'
DTPSAD   DC    CL31'PSA'
DTPSAE   DC    CL1' '
DTPSA9   DS    0C
         ORG   DTPSA+34
M122     DS    CL40
         ORG   M122
M122L    DC    AL2(40)
@NM00162 DC    X'0000'
M122T    DS    CL36
         ORG   M122T
M122TA   DC    CL36'BLS18122I INITIALIZATION IN PROGRESS'
         ORG   M122+40
M123S    DS    CL73
         ORG   M123S
M123SL   DC    AL2(73)
@NM00163 DC    X'0000'
M123ST   DS    CL69
         ORG   M123ST
M123STA  DC    CL10'BLS18123I '
M123STB  DC    X'4020206B2020206B2020206B202120'
M123STC  DC    CL10' RECORDS, '
M123STD  DC    X'4020206B2020206B2020206B202120'
M123STE  DC    CL19' BYTES, IN THE DUMP'
         ORG   M123S+73
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSRDUIN CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSRDUIN+19)/20+7)/8)CL8'BLSRDUIN'
@DATD    DSECT
         DS    0H
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSRDUIN CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
U0000001 EQU   @02
RETC     EQU   @02
HSDPTR   EQU   @05
R9       EQU   @09
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
RA       EQU   @10
RB       EQU   @11
RD       EQU   @13
RE       EQU   @14
RF       EQU   @15
RC       EQU   @12
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
ZZ1      EQU   0
ZZ1ATTN  EQU   ZZ1+360
ZZ1EVE   EQU   ZZ1ATTN+4
ZZ1F     EQU   ZZ1+368
ZZ1N     EQU   ZZ1+1116
ZZ2      EQU   0
ZZ2AMD   EQU   ZZ2
@NM00015 EQU   ZZ2AMD+7
ZZ2PRT   EQU   ZZ2+138
ZZ2PRTT  EQU   ZZ2PRT+4
ZZ2PRTT1 EQU   ZZ2PRTT+1
ZZ2A     EQU   ZZ2+272
ZZ2ACH   EQU   ZZ2A
ZZ2AF    EQU   ZZ2A+16
ZZ2APID  EQU   ZZ2A+64
ZZ2AD    EQU   ZZ2A+74
ZZ2ADD   EQU   ZZ2AD
ZZ2ADDT  EQU   ZZ2ADD+2
ZZ2ADM   EQU   ZZ2AD+46
ZZ2ADMT  EQU   ZZ2ADM+2
ZZ2ADP   EQU   ZZ2AD+56
ZZ2ADPT  EQU   ZZ2ADP+2
ZZ2AZZ6P EQU   ZZ2A+140
ZZ2AQAS  EQU   ZZ2A+144
ZZ2AQD   EQU   ZZ2A+160
ZZ2AQDT  EQU   ZZ2AQD+10
ZZ2AQDF  EQU   ZZ2AQD+52
ZZ2STG   EQU   ZZ2+960
ZZ2ALLOP EQU   ZZ2+992
ZZ2FREEP EQU   ZZ2+996
ZZ2FF19P EQU   ZZ2+1000
ZZ2FRE1P EQU   ZZ2+1004
ZZ2FF18P EQU   ZZ2+1008
ZZ2DYNAP EQU   ZZ2+1012
ZZ2ZZ2CP EQU   ZZ2+1016
ZZ2ZZ2DP EQU   ZZ2+1020
ZZ2STAIP EQU   ZZ2+1024
ZZ2FF02P EQU   ZZ2+1028
ZZ2GETLP EQU   ZZ2+1032
ZZ2PARSP EQU   ZZ2+1036
ZZ2PTGTP EQU   ZZ2+1040
ZZ2PUTLP EQU   ZZ2+1044
ZZ2SCANP EQU   ZZ2+1048
ZZ2STCKP EQU   ZZ2+1052
ZZ2TRMOP EQU   ZZ2+1064
ZZ2TRMVP EQU   ZZ2+1068
ZZ2FT25P EQU   ZZ2+1072
ZZ2PUTNP EQU   ZZ2+1084
ZZ2TRMNP EQU   ZZ2+1088
ZZ2ZZ1P  EQU   ZZ2+1264
ZZ2BVTP  EQU   ZZ2+1280
ZZ2RVTP  EQU   ZZ2+1284
ZZ2CPPL  EQU   ZZ2+1292
ZZ2CPPLC EQU   ZZ2CPPL
ZZ2RASYP EQU   ZZ2+1336
ZZ2F     EQU   ZZ2+2824
ZZ2ITR   EQU   ZZ2+2840
ZZ2ITRE  EQU   ZZ2ITR+16
ZZ2ITSE  EQU   ZZ2+2864
ZZ2ES    EQU   ZZ2+2872
ZZ2AMDX  EQU   ZZ2+7160
ZZ2AXO   EQU   ZZ2+7934
ZZ2AXOT  EQU   ZZ2AXO+2
CMD      EQU   0
CMDT     EQU   CMD+4
PSCB     EQU   0
PSCBATR1 EQU   PSCB+16
ECT      EQU   0
ECTSWS   EQU   ECT+28
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
UPT      EQU   0
UPTSWS   EQU   UPT+12
SA       EQU   0
SA1      EQU   SA
SAR      EQU   SA+12
SAR1     EQU   SAR+12
BLSUMPK1 EQU   0
BLSUTRMV EQU   0
BVT      EQU   0
BVTPUTLP EQU   BVT+4
BVTPUTOP EQU   BVT+12
BVTPUTTP EQU   BVT+16
BVTPUTVP EQU   BVT+20
BVTPUTAP EQU   BVT+24
BVTPRTTP EQU   BVT+28
BVTPRTAP EQU   BVT+32
BVTPUTDP EQU   BVT+36
BVTMONP  EQU   BVT+40
BVTMON2P EQU   BVT+44
BVTVSARP EQU   BVT+48
BVTVSENP EQU   BVT+64
BVTVSERP EQU   BVT+68
BVTVSGEP EQU   BVT+72
BVTVSGUP EQU   BVT+76
BVTVSPOP EQU   BVT+80
BVTVSPUP EQU   BVT+84
BVTMPKNP EQU   BVT+104
BVTMONLP EQU   BVT+108
BVTPUTCP EQU   BVT+132
BVTMPK1P EQU   BVT+136
BVTZZ2RP EQU   BVT+140
BVTPGMRP EQU   BVT+144
BVTMONAP EQU   BVT+148
BVTBLDDP EQU   BVT+152
BVTBLDLP EQU   BVT+156
BVTPGMCP EQU   BVT+160
BVTPGMDP EQU   BVT+164
BVTPGMLP EQU   BVT+168
BVTMONCP EQU   BVT+180
BVTMONDP EQU   BVT+184
BVTMONTP EQU   BVT+188
BVTPARIP EQU   BVT+192
BVTPARUP EQU   BVT+196
BVTPRTNP EQU   BVT+204
BVTVSCRP EQU   BVT+208
BVTVSMRP EQU   BVT+212
BVTMONXP EQU   BVT+216
BVTTRMAP EQU   BVT+228
ZZ6      EQU   0
ZZ6RDCB  EQU   ZZ6
ZZ6D     EQU   ZZ6+128
ZZ6DD    EQU   ZZ6D+8
ZZ6DDT   EQU   ZZ6DD+4
ZZ6DQA   EQU   ZZ6D+68
ZZ6DQA2  EQU   ZZ6DQA+8
ZZ6DQ2   EQU   ZZ6D+88
ZZ6DF    EQU   ZZ6D+92
ZZ6DDA1  EQU   ZZ6D+100
ZZ6DDA2  EQU   ZZ6D+104
ZZ6DPRP  EQU   ZZ6D+108
ZZ6F     EQU   ZZ6+504
ZZ6B     EQU   ZZ6+768
BLSRRAAR EQU   0
BLSRSAG  EQU   0
RVT      EQU   0
RVTADDRP EQU   RVT
RVTT01P  EQU   RVT+4
RVTTAP   EQU   RVT+8
RVTTBP   EQU   RVT+12
RVTTCP   EQU   RVT+16
RVTTFP   EQU   RVT+24
RVTTYP   EQU   RVT+40
RVTT02P  EQU   RVT+48
RVTT03P  EQU   RVT+52
RVTT04P  EQU   RVT+56
RVTACCLP EQU   RVT+60
RVTRACCP EQU   RVT+64
RVTTLP   EQU   RVT+68
RVTTMP   EQU   RVT+72
RVTTUP   EQU   RVT+80
RVTESGEP EQU   RVT+84
RVTESGUP EQU   RVT+88
RVTESARP EQU   RVT+92
RVTRAARP EQU   RVT+96
RVTRAGEP EQU   RVT+100
RVTADDPP EQU   RVT+104
RVTACCQP EQU   RVT+108
RVTSAGUP EQU   RVT+124
RVTSAGEP EQU   RVT+128
RVTESCKP EQU   RVT+132
RVTMSGAP EQU   RVT+136
RVTMSGDP EQU   RVT+140
RVTADDTP EQU   RVT+160
RVTADDUP EQU   RVT+164
RVTADD1P EQU   RVT+176
RVTADD2P EQU   RVT+180
RVTRSAGP EQU   RVT+184
RVTMSGBP EQU   RVT+188
RVTADDSP EQU   RVT+192
RVTADD3P EQU   RVT+196
RVTT05P  EQU   RVT+200
RVTPADSP EQU   RVT+204
RVTTRP   EQU   RVT+228
RVTADD4P EQU   RVT+232
RVTSAPCP EQU   RVT+236
RVTSAARP EQU   RVT+240
RVTSAGNP EQU   RVT+244
RVTT06P  EQU   RVT+248
RVTSAGCP EQU   RVT+252
RVTSAGQP EQU   RVT+256
RVTESGCP EQU   RVT+260
RVTESGQP EQU   RVT+264
RVTDUCKP EQU   RVT+276
RVTDUCCP EQU   RVT+280
HSD      EQU   0
HSDTYPE  EQU   HSD
HSDCLA   EQU   HSD+1
IHADCB   EQU   0
IHADCS00 EQU   0
DCBFDAD  EQU   IHADCS00+5
IHADCS01 EQU   0
DCBDVTBL EQU   IHADCS01
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEODA  EQU   DCBEODAD+1
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBIBPCT EQU   DCBIFLG
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFPCT EQU   DCBIFLGS
IHADCS26 EQU   0
DCBWRITE EQU   IHADCS26
DCBREAD  EQU   DCBWRITE
DCBWRITA EQU   DCBREAD+1
IHADCS36 EQU   0
DCBGERR  EQU   IHADCS36
DCBPERR  EQU   DCBGERR
DCBCHECK EQU   DCBPERR
DCBOPTCD EQU   DCBCHECK
DCBOPTH  EQU   DCBOPTCD
DCBOPTO  EQU   DCBOPTH
DCBOPTZ  EQU   DCBOPTCD
DCBGERRA EQU   DCBCHECK+1
DCBPERRA EQU   DCBGERRA
DCBSYNAD EQU   IHADCS36+4
DCBCIND1 EQU   IHADCS36+8
DCBCIND2 EQU   IHADCS36+9
DCBIOBA  EQU   IHADCS36+16
DCBCICB  EQU   DCBIOBA
IHADCS52 EQU   0
DCBDIRCT EQU   IHADCS52
DCBQSWS  EQU   DCBDIRCT
DCBUSASI EQU   DCBQSWS
DCBQADFS EQU   DCBUSASI
DCBBUFOF EQU   DCBDIRCT+1
IHADCS37 EQU   0
DCBFLAG1 EQU   IHADCS37
IHADCS38 EQU   0
DCBEOBR  EQU   IHADCS38
DCBPOINT EQU   IHADCS38+12
DCBCNTRL EQU   DCBPOINT
RACO     EQU   0
RACOAS   EQU   RACO+12
RACOR    EQU   RACO+52
RACORF   EQU   RACOR+10
IKJEFT25 EQU   0
BLSRACC  EQU   0
BLSRACCL EQU   0
BLSRACCQ EQU   0
BLSRADDP EQU   0
BLSRADDR EQU   0
BLSRADDS EQU   0
BLSRADDT EQU   0
BLSRADDU EQU   0
BLSRADD1 EQU   0
BLSRADD2 EQU   0
BLSRADD3 EQU   0
BLSRADD4 EQU   0
BLSRDUCC EQU   0
BLSRDUCK EQU   0
BLSRESAR EQU   0
BLSRESCK EQU   0
BLSRESGC EQU   0
BLSRESGE EQU   0
BLSRESGQ EQU   0
BLSRESGU EQU   0
BLSRMSGA EQU   0
BLSRMSGB EQU   0
BLSRMSGD EQU   0
BLSRPADS EQU   0
BLSRRAGE EQU   0
BLSRSAAR EQU   0
BLSRSAGC EQU   0
BLSRSAGE EQU   0
BLSRSAGN EQU   0
BLSRSAGQ EQU   0
BLSRSAGU EQU   0
BLSRSAPC EQU   0
BLSTA    EQU   0
BLSTB    EQU   0
BLSTC    EQU   0
BLSTF    EQU   0
BLSTL    EQU   0
BLSTM    EQU   0
BLSTR    EQU   0
BLSTU    EQU   0
BLSTY    EQU   0
BLST01   EQU   0
BLST02   EQU   0
BLST03   EQU   0
BLST04   EQU   0
BLST05   EQU   0
BLST06   EQU   0
BLSUALLO EQU   0
BLSUBLDD EQU   0
BLSUBLDL EQU   0
BLSUDYNA EQU   0
BLSUFREE EQU   0
BLSUFRE1 EQU   0
BLSUMON  EQU   0
BLSUMONA EQU   0
BLSUMONC EQU   0
BLSUMOND EQU   0
BLSUMONL EQU   0
BLSUMONT EQU   0
BLSUMONX EQU   0
BLSUMON2 EQU   0
BLSUMPKN EQU   0
BLSUPARI EQU   0
BLSUPARU EQU   0
BLSUPGMC EQU   0
BLSUPGMD EQU   0
BLSUPGML EQU   0
BLSUPGMR EQU   0
BLSUPRTA EQU   0
BLSUPRTN EQU   0
BLSUPRTT EQU   0
BLSUPUTA EQU   0
BLSUPUTC EQU   0
BLSUPUTD EQU   0
BLSUPUTL EQU   0
BLSUPUTN EQU   0
BLSUPUTO EQU   0
BLSUPUTT EQU   0
BLSUPUTV EQU   0
BLSUSTAI EQU   0
BLSUTRMA EQU   0
BLSUTRMN EQU   0
BLSUTRMO EQU   0
BLSUVSAR EQU   0
BLSUVSCR EQU   0
BLSUVSEN EQU   0
BLSUVSER EQU   0
BLSUVSGE EQU   0
BLSUVSGU EQU   0
BLSUVSMR EQU   0
BLSUVSPO EQU   0
BLSUVSPU EQU   0
BLSUZZ2C EQU   0
BLSUZZ2D EQU   0
BLSUZZ2R EQU   0
IKJEFF02 EQU   0
IKJEFF18 EQU   0
IKJEFF19 EQU   0
IKJGETL  EQU   0
IKJPARS  EQU   0
IKJPTGT  EQU   0
IKJPUTL  EQU   0
IKJSCAN  EQU   0
IKJSTCK  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
CPPL     EQU   ZZ2CPPL
CPPLUPT  EQU   CPPL+4
CPPLPSCB EQU   CPPL+8
CPPLECT  EQU   CPPL+12
HSDH     EQU   HSD
HSDHV    EQU   HSD
HSDHA    EQU   HSD
HSDC     EQU   HSD
HSDCSF   EQU   HSDC+2
HSDCSFU  EQU   HSDCSF
HSDCSCPU EQU   HSDC+6
HSDCPSA  EQU   HSDC+8
HSDCPADD EQU   HSDCPSA+516
HSDS     EQU   HSD
HSDSASI  EQU   HSDS+2
HSDSP    EQU   HSDS+4
M123B    EQU   MA
M123BT   EQU   M123B+4
M123BTB  EQU   M123BT+10
M123BTD  EQU   M123BT+35
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
M123BTE  EQU   M123BT+50
M123BTC  EQU   M123BT+25
M123BTA  EQU   M123BT
@NM00164 EQU   M123B+2
M123BL   EQU   M123B
HSDSC    EQU   HSDS+8
HSDSK2   EQU   HSDS+1
HSDSK1   EQU   HSDS
@NM00101 EQU   HSDCPSA+552
HSDCASCO EQU   HSDCPSA+548
HSDCASCN EQU   HSDCPSA+544
HSDCTCBO EQU   HSDCPSA+540
HSDCTCBN EQU   HSDCPSA+536
HSDCLCCR EQU   HSDCPSA+532
HSDCLCCV EQU   HSDCPSA+528
HSDCPCCR EQU   HSDCPSA+524
HSDCPCCV EQU   HSDCPSA+520
HSDCLADD EQU   HSDCPSA+518
HSDCPSID EQU   HSDCPSA+512
HSDCTLR  EQU   HSDCPSA+448
HSDCGPR  EQU   HSDCPSA+384
HSDCFPR  EQU   HSDCPSA+352
HSDCADDR EQU   HSDCPSA+350
@NM00100 EQU   HSDCPSA+268
HSDCPREF EQU   HSDCPSA+264
HSDCLPSW EQU   HSDCPSA+256
@NM00099 EQU   HSDCPSA
@NM00098 EQU   HSDC+4
@NM00097 EQU   HSDCSF
HSDCSFR  EQU   HSDCSF
HSDCSFI  EQU   HSDCSF
HSDCCLA  EQU   HSDC+1
HSDCTYPE EQU   HSDC
@NM00096 EQU   HSDHA+132
HSDHACAW EQU   HSDHA+128
HSDHACSW EQU   HSDHA+120
@NM00095 EQU   HSDHA+20
@NM00094 EQU   HSDHA+12
@NM00093 EQU   HSDHA+4
@NM00092 EQU   HSDHA+2
@NM00091 EQU   HSDHA+1
@NM00090 EQU   HSDHA
@NM00089 EQU   HSDHV+292
HSDHVCVT EQU   HSDHV+288
HSDHVPSW EQU   HSDHV+280
HSDHVCR  EQU   HSDHV+216
HSDHVGPR EQU   HSDHV+152
HSDHVFPR EQU   HSDHV+120
@NM00088 EQU   HSDHV+20
@NM00087 EQU   HSDHV+12
@NM00086 EQU   HSDHV+4
@NM00085 EQU   HSDHV+2
@NM00084 EQU   HSDHV+1
@NM00083 EQU   HSDHV
@NM00082 EQU   HSDH+120
HSDHTITL EQU   HSDH+20
HSDHTOD  EQU   HSDH+12
HSDHPROG EQU   HSDH+4
HSDHASI  EQU   HSDH+2
HSDHCLA  EQU   HSDH+1
HSDHTYPE EQU   HSDH
CPPLCBUF EQU   CPPL
RACO999  EQU   RACO+148
@NM00144 EQU   RACOR+20
RACOROF  EQU   RACOR+16
RACORDA  EQU   RACOR+12
@NM00143 EQU   RACORF
RACORFR  EQU   RACORF
RACORFP  EQU   RACORF
RACORFU  EQU   RACORF
RACORNM  EQU   RACOR+8
RACORLE  EQU   RACOR+4
RACORIA  EQU   RACOR
RACOUSE  EQU   RACO+50
RACODIM  EQU   RACO+48
@NM00142 EQU   RACO+32
RACOELK  EQU   RACO+32
RACOFAD  EQU   RACO+28
RACOAS9  EQU   RACOAS+16
@NM00141 EQU   RACOAS+12
RACOAS2  EQU   RACOAS+8
RACOAS1  EQU   RACOAS+4
@NM00140 EQU   RACOAS+2
RACOAST  EQU   RACOAS
RACOAS0  EQU   RACOAS
RACORDX  EQU   RACO+8
@NM00139 EQU   RACO+2
RACORID  EQU   RACO
DCBNOTE  EQU   DCBCNTRL
DCBLRECL EQU   IHADCS38+10
@NM00121 EQU   IHADCS38+8
DCBEOBW  EQU   IHADCS38+4
DCBEOBRA EQU   DCBEOBR+1
DCBNCP   EQU   DCBEOBR
@NM00120 EQU   DCBFLAG1
DCBSTFLS EQU   DCBFLAG1
DCBSTQCK EQU   DCBFLAG1
DCBDIRCQ EQU   DCBBUFOF
DCBQSTRU EQU   DCBUSASI
@NM00119 EQU   DCBUSASI
DCBQADF3 EQU   DCBQADFS
DCBQADF2 EQU   DCBQADFS
DCBQADF1 EQU   DCBQADFS
DCBBLBP  EQU   DCBUSASI
@NM00118 EQU   DCBUSASI
DCBCICBA EQU   DCBCICB+1
@NM00117 EQU   DCBCICB
DCBOFFSW EQU   IHADCS36+15
DCBOFFSR EQU   IHADCS36+14
DCBWCPL  EQU   IHADCS36+13
DCBWCPO  EQU   IHADCS36+12
DCBBLKSI EQU   IHADCS36+10
DCBCNQSM EQU   DCBCIND2
DCBCNFEO EQU   DCBCIND2
DCBCNCHS EQU   DCBCIND2
DCBCNBFP EQU   DCBCIND2
DCBCNIOE EQU   DCBCIND2
DCBCNCLO EQU   DCBCIND2
DCBCNWRO EQU   DCBCIND2
DCBCNSTO EQU   DCBCIND2
DCBCNEXB EQU   DCBCIND1
@NM00116 EQU   DCBCIND1
DCBCNBRM EQU   DCBCIND1
@NM00115 EQU   DCBCIND1
DCBCNEVA EQU   DCBCIND1
DCBCNEVB EQU   DCBCIND1
DCBCNSRD EQU   DCBCIND1
DCBCNTOV EQU   DCBCIND1
DCBSYNA  EQU   DCBSYNAD+1
DCBIOBL  EQU   DCBSYNAD
DCBCHCKA EQU   DCBPERRA
DCBOPTJ  EQU   DCBOPTCD
DCBOPTT  EQU   DCBOPTCD
DCBSRCHD EQU   DCBOPTZ
DCBOPTQ  EQU   DCBOPTCD
DCBBCKPT EQU   DCBOPTO
DCBOPTC  EQU   DCBOPTCD
DCBOPTU  EQU   DCBOPTCD
DCBOPTW  EQU   DCBOPTCD
DCBREADA EQU   DCBWRITA
@NM00114 EQU   DCBREAD
DCBDEBA  EQU   DCBDEBAD+1
@NM00113 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBCH12  EQU   DCBIFPCT
DCBCH9   EQU   DCBIFPCT
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00112 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBICH12 EQU   DCBIBPCT
DCBICH9  EQU   DCBIBPCT
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBRECL  EQU   DCBRECLA
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00111 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00110 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00109 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00108 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
@NM00107 EQU   DCBDSRG1
@NM00106 EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBKEYLE EQU   DCBRELB
DCBTRBAL EQU   IHADCS01+6
@NM00105 EQU   IHADCS01+5
@NM00104 EQU   IHADCS01+4
DCBDVTBA EQU   DCBDVTBL+1
@NM00103 EQU   DCBDVTBL
DCBKEYCN EQU   IHADCS00+4
DCBRELAD EQU   IHADCS00
@NM00102 EQU   IHADCB
@NM00081 EQU   HSD+2
RVT99999 EQU   RVT+384
RVT0096P EQU   RVT+380
RVT0095P EQU   RVT+376
RVT0094P EQU   RVT+372
RVT0093P EQU   RVT+368
RVT0092P EQU   RVT+364
RVT0091P EQU   RVT+360
RVT0090P EQU   RVT+356
RVT0089P EQU   RVT+352
RVT0088P EQU   RVT+348
RVT0087P EQU   RVT+344
RVT0086P EQU   RVT+340
RVT0085P EQU   RVT+336
RVT0084P EQU   RVT+332
RVT0083P EQU   RVT+328
RVT0082P EQU   RVT+324
RVT0081P EQU   RVT+320
RVT0080P EQU   RVT+316
RVT0079P EQU   RVT+312
RVT0078P EQU   RVT+308
RVT0077P EQU   RVT+304
RVT0076P EQU   RVT+300
RVT0075P EQU   RVT+296
RVT0074P EQU   RVT+292
RVT0073P EQU   RVT+288
RVT0072P EQU   RVT+284
RVTDTUTP EQU   RVT+272
RVTDTMTP EQU   RVT+268
RVT0057P EQU   RVT+224
RVT0056P EQU   RVT+220
RVT0055P EQU   RVT+216
RVT0054P EQU   RVT+212
RVT0053P EQU   RVT+208
RVT0044P EQU   RVT+172
RVT0043P EQU   RVT+168
RVT0040P EQU   RVT+156
RVT0039P EQU   RVT+152
RVT0038P EQU   RVT+148
RVT0037P EQU   RVT+144
RVT0031P EQU   RVT+120
RVT0030P EQU   RVT+116
RVT0029P EQU   RVT+112
RVT0020P EQU   RVT+76
RVT0012P EQU   RVT+44
RVT0010P EQU   RVT+36
RVT0009P EQU   RVT+32
RVT0008P EQU   RVT+28
RVT0006P EQU   RVT+20
ZZ69999  EQU   ZZ6+1792
ZZ6BRB   EQU   ZZ6B+12
ZZ6BRC   EQU   ZZ6B+8
@NM00080 EQU   ZZ6B+6
ZZ6BFL   EQU   ZZ6B+4
ZZ6BDA   EQU   ZZ6B
@NM00079 EQU   ZZ6+540
ZZ6BUFI  EQU   ZZ6+536
ZZ6BUFP  EQU   ZZ6+532
ZZ6FILE  EQU   ZZ6+524
ZZ6BUFB  EQU   ZZ6+520
ZZ6BUFL  EQU   ZZ6+518
ZZ6BUFN  EQU   ZZ6+516
ZZ6ZZ6P  EQU   ZZ6+512
@NM00078 EQU   ZZ6F
ZZ6FINIT EQU   ZZ6F
ZZ6FDUOP EQU   ZZ6F
@NM00077 EQU   ZZ6+256
ZZ6D999  EQU   ZZ6D+128
@NM00076 EQU   ZZ6D+116
ZZ6DCAP  EQU   ZZ6D+112
@NM00075 EQU   ZZ6DF
ZZ6DFSU  EQU   ZZ6DF
ZZ6DFST  EQU   ZZ6DF
ZZ6DFAB  EQU   ZZ6DF
ZZ6DFMP  EQU   ZZ6DF
ZZ6DFDU  EQU   ZZ6DF
ZZ6DFBS  EQU   ZZ6DF
ZZ6DQ1   EQU   ZZ6D+84
ZZ6DQA9  EQU   ZZ6DQA+16
@NM00074 EQU   ZZ6DQA+12
ZZ6DQA1  EQU   ZZ6DQA+4
@NM00073 EQU   ZZ6DQA+2
ZZ6DQAT  EQU   ZZ6DQA
ZZ6DQA0  EQU   ZZ6DQA
ZZ6DRDX  EQU   ZZ6D+64
ZZ6DELK  EQU   ZZ6D+64
ZZ6DMEM  EQU   ZZ6D+56
ZZ6DDT1  EQU   ZZ6DDT
ZZ6DDO   EQU   ZZ6DD+2
ZZ6DDL   EQU   ZZ6DD
@NM00072 EQU   ZZ6D+2
ZZ6DRID  EQU   ZZ6D
ZZ60000  EQU   ZZ6
BVT99999 EQU   BVT+256
BVT0064P EQU   BVT+252
BVT0063P EQU   BVT+248
BVT0062P EQU   BVT+244
BVT0061P EQU   BVT+240
BVT0060P EQU   BVT+236
BVT0059P EQU   BVT+232
BVT0057P EQU   BVT+224
BVT0056P EQU   BVT+220
BVTSTBLP EQU   BVT+200
BVT0045P EQU   BVT+176
BVT0044P EQU   BVT+172
BVT0033P EQU   BVT+128
BVT0032P EQU   BVT+124
BVT0031P EQU   BVT+120
BVT0030P EQU   BVT+116
BVT0029P EQU   BVT+112
BVT0026P EQU   BVT+100
BVT0025P EQU   BVT+96
BVT0024P EQU   BVT+92
BVT0023P EQU   BVT+88
BVT0016P EQU   BVT+60
BVT0015P EQU   BVT+56
BVT0014P EQU   BVT+52
BVT0003P EQU   BVT+8
BVT0001P EQU   BVT
SA99     EQU   SA+72
SARC     EQU   SAR+56
SARB     EQU   SAR+52
SARA     EQU   SAR+48
SAR9     EQU   SAR+44
SAR8     EQU   SAR+40
SAR7     EQU   SAR+36
SAR6     EQU   SAR+32
SAR5     EQU   SAR+28
SAR4     EQU   SAR+24
SAR3     EQU   SAR+20
SAR2     EQU   SAR+16
SAR0     EQU   SAR+8
SARF     EQU   SAR+4
SARE     EQU   SAR
SAFWD    EQU   SA+8
SABAK    EQU   SA+4
SA1L     EQU   SA1+1
SA1P     EQU   SA1
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00071 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00070 EQU   UPT
@NM00069 EQU   ECT+52
@NM00068 EQU   ECT+48
@NM00067 EQU   ECT+44
@NM00066 EQU   ECTSWS2+1
@NM00065 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00064 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00063 EQU   PSCB+36
@NM00062 EQU   PSCB+32
@NM00061 EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00060 EQU   PSCBATR1
@NM00059 EQU   PSCBATR1
@NM00058 EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
PSCBUSRL EQU   PSCB+7
PSCBUSER EQU   PSCB
CMDT1    EQU   CMDT
CMDO     EQU   CMD+2
CMDL     EQU   CMD
ZZ299999 EQU   ZZ2+8192
ZZ2AXOT1 EQU   ZZ2AXOT
ZZ2AXOL  EQU   ZZ2AXO
@NM00057 EQU   ZZ2+7288
@NM00056 EQU   ZZ2AMDX+4
ZZ2AMDXC EQU   ZZ2AMDX
ZZ2HSD   EQU   ZZ2+3056
@NM00055 EQU   ZZ2ES
@NM00054 EQU   ZZ2+2868
ZZ2ITSEC EQU   ZZ2ITSE+1
@NM00053 EQU   ZZ2ITSE
ZZ2ITSEP EQU   ZZ2ITSE
ZZ2ITSEW EQU   ZZ2ITSE
@NM00052 EQU   ZZ2ITR+20
ZZ2ITREC EQU   ZZ2ITRE+1
@NM00051 EQU   ZZ2ITRE
ZZ2ITREP EQU   ZZ2ITRE
ZZ2ITREW EQU   ZZ2ITRE
@NM00050 EQU   ZZ2ITR+9
ZZ2ITRRC EQU   ZZ2ITR+8
ZZ2ITR2P EQU   ZZ2ITR+4
ZZ2ITRPP EQU   ZZ2ITR
@NM00049 EQU   ZZ2F
ZZ2F3270 EQU   ZZ2F
@NM00048 EQU   ZZ2+1544
ZZ2PGM   EQU   ZZ2+1536
@NM00047 EQU   ZZ2+1526
ZZ2CW    EQU   ZZ2+1524
@NM00046 EQU   ZZ2+1504
@NM00045 EQU   ZZ2+1352
ZZ2FFSYP EQU   ZZ2+1348
ZZ2SASYP EQU   ZZ2+1344
ZZ2RDSYP EQU   ZZ2+1340
ZZ2PHSYP EQU   ZZ2+1332
ZZ2ESSYP EQU   ZZ2+1328
ZZ200SYP EQU   ZZ2+1324
ZZ2SCWP  EQU   ZZ2+1320
ZZ2TTLP  EQU   ZZ2+1316
ZZ2LOADP EQU   ZZ2+1312
ZZ2VRESP EQU   ZZ2+1308
ZZ2CPPLE EQU   ZZ2CPPL+12
ZZ2CPPLP EQU   ZZ2CPPL+8
ZZ2CPPLU EQU   ZZ2CPPL+4
ZZ2VRSAP EQU   ZZ2+1288
ZZ2DVTP  EQU   ZZ2+1276
@NM00044 EQU   ZZ2+1272
@NM00043 EQU   ZZ2+1268
ZZ2RPLP  EQU   ZZ2+1260
ZZ2TCBP  EQU   ZZ2+1256
@NM00042 EQU   ZZ2+1252
ZZ2ZZ2P  EQU   ZZ2+1248
@NM00041 EQU   ZZ2+1112
ZZ2FPDRP EQU   ZZ2+1108
ZZ2FDSDP EQU   ZZ2+1104
ZZ2APDRP EQU   ZZ2+1100
ZZ2ADSDP EQU   ZZ2+1096
ZZ2ENQ0P EQU   ZZ2+1092
@NM00040 EQU   ZZ2+1080
ZZ2MSG0P EQU   ZZ2+1076
ZZ2MSGSP EQU   ZZ2+1060
ZZ2ALOCP EQU   ZZ2+1056
@NM00039 EQU   ZZ2+976
ZZ2TOD   EQU   ZZ2+968
ZZ2STGN  EQU   ZZ2STG+4
ZZ2STGP  EQU   ZZ2STG
@NM00038 EQU   ZZ2+952
ZZ2SCMDE EQU   ZZ2+944
ZZ2SCMDN EQU   ZZ2+936
ZZ2IDENT EQU   ZZ2+928
ZZ2A9999 EQU   ZZ2A+656
@NM00037 EQU   ZZ2A+224
@NM00036 EQU   ZZ2A+220
ZZ2AQD99 EQU   ZZ2AQD+60
@NM00035 EQU   ZZ2AQD+56
@NM00034 EQU   ZZ2AQDF
ZZ2AQDFA EQU   ZZ2AQDF
ZZ2AQDIL EQU   ZZ2AQD+48
ZZ2AQDIM EQU   ZZ2AQD+44
ZZ2AQDT9 EQU   ZZ2AQDT+34
ZZ2AQDTE EQU   ZZ2AQDT+33
ZZ2AQDTD EQU   ZZ2AQDT+2
@NM00033 EQU   ZZ2AQDT+1
ZZ2AQDTY EQU   ZZ2AQDT
ZZ2AQDT0 EQU   ZZ2AQDT
ZZ2AQDLB EQU   ZZ2AQD+9
ZZ2AQDOB EQU   ZZ2AQD+8
ZZ2AQDLE EQU   ZZ2AQD+4
ZZ2AQDOF EQU   ZZ2AQD
ZZ2AQD00 EQU   ZZ2AQD
ZZ2AQAS9 EQU   ZZ2AQAS+16
@NM00032 EQU   ZZ2AQAS+12
ZZ2AQAS2 EQU   ZZ2AQAS+8
ZZ2AQAS1 EQU   ZZ2AQAS+4
@NM00031 EQU   ZZ2AQAS+2
ZZ2AQAST EQU   ZZ2AQAS
ZZ2AQAS0 EQU   ZZ2AQAS
ZZ2ADPTA EQU   ZZ2ADPT
ZZ2ADPL  EQU   ZZ2ADP
ZZ2ADMTA EQU   ZZ2ADMT
ZZ2ADML  EQU   ZZ2ADM
ZZ2ADDTA EQU   ZZ2ADDT
ZZ2ADDL  EQU   ZZ2ADD
@NM00030 EQU   ZZ2A+72
ZZ2APIDB EQU   ZZ2APID+3
ZZ2APIDA EQU   ZZ2APID
@NM00029 EQU   ZZ2A+24
@NM00028 EQU   ZZ2AF+5
ZZ2AFX   EQU   ZZ2AF+5
@NM00027 EQU   ZZ2AF+3
ZZ2AFS   EQU   ZZ2AF+2
ZZ2AFD   EQU   ZZ2AF+2
ZZ2AFQ   EQU   ZZ2AF+2
ZZ2AF$   EQU   ZZ2AF+2
@NM00026 EQU   ZZ2AF+2
ZZ2AFM   EQU   ZZ2AF+2
@NM00025 EQU   ZZ2AF+2
@NM00024 EQU   ZZ2AF+1
ZZ2AFV   EQU   ZZ2AF+1
@NM00023 EQU   ZZ2AF+1
ZZ2AFC   EQU   ZZ2AF+1
@NM00022 EQU   ZZ2AF
ZZ2AFFS  EQU   ZZ2AF
ZZ2AFT   EQU   ZZ2AF
ZZ2AFP   EQU   ZZ2AF
@NM00021 EQU   ZZ2A+8
ZZ2ALINE EQU   ZZ2A+4
@NM00020 EQU   ZZ2A+3
ZZ2ASE   EQU   ZZ2A+2
@NM00019 EQU   ZZ2+264
@NM00018 EQU   ZZ2+263
ZZ2PRTT0 EQU   ZZ2PRTT
ZZ2PRTO  EQU   ZZ2PRT+2
ZZ2PRTL  EQU   ZZ2PRT
@NM00017 EQU   ZZ2AMD+56
ZZ2AMDXP EQU   ZZ2AMD+52
ZZ2AMDD  EQU   ZZ2AMD+48
ZZ2AMDL  EQU   ZZ2AMD+44
ZZ2AMDU  EQU   ZZ2AMD+28
ZZ2AMDF  EQU   ZZ2AMD+24
ZZ2AMDS  EQU   ZZ2AMD+20
ZZ2AMDC  EQU   ZZ2AMD+16
ZZ2AMDP  EQU   ZZ2AMD+12
ZZ2AMDB  EQU   ZZ2AMD+8
@NM00016 EQU   @NM00015
ZZ2AMD2  EQU   @NM00015
ZZ2AMD1  EQU   @NM00015
ZZ2AMD0  EQU   ZZ2AMD+6
ZZ2AMDA  EQU   ZZ2AMD+4
ZZ2AMDT  EQU   ZZ2AMD
ZZ199999 EQU   ZZ1+3072
@NM00014 EQU   ZZ1+2160
ZZ1TRTAS EQU   ZZ1+1904
ZZ1TRUPC EQU   ZZ1+1648
ZZ1TRCTX EQU   ZZ1+1392
ZZ1NASID EQU   ZZ1N+274
ZZ1NSTRL EQU   ZZ1N+272
ZZ1NOFF  EQU   ZZ1N+268
ZZ1NBDY  EQU   ZZ1N+264
ZZ1NADE  EQU   ZZ1N+260
ZZ1NADB  EQU   ZZ1N+256
ZZ1NSTR  EQU   ZZ1N
@NM00013 EQU   ZZ1+1080
ZZ1TREBC EQU   ZZ1+824
ZZ1TRHEX EQU   ZZ1+568
@NM00012 EQU   ZZ1+377
ZZ1USTAE EQU   ZZ1+376
@NM00011 EQU   ZZ1F+3
@NM00010 EQU   ZZ1F+2
ZZ1FPRNT EQU   ZZ1F+2
@NM00009 EQU   ZZ1F+1
ZZ1FTCAM EQU   ZZ1F+1
ZZ1FACCM EQU   ZZ1F+1
@NM00008 EQU   ZZ1F
ZZ1FM    EQU   ZZ1F
ZZ1FX    EQU   ZZ1F
ZZ1FU    EQU   ZZ1F
ZZ1EVEC  EQU   ZZ1EVE+1
@NM00007 EQU   ZZ1EVE
ZZ1EVEP  EQU   ZZ1EVE
ZZ1EVEW  EQU   ZZ1EVE
ZZ1ACMP  EQU   ZZ1ATTN
@NM00006 EQU   ZZ1+144
ZZ1FPP   EQU   ZZ1+140
ZZ1ZZ6P  EQU   ZZ1+136
@NM00005 EQU   ZZ1+84
ZZ1PLINE EQU   ZZ1+80
ZZ1PGSZ  EQU   ZZ1+76
ZZ1PCNT  EQU   ZZ1+72
@NM00004 EQU   ZZ1+68
ZZ1TPAGE EQU   ZZ1+64
ZZ1TLINE EQU   ZZ1+60
@NM00003 EQU   ZZ1+52
ZZ1DMCBP EQU   ZZ1+48
ZZ1DSDP  EQU   ZZ1+44
ZZ1PDRP  EQU   ZZ1+40
ZZ1ZZ2P  EQU   ZZ1+36
ZZ1327WP EQU   ZZ1+32
ZZ1ACBP  EQU   ZZ1+28
@NM00002 EQU   ZZ1+24
ZZ1PDCBP EQU   ZZ1+20
ZZ1BLRBL EQU   ZZ1+16
@NM00001 EQU   ZZ1+12
ZZ1PNULL EQU   ZZ1+8
ZZ1NULL  EQU   ZZ1+4
ZZ1IDE   EQU   ZZ1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   BLSRDUIN,(C'PLS1929',0800,78208)
