IOSK     TITLE 'BLSRIOSK--IPCS IOSCHECK SUBCOMMAND PROCESSOR           *
                        '
*/* CHANGE ACTIVITY -------------------------------------------------*/
*/*   THIS MODULE WAS WRITTEN FOR @G57LPGW                           */
*/*------------------------------------------------------------------*/
BLSRIOSK CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'BLSRIOSK  78.062'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         BLSUALLR R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
*   RETC=0;                         /* SET RETURN CODE               */
         SLR   @14,@14                                             0268
         ST    @14,RETC                                            0268
*   RF=0;                           /* SET RETURN CODE               */
         SLR   RF,RF                                               0269
*   IN81L=12;                       /* SET SEGMENT LENGTH            */
         LA    @14,12                                              0270
         STH   @14,IN81L                                           0270
*   IN82L=12;                       /* SEGMENT LENGTH                */
         STH   @14,IN82L                                           0271
*   IN83L=12;                       /* SEGMENT LENGTH                */
         STH   @14,IN83L                                           0272
*   RESPECIFY                                                      0273
*     R1 RESTRICTED;                                               0273
*   DO;                             /* GETMAIN (R)                 0274
*                                      LV(8192)SP(ZZZSPEXC)          */
*     RESPECIFY                                                    0275
*      (GPR01F,                                                    0275
*       GPR00F) RESTRICTED;                                        0275
*     GPR00F=8192;                  /* LENGTH REQUESTED              */
         L     GPR00F,@CF02596                                     0276
*     GPR01F=ZZZSPEXC;              /* SP IN REG 1                   */
         LA    GPR01F,1                                            0277
*     GEN(SLL   GPR01F,24)                                         0278
*     NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;                 0278
         SLL   GPR01F,24
*     GPR00F=GPR00F×GPR01F;         /* SP IN HIGH BYTE               */
         OR    GPR00F,GPR01F                                       0279
*     GPR01F=-1;                    /* INDICATE A GETMAIN REQUEST    */
         SLR   GPR01F,GPR01F                                       0280
         BCTR  GPR01F,0                                            0280
*     SVC(10);                      /* R-FORM OF GETMAIN             */
         SVC   10                                                  0281
*     RESPECIFY                                                    0282
*      (GPR01F,                                                    0282
*       GPR00F) UNRESTRICTED;                                      0282
*   END;                            /* GETMAIN (R)                 0283
*                                      LV(8192)SP(ZZZSPEXC)          */
*   DATAPTR=R1;                     /* BASE FOR INPUT BUFFER FOR   0284
*                                      CONTROL BLOCKS                */
         LR    DATAPTR,R1                                          0284
*   WORKAD=DATAPTR+PGLN;            /* SECOND BUFFER                 */
         LR    WORKAD,DATAPTR                                      0285
         AL    WORKAD,@CF00091                                     0285
*   RESPECIFY                                                      0286
*     R1 UNRESTRICTED;                                             0286
*                                                                  0287
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL IKJPARS AND EXAMINE OPERANDS                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0287
*   DO;                             /* BLSRPARS ROUTING FLAG       0287
*                                      MF(EXECUTE,PX)                */
*     DO;                           /* BLSRPARD CSECT()DSECT(PD)EQUAT
*                                      E(ESAU)EXIT(EXITRLSA,)MF(EXECU
*                                      TE,PX)ROUTING FLAG            */
*       DO;                         /* BLSUPARS CSECT(PC)DSECT(PD)EXI
*                                      T(EXITRLSA,)MF(EXECUTE,PX)FLAG
*                                      ROUTING                       */
*         CALL BLSUPARI(ZZ2,PCCSECT,PDAPTR);/* PARSE OPERANDS        */
         ST    R9,@AL00001                                         0290
         L     @14,PCPTR                                           0290
         ST    @14,@AL00001+4                                      0290
         LA    @14,PDAPTR                                          0290
         ST    @14,@AL00001+8                                      0290
         L     @10,ZZ2BVTP(,R9)                                    0290
         L     @15,BVTPARIP(,@10)                                  0290
         LA    @01,@AL00001                                        0290
         BALR  @14,@15                                             0290
*         RESPECIFY                                                0291
*          (GPR15F) RESTRICTED;                                    0291
*         IF GPR15F^=ZZZFLAGI THEN                                 0292
*                                                                  0292
         LTR   GPR15F,GPR15F                                       0292
         BZ    @RF00292                                            0292
*           /*********************************************************/
*           /*                                                       */
*           /* UNABLE TO PARSE                                       */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0293
*           DO;                     /* UNABLE TO PARSE               */
*             RETC=GPR15F;          /* RETURN CODE                   */
         ST    GPR15F,RETC                                         0294
*             GO TO EXITNORL;       /* EXIT WITHOUT PDL              */
         B     EXITNORL                                            0295
*           END;                                                   0296
*         RESPECIFY                                                0297
*          (GPR15F) UNRESTRICTED;                                  0297
@RF00292 DS    0H                                                  0298
*         RESPECIFY                                                0298
*          (PDRPTR) RESTRICTED;                                    0298
*         PDRPTR=PDAPTR;            /* ->PDL                         */
         L     PDRPTR,PDAPTR                                       0299
*         GENERATE REFS(PD,PDRPTR) CODE(USING PD,PDRPTR);          0300
         USING PD,PDRPTR
*         IF PXTEST=PXTEST1 THEN                                   0301
         CLC   PXTEST(2),@CH00043                                  0301
         BNE   @RF00301                                            0301
*           ZZ2AFX=ZZZ1;            /* TEST                          */
         OI    ZZ2AFX(R9),B'10000000'                              0302
*         ELSE                                                     0303
*           IF PXTEST=PXTEST0 THEN                                 0303
         B     @RC00301                                            0303
@RF00301 CLC   PXTEST(2),@CH00068                                  0303
         BNE   @RF00303                                            0303
*             ZZ2AFX=ZZZ0;          /* NOTEST                        */
         NI    ZZ2AFX(R9),B'01111111'                              0304
*         CALL BLSUPARU(ZZ2,PDDSECT,PXRO);/* SET ROUTING OPTIONS     */
@RF00303 DS    0H                                                  0305
@RC00301 ST    R9,@AL00001                                         0305
         ST    PDRPTR,@AL00001+4                                   0305
         LA    @14,PXRO                                            0305
         ST    @14,@AL00001+8                                      0305
         L     @06,ZZ2BVTP(,R9)                                    0305
         L     @15,BVTPARUP(,@06)                                  0305
         LA    @01,@AL00001                                        0305
         BALR  @14,@15                                             0305
*         RESPECIFY                                                0306
*          (GPR15F) RESTRICTED;                                    0306
*         RETC=MAX(RETC,GPR15F);    /* RETURN CODE                   */
         L     @14,RETC                                            0307
         CR    @14,GPR15F                                          0307
         BNL   *+6
         LR    @14,GPR15F                                          0307
         ST    @14,RETC                                            0307
*         RESPECIFY                                                0308
*          (GPR15F) UNRESTRICTED;                                  0308
*         IF RETC>ZZZFLAGE THEN     /* SERIOUS ERROR                 */
         C     @14,@CF00051                                        0309
         BH    @RT00309                                            0309
*           GO TO EXITRLSA;         /* EXIT WITH PDL                 */
*       END;                        /* BLSUPARS CSECT(PC)DSECT(PD)EXI
*                                      T(EXITRLSA,)MF(EXECUTE,PX)FLAG
*                                      ROUTING                       */
*     END;                          /* BLSRPARD CSECT()DSECT(PD)EQUAT
*                                      E(ESAU)EXIT(EXITRLSA,)MF(EXECU
*                                      TE,PX)ROUTING FLAG            */
*   END;                            /* BLSRPARS ROUTING FLAG       0313
*                                      MF(EXECUTE,PX)                */
*                                                                  0314
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR VALID DUMP TO PROCESS                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0314
*   IF ZZ6DFAB='0'B THEN                                           0314
         L     @14,ZZ2AZZ6P(,R9)                                   0314
         TM    ZZ6DFAB(@14),B'00010000'                            0314
         BNZ   @RF00314                                            0314
*     CALL BLSUPUTV(ZZ2,M032);      /* VIRTUAL DUMP IS NOT VALID FOR
*                                      PROCESSING LCHS, SINCE SDUMP
*                                      USES IOS TO DUMP AND DYNAMIC
*                                      CHANGES OCCUR DURING DUMPING  */
         ST    R9,@AL00001                                         0315
         LA    @14,M032                                            0315
         ST    @14,@AL00001+4                                      0315
         L     @06,ZZ2BVTP(,R9)                                    0315
         L     @15,BVTPUTVP(,@06)                                  0315
         LA    @01,@AL00001                                        0315
         BALR  @14,@15                                             0315
*                                                                  0316
*   /*****************************************************************/
*   /*                                                               */
*   /* OBTAIN CVT PTR                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0316
*   ESAU(1:LENGTH(ESCO))=ESCO;      /* INITIALIZE REQUEST BLOCK      */
@RF00314 MVC   ESAU(182),ESCO                                      0316
*   ESAUDT=DTCVT;                   /* INDICATE TYPE                 */
         MVC   ESAUDT(34),DTCVT                                    0317
*   ESAUSYM='CVT';                  /* REQUEST CVT                   */
         MVI   ESAUSYM+3,C' '                                      0318
         MVC   ESAUSYM+4(27),ESAUSYM+3                             0318
         MVC   ESAUSYM(3),@CC02409                                 0318
*   CALL BLSRESGU(ZZ2,ESAU);        /* GET CVT ADDR                  */
         ST    R9,@AL00001                                         0319
         LA    @14,ESAU                                            0319
         ST    @14,@AL00001+4                                      0319
         L     @06,ZZ2RVTP(,R9)                                    0319
         L     @15,RVTESGUP(,@06)                                  0319
         LA    @01,@AL00001                                        0319
         BALR  @14,@15                                             0319
*   IF RF^=0 THEN                                                  0320
         LTR   RF,RF                                               0320
         BNZ   @RT00320                                            0320
*     GO TO EXITRLSA;               /* EXIT                          */
*   THECVTPT=ESAULAD;               /* SAVE CVT ADDRESS              */
         L     @14,ESAULAD                                         0322
         ST    @14,THECVTPT                                        0322
*                                                                  0323
*   /*****************************************************************/
*   /*                                                               */
*   /* ANALYZE IOS COMPONENT BLOCKS                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0323
*   CALL ACCESS(0,THECVTPT,LENGTH(CVTILK2)+ADDR(CVTILK2)-ADDR(CVT),
*       'CVT     ');                /* GET CVT THROUGH CVTILK2 FIELD */
         LA    @14,@CF00048                                        0323
         ST    @14,@AL00001                                        0323
         LA    @14,THECVTPT                                        0323
         ST    @14,@AL00001+4                                      0323
         LA    @14,CVTILK2(,DATAPTR)                               0323
         AL    @14,@CF00040                                        0323
         SLR   @14,DATAPTR                                         0323
         ST    @14,@AFTEMPS                                        0323
         LA    @14,@AFTEMPS                                        0323
         ST    @14,@AL00001+8                                      0323
         LA    @14,@CC02604                                        0323
         ST    @14,@AL00001+12                                     0323
         LA    @01,@AL00001                                        0323
         BAL   @14,ACCESS                                          0323
*   IF RF^=0 THEN                                                  0324
         LTR   RF,RF                                               0324
         BNZ   @RT00324                                            0324
*     GO TO EXITRLSA;               /* EXIT                          */
*   CALL ACCESS(0,CVTILK2,PGLN,'UCBLOKUP');/* GET UCB LOOKUP         */
         MVC   @AL00001(16),@AL00326                               0326
         LA    @14,CVTILK2(,DATAPTR)                               0326
         ST    @14,@AL00001+4                                      0326
         LA    @01,@AL00001                                        0326
         BAL   @14,ACCESS                                          0326
*   IF RF^=0 THEN                                                  0327
         LTR   RF,RF                                               0327
         BNZ   @RT00327                                            0327
*     GO TO EXITRLSA;               /* EXIT                          */
*   RESPECIFY                                                      0329
*    (R2,                                                          0329
*     R3,                                                          0329
*     R4,                                                          0329
*     R5) RESTRICTED;                                              0329
*   R3=PGLN;                        /* LENGTH OF WORK AREA           */
         L     R3,@CF00091                                         0330
*   R5=R3;                          /* SAME LENGTH                   */
         LR    R5,R3                                               0331
*   R2=WORKAD;                      /* POINT TO WORD AREA            */
         LR    R2,WORKAD                                           0332
*   R4=DATAPTR;                     /* POINT TO BUFFER               */
         LR    R4,DATAPTR                                          0333
*   GEN REFS(R2,R3,R4,R5) SETS(R2,R3,R4,R5);                       0334
          MVCL  R2,R4   MOVE LOOKUP TABLE
*   RESPECIFY                                                      0335
*    (R2,                                                          0335
*     R3,                                                          0335
*     R4,                                                          0335
*     R5) UNRESTRICTED;                                            0335
*   ACTCNT=0;                       /* ZERO ACTIVE UCB COUNT         */
         SLR   @14,@14                                             0336
         ST    @14,ACTCNT                                          0336
*   ACTTPCNT=0;                     /* ZERO TP ACTIVE COUNT          */
         ST    @14,ACTTPCNT                                        0337
*                                                                  0338
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE LIMITS OF UCBS AND READ THEM ALL IN                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0338
*   LUCBADR=0;                      /* LAST UCB ADDRESS              */
         STH   @14,LUCBADR                                         0338
*   DO I=1 BY 1 WHILE(PTRUCB(I)^=PTRMAX);/* SCAN UCB ADDRESSES       */
         LA    I,1                                                 0339
         B     @DE00339                                            0339
@DL00339 DS    0H                                                  0340
*     IF PTRUCB(I)>=BLOKMAX THEN    /* END OF PAGE                   */
         LR    @14,I                                               0340
         ALR   @14,@14                                             0340
         BCTR  @14,0                                               0340
         BCTR  @14,0                                               0340
         LH    @14,PTRUCB(@14,WORKAD)                              0340
         N     @14,@CF02660                                        0340
         C     @14,@CF00449                                        0340
         BL    @RF00340                                            0340
*       LUCBADR=MAX(PTRUCB(I),LUCBADR);                            0341
         LH    @06,LUCBADR                                         0341
         N     @06,@CF02660                                        0341
         CR    @14,@06                                             0341
         BNL   *+6
         LR    @14,@06                                             0341
         STH   @14,LUCBADR                                         0341
*   END;                                                           0342
@RF00340 AL    I,@CF00043                                          0342
@DE00339 LR    @14,I                                               0342
         ALR   @14,@14                                             0342
         ALR   @14,WORKAD                                          0342
         BCTR  @14,0                                               0342
         BCTR  @14,0                                               0342
         CLC   PTRUCB(2,@14),@CH02481                              0342
         BNE   @DL00339                                            0342
*   LNTHUCBS=LUCBADR-BLOKMAX+PARTUCB;/* BUFFER LENGTH TO HOLD UCBS   */
         LH    LNTHUCBS,LUCBADR                                    0343
         N     LNTHUCBS,@CF02660                                   0343
         AL    LNTHUCBS,@CF02650                                   0343
*   IF LNTHUCBS<0 THEN              /* NO UCBS                       */
         LTR   LNTHUCBS,LNTHUCBS                                   0344
         BNM   @RF00344                                            0344
*     DO;                                                          0345
*       RETC=ZZZFLAGW;              /* WARNING                       */
         MVC   RETC(4),@CF00040                                    0346
*       GO TO EXITRLSA;             /* EXIT                          */
         B     EXITRLSA                                            0347
*     END;                                                         0348
*   RESPECIFY                                                      0349
*     R1 RESTRICTED;                                               0349
@RF00344 DS    0H                                                  0350
*   DO;                             /* GETMAIN (R)                 0350
*                                      LV(LNTHUCBS)SP(ZZZSPEXC)      */
*     RESPECIFY                                                    0351
*      (GPR01F,                                                    0351
*       GPR00F) RESTRICTED;                                        0351
*     GPR00F=LNTHUCBS;              /* LENGTH REQUESTED              */
         LR    GPR00F,LNTHUCBS                                     0352
*     GPR01F=ZZZSPEXC;              /* SP IN REG 1                   */
         LA    GPR01F,1                                            0353
*     GEN(SLL   GPR01F,24)                                         0354
*     NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;                 0354
         SLL   GPR01F,24
*     GPR00F=GPR00F×GPR01F;         /* SP IN HIGH BYTE               */
         OR    GPR00F,GPR01F                                       0355
*     GPR01F=-1;                    /* INDICATE A GETMAIN REQUEST    */
         SLR   GPR01F,GPR01F                                       0356
         BCTR  GPR01F,0                                            0356
*     SVC(10);                      /* R-FORM OF GETMAIN             */
         SVC   10                                                  0357
*     RESPECIFY                                                    0358
*      (GPR01F,                                                    0358
*       GPR00F) UNRESTRICTED;                                      0358
*   END;                            /* GETMAIN (R)                 0359
*                                      LV(LNTHUCBS)SP(ZZZSPEXC)      */
*   TUCBFPT=R1;                     /* POINTER TO UCB BUFFER         */
         LR    TUCBFPT,R1                                          0360
*   RESPECIFY                                                      0361
*     R1 UNRESTRICTED;                                             0361
*   ESAU(1:LENGTH(ESCO))=ESCO;      /* INIT REQUEST BLOCK            */
         MVC   ESAU(182),ESCO                                      0362
*   ESAUAS2=ZZ6DQ2;                 /* ASID                          */
         L     @14,ZZ2AZZ6P(,R9)                                   0363
         L     @06,ZZ6DQ2(,@14)                                    0363
         ST    @06,ESAUAS2                                         0363
*   ESAULAD=BLOKMAX;                /* FIRST UCB                     */
         MVC   ESAULAD(4),@CF00449                                 0364
*   ESAUDLE=LNTHUCBS;               /* LENGTH OF UCBS                */
         ST    LNTHUCBS,ESAUDLE                                    0365
*   ESAUAST=ZZZASTCV;               /* VIRTUAL REQUEST               */
         MVC   ESAUAST(2),@CC00075                                 0366
*   ESAUAS1=ZZ6DQ1;                 /* CPU                           */
         L     @14,ZZ6DQ1(,@14)                                    0367
         ST    @14,ESAUAS1                                         0367
*   ESAUSYM='UCBS';                 /* SYMBOL                        */
         MVI   ESAUSYM+4,C' '                                      0368
         MVC   ESAUSYM+5(26),ESAUSYM+4                             0368
         MVC   ESAUSYM(4),@CC02606                                 0368
*   CALL BLSRACC(ZZ2,ESAU,TUCBBF);  /* GET UCBS                      */
         ST    R9,@AL00001                                         0369
         LA    @14,ESAU                                            0369
         ST    @14,@AL00001+4                                      0369
         ST    TUCBFPT,@AL00001+8                                  0369
         L     @06,ZZ2RVTP(,R9)                                    0369
         L     @15,RVTRACCP(,@06)                                  0369
         LA    @01,@AL00001                                        0369
         BALR  @14,@15                                             0369
*   IF RF^=0 THEN                   /* UNABLE                        */
         LTR   RF,RF                                               0370
         BNZ   @RT00370                                            0370
*     GO TO EXITRLSA;               /* EXIT                          */
*   DO I=1 BY 1 WHILE(PTRUCB(I)^=PTRMAX);/* GO THRU UCBS             */
         LA    I,1                                                 0372
         B     @DE00372                                            0372
@DL00372 DS    0H                                                  0373
*     IF PTRUCB(I)^=0 THEN          /* GOOD UCB POINTER              */
         LR    @14,I                                               0373
         ALR   @14,@14                                             0373
         BCTR  @14,0                                               0373
         BCTR  @14,0                                               0373
         LH    @14,PTRUCB(@14,WORKAD)                              0373
         N     @14,@CF02660                                        0373
         LTR   @14,@14                                             0373
         BZ    @RF00373                                            0373
*       DO;                                                        0374
*         DATABUFR(1:PARTUCB)=TUCBBF((PTRUCB(I)-BLOKMAX+1):(PTRUCB(I)-
*             BLOKMAX+(PARTUCB+1)));/* MOVE UCB                      */
         ALR   @14,TUCBFPT                                         0375
         AL    @14,@CF02661                                        0375
         MVC   DATABUFR(48,DATAPTR),TUCBBF(@14)                    0375
*         EBOK='1'B;                /* SET INDICATOR                 */
         OI    EBOK,B'00001000'                                    0376
*         DO J=1 TO 3;              /* CHECK UCBNAME FOR VALID EBCDIC
*                                      REP OF HEX                    */
         LA    J,1                                                 0377
@DL00377 DS    0H                                                  0378
*           IF(UCBNAME(J)<'0'×UCBNAME(J)>'9')&(UCBNAME(J)<'A'×UCBNAME(J
*               )>'F') THEN                                        0378
         LR    @14,DATAPTR                                         0378
         ALR   @14,J                                               0378
         CLI   UCBNAME-1(@14),C'0'                                 0378
         BL    @GL00001                                            0378
         LR    @14,DATAPTR                                         0378
         ALR   @14,J                                               0378
         CLI   UCBNAME-1(@14),C'9'                                 0378
         BNH   @RF00378                                            0378
@GL00001 LR    @14,DATAPTR                                         0378
         ALR   @14,J                                               0378
         CLI   UCBNAME-1(@14),C'A'                                 0378
         BL    @RT00378                                            0378
         LR    @14,DATAPTR                                         0378
         ALR   @14,J                                               0378
         CLI   UCBNAME-1(@14),C'F'                                 0378
         BNH   @RF00378                                            0378
@RT00378 DS    0H                                                  0379
*             EBOK='0'B;            /* INVALID EBCDIC                */
         NI    EBOK,B'11110111'                                    0379
*         END;                                                     0380
@RF00378 AL    J,@CF00043                                          0380
         C     J,@CF00153                                          0380
         BNH   @DL00377                                            0380
*         IF UCBID^='FF'X×          /* UCB INVALID                   */
*             EBOK='0'B THEN                                       0381
         CLI   UCBID(DATAPTR),X'FF'                                0381
         BNE   @RT00381                                            0381
         TM    EBOK,B'00001000'                                    0381
         BNZ   @RF00381                                            0381
@RT00381 DS    0H                                                  0382
*           DO;                                                    0382
*             OLDN=2;               /* 2 SEGMENTS                    */
         MVC   OLDN(4),@CF00068                                    0383
*             OLDP(1)=ADDR(M034);   /* BASE MESSAGE                  */
         LA    @14,M034                                            0384
         ST    @14,OLDP                                            0384
*             OLDP(2)=ADDR(IN81);   /* INSERT                        */
         LA    @14,IN81                                            0385
         ST    @14,OLDP+4                                          0385
*             DO;                   /* BLRCNVPC(PTRUCB(I)) FROM(POINT
*                                      ER)TO(CHARACTER)SET(IN81T1)TR(
*                                      ZZ1TRHEX)                     */
*               PTRPTR=PTRUCB(I);   /* SOURCE TO BIT/POINTER       0387
*                                      INTERMEDIATE                  */
         LR    @14,I                                               0387
         ALR   @14,@14                                             0387
         BCTR  @14,0                                               0387
         BCTR  @14,0                                               0387
         LH    @14,PTRUCB(@14,WORKAD)                              0387
         N     @14,@CF02660                                        0387
         ST    @14,PTRPTR                                          0387
*               UNPK(IN81T1(1:LENGTH(IN81T1)-1),PTRBIT);/* BIT=>ZONED
*                                      HEXADECIMAL                   */
         UNPK  IN81T1(7),PTRBIT(4)                                 0388
*               IN81T1(LENGTH(IN81T1):LENGTH(IN81T1))=PTRBIT(25:32);
         MVC   IN81T1+7(1),PTRBIT+3                                0389
*                                   /* FINAL ZONED HEXADECIMAL DIGIT */
*               TR(IN81T1,ZZ1TRHEX);/* ZONED HEXADECIMAL=>EBCDIC     */
         L     @14,ZZ2ZZ1P(,R9)                                    0390
         TR    IN81T1(8),ZZ1TRHEX(@14)                             0390
*             END;                  /* BLRCNVPC(PTRUCB(I)) FROM(POINT
*                                      ER)TO(CHARACTER)SET(IN81T1)TR(
*                                      ZZ1TRHEX)                     */
*             IN81L=12;             /* LENGTH                        */
         MVC   IN81L(2),@CH00032                                   0392
*             IN81O=ADDR(M034T2)-ADDR(M034T);/* OFFSET               */
         MVC   IN81O(2),@CH02654                                   0393
*             CALL BLSUPUTO(ZZ2,OLD);/* PUT OUT MESSAGE              */
         ST    R9,@AL00001                                         0394
         LA    @14,OLD                                             0394
         ST    @14,@AL00001+4                                      0394
         L     @06,ZZ2BVTP(,R9)                                    0394
         L     @15,BVTPUTOP(,@06)                                  0394
         LA    @01,@AL00001                                        0394
         BALR  @14,@15                                             0394
*           END;                                                   0395
*         IF UCBACTV='1'B THEN      /* I/O ACTIVITY                  */
@RF00381 TM    UCBACTV(DATAPTR),B'00000010'                        0396
         BNO   @RF00396                                            0396
*           DO;                                                    0397
*             ACTCNT=ACTCNT+1;      /* INC COUNTER                   */
         LA    @14,1                                               0398
         L     @06,ACTCNT                                          0398
         ALR   @06,@14                                             0398
         ST    @06,ACTCNT                                          0398
*             IF UCB3COMM='1'B THEN /* TP DEVICE                     */
         TM    UCB3COMM(DATAPTR),B'01000000'                       0399
         BNO   @RF00399                                            0399
*               ACTTPCNT=ACTTPCNT+1;/* INC COUNTER                   */
         AL    @14,ACTTPCNT                                        0400
         ST    @14,ACTTPCNT                                        0400
*           END;                                                   0401
@RF00399 DS    0H                                                  0402
*         IF(UCBFLC^='00'X)         /* IF FLAG BYTE C NONZERO        */
*             &((UCBONLI='1'B)      /* AND DEVICE IS ONLINE          */
*             ×(UCBNRY='0'B))       /* OR READY                      */
*           THEN                                                   0402
@RF00396 CLI   UCBFLC(DATAPTR),X'00'                               0402
         BE    @RF00402                                            0402
         TM    UCBONLI(DATAPTR),B'10000000'                        0402
         BO    @RT00402                                            0402
         TM    UCBNRY(DATAPTR),B'01000000'                         0402
         BNZ   @RF00402                                            0402
@RT00402 DS    0H                                                  0403
*           DO;                                                    0403
*             IN82T='';             /* BLANK INSERT                  */
         MVI   IN82T,C' '                                          0404
         MVC   IN82T+1(7),IN82T                                    0404
*             DO;                   /* BLRCNVBC(UCBFLC) FROM(BIT)TO(C
*                                      HARACTER)SET(IN82T(1:2))TR(ZZ1
*                                      TRHEX)                        */
*               UNPK(IN82T(1:1),UCBFLC);/* BIT=>ZONED HEXADECIMAL    */
         UNPK  IN82T(1),UCBFLC(1,DATAPTR)                          0406
*               IN82T(2:2)=UCBFLC(LENGTH(UCBFLC)-7:LENGTH(UCBFLC));/*
*                                      FINAL ZONED HEXADECIMAL DIGIT */
         MVC   IN82T+1(1),UCBFLC(DATAPTR)                          0407
*               TR(IN82T(1:2),ZZ1TRHEX);/* ZONED HEXADECIMAL=>EBCDIC */
         L     @14,ZZ2ZZ1P(,R9)                                    0408
         TR    IN82T(2),ZZ1TRHEX(@14)                              0408
*             END;                  /* BLRCNVBC(UCBFLC) FROM(BIT)TO(C
*                                      HARACTER)SET(IN82T(1:2))TR(ZZ1
*                                      TRHEX)                        */
*             OLDN=3;               /* 3 SEGMENTS                    */
         MVC   OLDN(4),@CF00153                                    0410
*             OLDP(1)=ADDR(M033);   /* BASE MSG                      */
         LA    @14,M033                                            0411
         ST    @14,OLDP                                            0411
*             OLDP(2)=ADDR(IN81);   /* INSERT                        */
         LA    @14,IN81                                            0412
         ST    @14,OLDP+4                                          0412
*             OLDP(3)=ADDR(IN82);   /* INSERT                        */
         LA    @14,IN82                                            0413
         ST    @14,OLDP+8                                          0413
*             IN81T='';             /* BLANK INSERT                  */
         MVI   IN81T,C' '                                          0414
         MVC   IN81T+1(7),IN81T                                    0414
*             IN81T(1:3)=UCBNAME;   /* INSERT UCB NAME               */
         MVC   IN81T(3),UCBNAME(DATAPTR)                           0415
*             IN81L=7;              /* SET LENGTH                    */
         MVC   IN81L(2),@CH00474                                   0416
*             IN82L=6;              /* SET LENGTH                    */
         MVC   IN82L(2),@CH00213                                   0417
*             IN81O=ADDR(M033T2)-ADDR(M033T);/* SET OFFSET           */
         MVC   IN81O(2),@CH00062                                   0418
*             IN82O=ADDR(M033T3)-ADDR(M033T);/* OFFSET               */
         MVC   IN82O(2),@CH00420                                   0419
*             CALL BLSUPUTO(ZZ2,OLD);/* PUT OUT MESSAGE              */
         ST    R9,@AL00001                                         0420
         LA    @14,OLD                                             0420
         ST    @14,@AL00001+4                                      0420
         L     @06,ZZ2BVTP(,R9)                                    0420
         L     @15,BVTPUTOP(,@06)                                  0420
         LA    @01,@AL00001                                        0420
         BALR  @14,@15                                             0420
*             IN81L=12;             /* RESET LENGTH                  */
         LA    @14,12                                              0421
         STH   @14,IN81L                                           0421
*             IN82L=12;             /* RESET LENGTH                  */
         STH   @14,IN82L                                           0422
*           END;                                                   0423
*       END;                                                       0424
@RF00402 DS    0H                                                  0425
*   END;                                                           0425
@RF00373 AL    I,@CF00043                                          0425
@DE00372 LR    @14,I                                               0425
         ALR   @14,@14                                             0425
         ALR   @14,WORKAD                                          0425
         BCTR  @14,0                                               0425
         BCTR  @14,0                                               0425
         CLC   PTRUCB(2,@14),@CH02481                              0425
         BNE   @DL00372                                            0425
*                                                                  0426
*   /*****************************************************************/
*   /*                                                               */
*   /* INFORM USER OF I/O ACTIVITY                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0426
*   DO;                             /* FREEMAIN(R) LV(LNTHUCBS)SP(ZZZ
*                                      SPEXC)A(TUCBBF)               */
*     RESPECIFY                                                    0427
*      (GPR01F,                                                    0427
*       GPR00F) RESTRICTED;                                        0427
*     GPR00F=LNTHUCBS;              /* LENGTH REQUESTED              */
         LR    GPR00F,LNTHUCBS                                     0428
*     GPR01F=ZZZSPEXC;              /* SP IN REG 1                   */
         LA    GPR01F,1                                            0429
*     GEN(SLL   GPR01F,24)                                         0430
*     NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;                 0430
         SLL   GPR01F,24
*     GPR00F=GPR00F×GPR01F;         /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                       0431
*     GPR01F=ADDR(TUCBBF);          /* SET REGISTER ONE              */
         LR    GPR01F,TUCBFPT                                      0432
*     SVC(10);                      /* R-FORM OF GETMAIN             */
         SVC   10                                                  0433
*     RESPECIFY                                                    0434
*      (GPR01F,                                                    0434
*       GPR00F) UNRESTRICTED;                                      0434
*   END;                            /* FREEMAIN(R) LV(LNTHUCBS)SP(ZZZ
*                                      SPEXC)A(TUCBBF)               */
*   DO;                             /* BLRCNVUC(ACTCNT) FROM(UNSIGNED
*                                      FIXED BINARY)TO(CHARACTER)SET(
*                                      IN81T1)PATTERN                */
*     CVD(ACTCNT,PACKED);           /* UNSIGNED BINARY=>PACKED     0437
*                                      DECIMAL                       */
         L     @14,ACTCNT                                          0437
         CVD   @14,PACKED                                          0437
*     ZONED='40404040402020202020202020202120'X;/* ED PATTERN        */
         MVC   ZONED(16),@CB02618                                  0438
*     ED(ZONED(5:16),PACKED(17:64));/* PACKED DECIMAL=>EBCDIC        */
         ED    ZONED+4(12),PACKED+2                                0439
*     IN81T1=ZONED(17-LENGTH(IN81T1):16);/* EBCDIC RESULT            */
         MVC   IN81T1(8),ZONED+8                                   0440
*   END;                            /* BLRCNVUC(ACTCNT) FROM(UNSIGNED
*                                      FIXED BINARY)TO(CHARACTER)SET(
*                                      IN81T1)PATTERN                */
*   OLDN=2;                         /* 2 SEGMENTS                    */
         MVC   OLDN(4),@CF00068                                    0442
*   OLDP(1)=ADDR(M035);             /* BASE MSG                      */
         LA    @14,M035                                            0443
         ST    @14,OLDP                                            0443
*   OLDP(2)=ADDR(IN81);             /* INSERT                        */
         LA    @14,IN81                                            0444
         ST    @14,OLDP+4                                          0444
*   CALL BLSUMPK1(ZZ2,IN81);        /* EDIT SEGMENT                  */
         ST    R9,@AL00001                                         0445
         LA    @14,IN81                                            0445
         ST    @14,@AL00001+4                                      0445
         L     @08,ZZ2BVTP(,R9)                                    0445
         L     @15,BVTMPK1P(,@08)                                  0445
         LA    @01,@AL00001                                        0445
         BALR  @14,@15                                             0445
*   IN81O=ADDR(M035T2)-ADDR(M035T); /* OFFSET                        */
         MVC   IN81O(2),@CH02655                                   0446
*   CALL BLSUPUTO(ZZ2,OLD);         /* PUT OUT MESSAGE               */
         ST    R9,@AL00001                                         0447
         LA    @14,OLD                                             0447
         ST    @14,@AL00001+4                                      0447
         L     @08,ZZ2BVTP(,R9)                                    0447
         L     @15,BVTPUTOP(,@08)                                  0447
         LA    @01,@AL00001                                        0447
         BALR  @14,@15                                             0447
*   DO;                             /* BLRCNVUC(ACTTPCNT)          0448
*                                      FROM(UNSIGNED FIXED BINARY)TO(
*                                      CHARACTER)SET(IN81T1)PATTERN  */
*     CVD(ACTTPCNT,PACKED);         /* UNSIGNED BINARY=>PACKED     0449
*                                      DECIMAL                       */
         L     @14,ACTTPCNT                                        0449
         CVD   @14,PACKED                                          0449
*     ZONED='40404040402020202020202020202120'X;/* ED PATTERN        */
         MVC   ZONED(16),@CB02618                                  0450
*     ED(ZONED(5:16),PACKED(17:64));/* PACKED DECIMAL=>EBCDIC        */
         ED    ZONED+4(12),PACKED+2                                0451
*     IN81T1=ZONED(17-LENGTH(IN81T1):16);/* EBCDIC RESULT            */
         MVC   IN81T1(8),ZONED+8                                   0452
*   END;                            /* BLRCNVUC(ACTTPCNT)          0453
*                                      FROM(UNSIGNED FIXED BINARY)TO(
*                                      CHARACTER)SET(IN81T1)PATTERN  */
*   IN81L=12;                       /* SET LENGTH                    */
         MVC   IN81L(2),@CH00032                                   0454
*   CALL BLSUMPK1(ZZ2,IN81);        /* EDIT SEGMENT                  */
         ST    R9,@AL00001                                         0455
         LA    @14,IN81                                            0455
         ST    @14,@AL00001+4                                      0455
         L     @08,ZZ2BVTP(,R9)                                    0455
         L     @15,BVTMPK1P(,@08)                                  0455
         LA    @01,@AL00001                                        0455
         BALR  @14,@15                                             0455
*   OLDN=2;                         /* 2 SEGMENTS                    */
         MVC   OLDN(4),@CF00068                                    0456
*   OLDP(1)=ADDR(M036);             /* BASE MSG                      */
         LA    @14,M036                                            0457
         ST    @14,OLDP                                            0457
*   OLDP(2)=ADDR(IN81);             /* INSERT                        */
         LA    @14,IN81                                            0458
         ST    @14,OLDP+4                                          0458
*   IN81O=ADDR(M036T2)-ADDR(M036T); /* OFFSET                        */
         MVC   IN81O(2),@CH02655                                   0459
*   CALL BLSUPUTO(ZZ2,OLD);         /* PUT OUT MESSAGE               */
         ST    R9,@AL00001                                         0460
         LA    @14,OLD                                             0460
         ST    @14,@AL00001+4                                      0460
         L     @08,ZZ2BVTP(,R9)                                    0460
         L     @15,BVTPUTOP(,@08)                                  0460
         LA    @01,@AL00001                                        0460
         BALR  @14,@15                                             0460
*                                                                  0461
*   /*****************************************************************/
*   /*                                                               */
*   /* INSPECT LCHS                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0461
*   UNITCTR=1;                      /* NUMBER OF ENTRIES             */
         LA    UNITCTR,1                                           0461
*   NUMUNITS=0;                     /* NUMBER OF ENTRIES             */
         SLR   NUMUNITS,NUMUNITS                                   0462
*   CALL ACCESS(0,THECVTPT,LENGTH(CVTIXAVL)+ADDR(CVTIXAVL)-ADDR(CVT),
*       'CVT     ');                                               0463
         LA    @14,@CF00048                                        0463
         ST    @14,@AL00001                                        0463
         LA    @14,THECVTPT                                        0463
         ST    @14,@AL00001+4                                      0463
         LA    @14,CVTIXAVL(,DATAPTR)                              0463
         AL    @14,@CF00040                                        0463
         SLR   @14,DATAPTR                                         0463
         ST    @14,@AFTEMPS                                        0463
         LA    @14,@AFTEMPS                                        0463
         ST    @14,@AL00001+8                                      0463
         LA    @14,@CC02604                                        0463
         ST    @14,@AL00001+12                                     0463
         LA    @01,@AL00001                                        0463
         BAL   @14,ACCESS                                          0463
*   IF RF^=0 THEN                                                  0464
         LTR   RF,RF                                               0464
         BNZ   @RT00464                                            0464
*     GO TO EXITRLSA;               /* EXIT                          */
*   CALL ACCESS(0,CVTIXAVL,LENGTH(IOCOMEX)+ADDR(IOCOMEX)-ADDR(IOCOM),
*       'IOCOMM  ');                                               0466
         LA    @14,@CF00048                                        0466
         ST    @14,@AL00001                                        0466
         LA    @14,CVTIXAVL(,DATAPTR)                              0466
         ST    @14,@AL00001+4                                      0466
         LA    @14,IOCOMEX(,DATAPTR)                               0466
         AL    @14,@CF00040                                        0466
         SLR   @14,DATAPTR                                         0466
         ST    @14,@AFTEMPS                                        0466
         LA    @14,@AFTEMPS                                        0466
         ST    @14,@AL00001+8                                      0466
         LA    @14,@CC02623                                        0466
         ST    @14,@AL00001+12                                     0466
         LA    @01,@AL00001                                        0466
         BAL   @14,ACCESS                                          0466
*   IF RF^=0 THEN                                                  0467
         LTR   RF,RF                                               0467
         BNZ   @RT00467                                            0467
*     GO TO EXITRLSA;               /* EXIT                          */
*   CALL ACCESS(0,IOCOMEX,LENGTH(IOXLCHCT)+ADDR(IOXLCHCT)-ADDR(IOCX),
*       'IOCOMEX ');                /* GET IOCOMEX                   */
         LA    @14,@CF00048                                        0469
         ST    @14,@AL00001                                        0469
         LA    @14,IOCOMEX(,DATAPTR)                               0469
         ST    @14,@AL00001+4                                      0469
         LA    @14,IOXLCHCT(,DATAPTR)                              0469
         AL    @14,@CF00043                                        0469
         SLR   @14,DATAPTR                                         0469
         ST    @14,@AFTEMPS                                        0469
         LA    @14,@AFTEMPS                                        0469
         ST    @14,@AL00001+8                                      0469
         LA    @14,@CC02624                                        0469
         ST    @14,@AL00001+12                                     0469
         LA    @01,@AL00001                                        0469
         BAL   @14,ACCESS                                          0469
*   IF RF^=0 THEN                                                  0470
         LTR   RF,RF                                               0470
         BNZ   @RT00470                                            0470
*     GO TO EXITRLSA;               /* EXIT                          */
*   TOTLCHS=IOXLCHCT;               /* SAVE TOTAL NUMBER OF LCHS     */
         SLR   TOTLCHS,TOTLCHS                                     0472
         IC    TOTLCHS,IOXLCHCT(,DATAPTR)                          0472
*   CALL ACCESS(0,THECVTPT,LENGTH(CVTILCH)+ADDR(CVTILCH)-ADDR(CVT),
*       'CVT     ');                                               0473
         LA    @14,@CF00048                                        0473
         ST    @14,@AL00001                                        0473
         LA    @14,THECVTPT                                        0473
         ST    @14,@AL00001+4                                      0473
         LA    @14,CVTILCH(,DATAPTR)                               0473
         AL    @14,@CF00040                                        0473
         SLR   @14,DATAPTR                                         0473
         ST    @14,@AFTEMPS                                        0473
         LA    @14,@AFTEMPS                                        0473
         ST    @14,@AL00001+8                                      0473
         LA    @14,@CC02604                                        0473
         ST    @14,@AL00001+12                                     0473
         LA    @01,@AL00001                                        0473
         BAL   @14,ACCESS                                          0473
*   IF RF^=0 THEN                                                  0474
         LTR   RF,RF                                               0474
         BNZ   @RT00474                                            0474
*     GO TO EXITRLSA;               /* EXIT                          */
*   LCHADS=CVTILCH;                 /* SAVE ADDRESS OF LCHS          */
         L     @14,CVTILCH(,DATAPTR)                               0476
         ST    @14,LCHADS                                          0476
*   SOMEIO='0'B;                    /* TURN OFF I/O QUEUED INDICATOR */
*                                                                  0477
         NI    SOMEIO,B'11011111'                                  0477
*   /*****************************************************************/
*   /*                                                               */
*   /* OBTAIN EACH LCH AND INSPECT IOQS IF ANY I/O QUEUED, DISPLAYING*/
*   /* THE UNIT FOR WHICH I/O IS QUEUED                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0478
*   DO I=1 TO TOTLCHS;                                             0478
         LA    I,1                                                 0478
         B     @DE00478                                            0478
@DL00478 DS    0H                                                  0479
*     CALL ACCESS(0,LCHADS,LENGTH(LCH),'LCH     ');/* GET LCH        */
         MVC   @AL00001(16),@AL00479                               0479
         LA    @14,LCHADS                                          0479
         ST    @14,@AL00001+4                                      0479
         LA    @01,@AL00001                                        0479
         BAL   @14,ACCESS                                          0479
*     IF RF=0&LCHFSTF>0 THEN                                       0480
         SLR   @14,@14                                             0480
         CR    RF,@14                                              0480
         BNE   @RF00480                                            0480
         C     @14,LCHFSTF(,DATAPTR)                               0480
         BNL   @RF00480                                            0480
*       DO;                         /* I/O QUEUED                    */
*         SOMEIO='1'B;              /* INDICATE SOME I/O QUEUED IN 0482
*                                      LCHS                          */
         OI    SOMEIO,B'00100000'                                  0482
*         LASTIOQ=LCHLST;           /* FIRST AND LAST IOQS           */
         L     @14,LCHLST(,DATAPTR)                                0483
         ST    @14,LASTIOQ                                         0483
*         CURIOQ=LCHFST;            /* GET FIRST IOQ ADDRESS         */
         L     @14,LCHFST(,DATAPTR)                                0484
         ST    @14,CURIOQ                                          0484
*         DO WHILE CURIOQ>0;        /* GO DOWN IOQ CHAIN FOR THIS LCH*/
         B     @DE00485                                            0485
@DL00485 DS    0H                                                  0486
*           CALL ACCESS(0,CURIOQ,LENGTH(IOQ),'IOQ     ');/* GET IOQ  */
         MVC   @AL00001(16),@AL00486                               0486
         LA    @14,CURIOQ                                          0486
         ST    @14,@AL00001+4                                      0486
         LA    @01,@AL00001                                        0486
         BAL   @14,ACCESS                                          0486
*           IF RF=0 THEN            /* OBTAINED SUCCESSFULLY         */
         SLR   @14,@14                                             0487
         CR    RF,@14                                              0487
         BNE   @RF00487                                            0487
*             DO;                                                  0488
*               SAVEQLNK=IOQLNK;    /* SAVE LINK PTR                 */
         L     SAVEQLNK,IOQLNK(,DATAPTR)                           0489
*               IF CURIOQ=LASTIOQ THEN                             0490
         CLC   CURIOQ(4),LASTIOQ                                   0490
         BNE   @RF00490                                            0490
*                 DO;               /* IF THIS IS LAST IOQ AS      0491
*                                      INDICATED BY LCH POINTERS,  0491
*                                      ENSURE WE WILL NOT GO DOWN AN
*                                      INVALID IOQ CHAIN, ONE THAT IS
*                                      NOT PROPERLY CORKED           */
*                   SAVEQLNK=0;     /* SET END OF QUEUE INDICATOR    */
         SLR   SAVEQLNK,SAVEQLNK                                   0492
*                   IF FIOQLNK>=0 THEN                             0493
         C     @14,FIOQLNK(,DATAPTR)                               0493
         BH    @RF00493                                            0493
*                     DO;           /* ERRONEOUS IOQ LINKAGE         */
*                       CALL BLSUPUTV(ZZ2,M083);/* PUT OUT ERROR   0495
*                                      MESSAGE                       */
         ST    R9,@AL00001                                         0495
         LA    @14,M083                                            0495
         ST    @14,@AL00001+4                                      0495
         L     @06,ZZ2BVTP(,R9)                                    0495
         L     @15,BVTPUTVP(,@06)                                  0495
         LA    @01,@AL00001                                        0495
         BALR  @14,@15                                             0495
*                     END;                                         0496
*                 END;                                             0497
@RF00493 DS    0H                                                  0498
*               CALL ACCESS(0,IOQIOSB,LENGTH(IOSB),'IOSB    ');/* GET
*                                      IOSB                          */
@RF00490 MVC   @AL00001(16),@AL00498                               0498
         LA    @14,IOQIOSB(,DATAPTR)                               0498
         ST    @14,@AL00001+4                                      0498
         LA    @01,@AL00001                                        0498
         BAL   @14,ACCESS                                          0498
*               IF RF=0 THEN                                       0499
         LTR   RF,RF                                               0499
         BNZ   @RF00499                                            0499
*                 DO;                                              0500
*                   CALL ACCESS(0,IOSUCB,LENGTH(UCBNAME)+ADDR(UCBNAME)-
*                       ADDR(UCBOB),'UCB     ');/* GET PART OF UCB   */
         LA    @14,@CF00048                                        0501
         ST    @14,@AL00001                                        0501
         LA    @14,IOSUCB(,DATAPTR)                                0501
         ST    @14,@AL00001+4                                      0501
         LA    @14,UCBNAME(,DATAPTR)                               0501
         AL    @14,@CF00153                                        0501
         SLR   @14,DATAPTR                                         0501
         ST    @14,@AFTEMPS                                        0501
         LA    @14,@AFTEMPS                                        0501
         ST    @14,@AL00001+8                                      0501
         LA    @14,@CC02628                                        0501
         ST    @14,@AL00001+12                                     0501
         LA    @01,@AL00001                                        0501
         BAL   @14,ACCESS                                          0501
*                   IF RF=0 THEN                                   0502
         LTR   RF,RF                                               0502
         BNZ   @RF00502                                            0502
*                     DO;                                          0503
*                       UNITCTR=1;  /* INIT COUNTER                  */
         LA    UNITCTR,1                                           0504
*                       SUC='0'B;   /* INIT INDICATOR                */
         NI    SUC,B'11101111'                                     0505
*                       DO WHILE(UNITCTR<=NUMUNITS);/* SCAN UNITABLE */
         B     @DE00506                                            0506
@DL00506 DS    0H                                                  0507
*                         IF UNITABLE(UNITCTR)=UCBNAME THEN        0507
         LR    @14,UNITCTR                                         0507
         MH    @14,@CH00153                                        0507
         LA    @06,UNITABLE-3(@14)                                 0507
         CLC   0(3,@06),UCBNAME(DATAPTR)                           0507
         BNE   @RF00507                                            0507
*                           DO;                                    0508
*                             UNITCNT(UNITCTR)=UNITCNT(UNITCTR)+1;/*
*                                      INCREMENT COUNT               */
         LR    @14,UNITCTR                                         0509
         ALR   @14,@14                                             0509
         LA    @06,1                                               0509
         AH    @06,UNITCNT-2(@14)                                  0509
         STH   @06,UNITCNT-2(@14)                                  0509
*                             SUC='1'B;/* INDICATE FOUND SLOT        */
         OI    SUC,B'00010000'                                     0510
*                           END;                                   0511
*                         UNITCTR=UNITCTR+1;/* INC COUNTER           */
@RF00507 AL    UNITCTR,@CF00043                                    0512
*                       END;                                       0513
@DE00506 CR    UNITCTR,NUMUNITS                                    0513
         BNH   @DL00506                                            0513
*                       IF SUC='0'B THEN                           0514
         TM    SUC,B'00010000'                                     0514
         BNZ   @RF00514                                            0514
*                         DO;       /* NEW UNIT NAME                 */
*                           NUMUNITS=NUMUNITS+1;/* INCREMENT NUMBER
*                                      OF UNITS WITH REQUESTS        */
         LA    @14,1                                               0516
         ALR   NUMUNITS,@14                                        0516
*                           UNITCNT(NUMUNITS)=1;/* FIRST REQUEST     */
         LR    @06,NUMUNITS                                        0517
         ALR   @06,@06                                             0517
         STH   @14,UNITCNT-2(@06)                                  0517
*                           UNITABLE(NUMUNITS)=UCBNAME;/* UNIT NAME  */
         LR    @14,NUMUNITS                                        0518
         MH    @14,@CH00153                                        0518
         LA    @06,UNITABLE-3(@14)                                 0518
         MVC   0(3,@06),UCBNAME(DATAPTR)                           0518
*                         END;                                     0519
*                     END;                                         0520
*                 END;                                             0521
*               ELSE                                               0522
*                 SAVEQLNK=0;       /* ELSE INDICATE EXIT            */
         B     @RC00499                                            0522
@RF00499 SLR   SAVEQLNK,SAVEQLNK                                   0522
*             END;                                                 0523
*           ELSE                                                   0524
*             SAVEQLNK=0;           /* IF BAD IOQ INDICATE EXIT FROM
*                                      LOOP                          */
         B     @RC00487                                            0524
@RF00487 SLR   SAVEQLNK,SAVEQLNK                                   0524
*           CURIOQ=SAVEQLNK;        /* GET NEXT PTR OR EXIT          */
@RC00487 ST    SAVEQLNK,CURIOQ                                     0525
*         END;                                                     0526
@DE00485 L     @14,CURIOQ                                          0526
         LTR   @14,@14                                             0526
         BP    @DL00485                                            0526
*       END;                                                       0527
*     LCHADS=LCHADS+LENGTH(LCH);    /* INCREMENT LCH ADDRESS         */
@RF00480 LA    @14,32                                              0528
         AL    @14,LCHADS                                          0528
         ST    @14,LCHADS                                          0528
*   END;                                                           0529
         AL    I,@CF00043                                          0529
@DE00478 CR    I,TOTLCHS                                           0529
         BNH   @DL00478                                            0529
*   DO UNITCTR=1 TO NUMUNITS;       /* SCAN REQUEST TABLE            */
         LA    UNITCTR,1                                           0530
         B     @DE00530                                            0530
@DL00530 DS    0H                                                  0531
*     IN82T1='';                    /* BLANK INSERT                  */
         MVI   IN82T1,C' '                                         0531
         MVC   IN82T1+1(7),IN82T1                                  0531
*     DO;                           /* BLRCNVUC(UNITCNT(UNITCTR))  0532
*                                      FROM(UNSIGNED FIXED BINARY)TO(
*                                      CHARACTER)SET(IN81T1)PATTERN  */
*       CVD(UNITCNT(UNITCTR),PACKED);/* UNSIGNED BINARY=>PACKED    0533
*                                      DECIMAL                       */
         LR    @14,UNITCTR                                         0533
         ALR   @14,@14                                             0533
         LH    @14,UNITCNT-2(@14)                                  0533
         CVD   @14,PACKED                                          0533
*       ZONED='40404040402020202020202020202120'X;/* ED PATTERN      */
         MVC   ZONED(16),@CB02618                                  0534
*       ED(ZONED(5:16),PACKED(17:64));/* PACKED DECIMAL=>EBCDIC      */
         ED    ZONED+4(12),PACKED+2                                0535
*       IN81T1=ZONED(17-LENGTH(IN81T1):16);/* EBCDIC RESULT          */
         MVC   IN81T1(8),ZONED+8                                   0536
*     END;                          /* BLRCNVUC(UNITCNT(UNITCTR))  0537
*                                      FROM(UNSIGNED FIXED BINARY)TO(
*                                      CHARACTER)SET(IN81T1)PATTERN  */
*     IN82T1(1:3)=UNITABLE(UNITCTR);/* INSERT UNIT ADDRESS           */
         LA    @14,3                                               0538
         LR    @01,UNITCTR                                         0538
         MR    @00,@14                                             0538
         LA    @08,UNITABLE-3(@01)                                 0538
         MVC   IN82T1(3),0(@08)                                    0538
*     IN81O=ADDR(M037T2)-ADDR(M037T);/* SET INSERT OFFSET            */
         MVC   IN81O(2),@CH02655                                   0539
*     IN82O=ADDR(M037T3)-ADDR(M037T);/* SET INSERT OFFSET            */
         MVC   IN82O(2),@CH02657                                   0540
*     OLDN=3;                       /* 2 MESSAGE SEGMENTS IND IN OLD */
         ST    @14,OLDN                                            0541
*     IN81L=12;                     /* INSERT LENGTH                 */
         MVC   IN81L(2),@CH00032                                   0542
*     IN82L=7;                      /* INSERT LENGTH                 */
         MVC   IN82L(2),@CH00474                                   0543
*     CALL BLSUMPK1(ZZ2,IN81);      /* EDIT SEGMENT                  */
         ST    R9,@AL00001                                         0544
         LA    @14,IN81                                            0544
         ST    @14,@AL00001+4                                      0544
         L     @08,ZZ2BVTP(,R9)                                    0544
         L     @15,BVTMPK1P(,@08)                                  0544
         LA    @01,@AL00001                                        0544
         BALR  @14,@15                                             0544
*     OLDP(1)=ADDR(M037);           /* ADDR OF 1ST SEG TO OLD        */
         LA    @14,M037                                            0545
         ST    @14,OLDP                                            0545
*     OLDP(2)=ADDR(IN81);           /* ADDR OF 2ND SEG TO OLD        */
         LA    @14,IN81                                            0546
         ST    @14,OLDP+4                                          0546
*     OLDP(3)=ADDR(IN82);           /* ADDR OF 2ND SEG TO OLD        */
         LA    @14,IN82                                            0547
         ST    @14,OLDP+8                                          0547
*     CALL BLSUPUTO(ZZ2,OLD);       /* PUT OUT MESSAGE               */
         ST    R9,@AL00001                                         0548
         LA    @14,OLD                                             0548
         ST    @14,@AL00001+4                                      0548
         L     @08,ZZ2BVTP(,R9)                                    0548
         L     @15,BVTPUTOP(,@08)                                  0548
         LA    @01,@AL00001                                        0548
         BALR  @14,@15                                             0548
*   END;                                                           0549
         AL    UNITCTR,@CF00043                                    0549
@DE00530 CR    UNITCTR,NUMUNITS                                    0549
         BNH   @DL00530                                            0549
*   IF SOMEIO='0'B THEN                                            0550
         TM    SOMEIO,B'00100000'                                  0550
         BNZ   @RF00550                                            0550
*     DO;                           /* NO I/O QUEUED                 */
*       CALL BLSUPUTV(ZZ2,M084);    /* PUT OUT MESSAGE               */
         ST    R9,@AL00001                                         0552
         LA    @14,M084                                            0552
         ST    @14,@AL00001+4                                      0552
         L     @08,ZZ2BVTP(,R9)                                    0552
         L     @15,BVTPUTVP(,@08)                                  0552
         LA    @01,@AL00001                                        0552
         BALR  @14,@15                                             0552
*     END;                                                         0553
*   RETC=0;                         /* SET SUCCESSFUL RETURN         */
@RF00550 SLR   @14,@14                                             0554
         ST    @14,RETC                                            0554
*   RF=0;                           /* SET SUCCESSFUL RETURN         */
         SLR   RF,RF                                               0555
*                                                                  0556
*   /*****************************************************************/
*   /*                                                               */
*   /* PROGRAM EXIT                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0556
*EXITRLSA:                                                         0556
*   RETC=MIN(MAX(RF,RETC),ZZZFLAGT);/* SET MAX RETURN CODE           */
EXITRLSA L     @14,RETC                                            0556
         CR    @14,RF                                              0556
         BNL   *+6
         LR    @14,RF                                              0556
         LA    @08,16                                              0556
         CR    @14,@08                                             0556
         BNH   *+6
         LR    @14,@08                                             0556
         ST    @14,RETC                                            0556
*   DO WHILE(PDAPTR^=0);            /* BLRRLSA MF(E,PD)              */
         B     @DE00557                                            0557
@DL00557 DS    0H                                                  0558
*     PDRPTR=PDAPTR;                                               0558
         L     PDRPTR,PDAPTR                                       0558
*     PDAPTR=PDXP;                                                 0559
         L     @14,PDXP-1(,PDRPTR)                                 0559
         LA    @14,0(,@14)                                         0559
         ST    @14,PDAPTR                                          0559
*     DO;                           /* FREEMAIN(R)                 0560
*                                      LV(PDL)SP(1)A(PDDSECT)        */
*       RESPECIFY                                                  0561
*        (GPR01F,                                                  0561
*         GPR00F) RESTRICTED;                                      0561
*       GPR00F=PDL;                 /* LENGTH REQUESTED              */
         L     GPR00F,PDL-1(,PDRPTR)                               0562
         ICM   GPR00F,8,@CB01768                                   0562
*       GPR01F=1;                   /* SP IN REG 1                   */
         LA    GPR01F,1                                            0563
*       GEN(SLL   GPR01F,24)                                       0564
*       NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;               0564
         SLL   GPR01F,24
*       GPR00F=GPR00F×GPR01F;       /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                       0565
*       GPR01F=ADDR(PDDSECT);       /* SET REGISTER ONE              */
         LR    GPR01F,PDRPTR                                       0566
*       SVC(10);                    /* R-FORM OF GETMAIN             */
         SVC   10                                                  0567
*       RESPECIFY                                                  0568
*        (GPR01F,                                                  0568
*         GPR00F) UNRESTRICTED;                                    0568
*     END;                          /* FREEMAIN(R)                 0569
*                                      LV(PDL)SP(1)A(PDDSECT)        */
*   END;                            /* BLRRLSA MF(E,PD)              */
@DE00557 L     @14,PDAPTR                                          0570
         LTR   @14,@14                                             0570
         BNZ   @DL00557                                            0570
*EXITNORL:                                                         0571
*   DO;                             /* FREEMAIN(R) LV(8192)SP(ZZZSPEX
*                                      C)A(DATABUFR)                 */
EXITNORL DS    0H                                                  0572
*     RESPECIFY                                                    0572
*      (GPR01F,                                                    0572
*       GPR00F) RESTRICTED;                                        0572
*     GPR00F=8192;                  /* LENGTH REQUESTED              */
         L     GPR00F,@CF02596                                     0573
*     GPR01F=ZZZSPEXC;              /* SP IN REG 1                   */
         LA    GPR01F,1                                            0574
*     GEN(SLL   GPR01F,24)                                         0575
*     NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;                 0575
         SLL   GPR01F,24
*     GPR00F=GPR00F×GPR01F;         /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                       0576
*     GPR01F=ADDR(DATABUFR);        /* SET REGISTER ONE              */
         LR    GPR01F,DATAPTR                                      0577
*     SVC(10);                      /* R-FORM OF GETMAIN             */
         SVC   10                                                  0578
*     RESPECIFY                                                    0579
*      (GPR01F,                                                    0579
*       GPR00F) UNRESTRICTED;                                      0579
*   END;                            /* FREEMAIN(R) LV(8192)SP(ZZZSPEX
*                                      C)A(DATABUFR)                 */
*   RETURN CODE(RETC);                                             0581
         L     @08,RETC                                            0581
         L     @13,4(,@13)                                         0581
         L     @00,@SIZDATD                                        0581
         LR    @01,@11                                             0581
         BLSUFRER R,LV=(0),A=(1)
         LR    @15,@08                                             0581
         L     @14,12(,@13)                                        0581
         LM    @00,@12,20(@13)                                     0581
         BR    @14                                                 0581
*                                                                  0582
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO OBTAIN DUMP INFORMATION                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0582
*ACCESS:                                                           0582
*   PROCEDURE(ACCASID,ACCADDR,ACCLNTH,ACCSYMN);                    0582
ACCESS   STM   @14,@12,@SA00002                                    0582
         MVC   @PC00002(16),0(@01)                                 0582
*   DCL                                                            0583
*     ACCSYMN CHARACTER(8);         /* SYMBOL NAME                   */
*   ESAU(1:LENGTH(ESCO))=ESCO;      /* INITIALIZE RECORD             */
         MVC   ESAU(182),ESCO                                      0584
*   ESAUAS2=ACCASID;                /* ASID                          */
         L     @14,@PC00002                                        0585
         L     @14,ACCASID(,@14)                                   0585
         ST    @14,ESAUAS2                                         0585
*   IF ESAUAS2=0 THEN                                              0586
         LTR   @14,@14                                             0586
         BNZ   @RF00586                                            0586
*     ESAUAS2=ZZ6DQ2;               /* CHANGE 0 TO ACTIVE ASID       */
         L     @14,ZZ2AZZ6P(,R9)                                   0587
         L     @14,ZZ6DQ2(,@14)                                    0587
         ST    @14,ESAUAS2                                         0587
*   ESAULAD=ACCADDR;                /* ADDRESS                       */
@RF00586 L     @14,@PC00002+4                                      0588
         L     @14,ACCADDR(,@14)                                   0588
         ST    @14,ESAULAD                                         0588
*   ESAUDLE=ACCLNTH;                /* LENGTH                        */
         L     @14,@PC00002+8                                      0589
         L     @14,ACCLNTH(,@14)                                   0589
         ST    @14,ESAUDLE                                         0589
*   ESAUAST=ZZZASTCV;               /* VIRTUAL REQUEST               */
         MVC   ESAUAST(2),@CC00075                                 0590
*   ESAUAS1=ZZ6DQ1;                 /* ACTIVE CPU                    */
         L     @14,ZZ2AZZ6P(,R9)                                   0591
         L     @14,ZZ6DQ1(,@14)                                    0591
         ST    @14,ESAUAS1                                         0591
*   ESAUSYM(1:8)=ACCSYMN;           /* SYMBOL                        */
         L     @14,@PC00002+12                                     0592
         MVC   ESAUSYM(8),ACCSYMN(@14)                             0592
*   CALL BLSRACC(ZZ2,ESAU,DATABUFR);/* CALL ACCESS SERVICE RTN       */
         ST    R9,@AL00001                                         0593
         LA    @14,ESAU                                            0593
         ST    @14,@AL00001+4                                      0593
         ST    DATAPTR,@AL00001+8                                  0593
         L     @08,ZZ2RVTP(,R9)                                    0593
         L     @15,RVTRACCP(,@08)                                  0593
         LA    @01,@AL00001                                        0593
         BALR  @14,@15                                             0593
*   IF RF^=0 THEN                                                  0594
         LTR   RF,RF                                               0594
         BZ    @RF00594                                            0594
*     RETURN CODE(4);               /* FAILED                        */
         LA    @15,4                                               0595
         L     @14,@SA00002                                        0595
         LM    @00,@12,@SA00002+8                                  0595
         BR    @14                                                 0595
*   ELSE                                                           0596
*     RETURN CODE(0);               /* SUCCESS RETURN TO CALLER      */
@RF00594 SLR   @15,@15                                             0596
         L     @14,@SA00002                                        0596
         LM    @00,@12,@SA00002+8                                  0596
         BR    @14                                                 0596
*   END ACCESS;                                                    0597
*                                                                  0598
*/*BLSRPEND--DEBUGGING MODULE                                        */
*/*BLSUPEND--MVS IPCS MODULE                                         */
*                                                                  0598
*   DECLARE                         /* DATA FOR AHB MACROS           */
*     PTRBIT BIT(32) BOUNDARY(WORD),/* DATA CONVERSION WORK AREA FOR
*                                      POINTER DATA                  */
*     PTRPTR POINTER DEFINED(PTRBIT),/* DATA CONVERSION WORK AREA FOR
*                                      POINTER DATA                  */
*     PACKED BIT(64) BOUNDARY(DWORD),/* DATA CONVERSION WORK AREA    */
*     ZONED CHARACTER(16) BOUNDARY(DWORD);/* DATA CONVERSION WORK  0598
*                                      AREA                          */
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                     0599
*     GPR01F FIXED(31) REG(1),                                     0599
*     GPR15F FIXED(31) REG(15);                                    0599
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0600
*     I031F FIXED(31) BASED,                                       0600
*     I031P PTR(31) BASED,                                         0600
*     I015F FIXED(15) BASED,                                       0600
*     I015P PTR(15) BASED,                                         0600
*     I008P PTR(8) BASED,                                          0600
*     I001C CHAR(1) BASED;                                         0600
*   GENERATE NODEFS NOREFS DATA;                                   0601
*   END BLSRIOSK                    /* BLRPEND(BLSRIOSK)             */
*                                                                  0602
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (BLSRZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLSUZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLRFULL )                                       */
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */
*/*%INCLUDE SYSLIB  (IKJPSCB )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJUPT  )                                       */
*/*%INCLUDE SYSLIB  (BLSUSERV)                                       */
*/*%INCLUDE SYSLIB  (BLRSERV )                                       */
*/*%INCLUDE SYSLIB  (BLRSERVD)                                       */
*/*%INCLUDE SYSLIB  (BLSRSERV)                                       */
*/*%INCLUDE SYSLIB  (IECDIOQ )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IECDIOCM)                                       */
*/*%INCLUDE SYSLIB  (IECDIOCX)                                       */
*/*%INCLUDE SYSLIB  (IECDIOSB)                                       */
*/*%INCLUDE SYSLIB  (IECDLCH )                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*                                                                  0602
*       ;                                                          0602
@EL00001 L     @13,4(,@13)                                         0602
@EF00001 L     @00,@SIZDATD                                        0602
         LR    @01,@11                                             0602
         BLSUFRER R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0602
         BR    @14                                                 0602
@DATA    DS    0H
@CH00213 DC    H'6'
@CH00474 DC    H'7'
@CH02655 DC    H'9'
@CH02654 DC    H'33'
@CH00420 DC    H'38'
@CH02657 DC    H'41'
@CH02481 DC    AL2(65535)
         DS    0F
@AL00326 DC    A(@CF00048)             LIST WITH   4 ARGUMENT(S)
         DS    F
         DC    A(@CF00091)
         DC    A(@CC02605)
@AL00479 DC    A(@CF00048)             LIST WITH   4 ARGUMENT(S)
         DS    F
         DC    A(@CF00062)
         DC    A(@CC02625)
@AL00486 DC    A(@CF00048)             LIST WITH   4 ARGUMENT(S)
         DS    F
         DC    A(@CF00032)
         DC    A(@CC02626)
@AL00498 DC    A(@CF00048)             LIST WITH   4 ARGUMENT(S)
         DS    F
         DC    A(@CF02656)
         DC    A(@CC02627)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00002 DS    15F
@PC00002 DS    4F
@AL00001 DS    4A
@AFTEMPS DS    1F
BLSRIOSK CSECT
         DS    0F
@CF00048 DC    F'0'
@CF00043 DC    F'1'
@CH00043 EQU   @CF00043+2
@CF00068 DC    F'2'
@CH00068 EQU   @CF00068+2
@CF00153 DC    F'3'
@CH00153 EQU   @CF00153+2
@CF00040 DC    F'4'
@CF00051 DC    F'8'
@CF00032 DC    F'12'
@CH00032 EQU   @CF00032+2
@CF00062 DC    F'32'
@CH00062 EQU   @CF00062+2
@CF02656 DC    F'108'
@CF00091 DC    F'4096'
@CF00449 DC    F'4104'
@CF02596 DC    F'8192'
@CF02661 DC    F'-4104'
@CF02650 DC    F'-4056'
@CF02660 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
PDAPTR   DS    A
RETC     DS    F
THECVTPT DS    F
CURIOQ   DS    F
LASTIOQ  DS    F
LCHADS   DS    F
ACTCNT   DS    F
ACTTPCNT DS    F
LUCBADR  DS    H
         DS    CL6
ESAU     DS    CL694
         ORG   ESAU
ESAURID  DS    CL2
@NM00093 DS    BL6
@NM00094 DS    CL8
@NM00095 DS    BL8
ESAURDX  DS    FL4
ESAUSYM  DS    CL31
ESAUELK  DS    0C
ESAURV1  DS    CL1
ESAUAS   DS    CL16
         ORG   ESAUAS
ESAUAS0  DS    0C
ESAUAST  DS    CL2
@NM00096 DS    BL2
ESAUAS1  DS    FL4
ESAUAS2  DS    FL4
@NM00097 DS    BL4
ESAUAS9  DS    0C
         ORG   ESAU+76
ESAULAD  DS    AL4
ESAUD    DS    CL60
         ORG   ESAUD
ESAUD00  DS    0C
ESAUDOF  DS    FL4
ESAUDLE  DS    FL4
ESAUDOB  DS    FL1
ESAUDLB  DS    FL1
ESAUDT   DS    CL34
         ORG   ESAUDT
ESAUDT0  DS    0C
ESAUDTY  DS    CL1
@NM00098 DS    BL1
ESAUDTD  DS    CL31
ESAUDTE  DS    CL1
ESAUDT9  DS    0C
         ORG   ESAUD+44
ESAUDIM  DS    FL4
ESAUDIL  DS    FL4
ESAUDF   DS    BL4
         ORG   ESAUDF
ESAUDFA  DS    BL1
@NM00099 EQU   ESAUDF+0
         ORG   ESAUD+56
@NM00100 DS    BL4
ESAUD99  DS    0C
         ORG   ESAU+140
ESAUMAD  DS    AL4
@NM00101 DS    BL16
ESAUKEY  DS    BL1
ESAUF    DS    BL3
         ORG   ESAUF
ESAUFS   DS    BL1
         ORG   ESAUFS
ESAUFSC  DS    BL1
ESAUFS2  EQU   ESAUFS+0
ESAUFSM  EQU   ESAUFS+0
ESAUFSA  EQU   ESAUFS+0
ESAUFSP  EQU   ESAUFS+0
ESAUFSR  EQU   ESAUFS+0
ESAUFSX  EQU   ESAUFS+0
ESAUFSS  EQU   ESAUFS+0
         ORG   ESAUF+1
ESAUFC   DS    BL1
         ORG   ESAUFC
ESAUFCD  DS    BL1
@NM00102 EQU   ESAUFC+0
         ORG   ESAUF+2
@NM00103 DS    BL1
         ORG   ESAU+164
ESAUABS  DS    FL4
@NM00104 DS    BL12
ESAUR    DS    CL514
         ORG   ESAUR
ESAURL   DS    FL2
ESAURT   DS    CL512
         ORG   ESAURT
ESAURT1  DS    CL512
         ORG   ESAU+694
ESAU999  DS    0C
         ORG   ESAU+694
FLAGS    DS    CL1
         ORG   FLAGS
OUT      DS    BL1
SKP      EQU   FLAGS+0
SOMEIO   EQU   FLAGS+0
SUC      EQU   FLAGS+0
EBOK     EQU   FLAGS+0
@NM00119 EQU   FLAGS+0
         ORG   FLAGS+1
         DS    CL1
OLD      DS    CL20
         ORG   OLD
OLDN     DS    FL4
OLDP     DS    4A
         ORG   OLD+20
IN81     DS    CL12
         ORG   IN81
IN81L    DS    FL2
IN81O    DS    FL2
IN81T    DS    CL8
         ORG   IN81T
IN81T1   DS    CL8
         ORG   IN81+12
IN82     DS    CL12
         ORG   IN82
IN82L    DS    FL2
IN82O    DS    FL2
IN82T    DS    CL8
         ORG   IN82T
IN82T1   DS    CL8
         ORG   IN82+12
IN83     DS    CL12
         ORG   IN83
IN83L    DS    FL2
IN83O    DS    FL2
IN83T    DS    CL8
         ORG   IN83T
IN83T1   DS    CL8
         ORG   IN83+12
PTRBIT   DS    BL4
         DS    CL4
PACKED   DS    BL8
ZONED    DS    CL16
UNITABLE DS    100CL3
UNITCNT  DS    100H
BLSRIOSK CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
PCPTR    DC    AL4(PC)
@CC02604 DC    C'CVT     '
@CC02605 DC    C'UCBLOKUP'
@CC02623 DC    C'IOCOMM  '
@CC02624 DC    C'IOCOMEX '
@CC02625 DC    C'LCH     '
@CC02626 DC    C'IOQ     '
@CC02627 DC    C'IOSB    '
@CC02628 DC    C'UCB     '
@CC02606 DC    C'UCBS'
@CC02409 EQU   @CC02604
@CC00075 EQU   @CC02604
@CB02618 DC    X'40404040402020202020202020202120'
@CB01768 DC    X'00'
         DS    CL7
ESCO     DS    CL182
         ORG   ESCO
ESCORID  DC    CL2'ES'
@NM00105 DC    X'000000000000'
@NM00106 DC    CL8' '
@NM00107 DC    X'00'
         DC    XL7'0'
ESCORDX  DC    A(0)
ESCOSYM  DC    CL31' '
ESCOELK  DS    0C
ESCORV1  DC    CL1' '
ESCOAS   DS    CL16
         ORG   ESCOAS
ESCOAS0  DS    0C
ESCOAST  DC    CL2'  '
@NM00108 DC    X'0000'
ESCOAS1  DC    A(0)
ESCOAS2  DC    A(0)
@NM00109 DC    X'00'
         DC    XL3'0'
ESCOAS9  DS    0C
         ORG   ESCO+76
ESCOLAD  DC    A(0)
ESCOD    DS    CL60
         ORG   ESCOD
ESCOD00  DS    0C
ESCODOF  DC    F'0'
ESCODLE  DC    A(4)
ESCODOB  DC    AL1(0)
ESCODLB  DC    AL1(0)
ESCODT   DS    CL34
         ORG   ESCODT
ESCODT0  DS    0C
ESCODTY  DC    CL1'U'
@NM00110 DC    X'00'
ESCODTD  DC    CL31'                               '
ESCODTE  DC    CL1' '
ESCODT9  DS    0C
         ORG   ESCOD+44
ESCODIM  DC    A(0)
ESCODIL  DC    F'0'
ESCODF   DC    X'00000000'
         ORG   ESCODF
ESCODFA  DS    BL1
@NM00111 EQU   ESCODF+0
         ORG   ESCOD+56
@NM00112 DC    X'00'
         DC    XL3'0'
ESCOD99  DS    0C
         ORG   ESCO+140
ESCOMAD  DC    A(0)
@NM00113 DC    X'00'
         DC    XL15'0'
ESCOKEY  DS    BL1
ESCOF    DC    X'00'
         DC    XL2'0'
         ORG   ESCOF
ESCOFS   DS    BL1
         ORG   ESCOFS
ESCOFSC  DS    BL1
ESCOFS2  EQU   ESCOFS+0
ESCOFSM  EQU   ESCOFS+0
ESCOFSA  EQU   ESCOFS+0
ESCOFSP  EQU   ESCOFS+0
ESCOFSR  EQU   ESCOFS+0
ESCOFSX  EQU   ESCOFS+0
ESCOFSS  EQU   ESCOFS+0
         ORG   ESCOF+1
ESCOFC   DS    BL1
         ORG   ESCOFC
ESCOFCD  DS    BL1
@NM00114 EQU   ESCOFC+0
         ORG   ESCOF+2
@NM00115 DS    BL1
         ORG   ESCO+164
ESCOABS  DC    A(0)
@NM00116 DC    X'00'
         DC    XL11'0'
ESCOR    DS    CL2
         ORG   ESCOR
ESCORL   DC    AL2(0)
ESCORT   DS    0C
         ORG   ESCORT
ESCORT1  DS    0C
         ORG   ESCO+182
ESCO999  DS    0C
         ORG   ESCO+182
DTCVT    DS    CL34
         ORG   DTCVT
DTCVT0   DS    0C
DTCVTY   DC    CL1'M'
@NM00117 DC    X'00'
DTCVTD   DC    CL31'CVT'
DTCVTE   DC    CL1' '
DTCVT9   DS    0C
         ORG   DTCVT+34
M032     DS    CL67
         ORG   M032
M032L    DC    AL2(67)
M032O    DC    AL2(0)
M032T    DS    CL63
         ORG   M032T
M032T1   DC    CL49'BLS18032I IOSCHECK PROCESSING MAY BE INVALID FOR '
M032T2   DC    CL14'A VIRTUAL DUMP'
         ORG   M032+67
         DS    CL1
M033     DS    CL43
         ORG   M033
M033L    DC    AL2(43)
M033O    DC    AL2(0)
M033T    DS    CL39
         ORG   M033T
M033T1   DC    CL32'BLS18033I UCBFLC FIELD FOR UNIT '
M033T2   DC    CL6' IS X'''
M033T3   DC    CL1''''
         ORG   M033+43
         DS    CL1
M034     DS    CL37
         ORG   M034
M034L    DC    AL2(37)
M034O    DC    AL2(0)
M034T    DS    CL33
         ORG   M034T
M034T1   DC    CL33'BLS18034I INVALID UCB AT ADDRESS '
M034T2   DS    0C
         ORG   M034+37
         DS    CL1
M035     DS    CL37
         ORG   M035
M035L    DC    AL2(37)
M035O    DC    AL2(0)
M035T    DS    CL33
         ORG   M035T
M035T1   DC    CL9'BLS18035I'
M035T2   DC    CL24' DEVICES WITH ACTIVE I/O'
         ORG   M035+37
         DS    CL1
M036     DS    CL37
         ORG   M036
M036L    DC    AL2(37)
M036O    DC    AL2(0)
M036T    DS    CL33
         ORG   M036T
M036T1   DC    CL9'BLS18036I'
M036T2   DC    CL24' OF THESE ARE TP DEVICES'
         ORG   M036+37
         DS    CL1
M037     DS    CL45
         ORG   M037
M037L    DC    AL2(45)
M037O    DC    AL2(0)
M037T    DS    CL41
         ORG   M037T
M037T1   DC    CL9'BLS18037I'
M037T2   DC    CL32' I/O REQUEST(S) QUEUED FOR UNIT '
M037T3   DS    0C
         ORG   M037+45
         DS    CL1
M083     DS    CL85
         ORG   M083
M083L    DC    AL2(85)
M083O    DC    AL2(0)
M083T    DS    CL81
         ORG   M083T
M083T1   DC    CL53'BLS18083I LCHLST FIELD INDICATES THIS IS LAST IOQ BC
               UT'
M083T2   DC    CL28' IOQLNK IS GREATER THAN ZERO'
         ORG   M083+85
         DS    CL1
M084     DS    CL40
         ORG   M084
M084L    DC    AL2(40)
M084O    DC    AL2(0)
M084T    DS    CL36
         ORG   M084T
M084T1   DC    CL36'BLS18084I NO DEVICES WITH QUEUED I/O'
         ORG   M084+40
PXRO     DC    AL2(PXPRINT-PD)
         DC    AL2(PXTERM-PD)
         DC    AL2(PXDFLG-PD)
         DC    AL2(PXDFLV-PD)
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSRIOSK CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSRIOSK+19)/20+7)/8)CL8'BLSRIOSK'
@DATD    DSECT
         DS    0H
@DATD    DSECT
         SPACE 2
***********************************************************************
* IKJPARM--BEGIN MACROS SPECIFYING COMMAND SYNTAX                     *
***********************************************************************
         SPACE
BLSRIOSK CSECT
PC       IKJPARM DSECT=PD
@DATD    DSECT
BLSRIOSK CSECT
PXPRINT  IKJKEYWD
@DATD    DSECT
BLSRIOSK CSECT
         IKJNAME 'PRINT'
@DATD    DSECT
BLSRIOSK CSECT
         IKJNAME 'NOPRINT'
@DATD    DSECT
BLSRIOSK CSECT
PXTERM   IKJKEYWD
@DATD    DSECT
BLSRIOSK CSECT
         IKJNAME 'TERMINAL'
@DATD    DSECT
BLSRIOSK CSECT
         IKJNAME 'NOTERMINAL'
@DATD    DSECT
BLSRIOSK CSECT
PXDFLG   IKJKEYWD
@DATD    DSECT
BLSRIOSK CSECT
         IKJNAME 'FLAG',SUBFLD=PXSUBFM
@DATD    DSECT
BLSRIOSK CSECT
PXTEST   IKJKEYWD
@DATD    DSECT
BLSRIOSK CSECT
         IKJNAME 'TEST'
@DATD    DSECT
BLSRIOSK CSECT
         IKJNAME 'NOTEST'
@DATD    DSECT
BLSRIOSK CSECT
         SPACE
PXSUBFM  IKJSUBF
@DATD    DSECT
BLSRIOSK CSECT
PXDFLV   IKJKEYWD
@DATD    DSECT
BLSRIOSK CSECT
         IKJNAME 'INFORMATIONAL'
@DATD    DSECT
BLSRIOSK CSECT
         IKJNAME 'WARNING'
@DATD    DSECT
BLSRIOSK CSECT
         IKJNAME 'ERROR'
@DATD    DSECT
BLSRIOSK CSECT
         IKJNAME 'SERIOUS',ALIAS=('SEVERE')
@DATD    DSECT
BLSRIOSK CSECT
         IKJNAME 'TERMINATING'
@DATD    DSECT
PD       DSECT
PDZZ     DS    0C
BLSRIOSK CSECT
         IKJENDP
         SPACE 2
***********************************************************************
* IKJENDP--END SYNTAX DESCRIPTION                                     *
***********************************************************************
         SPACE
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSRIOSK CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
TOTLCHS  EQU   @08
WORKAD   EQU   @08
J        EQU   @02
I        EQU   @03
TUCBFPT  EQU   @05
SAVEQLNK EQU   @05
LNTHUCBS EQU   @04
UNITCTR  EQU   @02
NUMUNITS EQU   @04
DATAPTR  EQU   @07
R9       EQU   @09
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
RB       EQU   @11
RD       EQU   @13
RE       EQU   @14
RF       EQU   @15
PDRPTR   EQU   @10
GPR01F   EQU   @01
GPR00F   EQU   @00
GPR15F   EQU   @15
RA       EQU   @10
RC       EQU   @12
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
ZZ1      EQU   0
ZZ1ATTN  EQU   ZZ1+360
ZZ1EVE   EQU   ZZ1ATTN+4
ZZ1F     EQU   ZZ1+368
ZZ1TRHEX EQU   ZZ1+568
ZZ1N     EQU   ZZ1+1116
ZZ2      EQU   0
ZZ2AMD   EQU   ZZ2
@NM00013 EQU   ZZ2AMD+7
ZZ2PRT   EQU   ZZ2+138
ZZ2PRTT  EQU   ZZ2PRT+4
ZZ2PRTT1 EQU   ZZ2PRTT+1
ZZ2A     EQU   ZZ2+272
ZZ2AF    EQU   ZZ2A+16
ZZ2AFX   EQU   ZZ2AF+5
ZZ2APID  EQU   ZZ2A+64
ZZ2AD    EQU   ZZ2A+74
ZZ2ADD   EQU   ZZ2AD
ZZ2ADDT  EQU   ZZ2ADD+2
ZZ2ADM   EQU   ZZ2AD+46
ZZ2ADMT  EQU   ZZ2ADM+2
ZZ2ADP   EQU   ZZ2AD+56
ZZ2ADPT  EQU   ZZ2ADP+2
ZZ2AZZ6P EQU   ZZ2A+140
ZZ2AQAS  EQU   ZZ2A+144
ZZ2AQD   EQU   ZZ2A+160
ZZ2AQDT  EQU   ZZ2AQD+10
ZZ2AQDF  EQU   ZZ2AQD+52
ZZ2STG   EQU   ZZ2+960
ZZ2ALLOP EQU   ZZ2+992
ZZ2FREEP EQU   ZZ2+996
ZZ2FF19P EQU   ZZ2+1000
ZZ2FRE1P EQU   ZZ2+1004
ZZ2FF18P EQU   ZZ2+1008
ZZ2DYNAP EQU   ZZ2+1012
ZZ2ZZ2CP EQU   ZZ2+1016
ZZ2ZZ2DP EQU   ZZ2+1020
ZZ2STAIP EQU   ZZ2+1024
ZZ2FF02P EQU   ZZ2+1028
ZZ2GETLP EQU   ZZ2+1032
ZZ2PARSP EQU   ZZ2+1036
ZZ2PTGTP EQU   ZZ2+1040
ZZ2PUTLP EQU   ZZ2+1044
ZZ2SCANP EQU   ZZ2+1048
ZZ2STCKP EQU   ZZ2+1052
ZZ2TRMOP EQU   ZZ2+1064
ZZ2TRMVP EQU   ZZ2+1068
ZZ2PUTNP EQU   ZZ2+1084
ZZ2TRMNP EQU   ZZ2+1088
ZZ2ZZ1P  EQU   ZZ2+1264
ZZ2BVTP  EQU   ZZ2+1280
ZZ2RVTP  EQU   ZZ2+1284
ZZ2CPPL  EQU   ZZ2+1292
ZZ2CPPLC EQU   ZZ2CPPL
ZZ2ITR   EQU   ZZ2+2840
ZZ2ITRE  EQU   ZZ2ITR+16
ZZ2ITSE  EQU   ZZ2+2864
ZZ2ES    EQU   ZZ2+2872
ZZ2AMDX  EQU   ZZ2+7160
ZZ2AXO   EQU   ZZ2+7934
ZZ2AXOT  EQU   ZZ2AXO+2
CMD      EQU   0
CMDT     EQU   CMD+4
PSCB     EQU   0
PSCBATR1 EQU   PSCB+16
ECT      EQU   0
ECTSWS   EQU   ECT+28
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
UPT      EQU   0
UPTSWS   EQU   UPT+12
SA       EQU   0
SA1      EQU   SA
SAR      EQU   SA+12
SAR1     EQU   SAR+12
BLSUMPK1 EQU   0
BLSUPARI EQU   0
BLSUPARU EQU   0
BLSUPUTO EQU   0
BLSUPUTV EQU   0
BVT      EQU   0
BVTPUTLP EQU   BVT+4
BVTPUTOP EQU   BVT+12
BVTPUTTP EQU   BVT+16
BVTPUTVP EQU   BVT+20
BVTPUTAP EQU   BVT+24
BVTPRTTP EQU   BVT+28
BVTPRTAP EQU   BVT+32
BVTPUTDP EQU   BVT+36
BVTMONP  EQU   BVT+40
BVTMON2P EQU   BVT+44
BVTVSARP EQU   BVT+48
BVTVSENP EQU   BVT+64
BVTVSERP EQU   BVT+68
BVTVSGEP EQU   BVT+72
BVTVSGUP EQU   BVT+76
BVTVSPOP EQU   BVT+80
BVTVSPUP EQU   BVT+84
BVTMPKNP EQU   BVT+104
BVTMONLP EQU   BVT+108
BVTPUTCP EQU   BVT+132
BVTMPK1P EQU   BVT+136
BVTZZ2RP EQU   BVT+140
BVTPGMRP EQU   BVT+144
BVTMONAP EQU   BVT+148
BVTBLDDP EQU   BVT+152
BVTBLDLP EQU   BVT+156
BVTPGMCP EQU   BVT+160
BVTPGMDP EQU   BVT+164
BVTPGMLP EQU   BVT+168
BVTMONCP EQU   BVT+180
BVTMONDP EQU   BVT+184
BVTMONTP EQU   BVT+188
BVTPARIP EQU   BVT+192
BVTPARUP EQU   BVT+196
BVTPRTNP EQU   BVT+204
BVTVSCRP EQU   BVT+208
BVTVSMRP EQU   BVT+212
BVTMONXP EQU   BVT+216
BVTTRMAP EQU   BVT+228
ZZ6      EQU   0
ZZ6D     EQU   ZZ6+128
ZZ6DD    EQU   ZZ6D+8
ZZ6DDT   EQU   ZZ6DD+4
ZZ6DQA   EQU   ZZ6D+68
ZZ6DQ1   EQU   ZZ6D+84
ZZ6DQ2   EQU   ZZ6D+88
ZZ6DF    EQU   ZZ6D+92
ZZ6DFAB  EQU   ZZ6DF
ZZ6B     EQU   ZZ6+768
BLSRACC  EQU   0
BLSRESGU EQU   0
RVT      EQU   0
RVTADDRP EQU   RVT
RVTT01P  EQU   RVT+4
RVTTAP   EQU   RVT+8
RVTTBP   EQU   RVT+12
RVTTCP   EQU   RVT+16
RVTTFP   EQU   RVT+24
RVTTYP   EQU   RVT+40
RVTT02P  EQU   RVT+48
RVTT03P  EQU   RVT+52
RVTT04P  EQU   RVT+56
RVTACCLP EQU   RVT+60
RVTRACCP EQU   RVT+64
RVTTLP   EQU   RVT+68
RVTTMP   EQU   RVT+72
RVTTUP   EQU   RVT+80
RVTESGEP EQU   RVT+84
RVTESGUP EQU   RVT+88
RVTESARP EQU   RVT+92
RVTRAARP EQU   RVT+96
RVTRAGEP EQU   RVT+100
RVTADDPP EQU   RVT+104
RVTACCQP EQU   RVT+108
RVTSAGUP EQU   RVT+124
RVTSAGEP EQU   RVT+128
RVTESCKP EQU   RVT+132
RVTMSGAP EQU   RVT+136
RVTMSGDP EQU   RVT+140
RVTADDTP EQU   RVT+160
RVTADDUP EQU   RVT+164
RVTADD1P EQU   RVT+176
RVTADD2P EQU   RVT+180
RVTRSAGP EQU   RVT+184
RVTMSGBP EQU   RVT+188
RVTADDSP EQU   RVT+192
RVTADD3P EQU   RVT+196
RVTT05P  EQU   RVT+200
RVTPADSP EQU   RVT+204
RVTTRP   EQU   RVT+228
RVTADD4P EQU   RVT+232
RVTSAPCP EQU   RVT+236
RVTSAARP EQU   RVT+240
RVTSAGNP EQU   RVT+244
RVTT06P  EQU   RVT+248
RVTSAGCP EQU   RVT+252
RVTSAGQP EQU   RVT+256
RVTESGCP EQU   RVT+260
RVTESGQP EQU   RVT+264
RVTDUCKP EQU   RVT+276
RVTDUCCP EQU   RVT+280
IOQ      EQU   0
IOQLNK   EQU   IOQ
IOQFLAGS EQU   IOQ+4
IOQFLA   EQU   IOQFLAGS
IOQFLB   EQU   IOQFLAGS+1
IOQIOSB  EQU   IOQ+8
CVTMAP   EQU   0
CVT      EQU   CVTMAP
CVTILK2  EQU   CVTMAP+40
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIXAVL EQU   CVTMAP+124
CVTILCH  EQU   CVTMAP+140
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IOCOM    EQU   0
IOCOMEX  EQU   IOCOM+64
IOCX     EQU   0
IOX      EQU   IOCX
IOXLCHCT EQU   IOCX+5
IOSB     EQU   0
IOSFLA   EQU   IOSB
IOSACHN  EQU   IOSFLA
IOSFLB   EQU   IOSB+1
IOSFLC   EQU   IOSB+2
IOSDVALT EQU   IOSFLC
IOSPKEY  EQU   IOSB+12
IOSOPT   EQU   IOSB+14
IOSOPT2  EQU   IOSB+15
IOSUCB   EQU   IOSB+16
@NM00082 EQU   IOSB+20
IOSCSW   EQU   @NM00082+1
IOSTATUS EQU   IOSCSW+3
IOSIPIB  EQU   IOSB+44
IOSPATH  EQU   IOSB+86
IOSCHN   EQU   IOSPATH
IOSCKEY  EQU   IOSB+89
IOSEEKA  EQU   IOSB+100
IOSCCHH  EQU   IOSEEKA+3
IOSSKHH  EQU   IOSCCHH+2
LCH      EQU   0
LCHENTRY EQU   LCH
LCHFST   EQU   LCHENTRY
LCHLST   EQU   LCH+4
LCHFLA   EQU   LCH+21
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBID    EQU   UCBOB+2
UCBSTAT  EQU   UCBOB+3
UCBONLI  EQU   UCBSTAT
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBNAME  EQU   UCBOB+13
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCB3COMM EQU   UCBDVCLS
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00092 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
PCCSECT  EQU   0
PDDSECT  EQU   0
PDXP     EQU   PDDSECT+1
PDL      EQU   PDDSECT+5
TUCBBF   EQU   0
PTRUCB   EQU   0
DATABUFR EQU   0
BLSRACCL EQU   0
BLSRACCQ EQU   0
BLSRADDP EQU   0
BLSRADDR EQU   0
BLSRADDS EQU   0
BLSRADDT EQU   0
BLSRADDU EQU   0
BLSRADD1 EQU   0
BLSRADD2 EQU   0
BLSRADD3 EQU   0
BLSRADD4 EQU   0
BLSRDUCC EQU   0
BLSRDUCK EQU   0
BLSRESAR EQU   0
BLSRESCK EQU   0
BLSRESGC EQU   0
BLSRESGE EQU   0
BLSRESGQ EQU   0
BLSRMSGA EQU   0
BLSRMSGB EQU   0
BLSRMSGD EQU   0
BLSRPADS EQU   0
BLSRRAAR EQU   0
BLSRRAGE EQU   0
BLSRSAAR EQU   0
BLSRSAG  EQU   0
BLSRSAGC EQU   0
BLSRSAGE EQU   0
BLSRSAGN EQU   0
BLSRSAGQ EQU   0
BLSRSAGU EQU   0
BLSRSAPC EQU   0
BLSTA    EQU   0
BLSTB    EQU   0
BLSTC    EQU   0
BLSTF    EQU   0
BLSTL    EQU   0
BLSTM    EQU   0
BLSTR    EQU   0
BLSTU    EQU   0
BLSTY    EQU   0
BLST01   EQU   0
BLST02   EQU   0
BLST03   EQU   0
BLST04   EQU   0
BLST05   EQU   0
BLST06   EQU   0
BLSUALLO EQU   0
BLSUBLDD EQU   0
BLSUBLDL EQU   0
BLSUDYNA EQU   0
BLSUFREE EQU   0
BLSUFRE1 EQU   0
BLSUMON  EQU   0
BLSUMONA EQU   0
BLSUMONC EQU   0
BLSUMOND EQU   0
BLSUMONL EQU   0
BLSUMONT EQU   0
BLSUMONX EQU   0
BLSUMON2 EQU   0
BLSUMPKN EQU   0
BLSUPGMC EQU   0
BLSUPGMD EQU   0
BLSUPGML EQU   0
BLSUPGMR EQU   0
BLSUPRTA EQU   0
BLSUPRTN EQU   0
BLSUPRTT EQU   0
BLSUPUTA EQU   0
BLSUPUTC EQU   0
BLSUPUTD EQU   0
BLSUPUTL EQU   0
BLSUPUTN EQU   0
BLSUPUTT EQU   0
BLSUSTAI EQU   0
BLSUTRMA EQU   0
BLSUTRMN EQU   0
BLSUTRMO EQU   0
BLSUTRMV EQU   0
BLSUVSAR EQU   0
BLSUVSCR EQU   0
BLSUVSEN EQU   0
BLSUVSER EQU   0
BLSUVSGE EQU   0
BLSUVSGU EQU   0
BLSUVSMR EQU   0
BLSUVSPO EQU   0
BLSUVSPU EQU   0
BLSUZZ2C EQU   0
BLSUZZ2D EQU   0
BLSUZZ2R EQU   0
IKJEFF02 EQU   0
IKJEFF18 EQU   0
IKJEFF19 EQU   0
IKJGETL  EQU   0
IKJPARS  EQU   0
IKJPTGT  EQU   0
IKJPUTL  EQU   0
IKJSCAN  EQU   0
IKJSTCK  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
UCBBGN   EQU   0
ACCASID  EQU   0
ACCADDR  EQU   0
ACCLNTH  EQU   0
ACCSYMN  EQU   0
CPPL     EQU   ZZ2CPPL
CPPLUPT  EQU   CPPL+4
CPPLPSCB EQU   CPPL+8
CPPLECT  EQU   CPPL+12
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
IOSATTSC EQU   IOSIPIB
IOSWTOWA EQU   IOSIPIB
IOSPCISC EQU   IOSIPIB
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00091 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
FIOQLNK  EQU   IOQLNK
LCHFSTF  EQU   LCHFST
PTRPTR   EQU   PTRBIT
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00091
UCBSKPFG EQU   @NM00091
UCBRIPND EQU   @NM00091
UCBRTIAC EQU   @NM00091
UCBRSV79 EQU   @NM00091
UCBRSV78 EQU   @NM00091
UCBRSV77 EQU   @NM00091
UCBOLTEP EQU   @NM00091
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBDQDSP EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00090 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
IOSPCIWA EQU   IOSPCISC+44
IOSPCIRS EQU   IOSPCISC+8
@NM00087 EQU   IOSPCISC+4
@NM00086 EQU   IOSPCISC
IOSWRNDR EQU   IOSWTOWA+4
IOSWTOPT EQU   IOSWTOWA+3
IOSWTOCP EQU   IOSWTOWA+2
IOSWTOCH EQU   IOSWTOWA
IOSATTWA EQU   IOSATTSC+40
@NM00085 EQU   IOSATTSC+24
IOSATTSN EQU   IOSATTSC
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
CPPLCBUF EQU   CPPL
PDSP     EQU   PDDSECT+4
@NM00118 EQU   PDDSECT
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBFCBPE EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBINHIO EQU   UCBFLP1
UCBNSWAP EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00092
UCBHALI  EQU   @NM00092
UCBRSV09 EQU   @NM00092
UCBRSV08 EQU   @NM00092
UCBRSV07 EQU   @NM00092
UCBRSV06 EQU   @NM00092
UCBRSV05 EQU   @NM00092
UCBRSV04 EQU   @NM00092
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBMMSGP EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00089 EQU   UCB
LCHEND   EQU   LCH+32
LCHPYBSY EQU   LCH+30
LCHLGBSY EQU   LCH+28
LCHRSV03 EQU   LCH+26
LCHTOTAL EQU   LCH+24
LCHRSV02 EQU   LCH+22
@NM00088 EQU   LCHFLA
LCHLKHLD EQU   LCHFLA
LCHCHCNT EQU   LCH+20
LCHTCH   EQU   LCH+16
LCHRSV01 EQU   LCH+12
LCHLOCK  EQU   LCH+8
IOSEND   EQU   IOSB+108
IOSSKR   EQU   IOSEEKA+7
IOSSKH2  EQU   IOSSKHH+1
IOSSKH1  EQU   IOSSKHH
IOSSKCC  EQU   IOSCCHH
IOSSKBB  EQU   IOSEEKA+1
IOSSKM   EQU   IOSEEKA
IOSEEK   EQU   IOSB+92
IOSMDM   EQU   IOSB+91
IOSMDB   EQU   IOSB+90
IOSCKEY7 EQU   IOSCKEY
IOSCKEY6 EQU   IOSCKEY
IOSCKEY5 EQU   IOSCKEY
IOSCKEY4 EQU   IOSCKEY
@NM00084 EQU   IOSCKEY
IOSFMSK  EQU   IOSB+88
IOSCUDEV EQU   IOSPATH+1
@NM00083 EQU   IOSCHN
IOSPATH3 EQU   IOSCHN
IOSPATH2 EQU   IOSCHN
IOSEXP   EQU   IOSCHN
IOSGDP   EQU   IOSCHN
IOSAFF   EQU   IOSB+85
IOSRSS1B EQU   IOSB+84
IOSDSID  EQU   IOSB+80
IOSVST   EQU   IOSB+76
IOSRST   EQU   IOSB+72
IOSDIE   EQU   IOSB+68
IOSABN   EQU   IOSB+64
IOSNRM   EQU   IOSB+60
IOSPCI   EQU   IOSB+56
IOSERP   EQU   IOSB+52
IOSPCHN  EQU   IOSB+48
IOSSNS   EQU   IOSB+42
IOSAPMSK EQU   IOSB+40
IOSRES4A EQU   IOSB+36
IOSUSE   EQU   IOSB+32
IOSSRB   EQU   IOSB+28
IOSCSWRC EQU   IOSCSW+5
IOSTSB   EQU   IOSTATUS+1
IOSTSA   EQU   IOSTATUS
IOSCSWCA EQU   IOSCSW
IOSCC    EQU   @NM00082
IOSOPT2X EQU   IOSOPT2
IOSIGP   EQU   IOSOPT2
IOSHTP   EQU   IOSOPT2
IOSRELSE EQU   IOSOPT
IOSAPR   EQU   IOSOPT
IOSTSLL  EQU   IOSOPT
IOSNERP  EQU   IOSOPT
IOSPSLL  EQU   IOSOPT
IOSQISCE EQU   IOSOPT
IOSDEP   EQU   IOSOPT
IOSBYP   EQU   IOSOPT
IOSCOD   EQU   IOSB+13
IOSPKY7  EQU   IOSPKEY
IOSPGDPX EQU   IOSPKEY
IOSIDR   EQU   IOSPKEY
IOSLCL   EQU   IOSPKEY
@NM00081 EQU   IOSPKEY
IOSPGAD  EQU   IOSB+8
IOSASID  EQU   IOSB+6
IOSPRLVL EQU   IOSB+5
IOSDVRID EQU   IOSB+4
IOSPROC  EQU   IOSB+3
IOSFLC7  EQU   IOSFLC
IOSCTCNR EQU   IOSFLC
IOSRWAIT EQU   IOSFLC
IOSTP    EQU   IOSFLC
IOSCC3WE EQU   IOSFLC
IOSVERIF EQU   IOSDVALT
IOSDVMNT EQU   IOSFLC
IOSLOG   EQU   IOSFLB
IOSBDCST EQU   IOSFLB
IOSMSG   EQU   IOSFLB
IOSFLB4  EQU   IOSFLB
IOSFLB3  EQU   IOSFLB
IOSNOTRS EQU   IOSFLB
IOSSDR   EQU   IOSFLB
IOSDIESE EQU   IOSFLB
IOSIOSB  EQU   IOSFLA
IOSDOM   EQU   IOSFLA
IOSEX    EQU   IOSFLA
IOSSMDB  EQU   IOSFLA
IOSSMDA  EQU   IOSFLA
IOSERR   EQU   IOSFLA
IOSCCHN  EQU   IOSACHN
IOSDCHN  EQU   IOSACHN
IOXEND   EQU   IOCX+32
IOXPSIF  EQU   IOCX+28
IOXPSIX  EQU   IOCX+24
IOXSTIDC EQU   IOCX+20
IOXCRHD  EQU   IOCX+16
IOXCRHA  EQU   IOCX+12
IOXTCQSC EQU   IOCX+8
@NM00080 EQU   IOCX+6
IOXHICH  EQU   IOCX+4
IOXCHMSK EQU   IOCX+2
IOXOFSET EQU   IOX
IOCOEND  EQU   IOCOM+128
IOCPATCH EQU   IOCOM+124
IOCUCBBM EQU   IOCOM+120
IOCQCNT  EQU   IOCOM+116
IOCIOSDQ EQU   IOCOM+112
IOCIOSEQ EQU   IOCOM+108
IOCSVCF  EQU   IOCOM+104
IOCTCCW  EQU   IOCOM+100
IOCRSVTB EQU   IOCOM+96
IOCMFCNT EQU   IOCOM+92
IOCMFHK  EQU   IOCOM+88
IOCGENA  EQU   IOCOM+84
IOCCCH   EQU   IOCOM+80
IOCASYNQ EQU   IOCOM+76
IOCLCHTB EQU   IOCOM+72
IOCATTBL EQU   IOCOM+68
IOCSYNCH EQU   IOCOM+56
IOCCATLK EQU   IOCOM+48
IOCPRGID EQU   IOCOM+44
IOCIOSCP EQU   IOCOM+40
IOCORMGT EQU   IOCOM+36
IOCVOID  EQU   IOCOM+32
IOCSTIO  EQU   IOCOM+28
IOCSCOMP EQU   IOCOM+24
IOCHD160 EQU   IOCOM+20
IOCINT   EQU   IOCOM+16
IOCCTBL  EQU   IOCOM+12
IOCHIO   EQU   IOCOM+8
IOCPST   EQU   IOCOM+4
IOCPGCT  EQU   IOCOM+2
IOCVOICT EQU   IOCOM
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00079 EQU   CVTFIX+248
@NM00078 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
IOQEND   EQU   IOQ+12
IOQPTH   EQU   IOQFLAGS+3
IOQPRI   EQU   IOQFLAGS+2
IOQALOC  EQU   IOQFLB
IOQRLSE  EQU   IOQFLB
IOQRESV  EQU   IOQFLB
@NM00077 EQU   IOQFLA
IOQPBSY  EQU   IOQFLA
IOQLBSY  EQU   IOQFLA
IOQENQ   EQU   IOQFLA
IOQSLCH  EQU   IOQFLA
RVT99999 EQU   RVT+384
RVT0096P EQU   RVT+380
RVT0095P EQU   RVT+376
RVT0094P EQU   RVT+372
RVT0093P EQU   RVT+368
RVT0092P EQU   RVT+364
RVT0091P EQU   RVT+360
RVT0090P EQU   RVT+356
RVT0089P EQU   RVT+352
RVT0088P EQU   RVT+348
RVT0087P EQU   RVT+344
RVT0086P EQU   RVT+340
RVT0085P EQU   RVT+336
RVT0084P EQU   RVT+332
RVT0083P EQU   RVT+328
RVT0082P EQU   RVT+324
RVT0081P EQU   RVT+320
RVT0080P EQU   RVT+316
RVT0079P EQU   RVT+312
RVT0078P EQU   RVT+308
RVT0077P EQU   RVT+304
RVT0076P EQU   RVT+300
RVT0075P EQU   RVT+296
RVT0074P EQU   RVT+292
RVT0073P EQU   RVT+288
RVT0072P EQU   RVT+284
RVTDTUTP EQU   RVT+272
RVTDTMTP EQU   RVT+268
RVT0057P EQU   RVT+224
RVT0056P EQU   RVT+220
RVT0055P EQU   RVT+216
RVT0054P EQU   RVT+212
RVT0053P EQU   RVT+208
RVT0044P EQU   RVT+172
RVT0043P EQU   RVT+168
RVT0040P EQU   RVT+156
RVT0039P EQU   RVT+152
RVT0038P EQU   RVT+148
RVT0037P EQU   RVT+144
RVT0031P EQU   RVT+120
RVT0030P EQU   RVT+116
RVT0029P EQU   RVT+112
RVT0020P EQU   RVT+76
RVT0012P EQU   RVT+44
RVT0010P EQU   RVT+36
RVT0009P EQU   RVT+32
RVT0008P EQU   RVT+28
RVT0006P EQU   RVT+20
ZZ69999  EQU   ZZ6+1792
ZZ6BRB   EQU   ZZ6B+12
ZZ6BRC   EQU   ZZ6B+8
@NM00076 EQU   ZZ6B+6
ZZ6BFL   EQU   ZZ6B+4
ZZ6BDA   EQU   ZZ6B
@NM00075 EQU   ZZ6+540
ZZ6BUFI  EQU   ZZ6+536
ZZ6BUFP  EQU   ZZ6+532
ZZ6FILE  EQU   ZZ6+524
ZZ6BUFB  EQU   ZZ6+520
ZZ6BUFL  EQU   ZZ6+518
ZZ6BUFN  EQU   ZZ6+516
ZZ6ZZ6P  EQU   ZZ6+512
@NM00074 EQU   ZZ6+256
ZZ6D999  EQU   ZZ6D+128
@NM00073 EQU   ZZ6D+116
ZZ6DCAP  EQU   ZZ6D+112
ZZ6DPRP  EQU   ZZ6D+108
ZZ6DDA2  EQU   ZZ6D+104
ZZ6DDA1  EQU   ZZ6D+100
@NM00072 EQU   ZZ6DF
ZZ6DFSU  EQU   ZZ6DF
ZZ6DFST  EQU   ZZ6DF
ZZ6DFMP  EQU   ZZ6DF
ZZ6DFDU  EQU   ZZ6DF
ZZ6DFBS  EQU   ZZ6DF
ZZ6DQA9  EQU   ZZ6DQA+16
@NM00071 EQU   ZZ6DQA+12
ZZ6DQA2  EQU   ZZ6DQA+8
ZZ6DQA1  EQU   ZZ6DQA+4
@NM00070 EQU   ZZ6DQA+2
ZZ6DQAT  EQU   ZZ6DQA
ZZ6DQA0  EQU   ZZ6DQA
ZZ6DRDX  EQU   ZZ6D+64
ZZ6DELK  EQU   ZZ6D+64
ZZ6DMEM  EQU   ZZ6D+56
ZZ6DDT1  EQU   ZZ6DDT
ZZ6DDO   EQU   ZZ6DD+2
ZZ6DDL   EQU   ZZ6DD
@NM00069 EQU   ZZ6D+2
ZZ6DRID  EQU   ZZ6D
ZZ6RDCB  EQU   ZZ6
ZZ60000  EQU   ZZ6
BVT99999 EQU   BVT+256
BVT0064P EQU   BVT+252
BVT0063P EQU   BVT+248
BVT0062P EQU   BVT+244
BVT0061P EQU   BVT+240
BVT0060P EQU   BVT+236
BVT0059P EQU   BVT+232
BVT0057P EQU   BVT+224
BVT0056P EQU   BVT+220
BVTSTBLP EQU   BVT+200
BVT0045P EQU   BVT+176
BVT0044P EQU   BVT+172
BVT0033P EQU   BVT+128
BVT0032P EQU   BVT+124
BVT0031P EQU   BVT+120
BVT0030P EQU   BVT+116
BVT0029P EQU   BVT+112
BVT0026P EQU   BVT+100
BVT0025P EQU   BVT+96
BVT0024P EQU   BVT+92
BVT0023P EQU   BVT+88
BVT0016P EQU   BVT+60
BVT0015P EQU   BVT+56
BVT0014P EQU   BVT+52
BVT0003P EQU   BVT+8
BVT0001P EQU   BVT
SA99     EQU   SA+72
SARC     EQU   SAR+56
SARB     EQU   SAR+52
SARA     EQU   SAR+48
SAR9     EQU   SAR+44
SAR8     EQU   SAR+40
SAR7     EQU   SAR+36
SAR6     EQU   SAR+32
SAR5     EQU   SAR+28
SAR4     EQU   SAR+24
SAR3     EQU   SAR+20
SAR2     EQU   SAR+16
SAR0     EQU   SAR+8
SARF     EQU   SAR+4
SARE     EQU   SAR
SAFWD    EQU   SA+8
SABAK    EQU   SA+4
SA1L     EQU   SA1+1
SA1P     EQU   SA1
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00068 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00067 EQU   UPT
@NM00066 EQU   ECT+52
@NM00065 EQU   ECT+48
@NM00064 EQU   ECT+44
@NM00063 EQU   ECTSWS2+1
@NM00062 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00061 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00060 EQU   PSCB+36
@NM00059 EQU   PSCB+32
@NM00058 EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00057 EQU   PSCBATR1
@NM00056 EQU   PSCBATR1
@NM00055 EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
PSCBUSRL EQU   PSCB+7
PSCBUSER EQU   PSCB
CMDT1    EQU   CMDT
CMDO     EQU   CMD+2
CMDL     EQU   CMD
ZZ299999 EQU   ZZ2+8192
ZZ2AXOT1 EQU   ZZ2AXOT
ZZ2AXOL  EQU   ZZ2AXO
@NM00054 EQU   ZZ2+7288
@NM00053 EQU   ZZ2AMDX+4
ZZ2AMDXC EQU   ZZ2AMDX
ZZ2HSD   EQU   ZZ2+3056
@NM00052 EQU   ZZ2ES
@NM00051 EQU   ZZ2+2868
ZZ2ITSEC EQU   ZZ2ITSE+1
@NM00050 EQU   ZZ2ITSE
ZZ2ITSEP EQU   ZZ2ITSE
ZZ2ITSEW EQU   ZZ2ITSE
@NM00049 EQU   ZZ2ITR+20
ZZ2ITREC EQU   ZZ2ITRE+1
@NM00048 EQU   ZZ2ITRE
ZZ2ITREP EQU   ZZ2ITRE
ZZ2ITREW EQU   ZZ2ITRE
@NM00047 EQU   ZZ2ITR+9
ZZ2ITRRC EQU   ZZ2ITR+8
ZZ2ITR2P EQU   ZZ2ITR+4
ZZ2ITRPP EQU   ZZ2ITR
@NM00046 EQU   ZZ2+1544
ZZ2PGM   EQU   ZZ2+1536
@NM00045 EQU   ZZ2+1526
ZZ2CW    EQU   ZZ2+1524
@NM00044 EQU   ZZ2+1504
@NM00043 EQU   ZZ2+1352
ZZ2FFSYP EQU   ZZ2+1348
ZZ2SASYP EQU   ZZ2+1344
ZZ2RDSYP EQU   ZZ2+1340
ZZ2RASYP EQU   ZZ2+1336
ZZ2PHSYP EQU   ZZ2+1332
ZZ2ESSYP EQU   ZZ2+1328
ZZ200SYP EQU   ZZ2+1324
ZZ2SCWP  EQU   ZZ2+1320
ZZ2TTLP  EQU   ZZ2+1316
ZZ2LOADP EQU   ZZ2+1312
ZZ2VRESP EQU   ZZ2+1308
ZZ2CPPLE EQU   ZZ2CPPL+12
ZZ2CPPLP EQU   ZZ2CPPL+8
ZZ2CPPLU EQU   ZZ2CPPL+4
ZZ2VRSAP EQU   ZZ2+1288
ZZ2DVTP  EQU   ZZ2+1276
@NM00042 EQU   ZZ2+1272
@NM00041 EQU   ZZ2+1268
ZZ2RPLP  EQU   ZZ2+1260
ZZ2TCBP  EQU   ZZ2+1256
@NM00040 EQU   ZZ2+1252
ZZ2ZZ2P  EQU   ZZ2+1248
@NM00039 EQU   ZZ2+1112
ZZ2FPDRP EQU   ZZ2+1108
ZZ2FDSDP EQU   ZZ2+1104
ZZ2APDRP EQU   ZZ2+1100
ZZ2ADSDP EQU   ZZ2+1096
ZZ2ENQ0P EQU   ZZ2+1092
@NM00038 EQU   ZZ2+1080
ZZ2MSG0P EQU   ZZ2+1076
ZZ2FT25P EQU   ZZ2+1072
ZZ2MSGSP EQU   ZZ2+1060
ZZ2ALOCP EQU   ZZ2+1056
@NM00037 EQU   ZZ2+976
ZZ2TOD   EQU   ZZ2+968
ZZ2STGN  EQU   ZZ2STG+4
ZZ2STGP  EQU   ZZ2STG
@NM00036 EQU   ZZ2+952
ZZ2SCMDE EQU   ZZ2+944
ZZ2SCMDN EQU   ZZ2+936
ZZ2IDENT EQU   ZZ2+928
ZZ2A9999 EQU   ZZ2A+656
@NM00035 EQU   ZZ2A+224
@NM00034 EQU   ZZ2A+220
ZZ2AQD99 EQU   ZZ2AQD+60
@NM00033 EQU   ZZ2AQD+56
@NM00032 EQU   ZZ2AQDF
ZZ2AQDFA EQU   ZZ2AQDF
ZZ2AQDIL EQU   ZZ2AQD+48
ZZ2AQDIM EQU   ZZ2AQD+44
ZZ2AQDT9 EQU   ZZ2AQDT+34
ZZ2AQDTE EQU   ZZ2AQDT+33
ZZ2AQDTD EQU   ZZ2AQDT+2
@NM00031 EQU   ZZ2AQDT+1
ZZ2AQDTY EQU   ZZ2AQDT
ZZ2AQDT0 EQU   ZZ2AQDT
ZZ2AQDLB EQU   ZZ2AQD+9
ZZ2AQDOB EQU   ZZ2AQD+8
ZZ2AQDLE EQU   ZZ2AQD+4
ZZ2AQDOF EQU   ZZ2AQD
ZZ2AQD00 EQU   ZZ2AQD
ZZ2AQAS9 EQU   ZZ2AQAS+16
@NM00030 EQU   ZZ2AQAS+12
ZZ2AQAS2 EQU   ZZ2AQAS+8
ZZ2AQAS1 EQU   ZZ2AQAS+4
@NM00029 EQU   ZZ2AQAS+2
ZZ2AQAST EQU   ZZ2AQAS
ZZ2AQAS0 EQU   ZZ2AQAS
ZZ2ADPTA EQU   ZZ2ADPT
ZZ2ADPL  EQU   ZZ2ADP
ZZ2ADMTA EQU   ZZ2ADMT
ZZ2ADML  EQU   ZZ2ADM
ZZ2ADDTA EQU   ZZ2ADDT
ZZ2ADDL  EQU   ZZ2ADD
@NM00028 EQU   ZZ2A+72
ZZ2APIDB EQU   ZZ2APID+3
ZZ2APIDA EQU   ZZ2APID
@NM00027 EQU   ZZ2A+24
@NM00026 EQU   ZZ2AF+5
@NM00025 EQU   ZZ2AF+3
ZZ2AFS   EQU   ZZ2AF+2
ZZ2AFD   EQU   ZZ2AF+2
ZZ2AFQ   EQU   ZZ2AF+2
ZZ2AF$   EQU   ZZ2AF+2
@NM00024 EQU   ZZ2AF+2
ZZ2AFM   EQU   ZZ2AF+2
@NM00023 EQU   ZZ2AF+2
@NM00022 EQU   ZZ2AF+1
ZZ2AFV   EQU   ZZ2AF+1
@NM00021 EQU   ZZ2AF+1
ZZ2AFC   EQU   ZZ2AF+1
@NM00020 EQU   ZZ2AF
ZZ2AFFS  EQU   ZZ2AF
ZZ2AFT   EQU   ZZ2AF
ZZ2AFP   EQU   ZZ2AF
@NM00019 EQU   ZZ2A+8
ZZ2ALINE EQU   ZZ2A+4
@NM00018 EQU   ZZ2A+3
ZZ2ASE   EQU   ZZ2A+2
ZZ2ACH   EQU   ZZ2A
@NM00017 EQU   ZZ2+264
@NM00016 EQU   ZZ2+263
ZZ2PRTT0 EQU   ZZ2PRTT
ZZ2PRTO  EQU   ZZ2PRT+2
ZZ2PRTL  EQU   ZZ2PRT
@NM00015 EQU   ZZ2AMD+56
ZZ2AMDXP EQU   ZZ2AMD+52
ZZ2AMDD  EQU   ZZ2AMD+48
ZZ2AMDL  EQU   ZZ2AMD+44
ZZ2AMDU  EQU   ZZ2AMD+28
ZZ2AMDF  EQU   ZZ2AMD+24
ZZ2AMDS  EQU   ZZ2AMD+20
ZZ2AMDC  EQU   ZZ2AMD+16
ZZ2AMDP  EQU   ZZ2AMD+12
ZZ2AMDB  EQU   ZZ2AMD+8
@NM00014 EQU   @NM00013
ZZ2AMD2  EQU   @NM00013
ZZ2AMD1  EQU   @NM00013
ZZ2AMD0  EQU   ZZ2AMD+6
ZZ2AMDA  EQU   ZZ2AMD+4
ZZ2AMDT  EQU   ZZ2AMD
ZZ199999 EQU   ZZ1+3072
@NM00012 EQU   ZZ1+2160
ZZ1TRTAS EQU   ZZ1+1904
ZZ1TRUPC EQU   ZZ1+1648
ZZ1TRCTX EQU   ZZ1+1392
ZZ1NASID EQU   ZZ1N+274
ZZ1NSTRL EQU   ZZ1N+272
ZZ1NOFF  EQU   ZZ1N+268
ZZ1NBDY  EQU   ZZ1N+264
ZZ1NADE  EQU   ZZ1N+260
ZZ1NADB  EQU   ZZ1N+256
ZZ1NSTR  EQU   ZZ1N
@NM00011 EQU   ZZ1+1080
ZZ1TREBC EQU   ZZ1+824
@NM00010 EQU   ZZ1+377
ZZ1USTAE EQU   ZZ1+376
@NM00009 EQU   ZZ1F+1
@NM00008 EQU   ZZ1F
ZZ1FM    EQU   ZZ1F
ZZ1FX    EQU   ZZ1F
ZZ1FU    EQU   ZZ1F
ZZ1EVEC  EQU   ZZ1EVE+1
@NM00007 EQU   ZZ1EVE
ZZ1EVEP  EQU   ZZ1EVE
ZZ1EVEW  EQU   ZZ1EVE
ZZ1ACMP  EQU   ZZ1ATTN
@NM00006 EQU   ZZ1+144
ZZ1FPP   EQU   ZZ1+140
ZZ1ZZ6P  EQU   ZZ1+136
@NM00005 EQU   ZZ1+84
ZZ1PLINE EQU   ZZ1+80
ZZ1PGSZ  EQU   ZZ1+76
ZZ1PCNT  EQU   ZZ1+72
@NM00004 EQU   ZZ1+68
ZZ1TPAGE EQU   ZZ1+64
ZZ1TLINE EQU   ZZ1+60
@NM00003 EQU   ZZ1+52
ZZ1DMCBP EQU   ZZ1+48
ZZ1DSDP  EQU   ZZ1+44
ZZ1PDRP  EQU   ZZ1+40
ZZ1ZZ2P  EQU   ZZ1+36
ZZ1327WP EQU   ZZ1+32
ZZ1ACBP  EQU   ZZ1+28
@NM00002 EQU   ZZ1+24
ZZ1PDCBP EQU   ZZ1+20
ZZ1BLRBL EQU   ZZ1+16
@NM00001 EQU   ZZ1+12
ZZ1PNULL EQU   ZZ1+8
ZZ1NULL  EQU   ZZ1+4
ZZ1IDE   EQU   ZZ1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00309 EQU   EXITRLSA
@RT00320 EQU   EXITRLSA
@RT00324 EQU   EXITRLSA
@RT00327 EQU   EXITRLSA
@RT00370 EQU   EXITRLSA
@RT00464 EQU   EXITRLSA
@RT00467 EQU   EXITRLSA
@RT00470 EQU   EXITRLSA
@RT00474 EQU   EXITRLSA
@RC00499 EQU   @RC00487
@RF00502 EQU   @RC00499
@RF00514 EQU   @RC00499
@ENDDATA EQU   *
         END   BLSRIOSK,(C'PLS2159',0701,78062)
