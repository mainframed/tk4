HEWLFRCG CSECT
         TITLE ' HEWLFRCG  REPLACE/CHANGE CARD ESD PROCESSOR '
*FUNCTION/OPERATION: THIS MODULE IS COMPRISED OF THREE SEPARATE       *
*      ROUTINES. THE FIRST(HEWLKRCG), SCANS THE CHAIN OF REPLACE/     *
*      CHANGE CARS IN THE CESD. IF IT FINDS A MATCH BETWEEN ESD AND   *
*      CESD SYMBOLS,IT MODIFYS THE ESD ITEM APPROPRIATELY . IF A      *
*      CHANGE FUNCTION IS REQUESTED, THE SYMBOL IS CHANGED TO THE     *
*      NEW ONE. IF A REPLACE FUNCTION IS REQUESTED, IT CHANGES THE    *
*      SYMBOL AND MARKS THE ITEM FOR REPLACEMENT. IF A DELETE FUNCTION*
*      IS REQUESTED(NON-SUBSCRIPTED SYMBOL), IT MARKS THE ITEM FOR    *
*      DELETION .                                                     *
*      THE SECOND ROUTINE(HEWLCPTH), DETERMINES THE COMMON SEGMENT IN *
*      AN OVERLAY PATH GIVEN 2 SEGMENT NUMBERS .                      *
*      THE THIRD ROUTINE(HEWLCDCN), REMOVES A CESD ITEM FROM THE      *
*      CHAIN OF LIBRARY MEMBERS AND RE-CONSTRUCTS THE CHAIN.          *
*ENTRY POINTS      HEWLMRCG - REPLACE CHANGE ROUTINE  -BALR 11,13     *
*                    HEWLCPTH - COMMON PATH ROUTINE     - BALR 11,13  *
*                    HEWLCDCN - DECHAIN ROUTINE         - BALR 11,15  *
*INPUT   HEWLMRCG- CESD(INDIRECTLY FROM REPLACE OR CHANGE CARDS)      *
*        HEWLCPTH- LIST OF PREVIOUS SEGMENT NUMBERS (SEGTA1) AND CESD *
*        HEWLCDCN- CESD                                               *
*OUTPUT: THERE IS NO OUTPUT TO AN I/O DEVICE                          *
*EXTERNAL ROUTINES: N/A                                               *
*EXITS-NORMAL: ALL ROUTINES RETURN VIA REGISTER 11                    *
*EXITS-ERROR: N/A                                                     *
*                                                                     *
*TABLES/WORK AREAS: NO INTERNAL TABLES ARE USED                       *
*ATTRIBUTES: REUSABLE                                                 *
*NOTES: N/A                                                           *
         EXTRN HEWLCRID
         EXTRN HEWLCTTY
CESD     EQU   3
CESDXR   EQU   7
         ENTRY HEWLCDCN
RETURN   EQU   11
SYSRET   EQU   14
SYSBRNCH EQU   15
ESDADD   EQU   6
INTERNAL EQU   13
APT       EQU  2
TEMP      EQU  10
ESDSEG    EQU  12
CESDSEG   EQU  12
SUBTYPE  EQU   13
TEMP1    EQU   8
ZERO     EQU   9
CESDX    EQU   10
TEMP2    EQU   4
REGSAV5  EQU   72
         ENTRY HEWLCPTH
         USING HEWLFRCG,INTERNAL
         USING APTDSECT,APT
*                                                                     *
*                        REPLACE/CHANGE ROUTINE                       *
*                                                                     *
         BC    15,MODID+6              BRANCH AROUND MODULE IDENT
MODID    DC    C'01MRCG'
RCG0     CLC   0(8,ESDADD),0(CESDX)
*              IF THE ESD SYMBOL DOES NOT MATCH THE REP/CHG SYMBOL,   *
*              BRANCH TO UPDATE THE CHAIN                             *
         BC    7,RCG2
         LA    SYSBRNCH,16(CESDX)
*              SYSBRNCH CONTAINS THE ADDRESS OF THE SECOND SYMBOL     *
         CLI   SUBTYPE(CESDX),X'F0'
*              IF THE SYMBOL IS FOR CHANGE, BRANCH                    *
         BC    8,RCG6
         OI    8(ESDADD),X'10'
*              SET THE DELETE BIT IN THE ESD TYPE(BYTE 8)             *
         L     TEMP2,ADDTTYPE
         CLI   0(TEMP2),X'06'
*              IF THE ESD TYPE IS NOT PSEUDO REGISTER, BRANCH         *
         BC    7,RCG1
         SR    ZERO,ZERO
         ST    ZERO,12(0,ESDADD)
*              CLEAR LENGTH AND ALIGNMENT FIELDS                      *
RCG1     CLI   SUBTYPE(CESDX),X'E0'
*              IF THE CARD IS REPLACE, BRANCH                         *
         BC    8,RCG5
         LR    SYSBRNCH,CESDX
*              CAUSE A MOVE ONTO ITSELF                               *
         CLI   0(TEMP2),X'01'
*              IF ESD TYPE IS AN LD - BRANCH (CAUSES ITEM TO BE SKIPP-*
*              ED)                                                    *
         BC    8,RCG4
         CLI   0(TEMP2),X'06'
*              IF ESD TYPE IS NOT PR, BRANCH
         BC    7,RCG6A0
RCG2     L     CESDX,8(CESDX)
         LA    CESDX,0(CESDX)
         LTR   CESDX,CESDX
*              IF THE CHAIN IS COMPLETE(BYTES 9,10,11 = 0), RETURN    *
         BCR   8,RETURN
         BC    15,RCG0
RCG4     L     RETURN,ADDESD29
*              THIS RETURN SKIPS ESD PROCESSING                       *
         BCR   15,RETURN
RCG5     CLI   0(TEMP2),X'00'
*              IF THE ESD TYPE IS AN SD, BRANCH                       *
         BC    8,RCG6A1
         NI    8(ESDADD),X'EF'
*              CLEAR DELETE BIT (A REPLACE ON ANYTHING EXCEPT SD IS   *
*              EQUIVALENT TO A CHANGE                                 *
RCG6     MVC   0(8,ESDADD),0(SYSBRNCH)
*              SET SYMBOL TO NEW SYMBOL                               *
         BC    15,RCG2
RCG6A1   MVI   SUBTYPE(ESDADD),0
*              SET SUBTYPE TO REPLACE                                 *
RCG6A    MVI   0(TEMP2),X'02'
*              SET ESD TYPE TO ER                                     *
         L     SYSRET,ID                ADDRESS OF ESDID
         L     SYSRET,0(SYSRET)         LOAD ESDID
         STH   SYSRET,14(ESDADD)
*              STORE ID IN COLS 14 AND 15 OF ESD ITEM                 *
         BC    15,RCG6
RCG6A0   MVI    SUBTYPE(ESDADD),X'08'
*              SET SUBTYPE TO DELETE                                  *
         BC    15,RCG6A
ID       DC    A(HEWLCRID)
         USING HEWLCPTH,INTERNAL
*                                                                     *
*                        COMMON PATH ROUTINE                          *
*                                                                     *
*                                                                     *
HEWLCPTH L     TEMP,SGT1
          SR   TEMP1,TEMP1              CLEAR ARGUMENT REGISTERS
          SR   TEMP2,TEMP2
         IC    TEMP1,CESDSEG(CESDXR)
         IC    TEMP2,ESDSEG(ESDADD)
*              TEMP1 CONTAINS CESD SEGMENT NUMBER                     *
*              TEMP2 CONTAINS ESD SEGMENT NUMBER                      *
FNC3      CLR  TEMP1,TEMP2
*              IF THE SEGMENT NUMBERS ARE EQUAL, BRANCH               *
          BC   8,FNC4                   BRANCH ON EQUAL
          BC   4,FND4                   BRANCH ON LOW
          XR   TEMP1,TEMP2              HIGH SWAP REGS
          XR   TEMP2,TEMP1
          XR   TEMP1,TEMP2
          BC   15,FND4
FNC4     LTR   TEMP1,TEMP1             IF SEGNO IS ZERO
         BC    2,FNC4A                 MAKE IT A 1
         LA    TEMP1,1
FNC4A    STC   TEMP1,ESDSEG(ESDADD)
         STC   TEMP1,CESDSEG(CESDXR)
*              SET CESD AND ESD SEGMENT NUMBERS TO RESULT             *
          BCR  15,RETURN
FND4     IC    TEMP2,0(TEMP2,TEMP)
          BC   15,FNC3
*                                                                     *
*                   LIBRARY DECHAIN ROUTINE                           *
*                                                                     *
*                                                                     *
HEWLCDCN LH    TEMP,14(CESDXR)
*              TEMP CONTAINS DIRECT CHAIN                             *
         USING HEWLCDCN,SYSBRNCH
         DROP  INTERNAL
         LH    TEMP1,10(CESDXR)
*              TEMP1 CONTAINS REVERSE CHAIN                           *
         LR    TEMP2,TEMP1
         SLL   TEMP1,4
         AR    TEMP1,CESD
*              INDEX CESD BY REVERSE CHAIN                            *
         STH   TEMP,14(TEMP1)
*              STORE DIRECT CHAIN IN LINE INDEXED BY REVERSE CHAIN    *
         LTR   TEMP,TEMP
*              IF DIRECT CHAIN IS ZERO, RETURN                        *
         BCR   8,RETURN
         SLL   TEMP,4
         AR    TEMP,CESD
*              INDEX DIRECT CHAIN                                     *
         STH   TEMP2,10(TEMP)
*              STORE REVERSE CHAIN IN LINE INDEXED BY REVERSE CHAIN   *
         BCR   15,RETURN
ADDTTYPE DC    A(HEWLCTTY)
ADDESD29 DC    V(HEWLCE30)
         HEWAPT
          END
