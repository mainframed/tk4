HEWLFINP CSECT
*
*174500-176500,209500-211500,429500-434500,551500-552500         S21016
*647500-670500,758500-760500                                     S21016
*694500-695500,712500-718500                                     S01904
*A653500                                                          M4123
*D680500-681500                                                   M4319
*A717500                                                          M4320
*A208500,A301500                                                 A51444
*C201500                     OY00131
*I532500,C533500,I746500                                OX04563,OY03738
* D703500                                                       ZA01413
* C209300                                                      @ZA02229
* A31051021 THRU 3152021                                       @ZA07586
         TITLE '  HEWLFINP INPUT PROCESSOR '
HEWLCINP EQU   *
*FUNCTION/OPERATION: THIS MODULE READS ALL INPUT TO LINK EDITOR. THIS *
*      CONSISTS OF OBJECT MODULES(CARDS),LOAD MODULES(LINK EDITOR     *
*      OUTPUT) AND CONTROL CARDS. IT DETERMINES WHICH PROCESSOR       *
*      MUST BE SELECTED TO PROCESS THE RECORD AND SELECTS IT. IT      *
*      PERFORMS ALL THE SET UP REQUIRED TO PROCESS THE PARTICULAR     *
*      REORD. IT ALSO SAVES DELINK TABLE VALUES FOR THE RLD AND ESD   *
*      PROCESSORS. IF AUTOMATIC LIBRARY CALL IS REQUIRED OR INCLUDE   *
*      CARDS HAVE BEEN READ, THE APPROPRIATE PROCESSOR IS SELECTED.   *
*ENTRY POINTS  HEWLFINP-BEGINNING OF CSECT ENTERED BY INITIALIZER     *
*               HEWLCINP- BEGINNING OF CSECT,ENTERED BY COMMON ROUT-  *
*                         INES                                        *
*               HEWLCDLK- DELINK TABLE ROUTINE,ENTERED BY ESD AND RLD *
*              HEWLFMDI-MODULE INPUT- ENTERED BY INPUT CONTROL        *
*               HEWLERDM- READ ROUTINE-USED BY HEWLEMDI               *
*               HEWLCEOD- END OF DATA ENTRY FOR LIBRARY DCB- ALSO     *
*                         ENTERED FROM HEWLEMDI WHEN END OF MODULE    *
*                         RECORD IS READ FROM LOAD MODULE             *
*               HEWLEEON- END OF DATA ENTRY FOR SYSLIN DCB            *
*                ALL ROUTINES ENTERED BY BCR 15,15 EXCEPT             *
*                    HEWLCDLK -BALR 14,15                             *
*                    HEWLERDM -BALR  7,15                             *
*INPUT:  80 COLUMN CARDS - OBJECT MODULES- F FORMAT                   *
*           COLUMN 1 - 12-9-2 PUNCH                                   *
*           COLUMN 2 THRU 4 = TYPE (ESD,TXT,RLD,END,SYM)              *
*              ESD  COLUMNS- 11-12 BYTE COUNT                         *
*                            15-16 ID OF FIRST ESD ITEM               *
*                            17-66 ESD ITEMS (3)                      *
*                                                                     *
*              TXT  COLUMNS- 6-7-8 24 BIT ASSEMBLED ADDRESS OF TXT    *
*                            11-12 NUMBER OF BYTES OF TXT ON CARD     *
*                            15-16 ESDID OF CSECT CONTAINING TXT      *
*                            17-72 TXT INFORMATION                    *
*                                                                     *
*              RLD  COLUMNS- 11-12 NUMBER OF BYTES OF RLD ON CARD     *
*                            17-72 RLD ITEMS                          *
*                                                                     *
*              END  COLUMNS- 6-7-8 OPTIONAL 24 BIT ASSM. ADD. OF      *
*                                  ENTRY POINT                        *
*                            15-16 ID OF ASSM. ADD. ENTRY POINT       *
*                            17-24 SYMBOL OF EXTERNAL SYMBOL ENTRY    *
*                            29-32 LENGTH OF CONTROL SECTION WHICH    *
*                                  WAS NOT SPECIFIED ON ESD CARD      *
*                                                                     *
*              SYM  COLUMNS- 11-12 NUMBER OF BYTES OF TESTRAN INFO.   *
*                                  ON CARD                            *
*                            17-72 TESTRAN INFORMATION                *
*                                                                     *
*                                                                     *
*        U RECORDS-LOAD MODULES                                       *
*             TXT RECORDS - RECORDS WHOSE MAXIMUM LENGTH IS TXTBSIZE *
*                            BYTES. THEY ARE PRECEEDED BY CCW RECORDS *
*              CCW RECORD- BYTE-0 - IDENTIFICATION BYTE = X'01'       *
*                              -1-3 NOT USED                          *
*                              -4-5 NO. OF BYTES OF ID/LENGTH         *
*                              -6-7 NO. OF BYTES OF RLD INFORMATION   *
*                              -8   NOT USED(READ COMMAND)            *
*                              -9-11 LINKED ADDRESS OF TXT RECORD     *
*                              -12   FLAGS                            *
*                              -13  NOT USED                          *
*                              -14-15 COUNT OF TXT RECORD WHICH       *
*                                     FOLLOWS                         *
*                                                                     *
*              IF THE RECORD CONTAINS RLD INFORMATION, THE RLD ITEMS  *
*              FOLLOW AND THE IDENTIFICATION BYTE CONTAINS A X'02'    *
*              (BIT 6 IS SET) , E.G. CCW AND RLD IS X'03'.            *
*              FOLLOWING THE RLD INFORMATION, IS A 4 BYTE FIELD.      *
*              BYTES 0-1 ARE THE ID OF THE FOLLOWING TXT RECORD, BYTES*
*              2-3 ARE THE LENGTH OF THE FOLLOWING TXT RECORD.        *
*              IN ADDITION TO RLD INFORMATION THE IDENTIFICATION      *
*              BYTE MAY HAVE BITS 4 AND 5 SET ON. BIT 4 INDICATES     *
*              END OF MODULE, BIT 5 INDICATES END OF SEGMENT. THESE   *
*              BITS MAY BE SET IN ANY COMBINATION WITH CCW AND RLD,   *
*              OR THEY MAY BE SET ALONE.                              *
*              FOR ALL THE ABOVE MENTIONED RECORDS THE FORMAT IS THE  *
*              SAME.                                                  *
*              SYM RECORD- BYTE-0 - IDENTIFICATION BYTE= X'40'        *
*                              -1 -  EITHER (1XXXXXXX)- MEANING THE   *
*                                   RECORD CONTAINS ESD ITEMS NOT IN  *
*                                   TEST FORM,OR (0XXXXXXX)- MEANING  *
*                                   THE OPPOSITE                      *
*                              -2-3 NUMBER OF BYTES OF TESTRAN DATA   *
*                              -4-243 - TESTRAN DATA                  *
*                                                                     *
*              CESD RECORD- BYTE-0 - IDENTIFICATION BYTE= X'20'       *
*                               -1-3 - NOT USED                       *
*                               -4-5 - ESDID OF FIRST ESD ITEM        *
*                               -6-7 - NO. OF BYTES OF CESD INFO.     *
*                               -8-247 - CESD DATA                    *
*              SCATTER/TRANSLATION RECORD                             *
*                           BYTE-0 - IDENTIFICATION BYTE= X'10'       *
*                                1 - NOT USED                         *
*                                2-3 NUMBER OF BYTES OF SCATTER/      *
*                                    TRANSLATION INFO FOLLOWING       *
*                                4-1023 - DATA                        *
*                                                                     *
*        CONTROL CARDS- THEY ARE 80 COLUMN CARDS FOUND ONLY IN OBJECT *
*                       MODULES. THEIR GENERAL FORMAT FOLLOWS(THEY    *
*                       ARE FREE FORM.                                *
*                        COLUMN 1 CONTAINS A BLANK                    *
*                        THE OPERATOR NOW FOLLOWS, FOLLOWED BY AT     *
*                        LEAST ONE BLANK, FOLLOWED BY THE OPERAND.    *
*OUTPUT: N/A                                                          *
*                                                                     *
*EXTERNAL ROUTINES  HEWLFESD- ESD PROCESSOR                           *
*                   HEWLFEND- END PROCESSOR                           *
*                   HEWLFSCN- CONTROL CARD PROCESSOR                  *
*                   HEWLFSYM- SYM PROCESSOR                           *
*                   HEWLFRAT- RLD AND TXT PROCESSOR                   *
*                   HEWLFINC- INCLUDE PROCESSOR                       *
*                   HEWLCAUT- AUTOMATIC LIBRARY CALL PROCESSOR        *
*                                                                     *
*EXITS NORMAL  HEWLFADA- ADDRESS ASSIGNMENTS-AT NAME CARD OR END OF   *
*                         DATA ON SYSLIN IF NCALL OPTION IS SPECIFIED *
*                         AND DATA IS PRESENT                         *
*              HEWLFFNL- FINAL PROCESSOR. AT END OF DATA ON SYSLIN    *
*                         IF NO INPUT HAS BEEN PROCESSED IN THIS      *
*                         RECURSION                                   *
*               HEWLCAUT- AUTOMATIC LIBRARY CALL- IF NCALL IS NOT ON  *
*                         AND DATA HAS BEEN RECEIVED AT END OF DATA   *
*                         ON SYSLIN (THIS ROUTINE WILL EITHER RETURN  *
*                         TO THE INPUT PROCESSOR OR BRANCH TO ADDRESS *
*                         ASSIGNMENT IF ALL LIBRARY CALLS HAVE BEEN   *
*                         COMPLETED)                                  *
*EXITS ERROR:  THERE ARE NO ERROR EXITS TO THE SYSTEM. ALL ERRORS     *
*              ARE RELAYED THROUGH THE ERROR DIAGNOSTIC ROUTINE       *
*              (HEWLFLOG) WHICH THEN DECIDES WHETHER TO PROCEED OR    *
*              STOP.                                                  *
*                    ERRORS:  22-A CONTROL CARD WAS DISCOVED WITHIN   *
*                                 AN OBJECT MODULE OR AN ILLEGALL     *
*                                 CARD WAS DISCOVERED WITHIN AN OBJECT*
*                                 MODULE. SEVERITY = 1 - WARNING      *
*                             21- A CONTROL CARD CONTINUATION WAS     *
*                                 EXPECTED BUT NOT RECEIVED.          *
*                                 SEVERITY = 2 - ERROR                *
*                             23- UNRECOGNIZABLE LOAD MODULE INPUT    *
*                                 SEVERITY= 1                         *
*TABLES/WORK AREAS:  N/A                                              *
*ATTRIBUTES: REUSABLE                                                 *
*                                                                     *
*NOTES: N/A
         ENTRY  HEWLCINP
         ENTRY HEWLCICA
*              ENTRY POINT FOR INCLUDE ADDRESS CONSTANT               *
         ENTRY HEWLCEOD
*              ENTRY POINT FOR LIBRARY END OF DATA                    *
         ENTRY HEWLEEON
*              ENTRY POINT FOR SYSLIN END OF DATA                     *
         ENTRY HEWLERDM
*              ENTRY POINT FOR READ MACRO                             *
BASE     EQU   12
REG6     EQU   6
READDATA EQU   320
APT      EQU   2
TEMP     EQU   1
TEMP1    EQU   7
BUFFER   EQU   10
AUTOLIB  EQU   X'40'
BUFFADD  EQU   4
TAMP     EQU   11
LOADMOD  EQU   X'20'
DCBADD   EQU   8
DCBPNT   EQU   0
COL1     EQU   0
SLASH    EQU   C'/'
EOFON    EQU   X'80'
EOFOFF   EQU   X'7F'
BLANK    EQU   X'40'
INMODON  EQU   X'02'
COL5     EQU   4
COL11    EQU   10
COL15    EQU   14
COL33    EQU   32                      CARD COLUMN 33 (START OF  S21016
*                                      IDR DATA FIELD ON OBJECT  S21016
*                                      MODULE END RECORD)        S21016
INMODOFF EQU   X'FD'
ENTRYPT  EQU   X'08'
ABSOLUTE EQU   X'FB'
SYMBOLIC EQU   X'04'
NOLGTH   EQU   X'40'
COL29    EQU   28
ESD      EQU   1
ESDWRITE EQU   X'01'
TEST     EQU   X'10'
NAME     EQU   X'40'
INCLUDE  EQU   X'80'
NCALL    EQU   X'80'
ENDINPUT EQU   X'20'
EXITON   EQU   X'01'    INDICATOR FOR OPEN EXIT TAKEN
EXITOFF  EQU   X'FE'      INDICATOR TO TURN OFF EXIT ON INDICATOR
TEMP2    EQU   0
SYSRET   EQU   14
SYSBRNCH EQU   15
PRECL    EQU   8
READCNT  EQU   9
REG3     EQU   3
REG4     EQU   4
REG5     EQU   5
SAVEAREA EQU   13
RECCNT   EQU   18
CURBUF   EQU   20
BLKFAC   EQU   16
READSW   EQU   24
LRECL    EQU   14
BLKSIZ   EQU   12
****************    EQUATES FOR MESSAGES     ******************
MSG      EQU   0
IEW0484  EQU   X'430'
IEW0234  EQU   X'417'                                  @XA02229,OY00131
IEW0594  EQU   X'43B'
IEW0123  EQU   X'030C'                 DISP=0,SEV=3,MSG=12       A51444
IEW0143  EQU   X'030E'                 DISP=0,SEV=3,MSG=14       A51444
****************************************************************
MODTYPE  EQU   X'FC'                   MODULE TYPE INDICATORS    S21016
*                                      FOR IDR                   S21016
PARMPTR  EQU   1                       PARAMETER LIST POINTER    S21016
         EJECT
         LR    BASE,SYSBRNCH
         USING APTDSECT,APT
         USING HEWLCINP,BASE
*              INCLUDE,AUTOMATIC LIBRARY CALL, AND INITIALIZER ENTER  *
*              AT HEWLEINP WITH REG 15 CONTAINING THE ADDRESS OF      *
*              HEWLEINP                                               *
         B     INP10
MODID    DC    C' HEWLFINP '
         DC    C' OZ07586 12/03/75 ',0H'0'
         SPACE 3
INP10    L     REG5,HEWLCLAC       ADDRESS OF CURRENT CONTROL BLOCK
         L     DCBADD,DCBPNT(0,REG5)   ADDRESS OF DECB
         LA    TEMP1,HEWLFMDI           RETURN ADDRESS
         TM    APT1,LOADMOD        IS THIS A LOAD MODULE
         BC    1,INP11                 YES
         LH    REG6,RECCNT(0,REG5)     NO--GET CURRENT RECORD NUMBER
         BCT   REG6,INP10C             BRANCH IF RECORDS LEFT IN BUFFR
         LH    READCNT,BLKSIZ(0,REG5)  NONE LEFT. USE BLKSIZ FOR RD CNT
INP10A   L     BUFFER,BUFFADD(0,REG5)  SWITCH BUFFER ADDRESSES
         MVC   BUFFADD(4,REG5),BUFFADD+4(REG5)
         ST    BUFFER,BUFFADD+4(0,REG5)
         LA    SAVEAREA,REGSA      ADDRESS OF SAVE AREA
         LR    REG6,BASE               WILL USE REG6 FOR BASE REG
         TM    READSW(REG5),X'80'      IS THIS FIRST READ
         BC    1,INP10B                YES--DONT CHECK
         TM    READSW(REG5),X'02'  HAS PVS READ ALREADY BEEN CHECKED
         BC    1,INP11B            YES--DON'T RECHECK
         MVC   RECCNT(2,REG5),BLKFAC(REG5)  INITIALIZE RECCORD COUNT
         USING HEWLCINP,REG6
         DROP  BASE
INP11A   CHECK (8)
         TM    APT1,LOADMOD        IS THIS A LOAD MODULE
         BCR   1,TEMP1                 YES--READ IS FINISHED
INP11B   NI    READSW(REG5),X'FD'  TURN OFF ALREADY CHECKED SWITCH
         TM    READSW(REG5),X'04'      CHECK FOR INVALID BLOCKSIZE
         BC    8,INP10B                NO
         LA    MSG,IEW0594             YES--ERR MSG 594
         L     SYSBRNCH,ERDIG      ADDRESS OF ERROR LOGGER
         BR    SYSBRNCH                SHOULD NOT RETURN
INP11    LA    READCNT,260             SET UP FOR READING LOAD MODULE
         L     BUFFER,RLDINPAD     ADDR OF RLD INPUT BUFFER
         LR    REG6,BASE
HEWLERDM LA    SAVEAREA,REGSA
INP10B   READ  (8),SF,,(BUFFER),(READCNT),MF=E
         TM    APT1,LOADMOD        IS THIS A LOAD MODULE
         BC    1,INP11A                YES--GO CHECK AND RETURN
         DROP  REG6
         USING HEWLCINP,BASE
         TM    READSW(REG5),X'80'      WAS THIS FIRST READ
         BC    8,INP10E                NO
         NI    READSW(REG5),X'7D'   YES--TURN OFF FIRST TIME SW
         BC    15,INP10A               AND READ AGAIN
INP10E   L     BUFFER,BUFFADD(0,REG5)  NEW CHECKED BUFFER ADDRESS
         BC    15,INP10D
INP10C   L     BUFFER,CURBUF(0,REG5)   UPDATE CURRENT BUFFER ADDRESS
         AH    BUFFER,LRECL(0,REG5)
         STH   REG6,RECCNT(0,REG5)
INP10D   ST    BUFFER,CURBUF(0,REG5)
         BCR   15,TEMP1                CONTINUE
INP13    CLI   COL1(BUFFER),BLANK
*              IF INPUT IS NOT CONTROL CARD - BRANCH
         BC    7,INP20A                 ERROR--B AD CARD
         TM    APT2,INMODON        IS IN MODULE BIT ON
         BC    1,INP18                  ERROR-CONTROL CRD IN MODULE
         L     SYSBRNCH,CRDSCN
         OI    APTSWS,X'04'        SET INPUT RECEIVED
*              THE CARD SCAN REQUIRES THE CARD BUFFER ADDRESS IN      *
*              REGISTER ONE                                           *
         LR    TEMP,BUFFER
         BALR  SYSRET,SYSBRNCH
*              RETURN ADDRESS IS IN REGISTER 14                       *
         TM    APT3,NAME          TEMPORARY - MAYBE
*              IF CONTROL CARD IS NOT NAME CARD,BRANCH                *
         BC    8,INP10
         LH    REG6,RECCNT(0,REG5) GET NUMBER RECRDS LEFT IN BUFFER
         BCT   REG6,INP14          ARE ANY MORE RECORDS LEFT IN BUFFER
INP14    OI    APT1,AUTOLIB
*              SET AUTOMATIC LIBRARY CALL INDICATOR ON                *
         BC    15,EODA
*                                                                     *
*                   **** END OF DATA ON SYSLIN ****                   *
*                                                                     *
*                                                                     *
HEWLEEON OI    APT1,AUTOLIB
*              SET AUTOMATIC LIBRARY CALL BIT ON                      *
*              SET END OF INPUT ON                                    *
         OI    APT3,ENDINPUT
         ST    SYSBRNCH,SAVE602        STORE RETURN ADDRESS
         BAL   SYSBRNCH,TESTEND        GO TO END CARD TEST
         L     SYSBRNCH,SAVE602        RESTORE RETURN ADDRESS
         TM    APTSWS,X'04'            HAS INPUT BEEN RECEIVED
         BC    1,EODA
         TM    APTSW2,REINTRY          TEST IF FIRST TIME THRU   A51444
         BO    INP14A                  BRANCH IF NOT FIRST TIME  A51444
         LA    MSG,IEW0123             SET UP FOR MESSAGE 12     A51444
         L     SYSBRNCH,ERDIG          GET ADDR OF ERROR RTN     A51444
         BALR  SYSRET,SYSBRNCH         GO TO LOG MESSAGE 12      A51444
         LA    MSG,IEW0143             SET UP FOR MESSAGE 14     A51444
         L     SYSBRNCH,ERDIG          GET ADDR OF ERROR RTN     A51444
         BALR  SYSRET,SYSBRNCH         GO TO LOG MESSAGE 14      A51444
INP14A   EQU   *                       ERROR LOGGING BYPASS      A51444
         L     SYSBRNCH,FINALPRC
*              IF NO GOOD INPUT WAS RECEIVED- GO TO FINAL PROCESSOR   *
         BCR   15,SYSBRNCH
*                                                                     *
*                   **** END OF DATA ON LIBRARY DCB ****              *
*                                                                     *
*                                                                     *
HEWLCEOD TM    HEWLCRBB+24,X'08'       IS IGNORE EOF BIT ON?
         BCR   1,SYSRET                RETURN TO LIBOP
BASESET  BALR  BASE,0                     RE-ESTABLISH BASE    @ZA07586
         L     BASE,INPADD-BASESET-2(BASE)  TO BEGIN OF INP    @ZA07586
         TM    APT1,LOADMOD            IS THIS A LOAD MODULE?
         BC    1,EODA                  YES - NO END CARD TEST
         ST    SYSBRNCH,SAVE602        STORE RETURN ADD.
         BAL   SYSBRNCH,TESTEND        GO TO END CARD TEST
         L     SYSBRNCH,SAVE602        RESTORE RETURN ADD.
EODA     TM    APT1,INCLUDE
*              IF MORE INCLUDES REQUESTED,GO TO INCLUDE PROCESSOR     *
         BC    1,INP16
         NI    APT1,X'DF'
*              CLEAR LOAD MODULE INDICATOR AND                        *
*              RE-INITIALIZE READ BLOCK                               *
         LA    TEMP,HEWLCRBN
         ST    TEMP,HEWLCLAC
         TM    APT1,AUTOLIB
*              IF NOT EOF ON SYS(IN(OR EQUIVALENT), CONTINUE          *
         BC    8,INP10
         TM    APT0,NCALL
         BC    1,INP15
*              IF THE NCALL OPTION WAS SELECTED-ADDRESS ASSGN IS NEXT *
         L     SYSBRNCH,AUTOCALL
         BCR   15,SYSBRNCH
*              AUTOMATIC LIBRARY CALL IS NOW SELECTED
INP15    L     SYSBRNCH,RLDADD         GO TO RLD/TXT FOR PURGE
         OI    NEWSW,X'01'             INDICATE PURGE TO TXT/RLD
         BALR  SYSRET,SYSBRNCH
         USING *,SYSBRNCH              RETURNS ON 15
         L     SYSBRNCH,ADDADDA        ADDRESS OF ADDRESS ASSIGNMENT
         DROP  SYSBRNCH
         BCR   15,SYSBRNCH
*              THE BRANCH TO ADDRESS ASSIGNMENT IS ACCOMPLISHED       *
*              THROUGH THE ROOT SEGMENT-THE ROOT ENTRY POINT IS       *
*              CALLED-HEWLCADA                                        *
INP16    L     SYSBRNCH,HEWLCICA
         BCR   15,SYSBRNCH
*              SELECT THE INCLUDE PROCESSOR                           *
INP18    LH    MSG,IEW0222              CONTROL CARD IN MODULE
         L     SYSBRNCH,ERDIG
         LA    SYSRET,INP10             RETURN TO READ NEXT CARD
         BCR   15,SYSBRNCH              BRANCH TO ERROR ROUTINE
ADDADDA  DC    V(HEWLFADA)
HEWLCICA DC    V(HEWLFINC)
CRDSCN   DC    V(HEWLFSCN)
AUTOCALL DC    V(HEWLCAUT)
FINALPRC DC    V(HEWLCFNI)
*              ADDRESS OF ABORT ENTRY TO FINAL PROCESSOR              *
*              USED TO TERMINATE LINK EDITOR                          *
*                                                                     *
*    THE LOAD OR OBJECT MODULE PROCESSOR IS NOW SELECTED              *
*                                                                     *
HEWLFMDI ST    BASE,BASAVE
         TM    APT1,LOADMOD
*              IF THE INPUT IS LOAD MODULE, BRANCH                    *
         BC    1,INP270
*                                                                     *
*                   **** OBJECT MODULE PROCESSING STARTS ****         *
*                             **** HERE ****                          *
*                                                                     *
INP20    CLI   COL1(BUFFER),X'02'
*              IF THE CARD IS OBJECT MODULE, BRANCH                   *
         BC    8,INP40
         B     INP13                    CHECK FOR CONTROL CARD
INP20A   LH    MSG,IEW0222         NOT OBJ MODULE INPUT
         L     TEMP1,INPADD
INP21    L     SYSBRNCH,ERDIG
*              BRANCH TO ERROR ROUTINE                                *
         BALR  14,15
         LR    SYSBRNCH,TEMP1
*              SKIP CARD, RETURN TO INPUT CONTROL TO READ NEXT CARD   *
         BCR   15,TEMP1
INP22    LH    MSG,IEW0212         CONTINUATION NOT RECEIVED
         NI    APT2,X'FE'
*              CLEAR CONTINUATION BIT                                 *
         LA    TEMP1,INP20
         BC    15,INP21
INP40    TM    APT2,X'01'          IS CONTINUATION EXPECTED
         BC    1,INP22             YES--WHEN CONTINTUATION IS EXPECTED
*                           AND NOT RECEIVED AN ERROR CONDITION ARISES
         LA    REG6,16(BUFFER)
*              REG6 CONTAINS THE ADDRESS OF COL 17                    *
         OI    APT2,INMODON
*              SET IN MODULE INDICATOR ON                             *
         L     TEMP2,COL1(BUFFER)
*              REGISTER 0 CONTAINS COLS 1 THRU 4                      *
         L     REG3,COL5(BUFFER)
*              REG3 CONTAINS COLS 5 THRU 8                            *
         LA    REG3,0(REG3)
         LH    REG4,COL11(BUFFER)
*              REG4 CONTAINS COLS 11 AND 12                           *
         LH    REG5,COL15(BUFFER)
*              REG5 CONTAINS COLS 15 AND 16                           *
*                                                                     *
*              THE FOLLOWING CODE EXAMINES COLS 1 THRU 4 AND          *
*              DETERMINES WHAT TYPE OF CARD WAS INPUT. IT THEN        *
*              BRANCHES TO THE APPROPRIATE SECTION OF CODE TO         *
*              PROCESS THE CARD                                       *
         LA    READCNT,5
         LA    TEMP,SYMTAB
INP50    LM    SYSRET,SYSBRNCH,0(TEMP)
         CR    TEMP2,SYSRET
         BC    8,INP60
         LA    TEMP,8(TEMP)
         BCT   READCNT,INP50
         BC    15,INP20A
INP60    SLL   READCNT,2
         LA    TEMP,INP110
         LA    TEMP1,INP99
SWITCH   BC    15,SWITCH(READCNT)
         BC    15,INP65       END
         BC    15,INP150      SYM
         BC    15,INP140      ESD
         BC      15,INP130      RLD
         BC    15,INP160      TXT
*            END CARD PROCESSING
INP65    NI    ENDCD,X'FE'             END CARD FOUND
         TM    APTSWS,X'02'            HAVE SYMS BEEN RECEIVED
*              IF SYMS HAVE BEEN RECEIVED,GO TO SYM PROC FOR PURGE    *
         BC    1,INP170
         CLI   COL33(BUFFER),BLANK     DOES END CARD HAVE IDR    S21016
*                                      DATA? (IF NOT PRESENT,    S21016
*                                      COL.33 IS BLANK)          S21016
         BE    INP70                   NO, BRANCH                S21016
         OI    IDRSWS,OBJIDR           TURN ON OBJ.MOD.INDICATOR S21016
         B     INP340                  GO TO PROCESS IDR DATA    S21016
INP70    TM    APT1,ENTRYPT
*        IF AN  ENTRY POINT WAS RECEIVED, SKIP THE FOLLOWING          *
         BC    1,INP90
         CH    REG5,ZBLNK+2
*        IF THE ENTRY POINT IS NOT ABSOLUTE, SKIP TO INP80            *
         BC    8,INP80
         CL    REG3,ZBLNK
         BC    8,INP80
*        SET ABSOLUTE INDICATOR ON                                    *
         NI    APT1,ABSOLUTE
         ST    REG3,EPSM
INP80    CLI   0(REG6),X'40'
*        IF THE ENTRY POINT IS NOT SYMBOLIC, SKIP TO INP90            *
         BC    8,INP90
         OI    APT1,SYMBOLIC
*        SET SYMBOLIC INDICATOR ON  AS WELL AS ENTRY POINT INDICATOR  *
         OI    APT1,ENTRYPT
         MVC   EPSM(8),0(REG6)
INP90    L     REG4,COL29(0,BUFFER)
         CL    REG4,BLNK
*              IF THERE IS NO LENGTH ON THE END CARD, BRANCH          *
         BC    8,INP98
         OI    APT2,X'80'
*              SET LENGTH RECEIVED BIT ON                             *
INP98    L     TEMP,INPADD             RETURN TO BEGINNING
INP99    ST    TEMP,BASAVE1
         LA    SAVEAREA,REGSA      ADDRESS OF SAVE AREA
         OI    APTSWS,X'04'
INP100   BALR  SYSRET,SYSBRNCH
*              BRANCH TO PROCESSOR                                    *
         BALR  BASE,0
         USING *,BASE
         LM    BASE,SAVEAREA,BASAVE
         USING HEWLCINP,BASE
         LR    SYSBRNCH,SAVEAREA
*              RETURN TO POINT IN CODE SPECIFIED IN REG 13            *
         BCR   15,SYSBRNCH
INP110   L     SYSBRNCH,INPADD
         TM    APTSWS,ESD          IS RETURN FROM ESD PROC
         BCR   8,SYSBRNCH
         NI    APTSWS,X'FE'        CLEAR ESD RETURN
         TM    APT1,ESDWRITE
*              IF ESD WRITE INDICATOR IS OFF, BRANCH                  *
         BCR   8,SYSBRNCH
         NI    APT1,X'FE'
*              CLEAR ESD WRITE INDICATOR                              *
         TM    PDSE7,TEST
*              IF TEST OPTION IS OFF, BRANCH                          *
         BCR   8,SYSBRNCH
         LR    TEMP,SYSBRNCH
*              INITIALIZE REGISTERS FOR SYM PROCESSOR (COUNT AND      *
*              BUFFER ADDRESS)                                        *
         L     REG6,HEWLCLAC
         LH    REG4,LRECL(0,REG6)
         L     REG6,CURBUF(0,REG6)     ADDRESS OF CURRENT INPUT OBJ BF
         L     SYSBRNCH,SYMADD
         TM    APT1,LOADMOD
*              IF THE INPUT IS OBJECT MOD, BRANCH                     *
         BC    8,INP111
         SR    REG4,REG4
*              INDICATE PURGE FOR SYM                                 *
         BC    15,INP99
INP111   OI    APTSWS,X'02'        SET SYM RECEIVED ON (ESD)
         BC    15,INP99
*              RLD  PROCESSING                                        *
INP130   NI    APT0,X'FD'
*              ESD  PROCESSING                                        *
         BCR   15,TEMP1
INP140   OI    APTSWS,ESD          SET ESD CARD BIT ON
         CLC   76(4,BUFFER),CARD1      IS THIS FIRST OBJ CARD
         BCR   7,TEMP1                 NO
         ST    SYSBRNCH,SAVE602        STORE RETURN ADDRESS
         BAL   SYSBRNCH,TESTEND        GO TO END CARD TEST
         L     SYSBRNCH,SAVE602        RESTORE RETURN ADDRESS
         BCR   15,TEMP1
TESTEND  TM    ENDCD,X'81'             WAS END CARD FOUND
         BCR   12,SYSBRNCH             YES
         STM   14,15,SAVE602+4
         LH    MSG,IEW0602+4           ERROR MESSAGE IEW0602
         L     SYSBRNCH,ERDIG          ERROR ROUTINE ADDRESS
         BALR  14,15                   BRANCH TO ERROR LOG
         LM    14,15,SAVE602+4
         BCR   15,SYSBRNCH
*              SYM PROCESSING                                         *
INP150   CLC   76(4,BUFFER),CARD1      FIRST ESD CARD
         BNE   NOFRT                   NO
         OI    ENDCD,X'80'             TURN ON TEST FOR END CARD
         BAL   SYSBRNCH,TESTEND
NOFRT    L     SYSBRNCH,INPADD
         LR    REG6,BUFFER
         TM    PDSE7,TEST
*              IF TEST OPTION IS OFF, GO TO NEXT CARD                 *
         BCR   8,SYSBRNCH
         L     SYSBRNCH,SYMADD
         OI    APTSWS,X'02'        SET SYM RECEIVED BIT ON
         LA    REG4,80
         BCR   15,TEMP1
*              TXT PROCESSING
INP160   CH    REG4,MAXOBJLN           VALIDATE DATA LN OX04563,OY03738
         BH    INP20A                  LOG ERR IF HIGH  OX04563,OY03738
         OI    ENDCD,X'01'             TEST END CARD    OX04563,OY03738
         TM    APTSWS,X'02'            HAVE SYMS BEEN RECEIVED
*              IF THEY HAVE, DO A SYM PURGE                           *
         BC    1,INP170
         OI    APT0,X'02'
*              SET TXT BIT ON IN APT                                  *
         BCR   15,TEMP1
*              SYM PURGE BEFORE TXT                                   *
INP170   SR    REG4,REG4
         NI    APTSWS,X'FD'        CLEAR SYM RECEIVED BIT
         L     SYSBRNCH,SYMADD
         BALR  TEMP,TEMP1
         L     REG6,HEWLCLAC
*              RESET THE BUFFER ADDRESS AND BRANCH TO PROCESS CARD    *
         L     BUFFER,CURBUF(0,REG6)
         BC    15,INP40
SCAT     EQU   X'10'
ESDREC   EQU   X'20'
IDREC    EQU   X'80'                   LOAD MODULE RECORD TYPE   S21016
*                                      FOR IDR                   S21016
CCW      EQU   1
RLD      EQU   X'02'
LSTLST   EQU   X'08'
BYTESRLD EQU   6
SYM      EQU   X'40'
*                                                                     *
*                        **** LOAD MODULE PROCESSING STARTS ****      *
*                             **** HERE ****                          *
*                                                                     *
INP270   LA    TEMP1,INP99
*              SET UP BRANCHING REGISTERS                             *
         CLI   COL1(BUFFER),SYM
*              IF THE RECORD IS NOT SYM, BRANCH                       *
         BC    7,INP281
         TM    PDSE7,TEST
*              IF THE TEST OPTION IS NOT ON, BRANCH                   *
         BC    8,INP315
         LA    TEMP,INP315             RTN ADD TO GO TO INPUT PROC
         SR    4,4
*              INDICATE PURGE, BRANCH                                 *
         L     SYSBRNCH,SYMADD
         BCR   15,TEMP1
INP280   TM    COL1(BUFFER),LSTLST
*              IF THE RECORD IS END-OF-MODULE,BRANCH                  *
         BC    1,INP282
         LA    MSG,IEW0234
         L     TEMP1,INPADD             SKIP THIS RECORD
         BC    15,INP21                 BRANCH TO ERROR ROUTINE
INP282   L     TEMP,EOFADD
         L     TAMP,INPADD
*              PREPARE TO BRANCH TO END OF FILE AFTER END PROCESS     *
         ST    TAMP,BASAVE
         L     SYSBRNCH,ENDADD
*              BRANCH TO END PROCESSOR                                *
         BC    15,INP99
INP281   TM    COL1(BUFFER),ESDREC
*              IF RECORD IS NOT ESD, BRANCH                           *
         BC    8,INP290
         LA    TEMP,INP110
         OI    APTSWS,ESD          SET ESD BIT ON
         LH    REG4,6(BUFFER)
*              REG4 CONTAINS THE BYTE COUNT                           *
         LH    REG5,4(BUFFER)
*              REG5 CONTAINS THE ID OF THE FIRST ESD ITEM             *
         LA    REG6,8(BUFFER)
*              REG6 CONTAINS THE ADDRESS OF THE ESD INFO
         L     SYSBRNCH,ESDADD
         BCR   15,TEMP1
INP290   TM    COL1(BUFFER),RLD
*              IF THE RECORD IS NOT RLD, BRANCH                       *
         BC    8,INP300
         LA    REG6,16(BUFFER)
*              REG6 CONTAINS THE ADDRESS OF THE RLD DATA              *
         LH    REG4,BYTESRLD(BUFFER)
*              REG4 CONTAINS THE RLD BYTE COUNT                       *
         L     SYSBRNCH,TXTADD
         ST    DCBADD,BASAVE2
         BALR  TEMP,TEMP1          TO RLD PROCESSOR
INP299   L     DCBADD,BASAVE2
INP300   L     BUFFER,RLDINPAD          ADDR OF LAOD MOD BUFFER
*              RESTORE DCBADDRESS AND BUFFER ADDRESS                  *
         TM    COL1(BUFFER),CCW
*              IF THE RECORD IS NOT TXT, BRANCH                       *
         BC    8,INP305
         L     REG3,8(BUFFER)
*              REG3 CONTAINS THE ASSIGNED ADDRESS                     *
         LA    REG3,0(REG3)
         LH    REG6,BYTESRLD(BUFFER)
         LA    REG6,16(BUFFER,REG6)
         L     REG4,12(BUFFER)
         LA    REG4,0(REG4)
*              REG4 CONTAINS THE TXT BYTE COUNT                       *
         LH    REG5,0(REG6)
*              REG5 CONTAINS THE TXT ID                               *
         LA    TEMP,INP310
         L     SYSBRNCH,TXTADD
         OI    APT0,X'02'
*              SET TXT INDICATOR ON AND BRANCH TO TXT PROCESSOR       *
         BC    15,INP99
INP305   TM    COL1(BUFFER),RLD
*              IF THE RECORD IS NOT RLD BRANCH                        *
         BC    8,INP320
INP310   L     BUFFER,RLDINPAD          ADDR OF LOAD MOD BUFFER
*              RE-INITIALIZE THE BUFFER ADDRESS                       *
         NI    APT0,X'FD'
*              CLEAR TXT INDICATOR                                    *
         TM    COL1(BUFFER),LSTLST
*              IF THE RECORD IS END OF MODULE, BRANCH                 *
         BC    1,INP282
INP315  L     SYSBRNCH,INPADD
*              BRANCH TO INPUT CONTROL                                *
         BCR   15,SYSBRNCH
INP320   TM    COL1(BUFFER),SCAT
*              IF THE INPUT IS NOT SCATTER, BRANCH
         BZ    INP330                  GO TO TEST FOR IDR        S21016
         BC    15,INP315
INP330   CLI   COL1(BUFFER),IDREC      IS RECORD TYPE IDR?       S21016
         BNE   INP280                  IF NOT, BRANCH            S21016
         OI    IDRSWS,LMDIDR           TURN LOAD MOD. INDICATOR  S21016
INP340   STM   SAVEAREA,PARMPTR,IDRSAV  SAVE LINKAGE REGS (13-1) S21016
         LA    PARMPTR,BUFADDR         POINT TO PARAMETER LIST   S21016
         LA    SAVEAREA,REGSA          LOAD ADDR. OF SAVE AREA    M4123
         L     SYSBRNCH,IDRADDR        GET ADDR.OF IDR PROCESSOR S21016
         ST    BUFFER,BUFADDR          PLACE ADDR.OF REC.IN      S21016
*                                      PARAMETER LIST            S21016
         BALR  SYSRET,SYSBRNCH         CALL IDR PROCESSOR        S21016
         LM    SAVEAREA,PARMPTR,IDRSAV  RESTORE LINKAGE REG'S.   S21016
         TM    IDRSWS,LMDIDR           WAS LOAD MOD.IDR JUST     S21016
*                                      PROCESSED?                S21016
         BO    INP350                  YES, CONTINUE PROCESSING  S21016
*                                      WITH NEXT LOAD MOD.RECORD S21016
         NI    IDRSWS,MODTYPE          NO, TURN OFF MOD.TYPE     S21016
*                                      INDICATORS                S21016
         B     INP70                   CONTINUE PROCESSING       S21016
*                                      OF OBJECT MOD. END CARD   S21016
INP350   NI    IDRSWS,MODTYPE          TURN OFF MODULE TYPE      S21016
*                                      INDICATORS                S21016
         B     INP315                  RETURN TO LOAD MODULE     S21016
*                                      PROCESSOR                 S21016
         ENTRY HEWLCDLK
RNTR     EQU   4
RNT      EQU   5
TEMP4    EQU   0
TEMP3    EQU   1
CESD     EQU   3
         USING HEWLCDLK,SYSBRNCH
HEWLCDLK STM   RNTR,DCBADD,REGSA   SAVE REGISTERS
         ST    TEMP3,REGSA+24
         SLL   TEMP3,4                  COMPUTE CESD LINE ADDRESS
         AR    TEMP3,CESD
         NC    9(3,TEMP3),9(TEMP3)      IS THE ASSEMBLED ADDRESS ZERO
         BC    8,DLK3                   YES,BRANCH TO RETURN
         L     REG6,DLKT           ADDRESS OF DELINK TABLE
         LH    TEMP1,ENDTC         INCREMENT CURRENT COUNT OF
         LA    TEMP1,1(TEMP1)           DELINK TABLE ENTRIES
         CH    TEMP1,ENDTX         IS DELINK TABLE EXEEDED
         BC    2,DLKTBLOF               YES,BRANCH TO ERROR ROUTINE
DLK4     STH   TEMP1,ENDTC         SET DELINK TBL CURRENT COUNT
         LR    DCBADD,TEMP1             SAVE UPDATED DELINK COUNT
         SLL   RNTR,2                  GET RENUMBERING TBL ENTRY S01904
         A     RNTR,RECNT              COMPUTE RNT LINE ADDR     S01904
         STH   TEMP1,0(RNTR)            SET DELINK TBL LINE IN RNTID
         OI    2(RNTR),X'04'            SET DELINK VALUE SAVED BIT
         SLL   DCBADD,2
         AR    TEMP1,DCBADD             COMPUTE DELINK TBL ENTRY ADDRS
         L     REG6,DLKT               ADDRESS OF DELINK TABLE   S01904
         AR    REG6,TEMP1
         MVC   2(3,REG6),9(TEMP3)       SAVE ASSM. ADDRESS IN DLK TBL.
         TM    3(RNTR),X'40'            IS TYPE IN RNT -CHAIN-
         BC    8,DLK2                   NO,BRANCH
         MVC   0(2,REG6),14(TEMP3)      SAVE CHAIN ID IN DELINK TBL.
         BC    15,DLK3
DLK2     MVC   0(2,REG6),REGSA+26  MOVE CESDID TO DLK TBL
DLK3     LM    RNTR,DCBADD,REGSA   RESTORE
         NI    8(TEMP3),X'EF'           CLEAR DELINK BIT IN CESD TYPE
         BCR   15,SYSRET                RETURN
DLKTBLOF TM    APT4,X'C0'              CAN REALLOC BE DONE?      S01904
         BO    DLKTBLF                 ALREADY DONE-GO TO ERROR RTN
         STM   TEMP2,SYSBRNCH,BRNCHSV  SAVE REGISTERS            S01904
         L     SYSBRNCH,ERDIGA         ADDRESS OF REALLOC RTN    S01904
         BALR  SYSRET,SYSBRNCH         GO TO REALLOC RTN         S01904
         LM    TEMP2,SYSBRNCH,BRNCHSV  RESTORE REGISTERS         S01904
         MVC   REGSA+4(4),RECNT        UPDATE PTR TO RNT          M4320
         B     DLK4                    PROCEED                   S01904
DLKTBLF  LA    MSG,IEW0484              LOAD REG 0 WITH ERROR CODE
         L     SYSBRNCH,ERDIG      LOAD REG15 WITH ADDRESS OF
*                                       ERROR DIAGNOSTIC ROUTINE
         BCR   15,SYSBRNCH              THIS IS A TERMINAL ERROR
*****                         ERROR                               *****
         DROP  SYSBRNCH
         DS    0F
BASAVE   DS    1F
BASAVE1  DS    1F
BASAVE2  DS    1F
SYMTAB   DC    X'02'
         DC    C'TXT'
TXTADD   DC    V(HEWLFRAT)
         DC    X'02'
         DC    C'RLD'
RLDADD   DC    V(HEWLFRAT)
         DC    X'02'
         DC    C'ESD'
ESDADD   DC    V(HEWLFESD)
         DC    X'02'
         DC    C'SYM'
SYMADD   DC    V(HEWLFSYM)
         DC    X'02'
         DC    C'END'
ENDADD   DC    V(HEWLFEND)
RDMACRO  DC    V(HEWLERDM)
EOFADD   DC    V(HEWLCEOD)
INPADD   DC    V(HEWLCINP)
MAXOBJLN DC    H'56'                   TEXT DATA LEN    OX04563,OY03738
******** ERROR MSG ****************************************************
IEW0602  DC    F'0',X'223C'            ERROR IEWL0602 MESSAGE
IEW0222  DC    X'1216'
IEW0212  DC    X'1215'
***********************************************************************
ENDCD    DC    X'00'                   SWITCH FOR END CARD TEST
*        0  BIT X'80' START END CARD TESTING
*        1-6          SPARE
*        7     X'01' LOOK FOR END CARD
CARD1    DC    C'0001'                 END CRD TEST- 1ST ESD CRD
SAVE602  DS    3F                      FOR END CRD TEST SAVEAREA
ZBLNK    DC    X'00404040'
BLNK     DC    C'    '
IDRADDR  DC    V(HEWLFIDR)             ADDRESS OF IDR PROCESSOR  S21016
IDRSAV   DS    5F                      SAVE AREA FOR IDR RTN.    S21016
BUFADDR  DS    F                       IDR PARAMETER LIST        S21016
****************************************************************
*        PATCH AREA                                            *
****************************************************************
PATCH    DC    20F'0',C'PATCH AREA' FOR PROG MAINT
         HEWAPT
         END
