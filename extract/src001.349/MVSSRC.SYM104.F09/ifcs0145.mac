         TITLE 'IFCS0145 MODEL  145 MACHINE CHECK SUMMARY'
*
*
*  LINE MACRO     LINE MACRO     LINE MACRO     LINE MACRO            *
         MACRO
&NAME    LINE  &DATA,&LABEL,&SKIP=
.*                            THIS MACRO ESTABLISHES THE MARGINS OR
.*                                 COLUMN SETTINGS FOR EACH LINE. IT
.*                                 GENERATES NECESSARY CARRIAGE CONTROL
.*                                 ENTRIES. LASTLY IT DETERMINES THE
.*                                 NUMBER OF ENTRIES ASSOCIATED WITH
.*                                 THE PREVIOUS LINE AND STORES THAT #
.*                                 INTO THE APPROPRIATE BYTE.
.*                                 &DATA(1) - CHARACTER POSITION TO
.*                                 BEGIN DATA.
.*
.*                                 &DATA(2) - # OF SPACES BETWEEN
.*                                 SUCCESSIVE DATA COLUMN STARTING
.*                                 CHARACTERS.
.*
.*                                 &LABEL(1) - CHARACTER POSITION
.*                                 TO BEGIN LABELS.
.*
.*                                 &LABEL(2) - # OF SPACES BETWEEN
.*                                 LINE'S LABEL STARTING CHARACTERS.
.*
.*                                 &SKIP= - # OF LINES TO ADVANCE
.*                                 CARRIAGE TO BEGIN NEXT PRINTED LINE.
.*
.*                                 NEW ENTRIES ARE GENERATED ONLY WHEN
.*                                 NECESSARY. OMISSION OF ITEMS MEANS
.*                                 THEY HAVE NOT CHANGED SINCE PREVIOUS
.*                                 SETTINGS. A LINE MACRO IS REQUIRED
.*                                 FOR EACH PRINTED LINE. IF NO SETTING
.*                                 CHANGES ARE REQUIRED ALL OPERANDS
.*                                 ARE OMITTED IN WHICH CASE ONLY THE
.*                                 # OF ENTRIES FOR THE PREVIOUS LINE
.*                                 FIRST MACRO INSTRUCTION ISSUED FOR
.*                                 THE SUBJECT LINE.
         GBLA  &DB,&DT,&LB,&LT,&NRENTS
         GBLA  &LASTCC,&INITIAL
         GBLC  &NRENTSX
         GBLC  &CARRCON
         GBLB  &TEST
         LCLA  &S
&NAME    DS    0C
         AIF   (&INITIAL EQ 0).FIRSTLN
         LINEND
         AGO   .NTFIRST
.FIRSTLN ANOP
&NRENTSX SETC  'N&SYSNDX'
&INITIAL SETA  1
&LASTCC  SETA  1
N&SYSNDX EQU   *
.NTFIRST ANOP
         DC    AL1(0)
         AIF   ('&DATA(1)' EQ '').CKDTABS
         AIF   ('&DATA'(1,1) NE '(').SLABEL
         AIF   (&DATA(1) EQ &DB).CKDTABS
&DB      SETA  &DATA(1)
         AGO   .AA
.CKDTABS AIF   ('&DATA(2)' EQ '').NCDATA
         AIF   (&DATA(2) EQ &DT).NCDATA
         AGO   .CC
.AA      AIF   ('&DATA(2)' EQ '').BB
         AIF   (&DATA(2) EQ &DT).BB
.CC      ANOP
&DT      SETA  &DATA(2)
.BB      DC    XL2'FFFE'
         DC    FL1'&DB'
         DC    FL1'&DT'
&NRENTS  SETA  &NRENTS+1
.NCDATA  ANOP
         AIF   ('&LABEL(1)' EQ '').CKLTABS
         AIF   ('&LABEL'(1,1) NE '(').SLABEL
         AIF   (&LABEL(1) EQ &LB).CKLTABS
&LB      SETA  &LABEL(1)
         AGO   .AAA
.CKLTABS AIF   ('&LABEL(2)' EQ '').NCLABEL
         AIF   (&LABEL(2) EQ &LT).NCLABEL
         AGO   .CCC
.AAA     AIF   ('&LABEL(2)' EQ '').BBB
         AIF   (&LABEL(2) EQ &LT).BBB
.CCC     ANOP
&LT      SETA  &LABEL(2)
.BBB     DC    XL2'FFFF'
         DC    FL1'&LB'
         DC    FL1'&LT'
&NRENTS  SETA  &NRENTS+1
.NCLABEL ANOP
         AIF   ('&SKIP' EQ 'E').EJECT
         AIF   ('&SKIP' EQ '').TESTOFF
.CONT    ANOP
         AIF   (&TEST EQ 0).AB
         AIF   (&SKIP EQ &LASTCC).TESTOFF
&S       SETA  &SKIP
         ORG   &CARRCON+3
         DC    AL.3(0),AL.2(&S),AL.3(1)
         ORG
&LASTCC  SETA  &S
.SLABEL  ANOP
.TESTOFF ANOP
&TEST    SETB  0
         AGO   .DD
.EJECT   DC    XL2'FFFB'
&NRENTS  SETA  &NRENTS+1
         DC    X'8B'              SKIP TO CHANNEL 1
         DC    AL.3(0),AL.2(&LASTCC),AL.3(1)
&TEST    SETB  1
         AGO   .DD
.AB      AIF   (&SKIP EQ &LASTCC).NOCHANG
A&SYSNDX DC    XL2'FFFB'
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
&LASTCC  SETA  &SKIP
&TEST    SETB  1
&CARRCON SETC  'A&SYSNDX'
&NRENTS  SETA  &NRENTS+1
.DD      ANOP
.NOCHANG ANOP
         MEND
         EJECT
         SPACE 2
*  ROUTINE MACRO     ROUTINE MACRO     ROUTINE MACRO     ROUTINE MACRO*
         MACRO
&NAME    ROUTINE &LOGITEM,&RNAME
         GBLC  &DSECT,&CSECT
         GBLC  &ITEM(1000)
         GBLA  &SHIFT(1000),&ITEMNBR
         GBLA  &NRENTS
         LCLA  &ISHIFT,&NDX
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOG ITEM NOT DEFINED'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&NAME    DC    AL.12(&LOGITEM-&DSECT),XL.4'D'
         DC    AL.4(&ISHIFT),AL.12(&RNAME-&CSECT)
&NRENTS  SETA  &NRENTS+1
         MEND
*  DSGEN MACRO     DSGEN MACRO     DSGEN MACRO     DSGEN MACRO        *
         SPACE 2
         MACRO
&NAME    DSGEN &X1,&X2,&X3,&X4,&X5,&X6,&X7,&X8,&X9,&X10,&X11,&X12,&X13,X
               &X14,&X15,&X16,&X17,&X18,&X19,&X20,&X21,&X22,&X23,&X24, X
               &X25,&X26,&X27,&X28,&X29,&X30,&X31,&X32
.*                            THIS MACRO GENERATES ONE DSECT WORD
.*                                 FORMATTED FOR THE SUBJECT LOG RECORD
.*                                 EACH OPERAND HAS TWO SUB LISTS. THE
.*                                 FIRST IS THE NAME OF THE LOG ITEM
.*                                 WHILE THE SECOND IS THE # OF BITS TO
.*                                 ALLOCATE FOR THIS ITEM. ITEMS MUST
.*                                 BE DEFINED CONTIGUOUSLY WITHOUT GAPS
.*                                 UNUSED BIT GROUPS MUST BE GIVEN
.*                                 DUMMY NAMES. THE NAMES PROVIDED FOR
.*                                 THE LOG ITEMS MAY THEN BE USED IN
.*                                 THE CONVERSION MACRO INSTRUCTIONS.
         GBLC &ITEM(1000)
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000)
         LCLC  &SYMBOL
         LCLA  &OP,&COUNT,&BYTE
.LOOP    ANOP
&OP      SETA  &OP+1
&ITEMNBR SETA  &ITEMNBR+1
&SYMBOL  SETC  '&SYSLIST(&OP,1)'
         AIF   ('&SYSLIST(&OP,2)' NE '').OK1
         MNOTE *,'NULL BIT COUNT FIELD'
         MEXIT
.OK1     ANOP
         AIF   ('&SYMBOL' NE '').OK
         MNOTE 'LOG ITEM SYMBOL NOT PROVIDED'
         AGO   .CNT
.OK      ANOP
         AIF   ('&SYMBOL'(1,1) EQ '''').CNT                *TEMP*
&SYMBOL  EQU   *+&BYTE
&ITEM(&ITEMNBR)  SETC '&SYSLIST(&OP,1)'
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)
&SHIFT(&ITEMNBR) SETA &COUNT-&BYTE*8
.CNT     ANOP
&COUNT   SETA  &COUNT+&SYSLIST(&OP,2)
&BYTE    SETA  &COUNT/8
         AIF (&OP LT N'&SYSLIST).LOOP
         AIF   (&COUNT NE 32).NOT32
&NAME    DS    4C
         MEXIT
.NOT32   AIF   (&COUNT NE 64).ERR
&NAME    DS    8C
         MEXIT
.ERR     MNOTE '**BIT COUNT FIELDS DO NOT TOTAL 32 OR 64**'
         MEND
         MACRO
         LINEND
.*                            THIS MACRO IS USED ONLY BY THE LINE
.*                                 MACRO TO SET THE NUMBER OF ENTRIES
.*                                 ASSOCIATED WITH EACH LINE.
         GBLA  &NRENTS
         GBLC &NRENTSX
         ORG   &NRENTSX
         DC    FL1'&NRENTS'
         ORG
&NRENTS  SETA  0
B&SYSNDX EQU   *
&NRENTSX SETC  'B&SYSNDX'
         MEND
         SPACE 2
         EJECT
*  LABEL MACRO     LABEL MACRO     LABEL MACRO     LABEL MACRO        *
         SPACE 2
         MACRO
&NAME    LABEL &LABEL1,&LABEL2,&LABEL3,&LABEL4,&LABEL5,&LABEL6,        C
               &LABEL7,&LABEL8
.*                            THIS MACRO ALLOWS UP TO ACHT LABELS TO
.*                                 BE SPECIFIED FOR A GIVEN LINE. THE
.*                                 LABELS SHOULD BE ENCLOSED IN QUOTA-
.*                                 TION MARKS. THE COLUMN AND LINE END
.*                                 CONTROLS WILL BE INSERTED BY THE
.*                                 MACRO. OMITTED OPERANDS MEAN NO
.*                                 LABEL REQUIRED FOR RESPECTIVE
.*                                 COLUMN. THIS MACRO WILL ALSO ALERT
.*                                 THE PROGRAMMER TO EXACTLY WHERE THE
.*                                 TABLE MUST BE BROKEN IF NECESSARY
.*                                 TO AVOID EXCEEDING THE MAXIMUM LIMIT
         GBLC &LABELS(2000)
         GBLC  &LBL(100)
         GBLA  &LBLCTR(100)
         GBLA  &LABELNR
         GBLA  &NRENTS,&LPTR
         LCLC  &MARGIN,&TACK
         LCLC  &TEXT
         LCLA  &OP,&K,&START,&NRCHAR,&REMAIN
&MARGIN  SETC  '*'
         AIF   ('&NAME' EQ '').LOOPOUT
&LPTR    SETA  &LPTR+1
&LBL(&LPTR) SETC '&NAME'
&LBLCTR(&LPTR) SETA &LABELNR+1
.LOOPOUT ANOP
&OP      SETA  &OP+1
&K       SETA  K'&SYSLIST(&OP)
         AIF (&K GE 2).NORM
&K       SETA  2
.NORM    ANOP
&START   SETA  2
         AIF (&OP LT N'&SYSLIST).NOTLAST
&MARGIN  SETC  '$'
.NOTLAST ANOP
&NRCHAR  SETA  8
&TACK    SETC  ''
.LOOPIN  ANOP
&REMAIN  SETA  &K-&START
         AIF (&REMAIN GE 8).MORE
&TACK    SETC  '&MARGIN'
&NRCHAR  SETA  &REMAIN
.MORE    ANOP
&TEXT    SETC  ''
         AIF (&REMAIN EQ 0).ENDTEXT
&TEXT    SETC  '&SYSLIST(&OP)'(&START,&NRCHAR)
.ENDTEXT ANOP
&LABELNR SETA  &LABELNR+1
&LABELS(&LABELNR) SETC '&TEXT'.'&TACK'
&START   SETA  &START+8
         AIF ('&TACK' EQ '').LOOPIN
         AIF ('&TACK' EQ '*').LOOPOUT
         MEND
         SPACE 2
         MACRO
         LSTART
.*                            THIS MACRO IS ISSUED WHEN THE LABEL AREA
.*                                 OF THE TABLE IS TO BEGIN.
         GBLC &LABELS(2000)
         GBLA  &LABELNR
         GBLC  &LBL(100)
         GBLA  &LBLCTR(100)
         LCLA  &NDX,&CTR
         LINEND
&CTR     SETA  1
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   (&LBLCTR(&CTR) NE &NDX).NOLBL
&LBL(&CTR) DC  C'&LABELS(&NDX)'
&CTR     SETA  &CTR+1
         AGO   .LOOPCTL
.NOLBL   ANOP
         DC    C'&LABELS(&NDX)'
.LOOPCTL AIF   (&NDX LT &LABELNR).LOOP
         MEND
         SPACE 2
*  BIN MACRO     BIN MACRO     BIN MACRO     BIN MACRO     BIN MACRO  *
         SPACE 2
         MACRO
         BIN   &LOGITEM,&SKIP$OR
.*                                 &LOGITEM - NAME OF ITEM IN LOG
.*                                      RECORD DSECT
.*                                 &SKIP$OR - NBR OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES
.*                                      TO BACK UP FROM COLUMN FOR
.*                                      START OF PRINTING. THE LETTER
.*                                      B PRECEEDS THE NUMBER (B5) IF
.*                                      THE LATTER IS DESIRED. OMISSION
.*                                      OF THIS OPERAND FORCES OPTION 2
.*                                      WITH BACKUP SPACING EQUAL TO
.*                                 THE NUMBER OF BITS IN THE ITEM
.*                                 DEFINITION (VIA MACRO 'DSGEN').
.*                            A LIMIT OF 15 BITS IS IMPOSED FOR THE
.*                                 TOTAL NUMBER OF BITS TO PRINT.
         GBLC &ITEM(1000)
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000),&NRENTS
         GBLC  &DSECT
         LCLB  &B
         LCLA  &IBITS,&NDX,&ISHIFT,&K
         LCLA  &TEMP,&T
         LCLC  &S
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'YOU BLEW IT'
         ROUTINE DUM,SKIPPER
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
&T       SETA  &IBITS-1
&B       SETB  0
         AIF   ('&SKIP$OR' EQ '').BACKUP
&K       SETA  K'&SKIP$OR
&B       SETB  ('&SKIP$OR'(1,1) EQ 'B')
&S       SETC  '&SKIP$OR'(&B+1,&K-&B)
&T       SETA  &S
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
&TEMP    SETA  &ISHIFT
A&SYSNDX DC    AL.12(&LOGITEM-&DSECT),XL.4'&TEMP'
         AIF (&IBITS EQ 1 AND &B EQ 0).OUT
         ORG   A&SYSNDX
&B       SETB  1
         DC    AL.12(&LOGITEM-&DSECT),XL.4'C'
         DC    BL.1'&B',AL.7(&T),AL.4(&IBITS),FL.4'&ISHIFT'
.OUT     ANOP
         MEND
         EJECT
*  HEX MACRO     HEX MACRO     HEX MACRO    HEXN MACRO     HEX MACRO  *
         SPACE 2
         MACRO
         HEX   &LOGITEM,&SKIP$OR,&BYTES
.*                            THIS MACRO FACILITATES GENERATION OF THE
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE
.*                                 CONVERSIONS.
.*                            &LOGITEM - NAME OF DATA ITEM TO BE
.*                                 CONVERTED
.*                            &SKIP$OR - NUMBER OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO
.*                                 BACK UP FROM COLUMN FOR START OF
.*                                 PRINTING. THE LETTER B PRECEEDS THE
.*                                 NUMBER (B8) IF THE LATTER OPTION IS
.*                                 DESIRED. OMISSION OF THIS OPERAND
.*                                 FORCES OPTION 2 WITH BACKUP SPACING
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR
.*                                 IMPLICITLY B).
.*                            &BYTES - NUMBER OF TOTAL INPUT BYTES TO
.*                                 PROCESS. THIS NUMBER IS SUFFIXED
.*                                 WITH AN L,R, OR B TO STIPULATE
.*                                 PRINTING OF THE LEFT HALF, RIGHT
.*                                 HALF, OR BOTH HALVES OF THE BYTE
.*                                 RESPECTIVELY. OMISSION OF THIS
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES-
.*                                 SARY. THIS MACRO MUST BE THE FIRST
.*                                 MACRO INSTRUCTION ISSUED FOR THE
.*                                 SUBJECT LINE(S).
         GBLC &ITEM(1000),&DSECT
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000),&NRENTS
         LCLB  &B
         LCLA  &IBITS,&NDX,&ISHIFT,&K,&T,&CODE,&BYTESP
         LCLC  &S,&LETTER
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOG ITEM NOT DEFINED'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
&CODE    SETA  1
&K       SETA  K'&BYTES
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK
         MNOTE *,'BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL'
         MEXIT
.OK      AIF   ('&BYTES' EQ '').USEDEFN
&LETTER  SETC  '&BYTES'(&K,1)
&S       SETC  '&BYTES'(1,&K-1)
&BYTESP  SETA  &S
         AIF   ('&LETTER' EQ 'B').BOTH
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).OK2
.ERR     MNOTE *,'DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY'
         MEXIT
.USEDEFN ANOP
&BYTESP  SETA  &IBITS/8
.BOTH    AIF   (&ISHIFT NE 0).ERR
&CODE    SETA  3
&T       SETA  &BYTESP*2-1
&S       SETC  '&T'
.OK2     AIF   (&ISHIFT EQ 0).L
&CODE    SETA  2
.L       ANOP
&B       SETB  1
         AIF   ('&SKIP$OR' EQ '').BACKUP
&K       SETA  K'&SKIP$OR
&B       SETB  ('&SKIP$OR'(1,1) EQ 'B')
&S       SETC  '&SKIP$OR'(&B+1,&K-&B)
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
         DC    AL.12(&LOGITEM-&DSECT),XL.4'A'
         DC    BL.1'&B',FL.7'&S',FL.4'&BYTESP',FL.4'&CODE'
.OUT     ANOP
         MEND
         MACRO
         SPECIAL  &ROUTINE,&PARAM,&SPACE=
.*                            THIS MACRO GENERATES A SPECIAL ROUTINE
.*                                 ENTRY TO BE PROCESSED BY THE SUM. M.
.*                            &ROUTINE - SYMBOL ON SPECIAL ROUTINE EWT.
.*                            &PARAM - AN 8 BIT BINARY REPRESENTATION
.*                                 TO OCCUPY THE 'MASK' FIELD BUT TO BE
.*                                 INTERPRETED AS AN ARGUMENT OF THE
.*                                 SPECIAL ROUTINE.
.*                            &SPACE - THE NUMBER OF 2BYTE COUNTERS TO
.*                                 ALLOCATE FOR REQUIRED PROCESSING.
         GBLC  &CSECT
         GBLA  &COUNTR
         LCLA  &ADD
         DC    AL1(128)
         DC    BL.8'&PARAM'
         DC    AL2(&ROUTINE-&CSECT)
         DC    AL2(&COUNTR)
&ADD     SETA  1
         AIF   ('&SPACE' EQ '').NORM
&ADD     SETA  &SPACE
.NORM    ANOP
&COUNTR  SETA  &COUNTR+&ADD
         MEND
         MACRO
         SUM   &LOGITEM,&MASK
.*                            THIS MACRO GENERATES A NORMAL EDIT ENTRY
.*                                 FOR PROCESSING BY THE SUMMARY MODULE
.*                            &LOGITEM - NAME OF DATA ITEM TO BE SUMMED
.*                            &MASK - BYTE MASK FOR BITS TO BE TESTED.
.*                                 THIS OPERAND SHOULD BE OMITTED FOR
.*                                 SINGLE BIT ITEMS IN WHICH CASE THE
.*                                 MASK WILL BE SET ACCORDING TO THE
.*                                 OFF BYTE BIT DISPLACEMENT OF THE
.*                                ITEM AS DEFINED BY THE MACRO 'DSGEN'
         GBLA  &COUNTR,&ITEMNBR,&BITS(1000),&SHIFT(1000)
         GBLC  &ITEM(1000),&DSECT
         LCLA  &IBITS,&NDX,&ISHIFT,&M,&BITNBR
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOGITEM NOT FOUND'
         MEXIT
.FOUND   ANOP
         DC    AL1(0)
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
         AIF   ('&MASK' EQ '').FORM
         DC    B'&MASK'
         AGO   .ITEM
.FORM    ANOP
&BITNBR  SETA  &ISHIFT-7
&BITNBR  SETA  0-&BITNBR
&M       SETA  1
.LOOP2   ANOP
         AIF   (&BITNBR EQ 0).GOTIT
&M       SETA  &M*2
&BITNBR  SETA  &BITNBR-1
         AGO   .LOOP2
.GOTIT   ANOP
         DC    AL1(&M)
.ITEM    DC    AL2(&LOGITEM-&DSECT)
         DC    AL2(&COUNTR)
&COUNTR  SETA  &COUNTR+1
         MEND
         GBLC  &DSECT,&CSECT
&CSECT   SETC  'IFCS0145'
&DSECT   SETC  'S0002'
IFCS0145 CSECT
         USING *,R9
S0002    DSECT
         DSGEN (CLASRC,8),(SYSREL,8),(SWITCHES,16)
         DSGEN (SPARE1,32)
         DSGEN (DATE,32)
         DSGEN (HOUR,32)
         DSGEN (SPARE2,8),(CPUSERL,24)
         DSGEN (CPUID,16),(XDUM1,16)
         DS    77F                                               A45391
         DSGEN (MCHRG00,1),(MCHRG01,1),(MCHRG02,1),(MCHRG03,1),        X
               (MCHRG04,1),(MCHRG05,1),(MCHRG06,1),(MCHRG07,1),        X
               (MCHRG08,1),(MCHRG09,1),(MCHRG10,1),(MCHRG11,1),        X
               (MCHRG12,1),(MCHRG13,1),(MCHRG14,1),(MCHRG15,1),        X
               (MCHRG16,1),(MCHRG17,1),(MCHRG18,1),(MCHRG19,1),        X
               (MCHRG20,1),(MCHRG21,1),(MCHRG22,1),(MCHRG23,1),        X
               (MCHRG24,1),(MCHRG25,1),(MCHRG26,1),(MCHRG27,1),        X
               (MCHRG28,1),(MCHRG29,1),(MCHRG30,1),(MCHRG31,1)
         DSGEN (MCHRGB00,1),(MCHRGB01,1),(MCHRGB02,1),(MCHRGB03,1),    X
               (MCHRGB04,1),(MCHRGB05,1),(MCHRGB06,1),(MCHRGB07,1),    X
               (MCHRGB08,1),(MCHRGB09,1),(MCHRGB10,1),(MCHRGB11,1),    X
               (MCHRGB12,1),(MCHRGB13,1),(MCHRGB14,1),(MCHRGB15,1),    X
               (MCHRGB16,1),(MCHRGB17,1),(MCHRGB18,1),(MCHRGB19,1),    X
               (MCHRGB20,1),(MCHRGB21,1),(MCHRGB22,1),(MCHRGB23,1),    X
               (MCHRGB24,1),(MCHRGB25,1),(MCHRGB26,1),(MCHRGB27,1),    X
               (MCHRGB28,1),(MCHRGB29,1),(MCHRGB30,1),(MCHRGB31,1)
         DSGEN (RTYREG1,32),(RTYREG2,32)
         DSGEN (REGUNU,8),                                             X
               (HREG0,1),(HREG1,1),(HREG2,1),(HREG3,1),(HREG4,1),      X
               (HREG5,1),(HREG6,1),(HREG7,1),(RETRG23,16)
         DSGEN (RTYRG400,1),(RTYRG401,1),(RTYRG402,1),(RTYRG403,1),    X
               (RTYRG404,1),(RTYRG405,1),(RTYRG406,1),(RTYRG407,1),    X
               (RTYRG408,1),(RTYRG409,1),(RTYRG410,1),(RTYRG411,1),    X
               (RTYRG412,1),(RTYRG413,1),(RTYRG414,1),(RTYRG415,1),    X
               (RTRUNSED,1),(RTYRG417,3),(RTYRG420,3),(RTYUNSD,2),     X
               (RTYRG425,3),(RTYRG428,3),(RTYNOTUS,1)
         DSGEN (CTRLDWD,32)
         DSGEN (SYSREG00,1),(SYSREG01,1),(SYSREG02,1),(SYSREG03,1),    X
               (SYSREG04,1),(SYSREG05,1),(SYSREG06,1),(SYSREG07,1),    X
               (SYSREG08,1),(SYSREG09,1),(SYSREG10,1),(SYSREG11,1),    X
               (SYSREG12,1),(SYSREG13,1),(SYSREG14,1),(SYSREG15,1),    X
               (SYSREG16,1),(SYSREG17,1),(SYSREG18,1),(SYSREG19,1),    X
               (SYSREG20,1),(SYSREG21,1),(SYSREG22,1),(SYSREG23,1),    X
               (SYSREG24,1),(SYSREG25,1),(SYSREG26,1),(SYSREG27,1),    X
               (SYSREG28,1),(SYSREG29,1),(SYSREG30,1),(SYSREG31,1)
IFCS0145 CSECT
         USING S0002,R2
         DC    A(ENTRIES)
         DC    A(PEDIT)
         DC    F'0'
         DC    H'310'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
L0       EQU   0
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4
L5       EQU   5
L6       EQU   6
L7       EQU   7
L8       EQU   8
L10      EQU   10
L12      EQU   12
L13      EQU   13
L18      EQU   18
L28      EQU   28
XSAVE    DS    6F
HEX00    DC    F'0'
*
*        SPECIAL ROUTINES
*
XDATE1   STM   R4,R8,XSAVE              SAVE REGS
         LA    R5,L0(R3)                GET OUTDSELT POINTER RIGHT
         CLC   DATE(L4),HEX00           IS DATE ZERO
         BE    RETURN
         CLC   L0(L4,R3),HEX00          IS LOW DATE ZERO
         BNE   XDATE2                   BR-NO
         MVC      L0(L4,R3),DATE                 MOVE IN DATE
XDATE2   CLC   DATE(L4),L0(R3)          CHECK FOR LOW DATE
         BL    SAVELOW                  LOWER SAVE IT
         CLC   DATE(L4),L4(R3)          CHECK FOR HI
         BNH   RETURN                   BR-NOT HI
SAVEHI   MVC   L4(L4,R3),DATE           MOVE HI DATE
         B     RETURN
SAVELOW  MVC   L0(L4,R3),DATE           MOVE LOW DATE
         B     RETURN
RETURN   LM    R4,R8,XSAVE              RESTORE REGS
         BR    R14                      GO BACK
ENTRIES  EQU   *
         SPECIAL XDATE1,00000000,SPACE=4
         SUM   MCHRG00
         SUM   MCHRG01
         SUM   MCHRG02
         SUM   MCHRG03
         SUM   MCHRG04
         SUM   MCHRG05
         SUM   MCHRG06
         SUM   MCHRG07
         SUM   MCHRG08
         SUM   MCHRG09
         SUM   MCHRG10
         SUM   MCHRG11
         SUM   MCHRG12
         SUM   MCHRG13
         SUM   MCHRG14
         SUM   MCHRG15
         SUM   MCHRG16
         SUM   MCHRG17
         SUM   MCHRG18
         SUM   MCHRG19
         SUM   MCHRG20
         SUM   MCHRG21
         SUM   MCHRG22
         SUM   MCHRG23
         SUM   MCHRG24
         SUM   MCHRG25
         SUM   MCHRG26
         SUM   MCHRG27
         SUM   MCHRG28
         SUM   MCHRG29
         SUM   MCHRG30
         SUM   MCHRG31
         SUM   MCHRGB00
         SUM   MCHRGB01
         SUM   MCHRGB02
         SUM   MCHRGB03
         SUM   MCHRGB04
         SUM   MCHRGB05
         SUM   MCHRGB06
         SUM   MCHRGB07
         SUM   MCHRGB08
         SUM   MCHRGB09
         SUM   MCHRGB10
         SUM   MCHRGB11
         SUM   MCHRGB12
         SUM   MCHRGB13
         SUM   MCHRGB14
         SUM   MCHRGB15
         SUM   MCHRGB16
         SUM   MCHRGB17
         SUM   MCHRGB18
         SUM   MCHRGB19
         SUM   MCHRGB20
         SUM   MCHRGB21
         SUM   MCHRGB22
         SUM   MCHRGB23
         SUM   MCHRGB24
         SUM   MCHRGB25
         SUM   MCHRGB26
         SUM   MCHRGB27
         SUM   MCHRGB28
         SUM   MCHRGB29
         SUM   MCHRGB30
         SUM   MCHRGB31
         SUM   HREG0
         SUM   HREG1
         SUM   HREG2
         SUM   HREG3
         SUM   HREG4
         SUM   HREG5
         SUM   HREG6
         SUM   HREG7                                             A45391
         SUM   RTYRG408
         SUM   RTYRG409
         SUM   RTYRG410
         SUM   RTYRG411
         SUM   RTYRG412
         SUM   RTYRG413
         SUM   RTYRG414
         SUM   RTYRG415
         SUM   SYSREG00
         SUM   SYSREG01
         SUM   SYSREG02
         SUM   SYSREG03
         SUM   SYSREG04
         SUM   SYSREG05
         SUM   SYSREG06
         SUM   SYSREG07
         SUM   SYSREG08
         SUM   SYSREG09
         SUM   SYSREG10
         SUM   SYSREG11
         SUM   SYSREG12
         SUM   SYSREG13
         SUM   SYSREG14
         SUM   SYSREG15
         SUM   SYSREG16
         SUM   SYSREG17
         SUM   SYSREG18
         SUM   SYSREG19
         SUM   SYSREG20
         SUM   SYSREG21
         SUM   SYSREG22
         SUM   SYSREG23
         SUM   SYSREG24
         SUM   SYSREG25
         SUM   SYSREG26
         SUM   SYSREG27
         SUM   SYSREG28
         SUM   SYSREG29
         SUM   SYSREG30
         SUM   SYSREG31
QUIT     DC    X'FF'
PEDIT    DS    0F
&DSECT   SETC  'YYYY2'
&CSECT   SETC  'PEDIT'
         USING *,R9
         USING YYYY2,R2
*
*        EDIT AND PRINT SECTION
*
         DC    A(PENTRY)
         DC    C'IFCS0145'
YR9PTR   DS    F
YLABEL   DS    F
YYYY2    DSECT
         DS    3H
         DSGEN (YDUMA,16),(YNOREC,16)
         DSGEN (YTYPE,8),(YCHAN,8),(YCUA,24),(YSER,24)
         DSGEN (YCPU,16),(YSMSW,16)
         DSGEN (YDATES,64)
         DSGEN (CTR100,16),(CTR101,16),(CTR102,16),(CTR103,16)
         DSGEN (CTR104,16),(CTR105,16),(CTR106,16),(CTR107,16)
         DSGEN (CTR108,16),(CTR109,16),(CTR110,16),(CTR111,16)
         DSGEN (CTR112,16),(CTR113,16),(CTR114,16),(CTR115,16)
         DSGEN (CTR116,16),(CTR117,16),(CTR118,16),(CTR119,16)
         DSGEN (CTR120,16),(CTR121,16),(CTR122,16),(CTR123,16)
         DSGEN (CTR124,16),(CTR125,16),(CTR126,16),(CTR127,16)
         DSGEN (CTR128,16),(CTR129,16),(CTR130,16),(CTR131,16)
         DSGEN (CTR200,16),(CTR201,16),(CTR202,16),(CTR203,16)
         DSGEN (CTR204,16),(CTR205,16),(CTR206,16),(CTR207,16)
         DSGEN (CTR208,16),(CTR209,16),(CTR210,16),(CTR211,16)
         DSGEN (CTR212,16),(CTR213,16),(CTR214,16),(CTR215,16)
         DSGEN (CTR216,16),(CTR217,16),(CTR218,16),(CTR219,16)
         DSGEN (CTR220,16),(CTR221,16),(CTR222,16),(CTR223,16)
         DSGEN (CTR224,16),(CTR225,16),(CTR226,16),(CTR227,16)
         DSGEN (CTR228,16),(CTR229,16),(CTR230,16),(CTR231,16)
         DSGEN (CTR300,16),(CTR301,16),(CTR302,16),(CTR303,16)
         DSGEN (CTR304,16),(CTR305,16),(CTR306,16),(CTR307,16)
         DSGEN (CTR308,16),(CTR309,16),(CTR310,16),(CTR311,16)
         DSGEN (CTR312,16),(CTR313,16),(CTR314,16),(CTR315,16)
         DSGEN (CTR400,16),(CTR401,16),(CTR402,16),(CTR403,16)
         DSGEN (CTR404,16),(CTR405,16),(CTR406,16),(CTR407,16)
         DSGEN (CTR408,16),(CTR409,16),(CTR410,16),(CTR411,16)
         DSGEN (CTR412,16),(CTR413,16),(CTR414,16),(CTR415,16)
         DSGEN (CTR416,16),(CTR417,16),(CTR418,16),(CTR419,16)
         DSGEN (CTR420,16),(CTR421,16),(CTR422,16),(CTR423,16)
         DSGEN (CTR424,16),(CTR425,16),(CTR426,16),(CTR427,16)
         DSGEN (CTR428,16),(CTR429,16),(CTR430,16),(CTR431,16)
IFCS0145 CSECT
WORK     DS    D
XSAVE1   DC    5F'0'
SIZE     DC    H'310'
FSAVE    DS    18F
*
*        SPECIAL ROUTINES
*
CONVERT  STM   R5,R8,XSAVE1             SAVE REGS
         LH    R5,L0(R4)                PICK UP COUNT
         CVD   R5,WORK                  CONVERT TO DECIMAL
         UNPK  L0(L5,R3),WORK+L5(L3)    UNPACK TO PRINT BUFF
         MVZ   L4(L1,R3),L0(R3)         PUT IN TIGHT ZONE
         B     RETURNA                  RETURN
RETURNA  LM    R5,R8,XSAVE1             RESTORE REGS
         BR    R14                      RETURN
FREECTR  STM   R14,R12,L12(R13)
         LR    R12,R13
         LA    R13,FSAVE
         ST    R12,L4(R13)
         ST    R13,L8(R12)
         L     R3,L4(R2)                PICK UP NXT CTR POINTER
         ST    R3,L28(R12)              SET IT IN SAVED REG 2
         LH    R0,SIZE                  PICK UP SIZE
         LR    R1,R2                    SET POINTER
         FREEMAIN R,LV=(0),A=(1)
         LTR   R3,R3                    ANY MORE AREAS TO PRINT
         BZ    RETURNO                  BR-NO
         LA    R5,PENTRY+L10            SET POINTERS
         LA    R6,LABELS-L1             TO RELLOOP
         ST    R5,YR9PTR
         ST    R6,YLABEL
RETURNO  L     R13,L4(R13)              RESET TO CALLRS REGS
         LM    R14,R12,L12(R13)         RESET REGS
         BR    R14
SETDATES UNPK  WORK(L8),L0(L4,R4)       UNPACK LOW DATE
         MVZ   WORK+L7(L1),WORK         MOVE IN RIGHT ZONE
         MVC   L0(L3,R3),WORK+L5        PUT DATE IN PTR BUFF
         MVC   L5(L2,R3),WORK+L3        PUT YEAR IN PTR BUFF
         UNPK  WORK(L8),L4(L4,R4)       UNPACK HIGH DATE
         MVZ   WORK+L7(L1),WORK         MOVE IN RIGHT ZONE
         MVC   L13(L3,R3),WORK+L5       PUT DATE IN PTR BUFF
         MVC   L18(L2,R3),WORK+L3       PUT YEAR IN PTR BUFF
         BR    R14
CHKMOD   CLI   1(R4),X'48'         IS THIS A 148
         BNER  R14                 NO
         MVC   MODLAB1+7(2),X48    MOVE IN 148
         MVC   MODLAB2+20(2),X48   MOVE IN 148
         MVC   MODLAB3+14(21),INCDEC
         MVC   MODLAB4+14(4),MULTIPLY
         MVC   MODLAB5(29),CNTSHIFT
         BR    R14
INCDEC   DC    CL21'INCR/DECR CHK        '
MULTIPLY DC    CL4'MULT'
CNTSHIFT DC    CL29'COUNT CHK   *SHIFT LOAD CHK  '
X48      DC    C'48'
PENTRY   DS    0F
         DC    X'00010001'
         DC    X'00010001'
         DC    A(LABELS)
         DC    H'0'
         DC    X'01'
         DC    X'000B8B00'
         LABEL ''
         LINE  (1,1),(15,35),SKIP=1
         ROUTINE YCPU,CHKMOD
MODLAB1  LABEL 'MODEL 145 MACHINE CHECK RECORDS',                      X
               'DAY YEAR     DAY YEAR'
         LINE  (50,60),(31,28),SKIP=2
         ROUTINE YDATES,SETDATES
         LABEL 'DATE RANGE - FROM','TO'
         LINE  (72,1),(51,1)
         HEX   YSER,0,3B
         LABEL   'SERIAL'
         LINE  (72,10),(51,),SKIP=3
         ROUTINE YNOREC,CONVERT
         LABEL 'NO.OF RECORDS'
         LINE  ,(43,1),SKIP=3
MODLAB2  LABEL '- SUMMARY OF MODEL 145 MACHINE CHECK RECORDS -'
         LINE  ,(43,1),SKIP=2
         LABEL 'MACHINE CHECK REGISTER A'
         LINE  ,(10,65),SKIP=2
         LABEL 'BYTE 0','BYTE 2'
         LINE  (38,60),(1,59),SKIP=1
         ROUTINE    CTR100,CONVERT
         ROUTINE    CTR116,CONVERT                               A45391
         LABEL 'LOCAL STORAGE A SOURCE ADDR CHK','ALU 2 HALF SUM CHK'
         LINE
         ROUTINE    CTR101,CONVERT                               A45391
         ROUTINE    CTR117,CONVERT                               A45391
         LABEL 'LOCAL STORAGE B SOURCE ADDR CHK','ALU 3 HALF SUM CHK'
         LINE
         ROUTINE    CTR102,CONVERT                               A45391
         ROUTINE    CTR118,CONVERT                               A45391
         LABEL 'LOCAL STORAGE A DEST ADDR CHK','ALU LOGICAL CHK'
         LINE
         ROUTINE    CTR103,CONVERT                               A45391
         ROUTINE    CTR119,CONVERT                               A45391
         LABEL 'LOCAL STORAGE B DEST ADDR CHK','B REG SHIFT CHK'
         LINE
         ROUTINE    CTR104,CONVERT                               A45391
         ROUTINE    CTR120,CONVERT                               A45391
         LABEL 'DEST BYTE CTRL CHK','A REG PTY CHK'
         LINE
         ROUTINE    CTR105,CONVERT                               A45391
         ROUTINE    CTR121,CONVERT                               A45391
         LABEL 'LOCAL STORAGE A-B DEST ADDR COMPARE','B REG PTY CHK'
         LINE
         ROUTINE    CTR106,CONVERT                               A45391
         ROUTINE    CTR122,CONVERT                               A45391
         LABEL 'LOCAL STORAGE CTRL ASSM CHK','Z REG PTY CHK'
         LINE  (38,60),(1,59),SKIP=2
         ROUTINE    CTR107,CONVERT                               A45391
         ROUTINE    CTR123,CONVERT                               A45391
         LABEL 'CTRL REG PTY CHK','D REG PTY CHK'
         LINE  ,(10,65),SKIP=2
         LABEL 'BYTE 1','BYTE 3'
         LINE  (38,60),(1,59),SKIP=1
         ROUTINE    CTR108,CONVERT                               A45391
         ROUTINE    CTR124,CONVERT                               A45391
         LABEL 'ADDR CHK BOUND REC CHK','EXT REG DEST X COMP CHK'
         LINE
         ROUTINE    CTR109,CONVERT                               A45391
         ROUTINE    CTR125,CONVERT                               A45391
         LABEL 'LOCAL STORAGE COMP CHK','EXT REG DEST Y COMP CHK'
         LINE
         ROUTINE    CTR110,CONVERT                               A45391
         ROUTINE    CTR126,CONVERT                               A45391
         LABEL 'FLUSH THRU CHK','EXT REG SOURCE Y CHK'
         LINE
         ROUTINE    CTR111,CONVERT                               A45391
         ROUTINE    CTR127,CONVERT                               A45391
         LABEL 'H REG PTY CHK','EXT CTRL ASSM PTY CHK'
         LINE
         ROUTINE    CTR112,CONVERT                               A45391
         ROUTINE    CTR128,CONVERT                               A45391
         LABEL 'CLOCK COMPARATOR-CPU TIMER CHK','INTERV TIMER PTY CHK'
         LINE
         ROUTINE    CTR113,CONVERT                               A45391
         ROUTINE    CTR129,CONVERT                               A45391
         LABEL 'P REG PTY CHK','S REC DUP CHK'
         LINE
         ROUTINE    CTR114,CONVERT                               A45391
         ROUTINE    CTR130,CONVERT                               A45391
         LABEL 'T REG PTY CHK','TIME OF DAY CLOCK CHK'
         LINE  (38,60),(1,59),SKIP=2
         ROUTINE    CTR115,CONVERT                               A45391
         ROUTINE    CTR131,CONVERT                               A45391
MODLAB3  LABEL 'L REG PTY CHK','CTRL STORAGE ADDR CHK'
         LINE  ,(43,1),SKIP=2
         LABEL 'MACHINE CHECK REGISTER B'
         LINE  ,(10,65),SKIP=2
         LABEL 'BYTE 0','BYTE 2'
         LINE  (38,60),(1,59),SKIP=1
         ROUTINE    CTR200,CONVERT
         ROUTINE    CTR216,CONVERT                               A45391
         LABEL 'STORAGE ADD CHK','I CYCLE HARD ERROR'
         LINE
         ROUTINE    CTR201,CONVERT                               A45391
         ROUTINE    CTR217,CONVERT                               A45391
         LABEL 'SDBI PTY CHK','DOUBLE ECC ERROR'
         LINE
         ROUTINE    CTR202,CONVERT                               A45391
         ROUTINE    CTR218,CONVERT                               A45391
         LABEL 'SDBO PTY CHK','02I CTRL LINE PTY CHK'
         LINE
         ROUTINE    CTR203,CONVERT                               A45391
         ROUTINE    CTR219,CONVERT                               A45391
MODLAB4  LABEL 'STORE PTY CHK','BUSY CHK'
         LINE
         ROUTINE    CTR204,CONVERT                               A45391
         ROUTINE    CTR220,CONVERT                               A45391
MODLAB5  LABEL 'TIME OUT CHK','ECC HARDWARE CHK'
         LINE
         ROUTINE    CTR205,CONVERT                               A45391
         ROUTINE    CTR221,CONVERT                               A45391
         LABEL 'STORAGE PROT STACK PTY CHK','DOUBLE ECC ERROR'
         LINE
         ROUTINE    CTR206,CONVERT                               A45391
         ROUTINE    CTR222,CONVERT                               A45391
         LABEL 'CLOCK SYN CHK A','SINGLE ECC ERROR'
         LINE  (38,60),(1,59),SKIP=2
         ROUTINE    CTR207,CONVERT                               A45391
         ROUTINE    CTR223,CONVERT                               A45391
         LABEL 'CLOCK SYN CHK B','SINGLE DATA BIT CORRCT'
         LINE  ,(10,65),SKIP=2
         LABEL 'BYTE 1','BYTE 3'
         LINE  (38,60),(1,59),SKIP=1
         ROUTINE    CTR208,CONVERT                               A45391
         ROUTINE    CTR224,CONVERT                               A45391
         LABEL 'M REG COMP A CHK','02I CT ERROR CORRCT'
         LINE
         ROUTINE    CTR209,CONVERT                               A45391
         ROUTINE    CTR225,CONVERT                               A45391
         LABEL 'M REG COMP B CHK','C32 DATA BIT CORRCT'
         LINE
         ROUTINE    CTR210,CONVERT                               A45391
         ROUTINE    CTR226,CONVERT                               A45391
         LABEL 'M REG COMP C CHK','C16 DATA BIT CORRCT'
         LINE
         ROUTINE    CTR211,CONVERT                               A45391
         ROUTINE    CTR227,CONVERT                               A45391
         LABEL 'M REG COMP D CHK','C8 DATA BIT CORRCT'
         LINE
         ROUTINE    CTR212,CONVERT                               A45391
         ROUTINE    CTR228,CONVERT                               A45391
         LABEL 'NO RELOCATE REGISTER MATCH','C4 DATA BIT CORRCT'
         LINE
         ROUTINE    CTR213,CONVERT                               A45391
         ROUTINE    CTR229,CONVERT                               A45391
         LABEL 'MULT RELOCATE REG MATCH','C2 DATA BIT CORRCT'
         LINE
         ROUTINE    CTR214,CONVERT                               A45391
         ROUTINE    CTR230,CONVERT                               A45391
         LABEL 'RELOCATE LRU INVALID','C1 DATA BIT CORRCT'
         LINE  (38,60),(1,59),SKIP=2
         ROUTINE    CTR215,CONVERT                               A45391
         ROUTINE    CTR231,CONVERT                               A45391
         LABEL 'ANY MACH CHK ON','C0 DATA BIT CORRCT'
         DC    X'01000B8B00'
         LABEL ''
         LINE  ,(10,65),SKIP=2
         LABEL 'RETRY REG 3 ERRORS  HMRTY','RETRY REG 4 ERRORS  CPURTY'
         LINE  (38,60),(1,59),SKIP=1
         ROUTINE    CTR300,CONVERT
         ROUTINE    CTR308,CONVERT                               A45391
         LABEL 'MACHINE CHECK TRAP','STORAGE 2 CYCLE ERROR'
         LINE
         ROUTINE    CTR301,CONVERT                               A45391
         ROUTINE    CTR309,CONVERT                               A45391
         LABEL 'RETRY TRAP','TYPE 1 ERROR'
         LINE
         ROUTINE    CTR302,CONVERT                               A45391
         ROUTINE    CTR310,CONVERT                               A45391
         LABEL 'CPU HIGH TRAP','TYPE 2 ERROR'
         LINE
         ROUTINE    CTR303,CONVERT                               A45391
         ROUTINE    CTR311,CONVERT                               A45391
         LABEL 'INT FILE ADPTR OR SEL CHN 1,2 OR 3','TYPE 3 ERROR'
         LINE
         ROUTINE    CTR304,CONVERT                               A45391
         ROUTINE    CTR312,CONVERT                               A45391
         LABEL 'SEL CHN 1,2,3(IF IFA) OR SEL CHN 4','LOCAL OR EXT STORAC
               GE DEST'
         LINE
         ROUTINE    CTR305,CONVERT                               A45391
         ROUTINE    CTR313,CONVERT                               A45391
         LABEL 'MPX TRAP','STORAGE WORD IN ERROR'
         LINE
         ROUTINE    CTR306,CONVERT                               A45391
         ROUTINE    CTR314,CONVERT                               A45391
         LABEL 'INT FILE ADAPTR TRAP','ERROR IN TRAP 2 CYCLE'
         LINE  (38,60),(1,59),SKIP=2
         ROUTINE    CTR307,CONVERT                               A45391
         ROUTINE    CTR315,CONVERT                               A45391
         LABEL 'STORE DISPLAY','SPARE'
         SPACE 2
         LINE  ,(43,1),SKIP=2
         LABEL 'SYSTEM REGISTER'
         LINE  ,(10,65),SKIP=2
         LABEL 'BYTE 0','BYTE 2'
         LINE  (38,60),(1,59),SKIP=1
         ROUTINE    CTR400,CONVERT
         ROUTINE    CTR416,CONVERT                               A45391
         LABEL 'MACHINE CHK INTERPT PENDING','ENABLE CLEAR SWITCH'
         LINE
         ROUTINE    CTR401,CONVERT                               A45391
         ROUTINE    CTR417,CONVERT                               A45391
         LABEL 'RETRY ROUTINE','TMPL'
         LINE
         ROUTINE    CTR402,CONVERT                               A45391
         ROUTINE    CTR418,CONVERT                               A45391
         LABEL 'MACHINE CHK ROUTINE','LOAD FILE WAIT'
         LINE
         ROUTINE    CTR403,CONVERT                               A45391
         ROUTINE    CTR419,CONVERT                               A45391
         LABEL 'DOCUMENTARY CONSOLE 2','CE KEY IN CE MODE'
         LINE
         ROUTINE    CTR404,CONVERT                               A45391
         ROUTINE    CTR420,CONVERT                               A45391
         LABEL 'LOG PRESENT','IPL'
         LINE
         ROUTINE    CTR405,CONVERT                               A45391
         ROUTINE    CTR421,CONVERT                               A45391
         LABEL 'SPARE','POWER ON RESET'
         LINE
         ROUTINE    CTR406,CONVERT                               A45391
         ROUTINE    CTR422,CONVERT                               A45391
         LABEL 'I/O INSTN LATCH','SPARE'
         LINE  (38,60),(1,59),SKIP=2
         ROUTINE    CTR407,CONVERT                               A45391
         ROUTINE    CTR423,CONVERT                               A45391
         LABEL 'FORCE MODULE 0 TO LSCS','INSTR PROC LATCH'
         LINE  ,(10,65),SKIP=2
         LABEL 'BYTE 1','BYTE 3'
         LINE  (38,60),(1,59),SKIP=1
         ROUTINE    CTR408,CONVERT                               A45391
         ROUTINE    CTR424,CONVERT                               A45391
         LABEL 'ADDR CONTENTS','MACHINE CHECK TRAP'
         LINE
         ROUTINE    CTR409,CONVERT                               A45391
         ROUTINE    CTR425,CONVERT                               A45391
         LABEL 'CPU INTRPT FORCE','RETRY TRAP'
         LINE
         ROUTINE    CTR410,CONVERT                               A45391
         ROUTINE    CTR426,CONVERT                               A45391
         LABEL 'SAR INTRPT FORCE','CPU HIGH TRAP'
         LINE
         ROUTINE    CTR411,CONVERT                               A45391
         ROUTINE    CTR427,CONVERT                               A45391
         LABEL 'PSW RESTART','INT FILE ADAPTR OR SEL CHN 1,2 OR 3'
         LINE
         ROUTINE    CTR412,CONVERT                               A45391
         ROUTINE    CTR428,CONVERT                               A45391
         LABEL 'EC MODE','SEL CHN 1,2,3(IF IFA) OR SEL CHN 4'
         LINE
         ROUTINE    CTR413,CONVERT                               A45391
         ROUTINE    CTR429,CONVERT                               A45391
         LABEL 'SYS CTRL INTRPT','MPX TRAP'
         LINE
         ROUTINE    CTR414,CONVERT                               A45391
         ROUTINE    CTR430,CONVERT                               A45391
         LABEL 'TIMER INTRPT FORCE','INT FILE ADAPTR TRAP'
         LINE
         ROUTINE    CTR415,CONVERT                               A45391
         ROUTINE    CTR431,CONVERT                               A45391
         LABEL 'PRTY INTRUPT','STORE-DISPLAY'
         LINE
         ROUTINE   YDUMA,FREECTR
         LABEL ' '
         DC    X'FF'
         DC    XL6'00'
         DC    C'$'
LABELS   EQU   *
         LSTART
         END
