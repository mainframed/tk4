         SPACE 2
*  LINE MACRO     LINE MACRO     LINE MACRO     LINE MACRO            *
         MACRO
&NAME    LINE  &DATA,&LABEL,&SKIP=
.*                            THIS MACRO ESTABLISHES THE MARGINS OR
.*                                 COLUMN SETTINGS FOR EACH LINE. IT
.*                                 GENERATES NECESSARY CARRIAGE CONTROL
.*                                 ENTRIES. LASTLY IT DETERMINES THE
.*                                 NUMBER OF ENTRIES ASSOCIATED WITH
.*                                 THE PREVIOUS LINE AND STORES THAT #
.*                                 INTO THE APPROPRIATE BYTE.
.*                            &DATA(1) - CHARACTER POSITION TO BEGIN
.*                                 DATA.
.*                            &DATA(2) - # OF SPACES BETWEEN SUCCESSIVE
.*                                 DATA COLUMN STARTING CHARACTERS.
.*                            &LABEL(1) - CHAR. POS. TO BEGIN LABELS.
.*                            &LABEL(2) - # SPACES BETWEEN LINE'S LABEL
.*                                 STARTING CHARACTERS.
.*                            &SKIP= - # OF LINES TO ADVANCE CARRIAGE
.*                                 TO BEGIN NEXT PRINTED LINE.
.*                            NEW ENTRIES ARE GENERATED ONLY WHEN
.*                                 NECESSARY. OMISSION OF ITEMS MEANS
.*                                 THEY HAVE NOT CHANGED SINCE PREVIOUS
.*                                 SETTINGS. A LINE MACRO IS REQUIRED
.*                                 FOR EACH PRINTED LINE. IF NO SETTING
.*                                 CHANGES ARE REQUIRED ALL OPERANDS
.*                                 ARE OMITTED IN WHICH CASE ONLY THE
.*                                 # OF ENTRIES FOR THE PREVIOUS LINE
.*                                 IS COMPUTED. THIS MACRO MUST BE THE
.*                                 FIRST MACRO INSTRUCTION ISSUED FOR
.*                                 THE SUBJECT LINE
         GBLA  &DB,&DT,&LB,&LT,&NRENTS
         GBLA  &LASTCC,&INITIAL
         GBLC  &NRENTSX
         GBLC  &CARRCON
         GBLB  &TEST
         LCLA  &S
&NAME    DS    0C
         AIF   (&INITIAL EQ 0).FIRSTLN
         LINEND
         AGO   .NTFIRST
.FIRSTLN ANOP
&NRENTSX SETC  'N&SYSNDX'
&INITIAL SETA  1
N&SYSNDX EQU   *
.NTFIRST ANOP
         DC    AL1(0)
         AIF   ('&DATA(1)' EQ '').CKDTABS
         AIF   (&DATA(1) EQ &DB).CKDTABS
&DB      SETA  &DATA(1)
         AGO   .AA
.CKDTABS AIF   ('&DATA(2)' EQ '').NCDATA
         AIF   (&DATA(2) EQ &DT).NCDATA
         AGO   .CC
.AA      AIF   ('&DATA(2)' EQ '').BB
         AIF   (&DATA(2) EQ &DT).BB
.CC      ANOP
&DT      SETA  &DATA(2)
.BB      DC    XL2'FFFE'
         DC    FL1'&DB'
         DC    FL1'&DT'
&NRENTS  SETA  &NRENTS+1
.NCDATA  ANOP
         AIF   ('&LABEL(1)' EQ '').CKLTABS
         AIF   (&LABEL(1) EQ &LB).CKLTABS
&LB      SETA  &LABEL(1)
         AGO   .AAA
.CKLTABS AIF   ('&LABEL(2)' EQ '').NCLABEL
         AIF   (&LABEL(2) EQ &LT).NCLABEL
         AGO   .CCC
.AAA     AIF   ('&LABEL(2)' EQ '').BBB
         AIF   (&LABEL(2) EQ &LT).BBB
.CCC     ANOP
&LT      SETA  &LABEL(2)
.BBB     DC    XL2'FFFF'
         DC    FL1'&LB'
         DC    FL1'&LT'
&NRENTS  SETA  &NRENTS+1
.NCLABEL ANOP
         AIF   ('&SKIP' NE '').CONT
         AIF   (&TEST EQ 0).NOCHANG
&S       SETA  &LASTCC
         AGO   .DEFAULT
.CONT    ANOP
         AIF   (&TEST EQ 0).AB
&S       SETA  &SKIP
.DEFAULT ANOP
         ORG   &CARRCON+3
         DC    AL.3(0),AL.2(&S),AL.3(1)
         ORG
&LASTCC  SETA  &S
&TEST    SETB  0
         AGO   .DD
.AB      AIF   (&SKIP EQ &LASTCC).NOCHANG
A&SYSNDX DC    XL2'FFFB'
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
         DC    FL1'9'
&LASTCC  SETA  &SKIP
&TEST    SETB  1
&CARRCON SETC  'A&SYSNDX'
&NRENTS  SETA  &NRENTS+1
.DD      ANOP
.NOCHANG ANOP
         MEND
         EJECT
         SPACE 2
*  ROUTINE MACRO     ROUTINE MACRO     ROUTINE MACRO     ROUTINE MACRO*
         MACRO
&NAME    ROUTINE &LOGITEM,&RNAME
         GBLC  &DSECT,&CSECT
         GBLC  &ITEM(1000)
         GBLA  &SHIFT(1000),&ITEMNBR
         GBLA  &NRENTS
         LCLA  &ISHIFT,&NDX
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOG ITEM NOT DEFINED'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&NAME    DC    AL.12(&LOGITEM-&DSECT),XL.4'D'
         DC    AL.4(&ISHIFT),AL.12(&RNAME-&CSECT)
&NRENTS  SETA  &NRENTS+1
         MEND
*  DSGEN MACRO     DSGEN MACRO     DSGEN MACRO     DSGEN MACRO        *
         SPACE 2
         MACRO
&NAME    DSGEN
.*                            THIS MACRO GENERATES ONE DSECT WORD
.*                                 FORMATTED FOR THE SUBJECT LOG RECORD
.*                                 EACH OPERAND HAS TWO SUB LISTS. THE
.*                                 FIRST IS THE NAME OF THE LOG ITEM
.*                                 WHILE THE SECOND IS THE # OF BITS TO
.*                                 ALLOCATE FOR THIS ITEM. ITEMS MUST
.*                                 BE DEFINED CONTIGUOUSLY WITHOUT GAPS
.*                                 UNUSED BIT GROUPS MUST BE GIVEN
.*                                 DUMMY NAMES. THE NAMES PROVIDED FOR
.*                                 THE LOG ITEMS MAY THEN BE USED IN
.*                                 THE CONVERSION MACRO INSTRUCTIONS.
         GBLC &ITEM(1000)
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000)
         LCLB  &ONLY1,&CTIND
         LCLA  &START1,&START2,&END1,&END2
         LCLC  &SYMBOL,&EQUSYM
         LCLA  &OP,&COUNT,&BYTE,&EQUCNT
         ACTR  100000
.START   AIF   (N'&SYSLIST(&OP+1) LT 3).LOOP
         AIF   ('&SYSLIST(&OP+1,3)' EQ 'EQU').LOOP     TEST FOR EQU
  AIF   ('&SYSLIST(&OP+1,3)' EQ '' AND '&SYSLIST(&OP+1,4)' EQ '').ERR1
  AIF   ('&SYSLIST(&OP+1,3)' EQ '' OR '&SYSLIST(&OP+1,4)' EQ '').ERR1
         AIF   ('&SYSLIST(&OP+1,3)' GT '&SYSLIST(&OP+1,4)').ERR3
&START1  SETA  &SYSLIST(&OP+1,3)        GET START COUNT OF 1
&START2  SETA  &SYSLIST(&OP+1,4)        GET FIRST END COUNT
         AGO   .SET2A                   BRANCH AROUND
.ERR1    MNOTE '**FIRST SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.SET2A   AIF   ('&SYSLIST(&OP+1,5)' EQ ''AND '&SYSLIST(&OP+1,6)' EQ '' X
               ).SET2                   TEST FOR NO SECOND
  AIF   ('&SYSLIST(&OP+1,5)' EQ '' OR '&SYSLIST(&OP+1,6)' EQ '').ERR2
         AIF   ('&SYSLIST(&OP+1,5)' GT '&SYSLIST(&OP+1,6)').ERR3
&END1    SETA  &SYSLIST(&OP+1,5)        GET START COUNT OF 2
&END2    SETA  &SYSLIST(&OP+1,6)        GET END COUNT OF 2
         AGO   .LOOP
.SET2    ANOP
&ONLY1   SETB  1                        INDICATE ONLY ONE CONCATENATION
         AGO   .LOOP
.ERR2    MNOTE '**SECOND SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.ERR3    MNOTE '**START GREATER THAN END CONCATENATION**'
         MEXIT
.LOOP    ANOP
&OP      SETA  &OP+1
         AIF   (&OP GT N'&SYSLIST).DONE      TEST IF ALL DONE
&ITEMNBR SETA  &ITEMNBR+1
         AIF   ('&SYSLIST(&OP,2)' NE '').OK1
         MNOTE '**NULL BIT COUNT FIELD**'
         MEXIT
.OK1     ANOP
&SYMBOL  SETC  '&SYSLIST(&OP,1)'
         AIF   ('&SYMBOL' NE '').OK
*              *****     LOG ITEM SYMBOL NOT PROVIDED     *****
         AIF   ('&SYSLIST(&OP,3)' NE 'EQU').CNT
         AGO   .START                   GET NEXT
.OK      AIF   (N'&SYSLIST(&OP) LT 3).NO3    TEST FOR OLD FORMAT
         AIF   ('&SYSLIST(&OP,3)' EQ 'EQU').EQU   TEST FOR EQU
         AIF   (&ONLY1).OK2             TEST FOR ONLY ONE CONCAT
&SYMBOL  SETC  '&SYMBOL.&START1.&END1'       GET 1 AND 2 CONCAT
         AGO   .NO3                     BRANCH AROUND
.OK2     ANOP
&SYMBOL  SETC  '&SYMBOL.&START1'        GET 1 CONCATENATED
.NO3     ANOP
&SYMBOL  EQU   *+&BYTE
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL IN GLOBAL
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)
&SHIFT(&ITEMNBR) SETA &COUNT-&BYTE*8
.CNT     ANOP
&CTIND   SETB  1                        SET COUNT INDICATOR
&COUNT   SETA  &COUNT+&SYSLIST(&OP,2)
&BYTE    SETA  &COUNT/8
         AIF   (N'&SYSLIST(&OP) LT 3).START  TEST FOR OLD FORMAT
         AIF   (&ONLY1).TSTST           TEST FOR ONLY ONE CONCAT
         AIF   (&END1 EQ &END2).TSTST   TEST FOR SECOND END
&END1    SETA  &END1+1                  INCREMENT COUNT
&OP      SETA  &OP-1                    DECREMENT INCREMENT
         AGO   .LOOP                    GENERATE NEXT
.TSTST   ANOP
         AIF   (&START1 EQ &START2).LPDONE   TEST FOR END
         AIF   (&ONLY1).NSET1           TEST FOR ONLY ONE CONCAT
&END1    SETA  &SYSLIST(&OP,5)          RE-INIT SECOND START COUNT
.NSET1   ANOP
&OP      SETA  &OP-1                    DECREMENT INDEX
&START1  SETA  &START1+1                INCREMENT FIRST COUNT
         AGO   .LOOP                    GO DO NEXT
.LPDONE  ANOP
&ONLY1   SETB  0                        CLEAR INDICATOR
         AGO   .START                   GO TEST FOR MORE SUB-LISTS
.DONE    AIF   (&COUNT-&COUNT/8*8 NE 0).ERR  TEST FOR MULTIPLE OF EIGHT
         AIF   (&CTIND EQ 0).END        NO DS IF NO COUNT
&COUNT   SETA  &COUNT/8                 GET NUMBER OF BYTES
&NAME    DS    &COUNT.C
.END     MEXIT
.ERR     MNOTE '**BIT COUNT FLDS DO NOT TOTAL MULTIPLE OF 8**'
         MEXIT
.EQU     AIF   ('&SYSLIST(&OP,4)' NE '').EQU1     TEST FOR NULL LABEL
.ERR4    MNOTE '**EQU OPERAND OMITTED OR NOT FOUND**'
         MEXIT
.EQU1    AIF   (&SYSLIST(&OP,2) LT 16).EQU2  COUNT OVER FIFTEEN
*****               THE FOLLOWING STATEMENT                *****
*****     NUMBER OF BITS EXCEED 15 - DO NOT USE AS BIN     *****
.EQU2    ANOP
&EQUCNT  SETA  0                        CLEAR COUNTER
&EQUSYM  SETC  '&SYSLIST(&OP,4)'        GET EQU OPERAND
.EQULOP  ANOP
&EQUCNT  SETA  &EQUCNT+1                INCREMENT INDEX
         AIF   ('&ITEM(&EQUCNT)' EQ '&EQUSYM').EQUOUT  LABEL FOUND?
         AIF   (&EQUCNT EQ &ITEMNBR).ERR4    ALL TESTED?
         AGO   .EQULOP                  NO-GET NEXT
.EQUOUT  ANOP
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL NAME
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)    GET NUMBER OF BITS
&SHIFT(&ITEMNBR) SETA &SHIFT(&EQUCNT)   GET SHIFT COUNT
&SYMBOL  EQU   &EQUSYM                  THIS SYMBOL EQUATED
         AGO   .START                   RETURN FOR NEXT
         MEND
         MACRO
         LINEND
.*                            THIS MACRO IS USED ONLY BY THE LINE
.*                                 MACRO TO SET THE NUMBER OF ENTRIES
.*                                 ASSOCIATED WITH EACH LINE.
         GBLA  &NRENTS
         GBLC &NRENTSX
         ORG   &NRENTSX
         DC    FL1'&NRENTS'
         ORG
&NRENTS  SETA  0
B&SYSNDX EQU   *
&NRENTSX SETC  'B&SYSNDX'
         MEND
         SPACE 2
         EJECT
*  LABEL MACRO     LABEL MACRO     LABEL MACRO     LABEL MACRO        *
         SPACE 2
         MACRO
&NAME    LABEL &LABEL1,&LABEL2,&LABEL3,&LABEL4,&LABEL5,&LABEL6,        C
               &LABEL7,&LABEL8
.*                            THIS MACRO ALLOWS UP TO ACHT LABELS TO
.*                                 BE SPECIFIED FOR A GIVEN LINE. THE
.*                                 LABELS SHOULD BE ENCLOSED IN QUOTA-
.*                                 TION MARKS. THE COLUMN AND LINE END
.*                                 CONTROLS WILL BE INSERTED BY THE
.*                                 MACRO. OMITTED OPERANDS MEAN NO
.*                                 LABEL REQUIRED FOR RESPECTIVE
.*                                 COLUMN. THIS MACRO WILL ALSO ALERT
.*                                 THE PROGRAMMER TO EXACTLY WHERE THE
.*                                 TABLE MUST BE BROKEN IF NECESSARY
.*                                 TO AVOID EXCEEDING THE MAXIMUM LIMIT
         GBLC &LABELS(2000)
         GBLC  &LBL(100)
         GBLA  &LBLCTR(100)
         GBLA  &LABELNR
         GBLA  &NRENTS,&LPTR
         LCLC  &MARGIN,&TACK
         LCLC  &TEXT
         LCLA  &OP,&K,&START,&NRCHAR,&REMAIN
&MARGIN  SETC  '*'
         AIF   ('&NAME' EQ '').LOOPOUT
&LPTR    SETA  &LPTR+1
&LBL(&LPTR) SETC '&NAME'
&LBLCTR(&LPTR) SETA &LABELNR+1
.LOOPOUT ANOP
&OP      SETA  &OP+1
&K       SETA  K'&SYSLIST(&OP)
         AIF (&K GE 2).NORM
&K       SETA  2
.NORM    ANOP
&START   SETA  2
         AIF (&OP LT N'&SYSLIST).NOTLAST
&MARGIN  SETC  '$'
.NOTLAST ANOP
&NRCHAR  SETA  8
&TACK    SETC  ''
.LOOPIN  ANOP
&REMAIN  SETA  &K-&START
         AIF (&REMAIN GE 8).MORE
&TACK    SETC  '&MARGIN'
&NRCHAR  SETA  &REMAIN
.MORE    ANOP
&TEXT    SETC  ''
         AIF (&REMAIN EQ 0).ENDTEXT
&TEXT    SETC  '&SYSLIST(&OP)'(&START,&NRCHAR)
.ENDTEXT ANOP
&LABELNR SETA  &LABELNR+1
&LABELS(&LABELNR) SETC '&TEXT'.'&TACK'
&START   SETA  &START+8
         AIF ('&TACK' EQ '').LOOPIN
         AIF ('&TACK' EQ '*').LOOPOUT
         MEND
         SPACE 2
         MACRO
         LSTART
.*                            THIS MACRO IS ISSUED WHEN THE LABEL AREA
.*                                 OF THE TABLE IS TO BEGIN.
         GBLC &LABELS(2000)
         GBLA  &LABELNR
         GBLC  &LBL(100)
         GBLA  &LBLCTR(100)
         LCLA  &NDX,&CTR
         LINEND
&CTR     SETA  1
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   (&LBLCTR(&CTR) NE &NDX).NOLBL
&LBL(&CTR) DC  C'&LABELS(&NDX)'
&CTR     SETA  &CTR+1
         AGO   .LOOPCTL
.NOLBL   ANOP
         DC    C'&LABELS(&NDX)'
.LOOPCTL AIF   (&NDX LT &LABELNR).LOOP
         MEND
         SPACE 2
*  BIN MACRO     BIN MACRO     BIN MACRO     BIN MACRO     BIN MACRO  *
         SPACE 2
         MACRO
         BIN   &LOGITEM,&SKIP$OR
.*                                 &LOGITEM - NAME OF ITEM IN LOG
.*                                      RECORD DSECT
.*                                 &SKIP$OR - NBR OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES
.*                                      TO BACK UP FROM COLUMN FOR
.*                                      START OF PRINTING. THE LETTER
.*                                      B PRECEEDS THE NUMBER (B5) IF
.*                                      THE LATTER IS DESIRED. OMISSION
.*                                      OF THIS OPERAND FORCES OPTION 2
.*                                      WITH BACKUP SPACING EQUAL TO
.*                                 THE NUMBER OF BITS IN THE ITEM
.*                                 DEFINITION (VIA MACRO 'DSGEN').
.*                            A LIMIT OF 15 BITS IS IMPOSED FOR THE
.*                                 TOTAL NUMBER OF BITS TO PRINT.
         GBLC &ITEM(1000)
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000),&NRENTS
         GBLC  &DSECT
         LCLB  &B
         LCLA  &IBITS,&NDX,&ISHIFT,&K
         LCLA  &TEMP,&T
         LCLC  &S
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'YOU BLEW IT'
         ROUTINE DUM,SKIPPER
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
&T       SETA  &IBITS-1
&B       SETB  0
         AIF   ('&SKIP$OR' EQ '').BACKUP
&K       SETA  K'&SKIP$OR
&B       SETB  ('&SKIP$OR'(1,1) EQ 'B')
&S       SETC  '&SKIP$OR'(&B+1,&K-&B)
&T       SETA  &S
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
&TEMP    SETA  &ISHIFT
A&SYSNDX DC    AL.12(&LOGITEM-&DSECT),XL.4'&TEMP'
         AIF (&IBITS EQ 1 AND &B EQ 0).OUT
         ORG   A&SYSNDX
&B       SETB  1
         DC    AL.12(&LOGITEM-&DSECT),XL.4'C'
         DC    BL.1'&B',AL.7(&T),AL.4(&IBITS),FL.4'&ISHIFT'
.OUT     ANOP
         MEND
         EJECT
*  HEX MACRO     HEX MACRO     HEX MACRO    HEXN MACRO     HEX MACRO  *
         SPACE 2
         MACRO
         HEX   &LOGITEM,&SKIP$OR,&BYTES
.*                            THIS MACRO FACILITATES GENERATION OF THE
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE
.*                                 CONVERSIONS.
.*                            &LOGITEM - NAME OF DATA ITEM TO BE
.*                                 CONVERTED
.*                            &SKIP$OR - NUMBER OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO
.*                                 BACK UP FROM COLUMN FOR START OF
.*                                 PRINTING. THE LETTER B PRECEEDS THE
.*                                 NUMBER (B8) IF THE LATTER OPTION IS
.*                                 DESIRED. OMISSION OF THIS OPERAND
.*                                 FORCES OPTION 2 WITH BACKUP SPACING
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR
.*                                 IMPLICITLY B).
.*                            &BYTES - NUMBER OF TOTAL INPUT BYTES TO
.*                                 PROCESS. THIS NUMBER IS SUFFIXED
.*                                 WITH AN L,R, OR B TO STIPULATE
.*                                 PRINTING OF THE LEFT HALF, RIGHT
.*                                 HALF, OR BOTH HALVES OF THE BYTE
.*                                 RESPECTIVELY. OMISSION OF THIS
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES-
.*                                 SARY. THIS MACRO MUST BE THE FIRST
.*                                 MACRO INSTRUCTION ISSUED FOR THE
.*                                 SUBJECT LINE(S).
         GBLC &ITEM(1000),&DSECT
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000),&NRENTS
         LCLB  &B
         LCLA  &IBITS,&NDX,&ISHIFT,&K,&T,&CODE,&BYTESP
         LCLC  &S,&LETTER
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOG ITEM NOT DEFINED'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
&CODE    SETA  1
&K       SETA  K'&BYTES
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK
         MNOTE *,'BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL'
         MEXIT
.OK      AIF   ('&BYTES' EQ '').USEDEFN
&LETTER  SETC  '&BYTES'(&K,1)
&S       SETC  '&BYTES'(1,&K-1)
&BYTESP  SETA  &S
         AIF   ('&LETTER' EQ 'B').BOTH
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).OK2
.ERR     MNOTE *,'DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY'
         MEXIT
.USEDEFN ANOP
&BYTESP  SETA  &IBITS/8
.BOTH    AIF   (&ISHIFT NE 0).ERR
&CODE    SETA  3
&T       SETA  &BYTESP*2-1
&S       SETC  '&T'
.OK2     AIF   (&ISHIFT EQ 0).L
&CODE    SETA  2
.L       ANOP
&B       SETB  1
         AIF   ('&SKIP$OR' EQ '').BACKUP
&K       SETA  K'&SKIP$OR
&B       SETB  ('&SKIP$OR'(1,1) EQ 'B')
&S       SETC  '&SKIP$OR'(&B+1,&K-&B)
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
         DC    AL.12(&LOGITEM-&DSECT),XL.4'A'
         DC    BL.1'&B',FL.7'&S',FL.4'&BYTESP',FL.4'&CODE'
.OUT     ANOP
         MEND
         MACRO
&NAME    SPECIAL  &ROUTINE,&PARAM,&SPACE=                        XM9111
.*                            THIS MACRO GENERATES A SPECIAL ROUTINE
.*                                 ENTRY TO BE PROCESSED BY THE SUM. M.
.*                            &ROUTINE - SYMBOL ON SPECIAL ROUTINE EWT.
.*                            &PARAM - AN 8 BIT BINARY REPRESENTATION
.*                                 TO OCCUPY THE 'MASK' FIELD BUT TO BE
.*                                 INTERPRETED AS AN ARGUMENT OF THE
.*                                 SPECIAL ROUTINE.
.*                            &SPACE - THE NUMBER OF 2BYTE COUNTERS TO
.*                                 ALLOCATE FOR REQUIRED PROCESSING.
         GBLC  &CSECT
         GBLA  &COUNTR
         LCLA  &ADD
&NAME    DC    AL1(128)                                          XM9111
         DC    BL.8'&PARAM'
         DC    AL2(&ROUTINE-&CSECT)
         DC    AL2(&COUNTR)
&ADD     SETA  1
         AIF   ('&SPACE' EQ '').NORM
&ADD     SETA  &SPACE
.NORM    ANOP
&COUNTR  SETA  &COUNTR+&ADD
         MEND
         MACRO
         SUM   &LOGITEM,&MASK
.*                            THIS MACRO GENERATES A NORMAL EDIT ENTRY
.*                                 FOR PROCESSING BY THE SUMMARY MODULE
.*                            &LOGITEM - NAME OF DATA ITEM TO BE SUMMED
.*                            &MASK - BYTE MASK FOR BITS TO BE TESTED.
.*                                 THIS OPERAND SHOULD BE OMITTED FOR
.*                                 SINGLE BIT ITEMS IN WHICH CASE THE
.*                                 MASK WILL BE SET ACCORDING TO THE
.*                                 OFF BYTE BIT DISPLACEMENT OF THE
.*                                ITEM AS DEFINED BY THE MACRO 'DSGEN'
         GBLA  &COUNTR,&ITEMNBR,&BITS(1000),&SHIFT(1000)
         GBLC  &ITEM(1000),&DSECT
         LCLA  &IBITS,&NDX,&ISHIFT,&M,&BITNBR
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOGITEM NOT FOUND'
         MEXIT
.FOUND   ANOP
         DC    AL1(0)
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
         AIF   ('&MASK' EQ '').FORM
         DC    B'&MASK'
         AGO   .ITEM
.FORM    ANOP
&BITNBR  SETA  &ISHIFT-7
&BITNBR  SETA  0-&BITNBR
&M       SETA  1
.LOOP2   ANOP
         AIF   (&BITNBR EQ 0).GOTIT
&M       SETA  &M*2
&BITNBR  SETA  &BITNBR-1
         AGO   .LOOP2
.GOTIT   ANOP
         DC    AL1(&M)
.ITEM    DC    AL2(&LOGITEM-&DSECT)
         DC    AL2(&COUNTR)
&COUNTR  SETA  &COUNTR+1
         MEND
         GBLC  &DSECT
         GBLC  &CSECT
&CSECT   SETC  'IFCSXXXB'
&DSECT   SETC  'XXXB'
         TITLE 'IFCSXXXB-SUMMARY TABLE FOR 3420 TAPES'
IFCSXXXB CSECT
XXXB     DSECT
         DSGEN (CLASSRC,8),(SYSREL,8),(SWITCHES,16),(SPARES,32)
         DSGEN (DATE,32),(TIME,32)
         DSGEN (SPARE1,8),(CPUSER,24),(CPUID,16),(SPARE2,16)
         DSGEN (JOBID,64)
         DSGEN (COMMCODE,8),(DATAADDR,24),(FLAGS,8),(RESERVED,8),      C
               (CCWCOUNT,16)
         DSGEN (CSWKEY,8),(COMMADDR,24),(ATTEN,1),(STATMOD,1),         C
               (CONTUEND,1),(BUSY,1),(CHANEND,1),(DEVEND,1),           C
               (UNITCHK,1),(UNITEXEP,1),(PCI,1),(WRNGLENG,1),          C
               (PROGCHK,1),(PROTCHK,1),(DATACHK,1),(CNTLCHK,1),        C
               (IFCTLCHK,1),(CHAINCHK,1),(CSWCOUNT,16)
         DSGEN (DDCOUNT,8),(SECONCUA,24),(DEVTYPE,32)
         DSGEN (SDRCOUNT,8),(PRIMCUA,24),(IORETRYS,16),(SNSBYTES,16)
         DSGEN (VOLID,48),(BLKLENG,16)
         DSGEN (DUM2,32),(TEMPRDS,8),(TEMPWRTS,8),(SIOCNT,16)
         DSGEN (PERMRDS,8),(PERMWRTS,8),(NOISEBLK,8),(MODESET,8)
         DSGEN (ERASEGPS,16),(CLNRACTS,16)
         DSGEN (DUM3,8),(NOISE,8),(RWVRC,8),(MTELRCR,8)
         DSGEN (EDCCRC,8),(ENVCKVRC,8),(OVERRUN,4),(SKEWCHK,4),        C
               (CCOMPARE,4),(WRTTRVRC,4)
         DSGEN (PEIDCHK,1),(MASKEXP,6),(PARITY,1),(TRKINERR,8),        C
               (WRTTMCHK,4),(STRDCHK,4),(PARTREC,4),(EXCPAMB,4)
         DSGEN  (ORDROP,4),(FEEDTHRU,4),(EXP,4),(EARLBGRD,4),          C
               (EARLNDRD,4),(SLBGRD,4),(SLWNDRD,4),(VELRETRY,4),       C
               (EXP2,4),(VELCHNG,4),(EXP3,8),(BACKWARD,8),             C
               (BUSOCHK,4),(ALUHRDER,4)
         DSGEN (SNB000,1),(SNB001,1),(SNB002,1),(SNB003,1),(SNB004,1), C
               (SNB005,1),(SNB006,1),(SNB007,1),(SNB010,1),(SNB011,1), C
               (SNB012,1),(SNB013,1),(SNB014,1),(SNB015,1),(SNB016,1), C
               (SNB017,1),(SNB020,1),(SNB021,1),(SNB022,1),(SNB023,1), C
               (SNB024,1),(SNB025,1),(SNB026,1),(SNB027,1),(SNB030,1), C
               (SNB031,1),(SNB032,1),(SNB033,1),(SNB034,1),(SNB035,1), C
               (SNB036,1),(SNB037,1)
         DSGEN (SNB040,1),(SNB041,1),(SNB042,1),(SNB043,1),(SNB044,1), C
               (SNB045,1),(SNB046,1),(SNB047,1),(SNB050,1),(SNB051,1), C
               (SNB052,1),(SNB053,1),(SNB054,1),(SNB055,1),(SNB056,1), C
               (SNB057,1),(SNB060,1),(SNB061,1),(SNB062,1),(SNB063,1), C
               (SNB064,1),(SNB065,1),(SNB066,1),(SNB067,1),(SNB070,1), C
               (SNB071,1),(SNB072,1),(SNB073,1),(SNB074,1),(SNB075,1), C
               (SNB076,1),(SNB077,1)
         DSGEN (SNB080,1),                                             C
               (SNB081,1),(SNB082,1),(SNB083,1),(SNB084,1),(SNB085,1), C
               (SNB086,1),(SNB087,1),(SNB090,1),(SNB091,1),(SNB092,1), C
               (SNB093,1),(SNB094,1),(SNB095,1),(SNB096,1),(SNB097,1), C
               (SNB100,1),(SNB101,1),(SNB102,1),(SNB103,1),(SNB104,1), C
               (SNB105,1),(SNB106,1),(SNB107,1),(SNB110,1),(SNB111,1), C
               (SNB112,1),(SNB113,1),(SNB114,1),(SNB115,1),(SNB116,1), C
               (SNB117,1)
         DSGEN (SNB120,1),(SNB121,1),(SNB122,1),(SNB123,1),(SNB124,1), C
               (SNB125,1),(SNB126,1),(SNB127,1),(TCSERIAL,16),         C
               (TUSERIAL,16),(SNB170,1),(SNB171,1),                    C
               (SNB172,1),(SNB173,1),(SNB174,1),(SNB175,1),(SNB176,1), C
               (SNB177,1),(SNB180,1),(SNB181,1),(SNB182,1),(SNB183,1), C
               (SNB184,1),(SNB185,1),(SNB186,1),(SNB187,1),(SNB190,1), C
               (SNB191,1),(SNB192,1),(SNB193,1),(SNB194,1),(SNB195,1), C
               (SNB196,1),(SNB197,1)
         DSGEN (SNB200,1),(SNB201,1),(SNB202,1),(SNB203,1),(SNB204,1), C
               (SNB205,1),(SNB206,1),(SNB207,1),(SNB210,1),(SNB211,1), C
               (SNB212,1),(SNB213,1),(SNB214,1),(SNB215,1),(SNB216,1), C
               (SNB217,1),(SNB220,1),(SNB221,1),(SNB222,1),(SNB223,1), C
               (SNB224,1),(SNB225,1),(SNB226,1),(SNB227,1),(SNB230,1), C
               (SNB231,1),(SNB232,1),(SNB233,1),(SNB234,1),(SNB235,1), C
               (SNB236,1),(SNB237,1)
IFCSXXXB CSECT
         USING XXXB,R2
         USING *,R9
*                                                                     *
*                  SUMMARY MODULE FOR DEVICE 3420                     *
*                                                                     *
         DC    A(ENTRIES)
         DC    A(PEDIT)
REG8     DC    F'0'
SCSIZE   DC   H'280'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8                                               @Z427VLS
R9       EQU   9
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
L0       EQU   0
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4
L5       EQU   5
L6       EQU   6
L8       EQU   8
L9       EQU   9                                               @Z427VLS
L10      EQU   10
L12      EQU   12
L16      EQU   16
L20      EQU   20                                              @Z427VLS
L24      EQU   24
L28      EQU   28
DISMOUNT EQU   X'84'
F0       EQU   X'F0'
FF       EQU   X'FF'
*                                                                     *
* THIS ROUTINE WILL PUT A HIGH AND LOW DATE INTO THE COUNTER AREA.    *
* THE FIRST TIME IT PUTS THE SAME DATE IN BOTH AREAS.  WITH EACH NEW  *
* RECORD A COMPARE IS DONE FOR A LOWER AND HIGHER DATE.               *
*                                                                     *
SETDATES CLC   L0(L4,R3),ZEROES   IS DATE IN COUNTER AREAS ZEROES
         BNE   CHKLO
         MVC   L0(L4,R3),DATE     MOVE DATE TO LO AREA
         MVC   L4(L4,R3),DATE     MOVE DATE TO HI AREA
         B     RETURN
CHKLO    CLC   L0(L4,R3),DATE     IS LOW DATE LOWER THAN RECORD DATE
         BL    CHKHI              YES CHECK HIGH
         MVC   L0(L4,R3),DATE     NO - MOVE IN RECORD DATE
CHKHI    CLC   L4(L4,R3),DATE     IS HIGH DATE HIGHER THAN RECORD DATE
         BH    RETURN             YES- RETURN
         MVC   L4(L4,R3),DATE     NO- MOVE IN RECORD DATE
RETURN   BR    R14                RETURN
DEVICE   MVC   L0(L4,R3),DEV3420  MOVE IN DEVICE TYPE
         ST    R5,SAVE5           SAVE REGISTER FOR CALLING PGM
         BR    R14
SAVE5    DC    F'0'
DEV3420  DC    CL4'3420'
*                                                                     *
* THIS ROUTINE WILL KEEP TRACK OF UP TO 10 VOLUME LABELS AND THE      *
* NUMBER OF OCCURRENCES .  EACH ENTRY CONSISTS OF 8 BYTES-6 BYTES FOR *
* THE VOLUME LABEL AND 2 BYTES FOR THE COUNTER.                       *
VOLUMES  STM   R5,R7,STOREREG     SAVE REGISTERS                 XM9111
         MVC   L2(L2,R3),SNSBYTES PUT SENSE COUNT IN SUM AREA    XM9111
         LR    R5,R3              GET BUFFER POINTER            SA58784
         TM    SWITCHES+L1,DISMOUNT IS THIS A DISMOUNT RECORD    XM9111
         BZ    SETUP              NO CHK FOR TU SERIAL NUMBER    XM9111
         OI    SHORTSW,FF         TURN ON DISMOUNT INDICATOR     XM9111
         B     UPPTR              DO NOT MOVE TU SERIAL          XM9111
SETUP    CLC    SNSBYTES(L2),NINER ARE THERE NINE SENSE BYTES   SA58784
         BNH   UPPTR              IF NINE SENSE BYTES NO TU SER SA58784
         MVC   L0(L2,R5),TUSERIAL MOVE THE TAPE UNIT SERIAL TO CNTR
UPPTR    LA    R5,L4(R5)          INCREMENT PAST CURRENT COUNTER XM9111
         LA    R6,L10             PUT # OF VOLUME ENTRIES IN REG
VOLZERO  CLC   VOLID(L6),ZEROES   IS VOLID IN RECORD HEX ZEROES
         BE    GOBACK             YES DO NOT PUT IN TABLE
         CLC   L0(L6,R5),ZEROES   IS THIS SPACE HEX ZEROES       XM9025
         BNE   COMPVOL            NO GO TO COMPARE VOLUME LABELS
         MVC   L0(L6,R5),VOLID    PUT IN NEW LABEL
UPCOUNT  LH    R7,L6(R5)          GET COUNTER FOR LABEL
         LA    R7,L1(R7)          INCREMENT COUNTER
         STH   R7,L6(R5)          PUT UPDATED COUNTER BACK
         B     GOBACK
COMPVOL  CLC   L0(L6,R5),VOLID    DOES VOLID = RECORD VOLID
         BE    UPCOUNT            YES GO TO INCREMENT COUNT
         LA    R5,L8(R5)          NO GO TO NEW LABEL ENTRY
         BCT   R6,VOLZERO         ARE 10 ENTRIES EXHAUSTED
GOBACK   LM    R5,R7,STOREREG     RESTORE REGISTERS
         BR    R14                RETURN
*                                                                     *
* THIS ROUTINE WILL PUT FAILING CCW'S INTO A COUNTER AREA AND KEEP    *
* ACCOUNT OF THE NUMBER OF OCCURRENCES. THE MAXIMUM NUMBER OF CCW'S   *
* IS 24. EACH ENTRY IS 4 BYTES LONG-FIRST BYTE IS THE CCW, SECOND     *
* BYTE IS UNUSED AND THE LAST TWO BYTES ARE THE COUNTER.              *
*                                                                     *
FAILCCW  STM   R5,R7,STOREREG     SACE REGISTERS                 XM9111
         TM    SWITCHES+L1,DISMOUNT CHK FOR DISMOUNT RECORD      XM9111
         BZ    LDPTR              NO CCW FOR DISMOUNT RECORD     XM9111
         LA    R5,SKIPDIS-6       DO NOT SUM SENSE INFO          XM9111
         ST    R5,REG8            UPDATE SUM ENTRY POINTER       XM9111
         B     RETURN2            RETURN CONTROL                 XM9111
LDPTR    LR    R5,R3              GET POINTER TO SUM AREA        XM9111
         LA    R6,L24             PUT # OF CCW ENTRIES IN REG
CCWZERO  CLI   L0(R5),L0          IS CCW ENTRY ZERO
         BNE   COMPCCW            NO GO TO COMPARE CCW'S
         MVC   L0(L1,R5),COMMCODE MOVE CCW TO CCW TABLE
CCWCNT   LH    R7,L2(R5)          GET COUNT FROM CCW TABLE
         LA    R7,L1(R7)          INCREMENT THE COUNT
         STH   R7,L2(R5)          PUT NEW COUNT BACK IN TABLE
         B     RETURN2            GO BACK TO PROCESSING
COMPCCW  CLC   L0(L1,R5),COMMCODE DOES CCW IN TABLE=RECORD CCW
         BE    CCWCNT             YES INCREASE COUNT
         LA    R5,L4(R5)          NO INCREMENT TABLE ENTRY POINTER
         BCT   R6,CCWZERO         ARE 24 ENTRIES EXHAUSTED
RETURN2  LM    R5,R7,STOREREG     RESTORE REGISTERS
         BR    R14                RETURN
*                                                                     *
* THE NEXT ROUTINES WILL TAKE THE COUNTERS FROM THE RECORD AND        *
* ADD THEM TO THE COUNTER AREAS.  HALF BYTE COUNTERS ARE ISOLATED AND *
* THEM ADDED. DEVICE DEPENDENT COUNTERS ARE ADDED ONLY FOR DISMOUNT   *
* RECORDS.                                                            *
*                                                                     *
NOISERTN SR    R5,R5              CLEAR REGISTER
GOON     IC    R5,NOISE           GET QUANTITY TO BE ADDED
ADD      AH    R5,L0(R3)          ADD HALFWORD COUNTER TO IT
         STH   R5,L0(R3)          STORE SUM BACK IN COUNTER AREA
         L     R5,SAVE5           RELOAD REGISTER FIVE
         BR    R14                RETURN
RWVRCRTN SR    R5,R5              CLEAR REGISTER
         IC    R5,RWVRC           GET QUANTIT TO BE ADDED
         B     ADD                GO TO ADD THE COUNTER
MTERTN   SR    R5,R5              CLEAR REGISTER
         IC    R5,MTELRCR         GET QUANTITY TO BE ADDED
         B     ADD                GO TO ADD THE COUNTER
EDCRTN   SR    R5,R5              CLEAR REGISTER
         IC    R5,EDCCRC          GET QUANTITY TO BE ADDED
         B     ADD                GO TO ADD THE COUNTER
ENVRTN   SR    R5,R5              CLEAR REGISTER
         IC    R5,ENVCKVRC        GET QUANTITY TO BE ADDED
         B     ADD                GO TO ADD THE COUNTER
LEFTHALF SRL   R5,L4              ISOLATE THE LOW ORDER BITS OF HI BYTE
         B     ADD                GO TO ADD THE COUNTER
RGHTHALF SLL   R5,L28             SHIFT OUT LOW BITS OF HIGH BYTE
         SRL   R5,L28             SHIFT BYTE BACK TO HIGH POSITION
         B     ADD                GO TO ADD COUNTER
OVERRTN  SR    R5,R5              CLEAR REGISTER
         IC    R5,OVERRUN         GET QUANTITY TO BE ADDED
         B     LEFTHALF           GO TO ISOLATE THE LEFT HALF BYTE
SKEWRTN  SR    R5,R5              CLEAR REGISTER
         IC    R5,OVERRUN         GET QUANTITY TO BE ADDED
         B     RGHTHALF           GO TO ISOLATE RIGHT HALF OF BYTE
CCOMPRTN SR    R5,R5              CLEAR REGISTER
         IC    R5,CCOMPARE        GET QUANTITY TO BE ADDED
         B     LEFTHALF           GO TO ISOLATE THE LEFT HALF BYTE
WRTTRRTN SR    R5,R5              CLEAR REGISTER
         IC    R5,CCOMPARE        GET QUANTITY TO BE ADDED
         B     RGHTHALF           GO TO ISOLATE THE RIGHT HALF BYTE
WRTTMRTN SR    R5,R5              CLEAR REGISTER
         IC    R5,WRTTMCHK        GET QUANTITY TO BE ADDED
         B     LEFTHALF           GO TO ISOLATE THE LEFT HALF BYTE
STRDRTN  SR    R5,R5              CLEAR REGISTER
         IC    R5,WRTTMCHK        GET QUANTITY TO BE ADDED
         B     RGHTHALF           GO TO ISOLATE THE RIGHT HALF BYTE
PARTRTN  SR    R5,R5              CLEAR REGISTER
         IC    R5,PARTREC         GET QUANTITY TO BE ADDED
         B     LEFTHALF           GO TO ISOLATE THE LEFT HALF BYTE
EXCRTN   SR    R5,R5              CLEAR REGISTER
         IC    R5,PARTREC         GET QUANTITY TO BE ADDED
         B     RGHTHALF           GO TO ISOLATE RIGHT HALF BYTE
IBGRTN   SR    R5,R5              CLEAR REGISTER
         IC    R5,ORDROP          GET QUANTITY TO BE ADDED
         B     LEFTHALF           GO TO ISOLATE LEFT HALF BYTE
FEEDRTN  SR    R5,R5              CLEAR REGISTER
         IC    R5,ORDROP          GET QUANTITY TO BE ADDED
         B     RGHTHALF           GO TO ISOLATE RIGHT HALF BYTE
CRCCKRTN SR    R5,R5              CLEAR REGISTER                 S99223
         IC    R5,EXP             GET QUANTITY TO BE ADDED       S99223
         B     LEFTHALF           GO TO ISOLATE LEFT HALF BYTE   S99223
EARLBRTN SR    R5,R5              CLEAR REGISTER
         IC    R5,EXP             GET QUANTITY TO BE ADDED
         B     RGHTHALF           GO TO ISOLATE RIGHT HALF BYTE
EARLERTN SR    R5,R5              CLEAR REGISTER
         IC    R5,EARLNDRD        GET QUANTITY TO BE ADDED
         B     LEFTHALF           GO TO ISOLATE LEFT HALF BYTE
SLWBRTN  SR    R5,R5              CLEAR REGISTER
         IC    R5,EARLNDRD        GET QUANTITY TO BE ADDED
         B     RGHTHALF           GO TO ISOLATE RIGHT HALF BYTE
SLWERTN  SR    R5,R5              CLEAR REGISTER
         IC    R5,SLWNDRD         GET QUANTITY TO BE ADDED
         B     LEFTHALF           GO TO ISOLATE LEFTHALF BYTE
VELRRTN  SR    R5,R5              CLEAR REGISTER
         IC    R5,SLWNDRD         GET QUANTITY TO BE ADDED
         B     RGHTHALF           GO TO ISOLATE RIGHT HALF BYTE
CRECTRTN SR    R5,R5              CLEAR REGISTER                 S99223
         IC    R5,EXP2            GET QUANTITY TO BE ADDED       S99223
         B     LEFTHALF           GO TO ISOLATE LEFT HALF BYTE   S99223
VELCRTN  SR    R5,R5              CLEAR REGISTER
         IC    R5,EXP2            GET QUANTITY TO BE ADDED
         B     RGHTHALF           GO TO ISOLATE RIGHT HALF BYTE
CBCRTN   SR    R5,R5              CLEAR REGISTER                 S99223
         IC    R5,EXP3            GET QUANTITY TO BE ADDED       S99223
         B     LEFTHALF           GO TO ISOLATE LEFT HALF BYTE   S99223
CRCIRTN  SR    R5,R5              CLEAR REGISTER                 S99223
         IC    R5,EXP3            GET QUANTITY TO BE ADDED       S99223
         B     RGHTHALF           GO TO ISOLATE RIGHT HALF BYTE  S99223
TRDSRTN  TM    SHORTSW,FF         IS THIS A DISMOUNT ENTRY
         BCR   8,R14              NO-DO NOT ADD TO COUNTER
         SR    R5,R5              CLEAR REGISTER
         IC    R5,TEMPRDS         GET NUMBER OF TEMP READ ERRORS
         B     ADD                GO TO ADD TO COUNTER
TWRTSRTN TM    SHORTSW,FF         IS THIS A DISMOUNT RECORD
         BCR   8,R14              NO-DO NOT ADD TO COUNTER
         SR    R5,R5              CLEAR REGISTER
         IC    R5,TEMPWRTS        GET NUMBER OF TEMPORARY WRITE ERRORS
         B     ADD                GO TO ADD THEM TO COUNTER
SIORTN   STM   R5,R6,STOREREG+4   SAVE REGISTERS
         TM    SHORTSW,FF         IS THIS A DISMOUNT ENTRY
         BCR   8,R14              NO-DO NO ADD TO COUNTER
         XC    STOREREG(L4),STOREREG ZERO AREA
         MVC    STOREREG+L2(L2),SIOCNT GET SIO COUNT FROM RECORD
         L     R5,STOREREG        PUT IT INTO A REGISTER
         MVC   STOREREG(L4),L0(R3) GET COUNTER ON BOUNDARY
         L     R6,STOREREG        GET COUNTER INTO REGISTER
         AR     R5,R6             ADD THE QUANTITIES
         ST    R5,STOREREG        PUT COUNTER BACK ON BOUNDARY
         MVC   L0(L4,R3),STOREREG PUT IT BACK IN COUNTER AREA
         LM    R5,R6,STOREREG+4   RELOAD REGISTERS
         BR    R14                RETURN
DDNOISER TM    SHORTSW,FF         IS THIS A DISMOUNT RECORD
         BCR   8,R14              NO- DO NO ADD COUNTERS
         SR    R5,R5              CLEAR REGISTER
         IC    R5,NOISEBLK        GET NOISE COUNTER
         B     ADD                GO TO ADD TO COUNTER AREA
ERASERTN TM    SHORTSW,FF         IS THIS A DISMOUNT ENTRY
         BCR   8,R14              NO-DO NOT ADD COUNTERS
         XC    STOREREG(L4),STOREREG CLEAR AREA
         MVC   STOREREG+L2(L2),ERASEGPS                 XA02814/YA04216
         L     R5,STOREREG        PUT NUMBER INTO REG
         B     ADD                GO TO ADD TO COUNTER
CLNRRTN  TM    SHORTSW,FF         IS THIS A DISMOUNT ENTRY
         BCR   8,R14              NO-DO NOT ADD TO COUNTER
         LH    R5,CLNRACTS        LOAD THE COUNTER TO BE ADDED
         XC    STOREREG(L4),STOREREG CLEAR AREA
         MVC   STOREREG+L2(L2),CLNRACTS GET QUANTITY TO BE ADDED
         L     R5,STOREREG        PUT QUANTITY INTO REG
         NI    SHORTSW,L0         TURN OFF DISMOUNT RECORD SWITCH
         B     ADD                RETURN
BACKRTN  SR    R5,R5              CLEAR REGISTER
         IC    R5,BACKWARD        GET COUNTER TO ADD
         B     ADD                GO TO ADD THE COUNTER
BUSRTN   SR    R5,R5              CLEAR REGISTER
         IC    R5,BUSOCHK         GET COUNTER TO ADD
         B     LEFTHALF           GO ISOLATE COUNTER AND ADD
ALURTN   SR    R5,R5              CLEAR REGISTER
         IC    R5,BUSOCHK         GET COUNTER TO ADD
         B     RGHTHALF           GO TO ISOLATE THE COUNTER AND ADD
NINER    DC    H'9'
STOREREG DC    3F'0'
ZEROES   DC    6X'00'                                            XM9025
SHORTSW  DC    X'00'
ENTRIES  DS    0F
         SPECIAL SETDATES,0,SPACE=4
         SPECIAL DEVICE,0,SPACE=2
         SPECIAL VOLUMES,0,SPACE=42
         SPECIAL FAILCCW,0,SPACE=48
         SUM   SNB000
         SUM   SNB001
         SUM   SNB002
         SUM   SNB003
         SUM   SNB004
         SUM   SNB005
         SUM   SNB006
         SUM   SNB007
         SUM   SNB010
         SUM   SNB011
         SUM   SNB012
         SUM   SNB013
         SUM   SNB014
         SUM   SNB015
         SUM   SNB016
         SUM   SNB017
         SUM   SNB020
         SUM   SNB021
         SUM   SNB022
         SUM   SNB023
         SUM   SNB024
         SUM   SNB025
         SUM   SNB026
         SUM   SNB027
         SUM   SNB030
         SUM   SNB031
         SUM   SNB032
         SUM   SNB033
         SUM   SNB034
         SUM   SNB035
         SUM   SNB036
         SUM   SNB037
         SUM   SNB040
         SUM   SNB041
         SUM   SNB042
         SUM   SNB043
         SUM   SNB044
         SUM   SNB045
         SUM   SNB046
         SUM   SNB047
         SUM   SNB050
         SUM   SNB051
         SUM   SNB052
         SUM   SNB053
         SUM   SNB054
         SUM   SNB055
         SUM   SNB056
         SUM   SNB057
         SUM   SNB060
         SUM   SNB061
         SUM   SNB062
         SUM   SNB063
         SUM   SNB070
         SUM   SNB071
         SUM   SNB072
         SUM   SNB073
         SUM   SNB074
         SUM   SNB075
         SUM   SNB076
         SUM   SNB077
         SUM   SNB080
         SUM   SNB081
         SUM   SNB082
         SUM   SNB083
         SUM   SNB084
         SUM   SNB085
         SUM   SNB086
         SUM   SNB087
         SUM   SNB090
         SUM   SNB091
         SUM   SNB092
         SUM   SNB093
         SUM   SNB094
         SUM   SNB095
         SUM   SNB096
         SUM   SNB097
         SUM   SNB100
         SUM   SNB101
         SUM   SNB102
         SUM   SNB103
         SUM   SNB104
         SUM   SNB105
         SUM   SNB106
         SUM   SNB107
         SUM   SNB110
         SUM   SNB111
         SUM   SNB112
         SUM   SNB113
         SUM   SNB114
         SUM   SNB115
         SUM   SNB116
         SUM   SNB117
         SUM   SNB120
         SUM   SNB121
         SUM   SNB122
         SUM   SNB123
         SUM   SNB124
         SUM   SNB125
         SUM   SNB126
         SUM   SNB127
         SUM   SNB180
         SUM   SNB181
         SUM   SNB182
         SUM   SNB183
         SUM   SNB184
         SUM   SNB185
         SUM   SNB186
         SUM   SNB187
         SUM   SNB190
         SUM   SNB191
         SUM   SNB192
         SUM   SNB193
         SUM   SNB194
         SUM   SNB195
         SUM   SNB196
         SUM   SNB197
         SUM   SNB200
         SUM   SNB201
         SUM   SNB202
         SUM   SNB203
         SUM   SNB204
         SUM   SNB205
         SUM   SNB206
         SUM   SNB207
         SUM   SNB210
         SUM   SNB211
         SUM   SNB212
         SUM   SNB213
         SUM   SNB214
         SUM   SNB215
         SUM   SNB216
         SUM   SNB217
SKIPDIS  SPECIAL NOISERTN,0,SPACE=1                              XM9111
         SPECIAL RWVRCRTN,0,SPACE=1
         SPECIAL MTERTN,0,SPACE=1
         SPECIAL EDCRTN,0,SPACE=1
         SPECIAL ENVRTN,0,SPACE=1
         SPECIAL OVERRTN,0,SPACE=1
         SPECIAL SKEWRTN,0,SPACE=1
         SPECIAL CCOMPRTN,0,SPACE=1
         SPECIAL WRTTRRTN,0,SPACE=1
         SUM   PEIDCHK
         SPECIAL WRTTMRTN,0,SPACE=1
         SPECIAL STRDRTN,0,SPACE=1
         SPECIAL PARTRTN,0,SPACE=1
         SPECIAL EXCRTN,0,SPACE=1
         SPECIAL IBGRTN,0,SPACE=1
         SPECIAL FEEDRTN,0,SPACE=1
*   SPARE COUNTER FOR SENSE BYTE 8 BIT 2                         S99223
         SPECIAL CRCCKRTN,0,SPACE=1                              S99223
         SPECIAL EARLBRTN,0,SPACE=1
         SPECIAL EARLERTN,0,SPACE=1
         SPECIAL SLWBRTN,0,SPACE=1
         SPECIAL SLWERTN,0,SPACE=1
         SPECIAL VELRRTN,0,SPACE=1
         SPECIAL CRECTRTN,0,1                                    S99223
         SPECIAL VELCRTN,0,SPACE=1
         SPECIAL CBCRTN,0,1                                      S99223
         SPECIAL CRCIRTN,0,1                                     S99223
         SPECIAL TRDSRTN,0,SPACE=1
         SPECIAL TWRTSRTN,0,SPACE=1
         SPECIAL DDNOISER,0,SPACE=1
         SPECIAL SIORTN,0,SPACE=2
         SPECIAL ERASERTN,0,SPACE=1
         SPECIAL BACKRTN,0,SPACE=1
         SPECIAL BUSRTN,0,SPACE=1
         SPECIAL ALURTN,0,SPACE=1
         SPECIAL CLNRRTN,0,SPACE=1
         DC    X'FF'
PEDIT    DS    0F
&DSECT   SETC  'CNTRAREA'
&CSECT   SETC  'PEDIT'
         USING *,R9
         USING CNTRAREA,R2
         DC    A(SUMENTRS)
         DC    CL8'IFCSXXXB'
NINE     DC    F'0'
LABELPTR DC    F'0'
CNTRAREA DSECT
         DS    3H
         DSGEN (DUM1,16),(NBROFREC,16)
         DSGEN (TYPE,8),(CHAN,8),(CUA,24),(SER,24)
         DSGEN (CPU,16),(SMSW,16)
         DSGEN (LOWDATE,32),(HIDATE,32)
         DSGEN (DEV,32)
         DSGEN (TUSER,16),(SNSCNT,16)
         DSGEN (VOL1,48),(VOL1CTR,16)
         DSGEN (VOL2,48),(VOL2CTR,16)
         DSGEN (VOL3,48),(VOL3CTR,16)
         DSGEN (VOL4,48),(VOL4CTR,16)
         DSGEN (VOL5,48),(VOL5CTR,16)
         DSGEN (VOL6,48),(VOL6CTR,16)
         DSGEN (VOL7,48),(VOL7CTR,16)
         DSGEN (VOL8,48),(VOL8CTR,16)
         DSGEN (VOL9,48),(VOL9CTR,16)
         DSGEN (VOL10,48),(VOL10CTR,16)
         DSGEN (CC01,16),(CCTR01,16),(CC02,16),(CCTR02,16)
         DSGEN (CC03,16),(CCTR03,16),(CC04,16),(CCTR04,16)
         DSGEN (CC05,16),(CCTR05,16),(CC06,16),(CCTR06,16)
         DSGEN (CC07,16),(CCTR07,16),(CC08,16),(CCTR08,16)
         DSGEN (CC09,16),(CCTR09,16),(CC10,16),(CCTR10,16)
         DSGEN (CC11,16),(CCTR11,16),(CC12,16),(CCTR12,16)
         DSGEN (CC13,16),(CCTR13,16),(CC14,16),(CCTR14,16)
         DSGEN (CC15,16),(CCTR15,16),(CC16,16),(CCTR16,16)
         DSGEN (CC17,16),(CCTR17,16),(CC18,16),(CCTR18,16)
         DSGEN (CC19,16),(CCTR19,16),(CC20,16),(CCTR20,16)
         DSGEN (CC21,16),(CCTR21,16),(CC22,16),(CCTR22,16)
         DSGEN (CC23,16),(CCTR23,16),(CC24,16),(CCTR24,16)
         DSGEN (SNB000CT,16),(SNB001CT,16),(SNB002CT,16),(SNB003CT,16)
         DSGEN (SNB004CT,16),(SNB005CT,16),(SNB006CT,16),(SNB007CT,16)
         DSGEN (SNB010CT,16),(SNB011CT,16),(SNB012CT,16),(SNB013CT,16)
         DSGEN (SNB014CT,16),(SNB015CT,16),(SNB016CT,16),(SNB017CT,16)
         DSGEN (SNB020CT,16),(SNB021CT,16),(SNB022CT,16),(SNB023CT,16)
         DSGEN (SNB024CT,16),(SNB025CT,16),(SNB026CT,16),(SNB027CT,16)
         DSGEN (SNB030CT,16),(SNB031CT,16),(SNB032CT,16),(SNB033CT,16)
         DSGEN (SNB034CT,16),(SNB035CT,16),(SNB036CT,16),(SNB037CT,16)
         DSGEN (SNB040CT,16),(SNB041CT,16),(SNB042CT,16),(SNB043CT,16)
         DSGEN (SNB044CT,16),(SNB045CT,16),(SNB046CT,16),(SNB047CT,16)
         DSGEN (SNB050CT,16),(SNB051CT,16),(SNB052CT,16),(SNB053CT,16)
         DSGEN (SNB054CT,16),(SNB055CT,16),(SNB056CT,16),(SNB057CT,16)
         DSGEN (SNB060CT,16),(SNB061CT,16),(SNB062CT,16),(SNB063CT,16)
         DSGEN (SNB070CT,16),(SNB071CT,16),(SNB072CT,16),(SNB073CT,16)
         DSGEN (SNB074CT,16),(SNB075CT,16),(SNB076CT,16),(SNB077CT,16)
         DSGEN (SNB080CT,16),(SNB081CT,16),(SNB082CT,16),(SNB083CT,16)
         DSGEN (SNB084CT,16),(SNB085CT,16),(SNB086CT,16),(SNB087CT,16)
         DSGEN (SNB090CT,16),(SNB091CT,16),(SNB092CT,16),(SNB093CT,16)
         DSGEN (SNB094CT,16),(SNB095CT,16),(SNB096CT,16),(SNB097CT,16)
         DSGEN (SNB100CT,16),(SNB101CT,16),(SNB102CT,16),(SNB103CT,16)
         DSGEN (SNB104CT,16),(SNB105CT,16),(SNB106CT,16),(SNB107CT,16)
         DSGEN (SNB110CT,16),(SNB111CT,16),(SNB112CT,16),(SNB113CT,16)
         DSGEN (SNB114CT,16),(SNB115CT,16),(SNB116CT,16),(SNB117CT,16)
         DSGEN (SNB120CT,16),(SNB121CT,16),(SNB122CT,16),(SNB123CT,16)
         DSGEN (SNB124CT,16),(SNB125CT,16),(SNB126CT,16),(SNB127CT,16)
         DSGEN (SNB180CT,16),(SNB181CT,16),(SNB182CT,16),(SNB183CT,16)
         DSGEN (SNB184CT,16),(SNB185CT,16),(SNB186CT,16),(SNB187CT,16)
         DSGEN (SNB190CT,16),(SNB191CT,16),(SNB192CT,16),(SNB193CT,16)
         DSGEN (SNB194CT,16),(SNB195CT,16),(SNB196CT,16),(SNB197CT,16)
         DSGEN (SNB200CT,16),(SNB201CT,16),(SNB202CT,16),(SNB203CT,16)
         DSGEN (SNB204CT,16),(SNB205CT,16),(SNB206CT,16),(SNB207CT,16)
         DSGEN (SNB210CT,16),(SNB211CT,16),(SNB212CT,16),(SNB213CT,16)
         DSGEN (SNB214CT,16),(SNB215CT,16),(SNB216CT,16),(SNB217CT,16)
         DSGEN (NOISECTR,16),(RWVRCCTR,16),(MTECTR,16),(EDCCTR,16)
         DSGEN (ENVCTR,16),(OVERCTR,16),(SKEWCTR,16),(CCOMPCTR,16)
         DSGEN (WRTTRCTR,16),(PEIDCTR,16),(WRTTMCTR,16),(STRDCTR,16)
         DSGEN (PARTCTR,16),(EXCCTR,16),(IBGCTR,16),(FEEDCTR,16)
         DSGEN (CRCCTR,16)                                       S99223
         DSGEN (EARLBCTR,16),(EARLECTR,16),(SLWBCTR,16),(SLWECTR,16)
         DSGEN (VELRCTR,16),(CRECTCTR,16),(VELCCTR,16),          S99223C
               (CBCCTR,16)
         DSGEN (CRCICTR,16),(TRDSCTR,16),(TWRTSCTR,16)           S99223
         DSGEN (DDNOISE,16),(SIOCTR,32),(ERASECTR,16)
         DSGEN (BACKCTR,16),(BUSCTR,16),(ALUCTR,16),(CLNRCTR,16)
IFCSXXXB CSECT
*                                                                     *
* THE CONVERT ROUTINES WILL TAKE A COUNTER AND CONVERT IT TO          *
* PRINTABLE EBCDIC CHARACTERS. THEY ALL CONVERT INTO A DIFFERENT      *
* NUMBER OF DIGITS.                                                   *
* CONVERT-3 DIGITS  CONVERT1-4 DIGITS  CONVERT2-5 DIGITS              *
* CONVERT3-6 DIGITS                                                   *
*                                                                     *
CONVERT  ST    R5,SAVE            SAVE REGISTER
         MVC   SAVENBR+L2(L2),L0(R4)   GET NBR TO BE CONVERTED
         L     R5,SAVENBR              PUT NUMBER INTO CONVERT REG
CONVERTA CVD   R5,DECAREA          CONVERT THE NUMBER
         UNPK  L0(L3,R3),DECAREA(L8) UNPACK AND PLACE IN PRINT BUFFER
         OI    L2(R3),F0           MAKE LAST DIGIT PRINTABLE
         L     R5,SAVE            RESTORE REGISTER
DONOTHNG BR    R14                 RETURN
*                                                                     *
CONVERT1 ST    R5,SAVE            SAVE REGISTER
         MVC   SAVENBR+L2(L2),L0(R4)   GET NBR TO BE CONVERTED
         L     R5,SAVENBR              PUT NUMBER INTO CONVERT REG
         CVD   R5,DECAREA          CONVERT THE COUNTER
         UNPK  L0(L4,R3),DECAREA(L8) UNPACK AND PLACE IN PRINT BUFFER
         OI    L3(R3),F0           MAKE LAST DIGIT PRINTABLE
         L     R5,SAVE            RESTORE REGISTER
         BR    R14                 RETURN
CONVERT2 ST    R5,SAVE            SAVE REGISTER
         MVC   SAVENBR+L2(L2),L0(R4)   GET NBR TO BE CONVERTED
         L     R5,SAVENBR              PUT NUMBER INTO CONVERT REG
         CVD   R5,DECAREA          CONVERT THE COUNTER
         UNPK  L0(L5,R3),DECAREA(L8) UNPACK INTO PRINT BUFFER
         OI    L4(R3),F0           MAKE LAST DIGIT PRINTABLE
         L     R5,SAVE            RESTORE REGISTER
         BR    R14                 RETURN
CONVERT3 ST    R5,SAVE            SAVE THE REGISTER
         MVC   DECAREA(4),L0(R4)   MOVE NUMBER TO INTEGRAL BOUNDARY
         L     R5,DECAREA          PUT NUMBER IN A REGISTER
         CVD   R5,DECAREA         CONVERT COUNTER TO DECIMAL
         UNPK  L0(L6,R3),DECAREA(L8) UNPACK THE COUNTER
         OI    L5(R3),F0          MAKE LAST DIGIT PRINTABLE
         L     R5,SAVE            RESTORE THE REFISTER
         BR    R14                  RETURN
*                                                                     *
* THIS ROUTINE WILL TAKE THE DATES FROM THE HIGH AND LOW DATE ARES    *
* AND PUT THEM INTO THE PRINT BUFFER IN UNPACKED FORMAT.              *
*                                                                     *
GETDATE  UNPK  DECAREA(L5),L1(L3,R4) UNPACK THE DATE
         OI    DECAREA+L4,F0       MAKE LAST DIGIT PRINTABLE
         MVC   L0(L3,R3),DECAREA+L2 MOVE DAY TO PRINT LINE
         MVC   L5(L2,R3),DECAREA   MOVE YEAR TO PRINT LINE
         BR    R14                 RETURN
*                                                                     *
* THIS ROUTINE MOVES THE VOLUME LABEL TO THE PRINT BUFFER.            *
*                                                                     *
VOLLAB   MVC   L0(L6,R3),L0(R4)   MOVE VOLUME LABEL TO PRINT BUFFER
         BR    R14                RETURN
*                                                                     *
* CHECKS IF THERE WAS ANOTHER CCW  TO GO TO THE PRINT BUFFER- IF IT   *
* WAS ZERO THE LINE IS NOT PRINTED,                                   *
*                                                                     *
EMPTY    CLI   L0(R4),L0          IS THERE A COMMAND
         BCR   7,R14              YES- RETURN
         SR     R15,R15           NO- SET R15 FOR NO PRINT
         BR    R14                RETURN
CHKFIR   CLI   SNSCNT+L1,X'09'    NINE SENSE BYTES               XM9111
         BC    13,NOTAPP1         GO TO PRINT N/A                XM9111
         CLC   L0(L2,R4),SAVENBR  IS THERE A TU SERIAL          SA58784
         BNE   CONVERT2
NOTAPP1  MVC   L0(L3,R3),NOTAPP   NO SERIAL NBR FOR 3410         XM9111
         BR    R14                RETURN CONTROL
NOTAPP   DC    CL3'N/A'
WHERETO  ST    R7,SAVE            SAVE THE REGISTER
         CLI   SNSCNT+L1,X'09'    NINE SENSE BYTES               XM9111
         BE    NOPRINT            YES RETURN TO PROCESS
         LA    R7,LAB1            UPDATE THE LABEL POINTER
         ST    R7,LABELPTR        STORE THE LABEL POINTER
         LA    R7,DEVICE1-4       GET ADDRESS OF TABLE ENTRY
         ST    R7,NINE            SAVE THE ENTRY POINTER
         L     R7,SAVE            RELOAD THE SAVED REGISTER
NOPRINT  SR    R15,R15            CLEAR REGISTER FOR NO PRINT
         BR    R14                RETURN
CHKDEV   CLI   SNSCNT+L1,X'09'    IS THERE A TU SERIAL          SA58784
         BE    MOVEFIR            YES
         MVC   L0(L4,R3),DEV2     MOVE 3420 TO BUFFER
         BR    R14                RETURN
MOVEFIR  MVC   L0(L4,R3),DEV1     MOVE 3410 TO BUFFER
         BR    R14                RETURN
DEV1     DC    C'3410'
DEV2     DC    C'3420'
*                                                                     *
*                                                                     *
* THIS ROUTINE CHECKS IF THERE WAS ANOTHER VOLUME LABEL- IF NOT THE   *
* LINE WILL NOT BE PRINTED.                                           *
*                                                                     *
*                                                                     *
*                                                                     *
CHKVOL   CLC   L0(L2,R4),ZERO     IS THERE A VOLUME LABEL
         BCR   7,R14              YES- RETURN TO PRINT
         SR    R15,R15            NO- SET R15 FOR NO PRINT
         BR    R14                RETURN
*                                                                     *
*                                                                     *
* THIS ROUTINE IS USED TO FREE THE CORE USED FOR THE COUNTERS AND IT  *
* ALSO CHECKS IF THERE IS ANOTHER COUNTER AREA TO BE PRINTED. IF      *
* THERE IS THE POINTERS TO THE TABLE ENTRIES AND LABELS ARE RESET     *
* AND THE ROUTINE BEGINS AGAIN.                                       *
*                                                                     *
FREE     STM   R14,R12,L12(R13)   SAVE ALL REGISTERS
         LR    R12,R13            SAVE SAVE AREA ADDRESS
         LA    R13,REGSAVE        GET THIS SAVE AREA ADDRESS
         ST    R12,L4(R13)        SET SAVE AREA CHAIN POINTERS
         ST    R13,L8(R12)
         L     R3,L4(R2)          GET POINTER TO NEXT COUNTER SAVE
         ST    R3,L28(R12)        SAVE IT IN REGISTER SAVE
         LH    R0,SIZE            GET SIZE OF AREA TO BE FREED
         LR    R1,R2              GET ADDRESS OF AREA
         FREEMAIN R,LV=(0),A=(1)  FREE THE CORE
         LTR   R3,R3              IS THERE ANOTHER COUNTER AREA
         BZ    RETURN0            NO RETURN
         LA    R5,SUMENTRS+L10    YES RESET POINTERS TO PRINT SUMMARY
         ST    R5,NINE
         LA    R5,LABELS-L1
         ST    R5,LABELPTR
RETURN0  L     R13,L4(R13)
         LM    R14,R12,L12(R12)   RELOAD REGISTERS
         BR    R14                RETURN
SETCPUNO STM   R5,R8,REGSAVE       SAVE WORK REGS              @Z427VLS
         SR    R5,R5               CLEAR REG 5                 @Z427VLS
         ICM   R5,X'3',0(R4)       PICKUP CPU TYPE FIELD       @Z427VLS
         LTR   R5,R5               IS FIELD ZERO?              @Z427VLS
         BNZ   RET1                IF CPU TYPE NOT ZERO, THEN RETURN
         LA    R6,L20              AMOUNT TO BACK UP           @Z427VLS
         SR    R3,R6               BACK UP OUTPUT PTR          @Z427VLS
         MVC   0(L9,R3),SHARED     SERIAL NO. - SHARED         @Z427VLS
RET1     LM    R5,R8,REGSAVE       RESTORE REGS                @Z427VLS
         BR    R14                 RETURN                      @Z427VLS
*                                                              @Z427VLS
SHARED   DC    C'SHARED   '                                    @Z427VLS
DECAREA  DC    D'0'
SAVE     DC    F'0'
REGSAVE  DC    18F'0'
ZERO     DC    6X'00'
SIZE     DC    H'582'
SAVENBR  DC    F'0'
SUMENTRS DS    0F
         DC    X'00010001'
         DC    X'00010001'
         DC    A(LABELS)
         DC    H'0'
         DC    X'01000B8B00'
         LABEL ' '
         LINE  (56,20),(1,21),SKIP=1
         HEX   CUA,0,3B
         ROUTINE TUSER,CHKDEV
         ROUTINE TUSER,CHKFIR
         LABEL 'SUMMARY OF I/O OUTBOA','RD ENVIRONMENT RECORD',        C
               'S FOR DEVICE','DEVICE TYPE','TU SERIAL'
         LINE  (115,),(104,)
         HEX   CPU,0,2B
         ROUTINE CPU,SETCPUNO                                  @Z427VLS
         LABEL 'CPU MODEL'
         LINE  (115,),(104,)
         HEX   SER,0,3B
         ROUTINE CPU,SETCPUNO                                  @Z427VLS
         LABEL 'CPU SERIAL'
         LINE  ,(23,14),SKIP=1
         ROUTINE DUM1,DONOTHNG
         LABEL 'DAY YEAR','DAY YEAR'
         LINE  (23,14),(1,32),SKIP=2
         ROUTINE LOWDATE,GETDATE
         ROUTINE HIDATE,GETDATE
         LABEL 'OUTBOARD DATE RANGE -','TO'
         LINE  (27,),(1,)
         ROUTINE NBROFREC,CONVERT
         LABEL 'TOTAL NUMBER OF RECORDS'
         LINE  ,(1,)
         ROUTINE DUM1,DONOTHNG
         LABEL 'VOLUME LABELS ENCOUNTERED(MAXIMUM OF 10 ENTRIES)'
         LINE  (13,11),(1,),SKIP=1
         ROUTINE VOL1,VOLLAB
         ROUTINE VOL1CTR,CONVERT
         ROUTINE VOL1CTR,CHKVOL
         LABEL 'VOL. LABEL'
         LINE
         ROUTINE VOL2,VOLLAB
         ROUTINE VOL2CTR,CONVERT
         ROUTINE VOL2CTR,CHKVOL
         LABEL 'VOL. LABEL'
         LINE
         ROUTINE VOL3,VOLLAB
         ROUTINE VOL3CTR,CONVERT
         ROUTINE VOL3CTR,CHKVOL
         LABEL 'VOL. LABEL'
         LINE
         ROUTINE VOL4,VOLLAB
         ROUTINE VOL4CTR,CONVERT
         ROUTINE VOL4CTR,CHKVOL
         LABEL 'VOL. LABEL'
         LINE
         ROUTINE VOL5,VOLLAB
         ROUTINE VOL5CTR,CONVERT
         ROUTINE VOL5CTR,CHKVOL
         LABEL 'VOL. LABEL'
         LINE
         ROUTINE VOL6,VOLLAB
         ROUTINE VOL6CTR,CONVERT
         ROUTINE VOL6CTR,CHKVOL
         LABEL 'VOL. LABEL'
         LINE
         ROUTINE VOL7,VOLLAB
         ROUTINE VOL7CTR,CONVERT
         ROUTINE VOL7CTR,CHKVOL
         LABEL 'VOL. LABEL'
         LINE
         ROUTINE VOL8,VOLLAB
         ROUTINE VOL8CTR,CONVERT
         ROUTINE VOL8CTR,CHKVOL
         LABEL 'VOL. LABEL'
         LINE
         ROUTINE VOL9,VOLLAB
         ROUTINE VOL9CTR,CONVERT
         ROUTINE VOL9CTR,CHKVOL
         LABEL 'VOL. LABEL'
         LINE
         ROUTINE VOL10,VOLLAB
         ROUTINE VOL10CTR,CONVERT
         ROUTINE VOL10CTR,CHKVOL
         LABEL 'VOL. LABEL'
         LINE
         LABEL ''
         LINE
         ROUTINE DUM1,DONOTHNG
         LABEL 'CCW COMMAND CODES ENCOUNTERED(MAXIMUM OF 24 ENTRIES)'
         LINE
         ROUTINE DUM1,DONOTHNG
         LABEL 'CMND   TOTAL'
         LINE  (2,7),(1,)
         HEX   CC01,0,1B
         ROUTINE CCTR01,CONVERT
         ROUTINE CC01,EMPTY
         LABEL ' '
         LINE
         HEX   CC02,0,1B
         ROUTINE CCTR02,CONVERT
         ROUTINE CC02,EMPTY
         LABEL ' '
         LINE
         HEX   CC03,0,1B
         ROUTINE CCTR03,CONVERT
         ROUTINE CC03,EMPTY
         LABEL ' '
         LINE
         HEX   CC04,0,1B
         ROUTINE CCTR04,CONVERT
         ROUTINE CC04,EMPTY
         LABEL ' '
         LINE
         HEX   CC05,0,1B
         ROUTINE CCTR05,CONVERT
         ROUTINE CC05,EMPTY
         LABEL ' '
         LINE
         HEX   CC06,0,1B
         ROUTINE CCTR06,CONVERT
         ROUTINE CC06,EMPTY
         LABEL ' '
         LINE
         HEX   CC07,0,1B
         ROUTINE CCTR07,CONVERT
         ROUTINE CC07,EMPTY
         LABEL ' '
         LINE
         HEX   CC08,0,1B
         ROUTINE CCTR08,CONVERT
         ROUTINE CC08,EMPTY
         LABEL ' '
         LINE
         HEX   CC09,0,1B
         ROUTINE CCTR09,CONVERT
         ROUTINE CC09,EMPTY
         LABEL ' '
         LINE
         HEX   CC10,0,1B
         ROUTINE CCTR10,CONVERT
         ROUTINE CC10,EMPTY
         LABEL ' '
         LINE
         HEX   CC11,0,1B
         ROUTINE CCTR11,CONVERT
         ROUTINE CC11,EMPTY
         LABEL ' '
         LINE
         HEX   CC12,0,1B
         ROUTINE CCTR12,CONVERT
         ROUTINE CC12,EMPTY
         LABEL ' '
         LINE
         HEX   CC13,0,1B
         ROUTINE CCTR13,CONVERT
         ROUTINE CC13,EMPTY
         LABEL ' '
         LINE
         HEX   CC14,0,1B
         ROUTINE CCTR14,CONVERT
         ROUTINE CC14,EMPTY
         LABEL ' '
         LINE
         HEX   CC15,0,1B
         ROUTINE CCTR15,CONVERT
         ROUTINE CC15,EMPTY
         LABEL ' '
         LINE
         HEX   CC16,0,1B
         ROUTINE CCTR16,CONVERT
         ROUTINE CC16,EMPTY
         LABEL ' '
         LINE
         HEX   CC17,0,1B
         ROUTINE CCTR17,CONVERT
         ROUTINE CC17,EMPTY
         LABEL ' '
         LINE
         HEX   CC18,0,1B
         ROUTINE CCTR18,CONVERT
         ROUTINE CC18,EMPTY
         LABEL ' '
         LINE
         HEX   CC19,0,1B
         ROUTINE CCTR19,CONVERT
         ROUTINE CC19,EMPTY
         LABEL ' '
         LINE
         HEX   CC20,0,1B
         ROUTINE CCTR20,CONVERT
         ROUTINE CC20,EMPTY
         LABEL ' '
         LINE
         HEX   CC21,0,1B
         ROUTINE CCTR21,CONVERT
         ROUTINE CC21,EMPTY
         LABEL ' '
         LINE
         HEX   CC22,0,1B
         ROUTINE CCTR22,CONVERT
         ROUTINE CC22,EMPTY
         LABEL ' '
         LINE
         HEX   CC23,0,1B
         ROUTINE CCTR23,CONVERT
         ROUTINE CC23,EMPTY
         LABEL ' '
         LINE
         HEX   CC24,0,1B
         ROUTINE CCTR24,CONVERT
         ROUTINE CC24,EMPTY
         LABEL ' '
         LINE  ,,SKIP=2
         ROUTINE DUM1,DONOTHNG
         LABEL 'SENSE BYTES SUMMARY'
         LINE  (15,19),(1,19),SKIP=1                             S99223
         ROUTINE DUM1,DONOTHNG
         LABEL 'BYTE 0','BYTE 1','BYTE 2','BYTE 3','BYTE 4','BYTE 5'
         LINE
         ROUTINE TUSER,WHERETO
         LABEL ''
         LINE  (15,19),(1,19)                                    S99223
         ROUTINE SNB000CT,CONVERT
         ROUTINE SNB010CT,CONVERT
         ROUTINE SNB020CT,CONVERT
         ROUTINE SNB030CT,CONVERT
         ROUTINE SNB040CT,CONVERT
         ROUTINE SNB050CT,CONVERT
         LABEL 'CMND REJ','NOISE','TRK ERR 0','VRC','TU POS CHK',      C
               'NEW SUBSY'
         LINE
         ROUTINE SNB001CT,CONVERT
         ROUTINE SNB011CT,CONVERT
         ROUTINE SNB021CT,CONVERT
         ROUTINE SNB031CT,CONVERT
         ROUTINE SNB041CT,CONVERT
         ROUTINE SNB051CT,CONVERT
         LABEL 'INTV REQ','TU STAT A','TRK ERR 1','MTE/LRCR',          C
               'TU REJECT','NEW SUBSY'
         LINE
         ROUTINE SNB002CT,CONVERT
         ROUTINE SNB012CT,CONVERT
         ROUTINE SNB022CT,CONVERT
         ROUTINE SNB032CT,CONVERT
         ROUTINE SNB042CT,CONVERT
         ROUTINE SNB052CT,CONVERT
         LABEL 'BUS O CHK','TU STAT B','TRK ERR 2','SKEW',       XM1356C
               'TAPE IND','WRT TM CHK'                           XM1356
         LINE
         ROUTINE SNB003CT,CONVERT
         ROUTINE SNB013CT,CONVERT
         ROUTINE SNB023CT,CONVERT
         ROUTINE SNB033CT,CONVERT
         ROUTINE SNB043CT,CONVERT
         ROUTINE SNB053CT,CONVERT
         LABEL 'EQUIP CHK','7 TRACK','TRK ERR 3','EDC/CRCR',     S99231C
               'RESERVED','PE ID BUR'
         LINE
         ROUTINE SNB004CT,CONVERT
         ROUTINE SNB014CT,CONVERT
         ROUTINE SNB024CT,CONVERT
         ROUTINE SNB034CT,CONVERT
         ROUTINE SNB044CT,CONVERT
         ROUTINE SNB054CT,CONVERT
         LABEL 'DATA CHK','LOAD PT','TRK ERR 4','ENV CHECK','RESERVED',C
               'P COMP'                                          XM1356
         LINE
         ROUTINE SNB005CT,CONVERT
         ROUTINE SNB015CT,CONVERT
         ROUTINE SNB025CT,CONVERT
         ROUTINE SNB035CT,CONVERT
         ROUTINE SNB045CT,CONVERT
         ROUTINE SNB055CT,CONVERT
         LABEL 'OVERRUN','WRT STA','TRK ERR 5','1600 BPI','D TRK ERR', C
               'TACH CHK'                                        XM1356
         LINE
         ROUTINE SNB006CT,CONVERT
         ROUTINE SNB016CT,CONVERT
         ROUTINE SNB026CT,CONVERT
         ROUTINE SNB036CT,CONVERT
         ROUTINE SNB046CT,CONVERT
         ROUTINE SNB056CT,CONVERT
         LABEL 'WRD CNT','FILE PROT','TRK ERR 6','BACKWARD','TU CHECK',C
               'FALSE END'
         LINE   ,,SKIP=2
         ROUTINE SNB007CT,CONVERT
         ROUTINE SNB017CT,CONVERT
         ROUTINE SNB027CT,CONVERT
         ROUTINE SNB037CT,CONVERT
         ROUTINE SNB047CT,CONVERT
         ROUTINE SNB057CT,CONVERT
         LABEL 'DT CNVTT','NOT CAP','TRK ERR 7','RESERVED',      S99231C
               'ILL CMND','RPQ'
         LINE  ,,SKIP=1
         ROUTINE DUM1,DONOTHNG
         LABEL 'BYTE 6','BYTE 7','BYTE 8'
         LINE
         ROUTINE SNB060CT,CONVERT
         ROUTINE SNB070CT,CONVERT
         ROUTINE SNB080CT,CONVERT
         LABEL '7 TRACK       XXX','LAMP FAIL','RESERVED'        S99223
         LINE
         ROUTINE SNB061CT,CONVERT
         ROUTINE SNB071CT,CONVERT
         ROUTINE SNB081CT,CONVERT
         LABEL 'SHORT GAP','LFT CL CHK','FEED THRU'
         LINE
         ROUTINE SNB062CT,CONVERT
         ROUTINE SNB072CT,CONVERT
         ROUTINE SNB082CT,CONVERT
         LABEL 'DUAL DEN      XXX','RHT CL CHK','RESERVED'       S99223
         LINE
         ROUTINE SNB063CT,CONVERT
         ROUTINE SNB073CT,CONVERT
         ROUTINE SNB083CT,CONVERT
         LABEL 'ALT DEN       XXX','READY RES','END V CHK'       SM5191
         LINE  (34,19),(20,19)                                   S99223
         ROUTINE SNB074CT,CONVERT
         ROUTINE SNB084CT,CONVERT
         LABEL 'DSE','RDBK N DET'                                XM1356
         LINE
         ROUTINE SNB075CT,CONVERT
         ROUTINE SNB085CT,CONVERT
         LABEL 'RESERVED','ST VEL CHK'
         LINE
         ROUTINE SNB076CT,CONVERT
         ROUTINE SNB086CT,CONVERT
         LABEL 'RESERVED','RESERVED'
         LINE   ,,SKIP=2
         ROUTINE SNB077CT,CONVERT
         ROUTINE SNB087CT,CONVERT
         LABEL 'RESERVED','RESERVED'                             XM1356
         LINE  ,(1,76),SKIP=1
         ROUTINE DUM1,DONOTHNG
         LABEL 'SDR AREA','DEVICE DEPENDENT COUNTERS'
         LINE  (15,19),(1,19)                                    S99223
         ROUTINE NOISECTR,CONVERT1
         ROUTINE WRTTRCTR,CONVERT1
         ROUTINE EARLBCTR,CONVERT1
         ROUTINE BACKCTR,CONVERT1
         ROUTINE TRDSCTR,CONVERT2
         LABEL 'NOISE','RESERVED','END V CHK','BACKWARD','TEMP RDS'
         LINE
         ROUTINE RWVRCCTR,CONVERT1
         ROUTINE WRTTMCTR,CONVERT1
         ROUTINE EARLECTR,CONVERT1
         ROUTINE BUSCTR,CONVERT1
         ROUTINE TWRTSCTR,CONVERT2
         LABEL 'VRC','WRT TM CHK','RDBK N DET','BUS O CHK',      XM1356C
               'TEMP WRTS'
         LINE
         ROUTINE MTECTR,CONVERT1
         ROUTINE STRDCTR,CONVERT1
         ROUTINE SLWBCTR,CONVERT1
         ROUTINE ALUCTR,CONVERT1
         ROUTINE SIOCTR,CONVERT3
         LABEL 'MTE/LRCR','P COMP','ST VEL CHK','TU POS CHK',    XM1356C
               'SIO COUNT'
         LINE
         ROUTINE EDCCTR,CONVERT1
         ROUTINE PARTCTR,CONVERT1
         ROUTINE SLWECTR,CONVERT1
         ROUTINE DUM1,DONOTHNG
         ROUTINE ERASECTR,CONVERT2
         LABEL 'EDC/CRCR','TACH CHK','RESERVED','','ERASE GAPS'
         LINE
         ROUTINE ENVCTR,CONVERT1
         ROUTINE EXCCTR,CONVERT1
         ROUTINE VELRCTR,CONVERT1
         ROUTINE DUM1,DONOTHNG
         ROUTINE CLNRCTR,CONVERT2
         LABEL 'ENV CHECK','FALSE END','RESERVED','',            XM1356C
               'CLEAN ACTS'                                      XM1356
         LINE
         ROUTINE OVERCTR,CONVERT1
         ROUTINE IBGCTR,CONVERT1
         ROUTINE VELCCTR,CONVERT1
         ROUTINE DUM1,DONOTHNG
         ROUTINE DDNOISE,CONVERT2
         LABEL 'OVERRUN','RESERVED','RESERVED','','NOISE RCD'
         LINE
         ROUTINE SKEWCTR,CONVERT1
         ROUTINE FEEDCTR,CONVERT1
         ROUTINE PEIDCTR,CONVERT1
         LABEL 'SKEW','FEED THRU','PE ID CHK'
         LINE
         ROUTINE CCOMPCTR,CONVERT1
         LABEL 'RESERVED'
         LINE
         ROUTINE DUM1,FREE
         LABEL ' '
         DC    X'FF'
         DC    X'000000000000'
         DS    0F
         DC    C'$'
         LINE
         ROUTINE TUSER,DONOTHNG
LAB1     LABEL ''
DEVICE1  LINE  (15,19),(1,19)                                    S99223
         ROUTINE SNB000CT,CONVERT
         ROUTINE SNB010CT,CONVERT
         ROUTINE SNB020CT,CONVERT
         ROUTINE SNB030CT,CONVERT
         ROUTINE SNB040CT,CONVERT
         ROUTINE SNB050CT,CONVERT
         LABEL 'CMND REJECT','NOISE','TRK ERR 0','R/W VRC',      S99223C
               'ALU CK/MP ERR','NEW SUBSY     XXX'               S99223
         LINE
         ROUTINE SNB001CT,CONVERT
         ROUTINE SNB011CT,CONVERT
         ROUTINE SNB021CT,CONVERT
         ROUTINE SNB031CT,CONVERT
         ROUTINE SNB041CT,CONVERT
         ROUTINE SNB051CT,CONVERT
         LABEL 'INTV REQUIRED','TU STAT A','TRK ERR 1',          S99223C
               'MTE/LRCR','REJECT TU','NEW SUBSY     XXX'        S99223
         LINE
         ROUTINE SNB002CT,CONVERT
         ROUTINE SNB012CT,CONVERT
         ROUTINE SNB022CT,CONVERT
         ROUTINE SNB032CT,CONVERT
         ROUTINE SNB042CT,CONVERT
         ROUTINE SNB052CT,CONVERT
         LABEL 'BUS OUT CHK','TU STAT B','TRK ERR 2','SKEW',     S99223C
               'TAPE INDICATE','WRT TM CHK'                      S99223
         LINE
         ROUTINE SNB003CT,CONVERT
         ROUTINE SNB013CT,CONVERT
         ROUTINE SNB023CT,CONVERT
         ROUTINE SNB033CT,CONVERT
         ROUTINE SNB043CT,CONVERT
         ROUTINE SNB053CT,CONVERT
         LABEL 'EQUIP CHK','7 TRACK','TRK ERR 3','EDC/CRCR',           C
               'WRT TR VRC','ID BURST CHK'                       S99223
         LINE
         ROUTINE SNB004CT,CONVERT
         ROUTINE SNB014CT,CONVERT
         ROUTINE SNB024CT,CONVERT
         ROUTINE SNB034CT,CONVERT
         ROUTINE SNB044CT,CONVERT
         ROUTINE SNB054CT,CONVERT
         LABEL 'DATA CHK','LOAD POINT','TRK ERR 4','ENV/ECC',    S99223C
               'U-PGM DET/RES','ST RD CHK'                       S99223
         LINE
         ROUTINE SNB005CT,CONVERT
         ROUTINE SNB015CT,CONVERT
         ROUTINE SNB025CT,CONVERT
         ROUTINE SNB035CT,CONVERT
         ROUTINE SNB045CT,CONVERT
         ROUTINE SNB055CT,CONVERT
         LABEL 'OVERRUN','WRITE STATUS','TRK ERR 5',             S99223C
               '1600 BPI TU','LOOP W/R','PARTIAL REC'            S99223
         LINE
         ROUTINE SNB006CT,CONVERT
         ROUTINE SNB016CT,CONVERT
         ROUTINE SNB026CT,CONVERT
         ROUTINE SNB036CT,CONVERT
         ROUTINE SNB046CT,CONVERT
         ROUTINE SNB056CT,CONVERT
         LABEL 'WORD COUNT','FILE PROTECT','TRK ERR 6',          S99223C
               'BACKWARD','TU CHECK','EXC POST OR TM'            S99223
         LINE   ,,SKIP=2
         ROUTINE SNB007CT,CONVERT
         ROUTINE SNB017CT,CONVERT
         ROUTINE SNB027CT,CONVERT
         ROUTINE SNB037CT,CONVERT
         ROUTINE SNB047CT,CONVERT
         ROUTINE SNB057CT,CONVERT
         LABEL 'DT CNVTT','NOT CAPABLE','TRK ERR 7',             S99223C
               'C/P COMPARE','RES FOR RPQ','RES FOR RPQ'         S99223
         LINE  ,,SKIP=1
         ROUTINE DUM1,DONOTHNG
         LABEL 'BYTE 6','BYTE 7','BYTE 8','BYTE 9','BYTE 10','BYTE 11'
         LINE
         ROUTINE SNB060CT,CONVERT
         ROUTINE SNB070CT,CONVERT
         ROUTINE SNB080CT,CONVERT
         ROUTINE SNB090CT,CONVERT
         ROUTINE SNB100CT,CONVERT
         ROUTINE SNB110CT,CONVERT
         LABEL '7 TRACK       XXX','LAMP FAIL','IBG DROP',       S99223C
               '6250 CORRECTN','CMD ST REJ','B BUS LSR/MP1'      S99223
         LINE
         ROUTINE SNB061CT,CONVERT
         ROUTINE SNB071CT,CONVERT
         ROUTINE SNB081CT,CONVERT
         ROUTINE SNB091CT,CONVERT
         ROUTINE SNB101CT,CONVERT
         ROUTINE SNB111CT,CONVERT
         LABEL 'WRT HD CR','TP BOTTOM LF','FEED THRU/RES',       S99223C
               'VEL CHG','RESERVED','SPARE'                      S99223
         LINE
         ROUTINE SNB062CT,CONVERT
         ROUTINE SNB072CT,CONVERT
         ROUTINE SNB082CT,CONVERT
         ROUTINE SNB092CT,CONVERT
         ROUTINE SNB102CT,CONVERT
         ROUTINE SNB112CT,CONVERT
         LABEL 'DUAL DEN      XXX','TP BOTTOM RH','RESERVED',    S99223C
               'CBC','CTL ST REJ','XFER/LOIC'                    S99223
         LINE
         ROUTINE SNB063CT,CONVERT
         ROUTINE SNB073CT,CONVERT
         ROUTINE SNB083CT,CONVERT
         ROUTINE SNB093CT,CONVERT
         ROUTINE SNB103CT,CONVERT
         ROUTINE SNB113CT,CONVERT
         LABEL 'NOT 1600      XXX','RES-DOOR','EARLY BOR',       S99223C
               'CRC III','NO BOR/WTM','INST/HIIC'                S99223
         LINE  (34,19),(20,19)                                   S99223
         ROUTINE SNB074CT,CONVERT
         ROUTINE SNB084CT,CONVERT
         ROUTINE SNB094CT,CONVERT
         ROUTINE SNB104CT,CONVERT
         ROUTINE SNB114CT,CONVERT
         LABEL 'DSE','E END/SAGC CK','RLC/3803-2',               S99223C
               'WTM/DRC','U-PGM ERR'                             S99223
         LINE
         ROUTINE SNB075CT,CONVERT
         ROUTINE SNB085CT,CONVERT
         ROUTINE SNB095CT,CONVERT
         ROUTINE SNB105CT,CONVERT
         ROUTINE SNB115CT,CONVERT
         LABEL 'ERASE HD','SLOW BOR','RESERVED','TACH FAIL',           C
               'D BUS PTY'
         LINE
         ROUTINE SNB076CT,CONVERT
         ROUTINE SNB086CT,CONVERT
         ROUTINE SNB096CT,CONVERT
         ROUTINE SNB106CT,CONVERT
         ROUTINE SNB116CT,CONVERT
         LABEL 'AIR PRES','SLOW END','RESERVED','RESERVED',            C
               'RESERVED'
         LINE   ,,SKIP=2
         ROUTINE SNB077CT,CONVERT
         ROUTINE SNB087CT,CONVERT
         ROUTINE SNB097CT,CONVERT
         ROUTINE SNB107CT,CONVERT
         ROUTINE SNB117CT,CONVERT
         LABEL 'LOAD FAIL','VEL RETRY','CNTL UNIT RES',          S99223C
               'VEL CHK','BOC ALU1/MP1'                          S99223
         LINE  (15,19),(1,19),SKIP=1                             S99223
         ROUTINE DUM1,DONOTHNG
         LABEL 'BYTE 12','BYTE 18','BYTE 19','BYTE 20','BYTE 21'
         LINE
         ROUTINE SNB120CT,CONVERT
         ROUTINE SNB180CT,CONVERT
         ROUTINE SNB190CT,CONVERT
         ROUTINE SNB200CT,CONVERT
         ROUTINE SNB210CT,CONVERT
         LABEL 'B BUS LSR/MP2','PWRCHK/AIRFLW','DE DR 7',        S99223C
               'DE DR F','LD BUTTON'                             S99223
         LINE
         ROUTINE SNB121CT,CONVERT
         ROUTINE SNB181CT,CONVERT
         ROUTINE SNB191CT,CONVERT
         ROUTINE SNB201CT,CONVERT
         ROUTINE SNB211CT,CONVERT
         LABEL 'SPARE','RESERVED','DE DR 6','DE DR E','LFT REEL'
         LINE
         ROUTINE SNB122CT,CONVERT
         ROUTINE SNB182CT,CONVERT
         ROUTINE SNB192CT,CONVERT
         ROUTINE SNB202CT,CONVERT
         ROUTINE SNB212CT,CONVERT
         LABEL 'XFER/LOIC','RESERVED','DE DR 5','DE DR D','RHT REEL'
         LINE
         ROUTINE SNB123CT,CONVERT
         ROUTINE SNB183CT,CONVERT
         ROUTINE SNB193CT,CONVERT
         ROUTINE SNB203CT,CONVERT
         ROUTINE SNB213CT,CONVERT
         LABEL 'INST/HIIC','RESERVED','DE DR 4','DE DR C','TAPE PRES'
         LINE
         ROUTINE SNB124CT,CONVERT
         ROUTINE SNB184CT,CONVERT
         ROUTINE SNB194CT,CONVERT
         ROUTINE SNB204CT,CONVERT
         ROUTINE SNB214CT,CONVERT
         LABEL 'U-PGM ERR','EC OF DRV','DE DR 3','DE DR B','REELS LDD'
         LINE
         ROUTINE SNB125CT,CONVERT
         ROUTINE SNB185CT,CONVERT
         ROUTINE SNB195CT,CONVERT
         ROUTINE SNB205CT,CONVERT
         ROUTINE SNB215CT,CONVERT
         LABEL 'D BUS PTY','EC OF DRV','DE DR 2','DE DR A','LD RWD'
         LINE
         ROUTINE SNB126CT,CONVERT
         ROUTINE SNB186CT,CONVERT
         ROUTINE SNB196CT,CONVERT
         ROUTINE SNB206CT,CONVERT
         ROUTINE SNB216CT,CONVERT
         LABEL 'RESERVED','EC OF DRV','DE DR 1','DE DR 9','LD COMPL'
         LINE   ,,SKIP=2
         ROUTINE SNB127CT,CONVERT
         ROUTINE SNB187CT,CONVERT
         ROUTINE SNB197CT,CONVERT
         ROUTINE SNB207CT,CONVERT
         ROUTINE SNB217CT,CONVERT
         LABEL 'BOC ALU2/MP2','EC OF DRV','DE DR 0','DE DR 8',   S99223C
               'LD CHK'                                          S99223
         LINE  ,(1,76),SKIP=1
         ROUTINE DUM1,DONOTHNG
         LABEL 'SDR AREA','DEVICE DEPENDENT COUNTERS'
         LINE  (15,19),(1,19)                                    S99223
         ROUTINE NOISECTR,CONVERT1
         ROUTINE WRTTRCTR,CONVERT1
         ROUTINE EARLBCTR,CONVERT1
         ROUTINE CRCICTR,CONVERT1                                S99223
         ROUTINE TRDSCTR,CONVERT2
         LABEL 'NOISE','WRT TR VRC','EARLY BOR','CRC III',       S99223C
               'TEMP RDS'                                        S99223
         LINE
         ROUTINE RWVRCCTR,CONVERT1
         ROUTINE WRTTMCTR,CONVERT1
         ROUTINE EARLECTR,CONVERT1
         ROUTINE BACKCTR,CONVERT1                                S99223
         ROUTINE TWRTSCTR,CONVERT2
         LABEL 'R/W VRC','WRT TM CHK','E END/SAGC CK',           S99223C
               'BACKWARD','TEMP WRTS'                            S99223
         LINE
         ROUTINE MTECTR,CONVERT1
         ROUTINE STRDCTR,CONVERT1
         ROUTINE SLWBCTR,CONVERT1
         ROUTINE BUSCTR,CONVERT1                                 S99223
         ROUTINE SIOCTR,CONVERT3
         LABEL 'MTE/LRCR','ST RD CHK','SLOW BOR',                S99223C
               'BUS OUT CHK','SIO COUNT'                         S99223
         LINE
         ROUTINE EDCCTR,CONVERT1
         ROUTINE PARTCTR,CONVERT1
         ROUTINE SLWECTR,CONVERT1
         ROUTINE ALUCTR,CONVERT1                                 S99223
         ROUTINE ERASECTR,CONVERT2
         LABEL 'EDC/CRCR','PARTIAL REC','SLOW END',              S99223C
               'ALU CK/MP ERR','ERASE GAPS'                      S99223
         LINE
         ROUTINE ENVCTR,CONVERT1
         ROUTINE EXCCTR,CONVERT1
         ROUTINE VELRCTR,CONVERT1
         ROUTINE PEIDCTR,CONVERT1                                S99223
         ROUTINE CLNRCTR,CONVERT2
         LABEL 'ENV/ECC','EXC POST OR TM','VEL RETRY',           S99223C
               'ID BURST CHK','CLEAN ACTS'                       S99223
         LINE
         ROUTINE OVERCTR,CONVERT1
         ROUTINE IBGCTR,CONVERT1
         ROUTINE CRECTCTR,CONVERT1                               S99223
         ROUTINE DUM1,DONOTHNG
         ROUTINE DDNOISE,CONVERT2
         LABEL 'OVERRUN','IBG DROP','6250 CORRECTN','',          S99223C
               'NOISE RCD'                                       S99223
         LINE
         ROUTINE SKEWCTR,CONVERT1
         ROUTINE FEEDCTR,CONVERT1
         ROUTINE VELCCTR,CONVERT1                                S99223
         LABEL 'SKEW','FEED THRU/RES','VEL CHG'                  S99223
         LINE
         ROUTINE CCOMPCTR,CONVERT1
         ROUTINE CRCCTR,CONVERT1                                 S99223
         ROUTINE CBCCTR,CONVERT1                                 S99223
         LABEL 'C/P COMPARE','RESERVED','CBC'                    S99223
         LINE
         ROUTINE DUM1,FREE
         LABEL ' '
         DC    X'FF'
         DC    X'000000000000'
         DS    0F
         DC    C'$'
LABELS   EQU   *
         LSTART
         END
