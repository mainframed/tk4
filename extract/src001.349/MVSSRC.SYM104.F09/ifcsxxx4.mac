         TITLE 'IFCSXXX4 - SUM TABLE - LINKNAME=IFCS2311, ALIASES=IFCS2C
               302,IFCS2303,IFCS2321'
         SPACE 2
*  LINE MACRO     LINE MACRO     LINE MACRO     LINE MACRO            *
         MACRO
&NAME    LINE  &DATA,&LABEL,&SKIP=
.*                            THIS MACRO ESTABLISHES THE MARGINS OR
.*                                 COLUMN SETTINGS FOR EACH LINE. IT
.*                                 GENERATES NECESSARY CARRIAGE CONTROL
.*                                 ENTRIES. LASTLY IT DETERMINES THE
.*                                 NUMBER OF ENTRIES ASSOCIATED WITH
.*                                 THE PREVIOUS LINE AND STORES THAT #
.*                                 INTO THE APPROPRIATE BYTE.
.*                                 &DATA(1) - CHARACTER POSITION TO
.*                                 BEGIN DATA.
.*
.*                                 &DATA(2) - # OF SPACES BETWEEN
.*                                 SUCCESSIVE DATA COLUMN STARTING
.*                                 CHARACTERS.
.*
.*                                 &LABEL(1) - CHARACTER POSITION
.*                                 TO BEGIN LABELS.
.*
.*                                 &LABEL(2) - # OF SPACES BETWEEN
.*                                 LINE'S LABEL STARTING CHARACTERS.
.*
.*                                 &SKIP= - # OF LINES TO ADVANCE
.*                                 CARRIAGE TO BEGIN NEXT PRINTED LINE.
.*
.*                                 NEW ENTRIES ARE GENERATED ONLY WHEN
.*                                 NECESSARY. OMISSION OF ITEMS MEANS
.*                                 THEY HAVE NOT CHANGED SINCE PREVIOUS
.*                                 SETTINGS. A LINE MACRO IS REQUIRED
.*                                 FOR EACH PRINTED LINE. IF NO SETTING
.*                                 CHANGES ARE REQUIRED ALL OPERANDS
.*                                 ARE OMITTED IN WHICH CASE ONLY THE
.*                                 # OF ENTRIES FOR THE PREVIOUS LINE
.*                                 FIRST MACRO INSTRUCTION ISSUED FOR
.*                                 THE SUBJECT LINE.
         GBLA  &DB,&DT,&LB,&LT,&NRENTS
         GBLA  &LASTCC,&INITIAL
         GBLC  &NRENTSX
         GBLC  &CARRCON
         GBLB  &TEST
         LCLA  &S
&NAME    DS    0C
         AIF   (&INITIAL EQ 0).FIRSTLN
         LINEND
         AGO   .NTFIRST
.FIRSTLN ANOP
&NRENTSX SETC  'N&SYSNDX'
&INITIAL SETA  1
&LASTCC  SETA  1
N&SYSNDX EQU   *
.NTFIRST ANOP
         DC    AL1(0)
         AIF   ('&DATA(1)' EQ '').CKDTABS
         AIF   ('&DATA'(1,1) NE '(').SLABEL
         AIF   (&DATA(1) EQ &DB).CKDTABS
&DB      SETA  &DATA(1)
         AGO   .AA
.CKDTABS AIF   ('&DATA(2)' EQ '').NCDATA
         AIF   (&DATA(2) EQ &DT).NCDATA
         AGO   .CC
.AA      AIF   ('&DATA(2)' EQ '').BB
         AIF   (&DATA(2) EQ &DT).BB
.CC      ANOP
&DT      SETA  &DATA(2)
.BB      DC    XL2'FFFE'
         DC    FL1'&DB'
         DC    FL1'&DT'
&NRENTS  SETA  &NRENTS+1
.NCDATA  ANOP
         AIF   ('&LABEL(1)' EQ '').CKLTABS
         AIF   ('&LABEL'(1,1) NE '(').SLABEL
         AIF   (&LABEL(1) EQ &LB).CKLTABS
&LB      SETA  &LABEL(1)
         AGO   .AAA
.CKLTABS AIF   ('&LABEL(2)' EQ '').NCLABEL
         AIF   (&LABEL(2) EQ &LT).NCLABEL
         AGO   .CCC
.AAA     AIF   ('&LABEL(2)' EQ '').BBB
         AIF   (&LABEL(2) EQ &LT).BBB
.CCC     ANOP
&LT      SETA  &LABEL(2)
.BBB     DC    XL2'FFFF'
         DC    FL1'&LB'
         DC    FL1'&LT'
&NRENTS  SETA  &NRENTS+1
.NCLABEL ANOP
         AIF   ('&SKIP' EQ 'E').EJECT
         AIF   ('&SKIP' EQ '').TESTOFF
.CONT    ANOP
         AIF   (&TEST EQ 0).AB
         AIF   (&SKIP EQ &LASTCC).TESTOFF
&S       SETA  &SKIP
         ORG   &CARRCON+3
         DC    AL.3(0),AL.2(&S),AL.3(1)
         ORG
&LASTCC  SETA  &S
.SLABEL  ANOP
.TESTOFF ANOP
&TEST    SETB  0
         AGO   .DD
.EJECT   DC    XL2'FFFB'
&NRENTS  SETA  &NRENTS+1
         DC    X'8B'              SKIP TO CHANNEL 1
         DC    AL.3(0),AL.2(&LASTCC),AL.3(1)
&TEST    SETB  1
         AGO   .DD
.AB      AIF   (&SKIP EQ &LASTCC).NOCHANG
A&SYSNDX DC    XL2'FFFB'
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
&LASTCC  SETA  &SKIP
&TEST    SETB  1
&CARRCON SETC  'A&SYSNDX'
&NRENTS  SETA  &NRENTS+1
.DD      ANOP
.NOCHANG ANOP
         MEND
         EJECT
         SPACE 2
*  ROUTINE MACRO     ROUTINE MACRO     ROUTINE MACRO     ROUTINE MACRO*
         MACRO
&NAME    ROUTINE &LOGITEM,&RNAME
         GBLC  &DSECT,&CSECT
         GBLC  &ITEM(1000)
         GBLA  &SHIFT(1000),&ITEMNBR
         GBLA  &NRENTS
         LCLA  &ISHIFT,&NDX
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOG ITEM NOT DEFINED'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&NAME    DC    AL.12(&LOGITEM-&DSECT),XL.4'D'
         DC    AL.4(&ISHIFT),AL.12(&RNAME-&CSECT)
&NRENTS  SETA  &NRENTS+1
         MEND
*  DSGEN MACRO     DSGEN MACRO     DSGEN MACRO     DSGEN MACRO        *
         SPACE 2
         MACRO
&NAME    DSGEN &X1,&X2,&X3,&X4,&X5,&X6,&X7,&X8,&X9,&X10,&X11,&X12,&X13,X
               &X14,&X15,&X16,&X17,&X18,&X19,&X20,&X21,&X22,&X23,&X24, X
               &X25,&X26,&X27,&X28,&X29,&X30,&X31,&X32
.*                            THIS MACRO GENERATES ONE DSECT WORD
.*                                 FORMATTED FOR THE SUBJECT LOG RECORD
.*                                 EACH OPERAND HAS TWO SUB LISTS. THE
.*                                 FIRST IS THE NAME OF THE LOG ITEM
.*                                 WHILE THE SECOND IS THE # OF BITS TO
.*                                 ALLOCATE FOR THIS ITEM. ITEMS MUST
.*                                 BE DEFINED CONTIGUOUSLY WITHOUT GAPS
.*                                 UNUSED BIT GROUPS MUST BE GIVEN
.*                                 DUMMY NAMES. THE NAMES PROVIDED FOR
.*                                 THE LOG ITEMS MAY THEN BE USED IN
.*                                 THE CONVERSION MACRO INSTRUCTIONS.
         GBLC &ITEM(1000)
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000)
         LCLC  &SYMBOL
         LCLA  &OP,&COUNT,&BYTE
.LOOP    ANOP
&OP      SETA  &OP+1
&ITEMNBR SETA  &ITEMNBR+1
&SYMBOL  SETC  '&SYSLIST(&OP,1)'
         AIF   ('&SYSLIST(&OP,2)' NE '').OK1
         MNOTE *,'NULL BIT COUNT FIELD'
         MEXIT
.OK1     ANOP
         AIF   ('&SYMBOL' NE '').OK
         MNOTE 'LOG ITEM SYMBOL NOT PROVIDED'
         AGO   .CNT
.OK      ANOP
         AIF   ('&SYMBOL'(1,1) EQ '''').CNT                *TEMP*
&SYMBOL  EQU   *+&BYTE
&ITEM(&ITEMNBR)  SETC '&SYSLIST(&OP,1)'
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)
&SHIFT(&ITEMNBR) SETA &COUNT-&BYTE*8
.CNT     ANOP
&COUNT   SETA  &COUNT+&SYSLIST(&OP,2)
&BYTE    SETA  &COUNT/8
         AIF (&OP LT N'&SYSLIST).LOOP
         AIF   (&COUNT NE 32).NOT32
&NAME    DS    4C
         MEXIT
.NOT32   AIF   (&COUNT NE 64).ERR
&NAME    DS    8C
         MEXIT
.ERR     MNOTE '**BIT COUNT FIELDS DO NOT TOTAL 32 OR 64**'
         MEND
         MACRO
         LINEND
.*                            THIS MACRO IS USED ONLY BY THE LINE
.*                                 MACRO TO SET THE NUMBER OF ENTRIES
.*                                 ASSOCIATED WITH EACH LINE.
         GBLA  &NRENTS
         GBLC &NRENTSX
         ORG   &NRENTSX
         DC    FL1'&NRENTS'
         ORG
&NRENTS  SETA  0
B&SYSNDX EQU   *
&NRENTSX SETC  'B&SYSNDX'
         MEND
         SPACE 2
         EJECT
*  LABEL MACRO     LABEL MACRO     LABEL MACRO     LABEL MACRO        *
         SPACE 2
         MACRO
&NAME    LABEL &LABEL1,&LABEL2,&LABEL3,&LABEL4,&LABEL5,&LABEL6,        C
               &LABEL7,&LABEL8
.*                            THIS MACRO ALLOWS UP TO ACHT LABELS TO
.*                                 BE SPECIFIED FOR A GIVEN LINE. THE
.*                                 LABELS SHOULD BE ENCLOSED IN QUOTA-
.*                                 TION MARKS. THE COLUMN AND LINE END
.*                                 CONTROLS WILL BE INSERTED BY THE
.*                                 MACRO. OMITTED OPERANDS MEAN NO
.*                                 LABEL REQUIRED FOR RESPECTIVE
.*                                 COLUMN. THIS MACRO WILL ALSO ALERT
.*                                 THE PROGRAMMER TO EXACTLY WHERE THE
.*                                 TABLE MUST BE BROKEN IF NECESSARY
.*                                 TO AVOID EXCEEDING THE MAXIMUM LIMIT
         GBLC &LABELS(2000)
         GBLC  &LBL(100)
         GBLA  &LBLCTR(100)
         GBLA  &LABELNR
         GBLA  &NRENTS,&LPTR
         LCLC  &MARGIN,&TACK
         LCLC  &TEXT
         LCLA  &OP,&K,&START,&NRCHAR,&REMAIN
&MARGIN  SETC  '*'
         AIF   ('&NAME' EQ '').LOOPOUT
&LPTR    SETA  &LPTR+1
&LBL(&LPTR) SETC '&NAME'
&LBLCTR(&LPTR) SETA &LABELNR+1
.LOOPOUT ANOP
&OP      SETA  &OP+1
&K       SETA  K'&SYSLIST(&OP)
         AIF (&K GE 2).NORM
&K       SETA  2
.NORM    ANOP
&START   SETA  2
         AIF (&OP LT N'&SYSLIST).NOTLAST
&MARGIN  SETC  '$'
.NOTLAST ANOP
&NRCHAR  SETA  8
&TACK    SETC  ''
.LOOPIN  ANOP
&REMAIN  SETA  &K-&START
         AIF (&REMAIN GE 8).MORE
&TACK    SETC  '&MARGIN'
&NRCHAR  SETA  &REMAIN
.MORE    ANOP
&TEXT    SETC  ''
         AIF (&REMAIN EQ 0).ENDTEXT
&TEXT    SETC  '&SYSLIST(&OP)'(&START,&NRCHAR)
.ENDTEXT ANOP
&LABELNR SETA  &LABELNR+1
&LABELS(&LABELNR) SETC '&TEXT'.'&TACK'
&START   SETA  &START+8
         AIF ('&TACK' EQ '').LOOPIN
         AIF ('&TACK' EQ '*').LOOPOUT
         MEND
         SPACE 2
         MACRO
         LSTART
.*                            THIS MACRO IS ISSUED WHEN THE LABEL AREA
.*                                 OF THE TABLE IS TO BEGIN.
         GBLC &LABELS(2000)
         GBLA  &LABELNR
         GBLC  &LBL(100)
         GBLA  &LBLCTR(100)
         LCLA  &NDX,&CTR
         LINEND
&CTR     SETA  1
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   (&LBLCTR(&CTR) NE &NDX).NOLBL
&LBL(&CTR) DC  C'&LABELS(&NDX)'
&CTR     SETA  &CTR+1
         AGO   .LOOPCTL
.NOLBL   ANOP
         DC    C'&LABELS(&NDX)'
.LOOPCTL AIF   (&NDX LT &LABELNR).LOOP
         MEND
         SPACE 2
*  BIN MACRO     BIN MACRO     BIN MACRO     BIN MACRO     BIN MACRO  *
         SPACE 2
         MACRO
         BIN   &LOGITEM,&SKIP$OR
.*                                 &LOGITEM - NAME OF ITEM IN LOG
.*                                      RECORD DSECT
.*                                 &SKIP$OR - NBR OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES
.*                                      TO BACK UP FROM COLUMN FOR
.*                                      START OF PRINTING. THE LETTER
.*                                      B PRECEEDS THE NUMBER (B5) IF
.*                                      THE LATTER IS DESIRED. OMISSION
.*                                      OF THIS OPERAND FORCES OPTION 2
.*                                      WITH BACKUP SPACING EQUAL TO
.*                                 THE NUMBER OF BITS IN THE ITEM
.*                                 DEFINITION (VIA MACRO 'DSGEN').
.*                            A LIMIT OF 15 BITS IS IMPOSED FOR THE
.*                                 TOTAL NUMBER OF BITS TO PRINT.
         GBLC &ITEM(1000)
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000),&NRENTS
         GBLC  &DSECT
         LCLB  &B
         LCLA  &IBITS,&NDX,&ISHIFT,&K
         LCLA  &TEMP,&T
         LCLC  &S
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'YOU BLEW IT'
         ROUTINE DUM,SKIPPER
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
&T       SETA  &IBITS-1
&B       SETB  0
         AIF   ('&SKIP$OR' EQ '').BACKUP
&K       SETA  K'&SKIP$OR
&B       SETB  ('&SKIP$OR'(1,1) EQ 'B')
&S       SETC  '&SKIP$OR'(&B+1,&K-&B)
&T       SETA  &S
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
&TEMP    SETA  &ISHIFT
A&SYSNDX DC    AL.12(&LOGITEM-&DSECT),XL.4'&TEMP'
         AIF (&IBITS EQ 1 AND &B EQ 0).OUT
         ORG   A&SYSNDX
&B       SETB  1
         DC    AL.12(&LOGITEM-&DSECT),XL.4'C'
         DC    BL.1'&B',AL.7(&T),AL.4(&IBITS),FL.4'&ISHIFT'
.OUT     ANOP
         MEND
         EJECT
*  HEX MACRO     HEX MACRO     HEX MACRO    HEXN MACRO     HEX MACRO  *
         SPACE 2
         MACRO
         HEX   &LOGITEM,&SKIP$OR,&BYTES
.*                            THIS MACRO FACILITATES GENERATION OF THE
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE
.*                                 CONVERSIONS.
.*                            &LOGITEM - NAME OF DATA ITEM TO BE
.*                                 CONVERTED
.*                            &SKIP$OR - NUMBER OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO
.*                                 BACK UP FROM COLUMN FOR START OF
.*                                 PRINTING. THE LETTER B PRECEEDS THE
.*                                 NUMBER (B8) IF THE LATTER OPTION IS
.*                                 DESIRED. OMISSION OF THIS OPERAND
.*                                 FORCES OPTION 2 WITH BACKUP SPACING
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR
.*                                 IMPLICITLY B).
.*                            &BYTES - NUMBER OF TOTAL INPUT BYTES TO
.*                                 PROCESS. THIS NUMBER IS SUFFIXED
.*                                 WITH AN L,R, OR B TO STIPULATE
.*                                 PRINTING OF THE LEFT HALF, RIGHT
.*                                 HALF, OR BOTH HALVES OF THE BYTE
.*                                 RESPECTIVELY. OMISSION OF THIS
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES-
.*                                 SARY. THIS MACRO MUST BE THE FIRST
.*                                 MACRO INSTRUCTION ISSUED FOR THE
.*                                 SUBJECT LINE(S).
         GBLC &ITEM(1000),&DSECT
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000),&NRENTS
         LCLB  &B
         LCLA  &IBITS,&NDX,&ISHIFT,&K,&T,&CODE,&BYTESP
         LCLC  &S,&LETTER
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOG ITEM NOT DEFINED'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
&CODE    SETA  1
&K       SETA  K'&BYTES
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK
         MNOTE *,'BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL'
         MEXIT
.OK      AIF   ('&BYTES' EQ '').USEDEFN
&LETTER  SETC  '&BYTES'(&K,1)
&S       SETC  '&BYTES'(1,&K-1)
&BYTESP  SETA  &S
         AIF   ('&LETTER' EQ 'B').BOTH
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).OK2
.ERR     MNOTE *,'DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY'
         MEXIT
.USEDEFN ANOP
&BYTESP  SETA  &IBITS/8
.BOTH    AIF   (&ISHIFT NE 0).ERR
&CODE    SETA  3
&T       SETA  &BYTESP*2-1
&S       SETC  '&T'
.OK2     AIF   (&ISHIFT EQ 0).L
&CODE    SETA  2
.L       ANOP
&B       SETB  1
         AIF   ('&SKIP$OR' EQ '').BACKUP
&K       SETA  K'&SKIP$OR
&B       SETB  ('&SKIP$OR'(1,1) EQ 'B')
&S       SETC  '&SKIP$OR'(&B+1,&K-&B)
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
         DC    AL.12(&LOGITEM-&DSECT),XL.4'A'
         DC    BL.1'&B',FL.7'&S',FL.4'&BYTESP',FL.4'&CODE'
.OUT     ANOP
         MEND
         MACRO
         SPECIAL  &ROUTINE,&PARAM,&SPACE=
.*                            THIS MACRO GENERATES A SPECIAL ROUTINE
.*                                 ENTRY TO BE PROCESSED BY THE SUM. M.
.*                            &ROUTINE - SYMBOL ON SPECIAL ROUTINE EWT.
.*                            &PARAM - AN 8 BIT BINARY REPRESENTATION
.*                                 TO OCCUPY THE 'MASK' FIELD BUT TO BE
.*                                 INTERPRETED AS AN ARGUMENT OF THE
.*                                 SPECIAL ROUTINE.
.*                            &SPACE - THE NUMBER OF 2BYTE COUNTERS TO
.*                                 ALLOCATE FOR REQUIRED PROCESSING.
         GBLC  &CSECT
         GBLA  &COUNTR
         LCLA  &ADD
         DC    AL1(128)
         DC    BL.8'&PARAM'
         DC    AL2(&ROUTINE-&CSECT)
         DC    AL2(&COUNTR)
&ADD     SETA  1
         AIF   ('&SPACE' EQ '').NORM
&ADD     SETA  &SPACE
.NORM    ANOP
&COUNTR  SETA  &COUNTR+&ADD
         MEND
         MACRO
         SUM   &LOGITEM,&MASK
.*                            THIS MACRO GENERATES A NORMAL EDIT ENTRY
.*                                 FOR PROCESSING BY THE SUMMARY MODULE
.*                            &LOGITEM - NAME OF DATA ITEM TO BE SUMMED
.*                            &MASK - BYTE MASK FOR BITS TO BE TESTED.
.*                                 THIS OPERAND SHOULD BE OMITTED FOR
.*                                 SINGLE BIT ITEMS IN WHICH CASE THE
.*                                 MASK WILL BE SET ACCORDING TO THE
.*                                 OFF BYTE BIT DISPLACEMENT OF THE
.*                                ITEM AS DEFINED BY THE MACRO 'DSGEN'
         GBLA  &COUNTR,&ITEMNBR,&BITS(1000),&SHIFT(1000)
         GBLC  &ITEM(1000),&DSECT
         LCLA  &IBITS,&NDX,&ISHIFT,&M,&BITNBR
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOGITEM NOT FOUND'
         MEXIT
.FOUND   ANOP
         DC    AL1(0)
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
         AIF   ('&MASK' EQ '').FORM
         DC    B'&MASK'
         AGO   .ITEM
.FORM    ANOP
&BITNBR  SETA  &ISHIFT-7
&BITNBR  SETA  0-&BITNBR
&M       SETA  1
.LOOP2   ANOP
         AIF   (&BITNBR EQ 0).GOTIT
&M       SETA  &M*2
&BITNBR  SETA  &BITNBR-1
         AGO   .LOOP2
.GOTIT   ANOP
         DC    AL1(&M)
.ITEM    DC    AL2(&LOGITEM-&DSECT)
         DC    AL2(&COUNTR)
&COUNTR  SETA  &COUNTR+1
         MEND
         GBLC  &DSECT,&CSECT
&CSECT   SETC  'IFCSXXX4'
&DSECT   SETC  'XXX4'
IFCSXXX4 CSECT
*
*              OBR SUM TABLE
*              DEVICE CODE=2001   DEVICE=2311  ALIAS=IFCS2311
*                          2003          2303        IFCS2303
*                          2004          2302        IFCS2302
*                          2005          2321        IFCS2321
*
*
XXX4     DSECT
         DSGEN (XKEY1,16),(XDUM1,8),(XSW,1),(SW2B1,1),           S21021X
               (SHRTSW,1),(SW2B3,1),(SW2B4,1),(SW2B5,1),         S21021X
               (SW2B6,1),(SW2B7,1)                               S21021
         DSGEN (XDUM2,32)                    SPARES
         DSGEN (XDATE,32)                    DATE
         DSGEN (XTIME,32)                    TIME
         DSGEN (XDUM3,8),(XSER,24)           SERIAL NO
         DSGEN (XMODEL,16),(XDUM8,16)        MODEL NUMBER
         DSGEN (XPGN1,32)                    JOB
         DSGEN (XPGN2,32)                       NAME
         DSGEN (XFCCWCC,8),(XFCCWDA,24)      FAILING
         DSGEN (XFCCWFL,8),(XZERO,8),(XFCCWCT,16)   FAILING CCW
         DSGEN (XCSWK,8),(XCSWCA,24)                CSW
         DSGEN (XCSWATTN,1),(XCSWSM,1),(XCSWUA,1),(XCSWBSY,1),         C
               (XCSWCE,1),(XCSWDE,1),(XCSWUC,1),(XCSWUE,1),            C
               (XCSWPCI,1),(XCSWSILI,1),(XCSWPC,1),(XCSWPCHK,1),       C
               (XCSWCDC,1),(XCSWCCC,1),(XCSWICC,1),(XCSWCH,1),         C
               (XCSWCT,16)
         DSGEN (XECSW,32)                              ECSW
         DSGEN (XDEVT1,16),(XDEVT2,16)
         DSGEN (XDUM6,8),(XCUA,24)                     CUA
         DSGEN (XDUM7,32)                              VOLUME
         DSGEN (XVOL1,32)                                   SERIAL
         DSGEN (XVOL2,16),(XDUMP,16)                             NO
         DSGEN (XDUM11,32)
         DSGEN (XDUM12,32)
         DSGEN (XDUM13,32)
         DSGEN (XDUM14,32)
         DSGEN (SDR1,8),(SDR2,8),(SDR3,8),(SDR4,8),              S21021C
               (SDR5,8),(SDR6,8),(SDR7,8),(SDR8,8)               S21021
         DSGEN (XDUM17,16),                                            C
               (XB0CMDR,1),(XB0INTRQ,1),(XB0BUSC,1),(XB0ECHK,1),       C
               (XB0DCHK,1),(XB0OVRN,1),(XB0TRKC,1),(XB0SKCK,1),        C
               (XB1DCHK,1),(XB1TRK0,1),(XB1CYLE,1),(XB1INVS,1),        C
               (XB1RECU,1),(XB1FILP,1),(XB1MAMG,1),(XB1OVFL,1)
         DSGEN (XB2UNSF,1),(XB2BIT1,1),(XB2SERC,1),(XB2TAGL,1),        C
               (XB2ALUC,1),(XB2UNSL,1),(XB2BIT6,1),(XB2BIT7,1),        C
               (XB3REDY,1),(XB3ONLN,1),(XB3UNSF,1),(XB3BIT3,1),        C
               (XB3ONLA,1),(XB3CYLE,1),(XB3BIT6,1),(XB3SEEK,1),        C
               (XB4BIT0,1),(XB4BIT1,1),(XB4BIT2,1),(XB4BIT3,1),        C
               (XB4BIT4,1),(XB4BIT5,1),(XB4BIT6,1),(XB4BIT7,1),        C
               (XB5BIT0,1),(XB5BIT1,1),(XB5BIT2,1),(XB5BIT3,1),        C
               (XB5BIT4,1),(XB5BIT5,1),(XB5BIT6,1),(XB5BIT7,1)
*                                                                S21021
EXPNOBR  DSECT                                                   S21021
EXPNHDRA DS    CL52                                              S21021
EXPNDEVA DS    CL12                                              S21021
EXPNDA   DS    CL24                                              S21021
EXPNSDRA DS    CL10                                              S21021
EXPNSNSA DS    CL6                                               S21021
*                                                                S21021
SHRTOBR  DSECT                                                   S21021
SHRTHDRA DS    CL24                                              S21021
SHRTDEVA DS    CL8                                               S21021
SHRTSDRA DS    CL10                                              S21021
*                                                                S21021
NORMOBR  DSECT                                                   S21021
NORMHDRA DS    CL64                                              S21021
NORMDA   DS    CL24                                              S21021
NORMSDRA DS    CL10                                              S21021
NORMSNSA DS    CL6                                               S21021
*                                                                S21021
IFCSXXX4 CSECT
         USING XXX4,R2
         USING *,R9
         DC    A(ENTRIES)               PTR TO ENTRIES
         DC    A(PEDIT)                 PTR TO EDIT SECTION OF SUM TBL
REG8     DC    F'0'                     R8 SAVE AREA CURRENT ENTRY
SCSIZE   DC    H'220'                   NO OF 2 BYTE CNTRS FOR SUS21021
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
*        SPECIAL ROUTINE SECTION   R2=PTR TO LOGREC R9=BASE ADDR
*                                  R3=PTR TO BUM COUNTER
XFAILCCW EQU   *
         TM    XSW,HEX20                IS THIS A SHORT RECORD?  S21021
         BCR   1,R14                    YES, NO CCW, RETURN      S21021
*
         STM   R14,R12,L12(R13)         SAVE REGS
         SR    R7,R7
         IC    R7,XFCCWCC               PICK UP FAILING CCW CODE
         B     COMMON
*
*
XDATE1   STM   R14,R15,L12(R13)         SAVE R14 & R 15          S21021
         BAL   R14,EXPANDER             BAL TO EXPAND REC        S21021
         STM   R0,R12,L20(R13)          SAVE REMAINDER OF REGS   S21021
         CLC   XDATE(L4),HEX00         IS DATE ZERO
         BE    RETURN                   BR-ZERO
         CLC   L0(L4,R3),HEX00          IS LOW DATE ZERO
         BNE   XDATE2                   BR-NO
         MVC   L0(L4,R3),XDATE          MOVE IN DATE
XDATE2   EQU   *
         CLC   XDATE(L4),L0(R3)         CHECK FOR LOW DATE
         BL    SAVELOW                  LOWER SAVE IT
         CLC   XDATE(L4),L4(R3)         CHECK FOR HI
         BNH   RETURN                   BR-NOT HI
SAVEHI   MVC   L4(L4,R3),XDATE          MOVE HI DATE
         B     RETURN
SAVELOW  MVC   L0(L4,R3),XDATE          MOVE LOW DATE
         B     RETURN
*
SETVOLS  TM    XSW,HEX20                IS THIS A SHORT RECORD?  S21021
         BCR   1,R14                    YES, NO VOLSER, RETURN   S21021
         STM   R5,R8,XSAVE              SAVE REGS                S21021
         LA    R5,L10              SET COUNTER POINTER &
         LR    R6,R3               LOOP COUNTER
SETVOL1  CLC   L0(L6,R6),ZEROS     IS COUNTER EMPTY
         BE    SETVOL2             BR-YES
         CLC   L0(L6,R6),XVOL1     ARE SERS EQUAL
         BE    SETVOL3             BR-YES
         LA    R6,L8(R6)           BUMP POINTER TO NEXT SLOT
         BCT   R5,SETVOL1          LOOP
         B     RETURNV             FULL IGNORE
SETVOL2  MVC   L0(L6,R6),XVOL1     MOVE SER TO COUNTERS
SETVOL3  LH    R5,L6(R6)           PICK UP COUNTER
         LA    R5,L1(R5)           ADD 1 TO COUNTER
         STH   R5,L6(R6)           RESTORE COUNTER
RETURNV  LM    R5,R8,XSAVE         RESET REGS
         BR    R14
*                                                                S21021
*                                       ROUTINE TO SUM SDR CNTRS S21021
*                                                                S21021
SDR1L    IC    R15,SDR1                                          S21021
SDRLEFT  SLL   R15,L24                  SHIFT OFF UNUSED BITS    S21021
SDRADD   SRL   R15,L28                  MOVE IT BACK FOR ADD     S21021
         AH    R15,L0(R3)               ADD IN COUNTER           S21021
         STH   R15,L0(R3)               SAVE RESULT              S21021
         BR    R14  RETURN                                       S21021
SDR1R    IC    R15,SDR1                 PICK UP COUNTER          S21021
SDRRIGHT SLL   R15,L28                  SHIFT OFF UNUSED BITS    S21021
         B     SDRADD                                            S21021
SDR2L    IC    R15,SDR2                                          S21021
         B     SDRLEFT                                           S21021
SDR3L    IC    R15,SDR3                                          S21021
         B     SDRLEFT                                           S21021
SDR4L    IC    R15,SDR4                                          S21021
         B     SDRLEFT                                           S21021
SDR5L    IC    R15,SDR5                                          S21021
         B     SDRLEFT                                           S21021
SDR6L    IC    R15,SDR6                                          S21021
         B     SDRLEFT                                           S21021
SDR7L    IC    R15,SDR7                                          S21021
         B     SDRLEFT                                           S21021
SDR8L    IC    R15,SDR8                                          S21021
         B     SDRLEFT                                           S21021
SDR2R    IC    R15,SDR2                                          S21021
         B     SDRRIGHT                                          S21021
SDR3R    IC    R15,SDR3                                          S21021
         B     SDRRIGHT                                          S21021
SDR4R    IC    R15,SDR4                                          S21021
         B     SDRRIGHT                                          S21021
SDR5R    IC    R15,SDR5                                          S21021
         B     SDRRIGHT                                          S21021
SDR6R    IC    R15,SDR6                                          S21021
         B     SDRRIGHT                                          S21021
SDR7R    IC    R15,SDR7                                          S21021
         B     SDRRIGHT                                          S21021
SDR8R    IC    R15,SDR8                                          S21021
         B     SDRRIGHT                                          S21021
*                                                                S21021
EXPANDER STM   R5,R6,XSAVE              SAVE WORK REGS           S21021
         LA    R5,OBRAREA               GET EXP AREA             S21021
         LR    R6,R2                    SWAP ADDRESSES           S21021
         USING EXPNOBR,R5               SET DSECT ADDRESSABILITY S21021
         USING NORMOBR,R6                                        S21021
         XC    OBRAREA(L104),OBRAREA    CLEAR AREA               S21021
         TM    XSW,HEX20                IS IT A SHORT HEC        S21021
         BO    MOVESHRT                 YES                      S21021
MOVEALL  MVC   EXPNOBR(L104),NORMOBR    MOVE ALL REC             S21021
EXPNDRET ST    R2,SAVE2                 SAVE R2                  S21021
         LR    R2,R5                    SWAP REG POINTERS        S21021
         LM    R5,R6,XSAVE              RESET REGS               S21021
         BR    R14  RETURN                                       S21021
         USING SHRTOBR,R6                                        S21021
MOVESHRT MVC   EXPNHDRA(L24),SHRTHDRA                            S21021
         MVC   EXPNDEVA(L8),SHRTDEVA                             S21021
         MVC   EXPNSDRA(L10),SHRTSDRA                            S21021
         B     EXPNDRET                                          S21021
*                                                                S21021
RESETR2  L     R2,SAVE2                 RESET R2                 S21021
         BR    R14                                               S21021
*                                                                S21021
*
*
*
L0       EQU   0
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4
L5       EQU   5
L6       EQU   6                                                 S21021
L7       EQU   7
L8       EQU   8
L9       EQU   9                                                 S21021
L10      EQU   10
L12      EQU   12
L13      EQU   13                                                S21021
L14      EQU   14                                                S21021
L16      EQU   16                                                S21021
L17      EQU   17                                                S21021
L18      EQU   18                                                S21021
L20      EQU   20                                                S21021
L24      EQU   24                                                S21021
L28      EQU   28                                                S21021
L32      EQU   32                                                S21021
L36      EQU   36                                                S21021
L64      EQU   64                                                S21021
L104     EQU   104                                               S21021
HEX20    EQU   X'20'                                             S21021
SAVE2    DS    F                                                 S21021
OBRAREA  DS    CL104                                             S21021
         DS    0H
HEXFF    DC    X'FFFF'
HEX00    DC    XL4'00'
COMMON   SR    R1,R1
         L     R8,REG8             GET CURRENT PTR
         IC    R1,L1(R8)           PICK UP NUMBER OF ITERATIONS
         LR    R5,R1               PLACE VALUE IN R5
         SLL   R5,L2               MULTIPLY BY 2
         AR    R5,R3               SET PTR TO POS PAST CTRS HOLDING
*                                  DATA - SUM COUNTER
         LH    R4,HEXFF            PICK UP FULL FLG
LOOP1    CH    R4,L0(R3)           IS THIS COUNT EMPTY
         BNE   STORE               BR-YES NOT FFFF
         CH    R7,L2(R3)           IS DATE EQUAL TO STORED
         BE    BUMP                YES
         LA    R3,L4(R3)           BUMP DATA PTR
         LA    R5,L2(R5)           BUMP SUM PTR
         BCT   R1,LOOP1            LOOP TILL DONE
         B     RETURN              FULL RETURN
STORE    STH   R4,L0(R3)           STORE FFFF FLAG
BUMP     LH    R6,L0(R5)                PICK UP COUNTER
         STH   R7,L2(R3)           STORE DATA
         LA    R6,L1(R6)           BASED ON R5
         STH   R6,L0(R5)
*
RETURN   LM    R14,R12,L12(R13)    RESTORE REGS
         BR    R14                 RETURN
*
XDEVT    MVC   L0(L4,R3),XDEVT1         MOVE INTO SUM AREA DEVTYPE
         BR    R14                      RETURN
ZEROS    DC    XL6'00'
ENTRIES  DS    0F
         SPECIAL    XDATE1,00000000,SPACE=4
         SPECIAL    XDEVT,00000000,SPACE=2
         SPECIAL    XFAILCCW,00011000,SPACE=72
         SPECIAL    SETVOLS,00000000,SPACE=40
*                                                 SAVED 2 CNTRS SAVE
*                                                 CCW & 1 CNTER FOR SUM
*
         SUM        XB0CMDR
         SUM        XB0INTRQ
         SUM        XB0BUSC
         SUM        XB0ECHK
         SUM        XB0DCHK
         SUM        XB0OVRN
         SUM        XB0TRKC
         SUM        XB0SKCK
         SUM        XB1DCHK
         SUM        XB1TRK0
         SUM        XB1CYLE
         SUM        XB1INVS
         SUM        XB1RECU
         SUM        XB1FILP
         SUM        XB1MAMG
         SUM        XB1OVFL
         SUM        XB2UNSF
         SUM        XB2BIT1
         SUM        XB2SERC
         SUM        XB2TAGL
         SUM        XB2ALUC
         SUM        XB2UNSL
         SUM        XB2BIT6
         SUM        XB2BIT7
         SUM        XB3REDY
         SUM        XB3ONLN
         SUM        XB3UNSF
         SUM        XB3BIT3
         SUM        XB3ONLA
         SUM        XB3CYLE
         SUM        XB3BIT6
         SUM        XB3SEEK
         SUM        XB4BIT0
         SUM        XB4BIT1
         SUM        XB4BIT2
         SUM        XB4BIT3
         SUM        XB4BIT4
         SUM        XB4BIT5
         SUM        XB4BIT6
         SUM        XB4BIT7
         SUM        XB5BIT0
         SUM        XB5BIT1
         SUM        XB5BIT2
         SUM        XB5BIT3
         SUM        XB5BIT4
         SUM        XB5BIT5
         SUM        XB5BIT6
         SUM        XB5BIT7
         SPECIAL  SDR1L,0,SPACE=1                                S21021
         SPECIAL  SDR1R,0,SPACE=1                                S21021
         SPECIAL  SDR2L,0,SPACE=1                                S21021
         SPECIAL  SDR2R,0,SPACE=1                                S21021
         SPECIAL  SDR3L,0,SPACE=1                                S21021
         SPECIAL  SDR3R,0,SPACE=1                                S21021
         SPECIAL  SDR4L,0,SPACE=1                                S21021
         SPECIAL  SDR4R,0,SPACE=1                                S21021
         SPECIAL  SDR5L,0,SPACE=1                                S21021
         SPECIAL  SDR5R,0,SPACE=1                                S21021
         SPECIAL  SDR6L,0,SPACE=1                                S21021
         SPECIAL  SDR6R,0,SPACE=1                                S21021
         SPECIAL  SDR7L,0,SPACE=1                                S21021
         SPECIAL  SDR7R,0,SPACE=1                                S21021
         SPECIAL  SDR8L,0,SPACE=1                                S21021
         SPECIAL  SDR8R,0,SPACE=1                                S21021
         SUM   SHRTSW                                            S21021
         SPECIAL    RESETR2,0,SPACE=1                            S21021
         DC    X'FF'
PEDIT    DS    0F
&DSECT   SETC  'YYY4'
&CSECT   SETC  'PEDIT'
         USING *,R9
*
*              EDIT AND PRINT SECTION
*
         DC    A(PENTRY)                ADDRESS OF EDIT ENTRIES
         DC    C'IFCSXXX4'
YR9PTR   DS    F
YLABELP  DS    F
*
YYY4     DSECT
         DS    3H
         DSGEN (YDUMA,16),(YNOREC,16)
         DSGEN (YTYPE,8),(YCHAN,8),(YCUA,24),(YSER,24)
         DSGEN (YCPU,16),(YSMSW,16)
         DSGEN (YLOWD,32)               LOW DATE
         DSGEN (YHID,32)                HI DATE
         DSGEN (YDEVT1,16),(YDEVT2,16)
         DSGEN (YFFF01,16),(YNC01,8),(YCC01,8)
         DSGEN (YFFF02,16),(YNC02,8),(YCC02,8)
         DSGEN (YFFF03,16),(YNC03,8),(YCC03,8)
         DSGEN (YFFF04,16),(YNC04,8),(YCC04,8)
         DSGEN (YFFF05,16),(YNC05,8),(YCC05,8)
         DSGEN (YFFF06,16),(YNC06,8),(YCC06,8)
         DSGEN (YFFF07,16),(YNC07,8),(YCC07,8)
         DSGEN (YFFF08,16),(YNC08,8),(YCC08,8)
         DSGEN (YFFF09,16),(YNC09,8),(YCC09,8)
         DSGEN (YFFF10,16),(YNC10,8),(YCC10,8)
         DSGEN (YFFF11,16),(YNC11,8),(YCC11,8)
         DSGEN (YFFF12,16),(YNC12,8),(YCC12,8)
         DSGEN (YFFF13,16),(YNC13,8),(YCC13,8)
         DSGEN (YFFF14,16),(YNC14,8),(YCC14,8)
         DSGEN (YFFF15,16),(YNC15,8),(YCC15,8)
         DSGEN (YFFF16,16),(YNC16,8),(YCC16,8)
         DSGEN (YFFF17,16),(YNC17,8),(YCC17,8)
         DSGEN (YFFF18,16),(YNC18,8),(YCC18,8)
         DSGEN (YFFF19,16),(YNC19,8),(YCC19,8)
         DSGEN (YFFF20,16),(YNC20,8),(YCC20,8)
         DSGEN (YFFF21,16),(YNC21,8),(YCC21,8)
         DSGEN (YFFF22,16),(YNC22,8),(YCC22,8)
         DSGEN (YFFF23,16),(YNC23,8),(YCC23,8)
         DSGEN (YFFF24,16),(YNC24,8),(YCC24,8)
         DSGEN (YSC01,16),(YSC02,16)
         DSGEN (YSC03,16),(YSC04,16)
         DSGEN (YSC05,16),(YSC06,16)
         DSGEN (YSC07,16),(YSC08,16)
         DSGEN (YSC09,16),(YSC10,16)
         DSGEN (YSC11,16),(YSC12,16)
         DSGEN (YSC13,16),(YSC14,16)
         DSGEN (YSC15,16),(YSC16,16)
         DSGEN (YSC17,16),(YSC18,16)
         DSGEN (YSC19,16),(YSC20,16)
         DSGEN (YSC21,16),(YSC22,16)
         DSGEN (YSC23,16),(YSC24,16)
         DSGEN (YVOL1,48),(YVOL1C,16)
         DSGEN (YVOL2,48),(YVOL2C,16)
         DSGEN (YVOL3,48),(YVOL3C,16)
         DSGEN (YVOL4,48),(YVOL4C,16)
         DSGEN (YVOL5,48),(YVOL5C,16)
         DSGEN (YVOL6,48),(YVOL6C,16)
         DSGEN (YVOL7,48),(YVOL7C,16)
         DSGEN (YVOL8,48),(YVOL8C,16)
         DSGEN (YVOL9,48),(YVOL9C,16)
         DSGEN (YVOLA,48),(YVOLAC,16)
         DSGEN (YB0CMDR,16),(YB0INTV,16)
         DSGEN (YB0BOCHK,16),(YB0ECHK,16)
         DSGEN (YB0DCHK,16),(YB0OVRN,16),(YB0TRKC,16),(YB0SKCK,16)
         DSGEN (YB1DCHK,16),(YB1TRK0,16),(YB1CYLE,16),(YB1INVS,16)
         DSGEN (YB1RECU,16),(YB1FILP,16),(YB1MAMG,16),(YB1OVFL,16)
         DSGEN (YB2UNSF,16),(YB2BIT1,16),(YB2SERC,16),(YB2TAGL,16)
         DSGEN (YB2ALUC,16),(YB2UNSL,16),(YB2BIT6,16),(YB2BIT7,16)
         DSGEN (YB3REDY,16),(YB3ONLN,16),(YB3UNSF,16),(YB3BIT3,16)
         DSGEN (YB3ONLA,16),(YB3CYLE,16),(YB3BIT6,16),(YB3SEEK,16)
         DSGEN (YB4BIT0,16),(YB4BIT1,16),(YB4BIT2,16),(YB4BIT3,16)
         DSGEN (YB4BIT4,16),(YB4BIT5,16),(YB4BIT6,16),(YB4BIT7,16)
         DSGEN (YB5BIT0,16),(YB5BIT1,16),(YB5BIT2,16),(YB5BIT3,16)
         DSGEN (YB5BIT4,16),(YB5BIT5,16),(YB5BIT6,16),(YB5BIT7,16)
         DSGEN (YSDR1L,16),(YSDR1R,16)                           S21021
         DSGEN (YSDR2L,16),(YSDR2R,16)                           S21021
         DSGEN (YSDR3L,16),(YSDR3R,16)                           S21021
         DSGEN (YSDR4L,16),(YSDR4R,16)                           S21021
         DSGEN (YSDR5L,16),(YSDR5R,16)                           S21021
         DSGEN (YSDR6L,16),(YSDR6R,16)                           S21021
         DSGEN (YSDR7L,16),(YSDR7R,16)                           S21021
         DSGEN (YSDR8L,16),(YSDR8R,16)                           S21021
         DSGEN (YSHRT,16),(YDUM1,16)                             S21021
IFCSXXX4 CSECT
*
*        SPECIAL ROUTINE SECTION
*
SETCPUNO STM   R5,R8,XSAVE              SAVE REGS                S21021
         SR    R5,R5                    CLEAAR R5                S21021
         IC    R5,0(R4)                 PICK UP                  S21021
         SLL   R5,R8                      CPU TYPE               S21021
         IC    R5,L1(R4)                    FIELD                S21021
         LTR   R5,R5                    IS TI ZERO?              S21021
         BNZ   RETURNA                  NO, LINE IS GOOD, RETURN S21021
         LA    R6,L64                   ELSE, BACK UP DATA PTR   S21021
         SR    R3,R6                    TO PUT IN NEW INFO       S21021
         MVC   0(L6,R3),SHARED          SAY MODEL SHARED       @Z427VLS
         B     RETURNA                  RETURN                   S21021
*                                                                S21021
CONVERT  STM   R5,R8,XSAVE              SAVE REGS
         LH    R5,L0(R4)                PICK UP COUNT
CONV1    CVD   R5,WORK                  CONVERT IT TO DEVIMALP
         UNPK  L0(L3,R3),WORK+L5(L3)    UNPACK IT TO PRINT BUFF
         MVZ   L2(L1,R3),L0(R3)         PUT ON PRINTABLE ZONE
RETURNA  LM    R5,R8,XSAVE              RESTORE REGS
         BR    R14
*
SKIPPER  BR    R14                      RETURN
*
SETDATE  UNPK  WORK(L8),L0(L4,R4)       PACK DATE
         MVZ   WORK+L7(L1),WORK         MOVE ON ZONE
         MVC   L0(L3,R3),WORK+L5        MOVE DATE TO PRINT LINE
         MVC   L5(L2,R3),WORK+L3        MOVE YEAR TO PRINT LINE
         BR    R14
*
CONVCC1  CLC   L0(L2,R4),HEXFFFF        IS THIS COUNTER EMPYT
         BCR   L8,R14                   NO TI IS FULL
         SR    R15,R15                  STOP LINE PRINTING
         BR    R14                      RETURN
*              SET LABELS
*
SETLABEL STM   R5,R8,XSAVE              SAVE REGS
         CLI   L1(R4),HEX01             IS IT A 2311
         BE    RETURNA                  YES RETURN
         CLI   L1(R4),HEX04             TEST CODE TO 04
         BL    SET2303
         BE    SET2302
         BH    SET2321
SET2303  LA    R5,CLABEL1               SET PROPER LABEL
SET      ST    R5,YLABELP               PUT IN SAVE AREA
         B     RETURNA                  RETURN
SET2302  LA    R5,CLABEL2
         B     SET
SET2321  LA    R5,CLABEL3
         B     SET
HEX01    EQU   X'01'
HEX04    EQU   X'04'
*
SETSTAT  ST    R5,XSAVE                 SAVE REG                 S21021
         LA    R5,STATLABS              POINT TO STAT LABLES     S21021
         ST    R5,YLABELP               LET EREP KNOW            S21021
         L     R5,XSAVE                 RESTORE REG              S21021
         BR    R14                      RETURN                   S21021
*
*        FREEE COUNTERS AREA LAST THING DONE
*
FREECTR  STM   R14,R12,L12(R13)         SAVE ALL REGS
         LR    R12,R13                  SAVE SAVE AREA ADDR
         LA    R13,FSAVE                POINT TO MY SAVE
         ST    R12,L4(R13)              SET CHAINING POINTERS
         ST    R13,L8(R12)
         L     R3,L4(R2)                PICK UP POINTER TO NEXT COUNTER
         ST    R3,L28(R12)              SAVE POINTER IN REG SAVE
         LH    R0,SIZE                  PICK UP SIZE OF AREA
         LR    R1,R2                    SET ADDRESS
         FREEMAIN R,LV=(0),A=(1)
         LTR   R3,R3                    ANY MORE COUNTERS
         BZ    RETURN0                  NO  RETURN
         LA    R5,PENTRY+L10            POINT TO TOP ENTRY - 4
         ST    R5,YR9PTR
         LA    R5,LABELS-L1               POINT TO FIRST LABEL - 1
         ST    R5,YLABELP               STORE IT IN TABLE
RETURN0  L    R13,L4(R13)               PICK UP &
         LM    R14,R12,L12(R13)         RESTOR E REGS
         BR    R14
*
HEX02    EQU   X'02'
*
WORK     DS    D
XSAVE    DS    4F
FSAVE    DS    18F
SIZE     DC    H'462'                   NO OF BYTES TO BE FREED  S21021
HEXFFFF  DC    X'FFFF'
SETDEV   STM   R5,R8,XSAVE              SAVE REGS
         LH    R5,L0(R4)                PICK UP DEVICE TYPE
         LA    R6,L4                    SET NUMBER OF DEVICES
         LA    R7,DEVTBLE
LOOP     CH    R5,L0(R7)                IS IT THIS DEVICE
         BE    FOUND                    YES
         LA    R7,L6(R7)                BUMP UP TO NEXT DEV
         BCT   R6,LOOP                  LOOP TILL DONE
         B    RETURNA
FOUND    MVC   L0(L4,R3),L2(R7)         MOVE IN DEVICE TYPE
         B    RETURNA
*
SHARED   DC    C'SHARED'                                       @Z427VLS
*
SETVOL   MVC   L0(L6,R3),L0(R4)         MOVE LABEL TO LINE
         BR    R14                      RETURN
CHKVOL   CLC   L0(L6,R4),YZEROS         IS COUNTER IN USE
         BCR   L7,R14                   BR YES
         SR    R15,R15                  NO STOP PRINT
         BR    R14
YZEROS   DC    XL6'00'
*
DEVTBLE  DS    0F
         DC    X'2001'
         DC         C'2311'
         DC    X'2003'
         DC         C'2303'
         DC    X'2004'
         DC         C'2302'
         DC    X'2005'
         DC         C'2321'
CLABEL1  EQU   *
         DC   C'CMND REJ*DATA CHK*UNSAFE*DRUM RDY *BIT 0*COMMAND$'
         DC   C'INTV REQ*TRK OVERF*BIT 1*DRUM OPER*BIT 1*IN$'
         DC   C'BUS O CHK*CYL END*SERIAL CH*RD SAFETY*BIT 2*PROGRESS$'
         DC   C'EQUIP CHK*INV SEQ*TAG LINE*WR SAFETY*BIT 3*WHEN$'
         DC   C'DATA CHK*REC UNFND*ALU CHK*READY    *BIT 4*OVERFLOW$'
         DC   C'OVERRUN*FILE PROT*UNSEL STA*BIT 5    *BIT 5*INCMPLETE$'
         DC   C'TRK COND*MISG A MK*BIT 6*BIT 6    *BIT 6*OCCURS$'
         DC   C'SEEK CHK*OVFL INC*BIT 7*BIT 7   *BIT 7$'
         DC    C'$'
CLABEL2  EQU   *
         DC   C'CMND REJ*DATA CHK*UNSAFE*ACC RDY  *BIT 0*COMMAND$'
         DC   C'INTV REQ*TRK OVERF*BIT 1*ACC  OPER*BIT 1*IN$'
         DC   C'BUS O CHK*CYL END*SERIAL CH*RD SAFETY*BIT 2*PROGRESS$'
         DC   C'EQUIP CHK*INV SEQ*TAG LINE*WR SAFETY*BIT 3*WHEN$'
         DC   C'DATA CHK*REC UNFND*ALU CHK*ON LINE  *BIT 4*OVERFLOW$'
         DC   C'OVERRUN*FILE PROT*UNSEL STA*BIT 5    *BIT 5*INCMPLETE$'
         DC   C'TRK COND*MISG A MK*BIT 6*BIT 6    *BIT 6*OCCURS$'
         DC   C'SEEK CHK*OVFL INC*BIT 7*BIT 7   *BIT 7$'
         DC    C'$'
CLABEL3  EQU   *
         DC   C'CMND REJ*DATA CHK*UNSAFE*RDY DRIVE*BIT 0*COMMAND$'
         DC   C'INTV REQ*TRK OVERF*BIT 1*DR   OPER*BIT 1*IN$'
         DC   C'BUS O CHK*CYL END*SERIAL CH*RD SAFETY*BIT 2*PROGRESS$'
         DC   C'EQUIP CHK*INV SEQ*TAG LINE*WR SAFETY*BIT 3*WHEN$'
         DC   C'DATA CHK*REC UNFND*ALU CHK*STRIP RDY*BIT 4*OVERFLOW$'
         DC   C'OVERRUN*FILE PROT*UNSEL STA*INV ADD  *BIT 5*INCMPLETE$'
         DC   C'TRK COND*MISG A MK*BIT 6*AUTO REST*BIT 6*OCCURS$'
         DC   C'SEEK CHK*OVFL INC*BIT 7*CE CELL *BIT 7$'
         DC    C'$'
PENTRY   DS    0F
         DC    X'00010001'
         DC    X'00010001'
         DC    A(LABELS)
         DC    H'0'
*
         DC    X'01'
         DC  X'000B8B00'  SKIP TO CHANNEL 1
         LABEL      ' '
         LINE  (57,32),(23,26)                                   S21021
         HEX   YCPU,0,2B                                         S21021
         HEX   YSER,0,3B                                         S21021
         ROUTINE  YCPU,SETCPUNO                                  S21021
         LABEL 'DAY YEAR   DAY YEAR','MODEL-','SERIAL NO.'       S21021
         LINE       (23,11),(1,30)
         ROUTINE    YLOWD,SETDATE
         ROUTINE    YHID,SETDATE
         LABEL      'OUTBOARD DATE RANGE -','TO'
*
         LINE       (61,18),(1,65)
         HEX        YCUA
         ROUTINE    YDEVT2,SETDEV
         LABEL 'SUMMARY OF I/O OUTBOARD ENVIRONMENT RECORDS FOR DEVICE'C
               ,'DEVICE TYPE'
*
         LINE  (29,),,SKIP=1                                     S21021
         ROUTINE    YNOREC,CONVERT
         LABEL      'TOTAL NUMBER OF RECORDS'
         LINE  ,,SKIP=2                                          S21021
         ROUTINE  YSHRT,CONVERT                                  S21021
         LABEL 'TOTAL OF OVERFLOW RECORDS'                       S21021
*
         LINE       ,(1,1)
         ROUTINE    YDUM1,SKIPPER
         LABEL      'CCW COMMAND CODES ENCOUNTERED(MAXIMUM OF 24)'
*
         LINE       ,(3,6),SKIP=1
         ROUTINE    YDUM1,SKIPPER
         LABEL      'CMND','TOTAL'
         LINE       (4,6),(1,1)
         HEX        YCC01
         ROUTINE    YSC01,CONVERT
         ROUTINE    YFFF01,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC02
         ROUTINE    YSC02,CONVERT
         ROUTINE    YFFF02,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC03
         ROUTINE    YSC03,CONVERT
         ROUTINE    YFFF03,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC04
         ROUTINE    YSC04,CONVERT
         ROUTINE    YFFF04,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC05
         ROUTINE    YSC05,CONVERT
         ROUTINE    YFFF05,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC06
         ROUTINE    YSC06,CONVERT
         ROUTINE    YFFF06,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC07
         ROUTINE    YSC07,CONVERT
         ROUTINE    YFFF07,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC08
         ROUTINE    YSC08,CONVERT
         ROUTINE    YFFF08,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC09
         ROUTINE    YSC09,CONVERT
         ROUTINE    YFFF09,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC10
         ROUTINE    YSC10,CONVERT
         ROUTINE    YFFF10,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC11
         ROUTINE    YSC11,CONVERT
         ROUTINE    YFFF11,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC12
         ROUTINE    YSC12,CONVERT
         ROUTINE    YFFF12,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC13
         ROUTINE    YSC13,CONVERT
         ROUTINE    YFFF13,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC14
         ROUTINE    YSC14,CONVERT
         ROUTINE    YFFF14,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC15
         ROUTINE    YSC15,CONVERT
         ROUTINE    YFFF15,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC16
         ROUTINE    YSC16,CONVERT
         ROUTINE    YFFF16,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC17
         ROUTINE    YSC17,CONVERT
         ROUTINE    YFFF17,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC18
         ROUTINE    YSC18,CONVERT
         ROUTINE    YFFF18,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC19
         ROUTINE    YSC19,CONVERT
         ROUTINE    YFFF19,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC20
         ROUTINE    YSC20,CONVERT
         ROUTINE    YFFF20,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC21
         ROUTINE    YSC21,CONVERT
         ROUTINE    YFFF21,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC22
         ROUTINE    YSC22,CONVERT
         ROUTINE    YFFF22,CONVCC1
         LABEL      ' '
         LINE
         HEX        YCC23
         ROUTINE    YSC23,CONVERT
         ROUTINE    YFFF23,CONVCC1
         LABEL      ' '
         LINE       ,,SKIP=2
         HEX        YCC24
         ROUTINE    YSC24,CONVERT
         ROUTINE    YFFF24,CONVCC1
         LABEL      ' '
         LINE       (12,12),(1,1)
         LABEL ''                                                S21021
         LINE                                                    S21021
         LABEL      'VOLUME LABELS ENCOUNTERED(MAXIMUM OF 10)'
         LINE       ,,SKIP=1
         ROUTINE    YVOL1,SETVOL
         ROUTINE    YVOL1C,CONVERT
         ROUTINE    YVOL1,CHKVOL
         LABEL      ' '
         LINE
         ROUTINE    YVOL2,SETVOL
         ROUTINE    YVOL2C,CONVERT
         ROUTINE    YVOL2,CHKVOL
         LABEL      ' '
         LINE
         ROUTINE    YVOL3,SETVOL
         ROUTINE    YVOL3C,CONVERT
         ROUTINE    YVOL3,CHKVOL
         LABEL      ' '
         LINE
         ROUTINE    YVOL4,SETVOL
         ROUTINE    YVOL4C,CONVERT
         ROUTINE    YVOL4,CHKVOL
         LABEL      ' '
         LINE
         ROUTINE    YVOL5,SETVOL
         ROUTINE    YVOL5C,CONVERT
         ROUTINE    YVOL5,CHKVOL
         LABEL      ' '
         LINE
         ROUTINE    YVOL6,SETVOL
         ROUTINE    YVOL6C,CONVERT
         ROUTINE    YVOL6,CHKVOL
         LABEL      ' '
         LINE
         ROUTINE    YVOL7,SETVOL
         ROUTINE    YVOL7C,CONVERT
         ROUTINE    YVOL7,CHKVOL
         LABEL      ' '
         LINE
         ROUTINE    YVOL8,SETVOL
         ROUTINE    YVOL8C,CONVERT
         ROUTINE    YVOL8,CHKVOL
         LABEL      ' '
         LINE
         ROUTINE    YVOL9,SETVOL
         ROUTINE    YVOL9C,CONVERT
         ROUTINE    YVOL9,CHKVOL
         LABEL      ' '
         LINE       ,,SKIP=2
         ROUTINE    YVOLA,SETVOL
         ROUTINE    YVOLAC,CONVERT
         ROUTINE    YVOLA,CHKVOL
         LABEL      ' '
         LINE       ,(1,1)
         LABEL ''                                                S21021
         LINE  ,(1,1)                                            S21021
         LABEL      'SENSE BYTE SUMMARY'
         LINE       ,(1,19)
         LABEL 'BYTE 0','BYTE 1','BYTE 2','BYTE 3','BYTE 4','BYTE 5'
         LINE       (12,19),(1,19),SKIP=1
         ROUTINE    YB0CMDR,CONVERT
         ROUTINE    YB1DCHK,CONVERT
         ROUTINE    YB2UNSF,CONVERT
         ROUTINE    YB3REDY,CONVERT
         ROUTINE    YB4BIT0,CONVERT
         ROUTINE    YB5BIT0,CONVERT
         ROUTINE    YDEVT2,SETLABEL
*
         LABEL 'CMND REJ','DATA CHK','UNSAFE','READY','BIT 0','COMMAND'
         LINE
         ROUTINE    YB0INTV,CONVERT
         ROUTINE    YB1TRK0,CONVERT
         ROUTINE    YB2BIT1,CONVERT
         ROUTINE    YB3ONLN,CONVERT
         ROUTINE    YB4BIT1,CONVERT
         ROUTINE    YB5BIT1,CONVERT
         LABEL 'INTV REQ','TRK OVERF','BIT 1','ON LINE','BIT 1','IN'
         LINE
         ROUTINE    YB0BOCHK,CONVERT
         ROUTINE    YB1CYLE,CONVERT
         ROUTINE    YB2SERC,CONVERT
         ROUTINE    YB3UNSF,CONVERT
         ROUTINE    YB4BIT2,CONVERT
         ROUTINE    YB5BIT2,CONVERT
         LABEL 'BUS OUT','CYL END','SERIAL CH','UNSAFE','BIT 2','PROGRE*
               SS'
         LINE
         ROUTINE    YB0ECHK,CONVERT
         ROUTINE    YB1INVS,CONVERT
         ROUTINE    YB2TAGL,CONVERT
         ROUTINE    YB3BIT3,CONVERT
         ROUTINE    YB4BIT3,CONVERT
         ROUTINE    YB5BIT3,CONVERT
         LABEL 'EQUIP CHK','INV SEQ','TAG LINE','BIT 3','BIT 3','WHEN'
         LINE
         ROUTINE    YB0DCHK,CONVERT
         ROUTINE    YB1RECU,CONVERT
         ROUTINE    YB2ALUC,CONVERT
         ROUTINE    YB3ONLA,CONVERT
         ROUTINE    YB4BIT4,CONVERT
         ROUTINE    YB5BIT4,CONVERT
         LABEL 'DATA CHK','REC UNFND','ALU CHK','ON LINE','BIT 4','OVER*
               FLOW'
         LINE
         ROUTINE    YB0OVRN,CONVERT
         ROUTINE    YB1FILP,CONVERT
         ROUTINE    YB2UNSL,CONVERT
         ROUTINE    YB3CYLE,CONVERT
         ROUTINE    YB4BIT5,CONVERT
         ROUTINE    YB5BIT5,CONVERT
         LABEL 'OVERRUN','FILE PROT','UNSEL STA','CYL END','BIT 5','INC*
               MPLETE'
         LINE
         ROUTINE    YB0TRKC,CONVERT
         ROUTINE    YB1MAMG,CONVERT
         ROUTINE    YB2BIT6,CONVERT
         ROUTINE    YB3BIT6,CONVERT
         ROUTINE    YB4BIT6,CONVERT
         ROUTINE    YB5BIT6,CONVERT
         LABEL 'TRK COND','MISG A MK','BIT 6','BIT 6','BIT 6','OCCURS'
         LINE  ,,SKIP=2                                          S21021
         ROUTINE    YB0SKCK,CONVERT
         ROUTINE    YB1OVFL,CONVERT
         ROUTINE    YB2BIT7,CONVERT
         ROUTINE    YB3SEEK,CONVERT
         ROUTINE    YB4BIT7,CONVERT
         ROUTINE    YB5BIT7,CONVERT
         LABEL 'SEEK CHK','OVFL INC','BIT 7','SEEK INCP','BIT 7'
         LINE  (20,30),(1,30),SKIP=2                             S21021
         ROUTINE  YDUMA,SETSTAT                                  S21021
STATLABS LABEL  'STATISTICAL DATA'                               S21021
         LINE  (20,30),(1,30),SKIP=1                             S21021
         ROUTINE    YSDR1L,CONVERT                               S21021
         ROUTINE    YSDR1R,CONVERT                               S21021
         LABEL 'TEMPY READS','TEMPY WRITES'                      S21021
         LINE                                                    S21021
         ROUTINE    YSDR2L,CONVERT                               S21021
         ROUTINE    YSDR2R,CONVERT                               S21021
         LABEL 'INTRVN REQD','BUS OUT CHK'                       S21021
         LINE                                                    S21021
         ROUTINE    YSDR3L,CONVERT                               S21021
         ROUTINE    YSDR3R,CONVERT                               S21021
         LABEL 'EQUIP CHK','OVERRUN'                             S21021
         LINE                                                    S21021
         ROUTINE    YSDR4L,CONVERT                               S21021
         ROUTINE    YSDR4R,CONVERT                               S21021
         LABEL 'TRACK COND','SEEK CHECK'                         S21021
         LINE                                                    S21021
         ROUTINE    YSDR5L,CONVERT                               S21021
         ROUTINE    YSDR5R,CONVERT                               S21021
         LABEL 'UNSAFE','NOT USED'                               S21021
         LINE                                                    S21021
         ROUTINE    YSDR6L,CONVERT                               S21021
         ROUTINE    YSDR6R,CONVERT                               S21021
         LABEL 'SER/DESER','CHAN TAG LINE'                       S21021
         LINE                                                    S21021
         ROUTINE    YSDR7L,CONVERT                               S21021
         ROUTINE    YSDR7R,CONVERT                               S21021
         LABEL 'ALU','NOT USED'                                  S21021
         LINE                                                    S21021
         ROUTINE    YSDR8L,CONVERT                               S21021
         ROUTINE    YSDR8R,CONVERT                               S21021
         LABEL 'MISG ADDR MKR','CHAN DATA CHK'                   S21021
         LINE                                                    S21021
         ROUTINE    YDUM1,FREECTR
         LABEL      ' '
         DC    X'FF'
         DC    XL6'00'
         DC    C'$'
LABELS   EQU   *
         LSTART
         END
