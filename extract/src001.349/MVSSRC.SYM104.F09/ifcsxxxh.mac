*** THIS MODULE APPLICABLE FOR VS1 W/ SU01, MVS W/ SU27 AND AS SVS ICR
*** THIS MODULE SUPPORTS 3895 DEVICE --- SUPPORT CODE = G30HIMD
         MACRO
         BIN   ,
.*                                 &SYSLIST(&OP,1) - NAME OF LOG ITEM
.*                                      RECORD DSECT
.*                                 $SYSLIST(&OP,2) - NBR OF SPACES
.*                                      TO SKIP ON MULTIPLE
.*                                      PRINT OR NBR OF SPACES
.*                                      TO BACK UP FROM COLUMN FOR
.*                                      START OF PRINTING. THE LETTER
.*                                      B PRECEEDS THE NUMBER (B5) IF
.*                                      THE LATTER IS DESIRED. OMISSION
.*                                      OF THIS OPERAND FORCES OPTION 2
.*                                      WITH BACKUP SPACING EQUAL TO
.*                                 THE NUMBER OF BITS IN THE ITEM
.*                                 DEFINITION (VIA MACRO 'DSGEN').
.*                            A LIMIT OF 15 BITS IS IMPOSED FOR THE
.*                                 TOTAL NUMBER OF BITS TO PRINT.
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLB  &B,&SUB
         LCLA  &IBITS,&ISHIFT,&K
         LCLA  &TEMP,&T,&OP
         LCLC  &S,&ARG
          ACTR  500000
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP
&SUB     SETB  1
.LOOP    ANOP
&OP      SETA  &OP+1
&ARG     SETC  '&SYSLIST(&OP,1)'
         ITEMFIND &ARG
         AIF   (&ITEMXPT EQ 0).MEXIT
&ISHIFT  SETA  &SHIFT(&ITEMXPT)
&IBITS   SETA  &BITS(&ITEMXPT)
         AIF   (&SUB EQ 1).SUB00
         AIF   ('&SYSLIST(3)' EQ '').SETT
&IBITS   SETA  &SYSLIST(3)
         AGO   .SETT
.SUB00   AIF   ('&SYSLIST(&OP,3)' EQ '').SETT
&IBITS   SETA  &SYSLIST(&OP,3)
.SETT    ANOP
&T       SETA  &IBITS-1
&B       SETB  0
         AIF   (&IBITS GT 0 AND &IBITS LT 16).SUB0
         MNOTE '**NO. OF BITS OUTSIDE RANGE OF 1-15**'
.MEXIT   MEXIT
.SUB0    AIF   (&SUB EQ 1).SUBA
         AIF   ('&SYSLIST(2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(2)
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)
         AGO   .SUBB
.SUBA    ANOP
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
.SUBB    ANOP
&T       SETA  &S
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
         AIF   (&IBITS NE 1 OR &B NE 0).BIN2
&TEMP    SETA  &ISHIFT
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'&TEMP'
         AGO   .OUT
         AIF   (&SUB EQ 1).BIN2
         AIF   ('&SYSLIST(2)' NE '').BIN3
         AGO   .BIN2A
.BIN2    AIF   ('&SYSLIST(&OP,2)' NE '').BIN3
.BIN2A   ANOP
&B       SETB  1
.BIN3    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'C'
         DC    BL.1'&B',AL.7(&T),AL.4(&IBITS),FL.4'&ISHIFT'
.OUT     ANOP
&ITEMXPT     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LOOP
.OUTA    ANOP
         MEND
         MACRO
&NAME    DSGEN ,
.*                            THIS MACRO GENERATES ONE DSECT WORD
.*                                 FORMATTED FOR THE SUBJECT LOG RECORD
.*                                 EACH OPERAND HAS TWO SUB LISTS. THE
.*                                 FIRST IS THE NAME OF THE LOG ITEM
.*                                 WHILE THE SECOND IS THE # OF BITS TO
.*                                 ALLOCATE FOR THIS ITEM. ITEMS MUST
.*                                 BE DEFINED CONTIGUOUSLY WITHOUT GAPS
.*                                 UNUSED BIT GROUPS MUST BE GIVEN
.*                                 DUMMY NAMES. THE NAMES PROVIDED FOR
.*                                 THE LOG ITEMS MAY THEN BE USED IN
.*                                 THE CONVERSION MACRO INSTRUCTIONS.
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLB  &ONLY1,&CTIND
         LCLA  &START1,&START2,&END1,&END2
         LCLC  &SYMBOL,&EQUSYM
         LCLA  &OP,&COUNT,&BYTE,&EQUCNT
         ACTR  100000
         AIF   (&ITEMITR EQ 0).START
 MNOTE   20,'DSGEN MACRO OCCURRS AFTER ITEMSORT MACRO HAS BEEN ISSUED.'
         MEXIT
.START   AIF   (N'&SYSLIST(&OP+1) LT 3).LOOP
         AIF   ('&SYSLIST(&OP+1,3)' EQ 'EQU').LOOP     TEST FOR EQU
  AIF   ('&SYSLIST(&OP+1,3)' EQ '' OR '&SYSLIST(&OP+1,4)' EQ '').ERR1
         AIF   ('&SYSLIST(&OP+1,3)' GT '&SYSLIST(&OP+1,4)').ERR3
&START1  SETA  &SYSLIST(&OP+1,3)        GET START COUNT OF 1
&START2  SETA  &SYSLIST(&OP+1,4)        GET FIRST END COUNT
         AGO   .SET2A                   BRANCH AROUND
         AIF   ('&SYSLIST(&OP+1,5)' GT '&SYSLIST(&OP+1,6)').ERR3
.ERR1    MNOTE '**FIRST SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.SET2A   AIF   ('&SYSLIST(&OP+1,5)' EQ ''AND '&SYSLIST(&OP+1,6)' EQ '' X
               ).SET2                   TEST FOR NO SECOND
  AIF   ('&SYSLIST(&OP+1,5)' EQ '' OR '&SYSLIST(&OP+1,6)' EQ '').ERR2
&END1    SETA  &SYSLIST(&OP+1,5)        GET START COUNT OF 2
&END2    SETA  &SYSLIST(&OP+1,6)        GET END COUNT OF 2
         AGO   .LOOP
.SET2    ANOP
&ONLY1   SETB  1                        INDICATE ONLY ONE CONCATENATION
         AGO   .LOOP
.ERR2    MNOTE '**SECOND SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.ERR3    MNOTE '**START GREATER THAN END CONCATENATION**'
         MEXIT
.LOOP    ANOP
&OP      SETA  &OP+1
         AIF   (&OP GT N'&SYSLIST).DONE      TEST IF ALL DONE
&ITEMNBR SETA  &ITEMNBR+1
         AIF   ('&SYSLIST(&OP,2)' NE '').OK1
         MNOTE '**NULL BIT COUNT FIELD**'
         MEXIT
.OK1     ANOP
&SYMBOL  SETC  '&SYSLIST(&OP,1)'
         AIF   ('&SYMBOL' NE '').OK
*              *****     LOG ITEM SYMBOL NOT PROVIDED     *****
         AIF   ('&SYSLIST(&OP,3)' NE 'EQU').CNT
         AGO   .START                   GET NEXT
.OK      AIF   (N'&SYSLIST(&OP) LT 3).NO3    TEST FOR OLD FORMAT
         AIF   ('&SYSLIST(&OP,3)' EQ 'EQU').EQU   TEST FOR EQU
         AIF   (&ONLY1).OK2             TEST FOR ONLY ONE CONCAT
&SYMBOL  SETC  '&SYMBOL.&START1.&END1'       GET 1 AND 2 CONCAT
         AGO   .NO3                     BRANCH AROUND
.OK2     ANOP
&SYMBOL  SETC  '&SYMBOL.&START1'        GET 1 CONCATENATED
.NO3     ANOP
&SYMBOL  EQU   *+&BYTE
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL IN GLOBAL
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)
&SHIFT(&ITEMNBR) SETA &COUNT-&BYTE*8
.CNT     ANOP
&CTIND   SETB  1                        SET COUNT INDICATOR
&COUNT   SETA  &COUNT+&SYSLIST(&OP,2)
&BYTE    SETA  &COUNT/8
         AIF   (N'&SYSLIST(&OP) LT 3).START  TEST FOR OLD FORMAT
         AIF   (&ONLY1).TSTST           TEST FOR ONLY ONE CONCAT
         AIF   (&END1 EQ &END2).TSTST   TEST FOR SECOND END
&END1    SETA  &END1+1                  INCREMENT COUNT
&OP      SETA  &OP-1                    DECREMENT INCREMENT
         AGO   .LOOP                    GENERATE NEXT
.TSTST   ANOP
         AIF   (&START1 EQ &START2).LPDONE   TEST FOR END
         AIF   (&ONLY1).NSET1           TEST FOR ONLY ONE CONCAT
&END1    SETA  &SYSLIST(&OP,5)          RE-INIT SECOND START COUNT
.NSET1   ANOP
&OP      SETA  &OP-1                    DECREMENT INDEX
&START1  SETA  &START1+1                INCREMENT FIRST COUNT
         AGO   .LOOP                    GO DO NEXT
.LPDONE  ANOP
&ONLY1   SETB  0                        CLEAR INDICATOR
         AGO   .START                   GO TEST FOR MORE SUB-LISTS
.DONE    AIF   (&COUNT-&COUNT/8*8 NE 0).ERR  TEST FOR MULTIPLE OF EIGHT
         AIF   (&CTIND EQ 0).END        NO DS IF NO COUNT
&COUNT   SETA  &COUNT/8                 GET NUMBER OF BYTES
&NAME    DS    &COUNT.C
.END     MEXIT
.ERR     MNOTE '**BIT COUNT FLDS DO NOT TOTAL MULTIPLE OF 8**'
         MEXIT
.EQU     AIF   ('&SYSLIST(&OP,4)' NE '').EQU1     TEST FOR NULL LABEL
.ERR4    MNOTE '**EQU OPERAND OMITTED OR NOT FOUND**'
         MEXIT
.EQU1    AIF   (&SYSLIST(&OP,2) LT 16).EQU2  COUNT OVER FIFTEEN
*****               THE FOLLOWING STATEMENT                *****
*****     NUMBER OF BITS EXCEED 15 - DO NOT USE AS BIN     *****
.EQU2    ANOP
&EQUCNT  SETA  0                        CLEAR COUNTER
&EQUSYM  SETC  '&SYSLIST(&OP,4)'        GET EQU OPERAND
.EQULOP  ANOP
&EQUCNT  SETA  &EQUCNT+1                INCREMENT INDEX
         AIF   ('&ITEM(&EQUCNT)' EQ '&EQUSYM').EQUOUT  LABEL FOUND?
         AIF   (&EQUCNT EQ &ITEMNBR).ERR4    ALL TESTED?
         AGO   .EQULOP                  NO-GET NEXT
.EQUOUT  ANOP
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL NAME
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)    GET NUMBER OF BITS
&SHIFT(&ITEMNBR) SETA &SHIFT(&EQUCNT)   GET SHIFT COUNT
&SYMBOL  EQU   &EQUSYM                  THIS SYMBOL EQUATED
         AGO   .START                   RETURN FOR NEXT
         MEND
         MACRO
         CONVT ,
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLB  &SUB
         LCLA  &OP
         LCLA  &OFFSET,&OUT,&IN,&IND,&IBITS,&ISHIFT
.*
.*       CONVERT BINARY TO DECIMAL
.*             &NAME IS THE REFERENCE INTO THE DSECT RECORD
.*             &OUT    IS THE NUMBER OF CHARS TO BE PUT ONTO PRINT LINE
.*                                      DEFAULT IS FOUR MAXIMUM IS 8
.*             &IN       IS THE NUMBER OF BYTES AS INPUT
.*                                      ERROR DEFAULT IS 2 MAXIMUM IS 4
.*
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LLOP
&SUB     SETB  1
.LLOP    ANOP
&OP      SETA  &OP+1
&OUT     SETA  4                        .BR NOT NULL ELSE SET TO 4
         AIF   (&SUB EQ 1).SUBA
         AIF   ('&SYSLIST(3)' EQ '').B  TEST FOR NULL INPUT
&OUT     SETA  &SYSLIST(3)             SET &OUT FROM INPUT
         AGO   .A
.SUBA    AIF   ('&SYSLIST(&OP,3)' EQ '').B
&OUT     SETA  &SYSLIST(&OP,3)          SET &OUT FROM INPUT
.A       AIF   (&OUT GT 0 AND &OUT LT 9).B   TEST RANGE
.AERR    MNOTE '*** BYTES OUT INCORRECTLY SPECIFIED DEFAULT USED ***'
&OUT     SETA  4
.B       AIF   (&SUB EQ 1).SUBB
         AIF   ('&SYSLIST(2)' EQ '').LOOP    BRANCH IF NULL
&IN      SETA  &SYSLIST(2)              .SET &IN FROM INPUT
         AGO   .BB
.SUBB    AIF   ('&SYSLIST(&OP,2)' EQ '').LOOP
&IN      SETA  &SYSLIST(&OP,2)          .SET &IN FROM INPUT
.BB      AIF   (&IN GT 0 AND &IN LT 5).D     TEST RANGE
.BERR    MNOTE '*** BYTES IN INCORRECTLY SPECIFIED DEFAULT USED ***'
&IN      SETA  2
         AGO   .D
.LOOP    ANOP                           .LOOP TO FIND &NAME IN DSECT
&IND     SETA  &IND+1                   .SET UP LOOP COUNTER
         AIF   ('&ITEM(&IND)' EQ '&SYSLIST(&OP,1)').FOUND
         AIF   (&IND LT &ITEMNBR).LOOP  .TEST FOR END OF DSECT
         MNOTE '*** LOG ITEM NOT DEFINED ***'
         MEXIT
.FOUND   ANOP
&IBITS   SETA  &BITS(&IND)              .SET UP NUMBER OF BITS SPEC
         AIF   (&IBITS-((&IBITS/8)*8) EQ 0).C  .TEST FOR MULTIPLE OF 8
         MNOTE '*** DATA NOT DEFINED A MULTIPLE OF 8 BITS ***'
         MEXIT
.C       ANOP
&IN      SETA  &IBITS/8                 .COMPUTE NUMBER OF BYTES
         AIF   (&IN LT 1 OR &IN GT 4).BERR  .TEST RANGE B IF IN ERROR
&ISHIFT  SETA  &SHIFT(&IND)             .SET UP FOR TEST OF BYTE BNDR
         AIF   (&ISHIFT EQ 0).D         .TEST FOR BYTE BNDRY
         MNOTE '*** DATA NOT ALIGNED ON A BYTE BOUNDARY ***'
         MEXIT
.*
.D       ANOP
&NRENTS  SETA  &NRENTS+1
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),AL.4(9)
         DC    X'&IN',X'&OUT'
&IND     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LLOP
.OUTA    ANOP
         MEND
         MACRO
         ITEMFIND &ARG,&ITFDIAG=
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLA  &A,&B,&X,&I
         LCLC  &C1,&C2,&S
         ACTR  100000
&ITEMXPT SETA  0                  INDICATE ITEM NOT FOUND.
         AIF   ('&ARG' NE '').NORM
         AIF   ('&ITFDIAG' EQ 'OFF'  OR  '&ITFDIAG' EQ 'ON').DIAGSET
  MNOTE 0,'ITEMFIND - OPERAND (&ITFDIAG) INVALID FOR ITFDIAG KEYWORD.'
         MEXIT
.DIAGSET ANOP
&DIAGITF SETB  ('&ITFDIAG' EQ 'ON')
         MEXIT
.NORM    AIF   (&ITEMITR GT 0).SORTED
         ITEMSORT
.SORTED  ANOP
&I       SETA  &ITEMITR           COMPUTED ITTERATION COUNT.
&X       SETA  &ITEMMDX           COMPUTED MAXIMUM INDEX.
&C1      SETC  '&ARG'             ISOLATE SEARCH ARGUMENT.
&C1      SETC  '&C1'.'       '(1,8-K'&C1) PAD TO FULL 8 CHARACTERS.
.SRCHUP  ANOP
&A       SETA  &A+&X              CURRENT TABLE SUBSCRIPT + INDEX.
&S       SETC  '+'
         AIF   (&A  GT &ITEMNBR  AND  NOT &DIAGITF).SRCHDN1
         AIF   (&A  LE &ITEMNBR).SRCH00
&C2      SETC  '*-OVER-*'
&I       SETA  &I-1               DECREMENT ITTERATION COUNTER.
&X       SETA  &X/2               HALVE INDEX VALUE.
 MNOTE *,'&ARG - &C2   ITRCTR = &I   PTR = &A&S &X'
         AIF   (&I GE 0).SRCHDWN  IF ITTERATION COUNT NOT EXPIRED.
.NOFIND  MNOTE  20,' ITEMFIND FAILED FOR NAME  &C1  '
         MEXIT
.SRCH00  ANOP
&I       SETA  &I-1               DECREMENT ITTERATION COUNTER.
         AIF   (&I LT 0).NOFIND   IF COUNT HAS GONE TO ZERO.
&X       SETA  &X/2               HALVE INDEX VALUE.
&B       SETA  &ITEMNDX(&A)       GET SUBSCRIPT FROM INDEX TABLE.
&C2      SETC  '&ITEM(&B)'.'       '(1,8-K'&ITEM(&B))  PAD COMPARAND.
         AIF   (NOT &DIAGITF).COMPARE
 MNOTE *,'&ARG - &C2   ITRCTR = &I   PTR = &A&S &X   POS = &B'
.COMPARE AIF   ('&C1' LT '&C2').SRCHDWN   ARGUMENT LOWER, MOVE DOWN.
         AIF   ('&C1' GT '&C2').SRCHUP    ARGUMENT HIGHER, MOVE UP.
&ITEMXPT SETA  &B                 FOUND. SET INDEX POINTER FOR RETURN.
&ITEMFST(&I+1)  SETA  &ITEMFST(&I+1)+1
         MEXIT
.SRCHDWN ANOP
&A       SETA  &A-&X              CURRENT POINTER MINUS INDEX VALUE.
&S       SETC  '-'
         AIF   (&A LE &ITEMNBR).SRCH00    IF WITHIN BOUNDS OF TABLE.
.SRCHDN1 ANOP
&I       SETA  &I-1               DECREMENT ITTERATION COUNTER.
&X       SETA  &X/2               HALVE INDEX VALUE.
         AIF   (&I GE 0).SRCHDWN  IF ITTERATION COUNT NOT EXPIRED.
         MNOTE  20,' ITEMFIND FAILED FOR NAME  &C1  '
         MEND
         MACRO
         ITEMSORT  &DUMMY
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLA  &R,&ZI,&I,&A1,&A2,&TEMP
         LCLB  &SR,&GOTO,&TB
         LCLB   &SW(4000)
         LCLC  &C1,&C2
         ACTR   200000
&A1      SETA  0
         AIF   (&ITEMITR EQ 0).LOOP0   TEST FOR RE-ENTRY.
 MNOTE   0,'ITEMSORT MACRO OCCURRS MORE THAN ONCE. TABLE NOT RESORTED.'
         MEXIT
.LOOP0   ANOP
&A1      SETA  &A1+1
&ITEMNDX(&A1) SETA &A1
         AIF   (&A1 LT &ITEMNBR).LOOP0
         AIF   (&ITEMNBR LT 2).MEXIT
&A1      SETA  &ITEMNBR/2         HALF OF TOTAL ENTRIES.
&A2      SETA  0
.LOOP1   ANOP
&A2      SETA  &A2+1
&SW(&A2) SETB  1                  SET FIRST HALF OF SWITCHES TO 1.
         AIF   (&A2 LT &A1).LOOP1
.LOOP2   ANOP
&A2      SETA  &A2+1
&SW(&A2) SETB  0                  SET SECOND HALF TO ZERO.
         AIF   (&A2 LT &ITEMNBR).LOOP2
&R       SETA  0                  SET R TO FIRST TRIAL ITEM.
&ZI      SETA  &ITEMNBR-1         SET ZI TO LAST ITEM.
&I       SETA  &ZI-1
.T3      ANOP
&SR      SETB  (&SW(&R+1))        GET FLAG, WHICH WAY TO GO?
&R       SETA  (&R*2)+1+&SR       R=2R+(1 OR 2)
         AIF   (&R LE &I).T3
.T4      ANOP
&R       SETA  (&R-1)/2           R=(R-1)/2
&SR      SETB  (&SW(&R+1))        GET SUBTREE SELECT FLAG.
         AIF   (&SR EQ 0).T7
         AIF   (&GOTO EQ 0).T5
.T7      ANOP
&A1      SETA  &ITEMNDX(&R+1)
&A2      SETA  &ITEMNDX(&ZI+1)
&C1      SETC  '&ITEM(&A1)'.'       '(1,8-K'&ITEM(&A1))
&C2      SETC  '&ITEM(&A2)'.'       '(1,8-K'&ITEM(&A2))
         AIF   ('&C1' LT '&C2').T8
.T9      ANOP
&TEMP    SETA  &ITEMNDX(&R+1)     Z(R) TO TEMP.
&TB      SETB  (&SW(&R+1))
&ITEMNDX(&R+1) SETA &ITEMNDX(&ZI+1)    Z(I) TO Z(R)
&SW(&R+1) SETB (&SW(&ZI+1))
&ITEMNDX(&ZI+1) SETA &TEMP        TEMP TO Z(I)
&SW(&ZI+1) SETB (&TB)
&SR      SETB  (&SR EQ 0)
&SW(&R+1) SETB (&SR)
.T8      AIF   (&R GT 0).T4
&GOTO    SETB  1                  SET 'GO TO' T7
&ZI      SETA  &ZI-1
&I       SETA  &I-1
         AIF   (&I GE 0).T3
.MEXIT   ANOP
&ITEMITR SETA 1
&ITEMMDX SETA 1
.ITRLOOP ANOP
&ITEMITR SETA &ITEMITR+1
&ITEMMDX SETA &ITEMMDX+&ITEMMDX
         AIF  (&ITEMMDX LT &ITEMNBR).ITRLOOP
&ITEMITR SETA &ITEMITR-1
&ITEMMDX SETA &ITEMMDX/2
&A1      SETA &ITEMNBR
&A2      SETA &ITEMMDX
&TEMP    SETA &ITEMITR
 MNOTE *,' ITEMS = &A1, MAX INDEX = &A2, ITTERATION COUNT = &TEMP'
         MEXIT
.T5      ANOP
&TEMP    SETA  &ITEMNDX(&R+1)     Z(R) TO TEMP.
&TB      SETB  (&SW(&R+1))
&ITEMNDX(&R+1) SETA &ITEMNDX(&ZI+1)    Z(I) TO Z(R)
&SW(&R+1) SETB (&SW(&ZI+1))
&ITEMNDX(&ZI+1) SETA &TEMP        TEMP TO Z(I)
&SW(&ZI+1) SETB (&TB)
&SR      SETB  (&SR EQ 0)
&SW(&R+1) SETB (&SR)
         AGO   .T3
         MEND
           MACRO
&NAME    LABEL &LABEL1,&LABEL2,&LABEL3,&LABEL4,&LABEL5,&LABEL6,        C
               &LABEL7,&LABEL8
.*                                 THIS MACRO ALLOWS LABELS TO
.*                                 BE SPECIFIED FOR A GIVEN LINE. THE
.*                                 LABELS SHOULD BE ENCLOSED IN QUOTA-
.*                                 TION MARKS. THE COLUMN AND LINE END
.*                                 CONTROLS WILL BE INSERTED BY THE
.*                                 MACRO. OMITTED OPERANDS MEAN NO
.*                                 LABEL REQUIRED FOR RESPECTIVE
.*                                 COLUMN.
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLC  &MARGIN,&TACK
         LCLC  &TEXT
         LCLA  &OP,&K,&START,&NRCHAR,&REMAIN
         AIF   (&INITIAL EQ 0).DIAGCLR
         AIF   (&DIAGTST EQ 0).DIAGCLR
         AIF   (&DIAGLIN EQ 1).DIAGCLR
         MNOTE '**NO LINE ASSOCIATED WITH PREVIOUS LABEL**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LINE
         LINE
.DIAGCLR ANOP
&DIAGSET SETB  0
&DIAGLIN SETB  0
&MARGIN  SETC  '*'
         AIF   ('&NAME' EQ '').LOOPOUT
&LPTR    SETA  &LPTR+1
&LBL(&LPTR) SETC '&NAME'
&LBLCTR(&LPTR) SETA &LABELNR+1
.LOOPOUT ANOP
&OP      SETA  &OP+1
&K       SETA  K'&SYSLIST(&OP)
         AIF (&K GE 2).NORM
&K       SETA  2
.NORM    ANOP
&START   SETA  2
         AIF (&OP LT N'&SYSLIST).NOTLAST
&MARGIN  SETC  '$'
.NOTLAST ANOP
&NRCHAR  SETA  8
&TACK    SETC  ''
.LOOPIN  ANOP
&REMAIN  SETA  &K-&START
         AIF (&REMAIN GE 8).MORE
&TACK    SETC  '&MARGIN'
&NRCHAR  SETA  &REMAIN
.MORE    ANOP
&TEXT    SETC  ''
         AIF (&REMAIN EQ 0).ENDTEXT
&TEXT    SETC  '&SYSLIST(&OP)'(&START,&NRCHAR)
.ENDTEXT ANOP
&LABELNR SETA  &LABELNR+1
&LABELS(&LABELNR) SETC '&TEXT'.'&TACK'
&START   SETA  &START+8
         AIF ('&TACK' EQ '').LOOPIN
         AIF ('&TACK' EQ '*').LOOPOUT
         MEND
         MACRO
&NAME    LINE  &DATA,&LABEL,&SKIP=
.*                            THIS MACRO ESTABLISHES THE MARGINS OR
.*                                 COLUMN SETTINGS FOR EACH LINE. IT
.*                                 GENERATES NECESSARY CARRIAGE CONTROL
.*                                 ENTRIES. LASTLY IT DETERMINES THE
.*                                 NUMBER OF ENTRIES ASSOCIATED WITH
.*                                 THE PREVIOUS LINE AND STORES THAT #
.*                                 INTO THE APPROPRIATE BYTE.
.*                            &DATA(1) - CHARACTER POSITION TO BEGIN
.*                                 DATA.
.*                            &DATA(2) - # OF SPACES BETWEEN SUCCESSIVE
.*                                 DATA COLUMN STARTING CHARACTERS.
.*                            &LABEL(1) - CHAR. POS. TO BEGIN LABELS.
.*                            &LABEL(2) - # SPACES BETWEEN LINE'S LABEL
.*                                 STARTING CHARACTERS.
.*                            &SKIP= - # OF LINES TO ADVANCE CARRIAGE
.*                                 TO BEGIN NEXT PRINTED LINE.
.*                            NEW ENTRIES ARE GENERATED ONLY WHEN
.*                                 NECESSARY. OMISSION OF ITEMS MEANS
.*                                 THEY HAVE NOT CHANGED SINCE PREVIOUS
.*                                 SETTINGS. A LINE MACRO IS REQUIRED
.*                                 FOR EACH PRINTED LINE. IF NO SETTING
.*                                 CHANGES ARE REQUIRED ALL OPERANDS
.*                                 ARE OMITTED IN WHICH CASE ONLY THE
.*                                 # OF ENTRIES FOR THE PREVIOUS LINE
.*                                 IS COMPUTED. THIS MACRO MUST BE THE
.*                                 FIRST MACRO INSTRUCTION ISSUED FOR
.*                                 THE SUBJECT LINE
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLA  &S
         AIF   (&INITIAL EQ 0 OR &DIAGTST EQ 0).DIAGSET
         AIF   (&DIAGSET EQ 0).DIAGSET
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
.DIAGSET ANOP
&DIAGSET SETB  1
&DIAGLIN SETB  1
&NAME    DS    0C
         AIF   (&INITIAL EQ 0).FIRSTLN
         LINEND
         AGO   .NTFIRST
.FIRSTLN ANOP
&NRENTSX SETC  'N&SYSNDX'
&INITIAL SETA  1
N&SYSNDX EQU   *
.NTFIRST ANOP
         DC    AL1(0)
         AIF   ('&DATA(1)' EQ '').CKDTABS
         AIF   (&DATA(1) EQ &DB).CKDTABS
&DB      SETA  &DATA(1)
         AGO   .AA
.CKDTABS AIF   ('&DATA(2)' EQ '').NCDATA
         AIF   (&DATA(2) EQ &DT).NCDATA
         AGO   .CC
.AA      AIF   ('&DATA(2)' EQ '').BB
         AIF   (&DATA(2) EQ &DT).BB
.CC      ANOP
&DT      SETA  &DATA(2)
.BB      DC    XL2'FFFE'
         DC    FL1'&DB'
         DC    FL1'&DT'
&NRENTS  SETA  &NRENTS+1
.NCDATA  ANOP
         AIF   ('&LABEL(1)' EQ '').CKLTABS
         AIF   (&LABEL(1) EQ &LB).CKLTABS
&LB      SETA  &LABEL(1)
         AGO   .AAA
.CKLTABS AIF   ('&LABEL(2)' EQ '').NCLABEL
         AIF   (&LABEL(2) EQ &LT).NCLABEL
         AGO   .CCC
.AAA     AIF   ('&LABEL(2)' EQ '').BBB
         AIF   (&LABEL(2) EQ &LT).BBB
.CCC     ANOP
&LT      SETA  &LABEL(2)
.BBB     DC    XL2'FFFF'
         DC    FL1'&LB'
         DC    FL1'&LT'
&NRENTS  SETA  &NRENTS+1
.NCLABEL ANOP
         AIF   ('&SKIP' NE '').CONT
         AIF   (&TEST EQ 0).NOCHANG
         AGO   .DEFALTA
.CONT    ANOP
         AIF   (&TEST EQ 0).AB
         AIF   ('&SKIP' EQ 'E').AB
&S       SETA  &SKIP
.DEFAULT ANOP
         AIF   (&SKIP EQ &LASTCC).DEFALTA
         ORG   &CARRCON+3
         DC    AL.3(0),AL.2(&S),AL.3(1)
         ORG
&LASTCC  SETA  &S
.DEFALTA ANOP
&TEST    SETB  0
         AGO   .DD
.AB      AIF   ('&SKIP' NE 'E').ABB
A&SYSNDX DC    X'FFFB8B00'              EJECT
&LASTCC  SETA  184
&TEST    SETB  1
         AGO   .ABC
.ABB     AIF   (&SKIP EQ &LASTCC).NOCHANG
A&SYSNDX DC    XL2'FFFB'
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
&LASTCC  SETA  &SKIP
&TEST    SETB  1
.ABC     ANOP
&CARRCON SETC  'A&SYSNDX'
&NRENTS  SETA  &NRENTS+1
.DD      ANOP
.NOCHANG ANOP
         MEND
         MACRO
         LINEND ,
.*                                 THIS MACRO IS USED ONLY BY THE LINE
.*                                 MACRO TO SET THE NUMBER OF ENTRIES
.*                                 ASSOCIATED WITH EACH LINE.
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         ORG   &NRENTSX
         DC    FL1'&NRENTS'
         ORG
&NRENTS  SETA  0
B&SYSNDX EQU   *
&NRENTSX SETC  'B&SYSNDX'
         MEND
         MACRO
         LSTART ,
.*                            THIS MACRO IS ISSUED WHEN THE LABEL AREA
.*                                 OF THE TABLE IS TO BEGIN.
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLA  &NDX,&CTR
         ACTR  500000
         AIF   (&DIAGTST EQ 0).NODIAG
         AIF   (&DIAGSET EQ 0).NODIAG
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
.NODIAG  ANOP
         LINEND
&CTR     SETA  1
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   (&LBLCTR(&CTR) NE &NDX).NOLBL
&LBL(&CTR) DC  C'&LABELS(&NDX)'
&CTR     SETA  &CTR+1
         AGO   .LOOPCTL
.NOLBL   ANOP
         DC    C'&LABELS(&NDX)'
.LOOPCTL AIF   (&NDX LT &LABELNR).LOOP
         MEND
         MACRO
&NAME    ROUTINE &LOGITEM,&RNAME
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS ROUTINE**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
&NAME    DC    AL.12(&LOGITEM-&DSECT),XL.4'D'
         DC    AL2(&RNAME-&CSECT)
&NRENTS  SETA  &NRENTS+1
         MEND
         MACRO
         SPECIAL &ROUTINE,&PARAM,&SPACE=
.*                            THIS MACRO GENERATES A SPECIAL ROUTINE
.*                                 ENTRY TO BE PROCESSED BY THE SUM. M.
.*                            &ROUTINE - SYMBOL ON SPECIAL ROUTINE EWT.
.*                            &PARAM - AN 8 BIT BINARY REPRESENTATION
.*                                 TO OCCUPY THE 'MASK' FIELD BUT TO BE
.*                                 INTERPRETED AS AN ARGUMENT OF THE
.*                                 SPECIAL ROUTINE.
.*                            &SPACE - THE NUMBER OF 2BYTE COUNTERS TO
.*                                 ALLOCATE FOR REQUIRED PROCESSING.
         GBLC  &CSECT
         GBLA  &COUNTR
         LCLA  &ADD
         DC    AL1(128)
         DC    BL.8'&PARAM'
         DC    AL2(&ROUTINE-&CSECT)
         DC    AL2(&COUNTR)
&ADD     SETA  1
         AIF   ('&SPACE' EQ '').NORM
&ADD     SETA  &SPACE
.NORM    ANOP
&COUNTR  SETA  &COUNTR+&ADD
         MEND
         MACRO
         HEX   ,
.*                            THIS MACRO FACILITATES GENERATION OF THE
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE
.*                                 CONVERSIONS.
.*                            &SYSLIST(&OP,1) - NAME OF DATA ITEM TO BE
.*                                 CONVERTED
.*                            &SYSLIST(&OP,2) - # OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO
.*                                 BACK UP FROM COLUMN FOR START OF
.*                                 PRINTING. THE LETTER B PRECEEDS THE
.*                                 NUMBER (B8) IF THE LATTER OPTION IS
.*                                 DESIRED. OMISSION OF THIS OPERAND
.*                                 FORCES OPTION 2 WITH BACKUP SPACING
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR
.*                                 IMPLICITLY B).
.*                            &SYSLIST(&OP,3) - NUMBER OF BYTES TO
.*                                 PROCESS. THIS NUMBER IS SUFFIXED
.*                                 WITH AN L,R, OR B TO STIPULATE
.*                                 PRINTING OF THE LEFT HALF, RIGHT
.*                                 HALF, OR BOTH HALVES OF THE BYTE
.*                                 RESPECTIVELY. OMISSION OF THIS
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES-
.*                                 SARY. THIS MACRO MUST BE THE FIRST
.*                                 MACRO INSTRUCTION ISSUED FOR THE
.*                                 SUBJECT LINE(S).
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLB  &B,&SUB
         LCLA  &IBITS,&ISHIFT,&K,&T,&CODE,&BYTESP,&OP
         LCLC  &S,&LETTER,&ARG
       ACTR  500000
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP
&SUB     SETB  1
.LOOP    ANOP
&OP      SETA  &OP+1
&ARG     SETC  '&SYSLIST(&OP,1)'
         ITEMFIND  &ARG
         AIF   (&ITEMXPT EQ 0).MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&ITEMXPT)
&IBITS   SETA  &BITS(&ITEMXPT)
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).ALIGN
.ERR     MNOTE '**DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY**'
.MEXIT   MEXIT
.ALIGN   ANOP
&CODE    SETA  1
         AIF   (&SUB EQ 1).SUBA
&K       SETA  K'&SYSLIST(3)
         AGO   .SUBB
.SUBA    ANOP
&K       SETA  K'&SYSLIST(&OP,3)
.SUBB    ANOP
         AIF   (&K EQ 1).ERR3
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK
         MNOTE '**BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL**'
         MEXIT
.OK      AIF   (&SUB EQ 1).SUBC
         AIF   ('&SYSLIST(3)' EQ '').USEDEFN
&LETTER  SETC  '&SYSLIST(3)'(&K,1)
&S       SETC  '&SYSLIST(3)'(1,&K-1)
         AGO   .SUBD
.SUBC    ANOP
         AIF   ('&SYSLIST(&OP,3)' EQ '').USEDEFN
&LETTER  SETC  '&SYSLIST(&OP,3)'(&K,1)
&S       SETC  '&SYSLIST(&OP,3)'(1,&K-1)
.SUBD    ANOP
&BYTESP  SETA  &S
         AIF   ('&LETTER' EQ 'B').BOTH
         AIF   ('&LETTER' EQ 'L').LEFT
         AIF   ('&LETTER' EQ 'R').RIGHT
.ERR3    MNOTE '**PARAMETER 3 INCOMPLETE-DSGEN DEFINITION USED**'
         AGO   .USEDEFN
.RIGHT   ANOP
&CODE    SETA  2
         AGO   .L
.LEFT    ANOP
&CODE    SETA  1
         AGO   .L
.USEDEFN ANOP
&BYTESP  SETA  &IBITS/8
.BOTH    AIF   (&ISHIFT NE 0).ERR
&CODE    SETA  3
&T       SETA  &BYTESP*2-1
&S       SETC  '&T'
.OK2     AIF   (&ISHIFT EQ 0).L
&CODE    SETA  2
.L       ANOP
&B       SETB  1
         AIF   (&SUB EQ 1).SUBE
         AIF   ('&SYSLIST(2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(2)
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)
         AGO   .SUBF
.SUBE    ANOP
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
.SUBF    ANOP
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
         AIF   (&BYTESP GT 0 AND &BYTESP LT 16).SUB0
         MNOTE '**NO. OF BYTES OUTSIDE RANGE OF 1-15**'
         MEXIT
.SUB0    AIF   (&SUB EQ 1).SUBG
         DC    AL.12(&SYSLIST(1)-&DSECT),XL.4'A'
         AGO   .SUBH
.SUBG    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'A'
.SUBH    ANOP
         DC    BL.1'&B',FL.7'&S',AL.4(&BYTESP),FL.4'&CODE'
.OUT     ANOP
&ITEMXPT     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LOOP
.OUTA    ANOP
         MEND
         MACRO
         SUM   &LOGITEM,&MASK
.*                            THIS MACRO GENERATES A NORMAL EDIT ENTRY
.*                                 FOR PROCESSING BY THE SUMMARY MODULE
.*                            &LOGITEM - NAME OF DATA ITEM TO BE SUMMED
.*                            &MASK - BYTE MASK FOR BITS TO BE TESTED.
.*                                 THIS OPERAND SHOULD BE OMITTED FOR
.*                                 SINGLE BIT ITEMS IN WHICH CASE THE
.*                                 MASK WILL BE SET ACCORDING TO THE
.*                                 OFF BYTE BIT DISPLACEMENT OF THE
.*                                 ITEM AS DEFINED BY THE MACRO 'DSGEN'
         GBLA  &COUNTR,&ITEMNBR,&BITS(3000),&SHIFT(3000)
         GBLC  &ITEM(3000),&DSECT
         LCLA  &IBITS,&NDX,&ISHIFT,&M,&BITNBR
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOGITEM NOT FOUND'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
         AIF   (&IBITS EQ 1).FORM1      TEST FOR OLD FORM
         AIF   ('&MASK' NE '').FORM1    TEST FOR MASK
         AIF   (&IBITS+&ISHIFT GT 8).MSG     TEST FOR MORE THAN EIGHT
         DC    AL.1(0),AL.3(&ISHIFT),AL.4(&IBITS)
         DC    AL1(0)
         AGO   .ITEM
.MSG     MNOTE '**BITS GREATER THAN 8**'
         MEXIT
.FORM1   ANOP
         DC    AL1(0)
         AIF   ('&MASK' EQ '').FORM
         DC    B'&MASK'
         AGO   .ITEM
.FORM    ANOP
&BITNBR  SETA  &ISHIFT-7
&BITNBR  SETA  0-&BITNBR
&M       SETA  1
.LOOP2   ANOP
         AIF   (&BITNBR EQ 0).GOTIT
&M       SETA  &M*2
&BITNBR  SETA  &BITNBR-1
         AGO   .LOOP2
.GOTIT   ANOP
         DC    AL1(&M)
.ITEM    DC    AL2(&LOGITEM-&DSECT)
         DC    AL2(&COUNTR)
&COUNTR  SETA  &COUNTR+1
         MEND
         GBLC  &DSECT,&CSECT
&CSECT   SETC  'IFCSXXXH'          ALIAS IFCST00D
&DSECT   SETC  'RECORD'
IFCSXXXH CSECT
RECORD   DSECT
         DS    0F                  HEADING DSECT FOR OBR & MDR
         DSGEN (CLASRC,8),              RECORD TYPE                    X
               (SYSREL,8),              SYSTEM & RELEASE LEVEL         X
               (SWITCH1,16),(SWITCH2,16),                      @M04AE95X
               (RCDCNT,8),              COUNT & MULTI PART ID          X
               (SPACE1,8),              SPACE (1,BYTE)                 X
               (DATE,32),               DATE                           X
               (TIME,32),               TIME                           X
               (XDUM1,8),               MACHINE VERSION                X
               (CPUSER,24),             C P U SERIAL NO.               X
               (CPUID,16),              C P U I.D.                     X
               (MCEL,16)                MAX LGTH OF MACH DEP LOG
*                            --------------------------
*                                  OBR (UNIT CHECK) DSECT
*                            --------------------------
         DSGEN (JOBID,64),              JOB NAME                       X
               (FAILCCW,64),            FAILING CCW                    X
               (CSW,64),                CSW CONTENTS                   X
               (DEVDEPC,8),             DEV DEPNOT DATA COUNT          X
               (SECUA,24),              SECONDARY CHAN & UNIT ADDR     X
               (DEVTYPE,32),            DEVICE TYPE BYTES              X
               (XDUM6,8),               RESERVED BYTE                  X
               (XCUA,24),               PRIMARY CHAN & UNIT ADDR       X
               (IORETRY,16),            # OF I/O RETRY ATTEMPTS        X
               (SENSCNT,16)             # OF SENSE BYTES IN RCD
         DSGEN (SENS00,1,0,7)      SENSE
         DSGEN (SENS01,1,0,7)      BYTES
         DSGEN (SENS02,1,0,7)
         DSGEN (SENS03,1,0,7)
         DSGEN (SENS04,1,0,7)
         DSGEN (SENS05,1,0,7)
         DSGEN (SENS0615,80)                                   @M04AE95
         DSGEN (SENS16,1,0,7)                                  @M04AE95
         DSGEN (SENS1721,24)                                   @XA20885
         DSGEN (SENS20,1,0,7)                                  @XA20885
         DSGEN (SENS2131,8)                                    @XA20885
         DSGEN (SENS22,1,0,7)                                  @M04AE95
         DSGEN (SENS23,1,0,7)                                  @XA20885
         DSGEN (SENS2331,64)                                   @XA20885
         DSGEN (XRESV,56)                                      @M04AE95
         DSGEN (DEVDEPSB,8)                                    @M04AE95
         DSGEN (BASICS1,1,0,7)                                 @M04AE95
         DSGEN (BASICS2,1,0,7)                                 @M04AE95
         DSGEN (XDUMZ,8),(XSIOCNT,24)
*
*                                  MDR DSECT
         ORG   JOBID
         DSGEN (MDRCUA,16),(RECTYP,8),(XDUMQ,8)
         DSGEN (MDREC2,16,0,62)      TWO BYTE COUNTERS         @XA20899
         DSGEN (MDRC1,8,0,111)       ONE BYTE COUNTERS         @XA20899
*
*                                  END OF MDR DSECT
*
*
         TITLE 'IFCSXXXH - 3895 SUMMARY - ALIAS IFCS3895,IFCST00D'
*
IFCSXXXH CSECT
         USING RECORD,R2
         USING *,R9
         DC    A(ENTRY)                 PTR TO SUM ENTRIES
         DC    A(PEDIT)                 PTR TO EDIT TABLE
REG8     DC    F'0'                     PTR TO ACTIVE ENTRY
SCSIZE   DC    H'482'           NUMBER OF 2 BYTE COUNTERS      @XA20885
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3                        COUNTER POINTER
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
L0       EQU   0
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4
L5       EQU   5
L6       EQU   6
L7       EQU   7
L8       EQU   8
L9       EQU   9
L10      EQU   10
L11      EQU   11
L12      EQU   12
L13      EQU   13
L14      EQU   14
L15      EQU   15
L16      EQU   16
L17      EQU   17
L18      EQU   18
L19      EQU   19
L20      EQU   20
L21      EQU   21
L22      EQU   22
L23      EQU   23
L28      EQU   28
L32      EQU   32
L44      EQU   44
L46      EQU   46
L64      EQU   64
L71      EQU   71                                              @M04AE95
L96      EQU   96                                              @M04AE95
L128     EQU   128
WORK1    DC    D'0'                WORK AREA # 1
X00      DC    2F'0'
REGSAVE  DC    4F'0'                    REG SAVE AREA
SAVE24   DC    3F'0'               REGS 2/4 SAVE AREA
HW2      DC    H'2'
HW8      DC    H'8'                     EIGHT
HW16     DC    H'16'                    SIXTEEN
NOCARRY  EQU   12                       COND CODE AFTER'AL'END CARRY
HEX00    EQU   X'00'
X01      EQU   X'01'                                           @M04AE95
X10      EQU   X'10'
X20      EQU   X'20'
X40      EQU   X'40'
X7F      EQU   X'7F'
X80      EQU   X'80'
X90      EQU   X'90'
         DS    0H
RETURN   LM    R5,R8,REGSAVE            RESTORE REGS
         BR    R14                 RETURN
MDRCK    EQU   *
         STM   R5,R8,REGSAVE            SAVE REGS
         TM    CLASRC,X90               MDR RECORD ?
         BNO   RETURN                   NO, BR TO RETURN
         LR    R5,R3                    GET CTR PTR
         BAL   R8,ADDUP                 GO ADD TO MDR CTR
         LA    R8,MDRCT-L6         GET MDR PROC ADDRESS
         ST    R8,REG8             PUT IT IN PTR
         B    RETURN                 RETURN
MDRCHK   STM   R5,R8,REGSAVE       SAVE REGS
         LA    R8,63            LENGTH OF TWO BYTE COUNTERS    @XA20885
         LR    R7,R3               SUM AREA ADDRESS
         LA    R6,MDREC20          INPUT RECORD ADDRESS        @M04AE95
DOALL    SR    R5,R5               ZERO R5
         CH    R5,L0(R6)           ANY DATA IN INPUT?
         BE    NXTBYTE             BRANCH IF NO
         LH    R5,L0(R6)           GET SUM COUNTER VALUE
         A     R5,L0(R7)           ADD NEW VALUE
         ST    R5,L0(R7)           STORE NEW VALUE IN SUM AREA
NXTBYTE  LA    R7,L4(R7)           STEP SUM AREA COUNTER
         LA    R6,L2(R6)           STEP INPUT AREA COUNTER
         BCT   R8,DOALL            DO ALL SENSE BYTES
         LA    R8,112           LENGTH OF ONE BYTE COUNTERS    @XA20885
         LA    R6,MDRC10        ADDR OF 1 BYTE COUNTERS        @XA20899
DOALL1   SR    R5,R5               ZERO R5                     @M04AE95
         ICM   R5,1,L0(R6)         GET VALUE OF COUNTER        @M04AE95
         LTR   R5,R5               ANY VALUE                   @M04AE95
         BZ    NXTBYTE1            NO,CHECK NEXT COUNTER       @M04AE95
         A     R5,L0(R7)           ADD ORIGINAL VALUE          @M04AE95
         ST    R5,L0(R7)           STORE NEW VALUE IN SUM AREA @M04AE95
NXTBYTE1 LA    R7,L4(R7)           STEP SUM AREA COUNTER       @M04AE95
         LA    R6,L1(R6)           STEP INPUT AREA COUNTER     @M04AE95
         BCT   R8,DOALL1           DO ALL ONE BYTE COUNTERS    @M04AE95
         B     RETURN              RETURN WHEN FINISHED
OBRSENSE STM   R5,R8,REGSAVE       SAVE REGS
         STM   R2,R4,SAVE24        SAVE REGS
         LA    R8,16
         LR    R6,R3
         LA    R5,BASICS10         ADDR OF INPUT BASIC SENSE   @M04AE95
         BAL   R3,SUMSNS
         LA    R5,BASICS10         ADDR OF INPUT BASIC SENSE   @M04AE95
         TM    L0(R5),X10          ANY PROCESSOR/EXTENDED SNS?
         BZ    RETURN9             BRANCH IF NO
         LA    R5,BASICS20         ADDR OF BASIC SENSE BTYE 2  @M04AE95
         TM    L0(R5),X01          PROCESSOR OR EXTENDED?      @M04AE95
         BO    PROCSNS             BRANCH IF PROCESSOR
         LA    R5,SENS000          INPUT DATA FOR EXTENDED SNS
         LA    R8,48               NUMBER OF EXTENDED BITS
         L     R6,SAVE24+4         SUM COUNTER POINTER
         LA    R6,L64(R6)          SUM COUNTER AREA FOR EXPANDED
         BAL   R3,SUMSNS           GO SUM COUNTERS
         LA    R5,SENS160          INPUT FOR EXT SENSE BYTE 16 @M04AE95
         LA    R8,8                NUMBER OF BITS TO SUM       @M04AE95
         BAL   R3,SUMSNS           GO SUM COUNTERS             @M04AE95
         LA    R5,SENS200       INPUT FOR EXT SENSE BYTE 20    @XA20885
         LA    R8,8                NUMBER OF BYTES TO SUM      @M04AE95
         BAL   R3,SUMSNS           GO SUM COUNTERS             @M04AE95
         LA    R5,SENS220       INPUT FOR EXT SENSE BYTE 22    @XA20885
         LA    R8,8             NUMBER OF BITS TO SUM          @XA20885
         BAL   R3,SUMSNS        GO TO SUM COUNTERS             @XA20885
         LA    R5,SENS230       INPUT FOR EXT SENSE BYTE 23    @XA20885
         LA    R8,8             NUMBER OF BITS TO SUM          @XA20885
         BAL   R3,SUMSNS        GO TO SUM COUNTERS             @XA20885
RETURN9  LM    R2,R4,SAVE24        RESTORE REGS
         B     RETURN              RETURN TO CALLER
PROCSNS  LA    R5,SENS040          PROCESSOR SENSE BYTES 4,5   @M04AE95
         LA    R8,16               NUMBER OF PROCESSOR BITS
         L     R6,SAVE24+4         SUM COUNTER ADDRESS
         LA    R6,L32(R6)          SUM AREA ADDRESS FOR PROCESSOR
         BAL   R3,SUMSNS           GO SUM COUNTERS
         LM    R2,R4,SAVE24        RESTORE REGS
         B     RETURN              RETURN TO CALLER
SUMSNS   LA    R7,L128
         LA    R2,L8
NEXTBIT  EX    R7,TESTSNS
         BZ    NEXT
         LH    R4,L0(R6)
         LA    R4,L1(R4)
         STH   R4,L0(R6)
NEXT     LA    R6,L2(R6)
         SRL   R7,L1
         BCT   R8,STEP5
         L     R2,SAVE24
         BR    R3
STEP5    BCT   R2,NEXTBIT
         LA    R5,L1(R5)
         B     SUMSNS
TESTSNS  TM    0(R5),HEX00
OBRSIO   STM   R5,R8,REGSAVE       SAVE REGS
         LR    R5,R3               GET OLD I/O COUNT ADDRESS
         LA    R6,XDUMZ            SIO ADDRESS -1
         L     R7,0(R5)            GET OLD SIO COUNT
         A     R7,0(R6)            ADD LATEST COUNT
         ST    R7,0(R5)            STORE NEW COUNT
         B     RETURN              RETURN TO CALLER
ADDUP    EQU   *
         LH    R6,L0(R5)                LOAD SUM CTR
         LA    R6,L1(R6)                ADD ONE TO CTR
         STH   R6,L0(R5)                SAVE CTR
         LA    R5,L2(R5)                BUMP SUM CTR PTR
         BR    R8                       RETURN
OBRCNT   DS    0H
         STM   R5,R8,REGSAVE            SAVE REGS
         TM    CLASRC,X90               MDR RECORD ?
         BO    RETURN                   YES, RETURN
          LR    R5,R3                    GET COUNTER PTR
OBRLNG   DS    0H
         LA    R5,L2(R5)                BUMP CTR PTR
         BAL   R8,ADDUP                 GO ADD TO CTR
         TM    BASICS10,X10             EQIUPMENT CHECK        @XA19168
         BZ    RETURN                   NO, RETURN             @XA19168
         TM    DEVDEPSB,X80             ERROR READING EXT OR   @XA19168
*                                       PROCESSOR SENSE        @XA19168
         BZ    RETURN                   NO, RETURN             @XA19168
         TM    BASICS20,X01             PROCESSOR SENSE FAILURE
         BO    PROSNS                   YES, BRANCH            @XA19168
         LA    R5,L2(R5)                BUMP COUNTER FOR EXT SENSE
PROSNS   BAL   R8,ADDUP                 GO ADD TO COUNTER      @XA19168
         B     RETURN                   RETURN
XDATE1    DS    0H
         STM   R5,R8,REGSAVE            SAVE REGS
         CLC   DATE(L4),X00             IS DATE 0 ?
         BE    RETURN                   YES, BR
         CLC   L0(L4,R3),X00            IS LO DATE / ?
         BNE   XDATE2                   NO, BR
         MVC   L0(L4,R3),DATE           MOVE DATE IN
XDATE2   EQU   *
         CLC   DATE(L4),L0(R3)          CHECK FOR LO DATE
         BL    SAVELOW                  IT IS LOWER, BRANCH
         CLC   DATE(L4),L4(R3)          CHECK FOR HI DATE
         BNH   RETURN                   IT IS IN BETWEEN, BR
         MVC   L4(L4,R3),DATE           IT IS HIGHER, SAVE IT
         B     RETURN                   RETURN
MDRTYPE  STM   R5,R8,REGSAVE
         LR    R5,R3               SAVE COUNTER POINTER
         TM    RECTYP,X40          COUNTER OVERFLOW?
         BO    OVFLW               BRANCH IF YES
         LA    R5,L2(R5)           STEP COUNTER FOR UNKNOWN RECS
         BAL   R8,ADDUP            ADD TO COUNTER              @XA19168
         B     MDRERR              GO CHECK FOR ERRORS         @XA19168
OVFLW    BAL   R8,ADDUP            GO ADD TO COUNTER
         LA    R5,L2(R5)           STEP COUNTER FOR MDR ERRORS @XA19168
MDRERR   TM    RECTYP,X80          ERROR READING PRED SENSE    @XA19168
         BZ    RETURN              NO, RETURN                  @XA19168
         BAL   R8,ADDUP            YES, ADD TO ERROR COUNTER   @XA19168
         B     RETURN
SAVELOW  EQU   *
         MVC   L0(L4,R3),DATE           IT IS LO, SAVE IT
         B     RETURN                   RETURN
ENTRY    DS    0F
         SPECIAL XDATE1,0,SPACE=4
         SPECIAL MDRCK,0,SPACE=2
         SPECIAL OBRCNT,0,SPACE=4                              @XA19168
         SPECIAL OBRSENSE,0,SPACE=112                          @XA20885
         SPECIAL OBRSIO,0,SPACE=2
         DC    XL1'FF'                  END OF SUM SECTION
MDRCT    EQU   *
         SPECIAL MDRTYPE,0,SPACE=3                             @XA19168
         SPECIAL MDRCHK,0,SPACE=346                            @XA20885
         DC    XL1'FF'             MDR END
PEDIT    DS    0F
&DSECT   SETC  'HAWKCTR'
&CSECT   SETC  'PEDIT'
         USING *,R9
         USING HAWKCTR,R2
         DC    A(PENTRY)
         DC    A(IFCSXXXH)
R9PTR    DC    F'0'
LABELPTR DC    F'0'
*
*        COUNTER DSECT DEFINITION,MUST BE IN ACCESS SEQUENCE
*
HAWKCTR  DSECT
         DS    3H
         DSGEN (YDUMA,16),              DUMMY                          X
               (YNOREC,16),             NO. OF RECORDS                 X
               (YTYPE,8),               LAST TYPE ENCOUNTERED          X
               (YCHAN,16),              CHAN ADDR              @XA19168X
               (YCUA,16),               CHAN UNIT ADDR         @XA19168X
               (YSER,24),               CPU SERIAL #                   X
               (YCPU,16),               CPU MODEL #                    X
               (YSMSW,16)               SWITCH
         DSGEN (LODATE,32),             EARLIEST DATE                  X
               (HIDATE,32)              LATEST DATE
         DSGEN (MDRCD,16),              COUNT OF MDR RECORDS           X
               (CULOG,16),              ENTRIES IN ALL MDR RECORDS     X
               (OBRST,16),              COUNT OF OBR SHORT RECORDS     X
               (OBRLG,16),              COUNT OF OBR LONG RECORDS      X
               (PROCFAIL,16),           COUNT OF PROC SENSE FAILURES   X
               (EXTFAIL,16)             COUNT OF EXT SENSE FAILURES
         DSGEN (SNSCT,16,0,15)
         DSGEN (PROCT,16,0,15)
         DSGEN (EXTCT,16,0,79)                                 @XA20885
         DSGEN (IOCNT,32)
         DSGEN (TYPCT,16,0,2)                                  @XA19168
         DSGEN (TWOBYT,32,0,62)                                @XA20899
         DSGEN (ONEBY,32,0,111)                                @XA20899
IFCSXXXH CSECT
YR9PTR   DC    F'0'
YLABEL   DC    F'0'
*
*                        SPECIAL ROUTINES FOR SUMMARY
*
         DS    0F
RETURN1  LM    R5,R8,REGSAVE1           RESTORE REGS
RETURN2  BR    R14                      RETURN TO CALLER
SKIP     BR    R14                 RETURN
SKIPPER  BR    R14                 RETURN
SETCPUNO EQU   *
         STM   R5,R8,REGSAVE1           SAVE REGS
         SR    R5,R5                    ZERO R5
         IC    R5,L0(R4)                PICK UP CPU TYPE
         SLL   R5,L8                      V
         IC    R5,L1(R4)                  V
         LTR   R5,R5                    IS IT ZERO ?
         BNZ   RETURN1                  NO, BRANCH
         LA    R6,L46                   BACK UP POINTER 46 BYTES
         SR    R3,R6                     TO PUT IN NEW INFO
         MVC   L0(L9,R3),UNIV           SAY MODEL = UNIVERSAL
         MVC   L23(L6,R3),NONE          SAY SERIAL = NONE
         B     RETURN1                  RETURN
SETDATE  EQU   *
         UNPK  WORK(L8),L0(L4,R4)       UNPACK A DATE
         MVZ   WORK+L7(L1),WORK         MOVE IN ZONE BITS
         MVC   L0(L3,R3),WORK+L5        MOVE DAY TO PRINT BUFF
         MVC   L5(L2,R3),WORK+L3        MOVE YEAR TO RPINT BUFF
         BR    R14                      RETURN
CKOBRCNT EQU   *                                               @XA19531
         STM   R5,R8,REGSAVE1                                  @XA19531
         CLC   L0(L2,R4),HW0                                   @XA19531
         BNE   RETURN1                                         @XA19531
         L     R5,MDRLOC                                       @XA19531
         ST    R5,LABELPTR                                     @XA20700
         L     R5,MDRLAB                                       @XA19531
         ST    R5,YR9PTR                                       @XA20700
         B     RETURN1                                         @XA19531
CKMDRCNT EQU   *                                               @XA19531
         STM   R5,R8,REGSAVE1                                  @XA19531
         CLC   L0(L2,R4),HW0                                   @XA19531
         BNE   RETURN1                                         @XA19531
         L     R5,FINISH                                       @XA19531
         ST    R5,LABELPTR                                     @XA20700
         L     R5,FINISH1                                      @XA19531
         ST    R5,YR9PTR                                       @XA20700
         B     RETURN1                                         @XA19531
SPACE20  EQU   *
         LA    R3,L19(R3)               BUMP POINTER TO BUFF
         BR    R14                      RETURN
THEND    EQU   *
         STM   R14,R12,L12(R13)         SAVE REGS
         LR    R12,R13                  LOAD SAVE AREA ADDR
         LA    R13,FSAVE                LOAD MY SAVE AREA ADDR
         ST    R12,L4(R13)              SAVE CALLERS SAVE AREA ADDR
         ST    R13,L8(R13)              SAVE MY SAVE AREA ADDR IN CALLR
         L     R3,L4(R2)                LOAD ADDR OF NEXT CTR
         LH    R0,SIZE                  LOAD SIZE OF CTRS
         LR    R1,R2                    LOAD ADDR OF CTRS
         TM    ONETIME,YES              COUNTERS ALREADY FREE? @XA20701
         BO    NOFREEMN                 ALREADY FREED, BYPASS  @XA20701
         FREEMAIN R,LV=(0),A=(1)        FREE CTR STORAGE
         MVI   ONETIME,YES              SET ONETIME SWITCH     @XA20701
NOFREEMN EQU   *                        BYPASS OF FREEMAIN     @XA20701
         LTR   R3,R3                    ARE THERE MORE CTRS ?
         BZ    RETURNF                  NO,RETURN
         LR    R2,R3                    LOAD POINTER
         LA    R5,PENTRY+L10            LOAD EDIT TBL ADDR
         ST    R5,YR9PTR                STORE IT FOR EREP CTL
         LA    R5,LABELS-L1             LOAD LABEL ADDR
         ST    R5,YLABEL                STORE IT FOR EREP CTL
RETURNF  EQU   *
         L     R13,L4(R13)              LOAD CALLERS SAVE AREA ADDR
         LM    R14,R12,L12(R13)         RESTORE REGS
         SR    R15,R15                  PREVENT PRINTING
         BR    R14                      RETURN
FSAVE    DC    18F'0'
SIZE     DC    H'986'           BYTES OF COUNTERS + 22         @XA20885
REGSAVE1 DC    4F'0'                    REG SAVE AREA
UNIV     DC    C'UNIVERSAL'
NONE     DC    C'NONE  '
WORK     DC    D'0'                     WORK AREA
HW0      DC    H'0'                     ZERO FOR CTR COMPARE
MDRLOC   DC    A(MDR-4)                                        @XA19531
MDRLAB   DC    A(MDR1-1)                                       @XA19531
FINISH   DC    A(FIN-4)                                        @XA19531
FINISH1  DC    A(FIN1-1)                                       @XA19531
ONETIME  DC    X'00'                    ONETIME(FREEMAIN) SWTCH@XA20701
YES      EQU   X'01'                    ALREADY FREEMAINED     @XA20701
PENTRY   DS    0F
         DC   X'00000000'
         DC   X'00000000'
         DC    A(LABELS)
         DC    H'0'
         DC    X'01'
         DC    X'000B8B00'
         LABEL ''
         LINE  ,,SKIP=0                                        @XA19531
         ROUTINE OBRLG,CKOBRCNT                                @XA19531
         LABEL  ' '                                            @XA19531
         LINE  (97,18),(1,103),SKIP=2
         HEX   YCPU,0,2B
         HEX   YSER,0,3B
         ROUTINE YCPU,SETCPUNO
         LABEL 'SUMMARY OF I/O RECORDS     TYPE - OBR       SOURCE - OUX
               TBOARD         DEVICE TYPE 3895    MODEL ','SERIAL NO.'
         LINE  ,(13),SKIP=1
         LABEL 'DAY YEAR    DAY YEAR'
         LINE  (13,12),(1,20),SKIP=2
         ROUTINE LODATE,SETDATE
         ROUTINE HIDATE,SETDATE
         LABEL 'DATE RANGE','TO'
         LINE  (26,41),(3,38),SKIP=2                           @XA19168
         HEX   YCUA,0,2B                                       @XA19168
         CONVT OBRLG,2,5
         LABEL 'CHANNEL/UNIT ADDRESS -','TOTAL NUMBER OF RECORDS -'
         LINE  (33,18),(3,37),SKIP=2                           @XA19168
         CONVT PROCFAIL,2,5                                    @XA19168
         CONVT EXTFAIL,2,5                                     @XA19168
         LABEL 'SENSE FAILURES -- PROCESSOR -','EXTENDED -'    @XA19168
         LINE  (1,1),(18,58),SKIP=2                            @M04AE95
         ROUTINE YDUMA,SKIP
         LABEL '--- SENSE DATA ---',                           @M04AE95*
               '--- PROCESSOR SENSE DATA ---'                  @M04AE95
         LINE  (1,1),(1,29),SKIP=0                             @M04AE95
         ROUTINE YDUMA,SKIP                                    @M04AE95
         LABEL 'BIT BYTE 0         COUNT',                     @M04AE95*
               'BIT BYTE 1         COUNT'                      @M04AE95
         LINE  (1,1),(61,32),SKIP=1                            @XA20891
         ROUTINE YDUMA,SKIP                                    @M04AE95
         LABEL 'BIT BYTE 4            COUNT',                  @M04AE95*
               'BIT BYTE 5            COUNT'                   @M04AE95
         LINE  (20,29),(2,29),SKIP=0                           @M04AE95
         CONVT SNSCT0,2,5                                      @M04AE95
         CONVT SNSCT8,2,5                                      @M04AE95
         LABEL '0  COMMAND REJ','0  PREDICTOR REQ'             @M04AE95
         LINE  (83,32),(62,32),SKIP=1                          @M04AE95
         CONVT PROCT0,2,5                                      @M04AE95
         CONVT PROCT8,2,5                                      @M04AE95
         LABEL '0  PROG SET HARD ERR','0  A-PRTY CHK'          @M04AE95
         LINE  (20,29),(2,29),SKIP=0                           @M04AE95
         CONVT SNSCT1,2,5                      '               @M04AE95
         CONVT SNSCT9,2,5                                      @M04AE95
         LABEL '1  INTRVN REQD','1  FEATURE CHK'               @M04AE95
         LINE  (83,32),(62,32),SKIP=1                          @M04AE95
         CONVT PROCT1,2,5                                      @M04AE95
         CONVT PROCT9,2,5                                      @M04AE95
         LABEL '1  CS DATA CHK','1  B-PRTY CHK'                @M04AE95
         LINE  (20,29),(2,29),SKIP=0                           @M04AE95
         CONVT SNSCT2,2,5                                      @M04AE95
         CONVT SNSCT10,2,5                                     @M04AE95
         LABEL '2  BUS OUT CHK','2  FEED CMD REQD'             @M04AE95
         LINE  (83,32),(62,32),SKIP=1                          @M04AE95
         CONVT PROCT2,2,5                                      @M04AE95
         CONVT PROCT10,2,5                                     @M04AE95
         LABEL '2  CS ADDR CHK','2  SCAN BUFR CHK'             @M04AE95
         LINE  (20,29),(2,29),SKIP=0                           @M04AE95
         CONVT SNSCT3,2,5                                      @M04AE95
         CONVT SNSCT11,2,5                                     @M04AE95
         LABEL '3  EQUIP CHK','3  RESERVED'                    @M04AE95
         LINE  (83,32),(62,32),SKIP=1                          @M04AE95
         CONVT PROCT3,2,5                                      @M04AE95
         CONVT PROCT11,2,5                                     @M04AE95
         LABEL '3  CYCLE CTL CHK','3  CHAN TIME-OUT'           @XA20886
         LINE  (20,29),(2,29),SKIP=0                           @M04AE95
         CONVT SNSCT4,2,5                                      @M04AE95
         CONVT SNSCT12,2,5                                     @M04AE95
         LABEL '4  DATA CHK','4  INVALID CMD'                  @M04AE95
         LINE  (83,32),(62,32),SKIP=1                          @M04AE95
         CONVT PROCT4,2,5                                      @M04AE95
         CONVT PROCT12,2,5                                     @M04AE95
         LABEL '4  RESERVED','4  RESERVED'                     @M04AE95
         LINE  (20,29),(2,29),SKIP=0                           @M04AE95
         CONVT SNSCT5,2,5                                      @M04AE95
         CONVT SNSCT13,2,5                                     @M04AE95
         LABEL '5  RESERVED','5  INCOMP PROC'                  @M04AE95
         LINE  (83,32),(62,32),SKIP=1                          @M04AE95
         CONVT PROCT5,2,5                                      @M04AE95
         CONVT PROCT13,2,5                                     @M04AE95
         LABEL '5  RESERVED','5  RESERVED'                     @M04AE95
         LINE  (20,29),(2,29),SKIP=0                           @M04AE95
         CONVT SNSCT6,2,5                                      @M04AE95
         CONVT SNSCT14,2,5                                     @M04AE95
         LABEL '6  NOT INIT','6  MERGE FEED'                   @M04AE95
         LINE (83,32),(62,32),SKIP=1                           @M04AE95
         CONVT PROCT6,2,5                                      @M04AE95
         CONVT PROCT14,2,5                                     @M04AE95
         LABEL '6  RESERVED','6  RESERVED'                     @M04AE95
         LINE  (20,29),(2,29),SKIP=0                           @M04AE95
         CONVT SNSCT7,2,5                                      @M04AE95
         CONVT SNSCT15,2,5                                     @M04AE95
         LABEL '7  RUNNING','7  PROC NOT FUNC'                 @M04AE95
         LINE  (83,32),(62,32),SKIP=2                          @M04AE95
         CONVT PROCT7,2,5                                      @M04AE95
         CONVT PROCT15,2,5                                     @M04AE95
         LABEL '7  RESERVED','7  RESERVED'                     @M04AE95
         LINE  ,,SKIP=1                                        @XA20891
         ROUTINE YDUMA,SKIP                                    @M04AE95
         LABEL ''                                              @M04AE95
         LINE  (1,1),(47),SKIP=2                               @M04AE95
         ROUTINE YDUMA,SKIP                                    @M04AE95
         LABEL '--- EXTENDED SENSE DATA ---'                   @M04AE95
         LINE  (1,1),(1,31),SKIP=1                             @XA20891
         ROUTINE YDUMA,SKIP                                    @M04AE95
         LABEL 'BIT BYTE 0           COUNT',                   @M04AE95*
               'BIT BYTE 1           COUNT',                   @M04AE95*
               'BIT BYTE 2           COUNT',                   @M04AE95*
               'BIT BYTE 3           COUNT'                    @M04AE95
         LINE  (22,31),(2,31),SKIP=1                           @M04AE95
         CONVT EXTCT0,2,5                                      @M04AE95
         CONVT EXTCT8,2,5                                      @M04AE95
         CONVT EXTCT16,2,5                                     @M04AE95
         CONVT EXTCT24,2,5                                     @M04AE95
         LABEL '0  CTL ERR','0  RESERVED',                     @M04AE95*
               '0  M-BUFR PRTY CHK','0  BEAM NOT MVNG'         @M04AE95
         LINE  (22,31),(2,31),SKIP=1                           @M04AE95
         CONVT EXTCT1,2,5                                      @M04AE95
         CONVT EXTCT9,2,5                                      @M04AE95
         CONVT EXTCT17,2,5                                     @M04AE95
         CONVT EXTCT25,2,5                                     @M04AE95
         LABEL '1  PRT COIL ERR','1  BUFR PRTY CHK',           @M04AE95*
               '1  CMP ST PRTY CHK','1  RTS, NO TRACE'         @M04AE95
         LINE  (22,31),(2,31),SKIP=1                           @M04AE95
         CONVT EXTCT2,2,5                                      @M04AE95
         CONVT EXTCT10,2,5                                     @M04AE95
         CONVT EXTCT18,2,5                                     @M04AE95
         CONVT EXTCT26,2,5                                     @M04AE95
         LABEL '2  INS COIL ERR','2  RESERVED',                @M04AE95*
               '2  M-BUFR ADDR CHK','2  WINDOW OVRSCN'         @M04AE95
         LINE  (22,31),(2,31),SKIP=1                           @M04AE95
         CONVT EXTCT3,2,5                                      @M04AE95
         CONVT EXTCT11,2,5                                     @M04AE95
         CONVT EXTCT19,2,5                                     @M04AE95
         CONVT EXTCT27,2,5                                     @M04AE95
         LABEL '3  BUFR PRTY CHK','3  RESERVED',               @M04AE95*
               '3  CMP ST ADDR CHK','3  ROTATION ERR'          @M04AE95
         LINE  (22,31),(2,31),SKIP=1                           @M04AE95
         CONVT EXTCT4,2,5                                      @M04AE95
         CONVT EXTCT12,2,5                                     @M04AE95
         CONVT EXTCT20,2,5                                     @M04AE95
         CONVT EXTCT28,2,5                                     @M04AE95
         LABEL '4  BUFR ADDR CHK','4  BUFR CHR OVRN',          @M04AE95*
               '4  PROG CHK','4  READ DATA CHK'                @M04AE95
         LINE  (22,31),(2,31),SKIP=1                           @M04AE95
         CONVT EXTCT5,2,5                                      @M04AE95
         CONVT EXTCT13,2,5                                     @M04AE95
         CONVT EXTCT21,2,5                                     @M04AE95
         CONVT EXTCT29,2,5                                     @M04AE95
         LABEL '5  RESERVED','5  RESERVED',                    @M04AE95*
               '5  TIME-OUT ERR','5  WRITE DATA CHK'           @M04AE95
         LINE  (22,31),(2,31),SKIP=1                           @M04AE95
         CONVT EXTCT6,2,5                                      @M04AE95
         CONVT EXTCT14,2,5                                     @M04AE95
         CONVT EXTCT22,2,5                                     @M04AE95
         CONVT EXTCT30,2,5                                     @M04AE95
         LABEL '6  RESERVED','6  RESERVED','6  DCS SPEC ERR',  @XA20889*
               '6  LOW CRT PMT 1'                              @XA20888
         LINE  (22,31),(2,31),SKIP=3                           @M04AE95
         CONVT EXTCT7,2,5                                      @M04AE95
         CONVT EXTCT15,2,5                                     @M04AE95
         CONVT EXTCT23,2,5                                     @M04AE95
         CONVT EXTCT31,2,5                                     @M04AE95
         LABEL '7  RESERVED','7  RESERVED','7  RESERVED',      @M04AE95*
               '7  LOW DOC PMT 1'                              @XA20888
         LINE  (1,1),(1,31),SKIP=1                             @XA20891
         ROUTINE YDUMA,SKIP                                    @M04AE95
         LABEL 'BIT BYTE 4           COUNT',                   @M04AE95*
               'BIT BYTE 5           COUNT',                   @M04AE95*
               'BIT BYTE 16          COUNT',                   @M04AE95*
               'BIT BYTE 20          COUNT'                    @XA20885
         LINE  (22,31),(2,31),SKIP=1                           @M04AE95
         CONVT EXTCT32,2,5                                     @M04AE95
         CONVT EXTCT40,2,5                                     @M04AE95
         CONVT EXTCT48,2,5                                     @M04AE95
         CONVT EXTCT56,2,5                                     @M04AE95
         LABEL '0  ENDORSER CHK','0  MCS PRTY CHK',            @M04AE95*
               '0  RESERVED','0  CHAN ADAPT'                   @XA20885
         LINE  (22,31),(2,31),SKIP=1                           @M04AE95
         CONVT EXTCT33,2,5                                     @M04AE95
         CONVT EXTCT41,2,5                                     @M04AE95
         CONVT EXTCT49,2,5                                     @M04AE95
         CONVT EXTCT57,2,5                                     @M04AE95
         LABEL '1  RESERVED','1  MCS HANG CHK','1  RESERVED',  @M04AE95*
               '1  RUN CTL'                                    @XA20885
         LINE  (22,31),(2,31),SKIP=1                           @M04AE95
         CONVT EXTCT34,2,5                                     @M04AE95
         CONVT EXTCT42,2,5                                     @M04AE95
         CONVT EXTCT50,2,5                                     @M04AE95
         CONVT EXTCT58,2,5                                     @M04AE95
         LABEL '2  RESERVED','2  INVLD OP CODE',               @M04AE95*
               '2  NON-SELECT CHK','2  MICR'                   @XA20885
         LINE  (22,31),(2,31),SKIP=1                           @M04AE95
         CONVT EXTCT35,2,5                                     @M04AE95
         CONVT EXTCT43,2,5                                     @M04AE95
         CONVT EXTCT51,2,5                                     @M04AE95
         CONVT EXTCT59,2,5                                     @M04AE95
         LABEL '3  RESERVED','3  VIS ADDR CHK',                @M04AE95*
               '3  GET DATA CHK','3  DIH'                      @XA20885
         LINE  (22,31),(2,31),SKIP=1                           @M04AE95
         CONVT EXTCT36,2,5                                     @M04AE95
         CONVT EXTCT44,2,5                                     @M04AE95
         CONVT EXTCT52,2,5                                     @M04AE95
         CONVT EXTCT60,2,5                                     @M04AE95
         LABEL '4  RESERVED','4  RESERVED','4  PUT DATA CHK',  @M04AE95*
               '4  INS/PRT'                                    @XA20885
         LINE  (22,31),(2,31),SKIP=1                           @M04AE95
         CONVT EXTCT37,2,5                                     @M04AE95
         CONVT EXTCT45,2,5                                     @M04AE95
         CONVT EXTCT53,2,5                                     @M04AE95
         CONVT EXTCT61,2,5                                     @M04AE95
         LABEL '5  RESERVED','5  RESERVED','5  TAG CHK',       @M04AE95*
               '5  OCR'                                        @XA20885
         LINE  (22,31),(2,31),SKIP=1                           @M04AE95
         CONVT EXTCT38,2,5
         CONVT EXTCT46,2,5
         CONVT EXTCT54,2,5
         CONVT EXTCT62,2,5                                     @M04AE95
         LABEL '6  RESERVED','6  RESERVED','6  SELECT CHK',    @M04AE95*
               '6  MICROFILM'                                  @XA20885
         LINE  (22,31),(2,31),SKIP=3                           @XA20891
         CONVT EXTCT39,2,5
         CONVT EXTCT47,2,5
         CONVT EXTCT55,2,5
         CONVT EXTCT63,2,5                                     @M04AE95
         LABEL '7  RESERVED','7  RESERVED','7  ADDR CHK',      @M04AE95*
               '7  GENERAL'                                    @XA20885
         LINE  (1,1),(1,31),SKIP=1                             @XA20885
         ROUTINE YDUMA,SKIP                                    @XA20885
         LABEL 'BIT BYTE 22          COUNT',                   @XA20885*
               'BIT BYTE 23          COUNT'                    @XA20885
         LINE  (22,31),(2,31),SKIP=1                           @XA20885
         CONVT EXTCT64,2,5                                     @XA20885
         CONVT EXTCT72,2,5                                     @XA20885
         LABEL '0  LAMP CHK PRT','0  A-PRTY CHK'               @XA20885
         LINE  (22,31),(2,31),SKIP=1                           @XA20885
         CONVT EXTCT65,2,5                                     @XA20885
         CONVT EXTCT73,2,5                                     @XA20885
         LABEL '1  LAMP CHK RR','1  B-PRTY CHK'                @XA20885
         LINE  (22,31),(2,31),SKIP=1                           @XA20885
         CONVT EXTCT66,2,5                                     @XA20885
         CONVT EXTCT74,2,5                                     @XA20885
         LABEL '2  CAPSTAN CHK','2  FB ADDR CHK'               @XA20885
         LINE  (22,31),(2,31),SKIP=1                           @XA20885
         CONVT EXTCT67,2,5                                     @XA20885
         CONVT EXTCT75,2,5                                     @XA20885
         LABEL '3  SHUTTER CHK','3  VB ADDR CHK'               @XA20885
         LINE  (22,31),(2,31),SKIP=1                           @XA20885
         CONVT EXTCT68,2,5                                     @XA20885
         CONVT EXTCT76,2,5                                     @XA20885
         LABEL '4  RESERVED','4  FB PRTY CHK'                  @XA20885
         LINE  (22,31),(2,31),SKIP=1                           @XA20885
         CONVT EXTCT69,2,5                                     @XA20885
         CONVT EXTCT77,2,5                                     @XA20885
         LABEL '5  RESERVED','5  VB PRTY CHK'                  @XA20885
         LINE  (22,31),(2,31),SKIP=1                           @XA20885
         CONVT EXTCT70,2,5                                     @XA20885
         CONVT EXTCT78,2,5                                     @XA20885
         LABEL '6  RESERVED','6  CHAN TIME-OUT'                @XA20885
         LINE  (22,31),(2,31),SKIP=1                           @XA20885
         CONVT EXTCT71,2,5                                     @XA20885
         CONVT EXTCT79,2,5                                     @XA20885
         LABEL '7  RESERVED','7  RESERVED'                     @XA20885
         LINE  ,,SKIP=E
         ROUTINE YDUMA,SKIP
         LABEL ' '
MDR      LINE  ,,SKIP=0                                        @XA19531
         ROUTINE MDRCD,CKMDRCNT                                @XA19531
MDR1     LABEL  ' '                                            @XA19531
         LINE  (97,18),(1,103),SKIP=2
         HEX   YCPU,0,2B
         HEX   YSER,0,3B
         LABEL 'SUMMARY OF I/O RECORDS     TYPE - MDR     SOURCE - MISC*
               ELLANEOUS     DEVICE TYPE 3895     MODEL ','SERIAL NO.'
         LINE  (24,21),(3,60),SKIP=1                           @XA19168
         HEX   YCUA,0,2B                                       @XA19168
         LABEL 'CHANNEL/UNIT ADDRESS','DAY YEAR    DAY YEAR'   @XA19168
         LINE  (63,12),(51,20),SKIP=2
         ROUTINE LODATE,SETDATE
         ROUTINE HIDATE,SETDATE
         LABEL 'DATE RANGE','TO'
         LINE  (29,1),(1,1),SKIP=1                             @XA19168
         CONVT TYPCT0,2,5
         LABEL 'COUNTER OVERFLOW RECORDS'
         LINE
         CONVT TYPCT1,2,5
         LABEL 'OFFLINE/END-OF-DAY RECORDS'                    @XA19168
         LINE  (1,1),(29,1),SKIP=1                             @XA19168
         ROUTINE YDUMA,SKIP
         LABEL '-----'
         LINE  (29,43),(1,50),SKIP=2                           @XA19168
         CONVT MDRCD,2,5
         CONVT TYPCT2,2,5                                      @XA19168
         LABEL 'TOTAL NUMBER OF RECORDS','PREDICTOR FAILURES -'
         LINE  (1,1),(1,31),SKIP=1                             @M04AE95
         ROUTINE YDUMA,SKIP                                    @M04AE95
         LABEL '--OPERATIONS--------------',                   @M04AE95*
               '--MICR 1 PERFORMANCE------',                   @M04AE95*
               '--MICR 2 PERFORMANCE------',                   @M04AE95*
               '--FE COUNTERS-------------'                    @M04AE95
         LINE  (19,31),(1,31),SKIP=1                           @M04AE95
         CONVT TWOBYT0,4,8                                     @M04AE95
         CONVT TWOBYT32,4,8                                    @M04AE95
         CONVT TWOBYT40,4,8                                    @M04AE95
         CONVT TWOBYT44,4,8                                    @M04AE95
         LABEL 'TOTAL DOCS','AMT PRES, INVLD',                 @M04AE95*
               'ERROR DOCS','COUNTER 1, LOC 88'                @XA20891
         LINE  (19,31),(1,31),SKIP=1                           @M04AE95
         CONVT TWOBYT1,4,8                                     @M04AE95
         CONVT TWOBYT33,4,8                                    @M04AE95
         CONVT TWOBYT41,4,8                                    @M04AE95
         CONVT TWOBYT45,4,8                                    @M04AE95
         LABEL 'MERGE DOCS','TPC PRES, INVLD',                 @M04AE95*
               'EARLY START','COUNTER 2, LOC 90'               @XA20891
         LINE  (19,31),(1,31),SKIP=1                           @M04AE95
         CONVT TWOBYT2,4,8                                     @M04AE95
         CONVT TWOBYT34,4,8                                    @M04AE95
         CONVT TWOBYT42,4,8                                    @M04AE95
         CONVT TWOBYT46,4,8                                    @M04AE95
         LABEL 'DOCS INSCRIBED','ACT PRES, INVLD',             @M04AE95*
               'SHORT TERM ERR','COUNTER 3, LOC 92'            @XA20891
         LINE  (19,31),(1,31),SKIP=1                           @M04AE95
         CONVT TWOBYT3,4,8                                     @M04AE95
         CONVT TWOBYT35,4,8                                    @M04AE95
         CONVT TWOBYT43,4,8                                    @M04AE95
         CONVT TWOBYT47,4,8                                    @M04AE95
         LABEL 'SEC FLD INSCRIBES','TNF PRES, INVLD',          @M04AE95*
               'LONG TERM ERR','COUNTER 4, LOC 94'             @XA20891
         LINE  (19,31),(1,31),SKIP=1                           @M04AE95
         CONVT TWOBYT4,4,8                                     @M04AE95
         CONVT TWOBYT36,4,8                                    @M04AE95
         LABEL 'EXTENDED PRINTS','AUX PRES, INVLD'             @XA20890
         LINE  (19,31),(1,31),SKIP=1                           @M04AE95
         CONVT TWOBYT5,4,8                                     @M04AE95
         CONVT TWOBYT37,4,8                                    @M04AE95
         LABEL 'LATE STOP','PEAK ERR',                         @XA20897*
               '--ELECTRONIC DSF/IDENTICAL AMOUNT----------------------*
               --'                                             @XA20897
         LINE  (19,31),(1,31),SKIP=1                           @M04AE95
         CONVT TWOBYT6,4,8                                     @M04AE95
         CONVT TWOBYT38,4,8                                    @M04AE95
         CONVT TWOBYT48,4,8                                    @XA20897
         CONVT TWOBYT49,4,8                                    @XA20897
         LABEL 'INCREMENT','CONFLICT','EDSF HEADER DOCS','CHECKS/EDSF'
         LINE  (19,31),(1,31),SKIP=2                           @M04AE95
         CONVT TWOBYT7,4,8                                     @M04AE95
         CONVT TWOBYT39,4,8                                    @M04AE95
         CONVT TWOBYT50,4,8                                    @XA20897
         CONVT TWOBYT51,4,8                                    @XA20897
         LABEL 'LATE CPU RESP','RESERVED','ACPTS/EDSF',        @XA20890*
               'CHECKS/IDENT AMT'                              @XA20897
         LINE  (1,1),(1),SKIP=1                                @M04AE95
         ROUTINE YDUMA,SKIP                                    @M04AE95
         LABEL '--OCR PERFORMANCE--------------------------------------*
               --------------------------------------------------------*
               --------'                                       @M04AE95
         LINE  (19,31),(1,31),SKIP=1                           @M04AE95
         CONVT TWOBYT8,4,8                                     @M04AE95
         CONVT TWOBYT9,4,8                                     @M04AE95
         CONVT TWOBYT10,4,8                                    @M04AE95
         CONVT TWOBYT11,4,8                                    @M04AE95
         LABEL 'CASH TICKET','ADD MACH TAPE',                  @M04AE95*
               'FIX ENT DEP SLIP','CASH CHECK TRANS'           @M04AE95
         LINE  (19,31),(1,31),SKIP=1                           @M04AE95
         CONVT TWOBYT12,4,8                                    @M04AE95
         CONVT TWOBYT13,4,8                                    @M04AE95
         CONVT TWOBYT14,4,8                                    @M04AE95
         CONVT TWOBYT15,4,8                                    @M04AE95
         LABEL 'DIH MATCH','BAR CODES','BUSNS DEP SLIP',       @M04AE95*
               'PERS DEP SLIP'                                 @M04AE95
         LINE  (19,31),(1,31),SKIP=1                           @M04AE95
         CONVT TWOBYT16,4,8                                    @M04AE95
         CONVT TWOBYT17,4,8                                    @M04AE95
         CONVT TWOBYT18,4,8                                    @M04AE95
         CONVT TWOBYT19,4,8                                    @M04AE95
         LABEL 'ACPTS/DEP SLIP','CHECKS/DEP SLIP',             @XA20891*
               'CHECKS/AM TAPE','OCR1 VLD ON CHECK'            @XA20891
         LINE  (19,31),(1,31),SKIP=1                           @M04AE95
         CONVT TWOBYT20,4,8                                    @M04AE95
         CONVT TWOBYT21,4,8                                    @M04AE95
         CONVT TWOBYT22,4,8                                    @M04AE95
         CONVT TWOBYT23,4,8                                    @M04AE95
         LABEL 'OCR3 VLD ON CHECK','BUSNS CHECK',              @XA20891*
               'BUSNS CHECK FTF','BUSNS CHECK FGR'             @M04AE95
         LINE  (19,31),(1,31),SKIP=1                           @M04AE95
         CONVT TWOBYT24,4,8                                    @M04AE95
         CONVT TWOBYT25,4,8                                    @M04AE95
         CONVT TWOBYT26,4,8                                    @M04AE95
         CONVT TWOBYT27,4,8                                    @M04AE95
         LABEL 'PERS CHECK','PERS CHECK FTF','PERS CHECK FGR', @M04AE95*
               'DOC STOP RJCT'                                 @M04AE95
         LINE  (19,31),(1,31),SKIP=2                           @M04AE95
         CONVT TWOBYT28,4,8                                    @M04AE95
         CONVT TWOBYT29,4,8                                    @M04AE95
         CONVT TWOBYT30,4,8                                    @M04AE95
         CONVT TWOBYT31,4,8                                    @M04AE95
         LABEL 'CLIP LVL X-HIGH','CLIP LVL HIGH',              @M04AE95*
               'CLIP LVL MEDIUM','CLIP LVL LOW'                @M04AE95
         LINE  (114),(1,93),SKIP=1                             @M04AE95
         CONVT ONEBY74,4,6                                     @XA20899
         LABEL '--JAM/STOPS, DEGRADATION-------',              @XA20899*
               'ABORTED DOCS'                                  @XA20899
         LINE  ,(14),SKIP=1                                    @XA20899
         LABEL 'DOC LATE   DEGRADE'                            @XA20899
         LINE  (16,10),(1,38),SKIP=1                           @XA20899
         CONVT ONEBY0,4,6                                      @XA20899
         CONVT ONEBY14,4,6                                     @XA20899
         LABEL 'ALIGNER DS',                                   @M04AE95*
               '--COMMON CHANNEL ERRORS--------------------------------*
               --------------------------------'               @XA19168
         LINE  (16,10),(1,38),SKIP=1                           @XA20899
         CONVT ONEBY1,4,6                                      @XA20899
         CONVT ONEBY15,4,6                                     @XA20899
         LABEL 'MICR 1 DS','ERROR/UNIT       CHANNEL  RUN CTL   MICR   *
                  DIH    INS/PRT   RECO     MFILM    RSRVD'    @XA20891
         LINE  (16,10),(1,38),SKIP=0                           @XA20899
         CONVT ONEBY2,4,6                                      @XA20899
         CONVT ONEBY16,4,6                                     @XA20899
         LABEL 'PRESCAN DS','NON-SELECT CHK'                   @M04AE95
         LINE  (56,9),,SKIP=1                                  @XA20899
         CONVT ONEBY26,4,6                                     @XA20899
         CONVT ONEBY27,4,6                                     @XA20899
         CONVT ONEBY28,4,6                                     @XA20899
         CONVT ONEBY29,4,6                                     @XA20899
         CONVT ONEBY30,4,6                                     @XA20899
         CONVT ONEBY31,4,6                                     @XA20899
         CONVT ONEBY32,4,6                                     @XA20899
         CONVT ONEBY33,4,6                                     @XA20899
         LABEL ''                                              @XA20899
         LINE  (26),(1,16),SKIP=0                              @XA20899
         CONVT ONEBY17,4,6                                     @XA20899
         LABEL 'MERGE DS','----'                               @XA20899
         LINE  ,(39),SKIP=0                                    @XA20899
         LABEL 'GET DATA CHK'                                  @XA20899
         LINE  (56,9),,SKIP=1                                  @XA20899
         CONVT ONEBY34,4,6                                     @XA20899
         CONVT ONEBY35,4,6                                     @XA20899
         CONVT ONEBY36,4,6                                     @XA20899
         CONVT ONEBY37,4,6                                     @XA20899
         CONVT ONEBY38,4,6                                     @XA20899
         CONVT ONEBY39,4,6                                     @XA20899
         CONVT ONEBY40,4,6                                     @XA20899
         CONVT ONEBY41,4,6                                     @XA20899
         LABEL ''                                              @XA20899
         LINE  (26),(1,16),SKIP=0                              @XA20899
         CONVT ONEBY18,4,6                                     @XA20899
         LABEL 'SCAN DS','----'                                @XA20899
         LINE  ,(39),SKIP=0                                    @XA20899
         LABEL 'PUT DATA CHK'                                  @XA20899
         LINE  (56,9),,SKIP=1                                  @XA20899
         CONVT ONEBY42,4,6                                     @XA20899
         CONVT ONEBY43,4,6                                     @XA20899
         CONVT ONEBY44,4,6                                     @XA20899
         CONVT ONEBY45,4,6                                     @XA20899
         CONVT ONEBY46,4,6                                     @XA20899
         CONVT ONEBY47,4,6                                     @XA20899
         CONVT ONEBY48,4,6                                     @XA20899
         CONVT ONEBY49,4,6                                     @XA20899
         LABEL ''                                              @XA20899
         LINE  (26),(1,16),SKIP=0                              @XA20899
         CONVT ONEBY3,4,6                                      @XA20899
         LABEL 'SCAN DS, PRIM','----'                          @XA20899
         LINE  ,(39),SKIP=0                                    @XA20899
         LABEL 'TAG CHK'                                       @XA20899
         LINE  (56,9),,SKIP=1                                  @XA20899
         CONVT ONEBY50,4,6                                     @XA20899
         CONVT ONEBY51,4,6                                     @XA20899
         CONVT ONEBY52,4,6                                     @XA20899
         CONVT ONEBY53,4,6                                     @XA20899
         CONVT ONEBY54,4,6                                     @XA20899
         CONVT ONEBY55,4,6                                     @XA20899
         CONVT ONEBY56,4,6                                     @XA20899
         CONVT ONEBY57,4,6                                     @XA20899
         LABEL ''                                              @XA20899
         LINE  (26),(1,16),SKIP=0                              @XA20899
         CONVT ONEBY4,4,6                                      @XA20899
         LABEL 'SCAN DS, MERGE','----'                         @XA20899
         LINE  ,(39),SKIP=0                                    @XA20899
         LABEL 'SELECT CHK'                                    @XA20899
         LINE  (56,9),,SKIP=1                                  @XA20899
         CONVT ONEBY58,4,6                                     @XA20899
         CONVT ONEBY59,4,6                                     @XA20899
         CONVT ONEBY60,4,6                                     @XA20899
         CONVT ONEBY61,4,6                                     @XA20899
         CONVT ONEBY62,4,6                                     @XA20899
         CONVT ONEBY63,4,6                                     @XA20899
         CONVT ONEBY64,4,6                                     @XA20899
         CONVT ONEBY65,4,6                                     @XA20899
         LABEL ''                                              @XA20899
         LINE  (16,10),(1,38),SKIP=0                           @XA20899
         CONVT ONEBY5,4,6                                      @XA20899
         CONVT ONEBY19,4,6                                     @XA20899
         LABEL 'PRE-INSCRIBE DS','ADDR CHK'                    @XA20899
         LINE  (56,9),,SKIP=1                                  @XA20899
         CONVT ONEBY66,4,6                                     @XA20899
         CONVT ONEBY67,4,6                                     @XA20899
         CONVT ONEBY68,4,6                                     @XA20899
         CONVT ONEBY69,4,6                                     @XA20899
         CONVT ONEBY70,4,6                                     @XA20899
         CONVT ONEBY71,4,6                                     @XA20899
         CONVT ONEBY72,4,6                                     @XA20899
         CONVT ONEBY73,4,6                                     @XA20899
         LABEL ''                                              @XA20899
         LINE  (16,10),(1),SKIP=1                              @XA20899
         CONVT ONEBY6,4,6                                      @XA20899
         CONVT ONEBY20,4,6                                     @XA20899
         LABEL 'INSCRIBE DS'                                   @XA20899
         LINE  (16,10),(1,38),SKIP=1                           @XA20899
         CONVT ONEBY7,4,6                                      @XA20899
         CONVT ONEBY21,4,6                                     @XA20899
         LABEL 'MICR 2 DS','--VIDEO ERRORS----------     --RECO ERRORS-*
               ----------     --DIH ERRORS------------'        @XA20899
         LINE  (16,10),(1),SKIP=0                              @XA20899
         CONVT ONEBY8,4,6                                      @XA20899
         CONVT ONEBY22,4,6                                     @XA20899
         LABEL '1ST BAY DS'                                    @XA20899
         LINE  (56,30),(38,30),SKIP=1                          @XA20899
         CONVT ONEBY75,4,6                                     @XA20899
         CONVT ONEBY85,4,6                                     @XA20899
         CONVT ONEBY90,4,6                                     @XA20899
         LABEL 'SCF ON DEP DOC','MCS PRTY CHK','M-BUFR PRTY CHK'
         LINE  (16,10),(1),SKIP=0                              @XA20899
         CONVT ONEBY9,4,6                                      @XA20899
         CONVT ONEBY23,4,6                                     @XA20899
         LABEL '2ND BAY DS'                                    @XA20899
         LINE  (56,30),(38,30),SKIP=1                          @XA20899
         CONVT ONEBY76,4,6                                     @XA20899
         CONVT ONEBY86,4,6                                     @XA20899
         CONVT ONEBY91,4,6                                     @XA20899
         LABEL 'SCF ON CHECK','MCS HANG CHK','M-BUFR ADDR CHK' @XA20899
         LINE  (26),(1),SKIP=0                                 @XA20899
         CONVT ONEBY24,4,6                                     @XA20899
         LABEL 'MFILM RESYNC DS ----'                          @XA20899
         LINE  (56,30),(38,30),SKIP=1                          @XA20899
         CONVT ONEBY77,4,6                                     @XA20899
         CONVT ONEBY87,4,6                                     @XA20899
         CONVT ONEBY92,4,6                                     @XA20899
         LABEL 'ROTATION ERR','INVLD OP CODE','CMP ST PRTY CHK'
         LINE  (26),(1),SKIP=0                                 @XA20899
         CONVT ONEBY25,4,6                                     @XA20899
         LABEL 'MFILM EXIT DS   ----'                          @XA20899
         LINE  (56,30),(38,30),SKIP=1                          @XA20899
         CONVT ONEBY78,4,6                                     @XA20899
         CONVT ONEBY88,4,6                                     @XA20899
         CONVT ONEBY93,4,6                                     @XA20899
         LABEL 'WINDOW OVRSCN','VIS ADDR CHK','CMP ST ADDR CHK'
         LINE  (20),(1),SKIP=0                                 @XA20899
         CONVT ONEBY10,4,6                                     @XA20899
         LABEL 'STCKR SWITCH JAM'                              @XA20899
         LINE  (56,30),(38,30),SKIP=1                          @XA20899
         CONVT ONEBY79,4,6                                     @XA20899
         CONVT ONEBY89,4,6                                     @XA20899
         CONVT ONEBY94,4,6                                     @XA20899
         LABEL 'RTS, NO TRACE','RESERVRD','PROGRAM CHK'        @XA20899
         LINE  (20),(1),SKIP=0                                 @XA20899
         CONVT ONEBY11,4,6                                     @XA20899
         LABEL 'STUB/LNG DOC STOP'                             @XA20899
         LINE  (56,60),(38,60),SKIP=1                          @XA20899
         CONVT ONEBY80,4,6                                     @XA20899
         CONVT ONEBY95,4,6                                     @XA20899
         LABEL 'BEAM NOT MVNG','TIME-OUT ERR'                  @XA20899
         LINE  (20),(1),SKIP=0                                 @XA20899
         CONVT ONEBY12,4,6                                     @XA20899
         LABEL 'MICR RIBBON STOP'                              @XA20899
         LINE  (56),(38),SKIP=0                                @XA20899
         CONVT ONEBY81,4,6                                     @XA20899
         LABEL 'READ DATA CHK'                                 @XA20899
         LINE  (116),(68,30),SKIP=1                            @XA20899
         CONVT ONEBY96,4,6                                     @XA20899
         LABEL '--MICROFILM ERRORS------','DCS SPEC ERR'       @XA20899
         LINE  (20),(1),SKIP=0                                 @XA20899
         CONVT ONEBY13,4,6                                     @XA20899
         LABEL 'MFILM JAM'                                     @XA20891
         LINE  (56,30),(38,30),SKIP=1                          @XA20899
         CONVT ONEBY82,4,6                                     @XA20899
         CONVT ONEBY103,4,6                                    @XA20899
         CONVT ONEBY97,4,6                                     @XA20899
         LABEL 'WRITE DATA CHK','FILM CHK','RESERVED'          @XA20899
         LINE  (56,30),(38,30),SKIP=1                          @XA20899
         CONVT ONEBY83,4,6                                     @XA20899
         CONVT ONEBY104,4,6                                    @XA20899
         LABEL 'LOW DOC PMT I','CAPSTAN CHK'                   @XA20899
         LINE  (56,30),(38,30),SKIP=1                          @XA20899
         CONVT ONEBY84,4,6                                     @XA20899
         CONVT ONEBY105,4,6                                    @XA20899
         LABEL 'LOW CRT PMT I','SHUTTER CHK',                  @XA20899*
               '--MICR ERRORS-----------'                      @XA20899
         LINE  (116),(98),SKIP=2                               @XA20899
         CONVT ONEBY102,4,6                                    @XA20899
         LABEL 'BUFR PRTY CHK'                                 @XA20899
         LINE  ,(1,68),SKIP=1                                  @XA20899
         LABEL '--OTHER COUNTERS---------------------------------------*
               --','--OTHER ERRORS----------'                  @XA20899
         LINE  (19,32),(1,32),SKIP=0                           @XA20899
         CONVT TWOBYT52,4,8                                    @XA20899
         CONVT TWOBYT53,4,8                                    @XA20899
         LABEL 'LOC 104','LOC 106'                             @XA20899
         LINE  (86),(68,30),SKIP=1                             @XA20899
         CONVT ONEBY106,4,6                                    @XA20899
         LABEL 'LOC 232','--INSCR/PRTR ERRORS-----'            @XA20899
         LINE  (19,32),(1,32),SKIP=0                           @XA20899
         CONVT TWOBYT54,4,8                                    @XA20899
         CONVT TWOBYT55,4,8                                    @XA20899
         LABEL 'LOC 108','LOC 110'                             @XA20899
         LINE  (86,30),(68,30),SKIP=1                          @XA20899
         CONVT ONEBY107,4,6                                    @XA20899
         CONVT ONEBY98,4,6                                     @XA20899
         LABEL 'LOC 233','INVLD CHAR'                          @XA20899
         LINE  (19,32),(1,32),SKIP=0                           @XA20899
         CONVT TWOBYT56,4,8                                    @XA20899
         CONVT TWOBYT57,4,8                                    @XA20899
         LABEL 'LOC 112','LOC 114'                             @XA20899
         LINE  (86,30),(68,30),SKIP=1                          @XA20899
         CONVT ONEBY108,4,6                                    @XA20899
         CONVT ONEBY99,4,6                                     @XA20899
         LABEL 'LOC 234','CONTROL ERR'                         @XA20899
         LINE  (19,32),(1,32),SKIP=0                           @XA20899
         CONVT TWOBYT58,4,8                                    @XA20899
         CONVT TWOBYT59,4,8                                    @XA20899
         LABEL 'LOC 116','LOC 118'                             @XA20899
         LINE  (86,30),(68,30),SKIP=1                          @XA20899
         CONVT ONEBY109,4,6                                    @XA20899
         CONVT ONEBY100,4,6                                    @XA20899
         LABEL 'LOC 235','BUFR PRTY CHK'                       @XA20899
         LINE  (19,32),(1,32),SKIP=0                           @XA20899
         CONVT TWOBYT60,4,8                                    @XA20899
         CONVT TWOBYT61,4,8                                    @XA20899
         LABEL 'LOC 120','LOC 122'                             @XA20899
         LINE  (86,30),(68,30),SKIP=1                          @XA20899
         CONVT ONEBY110,4,6                                    @XA20899
         CONVT ONEBY101,4,6                                    @XA20899
         LABEL 'LOC 236','BUFR ADDR CHK'                       @XA20899
         LINE  (19,67),(1,67),SKIP=1                           @XA20899
         CONVT TWOBYT62,4,8                                    @XA20899
         CONVT ONEBY111,4,6                                    @XA20899
         LABEL 'LOC 124','LOC 237'                             @XA20899
FIN      LINE  ,,SKIP=0                                        @XA20701
         ROUTINE YDUMA,THEND                                   @XA20701
FIN1     LABEL ''
         DC    X'FF'
         DC    X'0000'
         DC    X'0000'
         DC    X'0000'
         DC    C'$'
LABELS   EQU   *
         LSTART
         END
