SUMM     TITLE 'BLSRSUMM--IPCS SUMMARY SUBCOMMAND                      *
                        '
*/* CHANGE ACTIVITY -------------------------------------------------*/
*/*   THIS MODULE WAS WRITTEN FOR @G57LPGW                           */
*/*------------------------------------------------------------------*/
BLSRSUMM CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'BLSRSUMM  78.058'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  LA    @08,4095(,@12)                                      0002
         USING @PSTART,@12                                         0002
         USING @PSTART+4095,@08                                    0002
         L     @00,@SIZDATD                                        0002
         BLSUALLR R,LV=(0)
         LR    @11,@01                                             0002
         LA    @07,4095(,@11)                                      0002
         USING @DATD,@11                                           0002
         USING @DATD+4095,@07                                      0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
RBPRFXLN EQU 64
RBPRFLNA EQU 32
PRBLEN   EQU 136
SIRBLEN  EQU 200
TIRBLEN  EQU 136
IRBLEN   EQU 128
SVRBLEN  EQU 224
*BLREXTRN - IDENTIFY EXTERNAL REFERENCES
         EXTRN BLSRVPAS
*   RETC=0;                         /* INITIALIZE RETURN CODE        */
         SLR   @14,@14                                             0243
         ST    @14,RETC                                            0243
*   RF=0;                           /* INITIALIZE RETURN CODE        */
         SLR   RF,RF                                               0244
*   FLAG='00'X;                     /* INITIALIZE PROGRAM FLAGS      */
         MVI   FLAG,X'00'                                          0245
*   IN81L=12;                       /* INIT LENGTHS                  */
         LA    @06,12                                              0246
         STH   @06,IN81L                                           0246
*   IN82L=12;                       /* IN MESSAGE                    */
         STH   @06,IN82L                                           0247
*   IN83L=12;                       /* SEGMENTS                      */
         STH   @06,IN83L                                           0248
*   LL=83;                          /* SET LINE LENGTH               */
         MVC   LL(2),@CH03005                                      0249
*   OO=0;                           /* SET LINE OFFSET               */
         STH   @14,OO                                              0250
*   RESPECIFY                                                      0251
*    (R1) RESTRICTED;                                              0251
*   DO;                             /* GETMAIN (R)                 0252
*                                      LV(TWOPG)SP(ZZZSPEXC)         */
*     RESPECIFY                                                    0253
*      (GPR01F,                                                    0253
*       GPR00F) RESTRICTED;                                        0253
*     GPR00F=TWOPG;                 /* LENGTH REQUESTED              */
         L     GPR00F,@CF02955                                     0254
*     GPR01F=ZZZSPEXC;              /* SP IN REG 1                   */
         LA    GPR01F,1                                            0255
*     GEN(SLL   GPR01F,24)                                         0256
*     NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;                 0256
         SLL   GPR01F,24
*     GPR00F=GPR00F×GPR01F;         /* SP IN HIGH BYTE               */
         OR    GPR00F,GPR01F                                       0257
*     GPR01F=-1;                    /* INDICATE A GETMAIN REQUEST    */
         SLR   GPR01F,GPR01F                                       0258
         BCTR  GPR01F,0                                            0258
*     SVC(10);                      /* R-FORM OF GETMAIN             */
         SVC   10                                                  0259
*     RESPECIFY                                                    0260
*      (GPR01F,                                                    0260
*       GPR00F) UNRESTRICTED;                                      0260
*   END;                            /* GETMAIN (R)                 0261
*                                      LV(TWOPG)SP(ZZZSPEXC)         */
*   BLOKBASE=R1;                    /* BUFFER ADDRESS                */
         LR    BLOKBASE,R1                                         0262
*   RESPECIFY                                                      0263
*    (R1) UNRESTRICTED;                                            0263
*                                                                  0264
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL IKJPARS AND INSPECT OPERANDS                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0264
*   DO;                             /* BLSRPARS ROUTING FLAG MF(E,PX)*/
*     DO;                           /* BLSRPARD CSECT()DSECT(PD)EQUAT
*                                      E(ESAU)EXIT(EXITRLSA,)MF(EXECU
*                                      TE,PX)ROUTING FLAG            */
*       DO;                         /* BLSUPARS CSECT(PC)DSECT(PD)EXI
*                                      T(EXITRLSA,)MF(EXECUTE,PX)FLAG
*                                      ROUTING                       */
*         CALL BLSUPARI(ZZ2,PCCSECT,PDAPTR);/* PARSE OPERANDS        */
         ST    R9,@AL00001                                         0267
         L     @14,PCPTR                                           0267
         ST    @14,@AL00001+4                                      0267
         LA    @14,PDAPTR                                          0267
         ST    @14,@AL00001+8                                      0267
         L     @06,ZZ2BVTP(,R9)                                    0267
         L     @15,BVTPARIP(,@06)                                  0267
         LA    @01,@AL00001                                        0267
         BALR  @14,@15                                             0267
*         RESPECIFY                                                0268
*          (GPR15F) RESTRICTED;                                    0268
*         IF GPR15F^=ZZZFLAGI THEN                                 0269
*                                                                  0269
         LTR   GPR15F,GPR15F                                       0269
         BZ    @RF00269                                            0269
*           /*********************************************************/
*           /*                                                       */
*           /* UNABLE TO PARSE                                       */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0270
*           DO;                     /* UNABLE TO PARSE               */
*             RETC=GPR15F;          /* RETURN CODE                   */
         ST    GPR15F,RETC                                         0271
*             GO TO EXITNORL;       /* EXIT WITHOUT PDL              */
         B     EXITNORL                                            0272
*           END;                                                   0273
*         RESPECIFY                                                0274
*          (GPR15F) UNRESTRICTED;                                  0274
@RF00269 DS    0H                                                  0275
*         RESPECIFY                                                0275
*          (PDRPTR) RESTRICTED;                                    0275
*         PDRPTR=PDAPTR;            /* ->PDL                         */
         L     PDRPTR,PDAPTR                                       0276
*         GENERATE REFS(PD,PDRPTR) CODE(USING PD,PDRPTR);          0277
         USING PD,PDRPTR
*         IF PXTEST=PXTEST1 THEN                                   0278
         CLC   PXTEST(2),@CH00045                                  0278
         BNE   @RF00278                                            0278
*           ZZ2AFX=ZZZ1;            /* TEST                          */
         OI    ZZ2AFX(R9),B'10000000'                              0279
*         ELSE                                                     0280
*           IF PXTEST=PXTEST0 THEN                                 0280
         B     @RC00278                                            0280
@RF00278 CLC   PXTEST(2),@CH00069                                  0280
         BNE   @RF00280                                            0280
*             ZZ2AFX=ZZZ0;          /* NOTEST                        */
         NI    ZZ2AFX(R9),B'01111111'                              0281
*         CALL BLSUPARU(ZZ2,PDDSECT,PXRO);/* SET ROUTING OPTIONS     */
@RF00280 DS    0H                                                  0282
@RC00278 ST    R9,@AL00001                                         0282
         ST    PDRPTR,@AL00001+4                                   0282
         LA    @14,PXRO                                            0282
         ST    @14,@AL00001+8                                      0282
         L     @06,ZZ2BVTP(,R9)                                    0282
         L     @15,BVTPARUP(,@06)                                  0282
         LA    @01,@AL00001                                        0282
         BALR  @14,@15                                             0282
*         RESPECIFY                                                0283
*          (GPR15F) RESTRICTED;                                    0283
*         RETC=MAX(RETC,GPR15F);    /* RETURN CODE                   */
         L     @14,RETC                                            0284
         CR    @14,GPR15F                                          0284
         BNL   *+6
         LR    @14,GPR15F                                          0284
         ST    @14,RETC                                            0284
*         RESPECIFY                                                0285
*          (GPR15F) UNRESTRICTED;                                  0285
*         IF RETC>ZZZFLAGE THEN     /* SERIOUS ERROR                 */
         C     @14,@CF00033                                        0286
         BH    @RT00286                                            0286
*           GO TO EXITRLSA;         /* EXIT WITH PDL                 */
*       END;                        /* BLSUPARS CSECT(PC)DSECT(PD)EXI
*                                      T(EXITRLSA,)MF(EXECUTE,PX)FLAG
*                                      ROUTING                       */
*     END;                          /* BLSRPARD CSECT()DSECT(PD)EQUAT
*                                      E(ESAU)EXIT(EXITRLSA,)MF(EXECU
*                                      TE,PX)ROUTING FLAG            */
*   END;                            /* BLSRPARS ROUTING FLAG MF(E,PX)*/
*                                                                  0291
*   /*****************************************************************/
*   /*                                                               */
*   /* SET OUTPUT INDICATORS                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0291
*   MSGIND=0;                       /* ANY MESSAGE ALLOWED           */
         SLR   MSGIND,MSGIND                                       0291
*   IF PKOPT=PNOPTTCB THEN                                         0292
         LA    @14,1                                               0292
         CH    @14,PKOPT                                           0292
         BNE   @RF00292                                            0292
*     MSGIND=1;                     /* TCB SUMMARY ONLY              */
         LR    MSGIND,@14                                          0293
*   IF PKOPT=PNOPTANO THEN                                         0294
@RF00292 LA    @14,2                                               0294
         CH    @14,PKOPT                                           0294
         BNE   @RF00294                                            0294
*     MSGIND=2;                     /* ANOMALY MSG ONLY              */
         LR    MSGIND,@14                                          0295
*   IF ZZ2AFT='0'B&ZZ2AFP='0'B THEN                                0296
@RF00294 TM    ZZ2AFT(R9),B'11000000'                              0296
         BNZ   @RF00296                                            0296
*     MSGIND=3;                     /* NO OUTPUT ALLOWED             */
         LA    MSGIND,3                                            0297
*                                                                  0298
*   /*****************************************************************/
*   /*                                                               */
*   /* OBTAIN LIST OF VALID ASCB ADDRESSES                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0298
*   ESAUSYM='ASVT';                 /* SYMBOL                        */
@RF00296 MVI   ESAUSYM+4,C' '                                      0298
         MVC   ESAUSYM+5(26),ESAUSYM+4                             0298
         MVC   ESAUSYM(4),@CC02554                                 0298
*   ESAUDT=DTASVT;                  /* DATA TYPE                     */
         MVC   ESAUDT(34),DTASVT                                   0299
*   CALL BLSRESGU(ZZ2,ESAU);        /* GET DEFINITION OF ASVT        */
         ST    R9,@AL00001                                         0300
         LA    @14,ESAU                                            0300
         ST    @14,@AL00001+4                                      0300
         L     @04,ZZ2RVTP(,R9)                                    0300
         L     @15,RVTESGUP(,@04)                                  0300
         LA    @01,@AL00001                                        0300
         BALR  @14,@15                                             0300
*   IF RF>ZZZFLAGE THEN             /* CVT EQUATE RECORD MISSING     */
         C     RF,@CF00033                                         0301
         BH    @RT00301                                            0301
*     GO TO EXITRLSA;               /* EXIT WITH PDL                 */
*   ESAURL=0;                       /* ZERO REMARK LENGTH            */
         SLR   @14,@14                                             0303
         STH   @14,ESAURL                                          0303
*   ASVTADR=ESAULAD+FRONT;          /* GET ADDRESS OF USEFUL PART OF
*                                      ASVT                          */
         LA    @04,512                                             0304
         L     @03,ESAULAD                                         0304
         ALR   @03,@04                                             0304
         ST    @03,ASVTADR                                         0304
*   ESAUDOF=0;                      /* FORCE ZERO OFFSET             */
         ST    @14,ESAUDOF                                         0305
*   ASVTPTR=BLOKBASE-FRONT;         /* BACK UP BUFFER POINTER TO   0306
*                                      ALLOW FOR MISSING 512 BYTES   */
         LCR   @04,@04                                             0306
         ALR   @04,BLOKBASE                                        0306
         ST    @04,ASVTPTR                                         0306
*   ASVTSPAC=ESAUDLE;               /* LENGTH                        */
         L     @14,ESAUDLE                                         0307
         ST    @14,ASVTSPAC                                        0307
*   CALL ACCESS(0,ASVTADR,ASVTSPAC);/* GET ASVT                      */
         LA    @14,@CF00050                                        0308
         ST    @14,@AL00001                                        0308
         LA    @14,ASVTADR                                         0308
         ST    @14,@AL00001+4                                      0308
         LA    @14,ASVTSPAC                                        0308
         ST    @14,@AL00001+8                                      0308
         LA    @01,@AL00001                                        0308
         BAL   @14,ACCESS                                          0308
*   IF RF^=0 THEN                                                  0309
         LTR   RF,RF                                               0309
         BNZ   @RT00309                                            0309
*     GO TO EXITRLSA;               /* EXIT WITH PDL                 */
*   TABLSIZE=(LENGTH(ARAYASCB))*ASVTMAXU;/* SIZE OF ASVT TABLE       */
         L     @14,ASVTPTR                                         0311
         L     @14,ASVTMAXU(,@14)                                  0311
         SLA   @14,3                                               0311
         ST    @14,TABLSIZE                                        0311
*   RESPECIFY                                                      0312
*    (R1) RESTRICTED;                                              0312
*   DO;                             /* GETMAIN (R)                 0313
*                                      LV(TABLSIZE)SP(ZZZSPEXC)      */
*     RESPECIFY                                                    0314
*      (GPR01F,                                                    0314
*       GPR00F) RESTRICTED;                                        0314
*     GPR00F=TABLSIZE;              /* LENGTH REQUESTED              */
         LR    GPR00F,@14                                          0315
*     GPR01F=ZZZSPEXC;              /* SP IN REG 1                   */
         LA    GPR01F,1                                            0316
*     GEN(SLL   GPR01F,24)                                         0317
*     NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;                 0317
         SLL   GPR01F,24
*     GPR00F=GPR00F×GPR01F;         /* SP IN HIGH BYTE               */
         OR    GPR00F,GPR01F                                       0318
*     GPR01F=-1;                    /* INDICATE A GETMAIN REQUEST    */
         SLR   GPR01F,GPR01F                                       0319
         BCTR  GPR01F,0                                            0319
*     SVC(10);                      /* R-FORM OF GETMAIN             */
         SVC   10                                                  0320
*     RESPECIFY                                                    0321
*      (GPR01F,                                                    0321
*       GPR00F) UNRESTRICTED;                                      0321
*   END;                            /* GETMAIN (R)                 0322
*                                      LV(TABLSIZE)SP(ZZZSPEXC)      */
*   TABLPTR=R1;                     /* TABLE FOR SELECTED ASIDS      */
         ST    R1,TABLPTR                                          0323
*   RESPECIFY                                                      0324
*    (R1) UNRESTRICTED;                                            0324
*   FLAGFREE='1'B;                  /* INDICATE FREEMAIN NEEDED FOR
*                                      ASVT TABLE                    */
         OI    FLAGFREE,B'01000000'                                0325
*   J2=0;                           /* INIT INDEX                    */
         SLR   @14,@14                                             0326
         ST    @14,J2                                              0326
*   DO J1=1 TO ASVTMAXU;            /* SCAN WHOLE ASVT               */
         LA    J1,1                                                0327
         B     @DE00327                                            0327
@DL00327 DS    0H                                                  0328
*     IF ASVTAVAL(J1)='0'B THEN                                    0328
         LR    @14,J1                                              0328
         SLA   @14,2                                               0328
         L     @04,ASVTPTR                                         0328
         ALR   @04,@14                                             0328
         TM    ASVTAVAL-4(@04),B'10000000'                         0328
         BNZ   @RF00328                                            0328
*       DO;                         /* ASCB ASSIGNED                 */
*         FLAGSEL='1'B;             /* INDICATE OKAY                 */
*                                                                  0330
         OI    FLAGSEL,B'00001000'                                 0330
*         /***********************************************************/
*         /*                                                         */
*         /* CREATE A LIST OF VALID ASCB ADDRESSES. IF ASID LIST WAS */
*         /* ENTERED, ONLY SELECT ASCBS CORRESPONDING TO ASIDS       */
*         /* ENTERED.                                                */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0331
*         IF PKASID=PNASID THEN     /* IF ASID SELECTION             */
         CLC   PKASID(2),@CH00069                                  0331
         BNE   @RF00331                                            0331
*           DO;                                                    0332
*             PDEXPTR=ADDR(PDASI);  /* POINT TO FIRST PDE            */
         LA    PDEXPTR,PDASI                                       0333
*             FLAGSEL='0'B;         /* INIT INDICATOR                */
         NI    FLAGSEL,B'11110111'                                 0334
*             DO UNTIL(PDEXPTR=ZZ1PNULL);/* SEARCH PDE CHAIN         */
@DL00335 DS    0H                                                  0336
*               IF PDASII=J1 THEN                                  0336
         L     @14,PDASIIP(,PDEXPTR)                               0336
         CL    J1,PDASII(,@14)                                     0336
         BNE   @RF00336                                            0336
*                 DO;                                              0337
*                   FLAGSEL='1'B;   /* IF ASID MATCHES A REQUEST,  0338
*                                      INDICATE                      */
         OI    FLAGSEL,B'00001000'                                 0338
*                 END;                                             0339
*               PDEXPTR=PDASIXP;    /* MOVE TO NEXT PDE              */
@RF00336 L     PDEXPTR,PDASIXP(,PDEXPTR)                           0340
*             END;                                                 0341
@DE00335 L     @14,ZZ2ZZ1P(,R9)                                    0341
         CL    PDEXPTR,ZZ1PNULL(,@14)                              0341
         BNE   @DL00335                                            0341
*           END;                                                   0342
*         IF FLAGSEL='1'B THEN                                     0343
@RF00331 TM    FLAGSEL,B'00001000'                                 0343
         BNO   @RF00343                                            0343
*           DO;                     /* IF THERE WAS A MATCH, ADD TO
*                                      SELECTED TABLE                */
*             J2=J2+1;              /* INCREMENT TABLE INDEX         */
         LA    @14,1                                               0345
         AL    @14,J2                                              0345
         ST    @14,J2                                              0345
*             ADDRASCB(J2)=ASVTENTY(J1);/* ASCB POINTER              */
         L     @04,TABLPTR                                         0346
         SLA   @14,3                                               0346
         LR    @02,J1                                              0346
         SLA   @02,2                                               0346
         L     @01,ASVTPTR                                         0346
         L     @02,ASVTENTY-4(@02,@01)                             0346
         LA    @01,0(@14,@04)                                      0346
         AL    @01,@CF03130                                        0346
         ST    @02,ADDRASCB(,@01)                                  0346
*             ASIDENTY(J2)=J1;      /* SAVE ASID                     */
         AL    @04,@CF03131                                        0347
         ST    J1,ASIDENTY-4(@14,@04)                              0347
*           END;                                                   0348
*       END;                                                       0349
@RF00343 DS    0H                                                  0350
*   END;                                                           0350
@RF00328 AL    J1,@CF00045                                         0350
@DE00327 L     @14,ASVTPTR                                         0350
         C     J1,ASVTMAXU(,@14)                                   0350
         BNH   @DL00327                                            0350
*                                                                  0351
*   /*****************************************************************/
*   /*                                                               */
*   /* FOR EACH ASCB PRINT INFORMATION                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0351
*   FLAGEXIT='0'B;                  /* INIT EXIT INDICATOR           */
         NI    FLAGEXIT,B'01111111'                                0351
*   DO J3=1 TO J2 WHILE(ZZ1EVEP='0'B&FLAGEXIT='0'B);/* SCAN ALL    0352
*                                      SELECTED ASIDS WHILE NO ATTN  */
*                                                                  0352
         LA    J3,1                                                0352
         B     @DE00352                                            0352
@DL00352 L     @14,ZZ2ZZ1P(,R9)                                    0352
         TM    ZZ1EVEP(@14),B'01000000'                            0352
         BNZ   @DC00352                                            0352
         TM    FLAGEXIT,B'10000000'                                0352
         BNZ   @DC00352                                            0352
*     /***************************************************************/
*     /*                                                             */
*     /* IF A JOBNAME LIST WAS ENTERED, SEARCH PDES TO SEE IF ANY    */
*     /* JOBNAMES ARE STILL TO BE FOUND, I.E., THE PDE PRESENT       */
*     /* INDICATOR IS STILL ON. IF AN ASID LIST WAS ENTERED, THE ASCB*/
*     /* ADDRESS LIST WAS FILTERED BY THE IKJPARS VALIDITY CHECK     */
*     /* EXIT. IF NO PDES ARE LEFT, EXIT                             */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0353
*     IF PKASID=PNJOB THEN                                         0353
         CLC   PKASID(2),@CH00045                                  0353
         BNE   @RF00353                                            0353
*       DO;                         /* JOB LIST ENTERED              */
*         PDEXPTR=ADDR(PDJOB);      /* POINT TO FIRST PDE            */
         LA    PDEXPTR,PDJOB                                       0355
*         FLAGEXIT='1'B;            /* INIT TO EXIT                  */
         OI    FLAGEXIT,B'10000000'                                0356
*         DO UNTIL(PDEXPTR=ZZ1PNULL);/* SEARCH ALL PDES              */
@DL00357 DS    0H                                                  0358
*           IF PDJOBIFP='1'B THEN   /* IF ANY JOBS LEFT, CONTINUE    */
         TM    PDJOBIFP(PDEXPTR),B'10000000'                       0358
         BNO   @RF00358                                            0358
*             FLAGEXIT='0'B;                                       0359
         NI    FLAGEXIT,B'01111111'                                0359
*           PDEXPTR=PDJOBXP;        /* POINT TO NEXT PDE             */
@RF00358 L     PDEXPTR,PDJOBXP(,PDEXPTR)                           0360
*         END;                                                     0361
@DE00357 L     @14,ZZ2ZZ1P(,R9)                                    0361
         CL    PDEXPTR,ZZ1PNULL(,@14)                              0361
         BNE   @DL00357                                            0361
*         IF FLAGEXIT='1'B THEN                                    0362
         TM    FLAGEXIT,B'10000000'                                0362
         BO    @RT00362                                            0362
*           GO TO ENDLOOP;          /* EXIT IF NO PDES               */
*       END;                                                       0364
*     FLAGOK='1'B;                  /* INDICATE SUCCESS              */
@RF00353 OI    FLAGOK,B'00010000'                                  0365
*     NAMEBUF='';                   /* INIT BUFFERS                  */
         MVI   NAMEBUF,C' '                                        0366
         MVC   NAMEBUF+1(7),NAMEBUF                                0366
*     JOBUFFER='';                                                 0367
         MVI   JOBUFFER,C' '                                       0367
         MVC   JOBUFFER+1(7),JOBUFFER                              0367
*     ESAUSYM='ASCB';               /* SYMBOL NAME                   */
         MVI   ESAUSYM+4,C' '                                      0368
         MVC   ESAUSYM+5(26),ESAUSYM+4                             0368
         MVC   ESAUSYM(4),@CC03016                                 0368
*     DO;                           /* BLRCNVUC(ASIDENTY(J3))      0369
*                                      FROM(UNSIGNED BINARY)TO(CHARAC
*                                      TER)SET(ESAUSYM(5:7))REMARK(CO
*                                      NVERT ASID)                   */
*                                                                  0369
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT ASID                                              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0370
*       CVD(ASIDENTY(J3),PACKED);   /* BINARY=>PACKED DECIMAL        */
         L     @14,TABLPTR                                         0370
         LR    @04,J3                                              0370
         SLA   @04,3                                               0370
         LA    @02,0(@04,@14)                                      0370
         AL    @02,@CF03131                                        0370
         L     @02,ASIDENTY-4(,@02)                                0370
         CVD   @02,PACKED                                          0370
*       UNPK(ESAUSYM(5:7),PACKED);  /* PACKED DECIMAL=>ZONED DECIMAL */
         UNPK  ESAUSYM+4(3),PACKED(8)                              0371
*       ESAUSYM(7:7)=ESAUSYM(7:7)×'0';/* ZONED DECIMAL=>EBCDIC       */
         OI    ESAUSYM+6,C'0'                                      0372
*     END;                          /* BLRCNVUC(ASIDENTY(J3))      0373
*                                      FROM(UNSIGNED BINARY)TO(CHARAC
*                                      TER)SET(ESAUSYM(5:7))REMARK(CO
*                                      NVERT ASID)                   */
*     ESAUDTD='ASCB';                                              0374
         MVI   ESAUDTD+4,C' '                                      0374
         MVC   ESAUDTD+5(26),ESAUDTD+4                             0374
         MVC   ESAUDTD(4),@CC03016                                 0374
*     CALL ACCESS(0,ADDRASCB(J3),LENGTH(ASCB));/* GET ASCB           */
         MVC   @AL00001(12),@AL00375                               0375
         AL    @14,@CF03130                                        0375
         LA    @14,ADDRASCB(@04,@14)                               0375
         ST    @14,@AL00001+4                                      0375
         LA    @01,@AL00001                                        0375
         BAL   @14,ACCESS                                          0375
*     IF RF^=0×ASCBASCB^='ASCB' THEN                               0376
         SLR   @14,@14                                             0376
         CR    RF,@14                                              0376
         BNE   @RT00376                                            0376
         CLC   ASCBASCB(4,BLOKBASE),@CC03016                       0376
         BNE   @RT00376                                            0376
*       GO TO ENDLOOP;              /* IF INVALID OR MISSING, TRY  0377
*                                      NEXT ASCB                     */
*     THISASID=ASCBASID;            /* SAVE ASID                     */
*                                                                  0378
         LH    @04,ASCBASID(,BLOKBASE)                             0378
         N     @04,@CF03133                                        0378
         ST    @04,THISASID                                        0378
*     /***************************************************************/
*     /*                                                             */
*     /* GET JOB NAME                                                */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0379
*     IF ASCBJBNI^=0 THEN           /* IF JOB NAME AVAILABLE         */
         L     @04,ASCBJBNI(,BLOKBASE)                             0379
         CR    @04,@14                                             0379
         BE    @RF00379                                            0379
*       NAMEPTR=ASCBJBNI;           /* SAVE IT                       */
         ST    @04,NAMEPTR                                         0380
*     ELSE                                                         0381
*       NAMEPTR=ASCBJBNS;           /* TAKE BKGD NAME PREFERABLY     */
         B     @RC00379                                            0381
@RF00379 L     @14,ASCBJBNS(,BLOKBASE)                             0381
         ST    @14,NAMEPTR                                         0381
*     ESAUSYM='JOB NAME';                                          0382
@RC00379 MVI   ESAUSYM+8,C' '                                      0382
         MVC   ESAUSYM+9(22),ESAUSYM+8                             0382
         MVC   ESAUSYM(8),@CC03021                                 0382
*     IF NAMEPTR^=0 THEN                                           0383
         L     @14,NAMEPTR                                         0383
         LTR   @14,@14                                             0383
         BZ    @RF00383                                            0383
*       DO;                         /* IF NAME AVAILABLE             */
*         ESAUDTD='';               /* NO STRUCTURING DICT           */
         MVI   ESAUDTD,C' '                                        0385
         MVC   ESAUDTD+1(30),ESAUDTD                               0385
*         CALL ACCESS(0,NAMEPTR,8); /* GET NAME                      */
         MVC   @AL00001(12),@AL00386                               0386
         LA    @14,NAMEPTR                                         0386
         ST    @14,@AL00001+4                                      0386
         LA    @01,@AL00001                                        0386
         BAL   @14,ACCESS                                          0386
*       END;                                                       0387
*     ELSE                                                         0388
*       BLOCK(1:8)='*UNKNOWN';      /* NO NAME AVAILABLE             */
         B     @RC00383                                            0388
@RF00383 MVC   BLOCK(8,BLOKBASE),@CC03022                          0388
*     OLDP(1)=ADDR(M017);           /* SET UP MESSAGE                */
@RC00383 LA    @14,M017                                            0389
         ST    @14,OLDP                                            0389
*     OLDP(2)=ADDR(IN81);                                          0390
         LA    @14,IN81                                            0390
         ST    @14,OLDP+4                                          0390
*     IN81O=ADDR(M017T2)-ADDR(M017T);                              0391
         MVC   IN81O(2),@CH03116                                   0391
*     NAMEBUF=BLOCK(1:8);           /* TAKE NAME                     */
         MVC   NAMEBUF(8),BLOCK(BLOKBASE)                          0392
*     IN81T1=NAMEBUF;               /* INSERT NAME IN BFR            */
         MVC   IN81T1(8),NAMEBUF                                   0393
*     DO J4=1 TO 8;                                                0394
         LA    J4,1                                                0394
@DL00394 DS    0H                                                  0395
*       IF BLOCK(J4)^=' ' THEN                                     0395
         LR    @14,BLOKBASE                                        0395
         ALR   @14,J4                                              0395
         BCTR  @14,0                                               0395
         CLI   BLOCK(@14),C' '                                     0395
         BE    @RF00395                                            0395
*         IN81L=4+J4;                                              0396
         LA    @14,4(,J4)                                          0396
         STH   @14,IN81L                                           0396
*     END;                                                         0397
*                                                                  0397
@RF00395 AL    J4,@CF00045                                         0397
         C     J4,@CF00033                                         0397
         BNH   @DL00394                                            0397
*     /***************************************************************/
*     /*                                                             */
*     /* IF JOBNAME LIST ENTERED, CHECK FOR MATCHING ENTRY IN PDES.  */
*     /* DONT PROCESS THIS ASID IF JOBNAME DOES NOT MATCH. ZERO THE  */
*     /* PDE INDICATOR WHEN MATCH IS FOUND                           */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0398
*     IF PKASID=PNJOB THEN                                         0398
         CLC   PKASID(2),@CH00045                                  0398
         BNE   @RF00398                                            0398
*       DO;                         /* IF JOB NAME LIST ENTERED      */
*         FLAGOK='0'B;              /* INIT INDICATOR                */
         NI    FLAGOK,B'11101111'                                  0400
*         PDEXPTR=ADDR(PDJOB);      /* POINT TO FIRST PDE            */
         LA    PDEXPTR,PDJOB                                       0401
*         DO UNTIL(PDEXPTR=ZZ1PNULL);/* SEARCH ALL PDES              */
@DL00402 DS    0H                                                  0403
*           JOBUFFER='';            /* BLANK BUFFER                  */
         MVI   JOBUFFER,C' '                                       0403
         MVC   JOBUFFER+1(7),JOBUFFER                              0403
*           JOBUFFER(1:PDJOBIL)=PDJOBI(1:PDJOBIL);/* MOVE JOB NAME   */
         LH    @14,PDJOBIL(,PDEXPTR)                               0404
         BCTR  @14,0                                               0404
         L     @04,PDJOBIP(,PDEXPTR)                               0404
         EX    @14,@SM03135                                        0404
*           IF JOBUFFER=NAMEBUF THEN/* MATCHING NAMES                */
         CLC   JOBUFFER(8),NAMEBUF                                 0405
         BNE   @RF00405                                            0405
*             DO;                                                  0406
*               FLAGOK='1'B;        /* INDICATE A MATCH              */
         OI    FLAGOK,B'00010000'                                  0407
*               PDJOBIFP='0'B;      /* ZERO THE PDE INDICATOR        */
         NI    PDJOBIFP(PDEXPTR),B'01111111'                       0408
*             END;                                                 0409
*           PDEXPTR=PDJOBXP;        /* POINT TO NEXT PDE             */
@RF00405 L     PDEXPTR,PDJOBXP(,PDEXPTR)                           0410
*         END;                                                     0411
@DE00402 L     @14,ZZ2ZZ1P(,R9)                                    0411
         CL    PDEXPTR,ZZ1PNULL(,@14)                              0411
         BNE   @DL00402                                            0411
*         IF FLAGOK='0'B THEN                                      0412
         TM    FLAGOK,B'00010000'                                  0412
         BZ    @RT00412                                            0412
*           GO TO ENDLOOP;          /* NO MATCH                      */
*       END;                                                       0414
*     IN82T1='';                    /* BLANK INSERT                  */
@RF00398 MVI   IN82T1,C' '                                         0415
         MVC   IN82T1+1(7),IN82T1                                  0415
*     DO;                           /* BLRCNVPC(ADDRASCB(J3)) FROM(PO
*                                      INTER)TO(CHARACTER)SET(IN83T1)
*                                      REMARK(CONVERT ASCB         0416
*                                      ADDRESS)TR(ZZ1TRHEX)          */
*                                                                  0416
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT ASCB ADDRESS                                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0417
*       PTRPTR=ADDRASCB(J3);        /* SOURCE TO BIT/POINTER       0417
*                                      INTERMEDIATE                  */
         LR    @14,J3                                              0417
         SLA   @14,3                                               0417
         L     @04,TABLPTR                                         0417
         AL    @04,@CF03130                                        0417
         L     @14,ADDRASCB(@14,@04)                               0417
         ST    @14,PTRPTR                                          0417
*       UNPK(IN83T1(1:LENGTH(IN83T1)-1),PTRBIT);/* BIT=>ZONED      0418
*                                      HEXADECIMAL                   */
         UNPK  IN83T1(7),PTRBIT(4)                                 0418
*       IN83T1(LENGTH(IN83T1):LENGTH(IN83T1))=PTRBIT(25:32);/* FINAL
*                                      ZONED HEXADECIMAL DIGIT       */
         MVC   IN83T1+7(1),PTRBIT+3                                0419
*       TR(IN83T1,ZZ1TRHEX);        /* ZONED HEXADECIMAL=>EBCDIC     */
         L     @14,ZZ2ZZ1P(,R9)                                    0420
         TR    IN83T1(8),ZZ1TRHEX(@14)                             0420
*     END;                          /* BLRCNVPC(ADDRASCB(J3)) FROM(PO
*                                      INTER)TO(CHARACTER)SET(IN83T1)
*                                      REMARK(CONVERT ASCB         0421
*                                      ADDRESS)TR(ZZ1TRHEX)          */
*     DO;                           /* BLRCNVUC(THISASID)          0422
*                                      FROM(UNSIGNED BINARY)TO(CHARAC
*                                      TER)SET(IN82T1(1:3))REMARK(CON
*                                      VERT ASID)                    */
*                                                                  0422
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT ASID                                              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0423
*       CVD(THISASID,PACKED);       /* BINARY=>PACKED DECIMAL        */
         L     @14,THISASID                                        0423
         CVD   @14,PACKED                                          0423
*       UNPK(IN82T1(1:3),PACKED);   /* PACKED DECIMAL=>ZONED DECIMAL */
         UNPK  IN82T1(3),PACKED(8)                                 0424
*       IN82T1(3:3)=IN82T1(3:3)×'0';/* ZONED DECIMAL=>EBCDIC         */
         OI    IN82T1+2,C'0'                                       0425
*     END;                          /* BLRCNVUC(THISASID)          0426
*                                      FROM(UNSIGNED BINARY)TO(CHARAC
*                                      TER)SET(IN82T1(1:3))REMARK(CON
*                                      VERT ASID)                    */
*     IN82O=ADDR(M017T3)-ADDR(M017T);/* SET OFFSET                   */
         MVC   IN82O(2),@CH02032                                   0427
*     IN83O=ADDR(M017T4)-ADDR(M017T);/* SET OFFSET                   */
         MVC   IN83O(2),@CH00215                                   0428
*     IN82L=7;                      /* SET LENGTH FOR ASID INSERT    */
         MVC   IN82L(2),@CH00035                                   0429
*     OLDP(3)=ADDR(IN82);           /* INSERT FOR ASID               */
         LA    @14,IN82                                            0430
         ST    @14,OLDP+8                                          0430
*     OLDP(4)=ADDR(IN83);           /* INSERT FOR ASCB ADDR          */
         LA    @14,IN83                                            0431
         ST    @14,OLDP+12                                         0431
*     OLDN=4;                       /* 4 SEGMENTS                    */
         MVC   OLDN(4),@CF00042                                    0432
*     IF MSGIND<2 THEN                                             0433
         C     MSGIND,@CF00069                                     0433
         BNL   @RF00433                                            0433
*       DO;                         /* IF OUTPUT ALLOWED             */
*         IF ZZ2AFP='1'B THEN       /* IF PRINT IN EFFECT            */
         TM    ZZ2AFP(R9),B'10000000'                              0435
         BNO   @RF00435                                            0435
*           CALL BLSUPRTA(ZZ2,MBLK);/* BLANK LINE TO PRINT FILE      */
         ST    R9,@AL00001                                         0436
         LA    @14,MBLK                                            0436
         ST    @14,@AL00001+4                                      0436
         L     @04,ZZ2BVTP(,R9)                                    0436
         L     @15,BVTPRTAP(,@04)                                  0436
         LA    @01,@AL00001                                        0436
         BALR  @14,@15                                             0436
*         CALL BLSUPUTO(ZZ2,OLD);   /* PUT OUT MESSAGE               */
@RF00435 ST    R9,@AL00001                                         0437
         LA    @14,OLD                                             0437
         ST    @14,@AL00001+4                                      0437
         L     @04,ZZ2BVTP(,R9)                                    0437
         L     @15,BVTPUTOP(,@04)                                  0437
         LA    @01,@AL00001                                        0437
         BALR  @14,@15                                             0437
*       END;                                                       0438
*     IN81L=12;                     /* RESET LENGTH                  */
@RF00433 LA    @14,12                                              0439
         STH   @14,IN81L                                           0439
*     IN82L=12;                     /* RESET LENGTH                  */
         STH   @14,IN82L                                           0440
*     ESAUSYM=' ASCB    ';          /* DONT ALLOW RE-EQUATE          */
         MVI   ESAUSYM+9,C' '                                      0441
         MVC   ESAUSYM+10(21),ESAUSYM+9                            0441
         MVC   ESAUSYM(9),@CC03027                                 0441
*     ESAUDTD='';                   /* NO STRUC DICT                 */
         MVI   ESAUDTD,C' '                                        0442
         MVC   ESAUDTD+1(30),ESAUDTD                               0442
*     CALL ACCESS(0,ADDRASCB(J3),LENGTH(ASCB));/* GET ASCB           */
         MVC   @AL00001(12),@AL00443                               0443
         LR    @14,J3                                              0443
         SLA   @14,3                                               0443
         L     @04,TABLPTR                                         0443
         AL    @04,@CF03130                                        0443
         LA    @14,ADDRASCB(@14,@04)                               0443
         ST    @14,@AL00001+4                                      0443
         LA    @01,@AL00001                                        0443
         BAL   @14,ACCESS                                          0443
*     IF RF^=0 THEN                                                0444
         SLR   @14,@14                                             0444
         CR    RF,@14                                              0444
         BNE   @RT00444                                            0444
*       GO TO ENDLOOP;              /* UNSUCCESSFUL                  */
*     BODY='';                      /* BLANK BODY OF MESSAGE         */
         MVI   BODY,C' '                                           0446
         MVC   BODY+1(78),BODY                                     0446
*     BODYHLDR='';                  /* BLANK MESSAGE BUFFER          */
         MVI   BODYHLDR,C' '                                       0447
         MVC   BODYHLDR+1(57),BODYHLDR                             0447
*     DO;                           /* BLRCNVPC(ASCBLOCK) FROM(POINTE
*                                      R)TO(CHARACTER)SET(ITEM1)REMAR
*                                      K(CONVERT                   0448
*                                      ASCBLOCK)TR(ZZ1TRHEX)         */
*                                                                  0448
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT ASCBLOCK                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0449
*       PTRPTR=ASCBLOCK;            /* SOURCE TO BIT/POINTER       0449
*                                      INTERMEDIATE                  */
         L     @04,ASCBLOCK(,BLOKBASE)                             0449
         ST    @04,PTRPTR                                          0449
*       UNPK(ITEM1(1:LENGTH(ITEM1)-1),PTRBIT);/* BIT=>ZONED        0450
*                                      HEXADECIMAL                   */
         UNPK  ITEM1(7),PTRBIT(4)                                  0450
*       ITEM1(LENGTH(ITEM1):LENGTH(ITEM1))=PTRBIT(25:32);/* FINAL  0451
*                                      ZONED HEXADECIMAL DIGIT       */
         MVC   ITEM1+7(1),PTRBIT+3                                 0451
*       TR(ITEM1,ZZ1TRHEX);         /* ZONED HEXADECIMAL=>EBCDIC     */
         L     @04,ZZ2ZZ1P(,R9)                                    0452
         TR    ITEM1(8),ZZ1TRHEX(@04)                              0452
*     END;                          /* BLRCNVPC(ASCBLOCK) FROM(POINTE
*                                      R)TO(CHARACTER)SET(ITEM1)REMAR
*                                      K(CONVERT                   0453
*                                      ASCBLOCK)TR(ZZ1TRHEX)         */
*     DO;                           /* BLRCNVPC(ASCBASID) FROM(POINTE
*                                      R)TO(CHARACTER)SET(ITEM2(1:4))
*                                      REMARK(CONVERT              0454
*                                      ASCBASID)TR(ZZ1TRHEX)         */
*                                                                  0454
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT ASCBASID                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0455
*       PTRPTR=ASCBASID;            /* SOURCE TO BIT/POINTER       0455
*                                      INTERMEDIATE                  */
         LH    @02,ASCBASID(,BLOKBASE)                             0455
         N     @02,@CF03133                                        0455
         ST    @02,PTRPTR                                          0455
*       UNPK(ITEM2(1:3),PTRBIT);    /* BIT=>ZONED HEXADECIMAL        */
         UNPK  ITEM2(3),PTRBIT(4)                                  0456
*       ITEM2(4:4)=PTRBIT(25:32);   /* FINAL ZONED HEXADECIMAL DIGIT */
         MVC   ITEM2+3(1),PTRBIT+3                                 0457
*       TR(ITEM2(1:4),ZZ1TRHEX);    /* ZONED HEXADECIMAL=>EBCDIC     */
         TR    ITEM2(4),ZZ1TRHEX(@04)                              0458
*     END;                          /* BLRCNVPC(ASCBASID) FROM(POINTE
*                                      R)TO(CHARACTER)SET(ITEM2(1:4))
*                                      REMARK(CONVERT              0459
*                                      ASCBASID)TR(ZZ1TRHEX)         */
*     DO;                           /* BLRCNVPC(ASCBCSCB) FROM(POINTE
*                                      R)TO(CHARACTER)SET(ITEM3)REMAR
*                                      K(CONVERT                   0460
*                                      ASCBCSCB)TR(ZZ1TRHEX)         */
*                                                                  0460
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT ASCBCSCB                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0461
*       PTRPTR=ASCBCSCB;            /* SOURCE TO BIT/POINTER       0461
*                                      INTERMEDIATE                  */
         L     @02,ASCBCSCB(,BLOKBASE)                             0461
         ST    @02,PTRPTR                                          0461
*       UNPK(ITEM3(1:LENGTH(ITEM3)-1),PTRBIT);/* BIT=>ZONED        0462
*                                      HEXADECIMAL                   */
         UNPK  ITEM3(7),PTRBIT(4)                                  0462
*       ITEM3(LENGTH(ITEM3):LENGTH(ITEM3))=PTRBIT(25:32);/* FINAL  0463
*                                      ZONED HEXADECIMAL DIGIT       */
         MVC   ITEM3+7(1),PTRBIT+3                                 0463
*       TR(ITEM3,ZZ1TRHEX);         /* ZONED HEXADECIMAL=>EBCDIC     */
         TR    ITEM3(8),ZZ1TRHEX(@04)                              0464
*     END;                          /* BLRCNVPC(ASCBCSCB) FROM(POINTE
*                                      R)TO(CHARACTER)SET(ITEM3)REMAR
*                                      K(CONVERT                   0465
*                                      ASCBCSCB)TR(ZZ1TRHEX)         */
*     DO;                           /* BLRCNVPC(ASCBTSB) FROM(POINTER
*                                      )TO(CHARACTER)SET(ITEM4)REMARK
*                                      (CONVERT ASCBTSB)TR(ZZ1TRHEX) */
*                                                                  0466
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT ASCBTSB                                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0467
*       PTRPTR=ASCBTSB;             /* SOURCE TO BIT/POINTER       0467
*                                      INTERMEDIATE                  */
         L     @02,ASCBTSB(,BLOKBASE)                              0467
         ST    @02,PTRPTR                                          0467
*       UNPK(ITEM4(1:LENGTH(ITEM4)-1),PTRBIT);/* BIT=>ZONED        0468
*                                      HEXADECIMAL                   */
         UNPK  ITEM4(7),PTRBIT(4)                                  0468
*       ITEM4(LENGTH(ITEM4):LENGTH(ITEM4))=PTRBIT(25:32);/* FINAL  0469
*                                      ZONED HEXADECIMAL DIGIT       */
         MVC   ITEM4+7(1),PTRBIT+3                                 0469
*       TR(ITEM4,ZZ1TRHEX);         /* ZONED HEXADECIMAL=>EBCDIC     */
         TR    ITEM4(8),ZZ1TRHEX(@04)                              0470
*     END;                          /* BLRCNVPC(ASCBTSB) FROM(POINTER
*                                      )TO(CHARACTER)SET(ITEM4)REMARK
*                                      (CONVERT ASCBTSB)TR(ZZ1TRHEX) */
*     NAME1='LOCK';                 /* FILL                          */
         MVC   NAME1(4),@CC03029                                   0472
*     NAME2='ASID';                 /* IN                            */
         MVC   NAME2(4),@CC03030                                   0473
*     NAME3='CSCB';                 /* LABEL                         */
         MVC   NAME3(4),@CC03031                                   0474
*     NAME4='TSB ';                 /* FIELDS                        */
         MVC   NAME4(4),@CC03032                                   0475
*     BODY(5:62)=BODYHLDR;          /* MOVE TO MESSAGE BFR           */
         MVC   BODY+4(58),BODYHLDR                                 0476
*     IF MSGIND=0 THEN              /* OUTPUT ALLOWED                */
         CR    MSGIND,@14                                          0477
         BNE   @RF00477                                            0477
*       CALL BLSUPUTV(ZZ2,OUTLINE); /* OUTPUT LINE                   */
         ST    R9,@AL00001                                         0478
         LA    @14,OUTLINE                                         0478
         ST    @14,@AL00001+4                                      0478
         L     @04,ZZ2BVTP(,R9)                                    0478
         L     @15,BVTPUTVP(,@04)                                  0478
         LA    @01,@AL00001                                        0478
         BALR  @14,@15                                             0478
*     DO;                           /* BLRCNVUC(THISASID)          0479
*                                      FROM(UNSIGNED BINARY)TO(CHARAC
*                                      TER)SET(OUTASCBN)REMARK(CONVER
*                                      T ASCBASID)                   */
*                                                                  0479
@RF00477 DS    0H                                                  0480
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT ASCBASID                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0480
*       CVD(THISASID,PACKED);       /* BINARY=>PACKED DECIMAL        */
         L     @14,THISASID                                        0480
         CVD   @14,PACKED                                          0480
*       UNPK(OUTASCBN,PACKED);      /* PACKED DECIMAL=>ZONED DECIMAL */
         UNPK  OUTASCBN(3),PACKED(8)                               0481
*       OUTASCBN(LENGTH(OUTASCBN):LENGTH(OUTASCBN))=OUTASCBN(LENGTH(
*           OUTASCBN):LENGTH(OUTASCBN))×'0';/* ZONED DECIMAL=>EBCDIC */
         OI    OUTASCBN+2,C'0'                                     0482
*     END;                          /* BLRCNVUC(THISASID)          0483
*                                      FROM(UNSIGNED BINARY)TO(CHARAC
*                                      TER)SET(OUTASCBN)REMARK(CONVER
*                                      T ASCBASID)                   */
*     OUTASCBC='ASCB';              /* SET OUTPUT LINE               */
         MVC   OUTASCBC(4),@CC03016                                0484
*     OUTASCBL='';                  /* LABELS                        */
         MVI   OUTASCBL,C' '                                       0485
*     OUTTCBC='TCB';                                               0486
         MVC   OUTTCBC(3),@CC03034                                 0486
*     OUTTCBAN=OUTASCBN;            /* PUT ASID INTO TCB NAMES       */
         MVC   OUTTCBAN(3),OUTASCBN                                0487
*     BODYHLDR='';                  /* BLANK BUFFER                  */
         MVI   BODYHLDR,C' '                                       0488
         MVC   BODYHLDR+1(57),BODYHLDR                             0488
*     BODY='';                      /* BLANK BUFFER                  */
         MVI   BODY,C' '                                           0489
         MVC   BODY+1(78),BODY                                     0489
*     DO;                           /* BLRCNVPC(ASCBASXB) FROM(POINTE
*                                      R)TO(CHARACTER)SET(ITEM1)REMAR
*                                      K(CONVERT                   0490
*                                      ASCBASXB)TR(ZZ1TRHEX)         */
*                                                                  0490
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT ASCBASXB                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0491
*       PTRPTR=ASCBASXB;            /* SOURCE TO BIT/POINTER       0491
*                                      INTERMEDIATE                  */
         L     @14,ASCBASXB(,BLOKBASE)                             0491
         ST    @14,PTRPTR                                          0491
*       UNPK(ITEM1(1:LENGTH(ITEM1)-1),PTRBIT);/* BIT=>ZONED        0492
*                                      HEXADECIMAL                   */
         UNPK  ITEM1(7),PTRBIT(4)                                  0492
*       ITEM1(LENGTH(ITEM1):LENGTH(ITEM1))=PTRBIT(25:32);/* FINAL  0493
*                                      ZONED HEXADECIMAL DIGIT       */
         MVC   ITEM1+7(1),PTRBIT+3                                 0493
*       TR(ITEM1,ZZ1TRHEX);         /* ZONED HEXADECIMAL=>EBCDIC     */
         L     @14,ZZ2ZZ1P(,R9)                                    0494
         TR    ITEM1(8),ZZ1TRHEX(@14)                              0494
*     END;                          /* BLRCNVPC(ASCBASXB) FROM(POINTE
*                                      R)TO(CHARACTER)SET(ITEM1)REMAR
*                                      K(CONVERT                   0495
*                                      ASCBASXB)TR(ZZ1TRHEX)         */
*     DO;                           /* BLRCNVBC(ASCBDSP1) FROM(BIT)TO
*                                      (CHARACTER)SET(ITEM2(1:2))REMA
*                                      RK(CONVERT                  0496
*                                      ASCBDSP1)TR(ZZ1TRHEX)         */
*                                                                  0496
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT ASCBDSP1                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0497
*       UNPK(ITEM2(1:1),ASCBDSP1);  /* BIT=>ZONED HEXADECIMAL        */
         UNPK  ITEM2(1),ASCBDSP1(1,BLOKBASE)                       0497
*       ITEM2(2:2)=ASCBDSP1(LENGTH(ASCBDSP1)-7:LENGTH(ASCBDSP1));/*
*                                      FINAL ZONED HEXADECIMAL DIGIT */
         MVC   ITEM2+1(1),ASCBDSP1(BLOKBASE)                       0498
*       TR(ITEM2(1:2),ZZ1TRHEX);    /* ZONED HEXADECIMAL=>EBCDIC     */
         TR    ITEM2(2),ZZ1TRHEX(@14)                              0499
*     END;                          /* BLRCNVBC(ASCBDSP1) FROM(BIT)TO
*                                      (CHARACTER)SET(ITEM2(1:2))REMA
*                                      RK(CONVERT                  0500
*                                      ASCBDSP1)TR(ZZ1TRHEX)         */
*     DO;                           /* BLRCNVBC(ASCBFLG2) FROM(BIT)TO
*                                      (CHARACTER)SET(ITEM3(1:2))REMA
*                                      RK(CONVERT                  0501
*                                      ASCBFLG2)TR(ZZ1TRHEX)         */
*                                                                  0501
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT ASCBFLG2                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0502
*       UNPK(ITEM3(1:1),ASCBFLG2);  /* BIT=>ZONED HEXADECIMAL        */
         UNPK  ITEM3(1),ASCBFLG2(1,BLOKBASE)                       0502
*       ITEM3(2:2)=ASCBFLG2(LENGTH(ASCBFLG2)-7:LENGTH(ASCBFLG2));/*
*                                      FINAL ZONED HEXADECIMAL DIGIT */
         MVC   ITEM3+1(1),ASCBFLG2(BLOKBASE)                       0503
*       TR(ITEM3(1:2),ZZ1TRHEX);    /* ZONED HEXADECIMAL=>EBCDIC     */
         TR    ITEM3(2),ZZ1TRHEX(@14)                              0504
*     END;                          /* BLRCNVBC(ASCBFLG2) FROM(BIT)TO
*                                      (CHARACTER)SET(ITEM3(1:2))REMA
*                                      RK(CONVERT                  0505
*                                      ASCBFLG2)TR(ZZ1TRHEX)         */
*     DO;                           /* BLRCNVPC(ASCBSRBS) FROM(POINTE
*                                      R)TO(CHARACTER)SET(ITEM4(1:4))
*                                      REMARK(CONVERT              0506
*                                      ASCBSRBS)TR(ZZ1TRHEX)         */
*                                                                  0506
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT ASCBSRBS                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0507
*       PTRPTR=ASCBSRBS;            /* SOURCE TO BIT/POINTER       0507
*                                      INTERMEDIATE                  */
         LH    @04,ASCBSRBS(,BLOKBASE)                             0507
         ST    @04,PTRPTR                                          0507
*       UNPK(ITEM4(1:3),PTRBIT);    /* BIT=>ZONED HEXADECIMAL        */
         UNPK  ITEM4(3),PTRBIT(4)                                  0508
*       ITEM4(4:4)=PTRBIT(25:32);   /* FINAL ZONED HEXADECIMAL DIGIT */
         MVC   ITEM4+3(1),PTRBIT+3                                 0509
*       TR(ITEM4(1:4),ZZ1TRHEX);    /* ZONED HEXADECIMAL=>EBCDIC     */
         TR    ITEM4(4),ZZ1TRHEX(@14)                              0510
*     END;                          /* BLRCNVPC(ASCBSRBS) FROM(POINTE
*                                      R)TO(CHARACTER)SET(ITEM4(1:4))
*                                      REMARK(CONVERT              0511
*                                      ASCBSRBS)TR(ZZ1TRHEX)         */
*     NAME1='ASXB';                 /* SET                           */
         MVC   NAME1(4),@CC03035                                   0512
*     NAME2='DSP1';                 /* OUTPUT                        */
         MVC   NAME2(4),@CC03036                                   0513
*     NAME3='FLG2';                 /* LINE                          */
         MVC   NAME3(4),@CC03037                                   0514
*     NAME4='SRBS';                 /* LABELS                        */
         MVC   NAME4(4),@CC03038                                   0515
*     BODY(5:62)=BODYHLDR;                                         0516
         MVC   BODY+4(58),BODYHLDR                                 0516
*     IF MSGIND=0 THEN              /* OUTPUT ALLOWED                */
         LTR   MSGIND,MSGIND                                       0517
         BNZ   @RF00517                                            0517
*       CALL BLSUPUTV(ZZ2,OUTLINE);                                0518
         ST    R9,@AL00001                                         0518
         LA    @14,OUTLINE                                         0518
         ST    @14,@AL00001+4                                      0518
         L     @04,ZZ2BVTP(,R9)                                    0518
         L     @15,BVTPUTVP(,@04)                                  0518
         LA    @01,@AL00001                                        0518
         BALR  @14,@15                                             0518
*     BODYHLDR='';                                                 0519
@RF00517 MVI   BODYHLDR,C' '                                       0519
         MVC   BODYHLDR+1(57),BODYHLDR                             0519
*     BODY='';                                                     0520
         MVI   BODY,C' '                                           0520
         MVC   BODY+1(78),BODY                                     0520
*     DO;                           /* BLRCNVPC(ASCBFW1) FROM(POINTER
*                                      )TO(CHARACTER)SET(ITEM1)REMARK
*                                      (CONVERT FW1)TR(ZZ1TRHEX)     */
*                                                                  0521
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT FW1                                               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0522
*       PTRPTR=ASCBFW1;             /* SOURCE TO BIT/POINTER       0522
*                                      INTERMEDIATE                  */
         L     @14,ASCBFW1(,BLOKBASE)                              0522
         ST    @14,PTRPTR                                          0522
*       UNPK(ITEM1(1:LENGTH(ITEM1)-1),PTRBIT);/* BIT=>ZONED        0523
*                                      HEXADECIMAL                   */
         UNPK  ITEM1(7),PTRBIT(4)                                  0523
*       ITEM1(LENGTH(ITEM1):LENGTH(ITEM1))=PTRBIT(25:32);/* FINAL  0524
*                                      ZONED HEXADECIMAL DIGIT       */
         MVC   ITEM1+7(1),PTRBIT+3                                 0524
*       TR(ITEM1,ZZ1TRHEX);         /* ZONED HEXADECIMAL=>EBCDIC     */
         L     @14,ZZ2ZZ1P(,R9)                                    0525
         TR    ITEM1(8),ZZ1TRHEX(@14)                              0525
*     END;                          /* BLRCNVPC(ASCBFW1) FROM(POINTER
*                                      )TO(CHARACTER)SET(ITEM1)REMARK
*                                      (CONVERT FW1)TR(ZZ1TRHEX)     */
*     NAME1='FW1 ';                 /* SET                           */
         MVC   NAME1(4),@CC03039                                   0527
*     NAME2='';                     /* OUTPUT                        */
         MVI   NAME2,C' '                                          0528
         MVC   NAME2+1(3),NAME2                                    0528
*     NAME3='';                     /* LINE                          */
         MVI   NAME3,C' '                                          0529
         MVC   NAME3+1(3),NAME3                                    0529
*     NAME4='';                     /* LABELS                        */
         MVI   NAME4,C' '                                          0530
         MVC   NAME4+1(3),NAME4                                    0530
*     BODY(5:62)=BODYHLDR;          /* MOVE TO OUTPUT LINE           */
         MVC   BODY+4(58),BODYHLDR                                 0531
*     IF MSGIND=0 THEN              /* OUTPUT ALLOWED                */
         LTR   MSGIND,MSGIND                                       0532
         BNZ   @RF00532                                            0532
*       CALL BLSUPUTV(ZZ2,OUTLINE); /* OUTPUT LINE                   */
         ST    R9,@AL00001                                         0533
         LA    @14,OUTLINE                                         0533
         ST    @14,@AL00001+4                                      0533
         L     @04,ZZ2BVTP(,R9)                                    0533
         L     @15,BVTPUTVP(,@04)                                  0533
         LA    @01,@AL00001                                        0533
         BALR  @14,@15                                             0533
*                                                                  0534
*     /***************************************************************/
*     /*                                                             */
*     /* PRINT TCB INFORMATION                                       */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0534
*     ESAUSYM='ASXB    ';           /* ASXB                          */
@RF00532 MVI   ESAUSYM+8,C' '                                      0534
         MVC   ESAUSYM+9(22),ESAUSYM+8                             0534
         MVC   ESAUSYM(8),@CC03040                                 0534
*     DO;                           /* BLRCNVUC(THISASID)          0535
*                                      FROM(UNSIGNED BINARY)TO(CHARAC
*                                      TER)SET(ESAUSYM(5:7))         */
*       CVD(THISASID,PACKED);       /* BINARY=>PACKED DECIMAL        */
         L     @14,THISASID                                        0536
         CVD   @14,PACKED                                          0536
*       UNPK(ESAUSYM(5:7),PACKED);  /* PACKED DECIMAL=>ZONED DECIMAL */
         UNPK  ESAUSYM+4(3),PACKED(8)                              0537
*       ESAUSYM(7:7)=ESAUSYM(7:7)×'0';/* ZONED DECIMAL=>EBCDIC       */
         OI    ESAUSYM+6,C'0'                                      0538
*     END;                          /* BLRCNVUC(THISASID)          0539
*                                      FROM(UNSIGNED BINARY)TO(CHARAC
*                                      TER)SET(ESAUSYM(5:7))         */
*     ESAUDTD='ASXB';               /* STRUC DICT                    */
         MVI   ESAUDTD+4,C' '                                      0540
         MVC   ESAUDTD+5(26),ESAUDTD+4                             0540
         MVC   ESAUDTD(4),@CC03035                                 0540
*     IF ASCBSEQN='7FFF'X&MSGIND<2 THEN                            0541
         CLC   ASCBSEQN(2,BLOKBASE),@CH03041                       0541
         BNE   @RF00541                                            0541
         C     MSGIND,@CF00069                                     0541
         BNL   @RF00541                                            0541
*       CALL BLSUPUTV(ZZ2,M021);    /* SWAPPED OUT MESSAGE           */
         ST    R9,@AL00001                                         0542
         LA    @14,M021                                            0542
         ST    @14,@AL00001+4                                      0542
         L     @04,ZZ2BVTP(,R9)                                    0542
         L     @15,BVTPUTVP(,@04)                                  0542
         LA    @01,@AL00001                                        0542
         BALR  @14,@15                                             0542
*     CALL ACCESS(THISASID,ASCBASXB,LENGTH(ASXB));                 0543
@RF00541 LA    @14,THISASID                                        0543
         ST    @14,@AL00001                                        0543
         LA    @14,ASCBASXB(,BLOKBASE)                             0543
         ST    @14,@AL00001+4                                      0543
         LA    @14,@CF03118                                        0543
         ST    @14,@AL00001+8                                      0543
         LA    @01,@AL00001                                        0543
         BAL   @14,ACCESS                                          0543
*     IF RF=0&ASXBASXB='ASXB' THEN  /* VALID ASXB                    */
         LTR   RF,RF                                               0544
         BNZ   @RF00544                                            0544
         CLC   ASXBASXB(4,BLOKBASE),@CC03035                       0544
         BNE   @RF00544                                            0544
*       DO;                                                        0545
*         THISTCB=ASXBFTCB;         /* FIRST TCB ADDRESS             */
         L     @14,ASXBFTCB(,BLOKBASE)                             0546
         ST    @14,THISTCB                                         0546
*         CALL TCBIT;               /* PROCESS TCBS                  */
         BAL   @14,TCBIT                                           0547
*       END;                                                       0548
*ENDLOOP:                                                          0549
*   END;                            /* END OF ASCB INSPECTION LOOP   */
@RF00544 DS    0H                                                  0549
ENDLOOP  AL    J3,@CF00045                                         0549
@DE00352 C     J3,J2                                               0549
         BNH   @DL00352                                            0549
@DC00352 DS    0H                                                  0550
*                                                                  0550
*   /*****************************************************************/
*   /*                                                               */
*   /* INFORM USER OF ANY UNFOUND JOBNAMES                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0550
*   IN81O=ADDR(M018T2)-ADDR(M018T); /* SET OFFSET                    */
         MVC   IN81O(2),@CH03119                                   0550
*   OLDN=2;                         /* 1 INSERT                      */
         MVC   OLDN(4),@CF00069                                    0551
*   OLDP(1)=ADDR(M018);             /* POINT TO BASE MESSAGE         */
         LA    @14,M018                                            0552
         ST    @14,OLDP                                            0552
*   OLDP(2)=ADDR(IN81);             /* POINT TO INSERT               */
         LA    @14,IN81                                            0553
         ST    @14,OLDP+4                                          0553
*   IF PKASID=PNJOB THEN                                           0554
         CLC   PKASID(2),@CH00045                                  0554
         BNE   @RF00554                                            0554
*     DO;                           /* JOB LIST ENTERED              */
*       PDEXPTR=ADDR(PDJOB);        /* POINT TO FIRST PDE            */
         LA    PDEXPTR,PDJOB                                       0556
*       DO UNTIL(PDEXPTR=ZZ1PNULL); /* SEARCH ALL PDES               */
@DL00557 DS    0H                                                  0558
*         IF PDJOBIFP='1'B THEN     /* IF JOBNAME WASNT PROCESSED    */
         TM    PDJOBIFP(PDEXPTR),B'10000000'                       0558
         BNO   @RF00558                                            0558
*           DO;                                                    0559
*             RETC=MAX(RETC,ZZZFLAGW);/* SET RETURN CODE             */
         LA    @14,4                                               0560
         L     @04,RETC                                            0560
         CR    @04,@14                                             0560
         BNL   *+6
         LR    @04,@14                                             0560
         ST    @04,RETC                                            0560
*             IN81T1='';            /* BLANK INSERT                  */
         MVI   IN81T1,C' '                                         0561
         MVC   IN81T1+1(7),IN81T1                                  0561
*             IN81T1(1:PDJOBIL)=PDJOBI(1:PDJOBIL);/* MOVE IN JOBNAME */
         LH    @04,PDJOBIL(,PDEXPTR)                               0562
         LR    @03,@04                                             0562
         BCTR  @03,0                                               0562
         L     @01,PDJOBIP(,PDEXPTR)                               0562
         EX    @03,@SM03137                                        0562
*             IN81L=PDJOBIL+4;      /* LENGTH OF INSERT              */
         ALR   @04,@14                                             0563
         STH   @04,IN81L                                           0563
*             IF MSGIND<3 THEN                                     0564
         C     MSGIND,@CF00154                                     0564
         BNL   @RF00564                                            0564
*               CALL BLSUPUTO(ZZ2,OLD);/* WRITE MESSAGE              */
         ST    R9,@AL00001                                         0565
         LA    @14,OLD                                             0565
         ST    @14,@AL00001+4                                      0565
         L     @04,ZZ2BVTP(,R9)                                    0565
         L     @15,BVTPUTOP(,@04)                                  0565
         LA    @01,@AL00001                                        0565
         BALR  @14,@15                                             0565
*             IN81L=12;             /* RESET INSERT LENGTH           */
@RF00564 MVC   IN81L(2),@CH00032                                   0566
*           END;                                                   0567
*         PDEXPTR=PDJOBXP;          /* POINT TO NEXT PDE             */
@RF00558 L     PDEXPTR,PDJOBXP(,PDEXPTR)                           0568
*       END;                                                       0569
@DE00557 L     @14,ZZ2ZZ1P(,R9)                                    0569
         CL    PDEXPTR,ZZ1PNULL(,@14)                              0569
         BNE   @DL00557                                            0569
*     END;                                                         0570
*                                                                  0571
*   /*****************************************************************/
*   /*                                                               */
*   /* PROGRAM EXIT                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0571
*EXITRLSA:                          /* EXIT WITH PDL                 */
*   RETC=MIN(MAX(RF,RETC),ZZZFLAGT);/* SET MAX RETURN CODE           */
@RF00554 DS    0H                                                  0571
EXITRLSA L     @14,RETC                                            0571
         CR    @14,RF                                              0571
         BNL   *+6
         LR    @14,RF                                              0571
         LA    @06,16                                              0571
         CR    @14,@06                                             0571
         BNH   *+6
         LR    @14,@06                                             0571
         ST    @14,RETC                                            0571
*   DO WHILE(PDAPTR^=0);            /* BLRRLSA MF(E,PD)              */
         B     @DE00572                                            0572
@DL00572 DS    0H                                                  0573
*     PDRPTR=PDAPTR;                                               0573
         L     PDRPTR,PDAPTR                                       0573
*     PDAPTR=PDXP;                                                 0574
         L     @14,PDXP-1(,PDRPTR)                                 0574
         LA    @14,0(,@14)                                         0574
         ST    @14,PDAPTR                                          0574
*     DO;                           /* FREEMAIN(R)                 0575
*                                      LV(PDL)SP(1)A(PDDSECT)        */
*       RESPECIFY                                                  0576
*        (GPR01F,                                                  0576
*         GPR00F) RESTRICTED;                                      0576
*       GPR00F=PDL;                 /* LENGTH REQUESTED              */
         L     GPR00F,PDL-1(,PDRPTR)                               0577
         ICM   GPR00F,8,@CB02552                                   0577
*       GPR01F=1;                   /* SP IN REG 1                   */
         LA    GPR01F,1                                            0578
*       GEN(SLL   GPR01F,24)                                       0579
*       NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;               0579
         SLL   GPR01F,24
*       GPR00F=GPR00F×GPR01F;       /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                       0580
*       GPR01F=ADDR(PDDSECT);       /* SET REGISTER ONE              */
         LR    GPR01F,PDRPTR                                       0581
*       SVC(10);                    /* R-FORM OF GETMAIN             */
         SVC   10                                                  0582
*       RESPECIFY                                                  0583
*        (GPR01F,                                                  0583
*         GPR00F) UNRESTRICTED;                                    0583
*     END;                          /* FREEMAIN(R)                 0584
*                                      LV(PDL)SP(1)A(PDDSECT)        */
*   END;                            /* BLRRLSA MF(E,PD)              */
@DE00572 L     @14,PDAPTR                                          0585
         LTR   @14,@14                                             0585
         BNZ   @DL00572                                            0585
*   IF FLAGFREE='1'B THEN                                          0586
         TM    FLAGFREE,B'01000000'                                0586
         BNO   @RF00586                                            0586
*     DO;                           /* FREEMAIN(R) LV(TABLSIZE)SP(ZZZ
*                                      SPEXC)A(ADDRASCB)             */
*       RESPECIFY                                                  0588
*        (GPR01F,                                                  0588
*         GPR00F) RESTRICTED;                                      0588
*       GPR00F=TABLSIZE;            /* LENGTH REQUESTED              */
         L     GPR00F,TABLSIZE                                     0589
*       GPR01F=ZZZSPEXC;            /* SP IN REG 1                   */
         LA    GPR01F,1                                            0590
*       GEN(SLL   GPR01F,24)                                       0591
*       NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;               0591
         SLL   GPR01F,24
*       GPR00F=GPR00F×GPR01F;       /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                       0592
*       GPR01F=ADDR(ADDRASCB);      /* SET REGISTER ONE              */
         L     GPR01F,TABLPTR                                      0593
*       SVC(10);                    /* R-FORM OF GETMAIN             */
         SVC   10                                                  0594
*       RESPECIFY                                                  0595
*        (GPR01F,                                                  0595
*         GPR00F) UNRESTRICTED;                                    0595
*     END;                          /* FREEMAIN(R) LV(TABLSIZE)SP(ZZZ
*                                      SPEXC)A(ADDRASCB)             */
*EXITNORL:                                                         0597
*   DO;                             /* FREEMAIN(R)                 0597
*                                      LV(TWOPG)SP(ZZZSPEXC)A(BLOCK) */
@RF00586 DS    0H                                                  0597
EXITNORL DS    0H                                                  0598
*     RESPECIFY                                                    0598
*      (GPR01F,                                                    0598
*       GPR00F) RESTRICTED;                                        0598
*     GPR00F=TWOPG;                 /* LENGTH REQUESTED              */
         L     GPR00F,@CF02955                                     0599
*     GPR01F=ZZZSPEXC;              /* SP IN REG 1                   */
         LA    GPR01F,1                                            0600
*     GEN(SLL   GPR01F,24)                                         0601
*     NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;                 0601
         SLL   GPR01F,24
*     GPR00F=GPR00F×GPR01F;         /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                       0602
*     GPR01F=ADDR(BLOCK);           /* SET REGISTER ONE              */
         LR    GPR01F,BLOKBASE                                     0603
*     SVC(10);                      /* R-FORM OF GETMAIN             */
         SVC   10                                                  0604
*     RESPECIFY                                                    0605
*      (GPR01F,                                                    0605
*       GPR00F) UNRESTRICTED;                                      0605
*   END;                            /* FREEMAIN(R)                 0606
*                                      LV(TWOPG)SP(ZZZSPEXC)A(BLOCK) */
*   RETURN CODE(RETC);              /* MODULE COMMON EXIT            */
         L     @06,RETC                                            0607
         L     @13,4(,@13)                                         0607
         L     @00,@SIZDATD                                        0607
         LR    @01,@11                                             0607
         BLSUFRER R,LV=(0),A=(1)
         LR    @15,@06                                             0607
         L     @14,12(,@13)                                        0607
         LM    @00,@12,20(@13)                                     0607
         BR    @14                                                 0607
*                                                                  0608
*/********************************************************************/
*/*                                                                  */
*/* TCBIT--PROCESS TCBS                                              */
*/*                                                                  */
*/********************************************************************/
*                                                                  0608
*TCBIT:                                                            0608
*   PROCEDURE;                                                     0608
TCBIT    STM   @14,@12,@SA00002                                    0608
*   TCBCTR=0;                       /* INITIALIZE TCB COUNTER FOR  0609
*                                      THIS ASID                     */
         SLR   TCBCTR,TCBCTR                                       0609
*   DO WHILE((THISTCB^=0)&(ZZ1EVEP='0'B));/* GO DOWN TCB CHAIN       */
         B     @DE00610                                            0610
@DL00610 DS    0H                                                  0611
*     OUTTCBTN(1)=ALPHA(TCBCTR/26+1);/* FIRST LETTER OF TCB COUNT    */
         LA    @14,26                                              0611
         LR    @00,TCBCTR                                          0611
         SRDA  @00,32                                              0611
         DR    @00,@14                                             0611
         LA    @04,ALPHA(@01)                                      0611
         MVC   OUTTCBTN(1),0(@04)                                  0611
*     OUTTCBTN(2)=ALPHA(TCBCTR//26+1);                             0612
         LR    @00,TCBCTR                                          0612
         SRDA  @00,32                                              0612
         DR    @00,@14                                             0612
         LR    @14,@00                                             0612
         LA    @04,ALPHA(@14)                                      0612
         MVC   OUTTCBTN+1(1),0(@04)                                0612
*     TCBCTR=TCBCTR+1;              /* INCREMENT COUNTER             */
         AL    TCBCTR,@CF00045                                     0613
*     DO;                           /* BLRCNVPC(THISTCB) FROM(POINTER
*                                      )TO(CHARACTER)SET(IN82T1)REMAR
*                                      K(CONVERT TCB               0614
*                                      ADDRESS)TR(ZZ1TRHEX)          */
*                                                                  0614
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT TCB ADDRESS                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0615
*       PTRPTR=THISTCB;             /* SOURCE TO BIT/POINTER       0615
*                                      INTERMEDIATE                  */
         L     @14,THISTCB                                         0615
         ST    @14,PTRPTR                                          0615
*       UNPK(IN82T1(1:LENGTH(IN82T1)-1),PTRBIT);/* BIT=>ZONED      0616
*                                      HEXADECIMAL                   */
         UNPK  IN82T1(7),PTRBIT(4)                                 0616
*       IN82T1(LENGTH(IN82T1):LENGTH(IN82T1))=PTRBIT(25:32);/* FINAL
*                                      ZONED HEXADECIMAL DIGIT       */
         MVC   IN82T1+7(1),PTRBIT+3                                0617
*       TR(IN82T1,ZZ1TRHEX);        /* ZONED HEXADECIMAL=>EBCDIC     */
         L     @14,ZZ2ZZ1P(,R9)                                    0618
         TR    IN82T1(8),ZZ1TRHEX(@14)                             0618
*     END;                          /* BLRCNVPC(THISTCB) FROM(POINTER
*                                      )TO(CHARACTER)SET(IN82T1)REMAR
*                                      K(CONVERT TCB               0619
*                                      ADDRESS)TR(ZZ1TRHEX)          */
*     IN81T1=OUTTCB;                /* MOVE TCB NAME TO OUTPUT     0620
*                                      SEGMENT                       */
         MVC   IN81T1(8),OUTTCB                                    0620
*     OLDN=3;                       /* 4 SEGMENTS TO MSG             */
         MVC   OLDN(4),@CF00154                                    0621
*     OLDP(1)=ADDR(M019);           /* BASE MESSAGE                  */
         LA    @14,M019                                            0622
         ST    @14,OLDP                                            0622
*     OLDP(2)=ADDR(IN81);           /* INSERT                        */
         LA    @14,IN81                                            0623
         ST    @14,OLDP+4                                          0623
*     OLDP(3)=ADDR(IN82);           /* INSERT                        */
         LA    @14,IN82                                            0624
         ST    @14,OLDP+8                                          0624
*     IN81O=ADDR(M019T2)-ADDR(M019T);/* OFFSET                       */
         MVC   IN81O(2),@CH00531                                   0625
*     IN82O=ADDR(M019T3)-ADDR(M019T);/* OFFSET                       */
         MVC   IN82O(2),@CH03116                                   0626
*     IN81L=12;                     /* LENGTH                        */
         LA    @14,12                                              0627
         STH   @14,IN81L                                           0627
*     IN82L=12;                     /* LENGTH                        */
         STH   @14,IN82L                                           0628
*     IF MSGIND<2 THEN                                             0629
         C     MSGIND,@CF00069                                     0629
         BNL   @RF00629                                            0629
*       CALL BLSUPUTO(ZZ2,OLD);     /* OUTPUT MESSAGE                */
         ST    R9,@AL00001                                         0630
         LA    @14,OLD                                             0630
         ST    @14,@AL00001+4                                      0630
         L     @04,ZZ2BVTP(,R9)                                    0630
         L     @15,BVTPUTOP(,@04)                                  0630
         LA    @01,@AL00001                                        0630
         BALR  @14,@15                                             0630
*     ESAUSYM='';                                                  0631
@RF00629 MVI   ESAUSYM,C' '                                        0631
         MVC   ESAUSYM+1(30),ESAUSYM                               0631
*     ESAUSYM=OUTTCB;               /* SET TCB NAME                  */
         MVI   ESAUSYM+8,C' '                                      0632
         MVC   ESAUSYM+9(22),ESAUSYM+8                             0632
         MVC   ESAUSYM(8),OUTTCB                                   0632
*     ESAUDTD='TCB';                /* STRUC DICT                    */
         MVI   ESAUDTD+3,C' '                                      0633
         MVC   ESAUDTD+4(27),ESAUDTD+3                             0633
         MVC   ESAUDTD(3),@CC03034                                 0633
*     CALL ACCESS(THISASID,THISTCB,LENGTH(TCB));/* GET TCB           */
         LA    @14,THISASID                                        0634
         ST    @14,@AL00001                                        0634
         LA    @14,THISTCB                                         0634
         ST    @14,@AL00001+4                                      0634
         LA    @14,@CF03120                                        0634
         ST    @14,@AL00001+8                                      0634
         LA    @01,@AL00001                                        0634
         BAL   @14,ACCESS                                          0634
*     IF RF=0&TCBTCBID='TCB ' THEN  /* IF VALID TCB                  */
         SLR   @14,@14                                             0635
         CR    RF,@14                                              0635
         BNE   @RF00635                                            0635
         CLC   TCBTCBID(4,BLOKBASE),@CC03050                       0635
         BNE   @RF00635                                            0635
*       DO;                                                        0636
*         NEXTCB=TCBTCB;            /* SAVE FORWARD POINTER          */
         L     NEXTCB,TCBTCB(,BLOKBASE)                            0637
*         BODYHLDR='';              /* BLANK OUTPUT LINE             */
         MVI   BODYHLDR,C' '                                       0638
         MVC   BODYHLDR+1(57),BODYHLDR                             0638
*         DO;                       /* BLRCNVPC(TCBCMP) FROM(POINTER)
*                                      TO(CHARACTER)SET(ITEM1)REMARK(
*                                      CONVERT TCBCMP)TR(ZZ1TRHEX)   */
*                                                                  0639
*           /*********************************************************/
*           /*                                                       */
*           /* CONVERT TCBCMP                                        */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0640
*           PTRPTR=TCBCMP;          /* SOURCE TO BIT/POINTER       0640
*                                      INTERMEDIATE                  */
         L     @04,TCBCMP(,BLOKBASE)                               0640
         ST    @04,PTRPTR                                          0640
*           UNPK(ITEM1(1:LENGTH(ITEM1)-1),PTRBIT);/* BIT=>ZONED    0641
*                                      HEXADECIMAL                   */
         UNPK  ITEM1(7),PTRBIT(4)                                  0641
*           ITEM1(LENGTH(ITEM1):LENGTH(ITEM1))=PTRBIT(25:32);/* FINAL
*                                      ZONED HEXADECIMAL DIGIT       */
         MVC   ITEM1+7(1),PTRBIT+3                                 0642
*           TR(ITEM1,ZZ1TRHEX);     /* ZONED HEXADECIMAL=>EBCDIC     */
         L     @01,ZZ2ZZ1P(,R9)                                    0643
         TR    ITEM1(8),ZZ1TRHEX(@01)                              0643
*         END;                      /* BLRCNVPC(TCBCMP) FROM(POINTER)
*                                      TO(CHARACTER)SET(ITEM1)REMARK(
*                                      CONVERT TCBCMP)TR(ZZ1TRHEX)   */
*         DO;                       /* BLRCNVXC(TCBPKF(1:4)) FROM(BS)
*                                      TO(CHARACTER)SET(ITEM2)REMARK(
*                                      CONVERT TCBPKF)TR(ZZ1TRHEX)   */
*                                                                  0645
*           /*********************************************************/
*           /*                                                       */
*           /* CONVERT TCBPKF                                        */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0646
*           UNPK(ITEM2(1:LENGTH(ITEM2)-1),TCBPKF(1:4));/* BIT=>ZONED
*                                      HEXADECIMAL                   */
         UNPK  ITEM2(7),TCBPKF(4,BLOKBASE)                         0646
*           ITEM2(LENGTH(ITEM2):LENGTH(ITEM2))=TCBPKF(4:4);/* FINAL
*                                      ZONED HEXADECIMAL DIGIT       */
         MVC   ITEM2+7(1),TCBPKF+3(BLOKBASE)                       0647
*           TR(ITEM2,ZZ1TRHEX);     /* ZONED HEXADECIMAL=>EBCDIC     */
         TR    ITEM2(8),ZZ1TRHEX(@01)                              0648
*         END;                      /* BLRCNVXC(TCBPKF(1:4)) FROM(BS)
*                                      TO(CHARACTER)SET(ITEM2)REMARK(
*                                      CONVERT TCBPKF)TR(ZZ1TRHEX)   */
*         DO;                       /* BLRCNVXC(TCBPKF(5:8)) FROM(BS)
*                                      TO(CHARACTER)SET(ITEM3)REMARK(
*                                      CONVERT TCBPKF)TR(ZZ1TRHEX)   */
*                                                                  0650
*           /*********************************************************/
*           /*                                                       */
*           /* CONVERT TCBPKF                                        */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0651
*           UNPK(ITEM3(1:LENGTH(ITEM3)-1),TCBPKF(5:8));/* BIT=>ZONED
*                                      HEXADECIMAL                   */
         UNPK  ITEM3(7),TCBPKF+4(4,BLOKBASE)                       0651
*           ITEM3(LENGTH(ITEM3):LENGTH(ITEM3))=TCBPKF(8:8);/* FINAL
*                                      ZONED HEXADECIMAL DIGIT       */
         MVC   ITEM3+7(1),TCBPKF+7(BLOKBASE)                       0652
*           TR(ITEM3,ZZ1TRHEX);     /* ZONED HEXADECIMAL=>EBCDIC     */
         TR    ITEM3(8),ZZ1TRHEX(@01)                              0653
*         END;                      /* BLRCNVXC(TCBPKF(5:8)) FROM(BS)
*                                      TO(CHARACTER)SET(ITEM3)REMARK(
*                                      CONVERT TCBPKF)TR(ZZ1TRHEX)   */
*         DO;                       /* BLRCNVBC(TCBTSFLG) FROM(BIT)TO
*                                      (CHARACTER)SET(ITEM4(1:2))REMA
*                                      RK(CONVERT                  0655
*                                      TCBTSFLG)TR(ZZ1TRHEX)         */
*                                                                  0655
*           /*********************************************************/
*           /*                                                       */
*           /* CONVERT TCBTSFLG                                      */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0656
*           UNPK(ITEM4(1:1),TCBTSFLG);/* BIT=>ZONED HEXADECIMAL      */
         UNPK  ITEM4(1),TCBTSFLG(1,BLOKBASE)                       0656
*           ITEM4(2:2)=TCBTSFLG(LENGTH(TCBTSFLG)-7:LENGTH(TCBTSFLG));
         MVC   ITEM4+1(1),TCBTSFLG(BLOKBASE)                       0657
*                                   /* FINAL ZONED HEXADECIMAL DIGIT */
*           TR(ITEM4(1:2),ZZ1TRHEX);/* ZONED HEXADECIMAL=>EBCDIC     */
         TR    ITEM4(2),ZZ1TRHEX(@01)                              0658
*         END;                      /* BLRCNVBC(TCBTSFLG) FROM(BIT)TO
*                                      (CHARACTER)SET(ITEM4(1:2))REMA
*                                      RK(CONVERT                  0659
*                                      TCBTSFLG)TR(ZZ1TRHEX)         */
*         NAME1='CMP ';             /* SET                           */
         MVC   NAME1(4),@CC03051                                   0660
*         NAME2='PKFG';             /* OUTPUT                        */
         MVC   NAME2(4),@CC03052                                   0661
*         NAME3='PKF2';             /* LINE                          */
         MVC   NAME3(4),@CC03053                                   0662
*         NAME4='TSFG';             /* LABELS                        */
         MVC   NAME4(4),@CC03054                                   0663
*         BODY='';                  /* BLANK OUTPUT LINE             */
         MVI   BODY,C' '                                           0664
         MVC   BODY+1(78),BODY                                     0664
*         BODY(8:65)=BODYHLDR;      /* MOVE TO OUTPUT BUFFER         */
         MVC   BODY+7(58),BODYHLDR                                 0665
*         IF TCBCMP^=0 THEN                                        0666
         CLR   @04,@14                                             0666
         BE    @RF00666                                            0666
*           DO;                     /* IF NONZERO COMP CODE          */
*             BODY(2:6)='====>';    /* PUT ARROW ON LEFT MARGIN      */
         MVC   BODY+1(5),@CC03056                                  0668
*             IN81T1=OUTTCB;        /* TCB NAME TO INSERT            */
         MVC   IN81T1(8),OUTTCB                                    0669
*             IN81L=12;             /* LENGTH                        */
         MVC   IN81L(2),@CH00032                                   0670
*             OLDN=2;                                              0671
         LA    @14,2                                               0671
         ST    @14,OLDN                                            0671
*             OLDP(1)=ADDR(M022);                                  0672
         LA    @04,M022                                            0672
         ST    @04,OLDP                                            0672
*             OLDP(2)=ADDR(IN81);                                  0673
         LA    @04,IN81                                            0673
         ST    @04,OLDP+4                                          0673
*             IN81O=ADDR(M022T2)-ADDR(M022T);                      0674
         MVC   IN81O(2),@CH00420                                   0674
*             IF MSGIND=2 THEN                                     0675
         CR    MSGIND,@14                                          0675
         BNE   @RF00675                                            0675
*               CALL BLSUPUTO(ZZ2,OLD);                            0676
         ST    R9,@AL00001                                         0676
         LA    @14,OLD                                             0676
         ST    @14,@AL00001+4                                      0676
         L     @04,ZZ2BVTP(,R9)                                    0676
         L     @15,BVTPUTOP(,@04)                                  0676
         LA    @01,@AL00001                                        0676
         BALR  @14,@15                                             0676
*           END;                                                   0677
@RF00675 DS    0H                                                  0678
*         IF MSGIND<2×(BODY(2:6)='====>'&(ZZ2AFP='1'B×ZZ2AFT='1'B))
*           THEN                                                   0678
@RF00666 C     MSGIND,@CF00069                                     0678
         BL    @RT00678                                            0678
         CLC   BODY+1(5),@CC03056                                  0678
         BNE   @RF00678                                            0678
         TM    ZZ2AFP(R9),B'11000000'                              0678
         BZ    @RF00678                                            0678
@RT00678 DS    0H                                                  0679
*           CALL BLSUPUTV(ZZ2,OUTLINE);/* OUTPUT LINE                */
         ST    R9,@AL00001                                         0679
         LA    @14,OUTLINE                                         0679
         ST    @14,@AL00001+4                                      0679
         L     @04,ZZ2BVTP(,R9)                                    0679
         L     @15,BVTPUTVP(,@04)                                  0679
         LA    @01,@AL00001                                        0679
         BALR  @14,@15                                             0679
*         BODY='';                  /* BLANK MESSAGE                 */
@RF00678 MVI   BODY,C' '                                           0680
         MVC   BODY+1(78),BODY                                     0680
*         BODYHLDR='';              /* BLANK BUFFER                  */
         MVI   BODYHLDR,C' '                                       0681
         MVC   BODYHLDR+1(57),BODYHLDR                             0681
*         DO;                       /* BLRCNVPC(TCBSTAB) FROM(POINTER
*                                      )TO(CHARACTER)SET(ITEM1)REMARK
*                                      (CONVERT TCBSTAB)TR(ZZ1TRHEX) */
*                                                                  0682
*           /*********************************************************/
*           /*                                                       */
*           /* CONVERT TCBSTAB                                       */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0683
*           PTRPTR=TCBSTAB;         /* SOURCE TO BIT/POINTER       0683
*                                      INTERMEDIATE                  */
         L     @14,TCBSTAB(,BLOKBASE)                              0683
         ST    @14,PTRPTR                                          0683
*           UNPK(ITEM1(1:LENGTH(ITEM1)-1),PTRBIT);/* BIT=>ZONED    0684
*                                      HEXADECIMAL                   */
         UNPK  ITEM1(7),PTRBIT(4)                                  0684
*           ITEM1(LENGTH(ITEM1):LENGTH(ITEM1))=PTRBIT(25:32);/* FINAL
*                                      ZONED HEXADECIMAL DIGIT       */
         MVC   ITEM1+7(1),PTRBIT+3                                 0685
*           TR(ITEM1,ZZ1TRHEX);     /* ZONED HEXADECIMAL=>EBCDIC     */
         L     @14,ZZ2ZZ1P(,R9)                                    0686
         TR    ITEM1(8),ZZ1TRHEX(@14)                              0686
*         END;                      /* BLRCNVPC(TCBSTAB) FROM(POINTER
*                                      )TO(CHARACTER)SET(ITEM1)REMARK
*                                      (CONVERT TCBSTAB)TR(ZZ1TRHEX) */
*         DO;                       /* BLRCNVXC(TCBNDSP) FROM(BS)TO(C
*                                      HARACTER)SET(ITEM2)REMARK(CONV
*                                      ERT TCBNDSP)TR(ZZ1TRHEX)      */
*                                                                  0688
*           /*********************************************************/
*           /*                                                       */
*           /* CONVERT TCBNDSP                                       */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0689
*           UNPK(ITEM2(1:LENGTH(ITEM2)-1),TCBNDSP);/* BIT=>ZONED   0689
*                                      HEXADECIMAL                   */
         UNPK  ITEM2(7),TCBNDSP(4,BLOKBASE)                        0689
*           ITEM2(LENGTH(ITEM2):LENGTH(ITEM2))=TCBNDSP(LENGTH(TCBNDSP):
*               LENGTH(TCBNDSP));   /* FINAL ZONED HEXADECIMAL DIGIT */
         MVC   ITEM2+7(1),TCBNDSP+3(BLOKBASE)                      0690
*           TR(ITEM2,ZZ1TRHEX);     /* ZONED HEXADECIMAL=>EBCDIC     */
         TR    ITEM2(8),ZZ1TRHEX(@14)                              0691
*         END;                      /* BLRCNVXC(TCBNDSP) FROM(BS)TO(C
*                                      HARACTER)SET(ITEM2)REMARK(CONV
*                                      ERT TCBNDSP)TR(ZZ1TRHEX)      */
*         DO;                       /* BLRCNVPC(TCBJSCB) FROM(POINTER
*                                      )TO(CHARACTER)SET(ITEM3)REMARK
*                                      (CONVERT TCBJSCB)TR(ZZ1TRHEX) */
*                                                                  0693
*           /*********************************************************/
*           /*                                                       */
*           /* CONVERT TCBJSCB                                       */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0694
*           PTRPTR=TCBJSCB;         /* SOURCE TO BIT/POINTER       0694
*                                      INTERMEDIATE                  */
         L     @04,TCBJSCB(,BLOKBASE)                              0694
         ST    @04,PTRPTR                                          0694
*           UNPK(ITEM3(1:LENGTH(ITEM3)-1),PTRBIT);/* BIT=>ZONED    0695
*                                      HEXADECIMAL                   */
         UNPK  ITEM3(7),PTRBIT(4)                                  0695
*           ITEM3(LENGTH(ITEM3):LENGTH(ITEM3))=PTRBIT(25:32);/* FINAL
*                                      ZONED HEXADECIMAL DIGIT       */
         MVC   ITEM3+7(1),PTRBIT+3                                 0696
*           TR(ITEM3,ZZ1TRHEX);     /* ZONED HEXADECIMAL=>EBCDIC     */
         TR    ITEM3(8),ZZ1TRHEX(@14)                              0697
*         END;                      /* BLRCNVPC(TCBJSCB) FROM(POINTER
*                                      )TO(CHARACTER)SET(ITEM3)REMARK
*                                      (CONVERT TCBJSCB)TR(ZZ1TRHEX) */
*         DO;                       /* BLRCNVXC(TCBBITS) FROM(BS)TO(C
*                                      HARACTER)SET(ITEM4)REMARK(CONV
*                                      ERT TCBBITS)TR(ZZ1TRHEX)      */
*                                                                  0699
*           /*********************************************************/
*           /*                                                       */
*           /* CONVERT TCBBITS                                       */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0700
*           UNPK(ITEM4(1:LENGTH(ITEM4)-1),TCBBITS);/* BIT=>ZONED   0700
*                                      HEXADECIMAL                   */
         UNPK  ITEM4(7),TCBBITS(4,BLOKBASE)                        0700
*           ITEM4(LENGTH(ITEM4):LENGTH(ITEM4))=TCBBITS(LENGTH(TCBBITS):
*               LENGTH(TCBBITS));   /* FINAL ZONED HEXADECIMAL DIGIT */
         MVC   ITEM4+7(1),TCBBITS+3(BLOKBASE)                      0701
*           TR(ITEM4,ZZ1TRHEX);     /* ZONED HEXADECIMAL=>EBCDIC     */
         TR    ITEM4(8),ZZ1TRHEX(@14)                              0702
*         END;                      /* BLRCNVXC(TCBBITS) FROM(BS)TO(C
*                                      HARACTER)SET(ITEM4)REMARK(CONV
*                                      ERT TCBBITS)TR(ZZ1TRHEX)      */
*         NAME1='STAB';             /* SET                           */
         MVC   NAME1(4),@CC03057                                   0704
*         NAME2='NDSP';             /* OUTPUT                        */
         MVC   NAME2(4),@CC03058                                   0705
*         NAME3='JSCB';             /* LINE                          */
         MVC   NAME3(4),@CC03059                                   0706
*         NAME4='BITS';             /* LABELS                        */
         MVC   NAME4(4),@CC03060                                   0707
*         BODY(8:65)=BODYHLDR;      /* MOVE TO BUFFER                */
         MVC   BODY+7(58),BODYHLDR                                 0708
*         IF MSGIND=0 THEN          /* IF NOT SUMMARY ONLY           */
         LTR   MSGIND,MSGIND                                       0709
         BNZ   @RF00709                                            0709
*           CALL BLSUPUTV(ZZ2,OUTLINE);/* PUT OUT LINE               */
         ST    R9,@AL00001                                         0710
         LA    @14,OUTLINE                                         0710
         ST    @14,@AL00001+4                                      0710
         L     @04,ZZ2BVTP(,R9)                                    0710
         L     @15,BVTPUTVP(,@04)                                  0710
         LA    @01,@AL00001                                        0710
         BALR  @14,@15                                             0710
*         BODYHLDR='';              /* BLANK BUFFER                  */
@RF00709 MVI   BODYHLDR,C' '                                       0711
         MVC   BODYHLDR+1(57),BODYHLDR                             0711
*         BODY='';                  /* BLANK OUTPUT LINE             */
         MVI   BODY,C' '                                           0712
         MVC   BODY+1(78),BODY                                     0712
*         DO;                       /* BLRCNVXC(TCBDAR) FROM(BS)TO(CH
*                                      ARACTER)SET(ITEM1(1:2))REMARK(
*                                      CONVERT TCBDAR)TR(ZZ1TRHEX)   */
*                                                                  0713
*           /*********************************************************/
*           /*                                                       */
*           /* CONVERT TCBDAR                                        */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0714
*           UNPK(ITEM1(1:1),TCBDAR);/* BIT=>ZONED HEXADECIMAL        */
         UNPK  ITEM1(1),TCBDAR(1,BLOKBASE)                         0714
*           ITEM1(2:2)=TCBDAR(LENGTH(TCBDAR):LENGTH(TCBDAR));/* FINAL
*                                      ZONED HEXADECIMAL DIGIT       */
         MVC   ITEM1+1(1),TCBDAR(BLOKBASE)                         0715
*           TR(ITEM1(1:2),ZZ1TRHEX);/* ZONED HEXADECIMAL=>EBCDIC     */
         L     @14,ZZ2ZZ1P(,R9)                                    0716
         TR    ITEM1(2),ZZ1TRHEX(@14)                              0716
*         END;                      /* BLRCNVXC(TCBDAR) FROM(BS)TO(CH
*                                      ARACTER)SET(ITEM1(1:2))REMARK(
*                                      CONVERT TCBDAR)TR(ZZ1TRHEX)   */
*         DO;                       /* BLRCNVPC(TCBRTWA) FROM(POINTER
*                                      )TO(CHARACTER)SET(ITEM2)REMARK
*                                      (CONVERT TCBRTWA)TR(ZZ1TRHEX) */
*                                                                  0718
*           /*********************************************************/
*           /*                                                       */
*           /* CONVERT TCBRTWA                                       */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0719
*           PTRPTR=TCBRTWA;         /* SOURCE TO BIT/POINTER       0719
*                                      INTERMEDIATE                  */
         L     @04,TCBRTWA(,BLOKBASE)                              0719
         ST    @04,PTRPTR                                          0719
*           UNPK(ITEM2(1:LENGTH(ITEM2)-1),PTRBIT);/* BIT=>ZONED    0720
*                                      HEXADECIMAL                   */
         UNPK  ITEM2(7),PTRBIT(4)                                  0720
*           ITEM2(LENGTH(ITEM2):LENGTH(ITEM2))=PTRBIT(25:32);/* FINAL
*                                      ZONED HEXADECIMAL DIGIT       */
         MVC   ITEM2+7(1),PTRBIT+3                                 0721
*           TR(ITEM2,ZZ1TRHEX);     /* ZONED HEXADECIMAL=>EBCDIC     */
         TR    ITEM2(8),ZZ1TRHEX(@14)                              0722
*         END;                      /* BLRCNVPC(TCBRTWA) FROM(POINTER
*                                      )TO(CHARACTER)SET(ITEM2)REMARK
*                                      (CONVERT TCBRTWA)TR(ZZ1TRHEX) */
*         DO;                       /* BLRCNVBC(ABCURTCB) FROM(BIT)TO
*                                      (CHARACTER)SET(ITEM3)REMARK(CO
*                                      NVERT TCBABCUR)TR(ZZ1TRHEX)   */
*                                                                  0724
*           /*********************************************************/
*           /*                                                       */
*           /* CONVERT TCBABCUR                                      */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0725
*           UNPK(ITEM3(1:LENGTH(ITEM3)-1),ABCURTCB);/* BIT=>ZONED  0725
*                                      HEXADECIMAL                   */
         UNPK  ITEM3(7),ABCURTCB(4,BLOKBASE)                       0725
*           ITEM3(LENGTH(ITEM3):LENGTH(ITEM3))=ABCURTCB(LENGTH(ABCURTCB
*               )-7:LENGTH(ABCURTCB));/* FINAL ZONED HEXADECIMAL   0726
*                                      DIGIT                         */
         MVC   ITEM3+7(1),ABCURTCB+3(BLOKBASE)                     0726
*           TR(ITEM3,ZZ1TRHEX);     /* ZONED HEXADECIMAL=>EBCDIC     */
         TR    ITEM3(8),ZZ1TRHEX(@14)                              0727
*         END;                      /* BLRCNVBC(ABCURTCB) FROM(BIT)TO
*                                      (CHARACTER)SET(ITEM3)REMARK(CO
*                                      NVERT TCBABCUR)TR(ZZ1TRHEX)   */
*         DO;                       /* BLRCNVBC(FBYT) FROM(BIT)TO(CHA
*                                      RACTER)SET(ITEM4)REMARK(CONVER
*                                      T TCBFBYT)TR(ZZ1TRHEX)        */
*                                                                  0729
*           /*********************************************************/
*           /*                                                       */
*           /* CONVERT TCBFBYT                                       */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0730
*           UNPK(ITEM4(1:LENGTH(ITEM4)-1),FBYT);/* BIT=>ZONED      0730
*                                      HEXADECIMAL                   */
         UNPK  ITEM4(7),FBYT(4,BLOKBASE)                           0730
*           ITEM4(LENGTH(ITEM4):LENGTH(ITEM4))=FBYT(LENGTH(FBYT)-7:
*               LENGTH(FBYT));      /* FINAL ZONED HEXADECIMAL DIGIT */
         MVC   ITEM4+7(1),FBYT+3(BLOKBASE)                         0731
*           TR(ITEM4,ZZ1TRHEX);     /* ZONED HEXADECIMAL=>EBCDIC     */
         TR    ITEM4(8),ZZ1TRHEX(@14)                              0732
*         END;                      /* BLRCNVBC(FBYT) FROM(BIT)TO(CHA
*                                      RACTER)SET(ITEM4)REMARK(CONVER
*                                      T TCBFBYT)TR(ZZ1TRHEX)        */
*         NAME1='DAR ';             /* SET                           */
         MVC   NAME1(4),@CC03061                                   0734
*         NAME2='RTWA';             /* OUTPUT                        */
         MVC   NAME2(4),@CC03062                                   0735
*         NAME3='ABR ';             /* LINE                          */
         MVC   NAME3(4),@CC03063                                   0736
*         NAME4='FBTS';             /* LABELS                        */
         MVC   NAME4(4),@CC03064                                   0737
*         BODY(8:65)=BODYHLDR;      /* MOVE TO BUFFER                */
         MVC   BODY+7(58),BODYHLDR                                 0738
*         IF TCBRTWA^=0 THEN                                       0739
         LTR   @04,@04                                             0739
         BZ    @RF00739                                            0739
*           DO;                                                    0740
*             BODY(2:6)='====>';    /* IF NONZERO FIELD, SET ARROW   */
         MVC   BODY+1(5),@CC03056                                  0741
*             IN81T1=OUTTCB;        /* TCB NAME TO INSERT            */
         MVC   IN81T1(8),OUTTCB                                    0742
*             OLDN=2;                                              0743
         LA    @14,2                                               0743
         ST    @14,OLDN                                            0743
*             IN81L=12;             /* LENGTH                        */
         MVC   IN81L(2),@CH00032                                   0744
*             OLDP(1)=ADDR(M023);                                  0745
         LA    @04,M023                                            0745
         ST    @04,OLDP                                            0745
*             OLDP(2)=ADDR(IN81);                                  0746
         LA    @04,IN81                                            0746
         ST    @04,OLDP+4                                          0746
*             IN81O=ADDR(M023T2)-ADDR(M023T);                      0747
         MVC   IN81O(2),@CH03121                                   0747
*             IF MSGIND=2 THEN      /* IF ANOMALY SPECIFIED          */
         CR    MSGIND,@14                                          0748
         BNE   @RF00748                                            0748
*               CALL BLSUPUTO(ZZ2,OLD);                            0749
         ST    R9,@AL00001                                         0749
         LA    @14,OLD                                             0749
         ST    @14,@AL00001+4                                      0749
         L     @04,ZZ2BVTP(,R9)                                    0749
         L     @15,BVTPUTOP(,@04)                                  0749
         LA    @01,@AL00001                                        0749
         BALR  @14,@15                                             0749
*           END;                                                   0750
@RF00748 DS    0H                                                  0751
*         IF MSGIND=0×(BODY(2:6)='====>'&(ZZ2AFP='1'B×ZZ2AFT='1'B))
*           THEN                                                   0751
@RF00739 LTR   MSGIND,MSGIND                                       0751
         BZ    @RT00751                                            0751
         CLC   BODY+1(5),@CC03056                                  0751
         BNE   @RF00751                                            0751
         TM    ZZ2AFP(R9),B'11000000'                              0751
         BZ    @RF00751                                            0751
@RT00751 DS    0H                                                  0752
*           CALL BLSUPUTV(ZZ2,OUTLINE);/* OUTPUT LINE                */
*                                                                  0752
         ST    R9,@AL00001                                         0752
         LA    @14,OUTLINE                                         0752
         ST    @14,@AL00001+4                                      0752
         L     @04,ZZ2BVTP(,R9)                                    0752
         L     @15,BVTPUTVP(,@04)                                  0752
         LA    @01,@AL00001                                        0752
         BALR  @14,@15                                             0752
*         /***********************************************************/
*         /*                                                         */
*         /* DISPLAY THIS TCB'S RBS                                  */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0753
*         THISRB=TCBRBP;            /* ADDRESS OF FIRST RB           */
@RF00751 L     @14,TCBRBP(,BLOKBASE)                               0753
         ST    @14,THISRB                                          0753
*         CALL RBIT;                /* PROCESS RBS                   */
         BAL   @14,RBIT                                            0754
*         THISTCB=NEXTCB;           /* POINT TO NEXT TCB             */
         ST    NEXTCB,THISTCB                                      0755
*       END;                                                       0756
*     ELSE                                                         0757
*       THISTCB=0;                  /* INDICATE END OF TCBS          */
         B     @RC00635                                            0757
@RF00635 SLR   @14,@14                                             0757
         ST    @14,THISTCB                                         0757
*   END;                                                           0758
@RC00635 DS    0H                                                  0758
@DE00610 L     @14,THISTCB                                         0758
         LTR   @14,@14                                             0758
         BZ    @DC00610                                            0758
         L     @14,ZZ2ZZ1P(,R9)                                    0758
         TM    ZZ1EVEP(@14),B'01000000'                            0758
         BZ    @DL00610                                            0758
@DC00610 DS    0H                                                  0759
*   END TCBIT;                                                     0759
@EL00002 DS    0H                                                  0759
@EF00002 DS    0H                                                  0759
@ER00002 LM    @14,@12,@SA00002                                    0759
         BR    @14                                                 0759
*                                                                  0760
*   /*****************************************************************/
*   /*                                                               */
*   /* RBIT: DISPLAY THIS TCBS RBS                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0760
*RBIT:                                                             0760
*   PROCEDURE;                                                     0760
RBIT     STM   @14,@12,@SA00003                                    0760
*   DO WHILE((THISRB^=0)&(THISRB^=THISTCB)&(ZZ1EVEP='0'B));/* DO TILL
*                                      END OF RB CHAIN FROM TCB      */
         B     @DE00761                                            0761
@DL00761 DS    0H                                                  0762
*     ESAUSYM='RB FRNT';                                           0762
         MVI   ESAUSYM+7,C' '                                      0762
         MVC   ESAUSYM+8(23),ESAUSYM+7                             0762
         MVC   ESAUSYM(7),@CC03069                                 0762
*     ESAUDTD='';                   /* NO STRUC DICT                 */
         MVI   ESAUDTD,C' '                                        0763
         MVC   ESAUDTD+1(30),ESAUDTD                               0763
*     CALL ACCESS(THISASID,THISRB,LENGTH(RBSIZE)+ADDR(RBSIZE)-ADDR(
*         RBSECT));                 /* GET PART OF RB                */
         LA    @14,THISASID                                        0764
         ST    @14,@AL00001                                        0764
         LA    @14,THISRB                                          0764
         ST    @14,@AL00001+4                                      0764
         LA    @14,RBSIZE(,BLOKBASE)                               0764
         AL    @14,@CF00069                                        0764
         SLR   @14,BLOKBASE                                        0764
         ST    @14,@AFTEMPS                                        0764
         LA    @14,@AFTEMPS                                        0764
         ST    @14,@AL00001+8                                      0764
         LA    @01,@AL00001                                        0764
         BAL   @14,ACCESS                                          0764
*     IF RF^=0 THEN                                                0765
         LTR   RF,RF                                               0765
         BNZ   @RT00765                                            0765
*       GO TO RBITOUT;              /* IF UNSUCCESSFUL, EXIT         */
*     THISRBSZ=(RBSIZE*8)-32;       /* GET SIZE OF RB                */
         LH    @14,RBSIZE(,BLOKBASE)                               0767
         SLA   @14,3                                               0767
         SL    @14,@CF00063                                        0767
         ST    @14,THISRBSZ                                        0767
*     ESAUSYM='RB      ';                                          0768
         MVI   ESAUSYM+8,C' '                                      0768
         MVC   ESAUSYM+9(22),ESAUSYM+8                             0768
         MVC   ESAUSYM(8),@CC03071                                 0768
*     ESAUDTD='RB';                 /* STRUCTURING DICTIONARY        */
         MVI   ESAUDTD+2,C' '                                      0769
         MVC   ESAUDTD+3(28),ESAUDTD+2                             0769
         MVC   ESAUDTD(2),@CC03072                                 0769
*     CALL ACCESS(THISASID,THISRB,THISRBSZ);/* GET RB                */
         LA    @14,THISASID                                        0770
         ST    @14,@AL00001                                        0770
         LA    @14,THISRB                                          0770
         ST    @14,@AL00001+4                                      0770
         LA    @14,THISRBSZ                                        0770
         ST    @14,@AL00001+8                                      0770
         LA    @01,@AL00001                                        0770
         BAL   @14,ACCESS                                          0770
*     IF RF^=0 THEN                                                0771
         LTR   RF,RF                                               0771
         BNZ   @RT00771                                            0771
*       GO TO RBITOUT;              /* UNSUCCESSFUL, EXIT            */
*     SAVELINK=RBLINKB;             /* SAVE FORWARD LINK             */
         L     SAVELINK,RBLINKB-1(,BLOKBASE)                       0773
         LA    SAVELINK,0(,SAVELINK)                               0773
*     DO;                           /* BLRCNVPC(THISRB) FROM(POINTER)
*                                      TO(CHARACTER)SET(IN82T1)REMARK
*                                      (CONVERT RB                 0774
*                                      ADDRESS)TR(ZZ1TRHEX)          */
*                                                                  0774
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT RB ADDRESS                                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0775
*       PTRPTR=THISRB;              /* SOURCE TO BIT/POINTER       0775
*                                      INTERMEDIATE                  */
         L     @14,THISRB                                          0775
         ST    @14,PTRPTR                                          0775
*       UNPK(IN82T1(1:LENGTH(IN82T1)-1),PTRBIT);/* BIT=>ZONED      0776
*                                      HEXADECIMAL                   */
         UNPK  IN82T1(7),PTRBIT(4)                                 0776
*       IN82T1(LENGTH(IN82T1):LENGTH(IN82T1))=PTRBIT(25:32);/* FINAL
*                                      ZONED HEXADECIMAL DIGIT       */
         MVC   IN82T1+7(1),PTRBIT+3                                0777
*       TR(IN82T1,ZZ1TRHEX);        /* ZONED HEXADECIMAL=>EBCDIC     */
         L     @14,ZZ2ZZ1P(,R9)                                    0778
         TR    IN82T1(8),ZZ1TRHEX(@14)                             0778
*     END;                          /* BLRCNVPC(THISRB) FROM(POINTER)
*                                      TO(CHARACTER)SET(IN82T1)REMARK
*                                      (CONVERT RB                 0779
*                                      ADDRESS)TR(ZZ1TRHEX)          */
*     IN81T1='';                    /* BLANK INSERT                  */
         MVI   IN81T1,C' '                                         0780
         MVC   IN81T1+1(7),IN81T1                                  0780
*     IF RBFTP='000'B THEN          /* SET FOR RB TYPE               */
         TM    RBFTP(BLOKBASE),B'11100000'                         0781
         BNZ   @RF00781                                            0781
*       IN81T1='P';                 /* PRB                           */
         MVI   IN81T1+1,C' '                                       0782
         MVC   IN81T1+2(6),IN81T1+1                                0782
         MVI   IN81T1,C'P'                                         0782
*     ELSE                                                         0783
*       IF RBFTP='011'B THEN                                       0783
         B     @RC00781                                            0783
@RF00781 TM    RBFTP(BLOKBASE),B'01100000'                         0783
         BNO   @RF00783                                            0783
         TM    RBFTP(BLOKBASE),B'10000000'                         0783
         BNZ   @RF00783                                            0783
*         IN81T1='TI';              /* TIOB                          */
         MVI   IN81T1+2,C' '                                       0784
         MVC   IN81T1+3(5),IN81T1+2                                0784
         MVC   IN81T1(2),@CC03076                                  0784
*       ELSE                                                       0785
*         IF RBFTP='010'B THEN                                     0785
         B     @RC00783                                            0785
@RF00783 TM    RBFTP(BLOKBASE),B'01000000'                         0785
         BNO   @RF00785                                            0785
         TM    RBFTP(BLOKBASE),B'10100000'                         0785
         BNZ   @RF00785                                            0785
*           IN81T1='I';             /* IRB                           */
         MVI   IN81T1+1,C' '                                       0786
         MVC   IN81T1+2(6),IN81T1+1                                0786
         MVI   IN81T1,C'I'                                         0786
*         ELSE                                                     0787
*           IF RBFTP='100'B THEN                                   0787
         B     @RC00785                                            0787
@RF00785 TM    RBFTP(BLOKBASE),B'10000000'                         0787
         BNO   @RF00787                                            0787
         TM    RBFTP(BLOKBASE),B'01100000'                         0787
         BNZ   @RF00787                                            0787
*             IN81T1='SI';          /* SIRB                          */
         MVI   IN81T1+2,C' '                                       0788
         MVC   IN81T1+3(5),IN81T1+2                                0788
         MVC   IN81T1(2),@CC03080                                  0788
*           ELSE                                                   0789
*             IF RBFTP='110'B THEN                                 0789
         B     @RC00787                                            0789
@RF00787 TM    RBFTP(BLOKBASE),B'11000000'                         0789
         BNO   @RF00789                                            0789
         TM    RBFTP(BLOKBASE),B'00100000'                         0789
         BNZ   @RF00789                                            0789
*               IN81T1='SV';        /* SVRB                          */
         MVI   IN81T1+2,C' '                                       0790
         MVC   IN81T1+3(5),IN81T1+2                                0790
         MVC   IN81T1(2),@CC03082                                  0790
*             ELSE                                                 0791
*               IN81T1='??';        /* UNKNOWN RB                    */
         B     @RC00789                                            0791
@RF00789 MVI   IN81T1+2,C' '                                       0791
         MVC   IN81T1+3(5),IN81T1+2                                0791
         MVC   IN81T1(2),@CC03083                                  0791
*     DO IN81L=5 TO 12 WHILE(IN81T1(IN81L-3)^=' ');/* SET LENGTH     */
@RC00789 DS    0H                                                  0792
@RC00787 DS    0H                                                  0792
@RC00785 DS    0H                                                  0792
@RC00783 DS    0H                                                  0792
@RC00781 LA    @14,5                                               0792
         STH   @14,IN81L                                           0792
@DL00792 LA    @04,IN81T1-4(@14)                                   0792
         CLI   0(@04),C' '                                         0792
         BE    @DC00792                                            0792
*     END;                                                         0793
         AL    @14,@CF00045                                        0793
         STH   @14,IN81L                                           0793
         C     @14,@CF00032                                        0793
         BNH   @DL00792                                            0793
@DC00792 DS    0H                                                  0794
*     IN81O=ADDR(M020T2)-ADDR(M020T);/* SET                          */
         MVC   IN81O(2),@CH00531                                   0794
*     IN82O=ADDR(M020T3)-ADDR(M020T);/* OFFSETS                      */
         MVC   IN82O(2),@CH00055                                   0795
*     OLDN=3;                       /* 2 INSERTS                     */
         MVC   OLDN(4),@CF00154                                    0796
*     IN82L=12;                     /* LENGTH OF INSERT              */
         MVC   IN82L(2),@CH00032                                   0797
*     OLDP(1)=ADDR(M020);           /* POINT                         */
         LA    @14,M020                                            0798
         ST    @14,OLDP                                            0798
*     OLDP(2)=ADDR(IN81);           /* TO MSG                        */
         LA    @14,IN81                                            0799
         ST    @14,OLDP+4                                          0799
*     OLDP(3)=ADDR(IN82);           /* SEGMENTS                      */
         LA    @14,IN82                                            0800
         ST    @14,OLDP+8                                          0800
*     IF MSGIND=0 THEN                                             0801
         LTR   MSGIND,MSGIND                                       0801
         BNZ   @RF00801                                            0801
*       CALL BLSUPUTO(ZZ2,OLD);     /* OUTPUT MSG                    */
         ST    R9,@AL00001                                         0802
         LA    @14,OLD                                             0802
         ST    @14,@AL00001+4                                      0802
         L     @04,ZZ2BVTP(,R9)                                    0802
         L     @15,BVTPUTOP(,@04)                                  0802
         LA    @01,@AL00001                                        0802
         BALR  @14,@15                                             0802
*     IN81L=12;                     /* RESET LENGTH                  */
@RF00801 MVC   IN81L(2),@CH00032                                   0803
*     BODYHLDR='';                  /* BLANK BUFFER                  */
         MVI   BODYHLDR,C' '                                       0804
         MVC   BODYHLDR+1(57),BODYHLDR                             0804
*     BODY='';                      /* BLANK MSG                     */
         MVI   BODY,C' '                                           0805
         MVC   BODY+1(78),BODY                                     0805
*     DO;                           /* BLRCNVPC(RBCDE) FROM(POINTER)T
*                                      O(CHARACTER)SET(ITEM1)REMARK(C
*                                      ONVERT RBCDE)TR(ZZ1TRHEX)     */
*                                                                  0806
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT RBCDE                                             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0807
*       PTRPTR=RBCDE;               /* SOURCE TO BIT/POINTER       0807
*                                      INTERMEDIATE                  */
         L     @14,RBCDE(,BLOKBASE)                                0807
         ST    @14,PTRPTR                                          0807
*       UNPK(ITEM1(1:LENGTH(ITEM1)-1),PTRBIT);/* BIT=>ZONED        0808
*                                      HEXADECIMAL                   */
         UNPK  ITEM1(7),PTRBIT(4)                                  0808
*       ITEM1(LENGTH(ITEM1):LENGTH(ITEM1))=PTRBIT(25:32);/* FINAL  0809
*                                      ZONED HEXADECIMAL DIGIT       */
         MVC   ITEM1+7(1),PTRBIT+3                                 0809
*       TR(ITEM1,ZZ1TRHEX);         /* ZONED HEXADECIMAL=>EBCDIC     */
         L     @14,ZZ2ZZ1P(,R9)                                    0810
         TR    ITEM1(8),ZZ1TRHEX(@14)                              0810
*     END;                          /* BLRCNVPC(RBCDE) FROM(POINTER)T
*                                      O(CHARACTER)SET(ITEM1)REMARK(C
*                                      ONVERT RBCDE)TR(ZZ1TRHEX)     */
*     DO;                           /* BLRCNVXC(RBOPSW(1:4)) FROM(BS)
*                                      TO(CHARACTER)SET(ITEM2)REMARK(
*                                      CONVERT RBOPSW)TR(ZZ1TRHEX)   */
*                                                                  0812
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT RBOPSW                                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0813
*       UNPK(ITEM2(1:LENGTH(ITEM2)-1),RBOPSW(1:4));/* BIT=>ZONED   0813
*                                      HEXADECIMAL                   */
         UNPK  ITEM2(7),RBOPSW(4,BLOKBASE)                         0813
*       ITEM2(LENGTH(ITEM2):LENGTH(ITEM2))=RBOPSW(4:4);/* FINAL ZONED
*                                      HEXADECIMAL DIGIT             */
         MVC   ITEM2+7(1),RBOPSW+3(BLOKBASE)                       0814
*       TR(ITEM2,ZZ1TRHEX);         /* ZONED HEXADECIMAL=>EBCDIC     */
         TR    ITEM2(8),ZZ1TRHEX(@14)                              0815
*     END;                          /* BLRCNVXC(RBOPSW(1:4)) FROM(BS)
*                                      TO(CHARACTER)SET(ITEM2)REMARK(
*                                      CONVERT RBOPSW)TR(ZZ1TRHEX)   */
*     DO;                           /* BLRCNVXC(RBOPSW(5:8)) FROM(BS)
*                                      TO(CHARACTER)SET(ITEM3)REMARK(
*                                      CONVERT RBOPSW)TR(ZZ1TRHEX)   */
*                                                                  0817
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT RBOPSW                                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0818
*       UNPK(ITEM3(1:LENGTH(ITEM3)-1),RBOPSW(5:8));/* BIT=>ZONED   0818
*                                      HEXADECIMAL                   */
         UNPK  ITEM3(7),RBOPSW+4(4,BLOKBASE)                       0818
*       ITEM3(LENGTH(ITEM3):LENGTH(ITEM3))=RBOPSW(8:8);/* FINAL ZONED
*                                      HEXADECIMAL DIGIT             */
         MVC   ITEM3+7(1),RBOPSW+7(BLOKBASE)                       0819
*       TR(ITEM3,ZZ1TRHEX);         /* ZONED HEXADECIMAL=>EBCDIC     */
         TR    ITEM3(8),ZZ1TRHEX(@14)                              0820
*     END;                          /* BLRCNVXC(RBOPSW(5:8)) FROM(BS)
*                                      TO(CHARACTER)SET(ITEM3)REMARK(
*                                      CONVERT RBOPSW)TR(ZZ1TRHEX)   */
*     DO;                           /* BLRCNVPC(RBLINK) FROM(POINTER)
*                                      TO(CHARACTER)SET(ITEM4)REMARK(
*                                      CONVERT RBLINK)TR(ZZ1TRHEX)   */
*                                                                  0822
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT RBLINK                                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0823
*       PTRPTR=RBLINK;              /* SOURCE TO BIT/POINTER       0823
*                                      INTERMEDIATE                  */
         L     @04,RBLINK(,BLOKBASE)                               0823
         ST    @04,PTRPTR                                          0823
*       UNPK(ITEM4(1:LENGTH(ITEM4)-1),PTRBIT);/* BIT=>ZONED        0824
*                                      HEXADECIMAL                   */
         UNPK  ITEM4(7),PTRBIT(4)                                  0824
*       ITEM4(LENGTH(ITEM4):LENGTH(ITEM4))=PTRBIT(25:32);/* FINAL  0825
*                                      ZONED HEXADECIMAL DIGIT       */
         MVC   ITEM4+7(1),PTRBIT+3                                 0825
*       TR(ITEM4,ZZ1TRHEX);         /* ZONED HEXADECIMAL=>EBCDIC     */
         TR    ITEM4(8),ZZ1TRHEX(@14)                              0826
*     END;                          /* BLRCNVPC(RBLINK) FROM(POINTER)
*                                      TO(CHARACTER)SET(ITEM4)REMARK(
*                                      CONVERT RBLINK)TR(ZZ1TRHEX)   */
*     NAME1='FCDE';                 /* SET                           */
         MVC   NAME1(4),@CC03084                                   0828
*     NAME2='OPSW';                 /* OUTPUT                        */
         MVC   NAME2(4),@CC03085                                   0829
*     NAME3='';                     /* LINE                          */
         MVI   NAME3,C' '                                          0830
         MVC   NAME3+1(3),NAME3                                    0830
*     NAME4='WTLK';                 /* LABELS                        */
         MVC   NAME4(4),@CC03086                                   0831
*     BODY(8:65)=BODYHLDR;          /* MOVE TO OUTPUT LINE           */
         MVC   BODY+7(58),BODYHLDR                                 0832
*     IF MSGIND=0 THEN                                             0833
         LTR   MSGIND,MSGIND                                       0833
         BNZ   @RF00833                                            0833
*       CALL BLSUPUTV(ZZ2,OUTLINE); /* OUTPUT LINE                   */
         ST    R9,@AL00001                                         0834
         LA    @14,OUTLINE                                         0834
         ST    @14,@AL00001+4                                      0834
         L     @04,ZZ2BVTP(,R9)                                    0834
         L     @15,BVTPUTVP(,@04)                                  0834
         LA    @01,@AL00001                                        0834
         BALR  @14,@15                                             0834
*     BODYHLDR='';                  /* BLANK BUFFER                  */
@RF00833 MVI   BODYHLDR,C' '                                       0835
         MVC   BODYHLDR+1(57),BODYHLDR                             0835
*     BODY='';                      /* BLANK OUTPUT LINE             */
         MVI   BODY,C' '                                           0836
         MVC   BODY+1(78),BODY                                     0836
*     SAVECDEA=RBCDE&ZEROFOX;       /* SAVE CDE ADDRESS              */
         L     @14,RBCDE(,BLOKBASE)                                0837
         N     @14,@CF02953                                        0837
         ST    @14,SAVECDEA                                        0837
*     IF RBTRSVRB='1'B THEN                                        0838
         TM    RBTRSVRB(BLOKBASE),B'00010000'                      0838
         BNO   @RF00838                                            0838
*       SAVECDEA=0;                 /* DONT PROCESS LPDES            */
         SLR   @14,@14                                             0839
         ST    @14,SAVECDEA                                        0839
*     ESAUSYM='RB PREFX';                                          0840
@RF00838 MVI   ESAUSYM+8,C' '                                      0840
         MVC   ESAUSYM+9(22),ESAUSYM+8                             0840
         MVC   ESAUSYM(8),@CC03087                                 0840
*     ESAUDTD='';                   /* NO STRUCTURING DICTIONARY     */
         MVI   ESAUDTD,C' '                                        0841
         MVC   ESAUDTD+1(30),ESAUDTD                               0841
*     CALL ACCESS(THISASID,THISRB-4,4);                            0842
         LA    @14,THISASID                                        0842
         ST    @14,@AL00001                                        0842
         L     @14,THISRB                                          0842
         SL    @14,@CF00042                                        0842
         ST    @14,@AFTEMPS                                        0842
         LA    @14,@AFTEMPS                                        0842
         ST    @14,@AL00001+4                                      0842
         LA    @14,@CF00042                                        0842
         ST    @14,@AL00001+8                                      0842
         LA    @01,@AL00001                                        0842
         BAL   @14,ACCESS                                          0842
*     DO;                           /* BLRCNVPC(BLOCKF) FROM(POINTER)
*                                      TO(CHARACTER)SET(ITEM1)REMARK(
*                                      CONVERT WLIC)TR(ZZ1TRHEX)     */
*                                                                  0843
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT WLIC                                              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0844
*       PTRPTR=BLOCKF;              /* SOURCE TO BIT/POINTER       0844
*                                      INTERMEDIATE                  */
         L     @14,BLOCKF(,BLOKBASE)                               0844
         ST    @14,PTRPTR                                          0844
*       UNPK(ITEM1(1:LENGTH(ITEM1)-1),PTRBIT);/* BIT=>ZONED        0845
*                                      HEXADECIMAL                   */
         UNPK  ITEM1(7),PTRBIT(4)                                  0845
*       ITEM1(LENGTH(ITEM1):LENGTH(ITEM1))=PTRBIT(25:32);/* FINAL  0846
*                                      ZONED HEXADECIMAL DIGIT       */
         MVC   ITEM1+7(1),PTRBIT+3                                 0846
*       TR(ITEM1,ZZ1TRHEX);         /* ZONED HEXADECIMAL=>EBCDIC     */
         L     @14,ZZ2ZZ1P(,R9)                                    0847
         TR    ITEM1(8),ZZ1TRHEX(@14)                              0847
*     END;                          /* BLRCNVPC(BLOCKF) FROM(POINTER)
*                                      TO(CHARACTER)SET(ITEM1)REMARK(
*                                      CONVERT WLIC)TR(ZZ1TRHEX)     */
*     IF SAVECDEA^=0 THEN                                          0849
         L     @14,SAVECDEA                                        0849
         LTR   @14,@14                                             0849
         BZ    @RF00849                                            0849
*       DO;                         /* IF CDE ADDRESS VALID          */
*         ESAUSYM='CDE     ';                                      0851
         MVI   ESAUSYM+8,C' '                                      0851
         MVC   ESAUSYM+9(22),ESAUSYM+8                             0851
         MVC   ESAUSYM(8),@CC03088                                 0851
*         ESAUDTD='CDE';            /* STRUCTURING DICTIONARY        */
         MVI   ESAUDTD+3,C' '                                      0852
         MVC   ESAUDTD+4(27),ESAUDTD+3                             0852
         MVC   ESAUDTD(3),@CC03089                                 0852
*         CALL ACCESS(THISASID,SAVECDEA,LENGTH(CDENTRY));          0853
         LA    @14,THISASID                                        0853
         ST    @14,@AL00001                                        0853
         LA    @14,SAVECDEA                                        0853
         ST    @14,@AL00001+4                                      0853
         LA    @14,@CF00063                                        0853
         ST    @14,@AL00001+8                                      0853
         LA    @01,@AL00001                                        0853
         BAL   @14,ACCESS                                          0853
*         IF RF^=0 THEN                                            0854
         SLR   @14,@14                                             0854
         CR    RF,@14                                              0854
         BE    @RF00854                                            0854
*           DO;                     /* NO CDE AVAILABLE              */
*             SAVECDEA=0;           /* INVALIDATE ADDRESS            */
         ST    @14,SAVECDEA                                        0856
*             ITEM2='';             /* BLANK CDE NAME IN MESSAGE     */
         MVI   ITEM2,C' '                                          0857
         MVC   ITEM2+1(7),ITEM2                                    0857
*           END;                                                   0858
*         ELSE                                                     0859
*           ITEM2=CDNAME;           /* MOVE NAME TO CDE              */
         B     @RC00854                                            0859
@RF00854 MVC   ITEM2(8),CDNAME(BLOKBASE)                           0859
*       END;                                                       0860
@RC00854 DS    0H                                                  0861
*     NAME1='WLIC';                 /* SET OUTPUT LINE               */
@RF00849 MVC   NAME1(4),@CC03090                                   0861
*     NAME2='CDNM';                 /* LABELS                        */
         MVC   NAME2(4),@CC03091                                   0862
*     BODY(8:65)=BODYHLDR;          /* MOVE MSG TEXT                 */
         MVC   BODY+7(58),BODYHLDR                                 0863
*     IF MSGIND=0 THEN                                             0864
         LTR   MSGIND,MSGIND                                       0864
         BNZ   @RF00864                                            0864
*       CALL BLSUPUTV(ZZ2,OUTLINE); /* OUTPUT LINE                   */
         ST    R9,@AL00001                                         0865
         LA    @14,OUTLINE                                         0865
         ST    @14,@AL00001+4                                      0865
         L     @04,ZZ2BVTP(,R9)                                    0865
         L     @15,BVTPUTVP(,@04)                                  0865
         LA    @01,@AL00001                                        0865
         BALR  @14,@15                                             0865
*     THISRB=SAVELINK;              /* RESTORE RB FORWARD POINTER    */
@RF00864 ST    SAVELINK,THISRB                                     0866
*     IF SAVECDEA=0 THEN                                           0867
         L     @14,SAVECDEA                                        0867
         LTR   @14,@14                                             0867
         BZ    @RT00867                                            0867
*       GO TO NOCDEQ;               /* IF CDE ADDRESS INVALID        */
*                                                                  0868
*     /***************************************************************/
*     /*                                                             */
*     /* CREATE EQUATES FOR CDE, XL, AND MODULE                      */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0869
*     ESAUSYM='';                                                  0869
         MVI   ESAUSYM,C' '                                        0869
         MVC   ESAUSYM+1(30),ESAUSYM                               0869
*     ESAUSYM(1:3)='CDE';                                          0870
         MVC   ESAUSYM(3),@CC03089                                 0870
*     ESAUSYM(4:11)=CDNAME;         /* MOVE NAME                     */
         MVC   ESAUSYM+3(8),CDNAME(BLOKBASE)                       0871
*     ESAUDTY='M';                  /* STRUCTURE                     */
         MVI   ESAUDTY,C'M'                                        0872
*     ESAUDTD='CDE';                /* DICT NAME                     */
         MVI   ESAUDTD+3,C' '                                      0873
         MVC   ESAUDTD+4(27),ESAUDTD+3                             0873
         MVC   ESAUDTD(3),@CC03089                                 0873
*     ESAUDLE=LENGTH(CDENTRY);      /* LENGTH                        */
         MVC   ESAUDLE(4),@CF00063                                 0874
*     CALL BLSRESAR(ZZ2,ESAU);      /* ADD TO EQUATE DATASET         */
         ST    R9,@AL00001                                         0875
         LA    @14,ESAU                                            0875
         ST    @14,@AL00001+4                                      0875
         L     @04,ZZ2RVTP(,R9)                                    0875
         L     @15,RVTESARP(,@04)                                  0875
         LA    @01,@AL00001                                        0875
         BALR  @14,@15                                             0875
*     MAJRNAME=CDNAME;              /* SAVE MAJOR NAME               */
         MVC   MAJRNAME(8),CDNAME(BLOKBASE)                        0876
*     MAJRENTP=CDENTPT;             /* SAVE MAJOR ENTRY POINT        */
         L     MAJRENTP,CDENTPT(,BLOKBASE)                         0877
*     FLAGMIN='0'B;                 /* INDICATE MAJOR                */
         NI    FLAGMIN,B'11011111'                                 0878
*     IF CDMIN='1'B THEN                                           0879
         TM    CDMIN(BLOKBASE),B'00000100'                         0879
         BNO   @RF00879                                            0879
*       DO;                         /* MINOR CDE                     */
*         FLAGMIN='1'B;             /* INDICATE MINOR PROCESSED      */
         OI    FLAGMIN,B'00100000'                                 0881
*         ESAUSYM='';                                              0882
         MVI   ESAUSYM,C' '                                        0882
         MVC   ESAUSYM+1(30),ESAUSYM                               0882
*         ESAUSYM(1:3)='CDE';                                      0883
         MVC   ESAUSYM(3),@CC03089                                 0883
*         ESAUSYM(4:11)=CDNAME;     /* MOVE NAME                     */
         MVC   ESAUSYM+3(8),CDNAME(BLOKBASE)                       0884
*         ESAUDTY='M';              /* STRUCTURE                     */
         MVI   ESAUDTY,C'M'                                        0885
*         ESAUDTD='CDE';            /* DICT NAME                     */
         MVI   ESAUDTD+3,C' '                                      0886
         MVC   ESAUDTD+4(27),ESAUDTD+3                             0886
         MVC   ESAUDTD(3),@CC03089                                 0886
*         CALL BLSRESAR(ZZ2,ESAU);  /* ADD TO EQUATE DATASET         */
         ST    R9,@AL00001                                         0887
         LA    @14,ESAU                                            0887
         ST    @14,@AL00001+4                                      0887
         L     @04,ZZ2RVTP(,R9)                                    0887
         L     @15,RVTESARP(,@04)                                  0887
         LA    @01,@AL00001                                        0887
         BALR  @14,@15                                             0887
*         MINRNAME=CDNAME;          /* SAVE MINOR NAME               */
         MVC   MINRNAME(8),CDNAME(BLOKBASE)                        0888
*         MINRENTP=CDENTPT;         /* SAVE MINOR ENTRY POINT        */
         L     @14,CDENTPT(,BLOKBASE)                              0889
         ST    @14,MINRENTP                                        0889
*         ESAULAD=CDXLMJP;          /* POINT TO MAJOR CDE            */
         L     @14,CDXLMJP(,BLOKBASE)                              0890
         ST    @14,ESAULAD                                         0890
*         ESAUSYM='MAJOR CDE';                                     0891
         MVI   ESAUSYM+9,C' '                                      0891
         MVC   ESAUSYM+10(21),ESAUSYM+9                            0891
         MVC   ESAUSYM(9),@CC03093                                 0891
*         IF ESAULAD=0 THEN                                        0892
         LTR   @14,@14                                             0892
         BZ    @RT00892                                            0892
*           GO TO NOCDEQ;           /* IF BAD POINTER                */
*         CALL BLSRACC(ZZ2,ESAU,BLOCK);/* GET MAJOR                  */
         ST    R9,@AL00001                                         0894
         LA    @14,ESAU                                            0894
         ST    @14,@AL00001+4                                      0894
         ST    BLOKBASE,@AL00001+8                                 0894
         L     @04,ZZ2RVTP(,R9)                                    0894
         L     @15,RVTRACCP(,@04)                                  0894
         LA    @01,@AL00001                                        0894
         BALR  @14,@15                                             0894
*         IF RF^=0 THEN                                            0895
         SLR   @14,@14                                             0895
         CR    RF,@14                                              0895
         BNE   @RT00895                                            0895
*           GO TO NOCDEQ;           /* UNSUCCESSFUL                  */
*         MAJRNAME=CDNAME;          /* SAVE MAJOR NAME               */
         MVC   MAJRNAME(8),CDNAME(BLOKBASE)                        0897
*         MAJRENTP=CDENTPT;         /* SAVE MAJOR ENTRY POINT        */
         L     MAJRENTP,CDENTPT(,BLOKBASE)                         0898
*         IN81L=12;                 /* LENGTH OF INSERT              */
         MVC   IN81L(2),@CH00032                                   0899
*         IN81O=ADDR(M086T2)-ADDR(M086T);                          0900
         MVC   IN81O(2),@CH03122                                   0900
*         IN81T1=CDNAME;            /* NEW NAME                      */
         MVC   IN81T1(8),CDNAME(BLOKBASE)                          0901
*         OLDN=2;                                                  0902
         MVC   OLDN(4),@CF00069                                    0902
*         OLDP(1)=ADDR(M086);       /* 1ST SEG                       */
         LA    @04,M086                                            0903
         ST    @04,OLDP                                            0903
*         OLDP(2)=ADDR(IN81);       /* 2ND SEG                       */
         LA    @04,IN81                                            0904
         ST    @04,OLDP+4                                          0904
*         IF MSGIND=0 THEN                                         0905
         CR    MSGIND,@14                                          0905
         BNE   @RF00905                                            0905
*           CALL BLSUPUTO(ZZ2,OLD);                                0906
         ST    R9,@AL00001                                         0906
         LA    @14,OLD                                             0906
         ST    @14,@AL00001+4                                      0906
         L     @04,ZZ2BVTP(,R9)                                    0906
         L     @15,BVTPUTOP(,@04)                                  0906
         LA    @01,@AL00001                                        0906
         BALR  @14,@15                                             0906
*         ESAUSYM='';                                              0907
@RF00905 MVI   ESAUSYM,C' '                                        0907
         MVC   ESAUSYM+1(30),ESAUSYM                               0907
*         ESAUSYM(1:3)='CDE';                                      0908
         MVC   ESAUSYM(3),@CC03089                                 0908
*         ESAUSYM(4:11)=CDNAME;     /* MOVE NAME                     */
         MVC   ESAUSYM+3(8),CDNAME(BLOKBASE)                       0909
*         ESAUDTY='M';              /* STRUCTURE                     */
         MVI   ESAUDTY,C'M'                                        0910
*         ESAUDTD='CDE';            /* DICT NAME                     */
         MVI   ESAUDTD+3,C' '                                      0911
         MVC   ESAUDTD+4(27),ESAUDTD+3                             0911
         MVC   ESAUDTD(3),@CC03089                                 0911
*         CALL BLSRESAR(ZZ2,ESAU);  /* ADD TO EQUATE DATASET         */
         ST    R9,@AL00001                                         0912
         LA    @14,ESAU                                            0912
         ST    @14,@AL00001+4                                      0912
         L     @04,ZZ2RVTP(,R9)                                    0912
         L     @15,RVTESARP(,@04)                                  0912
         LA    @01,@AL00001                                        0912
         BALR  @14,@15                                             0912
*       END;                                                       0913
*     ESAUSYM='';                                                  0914
@RF00879 MVI   ESAUSYM,C' '                                        0914
         MVC   ESAUSYM+1(30),ESAUSYM                               0914
*     ESAUSYM(1:2)='XL';                                           0915
         MVC   ESAUSYM(2),@CC03095                                 0915
*     ESAUSYM(3:10)=CDNAME;         /* EXTENT LIST NAME              */
         MVC   ESAUSYM+2(8),CDNAME(BLOKBASE)                       0916
*     ESAUDTD='XTLST';              /* DICT NAME                     */
         MVI   ESAUDTD+5,C' '                                      0917
         MVC   ESAUDTD+6(25),ESAUDTD+5                             0917
         MVC   ESAUDTD(5),@CC03096                                 0917
*     ESAULAD=CDXLMJP;              /* EXTENT LIST ADDRESS           */
         L     @14,CDXLMJP(,BLOKBASE)                              0918
         ST    @14,ESAULAD                                         0918
*     ESAUDLE=LENGTH(XTLST);        /* LENGTH OF EXTENT LIST         */
         MVC   ESAUDLE(4),@CF00055                                 0919
*     CALL BLSRESAR(ZZ2,ESAU);      /* ADD TO EQUATE DATASET         */
         ST    R9,@AL00001                                         0920
         LA    @14,ESAU                                            0920
         ST    @14,@AL00001+4                                      0920
         L     @04,ZZ2RVTP(,R9)                                    0920
         L     @15,RVTESARP(,@04)                                  0920
         LA    @01,@AL00001                                        0920
         BALR  @14,@15                                             0920
*     IF ESAULAD=0 THEN                                            0921
         L     @14,ESAULAD                                         0921
         LTR   @14,@14                                             0921
         BZ    @RT00921                                            0921
*       GO TO NOCDEQ;               /* IF BAD POINTER                */
*     CALL BLSRACC(ZZ2,ESAU,BLOCK); /* GET EXTENT LIST               */
         ST    R9,@AL00001                                         0923
         LA    @14,ESAU                                            0923
         ST    @14,@AL00001+4                                      0923
         ST    BLOKBASE,@AL00001+8                                 0923
         L     @04,ZZ2RVTP(,R9)                                    0923
         L     @15,RVTRACCP(,@04)                                  0923
         LA    @01,@AL00001                                        0923
         BALR  @14,@15                                             0923
*     IF RF^=0 THEN                                                0924
         LTR   RF,RF                                               0924
         BNZ   @RT00924                                            0924
*       GO TO NOCDEQ;                                              0925
*     ESAUSYM=MAJRNAME;             /* MOVE NAME                     */
         MVI   ESAUSYM+8,C' '                                      0926
         MVC   ESAUSYM+9(22),ESAUSYM+8                             0926
         MVC   ESAUSYM(8),MAJRNAME                                 0926
*     ESAULAD=MAJRENTP;             /* ADDRESS OF MODULE             */
         ST    MAJRENTP,ESAULAD                                    0927
*     ESAUDTY='L';                  /* MODULE                        */
         MVI   ESAUDTY,C'L'                                        0928
*     ESAUDTD=ESAUSYM;              /* DICTIONARY                    */
         MVC   ESAUDTD(31),ESAUSYM                                 0929
*     XTLMSBLN=XTLMSBLN&ZEROFOX;    /* LENGTH OF MODULE              */
         L     @14,XTLMSBLN-1(,BLOKBASE)                           0930
         LA    @14,0(,@14)                                         0930
         N     @14,@CF02953                                        0930
         STCM  @14,7,XTLMSBLN(BLOKBASE)                            0930
*     ESAUDLE=XTLMSBLN-(MAJRENTP-XTLMSBAD);/* LEN IS FROM EP TO END  */
         LR    @04,MAJRENTP                                        0931
         L     @03,XTLMSBAD-1(,BLOKBASE)                           0931
         LA    @03,0(,@03)                                         0931
         SLR   @04,@03                                             0931
         SLR   @14,@04                                             0931
         ST    @14,ESAUDLE                                         0931
*     CALL BLSRESAR(ZZ2,ESAU);      /* ADD TO DS                     */
         ST    R9,@AL00001                                         0932
         LA    @14,ESAU                                            0932
         ST    @14,@AL00001+4                                      0932
         L     @04,ZZ2RVTP(,R9)                                    0932
         L     @15,RVTESARP(,@04)                                  0932
         LA    @01,@AL00001                                        0932
         BALR  @14,@15                                             0932
*     IF FLAGMIN='1'B THEN                                         0933
         TM    FLAGMIN,B'00100000'                                 0933
         BNO   @RF00933                                            0933
*       DO;                         /* MINOR WAS PROCESSED           */
*         ESAUSYM=MINRNAME;         /* MOVE NAME                     */
         MVI   ESAUSYM+8,C' '                                      0935
         MVC   ESAUSYM+9(22),ESAUSYM+8                             0935
         MVC   ESAUSYM(8),MINRNAME                                 0935
*         ESAULAD=MINRENTP;         /* ADDRESS OF MODULE             */
         L     @14,MINRENTP                                        0936
         ST    @14,ESAULAD                                         0936
*         ESAUDTY='L';              /* MODULE                        */
         MVI   ESAUDTY,C'L'                                        0937
*         ESAUDTD=ESAUSYM;          /* DICTIONARY                    */
         MVC   ESAUDTD(31),ESAUSYM                                 0938
*         XTLMSBLN=XTLMSBLN&ZEROFOX;/* LENGTH OF MODULE              */
         L     @04,XTLMSBLN-1(,BLOKBASE)                           0939
         LA    @04,0(,@04)                                         0939
         N     @04,@CF02953                                        0939
         STCM  @04,7,XTLMSBLN(BLOKBASE)                            0939
*         ESAUDLE=XTLMSBLN-(MINRENTP-XTLMSBAD);/* LEN IS FROM EP TO
*                                      END                           */
         L     @03,XTLMSBAD-1(,BLOKBASE)                           0940
         LA    @03,0(,@03)                                         0940
         SLR   @14,@03                                             0940
         SLR   @04,@14                                             0940
         ST    @04,ESAUDLE                                         0940
*         CALL BLSRESAR(ZZ2,ESAU);  /* ADD TO DS                     */
         ST    R9,@AL00001                                         0941
         LA    @14,ESAU                                            0941
         ST    @14,@AL00001+4                                      0941
         L     @04,ZZ2RVTP(,R9)                                    0941
         L     @15,RVTESARP(,@04)                                  0941
         LA    @01,@AL00001                                        0941
         BALR  @14,@15                                             0941
*       END;                                                       0942
*NOCDEQ:                                                           0943
*     ESAUDTY='M';                  /* RESET TO IND STRUCTURE        */
@RF00933 DS    0H                                                  0943
NOCDEQ   MVI   ESAUDTY,C'M'                                        0943
*     ESAUDTD='';                   /* BLANK DICTIONARY              */
         MVI   ESAUDTD,C' '                                        0944
         MVC   ESAUDTD+1(30),ESAUDTD                               0944
*     ESAUSYM='';                   /* BLANK SYMBOL                  */
         MVI   ESAUSYM,C' '                                        0945
         MVC   ESAUSYM+1(30),ESAUSYM                               0945
*   END;                                                           0946
@DE00761 L     @14,THISRB                                          0946
         LTR   @14,@14                                             0946
         BZ    @DC00761                                            0946
         C     @14,THISTCB                                         0946
         BE    @DC00761                                            0946
         L     @14,ZZ2ZZ1P(,R9)                                    0946
         TM    ZZ1EVEP(@14),B'01000000'                            0946
         BZ    @DL00761                                            0946
@DC00761 DS    0H                                                  0947
*RBITOUT:                                                          0947
*   END RBIT;                                                      0947
@EL00003 DS    0H                                                  0947
@EF00003 DS    0H                                                  0947
@ER00003 LM    @14,@12,@SA00003                                    0947
         BR    @14                                                 0947
*                                                                  0948
*/********************************************************************/
*/*                                                                  */
*/* ACCESS--OBTAIN INFORMATION FROM DUMP                             */
*/*                                                                  */
*/********************************************************************/
*                                                                  0948
*ACCESS:                                                           0948
*   PROCEDURE(A,B,C);               /* ASID, ADDRESS, LENGTH         */
ACCESS   STM   @14,@12,@SA00004                                    0948
         MVC   @PC00004(12),0(@01)                                 0948
*   ESAUAS2=A;                      /* ASID                          */
         L     @14,@PC00004                                        0949
         L     @14,A(,@14)                                         0949
         ST    @14,ESAUAS2                                         0949
*   IF ESAUAS2=0 THEN                                              0950
         LTR   @14,@14                                             0950
         BNZ   @RF00950                                            0950
*     ESAUAS2=ZZ6DQ2;               /* USE CURRENT ASID IF COMMON    */
         L     @14,ZZ2AZZ6P(,R9)                                   0951
         L     @14,ZZ6DQ2(,@14)                                    0951
         ST    @14,ESAUAS2                                         0951
*   ESAULAD=B;                      /* ADDRESS                       */
@RF00950 L     @14,@PC00004+4                                      0952
         L     @14,B(,@14)                                         0952
         ST    @14,ESAULAD                                         0952
*   ESAUDLE=C;                      /* LENGTH                        */
         L     @14,@PC00004+8                                      0953
         L     @14,C(,@14)                                         0953
         ST    @14,ESAUDLE                                         0953
*   ESAUAST=ZZZASTCV;               /* VIRTUAL                       */
         MVC   ESAUAST(2),@CC00076                                 0954
*   ESAUAS1=ZZ6DQ1;                 /* CPU                           */
         L     @14,ZZ2AZZ6P(,R9)                                   0955
         L     @14,ZZ6DQ1(,@14)                                    0955
         ST    @14,ESAUAS1                                         0955
*   IF ESAUDTD(1:3)='TCB'×ESAUDTD(1:4)='ASCB'×ESAUDTD(1:4)='ASXB' THEN
         CLC   ESAUDTD(3),@CC03034                                 0956
         BE    @RT00956                                            0956
         CLC   ESAUDTD(4),@CC03016                                 0956
         BE    @RT00956                                            0956
         CLC   ESAUDTD(4),@CC03035                                 0956
         BNE   @RF00956                                            0956
@RT00956 DS    0H                                                  0957
*     DO;                                                          0957
*       ESAUDTY='M';                /* STRUCTURE                     */
         MVI   ESAUDTY,C'M'                                        0958
*       DESCA=ESAUD;                /* SAVE ATTRIBUTES               */
         MVC   DESCA(60),ESAUD                                     0959
*       CALL BLSRSAGU(ZZ2,SAAU,ESAU);/* VALIDATE CONTROL BLOCK       */
         ST    R9,@AL00001                                         0960
         LA    @14,SAAU                                            0960
         ST    @14,@AL00001+4                                      0960
         LA    @14,ESAU                                            0960
         ST    @14,@AL00001+8                                      0960
         L     @06,ZZ2RVTP(,R9)                                    0960
         L     @15,RVTSAGUP(,@06)                                  0960
         LA    @01,@AL00001                                        0960
         BALR  @14,@15                                             0960
*       RETC=MAX(RETC,RF);          /* SAVE RC                       */
         L     @14,RETC                                            0961
         CR    @14,RF                                              0961
         BNL   *+6
         LR    @14,RF                                              0961
         ST    @14,RETC                                            0961
*       CALL BLSRESAR(ZZ2,ESAU);    /* ADD EQUATE SYMBOL RECORD      */
         ST    R9,@AL00001                                         0962
         LA    @14,ESAU                                            0962
         ST    @14,@AL00001+4                                      0962
         L     @06,ZZ2RVTP(,R9)                                    0962
         L     @15,RVTESARP(,@06)                                  0962
         LA    @01,@AL00001                                        0962
         BALR  @14,@15                                             0962
*       ESAUD=DESCA;                /* RESTORE DICTIONARY NAME, ETC  */
         MVC   ESAUD(60),DESCA                                     0963
*       RF=RETC;                    /* MOVE RC                       */
         L     RF,RETC                                             0964
*     END;                                                         0965
*   ELSE                                                           0966
*     RF=0;                         /* SET RC                        */
         B     @RC00956                                            0966
@RF00956 SLR   RF,RF                                               0966
*   IF RF<ZZZFLAGS THEN                                            0967
@RC00956 C     RF,@CF00032                                         0967
         BNL   @RF00967                                            0967
*     DO;                           /* IF NO SERIOUS ERROR           */
*       CALL BLSRACC(ZZ2,ESAU,BLOCK);/* CALL ACCESS SERVICE RTN      */
         ST    R9,@AL00001                                         0969
         LA    @14,ESAU                                            0969
         ST    @14,@AL00001+4                                      0969
         ST    BLOKBASE,@AL00001+8                                 0969
         L     @06,ZZ2RVTP(,R9)                                    0969
         L     @15,RVTRACCP(,@06)                                  0969
         LA    @01,@AL00001                                        0969
         BALR  @14,@15                                             0969
*     END;                                                         0970
*   RETURN CODE(RF);                /* RETURN                        */
@RF00967 L     @14,@SA00004                                        0971
         LM    @00,@12,@SA00004+8                                  0971
         BR    @14                                                 0971
*   END ACCESS;                                                    0972
*                                                                  0973
*/*BLSRPEND--DEBUGGING MODULE                                        */
*/*BLSUPEND--MVS IPCS MODULE                                         */
*                                                                  0973
*   DECLARE                         /* DATA FOR AHB MACROS           */
*     PACKED BIT(64) BOUNDARY(DWORD),/* DATA CONVERSION WORK AREA    */
*     PTRBIT BIT(32) BOUNDARY(WORD),/* DATA CONVERSION WORK AREA FOR
*                                      POINTER DATA                  */
*     PTRPTR POINTER DEFINED(PTRBIT);/* DATA CONVERSION WORK AREA FOR
*                                      POINTER DATA                  */
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                     0974
*     GPR01F FIXED(31) REG(1),                                     0974
*     GPR15F FIXED(31) REG(15);                                    0974
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0975
*     I031F FIXED(31) BASED,                                       0975
*     I031P PTR(31) BASED,                                         0975
*     I015F FIXED(15) BASED,                                       0975
*     I015P PTR(15) BASED,                                         0975
*     I008P PTR(8) BASED,                                          0975
*     I001C CHAR(1) BASED;                                         0975
*   GENERATE NODEFS NOREFS DATA;                                   0976
*   END BLSRSUMM                    /* BLRPEND(BLSRSUMM)             */
*                                                                  0977
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (BLSRZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLSUZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLRFULL )                                       */
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */
*/*%INCLUDE SYSLIB  (IKJPSCB )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJUPT  )                                       */
*/*%INCLUDE SYSLIB  (BLSUSERV)                                       */
*/*%INCLUDE SYSLIB  (BLRSERV )                                       */
*/*%INCLUDE SYSLIB  (BLRSERVD)                                       */
*/*%INCLUDE SYSLIB  (BLSRSERV)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHAASVT )                                       */
*/*%INCLUDE SYSLIB  (IHAASXB )                                       */
*/*%INCLUDE SYSLIB  (IHACDE  )                                       */
*/*%INCLUDE SYSLIB  (IHAXTLST)                                       */
*/*%INCLUDE SYSLIB  (IHARB   )                                       */
*/*%INCLUDE SYSLIB  (IKJRB   )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*                                                                  0977
*       ;                                                          0977
@EL00001 L     @13,4(,@13)                                         0977
@EF00001 L     @00,@SIZDATD                                        0977
         LR    @01,@11                                             0977
         BLSUFRER R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0977
         BR    @14                                                 0977
@DATA    DS    0H
@CH00035 DC    H'7'
@CH00531 DC    H'10'
@CH03116 DC    H'14'
@CH02032 DC    H'20'
@CH00215 DC    H'24'
@CH03119 DC    H'35'
@CH00420 DC    H'38'
@CH03121 DC    H'39'
@CH03122 DC    H'40'
@CH03005 DC    H'83'
@CH03041 DC    XL2'7FFF'
@SM03135 MVC   JOBUFFER(0),PDJOBI(@04)
@SM03137 MVC   IN81T1(0),PDJOBI(@01)
         DS    0F
@AL00375 EQU   *                       LIST WITH   3 ARGUMENT(S)
@AL00443 DC    A(@CF00050)             LIST WITH   3 ARGUMENT(S)
         DS    F
         DC    A(@CF03115)
@AL00386 DC    A(@CF00050)             LIST WITH   3 ARGUMENT(S)
         DS    F
         DC    A(@CF00033)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00004 DS    15F
@PC00004 DS    3F
@SA00002 DS    15F
@SA00003 DS    15F
@AL00001 DS    3A
@AFTEMPS DS    1F
BLSRSUMM CSECT
         DS    0F
@CF00050 DC    F'0'
@CF00045 DC    F'1'
@CH00045 EQU   @CF00045+2
@CF00069 DC    F'2'
@CH00069 EQU   @CF00069+2
@CF00154 DC    F'3'
@CF00042 DC    F'4'
@CF00033 DC    F'8'
@CF00032 DC    F'12'
@CH00032 EQU   @CF00032+2
@CF00055 DC    F'16'
@CH00055 EQU   @CF00055+2
@CF00063 DC    F'32'
@CF03115 DC    F'208'
@CF03118 DC    F'232'
@CF03120 DC    F'296'
@CF02955 DC    F'8192'
@CF03130 DC    F'-8'
@CF03131 DC    F'-4'
@CF02953 DC    XL4'00FFFFFF'
@CF03133 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
ASVTPTR  DS    A
PDAPTR   DS    A
MINRENTP DS    F
TABLSIZE DS    F
RETC     DS    F
SAVECDEA DS    F
THISRBSZ DS    F
THISTCB  DS    F
THISRB   DS    A
THISASID DS    F
ASVTADR  DS    F
ASVTSPAC DS    F
J2       DS    F
NAMEPTR  DS    F
TABLPTR  DS    A
DESCA    DS    CL60
         ORG   DESCA
DESCA00  DS    0C
DESCAOF  DS    FL4
DESCALE  DS    FL4
DESCAOB  DS    FL1
DESCALB  DS    FL1
DESCAT   DS    CL34
         ORG   DESCAT
DESCAT0  DS    0C
DESCATY  DS    CL1
@NM00119 DS    BL1
DESCATD  DS    CL31
DESCATE  DS    CL1
DESCAT9  DS    0C
         ORG   DESCA+44
DESCAIM  DS    FL4
DESCAIL  DS    FL4
DESCAF   DS    BL4
         ORG   DESCAF
DESCAFA  DS    BL1
@NM00120 EQU   DESCAF+0
         ORG   DESCA+56
@NM00121 DS    BL4
DESCA99  DS    0C
         ORG   DESCA+60
ESAU     DS    CL694
         ORG   ESAU
ESAURID  DS    CL2
@NM00122 DS    BL6
@NM00123 DS    CL8
@NM00124 DS    BL8
ESAURDX  DS    FL4
ESAUSYM  DS    CL31
ESAUELK  DS    0C
ESAURV1  DS    CL1
ESAUAS   DS    CL16
         ORG   ESAUAS
ESAUAS0  DS    0C
ESAUAST  DS    CL2
@NM00125 DS    BL2
ESAUAS1  DS    FL4
ESAUAS2  DS    FL4
@NM00126 DS    BL4
ESAUAS9  DS    0C
         ORG   ESAU+76
ESAULAD  DS    AL4
ESAUD    DS    CL60
         ORG   ESAUD
ESAUD00  DS    0C
ESAUDOF  DS    FL4
ESAUDLE  DS    FL4
ESAUDOB  DS    FL1
ESAUDLB  DS    FL1
ESAUDT   DS    CL34
         ORG   ESAUDT
ESAUDT0  DS    0C
ESAUDTY  DS    CL1
@NM00127 DS    BL1
ESAUDTD  DS    CL31
ESAUDTE  DS    CL1
ESAUDT9  DS    0C
         ORG   ESAUD+44
ESAUDIM  DS    FL4
ESAUDIL  DS    FL4
ESAUDF   DS    BL4
         ORG   ESAUDF
ESAUDFA  DS    BL1
@NM00128 EQU   ESAUDF+0
         ORG   ESAUD+56
@NM00129 DS    BL4
ESAUD99  DS    0C
         ORG   ESAU+140
ESAUMAD  DS    AL4
@NM00130 DS    BL16
ESAUKEY  DS    BL1
ESAUF    DS    BL3
         ORG   ESAUF
ESAUFS   DS    BL1
         ORG   ESAUFS
ESAUFSC  DS    BL1
ESAUFS2  EQU   ESAUFS+0
ESAUFSM  EQU   ESAUFS+0
ESAUFSA  EQU   ESAUFS+0
ESAUFSP  EQU   ESAUFS+0
ESAUFSR  EQU   ESAUFS+0
ESAUFSX  EQU   ESAUFS+0
ESAUFSS  EQU   ESAUFS+0
         ORG   ESAUF+1
ESAUFC   DS    BL1
         ORG   ESAUFC
ESAUFCD  DS    BL1
@NM00131 EQU   ESAUFC+0
         ORG   ESAUF+2
@NM00132 DS    BL1
         ORG   ESAU+164
ESAUABS  DS    FL4
@NM00133 DS    BL12
ESAUR    DS    CL514
         ORG   ESAUR
ESAURL   DS    FL2
ESAURT   DS    CL512
         ORG   ESAURT
ESAURT1  DS    CL512
         ORG   ESAU+694
ESAU999  DS    0C
         ORG   ESAU+694
         DS    CL2
SAAU     DS    CL3072
         ORG   SAAU
SAAURID  DS    CL2
@NM00134 DS    BL6
SAAURDX  DS    FL4
SAAUAS   DS    CL16
         ORG   SAAUAS
SAAUAS0  DS    0C
SAAUAST  DS    CL2
@NM00135 DS    BL2
SAAUAS1  DS    FL4
SAAUAS2  DS    FL4
@NM00136 DS    BL4
SAAUAS9  DS    0C
         ORG   SAAU+28
SAAULAD  DS    AL4
SAAUDT   DS    CL34
         ORG   SAAUDT
SAAUDT0  DS    0C
SAAUDTY  DS    CL1
@NM00137 DS    BL1
SAAUDTD  DS    CL31
SAAUDTE  DS    CL1
SAAUDT9  DS    0C
         ORG   SAAU+66
SAAUELK  DS    0C
@NM00138 DS    BL2
SAAUF    DS    CL60
         ORG   SAAUF
SAAUF00  DS    0C
SAAUFOF  DS    FL4
SAAUFLE  DS    FL4
SAAUFOB  DS    FL1
SAAUFLB  DS    FL1
SAAUFT   DS    CL34
         ORG   SAAUFT
SAAUFT0  DS    0C
SAAUFTY  DS    CL1
@NM00139 DS    BL1
SAAUFTD  DS    CL31
SAAUFTE  DS    CL1
SAAUFT9  DS    0C
         ORG   SAAUF+44
SAAUFIM  DS    FL4
SAAUFIL  DS    FL4
SAAUFF   DS    BL4
         ORG   SAAUFF
SAAUFFA  DS    BL1
@NM00140 EQU   SAAUFF+0
         ORG   SAAUF+56
@NM00141 DS    BL4
SAAUF99  DS    0C
         ORG   SAAU+128
SAAUSF   DS    BL8
         ORG   SAAUSF
SAAUSF1  DS    BL1
SAAUSF9  EQU   SAAUSF+0
SAAUSFI  EQU   SAAUSF+0
SAAUSFS  EQU   SAAUSF+0
@NM00142 EQU   SAAUSF+0
         ORG   SAAU+136
SAAUGMT  DS    BL8
SAAUPGV  DS    CL8
SAAUSRC  DS    FL1
@NM00143 DS    101BL1
SAAUC    DS    CL2818
         ORG   SAAUC
SAAUCL   DS    FL2
SAAUCT   DS    CL2816
         ORG   SAAUCT
SAAUCT1  DS    CL2816
         ORG   SAAU+3072
SAAU999  DS    0C
         ORG   SAAU+3072
OLD      DS    CL20
         ORG   OLD
OLDN     DS    FL4
OLDP     DS    4A
         ORG   OLD+20
IN81     DS    CL12
         ORG   IN81
IN81L    DS    FL2
IN81O    DS    FL2
IN81T    DS    CL8
         ORG   IN81T
IN81T1   DS    CL8
         ORG   IN81+12
IN82     DS    CL12
         ORG   IN82
IN82L    DS    FL2
IN82O    DS    FL2
IN82T    DS    CL8
         ORG   IN82T
IN82T1   DS    CL8
         ORG   IN82+12
IN83     DS    CL12
         ORG   IN83
IN83L    DS    FL2
IN83O    DS    FL2
IN83T    DS    CL8
         ORG   IN83T
IN83T1   DS    CL8
         ORG   IN83+12
FLAG     DS    BL1
         ORG   FLAG
FLAGEXIT DS    BL1
FLAGFREE EQU   FLAG+0
FLAGMIN  EQU   FLAG+0
FLAGOK   EQU   FLAG+0
FLAGSEL  EQU   FLAG+0
@NM00147 EQU   FLAG+0
         ORG   FLAG+1
         DS    CL3
OUTASCB  DS    CL8
         ORG   OUTASCB
OUTASCBC DS    CL4
OUTASCBN DS    CL3
OUTASCBL DS    CL1
         ORG   OUTASCB+8
OUTTCB   DS    CL8
         ORG   OUTTCB
OUTTCBC  DS    CL3
OUTTCBAN DS    CL3
OUTTCBTN DS    CL2
         ORG   OUTTCB+8
MINRNAME DS    CL8
MAJRNAME DS    CL8
NAMEBUF  DS    CL8
JOBUFFER DS    CL8
         DS    CL4
OUTLINE  DS    CL83
         ORG   OUTLINE
LL       DS    FL2
OO       DS    FL2
BODY     DS    CL79
         ORG   OUTLINE+83
         DS    CL5
BODYHLDR DS    CL58
         ORG   BODYHLDR
NAME1    DS    CL4
B1       DS    CL1
ITEM1    DS    CL8
@NM00148 DS    CL2
NAME2    DS    CL4
@NM00149 DS    CL1
ITEM2    DS    CL8
@NM00150 DS    CL2
NAME3    DS    CL4
@NM00151 DS    CL1
ITEM3    DS    CL8
@NM00152 DS    CL2
NAME4    DS    CL4
@NM00153 DS    CL1
ITEM4    DS    CL8
         ORG   BODYHLDR+58
         DS    CL6
PACKED   DS    BL8
PTRBIT   DS    BL4
BLSRSUMM CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
PCPTR    DC    AL4(PC)
@CC03027 DC    C' ASCB    '
@CC03093 DC    C'MAJOR CDE'
@CC03021 DC    C'JOB NAME'
@CC03022 DC    C'*UNKNOWN'
@CC03040 DC    C'ASXB    '
@CC03071 DC    C'RB      '
@CC03087 DC    C'RB PREFX'
@CC03088 DC    C'CDE     '
@CC03069 DC    C'RB FRNT'
@CC03056 DC    C'====>'
@CC03096 DC    C'XTLST'
@CC02554 DC    C'ASVT'
@CC03016 DC    C'ASCB'
@CC03029 DC    C'LOCK'
@CC03030 DC    C'ASID'
@CC03031 DC    C'CSCB'
@CC03032 DC    C'TSB '
@CC03035 EQU   @CC03040
@CC03036 DC    C'DSP1'
@CC03037 DC    C'FLG2'
@CC03038 DC    C'SRBS'
@CC03039 DC    C'FW1 '
@CC03050 DC    C'TCB '
@CC03051 DC    C'CMP '
@CC03052 DC    C'PKFG'
@CC03053 DC    C'PKF2'
@CC03054 DC    C'TSFG'
@CC03057 DC    C'STAB'
@CC03058 DC    C'NDSP'
@CC03059 DC    C'JSCB'
@CC03060 DC    C'BITS'
@CC03061 DC    C'DAR '
@CC03062 DC    C'RTWA'
@CC03063 DC    C'ABR '
@CC03064 DC    C'FBTS'
@CC03084 DC    C'FCDE'
@CC03085 DC    C'OPSW'
@CC03086 DC    C'WTLK'
@CC03090 DC    C'WLIC'
@CC03091 DC    C'CDNM'
@CC03034 EQU   @CC03050
@CC03089 EQU   @CC03088
@CC00076 DC    C'CV'
@CC03072 EQU   @CC03071
@CC03076 DC    C'TI'
@CC03080 DC    C'SI'
@CC03082 DC    C'SV'
@CC03083 DC    C'??'
@CC03095 DC    C'XL'
@CB02552 DC    X'00'
DTASVT   DS    CL34
         ORG   DTASVT
DTASVT0  DS    0C
DTASVTY  DC    CL1'M'
@NM00115 DC    X'00'
DTASVTD  DC    CL31'ASVT'
DTASVTE  DC    CL1' '
DTASVT9  DS    0C
         ORG   DTASVT+34
         DS    CL2
DESCR    DS    CL60
         ORG   DESCR
DESCR00  DS    0C
DESCROF  DC    F'0'
DESCRLE  DC    A(4)
DESCROB  DC    AL1(0)
DESCRLB  DC    AL1(0)
DESCRT   DS    CL34
         ORG   DESCRT
DESCRT0  DS    0C
DESCRTY  DC    CL1'U'
@NM00116 DC    X'00'
DESCRTD  DC    CL31'                               '
DESCRTE  DC    CL1' '
DESCRT9  DS    0C
         ORG   DESCR+44
DESCRIM  DC    A(0)
DESCRIL  DC    F'0'
DESCRF   DC    X'00000000'
         ORG   DESCRF
DESCRFA  DS    BL1
@NM00117 EQU   DESCRF+0
         ORG   DESCR+56
@NM00118 DC    X'00'
         DC    XL3'0'
DESCR99  DS    0C
         ORG   DESCR+60
M017     DS    CL28
         ORG   M017
M017L    DC    AL2(28)
M017O    DC    AL2(0)
M017T    DS    CL24
         ORG   M017T
M017T1   DC    CL14'BLS18017I JOB '
M017T2   DC    CL6', ASCB'
M017T3   DC    CL4' AT '
M017T4   DS    0C
         ORG   M017+28
M018     DS    CL39
         ORG   M018
M018L    DC    AL2(39)
M018O    DC    AL2(0)
M018T    DS    CL35
         ORG   M018T
M018T1   DC    CL35'BLS18018I SUMMARY DID NOT FIND JOB '
M018T2   DS    0C
         ORG   M018+39
         DS    CL1
M019     DS    CL18
         ORG   M019
M019L    DC    AL2(18)
M019O    DC    AL2(0)
M019T    DS    CL14
         ORG   M019T
M019T1   DC    CL10'BLS18019I '
M019T2   DC    CL4' AT '
M019T3   DS    0C
         ORG   M019+18
M020     DS    CL20
         ORG   M020
M020L    DC    AL2(20)
M020O    DC    AL2(0)
M020T    DS    CL16
         ORG   M020T
M020T1   DC    CL10'BLS18020I '
M020T2   DC    CL6'RB AT '
M020T3   DS    0C
         ORG   M020+20
M021     DS    CL52
         ORG   M021
M021L    DC    AL2(52)
M021O    DC    AL2(0)
M021T    DS    CL48
         ORG   M021T
M021T1   DC    CL48'BLS18021I THE ABOVE ADDRESS SPACE IS SWAPPED OUT'
         ORG   M021+52
M022     DS    CL42
         ORG   M022
M022L    DC    AL2(42)
M022O    DC    AL2(0)
M022T    DS    CL38
         ORG   M022T
M022T1   DC    CL38'BLS18022I TCBCMP FIELD IS NONZERO FOR '
M022T2   DS    0C
         ORG   M022+42
M023     DS    CL43
         ORG   M023
M023L    DC    AL2(43)
M023O    DC    AL2(0)
M023T    DS    CL39
         ORG   M023T
M023T1   DC    CL39'BLS18023I TCBRTWA FIELD IS NONZERO FOR '
M023T2   DS    0C
         ORG   M023+43
         DS    CL1
M086     DS    CL44
         ORG   M086
M086L    DC    AL2(44)
M086O    DC    AL2(0)
M086T    DS    CL40
         ORG   M086T
M086T1   DC    CL40'BLS18086I MAJOR NAME FOR THIS MODULE IS '
M086T2   DS    0C
         ORG   M086+44
MBLK     DS    CL10
         ORG   MBLK
MBLKL    DC    AL2(10)
MBLKO    DC    AL2(0)
MBLKT    DS    CL6
         ORG   MBLKT
MBLKT1   DC    CL6'      '
         ORG   MBLK+10
ALPHA    DC    CL26'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
PXRO     DC    AL2(PXPRINT-PD)
         DC    AL2(PXTERM-PD)
         DC    AL2(PXDFLG-PD)
         DC    AL2(PXDFLV-PD)
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSRSUMM CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSRSUMM+19)/20+7)/8)CL8'BLSRSUMM'
@DATD    DSECT
         DS    0H
@DATD    DSECT
         SPACE 2
***********************************************************************
* IKJPARM--BEGIN MACROS SPECIFYING COMMAND SYNTAX                     *
***********************************************************************
         SPACE
BLSRSUMM CSECT
PC       IKJPARM DSECT=PD
@DATD    DSECT
BLSRSUMM CSECT
PKOPT    IKJKEYWD
@DATD    DSECT
BLSRSUMM CSECT
         IKJNAME 'TCBSUMMARY'
@DATD    DSECT
BLSRSUMM CSECT
         IKJNAME 'ANOMALY'
@DATD    DSECT
BLSRSUMM CSECT
PKASID   IKJKEYWD
@DATD    DSECT
BLSRSUMM CSECT
         IKJNAME 'JOB',SUBFLD=PSJOB
@DATD    DSECT
BLSRSUMM CSECT
         IKJNAME 'ASID',SUBFLD=PSASID
@DATD    DSECT
BLSRSUMM CSECT
PXPRINT  IKJKEYWD
@DATD    DSECT
BLSRSUMM CSECT
         IKJNAME 'PRINT'
@DATD    DSECT
BLSRSUMM CSECT
         IKJNAME 'NOPRINT'
@DATD    DSECT
BLSRSUMM CSECT
PXTERM   IKJKEYWD
@DATD    DSECT
BLSRSUMM CSECT
         IKJNAME 'TERMINAL'
@DATD    DSECT
BLSRSUMM CSECT
         IKJNAME 'NOTERMINAL'
@DATD    DSECT
BLSRSUMM CSECT
PXDFLG   IKJKEYWD
@DATD    DSECT
BLSRSUMM CSECT
         IKJNAME 'FLAG',SUBFLD=PXSUBFM
@DATD    DSECT
BLSRSUMM CSECT
PXTEST   IKJKEYWD
@DATD    DSECT
BLSRSUMM CSECT
         IKJNAME 'TEST'
@DATD    DSECT
BLSRSUMM CSECT
         IKJNAME 'NOTEST'
@DATD    DSECT
BLSRSUMM CSECT
         SPACE
PXSUBFM  IKJSUBF
@DATD    DSECT
BLSRSUMM CSECT
PXDFLV   IKJKEYWD
@DATD    DSECT
BLSRSUMM CSECT
         IKJNAME 'INFORMATIONAL'
@DATD    DSECT
BLSRSUMM CSECT
         IKJNAME 'WARNING'
@DATD    DSECT
BLSRSUMM CSECT
         IKJNAME 'ERROR'
@DATD    DSECT
BLSRSUMM CSECT
         IKJNAME 'SERIOUS',ALIAS=('SEVERE')
@DATD    DSECT
BLSRSUMM CSECT
         IKJNAME 'TERMINATING'
@DATD    DSECT
BLSRSUMM CSECT
         SPACE
PSJOB    IKJSUBF
@DATD    DSECT
BLSRSUMM CSECT
PDJOB    IKJIDENT 'JOB NAME',LIST,FIRST=ANY,MAXLNTH=8,OTHER=ANY,PROMPT=*
               'JOB NAME(S)'
@DATD    DSECT
BLSRSUMM CSECT
         SPACE
PSASID   IKJSUBF
@DATD    DSECT
BLSRSUMM CSECT
PDASI    IKJIDENT 'ASID',LIST,INTEG,PROMPT='ASID(S)',VALIDCK=BLSRVPAS
@DATD    DSECT
PD       DSECT
PD99     DS    0C
BLSRSUMM CSECT
         IKJENDP
         SPACE 2
***********************************************************************
* IKJENDP--END SYNTAX DESCRIPTION                                     *
***********************************************************************
         SPACE
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSRSUMM CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
J4       EQU   @02
J3       EQU   @03
J1       EQU   @03
PDEXPTR  EQU   @02
TCBCTR   EQU   @02
SAVELINK EQU   @02
NEXTCB   EQU   @03
MSGIND   EQU   @06
MAJRENTP EQU   @02
BLOKBASE EQU   @05
R9       EQU   @09
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
RB       EQU   @11
RD       EQU   @13
RE       EQU   @14
RF       EQU   @15
PDRPTR   EQU   @10
GPR01F   EQU   @01
GPR00F   EQU   @00
GPR15F   EQU   @15
RA       EQU   @10
RC       EQU   @12
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
ZZ1      EQU   0
ZZ1PNULL EQU   ZZ1+8
ZZ1ATTN  EQU   ZZ1+360
ZZ1EVE   EQU   ZZ1ATTN+4
ZZ1EVEP  EQU   ZZ1EVE
ZZ1F     EQU   ZZ1+368
ZZ1TRHEX EQU   ZZ1+568
ZZ1N     EQU   ZZ1+1116
ZZ2      EQU   0
ZZ2AMD   EQU   ZZ2
@NM00013 EQU   ZZ2AMD+7
ZZ2PRT   EQU   ZZ2+138
ZZ2PRTT  EQU   ZZ2PRT+4
ZZ2PRTT1 EQU   ZZ2PRTT+1
ZZ2A     EQU   ZZ2+272
ZZ2AF    EQU   ZZ2A+16
ZZ2AFP   EQU   ZZ2AF
ZZ2AFT   EQU   ZZ2AF
ZZ2AFX   EQU   ZZ2AF+5
ZZ2APID  EQU   ZZ2A+64
ZZ2AD    EQU   ZZ2A+74
ZZ2ADD   EQU   ZZ2AD
ZZ2ADDT  EQU   ZZ2ADD+2
ZZ2ADM   EQU   ZZ2AD+46
ZZ2ADMT  EQU   ZZ2ADM+2
ZZ2ADP   EQU   ZZ2AD+56
ZZ2ADPT  EQU   ZZ2ADP+2
ZZ2AZZ6P EQU   ZZ2A+140
ZZ2AQAS  EQU   ZZ2A+144
ZZ2AQD   EQU   ZZ2A+160
ZZ2AQDT  EQU   ZZ2AQD+10
ZZ2AQDF  EQU   ZZ2AQD+52
ZZ2STG   EQU   ZZ2+960
ZZ2ALLOP EQU   ZZ2+992
ZZ2FREEP EQU   ZZ2+996
ZZ2FF19P EQU   ZZ2+1000
ZZ2FRE1P EQU   ZZ2+1004
ZZ2FF18P EQU   ZZ2+1008
ZZ2DYNAP EQU   ZZ2+1012
ZZ2ZZ2CP EQU   ZZ2+1016
ZZ2ZZ2DP EQU   ZZ2+1020
ZZ2STAIP EQU   ZZ2+1024
ZZ2FF02P EQU   ZZ2+1028
ZZ2GETLP EQU   ZZ2+1032
ZZ2PARSP EQU   ZZ2+1036
ZZ2PTGTP EQU   ZZ2+1040
ZZ2PUTLP EQU   ZZ2+1044
ZZ2SCANP EQU   ZZ2+1048
ZZ2STCKP EQU   ZZ2+1052
ZZ2TRMOP EQU   ZZ2+1064
ZZ2TRMVP EQU   ZZ2+1068
ZZ2PUTNP EQU   ZZ2+1084
ZZ2TRMNP EQU   ZZ2+1088
ZZ2ZZ1P  EQU   ZZ2+1264
ZZ2BVTP  EQU   ZZ2+1280
ZZ2RVTP  EQU   ZZ2+1284
ZZ2CPPL  EQU   ZZ2+1292
ZZ2CPPLC EQU   ZZ2CPPL
ZZ2ITR   EQU   ZZ2+2840
ZZ2ITRE  EQU   ZZ2ITR+16
ZZ2ITSE  EQU   ZZ2+2864
ZZ2ES    EQU   ZZ2+2872
ZZ2AMDX  EQU   ZZ2+7160
ZZ2AXO   EQU   ZZ2+7934
ZZ2AXOT  EQU   ZZ2AXO+2
CMD      EQU   0
CMDT     EQU   CMD+4
PSCB     EQU   0
PSCBATR1 EQU   PSCB+16
ECT      EQU   0
ECTSWS   EQU   ECT+28
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
UPT      EQU   0
UPTSWS   EQU   UPT+12
SA       EQU   0
SA1      EQU   SA
SAR      EQU   SA+12
SAR1     EQU   SAR+12
BLSUPARI EQU   0
BLSUPARU EQU   0
BLSUPRTA EQU   0
BLSUPUTO EQU   0
BLSUPUTV EQU   0
BVT      EQU   0
BVTPUTLP EQU   BVT+4
BVTPUTOP EQU   BVT+12
BVTPUTTP EQU   BVT+16
BVTPUTVP EQU   BVT+20
BVTPUTAP EQU   BVT+24
BVTPRTTP EQU   BVT+28
BVTPRTAP EQU   BVT+32
BVTPUTDP EQU   BVT+36
BVTMONP  EQU   BVT+40
BVTMON2P EQU   BVT+44
BVTVSARP EQU   BVT+48
BVTVSENP EQU   BVT+64
BVTVSERP EQU   BVT+68
BVTVSGEP EQU   BVT+72
BVTVSGUP EQU   BVT+76
BVTVSPOP EQU   BVT+80
BVTVSPUP EQU   BVT+84
BVTMPKNP EQU   BVT+104
BVTMONLP EQU   BVT+108
BVTPUTCP EQU   BVT+132
BVTMPK1P EQU   BVT+136
BVTZZ2RP EQU   BVT+140
BVTPGMRP EQU   BVT+144
BVTMONAP EQU   BVT+148
BVTBLDDP EQU   BVT+152
BVTBLDLP EQU   BVT+156
BVTPGMCP EQU   BVT+160
BVTPGMDP EQU   BVT+164
BVTPGMLP EQU   BVT+168
BVTMONCP EQU   BVT+180
BVTMONDP EQU   BVT+184
BVTMONTP EQU   BVT+188
BVTPARIP EQU   BVT+192
BVTPARUP EQU   BVT+196
BVTPRTNP EQU   BVT+204
BVTVSCRP EQU   BVT+208
BVTVSMRP EQU   BVT+212
BVTMONXP EQU   BVT+216
BVTTRMAP EQU   BVT+228
ZZ6      EQU   0
ZZ6D     EQU   ZZ6+128
ZZ6DD    EQU   ZZ6D+8
ZZ6DDT   EQU   ZZ6DD+4
ZZ6DQA   EQU   ZZ6D+68
ZZ6DQ1   EQU   ZZ6D+84
ZZ6DQ2   EQU   ZZ6D+88
ZZ6DF    EQU   ZZ6D+92
ZZ6B     EQU   ZZ6+768
BLSRACC  EQU   0
BLSRESAR EQU   0
BLSRESGU EQU   0
BLSRSAGU EQU   0
RVT      EQU   0
RVTADDRP EQU   RVT
RVTT01P  EQU   RVT+4
RVTTAP   EQU   RVT+8
RVTTBP   EQU   RVT+12
RVTTCP   EQU   RVT+16
RVTTFP   EQU   RVT+24
RVTTYP   EQU   RVT+40
RVTT02P  EQU   RVT+48
RVTT03P  EQU   RVT+52
RVTT04P  EQU   RVT+56
RVTACCLP EQU   RVT+60
RVTRACCP EQU   RVT+64
RVTTLP   EQU   RVT+68
RVTTMP   EQU   RVT+72
RVTTUP   EQU   RVT+80
RVTESGEP EQU   RVT+84
RVTESGUP EQU   RVT+88
RVTESARP EQU   RVT+92
RVTRAARP EQU   RVT+96
RVTRAGEP EQU   RVT+100
RVTADDPP EQU   RVT+104
RVTACCQP EQU   RVT+108
RVTSAGUP EQU   RVT+124
RVTSAGEP EQU   RVT+128
RVTESCKP EQU   RVT+132
RVTMSGAP EQU   RVT+136
RVTMSGDP EQU   RVT+140
RVTADDTP EQU   RVT+160
RVTADDUP EQU   RVT+164
RVTADD1P EQU   RVT+176
RVTADD2P EQU   RVT+180
RVTRSAGP EQU   RVT+184
RVTMSGBP EQU   RVT+188
RVTADDSP EQU   RVT+192
RVTADD3P EQU   RVT+196
RVTT05P  EQU   RVT+200
RVTPADSP EQU   RVT+204
RVTTRP   EQU   RVT+228
RVTADD4P EQU   RVT+232
RVTSAPCP EQU   RVT+236
RVTSAARP EQU   RVT+240
RVTSAGNP EQU   RVT+244
RVTT06P  EQU   RVT+248
RVTSAGCP EQU   RVT+252
RVTSAGQP EQU   RVT+256
RVTESGCP EQU   RVT+260
RVTESGQP EQU   RVT+264
RVTDUCKP EQU   RVT+276
RVTDUCCP EQU   RVT+280
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
ASCB     EQU   0
ASCBASCB EQU   ASCB
ASCBSUPC EQU   ASCB+16
ASCBASID EQU   ASCB+36
ASCBSEQN EQU   ASCB+38
ASCBRSM  EQU   ASCB+52
ASCBRSMF EQU   ASCBRSM
ASCBCSCB EQU   ASCB+56
ASCBTSB  EQU   ASCB+60
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBASXB EQU   ASCB+108
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBSRBS EQU   ASCB+118
ASCBLKGP EQU   ASCB+128
ASCBLOCK EQU   ASCBLKGP
ASCBJBNI EQU   ASCB+172
ASCBJBNS EQU   ASCB+176
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
ASVT     EQU   0
ASVTMAXU EQU   ASVT+516
ASVTFRST EQU   ASVT+524
ASVTENTY EQU   ASVT+528
ASVTAVAL EQU   ASVTENTY
ASXB     EQU   0
ASXBASXB EQU   ASXB
ASXBFTCB EQU   ASXB+4
ASXBAEQ  EQU   ASXB+168
ASXBSECR EQU   ASXB+199
ASCBSFLG EQU   ASXBSECR
ASXBCASW EQU   ASXB+216
ASXBCRB1 EQU   ASXBCASW
CDENTRY  EQU   0
CDNAME   EQU   CDENTRY+8
CDENTPT  EQU   CDENTRY+16
CDXLMJP  EQU   CDENTRY+20
CDATTR   EQU   CDENTRY+28
CDMIN    EQU   CDATTR
CDATTR2  EQU   CDENTRY+29
XTLST    EQU   0
XTLMSBLA EQU   XTLST+8
XTLMSBLN EQU   XTLMSBLA+1
XTLMSBAA EQU   XTLST+12
XTLMSBAD EQU   XTLMSBAA+1
RBPRFX   EQU   0
RBBASIC  EQU   0
RBEXRTNM EQU   RBBASIC
RBTMFLD  EQU   RBEXRTNM
RBSTAB   EQU   RBBASIC+10
XSTAB    EQU   RBSTAB
RBSTAB1  EQU   XSTAB
XSTAB1   EQU   RBSTAB1
RBFTCKPT EQU   XSTAB1
RBSTAB2  EQU   XSTAB+1
XSTAB2   EQU   RBSTAB2
RBTCBNXT EQU   XSTAB2
RBFACTV  EQU   XSTAB2
RBFDYN   EQU   XSTAB2
RBECBWT  EQU   XSTAB2
RBOPSW   EQU   RBBASIC+16
XRBPSW   EQU   RBOPSW
RBOPSWB2 EQU   XRBPSW+1
RBLINK   EQU   RBBASIC+28
XRBLNK   EQU   RBLINK
RBWCF    EQU   XRBLNK
RBLINKB  EQU   XRBLNK+1
RBGRSAVE EQU   RBBASIC+32
XRBREG   EQU   RBGRSAVE
RBGRS0   EQU   XRBREG
RBGRS1   EQU   XRBREG+4
RBGRS2   EQU   XRBREG+8
RBGRS3   EQU   XRBREG+12
RBGRS4   EQU   XRBREG+16
RBGRS5   EQU   XRBREG+20
RBGRS6   EQU   XRBREG+24
RBGRS7   EQU   XRBREG+28
RBGRS8   EQU   XRBREG+32
RBGRS9   EQU   XRBREG+36
RBGRS10  EQU   XRBREG+40
RBGRS11  EQU   XRBREG+44
RBGRS12  EQU   XRBREG+48
RBGRS13  EQU   XRBREG+52
RBGRS14  EQU   XRBREG+56
RBGRS15  EQU   XRBREG+60
XRBESA   EQU   RBBASIC+96
RBPREFIX EQU   0
RBRSV019 EQU   RBPREFIX+14
RBRSV028 EQU   RBPREFIX+15
RBRSV041 EQU   RBPREFIX+27
RBRSV054 EQU   RBPREFIX+39
RBRTOPSW EQU   RBPREFIX+40
RBRTPSW2 EQU   RBRTOPSW+8
RBRTICIL EQU   RBRTPSW2
RBFLAGS1 EQU   RBPREFIX+56
RBINTCDA EQU   RBPREFIX+61
RBSECT   EQU   0
RBPPSAV  EQU   RBSECT
RBSIZE   EQU   RBSECT+8
@NM00095 EQU   RBSECT+10
@NM00096 EQU   @NM00095
RBFTP    EQU   @NM00096
RBTRSVRB EQU   @NM00096
@NM00098 EQU   @NM00095+1
RBETXR   EQU   @NM00098
RBEP     EQU   RBSECT+12
RBPGMQ   EQU   RBSECT+24
@NM00105 EQU   RBSECT+28
@NM00106 EQU   @NM00105
IRBEND   EQU   RBSECT+96
@NM00109 EQU   RBSECT+96
RBRSV138 EQU   @NM00109+7
RBSCBB   EQU   RBSECT+144
RBSPARM  EQU   RBSCBB+8
RBSFLGS1 EQU   RBSPARM
RBSIOPRC EQU   RBSFLGS1
RBSOWNR  EQU   RBSCBB+12
RBSFLGS2 EQU   RBSOWNR
RBSDATA  EQU   RBSCBB+16
RBSFLG3  EQU   RBSDATA
RBRSV150 EQU   RBSECT+167
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBRBP   EQU   TCB
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTCB   EQU   TCB+116
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBRTWA  EQU   TCB+224
TCBABCUR EQU   TCB+236
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBSTAWA EQU   TCB+252
TCBTCBID EQU   TCB+256
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
PCCSECT  EQU   0
PDDSECT  EQU   0
PDXP     EQU   PDDSECT+1
PDL      EQU   PDDSECT+5
PDJOBX   EQU   0
PDJOBIP  EQU   PDJOBX
PDJOBIL  EQU   PDJOBX+4
PDJOBIF  EQU   PDJOBX+6
PDJOBIFP EQU   PDJOBIF
PDJOBXP  EQU   PDJOBX+8
PDJOBI   EQU   0
PDASIX   EQU   0
PDASIIP  EQU   PDASIX
PDASIIF  EQU   PDASIX+6
PDASIXP  EQU   PDASIX+8
PDASII   EQU   0
BLOCK    EQU   0
BLOCKF   EQU   0
ARAYASCB EQU   0
ADDRASCB EQU   ARAYASCB
ASIDENTY EQU   ARAYASCB+4
BLSRACCL EQU   0
BLSRACCQ EQU   0
BLSRADDP EQU   0
BLSRADDR EQU   0
BLSRADDS EQU   0
BLSRADDT EQU   0
BLSRADDU EQU   0
BLSRADD1 EQU   0
BLSRADD2 EQU   0
BLSRADD3 EQU   0
BLSRADD4 EQU   0
BLSRDUCC EQU   0
BLSRDUCK EQU   0
BLSRESCK EQU   0
BLSRESGC EQU   0
BLSRESGE EQU   0
BLSRESGQ EQU   0
BLSRMSGA EQU   0
BLSRMSGB EQU   0
BLSRMSGD EQU   0
BLSRPADS EQU   0
BLSRRAAR EQU   0
BLSRRAGE EQU   0
BLSRSAAR EQU   0
BLSRSAG  EQU   0
BLSRSAGC EQU   0
BLSRSAGE EQU   0
BLSRSAGN EQU   0
BLSRSAGQ EQU   0
BLSRSAPC EQU   0
BLSTA    EQU   0
BLSTB    EQU   0
BLSTC    EQU   0
BLSTF    EQU   0
BLSTL    EQU   0
BLSTM    EQU   0
BLSTR    EQU   0
BLSTU    EQU   0
BLSTY    EQU   0
BLST01   EQU   0
BLST02   EQU   0
BLST03   EQU   0
BLST04   EQU   0
BLST05   EQU   0
BLST06   EQU   0
BLSUALLO EQU   0
BLSUBLDD EQU   0
BLSUBLDL EQU   0
BLSUDYNA EQU   0
BLSUFREE EQU   0
BLSUFRE1 EQU   0
BLSUMON  EQU   0
BLSUMONA EQU   0
BLSUMONC EQU   0
BLSUMOND EQU   0
BLSUMONL EQU   0
BLSUMONT EQU   0
BLSUMONX EQU   0
BLSUMON2 EQU   0
BLSUMPKN EQU   0
BLSUMPK1 EQU   0
BLSUPGMC EQU   0
BLSUPGMD EQU   0
BLSUPGML EQU   0
BLSUPGMR EQU   0
BLSUPRTN EQU   0
BLSUPRTT EQU   0
BLSUPUTA EQU   0
BLSUPUTC EQU   0
BLSUPUTD EQU   0
BLSUPUTL EQU   0
BLSUPUTN EQU   0
BLSUPUTT EQU   0
BLSUSTAI EQU   0
BLSUTRMA EQU   0
BLSUTRMN EQU   0
BLSUTRMO EQU   0
BLSUTRMV EQU   0
BLSUVSAR EQU   0
BLSUVSCR EQU   0
BLSUVSEN EQU   0
BLSUVSER EQU   0
BLSUVSGE EQU   0
BLSUVSGU EQU   0
BLSUVSMR EQU   0
BLSUVSPO EQU   0
BLSUVSPU EQU   0
BLSUZZ2C EQU   0
BLSUZZ2D EQU   0
BLSUZZ2R EQU   0
IKJEFF02 EQU   0
IKJEFF18 EQU   0
IKJEFF19 EQU   0
IKJGETL  EQU   0
IKJPARS  EQU   0
IKJPTGT  EQU   0
IKJPUTL  EQU   0
IKJSCAN  EQU   0
IKJSTCK  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
A        EQU   0
B        EQU   0
C        EQU   0
CPPL     EQU   ZZ2CPPL
CPPLUPT  EQU   CPPL+4
CPPLPSCB EQU   CPPL+8
CPPLECT  EQU   CPPL+12
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
RBSECS03 EQU   RBEP
RBCDE    EQU   RBSECS03
RBCDFLGS EQU   RBCDE
RBSECS05 EQU   RBPGMQ
RBSQE    EQU   RBSECS05
RBSECS06 EQU   RBPGMQ
RBIQE    EQU   RBSECS06
RBSECS07 EQU   RBPGMQ
RBIQE2   EQU   RBSECS07
RBSECS08 EQU   IRBEND
RBSECS09 EQU   IRBEND
FBYT     EQU   TCBFBYT1
ABCURTCB EQU   TCBABCUR
PTRPTR   EQU   PTRBIT
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
RBRSV161 EQU   RBSECS09+64
RBSIRBWA EQU   RBSECS09
RBIQEWRK EQU   RBSECS08+4
RBNEXAV  EQU   RBSECS08
RBIQEA   EQU   RBIQE2
RBIQE1   EQU   RBIQE+1
RBUSE    EQU   RBIQE
RBSQEA   EQU   RBSQE+1
@NM00110 EQU   RBSQE
RBCDE1   EQU   RBCDE+1
RBCDLOAD EQU   RBCDFLGS
RBCDXCTL EQU   RBCDFLGS
RBCDSYNC EQU   RBCDFLGS
RBCDNODE EQU   RBCDFLGS
RBRSV010 EQU   RBCDFLGS
RBCDATCH EQU   RBCDFLGS
RBRSV009 EQU   RBCDFLGS
RBNOCELL EQU   RBCDFLGS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
CPPLCBUF EQU   CPPL
@NM00146 EQU   PDASIX+7
PDASIIF8 EQU   PDASIIF
PDASIIF7 EQU   PDASIIF
PDASIIF6 EQU   PDASIIF
PDASIIF5 EQU   PDASIIF
PDASIIF4 EQU   PDASIIF
PDASIIF3 EQU   PDASIIF
PDASIIF2 EQU   PDASIIF
PDASIIFP EQU   PDASIIF
PDASIIL  EQU   PDASIX+4
@NM00145 EQU   PDJOBX+7
PDJOBIF8 EQU   PDJOBIF
PDJOBIF7 EQU   PDJOBIF
PDJOBIF6 EQU   PDJOBIF
PDJOBIF5 EQU   PDJOBIF
PDJOBIF4 EQU   PDJOBIF
PDJOBIF3 EQU   PDJOBIF
PDJOBIF2 EQU   PDJOBIF
PDSP     EQU   PDDSECT+4
@NM00144 EQU   PDDSECT
@NM00114 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00113 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBSTAFX EQU   TCBSTAWA
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00112 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00111 EQU   TCBPMASK
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
SVRBEND  EQU   RBSECT+192
RBFEPARM EQU   RBSECT+168
SIRBEND  EQU   RBSECT+168
RBRSV158 EQU   RBRSV150
RBRSV157 EQU   RBRSV150
RBRSV156 EQU   RBRSV150
RBRSV155 EQU   RBRSV150
RBRSV154 EQU   RBRSV150
RBRSV153 EQU   RBRSV150
RBRSV152 EQU   RBRSV150
RBRSV151 EQU   RBRSV150
RBRSV149 EQU   RBSECT+166
RBRSV148 EQU   RBSECT+164
RBRSV169 EQU   RBSDATA+3
RBSID    EQU   RBSDATA+2
RBSPKEY  EQU   RBSDATA+1
RBRSV168 EQU   RBSFLG3
RBSTERMO EQU   RBSFLG3
RBSBRNTR EQU   RBSFLG3
RBSPRNTR EQU   RBSFLG3
RBSCNCEL EQU   RBSFLG3
RBSRECRD EQU   RBSFLG3
RBSTERMI EQU   RBSFLG3
RBRSV167 EQU   RBSFLG3
RBSOWNRA EQU   RBSOWNR+1
RBSSUPER EQU   RBSFLGS2
RBSKEY0  EQU   RBSFLGS2
RBRSV166 EQU   RBSFLGS2
RBRSV165 EQU   RBSFLGS2
RBSINUSE EQU   RBSFLGS2
RBRSV164 EQU   RBSFLGS2
RBSXCTL2 EQU   RBSFLGS2
RBRSV163 EQU   RBSFLGS2
RBSPARMA EQU   RBSPARM+1
RBSHALT  EQU   RBSIOPRC
RBSNOIOP EQU   RBSIOPRC
RBSASYNC EQU   RBSFLGS1
RBRSV162 EQU   RBSFLGS1
RBSESTAE EQU   RBSFLGS1
RBSDUMMY EQU   RBSFLGS1
RBSSTAR  EQU   RBSFLGS1
RBSSTAI  EQU   RBSFLGS1
RBSEXIT  EQU   RBSCBB+4
RBSCHAIN EQU   RBSCBB
TIRBEND  EQU   @NM00109+8
PRBEND   EQU   @NM00109+8
RBRSV146 EQU   RBRSV138
RBRSV145 EQU   RBRSV138
RBRSV144 EQU   RBRSV138
RBRSV143 EQU   RBRSV138
RBRSV142 EQU   RBRSV138
RBRSV141 EQU   RBRSV138
RBRSV140 EQU   RBRSV138
RBRSV139 EQU   RBRSV138
RBRSV137 EQU   @NM00109+6
RBRSV136 EQU   @NM00109+4
RBRSV135 EQU   @NM00109
@NM00108 EQU   RBSECT+32
@NM00107 EQU   @NM00105+1
RBSCF    EQU   @NM00106
RBPGMQ1  EQU   RBPGMQ+1
@NM00104 EQU   RBPGMQ
@NM00103 EQU   RBSECT+16
@NM00102 EQU   @NM00098
@NM00101 EQU   @NM00098
RBIQETP  EQU   @NM00098
RBUSIQE  EQU   RBETXR
RBATTN   EQU   @NM00098
@NM00100 EQU   @NM00098
@NM00099 EQU   @NM00098
RBPMSVRB EQU   @NM00096
RBATNXIT EQU   @NM00096
@NM00097 EQU   @NM00096
RBWAITP  EQU   @NM00096
RBFNSVRB EQU   RBTRSVRB
RBABOPSW EQU   RBSECT+4
RBPPSAV1 EQU   RBPPSAV+1
@NM00094 EQU   RBPPSAV
RBPRFXND EQU   RBPREFIX+64
RBINTCOD EQU   RBINTCDA+1
RBINLNTH EQU   RBINTCDA
RBWCSA   EQU   RBPREFIX+60
RBRSV004 EQU   RBPREFIX+57
RBSSSYN  EQU   RBFLAGS1
RBSCB    EQU   RBFLAGS1
RBLONGWT EQU   RBFLAGS1
RBASIR   EQU   RBFLAGS1
RBRSV159 EQU   RBFLAGS1
RBABEND  EQU   RBFLAGS1
RBXWAIT  EQU   RBFLAGS1
RBSLOCK  EQU   RBFLAGS1
RBRTRAN  EQU   RBRTPSW2+4
RBRTINCD EQU   RBRTICIL+2
RBRTILC  EQU   RBRTICIL+1
RBRSV160 EQU   RBRTICIL
RBRTPSW1 EQU   RBRTOPSW
RBRSV062 EQU   RBRSV054
RBRSV061 EQU   RBRSV054
RBRSV060 EQU   RBRSV054
RBRSV059 EQU   RBRSV054
RBRSV058 EQU   RBRSV054
RBRSV057 EQU   RBRSV054
RBRSV056 EQU   RBRSV054
RBRSV055 EQU   RBRSV054
RBRSV053 EQU   RBPREFIX+38
RBRSV052 EQU   RBPREFIX+36
RBRSV051 EQU   RBPREFIX+32
RBPRFXST EQU   RBPREFIX+32
RBRSV050 EQU   RBPREFIX+28
RBRSV049 EQU   RBRSV041
RBRSV048 EQU   RBRSV041
RBRSV047 EQU   RBRSV041
RBRSV046 EQU   RBRSV041
RBRSV045 EQU   RBRSV041
RBRSV044 EQU   RBRSV041
RBRSV043 EQU   RBRSV041
RBRSV042 EQU   RBRSV041
RBRSV040 EQU   RBPREFIX+26
RBRSV039 EQU   RBPREFIX+24
RBRSV038 EQU   RBPREFIX+20
RBRSV037 EQU   RBPREFIX+16
RBRSV036 EQU   RBRSV028
RBRSV035 EQU   RBRSV028
RBRSV034 EQU   RBRSV028
RBRSV033 EQU   RBRSV028
RBRSV032 EQU   RBRSV028
RBRSV031 EQU   RBRSV028
RBRSV030 EQU   RBRSV028
RBRSV029 EQU   RBRSV028
RBRSV027 EQU   RBRSV019
RBRSV026 EQU   RBRSV019
RBRSV025 EQU   RBRSV019
RBRSV024 EQU   RBRSV019
RBRSV023 EQU   RBRSV019
RBRSV022 EQU   RBRSV019
RBRSV021 EQU   RBRSV019
RBRSV020 EQU   RBRSV019
RBRSV018 EQU   RBPREFIX+13
RBRSV017 EQU   RBPREFIX+12
RBSRV016 EQU   RBPREFIX+11
RBRSV015 EQU   RBPREFIX+10
RBRSV014 EQU   RBPREFIX+8
RBRSV013 EQU   RBPREFIX+4
RBRSV012 EQU   RBPREFIX
RBEXSAVE EQU   XRBESA
XRBREG15 EQU   RBGRS15
XRBREG14 EQU   RBGRS14
XRBREG13 EQU   RBGRS13
XRBREG12 EQU   RBGRS12
XRBREG11 EQU   RBGRS11
XRBREG10 EQU   RBGRS10
XRBREG9  EQU   RBGRS9
XRBREG8  EQU   RBGRS8
XRBREG7  EQU   RBGRS7
XRBREG6  EQU   RBGRS6
XRBREG5  EQU   RBGRS5
XRBREG4  EQU   RBGRS4
XRBREG3  EQU   RBGRS3
XRBREG2  EQU   RBGRS2
XRBREG1  EQU   RBGRS1
XRBREG0  EQU   RBGRS0
XRBLNKA  EQU   RBLINKB
XRBWT    EQU   RBWCF
@NM00093 EQU   RBBASIC+24
RBOPSWPS EQU   RBOPSWB2
@NM00092 EQU   RBOPSWB2
@NM00091 EQU   XRBPSW
@NM00090 EQU   RBBASIC+12
XRBWAIT  EQU   RBECBWT
XRBFRRB  EQU   RBFDYN
@NM00089 EQU   XSTAB2
XRBACTV  EQU   RBFACTV
XRBTCBP  EQU   RBTCBNXT
@NM00088 EQU   XSTAB1
XRBCKPT  EQU   RBFTCKPT
@NM00087 EQU   XSTAB1
@NM00086 EQU   RBBASIC+8
@NM00085 EQU   RBEXRTNM+1
RBTMIND3 EQU   RBTMFLD
RBTMIND2 EQU   RBTMFLD
RBTMCMP  EQU   RBTMFLD
RBWLIM   EQU   RBTMFLD
RBRSV005 EQU   RBTMFLD
RBTMTOD  EQU   RBTMFLD
RBTMQUE  EQU   RBTMFLD
@NM00084 EQU   RBPRFX
@NM00083 EQU   XTLMSBAA
@NM00082 EQU   XTLMSBLA
XTLNRFAC EQU   XTLST+4
XTLLNTH  EQU   XTLST
CDATTR3  EQU   CDENTRY+30
CDAUTH   EQU   CDATTR2
CDSYSLIB EQU   CDATTR2
CDOLY    EQU   CDATTR2
@NM00081 EQU   CDATTR2
CDRLC    EQU   CDATTR2
CDXLE    EQU   CDATTR2
CDREL    EQU   CDATTR2
CDSPZ    EQU   CDATTR2
CDNLR    EQU   CDATTR
CDJPA    EQU   CDATTR
CDNFN    EQU   CDATTR
CDSER    EQU   CDATTR
CDREN    EQU   CDATTR
CDNIC    EQU   CDATTR
CDNIP    EQU   CDATTR
@NM00080 EQU   CDENTRY+26
CDUSE    EQU   CDENTRY+24
CDRRBP   EQU   CDENTRY+4
CDCHAIN  EQU   CDENTRY
ASXBEND  EQU   ASXB+232
ASXBRV25 EQU   ASXB+228
ASXBRV24 EQU   ASXB+224
ASXBPT0E EQU   ASXB+220
ASXBCRB4 EQU   ASXBCASW+3
ASXBCRB3 EQU   ASXBCASW+2
ASXBCRB2 EQU   ASXBCASW+1
ASXBCR06 EQU   ASXBCRB1
ASXBCR05 EQU   ASXBCRB1
ASXBCR04 EQU   ASXBCRB1
ASXBCR03 EQU   ASXBCRB1
ASXBCR02 EQU   ASXBCRB1
ASXBCR01 EQU   ASXBCRB1
ASXBTFD  EQU   ASXBCRB1
ASXBPIP  EQU   ASXBCRB1
ASXBCTDC EQU   ASXB+212
ASXBTDCB EQU   ASXB+208
ASXBRV19 EQU   ASXB+204
ASXBSENV EQU   ASXBSECR+1
ASXBRV34 EQU   ASCBSFLG
ASXBRV33 EQU   ASCBSFLG
ASXBRV32 EQU   ASCBSFLG
ASXBRV31 EQU   ASCBSFLG
ASXBRV30 EQU   ASCBSFLG
ASXBRV29 EQU   ASCBSFLG
ASXBRV28 EQU   ASCBSFLG
ASXBRV27 EQU   ASCBSFLG
ASXBUSER EQU   ASXB+192
ASXBLSRB EQU   ASXBAEQ+20
ASXBFSRB EQU   ASXBAEQ+16
ASXBLRQE EQU   ASXBAEQ+12
ASXBFRQE EQU   ASXBAEQ+8
ASXBLIQE EQU   ASXBAEQ+4
ASXBFIQE EQU   ASXBAEQ
ASXBETSK EQU   ASXB+164
ASXBSIRB EQU   ASXB+160
ASXBPSWD EQU   ASXB+152
ASXBPRG  EQU   ASXB+136
ASXBRV26 EQU   ASXB+132
ASXBOUSB EQU   ASXB+128
ASXBDDR  EQU   ASXB+124
ASXBRCTD EQU   ASXB+120
ASXBRSMD EQU   ASXB+116
ASXBSPSA EQU   ASXB+112
ASXBFRWA EQU   ASXB+108
ASXBFLSA EQU   ASXB+36
ASXBIHSA EQU   ASXB+32
ASXBRV15 EQU   ASXB+28
ASXBRV14 EQU   ASXB+24
ASXBLWA  EQU   ASXB+20
ASXBMPST EQU   ASXB+16
ASXBRS00 EQU   ASXB+14
ASXBTCBS EQU   ASXB+12
ASXBLTCB EQU   ASXB+8
ASXBEGIN EQU   ASXB
ASVTEND  EQU   ASVT+528
ASVTAVAI EQU   ASVTFRST
ASVTRS00 EQU   ASVT+520
ASVTASVT EQU   ASVT+512
ASVTBEGN EQU   ASVT+512
@NM00079 EQU   ASVT
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBRSMA EQU   ASCBRSM+1
ASCBRV54 EQU   ASCBRSMF
ASCBRV53 EQU   ASCBRSMF
ASCBRV52 EQU   ASCBRSMF
ASCBRV51 EQU   ASCBRSMF
ASCBVEQR EQU   ASCBRSMF
ASCBN2LP EQU   ASCBRSMF
ASCB1LPU EQU   ASCBRSMF
ASCB2LPU EQU   ASCBRSMF
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBEGIN EQU   ASCB
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00078 EQU   CVTFIX+248
@NM00077 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
RVT99999 EQU   RVT+384
RVT0096P EQU   RVT+380
RVT0095P EQU   RVT+376
RVT0094P EQU   RVT+372
RVT0093P EQU   RVT+368
RVT0092P EQU   RVT+364
RVT0091P EQU   RVT+360
RVT0090P EQU   RVT+356
RVT0089P EQU   RVT+352
RVT0088P EQU   RVT+348
RVT0087P EQU   RVT+344
RVT0086P EQU   RVT+340
RVT0085P EQU   RVT+336
RVT0084P EQU   RVT+332
RVT0083P EQU   RVT+328
RVT0082P EQU   RVT+324
RVT0081P EQU   RVT+320
RVT0080P EQU   RVT+316
RVT0079P EQU   RVT+312
RVT0078P EQU   RVT+308
RVT0077P EQU   RVT+304
RVT0076P EQU   RVT+300
RVT0075P EQU   RVT+296
RVT0074P EQU   RVT+292
RVT0073P EQU   RVT+288
RVT0072P EQU   RVT+284
RVTDTUTP EQU   RVT+272
RVTDTMTP EQU   RVT+268
RVT0057P EQU   RVT+224
RVT0056P EQU   RVT+220
RVT0055P EQU   RVT+216
RVT0054P EQU   RVT+212
RVT0053P EQU   RVT+208
RVT0044P EQU   RVT+172
RVT0043P EQU   RVT+168
RVT0040P EQU   RVT+156
RVT0039P EQU   RVT+152
RVT0038P EQU   RVT+148
RVT0037P EQU   RVT+144
RVT0031P EQU   RVT+120
RVT0030P EQU   RVT+116
RVT0029P EQU   RVT+112
RVT0020P EQU   RVT+76
RVT0012P EQU   RVT+44
RVT0010P EQU   RVT+36
RVT0009P EQU   RVT+32
RVT0008P EQU   RVT+28
RVT0006P EQU   RVT+20
ZZ69999  EQU   ZZ6+1792
ZZ6BRB   EQU   ZZ6B+12
ZZ6BRC   EQU   ZZ6B+8
@NM00076 EQU   ZZ6B+6
ZZ6BFL   EQU   ZZ6B+4
ZZ6BDA   EQU   ZZ6B
@NM00075 EQU   ZZ6+540
ZZ6BUFI  EQU   ZZ6+536
ZZ6BUFP  EQU   ZZ6+532
ZZ6FILE  EQU   ZZ6+524
ZZ6BUFB  EQU   ZZ6+520
ZZ6BUFL  EQU   ZZ6+518
ZZ6BUFN  EQU   ZZ6+516
ZZ6ZZ6P  EQU   ZZ6+512
@NM00074 EQU   ZZ6+256
ZZ6D999  EQU   ZZ6D+128
@NM00073 EQU   ZZ6D+116
ZZ6DCAP  EQU   ZZ6D+112
ZZ6DPRP  EQU   ZZ6D+108
ZZ6DDA2  EQU   ZZ6D+104
ZZ6DDA1  EQU   ZZ6D+100
@NM00072 EQU   ZZ6DF
ZZ6DFSU  EQU   ZZ6DF
ZZ6DFST  EQU   ZZ6DF
ZZ6DFAB  EQU   ZZ6DF
ZZ6DFMP  EQU   ZZ6DF
ZZ6DFDU  EQU   ZZ6DF
ZZ6DFBS  EQU   ZZ6DF
ZZ6DQA9  EQU   ZZ6DQA+16
@NM00071 EQU   ZZ6DQA+12
ZZ6DQA2  EQU   ZZ6DQA+8
ZZ6DQA1  EQU   ZZ6DQA+4
@NM00070 EQU   ZZ6DQA+2
ZZ6DQAT  EQU   ZZ6DQA
ZZ6DQA0  EQU   ZZ6DQA
ZZ6DRDX  EQU   ZZ6D+64
ZZ6DELK  EQU   ZZ6D+64
ZZ6DMEM  EQU   ZZ6D+56
ZZ6DDT1  EQU   ZZ6DDT
ZZ6DDO   EQU   ZZ6DD+2
ZZ6DDL   EQU   ZZ6DD
@NM00069 EQU   ZZ6D+2
ZZ6DRID  EQU   ZZ6D
ZZ6RDCB  EQU   ZZ6
ZZ60000  EQU   ZZ6
BVT99999 EQU   BVT+256
BVT0064P EQU   BVT+252
BVT0063P EQU   BVT+248
BVT0062P EQU   BVT+244
BVT0061P EQU   BVT+240
BVT0060P EQU   BVT+236
BVT0059P EQU   BVT+232
BVT0057P EQU   BVT+224
BVT0056P EQU   BVT+220
BVTSTBLP EQU   BVT+200
BVT0045P EQU   BVT+176
BVT0044P EQU   BVT+172
BVT0033P EQU   BVT+128
BVT0032P EQU   BVT+124
BVT0031P EQU   BVT+120
BVT0030P EQU   BVT+116
BVT0029P EQU   BVT+112
BVT0026P EQU   BVT+100
BVT0025P EQU   BVT+96
BVT0024P EQU   BVT+92
BVT0023P EQU   BVT+88
BVT0016P EQU   BVT+60
BVT0015P EQU   BVT+56
BVT0014P EQU   BVT+52
BVT0003P EQU   BVT+8
BVT0001P EQU   BVT
SA99     EQU   SA+72
SARC     EQU   SAR+56
SARB     EQU   SAR+52
SARA     EQU   SAR+48
SAR9     EQU   SAR+44
SAR8     EQU   SAR+40
SAR7     EQU   SAR+36
SAR6     EQU   SAR+32
SAR5     EQU   SAR+28
SAR4     EQU   SAR+24
SAR3     EQU   SAR+20
SAR2     EQU   SAR+16
SAR0     EQU   SAR+8
SARF     EQU   SAR+4
SARE     EQU   SAR
SAFWD    EQU   SA+8
SABAK    EQU   SA+4
SA1L     EQU   SA1+1
SA1P     EQU   SA1
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00068 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00067 EQU   UPT
@NM00066 EQU   ECT+52
@NM00065 EQU   ECT+48
@NM00064 EQU   ECT+44
@NM00063 EQU   ECTSWS2+1
@NM00062 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00061 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00060 EQU   PSCB+36
@NM00059 EQU   PSCB+32
@NM00058 EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00057 EQU   PSCBATR1
@NM00056 EQU   PSCBATR1
@NM00055 EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
PSCBUSRL EQU   PSCB+7
PSCBUSER EQU   PSCB
CMDT1    EQU   CMDT
CMDO     EQU   CMD+2
CMDL     EQU   CMD
ZZ299999 EQU   ZZ2+8192
ZZ2AXOT1 EQU   ZZ2AXOT
ZZ2AXOL  EQU   ZZ2AXO
@NM00054 EQU   ZZ2+7288
@NM00053 EQU   ZZ2AMDX+4
ZZ2AMDXC EQU   ZZ2AMDX
ZZ2HSD   EQU   ZZ2+3056
@NM00052 EQU   ZZ2ES
@NM00051 EQU   ZZ2+2868
ZZ2ITSEC EQU   ZZ2ITSE+1
@NM00050 EQU   ZZ2ITSE
ZZ2ITSEP EQU   ZZ2ITSE
ZZ2ITSEW EQU   ZZ2ITSE
@NM00049 EQU   ZZ2ITR+20
ZZ2ITREC EQU   ZZ2ITRE+1
@NM00048 EQU   ZZ2ITRE
ZZ2ITREP EQU   ZZ2ITRE
ZZ2ITREW EQU   ZZ2ITRE
@NM00047 EQU   ZZ2ITR+9
ZZ2ITRRC EQU   ZZ2ITR+8
ZZ2ITR2P EQU   ZZ2ITR+4
ZZ2ITRPP EQU   ZZ2ITR
@NM00046 EQU   ZZ2+1544
ZZ2PGM   EQU   ZZ2+1536
@NM00045 EQU   ZZ2+1526
ZZ2CW    EQU   ZZ2+1524
@NM00044 EQU   ZZ2+1504
@NM00043 EQU   ZZ2+1352
ZZ2FFSYP EQU   ZZ2+1348
ZZ2SASYP EQU   ZZ2+1344
ZZ2RDSYP EQU   ZZ2+1340
ZZ2RASYP EQU   ZZ2+1336
ZZ2PHSYP EQU   ZZ2+1332
ZZ2ESSYP EQU   ZZ2+1328
ZZ200SYP EQU   ZZ2+1324
ZZ2SCWP  EQU   ZZ2+1320
ZZ2TTLP  EQU   ZZ2+1316
ZZ2LOADP EQU   ZZ2+1312
ZZ2VRESP EQU   ZZ2+1308
ZZ2CPPLE EQU   ZZ2CPPL+12
ZZ2CPPLP EQU   ZZ2CPPL+8
ZZ2CPPLU EQU   ZZ2CPPL+4
ZZ2VRSAP EQU   ZZ2+1288
ZZ2DVTP  EQU   ZZ2+1276
@NM00042 EQU   ZZ2+1272
@NM00041 EQU   ZZ2+1268
ZZ2RPLP  EQU   ZZ2+1260
ZZ2TCBP  EQU   ZZ2+1256
@NM00040 EQU   ZZ2+1252
ZZ2ZZ2P  EQU   ZZ2+1248
@NM00039 EQU   ZZ2+1112
ZZ2FPDRP EQU   ZZ2+1108
ZZ2FDSDP EQU   ZZ2+1104
ZZ2APDRP EQU   ZZ2+1100
ZZ2ADSDP EQU   ZZ2+1096
ZZ2ENQ0P EQU   ZZ2+1092
@NM00038 EQU   ZZ2+1080
ZZ2MSG0P EQU   ZZ2+1076
ZZ2FT25P EQU   ZZ2+1072
ZZ2MSGSP EQU   ZZ2+1060
ZZ2ALOCP EQU   ZZ2+1056
@NM00037 EQU   ZZ2+976
ZZ2TOD   EQU   ZZ2+968
ZZ2STGN  EQU   ZZ2STG+4
ZZ2STGP  EQU   ZZ2STG
@NM00036 EQU   ZZ2+952
ZZ2SCMDE EQU   ZZ2+944
ZZ2SCMDN EQU   ZZ2+936
ZZ2IDENT EQU   ZZ2+928
ZZ2A9999 EQU   ZZ2A+656
@NM00035 EQU   ZZ2A+224
@NM00034 EQU   ZZ2A+220
ZZ2AQD99 EQU   ZZ2AQD+60
@NM00033 EQU   ZZ2AQD+56
@NM00032 EQU   ZZ2AQDF
ZZ2AQDFA EQU   ZZ2AQDF
ZZ2AQDIL EQU   ZZ2AQD+48
ZZ2AQDIM EQU   ZZ2AQD+44
ZZ2AQDT9 EQU   ZZ2AQDT+34
ZZ2AQDTE EQU   ZZ2AQDT+33
ZZ2AQDTD EQU   ZZ2AQDT+2
@NM00031 EQU   ZZ2AQDT+1
ZZ2AQDTY EQU   ZZ2AQDT
ZZ2AQDT0 EQU   ZZ2AQDT
ZZ2AQDLB EQU   ZZ2AQD+9
ZZ2AQDOB EQU   ZZ2AQD+8
ZZ2AQDLE EQU   ZZ2AQD+4
ZZ2AQDOF EQU   ZZ2AQD
ZZ2AQD00 EQU   ZZ2AQD
ZZ2AQAS9 EQU   ZZ2AQAS+16
@NM00030 EQU   ZZ2AQAS+12
ZZ2AQAS2 EQU   ZZ2AQAS+8
ZZ2AQAS1 EQU   ZZ2AQAS+4
@NM00029 EQU   ZZ2AQAS+2
ZZ2AQAST EQU   ZZ2AQAS
ZZ2AQAS0 EQU   ZZ2AQAS
ZZ2ADPTA EQU   ZZ2ADPT
ZZ2ADPL  EQU   ZZ2ADP
ZZ2ADMTA EQU   ZZ2ADMT
ZZ2ADML  EQU   ZZ2ADM
ZZ2ADDTA EQU   ZZ2ADDT
ZZ2ADDL  EQU   ZZ2ADD
@NM00028 EQU   ZZ2A+72
ZZ2APIDB EQU   ZZ2APID+3
ZZ2APIDA EQU   ZZ2APID
@NM00027 EQU   ZZ2A+24
@NM00026 EQU   ZZ2AF+5
@NM00025 EQU   ZZ2AF+3
ZZ2AFS   EQU   ZZ2AF+2
ZZ2AFD   EQU   ZZ2AF+2
ZZ2AFQ   EQU   ZZ2AF+2
ZZ2AF$   EQU   ZZ2AF+2
@NM00024 EQU   ZZ2AF+2
ZZ2AFM   EQU   ZZ2AF+2
@NM00023 EQU   ZZ2AF+2
@NM00022 EQU   ZZ2AF+1
ZZ2AFV   EQU   ZZ2AF+1
@NM00021 EQU   ZZ2AF+1
ZZ2AFC   EQU   ZZ2AF+1
@NM00020 EQU   ZZ2AF
ZZ2AFFS  EQU   ZZ2AF
@NM00019 EQU   ZZ2A+8
ZZ2ALINE EQU   ZZ2A+4
@NM00018 EQU   ZZ2A+3
ZZ2ASE   EQU   ZZ2A+2
ZZ2ACH   EQU   ZZ2A
@NM00017 EQU   ZZ2+264
@NM00016 EQU   ZZ2+263
ZZ2PRTT0 EQU   ZZ2PRTT
ZZ2PRTO  EQU   ZZ2PRT+2
ZZ2PRTL  EQU   ZZ2PRT
@NM00015 EQU   ZZ2AMD+56
ZZ2AMDXP EQU   ZZ2AMD+52
ZZ2AMDD  EQU   ZZ2AMD+48
ZZ2AMDL  EQU   ZZ2AMD+44
ZZ2AMDU  EQU   ZZ2AMD+28
ZZ2AMDF  EQU   ZZ2AMD+24
ZZ2AMDS  EQU   ZZ2AMD+20
ZZ2AMDC  EQU   ZZ2AMD+16
ZZ2AMDP  EQU   ZZ2AMD+12
ZZ2AMDB  EQU   ZZ2AMD+8
@NM00014 EQU   @NM00013
ZZ2AMD2  EQU   @NM00013
ZZ2AMD1  EQU   @NM00013
ZZ2AMD0  EQU   ZZ2AMD+6
ZZ2AMDA  EQU   ZZ2AMD+4
ZZ2AMDT  EQU   ZZ2AMD
ZZ199999 EQU   ZZ1+3072
@NM00012 EQU   ZZ1+2160
ZZ1TRTAS EQU   ZZ1+1904
ZZ1TRUPC EQU   ZZ1+1648
ZZ1TRCTX EQU   ZZ1+1392
ZZ1NASID EQU   ZZ1N+274
ZZ1NSTRL EQU   ZZ1N+272
ZZ1NOFF  EQU   ZZ1N+268
ZZ1NBDY  EQU   ZZ1N+264
ZZ1NADE  EQU   ZZ1N+260
ZZ1NADB  EQU   ZZ1N+256
ZZ1NSTR  EQU   ZZ1N
@NM00011 EQU   ZZ1+1080
ZZ1TREBC EQU   ZZ1+824
@NM00010 EQU   ZZ1+377
ZZ1USTAE EQU   ZZ1+376
@NM00009 EQU   ZZ1F+1
@NM00008 EQU   ZZ1F
ZZ1FM    EQU   ZZ1F
ZZ1FX    EQU   ZZ1F
ZZ1FU    EQU   ZZ1F
ZZ1EVEC  EQU   ZZ1EVE+1
@NM00007 EQU   ZZ1EVE
ZZ1EVEW  EQU   ZZ1EVE
ZZ1ACMP  EQU   ZZ1ATTN
@NM00006 EQU   ZZ1+144
ZZ1FPP   EQU   ZZ1+140
ZZ1ZZ6P  EQU   ZZ1+136
@NM00005 EQU   ZZ1+84
ZZ1PLINE EQU   ZZ1+80
ZZ1PGSZ  EQU   ZZ1+76
ZZ1PCNT  EQU   ZZ1+72
@NM00004 EQU   ZZ1+68
ZZ1TPAGE EQU   ZZ1+64
ZZ1TLINE EQU   ZZ1+60
@NM00003 EQU   ZZ1+48
ZZ1DSDP  EQU   ZZ1+44
ZZ1PDRP  EQU   ZZ1+40
ZZ1ZZ2P  EQU   ZZ1+36
ZZ1327WP EQU   ZZ1+32
ZZ1ACBP  EQU   ZZ1+28
@NM00002 EQU   ZZ1+24
ZZ1PDCBP EQU   ZZ1+20
ZZ1BLRBL EQU   ZZ1+16
@NM00001 EQU   ZZ1+12
ZZ1NULL  EQU   ZZ1+4
ZZ1IDE   EQU   ZZ1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00286 EQU   EXITRLSA
@RT00301 EQU   EXITRLSA
@RT00309 EQU   EXITRLSA
@RT00362 EQU   ENDLOOP
@RT00376 EQU   ENDLOOP
@RT00412 EQU   ENDLOOP
@RT00444 EQU   ENDLOOP
@RT00867 EQU   NOCDEQ
@RT00892 EQU   NOCDEQ
@RT00895 EQU   NOCDEQ
@RT00921 EQU   NOCDEQ
@RT00924 EQU   NOCDEQ
RBITOUT  EQU   @EL00003
@RT00765 EQU   RBITOUT
@RT00771 EQU   RBITOUT
@ENDDATA EQU   *
         END   BLSRSUMM,(C'PLS2326',0701,78058)
