         TITLE 'IPCS MODIFY DSN ATTRIBUTES COMMAND PROCESSOR           *
                        '
* THIS MODULE WRITEN FOR @G57LPGS
BLSFMD00 CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'BLSFMD00  78.067'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         BLSUALLR R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
*BLREXTRN - IDENTIFY EXTERNAL REFERENCES
         EXTRN BLSDC600
*                                      CODE SAVES                    */
*   FLAGS=FLAGS&&FLAGS;             /* CLEAR ALL FLAG BITS           */
         XC    FLAGS(1),FLAGS                                      0221
*   ZZ2PTR=R1;                      /* SAVE PTR TO ZZ2 CTRL BLK      */
         LR    ZZ2PTR,R1                                           0222
*   RESPECIFY                                                      0223
*     R1 UNRESTRICTED;              /* FREE REG1 TO USE WITH PARMS   */
*   RETC=ZERO;                      /* INITIALIZE THE RETURN CODE    */
         SLR   RETC,RETC                                           0224
*   MEMRETC=ZERO;                   /* INITIALIZE THE MEMBER CHECK 0225
*                                      RETURN CODE                   */
         SLR   MEMRETC,MEMRETC                                     0225
*   MSGHDR=ZERO;                    /* INITIALIZE THE MESSAGE HEADER */
         SLR   @14,@14                                             0226
         ST    @14,MSGHDR                                          0226
*   DO;                             /* BLSUPARS CONFIRMATION MF(E,PX)*/
*     CALL BLSUPARI(ZZ2,PCCSECT,PDAPTR);/* PARSE OPERANDS            */
         ST    ZZ2PTR,@AL00001                                     0228
         L     @14,PCPTR                                           0228
         ST    @14,@AL00001+4                                      0228
         LA    @14,PDAPTR                                          0228
         ST    @14,@AL00001+8                                      0228
         L     @10,ZZ2BVTP(,ZZ2PTR)                                0228
         L     @15,BVTPARIP(,@10)                                  0228
         LA    @01,@AL00001                                        0228
         BALR  @14,@15                                             0228
*     RESPECIFY                                                    0229
*      (GPR15F) RESTRICTED;                                        0229
*     IF GPR15F^=ZZZFLAGI THEN                                     0230
*                                                                  0230
         LTR   GPR15F,GPR15F                                       0230
         BZ    @RF00230                                            0230
*       /*************************************************************/
*       /*                                                           */
*       /* UNABLE TO PARSE                                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0231
*       DO;                         /* UNABLE TO PARSE               */
*         RETC=GPR15F;              /* RETURN CODE                   */
         LR    RETC,GPR15F                                         0232
*         GO TO EXITNORL;           /* EXIT WITHOUT PDL              */
         B     EXITNORL                                            0233
*       END;                                                       0234
*     RESPECIFY                                                    0235
*      (GPR15F) UNRESTRICTED;                                      0235
@RF00230 DS    0H                                                  0236
*     RESPECIFY                                                    0236
*      (PDRPTR) RESTRICTED;                                        0236
*     PDRPTR=PDAPTR;                /* ->PDL                         */
         L     PDRPTR,PDAPTR                                       0237
*     GENERATE REFS(PD,PDRPTR) CODE(USING PD,PDRPTR);              0238
         USING PD,PDRPTR
*     IF PXTEST=PXTEST1 THEN                                       0239
         CLC   PXTEST(2),@CH00040                                  0239
         BNE   @RF00239                                            0239
*       ZZ2AFX=ZZZ1;                /* TEST                          */
         OI    ZZ2AFX(ZZ2PTR),B'10000000'                          0240
*     ELSE                                                         0241
*       IF PXTEST=PXTEST0 THEN                                     0241
         B     @RC00239                                            0241
@RF00239 CLC   PXTEST(2),@CH00067                                  0241
         BNE   @RF00241                                            0241
*         ZZ2AFX=ZZZ0;              /* NOTEST                        */
         NI    ZZ2AFX(ZZ2PTR),B'01111111'                          0242
*     IF PXCONF=PXCONF1 THEN                                       0243
@RF00241 DS    0H                                                  0243
@RC00239 CLC   PXCONF(2),@CH00040                                  0243
         BNE   @RF00243                                            0243
*       ZZ2AFC=ZZZ1;                /* CONFIRM                       */
         OI    ZZ2AFC(ZZ2PTR),B'10000000'                          0244
*     ELSE                                                         0245
*       IF PXCONF=PXCONF0 THEN                                     0245
         B     @RC00243                                            0245
@RF00243 CLC   PXCONF(2),@CH00067                                  0245
         BNE   @RF00245                                            0245
*         ZZ2AFC=ZZZ0;              /* NOCONFIRM                     */
         NI    ZZ2AFC(ZZ2PTR),B'01111111'                          0246
*   END;                            /* BLSUPARS CONFIRMATION MF(E,PX)
*                                      GO PARSE THE COMMAND OPERANDS */
@RF00245 DS    0H                                                  0247
@RC00243 DS    0H                                                  0248
*   IF DFT=DEFLT THEN               /* IF SUCCESSFUL IS DSN NEW DEFLT*/
         CLC   DFT(2),@CH00040                                     0248
         BNE   @RF00248                                            0248
*     DEFMSGSW=ON;                  /* INDICATE ISSUE MSG IF ERR NODE*/
         OI    DEFMSGSW,B'10000000'                                0249
*   ELSE                            /* DEFAULT NOT REQUESTED         */
*     DEFMSGSW=OFF;                 /* INDICATE NO MSG NECESSARY     */
         B     @RC00248                                            0250
@RF00248 NI    DEFMSGSW,B'01111111'                                0250
*   CALL BLSFMV00;                  /* GO VALIDATE THE MODIFY CMD OPS*/
@RC00248 BAL   @14,BLSFMV00                                        0251
*   RETC=RF;                        /* SAVE THE RETURN CODE          */
         LR    RETC,RF                                             0252
*   IF RETC=ZERO×RETC=EIGHT THEN    /* ARE COMMAND OPERANDS VALID    */
         LTR   RETC,RETC                                           0253
         BZ    @RT00253                                            0253
         C     RETC,@CF00048                                       0253
         BNE   @RF00253                                            0253
@RT00253 DS    0H                                                  0254
*     DO;                           /* YES, CONTINUE PROCESSING      */
*       CALL BLSFND00(ZZ2,DSNKEY,TYS,MAN,DSC,CMDDSDRC);/* BUILD DSD
*                                      RECORD FROM COMMAND PARMS     */
         ST    ZZ2PTR,@AL00001                                     0255
         LA    @14,DSNKEY                                          0255
         ST    @14,@AL00001+4                                      0255
         LA    @14,TYS                                             0255
         ST    @14,@AL00001+8                                      0255
         LA    @14,MAN                                             0255
         ST    @14,@AL00001+12                                     0255
         LA    @14,DSC                                             0255
         ST    @14,@AL00001+16                                     0255
         LA    @14,CMDDSDRC                                        0255
         ST    @14,@AL00001+20                                     0255
         L     @10,ZZ2DVTP(,ZZ2PTR)                                0255
         L     @15,DVTND00P(,@10)                                  0255
         LA    @01,@AL00001                                        0255
         BALR  @14,@15                                             0255
*       IF MAN=ZERO THEN            /* DID USER SPECIFY MANAGEMENT 0256
*                                      ATR                           */
         LH    @14,MAN                                             0256
         LTR   @14,@14                                             0256
         BNZ   @RF00256                                            0256
*         IF ADDR(DSDBUF)->DSDSLOWN=ON THEN/* NO, IS DSN NOW MANAGED */
         LA    @14,DSDBUF                                          0257
         TM    DSDSLOWN(@14),B'10000000'                           0257
         BNO   @RF00257                                            0257
*           ADDR(CMDDSDRC)->DSDSLOWN=ON;/* ORGINAL MANAGEMENT      0258
*                                      ATTRIBUTE                     */
         LA    @14,CMDDSDRC                                        0258
         OI    DSDSLOWN(@14),B'10000000'                           0258
*         ELSE                      /* DSN NOT MANAGED               */
*           ADDR(CMDDSDRC)->DSDSLOWN=OFF;/* USE ORGINAL NON MANAGED
*                                      AT                            */
         B     @RC00257                                            0259
@RF00257 LA    @14,CMDDSDRC                                        0259
         NI    DSDSLOWN(@14),B'01111111'                           0259
*       IF DCR=ZERO THEN            /* DID USER SPECIFY A DESCRIPTION*/
@RC00257 DS    0H                                                  0260
@RF00256 LH    @14,DCR                                             0260
         LTR   @14,@14                                             0260
         BNZ   @RF00260                                            0260
*         ADDR(CMDDSDRC)->DSDDESC=ADDR(DSDBUF)->DSDDESC;/* NO, USE 0261
*                                      THE ORGINAL DESCRIPTION       */
         LA    @14,CMDDSDRC                                        0261
         LA    @10,DSDBUF                                          0261
         MVC   DSDDESC(60,@14),DSDDESC(@10)                        0261
*       IF TYP=ZERO THEN            /* DID USER SPECIFY A TYPE       */
@RF00260 LH    @14,TYP                                             0262
         LTR   @14,@14                                             0262
         BNZ   @RF00262                                            0262
*         ADDR(CMDDSDRC)->DSDDSNTY=ADDR(DSDBUF)->DSDDSNTY;/* NO, USE
*                                      THE ORGINAL TYPE              */
         LA    @14,CMDDSDRC                                        0263
         LA    @10,DSDBUF                                          0263
         MVC   DSDDSNTY(8,@14),DSDDSNTY(@10)                       0263
*       ELSE                        /* USER SPECIFIED A TYPE         */
*         IF TYS=ZERO THEN          /* DID USER SPECIFY A TYPE SUBFLD*/
         B     @RC00262                                            0264
@RF00262 LH    @14,TYS                                             0264
         LTR   @14,@14                                             0264
         BNZ   @RF00264                                            0264
*           ADDR(CMDDSDRC)->DSDDSNTY=ADDR(DSDBUF)->DSDDSNTY;/* NO, 0265
*                                      USE THE ORGINAL TYPE          */
         LA    @14,CMDDSDRC                                        0265
         LA    @10,DSDBUF                                          0265
         MVC   DSDDSNTY(8,@14),DSDDSNTY(@10)                       0265
*       CALL BLSFOD00(ZZ2,DSDBUF,CMDDSDRC,DSNS,TYS,MAN,DSC);/* OLD 0266
*                                      AND NEW COMPARE, RESOLVE    0266
*                                      CONFLISTS                     */
@RF00264 DS    0H                                                  0266
@RC00262 ST    ZZ2PTR,@AL00001                                     0266
         LA    @14,DSDBUF                                          0266
         ST    @14,@AL00001+4                                      0266
         LA    @14,CMDDSDRC                                        0266
         ST    @14,@AL00001+8                                      0266
         LA    @14,DSNS                                            0266
         ST    @14,@AL00001+12                                     0266
         LA    @14,TYS                                             0266
         ST    @14,@AL00001+16                                     0266
         LA    @14,MAN                                             0266
         ST    @14,@AL00001+20                                     0266
         LA    @14,DSC                                             0266
         ST    @14,@AL00001+24                                     0266
         L     @10,ZZ2DVTP(,ZZ2PTR)                                0266
         L     @15,DVTOD00P(,@10)                                  0266
         LA    @01,@AL00001                                        0266
         BALR  @14,@15                                             0266
*       RETC=RF;                    /* SAVE THE REURN CODE           */
         LR    RETC,RF                                             0267
*       IF RETC=ZERO×RETC=FOUR THEN /* NEW RECORD VALID ?            */
         LTR   RETC,RETC                                           0268
         BZ    @RT00268                                            0268
         C     RETC,@CF00037                                       0268
         BNE   @RF00268                                            0268
@RT00268 DS    0H                                                  0269
*         DO;                       /* YES, PROCEDE                  */
*           CALL BLSFUD00(ZZ2,CMDDSDRC,LENGTH(CMDDSDRC));/* UPDATE 0270
*                                      DSD                           */
         ST    ZZ2PTR,@AL00001                                     0270
         LA    @14,CMDDSDRC                                        0270
         ST    @14,@AL00001+4                                      0270
         LA    @14,@CF01318                                        0270
         ST    @14,@AL00001+8                                      0270
         L     @10,ZZ2DVTP(,ZZ2PTR)                                0270
         L     @15,DVTUD00P(,@10)                                  0270
         LA    @01,@AL00001                                        0270
         BALR  @14,@15                                             0270
*           RETC=MAX(RF,RETC);      /* SAVE THE RETURN CODE          */
         CR    RETC,RF                                             0271
         BNL   *+6
         LR    RETC,RF                                             0271
*         END;                      /* END DSD UPDATE SUCCESSFUL     */
*       IF DFT=DEFLT&(RETC=ZERO×RETC=FOUR) THEN/* DEFAULT REQUESTED  */
@RF00268 CLC   DFT(2),@CH00040                                     0273
         BNE   @RF00273                                            0273
         LTR   RETC,RETC                                           0273
         BZ    @RT00273                                            0273
         C     RETC,@CF00037                                       0273
         BNE   @RF00273                                            0273
@RT00273 DS    0H                                                  0274
*         DO;                       /* YES, GO SET DEFAULT           */
*           CALL BLSFSD00(ZZ2,DSNS);/* GO SET THE DEFAULT DSN        */
         ST    ZZ2PTR,@AL00001                                     0275
         LA    @14,DSNS                                            0275
         ST    @14,@AL00001+4                                      0275
         L     @10,ZZ2DVTP(,ZZ2PTR)                                0275
         L     @15,DVTSD00P(,@10)                                  0275
         LA    @01,@AL00001                                        0275
         BALR  @14,@15                                             0275
*           RETC=MAX(RF,RETC);      /* SAVE THE RETURN CODE          */
         CR    RETC,RF                                             0276
         BNL   *+6
         LR    RETC,RF                                             0276
*           IF RF=ZERO THEN         /* DID SET DEFAULT WORK          */
         LTR   RF,RF                                               0277
         BNZ   @RF00277                                            0277
*             DEFMSGSW=OFF;         /* TURN OFF DEFAULT ERROR MSG SW */
         NI    DEFMSGSW,B'01111111'                                0278
*         END;                      /* END SET DEFAULT PROCESSING    */
@RF00277 DS    0H                                                  0280
*     END;                          /* END COMMAND OPERANDS VALID    */
@RF00273 DS    0H                                                  0281
*EXITRLSA:                                                         0281
*   DO WHILE(PDAPTR^=0);            /* BLRRLSA MF(EXECUTE,PD)        */
@RF00253 DS    0H                                                  0281
EXITRLSA B     @DE00281                                            0281
@DL00281 DS    0H                                                  0282
*     PDRPTR=PDAPTR;                                               0282
         L     PDRPTR,PDAPTR                                       0282
*     PDAPTR=PDXP;                                                 0283
         L     @14,PDXP-1(,PDRPTR)                                 0283
         LA    @14,0(,@14)                                         0283
         ST    @14,PDAPTR                                          0283
*     DO;                           /* FREEMAIN(R)                 0284
*                                      LV(PDL)SP(1)A(PDDSECT)        */
*       RESPECIFY                                                  0285
*        (GPR01F,                                                  0285
*         GPR00F) RESTRICTED;                                      0285
*       GPR00F=PDL;                 /* LENGTH REQUESTED              */
         L     GPR00F,PDL-1(,PDRPTR)                               0286
         ICM   GPR00F,8,@CB01327                                   0286
*       GPR01F=1;                   /* SP IN REG 1                   */
         LA    GPR01F,1                                            0287
*       GEN(SLL   GPR01F,24)                                       0288
*       NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;               0288
         SLL   GPR01F,24
*       GPR00F=GPR00F×GPR01F;       /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                       0289
*       GPR01F=ADDR(PDDSECT);       /* SET REGISTER ONE              */
         LR    GPR01F,PDRPTR                                       0290
*       SVC(10);                    /* R-FORM OF GETMAIN             */
         SVC   10                                                  0291
*       RESPECIFY                                                  0292
*        (GPR01F,                                                  0292
*         GPR00F) UNRESTRICTED;                                    0292
*     END;                          /* FREEMAIN(R)                 0293
*                                      LV(PDL)SP(1)A(PDDSECT)        */
*   END;                            /* BLRRLSA MF(EXECUTE,PD) FREE 0294
*                                      PRASE DESC LIST               */
@DE00281 L     @14,PDAPTR                                          0294
         LTR   @14,@14                                             0294
         BNZ   @DL00281                                            0294
*   IF DEFMSGSW=ON THEN             /* IS DEFAULT ERROR MSG REQUIRED */
         TM    DEFMSGSW,B'10000000'                                0295
         BNO   @RF00295                                            0295
*     DO;                           /* BLSDMSG                     0296
*                                      (ZZ2,NODEFALT,MSGHDR,BLSDMSGS)
*                                      LIFO ROUTE(TERM)              */
*       CALL BLSDMSG0(ZZ2,NODEFALT,MSGHDR,BLSDMSGS,'10010000'B,0);/*
*                                      BUILD MESSAGE                 */
         ST    ZZ2PTR,@AL00001                                     0297
         LA    @14,@CF01233                                        0297
         ST    @14,@AL00001+4                                      0297
         LA    @14,MSGHDR                                          0297
         ST    @14,@AL00001+8                                      0297
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0297
         ST    @14,@AL00001+12                                     0297
         LA    @14,@CB01273                                        0297
         ST    @14,@AL00001+16                                     0297
         LA    @14,@CF00045                                        0297
         ST    @14,@AL00001+20                                     0297
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0297
         LA    @01,@AL00001                                        0297
         BALR  @14,@15                                             0297
*     END;                          /* BLSDMSG                     0298
*                                      (ZZ2,NODEFALT,MSGHDR,BLSDMSGS)
*                                      LIFO ROUTE(TERM) ISSUE NO   0298
*                                      DEFAULT ESTABLISHED ERROR   0298
*                                      MESSAGE TO USER               */
*   IF ENQDONE=ON THEN              /* DID MD DO PROB ENQUE          */
@RF00295 TM    ENQDONE,B'01000000'                                 0299
         BNO   @RF00299                                            0299
*     CALL BLSDDEQP(ZZ2,CURPRNUM);  /* DEQUEUE FROM PROBLEM          */
         ST    ZZ2PTR,@AL00001                                     0300
         LA    @14,CURPRNUM                                        0300
         ST    @14,@AL00001+4                                      0300
         L     @10,ZZ2DVTP(,ZZ2PTR)                                0300
         L     @15,DVTDEQPP(,@10)                                  0300
         LA    @01,@AL00001                                        0300
         BALR  @14,@15                                             0300
*EXITNORL:                          /* ERROR PARSING THE CMND      0301
*                                      OPERANDS                      */
*   RETURN CODE(MAX(RETC,MEMRETC)); /* RETURN TO MONITOR WITH PARSE
*                                      RC                            */
@RF00299 DS    0H                                                  0301
EXITNORL LR    @10,MEMRETC                                         0301
         CR    @10,RETC                                            0301
         BNL   *+6
         LR    @10,RETC                                            0301
         L     @13,4(,@13)                                         0301
         L     @00,@SIZDATD                                        0301
         LR    @01,@11                                             0301
         BLSUFRER R,LV=(0),A=(1)
         LR    @15,@10                                             0301
         L     @14,12(,@13)                                        0301
         LM    @00,@12,20(@13)                                     0301
         BR    @14                                                 0301
*                                                                  0302
*/****************************************************************** */
*/*                                                                  */
*/*   BLSFMV00 - VERIFY COMMAND PARAMETERS                           */
*/*                                                                  */
*/****************************************************************** */
*                                                                  0302
*BLSFMV00:                                                         0302
*   PROCEDURE;                                                     0302
BLSFMV00 STM   @14,@07,@SA00002                                    0302
         STM   @09,@12,@SA00002+40                                 0302
*   CALL BLSFDS00(ZZ2,DSNS,CURDSN,CURMEM,DSNKEY);/* SETUP DSN        */
         ST    ZZ2PTR,@AL00001                                     0303
         LA    @14,DSNS                                            0303
         ST    @14,@AL00001+4                                      0303
         LA    @14,CURDSN                                          0303
         ST    @14,@AL00001+8                                      0303
         LA    @14,CURMEM                                          0303
         ST    @14,@AL00001+12                                     0303
         LA    @14,DSNKEY                                          0303
         ST    @14,@AL00001+16                                     0303
         L     @10,ZZ2DVTP(,ZZ2PTR)                                0303
         L     @15,DVTDS00P(,@10)                                  0303
         LA    @01,@AL00001                                        0303
         BALR  @14,@15                                             0303
*   RETC=RF;                        /* SAVE THE RETURN CODE          */
         LR    RETC,RF                                             0304
*   IF RETC=ZERO THEN               /* DID DSN SETUP WORK OK         */
         LTR   RETC,RETC                                           0305
         BNZ   @RF00305                                            0305
*     DO;                           /* YES, GO SET UP PROB           */
*       IF CURMEM=BLANK THEN        /* ANY MEMBER NAME SPECIFIED     */
         CLC   CURMEM(8),@CC00099                                  0307
         BNE   @RF00307                                            0307
*         CURMEMNM=BLANKS;          /* BLANK THE MEMBER NAME         */
         MVC   CURMEMNM(10),@CC01205                               0308
*       ELSE                        /* MEMBER NAME IS PRESENT        */
*         DO;                       /* ADD LEFT AND RIGHT PARENS     */
         B     @RC00307                                            0309
@RF00307 DS    0H                                                  0310
*           CURMNLP=LEFTPARN;       /* SET IN LEFT PAREN             */
         MVI   CURMNLP,C'('                                        0310
*           CURMNRP=RITEPARN;       /* SET IN RIGHT PAREN            */
         MVI   CURMNRP,C')'                                        0311
*         END;                      /* END NON BLANK MEMBER NAME     */
*       CALL BLSFPS00(ZZ2,PRN,CURPROB,PROBKEY);/* SETUP PROB         */
@RC00307 ST    ZZ2PTR,@AL00001                                     0313
         LA    @14,PRN                                             0313
         ST    @14,@AL00001+4                                      0313
         LA    @14,CURPROB                                         0313
         ST    @14,@AL00001+8                                      0313
         LA    @14,PROBKEY                                         0313
         ST    @14,@AL00001+12                                     0313
         L     @10,ZZ2DVTP(,ZZ2PTR)                                0313
         L     @15,DVTPS00P(,@10)                                  0313
         LA    @01,@AL00001                                        0313
         BALR  @14,@15                                             0313
*       RETC=RF;                    /* SAVE THE RETURN CODE          */
         LR    RETC,RF                                             0314
*       IF RETC=ZERO THEN           /* DID PROB NUMB SETUP WORK      */
         LTR   RETC,RETC                                           0315
         BNZ   @RF00315                                            0315
*         DO;                       /* YES, DO MEMBER CHECK          */
*           IF DSNKEYMN^=BLANK THEN /* WAS THE MEMBER NAME SPEC      */
         CLC   DSNKEYMN(8),@CC00099                                0317
         BE    @RF00317                                            0317
*             DO;                   /* YES, CHECK IF MANAGED       0318
*                                      SPECIFIED                     */
*               IF MAN=MNP THEN     /* MANAGED SPECIFIED             */
         CLC   MAN(2),@CH00040                                     0319
         BNE   @RF00319                                            0319
*                 DO;                                              0320
*                   MEMRETC=EIGHT;  /* YES, INDICATE ERROR COND      */
         LA    MEMRETC,8                                           0321
*                   DO;             /* BLSDMSG                     0322
*                                      (ZZ2,MEMMAN,MSGHDR,BLSDMSGS)
*                                      ROUTE(TERM)LIFO               */
*                     CALL BLSDMSG0(ZZ2,MEMMAN,MSGHDR,BLSDMSGS,    0323
*                         '10010000'B,0);/* BUILD MESSAGE            */
         ST    ZZ2PTR,@AL00001                                     0323
         LA    @14,@CF01227                                        0323
         ST    @14,@AL00001+4                                      0323
         LA    @14,MSGHDR                                          0323
         ST    @14,@AL00001+8                                      0323
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0323
         ST    @14,@AL00001+12                                     0323
         LA    @14,@CB01273                                        0323
         ST    @14,@AL00001+16                                     0323
         LA    @14,@CF00045                                        0323
         ST    @14,@AL00001+20                                     0323
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0323
         LA    @01,@AL00001                                        0323
         BALR  @14,@15                                             0323
*                   END;            /* BLSDMSG                     0324
*                                      (ZZ2,MEMMAN,MSGHDR,BLSDMSGS)
*                                      ROUTE(TERM)LIFO MESSAGE THE 0324
*                                      USER                          */
*                   MAN=UNMGD;      /* SET UNMANAGED ATTRIBUTE FOR 0325
*                                      MEM                           */
         MVC   MAN(2),@CH00067                                     0325
*                 END;                                             0326
*               ELSE                /* MANAGED NOT SPECED ALL OK     */
*                 MEMRETC=ZERO;     /* INDICATE A ZERO RETURN        */
         B     @RC00319                                            0327
@RF00319 SLR   MEMRETC,MEMRETC                                     0327
*             END;                  /* END MEMBER NAME SPECIFIED     */
*           ELSE                    /* MEMBER NAME NOT SPECIFIED     */
*             MEMRETC=ZERO;         /* INDICATE ALL OK               */
         B     @RC00317                                            0329
@RF00317 SLR   MEMRETC,MEMRETC                                     0329
*           CALL BLSDENQP(ZZ2,CURPRNUM,EXCLUSIV);/* GET CONTROL PR   */
@RC00317 ST    ZZ2PTR,@AL00001                                     0330
         LA    @14,CURPRNUM                                        0330
         ST    @14,@AL00001+4                                      0330
         LA    @14,@CC01202                                        0330
         ST    @14,@AL00001+8                                      0330
         L     @10,ZZ2DVTP(,ZZ2PTR)                                0330
         L     @15,DVTENQPP(,@10)                                  0330
         LA    @01,@AL00001                                        0330
         BALR  @14,@15                                             0330
*           RETC=RF;                /* SAVE THE RETURN CODE          */
         LR    RETC,RF                                             0331
*           IF RETC=ZERO THEN       /* DID ENQUEUE ON PROB WORK      */
         LTR   RETC,RETC                                           0332
         BNZ   @RF00332                                            0332
*             DO;                   /* YES, CONTINUE                 */
*               ENQDONE=ON;         /* SHOW ENQUEUE SUCCESSFUL       */
         OI    ENQDONE,B'01000000'                                 0334
*               CALL BLSFGP00(ZZ2,PROBKEY,PDRBUF);/* CALL TO GET PDR
*                                      ST                            */
         ST    ZZ2PTR,@AL00001                                     0335
         LA    @14,PROBKEY                                         0335
         ST    @14,@AL00001+4                                      0335
         LA    @14,PDRBUF                                          0335
         ST    @14,@AL00001+8                                      0335
         L     @10,ZZ2DVTP(,ZZ2PTR)                                0335
         L     @15,DVTGP00P(,@10)                                  0335
         LA    @01,@AL00001                                        0335
         BALR  @14,@15                                             0335
*               RETC=RF;            /* SAVE THE RETURN CODE          */
         LR    RETC,RF                                             0336
*               IF RETC=ZERO THEN   /* WAS PDR ST REC OBTAINED       */
         LTR   RETC,RETC                                           0337
         BNZ   @RF00337                                            0337
*                 DO;               /* YES, GO CHECK AUTHORIZATION   */
*                   CALL BLSEAUTH(ZZ2,PDRBUF,RULE);/* CHECK AUTH     */
         ST    ZZ2PTR,@AL00001                                     0339
         LA    @14,PDRBUF                                          0339
         ST    @14,@AL00001+4                                      0339
         LA    @14,@CC01217                                        0339
         ST    @14,@AL00001+8                                      0339
         L     @10,ZZ2DVTP(,ZZ2PTR)                                0339
         L     @15,DVTAUTHP(,@10)                                  0339
         LA    @01,@AL00001                                        0339
         BALR  @14,@15                                             0339
*                   RETC=RF;        /* SAVE THE RETURN CODE          */
         LR    RETC,RF                                             0340
*                   IF RETC=ZERO THEN/* IS THE USER AUTHORIZED       */
         LTR   RETC,RETC                                           0341
         BNZ   @RF00341                                            0341
*                     DO;           /* YES, GO GET DSD BASE REC      */
*                       CALL BLSFGD00(ZZ2,DSNKEY,DSDBUF);          0343
*                                                                  0343
         ST    ZZ2PTR,@AL00001                                     0343
         LA    @14,DSNKEY                                          0343
         ST    @14,@AL00001+4                                      0343
         LA    @14,DSDBUF                                          0343
         ST    @14,@AL00001+8                                      0343
         L     @10,ZZ2DVTP(,ZZ2PTR)                                0343
         L     @15,DVTGD00P(,@10)                                  0343
         LA    @01,@AL00001                                        0343
         BALR  @14,@15                                             0343
*                       /*********************************************/
*                       /*                                           */
*                       /* GET THE DSD BASE REC THIS DSN             */
*                       /*                                           */
*                       /*********************************************/
*                                                                  0344
*                       RETC=RF;    /* SAVE THE RETURN CODE          */
         LR    RETC,RF                                             0344
*                       IF RETC=ZERO THEN/* ALL NON ZERO RET CODE    */
         LTR   RETC,RETC                                           0345
         BNZ   @RF00345                                            0345
*                         DO;       /* GO GET ASSOC RECORD           */
*                           CALL BLSFFP00(ZZ2,DSNKEYDS,DSNKEYMN,   0347
*                               PDRKEYPN,FPDSDBUF,PDRBUF);         0347
         ST    ZZ2PTR,@AL00001                                     0347
         LA    @14,DSNKEYDS                                        0347
         ST    @14,@AL00001+4                                      0347
         LA    @14,DSNKEYMN                                        0347
         ST    @14,@AL00001+8                                      0347
         LA    @14,PDRKEYPN                                        0347
         ST    @14,@AL00001+12                                     0347
         LA    @14,FPDSDBUF                                        0347
         ST    @14,@AL00001+16                                     0347
         LA    @14,PDRBUF                                          0347
         ST    @14,@AL00001+20                                     0347
         L     @10,ZZ2DVTP(,ZZ2PTR)                                0347
         L     @15,DVTFP00P(,@10)                                  0347
         LA    @01,@AL00001                                        0347
         BALR  @14,@15                                             0347
*                           RETC=RF;/* SAV THE RETURN CODE           */
         LR    RETC,RF                                             0348
*                           IF RETC^=ZERO THEN/* WAS PDR DS ASSOC  0349
*                                      FOUND                         */
         SLR   @14,@14                                             0349
         CR    RETC,@14                                            0349
         BE    @RF00349                                            0349
*                             DO;   /* NO, MSG USER                  */
*                               DO; /* BLSDMSG                     0351
*                                      (ZZ2,PRBDSNNA,MSGHDR,BLSDMSGS)
*                                      ROUTE(TERM)LIFO COMP INSERT(CU
*                                      RDSN,CURMNLP,CURMEM,CURMNRP,FP
*                                      PIDP,CURPRNUM)                */
*                                 IOPTLIST(1)=ADDR(IOPTLIST(4));/* 0352
*                                      CHAIN TO NEXT INSERT          */
         LA    @10,IOPTLIST+12                                     0352
         ST    @10,IOPTLIST                                        0352
*                                 IOPTLIST(2)=ADDR(CURDSN);/* INSERT
*                                      NAME POINTER                  */
         LA    @10,CURDSN                                          0353
         ST    @10,IOPTLIST+4                                      0353
*                                 IOPTLIST(3)=0;/* ZERO RESERVED   0354
*                                      FIELD                         */
         ST    @14,IOPTLIST+8                                      0354
*                                 RFY                              0355
*                                   I015F BASED(ADDR(IOPTLIST(3)));/*
*                                      ACCESS BYTES 1-2              */
*                                 I015F=LENGTH(CURDSN);/* INSERT   0356
*                                      LENGTH                        */
         LA    @10,IOPTLIST+8                                      0356
         MVC   I015F(2,@10),@CH00085                               0356
*                                 IOPTLIST(4)=ADDR(IOPTLIST(7));/* 0357
*                                      CHAIN TO NEXT INSERT          */
         LA    @10,IOPTLIST+24                                     0357
         ST    @10,IOPTLIST+12                                     0357
*                                 IOPTLIST(5)=ADDR(CURMNLP);/* INSERT
*                                      NAME POINTER                  */
         LA    @10,CURMNLP                                         0358
         ST    @10,IOPTLIST+16                                     0358
*                                 IOPTLIST(6)=0;/* ZERO RESERVED   0359
*                                      FIELD                         */
         ST    @14,IOPTLIST+20                                     0359
*                                 RFY                              0360
*                                   I015F BASED(ADDR(IOPTLIST(6)));/*
*                                      ACCESS BYTES 1-2              */
*                                 I015F=LENGTH(CURMNLP);/* INSERT  0361
*                                      LENGTH                        */
         LA    @10,1                                               0361
         LA    @09,IOPTLIST+20                                     0361
         STH   @10,I015F(,@09)                                     0361
*                                 IOPTLIST(7)=ADDR(IOPTLIST(10));/*
*                                      CHAIN TO NEXT INSERT          */
         LA    @09,IOPTLIST+36                                     0362
         ST    @09,IOPTLIST+24                                     0362
*                                 IOPTLIST(8)=ADDR(CURMEM);/* INSERT
*                                      NAME POINTER                  */
         LA    @09,CURMEM                                          0363
         ST    @09,IOPTLIST+28                                     0363
*                                 IOPTLIST(9)=0;/* ZERO RESERVED   0364
*                                      FIELD                         */
         ST    @14,IOPTLIST+32                                     0364
*                                 RFY                              0365
*                                   I015F BASED(ADDR(IOPTLIST(9)));/*
*                                      ACCESS BYTES 1-2              */
*                                 I015F=LENGTH(CURMEM);/* INSERT   0366
*                                      LENGTH                        */
         LA    @09,IOPTLIST+32                                     0366
         MVC   I015F(2,@09),@CH00048                               0366
*                                 IOPTLIST(10)=ADDR(IOPTLIST(13));/*
*                                      CHAIN TO NEXT INSERT          */
         LA    @09,IOPTLIST+48                                     0367
         ST    @09,IOPTLIST+36                                     0367
*                                 IOPTLIST(11)=ADDR(CURMNRP);/*    0368
*                                      INSERT NAME POINTER           */
         LA    @09,CURMNRP                                         0368
         ST    @09,IOPTLIST+40                                     0368
*                                 IOPTLIST(12)=0;/* ZERO RESERVED  0369
*                                      FIELD                         */
         ST    @14,IOPTLIST+44                                     0369
*                                 RFY                              0370
*                                   I015F BASED(ADDR(IOPTLIST(12)));
*                                   /* ACCESS BYTES 1-2              */
*                                 I015F=LENGTH(CURMNRP);/* INSERT  0371
*                                      LENGTH                        */
         LA    @09,IOPTLIST+44                                     0371
         STH   @10,I015F(,@09)                                     0371
*                                 IOPTLIST(13)=ADDR(IOPTLIST(16));/*
*                                      CHAIN TO NEXT INSERT          */
         LA    @10,IOPTLIST+60                                     0372
         ST    @10,IOPTLIST+48                                     0372
*                                 IOPTLIST(14)=ADDR(FPPIDP);/* INSERT
*                                      NAME POINTER                  */
         L     @10,ZZ2ZZ1P(,ZZ2PTR)                                0373
         L     @10,ZZ1FPP(,@10)                                    0373
         LA    @10,FPPIDP(,@10)                                    0373
         ST    @10,IOPTLIST+52                                     0373
*                                 IOPTLIST(15)=0;/* ZERO RESERVED  0374
*                                      FIELD                         */
         ST    @14,IOPTLIST+56                                     0374
*                                 RFY                              0375
*                                   I015F BASED(ADDR(IOPTLIST(15)));
*                                   /* ACCESS BYTES 1-2              */
*                                 I015F=LENGTH(FPPIDP);/* INSERT   0376
*                                      LENGTH                        */
         LA    @10,IOPTLIST+56                                     0376
         MVC   I015F(2,@10),@CH00093                               0376
*                                 IOPTLIST(16)=0;/* LAST INSERT      */
         ST    @14,IOPTLIST+60                                     0377
*                                 IOPTLIST(17)=ADDR(CURPRNUM);/*   0378
*                                      INSERT NAME POINTER           */
         LA    @10,CURPRNUM                                        0378
         ST    @10,IOPTLIST+64                                     0378
*                                 IOPTLIST(18)=0;/* ZERO RESERVED  0379
*                                      FIELD                         */
         ST    @14,IOPTLIST+68                                     0379
*                                 RFY                              0380
*                                   I015F BASED(ADDR(IOPTLIST(18)));
*                                   /* ACCESS BYTES 1-2              */
*                                 I015F=LENGTH(CURPRNUM);/* INSERT 0381
*                                      LENGTH                        */
         LA    @14,IOPTLIST+68                                     0381
         MVC   I015F(2,@14),@CH00090                               0381
*                                 CALL BLSDMSG0(ZZ2,PRBDSNNA,MSGHDR,
*                                     BLSDMSGS,'10010000'B,ADDR(   0382
*                                     IOPTLIST));/* BUILD MESSAGE    */
         ST    ZZ2PTR,@AL00001                                     0382
         LA    @14,@CF01231                                        0382
         ST    @14,@AL00001+4                                      0382
         LA    @14,MSGHDR                                          0382
         ST    @14,@AL00001+8                                      0382
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0382
         ST    @14,@AL00001+12                                     0382
         LA    @14,@CB01273                                        0382
         ST    @14,@AL00001+16                                     0382
         LA    @14,IOPTLIST                                        0382
         ST    @14,@AFTEMPS                                        0382
         LA    @14,@AFTEMPS                                        0382
         ST    @14,@AL00001+20                                     0382
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0382
         LA    @01,@AL00001                                        0382
         BALR  @14,@15                                             0382
*                               END;/* BLSDMSG                     0383
*                                      (ZZ2,PRBDSNNA,MSGHDR,BLSDMSGS)
*                                      ROUTE(TERM)LIFO COMP INSERT(CU
*                                      RDSN,CURMNLP,CURMEM,CURMNRP,FP
*                                      PIDP,CURPRNUM) MESSAGE USER OF
*                                      ERROR                         */
*                               RETC=TWELVE;/* SET RETURN CODE       */
         LA    RETC,12                                             0384
*                             END;  /* END BAD ASSOCIATION           */
*                         END;      /* END DSD BASE REC FOUND        */
*                       ELSE        /* DSD BASE RECORD NOTFOUND      */
*                         DO;       /* PROCESS BAD RETURN CODE       */
         B     @RC00345                                            0387
@RF00345 DS    0H                                                  0388
*                           IF RETC=EIGHT THEN/* NO RECORD FOUND ?   */
         LA    @14,8                                               0388
         CR    RETC,@14                                            0388
         BNE   @RF00388                                            0388
*                             DO;   /* YES, MSG INVALID PROB NUM     */
*                               DO; /* BLSDMSG                     0390
*                                      (ZZ2,BADDSN,MSGHDR,BLSDMSGS)
*                                      LIFO ROUTE(TERM)INSERT(CURDSN,
*                                      CURMNLP,CURMEM,CURMNRP)COMP   */
*                                 IOPTLIST(1)=ADDR(IOPTLIST(4));/* 0391
*                                      CHAIN TO NEXT INSERT          */
         LA    @10,IOPTLIST+12                                     0391
         ST    @10,IOPTLIST                                        0391
*                                 IOPTLIST(2)=ADDR(CURDSN);/* INSERT
*                                      NAME POINTER                  */
         LA    @10,CURDSN                                          0392
         ST    @10,IOPTLIST+4                                      0392
*                                 IOPTLIST(3)=0;/* ZERO RESERVED   0393
*                                      FIELD                         */
         SLR   @10,@10                                             0393
         ST    @10,IOPTLIST+8                                      0393
*                                 RFY                              0394
*                                   I015F BASED(ADDR(IOPTLIST(3)));/*
*                                      ACCESS BYTES 1-2              */
*                                 I015F=LENGTH(CURDSN);/* INSERT   0395
*                                      LENGTH                        */
         LA    @09,IOPTLIST+8                                      0395
         MVC   I015F(2,@09),@CH00085                               0395
*                                 IOPTLIST(4)=ADDR(IOPTLIST(7));/* 0396
*                                      CHAIN TO NEXT INSERT          */
         LA    @09,IOPTLIST+24                                     0396
         ST    @09,IOPTLIST+12                                     0396
*                                 IOPTLIST(5)=ADDR(CURMNLP);/* INSERT
*                                      NAME POINTER                  */
         LA    @09,CURMNLP                                         0397
         ST    @09,IOPTLIST+16                                     0397
*                                 IOPTLIST(6)=0;/* ZERO RESERVED   0398
*                                      FIELD                         */
         ST    @10,IOPTLIST+20                                     0398
*                                 RFY                              0399
*                                   I015F BASED(ADDR(IOPTLIST(6)));/*
*                                      ACCESS BYTES 1-2              */
*                                 I015F=LENGTH(CURMNLP);/* INSERT  0400
*                                      LENGTH                        */
         LA    @09,1                                               0400
         LA    @07,IOPTLIST+20                                     0400
         STH   @09,I015F(,@07)                                     0400
*                                 IOPTLIST(7)=ADDR(IOPTLIST(10));/*
*                                      CHAIN TO NEXT INSERT          */
         LA    @07,IOPTLIST+36                                     0401
         ST    @07,IOPTLIST+24                                     0401
*                                 IOPTLIST(8)=ADDR(CURMEM);/* INSERT
*                                      NAME POINTER                  */
         LA    @07,CURMEM                                          0402
         ST    @07,IOPTLIST+28                                     0402
*                                 IOPTLIST(9)=0;/* ZERO RESERVED   0403
*                                      FIELD                         */
         ST    @10,IOPTLIST+32                                     0403
*                                 RFY                              0404
*                                   I015F BASED(ADDR(IOPTLIST(9)));/*
*                                      ACCESS BYTES 1-2              */
*                                 I015F=LENGTH(CURMEM);/* INSERT   0405
*                                      LENGTH                        */
         LA    @07,IOPTLIST+32                                     0405
         STH   @14,I015F(,@07)                                     0405
*                                 IOPTLIST(10)=0;/* LAST INSERT      */
         ST    @10,IOPTLIST+36                                     0406
*                                 IOPTLIST(11)=ADDR(CURMNRP);/*    0407
*                                      INSERT NAME POINTER           */
         LA    @14,CURMNRP                                         0407
         ST    @14,IOPTLIST+40                                     0407
*                                 IOPTLIST(12)=0;/* ZERO RESERVED  0408
*                                      FIELD                         */
         ST    @10,IOPTLIST+44                                     0408
*                                 RFY                              0409
*                                   I015F BASED(ADDR(IOPTLIST(12)));
*                                   /* ACCESS BYTES 1-2              */
*                                 I015F=LENGTH(CURMNRP);/* INSERT  0410
*                                      LENGTH                        */
         LA    @14,IOPTLIST+44                                     0410
         STH   @09,I015F(,@14)                                     0410
*                                 CALL BLSDMSG0(ZZ2,BADDSN,MSGHDR, 0411
*                                     BLSDMSGS,'10010000'B,ADDR(   0411
*                                     IOPTLIST));/* BUILD MESSAGE    */
         ST    ZZ2PTR,@AL00001                                     0411
         LA    @14,@CF01221                                        0411
         ST    @14,@AL00001+4                                      0411
         LA    @14,MSGHDR                                          0411
         ST    @14,@AL00001+8                                      0411
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0411
         ST    @14,@AL00001+12                                     0411
         LA    @14,@CB01273                                        0411
         ST    @14,@AL00001+16                                     0411
         LA    @14,IOPTLIST                                        0411
         ST    @14,@AFTEMPS                                        0411
         LA    @14,@AFTEMPS                                        0411
         ST    @14,@AL00001+20                                     0411
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0411
         LA    @01,@AL00001                                        0411
         BALR  @14,@15                                             0411
*                               END;/* BLSDMSG                     0412
*                                      (ZZ2,BADDSN,MSGHDR,BLSDMSGS)
*                                      LIFO ROUTE(TERM)INSERT(CURDSN,
*                                      CURMNLP,CURMEM,CURMNRP)COMP 0412
*                                      ISSUE ERROR MESSAGE TO USER   */
*                             END;  /* END NOREC FOUND               */
*                           ELSE    /* BAD ERROR                     */
*                             DO;   /* SEND FOR HELP                 */
         B     @RC00388                                            0414
@RF00388 DS    0H                                                  0415
*                               DO; /* BLSDMSG                     0415
*                                      (ZZ2,BADDSDAC,MSGHDR,BLSDMSGS)
*                                      LIFO ROUTE(TERM)              */
*                                 CALL BLSDMSG0(ZZ2,BADDSDAC,MSGHDR,
*                                     BLSDMSGS,'10010000'B,0);/*   0416
*                                      BUILD MESSAGE                 */
         ST    ZZ2PTR,@AL00001                                     0416
         LA    @14,@CF01219                                        0416
         ST    @14,@AL00001+4                                      0416
         LA    @14,MSGHDR                                          0416
         ST    @14,@AL00001+8                                      0416
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0416
         ST    @14,@AL00001+12                                     0416
         LA    @14,@CB01273                                        0416
         ST    @14,@AL00001+16                                     0416
         LA    @14,@CF00045                                        0416
         ST    @14,@AL00001+20                                     0416
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0416
         LA    @01,@AL00001                                        0416
         BALR  @14,@15                                             0416
*                               END;/* BLSDMSG                     0417
*                                      (ZZ2,BADDSDAC,MSGHDR,BLSDMSGS)
*                                      LIFO ROUTE(TERM) MESSAGE THE
*                                      USER                          */
*                             END;  /* END BAD PDR ACCESS            */
*                           RETC=TWELVE;/* SET A RETURN CODE OF 12   */
@RC00388 LA    RETC,12                                             0419
*                         END;      /* END BAD RC FROM DG00          */
*                     END;          /* END USER AUTHORIZED           */
*                   ELSE            /* USER IS NOT AUTHORIZED        */
*                     DO;           /* MSG AND SET RETURN CODE       */
         B     @RC00341                                            0422
@RF00341 DS    0H                                                  0423
*                       DO;         /* BLSDMSG                     0423
*                                      (ZZ2,NOTOWNER,MSGHDR,BLSDMSGS)
*                                      LIFO ROUTE(TERM)INSERT(FPPIDP,
*                                      CURPRNUM)                     */
*                         IOPTLIST(1)=ADDR(IOPTLIST(4));/* CHAIN TO
*                                      NEXT INSERT                   */
         LA    @14,IOPTLIST+12                                     0424
         ST    @14,IOPTLIST                                        0424
*                         IOPTLIST(2)=ADDR(FPPIDP);/* INSERT NAME  0425
*                                      POINTER                       */
         L     @14,ZZ2ZZ1P(,ZZ2PTR)                                0425
         L     @14,ZZ1FPP(,@14)                                    0425
         LA    @14,FPPIDP(,@14)                                    0425
         ST    @14,IOPTLIST+4                                      0425
*                         IOPTLIST(3)=0;/* ZERO RESERVED FIELD       */
         SLR   @14,@14                                             0426
         ST    @14,IOPTLIST+8                                      0426
*                         RFY                                      0427
*                           I015F BASED(ADDR(IOPTLIST(3)));/* ACCESS
*                                      BYTES 1-2                     */
*                         I015F=LENGTH(FPPIDP);/* INSERT LENGTH      */
         LA    @10,IOPTLIST+8                                      0428
         MVC   I015F(2,@10),@CH00093                               0428
*                         IOPTLIST(4)=0;/* LAST INSERT               */
         ST    @14,IOPTLIST+12                                     0429
*                         IOPTLIST(5)=ADDR(CURPRNUM);/* INSERT NAME
*                                      POINTER                       */
         LA    @10,CURPRNUM                                        0430
         ST    @10,IOPTLIST+16                                     0430
*                         IOPTLIST(6)=0;/* ZERO RESERVED FIELD       */
         ST    @14,IOPTLIST+20                                     0431
*                         RFY                                      0432
*                           I015F BASED(ADDR(IOPTLIST(6)));/* ACCESS
*                                      BYTES 1-2                     */
*                         I015F=LENGTH(CURPRNUM);/* INSERT LENGTH    */
         LA    @14,IOPTLIST+20                                     0433
         MVC   I015F(2,@14),@CH00090                               0433
*                         CALL BLSDMSG0(ZZ2,NOTOWNER,MSGHDR,BLSDMSGS,
*                             '10010000'B,ADDR(IOPTLIST));/* BUILD 0434
*                                      MESSAGE                       */
         ST    ZZ2PTR,@AL00001                                     0434
         LA    @14,@CF01229                                        0434
         ST    @14,@AL00001+4                                      0434
         LA    @14,MSGHDR                                          0434
         ST    @14,@AL00001+8                                      0434
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0434
         ST    @14,@AL00001+12                                     0434
         LA    @14,@CB01273                                        0434
         ST    @14,@AL00001+16                                     0434
         LA    @14,IOPTLIST                                        0434
         ST    @14,@AFTEMPS                                        0434
         LA    @14,@AFTEMPS                                        0434
         ST    @14,@AL00001+20                                     0434
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0434
         LA    @01,@AL00001                                        0434
         BALR  @14,@15                                             0434
*                       END;        /* BLSDMSG                     0435
*                                      (ZZ2,NOTOWNER,MSGHDR,BLSDMSGS)
*                                      LIFO ROUTE(TERM)INSERT(FPPIDP,
*                                      CURPRNUM) ISSUE MESSAGE TO  0435
*                                      USER OF ERROR                 */
*                       RETC=TWELVE;/* SET RETURN CODE OF TWELVE     */
         LA    RETC,12                                             0436
*                     END;          /* END USER NOT AUTHORIZED       */
*                 END;              /* END PDR REC OK                */
*               ELSE                /* PROBLEM DOES NO EXIST OR PDR
*                                      ER                            */
*                 DO;               /* CHECK WITCH MSG TO ISSUE      */
         B     @RC00337                                            0439
@RF00337 DS    0H                                                  0440
*                   IF RETC=EIGHT THEN/* NO RECORD FOUND ?           */
         C     RETC,@CF00048                                       0440
         BNE   @RF00440                                            0440
*                     DO;           /* YES, MSG INVALID PROB NUM     */
*                       RESPECIFY                                  0442
*                         DMCB BASED(ZZ1PDRP);                     0442
*                       DO;         /* BLSDMSG                     0443
*                                      (ZZ2,BADPRONM,MSGHDR,BLSDMSGS)
*                                      LIFO ROUTE(TERM)INSERT(FPPIDP,
*                                      CURPRNUM)                     */
*                         IOPTLIST(1)=ADDR(IOPTLIST(4));/* CHAIN TO
*                                      NEXT INSERT                   */
         LA    @14,IOPTLIST+12                                     0444
         ST    @14,IOPTLIST                                        0444
*                         IOPTLIST(2)=ADDR(FPPIDP);/* INSERT NAME  0445
*                                      POINTER                       */
         L     @14,ZZ2ZZ1P(,ZZ2PTR)                                0445
         L     @14,ZZ1FPP(,@14)                                    0445
         LA    @14,FPPIDP(,@14)                                    0445
         ST    @14,IOPTLIST+4                                      0445
*                         IOPTLIST(3)=0;/* ZERO RESERVED FIELD       */
         SLR   @14,@14                                             0446
         ST    @14,IOPTLIST+8                                      0446
*                         RFY                                      0447
*                           I015F BASED(ADDR(IOPTLIST(3)));/* ACCESS
*                                      BYTES 1-2                     */
*                         I015F=LENGTH(FPPIDP);/* INSERT LENGTH      */
         LA    @10,IOPTLIST+8                                      0448
         MVC   I015F(2,@10),@CH00093                               0448
*                         IOPTLIST(4)=0;/* LAST INSERT               */
         ST    @14,IOPTLIST+12                                     0449
*                         IOPTLIST(5)=ADDR(CURPRNUM);/* INSERT NAME
*                                      POINTER                       */
         LA    @10,CURPRNUM                                        0450
         ST    @10,IOPTLIST+16                                     0450
*                         IOPTLIST(6)=0;/* ZERO RESERVED FIELD       */
         ST    @14,IOPTLIST+20                                     0451
*                         RFY                                      0452
*                           I015F BASED(ADDR(IOPTLIST(6)));/* ACCESS
*                                      BYTES 1-2                     */
*                         I015F=LENGTH(CURPRNUM);/* INSERT LENGTH    */
         LA    @14,IOPTLIST+20                                     0453
         MVC   I015F(2,@14),@CH00090                               0453
*                         CALL BLSDMSG0(ZZ2,BADPRONM,MSGHDR,BLSDMSGS,
*                             '10010000'B,ADDR(IOPTLIST));/* BUILD 0454
*                                      MESSAGE                       */
         ST    ZZ2PTR,@AL00001                                     0454
         LA    @14,@CF01225                                        0454
         ST    @14,@AL00001+4                                      0454
         LA    @14,MSGHDR                                          0454
         ST    @14,@AL00001+8                                      0454
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0454
         ST    @14,@AL00001+12                                     0454
         LA    @14,@CB01273                                        0454
         ST    @14,@AL00001+16                                     0454
         LA    @14,IOPTLIST                                        0454
         ST    @14,@AFTEMPS                                        0454
         LA    @14,@AFTEMPS                                        0454
         ST    @14,@AL00001+20                                     0454
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0454
         LA    @01,@AL00001                                        0454
         BALR  @14,@15                                             0454
*                       END;        /* BLSDMSG                     0455
*                                      (ZZ2,BADPRONM,MSGHDR,BLSDMSGS)
*                                      LIFO ROUTE(TERM)INSERT(FPPIDP,
*                                      CURPRNUM) ISSUE MESSAGE TO  0455
*                                      USER OF ERROR                 */
*                       RETC=TWELVE;/* SET RETURN CODE               */
         LA    RETC,12                                             0456
*                     END;          /* END NOREC FOUND               */
*                   ELSE            /* BAD ERROR                     */
*                     DO;           /* SEND FOR HELP                 */
         B     @RC00440                                            0458
@RF00440 DS    0H                                                  0459
*                       DO;         /* BLSDMSG                     0459
*                                      (ZZ2,BADPDRAC,MSGHDR,BLSDMSGS)
*                                      LIFO ROUTE(TERM)              */
*                         CALL BLSDMSG0(ZZ2,BADPDRAC,MSGHDR,BLSDMSGS,
*                             '10010000'B,0);/* BUILD MESSAGE        */
         ST    ZZ2PTR,@AL00001                                     0460
         LA    @14,@CF01223                                        0460
         ST    @14,@AL00001+4                                      0460
         LA    @14,MSGHDR                                          0460
         ST    @14,@AL00001+8                                      0460
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0460
         ST    @14,@AL00001+12                                     0460
         LA    @14,@CB01273                                        0460
         ST    @14,@AL00001+16                                     0460
         LA    @14,@CF00045                                        0460
         ST    @14,@AL00001+20                                     0460
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0460
         LA    @01,@AL00001                                        0460
         BALR  @14,@15                                             0460
*                       END;        /* BLSDMSG                     0461
*                                      (ZZ2,BADPDRAC,MSGHDR,BLSDMSGS)
*                                      LIFO ROUTE(TERM) MSG USER OF
*                                      ERROR                         */
*                       RETC=TWELVE;/* SET RETURN CODE               */
         LA    RETC,12                                             0462
*                     END;          /* END BAD PDR ACCESS            */
*                 END;              /* END ERROR IN GP00             */
*             END;                  /* END PROB ENQ OK               */
*         END;                      /* END PROB NUM SET UP OK        */
*       ELSE                        /* BAD PROB NUMBER FROM USER     */
*         RETC=TWELVE;              /* MSG ISSUED BY BLSFPS00        */
         B     @RC00315                                            0467
@RF00315 LA    RETC,12                                             0467
*     END;                          /* END DSN SETUP OK              */
*   ELSE                            /* BAD DSN SPECIFIED             */
*     RETC=TWELVE;                  /* SET BAD RETURN CODE           */
         B     @RC00305                                            0469
@RF00305 LA    RETC,12                                             0469
*   RETURN CODE(RETC);                                             0470
@RC00305 LR    @15,RETC                                            0470
         L     @14,@SA00002                                        0470
         LM    @00,@07,@SA00002+8                                  0470
         LM    @09,@12,@SA00002+40                                 0470
         BR    @14                                                 0470
*   END BLSFMV00;                                                  0471
*                                                                  0471
*/*BLSUPEND--MVS IPCS MODULE                                         */
*                                                                  0472
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                     0472
*     GPR01F FIXED(31) REG(1),                                     0472
*     GPR15F FIXED(31) REG(15);                                    0472
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0473
*     I031F FIXED(31) BASED,                                       0473
*     I031P PTR(31) BASED,                                         0473
*     I015F FIXED(15) BASED,                                       0473
*     I015P PTR(15) BASED,                                         0473
*     I008P PTR(8) BASED,                                          0473
*     I001C CHAR(1) BASED;                                         0473
*   DECLARE                                                        0474
*     IOPTLIST(18) PTR(31) BDY(WORD);/* OPTION LIST ARRAY            */
*   GENERATE NODEFS NOREFS DATA;                                   0475
*   END                             /* BLRPEND END OF PROCESSING   0476
*                                      MODDSN                        */
*                                                                  0476
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (BLSUZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLRFULL )                                       */
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */
*/*%INCLUDE SYSLIB  (IKJPSCB )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJUPT  )                                       */
*/*%INCLUDE SYSLIB  (BLSUSERV)                                       */
*/*%INCLUDE SYSLIB  (BLRSERV )                                       */
*/*%INCLUDE SYSLIB  (BLRSERVD)                                       */
*/*%INCLUDE SYSLIB  (BLSDSERV)                                       */
*/*%INCLUDE SYSLIB  (BLSDSD  )                                       */
*/*%INCLUDE SYSLIB  (BLSPDR  )                                       */
*/*%INCLUDE SYSLIB  (BLSFP   )                                       */
*/*%INCLUDE SYSLIB  (BLSFMD  )                                       */
*                                                                  0476
*       ;                                                          0476
@EL00001 L     @13,4(,@13)                                         0476
@EF00001 L     @00,@SIZDATD                                        0476
         LR    @01,@11                                             0476
         BLSUFRER R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0476
         BR    @14                                                 0476
@DATA    DS    0H
@CH00040 DC    H'1'
@CH00067 DC    H'2'
@CH00093 DC    H'3'
@CH00090 DC    H'5'
@CH00085 DC    H'44'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00002 DS    14F
@AL00001 DS    7A
@AFTEMPS DS    1F
BLSFMD00 CSECT
         DS    0F
@CF00045 DC    F'0'
@CF00037 DC    F'4'
@CF00048 DC    F'8'
@CH00048 EQU   @CF00048+2
@CF01318 DC    F'144'
@CF01225 DC    F'4000'
@CF01229 DC    F'4004'
@CF01221 DC    F'4005'
@CF01231 DC    F'4009'
@CF01227 DC    F'4010'
@CF01223 DC    F'4041'
@CF01219 DC    F'4051'
@CF01233 DC    F'4069'
@DATD    DSECT
         DS    0D
PDAPTR   DS    A
MSGHDR   DS    A
FLAGS    DS    BL1
         ORG   FLAGS
DEFMSGSW DS    BL1
ENQDONE  EQU   FLAGS+0
@NM00079 EQU   FLAGS+0
         ORG   FLAGS+1
PDRBUF   DS    CL416
DSDBUF   DS    CL144
FPDSDBUF DS    CL144
CMDDSDRC DS    CL144
CURDSN   DS    CL44
CURMEMNM DS    CL10
         ORG   CURMEMNM
CURMNLP  DS    CL1
CURMEM   DS    CL8
CURMNRP  DS    CL1
         ORG   CURMEMNM+10
CURPROB  DS    CL8
         ORG   CURPROB
CURDBPRX DS    CL3
CURPRNUM DS    CL5
         ORG   CURPROB+8
PROBKEY  DS    CL14
         ORG   PROBKEY
PDRKEYTY DS    CL2
PDRKEYPN DS    CL8
PDRKEYSN DS    CL4
         ORG   PROBKEY+14
DSNKEY   DS    CL61
         ORG   DSNKEY
DSNKEYTY DS    CL1
DSNKEYDS DS    CL44
DSNKEYMN DS    CL8
DSNKEYPN DS    CL8
         ORG   DSNKEY+61
         DS    CL2
IOPTLIST DS    18A
BLSFMD00 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
PCPTR    DC    AL4(PC)
@CC01205 DC    C'                                                      C
                      '
@CC00099 EQU   @CC01205
@CC01202 DC    C'E'
@CC01217 DC    C'O'
@CB01327 DC    X'00'
@CB01273 DC    B'10010000'
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSFMD00 CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSFMD00+19)/20+7)/8)CL8'BLSFMD00'
@DATD    DSECT
         SPACE 2
***********************************************************************
* IKJPARM--BEGIN MACROS SPECIFYING COMMAND SYNTAX                     *
***********************************************************************
         SPACE
BLSFMD00 CSECT
PC       IKJPARM DSECT=PD
@DATD    DSECT
BLSFMD00 CSECT
DSNWD    IKJKEYWD
@DATD    DSECT
BLSFMD00 CSECT
         IKJNAME 'DSNAME',ALIAS=('DATASET'),SUBFLD=DSNSUB
@DATD    DSECT
BLSFMD00 CSECT
PRO      IKJKEYWD
@DATD    DSECT
BLSFMD00 CSECT
         IKJNAME 'PROBLEM',SUBFLD=PROBSUB
@DATD    DSECT
BLSFMD00 CSECT
MAN      IKJKEYWD
@DATD    DSECT
BLSFMD00 CSECT
         IKJNAME 'MANAGED'
@DATD    DSECT
BLSFMD00 CSECT
         IKJNAME 'UNMANAGED'
@DATD    DSECT
BLSFMD00 CSECT
TYP      IKJKEYWD
@DATD    DSECT
BLSFMD00 CSECT
         IKJNAME 'TYPE',SUBFLD=TYPESUB
@DATD    DSECT
BLSFMD00 CSECT
DCR      IKJKEYWD
@DATD    DSECT
BLSFMD00 CSECT
         IKJNAME 'DESCRIPTION',SUBFLD=DESCSUB
@DATD    DSECT
BLSFMD00 CSECT
DFT      IKJKEYWD
@DATD    DSECT
BLSFMD00 CSECT
         IKJNAME 'DEFAULT'
@DATD    DSECT
BLSFMD00 CSECT
PXTEST   IKJKEYWD
@DATD    DSECT
BLSFMD00 CSECT
         IKJNAME 'TEST'
@DATD    DSECT
BLSFMD00 CSECT
         IKJNAME 'NOTEST'
@DATD    DSECT
BLSFMD00 CSECT
PXCONF   IKJKEYWD
@DATD    DSECT
BLSFMD00 CSECT
         IKJNAME 'CONFIRM'
@DATD    DSECT
BLSFMD00 CSECT
         IKJNAME 'NOCONFIRM'
@DATD    DSECT
BLSFMD00 CSECT
         SPACE
DSNSUB   IKJSUBF
@DATD    DSECT
BLSFMD00 CSECT
DSNS     IKJPOSIT DSNAME,USID,PROMPT='NAME OF DATA SET TO BE MODIFIED'
@DATD    DSECT
BLSFMD00 CSECT
         SPACE
PROBSUB  IKJSUBF
@DATD    DSECT
BLSFMD00 CSECT
PRN      IKJIDENT 'PROBLEM NUMBER',UPPERCASE,FIRST=NUMERIC,MAXLNTH=5,  *
               OTHER=NUMERIC,PROMPT='PROBLEM NUMBER ASSOCIATED WITH DAT*
               A SET'
@DATD    DSECT
BLSFMD00 CSECT
         SPACE
TYPESUB  IKJSUBF
@DATD    DSECT
BLSFMD00 CSECT
TYS      IKJKEYWD
@DATD    DSECT
BLSFMD00 CSECT
         IKJNAME 'DUMP'
@DATD    DSECT
BLSFMD00 CSECT
         IKJNAME 'PRINT'
@DATD    DSECT
BLSFMD00 CSECT
         IKJNAME 'UDEF'
@DATD    DSECT
BLSFMD00 CSECT
         SPACE
DESCSUB  IKJSUBF
@DATD    DSECT
BLSFMD00 CSECT
DSC      IKJPOSIT QSTRING,UPPERCASE,PROMPT='DESCRIPTION OF DATA SET - 6*
               0 CHARACTERS MAXIMUM',VALIDCK=BLSDC600
@DATD    DSECT
PD       DSECT
LISTEND  DS    0C
BLSFMD00 CSECT
         IKJENDP
         SPACE 2
***********************************************************************
* IKJENDP--END SYNTAX DESCRIPTION                                     *
***********************************************************************
         SPACE
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSFMD00 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
MEMRETC  EQU   @08
RETC     EQU   @07
ZZ2PTR   EQU   @06
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R9       EQU   @09
RB       EQU   @11
RD       EQU   @13
RE       EQU   @14
RF       EQU   @15
PDRPTR   EQU   @05
GPR15F   EQU   @15
GPR01F   EQU   @01
GPR00F   EQU   @00
RA       EQU   @10
RC       EQU   @12
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
ZZ1      EQU   0
ZZ1PDRP  EQU   ZZ1+40
ZZ1FPP   EQU   ZZ1+140
ZZ1ATTN  EQU   ZZ1+360
ZZ1EVE   EQU   ZZ1ATTN+4
ZZ1F     EQU   ZZ1+368
ZZ1N     EQU   ZZ1+1116
ZZ2      EQU   0
ZZ2AMD   EQU   ZZ2
@NM00013 EQU   ZZ2AMD+7
ZZ2PRT   EQU   ZZ2+138
ZZ2PRTT  EQU   ZZ2PRT+4
ZZ2PRTT1 EQU   ZZ2PRTT+1
ZZ2A     EQU   ZZ2+272
ZZ2AF    EQU   ZZ2A+16
ZZ2AFC   EQU   ZZ2AF+1
ZZ2AFX   EQU   ZZ2AF+5
ZZ2APID  EQU   ZZ2A+64
ZZ2AD    EQU   ZZ2A+74
ZZ2ADD   EQU   ZZ2AD
ZZ2ADDT  EQU   ZZ2ADD+2
ZZ2ADM   EQU   ZZ2AD+46
ZZ2ADMT  EQU   ZZ2ADM+2
ZZ2ADP   EQU   ZZ2AD+56
ZZ2ADPT  EQU   ZZ2ADP+2
ZZ2AQAS  EQU   ZZ2A+144
ZZ2AQD   EQU   ZZ2A+160
ZZ2AQDT  EQU   ZZ2AQD+10
ZZ2AQDF  EQU   ZZ2AQD+52
ZZ2STG   EQU   ZZ2+960
ZZ2ALLOP EQU   ZZ2+992
ZZ2FREEP EQU   ZZ2+996
ZZ2FF19P EQU   ZZ2+1000
ZZ2FRE1P EQU   ZZ2+1004
ZZ2FF18P EQU   ZZ2+1008
ZZ2DYNAP EQU   ZZ2+1012
ZZ2ZZ2CP EQU   ZZ2+1016
ZZ2ZZ2DP EQU   ZZ2+1020
ZZ2STAIP EQU   ZZ2+1024
ZZ2FF02P EQU   ZZ2+1028
ZZ2GETLP EQU   ZZ2+1032
ZZ2PARSP EQU   ZZ2+1036
ZZ2PTGTP EQU   ZZ2+1040
ZZ2PUTLP EQU   ZZ2+1044
ZZ2SCANP EQU   ZZ2+1048
ZZ2STCKP EQU   ZZ2+1052
ZZ2ALOCP EQU   ZZ2+1056
ZZ2MSGSP EQU   ZZ2+1060
ZZ2TRMOP EQU   ZZ2+1064
ZZ2TRMVP EQU   ZZ2+1068
ZZ2MSG0P EQU   ZZ2+1076
ZZ2PUTNP EQU   ZZ2+1084
ZZ2TRMNP EQU   ZZ2+1088
ZZ2ENQ0P EQU   ZZ2+1092
ZZ2ADSDP EQU   ZZ2+1096
ZZ2APDRP EQU   ZZ2+1100
ZZ2FDSDP EQU   ZZ2+1104
ZZ2FPDRP EQU   ZZ2+1108
ZZ2ZZ1P  EQU   ZZ2+1264
ZZ2DVTP  EQU   ZZ2+1276
ZZ2BVTP  EQU   ZZ2+1280
ZZ2CPPL  EQU   ZZ2+1292
ZZ2CPPLC EQU   ZZ2CPPL
ZZ2ITR   EQU   ZZ2+2840
ZZ2ITRE  EQU   ZZ2ITR+16
ZZ2ITSE  EQU   ZZ2+2864
ZZ2ES    EQU   ZZ2+2872
ZZ2AMDX  EQU   ZZ2+7160
ZZ2AXO   EQU   ZZ2+7934
ZZ2AXOT  EQU   ZZ2AXO+2
CMD      EQU   0
CMDT     EQU   CMD+4
PSCB     EQU   0
PSCBATR1 EQU   PSCB+16
ECT      EQU   0
ECTSWS   EQU   ECT+28
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
UPT      EQU   0
UPTSWS   EQU   UPT+12
SA       EQU   0
SA1      EQU   SA
SAR      EQU   SA+12
BLSUPARI EQU   0
BVT      EQU   0
BVTPUTLP EQU   BVT+4
BVTPUTOP EQU   BVT+12
BVTPUTTP EQU   BVT+16
BVTPUTVP EQU   BVT+20
BVTPUTAP EQU   BVT+24
BVTPRTTP EQU   BVT+28
BVTPRTAP EQU   BVT+32
BVTPUTDP EQU   BVT+36
BVTMONP  EQU   BVT+40
BVTMON2P EQU   BVT+44
BVTVSARP EQU   BVT+48
BVTVSENP EQU   BVT+64
BVTVSERP EQU   BVT+68
BVTVSGEP EQU   BVT+72
BVTVSGUP EQU   BVT+76
BVTVSPOP EQU   BVT+80
BVTVSPUP EQU   BVT+84
BVTMPKNP EQU   BVT+104
BVTMONLP EQU   BVT+108
BVTPUTCP EQU   BVT+132
BVTMPK1P EQU   BVT+136
BVTZZ2RP EQU   BVT+140
BVTPGMRP EQU   BVT+144
BVTMONAP EQU   BVT+148
BVTBLDDP EQU   BVT+152
BVTBLDLP EQU   BVT+156
BVTPGMCP EQU   BVT+160
BVTPGMDP EQU   BVT+164
BVTPGMLP EQU   BVT+168
BVTMONCP EQU   BVT+180
BVTMONDP EQU   BVT+184
BVTMONTP EQU   BVT+188
BVTPARIP EQU   BVT+192
BVTPARUP EQU   BVT+196
BVTPRTNP EQU   BVT+204
BVTVSCRP EQU   BVT+208
BVTVSMRP EQU   BVT+212
BVTMONXP EQU   BVT+216
BVTTRMAP EQU   BVT+228
BLSDDEQP EQU   0
BLSDENQP EQU   0
BLSDMSGS EQU   0
BLSDMSG0 EQU   0
BLSEAUTH EQU   0
BLSFDS00 EQU   0
BLSFFP00 EQU   0
BLSFGD00 EQU   0
BLSFGP00 EQU   0
BLSFND00 EQU   0
BLSFOD00 EQU   0
BLSFPS00 EQU   0
BLSFSD00 EQU   0
BLSFUD00 EQU   0
DVT      EQU   0
DVTDEQPP EQU   DVT+8
DVTENQPP EQU   DVT+12
DVTAUTHP EQU   DVT+20
DVTLPCLP EQU   DVT+24
DVTBP00P EQU   DVT+28
DVTCN00P EQU   DVT+32
DVTDF00P EQU   DVT+36
DVTDS00P EQU   DVT+44
DVTFL00P EQU   DVT+48
DVTFP00P EQU   DVT+52
DVTGD00P EQU   DVT+56
DVTGG00P EQU   DVT+60
DVTGP00P EQU   DVT+64
DVTND00P EQU   DVT+68
DVTND01P EQU   DVT+72
DVTOD00P EQU   DVT+76
DVTPS00P EQU   DVT+80
DVTSD00P EQU   DVT+84
DVTSL00P EQU   DVT+88
DVTTL00P EQU   DVT+92
DVTUD00P EQU   DVT+96
DVTUP00P EQU   DVT+100
DVTLP00P EQU   DVT+104
DVTLALLP EQU   DVT+108
DVTLPFMP EQU   DVT+112
DVTCLOSP EQU   DVT+116
DVTOPENP EQU   DVT+120
DVTPERAP EQU   DVT+124
DVTDALLP EQU   DVT+128
DMCB     EQU   0
DMCBFTY  EQU   DMCB+20
DMCBOPN  EQU   DMCB+21
DMCBRMOD EQU   DMCB+23
DMCBOUT  EQU   DMCBRMOD
DMCBOPTS EQU   DMCB+24
DMCBGKY  EQU   DMCBOPTS
DMCBMFLG EQU   DMCB+28
DMCBBUFP EQU   DMCB+32
DMCBKEYP EQU   DMCB+44
DMCBRI   EQU   DMCB+64
DMCBACBE EQU   DMCB+124
DMCBSPEC EQU   DMCB+380
DMCBAMS  EQU   DMCB+416
DMCBAUDT EQU   DMCB+568
DMCBLSCP EQU   DMCBAUDT+16
DSDREC   EQU   0
DSDKEY   EQU   DSDREC
DSDKGRP  EQU   DSDKEY
DSDKDSNM EQU   DSDKGRP+1
DSDKBSID EQU   DSDKEY+53
DSDKPID  EQU   DSDKBSID
DSDINFO  EQU   DSDREC+64
PDREC    EQU   0
PDRKEY   EQU   PDREC
PDRGRP   EQU   PDRKEY
PDRKPID  EQU   PDRGRP+2
PDRINFO  EQU   PDREC+16
FPBLOK   EQU   0
FPPIDP   EQU   FPBLOK+96
FPADMNM  EQU   FPBLOK+120
FPDELNM  EQU   FPBLOK+128
PCCSECT  EQU   0
PDDSECT  EQU   0
PDXP     EQU   PDDSECT+1
PDL      EQU   PDDSECT+5
I015F    EQU   0
BLSCALOC EQU   0
BLSDADSD EQU   0
BLSDAPDR EQU   0
BLSDENQ0 EQU   0
BLSDFDSD EQU   0
BLSDFPDR EQU   0
BLSELPCL EQU   0
BLSELPFM EQU   0
BLSFBP00 EQU   0
BLSFCLOS EQU   0
BLSFCN00 EQU   0
BLSFDALL EQU   0
BLSFDF00 EQU   0
BLSFFL00 EQU   0
BLSFGG00 EQU   0
BLSFLALL EQU   0
BLSFLP00 EQU   0
BLSFND01 EQU   0
BLSFOPEN EQU   0
BLSFPERA EQU   0
BLSFSL00 EQU   0
BLSFTL00 EQU   0
BLSFUP00 EQU   0
BLSUALLO EQU   0
BLSUBLDD EQU   0
BLSUBLDL EQU   0
BLSUDYNA EQU   0
BLSUFREE EQU   0
BLSUFRE1 EQU   0
BLSUMON  EQU   0
BLSUMONA EQU   0
BLSUMONC EQU   0
BLSUMOND EQU   0
BLSUMONL EQU   0
BLSUMONT EQU   0
BLSUMONX EQU   0
BLSUMON2 EQU   0
BLSUMPKN EQU   0
BLSUMPK1 EQU   0
BLSUPARU EQU   0
BLSUPGMC EQU   0
BLSUPGMD EQU   0
BLSUPGML EQU   0
BLSUPGMR EQU   0
BLSUPRTA EQU   0
BLSUPRTN EQU   0
BLSUPRTT EQU   0
BLSUPUTA EQU   0
BLSUPUTC EQU   0
BLSUPUTD EQU   0
BLSUPUTL EQU   0
BLSUPUTN EQU   0
BLSUPUTO EQU   0
BLSUPUTT EQU   0
BLSUPUTV EQU   0
BLSUSTAI EQU   0
BLSUTRMA EQU   0
BLSUTRMN EQU   0
BLSUTRMO EQU   0
BLSUTRMV EQU   0
BLSUVSAR EQU   0
BLSUVSCR EQU   0
BLSUVSEN EQU   0
BLSUVSER EQU   0
BLSUVSGE EQU   0
BLSUVSGU EQU   0
BLSUVSMR EQU   0
BLSUVSPO EQU   0
BLSUVSPU EQU   0
BLSUZZ2C EQU   0
BLSUZZ2D EQU   0
BLSUZZ2R EQU   0
DMCBDMGR EQU   0
DMCBRQC  EQU   0
DSCQ     EQU   0
DSNSD    EQU   0
DSNSM    EQU   0
DSNSP    EQU   0
IKJEFF02 EQU   0
IKJEFF18 EQU   0
IKJEFF19 EQU   0
IKJGETL  EQU   0
IKJPARS  EQU   0
IKJPTGT  EQU   0
IKJPUTL  EQU   0
IKJSCAN  EQU   0
IKJSTCK  EQU   0
I001C    EQU   0
I008P    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
PRNI     EQU   0
DSNSDP   EQU   DSNS
DSNSDF   EQU   DSNS+6
DSNSMP   EQU   DSNS+8
DSNSMF   EQU   DSNS+14
DSNSPP   EQU   DSNS+16
DSNSPF   EQU   DSNS+22
PRNIP    EQU   PRN
PRNIF    EQU   PRN+6
DSCQP    EQU   DSC
DSCQF    EQU   DSC+6
CPPL     EQU   ZZ2CPPL
CPPLUPT  EQU   CPPL+4
CPPLPSCB EQU   CPPL+8
CPPLECT  EQU   CPPL+12
DMCBVSM  EQU   DMCBAMS
DMCBQSM  EQU   DMCBAMS
DSDBASRC EQU   DSDINFO
DSDDSNTY EQU   DSDBASRC
DSDDSATR EQU   DSDBASRC+8
DSDSLOWN EQU   DSDDSATR
DSDDESC  EQU   DSDBASRC+16
DSDPRASR EQU   DSDINFO
PDRSTREC EQU   PDRINFO
PDRODATE EQU   PDRSTREC
PDROWNNM EQU   PDRSTREC+32
PDRDEREC EQU   PDRINFO
PDRDESCR EQU   PDRDEREC
PDRTRREC EQU   PDRINFO
PDRTRARR EQU   PDRTRREC
PDRHSREC EQU   PDRINFO
PDRDSREC EQU   PDRINFO
PDRDSNM  EQU   PDRDSREC
PDRSVALU EQU   PDRODATE
*                                      START UNREFERENCED COMPONENTS
PDRSVNUM EQU   PDRSVALU+3
PDRSVRES EQU   PDRSVALU
PDRDSRES EQU   PDRDSREC+52
PDRMEMB  EQU   PDRDSNM+44
PDRDSN   EQU   PDRDSNM
PDRHYMSD EQU   PDRHSREC+4
PDRHSLEN EQU   PDRHSREC
PDRTRKD  EQU   PDRTRARR
PDRDESC  EQU   PDRDESCR
PDRDSSEQ EQU   PDRSTREC+396
PDRRES6  EQU   PDRSTREC+392
PDRTRKL  EQU   PDRSTREC+388
PDRDESCL EQU   PDRSTREC+384
PDRABS   EQU   PDRSTREC+256
PDRRES5  EQU   PDRSTREC+252
PDRFIXID EQU   PDRSTREC+192
PDRFTIME EQU   PDRSTREC+184
PDRFDATE EQU   PDRSTREC+176
PDRFSTAT EQU   PDRSTREC+172
PDRRES4  EQU   PDRSTREC+167
PDRPTFID EQU   PDRSTREC+160
PDRTTIME EQU   PDRSTREC+152
PDRTDATE EQU   PDRSTREC+144
PDRTSTAT EQU   PDRSTREC+140
PDRRES3  EQU   PDRSTREC+135
PDRAPRID EQU   PDRSTREC+128
PDRITIME EQU   PDRSTREC+120
PDRIDATE EQU   PDRSTREC+112
PDRISTAT EQU   PDRSTREC+104
PDRRTIME EQU   PDRSTREC+96
PDRRDATE EQU   PDRSTREC+88
PDRPTIME EQU   PDRSTREC+80
PDRPDATE EQU   PDRSTREC+72
PDRPSTAT EQU   PDRSTREC+64
PDRUSER  EQU   PDRSTREC+56
PDRSYS   EQU   PDRSTREC+48
PDRGROUP EQU   PDRSTREC+40
PDROWNLN EQU   PDROWNNM+7
PDROWNID EQU   PDROWNNM
PDRRES1  EQU   PDRSTREC+27
PDRSEV   EQU   PDRSTREC+26
PDRCOMP  EQU   PDRSTREC+16
PDROTIME EQU   PDRSTREC+8
DSDPRSQN EQU   DSDPRASR
DSDBRES1 EQU   DSDBASRC+76
DMCBRES7 EQU   DMCBQSM+96
DMCBDCB  EQU   DMCBQSM
DMCBACB  EQU   DMCBVSM+76
DMCBRPL  EQU   DMCBVSM
CPPLCBUF EQU   CPPL
@NM00078 EQU   DSC+8
@NM00077 EQU   DSC+7
DSCQF8   EQU   DSCQF
DSCQF7   EQU   DSCQF
DSCQF6   EQU   DSCQF
DSCQF5   EQU   DSCQF
DSCQF4   EQU   DSCQF
DSCQF3   EQU   DSCQF
DSCQF2   EQU   DSCQF
DSCQFP   EQU   DSCQF
DSCQL    EQU   DSC+4
@NM00076 EQU   PRN+8
@NM00075 EQU   PRN+7
PRNIF8   EQU   PRNIF
PRNIF7   EQU   PRNIF
PRNIF6   EQU   PRNIF
PRNIF5   EQU   PRNIF
PRNIF4   EQU   PRNIF
PRNIF3   EQU   PRNIF
PRNIF2   EQU   PRNIF
PRNIFP   EQU   PRNIF
PRNIL    EQU   PRN+4
@NM00074 EQU   DSNS+24
@NM00073 EQU   DSNS+23
DSNSPF8  EQU   DSNSPF
DSNSPF7  EQU   DSNSPF
DSNSPF6  EQU   DSNSPF
DSNSPF5  EQU   DSNSPF
DSNSPF4  EQU   DSNSPF
DSNSPF3  EQU   DSNSPF
DSNSPF2  EQU   DSNSPF
DSNSPFP  EQU   DSNSPF
DSNSPL   EQU   DSNS+20
@NM00072 EQU   DSNS+15
DSNSMF8  EQU   DSNSMF
DSNSMF7  EQU   DSNSMF
DSNSMF6  EQU   DSNSMF
DSNSMF5  EQU   DSNSMF
DSNSMF4  EQU   DSNSMF
DSNSMF3  EQU   DSNSMF
DSNSMF2  EQU   DSNSMF
DSNSMFP  EQU   DSNSMF
DSNSML   EQU   DSNS+12
@NM00071 EQU   DSNS+7
@NM00070 EQU   DSNSDF
DSNSDFQ  EQU   DSNSDF
DSNSDFP  EQU   DSNSDF
DSNSDL   EQU   DSNS+4
PDSP     EQU   PDDSECT+4
@NM00069 EQU   PDDSECT
FPRES6   EQU   FPBLOK+136
FPDELLN  EQU   FPDELNM+7
FPDELID  EQU   FPDELNM
FPADMLN  EQU   FPADMNM+7
FPADMID  EQU   FPADMNM
FPGRPID  EQU   FPBLOK+112
FPSYSID  EQU   FPBLOK+104
FPRES4   EQU   FPBLOK+103
FPDBPIDP EQU   FPBLOK+100
FPRES3   EQU   FPBLOK+99
FPRES2   EQU   FPBLOK+92
FPDSDS   EQU   FPBLOK+48
FPRES1   EQU   FPBLOK+44
FPPDDS   EQU   FPBLOK
PDRRESV  EQU   PDREC+14
PDRRECSQ EQU   PDRKEY+10
PDRKPNUM EQU   PDRKPID+3
PDRKPREF EQU   PDRKPID
PDRKRCTY EQU   PDRGRP
DSDRES1  EQU   DSDREC+61
DSDKPNUM EQU   DSDKPID+3
DSDKPREF EQU   DSDKPID
DSDKMEMN EQU   DSDKDSNM+44
DSDKDSN  EQU   DSDKDSNM
DSDKTYP  EQU   DSDKGRP
DMCBWRK  EQU   DMCB+648
DMCBRES8 EQU   DMCB+640
DMCBMODN EQU   DMCB+632
DMCBCARY EQU   DMCBAUDT+20
DMCBCLC  EQU   DMCBAUDT+12
DMCBOPC  EQU   DMCBAUDT+8
DMCBFRC  EQU   DMCBAUDT+4
DMCBALC  EQU   DMCBAUDT
DMCBFR   EQU   DMCB+412
DMCBRES6 EQU   DMCB+410
DMCBIRSC EQU   DMCB+408
DMCBSUBC EQU   DMCB+404
DMCBDRBP EQU   DMCB+400
DMCBRSZM EQU   DMCB+398
DMCBRSZA EQU   DMCB+396
DMCBCISZ EQU   DMCB+394
DMCBDCBL EQU   DMCB+392
DMCBDCLR EQU   DMCB+390
DMCBDCFM EQU   DMCB+389
DMCBRES5 EQU   DMCB+388
DMCBLBRT EQU   DMCB+386
DMCBLBSQ EQU   DMCB+384
DMCBLBPS EQU   DMCB+383
DMCBLBTY EQU   DMCB+382
DMCBRES4 EQU   DMCB+381
DMCBSPRS EQU   DMCBSPEC
DMCBSPRN EQU   DMCBSPEC
DMCBSPCT EQU   DMCBSPEC
DMCBSPRL EQU   DMCBSPEC
DMCBSPSE EQU   DMCB+376
DMCBSPPR EQU   DMCB+372
DMCBSPTY EQU   DMCB+369
DMCBODIS EQU   DMCB+368
DMCBDISP EQU   DMCB+367
DMCBSTAT EQU   DMCB+366
DMCBRES3 EQU   DMCB+364
DMCBMEMB EQU   DMCB+356
DMCBMODL EQU   DMCB+348
DMCBRES9 EQU   DMCB+340
DMCBPID  EQU   DMCB+332
DMCBTYPE EQU   DMCB+328
DMCBDSN  EQU   DMCB+284
DMCBUNIT EQU   DMCB+276
DMCBDSOR EQU   DMCB+274
DMCBVOL  EQU   DMCB+268
DMCBDDNM EQU   DMCB+260
DMCBSYNM EQU   DMCB+132
DMCBRPLF EQU   DMCB+128
DMCBDCBE EQU   DMCBACBE
DMCBARC  EQU   DMCB+120
DMCBCPC  EQU   DMCB+116
DMCBRET  EQU   DMCB+112
DMCBSTL  EQU   DMCB+96
DMCBEOB  EQU   DMCB+92
DMCBFRE  EQU   DMCB+88
DMCBRES2 EQU   DMCB+85
DMCBSPID EQU   DMCB+84
DMCBRESC EQU   DMCB+80
DMCBZZ1P EQU   DMCB+76
DMCBMSGS EQU   DMCB+72
DMCBMSG0 EQU   DMCB+68
DMCBRRL  EQU   DMCB+60
DMCBRBA  EQU   DMCB+56
DMCBMSG  EQU   DMCB+52
DMCBKEYL EQU   DMCB+48
DMCBKPC  EQU   DMCBKEYP
DMCBORL  EQU   DMCB+40
DMCBBLEN EQU   DMCB+36
DMCBBFPC EQU   DMCBBUFP
DMCBRES1 EQU   DMCB+31
DMCBACCM EQU   DMCB+30
DMCBREJ  EQU   DMCB+29
DMCBRESB EQU   DMCBMFLG
DMCBFMOD EQU   DMCBMFLG
DMCBLOPT EQU   DMCB+27
DMCBLRM  EQU   DMCB+26
DMCBLRQ  EQU   DMCB+25
DMCBOPRS EQU   DMCBOPTS
DMCBLRD  EQU   DMCBOPTS
DMCBBWD  EQU   DMCBOPTS
DMCBUPD  EQU   DMCBOPTS
DMCBAPX  EQU   DMCBOPTS
DMCBRNO  EQU   DMCBGKY
DMCBKYD  EQU   DMCBOPTS
DMCBRMRS EQU   DMCBRMOD
DMCBRM5  EQU   DMCBRMOD
DMCBRM6  EQU   DMCBRMOD
DMCBTMP  EQU   DMCBOUT
DMCBRQST EQU   DMCB+22
DMCBRESA EQU   DMCBOPN
DMCBSOUT EQU   DMCBOPN
DMCBSIN  EQU   DMCBOPN
DMCBVSF  EQU   DMCBFTY
DMCBKSF  EQU   DMCBFTY
DMCBFTRS EQU   DMCBFTY
DMCBSHF  EQU   DMCBFTY
DMCBIRL  EQU   DMCB+16
DMCBRTC  EQU   DMCB+12
DMCBTVP  EQU   DMCB+8
DMCBNEXT EQU   DMCB+4
DMCBID   EQU   DMCB
DVT99999 EQU   DVT+256
DVT0064P EQU   DVT+252
DVT0063P EQU   DVT+248
DVT0062P EQU   DVT+244
DVT0061P EQU   DVT+240
DVT0060P EQU   DVT+236
DVT0059P EQU   DVT+232
DVT0058P EQU   DVT+228
DVT0057P EQU   DVT+224
DVT0056P EQU   DVT+220
DVT0055P EQU   DVT+216
DVT0054P EQU   DVT+212
DVT0053P EQU   DVT+208
DVT0052P EQU   DVT+204
DVT0051P EQU   DVT+200
DVT0050P EQU   DVT+196
DVT0049P EQU   DVT+192
DVT0048P EQU   DVT+188
DVT0047P EQU   DVT+184
DVT0046P EQU   DVT+180
DVT0045P EQU   DVT+176
DVT0044P EQU   DVT+172
DVT0043P EQU   DVT+168
DVT0042P EQU   DVT+164
DVT0041P EQU   DVT+160
DVT0040P EQU   DVT+156
DVT0039P EQU   DVT+152
DVT0038P EQU   DVT+148
DVT0037P EQU   DVT+144
DVT0036P EQU   DVT+140
DVT0035P EQU   DVT+136
DVT0034P EQU   DVT+132
DVT0011P EQU   DVT+40
DVT0005P EQU   DVT+16
DVT0002P EQU   DVT+4
DVT0001P EQU   DVT
BVT99999 EQU   BVT+256
BVT0064P EQU   BVT+252
BVT0063P EQU   BVT+248
BVT0062P EQU   BVT+244
BVT0061P EQU   BVT+240
BVT0060P EQU   BVT+236
BVT0059P EQU   BVT+232
BVT0057P EQU   BVT+224
BVT0056P EQU   BVT+220
BVTSTBLP EQU   BVT+200
BVT0045P EQU   BVT+176
BVT0044P EQU   BVT+172
BVT0033P EQU   BVT+128
BVT0032P EQU   BVT+124
BVT0031P EQU   BVT+120
BVT0030P EQU   BVT+116
BVT0029P EQU   BVT+112
BVT0026P EQU   BVT+100
BVT0025P EQU   BVT+96
BVT0024P EQU   BVT+92
BVT0023P EQU   BVT+88
BVT0016P EQU   BVT+60
BVT0015P EQU   BVT+56
BVT0014P EQU   BVT+52
BVT0003P EQU   BVT+8
BVT0001P EQU   BVT
SA99     EQU   SA+72
SARC     EQU   SAR+56
SARB     EQU   SAR+52
SARA     EQU   SAR+48
SAR9     EQU   SAR+44
SAR8     EQU   SAR+40
SAR7     EQU   SAR+36
SAR6     EQU   SAR+32
SAR5     EQU   SAR+28
SAR4     EQU   SAR+24
SAR3     EQU   SAR+20
SAR2     EQU   SAR+16
SAR1     EQU   SAR+12
SAR0     EQU   SAR+8
SARF     EQU   SAR+4
SARE     EQU   SAR
SAFWD    EQU   SA+8
SABAK    EQU   SA+4
SA1L     EQU   SA1+1
SA1P     EQU   SA1
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00068 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00067 EQU   UPT
@NM00066 EQU   ECT+52
@NM00065 EQU   ECT+48
@NM00064 EQU   ECT+44
@NM00063 EQU   ECTSWS2+1
@NM00062 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00061 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00060 EQU   PSCB+36
@NM00059 EQU   PSCB+32
@NM00058 EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00057 EQU   PSCBATR1
@NM00056 EQU   PSCBATR1
@NM00055 EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
PSCBUSRL EQU   PSCB+7
PSCBUSER EQU   PSCB
CMDT1    EQU   CMDT
CMDO     EQU   CMD+2
CMDL     EQU   CMD
ZZ299999 EQU   ZZ2+8192
ZZ2AXOT1 EQU   ZZ2AXOT
ZZ2AXOL  EQU   ZZ2AXO
@NM00054 EQU   ZZ2+7288
@NM00053 EQU   ZZ2AMDX+4
ZZ2AMDXC EQU   ZZ2AMDX
ZZ2HSD   EQU   ZZ2+3056
@NM00052 EQU   ZZ2ES
@NM00051 EQU   ZZ2+2868
ZZ2ITSEC EQU   ZZ2ITSE+1
@NM00050 EQU   ZZ2ITSE
ZZ2ITSEP EQU   ZZ2ITSE
ZZ2ITSEW EQU   ZZ2ITSE
@NM00049 EQU   ZZ2ITR+20
ZZ2ITREC EQU   ZZ2ITRE+1
@NM00048 EQU   ZZ2ITRE
ZZ2ITREP EQU   ZZ2ITRE
ZZ2ITREW EQU   ZZ2ITRE
@NM00047 EQU   ZZ2ITR+9
ZZ2ITRRC EQU   ZZ2ITR+8
ZZ2ITR2P EQU   ZZ2ITR+4
ZZ2ITRPP EQU   ZZ2ITR
@NM00046 EQU   ZZ2+1544
ZZ2PGM   EQU   ZZ2+1536
@NM00045 EQU   ZZ2+1526
ZZ2CW    EQU   ZZ2+1524
@NM00044 EQU   ZZ2+1504
@NM00043 EQU   ZZ2+1352
ZZ2FFSYP EQU   ZZ2+1348
ZZ2SASYP EQU   ZZ2+1344
ZZ2RDSYP EQU   ZZ2+1340
ZZ2RASYP EQU   ZZ2+1336
ZZ2PHSYP EQU   ZZ2+1332
ZZ2ESSYP EQU   ZZ2+1328
ZZ200SYP EQU   ZZ2+1324
ZZ2SCWP  EQU   ZZ2+1320
ZZ2TTLP  EQU   ZZ2+1316
ZZ2LOADP EQU   ZZ2+1312
ZZ2VRESP EQU   ZZ2+1308
ZZ2CPPLE EQU   ZZ2CPPL+12
ZZ2CPPLP EQU   ZZ2CPPL+8
ZZ2CPPLU EQU   ZZ2CPPL+4
ZZ2VRSAP EQU   ZZ2+1288
ZZ2RVTP  EQU   ZZ2+1284
@NM00042 EQU   ZZ2+1272
@NM00041 EQU   ZZ2+1268
ZZ2RPLP  EQU   ZZ2+1260
ZZ2TCBP  EQU   ZZ2+1256
@NM00040 EQU   ZZ2+1252
ZZ2ZZ2P  EQU   ZZ2+1248
@NM00039 EQU   ZZ2+1112
@NM00038 EQU   ZZ2+1080
ZZ2FT25P EQU   ZZ2+1072
@NM00037 EQU   ZZ2+976
ZZ2TOD   EQU   ZZ2+968
ZZ2STGN  EQU   ZZ2STG+4
ZZ2STGP  EQU   ZZ2STG
@NM00036 EQU   ZZ2+952
ZZ2SCMDE EQU   ZZ2+944
ZZ2SCMDN EQU   ZZ2+936
ZZ2IDENT EQU   ZZ2+928
ZZ2A9999 EQU   ZZ2A+656
@NM00035 EQU   ZZ2A+224
@NM00034 EQU   ZZ2A+220
ZZ2AQD99 EQU   ZZ2AQD+60
@NM00033 EQU   ZZ2AQD+56
@NM00032 EQU   ZZ2AQDF
ZZ2AQDFA EQU   ZZ2AQDF
ZZ2AQDIL EQU   ZZ2AQD+48
ZZ2AQDIM EQU   ZZ2AQD+44
ZZ2AQDT9 EQU   ZZ2AQDT+34
ZZ2AQDTE EQU   ZZ2AQDT+33
ZZ2AQDTD EQU   ZZ2AQDT+2
@NM00031 EQU   ZZ2AQDT+1
ZZ2AQDTY EQU   ZZ2AQDT
ZZ2AQDT0 EQU   ZZ2AQDT
ZZ2AQDLB EQU   ZZ2AQD+9
ZZ2AQDOB EQU   ZZ2AQD+8
ZZ2AQDLE EQU   ZZ2AQD+4
ZZ2AQDOF EQU   ZZ2AQD
ZZ2AQD00 EQU   ZZ2AQD
ZZ2AQAS9 EQU   ZZ2AQAS+16
@NM00030 EQU   ZZ2AQAS+12
ZZ2AQAS2 EQU   ZZ2AQAS+8
ZZ2AQAS1 EQU   ZZ2AQAS+4
@NM00029 EQU   ZZ2AQAS+2
ZZ2AQAST EQU   ZZ2AQAS
ZZ2AQAS0 EQU   ZZ2AQAS
ZZ2AZZ6P EQU   ZZ2A+140
ZZ2ADPTA EQU   ZZ2ADPT
ZZ2ADPL  EQU   ZZ2ADP
ZZ2ADMTA EQU   ZZ2ADMT
ZZ2ADML  EQU   ZZ2ADM
ZZ2ADDTA EQU   ZZ2ADDT
ZZ2ADDL  EQU   ZZ2ADD
@NM00028 EQU   ZZ2A+72
ZZ2APIDB EQU   ZZ2APID+3
ZZ2APIDA EQU   ZZ2APID
@NM00027 EQU   ZZ2A+24
@NM00026 EQU   ZZ2AF+5
@NM00025 EQU   ZZ2AF+3
ZZ2AFS   EQU   ZZ2AF+2
ZZ2AFD   EQU   ZZ2AF+2
ZZ2AFQ   EQU   ZZ2AF+2
ZZ2AF$   EQU   ZZ2AF+2
@NM00024 EQU   ZZ2AF+2
ZZ2AFM   EQU   ZZ2AF+2
@NM00023 EQU   ZZ2AF+2
@NM00022 EQU   ZZ2AF+1
ZZ2AFV   EQU   ZZ2AF+1
@NM00021 EQU   ZZ2AF+1
@NM00020 EQU   ZZ2AF
ZZ2AFFS  EQU   ZZ2AF
ZZ2AFT   EQU   ZZ2AF
ZZ2AFP   EQU   ZZ2AF
@NM00019 EQU   ZZ2A+8
ZZ2ALINE EQU   ZZ2A+4
@NM00018 EQU   ZZ2A+3
ZZ2ASE   EQU   ZZ2A+2
ZZ2ACH   EQU   ZZ2A
@NM00017 EQU   ZZ2+264
@NM00016 EQU   ZZ2+263
ZZ2PRTT0 EQU   ZZ2PRTT
ZZ2PRTO  EQU   ZZ2PRT+2
ZZ2PRTL  EQU   ZZ2PRT
@NM00015 EQU   ZZ2AMD+56
ZZ2AMDXP EQU   ZZ2AMD+52
ZZ2AMDD  EQU   ZZ2AMD+48
ZZ2AMDL  EQU   ZZ2AMD+44
ZZ2AMDU  EQU   ZZ2AMD+28
ZZ2AMDF  EQU   ZZ2AMD+24
ZZ2AMDS  EQU   ZZ2AMD+20
ZZ2AMDC  EQU   ZZ2AMD+16
ZZ2AMDP  EQU   ZZ2AMD+12
ZZ2AMDB  EQU   ZZ2AMD+8
@NM00014 EQU   @NM00013
ZZ2AMD2  EQU   @NM00013
ZZ2AMD1  EQU   @NM00013
ZZ2AMD0  EQU   ZZ2AMD+6
ZZ2AMDA  EQU   ZZ2AMD+4
ZZ2AMDT  EQU   ZZ2AMD
ZZ199999 EQU   ZZ1+3072
@NM00012 EQU   ZZ1+2160
ZZ1TRTAS EQU   ZZ1+1904
ZZ1TRUPC EQU   ZZ1+1648
ZZ1TRCTX EQU   ZZ1+1392
ZZ1NASID EQU   ZZ1N+274
ZZ1NSTRL EQU   ZZ1N+272
ZZ1NOFF  EQU   ZZ1N+268
ZZ1NBDY  EQU   ZZ1N+264
ZZ1NADE  EQU   ZZ1N+260
ZZ1NADB  EQU   ZZ1N+256
ZZ1NSTR  EQU   ZZ1N
@NM00011 EQU   ZZ1+1080
ZZ1TREBC EQU   ZZ1+824
ZZ1TRHEX EQU   ZZ1+568
@NM00010 EQU   ZZ1+377
ZZ1USTAE EQU   ZZ1+376
@NM00009 EQU   ZZ1F+1
@NM00008 EQU   ZZ1F
ZZ1FM    EQU   ZZ1F
ZZ1FX    EQU   ZZ1F
ZZ1FU    EQU   ZZ1F
ZZ1EVEC  EQU   ZZ1EVE+1
@NM00007 EQU   ZZ1EVE
ZZ1EVEP  EQU   ZZ1EVE
ZZ1EVEW  EQU   ZZ1EVE
ZZ1ACMP  EQU   ZZ1ATTN
@NM00006 EQU   ZZ1+144
ZZ1ZZ6P  EQU   ZZ1+136
@NM00005 EQU   ZZ1+84
ZZ1PLINE EQU   ZZ1+80
ZZ1PGSZ  EQU   ZZ1+76
ZZ1PCNT  EQU   ZZ1+72
@NM00004 EQU   ZZ1+68
ZZ1TPAGE EQU   ZZ1+64
ZZ1TLINE EQU   ZZ1+60
@NM00003 EQU   ZZ1+52
ZZ1DMCBP EQU   ZZ1+48
ZZ1DSDP  EQU   ZZ1+44
ZZ1ZZ2P  EQU   ZZ1+36
ZZ1327WP EQU   ZZ1+32
ZZ1ACBP  EQU   ZZ1+28
@NM00002 EQU   ZZ1+24
ZZ1PDCBP EQU   ZZ1+20
ZZ1BLRBL EQU   ZZ1+16
@NM00001 EQU   ZZ1+12
ZZ1PNULL EQU   ZZ1+8
ZZ1NULL  EQU   ZZ1+4
ZZ1IDE   EQU   ZZ1
*                                      END UNREFERENCED COMPONENTS
@RC00319 EQU   @RC00317
@RC00315 EQU   @RC00305
@RF00332 EQU   @RC00315
@RC00337 EQU   @RC00315
@RC00440 EQU   @RC00315
@RC00341 EQU   @RC00337
@RC00345 EQU   @RC00341
@RF00349 EQU   @RC00345
@ENDDATA EQU   *
         END   BLSFMD00,(C'PLS0937',0701,78067)
