ACCQ     TITLE 'BLSRACCQ--DEBUGGING STORAGE ACCESS SERVICE ROUTINE     *
                        '
*/* CHANGE ACTIVITY -------------------------------------------------*/
*/*   THIS MODULE WAS WRITTEN FOR @G57LPRW                           */
*/*------------------------------------------------------------------*/
BLSRACCQ CSECT ,                                                01S0002
@MAINENT DS    0H                                               01S0002
         USING *,@15                                            01S0002
         B     @PROLOG                                          01S0002
         DC    AL1(16)                                          01S0002
         DC    C'BLSRACCQ  78.057'                              01S0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0002
         BALR  @12,0                                            01S0002
@PSTART  DS    0H                                               01S0002
         USING @PSTART,@12                                      01S0002
         L     @00,@SIZDATD                                     01S0002
         BLSUALLS R,LV=(0)
         LR    @11,@01                                          01S0002
         USING @DATD,@11                                        01S0002
         ST    @13,@SA00001+4                                   01S0002
         LM    @00,@01,20(@13)                                  01S0002
         ST    @11,8(,@13)                                      01S0002
         LR    @13,@11                                          01S0002
         MVC   @PC00001(12),0(@01)                              01S0002
*   ESBAPTR=ADDR(ESPA);             /* ->ESBA (ALIAS FOR ESPA)       */
         L     ESBAPTR,@PC00001+4                               01S0162
*   CALL BLSRESCK(ZZ2,ESBA);        /* VALIDATE EQUATE SYMBOL RECORD */
         ST    R9,@AL00001                                      01S0163
         ST    ESBAPTR,@AL00001+4                               01S0163
         L     @10,ZZ2RVTP(,R9)                                 01S0163
         L     @15,RVTESCKP(,@10)                               01S0163
         LA    @01,@AL00001                                     01S0163
         BALR  @14,@15                                          01S0163
*   RETC=RF;                        /* RETURN CODE                   */
         LR    RETC,RF                                          01S0164
*   IF RF>ZZZFLAGE THEN             /* INVALID EQUATE SYMBOL RECORD  */
*                                                               01S0165
         CH    RF,@CH00056                                      01S0165
         BNH   @RF00165                                         01S0165
*     /***************************************************************/
*     /*                                                             */
*     /* INVALID EQUATE SYMBOL RECORD                                */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0166
*     DO;                           /* INVALID EQUATE SYMBOL RECORD  */
*       ESBAFSM='1'B;               /* MISSING STORAGE               */
         OI    ESBAFSM(ESBAPTR),B'00100000'                     01S0167
*       ESBAMAD=ESBALAD;            /* ->MISSING STORAGE             */
         MVC   ESBAMAD(4,ESBAPTR),ESBALAD(ESBAPTR)              01S0168
*       GO TO EXIT;                 /* COMMON EXIT PATH              */
         B     EXIT                                             01S0169
*     END;                          /* INVALID EQUATE SYMBOL RECORD  */
*   ESBAFS='00'X;                   /* STORAGE FLAGS                 */
@RF00165 MVI   ESBAFS(ESBAPTR),X'00'                            01S0171
*   CURADDR=ESBALAD+ESBADOF;        /* ->CURRENT STORAGE POSITION    */
         L     CURADDR,ESBALAD(,ESBAPTR)                        01S0172
         AL    CURADDR,ESBADOF(,ESBAPTR)                        01S0172
*   GENERATE CODE(MVC   ADATA(ADATAEND-ADATA),SDATA);           01S0173
         MVC   ADATA(ADATAEND-ADATA),SDATA
*   AMTLEFT=ESBADLE*MAX(ESBADIM,1); /* REQUESTED STORAGE REMAINING   */
         L     @14,ESBADIM(,ESBAPTR)                            01S0174
         LA    @07,1                                            01S0174
         CLR   @14,@07                                          01S0174
         BNL   *+6
         LR    @14,@07                                          01S0174
         LR    @01,@14                                          01S0174
         M     @00,ESBADLE(,ESBAPTR)                            01S0174
         ST    @01,AMTLEFT                                      01S0174
*   CURBUFAD=ADDR(BUFFER);          /* ->CURRENT BUFFER POSITION     */
         L     @14,@PC00001+8                                   01S0175
         ST    @14,CURBUFAD                                     01S0175
*   ASAU=ESBAAS;                    /* ADDRESS SPACE REQUESTED       */
*                                                               01S0176
         MVC   ASAU(16),ESBAAS(ESBAPTR)                         01S0176
*   /*****************************************************************/
*   /*                                                               */
*   /* DATA IS MOVED BUFFER (I/O) BY BUFFER TO THE CALLERS BUFFER    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0177
*   DO WHILE(AMTLEFT>0);            /* ACCESS ALL STORAGE REQUESTED  */
         B     @DE00177                                         01S0177
@DL00177 DS    0H                                               01S0178
*     IF ZZ1EVEP='1'B THEN          /* EARLY TERMINATION REQUESTED   */
*                                                               01S0178
         L     @14,ZZ2ZZ1P(,R9)                                 01S0178
         TM    ZZ1EVEP(@14),B'01000000'                         01S0178
         BNO   @RF00178                                         01S0178
*       /*************************************************************/
*       /*                                                           */
*       /* EARLY TERMINATION REQUESTED                               */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0179
*       DO;                         /* EARLY TERMINATION REQUESTED   */
*         ESBAFSM='1'B;             /* MISSING STORAGE               */
         OI    ESBAFSM(ESBAPTR),B'00100000'                     01S0180
*         ESBAMAD=CURADDR;          /* ->MISSING STORAGE             */
         ST    CURADDR,ESBAMAD(,ESBAPTR)                        01S0181
*         RETC=ZZZFLAGS;            /* RETURN CODE                   */
         LA    RETC,12                                          01S0182
*         GO TO EXIT;               /* COMMON EXIT PATH              */
         B     EXIT                                             01S0183
*       END;                        /* EARLY TERMINATION REQUESTED   */
*     RAAUAS=ASAU;                  /* ADDRESS SPACE REQUESTED       */
@RF00178 MVC   RAAUAS(16),ASAU                                  01S0185
*     RAAUFAD=CURADDR;              /* ->STORAGE OF INTEREST         */
         ST    CURADDR,RAAUFAD                                  01S0186
*     CALL BLSRRAGE(ZZ2,RAAU);      /* LOCATE STORAGE RECORD         */
         ST    R9,@AL00001                                      01S0187
         LA    @14,RAAU                                         01S0187
         ST    @14,@AL00001+4                                   01S0187
         L     @07,ZZ2RVTP(,R9)                                 01S0187
         L     @15,RVTRAGEP(,@07)                               01S0187
         LA    @01,@AL00001                                     01S0187
         BALR  @14,@15                                          01S0187
*     RETC=MAX(RETC,RF);            /* RETURN CODE                   */
         CR    RETC,RF                                          01S0188
         BNL   *+6
         LR    RETC,RF                                          01S0188
*     IF RF>ZZZFLAGE×RAAURFU(1)='1'B THEN/* STORAGE NOT LOCATED      */
*                                                               01S0189
         CH    RF,@CH00056                                      01S0189
         BH    @RT00189                                         01S0189
         TM    RAAURFU,B'10000000'                              01S0189
         BNO   @RF00189                                         01S0189
@RT00189 DS    0H                                               01S0190
*       /*************************************************************/
*       /*                                                           */
*       /* STORAGE NOT LOCATED                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0190
*       DO;                         /* STORAGE NOT LOCATED           */
*         ESBAFSM='1'B;             /* MISSING STORAGE               */
         OI    ESBAFSM(ESBAPTR),B'00100000'                     01S0191
*         ESBAMAD=CURADDR;          /* ->MISSING STORAGE             */
         ST    CURADDR,ESBAMAD(,ESBAPTR)                        01S0192
*         RETC=MAX(RETC,ZZZFLAGW);  /* RETURN CODE                   */
         LA    @14,4                                            01S0193
         CR    RETC,@14                                         01S0193
         BNL   *+6
         LR    RETC,@14                                         01S0193
*         GO TO EXIT;               /* COMMON EXIT PATH              */
         B     EXIT                                             01S0194
*       END;                        /* STORAGE NOT LOCATED           */
*     IF RAAURDA(1)>=ZZ6DDA1 THEN   /* ABSURD RECORD ADDRESS         */
*                                                               01S0196
@RF00189 L     @14,ZZ2AZZ6P(,R9)                                01S0196
         CLC   RAAURDA(4),ZZ6DDA1(@14)                          01S0196
         BL    @RF00196                                         01S0196
*       /*************************************************************/
*       /*                                                           */
*       /* ABSURD RECORD ADDRESS                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0197
*       DO;                         /* ABSURD RECORD ADDRESS         */
*         ESBAFSM='1'B;             /* MISSING STORAGE               */
         OI    ESBAFSM(ESBAPTR),B'00100000'                     01S0198
*         ESBAMAD=CURADDR;          /* ->MISSING STORAGE             */
         ST    CURADDR,ESBAMAD(,ESBAPTR)                        01S0199
*         RETC=MAX(RETC,ZZZFLAGT);  /* RETURN CODE                   */
         LA    @14,16                                           01S0200
         CR    RETC,@14                                         01S0200
         BNL   *+6
         LR    RETC,@14                                         01S0200
*         GO TO EXIT;               /* COMMON EXIT PATH              */
         B     EXIT                                             01S0201
*       END;                        /* ABSURD RECORD ADDRESS         */
*     ZZ6BUFB=ZZ6BUFB+1;            /* DATA REQUESTS                 */
@RF00196 L     @14,ZZ2AZZ6P(,R9)                                01S0203
         LA    @07,1                                            01S0203
         L     @05,ZZ6BUFB(,@14)                                01S0203
         ALR   @05,@07                                          01S0203
         ST    @05,ZZ6BUFB(,@14)                                01S0203
*                                                               02S0204
*/*------------------------------------------------------------------*/
*/* BLSRACCR--READ RECORD INTO BUFFER                                */
*/*------------------------------------------------------------------*/
*                                                               02S0204
*     /***************************************************************/
*     /*                                                             */
*     /* SEARCH BUFFERS FOR REQUESTED RECORD, BEST BUFFER TO STEAL   */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0204
*     BUFSTEAL=1;                   /* INDEX OF BUFFER TO STEAL      */
         LR    BUFSTEAL,@07                                     02S0204
*     DO BUFNUM=1 TO ZZ6BUFN WHILE(ZZ6BFL(BUFNUM)=0×ZZ6BDA(BUFNUM)^=
*           RAAURDA(1));            /* SEARCH BUFFERS                */
         LR    BUFNUM,@07                                       02S0205
         B     @DE00205                                         02S0205
@DL00205 LR    @14,BUFNUM                                       02S0205
         SLA   @14,4                                            02S0205
         L     @07,ZZ2AZZ6P(,R9)                                02S0205
         LH    @05,ZZ6BFL-16(@14,@07)                           02S0205
         LTR   @05,@05                                          02S0205
         BZ    @DB00205                                         02S0205
         L     @14,ZZ6BDA-16(@14,@07)                           02S0205
         CL    @14,RAAURDA                                      02S0205
         BE    @DC00205                                         02S0205
@DB00205 DS    0H                                               02S0206
*       IF ZZ6BFL(BUFSTEAL)^=0 THEN /* POSSIBLY A BETTER STEAL       */
*                                                               02S0206
         SLR   @14,@14                                          02S0206
         LR    @07,BUFSTEAL                                     02S0206
         SLA   @07,4                                            02S0206
         L     @05,ZZ2AZZ6P(,R9)                                02S0206
         CH    @14,ZZ6BFL-16(@07,@05)                           02S0206
         BE    @RF00206                                         02S0206
*         /***********************************************************/
*         /*                                                         */
*         /* POSSIBLY A BETTER STEAL                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S0207
*         DO;                       /* POSSIBLY A BETTER STEAL       */
*           IF                      /* A BETTER BUFFER TO STEAL      */
*               ZZ6BFL(BUFNUM)=0×   /* STEAL EMPTY BUFFER            */
*               (ZZ6BRC(BUFNUM)*SCALEVAL)/(ZZ6BUFB-ZZ6BRB(BUFNUM))<(
*               ZZ6BRC(BUFSTEAL)*SCALEVAL)/(ZZ6BUFB-ZZ6BRB(BUFSTEAL))
*             THEN                  /* STEAL POORLY USED BUFFER      */
         LR    @03,BUFNUM                                       02S0208
         SLA   @03,4                                            02S0208
         CH    @14,ZZ6BFL-16(@03,@05)                           02S0208
         BE    @RT00208                                         02S0208
         L     @14,ZZ6BRC-16(@03,@05)                           02S0208
         SLA   @14,15                                           02S0208
         L     @01,ZZ6BUFB(,@05)                                02S0208
         LR    @00,@01                                          02S0208
         SL    @00,ZZ6BRB-16(@03,@05)                           02S0208
         ST    @00,@TF00001                                     02S0208
         LR    @00,@14                                          02S0208
         ST    @01,@TF00002                                     02S0208
         SRDA  @00,32                                           02S0208
         D     @00,@TF00001                                     02S0208
         L     @14,ZZ6BRC-16(@07,@05)                           02S0208
         SLA   @14,15                                           02S0208
         L     @03,@TF00002                                     02S0208
         SL    @03,ZZ6BRB-16(@07,@05)                           02S0208
         LR    @00,@14                                          02S0208
         ST    @01,@TF00001                                     02S0208
         SRDA  @00,32                                           02S0208
         DR    @00,@03                                          02S0208
         C     @01,@TF00001                                     02S0208
         BNH   @RF00208                                         02S0208
@RT00208 DS    0H                                               02S0209
*             BUFSTEAL=BUFNUM;      /* INDEX OF BUFFER TO STEAL      */
         LR    BUFSTEAL,BUFNUM                                  02S0209
*         END;                      /* POSSIBLY A BETTER STEAL       */
@RF00208 DS    0H                                               02S0211
*     END;                          /* SEARCH BUFFERS                */
@RF00206 AH    BUFNUM,@CH00048                                  02S0211
@DE00205 L     @14,ZZ2AZZ6P(,R9)                                02S0211
         CH    BUFNUM,ZZ6BUFN(,@14)                             02S0211
         BNH   @DL00205                                         02S0211
@DC00205 DS    0H                                               02S0212
*     IF BUFNUM>ZZ6BUFN THEN        /* REQUESTED DATA NOT IN A BUFFER*/
*                                                               02S0212
         L     @14,ZZ2AZZ6P(,R9)                                02S0212
         CH    BUFNUM,ZZ6BUFN(,@14)                             02S0212
         BNH   @RF00212                                         02S0212
*       /*************************************************************/
*       /*                                                           */
*       /* REQUESTED DATA NOT IN A BUFFER                            */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0213
*       DO;                         /* REQUESTED DATA NOT IN A BUFFER*/
*         ZZ6BUFI=ZZ6BUFI+1;        /* BDAM READ REQUESTS            */
         LA    @05,1                                            02S0214
         AL    @05,ZZ6BUFI(,@14)                                02S0214
         ST    @05,ZZ6BUFI(,@14)                                02S0214
*         ZZ6BFL(BUFSTEAL)=0;       /* MARK BUFFER EMPTY             */
         LR    @05,BUFSTEAL                                     02S0215
         SLA   @05,4                                            02S0215
         SLR   @03,@03                                          02S0215
         STH   @03,ZZ6BFL-16(@05,@14)                           02S0215
*         RESPECIFY                                             02S0216
*          (R2,                     /* ->DCB                         */
*           R3) RESTRICTED;         /* ->BUFFER                      */
*         R2=ADDR(IHADCB);          /* ->DCB                         */
         LR    R2,@14                                           02S0217
*         R3=ZZ6BUFP+ZZ6BUFL*(BUFSTEAL-1);/* ->BUFFER                */
         LR    R3,BUFSTEAL                                      02S0218
         BCTR  R3,0                                             02S0218
         MH    R3,ZZ6BUFL(,@14)                                 02S0218
         AL    R3,ZZ6BUFP(,@14)                                 02S0218
*         GENERATE REFS(ADECB,R2,R3,RAAURDA) SETS(ADECB) CODE;  02S0219
         READ  ADECB,DI,(R2),(R3),'S',0,RAAURDA+1,MF=E
         CHECK ADECB
*         RESPECIFY                                             02S0220
*          (R2,                     /* ->DCB                         */
*           R3) UNRESTRICTED;       /* ->BUFFER                      */
*         DECBPT=ADDR(ADECB);       /* ->DECB                        */
         LA    DECBPT,ADECB                                     02S0221
*         IF DECCC2^='00'X×DECCC3^='00'X THEN/* READ FAILED          */
*                                                               02S0222
         CLI   DECCC2(DECBPT),X'00'                             02S0222
         BNE   @RT00222                                         02S0222
         CLI   DECCC3(DECBPT),X'00'                             02S0222
         BE    @RF00222                                         02S0222
@RT00222 DS    0H                                               02S0223
*           /*********************************************************/
*           /*                                                       */
*           /* READ FAILED                                           */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0223
*           DO;                     /* READ FAILED                   */
*             ESBAFSM='1'B;         /* MISSING STORAGE               */
         OI    ESBAFSM(ESBAPTR),B'00100000'                     02S0224
*             ESBAMAD=CURADDR;      /* ->MISSING STORAGE             */
         ST    CURADDR,ESBAMAD(,ESBAPTR)                        02S0225
*             RETC=MAX(RETC,ZZZFLAGT);/* RETURN CODE                 */
         LA    @14,16                                           02S0226
         CR    RETC,@14                                         02S0226
         BNL   *+6
         LR    RETC,@14                                         02S0226
*             GO TO EXIT;           /* COMMON EXIT PATH              */
         B     EXIT                                             02S0227
*           END;                    /* READ FAILED                   */
*         ZZ6BDA(BUFSTEAL)=RAAURDA(1);/* RECORD                      */
@RF00222 LR    @14,BUFSTEAL                                     02S0229
         SLA   @14,4                                            02S0229
         L     @07,ZZ2AZZ6P(,R9)                                02S0229
         L     @05,RAAURDA                                      02S0229
         ST    @05,ZZ6BDA-16(@14,@07)                           02S0229
*         ZZ6BFL(BUFSTEAL)=ZZ6BUFL; /* LENGTH OF BUFFER CONTENTS     */
         LH    @05,ZZ6BUFL(,@07)                                02S0230
         STH   @05,ZZ6BFL-16(@14,@07)                           02S0230
*         ZZ6BRC(BUFSTEAL)=1;       /* BUFFER REFERENCE COUNT        */
         LA    @05,1                                            02S0231
         ST    @05,ZZ6BRC-16(@14,@07)                           02S0231
*         ZZ6BRB(BUFSTEAL)=ZZ6BUFB; /* REFERENCES TO THE DATA SET    */
         L     @05,ZZ6BUFB(,@07)                                02S0232
         ST    @05,ZZ6BRB-16(@14,@07)                           02S0232
*       END;                        /* REQUESTED DATA NOT IN A BUFFER*/
*     ELSE                          /* REQUESTED DATA IN A BUFFER    */
*                                                               02S0234
*       /*************************************************************/
*       /*                                                           */
*       /* REQUESTED DATA IN A BUFFER                                */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0234
*       DO;                         /* REQUESTED DATA IN A BUFFER    */
         B     @RC00212                                         02S0234
@RF00212 DS    0H                                               02S0235
*         BUFSTEAL=BUFNUM;          /* CURRENT BUFFER INDEX          */
         LR    BUFSTEAL,BUFNUM                                  02S0235
*         ZZ6BRC(BUFSTEAL)=ZZ6BRC(BUFSTEAL)+1;/* BUFFER REFERENCE
*                                      COUNT                         */
         LR    @14,BUFSTEAL                                     02S0236
         SLA   @14,4                                            02S0236
         L     @07,ZZ2AZZ6P(,R9)                                02S0236
         LA    @05,1                                            02S0236
         AL    @05,ZZ6BRC-16(@14,@07)                           02S0236
         ST    @05,ZZ6BRC-16(@14,@07)                           02S0236
*       END;                        /* REQUESTED DATA IN A BUFFER    */
*     HSDPTR=ZZ6BUFP+ZZ6BUFL*(BUFSTEAL-1);/* ->HSD                   */
@RC00212 L     @14,ZZ2AZZ6P(,R9)                                02S0238
         LR    HSDPTR,BUFSTEAL                                  02S0238
         BCTR  HSDPTR,0                                         02S0238
         MH    HSDPTR,ZZ6BUFL(,@14)                             02S0238
         AL    HSDPTR,ZZ6BUFP(,@14)                             02S0238
*                                                               02S0239
*/*------------------------------------------------------------------*/
*/* BLSRACCS--PROCESS SYSTEM/370 DUMP STORAGE                        */
*/*------------------------------------------------------------------*/
*                                                               02S0239
*     IF ZZ6DFDU='1'B&HSDTYPE^=HSDTYPES THEN/* SYSTEM/370 DUMP  02S0239
*                                      STORAGE                       */
*                                                               02S0239
         TM    ZZ6DFDU(@14),B'01000000'                         02S0239
         BNO   @RF00239                                         02S0239
         CLI   HSDTYPE(HSDPTR),X'FF'                            02S0239
         BE    @RF00239                                         02S0239
*       /*************************************************************/
*       /*                                                           */
*       /* SYSTEM/370 DUMP STORAGE RECORD                            */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0240
*       DO;                         /* SYSTEM/370 DUMP STORAGE       */
*         IF HSDSASI=HSDSASIS THEN  /* SUMDUMP RECORD                */
*                                                               02S0241
         CLC   HSDSASI(2,HSDPTR),@CH00091                       02S0241
         BNE   @RF00241                                         02S0241
*           /*********************************************************/
*           /*                                                       */
*           /* SUMDUMP RECORD                                        */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0242
*           DO;                     /* SUMDUMP RECORD                */
*             ESBAKEY='FF'X;        /* INDETERMINATE STORAGE KEY     */
         MVI   ESBAKEY(ESBAPTR),X'FF'                           02S0243
*             ESBAFSS='1'B;         /* SUMDUMP DATA                  */
         OI    ESBAFSS(ESBAPTR),B'00000001'                     02S0244
*           END;                    /* SUMDUMP RECORD                */
*         IF ESBAFSS='0'B THEN      /* NO SUMDUMP DATA               */
*                                                               02S0246
@RF00241 TM    ESBAFSS(ESBAPTR),B'00000001'                     02S0246
         BNZ   @RF00246                                         02S0246
*           /*********************************************************/
*           /*                                                       */
*           /* NO SUMDUMP DATA                                       */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0247
*           DO;                     /* NO SUMDUMP DATA               */
*             IF ESBAFSC='0'B THEN  /* FIRST STORAGE RECORD          */
*                                                               02S0248
         TM    ESBAFSC(ESBAPTR),B'10000000'                     02S0248
         BNZ   @RF00248                                         02S0248
*               /*****************************************************/
*               /*                                                   */
*               /* FIRST STORAGE RECORD                              */
*               /*                                                   */
*               /*****************************************************/
*                                                               02S0249
*               DO;                 /* FIRST STORAGE RECORD          */
*                 P1=CURADDR&ZZZP4OFF;/* OFFSET FROM PAGE ORIGIN     */
         LR    P1,CURADDR                                       02S0250
         N     P1,@CF00118                                      02S0250
*                 IF P1<ZZZLENP2 THEN/* INITIAL 2K OF 4K FRAME       */
*                                                               02S0251
         LA    @14,2048                                         02S0251
         CR    P1,@14                                           02S0251
         BNL   @RF00251                                         02S0251
*                   /*************************************************/
*                   /*                                               */
*                   /* INITIAL 2K OF 4K FRAME                        */
*                   /*                                               */
*                   /*************************************************/
*                                                               02S0252
*                   DO;             /* INITIAL 2K OF 4K FRAME        */
*                     ESBAKEY=HSDSK1;/* STORAGE KEY                  */
         MVC   ESBAKEY(1,ESBAPTR),HSDSK1(HSDPTR)                02S0253
*                     IF P1+AMTLEFT>ZZZLENP2 THEN/* 2 STORAGE KEYS   */
*                                                               02S0254
         LR    @03,P1                                           02S0254
         AL    @03,AMTLEFT                                      02S0254
         CR    @03,@14                                          02S0254
         BNH   @RF00254                                         02S0254
*                       /*********************************************/
*                       /*                                           */
*                       /* BOTH STORAGE KEYS FROM THIS FRAME APPLY   */
*                       /*                                           */
*                       /*********************************************/
*                                                               02S0255
*                       DO;         /* BOTH STORAGE KEYS APPLY       */
*                         ESBAKEY=ESBAKEY×/* STORAGE KEY=REFERENCE
*                                      VALUE+                        */
*                             (HSDSK2&KMU);/* REFERENCE, CHANGE, &
*                                      FETCH BITS FROM ALL 2K BLOCKS */
         MVC   @TS00001(1),HSDSK2(HSDPTR)                       02S0256
         NI    @TS00001,X'07'                                   02S0256
         OC    ESBAKEY(1,ESBAPTR),@TS00001                      02S0256
*                         IF(ESBAKEY&KMK)^=(HSDSK2&KMK) THEN    02S0257
         MVC   @TS00001(1),ESBAKEY(ESBAPTR)                     02S0257
         NI    @TS00001,X'F8'                                   02S0257
         MVC   @TS00001+1(1),HSDSK2(HSDPTR)                     02S0257
         NI    @TS00001+1,X'F8'                                 02S0257
         CLC   @TS00001(1),@TS00001+1                           02S0257
         BE    @RF00257                                         02S0257
*                           ESBAFS2='1'B;/* MULTIPLE STORAGE KEYS    */
         OI    ESBAFS2(ESBAPTR),B'01000000'                     02S0258
*                       END;        /* BOTH STORAGE KEYS APPLY       */
*                   END;            /* INITIAL 2K OF 4K FRAME        */
*                 ELSE              /* SECOND 2K OF 4K FRAME         */
*                   ESBAKEY=HSDSK2; /* STORAGE KEY                   */
         B     @RC00251                                         02S0261
@RF00251 MVC   ESBAKEY(1,ESBAPTR),HSDSK2(HSDPTR)                02S0261
*                 IF HSDSASI=HSDSASIR THEN/* ABSOLUTE STORAGE FRAME  */
*                                                               02S0262
@RC00251 ICM   @14,3,HSDSASI(HSDPTR)                            02S0262
         BNZ   @RF00262                                         02S0262
*                   /*************************************************/
*                   /*                                               */
*                   /* ABSOLUTE STORAGE FRAME                        */
*                   /*                                               */
*                   /*************************************************/
*                                                               02S0263
*                   DO;             /* ABSOLUTE STORAGE FRAME        */
*                     ESBAABS=HSDSP+P1;/* ->ABSOLUTE STORAGE         */
         LR    @14,P1                                           02S0264
         AL    @14,HSDSP(,HSDPTR)                               02S0264
         ST    @14,ESBAABS(,ESBAPTR)                            02S0264
*                     ESBAFSA='1'B; /* ABSOLUTE ADDRESS VALID        */
         OI    ESBAFSA(ESBAPTR),B'00010000'                     02S0265
*                   END;            /* ABSOLUTE STORAGE FRAME        */
*               END;                /* FIRST STORAGE RECORD          */
*             ELSE                  /* SECOND, THIRD, ... RECORD     */
*                                                               02S0268
*               /*****************************************************/
*               /*                                                   */
*               /* SECOND, THIRD, ... STORAGE RECORD                 */
*               /*                                                   */
*               /*****************************************************/
*                                                               02S0268
*               DO;                 /* SECOND, THIRD, ... RECORD     */
         B     @RC00248                                         02S0268
@RF00248 DS    0H                                               02S0269
*                 IF(ESBAKEY&KMK)^=(HSDSK1&KMK) THEN/* MULTIPLE KEYS */
         MVC   @TS00001(1),ESBAKEY(ESBAPTR)                     02S0269
         NI    @TS00001,X'F8'                                   02S0269
         MVC   @TS00001+1(1),HSDSK1(HSDPTR)                     02S0269
         NI    @TS00001+1,X'F8'                                 02S0269
         CLC   @TS00001(1),@TS00001+1                           02S0269
         BE    @RF00269                                         02S0269
*                   ESBAFS2='1'B;   /* MULTIPLE STORAGE KEYS         */
         OI    ESBAFS2(ESBAPTR),B'01000000'                     02S0270
*                 IF AMTLEFT>ZZZLENP2 THEN/* BOTH STORAGE KEYS APPLY */
*                                                               02S0271
@RF00269 CLC   AMTLEFT(4),@CF00094                              02S0271
         BNH   @RF00271                                         02S0271
*                   /*************************************************/
*                   /*                                               */
*                   /* BOTH STORAGE KEYS FROM THIS FRAME APPLY       */
*                   /*                                               */
*                   /*************************************************/
*                                                               02S0272
*                   DO;             /* BOTH STORAGE KEYS APPLY       */
*                     ESBAKEY=ESBAKEY×(HSDSK2&KMU);/* USAGE BITS     */
         MVC   @TS00001(1),HSDSK2(HSDPTR)                       02S0273
         NI    @TS00001,X'07'                                   02S0273
         OC    ESBAKEY(1,ESBAPTR),@TS00001                      02S0273
*                     IF(ESBAKEY&KMK)^=(HSDSK2&KMK) THEN        02S0274
         MVC   @TS00001(1),ESBAKEY(ESBAPTR)                     02S0274
         NI    @TS00001,X'F8'                                   02S0274
         MVC   @TS00001+1(1),HSDSK2(HSDPTR)                     02S0274
         NI    @TS00001+1,X'F8'                                 02S0274
         CLC   @TS00001(1),@TS00001+1                           02S0274
         BE    @RF00274                                         02S0274
*                       ESBAFS2='1'B;/* MULTIPLE STORAGE KEYS        */
         OI    ESBAFS2(ESBAPTR),B'01000000'                     02S0275
*                   END;            /* BOTH STORAGE KEYS APPLY       */
@RF00274 DS    0H                                               02S0277
*               END;                /* SECOND, THIRD, ... RECORD     */
@RF00271 DS    0H                                               02S0278
*             IF RAAURFP(1)='1'B THEN/* PREFIXED PAGE                */
@RC00248 TM    RAAURFP,B'01000000'                              02S0278
         BNO   @RF00278                                         02S0278
*               ESBAFSP='1'B;       /* PREFIXED PAGE                 */
         OI    ESBAFSP(ESBAPTR),B'00001000'                     02S0279
*             IF RAAURFR(1)='1'B THEN/* RECLAIMED PAGE               */
@RF00278 TM    RAAURFR,B'00100000'                              02S0280
         BNO   @RF00280                                         02S0280
*               ESBAFSR='1'B;       /* RECLAIMED PAGE                */
         OI    ESBAFSR(ESBAPTR),B'00000100'                     02S0281
*           END;                    /* NO SUMDUMP DATA               */
@RF00280 DS    0H                                               02S0283
*       END;                        /* SYSTEM/370 DUMP STORAGE       */
@RF00246 DS    0H                                               02S0284
*     IF ESBAFSC='0'B THEN          /* FIRST STORAGE RECORD          */
@RF00239 TM    ESBAFSC(ESBAPTR),B'10000000'                     01S0284
         BNZ   @RF00284                                         01S0284
*       ESBAFSC='1'B;               /* STORAGE INFORMATION COMPLETED */
         OI    ESBAFSC(ESBAPTR),B'10000000'                     01S0285
*     ELSE                          /* MULTIPLE RECORDS              */
*       ESBAFSX='1'B;               /* MULTIPLE RECORDS              */
         B     @RC00284                                         01S0286
@RF00284 OI    ESBAFSX(ESBAPTR),B'00000010'                     01S0286
*                                                               02S0287
*/********************************************************************/
*/*                                                                  */
*/* BLSRACCM--MOVE DATA INTO USER BUFFER                             */
*/*                                                                  */
*/********************************************************************/
*                                                               02S0287
*     OFFINBLK=CURADDR-RAAURIA(1);  /* UNINTERESTING BYTE COUNT      */
@RC00284 LR    @14,CURADDR                                      02S0287
         SL    @14,RAAURIA                                      02S0287
         ST    @14,OFFINBLK                                     02S0287
*     AMTOMOVE=MIN(AMTLEFT,RAAURLE(1)-OFFINBLK);/* STORAGE TO MOVE   */
         L     @05,RAAURLE                                      02S0288
         SLR   @05,@14                                          02S0288
         L     @04,AMTLEFT                                      02S0288
         CLR   @04,@05                                          02S0288
         BNH   *+6
         LR    @04,@05                                          02S0288
         ST    @04,AMTOMOVE                                     02S0288
*     RESPECIFY                     /* BEFORE MVCL                   */
*      (R0,                         /* ->USER BUFFER                 */
*       R1,                         /* STORAGE TO MOVE               */
*       RE) RESTRICTED;             /* ->INPUT BUFFER                */
*     R0=CURBUFAD;                  /* ->CURRENT BUFFER POSITION     */
         L     R0,CURBUFAD                                      02S0290
*     R1=AMTOMOVE;                  /* STORAGE TO MOVE               */
         LR    R1,@04                                           02S0291
*     RE=ADDR(HSD)+RAAUROF(1)+OFFINBLK;/* ->INPUT BUFFER             */
         L     @05,OFFINBLK                                     02S0292
         LR    RE,HSDPTR                                        02S0292
         AL    RE,RAAUROF                                       02S0292
         ALR   RE,@05                                           02S0292
*     RF=R1;                        /* STORAGE TO MOVE               */
         LR    RF,R1                                            02S0293
*     MVCL(R0,RE);                  /* FILL USER BUFFER              */
         MVCL  R0,RE                                            02S0294
*     CURBUFAD=R0;                  /* ->CURRENT BUFFER POSITION     */
         ST    R0,CURBUFAD                                      02S0295
*     RESPECIFY                     /* AFTER MVCL                    */
*      (R0,                         /* ->USER BUFFER+LENGTH MOVED    */
*       R1,                         /* 0                             */
*       RE) UNRESTRICTED;           /* ->INPUT BUFFER+LENGTH MOVED   */
*     AMTLEFT=AMTLEFT-AMTOMOVE;     /* REQUESTED STORAGE REMAINING   */
         L     @14,AMTOMOVE                                     02S0297
         L     @07,AMTLEFT                                      02S0297
         SLR   @07,@14                                          02S0297
         ST    @07,AMTLEFT                                      02S0297
*     CURADDR=CURADDR+AMTOMOVE;     /* ->CURRENT STORAGE POSITION    */
         ALR   CURADDR,@14                                      02S0298
*   END;                            /* ACCESS ALL STORAGE REQUESTED  */
@DE00177 ICM   @14,15,AMTLEFT                                   01S0299
         BP    @DL00177                                         01S0299
*EXIT:                              /* COMMON EXIT PATH              */
*   RETURN CODE(RETC);                                          01S0300
*                                                               01S0300
EXIT     L     @13,4(,@13)                                      01S0300
         L     @00,@SIZDATD                                     01S0300
         LR    @01,@11                                          01S0300
         BLSUFRES R,LV=(0),A=(1)
         LR    @15,@08                                          01S0300
         L     @14,12(,@13)                                     01S0300
         LM    @00,@12,20(@13)                                  01S0300
         BR    @14                                              01S0300
*/*BLSRPEND--DEBUGGING MODULE                                        */
*/*BLSUPEND--MVS IPCS MODULE                                         */
*                                                               01S0301
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                    01S0301
*     I031F FIXED(31) BASED,                                    01S0301
*     I031P PTR(31) BASED,                                      01S0301
*     I015F FIXED(15) BASED,                                    01S0301
*     I015P PTR(15) BASED,                                      01S0301
*     I008P PTR(8) BASED,                                       01S0301
*     I001C CHAR(1) BASED;                                      01S0301
*   GENERATE NODEFS NOREFS DATA;                                01S0302
*   END BLSRACCQ                    /* BLRPEND(BLSRACCQ)             */
*                                                               01S0303
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (BLSRZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLSUZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLRFULL )                                       */
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */
*/*%INCLUDE SYSLIB  (IKJPSCB )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJUPT  )                                       */
*/*%INCLUDE SYSLIB  (BLSUSERV)                                       */
*/*%INCLUDE SYSLIB  (BLRSERV )                                       */
*/*%INCLUDE SYSLIB  (BLRSERVD)                                       */
*/*%INCLUDE SYSLIB  (BLSRSERV)                                       */
*/*%INCLUDE SYSLIB  (BLSRHSD )                                       */
*/*%INCLUDE SYSLIB  (IHADECB )                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSLIB  (BLSRACCR)                                       */
*/*%INCLUDE SYSLIB  (BLSRACCS)                                       */
*/*%INCLUDE SYSLIB  (BLSRACCM)                                       */
*                                                               01S0303
*       ;                                                       01S0303
@EL00001 L     @13,4(,@13)                                      01S0303
@EF00001 L     @00,@SIZDATD                                     01S0303
         LR    @01,@11                                          01S0303
         BLSUFRES R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                  01S0303
         BR    @14                                              01S0303
@DATA    DS    0H
@CH00048 DC    H'1'
@CH00056 DC    H'8'
@CH00091 DC    AL2(65530)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@AL00001 DS    2A
@TF00001 DS    F
@TF00002 DS    F
BLSRACCQ CSECT
         DS    0F
@CF00094 DC    F'2048'
@CF00118 DC    XL4'00000FFF'
@DATD    DSECT
         DS    0D
CURBUFAD DS    A
AMTLEFT  DS    F
AMTOMOVE DS    F
OFFINBLK DS    F
@TS00001 DS    CL2
         DS    CL2
ASAU     DS    CL16
         ORG   ASAU
ASAU0    DS    0C
ASAUT    DS    CL2
@NM00146 DS    BL2
ASAU1    DS    FL4
ASAU2    DS    FL4
@NM00147 DS    BL4
ASAU9    DS    0C
         ORG   ASAU+16
         DS    CL4
RAAU     DS    CL148
         ORG   RAAU
RAAURID  DS    CL2
@NM00160 DS    BL6
RAAURDX  DS    FL4
RAAUAS   DS    CL16
         ORG   RAAUAS
RAAUAS0  DS    0C
RAAUAST  DS    CL2
@NM00161 DS    BL2
RAAUAS1  DS    FL4
RAAUAS2  DS    FL4
@NM00162 DS    BL4
RAAUAS9  DS    0C
         ORG   RAAU+28
RAAUFAD  DS    AL4
RAAUELK  DS    0C
@NM00163 DS    BL16
RAAUDIM  DS    FL2
RAAUUSE  DS    FL2
RAAUR    DS    CL32
         ORG   RAAUR+0
RAAURIA  DS    AL4
RAAURLE  DS    FL4
RAAURNM  DS    FL2
RAAURF   DS    BL2
         ORG   RAAURF+0
RAAURFU  DS    BL1
RAAURFP  EQU   RAAURF+0
RAAURFR  EQU   RAAURF+0
@NM00164 EQU   RAAURF+0
         ORG   RAAUR+12
RAAURDA  DS    FL4
RAAUROF  DS    FL4
@NM00165 DS    BL12
         ORG   RAAU+148
RAAU999  DS    0C
         ORG   RAAU+148
BLSRACCQ CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSRACCQ CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSRACCQ+19)/20+7)/8)CL8'BLSRACCQ'
@DATD    DSECT
         DS    0H
@DATD    DSECT
BLSRACCQ CSECT
*--------------SDATA AND ADATA MUST HAVE THE SAME FORMAT--------------*
SDATA    DS    0D                      STATIC STORAGE STRUCTURE
SREAD    READ  SDECB,DI,,,,,,,MF=L
SDATAEND DS    0D                      END OF SDATA STRUCTURE
@DATD    DSECT
ADATA    DS    0D                      AUTOMATIC STORAGE STRUCTURE
AREAD    READ  ADECB,DI,,,,,,,MF=L
ADATAEND DS    0D                      END OF ADATA STRUCTURE
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSRACCQ CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RETC     EQU   @08
BUFSTEAL EQU   @04
BUFNUM   EQU   @02
P1       EQU   @02
CURADDR  EQU   @10
ESBAPTR  EQU   @06
DECBPT   EQU   @07
HSDPTR   EQU   @07
R9       EQU   @09
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
RB       EQU   @11
RD       EQU   @13
RE       EQU   @14
RF       EQU   @15
RA       EQU   @10
RC       EQU   @12
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
ZZ1      EQU   0
ZZ1ATTN  EQU   ZZ1+360
ZZ1EVE   EQU   ZZ1ATTN+4
ZZ1EVEP  EQU   ZZ1EVE
ZZ1F     EQU   ZZ1+368
ZZ1N     EQU   ZZ1+1116
ZZ2      EQU   0
ZZ2AMD   EQU   ZZ2
@NM00025 EQU   ZZ2AMD+7
ZZ2PRT   EQU   ZZ2+138
ZZ2PRTT  EQU   ZZ2PRT+4
ZZ2PRTT1 EQU   ZZ2PRTT+1
ZZ2A     EQU   ZZ2+272
ZZ2AF    EQU   ZZ2A+16
ZZ2APID  EQU   ZZ2A+64
ZZ2AD    EQU   ZZ2A+74
ZZ2ADD   EQU   ZZ2AD
ZZ2ADDT  EQU   ZZ2ADD+2
ZZ2ADM   EQU   ZZ2AD+46
ZZ2ADMT  EQU   ZZ2ADM+2
ZZ2ADP   EQU   ZZ2AD+56
ZZ2ADPT  EQU   ZZ2ADP+2
ZZ2AZZ6P EQU   ZZ2A+140
ZZ2AQAS  EQU   ZZ2A+144
ZZ2AQD   EQU   ZZ2A+160
ZZ2AQDT  EQU   ZZ2AQD+10
ZZ2AQDF  EQU   ZZ2AQD+52
ZZ2STG   EQU   ZZ2+960
ZZ2ALLOP EQU   ZZ2+992
ZZ2FREEP EQU   ZZ2+996
ZZ2FF19P EQU   ZZ2+1000
ZZ2FRE1P EQU   ZZ2+1004
ZZ2FF18P EQU   ZZ2+1008
ZZ2DYNAP EQU   ZZ2+1012
ZZ2ZZ2CP EQU   ZZ2+1016
ZZ2ZZ2DP EQU   ZZ2+1020
ZZ2STAIP EQU   ZZ2+1024
ZZ2FF02P EQU   ZZ2+1028
ZZ2GETLP EQU   ZZ2+1032
ZZ2PARSP EQU   ZZ2+1036
ZZ2PTGTP EQU   ZZ2+1040
ZZ2PUTLP EQU   ZZ2+1044
ZZ2SCANP EQU   ZZ2+1048
ZZ2STCKP EQU   ZZ2+1052
ZZ2TRMOP EQU   ZZ2+1064
ZZ2TRMVP EQU   ZZ2+1068
ZZ2PUTNP EQU   ZZ2+1084
ZZ2TRMNP EQU   ZZ2+1088
ZZ2ZZ1P  EQU   ZZ2+1264
ZZ2BVTP  EQU   ZZ2+1280
ZZ2RVTP  EQU   ZZ2+1284
ZZ2CPPL  EQU   ZZ2+1292
ZZ2CPPLC EQU   ZZ2CPPL
ZZ2ITR   EQU   ZZ2+2840
ZZ2ITRE  EQU   ZZ2ITR+16
ZZ2ITSE  EQU   ZZ2+2864
ZZ2ES    EQU   ZZ2+2872
ZZ2AMDX  EQU   ZZ2+7160
ZZ2AXO   EQU   ZZ2+7934
ZZ2AXOT  EQU   ZZ2AXO+2
CMD      EQU   0
CMDT     EQU   CMD+4
PSCB     EQU   0
PSCBATR1 EQU   PSCB+16
ECT      EQU   0
ECTSWS   EQU   ECT+28
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
UPT      EQU   0
UPTSWS   EQU   UPT+12
SA       EQU   0
SA1      EQU   SA
SAR      EQU   SA+12
SAR1     EQU   SAR+12
BVT      EQU   0
BVTPUTLP EQU   BVT+4
BVTPUTOP EQU   BVT+12
BVTPUTTP EQU   BVT+16
BVTPUTVP EQU   BVT+20
BVTPUTAP EQU   BVT+24
BVTPRTTP EQU   BVT+28
BVTPRTAP EQU   BVT+32
BVTPUTDP EQU   BVT+36
BVTMONP  EQU   BVT+40
BVTMON2P EQU   BVT+44
BVTVSARP EQU   BVT+48
BVTVSENP EQU   BVT+64
BVTVSERP EQU   BVT+68
BVTVSGEP EQU   BVT+72
BVTVSGUP EQU   BVT+76
BVTVSPOP EQU   BVT+80
BVTVSPUP EQU   BVT+84
BVTMPKNP EQU   BVT+104
BVTMONLP EQU   BVT+108
BVTPUTCP EQU   BVT+132
BVTMPK1P EQU   BVT+136
BVTZZ2RP EQU   BVT+140
BVTPGMRP EQU   BVT+144
BVTMONAP EQU   BVT+148
BVTBLDDP EQU   BVT+152
BVTBLDLP EQU   BVT+156
BVTPGMCP EQU   BVT+160
BVTPGMDP EQU   BVT+164
BVTPGMLP EQU   BVT+168
BVTMONCP EQU   BVT+180
BVTMONDP EQU   BVT+184
BVTMONTP EQU   BVT+188
BVTPARIP EQU   BVT+192
BVTPARUP EQU   BVT+196
BVTPRTNP EQU   BVT+204
BVTVSCRP EQU   BVT+208
BVTVSMRP EQU   BVT+212
BVTMONXP EQU   BVT+216
BVTTRMAP EQU   BVT+228
ZZ6      EQU   0
ZZ6D     EQU   ZZ6+128
ZZ6DD    EQU   ZZ6D+8
ZZ6DDT   EQU   ZZ6DD+4
ZZ6DQA   EQU   ZZ6D+68
ZZ6DF    EQU   ZZ6D+92
ZZ6DFDU  EQU   ZZ6DF
ZZ6DDA1  EQU   ZZ6D+100
ZZ6BUFN  EQU   ZZ6+516
ZZ6BUFL  EQU   ZZ6+518
ZZ6BUFB  EQU   ZZ6+520
ZZ6BUFP  EQU   ZZ6+532
ZZ6BUFI  EQU   ZZ6+536
ZZ6B     EQU   ZZ6+768
ZZ6BDA   EQU   ZZ6B
ZZ6BFL   EQU   ZZ6B+4
ZZ6BRC   EQU   ZZ6B+8
ZZ6BRB   EQU   ZZ6B+12
BLSRESCK EQU   0
BLSRRAGE EQU   0
RVT      EQU   0
RVTADDRP EQU   RVT
RVTT01P  EQU   RVT+4
RVTTAP   EQU   RVT+8
RVTTBP   EQU   RVT+12
RVTTCP   EQU   RVT+16
RVTTFP   EQU   RVT+24
RVTTYP   EQU   RVT+40
RVTT02P  EQU   RVT+48
RVTT03P  EQU   RVT+52
RVTT04P  EQU   RVT+56
RVTACCLP EQU   RVT+60
RVTRACCP EQU   RVT+64
RVTTLP   EQU   RVT+68
RVTTMP   EQU   RVT+72
RVTTUP   EQU   RVT+80
RVTESGEP EQU   RVT+84
RVTESGUP EQU   RVT+88
RVTESARP EQU   RVT+92
RVTRAARP EQU   RVT+96
RVTRAGEP EQU   RVT+100
RVTADDPP EQU   RVT+104
RVTSAGUP EQU   RVT+124
RVTSAGEP EQU   RVT+128
RVTESCKP EQU   RVT+132
RVTMSGAP EQU   RVT+136
RVTMSGDP EQU   RVT+140
RVTADDTP EQU   RVT+160
RVTADDUP EQU   RVT+164
RVTADD1P EQU   RVT+176
RVTADD2P EQU   RVT+180
RVTRSAGP EQU   RVT+184
RVTMSGBP EQU   RVT+188
RVTADDSP EQU   RVT+192
RVTADD3P EQU   RVT+196
RVTT05P  EQU   RVT+200
RVTPADSP EQU   RVT+204
RVTTRP   EQU   RVT+228
RVTADD4P EQU   RVT+232
RVTSAPCP EQU   RVT+236
RVTSAARP EQU   RVT+240
RVTSAGNP EQU   RVT+244
RVTT06P  EQU   RVT+248
RVTSAGCP EQU   RVT+252
RVTSAGQP EQU   RVT+256
RVTESGCP EQU   RVT+260
RVTESGQP EQU   RVT+264
RVTDUCKP EQU   RVT+276
RVTDUCCP EQU   RVT+280
HSD      EQU   0
HSDTYPE  EQU   HSD
DECB     EQU   0
DECBPTR  EQU   DECB+4
DECTYPE  EQU   DECBPTR
DECTYPE1 EQU   DECTYPE
DECTYPE2 EQU   DECTYPE+1
DECNEXT  EQU   DECB+20
DECBS01  EQU   0
DECBECB  EQU   DECBS01
DECBRB   EQU   DECBECB
DECBECBF EQU   DECBRB
DECBTYP1 EQU   DECBS01+4
DECBTYP2 EQU   DECBS01+5
DECBEXC1 EQU   DECBS01+24
DECBEXC2 EQU   DECBS01+25
DECBS02  EQU   0
@NM00110 EQU   DECBS02
DECCC2   EQU   @NM00110+1
DECCC3   EQU   @NM00110+2
@NM00112 EQU   DECBS02+4
@NM00113 EQU   @NM00112
@NM00114 EQU   @NM00112+1
DECTYPRU EQU   @NM00114
DECNA    EQU   DECBS02+28
DECBS03  EQU   0
DECCPOL  EQU   DECBS03+20
@NM00122 EQU   DECBS03+36
DECBS04  EQU   0
@NM00125 EQU   DECBS04+4
@NM00126 EQU   @NM00125
@NM00129 EQU   DECBS04+8
DECBUFCT EQU   @NM00129
DECONLTT EQU   DECBUFCT
DECENTRY EQU   DECBS04+20
DECFLAGS EQU   DECBS04+24
DECWACK  EQU   DECFLAGS
DECREVRS EQU   DECFLAGS
DECERRST EQU   DECBS04+29
DECPOLPT EQU   DECBS04+36
IHADCB   EQU   0
IHADCS00 EQU   0
DCBFDAD  EQU   IHADCS00+5
IHADCS01 EQU   0
DCBDVTBL EQU   IHADCS01
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBIBPCT EQU   DCBIFLG
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFPCT EQU   DCBIFLGS
IHADCS26 EQU   0
DCBWRITE EQU   IHADCS26
DCBREAD  EQU   DCBWRITE
DCBWRITA EQU   DCBREAD+1
IHADCS30 EQU   0
DCBCHECK EQU   IHADCS30
DCBOPTCD EQU   DCBCHECK
DCBXARG  EQU   IHADCS30+32
DCBDRDX  EQU   IHADCS30+36
ESBA     EQU   0
ESBAAS   EQU   ESBA+60
ESBALAD  EQU   ESBA+76
ESBAD    EQU   ESBA+80
ESBADOF  EQU   ESBAD
ESBADLE  EQU   ESBAD+4
ESBADT   EQU   ESBAD+10
ESBADIM  EQU   ESBAD+44
ESBADF   EQU   ESBAD+52
ESBAMAD  EQU   ESBA+140
ESBAKEY  EQU   ESBA+160
ESBAF    EQU   ESBA+161
ESBAFS   EQU   ESBAF
ESBAFSC  EQU   ESBAFS
ESBAFS2  EQU   ESBAFS
ESBAFSM  EQU   ESBAFS
ESBAFSA  EQU   ESBAFS
ESBAFSP  EQU   ESBAFS
ESBAFSR  EQU   ESBAFS
ESBAFSX  EQU   ESBAFS
ESBAFSS  EQU   ESBAFS
ESBAFC   EQU   ESBAF+1
ESBAABS  EQU   ESBA+164
ESBAR    EQU   ESBA+180
ESBART   EQU   ESBAR+2
BLSRACC  EQU   0
BLSRACCL EQU   0
BLSRADDP EQU   0
BLSRADDR EQU   0
BLSRADDS EQU   0
BLSRADDT EQU   0
BLSRADDU EQU   0
BLSRADD1 EQU   0
BLSRADD2 EQU   0
BLSRADD3 EQU   0
BLSRADD4 EQU   0
BLSRDUCC EQU   0
BLSRDUCK EQU   0
BLSRESAR EQU   0
BLSRESGC EQU   0
BLSRESGE EQU   0
BLSRESGQ EQU   0
BLSRESGU EQU   0
BLSRMSGA EQU   0
BLSRMSGB EQU   0
BLSRMSGD EQU   0
BLSRPADS EQU   0
BLSRRAAR EQU   0
BLSRSAAR EQU   0
BLSRSAG  EQU   0
BLSRSAGC EQU   0
BLSRSAGE EQU   0
BLSRSAGN EQU   0
BLSRSAGQ EQU   0
BLSRSAGU EQU   0
BLSRSAPC EQU   0
BLSTA    EQU   0
BLSTB    EQU   0
BLSTC    EQU   0
BLSTF    EQU   0
BLSTL    EQU   0
BLSTM    EQU   0
BLSTR    EQU   0
BLSTU    EQU   0
BLSTY    EQU   0
BLST01   EQU   0
BLST02   EQU   0
BLST03   EQU   0
BLST04   EQU   0
BLST05   EQU   0
BLST06   EQU   0
BLSUALLO EQU   0
BLSUBLDD EQU   0
BLSUBLDL EQU   0
BLSUDYNA EQU   0
BLSUFREE EQU   0
BLSUFRE1 EQU   0
BLSUMON  EQU   0
BLSUMONA EQU   0
BLSUMONC EQU   0
BLSUMOND EQU   0
BLSUMONL EQU   0
BLSUMONT EQU   0
BLSUMONX EQU   0
BLSUMON2 EQU   0
BLSUMPKN EQU   0
BLSUMPK1 EQU   0
BLSUPARI EQU   0
BLSUPARU EQU   0
BLSUPGMC EQU   0
BLSUPGMD EQU   0
BLSUPGML EQU   0
BLSUPGMR EQU   0
BLSUPRTA EQU   0
BLSUPRTN EQU   0
BLSUPRTT EQU   0
BLSUPUTA EQU   0
BLSUPUTC EQU   0
BLSUPUTD EQU   0
BLSUPUTL EQU   0
BLSUPUTN EQU   0
BLSUPUTO EQU   0
BLSUPUTT EQU   0
BLSUPUTV EQU   0
BLSUSTAI EQU   0
BLSUTRMA EQU   0
BLSUTRMN EQU   0
BLSUTRMO EQU   0
BLSUTRMV EQU   0
BLSUVSAR EQU   0
BLSUVSCR EQU   0
BLSUVSEN EQU   0
BLSUVSER EQU   0
BLSUVSGE EQU   0
BLSUVSGU EQU   0
BLSUVSMR EQU   0
BLSUVSPO EQU   0
BLSUVSPU EQU   0
BLSUZZ2C EQU   0
BLSUZZ2D EQU   0
BLSUZZ2R EQU   0
IKJEFF02 EQU   0
IKJEFF18 EQU   0
IKJEFF19 EQU   0
IKJGETL  EQU   0
IKJPARS  EQU   0
IKJPTGT  EQU   0
IKJPUTL  EQU   0
IKJSCAN  EQU   0
IKJSTCK  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
PZ2      EQU   0
ESPA     EQU   0
ESPAAS   EQU   ESPA+60
ESPAD    EQU   ESPA+80
ESPADT   EQU   ESPAD+10
ESPADF   EQU   ESPAD+52
ESPAF    EQU   ESPA+161
ESPAFS   EQU   ESPAF
ESPAFC   EQU   ESPAF+1
ESPAR    EQU   ESPA+180
ESPART   EQU   ESPAR+2
BUFFER   EQU   0
CPPL     EQU   ZZ2CPPL
CPPLUPT  EQU   CPPL+4
CPPLPSCB EQU   CPPL+8
CPPLECT  EQU   CPPL+12
HSDH     EQU   HSD
HSDHV    EQU   HSD
HSDHA    EQU   HSD
HSDC     EQU   HSD
HSDCSF   EQU   HSDC+2
HSDCPSA  EQU   HSDC+8
HSDS     EQU   HSD
HSDSK1   EQU   HSDS
HSDSK2   EQU   HSDS+1
HSDSASI  EQU   HSDS+2
HSDSP    EQU   HSDS+4
DECBS05  EQU   DECNEXT
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
DECBLFMT EQU   DECBS05+8
DECBLNNM EQU   DECBS05+4
DECBHDRA EQU   DECBS05
HSDSC    EQU   HSDS+8
@NM00109 EQU   HSDCPSA+552
HSDCASCO EQU   HSDCPSA+548
HSDCASCN EQU   HSDCPSA+544
HSDCTCBO EQU   HSDCPSA+540
HSDCTCBN EQU   HSDCPSA+536
HSDCLCCR EQU   HSDCPSA+532
HSDCLCCV EQU   HSDCPSA+528
HSDCPCCR EQU   HSDCPSA+524
HSDCPCCV EQU   HSDCPSA+520
HSDCLADD EQU   HSDCPSA+518
HSDCPADD EQU   HSDCPSA+516
HSDCPSID EQU   HSDCPSA+512
HSDCTLR  EQU   HSDCPSA+448
HSDCGPR  EQU   HSDCPSA+384
HSDCFPR  EQU   HSDCPSA+352
HSDCADDR EQU   HSDCPSA+350
@NM00108 EQU   HSDCPSA+268
HSDCPREF EQU   HSDCPSA+264
HSDCLPSW EQU   HSDCPSA+256
@NM00107 EQU   HSDCPSA
HSDCSCPU EQU   HSDC+6
@NM00106 EQU   HSDC+4
@NM00105 EQU   HSDCSF
HSDCSFR  EQU   HSDCSF
HSDCSFI  EQU   HSDCSF
HSDCSFU  EQU   HSDCSF
HSDCCLA  EQU   HSDC+1
HSDCTYPE EQU   HSDC
@NM00104 EQU   HSDHA+132
HSDHACAW EQU   HSDHA+128
HSDHACSW EQU   HSDHA+120
@NM00103 EQU   HSDHA+20
@NM00102 EQU   HSDHA+12
@NM00101 EQU   HSDHA+4
@NM00100 EQU   HSDHA+2
@NM00099 EQU   HSDHA+1
@NM00098 EQU   HSDHA
@NM00097 EQU   HSDHV+292
HSDHVCVT EQU   HSDHV+288
HSDHVPSW EQU   HSDHV+280
HSDHVCR  EQU   HSDHV+216
HSDHVGPR EQU   HSDHV+152
HSDHVFPR EQU   HSDHV+120
@NM00096 EQU   HSDHV+20
@NM00095 EQU   HSDHV+12
@NM00094 EQU   HSDHV+4
@NM00093 EQU   HSDHV+2
@NM00092 EQU   HSDHV+1
@NM00091 EQU   HSDHV
@NM00090 EQU   HSDH+120
HSDHTITL EQU   HSDH+20
HSDHTOD  EQU   HSDH+12
HSDHPROG EQU   HSDH+4
HSDHASI  EQU   HSDH+2
HSDHCLA  EQU   HSDH+1
HSDHTYPE EQU   HSDH
CPPLCBUF EQU   CPPL
ESPA999  EQU   ESPA+694
ESPART1  EQU   ESPART
ESPARL   EQU   ESPAR
@NM00012 EQU   ESPA+168
ESPAABS  EQU   ESPA+164
@NM00011 EQU   ESPAF+2
@NM00010 EQU   ESPAFC
ESPAFCD  EQU   ESPAFC
ESPAFSS  EQU   ESPAFS
ESPAFSX  EQU   ESPAFS
ESPAFSR  EQU   ESPAFS
ESPAFSP  EQU   ESPAFS
ESPAFSA  EQU   ESPAFS
ESPAFSM  EQU   ESPAFS
ESPAFS2  EQU   ESPAFS
ESPAFSC  EQU   ESPAFS
ESPAKEY  EQU   ESPA+160
@NM00009 EQU   ESPA+144
ESPAMAD  EQU   ESPA+140
ESPAD99  EQU   ESPAD+60
@NM00008 EQU   ESPAD+56
@NM00007 EQU   ESPADF
ESPADFA  EQU   ESPADF
ESPADIL  EQU   ESPAD+48
ESPADIM  EQU   ESPAD+44
ESPADT9  EQU   ESPADT+34
ESPADTE  EQU   ESPADT+33
ESPADTD  EQU   ESPADT+2
@NM00006 EQU   ESPADT+1
ESPADTY  EQU   ESPADT
ESPADT0  EQU   ESPADT
ESPADLB  EQU   ESPAD+9
ESPADOB  EQU   ESPAD+8
ESPADLE  EQU   ESPAD+4
ESPADOF  EQU   ESPAD
ESPAD00  EQU   ESPAD
ESPALAD  EQU   ESPA+76
ESPAAS9  EQU   ESPAAS+16
@NM00005 EQU   ESPAAS+12
ESPAAS2  EQU   ESPAAS+8
ESPAAS1  EQU   ESPAAS+4
@NM00004 EQU   ESPAAS+2
ESPAAST  EQU   ESPAAS
ESPAAS0  EQU   ESPAAS
ESPARV1  EQU   ESPA+59
ESPAELK  EQU   ESPA+59
ESPASYM  EQU   ESPA+28
ESPARDX  EQU   ESPA+24
@NM00003 EQU   ESPA+16
@NM00002 EQU   ESPA+8
@NM00001 EQU   ESPA+2
ESPARID  EQU   ESPA
ESBA999  EQU   ESBA+694
ESBART1  EQU   ESBART
ESBARL   EQU   ESBAR
@NM00159 EQU   ESBA+168
@NM00158 EQU   ESBAF+2
@NM00157 EQU   ESBAFC
ESBAFCD  EQU   ESBAFC
@NM00156 EQU   ESBA+144
ESBAD99  EQU   ESBAD+60
@NM00155 EQU   ESBAD+56
@NM00154 EQU   ESBADF
ESBADFA  EQU   ESBADF
ESBADIL  EQU   ESBAD+48
ESBADT9  EQU   ESBADT+34
ESBADTE  EQU   ESBADT+33
ESBADTD  EQU   ESBADT+2
@NM00153 EQU   ESBADT+1
ESBADTY  EQU   ESBADT
ESBADT0  EQU   ESBADT
ESBADLB  EQU   ESBAD+9
ESBADOB  EQU   ESBAD+8
ESBAD00  EQU   ESBAD
ESBAAS9  EQU   ESBAAS+16
@NM00152 EQU   ESBAAS+12
ESBAAS2  EQU   ESBAAS+8
ESBAAS1  EQU   ESBAAS+4
@NM00151 EQU   ESBAAS+2
ESBAAST  EQU   ESBAAS
ESBAAS0  EQU   ESBAAS
ESBARV1  EQU   ESBA+59
ESBAELK  EQU   ESBA+59
ESBASYM  EQU   ESBA+28
ESBARDX  EQU   ESBA+24
@NM00150 EQU   ESBA+16
@NM00149 EQU   ESBA+8
@NM00148 EQU   ESBA+2
ESBARID  EQU   ESBA
DCBDYNB  EQU   IHADCS30+48
DCBDFBK  EQU   IHADCS30+44
DCBDFOR  EQU   IHADCS30+40
DCBDRDXA EQU   DCBDRDX+1
DCBMVXNO EQU   DCBDRDX
DCBXARGA EQU   DCBXARG+1
DCBXCNT  EQU   DCBXARG
DCBLIMCT EQU   IHADCS30+29
@NM00145 EQU   IHADCS30+28
DCBUQND  EQU   IHADCS30+24
DCBIOBUQ EQU   IHADCS30+20
DCBSQND  EQU   IHADCS30+16
DCBIOBSQ EQU   IHADCS30+12
DCBBLKSI EQU   IHADCS30+10
@NM00144 EQU   IHADCS30+8
DCBSYNAD EQU   IHADCS30+4
DCBCHCKA EQU   DCBCHECK+1
DCBOPTRB EQU   DCBOPTCD
DCBOPTRE EQU   DCBOPTCD
DCBOPTDB EQU   DCBOPTCD
DCBOPTA  EQU   DCBOPTCD
DCBOPTF  EQU   DCBOPTCD
DCBOPTE  EQU   DCBOPTCD
DCBOPTTO EQU   DCBOPTCD
DCBOPTW  EQU   DCBOPTCD
DCBREADA EQU   DCBWRITA
@NM00143 EQU   DCBREAD
DCBDEBA  EQU   DCBDEBAD+1
@NM00142 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBCH12  EQU   DCBIFPCT
DCBCH9   EQU   DCBIFPCT
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00141 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBICH12 EQU   DCBIBPCT
DCBICH9  EQU   DCBIBPCT
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBRECL  EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00140 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00139 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00138 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00137 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
@NM00136 EQU   DCBDSRG1
@NM00135 EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBKEYLE EQU   DCBRELB
DCBTRBAL EQU   IHADCS01+6
@NM00134 EQU   IHADCS01+5
@NM00133 EQU   IHADCS01+4
DCBDVTBA EQU   DCBDVTBL+1
@NM00132 EQU   DCBDVTBL
DCBKEYCN EQU   IHADCS00+4
DCBRELAD EQU   IHADCS00
@NM00131 EQU   IHADCB
DECWAREA EQU   DECBS04+44
DECWLNG  EQU   DECBS04+42
DECRSV56 EQU   DECBS04+40
DECPOLPA EQU   DECPOLPT+1
DECNDXPL EQU   DECPOLPT
DECADRPT EQU   DECBS04+32
DECCSWST EQU   DECBS04+30
DECRSV55 EQU   DECERRST
DECRSV54 EQU   DECERRST
DECRSV53 EQU   DECERRST
DECDSABL EQU   DECERRST
DECDIAGN EQU   DECERRST
DECERPER EQU   DECERRST
DECUNDEF EQU   DECERRST
DECSIO3  EQU   DECERRST
DECTPCOD EQU   DECBS04+28
DECRESPN EQU   DECBS04+26
DECRLN   EQU   DECBS04+25
DECSTXNQ EQU   DECFLAGS
DECSSMSG EQU   DECREVRS
DECNEGRP EQU   DECFLAGS
DECNOBUF EQU   DECFLAGS
DECBADID EQU   DECFLAGS
DECALTAC EQU   DECFLAGS
DECDIFAC EQU   DECWACK
DECERRMS EQU   DECWACK
DECENTRA EQU   DECENTRY+1
DECCMCOD EQU   DECENTRY
DECCOUNT EQU   DECBS04+18
DECSENS1 EQU   DECBS04+17
DECSENS0 EQU   DECBS04+16
@NM00130 EQU   DECBS04+12
DECDCBAA EQU   @NM00129+1
DECRSV52 EQU   DECONLTT
DECRSV51 EQU   DECONLTT
DECRSV50 EQU   DECONLTT
DECRSV49 EQU   DECONLTT
DECRSV48 EQU   DECONLTT
DECRSV47 EQU   DECONLTT
DECRCVMS EQU   DECONLTT
DECONLTS EQU   DECONLTT
@NM00128 EQU   DECBS04+6
@NM00127 EQU   @NM00125+1
DECSLNTH EQU   @NM00126
DECSAREA EQU   @NM00126
DECSTRME EQU   @NM00126
DECRSV46 EQU   @NM00126
DECRSV45 EQU   @NM00126
DECRSV44 EQU   @NM00126
DECRSV43 EQU   @NM00126
DECRDAPL EQU   @NM00126
@NM00124 EQU   DECBS04
@NM00123 EQU   @NM00122+1
DECRSV42 EQU   @NM00122
DECADRCH EQU   DECBS03+32
DECRSV41 EQU   DECBS03+28
DECRSV40 EQU   DECBS03+26
DECUCBDX EQU   DECBS03+25
DECRSV39 EQU   DECBS03+24
DECCPOLA EQU   DECCPOL+1
DECNMMSG EQU   DECCPOL
DECRSV38 EQU   DECBS03+16
@NM00121 EQU   DECBS03+12
@NM00120 EQU   DECBS03+8
@NM00119 EQU   DECBS03+6
DECOPCOD EQU   DECBS03+5
DECRSV37 EQU   DECBS03+4
LINEDECB EQU   DECBS03
DECNAA   EQU   DECNA+1
DECRSV36 EQU   DECNA
DECRECPT EQU   DECBS02+24
DECKYADR EQU   DECBS02+20
@NM00118 EQU   DECBS02+16
@NM00117 EQU   DECBS02+12
@NM00116 EQU   DECBS02+8
@NM00115 EQU   DECBS02+6
DECRSV35 EQU   @NM00114
DECWRADD EQU   @NM00114
DECSRKEY EQU   @NM00114
DECOPRD  EQU   @NM00114
DECTYPR  EQU   DECTYPRU
DECTYPU  EQU   DECTYPRU
DECBKLNS EQU   @NM00114
DECKEYS  EQU   @NM00114
DECRELBA EQU   @NM00113
DECRDEX  EQU   @NM00113
DECDYNBF EQU   @NM00113
DECACTAD EQU   @NM00113
DECFDBCK EQU   @NM00113
DECEXSRC EQU   @NM00113
DECOFLOW EQU   @NM00113
DECVERFY EQU   @NM00113
DECRSV34 EQU   @NM00110+3
DECCCKFF EQU   DECCC3
DECCCOPT EQU   DECCC3
DECCCSDK EQU   DECCC3
DECCCWDI EQU   DECCC3
DECCCNBK EQU   DECCC3
DECCCEXS EQU   DECCC3
DECCCWRI EQU   DECCC3
DECRSV33 EQU   DECCC3
DECCCREX EQU   DECCC2
DECCCUER EQU   DECCC2
DECCCEOD EQU   DECCC2
DECCCERR EQU   DECCC2
DECCCINV EQU   DECCC2
DECCCNSP EQU   DECCC2
DECCCRLC EQU   DECCC2
DECCCRNF EQU   DECCC2
@NM00111 EQU   @NM00110
DECEXRKU EQU   DECBEXC2
DECEXASR EQU   DECBEXC2
DECRSV32 EQU   DECBEXC2
DECRSV31 EQU   DECBEXC2
DECRSV30 EQU   DECBEXC2
DECRSV29 EQU   DECBEXC2
DECRSV28 EQU   DECBEXC2
DECRSV27 EQU   DECBEXC2
DECEXDUP EQU   DECBEXC1
DECEXOFL EQU   DECBEXC1
DECEXUBK EQU   DECBEXC1
DECEXERR EQU   DECBEXC1
DECEXINV EQU   DECBEXC1
DECEXNSP EQU   DECBEXC1
DECEXRLC EQU   DECBEXC1
DECEXRNF EQU   DECBEXC1
DECBKEY  EQU   DECBS01+20
DECBLOGR EQU   DECBS01+16
DECBAREA EQU   DECBS01+12
DECBDCBA EQU   DECBS01+8
DECBLGTH EQU   DECBS01+6
DECRSV26 EQU   DECBTYP2
DECRSV25 EQU   DECBTYP2
DECBWRKN EQU   DECBTYP2
DECBWRK  EQU   DECBTYP2
DECRSV24 EQU   DECBTYP2
DECBRDKU EQU   DECBTYP2
DECRSV23 EQU   DECBTYP2
DECBRDK  EQU   DECBTYP2
DECBARS  EQU   DECBTYP1
DECBLNS  EQU   DECBTYP1
DECRSV22 EQU   DECBTYP1
DECRSV21 EQU   DECBTYP1
DECRSV20 EQU   DECBTYP1
DECRSV19 EQU   DECBTYP1
DECRSV18 EQU   DECBTYP1
DECRSV17 EQU   DECBTYP1
DECBRBA  EQU   DECBRB+1
DECRSV16 EQU   DECBECBF
DECRSV15 EQU   DECBECBF
DECRSV14 EQU   DECBECBF
DECRSV13 EQU   DECBECBF
DECRSV12 EQU   DECBECBF
DECRSV11 EQU   DECBECBF
DECBPOST EQU   DECBECBF
DECBWAIT EQU   DECBECBF
DECNEXTA EQU   DECNEXT+1
DECRSV10 EQU   DECNEXT
DECIOBPT EQU   DECB+16
DECAREA  EQU   DECB+12
DECDCBAD EQU   DECB+8
DECLNGTH EQU   DECBPTR+2
DECWRSFR EQU   DECTYPE2
DECRSV09 EQU   DECTYPE2
DECWRSZ  EQU   DECTYPE2
DECRSV08 EQU   DECTYPE2
DECWRSD  EQU   DECTYPE2
DECWRSF  EQU   DECTYPE2
DECRDSB  EQU   DECTYPE2
DECRDSF  EQU   DECTYPE2
DECRSV07 EQU   DECTYPE1
DECRSV06 EQU   DECTYPE1
DECRSV05 EQU   DECTYPE1
DECRSV04 EQU   DECTYPE1
DECRSV03 EQU   DECTYPE1
DECRSV02 EQU   DECTYPE1
DECRSV01 EQU   DECTYPE1
DECLNS   EQU   DECTYPE1
DECSDECB EQU   DECB
@NM00089 EQU   HSD+2
HSDCLA   EQU   HSD+1
RVT99999 EQU   RVT+384
RVT0096P EQU   RVT+380
RVT0095P EQU   RVT+376
RVT0094P EQU   RVT+372
RVT0093P EQU   RVT+368
RVT0092P EQU   RVT+364
RVT0091P EQU   RVT+360
RVT0090P EQU   RVT+356
RVT0089P EQU   RVT+352
RVT0088P EQU   RVT+348
RVT0087P EQU   RVT+344
RVT0086P EQU   RVT+340
RVT0085P EQU   RVT+336
RVT0084P EQU   RVT+332
RVT0083P EQU   RVT+328
RVT0082P EQU   RVT+324
RVT0081P EQU   RVT+320
RVT0080P EQU   RVT+316
RVT0079P EQU   RVT+312
RVT0078P EQU   RVT+308
RVT0077P EQU   RVT+304
RVT0076P EQU   RVT+300
RVT0075P EQU   RVT+296
RVT0074P EQU   RVT+292
RVT0073P EQU   RVT+288
RVT0072P EQU   RVT+284
RVTDTUTP EQU   RVT+272
RVTDTMTP EQU   RVT+268
RVT0057P EQU   RVT+224
RVT0056P EQU   RVT+220
RVT0055P EQU   RVT+216
RVT0054P EQU   RVT+212
RVT0053P EQU   RVT+208
RVT0044P EQU   RVT+172
RVT0043P EQU   RVT+168
RVT0040P EQU   RVT+156
RVT0039P EQU   RVT+152
RVT0038P EQU   RVT+148
RVT0037P EQU   RVT+144
RVT0031P EQU   RVT+120
RVT0030P EQU   RVT+116
RVT0029P EQU   RVT+112
RVTACCQP EQU   RVT+108
RVT0020P EQU   RVT+76
RVT0012P EQU   RVT+44
RVT0010P EQU   RVT+36
RVT0009P EQU   RVT+32
RVT0008P EQU   RVT+28
RVT0006P EQU   RVT+20
ZZ69999  EQU   ZZ6+1792
@NM00088 EQU   ZZ6B+6
@NM00087 EQU   ZZ6+540
ZZ6FILE  EQU   ZZ6+524
ZZ6ZZ6P  EQU   ZZ6+512
@NM00086 EQU   ZZ6+256
ZZ6D999  EQU   ZZ6D+128
@NM00085 EQU   ZZ6D+116
ZZ6DCAP  EQU   ZZ6D+112
ZZ6DPRP  EQU   ZZ6D+108
ZZ6DDA2  EQU   ZZ6D+104
@NM00084 EQU   ZZ6DF
ZZ6DFSU  EQU   ZZ6DF
ZZ6DFST  EQU   ZZ6DF
ZZ6DFAB  EQU   ZZ6DF
ZZ6DFMP  EQU   ZZ6DF
ZZ6DFBS  EQU   ZZ6DF
ZZ6DQ2   EQU   ZZ6D+88
ZZ6DQ1   EQU   ZZ6D+84
ZZ6DQA9  EQU   ZZ6DQA+16
@NM00083 EQU   ZZ6DQA+12
ZZ6DQA2  EQU   ZZ6DQA+8
ZZ6DQA1  EQU   ZZ6DQA+4
@NM00082 EQU   ZZ6DQA+2
ZZ6DQAT  EQU   ZZ6DQA
ZZ6DQA0  EQU   ZZ6DQA
ZZ6DRDX  EQU   ZZ6D+64
ZZ6DELK  EQU   ZZ6D+64
ZZ6DMEM  EQU   ZZ6D+56
ZZ6DDT1  EQU   ZZ6DDT
ZZ6DDO   EQU   ZZ6DD+2
ZZ6DDL   EQU   ZZ6DD
@NM00081 EQU   ZZ6D+2
ZZ6DRID  EQU   ZZ6D
ZZ6RDCB  EQU   ZZ6
ZZ60000  EQU   ZZ6
BVT99999 EQU   BVT+256
BVT0064P EQU   BVT+252
BVT0063P EQU   BVT+248
BVT0062P EQU   BVT+244
BVT0061P EQU   BVT+240
BVT0060P EQU   BVT+236
BVT0059P EQU   BVT+232
BVT0057P EQU   BVT+224
BVT0056P EQU   BVT+220
BVTSTBLP EQU   BVT+200
BVT0045P EQU   BVT+176
BVT0044P EQU   BVT+172
BVT0033P EQU   BVT+128
BVT0032P EQU   BVT+124
BVT0031P EQU   BVT+120
BVT0030P EQU   BVT+116
BVT0029P EQU   BVT+112
BVT0026P EQU   BVT+100
BVT0025P EQU   BVT+96
BVT0024P EQU   BVT+92
BVT0023P EQU   BVT+88
BVT0016P EQU   BVT+60
BVT0015P EQU   BVT+56
BVT0014P EQU   BVT+52
BVT0003P EQU   BVT+8
BVT0001P EQU   BVT
SA99     EQU   SA+72
SARC     EQU   SAR+56
SARB     EQU   SAR+52
SARA     EQU   SAR+48
SAR9     EQU   SAR+44
SAR8     EQU   SAR+40
SAR7     EQU   SAR+36
SAR6     EQU   SAR+32
SAR5     EQU   SAR+28
SAR4     EQU   SAR+24
SAR3     EQU   SAR+20
SAR2     EQU   SAR+16
SAR0     EQU   SAR+8
SARF     EQU   SAR+4
SARE     EQU   SAR
SAFWD    EQU   SA+8
SABAK    EQU   SA+4
SA1L     EQU   SA1+1
SA1P     EQU   SA1
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00080 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00079 EQU   UPT
@NM00078 EQU   ECT+52
@NM00077 EQU   ECT+48
@NM00076 EQU   ECT+44
@NM00075 EQU   ECTSWS2+1
@NM00074 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00073 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00072 EQU   PSCB+36
@NM00071 EQU   PSCB+32
@NM00070 EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00069 EQU   PSCBATR1
@NM00068 EQU   PSCBATR1
@NM00067 EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
PSCBUSRL EQU   PSCB+7
PSCBUSER EQU   PSCB
CMDT1    EQU   CMDT
CMDO     EQU   CMD+2
CMDL     EQU   CMD
ZZ299999 EQU   ZZ2+8192
ZZ2AXOT1 EQU   ZZ2AXOT
ZZ2AXOL  EQU   ZZ2AXO
@NM00066 EQU   ZZ2+7288
@NM00065 EQU   ZZ2AMDX+4
ZZ2AMDXC EQU   ZZ2AMDX
ZZ2HSD   EQU   ZZ2+3056
@NM00064 EQU   ZZ2ES
@NM00063 EQU   ZZ2+2868
ZZ2ITSEC EQU   ZZ2ITSE+1
@NM00062 EQU   ZZ2ITSE
ZZ2ITSEP EQU   ZZ2ITSE
ZZ2ITSEW EQU   ZZ2ITSE
@NM00061 EQU   ZZ2ITR+20
ZZ2ITREC EQU   ZZ2ITRE+1
@NM00060 EQU   ZZ2ITRE
ZZ2ITREP EQU   ZZ2ITRE
ZZ2ITREW EQU   ZZ2ITRE
@NM00059 EQU   ZZ2ITR+9
ZZ2ITRRC EQU   ZZ2ITR+8
ZZ2ITR2P EQU   ZZ2ITR+4
ZZ2ITRPP EQU   ZZ2ITR
@NM00058 EQU   ZZ2+1544
ZZ2PGM   EQU   ZZ2+1536
@NM00057 EQU   ZZ2+1526
ZZ2CW    EQU   ZZ2+1524
@NM00056 EQU   ZZ2+1504
@NM00055 EQU   ZZ2+1352
ZZ2FFSYP EQU   ZZ2+1348
ZZ2SASYP EQU   ZZ2+1344
ZZ2RDSYP EQU   ZZ2+1340
ZZ2RASYP EQU   ZZ2+1336
ZZ2PHSYP EQU   ZZ2+1332
ZZ2ESSYP EQU   ZZ2+1328
ZZ200SYP EQU   ZZ2+1324
ZZ2SCWP  EQU   ZZ2+1320
ZZ2TTLP  EQU   ZZ2+1316
ZZ2LOADP EQU   ZZ2+1312
ZZ2VRESP EQU   ZZ2+1308
ZZ2CPPLE EQU   ZZ2CPPL+12
ZZ2CPPLP EQU   ZZ2CPPL+8
ZZ2CPPLU EQU   ZZ2CPPL+4
ZZ2VRSAP EQU   ZZ2+1288
ZZ2DVTP  EQU   ZZ2+1276
@NM00054 EQU   ZZ2+1272
@NM00053 EQU   ZZ2+1268
ZZ2RPLP  EQU   ZZ2+1260
ZZ2TCBP  EQU   ZZ2+1256
@NM00052 EQU   ZZ2+1252
ZZ2ZZ2P  EQU   ZZ2+1248
@NM00051 EQU   ZZ2+1112
ZZ2FPDRP EQU   ZZ2+1108
ZZ2FDSDP EQU   ZZ2+1104
ZZ2APDRP EQU   ZZ2+1100
ZZ2ADSDP EQU   ZZ2+1096
ZZ2ENQ0P EQU   ZZ2+1092
@NM00050 EQU   ZZ2+1080
ZZ2MSG0P EQU   ZZ2+1076
ZZ2FT25P EQU   ZZ2+1072
ZZ2MSGSP EQU   ZZ2+1060
ZZ2ALOCP EQU   ZZ2+1056
@NM00049 EQU   ZZ2+976
ZZ2TOD   EQU   ZZ2+968
ZZ2STGN  EQU   ZZ2STG+4
ZZ2STGP  EQU   ZZ2STG
@NM00048 EQU   ZZ2+952
ZZ2SCMDE EQU   ZZ2+944
ZZ2SCMDN EQU   ZZ2+936
ZZ2IDENT EQU   ZZ2+928
ZZ2A9999 EQU   ZZ2A+656
@NM00047 EQU   ZZ2A+224
@NM00046 EQU   ZZ2A+220
ZZ2AQD99 EQU   ZZ2AQD+60
@NM00045 EQU   ZZ2AQD+56
@NM00044 EQU   ZZ2AQDF
ZZ2AQDFA EQU   ZZ2AQDF
ZZ2AQDIL EQU   ZZ2AQD+48
ZZ2AQDIM EQU   ZZ2AQD+44
ZZ2AQDT9 EQU   ZZ2AQDT+34
ZZ2AQDTE EQU   ZZ2AQDT+33
ZZ2AQDTD EQU   ZZ2AQDT+2
@NM00043 EQU   ZZ2AQDT+1
ZZ2AQDTY EQU   ZZ2AQDT
ZZ2AQDT0 EQU   ZZ2AQDT
ZZ2AQDLB EQU   ZZ2AQD+9
ZZ2AQDOB EQU   ZZ2AQD+8
ZZ2AQDLE EQU   ZZ2AQD+4
ZZ2AQDOF EQU   ZZ2AQD
ZZ2AQD00 EQU   ZZ2AQD
ZZ2AQAS9 EQU   ZZ2AQAS+16
@NM00042 EQU   ZZ2AQAS+12
ZZ2AQAS2 EQU   ZZ2AQAS+8
ZZ2AQAS1 EQU   ZZ2AQAS+4
@NM00041 EQU   ZZ2AQAS+2
ZZ2AQAST EQU   ZZ2AQAS
ZZ2AQAS0 EQU   ZZ2AQAS
ZZ2ADPTA EQU   ZZ2ADPT
ZZ2ADPL  EQU   ZZ2ADP
ZZ2ADMTA EQU   ZZ2ADMT
ZZ2ADML  EQU   ZZ2ADM
ZZ2ADDTA EQU   ZZ2ADDT
ZZ2ADDL  EQU   ZZ2ADD
@NM00040 EQU   ZZ2A+72
ZZ2APIDB EQU   ZZ2APID+3
ZZ2APIDA EQU   ZZ2APID
@NM00039 EQU   ZZ2A+24
@NM00038 EQU   ZZ2AF+5
ZZ2AFX   EQU   ZZ2AF+5
@NM00037 EQU   ZZ2AF+3
ZZ2AFS   EQU   ZZ2AF+2
ZZ2AFD   EQU   ZZ2AF+2
ZZ2AFQ   EQU   ZZ2AF+2
ZZ2AF$   EQU   ZZ2AF+2
@NM00036 EQU   ZZ2AF+2
ZZ2AFM   EQU   ZZ2AF+2
@NM00035 EQU   ZZ2AF+2
@NM00034 EQU   ZZ2AF+1
ZZ2AFV   EQU   ZZ2AF+1
@NM00033 EQU   ZZ2AF+1
ZZ2AFC   EQU   ZZ2AF+1
@NM00032 EQU   ZZ2AF
ZZ2AFFS  EQU   ZZ2AF
ZZ2AFT   EQU   ZZ2AF
ZZ2AFP   EQU   ZZ2AF
@NM00031 EQU   ZZ2A+8
ZZ2ALINE EQU   ZZ2A+4
@NM00030 EQU   ZZ2A+3
ZZ2ASE   EQU   ZZ2A+2
ZZ2ACH   EQU   ZZ2A
@NM00029 EQU   ZZ2+264
@NM00028 EQU   ZZ2+263
ZZ2PRTT0 EQU   ZZ2PRTT
ZZ2PRTO  EQU   ZZ2PRT+2
ZZ2PRTL  EQU   ZZ2PRT
@NM00027 EQU   ZZ2AMD+56
ZZ2AMDXP EQU   ZZ2AMD+52
ZZ2AMDD  EQU   ZZ2AMD+48
ZZ2AMDL  EQU   ZZ2AMD+44
ZZ2AMDU  EQU   ZZ2AMD+28
ZZ2AMDF  EQU   ZZ2AMD+24
ZZ2AMDS  EQU   ZZ2AMD+20
ZZ2AMDC  EQU   ZZ2AMD+16
ZZ2AMDP  EQU   ZZ2AMD+12
ZZ2AMDB  EQU   ZZ2AMD+8
@NM00026 EQU   @NM00025
ZZ2AMD2  EQU   @NM00025
ZZ2AMD1  EQU   @NM00025
ZZ2AMD0  EQU   ZZ2AMD+6
ZZ2AMDA  EQU   ZZ2AMD+4
ZZ2AMDT  EQU   ZZ2AMD
ZZ199999 EQU   ZZ1+3072
@NM00024 EQU   ZZ1+2160
ZZ1TRTAS EQU   ZZ1+1904
ZZ1TRUPC EQU   ZZ1+1648
ZZ1TRCTX EQU   ZZ1+1392
ZZ1NASID EQU   ZZ1N+274
ZZ1NSTRL EQU   ZZ1N+272
ZZ1NOFF  EQU   ZZ1N+268
ZZ1NBDY  EQU   ZZ1N+264
ZZ1NADE  EQU   ZZ1N+260
ZZ1NADB  EQU   ZZ1N+256
ZZ1NSTR  EQU   ZZ1N
@NM00023 EQU   ZZ1+1080
ZZ1TREBC EQU   ZZ1+824
ZZ1TRHEX EQU   ZZ1+568
@NM00022 EQU   ZZ1+377
ZZ1USTAE EQU   ZZ1+376
@NM00021 EQU   ZZ1F+1
@NM00020 EQU   ZZ1F
ZZ1FM    EQU   ZZ1F
ZZ1FX    EQU   ZZ1F
ZZ1FU    EQU   ZZ1F
ZZ1EVEC  EQU   ZZ1EVE+1
@NM00019 EQU   ZZ1EVE
ZZ1EVEW  EQU   ZZ1EVE
ZZ1ACMP  EQU   ZZ1ATTN
@NM00018 EQU   ZZ1+144
ZZ1FPP   EQU   ZZ1+140
ZZ1ZZ6P  EQU   ZZ1+136
@NM00017 EQU   ZZ1+84
ZZ1PLINE EQU   ZZ1+80
ZZ1PGSZ  EQU   ZZ1+76
ZZ1PCNT  EQU   ZZ1+72
@NM00016 EQU   ZZ1+68
ZZ1TPAGE EQU   ZZ1+64
ZZ1TLINE EQU   ZZ1+60
@NM00015 EQU   ZZ1+48
ZZ1DSDP  EQU   ZZ1+44
ZZ1PDRP  EQU   ZZ1+40
ZZ1ZZ2P  EQU   ZZ1+36
ZZ1327WP EQU   ZZ1+32
ZZ1ACBP  EQU   ZZ1+28
@NM00014 EQU   ZZ1+24
ZZ1PDCBP EQU   ZZ1+20
ZZ1BLRBL EQU   ZZ1+16
@NM00013 EQU   ZZ1+12
ZZ1PNULL EQU   ZZ1+8
ZZ1NULL  EQU   ZZ1+4
ZZ1IDE   EQU   ZZ1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00254 EQU   @RC00251
@RF00257 EQU   @RC00251
@RF00262 EQU   @RC00248
@ENDDATA EQU   *
         END   BLSRACCQ,(C'PLS1358',0701,78057)
