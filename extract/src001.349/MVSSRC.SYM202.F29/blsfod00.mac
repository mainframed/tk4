         TITLE 'BLSFOD00-VALIDATE DSD BASE RECORD FOR CONFLICTING ATTRI*
               IBUTES   '
*          /*        CHANGE ACTIVITY         */
*  THIS MODULE IS WRITTEN FOR @G57LPRM
BLSFOD00 CSECT ,                                                01S0002
@MAINENT DS    0H                                               01S0002
         USING *,@15                                            01S0002
         B     @PROLOG                                          01S0002
         DC    AL1(16)                                          01S0002
         DC    C'BLSFOD00  78.065'                              01S0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0002
         BALR  @12,0                                            01S0002
@PSTART  DS    0H                                               01S0002
         USING @PSTART,@12                                      01S0002
         L     @00,@SIZDATD                                     01S0002
         BLSUALLS R,LV=(0)
         LR    @11,@01                                          01S0002
         USING @DATD,@11                                        01S0002
         ST    @13,@SA00001+4                                   01S0002
         LM    @00,@01,20(@13)                                  01S0002
         ST    @11,8(,@13)                                      01S0002
         LR    @13,@11                                          01S0002
         MVC   @PC00001(28),0(@01)                              01S0002
*                                                               01S0159
*/* ***********************************************************      */
*/*                                                                  */
*/*               START OF DEFAULT PROCESSING                        */
*/*                                                                  */
*/* ***********************************************************      */
*                                                               01S0159
*   ZZ2PTR=ADDR(ZZ2CB);             /* GET TASK VARIABLE ADDR        */
         L     ZZ2PTR,@PC00001                                  01S0159
*   CONFCHKF='0'B;                  /* INITIALIZE THE CONF REQ FLAG  */
         NI    CONFCHKF,B'01111111'                             01S0160
*   RETC=ZERO;                      /* INITIALIZE THE RETC           */
         SLR   RETC,RETC                                        01S0161
*   RESPECIFY                                                   01S0162
*     DSNS BASED(ADDR(DSNPDE));     /* POINT TO DSN PDE              */
*   RESPECIFY                                                   01S0163
*     TYS BASED(ADDR(TYPEPDE));     /* POINT TO TYPE PDE             */
*   RESPECIFY                                                   01S0164
*     MAN BASED(ADDR(MANPDE));      /* POINT TO MANAGED PDE          */
*   RESPECIFY                                                   01S0165
*     DSC BASED(ADDR(DESCPDE));     /* POINT TO DESCRIPTION PDE      */
*   RESPECIFY                                                   01S0166
*     RF RESTRICTED;                /* RESTRICT R15                  */
*/* ***********************************************************      */
*/*                                                                  */
*/*        START OF MODULE PROCESSING                                */
*/*                                                                  */
*/* ***********************************************************      */
*                                                               01S0167
*   OLDDSD=ADDR(OLDBSDSD);          /* OBTAIN ADDRESS OF OLD RECORD  */
         L     OLDDSD,@PC00001+4                                01S0167
*   NEWDSD=ADDR(NEWBSDSD);          /* OBTAIN ADDRESS OF NEW RECORD  */
*                                                               01S0168
         L     NEWDSD,@PC00001+8                                01S0168
*   /*****************************************************************/
*   /*                                                               */
*   /* DEFAULT DSD RECORD IS THE ORIGINAL RECORD                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0169
*   RESPECIFY                                                   01S0169
*     DSDREC BASED(OLDDSD);         /* BASE DSD RECORD FROM OLD 01S0169
*                                      RECORD                        */
*   IF ZZ1EVEP='0'B THEN            /* HAS REQ TO TERMINATE BEEN
*                                      POSTED?                       */
         L     @14,ZZ2ZZ1P(,ZZ2PTR)                             01S0170
         TM    ZZ1EVEP(@14),B'01000000'                         01S0170
         BNZ   @RF00170                                         01S0170
*     DO;                           /* NO PROCESS VERIFICATION       */
*                                                               01S0171
*       /*************************************************************/
*       /*                                                           */
*       /* TEST IF VERIFICATION IS REQUIRED. IF OLD RECORD TYPE      */
*       /* CONTAINS AN HEX ZERO, THEN THE DSN IS NEED TO THE IPCS    */
*       /* DATA BASE, AND NO VERIFICATION IS REQUIRED                */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0172
*       IF DSDKTYP=HEXZERO THEN     /* DOES RECORD REQUIRE      01S0172
*                                      VERIFICATION?                 */
         CLI   DSDKTYP(OLDDSD),0                                01S0172
         BNE   @RF00172                                         01S0172
*         RETC=ZERO;                /* NO, RECORD OK                 */
         SLR   RETC,RETC                                        01S0173
*       ELSE                        /* YES, NEED FURTHER CHECK       */
*         IF DSDKTYP=DSDRBTYC THEN  /* IS THIS A BASE RECORD         */
         B     @RC00172                                         01S0174
@RF00172 CLI   DSDKTYP(OLDDSD),C'B'                             01S0174
         BNE   @RF00174                                         01S0174
*           DO;                     /* YES, PROCESS BASE RECORD      */
*                                                               01S0175
*             /*******************************************************/
*             /*                                                     */
*             /* VERIFY KEYS ARE IDENTICAL                           */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S0176
*             IF DSDKEY=NEWDSD->DSDKEY THEN/* ARE KEYS EQUAL?        */
         CLC   DSDKEY(61,OLDDSD),DSDKEY(NEWDSD)                 01S0176
         BNE   @RF00176                                         01S0176
*               DO;                 /* VERIFY RECORD                 */
*                 IF((DSDSLOWN='1'B&/* MANAGED SAME?                 */
*                     NEWDSD->DSDSLOWN='0'B)×/* MANAGED SAME?        */
*                     (DSDSLOWN='0'B&/* UNMANAGED SAME?              */
*                     NEWDSD->DSDSLOWN='1'B)) THEN/* UNMANAGED SAME? */
         TM    DSDSLOWN(OLDDSD),B'10000000'                     01S0178
         BNO   @GL00001                                         01S0178
         TM    DSDSLOWN(NEWDSD),B'10000000'                     01S0178
         BZ    @RT00178                                         01S0178
@GL00001 TM    DSDSLOWN(OLDDSD),B'10000000'                     01S0178
         BNZ   @RF00178                                         01S0178
         TM    DSDSLOWN(NEWDSD),B'10000000'                     01S0178
         BNO   @RF00178                                         01S0178
@RT00178 DS    0H                                               01S0179
*                   IF(MAN=MNP×     /* MANAGED REQUESTED ?           */
*                       MAN=UNMGD) THEN/* UNMANAGED REQUESTED?       */
         L     @14,@PC00001+20                                  01S0179
         LH    @14,MAN(,@14)                                    01S0179
         C     @14,@CF00054                                     01S0179
         BE    @RT00179                                         01S0179
         C     @14,@CF00081                                     01S0179
         BNE   @RF00179                                         01S0179
@RT00179 DS    0H                                               01S0180
*                     CONFCHKF='1'B;/* CONFIRMATION CHECK NEEDED     */
         OI    CONFCHKF,B'10000000'                             01S0180
*                   ELSE            /* MANAGED OR UNMANAGED NOT 01S0181
*                                      SPECIFIED                     */
*                     RETC=FOUR;    /* CONFLICTS EXIST-OVERRIDE 01S0181
*                                      ALLOWED                       */
         B     @RC00179                                         01S0181
@RF00179 LA    RETC,4                                           01S0181
*                 ELSE              /* MANAGED SAME                  */
*                   RETC=MAX(RETC,ZERO);/* NO CONFLICT EXIST         */
         B     @RC00178                                         01S0182
@RF00178 SLR   @14,@14                                          01S0182
         CR    RETC,@14                                         01S0182
         BNL   *+6
         LR    RETC,@14                                         01S0182
*                 IF(DSDDSNTY^=NEWDSD->DSDDSNTY) THEN/* TYPE SAME?   */
@RC00178 CLC   DSDDSNTY(8,OLDDSD),DSDDSNTY(NEWDSD)              01S0183
         BE    @RF00183                                         01S0183
*                   IF(TYS=DMP×     /* WAS DMP REQUESTED             */
*                       TYS=PRT×    /* WAS PRT REQUESTED             */
*                       TYS=UDF) THEN/* WAS UNDEF REQUESTED          */
         L     @14,@PC00001+16                                  01S0184
         LH    @14,TYS(,@14)                                    01S0184
         C     @14,@CF00054                                     01S0184
         BE    @RT00184                                         01S0184
         C     @14,@CF00081                                     01S0184
         BE    @RT00184                                         01S0184
         C     @14,@CF00107                                     01S0184
         BNE   @RF00184                                         01S0184
@RT00184 DS    0H                                               01S0185
*                     CONFCHKF='1'B;/* YES, CHECK CONFIRMATION       */
         OI    CONFCHKF,B'10000000'                             01S0185
*                   ELSE            /* NO REQUEST FOR TYPE           */
*                     RETC=FOUR;    /* CONFLICTS EXISTS- OVERRIDE    */
         B     @RC00184                                         01S0186
@RF00184 LA    RETC,4                                           01S0186
*                 ELSE              /* TYPE IS THE SAME              */
*                   RETC=MAX(RETC,ZERO);/* SAVE PREVIOUS RETCODE     */
         B     @RC00183                                         01S0187
@RF00183 SLR   @14,@14                                          01S0187
         CR    RETC,@14                                         01S0187
         BNL   *+6
         LR    RETC,@14                                         01S0187
*                 IF DSDDESC^=NEWDSD->DSDDESC THEN/* SAME DESC?      */
@RC00183 CLC   DSDDESC(60,OLDDSD),DSDDESC(NEWDSD)               01S0188
         BE    @RF00188                                         01S0188
*                   IF DSCQFP='1'B THEN/* HAS DESC BEEN SPECIFIED?   */
         L     @14,@PC00001+24                                  01S0189
         TM    DSCQFP(@14),B'10000000'                          01S0189
         BNO   @RF00189                                         01S0189
*                     CONFCHKF='1'B;/* CONFIRMATION MSG REQUEST      */
         OI    CONFCHKF,B'10000000'                             01S0190
*                   ELSE            /* NO, NO REQ NEEDED             */
*                     RETC=FOUR;    /* CONFLICTS EXIST-OVERRIDE      */
         B     @RC00189                                         01S0191
@RF00189 LA    RETC,4                                           01S0191
*                 ELSE              /* NO, CHECK IF DESC WAS GIVEN   */
*                   RETC=MAX(RETC,ZERO);/* YES,NO CONFLICTS EXIST    */
         B     @RC00188                                         01S0192
@RF00188 SLR   @14,@14                                          01S0192
         CR    RETC,@14                                         01S0192
         BNL   *+6
         LR    RETC,@14                                         01S0192
*                 IF CONFCHKF='1'B THEN/* IS CONFIRM REQUIRED?       */
@RC00188 TM    CONFCHKF,B'10000000'                             01S0193
         BNO   @RF00193                                         01S0193
*                   CALL CONFCHK;   /* YES, PROCEED WITH CHECK       */
         BAL   @14,CONFCHK                                      01S0194
*               END;                /* END OF VERIFY RECORD          */
*             ELSE                  /* NO, LOGIC ERROR, SHOULD NEVER
*                                      HAPPEN                        */
*               DO;                 /* LOGIC ERROR-RECORD KEYS       */
         B     @RC00176                                         01S0196
@RF00176 DS    0H                                               01S0197
*                 MSGPTR=ZERO;      /* INDICATE NO CHAIN             */
         SLR   @14,@14                                          01S0197
         ST    @14,MSGPTR                                       01S0197
*                 DO;               /* BLSDMSG                  01S0198
*                                      (ZZ2,04064,MSGPTR,BLSDMSGS)
*                                      LIFO ROUTE(TERM)              */
*                   CALL BLSDMSG0(ZZ2,04064,MSGPTR,BLSDMSGS,'10010000'B
*                       ,0);        /* BUILD MESSAGE                 */
         ST    ZZ2PTR,@AL00001                                  01S0199
         LA    @14,@CF00938                                     01S0199
         ST    @14,@AL00001+4                                   01S0199
         LA    @14,MSGPTR                                       01S0199
         ST    @14,@AL00001+8                                   01S0199
         L     @14,ZZ2MSGSP(,ZZ2PTR)                            01S0199
         ST    @14,@AL00001+12                                  01S0199
         LA    @14,@CB00939                                     01S0199
         ST    @14,@AL00001+16                                  01S0199
         LA    @14,@CF00059                                     01S0199
         ST    @14,@AL00001+20                                  01S0199
         L     @15,ZZ2MSG0P(,ZZ2PTR)                            01S0199
         LA    @01,@AL00001                                     01S0199
         BALR  @14,@15                                          01S0199
*                 END;              /* BLSDMSG                  01S0200
*                                      (ZZ2,04064,MSGPTR,BLSDMSGS)
*                                      LIFO ROUTE(TERM)              */
*                 DO;               /* ABEND(111) DUMP USER          */
*                   RESPECIFY                                   01S0202
*                    (GPR01F) RESTRICTED;                       01S0202
*                   GPR01F=(111)&'00000FFF'X;/* COMP CODE IN BITS
*                                      20-31                         */
         LA    GPR01F,111                                       01S0203
*                   GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS
*                                      FLAG                          */
         O     GPR01F,@CF00074                                  01S0204
*                   SVC(13);        /* ISSUE ABEND SVC               */
         SVC   13                                               01S0205
*                   RESPECIFY                                   01S0206
*                    (GPR01F) UNRESTRICTED;                     01S0206
*                 END;              /* ABEND(111) DUMP USER ERROR IN
*                                      KEY                           */
*               END;                /* END OF LOGIC ERROR-RECORD KEYS*/
*           END;                    /* END OF BASE RECORD PROCESSING */
*         ELSE                      /* NO, MUST BE ERROR, REQUEST
*                                      TERMINATION                   */
*           DO;                     /* ERROR RECORD PROCESSING       */
*                                                               01S0210
         B     @RC00174                                         01S0210
@RF00174 DS    0H                                               01S0211
*             /*******************************************************/
*             /*                                                     */
*             /* THIS SHOULD NEVER HAPPEN BUT CHECK MUST BE MADE     */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S0211
*             MSGPTR=ZERO;          /* NO CHAIN                      */
         SLR   @14,@14                                          01S0211
         ST    @14,MSGPTR                                       01S0211
*             DO;                   /* BLSDMSG                  01S0212
*                                      (ZZ2,04061,MSGPTR,BLSDMSGS)
*                                      LIFO ROUTE(TERM)              */
*               CALL BLSDMSG0(ZZ2,04061,MSGPTR,BLSDMSGS,'10010000'B,0);
         ST    ZZ2PTR,@AL00001                                  01S0213
         LA    @14,@CF00944                                     01S0213
         ST    @14,@AL00001+4                                   01S0213
         LA    @14,MSGPTR                                       01S0213
         ST    @14,@AL00001+8                                   01S0213
         L     @14,ZZ2MSGSP(,ZZ2PTR)                            01S0213
         ST    @14,@AL00001+12                                  01S0213
         LA    @14,@CB00939                                     01S0213
         ST    @14,@AL00001+16                                  01S0213
         LA    @14,@CF00059                                     01S0213
         ST    @14,@AL00001+20                                  01S0213
         L     @15,ZZ2MSG0P(,ZZ2PTR)                            01S0213
         LA    @01,@AL00001                                     01S0213
         BALR  @14,@15                                          01S0213
*                                   /* BUILD MESSAGE                 */
*             END;                  /* BLSDMSG                  01S0214
*                                      (ZZ2,04061,MSGPTR,BLSDMSGS)
*                                      LIFO ROUTE(TERM)              */
*             DO;                   /* ABEND(112) DUMP USER          */
*               RESPECIFY                                       01S0216
*                (GPR01F) RESTRICTED;                           01S0216
*               GPR01F=(112)&'00000FFF'X;/* COMP CODE IN BITS 20-31  */
         LA    GPR01F,112                                       01S0217
*               GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG */
         O     GPR01F,@CF00074                                  01S0218
*               SVC(13);            /* ISSUE ABEND SVC               */
         SVC   13                                               01S0219
*               RESPECIFY                                       01S0220
*                (GPR01F) UNRESTRICTED;                         01S0220
*             END;                  /* ABEND(112) DUMP USER ERROR
*                                      NOBASE RECORD                 */
*           END;                    /* END OF ERROR RECORD PROCESSING*/
*     END;                          /* END OF VERIFICATION PROCESSING*/
*   ELSE                            /* YES, TERMINATE AT USERS  01S0224
*                                      REQUEST                       */
*     RETC=TWELVE;                  /* REQUEST TERMINATE AT USERS
*                                      REQUEST                       */
         B     @RC00170                                         01S0224
@RF00170 LA    RETC,12                                          01S0224
*   RETURN CODE(RETC);                                          01S0225
@RC00170 L     @13,4(,@13)                                      01S0225
         L     @00,@SIZDATD                                     01S0225
         LR    @01,@11                                          01S0225
         BLSUFRES R,LV=(0),A=(1)
         LR    @15,@05                                          01S0225
         L     @14,12(,@13)                                     01S0225
         LM    @00,@12,20(@13)                                  01S0225
         BR    @14                                              01S0225
*CONFCHK:                                                       01S0226
*   PROCEDURE;                                                  01S0226
*                                                               01S0226
CONFCHK  STM   @14,@04,@SA00002                                 01S0226
         STM   @06,@12,@SA00002+28                              01S0226
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECKS IF CONFIRM IS NECESSARY OR JUST MESSAGE                */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0227
*   IF ZZ2AFC='1'B THEN             /* CONFIRM REQUESTED?            */
         TM    ZZ2AFC(ZZ2PTR),B'10000000'                       01S0227
         BNO   @RF00227                                         01S0227
*     DO;                           /* YES, REQ CONFIRM --TYPE       */
*                                                               01S0228
*       /*************************************************************/
*       /*                                                           */
*       /* CONFIRM REQUESTED ISSUE DISPLAY AND REQUEST USER ACTION   */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0229
*       MSGPTR=ZERO;                /* CLEAR OUT THE MESSAGE POINTER */
         SLR   @14,@14                                          01S0229
         ST    @14,MSGPTR                                       01S0229
*       CALL BLSFDF00(ZZ2,OLDBSDSD,YES,MSGPTR);/* CALL FOR DISPLAY   */
         ST    ZZ2PTR,@AL00001                                  01S0230
         L     @14,@PC00001+4                                   01S0230
         ST    @14,@AL00001+4                                   01S0230
         LA    @14,@CC00915                                     01S0230
         ST    @14,@AL00001+8                                   01S0230
         LA    @14,MSGPTR                                       01S0230
         ST    @14,@AL00001+12                                  01S0230
         L     @10,ZZ2DVTP(,ZZ2PTR)                             01S0230
         L     @15,DVTDF00P(,@10)                               01S0230
         LA    @01,@AL00001                                     01S0230
         BALR  @14,@15                                          01S0230
*       IF RF=ZERO THEN             /* IS DISPLAY OK?                */
         LTR   RF,RF                                            01S0231
         BNZ   @RF00231                                         01S0231
*         DO;                       /* YES, CALL CONFIRMATION        */
*           DO;                     /* BLSDMSG                  01S0233
*                                      (ZZ2,MONE,MSGPTR,BLSDMSGS)
*                                      LIFO ROUTE(TERM)              */
*             CALL BLSDMSG0(ZZ2,MONE,MSGPTR,BLSDMSGS,'10010000'B,0);
         ST    ZZ2PTR,@AL00001                                  01S0234
         LA    @14,@CF00917                                     01S0234
         ST    @14,@AL00001+4                                   01S0234
         LA    @14,MSGPTR                                       01S0234
         ST    @14,@AL00001+8                                   01S0234
         L     @14,ZZ2MSGSP(,ZZ2PTR)                            01S0234
         ST    @14,@AL00001+12                                  01S0234
         LA    @14,@CB00939                                     01S0234
         ST    @14,@AL00001+16                                  01S0234
         LA    @14,@CF00059                                     01S0234
         ST    @14,@AL00001+20                                  01S0234
         L     @15,ZZ2MSG0P(,ZZ2PTR)                            01S0234
         LA    @01,@AL00001                                     01S0234
         BALR  @14,@15                                          01S0234
*                                   /* BUILD MESSAGE                 */
*           END;                    /* BLSDMSG                  01S0235
*                                      (ZZ2,MONE,MSGPTR,BLSDMSGS)
*                                      LIFO ROUTE(TERM)              */
*           IF RF=ZERO THEN         /* MESSAGE OK?                   */
         LTR   RF,RF                                            01S0236
         BNZ   @RF00236                                         01S0236
*             DO;                   /* CONFIRM NEEDED                */
*               CALL BLSFCN00(ZZ2,MSGNR1);/* CALL CONFIRMATION       */
         ST    ZZ2PTR,@AL00001                                  01S0238
         LA    @14,@CF00910                                     01S0238
         ST    @14,@AL00001+4                                   01S0238
         L     @10,ZZ2DVTP(,ZZ2PTR)                             01S0238
         L     @15,DVTCN00P(,@10)                               01S0238
         LA    @01,@AL00001                                     01S0238
         BALR  @14,@15                                          01S0238
*               IF RF=ZERO THEN     /* USER REPLY YES?               */
         LTR   RF,RF                                            01S0239
         BNZ   @RF00239                                         01S0239
*                 RETC=FOUR;        /* YES, RETURN CODE = FOUR       */
         LA    RETC,4                                           01S0240
*               ELSE                /* NO                            */
*                 RETC=TWELVE;      /* REQ TERMINATION OF THE COMMAND*/
         B     @RC00239                                         01S0241
@RF00239 LA    RETC,12                                          01S0241
*             END;                  /* END OF CONFIRM NEEDED         */
*           ELSE                    /* ERROR DURRING MESSAGE         */
*             RETC=TWELVE;          /* REQUEST TERMINATION           */
         B     @RC00236                                         01S0243
@RF00236 LA    RETC,12                                          01S0243
*         END;                      /* END OF CALL CONFIRMATION      */
*       ELSE                        /* NO, DISPLAY REQ TERM          */
*         RETC=TWELVE;              /* REQ TERMINATION               */
         B     @RC00231                                         01S0245
@RF00231 LA    RETC,12                                          01S0245
*     END;                          /* END OF REQ CONFIRM--TYPE      */
*   ELSE                            /* NO, PUT OUT MESSAGE           */
*     DO;                           /* PUT OUT MESSAGE               */
         B     @RC00227                                         01S0247
@RF00227 DS    0H                                               01S0248
*       MSGPTR=ZERO;                                            01S0248
         SLR   @14,@14                                          01S0248
         ST    @14,MSGPTR                                       01S0248
*       DO;                         /* BLSDMSG                  01S0249
*                                      (ZZ2,04062,MSGPTR,BLSDMSGS)
*                                      LIFO ROUTE(TERM)              */
*         CALL BLSDMSG0(ZZ2,04062,MSGPTR,BLSDMSGS,'10010000'B,0);/*
*                                      BUILD MESSAGE                 */
         ST    ZZ2PTR,@AL00001                                  01S0250
         LA    @14,@CF00949                                     01S0250
         ST    @14,@AL00001+4                                   01S0250
         LA    @14,MSGPTR                                       01S0250
         ST    @14,@AL00001+8                                   01S0250
         L     @14,ZZ2MSGSP(,ZZ2PTR)                            01S0250
         ST    @14,@AL00001+12                                  01S0250
         LA    @14,@CB00939                                     01S0250
         ST    @14,@AL00001+16                                  01S0250
         LA    @14,@CF00059                                     01S0250
         ST    @14,@AL00001+20                                  01S0250
         L     @15,ZZ2MSG0P(,ZZ2PTR)                            01S0250
         LA    @01,@AL00001                                     01S0250
         BALR  @14,@15                                          01S0250
*       END;                        /* BLSDMSG                  01S0251
*                                      (ZZ2,04062,MSGPTR,BLSDMSGS)
*                                      LIFO ROUTE(TERM)              */
*       IF RF>ZERO THEN             /* REQUEST FOR TERM?             */
         LTR   RF,RF                                            01S0252
         BNP   @RF00252                                         01S0252
*         RETC=TWELVE;              /* YES, REQUEST TERMINATION      */
         LA    RETC,12                                          01S0253
*       ELSE                        /* NO, CONFLICTS EXIST OVERRIDE  */
*         RETC=FOUR;                /* CONFLICTS EXISTS              */
         B     @RC00252                                         01S0254
@RF00252 LA    RETC,4                                           01S0254
*     END;                          /* END OF PUT OUT MESSAGE        */
*   END CONFCHK;                    /* END OF CONFIRMATION CHECK     */
@EL00002 DS    0H                                               01S0256
@EF00002 DS    0H                                               01S0256
@ER00002 LM    @14,@04,@SA00002                                 01S0256
         LM    @06,@12,@SA00002+28                              01S0256
         BR    @14                                              01S0256
*/*BLSUPEND--MVS IPCS MODULE                                         */
*                                                               01S0257
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR01F FIXED(31) REG(1);                                  01S0257
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                    01S0258
*     I031F FIXED(31) BASED,                                    01S0258
*     I031P PTR(31) BASED,                                      01S0258
*     I015F FIXED(15) BASED,                                    01S0258
*     I015P PTR(15) BASED,                                      01S0258
*     I008P PTR(8) BASED,                                       01S0258
*     I001C CHAR(1) BASED;                                      01S0258
*   GENERATE NODEFS NOREFS DATA;                                01S0259
*   END                             /* BLRPEND END OF PROCESSING     */
*                                                               01S0260
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (BLSFAD  )                                       */
*/*%INCLUDE SYSLIB  (BLSDSD  )                                       */
*/*%INCLUDE SYSLIB  (BLSUZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLRFULL )                                       */
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */
*/*%INCLUDE SYSLIB  (IKJPSCB )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJUPT  )                                       */
*/*%INCLUDE SYSLIB  (BLSUSERV)                                       */
*/*%INCLUDE SYSLIB  (BLRSERV )                                       */
*/*%INCLUDE SYSLIB  (BLRSERVD)                                       */
*/*%INCLUDE SYSLIB  (BLSDSERV)                                       */
*                                                               01S0260
*       ;                                                       01S0260
@EL00001 L     @13,4(,@13)                                      01S0260
@EF00001 L     @00,@SIZDATD                                     01S0260
         LR    @01,@11                                          01S0260
         BLSUFRES R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                  01S0260
         BR    @14                                              01S0260
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    7F
@SA00002 DS    14F
@AL00001 DS    6A
BLSFOD00 CSECT
         DS    0F
@CF00059 DC    F'0'
@CF00054 DC    F'1'
@CF00081 DC    F'2'
@CF00107 DC    F'3'
@CF00944 DC    F'4061'
@CF00949 DC    F'4062'
@CF00910 DC    F'4063'
@CF00938 DC    F'4064'
@CF00917 DC    F'-1'
@CF00074 DC    XL4'80000000'
@DATD    DSECT
         DS    0D
MSGPTR   DS    A
FLAGS    DS    CL1
         ORG   FLAGS
CONFCHKF DS    BL1
@NM00079 EQU   FLAGS+0
         ORG   FLAGS+1
BLSFOD00 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00915 DC    C'YES'
@CB00939 DC    B'10010000'
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSFOD00 CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSFOD00+19)/20+7)/8)CL8'BLSFOD00'
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSFOD00 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
OLDDSD   EQU   @03
NEWDSD   EQU   @06
RETC     EQU   @05
ZZ2PTR   EQU   @02
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R9       EQU   @09
RB       EQU   @11
RD       EQU   @13
RE       EQU   @14
RF       EQU   @15
GPR01F   EQU   @01
RA       EQU   @10
RC       EQU   @12
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
PD       EQU   0
MAN      EQU   0
DSNS     EQU   0
DSNSDP   EQU   DSNS
DSNSDF   EQU   DSNS+6
DSNSMP   EQU   DSNS+8
DSNSMF   EQU   DSNS+14
DSNSPP   EQU   DSNS+16
DSNSPF   EQU   DSNS+22
PRN      EQU   0
PRNIP    EQU   PRN
PRNIF    EQU   PRN+6
TYS      EQU   0
DSC      EQU   0
DSCQP    EQU   DSC
DSCQF    EQU   DSC+6
DSCQFP   EQU   DSCQF
DSDREC   EQU   0
DSDKEY   EQU   DSDREC
DSDKGRP  EQU   DSDKEY
DSDKTYP  EQU   DSDKGRP
DSDKDSNM EQU   DSDKGRP+1
DSDKBSID EQU   DSDKEY+53
DSDKPID  EQU   DSDKBSID
DSDINFO  EQU   DSDREC+64
ZZ1      EQU   0
ZZ1ATTN  EQU   ZZ1+360
ZZ1EVE   EQU   ZZ1ATTN+4
ZZ1EVEP  EQU   ZZ1EVE
ZZ1F     EQU   ZZ1+368
ZZ1N     EQU   ZZ1+1116
ZZ2      EQU   0
ZZ2AMD   EQU   ZZ2
@NM00023 EQU   ZZ2AMD+7
ZZ2PRT   EQU   ZZ2+138
ZZ2PRTT  EQU   ZZ2PRT+4
ZZ2PRTT1 EQU   ZZ2PRTT+1
ZZ2A     EQU   ZZ2+272
ZZ2AF    EQU   ZZ2A+16
ZZ2AFC   EQU   ZZ2AF+1
ZZ2APID  EQU   ZZ2A+64
ZZ2AD    EQU   ZZ2A+74
ZZ2ADD   EQU   ZZ2AD
ZZ2ADDT  EQU   ZZ2ADD+2
ZZ2ADM   EQU   ZZ2AD+46
ZZ2ADMT  EQU   ZZ2ADM+2
ZZ2ADP   EQU   ZZ2AD+56
ZZ2ADPT  EQU   ZZ2ADP+2
ZZ2AQAS  EQU   ZZ2A+144
ZZ2AQD   EQU   ZZ2A+160
ZZ2AQDT  EQU   ZZ2AQD+10
ZZ2AQDF  EQU   ZZ2AQD+52
ZZ2STG   EQU   ZZ2+960
ZZ2ALLOP EQU   ZZ2+992
ZZ2FREEP EQU   ZZ2+996
ZZ2FF19P EQU   ZZ2+1000
ZZ2FRE1P EQU   ZZ2+1004
ZZ2FF18P EQU   ZZ2+1008
ZZ2DYNAP EQU   ZZ2+1012
ZZ2ZZ2CP EQU   ZZ2+1016
ZZ2ZZ2DP EQU   ZZ2+1020
ZZ2STAIP EQU   ZZ2+1024
ZZ2FF02P EQU   ZZ2+1028
ZZ2GETLP EQU   ZZ2+1032
ZZ2PARSP EQU   ZZ2+1036
ZZ2PTGTP EQU   ZZ2+1040
ZZ2PUTLP EQU   ZZ2+1044
ZZ2SCANP EQU   ZZ2+1048
ZZ2STCKP EQU   ZZ2+1052
ZZ2ALOCP EQU   ZZ2+1056
ZZ2MSGSP EQU   ZZ2+1060
ZZ2TRMOP EQU   ZZ2+1064
ZZ2TRMVP EQU   ZZ2+1068
ZZ2MSG0P EQU   ZZ2+1076
ZZ2PUTNP EQU   ZZ2+1084
ZZ2TRMNP EQU   ZZ2+1088
ZZ2ENQ0P EQU   ZZ2+1092
ZZ2ADSDP EQU   ZZ2+1096
ZZ2APDRP EQU   ZZ2+1100
ZZ2FDSDP EQU   ZZ2+1104
ZZ2FPDRP EQU   ZZ2+1108
ZZ2ZZ1P  EQU   ZZ2+1264
ZZ2DVTP  EQU   ZZ2+1276
ZZ2BVTP  EQU   ZZ2+1280
ZZ2CPPL  EQU   ZZ2+1292
ZZ2CPPLC EQU   ZZ2CPPL
ZZ2ITR   EQU   ZZ2+2840
ZZ2ITRE  EQU   ZZ2ITR+16
ZZ2ITSE  EQU   ZZ2+2864
ZZ2ES    EQU   ZZ2+2872
ZZ2AMDX  EQU   ZZ2+7160
ZZ2AXO   EQU   ZZ2+7934
ZZ2AXOT  EQU   ZZ2AXO+2
CMD      EQU   0
CMDT     EQU   CMD+4
PSCB     EQU   0
PSCBATR1 EQU   PSCB+16
ECT      EQU   0
ECTSWS   EQU   ECT+28
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
UPT      EQU   0
UPTSWS   EQU   UPT+12
SA       EQU   0
SA1      EQU   SA
SAR      EQU   SA+12
BVT      EQU   0
BVTPUTLP EQU   BVT+4
BVTPUTOP EQU   BVT+12
BVTPUTTP EQU   BVT+16
BVTPUTVP EQU   BVT+20
BVTPUTAP EQU   BVT+24
BVTPRTTP EQU   BVT+28
BVTPRTAP EQU   BVT+32
BVTPUTDP EQU   BVT+36
BVTMONP  EQU   BVT+40
BVTMON2P EQU   BVT+44
BVTVSARP EQU   BVT+48
BVTVSENP EQU   BVT+64
BVTVSERP EQU   BVT+68
BVTVSGEP EQU   BVT+72
BVTVSGUP EQU   BVT+76
BVTVSPOP EQU   BVT+80
BVTVSPUP EQU   BVT+84
BVTMPKNP EQU   BVT+104
BVTMONLP EQU   BVT+108
BVTPUTCP EQU   BVT+132
BVTMPK1P EQU   BVT+136
BVTZZ2RP EQU   BVT+140
BVTPGMRP EQU   BVT+144
BVTMONAP EQU   BVT+148
BVTBLDDP EQU   BVT+152
BVTBLDLP EQU   BVT+156
BVTPGMCP EQU   BVT+160
BVTPGMDP EQU   BVT+164
BVTPGMLP EQU   BVT+168
BVTMONCP EQU   BVT+180
BVTMONDP EQU   BVT+184
BVTMONTP EQU   BVT+188
BVTPARIP EQU   BVT+192
BVTPARUP EQU   BVT+196
BVTPRTNP EQU   BVT+204
BVTVSCRP EQU   BVT+208
BVTVSMRP EQU   BVT+212
BVTMONXP EQU   BVT+216
BVTTRMAP EQU   BVT+228
BLSDMSGS EQU   0
BLSDMSG0 EQU   0
BLSFCN00 EQU   0
BLSFDF00 EQU   0
DVT      EQU   0
DVTDEQPP EQU   DVT+8
DVTENQPP EQU   DVT+12
DVTAUTHP EQU   DVT+20
DVTLPCLP EQU   DVT+24
DVTBP00P EQU   DVT+28
DVTCN00P EQU   DVT+32
DVTDF00P EQU   DVT+36
DVTDS00P EQU   DVT+44
DVTFL00P EQU   DVT+48
DVTFP00P EQU   DVT+52
DVTGD00P EQU   DVT+56
DVTGG00P EQU   DVT+60
DVTGP00P EQU   DVT+64
DVTND00P EQU   DVT+68
DVTND01P EQU   DVT+72
DVTPS00P EQU   DVT+80
DVTSD00P EQU   DVT+84
DVTSL00P EQU   DVT+88
DVTTL00P EQU   DVT+92
DVTUD00P EQU   DVT+96
DVTUP00P EQU   DVT+100
DVTLP00P EQU   DVT+104
DVTLALLP EQU   DVT+108
DVTLPFMP EQU   DVT+112
DVTCLOSP EQU   DVT+116
DVTOPENP EQU   DVT+120
DVTPERAP EQU   DVT+124
DVTDALLP EQU   DVT+128
BLSCALOC EQU   0
BLSDADSD EQU   0
BLSDAPDR EQU   0
BLSDDEQP EQU   0
BLSDENQP EQU   0
BLSDENQ0 EQU   0
BLSDFDSD EQU   0
BLSDFPDR EQU   0
BLSEAUTH EQU   0
BLSELPCL EQU   0
BLSELPFM EQU   0
BLSFBP00 EQU   0
BLSFCLOS EQU   0
BLSFDALL EQU   0
BLSFDS00 EQU   0
BLSFFL00 EQU   0
BLSFFP00 EQU   0
BLSFGD00 EQU   0
BLSFGG00 EQU   0
BLSFGP00 EQU   0
BLSFLALL EQU   0
BLSFLP00 EQU   0
BLSFND00 EQU   0
BLSFND01 EQU   0
BLSFOPEN EQU   0
BLSFPERA EQU   0
BLSFPS00 EQU   0
BLSFSD00 EQU   0
BLSFSL00 EQU   0
BLSFTL00 EQU   0
BLSFUD00 EQU   0
BLSFUP00 EQU   0
BLSUALLO EQU   0
BLSUBLDD EQU   0
BLSUBLDL EQU   0
BLSUDYNA EQU   0
BLSUFREE EQU   0
BLSUFRE1 EQU   0
BLSUMON  EQU   0
BLSUMONA EQU   0
BLSUMONC EQU   0
BLSUMOND EQU   0
BLSUMONL EQU   0
BLSUMONT EQU   0
BLSUMONX EQU   0
BLSUMON2 EQU   0
BLSUMPKN EQU   0
BLSUMPK1 EQU   0
BLSUPARI EQU   0
BLSUPARU EQU   0
BLSUPGMC EQU   0
BLSUPGMD EQU   0
BLSUPGML EQU   0
BLSUPGMR EQU   0
BLSUPRTA EQU   0
BLSUPRTN EQU   0
BLSUPRTT EQU   0
BLSUPUTA EQU   0
BLSUPUTC EQU   0
BLSUPUTD EQU   0
BLSUPUTL EQU   0
BLSUPUTN EQU   0
BLSUPUTO EQU   0
BLSUPUTT EQU   0
BLSUPUTV EQU   0
BLSUSTAI EQU   0
BLSUTRMA EQU   0
BLSUTRMN EQU   0
BLSUTRMO EQU   0
BLSUTRMV EQU   0
BLSUVSAR EQU   0
BLSUVSCR EQU   0
BLSUVSEN EQU   0
BLSUVSER EQU   0
BLSUVSGE EQU   0
BLSUVSGU EQU   0
BLSUVSMR EQU   0
BLSUVSPO EQU   0
BLSUVSPU EQU   0
BLSUZZ2C EQU   0
BLSUZZ2D EQU   0
BLSUZZ2R EQU   0
DCR      EQU   0
DESCSUB  EQU   0
DFT      EQU   0
DSCQ     EQU   0
DSNSD    EQU   0
DSNSM    EQU   0
DSNSP    EQU   0
DSNSUB   EQU   0
DSNWD    EQU   0
IKJEFF02 EQU   0
IKJEFF18 EQU   0
IKJEFF19 EQU   0
IKJGETL  EQU   0
IKJPARS  EQU   0
IKJPTGT  EQU   0
IKJPUTL  EQU   0
IKJSCAN  EQU   0
IKJSTCK  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
LISTEND  EQU   0
PRNI     EQU   0
PRO      EQU   0
PROBSUB  EQU   0
PXCONF   EQU   0
PXTEST   EQU   0
TYP      EQU   0
TYPESUB  EQU   0
ZZ2CB    EQU   0
OLDBSDSD EQU   0
NEWBSDSD EQU   0
DSNPDE   EQU   0
TYPEPDE  EQU   0
MANPDE   EQU   0
DESCPDE  EQU   0
DSDBASRC EQU   DSDINFO
DSDDSNTY EQU   DSDBASRC
DSDDSATR EQU   DSDBASRC+8
DSDSLOWN EQU   DSDDSATR
DSDDESC  EQU   DSDBASRC+16
DSDPRASR EQU   DSDINFO
CPPL     EQU   ZZ2CPPL
CPPLUPT  EQU   CPPL+4
CPPLPSCB EQU   CPPL+8
CPPLECT  EQU   CPPL+12
*                                      START UNREFERENCED COMPONENTS
CPPLCBUF EQU   CPPL
DSDPRSQN EQU   DSDPRASR
DSDBRES1 EQU   DSDBASRC+76
DVT99999 EQU   DVT+256
DVT0064P EQU   DVT+252
DVT0063P EQU   DVT+248
DVT0062P EQU   DVT+244
DVT0061P EQU   DVT+240
DVT0060P EQU   DVT+236
DVT0059P EQU   DVT+232
DVT0058P EQU   DVT+228
DVT0057P EQU   DVT+224
DVT0056P EQU   DVT+220
DVT0055P EQU   DVT+216
DVT0054P EQU   DVT+212
DVT0053P EQU   DVT+208
DVT0052P EQU   DVT+204
DVT0051P EQU   DVT+200
DVT0050P EQU   DVT+196
DVT0049P EQU   DVT+192
DVT0048P EQU   DVT+188
DVT0047P EQU   DVT+184
DVT0046P EQU   DVT+180
DVT0045P EQU   DVT+176
DVT0044P EQU   DVT+172
DVT0043P EQU   DVT+168
DVT0042P EQU   DVT+164
DVT0041P EQU   DVT+160
DVT0040P EQU   DVT+156
DVT0039P EQU   DVT+152
DVT0038P EQU   DVT+148
DVT0037P EQU   DVT+144
DVT0036P EQU   DVT+140
DVT0035P EQU   DVT+136
DVT0034P EQU   DVT+132
DVTOD00P EQU   DVT+76
DVT0011P EQU   DVT+40
DVT0005P EQU   DVT+16
DVT0002P EQU   DVT+4
DVT0001P EQU   DVT
BVT99999 EQU   BVT+256
BVT0064P EQU   BVT+252
BVT0063P EQU   BVT+248
BVT0062P EQU   BVT+244
BVT0061P EQU   BVT+240
BVT0060P EQU   BVT+236
BVT0059P EQU   BVT+232
BVT0057P EQU   BVT+224
BVT0056P EQU   BVT+220
BVTSTBLP EQU   BVT+200
BVT0045P EQU   BVT+176
BVT0044P EQU   BVT+172
BVT0033P EQU   BVT+128
BVT0032P EQU   BVT+124
BVT0031P EQU   BVT+120
BVT0030P EQU   BVT+116
BVT0029P EQU   BVT+112
BVT0026P EQU   BVT+100
BVT0025P EQU   BVT+96
BVT0024P EQU   BVT+92
BVT0023P EQU   BVT+88
BVT0016P EQU   BVT+60
BVT0015P EQU   BVT+56
BVT0014P EQU   BVT+52
BVT0003P EQU   BVT+8
BVT0001P EQU   BVT
SA99     EQU   SA+72
SARC     EQU   SAR+56
SARB     EQU   SAR+52
SARA     EQU   SAR+48
SAR9     EQU   SAR+44
SAR8     EQU   SAR+40
SAR7     EQU   SAR+36
SAR6     EQU   SAR+32
SAR5     EQU   SAR+28
SAR4     EQU   SAR+24
SAR3     EQU   SAR+20
SAR2     EQU   SAR+16
SAR1     EQU   SAR+12
SAR0     EQU   SAR+8
SARF     EQU   SAR+4
SARE     EQU   SAR
SAFWD    EQU   SA+8
SABAK    EQU   SA+4
SA1L     EQU   SA1+1
SA1P     EQU   SA1
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00078 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00077 EQU   UPT
@NM00076 EQU   ECT+52
@NM00075 EQU   ECT+48
@NM00074 EQU   ECT+44
@NM00073 EQU   ECTSWS2+1
@NM00072 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00071 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00070 EQU   PSCB+36
@NM00069 EQU   PSCB+32
@NM00068 EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00067 EQU   PSCBATR1
@NM00066 EQU   PSCBATR1
@NM00065 EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
PSCBUSRL EQU   PSCB+7
PSCBUSER EQU   PSCB
CMDT1    EQU   CMDT
CMDO     EQU   CMD+2
CMDL     EQU   CMD
ZZ299999 EQU   ZZ2+8192
ZZ2AXOT1 EQU   ZZ2AXOT
ZZ2AXOL  EQU   ZZ2AXO
@NM00064 EQU   ZZ2+7288
@NM00063 EQU   ZZ2AMDX+4
ZZ2AMDXC EQU   ZZ2AMDX
ZZ2HSD   EQU   ZZ2+3056
@NM00062 EQU   ZZ2ES
@NM00061 EQU   ZZ2+2868
ZZ2ITSEC EQU   ZZ2ITSE+1
@NM00060 EQU   ZZ2ITSE
ZZ2ITSEP EQU   ZZ2ITSE
ZZ2ITSEW EQU   ZZ2ITSE
@NM00059 EQU   ZZ2ITR+20
ZZ2ITREC EQU   ZZ2ITRE+1
@NM00058 EQU   ZZ2ITRE
ZZ2ITREP EQU   ZZ2ITRE
ZZ2ITREW EQU   ZZ2ITRE
@NM00057 EQU   ZZ2ITR+9
ZZ2ITRRC EQU   ZZ2ITR+8
ZZ2ITR2P EQU   ZZ2ITR+4
ZZ2ITRPP EQU   ZZ2ITR
@NM00056 EQU   ZZ2+1544
ZZ2PGM   EQU   ZZ2+1536
@NM00055 EQU   ZZ2+1526
ZZ2CW    EQU   ZZ2+1524
@NM00054 EQU   ZZ2+1504
@NM00053 EQU   ZZ2+1352
ZZ2FFSYP EQU   ZZ2+1348
ZZ2SASYP EQU   ZZ2+1344
ZZ2RDSYP EQU   ZZ2+1340
ZZ2RASYP EQU   ZZ2+1336
ZZ2PHSYP EQU   ZZ2+1332
ZZ2ESSYP EQU   ZZ2+1328
ZZ200SYP EQU   ZZ2+1324
ZZ2SCWP  EQU   ZZ2+1320
ZZ2TTLP  EQU   ZZ2+1316
ZZ2LOADP EQU   ZZ2+1312
ZZ2VRESP EQU   ZZ2+1308
ZZ2CPPLE EQU   ZZ2CPPL+12
ZZ2CPPLP EQU   ZZ2CPPL+8
ZZ2CPPLU EQU   ZZ2CPPL+4
ZZ2VRSAP EQU   ZZ2+1288
ZZ2RVTP  EQU   ZZ2+1284
@NM00052 EQU   ZZ2+1272
@NM00051 EQU   ZZ2+1268
ZZ2RPLP  EQU   ZZ2+1260
ZZ2TCBP  EQU   ZZ2+1256
@NM00050 EQU   ZZ2+1252
ZZ2ZZ2P  EQU   ZZ2+1248
@NM00049 EQU   ZZ2+1112
@NM00048 EQU   ZZ2+1080
ZZ2FT25P EQU   ZZ2+1072
@NM00047 EQU   ZZ2+976
ZZ2TOD   EQU   ZZ2+968
ZZ2STGN  EQU   ZZ2STG+4
ZZ2STGP  EQU   ZZ2STG
@NM00046 EQU   ZZ2+952
ZZ2SCMDE EQU   ZZ2+944
ZZ2SCMDN EQU   ZZ2+936
ZZ2IDENT EQU   ZZ2+928
ZZ2A9999 EQU   ZZ2A+656
@NM00045 EQU   ZZ2A+224
@NM00044 EQU   ZZ2A+220
ZZ2AQD99 EQU   ZZ2AQD+60
@NM00043 EQU   ZZ2AQD+56
@NM00042 EQU   ZZ2AQDF
ZZ2AQDFA EQU   ZZ2AQDF
ZZ2AQDIL EQU   ZZ2AQD+48
ZZ2AQDIM EQU   ZZ2AQD+44
ZZ2AQDT9 EQU   ZZ2AQDT+34
ZZ2AQDTE EQU   ZZ2AQDT+33
ZZ2AQDTD EQU   ZZ2AQDT+2
@NM00041 EQU   ZZ2AQDT+1
ZZ2AQDTY EQU   ZZ2AQDT
ZZ2AQDT0 EQU   ZZ2AQDT
ZZ2AQDLB EQU   ZZ2AQD+9
ZZ2AQDOB EQU   ZZ2AQD+8
ZZ2AQDLE EQU   ZZ2AQD+4
ZZ2AQDOF EQU   ZZ2AQD
ZZ2AQD00 EQU   ZZ2AQD
ZZ2AQAS9 EQU   ZZ2AQAS+16
@NM00040 EQU   ZZ2AQAS+12
ZZ2AQAS2 EQU   ZZ2AQAS+8
ZZ2AQAS1 EQU   ZZ2AQAS+4
@NM00039 EQU   ZZ2AQAS+2
ZZ2AQAST EQU   ZZ2AQAS
ZZ2AQAS0 EQU   ZZ2AQAS
ZZ2AZZ6P EQU   ZZ2A+140
ZZ2ADPTA EQU   ZZ2ADPT
ZZ2ADPL  EQU   ZZ2ADP
ZZ2ADMTA EQU   ZZ2ADMT
ZZ2ADML  EQU   ZZ2ADM
ZZ2ADDTA EQU   ZZ2ADDT
ZZ2ADDL  EQU   ZZ2ADD
@NM00038 EQU   ZZ2A+72
ZZ2APIDB EQU   ZZ2APID+3
ZZ2APIDA EQU   ZZ2APID
@NM00037 EQU   ZZ2A+24
@NM00036 EQU   ZZ2AF+5
ZZ2AFX   EQU   ZZ2AF+5
@NM00035 EQU   ZZ2AF+3
ZZ2AFS   EQU   ZZ2AF+2
ZZ2AFD   EQU   ZZ2AF+2
ZZ2AFQ   EQU   ZZ2AF+2
ZZ2AF$   EQU   ZZ2AF+2
@NM00034 EQU   ZZ2AF+2
ZZ2AFM   EQU   ZZ2AF+2
@NM00033 EQU   ZZ2AF+2
@NM00032 EQU   ZZ2AF+1
ZZ2AFV   EQU   ZZ2AF+1
@NM00031 EQU   ZZ2AF+1
@NM00030 EQU   ZZ2AF
ZZ2AFFS  EQU   ZZ2AF
ZZ2AFT   EQU   ZZ2AF
ZZ2AFP   EQU   ZZ2AF
@NM00029 EQU   ZZ2A+8
ZZ2ALINE EQU   ZZ2A+4
@NM00028 EQU   ZZ2A+3
ZZ2ASE   EQU   ZZ2A+2
ZZ2ACH   EQU   ZZ2A
@NM00027 EQU   ZZ2+264
@NM00026 EQU   ZZ2+263
ZZ2PRTT0 EQU   ZZ2PRTT
ZZ2PRTO  EQU   ZZ2PRT+2
ZZ2PRTL  EQU   ZZ2PRT
@NM00025 EQU   ZZ2AMD+56
ZZ2AMDXP EQU   ZZ2AMD+52
ZZ2AMDD  EQU   ZZ2AMD+48
ZZ2AMDL  EQU   ZZ2AMD+44
ZZ2AMDU  EQU   ZZ2AMD+28
ZZ2AMDF  EQU   ZZ2AMD+24
ZZ2AMDS  EQU   ZZ2AMD+20
ZZ2AMDC  EQU   ZZ2AMD+16
ZZ2AMDP  EQU   ZZ2AMD+12
ZZ2AMDB  EQU   ZZ2AMD+8
@NM00024 EQU   @NM00023
ZZ2AMD2  EQU   @NM00023
ZZ2AMD1  EQU   @NM00023
ZZ2AMD0  EQU   ZZ2AMD+6
ZZ2AMDA  EQU   ZZ2AMD+4
ZZ2AMDT  EQU   ZZ2AMD
ZZ199999 EQU   ZZ1+3072
@NM00022 EQU   ZZ1+2160
ZZ1TRTAS EQU   ZZ1+1904
ZZ1TRUPC EQU   ZZ1+1648
ZZ1TRCTX EQU   ZZ1+1392
ZZ1NASID EQU   ZZ1N+274
ZZ1NSTRL EQU   ZZ1N+272
ZZ1NOFF  EQU   ZZ1N+268
ZZ1NBDY  EQU   ZZ1N+264
ZZ1NADE  EQU   ZZ1N+260
ZZ1NADB  EQU   ZZ1N+256
ZZ1NSTR  EQU   ZZ1N
@NM00021 EQU   ZZ1+1080
ZZ1TREBC EQU   ZZ1+824
ZZ1TRHEX EQU   ZZ1+568
@NM00020 EQU   ZZ1+377
ZZ1USTAE EQU   ZZ1+376
@NM00019 EQU   ZZ1F+1
@NM00018 EQU   ZZ1F
ZZ1FM    EQU   ZZ1F
ZZ1FX    EQU   ZZ1F
ZZ1FU    EQU   ZZ1F
ZZ1EVEC  EQU   ZZ1EVE+1
@NM00017 EQU   ZZ1EVE
ZZ1EVEW  EQU   ZZ1EVE
ZZ1ACMP  EQU   ZZ1ATTN
@NM00016 EQU   ZZ1+144
ZZ1FPP   EQU   ZZ1+140
ZZ1ZZ6P  EQU   ZZ1+136
@NM00015 EQU   ZZ1+84
ZZ1PLINE EQU   ZZ1+80
ZZ1PGSZ  EQU   ZZ1+76
ZZ1PCNT  EQU   ZZ1+72
@NM00014 EQU   ZZ1+68
ZZ1TPAGE EQU   ZZ1+64
ZZ1TLINE EQU   ZZ1+60
@NM00013 EQU   ZZ1+52
ZZ1DMCBP EQU   ZZ1+48
ZZ1DSDP  EQU   ZZ1+44
ZZ1PDRP  EQU   ZZ1+40
ZZ1ZZ2P  EQU   ZZ1+36
ZZ1327WP EQU   ZZ1+32
ZZ1ACBP  EQU   ZZ1+28
@NM00012 EQU   ZZ1+24
ZZ1PDCBP EQU   ZZ1+20
ZZ1BLRBL EQU   ZZ1+16
@NM00011 EQU   ZZ1+12
ZZ1PNULL EQU   ZZ1+8
ZZ1NULL  EQU   ZZ1+4
ZZ1IDE   EQU   ZZ1
DSDRES1  EQU   DSDREC+61
DSDKPNUM EQU   DSDKPID+3
DSDKPREF EQU   DSDKPID
DSDKMEMN EQU   DSDKDSNM+44
DSDKDSN  EQU   DSDKDSNM
@NM00010 EQU   DSC+8
@NM00009 EQU   DSC+7
DSCQF8   EQU   DSCQF
DSCQF7   EQU   DSCQF
DSCQF6   EQU   DSCQF
DSCQF5   EQU   DSCQF
DSCQF4   EQU   DSCQF
DSCQF3   EQU   DSCQF
DSCQF2   EQU   DSCQF
DSCQL    EQU   DSC+4
@NM00008 EQU   PRN+8
@NM00007 EQU   PRN+7
PRNIF8   EQU   PRNIF
PRNIF7   EQU   PRNIF
PRNIF6   EQU   PRNIF
PRNIF5   EQU   PRNIF
PRNIF4   EQU   PRNIF
PRNIF3   EQU   PRNIF
PRNIF2   EQU   PRNIF
PRNIFP   EQU   PRNIF
PRNIL    EQU   PRN+4
@NM00006 EQU   DSNS+24
@NM00005 EQU   DSNS+23
DSNSPF8  EQU   DSNSPF
DSNSPF7  EQU   DSNSPF
DSNSPF6  EQU   DSNSPF
DSNSPF5  EQU   DSNSPF
DSNSPF4  EQU   DSNSPF
DSNSPF3  EQU   DSNSPF
DSNSPF2  EQU   DSNSPF
DSNSPFP  EQU   DSNSPF
DSNSPL   EQU   DSNS+20
@NM00004 EQU   DSNS+15
DSNSMF8  EQU   DSNSMF
DSNSMF7  EQU   DSNSMF
DSNSMF6  EQU   DSNSMF
DSNSMF5  EQU   DSNSMF
DSNSMF4  EQU   DSNSMF
DSNSMF3  EQU   DSNSMF
DSNSMF2  EQU   DSNSMF
DSNSMFP  EQU   DSNSMF
DSNSML   EQU   DSNS+12
@NM00003 EQU   DSNS+7
@NM00002 EQU   DSNSDF
DSNSDFQ  EQU   DSNSDF
DSNSDFP  EQU   DSNSDF
DSNSDL   EQU   DSNS+4
PDL      EQU   PD+5
PDSP     EQU   PD+4
PDXP     EQU   PD+1
@NM00001 EQU   PD
*                                      END UNREFERENCED COMPONENTS
@RC00179 EQU   @RC00178
@RC00184 EQU   @RC00183
@RC00189 EQU   @RC00188
@RC00174 EQU   @RC00170
@RC00172 EQU   @RC00170
@RC00227 EQU   @EL00002
@RC00252 EQU   @EL00002
@RC00176 EQU   @RC00174
@RC00231 EQU   @RC00227
@RF00193 EQU   @RC00176
@RC00236 EQU   @RC00231
@RC00239 EQU   @RC00236
@ENDDATA EQU   *
         END   BLSFOD00,(C'PLS2105',0701,78065)
