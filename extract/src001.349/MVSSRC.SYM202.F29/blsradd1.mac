ADD1     TITLE 'BLSRADD1--RESOLVE ONE ADDRESS EXPRESSION               *
                        '
*/* CHANGE ACTIVITY -------------------------------------------------*/
*/*   THIS MODULE WAS WRITTEN FOR @G57LPLK                           */
*/*------------------------------------------------------------------*/
BLSRADD1 CSECT ,                                                01S0002
@MAINENT DS    0H                                               01S0002
         USING *,@15                                            01S0002
         B     @PROLOG                                          01S0002
         DC    AL1(16)                                          01S0002
         DC    C'BLSRADD1  78.057'                              01S0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0002
         BALR  @12,0                                            01S0002
@PSTART  DS    0H                                               01S0002
         USING @PSTART,@12                                      01S0002
         L     @00,@SIZDATD                                     01S0002
         BLSUALLS R,LV=(0)
         LR    @11,@01                                          01S0002
         USING @DATD,@11                                        01S0002
         ST    @13,@SA00001+4                                   01S0002
         LM    @00,@01,20(@13)                                  01S0002
         ST    @11,8(,@13)                                      01S0002
         LR    @13,@11                                          01S0002
         MVC   @PC00001(24),0(@01)                              01S0002
*   FLAG='00'X;                     /* PROCESSING CONTROL FLAGS      */
         MVI   FLAG,X'00'                                       01S0205
*   PBADPTR=ADDR(PDAD);             /* ->PBAD (ALIAS FOR PDAD)       */
         L     PBADPTR,@PC00001+16                              01S0206
*   ESBAPTR=ADDR(ESPA);             /* ->ESBA (ALIAS FOR ESPA)       */
         L     ESBAPTR,@PC00001+4                               01S0207
*   ESBA(1:LENGTH(ESCO))=ESCO;      /* INITIALIZE PARAMETER RECORD   */
         MVC   ESBA(182,ESBAPTR),ESCO                           01S0208
*   RETC=ZZZFLAGI;                  /* RETURN CODE                   */
         SLR   RETC,RETC                                        01S0209
*   IF PBADATR='1'B×PBADATS='1'B THEN                           01S0210
*                                                               01S0210
         TM    PBADATR(PBADPTR),B'11000000'                     01S0210
         BZ    @RF00210                                         01S0210
*     /***************************************************************/
*     /*                                                             */
*     /* SYMBOLIC, OR RELATIVE ADDRESS                               */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0211
*     DO;                           /* SYMBOLIC OR RELATIVE ADDRESS  */
*       IF PBADATS='1'B THEN        /* SYMBOLIC ADDRESS              */
         TM    PBADATS(PBADPTR),B'10000000'                     01S0212
         BNO   @RF00212                                         01S0212
*         ESBASYM(1:PBADAL)=PBADA(1:PBADAL);/* SYMBOL                */
         LH    @14,PBADAL(,PBADPTR)                             01S0213
         BCTR  @14,0                                            01S0213
         L     @10,PBADAP(,PBADPTR)                             01S0213
         EX    @14,@SM01787                                     01S0213
*       ELSE                        /* RELATIVE ADDRESS              */
*         ESBASYM(1:1)='X';         /* SET DEFAULT SYMBOL            */
         B     @RC00212                                         01S0214
@RF00212 MVI   ESBASYM(ESBAPTR),C'X'                            01S0214
*       IF PBADAI=0&                /* NO INDIRECT ADDRESSING        */
*           PBADAEP=ZZZPNULL THEN   /* NO EXPRESSION(S)              */
*                                                               01S0215
@RC00212 ICM   @14,3,PBADAI(PBADPTR)                            01S0215
         BNZ   @RF00215                                         01S0215
         CLC   PBADAEP(4,PBADPTR),@CF00078                      01S0215
         BNE   @RF00215                                         01S0215
*         /***********************************************************/
*         /*                                                         */
*         /* OVERRIDE DATA TYPE                                      */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0216
*         DO;                       /* OVERRIDE DATA TYPE            */
*           CALL E200;              /* OVERRIDE DATA TYPE            */
         BAL   @14,E200                                         01S0217
*           IF RETC^=ZZZFLAGI THEN  /* UNSUCCESSFUL COMPLETION       */
         LTR   RETC,RETC                                        01S0218
         BNZ   @RT00218                                         01S0218
*             GO TO EXIT;           /* COMMON EXIT PATH              */
*           IF ESBADTD^=ZZZSYM40 THEN/* EXPLICIT COMPLEX DATA TYPE   */
*                                                               01S0220
         CLC   ESBADTD(31,ESBAPTR),@CC00188                     01S0220
         BE    @RF00220                                         01S0220
*             /*******************************************************/
*             /*                                                     */
*             /* EXPLICIT COMPLEX DATA TYPE                          */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S0221
*             DO;                   /* EXPLICIT COMPLEX DATA TYPE    */
*               FLAGEDT='1'B;       /* EXPLICIT COMPLEX DATA TYPE    */
         OI    FLAGEDT,B'01000000'                              01S0222
*               DTX=ESBADT;         /* REQUESTED DATA TYPE           */
         MVC   DTX(34),ESBADT(ESBAPTR)                          01S0223
*             END;                  /* EXPLICIT COMPLEX DATA TYPE    */
*           ELSE                    /* SIMPLE OR IMPLICIT DATA TYPE  */
*             ESBADT=ZZ2AQDT;       /* DEFAULT DATA TYPE             */
         B     @RC00220                                         01S0225
@RF00220 MVC   ESBADT(34,ESBAPTR),ZZ2AQDT(R9)                   01S0225
*         END;                      /* OVERRIDE DATA TYPE            */
@RC00220 DS    0H                                               01S0227
*       CALL BLSRESGU(ZZ2,ESBA);    /* RETRIEVE EQUATED SYMBOL       */
@RF00215 ST    R9,@AL00001                                      01S0227
         ST    ESBAPTR,@AL00001+4                               01S0227
         L     @10,ZZ2RVTP(,R9)                                 01S0227
         L     @15,RVTESGUP(,@10)                               01S0227
         LA    @01,@AL00001                                     01S0227
         BALR  @14,@15                                          01S0227
*       IF RF>ZZZFLAGI THEN         /* SYMBOL NOT FOUND              */
*                                                               01S0228
         LTR   RF,RF                                            01S0228
         BNP   @RF00228                                         01S0228
*         /***********************************************************/
*         /*                                                         */
*         /* SYMBOL NOT FOUND                                        */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0229
*         DO;                       /* SYMBOL NOT FOUND              */
*           RETC=MAX(RETC,ZZZFLAGS);/* RETURN CODE                   */
         LA    @14,12                                           01S0230
         CR    RETC,@14                                         01S0230
         BNL   *+6
         LR    RETC,@14                                         01S0230
*           GO TO EXIT;             /* COMMON EXIT PATH              */
         B     EXIT                                             01S0231
*         END;                      /* SYMBOL NOT FOUND              */
*       IF FLAGEDT='1'B&            /* EXPLICIT COMPLEX NEW DATA TYPE*/
*           (ESBADTY=ZZZDTYM×       /* STRUCTURE DATA TYPE OR        */
*           ESBADTY=ZZZDTYU) THEN   /* AREA DATA TYPE                */
@RF00228 TM    FLAGEDT,B'01000000'                              01S0233
         BNO   @RF00233                                         01S0233
         CLI   ESBADTY(ESBAPTR),C'M'                            01S0233
         BE    @RT00233                                         01S0233
         CLI   ESBADTY(ESBAPTR),C'U'                            01S0233
         BNE   @RF00233                                         01S0233
@RT00233 DS    0H                                               01S0234
*         DO;                                                   01S0234
*           IF ESBADTY=ZZZDTYM THEN /* STRUCTURE DATA TYPE           */
         CLI   ESBADTY(ESBAPTR),C'M'                            01S0235
         BNE   @RF00235                                         01S0235
*             DTDTPTR=RVTDTMTP;     /* ->BLSRDTMT                    */
         L     @14,ZZ2RVTP(,R9)                                 01S0236
         L     DTDTPTR,RVTDTMTP(,@14)                           01S0236
*           ELSE                    /* MUST AREA DATA TYPE           */
*             DTDTPTR=RVTDTUTP;     /* ->BLSRDTUT                    */
         B     @RC00235                                         01S0237
@RF00235 L     @14,ZZ2RVTP(,R9)                                 01S0237
         L     DTDTPTR,RVTDTUTP(,@14)                           01S0237
*           DO;                     /* BLRSRCH(ESBADTD) ARRAY(DTDTDTD
*                                      )DIMENSION(DTDTDIM)SET(I1)    */
@RC00235 DS    0H                                               01S0239
*             I1=0;                 /* CURRENT POSITION              */
         SLR   I1,I1                                            01S0239
*             SCH0001G=DTDTDIM;     /* PROBE DISTANCE                */
*                                                               01S0240
         L     SCH0001G,DTDTDIM(,DTDTPTR)                       01S0240
*             /*******************************************************/
*             /*                                                     */
*             /* SEARCH SORTED ARRAY DTDTDTD FOR ESBADTD             */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S0241
*             DO WHILE(SCH0001G>0); /* SEARCH SORTED ARRAY           */
         B     @DE00241                                         01S0241
@DL00241 DS    0H                                               01S0242
*               SCH0001A=I1+SCH0001G;/* PROBE POSITION               */
         LR    SCH0001A,I1                                      01S0242
         ALR   SCH0001A,SCH0001G                                01S0242
*               IF SCH0001A>DTDTDIM THEN/* PROBE BEYOND ARRAY        */
         CL    SCH0001A,DTDTDIM(,DTDTPTR)                       01S0243
         BNH   @RF00243                                         01S0243
*                 IF SCH0001G=1 THEN/* ADJACENT ARRAY ENTRIES        */
*                                                               01S0244
         CL    SCH0001G,@CF00056                                01S0244
         BNE   @RF00244                                         01S0244
*                   /*************************************************/
*                   /*                                               */
*                   /* ESBADTD COLLATES HIGHER THAN DTDTDTD(DTDTDIM) */
*                   /*                                               */
*                   /*************************************************/
*                                                               01S0245
*                   DO;             /* ADJACENT ARRAY ENTRIES        */
*                     I1=0;         /* SEARCH IS UNSUCCESSFUL        */
         SLR   I1,I1                                            01S0246
*                     SCH0001G=0;   /* SEARCH IS COMPLETE            */
         SLR   SCH0001G,SCH0001G                                01S0247
*                   END;            /* ADJACENT ARRAY ENTRIES        */
*                 ELSE              /* INTERVENING ENTRY(IES)        */
*                   ;               /* NEW PROBE POSITION            */
@RF00244 DS    0H                                               01S0250
*               ELSE                /* PROBE POSITION IN ARRAY       */
*                 IF DTDTDTD(SCH0001A)<=ESBADTD THEN            01S0250
*                                                               01S0250
         B     @RC00243                                         01S0250
@RF00243 LR    @14,SCH0001A                                     01S0250
         MH    @14,@CH01774                                     01S0250
         ALR   @14,DTDTPTR                                      01S0250
         AL    @14,@CF01790                                     01S0250
         CLC   DTDTDTD-13(31,@14),ESBADTD(ESBAPTR)              01S0250
         BH    @RF00250                                         01S0250
*                   /*************************************************/
*                   /*                                               */
*                   /* SEARCH HIGHER IN ARRAY                        */
*                   /*                                               */
*                   /*************************************************/
*                                                               01S0251
*                   DO;             /* CURRENT POSITION TOO LOW      */
*                     BC(7,SCH0001L);/* IF DTDTDTD(SCH0001A)=ESBADTD
*                                      THEN SEARCH IS SUCCESSFUL     */
         BC    7,SCH0001L                                       01S0252
*                     SCH0001G=0;   /* SEARCH IS COMPLETE            */
         SLR   SCH0001G,SCH0001G                                01S0253
*SCH0001L:                          /* ELSE CONTINUE THE SEARCH      */
*                     I1=SCH0001A;  /* CURRENT POSITION              */
SCH0001L LR    I1,SCH0001A                                      01S0254
*                   END;            /* CURRENT POSITION TOO LOW      */
*                 ELSE              /* CURRENT POSITION HIGH ENOUGH  */
*                   IF SCH0001G=1 THEN/* ADJACENT ARRAY ENTRIES      */
*                                                               01S0256
         B     @RC00250                                         01S0256
@RF00250 CL    SCH0001G,@CF00056                                01S0256
         BNE   @RF00256                                         01S0256
*                     /***********************************************/
*                     /*                                             */
*                     /* ESBADTD COLLATES BETWEEN ENTRIES OR LOW     */
*                     /*                                             */
*                     /***********************************************/
*                                                               01S0257
*                     DO;           /* ADJACENT ARRAY ENTRIES        */
*                       I1=0;       /* SEARCH IS UNSUCCESSFUL        */
         SLR   I1,I1                                            01S0258
*                       SCH0001G=0; /* SEARCH IS COMPLETE            */
         SLR   SCH0001G,SCH0001G                                01S0259
*                     END;          /* ADJACENT ARRAY ENTRIES        */
*               SCH0001G=SCH0001G+1;/* PROBE DISTANCE                */
@RF00256 DS    0H                                               01S0261
@RC00250 DS    0H                                               01S0261
@RC00243 AL    SCH0001G,@CF00056                                01S0261
*               SRL(SCH0001G,1);    /* PROBE DISTANCE                */
         SRL   SCH0001G,1                                       01S0262
*             END;                  /* SEARCH SORTED ARRAY           */
@DE00241 SLR   @14,@14                                          01S0263
         CLR   SCH0001G,@14                                     01S0263
         BH    @DL00241                                         01S0263
*           END;                    /* BLRSRCH(ESBADTD) ARRAY(DTDTDTD
*                                      )DIMENSION(DTDTDIM)SET(I1)    */
*           IF I1^=0 THEN           /* IF ENTRY FOUND                */
         CR    I1,@14                                           01S0265
         BE    @RF00265                                         01S0265
*             DO;                                               01S0266
*               K1=DTDTDTN(I1);     /* INDEX OF ROOT VALUE           */
         LA    @14,52                                           01S0267
         LR    @01,I1                                           01S0267
         MR    @00,@14                                          01S0267
         AL    @01,@CF01791                                     01S0267
         L     K1,DTDTDTN-44(@01,DTDTPTR)                       01S0267
*               IF DTXD(1:DTDTDTL(K1))^=/* DOES OLD NAME             */
*                   DTDTDTD(K1,1:DTDTDTL(K1)) THEN/* DIFFER FROM ROOT
*                                      OF NEW DATA TYPE              */
         LR    @01,@14                                          01S0268
         MR    @00,K1                                           01S0268
         LR    @14,DTDTPTR                                      01S0268
         AL    @14,@CF01792                                     01S0268
         SLR   @10,@10                                          01S0268
         IC    @10,DTDTDTL-12(@01,@14)                          01S0268
         BCTR  @10,0                                            01S0268
         ALR   @01,DTDTPTR                                      01S0268
         AL    @01,@CF01790                                     01S0268
         EX    @10,@SC01793                                     01S0268
         BE    @RF00268                                         01S0268
*                 FLAGEDT='0'B;     /* NO EXPLICIT COMPLEX DATA TYPE */
         NI    FLAGEDT,B'10111111'                              01S0269
*               ELSE                                            01S0270
*                 ;                 /* ROOT VALUES ARE EQUAL         */
@RF00268 DS    0H                                               01S0271
*             END;                                              01S0271
*           ELSE                    /* ENTRY NOT FOUND               */
*             FLAGEDT='0'B;         /* NO EXPLICIT COMPLEX DATA TYPE */
         B     @RC00265                                         01S0272
@RF00265 NI    FLAGEDT,B'10111111'                              01S0272
*         END;                                                  01S0273
*       ELSE                        /* NOT A SPECIAL CASE            */
*         IF FLAGEDT='1'B&          /* EXPLICIT COMPLEX NEW DATA TYPE*/
*             DTX^=ESBADT THEN      /* DIFFFERS FROM EXISTING TYPE   */
         B     @RC00233                                         01S0274
@RF00233 TM    FLAGEDT,B'01000000'                              01S0274
         BNO   @RF00274                                         01S0274
         CLC   DTX(34),ESBADT(ESBAPTR)                          01S0274
         BE    @RF00274                                         01S0274
*           FLAGEDT='0'B;           /* NO EXPLICIT COMPLEX DATA TYPE */
         NI    FLAGEDT,B'10111111'                              01S0275
*       FLAGDDT='1'B;               /* DEFAULT DATA TYPE SUPPLIED    */
@RF00274 DS    0H                                               01S0276
@RC00233 OI    FLAGDDT,B'10000000'                              01S0276
*       IF PDADATR='1'B THEN        /* RELATIVE ADDRESS              */
*                                                               01S0277
         L     @14,@PC00001+16                                  01S0277
         TM    PDADATR(@14),B'01000000'                         01S0277
         BNO   @RF00277                                         01S0277
*         /***********************************************************/
*         /*                                                         */
*         /* RELATIVE ADDRESS                                        */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0278
*         DO;                       /* RELATIVE ADDRESS              */
*           DO;                     /* BLRCNVCP(PBADA(1:PBADAL)) FROM
*                                      (CHARACTER)TO(POINTER)SET(NEWD
*                                      OF)REMARK(OFFSET)TR(ZZ1TRCTX) */
*                                                               01S0279
*             /*******************************************************/
*             /*                                                     */
*             /* OFFSET                                              */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S0280
*             ZONED='0000000000000000';/* PAD INTERMEDIATE           */
         MVC   ZONED(16),@CC01737                               01S0280
*             ZONED(17-(PBADAL):16)=PBADA(1:PBADAL);/* RIGHT ALIGN
*                                      EBCDIC DIGIT                  */
         LA    @14,17                                           01S0281
         SH    @14,PBADAL(,PBADPTR)                             01S0281
         LA    @10,ZONED-1(@14)                                 01S0281
         LCR   @14,@14                                          01S0281
         AH    @14,@CH00067                                     01S0281
         L     @08,PBADAP(,PBADPTR)                             01S0281
         EX    @14,@SM01797                                     01S0281
*             TR(ZONED,ZZ1TRCTX);   /* EBCDIC=>ZONED HEXADECIMAL     */
         L     @14,ZZ2ZZ1P(,R9)                                 01S0282
         TR    ZONED(16),ZZ1TRCTX(@14)                          01S0282
*             PACK(PTRBIT,ZONED(1:15));/* ZONED HEXADECIMAL=>BIT     */
         PACK  PTRBIT(4),ZONED(15)                              01S0283
*             MVN(PTRBIT(25:32),ZONED(16:16));/* FINAL FOUR BITS     */
         MVN   PTRBIT+3(1),ZONED+15                             01S0284
*             NEWDOF=PTRPTR;        /* POINTER RESULT                */
         L     NEWDOF,PTRPTR                                    01S0285
*           END;                    /* BLRCNVCP(PBADA(1:PBADAL)) FROM
*                                      (CHARACTER)TO(POINTER)SET(NEWD
*                                      OF)REMARK(OFFSET)TR(ZZ1TRCTX) */
*           IF FLAGEOFF='1'B THEN   /* EXPLICIT OFFSET               */
         TM    FLAGEOFF,B'00100000'                             01S0287
         BNO   @RF00287                                         01S0287
*             NEWDOF=NEWDOF+ESBADOF;/* NEW OFFSET                    */
         AL    NEWDOF,ESBADOF(,ESBAPTR)                         01S0288
*           CALL E210;              /* OVERRIDE OFFSET               */
@RF00287 BAL   @14,E210                                         01S0289
*         END;                      /* RELATIVE ADDRESS              */
*     END;                          /* SYMBOLIC OR RELATIVE ADDRESS  */
*   ELSE                            /* NEITHER SYMBOLIC NOR RELATIVE */
*     IF PBADATG='1'B×PBADATD='1'B×PBADATE='1'B THEN            01S0292
*                                                               01S0292
         B     @RC00210                                         01S0292
@RF00210 TM    PBADATG(PBADPTR),B'00111000'                     01S0292
         BZ    @RF00292                                         01S0292
*       /*************************************************************/
*       /*                                                           */
*       /* REGISTER EXPRESSION                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0293
*       DO;                         /* REGISTER EXPRESSION           */
*         ESBAAS=ESCOAS;            /* DEFAULT ADDRESS SPACE DATA    */
         MVC   ESBAAS(16,ESBAPTR),ESCOAS                        01S0294
*         ESBADFA='1'B;             /* ARRAY                         */
         OI    ESBADFA(ESBAPTR),B'10000000'                     01S0295
*         ESBADIM=1;                /* DIMENSION                     */
         MVC   ESBADIM(4,ESBAPTR),@CF00056                      01S0296
*         DO;                       /* BLRCNVCU(PBADA(1:PBADAL))
*                                      FROM(CHARACTER)TO(UNSIGNED BIN
*                                      ARY)SET(ESBADIL)REMARK(REGISTE
*                                      R NUMBER)                     */
*                                                               01S0297
*           /*********************************************************/
*           /*                                                       */
*           /* REGISTER NUMBER                                       */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0298
*           ZONED='0000000000000000';/* PAD INTERMEDIATE             */
         MVC   ZONED(16),@CC01737                               01S0298
*           ZONED(17-(PBADAL):16)=PBADA(1:PBADAL);/* RIGHT ALIGN
*                                      EBCDIC DIGITS                 */
         LA    @14,17                                           01S0299
         SH    @14,PBADAL(,PBADPTR)                             01S0299
         LA    @10,ZONED-1(@14)                                 01S0299
         LCR   @14,@14                                          01S0299
         AH    @14,@CH00067                                     01S0299
         L     @08,PBADAP(,PBADPTR)                             01S0299
         EX    @14,@SM01797                                     01S0299
*           PACK(PACKED,ZONED);     /* EBCDIC=>PACKED DECIMAL        */
         PACK  PACKED(8),ZONED(16)                              01S0300
*           CVB(ESBADIL,PACKED);    /* PACKED DECIMAL=>UNSIGNED 01S0301
*                                      BINARY                        */
         CVB   @14,PACKED                                       01S0301
         ST    @14,ESBADIL(,ESBAPTR)                            01S0301
*         END;                      /* BLRCNVCU(PBADA(1:PBADAL))
*                                      FROM(CHARACTER)TO(UNSIGNED BIN
*                                      ARY)SET(ESBADIL)REMARK(REGISTE
*                                      R NUMBER)                     */
*         ESBADOF=ESBADIL*4;        /* OFFSET                        */
         SLA   @14,2                                            01S0303
         ST    @14,ESBADOF(,ESBAPTR)                            01S0303
*         IF ZZ6DFAB='1'B THEN      /* ABSOLUTE STORAGE DUMP         */
*                                                               01S0304
         L     @14,ZZ2AZZ6P(,R9)                                01S0304
         TM    ZZ6DFAB(@14),B'00010000'                         01S0304
         BNO   @RF00304                                         01S0304
*           /*********************************************************/
*           /*                                                       */
*           /* ABSOLUTE STORAGE DUMP                                 */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0305
*           DO;                     /* ABSOLUTE STORAGE DUMP         */
*             ESBAAST=ZZZASTC;      /* CPU STATUS ADDRESS SPACE      */
         MVC   ESBAAST(2,ESBAPTR),@CC00084                      01S0306
*             ESBAAS1=ZZ2AQAS1;     /* IMPLICIT CPU ADDRESS          */
         MVC   ESBAAS1(4,ESBAPTR),ZZ2AQAS1(R9)                  01S0307
*             ESBAAS2=ZZZAS2NU;     /* NO SECONDARY ADDRESS SPACE    */
         SLR   @10,@10                                          01S0308
         ST    @10,ESBAAS2(,ESBAPTR)                            01S0308
*             IF ZZ6DFMP='1'B THEN  /* MULTI-PROCESSOR DUMP          */
         TM    ZZ6DFMP(@14),B'00100000'                         01S0309
         BNO   @RF00309                                         01S0309
*               CALL BLSRADD4(ZZ2,ESBA,PD,PXAO);/* PROCESS EXPLICIT
*                                      CPU ADDRESS                   */
         ST    R9,@AL00001                                      01S0310
         ST    ESBAPTR,@AL00001+4                               01S0310
         L     @14,@PC00001+8                                   01S0310
         ST    @14,@AL00001+8                                   01S0310
         L     @14,@PC00001+12                                  01S0310
         ST    @14,@AL00001+12                                  01S0310
         L     @10,ZZ2RVTP(,R9)                                 01S0310
         L     @15,RVTADD4P(,@10)                               01S0310
         LA    @01,@AL00001                                     01S0310
         BALR  @14,@15                                          01S0310
*             IF PBADATG='1'B THEN  /* GENERAL PURPOSE REGISTER      */
@RF00309 TM    PBADATG(PBADPTR),B'00100000'                     01S0311
         BNO   @RF00311                                         01S0311
*               ESBALAD=ADDR(HSDCGPR)-ADDR(HSDCPSA);            01S0312
         MVC   ESBALAD(4,ESBAPTR),@CF01775                      01S0312
*             ELSE                  /* FLOATING POINT REGISTER       */
*               ESBALAD=ADDR(HSDCFPR)-ADDR(HSDCPSA);            01S0313
         B     @RC00311                                         01S0313
@RF00311 MVC   ESBALAD(4,ESBAPTR),@CF01776                      01S0313
*           END;                    /* ABSOLUTE STORAGE DUMP         */
*         ELSE                      /* VIRTUAL STORAGE DUMP          */
*                                                               01S0315
*           /*********************************************************/
*           /*                                                       */
*           /* VIRTUAL STORAGE DUMP                                  */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0315
*           DO;                     /* VIRTUAL STORAGE DUMP          */
         B     @RC00304                                         01S0315
@RF00304 DS    0H                                               01S0316
*             ESBAAST=ZZZASTH;      /* CPU STATUS ADDRESS SPACE      */
         MVC   ESBAAST(2,ESBAPTR),@CC00092                      01S0316
*             IF PBADATG='1'B THEN  /* GENERAL PURPOSE REGISTER      */
         TM    PBADATG(PBADPTR),B'00100000'                     01S0317
         BNO   @RF00317                                         01S0317
*               ESBALAD=ADDR(HSDHVGPR)-ADDR(HSDHV);             01S0318
         MVC   ESBALAD(4,ESBAPTR),@CF01777                      01S0318
*             ELSE                  /* FLOATING POINT REGISTER       */
*               ESBALAD=ADDR(HSDHVFPR)-ADDR(HSDHV);             01S0319
         B     @RC00317                                         01S0319
@RF00317 MVC   ESBALAD(4,ESBAPTR),@CF01778                      01S0319
*           END;                    /* VIRTUAL STORAGE DUMP          */
@RC00317 DS    0H                                               01S0321
*         IF PBADATG='1'B THEN      /* GENERAL PURPOSE REGISTER      */
*                                                               01S0321
@RC00304 TM    PBADATG(PBADPTR),B'00100000'                     01S0321
         BNO   @RF00321                                         01S0321
*           /*********************************************************/
*           /*                                                       */
*           /* GENERAL PURPOSE REGISTER                              */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0322
*           DO;                     /* GENERAL PURPOSE REGISTER      */
*             ESBADT=DTA;           /* DEFAULT DATA TYPE             */
         MVC   ESBADT(34,ESBAPTR),DTA                           01S0323
*             ESBADLE=4;            /* DEFAULT LENGTH                */
         MVC   ESBADLE(4,ESBAPTR),@CF00053                      01S0324
*           END;                    /* GENERAL PURPOSE REGISTER      */
*         ELSE                      /* FLOATING POINT REGISTER       */
*                                                               01S0326
*           /*********************************************************/
*           /*                                                       */
*           /* FLOATING POINT REGISTER                               */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0326
*           DO;                     /* FLOATING POINT REGISTER       */
         B     @RC00321                                         01S0326
@RF00321 DS    0H                                               01S0327
*             IF PBADATE='1'B&      /* SINGLE PRECISION REQUEST      */
*                 ZZ2ASE=ZZZFLAGI THEN/* FLAG(INFORMATIONAL)         */
         TM    PBADATE(PBADPTR),B'00001000'                     01S0327
         BNO   @RF00327                                         01S0327
         CLI   ZZ2ASE(R9),0                                     01S0327
         BNE   @RF00327                                         01S0327
*               CALL BLSUTRMV(ZZ2,M2);/* TRANSMIT M2                 */
         ST    R9,@AL00001                                      01S0328
         LA    @14,M2                                           01S0328
         ST    @14,@AL00001+4                                   01S0328
         L     @15,ZZ2TRMVP(,R9)                                01S0328
         LA    @01,@AL00001                                     01S0328
         BALR  @14,@15                                          01S0328
*             ESBADT=DTB;           /* DEFAULT DATA TYPE             */
@RF00327 MVC   ESBADT(34,ESBAPTR),DTB                           01S0329
*             ESBADLE=8;            /* DEFAULT LENGTH                */
         MVC   ESBADLE(4,ESBAPTR),@CF00064                      01S0330
*           END;                    /* FLOATING POINT REGISTER       */
*         FLAGDDT='1'B;             /* DEFAULT DATA TYPE SUPPLIED    */
@RC00321 OI    FLAGDDT,B'10000000'                              01S0332
*       END;                        /* REGISTER EXPRESSION           */
*     ELSE                          /* LITERAL ADDRESS               */
*                                                               01S0334
*       /*************************************************************/
*       /*                                                           */
*       /* LITERAL ADDRESS                                           */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0334
*       DO;                         /* LITERAL ADDRESS               */
         B     @RC00292                                         01S0334
@RF00292 DS    0H                                               01S0335
*         CALL BLSRADD2(ZZ2,ESBA,PD,PXAO);/* GENERATE ADDRESS SPACE  */
         ST    R9,@AL00001                                      01S0335
         ST    ESBAPTR,@AL00001+4                               01S0335
         L     @14,@PC00001+8                                   01S0335
         ST    @14,@AL00001+8                                   01S0335
         L     @14,@PC00001+12                                  01S0335
         ST    @14,@AL00001+12                                  01S0335
         L     @10,ZZ2RVTP(,R9)                                 01S0335
         L     @15,RVTADD2P(,@10)                               01S0335
         LA    @01,@AL00001                                     01S0335
         BALR  @14,@15                                          01S0335
*         DO;                       /* BLRCNVCP(PBADA(1:PBADAL)) FROM
*                                      (CHARACTER)TO(POINTER)SET(ESBA
*                                      LAD)REMARK(LOGICAL       01S0336
*                                      ADDRESS)TR(ZZ1TRCTX)          */
*                                                               01S0336
*           /*********************************************************/
*           /*                                                       */
*           /* LOGICAL ADDRESS                                       */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0337
*           ZONED='0000000000000000';/* PAD INTERMEDIATE             */
         MVC   ZONED(16),@CC01737                               01S0337
*           ZONED(17-(PBADAL):16)=PBADA(1:PBADAL);/* RIGHT ALIGN
*                                      EBCDIC DIGIT                  */
         LA    @14,17                                           01S0338
         SH    @14,PBADAL(,PBADPTR)                             01S0338
         LA    @10,ZONED-1(@14)                                 01S0338
         LCR   @14,@14                                          01S0338
         AH    @14,@CH00067                                     01S0338
         L     @08,PBADAP(,PBADPTR)                             01S0338
         EX    @14,@SM01797                                     01S0338
*           TR(ZONED,ZZ1TRCTX);     /* EBCDIC=>ZONED HEXADECIMAL     */
         L     @14,ZZ2ZZ1P(,R9)                                 01S0339
         TR    ZONED(16),ZZ1TRCTX(@14)                          01S0339
*           PACK(PTRBIT,ZONED(1:15));/* ZONED HEXADECIMAL=>BIT       */
         PACK  PTRBIT(4),ZONED(15)                              01S0340
*           MVN(PTRBIT(25:32),ZONED(16:16));/* FINAL FOUR BITS       */
         MVN   PTRBIT+3(1),ZONED+15                             01S0341
*           ESBALAD=PTRPTR;         /* POINTER RESULT                */
         MVC   ESBALAD(4,ESBAPTR),PTRPTR                        01S0342
*         END;                      /* BLRCNVCP(PBADA(1:PBADAL)) FROM
*                                      (CHARACTER)TO(POINTER)SET(ESBA
*                                      LAD)REMARK(LOGICAL       01S0343
*                                      ADDRESS)TR(ZZ1TRCTX)          */
*       END;                        /* LITERAL ADDRESS               */
*   IF RETC>ZZZFLAGE THEN           /* UNSUCCESSFUL COMPLETION       */
@RC00292 DS    0H                                               01S0345
@RC00210 CH    RETC,@CH00064                                    01S0345
         BH    @RT00345                                         01S0345
*     GO TO EXIT;                   /* COMMON EXIT PATH              */
*   CALL BLSRADD3(ZZ2,ESBA,PD,PXAO);/* OVERRIDE ADDRESS SPACE        */
         ST    R9,@AL00001                                      01S0347
         ST    ESBAPTR,@AL00001+4                               01S0347
         L     @14,@PC00001+8                                   01S0347
         ST    @14,@AL00001+8                                   01S0347
         L     @14,@PC00001+12                                  01S0347
         ST    @14,@AL00001+12                                  01S0347
         L     @10,ZZ2RVTP(,R9)                                 01S0347
         L     @15,RVTADD3P(,@10)                               01S0347
         LA    @01,@AL00001                                     01S0347
         BALR  @14,@15                                          01S0347
*   INDIR=PBADAI;                   /* INDIRECTION LEVELS            */
         LH    INDIR,PBADAI(,PBADPTR)                           01S0348
*   IF INDIR>0 THEN                 /* COMPUTE INDIRECT ADDRESS      */
*                                                               01S0349
         LTR   INDIR,INDIR                                      01S0349
         BNP   @RF00349                                         01S0349
*     /***************************************************************/
*     /*                                                             */
*     /* COMPUTE INDIRECT ADDRESS                                    */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0350
*     DO;                           /* COMPUTE INDIRECT ADDRESS      */
*       CALL E100;                  /* COMPUTE INDIRECT ADDRESS      */
         BAL   @14,E100                                         01S0351
*       IF RETC>ZZZFLAGE THEN       /* INDIRECT ADDRESS ERROR        */
         CH    RETC,@CH00064                                    01S0352
         BH    @RT00352                                         01S0352
*         GO TO EXIT;               /* COMMON EXIT PATH              */
*     END;                          /* COMPUTE INDIRECT ADDRESS      */
*   PBADAEBP=PBADAEP;               /* ->PBADAE OR ZZZPNULL          */
@RF00349 L     PBADAEBP,PBADAEP(,PBADPTR)                       01S0355
*   IF PBADAEBP^=ZZZPNULL THEN      /* PROCESS EXPRESSION VALUE PDES */
*                                                               01S0356
         CL    PBADAEBP,@CF00078                                01S0356
         BE    @RF00356                                         01S0356
*     /***************************************************************/
*     /*                                                             */
*     /* PROCESS EXPRESSION VALUE PDE(S)                             */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0357
*     DO;                           /* PROCESS EXPRESSION VALUE PDES */
*       ESBASYM=ZZZSYM40;           /* NO SYMBOL                     */
         MVC   ESBASYM(31,ESBAPTR),@CC00188                     01S0358
*       SIGNCHAR=PBADAS;            /* SIGN OF NEXT EXPRESSION       */
         MVC   SIGNCHAR(1),PBADAS(PBADPTR)                      01S0359
*       RESPECIFY                                               01S0360
*         PBADAE BASED(PBADAEBP);   /* ADDRESS EXPRESSION PDE        */
*       DO WHILE(PBADAEBP^=ZZZPNULL&ZZ1EVEP='0'B);/* PROCESS ALL PDES*/
         B     @DE00361                                         01S0361
@DL00361 DS    0H                                               01S0362
*         IF PBADAEFD='1'B THEN     /* DECIMAL OFFSET                */
         TM    PBADAEFD(PBADAEBP),B'00000100'                   01S0362
         BNO   @RF00362                                         01S0362
*           DO;                     /* BLRCNVCU(PBADAEA(1:PBADAEAL))
*                                      FROM(CHARACTER)TO(UNSIGNED BIN
*                                      ARY)SET(NEWDOF)REMARK(DECIMAL
*                                      OFFSET)                       */
*                                                               01S0363
*             /*******************************************************/
*             /*                                                     */
*             /* DECIMAL OFFSET                                      */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S0364
*             ZONED='0000000000000000';/* PAD INTERMEDIATE           */
         MVC   ZONED(16),@CC01737                               01S0364
*             ZONED(17-(PBADAEAL):16)=PBADAEA(1:PBADAEAL);/* RIGHT
*                                      ALIGN EBCDIC DIGITS           */
         LA    @14,17                                           01S0365
         SH    @14,PBADAEAL(,PBADAEBP)                          01S0365
         LA    @10,ZONED-1(@14)                                 01S0365
         LCR   @14,@14                                          01S0365
         AH    @14,@CH00067                                     01S0365
         L     @08,PBADAEAP(,PBADAEBP)                          01S0365
         EX    @14,@SM01799                                     01S0365
*             PACK(PACKED,ZONED);   /* EBCDIC=>PACKED DECIMAL        */
         PACK  PACKED(8),ZONED(16)                              01S0366
*             CVB(NEWDOF,PACKED);   /* PACKED DECIMAL=>UNSIGNED 01S0367
*                                      BINARY                        */
         CVB   NEWDOF,PACKED                                    01S0367
*           END;                    /* BLRCNVCU(PBADAEA(1:PBADAEAL))
*                                      FROM(CHARACTER)TO(UNSIGNED BIN
*                                      ARY)SET(NEWDOF)REMARK(DECIMAL
*                                      OFFSET)                       */
*         ELSE                      /* HEXADECIMAL OFFSET            */
*           DO;                     /* BLRCNVCP(PBADAEA(1:PBADAEAL))
*                                      FROM(CHARACTER)TO(POINTER)SET(
*                                      NEWDOF)REMARK(HEXADECIMAL
*                                      OFFSET)TR(ZZ1TRCTX)           */
*                                                               01S0369
         B     @RC00362                                         01S0369
@RF00362 DS    0H                                               01S0370
*             /*******************************************************/
*             /*                                                     */
*             /* HEXADECIMAL OFFSET                                  */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S0370
*             ZONED='0000000000000000';/* PAD INTERMEDIATE           */
         MVC   ZONED(16),@CC01737                               01S0370
*             ZONED(17-(PBADAEAL):16)=PBADAEA(1:PBADAEAL);/* RIGHT
*                                      ALIGN EBCDIC DIGIT            */
         LA    @14,17                                           01S0371
         SH    @14,PBADAEAL(,PBADAEBP)                          01S0371
         LA    @10,ZONED-1(@14)                                 01S0371
         LCR   @14,@14                                          01S0371
         AH    @14,@CH00067                                     01S0371
         L     @08,PBADAEAP(,PBADAEBP)                          01S0371
         EX    @14,@SM01799                                     01S0371
*             TR(ZONED,ZZ1TRCTX);   /* EBCDIC=>ZONED HEXADECIMAL     */
         L     @14,ZZ2ZZ1P(,R9)                                 01S0372
         TR    ZONED(16),ZZ1TRCTX(@14)                          01S0372
*             PACK(PTRBIT,ZONED(1:15));/* ZONED HEXADECIMAL=>BIT     */
         PACK  PTRBIT(4),ZONED(15)                              01S0373
*             MVN(PTRBIT(25:32),ZONED(16:16));/* FINAL FOUR BITS     */
         MVN   PTRBIT+3(1),ZONED+15                             01S0374
*             NEWDOF=PTRPTR;        /* POINTER RESULT                */
         L     NEWDOF,PTRPTR                                    01S0375
*           END;                    /* BLRCNVCP(PBADAEA(1:PBADAEAL))
*                                      FROM(CHARACTER)TO(POINTER)SET(
*                                      NEWDOF)REMARK(HEXADECIMAL
*                                      OFFSET)TR(ZZ1TRCTX)           */
*         IF SIGNCHAR='-' THEN      /* NEGATIVE OFFSET               */
@RC00362 CLI   SIGNCHAR,C'-'                                    01S0377
         BNE   @RF00377                                         01S0377
*           NEWDOF=-NEWDOF;         /* NEGATIVE OFFSET               */
         LCR   NEWDOF,NEWDOF                                    01S0378
*         IF FLAGEOFF='1'B THEN     /* EXPLICIT OFFSET               */
@RF00377 TM    FLAGEOFF,B'00100000'                             01S0379
         BNO   @RF00379                                         01S0379
*           NEWDOF=NEWDOF+ESBADOF;  /* NEW OFFSET                    */
         AL    NEWDOF,ESBADOF(,ESBAPTR)                         01S0380
*         CALL E210;                /* OVERRIDE OFFSET               */
@RF00379 BAL   @14,E210                                         01S0381
*         INDIR=PBADAEI;            /* INDIRECT ADDRESS COUNT        */
         LH    INDIR,PBADAEI(,PBADAEBP)                         01S0382
*         IF INDIR>0 THEN           /* COMPUTE INDIRECT ADDRESS      */
*                                                               01S0383
         LTR   INDIR,INDIR                                      01S0383
         BNP   @RF00383                                         01S0383
*           /*********************************************************/
*           /*                                                       */
*           /* COMPUTE INDIRECT ADDRESS                              */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0384
*           DO;                     /* COMPUTE INDIRECT ADDRESS      */
*             CALL E100;            /* COMPUTE INDIRECT ADDRESS      */
         BAL   @14,E100                                         01S0385
*             IF RETC>ZZZFLAGE THEN /* UNSUCCESSFUL COMPLETION       */
         CH    RETC,@CH00064                                    01S0386
         BH    @RT00386                                         01S0386
*               GO TO EXIT;         /* COMMON EXIT PATH              */
*           END;                    /* COMPUTE INDIRECT ADDRESS      */
*         SIGNCHAR=PBADAES;         /* SIGN OF NEXT EXPRESSION       */
@RF00383 MVC   SIGNCHAR(1),PBADAES(PBADAEBP)                    01S0389
*         PBADAEBP=PBADAEXP;        /* ->PBADAE OR ZZZPNULL          */
         L     PBADAEBP,PBADAEXP(,PBADAEBP)                     01S0390
*       END;                        /* PROCESS EXPRESSION VALUE PDES */
@DE00361 CL    PBADAEBP,@CF00078                                01S0391
         BE    @DC00361                                         01S0391
         L     @14,ZZ2ZZ1P(,R9)                                 01S0391
         TM    ZZ1EVEP(@14),B'01000000'                         01S0391
         BZ    @DL00361                                         01S0391
@DC00361 DS    0H                                               01S0392
*     END;                          /* PROCESS EXPRESSION VALUE PDES */
*   IF FLAGEDT='0'B THEN            /* NO EXPLICIT COMPLEX DATA TYPE */
*                                                               01S0393
@RF00356 TM    FLAGEDT,B'01000000'                              01S0393
         BNZ   @RF00393                                         01S0393
*     /***************************************************************/
*     /*                                                             */
*     /* NO EXPLICIT COMPLEX DATA TYPE YET SUPPLIED                  */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0394
*     DO;                           /* NO EXPLICIT COMPLEX DATA TYPE */
*       CALL E200;                  /* OVERRIDE DATA TYPE            */
         BAL   @14,E200                                         01S0395
*       IF ESBADTD^=ZZZSYM40&       /* COMPLEX DATA TYPE             */
*           PDLEN^=2 THEN           /* NOT SECOND ADDRESS EXPRESSION */
*                                                               01S0396
         CLC   ESBADTD(31,ESBAPTR),@CC00188                     01S0396
         BE    @RF00396                                         01S0396
         L     @14,@PC00001+20                                  01S0396
         CLC   PDLEN(4,@14),@CF00081                            01S0396
         BE    @RF00396                                         01S0396
*         /***********************************************************/
*         /*                                                         */
*         /* COMPLEX DATA TYPE                                       */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0397
*         DO;                       /* COMPLEX DATA TYPE             */
*           P1=ADDR(PD)+PXAO(PXAODTD);/* ->PXDTD                     */
         L     P1,@PC00001+8                                    01S0398
         L     @14,@PC00001+12                                  01S0398
         AH    P1,PXAO+30(,@14)                                 01S0398
*           IF P1->PXDTDIFP='1'B THEN/* EXPLICIT COMPLEX DATA TYPE   */
*                                                               01S0399
         TM    PXDTDIFP(P1),B'10000000'                         01S0399
         BNO   @RF00399                                         01S0399
*             /*******************************************************/
*             /*                                                     */
*             /* EXPLICIT COMPLEX DATA TYPE                          */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S0400
*             DO;                   /* EXPLICIT COMPLEX DATA TYPE    */
*               CALL BLSRSAGU(ZZ2,SAAU,ESBA);/* SCAN DATA TYPE       */
         ST    R9,@AL00001                                      01S0401
         LA    @14,SAAU                                         01S0401
         ST    @14,@AL00001+4                                   01S0401
         ST    ESBAPTR,@AL00001+8                               01S0401
         L     @10,ZZ2RVTP(,R9)                                 01S0401
         L     @15,RVTSAGUP(,@10)                               01S0401
         LA    @01,@AL00001                                     01S0401
         BALR  @14,@15                                          01S0401
*               IF RF>ZZZFLAGE×     /* SERIOUS SCAN ERROR            */
*                   SAAUSRC>ZZZFLAGE THEN/* SCAN TERMINATION ERROR   */
         CH    RF,@CH00064                                      01S0402
         BH    @RT00402                                         01S0402
         CLI   SAAUSRC,8                                        01S0402
         BNH   @RF00402                                         01S0402
@RT00402 DS    0H                                               01S0403
*                 RETC=MAX(RF,SAAUSRC);/* RETURN CODE                */
         SLR   RETC,RETC                                        01S0403
         IC    RETC,SAAUSRC                                     01S0403
         CR    RETC,RF                                          01S0403
         BNL   *+6
         LR    RETC,RF                                          01S0403
*               ELSE                /* SCAN RESULTS USABLE           */
*                 ESBAD=SAAUF;      /* STORAGE ATTRIBUTES            */
         B     @RC00402                                         01S0404
@RF00402 MVC   ESBAD(60,ESBAPTR),SAAUF                          01S0404
*             END;                  /* EXPLICIT COMPLEX DATA TYPE    */
@RC00402 DS    0H                                               01S0406
*         END;                      /* COMPLEX DATA TYPE             */
@RF00399 DS    0H                                               01S0407
*     END;                          /* NO EXPLICIT COMPLEX DATA TYPE */
@RF00396 DS    0H                                               01S0408
*   IF RETC>=ZZZFLAGS×              /* SERIOUS ERRORS                */
*       PBADATG='1'B×               /* GENERAL REGISTER              */
*       PBADATD='1'B×               /* FLOATING POINT REGISTER       */
*       PBADATE='1'B THEN                                       01S0408
@RF00393 CH    RETC,@CH00040                                    01S0408
         BNL   @RT00408                                         01S0408
         TM    PBADATG(PBADPTR),B'00111000'                     01S0408
         BNZ   @RT00408                                         01S0408
*     ;                             /* FLOATING POINT REGISTER       */
*   ELSE                                                        01S0410
*                                                               01S0410
*     /***************************************************************/
*     /*                                                             */
*     /* NO SERIOUS ERRORS YET, CHECK FOR ALLOWABLE ADDRESS          */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0410
*     DO;                           /* CHECK ADDRESS LIMITS          */
*       PDLPTR=ADDR(PD);            /* ->PD                          */
         L     PDLPTR,@PC00001+8                                01S0411
*       PXLENPTR=ADDR(PDL)+PXAO(PXAODLE);/* ->PXLEN                  */
         L     @14,@PC00001+12                                  01S0412
         LR    PXLENPTR,PDLPTR                                  01S0412
         AH    PXLENPTR,PXAO+32(,@14)                           01S0412
*       RESPECIFY                                               01S0413
*         PXLEN BASED(PXLENPTR);    /* ->PXLEN                       */
*       IF PDLEN>1 THEN             /* 2ND VALUE OF RANGE            */
         LA    @14,1                                            01S0414
         L     @10,@PC00001+20                                  01S0414
         CL    @14,PDLEN(,@10)                                  01S0414
         BNL   @RF00414                                         01S0414
*         DO;                                                   01S0415
*           CURRLEN=1;              /* REASONABLE VALUE              */
         LR    CURRLEN,@14                                      01S0416
*           ESBADLE=1;              /* REASONABLE VALUE              */
         ST    @14,ESBADLE(,ESBAPTR)                            01S0417
*         END;                                                  01S0418
*       ELSE                        /* MUST BE 1ST VALUE OR ONLY     */
*         IF PXLENIFP='1'B THEN     /* EXPLICIT LENGTH               */
         B     @RC00414                                         01S0419
@RF00414 TM    PXLENIFP(PXLENPTR),B'10000000'                   01S0419
         BNO   @RF00419                                         01S0419
*           DO;                                                 01S0420
*             CURRLEN=PXLENI;       /* USER SPECIFIED VALUE          */
         L     @14,PXLENIP(,PXLENPTR)                           01S0421
         L     @14,PXLENI(,@14)                                 01S0421
         LR    CURRLEN,@14                                      01S0421
*             ESBADLE=PXLENI;       /* USER SPECIFIED VALUE          */
         ST    @14,ESBADLE(,ESBAPTR)                            01S0422
*           END;                                                01S0423
*         ELSE                      /* NO EXPLICIT LENGTH SPECIFIED  */
*           CURRLEN=ZZ2AQDLE;       /* USE DEFAULT LENGTH            */
         B     @RC00419                                         01S0424
@RF00419 L     CURRLEN,ZZ2AQDLE(,R9)                            01S0424
*       CURRADDR=ESBALAD+ESBADOF;   /* ADDRESS TO USE                */
@RC00419 DS    0H                                               01S0425
@RC00414 L     CURRADDR,ESBALAD(,ESBAPTR)                       01S0425
         AL    CURRADDR,ESBADOF(,ESBAPTR)                       01S0425
*       MAXP=ZZZP31MX;              /* HIGHEST BYTE EVER SUPPORTED   */
         L     MAXP,@CF00136                                    01S0426
*       IF ESBAAST(1:1)=ZZZASTC1 THEN/* QUALIFIED BY CPU ADDRESS     */
         CLI   ESBAAST(ESBAPTR),C'C'                            01S0427
         BNE   @RF00427                                         01S0427
*         IF ESBAAST=ZZZASTC THEN   /* CPU STATUS ADDRESS SPACE      */
         CLC   ESBAAST(2,ESBAPTR),@CC00084                      01S0428
         BNE   @RF00428                                         01S0428
*           MAXP=ZZZLENP4-1;        /* SET FINAL BYTE SUPPORTED      */
         LA    MAXP,4095                                        01S0429
*         ELSE                      /* ELSE REAL OR VIRTUAL STORAGE  */
*           MAXP=ZZZP24MX;          /* FINAL BYTE SUPPORTED          */
         B     @RC00428                                         01S0430
@RF00428 L     MAXP,@CF00132                                    01S0430
*       ELSE                        /* NOT QUALIFIED BY CPU          */
*         IF ESBAAST=ZZZASTA THEN   /* ABSOLUTE STORAGE              */
         B     @RC00427                                         01S0431
@RF00427 CLC   ESBAAST(2,ESBAPTR),@CC00082                      01S0431
         BNE   @RF00431                                         01S0431
*           MAXP=ZZZP24MX;          /* FINAL BYTE SUPPORTED          */
         L     MAXP,@CF00132                                    01S0432
*         ELSE                      /* NOT ABSOLUTE STORAGE          */
*           IF ESBAAST=ZZZASTH THEN /* HEADER RECORD                 */
         B     @RC00431                                         01S0433
@RF00431 CLC   ESBAAST(2,ESBAPTR),@CC00092                      01S0433
         BNE   @RF00433                                         01S0433
*             MAXP=HEADERMX-1;      /* SET FINAL BYTE                */
         LH    MAXP,@CH01781                                    01S0434
*           ELSE                                                01S0435
*             ;                     /* MUST BE OTHER                 */
@RF00433 DS    0H                                               01S0436
*       IF CURRADDR<0×              /* NEGATIVE VALUE                */
*           ESBALAD+ESBADOF>MAXP THEN/* IS VALUE TOO LARGE           */
@RC00431 DS    0H                                               01S0436
@RC00427 LTR   CURRADDR,CURRADDR                                01S0436
         BM    @RT00436                                         01S0436
         L     @14,ESBALAD(,ESBAPTR)                            01S0436
         AL    @14,ESBADOF(,ESBAPTR)                            01S0436
         CLR   @14,MAXP                                         01S0436
         BNH   @RF00436                                         01S0436
@RT00436 DS    0H                                               01S0437
*         DO;                                                   01S0437
*           CALL BLSUTRMV(ZZ2,M3);  /* OUT OF LIMITS MESSAGE         */
         ST    R9,@AL00001                                      01S0438
         LA    @14,M3                                           01S0438
         ST    @14,@AL00001+4                                   01S0438
         L     @15,ZZ2TRMVP(,R9)                                01S0438
         LA    @01,@AL00001                                     01S0438
         BALR  @14,@15                                          01S0438
*           RETC=MAX(RF,ZZZFLAGS);  /* SET RETURN CODE               */
         LA    RETC,12                                          01S0439
         CR    RETC,RF                                          01S0439
         BNL   *+6
         LR    RETC,RF                                          01S0439
*         END;                                                  01S0440
*       ELSE                        /* ADDRESS VALUE IS OKAY         */
*         IF CURRADDR+CURRLEN-1>MAXP THEN/* ADDRESS VALUE+LENGTH IS  */
         B     @RC00436                                         01S0441
@RF00436 LR    @14,CURRADDR                                     01S0441
         ALR   @14,CURRLEN                                      01S0441
         BCTR  @14,0                                            01S0441
         CR    @14,MAXP                                         01S0441
         BNH   @RF00441                                         01S0441
*           DO;                     /* OUT OF LIMITS                 */
*             ESBADLE=MAXP-CURRADDR+1;/* ADJUST LENGTH               */
         LR    @14,MAXP                                         01S0443
         SLR   @14,CURRADDR                                     01S0443
         AL    @14,@CF00056                                     01S0443
         ST    @14,ESBADLE(,ESBAPTR)                            01S0443
*             IF PDLEN=0 THEN       /* OUT OF BOUNDS AND NO RANGE    */
         L     @14,@PC00001+20                                  01S0444
         ICM   @10,15,PDLEN(@14)                                01S0444
         BNZ   @RF00444                                         01S0444
*               CALL BLSUTRMV(ZZ2,M5);/* TELL USER LENGTH ADJUSTED   */
         ST    R9,@AL00001                                      01S0445
         LA    @14,M5                                           01S0445
         ST    @14,@AL00001+4                                   01S0445
         L     @15,ZZ2TRMVP(,R9)                                01S0445
         LA    @01,@AL00001                                     01S0445
         BALR  @14,@15                                          01S0445
*             ELSE                                              01S0446
*               ;                   /* PART OF RANGE SPECIFICATION   */
@RF00444 DS    0H                                               01S0447
*           END;                                                01S0447
*         ELSE                                                  01S0448
*           ;                       /* ADDRESS CHECK SUCCESSFUL      */
@RF00441 DS    0H                                               01S0449
*       IF RETC<ZZZFLAGS THEN       /* NO SERIOUS ERRORS             */
@RC00436 CH    RETC,@CH00040                                    01S0449
         BNL   @RF00449                                         01S0449
*         DO;                                                   01S0450
*           CALL BLSRESCK(ZZ2,ESBA);/* CHECK/EDIT STORAGE DESCRIPTION*/
         ST    R9,@AL00001                                      01S0451
         ST    ESBAPTR,@AL00001+4                               01S0451
         L     @10,ZZ2RVTP(,R9)                                 01S0451
         L     @15,RVTESCKP(,@10)                               01S0451
         LA    @01,@AL00001                                     01S0451
         BALR  @14,@15                                          01S0451
*           RETC=MAX(RETC,RF);      /* RETURN CODE                   */
         CR    RETC,RF                                          01S0452
         BNL   *+6
         LR    RETC,RF                                          01S0452
*         END;                      /* NO SERIOUS ERRORS             */
*     END;                                                      01S0454
@RF00449 DS    0H                                               01S0455
*EXIT:                              /* COMMON EXIT PATH              */
*   RETURN CODE(RETC);                                          01S0455
*                                                               01S0455
@RT00408 DS    0H                                               01S0455
EXIT     L     @13,4(,@13)                                      01S0455
         L     @00,@SIZDATD                                     01S0455
         LR    @01,@11                                          01S0455
         BLSUFRES R,LV=(0),A=(1)
         LR    @15,@07                                          01S0455
         L     @14,12(,@13)                                     01S0455
         LM    @00,@12,20(@13)                                  01S0455
         BR    @14                                              01S0455
*/********************************************************************/
*/*                                                                  */
*/* E100--COMPUTE INDIRECT ADDRESS                                   */
*/*                                                                  */
*/********************************************************************/
*                                                               01S0456
*E100:                              /* COMPUTE INDIRECT ADDRESS      */
*   PROCEDURE;                                                  01S0456
E100     STM   @14,@06,@SA00002                                 01S0456
         STM   @08,@12,@SA00002+36                              01S0456
*   ESBARL=0;                       /* NO REMARK                     */
         SLR   @14,@14                                          01S0457
         STH   @14,ESBARL(,ESBAPTR)                             01S0457
*   PTRINDIR=ESBALAD+ESBADOF;       /* ->INDIRECT ADDRESS POINTER    */
         L     PTRINDIR,ESBALAD(,ESBAPTR)                       01S0458
         AL    PTRINDIR,ESBADOF(,ESBAPTR)                       01S0458
*   DO J1=1 TO INDIR WHILE(ZZ1EVEP='0'B);/* COMPUTE INDIRECT ADDRESS */
         LA    J1,1                                             01S0459
         B     @DE00459                                         01S0459
@DL00459 L     @14,ZZ2ZZ1P(,R9)                                 01S0459
         TM    ZZ1EVEP(@14),B'01000000'                         01S0459
         BNZ   @DC00459                                         01S0459
*     IF ESBADT^=DTA×ESBADLE>4 THEN /* CONVERT TO DEFAULT POINTER    */
*                                                               01S0460
         CLC   ESBADT(34,ESBAPTR),DTA                           01S0460
         BNE   @RT00460                                         01S0460
         CLC   ESBADLE(4,ESBAPTR),@CF00053                      01S0460
         BNH   @RF00460                                         01S0460
@RT00460 DS    0H                                               01S0461
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERT TO DEFAULT POINTER                                */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0461
*       DO;                         /* CONVERT TO DEFAULT POINTER    */
*         IF PTRINDIR//4^=0 THEN    /* UNALIGNED POINTER             */
*                                                               01S0462
         LR    @00,PTRINDIR                                     01S0462
         SRDA  @00,32                                           01S0462
         D     @00,@CF00053                                     01S0462
         LTR   @00,@00                                          01S0462
         BZ    @RF00462                                         01S0462
*           /*********************************************************/
*           /*                                                       */
*           /* UNALIGNED POINTER                                     */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0463
*           DO;                     /* UNALIGNED POINTER             */
*             OLDN=2;               /* INITIALIZE OLD                */
         MVC   OLDN(4),@CF00081                                 01S0464
*             OLDP(1)=ADDR(M1B);                                01S0465
         LA    @14,M1B                                          01S0465
         ST    @14,OLDP                                         01S0465
*             OLDP(2)=ADDR(MA);                                 01S0466
         LA    @14,MA                                           01S0466
         ST    @14,OLDP+4                                       01S0466
*             M1B=M1S;              /* INITIALIZE M1B                */
         MVC   M1B(59),M1S                                      01S0467
*             DO;                   /* BLRCNVPC(ESBALAD) FROM(POINTER
*                                      )TO(CHARACTER)SET(M1BT30)REMAR
*                                      K(ADDRESS OF UNALIGNED   01S0468
*                                      POINTER)TR(ZZ1TRHEX)          */
*                                                               01S0468
*               /*****************************************************/
*               /*                                                   */
*               /* ADDRESS OF UNALIGNED POINTER                      */
*               /*                                                   */
*               /*****************************************************/
*                                                               01S0469
*               PTRPTR=ESBALAD;     /* SOURCE TO BIT/POINTER    01S0469
*                                      INTERMEDIATE                  */
         MVC   PTRPTR(4),ESBALAD(ESBAPTR)                       01S0469
*               UNPK(M1BT30(1:LENGTH(M1BT30)-1),PTRBIT);/* BIT=>ZONED
*                                      HEXADECIMAL                   */
         UNPK  M1BT30(5),PTRBIT(4)                              01S0470
*               M1BT30(LENGTH(M1BT30):LENGTH(M1BT30))=PTRBIT(25:32);
         MVC   M1BT30+5(1),PTRBIT+3                             01S0471
*                                   /* FINAL ZONED HEXADECIMAL DIGIT */
*               TR(M1BT30,ZZ1TRHEX);/* ZONED HEXADECIMAL=>EBCDIC     */
         L     @14,ZZ2ZZ1P(,R9)                                 01S0472
         TR    M1BT30(6),ZZ1TRHEX(@14)                          01S0472
*             END;                  /* BLRCNVPC(ESBALAD) FROM(POINTER
*                                      )TO(CHARACTER)SET(M1BT30)REMAR
*                                      K(ADDRESS OF UNALIGNED   01S0473
*                                      POINTER)TR(ZZ1TRHEX)          */
*             CALL BLSRMSGA(ZZ2,MA,ESBAAS);/* FORMAT ADDRESS SPACE   */
         ST    R9,@AL00001                                      01S0474
         LA    @14,MA                                           01S0474
         ST    @14,@AL00001+4                                   01S0474
         LA    @14,ESBAAS(,ESBAPTR)                             01S0474
         ST    @14,@AL00001+8                                   01S0474
         L     @10,ZZ2RVTP(,R9)                                 01S0474
         L     @15,RVTMSGAP(,@10)                               01S0474
         LA    @01,@AL00001                                     01S0474
         BALR  @14,@15                                          01S0474
*             RETC=MAX(RF,ZZZFLAGS);/* RETURN CODE                   */
         LA    RETC,12                                          01S0475
         CR    RETC,RF                                          01S0475
         BNL   *+6
         LR    RETC,RF                                          01S0475
*             MAO=LENGTH(M1BT1);    /* TEXT INSERTION OFFSET         */
         MVC   MAO(2),@CH01782                                  01S0476
*             CALL BLSUTRMO(ZZ2,OLD);/* TRANSMIT M1                  */
         ST    R9,@AL00001                                      01S0477
         LA    @14,OLD                                          01S0477
         ST    @14,@AL00001+4                                   01S0477
         L     @15,ZZ2TRMOP(,R9)                                01S0477
         LA    @01,@AL00001                                     01S0477
         BALR  @14,@15                                          01S0477
*             RETC=MAX(RETC,RF);    /* RETURN CODE                   */
         CR    RETC,RF                                          01S0478
         BNL   *+6
         LR    RETC,RF                                          01S0478
*             GO TO L190;           /* ERROR RETURN                  */
         B     L190                                             01S0479
*           END;                    /* UNALIGNED POINTER             */
*         ESBADLE=4;                /* FULLWORD POINTER              */
@RF00462 MVC   ESBADLE(4,ESBAPTR),@CF00053                      01S0481
*         ESBADT=DTA;               /* DATA TYPE                     */
         MVC   ESBADT(34,ESBAPTR),DTA                           01S0482
*       END;                        /* CONVERT TO DEFAULT POINTER    */
*     ESBADFA='0'B;                 /* SCALAR                        */
@RF00460 NI    ESBADFA(ESBAPTR),B'01111111'                     01S0484
*     ESBADIM=0;                                                01S0485
         SLR   @14,@14                                          01S0485
         ST    @14,ESBADIM(,ESBAPTR)                            01S0485
*     ESBADIL=0;                                                01S0486
         ST    @14,ESBADIL(,ESBAPTR)                            01S0486
*     ESBASYM='INDIRECT_ADDRESS_POINTER';/* SYMBOL                   */
         MVI   ESBASYM+24(ESBAPTR),C' '                         01S0487
         MVC   ESBASYM+25(6,ESBAPTR),ESBASYM+24(ESBAPTR)        01S0487
         MVC   ESBASYM(24,ESBAPTR),@CC01758                     01S0487
*     PTR31=ZZZZNULL;               /* 4-BYTE INDIRECT ADDRESS VALUE */
         ST    @14,PTR31                                        01S0488
*     PTRBASE=ADDR(PTR31)+4-ESBADLE;/* ->PTR31, PTR24, PTR16, OR PTR8*/
         LA    PTRBASE,PTR31                                    01S0489
         AL    PTRBASE,@CF00053                                 01S0489
         SL    PTRBASE,ESBADLE(,ESBAPTR)                        01S0489
*     CALL BLSRACC(ZZ2,ESBA,PTRBASED);/* GET INDIRECT ADDRESS VALUE  */
         ST    R9,@AL00001                                      01S0490
         ST    ESBAPTR,@AL00001+4                               01S0490
         ST    PTRBASE,@AL00001+8                               01S0490
         L     @10,ZZ2RVTP(,R9)                                 01S0490
         L     @15,RVTRACCP(,@10)                               01S0490
         LA    @01,@AL00001                                     01S0490
         BALR  @14,@15                                          01S0490
*     IF RF^=ZZZFLAGI THEN          /* POINTER NOT AVAILABLE         */
*                                                               01S0491
         LTR   RF,RF                                            01S0491
         BZ    @RF00491                                         01S0491
*       /*************************************************************/
*       /*                                                           */
*       /* POINTER NOT AVAILABLE                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0492
*       DO;                         /* POINTER NOT AVAILABLE         */
*         RETC=MAX(RETC,ZZZFLAGS);  /* RETURN CODE                   */
         LA    @14,12                                           01S0493
         CR    RETC,@14                                         01S0493
         BNL   *+6
         LR    RETC,@14                                         01S0493
*         CALL BLSUTRMV(ZZ2,M6);    /* TELL USER WITH MESSAGE        */
         ST    R9,@AL00001                                      01S0494
         LA    @14,M6                                           01S0494
         ST    @14,@AL00001+4                                   01S0494
         L     @15,ZZ2TRMVP(,R9)                                01S0494
         LA    @01,@AL00001                                     01S0494
         BALR  @14,@15                                          01S0494
*         RETC=MAX(RETC,RF);        /* RETURN CODE                   */
         CR    RETC,RF                                          01S0495
         BNL   *+6
         LR    RETC,RF                                          01S0495
*         GO TO L190;               /* COMMON EXIT PATH              */
         B     L190                                             01S0496
*       END;                        /* POINTER NOT AVAILABLE         */
*     IF                            /* NEW TARGET ADDRESS SPACE      */
*         ESBAAST=ZZZASTC×          /* FROM CPU STATUS ADDRESS SPACE */
*         ESBAAST=ZZZASTH THEN      /* FROM HEADER ADDRESS SPACE     */
@RF00491 CLC   ESBAAST(2,ESBAPTR),@CC00084                      01S0498
         BE    @RT00498                                         01S0498
         CLC   ESBAAST(2,ESBAPTR),@CC00092                      01S0498
         BNE   @RF00498                                         01S0498
@RT00498 DS    0H                                               01S0499
*       CALL BLSRADD2(ZZ2,ESBA,PD,PXAO);/* GENERATE ADDRESS SPACE    */
         ST    R9,@AL00001                                      01S0499
         ST    ESBAPTR,@AL00001+4                               01S0499
         L     @14,@PC00001+8                                   01S0499
         ST    @14,@AL00001+8                                   01S0499
         L     @14,@PC00001+12                                  01S0499
         ST    @14,@AL00001+12                                  01S0499
         L     @10,ZZ2RVTP(,R9)                                 01S0499
         L     @15,RVTADD2P(,@10)                               01S0499
         LA    @01,@AL00001                                     01S0499
         BALR  @14,@15                                          01S0499
*     PTRINDIR=PTR24;               /* 24-BIT ADDRESS                */
@RF00498 SLR   PTRINDIR,PTRINDIR                                01S0500
         ICM   PTRINDIR,7,PTR24                                 01S0500
*     ESBALAD=PTRINDIR;             /* LOGICAL ADDRESS               */
         ST    PTRINDIR,ESBALAD(,ESBAPTR)                       01S0501
*     ESBADOF=0;                    /* NO OFFSET                     */
         SLR   @14,@14                                          01S0502
         ST    @14,ESBADOF(,ESBAPTR)                            01S0502
*     FLAGEOFF='0'B;                /* IMPLICIT OFFSET               */
         NI    FLAGEOFF,B'11011111'                             01S0503
*     ESBADT=ZZ2AQDT;               /* DEFAULT DATA TYPE             */
         MVC   ESBADT(34,ESBAPTR),ZZ2AQDT(R9)                   01S0504
*   END;                            /* COMPUTE INDIRECT ADDRESS      */
         AL    J1,@CF00056                                      01S0505
@DE00459 CR    J1,INDIR                                         01S0505
         BNH   @DL00459                                         01S0505
@DC00459 DS    0H                                               01S0506
*   ESBASYM=ZZZSYM40;               /* NO SYMBOL                     */
         MVC   ESBASYM(31,ESBAPTR),@CC00188                     01S0506
*   FLAGDDT='0'B;                   /* NO DEFAULT DATA TYPE          */
         NI    FLAGDDT,B'01111111'                              01S0507
*L190:                              /* COMMON EXIT PATH              */
*   RETURN;                                                     01S0508
@EL00002 DS    0H                                               01S0508
@EF00002 DS    0H                                               01S0508
@ER00002 LM    @14,@06,@SA00002                                 01S0508
         LM    @08,@12,@SA00002+36                              01S0508
         BR    @14                                              01S0508
*   END E100;                                                   01S0509
*                                                               01S0509
         B     @EL00002                                         01S0509
*/********************************************************************/
*/*                                                                  */
*/* E200--OVERRIDE DATA TYPE                                         */
*/*                                                                  */
*/********************************************************************/
*                                                               01S0510
*E200:                              /* COMPLETE DATA TYPE            */
*   PROCEDURE;                                                  01S0510
E200     STM   @14,@12,@SA00003                                 01S0510
*   IF FLAGDDT='1'B THEN            /* DEFAULT DATA TYPE SUPPLIED    */
         TM    FLAGDDT,B'10000000'                              01S0511
         BNO   @RF00511                                         01S0511
*     CALL BLSRADDU(ZZ2,ESBA,PD,PXAO);/* OVERRIDE DATA TYPE          */
         ST    R9,@AL00001                                      01S0512
         ST    ESBAPTR,@AL00001+4                               01S0512
         L     @14,@PC00001+8                                   01S0512
         ST    @14,@AL00001+8                                   01S0512
         L     @14,@PC00001+12                                  01S0512
         ST    @14,@AL00001+12                                  01S0512
         L     @10,ZZ2RVTP(,R9)                                 01S0512
         L     @15,RVTADDUP(,@10)                               01S0512
         LA    @01,@AL00001                                     01S0512
         BALR  @14,@15                                          01S0512
*   ELSE                            /* SUPPLY DATA TYPE              */
*                                                               01S0513
*     /***************************************************************/
*     /*                                                             */
*     /* SUPPLY DATA TYPE                                            */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0513
*     DO;                           /* SUPPLY DATA TYPE              */
         B     @RC00511                                         01S0513
@RF00511 DS    0H                                               01S0514
*       CALL BLSRADDT(ZZ2,ESBA,PD,PXAO);/* SUPPLY DATA TYPE          */
         ST    R9,@AL00001                                      01S0514
         ST    ESBAPTR,@AL00001+4                               01S0514
         L     @14,@PC00001+8                                   01S0514
         ST    @14,@AL00001+8                                   01S0514
         L     @14,@PC00001+12                                  01S0514
         ST    @14,@AL00001+12                                  01S0514
         L     @10,ZZ2RVTP(,R9)                                 01S0514
         L     @15,RVTADDTP(,@10)                               01S0514
         LA    @01,@AL00001                                     01S0514
         BALR  @14,@15                                          01S0514
*       FLAGDDT='1'B;               /* DEFAULT DATA TYPE SUPPLIED    */
         OI    FLAGDDT,B'10000000'                              01S0515
*     END;                          /* SUPPLY DATA TYPE              */
*   RETURN;                                                     01S0517
*                                                               01S0517
@EL00003 DS    0H                                               01S0517
@EF00003 DS    0H                                               01S0517
@ER00003 LM    @14,@12,@SA00003                                 01S0517
         BR    @14                                              01S0517
*/********************************************************************/
*/*                                                                  */
*/* E210--OVERRIDE OFFSET                                            */
*/*                                                                  */
*/********************************************************************/
*                                                               01S0518
*E210:                              /* OVERRIDE OFFSET               */
*   ENTRY;                                                      01S0518
E210     STM   @14,@12,@SA00003                                 01S0518
*   FLAGEOFF='1'B;                  /* EXPLICIT OFFSET               */
         OI    FLAGEOFF,B'00100000'                             01S0519
*   J3=NEWDOF-ESBADOF;              /* RELATIVE OFFSET               */
         LR    J3,NEWDOF                                        01S0520
         SL    J3,ESBADOF(,ESBAPTR)                             01S0520
*   IF J3^=0 THEN                   /* NEW OFFSET                    */
*                                                               01S0521
         SLR   @14,@14                                          01S0521
         CR    J3,@14                                           01S0521
         BE    @RF00521                                         01S0521
*     /***************************************************************/
*     /*                                                             */
*     /* NEW OFFSET                                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0522
*     DO;                           /* NEW OFFSET                    */
*       IF ESBADFA='1'B&(J3//ESBADLE)^=0 THEN/* CONVERT ARRAY=>SCALAR*/
*                                                               01S0523
         TM    ESBADFA(ESBAPTR),B'10000000'                     01S0523
         BNO   @RF00523                                         01S0523
         L     @10,ESBADLE(,ESBAPTR)                            01S0523
         LR    @00,J3                                           01S0523
         SRDA  @00,32                                           01S0523
         DR    @00,@10                                          01S0523
         CLR   @00,@14                                          01S0523
         BE    @RF00523                                         01S0523
*         /***********************************************************/
*         /*                                                         */
*         /* CONVERT ARRAY TO SCALAR--DEFAULT DATA TYPE              */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0524
*         DO;                       /* CONVERT ARRAY TO SCALAR AREA  */
*           ESBADT=ZZ2AQDT;         /* DEFAULT DATA TYPE             */
         MVC   ESBADT(34,ESBAPTR),ZZ2AQDT(R9)                   01S0525
*           ESBADLE=ESBADLE*ESBADIM;/* LENGTH                        */
         LR    @01,@10                                          01S0526
         M     @00,ESBADIM(,ESBAPTR)                            01S0526
         ST    @01,ESBADLE(,ESBAPTR)                            01S0526
*           ESBADFA='0'B;           /* SCALAR                        */
         NI    ESBADFA(ESBAPTR),B'01111111'                     01S0527
*           ESBADIM=0;                                          01S0528
         ST    @14,ESBADIM(,ESBAPTR)                            01S0528
*           ESBADIL=0;                                          01S0529
         ST    @14,ESBADIL(,ESBAPTR)                            01S0529
*         END;                      /* CONVERT ARRAY TO SCALAR AREA  */
*       IF ESBADFA='1'B THEN        /* ARRAY                         */
*                                                               01S0531
@RF00523 TM    ESBADFA(ESBAPTR),B'10000000'                     01S0531
         BNO   @RF00531                                         01S0531
*         /***********************************************************/
*         /*                                                         */
*         /* ARRAY                                                   */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0532
*         DO;                       /* ARRAY                         */
*           J2=J3/ESBADLE;          /* ENTRY ADJUSTMENT              */
         LR    @00,J3                                           01S0533
         SRDA  @00,32                                           01S0533
         D     @00,ESBADLE(,ESBAPTR)                            01S0533
         LR    J2,@01                                           01S0533
*           ESBADIL=ESBADIL+J2;     /* FIRST ENTRY INDEX             */
         LR    @14,J2                                           01S0534
         AL    @14,ESBADIL(,ESBAPTR)                            01S0534
         ST    @14,ESBADIL(,ESBAPTR)                            01S0534
*           IF J2>ESBADIM THEN      /* ABSURD ADJUSTMENT             */
         CL    J2,ESBADIM(,ESBAPTR)                             01S0535
         BNH   @RF00535                                         01S0535
*             ESBADIM=0;            /* DIMENSION                     */
         SLR   @14,@14                                          01S0536
         ST    @14,ESBADIM(,ESBAPTR)                            01S0536
*           ELSE                    /* ADJUCT DIMENSION              */
*             ESBADIM=ESBADIM-J2;   /* DIMENSION                     */
         B     @RC00535                                         01S0537
@RF00535 L     @14,ESBADIM(,ESBAPTR)                            01S0537
         SLR   @14,J2                                           01S0537
         ST    @14,ESBADIM(,ESBAPTR)                            01S0537
*         END;                      /* ARRAY                         */
*       ELSE                        /* SCALAR                        */
*                                                               01S0539
*         /***********************************************************/
*         /*                                                         */
*         /* SCALAR                                                  */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0539
*         DO;                       /* SCALAR                        */
         B     @RC00531                                         01S0539
@RF00531 DS    0H                                               01S0540
*           IF J3>0&ESBADLE>J3 THEN /* REASONABLE ADJUSTMENT FACTOR  */
         LTR   J3,J3                                            01S0540
         BNP   @RF00540                                         01S0540
         L     @14,ESBADLE(,ESBAPTR)                            01S0540
         CLR   @14,J3                                           01S0540
         BNH   @RF00540                                         01S0540
*             ESBADLE=ESBADLE-J3;   /* LENGTH                        */
         SLR   @14,J3                                           01S0541
         ST    @14,ESBADLE(,ESBAPTR)                            01S0541
*           ELSE                    /* ABSURD ADJUSTMENT             */
*             FLAGDDT='0'B;         /* NO DEFAULT DATA TYPE          */
         B     @RC00540                                         01S0542
@RF00540 NI    FLAGDDT,B'01111111'                              01S0542
*         END;                      /* SCALAR                        */
@RC00540 DS    0H                                               01S0544
*       ESBADOF=NEWDOF;             /* OFFSET                        */
@RC00531 ST    NEWDOF,ESBADOF(,ESBAPTR)                         01S0544
*     END;                          /* NEW OFFSET                    */
*   RETURN;                                                     01S0546
         B     @EL00003                                         01S0546
*   END E200;                                                   01S0547
*                                                               01S0547
         B     @EL00003                                         01S0547
*/*BLSRPEND--DEBUGGING MODULE                                        */
*/*BLSUPEND--MVS IPCS MODULE                                         */
*                                                               01S0548
*   DECLARE                         /* DATA FOR AHB MACROS           */
*    (SCH0001A,                     /* PROBE INDEX FOR SEARCH        */
*     SCH0001G) UNSIGNED BINARY(32),/* PROBE DISTANCE FOR SEARCH     */
*     PTRBIT BIT(32) BOUNDARY(WORD),/* DATA CONVERSION WORK AREA FOR
*                                      POINTER DATA                  */
*     PTRPTR POINTER DEFINED(PTRBIT),/* DATA CONVERSION WORK AREA FOR
*                                      POINTER DATA                  */
*     ZONED CHARACTER(16) BOUNDARY(DWORD),/* DATA CONVERSION WORK
*                                      AREA                          */
*     PACKED BIT(64) BOUNDARY(DWORD);/* DATA CONVERSION WORK AREA    */
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                    01S0549
*     I031F FIXED(31) BASED,                                    01S0549
*     I031P PTR(31) BASED,                                      01S0549
*     I015F FIXED(15) BASED,                                    01S0549
*     I015P PTR(15) BASED,                                      01S0549
*     I008P PTR(8) BASED,                                       01S0549
*     I001C CHAR(1) BASED;                                      01S0549
*   GENERATE NODEFS NOREFS DATA;                                01S0550
*   END BLSRADD1                    /* BLRPEND(BLSRADD1)             */
*                                                               01S0551
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (BLSRZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLSUZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLRFULL )                                       */
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */
*/*%INCLUDE SYSLIB  (IKJPSCB )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJUPT  )                                       */
*/*%INCLUDE SYSLIB  (BLSUSERV)                                       */
*/*%INCLUDE SYSLIB  (BLRSERV )                                       */
*/*%INCLUDE SYSLIB  (BLRSERVD)                                       */
*/*%INCLUDE SYSLIB  (BLSRSERV)                                       */
*/*%INCLUDE SYSLIB  (BLSRDTDT)                                       */
*/*%INCLUDE SYSLIB  (BLSRHSD )                                       */
*                                                               01S0551
*       ;                                                       01S0551
@EL00001 L     @13,4(,@13)                                      01S0551
@EF00001 L     @00,@SIZDATD                                     01S0551
         LR    @01,@11                                          01S0551
         BLSUFRES R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                  01S0551
         BR    @14                                              01S0551
@DATA    DS    0H
@CH01782 DC    H'9'
@CH00040 DC    H'12'
@CH00067 DC    H'16'
@CH01774 DC    H'52'
@CH01781 DC    H'4103'
@SM01787 MVC   ESBASYM(0,ESBAPTR),PBADA(@10)
@SC01793 CLC   DTXD(0),DTDTDTD-13(@01)
@SM01797 MVC   0(0,@10),PBADA(@08)
@SM01799 MVC   0(0,@10),PBADAEA(@08)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    6F
@SA00003 DS    15F
@SA00002 DS    14F
@AL00001 DS    4A
BLSRADD1 CSECT
         DS    0F
@CF00056 DC    F'1'
@CF00081 DC    F'2'
@CF00053 DC    F'4'
@CF00064 DC    F'8'
@CH00064 EQU   @CF00064+2
@CF01778 DC    F'120'
@CF01777 DC    F'152'
@CF01776 DC    F'352'
@CF01775 DC    F'384'
@CF00132 DC    F'16777215'
@CF00136 DC    F'2147483647'
@CF01792 DC    F'-40'
@CF01790 DC    F'-39'
@CF01791 DC    F'-8'
@CF00078 DC    XL4'FF000000'
@DATD    DSECT
         DS    0D
PTR31    DS    AL4
         ORG   PTR31
@NM00185 DS    BL1
PTR24    DS    AL3
         ORG   PTR24
@NM00186 DS    BL1
PTR16    DS    AL2
         ORG   PTR16
@NM00187 DS    BL1
PTR8     DS    AL1
         ORG   PTR31+4
DTX      DS    CL34
         ORG   DTX
DTX0     DS    0C
DTXY     DS    CL1
@NM00091 DS    BL1
DTXD     DS    CL31
DTXE     DS    CL1
DTX9     DS    0C
         ORG   DTX+34
         DS    CL2
VSAMBUFR DS    CL3072
OLD      DS    CL12
         ORG   OLD
OLDN     DS    FL4
OLDP     DS    2A
         ORG   OLD+12
M1B      DS    CL59
         ORG   M1B
M1BL     DS    FL2
@NM00179 DS    BL2
M1BT     DS    CL55
         ORG   M1BT
M1BT1    DS    CL9
M1BT2    DS    CL1
M1BT3    DS    CL7
         ORG   M1BT3
M1BT30   DS    CL6
M1BT31   DS    CL1
         ORG   M1BT+17
M1BT4    DS    CL38
         ORG   M1B+59
         DS    CL1
MA       DS    CL254
         ORG   MA
MAL      DS    FL2
MAO      DS    FL2
MAT      DS    CL250
         ORG   MAT
MAT1     DS    CL250
         ORG   MA+254
FLAG     DS    BL1
         ORG   FLAG
FLAGDDT  DS    BL1
FLAGEDT  EQU   FLAG+0
FLAGEOFF EQU   FLAG+0
@NM00184 EQU   FLAG+0
         ORG   FLAG+1
SIGNCHAR DS    CL1
ZONED    DS    CL16
PTRBIT   DS    BL4
         DS    CL4
PACKED   DS    BL8
BLSRADD1 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00188 DC    C'                               '
@CC01758 DC    C'INDIRECT_ADDRESS_POINTER'
@CC01737 DC    C'0000000000000000'
@CC00082 DC    C'A '
@CC00084 DC    C'C '
@CC00092 DC    C'H '
         DS    CL1
DTA      DS    CL34
         ORG   DTA
DTA0     DS    0C
DTAY     DC    CL1'A'
@NM00089 DC    X'00'
DTAD     DC    CL31'                               '
DTAE     DC    CL1' '
DTA9     DS    0C
         ORG   DTA+34
DTB      DS    CL34
         ORG   DTB
DTB0     DS    0C
DTBY     DC    CL1'B'
@NM00090 DC    X'00'
DTBD     DC    CL31'                               '
DTBE     DC    CL1' '
DTB9     DS    0C
         ORG   DTB+34
         DS    CL6
ESCO     DS    CL182
         ORG   ESCO
ESCORID  DC    CL2'ES'
@NM00104 DC    X'000000000000'
@NM00105 DC    CL8' '
@NM00106 DC    X'00'
         DC    XL7'0'
ESCORDX  DC    A(0)
ESCOSYM  DC    CL31' '
ESCOELK  DS    0C
ESCORV1  DC    CL1' '
ESCOAS   DS    CL16
         ORG   ESCOAS
ESCOAS0  DS    0C
ESCOAST  DC    CL2'  '
@NM00107 DC    X'0000'
ESCOAS1  DC    A(0)
ESCOAS2  DC    A(0)
@NM00108 DC    X'00'
         DC    XL3'0'
ESCOAS9  DS    0C
         ORG   ESCO+76
ESCOLAD  DC    A(0)
ESCOD    DS    CL60
         ORG   ESCOD
ESCOD00  DS    0C
ESCODOF  DC    F'0'
ESCODLE  DC    A(4)
ESCODOB  DC    AL1(0)
ESCODLB  DC    AL1(0)
ESCODT   DS    CL34
         ORG   ESCODT
ESCODT0  DS    0C
ESCODTY  DC    CL1'U'
@NM00109 DC    X'00'
ESCODTD  DC    CL31'                               '
ESCODTE  DC    CL1' '
ESCODT9  DS    0C
         ORG   ESCOD+44
ESCODIM  DC    A(0)
ESCODIL  DC    F'0'
ESCODF   DC    X'00000000'
         ORG   ESCODF
ESCODFA  DS    BL1
@NM00110 EQU   ESCODF+0
         ORG   ESCOD+56
@NM00111 DC    X'00'
         DC    XL3'0'
ESCOD99  DS    0C
         ORG   ESCO+140
ESCOMAD  DC    A(0)
@NM00112 DC    X'00'
         DC    XL15'0'
ESCOKEY  DS    BL1
ESCOF    DC    X'00'
         DC    XL2'0'
         ORG   ESCOF
ESCOFS   DS    BL1
         ORG   ESCOFS
ESCOFSC  DS    BL1
ESCOFS2  EQU   ESCOFS+0
ESCOFSM  EQU   ESCOFS+0
ESCOFSA  EQU   ESCOFS+0
ESCOFSP  EQU   ESCOFS+0
ESCOFSR  EQU   ESCOFS+0
ESCOFSX  EQU   ESCOFS+0
ESCOFSS  EQU   ESCOFS+0
         ORG   ESCOF+1
ESCOFC   DS    BL1
         ORG   ESCOFC
ESCOFCD  DS    BL1
@NM00113 EQU   ESCOFC+0
         ORG   ESCOF+2
@NM00114 DS    BL1
         ORG   ESCO+164
ESCOABS  DC    A(0)
@NM00115 DC    X'00'
         DC    XL11'0'
ESCOR    DS    CL2
         ORG   ESCOR
ESCORL   DC    AL2(0)
ESCORT   DS    0C
         ORG   ESCORT
ESCORT1  DS    0C
         ORG   ESCO+182
ESCO999  DS    0C
         ORG   ESCO+182
M1S      DS    CL59
         ORG   M1S
M1SL     DC    AL2(59)
@NM00178 DC    X'0000'
M1ST     DS    CL55
         ORG   M1ST
M1ST1    DC    CL9'BLS18051I'
M1ST2    DC    CL1' '
M1ST3    DS    CL7
         ORG   M1ST3
M1ST30   DC    CL6'000000'
M1ST31   DC    CL1'.'
         ORG   M1ST+17
M1ST4    DC    CL38' => UNALIGNED INDIRECT_ADDRESS_POINTER'
         ORG   M1S+59
         DS    CL1
M2       DS    CL51
         ORG   M2
M2L      DC    AL2(51)
@NM00180 DC    X'0000'
M2T      DS    CL47
         ORG   M2T
M2T1     DC    CL47'BLS18052I DOUBLE PRECISION REGISTER SUBSTITUTED'
         ORG   M2+51
         DS    CL1
M3       DS    CL49
         ORG   M3
M3L      DC    AL2(49)
@NM00181 DC    X'0000'
M3T      DS    CL45
         ORG   M3T
M3T1     DC    CL45'BLS18053I ADDRESS NOT WITHIN ALLOWABLE LIMITS'
         ORG   M3+49
         DS    CL1
M5       DS    CL45
         ORG   M5
M5L      DC    AL2(45)
@NM00182 DC    X'0000'
M5T      DS    CL41
         ORG   M5T
M5T1     DC    CL41'BLS18070I LENGTH ADJUSTED FOR UPPER BOUND'
         ORG   M5+45
         DS    CL1
M6       DS    CL52
         ORG   M6
M6L      DC    AL2(52)
@NM00183 DC    X'0000'
M6T      DS    CL48
         ORG   M6T
M6T1     DC    CL48'BLS18075I INDIRECT ADDRESS COULD NOT BE RESOLVED'
         ORG   M6+52
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSRADD1 CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSRADD1+19)/20+7)/8)CL8'BLSRADD1'
@DATD    DSECT
         DS    0H
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSRADD1 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SCH0001A EQU   @10
SCH0001G EQU   @04
CURRLEN  EQU   @06
CURRADDR EQU   @05
K1       EQU   @04
I1       EQU   @08
J3       EQU   @04
J2       EQU   @05
J1       EQU   @05
NEWDOF   EQU   @06
INDIR    EQU   @06
RETC     EQU   @07
PXLENPTR EQU   @04
PDLPTR   EQU   @05
MAXP     EQU   @04
P1       EQU   @04
PTRINDIR EQU   @04
PTRBASE  EQU   @04
PBADAEBP EQU   @04
PBADPTR  EQU   @05
ESBAPTR  EQU   @03
DTDTPTR  EQU   @06
R9       EQU   @09
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
RB       EQU   @11
RD       EQU   @13
RE       EQU   @14
RF       EQU   @15
RA       EQU   @10
RC       EQU   @12
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
HSD      EQU   0
ZZ1      EQU   0
ZZ1ATTN  EQU   ZZ1+360
ZZ1EVE   EQU   ZZ1ATTN+4
ZZ1EVEP  EQU   ZZ1EVE
ZZ1F     EQU   ZZ1+368
ZZ1TRHEX EQU   ZZ1+568
ZZ1N     EQU   ZZ1+1116
ZZ1TRCTX EQU   ZZ1+1392
ZZ2      EQU   0
ZZ2AMD   EQU   ZZ2
@NM00025 EQU   ZZ2AMD+7
ZZ2PRT   EQU   ZZ2+138
ZZ2PRTT  EQU   ZZ2PRT+4
ZZ2PRTT1 EQU   ZZ2PRTT+1
ZZ2A     EQU   ZZ2+272
ZZ2ASE   EQU   ZZ2A+2
ZZ2AF    EQU   ZZ2A+16
ZZ2APID  EQU   ZZ2A+64
ZZ2AD    EQU   ZZ2A+74
ZZ2ADD   EQU   ZZ2AD
ZZ2ADDT  EQU   ZZ2ADD+2
ZZ2ADM   EQU   ZZ2AD+46
ZZ2ADMT  EQU   ZZ2ADM+2
ZZ2ADP   EQU   ZZ2AD+56
ZZ2ADPT  EQU   ZZ2ADP+2
ZZ2AZZ6P EQU   ZZ2A+140
ZZ2AQAS  EQU   ZZ2A+144
ZZ2AQAS1 EQU   ZZ2AQAS+4
ZZ2AQD   EQU   ZZ2A+160
ZZ2AQDLE EQU   ZZ2AQD+4
ZZ2AQDT  EQU   ZZ2AQD+10
ZZ2AQDF  EQU   ZZ2AQD+52
ZZ2STG   EQU   ZZ2+960
ZZ2ALLOP EQU   ZZ2+992
ZZ2FREEP EQU   ZZ2+996
ZZ2FF19P EQU   ZZ2+1000
ZZ2FRE1P EQU   ZZ2+1004
ZZ2FF18P EQU   ZZ2+1008
ZZ2DYNAP EQU   ZZ2+1012
ZZ2ZZ2CP EQU   ZZ2+1016
ZZ2ZZ2DP EQU   ZZ2+1020
ZZ2STAIP EQU   ZZ2+1024
ZZ2FF02P EQU   ZZ2+1028
ZZ2GETLP EQU   ZZ2+1032
ZZ2PARSP EQU   ZZ2+1036
ZZ2PTGTP EQU   ZZ2+1040
ZZ2PUTLP EQU   ZZ2+1044
ZZ2SCANP EQU   ZZ2+1048
ZZ2STCKP EQU   ZZ2+1052
ZZ2TRMOP EQU   ZZ2+1064
ZZ2TRMVP EQU   ZZ2+1068
ZZ2PUTNP EQU   ZZ2+1084
ZZ2TRMNP EQU   ZZ2+1088
ZZ2ZZ1P  EQU   ZZ2+1264
ZZ2BVTP  EQU   ZZ2+1280
ZZ2RVTP  EQU   ZZ2+1284
ZZ2CPPL  EQU   ZZ2+1292
ZZ2CPPLC EQU   ZZ2CPPL
ZZ2ITR   EQU   ZZ2+2840
ZZ2ITRE  EQU   ZZ2ITR+16
ZZ2ITSE  EQU   ZZ2+2864
ZZ2ES    EQU   ZZ2+2872
ZZ2AMDX  EQU   ZZ2+7160
ZZ2AXO   EQU   ZZ2+7934
ZZ2AXOT  EQU   ZZ2AXO+2
CMD      EQU   0
CMDT     EQU   CMD+4
PSCB     EQU   0
PSCBATR1 EQU   PSCB+16
ECT      EQU   0
ECTSWS   EQU   ECT+28
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
UPT      EQU   0
UPTSWS   EQU   UPT+12
SA       EQU   0
SA1      EQU   SA
SAR      EQU   SA+12
SAR1     EQU   SAR+12
BLSUTRMO EQU   0
BLSUTRMV EQU   0
BVT      EQU   0
BVTPUTLP EQU   BVT+4
BVTPUTOP EQU   BVT+12
BVTPUTTP EQU   BVT+16
BVTPUTVP EQU   BVT+20
BVTPUTAP EQU   BVT+24
BVTPRTTP EQU   BVT+28
BVTPRTAP EQU   BVT+32
BVTPUTDP EQU   BVT+36
BVTMONP  EQU   BVT+40
BVTMON2P EQU   BVT+44
BVTVSARP EQU   BVT+48
BVTVSENP EQU   BVT+64
BVTVSERP EQU   BVT+68
BVTVSGEP EQU   BVT+72
BVTVSGUP EQU   BVT+76
BVTVSPOP EQU   BVT+80
BVTVSPUP EQU   BVT+84
BVTMPKNP EQU   BVT+104
BVTMONLP EQU   BVT+108
BVTPUTCP EQU   BVT+132
BVTMPK1P EQU   BVT+136
BVTZZ2RP EQU   BVT+140
BVTPGMRP EQU   BVT+144
BVTMONAP EQU   BVT+148
BVTBLDDP EQU   BVT+152
BVTBLDLP EQU   BVT+156
BVTPGMCP EQU   BVT+160
BVTPGMDP EQU   BVT+164
BVTPGMLP EQU   BVT+168
BVTMONCP EQU   BVT+180
BVTMONDP EQU   BVT+184
BVTMONTP EQU   BVT+188
BVTPARIP EQU   BVT+192
BVTPARUP EQU   BVT+196
BVTPRTNP EQU   BVT+204
BVTVSCRP EQU   BVT+208
BVTVSMRP EQU   BVT+212
BVTMONXP EQU   BVT+216
BVTTRMAP EQU   BVT+228
ZZ6      EQU   0
ZZ6D     EQU   ZZ6+128
ZZ6DD    EQU   ZZ6D+8
ZZ6DDT   EQU   ZZ6DD+4
ZZ6DQA   EQU   ZZ6D+68
ZZ6DF    EQU   ZZ6D+92
ZZ6DFMP  EQU   ZZ6DF
ZZ6DFAB  EQU   ZZ6DF
ZZ6B     EQU   ZZ6+768
BLSRACC  EQU   0
BLSRESCK EQU   0
BLSRESGU EQU   0
BLSRSAGU EQU   0
BLSRMSGA EQU   0
BLSRADDT EQU   0
BLSRADDU EQU   0
BLSRADD2 EQU   0
BLSRADD3 EQU   0
BLSRADD4 EQU   0
RVT      EQU   0
RVTADDRP EQU   RVT
RVTT01P  EQU   RVT+4
RVTTAP   EQU   RVT+8
RVTTBP   EQU   RVT+12
RVTTCP   EQU   RVT+16
RVTTFP   EQU   RVT+24
RVTTYP   EQU   RVT+40
RVTT02P  EQU   RVT+48
RVTT03P  EQU   RVT+52
RVTT04P  EQU   RVT+56
RVTACCLP EQU   RVT+60
RVTRACCP EQU   RVT+64
RVTTLP   EQU   RVT+68
RVTTMP   EQU   RVT+72
RVTTUP   EQU   RVT+80
RVTESGEP EQU   RVT+84
RVTESGUP EQU   RVT+88
RVTESARP EQU   RVT+92
RVTRAARP EQU   RVT+96
RVTRAGEP EQU   RVT+100
RVTADDPP EQU   RVT+104
RVTACCQP EQU   RVT+108
RVTSAGUP EQU   RVT+124
RVTSAGEP EQU   RVT+128
RVTESCKP EQU   RVT+132
RVTMSGAP EQU   RVT+136
RVTMSGDP EQU   RVT+140
RVTADDTP EQU   RVT+160
RVTADDUP EQU   RVT+164
RVTADD2P EQU   RVT+180
RVTRSAGP EQU   RVT+184
RVTMSGBP EQU   RVT+188
RVTADDSP EQU   RVT+192
RVTADD3P EQU   RVT+196
RVTT05P  EQU   RVT+200
RVTPADSP EQU   RVT+204
RVTTRP   EQU   RVT+228
RVTADD4P EQU   RVT+232
RVTSAPCP EQU   RVT+236
RVTSAARP EQU   RVT+240
RVTSAGNP EQU   RVT+244
RVTT06P  EQU   RVT+248
RVTSAGCP EQU   RVT+252
RVTSAGQP EQU   RVT+256
RVTESGCP EQU   RVT+260
RVTESGQP EQU   RVT+264
RVTDTMTP EQU   RVT+268
RVTDTUTP EQU   RVT+272
RVTDUCKP EQU   RVT+276
RVTDUCCP EQU   RVT+280
DTDT     EQU   0
DTDTDIM  EQU   DTDT+8
DTDTD    EQU   DTDT+12
DTDTDTL  EQU   DTDTD
DTDTDTD  EQU   DTDTD+1
DTDTDTN  EQU   DTDTD+32
ESBA     EQU   0
ESBASYM  EQU   ESBA+28
ESBAAS   EQU   ESBA+60
ESBAAST  EQU   ESBAAS
ESBAAS1  EQU   ESBAAS+4
ESBAAS2  EQU   ESBAAS+8
ESBALAD  EQU   ESBA+76
ESBAD    EQU   ESBA+80
ESBADOF  EQU   ESBAD
ESBADLE  EQU   ESBAD+4
ESBADT   EQU   ESBAD+10
ESBADTY  EQU   ESBADT
ESBADTD  EQU   ESBADT+2
ESBADIM  EQU   ESBAD+44
ESBADIL  EQU   ESBAD+48
ESBADF   EQU   ESBAD+52
ESBADFA  EQU   ESBADF
ESBAF    EQU   ESBA+161
ESBAFS   EQU   ESBAF
ESBAFC   EQU   ESBAF+1
ESBAR    EQU   ESBA+180
ESBARL   EQU   ESBAR
ESBART   EQU   ESBAR+2
PDADAE   EQU   0
PDADAEAP EQU   PDADAE
PDADAEF  EQU   PDADAE+8
PBAD     EQU   0
PBADMP   EQU   PBAD
PBADMF   EQU   PBAD+6
PBADEP   EQU   PBAD+8
PBADEF   EQU   PBAD+14
PBADAP   EQU   PBAD+16
PBADAL   EQU   PBAD+20
PBADAF   EQU   PBAD+22
PBADAT   EQU   PBAD+24
PBADATS  EQU   PBADAT
PBADATR  EQU   PBADAT
PBADATG  EQU   PBADAT
PBADATD  EQU   PBADAT
PBADATE  EQU   PBADAT
PBADAS   EQU   PBAD+25
PBADAI   EQU   PBAD+26
PBADAEP  EQU   PBAD+28
PBADA    EQU   0
PBADAE   EQU   0
PBADAEAP EQU   PBADAE
PBADAEAL EQU   PBADAE+4
PBADAEF  EQU   PBADAE+8
PBADAEFD EQU   PBADAEF
PBADAES  EQU   PBADAE+9
PBADAEI  EQU   PBADAE+10
PBADAEXP EQU   PBADAE+12
PBADAEA  EQU   0
PXDTD    EQU   0
PXDTDIP  EQU   PXDTD
PXDTDIF  EQU   PXDTD+6
PXDTDIFP EQU   PXDTDIF
PXLEN    EQU   0
PXLENIP  EQU   PXLEN
PXLENIF  EQU   PXLEN+6
PXLENIFP EQU   PXLENIF
PXLENI   EQU   0
PXDIM    EQU   0
PXDIMIP  EQU   PXDIM
PXDIMIF  EQU   PXDIM+6
PXNTR    EQU   0
@NM00169 EQU   PXNTR
PXNTRIP  EQU   @NM00169
PXNTRIF  EQU   @NM00169+6
PXREM    EQU   0
PXREMQP  EQU   PXREM
PXREMQF  EQU   PXREM+6
PXCPU    EQU   0
PXCPUIP  EQU   PXCPU
PXCPUIF  EQU   PXCPU+6
PXASI    EQU   0
PXASIIP  EQU   PXASI
PXASIIF  EQU   PXASI+6
PTRBASED EQU   0
PDL      EQU   0
BLSRACCL EQU   0
BLSRACCQ EQU   0
BLSRADDP EQU   0
BLSRADDR EQU   0
BLSRADDS EQU   0
BLSRDUCC EQU   0
BLSRDUCK EQU   0
BLSRESAR EQU   0
BLSRESGC EQU   0
BLSRESGE EQU   0
BLSRESGQ EQU   0
BLSRMSGB EQU   0
BLSRMSGD EQU   0
BLSRPADS EQU   0
BLSRRAAR EQU   0
BLSRRAGE EQU   0
BLSRSAAR EQU   0
BLSRSAG  EQU   0
BLSRSAGC EQU   0
BLSRSAGE EQU   0
BLSRSAGN EQU   0
BLSRSAGQ EQU   0
BLSRSAPC EQU   0
BLSTA    EQU   0
BLSTB    EQU   0
BLSTC    EQU   0
BLSTF    EQU   0
BLSTL    EQU   0
BLSTM    EQU   0
BLSTR    EQU   0
BLSTU    EQU   0
BLSTY    EQU   0
BLST01   EQU   0
BLST02   EQU   0
BLST03   EQU   0
BLST04   EQU   0
BLST05   EQU   0
BLST06   EQU   0
BLSUALLO EQU   0
BLSUBLDD EQU   0
BLSUBLDL EQU   0
BLSUDYNA EQU   0
BLSUFREE EQU   0
BLSUFRE1 EQU   0
BLSUMON  EQU   0
BLSUMONA EQU   0
BLSUMONC EQU   0
BLSUMOND EQU   0
BLSUMONL EQU   0
BLSUMONT EQU   0
BLSUMONX EQU   0
BLSUMON2 EQU   0
BLSUMPKN EQU   0
BLSUMPK1 EQU   0
BLSUPARI EQU   0
BLSUPARU EQU   0
BLSUPGMC EQU   0
BLSUPGMD EQU   0
BLSUPGML EQU   0
BLSUPGMR EQU   0
BLSUPRTA EQU   0
BLSUPRTN EQU   0
BLSUPRTT EQU   0
BLSUPUTA EQU   0
BLSUPUTC EQU   0
BLSUPUTD EQU   0
BLSUPUTL EQU   0
BLSUPUTN EQU   0
BLSUPUTO EQU   0
BLSUPUTT EQU   0
BLSUPUTV EQU   0
BLSUSTAI EQU   0
BLSUTRMA EQU   0
BLSUTRMN EQU   0
BLSUVSAR EQU   0
BLSUVSCR EQU   0
BLSUVSEN EQU   0
BLSUVSER EQU   0
BLSUVSGE EQU   0
BLSUVSGU EQU   0
BLSUVSMR EQU   0
BLSUVSPO EQU   0
BLSUVSPU EQU   0
BLSUZZ2C EQU   0
BLSUZZ2D EQU   0
BLSUZZ2R EQU   0
IKJEFF02 EQU   0
IKJEFF18 EQU   0
IKJEFF19 EQU   0
IKJGETL  EQU   0
IKJPARS  EQU   0
IKJPTGT  EQU   0
IKJPUTL  EQU   0
IKJSCAN  EQU   0
IKJSTCK  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
PBADE    EQU   0
PBADM    EQU   0
PDADA    EQU   0
PDADAEA  EQU   0
PDADE    EQU   0
PDADM    EQU   0
PXASII   EQU   0
PXA1     EQU   0
PXA2     EQU   0
PXCPUI   EQU   0
PXDIMI   EQU   0
PXDTDI   EQU   0
PXDTYPE  EQU   0
PXLENGTH EQU   0
PXMULT   EQU   0
PXNTRI1  EQU   0
PXNTRI2  EQU   0
PXNTRY   EQU   0
PXREMQ   EQU   0
PXRMK    EQU   0
PXSUBFB  EQU   0
PXSUBFE  EQU   0
PXSUBFG  EQU   0
PXSUBFI  EQU   0
PXSUBFJ  EQU   0
PXSUBFL  EQU   0
PXSUBFN  EQU   0
PXTEST   EQU   0
PZ2      EQU   0
ESPA     EQU   0
ESPAAS   EQU   ESPA+60
ESPAD    EQU   ESPA+80
ESPADT   EQU   ESPAD+10
ESPADF   EQU   ESPAD+52
ESPAF    EQU   ESPA+161
ESPAFS   EQU   ESPAF
ESPAFC   EQU   ESPAF+1
ESPAR    EQU   ESPA+180
ESPART   EQU   ESPAR+2
PD       EQU   0
PXAO     EQU   0
PDAD     EQU   0
PDADMP   EQU   PDAD
PDADMF   EQU   PDAD+6
PDADEP   EQU   PDAD+8
PDADEF   EQU   PDAD+14
PDADAP   EQU   PDAD+16
PDADAF   EQU   PDAD+22
PDADAT   EQU   PDAD+24
PDADATR  EQU   PDADAT
PDADAEP  EQU   PDAD+28
PDLEN    EQU   0
CPPL     EQU   ZZ2CPPL
CPPLUPT  EQU   CPPL+4
CPPLPSCB EQU   CPPL+8
CPPLECT  EQU   CPPL+12
SAAU     EQU   VSAMBUFR
SAAUAS   EQU   SAAU+12
SAAUDT   EQU   SAAU+32
SAAUF    EQU   SAAU+68
SAAUFT   EQU   SAAUF+10
SAAUFF   EQU   SAAUF+52
SAAUSF   EQU   SAAU+128
SAAUSRC  EQU   SAAU+152
SAAUC    EQU   SAAU+254
SAAUCT   EQU   SAAUC+2
HSDH     EQU   HSD
HSDHV    EQU   HSD
HSDHVFPR EQU   HSDHV+120
HSDHVGPR EQU   HSDHV+152
HSDHA    EQU   HSD
HSDC     EQU   HSD
HSDCSF   EQU   HSDC+2
HSDCPSA  EQU   HSDC+8
HSDCFPR  EQU   HSDCPSA+352
HSDCGPR  EQU   HSDCPSA+384
HSDS     EQU   HSD
PTRPTR   EQU   PTRBIT
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
HSDSC    EQU   HSDS+8
HSDSP    EQU   HSDS+4
HSDSASI  EQU   HSDS+2
HSDSK2   EQU   HSDS+1
HSDSK1   EQU   HSDS
@NM00146 EQU   HSDCPSA+552
HSDCASCO EQU   HSDCPSA+548
HSDCASCN EQU   HSDCPSA+544
HSDCTCBO EQU   HSDCPSA+540
HSDCTCBN EQU   HSDCPSA+536
HSDCLCCR EQU   HSDCPSA+532
HSDCLCCV EQU   HSDCPSA+528
HSDCPCCR EQU   HSDCPSA+524
HSDCPCCV EQU   HSDCPSA+520
HSDCLADD EQU   HSDCPSA+518
HSDCPADD EQU   HSDCPSA+516
HSDCPSID EQU   HSDCPSA+512
HSDCTLR  EQU   HSDCPSA+448
HSDCADDR EQU   HSDCPSA+350
@NM00145 EQU   HSDCPSA+268
HSDCPREF EQU   HSDCPSA+264
HSDCLPSW EQU   HSDCPSA+256
@NM00144 EQU   HSDCPSA
HSDCSCPU EQU   HSDC+6
@NM00143 EQU   HSDC+4
@NM00142 EQU   HSDCSF
HSDCSFR  EQU   HSDCSF
HSDCSFI  EQU   HSDCSF
HSDCSFU  EQU   HSDCSF
HSDCCLA  EQU   HSDC+1
HSDCTYPE EQU   HSDC
@NM00141 EQU   HSDHA+132
HSDHACAW EQU   HSDHA+128
HSDHACSW EQU   HSDHA+120
@NM00140 EQU   HSDHA+20
@NM00139 EQU   HSDHA+12
@NM00138 EQU   HSDHA+4
@NM00137 EQU   HSDHA+2
@NM00136 EQU   HSDHA+1
@NM00135 EQU   HSDHA
@NM00134 EQU   HSDHV+292
HSDHVCVT EQU   HSDHV+288
HSDHVPSW EQU   HSDHV+280
HSDHVCR  EQU   HSDHV+216
@NM00133 EQU   HSDHV+20
@NM00132 EQU   HSDHV+12
@NM00131 EQU   HSDHV+4
@NM00130 EQU   HSDHV+2
@NM00129 EQU   HSDHV+1
@NM00128 EQU   HSDHV
@NM00127 EQU   HSDH+120
HSDHTITL EQU   HSDH+20
HSDHTOD  EQU   HSDH+12
HSDHPROG EQU   HSDH+4
HSDHASI  EQU   HSDH+2
HSDHCLA  EQU   HSDH+1
HSDHTYPE EQU   HSDH
SAAU999  EQU   SAAU+3072
SAAUCT1  EQU   SAAUCT
SAAUCL   EQU   SAAUC
@NM00125 EQU   SAAU+153
SAAUPGV  EQU   SAAU+144
SAAUGMT  EQU   SAAU+136
@NM00124 EQU   SAAUSF
SAAUSFS  EQU   SAAUSF
SAAUSFI  EQU   SAAUSF
SAAUSF9  EQU   SAAUSF
SAAUSF1  EQU   SAAUSF
SAAUF99  EQU   SAAUF+60
@NM00123 EQU   SAAUF+56
@NM00122 EQU   SAAUFF
SAAUFFA  EQU   SAAUFF
SAAUFIL  EQU   SAAUF+48
SAAUFIM  EQU   SAAUF+44
SAAUFT9  EQU   SAAUFT+34
SAAUFTE  EQU   SAAUFT+33
SAAUFTD  EQU   SAAUFT+2
@NM00121 EQU   SAAUFT+1
SAAUFTY  EQU   SAAUFT
SAAUFT0  EQU   SAAUFT
SAAUFLB  EQU   SAAUF+9
SAAUFOB  EQU   SAAUF+8
SAAUFLE  EQU   SAAUF+4
SAAUFOF  EQU   SAAUF
SAAUF00  EQU   SAAUF
@NM00120 EQU   SAAU+66
SAAUELK  EQU   SAAU+66
SAAUDT9  EQU   SAAUDT+34
SAAUDTE  EQU   SAAUDT+33
SAAUDTD  EQU   SAAUDT+2
@NM00119 EQU   SAAUDT+1
SAAUDTY  EQU   SAAUDT
SAAUDT0  EQU   SAAUDT
SAAULAD  EQU   SAAU+28
SAAUAS9  EQU   SAAUAS+16
@NM00118 EQU   SAAUAS+12
SAAUAS2  EQU   SAAUAS+8
SAAUAS1  EQU   SAAUAS+4
@NM00117 EQU   SAAUAS+2
SAAUAST  EQU   SAAUAS
SAAUAS0  EQU   SAAUAS
SAAURDX  EQU   SAAU+8
@NM00116 EQU   SAAU+2
SAAURID  EQU   SAAU
CPPLCBUF EQU   CPPL
@NM00151 EQU   PDAD+36
PDADAV   EQU   PDAD+32
PDADAI   EQU   PDAD+26
PDADAS   EQU   PDAD+25
@NM00150 EQU   PDADAT
PDADATQ  EQU   PDADAT
PDADATE  EQU   PDADAT
PDADATD  EQU   PDADAT
PDADATG  EQU   PDADAT
PDADATS  EQU   PDADAT
@NM00149 EQU   PDAD+23
PDADAF8  EQU   PDADAF
PDADAF7  EQU   PDADAF
PDADAF6  EQU   PDADAF
PDADAF5  EQU   PDADAF
PDADAF4  EQU   PDADAF
PDADAF3  EQU   PDADAF
PDADAF2  EQU   PDADAF
PDADAFP  EQU   PDADAF
PDADAL   EQU   PDAD+20
@NM00148 EQU   PDAD+15
PDADEF8  EQU   PDADEF
PDADEF7  EQU   PDADEF
PDADEF6  EQU   PDADEF
PDADEF5  EQU   PDADEF
PDADEF4  EQU   PDADEF
PDADEF3  EQU   PDADEF
PDADEF2  EQU   PDADEF
PDADEFP  EQU   PDADEF
PDADEL   EQU   PDAD+12
@NM00147 EQU   PDAD+7
PDADMF8  EQU   PDADMF
PDADMF7  EQU   PDADMF
PDADMF6  EQU   PDADMF
PDADMF5  EQU   PDADMF
PDADMF4  EQU   PDADMF
PDADMF3  EQU   PDADMF
PDADMF2  EQU   PDADMF
PDADMFP  EQU   PDADMF
PDADML   EQU   PDAD+4
ESPA999  EQU   ESPA+694
ESPART1  EQU   ESPART
ESPARL   EQU   ESPAR
@NM00012 EQU   ESPA+168
ESPAABS  EQU   ESPA+164
@NM00011 EQU   ESPAF+2
@NM00010 EQU   ESPAFC
ESPAFCD  EQU   ESPAFC
ESPAFSS  EQU   ESPAFS
ESPAFSX  EQU   ESPAFS
ESPAFSR  EQU   ESPAFS
ESPAFSP  EQU   ESPAFS
ESPAFSA  EQU   ESPAFS
ESPAFSM  EQU   ESPAFS
ESPAFS2  EQU   ESPAFS
ESPAFSC  EQU   ESPAFS
ESPAKEY  EQU   ESPA+160
@NM00009 EQU   ESPA+144
ESPAMAD  EQU   ESPA+140
ESPAD99  EQU   ESPAD+60
@NM00008 EQU   ESPAD+56
@NM00007 EQU   ESPADF
ESPADFA  EQU   ESPADF
ESPADIL  EQU   ESPAD+48
ESPADIM  EQU   ESPAD+44
ESPADT9  EQU   ESPADT+34
ESPADTE  EQU   ESPADT+33
ESPADTD  EQU   ESPADT+2
@NM00006 EQU   ESPADT+1
ESPADTY  EQU   ESPADT
ESPADT0  EQU   ESPADT
ESPADLB  EQU   ESPAD+9
ESPADOB  EQU   ESPAD+8
ESPADLE  EQU   ESPAD+4
ESPADOF  EQU   ESPAD
ESPAD00  EQU   ESPAD
ESPALAD  EQU   ESPA+76
ESPAAS9  EQU   ESPAAS+16
@NM00005 EQU   ESPAAS+12
ESPAAS2  EQU   ESPAAS+8
ESPAAS1  EQU   ESPAAS+4
@NM00004 EQU   ESPAAS+2
ESPAAST  EQU   ESPAAS
ESPAAS0  EQU   ESPAAS
ESPARV1  EQU   ESPA+59
ESPAELK  EQU   ESPA+59
ESPASYM  EQU   ESPA+28
ESPARDX  EQU   ESPA+24
@NM00003 EQU   ESPA+16
@NM00002 EQU   ESPA+8
@NM00001 EQU   ESPA+2
ESPARID  EQU   ESPA
@NM00177 EQU   PXASI+8
@NM00176 EQU   PXASI+7
PXASIIF8 EQU   PXASIIF
PXASIIF7 EQU   PXASIIF
PXASIIF6 EQU   PXASIIF
PXASIIF5 EQU   PXASIIF
PXASIIF4 EQU   PXASIIF
PXASIIF3 EQU   PXASIIF
PXASIIF2 EQU   PXASIIF
PXASIIFP EQU   PXASIIF
PXASIIL  EQU   PXASI+4
@NM00175 EQU   PXCPU+8
@NM00174 EQU   PXCPU+7
PXCPUIF8 EQU   PXCPUIF
PXCPUIF7 EQU   PXCPUIF
PXCPUIF6 EQU   PXCPUIF
PXCPUIF5 EQU   PXCPUIF
PXCPUIF4 EQU   PXCPUIF
PXCPUIF3 EQU   PXCPUIF
PXCPUIF2 EQU   PXCPUIF
PXCPUIFP EQU   PXCPUIF
PXCPUIL  EQU   PXCPU+4
@NM00173 EQU   PXREM+8
@NM00172 EQU   PXREM+7
PXREMQF8 EQU   PXREMQF
PXREMQF7 EQU   PXREMQF
PXREMQF6 EQU   PXREMQF
PXREMQF5 EQU   PXREMQF
PXREMQF4 EQU   PXREMQF
PXREMQF3 EQU   PXREMQF
PXREMQF2 EQU   PXREMQF
PXREMQFP EQU   PXREMQF
PXREMQL  EQU   PXREM+4
@NM00171 EQU   PXNTR+16
@NM00170 EQU   @NM00169+7
PXNTRIF8 EQU   PXNTRIF
PXNTRIF7 EQU   PXNTRIF
PXNTRIF6 EQU   PXNTRIF
PXNTRIF5 EQU   PXNTRIF
PXNTRIF4 EQU   PXNTRIF
PXNTRIF3 EQU   PXNTRIF
PXNTRIF2 EQU   PXNTRIF
PXNTRIFP EQU   PXNTRIF
PXNTRIL  EQU   @NM00169+4
@NM00168 EQU   PXDIM+8
@NM00167 EQU   PXDIM+7
PXDIMIF8 EQU   PXDIMIF
PXDIMIF7 EQU   PXDIMIF
PXDIMIF6 EQU   PXDIMIF
PXDIMIF5 EQU   PXDIMIF
PXDIMIF4 EQU   PXDIMIF
PXDIMIF3 EQU   PXDIMIF
PXDIMIF2 EQU   PXDIMIF
PXDIMIFP EQU   PXDIMIF
PXDIMIL  EQU   PXDIM+4
@NM00166 EQU   PXLEN+8
@NM00165 EQU   PXLEN+7
PXLENIF8 EQU   PXLENIF
PXLENIF7 EQU   PXLENIF
PXLENIF6 EQU   PXLENIF
PXLENIF5 EQU   PXLENIF
PXLENIF4 EQU   PXLENIF
PXLENIF3 EQU   PXLENIF
PXLENIF2 EQU   PXLENIF
PXLENIL  EQU   PXLEN+4
@NM00164 EQU   PXDTD+8
@NM00163 EQU   PXDTD+7
PXDTDIF8 EQU   PXDTDIF
PXDTDIF7 EQU   PXDTDIF
PXDTDIF6 EQU   PXDTDIF
PXDTDIF5 EQU   PXDTDIF
PXDTDIF4 EQU   PXDTDIF
PXDTDIF3 EQU   PXDTDIF
PXDTDIF2 EQU   PXDTDIF
PXDTDIL  EQU   PXDTD+4
@NM00162 EQU   PBADAEF
PBADAEFX EQU   PBADAEF
@NM00161 EQU   PBADAEF
@NM00160 EQU   PBADAE+6
@NM00159 EQU   PBAD+36
PBADAV   EQU   PBAD+32
@NM00158 EQU   PBADAT
PBADATQ  EQU   PBADAT
@NM00157 EQU   PBAD+23
PBADAF8  EQU   PBADAF
PBADAF7  EQU   PBADAF
PBADAF6  EQU   PBADAF
PBADAF5  EQU   PBADAF
PBADAF4  EQU   PBADAF
PBADAF3  EQU   PBADAF
PBADAF2  EQU   PBADAF
PBADAFP  EQU   PBADAF
@NM00156 EQU   PBAD+15
PBADEF8  EQU   PBADEF
PBADEF7  EQU   PBADEF
PBADEF6  EQU   PBADEF
PBADEF5  EQU   PBADEF
PBADEF4  EQU   PBADEF
PBADEF3  EQU   PBADEF
PBADEF2  EQU   PBADEF
PBADEFP  EQU   PBADEF
PBADEL   EQU   PBAD+12
@NM00155 EQU   PBAD+7
PBADMF8  EQU   PBADMF
PBADMF7  EQU   PBADMF
PBADMF6  EQU   PBADMF
PBADMF5  EQU   PBADMF
PBADMF4  EQU   PBADMF
PBADMF3  EQU   PBADMF
PBADMF2  EQU   PBADMF
PBADMFP  EQU   PBADMF
PBADML   EQU   PBAD+4
PDADAEXP EQU   PDADAE+12
PDADAEI  EQU   PDADAE+10
PDADAES  EQU   PDADAE+9
@NM00154 EQU   PDADAEF
PDADAEFX EQU   PDADAEF
PDADAEFD EQU   PDADAEF
@NM00153 EQU   PDADAEF
@NM00152 EQU   PDADAE+6
PDADAEAL EQU   PDADAE+4
ESBA999  EQU   ESBA+694
ESBART1  EQU   ESBART
@NM00103 EQU   ESBA+168
ESBAABS  EQU   ESBA+164
@NM00102 EQU   ESBAF+2
@NM00101 EQU   ESBAFC
ESBAFCD  EQU   ESBAFC
ESBAFSS  EQU   ESBAFS
ESBAFSX  EQU   ESBAFS
ESBAFSR  EQU   ESBAFS
ESBAFSP  EQU   ESBAFS
ESBAFSA  EQU   ESBAFS
ESBAFSM  EQU   ESBAFS
ESBAFS2  EQU   ESBAFS
ESBAFSC  EQU   ESBAFS
ESBAKEY  EQU   ESBA+160
@NM00100 EQU   ESBA+144
ESBAMAD  EQU   ESBA+140
ESBAD99  EQU   ESBAD+60
@NM00099 EQU   ESBAD+56
@NM00098 EQU   ESBADF
ESBADT9  EQU   ESBADT+34
ESBADTE  EQU   ESBADT+33
@NM00097 EQU   ESBADT+1
ESBADT0  EQU   ESBADT
ESBADLB  EQU   ESBAD+9
ESBADOB  EQU   ESBAD+8
ESBAD00  EQU   ESBAD
ESBAAS9  EQU   ESBAAS+16
@NM00096 EQU   ESBAAS+12
@NM00095 EQU   ESBAAS+2
ESBAAS0  EQU   ESBAAS
ESBARV1  EQU   ESBA+59
ESBAELK  EQU   ESBA+59
ESBARDX  EQU   ESBA+24
@NM00094 EQU   ESBA+16
@NM00093 EQU   ESBA+8
@NM00092 EQU   ESBA+2
ESBARID  EQU   ESBA
DTDTDVEP EQU   DTDTD+44
DTDTDSEP EQU   DTDTD+36
DTDTID   EQU   DTDT
RVT99999 EQU   RVT+384
RVT0096P EQU   RVT+380
RVT0095P EQU   RVT+376
RVT0094P EQU   RVT+372
RVT0093P EQU   RVT+368
RVT0092P EQU   RVT+364
RVT0091P EQU   RVT+360
RVT0090P EQU   RVT+356
RVT0089P EQU   RVT+352
RVT0088P EQU   RVT+348
RVT0087P EQU   RVT+344
RVT0086P EQU   RVT+340
RVT0085P EQU   RVT+336
RVT0084P EQU   RVT+332
RVT0083P EQU   RVT+328
RVT0082P EQU   RVT+324
RVT0081P EQU   RVT+320
RVT0080P EQU   RVT+316
RVT0079P EQU   RVT+312
RVT0078P EQU   RVT+308
RVT0077P EQU   RVT+304
RVT0076P EQU   RVT+300
RVT0075P EQU   RVT+296
RVT0074P EQU   RVT+292
RVT0073P EQU   RVT+288
RVT0072P EQU   RVT+284
RVT0057P EQU   RVT+224
RVT0056P EQU   RVT+220
RVT0055P EQU   RVT+216
RVT0054P EQU   RVT+212
RVT0053P EQU   RVT+208
RVTADD1P EQU   RVT+176
RVT0044P EQU   RVT+172
RVT0043P EQU   RVT+168
RVT0040P EQU   RVT+156
RVT0039P EQU   RVT+152
RVT0038P EQU   RVT+148
RVT0037P EQU   RVT+144
RVT0031P EQU   RVT+120
RVT0030P EQU   RVT+116
RVT0029P EQU   RVT+112
RVT0020P EQU   RVT+76
RVT0012P EQU   RVT+44
RVT0010P EQU   RVT+36
RVT0009P EQU   RVT+32
RVT0008P EQU   RVT+28
RVT0006P EQU   RVT+20
ZZ69999  EQU   ZZ6+1792
ZZ6BRB   EQU   ZZ6B+12
ZZ6BRC   EQU   ZZ6B+8
@NM00088 EQU   ZZ6B+6
ZZ6BFL   EQU   ZZ6B+4
ZZ6BDA   EQU   ZZ6B
@NM00087 EQU   ZZ6+540
ZZ6BUFI  EQU   ZZ6+536
ZZ6BUFP  EQU   ZZ6+532
ZZ6FILE  EQU   ZZ6+524
ZZ6BUFB  EQU   ZZ6+520
ZZ6BUFL  EQU   ZZ6+518
ZZ6BUFN  EQU   ZZ6+516
ZZ6ZZ6P  EQU   ZZ6+512
@NM00086 EQU   ZZ6+256
ZZ6D999  EQU   ZZ6D+128
@NM00085 EQU   ZZ6D+116
ZZ6DCAP  EQU   ZZ6D+112
ZZ6DPRP  EQU   ZZ6D+108
ZZ6DDA2  EQU   ZZ6D+104
ZZ6DDA1  EQU   ZZ6D+100
@NM00084 EQU   ZZ6DF
ZZ6DFSU  EQU   ZZ6DF
ZZ6DFST  EQU   ZZ6DF
ZZ6DFDU  EQU   ZZ6DF
ZZ6DFBS  EQU   ZZ6DF
ZZ6DQ2   EQU   ZZ6D+88
ZZ6DQ1   EQU   ZZ6D+84
ZZ6DQA9  EQU   ZZ6DQA+16
@NM00083 EQU   ZZ6DQA+12
ZZ6DQA2  EQU   ZZ6DQA+8
ZZ6DQA1  EQU   ZZ6DQA+4
@NM00082 EQU   ZZ6DQA+2
ZZ6DQAT  EQU   ZZ6DQA
ZZ6DQA0  EQU   ZZ6DQA
ZZ6DRDX  EQU   ZZ6D+64
ZZ6DELK  EQU   ZZ6D+64
ZZ6DMEM  EQU   ZZ6D+56
ZZ6DDT1  EQU   ZZ6DDT
ZZ6DDO   EQU   ZZ6DD+2
ZZ6DDL   EQU   ZZ6DD
@NM00081 EQU   ZZ6D+2
ZZ6DRID  EQU   ZZ6D
ZZ6RDCB  EQU   ZZ6
ZZ60000  EQU   ZZ6
BVT99999 EQU   BVT+256
BVT0064P EQU   BVT+252
BVT0063P EQU   BVT+248
BVT0062P EQU   BVT+244
BVT0061P EQU   BVT+240
BVT0060P EQU   BVT+236
BVT0059P EQU   BVT+232
BVT0057P EQU   BVT+224
BVT0056P EQU   BVT+220
BVTSTBLP EQU   BVT+200
BVT0045P EQU   BVT+176
BVT0044P EQU   BVT+172
BVT0033P EQU   BVT+128
BVT0032P EQU   BVT+124
BVT0031P EQU   BVT+120
BVT0030P EQU   BVT+116
BVT0029P EQU   BVT+112
BVT0026P EQU   BVT+100
BVT0025P EQU   BVT+96
BVT0024P EQU   BVT+92
BVT0023P EQU   BVT+88
BVT0016P EQU   BVT+60
BVT0015P EQU   BVT+56
BVT0014P EQU   BVT+52
BVT0003P EQU   BVT+8
BVT0001P EQU   BVT
SA99     EQU   SA+72
SARC     EQU   SAR+56
SARB     EQU   SAR+52
SARA     EQU   SAR+48
SAR9     EQU   SAR+44
SAR8     EQU   SAR+40
SAR7     EQU   SAR+36
SAR6     EQU   SAR+32
SAR5     EQU   SAR+28
SAR4     EQU   SAR+24
SAR3     EQU   SAR+20
SAR2     EQU   SAR+16
SAR0     EQU   SAR+8
SARF     EQU   SAR+4
SARE     EQU   SAR
SAFWD    EQU   SA+8
SABAK    EQU   SA+4
SA1L     EQU   SA1+1
SA1P     EQU   SA1
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00080 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00079 EQU   UPT
@NM00078 EQU   ECT+52
@NM00077 EQU   ECT+48
@NM00076 EQU   ECT+44
@NM00075 EQU   ECTSWS2+1
@NM00074 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00073 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00072 EQU   PSCB+36
@NM00071 EQU   PSCB+32
@NM00070 EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00069 EQU   PSCBATR1
@NM00068 EQU   PSCBATR1
@NM00067 EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
PSCBUSRL EQU   PSCB+7
PSCBUSER EQU   PSCB
CMDT1    EQU   CMDT
CMDO     EQU   CMD+2
CMDL     EQU   CMD
ZZ299999 EQU   ZZ2+8192
ZZ2AXOT1 EQU   ZZ2AXOT
ZZ2AXOL  EQU   ZZ2AXO
@NM00066 EQU   ZZ2+7288
@NM00065 EQU   ZZ2AMDX+4
ZZ2AMDXC EQU   ZZ2AMDX
ZZ2HSD   EQU   ZZ2+3056
@NM00064 EQU   ZZ2ES
@NM00063 EQU   ZZ2+2868
ZZ2ITSEC EQU   ZZ2ITSE+1
@NM00062 EQU   ZZ2ITSE
ZZ2ITSEP EQU   ZZ2ITSE
ZZ2ITSEW EQU   ZZ2ITSE
@NM00061 EQU   ZZ2ITR+20
ZZ2ITREC EQU   ZZ2ITRE+1
@NM00060 EQU   ZZ2ITRE
ZZ2ITREP EQU   ZZ2ITRE
ZZ2ITREW EQU   ZZ2ITRE
@NM00059 EQU   ZZ2ITR+9
ZZ2ITRRC EQU   ZZ2ITR+8
ZZ2ITR2P EQU   ZZ2ITR+4
ZZ2ITRPP EQU   ZZ2ITR
@NM00058 EQU   ZZ2+1544
ZZ2PGM   EQU   ZZ2+1536
@NM00057 EQU   ZZ2+1526
ZZ2CW    EQU   ZZ2+1524
@NM00056 EQU   ZZ2+1504
@NM00055 EQU   ZZ2+1352
ZZ2FFSYP EQU   ZZ2+1348
ZZ2SASYP EQU   ZZ2+1344
ZZ2RDSYP EQU   ZZ2+1340
ZZ2RASYP EQU   ZZ2+1336
ZZ2PHSYP EQU   ZZ2+1332
ZZ2ESSYP EQU   ZZ2+1328
ZZ200SYP EQU   ZZ2+1324
ZZ2SCWP  EQU   ZZ2+1320
ZZ2TTLP  EQU   ZZ2+1316
ZZ2LOADP EQU   ZZ2+1312
ZZ2VRESP EQU   ZZ2+1308
ZZ2CPPLE EQU   ZZ2CPPL+12
ZZ2CPPLP EQU   ZZ2CPPL+8
ZZ2CPPLU EQU   ZZ2CPPL+4
ZZ2VRSAP EQU   ZZ2+1288
ZZ2DVTP  EQU   ZZ2+1276
@NM00054 EQU   ZZ2+1272
@NM00053 EQU   ZZ2+1268
ZZ2RPLP  EQU   ZZ2+1260
ZZ2TCBP  EQU   ZZ2+1256
@NM00052 EQU   ZZ2+1252
ZZ2ZZ2P  EQU   ZZ2+1248
@NM00051 EQU   ZZ2+1112
ZZ2FPDRP EQU   ZZ2+1108
ZZ2FDSDP EQU   ZZ2+1104
ZZ2APDRP EQU   ZZ2+1100
ZZ2ADSDP EQU   ZZ2+1096
ZZ2ENQ0P EQU   ZZ2+1092
@NM00050 EQU   ZZ2+1080
ZZ2MSG0P EQU   ZZ2+1076
ZZ2FT25P EQU   ZZ2+1072
ZZ2MSGSP EQU   ZZ2+1060
ZZ2ALOCP EQU   ZZ2+1056
@NM00049 EQU   ZZ2+976
ZZ2TOD   EQU   ZZ2+968
ZZ2STGN  EQU   ZZ2STG+4
ZZ2STGP  EQU   ZZ2STG
@NM00048 EQU   ZZ2+952
ZZ2SCMDE EQU   ZZ2+944
ZZ2SCMDN EQU   ZZ2+936
ZZ2IDENT EQU   ZZ2+928
ZZ2A9999 EQU   ZZ2A+656
@NM00047 EQU   ZZ2A+224
@NM00046 EQU   ZZ2A+220
ZZ2AQD99 EQU   ZZ2AQD+60
@NM00045 EQU   ZZ2AQD+56
@NM00044 EQU   ZZ2AQDF
ZZ2AQDFA EQU   ZZ2AQDF
ZZ2AQDIL EQU   ZZ2AQD+48
ZZ2AQDIM EQU   ZZ2AQD+44
ZZ2AQDT9 EQU   ZZ2AQDT+34
ZZ2AQDTE EQU   ZZ2AQDT+33
ZZ2AQDTD EQU   ZZ2AQDT+2
@NM00043 EQU   ZZ2AQDT+1
ZZ2AQDTY EQU   ZZ2AQDT
ZZ2AQDT0 EQU   ZZ2AQDT
ZZ2AQDLB EQU   ZZ2AQD+9
ZZ2AQDOB EQU   ZZ2AQD+8
ZZ2AQDOF EQU   ZZ2AQD
ZZ2AQD00 EQU   ZZ2AQD
ZZ2AQAS9 EQU   ZZ2AQAS+16
@NM00042 EQU   ZZ2AQAS+12
ZZ2AQAS2 EQU   ZZ2AQAS+8
@NM00041 EQU   ZZ2AQAS+2
ZZ2AQAST EQU   ZZ2AQAS
ZZ2AQAS0 EQU   ZZ2AQAS
ZZ2ADPTA EQU   ZZ2ADPT
ZZ2ADPL  EQU   ZZ2ADP
ZZ2ADMTA EQU   ZZ2ADMT
ZZ2ADML  EQU   ZZ2ADM
ZZ2ADDTA EQU   ZZ2ADDT
ZZ2ADDL  EQU   ZZ2ADD
@NM00040 EQU   ZZ2A+72
ZZ2APIDB EQU   ZZ2APID+3
ZZ2APIDA EQU   ZZ2APID
@NM00039 EQU   ZZ2A+24
@NM00038 EQU   ZZ2AF+5
ZZ2AFX   EQU   ZZ2AF+5
@NM00037 EQU   ZZ2AF+3
ZZ2AFS   EQU   ZZ2AF+2
ZZ2AFD   EQU   ZZ2AF+2
ZZ2AFQ   EQU   ZZ2AF+2
ZZ2AF$   EQU   ZZ2AF+2
@NM00036 EQU   ZZ2AF+2
ZZ2AFM   EQU   ZZ2AF+2
@NM00035 EQU   ZZ2AF+2
@NM00034 EQU   ZZ2AF+1
ZZ2AFV   EQU   ZZ2AF+1
@NM00033 EQU   ZZ2AF+1
ZZ2AFC   EQU   ZZ2AF+1
@NM00032 EQU   ZZ2AF
ZZ2AFFS  EQU   ZZ2AF
ZZ2AFT   EQU   ZZ2AF
ZZ2AFP   EQU   ZZ2AF
@NM00031 EQU   ZZ2A+8
ZZ2ALINE EQU   ZZ2A+4
@NM00030 EQU   ZZ2A+3
ZZ2ACH   EQU   ZZ2A
@NM00029 EQU   ZZ2+264
@NM00028 EQU   ZZ2+263
ZZ2PRTT0 EQU   ZZ2PRTT
ZZ2PRTO  EQU   ZZ2PRT+2
ZZ2PRTL  EQU   ZZ2PRT
@NM00027 EQU   ZZ2AMD+56
ZZ2AMDXP EQU   ZZ2AMD+52
ZZ2AMDD  EQU   ZZ2AMD+48
ZZ2AMDL  EQU   ZZ2AMD+44
ZZ2AMDU  EQU   ZZ2AMD+28
ZZ2AMDF  EQU   ZZ2AMD+24
ZZ2AMDS  EQU   ZZ2AMD+20
ZZ2AMDC  EQU   ZZ2AMD+16
ZZ2AMDP  EQU   ZZ2AMD+12
ZZ2AMDB  EQU   ZZ2AMD+8
@NM00026 EQU   @NM00025
ZZ2AMD2  EQU   @NM00025
ZZ2AMD1  EQU   @NM00025
ZZ2AMD0  EQU   ZZ2AMD+6
ZZ2AMDA  EQU   ZZ2AMD+4
ZZ2AMDT  EQU   ZZ2AMD
ZZ199999 EQU   ZZ1+3072
@NM00024 EQU   ZZ1+2160
ZZ1TRTAS EQU   ZZ1+1904
ZZ1TRUPC EQU   ZZ1+1648
ZZ1NASID EQU   ZZ1N+274
ZZ1NSTRL EQU   ZZ1N+272
ZZ1NOFF  EQU   ZZ1N+268
ZZ1NBDY  EQU   ZZ1N+264
ZZ1NADE  EQU   ZZ1N+260
ZZ1NADB  EQU   ZZ1N+256
ZZ1NSTR  EQU   ZZ1N
@NM00023 EQU   ZZ1+1080
ZZ1TREBC EQU   ZZ1+824
@NM00022 EQU   ZZ1+377
ZZ1USTAE EQU   ZZ1+376
@NM00021 EQU   ZZ1F+1
@NM00020 EQU   ZZ1F
ZZ1FM    EQU   ZZ1F
ZZ1FX    EQU   ZZ1F
ZZ1FU    EQU   ZZ1F
ZZ1EVEC  EQU   ZZ1EVE+1
@NM00019 EQU   ZZ1EVE
ZZ1EVEW  EQU   ZZ1EVE
ZZ1ACMP  EQU   ZZ1ATTN
@NM00018 EQU   ZZ1+144
ZZ1FPP   EQU   ZZ1+140
ZZ1ZZ6P  EQU   ZZ1+136
@NM00017 EQU   ZZ1+84
ZZ1PLINE EQU   ZZ1+80
ZZ1PGSZ  EQU   ZZ1+76
ZZ1PCNT  EQU   ZZ1+72
@NM00016 EQU   ZZ1+68
ZZ1TPAGE EQU   ZZ1+64
ZZ1TLINE EQU   ZZ1+60
@NM00015 EQU   ZZ1+48
ZZ1DSDP  EQU   ZZ1+44
ZZ1PDRP  EQU   ZZ1+40
ZZ1ZZ2P  EQU   ZZ1+36
ZZ1327WP EQU   ZZ1+32
ZZ1ACBP  EQU   ZZ1+28
@NM00014 EQU   ZZ1+24
ZZ1PDCBP EQU   ZZ1+20
ZZ1BLRBL EQU   ZZ1+16
@NM00013 EQU   ZZ1+12
ZZ1PNULL EQU   ZZ1+8
ZZ1NULL  EQU   ZZ1+4
ZZ1IDE   EQU   ZZ1
@NM00126 EQU   HSD+2
HSDCLA   EQU   HSD+1
HSDTYPE  EQU   HSD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00218 EQU   EXIT
@RC00265 EQU   @RC00233
@RF00277 EQU   @RC00210
@RC00311 EQU   @RC00304
@RT00345 EQU   EXIT
@RT00352 EQU   EXIT
@RT00386 EQU   EXIT
@RC00428 EQU   @RC00427
L190     EQU   @EL00002
@RC00511 EQU   @EL00003
@RC00535 EQU   @RC00531
@RF00521 EQU   @EL00003
@ENDDATA EQU   *
         END   BLSRADD1,(C'PLS1502',0701,78057)
