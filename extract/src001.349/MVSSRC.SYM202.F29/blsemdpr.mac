MDPR     TITLE 'BLSEMDPR- MODIFY PROBLEM IN IPCS DATA BASE             *
                        '
*     /* CHANGE ACTIVITY
*    THIS MODULE IS WRITTEN FOR @G57LPJD
*            01/25/78 PTM 7626
*            01/30/78 PTM 7647
*            01/30/78 PTM 7658
*            01/30/78 PTM 7662
*            01/31/78 PTM 7638
*            01/31/78 PTM 7665
*            02/10/78 PTM 7720
*            02/16/78 PTM 7769
BLSEMDPR CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'BLSEMDPR  78.066'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  LA    @10,4095(,@12)                                      0002
         USING @PSTART,@12                                         0002
         USING @PSTART+4095,@10                                    0002
         L     @00,@SIZDATD                                        0002
         BLSUALLR R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
*BLREXTRN - IDENTIFY EXTERNAL REFERENCES
         EXTRN BLSDDT00
         EXTRN BLSDTM00
         EXTRN BLSDSV00
         EXTRN BLSDC070
         EXTRN BLSDC600
         EXTRN BLSDC128
*   ZZ2PTR=R1;                      /* GET TASK VARIABLE             */
         LR    ZZ2PTR,R1                                           0377
*   RESPECIFY                                                      0378
*     R1 UNRESTRICTED;              /* FINISHED WITH REG1            */
*   RETC=0;                         /* INITIALIZE THE RETC           */
         SLR   RETC,RETC                                           0379
         SPACE 1
*   DO;                             /* BLSUPARS MF(E,PX)             */
*     CALL BLSUPARI(ZZ2,PCCSECT,PDAPTR);/* PARSE OPERANDS            */
         ST    ZZ2PTR,@AL00001                                     0381
         L     @09,PCPTR                                           0381
         ST    @09,@AL00001+4                                      0381
         LA    @09,PDAPTR                                          0381
         ST    @09,@AL00001+8                                      0381
         L     @09,ZZ2BVTP(,ZZ2PTR)                                0381
         L     @15,BVTPARIP(,@09)                                  0381
         LA    @01,@AL00001                                        0381
         BALR  @14,@15                                             0381
*     RESPECIFY                                                    0382
*      (GPR15F) RESTRICTED;                                        0382
*     IF GPR15F^=ZZZFLAGI THEN                                     0383
*                                                                  0383
         LTR   GPR15F,GPR15F                                       0383
         BZ    @RF00383                                            0383
*       /*************************************************************/
*       /*                                                           */
*       /* UNABLE TO PARSE                                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0384
*       DO;                         /* UNABLE TO PARSE               */
*         RETC=GPR15F;              /* RETURN CODE                   */
         LR    RETC,GPR15F                                         0385
*         GO TO EXITNORL;           /* EXIT WITHOUT PDL              */
         B     EXITNORL                                            0386
*       END;                                                       0387
*     RESPECIFY                                                    0388
*      (GPR15F) UNRESTRICTED;                                      0388
@RF00383 DS    0H                                                  0389
*     RESPECIFY                                                    0389
*      (PDRPTR) RESTRICTED;                                        0389
*     PDRPTR=PDAPTR;                /* ->PDL                         */
         L     PDRPTR,PDAPTR                                       0390
*     GENERATE REFS(PD,PDRPTR) CODE(USING PD,PDRPTR);              0391
         USING PD,PDRPTR
*     IF PXTEST=PXTEST1 THEN                                       0392
         CLC   PXTEST(2),@CH00041                                  0392
         BNE   @RF00392                                            0392
*       ZZ2AFX=ZZZ1;                /* TEST                          */
         OI    ZZ2AFX(ZZ2PTR),B'10000000'                          0393
*     ELSE                                                         0394
*       IF PXTEST=PXTEST0 THEN                                     0394
         B     @RC00392                                            0394
@RF00392 CLC   PXTEST(2),@CH00068                                  0394
         BNE   @RF00394                                            0394
*         ZZ2AFX=ZZZ0;              /* NOTEST                        */
         NI    ZZ2AFX(ZZ2PTR),B'01111111'                          0395
*   END;                            /* BLSUPARS MF(E,PX) ISSUE THE 0396
*                                      CALL TO IKJPARSE              */
@RF00394 DS    0H                                                  0396
@RC00392 DS    0H                                                  0397
         EJECT
*                                                                  0397
*/********************************************************************/
*/*                                                                  */
*/* COMMAND PROCESSOR CODE BEGINS                                    */
*/*                                                                  */
*/********************************************************************/
*                                                                  0397
*   IF ZZ2APID=ZZZNPROB&(PIDIFP^=ON×PIDIL=0) THEN                  0397
         CLC   ZZ2APID(8,ZZ2PTR),@CC00104                          0397
         BNE   @RF00397                                            0397
         TM    PIDIFP,B'10000000'                                  0397
         BNO   @RT00397                                            0397
         LH    @09,PIDIL                                           0397
         LTR   @09,@09                                             0397
         BNZ   @RF00397                                            0397
@RT00397 DS    0H                                                  0398
*     DO;                           /* NO PROBLEM IDENTIFIER         */
*       CALL MSG4(04003);           /* TELL USER                     */
         LA    @01,@AL00399                                        0399
         BAL   @14,MSG4                                            0399
*       RETC=EIGHT;                 /* SET ERROR RETURN CODE         */
         LA    RETC,8                                              0400
*     END;                                                         0401
*   ELSE                                                           0402
*     DO;                                                          0402
         B     @RC00397                                            0402
@RF00397 DS    0H                                                  0403
*       BUFPTR=ADDR(BUF1);          /* SET POINTER TO MYBUF          */
         LA    BUFPTR,BUF1                                         0403
*       PDRKPID=ZZ2APID;            /* SET DEFAULT PROBLEM ID IN KEY */
         MVC   PDRKPID(8,BUFPTR),ZZ2APID(ZZ2PTR)                   0404
*       IF PIDIFP=ON&PIDIL^=0 THEN  /* IF PID IN COMMAND             */
         TM    PIDIFP,B'10000000'                                  0405
         BNO   @RF00405                                            0405
         LH    @09,PIDIL                                           0405
         LTR   @09,@09                                             0405
         BZ    @RF00405                                            0405
*         DO;                                                      0406
*           PDRKPID='00000000';     /* CLEAR PROBLEM ID              */
         MVC   PDRKPID(8,BUFPTR),@CC01526                          0407
*           PDRKPID(9-PIDIL:8)=PIDI(1:PIDIL);/* USE IT               */
         LCR   @09,@09                                             0408
         AL    @09,@CF01019                                        0408
         ST    @09,@TF00001                                        0408
         ALR   @09,BUFPTR                                          0408
         LA    @04,8                                               0408
         SL    @04,@TF00001                                        0408
         L     @01,PIDIP                                           0408
         EX    @04,@SM01651                                        0408
*         END;                                                     0409
*       ELSE                                                       0410
*         ;                         /* LEAVE DEFAULT PID IN KEY      */
@RF00405 DS    0H                                                  0411
*       CALL BLSDENQP(ZZ2,PDRKPNUM,'E');/* ENQUEUE ON PROBLEM        */
         ST    ZZ2PTR,@AL00001                                     0411
         LA    @09,PDRKPNUM(,BUFPTR)                               0411
         ST    @09,@AL00001+4                                      0411
         LA    @09,@CC01527                                        0411
         ST    @09,@AL00001+8                                      0411
         L     @09,ZZ2DVTP(,ZZ2PTR)                                0411
         L     @15,DVTENQPP(,@09)                                  0411
         LA    @01,@AL00001                                        0411
         BALR  @14,@15                                             0411
*       RESPECIFY                                                  0412
*         RF RESTRICTED;                                           0412
*       IF RF=0 THEN                                               0413
         LTR   RF,RF                                               0413
         BNZ   @RF00413                                            0413
*         DO;                                                      0414
*           RESPECIFY                                              0415
*             RF;                                                  0415
*           CALL BLSDTIME(ZZ2,CURTIME,CURDATE);/* GET CURRENT TIME 0416
*                                      AND DATE                      */
         ST    ZZ2PTR,@AL00001                                     0416
         LA    @09,CURTIME                                         0416
         ST    @09,@AL00001+4                                      0416
         LA    @09,CURDATE                                         0416
         ST    @09,@AL00001+8                                      0416
         L     @15,@CV01369                                        0416
         LA    @01,@AL00001                                        0416
         BALR  @14,@15                                             0416
*           RESPECIFY                                              0417
*             RF RESTRICTED;                                       0417
*           IF RF^=0 THEN           /* CHECK RETURN CODE             */
         LTR   RF,RF                                               0418
         BZ    @RF00418                                            0418
*             DO;                   /* SOMETHING IS WRONG WITH TIME  */
*               RESPECIFY                                          0420
*                 RF UNRESTRICTED;                                 0420
*               CURTIME='';         /* SET TIME TO BLANKS            */
         MVI   CURTIME,C' '                                        0421
         MVC   CURTIME+1(7),CURTIME                                0421
*               CURDATE='';         /* SET DATE TO BLANKS            */
         MVI   CURDATE,C' '                                        0422
         MVC   CURDATE+1(7),CURDATE                                0422
*             END;                                                 0423
*           ELSE                                                   0424
*             ;                     /* TIME AND DATE ARE OK          */
@RF00418 DS    0H                                                  0425
*           DO;                     /* BLSOPEN(ZZ1PDRP)OUTPUT        */
*             RFY                                                  0426
*               GPR01P RSTD;                                       0426
*             GPR01P=ZZ1PDRP;       /* ADDRESS DMCB                  */
         L     @09,ZZ2ZZ1P(,ZZ2PTR)                                0427
         L     GPR01P,ZZ1PDRP(,@09)                                0427
*             RFY                                                  0428
*               DMCB BASED(GPR01P);                                0428
*             IF((GPR01P&'FFFFFFF8'X)=GPR01P)&DMCBID='DMCB'/* VALID
*                                      DMCB ?                        */
*               THEN                                               0429
         LR    @09,GPR01P                                          0429
         N     @09,@CF01531                                        0429
         CLR   @09,GPR01P                                          0429
         BNE   @RF00429                                            0429
         CLC   DMCBID(4,GPR01P),@CC01532                           0429
         BNE   @RF00429                                            0429
*               DO;                                                0430
*                 DMCBRQST=DMCBOPR; /* INDICATE OPEN REQUEST         */
         MVI   DMCBRQST(GPR01P),X'01'                              0431
*                 DMCBOUT='1'B;     /* INDICATE OPEN FOR OUTPUR      */
         OI    DMCBOUT(GPR01P),B'10000000'                         0432
*                 CALL DMCBRI->DMCBDMGR;/* CALL BLSCRQST             */
         L     @15,DMCBRI(,GPR01P)                                 0433
         BALR  @14,@15                                             0433
*               END;                                               0434
*             ELSE                                                 0435
*               DO;                                                0435
         B     @RC00429                                            0435
@RF00429 DS    0H                                                  0436
*                 RFY                                              0436
*                  (GPR00F,                                        0436
*                   GPR15F) RSTD;                                  0436
*                 GPR00F=0;         /* INDICATE NO MESSAGE CHAIN     */
         SLR   GPR00F,GPR00F                                       0437
*                 GPR15F=16;        /* INDICATE INVALID DMCB         */
         LA    GPR15F,16                                           0438
*                 RFY                                              0439
*                  (GPR00F,                                        0439
*                   GPR15F);                                       0439
*               END;                                               0440
*             RFY                                                  0441
*               DMCB;                                              0441
@RC00429 DS    0H                                                  0442
*             RFY                                                  0442
*               GPR01P;                                            0442
*           END;                    /* BLSOPEN(ZZ1PDRP)OUTPUT OPEN 0443
*                                      PROBLEM DIRECTORY             */
*           RESPECIFY                                              0444
*             RF RESTRICTED;                                       0444
*           IF RF^=0 THEN           /* IF OPEN NOT OK                */
         LTR   RF,RF                                               0445
         BZ    @RF00445                                            0445
*             DO;                                                  0446
*               IF RF=16 THEN       /* IF INVALID DMCB               */
         C     RF,@CF00052                                         0447
         BNE   @RF00447                                            0447
*                 DO;               /* ABEND(200) DUMP               */
*                   RESPECIFY                                      0449
*                    (GPR01F) RESTRICTED;                          0449
*                   GPR01F=200;     /* COMP CODE IN REG 1            */
         LA    GPR01F,200                                          0450
*                   GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS
*                                      FLAG                          */
         O     GPR01F,@CF00061                                     0451
*                   SVC(13);        /* ISSUE ABEND SVC               */
         SVC   13                                                  0452
*                   RESPECIFY                                      0453
*                    (GPR01F) UNRESTRICTED;                        0453
*                 END;              /* ABEND(200) DUMP QUIT RIGHT  0454
*                                      HERE                          */
*               ELSE                                               0455
*                 ;                                                0455
@RF00447 DS    0H                                                  0456
*               RETC=RF;            /* SAVE RETURN CODE              */
         LR    RETC,RF                                             0456
*               RESPECIFY                                          0457
*                 RF UNRESTRICTED;                                 0457
*               CALL MSG4(04042);                                  0458
         LA    @01,@AL00458                                        0458
         BAL   @14,MSG4                                            0458
*             END;                                                 0459
*           ELSE                                                   0460
*             CALL SEG1;            /* OPEN IS OK                    */
         B     @RC00445                                            0460
@RF00445 BAL   @14,SEG1                                            0460
*           IF RETC=0 THEN                                         0461
@RC00445 LTR   RETC,RETC                                           0461
         BNZ   @RF00461                                            0461
*             DO;                                                  0462
*               IF DFTWD=DEFAULT THEN/* IF DEFAULT KEYWORD PRESENT   */
         CLC   DFTWD(2),@CH00041                                   0463
         BNE   @RF00463                                            0463
*                 ZZ1ZZ2P->ZZ2APID=PDRKPID;/* SET MODIFIED PROBLEM AS
*                                      DEFAULT                       */
         L     @09,ZZ2ZZ1P(,ZZ2PTR)                                0464
         L     @09,ZZ1ZZ2P(,@09)                                   0464
         MVC   ZZ2APID(8,@09),PDRKPID(BUFPTR)                      0464
*               ELSE                                               0465
*                 ;                 /* LEAVE DEFAULT PROBLEM ALONE   */
@RF00463 DS    0H                                                  0466
*             END;                                                 0466
*           ELSE                                                   0467
*             IF DFTWD=DEFAULT THEN                                0467
         B     @RC00461                                            0467
@RF00461 CLC   DFTWD(2),@CH00041                                   0467
         BNE   @RF00467                                            0467
*               CALL MSG4(04069);                                  0468
         LA    @01,@AL00468                                        0468
         BAL   @14,MSG4                                            0468
*             ELSE                                                 0469
*               ;                                                  0469
@RF00467 DS    0H                                                  0470
*           CALL BLSDDEQP(ZZ2,PDRKPNUM);/* DEQ THE PROBLEM           */
@RC00461 ST    ZZ2PTR,@AL00001                                     0470
         LA    @09,PDRKPNUM(,BUFPTR)                               0470
         ST    @09,@AL00001+4                                      0470
         L     @09,ZZ2DVTP(,ZZ2PTR)                                0470
         L     @15,DVTDEQPP(,@09)                                  0470
         LA    @01,@AL00001                                        0470
         BALR  @14,@15                                             0470
*           RESPECIFY                                              0471
*             RF RESTRICTED;                                       0471
*           RETC=MAX(RETC,RF);      /* SAVE LARGEST RETURN CODE      */
         CR    RETC,RF                                             0472
         BNL   *+6
         LR    RETC,RF                                             0472
*           RESPECIFY                                              0473
*             RF;                                                  0473
*         END;                                                     0474
*       ELSE                                                       0475
*         RETC=12;                  /* ERROR RETURN FROM ENQ         */
         B     @RC00413                                            0475
@RF00413 LA    RETC,12                                             0475
*     END;                                                         0476
@RC00413 DS    0H                                                  0477
         EJECT
*EXITRLSA:                                                         0477
*   DO WHILE(PDAPTR^=0);            /* BLRRLSA MF(EXECUTE,PD)        */
@RC00397 DS    0H                                                  0477
EXITRLSA B     @DE00477                                            0477
@DL00477 DS    0H                                                  0478
*     PDRPTR=PDAPTR;                                               0478
         L     PDRPTR,PDAPTR                                       0478
*     PDAPTR=PDXP;                                                 0479
         L     @09,PDXP-1(,PDRPTR)                                 0479
         LA    @09,0(,@09)                                         0479
         ST    @09,PDAPTR                                          0479
*     DO;                           /* FREEMAIN(R)                 0480
*                                      LV(PDL)SP(1)A(PDDSECT)        */
*       RESPECIFY                                                  0481
*        (GPR01F,                                                  0481
*         GPR00F) RESTRICTED;                                      0481
*       GPR00F=PDL;                 /* LENGTH REQUESTED              */
         L     GPR00F,PDL-1(,PDRPTR)                               0482
         ICM   GPR00F,8,@CB01653                                   0482
*       GPR01F=1;                   /* SP IN REG 1                   */
         LA    GPR01F,1                                            0483
*       GEN(SLL   GPR01F,24)                                       0484
*       NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;               0484
         SLL   GPR01F,24
*       GPR00F=GPR00F×GPR01F;       /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                       0485
*       GPR01F=ADDR(PDDSECT);       /* SET REGISTER ONE              */
         LR    GPR01F,PDRPTR                                       0486
*       SVC(10);                    /* R-FORM OF GETMAIN             */
         SVC   10                                                  0487
*       RESPECIFY                                                  0488
*        (GPR01F,                                                  0488
*         GPR00F) UNRESTRICTED;                                    0488
*     END;                          /* FREEMAIN(R)                 0489
*                                      LV(PDL)SP(1)A(PDDSECT)        */
*   END;                            /* BLRRLSA MF(EXECUTE,PD) FREE 0490
*                                      PARSE PARAMETER LIST          */
@DE00477 L     @09,PDAPTR                                          0490
         LTR   @09,@09                                             0490
         BNZ   @DL00477                                            0490
*   RETURN CODE(RETC);              /* RETURN TO CALLING PROGRAM   0491
*                                      NORMAL EXIT                   */
         L     @13,4(,@13)                                         0491
         L     @00,@SIZDATD                                        0491
         LR    @01,@11                                             0491
         BLSUFRER R,LV=(0),A=(1)
         LR    @15,@08                                             0491
         L     @14,12(,@13)                                        0491
         LM    @00,@12,20(@13)                                     0491
         BR    @14                                                 0491
         SPACE 1
*EXITNORL:                                                         0492
*   RETURN CODE(RETC);              /* RETURN TO THE CALLER BAD    0492
*                                      RETURN CODE                   */
EXITNORL L     @13,4(,@13)                                         0492
         L     @00,@SIZDATD                                        0492
         LR    @01,@11                                             0492
         BLSUFRER R,LV=(0),A=(1)
         LR    @15,@08                                             0492
         L     @14,12(,@13)                                        0492
         LM    @00,@12,20(@13)                                     0492
         BR    @14                                                 0492
         EJECT
*SEG1:                                                             0493
*   PROCEDURE;                                                     0493
*                                                                  0493
SEG1     STM   @14,@07,@SA00002                                    0493
         STM   @09,@12,@SA00002+40                                 0493
*   /*****************************************************************/
*   /*                                                               */
*   /* BLSSET (ZZ1PDRP) AREA(MYBUF)AREALEN(MAXRSIZE)KEYEQ            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0494
*   DO;                             /* BLSSET (ZZ1PDRP) AREA(MYBUF)AR
*                                      EALEN(MAXRSIZE)KEYEQ          */
*     RFY                                                          0495
*       GPR01P RSTD;                                               0495
*     GPR01P=ZZ1PDRP;               /* ADDRESS DMCB                  */
         L     @09,ZZ2ZZ1P(,ZZ2PTR)                                0496
         L     GPR01P,ZZ1PDRP(,@09)                                0496
*     RFY                                                          0497
*       DMCB BASED(GPR01P);                                        0497
*     IF((GPR01P&'FFFFFFF8'X)=GPR01P)&DMCBID='DMCB'/* VALID DMCB ?   */
*       THEN                                                       0498
         LR    @09,GPR01P                                          0498
         N     @09,@CF01531                                        0498
         CLR   @09,GPR01P                                          0498
         BNE   @RF00498                                            0498
         CLC   DMCBID(4,GPR01P),@CC01532                           0498
         BNE   @RF00498                                            0498
*       DO;                                                        0499
*         DMCBBUFP=ADDR(MYBUF);     /* PLACE BUFFER ADDRESS IN DMCB  */
         ST    BUFPTR,DMCBBUFP(,GPR01P)                            0500
*         DMCBBLEN=MAXRSIZE&'7FFFFFFF'X;/* PLACE BUFFER LENGTH IN  0501
*                                      DMCB                          */
         MVC   DMCBBLEN(4,GPR01P),@CF00394                         0501
*         DMCBKYD='1'B;             /* INDICATE KEYED ACCESS         */
*         DMCBAPX='0'B;             /* INDICATE EXACT KEY MATCH      */
*         DMCBGKY='0'B;             /* INDICATE FULL KEY SEARCH      */
         OI    DMCBKYD(GPR01P),B'10000000'                         0504
         NI    DMCBAPX(GPR01P),B'10011111'                         0504
*         DMCBRQST=DMCBSER;         /* INDICATE SET REQUEST          */
         MVI   DMCBRQST(GPR01P),X'03'                              0505
*         CALL DMCBRI->DMCBDMGR;    /* CALL BLSCRQST                 */
         L     @15,DMCBRI(,GPR01P)                                 0506
         BALR  @14,@15                                             0506
*       END;                                                       0507
*     ELSE                                                         0508
*       DO;                                                        0508
         B     @RC00498                                            0508
@RF00498 DS    0H                                                  0509
*         RFY                                                      0509
*          (GPR00F,                                                0509
*           GPR15F) RSTD;                                          0509
*         GPR00F=0;                 /* INDICATE NO MESSAGE CHAIN     */
         SLR   GPR00F,GPR00F                                       0510
*         GPR15F=16;                /* INDICATE INVALID DMCB         */
         LA    GPR15F,16                                           0511
*         RFY                                                      0512
*          (GPR00F,                                                0512
*           GPR15F);                                               0512
*       END;                                                       0513
*     RFY                                                          0514
*       DMCB;                                                      0514
@RC00498 DS    0H                                                  0515
*     RFY                                                          0515
*       GPR01P;                                                    0515
*   END;                            /* BLSSET (ZZ1PDRP) AREA(MYBUF)AR
*                                      EALEN(MAXRSIZE)KEYEQ          */
*   RESPECIFY                                                      0517
*     RF RESTRICTED;                                               0517
*   IF RF^=0 THEN                   /* IF RETURN CODE NOT ZERO       */
         LTR   RF,RF                                               0518
         BZ    @RF00518                                            0518
*     DO;                                                          0519
*       IF RF=16 THEN               /* IF INVALID DMCB               */
         C     RF,@CF00052                                         0520
         BNE   @RF00520                                            0520
*         DO;                       /* ABEND(200) DUMP               */
*           RESPECIFY                                              0522
*            (GPR01F) RESTRICTED;                                  0522
*           GPR01F=200;             /* COMP CODE IN REG 1            */
         LA    GPR01F,200                                          0523
*           GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG     */
         O     GPR01F,@CF00061                                     0524
*           SVC(13);                /* ISSUE ABEND SVC               */
         SVC   13                                                  0525
*           RESPECIFY                                              0526
*            (GPR01F) UNRESTRICTED;                                0526
*         END;                      /* ABEND(200) DUMP QUIT RIGHT  0527
*                                      HERE                          */
*       ELSE                                                       0528
*         ;                                                        0528
@RF00520 DS    0H                                                  0529
*       RETC=RF;                    /* SAVE RETURN CODE              */
         LR    RETC,RF                                             0529
*       RESPECIFY                                                  0530
*         RF UNRESTRICTED;                                         0530
*       CALL MSG4(04041);                                          0531
         LA    @01,@AL00531                                        0531
         BAL   @14,MSG4                                            0531
*     END;                                                         0532
*   ELSE                                                           0533
*     CALL SEG2;                    /* NO PROBLEM                    */
         B     @RC00518                                            0533
@RF00518 BAL   @14,SEG2                                            0533
*   END SEG1;                                                      0534
@EL00002 DS    0H                                                  0534
@EF00002 DS    0H                                                  0534
@ER00002 LM    @14,@07,@SA00002                                    0534
         LM    @09,@12,@SA00002+40                                 0534
         BR    @14                                                 0534
         EJECT
*SEG2:                                                             0535
*   PROCEDURE;                                                     0535
SEG2     STM   @14,@07,@SA00003                                    0535
         STM   @09,@12,@SA00003+40                                 0535
*   CALL SEG3;                      /* NO PROBLEM SO FAR             */
         BAL   @14,SEG3                                            0536
*   DO;                             /* BLSCLOSE(ZZ1PDRP)             */
*     RFY                                                          0538
*       GPR01P RSTD;                                               0538
*     GPR01P=ZZ1PDRP;               /* ADDRESS THE DMCB              */
         L     @09,ZZ2ZZ1P(,ZZ2PTR)                                0539
         L     GPR01P,ZZ1PDRP(,@09)                                0539
*     RFY                                                          0540
*       DMCB BASED(GPR01P);                                        0540
*     IF((GPR01P&'FFFFFFF8'X)=GPR01P)&DMCBID='DMCB'/* VALID DMCB ?   */
*       THEN                                                       0541
         LR    @09,GPR01P                                          0541
         N     @09,@CF01531                                        0541
         CLR   @09,GPR01P                                          0541
         BNE   @RF00541                                            0541
         CLC   DMCBID(4,GPR01P),@CC01532                           0541
         BNE   @RF00541                                            0541
*       DO;                                                        0542
*         DMCBRQST=DMCBCLR;         /* INDICATE CLOSE REQUEST        */
         MVI   DMCBRQST(GPR01P),X'02'                              0543
*         DMCBTMP='0'B;             /* INDICATE NON TEMP CLOSE       */
*         DMCBRM6='0'B;             /* INDICATE                      */
*         DMCBRM5='0'B;             /* DISP OPTION                   */
         NI    DMCBTMP(GPR01P),B'00011111'                         0546
*         CALL DMCBRI->DMCBDMGR;    /* CALL BLSCRQST                 */
         L     @15,DMCBRI(,GPR01P)                                 0547
         BALR  @14,@15                                             0547
*       END;                                                       0548
*     ELSE                                                         0549
*       DO;                                                        0549
         B     @RC00541                                            0549
@RF00541 DS    0H                                                  0550
*         RFY                                                      0550
*          (GPR00F,                                                0550
*           GPR15F) RSTD;                                          0550
*         GPR00F=0;                 /* INDICATE NO MESSAGE CHAIN     */
         SLR   GPR00F,GPR00F                                       0551
*         GPR15F=16;                /* INDICATE INVALID DMCB         */
         LA    GPR15F,16                                           0552
*         RFY                                                      0553
*          (GPR00F,                                                0553
*           GPR15F);                                               0553
*       END;                                                       0554
*     RFY                                                          0555
*       DMCB;                                                      0555
@RC00541 DS    0H                                                  0556
*     RFY                                                          0556
*       GPR01P;                                                    0556
*   END;                            /* BLSCLOSE(ZZ1PDRP) CLOSE     0557
*                                      PROBLEM DIRECTORY             */
*   RESPECIFY                                                      0558
*     RF RESTRICTED;                                               0558
*   IF RF^=0 THEN                   /* IF RETURN CODE NOT ZERO       */
         LTR   RF,RF                                               0559
         BZ    @RF00559                                            0559
*     DO;                                                          0560
*       IF RF=16 THEN               /* IF INVALID DMCB               */
         C     RF,@CF00052                                         0561
         BNE   @RF00561                                            0561
*         DO;                       /* ABEND(200) DUMP               */
*           RESPECIFY                                              0563
*            (GPR01F) RESTRICTED;                                  0563
*           GPR01F=200;             /* COMP CODE IN REG 1            */
         LA    GPR01F,200                                          0564
*           GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG     */
         O     GPR01F,@CF00061                                     0565
*           SVC(13);                /* ISSUE ABEND SVC               */
         SVC   13                                                  0566
*           RESPECIFY                                              0567
*            (GPR01F) UNRESTRICTED;                                0567
*         END;                      /* ABEND(200) DUMP QUIT RIGHT  0568
*                                      HERE                          */
*       ELSE                                                       0569
*         ;                                                        0569
@RF00561 DS    0H                                                  0570
*       RETC=RF;                    /* SAVE RETURN CODE              */
         LR    RETC,RF                                             0570
*       RESPECIFY                                                  0571
*         RF UNRESTRICTED;                                         0571
*       CALL MSG4(04045);                                          0572
         LA    @01,@AL00572                                        0572
         BAL   @14,MSG4                                            0572
*     END;                                                         0573
*   ELSE                                                           0574
*     ;                             /* NO PROBLEM                    */
@RF00559 DS    0H                                                  0575
*   END SEG2;                                                      0575
@EL00003 DS    0H                                                  0575
@EF00003 DS    0H                                                  0575
@ER00003 LM    @14,@07,@SA00003                                    0575
         LM    @09,@12,@SA00003+40                                 0575
         BR    @14                                                 0575
         EJECT
*SEG3:                                                             0576
*   PROCEDURE;                                                     0576
SEG3     STM   @14,@07,@SA00004                                    0576
         STM   @09,@12,@SA00004+40                                 0576
*   PDRKRCTY=PDRSTATC;              /* SET RECORD TYPE TO STATUS     */
         MVC   PDRKRCTY(2,BUFPTR),@CC01273                         0577
*   PDRRECSQ='0000';                /* SET RECORD SEQUENCE NUMBER    */
         MVC   PDRRECSQ(4,BUFPTR),@CC01560                         0578
*   PDRKPREF=FPDBPIDP;              /* SET PREFIX FROM LSFPARMS      */
         L     @09,ZZ2ZZ1P(,ZZ2PTR)                                0579
         L     @09,ZZ1FPP(,@09)                                    0579
         MVC   PDRKPREF(3,BUFPTR),FPDBPIDP(@09)                    0579
*   CALL GET(MYBUF);                /* GET THE PROBLEM STATUS RECORD */
         ST    BUFPTR,@AL00001                                     0580
         LA    @01,@AL00001                                        0580
         BAL   @14,GET                                             0580
*   IF RETC=0 THEN                  /* IF READ OK                    */
         LTR   RETC,RETC                                           0581
         BNZ   @RF00581                                            0581
*     CALL SEGA;                    /* CONTINUE PROCESSING           */
         BAL   @14,SEGA                                            0582
*   ELSE                                                           0583
*     ;                             /* ERROR READING STATUS RECORD   */
@RF00581 DS    0H                                                  0584
*   END SEG3;                                                      0584
@EL00004 DS    0H                                                  0584
@EF00004 DS    0H                                                  0584
@ER00004 LM    @14,@07,@SA00004                                    0584
         LM    @09,@12,@SA00004+40                                 0584
         BR    @14                                                 0584
         EJECT
*SEGA:                                                             0585
*   PROCEDURE;                                                     0585
*                                                                  0585
SEGA     STM   @14,@07,@SA00005                                    0585
         STM   @09,@12,@SA00005+40                                 0585
*   /*****************************************************************/
*   /*                                                               */
*   /* BLSEND (ZZ1PDRP)                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0586
*   DO;                             /* BLSEND (ZZ1PDRP)              */
*     RFY                                                          0587
*       GPR01P RSTD;                                               0587
*     GPR01P=ZZ1PDRP;               /* ADDRESS DMCB                  */
         L     @09,ZZ2ZZ1P(,ZZ2PTR)                                0588
         L     GPR01P,ZZ1PDRP(,@09)                                0588
*     RFY                                                          0589
*       DMCB BASED(GPR01P);                                        0589
*     IF((GPR01P&'FFFFFFF8'X)=GPR01P)&DMCBID='DMCB'/* VALID DMCB ?   */
*       THEN                                                       0590
         LR    @09,GPR01P                                          0590
         N     @09,@CF01531                                        0590
         CLR   @09,GPR01P                                          0590
         BNE   @RF00590                                            0590
         CLC   DMCBID(4,GPR01P),@CC01532                           0590
         BNE   @RF00590                                            0590
*       DO;                                                        0591
*         DMCBRQST=DMCBENR;         /* INDICATE END REQUEST          */
         MVI   DMCBRQST(GPR01P),X'07'                              0592
*         CALL DMCBRI->DMCBDMGR;    /* CALL BLSCRQST                 */
         L     @15,DMCBRI(,GPR01P)                                 0593
         BALR  @14,@15                                             0593
*       END;                                                       0594
*     ELSE                                                         0595
*       DO;                                                        0595
         B     @RC00590                                            0595
@RF00590 DS    0H                                                  0596
*         RFY                                                      0596
*          (GPR00F,                                                0596
*           GPR15F) RSTD;                                          0596
*         GPR00F=0;                 /* INDICATE NO MESSAGE CHAIN     */
         SLR   GPR00F,GPR00F                                       0597
*         GPR15F=16;                /* INDICATE INVALID DMCB         */
         LA    GPR15F,16                                           0598
*         RFY                                                      0599
*          (GPR00F,                                                0599
*           GPR15F);                                               0599
*       END;                                                       0600
*     RFY                                                          0601
*       DMCB;                                                      0601
@RC00590 DS    0H                                                  0602
*     RFY                                                          0602
*       GPR01P;                                                    0602
*   END;                            /* BLSEND (ZZ1PDRP) DROP CURRENT
*                                      STATUS RECORD                 */
*   RESPECIFY                                                      0604
*     RF RESTRICTED;                                               0604
*   IF RF^=0 THEN                   /* IF RETURN CODE NOT ZERO       */
         LTR   RF,RF                                               0605
         BZ    @RF00605                                            0605
*     DO;                                                          0606
*       IF RF=16 THEN               /* IF INVALID DMCB               */
         C     RF,@CF00052                                         0607
         BNE   @RF00607                                            0607
*         DO;                       /* ABEND(200) DUMP               */
*           RESPECIFY                                              0609
*            (GPR01F) RESTRICTED;                                  0609
*           GPR01F=200;             /* COMP CODE IN REG 1            */
         LA    GPR01F,200                                          0610
*           GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG     */
         O     GPR01F,@CF00061                                     0611
*           SVC(13);                /* ISSUE ABEND SVC               */
         SVC   13                                                  0612
*           RESPECIFY                                              0613
*            (GPR01F) UNRESTRICTED;                                0613
*         END;                      /* ABEND(200) DUMP QUIT RIGHT  0614
*                                      HERE                          */
*       ELSE                                                       0615
*         ;                                                        0615
@RF00607 DS    0H                                                  0616
*       RETC=RF;                    /* SAVE RETURN CODE              */
         LR    RETC,RF                                             0616
*       RESPECIFY                                                  0617
*         RF UNRESTRICTED;                                         0617
*       CALL MSG4(04041);                                          0618
         LA    @01,@AL00618                                        0618
         BAL   @14,MSG4                                            0618
*     END;                                                         0619
*   ELSE                                                           0620
*     DO;                                                          0620
         B     @RC00605                                            0620
@RF00605 DS    0H                                                  0621
*       DMCBUPD='0'B;               /* CLEAR UPDATE BIT              */
         L     @09,ZZ2ZZ1P(,ZZ2PTR)                                0621
         L     @09,ZZ1PDRP(,@09)                                   0621
         NI    DMCBUPD(@09),B'11101111'                            0621
*       CALL SEGB;                  /* CONTINUE PROCESSING           */
         BAL   @14,SEGB                                            0622
*     END;                                                         0623
*   END SEGA;                                                      0624
@EL00005 DS    0H                                                  0624
@EF00005 DS    0H                                                  0624
@ER00005 LM    @14,@07,@SA00005                                    0624
         LM    @09,@12,@SA00005+40                                 0624
         BR    @14                                                 0624
         EJECT
*SEGB:                                                             0625
*   PROCEDURE;                                                     0625
SEGB     STM   @14,@07,@SA00006                                    0625
         STM   @09,@12,@SA00006+40                                 0625
*   CALL SEG4;                      /* NO PROBLEMS SO FAR            */
         BAL   @14,SEG4                                            0626
*   SRETC=RETC;                     /* SAVE RETURN CODE              */
         LR    SRETC,RETC                                          0627
*   RETC=0;                         /* SET RETURN CODE TO ZERO       */
         SLR   RETC,RETC                                           0628
*   CALL GET(BUF2);                 /* GET PROBLEM STATUS RECORD     */
         LA    @04,BUF2                                            0629
         ST    @04,@AL00001                                        0629
         LA    @01,@AL00001                                        0629
         BAL   @14,GET                                             0629
*   IF RETC=0 THEN                                                 0630
         LTR   RETC,RETC                                           0630
         BNZ   @RF00630                                            0630
*     DO;                                                          0631
*                                                                  0631
*       /*************************************************************/
*       /*                                                           */
*       /* BLSPUT (ZZ1PDRP)                                          */
*       /* RECLEN(LENGTH(PDREC)+LENGTH(PDRSTREC))AREA(MYBUF)         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0632
*       DO;                         /* BLSPUT (ZZ1PDRP) RECLEN(LENGTH
*                                      (PDREC)+LENGTH(PDRSTREC))AREA(
*                                      MYBUF)                        */
*         RFY                                                      0633
*           GPR01P RSTD;                                           0633
*         GPR01P=ZZ1PDRP;           /* ADDRESS DMCB                  */
         L     @04,ZZ2ZZ1P(,ZZ2PTR)                                0634
         L     GPR01P,ZZ1PDRP(,@04)                                0634
*         RFY                                                      0635
*           DMCB BASED(GPR01P);                                    0635
*         IF((GPR01P&'FFFFFFF8'X)=GPR01P)&DMCBID='DMCB'/* VALID DMCB
*                                      ?                             */
*           THEN                                                   0636
         LR    @04,GPR01P                                          0636
         N     @04,@CF01531                                        0636
         CLR   @04,GPR01P                                          0636
         BNE   @RF00636                                            0636
         CLC   DMCBID(4,GPR01P),@CC01532                           0636
         BNE   @RF00636                                            0636
*           DO;                                                    0637
*             DMCBBUFP=ADDR(MYBUF); /* PLACE BUFFER ADDRESS IN DMCB  */
         ST    BUFPTR,DMCBBUFP(,GPR01P)                            0638
*             DMCBORL=(LENGTH(PDREC)+LENGTH(PDRSTREC))&'7FFFFFFF'X;/*
*                                      PLACE RECORD LENGTH IN DMCB   */
         MVC   DMCBORL(4,GPR01P),@CF01640                          0639
*             DMCBRQST=DMCBPUR;     /* INDICATE PUT REQUEST          */
         MVI   DMCBRQST(GPR01P),X'05'                              0640
*             CALL DMCBRI->DMCBDMGR;/* CALL BLSCRQST                 */
         L     @15,DMCBRI(,GPR01P)                                 0641
         BALR  @14,@15                                             0641
*           END;                                                   0642
*         ELSE                                                     0643
*           DO;                                                    0643
         B     @RC00636                                            0643
@RF00636 DS    0H                                                  0644
*             RFY                                                  0644
*              (GPR00F,                                            0644
*               GPR15F) RSTD;                                      0644
*             GPR00F=0;             /* INDICATE NO MESSAGE CHAIN     */
         SLR   GPR00F,GPR00F                                       0645
*             GPR15F=16;            /* INDICATE INVALID DMCB         */
         LA    GPR15F,16                                           0646
*             RFY                                                  0647
*              (GPR00F,                                            0647
*               GPR15F);                                           0647
*           END;                                                   0648
*         RFY                                                      0649
*           DMCB;                                                  0649
@RC00636 DS    0H                                                  0650
*         RFY                                                      0650
*           GPR01P;                                                0650
*       END;                        /* BLSPUT (ZZ1PDRP) RECLEN(LENGTH
*                                      (PDREC)+LENGTH(PDRSTREC))AREA(
*                                      MYBUF) WRITE OUT THEN NEW   0651
*                                      PROBLEM STATUS RECORD         */
*       RESPECIFY                                                  0652
*         RF RESTRICTED;                                           0652
*       IF RF^=0 THEN               /* IF RETURN CODE NOT ZERO       */
         LTR   RF,RF                                               0653
         BZ    @RF00653                                            0653
*         DO;                                                      0654
*           IF RF=16 THEN           /* IF INVALID DMCB               */
         C     RF,@CF00052                                         0655
         BNE   @RF00655                                            0655
*             DO;                   /* ABEND(200) DUMP               */
*               RESPECIFY                                          0657
*                (GPR01F) RESTRICTED;                              0657
*               GPR01F=200;         /* COMP CODE IN REG 1            */
         LA    GPR01F,200                                          0658
*               GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG */
         O     GPR01F,@CF00061                                     0659
*               SVC(13);            /* ISSUE ABEND SVC               */
         SVC   13                                                  0660
*               RESPECIFY                                          0661
*                (GPR01F) UNRESTRICTED;                            0661
*             END;                  /* ABEND(200) DUMP QUIT RIGHT  0662
*                                      HERE                          */
*           ELSE                                                   0663
*             ;                                                    0663
@RF00655 DS    0H                                                  0664
*           RETC=RF;                /* SAVE RETURN CODE              */
         LR    RETC,RF                                             0664
*           RESPECIFY                                              0665
*             RF UNRESTRICTED;                                     0665
*           CALL MSG4(04044);       /* ERROR WRITING PROB DIRECTORY  */
         LA    @01,@AL00666                                        0666
         BAL   @14,MSG4                                            0666
*         END;                                                     0667
*       ELSE                                                       0668
*         ;                         /* NO PROBLEM                    */
@RF00653 DS    0H                                                  0669
*     END;                                                         0669
*   ELSE                                                           0670
*     ;                                                            0670
@RF00630 DS    0H                                                  0671
*   RETC=MAX(RETC,SRETC);           /* SET HIGHEST RETURN CODE       */
         CR    RETC,SRETC                                          0671
         BNL   *+6
         LR    RETC,SRETC                                          0671
*   END SEGB;                                                      0672
@EL00006 DS    0H                                                  0672
@EF00006 DS    0H                                                  0672
@ER00006 LM    @14,@07,@SA00006                                    0672
         LM    @09,@12,@SA00006+40                                 0672
         BR    @14                                                 0672
         EJECT
*GET:                                                              0673
*   PROCEDURE(BUF);                                                0673
*                                                                  0673
GET      STM   @14,@07,@SA00007                                    0673
         STM   @09,@12,@SA00007+40                                 0673
         MVC   @PC00007(4),0(@01)                                  0673
*   /*****************************************************************/
*   /*                                                               */
*   /* BLSGET (ZZ1PDRP) ARG(PDRKEY)ARGLEN(LENGTH(PDRKEY))UPD KEYEQ   */
*   /* AREA(BUF)                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0674
*   DO;                             /* BLSGET (ZZ1PDRP) ARG(PDRKEY)AR
*                                      GLEN(LENGTH(PDRKEY))UPD KEYEQ
*                                      AREA(BUF)                     */
*     RFY                                                          0675
*       GPR01P RSTD;                                               0675
*     GPR01P=ZZ1PDRP;               /* ADDRESS DMCB                  */
         L     @09,ZZ2ZZ1P(,ZZ2PTR)                                0676
         L     GPR01P,ZZ1PDRP(,@09)                                0676
*     RFY                                                          0677
*       DMCB BASED(GPR01P);                                        0677
*     IF((GPR01P&'FFFFFFF8'X)=GPR01P)&DMCBID='DMCB'/* VALID DMCB ?   */
*       THEN                                                       0678
         LR    @09,GPR01P                                          0678
         N     @09,@CF01531                                        0678
         CLR   @09,GPR01P                                          0678
         BNE   @RF00678                                            0678
         CLC   DMCBID(4,GPR01P),@CC01532                           0678
         BNE   @RF00678                                            0678
*       DO;                                                        0679
*         DMCBBUFP=ADDR(BUF);       /* PLACE BUFFER ADDRESS IN DMCB  */
         L     @09,@PC00007                                        0680
         ST    @09,DMCBBUFP(,GPR01P)                               0680
*         DMCBKEYP=ADDR(PDRKEY);    /* PLACE KEY ADDRESS IN DMCB     */
         ST    BUFPTR,DMCBKEYP(,GPR01P)                            0681
*         DMCBKEYL=(LENGTH(PDRKEY))&'7FFFFFFF'X;/* PLACE KEY LENGTH
*                                      IN DMCB                       */
         MVC   DMCBKEYL(4,GPR01P),@CF01037                         0682
*         DMCBKYD='1'B;             /* INDICATE KEYED ACCESS         */
*         DMCBAPX='0'B;             /* INDICATE EXACT KEY MATCH      */
*         DMCBGKY='0'B;             /* INDICATE FULL KEY SEARCH      */
*         DMCBUPD='1'B;             /* INDICATE UPDATE OPTION        */
         OI    DMCBKYD(GPR01P),B'10010000'                         0686
         NI    DMCBAPX(GPR01P),B'10011111'                         0686
*         DMCBRQST=DMCBGER;         /* INDICATE GET REQUEST          */
         MVI   DMCBRQST(GPR01P),X'04'                              0687
*         CALL DMCBRI->DMCBDMGR;    /* CALL BLSCRQST                 */
         L     @15,DMCBRI(,GPR01P)                                 0688
         BALR  @14,@15                                             0688
*       END;                                                       0689
*     ELSE                                                         0690
*       DO;                                                        0690
         B     @RC00678                                            0690
@RF00678 DS    0H                                                  0691
*         RFY                                                      0691
*          (GPR00F,                                                0691
*           GPR15F) RSTD;                                          0691
*         GPR00F=0;                 /* INDICATE NO MESSAGE CHAIN     */
         SLR   GPR00F,GPR00F                                       0692
*         GPR15F=16;                /* INDICATE INVALID DMCB         */
         LA    GPR15F,16                                           0693
*         RFY                                                      0694
*          (GPR00F,                                                0694
*           GPR15F);                                               0694
*       END;                                                       0695
*     RFY                                                          0696
*       DMCB;                                                      0696
@RC00678 DS    0H                                                  0697
*     RFY                                                          0697
*       GPR01P;                                                    0697
*   END;                            /* BLSGET (ZZ1PDRP) ARG(PDRKEY)AR
*                                      GLEN(LENGTH(PDRKEY))UPD KEYEQ
*                                      AREA(BUF) GET STATUS RECORD 0698
*                                      FOR UPDATE                    */
*   RESPECIFY                                                      0699
*     RF RESTRICTED;                                               0699
*   IF RF=8 THEN                                                   0700
         C     RF,@CF00049                                         0700
         BNE   @RF00700                                            0700
*     DO;                                                          0701
*       RETC=RF;                    /* SAVE RETURN CODE              */
         LR    RETC,RF                                             0702
*       DO;                         /* BLSDMSG                     0703
*                                      (ZZ2,-1,DMCBMSG,BLSDMSGS)     */
*         CALL BLSDMSG0(ZZ2,-1,DMCBMSG,BLSDMSGS,'00000000'B,0);/*  0704
*                                      BUILD MESSAGE                 */
         ST    ZZ2PTR,@AL00001                                     0704
         LA    @14,@CF01580                                        0704
         ST    @14,@AL00001+4                                      0704
         L     @14,ZZ2ZZ1P(,ZZ2PTR)                                0704
         L     @14,ZZ1PDRP(,@14)                                   0704
         LA    @14,DMCBMSG(,@14)                                   0704
         ST    @14,@AL00001+8                                      0704
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0704
         ST    @14,@AL00001+12                                     0704
         LA    @14,@CB01581                                        0704
         ST    @14,@AL00001+16                                     0704
         LA    @14,@CF00046                                        0704
         ST    @14,@AL00001+20                                     0704
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0704
         LA    @01,@AL00001                                        0704
         BALR  @14,@15                                             0704
*       END;                        /* BLSDMSG                     0705
*                                      (ZZ2,-1,DMCBMSG,BLSDMSGS)   0705
*                                      FLUSH MESSAGE QUEUE           */
*       DO;                         /* BLSDMSG                     0706
*                                      (ZZ2,04000,DMCBMSG,BLSDMSGS) R
*                                      OUTE(BOTH)INSERT(FPPIDP,PDRKPN
*                                      UM)LIFO                       */
*         IOPTLIST(1)=ADDR(IOPTLIST(4));/* CHAIN TO NEXT INSERT      */
         LA    @14,IOPTLIST+12                                     0707
         ST    @14,IOPTLIST                                        0707
*         IOPTLIST(2)=ADDR(FPPIDP); /* INSERT NAME POINTER           */
         L     @14,ZZ2ZZ1P(,ZZ2PTR)                                0708
         L     @09,ZZ1FPP(,@14)                                    0708
         LA    @09,FPPIDP(,@09)                                    0708
         ST    @09,IOPTLIST+4                                      0708
*         IOPTLIST(3)=0;            /* ZERO RESERVED FIELD           */
         SLR   @09,@09                                             0709
         ST    @09,IOPTLIST+8                                      0709
*         RFY                                                      0710
*           I015F BASED(ADDR(IOPTLIST(3)));/* ACCESS BYTES 1-2       */
*         I015F=LENGTH(FPPIDP);     /* INSERT LENGTH                 */
         LA    @04,IOPTLIST+8                                      0711
         MVC   I015F(2,@04),@CH00094                               0711
*         IOPTLIST(4)=0;            /* LAST INSERT                   */
         ST    @09,IOPTLIST+12                                     0712
*         IOPTLIST(5)=ADDR(PDRKPNUM);/* INSERT NAME POINTER          */
         LA    @04,PDRKPNUM(,BUFPTR)                               0713
         ST    @04,IOPTLIST+16                                     0713
*         IOPTLIST(6)=0;            /* ZERO RESERVED FIELD           */
         ST    @09,IOPTLIST+20                                     0714
*         RFY                                                      0715
*           I015F BASED(ADDR(IOPTLIST(6)));/* ACCESS BYTES 1-2       */
*         I015F=LENGTH(PDRKPNUM);   /* INSERT LENGTH                 */
         LA    @09,IOPTLIST+20                                     0716
         MVC   I015F(2,@09),@CH00091                               0716
*         CALL BLSDMSG0(ZZ2,04000,DMCBMSG,BLSDMSGS,'10110000'B,ADDR(
*             IOPTLIST));           /* BUILD MESSAGE                 */
         ST    ZZ2PTR,@AL00001                                     0717
         LA    @09,@CF01588                                        0717
         ST    @09,@AL00001+4                                      0717
         L     @14,ZZ1PDRP(,@14)                                   0717
         LA    @14,DMCBMSG(,@14)                                   0717
         ST    @14,@AL00001+8                                      0717
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0717
         ST    @14,@AL00001+12                                     0717
         LA    @14,@CB01589                                        0717
         ST    @14,@AL00001+16                                     0717
         LA    @14,IOPTLIST                                        0717
         ST    @14,@AFTEMPS                                        0717
         LA    @14,@AFTEMPS                                        0717
         ST    @14,@AL00001+20                                     0717
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0717
         LA    @01,@AL00001                                        0717
         BALR  @14,@15                                             0717
*       END;                        /* BLSDMSG                     0718
*                                      (ZZ2,04000,DMCBMSG,BLSDMSGS) R
*                                      OUTE(BOTH)INSERT(FPPIDP,PDRKPN
*                                      UM)LIFO                       */
*     END;                                                         0719
*   ELSE                                                           0720
*     IF RF^=0 THEN                 /* IF RETURN CODE NOT ZERO       */
         B     @RC00700                                            0720
@RF00700 LTR   RF,RF                                               0720
         BZ    @RF00720                                            0720
*       DO;                                                        0721
*         IF RF=16 THEN             /* IF INVALID DMCB               */
         C     RF,@CF00052                                         0722
         BNE   @RF00722                                            0722
*           DO;                     /* ABEND(200) DUMP               */
*             RESPECIFY                                            0724
*              (GPR01F) RESTRICTED;                                0724
*             GPR01F=200;           /* COMP CODE IN REG 1            */
         LA    GPR01F,200                                          0725
*             GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG   */
         O     GPR01F,@CF00061                                     0726
*             SVC(13);              /* ISSUE ABEND SVC               */
         SVC   13                                                  0727
*             RESPECIFY                                            0728
*              (GPR01F) UNRESTRICTED;                              0728
*           END;                    /* ABEND(200) DUMP QUIT RIGHT  0729
*                                      HERE                          */
*         ELSE                                                     0730
*           ;                                                      0730
@RF00722 DS    0H                                                  0731
*         RETC=RF;                  /* SAVE RETURN CODE              */
         LR    RETC,RF                                             0731
*         RESPECIFY                                                0732
*           RF UNRESTRICTED;                                       0732
*         CALL MSG4(04043);                                        0733
         LA    @01,@AL00733                                        0733
         BAL   @14,MSG4                                            0733
*       END;                                                       0734
*     ELSE                                                         0735
*       ;                                                          0735
@RF00720 DS    0H                                                  0736
*   END GET;                                                       0736
@EL00007 DS    0H                                                  0736
@EF00007 DS    0H                                                  0736
@ER00007 LM    @14,@07,@SA00007                                    0736
         LM    @09,@12,@SA00007+40                                 0736
         BR    @14                                                 0736
         EJECT
*SEG4:                                                             0737
*   PROCEDURE;                                                     0737
*                                                                  0737
SEG4     STM   @14,@07,@SA00008                                    0737
         STM   @09,@12,@SA00008+40                                 0737
*/********************************************************************/
*/*                                                                  */
*/* MERGE COMMAND PARAMETERS INTO STATUS RECORD                      */
*/*                                                                  */
*/********************************************************************/
*                                                                  0738
*   CALL BLSEAUTH(ZZ2,BUF1,'O');    /* TEST USER UPDATE AUTHORITY    */
         ST    ZZ2PTR,@AL00001                                     0738
         LA    @09,BUF1                                            0738
         ST    @09,@AL00001+4                                      0738
         LA    @09,@CC01594                                        0738
         ST    @09,@AL00001+8                                      0738
         L     @09,ZZ2DVTP(,ZZ2PTR)                                0738
         L     @15,DVTAUTHP(,@09)                                  0738
         LA    @01,@AL00001                                        0738
         BALR  @14,@15                                             0738
*   RESPECIFY                                                      0739
*     RF RESTRICTED;                                               0739
*   IF RF=0 THEN                                                   0740
         LTR   RF,RF                                               0740
         BNZ   @RF00740                                            0740
*     AUTHSW=1;                     /* USER IS AUTHORIZED TO UPDATE
*                                      STATUS                        */
         LA    AUTHSW,1                                            0741
*   ELSE                                                           0742
*     AUTHSW=0;                     /* USER IS NOT AUTHORIZED TO   0742
*                                      UPDATE STATUS                 */
         B     @RC00740                                            0742
@RF00740 SLR   AUTHSW,AUTHSW                                       0742
*   RESPECIFY                                                      0743
*     RF;                                                          0743
@RC00740 DS    0H                                                  0744
*   IF AUTHSW=1 THEN                /* IF USER IS AUTHORIZED         */
         C     AUTHSW,@CF00041                                     0744
         BNE   @RF00744                                            0744
*     DO;                                                          0745
*       IF DTEIFP=ON&DTEIL^=0 THEN  /* IF DATE PRESENT IN COMMAND    */
         TM    DTEIFP,B'10000000'                                  0746
         BNO   @RF00746                                            0746
         LH    @09,DTEIL                                           0746
         LTR   @09,@09                                             0746
         BZ    @RF00746                                            0746
*         PDRODATE=DTEI(1:DTEIL);   /* SET DATE PROBLEM OCCURRED     */
         MVI   PDRODATE+1(BUFPTR),C' '                             0747
         MVC   PDRODATE+2(6,BUFPTR),PDRODATE+1(BUFPTR)             0747
         BCTR  @09,0                                               0747
         L     @04,DTEIP                                           0747
         EX    @09,@SM01655                                        0747
*       ELSE                                                       0748
*         ;                         /* DATE IS NOT PRESENT, LEAVE IT */
@RF00746 DS    0H                                                  0749
*       IF TMEIFP=ON&TMEIL^=0 THEN  /* IF TIME PRESENT IN COMMAND    */
         TM    TMEIFP,B'10000000'                                  0749
         BNO   @RF00749                                            0749
         LH    @09,TMEIL                                           0749
         LTR   @09,@09                                             0749
         BZ    @RF00749                                            0749
*         PDROTIME=TMEI(1:TMEIL);   /* SET TIME PROBLEM OCCURRED     */
         MVI   PDROTIME+1(BUFPTR),C' '                             0750
         MVC   PDROTIME+2(6,BUFPTR),PDROTIME+1(BUFPTR)             0750
         BCTR  @09,0                                               0750
         L     @04,TMEIP                                           0750
         EX    @09,@SM01657                                        0750
*       ELSE                                                       0751
*         ;                         /* TIME IS NOT PRESENT, LEAVE IT */
@RF00749 DS    0H                                                  0752
*       IF GRPIFP=ON&GRPIL^=0 THEN  /* IF GROUP ID PRESENT IN COMMAND*/
         TM    GRPIFP,B'10000000'                                  0752
         BNO   @RF00752                                            0752
         LH    @09,GRPIL                                           0752
         LTR   @09,@09                                             0752
         BZ    @RF00752                                            0752
*         PDRGROUP=GRPI(1:GRPIL);   /* SET GROUP ID IN STATUS RECORD */
         MVI   PDRGROUP+1(BUFPTR),C' '                             0753
         MVC   PDRGROUP+2(6,BUFPTR),PDRGROUP+1(BUFPTR)             0753
         BCTR  @09,0                                               0753
         L     @04,GRPIP                                           0753
         EX    @09,@SM01659                                        0753
*       ELSE                                                       0754
*         ;                         /* USE DEFAULT GROUP ID          */
@RF00752 DS    0H                                                  0755
*       IF SIDIFP=ON&SIDIL^=0 THEN  /* IF SYS ID PRESENT IN COMMAND  */
         TM    SIDIFP,B'10000000'                                  0755
         BNO   @RF00755                                            0755
         LH    @09,SIDIL                                           0755
         LTR   @09,@09                                             0755
         BZ    @RF00755                                            0755
*         PDRSYS=SIDI(1:SIDIL);     /* SET SYSTEM ID IN STATUS RECORD*/
         MVI   PDRSYS+1(BUFPTR),C' '                               0756
         MVC   PDRSYS+2(6,BUFPTR),PDRSYS+1(BUFPTR)                 0756
         BCTR  @09,0                                               0756
         L     @04,SIDIP                                           0756
         EX    @09,@SM01661                                        0756
*       ELSE                                                       0757
*         ;                         /* LEAVE IT ALONE                */
@RF00755 DS    0H                                                  0758
*       IF CIDIFP=ON&CIDIL^=0 THEN  /* IF COMPONENT ID PRESENT       */
         TM    CIDIFP,B'10000000'                                  0758
         BNO   @RF00758                                            0758
         LH    @09,CIDIL                                           0758
         LTR   @09,@09                                             0758
         BZ    @RF00758                                            0758
*         PDRCOMP=CIDI(1:CIDIL);    /* SET COMPONENT ID IN RECORD    */
         MVI   PDRCOMP+1(BUFPTR),C' '                              0759
         MVC   PDRCOMP+2(8,BUFPTR),PDRCOMP+1(BUFPTR)               0759
         BCTR  @09,0                                               0759
         L     @04,CIDIP                                           0759
         EX    @09,@SM01663                                        0759
*       ELSE                                                       0760
*         ;                         /* LEAVE COMPONENT ID AS IS      */
@RF00758 DS    0H                                                  0761
*       IF OWNIFP=ON&OWNIL^=0 THEN  /* IF PROBLEM OWNER ID PRESENT   */
         TM    OWNIFP,B'10000000'                                  0761
         BNO   @RF00761                                            0761
         LH    @09,OWNIL                                           0761
         LTR   @09,@09                                             0761
         BZ    @RF00761                                            0761
*         DO;                                                      0762
*           PDROWNID=OWNI(1:OWNIL); /* SET PROBLEM OWNER IN RECORD   */
         MVI   PDROWNID+1(BUFPTR),C' '                             0763
         MVC   PDROWNID+2(5,BUFPTR),PDROWNID+1(BUFPTR)             0763
         LR    @04,@09                                             0763
         BCTR  @04,0                                               0763
         L     @03,OWNIP                                           0763
         EX    @04,@SM01665                                        0763
*           PDROWNLN=OWNIL;         /* SET LENGTH OF OWNER ID        */
         STC   @09,PDROWNLN(,BUFPTR)                               0764
*         END;                                                     0765
*       ELSE                                                       0766
*         ;                         /* LEAVE PROBLEM OWNER ID AS IS  */
@RF00761 DS    0H                                                  0767
*       IF UFLIFP=ON&UFLIL^=0 THEN  /* IF USER FIELD IS PRESENT      */
         TM    UFLIFP,B'10000000'                                  0767
         BNO   @RF00767                                            0767
         LH    @09,UFLIL                                           0767
         LTR   @09,@09                                             0767
         BZ    @RF00767                                            0767
*         PDRUSER=UFLI(1:UFLIL);    /* SET VALUE IN USER FIELD       */
         MVI   PDRUSER+1(BUFPTR),C' '                              0768
         MVC   PDRUSER+2(6,BUFPTR),PDRUSER+1(BUFPTR)               0768
         BCTR  @09,0                                               0768
         L     @04,UFLIP                                           0768
         EX    @09,@SM01667                                        0768
*       ELSE                                                       0769
*         ;                         /* LEAVE USER FIELD AS IS        */
@RF00767 DS    0H                                                  0770
*       IF SEVIFP=ON THEN           /* IF PROBLEM SEVERITY PRESENT   */
         TM    SEVIFP,B'10000000'                                  0770
         BNO   @RF00770                                            0770
*         DO;                                                      0771
*           PDRSEV=SEVI(1);         /* SET PROBLEM SEVERITY          */
         L     @09,SEVIP                                           0772
         MVC   PDRSEV(1,BUFPTR),SEVI(@09)                          0772
*           IF PDRSEV='0' THEN      /* IF PROBLEM SEVERITY IS ZERO   */
         CLI   PDRSEV(BUFPTR),C'0'                                 0773
         BNE   @RF00773                                            0773
*             PDRSEV=' ';           /* BLANK IT OUT                  */
         MVI   PDRSEV(BUFPTR),C' '                                 0774
*           ELSE                                                   0775
*             ;                     /* SEVERITY CODE IS 1 TO 4       */
@RF00773 DS    0H                                                  0776
*         END;                      /* DONE                          */
*       ELSE                                                       0777
*         ;                         /* LEAVE SEVERITY AS IS          */
@RF00770 DS    0H                                                  0778
*       IF APRIFP=ON&APRIL^=0 THEN  /* IF APAR ID PRESENT IN COMMAND */
         TM    APRIFP,B'10000000'                                  0778
         BNO   @RF00778                                            0778
         LH    @09,APRIL                                           0778
         LTR   @09,@09                                             0778
         BZ    @RF00778                                            0778
*         PDRAPRID=APRI(1:APRIL);   /* SET APAR ID IN RECORD         */
         MVI   PDRAPRID+1(BUFPTR),C' '                             0779
         MVC   PDRAPRID+2(5,BUFPTR),PDRAPRID+1(BUFPTR)             0779
         BCTR  @09,0                                               0779
         L     @04,APRIP                                           0779
         EX    @09,@SM01669                                        0779
*       ELSE                                                       0780
*         ;                         /* LEAVE APAR ID AS IS           */
@RF00778 DS    0H                                                  0781
*       IF PTFIFP=ON&PTFIL^=0 THEN  /* IF PTF ID PRESENT IN COMMAND  */
         TM    PTFIFP,B'10000000'                                  0781
         BNO   @RF00781                                            0781
         LH    @09,PTFIL                                           0781
         LTR   @09,@09                                             0781
         BZ    @RF00781                                            0781
*         PDRPTFID=PTFI(1:PTFIL);   /* SET PTF ID IN RECORD          */
         MVI   PDRPTFID+1(BUFPTR),C' '                             0782
         MVC   PDRPTFID+2(5,BUFPTR),PDRPTFID+1(BUFPTR)             0782
         BCTR  @09,0                                               0782
         L     @04,PTFIP                                           0782
         EX    @09,@SM01671                                        0782
*       ELSE                                                       0783
*         ;                         /* LEAVE PTF ID AS IS            */
@RF00781 DS    0H                                                  0784
*       IF FIXQFP=ON&FIXQL^=0 THEN  /* IF FIX ID PRESENT IN COMMAND  */
         TM    FIXQFP,B'10000000'                                  0784
         BNO   @RF00784                                            0784
         LH    @09,FIXQL                                           0784
         LTR   @09,@09                                             0784
         BZ    @RF00784                                            0784
*         PDRFIXID=FIXQ(1:FIXQL);   /* SET FIX ID IN RECORD          */
         MVI   PDRFIXID+1(BUFPTR),C' '                             0785
         MVC   PDRFIXID+2(58,BUFPTR),PDRFIXID+1(BUFPTR)            0785
         BCTR  @09,0                                               0785
         L     @04,FIXQP                                           0785
         EX    @09,@SM01673                                        0785
*       ELSE                                                       0786
*         ;                         /* LEAVE FIX ID AS IS            */
@RF00784 DS    0H                                                  0787
*       IF ABSQFP=ON&ABSQL^=0 THEN  /* IF ABSTRACT PRESENT IN COMMAND*/
         TM    ABSQFP,B'10000000'                                  0787
         BNO   @RF00787                                            0787
         LH    @09,ABSQL                                           0787
         LTR   @09,@09                                             0787
         BZ    @RF00787                                            0787
*         PDRABS=ABSQ(1:ABSQL);     /* SET ABSTRACT IN RECORD        */
         MVI   PDRABS+1(BUFPTR),C' '                               0788
         MVC   PDRABS+2(126,BUFPTR),PDRABS+1(BUFPTR)               0788
         BCTR  @09,0                                               0788
         L     @04,ABSQP                                           0788
         EX    @09,@SM01675                                        0788
*       ELSE                                                       0789
*         ;                         /* LEAVE ABSTRACT FIELD AS IS    */
@RF00787 DS    0H                                                  0790
*       IF PSTTYPE>0 THEN           /* IF STATUS PRESENT             */
         LH    @09,PSTTYPE                                         0790
         LTR   @09,@09                                             0790
         BNP   @RF00790                                            0790
*         DO;                                                      0791
*           PDRPSTAT=STATPROB(PSTTYPE);/* SET STATUS FIELD           */
         SLA   @09,3                                               0792
         LA    @04,STATPROB-8(@09)                                 0792
         MVC   PDRPSTAT(8,BUFPTR),0(@04)                           0792
*           PDRPDATE=CURDATE;       /* SET DATE OF STATUS CHANGE     */
         MVC   PDRPDATE(8,BUFPTR),CURDATE                          0793
*           PDRPTIME=CURTIME;       /* SET TIME OF STATUS CHANGE     */
         MVC   PDRPTIME(8,BUFPTR),CURTIME                          0794
*         END;                                                     0795
*       ELSE                                                       0796
*         ;                         /* LEAVE STATUS AS AS IS         */
@RF00790 DS    0H                                                  0797
*       IF IBMFLDWD>0 THEN          /* IF IBM STATUS PRESENT         */
         LH    @09,IBMFLDWD                                        0797
         LTR   @09,@09                                             0797
         BNP   @RF00797                                            0797
*         DO;                                                      0798
*           PDRISTAT=STATIBM(IBMFLDWD);/* SET IBM STATUS FIELD       */
         SLA   @09,3                                               0799
         LA    @04,STATIBM-8(@09)                                  0799
         MVC   PDRISTAT(8,BUFPTR),0(@04)                           0799
*           PDRIDATE=CURDATE;       /* SET DATE OF IBM STATUS CHANGE */
         MVC   PDRIDATE(8,BUFPTR),CURDATE                          0800
*           PDRITIME=CURTIME;       /* SET TIME OF IBM STATUS CHANGE */
         MVC   PDRITIME(8,BUFPTR),CURTIME                          0801
*         END;                                                     0802
*       ELSE                                                       0803
*         ;                         /* LEAVE IBM STATUS AS IS        */
@RF00797 DS    0H                                                  0804
*       IF PTFFLDWD>0 THEN          /* IF PTF STATUS PRESENT         */
         LH    @09,PTFFLDWD                                        0804
         LTR   @09,@09                                             0804
         BNP   @RF00804                                            0804
*         DO;                                                      0805
*           PDRTSTAT=STATPTF(PTFFLDWD);/* SET PTF STATUS FIELD       */
         SLA   @09,2                                               0806
         LA    @04,STATPTF-4(@09)                                  0806
         MVC   PDRTSTAT(4,BUFPTR),0(@04)                           0806
*           PDRTDATE=CURDATE;       /* SET DATE OF PTF STATUS CHANGE */
         MVC   PDRTDATE(8,BUFPTR),CURDATE                          0807
*           PDRTTIME=CURTIME;       /* SET TIME OF PTF STATUS CHANGE */
         MVC   PDRTTIME(8,BUFPTR),CURTIME                          0808
*         END;                                                     0809
*       ELSE                                                       0810
*         ;                         /* LEAVE PTF STATUS AS IS        */
@RF00804 DS    0H                                                  0811
*       IF FIXFLDWD>0 THEN          /* IF FIX STATUS PRESENT         */
         LH    @09,FIXFLDWD                                        0811
         LTR   @09,@09                                             0811
         BNP   @RF00811                                            0811
*         DO;                                                      0812
*           PDRFSTAT=STATFIX(FIXFLDWD);/* SET FIX STATUS FIELD       */
         SLA   @09,2                                               0813
         LA    @04,STATFIX-4(@09)                                  0813
         MVC   PDRFSTAT(4,BUFPTR),0(@04)                           0813
*           PDRFDATE=CURDATE;       /* SET DATE OF FIX STATUS CHANGE */
         MVC   PDRFDATE(8,BUFPTR),CURDATE                          0814
*           PDRFTIME=CURTIME;       /* SET TIME OF FIX STATUS CHANGE */
         MVC   PDRFTIME(8,BUFPTR),CURTIME                          0815
*         END;                                                     0816
*       ELSE                                                       0817
*         ;                         /* LEAVE FIX STATUS AS IS        */
@RF00811 DS    0H                                                  0818
*       IF DDSDFP=ON THEN           /* IF PROB DESCRIPTION IN DATA 0818
*                                      SET AND USER IS AUTHORIZED    */
         TM    DDSDFP,B'10000000'                                  0818
         BNO   @RF00818                                            0818
*         DO;                                                      0819
*           CALL BLSEMDP1(ZZ2,DDS,MYBUF);/* BUILD RECORDS REMOTELY   */
         ST    ZZ2PTR,@AL00001                                     0820
         LA    @09,DDS                                             0820
         ST    @09,@AL00001+4                                      0820
         ST    BUFPTR,@AL00001+8                                   0820
         L     @15,@CV01370                                        0820
         LA    @01,@AL00001                                        0820
         BALR  @14,@15                                             0820
*           RESPECIFY                                              0821
*             RF RESTRICTED;                                       0821
*           RETC=RF;                /* SAVE RETURN CODE              */
         LR    RETC,RF                                             0822
*           RESPECIFY                                              0823
*             RF UNRESTRICTED;                                     0823
*         END;                                                     0824
*       ELSE                                                       0825
*         ;                         /* NO PROBLEM DESCRIPTION DATASET*/
@RF00818 DS    0H                                                  0826
*     END;                                                         0826
*   ELSE                                                           0827
*     ;                             /* USER NOT AUTHORIZED           */
@RF00744 DS    0H                                                  0828
*   IF DSCQFP=ON THEN               /* IF PROBLEM DESCRIPTION PRESENT*/
         TM    DSCQFP,B'10000000'                                  0828
         BNO   @RF00828                                            0828
*     DO;                                                          0829
*       CALL DESLOCAL;              /* BUILD DESCRIPTION RECORD(S)   */
         BAL   @14,DESLOCAL                                        0830
*       RESPECIFY                                                  0831
*         RF RESTRICTED;                                           0831
*       RETC=RF;                    /* SAVE RETURN CODE              */
         LR    RETC,RF                                             0832
*       RESPECIFY                                                  0833
*         RF UNRESTRICTED;                                         0833
*     END;                                                         0834
*   ELSE                                                           0835
*     ;                             /* NO PROBLEM DESCRIPTION TEXT   */
@RF00828 DS    0H                                                  0836
*   IF AUTHSW=0&(DTEIFP=ON×TMEIFP=ON×GRPIFP=ON×SIDIFP=ON×CIDIFP=ON×
*       OWNIFP=ON×UFLIFP=ON×SEVIFP=ON×APRIFP=ON×PTFIFP=ON×FIXQFP=ON×
*       ABSQFP=ON×PSTTYPE>0×IBMFLDWD>0×PTFFLDWD>0×FIXFLDWD>0×DDSDFP=ON)
*     THEN                          /* IF USER NOT AUTHORIZED        */
         SLR   @09,@09                                             0836
         CR    AUTHSW,@09                                          0836
         BNE   @RF00836                                            0836
         TM    DTEIFP,B'10000000'                                  0836
         BO    @RT00836                                            0836
         TM    TMEIFP,B'10000000'                                  0836
         BO    @RT00836                                            0836
         TM    GRPIFP,B'10000000'                                  0836
         BO    @RT00836                                            0836
         TM    SIDIFP,B'10000000'                                  0836
         BO    @RT00836                                            0836
         TM    CIDIFP,B'10000000'                                  0836
         BO    @RT00836                                            0836
         TM    OWNIFP,B'10000000'                                  0836
         BO    @RT00836                                            0836
         TM    UFLIFP,B'10000000'                                  0836
         BO    @RT00836                                            0836
         TM    SEVIFP,B'10000000'                                  0836
         BO    @RT00836                                            0836
         TM    APRIFP,B'10000000'                                  0836
         BO    @RT00836                                            0836
         TM    PTFIFP,B'10000000'                                  0836
         BO    @RT00836                                            0836
         TM    FIXQFP,B'10000000'                                  0836
         BO    @RT00836                                            0836
         TM    ABSQFP,B'10000000'                                  0836
         BO    @RT00836                                            0836
         CH    @09,PSTTYPE                                         0836
         BL    @RT00836                                            0836
         CH    @09,IBMFLDWD                                        0836
         BL    @RT00836                                            0836
         CH    @09,PTFFLDWD                                        0836
         BL    @RT00836                                            0836
         CH    @09,FIXFLDWD                                        0836
         BL    @RT00836                                            0836
         TM    DDSDFP,B'10000000'                                  0836
         BNO   @RF00836                                            0836
@RT00836 DS    0H                                                  0837
*     DO;                                                          0837
*       DO;                         /* BLSDMSG                     0838
*                                      (ZZ2,04004,DMCBMSG,BLSDMSGS) R
*                                      OUTE(BOTH)INSERT(FPPIDP,PDRKPN
*                                      UM)LIFO                       */
*         IOPTLIST(1)=ADDR(IOPTLIST(4));/* CHAIN TO NEXT INSERT      */
         LA    @09,IOPTLIST+12                                     0839
         ST    @09,IOPTLIST                                        0839
*         IOPTLIST(2)=ADDR(FPPIDP); /* INSERT NAME POINTER           */
         L     @09,ZZ2ZZ1P(,ZZ2PTR)                                0840
         L     @04,ZZ1FPP(,@09)                                    0840
         LA    @04,FPPIDP(,@04)                                    0840
         ST    @04,IOPTLIST+4                                      0840
*         IOPTLIST(3)=0;            /* ZERO RESERVED FIELD           */
         SLR   @04,@04                                             0841
         ST    @04,IOPTLIST+8                                      0841
*         RFY                                                      0842
*           I015F BASED(ADDR(IOPTLIST(3)));/* ACCESS BYTES 1-2       */
*         I015F=LENGTH(FPPIDP);     /* INSERT LENGTH                 */
         LA    @15,IOPTLIST+8                                      0843
         MVC   I015F(2,@15),@CH00094                               0843
*         IOPTLIST(4)=0;            /* LAST INSERT                   */
         ST    @04,IOPTLIST+12                                     0844
*         IOPTLIST(5)=ADDR(PDRKPNUM);/* INSERT NAME POINTER          */
         LA    @15,PDRKPNUM(,BUFPTR)                               0845
         ST    @15,IOPTLIST+16                                     0845
*         IOPTLIST(6)=0;            /* ZERO RESERVED FIELD           */
         ST    @04,IOPTLIST+20                                     0846
*         RFY                                                      0847
*           I015F BASED(ADDR(IOPTLIST(6)));/* ACCESS BYTES 1-2       */
*         I015F=LENGTH(PDRKPNUM);   /* INSERT LENGTH                 */
         LA    @04,IOPTLIST+20                                     0848
         MVC   I015F(2,@04),@CH00091                               0848
*         CALL BLSDMSG0(ZZ2,04004,DMCBMSG,BLSDMSGS,'10110000'B,ADDR(
*             IOPTLIST));           /* BUILD MESSAGE                 */
         ST    ZZ2PTR,@AL00001                                     0849
         LA    @04,@CF01602                                        0849
         ST    @04,@AL00001+4                                      0849
         L     @09,ZZ1PDRP(,@09)                                   0849
         LA    @09,DMCBMSG(,@09)                                   0849
         ST    @09,@AL00001+8                                      0849
         L     @09,ZZ2MSGSP(,ZZ2PTR)                               0849
         ST    @09,@AL00001+12                                     0849
         LA    @09,@CB01589                                        0849
         ST    @09,@AL00001+16                                     0849
         LA    @09,IOPTLIST                                        0849
         ST    @09,@AFTEMPS+4                                      0849
         LA    @09,@AFTEMPS+4                                      0849
         ST    @09,@AL00001+20                                     0849
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0849
         LA    @01,@AL00001                                        0849
         BALR  @14,@15                                             0849
*       END;                        /* BLSDMSG                     0850
*                                      (ZZ2,04004,DMCBMSG,BLSDMSGS) R
*                                      OUTE(BOTH)INSERT(FPPIDP,PDRKPN
*                                      UM)LIFO                       */
*       RETC=EIGHT;                 /* SET ERROR RETURN CODE         */
         LA    RETC,8                                              0851
*     END;                                                         0852
*   ELSE                                                           0853
*     ;                                                            0853
@RF00836 DS    0H                                                  0854
*   END SEG4;                                                      0854
@EL00008 DS    0H                                                  0854
@EF00008 DS    0H                                                  0854
@ER00008 LM    @14,@07,@SA00008                                    0854
         LM    @09,@12,@SA00008+40                                 0854
         BR    @14                                                 0854
         EJECT
*DESLOCAL:                                                         0855
*   PROCEDURE;                                                     0855
*                                                                  0855
DESLOCAL STM   @14,@12,@SA00009                                    0855
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE COPIES THE PROBLEM DESCRIPTION INTO THE PROBLEM  */
*   /* DIRECTORY DATA SET                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0856
*   DECLARE                                                        0856
*     DESBUFP POINTER(31),          /* LOCAL BUFFER POINTER          */
*     I POINTER(31),                /* INDEX TO INPUT BYTE           */
*     J POINTER(31),                /* INDEX TO OUTPUT BYTE          */
*     K POINTER(31),                /* INDEX TO DESCRIPTION LINE     */
*     L POINTER(31),                /* INDEX TO LAST BLANK IN OUTPUT */
*     RNUM FIXED(31);               /* DESCRIPTION RECORD SEQUENCE 0856
*                                      NUMBER                        */
*   DESBUFP=ADDR(BUF2);             /* SET POINTER TO BUFFER         */
         LA    DESBUFP,BUF2                                        0857
*   J=1;                            /* INITIALIZE BYTE INDEX         */
         LA    @04,1                                               0858
         ST    @04,J                                               0858
*   L=1;                            /* INITIALIZE BLANK INDEX        */
         ST    @04,L                                               0859
*   DESBUFP->PDREC=PDREC;           /* COPY RECORD HEADER            */
         MVC   PDREC(16,DESBUFP),PDREC(BUFPTR)                     0860
*   RNUM=PDRDESCL/PDRDEMAX;         /* COMPUTE RECORD SEQUENCE NUMBER*/
         LA    @04,13                                              0861
         L     @15,PDRDESCL(,BUFPTR)                               0861
         LR    @00,@15                                             0861
         SRDA  @00,32                                              0861
         DR    @00,@04                                             0861
         ST    @01,RNUM                                            0861
*   K=PDRDESCL//PDRDEMAX;           /* COMPUTE LINE NUMBER           */
         LR    @02,@15                                             0862
         SRDA  @02,32                                              0862
         DR    @02,@04                                             0862
         ST    @02,K                                               0862
*   RESPECIFY                                                      0863
*     PDREC BASED(DESBUFP);         /* BASE DIRECTORY RECORD IN    0863
*                                      BUFFER                        */
*   PDRKRCTY=PDRDESCC;              /* SET RECORD TYPE TO PROBLEM  0864
*                                      DESCRIPTION                   */
         MVC   PDRKRCTY(2,DESBUFP),@CC01275                        0864
*   IF BUFPTR->PDRDESCL^=0 THEN     /* IF DESCRIPTION EXISTS         */
         SLR   @04,@04                                             0865
         CR    @15,@04                                             0865
         BE    @RF00865                                            0865
*     DO;                           /* APPEND THIS DESCRIPTION       */
*       IF K^=0 THEN                /* IF LAST RECORD NOT FULL       */
         CR    @02,@04                                             0867
         BE    @RF00867                                            0867
*         DO;                       /* ADD LINES TO LAST RECORD      */
*           CVD(RNUM,PACKED);       /* CONVERT RECORD NUMBER TO    0869
*                                      DECIMAL                       */
         CVD   @01,PACKED                                          0869
*           UNPK(PDRRECSQ,PACKED);  /* UNPACK IT                     */
         UNPK  PDRRECSQ(4,DESBUFP),PACKED(8)                       0870
*           PDRRECSQ(LENGTH(PDRRECSQ))=PDRRECSQ(LENGTH(PDRRECSQ))×'0';
*                                                                  0871
         OI    PDRRECSQ+3(DESBUFP),C'0'                            0871
*           /*********************************************************/
*           /*                                                       */
*           /* CORRECT ZONE OF LAST DIGIT BLSGET (ZZ1PDRP)           */
*           /* AREAL(DESBUFP)ARG(PDRKEY)ARGLEN(LENGTH(PDRKEY))UPD    */
*           /* KEYEQ                                                 */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0872
*           DO;                     /* BLSGET (ZZ1PDRP) AREAL(DESBUFP
*                                      )ARG(PDRKEY)ARGLEN(LENGTH(PDRK
*                                      EY))UPD KEYEQ                 */
*             RFY                                                  0873
*               GPR01P RSTD;                                       0873
*             GPR01P=ZZ1PDRP;       /* ADDRESS DMCB                  */
         L     @04,ZZ2ZZ1P(,ZZ2PTR)                                0874
         L     GPR01P,ZZ1PDRP(,@04)                                0874
*             RFY                                                  0875
*               DMCB BASED(GPR01P);                                0875
*             IF((GPR01P&'FFFFFFF8'X)=GPR01P)&DMCBID='DMCB'/* VALID
*                                      DMCB ?                        */
*               THEN                                               0876
         LR    @04,GPR01P                                          0876
         N     @04,@CF01531                                        0876
         CLR   @04,GPR01P                                          0876
         BNE   @RF00876                                            0876
         CLC   DMCBID(4,GPR01P),@CC01532                           0876
         BNE   @RF00876                                            0876
*               DO;                                                0877
*                 DMCBBUFP=DESBUFP&'7FFFFFFF'X;/* PLACE BUFFER     0878
*                                      ADDRESS IN DMCB               */
         LR    @04,DESBUFP                                         0878
         N     @04,@CF01548                                        0878
         ST    @04,DMCBBUFP(,GPR01P)                               0878
*                 DMCBKEYP=ADDR(PDRKEY);/* PLACE KEY ADDRESS IN DMCB */
         ST    DESBUFP,DMCBKEYP(,GPR01P)                           0879
*                 DMCBKEYL=(LENGTH(PDRKEY))&'7FFFFFFF'X;/* PLACE KEY
*                                      LENGTH IN DMCB                */
         MVC   DMCBKEYL(4,GPR01P),@CF01037                         0880
*                 DMCBKYD='1'B;     /* INDICATE KEYED ACCESS         */
*                 DMCBAPX='0'B;     /* INDICATE EXACT KEY MATCH      */
*                 DMCBGKY='0'B;     /* INDICATE FULL KEY SEARCH      */
*                 DMCBUPD='1'B;     /* INDICATE UPDATE OPTION        */
         OI    DMCBKYD(GPR01P),B'10010000'                         0884
         NI    DMCBAPX(GPR01P),B'10011111'                         0884
*                 DMCBRQST=DMCBGER; /* INDICATE GET REQUEST          */
         MVI   DMCBRQST(GPR01P),X'04'                              0885
*                 CALL DMCBRI->DMCBDMGR;/* CALL BLSCRQST             */
         L     @15,DMCBRI(,GPR01P)                                 0886
         BALR  @14,@15                                             0886
*               END;                                               0887
*             ELSE                                                 0888
*               DO;                                                0888
         B     @RC00876                                            0888
@RF00876 DS    0H                                                  0889
*                 RFY                                              0889
*                  (GPR00F,                                        0889
*                   GPR15F) RSTD;                                  0889
*                 GPR00F=0;         /* INDICATE NO MESSAGE CHAIN     */
         SLR   GPR00F,GPR00F                                       0890
*                 GPR15F=16;        /* INDICATE INVALID DMCB         */
         LA    GPR15F,16                                           0891
*                 RFY                                              0892
*                  (GPR00F,                                        0892
*                   GPR15F);                                       0892
*               END;                                               0893
*             RFY                                                  0894
*               DMCB;                                              0894
@RC00876 DS    0H                                                  0895
*             RFY                                                  0895
*               GPR01P;                                            0895
*           END;                    /* BLSGET (ZZ1PDRP) AREAL(DESBUFP
*                                      )ARG(PDRKEY)ARGLEN(LENGTH(PDRK
*                                      EY))UPD KEYEQ                 */
*           RESPECIFY                                              0897
*             RF RESTRICTED;                                       0897
*           IF RF^=0 THEN           /* IF RETURN CODE NOT ZERO       */
         LTR   RF,RF                                               0898
         BZ    @RF00898                                            0898
*             DO;                                                  0899
*               IF RF=16 THEN       /* IF INVALID DMCB               */
         C     RF,@CF00052                                         0900
         BNE   @RF00900                                            0900
*                 DO;               /* ABEND(200) DUMP               */
*                   RESPECIFY                                      0902
*                    (GPR01F) RESTRICTED;                          0902
*                   GPR01F=200;     /* COMP CODE IN REG 1            */
         LA    GPR01F,200                                          0903
*                   GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS
*                                      FLAG                          */
         O     GPR01F,@CF00061                                     0904
*                   SVC(13);        /* ISSUE ABEND SVC               */
         SVC   13                                                  0905
*                   RESPECIFY                                      0906
*                    (GPR01F) UNRESTRICTED;                        0906
*                 END;              /* ABEND(200) DUMP QUIT RIGHT  0907
*                                      HERE                          */
*               ELSE                                               0908
*                 ;                                                0908
@RF00900 DS    0H                                                  0909
*               RETC=RF;            /* SAVE RETURN CODE              */
         LR    RETC,RF                                             0909
*               RESPECIFY                                          0910
*                 RF UNRESTRICTED;                                 0910
*               CALL MSG4(04044);   /* ERROR WRITING PROB DIRECTORY  */
         LA    @01,@AL00911                                        0911
         BAL   @14,MSG4                                            0911
*             END;                                                 0912
*           ELSE                    /* NO PROBLEM                    */
*             DO;                                                  0913
         B     @RC00898                                            0913
@RF00898 DS    0H                                                  0914
*               J=1;                /* INITIALIZE INDEX TO OUTPUT  0914
*                                      BYTE                          */
         LA    @04,1                                               0914
         ST    @04,J                                               0914
*               L=1;                /* INITIALIZE BLANK INDEX        */
         ST    @04,L                                               0915
*               K=K+1;              /* STEP LINE INDEX               */
         AL    @04,K                                               0916
         ST    @04,K                                               0916
*             END;                                                 0917
*         END;                                                     0918
*       ELSE                                                       0919
*         DO;                       /* SET FOR NEW RECORD            */
         B     @RC00867                                            0919
@RF00867 DS    0H                                                  0920
*           J=1;                    /* INITIALIZE INDEX TO OUTPUT  0920
*                                      BYTE                          */
         LA    @04,1                                               0920
         ST    @04,J                                               0920
*           L=1;                    /* INITIALIZE BLANK INDEX        */
         ST    @04,L                                               0921
*           K=1;                    /* INITIALIZE LINE INDEX         */
         ST    @04,K                                               0922
*         END;                                                     0923
*     END;                                                         0924
*   ELSE                                                           0925
*     DO;                           /* NO DESCRIPTION EXISTS         */
         B     @RC00865                                            0925
@RF00865 DS    0H                                                  0926
*       J=1;                        /* INITIALIZE INDEX TO OUTPUT  0926
*                                      BYTE                          */
         LA    @04,1                                               0926
         ST    @04,J                                               0926
*       L=1;                        /* INITIALIZE BLANK INDEX        */
         ST    @04,L                                               0927
*       K=1;                        /* INITIALIZE LINE INDEX         */
         ST    @04,K                                               0928
*       RNUM=0;                     /* INITIALIZE RECORD NUMBER      */
         SLR   @04,@04                                             0929
         ST    @04,RNUM                                            0929
*     END;                                                         0930
*   DO I=1 TO DSCQL WHILE RETC=0;   /* COPY DESCRIPTION TEXT         */
@RC00865 LA    I,1                                                 0931
         B     @DE00931                                            0931
@DL00931 LTR   RETC,RETC                                           0931
         BNZ   @DC00931                                            0931
*     IF J^=L×DSCQ(I)^=' ' THEN     /* SKIP OVER LEADING BLANKS      */
         CLC   J(4),L                                              0932
         BNE   @RT00932                                            0932
         L     @04,DSCQP                                           0932
         ALR   @04,I                                               0932
         BCTR  @04,0                                               0932
         CLI   DSCQ(@04),C' '                                      0932
         BE    @RF00932                                            0932
@RT00932 DS    0H                                                  0933
*       DO;                         /* ON OUR WAY                    */
*         PDRDESC(K,J)=DSCQ(I)×' '; /* COPY A BYTE                   */
         L     @04,J                                               0934
         L     @03,K                                               0934
         MH    @03,@CH01256                                        0934
         ALR   @03,@04                                             0934
         ALR   @03,DESBUFP                                         0934
         AL    @03,@CF01677                                        0934
         L     @15,DSCQP                                           0934
         LR    @14,@15                                             0934
         ALR   @14,I                                               0934
         BCTR  @14,0                                               0934
         MVC   PDRDESC-16(1,@03),DSCQ(@14)                         0934
         OI    PDRDESC-16(@03),C' '                                0934
*         J=J+1;                    /* BUMP INDEX TO OUTPUT BYTE     */
         AL    @04,@CF00041                                        0935
         ST    @04,J                                               0935
*         IF DSCQ(I)=' ' THEN       /* IF A BLANK WAS MOVED          */
         ALR   @15,I                                               0936
         BCTR  @15,0                                               0936
         CLI   DSCQ(@15),C' '                                      0936
         BNE   @RF00936                                            0936
*           L=J;                    /* SAVE THE INDEX TO NEXT BYTE   */
         ST    @04,L                                               0937
*         ELSE                                                     0938
*           ;                       /* NOT A BLANK                   */
@RF00936 DS    0H                                                  0939
*         IF J>LENGTH(PDRDESC) THEN /* IF DESCRIPTION LINE IS FULL   */
         CLC   J(4),@CF01256                                       0939
         BNH   @RF00939                                            0939
*           DO;                                                    0940
*             CALL STEPLINE;        /* STEP TO NEXT LINE             */
         BAL   @14,STEPLINE                                        0941
*             RESPECIFY                                            0942
*               RF RESTRICTED;                                     0942
*             RETC=RF;              /* SAVE RETURN CODE              */
         LR    RETC,RF                                             0943
*             RESPECIFY                                            0944
*               RF UNRESTRICTED;                                   0944
*           END;                                                   0945
*         ELSE                                                     0946
*           ;                       /* LINE NOT FULL                 */
@RF00939 DS    0H                                                  0947
*       END;                        /* ONE BYTE MOVED                */
*     ELSE                                                         0948
*       ;                           /* SKIPPING LEADING AND MULTIPLE
*                                      BLANKS                        */
@RF00932 DS    0H                                                  0949
*   END;                            /* FINISHED WITH INPUT TEXT      */
         AL    I,@CF00041                                          0949
@DE00931 CH    I,DSCQL                                             0949
         BNH   @DL00931                                            0949
@DC00931 DS    0H                                                  0950
*   IF J>1 THEN                     /* IF PARTIAL LINE FILLED        */
         L     @04,J                                               0950
         C     @04,@CF00041                                        0950
         BNH   @RF00950                                            0950
*     DO;                           /* BLANK OUT THE REST OF IT      */
*       DO I=J TO LENGTH(PDRDESC);  /* JUST DO ONE LINE              */
         LR    I,@04                                               0952
         B     @DE00952                                            0952
@DL00952 DS    0H                                                  0953
*         PDRDESC(K,I)=' ';         /* PAD IT WITH BLANKS            */
         L     @04,K                                               0953
         MH    @04,@CH01256                                        0953
         ALR   @04,I                                               0953
         ALR   @04,DESBUFP                                         0953
         AL    @04,@CF01677                                        0953
         MVI   PDRDESC-16(@04),C' '                                0953
*       END;                        /* END OF PADDING LOOP           */
         AL    I,@CF00041                                          0954
@DE00952 C     I,@CF01256                                          0954
         BNH   @DL00952                                            0954
*       K=K+1;                      /* BUMP THE LINE COUNTER         */
         LA    @04,1                                               0955
         L     @15,K                                               0955
         ALR   @15,@04                                             0955
         ST    @15,K                                               0955
*       BUFPTR->PDRDESCL=BUFPTR->PDRDESCL+1;/* LIKEWISE THE TOTAL    */
         AL    @04,PDRDESCL(,BUFPTR)                               0956
         ST    @04,PDRDESCL(,BUFPTR)                               0956
*     END;                          /* END OF ODD LINE PROCESS       */
*   ELSE                                                           0958
*     ;                             /* NO PARTIAL LINE PRESENT       */
@RF00950 DS    0H                                                  0959
*   IF K>1&RETC=0 THEN              /* IF ANY LINES IN RECORD        */
         L     @04,K                                               0959
         C     @04,@CF00041                                        0959
         BNH   @RF00959                                            0959
         LTR   RETC,RETC                                           0959
         BNZ   @RF00959                                            0959
*     DO;                           /* WRITE OUT THE LAST ONE        */
*       K=K-1;                      /* STEP BACK TO TRUE LINE COUNT  */
         BCTR  @04,0                                               0961
         ST    @04,K                                               0961
*       IF RNUM<10000 THEN                                         0962
         L     @15,RNUM                                            0962
         C     @15,@CF01617                                        0962
         BNL   @RF00962                                            0962
*         DO;                                                      0963
*           CVD(RNUM,PACKED);       /* CONVERT RECORD NUMBER TO    0964
*                                      DECIMAL                       */
         CVD   @15,PACKED                                          0964
*           UNPK(PDRRECSQ,PACKED);  /* UNPACK IT                     */
         UNPK  PDRRECSQ(4,DESBUFP),PACKED(8)                       0965
*           PDRRECSQ(LENGTH(PDRRECSQ))=PDRRECSQ(LENGTH(PDRRECSQ))×'0';
*                                                                  0966
         OI    PDRRECSQ+3(DESBUFP),C'0'                            0966
*           /*********************************************************/
*           /*                                                       */
*           /* CORRECT ZONE OF LAST DIGIT BLSPUT (ZZ1PDRP)           */
*           /* AREA(PDREC)RECLEN(LENGTH(PDREC)+K*LENGTH(PDRDESC))    */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0967
*           DO;                     /* BLSPUT (ZZ1PDRP) AREA(PDREC)RE
*                                      CLEN(LENGTH(PDREC)+K*LENGTH(PD
*                                      RDESC))                       */
*             RFY                                                  0968
*               GPR01P RSTD;                                       0968
*             GPR01P=ZZ1PDRP;       /* ADDRESS DMCB                  */
         L     @15,ZZ2ZZ1P(,ZZ2PTR)                                0969
         L     GPR01P,ZZ1PDRP(,@15)                                0969
*             RFY                                                  0970
*               DMCB BASED(GPR01P);                                0970
*             IF((GPR01P&'FFFFFFF8'X)=GPR01P)&DMCBID='DMCB'/* VALID
*                                      DMCB ?                        */
*               THEN                                               0971
         LR    @00,GPR01P                                          0971
         N     @00,@CF01531                                        0971
         CLR   @00,GPR01P                                          0971
         BNE   @RF00971                                            0971
         CLC   DMCBID(4,GPR01P),@CC01532                           0971
         BNE   @RF00971                                            0971
*               DO;                                                0972
*                 DMCBBUFP=ADDR(PDREC);/* PLACE BUFFER ADDRESS IN  0973
*                                      DMCB                          */
         ST    DESBUFP,DMCBBUFP(,GPR01P)                           0973
*                 DMCBORL=(LENGTH(PDREC)+K*LENGTH(PDRDESC))&'7FFFFFFF'X
*                     ;             /* PLACE RECORD LENGTH IN DMCB   */
         MH    @04,@CH01256                                        0974
         AL    @04,@CF00052                                        0974
         N     @04,@CF01548                                        0974
         ST    @04,DMCBORL(,GPR01P)                                0974
*                 DMCBRQST=DMCBPUR; /* INDICATE PUT REQUEST          */
         MVI   DMCBRQST(GPR01P),X'05'                              0975
*                 CALL DMCBRI->DMCBDMGR;/* CALL BLSCRQST             */
         L     @15,DMCBRI(,GPR01P)                                 0976
         BALR  @14,@15                                             0976
*               END;                                               0977
*             ELSE                                                 0978
*               DO;                                                0978
         B     @RC00971                                            0978
@RF00971 DS    0H                                                  0979
*                 RFY                                              0979
*                  (GPR00F,                                        0979
*                   GPR15F) RSTD;                                  0979
*                 GPR00F=0;         /* INDICATE NO MESSAGE CHAIN     */
         SLR   GPR00F,GPR00F                                       0980
*                 GPR15F=16;        /* INDICATE INVALID DMCB         */
         LA    GPR15F,16                                           0981
*                 RFY                                              0982
*                  (GPR00F,                                        0982
*                   GPR15F);                                       0982
*               END;                                               0983
*             RFY                                                  0984
*               DMCB;                                              0984
@RC00971 DS    0H                                                  0985
*             RFY                                                  0985
*               GPR01P;                                            0985
*           END;                    /* BLSPUT (ZZ1PDRP) AREA(PDREC)RE
*                                      CLEN(LENGTH(PDREC)+K*LENGTH(PD
*                                      RDESC)) WRITE OUT LAST      0986
*                                      DESCRIPTION RECORD            */
*           RESPECIFY                                              0987
*             RF RESTRICTED;                                       0987
*           IF RF^=0 THEN           /* IF RETURN CODE NOT ZERO       */
         LTR   RF,RF                                               0988
         BZ    @RF00988                                            0988
*             DO;                                                  0989
*               IF RF=16 THEN       /* IF INVALID DMCB               */
         C     RF,@CF00052                                         0990
         BNE   @RF00990                                            0990
*                 DO;               /* ABEND(200) DUMP               */
*                   RESPECIFY                                      0992
*                    (GPR01F) RESTRICTED;                          0992
*                   GPR01F=200;     /* COMP CODE IN REG 1            */
         LA    GPR01F,200                                          0993
*                   GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS
*                                      FLAG                          */
         O     GPR01F,@CF00061                                     0994
*                   SVC(13);        /* ISSUE ABEND SVC               */
         SVC   13                                                  0995
*                   RESPECIFY                                      0996
*                    (GPR01F) UNRESTRICTED;                        0996
*                 END;              /* ABEND(200) DUMP QUIT RIGHT  0997
*                                      HERE                          */
*               ELSE                                               0998
*                 ;                                                0998
@RF00990 DS    0H                                                  0999
*               RETC=RF;            /* SAVE RETURN CODE              */
         LR    RETC,RF                                             0999
*               RESPECIFY                                          1000
*                 RF UNRESTRICTED;                                 1000
*               CALL MSG4(04044);   /* ERROR WRITING PROB DIRECTORY  */
         LA    @01,@AL01001                                        1001
         BAL   @14,MSG4                                            1001
*             END;                                                 1002
*           ELSE                                                   1003
*             ;                     /* NO PROBLEM                    */
@RF00988 DS    0H                                                  1004
*         END;                                                     1004
*       ELSE                                                       1005
*         CALL MSG4(04070);         /* RECORD NUMBER OVERFLOW        */
         B     @RC00962                                            1005
@RF00962 LA    @01,@AL01005                                        1005
         BAL   @14,MSG4                                            1005
*     END;                                                         1006
*   ELSE                                                           1007
*     ;                             /* CAME OUT EVEN WITH NOTHING  1007
*                                      LEFT OVER (THAT'S UNUSUAL!)   */
@RF00959 DS    0H                                                  1008
*   RETURN CODE(RETC);              /* ALL IS WELL                   */
@RC00959 LR    @15,RETC                                            1008
         L     @14,@SA00009                                        1008
         LM    @00,@12,@SA00009+8                                  1008
         BR    @14                                                 1008
         EJECT
*STEPLINE:                                                         1009
*   PROCEDURE;                                                     1009
STEPLINE STM   @14,@01,@SA00010                                    1009
         STM   @03,@12,@SA00010+16                                 1009
*   IF L^=J&I<DSCQL&DSCQ(I+1)^=' '&L^=1 THEN/* NOT BLANK?            */
         L     @04,L                                               1010
         L     @03,J                                               1010
         CR    @04,@03                                             1010
         BE    @RF01010                                            1010
         CH    I,DSCQL                                             1010
         BNL   @RF01010                                            1010
         L     @01,DSCQP                                           1010
         ALR   @01,I                                               1010
         CLI   DSCQ(@01),C' '                                      1010
         BE    @RF01010                                            1010
         C     @04,@CF00041                                        1010
         BE    @RF01010                                            1010
*     DO;                           /* PUT WORD IN NEXT LINE         */
*       I=I+L-J;                    /* BACK UP THE INPUT             */
         LR    @15,I                                               1012
         ALR   @15,@04                                             1012
         SLR   @15,@03                                             1012
         LR    I,@15                                               1012
*       DO L=L TO LENGTH(PDRDESC);  /* CLEAR PARTIAL WORD IN OUTPUT  */
         B     @DE01013                                            1013
@DL01013 DS    0H                                                  1014
*         PDRDESC(K,L)=' ';         /* BLANK IT OUT                  */
         L     @03,K                                               1014
         MH    @03,@CH01256                                        1014
         ALR   @03,@04                                             1014
         ALR   @03,DESBUFP                                         1014
         AL    @03,@CF01677                                        1014
         MVI   PDRDESC-16(@03),C' '                                1014
*       END;                        /* END OF BLANKING LOOP          */
         AL    @04,@CF00041                                        1015
         ST    @04,L                                               1015
@DE01013 C     @04,@CF01256                                        1015
         BNH   @DL01013                                            1015
*     END;                          /* ALL DONE                      */
*   ELSE                            /* NEXT CHARACTER IS BLANK OR    */
*     ;                             /* LAST CHARACTER IN LINE BLANK  */
@RF01010 DS    0H                                                  1018
*   L=1;                            /* RESET BLANK INDEX             */
         LA    @04,1                                               1018
         ST    @04,L                                               1018
*   J=1;                            /* SET INDEX TO FIRST BYTE OF  1019
*                                      LINE                          */
         ST    @04,J                                               1019
*   K=K+1;                          /* STEP INDEX TO NEXT LINE       */
         L     @03,K                                               1020
         ALR   @03,@04                                             1020
         ST    @03,K                                               1020
*   BUFPTR->PDRDESCL=BUFPTR->PDRDESCL+1;/* BUMP TOTAL LINE COUNT     */
         AL    @04,PDRDESCL(,BUFPTR)                               1021
         ST    @04,PDRDESCL(,BUFPTR)                               1021
*   IF K>PDRDEMAX THEN              /* IF RECORD IS FULL             */
         C     @03,@CF00142                                        1022
         BNH   @RF01022                                            1022
*     DO;                                                          1023
*       CALL WRITEIT;               /* FILL IT IN AND WRITE IT OUT   */
         BAL   @14,WRITEIT                                         1024
*       RESPECIFY                                                  1025
*         RF RESTRICTED;                                           1025
*       RETC=RF;                    /* SAVE RETURN CODE              */
         LR    RETC,RF                                             1026
*       RESPECIFY                                                  1027
*         RF UNRESTRICTED;                                         1027
*     END;                                                         1028
*   ELSE                                                           1029
*     ;                             /* RECORD NOT FULL               */
@RF01022 DS    0H                                                  1030
*   RETURN CODE(RETC);              /* ALL IS OK                     */
         LR    @15,RETC                                            1030
         L     @14,@SA00010                                        1030
         LM    @00,@01,@SA00010+8                                  1030
         LM    @03,@12,@SA00010+16                                 1030
         BR    @14                                                 1030
*   END STEPLINE;                   /* READY TO PROCESS NEXT LINE    */
         EJECT
*WRITEIT:                                                          1032
*   PROCEDURE;                                                     1032
WRITEIT  STM   @14,@12,@SA00011                                    1032
*   K=1;                            /* RESET LINE NUMBER             */
         LA    @06,1                                               1033
         ST    @06,K                                               1033
*   IF RNUM<10000 THEN                                             1034
         L     @04,RNUM                                            1034
         C     @04,@CF01617                                        1034
         BNL   @RF01034                                            1034
*     DO;                                                          1035
*       CVD(RNUM,PACKED);           /* CONVERT RSEQUENCE NUMBER TO   */
         CVD   @04,PACKED                                          1036
*       UNPK(PDRRECSQ,PACKED);      /* DECIMAL AND UNPACK IT         */
         UNPK  PDRRECSQ(4,DESBUFP),PACKED(8)                       1037
*       PDRRECSQ(LENGTH(PDRRECSQ))=PDRRECSQ(LENGTH(PDRRECSQ))×'0';/*
*                                      CORRECT THE ZONE OF LAST DIGIT*/
         OI    PDRRECSQ+3(DESBUFP),C'0'                            1038
*       RNUM=RNUM+1;                /* BUMP THE SEQUENCE NUMBER      */
*                                                                  1039
         ALR   @04,@06                                             1039
         ST    @04,RNUM                                            1039
*       /*************************************************************/
*       /*                                                           */
*       /* BLSPUT (ZZ1PDRP)                                          */
*       /* AREA(PDREC)RECLEN(LENGTH(PDREC)+PDRDEMAX*LENGTH(PDRDESC)) */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1040
*       DO;                         /* BLSPUT (ZZ1PDRP) AREA(PDREC)RE
*                                      CLEN(LENGTH(PDREC)+PDRDEMAX*LE
*                                      NGTH(PDRDESC))                */
*         RFY                                                      1041
*           GPR01P RSTD;                                           1041
*         GPR01P=ZZ1PDRP;           /* ADDRESS DMCB                  */
         L     @06,ZZ2ZZ1P(,ZZ2PTR)                                1042
         L     GPR01P,ZZ1PDRP(,@06)                                1042
*         RFY                                                      1043
*           DMCB BASED(GPR01P);                                    1043
*         IF((GPR01P&'FFFFFFF8'X)=GPR01P)&DMCBID='DMCB'/* VALID DMCB
*                                      ?                             */
*           THEN                                                   1044
         LR    @06,GPR01P                                          1044
         N     @06,@CF01531                                        1044
         CLR   @06,GPR01P                                          1044
         BNE   @RF01044                                            1044
         CLC   DMCBID(4,GPR01P),@CC01532                           1044
         BNE   @RF01044                                            1044
*           DO;                                                    1045
*             DMCBBUFP=ADDR(PDREC); /* PLACE BUFFER ADDRESS IN DMCB  */
         ST    DESBUFP,DMCBBUFP(,GPR01P)                           1046
*             DMCBORL=(LENGTH(PDREC)+PDRDEMAX*LENGTH(PDRDESC))&    1047
*                 '7FFFFFFF'X;      /* PLACE RECORD LENGTH IN DMCB   */
         MVC   DMCBORL(4,GPR01P),@CF01643                          1047
*             DMCBRQST=DMCBPUR;     /* INDICATE PUT REQUEST          */
         MVI   DMCBRQST(GPR01P),X'05'                              1048
*             CALL DMCBRI->DMCBDMGR;/* CALL BLSCRQST                 */
         L     @15,DMCBRI(,GPR01P)                                 1049
         BALR  @14,@15                                             1049
*           END;                                                   1050
*         ELSE                                                     1051
*           DO;                                                    1051
         B     @RC01044                                            1051
@RF01044 DS    0H                                                  1052
*             RFY                                                  1052
*              (GPR00F,                                            1052
*               GPR15F) RSTD;                                      1052
*             GPR00F=0;             /* INDICATE NO MESSAGE CHAIN     */
         SLR   GPR00F,GPR00F                                       1053
*             GPR15F=16;            /* INDICATE INVALID DMCB         */
         LA    GPR15F,16                                           1054
*             RFY                                                  1055
*              (GPR00F,                                            1055
*               GPR15F);                                           1055
*           END;                                                   1056
*         RFY                                                      1057
*           DMCB;                                                  1057
@RC01044 DS    0H                                                  1058
*         RFY                                                      1058
*           GPR01P;                                                1058
*       END;                        /* BLSPUT (ZZ1PDRP) AREA(PDREC)RE
*                                      CLEN(LENGTH(PDREC)+PDRDEMAX*LE
*                                      NGTH(PDRDESC)) WRITE OUT THE
*                                      RECORD                        */
*       RESPECIFY                                                  1060
*         RF RESTRICTED;                                           1060
*       IF RF^=0 THEN               /* IF RETURN CODE NOT ZERO       */
         LTR   RF,RF                                               1061
         BZ    @RF01061                                            1061
*         DO;                                                      1062
*           IF RF=16 THEN           /* IF INVALID DMCB               */
         C     RF,@CF00052                                         1063
         BNE   @RF01063                                            1063
*             DO;                   /* ABEND(200) DUMP               */
*               RESPECIFY                                          1065
*                (GPR01F) RESTRICTED;                              1065
*               GPR01F=200;         /* COMP CODE IN REG 1            */
         LA    GPR01F,200                                          1066
*               GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG */
         O     GPR01F,@CF00061                                     1067
*               SVC(13);            /* ISSUE ABEND SVC               */
         SVC   13                                                  1068
*               RESPECIFY                                          1069
*                (GPR01F) UNRESTRICTED;                            1069
*             END;                  /* ABEND(200) DUMP QUIT RIGHT  1070
*                                      HERE                          */
*           ELSE                                                   1071
*             ;                                                    1071
@RF01063 DS    0H                                                  1072
*           RETC=RF;                /* SAVE RETURN CODE              */
         LR    RETC,RF                                             1072
*           RESPECIFY                                              1073
*             RF UNRESTRICTED;                                     1073
*           CALL MSG4(04044);       /* ERROR WRITING PROB DIRECTORY  */
         LA    @01,@AL01074                                        1074
         BAL   @14,MSG4                                            1074
*         END;                                                     1075
*       ELSE                                                       1076
*         ;                         /* NO PROBLEM                    */
@RF01061 DS    0H                                                  1077
*     END;                                                         1077
*   ELSE                                                           1078
*     CALL MSG4(04070);             /* RECORD NUMBER OVERFLOW        */
         B     @RC01034                                            1078
@RF01034 LA    @01,@AL01078                                        1078
         BAL   @14,MSG4                                            1078
*   RETURN CODE(RETC);              /* ALL IS OK                     */
@RC01034 LR    @15,RETC                                            1079
         L     @14,@SA00011                                        1079
         LM    @00,@12,@SA00011+8                                  1079
         BR    @14                                                 1079
*   END WRITEIT;                    /* READY TO PROCESS NEXT RECORD  */
*   END DESLOCAL;                   /* ALL DONE                      */
         EJECT
*MSG4:                                                             1082
*   PROCEDURE(MSGNO);                                              1082
MSG4     STM   @14,@12,@SA00012                                    1082
         MVC   @PC00012(4),0(@01)                                  1082
*   DO;                             /* BLSDMSG                     1083
*                                      (ZZ2,MSGNO,DMCBMSG,BLSDMSGS)
*                                      ROUTE(BOTH)LIFO               */
*     CALL BLSDMSG0(ZZ2,MSGNO,DMCBMSG,BLSDMSGS,'10110000'B,0);/*   1084
*                                      BUILD MESSAGE                 */
         ST    ZZ2PTR,@AL00001                                     1084
         L     @06,@PC00012                                        1084
         ST    @06,@AL00001+4                                      1084
         L     @06,ZZ2ZZ1P(,ZZ2PTR)                                1084
         L     @06,ZZ1PDRP(,@06)                                   1084
         LA    @06,DMCBMSG(,@06)                                   1084
         ST    @06,@AL00001+8                                      1084
         L     @06,ZZ2MSGSP(,ZZ2PTR)                               1084
         ST    @06,@AL00001+12                                     1084
         LA    @06,@CB01589                                        1084
         ST    @06,@AL00001+16                                     1084
         LA    @06,@CF00046                                        1084
         ST    @06,@AL00001+20                                     1084
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               1084
         LA    @01,@AL00001                                        1084
         BALR  @14,@15                                             1084
*   END;                            /* BLSDMSG                     1085
*                                      (ZZ2,MSGNO,DMCBMSG,BLSDMSGS)
*                                      ROUTE(BOTH)LIFO               */
*   END MSG4;                                                      1086
*                                                                  1086
@EL00012 DS    0H                                                  1086
@EF00012 DS    0H                                                  1086
@ER00012 LM    @14,@12,@SA00012                                    1086
         BR    @14                                                 1086
*/********************************************************************/
*/*                                                                  */
*/* COMMAND PROCESSOR CODE ENDS                                      */
*/*                                                                  */
*/********************************************************************/
*                                                                  1087
         EJECT
*                                                                  1087
*/*BLSUPEND--MVS IPCS MODULE                                         */
*                                                                  1087
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                     1087
*     GPR01F FIXED(31) REG(1),                                     1087
*     GPR15F FIXED(31) REG(15),                                    1087
*     GPR01P PTR(31) REG(1);                                       1087
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       1088
*     I031F FIXED(31) BASED,                                       1088
*     I031P PTR(31) BASED,                                         1088
*     I015F FIXED(15) BASED,                                       1088
*     I015P PTR(15) BASED,                                         1088
*     I008P PTR(8) BASED,                                          1088
*     I001C CHAR(1) BASED;                                         1088
*   DECLARE                                                        1089
*     IOPTLIST(6) PTR(31) BDY(WORD);/* OPTION LIST ARRAY             */
*   GENERATE NODEFS NOREFS DATA;                                   1090
*   END                             /* BLRPEND                       */
*                                                                  1091
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (BLSUZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLRFULL )                                       */
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */
*/*%INCLUDE SYSLIB  (IKJPSCB )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJUPT  )                                       */
*/*%INCLUDE SYSLIB  (BLSUSERV)                                       */
*/*%INCLUDE SYSLIB  (BLRSERV )                                       */
*/*%INCLUDE SYSLIB  (BLRSERVD)                                       */
*/*%INCLUDE SYSLIB  (BLSDSERV)                                       */
*/*%INCLUDE SYSLIB  (BLSEMP  )                                       */
*/*%INCLUDE SYSLIB  (BLSPDR  )                                       */
*/*%INCLUDE SYSLIB  (BLSFP   )                                       */
*/*%INCLUDE SYSLIB  (BLSESTAT)                                       */
*                                                                  1091
*       ;                                                          1091
@EL00001 L     @13,4(,@13)                                         1091
@EF00001 L     @00,@SIZDATD                                        1091
         LR    @01,@11                                             1091
         BLSUFRER R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     1091
         BR    @14                                                 1091
@DATA    DS    0H
@CH00068 DC    H'2'
@CH00094 DC    H'3'
@CH00091 DC    H'5'
@SM01651 MVC   PDRKPID-1(0,@09),PIDI(@01)
@SM01655 MVC   PDRODATE(0,BUFPTR),DTEI(@04)
@SM01657 MVC   PDROTIME(0,BUFPTR),TMEI(@04)
@SM01659 MVC   PDRGROUP(0,BUFPTR),GRPI(@04)
@SM01661 MVC   PDRSYS(0,BUFPTR),SIDI(@04)
@SM01663 MVC   PDRCOMP(0,BUFPTR),CIDI(@04)
@SM01665 MVC   PDROWNID(0,BUFPTR),OWNI(@03)
@SM01667 MVC   PDRUSER(0,BUFPTR),UFLI(@04)
@SM01669 MVC   PDRAPRID(0,BUFPTR),APRI(@04)
@SM01671 MVC   PDRPTFID(0,BUFPTR),PTFI(@04)
@SM01673 MVC   PDRFIXID(0,BUFPTR),FIXQ(@04)
@SM01675 MVC   PDRABS(0,BUFPTR),ABSQ(@04)
         DS    0F
@AL00399 DC    A(@CF01525)             LIST WITH   1 ARGUMENT(S)
@AL00458 DC    A(@CF01537)             LIST WITH   1 ARGUMENT(S)
@AL00468 DC    A(@CF01539)             LIST WITH   1 ARGUMENT(S)
@AL00531 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00618 DC    A(@CF01549)             LIST WITH   1 ARGUMENT(S)
@AL00572 DC    A(@CF01556)             LIST WITH   1 ARGUMENT(S)
@AL00666 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00911 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01001 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01074 DC    A(@CF01573)             LIST WITH   1 ARGUMENT(S)
@AL00733 DC    A(@CF01590)             LIST WITH   1 ARGUMENT(S)
@AL01005 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01078 DC    A(@CF01619)             LIST WITH   1 ARGUMENT(S)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00012 DS    15F
@PC00012 DS    1F
@SA00002 DS    14F
@SA00003 DS    14F
@SA00004 DS    14F
@SA00007 DS    14F
@PC00007 DS    1F
@SA00005 DS    14F
@SA00006 DS    14F
@SA00008 DS    14F
@SA00009 DS    15F
@SA00010 DS    14F
@SA00011 DS    15F
@AL00001 DS    6A
@TF00001 DS    F
@AFTEMPS DS    2F
BLSEMDPR CSECT
         DS    0F
@CF00046 DC    F'0'
@CF00041 DC    F'1'
@CH00041 EQU   @CF00041+2
@CF00049 DC    F'8'
@CF01019 DC    F'9'
@CF00142 DC    F'13'
@CF01037 DC    F'14'
@CF00052 DC    F'16'
@CF01256 DC    F'72'
@CH01256 EQU   @CF01256+2
@CF01640 DC    F'416'
@CF01643 DC    F'952'
@CF00394 DC    F'1024'
@CF01588 DC    F'4000'
@CF01525 DC    F'4003'
@CF01602 DC    F'4004'
@CF01549 DC    F'4041'
@CF01537 DC    F'4042'
@CF01590 DC    F'4043'
@CF01573 DC    F'4044'
@CF01556 DC    F'4045'
@CF01539 DC    F'4069'
@CF01619 DC    F'4070'
@CF01617 DC    F'10000'
@CF01677 DC    F'-57'
@CF01580 DC    F'-1'
@CF00061 DC    XL4'80000000'
@CF01531 DC    XL4'FFFFFFF8'
@CF01548 DC    XL4'7FFFFFFF'
@DATD    DSECT
         DS    0D
PDAPTR   DS    A
J        DS    A
K        DS    A
L        DS    A
RNUM     DS    F
CURDATE  DS    CL8
CURTIME  DS    CL8
         DS    CL4
PACKED   DS    CL8
BUF1     DS    CL1024
BUF2     DS    CL1024
IOPTLIST DS    6A
BLSEMDPR CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV01369 DC    V(BLSDTIME)
@CV01370 DC    V(BLSEMDP1)
         DS    0D
PCPTR    DC    AL4(PC)
@CC00104 DC    C'000     '
@CC01526 DC    C'00000000'
@CC01532 DC    C'DMCB'
@CC01560 EQU   @CC01526
@CC01273 DC    C'ST'
@CC01275 DC    C'DE'
@CC01527 DC    C'E'
@CC01594 DC    C'O'
@CB01653 DC    X'00'
@CB01581 DC    B'00000000'
@CB01589 DC    B'10110000'
STATPROB DC    CL8'ACTIVE  '
         DC    CL8'CLAPAR  '
         DC    CL8'CLDUP   '
         DC    CL8'CLFIX   '
         DC    CL8'CLNTF   '
         DC    CL8'CLOTHER '
         DC    CL8'CLPTF   '
         DC    CL8'INACTIVE'
         DC    CL8'INITIAL '
STATIBM  DC    CL8'        '
         DC    CL8'ABY     '
         DC    CL8'ACK     '
         DC    CL8'APARED  '
         DC    CL8'CAN     '
         DC    CL8'DOC     '
         DC    CL8'DUA     '
         DC    CL8'DUB     '
         DC    CL8'DUU     '
         DC    CL8'MCH     '
         DC    CL8'PER     '
         DC    CL8'PRS     '
         DC    CL8'PSRR    '
         DC    CL8'REPORTED'
         DC    CL8'RET     '
         DC    CL8'ROP     '
         DC    CL8'SUG     '
         DC    CL8'UR1     '
         DC    CL8'UR2     '
         DC    CL8'UR3     '
         DC    CL8'UR4     '
         DC    CL8'UR5     '
         DC    CL8'USE     '
STATPTF  DC    CL4'    '
         DC    CL4'ACPT'
         DC    CL4'INST'
         DC    CL4'RCVD'
         DC    CL4'REJD'
         DC    CL4'RQST'
STATFIX  DC    CL4'    '
         DC    CL4'ACPT'
         DC    CL4'INST'
         DC    CL4'RCVD'
         DC    CL4'REJD'
         DC    CL4'RQST'
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSEMDPR CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSEMDPR+19)/20+7)/8)CL8'BLSEMDPR'
@DATD    DSECT
         SPACE 2
***********************************************************************
* IKJPARM--BEGIN MACROS SPECIFYING COMMAND SYNTAX                     *
***********************************************************************
         SPACE
BLSEMDPR CSECT
PC       IKJPARM DSECT=PD
@DATD    DSECT
BLSEMDPR CSECT
PROBWD   IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'PROBLEM',SUBFLD=PROBSUB
@DATD    DSECT
BLSEMDPR CSECT
DATEWD   IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'DATE',SUBFLD=DATESUB
@DATD    DSECT
BLSEMDPR CSECT
TIMEWD   IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'TIME',SUBFLD=TIMESUB
@DATD    DSECT
BLSEMDPR CSECT
GROUPWD  IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'GROUP',SUBFLD=GRPSUB
@DATD    DSECT
BLSEMDPR CSECT
SYSTEMWD IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'SYSTEM',SUBFLD=SIDSUB
@DATD    DSECT
BLSEMDPR CSECT
USERWD   IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'USER',SUBFLD=USESUB
@DATD    DSECT
BLSEMDPR CSECT
COMPIDWD IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'COMPID',SUBFLD=CIDSUB
@DATD    DSECT
BLSEMDPR CSECT
OWNERWD  IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'OWNER',SUBFLD=OWNSUB
@DATD    DSECT
BLSEMDPR CSECT
SEVWD    IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'SEVERITY',SUBFLD=SEVSUB
@DATD    DSECT
BLSEMDPR CSECT
PSTATWD  IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'PSTATUS',SUBFLD=PSTATSUB
@DATD    DSECT
BLSEMDPR CSECT
IBMSTWD  IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'IBMSTATUS',SUBFLD=IBMSTSUB
@DATD    DSECT
BLSEMDPR CSECT
PTFSTWD  IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'PTFSTATUS',SUBFLD=PTFSTSUB
@DATD    DSECT
BLSEMDPR CSECT
FIXSTWD  IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'FIXSTATUS',SUBFLD=FIXSTSUB
@DATD    DSECT
BLSEMDPR CSECT
APARWD   IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'APARID',SUBFLD=APARSUB
@DATD    DSECT
BLSEMDPR CSECT
PTFIDWD  IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'PTFID',SUBFLD=PTFSUB
@DATD    DSECT
BLSEMDPR CSECT
FIXWD    IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'FIXID',SUBFLD=FIXSUB
@DATD    DSECT
BLSEMDPR CSECT
ABSWD    IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'ABSTRACT',SUBFLD=ABSSUB
@DATD    DSECT
BLSEMDPR CSECT
DESCWD   IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'DESCRIPTION',SUBFLD=DESCSUB
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'DSDESCRIPTION',SUBFLD=DSDSUB
@DATD    DSECT
BLSEMDPR CSECT
DFTWD    IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'DEFAULT'
@DATD    DSECT
BLSEMDPR CSECT
PXTEST   IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'TEST'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'NOTEST'
@DATD    DSECT
BLSEMDPR CSECT
         SPACE
PROBSUB  IKJSUBF
@DATD    DSECT
BLSEMDPR CSECT
PID      IKJIDENT 'PROBLEM',UPPERCASE,FIRST=NUMERIC,MAXLNTH=5,OTHER=NUM*
               ERIC,PROMPT='PROBLEM NUMBER'
@DATD    DSECT
BLSEMDPR CSECT
         SPACE
DATESUB  IKJSUBF
@DATD    DSECT
BLSEMDPR CSECT
DTE      IKJIDENT 'DATE',UPPERCASE,FIRST=NUMERIC,MAXLNTH=8,OTHER=ANY,  *
               PROMPT='DATE OCCURRED - MM/DD/YY',VALIDCK=BLSDDT00
@DATD    DSECT
BLSEMDPR CSECT
         SPACE
TIMESUB  IKJSUBF
@DATD    DSECT
BLSEMDPR CSECT
TME      IKJIDENT 'TIME',UPPERCASE,FIRST=NUMERIC,MAXLNTH=8,OTHER=ANY,  *
               PROMPT='TIME OCCURRED - HH:MM:SS',VALIDCK=BLSDTM00
@DATD    DSECT
BLSEMDPR CSECT
         SPACE
GRPSUB   IKJSUBF
@DATD    DSECT
BLSEMDPR CSECT
GRP      IKJIDENT 'GROUP',UPPERCASE,FIRST=ALPHANUM,MAXLNTH=8,OTHER=ALPH*
               ANUM,PROMPT='GROUP ASSIGNED TO THIS PROBLEM'
@DATD    DSECT
BLSEMDPR CSECT
         SPACE
SIDSUB   IKJSUBF
@DATD    DSECT
BLSEMDPR CSECT
SID      IKJIDENT 'SYSTEM ID',UPPERCASE,FIRST=ALPHANUM,MAXLNTH=8,OTHER=*
               ALPHANUM,PROMPT='SYSTEM ID'
@DATD    DSECT
BLSEMDPR CSECT
         SPACE
USESUB   IKJSUBF
@DATD    DSECT
BLSEMDPR CSECT
UFL      IKJIDENT 'USER FIELD',UPPERCASE,FIRST=ALPHANUM,MAXLNTH=8,     *
               OTHER=ALPHANUM,PROMPT='USER FIELD'
@DATD    DSECT
BLSEMDPR CSECT
         SPACE
CIDSUB   IKJSUBF
@DATD    DSECT
BLSEMDPR CSECT
CID      IKJIDENT 'COMPONENT ID',UPPERCASE,FIRST=ANY,MAXLNTH=10,OTHER=A*
               NY,PROMPT='SUSPECTED FAILING COMPONENT ID'
@DATD    DSECT
BLSEMDPR CSECT
         SPACE
OWNSUB   IKJSUBF
@DATD    DSECT
BLSEMDPR CSECT
OWN      IKJIDENT 'OWNER',UPPERCASE,FIRST=ALPHA,MAXLNTH=7,OTHER=ALPHANU*
               M,PROMPT='OWNER OF THE PROBLEM'
@DATD    DSECT
BLSEMDPR CSECT
         SPACE
SEVSUB   IKJSUBF
@DATD    DSECT
BLSEMDPR CSECT
SEV      IKJIDENT 'SEVERITY',UPPERCASE,FIRST=NUMERIC,MAXLNTH=1,PROMPT='*
               SEVERITY ASSOCIATED WITH THIS PROBLEM',VALIDCK=BLSDSV00
@DATD    DSECT
BLSEMDPR CSECT
         SPACE
PSTATSUB IKJSUBF
@DATD    DSECT
BLSEMDPR CSECT
PSTTYPE  IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'ACTIVE'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'CLAPAR'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'CLDUP'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'CLFIX'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'CLNTF'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'CLOTHER'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'CLPTF'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'INACTIVE'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'INITIAL'
@DATD    DSECT
BLSEMDPR CSECT
         SPACE
IBMSTSUB IKJSUBF
@DATD    DSECT
BLSEMDPR CSECT
IBMFLDWD IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'NONE'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'ABY'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'ACK'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'APARED'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'CAN'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'DOC'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'DUA'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'DUB'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'DUU'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'MCH'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'PER'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'PRS'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'PSRR'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'REPORTED'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'RET'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'ROP'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'SUG'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'UR1'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'UR2'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'UR3'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'UR4'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'UR5'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'USE'
@DATD    DSECT
BLSEMDPR CSECT
         SPACE
PTFSTSUB IKJSUBF
@DATD    DSECT
BLSEMDPR CSECT
PTFFLDWD IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'NONE'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'ACPT'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'INST'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'RCVD'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'REJD'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'RQST'
@DATD    DSECT
BLSEMDPR CSECT
         SPACE
FIXSTSUB IKJSUBF
@DATD    DSECT
BLSEMDPR CSECT
FIXFLDWD IKJKEYWD
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'NONE'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'ACPT'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'INST'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'RCVD'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'REJD'
@DATD    DSECT
BLSEMDPR CSECT
         IKJNAME 'RQST'
@DATD    DSECT
BLSEMDPR CSECT
         SPACE
APARSUB  IKJSUBF
@DATD    DSECT
BLSEMDPR CSECT
APR      IKJIDENT 'APAR',UPPERCASE,FIRST=ALPHA,MAXLNTH=7,OTHER=NONATNUM*
               ,PROMPT='APAR IDENTIFIER ASSIGNED TO THIS PROBLEM',     *
               VALIDCK=BLSDC070
@DATD    DSECT
BLSEMDPR CSECT
         SPACE
PTFSUB   IKJSUBF
@DATD    DSECT
BLSEMDPR CSECT
PTF      IKJIDENT 'PTF',UPPERCASE,FIRST=ALPHA,MAXLNTH=7,OTHER=NONATNUM,*
               PROMPT='PTF IDENTIFIER ASSIGNED TO THIS PROBLEM',       *
               VALIDCK=BLSDC070
@DATD    DSECT
BLSEMDPR CSECT
         SPACE
FIXSUB   IKJSUBF
@DATD    DSECT
BLSEMDPR CSECT
FIX      IKJPOSIT QSTRING,UPPERCASE,PROMPT='FIX IDENTIFIER ASSIGNED TO *
               THIS PROBLEM',VALIDCK=BLSDC600
@DATD    DSECT
BLSEMDPR CSECT
         SPACE
ABSSUB   IKJSUBF
@DATD    DSECT
BLSEMDPR CSECT
ABS      IKJPOSIT QSTRING,UPPERCASE,HELP=('MAXIMUM 128 CHARACTERS AS QU*
               OTED TEXT'),PROMPT='ABSTRACT TEXT-128 CHARACTERS MAXIMUM*
               ',VALIDCK=BLSDC128
@DATD    DSECT
BLSEMDPR CSECT
         SPACE
DESCSUB  IKJSUBF
@DATD    DSECT
BLSEMDPR CSECT
DSC      IKJPOSIT QSTRING,UPPERCASE,HELP=('ENTERED AS QUOTED TEXT'),   *
               PROMPT='DESCRIPTION TEXT'
@DATD    DSECT
BLSEMDPR CSECT
         SPACE
DSDSUB   IKJSUBF
@DATD    DSECT
BLSEMDPR CSECT
DDS      IKJPOSIT DSNAME,USID,UPPERCASE,PROMPT='DATA SET NAME CONTAININ*
               G DESCRIPTION'
@DATD    DSECT
PD       DSECT
LISTEND  DS    0C
BLSEMDPR CSECT
         IKJENDP
         SPACE 2
***********************************************************************
* IKJENDP--END SYNTAX DESCRIPTION                                     *
***********************************************************************
         SPACE
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSEMDPR CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
I        EQU   @02
DESBUFP  EQU   @09
AUTHSW   EQU   @02
SRETC    EQU   @09
RETC     EQU   @08
BUFPTR   EQU   @06
ZZ2PTR   EQU   @07
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R9       EQU   @09
RB       EQU   @11
RD       EQU   @13
RE       EQU   @14
RF       EQU   @15
PDRPTR   EQU   @05
GPR15F   EQU   @15
GPR01P   EQU   @01
GPR00F   EQU   @00
GPR01F   EQU   @01
RA       EQU   @10
RC       EQU   @12
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
ZZ1      EQU   0
ZZ1ZZ2P  EQU   ZZ1+36
ZZ1PDRP  EQU   ZZ1+40
ZZ1FPP   EQU   ZZ1+140
ZZ1ATTN  EQU   ZZ1+360
ZZ1EVE   EQU   ZZ1ATTN+4
ZZ1F     EQU   ZZ1+368
ZZ1N     EQU   ZZ1+1116
ZZ2      EQU   0
ZZ2AMD   EQU   ZZ2
@NM00013 EQU   ZZ2AMD+7
ZZ2PRT   EQU   ZZ2+138
ZZ2PRTT  EQU   ZZ2PRT+4
ZZ2PRTT1 EQU   ZZ2PRTT+1
ZZ2A     EQU   ZZ2+272
ZZ2AF    EQU   ZZ2A+16
ZZ2AFX   EQU   ZZ2AF+5
ZZ2APID  EQU   ZZ2A+64
ZZ2AD    EQU   ZZ2A+74
ZZ2ADD   EQU   ZZ2AD
ZZ2ADDT  EQU   ZZ2ADD+2
ZZ2ADM   EQU   ZZ2AD+46
ZZ2ADMT  EQU   ZZ2ADM+2
ZZ2ADP   EQU   ZZ2AD+56
ZZ2ADPT  EQU   ZZ2ADP+2
ZZ2AQAS  EQU   ZZ2A+144
ZZ2AQD   EQU   ZZ2A+160
ZZ2AQDT  EQU   ZZ2AQD+10
ZZ2AQDF  EQU   ZZ2AQD+52
ZZ2STG   EQU   ZZ2+960
ZZ2ALLOP EQU   ZZ2+992
ZZ2FREEP EQU   ZZ2+996
ZZ2FF19P EQU   ZZ2+1000
ZZ2FRE1P EQU   ZZ2+1004
ZZ2FF18P EQU   ZZ2+1008
ZZ2DYNAP EQU   ZZ2+1012
ZZ2ZZ2CP EQU   ZZ2+1016
ZZ2ZZ2DP EQU   ZZ2+1020
ZZ2STAIP EQU   ZZ2+1024
ZZ2FF02P EQU   ZZ2+1028
ZZ2GETLP EQU   ZZ2+1032
ZZ2PARSP EQU   ZZ2+1036
ZZ2PTGTP EQU   ZZ2+1040
ZZ2PUTLP EQU   ZZ2+1044
ZZ2SCANP EQU   ZZ2+1048
ZZ2STCKP EQU   ZZ2+1052
ZZ2ALOCP EQU   ZZ2+1056
ZZ2MSGSP EQU   ZZ2+1060
ZZ2TRMOP EQU   ZZ2+1064
ZZ2TRMVP EQU   ZZ2+1068
ZZ2MSG0P EQU   ZZ2+1076
ZZ2PUTNP EQU   ZZ2+1084
ZZ2TRMNP EQU   ZZ2+1088
ZZ2ENQ0P EQU   ZZ2+1092
ZZ2ADSDP EQU   ZZ2+1096
ZZ2APDRP EQU   ZZ2+1100
ZZ2FDSDP EQU   ZZ2+1104
ZZ2FPDRP EQU   ZZ2+1108
ZZ2ZZ1P  EQU   ZZ2+1264
ZZ2DVTP  EQU   ZZ2+1276
ZZ2BVTP  EQU   ZZ2+1280
ZZ2CPPL  EQU   ZZ2+1292
ZZ2CPPLC EQU   ZZ2CPPL
ZZ2ITR   EQU   ZZ2+2840
ZZ2ITRE  EQU   ZZ2ITR+16
ZZ2ITSE  EQU   ZZ2+2864
ZZ2ES    EQU   ZZ2+2872
ZZ2AMDX  EQU   ZZ2+7160
ZZ2AXO   EQU   ZZ2+7934
ZZ2AXOT  EQU   ZZ2AXO+2
CMD      EQU   0
CMDT     EQU   CMD+4
PSCB     EQU   0
PSCBATR1 EQU   PSCB+16
ECT      EQU   0
ECTSWS   EQU   ECT+28
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
UPT      EQU   0
UPTSWS   EQU   UPT+12
SA       EQU   0
SA1      EQU   SA
SAR      EQU   SA+12
BLSUPARI EQU   0
BVT      EQU   0
BVTPUTLP EQU   BVT+4
BVTPUTOP EQU   BVT+12
BVTPUTTP EQU   BVT+16
BVTPUTVP EQU   BVT+20
BVTPUTAP EQU   BVT+24
BVTPRTTP EQU   BVT+28
BVTPRTAP EQU   BVT+32
BVTPUTDP EQU   BVT+36
BVTMONP  EQU   BVT+40
BVTMON2P EQU   BVT+44
BVTVSARP EQU   BVT+48
BVTVSENP EQU   BVT+64
BVTVSERP EQU   BVT+68
BVTVSGEP EQU   BVT+72
BVTVSGUP EQU   BVT+76
BVTVSPOP EQU   BVT+80
BVTVSPUP EQU   BVT+84
BVTMPKNP EQU   BVT+104
BVTMONLP EQU   BVT+108
BVTPUTCP EQU   BVT+132
BVTMPK1P EQU   BVT+136
BVTZZ2RP EQU   BVT+140
BVTPGMRP EQU   BVT+144
BVTMONAP EQU   BVT+148
BVTBLDDP EQU   BVT+152
BVTBLDLP EQU   BVT+156
BVTPGMCP EQU   BVT+160
BVTPGMDP EQU   BVT+164
BVTPGMLP EQU   BVT+168
BVTMONCP EQU   BVT+180
BVTMONDP EQU   BVT+184
BVTMONTP EQU   BVT+188
BVTPARIP EQU   BVT+192
BVTPARUP EQU   BVT+196
BVTPRTNP EQU   BVT+204
BVTVSCRP EQU   BVT+208
BVTVSMRP EQU   BVT+212
BVTMONXP EQU   BVT+216
BVTTRMAP EQU   BVT+228
BLSDDEQP EQU   0
BLSDENQP EQU   0
BLSDMSGS EQU   0
BLSDMSG0 EQU   0
BLSEAUTH EQU   0
DVT      EQU   0
DVTDEQPP EQU   DVT+8
DVTENQPP EQU   DVT+12
DVTAUTHP EQU   DVT+20
DVTLPCLP EQU   DVT+24
DVTBP00P EQU   DVT+28
DVTCN00P EQU   DVT+32
DVTDF00P EQU   DVT+36
DVTDS00P EQU   DVT+44
DVTFL00P EQU   DVT+48
DVTFP00P EQU   DVT+52
DVTGD00P EQU   DVT+56
DVTGG00P EQU   DVT+60
DVTGP00P EQU   DVT+64
DVTND00P EQU   DVT+68
DVTND01P EQU   DVT+72
DVTOD00P EQU   DVT+76
DVTPS00P EQU   DVT+80
DVTSD00P EQU   DVT+84
DVTSL00P EQU   DVT+88
DVTTL00P EQU   DVT+92
DVTUD00P EQU   DVT+96
DVTUP00P EQU   DVT+100
DVTLP00P EQU   DVT+104
DVTLALLP EQU   DVT+108
DVTLPFMP EQU   DVT+112
DVTCLOSP EQU   DVT+116
DVTOPENP EQU   DVT+120
DVTPERAP EQU   DVT+124
DVTDALLP EQU   DVT+128
PCCSECT  EQU   0
PDDSECT  EQU   0
PDXP     EQU   PDDSECT+1
PDL      EQU   PDDSECT+5
PIDI     EQU   0
DTEI     EQU   0
TMEI     EQU   0
GRPI     EQU   0
SIDI     EQU   0
UFLI     EQU   0
CIDI     EQU   0
OWNI     EQU   0
SEVI     EQU   0
APRI     EQU   0
PTFI     EQU   0
FIXQ     EQU   0
ABSQ     EQU   0
DSCQ     EQU   0
PDREC    EQU   0
PDRKEY   EQU   PDREC
PDRGRP   EQU   PDRKEY
PDRKRCTY EQU   PDRGRP
PDRKPID  EQU   PDRGRP+2
PDRKPREF EQU   PDRKPID
PDRKPNUM EQU   PDRKPID+3
PDRRECSQ EQU   PDRKEY+10
PDRINFO  EQU   PDREC+16
FPBLOK   EQU   0
FPPIDP   EQU   FPBLOK+96
FPDBPIDP EQU   FPBLOK+100
FPADMNM  EQU   FPBLOK+120
FPDELNM  EQU   FPBLOK+128
MYBUF    EQU   0
DMCB     EQU   0
DMCBID   EQU   DMCB
DMCBFTY  EQU   DMCB+20
DMCBOPN  EQU   DMCB+21
DMCBRQST EQU   DMCB+22
DMCBRMOD EQU   DMCB+23
DMCBOUT  EQU   DMCBRMOD
DMCBTMP  EQU   DMCBOUT
DMCBRM6  EQU   DMCBRMOD
DMCBRM5  EQU   DMCBRMOD
DMCBOPTS EQU   DMCB+24
DMCBKYD  EQU   DMCBOPTS
DMCBGKY  EQU   DMCBOPTS
DMCBAPX  EQU   DMCBOPTS
DMCBUPD  EQU   DMCBOPTS
DMCBMFLG EQU   DMCB+28
DMCBBUFP EQU   DMCB+32
DMCBBLEN EQU   DMCB+36
DMCBORL  EQU   DMCB+40
DMCBKEYP EQU   DMCB+44
DMCBKEYL EQU   DMCB+48
DMCBMSG  EQU   DMCB+52
DMCBRI   EQU   DMCB+64
DMCBACBE EQU   DMCB+124
DMCBSPEC EQU   DMCB+380
DMCBAMS  EQU   DMCB+416
DMCBAUDT EQU   DMCB+568
DMCBLSCP EQU   DMCBAUDT+16
DMCBDMGR EQU   0
I015F    EQU   0
BLSCALOC EQU   0
BLSDADSD EQU   0
BLSDAPDR EQU   0
BLSDENQ0 EQU   0
BLSDFDSD EQU   0
BLSDFPDR EQU   0
BLSELPCL EQU   0
BLSELPFM EQU   0
BLSFBP00 EQU   0
BLSFCLOS EQU   0
BLSFCN00 EQU   0
BLSFDALL EQU   0
BLSFDF00 EQU   0
BLSFDS00 EQU   0
BLSFFL00 EQU   0
BLSFFP00 EQU   0
BLSFGD00 EQU   0
BLSFGG00 EQU   0
BLSFGP00 EQU   0
BLSFLALL EQU   0
BLSFLP00 EQU   0
BLSFND00 EQU   0
BLSFND01 EQU   0
BLSFOD00 EQU   0
BLSFOPEN EQU   0
BLSFPERA EQU   0
BLSFPS00 EQU   0
BLSFSD00 EQU   0
BLSFSL00 EQU   0
BLSFTL00 EQU   0
BLSFUD00 EQU   0
BLSFUP00 EQU   0
BLSUALLO EQU   0
BLSUBLDD EQU   0
BLSUBLDL EQU   0
BLSUDYNA EQU   0
BLSUFREE EQU   0
BLSUFRE1 EQU   0
BLSUMON  EQU   0
BLSUMONA EQU   0
BLSUMONC EQU   0
BLSUMOND EQU   0
BLSUMONL EQU   0
BLSUMONT EQU   0
BLSUMONX EQU   0
BLSUMON2 EQU   0
BLSUMPKN EQU   0
BLSUMPK1 EQU   0
BLSUPARU EQU   0
BLSUPGMC EQU   0
BLSUPGMD EQU   0
BLSUPGML EQU   0
BLSUPGMR EQU   0
BLSUPRTA EQU   0
BLSUPRTN EQU   0
BLSUPRTT EQU   0
BLSUPUTA EQU   0
BLSUPUTC EQU   0
BLSUPUTD EQU   0
BLSUPUTL EQU   0
BLSUPUTN EQU   0
BLSUPUTO EQU   0
BLSUPUTT EQU   0
BLSUPUTV EQU   0
BLSUSTAI EQU   0
BLSUTRMA EQU   0
BLSUTRMN EQU   0
BLSUTRMO EQU   0
BLSUTRMV EQU   0
BLSUVSAR EQU   0
BLSUVSCR EQU   0
BLSUVSEN EQU   0
BLSUVSER EQU   0
BLSUVSGE EQU   0
BLSUVSGU EQU   0
BLSUVSMR EQU   0
BLSUVSPO EQU   0
BLSUVSPU EQU   0
BLSUZZ2C EQU   0
BLSUZZ2D EQU   0
BLSUZZ2R EQU   0
DDSD     EQU   0
DDSM     EQU   0
DDSP     EQU   0
DMCBRQC  EQU   0
IKJEFF02 EQU   0
IKJEFF18 EQU   0
IKJEFF19 EQU   0
IKJGETL  EQU   0
IKJPARS  EQU   0
IKJPTGT  EQU   0
IKJPUTL  EQU   0
IKJSCAN  EQU   0
IKJSTCK  EQU   0
I001C    EQU   0
I008P    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
PIDIP    EQU   PID
PIDIL    EQU   PID+4
PIDIF    EQU   PID+6
PIDIFP   EQU   PIDIF
DTEIP    EQU   DTE
DTEIL    EQU   DTE+4
DTEIF    EQU   DTE+6
DTEIFP   EQU   DTEIF
TMEIP    EQU   TME
TMEIL    EQU   TME+4
TMEIF    EQU   TME+6
TMEIFP   EQU   TMEIF
GRPIP    EQU   GRP
GRPIL    EQU   GRP+4
GRPIF    EQU   GRP+6
GRPIFP   EQU   GRPIF
SIDIP    EQU   SID
SIDIL    EQU   SID+4
SIDIF    EQU   SID+6
SIDIFP   EQU   SIDIF
UFLIP    EQU   UFL
UFLIL    EQU   UFL+4
UFLIF    EQU   UFL+6
UFLIFP   EQU   UFLIF
CIDIP    EQU   CID
CIDIL    EQU   CID+4
CIDIF    EQU   CID+6
CIDIFP   EQU   CIDIF
OWNIP    EQU   OWN
OWNIL    EQU   OWN+4
OWNIF    EQU   OWN+6
OWNIFP   EQU   OWNIF
SEVIP    EQU   SEV
SEVIF    EQU   SEV+6
SEVIFP   EQU   SEVIF
APRIP    EQU   APR
APRIL    EQU   APR+4
APRIF    EQU   APR+6
APRIFP   EQU   APRIF
PTFIP    EQU   PTF
PTFIL    EQU   PTF+4
PTFIF    EQU   PTF+6
PTFIFP   EQU   PTFIF
FIXQP    EQU   FIX
FIXQL    EQU   FIX+4
FIXQF    EQU   FIX+6
FIXQFP   EQU   FIXQF
ABSQP    EQU   ABS
ABSQL    EQU   ABS+4
ABSQF    EQU   ABS+6
ABSQFP   EQU   ABSQF
DSCQP    EQU   DSC
DSCQL    EQU   DSC+4
DSCQF    EQU   DSC+6
DSCQFP   EQU   DSCQF
DDSDP    EQU   DDS
DDSDF    EQU   DDS+6
DDSDFP   EQU   DDSDF
DDSMP    EQU   DDS+8
DDSMF    EQU   DDS+14
DDSPP    EQU   DDS+16
DDSPF    EQU   DDS+22
BUF      EQU   0
MSGNO    EQU   0
CPPL     EQU   ZZ2CPPL
CPPLUPT  EQU   CPPL+4
CPPLPSCB EQU   CPPL+8
CPPLECT  EQU   CPPL+12
PDRSTREC EQU   PDRINFO
PDRODATE EQU   PDRSTREC
PDROTIME EQU   PDRSTREC+8
PDRCOMP  EQU   PDRSTREC+16
PDRSEV   EQU   PDRSTREC+26
PDROWNNM EQU   PDRSTREC+32
PDROWNID EQU   PDROWNNM
PDROWNLN EQU   PDROWNNM+7
PDRGROUP EQU   PDRSTREC+40
PDRSYS   EQU   PDRSTREC+48
PDRUSER  EQU   PDRSTREC+56
PDRPSTAT EQU   PDRSTREC+64
PDRPDATE EQU   PDRSTREC+72
PDRPTIME EQU   PDRSTREC+80
PDRISTAT EQU   PDRSTREC+104
PDRIDATE EQU   PDRSTREC+112
PDRITIME EQU   PDRSTREC+120
PDRAPRID EQU   PDRSTREC+128
PDRTSTAT EQU   PDRSTREC+140
PDRTDATE EQU   PDRSTREC+144
PDRTTIME EQU   PDRSTREC+152
PDRPTFID EQU   PDRSTREC+160
PDRFSTAT EQU   PDRSTREC+172
PDRFDATE EQU   PDRSTREC+176
PDRFTIME EQU   PDRSTREC+184
PDRFIXID EQU   PDRSTREC+192
PDRABS   EQU   PDRSTREC+256
PDRDESCL EQU   PDRSTREC+384
PDRDEREC EQU   PDRINFO
PDRDESCR EQU   PDRDEREC
PDRDESC  EQU   PDRDESCR
PDRTRREC EQU   PDRINFO
PDRTRARR EQU   PDRTRREC
PDRHSREC EQU   PDRINFO
PDRDSREC EQU   PDRINFO
PDRDSNM  EQU   PDRDSREC
PDRSVALU EQU   PDRODATE
DMCBVSM  EQU   DMCBAMS
DMCBQSM  EQU   DMCBAMS
*                                      START UNREFERENCED COMPONENTS
DMCBRES7 EQU   DMCBQSM+96
DMCBDCB  EQU   DMCBQSM
DMCBACB  EQU   DMCBVSM+76
DMCBRPL  EQU   DMCBVSM
PDRSVNUM EQU   PDRSVALU+3
PDRSVRES EQU   PDRSVALU
PDRDSRES EQU   PDRDSREC+52
PDRMEMB  EQU   PDRDSNM+44
PDRDSN   EQU   PDRDSNM
PDRHYMSD EQU   PDRHSREC+4
PDRHSLEN EQU   PDRHSREC
PDRTRKD  EQU   PDRTRARR
PDRDSSEQ EQU   PDRSTREC+396
PDRRES6  EQU   PDRSTREC+392
PDRTRKL  EQU   PDRSTREC+388
PDRRES5  EQU   PDRSTREC+252
PDRRES4  EQU   PDRSTREC+167
PDRRES3  EQU   PDRSTREC+135
PDRRTIME EQU   PDRSTREC+96
PDRRDATE EQU   PDRSTREC+88
PDRRES1  EQU   PDRSTREC+27
CPPLCBUF EQU   CPPL
@NM00102 EQU   DDS+24
@NM00101 EQU   DDS+23
DDSPF8   EQU   DDSPF
DDSPF7   EQU   DDSPF
DDSPF6   EQU   DDSPF
DDSPF5   EQU   DDSPF
DDSPF4   EQU   DDSPF
DDSPF3   EQU   DDSPF
DDSPF2   EQU   DDSPF
DDSPFP   EQU   DDSPF
DDSPL    EQU   DDS+20
@NM00100 EQU   DDS+15
DDSMF8   EQU   DDSMF
DDSMF7   EQU   DDSMF
DDSMF6   EQU   DDSMF
DDSMF5   EQU   DDSMF
DDSMF4   EQU   DDSMF
DDSMF3   EQU   DDSMF
DDSMF2   EQU   DDSMF
DDSMFP   EQU   DDSMF
DDSML    EQU   DDS+12
@NM00099 EQU   DDS+7
@NM00098 EQU   DDSDF
DDSDFQ   EQU   DDSDF
DDSDL    EQU   DDS+4
@NM00097 EQU   DSC+8
@NM00096 EQU   DSC+7
DSCQF8   EQU   DSCQF
DSCQF7   EQU   DSCQF
DSCQF6   EQU   DSCQF
DSCQF5   EQU   DSCQF
DSCQF4   EQU   DSCQF
DSCQF3   EQU   DSCQF
DSCQF2   EQU   DSCQF
@NM00095 EQU   ABS+8
@NM00094 EQU   ABS+7
ABSQF8   EQU   ABSQF
ABSQF7   EQU   ABSQF
ABSQF6   EQU   ABSQF
ABSQF5   EQU   ABSQF
ABSQF4   EQU   ABSQF
ABSQF3   EQU   ABSQF
ABSQF2   EQU   ABSQF
@NM00093 EQU   FIX+8
@NM00092 EQU   FIX+7
FIXQF8   EQU   FIXQF
FIXQF7   EQU   FIXQF
FIXQF6   EQU   FIXQF
FIXQF5   EQU   FIXQF
FIXQF4   EQU   FIXQF
FIXQF3   EQU   FIXQF
FIXQF2   EQU   FIXQF
@NM00091 EQU   PTF+8
@NM00090 EQU   PTF+7
PTFIF8   EQU   PTFIF
PTFIF7   EQU   PTFIF
PTFIF6   EQU   PTFIF
PTFIF5   EQU   PTFIF
PTFIF4   EQU   PTFIF
PTFIF3   EQU   PTFIF
PTFIF2   EQU   PTFIF
@NM00089 EQU   APR+8
@NM00088 EQU   APR+7
APRIF8   EQU   APRIF
APRIF7   EQU   APRIF
APRIF6   EQU   APRIF
APRIF5   EQU   APRIF
APRIF4   EQU   APRIF
APRIF3   EQU   APRIF
APRIF2   EQU   APRIF
@NM00087 EQU   SEV+8
@NM00086 EQU   SEV+7
SEVIF8   EQU   SEVIF
SEVIF7   EQU   SEVIF
SEVIF6   EQU   SEVIF
SEVIF5   EQU   SEVIF
SEVIF4   EQU   SEVIF
SEVIF3   EQU   SEVIF
SEVIF2   EQU   SEVIF
SEVIL    EQU   SEV+4
@NM00085 EQU   OWN+8
@NM00084 EQU   OWN+7
OWNIF8   EQU   OWNIF
OWNIF7   EQU   OWNIF
OWNIF6   EQU   OWNIF
OWNIF5   EQU   OWNIF
OWNIF4   EQU   OWNIF
OWNIF3   EQU   OWNIF
OWNIF2   EQU   OWNIF
@NM00083 EQU   CID+8
@NM00082 EQU   CID+7
CIDIF8   EQU   CIDIF
CIDIF7   EQU   CIDIF
CIDIF6   EQU   CIDIF
CIDIF5   EQU   CIDIF
CIDIF4   EQU   CIDIF
CIDIF3   EQU   CIDIF
CIDIF2   EQU   CIDIF
@NM00081 EQU   UFL+8
@NM00080 EQU   UFL+7
UFLIF8   EQU   UFLIF
UFLIF7   EQU   UFLIF
UFLIF6   EQU   UFLIF
UFLIF5   EQU   UFLIF
UFLIF4   EQU   UFLIF
UFLIF3   EQU   UFLIF
UFLIF2   EQU   UFLIF
@NM00079 EQU   SID+8
@NM00078 EQU   SID+7
SIDIF8   EQU   SIDIF
SIDIF7   EQU   SIDIF
SIDIF6   EQU   SIDIF
SIDIF5   EQU   SIDIF
SIDIF4   EQU   SIDIF
SIDIF3   EQU   SIDIF
SIDIF2   EQU   SIDIF
@NM00077 EQU   GRP+8
@NM00076 EQU   GRP+7
GRPIF8   EQU   GRPIF
GRPIF7   EQU   GRPIF
GRPIF6   EQU   GRPIF
GRPIF5   EQU   GRPIF
GRPIF4   EQU   GRPIF
GRPIF3   EQU   GRPIF
GRPIF2   EQU   GRPIF
@NM00075 EQU   TME+8
@NM00074 EQU   TME+7
TMEIF8   EQU   TMEIF
TMEIF7   EQU   TMEIF
TMEIF6   EQU   TMEIF
TMEIF5   EQU   TMEIF
TMEIF4   EQU   TMEIF
TMEIF3   EQU   TMEIF
TMEIF2   EQU   TMEIF
@NM00073 EQU   DTE+8
@NM00072 EQU   DTE+7
DTEIF8   EQU   DTEIF
DTEIF7   EQU   DTEIF
DTEIF6   EQU   DTEIF
DTEIF5   EQU   DTEIF
DTEIF4   EQU   DTEIF
DTEIF3   EQU   DTEIF
DTEIF2   EQU   DTEIF
@NM00071 EQU   PID+8
@NM00070 EQU   PID+7
PIDIF8   EQU   PIDIF
PIDIF7   EQU   PIDIF
PIDIF6   EQU   PIDIF
PIDIF5   EQU   PIDIF
PIDIF4   EQU   PIDIF
PIDIF3   EQU   PIDIF
PIDIF2   EQU   PIDIF
DMCBWRK  EQU   DMCB+648
DMCBRES8 EQU   DMCB+640
DMCBMODN EQU   DMCB+632
DMCBCARY EQU   DMCBAUDT+20
DMCBCLC  EQU   DMCBAUDT+12
DMCBOPC  EQU   DMCBAUDT+8
DMCBFRC  EQU   DMCBAUDT+4
DMCBALC  EQU   DMCBAUDT
DMCBFR   EQU   DMCB+412
DMCBRES6 EQU   DMCB+410
DMCBIRSC EQU   DMCB+408
DMCBSUBC EQU   DMCB+404
DMCBDRBP EQU   DMCB+400
DMCBRSZM EQU   DMCB+398
DMCBRSZA EQU   DMCB+396
DMCBCISZ EQU   DMCB+394
DMCBDCBL EQU   DMCB+392
DMCBDCLR EQU   DMCB+390
DMCBDCFM EQU   DMCB+389
DMCBRES5 EQU   DMCB+388
DMCBLBRT EQU   DMCB+386
DMCBLBSQ EQU   DMCB+384
DMCBLBPS EQU   DMCB+383
DMCBLBTY EQU   DMCB+382
DMCBRES4 EQU   DMCB+381
DMCBSPRS EQU   DMCBSPEC
DMCBSPRN EQU   DMCBSPEC
DMCBSPCT EQU   DMCBSPEC
DMCBSPRL EQU   DMCBSPEC
DMCBSPSE EQU   DMCB+376
DMCBSPPR EQU   DMCB+372
DMCBSPTY EQU   DMCB+369
DMCBODIS EQU   DMCB+368
DMCBDISP EQU   DMCB+367
DMCBSTAT EQU   DMCB+366
DMCBRES3 EQU   DMCB+364
DMCBMEMB EQU   DMCB+356
DMCBMODL EQU   DMCB+348
DMCBRES9 EQU   DMCB+340
DMCBPID  EQU   DMCB+332
DMCBTYPE EQU   DMCB+328
DMCBDSN  EQU   DMCB+284
DMCBUNIT EQU   DMCB+276
DMCBDSOR EQU   DMCB+274
DMCBVOL  EQU   DMCB+268
DMCBDDNM EQU   DMCB+260
DMCBSYNM EQU   DMCB+132
DMCBRPLF EQU   DMCB+128
DMCBDCBE EQU   DMCBACBE
DMCBARC  EQU   DMCB+120
DMCBCPC  EQU   DMCB+116
DMCBRET  EQU   DMCB+112
DMCBSTL  EQU   DMCB+96
DMCBEOB  EQU   DMCB+92
DMCBFRE  EQU   DMCB+88
DMCBRES2 EQU   DMCB+85
DMCBSPID EQU   DMCB+84
DMCBRESC EQU   DMCB+80
DMCBZZ1P EQU   DMCB+76
DMCBMSGS EQU   DMCB+72
DMCBMSG0 EQU   DMCB+68
DMCBRRL  EQU   DMCB+60
DMCBRBA  EQU   DMCB+56
DMCBKPC  EQU   DMCBKEYP
DMCBBFPC EQU   DMCBBUFP
DMCBRES1 EQU   DMCB+31
DMCBACCM EQU   DMCB+30
DMCBREJ  EQU   DMCB+29
DMCBRESB EQU   DMCBMFLG
DMCBFMOD EQU   DMCBMFLG
DMCBLOPT EQU   DMCB+27
DMCBLRM  EQU   DMCB+26
DMCBLRQ  EQU   DMCB+25
DMCBOPRS EQU   DMCBOPTS
DMCBLRD  EQU   DMCBOPTS
DMCBBWD  EQU   DMCBOPTS
DMCBRNO  EQU   DMCBGKY
DMCBRMRS EQU   DMCBRMOD
DMCBRESA EQU   DMCBOPN
DMCBSOUT EQU   DMCBOPN
DMCBSIN  EQU   DMCBOPN
DMCBVSF  EQU   DMCBFTY
DMCBKSF  EQU   DMCBFTY
DMCBFTRS EQU   DMCBFTY
DMCBSHF  EQU   DMCBFTY
DMCBIRL  EQU   DMCB+16
DMCBRTC  EQU   DMCB+12
DMCBTVP  EQU   DMCB+8
DMCBNEXT EQU   DMCB+4
FPRES6   EQU   FPBLOK+136
FPDELLN  EQU   FPDELNM+7
FPDELID  EQU   FPDELNM
FPADMLN  EQU   FPADMNM+7
FPADMID  EQU   FPADMNM
FPGRPID  EQU   FPBLOK+112
FPSYSID  EQU   FPBLOK+104
FPRES4   EQU   FPBLOK+103
FPRES3   EQU   FPBLOK+99
FPRES2   EQU   FPBLOK+92
FPDSDS   EQU   FPBLOK+48
FPRES1   EQU   FPBLOK+44
FPPDDS   EQU   FPBLOK
PDRRESV  EQU   PDREC+14
PDSP     EQU   PDDSECT+4
@NM00069 EQU   PDDSECT
DVT99999 EQU   DVT+256
DVT0064P EQU   DVT+252
DVT0063P EQU   DVT+248
DVT0062P EQU   DVT+244
DVT0061P EQU   DVT+240
DVT0060P EQU   DVT+236
DVT0059P EQU   DVT+232
DVT0058P EQU   DVT+228
DVT0057P EQU   DVT+224
DVT0056P EQU   DVT+220
DVT0055P EQU   DVT+216
DVT0054P EQU   DVT+212
DVT0053P EQU   DVT+208
DVT0052P EQU   DVT+204
DVT0051P EQU   DVT+200
DVT0050P EQU   DVT+196
DVT0049P EQU   DVT+192
DVT0048P EQU   DVT+188
DVT0047P EQU   DVT+184
DVT0046P EQU   DVT+180
DVT0045P EQU   DVT+176
DVT0044P EQU   DVT+172
DVT0043P EQU   DVT+168
DVT0042P EQU   DVT+164
DVT0041P EQU   DVT+160
DVT0040P EQU   DVT+156
DVT0039P EQU   DVT+152
DVT0038P EQU   DVT+148
DVT0037P EQU   DVT+144
DVT0036P EQU   DVT+140
DVT0035P EQU   DVT+136
DVT0034P EQU   DVT+132
DVT0011P EQU   DVT+40
DVT0005P EQU   DVT+16
DVT0002P EQU   DVT+4
DVT0001P EQU   DVT
BVT99999 EQU   BVT+256
BVT0064P EQU   BVT+252
BVT0063P EQU   BVT+248
BVT0062P EQU   BVT+244
BVT0061P EQU   BVT+240
BVT0060P EQU   BVT+236
BVT0059P EQU   BVT+232
BVT0057P EQU   BVT+224
BVT0056P EQU   BVT+220
BVTSTBLP EQU   BVT+200
BVT0045P EQU   BVT+176
BVT0044P EQU   BVT+172
BVT0033P EQU   BVT+128
BVT0032P EQU   BVT+124
BVT0031P EQU   BVT+120
BVT0030P EQU   BVT+116
BVT0029P EQU   BVT+112
BVT0026P EQU   BVT+100
BVT0025P EQU   BVT+96
BVT0024P EQU   BVT+92
BVT0023P EQU   BVT+88
BVT0016P EQU   BVT+60
BVT0015P EQU   BVT+56
BVT0014P EQU   BVT+52
BVT0003P EQU   BVT+8
BVT0001P EQU   BVT
SA99     EQU   SA+72
SARC     EQU   SAR+56
SARB     EQU   SAR+52
SARA     EQU   SAR+48
SAR9     EQU   SAR+44
SAR8     EQU   SAR+40
SAR7     EQU   SAR+36
SAR6     EQU   SAR+32
SAR5     EQU   SAR+28
SAR4     EQU   SAR+24
SAR3     EQU   SAR+20
SAR2     EQU   SAR+16
SAR1     EQU   SAR+12
SAR0     EQU   SAR+8
SARF     EQU   SAR+4
SARE     EQU   SAR
SAFWD    EQU   SA+8
SABAK    EQU   SA+4
SA1L     EQU   SA1+1
SA1P     EQU   SA1
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00068 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00067 EQU   UPT
@NM00066 EQU   ECT+52
@NM00065 EQU   ECT+48
@NM00064 EQU   ECT+44
@NM00063 EQU   ECTSWS2+1
@NM00062 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00061 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00060 EQU   PSCB+36
@NM00059 EQU   PSCB+32
@NM00058 EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00057 EQU   PSCBATR1
@NM00056 EQU   PSCBATR1
@NM00055 EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
PSCBUSRL EQU   PSCB+7
PSCBUSER EQU   PSCB
CMDT1    EQU   CMDT
CMDO     EQU   CMD+2
CMDL     EQU   CMD
ZZ299999 EQU   ZZ2+8192
ZZ2AXOT1 EQU   ZZ2AXOT
ZZ2AXOL  EQU   ZZ2AXO
@NM00054 EQU   ZZ2+7288
@NM00053 EQU   ZZ2AMDX+4
ZZ2AMDXC EQU   ZZ2AMDX
ZZ2HSD   EQU   ZZ2+3056
@NM00052 EQU   ZZ2ES
@NM00051 EQU   ZZ2+2868
ZZ2ITSEC EQU   ZZ2ITSE+1
@NM00050 EQU   ZZ2ITSE
ZZ2ITSEP EQU   ZZ2ITSE
ZZ2ITSEW EQU   ZZ2ITSE
@NM00049 EQU   ZZ2ITR+20
ZZ2ITREC EQU   ZZ2ITRE+1
@NM00048 EQU   ZZ2ITRE
ZZ2ITREP EQU   ZZ2ITRE
ZZ2ITREW EQU   ZZ2ITRE
@NM00047 EQU   ZZ2ITR+9
ZZ2ITRRC EQU   ZZ2ITR+8
ZZ2ITR2P EQU   ZZ2ITR+4
ZZ2ITRPP EQU   ZZ2ITR
@NM00046 EQU   ZZ2+1544
ZZ2PGM   EQU   ZZ2+1536
@NM00045 EQU   ZZ2+1526
ZZ2CW    EQU   ZZ2+1524
@NM00044 EQU   ZZ2+1504
@NM00043 EQU   ZZ2+1352
ZZ2FFSYP EQU   ZZ2+1348
ZZ2SASYP EQU   ZZ2+1344
ZZ2RDSYP EQU   ZZ2+1340
ZZ2RASYP EQU   ZZ2+1336
ZZ2PHSYP EQU   ZZ2+1332
ZZ2ESSYP EQU   ZZ2+1328
ZZ200SYP EQU   ZZ2+1324
ZZ2SCWP  EQU   ZZ2+1320
ZZ2TTLP  EQU   ZZ2+1316
ZZ2LOADP EQU   ZZ2+1312
ZZ2VRESP EQU   ZZ2+1308
ZZ2CPPLE EQU   ZZ2CPPL+12
ZZ2CPPLP EQU   ZZ2CPPL+8
ZZ2CPPLU EQU   ZZ2CPPL+4
ZZ2VRSAP EQU   ZZ2+1288
ZZ2RVTP  EQU   ZZ2+1284
@NM00042 EQU   ZZ2+1272
@NM00041 EQU   ZZ2+1268
ZZ2RPLP  EQU   ZZ2+1260
ZZ2TCBP  EQU   ZZ2+1256
@NM00040 EQU   ZZ2+1252
ZZ2ZZ2P  EQU   ZZ2+1248
@NM00039 EQU   ZZ2+1112
@NM00038 EQU   ZZ2+1080
ZZ2FT25P EQU   ZZ2+1072
@NM00037 EQU   ZZ2+976
ZZ2TOD   EQU   ZZ2+968
ZZ2STGN  EQU   ZZ2STG+4
ZZ2STGP  EQU   ZZ2STG
@NM00036 EQU   ZZ2+952
ZZ2SCMDE EQU   ZZ2+944
ZZ2SCMDN EQU   ZZ2+936
ZZ2IDENT EQU   ZZ2+928
ZZ2A9999 EQU   ZZ2A+656
@NM00035 EQU   ZZ2A+224
@NM00034 EQU   ZZ2A+220
ZZ2AQD99 EQU   ZZ2AQD+60
@NM00033 EQU   ZZ2AQD+56
@NM00032 EQU   ZZ2AQDF
ZZ2AQDFA EQU   ZZ2AQDF
ZZ2AQDIL EQU   ZZ2AQD+48
ZZ2AQDIM EQU   ZZ2AQD+44
ZZ2AQDT9 EQU   ZZ2AQDT+34
ZZ2AQDTE EQU   ZZ2AQDT+33
ZZ2AQDTD EQU   ZZ2AQDT+2
@NM00031 EQU   ZZ2AQDT+1
ZZ2AQDTY EQU   ZZ2AQDT
ZZ2AQDT0 EQU   ZZ2AQDT
ZZ2AQDLB EQU   ZZ2AQD+9
ZZ2AQDOB EQU   ZZ2AQD+8
ZZ2AQDLE EQU   ZZ2AQD+4
ZZ2AQDOF EQU   ZZ2AQD
ZZ2AQD00 EQU   ZZ2AQD
ZZ2AQAS9 EQU   ZZ2AQAS+16
@NM00030 EQU   ZZ2AQAS+12
ZZ2AQAS2 EQU   ZZ2AQAS+8
ZZ2AQAS1 EQU   ZZ2AQAS+4
@NM00029 EQU   ZZ2AQAS+2
ZZ2AQAST EQU   ZZ2AQAS
ZZ2AQAS0 EQU   ZZ2AQAS
ZZ2AZZ6P EQU   ZZ2A+140
ZZ2ADPTA EQU   ZZ2ADPT
ZZ2ADPL  EQU   ZZ2ADP
ZZ2ADMTA EQU   ZZ2ADMT
ZZ2ADML  EQU   ZZ2ADM
ZZ2ADDTA EQU   ZZ2ADDT
ZZ2ADDL  EQU   ZZ2ADD
@NM00028 EQU   ZZ2A+72
ZZ2APIDB EQU   ZZ2APID+3
ZZ2APIDA EQU   ZZ2APID
@NM00027 EQU   ZZ2A+24
@NM00026 EQU   ZZ2AF+5
@NM00025 EQU   ZZ2AF+3
ZZ2AFS   EQU   ZZ2AF+2
ZZ2AFD   EQU   ZZ2AF+2
ZZ2AFQ   EQU   ZZ2AF+2
ZZ2AF$   EQU   ZZ2AF+2
@NM00024 EQU   ZZ2AF+2
ZZ2AFM   EQU   ZZ2AF+2
@NM00023 EQU   ZZ2AF+2
@NM00022 EQU   ZZ2AF+1
ZZ2AFV   EQU   ZZ2AF+1
@NM00021 EQU   ZZ2AF+1
ZZ2AFC   EQU   ZZ2AF+1
@NM00020 EQU   ZZ2AF
ZZ2AFFS  EQU   ZZ2AF
ZZ2AFT   EQU   ZZ2AF
ZZ2AFP   EQU   ZZ2AF
@NM00019 EQU   ZZ2A+8
ZZ2ALINE EQU   ZZ2A+4
@NM00018 EQU   ZZ2A+3
ZZ2ASE   EQU   ZZ2A+2
ZZ2ACH   EQU   ZZ2A
@NM00017 EQU   ZZ2+264
@NM00016 EQU   ZZ2+263
ZZ2PRTT0 EQU   ZZ2PRTT
ZZ2PRTO  EQU   ZZ2PRT+2
ZZ2PRTL  EQU   ZZ2PRT
@NM00015 EQU   ZZ2AMD+56
ZZ2AMDXP EQU   ZZ2AMD+52
ZZ2AMDD  EQU   ZZ2AMD+48
ZZ2AMDL  EQU   ZZ2AMD+44
ZZ2AMDU  EQU   ZZ2AMD+28
ZZ2AMDF  EQU   ZZ2AMD+24
ZZ2AMDS  EQU   ZZ2AMD+20
ZZ2AMDC  EQU   ZZ2AMD+16
ZZ2AMDP  EQU   ZZ2AMD+12
ZZ2AMDB  EQU   ZZ2AMD+8
@NM00014 EQU   @NM00013
ZZ2AMD2  EQU   @NM00013
ZZ2AMD1  EQU   @NM00013
ZZ2AMD0  EQU   ZZ2AMD+6
ZZ2AMDA  EQU   ZZ2AMD+4
ZZ2AMDT  EQU   ZZ2AMD
ZZ199999 EQU   ZZ1+3072
@NM00012 EQU   ZZ1+2160
ZZ1TRTAS EQU   ZZ1+1904
ZZ1TRUPC EQU   ZZ1+1648
ZZ1TRCTX EQU   ZZ1+1392
ZZ1NASID EQU   ZZ1N+274
ZZ1NSTRL EQU   ZZ1N+272
ZZ1NOFF  EQU   ZZ1N+268
ZZ1NBDY  EQU   ZZ1N+264
ZZ1NADE  EQU   ZZ1N+260
ZZ1NADB  EQU   ZZ1N+256
ZZ1NSTR  EQU   ZZ1N
@NM00011 EQU   ZZ1+1080
ZZ1TREBC EQU   ZZ1+824
ZZ1TRHEX EQU   ZZ1+568
@NM00010 EQU   ZZ1+377
ZZ1USTAE EQU   ZZ1+376
@NM00009 EQU   ZZ1F+1
@NM00008 EQU   ZZ1F
ZZ1FM    EQU   ZZ1F
ZZ1FX    EQU   ZZ1F
ZZ1FU    EQU   ZZ1F
ZZ1EVEC  EQU   ZZ1EVE+1
@NM00007 EQU   ZZ1EVE
ZZ1EVEP  EQU   ZZ1EVE
ZZ1EVEW  EQU   ZZ1EVE
ZZ1ACMP  EQU   ZZ1ATTN
@NM00006 EQU   ZZ1+144
ZZ1ZZ6P  EQU   ZZ1+136
@NM00005 EQU   ZZ1+84
ZZ1PLINE EQU   ZZ1+80
ZZ1PGSZ  EQU   ZZ1+76
ZZ1PCNT  EQU   ZZ1+72
@NM00004 EQU   ZZ1+68
ZZ1TPAGE EQU   ZZ1+64
ZZ1TLINE EQU   ZZ1+60
@NM00003 EQU   ZZ1+52
ZZ1DMCBP EQU   ZZ1+48
ZZ1DSDP  EQU   ZZ1+44
ZZ1327WP EQU   ZZ1+32
ZZ1ACBP  EQU   ZZ1+28
@NM00002 EQU   ZZ1+24
ZZ1PDCBP EQU   ZZ1+20
ZZ1BLRBL EQU   ZZ1+16
@NM00001 EQU   ZZ1+12
ZZ1PNULL EQU   ZZ1+8
ZZ1NULL  EQU   ZZ1+4
ZZ1IDE   EQU   ZZ1
*                                      END UNREFERENCED COMPONENTS
@RC00518 EQU   @EL00002
@RC00605 EQU   @EL00005
@RC00700 EQU   @EL00007
@RC00867 EQU   @RC00865
@RC00962 EQU   @RC00959
@RC00898 EQU   @RC00867
@ENDDATA EQU   *
         END   BLSEMDPR,(C'PLS1123',0701,78066)
