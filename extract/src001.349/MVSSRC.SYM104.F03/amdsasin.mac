         TITLE 'AMDSASIN SWAP-IN FUNCTION FOR VIRTUAL DUMP             *
                        '
AMDSASIN CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'AMDSASIN  76.074'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @11,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@11                                      01S0001
         ST    @13,@SA00001+4                                   01S0001
         LA    @14,@SA00001                                     01S0001
         ST    @14,8(,@13)                                      01S0001
         LR    @13,@14                                          01S0001
*   SAVEFORM(1:4)='LSIN';           /* SET UP SWAP-IN ROUTINE ID IN
*                                      SAVE AREA                     */
         MVC   SAVEFORM(4,R13),@CC01846                         01S0221
*   RCBNEXT=VCTRCB;                 /* SAVE THE ADDRESS OF THE LAST
*                                      RCB ON THE VCTRCB CHAIN       */
         LA    @10,SINRCB                                       01S0222
         L     @15,VCTRCB(,VCCTREG)                             01S0222
         ST    @15,RCBNEXT(,@10)                                01S0222
*   GEN REFS(R1) SETS(SINSTOR)(STCTL R1,R1,SINSTOR);/* SAVE THE 01S0223
*                                      MEMORY SEGMENT TABLE ADDRESS  */
         STCTL R1,R1,SINSTOR
*   EXITADDR=ADDR(SINERRTN);        /* ERROR EXIT ADDR               */
         LA    @10,SINERRTN                                     01S0224
         ST    @10,EXITADDR                                     01S0224
*   RCBSAVE=R13;                    /* SAVE SWAP'S SAVE AREA ADDRESS */
         LA    @10,SINRCB                                       01S0225
         ST    R13,RCBSAVE(,@10)                                01S0225
*   RCBBASE=BASEREG;                /* SAVE THE BASE REGISTER FOR RCB
*                                      ADDRESSABILITY                */
         ST    BASEREG,RCBBASE(,@10)                            01S0226
*   VCTRCB=ADDR(SINRCB);            /* QUEUE THE SWAP-IN RCB ON THE
*                                      VCTRCB CHAIN                  */
         ST    @10,VCTRCB(,VCCTREG)                             01S0227
*                                                               01S0228
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF THE MEMORY BEING PROCESSED IS IN STORAGE OR      */
*   /* SWAPPED OUT                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0228
*   VCTLRCLM=OFF;                   /* SET RECLAIM SWITCH OFF        */
         NI    VCTLRCLM(VCCTREG),B'11110111'                    01S0228
*   VCTCBADR=RSMHDPTR;              /* SET UP RSM ADDRESS FOR VCK    */
         L     @10,ASCBPTR(,VCCTREG)                            01S0229
         L     @10,RSMHDPTR(,@10)                               01S0229
         ST    @10,VCTCBADR(,VCCTREG)                           01S0229
*   VCTCBIDN=VRSMHID;               /* SET UP RSM ID                 */
         MVI   VCTCBIDN(VCCTREG),X'0E'                          01S0230
*   SVC(VCKSVC);                    /* VCK THE RSM                   */
         SVC   25                                               01S0231
*   RFY                                                         01S0232
*     RETCODE RSTD;                                             01S0232
*   IF RETCODE^=0 THEN                                          01S0233
         LTR   RETCODE,RETCODE                                  01S0233
         BZ    @RF00233                                         01S0233
*     VCTLRCLM=ON;                  /* SET RECLAIM SW ON IF RSM 01S0234
*                                      INVALID                       */
         OI    VCTLRCLM(VCCTREG),B'00001000'                    01S0234
*   VCTMEMIN=ON;                    /* SET UP NO SWAP IN REQUIRED    */
@RF00233 OI    VCTMEMIN(VCCTREG),B'01000000'                    01S0235
*   IF(ASCBNOQ=OFF)×(OUCBOUT=OFF) THEN/*                     @YM06829*/
         L     @14,ASCBPTR(,VCCTREG)                            01S0236
         TM    ASCBNOQ(@14),B'10000000'                         01S0236
         BZ    @RT00236                                         01S0236
         L     @10,OUCBPTR(,@14)                                01S0236
         TM    OUCBOUT(@10),B'00000100'                         01S0236
         BZ    @RT00236                                         01S0236
*     GO TO SGTADDR;                /* ON QUEUE OR NOT OUT THEN 01S0237
*                                      MEMORY IS IN                  */
*   IF(VCTLRCLM=ON)×(RSMSPCT=0) THEN                            01S0238
         TM    VCTLRCLM(VCCTREG),B'00001000'                    01S0238
         BO    @RT00238                                         01S0238
         L     @14,RSMHDPTR(,@14)                               01S0238
         L     @14,RSMSPCT(,@14)                                01S0238
         LTR   @14,@14                                          01S0238
         BZ    @RT00238                                         01S0238
*     GO TO SINERRTN;               /* MEMORY NOT IN, NO RECLAIM OR
*                                      SPCT THEN CTL BLK IS IN ERROR */
*   VCTCBADR=RSMSPCT;               /* SET UP SPCT ADDRESS FOR VCK
*                                                            @Z40WI3P*/
         ST    @14,VCTCBADR(,VCCTREG)                           01S0240
*   VCTCBIDN=VSPCTID;               /* SET UP SPCT ID        @Z40WI3P*/
         MVI   VCTCBIDN(VCCTREG),X'01'                          01S0241
*   SVC(VCKSVC);                    /* VCK THE SPCT          @Z40WI3P*/
         SVC   25                                               01S0242
*   IF RETCODE^=0 THEN              /* SPCT VALID?           @Z40WI3P*/
         LTR   RETCODE,RETCODE                                  01S0243
         BNZ   @RT00243                                         01S0243
*     GO TO SINERRTN;               /* NO--CANNOT PROCESS A SWAPPED
*                                      OUT MEMORY WITHOUT THE SPCT
*                                                            @Z40WI3P*/
*   IF VCTSARTB=ON&SPCTPSET=OFF THEN/* IS SART INVALID AND LSQA ON
*                                      SWAP DS?              @Z40WI3P*/
         TM    VCTSARTB(VCCTREG),B'00010000'                    01S0245
         BNO   @RF00245                                         01S0245
         L     @14,ASCBPTR(,VCCTREG)                            01S0245
         L     @14,RSMHDPTR(,@14)                               01S0245
         L     @14,SPCTPTR(,@14)                                01S0245
         TM    SPCTPSET(@14),B'00001000'                        01S0245
         BZ    @RT00245                                         01S0245
*     GO TO SINERRTN;               /* YES-CANNOT PROCESS MEMORY
*                                      BECAUSE ALL ITS LSQA IS ON A
*                                      SWAP DATA SET, BUT THE SART IS
*                                      INVALID SO WE CANNOT GET 01S0246
*                                      ANYTHING FROM THE SWAP DS.
*                                                            @Z40WI3P*/
*   RFY                                                         01S0247
*     RETCODE UNRSTD;               /*                       @Z40WI3P*/
@RF00245 DS    0H                                               01S0248
*                                                               01S0248
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP TO INITIALIZE THE ENTIRE PTRT TABLE SINCE THIS IS A    */
*   /* MEMORY SWAP-IN OPERATION                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0248
*   RESPECIFY                                                   01S0248
*     PTRTRSA BASED(SINRSA);                                    01S0248
*   RESPECIFY                                                   01S0249
*     PTRT BASED(VCTPTRT+VCTLPA);                               01S0249
*   PTRTEND=ADDR(PTRTVS(1));        /* CALCULATE THE END OF THE PTRT
*                                      FOR LATER USE                 */
         L     @10,VCTPTRT(,VCCTREG)                            01S0250
         AL    @10,VCTLPA(,VCCTREG)                             01S0250
         LA    PTRTEND,PTRTVS(,@10)                             01S0250
*   VCTMEMIN=OFF;                   /* MEMORY MUST BE SWAPPED INTO
*                                      REAL STORAGE                  */
         NI    VCTMEMIN(VCCTREG),B'10111111'                    01S0251
*   DO SINRSA=ADDR(PTRTRS(1)) BY LENGTH(PTRTRSA) WHILE SINRSA<PTRTEND;
*                                                               01S0252
         LA    @10,PTRTRS(,@10)                                 01S0252
         ST    @10,SINRSA                                       01S0252
         B     @DE00252                                         01S0252
@DL00252 DS    0H                                               01S0253
*/* SET UP TO INITIALIZE THE ENTIRE PTRT TABLE                       */
*                                                               01S0253
*     PTRTRSA='FFFFFFFF'X;          /* INVALIDATE EACH PTRT ENTRY    */
         L     @10,SINRSA                                       01S0253
         MVC   PTRTRSA(4,@10),@CF01853                          01S0253
*   END;                                                        01S0254
         AL    @10,@CF00038                                     01S0254
         ST    @10,SINRSA                                       01S0254
@DE00252 C     PTRTEND,SINRSA                                   01S0254
         BH    @DL00252                                         01S0254
*                                                               01S0255
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE SEGMENT TABLE ENTRIES IN THE PTRT TO THE       */
*   /* CORRESPONDING MASTER MEMORY ENTRIES AND VALIDATE              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0255
*   SINRSA=ADDR(PTRTRS(1));                                     01S0255
         L     @10,VCTPTRT(,VCCTREG)                            01S0255
         AL    @10,VCTLPA(,VCCTREG)                             01S0255
         LA    @10,PTRTRS(,@10)                                 01S0255
         ST    @10,SINRSA                                       01S0255
*   RESPECIFY                                                   01S0256
*     R1 RESTRICTED;                                            01S0256
*   R1=SINSTOR;                     /* GET REAL SEGMENT TABLE ADDRESS*/
         L     R1,SINSTOR                                       01S0257
*   SVC(VRTSVC);                    /* CALL AMDSAVRT TO GET VIRTUAL
*                                      SEGMENT TABLE ADDRESS         */
         SVC   30                                               01S0258
*   WKSNSTOR=R1;                    /* SAVE VIRTUAL SEGMENT TABLE
*                                      ADDRESS                       */
         LR    WKSNSTOR,R1                                      01S0259
*   DO I=CVTNUCB/SEGSIZE TO 1 BY-1;                             01S0260
         L     @10,CVTPTR                                       01S0260
         L     I,CVTNUCB(,@10)                                  01S0260
         SRL   I,16                                             01S0260
         B     @DE00260                                         01S0260
@DL00260 DS    0H                                               01S0261
*     SGTSTE=WKSNSTOR->SGTSTE;                                  01S0261
         L     @10,STEPTR                                       01S0261
         MVC   SGTSTE(4,@10),SGTSTE(WKSNSTOR)                   01S0261
*     SINRSA=SINRSA+LENGTH(PTRTRSA);                            01S0262
         LA    @10,4                                            01S0262
         L     @00,SINRSA                                       01S0262
         ALR   @00,@10                                          01S0262
         ST    @00,SINRSA                                       01S0262
*     WKSNSTOR=WKSNSTOR+LENGTH(PTRTRSA);                        01S0263
         ALR   WKSNSTOR,@10                                     01S0263
*   END;                                                        01S0264
         BCTR  I,0                                              01S0264
@DE00260 LTR   I,I                                              01S0264
         BP    @DL00260                                         01S0264
*   SINRSA=ADDR(PTRTRS(1))+(CVTSHRVM/SEGSIZE)*LENGTH(SGTSTE);/* 01S0265
*                                                            @Z40WI3P*/
         L     @10,VCTPTRT(,VCCTREG)                            01S0265
         AL    @10,VCTLPA(,VCCTREG)                             01S0265
         LA    @10,PTRTRS(,@10)                                 01S0265
         L     @03,@CF01806                                     01S0265
         L     @15,CVTPTR                                       01S0265
         L     @15,CVTSHRVM(,@15)                               01S0265
         LR    @05,@15                                          01S0265
         SLR   @04,@04                                          01S0265
         DR    @04,@03                                          01S0265
         SLA   @05,2                                            01S0265
         ALR   @10,@05                                          01S0265
         ST    @10,SINRSA                                       01S0265
*   WKSNSTOR=R1+(CVTSHRVM/SEGSIZE)*LENGTH(SGTSTE);/*         @Z40WI3P*/
         ALR   @05,R1                                           01S0266
         LR    WKSNSTOR,@05                                     01S0266
*   DO I=(NUMSEG-CVTSHRVM/SEGSIZE) TO 1 BY-1;/*              @Z40WI3P*/
         L     @10,@CF01806                                     01S0267
         SLR   @14,@14                                          01S0267
         DR    @14,@10                                          01S0267
         LCR   @15,@15                                          01S0267
         AL    @15,@CF00913                                     01S0267
         LR    I,@15                                            01S0267
         B     @DE00267                                         01S0267
@DL00267 DS    0H                                               01S0268
*     SGTSTE=WKSNSTOR->SGTSTE;                                  01S0268
         L     @10,STEPTR                                       01S0268
         MVC   SGTSTE(4,@10),SGTSTE(WKSNSTOR)                   01S0268
*     SINRSA=SINRSA+LENGTH(PTRTRSA);                            01S0269
         LA    @10,4                                            01S0269
         L     @00,SINRSA                                       01S0269
         ALR   @00,@10                                          01S0269
         ST    @00,SINRSA                                       01S0269
*     WKSNSTOR=WKSNSTOR+LENGTH(PTRTRSA);                        01S0270
         ALR   WKSNSTOR,@10                                     01S0270
*   END;                                                        01S0271
         BCTR  I,0                                              01S0271
@DE00267 LTR   I,I                                              01S0271
         BP    @DL00267                                         01S0271
*   RESPECIFY                                                   01S0272
*     R1 UNRESTRICTED;                                          01S0272
*                                                               01S0273
*   /*****************************************************************/
*   /*                                                               */
*   /* CALCULATE THE LSID AND INITIALIZE THE PTRT FOR EACH   @Z40WI3P*/
*   /* PAGE TABLE ENTRY.                                     @Z40WI3P*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0273
*   DO SEGSPTR=ADDR(SPCTSEGS(1)) BY LENGTH(SPCTSEGE) WHILE SEGSPTR<ADDR
*         (SPCTSEGS(1))+(SPCTSSEG*LENGTH(SPCTSEGE));            01S0273
         L     @10,ASCBPTR(,VCCTREG)                            01S0273
         L     @10,RSMHDPTR(,@10)                               01S0273
         L     SEGSPTR,SPCTPTR(,@10)                            01S0273
         LA    SEGSPTR,SPCTSEGS(,SEGSPTR)                       01S0273
         B     @DE00273                                         01S0273
@DL00273 DS    0H                                               01S0274
*     SINRSA=ADDR(PTRTRS(1))+(SPCTSEGX*LENGTH(PTRTRSA));/* INDEX TO
*                                      PROPER RSA PTRT ENTRY         */
         L     @10,VCTPTRT(,VCCTREG)                            01S0274
         AL    @10,VCTLPA(,VCCTREG)                             01S0274
         LA    @10,PTRTRS(,@10)                                 01S0274
         SLR   @06,@06                                          01S0274
         IC    @06,SPCTSEGX(,SEGSPTR)                           01S0274
         SLA   @06,2                                            01S0274
         ALR   @10,@06                                          01S0274
         ST    @10,SINRSA                                       01S0274
*     PTRTRSA=0;                    /* ZERO THE RSA ADDRESS          */
         SLR   @06,@06                                          01S0275
         ST    @06,PTRTRSA(,@10)                                01S0275
*     SGTPAM=ON;                    /* INVALIDATE THE ENTRY          */
         L     @06,STEPTR                                       01S0276
         OI    SGTPAM(@06),B'00000001'                          01S0276
*     PTRTVSA=SPCTPGT;              /* OBTAIN THE VIRTUAL STORAGE
*                                      ADDR                          */
         SLR   @06,@06                                          01S0277
         ICM   @06,7,SPCTPGT(SEGSPTR)                           01S0277
         ST    @06,PTRTVSA+1024(,@10)                           01S0277
*     RECLMSW=OFF;                  /* INDICATE NO RECLAIM           */
         NI    RECLMSW,B'01111111'                              01S0278
*     PGECAL=(SPCTPGT&'FFF000'X);   /* CALCULATE THE VBN OF THE PAGE
*                                      ENTRY                         */
         MVC   PGECAL(3),SPCTPGT(SEGSPTR)                       01S0279
         NC    PGECAL(3),@CB01855                               01S0279
*     RESPECIFY                                                 01S0280
*      (R0,                                                     01S0280
*       R1) RESTRICTED;             /*                       @Z40WI3P*/
*     R0=PGEVBN;                    /* GET VBN PORTION OF PGECAL
*                                                            @Z40WI3P*/
         SLR   R0,R0                                            01S0281
         ICM   R0,3,PGEVBN                                      01S0281
*     CALL SRCHSPCT;                /* FIND LSQA ENTRY IN SPCT FOR
*                                      THIS PAGE. ON RETURN, R1 01S0282
*                                      POINTS TO THE ENTRY.  @Z40WI3P*/
         BAL   @14,SRCHSPCT                                     01S0282
*     RESPECIFY                                                 01S0283
*       RETCODE RESTRICTED;         /*                       @Z40WI3P*/
*     IF RETCODE^=0 THEN            /* LSQA ENTRY FOUND?     @Z40WI3P*/
         LTR   RETCODE,RETCODE                                  01S0284
         BNZ   @RT00284                                         01S0284
*       GO TO BADLSQA;              /* NO-ERROR, PAGE TABLES MUST BE
*                                      IN LSQA               @Z40WI3P*/
*     RESPECIFY                                                 01S0286
*       RETCODE UNRESTRICTED;       /*                       @Z40WI3P*/
*     RESPECIFY                                                 01S0287
*       SPCTSWPE BASED(R1);         /*                       @Z40WI3P*/
*     IF SPCTLVAL=OFF THEN          /* LSID IN SPCT STILL VALID?
*                                                            @Z40WI3P*/
         TM    SPCTLVAL(R1),B'10000000'                         01S0288
         BNZ   @RF00288                                         01S0288
*       DO;                         /* NO- BETTER BE ABLE TO RECLAIM
*                                                            @Z40WI3P*/
*         SAVESPCT=R1;              /* SAVE SPCT ENTRY ADDR  @Z40WI3P*/
         LR    SAVESPCT,R1                                      01S0290
*         CALL CHKPFTE;             /* CHECK PFTE FOR RECLAIM. ON
*                                      RETURN, R1 CONTAINS RBN  01S0291
*                                                            @Z40WI3P*/
         BAL   @14,CHKPFTE                                      01S0291
*         RESPECIFY                                             01S0292
*           RETCODE RESTRICTED;     /*                       @Z40WI3P*/
*         IF RETCODE^=0 THEN        /* PAGE RECLAIMABLE?     @Z40WI3P*/
         LTR   RETCODE,RETCODE                                  01S0293
         BZ    @RF00293                                         01S0293
*           DO;                     /* NO-ERROR              @Z40WI3P*/
*             RESPECIFY                                         01S0295
*               RETCODE UNRESTRICTED;/*                      @Z40WI3P*/
*BADLSQA:                           /*                       @Z40WI3P*/
*             R1=0;                 /* REQUEST JUST ERR MSG  @Z40WI3P*/
BADLSQA  SLR   R1,R1                                            01S0296
*             CALL SINDUMP;         /* ISSUE ERROR MESSAGE   @Z40WI3P*/
         BAL   @14,SINDUMP                                      01S0297
*             GO TO NEXTENTY;       /* GET NEXT SEGMNT ENTRY @Z40WI3P*/
         B     NEXTENTY                                         01S0298
*           END;                    /*                       @Z40WI3P*/
*         RECLMSW=ON;               /* INDICATE RECLAIM      @Z40WI3P*/
@RF00293 OI    RECLMSW,B'10000000'                              01S0300
*         PTRTRSA=PTRTVSA&'00000FFF'X;/* GET DISPLACEMENT PORTION
*                                                            @Z40WI3P*/
         L     @10,SINRSA                                       01S0301
         L     @15,PTRTVSA+1024(,@10)                           01S0301
         N     @15,@CF01863                                     01S0301
         ST    @15,PTRTRSA(,@10)                                01S0301
*         SINVADDR(2:3)=SINVADDR(2:3)×R1;/* 'OR' THE RBN INTO ENTRY
*                                                            @Z40WI3P*/
         SLR   @15,@15                                          01S0302
         ICM   @15,3,SINVADDR+1(@10)                            01S0302
         OR    @15,R1                                           01S0302
         STCM  @15,3,SINVADDR+1(@10)                            01S0302
*         SINVADDR(1)='F0'X;        /* SET PAGE TABLE LENGTH @Z40WI3P*/
         MVI   SINVADDR(@10),X'F0'                              01S0303
*         RESPECIFY                                             01S0304
*           PGTPTE BASED(VCTPGT+VCTLPA);/*                   @Z40WI3P*/
*         PGTRSA=R1;                /* SET UP VCTLPA AS VIRT ADDR OF
*                                      THIS REAL FRAME       @Z40WI3P*/
         L     @10,VCTPGT(,VCCTREG)                             01S0305
         AL    @10,VCTLPA(,VCCTREG)                             01S0305
         STCM  R1,3,PGTRSA(@10)                                 01S0305
*         GEN(PTLB)                                             01S0306
*         NOREFS NOSETS;            /* PURGE HARDWARE TLB    @Z40WI3P*/
         PTLB
*         R1=SAVESPCT;              /* RESTORE SAVED SPCT ENTRY 01S0307
*                                      ADDRESS               @Z40WI3P*/
         LR    R1,SAVESPCT                                      01S0307
*       END;                        /*                       @Z40WI3P*/
*     DO SINSEGPT=ADDR(SPCTSEGS(1)) BY LENGTH(SPCTSEGE) WHILE SINSEGPT<
*           SEGSPTR;                /* SEARCH FOR IDENTICAL ENTRIES  */
@RF00288 L     @10,ASCBPTR(,VCCTREG)                            01S0309
         L     @10,RSMHDPTR(,@10)                               01S0309
         L     SINSEGPT,SPCTPTR(,@10)                           01S0309
         LA    SINSEGPT,SPCTSEGS(,SINSEGPT)                     01S0309
         B     @DE00309                                         01S0309
@DL00309 DS    0H                                               01S0310
*       IF PGECAL=(SINSEGPT->SPCTPGT&'FFF000'X) THEN            01S0310
         MVC   @TS00001(3),SPCTPGT(SINSEGPT)                    01S0310
         NC    @TS00001(3),@CB01855                             01S0310
         CLC   PGECAL(3),@TS00001                               01S0310
         BE    @RT00310                                         01S0310
*         GO TO NEXTENTY;                                       01S0311
*     END;                                                      01S0312
         AL    SINSEGPT,@CF00201                                01S0312
@DE00309 CR    SINSEGPT,SEGSPTR                                 01S0312
         BL    @DL00309                                         01S0312
*     CALL SINDUMP;                                             01S0313
         BAL   @14,SINDUMP                                      01S0313
*NEXTENTY:                                                      01S0314
*     RESPECIFY                                                 01S0314
*       PGTPTE BASED(PTEPTR);       /*                       @Z40WI3P*/
NEXTENTY DS    0H                                               01S0315
*     IF RECLMSW=ON THEN                                        01S0315
         TM    RECLMSW,B'10000000'                              01S0315
         BNO   @RF00315                                         01S0315
*       DO PTEPTR=VCTLPA+(PTRTRSA&'00000FFF'X)/*             @YM08293*/
*             TO(VCTLPA+(PTRTRSA&'00000FFF'X)+30)/*          @ZF00407*/
*             BY LENGTH(PGTPTE);    /*                       @YM08293*/
*                                                               01S0316
         L     @10,SINRSA                                       01S0316
         L     PTEPTR,PTRTRSA(,@10)                             01S0316
         N     PTEPTR,@CF01863                                  01S0316
         AL    PTEPTR,VCTLPA(,VCCTREG)                          01S0316
         B     @DE00316                                         01S0316
@DL00316 DS    0H                                               01S0317
*         /***********************************************************/
*         /*                                                         */
*         /* IF RECLAIM IS POSSIBLE INITIALIZE THE PGE TBL ENTRIES   */
*         /* AND INVALIDATE                                          */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0317
*         PGTPVM=ON;                                            01S0317
         OI    PGTPVM(PTEPTR),B'00001000'                       01S0317
*       END;                                                    01S0318
         AL    PTEPTR,@CF00233                                  01S0318
@DE00316 L     @10,SINRSA                                       01S0318
         L     @10,PTRTRSA(,@10)                                01S0318
         N     @10,@CF01863                                     01S0318
         AL    @10,VCTLPA(,VCCTREG)                             01S0318
         AL    @10,@CF01591                                     01S0318
         CR    PTEPTR,@10                                       01S0318
         BNH   @DL00316                                         01S0318
*     RFY                                                       01S0319
*       PGTPTE BASED(VCTPGT+VCTLPA);                            01S0319
@RF00315 DS    0H                                               01S0320
*     PGTPVM=ON;                                                01S0320
         L     @10,VCTPGT(,VCCTREG)                             01S0320
         AL    @10,VCTLPA(,VCCTREG)                             01S0320
         OI    PGTPVM(@10),B'00001000'                          01S0320
*     GENERATE(PTLB)                                            01S0321
*     NOREFS NOSETS;                /*                       @Z40WI3P*/
         PTLB
*     RESPECIFY                                                 01S0322
*      (R0,                                                     01S0322
*       R1) UNRESTRICTED;           /*                       @Z40WI3P*/
*   END;                                                        01S0323
         AL    SEGSPTR,@CF00201                                 01S0323
@DE00273 L     @10,ASCBPTR(,VCCTREG)                            01S0323
         L     @10,RSMHDPTR(,@10)                               01S0323
         L     @10,SPCTPTR(,@10)                                01S0323
         LA    @06,SPCTSEGS(,@10)                               01S0323
         SLR   @15,@15                                          01S0323
         IC    @15,SPCTSSEG(,@10)                               01S0323
         MH    @15,@CH00201                                     01S0323
         ALR   @06,@15                                          01S0323
         CR    SEGSPTR,@06                                      01S0323
         BL    @DL00273                                         01S0323
*   GO TO SETSGT;                                               01S0324
         B     SETSGT                                           01S0324
*                                                               01S0325
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF THE SEGMENT TABLE IS VALID                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0325
*SGTADDR:                                                       01S0325
*   VCTCBADR=ASCBSTOR;                                          01S0325
SGTADDR  L     @10,ASCBPTR(,VCCTREG)                            01S0325
         L     @10,ASCBSTOR(,@10)                               01S0325
         ST    @10,VCTCBADR(,VCCTREG)                           01S0325
*   VCTCBIDN=VSGTID;                /* IDENTIFIER FOR THE SEGMENT
*                                      TABLE VALIDITY CHECKING       */
         MVI   VCTCBIDN(VCCTREG),X'0D'                          01S0326
*   SVC(VCKSVC);                    /* VALIDITY CHECK THE SEGMENT
*                                      TABLE                         */
         SVC   25                                               01S0327
*   RESPECIFY                                                   01S0328
*     RETCODE RESTRICTED;                                       01S0328
*SETSGT:                                                        01S0329
*   SAVEBACK->SAVER15=0;            /* SET UP NORMAL RETURN CODE     */
SETSGT   L     @14,SAVEBACK(,R13)                               01S0329
         SLR   @10,@10                                          01S0329
         ST    @10,SAVER15(,@14)                                01S0329
*   IF VCTMEMIN=OFF THEN                                        01S0330
         TM    VCTMEMIN(VCCTREG),B'01000000'                    01S0330
         BNZ   @RF00330                                         01S0330
*     DO;                           /*                       @YM08402*/
*       VCTSTOR=ADDR(PTRTREAL->PTRTRS(1))×'0F000000'X;/* IF MEMORY IS
*                                      SWAPPED IN USE THE PTRT AS A
*                                      SEGMENT TABLE USING REAL 01S0332
*                                      ADDRESS               @Z40WI3P*/
         L     @14,@CF01393                                     01S0332
         LA    @14,PTRTRS(,@14)                                 01S0332
         O     @14,@CF01874                                     01S0332
         ST    @14,VCTSTOR(,VCCTREG)                            01S0332
*     END;                          /*                       @YM08402*/
*   ELSE                                                        01S0334
*     IF RETCODE=0 THEN                                         01S0334
         B     @RC00330                                         01S0334
@RF00330 LTR   RETCODE,RETCODE                                  01S0334
         BNZ   @RF00334                                         01S0334
*       VCTSTOR=ASCBSTOR;           /* MEMORY IS IN USE IN-CORE 01S0335
*                                      SEGMENT TABLE                 */
         L     @14,ASCBPTR(,VCCTREG)                            01S0335
         L     @14,ASCBSTOR(,@14)                               01S0335
         ST    @14,VCTSTOR(,VCCTREG)                            01S0335
*     ELSE                                                      01S0336
*SINERRTN:                                                      01S0336
*       DO;                                                     01S0336
         B     @RC00334                                         01S0336
@RF00334 DS    0H                                               01S0336
SINERRTN DS    0H                                               01S0337
*         SAVEBACK->SAVER15=4;      /* ERROR IN POCESSING MEMORY,
*                                      TERMINATE PROCESSING OF MEMORY*/
         L     @14,SAVEBACK(,R13)                               01S0337
         MVC   SAVER15(4,@14),@CF00038                          01S0337
*         RESPECIFY                                             01S0338
*           RETCODE UNRESTRICTED;                               01S0338
*         VLNG22I=LENGTH(DMP22I);   /*                       @YM08402*/
         L     @10,@CA01813                                     01S0339
         L     @15,VCTLPA(,VCCTREG)                             01S0339
         ALR   @10,@15                                          01S0339
         MVI   VLNG22I(@10),X'1D'                               01S0339
*         VDMP22I=SINMSG1;          /* WRITE ERR MSG         @YM08402*/
         L     @10,@CA01811                                     01S0340
         ALR   @10,@15                                          01S0340
         MVI   VDMP22I+12(@10),C' '                             01S0340
         MVC   VDMP22I+13(16,@10),VDMP22I+12(@10)               01S0340
         MVC   VDMP22I(12,@10),SINMSG1                          01S0340
*         RESPECIFY                                             01S0341
*           R1 RSTD;                /* 'ERROR DUMPING        @YM08402*/
*         R1=AMD022I;               /* LOCAL MEMORY'         @YM08402*/
         LA    R1,22                                            01S0342
*         SVC(CONSVC);              /*                       @YM08402*/
         SVC   3                                                01S0343
*         RESPECIFY                                             01S0344
*           R1 UNRSTD;              /*                       @YM08402*/
*       END;                                                    01S0345
*                                                               01S0346
*   /*****************************************************************/
*   /*                                                               */
*   /* DEQUEUE THE RCB AND RETURN TO CALLER                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0346
*SINEXIT:                                                       01S0346
*   VCTRCB=RCBNEXT;                 /* DEQUEUE THE SWAP-IN RCB       */
@RC00334 DS    0H                                               01S0346
@RC00330 DS    0H                                               01S0346
SINEXIT  LA    @10,SINRCB                                       01S0346
         L     @10,RCBNEXT(,@10)                                01S0346
         ST    @10,VCTRCB(,VCCTREG)                             01S0346
*   RETURN;                                                     01S0347
@EL00001 L     @13,4(,@13)                                      01S0347
@EF00001 DS    0H                                               01S0347
@ER00001 LM    @14,@12,12(@13)                                  01S0347
         BR    @14                                              01S0347
*                                                               01S0348
*   /*****************************************************************/
*   /*                                                               */
*   /* PERFORM THE ACTUAL PAGE IN FUNCTION FOR THE PAGE. R1  @Z40WI3P*/
*   /* CONTAINS THE SPCT ENTRY ADDRESS.                      @Z40WI3P*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0348
*SINDUMP:                                                       01S0348
*   PROC OPTIONS(SAVE,SAVEAREA);                                01S0348
SINDUMP  STM   @14,@12,12(@13)                                  01S0348
         ST    @13,@SA00002+4                                   01S0348
         LA    @14,@SA00002                                     01S0348
         ST    @14,8(,@13)                                      01S0348
         LR    @13,@14                                          01S0348
*   RESPECIFY                                                   01S0349
*     R1 RESTRICTED;                /*                       @Z40WI3P*/
*   IF R1=0 THEN                    /* MESSAGE ONLY?         @Z40WI3P*/
         LTR   R1,R1                                            01S0350
         BZ    @RT00350                                         01S0350
*     GO TO MOVEPGE;                /* YES                   @Z40WI3P*/
*   RESPECIFY                                                   01S0352
*     CCT BASED(VCTCCTV);                                       01S0352
*   CTIOTYPE=OFF;                   /* RESET THE CTIOTYPE FLAGS      */
         L     @10,VCTCCTV(,VCCTREG)                            01S0353
         MVI   CTIOTYPE(@10),B'00000000'                        01S0353
*   CTIODA=ON;                      /* INDICATE A PAGE-IN REQUEST
*                                      FROM DA DEVICE                */
         OI    CTIODA(@10),B'00100000'                          01S0354
*   SINBUFSV=CTBUFTYP;              /* SAVE BUFFER SWITCH            */
         SLR   SINBUFSV,SINBUFSV                                01S0355
         IC    SINBUFSV,CTBUFTYP(,@10)                          01S0355
*   CTBUFTYP=OFF;                   /* RESET THE BUFFER FLAGS        */
         MVI   CTBUFTYP(@10),B'00000000'                        01S0356
*   CTPGT=ON;                       /* SET THE PAGE REQUEST BUFFER
*                                      FLAG ON                       */
         OI    CTPGT(@10),B'00100000'                           01S0357
*   SVC(BUFSVC);                    /* OBTAIN A BUFFER FOR THE INPUT
*                                      PAGE                          */
         SVC   14                                               01S0358
*   RESPECIFY                                                   01S0359
*     RETCODE RESTRICTED;                                       01S0359
*   CTBUFTYP=SINBUFSV;              /* RESTORE BUFFER SWITCH         */
         L     @14,VCTCCTV(,VCCTREG)                            01S0360
         STC   SINBUFSV,CTBUFTYP(,@14)                          01S0360
*   IF RETCODE^=0 THEN                                          01S0361
         LTR   RETCODE,RETCODE                                  01S0361
         BNZ   @RT00361                                         01S0361
*     GO TO DQPGE;                  /* IF AN ERROR OCCURRED, EXIT
*                                      WITHOUT DUMPING PAGE          */
*   RESPECIFY                                                   01S0363
*     RETCODE UNRESTRICTED;                                     01S0363
*   RESPECIFY                                                   01S0364
*     IODB BASED(ADDR(IODBDA)+VCTLPA);                          01S0364
*   RESPECIFY                                                   01S0365
*     BCT BASED(IODBBCT+VCTLPA);                                01S0365
*   BCTKEY1=1;                      /* SET UP THE STORAGE KEY        */
         L     @10,@CA01809                                     01S0366
         L     @06,VCTLPA(,VCCTREG)                             01S0366
         ALR   @10,@06                                          01S0366
         AL    @06,IODBBCT(,@10)                                01S0366
         MVI   BCTKEY1(@06),X'01'                               01S0366
*   BCTKEY2=BCTKEY1;                /* 2ND HALF OF THE STORAGE KEY   */
         MVC   BCTKEY2(1,@06),BCTKEY1(@06)                      01S0367
*   BCTLSID=R1->SPCTSSID;           /* GET FULL WORD LSID FROM SPCT
*                                      ENTRY                 @Z40WI3P*/
         SLR   @10,@10                                          01S0368
         ICM   @10,7,SPCTSSID(R1)                               01S0368
         ST    @10,BCTLSID(,@06)                                01S0368
*   BCTVADDR=PGECAL;                /* BUFFER ADDRESS TO A PAGE 01S0369
*                                      BOUNDRY                       */
         SLR   @10,@10                                          01S0369
         ICM   @10,7,PGECAL                                     01S0369
         ST    @10,BCTVADDR(,@06)                               01S0369
*   IF SPCTPSET=ON THEN             /* A PAGE DATA SET?      @Z40WI3P*/
         L     @10,ASCBPTR(,VCCTREG)                            01S0370
         L     @10,RSMHDPTR(,@10)                               01S0370
         L     @10,SPCTPTR(,@10)                                01S0370
         TM    SPCTPSET(@10),B'00001000'                        01S0370
         BNO   @RF00370                                         01S0370
*     BCTSWPDS=OFF;                 /* YES                   @Z40WI3P*/
         NI    BCTSWPDS(@06),B'11110111'                        01S0371
*   ELSE                            /*                       @Z40WI3P*/
*     BCTSWPDS=ON;                  /* NO-A SWAP DATA SET    @Z40WI3P*/
         B     @RC00370                                         01S0372
@RF00370 L     @10,@CA01809                                     01S0372
         L     @06,VCTLPA(,VCCTREG)                             01S0372
         ALR   @10,@06                                          01S0372
         AL    @06,IODBBCT(,@10)                                01S0372
         OI    BCTSWPDS(@06),B'00001000'                        01S0372
*   IF RECLMSW=ON THEN                                          01S0373
@RC00370 TM    RECLMSW,B'10000000'                              01S0373
         BNO   @RF00373                                         01S0373
*     DO;                           /* IF RECLAIM IS POSSIBLE GET
*                                      REAL STORAGE ADDRESS OF PGE
*                                      TBL                           */
*       RFY                                                     01S0375
*        (R0,                                                   01S0375
*         R1,                                                   01S0375
*         R2,                                                   01S0375
*         R3) RSTD;                 /*                       @Z40WI3P*/
*       R1=PTRTRSA&'00FFF000'X;     /* SET PAGE TABLE TO A PAGE 01S0376
*                                      BOUNDRY                       */
         L     @10,SINRSA                                       01S0376
         L     R1,PTRTRSA(,@10)                                 01S0376
         N     R1,@CF01888                                      01S0376
*       GEN REFS(R1) SETS(R0)(ISK R0,R1);/* GET STORAGE KEY FOR 1ST
*                                      2K BLOCK                      */
         ISK R0,R1
*       BCTKEY1=R0;                                             01S0378
         L     @10,@CA01809                                     01S0378
         L     @06,VCTLPA(,VCCTREG)                             01S0378
         ALR   @10,@06                                          01S0378
         AL    @06,IODBBCT(,@10)                                01S0378
         STC   R0,BCTKEY1(,@06)                                 01S0378
*       R1=R1+PAGESIZE/2;                                       01S0379
         AL    R1,@CF01908                                      01S0379
*       GEN REFS(R1) SETS(R0)(ISK R0,R1);/* GET STORAGE KEY FOR 2ND
*                                      2K BLOCK                      */
         ISK R0,R1
*       BCTKEY2=R0;                                             01S0381
         L     @10,@CA01809                                     01S0381
         L     @06,VCTLPA(,VCCTREG)                             01S0381
         ALR   @10,@06                                          01S0381
         L     @10,IODBBCT(,@10)                                01S0381
         ALR   @10,@06                                          01S0381
         STC   R0,BCTKEY2(,@10)                                 01S0381
*       R0=BCTRADDR+VCTLPA;         /* VIRTUAL BUFFER ADDR   @Z40WI3P*/
         L     R0,BCTRADDR(,@10)                                01S0382
         ALR   R0,@06                                           01S0382
*       R2=VCTLPA;                  /* DUMMY VIRTUAL ADDRESS OF 01S0383
*                                      RECLAIMED PAGE        @Z40WI3P*/
         LR    R2,@06                                           01S0383
*       R1=PAGESIZE;                /* A 4K MOVE             @Z40WI3P*/
         L     @10,@CF01827                                     01S0384
         LR    R1,@10                                           01S0384
*       R3=PAGESIZE;                /* A 4K MOVE             @Z40WI3P*/
         LR    R3,@10                                           01S0385
*       MVCL(R0,R2);                /* COPY STORAGE TO BUFFER@Z40WI3P*/
         MVCL  R0,R2                                            01S0386
*       GO TO SINUPD;                                           01S0387
         B     SINUPD                                           01S0387
*     END;                                                      01S0388
*   RFY                                                         01S0389
*    (R0,                                                       01S0389
*     R1,                                                       01S0389
*     R2,                                                       01S0389
*     R3) UNRSTD;                   /*                       @Z40WI3P*/
@RF00373 DS    0H                                               01S0390
*                                                               01S0390
*   /*****************************************************************/
*   /*                                                               */
*   /* A BUFFER HAS BEEN OBTAINED AND INITIALIZED. NOW       @Z40WI3P*/
*   /* TRANSLATE THE LSID INTO A CCHHR AND A DEVICE ADDRESS. @Z40WI3P*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0390
*   SVC(ASMSVC);                    /* CONVERT THE LSID      @Z40WI3P*/
         SVC   6                                                01S0390
*   RESPECIFY                                                   01S0391
*     RETCODE RESTRICTED;                                       01S0391
*   IF RETCODE^=0 THEN                                          01S0392
         LTR   RETCODE,RETCODE                                  01S0392
         BNZ   @RT00392                                         01S0392
*     GO TO DQPGE;                  /* IF ERROR SKIP THIS PAGE       */
*   RESPECIFY                                                   01S0394
*     RETCODE UNRESTRICTED;                                     01S0394
*                                                               01S0395
*   /*****************************************************************/
*   /*                                                               */
*   /* BRING THE PAGE INTO MAIN STORAGE                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0395
*   CTIOTYPE=OFF;                   /* RESET THE CTIOTYPE FLAGS      */
         L     @10,VCTCCTV(,VCCTREG)                            01S0395
         MVI   CTIOTYPE(@10),B'00000000'                        01S0395
*   CTIODA=ON;                      /* INDICATE AN INPUT PAGE REQUEST*/
         OI    CTIODA(@10),B'00100000'                          01S0396
*   SVC(SIOSVC);                    /* PAGE IN THE PAGE DESIRED      */
         SVC   0                                                01S0397
*   RESPECIFY                                                   01S0398
*     RETCODE RESTRICTED;                                       01S0398
*   IF RETCODE^=0 THEN                                          01S0399
         LTR   RETCODE,RETCODE                                  01S0399
         BNZ   @RT00399                                         01S0399
*     GO TO DQPGE;                  /* IF AN ERROR OCCURRED, SKIP
*                                      THIS PAGE                     */
*   RESPECIFY                                                   01S0401
*     RETCODE UNRESTRICTED;                                     01S0401
*   CTIOTYPE=OFF;                   /* AGAIN RESET THE FLAGS         */
         L     @10,VCTCCTV(,VCCTREG)                            01S0402
         MVI   CTIOTYPE(@10),B'00000000'                        01S0402
*   CTIODA=ON;                      /* INDICATE AN INPUT REQUEST     */
         OI    CTIODA(@10),B'00100000'                          01S0403
*   SVC(WATSVC);                    /* WAIT FOR THE I/O TO COMPLETE  */
         SVC   1                                                01S0404
*   RESPECIFY                                                   01S0405
*     RETCODE RESTRICTED;                                       01S0405
*   IF RETCODE^=0 THEN                                          01S0406
         LTR   RETCODE,RETCODE                                  01S0406
         BNZ   @RT00406                                         01S0406
*     GO TO DQPGE;                  /* IF AN ERROR OCCURRED, SKIP
*                                      THIS PAGE                     */
*   RESPECIFY                                                   01S0408
*     RETCODE UNRESTRICTED;                                     01S0408
*                                                               01S0409
*   /*****************************************************************/
*   /*                                                               */
*   /* UPDATE THE BUFFER TABLE. DUMP PAGED IN BUFFER TO THE OUTPUT   */
*   /* TAPE AND WAIT FOR THE SUCCESSFULLY COMPLETED DUMP I/O         */
*   /* OPERATION                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0409
*SINUPD:                                                        01S0409
*   RESPECIFY                                                   01S0409
*     IODB BASED(ADDR(IODBOUT)+VCTLPA);                         01S0409
SINUPD   DS    0H                                               01S0410
*   CTIOTYPE=OFF;                   /* RESET THE CTIOTYPE FLAGS      */
         L     @10,VCTCCTV(,VCCTREG)                            01S0410
         MVI   CTIOTYPE(@10),B'00000000'                        01S0410
*   CTIODA=ON;                      /* INDICATE AN INPUT PAGE REQUEST*/
         OI    CTIODA(@10),B'00100000'                          01S0411
*   SVC(UPDSVC);                    /* DEQUEUE THE BCT FROM THE DA
*                                      IODB                          */
         SVC   9                                                01S0412
*   IODBBCT=VCTBCTC;                /* SET UP OUTPUT IODB ADDRESS    */
         L     @10,@CA01810                                     01S0413
         L     @06,VCTLPA(,VCCTREG)                             01S0413
         ALR   @10,@06                                          01S0413
         L     @15,VCTBCTC(,VCCTREG)                            01S0413
         ST    @15,IODBBCT(,@10)                                01S0413
*   CTIOTYPE=OFF;                   /* RESET THE TYPE FLAGS          */
         L     @10,VCTCCTV(,VCCTREG)                            01S0414
         MVI   CTIOTYPE(@10),B'00000000'                        01S0414
*   CTIOOUT=ON;                     /* INDICATE AN OUTPUT DUMP  01S0415
*                                      REQUEST                       */
         OI    CTIOOUT(@10),B'01000000'                         01S0415
*   BCTALLOC=ON;                    /* BUFFER IS NOW ALLOCATED TO THE
*                                      OUTPUT IODB                   */
*   BCTCOMP=OFF;                    /* I/O YET TO BE COMPLETED       */
         ALR   @15,@06                                          01S0417
         OI    BCTALLOC(@15),B'01000000'                        01S0417
         NI    BCTCOMP(@15),B'01111111'                         01S0417
*   SVC(SIOSVC);                    /* DUMP THE PAGE BUFFER TO THE
*                                      OUTPUT VOLUME                 */
         SVC   0                                                01S0418
*   RESPECIFY                                                   01S0419
*     RETCODE RESTRICTED;                                       01S0419
*   IF RETCODE=0 THEN                                           01S0420
         LTR   RETCODE,RETCODE                                  01S0420
         BNZ   @RF00420                                         01S0420
*     DO;                           /* IF NORMAL COMPLETION, WAIT FOR
*                                      I/O                           */
*       CTIOTYPE=OFF;               /* RESET THE I/O FLAGS           */
         L     @14,VCTCCTV(,VCCTREG)                            01S0422
         MVI   CTIOTYPE(@14),B'00000000'                        01S0422
*       CTIOOUT=ON;                 /* OUTPUT REQUEST                */
         OI    CTIOOUT(@14),B'01000000'                         01S0423
*       SVC(WATSVC);                /* WAIT FOR THE OUTPUT I/O TO
*                                      COMPLETE                      */
         SVC   1                                                01S0424
*       IF RETCODE=0 THEN                                       01S0425
         LTR   RETCODE,RETCODE                                  01S0425
         BZ    @RT00425                                         01S0425
*         RETURN;                   /* PAGE DUMPED SUCCESSFULLY 01S0426
*                                                            @Z40WI3P*/
*     END;                                                      01S0427
*   RESPECIFY                                                   01S0428
*     RETCODE UNRESTRICTED;                                     01S0428
@RF00420 DS    0H                                               01S0429
*   IF IODBBCT^=0 THEN                                          01S0429
         SLR   @10,@10                                          01S0429
         L     @06,@CA01810                                     01S0429
         L     @15,VCTLPA(,VCCTREG)                             01S0429
         ALR   @06,@15                                          01S0429
         L     @14,IODBBCT(,@06)                                01S0429
         CR    @14,@10                                          01S0429
         BE    @RF00429                                         01S0429
*     DO;                                                       01S0430
*       BCTALLOC=OFF;               /* AN ERROR OCCURRED, DEALLOCATE
*                                      THE PAGE                      */
*       BCTCOMP=OFF;                /* I/O NOT COMPLETED             */
         ALR   @14,@15                                          01S0432
         NI    BCTALLOC(@14),B'00111111'                        01S0432
*       IODBBCT=0;                  /* RESET THE STATE OF THE OUTPUT
*                                      IODB                          */
         ST    @10,IODBBCT(,@06)                                01S0433
*     END;                                                      01S0434
*   GO TO MOVEPGE;                                              01S0435
         B     MOVEPGE                                          01S0435
*DQPGE:                                                         01S0436
*   RESPECIFY                                                   01S0436
*     R1 RESTRICTED;                                            01S0436
DQPGE    DS    0H                                               01S0437
*   CTIOTYPE=OFF;                   /* SET UP UPDATE PARAMETERS      */
         L     @10,VCTCCTV(,VCCTREG)                            01S0437
         MVI   CTIOTYPE(@10),B'00000000'                        01S0437
*   CTIODA=ON;                      /* USE DA IODB                   */
         OI    CTIODA(@10),B'00100000'                          01S0438
*   SVC(UPDSVC);                    /* DEQUEUE THE PAGE FROM THE DA
*                                      IODB                          */
         SVC   9                                                01S0439
*MOVEPGE:                                                       01S0440
*   VLNG22I=LENGTH(DMP22I);         /* LENGTH OF DYNAMIC MESSAGE TEXT*/
MOVEPGE  L     @10,@CA01813                                     01S0440
         AL    @10,VCTLPA(,VCCTREG)                             01S0440
         MVI   VLNG22I(@10),X'1D'                               01S0440
*   CVTADDR=ADDR(SPCTPGT);          /* ADDRESS TO CONVERT WHICH WAS
*                                      NOT DUMPED                    */
         LA    @10,SPCTPGT(,SEGSPTR)                            01S0441
         ST    @10,CVTADDR                                      01S0441
*   CVTOUT=ADDR(SINMSGA);           /* OUTPUT AREA FOR ADDRESS       */
         LA    @10,SINMSGA                                      01S0442
         ST    @10,CVTOUT                                       01S0442
*   CVTLNG=LENGTH(SGTPTO);          /* LENGTH OF ADDRESS             */
         MVC   CVTLNG(2),@CH00192                               01S0443
*   R1=ADDR(CVTAREA);               /* SET UP PARAMETER LIST ADDRESS */
         LA    R1,CVTAREA                                       01S0444
*   SVC(BINSVC);                    /* CONVERT THE ADDRESS NOT DUMPED
*                                      TO EBCDIC                     */
         SVC   28                                               01S0445
*   VDMP22I=SINMSG;                 /* MESSAGE TEXT OF ERROR         */
         L     @10,@CA01811                                     01S0446
         AL    @10,VCTLPA(,VCCTREG)                             01S0446
         MVI   VDMP22I+23(@10),C' '                             01S0446
         MVC   VDMP22I+24(5,@10),VDMP22I+23(@10)                01S0446
         MVC   VDMP22I(23,@10),SINMSG                           01S0446
*   R1=AMD022I;                     /* SET UP MESSAGE TEXT ID FOR
*                                      CONSOLE                       */
         LA    R1,22                                            01S0447
*   SVC(CONSVC);                    /* ISSUE ERROR MESSAGE           */
         SVC   3                                                01S0448
*   RESPECIFY                                                   01S0449
*     R1 UNRESTRICTED;                                          01S0449
*   PTRTRSA='FFFFFFFF'X;            /* INVALIDATE THE RSA            */
         L     @10,SINRSA                                       01S0450
         MVC   PTRTRSA(4,@10),@CF01853                          01S0450
*   RETURN;                         /* RETURN TO CALLER      @Z40WI3P*/
@EL00002 L     @13,4(,@13)                                      01S0451
@EF00002 DS    0H                                               01S0451
@ER00002 LM    @14,@12,12(@13)                                  01S0451
         BR    @14                                              01S0451
*   END SINDUMP;                    /*                       @Z40WI3P*/
         B     @EL00002                                         01S0452
*                                                               01S0453
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE USES THE RSM LSQA FRAME QUEUE TO      @Z40WI3P*/
*   /* SEARCH THE PFT FOR A MATCHING VBN AND ASID. THIS      @Z40WI3P*/
*   /* WILL PROVIDE THE RBN TO THE CALLER IN R1 CORRES-      @Z40WI3P*/
*   /* PONDING TO THE VBN PASSED IN R0.                      @Z40WI3P*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0453
*CHKPFTE:                           /*                       @Z40WI3P*/
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Z40WI3P*/
CHKPFTE  DS    0H                                               01S0454
*   RESPECIFY                                                   01S0454
*    (R0,                                                       01S0454
*     R1,                                                       01S0454
*     RETREG) RESTRICTED;           /*                       @Z40WI3P*/
*   DCL                                                         01S0455
*     SHF4BITS CONSTANT(16);        /* CONSTANT FOR SHIFTING BY 4
*                                      BITS                  @Z40WI3P*/
*   R1=RSMLSQAF;                    /* GET LSQA FRAME QUEUE ADDRESS
*                                                            @Z40WI3P*/
         L     @15,ASCBPTR(,VCCTREG)                            01S0456
         L     @15,RSMHDPTR(,@15)                               01S0456
         LH    R1,RSMLSQAF(,@15)                                01S0456
         N     R1,@CF01919                                      01S0456
*   DO WHILE R1^=0;                 /* SEARCH TO END OF FRAME QUEUE
*                                                            @Z40WI3P*/
         B     @DE00457                                         01S0457
@DL00457 DS    0H                                               01S0458
*     PFTEPTR=PVTPFTP+R1*(LENGTH(PFTE)/SHF4BITS);/* GET PFTE ADDRESS
*                                                            @Z40WI3P*/
         L     @15,CVTPTR                                       01S0458
         L     @15,PVTPTR(,@15)                                 01S0458
         LR    PFTEPTR,R1                                       01S0458
         AL    PFTEPTR,PVTPFTP(,@15)                            01S0458
*     IF PFTIRRG=OFF&PFTVBN=R0&PFTASID=ASCBASID THEN/* LSQA FRAME
*                                      FOUND?                @Z40WI3P*/
         TM    PFTIRRG(PFTEPTR),B'00010000'                     01S0459
         BNZ   @RF00459                                         01S0459
         LH    @15,PFTVBN(,PFTEPTR)                             01S0459
         N     @15,@CF01919                                     01S0459
         CR    R0,@15                                           01S0459
         BNE   @RF00459                                         01S0459
         L     @15,ASCBPTR(,VCCTREG)                            01S0459
         CLC   PFTASID(2,PFTEPTR),ASCBASID(@15)                 01S0459
         BNE   @RF00459                                         01S0459
*       RETURN CODE(0);             /* YES-SUCCESSFUL        @Z40WI3P*/
         SLR   @15,@15                                          01S0460
@EL00003 DS    0H                                               01S0460
@EF00003 DS    0H                                               01S0460
@ER00003 BR    @14                                              01S0460
*     R1=PFTFQPTR;                  /* CONTINUE DOWN LSQA FRAME QUEUE
*                                                            @Z40WI3P*/
@RF00459 LH    R1,PFTFQPTR(,PFTEPTR)                            01S0461
         N     R1,@CF01919                                      01S0461
*   END;                            /*                       @Z40WI3P*/
@DE00457 LTR   R1,R1                                            01S0462
         BNZ   @DL00457                                         01S0462
*   RETURN CODE(4);                 /* ERROR-LSQA ENTRY NOT FOUND
*                                                            @Z40WI3P*/
         LA    @15,4                                            01S0463
         BR    @14                                              01S0463
*   RESPECIFY                                                   01S0464
*    (R0,                                                       01S0464
*     R1,                                                       01S0464
*     RETREG) UNRESTRICTED;         /*                       @Z40WI3P*/
*   END CHKPFTE;                    /*                       @Z40WI3P*/
*                                                               01S0466
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE SEARCHES THE SPCT LSQA ENTRIES FOR    @Z40WI3P*/
*   /* ONE WHICH MATCHES THE VBN PASSED IN R0 AS INPUT.      @Z40WI3P*/
*   /* IF AN ENTRY IS FOUND, ITS ADDRESS IS RETURNED IN      @Z40WI3P*/
*   /* R1, WITH A RETURN CODE OF 0. OTHERWISE A RETURN       @Z40WI3P*/
*   /* CODE OF 4 IS RETURNED.                                @Z40WI3P*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0466
*SRCHSPCT:                          /*                       @Z40WI3P*/
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Z40WI3P*/
SRCHSPCT DS    0H                                               01S0467
*   DCL                                                         01S0467
*    (SWAPPTR,                                                  01S0467
*     SWP) PTR(31);                 /* PTR TO LSQA ENTRY AND SPCT
*                                      EXTENSION             @Z40WI3P*/
*   DCL                                                         01S0468
*     SRCHI FIXED(31);              /* LOOP COUNTER          @Z40WI3P*/
*   RESPECIFY                                                   01S0469
*    (R0,                                                       01S0469
*     R1,                                                       01S0469
*     RETREG) RESTRICTED;           /*                       @Z40WI3P*/
*   RESPECIFY                                                   01S0470
*     SPCTEXTM BASED(SWP);          /*                       @Z40WI3P*/
*   RESPECIFY                                                   01S0471
*     SPCTSWPE BASED(SWAPPTR);      /*                       @Z40WI3P*/
*   IF RSMSPCT=0 THEN               /* WAS THERE A SPCT?     @Z40WI3P*/
         L     @15,ASCBPTR(,VCCTREG)                            01S0472
         L     @15,RSMHDPTR(,@15)                               01S0472
         L     @15,RSMSPCT(,@15)                                01S0472
         LTR   @15,@15                                          01S0472
         BNZ   @RF00472                                         01S0472
*     RETURN CODE(4);               /* NO-ERROR RETURN       @Z40WI3P*/
         LA    @15,4                                            01S0473
@EL00004 DS    0H                                               01S0473
@EF00004 DS    0H                                               01S0473
@ER00004 BR    @14                                              01S0473
*   SWP=ADDR(SPCTSWAP);             /* GET ADDRESS OF 1ST    @Z40WI3P
*                                      EXTENSION             @Z40WI3P*/
@RF00472 L     @15,ASCBPTR(,VCCTREG)                            01S0474
         L     @15,RSMHDPTR(,@15)                               01S0474
         L     @15,SPCTPTR(,@15)                                01S0474
         LA    SWP,SPCTSWAP(,@15)                               01S0474
*   SWAPPTR=ADDR(SPCTENT);          /* GET ADDR OF 1ST ENTRY @Z40WI3P*/
         LA    SWAPPTR,SPCTENT(,SWP)                            01S0475
*   DO SRCHI=SPCTLSQA TO 1 BY-1 WHILE/* SEARCH ALL LSQA      @Z40WI3P*/
*         (SWP^=0)&SPCTLSQ=ON;      /* ENTRIES UNTIL COUNT OR   01S0476
*                                      EXTENSIONS ARE DONE OR NON-
*                                      LSQA ENTRY IS FOUND   @Z40WI3P*/
         LH    SRCHI,SPCTLSQA(,@15)                             01S0476
         B     @DE00476                                         01S0476
@DL00476 SLR   @15,@15                                          01S0476
         CR    SWP,@15                                          01S0476
         BE    @DC00476                                         01S0476
         TM    SPCTLSQ(SWAPPTR),B'01000000'                     01S0476
         BNO   @DC00476                                         01S0476
*     IF(SPCTVBN&PRBNMASK)=R0 THEN  /* A MATCH FOUND?        @Z40WI3P*/
         L     @10,@CF01825                                     01S0477
         LH    @09,SPCTVBN(,SWAPPTR)                            01S0477
         N     @09,@CF01919                                     01S0477
         NR    @10,@09                                          01S0477
         CR    @10,R0                                           01S0477
         BNE   @RF00477                                         01S0477
*       DO;                         /* YES-RETURN ADDR OF LSQA ENTRY
*                                                            @Z40WI3P*/
*         R1=SWAPPTR;               /* ADDRESS OF SPCT LSQA ENTRY
*                                                            @Z40WI3P*/
         LR    R1,SWAPPTR                                       01S0479
*         RETURN CODE(0);           /* RETURN SUCCESSFULLY   @Z40WI3P*/
         BR    @14                                              01S0480
*       END;                        /*                       @Z40WI3P*/
*     SWAPPTR=SWAPPTR+LENGTH(SPCTENTS);/* NEXT LSQA ENTRY    @Z40WI3P*/
@RF00477 AL    SWAPPTR,@CF00201                                 01S0482
*     IF SWAPPTR=ADDR(SPCTXEND) THEN/* END OF CURRENT EXTENSION?
*                                                            @Z40WI3P*/
         LA    @15,SPCTXEND(,SWP)                               01S0483
         CR    SWAPPTR,@15                                      01S0483
         BNE   @RF00483                                         01S0483
*       DO;                         /* YES-GET NEXT EXTENSION   01S0484
*                                                            @Z40WI3P*/
*         SWP=SPCTEXT;              /* GET NEXT EXTENSION ADDRESS
*                                                            @Z40WI3P*/
         L     SWP,SPCTEXT(,SWP)                                01S0485
*         SWAPPTR=ADDR(SPCTENT);    /* GET 1ST LSQA ENTRY ADDRESS
*                                                            @Z40WI3P*/
         LA    SWAPPTR,SPCTENT(,SWP)                            01S0486
*       END;                        /*                       @Z40WI3P*/
*   END;                            /*                       @Z40WI3P*/
@RF00483 BCTR  SRCHI,0                                          01S0488
@DE00476 LTR   SRCHI,SRCHI                                      01S0488
         BP    @DL00476                                         01S0488
@DC00476 DS    0H                                               01S0489
*   RETURN CODE(4);                 /* ENTRY NOT FOUND-RETURN WITH
*                                      ERROR CODE            @Z40WI3P*/
         LA    @15,4                                            01S0489
         BR    @14                                              01S0489
*   RESPECIFY                                                   01S0490
*    (R0,                                                       01S0490
*     R1,                                                       01S0490
*     RETREG) UNRESTRICTED;         /*                       @Z40WI3P*/
*   END SRCHSPCT;                   /*                       @Z40WI3P*/
*   END AMDSASIN                                                01S0492
*                                                               01S0492
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHASPCT )                                       */
*/*%INCLUDE SYSLIB  (IHASGTE )                                       */
*/*%INCLUDE SYSLIB  (IHARSMHD)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHAPVT  )                                       */
*/*%INCLUDE SYSLIB  (IHAPFTE )                                       */
*/*%INCLUDE SYSLIB  (IHAPGTE )                                       */
*/*%INCLUDE SYSLIB  (AMDSARMK)                                       */
*/*%INCLUDE SYSLIB  (IRAOUCB )                                       */
*                                                               01S0492
*       ;                                                       01S0492
@DATA    DS    0H
@CH00192 DC    H'3'
         DS    0F
@SA00001 DS    18F
@SA00002 DS    18F
         DS    0F
@CF00233 DC    F'2'
@CF00038 DC    F'4'
@CF00201 DC    F'6'
@CH00201 EQU   @CF00201+2
@CF01591 DC    F'30'
@CF00913 DC    F'256'
@CF01908 DC    F'2048'
@CF01827 DC    F'4096'
@CF01393 DC    F'30712'
@CF01806 DC    XL4'00010000'
@CF01853 DC    XL4'FFFFFFFF'
@CF01863 DC    XL4'00000FFF'
@CF01874 DC    XL4'0F000000'
@CF01888 DC    XL4'00FFF000'
@CF01919 DC    XL4'0000FFFF'
@CF01825 DC    XL4'FFF0'
@CA01809 DC    A(IODBDA)
@CA01810 DC    A(IODBOUT)
@CA01811 DC    A(DMP22I)
@CA01813 DC    A(LNG22I)
         DS    0D
SINRSA   DS    A
@TS00001 DS    CL3
@CC01846 DC    C'LSIN'
@CB01855 DC    X'FFF000'
         DS    CL2
SINRCB   DS    CL20
         ORG   SINRCB
@NM00053 DS    AL4
SINSTOR  DC    A(0)
@NM00054 DS    AL4
EXITADDR DS    AL4
@NM00055 DS    AL4
         ORG   SINRCB+20
CVTAREA  DS    CL10
         ORG   CVTAREA
CVTADDR  DS    AL4
CVTOUT   DS    AL4
CVTLNG   DS    FL2
         ORG   CVTAREA+10
PGECAL   DS    CL3
         ORG   PGECAL
PGEVBN   DS    BL2
@NM00056 DS    BL1
         ORG   PGECAL+3
SINSWTCH DC    X'00'
         ORG   SINSWTCH
RECLMSW  DS    BL1
         ORG   SINSWTCH+1
SINMSG   DS    CL23
         ORG   SINMSG
@NM00057 DC    CL17'PAGE TABLE, ADDR='
SINMSGA  DS    CL6
         ORG   SINMSG+23
SINMSG1  DC    CL12'LOCAL MEMORY'
AMDSASIN CSECT
         DS   0H
SINPATCH DC ((@DATA-@PSTART)/20)X'00'
AMDSASIN CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SRCHI    EQU   @08
SWP      EQU   @06
PTRTEND  EQU   @02
SINSEGPT EQU   @02
SINBUFSV EQU   @04
SAVESPCT EQU   @06
I        EQU   @03
WKSNSTOR EQU   @02
PTEPTR   EQU   @02
PFTEPTR  EQU   @04
SWAPPTR  EQU   @04
SEGSPTR  EQU   @07
VCCTREG  EQU   @12
RETREG   EQU   @14
RETCODE  EQU   @15
BASEREG  EQU   @11
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R13      EQU   @13
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R14      EQU   @14
R15      EQU   @15
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
         EXTRN IODBDA
         EXTRN IODBOUT
         EXTRN DMP22I
         EXTRN LNG22I
CVTPTR   EQU   16
SADMPLSD EQU   3312
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBASID EQU   ASCB+36
ASCBSTOR EQU   ASCB+44
ASCBRSM  EQU   ASCB+52
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBNOQ  EQU   ASCBDSP1
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBOUCB EQU   ASCB+144
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
SPCT     EQU   0
SPCTLSQA EQU   SPCT+6
SPCTSSEG EQU   SPCT+9
SPCTFLG1 EQU   SPCT+10
SPCTPSET EQU   SPCTFLG1
SPCTSWAP EQU   SPCT+16
SPCTSEGS EQU   SPCT+72
SPCTSEGE EQU   0
SPCTSEGX EQU   SPCTSEGE
SPCTPGT  EQU   SPCTSEGE+1
SPCTSWPE EQU   0
SPCTLS   EQU   SPCTSWPE
SPCTFLAG EQU   SPCTLS
SPCTLVAL EQU   SPCTFLAG
SPCTLSQ  EQU   SPCTFLAG
SPCTSSID EQU   SPCTLS+1
SPCTVBN  EQU   SPCTLS+4
SPCTEXTM EQU   0
SPCTEXT  EQU   SPCTEXTM
SPCTENT  EQU   SPCTEXTM+8
SPCTENTS EQU   SPCTENT
SPCTXEND EQU   SPCTENT+48
SGTSTE   EQU   0
SGTLK    EQU   SGTSTE
SGTPTO   EQU   SGTSTE+1
SGTBYTE  EQU   SGTPTO+2
SGTPAM   EQU   SGTBYTE
RSMHD    EQU   0
RSMSPCT  EQU   RSMHD+4
RSMFLG1  EQU   RSMHD+12
RSMQS    EQU   RSMHD+20
RSMLFQ   EQU   RSMQS
RSMLSQA  EQU   RSMQS+4
RSMLSQAF EQU   RSMLSQA
RSMLIOQ  EQU   RSMQS+8
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTNUCB  EQU   CVTMAP+128
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
PVT      EQU   0
PVTFLAG1 EQU   PVT
PVTPFTP  EQU   PVT+12
PVTQS    EQU   PVT+304
PVTWSAX  EQU   PVT+344
PFTE     EQU   0
PFTPGID  EQU   PFTE
PFTASID  EQU   PFTPGID
PFTVBN   EQU   PFTPGID+2
PFTQPTRS EQU   PFTE+4
PFTFQPTR EQU   PFTQPTRS
PFTFLAG1 EQU   PFTE+12
PFTFLAG2 EQU   PFTE+13
PFTIRRG  EQU   PFTFLAG2
PGTPTE   EQU   0
PGTRSA   EQU   PGTPTE
PGTBITS  EQU   PGTRSA+1
PGTPVM   EQU   PGTBITS
ARB      EQU   0
BCTH     EQU   0
BCT      EQU   0
BCTKEY1  EQU   BCT+8
BCTKEY2  EQU   BCT+9
BCTVADDR EQU   BCT+12
BCTRADDR EQU   BCT+16
BCTLSID  EQU   BCT+40
BCTFLGT  EQU   BCT+44
BCTFLGI  EQU   BCT+45
BCTCOMP  EQU   BCTFLGI
BCTALLOC EQU   BCTFLGI
BCTSWPDS EQU   BCTFLGI
CCT      EQU   0
CTFLG1   EQU   CCT+1
CTFLG2   EQU   CCT+2
CTLOWFLG EQU   CCT+48
CTDMPTYP EQU   CCT+52
CTIOTYPE EQU   CTDMPTYP
CTIOOUT  EQU   CTIOTYPE
CTIODA   EQU   CTIOTYPE
CTCONFLG EQU   CTDMPTYP+2
CTBUFTYP EQU   CTDMPTYP+3
CTPGT    EQU   CTBUFTYP
CTPRMT1  EQU   CTDMPTYP+24
CTPRMT2  EQU   CTDMPTYP+26
CCW      EQU   0
CCWFLAGS EQU   CCW+4
CSW      EQU   0
CSWKEY00 EQU   CSW
CSWUSTAT EQU   CSW+4
CSWCSTAT EQU   CSW+5
DSCE     EQU   0
IODB     EQU   0
IODBFLAG EQU   IODB+8
IODBBCT  EQU   IODB+16
IODBCCHH EQU   IODB+32
IODBSRCH EQU   IODBCCHH+3
MDCE     EQU   0
MDCB     EQU   0
MDCBGRS  EQU   MDCB+16
MDCBFLGS EQU   MDCB+86
PSW      EQU   0
PSWSM    EQU   PSW
@NM00044 EQU   PSW+1
PSWCCPM  EQU   PSW+2
@NM00047 EQU   PSW+3
PTRT     EQU   0
PTRTRS   EQU   PTRT+8
PTRTVS   EQU   PTRT+1032
PTRTRSA  EQU   0
PTRTVSA  EQU   0
RCB      EQU   0
RCBNEXT  EQU   RCB
RCBSAVE  EQU   RCB+8
RCBBASE  EQU   RCB+16
VCCT     EQU   0
VCTRCB   EQU   VCCT+4
VCTRECSN EQU   VCCT+8
VCTFLGS  EQU   VCCT+9
VCTMEMIN EQU   VCTFLGS
VCTSARTB EQU   VCTFLGS
VCTLRCLM EQU   VCTFLGS
VCTMDCE  EQU   VCCT+12
VCTSTOR  EQU   VCCT+16
VCTDSCE  EQU   VCCT+20
VCTBCTH  EQU   VCCT+24
VCTBCTC  EQU   VCCT+28
VCTASCB  EQU   VCCT+48
VCTPTRT  EQU   VCCT+56
VCTCBID  EQU   VCCT+64
VCTCBIDN EQU   VCTCBID+7
VCTCBADR EQU   VCCT+80
VCTLPA   EQU   VCCT+84
VCTPGT   EQU   VCCT+88
VCTCCTV  EQU   VCCT+104
SDL      EQU   0
REGLOCAL EQU   0
SAVEFORM EQU   0
SAVEBACK EQU   SAVEFORM+4
SAVER15  EQU   SAVEFORM+16
OUCB     EQU   0
OUCBQFL  EQU   OUCB+16
OUCBOUT  EQU   OUCBQFL
OUCBSFL  EQU   OUCB+17
OUCBYFL  EQU   OUCB+18
OUCBAFL  EQU   OUCB+19
OUCBTFL  EQU   OUCB+20
OUCBEFL  EQU   OUCB+21
OUCBCSW  EQU   OUCB+68
OUCBCFL  EQU   OUCBCSW+2
VDMP22I  EQU   0
VLNG22I  EQU   0
PGTEND   EQU   0
SGTEND   EQU   0
ASCBPTR  EQU   VCTASCB
SPCTPTR  EQU   RSMSPCT
STEPTR   EQU   SINRSA
RSMHDPTR EQU   ASCBRSM
CVTS01   EQU   CVTPGSIA
CVTPVTP  EQU   CVTS01+8
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTSHRVM EQU   CVTS01+68
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PVTPTR   EQU   CVTPVTP
CTLOWDMP EQU   CTDMPTYP
OUCBPTR  EQU   ASCBOUCB
SINVADDR EQU   PTRTRSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CTADDRE  EQU   CTLOWDMP+4
CTADDRS  EQU   CTLOWDMP
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
OUCBEND  EQU   OUCB+96
OUCBFMT  EQU   OUCB+94
OUCBWMT  EQU   OUCB+92
OUCBSAT  EQU   OUCB+88
OUCBRMR  EQU   OUCB+84
OUCBTMP  EQU   OUCB+80
OUCBPGR  EQU   OUCB+78
OUCBIOR  EQU   OUCB+76
OUCBCPR  EQU   OUCB+74
OUCBWMR  EQU   OUCB+72
OUCBPFL  EQU   OUCBCSW+3
OUCBCF2  EQU   OUCBCFL
OUCBRSM  EQU   OUCBCFL
OUCBRDY  EQU   OUCBCFL
OUCBACN  EQU   OUCBCSW
OUCBACT  EQU   OUCB+64
OUCBTMF  EQU   OUCB+60
OUCBWSS  EQU   OUCB+58
OUCBPSO  EQU   OUCB+56
OUCBTMO  EQU   OUCB+52
OUCBTMS  EQU   OUCB+48
OUCBWMS  EQU   OUCB+44
OUCBTMW  EQU   OUCB+40
OUCBIMCB EQU   OUCB+36
OUCBASCB EQU   OUCB+32
OUCBSWC  EQU   OUCB+30
OUCBWMG  EQU   OUCB+28
OUCBPGP  EQU   OUCB+27
OUCBNDP  EQU   OUCB+26
OUCBRPG  EQU   OUCB+25
OUCBNPG  EQU   OUCB+24
OUCBNDS  EQU   OUCB+23
OUCBNQC  EQU   OUCB+22
OUCBMWT  EQU   OUCBEFL
OUCBQSC  EQU   OUCBEFL
OUCBQSS  EQU   OUCBEFL
OUCBNQF  EQU   OUCBEFL
OUCBCIM  EQU   OUCBEFL
OUCBOWT  EQU   OUCBEFL
OUCBTRM  EQU   OUCBEFL
OUCBLWT  EQU   OUCBEFL
OUCBINC  EQU   OUCBTFL
OUCBINP  EQU   OUCBTFL
OUCBMAR  EQU   OUCBTFL
OUCBPCH  EQU   OUCBTFL
OUCBRTR  EQU   OUCBTFL
OUCBNTR  EQU   OUCBTFL
OUCBSTR  EQU   OUCBTFL
OUCBATR  EQU   OUCBTFL
OUCBASW  EQU   OUCBAFL
OUCBNWT  EQU   OUCBAFL
OUCBVRP  EQU   OUCBAFL
OUCBVSW  EQU   OUCBAFL
OUCBCPL  EQU   OUCBAFL
OUCBRMA  EQU   OUCBAFL
OUCBAPG  EQU   OUCBAFL
OUCBWLM  EQU   OUCBAFL
OUCBPSTE EQU   OUCBYFL
OUCBDTA  EQU   OUCBYFL
OUCBAXS  EQU   OUCBYFL
OUCBCTU  EQU   OUCBYFL
OUCBMNT  EQU   OUCBYFL
OUCBLOG  EQU   OUCBYFL
OUCBSTT  EQU   OUCBYFL
OUCBVLD  EQU   OUCBYFL
OUCBSCN  EQU   OUCBSFL
OUCBENQ  EQU   OUCBSFL
OUCBPVL  EQU   OUCBSFL
OUCBGOA  EQU   OUCBSFL
OUCBSF3  EQU   OUCBSFL
OUCBWMA  EQU   OUCBSFL
OUCBCTI  EQU   OUCBSFL
OUCBNSW  EQU   OUCBSFL
OUCBQF7  EQU   OUCBQFL
OUCBOTM  EQU   OUCBQFL
OUCBOFF  EQU   OUCBQFL
OUCBQF3  EQU   OUCBQFL
OUCBGOB  EQU   OUCBQFL
OUCBGOI  EQU   OUCBQFL
OUCBGOO  EQU   OUCBQFL
OUCBTMA  EQU   OUCB+12
OUCBBCK  EQU   OUCB+8
OUCBFWD  EQU   OUCB+4
OUCBNAME EQU   OUCB
SAVER12  EQU   SAVEFORM+68
SAVER11  EQU   SAVEFORM+64
SAVER10  EQU   SAVEFORM+60
SAVER9   EQU   SAVEFORM+56
SAVER8   EQU   SAVEFORM+52
SAVER7   EQU   SAVEFORM+48
SAVER6   EQU   SAVEFORM+44
SAVER5   EQU   SAVEFORM+40
SAVER4   EQU   SAVEFORM+36
SAVER3   EQU   SAVEFORM+32
SAVER2   EQU   SAVEFORM+28
SAVER1   EQU   SAVEFORM+24
SAVER0   EQU   SAVEFORM+20
SAVER14  EQU   SAVEFORM+12
SAVENEXT EQU   SAVEFORM+8
SAVENAME EQU   SAVEFORM+1
SAVEID   EQU   SAVEFORM
REGL15   EQU   REGLOCAL+60
REGL14   EQU   REGLOCAL+56
REGL13   EQU   REGLOCAL+52
REGL12   EQU   REGLOCAL+48
REGL11   EQU   REGLOCAL+44
REGL10   EQU   REGLOCAL+40
REGL9    EQU   REGLOCAL+36
REGL8    EQU   REGLOCAL+32
REGL7    EQU   REGLOCAL+28
REGL6    EQU   REGLOCAL+24
REGL5    EQU   REGLOCAL+20
REGL4    EQU   REGLOCAL+16
REGL3    EQU   REGLOCAL+12
REGL2    EQU   REGLOCAL+8
REGL1    EQU   REGLOCAL+4
REGL0    EQU   REGLOCAL
SDLSPN   EQU   SDL+1
SDLNUM   EQU   SDL
VCTVCCTV EQU   VCCT+108
@NM00052 EQU   VCCT+102
VCTEXTRA EQU   VCCT+100
VCTCPOUT EQU   VCCT+96
VCTSVCTB EQU   VCCT+92
VCTJBNME EQU   VCCT+72
@NM00051 EQU   VCTCBID
VCTAUDIT EQU   VCCT+62
VCTASID  EQU   VCCT+60
@NM00050 EQU   VCCT+52
VCTCPUC  EQU   VCCT+46
VCTWKC   EQU   VCCT+45
VCTWKHI  EQU   VCCT+44
VCTSUBPL EQU   VCCT+40
VCTARB   EQU   VCCT+36
VCTIODB  EQU   VCCT+32
VCTRECVA EQU   VCCT+10
@NM00049 EQU   VCTFLGS
VCTNOI22 EQU   VCTFLGS
VCTASMIC EQU   VCTFLGS
VCTSADMP EQU   VCTFLGS
@NM00048 EQU   VCTRECSN
VCTRSMR  EQU   VCTRECSN
VCTEXIR  EQU   VCTRECSN
VCTUPDR  EQU   VCTRECSN
VCTPGIR  EQU   VCTRECSN
VCTVCT   EQU   VCCT
RCBEXIT  EQU   RCB+12
RCBSTOR  EQU   RCB+4
PTRTLGID EQU   PTRT+4
PTRTPTRT EQU   PTRT
PSWEND   EQU   PSW+8
PSWIA    EQU   PSW+4
PSWSP    EQU   @NM00047
PSWSIG   EQU   PSWCCPM
PSWEU    EQU   PSWCCPM
PSWDO    EQU   PSWCCPM
PSWFPO   EQU   PSWCCPM
@NM00046 EQU   PSWCCPM
@NM00045 EQU   PSWCCPM
PSWPRBLM EQU   @NM00044
PSWAIT   EQU   @NM00044
PSWMCH   EQU   @NM00044
PSWMODE  EQU   @NM00044
PSWKEY   EQU   @NM00044
PSWXTRNL EQU   PSWSM
PSWIO    EQU   PSWSM
PSWDAT   EQU   PSWSM
@NM00043 EQU   PSWSM
@NM00042 EQU   PSWSM
@NM00041 EQU   PSWSM
PSWPER   EQU   PSWSM
@NM00040 EQU   PSWSM
@NM00039 EQU   MDCB+87
@NM00038 EQU   MDCBFLGS
MDCBDUMP EQU   MDCBFLGS
MDCBASMI EQU   MDCBFLGS
MDCBPI   EQU   MDCB+84
MDCBSTOR EQU   MDCB+80
MDCBGR15 EQU   MDCBGRS+60
MDCBGR14 EQU   MDCBGRS+56
MDCBGR13 EQU   MDCBGRS+52
MDCBGR12 EQU   MDCBGRS+48
MDCBGR11 EQU   MDCBGRS+44
MDCBGR10 EQU   MDCBGRS+40
MDCBGR9  EQU   MDCBGRS+36
MDCBGR8  EQU   MDCBGRS+32
MDCBGR7  EQU   MDCBGRS+28
MDCBGR6  EQU   MDCBGRS+24
MDCBGR5  EQU   MDCBGRS+20
MDCBGR4  EQU   MDCBGRS+16
MDCBGR3  EQU   MDCBGRS+12
MDCBGR2  EQU   MDCBGRS+8
MDCBGR1  EQU   MDCBGRS+4
MDCBGR0  EQU   MDCBGRS
MDCBPSW  EQU   MDCB+8
MDCBNEXT EQU   MDCB+4
MDCBMDCB EQU   MDCB
MDCEAVIL EQU   MDCE+8
MDCEACTV EQU   MDCE+4
MDCEMDCE EQU   MDCE
IODBSENS EQU   IODB+40
IODBR    EQU   IODBCCHH+7
IODBHH   EQU   IODBSRCH+2
IODBCC   EQU   IODBSRCH
IODBSEEK EQU   IODBCCHH+1
IODBM    EQU   IODBCCHH
IODBCSW  EQU   IODB+24
IODBCAW  EQU   IODB+20
IODBCPU  EQU   IODB+14
IODBTYPE EQU   IODB+13
IODBCLAS EQU   IODB+12
IODBDEV  EQU   IODB+10
@NM00037 EQU   IODBFLAG+1
IODBSTRT EQU   IODBFLAG
IODBCONW EQU   IODBFLAG
IODBACTV EQU   IODBFLAG
IODBHALT EQU   IODBFLAG
IODBIOC  EQU   IODBFLAG
IODBINT  EQU   IODBFLAG
IODBPTRM EQU   IODBFLAG
IODBTERM EQU   IODBFLAG
IODBIDEN EQU   IODB+4
IODBIODB EQU   IODB
DSCETEND EQU   DSCE+20
DSCETCUR EQU   DSCE+16
DSCETBEG EQU   DSCE+12
DSCENEXT EQU   DSCE+8
DSCEBEGN EQU   DSCE+4
DSCEDSCE EQU   DSCE
CSWCNT   EQU   CSW+6
CSWCHC   EQU   CSWCSTAT
CSWICC   EQU   CSWCSTAT
CSWCCC   EQU   CSWCSTAT
CSWCDC   EQU   CSWCSTAT
CSWPTC   EQU   CSWCSTAT
CSWPGC   EQU   CSWCSTAT
CSWIL    EQU   CSWCSTAT
CSWPCI   EQU   CSWCSTAT
CSWUE    EQU   CSWUSTAT
CSWUC    EQU   CSWUSTAT
CSWDE    EQU   CSWUSTAT
CSWCE    EQU   CSWUSTAT
CSWBUSY  EQU   CSWUSTAT
CSWCUE   EQU   CSWUSTAT
CSWSTMOD EQU   CSWUSTAT
CSWATTN  EQU   CSWUSTAT
CSWCADDR EQU   CSW+1
@NM00036 EQU   CSWKEY00
CSWKEY   EQU   CSWKEY00
CCWCNT   EQU   CCW+6
@NM00035 EQU   CCW+5
@NM00034 EQU   CCWFLAGS
CCWIDA   EQU   CCWFLAGS
CCWPCI   EQU   CCWFLAGS
CCWSKIP  EQU   CCWFLAGS
CCWSLI   EQU   CCWFLAGS
CCWCC    EQU   CCWFLAGS
CCWDC    EQU   CCWFLAGS
CCWDADDR EQU   CCW+1
CCWCMD   EQU   CCW
CTHWMAX  EQU   CTDMPTYP+29
CTHWM    EQU   CTDMPTYP+28
CTPRMT2X EQU   CTPRMT2+1
CTPRMT2Y EQU   CTPRMT2
CTPRMT1X EQU   CTPRMT1+1
CTPRMT1Y EQU   CTPRMT1
CTVCCT   EQU   CTDMPTYP+20
CTEOR    EQU   CTDMPTYP+16
CTCOMMIO EQU   CTDMPTYP+12
CTLWKAD  EQU   CTDMPTYP+8
CTCONSOL EQU   CTDMPTYP+4
@NM00033 EQU   CTBUFTYP
CTDUMP   EQU   CTBUFTYP
CTLSQA   EQU   CTBUFTYP
CTASM    EQU   CTBUFTYP
CTWKFLE  EQU   CTBUFTYP
@NM00032 EQU   CTBUFTYP
@NM00031 EQU   CTCONFLG
CTREAD   EQU   CTCONFLG
CTMSGOUT EQU   CTCONFLG
@NM00030 EQU   CTDMPTYP+1
@NM00029 EQU   CTIOTYPE
CTIORSET EQU   CTIOTYPE
CTIOINT  EQU   CTIOTYPE
CTIOCON  EQU   CTIOTYPE
CTIOWK   EQU   CTIOTYPE
CTIOTERM EQU   CTIOTYPE
CTEBCOPR EQU   CCT+49
@NM00028 EQU   CTLOWFLG
CTWKSTUS EQU   CTLOWFLG
CTINIT   EQU   CTLOWFLG
CTFP     EQU   CTLOWFLG
CTVIRTD  EQU   CTLOWFLG
CTEBCOPD EQU   CCT+45
CTCONTYP EQU   CCT+44
CTOUTAD  EQU   CCT+42
CTCPUI   EQU   CCT+40
CTERBCON EQU   CCT+36
CTERBTPE EQU   CCT+32
CTERBDA  EQU   CCT+28
CTCCHHW  EQU   CCT+24
CTCCHHE  EQU   CCT+20
CTCCHHS  EQU   CCT+16
CTPGECNT EQU   CCT+15
CTCCHHR  EQU   CCT+8
CTINADDR EQU   CCT+6
CTSENSE  EQU   CCT+4
CTDEVTYP EQU   CCT+3
@NM00027 EQU   CTFLG2
CTALTCON EQU   CTFLG2
CTWKDONE EQU   CTFLG2
CTVIRTR  EQU   CTFLG2
CTNOSTAT EQU   CTFLG2
CTPGEFLT EQU   CTFLG2
CTSTOR   EQU   CTFLG2
CTDUPSW  EQU   CTFLG2
CTERREC  EQU   CTFLG1
CTMP     EQU   CTFLG1
@NM00026 EQU   CTFLG1
CTDEFO   EQU   CTFLG1
CTWORK   EQU   CTFLG1
CTMORTPE EQU   CTFLG1
CTDEVICE EQU   CTFLG1
CTERROR  EQU   CTFLG1
CTWAIT   EQU   CCT
@NM00025 EQU   BCT+46
BCTRECLM EQU   BCTFLGI
BCTIOERR EQU   BCTFLGI
@NM00024 EQU   BCTFLGT
BCTPGTF  EQU   BCTFLGT
BCTDUMP  EQU   BCTFLGT
BCTLSQA  EQU   BCTFLGT
BCTASM   EQU   BCTFLGT
BCTPGT   EQU   BCTFLGT
BCTWKFLE EQU   BCTFLGT
@NM00023 EQU   BCTFLGT
BCTRBA   EQU   BCTLSID+2
BCTINDEX EQU   BCTLSID+1
@NM00022 EQU   BCTLSID
@NM00021 EQU   BCT+36
@NM00020 EQU   BCT+28
BCTMDCB  EQU   BCT+24
BCTPGTE  EQU   BCT+20
BCTASID  EQU   BCT+10
BCTNEXT  EQU   BCT+4
BCTBCT   EQU   BCT
BCTHLAST EQU   BCTH+8
BCTHFRST EQU   BCTH+4
BCTHBCTH EQU   BCTH
ARBADDRE EQU   ARB+4
ARBADDRB EQU   ARB
PGTPAM   EQU   PGTBITS
@NM00019 EQU   PGTBITS
@NM00018 EQU   PGTBITS
@NM00017 EQU   PGTBITS
@NM00016 EQU   PGTBITS
@NM00015 EQU   PGTBITS
@NM00014 EQU   PGTBITS
PGTREAL  EQU   PGTRSA
PFTUIC   EQU   PFTE+15
PFTQNDX  EQU   PFTE+14
@NM00013 EQU   PFTFLAG2
@NM00012 EQU   PFTFLAG2
PFTPREF  EQU   PFTFLAG2
PFTSTEAL EQU   PFTFLAG2
PFTVR    EQU   PFTFLAG2
PFTOFFLN EQU   PFTFLAG2
PFTDFRLS EQU   PFTFLAG2
PFTOFINT EQU   PFTFLAG1
PFTVRALC EQU   PFTFLAG1
PFTBADPG EQU   PFTFLAG1
PFTPCBSI EQU   PFTFLAG1
PFTLNGFX EQU   PFTFLAG1
PFTLSQA  EQU   PFTFLAG1
PFTVRINT EQU   PFTFLAG1
PFTONAVQ EQU   PFTFLAG1
PFTRSV1  EQU   PFTE+10
PFTFXCT  EQU   PFTE+8
PFTBQPTR EQU   PFTQPTRS+2
PVTEND   EQU   PVT+1840
PVTSPARE EQU   PVT+1838
PVTCHUIC EQU   PVT+1836
PVTCOMFX EQU   PVT+1834
PVTSQAFX EQU   PVT+1832
PVTCNTFX EQU   PVT+1830
PVTDEFFX EQU   PVT+1828
PVTFIXOK EQU   PVT+1826
PVTPEROK EQU   PVT+1824
PVTMAXFX EQU   PVT+1822
PVTPERFX EQU   PVT+1820
PVTRSRB  EQU   PVT+1776
PVTRESV5 EQU   PVT+1773
PVTSRBS  EQU   PVT+1772
PVTSSRB  EQU   PVT+1768
PVTACA   EQU   PVTWSAX+1400
PVTSAVE  EQU   PVTWSAX+1328
PVTWSA18 EQU   PVTWSAX+1256
PVTWSA17 EQU   PVTWSAX+1184
PVTWSA16 EQU   PVTWSAX+1112
PVTWSA15 EQU   PVTWSAX+1040
PVTWSA14 EQU   PVTWSAX+968
PVTWSA13 EQU   PVTWSAX+896
PVTWSA12 EQU   PVTWSAX+824
PVTWSA11 EQU   PVTWSAX+752
PVTWSA10 EQU   PVTWSAX+672
PVTWSA9  EQU   PVTWSAX+592
PVTWSA8  EQU   PVTWSAX+504
PVTWSA7  EQU   PVTWSAX+432
PVTWSA6  EQU   PVTWSAX+360
PVTWSA5  EQU   PVTWSAX+288
PVTWSA4  EQU   PVTWSAX+216
PVTWSA3  EQU   PVTWSAX+144
PVTWSA2  EQU   PVTWSAX+72
PVTWSA1  EQU   PVTWSAX
PVTCIOQL EQU   PVTQS+36
PVTCIOQF EQU   PVTQS+32
PVTGFADL EQU   PVTQS+28
PVTGFADF EQU   PVTQS+24
PVTFPCBL EQU   PVTQS+20
PVTFPCBF EQU   PVTQS+16
PVTSQAQL EQU   PVTQS+14
PVTSQAQF EQU   PVTQS+12
PVTCFQL  EQU   PVTQS+10
PVTCFQF  EQU   PVTQS+8
PVTRSRVL EQU   PVTQS+6
PVTRSRVF EQU   PVTQS+4
PVTAFQL  EQU   PVTQS+2
PVTAFQF  EQU   PVTQS
PVTSPFR  EQU   PVT+302
PVTCFMCT EQU   PVT+300
PVTSPREC EQU   PVT+296
PVTCAREC EQU   PVT+292
PVTCAOUT EQU   PVT+288
PVTCAIN  EQU   PVT+284
PVTNSWPS EQU   PVT+280
PVTNPREC EQU   PVT+276
PVTSPOUT EQU   PVT+272
PVTSPIN  EQU   PVT+268
PVTVAMR  EQU   PVT+264
PVTVAMO  EQU   PVT+260
PVTVAMI  EQU   PVT+256
PVTNPOUT EQU   PVT+252
PVTNPIN  EQU   PVT+248
PVTPRSET EQU   PVT+244
PVTFRSLT EQU   PVT+240
PVTPAGIO EQU   PVT+236
PVTSWPIO EQU   PVT+232
PVTPSWPP EQU   PVT+228
PVTPPREF EQU   PVT+224
PVTPOPBR EQU   PVT+220
PVTPRELF EQU   PVT+216
PVTPRELV EQU   PVT+212
PVTPFREE EQU   PVT+208
PVTPRELS EQU   PVT+204
PVTPOUT  EQU   PVT+200
PVTPFXLD EQU   PVT+196
PVTPITAS EQU   PVT+192
PVTPSRBP EQU   PVT+188
PVTPDSEG EQU   PVT+184
PVTPCSGB EQU   PVT+180
PVTPCSEG EQU   PVT+176
PVTPINV  EQU   PVT+172
PVTPSWPC EQU   PVT+168
PVTPSOUT EQU   PVT+164
PVTPSWIN EQU   PVT+160
PVTPRCV  EQU   PVT+156
PVTPRCFI EQU   PVT+152
PVTPRCF  EQU   PVT+148
PVTPVRC  EQU   PVT+144
PVTPVRIN EQU   PVT+140
PVTPVRLS EQU   PVT+136
PVTPVEQR EQU   PVT+132
PVTPTERM EQU   PVT+128
PVTPVRPO EQU   PVT+124
PVTPRFR  EQU   PVT+120
PVTPFP2  EQU   PVT+116
PVTPFP   EQU   PVT+112
PVTPFTE  EQU   PVT+108
PVTPCB   EQU   PVT+104
PVTREP2  EQU   PVT+100
PVTPIOCP EQU   PVT+96
PVTPIOP  EQU   PVT+92
PVTPGFAD EQU   PVT+88
PVTPGFA  EQU   PVT+84
PVTPSQA  EQU   PVT+80
PVTPSINT EQU   PVT+76
PVTPSIB  EQU   PVT+72
PVTSRBID EQU   PVT+68
PVTPCIWA EQU   PVT+64
PVTHQSA  EQU   PVT+62
PVTLQSA  EQU   PVT+60
PVTOROOT EQU   PVT+56
PVTPRCA  EQU   PVT+52
PVTREUS  EQU   PVT+48
PVTRESV4 EQU   PVT+46
PVTRSUS  EQU   PVT+44
PVTVROOT EQU   PVT+40
PVTPCBLO EQU   PVT+38
PVTPCBCT EQU   PVT+36
PVTDFRS  EQU   PVT+34
PVTRSQA  EQU   PVT+32
PVTPTLB  EQU   PVT+31
PVTPCBNO EQU   PVT+30
PVTSRBNO EQU   PVT+29
PVTSQDC  EQU   PVT+28
PVTLCSA  EQU   PVT+26
PVTLPRIV EQU   PVT+24
PVTLVR   EQU   PVT+22
PVTFVR   EQU   PVT+20
PVTLPFN  EQU   PVT+18
PVTFPFN  EQU   PVT+16
PVTSSPIN EQU   PVT+11
PVTPCBS  EQU   PVT+10
PVTPOOL  EQU   PVT+8
PVTAFCOK EQU   PVT+6
PVTAFCLO EQU   PVT+4
PVTAFC   EQU   PVT+2
PVTFLAG2 EQU   PVT+1
PVTDUMP  EQU   PVTFLAG1
PVTSIT   EQU   PVTFLAG1
PVTLSI   EQU   PVTFLAG1
PVTRESV1 EQU   PVTFLAG1
PVTPCBLT EQU   PVTFLAG1
PVTSRBIU EQU   PVTFLAG1
PVTBGMS  EQU   PVTFLAG1
PVTPMSG  EQU   PVTFLAG1
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00011 EQU   CVTFIX+248
@NM00010 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
RSMASMHD EQU   RSMHD+40
RSMFOEQ  EQU   RSMHD+36
RSMLIOQL EQU   RSMLIOQ+4
RSMLIOQF EQU   RSMLIOQ
RSMLSQAL EQU   RSMLSQA+2
RSMLFQL  EQU   RSMLFQ+2
RSMLFQF  EQU   RSMLFQ
RSMRSV2  EQU   RSMHD+16
RSMCNTFX EQU   RSMHD+14
RSMRSV1  EQU   RSMHD+13
@NM00009 EQU   RSMFLG1
RSMFAIL  EQU   RSMFLG1
RSMGFADD EQU   RSMFLG1
RSMCPNC  EQU   RSMFLG1
RSMCPNU  EQU   RSMFLG1
RSMGFAD  EQU   RSMFLG1
RSMIOCPC EQU   RSMFLG1
RSMIOCPU EQU   RSMFLG1
RSMASCB  EQU   RSMHD+8
RSMVSTO  EQU   RSMHD
SGTEAC   EQU   SGTBYTE
@NM00008 EQU   SGTBYTE
@NM00007 EQU   SGTBYTE
@NM00006 EQU   SGTBYTE
@NM00005 EQU   SGTBYTE
@NM00004 EQU   SGTBYTE
SGTORG   EQU   SGTPTO
SGTKEY   EQU   SGTLK
SGTPTL   EQU   SGTLK
@NM00003 EQU   SPCTEXTM+4
SPCTFIXC EQU   SPCTSWPE+6
@NM00002 EQU   SPCTFLAG
SPCTDEFR EQU   SPCTFLAG
SPCTCOMM EQU   SPCTFLAG
SPCTBITM EQU   SPCTSEGE+4
SPCTSIZE EQU   SPCT+14
SPCTWSSZ EQU   SPCT+12
SPCTIDEN EQU   SPCT+11
@NM00001 EQU   SPCTFLG1
SPCTBIG  EQU   SPCTFLG1
SPCTPURG EQU   SPCTFLG1
SPCTOUT  EQU   SPCTFLG1
SPCTSWIN EQU   SPCTFLG1
SPCTNSEG EQU   SPCT+8
SPCTFIX  EQU   SPCT+4
SPCTSWRT EQU   SPCT
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBLDA  EQU   ASCB+48
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
GTMSAVE  EQU   SADMPLSD+684
GTMNAME  EQU   SADMPLSD+680
FRMSAVE  EQU   SADMPLSD+580
FRMNAME  EQU   SADMPLSD+576
AUDSAVE  EQU   SADMPLSD+476
AUDNAME  EQU   SADMPLSD+472
IOISAVE  EQU   SADMPLSD+372
IOINAME  EQU   SADMPLSD+368
PGISAVE  EQU   SADMPLSD+268
PGINAME  EQU   SADMPLSD+264
SVISAVE  EQU   SADMPLSD+164
SVINAME  EQU   SADMPLSD+160
LOWCRS   EQU   SADMPLSD+96
LOWGRS   EQU   SADMPLSD+32
SAVEDUMP EQU   SADMPLSD+24
AUDPSW   EQU   SADMPLSD+16
SVIRPSW  EQU   SADMPLSD+8
PSWSADMP EQU   SADMPLSD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00236 EQU   SGTADDR
@RT00238 EQU   SINERRTN
@RT00243 EQU   SINERRTN
@RT00245 EQU   SINERRTN
@RT00284 EQU   BADLSQA
@RT00310 EQU   NEXTENTY
@RT00350 EQU   MOVEPGE
@RT00361 EQU   DQPGE
@RT00392 EQU   DQPGE
@RT00399 EQU   DQPGE
@RT00406 EQU   DQPGE
@RT00425 EQU   @EL00002
@RF00429 EQU   MOVEPGE
@ENDDATA EQU   *
         END   AMDSASIN,(C'PLS0928',0603,76074)
