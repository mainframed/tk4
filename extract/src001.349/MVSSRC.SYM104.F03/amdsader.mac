         TITLE 'AMDSADER DIRECT ACCESS ERROR RECOVERY ROUTINE          *
                        '
AMDSADER CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'AMDSADER  75.280'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @09,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@09                                      01S0001
         ST    @13,@SA00001+4                                   01S0001
         LA    @14,@SA00001                                     01S0001
         ST    @14,8(,@13)                                      01S0001
         LR    @13,@14                                          01S0001
*   SAVEFORM(1:4) = 'LDER';         /* SET SAVEAREA ID               */
         MVC   SAVEFORM(4,R13),@CC00797                         01S0202
*   CCTREG = CCTADDR;               /* SET REGISTER TO POINT TO CCT  */
         L     CCTREG,@CF00442                                  01S0203
*   ERBADDR = ADDR(CTERBDA);        /* SET ADDR OF ERB TO BE USED    */
         LA    @10,CTERBDA(,CCTREG)                             01S0204
         ST    @10,ERBADDR                                      01S0204
*   RESRHAA = ADDR(IODBSEEK);       /* INIT ADDR IN CCW              */
         LA    @10,IODBSEEK(,IODBREG)                           01S0205
         STCM  @10,7,RESRHAA                                    01S0205
*   RESERCHA = ADDR(IODBSRCH);      /* INIT ADDR IN CCW              */
         LA    @10,IODBSRCH(,IODBREG)                           01S0206
         STCM  @10,7,RESERCHA                                   01S0206
*   CTERBDA = ZERO;                 /* RESET ERB                     */
         SLR   @10,@10                                          01S0207
         ST    @10,CTERBDA(,CCTREG)                             01S0207
*   IF CSWCADDR = ZERO × CSWCADDR = IODBCAW THEN /* IS THERE A CCW
*                                      ADDRESS                       */
         L     @10,CSWCADDR+23(,IODBREG)                        01S0208
         LA    @10,0(,@10)                                      01S0208
         LTR   @10,@10                                          01S0208
         BZ    @RT00208                                         01S0208
         C     @10,IODBCAW(,IODBREG)                            01S0208
         BNE   @RF00208                                         01S0208
@RT00208 DS    0H                                               01S0209
*     CCWREG = IODBCAW;             /* NO--THEN USE CCW FROM IODB    */
         L     CCWREG,IODBCAW(,IODBREG)                         01S0209
*   ELSE                                                        01S0210
*     CCWREG = CSWCADDR - LENGTH(CCW); /* SET REGISTER TO POINT TO
*                                      ERROR CCW                     */
*                                                               01S0210
         B     @RC00208                                         01S0210
@RF00208 L     CCWREG,CSWCADDR+23(,IODBREG)                     01S0210
         LA    CCWREG,0(,CCWREG)                                01S0210
         SL    CCWREG,@CF00047                                  01S0210
*CCC:                                                           01S0211
*   IODBSENS = IODBSENS && IODBSENS; /* CLEAR THE SENSE BYTES        */
@RC00208 DS    0H                                               01S0211
CCC      XC    IODBSENS(24,IODBREG),IODBSENS(IODBREG)           01S0211
*   IF CSWCCC = ON THEN                                         01S0212
         TM    CSWCCC+24(IODBREG),B'00000100'                   01S0212
         BNO   @RF00212                                         01S0212
*     DO;                           /* IF CCC - AN UNRECOVERABLE
*                                      ERROR                         */
*       ERBID = MSGCCC;             /* SET UP CCC MSG ID             */
         MVI   ERBID(CCTREG),X'1A'                              01S0214
*       GO TO TERMEXIT;             /* TERMINATE REQUEST             */
         B     TERMEXIT                                         01S0215
*     END;                                                      01S0216
*                                                               01S0217
*   /*****************************************************************/
*   /*                                                               */
*   /* NEXT WE PROCESS INTERFACE CONTROL CHECKS. THIS IS ISOLATED BY */
*   /* SENSE 0002                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0217
*/*ICC: D (NO,CDC,YES,MSG27) INTERFACE CONTROL CK ?                  */
*/*MSG27: P (,TERMEXIT) MSG ID = 27                                  */
*   IF CSWICC = ON THEN                                         01S0217
@RF00212 TM    CSWICC+24(IODBREG),B'00000010'                   01S0217
         BNO   @RF00217                                         01S0217
*     DO;                           /* INTERFACE CONTROL CHECK       */
*       ERBID = MSGICC;                                         01S0219
         MVI   ERBID(CCTREG),X'1B'                              01S0219
*       GO TO TERMEXIT;                                         01S0220
         B     TERMEXIT                                         01S0220
*     END;                                                      01S0221
*                                                               01S0221
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESSING FOR CHANNEL DATA CHECKS STATUS 0008 IS NEXT        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0222
*/*CDC: D (NO,UC,YES,MSG25) IODBCSW = CHANNEL DATA CK ?              */
*/*MSG25: P (,TERMEXIT) MSG ID = 25                                  */
*   IF CSWCDC = ON THEN                                         01S0222
@RF00217 TM    CSWCDC+24(IODBREG),B'00001000'                   01S0222
         BNO   @RF00222                                         01S0222
*     DO;                           /* IF CHAN DATA CHECK            */
*       ERBID = MSGCDC;                                         01S0224
         MVI   ERBID(CCTREG),X'19'                              01S0224
*       GO TO TERMEXIT;                                         01S0225
         B     TERMEXIT                                         01S0225
*     END;                                                      01S0226
*                                                               01S0226
*   /*****************************************************************/
*   /*                                                               */
*   /* UNIT CHECK CODE IS NEXT. THIS PROCESSING REQUIRES SOME UNIQUE */
*   /* PROCESSING FOR DIFFERENT DEVICES. STATUS IS 0200              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0227
*/*UC: D (YES,UNITCK,NO,CHAINCK) IODBCSW = UNIT CHECK ?              */
*/*UNITCK: N UNIT CHECK ENTRY.                                       */
*/* N THIS IS TOTALLY DEVICE DEPENDENT CODE                          */
*/* P SET UP R11 = ADDR OF SENSE COMMAND TO READ INTO IODBSENS       */
*/* S AMDSAERI:SVC 23 ISSUE SENSE COMMAND                            */
*/* D (YES,SENS30,NO,TYPECK) ERROR ON SENSE CMD ?                    */
*/*SENS30: P (,TERMEXIT) MSG ID = 30                                 */
*/*TYPECK: D (YES,D2314,NO,) IODBTYPE = 2314 ?                       */
*/* D (YES,D3330,NO,) IODBTYPE = 3330 ?                              */
*/* D (YES,D3330,NO,) IODBTYPE = 3330-1 ?                            */
*/* D (YES,D2305,NO,) IODBTYPE = 2305-1 ?                            */
*/* D (YES,D2305,NO,) IODBTYPE = 2305-2 ?                            */
*/* D (YES,D3340,NO,) IODBTYPE = 3340 ?                              */
*/* D (YES,D3330,NO,) IODBTYPE = 3350 ? */                 /*@Z30RSTA*/
*/* P (,TERMEXIT) MSG ID = 31                                        */
*   IF CSWUC = ON THEN              /* IS CONDITION A UNIT CHECK     */
@RF00222 TM    CSWUC+24(IODBREG),B'00000010'                    01S0227
         BNO   @RF00227                                         01S0227
*     DO;                                                       01S0228
*       SENSEADR = ADDR(IODBSENS);  /* SET ADDRESS INTO SENSE COMMAND*/
         LA    @10,IODBSENS(,IODBREG)                           01S0229
         STCM  @10,7,SENSEADR                                   01S0229
*       RESPECIFY (R11,RETCODE) RESTRICTED; /* RESTRICT REGISTERS    */
*       R11 = ADDR(SENSE);          /* SET ADDRESS OF SENSE COMMAND  */
         LA    R11,SENSE                                        01S0231
*       SVC (ERISVC);               /* ISSUE SENSE                   */
         SVC   23                                               01S0232
*       IF RETCODE ^= ZERO THEN     /* WAS SENSE ISSUED CORRECTLY    */
         LTR   RETCODE,RETCODE                                  01S0233
         BZ    @RF00233                                         01S0233
*         DO;                                                   01S0234
*           ERBID = MSGERS;         /* NO--SET MESSAGE ID            */
         MVI   ERBID(CCTREG),X'1E'                              01S0235
*           GO TO TERMEXIT;         /* AND EXIT                      */
         B     TERMEXIT                                         01S0236
*           RESPECIFY (R11,RETCODE) UNRESTRICTED; /* RELEASE    01S0237
*                                      REGISTERS                     */
*         END;                                                  01S0238
*       IF IODBTYPE = DT2314 THEN   /* IS ERROR DEVICE A 2314        */
@RF00233 CLI   IODBTYPE(IODBREG),8                              01S0239
         BE    @RT00239                                         01S0239
*         GO TO D2314;              /* YES--HANDLE IN DEVICE DEPENANT
*                                      CODE                          */
*       IF IODBTYPE = DT3330 × IODBTYPE = DT33301 THEN /* IS ERROR
*                                      DEVICE A 3330 OR 3330-1       */
         CLI   IODBTYPE(IODBREG),9                              01S0241
         BE    @RT00241                                         01S0241
         CLI   IODBTYPE(IODBREG),13                             01S0241
         BE    @RT00241                                         01S0241
*         GO TO D3330;              /* YES--HANDLE IN DEVICE DEPENANT
*                                      CODE                          */
*       IF IODBTYPE = DT23051 × IODBTYPE = DT23052 THEN /* IS ERROR
*                                      DEVICE A 2305-1 OR 2305-2     */
         CLI   IODBTYPE(IODBREG),6                              01S0243
         BE    @RT00243                                         01S0243
         CLI   IODBTYPE(IODBREG),7                              01S0243
         BE    @RT00243                                         01S0243
*         GO TO D2305;              /* YES--HANDLE IN DEVICE DEPENANT
*                                      CODE                          */
*       IF IODBTYPE = DT3340 THEN   /* IS ERROR DEVICE A 3340        */
         CLI   IODBTYPE(IODBREG),10                             01S0245
         BE    @RT00245                                         01S0245
*         GO TO D3340;              /* YES--HANDLE IN DEVICE DEPENANT
*                                      CODE                          */
*       IF IODBTYPE = DT3350 THEN   /* IS ERROR DEVICE A 3350        */
         CLI   IODBTYPE(IODBREG),11                             01S0247
         BE    @RT00247                                         01S0247
*         GO TO D3350;              /* YES--HANDLE IN DEVICE DEPENANT
*                                      CODE                  @Z30RSTA*/
*       ERBID = MSGERR;             /* UNSUPPORTED DEVICE--SET  01S0249
*                                      MESSAGE ID                    */
         MVI   ERBID(CCTREG),X'1F'                              01S0249
*       GO TO TERMEXIT;             /* AND EXIT                      */
         B     TERMEXIT                                         01S0250
*     END;                                                      01S0251
*                                                               01S0252
*   /*****************************************************************/
*   /*                                                               */
*   /* NEXT PROCESSING IS DONE FOR CHAINING CHECK. STATUS IS 0001    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0252
*/*CHAINCK: D (YES,CHAINREC,NO,UE) CHAINING CHECK ?                  */
*                                                               01S0252
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE RETRIES THE ORIGINAL FAILING DA I/O OPERATION    */
*   /* ONCE                                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0252
*/*CHAINREC: P R11 = RECALIBRATE CMD                                 */
*/* S AMDSAERI:SVC 23 ISSUE RECALIBRATE                              */
*/* D (YES,,NO,CHAINR) ERROR ON RECALIBRATE ?                        */
*/* P (,TERMEXIT) MESSAGE ID = 31                                    */
*/*CHAINR: S AMDSAERB:SVC 20 DAERB, CC=28, PCT=10, SCT=0             */
*/* N (,REPEATOP) RETRY I/O OPERATION                                */
*   IF CSWCHC = ON THEN                                         01S0252
@RF00227 TM    CSWCHC+24(IODBREG),B'00000001'                   01S0252
         BNO   @RF00252                                         01S0252
*     DO;                           /* IF CHAINING CHECK CONDITION   */
*       RESPECIFY R11 RESTRICTED;                               01S0254
*       R11 = ADDR(RECALBTE);       /* SET UP FOR RECALIBRATE CMD    */
         LA    R11,RECALBTE                                     01S0255
*       SVC (ERISVC);               /* ISSUE RECALIBRATE COMMAND     */
         SVC   23                                               01S0256
*       RESPECIFY RETCODE RESTRICTED;                           01S0257
*       IF RETCODE ^= ZERO THEN                                 01S0258
         LTR   RETCODE,RETCODE                                  01S0258
         BZ    @RF00258                                         01S0258
*         DO;                       /* ERROR DURING RECALIBRATE      */
*           ERBID = MSGERR;         /* SET UP MSG ID                 */
         MVI   ERBID(CCTREG),X'1F'                              01S0260
*           GO TO TERMEXIT;         /* NO RETRIES                    */
         B     TERMEXIT                                         01S0261
*         END;                                                  01S0262
*       RESPECIFY (R11,RETCODE) UNRESTRICTED;                   01S0263
@RF00258 DS    0H                                               01S0264
*       ERBPID = MSGCC;             /* SET UP MSG ID                 */
         MVI   ERBPID,X'1C'                                     01S0264
*       ERBSCT = ZERO;              /* NO SECONDARY COUNT            */
         MVI   ERBSCT,X'00'                                     01S0265
*       ERBPCT = TEN;               /* 10 RETRIES                    */
         MVI   ERBPCT,X'0A'                                     01S0266
*       R1 = ADDR(ERBPARM);         /* SET INPUT REG                 */
         LA    R1,ERBPARM                                       01S0267
*       SVC (ERBSVC);               /* SET ERB                       */
         SVC   20                                               01S0268
*       GO TO REPEATOP;             /* RETRY I/O OPERATION           */
         B     REPEATOP                                         01S0269
*     END;                                                      01S0270
*                                                               01S0270
*   /*****************************************************************/
*   /*                                                               */
*   /* UNIT EXCEPTION CONDITION. STATUS DATA IS 0100                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0271
*/*UE: D (YES,MSG20,NO,PGMCK) IODBCSW = UNIT EXCEPTION ?             */
*/*MSG20: P (,TERMEXIT) MSG ID = 20                                  */
*   IF CSWUE = ON THEN                                          01S0271
@RF00252 TM    CSWUE+24(IODBREG),B'00000001'                    01S0271
         BNO   @RF00271                                         01S0271
*     DO;                           /* IF UNIT EXCEPTION CONDITION   */
*       ERBID = MSGUE;              /* SET UP MESSAGE ID             */
         MVI   ERBID(CCTREG),X'14'                              01S0273
*       GO TO TERMEXIT;             /* NO RETRIES POSSIBLE           */
         B     TERMEXIT                                         01S0274
*     END;                                                      01S0275
*                                                               01S0275
*   /*****************************************************************/
*   /*                                                               */
*   /* CHANNEL PROGRAM CHECK IS NEXT STATUS 0020                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0276
*/*PGMCK: D (YES,MSG23,NO,PROTCK) IODBCSW = PGM CK ?                 */
*/*MSG23: P (,TERMEXIT) MSG ID = 23                                  */
*   IF CSWPGC = ON THEN                                         01S0276
@RF00271 TM    CSWPGC+24(IODBREG),B'00100000'                   01S0276
         BNO   @RF00276                                         01S0276
*     DO;                           /* IF CHANNEL PROGRAM CHECK      */
*       ERBID = MSGPCK;             /* SET MESSAGE ID                */
         MVI   ERBID(CCTREG),X'17'                              01S0278
*       GO TO TERMEXIT;             /* TERMINATE I/O                 */
         B     TERMEXIT                                         01S0279
*     END;                                                      01S0280
*                                                               01S0280
*   /*****************************************************************/
*   /*                                                               */
*   /* CHANNEL PROTECTION CHECK FOLLOWS. STATUS IS 0010              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0281
*/*PROTCK: D (YES,MSG24,NO,INLNGTH) IODBCSW = PROTECTION CK ?        */
*/*MSG24: P (,TERMEXIT) MSG ID = 24                                  */
*   IF CSWPTC = ON THEN                                         01S0281
@RF00276 TM    CSWPTC+24(IODBREG),B'00010000'                   01S0281
         BNO   @RF00281                                         01S0281
*     DO;                           /* IF CHANNEL PROTECTION CHECK   */
*       ERBID = MSGPTK;             /* SET MESSAGE ID                */
         MVI   ERBID(CCTREG),X'18'                              01S0283
*       GO TO TERMEXIT;             /* TERMINATE I/O                 */
         B     TERMEXIT                                         01S0284
*     END;                                                      01S0285
*                                                               01S0285
*   /*****************************************************************/
*   /*                                                               */
*   /* INCORRECT LENGTH IS KNOWN BY STATUS 0040                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0286
*/*INLNGTH: D (YES,MSG22,NO,PCI) INCORRECT LENGTH ?                  */
*/*MSG22: P (,TERMEXIT) MSG ID = 22                                  */
*   IF CSWIL = ON THEN                                          01S0286
@RF00281 TM    CSWIL+24(IODBREG),B'01000000'                    01S0286
         BNO   @RF00286                                         01S0286
*     DO;                           /* INCORRECT LENGTH CONDITION    */
*       ERBID = MSGIL;              /* SET MESSAGE ID                */
         MVI   ERBID(CCTREG),X'16'                              01S0288
*       GO TO TERMEXIT;             /* TERMINATE I/O                 */
         B     TERMEXIT                                         01S0289
*     END;                                                      01S0290
*                                                               01S0290
*   /*****************************************************************/
*   /*                                                               */
*   /* PCI IS NEXT WITH STATUS 0080                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0291
*/*PCI: D (YES,MSG21,NO,ATTN) PCI ?                                  */
*/*MSG21: P (,TERMEXIT) MSG ID = 21                                  */
*   IF CSWPCI = ON THEN                                         01S0291
@RF00286 TM    CSWPCI+24(IODBREG),B'10000000'                   01S0291
         BNO   @RF00291                                         01S0291
*     DO;                           /* PCI CONDITION                 */
*       ERBID = MSGPCI;             /* SET UP MESSAGE ID             */
         MVI   ERBID(CCTREG),X'15'                              01S0293
*       GO TO TERMEXIT;             /* TERMINATE I/O                 */
         B     TERMEXIT                                         01S0294
*     END;                                                      01S0295
*                                                               01S0295
*   /*****************************************************************/
*   /*                                                               */
*   /* ATTENTION IS STATUS 8000.                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0296
*/*ATTN: D (YES,MSG16,NO,SHARED) ATTN ?                              */
*/*MSG16: P (,TERMEXIT) MSG ID = 16                                  */
*   IF CSWATTN = ON THEN                                        01S0296
@RF00291 TM    CSWATTN+24(IODBREG),B'10000000'                  01S0296
         BNO   @RF00296                                         01S0296
*     DO;                           /* ATTENTION CONDITION           */
*       ERBID = MSGATTN;            /* SET UP ATTENTION MSG ID       */
         MVI   ERBID(CCTREG),X'10'                              01S0298
*       GO TO TERMEXIT;             /* TERMINATE I/O                 */
         B     TERMEXIT                                         01S0299
*     END;                                                      01S0300
*                                                               01S0301
*   /*****************************************************************/
*   /*                                                               */
*   /* THE ONLY REMAINING CONDITIONS ARE STATUS MODIFIER AND BUSY.   */
*   /* STATUS 5000 INDICATES CONTROL UNIT BUSY.THIS IS NORMAL FOR    */
*   /* SHARED D.A. CONTROL UNIT END STATUS 2000 IS ALSO NORMAL ON    */
*   /* SHARED D.A. THIS IS THE NORMAL - ALL SYSTEMS ARE GO - ERRORS  */
*   /* CORRECTED - PATH                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0301
*/*SHARED: N ONLY POSSIBLE REMAINING CONDITIONS ARE STAT MOD         */
*/* N BUSY AND CONTROL UNIT END - THIS IS SIO ENTRY FOR SHARED DA    */
*/*DRC0: R RETURN CODE = 0                                           */
*                                                               01S0301
*DRC0:                                                          01S0301
*   RETURN CODE(0);                 /* ZERO RETURN CODE-PROCESSING
*                                      COMPLETED                     */
@RF00296 DS    0H                                               01S0301
DRC0     SLR   @15,@15                                          01S0301
         L     @13,4(,@13)                                      01S0301
         L     @14,12(,@13)                                     01S0301
         LM    @00,@12,20(@13)                                  01S0301
         BR    @14                                              01S0301
*                                                               01S0302
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS IS THE PRIMARY RETRY ROUTINE FOR DER                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0302
*/*REPEATOP: S AMDSAERP:SVC 21 RETRY I/O OPERATION                   */
*/* D (YES,CCC,NO,DRC0) ERROR ON RETRY OPERATION ?                   */
*                                                               01S0302
*REPEATOP:                                                      01S0302
*   SVC (ERPSVC);                   /* RETRY FAILING CCW             */
REPEATOP SVC   21                                               01S0302
*   RESPECIFY RETCODE RESTRICTED;                               01S0303
*   IF RETCODE ^= ZERO THEN                                     01S0304
         SLR   @14,@14                                          01S0304
         CR    RETCODE,@14                                      01S0304
         BNE   @RT00304                                         01S0304
*     GO TO CCC;                    /* IF I/O ERROR TRY TO CORRECT
*                                      THE ERROR CONDITION           */
*   IF IODBBCT ^= ZERO THEN         /* IS THERE A BCT                */
         L     @10,IODBBCT(,IODBREG)                            01S0306
         CR    @10,@14                                          01S0306
         BE    @RF00306                                         01S0306
*     BCTCOMP = ON;                 /* YES--THEN MARK I/O COMPLETED
*                                      FOR BUFFER                    */
         OI    BCTCOMP(@10),B'10000000'                         01S0307
*   GO TO DRC0;                     /* NORMAL RETURN                 */
         B     DRC0                                             01S0308
*   RESPECIFY RETCODE UNRESTRICTED;                             01S0309
*                                                               01S0309
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS IS THE ERROR EXIT LOCATION. MESSAGES AMD033I AND AMD034I */
*   /* ARE ISSUED AS APPROPRIATE, THE TERMINATION FLAGS SET TO       */
*   /* INDICATE AN UNCORRECTABLE I/O ERROR AND THE RETURN PATH TAKEN */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0310
*/*TERMEXIT: S AMDSAERM:SVC 7 TO OUTPUT ERROR MSG                    */
*/* P IODBTERM = 1                                                   */
*/* P IODBIOC = 1                                                    */
*/* R RETURN TO CALLER CODE = 4                                      */
*                                                               01S0310
*TERMEXIT:                                                      01S0310
*   R1 = ERBID;                     /* PICK UP ERROR ERB IDENTIFIER  */
TERMEXIT SLR   R1,R1                                            01S0310
         IC    R1,ERBID(,CCTREG)                                01S0310
*   SVC (ERMSVC);                   /* ISSUE MESSAGE(S)              */
         SVC   7                                                01S0311
*   IF CSWATTN = ON × CSWCDC = ON × CSWCCC = ON × CSWICC = ON × 01S0312
*         CSWCHC = ON × SENIR = ON THEN /* IS THIS ERROR PERMANMENT
*                                      FOR THE DEVICE                */
         LA    @10,24                                           01S0312
         ALR   @10,IODBREG                                      01S0312
         TM    CSWATTN(@10),B'10000000'                         01S0312
         BO    @RT00312                                         01S0312
         TM    CSWCDC(@10),B'00001111'                          01S0312
         BNZ   @RT00312                                         01S0312
         TM    SENIR(IODBREG),B'01000000'                       01S0312
         BNO   @RF00312                                         01S0312
@RT00312 DS    0H                                               01S0313
*     IODBTERM = ON;                /* PERMANENT ERROR ON DEVICE     */
         OI    IODBTERM(IODBREG),B'10000000'                    01S0313
*   IODBIOC = ON;                   /* I/O ERROR PROCESSING A RECORD */
@RF00312 OI    IODBIOC(IODBREG),B'00010000'                     01S0314
*   IF IODBBCT ^= ZERO THEN         /* IS THERE A BCT                */
         L     @10,IODBBCT(,IODBREG)                            01S0315
         LTR   @10,@10                                          01S0315
         BZ    @RF00315                                         01S0315
*     DO;                                                       01S0316
*       BCTCOMP = ON;               /* INDICATE BUFFER PROCESSING
*                                      COMPLETED                     */
*       BCTIOERR = ON;              /* RECORD IN ERROR               */
         OI    BCTCOMP(@10),B'10100000'                         01S0318
*     END;                                                      01S0319
*   RETURN CODE(4);                 /* ERROR RETURN CODE             */
@RF00315 LA    @15,4                                            01S0320
         L     @13,4(,@13)                                      01S0320
         L     @14,12(,@13)                                     01S0320
         LM    @00,@12,20(@13)                                  01S0320
         BR    @14                                              01S0320
*                                                               02S0321
*   /*****************************************************************/
*   /*                                                               */
*   /* COMMAND REJECT ROUTINE - COMMON FOR ALL DEVICES               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0321
*/*CCMDRJT: P (,TERMEXIT) MSG ID = 00                                */
*                                                               02S0321
*CCMDRJT:                                                       02S0321
*   ERBID = MSGCR;                  /* SET MESSAGE ID                */
CCMDRJT  MVI   ERBID(CCTREG),X'00'                              02S0321
*   GO TO TERMEXIT;                 /* AND EXIT                      */
*                                                               02S0322
         B     TERMEXIT                                         02S0322
*   /*****************************************************************/
*   /*                                                               */
*   /* BUS OUT CHECK - COMMON FOR ALL DEVICES                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0323
*/*CBUSOUT: S AMDSAERB: SVC 20 DAERB, CC=02, PCT=1, SCT=0            */
*/* N (,REPEATOP) REPEAT OPERATION                                   */
*                                                               02S0323
*CBUSOUT:                                                       02S0323
*   ERBPID = MSGBOC;                /* SET MESSAGE ID                */
CBUSOUT  MVI   ERBPID,X'02'                                     02S0323
*   ERBSCT = ZERO;                  /* SET SECONDARY RETRY COUNT     */
         MVI   ERBSCT,X'00'                                     02S0324
*   ERBPCT = ONE;                   /* SET PRIMARY RETRY COUNT       */
         MVI   ERBPCT,X'01'                                     02S0325
*   R1 = ADDR(ERBPARM);             /* SET INPUT REG                 */
         LA    R1,ERBPARM                                       02S0326
*   SVC (ERBSVC);                   /* UPDATE ERB                    */
         SVC   20                                               02S0327
*   GO TO REPEATOP;                 /* RETRY OPERATION               */
*                                                               02S0328
         B     REPEATOP                                         02S0328
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERVENTION REQUIRED ROUTINE - COMMON FOR ALL DEVICES        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0329
*/*CINTVREQ: S AMDSABIN:SVC 28 CONVERT DDD IN IODBDEV TO EBCDIC      */
*/* P PLACE DEVICE ADDR IN DEV14A                                    */
*/* P PLACE DEVICE ADDR IN DEV12D                                    */
*/* L AMDSAINR: ISSUE MESSAGE AMD014A AND WAIT                       */
*/* D (YES,,NO,MSG01) WAS INTRPT REQUESTED OKAY                      */
*/* S AMDSAERB:SVC 20 DAERB, CC=01, PCT =1, SCT = 0                  */
*/* N (,REPEATOP) RETRY I/O OPERATION                                */
*/*MSG01: P (,TERMEXIT) MSG ID = 01                                  */
*                                                               02S0329
*CINTVREQ:                                                      02S0329
*   BININ = ADDR(IODBDEV);          /* SET ADDRESS OF DATA TO BE
*                                      CONVERTED                     */
CINTVREQ LA    @10,IODBDEV(,IODBREG)                            02S0329
         ST    @10,BININ                                        02S0329
*   RESPECIFY RETCODE RESTRICTED;   /* RESTRICT REGISTERS            */
*   R1 = ADDR(BINPLIST);            /* SET POINTER TO PLIST FOR BIN  */
         LA    R1,BINPLIST                                      02S0331
*   SVC (BINSVC);                   /* CONVERT DEVICE ADDRESS TO
*                                      EBCDIC                        */
         SVC   28                                               02S0332
*   DEV14A = BINDEV;                /* PUT CONVERTED ADDRESS INTO
*                                      MESSAGE                       */
         L     @14,@CA00781                                     02S0333
         MVC   DEV14A-DEV14A(3,@14),BINDEV                      02S0333
*   DEV12D = BINDEV;                /* AND INTO OTHER MESSAGE        */
         L     @14,@CA00782                                     02S0334
         MVC   DEV12D-DEV12D(3,@14),BINDEV                      02S0334
*   R1 = AMD014A;                   /* SET POINTER TO MESSAGE TO
*                                      PRINT                         */
         LA    R1,14                                            02S0335
*   SVC (INRSVC);                   /* WAIT FOR INTERVENTION         */
         SVC   29                                               02S0336
*   IF RETCODE ^= ZERO THEN         /* ANY PROBLEM IN INR            */
         LTR   RETCODE,RETCODE                                  02S0337
         BZ    @RF00337                                         02S0337
*     DO;                                                       02S0338
*       ERBID = MSGIR;              /* SET MESSAGE ID                */
         MVI   ERBID(CCTREG),X'01'                              02S0339
*       GO TO TERMEXIT;             /* AND EXIT                      */
         B     TERMEXIT                                         02S0340
*     END;                                                      02S0341
*   RESPECIFY RETCODE UNRESTRICTED; /* RELEASE REGISTERS             */
@RF00337 DS    0H                                               02S0343
*   ERBPID = MSGIR;                 /* SET MESSAGE ID                */
         MVI   ERBPID,X'01'                                     02S0343
*   ERBSCT = ZERO;                  /* SET SECONDARY RETRY COUNT     */
         MVI   ERBSCT,X'00'                                     02S0344
*   ERBPCT = ONE;                   /* SET PRIMARY RETRY COUNT       */
         MVI   ERBPCT,X'01'                                     02S0345
*   R1 = ADDR(ERBPARM);             /* SET INPUT REG                 */
         LA    R1,ERBPARM                                       02S0346
*   SVC (ERBSVC);                   /* UPDATE ERB                    */
         SVC   20                                               02S0347
*   GO TO REPEATOP;                 /* RETRY OPERATION               */
*                                                               02S0348
         B     REPEATOP                                         02S0348
*   /*****************************************************************/
*   /*                                                               */
*   /* PERMENANT ERROR ROUTINE FOR 2305, 3330 AND 3350       @Z30RSTA*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0349
*/*CPERMERR: D (YES,,NO,CPERMDC) EQUIPMENT CK ?                      */
*/* P (,TERMEXIT) MESSAGE ID = 03                                    */
*/*CPERMDC: D (YES,,NO,CPERMO) DATA CHECK ?                          */
*/* P (,TERMEXIT) MESSAGE ID = 04                                    */
*/*CPERMO: D (YES,,NO,CPERM08) OVERRUN ?                             */
*/* P (,TERMEXIT) MESSAGE ID = 05                                    */
*/*CPERM08: P (,TERMEXIT) MESSAGE ID = 08                            */
*                                                               02S0349
*CPERMERR:                                                      02S0349
*   IF SENEC = ON THEN              /* IF EQUIPMENT CHECK AND   02S0349
*                                      PERMANENT ERROR               */
CPERMERR TM    SENEC(IODBREG),B'00010000'                       02S0349
         BNO   @RF00349                                         02S0349
*     DO;                                                       02S0350
*       ERBID = MSGEC;              /* SET MESSAGE ID                */
         MVI   ERBID(CCTREG),X'03'                              02S0351
*       GO TO TERMEXIT;             /* AND EXIT                      */
         B     TERMEXIT                                         02S0352
*     END;                                                      02S0353
*   IF SENDC = ON THEN              /* IF DATA CHECK AND PERMANENT
*                                      ERROR                         */
@RF00349 TM    SENDC(IODBREG),B'00001000'                       02S0354
         BNO   @RF00354                                         02S0354
*     DO;                                                       02S0355
*       ERBID = MSGDC;              /* SET MESSAGE ID                */
         MVI   ERBID(CCTREG),X'04'                              02S0356
*       GO TO TERMEXIT;             /* AND EXIT                      */
         B     TERMEXIT                                         02S0357
*     END;                                                      02S0358
*   IF SENOR = ON THEN              /* IF OVERRUN AND PERMANENT ERROR*/
@RF00354 TM    SENOR(IODBREG),B'00000100'                       02S0359
         BNO   @RF00359                                         02S0359
*     DO;                                                       02S0360
*       ERBID = MSGOR;              /* SET MESSAGE ID                */
         MVI   ERBID(CCTREG),X'05'                              02S0361
*       GO TO TERMEXIT;             /* AND EXIT                      */
         B     TERMEXIT                                         02S0362
*     END;                                                      02S0363
*   ERBID = MSGPE;                  /* SET PERMANENT ERROR MESSAGE ID*/
@RF00359 MVI   ERBID(CCTREG),X'08'                              02S0364
*   GO TO TERMEXIT;                 /* AND EXIT                      */
*                                                               02S0365
         B     TERMEXIT                                         02S0365
*   /*****************************************************************/
*   /*                                                               */
*   /* EQUIPMENT CHECK ROUTINE FOR ALL DEVICES                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0366
*/*CEQUCK: S AMDSAERB:SVC 20 DAERB, CC=03, PCT=10, SCT=0             */
*/* N (,REPEATOP) RETRY OPERATION                                    */
*                                                               02S0366
*CEQUCK:                                                        02S0366
*   ERBPID = MSGEC;                 /* SET MESSAGE ID                */
CEQUCK   MVI   ERBPID,X'03'                                     02S0366
*   ERBSCT = ZERO;                  /* SET SECONDARY RETRY COUNT     */
         MVI   ERBSCT,X'00'                                     02S0367
*   ERBPCT = TEN;                   /* SET PRIMARY RETRY COUNT       */
         MVI   ERBPCT,X'0A'                                     02S0368
*   R1 = ADDR(ERBPARM);             /* SET INPUT REG                 */
         LA    R1,ERBPARM                                       02S0369
*   SVC (ERBSVC);                   /* UPDATE ERB                    */
         SVC   20                                               02S0370
*   GO TO REPEATOP;                 /* NOW REPEAT LAST OPERATION     */
         B     REPEATOP                                         02S0371
*/*** 2314 ERROR RECOVERY ROUTINE                                    */
*                                                               02S0372
*   /*****************************************************************/
*   /*                                                               */
*   /* EQUIPMENT CHECK--SENSE BYTE 0 BIT 3 IS HANDLED FIRST IN COMMON*/
*   /* CODE . THEN NO RECORD FOUND--SENSE BYTE 1 BIT 4 IS HANDLED    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0372
*/*D2314: N THIS SECTION HANDLES 2314 ERROR RECOVERY                 */
*/* D (YES,CEQUCK,NO,D2314NRF) EQU CK ?                              */
*/*D2314NRF: D (YES,,NO,D2314SC) NO RECORD FOUND ?                   */
*/* D (YES,MAMREC,NO,MAMRHA) MISSING ADDRESS MARKERS ?               */
*/*MAMRHA: P R11 = READ HOME ADDRESS                                 */
*/* N SET UP FOR SEEK AND READ HOME ADDRESS                          */
*/* S AMDSAERI:SVC 23 ISSUE READ HOME ADDRESS                        */
*/* D (YES,ERRID,NO,) ERROR ON RHA ?                                 */
*/* D (YES,,NO,MAMREC) CCHH OF ORIGINAL ?                            */
*/* P (,TERMEXIT) MESSAGE ID = 12                                    */
*/*MAMREC: P SET UP FOR RECALIBRATE CMD IN R11                       */
*/* N RECALIBRATE CCW                                                */
*/* S AMDSAERI:SVC 23 ISSUE RECALIBRATE COMMAND                      */
*/* D (YES,ERRID,NO,MAMREP) ERROR ON CMD ?                           */
*/*ERRID: P (,TERMEXIT) MESSAGE ID = 31                              */
*/*MAMREP: S AMDSAERB:SVC 20 DAERB, CC=12, PCT=10, SCT = 0           */
*/* N (,REPEATOP) REPEAT I/O OPERATION                               */
*                                                               02S0372
*D2314:                                                         02S0372
*   IF SENEC = ON THEN              /* IF EQUIPMENT CHECK            */
D2314    TM    SENEC(IODBREG),B'00010000'                       02S0372
         BO    @RT00372                                         02S0372
*     GO TO CEQUCK;                 /* HANDLE IN COMMON CODE         */
*   IF SENNRF = ON THEN             /* IF NO RECORD FOUND            */
         TM    SENNRF(IODBREG),B'00001000'                      02S0374
         BNO   @RF00374                                         02S0374
*     DO;                                                       02S0375
*       IF SENMAM = OFF THEN        /* BUT NO MISSING ADDRESS MARKER */
         TM    SENMAM(IODBREG),B'00000010'                      02S0376
         BNZ   @RF00376                                         02S0376
*         DO;                                                   02S0377
*           RESPECIFY (R11,RETCODE) RESTRICTED; /* RESTRICT REGISTERS*/
*           R11 = ADDR(RESRHA);     /* SET ADDRESS OF READ HOME 02S0379
*                                      ADDRESS CCW                   */
         LA    R11,RESRHA                                       02S0379
*           SVC (ERISVC);           /* ISSUE SIO FOR RHA             */
         SVC   23                                               02S0380
*           IF RETCODE ^= ZERO THEN /* WAS SIO SUCCESSFUL            */
         LTR   RETCODE,RETCODE                                  02S0381
         BNZ   @RT00381                                         02S0381
*             GO TO ERRID;          /* NO--ISSUE MESSAGE             */
*           RESPECIFY (R11,RETCODE) UNRESTRICTED; /* RELEASE    02S0383
*                                      REGISTERS                     */
*           IF RESCCHH = IODBSRCH THEN /* IS THIS THE TRACK WANTED   */
         CLC   RESCCHH(4),IODBSRCH(IODBREG)                     02S0384
         BNE   @RF00384                                         02S0384
*             DO;                                               02S0385
*               ERBID = MSGNRF;     /* YES--SOMETHING IS WRONG--SET
*                                      MESSAGE ID                    */
         MVI   ERBID(CCTREG),X'0C'                              02S0386
*               GO TO TERMEXIT;     /* AND EXIT                      */
         B     TERMEXIT                                         02S0387
*             END;                                              02S0388
*         END;                                                  02S0389
@RF00384 DS    0H                                               02S0390
*       RESPECIFY (R11,RETCODE) RESTRICTED; /* RESTICT REGISTERS     */
@RF00376 DS    0H                                               02S0391
*       R11 = ADDR(RECALBTE);       /* EITHER MISSING ADDRESS MARKER
*                                      OR READ HOME ADDRESS READ
*                                      RECORD DIFFERENT FROM SEARCH  */
         LA    R11,RECALBTE                                     02S0391
*       SVC (ERISVC);               /* SO ISSUE RECALIBRATE CCW      */
         SVC   23                                               02S0392
*       IF RETCODE ^= ZERO THEN     /* WAS RECALIBRATE SUCCESSFUL    */
         LTR   RETCODE,RETCODE                                  02S0393
         BZ    @RF00393                                         02S0393
*         DO;                                                   02S0394
*                                                               02S0394
*ERRID:                                                         02S0395
*           ERBID = MSGERR;         /* NO--ISSUE GENERAL ERROR  02S0395
*                                      MESSAGE                       */
ERRID    MVI   ERBID(CCTREG),X'1F'                              02S0395
*           GO TO TERMEXIT;         /* AND EXIT                      */
         B     TERMEXIT                                         02S0396
*         END;                                                  02S0397
*       RESPECIFY (R11,RETCODE) UNRESTRICTED; /* RELEASE REGISTERS   */
@RF00393 DS    0H                                               02S0399
*       ERBPID = MSGNRF;            /* SET MESSAGE ID                */
         MVI   ERBPID,X'0C'                                     02S0399
*       ERBSCT = ZERO;              /* SET SECONDARY RETRY COUNT     */
         MVI   ERBSCT,X'00'                                     02S0400
*       ERBPCT = TEN;               /* SET PRIMARY RETRY COUNT       */
         MVI   ERBPCT,X'0A'                                     02S0401
*       R1 = ADDR(ERBPARM);         /* SET INPUT REG                 */
         LA    R1,ERBPARM                                       02S0402
*       SVC (ERBSVC);               /* UPDATE ERB                    */
         SVC   20                                               02S0403
*       GO TO REPEATOP;             /* RETRY OPERATION               */
         B     REPEATOP                                         02S0404
*     END;                                                      02S0405
*                                                               02S0405
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING CODE HANDLES SEEK CHECK--SENSE BYTE 0 BIT 7.    */
*   /* INTERVENTION REQUIRED--SENSE BYTE 0 BIT 1 AND BUS OUT         */
*   /* CHECK--SENSE BYTE 0 BIT 2 ARE HANDLED IN COMMON CODE.         */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0406
*/*D2314SC: D (YES,,NO,D2314IR) SEEK CK ?                            */
*/* D (YES,MSG07,NO,D2314CR) COMMAND REJECT ?                        */
*/*MSG07: P (,TERMEXIT) MSG ID = 07                                  */
*/*D2314CR: P SET UP TO RECALIBRATE IN R11                           */
*/* N THIS IS THE RECALIBRATE CCW                                    */
*/* S AMDSAERI:SVC 23 ISSUE RECALIBRATE COMMAND                      */
*/* D (YES,ERRID,NO,) ERROR ON CMD ?                                 */
*/* S (,REPEATOP) AMDSAERB:SVC 20 DAERB, CC=7, PCT=10, SCT=0         */
*/*D2314IR: D (YES,CINTVREQ,NO,D2314BO) INTV REQUIRED ?              */
*/*D2314BO: D (YES,CBUSOUT,NO,D2314DC) BUSOUT CHECK ?                */
*   IF SENSC = ON THEN              /* IF SEEK CHECK                 */
@RF00374 TM    SENSC(IODBREG),B'00000001'                       02S0406
         BNO   @RF00406                                         02S0406
*     DO;                                                       02S0407
*       IF SENCR = ON THEN          /* AND IF COMMAND REJECT         */
         TM    SENCR(IODBREG),B'10000000'                       02S0408
         BNO   @RF00408                                         02S0408
*         DO;                                                   02S0409
*           ERBID = MSGSCK;         /* SET MESSAGE ID                */
         MVI   ERBID(CCTREG),X'07'                              02S0410
*           GO TO TERMEXIT;         /* AND EXIT                      */
         B     TERMEXIT                                         02S0411
*         END;                                                  02S0412
*       RESPECIFY (R11,RETCODE) RESTRICTED; /* RESTRICT REGISTERS    */
@RF00408 DS    0H                                               02S0414
*       R11 = ADDR(RECALBTE);       /* SET ADDRESS OF RECALIBRATE CCW*/
         LA    R11,RECALBTE                                     02S0414
*       SVC (ERISVC);               /* SIO FOR RECALIBRATE CCW       */
         SVC   23                                               02S0415
*       IF RETCODE ^= ZERO THEN     /* WAS SIO OKAY                  */
         LTR   RETCODE,RETCODE                                  02S0416
         BNZ   @RT00416                                         02S0416
*         GO TO ERRID;              /* NO--GO ISSUE MESSAGE          */
*       RESPECIFY (R11,RETCODE) UNRESTRICTED; /* RELEASE REGISTERS   */
*       ERBPID = MSGSCK;            /* YES--SET UP MESSAGE ID        */
         MVI   ERBPID,X'07'                                     02S0419
*       ERBSCT = ZERO;              /* SET SECONDARY RETRY COUNT     */
         MVI   ERBSCT,X'00'                                     02S0420
*       ERBPCT = TEN;               /* SET PRIMARY RETRY COUNT       */
         MVI   ERBPCT,X'0A'                                     02S0421
*       R1 = ADDR(ERBPARM);         /* SET INPUT REG                 */
         LA    R1,ERBPARM                                       02S0422
*       SVC (ERBSVC);               /* UPDATE ERB                    */
         SVC   20                                               02S0423
*       GO TO REPEATOP;             /* RETRY OPERATION               */
         B     REPEATOP                                         02S0424
*     END;                                                      02S0425
*   IF SENIR = ON THEN              /* IF INTERVENTION REQUIRED      */
@RF00406 TM    SENIR(IODBREG),B'01000000'                       02S0426
         BO    @RT00426                                         02S0426
*     GO TO CINTVREQ;               /* HANDLE IN COMMON CODE         */
*   IF SENBO = ON THEN              /* IF BUS OUT CHECK              */
         TM    SENBO(IODBREG),B'00100000'                       02S0428
         BO    @RT00428                                         02S0428
*     GO TO CBUSOUT;                /* HANDLE IN COMMON CODE         */
*                                                               02S0429
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS CODE HANDLES DATA CHECKS--SENSE BYTE 0 BIT 4.            */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0430
*/*D2314DC: D (YES,CDATACK,NO,D2314O) DATA CHECK ?                   */
*/*CDATACK: S AMDSAERB:SVC 20 DAERB, CC=4, PCT=16, SCT=16            */
*/* D (YES,,NO,REPEATOP) PCTR - 1 = 0 ?                              */
*/* P R11 = ADDRESS OF RECALIBRATE CCW                               */
*/* N ISSUE RECALIBRATE CCW                                          */
*/* S AMDSAERI:SVC 23 ISSUE RECALIBRATE                              */
*/* D (YES,ERRID,NO,REPEATOP) ERROR ON RECALIBRATE ?                 */
*   IF SENDC = ON THEN              /* IF DATA CHECK                 */
         TM    SENDC(IODBREG),B'00001000'                       02S0430
         BNO   @RF00430                                         02S0430
*     DO;                                                       02S0431
*       ERBPID = MSGDC;             /* SET MESSAGE ID                */
         MVI   ERBPID,X'04'                                     02S0432
*       ERBSCT = SIXTEEN;           /* SET SECONDARY RETRY COUNT     */
         MVI   ERBSCT,X'10'                                     02S0433
*       ERBPCT = SIXTEEN;           /* SET PRIMARY RETRY COUNT       */
         MVI   ERBPCT,X'10'                                     02S0434
*       R1 = ADDR(ERBPARM);         /* SET INPUT REG                 */
         LA    R1,ERBPARM                                       02S0435
*       SVC (ERBSVC);               /* UPDATE ERB (NOTE--THIS WILL
*                                      REDUCE PCT COUNT)             */
         SVC   20                                               02S0436
*       IF ERBPCTR ^= ONE THEN      /* HAVE SIXTEEN PRIMARY RETRIES
*                                      BEEN DONE                     */
         CLI   ERBPCTR(CCTREG),1                                02S0437
         BNE   @RT00437                                         02S0437
*         GO TO REPEATOP;           /* NO--RETRY OPERATION           */
*       RESPECIFY (R11,RETCODE) RESTRICTED; /* RESTRICT REGISTERS    */
*       R11 = ADDR(RECALBTE);       /* YES--ISSUE RECALIBRATE FOR
*                                      SECONDARY RETRY               */
         LA    R11,RECALBTE                                     02S0440
*       SVC (ERISVC);               /* SIO FOR RECALIBRATE           */
         SVC   23                                               02S0441
*       IF RETCODE ^= ZERO THEN     /* WAS SIO OKAY                  */
         LTR   RETCODE,RETCODE                                  02S0442
         BNZ   @RT00442                                         02S0442
*         GO TO ERRID;              /* NO--GO ISSUE MESSAGE          */
*       RESPECIFY (R11,RETCODE) UNRESTRICTED; /* RELEASE REGISTERS   */
*       GO TO REPEATOP;             /* RETRY OPERATION               */
         B     REPEATOP                                         02S0445
*     END;                                                      02S0446
*                                                               02S0446
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS CODE HANDLES OVERRUN--SENSE BYTE 0 BIT 5 AND MISSING     */
*   /* ADDRESS MARKER--SENSE BYTE 1 BIT 6. COMMAND REJECT--SENSE BYTE*/
*   /* 0 BIT 0 IS HANDLED IN COMMON CODE.                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0447
*/*D2314O: D (YES,COVERRUN,NO,D2314MAD) OVERRUN ?                    */
*/*COVERRUN: S AMDSAERB:SVC 20 DAERB, CC=5, PCT=10, SCT=0            */
*/* N (,REPEATOP) REPEAT I/O OPERATION                               */
*/*D2314MAD: D (YES,CMISADR,NO,D2314CMD) MISSING ADDR MARKERS ?      */
*/*CMISADR: S AMDSAERB:SVC 20 DAERB, CC=15, PCT=10, SCT=0            */
*/* N (,REPEATOP) REPEAT I/O OPERATION                               */
*/*D2314CMD: D (YES,CCMDRJT,NO,TCC) CMD REJECT ?                     */
*   IF SENOR = ON THEN              /* IF OVERRUN                    */
@RF00430 TM    SENOR(IODBREG),B'00000100'                       02S0447
         BNO   @RF00447                                         02S0447
*     DO;                                                       02S0448
*       ERBPID = MSGOR;             /* SET MESSAGE ID                */
         MVI   ERBPID,X'05'                                     02S0449
*       ERBSCT = ZERO;              /* SET SECONDARY RETRY COUNT     */
         MVI   ERBSCT,X'00'                                     02S0450
*       ERBPCT = TEN;               /* SET PRIMARY RETRY COUNT       */
         MVI   ERBPCT,X'0A'                                     02S0451
*       R1 = ADDR(ERBPARM);         /* SET INPUT REG                 */
         LA    R1,ERBPARM                                       02S0452
*       SVC (ERBSVC);               /* UPDATE ERB                    */
         SVC   20                                               02S0453
*       GO TO REPEATOP;             /* RETRY OPERATION               */
         B     REPEATOP                                         02S0454
*     END;                                                      02S0455
*   IF SENMAM = ON THEN             /* IF MISSING ADDRESS MARKER     */
@RF00447 TM    SENMAM(IODBREG),B'00000010'                      02S0456
         BNO   @RF00456                                         02S0456
*     DO;                                                       02S0457
*       ERBPID = MSGMAM;            /* SET MESSAGE ID                */
         MVI   ERBPID,X'0F'                                     02S0458
*       ERBSCT = ZERO;              /* SET SECONDARY RETRY COUNT     */
         MVI   ERBSCT,X'00'                                     02S0459
*       ERBPCT = TEN;               /* PRIMARY RETRY COUNT           */
         MVI   ERBPCT,X'0A'                                     02S0460
*       R1 = ADDR(ERBPARM);         /* SET INPUT REG                 */
         LA    R1,ERBPARM                                       02S0461
*       SVC (ERBSVC);               /* UPDATE ERB                    */
         SVC   20                                               02S0462
*       GO TO REPEATOP;             /* RETRY OPERATION               */
         B     REPEATOP                                         02S0463
*     END;                                                      02S0464
*   IF SENCR = ON THEN              /* IF COMMAND REJECT             */
@RF00456 TM    SENCR(IODBREG),B'10000000'                       02S0465
         BO    @RT00465                                         02S0465
*     GO TO CCMDRJT;                /* HANDLE IN COMMON CODE         */
*                                                               02S0466
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS CODE HANDLES TRACK CONDITION CHECK--SENSE BYTE 0 BIT 6   */
*   /* END OF CYLINDER--SENSE BYTE 1 BIT 2 AND FILE PROTECT--SENSE   */
*   /* BYTE 1 BIT 5.                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0467
*/*TCC: D (YES,ALTRK,NO,EOC) TRK COND CHK ?                          */
*/*EOC: D (YES,MSG10,NO,FP) END OF CYLINDER ?                        */
*/*MSG10: P (,TERMEXIT) MSG ID = 10                                  */
*/*FP: D (YES,MSG13,NO,MSG31) FILE PROTECT ?                         */
*/*MSG13: P (,TERMEXIT) MSG ID = 13                                  */
*/*MSG31: P (,TERMEXIT) MSG ID = 29                                  */
*   IF SENTCC = ON THEN             /* IF TRACK CONDITION CHECK      */
         TM    SENTCC(IODBREG),B'00000010'                      02S0467
         BO    @RT00467                                         02S0467
*     GO TO ALTRK;                  /* HANDLE AS ALTERNATE TRACK     */
*   IF SENEOC = ON THEN             /* IF END OF CYLINDER            */
         TM    SENEOC(IODBREG),B'00100000'                      02S0469
         BNO   @RF00469                                         02S0469
*     DO;                                                       02S0470
*       ERBID = MSGEOC;             /* SET MESSAGE ID                */
         MVI   ERBID(CCTREG),X'0A'                              02S0471
*       GO TO TERMEXIT;             /* AND EXIT                      */
         B     TERMEXIT                                         02S0472
*     END;                                                      02S0473
*   IF SENFP = ON THEN              /* IF FILE PROTECT               */
@RF00469 TM    SENFP(IODBREG),B'00000100'                       02S0474
         BNO   @RF00474                                         02S0474
*     DO;                                                       02S0475
*       ERBID = MSGFP;              /* SET MESSAGE ID                */
         MVI   ERBID(CCTREG),X'0D'                              02S0476
*       GO TO TERMEXIT;             /* AND EXIT                      */
         B     TERMEXIT                                         02S0477
*     END;                                                      02S0478
*   ERBID = MSGUNK;                 /* SET GENERAL MESSAGE ID        */
@RF00474 MVI   ERBID(CCTREG),X'1D'                              02S0479
*   GO TO TERMEXIT;                 /* AND EXIT                      */
*                                                               02S0480
         B     TERMEXIT                                         02S0480
*   /*****************************************************************/
*   /*                                                               */
*   /* NO OTHER CONDITIONS ARE EXPECTED FROM A 2314. IF OTHER        */
*   /* CONDITIONS OCCUR THEY ARE DO TO HARDWARE OR PROGRAMMING       */
*   /* ERRORS.                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0481
*                                                               02S0481
*   /*****************************************************************/
*   /*                                                               */
*   /* 2314 AND 3340 ALTERNATE TRACK RECOVERY ROUTINE                */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0481
*/*ALTRK: N SET UP TO DETERMINE CAUSE OF TRK COND CK                 */
*/* P R11 = ADDRESS OF SEEK, RHA, READ R0 TO EXAMINE TCC             */
*/* N SEEK TO ORIGINAL RHA AND READ R0                               */
*/* S AMDSAERI:SVC 23 PERFORM I/O                                    */
*/* D (YES,,NO,TRKCK) ERROR ON SEEK, RHA, READ R0 ?                  */
*/* P (,TERMEXIT) MESSAGE ID = 31                                    */
*                                                               02S0481
*ALTRK:                                                         02S0481
*   RES0CCHH = IODBCCHH(2:7);       /* OBTAIN FAILING CCHH           */
ALTRK    MVC   RES0CCHH(6),IODBCCHH+1(IODBREG)                  02S0481
*   RESPECIFY (R11,RETCODE) RESTRICTED; /* RESTRICT REGISTERS        */
*   R11 = ADDR(RESALT);             /* SET ADDRESS OF RHA, RR0 CCW S */
         LA    R11,RESALT                                       02S0483
*   SVC (ERISVC);                   /* ISSUE CCW S                   */
         SVC   23                                               02S0484
*   IF RETCODE ^= ZERO THEN         /* WAS OPERATION SUCCESSFUL      */
         LTR   RETCODE,RETCODE                                  02S0485
         BZ    @RF00485                                         02S0485
*     DO;                                                       02S0486
*       ERBID = MSGERR;             /* NO--SET MESSAGE ID            */
         MVI   ERBID(CCTREG),X'1F'                              02S0487
*       GO TO TERMEXIT;             /* AND EXIT                      */
         B     TERMEXIT                                         02S0488
*     END;                                                      02S0489
*   RESPECIFY (R11,RETCODE) UNRESTRICTED; /* RELEASE REGISTERS       */
@RF00485 DS    0H                                               02S0491
*/*TRKCK: D (YES,OP,NO,) ALTERNATE TRK ?                             */
*/* D (YES,OP,NO,) DEFECTIVE TRK ?                                   */
*/* P (,TERMEXIT) MESSAGE ID = 06                                    */
*/*OP: D (YES,CCHH,NO,) OPERATION INCOMPLETE ?                       */
*/* D (YES,NOCHANGE,NO,TCCERR) DEFECTIVE TRACK ?                     */
*/*NOCHANGE: N (,TCCRETRY) SEEK CCHH OF ALT                          */
*/*CCHH: D (YES,SOMEDATA,NO,) DEFECTIVE TRK ?                        */
*/* S (,%TICTEST) AMDSAEOC:USE CCHH + 1 TO GET TO NEXT TRK           */
*/*SOMEDATA: N USE ALT CCHH                                          */
*/*%TICTEST: N SEEK, SFM (NO SEEK) SRCH TIC TIC CSW                  */
*/* D (YES,TCCERR,NO,CONSCCW) TICCCW = NOP OR TIC CMD CODE ?         */
*/*TCCERR: P (,TERMEXIT) MESSAGE ID = 06                             */
*/*CONSCCW: P DATA AREA = ERR CCW DATA ADDR + 4K - RESIDUAL CNT      */
*/* P SET DATA LENGTH TO RESIDUAL COUNT IN CSW                       */
*/* D (YES,DRC0,NO,) RESIDUAL COUNT = 0 ?                            */
*/* N (,TCCRETRY) SET UP FOR RETRY OPERATION                         */
*/*TCCRETRY: S AMDSAERB:SVC 20 DAERB, CC=06, PCT=3, SCT=0            */
*/* N (,REPEATOP) RETRY I/O                                          */
*   IF RESFGALT = OFF & RESFGDFT = OFF THEN /* IF THIS IS A PRIMARY
*                                      AND OPERATIVE TRACK THEN THE
*                                      TCC IS INVALID                */
         TM    RESFGALT,B'00000011'                             02S0491
         BNZ   @RF00491                                         02S0491
*     DO;                                                       02S0492
*       ERBID = MSGTCC;             /* SET MESSAGE ID                */
         MVI   ERBID(CCTREG),X'06'                              02S0493
*       GO TO TERMEXIT;             /* AND EXIT                      */
         B     TERMEXIT                                         02S0494
*     END;                                                      02S0495
*   IF SENOI = OFF THEN             /* IS OPERATION COMPLETE         */
@RF00491 TM    SENOI(IODBREG),B'00000001'                       02S0496
         BNZ   @RF00496                                         02S0496
*     DO;                                                       02S0497
*       IF RESFGDFT = OFF THEN      /* IF ALTERNATE                  */
         TM    RESFGDFT,B'00000010'                             02S0498
         BZ    @RT00498                                         02S0498
*         GO TO TCCERR;             /* ISSUE MESSAGE                 */
*       IF ADDR(CCW) ^= ADDR(RESERCH) THEN /* WILL WE TIC TO    02S0500
*                                      OURSELVES                     */
         LA    @10,RESERCH                                      02S0500
         CR    CCWREG,@10                                       02S0500
         BE    @RF00500                                         02S0500
*         DO;                                                   02S0501
*           RESCMD1 = TIC;          /* SET TIC TO FAILING SEARCH
*                                      (NOTE THAT THE FAILING CCW
*                                      MUST BE A SEARCH BECAUSE OF
*                                      THE CCW CHAINS SADMP USES AND
*                                      OPERATION COMPLETE)           */
         MVI   RESCMD1,X'08'                                    02S0502
*           RESDADD1 = ADDR(CCW) + 2*LENGTH(CCW); /* SET ADDRESS IN
*                                      TIC TO CCW AFTER SEARCH AND
*                                      TIC IN ORIGINAL CHAIN         */
         LA    @10,16                                           02S0503
         ALR   @10,CCWREG                                       02S0503
         STCM  @10,7,RESDADD1                                   02S0503
*         END;                                                  02S0504
*     END;                                                      02S0505
*   ELSE                                                        02S0506
*     DO;                           /* BUT IF OPERATION IS INCOMPLETE*/
         B     @RC00496                                         02S0506
@RF00496 DS    0H                                               02S0507
*       IF RESFGDFT = OFF THEN      /* IF ALTERNATE NOT DEFECTIVE    */
         TM    RESFGDFT,B'00000010'                             02S0507
         BNZ   @RF00507                                         02S0507
*         CALL AMDSAEOC;            /* ADD 1 TO CCHH OF TRACK THIS
*                                      TRACK REPLACES (THIS IS A CASE
*                                      OF TRACK OVERFLOW FROM   02S0508
*                                      ALTERNATE)                    */
         BAL   @14,AMDSAEOC                                     02S0508
*       IODBSRCH = RESCCHH;         /* SET NEW CCHH FOR SEARCH       */
@RF00507 MVC   IODBSRCH(4,IODBREG),RESCCHH                      02S0509
*       IODBR = ONE;                /* SET SEARCH RECORD TO ONE      */
         MVI   IODBR(IODBREG),X'01'                             02S0510
*       IF CCWCMD = TIC × CCWCMD = NOOP THEN /* IF TIC TO TIC OR
*                                      NO-OP                         */
         CLI   CCWCMD(CCWREG),8                                 02S0511
         BE    @RT00511                                         02S0511
         CLI   CCWCMD(CCWREG),3                                 02S0511
         BNE   @RF00511                                         02S0511
@RT00511 DS    0H                                               02S0512
*         DO;                                                   02S0512
*                                                               02S0512
*TCCERR:                                                        02S0513
*           ERBID = MSGTCC;         /* SET MESSAGE ID                */
TCCERR   MVI   ERBID(CCTREG),X'06'                              02S0513
*           GO TO TERMEXIT;         /* AND EXIT                      */
         B     TERMEXIT                                         02S0514
*         END;                                                  02S0515
*       RESTART1 = CCW;             /* FAILING CCW MUST BE A READ
*                                      BECAUSE OF SADMP CCW CHAINS
*                                      AND OPERATION INCOMPLETE      */
@RF00511 MVC   RESTART1(8),CCW(CCWREG)                          02S0516
*       RESDADD1 = RESDADD1 + RESCNT1 - CSWCNT; /* CALCULATE NEW DATA
*                                      ADDRESS                       */
         L     @10,RESDADD1-1                                   02S0517
         LA    @10,0(,@10)                                      02S0517
         AH    @10,RESCNT1                                      02S0517
         LH    @07,CSWCNT+24(,IODBREG)                          02S0517
         N     @07,@CF00857                                     02S0517
         SLR   @10,@07                                          02S0517
         STCM  @10,7,RESDADD1                                   02S0517
*       RESFGDC = OFF;              /* BE SURE DATA CHAINING IS OFF  */
*       RESFGCC = OFF;              /* AND COMMAND CHAINING          */
         NI    RESFGDC,B'00111111'                              02S0519
*       RESCNT1 = CSWCNT;           /* SET NEW COUNT                 */
         STH   @07,RESCNT1                                      02S0520
*       IF RESCNT1 = ZERO THEN      /* IS NEW COUNT ZERO             */
         LTR   @07,@07                                          02S0521
         BZ    @RT00521                                         02S0521
*         GO TO DRC0;               /* YES--RETURN GOOD              */
*     END;                                                      02S0523
*   RESF = ZERO;                    /* ZERO FLAG FIELD               */
@RC00496 MVI   RESF,X'00'                                       02S0524
*   IODBCAW = ADDR(RESTARTA);       /* SET ADDRESS OF CCW CHAIN TO
*                                      RESTART                       */
         LA    @10,RESTARTA                                     02S0525
         ST    @10,IODBCAW(,IODBREG)                            02S0525
*   ERBPID = MSGTCC;                /* SET MESSAGE ID                */
         MVI   ERBPID,X'06'                                     02S0526
*   ERBSCT = ZERO;                  /* SET SECONDARY RETRY COUNT     */
         MVI   ERBSCT,X'00'                                     02S0527
*   ERBPCT = THREE;                 /* SET PRIMARY RETRY COUNT       */
         MVI   ERBPCT,X'03'                                     02S0528
*   R1 = ADDR(ERBPARM);             /* SET INPUT REG                 */
         LA    R1,ERBPARM                                       02S0529
*   SVC (ERBSVC);                   /* UPDATE ERB                    */
         SVC   20                                               02S0530
*   GO TO REPEATOP;                 /* RETRY OPERATION               */
         B     REPEATOP                                         02S0531
*                                                               02S0532
*   /*****************************************************************/
*   /*                                                               */
*   /* 3330 ERROR RECOVERY ROUTINE                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0532
*                                                               02S0532
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING CONDITIONS ARE ALL HANDLED IN COMMON CODE,      */
*   /* COMMAND REJECT--SENSE BYTE 0 BIT 0, INTERVENTION              */
*   /* REQUIRED--SENSE BYTE 0 BIT 1, BUS OUT CHECK--SENSE BYTE 0 BIT */
*   /* 2, AND PERNAMENT ERROR--SNESE BYTE 1 BIT 0, AND EQUIPMENT     */
*   /* CHECK--SENSE BYTE 0 BIT 3.                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0532
*/*D3330: N THIS IS THE 3330 ERROR RECOVERY ROUTINE                  */
*/* D (YES,CCMDRJT,NO,) COMMAND REJECT ?                             */
*/* D (YES,CINTVREQ,NO,) INTV REQUIRED ?                             */
*/* D (YES,CBUSOUT,NO,) BUSOUT CHECK ?                               */
*/* D (YES,CPERMERR,NO,D3330EQ) PERMANENT ERROR ?                    */
*/*D3330EQ: D (YES,,NO,D3330OR) EQUIMENT CK ?                        */
*                                                               02S0532
*D3330:                                                         02S0532
*D3350:                                                    /*@Z30RSTA*/
*   IF SENCR = ON THEN              /* IF COMMAND REJECT             */
D3330    DS    0H                                               02S0532
D3350    TM    SENCR(IODBREG),B'10000000'                       02S0532
         BO    @RT00532                                         02S0532
*     GO TO CCMDRJT;                /* HANDLE IN COMMON CODE         */
*   IF SENIR = ON THEN              /* IF INTERVENTION REQUIRED      */
         TM    SENIR(IODBREG),B'01000000'                       02S0534
         BO    @RT00534                                         02S0534
*     GO TO CINTVREQ;               /* HANDLE IN COMMON CODE         */
*   IF SENBO = ON THEN              /* IF BUS OUT                    */
         TM    SENBO(IODBREG),B'00100000'                       02S0536
         BO    @RT00536                                         02S0536
*     GO TO CBUSOUT;                /* HANDLE IN COMMON CODE         */
*   IF SENPE = ON THEN              /* PERMANENT ERROR               */
         TM    SENPE(IODBREG),B'10000000'                       02S0538
         BO    @RT00538                                         02S0538
*     GO TO CPERMERR;               /* HANDLE IN COMMON CODE         */
*   IF SENEC = ON THEN              /* IF EQUIPMENT CHECK WITHOUT
*                                      PERMANENT ERROR               */
         TM    SENEC(IODBREG),B'00010000'                       02S0540
         BO    @RT00540                                         02S0540
*     GO TO CEQUCK;                 /* HANDLE IN COMMON CODE         */
*                                                               02S0541
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS CODE HANDLES DATA CHECK--SENSE BYTE 0 BIT 4.             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0542
*/*D3330DTA: D (YES,,NO,D3330OI) DATA CK ?                           */
*/* D (YES,D3330COR,NO,OPRINCOM) CORRECTABLE ?                       */
*/*D3330COR: P OBTAIN IODBCSW - 8                                    */
*/* D (YES,OPRINCOM,NO,) SKIP BIT ON ?                               */
*/* P OBTAIN ERROR BYTES 18 AND 19                                   */
*/* P ERROR OFFSET = CCW DATA ADDR + (SENSE 15-17 - SENSE 18 & 19)   */
*/* P X-OR PATTERN OFFSET WITH SENSE 20, 21, AND 22                  */
*/*OPRINCOM: D (YES,,NO,DRC0) OPERATION INCOMPLETE ?                 */
*/* P USE USER CCHH + LOW ORDER HEAD BYTE WITH BITS 3-7 FROM SENSE 6 */
*/* N CONSTRUCT RESTART 2 CCW                                        */
*/* P CMD CODE = SENSE 3                                             */
*/* P DATA ADDR = ERR CCW DATA ADDR + SENSE 15-17                    */
*/* P FLAGS = ERROR CCW FLAGS WITHOUT PCI                            */
*/* P COUNT = CCW COUNT - SENSE 15-17                                */
*/*D (YES,CTOK,NO,DRC0) COUNT > 0 ?                                  */
*/*CTOK: P SEEK (ARGUMENT ABOVE) SET FILE MASK (ORIGINAL)            */
*/* P SET SECTOR (0) SEARCH ID EQUAL                                 */
*/* P RESTART CCW 2 ABOVE, TIC TO CSW                                */
*/* D (YES,,NO,DCKCTR) CSW CCW A TIC OR NOP ?                        */
*/* P MAKE LAST TIC A NOP                                            */
*/*DCKCTR: S AMDSAERB:SVC 20 DAERB, CC=04, PCT=2, SCT=0              */
*/* N (,REPEATOP) RETRY OPERATION                                    */
*   IF SENDC = ON THEN              /* IF DATA CHECK WITHOUT    02S0542
*                                      PERMANENT ERROR               */
         TM    SENDC(IODBREG),B'00001000'                       02S0542
         BNO   @RF00542                                         02S0542
*     DO;                                                       02S0543
*       IF SENCO = ON THEN          /* AND THE ERROR IS CORRECTABLE  */
         TM    SENCO(IODBREG),B'01000000'                       02S0544
         BNO   @RF00544                                         02S0544
*         DO;                                                   02S0545
*           IF CCWSKIP = OFF THEN   /* AND IF SKIP BIT OF ERROR CCW
*                                      IS OFF                        */
         TM    CCWSKIP(CCWREG),B'00010000'                      02S0546
         BNZ   @RF00546                                         02S0546
*             DO;                                               02S0547
*               EROFFSET = CCWDADDR + (SENS1517 - SENS1819); /* 02S0548
*                                      CALCULATE OFFSET IN BUFFER OF
*                                      ERROR                         */
         SLR   EROFFSET,EROFFSET                                02S0548
         ICM   EROFFSET,7,SENS1517(IODBREG)                     02S0548
         LH    @10,SENS1819(,IODBREG)                           02S0548
         N     @10,@CF00857                                     02S0548
         SLR   EROFFSET,@10                                     02S0548
         L     @10,CCWDADDR-1(,CCWREG)                          02S0548
         LA    @10,0(,@10)                                      02S0548
         ALR   EROFFSET,@10                                     02S0548
*               BUFFER = BUFFER && SENS2022; /* CORRECT BAD DATA AT
*                                      ERROR OFFSET WITH DATA FROM
*                                      SENSE BYTES                   */
         XC    BUFFER(3,EROFFSET),SENS2022(IODBREG)             02S0549
*             END;                                              02S0550
*         END;                                                  02S0551
@RF00546 DS    0H                                               02S0552
*       IF SENOI = OFF THEN         /* IF OPERATION IS NOT INCOMPLETE*/
@RF00544 TM    SENOI(IODBREG),B'00000001'                       02S0552
         BZ    @RT00552                                         02S0552
*         GO TO DRC0;               /* THEN RETURN SINCE THE ERROR
*                                      HAS BEEN CORRECTED            */
*       ELSE                                                    02S0554
*         DO;                       /* BUT IF THE OPERATION IS  02S0554
*                                      INCOMPLETE                    */
*           RES0CCHH = IODBCCHH(2:7) & 'FFFFFFFFFFE0'X; /* SET SEEK
*                                      CCHH TO LAST CCHH             */
         MVC   RES0CCHH(6),IODBCCHH+1(IODBREG)                  02S0555
         NC    RES0CCHH(6),@CB00831                             02S0555
*           RESH2 = RESH2 × (SENSE06 & '1F'X); /* AND IN UPDATED HEAD
*                                      FROM SENSE                    */
         LA    @10,31                                           02S0556
         SLR   @07,@07                                          02S0556
         IC    @07,SENSE06(,IODBREG)                            02S0556
         NR    @10,@07                                          02S0556
         SLR   @07,@07                                          02S0556
         IC    @07,RESH2                                        02S0556
         OR    @10,@07                                          02S0556
         STC   @10,RESH2                                        02S0556
*           IF SENCO = ON THEN      /* WAS DATA CORRECTABLE          */
         TM    SENCO(IODBREG),B'01000000'                       02S0557
         BNO   @RF00557                                         02S0557
*             RESH2 = RESH2 + ONE;  /* YES--THEN SEARCH FOR FIRST
*                                      RECORD ON NEXT TRACK          */
         AL    @10,@CF00062                                     02S0558
         STC   @10,RESH2                                        02S0558
*           RESR = ONE;             /* SET RECORD TO ONE             */
@RF00557 MVI   RESR,X'01'                                       02S0559
*           RESCMD = SENSE03;       /* USED COMMAND FROM SENSE       */
         MVC   RESCMD(1),SENSE03(IODBREG)                       02S0560
*           RESDADDR = CCWDADDR + SENS1517; /* CALCULATE NEW DATA
*                                      ADDRESS                       */
         SLR   @10,@10                                          02S0561
         ICM   @10,7,SENS1517(IODBREG)                          02S0561
         L     @07,CCWDADDR-1(,CCWREG)                          02S0561
         LA    @07,0(,@07)                                      02S0561
         ALR   @07,@10                                          02S0561
         STCM  @07,7,RESDADDR                                   02S0561
*           RESFLAGS = CCWFLAGS;    /* USE OLD FLAGS BUT             */
         MVC   RESFLAGS(1),CCWFLAGS(CCWREG)                     02S0562
*           RESFGPCI = OFF;         /* TURN OFF PCI FLAG             */
*           RESFGDC = OFF;          /* BE SURE DATA CHAINING IS OFF  */
*           RESFGCC = OFF;          /* AND COMMAND CHAINING          */
         NI    RESFGPCI,B'00110111'                             02S0565
*           RESCNT = CCWCNT - SENS1517; /* CALCULATE NEW COUNT       */
         LCR   @10,@10                                          02S0566
         LH    @07,CCWCNT(,CCWREG)                              02S0566
         N     @07,@CF00857                                     02S0566
         ALR   @10,@07                                          02S0566
         STH   @10,RESCNT                                       02S0566
*           IF RESCNT <= ZERO THEN  /* IS NEW COUNT ZERO OR LESS     */
         LTR   @10,@10                                          02S0567
         BNP   @RT00567                                         02S0567
*             GO TO DRC0;           /* RESTART NOT NECESSARY         */
*           IODBCAW = ADDR(RESTART); /* SET RESTART CCW ADDRESS      */
         LA    @10,RESTART                                      02S0569
         ST    @10,IODBCAW(,IODBREG)                            02S0569
*           ERBPID = MSGDC;         /* SET MESSAGE ID                */
         MVI   ERBPID,X'04'                                     02S0570
*           ERBSCT = ZERO;          /* SET SECONDARY RETRY COUNT     */
         MVI   ERBSCT,X'00'                                     02S0571
*           ERBPCT = TWO;           /* SET PRIMARY RETRY COUNT       */
         MVI   ERBPCT,X'02'                                     02S0572
*           R1 = ADDR(ERBPARM);     /* SET INPUT REG                 */
         LA    R1,ERBPARM                                       02S0573
*           SVC (ERBSVC);           /* UPDATE ERB                    */
         SVC   20                                               02S0574
*           GO TO REPEATOP;         /* RETRY OPERATION               */
         B     REPEATOP                                         02S0575
*         END;                                                  02S0576
*     END;                                                      02S0577
*                                                               02S0577
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS CODE HANDLES THE FOLLOWING CONDITIONS, OVERRUN(WITHOUT   */
*   /* PERMANENT ERROR)--SENSE BYTE 0 BIT 5, ENVIRONMENTAL           */
*   /* DATA--SENSE BYTE 2 BIT 3, NO RECORD FOUND--SENSE BYTE 1 BIT 4,*/
*   /* END OF CYLINDER--SENSE BYTE 1 BIT 2, AND FILE PROTECTED--SENSE*/
*   /* BYTE 1 BIT 5.                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0578
*/*D3330OR: D (YES,,NO,D3330DTA) OVERRUN ?                           */
*/* S AMDSAERB:SVC 20 DAERB, CC=5, PCT=10, SCT=0                     */
*/* N (,REPEATOP) RETRY OPERATION                                    */
*/*ENVDATA: D (YES,,NO,D3330NRF) ENVIRONMENTAL DATA ?                */
*/* S AMDSAERB:SVC 20 DAERB, CC=11, PCT=1, SCT=0                     */
*/* N (,REPEATOP) RETRY I/O OPERATION                                */
*/*D3330NRF: D (YES,,NO,D3330EOC) NO RECORD FOUND ?                  */
*/* P (,TERMEXIT) MESSAGE ID = 12                                    */
*/*D3330EOC: D (YES,,NO,D3330FP) END OF CYLINDER ?                   */
*/* P (,TERMEXIT) MESSAGE ID = 10                                    */
*/*D3330FP: D (YES,,NO,D3330MSC) FILE PROTECTED ?                    */
*/* P (,TERMEXIT) MESSAGE ID =13                                     */
*/*D3330MSC: P (,TERMEXIT) MESSAGE ID = 29                           */
*   IF SENOR = ON THEN              /* IF OVERRUN WITHOUT PERMANENT
*                                      ERROR                         */
@RF00542 TM    SENOR(IODBREG),B'00000100'                       02S0578
         BNO   @RF00578                                         02S0578
*     DO;                                                       02S0579
*       ERBPID = MSGOR;             /* SET MESSAGE ID                */
         MVI   ERBPID,X'05'                                     02S0580
*       ERBSCT = ZERO;              /* SET SECONDARY RETRY COUNT     */
         MVI   ERBSCT,X'00'                                     02S0581
*       ERBPCT = TEN;               /* SET PRIMARY RETRY COUNT       */
         MVI   ERBPCT,X'0A'                                     02S0582
*       R1 = ADDR(ERBPARM);         /* SET INPUT REG                 */
         LA    R1,ERBPARM                                       02S0583
*       SVC (ERBSVC);               /* UPDATE ERB                    */
         SVC   20                                               02S0584
*       GO TO REPEATOP;             /* NOW REPEAT LAST OPERATION     */
         B     REPEATOP                                         02S0585
*     END;                                                      02S0586
*   IF SENEDP = ON THEN             /* IF ENVIRONMENTAL DATA         */
@RF00578 TM    SENEDP(IODBREG),B'00010000'                      02S0587
         BNO   @RF00587                                         02S0587
*     DO;                                                       02S0588
*       ERBPID = MSGEDP;            /* SET MESSAGE ID                */
         MVI   ERBPID,X'0B'                                     02S0589
*       ERBSCT = ZERO;              /* SET SECONDARY RETRY COUNT     */
         MVI   ERBSCT,X'00'                                     02S0590
*       ERBPCT = ONE;               /* SET PRIMARY RETRY COUNT       */
         MVI   ERBPCT,X'01'                                     02S0591
*       R1 = ADDR(ERBPARM);         /* SET INPUT REG                 */
         LA    R1,ERBPARM                                       02S0592
*       SVC (ERBSVC);               /* UPDATE ERB                    */
         SVC   20                                               02S0593
*       GO TO REPEATOP;             /* REPEAT OPERATION              */
         B     REPEATOP                                         02S0594
*     END;                                                      02S0595
*   IF SENNRF = ON THEN             /* IF NO RECORD FOUND            */
@RF00587 TM    SENNRF(IODBREG),B'00001000'                      02S0596
         BNO   @RF00596                                         02S0596
*     DO;                                                       02S0597
*       ERBID = MSGNRF;             /* SET MESSAGE ID                */
         MVI   ERBID(CCTREG),X'0C'                              02S0598
*       GO TO TERMEXIT;             /* AND EXIT                      */
         B     TERMEXIT                                         02S0599
*     END;                                                      02S0600
*   IF SENEOC = ON THEN             /* IF END OF CYLINDER            */
@RF00596 TM    SENEOC(IODBREG),B'00100000'                      02S0601
         BNO   @RF00601                                         02S0601
*     DO;                                                       02S0602
*       ERBID = MSGEOC;             /* SET MESSAGE ID                */
         MVI   ERBID(CCTREG),X'0A'                              02S0603
*       GO TO TERMEXIT;             /* AND EXIT                      */
         B     TERMEXIT                                         02S0604
*     END;                                                      02S0605
*   IF SENFP = ON THEN              /* IF FILE PROTECTED             */
@RF00601 TM    SENFP(IODBREG),B'00000100'                       02S0606
         BNO   @RF00606                                         02S0606
*     DO;                                                       02S0607
*       ERBID = MSGFP;              /* SET MESSAGE ID                */
         MVI   ERBID(CCTREG),X'0D'                              02S0608
*       GO TO TERMEXIT;             /* AND EXIT                      */
         B     TERMEXIT                                         02S0609
*     END;                                                      02S0610
*                                                               02S0610
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS CODE HANDLES OPERATION INCOMPLETE--SENSE BYTE 1 BIT 7.   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0611
*/*D3330OI: D (YES,,NO,ENVDATA) OPERATION INCOMPLETE ?               */
*/* P USE CCHH OF USER + LOW ORDER HEAD BYTE OF BITS 3-7 FROM SENSE 6*/
*/* N CONSTRUCT RESTART 1 CCW                                        */
*/* P MOVE IN COMMAND FROM SENSE BYTE 3                              */
*/* P DATA ADDR = CCW ERROR DATA ADDR + 4K - CSW RESIDUAL CT         */
*/* P FLAGS = ORIGINAL FLAGS                                         */
*/* P TURN OFF PCI                                                   */
*/* P COUNT = CSW RESIDUAL COUNT                                     */
*/* D (YES,DRC0,NO,ADDSENSE) CT IN CSW = 0 ?                         */
*/*ADDSENSE: P TIC TO THE FAILING CCW - 8                            */
*/* D (YES,,NO,IO) CSW CCW A TIC OR NOP ?                            */
*/* P MAKE LAST CCW A TIC OR NOP                                     */
*/*IO: S AMDSAERB:SVC 20 DAERB, CC=14, PCT=2, SCT=0                  */
*/* N (,REPEATOP) RETRY OPERATION                                    */
*   IF SENOI = ON THEN              /* IF OPERATION INCOMPLETE  02S0611
*                                      WITHOUT PERMANENT ERROR       */
@RF00606 TM    SENOI(IODBREG),B'00000001'                       02S0611
         BNO   @RF00611                                         02S0611
*     DO;                                                       02S0612
*       RES0CCHH = IODBCCHH(2:7) & 'FFFFFFFFFFE0'X; /* SET SEEK CCHH
*                                      TO LAST CCHH                  */
         MVC   RES0CCHH(6),IODBCCHH+1(IODBREG)                  02S0613
         NC    RES0CCHH(6),@CB00831                             02S0613
*       RESH2 = RESH2 × (SENSE06 & '1F'X); /* AND IN UPDATED HEAD
*                                      FROM SENSE                    */
         LA    @10,31                                           02S0614
         SLR   @07,@07                                          02S0614
         IC    @07,SENSE06(,IODBREG)                            02S0614
         NR    @10,@07                                          02S0614
         SLR   @07,@07                                          02S0614
         IC    @07,RESH2                                        02S0614
         OR    @10,@07                                          02S0614
         STC   @10,RESH2                                        02S0614
*       RESCMD = SENSE03;           /* USED COMMAND FROM SENSE       */
         MVC   RESCMD(1),SENSE03(IODBREG)                       02S0615
*       RESDADDR = CCWDADDR + CCWCNT - CSWCNT; /* CALCULATE NEW DATA
*                                      ADDRESS                       */
         L     @10,CCWDADDR-1(,CCWREG)                          02S0616
         LA    @10,0(,@10)                                      02S0616
         LH    @07,CCWCNT(,CCWREG)                              02S0616
         N     @07,@CF00857                                     02S0616
         ALR   @10,@07                                          02S0616
         LH    @07,CSWCNT+24(,IODBREG)                          02S0616
         N     @07,@CF00857                                     02S0616
         SLR   @10,@07                                          02S0616
         STCM  @10,7,RESDADDR                                   02S0616
*       RESFLAGS = CCWFLAGS;        /* USE OLD FLAGS BUT             */
         MVC   RESFLAGS(1),CCWFLAGS(CCWREG)                     02S0617
*       RESFGPCI = OFF;             /* TURN OFF PCI FLAG             */
*       RESFGDC = OFF;              /* BE SURE DATA CHAINING IS OFF  */
*       RESFGCC = OFF;              /* AND COMMAND CHAINING          */
         NI    RESFGPCI,B'00110111'                             02S0620
*       RESCNT = CSWCNT;            /* NEW COUNT IS RESIDUAL COUNT   */
         STH   @07,RESCNT                                       02S0621
*       IF CSWCNT = ZERO THEN       /* IS RESIDUAL COUNT ZERO        */
         LTR   @07,@07                                          02S0622
         BZ    @RT00622                                         02S0622
*         GO TO DRC0;               /* YES--RETURN GOOD              */
*       IODBCAW = ADDR(RESTART);    /* SET RESTART CCW ADDRESS       */
         LA    @10,RESTART                                      02S0624
         ST    @10,IODBCAW(,IODBREG)                            02S0624
*       ERBPID = MSGOI;             /* SET MESSAGE ID                */
         MVI   ERBPID,X'0E'                                     02S0625
*       ERBSCT = ZERO;              /* SET SECONDARY RETRY COUNT     */
         MVI   ERBSCT,X'00'                                     02S0626
*       ERBPCT = TWO;               /* SET PRIMARY RETRY COUNT       */
         MVI   ERBPCT,X'02'                                     02S0627
*       R1 = ADDR(ERBPARM);         /* SET INPUT REG                 */
         LA    R1,ERBPARM                                       02S0628
*       SVC (ERBSVC);               /* UPDATE ERB                    */
         SVC   20                                               02S0629
*       GO TO REPEATOP;             /* RETRY OPERATION               */
         B     REPEATOP                                         02S0630
*     END;                                                      02S0631
*   ERBID = MSGUNK;                 /* CONDITION NOT FOUND--SET 02S0632
*                                      GENERAL MESSAGE ID            */
@RF00611 MVI   ERBID(CCTREG),X'1D'                              02S0632
*   GO TO TERMEXIT;                 /* AND EXIT                      */
*                                                               02S0633
         B     TERMEXIT                                         02S0633
*   /*****************************************************************/
*   /*                                                               */
*   /* NO OTHER CONDITIONS ARE EXPECTED FROM A 3330 OR 3330-1. IF    */
*   /* OTHER CONDITIONS OCCUR THEY ARE DO TO HARDWARE OR PROGRAMMING */
*   /* ERRORS.                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0634
*                                                               02S0634
*   /*****************************************************************/
*   /*                                                               */
*   /* 2305-1 AND 2305-2 ERROR RECOVERY ROUTINE                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0634
*                                                               02S0634
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING CONDITIONS ARE HANDLED IN COMMON CODE, COMMAND  */
*   /* REJECT--SENSE BYTE 0 BIT 0, INTERVENTION REQUIRED--SENSE BYTE */
*   /* 0 BIT 1, BUS OUT CHECK--SENSE BYTE 0 BIT 2, PERMANENT         */
*   /* ERROR--SENSE BYTE 1 BIT 0, AND EQUIPMENT CHECK--SENSE BYTE 0  */
*   /* BIT3.                                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0634
*/*D2305: N THIS HANDLES 2305-1 AND 2305-2 ERRORS                    */
*/* D (YES,CCMDRJT,NO,) COMMAND REJECT ?                             */
*/* D (YES,CINTVREQ,NO,) INTV REQUIRED ?                             */
*/* D (YES,CBUSOUT,NO,) BUSOUT CK ?                                  */
*/* D (YES,CPERMERR,NO,) PERMANENT ERROR ?                           */
*/* D (YES,CEQUCK,NO,) EQU CK ?                                      */
*                                                               02S0634
*D2305:                                                         02S0634
*   IF SENCR = ON THEN              /* IF COMMAND REJECT             */
D2305    TM    SENCR(IODBREG),B'10000000'                       02S0634
         BO    @RT00634                                         02S0634
*     GO TO CCMDRJT;                /* HANDLE IN COMMON CODE         */
*   IF SENIR = ON THEN              /* IF INTERVENTION REQUIRED      */
         TM    SENIR(IODBREG),B'01000000'                       02S0636
         BO    @RT00636                                         02S0636
*     GO TO CINTVREQ;               /* HANDLE IN COMMON CODE         */
*   IF SENBO = ON THEN              /* IF BUS OUT                    */
         TM    SENBO(IODBREG),B'00100000'                       02S0638
         BO    @RT00638                                         02S0638
*     GO TO CBUSOUT;                /* HANDLE IN COMMON CODE         */
*   IF SENPE = ON THEN              /* IF PERMANENT ERROR            */
         TM    SENPE(IODBREG),B'10000000'                       02S0640
         BO    @RT00640                                         02S0640
*     GO TO CPERMERR;               /* HANDLE IN COMMON CODE         */
*   IF SENEC = ON THEN              /* IF EQUIPMENT CHECK            */
         TM    SENEC(IODBREG),B'00010000'                       02S0642
         BO    @RT00642                                         02S0642
*     GO TO CEQUCK;                 /* HANDLE IN COMMON CODE         */
*                                                               02S0643
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING CODE HANDLES DATA CHECK--SENSE BYTE 0 BIT 4.    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0644
*/* D (NO,D2305NRF,YES,) DATA CK ?                                   */
*/* D (YES,DCRET,NO,) SENSE 2 1 ON ?                                 */
*/* S AMDSAERB:SVC 20 DAERB, CC=04, PCT=10, SCT=0                    */
*/* N (,REPEATOP) RETRY I/O OPERATION                                */
*/*DCRET: P OBTAIN CSW CCW - 8                                       */
*/* D (YES,DCOI,NO,) SKIP BIT ON ?                                   */
*/* P OBTAIN ERROR BYTES 18 AND 19                                   */
*/* P A = LAST CCW DATA ADDRESS + CCW COUNT                          */
*/* P B = RESIDUAL CSW COUNT + SENSE BYTES 18 AND 19                 */
*/* P ERROR OFFSET = A - B                                           */
*/* P X-OR PATTERN OFFSET WITH SENSE 20, 21, AND 22                  */
*/*DCOI: D (YES,,NO,DRC0) OPERATION INCOMPLETE ?                     */
*/* P USE CH IN SENSE BYTES 5 & 6                                    */
*/* P INCREMENT CH ABOVE BY 1                                        */
*/* N CONSTRUCT RESTART CCW                                          */
*/* P CMD CODE = SENSE 3                                             */
*/* P DATA ADDR = DATA ADDR OF INTERRUPTED CCW + 4K - RESIDUAL CSW CT*/
*/* P FLAGS = ORIGINAL FLAGS - PCI                                   */
*/* P COUNT = RESIDUAL CSW COUNT                                     */
*/* D (YES,DRC0,NO,CTDCOK) CT = 0 ?                                  */
*/*CTDCOK: P SEEK SFM ORIGINAL SEARCH ID R1 TIC TO SEARCH            */
*/* P  RESTART CCW CONSTRUCTED ABOVE TIC TO CSW                      */
*/* D (YES,,NO,DCNOI) CSW CCW A TIC OR NOP ?                         */
*/* P MAKE LAST CCW A TIC OR NOP                                     */
*/*DCNOI: S AMDSAERB:SVC 20 DAERB, CC=04, PCT=2, SCT=0               */
*/* N (,REPEATOP) RETRY I/O OPERATION                                */
*   IF SENDC = ON THEN              /* IF DATA CHECK                 */
         TM    SENDC(IODBREG),B'00001000'                       02S0644
         BNO   @RF00644                                         02S0644
*     IF SENCO = OFF THEN           /* BUT DATA IS NOT CORRECTABLE   */
         TM    SENCO(IODBREG),B'01000000'                       02S0645
         BNZ   @RF00645                                         02S0645
*       DO;                                                     02S0646
*         ERBPID = MSGDC;           /* SET MESSAGE ID                */
         MVI   ERBPID,X'04'                                     02S0647
*         ERBSCT = ZERO;            /* SET SECONDARY ERROR COUNT     */
         MVI   ERBSCT,X'00'                                     02S0648
*         ERBPCT = TEN;             /* SET PRIMARY ERROR COUNT       */
         MVI   ERBPCT,X'0A'                                     02S0649
*         R1 = ADDR(ERBPARM);       /* SET INPUT REG                 */
         LA    R1,ERBPARM                                       02S0650
*         SVC (ERBSVC);             /* UPDATE ERB                    */
         SVC   20                                               02S0651
*         GO TO REPEATOP;           /* RETRY OPERATION               */
         B     REPEATOP                                         02S0652
*       END;                                                    02S0653
*     ELSE                                                      02S0654
*       DO;                         /* BUT IF THE DATA IS       02S0654
*                                      CORRECTABLE--CORRECT IT       */
@RF00645 DS    0H                                               02S0655
*         IF CCWSKIP = OFF THEN     /* IF DATA WAS READ CORRECT IT   */
         TM    CCWSKIP(CCWREG),B'00010000'                      02S0655
         BNZ   @RF00655                                         02S0655
*           DO;                                                 02S0656
*             EROFFSET = CCWDADDR + CCWCNT - (CSWCNT + SENS1819); /*
*                                      CALCUALTE ERROR OFFSET        */
         L     EROFFSET,CCWDADDR-1(,CCWREG)                     02S0657
         LA    EROFFSET,0(,EROFFSET)                            02S0657
         LH    @10,CCWCNT(,CCWREG)                              02S0657
         N     @10,@CF00857                                     02S0657
         ALR   EROFFSET,@10                                     02S0657
         LH    @10,CSWCNT+24(,IODBREG)                          02S0657
         N     @10,@CF00857                                     02S0657
         LH    @07,SENS1819(,IODBREG)                           02S0657
         N     @07,@CF00857                                     02S0657
         ALR   @10,@07                                          02S0657
         SLR   EROFFSET,@10                                     02S0657
*             BUFFER = BUFFER && SENS2022; /* CORRECT DATA IN BUFFER
*                                      WITH SENSE BYTES              */
         XC    BUFFER(3,EROFFSET),SENS2022(IODBREG)             02S0658
*           END;                                                02S0659
*         IF SENOI = OFF THEN       /* IF OPERATION IN COMPLETE      */
@RF00655 TM    SENOI(IODBREG),B'00000001'                       02S0660
         BZ    @RT00660                                         02S0660
*           GO TO DRC0;             /* THEN RETURN                   */
*         ELSE                                                  02S0662
*           DO;                     /* OTHERWISE COMPLETE THE   02S0662
*                                      OPERATION                     */
*             RES0CCHH = RES0CCHH && RES0CCHH; /* CLEAR SEEK ADDRESS */
         XC    RES0CCHH(6),RES0CCHH                             02S0663
*             RESC2 = SENSE05;      /* SET SEEK CYLINDER FROM SENSE  */
         MVC   RESC2(1),SENSE05(IODBREG)                        02S0664
*             RESH2 = SENSE06 + 1;  /* SET SEEK HEAD FROM SENSE      */
         LA    @10,1                                            02S0665
         SLR   @07,@07                                          02S0665
         IC    @07,SENSE06(,IODBREG)                            02S0665
         ALR   @10,@07                                          02S0665
         STC   @10,RESH2                                        02S0665
*             RESR = ONE;           /* SET RECORD TO ONE             */
         MVI   RESR,X'01'                                       02S0666
*             RESCMD = SENSE03;     /* USE COMMAND IN SENSE          */
         MVC   RESCMD(1),SENSE03(IODBREG)                       02S0667
*             RESDADDR = CCWDADDR + CCWCNT - CSWCNT; /* SET DATA
*                                      ADDRESS IN RESTART CCW        */
         L     @10,CCWDADDR-1(,CCWREG)                          02S0668
         LA    @10,0(,@10)                                      02S0668
         LH    @07,CCWCNT(,CCWREG)                              02S0668
         N     @07,@CF00857                                     02S0668
         ALR   @10,@07                                          02S0668
         LH    @07,CSWCNT+24(,IODBREG)                          02S0668
         N     @07,@CF00857                                     02S0668
         SLR   @10,@07                                          02S0668
         STCM  @10,7,RESDADDR                                   02S0668
*             RESFLAGS = CCWFLAGS;  /* USE FLAGS OF ERROR CCW        */
         MVC   RESFLAGS(1),CCWFLAGS(CCWREG)                     02S0669
*             RESFGPCI = OFF;       /* AND PCI IS OFF                */
*             RESFGDC = OFF;        /* BE SUR DATA CHAINING IS OFF   */
*             RESFGCC = OFF;        /* AND COMMAND CHAINING          */
         NI    RESFGPCI,B'00110111'                             02S0672
*             RESCNT = CSWCNT;      /* USE RESIDUAL COUNT            */
         STH   @07,RESCNT                                       02S0673
*             IF CSWCNT = ZERO THEN /* BUT RESET IF COUNT IS ZERO    */
         LTR   @07,@07                                          02S0674
         BZ    @RT00674                                         02S0674
*               GO TO DRC0;         /* YES--RETURN GOOD              */
*             IODBCAW = ADDR(RESTART); /* SET RESTART CCW ADDRESS    */
         LA    @10,RESTART                                      02S0676
         ST    @10,IODBCAW(,IODBREG)                            02S0676
*             ERBPID = MSGDC;       /* SET MESSAGE ID                */
         MVI   ERBPID,X'04'                                     02S0677
*             ERBSCT = ZERO;        /* SET SECONDARY RETRY COUNT     */
         MVI   ERBSCT,X'00'                                     02S0678
*             ERBPCT = TWO;         /* SET PRIMARY RETRY COUNT       */
         MVI   ERBPCT,X'02'                                     02S0679
*             R1 = ADDR(ERBPARM);   /* SET INPUT REG                 */
         LA    R1,ERBPARM                                       02S0680
*             SVC (ERBSVC);         /* UPDATE ERB                    */
         SVC   20                                               02S0681
*             GO TO REPEATOP;       /* RETRY OPERATION               */
         B     REPEATOP                                         02S0682
*           END;                                                02S0683
*       END;                                                    02S0684
*                                                               02S0684
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS CODE HANDLES THE FOLLOWING CONDITIONS, NO RECORD         */
*   /* FOUND--SENSE BYTE 1 BIT 4, OVERRUN--SENSE BYTE 0 BIT 5,       */
*   /* BUFFERED LOG FULL--SENSE BYTE 2 BIT 0, END OF CYLINDER--SENSE */
*   /* BYTE 1 BIT 2, AND FILE PROTECTED--SENSE BYTE 1 BIT 5.         */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0685
*/*D2305NRF: D (YES,,NO,D2305OR) NO RECORD FOUND ?                   */
*/* P (,TERMEXIT) MESSAGE ID = 12                                    */
*/*D2305OR: D (YES,,NO,D2305BLF) OVERRUN                             */
*/* S AMDSAERB: DAERB CC=05, PCT=10, SCT=0                           */
*/* N (,REPEATOP) RETRY I/O OPERATION                                */
*/*D2305BLF: D (YES,,NO,D2305EOC) BUFFER LOG FULL ?                  */
*/* S AMDSAERI: ISSUE READ BUFFERED LOG CCW                          */
*/* D (YES,%OKRBL,NO,) RETURN CODE = 0                               */
*/* P (,TERMEXIT) MESSAGE ID = 31                                    */
*/*%OKRBL: S AMDSAERB: DAERB CC=32, PCT=2, SCT=0                     */
*/* N (,REPEATOP) RETRY I/O OPERATION                                */
*/*D2305EOC: D (YES,,NO,D2305FP) END OF CYLINDER ?                   */
*/* P (,TERMEXIT) MESSAGE ID = 10                                    */
*/*D2305FP: D (YES,,NO,D2305MIS) FILE PROTECTED ?                    */
*/* P (,TERMEXIT) MESSAGE ID = 13                                    */
*/*D2305MIS: P (,TERMEXIT) MESSAGE ID = 29                           */
*   IF SENNRF = ON THEN             /* IF NO RECORD FOUND            */
@RF00644 TM    SENNRF(IODBREG),B'00001000'                      02S0685
         BNO   @RF00685                                         02S0685
*     DO;                                                       02S0686
*       ERBID = MSGNRF;             /* SET MESSAGE ID                */
         MVI   ERBID(CCTREG),X'0C'                              02S0687
*       GO TO TERMEXIT;             /* AND EXIT                      */
         B     TERMEXIT                                         02S0688
*     END;                                                      02S0689
*   IF SENOR = ON THEN              /* IF OVERRUN                    */
@RF00685 TM    SENOR(IODBREG),B'00000100'                       02S0690
         BNO   @RF00690                                         02S0690
*     DO;                                                       02S0691
*       ERBPID = MSGOR;             /* SET MESSAGE ID                */
         MVI   ERBPID,X'05'                                     02S0692
*       ERBSCT = ZERO;              /* SET SECONDARY RETRY COUNT     */
         MVI   ERBSCT,X'00'                                     02S0693
*       ERBPCT = TEN;               /* SET PRIMARY RETRY COUNT       */
         MVI   ERBPCT,X'0A'                                     02S0694
*       R1 = ADDR(ERBPARM);         /* SET INPUT REG                 */
         LA    R1,ERBPARM                                       02S0695
*       SVC (ERBSVC);               /* UPDATE ERB                    */
         SVC   20                                               02S0696
*       GO TO REPEATOP;             /* RETRY OPERATION               */
         B     REPEATOP                                         02S0697
*     END;                                                      02S0698
*   IF SENBLF = ON THEN             /* IF BUFFERED LOG FULL          */
@RF00690 TM    SENBLF(IODBREG),B'10000000'                      02S0699
         BNO   @RF00699                                         02S0699
*     DO;                                                       02S0700
*       RESPECIFY (R11,RETCODE) RESTRICTED; /* RESTRICT REGISTERS    */
*       R11 = ADDR(RDBUFLOG);       /* SET ADDRESS OF READ BUFFERED
*                                      LOG CCW                       */
         LA    R11,RDBUFLOG                                     02S0702
*       SVC (ERISVC);               /* ISSUE SIO FOR CCW             */
         SVC   23                                               02S0703
*       IF RETCODE ^= ZERO THEN     /* WAS SIO SUCCESSFULL           */
         LTR   RETCODE,RETCODE                                  02S0704
         BZ    @RF00704                                         02S0704
*         DO;                                                   02S0705
*           ERBID = MSGERR;         /* NO--SET MESSAGE ID            */
         MVI   ERBID(CCTREG),X'1F'                              02S0706
*           GO TO TERMEXIT;         /* AND EXIT                      */
         B     TERMEXIT                                         02S0707
*         END;                                                  02S0708
*       RESPECIFY (R11,RETCODE) UNRESTRICTED; /* RELEASE REGISTERS   */
@RF00704 DS    0H                                               02S0710
*       ERBPID = MSGBLF;            /* SET MESSAGE ID                */
         MVI   ERBPID,X'20'                                     02S0710
*       ERBSCT = ZERO;              /* SET SECONDARY RETRY COUNT     */
         MVI   ERBSCT,X'00'                                     02S0711
*       ERBPCT = TWO;               /* SET PRIMARY RETRY COUNT       */
         MVI   ERBPCT,X'02'                                     02S0712
*       R1 = ADDR(ERBPARM);         /* SET INPUT REG                 */
         LA    R1,ERBPARM                                       02S0713
*       SVC (ERBSVC);               /* UPDATE ERB                    */
         SVC   20                                               02S0714
*       GO TO REPEATOP;             /* RETRY OPERATION               */
         B     REPEATOP                                         02S0715
*     END;                                                      02S0716
*   IF SENEOC = ON THEN             /* IF END OF CYLINDER            */
@RF00699 TM    SENEOC(IODBREG),B'00100000'                      02S0717
         BNO   @RF00717                                         02S0717
*     DO;                                                       02S0718
*       ERBID = MSGEOC;             /* SET MESSAGE ID                */
         MVI   ERBID(CCTREG),X'0A'                              02S0719
*       GO TO TERMEXIT;             /* AND EXIT                      */
         B     TERMEXIT                                         02S0720
*     END;                                                      02S0721
*   IF SENFP = ON THEN              /* IF FILE PROTECTED             */
@RF00717 TM    SENFP(IODBREG),B'00000100'                       02S0722
         BNO   @RF00722                                         02S0722
*     DO;                                                       02S0723
*       ERBID = MSGFP;              /* SET MESSAGE ID                */
         MVI   ERBID(CCTREG),X'0D'                              02S0724
*       GO TO TERMEXIT;             /* AND EXIT                      */
         B     TERMEXIT                                         02S0725
*     END;                                                      02S0726
*   ERBID = MSGUNK;                 /* CONDITION NOT FOUND--SET 02S0727
*                                      GENERAL MESSAGE ID            */
@RF00722 MVI   ERBID(CCTREG),X'1D'                              02S0727
*   GO TO TERMEXIT;                 /* AND EXIT                      */
*                                                               02S0728
         B     TERMEXIT                                         02S0728
*   /*****************************************************************/
*   /*                                                               */
*   /* NO OTHER CONDITIONS ARE EXPECTED FROM A 2305-1 OR 2305-2. IF  */
*   /* OTHER CONDITIONS OCCUR THEY ARE DO TO HARDWARE OR PROGRAMMIN  */
*   /* ERRORS .                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0729
*                                                               02S0729
*   /*****************************************************************/
*   /*                                                               */
*   /* 3340 ERROR RECOVERY ROUTINE                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0729
*                                                               02S0729
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING CONDITIONS ARE HANDLED IN COMMON CODE, COMMAND  */
*   /* REJECT--SENSE BYTE 0 BIT 0, INTERVENTION REQUIRED--SENSE BYTE */
*   /* 0 BIT 1, BUS OUT CHECK--SENSE BYTE 0 BIT 2, AND EQUIPMENT     */
*   /* CHECK--SENSE BYTE O BIT 3.                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0729
*/*D3340: N THIS HANDLES 3340 ERROR RECOVERY                         */
*/* D (YES,CCMDRJT,NO,) CMD REJECT ?                                 */
*/* D (YES,CINTVREQ,NO,) INTV REQUIRED ?                             */
*/* D (YES,CBUSOUT,NO,) BUS OUT CK ?                                 */
*/* D (YES,CEQUCK,NO,D3340DC) EQUIPMENT CK ?                         */
*                                                               02S0729
*D3340:                                                         02S0729
*   IF SENCR = ON THEN              /* IF COMMAND REJECT Y02130      */
D3340    TM    SENCR(IODBREG),B'10000000'                       02S0729
         BO    @RT00729                                         02S0729
*     GO TO CCMDRJT;                /* HANDLE IN COMMON CODE Y02130  */
*   IF SENIR = ON THEN              /* IF INTERVENTION REQUIRED 02S0731
*                                      Y02130                        */
         TM    SENIR(IODBREG),B'01000000'                       02S0731
         BO    @RT00731                                         02S0731
*     GO TO CINTVREQ;               /* HANDLE IN COMMON CODE Y02130  */
*   IF SENBO = ON THEN              /* IF BUS OUT CHECK Y02130       */
         TM    SENBO(IODBREG),B'00100000'                       02S0733
         BO    @RT00733                                         02S0733
*     GO TO CBUSOUT;                /* HANDLE IN COMMON CODE Y02130  */
*   IF SENEC = ON THEN              /* IF EQUIPMENT CHECK Y02130     */
         TM    SENEC(IODBREG),B'00010000'                       02S0735
         BO    @RT00735                                         02S0735
*     GO TO CEQUCK;                 /* HANDLE IN COMMON CODE         */
*                                                               02S0736
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING CODE HANDLES DATA CHECK--SENSE BYTE 0 BIT 4.    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0737
*/*D3340DC: D (YES,,NO,D3340O) DATA CK ?                             */
*/* D (YES,,NO,D3340DCR) CORRECTABLE ?                               */
*/* P OBTAIN ERROR DISPLACEMENT FROM SENSE BYTES 18 & 19             */
*/* P OBTAIN RESTART DISPLACEMENT FROM SENSE 15, 16, 17              */
*/* P ERROR OFFSET = RESTART DISPLACEMENT - ERROR DISPLACEMENT       */
*/* P X-OR PATTERN FROM SENSE BYTES 20, 21, AND 22                   */
*/*OPRIN: D (YES,,NO,DRC0) OPERATION INCOMPLETE ?                    */
*/* P OBTAIN SEEK CCHH--CCH FROM USER, LOW H FROM BITS 3-7 OF SENSE 6*/
*/* S AMDSAEOC:INCREMENT SEEK ADDRESS BY 1                           */
*/* N CONSTRUCT RESTART 2 CCW                                        */
*/* P CMD CCW FROM SENSE 3                                           */
*/* P DATA ADDRESS = CCW DATA ADDR + SENSE 15-17                     */
*/* P FLAGS = ORIGINAL FLAGS - PCI                                   */
*/* P COUNT = CCW COUNT - SENSE 15-17                                */
*/* D (YES,DRC0,NO,COUNTOK) COUNT = 0 ?                              */
*/*COUNTOK: P RETRY OPERATION SEEK TO CALCULATED CCHHR               */
*/* P SFM (ORIGINAL) SET SECTOR (0)                                  */
*/* P SEARCH ID R1 TIC *-8 RESTART 2 CCW                             */
*/*D3340DCR: S AMDSAERB:SVC 20 DAERB, CC=04, PCT=2, SCT=0            */
*/* N (,REPEATOP) REPEAT OPERATION                                   */
*   IF SENDC = ON THEN              /* IF DATA CHECK Y02130          */
         TM    SENDC(IODBREG),B'00001000'                       02S0737
         BNO   @RF00737                                         02S0737
*     DO;                           /* Y02130                        */
*       IF SENCO = OFF THEN         /* AND IF IT IS NOT CORRECTABLE
*                                      Y02130                        */
         TM    SENCO(IODBREG),B'01000000'                       02S0739
         BNZ   @RF00739                                         02S0739
*         DO;                       /* Y02130                        */
*           ERBPID = MSGDC;         /* SET MESSAGE ID Y02130         */
         MVI   ERBPID,X'04'                                     02S0741
*           ERBSCT = ZERO;          /* SET SECONDARY RETRY COUNT
*                                      Y02130                        */
         MVI   ERBSCT,X'00'                                     02S0742
*           ERBPCT = TEN;           /* SET PRIMARY RETRY COUNT Y02130*/
         MVI   ERBPCT,X'0A'                                     02S0743
*           R1 = ADDR(ERBPARM);     /* SET INPUT REG Y02130          */
         LA    R1,ERBPARM                                       02S0744
*           SVC (ERBSVC);           /* UPDATE ERB Y02130             */
         SVC   20                                               02S0745
*           GO TO REPEATOP;         /* RETRY OPERATION Y02130        */
         B     REPEATOP                                         02S0746
*         END;                      /* Y02130                        */
*       ELSE                                                    02S0748
*         IF CCWSKIP = OFF THEN     /* IF SKIP BIT IS OFF            */
@RF00739 TM    CCWSKIP(CCWREG),B'00010000'                      02S0748
         BNZ   @RF00748                                         02S0748
*           DO;                     /* Y02130                        */
*             EROFFSET = CCWDADDR + SENS1517 - SENS1819; /* CALCULATE
*                                      ERROR OFFSET Y02130           */
         L     EROFFSET,CCWDADDR-1(,CCWREG)                     02S0750
         LA    EROFFSET,0(,EROFFSET)                            02S0750
         SLR   @10,@10                                          02S0750
         ICM   @10,7,SENS1517(IODBREG)                          02S0750
         ALR   EROFFSET,@10                                     02S0750
         LH    @10,SENS1819(,IODBREG)                           02S0750
         N     @10,@CF00857                                     02S0750
         SLR   EROFFSET,@10                                     02S0750
*             BUFFER = BUFFER && SENS2022; /* CORRECT DATA IN ERROR
*                                      Y02130                        */
         XC    BUFFER(3,EROFFSET),SENS2022(IODBREG)             02S0751
*           END;                    /* Y02130                        */
*       IF SENOI = OFF THEN         /* IF OPERATION IS COMPLETE 02S0753
*                                      Y02130                        */
@RF00748 TM    SENOI(IODBREG),B'00000001'                       02S0753
         BZ    @RT00753                                         02S0753
*         GO TO DRC0;               /* RETURN WITH DATA CORRECTED
*                                      Y02130                        */
*       ELSE                                                    02S0755
*         DO;                       /* Y02130                        */
*           RES0CCHH = IODBCCHH(2:7) & 'FFFFFFFFFFE0'X; /* SET SEEK
*                                      CCHH TO LAST CCHH Y02130      */
         MVC   RES0CCHH(6),IODBCCHH+1(IODBREG)                  02S0756
         NC    RES0CCHH(6),@CB00831                             02S0756
*           RESH2 = RESH2 × (SENSE06 & '1F'X) + ONE; /* AND IN  02S0757
*                                      UPDATED HEAD FROM SENSE Y02130*/
         LA    @10,31                                           02S0757
         SLR   @07,@07                                          02S0757
         IC    @07,SENSE06(,IODBREG)                            02S0757
         NR    @10,@07                                          02S0757
         AL    @10,@CF00062                                     02S0757
         SLR   @07,@07                                          02S0757
         IC    @07,RESH2                                        02S0757
         OR    @10,@07                                          02S0757
         STC   @10,RESH2                                        02S0757
*           RESR = ONE;             /* SET RECORD TO ONE Y02130      */
         MVI   RESR,X'01'                                       02S0758
*           RESCMD = SENSE03;       /* USED COMMAND FROM SENSE Y02130*/
         MVC   RESCMD(1),SENSE03(IODBREG)                       02S0759
*           RESDADDR = CCWDADDR + SENS1517; /* CALCULATE NEW DATA
*                                      ADDRESS Y02130                */
         SLR   @10,@10                                          02S0760
         ICM   @10,7,SENS1517(IODBREG)                          02S0760
         L     @07,CCWDADDR-1(,CCWREG)                          02S0760
         LA    @07,0(,@07)                                      02S0760
         ALR   @07,@10                                          02S0760
         STCM  @07,7,RESDADDR                                   02S0760
*           RESFLAGS = CCWFLAGS;    /* USE OLD FLAGS BUT Y02130      */
         MVC   RESFLAGS(1),CCWFLAGS(CCWREG)                     02S0761
*           RESFGPCI = OFF;         /* TURN OFF PCI FLAG Y02130      */
*           RESFGDC = OFF;          /* BE SURE DATA CHAINING IS OFF
*                                      Y02130                        */
*           RESFGCC = OFF;          /* AND COMMAND CHAING Y02130     */
         NI    RESFGPCI,B'00110111'                             02S0764
*           RESCNT = CCWCNT - SENS1517; /* CALCULATE NEW COUNT Y02130*/
         LCR   @10,@10                                          02S0765
         LH    @07,CCWCNT(,CCWREG)                              02S0765
         N     @07,@CF00857                                     02S0765
         ALR   @10,@07                                          02S0765
         STH   @10,RESCNT                                       02S0765
*           IF RESCNT = ZERO THEN   /* IS NEW CONUT ZERO Y02130      */
         LTR   @10,@10                                          02S0766
         BZ    @RT00766                                         02S0766
*             GO TO DRC0;           /* YES--RETURN GOOD Y02130       */
*           IODBCAW = ADDR(RESTART); /* SET RESTART CCW ADDRESS 02S0768
*                                      Y02130                        */
         LA    @10,RESTART                                      02S0768
         ST    @10,IODBCAW(,IODBREG)                            02S0768
*           ERBPID =MSGDC;          /* SET MESSAGE ID Y02130         */
         MVI   ERBPID,X'04'                                     02S0769
*           ERBSCT = ZERO;          /* SET SECONDARY RETRY COUNT
*                                      Y02130                        */
         MVI   ERBSCT,X'00'                                     02S0770
*           ERBPCT = TWO;           /* SET PRIMARY RETRY COUNT Y02130*/
         MVI   ERBPCT,X'02'                                     02S0771
*           R1 = ADDR(ERBPARM);     /* SET INPUT REG Y02130          */
         LA    R1,ERBPARM                                       02S0772
*           SVC (ERBSVC);           /* UPDATE ERB Y02130             */
         SVC   20                                               02S0773
*           GO TO REPEATOP;         /* RETRY OPERATION Y02130        */
         B     REPEATOP                                         02S0774
*         END;                      /* Y02130                        */
*     END;                          /* Y02130                        */
*                                                               02S0776
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING CODE HANDLES OVERRUN--SENSE BYTE 0 BIT 5, TRACK */
*   /* CONDITION CHECK--SENSE BYTE 0 BIT 6, AND SEEK CHECK--SENSE    */
*   /* BYTE 0 BIT 7.                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0777
*/*D3340O: D (YES,,NO,D3340TCC) OVERRUN ?                            */
*/* S AMDSAERB:SVC 20 DAERB, CC=05, PCT=10, SCT=0                    */
*/* N (,REPEATOP) RETRY I/O OPERATION                                */
*/*D3340TCC: D (YES,ALTRK,NO,D3340SCK) TRACK COND CHK ?              */
*/*D3340SCK: D (YES,,NO,D3340EOC) SEEK CK ?                          */
*/* P R11= ADDR OF RECALIBRATE CCW                                   */
*/* S AMDSAERI:SVC 23 ISSUE RECALIBRATE                              */
*/* D (YES,SCKERR,NO,) ERROR ?                                       */
*/* S AMDSAERB:SVC 23 DAERB, CC=07, PCT=10, SCT=0                    */
*/* N (,REPEATOP) RETRY I/O OPERATION                                */
*/*SCKERR: P (,TERMEXIT) MESSAGE ID = 29                             */
*   IF SENOR = ON THEN              /* IF OVERRUN Y02130             */
@RF00737 TM    SENOR(IODBREG),B'00000100'                       02S0777
         BNO   @RF00777                                         02S0777
*     DO;                           /* Y02130                        */
*       ERBPID = MSGOR;             /* SET MESSAGE ID Y02130         */
         MVI   ERBPID,X'05'                                     02S0779
*       ERBSCT = ZERO;              /* SET SECONDARY RETRY COUNT
*                                      Y02130                        */
         MVI   ERBSCT,X'00'                                     02S0780
*       ERBPCT = TEN;               /* SET PRIMARY RETRY COUNT Y02130*/
         MVI   ERBPCT,X'0A'                                     02S0781
*       R1 = ADDR(ERBPARM);         /* SET INPUT REG Y02130          */
         LA    R1,ERBPARM                                       02S0782
*       SVC (ERBSVC);               /* UPDATE ERB Y02130             */
         SVC   20                                               02S0783
*       GO TO REPEATOP;             /* RETRY OPERATION Y02130        */
         B     REPEATOP                                         02S0784
*     END;                          /* Y02130                        */
*   IF SENTCC = ON THEN             /* IF TRACK CONDITION CHECK 02S0786
*                                      Y02130                        */
@RF00777 TM    SENTCC(IODBREG),B'00000010'                      02S0786
         BO    @RT00786                                         02S0786
*     GO TO ALTRK;                  /* HANDLE AS A ALTERNATE TRACK
*                                      Y02130                        */
*   IF SENSC = ON THEN              /* IF SEEK CHECK Y02130          */
         TM    SENSC(IODBREG),B'00000001'                       02S0788
         BNO   @RF00788                                         02S0788
*     DO;                           /* Y02130                        */
*       RESPECIFY (R11,RETCODE) RESTRICTED; /* RESTRICT REGISTERS
*                                      Y02130                        */
*       R11 = ADDR(RECALBTE);       /* SET RECALIBRATE CCW Y02130    */
         LA    R11,RECALBTE                                     02S0791
*       SVC (ERISVC);               /* ISSUE CCW Y02130              */
         SVC   23                                               02S0792
*       IF RETCODE ^= ZERO THEN     /* WAS RECALIBRATE SUCCESSFUL
*                                      Y02130                        */
         LTR   RETCODE,RETCODE                                  02S0793
         BZ    @RF00793                                         02S0793
*         DO;                       /* Y02130                        */
*           ERBID = MSGERR;         /* NO--SET MESSAGE ID Y02130     */
         MVI   ERBID(CCTREG),X'1F'                              02S0795
*           GO TO TERMEXIT;         /* AND EXIT Y02130               */
         B     TERMEXIT                                         02S0796
*           RESPECIFY (R11,RETCODE) UNRESTRICTED; /* RELEASE    02S0797
*                                      REGISTERS Y02130              */
*         END;                      /* Y02130                        */
*       ERBPID = MSGSCK;            /* SET MESSAGE ID Y02130         */
@RF00793 MVI   ERBPID,X'07'                                     02S0799
*       ERBSCT = ZERO;              /* SET SECONDARY RETRY COUNT
*                                      Y02130                        */
         MVI   ERBSCT,X'00'                                     02S0800
*       ERBPCT = TEN;               /* SET PRIMARY RETRY COUNT Y02130*/
         MVI   ERBPCT,X'0A'                                     02S0801
*       R1 = ADDR(ERBPARM);         /* SET INPUT REG Y02130          */
         LA    R1,ERBPARM                                       02S0802
*       SVC (ERBSVC);               /* UPDATE ERB Y02130             */
         SVC   20                                               02S0803
*       GO TO REPEATOP;             /* RETRY OPERATION Y02130        */
         B     REPEATOP                                         02S0804
*     END;                          /* Y02130                        */
*                                                               02S0805
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING CODE HANDLES END OF CYLINDER--SENSE BYTE 1 BIT  */
*   /* 2, NO RECORD FOUND--SENSE BYTE 1 BIT 4, FILE PROTECTED--SENSE */
*   /* BYTE 1 BIT 5, AND ENVIRONMENTAL DATA--SENSE BYTE 2 BIT 3.     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0806
*/*D3340EOC: D (YES,,NO,D3340NRF) END OF CYLINDER ?                  */
*/* P (,TERMEXIT) MESSAGE ID = 10                                    */
*/*D3340NRF: D (YES,,NO,D3340ITF) NO RECORD FOUND ?                  */
*/* P (,TERMEXIT) MESSAGE ID = 12                                    */
*/*D3340ITF: D (YES,,NO,D3340FP) INVALID TRACK FORMAT                */
*/* P (,TERMEXIT) MESSAGE ID = 33                                    */
*/*D3340FP: D (YES,,NO,D3340ERD) FILE PROTECTED ?                    */
*/* P (,TERMEXIT) MESSAGE ID = 13                                    */
*/*D3340ERD: D (YES,,NO,D3340MSC) ENVIRONMENTAL DATA ?               */
*/* S AMDSAERB: SVC 20 DAERB, CC=32, PCT=1, SCT=0                    */
*/* N (,REPEATOP) RETRY I/O OPERATION                                */
*/*D3340MSC: P (,TERMEXIT) MESSAGE ID = 31                           */
*   IF SENEOC = ON THEN             /* IF END OF CYLINDER Y02130     */
@RF00788 TM    SENEOC(IODBREG),B'00100000'                      02S0806
         BNO   @RF00806                                         02S0806
*     DO;                           /* Y02130                        */
*       ERBID = MSGEOC;             /* SET MESSAGE ID Y02130         */
         MVI   ERBID(CCTREG),X'0A'                              02S0808
*       GO TO TERMEXIT;             /* AND EXIT Y02130               */
         B     TERMEXIT                                         02S0809
*     END;                          /* Y02130                        */
*   IF SENNRF = ON THEN             /* IF NO RECORD FOUND Y02130     */
@RF00806 TM    SENNRF(IODBREG),B'00001000'                      02S0811
         BNO   @RF00811                                         02S0811
*     DO;                           /* Y02130                        */
*       ERBID = MSGNRF;             /* SET MESSAGE ID Y02130         */
         MVI   ERBID(CCTREG),X'0C'                              02S0813
*       GO TO TERMEXIT;             /* AND EXIT Y02130               */
         B     TERMEXIT                                         02S0814
*     END;                          /* Y02130                        */
*   IF SENITF = ON THEN             /* IF INVALID TRACK FORMAT Y02130*/
@RF00811 TM    SENITF(IODBREG),B'01000000'                      02S0816
         BNO   @RF00816                                         02S0816
*     DO;                           /* Y02130                        */
*       ERBID = MSGITF;             /* SET MESSAGE ID Y02130         */
         MVI   ERBID(CCTREG),X'21'                              02S0818
*       GO TO TERMEXIT;             /* AND EXIT Y02130               */
         B     TERMEXIT                                         02S0819
*     END;                          /* Y02130                        */
*   IF SENFP = ON THEN              /* IF FILE PROTECTED Y02130      */
@RF00816 TM    SENFP(IODBREG),B'00000100'                       02S0821
         BNO   @RF00821                                         02S0821
*     DO;                           /* Y02130                        */
*       ERBID = MSGFP;              /* SET MESSAGE ID Y02130         */
         MVI   ERBID(CCTREG),X'0D'                              02S0823
*       GO TO TERMEXIT;             /* AND EXIT Y02130               */
         B     TERMEXIT                                         02S0824
*     END;                          /* Y02130                        */
*   IF SENEDP = ON THEN             /* IF ENVIRONMENTAL DATA PRESENT
*                                      Y02130                        */
@RF00821 TM    SENEDP(IODBREG),B'00010000'                      02S0826
         BNO   @RF00826                                         02S0826
*     DO;                           /* Y02130                        */
*       ERBPID = MSGEDP;            /* SET MESSAGE ID Y02130         */
         MVI   ERBPID,X'0B'                                     02S0828
*       ERBSCT = ZERO;              /* SET SECONDARY RETRY COUNT
*                                      Y02130                        */
         MVI   ERBSCT,X'00'                                     02S0829
*       ERBPCT = ONE;               /* SET PRIMARY RETRY COUNT Y02130*/
         MVI   ERBPCT,X'01'                                     02S0830
*       R1 = ADDR(ERBPARM);         /* SET INPUT REG Y02130          */
         LA    R1,ERBPARM                                       02S0831
*       SVC (ERBSVC);               /* UPDATE ERB Y02130             */
         SVC   20                                               02S0832
*       GO TO REPEATOP;             /* RETRY OPERATION Y02130        */
         B     REPEATOP                                         02S0833
*     END;                          /* Y02130                        */
*   ERBID = MSGUNK;                 /* CONDITION UNKNOWN--SET GENERAL
*                                      MESSAGE ID Y02130             */
@RF00826 MVI   ERBID(CCTREG),X'1D'                              02S0835
*   GO TO TERMEXIT;                 /* AND EXIT Y02130               */
*                                                               02S0836
         B     TERMEXIT                                         02S0836
*   /*****************************************************************/
*   /*                                                               */
*   /* NO OTHER CONDITIONS ARE EXPECTED FROM A 3340. IF OTHER        */
*   /* CONDITIONS OCCUR THEY ARE HARDWARE OR PROGRAMMING ERRORS.     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0837
*                                                               01S0837
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO INCREMENT CCHH BY ONE FOR ANY DA DEVICE            */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0837
*                                                               01S0837
*AMDSAEOC:                                                      01S0837
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            01S0837
@EL00001 L     @13,4(,@13)                                      01S0837
@EF00001 DS    0H                                               01S0837
@ER00001 LM    @14,@12,12(@13)                                  01S0837
         BR    @14                                              01S0837
AMDSAEOC DS    0H                                               01S0838
*   DCL                                                         01S0838
*         1 XCCHH DEF(RESCCHH),     /* WORK AREA TO INCREMENT CCHH   */
*             3 XCC FIXED(15),      /* CYLINDER                      */
*             3 XHH FIXED(15);      /* TRACK                         */
*   DCL                                                         01S0839
*         1 WKDCTYPE BASED(WKDCTPTR), /* MAP OF DEVICE TABLE ENTRY   */
*             3 WKDCTID BIT(8),     /* DEVICE TYPE                   */
*             3 * BIT(8),           /* TRACK SIZE - UNUSED IN THIS
*                                      ROUTINE                       */
*             3 WKDCTTM BIT(8);     /* TRACKS PER CYLINDER VALUE     */
*   DCL                                                         01S0840
*         WKDCTPTR PTR(31);         /* POINTER TO DEVICE TABLE ENTRY */
*   DCL                                                         01S0841
*         WKDCT EXTERNAL NONLOCAL;  /* DEVIC TABLE                   */
*/*AMDSAEOC: E ENTRY TO EOC PROC                                     */
*/* P OBTAIN CCHH                                                    */
*/* P BUMP THE HH BY 1                                               */
*/* P INDEX TO PROPER DEVICE TABLE ENTRY FROM IODBTYPE               */
*/* D (YES,,NO,EOCOK) OVER CYLINDER BOUNDRY ?                        */
*/* P HH = 00                                                        */
*/* P CC = CC + 1                                                    */
*/*EOCOK: P SAVE INCREMENTED CCHH                                    */
*/* R RETURN TO CALLER                                               */
*   XHH = XHH + ONE;                /* ADD ONE TO HH                 */
         LA    @10,1                                            01S0842
         AH    @10,XHH                                          01S0842
         STH   @10,XHH                                          01S0842
*   WKDCTPTR = ADDR(WKDCT);         /* SET POINTER TO DEVICE TYPE
*                                      TABLE                         */
         L     WKDCTPTR,@CA00846                                01S0843
*   DO WHILE WKDCTID ^= IODBTYPE;   /* LOOP UNTIL DEVICE IS FOUND    */
         B     @DE00844                                         01S0844
@DL00844 DS    0H                                               01S0845
*     WKDCTPTR = WKDCTPTR + LENGTH(WKDCTYPE); /* INCREMENT POINTER   */
         AL    WKDCTPTR,@CF00114                                01S0845
*   END;                                                        01S0846
@DE00844 CLC   WKDCTID(1,WKDCTPTR),IODBTYPE(IODBREG)            01S0846
         BNE   @DL00844                                         01S0846
*   IF XHH >= WKDCTTM THEN          /* IS IT OVER THE NUMBER OF 01S0847
*                                      TRACKS PER CYLINDER           */
         LH    @10,XHH                                          01S0847
         SLR   @07,@07                                          01S0847
         IC    @07,WKDCTTM(,WKDCTPTR)                           01S0847
         CR    @10,@07                                          01S0847
         BL    @RF00847                                         01S0847
*     DO;                                                       01S0848
*       XHH = ZERO;                 /* YES--SET HH TO ZERO           */
         SLR   @10,@10                                          01S0849
         STH   @10,XHH                                          01S0849
*       XCC = XCC + ONE;            /* AND INCREMENT CC              */
         LA    @10,1                                            01S0850
         AH    @10,XCC                                          01S0850
         STH   @10,XCC                                          01S0850
*     END;                                                      01S0851
*   END AMDSAEOC;                   /* RETURN                        */
@EL00002 DS    0H                                               01S0852
@EF00002 DS    0H                                               01S0852
@ER00002 BR    @14                                              01S0852
*/*AMDSADER: END                                                     */
*   END AMDSADER                                                01S0853
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (AMDSARMK)                                        *
*/*%INCLUDE SYSUT5  (DACOMMON)                                        *
*/*%INCLUDE SYSUT5  (D2314   )                                        *
*/*%INCLUDE SYSUT5  (D3330   )                                        *
*/*%INCLUDE SYSUT5  (D2305   )                                        *
*/*%INCLUDE SYSUT5  (D3340   )                                        *
*;                                                              01S0853
@DATA    DS    0H
         DS    0F
@SA00001 DS    18F
         DS    0F
@CF00062 DC    F'1'
@CF00114 DC    F'3'
@CF00047 DC    F'8'
@CF00442 DC    F'28672'
@CF00857 DC    XL4'0000FFFF'
@CA00781 DC    A(DEV14A)
@CA00782 DC    A(DEV12D)
@CA00846 DC    A(WKDCT)
         DS    0D
@CC00797 DC    C'LDER'
@CB00831 DC    X'FFFFFFFFFFE0'
         DS    CL6
SENSE    DS    CL8
         ORG   SENSE
@NM00031 DC    X'04'
SENSEADR DS    AL3
@NM00032 DC    X'20000018'
         ORG   SENSE+8
RECALBTE DC    X'1300000020000001'
RDBUFLOG DC    X'2400000030000080'
RESRHA   DS    CL16
         ORG   RESRHA
@NM00033 DS    CL8
         ORG   @NM00033
@NM00034 DC    X'07'
RESRHAA  DS    AL3
@NM00035 DC    X'60000006'
         ORG   RESRHA+8
@NM00036 DS    CL8
         ORG   @NM00036
@NM00037 DC    X'1A'
@NM00038 DC    AL3(RESFCCHH)
@NM00039 DC    X'20000005'
         ORG   RESRHA+16
RESALT   DS    CL24
         ORG   RESALT
@NM00040 DS    CL8
         ORG   @NM00040
@NM00041 DC    X'07'
@NM00042 DC    AL3(RES0CCHH)
@NM00043 DC    X'60000006'
         ORG   RESALT+8
@NM00044 DS    CL8
         ORG   @NM00044
@NM00045 DC    X'1A'
@NM00046 DC    AL3(RESFCCHH)
@NM00047 DC    X'60000005'
         ORG   RESALT+16
@NM00048 DS    CL8
         ORG   @NM00048
@NM00049 DC    X'16'
@NM00050 DC    AL3(RESCCHH)
@NM00051 DC    X'20000004'
         ORG   RESALT+24
RESTART  DS    CL32
         ORG   RESTART
@NM00052 DS    CL8
         ORG   @NM00052
@NM00053 DC    X'07'
@NM00054 DC    AL3(RES0CCHH)
@NM00055 DC    X'60000006'
         ORG   RESTART+8
RESEARCH DS    CL8
         ORG   RESEARCH
@NM00056 DC    X'31'
@NM00057 DC    AL3(RESCCHHR)
@NM00058 DC    X'60000005'
         ORG   RESTART+16
@NM00059 DS    CL8
         ORG   @NM00059
@NM00060 DC    X'08'
@NM00061 DC    AL3(RESEARCH)
@NM00062 DC    F'1'
         ORG   RESTART+24
@NM00063 DS    CL8
         ORG   @NM00063
RESCMD   DS    BL1
RESDADDR DS    AL3
RESFLAGS DS    BL1
         ORG   RESFLAGS
RESFGDC  DS    BL1
RESFGCC  EQU   RESFLAGS+0
@NM00064 EQU   RESFLAGS+0
RESFGSKP EQU   RESFLAGS+0
RESFGPCI EQU   RESFLAGS+0
@NM00065 EQU   RESFLAGS+0
         ORG   @NM00063+5
@NM00066 DC    X'00'
RESCNT   DS    FL2
         ORG   RESTART+32
RESTARTA DS    CL32
         ORG   RESTARTA
@NM00067 DS    CL8
         ORG   @NM00067
@NM00068 DC    X'07'
@NM00069 DC    AL3(RES0CCHH)
@NM00070 DC    X'60000006'
         ORG   RESTARTA+8
RESERCH  DS    CL8
         ORG   RESERCH
@NM00071 DC    X'31'
RESERCHA DS    AL3
@NM00072 DC    X'60000005'
         ORG   RESTARTA+16
@NM00073 DS    CL8
         ORG   @NM00073
@NM00074 DC    X'08'
@NM00075 DC    AL3(RESERCH)
@NM00076 DC    F'1'
         ORG   RESTARTA+24
RESTART1 DS    CL8
         ORG   RESTART1
RESCMD1  DS    BL1
RESDADD1 DS    AL3
RESFLAG1 DS    BL1
         ORG   RESFLAG1
@NM00077 DS    BL1
RESFGCC1 EQU   RESFLAG1+0
@NM00078 EQU   RESFLAG1+0
         ORG   RESTART1+5
@NM00079 DC    X'00'
RESCNT1  DS    FL2
         ORG   RESTARTA+32
@NM00080 DS    CL7
         ORG   @NM00080
RES0CCHH DS    CL6
         ORG   RES0CCHH
@NM00081 DS    CL1
RESFCCHH DS    CL5
         ORG   RESFCCHH
RESF     DS    CL1
         ORG   RESF
@NM00082 DS    BL1
RESFGDFT EQU   RESF+0
RESFGALT EQU   RESF+0
         ORG   RESFCCHH+1
RESCCHH  DS    CL4
         ORG   RESCCHH
@NM00083 DS    CL1
RESC2    DS    CL1
@NM00084 DS    CL1
RESH2    DS    CL1
         ORG   @NM00080+6
RESR     DS    BL1
         ORG   @NM00080+7
         DS    CL1
ERBPARM  DS    CL12
         ORG   ERBPARM
ERBADDR  DS    AL4
ERBPID   DC    X'00'
ERBSCT   DC    X'00'
ERBPCT   DC    X'00'
@NM00085 DS    CL1
@NM00086 DC    AL4(TERMEXIT)
         ORG   ERBPARM+12
BINPLIST DS    CL10
         ORG   BINPLIST
BININ    DS    AL4
@NM00099 DC    AL4(BINOUT)
@NM00100 DC    H'2'
         ORG   BINPLIST+10
BINOUT   DS    CL4
         ORG   BINOUT
@NM00101 DS    CL1
BINDEV   DS    CL3
         ORG   BINOUT+4
         DS    CL2
DERPATCH DC    25F'0'
         DS    5XL4
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
WKDCTPTR EQU   @02
EROFFSET EQU   @02
CCWREG   EQU   @06
CCTREG   EQU   @05
VCCTREG  EQU   @12
RETCODE  EQU   @15
BASEREG  EQU   @11
R1       EQU   @01
R11      EQU   @11
R13      EQU   @13
IODBREG  EQU   @08
RETREG   EQU   @14
R0       EQU   @00
R10      EQU   @10
R12      EQU   @12
R14      EQU   @14
R15      EQU   @15
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
         EXTRN DEV14A
         EXTRN DEV12D
         EXTRN WKDCT
SADMPLSD EQU   3312
ARB      EQU   0
BCTH     EQU   0
BCT      EQU   0
BCTLPID  EQU   BCT+28
BCTFLGT  EQU   BCT+44
BCTFLGI  EQU   BCT+45
BCTCOMP  EQU   BCTFLGI
BCTIOERR EQU   BCTFLGI
CCT      EQU   0
CTFLG1   EQU   CCT+1
CTFLG2   EQU   CCT+2
CTERBDA  EQU   CCT+28
CTLOWFLG EQU   CCT+48
CTDMPTYP EQU   CCT+52
CTIOTYPE EQU   CTDMPTYP
CTCONFLG EQU   CTDMPTYP+2
CTBUFTYP EQU   CTDMPTYP+3
CTPRMT1  EQU   CTDMPTYP+24
CTPRMT2  EQU   CTDMPTYP+26
CCW      EQU   0
CCWCMD   EQU   CCW
CCWDADDR EQU   CCW+1
CCWFLAGS EQU   CCW+4
CCWSKIP  EQU   CCWFLAGS
CCWCNT   EQU   CCW+6
CSW      EQU   0
CSWKEY00 EQU   CSW
CSWCADDR EQU   CSW+1
CSWUSTAT EQU   CSW+4
CSWATTN  EQU   CSWUSTAT
CSWUC    EQU   CSWUSTAT
CSWUE    EQU   CSWUSTAT
CSWCSTAT EQU   CSW+5
CSWPCI   EQU   CSWCSTAT
CSWIL    EQU   CSWCSTAT
CSWPGC   EQU   CSWCSTAT
CSWPTC   EQU   CSWCSTAT
CSWCDC   EQU   CSWCSTAT
CSWCCC   EQU   CSWCSTAT
CSWICC   EQU   CSWCSTAT
CSWCHC   EQU   CSWCSTAT
CSWCNT   EQU   CSW+6
DSCE     EQU   0
IODB     EQU   0
IODBFLAG EQU   IODB+8
IODBTERM EQU   IODBFLAG
IODBIOC  EQU   IODBFLAG
IODBDEV  EQU   IODB+10
IODBTYPE EQU   IODB+13
IODBBCT  EQU   IODB+16
IODBCAW  EQU   IODB+20
IODBCSW  EQU   IODB+24
IODBCCHH EQU   IODB+32
IODBSEEK EQU   IODBCCHH+1
IODBSRCH EQU   IODBCCHH+3
IODBR    EQU   IODBCCHH+7
IODBSENS EQU   IODB+40
MDCE     EQU   0
MDCB     EQU   0
MDCBGRS  EQU   MDCB+16
MDCBFLGS EQU   MDCB+86
PSW      EQU   0
PSWSM    EQU   PSW
@NM00023 EQU   PSW+1
PSWCCPM  EQU   PSW+2
@NM00026 EQU   PSW+3
PTRT     EQU   0
PTRTRSA  EQU   0
RCB      EQU   0
VCCT     EQU   0
VCTRECSN EQU   VCCT+8
VCTFLGS  EQU   VCCT+9
VCTMDCE  EQU   VCCT+12
VCTDSCE  EQU   VCCT+20
VCTBCTH  EQU   VCCT+24
VCTCBID  EQU   VCCT+64
SDL      EQU   0
REGLOCAL EQU   0
SAVEFORM EQU   0
BUFFER   EQU   0
WKDCTYPE EQU   0
WKDCTID  EQU   WKDCTYPE
WKDCTTM  EQU   WKDCTYPE+2
PTRTVSA  EQU   0
CTLOWDMP EQU   CTDMPTYP
RESCCHHR EQU   RESCCHH
ERBLOCK  EQU   CTERBDA
ERBID    EQU   ERBLOCK
ERBPCTR  EQU   ERBLOCK+2
@NM00089 EQU   IODBSENS
@NM00090 EQU   @NM00089
SENCR    EQU   @NM00090
SENIR    EQU   @NM00090
SENBO    EQU   @NM00090
SENEC    EQU   @NM00090
SENDC    EQU   @NM00090
SENOR    EQU   @NM00090
SENTCC   EQU   @NM00090
SENSC    EQU   @NM00090
@NM00091 EQU   @NM00089+1
SENPE    EQU   @NM00091
SENITF   EQU   @NM00091
SENEOC   EQU   @NM00091
SENNRF   EQU   @NM00091
SENFP    EQU   @NM00091
SENMAM   EQU   @NM00091
SENOI    EQU   @NM00091
@NM00093 EQU   @NM00089+2
SENBLF   EQU   @NM00093
SENCO    EQU   @NM00093
SENEDP   EQU   @NM00093
SENSE03  EQU   @NM00089+3
SENSE05  EQU   @NM00089+5
SENSE06  EQU   @NM00089+6
SENS1517 EQU   @NM00089+15
SENS1819 EQU   @NM00089+18
SENS2022 EQU   @NM00089+20
XCCHH    EQU   RESCCHH
XCC      EQU   XCCHH
XHH      EQU   XCCHH+2
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00098 EQU   @NM00089+23
@NM00097 EQU   @NM00089+7
@NM00096 EQU   @NM00089+4
@NM00095 EQU   @NM00093
@NM00094 EQU   @NM00093
@NM00092 EQU   @NM00091
@NM00088 EQU   ERBLOCK+3
@NM00087 EQU   ERBLOCK+1
CTADDRE  EQU   CTLOWDMP+4
CTADDRS  EQU   CTLOWDMP
@NM00102 EQU   WKDCTYPE+1
SAVER12  EQU   SAVEFORM+68
SAVER11  EQU   SAVEFORM+64
SAVER10  EQU   SAVEFORM+60
SAVER9   EQU   SAVEFORM+56
SAVER8   EQU   SAVEFORM+52
SAVER7   EQU   SAVEFORM+48
SAVER6   EQU   SAVEFORM+44
SAVER5   EQU   SAVEFORM+40
SAVER4   EQU   SAVEFORM+36
SAVER3   EQU   SAVEFORM+32
SAVER2   EQU   SAVEFORM+28
SAVER1   EQU   SAVEFORM+24
SAVER0   EQU   SAVEFORM+20
SAVER15  EQU   SAVEFORM+16
SAVER14  EQU   SAVEFORM+12
SAVENEXT EQU   SAVEFORM+8
SAVEBACK EQU   SAVEFORM+4
SAVENAME EQU   SAVEFORM+1
SAVEID   EQU   SAVEFORM
REGL15   EQU   REGLOCAL+60
REGL14   EQU   REGLOCAL+56
REGL13   EQU   REGLOCAL+52
REGL12   EQU   REGLOCAL+48
REGL11   EQU   REGLOCAL+44
REGL10   EQU   REGLOCAL+40
REGL9    EQU   REGLOCAL+36
REGL8    EQU   REGLOCAL+32
REGL7    EQU   REGLOCAL+28
REGL6    EQU   REGLOCAL+24
REGL5    EQU   REGLOCAL+20
REGL4    EQU   REGLOCAL+16
REGL3    EQU   REGLOCAL+12
REGL2    EQU   REGLOCAL+8
REGL1    EQU   REGLOCAL+4
REGL0    EQU   REGLOCAL
SDLSPN   EQU   SDL+1
SDLNUM   EQU   SDL
VCTVCCTV EQU   VCCT+108
VCTCCTV  EQU   VCCT+104
@NM00030 EQU   VCCT+102
VCTEXTRA EQU   VCCT+100
VCTCPOUT EQU   VCCT+96
VCTSVCTB EQU   VCCT+92
VCTPGT   EQU   VCCT+88
VCTLPA   EQU   VCCT+84
VCTCBADR EQU   VCCT+80
VCTJBNME EQU   VCCT+72
VCTCBIDN EQU   VCTCBID+7
@NM00029 EQU   VCTCBID
VCTAUDIT EQU   VCCT+62
VCTASID  EQU   VCCT+60
VCTPTRT  EQU   VCCT+56
VCTMASCB EQU   VCCT+52
VCTASCB  EQU   VCCT+48
VCTCPUC  EQU   VCCT+46
VCTWKC   EQU   VCCT+45
VCTWKHI  EQU   VCCT+44
VCTSUBPL EQU   VCCT+40
VCTARB   EQU   VCCT+36
VCTIODB  EQU   VCCT+32
VCTBCTC  EQU   VCCT+28
VCTSTOR  EQU   VCCT+16
VCTRECVA EQU   VCCT+10
@NM00028 EQU   VCTFLGS
VCTNOI22 EQU   VCTFLGS
VCTLRCLM EQU   VCTFLGS
VCTARCLM EQU   VCTFLGS
VCTASMIC EQU   VCTFLGS
VCTMEMIN EQU   VCTFLGS
VCTSADMP EQU   VCTFLGS
@NM00027 EQU   VCTRECSN
VCTRSMR  EQU   VCTRECSN
VCTEXIR  EQU   VCTRECSN
VCTUPDR  EQU   VCTRECSN
VCTPGIR  EQU   VCTRECSN
VCTRCB   EQU   VCCT+4
VCTVCT   EQU   VCCT
RCBBASE  EQU   RCB+16
RCBEXIT  EQU   RCB+12
RCBSAVE  EQU   RCB+8
RCBSTOR  EQU   RCB+4
RCBNEXT  EQU   RCB
PTRTVS   EQU   PTRT+1032
PTRTRS   EQU   PTRT+8
PTRTLGID EQU   PTRT+4
PTRTPTRT EQU   PTRT
PSWEND   EQU   PSW+8
PSWIA    EQU   PSW+4
PSWSP    EQU   @NM00026
PSWSIG   EQU   PSWCCPM
PSWEU    EQU   PSWCCPM
PSWDO    EQU   PSWCCPM
PSWFPO   EQU   PSWCCPM
@NM00025 EQU   PSWCCPM
@NM00024 EQU   PSWCCPM
PSWPRBLM EQU   @NM00023
PSWAIT   EQU   @NM00023
PSWMCH   EQU   @NM00023
PSWMODE  EQU   @NM00023
PSWKEY   EQU   @NM00023
PSWXTRNL EQU   PSWSM
PSWIO    EQU   PSWSM
PSWDAT   EQU   PSWSM
@NM00022 EQU   PSWSM
@NM00021 EQU   PSWSM
@NM00020 EQU   PSWSM
PSWPER   EQU   PSWSM
@NM00019 EQU   PSWSM
@NM00018 EQU   MDCB+87
@NM00017 EQU   MDCBFLGS
MDCBDUMP EQU   MDCBFLGS
MDCBASMI EQU   MDCBFLGS
MDCBPI   EQU   MDCB+84
MDCBSTOR EQU   MDCB+80
MDCBGR15 EQU   MDCBGRS+60
MDCBGR14 EQU   MDCBGRS+56
MDCBGR13 EQU   MDCBGRS+52
MDCBGR12 EQU   MDCBGRS+48
MDCBGR11 EQU   MDCBGRS+44
MDCBGR10 EQU   MDCBGRS+40
MDCBGR9  EQU   MDCBGRS+36
MDCBGR8  EQU   MDCBGRS+32
MDCBGR7  EQU   MDCBGRS+28
MDCBGR6  EQU   MDCBGRS+24
MDCBGR5  EQU   MDCBGRS+20
MDCBGR4  EQU   MDCBGRS+16
MDCBGR3  EQU   MDCBGRS+12
MDCBGR2  EQU   MDCBGRS+8
MDCBGR1  EQU   MDCBGRS+4
MDCBGR0  EQU   MDCBGRS
MDCBPSW  EQU   MDCB+8
MDCBNEXT EQU   MDCB+4
MDCBMDCB EQU   MDCB
MDCEAVIL EQU   MDCE+8
MDCEACTV EQU   MDCE+4
MDCEMDCE EQU   MDCE
IODBHH   EQU   IODBSRCH+2
IODBCC   EQU   IODBSRCH
IODBM    EQU   IODBCCHH
IODBCPU  EQU   IODB+14
IODBCLAS EQU   IODB+12
@NM00016 EQU   IODBFLAG+1
IODBSTRT EQU   IODBFLAG
IODBCONW EQU   IODBFLAG
IODBACTV EQU   IODBFLAG
IODBHALT EQU   IODBFLAG
IODBINT  EQU   IODBFLAG
IODBPTRM EQU   IODBFLAG
IODBIDEN EQU   IODB+4
IODBIODB EQU   IODB
DSCETEND EQU   DSCE+20
DSCETCUR EQU   DSCE+16
DSCETBEG EQU   DSCE+12
DSCENEXT EQU   DSCE+8
DSCEBEGN EQU   DSCE+4
DSCEDSCE EQU   DSCE
CSWDE    EQU   CSWUSTAT
CSWCE    EQU   CSWUSTAT
CSWBUSY  EQU   CSWUSTAT
CSWCUE   EQU   CSWUSTAT
CSWSTMOD EQU   CSWUSTAT
@NM00015 EQU   CSWKEY00
CSWKEY   EQU   CSWKEY00
@NM00014 EQU   CCW+5
@NM00013 EQU   CCWFLAGS
CCWIDA   EQU   CCWFLAGS
CCWPCI   EQU   CCWFLAGS
CCWSLI   EQU   CCWFLAGS
CCWCC    EQU   CCWFLAGS
CCWDC    EQU   CCWFLAGS
CTHWMAX  EQU   CTDMPTYP+29
CTHWM    EQU   CTDMPTYP+28
CTPRMT2X EQU   CTPRMT2+1
CTPRMT2Y EQU   CTPRMT2
CTPRMT1X EQU   CTPRMT1+1
CTPRMT1Y EQU   CTPRMT1
CTVCCT   EQU   CTDMPTYP+20
CTEOR    EQU   CTDMPTYP+16
CTCOMMIO EQU   CTDMPTYP+12
CTLWKAD  EQU   CTDMPTYP+8
CTCONSOL EQU   CTDMPTYP+4
@NM00012 EQU   CTBUFTYP
CTDUMP   EQU   CTBUFTYP
CTLSQA   EQU   CTBUFTYP
CTASM    EQU   CTBUFTYP
CTPGT    EQU   CTBUFTYP
CTWKFLE  EQU   CTBUFTYP
@NM00011 EQU   CTBUFTYP
@NM00010 EQU   CTCONFLG
CTREAD   EQU   CTCONFLG
CTMSGOUT EQU   CTCONFLG
@NM00009 EQU   CTDMPTYP+1
@NM00008 EQU   CTIOTYPE
CTIORSET EQU   CTIOTYPE
CTIOINT  EQU   CTIOTYPE
CTIOCON  EQU   CTIOTYPE
CTIOWK   EQU   CTIOTYPE
CTIODA   EQU   CTIOTYPE
CTIOOUT  EQU   CTIOTYPE
CTIOTERM EQU   CTIOTYPE
CTEBCOPR EQU   CCT+49
@NM00007 EQU   CTLOWFLG
CTWKSTUS EQU   CTLOWFLG
CTINIT   EQU   CTLOWFLG
CTFP     EQU   CTLOWFLG
CTVIRTD  EQU   CTLOWFLG
CTEBCOPD EQU   CCT+45
CTCONTYP EQU   CCT+44
CTOUTAD  EQU   CCT+42
CTCPUI   EQU   CCT+40
CTERBCON EQU   CCT+36
CTERBTPE EQU   CCT+32
CTCCHHW  EQU   CCT+24
CTCCHHE  EQU   CCT+20
CTCCHHS  EQU   CCT+16
CTPGECNT EQU   CCT+15
CTCCHHR  EQU   CCT+8
CTINADDR EQU   CCT+6
CTSENSE  EQU   CCT+4
CTDEVTYP EQU   CCT+3
@NM00006 EQU   CTFLG2
CTALTCON EQU   CTFLG2
CTWKDONE EQU   CTFLG2
CTVIRTR  EQU   CTFLG2
CTNOSTAT EQU   CTFLG2
CTPGEFLT EQU   CTFLG2
CTSTOR   EQU   CTFLG2
CTDUPSW  EQU   CTFLG2
CTERREC  EQU   CTFLG1
CTMP     EQU   CTFLG1
@NM00005 EQU   CTFLG1
CTDEFO   EQU   CTFLG1
CTWORK   EQU   CTFLG1
CTMORTPE EQU   CTFLG1
CTDEVICE EQU   CTFLG1
CTERROR  EQU   CTFLG1
CTWAIT   EQU   CCT
@NM00004 EQU   BCT+46
BCTRECLM EQU   BCTFLGI
BCTALLOC EQU   BCTFLGI
@NM00003 EQU   BCTFLGT
BCTPGTF  EQU   BCTFLGT
BCTDUMP  EQU   BCTFLGT
BCTLSQA  EQU   BCTFLGT
BCTASM   EQU   BCTFLGT
BCTPGT   EQU   BCTFLGT
BCTWKFLE EQU   BCTFLGT
@NM00002 EQU   BCTFLGT
BCTRBA   EQU   BCT+40
BCTAMB   EQU   BCT+36
@NM00001 EQU   BCTLPID+4
BCTLGN   EQU   BCTLPID
BCTMDCB  EQU   BCT+24
BCTPGTE  EQU   BCT+20
BCTRADDR EQU   BCT+16
BCTVADDR EQU   BCT+12
BCTASID  EQU   BCT+10
BCTKEY2  EQU   BCT+9
BCTKEY1  EQU   BCT+8
BCTNEXT  EQU   BCT+4
BCTBCT   EQU   BCT
BCTHLAST EQU   BCTH+8
BCTHFRST EQU   BCTH+4
BCTHBCTH EQU   BCTH
ARBADDRE EQU   ARB+4
ARBADDRB EQU   ARB
GTMSAVE  EQU   SADMPLSD+684
GTMNAME  EQU   SADMPLSD+680
FRMSAVE  EQU   SADMPLSD+580
FRMNAME  EQU   SADMPLSD+576
AUDSAVE  EQU   SADMPLSD+476
AUDNAME  EQU   SADMPLSD+472
IOISAVE  EQU   SADMPLSD+372
IOINAME  EQU   SADMPLSD+368
PGISAVE  EQU   SADMPLSD+268
PGINAME  EQU   SADMPLSD+264
SVISAVE  EQU   SADMPLSD+164
SVINAME  EQU   SADMPLSD+160
LOWCRS   EQU   SADMPLSD+96
LOWGRS   EQU   SADMPLSD+32
SAVEDUMP EQU   SADMPLSD+24
AUDPSW   EQU   SADMPLSD+16
SVIRPSW  EQU   SADMPLSD+8
PSWSADMP EQU   SADMPLSD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00239 EQU   D2314
@RT00241 EQU   D3330
@RT00243 EQU   D2305
@RT00245 EQU   D3340
@RT00247 EQU   D3350
@RT00304 EQU   CCC
@RF00306 EQU   DRC0
@RT00372 EQU   CEQUCK
@RT00381 EQU   ERRID
@RT00416 EQU   ERRID
@RT00426 EQU   CINTVREQ
@RT00428 EQU   CBUSOUT
@RT00437 EQU   REPEATOP
@RT00442 EQU   ERRID
@RT00465 EQU   CCMDRJT
@RT00467 EQU   ALTRK
@RT00498 EQU   TCCERR
@RF00500 EQU   @RC00496
@RT00521 EQU   DRC0
@RT00532 EQU   CCMDRJT
@RT00534 EQU   CINTVREQ
@RT00536 EQU   CBUSOUT
@RT00538 EQU   CPERMERR
@RT00540 EQU   CEQUCK
@RT00552 EQU   DRC0
@RT00567 EQU   DRC0
@RT00622 EQU   DRC0
@RT00634 EQU   CCMDRJT
@RT00636 EQU   CINTVREQ
@RT00638 EQU   CBUSOUT
@RT00640 EQU   CPERMERR
@RT00642 EQU   CEQUCK
@RT00660 EQU   DRC0
@RT00674 EQU   DRC0
@RT00729 EQU   CCMDRJT
@RT00731 EQU   CINTVREQ
@RT00733 EQU   CBUSOUT
@RT00735 EQU   CEQUCK
@RT00753 EQU   DRC0
@RT00766 EQU   DRC0
@RT00786 EQU   ALTRK
@RF00847 EQU   @EL00002
@ENDDATA EQU   *
         END   AMDSADER,(C'PLS2003',0603,75280)
