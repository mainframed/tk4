         TITLE 'AMDSABUF    BUFFER SEARCH AND SELECTION ROUTINE        *
                       '
AMDSABUF CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'AMDSABUF  74.107'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @11,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@11                                      01S0001
         ST    @13,@SA00001+4                                   01S0001
         LA    @14,@SA00001                                     01S0001
         ST    @14,8(,@13)                                      01S0001
         LR    @13,@14                                          01S0001
*   SAVEFORM(1:4) = 'LBUF';         /* MODULE ID TO SAVE AREA        */
*                                                               01S0193
         MVC   SAVEFORM(4,R13),@CC00957                         01S0193
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR VALID CTIOTYPE - ONLY WORKFILE OR PAGE DATA SET     */
*   /* REQUESTS ARE ALLOWED                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0194
*/* D (YES,,NO,%BUFRC4) CTIOTYPE VALID                               */
*   IF CTIOWK = OFF & CTIODA = OFF THEN /* VALID REQUEST             */
         LH    @10,@CH00756                                     01S0194
         TM    CTIOWK(@10),B'00110000'                          01S0194
         BZ    @RT00194                                         01S0194
*     GO TO NOBUFF;                 /* NO - ERROR                    */
*                                                               01S0196
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR SWITCH IN ASID. IF SO, PURGE ALL BUFFERS CONTAINING */
*   /* INVALID DATA OR DATA FOR PREVIOUS MEMORY.                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0196
*/* D (YES,,NO,%BUFASID) ASID DIFFERENT FROM LAST ENTRY              */
*/* P SAVE ASID                                                      */
*/* P OBTAIN FIRST BCT FROM BCTHFRST                                 */
*/*%BUFPRG1: D (NO,,YES,%BUFNEXT) BCTASM SET                         */
*/* D (NO,%BUFRSET,YES,) BCTWKFLE SET                                */
*/* D (NO,%BUFNEXT,YES,) BCTIOERR SET                                */
*/*%BUFRSET: P SET BCTASID TO 0                                      */
*/* P SET BCTVADDR TO 0                                              */
*/* P RESET BCTFLGT, BCTFLGI TO 0                                    */
*/*%BUFNEXT: D (NO,,YES,%BUFASID) PROCESSING LAST BCT                */
*/* P (,%BUFPRG1) GET NEXT BCT                                       */
*   IF VCTASID ^= BUFASID THEN      /* NO - ASID SWITCH              */
@RF00194 CLC   VCTASID(2,VCCTREG),BUFASID                       01S0196
         BE    @RF00196                                         01S0196
*     DO;                           /* YES - PURGE BUFFERS RELATED TO
*                                      PREVIOUS MEMORY               */
*       BUFASID = VCTASID;          /* SAVE NEW ASID                 */
         MVC   BUFASID(2),VCTASID(VCCTREG)                      01S0198
*       DO BUFBCTAD = BCTHFRST TO BCTHLAST BY LENGTH(BCT); /* PURGE
*                                      BUFFERS                       */
         L     @10,VCTBCTH(,VCCTREG)                            01S0199
         L     BUFBCTAD,BCTHFRST(,@10)                          01S0199
         B     @DE00199                                         01S0199
@DL00199 DS    0H                                               01S0200
*         IF (BCTASM = OFF & BCTWKFLE = OFF) × BCTIOERR = ON THEN /*
*                                      IS THIS AN INVALID OR    01S0200
*                                      MEMORY-RELATED BUFFER         */
         TM    BCTASM(BUFBCTAD),B'01010000'                     01S0200
         BZ    @RT00200                                         01S0200
         TM    BCTIOERR(BUFBCTAD),B'00100000'                   01S0200
         BNO   @RF00200                                         01S0200
@RT00200 DS    0H                                               01S0201
*           DO;                     /* YES - FREE BUFFER             */
*             BCTASID = 0;          /* RESET ASID                    */
         SR    @10,@10                                          01S0202
         STH   @10,BCTASID(,BUFBCTAD)                           01S0202
*             BCTVADDR = 0;         /* RESET VIRTUAL ADDRESS         */
         ST    @10,BCTVADDR(,BUFBCTAD)                          01S0203
*             BCTFLGT = OFF;        /* RESET BUFFER TYPE FLAGS       */
         MVI   BCTFLGT(BUFBCTAD),B'00000000'                    01S0204
*             BCTFLGI = OFF;        /* RESET BUFFER I/O FLAGS        */
         MVI   BCTFLGI(BUFBCTAD),B'00000000'                    01S0205
*           END;                                                01S0206
*       END;                        /* CONTINUE BUFFER PURGE         */
@RF00200 AH    BUFBCTAD,@CH00974                                01S0207
@DE00199 L     @10,VCTBCTH(,VCCTREG)                            01S0207
         C     BUFBCTAD,BCTHLAST(,@10)                          01S0207
         BNH   @DL00199                                         01S0207
*     END;                                                      01S0208
*                                                               01S0209
*   /*****************************************************************/
*   /*                                                               */
*   /* SEE IF ANY BUFFER CONTAINS REQUESTED ADDRESS. SKIP PROCESSING */
*   /* IF PAGE TABLE BUFFER IS REQUESTED SINCE THESE ONLY OCCUR ON   */
*   /* SWITCH OF ASID. PROCESSING IS ALSO BYPASSED IF CURRENT        */
*   /* INTERRUPT CODE IS FOR SEGMENT EXCEPTION.                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0209
*/*%BUFASID: D (NO,,YES,%BUFLOOP) CTPGT ON                           */
*/* D (NO,,YES,%BUFLOOP) PROCESSING SEGMENT EXCEPTION                */
*/* P OBTAIN BCTH FROM VCTBCTH                                       */
*/* P GET FIRST BCT FROM BCTHFRST                                    */
*/*%BUFIN1: D (NO,%BUFFUL2,YES,) BCTVADDR = FLCTEAA                  */
*/* D (NO,,YES,%BUFFUL1) CTASM ON                                    */
*/* D (NO,,YES,%BUFFUL2) BCTASM ON                                   */
*/*%BUFRC8: P SET UP RC = 8                                          */
*/* P PLACE ACTIVE MDCB ADDRESS IN BCT                               */
*/* P (,BUFRET1) SET BCTCOMP                                         */
*/*%BUFFUL1: D (YES,%BUFRC8,NO,%BUFFUL2) BCTASM ON                   */
*/*%BUFFUL2: D (NO,,YES,%BUFLOOP) PROCESSING LAST BCT                */
*/* P (,%BUFIN1) GET NEXT BCT                                        */
*   IF CTPGT = OFF & MDCBPI ^= SEGEXCPT THEN /* PAGE TABLE REQUEST   */
@RF00196 LH    @10,@CH00756                                     01S0209
         TM    CTPGT(@10),B'00100000'                           01S0209
         BNZ   @RF00209                                         01S0209
         L     @10,VCTMDCE(,VCCTREG)                            01S0209
         L     @10,MDCEACTV(,@10)                               01S0209
         CLC   MDCBPI(2,@10),@CH00953                           01S0209
         BE    @RF00209                                         01S0209
*     DO BUFBCTAD = BCTHFRST TO BCTHLAST BY LENGTH(BCT); /* NO -
*                                      CHECK FOR ADDRESS IN A BUFFER */
         L     @10,VCTBCTH(,VCCTREG)                            01S0210
         L     BUFBCTAD,BCTHFRST(,@10)                          01S0210
         B     @DE00210                                         01S0210
@DL00210 DS    0H                                               01S0211
*       IF BCTVADDR = FLCTEA THEN   /* VIRTUAL ADDRESS IN BUFFER     */
         CLC   BCTVADDR(4,BUFBCTAD),FLCTEA                      01S0211
         BNE   @RF00211                                         01S0211
*         IF (CTASM = ON & BCTASM = ON) ×                       01S0212
*           (CTASM = OFF & BCTASM = OFF) THEN /* YES-ENSURE THIS IS ASM
*                                      BUFFER ONLY IF ASM REQUESTED  */
         LH    @10,@CH00756                                     01S0212
         TM    CTASM(@10),B'00010000'                           01S0212
         BNO   @GL00003                                         01S0212
         TM    BCTASM(BUFBCTAD),B'00010000'                     01S0212
         BO    @RT00212                                         01S0212
@GL00003 LH    @10,@CH00756                                     01S0212
         TM    CTASM(@10),B'00010000'                           01S0212
         BNZ   @RF00212                                         01S0212
         TM    BCTASM(BUFBCTAD),B'00010000'                     01S0212
         BNZ   @RF00212                                         01S0212
@RT00212 DS    0H                                               01S0213
*           DO;                     /* ADDRESS IS IN BUFFER          */
*             SAVEBACK -> SAVER15 = ADINBUFR; /* INDICATE ADDRESS IN
*                                      BUFFER                        */
         L     @10,SAVEBACK(,R13)                               01S0214
         MVC   SAVER15(4,@10),@CF00058                          01S0214
*             BCTMDCB = MDCEACTV;   /* GET MDCB ADDRESS              */
         L     @10,VCTMDCE(,VCCTREG)                            01S0215
         MVC   BCTMDCB(4,BUFBCTAD),MDCEACTV(@10)                01S0215
*             BCTCOMP = ON;         /* INDICATE BUFFER IS FULL       */
         OI    BCTCOMP(BUFBCTAD),B'10000000'                    01S0216
*             GO TO BUFRET1;        /* PREPARE TO EXIT               */
         B     BUFRET1                                          01S0217
*           END;                                                01S0218
*     END;                          /* CONTINUE BUFFER SEARCH        */
@RF00212 DS    0H                                               01S0219
@RF00211 AH    BUFBCTAD,@CH00974                                01S0219
@DE00210 L     @10,VCTBCTH(,VCCTREG)                            01S0219
         C     BUFBCTAD,BCTHLAST(,@10)                          01S0219
         BNH   @DL00210                                         01S0219
*                                                               01S0220
*   /*****************************************************************/
*   /*                                                               */
*   /* ADDRESS NOT IN ANY BUFFER. INITIALIZE FOR BUFFER SEARCH AND   */
*   /* SELECTION. REPEAT BUFFER SEARCH 10 TIMES IF BUFFER CANNOT BE  */
*   /* FOUND AND I/O IS ACTIVE ON THE OUTPUT QUEUE.                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0220
*/*%BUFLOOP: P INITIALIZE LOOP COUNTER                               */
*/*BUFSRCH: P  INITIALIZE SEARCH PRIORITY                            */
*/* N ORDER OF PRIORITY IS WKFLE, ASM, LSQA, PGT, DUMP               */
*/* P RESET PROCESSED FLAGS                                          */
*/* P RESET CHOSEN BUFFER ADDRESS                                    */
*   DO I = 1 TO NUMWAIT;            /* REPEAT BUFFER SEARCH 10 TIMES */
@RF00209 LA    I,1                                              01S0220
@DL00220 DS    0H                                               01S0221
*     BUFPRTY = 'FF'X;              /* INITIALIZE BUFFER PRIORITY FOR
*                                      SEARCH                        */
         LA    BUFPRTY,255                                      01S0221
*     BUFFIRST = OFF;               /* INDICATE BCTHFRST HAS NOT BEEN
*                                      PROCESSED                     */
         NI    BUFFIRST,B'01111111'                             01S0222
*     BUFCHSEN = 0;                 /* RESET CHOSEN BUFFER ADDRESS   */
         SR    BUFCHSEN,BUFCHSEN                                01S0223
*                                                               01S0224
*   /*****************************************************************/
*   /*                                                               */
*   /* SEARCH BCTS FOR EMPTY BUFFER OR LOWEST PRIORITY, NON-ALLOCATED*/
*   /* BUFFER IF NONE ARE EMPTY.  SEARCH IN CIRCULAR MANNER BEGINNING*/
*   /* THE BUFFER FOLLOWING THE CURRENT BUFFER.                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0224
*/*%BUFSR1: P GET VCTBCTC (INITIALIZED TO BCTHFRST)                  */
*/*%BUFSR2: D (YES,,NO,%BUFSR1A) PROCESSING BCTHFRST                 */
*/* P INDICATE BCTHFRST PROCESSED                                    */
*/*%BUFSR1A: D (NO,,YES,%BUFSR3) BCTALLOC ON                         */
*/* D (NO,,YES,%BUFSR3) BCTPGTF ON                                   */
*/* D (NO,,YES,BUFFOUND) BCTCOMP OFF                                 */
*/* D (NO,,YES,%BUFSR3) BUFFER PRIORITY > SEARCH PRIORITY            */
*/* P SET SEARCH TO LOWER PRIORITY                                   */
*/* P SAVE ADDR OF BUFFER                                            */
*/*%BUFSR3: D (NO,,YES,%BUFSR4) REACHED BCTHLAST                     */
*/* P (,%BUFSR2) POINT TO NEXT BCT                                   */
*/*%BUFSR4: D (NO,,YES,BUFNONE) PROCESSED BCTHFRST YET               */
*/* P (,%BUFSR2) POINT TO BCTHFRST                                   */
*     IF VCTBCTC ^= BCTHLAST THEN   /* IS LAST BUFFER CURRENT        */
         L     @10,VCTBCTC(,VCCTREG)                            01S0224
         L     @02,VCTBCTH(,VCCTREG)                            01S0224
         C     @10,BCTHLAST(,@02)                               01S0224
         BE    @RF00224                                         01S0224
*       BUFBCTAD = VCTBCTC + LENGTH(BCT); /* NO - CHOOSE BUFFER 01S0225
*                                      FOLLOWING CURRENT             */
         AH    @10,@CH00974                                     01S0225
         LR    BUFBCTAD,@10                                     01S0225
*     ELSE                                                      01S0226
*       BUFBCTAD = BCTHFRST;        /* YES - BEGIN SEARCH AT FIRST
*                                      BUFFER                        */
         B     @RC00224                                         01S0226
@RF00224 L     @10,VCTBCTH(,VCCTREG)                            01S0226
         L     BUFBCTAD,BCTHFRST(,@10)                          01S0226
*     DO BUFBCTAD BY LENGTH(BCT);   /* BEGIN SEARCH                  */
@RC00224 DS    0H                                               01S0227
@DL00227 DS    0H                                               01S0228
*       IF BUFBCTAD = BCTHFRST THEN /* PROCESSING BCTHFRST           */
         L     @10,VCTBCTH(,VCCTREG)                            01S0228
         C     BUFBCTAD,BCTHFRST(,@10)                          01S0228
         BNE   @RF00228                                         01S0228
*         BUFFIRST = ON;            /* YES - INDICATE BCTHFRST  01S0229
*                                      PROCESSED                     */
         OI    BUFFIRST,B'10000000'                             01S0229
*       IF (BCTALLOC = OFF) & (BCTPGTF = OFF) THEN /* BUFFER ALLOCATED
*                                      FOR I/O ALREADY, OR CONTAINS
*                                      FIXED PAGE TABLES             */
@RF00228 TM    BCTALLOC(BUFBCTAD),B'01000000'                   01S0230
         BNZ   @RF00230                                         01S0230
         TM    BCTPGTF(BUFBCTAD),B'00000010'                    01S0230
         BNZ   @RF00230                                         01S0230
*         DO;                       /* NO -                          */
*           IF BCTCOMP = OFF THEN   /* CURRENT BUFFER EMPTY          */
         TM    BCTCOMP(BUFBCTAD),B'10000000'                    01S0232
         BNZ   @RF00232                                         01S0232
*             DO;                   /* YES -                         */
*               BUFCHSEN = BUFBCTAD; /* GET CHOSEN BUFFER ADDRESS    */
         LR    BUFCHSEN,BUFBCTAD                                01S0234
*               GO TO BUFFOUND;     /* USE THIS BUFFER               */
         B     BUFFOUND                                         01S0235
*             END;                                              01S0236
*           IF BCTFLGT < BUFPRTY THEN /* NO-IS IT LOWER PRIORITY THAN
*                                      SEARCH                        */
@RF00232 SR    @10,@10                                          01S0237
         IC    @10,BCTFLGT(,BUFBCTAD)                           01S0237
         CR    @10,BUFPRTY                                      01S0237
         BNL   @RF00237                                         01S0237
*             DO;                   /* BUFFER IS AVAILABLE FOR  01S0238
*                                      SELECTION                     */
*               BUFPRTY = BCTFLGT;  /* RESET SEARCH PRIORITY TO 01S0239
*                                      LOWER VALUE                   */
         LR    BUFPRTY,@10                                      01S0239
*               BUFCHSEN = BUFBCTAD; /* SAVE BCT ADDRESS CHOSEN      */
         LR    BUFCHSEN,BUFBCTAD                                01S0240
*             END;                                              01S0241
*         END;                                                  01S0242
@RF00237 DS    0H                                               01S0243
*       IF BUFBCTAD = BCTHLAST THEN /* PROCESSING LAST BCT           */
@RF00230 L     @10,VCTBCTH(,VCCTREG)                            01S0243
         C     BUFBCTAD,BCTHLAST(,@10)                          01S0243
         BNE   @RF00243                                         01S0243
*         IF BUFFIRST = ON THEN     /* YES - PROCESSED FIRST BCT YET */
         TM    BUFFIRST,B'10000000'                             01S0244
         BO    @RT00244                                         01S0244
*           GO TO BUFNONE;          /* YES - GET OUT OF LOOP         */
*         ELSE                                                  01S0246
*           BUFBCTAD = BCTHFRST - LENGTH(BCT); /* POINT IN FRONT OF
*                                      FIRST BCT - LOOP CONTROL WILL
*                                      UPDATE POINTER TO BCT         */
         L     BUFBCTAD,BCTHFRST(,@10)                          01S0246
         SH    BUFBCTAD,@CH00974                                01S0246
*     END;                          /* CONTINUE BUFFER SEARCH        */
@RF00243 AH    BUFBCTAD,@CH00974                                01S0247
         B     @DL00227                                         01S0247
*                                                               01S0248
*   /*****************************************************************/
*   /*                                                               */
*   /* FINISHED SEARCH OF BUFFERS. CHECK IF ANY BUFFER WAS FOUND. IF */
*   /* A BUFFER WAS FOUND, GO INITIALIZE IT.                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0248
*/*BUFNONE: P RESET PROCESSED FLAGS                                  */
*/* D (NO,,YES,BUFFOUND) WAS A BUFFER CHOSEN                         */
*                                                               01S0248
*BUFNONE:                                                       01S0248
*     BUFFIRST = OFF;               /* RESET BCTHFRST PROCESSED FLAG */
BUFNONE  NI    BUFFIRST,B'01111111'                             01S0248
*     IF BUFCHSEN ^= 0 THEN         /* WAS A BUFFER CHOSEN           */
         SR    @10,@10                                          01S0249
         CR    BUFCHSEN,@10                                     01S0249
         BNE   @RT00249                                         01S0249
*       GO TO BUFFOUND;             /* YES - INITIALIZE CHOSEN BCT   */
*                                                               01S0250
*   /*****************************************************************/
*   /*                                                               */
*   /* NO BUFFERS ARE AVAILABLE. SEE IF ANY BUFFERS ARE QUEUED FOR   */
*   /* OUTPUT. IF SO, CALL AMDSAWAT TO FREE A BUFFER FOR WHICH OUTPUT*/
*   /* I/O HAS COMPLETED. AND REPEAT BUFFER SEARCH. OTHERWISE, SET UP*/
*   /* A RETURN CODE OF 4 AND EXIT SINCE NO BUFFERS ARE AVAILABLE.   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0251
*/*BUFFREE: D (NO,,YES,%BUFRC4) OUTPUT IODBBCT = 0                   */
*/* P SAVE CTIOTYPE                                                  */
*/* P SET CTIOOUT IN CTIOTYPE                                        */
*/* P SET CTIOINT IN CTIOTYPE                                        */
*/* L AMDSAWAT:  FREE COMPLETED OUTPUT BUFFERS                       */
*/* P RESTORE CTIOTYPE                                               */
*/* P INCREMENT WAIT COUNT                                           */
*/* D (YES,,NO,BUFSRCH) MAX. NO. OF WAITS                            */
*     RESPECIFY IODB BASED(ADDR(IODBOUT));                      01S0251
*     IF IODBBCT ^= 0 THEN          /* ANY BUFFERS QUEUED FOR OUTPUT */
         L     @04,@CA00930                                     01S0252
         C     @10,IODBBCT(,@04)                                01S0252
         BE    @RF00252                                         01S0252
*       DO;                         /* YES - PREPARE TO FREE A BUFFER*/
*         BUFCTIO = CTIOTYPE;       /* SAVE I/O TYPE REQUEST         */
         LH    @10,@CH00756                                     01S0254
         SR    BUFCTIO,BUFCTIO                                  01S0254
         IC    BUFCTIO,CTIOTYPE(,@10)                           01S0254
*         CTIOTYPE = 0;             /* RESET I/O REQUEST FLAGS       */
         MVI   CTIOTYPE(@10),X'00'                              01S0255
*         CTIOOUT = ON;             /* REQUEST OUTPUT DEVICE BE 01S0256
*                                      CHECKED                       */
*         CTIOINT = ON;             /* REQUEST RETURN ON FIRST  01S0257
*                                      INTERRUPT                     */
         OI    CTIOOUT(@10),B'01000100'                         01S0257
*         PFBUFWAT = PFBUFWAT + 1;  /* INCREMENT COUNTER - NUMBER OF
*                                      TIMES BUF HAD TO WAIT FOR
*                                      BUFFERS                       */
*                                                               01S0258
         LA    @10,1                                            01S0258
         AH    @10,PFBUFWAT                                     01S0258
         STH   @10,PFBUFWAT                                     01S0258
*         SVC(WATSVC);              /* CALL AMDSAWAT TO FREE AN 01S0259
*                                      OUTPUT BUFFER                 */
         SVC   1                                                01S0259
*         CTIOTYPE = BUFCTIO;       /* RESTORE ORIGINAL I/O REQUEST  */
         LH    @10,@CH00756                                     01S0260
         STC   BUFCTIO,CTIOTYPE(,@10)                           01S0260
*       END;                                                    01S0261
*     ELSE                                                      01S0262
*       GO TO NOBUFF;               /* ERROR - NO WORK ON OUTPUT
*                                      QUEUE                         */
*   END;                                                        01S0263
*                                                               01S0263
         AH    I,@CH00036                                       01S0263
         CH    I,@CH00778                                       01S0263
         BNH   @DL00220                                         01S0263
*   /*****************************************************************/
*   /*                                                               */
*   /* WAITED 10 TIMES FOR BUFFERS TO BE FREED BUT NONE WERE. SET    */
*   /* ERROR RETURN CODE AND EXIT.                                   */
*   /*                                                               */
*   /*****************************************************************/
*/*%BUFRC4: P SET UP RC = 4                                          */
*/* R RETURN TO CALLER                                               */
*                                                               01S0264
*                                                               01S0264
*NOBUFF:                                                        01S0264
*   SAVEBACK -> SAVER15 = NOBUFFRS; /* SET UP RETURN CODE            */
NOBUFF   L     @10,SAVEBACK(,R13)                               01S0264
         MVC   SAVER15(4,@10),@CF00038                          01S0264
*   RETURN;                         /* RETURN TO CALLER              */
@EL00001 L     @13,4(,@13)                                      01S0265
@EF00001 DS    0H                                               01S0265
@ER00001 LM    @14,@12,12(@13)                                  01S0265
         BR    @14                                              01S0265
*                                                               01S0266
*   /*****************************************************************/
*   /*                                                               */
*   /* A BUFFER HAS BEEN CHOSEN. SET UP MDCB ADDRESS IN BCT.         */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0266
*/*BUFFOUND: D (YES,,NO,%BUFFND1) CTPGT OFF                          */
*/* P (,%BUFFND4) SET BCTMDCB TO MDCEACTV                           */
*/*%BUFFND1: P SET BCTMDCB TO 0                                      */
*/*%BUFFND4: P PURGE HARDWARE TABLE LOOK- ASIDE BUFFER               */
*                                                               01S0266
*BUFFOUND:                                                      01S0266
*   RESPECIFY BCT BASED(BUFCHSEN);                              01S0266
BUFFOUND DS    0H                                               01S0267
*   IF CTPGT = ON THEN              /* PAGE TABLE BUFFER REQUEST     */
         LH    @10,@CH00756                                     01S0267
         TM    CTPGT(@10),B'00100000'                           01S0267
         BNO   @RF00267                                         01S0267
*     BCTMDCB = 0;                  /* INDICATE NO MDCB SINCE THIS
*                                      CALL IS NOT FOR PAGING        */
         SR    @10,@10                                          01S0268
         ST    @10,BCTMDCB(,BUFCHSEN)                           01S0268
*   ELSE                                                        01S0269
*     BCTMDCB = MDCEACTV;           /* GET CURRENT MDCB ADDRESS      */
         B     @RC00267                                         01S0269
@RF00267 L     @10,VCTMDCE(,VCCTREG)                            01S0269
         MVC   BCTMDCB(4,BUFCHSEN),MDCEACTV(@10)                01S0269
*     GENERATE(PTLB);               /* PURGE HARDWARE TRANSLATION
*                                      LOOK-ASIDE BUFFER SINCE  01S0270
*                                      CONTENTS OF PAGE FRAMES ARE
*                                      CHANGING                      */
*                                                               01S0270
@RC00267 DS    0H                                               01S0270
         PTLB
*   /*****************************************************************/
*   /*                                                               */
*   /* UPDATE PTRT IF PAGE TABLE BUFFER HAS BEEN CHOSEN. THIS        */
*   /* WILL REFLECT THE FACT THAT THE PAGE TABLES TO BE OVERLAID     */
*   /* ARE NO LONGER AVAILABLE FOR USE.                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0271
*/* D (YES,,NO,%BUFRC0) PAGE TABLE BUFFER CHOSEN                     */
*/* D (NO,,YES,%BUFRC0) PAGE TABLE BUFFER REQUESTED                  */
*/* P RESET ALL BCTPGTE WHICH POINT TO CHOSEN BUFFER                 */
*/* P MARK ALL SEGMENTS INVALID WHICH POINT TO CHOSEN BUFFER         */
*   RESPECIFY PTRTRSA BASED(BUFPTRTA);                          01S0271
*   IF BCTPGT = ON & CTPGT = OFF THEN /* PAGE TABLE BUFFER CHOSEN    */
         TM    BCTPGT(BUFCHSEN),B'00100000'                     01S0272
         BNO   @RF00272                                         01S0272
         LH    @10,@CH00756                                     01S0272
         TM    CTPGT(@10),B'00100000'                           01S0272
         BNZ   @RF00272                                         01S0272
*     DO;                           /* YES - UPDATE PTRT             */
*       RESPECIFY BCT BASED(BUFBCTAD);                          01S0274
*       DO BUFBCTAD = BCTHFRST TO BCTHLAST BY LENGTH(BCT); /* SEARCH AL
*                                      BCTS FOR BCTPGTE              */
         L     @10,VCTBCTH(,VCCTREG)                            01S0275
         L     BUFBCTAD,BCTHFRST(,@10)                          01S0275
         B     @DE00275                                         01S0275
@DL00275 DS    0H                                               01S0276
*         IF (BCTPGTE & PAGERND) = BUFCHSEN -> BCTRADDR THEN /* BCTPGTE
*                                      IN CHOSEN BUFFER              */
         L     @10,BCTPGTE(,BUFBCTAD)                           01S0276
         N     @10,@CF00949                                     01S0276
         C     @10,BCTRADDR(,BUFCHSEN)                          01S0276
         BNE   @RF00276                                         01S0276
*             BCTPGTE = 0;          /* RESET PAGE TABLE ADDR         */
         SR    @10,@10                                          01S0277
         ST    @10,BCTPGTE(,BUFBCTAD)                           01S0277
*       END;                        /* CONTINUE BCT SEARCH           */
@RF00276 AH    BUFBCTAD,@CH00974                                01S0278
@DE00275 L     @10,VCTBCTH(,VCCTREG)                            01S0278
         C     BUFBCTAD,BCTHLAST(,@10)                          01S0278
         BNH   @DL00275                                         01S0278
*       BUFPTRTE = ADDR(PTRTVS(1)); /* END OF PTRT                   */
         LH    @10,@CH00601                                     01S0279
         LA    BUFPTRTE,PTRTVS(,@10)                            01S0279
*       DO BUFPTRTA = ADDR(PTRTRS(1)) TO BUFPTRTE BY LENGTH(PTRTRSA); /
*                                      SEARCH PTRT                   */
         LA    @10,PTRTRS(,@10)                                 01S0280
         ST    @10,BUFPTRTA                                     01S0280
         B     @DE00280                                         01S0280
@DL00280 DS    0H                                               01S0281
*         IF (PTRTRSA&PAGERND) = BUFCHSEN->BCTRADDR THEN /* PAGE TABLE
*                                      IN CHOSEN BUFFER              */
         L     @10,PTRTRSA(,@10)                                01S0281
         N     @10,@CF00949                                     01S0281
         C     @10,BCTRADDR(,BUFCHSEN)                          01S0281
         BNE   @RF00281                                         01S0281
*           SGTPAM = ON;            /* YES - MARK SEGMENT INVALID    */
         L     @10,STEPTR                                       01S0282
         OI    SGTPAM(@10),B'00000001'                          01S0282
*       END;                                                    01S0283
@RF00281 LA    @10,4                                            01S0283
         A     @10,BUFPTRTA                                     01S0283
         ST    @10,BUFPTRTA                                     01S0283
@DE00280 CR    @10,BUFPTRTE                                     01S0283
         BNH   @DL00280                                         01S0283
*     END;                                                      01S0284
*                                                               01S0285
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP RETURN CODE OF 0. INITIALIZE THE BCT FOR USE, QUEUEING */
*   /* IT TO THE REQUESTED IODB.                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0285
*/*%BUFRC0: P SET UP RC = 0                                          */
*/*BUFRET: P TURN OFF BCTCOMP AND BCTIOERR                           */
*/*BUFRET1: P SET VCTBCTC TO ADDR OF CHOSEN BCT ENTRY                */
*/* P ENQUEUE (BCTNEXT) BCT ON IODB INDICATED BY CTIOTYPE            */
*/* P SET BCTALLOC                                                   */
*/* D (YES,,NO,%BUFNPRT) REQUESTED PRIORITY > BUFFER PRIORITY        */
*/* P SET BCTFLGT TO BUFFER TYPE OF ORIGINAL REQUEST                 */
*/*%BUFNPRT: P SET BCTASID TO VCTASID                                */
*/* P SET BCTVADDR TO FLCTEA                                         */
*/*%BUFERR: P RESTORE REGISTERS                                      */
*/* P SET RETURN CODE                                                */
*/* R RETURN TO CALLER                                               */
*/*AMDSABUF: END                                                     */
*   SAVEBACK -> SAVER15 = 0;        /* SET 0 RETURN CODE IN CALLER'S
*                                      SAVE AREA                     */
@RF00272 L     @10,SAVEBACK(,R13)                               01S0285
         SR    @15,@15                                          01S0285
         ST    @15,SAVER15(,@10)                                01S0285
*   BUFBCTAD = BUFCHSEN;            /* GET ADDRESS OF CHOSEN BCT     */
         LR    BUFBCTAD,BUFCHSEN                                01S0286
*   BCTFLGT = OFF;                  /* RESET BUFFER TYPE FLAGS       */
         MVI   BCTFLGT(BUFBCTAD),B'00000000'                    01S0287
*   BCTFLGI = OFF;                  /* RESET BUFFER STATUS FLAGS     */
*                                                               01S0288
         MVI   BCTFLGI(BUFBCTAD),B'00000000'                    01S0288
*BUFRET1:                                                       01S0289
*   VCTBCTC = BUFBCTAD;             /* MAKE CHOSEN BUFFER CURRENT    */
BUFRET1  ST    BUFBCTAD,VCTBCTC(,VCCTREG)                       01S0289
*   IF CTIOWK = ON THEN             /* WORKFILE REQUEST              */
         LH    @10,@CH00756                                     01S0290
         TM    CTIOWK(@10),B'00010000'                          01S0290
         BNO   @RF00290                                         01S0290
*     IODBPTR = ADDR(IODBWORK);     /* YES - GET WORKFILE IODB  01S0291
*                                      ADDRESS                       */
         L     IODBPTR,@CA00931                                 01S0291
*   ELSE                                                        01S0292
*     IODBPTR = ADDR(IODBDA);       /* NO - GET DIRECT ACCESS IODB
*                                      ADDRESS                       */
         B     @RC00290                                         01S0292
@RF00290 L     IODBPTR,@CA00932                                 01S0292
*   RESPECIFY IODB BASED(IODBPTR);                              01S0293
@RC00290 DS    0H                                               01S0294
*   BCTNEXT = IODBBCT;              /* LINK OTHER BUFFERS ON QUEUE TO
*                                      CHOSEN BCT                    */
         MVC   BCTNEXT(4,BUFBCTAD),IODBBCT(IODBPTR)             01S0294
*   IODBBCT = BUFBCTAD;             /* QUEUE BCT AT HEAD OF I/O 01S0295
*                                      REQUEST QUEUE                 */
         ST    BUFBCTAD,IODBBCT(,IODBPTR)                       01S0295
*   BCTALLOC = ON;                  /* MARK BUFFER ALLOCATED FOR I/O */
         OI    BCTALLOC(BUFBCTAD),B'01000000'                   01S0296
*   IF CTBUFTYP > BCTFLGT THEN      /* REQUESTED BUFFER PRIORITY
*                                      GREATER THAN CURRENT BUFFER
*                                      PRIORITY                      */
         LH    @10,@CH00756                                     01S0297
         CLC   CTBUFTYP(1,@10),BCTFLGT(BUFBCTAD)                01S0297
         BNH   @RF00297                                         01S0297
*     BCTFLGT = CTBUFTYP;           /* YES - RESET BUFFER PRIORITY   */
         MVC   BCTFLGT(1,BUFBCTAD),CTBUFTYP(@10)                01S0298
*   BCTASID = VCTASID;              /* INDICATE BUFFER FOR CURRENT
*                                      ASID                          */
@RF00297 MVC   BCTASID(2,BUFBCTAD),VCTASID(VCCTREG)             01S0299
*   BCTVADDR = FLCTEA;              /* VIRTUAL ADDRESS CONTAINED IN
*                                      BUFFER                        */
         MVC   BCTVADDR(4,BUFBCTAD),FLCTEA                      01S0300
*   RETURN;                         /* RETURN TO CALLER              */
         B     @EL00001                                         01S0301
*   END AMDSABUF                                                01S0302
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (IHASGTE )                                        *
*/*%INCLUDE SYSLIB  (IHAPSA  )                                        *
*/*%INCLUDE SYSLIB  (AMDSARMK)                                        *
*;                                                              01S0302
@DATA    DS    0H
@CH00036 DC    H'1'
@CH00778 DC    H'10'
@CH00974 DC    H'48'
@CH00756 DC    H'28672'
@CH00601 DC    H'30712'
@CH00953 DC    XL2'0010'
         DS    0F
@SA00001 DS    18F
         DS    0F
@CF00038 DC    F'4'
@CF00058 DC    F'8'
@CF00949 DC    XL4'00FFF000'
@CA00930 DC    A(IODBOUT)
@CA00931 DC    A(IODBWORK)
@CA00932 DC    A(IODBDA)
         DS    0D
BUFPTRTA DS    A
BUFASID  DC    XL2'FFFF'
@CC00957 DC    C'LBUF'
BUFSWTCH DS    BL1
         ORG   BUFSWTCH
BUFFIRST DS    BL1
@NM00060 EQU   BUFSWTCH+0
         ORG   BUFSWTCH+1
         DS    CL1
BUFPATCH DC    15F'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
BUFPRTY  EQU   @04
BUFCTIO  EQU   @02
I        EQU   @05
IODBPTR  EQU   @03
BUFPTRTE EQU   @02
BUFCHSEN EQU   @03
BUFBCTAD EQU   @02
VCCTREG  EQU   @12
BASEREG  EQU   @11
R13      EQU   @13
RETCODE  EQU   @15
RETREG   EQU   @14
R0       EQU   @00
R1       EQU   @01
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R14      EQU   @14
R15      EQU   @15
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
         EXTRN IODBOUT
         EXTRN IODBWORK
         EXTRN IODBDA
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
DEBUGLSD EQU   3286
PFBUFWAT EQU   DEBUGLSD+2
SADMPLSD EQU   3312
SGTSTE   EQU   0
SGTLK    EQU   SGTSTE
SGTPTO   EQU   SGTSTE+1
SGTBYTE  EQU   SGTPTO+2
SGTPAM   EQU   SGTBYTE
ARB      EQU   0
BCTH     EQU   0
BCTHFRST EQU   BCTH+4
BCTHLAST EQU   BCTH+8
BCT      EQU   0
BCTNEXT  EQU   BCT+4
BCTASID  EQU   BCT+10
BCTVADDR EQU   BCT+12
BCTRADDR EQU   BCT+16
BCTPGTE  EQU   BCT+20
BCTMDCB  EQU   BCT+24
BCTLPID  EQU   BCT+28
BCTFLGT  EQU   BCT+44
BCTWKFLE EQU   BCTFLGT
BCTPGT   EQU   BCTFLGT
BCTASM   EQU   BCTFLGT
BCTPGTF  EQU   BCTFLGT
BCTFLGI  EQU   BCT+45
BCTCOMP  EQU   BCTFLGI
BCTALLOC EQU   BCTFLGI
BCTIOERR EQU   BCTFLGI
CCT      EQU   0
CTFLG1   EQU   CCT+1
CTFLG2   EQU   CCT+2
CTLOWFLG EQU   CCT+48
CTDMPTYP EQU   CCT+52
CTIOTYPE EQU   CTDMPTYP
CTIOOUT  EQU   CTIOTYPE
CTIODA   EQU   CTIOTYPE
CTIOWK   EQU   CTIOTYPE
CTIOINT  EQU   CTIOTYPE
CTCONFLG EQU   CTDMPTYP+2
CTBUFTYP EQU   CTDMPTYP+3
CTPGT    EQU   CTBUFTYP
CTASM    EQU   CTBUFTYP
CTPRMT1  EQU   CTDMPTYP+24
CTPRMT2  EQU   CTDMPTYP+26
CCW      EQU   0
CCWFLAGS EQU   CCW+4
CSW      EQU   0
CSWKEY00 EQU   CSW
CSWUSTAT EQU   CSW+4
CSWCSTAT EQU   CSW+5
DSCE     EQU   0
IODB     EQU   0
IODBFLAG EQU   IODB+8
IODBBCT  EQU   IODB+16
IODBCCHH EQU   IODB+32
IODBSRCH EQU   IODBCCHH+3
MDCE     EQU   0
MDCEACTV EQU   MDCE+4
MDCB     EQU   0
MDCBGRS  EQU   MDCB+16
MDCBPI   EQU   MDCB+84
MDCBFLGS EQU   MDCB+86
PSW      EQU   0
PSWSM    EQU   PSW
@NM00052 EQU   PSW+1
PSWCCPM  EQU   PSW+2
@NM00055 EQU   PSW+3
PTRT     EQU   0
PTRTRS   EQU   PTRT+8
PTRTVS   EQU   PTRT+1032
PTRTRSA  EQU   0
RCB      EQU   0
VCCT     EQU   0
VCTRECSN EQU   VCCT+8
VCTFLGS  EQU   VCCT+9
VCTMDCE  EQU   VCCT+12
VCTDSCE  EQU   VCCT+20
VCTBCTH  EQU   VCCT+24
VCTBCTC  EQU   VCCT+28
VCTASID  EQU   VCCT+60
VCTCBID  EQU   VCCT+64
SDL      EQU   0
REGLOCAL EQU   0
SAVEFORM EQU   0
SAVEBACK EQU   SAVEFORM+4
SAVER15  EQU   SAVEFORM+16
PTRTVSA  EQU   0
SGTEND   EQU   0
STEPTR   EQU   BUFPTRTA
PSARSVTE EQU   PSARSVT
CTLOWDMP EQU   CTDMPTYP
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CTADDRE  EQU   CTLOWDMP+4
CTADDRS  EQU   CTLOWDMP
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
SAVER12  EQU   SAVEFORM+68
SAVER11  EQU   SAVEFORM+64
SAVER10  EQU   SAVEFORM+60
SAVER9   EQU   SAVEFORM+56
SAVER8   EQU   SAVEFORM+52
SAVER7   EQU   SAVEFORM+48
SAVER6   EQU   SAVEFORM+44
SAVER5   EQU   SAVEFORM+40
SAVER4   EQU   SAVEFORM+36
SAVER3   EQU   SAVEFORM+32
SAVER2   EQU   SAVEFORM+28
SAVER1   EQU   SAVEFORM+24
SAVER0   EQU   SAVEFORM+20
SAVER14  EQU   SAVEFORM+12
SAVENEXT EQU   SAVEFORM+8
SAVENAME EQU   SAVEFORM+1
SAVEID   EQU   SAVEFORM
REGL15   EQU   REGLOCAL+60
REGL14   EQU   REGLOCAL+56
REGL13   EQU   REGLOCAL+52
REGL12   EQU   REGLOCAL+48
REGL11   EQU   REGLOCAL+44
REGL10   EQU   REGLOCAL+40
REGL9    EQU   REGLOCAL+36
REGL8    EQU   REGLOCAL+32
REGL7    EQU   REGLOCAL+28
REGL6    EQU   REGLOCAL+24
REGL5    EQU   REGLOCAL+20
REGL4    EQU   REGLOCAL+16
REGL3    EQU   REGLOCAL+12
REGL2    EQU   REGLOCAL+8
REGL1    EQU   REGLOCAL+4
REGL0    EQU   REGLOCAL
SDLSPN   EQU   SDL+1
SDLNUM   EQU   SDL
VCTVCCTV EQU   VCCT+108
VCTCCTV  EQU   VCCT+104
@NM00059 EQU   VCCT+102
VCTEXTRA EQU   VCCT+100
VCTCPOUT EQU   VCCT+96
VCTSVCTB EQU   VCCT+92
VCTPGT   EQU   VCCT+88
VCTLPA   EQU   VCCT+84
VCTCBADR EQU   VCCT+80
VCTJBNME EQU   VCCT+72
VCTCBIDN EQU   VCTCBID+7
@NM00058 EQU   VCTCBID
VCTAUDIT EQU   VCCT+62
VCTPTRT  EQU   VCCT+56
VCTMASCB EQU   VCCT+52
VCTASCB  EQU   VCCT+48
VCTCPUC  EQU   VCCT+46
VCTWKC   EQU   VCCT+45
VCTWKHI  EQU   VCCT+44
VCTSUBPL EQU   VCCT+40
VCTARB   EQU   VCCT+36
VCTIODB  EQU   VCCT+32
VCTSTOR  EQU   VCCT+16
VCTRECVA EQU   VCCT+10
@NM00057 EQU   VCTFLGS
VCTNOI22 EQU   VCTFLGS
VCTLRCLM EQU   VCTFLGS
VCTARCLM EQU   VCTFLGS
VCTASMIC EQU   VCTFLGS
VCTMEMIN EQU   VCTFLGS
VCTSADMP EQU   VCTFLGS
@NM00056 EQU   VCTRECSN
VCTRSMR  EQU   VCTRECSN
VCTEXIR  EQU   VCTRECSN
VCTUPDR  EQU   VCTRECSN
VCTPGIR  EQU   VCTRECSN
VCTRCB   EQU   VCCT+4
VCTVCT   EQU   VCCT
RCBBASE  EQU   RCB+16
RCBEXIT  EQU   RCB+12
RCBSAVE  EQU   RCB+8
RCBSTOR  EQU   RCB+4
RCBNEXT  EQU   RCB
PTRTLGID EQU   PTRT+4
PTRTPTRT EQU   PTRT
PSWEND   EQU   PSW+8
PSWIA    EQU   PSW+4
PSWSP    EQU   @NM00055
PSWSIG   EQU   PSWCCPM
PSWEU    EQU   PSWCCPM
PSWDO    EQU   PSWCCPM
PSWFPO   EQU   PSWCCPM
@NM00054 EQU   PSWCCPM
@NM00053 EQU   PSWCCPM
PSWPRBLM EQU   @NM00052
PSWAIT   EQU   @NM00052
PSWMCH   EQU   @NM00052
PSWMODE  EQU   @NM00052
PSWKEY   EQU   @NM00052
PSWXTRNL EQU   PSWSM
PSWIO    EQU   PSWSM
PSWDAT   EQU   PSWSM
@NM00051 EQU   PSWSM
@NM00050 EQU   PSWSM
@NM00049 EQU   PSWSM
PSWPER   EQU   PSWSM
@NM00048 EQU   PSWSM
@NM00047 EQU   MDCB+87
@NM00046 EQU   MDCBFLGS
MDCBDUMP EQU   MDCBFLGS
MDCBASMI EQU   MDCBFLGS
MDCBSTOR EQU   MDCB+80
MDCBGR15 EQU   MDCBGRS+60
MDCBGR14 EQU   MDCBGRS+56
MDCBGR13 EQU   MDCBGRS+52
MDCBGR12 EQU   MDCBGRS+48
MDCBGR11 EQU   MDCBGRS+44
MDCBGR10 EQU   MDCBGRS+40
MDCBGR9  EQU   MDCBGRS+36
MDCBGR8  EQU   MDCBGRS+32
MDCBGR7  EQU   MDCBGRS+28
MDCBGR6  EQU   MDCBGRS+24
MDCBGR5  EQU   MDCBGRS+20
MDCBGR4  EQU   MDCBGRS+16
MDCBGR3  EQU   MDCBGRS+12
MDCBGR2  EQU   MDCBGRS+8
MDCBGR1  EQU   MDCBGRS+4
MDCBGR0  EQU   MDCBGRS
MDCBPSW  EQU   MDCB+8
MDCBNEXT EQU   MDCB+4
MDCBMDCB EQU   MDCB
MDCEAVIL EQU   MDCE+8
MDCEMDCE EQU   MDCE
IODBSENS EQU   IODB+40
IODBR    EQU   IODBCCHH+7
IODBHH   EQU   IODBSRCH+2
IODBCC   EQU   IODBSRCH
IODBSEEK EQU   IODBCCHH+1
IODBM    EQU   IODBCCHH
IODBCSW  EQU   IODB+24
IODBCAW  EQU   IODB+20
IODBCPU  EQU   IODB+14
IODBTYPE EQU   IODB+13
IODBCLAS EQU   IODB+12
IODBDEV  EQU   IODB+10
@NM00045 EQU   IODBFLAG+1
IODBSTRT EQU   IODBFLAG
IODBCONW EQU   IODBFLAG
IODBACTV EQU   IODBFLAG
IODBHALT EQU   IODBFLAG
IODBIOC  EQU   IODBFLAG
IODBINT  EQU   IODBFLAG
IODBPTRM EQU   IODBFLAG
IODBTERM EQU   IODBFLAG
IODBIDEN EQU   IODB+4
IODBIODB EQU   IODB
DSCETEND EQU   DSCE+20
DSCETCUR EQU   DSCE+16
DSCETBEG EQU   DSCE+12
DSCENEXT EQU   DSCE+8
DSCEBEGN EQU   DSCE+4
DSCEDSCE EQU   DSCE
CSWCNT   EQU   CSW+6
CSWCHC   EQU   CSWCSTAT
CSWICC   EQU   CSWCSTAT
CSWCCC   EQU   CSWCSTAT
CSWCDC   EQU   CSWCSTAT
CSWPTC   EQU   CSWCSTAT
CSWPGC   EQU   CSWCSTAT
CSWIL    EQU   CSWCSTAT
CSWPCI   EQU   CSWCSTAT
CSWUE    EQU   CSWUSTAT
CSWUC    EQU   CSWUSTAT
CSWDE    EQU   CSWUSTAT
CSWCE    EQU   CSWUSTAT
CSWBUSY  EQU   CSWUSTAT
CSWCUE   EQU   CSWUSTAT
CSWSTMOD EQU   CSWUSTAT
CSWATTN  EQU   CSWUSTAT
CSWCADDR EQU   CSW+1
@NM00044 EQU   CSWKEY00
CSWKEY   EQU   CSWKEY00
CCWCNT   EQU   CCW+6
@NM00043 EQU   CCW+5
@NM00042 EQU   CCWFLAGS
CCWIDA   EQU   CCWFLAGS
CCWPCI   EQU   CCWFLAGS
CCWSKIP  EQU   CCWFLAGS
CCWSLI   EQU   CCWFLAGS
CCWCC    EQU   CCWFLAGS
CCWDC    EQU   CCWFLAGS
CCWDADDR EQU   CCW+1
CCWCMD   EQU   CCW
CTHWMAX  EQU   CTDMPTYP+29
CTHWM    EQU   CTDMPTYP+28
CTPRMT2X EQU   CTPRMT2+1
CTPRMT2Y EQU   CTPRMT2
CTPRMT1X EQU   CTPRMT1+1
CTPRMT1Y EQU   CTPRMT1
CTVCCT   EQU   CTDMPTYP+20
CTEOR    EQU   CTDMPTYP+16
CTCOMMIO EQU   CTDMPTYP+12
CTLWKAD  EQU   CTDMPTYP+8
CTCONSOL EQU   CTDMPTYP+4
@NM00041 EQU   CTBUFTYP
CTDUMP   EQU   CTBUFTYP
CTLSQA   EQU   CTBUFTYP
CTWKFLE  EQU   CTBUFTYP
@NM00040 EQU   CTBUFTYP
@NM00039 EQU   CTCONFLG
CTREAD   EQU   CTCONFLG
CTMSGOUT EQU   CTCONFLG
@NM00038 EQU   CTDMPTYP+1
@NM00037 EQU   CTIOTYPE
CTIORSET EQU   CTIOTYPE
CTIOCON  EQU   CTIOTYPE
CTIOTERM EQU   CTIOTYPE
CTEBCOPR EQU   CCT+49
@NM00036 EQU   CTLOWFLG
CTWKSTUS EQU   CTLOWFLG
CTINIT   EQU   CTLOWFLG
CTFP     EQU   CTLOWFLG
CTVIRTD  EQU   CTLOWFLG
CTEBCOPD EQU   CCT+45
CTCONTYP EQU   CCT+44
CTOUTAD  EQU   CCT+42
CTCPUI   EQU   CCT+40
CTERBCON EQU   CCT+36
CTERBTPE EQU   CCT+32
CTERBDA  EQU   CCT+28
CTCCHHW  EQU   CCT+24
CTCCHHE  EQU   CCT+20
CTCCHHS  EQU   CCT+16
CTPGECNT EQU   CCT+15
CTCCHHR  EQU   CCT+8
CTINADDR EQU   CCT+6
CTSENSE  EQU   CCT+4
CTDEVTYP EQU   CCT+3
@NM00035 EQU   CTFLG2
CTALTCON EQU   CTFLG2
CTWKDONE EQU   CTFLG2
CTVIRTR  EQU   CTFLG2
CTNOSTAT EQU   CTFLG2
CTPGEFLT EQU   CTFLG2
CTSTOR   EQU   CTFLG2
CTDUPSW  EQU   CTFLG2
CTERREC  EQU   CTFLG1
CTMP     EQU   CTFLG1
@NM00034 EQU   CTFLG1
CTDEFO   EQU   CTFLG1
CTWORK   EQU   CTFLG1
CTMORTPE EQU   CTFLG1
CTDEVICE EQU   CTFLG1
CTERROR  EQU   CTFLG1
CTWAIT   EQU   CCT
@NM00033 EQU   BCT+46
BCTRECLM EQU   BCTFLGI
@NM00032 EQU   BCTFLGT
BCTDUMP  EQU   BCTFLGT
BCTLSQA  EQU   BCTFLGT
@NM00031 EQU   BCTFLGT
BCTRBA   EQU   BCT+40
BCTAMB   EQU   BCT+36
@NM00030 EQU   BCTLPID+4
BCTLGN   EQU   BCTLPID
BCTKEY2  EQU   BCT+9
BCTKEY1  EQU   BCT+8
BCTBCT   EQU   BCT
BCTHBCTH EQU   BCTH
ARBADDRE EQU   ARB+4
ARBADDRB EQU   ARB
SGTEAC   EQU   SGTBYTE
@NM00005 EQU   SGTBYTE
@NM00004 EQU   SGTBYTE
@NM00003 EQU   SGTBYTE
@NM00002 EQU   SGTBYTE
@NM00001 EQU   SGTBYTE
SGTORG   EQU   SGTPTO
SGTKEY   EQU   SGTLK
SGTPTL   EQU   SGTLK
GTMSAVE  EQU   SADMPLSD+684
GTMNAME  EQU   SADMPLSD+680
FRMSAVE  EQU   SADMPLSD+580
FRMNAME  EQU   SADMPLSD+576
AUDSAVE  EQU   SADMPLSD+476
AUDNAME  EQU   SADMPLSD+472
IOISAVE  EQU   SADMPLSD+372
IOINAME  EQU   SADMPLSD+368
PGISAVE  EQU   SADMPLSD+268
PGINAME  EQU   SADMPLSD+264
SVISAVE  EQU   SADMPLSD+164
SVINAME  EQU   SADMPLSD+160
LOWCRS   EQU   SADMPLSD+96
LOWGRS   EQU   SADMPLSD+32
SAVEDUMP EQU   SADMPLSD+24
AUDPSW   EQU   SADMPLSD+16
SVIRPSW  EQU   SADMPLSD+8
PSWSADMP EQU   SADMPLSD
PFIOIRST EQU   DEBUGLSD+24
PFWATOIP EQU   DEBUGLSD+22
PFWATDE  EQU   DEBUGLSD+20
PFWATEN  EQU   DEBUGLSD+18
PFWATENW EQU   DEBUGLSD+16
PFSIOWAT EQU   DEBUGLSD+14
PFSIOPCI EQU   DEBUGLSD+12
PFSIOOUT EQU   DEBUGLSD+10
PFSIOWK  EQU   DEBUGLSD+8
PFSIODA  EQU   DEBUGLSD+6
PFTAPCPU EQU   DEBUGLSD+4
PFTRCLM  EQU   DEBUGLSD
@NM00029 EQU   PSA+3412
PSASTAK  EQU   PSA+3072
@NM00028 EQU   PSA+1032
PSAUSEND EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSARV060 EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00027 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00026 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSARV010 EQU   PSASUP3
PSARV009 EQU   PSASUP3
PSARV008 EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSAIPCRP EQU   PSASUP1
PSAIPCDR EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00025 EQU   FLCFSA
@NM00024 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00023 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00022 EQU   FLCIOA
@NM00021 EQU   FLCMCLA+15
@NM00020 EQU   FLCMCLA+14
@NM00019 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00018 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00017 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00016 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00015 EQU   FLCPER
@NM00014 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00013 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00012 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00011 EQU   FLCPIILC
@NM00010 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00009 EQU   FLCSVILC
@NM00008 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00007 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00006 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00194 EQU   NOBUFF
@RT00244 EQU   BUFNONE
@RT00249 EQU   BUFFOUND
@RF00252 EQU   NOBUFF
@ENDDATA EQU   *
         END   AMDSABUF,(C'PL/S-II',0502,74107)
