         TITLE 'IEWSUOVR....OVERLAY SUPERVISOR,RESIDENT MOD. FOR MVS'
IGC037   START 0
***
*031900-032200                                                   YM3344
*A685100-685600                                                @ZA05601
*A755100-755500,A935100                                        @ZA17987
*530000,699000,725000 DELETED                                  @ZA25977
*
*STATUS  CHANGE LEVEL 0.
*
*FUNCTION/OPERATION - TO HANDLE OVERLAY REQUESTS FROM PROBLEM PROGRAMS.
*   THIS MODULE RESIDES IN THE RESIDENT NUCLEUS. IT IS GIVEN CONTROL
*   BY THE SVC INTERRUPT HANDLER FOR SVC 37 AND SVC 45. IT INITIALIZES
*   INDICATORS AND POINTERS AND PASSES CONTROL TO THE MAIN PROCESSING
*   MODULE OF OVERLAY SUPERVISOR. UPON RETURN TO THIS MODULE, A RETURN
*   CODE IS EXAMINED AND IF AN ERROR HAS BEEN DETECTED, AN ABEND IS
*   ISSUED.
*
*ENTRY POINTS
*        IGC037 - SEGLD OR SEGWT REQUEST.
*              IF REGISTER 0 CONTAINS 0 REQUEST IS SEGLD.
*              IF REGISTER 0 CONTAINS 1 REQUEST IS SEGWT.
*              REGISTER ONE POINTS TO AN ENTAB ENTRY CONTAINING THE
*              NUMBER OF THE REQUESTED SEGMENT.
*        IGC045 - CALL OR BRANCH.
*              REGISTER 15 POINTS TO AN ENTAB ENTRY CONTAINING THE
*              NUMBER OF THE REQUESTED SEGMENT AND THE RELOCATED VALUE
*              OF THE SYMBOL TO WHICH THE CALL (OR BRANCH) IS BEING
*              MADE.
*
*INPUT  (SEE ENTRY PTS)
*
*OUTPUT   N/A
*
*EXTERNAL ROUTINES - IEWSWOVR - NON-RESIDENT OVERLAY SUPERVISOR
*
*EXITS-NORMAL   ALL PROBLEM PROGRAM REGISTERS ARE TRANSPARENT. REGISTER
*   0,1,15 ARE RESTORED TO PROBLEM PROGRAM CONTENTS BEFORE EXIT.
*   THIS MODULE EXITS BY ISSUING  SVC EXIT  FOR NORMAL RETURNS.
*
*     -ERRORS  ALL ERRORS ARE FOUND IN THE NON-RESIDENT  MODULE WHICH
*   PASSES  A RETURN CODE IN REGISTER 15 TO THIS MODULE.
*                 RETURN CODE OF ZERO INDICATES NO ERROR FOUND.
*                 RETURN CODE OF NON ZERO INDICATES ERROR.
*   IF AN ERROR HAS BEEN DETECTED THE RETURN CODE IS USED TO FORM THE
*     ABEND ERROR CODE.
*                 CODES - X'8012D000'  SEGMENT TABLE AS BEEN CONTAMIN-
*                                      ATED.
*                       - X'8022D000'  VALIDITY TEST INDICATES AN ADDR-
*                                      ESS IN ENTAB OR SEGTAB HAS BEEN
*                                      DESTROYED AND NOW ADDRESSES A
*                                      LOCATION OUTSIDE OF THE PROBLEM
*                                      PROGRAM.
*                      - X'80X2D000'   AN ERROR HAS BEEN DETECTED BY
*                                      PROGRAM FETCH. 'X' IS THE CODE
*                                      RETURNED BY PROGRAM FETCH.
*                            X = 3     I/O ERROR.
*                            X = E     INVALID ADDRESS.
*                            X = D     INVALID RECORD TYPE.
*                       - X'80425000'  AN INVALID SEGWT REQUEST MADE BY
*                                      PROBLEM PROGRAM. INVALID REQU-
*                                      ESTS ARE REQUESTS TO OVERLAY THE
*                                      REQUESTING SEGMENT OR ONE HIGHER
*                                      IN ITS PATH. THIS ERROR IS NOT
*                                      DETECTED BY MODULE IEWSWOVR.
*
*TABLES/WORK AREAS  (SEE DESCRIPTION PRECEDING NON-RESIDENT MODULE.)
*
*ATTRIBUTES   READ ONLY, REENTRANT, PRIVILEGED, ENTERED IN KEY 0 BUT
*             ASSUMES CALLER KEY SOMETIMES.
*             RESIDENT TYPE 2 SVC ROUTINE.
*
*NOTES
*   THIS MODULE OPERATES WITH SYNCHRONOUS OVERLAY SUPERVISOR MODULES.
*   THIS ROUTINE REQUIRES SIX DOUBLE WORDS OF EXTENDED SAVE AREA STOR-
*   AGE ATTACHED TO ITS SVRB.
*  EQUATES FOR SVRB SAVE AREA
*
IEWSRGSV EQU   32           OFFSET OF REGISTER SAVE AREA IN SVRB
IEWSSAVE EQU   96           BEGINNING OF THE EXTENDED SAVE AREA.
IEWSUK   EQU   IEWSSAVE+44  SAVE AREA FOR USER KEY (BYTE)      @ZA25977
*
*  EQUATES FOR RB
*
RBBASIC  EQU   X'40'        START OF BASIC SECTION             @ZA25977
RBOPSW   EQU   X'50'        OLD PSW                            @ZA25977
RBLINK   EQU   X'5C'        CHAIN TO PREV. RB                  @ZA25977
*
* REGISTER EQUATES
*
IEWSRR0  EQU   0
IEWSRR1  EQU   1
IEWSRR2  EQU   2
IEWSRR3  EQU   3
IEWSRR4  EQU   4
IEWSRR5  EQU   5
IEWSRR6  EQU   6
IEWSRBS1 EQU   7
IEWSRR8  EQU   8
IEWSRR9  EQU   9
IEWSRR10 EQU   10
IEWSRBS2 EQU   11
IEWSRR12 EQU   12
IEWSRR14 EQU   14
IEWSRR15 EQU   15
*
EXIT     EQU   3
         EJECT                                                 @ZA25977
CVT      DSECT
         CVT   SYS=MIN
         EJECT
IGC037   CSECT                     ENTRY FOR SEGLD AND SEGWT.
         BALR  IEWSRBS2,0
         USING *,IEWSRBS2
*
*   CHECK REGISTER 0 AND MOVE IT TO REG 2. IF CONTENTS IS ZERO
*   REQUEST IS A SEGLD. IF NON-ZERO REQUEST IS A SEGWT.
*   EXAMINE HIGH ORDER BYTE OF REG 1. IF ZERO, VCON DOES NOT
*   POINT TO AN ENTAB, EXIT TO PROBLEM PROGRAM.
*
         LR    IEWSRR2,IEWSRR0     MOVE FUNCTION CODE.
         CL    IEWSRR1,IEWSLCN1    TEST HIGH ORDER BYTE OF VCON FOR 0.
         BNL   IEWSL10             EXIT IF ZERO -- NOT OVERLAY
         SVC   EXIT
         SPACE 2
         CNOP  0,8
IGC045   EQU   *                   ENTER FROM ENTAB (CALL/BRANCH)
         ENTRY IGC045              "
*
*   MOVE PTR TO ENTAB FROM REG15 TO REG 1. SET REG 2 NEGATIVE TO INDI-
*   CATE CALL (OR BRANCH).
*
         LR    IEWSRR1,IEWSRR15    MOVE ENTAB PTR TO REG 1
         LNR   IEWSRR2,IEWSRR15    SET FUNCTION CODE BRANCH(CALL)
IEWSL10  BALR  IEWSRBS1,0
         USING *,IEWSRBS1
*
*   PUT BASE ADDRESS OF COMMUNICATION VECTOR IN REG 8. GET ADDRESS OF
*  SVRB INTO REG 6. THE SAVE AREA IS REFERENCED THROUGH OFFSET.
*
         LR    IEWSRR8,IEWSRR3     ADDRESS OF COMMUNICATION VECTOR.
         LR    IEWSRR6,IEWSRR5     ADDRESS OF SVRB FOR SAVE AREA.
*
*  OBTAIN USER'S KEY, SAVE IN RB SAVE AREA, SWITCH KEYS        @ZA25977
*
         L     IEWSRR12,RBLINK-RBBASIC(IEWSRR6)     PREV. RB   @ZA25977
         IC    IEWSRR12,RBOPSW+1-RBBASIC(,IEWSRR12) PICK KEY   @ZA25977
         STC   IEWSRR12,IEWSUK(,IEWSRR6)            SAVE IT    @ZA25977
         SPKA  0(IEWSRR12)                          ENTER IT   @ZA25977
*
*   TEST THAT REGISTER 1 POINTS TO ENTAB                       @ZA05601
*
         CLI   0(IEWSRR1),X'47'    R1 POINTS TO ENTAB?         @ZA05601
         BNE   IEWSEXIT            NO, RETURN TO PROBLEM PROG. @ZA25977
*
*   PUT ADDRESS OF SEGTAB INTO REG 12.
*
         LH    IEWSRR12,2(IEWSRR1) GET DISPLCMT FIELD FROM ENTAB.
         SRL   IEWSRR12,2
         SLL   IEWSRR12,2
         L     IEWSRR12,8(IEWSRR12,IEWSRR1)  GET ADDRESS OF SEGTAB
         EJECT                                                 @ZA25977
*
* PICK UP NUMBER OF REQUESTED SEGMENT (NSEG) FROM ENTAB.
*
         SR    IEWSRR9,IEWSRR9
         IC    IEWSRR9,8(IEWSRR1)  GET NUMBER OF REQUESTED SEGMENT.
         SR    IEWSRR10,IEWSRR10   PRESET 10 TO ZERO.
         LR    IEWSRR4,IEWSRR1     SAVE ENTAB ADDRESS IN REG 4 @ZA17987
         L     IEWSRR0,IEWSGM      GETMAIN SIZE                @ZA17987
         MODESET EXTKEY=SUPR       GO TO KEY 0                 @ZA25977
         GETMAIN R,LV=(0)          DO GETMAIN                  @ZA17987
         MVI   0(IEWSRR1),X'47'    SET INDICATOR AND ENTAB     @ZA17987
         ST    IEWSRR4,4(IEWSRR1)  ADDRESS IN PASSED AREA      @ZA17987
*
*   LINK TO NON-RESIDENT MODULE OF OVERLAY TO PROCESS REQUEST.
*
*   DCB=LINKLIB PARM ADDED TO FORCE THE SEARCH OF LINKLIB AND STOP
*     SEARCHING JOBLIB/STEPLIB WHICH GIVES US THE INCORRECT VERSION OF
*     THE MODULE.
         USING CVT,IEWSRR4
         L     IEWSRR4,CVTPTR(0)   R4=CVTPTR                     YM3344
         L     IEWSRR4,CVTLINK     R4=PTR TO LINKLIB DCB         YM3344
         DROP  IEWSRR4
*
         LA    IEWSRR15,IEWSLKPR
         LINK  MF=(E,(1)),SF=(E,(15)),DCB=(IEWSRR4)              YM3344
*
*  RETURN IS MADE IN SUPERVISOR KEY (0)
*
         BALR  IEWSRBS1,0          SET BASE ON RETURN FROM LINK
         USING *,IEWSRBS1
         LR    IEWSRR4,IEWSRR3     SAVE WORKAREA POINTER         MAN
         LR    IEWSRR3,IEWSRR1
*
*   TEST REGISTER 15 FOR RETURN CODE.
*
         LTR   IEWSRR1,IEWSRR15    CHECK ERROR CODE.
         BNZ   IEWSERR
*
*   RESTORE REGISTERS 0,1,15 FROM SVRB.
*
         LM    IEWSRR0,IEWSRR1,IEWSRGSV(IEWSRR6)  RESTORE REGS 0,1.
         L     IEWSRR15,IEWSRGSV+60(IEWSRR6)      RESTORE REG 15.
IEWSEXIT SVC   EXIT
         EJECT                                                 @ZA25977
*
*  GENERATE ABEND CODE WITH DUMP BIT ON AND ISSUE ABEND. REGISTER 3
*  CONTAINS ADDRESS OF ENTAB ENTRY SPECIFIED IN THE REQUEST.
*
IEWSERR  SLL   IEWSRR1,12
         A     IEWSRR1,IEWSLCN2    SET ON DUMP BIT.
         ABEND (1)
         SPACE 3                                               @ZA25977
         CNOP  0,4                                             @ZA25977
IEWSLCN1 DC    X'00FFFFFF' CONSTANT TO CHECK HIGH ORDER BYTE OF VCON.
* NEXT TWO LINES CONSTITUTE A LIST FORM OF LINK MACRO
IEWSLKPR DC    A(IEWSNAME)         ADDRESS OF NAME
         DC    F'0'                DCB ADDRESS.
*
IEWSLCN2 DC    X'80000000'
IEWSNAME DC    C'IEWSZOVR'
IEWSGM   DC    X'E9000008'         SP 233                      @ZA17987
         END
*/*MVMOVRLY:   CHART (SEQ) M. NIKOLAI */
*/*IGC037:     E ENTRY FOR SVC 37 */
*/*            P TEST VCON PASSED IN R1 IS POINTING TO ENTAB */
*/*            D (YES,,NO,IEWSL10) HIGH ORDER BYTE = 0? */
*/*            R EXIT TO PROBLEM PROGRAM */
*/*IGC045:     E ENTRY FOR SVC 45 */
*/*            P INDICATE BRANCH FUNCTION CODE */
*/*IEWSL10:    P OBTAIN AND SAVE USER KEY */
*/*            D (YES,,NO,IEWSEXIT) R1 POINT TO ENTAB? */
*/*            P REG 12 = ADDRESS OF SEGTAB */
*/*            P REG 9 = NUMBER OF REQUESTED SEGMENT (NSEG) */
*/*            P FORCE LINKLIB SEARCH FOR IEWSZOVR */
*/*            S LINK: LINK TO NON-RES MODULE (IEWSZOVR) */
*/*            P CHECK ERROR CODE RETURNED FROM NON-RES MODULE */
*/*            D (NO,,YES,IEWSERR) ERROR RETURN? */
*/*IEWSEXIT:   R RETURN TO PROBLEM PROGRAM */
*/*IEWSERR:    S ABEND: ABEND THE TASK */
*/*MVMOVRLY:   END */
*/*   DUMMY END TO AVOID MSG WHEN H ASM IS USED....            @ZA25977
               END ,                                        @ZA25977 */
