         TITLE 'AMDPRQCB - QUEUE CONTROL BLOCK FORMATTING ROUTINE      *
                        '
AMDPRQCB CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'AMDPRQCB  78.235'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
*/*------------------------------------------------------------------*/
*/* AMDPRQCB MAIN SEGMENT CONTAINS THE OVERALL LOGIC                 */
*/*------------------------------------------------------------------*/
*/*------------------------------------------------------------------*/
*/* GET CORE FOR AUTOMATIC DATA AND SAVE AREA FROM THE SUBPOOL THAT  */
*/*  WAS SPECIFIED IN THE INPUT PARAMETER LIST                       */
*/*------------------------------------------------------------------*/
*DO;                                                            02S0037
*  RESPECIFY (R2,R3,R5) RESTRICTED;                             02S0038
*  RESPECIFY ABDPL BASED(R5);                                   02S0039
*  R5 = R1;                       /* SAVE INPUT ADDR ACROSS GETMAIN  */
         LR    R5,R1                                            02S0040
*  R3 = ADPLSBPL;                 /* SUBPOOL NUMBER                  */
         SLR   R3,R3                                            02S0041
         IC    R3,ADPLSBPL(,R5)                                 02S0041
*  GEN REFS(R2,R3,DATAREG);                                     02S0042
         L    R2,@SIZDATD          SIZE OF DATA AND SAVE AREA
         GETMAIN RC,LV=(R2),SP=(R3)
         USING @DATD,DATAREG
*END;                                                           02S0043
*IF R15=0 THEN                    /* GETMAIN WAS SUCCESSFUL          */
         LTR   R15,R15                                          01S0044
         BNZ   @RF00044                                         01S0044
*  DO;                                                          01S0045
*/*------------------------------------------------------------------*/
*/* SET UP SAVE AREA CHAINING AND INITIALIZE                         */
*/*------------------------------------------------------------------*/
*DO;                                                            02S0046
*  DATAREG = R1;                  /* ADDRESS OF GOTTEN CORE          */
         LR    DATAREG,R1                                       02S0047
*  GENERATE;                                                    02S0048
         ST    13,@SA00001+4
         LA    15,@SA00001
         ST    15,8(,13)
         LR    13,15
*  EBCPTR = ADDR(EBCDIC) - 240;   /* INIT POINTER TO TR TABLE        */
         LA    @14,EBCDIC                                       02S0049
         SH    @14,@CH01121                                     02S0049
         ST    @14,EBCPTR                                       02S0049
*  RETCODE = 0;                                                 02S0050
         SLR   RETCODE,RETCODE                                  02S0050
*  ABDPLPTR = R5;                 /* SAVE ADDRESS OF PARAMETER LIST  */
         ST    R5,ABDPLPTR                                      02S0051
*  INMAJPTR = ADDR(INMAJ);                                      02S0052
         LA    @14,INMAJ                                        02S0052
         ST    @14,INMAJPTR                                     02S0052
*  INMINPTR = ADDR(INMIN);                                      02S0053
         LA    INMINPTR,INMIN                                   02S0053
*  INQELPTR = ADDR(INQEL);                                      02S0054
         LA    @14,INQEL                                        02S0054
         ST    @14,INQELPTR                                     02S0054
*  RESPECIFY ABDPL BASED(ABDPLPTR);                             02S0055
*  RESPECIFY (R2,R3,R5) UNRESTRICTED;                           02S0056
*  BUFFRPTR = ADPLBUF;            /* SUPPLIED OUTPUT BUFFER          */
         L     @14,ABDPLPTR                                     02S0057
         L     BUFFRPTR,ADPLBUF(,@14)                           02S0057
*END;                                                           02S0058
*    MESSAGE(27:94) = TITLE;      /* TITLE LINE                      */
         MVC   MESSAGE+26(68,BUFFRPTR),TITLE                    01S0059
*    CALL PRINTRTN;               /* PRINT TITLE                     */
         BAL   @14,PRINTRTN                                     01S0060
*    IF ADPLCVT^=0 THEN           /* THERE IS A CVT                  */
         L     @14,ABDPLPTR                                     01S0061
         ICM   @08,15,ADPLCVT(@14)                              01S0061
         BZ    @RF00061                                         01S0061
*     DO;                                                       01S0062
*      R0 = ADDR(CVTFQCB);        /* SETUP TO READ QCB POINTER       */
         L     @08,CVTPTR(,@14)                                 01S0063
         LA    R0,CVTFQCB(,@08)                                 01S0063
*      R1 = ABDPLPTR;             /* ADDR OF PARM LIST               */
         LR    R1,@14                                           01S0064
*      CALL MEMACRTN;             /* READ ONE WORD                   */
         L     @15,ADPLMEMA(,@14)                               01S0065
         BALR  @14,@15                                          01S0065
*      IF R15=0 THEN                                            01S0066
         SLR   @14,@14                                          01S0066
         CR    R15,@14                                          01S0066
         BNE   @RF00066                                         01S0066
*       DO;                                                     01S0067
*        QCBHEAD = DATAWORD;      /* SAVE POINTER TO FIRST QCB       */
         LR    @08,R0                                           01S0068
         L     @08,DATAWORD(,@08)                               01S0068
         ST    @08,QCBHEAD                                      01S0068
*        IF QCBHEAD=0 THEN        /* THERE IS NO QCB CHAIN           */
         CR    @08,@14                                          01S0069
         BNE   @RF00069                                         01S0069
*/*------------------------------------------------------------------*/
*/* ISSUE NO QCBS MESSAGE                                            */
*/*------------------------------------------------------------------*/
*DO;                                                            02S0070
*  CALL PRINTRTN;                                               02S0071
         BAL   @14,PRINTRTN                                     02S0071
*  MESSAGE(1:LENGTH(NOQCBMSG)) = NOQCBMSG;                      02S0072
         MVC   MESSAGE(13,BUFFRPTR),NOQCBMSG                    02S0072
*  CALL PRINTRTN;                                               02S0073
         BAL   @14,PRINTRTN                                     02S0073
*END;                                                           02S0074
*        ELSE                                                   01S0075
*          DO;                                                  01S0075
         B     @RC00069                                         01S0075
@RF00069 DS    0H                                               01S0076
*            R0 = ADDR(CVTLQCB);                                01S0076
         L     @14,ABDPLPTR                                     01S0076
         L     @08,CVTPTR(,@14)                                 01S0076
         LA    R0,CVTLQCB(,@08)                                 01S0076
*            R1 = ABDPLPTR;       /* ADDR OF PARM LIST               */
         LR    R1,@14                                           01S0077
*            CALL MEMACRTN;       /* READ PTR TO LAST QCB            */
         L     @15,ADPLMEMA(,@14)                               01S0078
         BALR  @14,@15                                          01S0078
*            IF R15=0 THEN                                      01S0079
         LTR   R15,R15                                          01S0079
         BNZ   @RF00079                                         01S0079
*              QCBTAIL = DATAWORD;                              01S0080
         LR    @14,R0                                           01S0080
         MVC   QCBTAIL(4),DATAWORD(@14)                         01S0080
*            ELSE                                               01S0081
*              QCBTAIL = 0;       /* INDICATE NO POINTER TO LAST     */
         B     @RC00079                                         01S0081
@RF00079 SLR   @14,@14                                          01S0081
         ST    @14,QCBTAIL                                      01S0081
*            CALL MAJFAMLY;                                     01S0082
@RC00079 BAL   @14,MAJFAMLY                                     01S0082
*          END;                                                 01S0083
*        END;                                                   01S0084
*      ELSE                       /* READ FOR CVTFQCB WAS UNSUCCESSFL*/
*/*------------------------------------------------------------------*/
*/* INDICATE THAT THE POINTER TO THE HEAD MAJOR QCB COULD NOT BE READ*/
*/*------------------------------------------------------------------*/
*DO;                                                            02S0085
         B     @RC00066                                         02S0085
@RF00066 DS    0H                                               02S0086
*  CALL PRINTRTN;                                               02S0086
         BAL   @14,PRINTRTN                                     02S0086
*  MESSAGE(1:LENGTH(CVTQCBMG)) = CVTQCBMG;                      02S0087
         MVC   MESSAGE(37,BUFFRPTR),CVTQCBMG                    02S0087
*  CALL PRINTRTN;                                               02S0088
         BAL   @14,PRINTRTN                                     02S0088
*END;                                                           02S0089
*     END;                                                      01S0090
*    ELSE                         /* NO CVT IN DUMP                  */
*/*------------------------------------------------------------------*/
*/* INDICATE THAT THE CVTPTR WAS ZERO                                */
*/*------------------------------------------------------------------*/
*DO;                                                            02S0091
         B     @RC00061                                         02S0091
@RF00061 DS    0H                                               02S0092
*  CALL PRINTRTN;                                               02S0092
         BAL   @14,PRINTRTN                                     02S0092
*  NOCVT = NOCVTMSG;                                            02S0093
         MVC   NOCVT(20,BUFFRPTR),NOCVTMSG                      02S0093
*  CALL PRINTRTN;                                               02S0094
         BAL   @14,PRINTRTN                                     02S0094
*END;                                                           02S0095
*  END;                                                         01S0096
*ELSE                             /* GETMAIN FAILED                  */
*  DO;                                                          01S0097
         B     @RC00044                                         01S0097
@RF00044 DS    0H                                               01S0098
*    R15 = NOCORE;                /* INDICATE GETMAIN FAILURE        */
         LA    R15,4                                            01S0098
*    GO TO EXIT;                  /* RETURN TO CALLER                */
         B     EXIT                                             01S0099
*  END;                                                         01S0100
*/*------------------------------------------------------------------*/
*/* FREE CORE AND RETURN                                             */
*/*------------------------------------------------------------------*/
*DO;                                                            02S0101
@RC00044 DS    0H                                               02S0102
*  RESPECIFY (R2,R13) RESTRICTED;                               02S0102
*  R15 = RETCODE;                                               02S0103
         LR    R15,RETCODE                                      02S0103
*  GEN REFS(R13) (L    R13,@SA00001+4);                         02S0104
         L    R13,@SA00001+4
*  GEN REFS(R3) (L    R3,@SIZDATD);                             02S0105
         L    R3,@SIZDATD
*  R2 = ADPLSBPL;                                               02S0106
         L     @14,ABDPLPTR                                     02S0106
         SLR   R2,R2                                            02S0106
         IC    R2,ADPLSBPL(,@14)                                02S0106
*  R1 = DATAREG;                                                02S0107
         LR    R1,DATAREG                                       02S0107
*  GENERATE(FREEMAIN R,LV=(R3),A=(1),SP=(R2));                  02S0108
         FREEMAIN R,LV=(R3),A=(1),SP=(R2)
*  EXIT: GENERATE;                                              02S0109
EXIT     DS    0H                                               02S0109
         L     14,12(13)
         LM    0,12,20(13)
         BR    14
*  RESPECIFY (R2,R13) UNRESTRICTED;                             02S0110
*END;                                                           02S0111
*PRINTRTN: PROCEDURE;                                           02S0112
PRINTRTN STM   @14,@08,@SA00002                                 02S0112
         STM   @10,@12,@SA00002+44                              02S0112
*/*------------------------------------------------------------------*/
*/* THIS ROUTINE CALLS THE SUPPLIED PRINT ROUTINE AND GETS THE       */
*/* ADDRESS OF THE NEW OUTPUT BUFFER                                 */
*/*------------------------------------------------------------------*/
*  R1 = ABDPLPTR;                 /* ADDR OF PARM LIST               */
         L     @14,ABDPLPTR                                     02S0113
         LR    R1,@14                                           02S0113
*  CALL PRINTR;                                                 02S0114
         L     @15,ADPLPRNT(,@14)                               02S0114
         BALR  @14,@15                                          02S0114
*  BUFFRPTR = ADPLBUF;            /* NEW BUFFER ADDRESS              */
         L     @14,ABDPLPTR                                     02S0115
         L     BUFFRPTR,ADPLBUF(,@14)                           02S0115
*END PRINTRTN;                                                  02S0116
@EL00002 DS    0H                                               02S0116
@EF00002 DS    0H                                               02S0116
@ER00002 LM    @14,@08,@SA00002                                 02S0116
         LM    @10,@12,@SA00002+44                              02S0116
         BR    @14                                              02S0116
*MAJFAMLY: PROCEDURE;                                           02S0117
MAJFAMLY STM   @14,@12,@SA00003                                 02S0117
*/*------------------------------------------------------------------*/
*/* EACH MAJOR QCB IS FORMATTED. EVERY MINOR QCB UNDER EACH MAJOR    */
*/* QCB IS FORMATTED, AND EVERY QEL UNDER EACH MINOR QCB IS          */
*/* FORMATTED.                                                       */
*/*------------------------------------------------------------------*/
*  READAD = QCBHEAD;              /* ADDRESS OF START OF QCB CHAIN   */
         MVC   READAD(4),QCBHEAD                                02S0118
*  STOPMAJ = QCBTAIL;              /* SET LAST IN CHAIN     @OZ15488 */
         MVC   STOPMAJ(4),QCBTAIL                               02S0119
*  MAJBREAK = NO;                 /* INIT QCB CHAIN STATUS           */
*  MAJCHAIN = NOTDONE;            /* INIT LOOP CONTROL               */
         NI    MAJBREAK,B'00111111'                             02S0121
*  DO MAJCOUNT=1 TO MAJMAX WHILE MAJCHAIN=NOTDONE;              02S0122
         LA    MAJCOUNT,1                                       02S0122
         B     @DE00122                                         02S0122
@DL00122 TM    MAJCHAIN,B'10000000'                             02S0122
         BNZ   @DC00122                                         02S0122
*    THISMAJ = READAD;                                          02S0123
         MVC   THISMAJ(4),READAD                                02S0123
*    TOPTR = ADDR(INMAJ);         /* COPY MAJOR QCB HERE             */
         LA    TOPTR,INMAJ                                      02S0124
*    COPYLGT = LENGTH(MAJ);                                     02S0125
         LA    COPYLGT,24                                       02S0125
*    INMAJ = INMAJ&&INMAJ;        /* ZERO OUT ALL FIELDS             */
         XC    INMAJ(24),INMAJ                                  02S0126
*    CALL COPY;                                                 02S0127
         BAL   @14,COPY                                         02S0127
*    IF COPYSTAT<BCKPTR & MAJBREAK=YES THEN                     02S0128
         CH    COPYSTAT,@CH00082                                02S0128
         BNL   @RF00128                                         02S0128
         TM    MAJBREAK,B'01000000'                             02S0128
         BNO   @RF00128                                         02S0128
*/*------------------------------------------------------------------*/
*/* A READ FAILURE HAS OCCURRED FOR THE SECOND TIME IN THE MAJOR QCB */
*/* CHAIN. A MESSAGE IS ISSUED AND PROCESSING IS TERMINATED.         */
*/*------------------------------------------------------------------*/
*DO;                                                            03S0129
*  CALL PRINTRTN;                                               03S0130
         BAL   @14,PRINTRTN                                     03S0130
*  MAJBREAK = NO;                                               03S0131
*  MAJCHAIN = DONE;               /* STOP MAJOR FORMATTING LOOP      */
         OI    MAJCHAIN,B'10000000'                             03S0132
         NI    MAJBREAK,B'10111111'                             03S0132
*  QCBCHN1 = ERRFND;              /* SET UP MESSAGE TEXT             */
         MVC   QCBCHN1(13,BUFFRPTR),ERRFND                      03S0133
*  QCBCHN2 = MAJORQCB;                                          03S0134
*                                                               03S0134
         MVC   QCBCHN2(9,BUFFRPTR),MAJORQCB                     03S0134
*   DO;                                                         03S0135
*     UNPK(QCBCHN3,THISMAJH);                                   03S0136
         UNPK  QCBCHN3(7,BUFFRPTR),THISMAJH(4)                  03S0136
*     TR(QCBCHN3,EBCTABL);                                      03S0137
         L     @14,EBCPTR                                       03S0137
         TR    QCBCHN3(7,BUFFRPTR),EBCTABL(@14)                 03S0137
*     QCBCHN3(LENGTH(QCBCHN3)) = ' ';                           03S0138
         MVI   QCBCHN3+6(BUFFRPTR),C' '                         03S0138
*   END;                                                        03S0139
*  QCBCHND = DASH;                                              03S0140
         MVC   QCBCHND(2,BUFFRPTR),DASH                         03S0140
*  QCBCHN4 = TERMTEXT;                                          03S0141
         MVC   QCBCHN4(19,BUFFRPTR),TERMTEXT                    03S0141
*  CALL PRINTRTN;                                               03S0142
         BAL   @14,PRINTRTN                                     03S0142
*END;                                                           03S0143
*    ELSE                                                       02S0144
*      IF COPYSTAT=NONE THEN                                    02S0144
         B     @RC00128                                         02S0144
@RF00128 LTR   COPYSTAT,COPYSTAT                                02S0144
         BNZ   @RF00144                                         02S0144
*/*------------------------------------------------------------------*/
*/* A READ FAILURE HAS OCCURRED IN THE MAJOR QCB CHAIN. AN OUTPUT    */
*/* COMMENT IS PRINTED AND, IF POSSIBLE BACKWARD TRACING IS          */
*/* INITIATED. IF BACKWARD TRACING IS NOT POSSIBLE THEN THE          */
*/* PROCESSING IS TERMINATED.                                        */
*/*------------------------------------------------------------------*/
*DO;                                                            03S0145
*  CALL PRINTRTN;                                               03S0146
         BAL   @14,PRINTRTN                                     03S0146
*  MAJBREAK = YES;                /* INDICATE BACK CHAINING IS NEEDED*/
         OI    MAJBREAK,B'01000000'                             03S0147
*  QCBCHN1 = ERRFND;              /* SET UP COMMON MESSAGE TEXT      */
         MVC   QCBCHN1(13,BUFFRPTR),ERRFND                      03S0148
*  QCBCHN2 = MAJORQCB;                                          03S0149
*                                                               03S0149
         MVC   QCBCHN2(9,BUFFRPTR),MAJORQCB                     03S0149
*   DO;                                                         03S0150
*     UNPK(QCBCHN3,THISMAJH);                                   03S0151
         UNPK  QCBCHN3(7,BUFFRPTR),THISMAJH(4)                  03S0151
*     TR(QCBCHN3,EBCTABL);                                      03S0152
         L     @14,EBCPTR                                       03S0152
         TR    QCBCHN3(7,BUFFRPTR),EBCTABL(@14)                 03S0152
*     QCBCHN3(LENGTH(QCBCHN3)) = ' ';                           03S0153
         MVI   QCBCHN3+6(BUFFRPTR),C' '                         03S0153
*   END;                                                        03S0154
*  QCBCHND = DASH;                                              03S0155
         MVC   QCBCHND(2,BUFFRPTR),DASH                         03S0155
*  IF QCBTAIL=0 THEN              /* POINTER TO LAST QCB NOT AVAIL   */
         ICM   @14,15,QCBTAIL                                   03S0156
         BNZ   @RF00156                                         03S0156
*    DO;                                                        03S0157
*      MAJCHAIN = DONE;           /* TERMINATE PROCESSING            */
         OI    MAJCHAIN,B'10000000'                             03S0158
*      QCBCHN4 = TERMTEXT;                                      03S0159
         MVC   QCBCHN4(19,BUFFRPTR),TERMTEXT                    03S0159
*    END;                                                       03S0160
*  ELSE                           /* POINTER TO LAST QCB IS AVAILABLE*/
*    DO;                                                        03S0161
         B     @RC00156                                         03S0161
@RF00156 DS    0H                                               03S0162
*      QCBCHN5 = FRSTBRK2;                                      03S0162
         MVC   QCBCHN5(24,BUFFRPTR),FRSTBRK2                    03S0162
*      MAJPMAJ = QCBTAIL;         /* SET UP TO READ FROM END        */
         L     @14,INMAJPTR                                     03S0163
         MVC   MAJPMAJ(4,@14),QCBTAIL                           03S0163
*      STOPMAJ = THISMAJ;         /* SET LAST FOR BKWRDS    @OZ15488 */
         MVC   STOPMAJ(4),THISMAJ                               03S0164
*    END;                                                       03S0165
*  CALL PRINTRTN;         /* PRINT BROKEN CHAIN COMMENT      */ 03S0166
@RC00156 BAL   @14,PRINTRTN                                     03S0166
*END;                                                           03S0167
*    IF COPYSTAT>NONE & MAJCHAIN=NOTDONE THEN                   02S0168
@RF00144 DS    0H                                               02S0168
@RC00128 LTR   COPYSTAT,COPYSTAT                                02S0168
         BNP   @RF00168                                         02S0168
         TM    MAJCHAIN,B'10000000'                             02S0168
         BNZ   @RF00168                                         02S0168
*/*------------------------------------------------------------------*/
*/* FORMAT THE MAJOR QCB -- PRINT ADDRESS AND MAJOR NAME             */
*/*------------------------------------------------------------------*/
*DO;                                                            03S0169
*  CALL PRINTRTN;                 /* SKIP A LINE                     */
         BAL   @14,PRINTRTN                                     03S0170
*  CALL PRINTRTN;                 /* SKIP A LINE                     */
         BAL   @14,PRINTRTN                                     03S0171
*  HDRMAJ = MAJOR;                /* MAJOR TITLE                     */
         MVC   HDRMAJ(5,BUFFRPTR),MAJOR                         03S0172
*  INCOMPLT = ON;                 /* TURNED OFF LATER IF WHOLE QCB
*                                    IS FORMATTED                    */
*                                                               03S0173
         OI    INCOMPLT,B'00000010'                             03S0173
*   DO;                                                         03S0174
*     UNPK(ADDRMAJ,THISMAJH);                                   03S0175
         UNPK  ADDRMAJ(7,BUFFRPTR),THISMAJH(4)                  03S0175
*     TR(ADDRMAJ,EBCTABL);                                      03S0176
         L     @14,EBCPTR                                       03S0176
         TR    ADDRMAJ(7,BUFFRPTR),EBCTABL(@14)                 03S0176
*     ADDRMAJ(LENGTH(ADDRMAJ)) = ' ';                           03S0177
         MVI   ADDRMAJ+6(BUFFRPTR),C' '                         03S0177
*   END;                                                        03S0178
*  IF COPYSTAT = COPYLGT THEN     /* FORMAT ENTIRE QCB               */
         CR    COPYSTAT,COPYLGT                                 03S0179
         BNE   @RF00179                                         03S0179
*    DO;                                                        03S0180
*      INCOMPLT = OFF;                                          03S0181
         NI    INCOMPLT,B'11111101'                             03S0181
*      NAMMAJLB = NAME;           /* COPY NAME TO OUTPUT BUFFER      */
         MVC   NAMMAJLB(4,BUFFRPTR),NAME                        03S0182
*      RESPECIFY R2 RESTRICTED;                                 03S0183
*      R2 = 0;                                                  03S0184
         SLR   R2,R2                                            03S0184
*      TRT(MAJNAME,NONPRNT);      /* TEST NAME FOR NONPRINTABLE CHARS*/
         L     @03,INMAJPTR                                     03S0185
         TRT   MAJNAME(8,@03),NONPRNT                           03S0185
*      IF R2=0 THEN               /* MAJOR NAME IS PRINTABLE         */
         LTR   R2,R2                                            03S0186
         BNZ   @RF00186                                         03S0186
*        NAMEMAJ = MAJNAME;       /* MOVE NAME TO OUTPUT LINE        */
         L     @14,INMAJPTR                                     03S0187
         MVC   NAMEMAJ(8,BUFFRPTR),MAJNAME(@14)                 03S0187
*      ELSE                       /* NAME IS UNPRINTABLE             */
*        DO;                      /* CONVERT NAME TO PRINTABLE HEX   */
         B     @RC00186                                         03S0188
@RF00186 DS    0H                                               03S0189
*          RESPECIFY R2 UNRESTRICTED;                           03S0189
*                                                               03S0189
*          DO;                                                  03S0190
*            UNPK(NAMEMAJ1,MAJORNM1);                           03S0191
         L     @14,INMAJPTR                                     03S0191
         UNPK  NAMEMAJ1(9,BUFFRPTR),MAJORNM1(5,@14)             03S0191
*            TR(NAMEMAJ1,EBCTABL);                              03S0192
         L     @08,EBCPTR                                       03S0192
         TR    NAMEMAJ1(9,BUFFRPTR),EBCTABL(@08)                03S0192
*            NAMEMAJ1(LENGTH(NAMEMAJ1)) = ' ';                  03S0193
         MVI   NAMEMAJ1+8(BUFFRPTR),C' '                        03S0193
*          END;                                                 03S0194
*                                                               03S0194
*          DO;                                                  03S0195
*            UNPK(NAMEMAJ2,MAJORNM2);                           03S0196
         UNPK  NAMEMAJ2(9,BUFFRPTR),MAJORNM2(5,@14)             03S0196
*            TR(NAMEMAJ2,EBCTABL);                              03S0197
         TR    NAMEMAJ2(9,BUFFRPTR),EBCTABL(@08)                03S0197
*            NAMEMAJ2(LENGTH(NAMEMAJ2)) = ' ';                  03S0198
         MVI   NAMEMAJ2+8(BUFFRPTR),C' '                        03S0198
*          END;                                                 03S0199
*          MASTAR1 = STAR;                                      03S0200
         MVI   MASTAR1(BUFFRPTR),C'*'                           03S0200
*          EBCFLD1 = MAJNAME;     /* ALSO PRINT AS IS                */
         MVC   EBCFLD1(8,BUFFRPTR),MAJNAME(@14)                 03S0201
*          TR(EBCFLD1,PRNTTBL);   /* MASK OUT NONPRINTABLES          */
         TR    EBCFLD1(8,BUFFRPTR),PRNTTBL                      03S0202
*          MASTAR2 = STAR;                                      03S0203
         MVI   MASTAR2(BUFFRPTR),C'*'                           03S0203
*        END;                                                   03S0204
*    END;                                                       03S0205
@RC00186 DS    0H                                               03S0206
*  CALL PRINTRTN;                 /* PRINT MAJOR QCB LINE            */
@RF00179 BAL   @14,PRINTRTN                                     03S0206
*  IF INCOMPLT=ON THEN            /* ONLY A PORTION WAS FORMATTED    */
         TM    INCOMPLT,B'00000010'                             03S0207
         BNO   @RF00207                                         03S0207
*    DO;                                                        03S0208
*      STARTMSG = 2;                                            03S0209
         LA    STARTMSG,2                                       03S0209
*      CALL PARTPRNT;             /* PRINT ERROR COMMENT             */
         BAL   @14,PARTPRNT                                     03S0210
*    END;                                                       03S0211
*END;                                                           03S0212
@RF00207 DS    0H                                               03S0213
*    IF MAJFMIN^=0 THEN           /* GET MINOR QCBS                  */
@RF00168 L     @14,INMAJPTR                                     02S0213
         ICM   @08,15,MAJFMIN(@14)                              02S0213
         BZ    @RF00213                                         02S0213
*      CALL MINFAMLY;                                           02S0214
         BAL   @14,MINFAMLY                                     02S0214
*   IF THISMAJ = STOPMAJ THEN      /* STOP NOW IF AT END    @OZ15488 */
@RF00213 CLC   THISMAJ(4),STOPMAJ                               02S0215
         BNE   @RF00215                                         02S0215
*      MAJCHAIN = DONE;            /* END LOOP              @OZ15488 */
         OI    MAJCHAIN,B'10000000'                             02S0216
*   ELSE                                                /*  @OZ15488 */
*   DO;                                                 /*  @OZ15488 */
         B     @RC00215                                         02S0217
@RF00215 DS    0H                                               02S0218
*    IF MAJBREAK=YES THEN                                       02S0218
         TM    MAJBREAK,B'01000000'                             02S0218
         BNO   @RF00218                                         02S0218
*      IF MAJPMAJ^=0 THEN         /* BACKWARD POINTER OK             */
         L     @14,INMAJPTR                                     02S0219
         L     @14,MAJPMAJ(,@14)                                02S0219
         LTR   @14,@14                                          02S0219
         BZ    @RF00219                                         02S0219
*        READAD = MAJPMAJ;                                      02S0220
         ST    @14,READAD                                       02S0220
*      ELSE                                                     02S0221
*        MAJCHAIN = DONE;         /* TERMINATE                       */
         B     @RC00219                                         02S0221
@RF00219 OI    MAJCHAIN,B'10000000'                             02S0221
*    ELSE                         /* STILL GOING FORWARD             */
*      IF MAJNMAJ^=0 THEN                                       02S0222
         B     @RC00218                                         02S0222
@RF00218 L     @14,INMAJPTR                                     02S0222
         L     @14,MAJNMAJ(,@14)                                02S0222
         LTR   @14,@14                                          02S0222
         BZ    @RF00222                                         02S0222
*        READAD = MAJNMAJ;                                      02S0223
         ST    @14,READAD                                       02S0223
*      ELSE                                                     02S0224
*        MAJCHAIN = DONE;         /* TERMINATE                       */
         B     @RC00222                                         02S0224
@RF00222 OI    MAJCHAIN,B'10000000'                             02S0224
*   END;                                                /*  @OZ15488 */
@RC00222 DS    0H                                               02S0225
@RC00218 DS    0H                                               02S0226
*  END;                                                         02S0226
@RC00215 AH    MAJCOUNT,@CH00039                                02S0226
@DE00122 C     MAJCOUNT,MAJMAX                                  02S0226
         BNH   @DL00122                                         02S0226
@DC00122 DS    0H                                               02S0227
*  IF MAJCOUNT>MAJMAX & MAJCHAIN=NOTDONE THEN                   02S0227
         C     MAJCOUNT,MAJMAX                                  02S0227
         BNH   @RF00227                                         02S0227
         TM    MAJCHAIN,B'10000000'                             02S0227
         BNZ   @RF00227                                         02S0227
*/*------------------------------------------------------------------*/
*/* INDICATE THAT A LOOP CONDITION WAS ASSUMED IN THE MAJOR          */
*/* QCB CHAIN                                                        */
*/*------------------------------------------------------------------*/
*DO;                                                            03S0228
*  CALL PRINTRTN;                                               03S0229
         BAL   @14,PRINTRTN                                     03S0229
*  INVALID = INVALMSG;                                          03S0230
         MVC   INVALID(7,BUFFRPTR),INVALMSG                     03S0230
*  INVALQCB = MAJORQCB;                                         03S0231
         MVC   INVALQCB(9,BUFFRPTR),MAJORQCB                    03S0231
*  ASSUME = ASSUMED;                                            03S0232
         MVC   ASSUME(13,BUFFRPTR),ASSUMED                      03S0232
*  CALL PRINTRTN;                                               03S0233
         BAL   @14,PRINTRTN                                     03S0233
*END;                                                           03S0234
*END MAJFAMLY;                                                  02S0235
@EL00003 DS    0H                                               02S0235
@EF00003 DS    0H                                               02S0235
@ER00003 LM    @14,@12,@SA00003                                 02S0235
         BR    @14                                              02S0235
*/*------------------------------------------------------------------*/
*/* OBTAIN ALL THE MINOR QCBS THAT ARE CHAINED TO THE CURRENT        */
*/*  MAJOR QCB.  IF THE CHAIN IS BROKEN THEN AN ATTEMPT IS MADE      */
*/*  TO START AT THE END AND GO BACK THROUGH THE CHAIN               */
*/*------------------------------------------------------------------*/
*MINFAMLY: PROCEDURE;                                           02S0236
MINFAMLY STM   @14,@08,@SA00004                                 02S0236
         STM   @10,@12,@SA00004+44                              02S0236
*  READAD = MAJFMIN;                                            02S0237
         L     @14,INMAJPTR                                     02S0237
         MVC   READAD(4),MAJFMIN(@14)                           02S0237
*  STOPMIN = MAJLMIN;              /* SET LAST IN CHAIN     @OZ15488 */
         MVC   STOPMIN(4),MAJLMIN(@14)                          02S0238
*  MINBREAK = NO;                 /* INIT QCB CHAIN STATUS           */
*  MINCHAIN = NOTDONE;            /* INIT LOOP CONTROL               */
         NI    MINBREAK,B'11001111'                             02S0240
*  DO MINCOUNT=1 TO MINMAX WHILE MINCHAIN=NOTDONE;              02S0241
         LA    @14,1                                            02S0241
         B     @DE00241                                         02S0241
@DL00241 TM    MINCHAIN,B'00100000'                             02S0241
         BNZ   @DC00241                                         02S0241
*    THISMIN = READAD;                                          02S0242
         MVC   THISMIN(4),READAD                                02S0242
*    TOPTR = ADDR(INMIN);         /* COPY MINOR QCB HERE             */
         LA    TOPTR,INMIN                                      02S0243
*    COPYLGT = LENGTH(MIN)-1;                                   02S0244
         LA    COPYLGT,20                                       02S0244
*    INMIN = INMIN&&INMIN;        /* ZERO OUT ALL FIELDS             */
         XC    INMIN(246),INMIN                                 02S0245
*    CALL COPY;                   /* COPY NEXT MINOR QCB             */
         BAL   @14,COPY                                         02S0246
*    IF COPYSTAT<BCKPTR & MINBREAK=YES THEN /* SECOND BREAK,ALL DONE */
         CH    COPYSTAT,@CH00082                                02S0247
         BNL   @RF00247                                         02S0247
         TM    MINBREAK,B'00010000'                             02S0247
         BNO   @RF00247                                         02S0247
*/*------------------------------------------------------------------*/
*/* THIS IS THE SECOND BREAK IN THE MINOR QCB CHAIN.                 */
*/* AN OUTPUT COMMENT IS PRINTED AND THE MINOR QCB LOOP              */
*/* IS TERMINATED FOR THIS MAJOR QCB                                 */
*/*------------------------------------------------------------------*/
*DO;                                                            03S0248
*  CALL PRINTRTN;                 /* PRINT OUTPUT COMMENT            */
         BAL   @14,PRINTRTN                                     03S0249
*  MINBREAK = NO;                                               03S0250
*  MINCHAIN = DONE;               /* STOP MINOR FORMATTING LOOP      */
         OI    MINCHAIN,B'00100000'                             03S0251
         NI    MINBREAK,B'11101111'                             03S0251
*  QCBCHN1 = ERRFND;              /* SET UP ERROR MESSAGE TEXT       */
         MVC   QCBCHN1(13,BUFFRPTR),ERRFND                      03S0252
*  QCBCHN2 = MINORQCB;                                          03S0253
*                                                               03S0253
         MVC   QCBCHN2(9,BUFFRPTR),MINORQCB                     03S0253
*   DO;                                                         03S0254
*     UNPK(QCBCHN3,THISMINH);                                   03S0255
         UNPK  QCBCHN3(7,BUFFRPTR),THISMINH(4)                  03S0255
*     TR(QCBCHN3,EBCTABL);                                      03S0256
         L     @14,EBCPTR                                       03S0256
         TR    QCBCHN3(7,BUFFRPTR),EBCTABL(@14)                 03S0256
*     QCBCHN3(LENGTH(QCBCHN3)) = ' ';                           03S0257
         MVI   QCBCHN3+6(BUFFRPTR),C' '                         03S0257
*   END;                                                        03S0258
*  CALL PRINTRTN;                 /* PRINT OUTPUT COMMENT            */
         BAL   @14,PRINTRTN                                     03S0259
*END;                                                           03S0260
*    ELSE                         /* KEEP GOING                      */
*      IF COPYSTAT=NONE THEN      /* FIRST BREAK - TRY TO RECOVER    */
         B     @RC00247                                         02S0261
@RF00247 LTR   COPYSTAT,COPYSTAT                                02S0261
         BNZ   @RF00261                                         02S0261
*/*------------------------------------------------------------------*/
*/* A READ FAILURE HAS OCCURRED IN THE MINOR QCB CHAIN. AN OUTPUT    */
*/* COMMENT IS PRINTED AND, IF POSSIBLE, BACKWARD TRACING IS         */
*/* INITIATED. IF BACKWARD TRACING IS NOT POSSIBLE THEN THE          */
*/* MINOR QCB LOOP IS TERMINATED FOR THIS MAJOR QCB.                 */
*/*------------------------------------------------------------------*/
*DO;                                                            03S0262
*  CALL PRINTRTN;                                               03S0263
         BAL   @14,PRINTRTN                                     03S0263
*  MINBREAK = YES;                /* INDICATE BACK CHAINING IS NEEDED*/
         OI    MINBREAK,B'00010000'                             03S0264
*  QCBCHN1 = ERRFND;              /* SET UP COMMON MESSAGE TEXT      */
         MVC   QCBCHN1(13,BUFFRPTR),ERRFND                      03S0265
*  QCBCHN2 = MINORQCB;                                          03S0266
*                                                               03S0266
         MVC   QCBCHN2(9,BUFFRPTR),MINORQCB                     03S0266
*   DO;                                                         03S0267
*     UNPK(QCBCHN3,THISMINH);                                   03S0268
         UNPK  QCBCHN3(7,BUFFRPTR),THISMINH(4)                  03S0268
*     TR(QCBCHN3,EBCTABL);                                      03S0269
         L     @14,EBCPTR                                       03S0269
         TR    QCBCHN3(7,BUFFRPTR),EBCTABL(@14)                 03S0269
*     QCBCHN3(LENGTH(QCBCHN3)) = ' ';                           03S0270
         MVI   QCBCHN3+6(BUFFRPTR),C' '                         03S0270
*   END;                                                        03S0271
*  IF MAJLMIN=0 THEN              /* ADDRESS OF LAST MINOR QCB IS NOT
*                                    AVAILABLE                       */
         L     @14,INMAJPTR                                     03S0272
         ICM   @08,15,MAJLMIN(@14)                              03S0272
         BNZ   @RF00272                                         03S0272
*    DO;                                                        03S0273
*      MINCHAIN = DONE;           /* ALL DONE                        */
         OI    MINCHAIN,B'00100000'                             03S0274
*    END;                                                       03S0275
*  ELSE                           /* ADDRESS OF LAST MINOR QCB IS
*                                    AVAILABLE                       */
*    DO;                                                        03S0276
         B     @RC00272                                         03S0276
@RF00272 DS    0H                                               03S0277
*      QCBCHND = DASH;                                          03S0277
         MVC   QCBCHND(2,BUFFRPTR),DASH                         03S0277
*      QCBCHN5 = FRSTBRK2;                                      03S0278
         MVC   QCBCHN5(24,BUFFRPTR),FRSTBRK2                    03S0278
*      MINPMIN = MAJLMIN;         /* SET UP TO READ FROM END         */
         L     @14,INMAJPTR                                     03S0279
         MVC   MINPMIN(4,INMINPTR),MAJLMIN(@14)                 03S0279
*      STOPMIN = THISMIN;         /* SET LAST FOR BKWRDS    @OZ15488 */
         MVC   STOPMIN(4),THISMIN                               03S0280
*    END;                                                       03S0281
*  CALL PRINTRTN;                 /* PRINT BROKEN CHAIN COMMENT      */
@RC00272 BAL   @14,PRINTRTN                                     03S0282
*END;                                                           03S0283
*    IF COPYSTAT>NONE & MINCHAIN=NOTDONE THEN /*COPIED ENUF TO FORMAT*/
@RF00261 DS    0H                                               02S0284
@RC00247 LTR   COPYSTAT,COPYSTAT                                02S0284
         BNP   @RF00284                                         02S0284
         TM    MINCHAIN,B'00100000'                             02S0284
         BNZ   @RF00284                                         02S0284
*/*------------------------------------------------------------------*/
*/* FORMAT THE MINOR QCB. IF THE MINOR NAME IS UNPRINTABLE THEN      */
*/* IT IS CONVERTED TO PRINTABLE HEX                                 */
*/*------------------------------------------------------------------*/
*DO;                                                            03S0285
*  CALL PRINTRTN;                 /* SKIP A LINE                     */
         BAL   @14,PRINTRTN                                     03S0286
*  HDRMIN = MINOR;                /* MINOR LABLE                     */
         MVC   HDRMIN(5,BUFFRPTR),MINOR                         03S0287
*  INCOMPLT = ON;                 /* TURNED OFF LATER IF WHOLE QCB
*                                    IS FORMATTED                    */
*                                                               03S0288
         OI    INCOMPLT,B'00000010'                             03S0288
*  DO;                                                          03S0289
*    UNPK(ADDRMIN,THISMINH);                                    03S0290
         UNPK  ADDRMIN(7,BUFFRPTR),THISMINH(4)                  03S0290
*    TR(ADDRMIN,EBCTABL);                                       03S0291
         L     @14,EBCPTR                                       03S0291
         TR    ADDRMIN(7,BUFFRPTR),EBCTABL(@14)                 03S0291
*    ADDRMIN(LENGTH(ADDRMIN)) = ' ';                            03S0292
         MVI   ADDRMIN+6(BUFFRPTR),C' '                         03S0292
*  END;    /* CONVERT MINOR ADDRESS           */                03S0293
*  IF COPYSTAT=COPYLGT THEN       /* FORMAT MINOR QCB                */
         CR    COPYSTAT,COPYLGT                                 03S0294
         BNE   @RF00294                                         03S0294
*    DO;                                                        03S0295
*      INCOMPLT = OFF;                                          03S0296
         NI    INCOMPLT,B'11111101'                             03S0296
*      IF MINSYS=ON & MINSYSS=OFF & MINSTEP=OFF THEN            03S0297
         TM    MINSYS(INMINPTR),B'10000000'                     03S0297
         BNO   @RF00297                                         03S0297
         TM    MINSYSS(INMINPTR),B'01100000'                    03S0297
         BNZ   @RF00297                                         03S0297
*        SCOPE = SYSTEM;                                        03S0298
         MVI   SCOPE+6(BUFFRPTR),C' '                           03S0298
         MVC   SCOPE(6,BUFFRPTR),SYSTEM                         03S0298
*      ELSE                                                     03S0299
*        IF MINSYSS=ON & MINSYS=OFF & MINSTEP=OFF THEN          03S0299
         B     @RC00297                                         03S0299
@RF00297 TM    MINSYSS(INMINPTR),B'01000000'                    03S0299
         BNO   @RF00299                                         03S0299
         TM    MINSYS(INMINPTR),B'10100000'                     03S0299
         BNZ   @RF00299                                         03S0299
*          SCOPE = SYSTEMS;                                     03S0300
         MVC   SCOPE(7,BUFFRPTR),SYSTEMS                        03S0300
*        ELSE                                                   03S0301
*          IF MINSTEP=ON & MINSYS=OFF & MINSYSS=OFF THEN        03S0301
         B     @RC00299                                         03S0301
@RF00299 TM    MINSTEP(INMINPTR),B'00100000'                    03S0301
         BNO   @RF00301                                         03S0301
         TM    MINSYS(INMINPTR),B'11000000'                     03S0301
         BNZ   @RF00301                                         03S0301
*            SCOPE = STEP;                                      03S0302
         MVI   SCOPE+4(BUFFRPTR),C' '                           03S0302
         MVC   SCOPE+5(2,BUFFRPTR),SCOPE+4(BUFFRPTR)            03S0302
         MVC   SCOPE(4,BUFFRPTR),STEP                           03S0302
*          ELSE                                                 03S0303
*            SCOPE = ERROR;                                     03S0303
         B     @RC00301                                         03S0303
@RF00301 MVI   SCOPE+5(BUFFRPTR),C' '                           03S0303
         MVI   SCOPE+6(BUFFRPTR),C' '                           03S0303
         MVC   SCOPE(5,BUFFRPTR),ERROR                          03S0303
*      ASIDLBL = ASID;                                          03S0304
*                                                               03S0304
@RC00301 DS    0H                                               03S0304
@RC00299 DS    0H                                               03S0304
@RC00297 MVC   ASIDLBL(4,BUFFRPTR),ASID                         03S0304
*      DO;                                                      03S0305
*        UNPK(ASIDFLD,MASID);                                   03S0306
         UNPK  ASIDFLD(5,BUFFRPTR),MASID(3,INMINPTR)            03S0306
*        TR(ASIDFLD,EBCTABL);                                   03S0307
         L     @14,EBCPTR                                       03S0307
         TR    ASIDFLD(5,BUFFRPTR),EBCTABL(@14)                 03S0307
*        ASIDFLD(LENGTH(ASIDFLD)) = ' ';                        03S0308
         MVI   ASIDFLD+4(BUFFRPTR),C' '                         03S0308
*      END;                                                     03S0309
*/*------------------------------------------------------------------*/
*/* COPY THE MINOR NAME                                              */
*/*------------------------------------------------------------------*/
*DO;                                                            04S0310
*  READAD = ADDR(THISMIN->MINNAME);                             04S0311
         L     @14,THISMIN                                      04S0311
         LA    @14,MINNAME(,@14)                                04S0311
         ST    @14,READAD                                       04S0311
*  TOPTR = ADDR(MINNAME);                                       04S0312
         LA    TOPTR,MINNAME(,INMINPTR)                         04S0312
*  COPYLGT = MINNAMEL;            /* INITIALIZE LOOP CONTROL         */
         SLR   COPYLGT,COPYLGT                                  04S0313
         IC    COPYLGT,MINNAMEL(,INMINPTR)                      04S0313
*  CALL COPY;                                                   04S0314
         BAL   @14,COPY                                         04S0314
*END;                                                           04S0315
*      IF MINNAMEL>0 & COPYSTAT=COPYLGT THEN /* THERE IS NAME        */
         CLI   MINNAMEL(INMINPTR),0                             03S0316
         BNH   @RF00316                                         03S0316
         CR    COPYSTAT,COPYLGT                                 03S0316
         BNE   @RF00316                                         03S0316
*/*------------------------------------------------------------------*/
*/* FORMAT THE VARIABLE LENGTH MINOR NAME                            */
*/*------------------------------------------------------------------*/
*DO;                                                            04S0317
*  NAMMINLB = NAME;                                             04S0318
         MVC   NAMMINLB(4,BUFFRPTR),NAME                        04S0318
*  RESPECIFY (R2,R5,R6) RESTRICTED;                             04S0319
*  R2 = 0;                        /* SET UP FOR TRT                  */
         SLR   R2,R2                                            04S0320
*  R5 = MINNAMEL-1;               /* LENGTH FOR EX INSTUCTION        */
         SLR   R5,R5                                            04S0321
         IC    R5,MINNAMEL(,INMINPTR)                           04S0321
         BCTR  R5,0                                             04S0321
*  R6 = ADDR(MINNAME);            /* FIELD THAT WILL BE TESTED       */
         LA    R6,MINNAME(,INMINPTR)                            04S0322
*  GEN(EX   R5,MINNMTRT);                                       04S0323
         EX   R5,MINNMTRT
*  IF R2^=0 THEN                  /* NAME IS NOT PRINTABLE           */
         LTR   R2,R2                                            04S0324
         BZ    @RF00324                                         04S0324
*   DO;                                                         04S0325
*    RESPECIFY (R2,R5,R6) UNRESTRICTED;                         04S0326
*    DO Y=1 TO MINNAMEL BY 20;    /* CONVERT NAME TO PRINTABLE HEX   */
         LA    Y,1                                              04S0327
         B     @DE00327                                         04S0327
@DL00327 DS    0H                                               04S0328
*      IF MINNAMEL-Y<20 THEN      /* CONVERT REMAINING PORTION       */
         SLR   @14,@14                                          04S0328
         IC    @14,MINNAMEL(,INMINPTR)                          04S0328
         SLR   @14,Y                                            04S0328
         CH    @14,@CH00856                                     04S0328
         BNL   @RF00328                                         04S0328
*        LINEEND = MINNAMEL-Y+1;                                04S0329
         AH    @14,@CH00039                                     04S0329
         LR    LINEEND,@14                                      04S0329
*      ELSE                       /* CONVERT NEXT 20 BYTES           */
*        LINEEND = 20;                                          04S0330
         B     @RC00328                                         04S0330
@RF00328 LA    LINEEND,20                                       04S0330
*      TOPTR = ADDR(NAMEMIN);                                   04S0331
@RC00328 LA    TOPTR,NAMEMIN(,BUFFRPTR)                         04S0331
*      FROMPTR = ADDR(MINORNM(Y));                              04S0332
         LA    FROMPTR,MINORNM-1(Y,INMINPTR)                    04S0332
*      DO Z=1 TO LINEEND;         /* TRANLATE ONE BYTE AT A TIME     */
*                                                               04S0333
         LA    @14,1                                            04S0333
         B     @DE00333                                         04S0333
@DL00333 DS    0H                                               04S0334
*        DO;                                                    04S0334
*          UNPK(TO,FROM);                                       04S0335
         UNPK  TO(3,TOPTR),FROM(2,FROMPTR)                      04S0335
*          TR(TO,EBCTABL);                                      04S0336
         L     @08,EBCPTR                                       04S0336
         TR    TO(3,TOPTR),EBCTABL(@08)                         04S0336
*          TO(LENGTH(TO)) = ' ';                                04S0337
         MVI   TO+2(TOPTR),C' '                                 04S0337
*        END;                                                   04S0338
*        TOPTR = TOPTR+2;                                       04S0339
         AH    TOPTR,@CH00095                                   04S0339
*        FROMPTR = FROMPTR+1;                                   04S0340
         AH    FROMPTR,@CH00039                                 04S0340
*      END;                                                     04S0341
         AH    @14,@CH00039                                     04S0341
@DE00333 ST    @14,Z                                            04S0341
         CR    @14,LINEEND                                      04S0341
         BNH   @DL00333                                         04S0341
*      MISTAR1 = STAR;            /* ALSO PRINT NAME AS IS           */
         MVI   MISTAR1(BUFFRPTR),C'*'                           04S0342
*      EBCFLD2(1:LINEEND) = MINORNM(Y:(Y+LINEEND-1));           04S0343
         LR    @14,LINEEND                                      04S0343
         BCTR  @14,0                                            04S0343
         LR    @08,INMINPTR                                     04S0343
         ALR   @08,Y                                            04S0343
         EX    @14,@SM01179                                     04S0343
*      MISTAR2 = STAR;                                          04S0344
         MVI   MISTAR2(BUFFRPTR),C'*'                           04S0344
*      TR (EBCFLD2,PRNTTBL);      /* MASK OUT UNPRINTABLES           */
         TR    EBCFLD2(20,BUFFRPTR),PRNTTBL                     04S0345
*      CALL PRINTRTN;             /* PRINT MINOR QCB LINE            */
         BAL   @14,PRINTRTN                                     04S0346
*    END;                                                       04S0347
         AH    Y,@CH00856                                       04S0347
@DE00327 SLR   @14,@14                                          04S0347
         IC    @14,MINNAMEL(,INMINPTR)                          04S0347
         CR    Y,@14                                            04S0347
         BNH   @DL00327                                         04S0347
*   END;                                                        04S0348
*  ELSE                           /* NAME IS PRINTABLE               */
*    DO Y=1 TO MINNAMEL BY 40;                                  04S0349
         B     @RC00324                                         04S0349
@RF00324 LA    Y,1                                              04S0349
         B     @DE00349                                         04S0349
@DL00349 DS    0H                                               04S0350
*      IF MINNAMEL-Y<40 THEN      /* COPY OVER REST OF NAME          */
         SLR   @14,@14                                          04S0350
         IC    @14,MINNAMEL(,INMINPTR)                          04S0350
         SLR   @14,Y                                            04S0350
         CH    @14,@CH01067                                     04S0350
         BNL   @RF00350                                         04S0350
*        LINEEND = MINNAMEL-Y+1;                                04S0351
         AH    @14,@CH00039                                     04S0351
         LR    LINEEND,@14                                      04S0351
*      ELSE                       /* COPY OVER NEXT 40 BYTES         */
*        LINEEND = 40;                                          04S0352
         B     @RC00350                                         04S0352
@RF00350 LA    LINEEND,40                                       04S0352
*      NAMEMIN(1:LINEEND) = MINORNM(Y:(Y+LINEEND-1));           04S0353
@RC00350 LR    @14,LINEEND                                      04S0353
         BCTR  @14,0                                            04S0353
         LR    @08,INMINPTR                                     04S0353
         ALR   @08,Y                                            04S0353
         EX    @14,@SM01181                                     04S0353
*      CALL PRINTRTN;             /* PRINT MINOR QCB LINE            */
         BAL   @14,PRINTRTN                                     04S0354
*    END;                                                       04S0355
         AH    Y,@CH01067                                       04S0355
@DE00349 SLR   @14,@14                                          04S0355
         IC    @14,MINNAMEL(,INMINPTR)                          04S0355
         CR    Y,@14                                            04S0355
         BNH   @DL00349                                         04S0355
*END;                                                           04S0356
*      ELSE                       /* NAME LENGTH INVALID             */
*        IF MINNAMEL=0 THEN       /* INDICATE AN ERROR               */
         B     @RC00316                                         03S0357
@RF00316 CLI   MINNAMEL(INMINPTR),0                             03S0357
         BNE   @RF00357                                         03S0357
*          DO;                                                  03S0358
*            MESSAGE(50:74) = ZEROLGTM;                         03S0359
         MVC   MESSAGE+49(25,BUFFRPTR),ZEROLGTM                 03S0359
*            CALL PRINTRTN;                                     03S0360
         BAL   @14,PRINTRTN                                     03S0360
*          END;                                                 03S0361
*        ELSE                     /* ENTIRE NAME WAS NOT READ        */
*          INCOMPLT = ON;                                       03S0362
         B     @RC00357                                         03S0362
@RF00357 OI    INCOMPLT,B'00000010'                             03S0362
*    END;                                                       03S0363
*  ELSE                           /* JUST PRINT LABEL AND ADDRESS    */
*    CALL PRINTRTN;                                             03S0364
         B     @RC00294                                         03S0364
@RF00294 BAL   @14,PRINTRTN                                     03S0364
*  IF INCOMPLT=ON THEN            /* ONLY A PORTION WAS FORMATTED    */
@RC00294 TM    INCOMPLT,B'00000010'                             03S0365
         BNO   @RF00365                                         03S0365
*    DO;                                                        03S0366
*      STARTMSG = 8;                                            03S0367
         LA    STARTMSG,8                                       03S0367
*      CALL PARTPRNT;             /* PRINT A COMMENT                 */
         BAL   @14,PARTPRNT                                     03S0368
*    END;                                                       03S0369
*END;                                                           03S0370
@RF00365 DS    0H                                               03S0371
*    IF MINFQEL^=0 THEN           /* GET QELS                        */
@RF00284 ICM   @14,15,MINFQEL(INMINPTR)                         02S0371
         BZ    @RF00371                                         02S0371
*      CALL QELFAMLY;                                           02S0372
         BAL   @14,QELFAMLY                                     02S0372
*   IF THISMIN = STOPMIN THEN      /* STOP NOW IF AT END    @OZ15488 */
@RF00371 CLC   THISMIN(4),STOPMIN                               02S0373
         BNE   @RF00373                                         02S0373
*      MINCHAIN = DONE;            /* END LOOP              @OZ15488 */
         OI    MINCHAIN,B'00100000'                             02S0374
*   ELSE                                                /*  @OZ15488 */
*   DO;                                                 /*  @OZ15488 */
         B     @RC00373                                         02S0375
@RF00373 DS    0H                                               02S0376
*    IF MINBREAK=YES THEN                                       02S0376
         TM    MINBREAK,B'00010000'                             02S0376
         BNO   @RF00376                                         02S0376
*      IF MINPMIN^=0 THEN         /* BACKWARD POINTER OK             */
         L     @14,MINPMIN(,INMINPTR)                           02S0377
         LTR   @14,@14                                          02S0377
         BZ    @RF00377                                         02S0377
*        READAD = MINPMIN;        /* USE BACKWARD POINTER            */
         ST    @14,READAD                                       02S0378
*      ELSE                                                     02S0379
*        MINCHAIN = DONE;         /* TERMINATE                       */
         B     @RC00377                                         02S0379
@RF00377 OI    MINCHAIN,B'00100000'                             02S0379
*    ELSE                         /* STILL GOING FORWARD             */
*      IF MINNMIN^=0 THEN         /* NOT AT END OF CHAIN             */
         B     @RC00376                                         02S0380
@RF00376 L     @14,MINNMIN(,INMINPTR)                           02S0380
         LTR   @14,@14                                          02S0380
         BZ    @RF00380                                         02S0380
*        READAD = MINNMIN;        /* USE FORWARD POINTER             */
         ST    @14,READAD                                       02S0381
*      ELSE                       /* END OF CHAIN                    */
*        MINCHAIN = DONE;         /* TERMINATE                       */
         B     @RC00380                                         02S0382
@RF00380 OI    MINCHAIN,B'00100000'                             02S0382
*   END;                                                /*  @OZ15488 */
@RC00380 DS    0H                                               02S0383
@RC00376 DS    0H                                               02S0384
*  END;                                                         02S0384
@RC00373 LA    @14,1                                            02S0384
         AL    @14,MINCOUNT                                     02S0384
@DE00241 ST    @14,MINCOUNT                                     02S0384
         C     @14,MINMAX                                       02S0384
         BNH   @DL00241                                         02S0384
@DC00241 DS    0H                                               02S0385
*  IF MINCOUNT>MINMAX & MINCHAIN=NOTDONE THEN /* NUMBER OF MINORS
*                                    EXCEEDED ASSUMED MAXIMUM        */
         L     @14,MINCOUNT                                     02S0385
         C     @14,MINMAX                                       02S0385
         BNH   @RF00385                                         02S0385
         TM    MINCHAIN,B'00100000'                             02S0385
         BNZ   @RF00385                                         02S0385
*/*------------------------------------------------------------------*/
*/* INDICATE THAT A LOOP CONDITION WAS ASSUMED IN THE MINOR          */
*/* QCB CHAIN                                                        */
*/*------------------------------------------------------------------*/
*DO;                                                            03S0386
*  CALL PRINTRTN;                                               03S0387
         BAL   @14,PRINTRTN                                     03S0387
*  INVALID = INVALMSG;                                          03S0388
         MVC   INVALID(7,BUFFRPTR),INVALMSG                     03S0388
*  INVALQCB = MINORQCB;                                         03S0389
         MVC   INVALQCB(9,BUFFRPTR),MINORQCB                    03S0389
*  ASSUME = ASSUMED;                                            03S0390
         MVC   ASSUME(13,BUFFRPTR),ASSUMED                      03S0390
*  CALL PRINTRTN;                                               03S0391
         BAL   @14,PRINTRTN                                     03S0391
*END;                                                           03S0392
*END MINFAMLY;                                                  02S0393
@EL00004 DS    0H                                               02S0393
@EF00004 DS    0H                                               02S0393
@ER00004 LM    @14,@08,@SA00004                                 02S0393
         LM    @10,@12,@SA00004+44                              02S0393
         BR    @14                                              02S0393
*/*------------------------------------------------------------------*/
*/* OBTAIN ALL THE QELS THAT ARE CHAINED TO THE CURRENT              */
*/*  MINOR QCB.  IF THE CHAIN IS BROKEN THEN AN ATTEMPT IS MADE      */
*/*  TO START AT THE END AND GO BACK THROUGH THE CHAIN               */
*/*------------------------------------------------------------------*/
*QELFAMLY: PROCEDURE;                                           02S0394
QELFAMLY STM   @14,@08,@SA00005                                 02S0394
         STM   @10,@12,@SA00005+44                              02S0394
*  READAD = MINFQEL;                                            02S0395
         MVC   READAD(4),MINFQEL(INMINPTR)                      02S0395
*  STOPQEL = MINLQEL;              /* SET LAST IN CHAIN     @OZ15488 */
         MVC   STOPQEL(4),MINLQEL(INMINPTR)                     02S0396
*  QELBREAK = NO;                 /* INIT QCB CHAIN STATUS           */
*  QELCHAIN = NOTDONE;            /* INIT LOOP CONTROL               */
         NI    QELBREAK,B'11110011'                             02S0398
*  DO QELCOUNT=1 TO QELMAX WHILE QELCHAIN=NOTDONE;              02S0399
         LA    QELCOUNT,1                                       02S0399
         B     @DE00399                                         02S0399
@DL00399 TM    QELCHAIN,B'00001000'                             02S0399
         BNZ   @DC00399                                         02S0399
*    THISQEL = READAD;                                          02S0400
         MVC   THISQEL(4),READAD                                02S0400
*    TOPTR = ADDR(INQEL);         /* COPY MAJOR QCB HERE             */
         LA    TOPTR,INQEL                                      02S0401
*    COPYLGT = QPRIMLGT;                                        02S0402
         LA    COPYLGT,16                                       02S0402
*    INQEL = INQEL&&INQEL;        /* ZERO OUT ALL FIELDS             */
         XC    INQEL(28),INQEL                                  02S0403
*    CALL COPY;                   /* COPY NEXT QEL                   */
         BAL   @14,COPY                                         02S0404
*    IF COPYSTAT<BCKPTR & QELBREAK=YES THEN /* SECOND BREAK,ALL DONE */
         CH    COPYSTAT,@CH00082                                02S0405
         BNL   @RF00405                                         02S0405
         TM    QELBREAK,B'00000100'                             02S0405
         BNO   @RF00405                                         02S0405
*/*------------------------------------------------------------------*/
*/* THIS IS THE SECOND BREAK IN THE QEL CHAIN. AN OUTPUT             */
*/* COMMENT IS PRINTED AND THE QEL LOOP FOR THIS MINOR QCB IS        */
*/* TERMINATED.                                                      */
*/*------------------------------------------------------------------*/
*DO;                                                            03S0406
*  CALL PRINTRTN;                 /* PRINT OUTPUT COMMENT            */
         BAL   @14,PRINTRTN                                     03S0407
*  QELBREAK = NO;                                               03S0408
*  QELCHAIN = DONE;               /* STOP QEL FORMATTING LOOP        */
         OI    QELCHAIN,B'00001000'                             03S0409
         NI    QELBREAK,B'11111011'                             03S0409
*  QELCHN1 = ERRFND;              /* SET UP ERROR MESSAGE TEXT       */
         MVC   QELCHN1(13,BUFFRPTR),ERRFND                      03S0410
*  QELCHN2 = QELMSG;                                            03S0411
*                                                               03S0411
         MVC   QELCHN2(3,BUFFRPTR),QELMSG                       03S0411
*   DO;                                                         03S0412
*     UNPK(QELCHN3,THISQELH);                                   03S0413
         UNPK  QELCHN3(7,BUFFRPTR),THISQELH(4)                  03S0413
*     TR(QELCHN3,EBCTABL);                                      03S0414
         L     @14,EBCPTR                                       03S0414
         TR    QELCHN3(7,BUFFRPTR),EBCTABL(@14)                 03S0414
*     QELCHN3(LENGTH(QELCHN3)) = ' ';                           03S0415
         MVI   QELCHN3+6(BUFFRPTR),C' '                         03S0415
*   END;                                                        03S0416
*  CALL PRINTRTN;                 /* PRINT OUTPUT COMMENT            */
         BAL   @14,PRINTRTN                                     03S0417
*END;                                                           03S0418
*    ELSE                                                       02S0419
*      IF COPYSTAT=NONE THEN      /* FIRST BREAK - TRY TO RECOVER    */
         B     @RC00405                                         02S0419
@RF00405 LTR   COPYSTAT,COPYSTAT                                02S0419
         BNZ   @RF00419                                         02S0419
*/*------------------------------------------------------------------*/
*/* A READ FAILURE HAS OCCURRED IN THE QEL CHAIN. AN OUTPUT          */
*/* COMMENT IS PRINTED AND, IF POSSIBLE, BACKWARD TRACING IS         */
*/* INITIATED. IF BACKWARD TRACING IS NOT POSSIBLE THEN THE QEL      */
*/* LOOP FOR THIS MINOR QCB IS TERMINATED                            */
*/*------------------------------------------------------------------*/
*DO;                                                            03S0420
*  CALL PRINTRTN;                                               03S0421
         BAL   @14,PRINTRTN                                     03S0421
*  QELBREAK = YES;                /* INDICATE BACK CHAINING IS NEEDED*/
         OI    QELBREAK,B'00000100'                             03S0422
*  QELCHN1 = ERRFND;              /* SET UP COMMON MESSAGE TEXT      */
         MVC   QELCHN1(13,BUFFRPTR),ERRFND                      03S0423
*  QELCHN2 = QELMSG;                                            03S0424
*                                                               03S0424
         MVC   QELCHN2(3,BUFFRPTR),QELMSG                       03S0424
*   DO;                                                         03S0425
*     UNPK(QELCHN3,THISQELH);                                   03S0426
         UNPK  QELCHN3(7,BUFFRPTR),THISQELH(4)                  03S0426
*     TR(QELCHN3,EBCTABL);                                      03S0427
         L     @14,EBCPTR                                       03S0427
         TR    QELCHN3(7,BUFFRPTR),EBCTABL(@14)                 03S0427
*     QELCHN3(LENGTH(QELCHN3)) = ' ';                           03S0428
         MVI   QELCHN3+6(BUFFRPTR),C' '                         03S0428
*   END;                                                        03S0429
*  IF MINLQEL=0 THEN              /* ADDRESS OF LAST QEL UNAVAILABLE */
         ICM   @14,15,MINLQEL(INMINPTR)                         03S0430
         BNZ   @RF00430                                         03S0430
*    DO;                                                        03S0431
*      QELCHAIN = DONE;           /* ALL DONE                        */
         OI    QELCHAIN,B'00001000'                             03S0432
*    END;                                                       03S0433
*  ELSE                           /* ADDRESS OF LAST QEL AVAILABLE   */
*    DO;                                                        03S0434
         B     @RC00430                                         03S0434
@RF00430 DS    0H                                               03S0435
*      QELCHND = DASH;                                          03S0435
         MVC   QELCHND(2,BUFFRPTR),DASH                         03S0435
*      QELCHN5 = FRSTBRK2;                                      03S0436
         MVC   QELCHN5(24,BUFFRPTR),FRSTBRK2                    03S0436
*      QELPQEL = MINLQEL;         /* SET UP TO READ FROM END         */
         L     @14,INQELPTR                                     03S0437
         MVC   QELPQEL(4,@14),MINLQEL(INMINPTR)                 03S0437
*      STOPQEL = THISQEL;         /* SET LAST FOR BKWRDS    @OZ15488 */
         MVC   STOPQEL(4),THISQEL                               03S0438
*    END;                                                       03S0439
*  CALL PRINTRTN;                 /* PRINT BROKEN CHAIN COMMENT      */
@RC00430 BAL   @14,PRINTRTN                                     03S0440
*END;                                                           03S0441
*    IF COPYSTAT>NONE & QELCHAIN=NOTDONE THEN /*COPIED ENUF TO FORMAT*/
@RF00419 DS    0H                                               02S0442
@RC00405 LTR   COPYSTAT,COPYSTAT                                02S0442
         BNP   @RF00442                                         02S0442
         TM    QELCHAIN,B'00001000'                             02S0442
         BNZ   @RF00442                                         02S0442
*/*------------------------------------------------------------------*/
*/* FORMAT THE QEL. FLAGS ARE ANALYZED AND APPROPRIATE DIAGNOSTICS   */
*/* ARE ISSUED                                                       */
*/*------------------------------------------------------------------*/
*DO;                                                            03S0443
*  INCOMPLT = OFF;                /* INIT TO FULL QEL FORMAT         */
         NI    INCOMPLT,B'11111101'                             03S0444
*  HDRQEL = QELMSG;               /* QEL LABEL                       */
*                                                               03S0445
         MVC   HDRQEL(3,BUFFRPTR),QELMSG                        03S0445
*   DO;                                                         03S0446
*     UNPK(ADDRQEL,THISQELH);                                   03S0447
         UNPK  ADDRQEL(7,BUFFRPTR),THISQELH(4)                  03S0447
*     TR(ADDRQEL,EBCTABL);                                      03S0448
         L     @14,EBCPTR                                       03S0448
         TR    ADDRQEL(7,BUFFRPTR),EBCTABL(@14)                 03S0448
*     ADDRQEL(LENGTH(ADDRQEL)) = ' ';                           03S0449
         MVI   ADDRQEL+6(BUFFRPTR),C' '                         03S0449
*   END;                                                        03S0450
*  IF COPYSTAT=COPYLGT THEN                                     03S0451
         CR    COPYSTAT,COPYLGT                                 03S0451
         BNE   @RF00451                                         03S0451
*    DO;                                                        03S0452
*      QELASIDL = ASID;           /* ASID LABEL                      */
*                                                               03S0453
         MVC   QELASIDL(4,BUFFRPTR),ASID                        03S0453
*      DO;                                                      03S0454
*        UNPK(QASIDFLD,QASID);                                  03S0455
         L     @08,INQELPTR                                     03S0455
         UNPK  QASIDFLD(5,BUFFRPTR),QASID(3,@08)                03S0455
*        TR(QASIDFLD,EBCTABL);                                  03S0456
         TR    QASIDFLD(5,BUFFRPTR),EBCTABL(@14)                03S0456
*        QASIDFLD(LENGTH(QASIDFLD)) = ' ';                      03S0457
         MVI   QASIDFLD+4(BUFFRPTR),C' '                        03S0457
*      END;                                                     03S0458
*      IF QELXLIST=ON THEN                                      03S0459
         TM    QELXLIST(@08),B'10000000'                        03S0459
         BNO   @RF00459                                         03S0459
*        LISTLBL = LIST;          /* FIELD CONTAINS ADDR OF LIST QEL */
         MVC   LISTLBL(4,BUFFRPTR),LIST                         03S0460
*      ELSE                                                     03S0461
*        TCBLBL = TCB;            /* FIELD CONTAINS ADDR OF TCB      */
*                                                               03S0461
         B     @RC00459                                         03S0461
@RF00459 MVC   TCBLBL(3,BUFFRPTR),TCB                           03S0461
*      DO;                                                      03S0462
@RC00459 DS    0H                                               03S0463
*        UNPK(LISTTCBA,QTCB);                                   03S0463
         L     @14,INQELPTR                                     03S0463
         UNPK  LISTTCBA(7,BUFFRPTR),QTCB(5,@14)                 03S0463
*        TR(LISTTCBA,EBCTABL);                                  03S0464
         L     @08,EBCPTR                                       03S0464
         TR    LISTTCBA(7,BUFFRPTR),EBCTABL(@08)                03S0464
*        LISTTCBA(LENGTH(LISTTCBA)) = ' ';                      03S0465
         MVI   LISTTCBA+6(BUFFRPTR),C' '                        03S0465
*      END;                                                     03S0466
*      IF QELMC = ON THEN         /* STEP MUST COMPLETE WAS SPECIFIED*/
         TM    QELMC(@14),B'01000000'                           03S0467
         BNO   @RF00467                                         03S0467
*        MUSTCOMP = MUSTMSG;                                    03S0468
         MVC   MUSTCOMP(18,BUFFRPTR),MUSTMSG                    03S0468
*      IF QELLIST=OFF THEN        /* THIS IS A SHORT QEL             */
@RF00467 L     @14,INQELPTR                                     03S0469
         TM    QELLIST(@14),B'00100000'                         03S0469
         BNZ   @RF00469                                         03S0469
*        IF QELRESV=ON THEN       /* THIS IS A RESERVE REQUEST       */
         TM    QELRESV(@14),B'00010000'                         03S0470
         BNO   @RF00470                                         03S0470
*          DO;                                                  03S0471
*            COPYLGT = WORDLGT;                                 03S0472
         LA    COPYLGT,4                                        03S0472
*            CALL COPY;           /* GET ONE MORE WORD -- ADDRESSES ARE
*                                    ALREADY SET UP                  */
         BAL   @14,COPY                                         03S0473
*            IF COPYSTAT=COPYLGT THEN /* UCB ADDR WAS READ           */
         CR    COPYSTAT,COPYLGT                                 03S0474
         BNE   @RF00474                                         03S0474
*              DO;                                              03S0475
*                UCBLBL = UCB;    /* UCB ADDR FOR SHARED DEV         */
*                                                               03S0476
         MVC   UCBLBL(3,BUFFRPTR),UCB                           03S0476
*                DO;                                            03S0477
*                  UNPK(UCBADDR,QUCB1);                         03S0478
         L     @14,INQELPTR                                     03S0478
         UNPK  UCBADDR(7,BUFFRPTR),QUCB1(5,@14)                 03S0478
*                  TR(UCBADDR,EBCTABL);                         03S0479
         L     @14,EBCPTR                                       03S0479
         TR    UCBADDR(7,BUFFRPTR),EBCTABL(@14)                 03S0479
*                  UCBADDR(LENGTH(UCBADDR)) = ' ';              03S0480
         MVI   UCBADDR+6(BUFFRPTR),C' '                         03S0480
*                END;                                           03S0481
*              END;                                             03S0482
*            ELSE                 /* NO UCB ADDRESS                  */
*              INCOMPLT = ON;                                   03S0483
         B     @RC00474                                         03S0483
@RF00474 OI    INCOMPLT,B'00000010'                             03S0483
*          END;                                                 03S0484
*        ELSE ;                                                 03S0485
@RF00470 DS    0H                                               03S0486
*      ELSE                       /* LONG QEL                        */
*          DO;                                                  03S0486
         B     @RC00469                                         03S0486
@RF00469 DS    0H                                               03S0487
*            IF QELRESV=ON THEN                                 03S0487
         L     @14,INQELPTR                                     03S0487
         TM    QELRESV(@14),B'00010000'                         03S0487
         BNO   @RF00487                                         03S0487
*              DO;                                              03S0488
*                COPYLGT = 3*WORDLGT;                           03S0489
         LA    COPYLGT,12                                       03S0489
*                CALL COPY;       /* GET THREE MORE WORDS            */
         BAL   @14,COPY                                         03S0490
*                IF COPYSTAT=COPYLGT THEN /* SUCCESSFUL READ         */
         CR    COPYSTAT,COPYLGT                                 03S0491
         BNE   @RF00491                                         03S0491
*                  DO;                                          03S0492
*                    UCBLBL = UCB; /* UCB ADDR FOR SHARED DEV        */
*                                                               03S0493
         MVC   UCBLBL(3,BUFFRPTR),UCB                           03S0493
*                    DO;                                        03S0494
*                      UNPK(UCBADDR,QUCB2);                     03S0495
         UNPK  UCBADDR(7,BUFFRPTR),QUCB2(5)                     03S0495
*                      TR(UCBADDR,EBCTABL);                     03S0496
         L     @14,EBCPTR                                       03S0496
         TR    UCBADDR(7,BUFFRPTR),EBCTABL(@14)                 03S0496
*                      UCBADDR(LENGTH(UCBADDR)) = ' ';          03S0497
         MVI   UCBADDR+6(BUFFRPTR),C' '                         03S0497
*                    END;                                       03S0498
*                    IF QELXECB=ON THEN /* FIELD CONTAINS ECB        */
         L     @14,INQELPTR                                     03S0499
         TM    QELXECB(@14),B'10000000'                         03S0499
         BNO   @RF00499                                         03S0499
*                      ECBLBL = ECB;                            03S0500
         MVC   ECBLBL(3,BUFFRPTR),ECB                           03S0500
*                    ELSE         /* FIELD CONTAINS SVRB             */
*                      SVRBLBL = SVRB;                          03S0501
*                                                               03S0501
         B     @RC00499                                         03S0501
@RF00499 MVC   SVRBLBL(4,BUFFRPTR),SVRB                         03S0501
*                    DO;                                        03S0502
@RC00499 DS    0H                                               03S0503
*                      UNPK(SVRBECBA,QSVRB);                    03S0503
         L     @14,INQELPTR                                     03S0503
         UNPK  SVRBECBA(7,BUFFRPTR),QSVRB(5,@14)                03S0503
*                      TR(SVRBECBA,EBCTABL);                    03S0504
         L     @14,EBCPTR                                       03S0504
         TR    SVRBECBA(7,BUFFRPTR),EBCTABL(@14)                03S0504
*                      SVRBECBA(LENGTH(SVRBECBA)) = ' ';        03S0505
         MVI   SVRBECBA+6(BUFFRPTR),C' '                        03S0505
*                    END;                                       03S0506
*                  END;                                         03S0507
*                ELSE             /* NO UCB ADDRESS                  */
*                  INCOMPLT = ON;                               03S0508
         B     @RC00491                                         03S0508
@RF00491 OI    INCOMPLT,B'00000010'                             03S0508
*              END;                                             03S0509
*            ELSE                 /* LIST QEL - NOT RESERVE          */
*              DO;                                              03S0510
         B     @RC00487                                         03S0510
@RF00487 DS    0H                                               03S0511
*                COPYLGT = 8;                                   03S0511
         LA    COPYLGT,8                                        03S0511
*                CALL COPY;       /* COPY TWO MORE WORDS             */
         BAL   @14,COPY                                         03S0512
*                IF COPYSTAT=COPYLGT THEN /* GOT BOTH WORDS          */
         CR    COPYSTAT,COPYLGT                                 03S0513
         BNE   @RF00513                                         03S0513
*                  DO;                                          03S0514
*                    IF QELXECB=ON THEN /* FIELD CONTAINS ECB        */
         L     @14,INQELPTR                                     03S0515
         TM    QELXECB(@14),B'10000000'                         03S0515
         BNO   @RF00515                                         03S0515
*                      ECBLBL = ECB;                            03S0516
         MVC   ECBLBL(3,BUFFRPTR),ECB                           03S0516
*                    ELSE         /* FIELD CONTAINS SVRB             */
*                      SVRBLBL = SVRB;                          03S0517
*                                                               03S0517
         B     @RC00515                                         03S0517
@RF00515 MVC   SVRBLBL(4,BUFFRPTR),SVRB                         03S0517
*                    DO;                                        03S0518
@RC00515 DS    0H                                               03S0519
*                      UNPK(SVRBECBA,QSVRB);                    03S0519
         L     @14,INQELPTR                                     03S0519
         UNPK  SVRBECBA(7,BUFFRPTR),QSVRB(5,@14)                03S0519
*                      TR(SVRBECBA,EBCTABL);                    03S0520
         L     @14,EBCPTR                                       03S0520
         TR    SVRBECBA(7,BUFFRPTR),EBCTABL(@14)                03S0520
*                      SVRBECBA(LENGTH(SVRBECBA)) = ' ';        03S0521
         MVI   SVRBECBA+6(BUFFRPTR),C' '                        03S0521
*                    END;                                       03S0522
*                  END;                                         03S0523
*                ELSE             /* DID NOT GET BOTH WORDS          */
*                  INCOMPLT = ON;                               03S0524
         B     @RC00513                                         03S0524
@RF00513 OI    INCOMPLT,B'00000010'                             03S0524
*              END;                                             03S0525
@RC00513 DS    0H                                               03S0526
*          END;                                                 03S0526
@RC00487 DS    0H                                               03S0527
*      IF QELRESV=YES THEN        /* RESERVE REQUEST                 */
@RC00469 L     @14,INQELPTR                                     03S0527
         TM    QELRESV(@14),B'00010000'                         03S0527
         BNO   @RF00527                                         03S0527
*        TYPEQEL = RESERVE;                                     03S0528
         MVI   TYPEQEL+7(BUFFRPTR),C' '                         03S0528
         MVI   TYPEQEL+8(BUFFRPTR),C' '                         03S0528
         MVC   TYPEQEL(7,BUFFRPTR),RESERVE                      03S0528
*      ELSE                                                     03S0529
*        IF QELSHARE=ON THEN      /* SHARED ENQUEUE                  */
         B     @RC00527                                         03S0529
@RF00527 L     @14,INQELPTR                                     03S0529
         TM    QELSHARE(@14),B'10000000'                        03S0529
         BNO   @RF00529                                         03S0529
*          TYPEQEL = SHARED;                                    03S0530
         MVI   TYPEQEL+6(BUFFRPTR),C' '                         03S0530
         MVC   TYPEQEL+7(2,BUFFRPTR),TYPEQEL+6(BUFFRPTR)        03S0530
         MVC   TYPEQEL(6,BUFFRPTR),SHARED                       03S0530
*        ELSE                                                   03S0531
*          TYPEQEL = EXCLUSIV;    /* EXCLUSIVE ENQUEUE               */
         B     @RC00529                                         03S0531
@RF00529 MVC   TYPEQEL(9,BUFFRPTR),EXCLUSIV                     03S0531
*    END;                                                       03S0532
*  ELSE                           /* ONLY PART OF QEL WAS READ       */
*    INCOMPLT = ON;                                             03S0533
         B     @RC00451                                         03S0533
@RF00451 OI    INCOMPLT,B'00000010'                             03S0533
*  CALL PRINTRTN;                 /* PRINT A QEL LINE                */
@RC00451 BAL   @14,PRINTRTN                                     03S0534
*  IF INCOMPLT=ON THEN            /* QEL WAS PARTIALLY FORMATTED     */
         TM    INCOMPLT,B'00000010'                             03S0535
         BNO   @RF00535                                         03S0535
*    DO;                                                        03S0536
*      STARTMSG = 14;                                           03S0537
         LA    STARTMSG,14                                      03S0537
*      CALL PARTPRNT;                                           03S0538
         BAL   @14,PARTPRNT                                     03S0538
*    END;                                                       03S0539
*END;                                                           03S0540
@RF00535 DS    0H                                               03S0541
*   IF THISQEL = STOPQEL THEN      /* STOP NOW IF AT END    @OZ15488 */
@RF00442 CLC   THISQEL(4),STOPQEL                               02S0541
         BNE   @RF00541                                         02S0541
*      QELCHAIN = DONE;            /* END LOOP              @OZ15488 */
         OI    QELCHAIN,B'00001000'                             02S0542
*   ELSE                                                /*  @OZ15488 */
*   DO;                                                 /*  @OZ15488 */
         B     @RC00541                                         02S0543
@RF00541 DS    0H                                               02S0544
*    IF QELBREAK=YES THEN         /* GOING UP THE CHAIN              */
         TM    QELBREAK,B'00000100'                             02S0544
         BNO   @RF00544                                         02S0544
*      IF QELPQEL^=0 THEN         /* BACKWARD POINTER OK             */
         L     @14,INQELPTR                                     02S0545
         L     @14,QELPQEL(,@14)                                02S0545
         LTR   @14,@14                                          02S0545
         BZ    @RF00545                                         02S0545
*        READAD = QELPQEL;        /* USE BACKWARD POINTER            */
         ST    @14,READAD                                       02S0546
*      ELSE                                                     02S0547
*        QELCHAIN = DONE;         /* TERMINATE                       */
         B     @RC00545                                         02S0547
@RF00545 OI    QELCHAIN,B'00001000'                             02S0547
*    ELSE                         /* STILL GOING FORWARD             */
*      IF QELNQEL^=0 THEN         /* NOT AT END OF CHAIN             */
         B     @RC00544                                         02S0548
@RF00544 L     @14,INQELPTR                                     02S0548
         L     @14,QELNQEL(,@14)                                02S0548
         LTR   @14,@14                                          02S0548
         BZ    @RF00548                                         02S0548
*        READAD = QELNQEL;        /* USE FORWARD POINTER             */
         ST    @14,READAD                                       02S0549
*      ELSE                       /* AT END OF CHAIN                 */
*        QELCHAIN = DONE;         /* TERMINATE                       */
         B     @RC00548                                         02S0550
@RF00548 OI    QELCHAIN,B'00001000'                             02S0550
*   END;                                                /*  @OZ15488 */
@RC00548 DS    0H                                               02S0551
@RC00544 DS    0H                                               02S0552
*  END;                                                         02S0552
@RC00541 AH    QELCOUNT,@CH00039                                02S0552
@DE00399 C     QELCOUNT,QELMAX                                  02S0552
         BNH   @DL00399                                         02S0552
@DC00399 DS    0H                                               02S0553
*  IF QELCOUNT>QELMAX & QELCHAIN=NOTDONE THEN                   02S0553
         C     QELCOUNT,QELMAX                                  02S0553
         BNH   @RF00553                                         02S0553
         TM    QELCHAIN,B'00001000'                             02S0553
         BNZ   @RF00553                                         02S0553
*/*------------------------------------------------------------------*/
*/* INDICATE THAT A LOOP CONDITION WAS ASSUMED IN THE QEL CHAIN      */
*/*------------------------------------------------------------------*/
*DO;                                                            03S0554
*  CALL PRINTRTN;                                               03S0555
         BAL   @14,PRINTRTN                                     03S0555
*  INVALID = INVALMSG;                                          03S0556
         MVC   INVALID(7,BUFFRPTR),INVALMSG                     03S0556
*  INVALQEL = QELMSG;                                           03S0557
         MVC   INVALQEL(3,BUFFRPTR),QELMSG                      03S0557
*  ASSUMEQL = ASSUMED;                                          03S0558
         MVC   ASSUMEQL(13,BUFFRPTR),ASSUMED                    03S0558
*  CALL PRINTRTN;                                               03S0559
         BAL   @14,PRINTRTN                                     03S0559
*END;                                                           03S0560
*END QELFAMLY;                                                  02S0561
@EL00005 DS    0H                                               02S0561
@EF00005 DS    0H                                               02S0561
@ER00005 LM    @14,@08,@SA00005                                 02S0561
         LM    @10,@12,@SA00005+44                              02S0561
         BR    @14                                              02S0561
*/*------------------------------------------------------------------*/
*/* MAKE AN INCORE COPY OF A DUMP DATA                               */
*/*------------------------------------------------------------------*/
*COPY: PROC;                                                    02S0562
COPY     STM   @14,@01,@SA00006                                 02S0562
         STM   @03,@04,@SA00006+16                              02S0562
         STM   @06,@12,@SA00006+24                              02S0562
*  COPYSTAT = COPYLGT;            /* INIT STATUS TO FULL COPY        */
         LR    COPYSTAT,COPYLGT                                 02S0563
*  DO COPYIT=1 TO COPYLGT BY WORDLGT WHILE COPYSTAT=COPYLGT;    02S0564
         LA    COPYIT,1                                         02S0564
         B     @DE00564                                         02S0564
@DL00564 CR    COPYSTAT,COPYLGT                                 02S0564
         BNE   @DC00564                                         02S0564
*    R0READ = READAD;             /* ADDRESS OF WORD TO BE READ      */
         L     R0READ,READAD                                    02S0565
*    R1 = ABDPLPTR;               /* ADDR OF PARM LIST               */
         L     @14,ABDPLPTR                                     02S0566
         LR    R1,@14                                           02S0566
*    CALL MEMACRTN;               /* GET ONE WORD OF DATA            */
         L     @15,ADPLMEMA(,@14)                               02S0567
         BALR  @14,@15                                          02S0567
*    IF R15=0 THEN                /* READ WAS GOOD                   */
         LTR   R15,R15                                          02S0568
         BNZ   @RF00568                                         02S0568
*      DO;                                                      02S0569
*        COPYWORD = DATAWORD;     /* COPY DATA                       */
         LR    @14,R0                                           02S0570
         MVC   COPYWORD(4,TOPTR),DATAWORD(@14)                  02S0570
*        READAD = READAD + WORDLGT; /* POINT TO NEXT WORD            */
         LA    @14,4                                            02S0571
         L     @10,READAD                                       02S0571
         ALR   @10,@14                                          02S0571
         ST    @10,READAD                                       02S0571
*        TOPTR = TOPTR + WORDLGT; /* POINT TO NEXT AVAILABLE SLOT    */
         ALR   TOPTR,@14                                        02S0572
*      END;                                                     02S0573
*    ELSE                         /* READ FAILED                     */
*      COPYSTAT = COPYIT-1;       /* NUMBER OF BYTES COPIED          */
         B     @RC00568                                         02S0574
@RF00568 LR    COPYSTAT,COPYIT                                  02S0574
         BCTR  COPYSTAT,0                                       02S0574
*  END;                                                         02S0575
@RC00568 AH    COPYIT,@CH00076                                  02S0575
@DE00564 CR    COPYIT,COPYLGT                                   02S0575
         BNH   @DL00564                                         02S0575
@DC00564 DS    0H                                               02S0576
*END COPY;                                                      02S0576
@EL00006 DS    0H                                               02S0576
@EF00006 DS    0H                                               02S0576
@ER00006 LM    @14,@01,@SA00006                                 02S0576
         LM    @03,@04,@SA00006+16                              02S0576
         LM    @06,@12,@SA00006+24                              02S0576
         BR    @14                                              02S0576
*/*------------------------------------------------------------------*/
*/* PRINT AN OUTPUT COMMENT STATING THAT ONLY PART OF THE BLOCK      */
*/* WAS FORMATTED.                                                   */
*/*------------------------------------------------------------------*/
*PARTPRNT: PROCEDURE;                                           02S0577
PARTPRNT STM   @14,@08,@SA00007                                 02S0577
         STM   @10,@12,@SA00007+44                              02S0577
*  MESSAGE(STARTMSG:STARTMSG+LENGTH(PARTMSG)-1) = PARTMSG;      02S0578
         LR    @14,BUFFRPTR                                     02S0578
         ALR   @14,STARTMSG                                     02S0578
         BCTR  @14,0                                            02S0578
         MVC   MESSAGE(55,@14),PARTMSG                          02S0578
*  CALL PRINTRTN;                                               02S0579
         BAL   @14,PRINTRTN                                     02S0579
*END PARTPRNT;                                                  02S0580
@EL00007 DS    0H                                               02S0580
@EF00007 DS    0H                                               02S0580
@ER00007 LM    @14,@08,@SA00007                                 02S0580
         LM    @10,@12,@SA00007+44                              02S0580
         BR    @14                                              02S0580
@PB00007 DS    0H                                               02S0580
*END AMDPRQCB                                                   01S0581
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSUT5  (PROLOG  )                                        *
*/*%INCLUDE SYSUT5  (QCBFL1  )                                        *
*/*%INCLUDE SYSUT5  (DECLARES)                                        *
*/*%INCLUDE SYSLIB  (IHAABDPL)                                        *
*/*%INCLUDE SYSLIB  (CVT     )                                        *
*/*%INCLUDE SYSLIB  (IHAQCB  )                                        *
*/*%INCLUDE SYSLIB  (IHAQEL  )                                        *
*/*%INCLUDE SYSUT5  (INITL   )                                        *
*/*%INCLUDE SYSUT5  (SAVECHAN)                                        *
*/*%INCLUDE SYSUT5  (NOCHAIN )                                        *
*/*%INCLUDE SYSUT5  (NOCVTQCB)                                        *
*/*%INCLUDE SYSUT5  (NOCVT   )                                        *
*/*%INCLUDE SYSUT5  (CLEANUP )                                        *
*/*%INCLUDE SYSUT5  (PRINTRTN)                                        *
*/*%INCLUDE SYSUT5  (MAJFAMLY)                                        *
*/*%INCLUDE SYSUT5  (MAJTERM )                                        *
*/*%INCLUDE SYSUT5  (MAJRECVR)                                        *
*/*%INCLUDE SYSUT5  (MAJFORM )                                        *
*/*%INCLUDE SYSUT5  (MAJLOOP )                                        *
*/*%INCLUDE SYSUT5  (MINFAMLY)                                        *
*/*%INCLUDE SYSUT5  (MINTERM )                                        *
*/*%INCLUDE SYSUT5  (MINRECVR)                                        *
*/*%INCLUDE SYSUT5  (MINFORM )                                        *
*/*%INCLUDE SYSUT5  (COPYNAME)                                        *
*/*%INCLUDE SYSUT5  (MINNMFRM)                                        *
*/*%INCLUDE SYSUT5  (MINLOOP )                                        *
*/*%INCLUDE SYSUT5  (QELFAMLY)                                        *
*/*%INCLUDE SYSUT5  (QELTERM )                                        *
*/*%INCLUDE SYSUT5  (QELRECVR)                                        *
*/*%INCLUDE SYSUT5  (QELFORM )                                        *
*/*%INCLUDE SYSUT5  (QELLOOP )                                        *
*/*%INCLUDE SYSUT5  (COPY    )                                        *
*/*%INCLUDE SYSUT5  (PARTPRNT)                                        *
*;                                                              01S0581
@DATA    DS    0H
@CH00039 DC    H'1'
@CH00095 DC    H'2'
@CH00076 DC    H'4'
@CH00082 DC    H'8'
@CH00856 DC    H'20'
@CH01067 DC    H'40'
@CH01121 DC    H'240'
@SM01179 MVC   EBCFLD2(0,BUFFRPTR),MINORNM-1(@08)
@SM01181 MVC   NAMEMIN(0,BUFFRPTR),MINORNM-1(@08)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00002 DS    14F
@SA00003 DS    15F
@SA00006 DS    13F
@SA00007 DS    14F
@SA00004 DS    14F
@SA00005 DS    14F
AMDPRQCB CSECT
         DS    0F
@DATD    DSECT
         DS    0D
ABDPLPTR DS    A
INMAJPTR DS    A
INQELPTR DS    A
READAD   DS    A
MINCOUNT DS    F
Z        DS    F
EBCPTR   DS    A
THISMAJ  DS    AL4
         ORG   THISMAJ
@NM00065 DS    CL1
THISMAJH DS    CL4
         ORG   THISMAJ+5
         DS    CL3
THISMIN  DS    AL4
         ORG   THISMIN
@NM00066 DS    CL1
THISMINH DS    CL4
         ORG   THISMIN+5
         DS    CL3
THISQEL  DS    AL4
         ORG   THISQEL
@NM00067 DS    CL1
THISQELH DS    CL4
         ORG   THISQEL+5
         DS    CL3
FREESAVE DS    F
WORKWORD DS    F
SWITCHES DS    CL1
         ORG   SWITCHES
MAJCHAIN DS    BL1
MAJBREAK EQU   SWITCHES+0
MINCHAIN EQU   SWITCHES+0
MINBREAK EQU   SWITCHES+0
QELCHAIN EQU   SWITCHES+0
QELBREAK EQU   SWITCHES+0
INCOMPLT EQU   SWITCHES+0
@NM00033 EQU   SWITCHES+0
         ORG   SWITCHES+1
         DS    CL3
@NM00034 DS    CL20
         ORG   @NM00034
QCBHEAD  DS    AL4
QCBTAIL  DS    AL4
STOPMIN  DS    AL4
STOPMAJ  DS    AL4
STOPQEL  DS    AL4
         ORG   @NM00034+20
INMAJ    DS    CL24
INMIN    DS    CL246
         ORG   INMIN
@NM00035 DS    CL21
@NM00036 DS    CL225
         ORG   INMIN+246
INQEL    DS    CL28
         ORG   INQEL
@NM00037 DS    CL24
INQEL1   DS    CL4
         ORG   INQEL+28
AMDPRQCB CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
MAJMAX   DC    F'200'
MINMAX   DC    F'200'
QELMAX   DC    F'200'
NOCVTMSG DC    CL20'UNABLE TO ACCESS CVT'
TERMTEXT DC    CL19'QCBTRACE TERMINATED'
INVALMSG DC    CL7'INVALID'
MAJORQCB DC    CL9'MAJOR QCB'
ASSUMED  DC    CL13'CHAIN ASSUMED'
QELMSG   DC    CL3'QEL'
ERRFND   DC    CL13'ERROR FINDING'
FRSTBRK2 DC    CL24'BACKWARD TRACING FOLLOWS'
DASH     DC    CL2'--'
NOQCBMSG DC    CL13'NO MAJOR QCBS'
CVTQCBMG DC    CL37'UNABLE TO OBTAIN POINTER TO FIRST QCB'
ZEROLGTM DC    CL25'MINOR NAME LENGTH IS ZERO'
MINORQCB DC    CL9'MINOR QCB'
TITLE    DC    CL68'* * * *    Q U E U E  C O N T R O L  B L O C K  P RC
                I N T    * * * *'
PARTMSG  DC    CL55'ONLY A PORTION OF PRECEEDING CONTROL BLOCK WAS OBTAC
               INED'
NONPRNT  DS    CL256
         ORG   NONPRNT
@NM00038 DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'00FFFFFFFFFFFFFFFFFFFF00FF00FFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFF000000FFFF'
         DC    X'0000FFFFFFFFFFFFFFFFFF00FFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFF00000000FF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FF000000000000000000FFFFFFFFFFFF'
         DC    X'FF000000000000000000FFFFFFFFFFFF'
         DC    X'FFFF0000000000000000FFFFFFFFFFFF'
         DC    X'00000000000000000000FFFFFFFFFFFF'
         ORG   NONPRNT+256
EBCDIC   DC    CL16'0123456789ABCDEF'
PRNTTBL  DS    CL256
         ORG   PRNTTBL
@NM00039 DC    CL16'................'
         DC    CL16'................'
         DC    CL16'................'
         DC    CL16'................'
         DC    CL16' ...............'
         DC    CL16'................'
         DC    CL16'................'
         DC    CL16'................'
         DC    CL16'................'
         DC    CL16'................'
         DC    CL16'................'
         DC    CL16'................'
         DC    CL16'.ABCDEFGHI......'
         DC    CL16'.JKLMNOPQR......'
         DC    CL16'..STUVWXYZ......'
         DC    CL16'0123456789......'
         ORG   PRNTTBL+256
MAJOR    DC    CL5'MAJOR'
NAME     DC    CL4'NAME'
MINOR    DC    CL5'MINOR'
STEP     DC    CL4'STEP'
SYSTEM   DC    CL6'SYSTEM'
SYSTEMS  DC    CL7'SYSTEMS'
ASID     DC    CL4'ASID'
TCB      DC    CL3'TCB'
LIST     DC    CL4'LIST'
EXCLUSIV DC    CL9'EXCLUSIVE'
SHARED   DC    CL6'SHARED'
RESERVE  DC    CL7'RESERVE'
ECB      DC    CL3'ECB'
SVRB     DC    CL4'SVRB'
UCB      DC    CL3'UCB'
MUSTMSG  DC    CL18'STEP MUST COMPLETE'
ERROR    DC    CL5'ERROR'
AMDPRQCB CSECT
MINNMTRT       TRT  0(,R6),NONPRNT
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
AMDPRQCB CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
Y        EQU   @02
COPYIT   EQU   @06
QELCOUNT EQU   @06
MAJCOUNT EQU   @06
LINEEND  EQU   @03
COPYLGT  EQU   @03
FROMPTR  EQU   @06
TOPTR    EQU   @05
STARTMSG EQU   @02
RETCODE  EQU   @06
COPYSTAT EQU   @02
BUFFRPTR EQU   @09
INMINPTR EQU   @10
R13      EQU   @13
DATAREG  EQU   @11
R0READ   EQU   @00
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R5       EQU   @05
R6       EQU   @06
R15      EQU   @15
ABDPL    EQU   0
ADPLSBPL EQU   ABDPL+6
ADPLFLAG EQU   ABDPL+7
ADPLBUF  EQU   ABDPL+8
ADPLPRNT EQU   ABDPL+12
ADPLCVT  EQU   ABDPL+16
ADPLMEMA EQU   ABDPL+20
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
MAJ      EQU   0
MAJNMAJ  EQU   MAJ
MAJPMAJ  EQU   MAJ+4
MAJFMIN  EQU   MAJ+8
MAJLMIN  EQU   MAJ+12
MAJNAME  EQU   MAJ+16
MIN      EQU   0
MINNMIN  EQU   MIN
MINPMIN  EQU   MIN+4
MINFQEL  EQU   MIN+8
MINLQEL  EQU   MIN+12
MINNAMEL EQU   MIN+16
MINFLGS  EQU   MIN+17
MINSYS   EQU   MINFLGS
MINSYSS  EQU   MINFLGS
MINSTEP  EQU   MINFLGS
MINASID  EQU   MIN+18
MINNAME  EQU   MIN+20
QEL      EQU   0
QELNQEL  EQU   QEL
QELPQEL  EQU   QEL+4
QELTCB   EQU   QEL+8
QELLQEL  EQU   QELTCB
QELXLIST EQU   QELLQEL
QELQFLGS EQU   QEL+12
QELSHARE EQU   QELQFLGS
QELMC    EQU   QELQFLGS
QELLIST  EQU   QELQFLGS
QELRESV  EQU   QELQFLGS
QELLFLGS EQU   QEL+13
QELASID  EQU   QEL+14
QELSVRB  EQU   QEL+16
QELECB   EQU   QELSVRB
QELXECB  EQU   QELECB
MESSAGE  EQU   0
PRINTR   EQU   0
MEMACRTN EQU   0
COPYWORD EQU   0
DATAWORD EQU   0
TO       EQU   0
FROM     EQU   0
EBCTABL  EQU   0
MAJOROUT EQU   0
HDRMAJ   EQU   MAJOROUT
ADDRMAJ  EQU   MAJOROUT+6
NAMMAJLB EQU   MAJOROUT+16
@NM00043 EQU   MAJOROUT+21
NAMEMAJ  EQU   @NM00043
NAMEMAJ1 EQU   NAMEMAJ
NAMEMAJ2 EQU   @NM00043+8
MASTAR1  EQU   MAJOROUT+39
EBCFLD1  EQU   MAJOROUT+40
MASTAR2  EQU   MAJOROUT+48
MINOROUT EQU   0
HDRMIN   EQU   MINOROUT+6
ADDRMIN  EQU   MINOROUT+12
SCOPE    EQU   MINOROUT+20
ASIDLBL  EQU   MINOROUT+29
ASIDFLD  EQU   MINOROUT+34
NAMMINLB EQU   MINOROUT+40
NAMEMIN  EQU   MINOROUT+45
MISTAR1  EQU   MINOROUT+87
EBCFLD2  EQU   MINOROUT+88
MISTAR2  EQU   MINOROUT+108
QELOUT   EQU   0
HDRQEL   EQU   QELOUT+12
ADDRQEL  EQU   QELOUT+16
LISTLBL  EQU   QELOUT+24
TCBLBL   EQU   LISTLBL
LISTTCBA EQU   QELOUT+29
TYPEQEL  EQU   QELOUT+37
QELASIDL EQU   QELOUT+48
QASIDFLD EQU   QELOUT+53
SVRBLBL  EQU   QELOUT+59
ECBLBL   EQU   SVRBLBL
SVRBECBA EQU   QELOUT+64
UCBLBL   EQU   QELOUT+72
UCBADDR  EQU   QELOUT+76
MUSTCOMP EQU   QELOUT+84
HISSAVE  EQU   0
CVTPTR   EQU   ADPLCVT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTFQCB  EQU   CVTS01+292
CVTLQCB  EQU   CVTS01+296
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
@NM00017 EQU   MESSAGE
NOCVT    EQU   @NM00017
@NM00020 EQU   MESSAGE
INVALID  EQU   @NM00020
INVALQCB EQU   @NM00020+8
ASSUME   EQU   @NM00020+18
@NM00023 EQU   INVALQCB
INVALQEL EQU   @NM00023
ASSUMEQL EQU   @NM00023+4
@NM00025 EQU   MESSAGE
QCBCHN1  EQU   @NM00025
QCBCHN2  EQU   @NM00025+14
QCBCHN3  EQU   @NM00025+24
QCBCHND  EQU   @NM00025+31
QCBCHN4  EQU   @NM00025+34
QCBCHN5  EQU   QCBCHN4
@NM00029 EQU   MESSAGE
QELCHN1  EQU   @NM00029
QELCHN2  EQU   @NM00029+14
QELCHN3  EQU   @NM00029+18
QELCHND  EQU   @NM00029+25
QELCHN5  EQU   @NM00029+28
MASID    EQU   MINASID
QSVRB    EQU   QELSVRB
QUCB1    EQU   QELSVRB
QUCB2    EQU   INQEL1
QTCB     EQU   QELTCB
QASID    EQU   QELASID
MINORNM  EQU   MINNAME
MAJORNM  EQU   MAJNAME
@NM00068 EQU   MAJORNM
MAJORNM1 EQU   @NM00068
MAJORNM2 EQU   MAJORNM+4
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00032 EQU   @NM00029+27
@NM00031 EQU   @NM00029+17
@NM00030 EQU   @NM00029+13
@NM00028 EQU   @NM00025+33
@NM00027 EQU   @NM00025+23
@NM00026 EQU   @NM00025+13
@NM00024 EQU   @NM00023+3
@NM00022 EQU   @NM00020+17
@NM00021 EQU   @NM00020+7
CVTTERM  EQU   @NM00017+24
@NM00019 EQU   @NM00017+23
NOCVTD   EQU   @NM00017+21
@NM00018 EQU   @NM00017+20
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00064 EQU   QELOUT+83
@NM00063 EQU   QELOUT+75
@NM00062 EQU   QELOUT+71
@NM00061 EQU   QELOUT+63
@NM00060 EQU   QELOUT+58
@NM00059 EQU   QELOUT+52
@NM00058 EQU   QELOUT+46
@NM00057 EQU   QELOUT+36
@NM00056 EQU   QELOUT+28
@NM00055 EQU   QELOUT+23
@NM00054 EQU   QELOUT+15
@NM00053 EQU   QELOUT
@NM00052 EQU   MINOROUT+85
@NM00051 EQU   MINOROUT+44
@NM00050 EQU   MINOROUT+39
@NM00049 EQU   MINOROUT+33
@NM00048 EQU   MINOROUT+27
@NM00047 EQU   MINOROUT+19
@NM00046 EQU   MINOROUT+11
@NM00045 EQU   MINOROUT
@NM00044 EQU   MAJOROUT+38
@NM00042 EQU   MAJOROUT+20
@NM00041 EQU   MAJOROUT+13
@NM00040 EQU   MAJOROUT+5
QELWCNT  EQU   QEL+22
QELLCNT  EQU   QEL+20
@NM00016 EQU   QELLFLGS
@NM00015 EQU   QELLFLGS
@NM00014 EQU   QELLFLGS
@NM00013 EQU   QELLFLGS
@NM00012 EQU   QELLFLGS
@NM00011 EQU   QELLFLGS
QELECBF  EQU   QELLFLGS
QELPOST  EQU   QELLFLGS
@NM00010 EQU   QELQFLGS
@NM00009 EQU   QELQFLGS
@NM00008 EQU   QELQFLGS
QELAUTH  EQU   QELQFLGS
@NM00007 EQU   MINFLGS
@NM00006 EQU   MINFLGS
@NM00005 EQU   MINFLGS
@NM00004 EQU   MINFLGS
MINNOENQ EQU   MINFLGS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00003 EQU   CVTFIX+248
@NM00002 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
ADPLEXT  EQU   ABDPL+52
ADPLFMT2 EQU   ABDPL+48
ADPLFMT1 EQU   ABDPL+44
ADPLCOM4 EQU   ABDPL+40
ADPLCOM3 EQU   ABDPL+36
ADPLCOM2 EQU   ABDPL+32
ADPLCOM1 EQU   ABDPL+28
ADPLFRMT EQU   ABDPL+24
@NM00001 EQU   ADPLFLAG
ADPLSYTM EQU   ADPLFLAG
ADPLSNPR EQU   ADPLFLAG
ADPLASID EQU   ABDPL+4
ADPLTCB  EQU   ABDPL
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00061 EQU   @RC00044
@RC00219 EQU   @RC00218
@RF00227 EQU   @EL00003
@RC00357 EQU   @RC00294
@RC00316 EQU   @RC00294
@RC00377 EQU   @RC00376
@RF00385 EQU   @EL00004
@RC00470 EQU   @RC00469
@RC00491 EQU   @RC00487
@RC00529 EQU   @RC00451
@RC00527 EQU   @RC00451
@RC00545 EQU   @RC00544
@RF00553 EQU   @EL00005
@PB00006 EQU   @PB00007
@RC00066 EQU   @RC00061
@RC00324 EQU   @RC00316
@RC00474 EQU   @RC00470
@PB00005 EQU   @PB00006
@RC00069 EQU   @RC00066
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   AMDPRQCB,(C'PLS2008',0701,78235)
