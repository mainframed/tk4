         TITLE 'AMDPRPMS - PRINT STORAGE EXECUTOR                      *
                        '
AMDPRPMS CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'AMDPRPMS  76.133'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @11,0                                            01S0001
@PSTART  LA    @10,4095(,@11)                                   01S0001
         USING @PSTART,@11                                      01S0001
         USING @PSTART+4095,@10                                 01S0001
         ST    @13,@SA00001+4                                   01S0001
         LA    @14,@SA00001                                     01S0001
         ST    @14,8(,@13)                                      01S0001
         LR    @13,@14                                          01S0001
*                                                               01S0045
*/*------------------------------------------------------------------*/
*/* OVERALL LOGIC FOR PRINT STORAGE AND PRINT REAL                   */
*/*------------------------------------------------------------------*/
*                                                               01S0045
*                                                               02S0045
*/*------------------------------------------------------------------*/
*/* ESTABLISH ERROR ROUTINE ADDRESSES AND INIT SWITCHES              */
*/*------------------------------------------------------------------*/
*                                                               02S0045
*   DO;                                                         02S0045
*     GEN(USING AMDPRPMX,R9);                                   02S0046
         USING AMDPRPMX,R9
*     STOPSAVE=STOPEXIT;            /* SAVE PREVIOUS STOP ERROR RTN  */
         MVC   STOPSAVE(4),STOPEXIT(COMBASE)                    02S0047
*     STOPEXIT=ADDR(PMSSTOP);       /* ADDR OF PMS STOP ERROR RTN    */
         LA    @00,PMSSTOP                                      02S0048
         ST    @00,STOPEXIT(,COMBASE)                           02S0048
*     RESPECIFY                                                 02S0049
*       R13 RESTRICTED;                                         02S0049
*     PMSSAVE=R13;                  /* SAVE AREA ADDR FOR ASYNC RTNS */
         ST    R13,PMSSAVE                                      02S0050
*     RESPECIFY                                                 02S0051
*       R13 UNRESTRICTED;                                       02S0051
*     STATUS=GOOD;                  /* INIT SYNTAX ERROR SWITCH      */
         MVI   STATUS,X'00'                                     02S0052
*     GPRSFND=OFF;                  /* INIT TO NO REGISTERS          */
         NI    GPRSFND(COMBASE),B'11111101'                     02S0053
*     BLNK(123)='18'X;              /* ADD COLON TO TRT TABLE        */
         MVI   BLNK+122(COMBASE),X'18'                          02S0054
*     A1NUC=OFF;                    /* INITIALIZE TO OFF OZ09684     */
         NI    A1NUC,B'01111111'                                02S0055
*     NUMASID=0;                    /* INITIALIZE ALL TABLES         */
         SLR   @15,@15                                          02S0056
         ST    @15,NUMASID                                      02S0056
*     NUMPAIRS=0;                                               02S0057
         ST    @15,NUMPAIRS                                     02S0057
*     A1COM=OFF;                    /* INITIALIZE TO OFF OZ09684     */
         NI    A1COM,B'01111111'                                02S0058
*     NUMMID=0;                                                 02S0059
         ST    @15,NUMMID                                       02S0059
*     NUMLOW=0;                                                 02S0060
         ST    @15,NUMLOW                                       02S0060
*     NUMHI=0;                                                  02S0061
         ST    @15,NUMHI                                        02S0061
*     PCBPL=PCBPL&&PCBPL;           /* ZERO OUT PCB PARM LIST        */
         XC    PCBPL(12),PCBPL                                  02S0062
*   END;                                                        02S0063
*   IF FLSHMODE=ON                  /* ONLY DO SYNTAX SCAN           */
*       ×(PRNTRL=ON&REALMAP=0)      /* CANT DO PRINT REAL            */
*       ×(REALMAP=0&ASIDNDX=0) THEN /* NO INPUT DUMP                 */
         TM    FLSHMODE(COMBASE),B'10000000'                    01S0064
         BO    @RT00064                                         01S0064
         TM    PRNTRL(COMBASE),B'00001000'                      01S0064
         BNO   @GL00001                                         01S0064
         C     @15,REALMAP(,COMBASE)                            01S0064
         BE    @RT00064                                         01S0064
@GL00001 SLR   @15,@15                                          01S0064
         C     @15,REALMAP(,COMBASE)                            01S0064
         BNE   @RF00064                                         01S0064
         C     @15,ASIDNDX(,COMBASE)                            01S0064
         BNE   @RF00064                                         01S0064
@RT00064 DS    0H                                               01S0065
*     ENVIRON=ON;                   /* INDICATE THAT ONLY A SYNTAX
*                                      CHECK SHOULD BE MADE          */
         OI    ENVIRON,B'10000000'                              01S0065
*   ELSE                                                        01S0066
*     ENVIRON=OFF;                                              01S0066
         B     @RC00064                                         01S0066
@RF00064 NI    ENVIRON,B'01111111'                              01S0066
*   IF PRNTRL=OFF THEN              /* PRINT STORAGE WAS VERB        */
@RC00064 TM    PRNTRL(COMBASE),B'00001000'                      01S0067
         BNZ   @RF00067                                         01S0067
*     DO;                                                       01S0068
*       DEFLTMAX=VIRTMAX;                                       01S0069
         L     DEFLTMAX,@CF00465                                01S0069
*                                                               02S0070
*/*------------------------------------------------------------------*/
*/* THE BEGINNING AND ENDING ADDRESSES FOR THE PRIVATE AREA ARE      */
*/* OBTAINED FROM THE COMMON                                         */
*/*------------------------------------------------------------------*/
*                                                               02S0070
*       DO;                                                     02S0070
*         HIBOUND=CSADDR;                                       02S0071
         L     HIBOUND,CSADDR(,COMBASE)                         02S0071
*         LOWBOUND=NUCTOP;                                      02S0072
         L     LOWBOUND,NUCTOP(,COMBASE)                        02S0072
*       END;                                                    02S0073
*       IF DELIMCD=BLANK            /* ONLY VERB -- NO OPERANDS      */
*           ×DELIMCD=COMA THEN      /* NO OPERANDS ON THIS VERB      */
         L     @02,DELIMCD(,COMBASE)                            01S0074
         CH    @02,@CH00240                                     01S0074
         BE    @RT00074                                         01S0074
         CH    @02,@CH00156                                     01S0074
         BNE   @RF00074                                         01S0074
@RT00074 DS    0H                                               01S0075
*         DO;                                                   01S0075
*                                                               02S0076
*/*------------------------------------------------------------------*/
*/* USE THE STORAGE ASSOCIATED WITH THE CURRENT ASID IN THE DUMP     */
*/*------------------------------------------------------------------*/
*                                                               02S0076
*           DO;                                                 02S0076
*             NUMASID=1;                                        02S0077
         LA    @02,1                                            02S0077
         ST    @02,NUMASID                                      02S0077
*             STASID(1)=QASID;      /* USE CURRENT ASID              */
         MVC   STASID(2),QASID(COMBASE)                         02S0078
*             ENDASID(1)=QASID;                                 02S0079
         MVC   ENDASID(2),QASID(COMBASE)                        02S0079
*           END;                                                02S0080
*                                                               02S0081
*/*------------------------------------------------------------------*/
*/* INDICATE THAT ALL OF STORAGE IS TO PRINTED                       */
*/*------------------------------------------------------------------*/
*                                                               02S0081
*           DO;                                                 02S0081
*             NUMPAIRS=1;           /* INDICATE ONLY ONE ENTRY       */
         ST    @02,NUMPAIRS                                     02S0082
*             LOWAD(1)=0;           /* START AT THE BEGINNING        */
         SLR   @02,@02                                          02S0083
         ST    @02,LOWAD                                        02S0083
*             HIAD(1)=DEFLTMAX;     /* AND GO TO THE END             */
         ST    DEFLTMAX,HIAD                                    02S0084
*             GPRSFND=ON;           /* REQUEST REGISTERS             */
         OI    GPRSFND(COMBASE),B'00000010'                     02S0085
*           END;                                                02S0086
*         END;                                                  01S0087
*       ELSE                        /* THERE ARE STORAGE SUBFIELDS   */
*         IF DELIMCD=EQUAL THEN     /* ONLY VALID DELIMITER AT THIS
*                                      PNT                           */
         B     @RC00074                                         01S0088
@RF00074 CLC   DELIMCD(4,COMBASE),@CF00043                      01S0088
         BNE   @RF00088                                         01S0088
*           DO;                                                 01S0089
*             CALL DELIMSCN;        /* GET NEXT DELIMITER            */
         BAL   @14,DELIMSCN                                     01S0090
*             IF DELIMCD=LPAREN THEN/* ONLY VALID DELIM HERE         */
         CLC   DELIMCD(4,COMBASE),@CF00183                      01S0091
         BNE   @RF00091                                         01S0091
*               DO;                                             01S0092
*                 IF OPSIZE=4&OPERAND(1:4)='ASID' THEN/* GET ASIDS   */
         CH    OPSIZE,@CH00156                                  01S0093
         BNE   @RF00093                                         01S0093
         L     @04,KYWDBGN(,COMBASE)                            01S0093
         CLC   OPERAND(4,@04),@CC00460                          01S0093
         BNE   @RF00093                                         01S0093
*                                                               02S0094
*/*------------------------------------------------------------------*/
*/* SCAN OFF ALL OF THE ASIDS FROM THE INPUT AND VALIDITY CHECK THEM */
*/* IF THEY ARE OK THEN PUT THEM IN A TABLE.                         */
*/*------------------------------------------------------------------*/
*                                                               02S0094
*                   DO;                                         02S0094
*                     ASIDSCN=ON;                               02S0095
         OI    ASIDSCN,B'00100000'                              02S0095
*                     DO WHILE ASIDSCN=ON;/* GET ALL ASIDS           */
         B     @DE00096                                         02S0096
@DL00096 DS    0H                                               02S0097
*                       CALL DELIMSCN;/* GET NEXT DELIMITER          */
         BAL   @14,DELIMSCN                                     02S0097
*                       IF DELIMCD=COLON THEN/* ASID RANGE SPECIFIED */
         CLC   DELIMCD(4,COMBASE),@CF00222                      02S0098
         BNE   @RF00098                                         02S0098
*                         DO;                                   02S0099
*                           CALL ASIDCHK;/* CHECK ASID SYNTAX        */
         BAL   @14,ASIDCHK                                      02S0100
*                           IF STATUS=GOOD&/* NO ERROR FOUND YET AND
*                                      OZ09684                       */
*                               OPSIZE=5 THEN/* COLON FOLLOWS NONUC
*                                      OZ09684                       */
         CLI   STATUS,X'00'                                     02S0101
         BNE   @RF00101                                         02S0101
         CH    OPSIZE,@CH00154                                  02S0101
         BNE   @RF00101                                         02S0101
*                             STATUS=ASIDMISS;/* INDICATE ASID NOT
*                                      BEFORE COLON OZ09684          */
         MVI   STATUS,X'05'                                     02S0102
*                           ELSE    /* OZ09684                       */
*                             IF STATUS=GOOD THEN               02S0103
         B     @RC00101                                         02S0103
@RF00101 CLI   STATUS,X'00'                                     02S0103
         BNE   @RF00103                                         02S0103
*                               DO;                             02S0104
*                                 NUMASID=NUMASID+1;/* ADD AN ENTRY
*                                      TO ASID TABLE                 */
         LA    @04,1                                            02S0105
         AL    @04,NUMASID                                      02S0105
         ST    @04,NUMASID                                      02S0105
*                                 STASID(NUMASID)=THISASID;     02S0106
         SLA   @04,2                                            02S0106
         LA    @02,STASID-4(@04)                                02S0106
         MVC   0(2,@02),THISASID                                02S0106
*                                 CALL DELIMSCN;                02S0107
         BAL   @14,DELIMSCN                                     02S0107
*                                 IF DELIMCD=COMA/* MORE ASIDS TO
*                                      COME                          */
*                                     ×DELIMCD=RPAREN THEN/* END OF
*                                      ASIDS                         */
         L     @04,DELIMCD(,COMBASE)                            02S0108
         CH    @04,@CH00156                                     02S0108
         BE    @RT00108                                         02S0108
         CH    @04,@CH00213                                     02S0108
         BNE   @RF00108                                         02S0108
@RT00108 DS    0H                                               02S0109
*                                   DO;                         02S0109
*                                    CALL ASIDCHK;/* VALIDITY CHECK
*                                      ASID                          */
         BAL   @14,ASIDCHK                                      02S0110
*                                    IF OPSIZE=5&/* LNTH IS 5 AND
*                                      OZ09684                       */
*                                        STATUS=GOOD THEN/* NO ERRORS
*                                      MEANS OZ09684                 */
         CH    OPSIZE,@CH00154                                  02S0111
         BNE   @RF00111                                         02S0111
         CLI   STATUS,X'00'                                     02S0111
         BNE   @RF00111                                         02S0111
*                                     STATUS=ASIDMISS;/* NONUC OR
*                                      NOCOM FOLLOWS COLON OZ09684   */
         MVI   STATUS,X'05'                                     02S0112
*                                    IF STATUS=GOOD THEN        02S0113
@RF00111 CLI   STATUS,X'00'                                     02S0113
         BNE   @RF00113                                         02S0113
*                                     IF THISASID>=STASID(NUMASID) THEN
         L     @02,NUMASID                                      02S0114
         SLA   @02,2                                            02S0114
         LA    @15,STASID-4(@02)                                02S0114
         CLC   THISASID(2),0(@15)                               02S0114
         BL    @RF00114                                         02S0114
*                                      ENDASID(NUMASID)=THISASID;/*
*                                      END OF RANGE                  */
         LA    @15,ENDASID-4(@02)                               02S0115
         MVC   0(2,@15),THISASID                                02S0115
*                                     ELSE/* INVALID ASID RANGE 02S0116
*                                      SPECIFIED                     */
*                                      DO;                      02S0116
         B     @RC00114                                         02S0116
@RF00114 DS    0H                                               02S0117
*                                       STATUS=BADARNGE;        02S0117
         MVI   STATUS,X'04'                                     02S0117
*                                       ASIDSCN=OFF;/* STOP SCAN     */
         NI    ASIDSCN,B'11011111'                              02S0118
*                                      END;                     02S0119
*                                    IF DELIMCD=RPAREN THEN     02S0120
@RC00114 DS    0H                                               02S0120
@RF00113 CLC   DELIMCD(4,COMBASE),@CF00213                      02S0120
         BNE   @RF00120                                         02S0120
*                                     ASIDSCN=OFF;              02S0121
         NI    ASIDSCN,B'11011111'                              02S0121
*                                   END;                        02S0122
*                               END;                            02S0123
*                         END;                                  02S0124
*                       ELSE        /* ONLY ONE ASID SPECIFIED       */
*                         IF DELIMCD=COMA/* MORE ASIDS FOLLOW        */
*                             ×DELIMCD=RPAREN THEN/* END OF ASIDS    */
         B     @RC00098                                         02S0125
@RF00098 L     @04,DELIMCD(,COMBASE)                            02S0125
         CH    @04,@CH00156                                     02S0125
         BE    @RT00125                                         02S0125
         CH    @04,@CH00213                                     02S0125
         BNE   @RF00125                                         02S0125
@RT00125 DS    0H                                               02S0126
*                           DO;                                 02S0126
*                             CALL ASIDCHK;/* VALIDITY CHECK ASID    */
         BAL   @14,ASIDCHK                                      02S0127
*                             IF STATUS=GOOD&/* PASSED ASID CHECK
*                                      OZ09684                       */
*                                 OPSIZE^=5 THEN/* NOT NONUC OR NOCOM
*                                      OZ09684                       */
         CLI   STATUS,X'00'                                     02S0128
         BNE   @RF00128                                         02S0128
         CH    OPSIZE,@CH00154                                  02S0128
         BE    @RF00128                                         02S0128
*                               DO;                             02S0129
*                                 NUMASID=NUMASID+1;/* ADD TO TABLE  */
         LA    @02,1                                            02S0130
         AL    @02,NUMASID                                      02S0130
         ST    @02,NUMASID                                      02S0130
*                                 STASID(NUMASID)=THISASID;     02S0131
         SLA   @02,2                                            02S0131
         LA    @15,STASID-4(@02)                                02S0131
         MVC   0(2,@15),THISASID                                02S0131
*                                 ENDASID(NUMASID)=THISASID;    02S0132
         LA    @15,ENDASID-4(@02)                               02S0132
         MVC   0(2,@15),THISASID                                02S0132
*                               END;                            02S0133
*                             IF DELIMCD=RPAREN THEN/* ALL DONE WITH
*                                      ASIDS                         */
@RF00128 CLC   DELIMCD(4,COMBASE),@CF00213                      02S0134
         BNE   @RF00134                                         02S0134
*                               ASIDSCN=OFF;                    02S0135
         NI    ASIDSCN,B'11011111'                              02S0135
*                           END;                                02S0136
*                         ELSE      /* INVALID DELIMITER SPECIFIED   */
*                           STATUS=INVALDLM;                    02S0137
         B     @RC00125                                         02S0137
@RF00125 MVI   STATUS,X'01'                                     02S0137
*                     END;          /* END OF ASID SCANNING LOOP     */
@RC00125 DS    0H                                               02S0138
@RC00098 DS    0H                                               02S0138
@DE00096 TM    ASIDSCN,B'00100000'                              02S0138
         BO    @DL00096                                         02S0138
*                     IF STATUS=GOOD&/* NO ERRORS FOUND AND OZ09684  */
*                         NUMASID=0 THEN/* NO ASIDS ENTERED OZ09684  */
         CLI   STATUS,X'00'                                     02S0139
         BNE   @RF00139                                         02S0139
         ICM   @02,15,NUMASID                                   02S0139
         BNZ   @RF00139                                         02S0139
*                       STATUS=ASIDMISS;/* INDICATE NO ASIDS OZ09684 */
         MVI   STATUS,X'05'                                     02S0140
*                     IF STATUS=GOOD THEN                       02S0141
@RF00139 CLI   STATUS,X'00'                                     02S0141
         BNE   @RF00141                                         02S0141
*                                                               03S0142
*/*------------------------------------------------------------------*/
*/* CHECK FOR THE NEXT DELIMITER FOLLOWING THE ASIDS.                */
*/* BLANK INDICATES ALL STORAGE --  =(  INDICATES ADDRS              */
*/*------------------------------------------------------------------*/
*                                                               03S0142
*                       DO;                                     03S0142
*                         CALL DELIMSCN;/* GET NEXT DELIMITER        */
         BAL   @14,DELIMSCN                                     03S0143
*                         IF DELIMCD=BLANK×DELIMCD=COMA THEN/* ALL
*                                      STORAGE WANTED                */
         L     @04,DELIMCD(,COMBASE)                            03S0144
         CH    @04,@CH00240                                     03S0144
         BE    @RT00144                                         03S0144
         CH    @04,@CH00156                                     03S0144
         BNE   @RF00144                                         03S0144
@RT00144 DS    0H                                               03S0145
*                           DO;                                 03S0145
*                                                               04S0146
*/*------------------------------------------------------------------*/
*/* INDICATE THAT ALL OF STORAGE IS TO PRINTED                       */
*/*------------------------------------------------------------------*/
*                                                               04S0146
*                             DO;                               04S0146
*                               NUMPAIRS=1;/* INDICATE ONLY ONE ENTRY*/
         MVC   NUMPAIRS(4),@CF00076                             04S0147
*                               LOWAD(1)=0;/* START AT THE BEGINNING */
         SLR   @02,@02                                          04S0148
         ST    @02,LOWAD                                        04S0148
*                               HIAD(1)=DEFLTMAX;/* AND GO TO THE END*/
         ST    DEFLTMAX,HIAD                                    04S0149
*                               GPRSFND=ON;/* REQUEST REGISTERS      */
         OI    GPRSFND(COMBASE),B'00000010'                     04S0150
*                             END;                              04S0151
*                             OPSCAN=OFF;/* DONT SCAN FOR STORAGE
*                                      OPERANDS                      */
         NI    OPSCAN,B'10111111'                               03S0152
*                           END;                                03S0153
*                         ELSE                                  03S0154
*                           IF DELIMCD=EQUAL&OPSIZE=0 THEN/* ONLY
*                                      VALID SITUATION               */
         B     @RC00144                                         03S0154
@RF00144 CLC   DELIMCD(4,COMBASE),@CF00043                      03S0154
         BNE   @RF00154                                         03S0154
         LTR   OPSIZE,OPSIZE                                    03S0154
         BNZ   @RF00154                                         03S0154
*                             DO;                               03S0155
*                               CALL DELIMSCN;                  03S0156
         BAL   @14,DELIMSCN                                     03S0156
*                               IF DELIMCD=LPAREN&OPSIZE=0 THEN/*
*                                      ONLY VALID SITUATION          */
         CLC   DELIMCD(4,COMBASE),@CF00183                      03S0157
         BNE   @RF00157                                         03S0157
         LTR   OPSIZE,OPSIZE                                    03S0157
         BNZ   @RF00157                                         03S0157
*                                 OPSCAN=ON;/* ALL SET TO GET   03S0158
*                                      ADDRESSES                     */
         OI    OPSCAN,B'01000000'                               03S0158
*                               ELSE/* INVALID DELIMITER             */
*                                 STATUS=INVALDLM;              03S0159
         B     @RC00157                                         03S0159
@RF00157 MVI   STATUS,X'01'                                     03S0159
*                             END;                              03S0160
*                       END;                                    03S0161
*                   END;                                        02S0162
*                 ELSE                                          01S0163
*                   IF OPSIZE=0 THEN                            01S0163
         B     @RC00093                                         01S0163
@RF00093 LTR   OPSIZE,OPSIZE                                    01S0163
         BNZ   @RF00163                                         01S0163
*                     DO;                                       01S0164
*                                                               02S0165
*/*------------------------------------------------------------------*/
*/* USE THE STORAGE ASSOCIATED WITH THE CURRENT ASID IN THE DUMP     */
*/*------------------------------------------------------------------*/
*                                                               02S0165
*                       DO;                                     02S0165
*                         NUMASID=1;                            02S0166
         MVC   NUMASID(4),@CF00076                              02S0166
*                         STASID(1)=QASID;/* USE CURRENT ASID        */
         MVC   STASID(2),QASID(COMBASE)                         02S0167
*                         ENDASID(1)=QASID;                     02S0168
         MVC   ENDASID(2),QASID(COMBASE)                        02S0168
*                       END;                                    02S0169
*                       OPSCAN=ON;  /* GET ADDRESSES                 */
         OI    OPSCAN,B'01000000'                               01S0170
*                     END;                                      01S0171
*                   ELSE                                        01S0172
*                     STATUS=INVALDLM;                          01S0172
         B     @RC00163                                         01S0172
@RF00163 MVI   STATUS,X'01'                                     01S0172
*                 IF STATUS=GOOD    /* NO ERRORS THUS FAR            */
*                     &OPSCAN=ON THEN/* PRINT WAS NOT FOR ALL STORAGE
*                                      FOR SPECIFIED ASIDS           */
@RC00163 DS    0H                                               01S0173
@RC00093 CLI   STATUS,X'00'                                     01S0173
         BNE   @RF00173                                         01S0173
         TM    OPSCAN,B'01000000'                               01S0173
         BNO   @RF00173                                         01S0173
*                   CALL STORSCAN;  /* GET STORAGE RANGES            */
         BAL   @14,STORSCAN                                     01S0174
*               END;                                            01S0175
*             ELSE                  /* DELIMITER WAS NOT A LEFT PAREN*/
*               STATUS=INVALDLM;                                01S0176
         B     @RC00091                                         01S0176
@RF00091 MVI   STATUS,X'01'                                     01S0176
*           END;                                                01S0177
*         ELSE                      /* DELIM WAS NOT EQUAL SIGN      */
*           STATUS=INVALDLM;                                    01S0178
         B     @RC00088                                         01S0178
@RF00088 MVI   STATUS,X'01'                                     01S0178
*       IF STATUS=GOOD              /* NO SYNTAX ERRORS              */
*           &ENVIRON=OFF THEN       /* IT IS OK TO PROCESS           */
@RC00088 DS    0H                                               01S0179
@RC00074 CLI   STATUS,X'00'                                     01S0179
         BNE   @RF00179                                         01S0179
         TM    ENVIRON,B'10000000'                              01S0179
         BNZ   @RF00179                                         01S0179
*         DO;                                                   01S0180
*                                                               02S0181
*/*------------------------------------------------------------------*/
*/* VIRTUAL STORAGE IS PRINTED IN THREE STAGES - NUCLEUS, PRIVATE    */
*/* AREA, AND COMMON AREA (HI CORE). THE TABLE OF STORAGE ADDRESSES  */
*/* WHICH WAS BUILT IN STORSCAN IS SEPARATED INTO THESE THREE        */
*/* CATAGORIES                                                       */
*/*------------------------------------------------------------------*/
*                                                               02S0181
*           DO;                                                 02S0181
*             DO BRK=1 TO NUMPAIRS;                             02S0182
         LA    BRK,1                                            02S0182
         B     @DE00182                                         02S0182
@DL00182 DS    0H                                               02S0183
*               IF LOWAD(BRK)<LOWBOUND THEN/* STARTING ADDRESS IS IN
*                                      NUCLEUS                       */
         LR    @03,BRK                                          02S0183
         SLA   @03,3                                            02S0183
         L     @15,LOWAD-8(@03)                                 02S0183
         CR    @15,LOWBOUND                                     02S0183
         BNL   @RF00183                                         02S0183
*                 DO;                                           02S0184
*                   NUMLOW=NUMLOW+1;/* PUT STARTING ADDR IN NUCLEUS
*                                      TABLE                         */
         LA    @00,1                                            02S0185
         AL    @00,NUMLOW                                       02S0185
         ST    @00,NUMLOW                                       02S0185
*                   LOSTART(NUMLOW)=LOWAD(BRK);                 02S0186
         SLA   @00,3                                            02S0186
         LR    @14,@00                                          02S0186
         ST    @15,LOSTART-8(@14)                               02S0186
*                   IF HIAD(BRK)<LOWBOUND THEN/* BOTH ADDRS IN LOW
*                                      RANGE                         */
         L     @03,HIAD-8(@03)                                  02S0187
         CR    @03,LOWBOUND                                     02S0187
         BNL   @RF00187                                         02S0187
*                     LOEND(NUMLOW)=HIAD(BRK);                  02S0188
         LR    @15,@00                                          02S0188
         ST    @03,LOEND-8(@15)                                 02S0188
*                   ELSE            /* ADDR RANGE SPANS TABLES       */
*                     DO;                                       02S0189
         B     @RC00187                                         02S0189
@RF00187 DS    0H                                               02S0190
*                       LOEND(NUMLOW)=LOWBOUND;/* USE DEFAULT FOR
*                                      ENDING                        */
         L     @03,NUMLOW                                       02S0190
         SLA   @03,3                                            02S0190
         ST    LOWBOUND,LOEND-8(@03)                            02S0190
*                       LOWAD(BRK)=LOWBOUND;/* DROP LOW END OF RANGE */
         LR    @03,BRK                                          02S0191
         SLA   @03,3                                            02S0191
         ST    LOWBOUND,LOWAD-8(@03)                            02S0191
*                     END;                                      02S0192
*                 END;                                          02S0193
@RC00187 DS    0H                                               02S0194
*               IF LOWAD(BRK)>=LOWBOUND&LOWAD(BRK)<HIBOUND THEN/*
*                                      STARTING IS IN PRIVATE AREA   */
@RF00183 LR    @03,BRK                                          02S0194
         SLA   @03,3                                            02S0194
         L     @15,LOWAD-8(@03)                                 02S0194
         CR    @15,LOWBOUND                                     02S0194
         BL    @RF00194                                         02S0194
         CR    @15,HIBOUND                                      02S0194
         BNL   @RF00194                                         02S0194
*                 DO;                                           02S0195
*                   NUMMID=NUMMID+1;/* PUT ADDR IN PRIVATE AREA TABLE*/
         LA    @00,1                                            02S0196
         AL    @00,NUMMID                                       02S0196
         ST    @00,NUMMID                                       02S0196
*                   MIDSTART(NUMMID)=LOWAD(BRK);                02S0197
         SLA   @00,3                                            02S0197
         LR    @14,@00                                          02S0197
         ST    @15,MIDSTART-8(@14)                              02S0197
*                   IF HIAD(BRK)<HIBOUND THEN/* BOTH ADDRS IN MID
*                                      RANGE                         */
         L     @03,HIAD-8(@03)                                  02S0198
         CR    @03,HIBOUND                                      02S0198
         BNL   @RF00198                                         02S0198
*                     MIDEND(NUMMID)=HIAD(BRK);                 02S0199
         LR    @15,@00                                          02S0199
         ST    @03,MIDEND-8(@15)                                02S0199
*                   ELSE            /* ADDR PAIR SPANS TABLES        */
*                     DO;                                       02S0200
         B     @RC00198                                         02S0200
@RF00198 DS    0H                                               02S0201
*                       MIDEND(NUMMID)=HIBOUND;/* USE DEFAULT ENDING */
         L     @03,NUMMID                                       02S0201
         SLA   @03,3                                            02S0201
         ST    HIBOUND,MIDEND-8(@03)                            02S0201
*                       LOWAD(BRK)=HIBOUND;/* DROP OFF LOW END OF
*                                      RANGE                         */
         LR    @03,BRK                                          02S0202
         SLA   @03,3                                            02S0202
         ST    HIBOUND,LOWAD-8(@03)                             02S0202
*                     END;                                      02S0203
*                 END;                                          02S0204
@RC00198 DS    0H                                               02S0205
*               IF LOWAD(BRK)>=HIBOUND THEN/* ADDRESS RANGE IS IN HI
*                                      CORE                          */
@RF00194 LR    @03,BRK                                          02S0205
         SLA   @03,3                                            02S0205
         L     @15,LOWAD-8(@03)                                 02S0205
         CR    @15,HIBOUND                                      02S0205
         BL    @RF00205                                         02S0205
*                 DO;                                           02S0206
*                   NUMHI=NUMHI+1;  /* PUT BOTH ADDRS IN HI CORE
*                                      TABLE                         */
         LA    @00,1                                            02S0207
         AL    @00,NUMHI                                        02S0207
         ST    @00,NUMHI                                        02S0207
*                   HISTART(NUMHI)=LOWAD(BRK);                  02S0208
         SLA   @00,3                                            02S0208
         LR    @14,@00                                          02S0208
         ST    @15,HISTART-8(@14)                               02S0208
*                   HIEND(NUMHI)=HIAD(BRK);                     02S0209
         L     @03,HIAD-8(@03)                                  02S0209
         LR    @15,@00                                          02S0209
         ST    @03,HIEND-8(@15)                                 02S0209
*                 END;                                          02S0210
*             END;                                              02S0211
@RF00205 AH    BRK,@CH00076                                     02S0211
@DE00182 C     BRK,NUMPAIRS                                     02S0211
         BNH   @DL00182                                         02S0211
*           END;                                                02S0212
*                                                               02S0213
*/*------------------------------------------------------------------*/
*/* THIS SEGMENT ENQUEUES PCBS FOR ALL OF THE ADDRESS RANGES         */
*/* SPECIFIED IN EACH OF THE THREE TABLES.                           */
*/*------------------------------------------------------------------*/
*                                                               02S0213
*           DO;                                                 02S0213
*             R1=ADDR(PCBPL);                                   02S0214
         LA    R1,PCBPL                                         02S0214
*             TITLSW=OFF;           /* TITLE NEEDS TO BE PRINTED     */
         NI    TITLSW,B'11101111'                               02S0215
*             PCBPVIRT=ON;          /* INDICATE VIRTUAL STORAGE      */
         OI    PCBPVIRT,B'10000000'                             02S0216
*             PCBPFUNC=PCBPENQ;                                 02S0217
*                                                               02S0217
         NI    PCBPFUNC,B'01111111'                             02S0217
*/*  ----------------------------------------------------------------*/
*/*            NUCLEUS                                               */
*/*  ----------------------------------------------------------------*/
*                                                               02S0218
*             IF A1NUC=OFF THEN     /* OZ09684                       */
         TM    A1NUC,B'10000000'                                02S0218
         BNZ   @RF00218                                         02S0218
*               DO;                 /* NONUC NOT SPECIFIED OZ09684   */
*                 DO LOW=1 TO NUMLOW;/* ENQ ALL NUCLEUS ADDRS (IF
*                                      ANY)                          */
         LA    LOW,1                                            02S0220
         B     @DE00220                                         02S0220
@DL00220 DS    0H                                               02S0221
*                   PCBPBGN=LOSTART(LOW);                       02S0221
         LR    @03,LOW                                          02S0221
         SLA   @03,3                                            02S0221
         L     @00,LOSTART-8(@03)                               02S0221
         ST    @00,PCBPBGN                                      02S0221
*                   PCBPEND=LOEND(LOW);                         02S0222
         L     @03,LOEND-8(@03)                                 02S0222
         ST    @03,PCBPEND                                      02S0222
*                   IF STASID(1)='FFFD'X×STASID(1)='FFFE'X THEN/*
*                                      THESE TWO ASIDS INDICATE SADMP
*                                      ERROR RECORDS                 */
         CLC   STASID(2),@CB00644                               02S0223
         BE    @RT00223                                         02S0223
         CLC   STASID(2),@CB00645                               02S0223
         BNE   @RF00223                                         02S0223
@RT00223 DS    0H                                               02S0224
*                     PCBPASID=STASID(1);                       02S0224
         MVC   PCBPASID(2),STASID                               02S0224
*                   ELSE            /* USE CURRENT ASID FOR NUCLEUS  */
*                     PCBPASID=QASID;                           02S0225
         B     @RC00223                                         02S0225
@RF00223 MVC   PCBPASID(2),QASID(COMBASE)                       02S0225
*                   CALL AMDPRPCB;                              02S0226
@RC00223 L     @15,APCBENQ(,COMBASE)                            02S0226
         BALR  @14,@15                                          02S0226
*                 END;                                          02S0227
         AH    LOW,@CH00076                                     02S0227
@DE00220 C     LOW,NUMLOW                                       02S0227
         BNH   @DL00220                                         02S0227
*                 IF PCBPTR^=0 THEN /* SOME NUCLEUS TO BE PRINTED    */
         ICM   @00,15,PCBPTR(COMBASE)                           02S0228
         BZ    @RF00228                                         02S0228
*                   DO;                                         02S0229
*                     GEN(BRWRITE SKIP)/* SKIP TO NEW PAGE           */
*                     REFS(AWRITE) FLOWS(PMSSTOP);              02S0230
         BRWRITE SKIP
*                     TITLVPLC=PMSVTITL;                        02S0231
         L     @15,CURBUF(,COMBASE)                             02S0231
         MVC   TITLVPLC+32(57,@15),PMSVTITL                     02S0231
*                     GEN(BRWRITE 2);/* PRINT TITLE                  */
         BRWRITE 2
*                     TOPICHDR=NUCLEUS;                         02S0233
         MVI   TOPICHDR+7(COMBASE),C' '                         02S0233
         MVC   TOPICHDR+8(2,COMBASE),TOPICHDR+7(COMBASE)        02S0233
         MVC   TOPICHDR(7,COMBASE),NUCLEUS                      02S0233
*                     TOPICPLC=NUCLEUS;                         02S0234
         L     @15,CURBUF(,COMBASE)                             02S0234
         MVI   TOPICPLC+63(@15),C' '                            02S0234
         MVC   TOPICPLC+64(2,@15),TOPICPLC+63(@15)              02S0234
         MVC   TOPICPLC+56(7,@15),NUCLEUS                       02S0234
*                     GEN(BRWRITE 2);/* PRINT TOPIC                  */
         BRWRITE 2
*                     TITLSW=ON;    /* DONT PUT OUT TITLE AGAIN      */
         OI    TITLSW,B'00010000'                               02S0236
*                     CALL AMDPRDPS;/* PRINT STORAGE                 */
         L     @15,APRTSTG(,COMBASE)                            02S0237
         BALR  @14,@15                                          02S0237
*                   END;                                        02S0238
*               END;                /* NONUC NOT SPECIFIED OZ09684   */
@RF00228 DS    0H                                               02S0240
*/*  ----------------------------------------------------------------*/
*/*            PRIVATE AREAS                                         */
*/*  ----------------------------------------------------------------*/
*                                                               02S0240
*             R1=ADDR(PCBPL);       /* RESTORE R1                    */
@RF00218 LA    R1,PCBPL                                         02S0240
*             TOPICHDR='';                                      02S0241
         MVI   TOPICHDR(COMBASE),C' '                           02S0241
         MVC   TOPICHDR+1(9,COMBASE),TOPICHDR(COMBASE)          02S0241
*             ASIDFND=OFF;                                      02S0242
*             ASIDNOTF=OFF;                                     02S0243
         NI    ASIDFND,B'11111001'                              02S0243
*             PCBPTOPC=ON;          /* ASK DPS TO UPDATE TOPICHDR    */
         OI    PCBPTOPC,B'00010000'                             02S0244
*             DO ANTRY=1 TO NUMASID;/* STEP THRU ASID TABLE          */
         LA    ANTRY,1                                          02S0245
         B     @DE00245                                         02S0245
@DL00245 DS    0H                                               02S0246
*               DO ASID=STASID(ANTRY) TO ENDASID(ANTRY);        02S0246
         LR    @02,ANTRY                                        02S0246
         SLA   @02,2                                            02S0246
         LA    @15,STASID-4(@02)                                02S0246
         SLR   @02,@02                                          02S0246
         ICM   @02,3,0(@15)                                     02S0246
         B     @DE00246                                         02S0246
@DL00246 DS    0H                                               02S0247
*                                                               03S0247
*/*------------------------------------------------------------------*/
*/* CHECK TO SEE IF THE PRESENT ASID IS IN THE DUMP                  */
*/*------------------------------------------------------------------*/
*                                                               03S0247
*                 DO;                                           03S0247
*                   ASIDSRCH=ON;    /* INITIALIZE LOOP CONTROL       */
         OI    ASIDSRCH,B'00000001'                             03S0248
*                   INDXADDR=ASIDNDX;/* POINT TO FIRST MAP ENTRY     */
         L     INDXADDR,ASIDNDX(,COMBASE)                       03S0249
*                   ASIDTHER=OFF;   /* TURNED ON IF ASID IS FOUND    */
         NI    ASIDTHER,B'11110111'                             03S0250
*                   IF ASID=QASID THEN/* CURRENT ASID                */
         CLC   ASID(2),QASID(COMBASE)                           03S0251
         BNE   @RF00251                                         03S0251
*                     ASIDTHER=ON;  /* THIS ASID IS FOUND            */
         OI    ASIDTHER,B'00001000'                             03S0252
*                   ELSE                                        03S0253
*                     IF ASIDNDX^=0 THEN/* SOME VIRTUAL BLOCKS WERE
*                                      DUMPED                        */
         B     @RC00251                                         03S0253
@RF00251 ICM   @00,15,ASIDNDX(COMBASE)                          03S0253
         BZ    @RF00253                                         03S0253
*                       DO WHILE ASIDSRCH=ON;                   03S0254
         B     @DE00254                                         03S0254
@DL00254 DS    0H                                               03S0255
*                         DO SRCH=1 TO ASIDCNT WHILE ASIDTHER=OFF;
         LA    SRCH,1                                           03S0255
@DL00255 TM    ASIDTHER,B'00001000'                             03S0255
         BNZ   @DC00255                                         03S0255
*                           IF ASID=ASDXASID(SRCH) THEN         03S0256
         LR    @04,SRCH                                         03S0256
         ALR   @04,@04                                          03S0256
         ALR   @04,INDXADDR                                     03S0256
         CLC   ASID(2),ASDXASID-2(@04)                          03S0256
         BNE   @RF00256                                         03S0256
*                             DO;                               03S0257
*                               ASIDTHER=ON;/* ASID HAS BEEN FOUND   */
*                               ASIDSRCH=OFF;/* STOP LOOP            */
         OI    ASIDTHER,B'00001000'                             03S0259
         NI    ASIDSRCH,B'11111110'                             03S0259
*                             END;                              03S0260
*                         END;                                  03S0261
@RF00256 AH    SRCH,@CH00076                                    03S0261
         CH    SRCH,@CH00366                                    03S0261
         BNH   @DL00255                                         03S0261
@DC00255 DS    0H                                               03S0262
*                         IF ASDXLNK^=0 THEN/* THERE IS ANOTHER ASID
*                                      MAP                           */
         L     @15,ASDXLNK(,INDXADDR)                           03S0262
         LTR   @15,@15                                          03S0262
         BZ    @RF00262                                         03S0262
*                           INDXADDR=ASDXLNK;                   03S0263
         LR    INDXADDR,@15                                     03S0263
*                         ELSE      /* NO MORE VIRTUAL MAPS          */
*                           ASIDSRCH=OFF;/* TERMINATE SCAN           */
         B     @RC00262                                         03S0264
@RF00262 NI    ASIDSRCH,B'11111110'                             03S0264
*                       END;                                    03S0265
@RC00262 DS    0H                                               03S0265
@DE00254 TM    ASIDSRCH,B'00000001'                             03S0265
         BO    @DL00254                                         03S0265
*                   IF ASIDTHER=OFF THEN/* SEARCH ASCBMAP            */
@RF00253 DS    0H                                               03S0266
@RC00251 TM    ASIDTHER,B'00001000'                             03S0266
         BNZ   @RF00266                                         03S0266
*                     DO;                                       03S0267
*                       ASMAPPTR=ASCBMAP+LENGTH(ASCBPREF);      03S0268
         LA    ASMAPPTR,16                                      03S0268
         AL    ASMAPPTR,ASCBMAP(,COMBASE)                       03S0268
*                       DO SRCH=1 TO ASCBNUM WHILE ASIDTHER=OFF;
         LA    SRCH,1                                           03S0269
         B     @DE00269                                         03S0269
@DL00269 TM    ASIDTHER,B'00001000'                             03S0269
         BNZ   @DC00269                                         03S0269
*                         IF ASID=MAPASID THEN                  03S0270
         CLC   ASID(2),MAPASID(ASMAPPTR)                        03S0270
         BNE   @RF00270                                         03S0270
*                           ASIDTHER=ON;/* ASID HAS BEEN FOUND       */
         OI    ASIDTHER,B'00001000'                             03S0271
*                         ASMAPPTR=ASMAPPTR+LENGTH(ASMAPENT);   03S0272
@RF00270 AH    ASMAPPTR,@CH00057                                03S0272
*                       END;                                    03S0273
         AH    SRCH,@CH00076                                    03S0273
@DE00269 L     @04,ASCBMAP(,COMBASE)                            03S0273
         CH    SRCH,ASCBNUM(,@04)                               03S0273
         BNH   @DL00269                                         03S0273
@DC00269 DS    0H                                               03S0274
*                     END;                                      03S0274
*                   IF ASIDTHER=ON&ASIDFND=OFF THEN             03S0275
@RF00266 TM    ASIDTHER,B'00001000'                             03S0275
         BNO   @RF00275                                         03S0275
         TM    ASIDFND,B'00000100'                              03S0275
         BNZ   @RF00275                                         03S0275
*                     ASIDFND=ON;                               03S0276
         OI    ASIDFND,B'00000100'                              03S0276
*                 END;                                          03S0277
@RF00275 DS    0H                                               03S0278
*                 IF ASIDTHER=ON THEN/* ASID IS IN THE DUMP          */
         TM    ASIDTHER,B'00001000'                             02S0278
         BNO   @RF00278                                         02S0278
*                   DO MID=1 TO NUMMID;/* ENQ STORAGE FOR THIS ASID  */
         LA    MID,1                                            02S0279
         B     @DE00279                                         02S0279
@DL00279 DS    0H                                               02S0280
*                     PCBPBGN=MIDSTART(MID);                    02S0280
         LR    @15,MID                                          02S0280
         SLA   @15,3                                            02S0280
         L     @00,MIDSTART-8(@15)                              02S0280
         ST    @00,PCBPBGN                                      02S0280
*                     PCBPEND=MIDEND(MID);                      02S0281
         L     @00,MIDEND-8(@15)                                02S0281
         ST    @00,PCBPEND                                      02S0281
*                     PCBPASID=ASID;                            02S0282
         MVC   PCBPASID(2),ASID                                 02S0282
*                     CALL AMDPRPCB;                            02S0283
         L     @15,APCBENQ(,COMBASE)                            02S0283
         BALR  @14,@15                                          02S0283
*                   END;                                        02S0284
         AH    MID,@CH00076                                     02S0284
@DE00279 C     MID,NUMMID                                       02S0284
         BNH   @DL00279                                         02S0284
*                 ELSE                                          02S0285
*                   ASIDNOTF=ON;    /* SOME ASID(S) NOT FOUND        */
         B     @RC00278                                         02S0285
@RF00278 OI    ASIDNOTF,B'00000010'                             02S0285
*               END;                                            02S0286
@RC00278 LA    @02,1                                            02S0286
         SLR   @00,@00                                          02S0286
         ICM   @00,3,ASID                                       02S0286
         ALR   @02,@00                                          02S0286
@DE00246 STH   @02,ASID                                         02S0286
         LR    @15,ANTRY                                        02S0286
         SLA   @15,2                                            02S0286
         LA    @14,ENDASID-4(@15)                               02S0286
         SLR   @00,@00                                          02S0286
         ICM   @00,3,0(@14)                                     02S0286
         CR    @02,@00                                          02S0286
         BNH   @DL00246                                         02S0286
*             END;                                              02S0287
         AH    ANTRY,@CH00076                                   02S0287
@DE00245 C     ANTRY,NUMASID                                    02S0287
         BNH   @DL00245                                         02S0287
*             IF ASIDNOTF=ON THEN                               02S0288
         TM    ASIDNOTF,B'00000010'                             02S0288
         BNO   @RF00288                                         02S0288
*                                                               03S0289
*/*------------------------------------------------------------------*/
*/* ISSUE AN ERROR MESSAGE IF SOME OR ALL OF THE ASIDS WERE NOT IN   */
*/* THE DUMP                                                         */
*/*------------------------------------------------------------------*/
*                                                               03S0289
*               DO;                                             03S0289
*                 RESPECIFY                                     03S0290
*                  (R9,                                         03S0290
*                   R2) RESTRICTED;                             03S0290
*                 R9=APMX;          /* GET ADDRESSABILITY TO MSG
*                                      CSECT                         */
         L     R9,APMX                                          03S0291
*                 IF ASIDFND=ON THEN/* SOME ASIDS WERE FOUND         */
         TM    ASIDFND,B'00000100'                              03S0292
         BNO   @RF00292                                         03S0292
*                   DO;                                         03S0293
*                     R2=M282ILGT-4;/* LGT OF MSG TEXT               */
         LA    @08,4                                            03S0294
         LH    R2,M282ILGT                                      03S0294
         SLR   R2,@08                                           03S0294
*                     R1=ADDR(AMD282I)+4;/* ADDR OF MSG TEXT         */
         LA    R1,AMD282I                                       03S0295
         ALR   R1,@08                                           03S0295
*                     CALL PRTMSG;  /* ISSUE MSG TO SYSPRINT         */
         L     @15,APRTMSG(,COMBASE)                            03S0296
         BALR  @14,@15                                          03S0296
*                     IF RDRSW=OFF THEN/* TELL OPERATOR ALSO         */
         TM    RDRSW(COMBASE),B'00000001'                       03S0297
         BNZ   @RF00297                                         03S0297
*                       DO;         /* WTOP MF(E,AMD282I)            */
*                         RFY                                   03S0299
*                           GPR01P RSTD;/* RESTRICT REG 1            */
*                         GPR01P=ADDR(AMD282I);/* ADDRESS CONTROL
*                                      PROGRAM LIST                  */
         LA    GPR01P,AMD282I                                   03S0300
*                         SVC(35);  /* ISSUE WTO SVC                 */
         SVC   35                                               03S0301
*                         RFY                                   03S0302
*                           GPR01P UNRSTD;/* RELEASE REG 1           */
*                       END;        /* WTOP MF(E,AMD282I)            */
*                   END;                                        03S0304
*                 ELSE              /* NO ASIDS WERE FOUND           */
*                   DO;                                         03S0305
         B     @RC00292                                         03S0305
@RF00292 DS    0H                                               03S0306
*                     R2=M295ILGT-4;/* LENGTH OF MESSAGE TEXT        */
         LA    @08,4                                            03S0306
         LH    R2,M295ILGT                                      03S0306
         SLR   R2,@08                                           03S0306
*                     R1=ADDR(AMD295I)+4;/* ADDRESS OF MESSAGE TEXT  */
         LA    R1,AMD295I                                       03S0307
         ALR   R1,@08                                           03S0307
*                     CALL PRTMSG;  /* ISSUE MSG TO SYSPRINT         */
         L     @15,APRTMSG(,COMBASE)                            03S0308
         BALR  @14,@15                                          03S0308
*                     IF RDRSW=OFF THEN/* TELL OPERATOR ALSO         */
         TM    RDRSW(COMBASE),B'00000001'                       03S0309
         BNZ   @RF00309                                         03S0309
*                       DO;         /* WTOP MF(E,AMD295I)            */
*                         RFY                                   03S0311
*                           GPR01P RSTD;/* RESTRICT REG 1            */
*                         GPR01P=ADDR(AMD295I);/* ADDRESS CONTROL
*                                      PROGRAM LIST                  */
         LA    GPR01P,AMD295I                                   03S0312
*                         SVC(35);  /* ISSUE WTO SVC                 */
         SVC   35                                               03S0313
*                         RFY                                   03S0314
*                           GPR01P UNRSTD;/* RELEASE REG 1           */
*                       END;        /* WTOP MF(E,AMD295I)            */
*                   END;                                        03S0316
@RF00309 DS    0H                                               03S0317
*                 RESPECIFY                                     03S0317
*                  (R9,                                         03S0317
*                   R2) UNRESTRICTED;                           03S0317
@RC00292 DS    0H                                               03S0318
*               END;                                            03S0318
*             IF PCBPTR^=0 THEN     /* SOMETHING WAS ENQUEUED        */
@RF00288 ICM   @00,15,PCBPTR(COMBASE)                           02S0319
         BZ    @RF00319                                         02S0319
*               DO;                                             02S0320
*                 GEN(BRWRITE SKIP);/* SKIP TO NEW PAGE              */
         BRWRITE SKIP
*                                                               03S0322
*/*------------------------------------------------------------------*/
*/* PRINT THE PRESENT ASID AS A SUBTITLE                             */
*/*------------------------------------------------------------------*/
*                                                               03S0322
*                 DO;                                           03S0322
*                   R1=ADDR(PCBPL);                             03S0323
         LA    R1,PCBPL                                         03S0323
*                   PCBPFUNC=PCBPDEQ;                           03S0324
         OI    PCBPFUNC,B'10000000'                             03S0324
*                   CALL AMDPRPCB;  /* GET THE FIRST PCB ON QUEUE    */
         L     @15,APCBENQ(,COMBASE)                            03S0325
         BALR  @14,@15                                          03S0325
*                   HDRSAVE(1:4)=ASIDCHAR;                      03S0326
         MVC   HDRSAVE(4),ASIDCHAR                              03S0326
*                   UNPK(ASIDPLC,FRSTIDH);                      03S0327
         UNPK  ASIDPLC(5),FRSTIDH(3)                            03S0327
*                   TR(ASIDPLC,EBCTABL);                        03S0328
         TR    ASIDPLC(5),EBCTABL(COMBASE)                      03S0328
*                   ASIDPLC(LENGTH(ASIDPLC))=' ';               03S0329
         MVI   ASIDPLC+4,C' '                                   03S0329
*                   IF TITLSW=OFF THEN/* NEED TO PUT OUT TITLE       */
         TM    TITLSW,B'00010000'                               03S0330
         BNZ   @RF00330                                         03S0330
*                     DO;                                       03S0331
*                       TOPICHDR='';                            03S0332
         MVI   TOPICHDR(COMBASE),C' '                           03S0332
         MVC   TOPICHDR+1(9,COMBASE),TOPICHDR(COMBASE)          03S0332
*                       TITLVPLC=PMSVTITL;                      03S0333
         L     @15,CURBUF(,COMBASE)                             03S0333
         MVC   TITLVPLC+32(57,@15),PMSVTITL                     03S0333
*                       GEN(BRWRITE 2);/* PRINT TITLE                */
         BRWRITE 2
*                       TOPICPLC=HDRSAVE;                       03S0335
         L     @15,CURBUF(,COMBASE)                             03S0335
         MVC   TOPICPLC+56(10,@15),HDRSAVE                      03S0335
*                       GEN(BRWRITE 2);/* PRINT TOPIC                */
         BRWRITE 2
*                       TITLSW=ON;  /* ONLY PRINT TITLE ONCE         */
         OI    TITLSW,B'00010000'                               03S0337
*                       PCBPTOPC=OFF;/* DONT SKIP ON FIRST PCB (DPS) */
         NI    PCBPTOPC,B'11101111'                             03S0338
*                     END;                                      03S0339
*                   R1=ADDR(PCBPL); /* RESTORE R1                    */
@RF00330 LA    R1,PCBPL                                         03S0340
*                   PCBPFUNC=PCBPENQ;                           03S0341
         NI    PCBPFUNC,B'01111111'                             03S0341
*                   CALL AMDPRPCB;  /* PUT FIRST PCB BACK ON QUEUE   */
         L     @15,APCBENQ(,COMBASE)                            03S0342
         BALR  @14,@15                                          03S0342
*                 END;                                          03S0343
*                 TOPICHDR=HDRSAVE;                             02S0344
         MVC   TOPICHDR(10,COMBASE),HDRSAVE                     02S0344
*                 CALL AMDPRDPS;    /* PRINT MIDDLE RANGES           */
         L     @15,APRTSTG(,COMBASE)                            02S0345
         BALR  @14,@15                                          02S0345
*               END;                                            02S0346
*                                                               02S0346
*/*  ----------------------------------------------------------------*/
*/*            COMMON                                                */
*/*  ----------------------------------------------------------------*/
*                                                               02S0347
*             IF A1COM=OFF THEN     /* OZ09684                       */
@RF00319 TM    A1COM,B'10000000'                                02S0347
         BNZ   @RF00347                                         02S0347
*               DO;                 /* NOCOM NOT SPECIFIED OZ09684   */
*                 R1=ADDR(PCBPL);   /*                        @Z09684*/
         LA    R1,PCBPL                                         02S0349
*                 PCBPTOPC=OFF;     /* TURN OFF DPS TOPIC UPDATING   */
         NI    PCBPTOPC,B'11101111'                             02S0350
*                 DO HI=1 TO NUMHI; /* ENQ HI STORAGE RANGES         */
         LA    HI,1                                             02S0351
         B     @DE00351                                         02S0351
@DL00351 DS    0H                                               02S0352
*                   PCBPBGN=HISTART(HI);                        02S0352
         LR    @03,HI                                           02S0352
         SLA   @03,3                                            02S0352
         L     @00,HISTART-8(@03)                               02S0352
         ST    @00,PCBPBGN                                      02S0352
*                   PCBPEND=HIEND(HI);                          02S0353
         L     @03,HIEND-8(@03)                                 02S0353
         ST    @03,PCBPEND                                      02S0353
*                   IF STASID(1)='FFFD'X×STASID(1)='FFFE'X THEN/*
*                                      THESE TWO ASIDS INDICATE SADMP
*                                      ERROR RECORDS                 */
         CLC   STASID(2),@CB00644                               02S0354
         BE    @RT00354                                         02S0354
         CLC   STASID(2),@CB00645                               02S0354
         BNE   @RF00354                                         02S0354
@RT00354 DS    0H                                               02S0355
*                     PCBPASID=STASID(1);                       02S0355
         MVC   PCBPASID(2),STASID                               02S0355
*                   ELSE            /* USE CURRENT ASID FOR COMMON   */
*                     PCBPASID=QASID;                           02S0356
         B     @RC00354                                         02S0356
@RF00354 MVC   PCBPASID(2),QASID(COMBASE)                       02S0356
*                   CALL AMDPRPCB;                              02S0357
@RC00354 L     @15,APCBENQ(,COMBASE)                            02S0357
         BALR  @14,@15                                          02S0357
*                 END;                                          02S0358
         AH    HI,@CH00076                                      02S0358
@DE00351 C     HI,NUMHI                                         02S0358
         BNH   @DL00351                                         02S0358
*                 IF PCBPTR^=0 THEN /* SOMETHING WAS ENQUEUED        */
         ICM   @00,15,PCBPTR(COMBASE)                           02S0359
         BZ    @RF00359                                         02S0359
*                   DO;                                         02S0360
*                     GEN(BRWRITE SKIP);/* SKIP TO NEW PAGE          */
         BRWRITE SKIP
*                     TOPICHDR='';                              02S0362
         MVI   TOPICHDR(COMBASE),C' '                           02S0362
         MVC   TOPICHDR+1(9,COMBASE),TOPICHDR(COMBASE)          02S0362
*                     IF TITLSW=OFF THEN/* NEED TO PUT OUT TITLE     */
         TM    TITLSW,B'00010000'                               02S0363
         BNZ   @RF00363                                         02S0363
*                       DO;                                     02S0364
*                         TITLVPLC=PMSVTITL;                    02S0365
         L     @15,CURBUF(,COMBASE)                             02S0365
         MVC   TITLVPLC+32(57,@15),PMSVTITL                     02S0365
*                         GEN(BRWRITE 2);/* PRINT TITLE              */
         BRWRITE 2
*                         TOPICPLC=COMMN;                       02S0367
         L     @15,CURBUF(,COMBASE)                             02S0367
         MVI   TOPICPLC+62(@15),C' '                            02S0367
         MVC   TOPICPLC+63(3,@15),TOPICPLC+62(@15)              02S0367
         MVC   TOPICPLC+56(6,@15),COMMN                         02S0367
*                         GEN(BRWRITE 2);/* PRINT TOPIC              */
         BRWRITE 2
*                       END;                                    02S0369
*                     TOPICHDR=COMMN;                           02S0370
@RF00363 MVI   TOPICHDR+6(COMBASE),C' '                         02S0370
         MVC   TOPICHDR+7(3,COMBASE),TOPICHDR+6(COMBASE)        02S0370
         MVC   TOPICHDR(6,COMBASE),COMMN                        02S0370
*                     CALL AMDPRDPS;/* PRINT STORAGE - HI ADDRESSES  */
         L     @15,APRTSTG(,COMBASE)                            02S0371
         BALR  @14,@15                                          02S0371
*                   END;                                        02S0372
*               END;                /* NOCOM NOT SPECIFIED OZ09684   */
@RF00359 DS    0H                                               02S0374
*             A1NUC=OFF;            /* OZ09684                       */
@RF00347 NI    A1NUC,B'01111111'                                02S0374
*             A1COM=OFF;            /* OZ09684                       */
         NI    A1COM,B'01111111'                                02S0375
*           END;                                                02S0376
*         END;                                                  01S0377
*       IF STATUS^=GOOD THEN        /* SYNTAX ERROR WAS FOUND        */
@RF00179 CLI   STATUS,X'00'                                     01S0378
         BE    @RF00378                                         01S0378
*                                                               02S0379
*/*------------------------------------------------------------------*/
*/* PRINT A SYNTAX ERROR MESSAGE                                     */
*/*------------------------------------------------------------------*/
*                                                               02S0379
*         DO;                                                   02S0379
*           RESPECIFY                                           02S0380
*             R15 RESTRICTED;                                   02S0380
*           DELIMCD=0;              /* SET INVALID TO TERMINATE SCAN
*                                      OF CURRENT CONTROL CARD       */
         SLR   @14,@14                                          02S0381
         ST    @14,DELIMCD(,COMBASE)                            02S0381
*           GEN(USING SYNEPS,R15);                              02S0382
         USING SYNEPS,R15
*           R15=ASYNTAX;                                        02S0383
         L     R15,ASYNTAX(,COMBASE)                            02S0383
*           IF STATUS=INVALDLM THEN                             02S0384
         CLI   STATUS,X'01'                                     02S0384
         BNE   @RF00384                                         02S0384
*             MSGADDR=ADDR(DELIMS);                             02S0385
         LA    @14,DELIMS                                       02S0385
         ST    @14,MSGADDR                                      02S0385
*           ELSE                                                02S0386
*             IF STATUS=OPOMIT THEN                             02S0386
         B     @RC00384                                         02S0386
@RF00384 CLI   STATUS,X'02'                                     02S0386
         BNE   @RF00386                                         02S0386
*               MSGADDR=ADDR(OPMISS);                           02S0387
         LA    @14,OPMISS                                       02S0387
         ST    @14,MSGADDR                                      02S0387
*             ELSE                                              02S0388
*               IF STATUS=OPTOBIG THEN                          02S0388
         B     @RC00386                                         02S0388
@RF00386 CLI   STATUS,X'03'                                     02S0388
         BNE   @RF00388                                         02S0388
*                 MSGADDR=ADDR(TOBIGS);                         02S0389
         LA    @14,TOBIGS                                       02S0389
         ST    @14,MSGADDR                                      02S0389
*               ELSE                                            02S0390
*                 IF STATUS=BADARNGE THEN                       02S0390
         B     @RC00388                                         02S0390
@RF00388 CLI   STATUS,X'04'                                     02S0390
         BNE   @RF00390                                         02S0390
*                   MSGADDR=ADDR(ARNGE);                        02S0391
         LA    @14,ARNGE                                        02S0391
         ST    @14,MSGADDR                                      02S0391
*                 ELSE                                          02S0392
*                   IF STATUS=ASIDMISS THEN                     02S0392
         B     @RC00390                                         02S0392
@RF00390 CLI   STATUS,X'05'                                     02S0392
         BNE   @RF00392                                         02S0392
*                     MSGADDR=ADDR(ASMISS);                     02S0393
         LA    @14,ASMISS                                       02S0393
         ST    @14,MSGADDR                                      02S0393
*                   ELSE                                        02S0394
*                     IF STATUS=ASIDBIG THEN                    02S0394
         B     @RC00392                                         02S0394
@RF00392 CLI   STATUS,X'06'                                     02S0394
         BNE   @RF00394                                         02S0394
*                       MSGADDR=ADDR(BGASID);                   02S0395
         LA    @14,BGASID                                       02S0395
         ST    @14,MSGADDR                                      02S0395
*                     ELSE                                      02S0396
*                       IF STATUS=ASIDNOTL THEN                 02S0396
         B     @RC00394                                         02S0396
@RF00394 CLI   STATUS,X'07'                                     02S0396
         BNE   @RF00396                                         02S0396
*                         MSGADDR=ADDR(ASNOTL);                 02S0397
         LA    @14,ASNOTL                                       02S0397
         ST    @14,MSGADDR                                      02S0397
*                       ELSE                                    02S0398
*                         IF STATUS=INVALNUM THEN               02S0398
         B     @RC00396                                         02S0398
@RF00396 CLI   STATUS,X'08'                                     02S0398
         BNE   @RF00398                                         02S0398
*                           MSGADDR=ADDR(BADNMS);               02S0399
         LA    @14,BADNMS                                       02S0399
         ST    @14,MSGADDR                                      02S0399
*                         ELSE                                  02S0400
*                           MSGADDR=ADDR(SRNGE);                02S0400
         B     @RC00398                                         02S0400
@RF00398 LA    @14,SRNGE                                        02S0400
         ST    @14,MSGADDR                                      02S0400
*           SYNMSGA=ADDR(MSGADDR);                              02S0401
@RC00398 DS    0H                                               02S0401
@RC00396 DS    0H                                               02S0401
@RC00394 DS    0H                                               02S0401
@RC00392 DS    0H                                               02S0401
@RC00390 DS    0H                                               02S0401
@RC00388 DS    0H                                               02S0401
@RC00386 DS    0H                                               02S0401
@RC00384 LA    @14,MSGADDR                                      02S0401
         ST    @14,SYNMSGA(,COMBASE)                            02S0401
*           IF STATUS=BADLAST THEN                              02S0402
         CLI   STATUS,X'0A'                                     02S0402
         BNE   @RF00402                                         02S0402
*             CALL SYNTAX;                                      02S0403
         BAL   @14,SYNTAX                                       02S0403
*           ELSE                                                02S0404
*             CALL SYNTAXA;                                     02S0404
         B     @RC00402                                         02S0404
@RF00402 BAL   @14,SYNTAXA                                      02S0404
*           RESPECIFY                                           02S0405
*             R15 UNRESTRICTED;                                 02S0405
@RC00402 DS    0H                                               02S0406
*         END;                                                  02S0406
*     END;                          /* END PRINT STORAGE CODE        */
*   ELSE                            /* PRINT REAL WAS SPECIFIED      */
*                                                               02S0408
*/*------------------------------------------------------------------*/
*/* PRINT ALL OF THE REAL ADDRESS RANGES SPECIFIED                   */
*/*------------------------------------------------------------------*/
*                                                               02S0408
*     DO;                                                       02S0408
         B     @RC00067                                         02S0408
@RF00067 DS    0H                                               02S0409
*       DEFLTMAX=REALMAX;                                       02S0409
         L     DEFLTMAX,REALMAX(,COMBASE)                       02S0409
*       IF DELIMCD=BLANK×DELIMCD=COMA THEN/* PRINT ALL REAL STORAGE  */
         L     @02,DELIMCD(,COMBASE)                            02S0410
         CH    @02,@CH00240                                     02S0410
         BE    @RT00410                                         02S0410
         CH    @02,@CH00156                                     02S0410
         BNE   @RF00410                                         02S0410
@RT00410 DS    0H                                               02S0411
*                                                               03S0411
*/*------------------------------------------------------------------*/
*/* INDICATE THAT ALL OF STORAGE IS TO PRINTED                       */
*/*------------------------------------------------------------------*/
*                                                               03S0411
*         DO;                                                   03S0411
*           NUMPAIRS=1;             /* INDICATE ONLY ONE ENTRY       */
         MVC   NUMPAIRS(4),@CF00076                             03S0412
*           LOWAD(1)=0;             /* START AT THE BEGINNING        */
         SLR   @02,@02                                          03S0413
         ST    @02,LOWAD                                        03S0413
*           HIAD(1)=DEFLTMAX;       /* AND GO TO THE END             */
         ST    DEFLTMAX,HIAD                                    03S0414
*           GPRSFND=ON;             /* REQUEST REGISTERS             */
         OI    GPRSFND(COMBASE),B'00000010'                     03S0415
*         END;                                                  03S0416
*       ELSE                                                    02S0417
*         IF DELIMCD=EQUAL THEN     /* ADDRESSES FOLLOW              */
         B     @RC00410                                         02S0417
@RF00410 CLC   DELIMCD(4,COMBASE),@CF00043                      02S0417
         BNE   @RF00417                                         02S0417
*           DO;                                                 02S0418
*             CALL DELIMSCN;        /* GET NEXT DELIMITER            */
         BAL   @14,DELIMSCN                                     02S0419
*             IF DELIMCD=LPAREN THEN/* ONLY VALID DELIMITER HERE     */
         CLC   DELIMCD(4,COMBASE),@CF00183                      02S0420
         BNE   @RF00420                                         02S0420
*               CALL STORSCAN;      /* BUILD TABLE OF ADDRESS PAIRS  */
         BAL   @14,STORSCAN                                     02S0421
*             ELSE                                              02S0422
*               STATUS=INVALDLM;                                02S0422
         B     @RC00420                                         02S0422
@RF00420 MVI   STATUS,X'01'                                     02S0422
*           END;                                                02S0423
*         ELSE                                                  02S0424
*           STATUS=INVALDLM;                                    02S0424
         B     @RC00417                                         02S0424
@RF00417 MVI   STATUS,X'01'                                     02S0424
*       IF STATUS=GOOD&ENVIRON=OFF THEN                         02S0425
@RC00417 DS    0H                                               02S0425
@RC00410 CLI   STATUS,X'00'                                     02S0425
         BNE   @RF00425                                         02S0425
         TM    ENVIRON,B'10000000'                              02S0425
         BNZ   @RF00425                                         02S0425
*         DO;                                                   02S0426
*           R1=ADDR(PCBPL);                                     02S0427
         LA    R1,PCBPL                                         02S0427
*           PCBPREAL=ON;            /* INDICATE REAL READS           */
         OI    PCBPREAL,B'01000000'                             02S0428
*           PCBPFUNC=PCBPENQ;                                   02S0429
         NI    PCBPFUNC,B'01111111'                             02S0429
*           DO REAL=1 TO NUMPAIRS;  /* ENQ ALL ADDRESS PAIRS         */
         LA    REAL,1                                           02S0430
         B     @DE00430                                         02S0430
@DL00430 DS    0H                                               02S0431
*             PCBPBGN=LOWAD(REAL);                              02S0431
         LR    @03,REAL                                         02S0431
         SLA   @03,3                                            02S0431
         L     @00,LOWAD-8(@03)                                 02S0431
         ST    @00,PCBPBGN                                      02S0431
*             PCBPEND=HIAD(REAL);                               02S0432
         L     @03,HIAD-8(@03)                                  02S0432
         ST    @03,PCBPEND                                      02S0432
*             CALL AMDPRPCB;                                    02S0433
         L     @15,APCBENQ(,COMBASE)                            02S0433
         BALR  @14,@15                                          02S0433
*           END;                                                02S0434
         AH    REAL,@CH00076                                    02S0434
@DE00430 C     REAL,NUMPAIRS                                    02S0434
         BNH   @DL00430                                         02S0434
*           GEN(BRWRITE SKIP);      /* SKIP TO NEW PAGE              */
         BRWRITE SKIP
*           TITLRPLC=PMSRTITL;                                  02S0436
         L     @15,CURBUF(,COMBASE)                             02S0436
         MVC   TITLRPLC+34(52,@15),PMSRTITL                     02S0436
*           GEN(BRWRITE 2);         /* PRINT TITLE                   */
         BRWRITE 2
*           CALL AMDPRDPS;          /* PRINT REQUESTED STORAGE       */
         L     @15,APRTSTG(,COMBASE)                            02S0438
         BALR  @14,@15                                          02S0438
*         END;                                                  02S0439
*       IF STATUS^=GOOD THEN                                    02S0440
@RF00425 CLI   STATUS,X'00'                                     02S0440
         BE    @RF00440                                         02S0440
*                                                               03S0441
*/*------------------------------------------------------------------*/
*/* PRINT A SYNTAX ERROR MESSAGE                                     */
*/*------------------------------------------------------------------*/
*                                                               03S0441
*         DO;                                                   03S0441
*           RESPECIFY                                           03S0442
*             R15 RESTRICTED;                                   03S0442
*           DELIMCD=0;              /* SET INVALID TO TERMINATE SCAN
*                                      OF CURRENT CONTROL CARD       */
         SLR   @14,@14                                          03S0443
         ST    @14,DELIMCD(,COMBASE)                            03S0443
*           GEN(USING SYNEPS,R15);                              03S0444
         USING SYNEPS,R15
*           R15=ASYNTAX;                                        03S0445
         L     R15,ASYNTAX(,COMBASE)                            03S0445
*           IF STATUS=INVALDLM THEN                             03S0446
         CLI   STATUS,X'01'                                     03S0446
         BNE   @RF00446                                         03S0446
*             MSGADDR=ADDR(DELIMR);                             03S0447
         LA    @14,DELIMR                                       03S0447
         ST    @14,MSGADDR                                      03S0447
*           ELSE                                                03S0448
*             IF STATUS=OPOMIT THEN                             03S0448
         B     @RC00446                                         03S0448
@RF00446 CLI   STATUS,X'02'                                     03S0448
         BNE   @RF00448                                         03S0448
*               MSGADDR=ADDR(OPMISR);                           03S0449
         LA    @14,OPMISR                                       03S0449
         ST    @14,MSGADDR                                      03S0449
*             ELSE                                              03S0450
*               IF STATUS=OPTOBIG THEN                          03S0450
         B     @RC00448                                         03S0450
@RF00448 CLI   STATUS,X'03'                                     03S0450
         BNE   @RF00450                                         03S0450
*                 MSGADDR=ADDR(TOBIGR);                         03S0451
         LA    @14,TOBIGR                                       03S0451
         ST    @14,MSGADDR                                      03S0451
*               ELSE                                            03S0452
*                 IF STATUS=INVALNUM THEN                       03S0452
         B     @RC00450                                         03S0452
@RF00450 CLI   STATUS,X'08'                                     03S0452
         BNE   @RF00452                                         03S0452
*                   MSGADDR=ADDR(BADNMR);                       03S0453
         LA    @14,BADNMR                                       03S0453
         ST    @14,MSGADDR                                      03S0453
*                 ELSE                                          03S0454
*                   MSGADDR=ADDR(SRNGE);                        03S0454
         B     @RC00452                                         03S0454
@RF00452 LA    @14,SRNGE                                        03S0454
         ST    @14,MSGADDR                                      03S0454
*           SYNMSGA=ADDR(MSGADDR);                              03S0455
@RC00452 DS    0H                                               03S0455
@RC00450 DS    0H                                               03S0455
@RC00448 DS    0H                                               03S0455
@RC00446 LA    @14,MSGADDR                                      03S0455
         ST    @14,SYNMSGA(,COMBASE)                            03S0455
*           IF STATUS=BADLAST THEN                              03S0456
         CLI   STATUS,X'0A'                                     03S0456
         BNE   @RF00456                                         03S0456
*             CALL SYNTAX;                                      03S0457
         BAL   @14,SYNTAX                                       03S0457
*           ELSE                                                03S0458
*             CALL SYNTAXA;                                     03S0458
         B     @RC00456                                         03S0458
@RF00456 BAL   @14,SYNTAXA                                      03S0458
*           RESPECIFY                                           03S0459
*             R15 UNRESTRICTED;                                 03S0459
@RC00456 DS    0H                                               03S0460
*         END;                                                  03S0460
*     END;                                                      02S0461
@RF00440 DS    0H                                               02S0462
*                                                               02S0462
*/*------------------------------------------------------------------*/
*/* RESTORE ERROR ROUTINE ADDRESSES, ETC AND EXIT                    */
*/*------------------------------------------------------------------*/
*                                                               02S0462
*   DO;                                                         02S0462
@RC00067 DS    0H                                               02S0463
*     IF ENVIRON=ON THEN                                        02S0463
         TM    ENVIRON,B'10000000'                              02S0463
         BNO   @RF00463                                         02S0463
*                                                               03S0464
*/*------------------------------------------------------------------*/
*/* ISSUE A MESSAGE IF THERE WAS SOMETHING WRONG WITH THE DUMP INPUT */
*/*------------------------------------------------------------------*/
*                                                               03S0464
*       DO;                                                     03S0464
*         RESPECIFY                                             03S0465
*          (R9,                                                 03S0465
*           R2) RESTRICTED;                                     03S0465
*         R9=APMX;                  /* GET ADDRESSABILITY TO MSG
*                                      CSECT                         */
         L     R9,APMX                                          03S0466
*         IF PRNTRL=ON&REALMAP=0 THEN/* REAL VERB AND NO REAL INPUT  */
         TM    PRNTRL(COMBASE),B'00001000'                      03S0467
         BNO   @RF00467                                         03S0467
         ICM   @08,15,REALMAP(COMBASE)                          03S0467
         BNZ   @RF00467                                         03S0467
*           DO;                                                 03S0468
*             R2=M252ILGT-4;                                    03S0469
         LA    @08,4                                            03S0469
         LH    R2,M252ILGT                                      03S0469
         SLR   R2,@08                                           03S0469
*             R1=ADDR(AMD252I)+4;                               03S0470
         LA    R1,AMD252I                                       03S0470
         ALR   R1,@08                                           03S0470
*             CALL PRTMSG;          /* ISSUE MSG TO SYSPRINT         */
         L     @15,APRTMSG(,COMBASE)                            03S0471
         BALR  @14,@15                                          03S0471
*             IF RDRSW=OFF THEN     /* TELL OPERATOR                 */
         TM    RDRSW(COMBASE),B'00000001'                       03S0472
         BNZ   @RF00472                                         03S0472
*               DO;                 /* WTOP MF(E,AMD252I)            */
*                 RFY                                           03S0474
*                   GPR01P RSTD;    /* RESTRICT REG 1                */
*                 GPR01P=ADDR(AMD252I);/* ADDRESS CONTROL PROGRAM
*                                      LIST                          */
         LA    GPR01P,AMD252I                                   03S0475
*                 SVC(35);          /* ISSUE WTO SVC                 */
         SVC   35                                               03S0476
*                 RFY                                           03S0477
*                   GPR01P UNRSTD;  /* RELEASE REG 1                 */
*               END;                /* WTOP MF(E,AMD252I)            */
*           END;                                                03S0479
*         ELSE                                                  03S0480
*           IF REALMAP=0&ASIDNDX=0 THEN/* NO DUMP INPUT              */
         B     @RC00467                                         03S0480
@RF00467 SLR   @08,@08                                          03S0480
         C     @08,REALMAP(,COMBASE)                            03S0480
         BNE   @RF00480                                         03S0480
         C     @08,ASIDNDX(,COMBASE)                            03S0480
         BNE   @RF00480                                         03S0480
*             DO;                                               03S0481
*               R2=M251ILGT-4;                                  03S0482
         LA    @08,4                                            03S0482
         LH    R2,M251ILGT                                      03S0482
         SLR   R2,@08                                           03S0482
*               R1=ADDR(AMD251I)+4;                             03S0483
         LA    R1,AMD251I                                       03S0483
         ALR   R1,@08                                           03S0483
*               CALL PRTMSG;        /* ISSUE MSG TO SYSPRINT         */
         L     @15,APRTMSG(,COMBASE)                            03S0484
         BALR  @14,@15                                          03S0484
*               IF RDRSW=OFF THEN   /* TELL OPERATOR                 */
         TM    RDRSW(COMBASE),B'00000001'                       03S0485
         BNZ   @RF00485                                         03S0485
*                 DO;               /* WTOP MF(E,AMD251I)            */
*                   RFY                                         03S0487
*                     GPR01P RSTD;  /* RESTRICT REG 1                */
*                   GPR01P=ADDR(AMD251I);/* ADDRESS CONTROL PROGRAM
*                                      LIST                          */
         LA    GPR01P,AMD251I                                   03S0488
*                   SVC(35);        /* ISSUE WTO SVC                 */
         SVC   35                                               03S0489
*                   RFY                                         03S0490
*                     GPR01P UNRSTD;/* RELEASE REG 1                 */
*                 END;              /* WTOP MF(E,AMD251I)            */
*             END;                                              03S0492
@RF00485 DS    0H                                               03S0493
*         RESPECIFY                                             03S0493
*          (R9,                                                 03S0493
*           R2) UNRESTRICTED;                                   03S0493
@RF00480 DS    0H                                               03S0493
@RC00467 DS    0H                                               03S0494
*       END;                                                    03S0494
*     BLNK(123)='00'X;              /* RESTORE TRT TABLE             */
@RF00463 MVI   BLNK+122(COMBASE),X'00'                          02S0495
*     TOPICHDR='';                  /* RESTORE FOR NEXT VERB         */
         MVI   TOPICHDR(COMBASE),C' '                           02S0496
         MVC   TOPICHDR+1(9,COMBASE),TOPICHDR(COMBASE)          02S0496
*     STOPEXIT=STOPSAVE;                                        02S0497
         MVC   STOPEXIT(4,COMBASE),STOPSAVE                     02S0497
*     RETURN;                                                   02S0498
@EL00001 L     @13,4(,@13)                                      02S0498
@EF00001 DS    0H                                               02S0498
@ER00001 LM    @14,@12,12(@13)                                  02S0498
         BR    @14                                              02S0498
*   END;                                                        02S0499
*                                                               01S0500
*/*------------------------------------------------------------------*/
*/* INTERNAL PROCEDURES                                              */
*/*------------------------------------------------------------------*/
*                                                               01S0500
*                                                               02S0500
*/*------------------------------------------------------------------*/
*/* GET THE ADDRESS RANGES SPECIFIED AND PUT THEM IN A TABLE         */
*/*------------------------------------------------------------------*/
*                                                               02S0500
*STORSCAN:                                                      02S0500
*   PROCEDURE;                                                  02S0500
STORSCAN STM   @14,@12,@SA00002                                 02S0500
*   OPSCAN=ON;                                                  02S0501
         OI    OPSCAN,B'01000000'                               02S0501
*   DO STOR=1 TO 15 WHILE OPSCAN=ON;                            02S0502
         LA    STOR,1                                           02S0502
@DL00502 TM    OPSCAN,B'01000000'                               02S0502
         BNO   @DC00502                                         02S0502
*     CALL DELIMSCN;                /* GET NEXT OPERAND              */
         BAL   @14,DELIMSCN                                     02S0503
*     IF DELIMCD=COMA               /* MORE OPERANDS TO COME         */
*         ×DELIMCD=RPAREN THEN      /* END OF STORAGE LIST           */
         L     @04,DELIMCD(,COMBASE)                            02S0504
         CH    @04,@CH00156                                     02S0504
         BE    @RT00504                                         02S0504
         CH    @04,@CH00213                                     02S0504
         BNE   @RF00504                                         02S0504
@RT00504 DS    0H                                               02S0505
*       DO;                                                     02S0505
*         IF OPSIZE=0 THEN          /* OPERAND WAS OMITTED           */
         LTR   OPSIZE,OPSIZE                                    02S0506
         BNZ   @RF00506                                         02S0506
*           DO;                                                 02S0507
*             STATUS=OPOMIT;                                    02S0508
         MVI   STATUS,X'02'                                     02S0508
*             OPSCAN=OFF;           /* TERMINATE SCANNING            */
         NI    OPSCAN,B'10111111'                               02S0509
*           END;                                                02S0510
*         ELSE                                                  02S0511
*           IF OPSIZE>6 THEN        /* OPERAND IS TO LONG            */
         B     @RC00506                                         02S0511
@RF00506 CH    OPSIZE,@CH00405                                  02S0511
         BNH   @RF00511                                         02S0511
*             DO;                                               02S0512
*               STATUS=OPTOBIG;                                 02S0513
         MVI   STATUS,X'03'                                     02S0513
*               OPSCAN=OFF;         /* TERMINATE SCAN                */
         NI    OPSCAN,B'10111111'                               02S0514
*             END;                                              02S0515
*           ELSE                                                02S0516
*             DO;                                               02S0516
         B     @RC00511                                         02S0516
@RF00511 DS    0H                                               02S0517
*               CALL NUMCHECK;      /* VALIDITY CHECK FOR NUMBER     */
         BAL   @14,NUMCHECK                                     02S0517
*               IF STATUS=GOOD THEN /* OPERAND IS OK                 */
         CLI   STATUS,X'00'                                     02S0518
         BNE   @RF00518                                         02S0518
*                 DO;                                           02S0519
*                   NUMPAIRS=STOR;                              02S0520
         ST    STOR,NUMPAIRS                                    02S0520
*                   LOWAD(STOR)=GOODNUM;                        02S0521
         LR    @15,STOR                                         02S0521
         SLA   @15,3                                            02S0521
         L     @00,GOODNUM                                      02S0521
         ST    @00,LOWAD-8(@15)                                 02S0521
*                   IF DELIMCD=RPAREN THEN                      02S0522
         CLC   DELIMCD(4,COMBASE),@CF00213                      02S0522
         BNE   @RF00522                                         02S0522
*                     DO;                                       02S0523
*                       HIAD(STOR)=DEFLTMAX;                    02S0524
         ST    DEFLTMAX,HIAD-8(@15)                             02S0524
*                       OPSCAN=OFF; /* TERMINATE SCAN                */
         NI    OPSCAN,B'10111111'                               02S0525
*                     END;                                      02S0526
*                 END;                                          02S0527
*               ELSE                /* INVALID NUMERIC               */
*                 OPSCAN=OFF;                                   02S0528
         B     @RC00518                                         02S0528
@RF00518 NI    OPSCAN,B'10111111'                               02S0528
*             END;                                              02S0529
*       END;                                                    02S0530
*     ELSE                          /* INVALID DELIMITER             */
*       DO;                                                     02S0531
         B     @RC00504                                         02S0531
@RF00504 DS    0H                                               02S0532
*         STATUS=INVALDLM;                                      02S0532
         MVI   STATUS,X'01'                                     02S0532
*         OPSCAN=OFF;                                           02S0533
         NI    OPSCAN,B'10111111'                               02S0533
*       END;                                                    02S0534
*     IF OPSCAN=ON THEN             /* GET SECOND HALF OF PAIR       */
@RC00504 TM    OPSCAN,B'01000000'                               02S0535
         BNO   @RF00535                                         02S0535
*       DO;                                                     02S0536
*         CALL DELIMSCN;                                        02S0537
         BAL   @14,DELIMSCN                                     02S0537
*         IF DELIMCD=COMA           /* MORE OPERANDS TO FOLLOW       */
*             ×DELIMCD=RPAREN THEN  /* END OF OPERANDS               */
         L     @04,DELIMCD(,COMBASE)                            02S0538
         CH    @04,@CH00156                                     02S0538
         BE    @RT00538                                         02S0538
         CH    @04,@CH00213                                     02S0538
         BNE   @RF00538                                         02S0538
@RT00538 DS    0H                                               02S0539
*           DO;                                                 02S0539
*             IF OPSIZE=0 THEN                                  02S0540
         LTR   OPSIZE,OPSIZE                                    02S0540
         BNZ   @RF00540                                         02S0540
*               HIAD(STOR)=DEFLTMAX;                            02S0541
         LR    @15,STOR                                         02S0541
         SLA   @15,3                                            02S0541
         ST    DEFLTMAX,HIAD-8(@15)                             02S0541
*             ELSE                                              02S0542
*               IF OPSIZE>6 THEN    /* OPERAND IS TOO BIG            */
         B     @RC00540                                         02S0542
@RF00540 CH    OPSIZE,@CH00405                                  02S0542
         BNH   @RF00542                                         02S0542
*                 DO;                                           02S0543
*                   STATUS=OPTOBIG;                             02S0544
         MVI   STATUS,X'03'                                     02S0544
*                   OPSCAN=OFF;     /* TERMINATE SCAN                */
         NI    OPSCAN,B'10111111'                               02S0545
*                 END;                                          02S0546
*               ELSE                                            02S0547
*                 DO;                                           02S0547
         B     @RC00542                                         02S0547
@RF00542 DS    0H                                               02S0548
*                   CALL NUMCHECK;  /* VALIDITY CHECK NUMBER         */
         BAL   @14,NUMCHECK                                     02S0548
*                   IF STATUS=GOOD THEN                         02S0549
         CLI   STATUS,X'00'                                     02S0549
         BNE   @RF00549                                         02S0549
*                     DO;                                       02S0550
*                       HIAD(STOR)=GOODNUM;                     02S0551
         LR    @15,STOR                                         02S0551
         SLA   @15,3                                            02S0551
         L     @00,GOODNUM                                      02S0551
         ST    @00,HIAD-8(@15)                                  02S0551
*                     END;                                      02S0552
*                   ELSE                                        02S0553
*                     OPSCAN=OFF;                               02S0553
         B     @RC00549                                         02S0553
@RF00549 NI    OPSCAN,B'10111111'                               02S0553
*                 END;                                          02S0554
@RC00549 DS    0H                                               02S0555
*             IF DELIMCD=RPAREN THEN                            02S0555
@RC00542 DS    0H                                               02S0555
@RC00540 CLC   DELIMCD(4,COMBASE),@CF00213                      02S0555
         BNE   @RF00555                                         02S0555
*               OPSCAN=OFF;         /* ALL DONE                      */
         NI    OPSCAN,B'10111111'                               02S0556
*           END;                                                02S0557
*         ELSE                                                  02S0558
*           STATUS=INVALDLM;                                    02S0558
         B     @RC00538                                         02S0558
@RF00538 MVI   STATUS,X'01'                                     02S0558
*       END;                                                    02S0559
@RC00538 DS    0H                                               02S0560
*     IF STATUS=GOOD&HIAD(STOR)^>LOWAD(STOR) THEN               02S0560
@RF00535 CLI   STATUS,X'00'                                     02S0560
         BNE   @RF00560                                         02S0560
         LR    @15,STOR                                         02S0560
         SLA   @15,3                                            02S0560
         L     @00,HIAD-8(@15)                                  02S0560
         C     @00,LOWAD-8(@15)                                 02S0560
         BH    @RF00560                                         02S0560
*       DO;                                                     02S0561
*         STATUS=BADSRNGE;          /* INVALID RANGE SPECIFIED       */
         MVI   STATUS,X'09'                                     02S0562
*         OPSCAN=OFF;               /* TERMINATE SCAN                */
         NI    OPSCAN,B'10111111'                               02S0563
*       END;                                                    02S0564
*   END;                                                        02S0565
@RF00560 AH    STOR,@CH00076                                    02S0565
         CH    STOR,@CH00055                                    02S0565
         BNH   @DL00502                                         02S0565
@DC00502 DS    0H                                               02S0566
*   IF STATUS=GOOD THEN             /* CHECK LAST DELIMITER          */
         CLI   STATUS,X'00'                                     02S0566
         BNE   @RF00566                                         02S0566
*     DO;                                                       02S0567
*       CALL DELIMSCN;                                          02S0568
         BAL   @14,DELIMSCN                                     02S0568
*       IF DELIMCD^=BLANK&DELIMCD^=COMA THEN/* INVALID DELIMITER     */
         L     @04,DELIMCD(,COMBASE)                            02S0569
         CH    @04,@CH00240                                     02S0569
         BE    @RF00569                                         02S0569
         CH    @04,@CH00156                                     02S0569
         BE    @RF00569                                         02S0569
*         STATUS=BADLAST;                                       02S0570
         MVI   STATUS,X'0A'                                     02S0570
*       ELSE                        /* DELIMITER IS OK               */
*         IF OPSIZE^=0 THEN         /* DELIMITER DOES NOT FOLLOW
*                                      RPAREN                        */
         B     @RC00569                                         02S0571
@RF00569 LTR   OPSIZE,OPSIZE                                    02S0571
         BZ    @RF00571                                         02S0571
*           STATUS=BADLAST;                                     02S0572
         MVI   STATUS,X'0A'                                     02S0572
*     END;                                                      02S0573
*   END STORSCAN;                                               02S0574
@EL00002 DS    0H                                               02S0574
@EF00002 DS    0H                                               02S0574
@ER00002 LM    @14,@12,@SA00002                                 02S0574
         BR    @14                                              02S0574
*                                                               02S0575
*/*------------------------------------------------------------------*/
*/* CHECK TO SEE IF ASID IS IN THE PROPER FORMAT                     */
*/*------------------------------------------------------------------*/
*                                                               02S0575
*ASIDCHK:                                                       02S0575
*   PROCEDURE;                                                  02S0575
ASIDCHK  STM   @14,@12,@SA00003                                 02S0575
*   IF OPSIZE=0 THEN                /* ASID WAS OMITTED              */
         LTR   OPSIZE,OPSIZE                                    02S0576
         BNZ   @RF00576                                         02S0576
*     STATUS=ASIDMISS;                                          02S0577
         MVI   STATUS,X'05'                                     02S0577
*   ELSE                            /* OZ09684                       */
*     IF OPERAND(1:5)='NONUC'×      /* NONUC ENTERED OR OZ09684      */
*         OPERAND(1:5)='NOCOM' THEN /* NOCOM ENTERED OZ09684         */
         B     @RC00576                                         02S0578
@RF00576 L     @04,KYWDBGN(,COMBASE)                            02S0578
         CLC   OPERAND(5,@04),@CC00659                          02S0578
         BE    @RT00578                                         02S0578
         CLC   OPERAND(5,@04),@CC00660                          02S0578
         BNE   @RF00578                                         02S0578
@RT00578 DS    0H                                               02S0579
*       DO;                         /* OZ09684                       */
*         IF OPSIZE^=5 THEN         /* FIELD NOT 5 IT MUST BE OZ09684*/
         CH    OPSIZE,@CH00154                                  02S0580
         BE    @RF00580                                         02S0580
*           STATUS=INVALNUM;        /* INVALID OZ09684               */
         MVI   STATUS,X'08'                                     02S0581
*         ELSE                      /* OZ09684                       */
*           DO;                     /* OMIT VERB ENTERED OZ09684     */
         B     @RC00580                                         02S0582
@RF00580 DS    0H                                               02S0583
*             IF OPERAND(1:5)='NONUC' THEN/* NONUC ENTERED OZ09684   */
         L     @04,KYWDBGN(,COMBASE)                            02S0583
         CLC   OPERAND(5,@04),@CC00659                          02S0583
         BNE   @RF00583                                         02S0583
*               A1NUC=ON;           /* INDICATE OMIT NUCLEUS OZ09684 */
         OI    A1NUC,B'10000000'                                02S0584
*             ELSE                  /* OZ09684                       */
*               IF OPERAND(1:5)='NOCOM' THEN/* NOCOM ENTERED OZ09684 */
         B     @RC00583                                         02S0585
@RF00583 L     @04,KYWDBGN(,COMBASE)                            02S0585
         CLC   OPERAND(5,@04),@CC00660                          02S0585
         BNE   @RF00585                                         02S0585
*                 A1COM=ON;         /* INDICATE OMIT COMMON AREA
*                                      OZ09684                       */
         OI    A1COM,B'10000000'                                02S0586
*           END;                    /* OMIT VERB ENTERED OZ09684     */
*       END;                        /* OZ09684                       */
*     ELSE                          /* OZ09684                       */
*       IF OPSIZE>ASIDLGT THEN      /* ASID IS TOO LONG              */
         B     @RC00578                                         02S0589
@RF00578 CH    OPSIZE,@CH00156                                  02S0589
         BNH   @RF00589                                         02S0589
*         STATUS=ASIDBIG;                                       02S0590
         MVI   STATUS,X'06'                                     02S0590
*       ELSE                                                    02S0591
*         DO;                                                   02S0591
         B     @RC00589                                         02S0591
@RF00589 DS    0H                                               02S0592
*           CALL NUMCHECK;                                      02S0592
         BAL   @14,NUMCHECK                                     02S0592
*           IF STATUS=GOOD THEN                                 02S0593
         CLI   STATUS,X'00'                                     02S0593
         BNE   @RF00593                                         02S0593
*             DO;                                               02S0594
*               THISASID=GOODNUM;                               02S0595
         L     @04,GOODNUM                                      02S0595
         STH   @04,THISASID                                     02S0595
*               IF THISASID=0×THISASID=ASIDFFFF THEN            02S0596
         LTR   @04,@04                                          02S0596
         BZ    @RT00596                                         02S0596
         CLC   THISASID(2),@CB00467                             02S0596
         BNE   @RF00596                                         02S0596
@RT00596 DS    0H                                               02S0597
*                 STATUS=ASIDNOTL;                              02S0597
         MVI   STATUS,X'07'                                     02S0597
*             END;                                              02S0598
*         END;                                                  02S0599
*   END ASIDCHK;                                                02S0600
@EL00003 DS    0H                                               02S0600
@EF00003 DS    0H                                               02S0600
@ER00003 LM    @14,@12,@SA00003                                 02S0600
         BR    @14                                              02S0600
*                                                               02S0601
*/*------------------------------------------------------------------*/
*/* THIS ROUTINE CHECKS TO SEE IF AN ADDRESS OR AN ASID IS A VALID   */
*/* NUMBER.                                                          */
*/*------------------------------------------------------------------*/
*                                                               02S0601
*NUMCHECK:                                                      02S0601
*   PROCEDURE;                                                  02S0601
NUMCHECK STM   @14,@12,12(@13)                                  02S0601
*   DO NUM=1 TO OPSIZE WHILE STATUS=GOOD;/* CHECK EACH DIGIT         */
         LA    NUM,1                                            02S0602
         B     @DE00602                                         02S0602
@DL00602 CLI   STATUS,X'00'                                     02S0602
         BNE   @DC00602                                         02S0602
*     IF OPERAND(NUM)>='0'&OPERAND(NUM)<='9'×OPERAND(NUM)>='A'&OPERAND(
*         NUM)<='F' THEN                                        02S0603
         L     @04,KYWDBGN(,COMBASE)                            02S0603
         LR    @03,@04                                          02S0603
         ALR   @03,NUM                                          02S0603
         AL    @03,@CF00705                                     02S0603
         CLI   OPERAND(@03),C'0'                                02S0603
         BL    @GL00031                                         02S0603
         ALR   @04,NUM                                          02S0603
         AL    @04,@CF00705                                     02S0603
         CLI   OPERAND(@04),C'9'                                02S0603
         BNH   @RT00603                                         02S0603
@GL00031 L     @04,KYWDBGN(,COMBASE)                            02S0603
         LR    @03,@04                                          02S0603
         ALR   @03,NUM                                          02S0603
         AL    @03,@CF00705                                     02S0603
         CLI   OPERAND(@03),C'A'                                02S0603
         BL    @RF00603                                         02S0603
         ALR   @04,NUM                                          02S0603
         AL    @04,@CF00705                                     02S0603
         CLI   OPERAND(@04),C'F'                                02S0603
         BNH   @RT00603                                         02S0603
*       ;                           /* GOOD NUMBER                   */
*     ELSE                          /* INPUT IS NOT NUMERIC          */
*       STATUS=INVALNUM;                                        02S0605
@RF00603 MVI   STATUS,X'08'                                     02S0605
*   END;                                                        02S0606
@RT00603 AH    NUM,@CH00076                                     02S0606
@DE00602 CR    NUM,OPSIZE                                       02S0606
         BNH   @DL00602                                         02S0606
@DC00602 DS    0H                                               02S0607
*   IF STATUS=GOOD THEN             /* CONVERT NUMBER TO BINARY      */
         CLI   STATUS,X'00'                                     02S0607
         BNE   @RF00607                                         02S0607
*     DO;                                                       02S0608
*       TR(OPERAND(1:OPSIZE),HEXTABL);                          02S0609
         L     @04,KYWDBGN(,COMBASE)                            02S0609
         LR    @15,OPSIZE                                       02S0609
         BCTR  @15,0                                            02S0609
         EX    @15,@SB00706                                     02S0609
*       CHARWORK='      ';                                      02S0610
         MVC   CHARWORK(6),@CC00668                             02S0610
*       CHARWORK((7-OPSIZE):6)=OPERAND(1:OPSIZE);               02S0611
         LA    @15,7                                            02S0611
         SLR   @15,OPSIZE                                       02S0611
         LA    @14,CHARWORK-1(@15)                              02S0611
         LCR   @15,@15                                          02S0611
         AH    @15,@CH00405                                     02S0611
         EX    @15,@SM00708                                     02S0611
*       PACK(THISNUM2,CHARWORK);                                02S0612
         PACK  THISNUM2(4),CHARWORK(6)                          02S0612
*       MVO(THISNUM3,THISNUM2);                                 02S0613
         MVO   THISNUM3(5),THISNUM2(4)                          02S0613
*     END;                                                      02S0614
*   END NUMCHECK;                                               02S0615
@EL00004 DS    0H                                               02S0615
@EF00004 DS    0H                                               02S0615
@ER00004 LM    @14,@12,12(@13)                                  02S0615
         BR    @14                                              02S0615
*                                                               02S0616
*/*------------------------------------------------------------------*/
*/* ROUTINE TO SCAN FOR THE NEXT DELIMITER AND RETURN THE SIZE       */
*/* AND ADDRESS OF THE OPERAND                                       */
*/*------------------------------------------------------------------*/
*                                                               02S0616
*DELIMSCN:                                                      02S0616
*   PROCEDURE;                                                  02S0616
DELIMSCN STM   @14,@04,12(@13)                                  02S0616
         STM   @06,@12,44(@13)                                  02S0616
*   RESPECIFY                                                   02S0617
*    (R2,                                                       02S0617
*     R0) RESTRICTED;                                           02S0617
*   KYWDBGN=KYWDEND+1;              /* START WITH CHAR AFTER LAST
*                                      DELIM                         */
         LA    @04,1                                            02S0618
         AL    @04,KYWDEND(,COMBASE)                            02S0618
         ST    @04,KYWDBGN(,COMBASE)                            02S0618
*   R1=0;                                                       02S0619
         SLR   @04,@04                                          02S0619
         LR    R1,@04                                           02S0619
*   R2=0;                                                       02S0620
         LR    R2,@04                                           02S0620
*   TRT(OPERAND,BLNK);              /* SCAN FOR DELIMITER            */
         L     @03,KYWDBGN(,COMBASE)                            02S0621
         TRT   OPERAND(68,@03),BLNK(COMBASE)                    02S0621
*   KYWDEND=R1;                     /* ADDRESS OF DELIMITER          */
         ST    R1,KYWDEND(,COMBASE)                             02S0622
*   DELIMCD=R2;                     /* DELIMITER CODE NUMBER         */
         ST    R2,DELIMCD(,COMBASE)                             02S0623
*   OPSIZE=KYWDEND-KYWDBGN;         /* SIZE OF THE OPERAND           */
         L     @03,KYWDEND(,COMBASE)                            02S0624
         SL    @03,KYWDBGN(,COMBASE)                            02S0624
         LR    OPSIZE,@03                                       02S0624
*   RESPECIFY                                                   02S0625
*    (R2,                                                       02S0625
*     R0) UNRESTRICTED;                                         02S0625
*   RETURN;                                                     02S0626
@EL00005 DS    0H                                               02S0626
@EF00005 DS    0H                                               02S0626
@ER00005 LM    @14,@04,12(@13)                                  02S0626
         LM    @06,@12,44(@13)                                  02S0626
         BR    @14                                              02S0626
*   END DELIMSCN;                                               02S0627
*                                                               02S0628
*/*------------------------------------------------------------------*/
*/* PMSSTOP IS ENTERED ASYNCHRONOUSLY AFTER A BRWRITE IF THE OPER    */
*/* REQUESTED THAT PRDMP STOP PROCESSING                             */
*/*------------------------------------------------------------------*/
*                                                               02S0628
*PMSSTOP:                                                       02S0628
*   GENERATE REFS(PMSSAVE);                                     02S0628
PMSSTOP  DS    0H                                               02S0628
              USING *,R15         SET UP ADDRESSABILITY
              L     R13,PMSSAVE
              LM    R14,R12,12(R13)
              DROP R15
*   DO WHILE PCBPTR^=0;             /* PURGE THE PCB QUEUE           */
         B     @DE00629                                         02S0629
@DL00629 DS    0H                                               02S0630
*     R1=ADDR(PCBPL);                                           02S0630
         LA    R1,PCBPL                                         02S0630
*     PCBPFUNC=PCBPDEQ;                                         02S0631
         OI    PCBPFUNC,B'10000000'                             02S0631
*     CALL AMDPRPCB;                                            02S0632
         L     @15,APCBENQ(,COMBASE)                            02S0632
         BALR  @14,@15                                          02S0632
*   END;                                                        02S0633
@DE00629 ICM   @00,15,PCBPTR(COMBASE)                           02S0633
         BNZ   @DL00629                                         02S0633
*   STOPEXIT=STOPSAVE;              /* RESTORE PREVIOUS STOP RTN     */
         L     @15,STOPSAVE                                     02S0634
         ST    @15,STOPEXIT(,COMBASE)                           02S0634
*   RESPECIFY                                                   02S0635
*     R15 RESTRICTED;                                           02S0635
*   R15=STOPSAVE;                   /* ADDRESS OF PREVIOUS STOP EXIT */
         L     @14,STOPSAVE                                     02S0636
         LR    R15,@14                                          02S0636
*   GO TO R15;                      /* PERCOLATE TO PREVIOUS STOP
*                                      EXIT                          */
         BR    R15                                              02S0637
*   RESPECIFY                                                   02S0638
*     R15 UNRESTRICTED;                                         02S0638
*                                                               01S0639
*/*------------------------------------------------------------------*/
*/* THE FOLLOWING DECLARES ARE GENERATED BY THE EPILOG MACRO AND     */
*/* ARE USED BY ANY PLS VERSIONS OF SYSTEM MACROS                    */
*/*------------------------------------------------------------------*/
*                                                               01S0639
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR01P PTR(31) REG(1);                                    01S0639
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                    01S0640
*     I031F FIXED(31) BASED,                                    01S0640
*     I031P PTR(31) BASED,                                      01S0640
*     I015F FIXED(15) BASED,                                    01S0640
*     I015P PTR(15) BASED,                                      01S0640
*     I008P PTR(8) BASED,                                       01S0640
*     I001C CHAR(1) BASED;                                      01S0640
*   END AMDPRPMS                                                01S0641
*                                                               01S0641
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSUT5  (PROLOG  )                                       */
*/*%INCLUDE SYSUT5  (DECLARES)                                       */
*/*%INCLUDE SYSLIB  (COMMON  )                                       */
*/*%INCLUDE SYSLIB  (AMDPCBPL)                                       */
*/*%INCLUDE SYSUT5  (INIT    )                                       */
*/*%INCLUDE SYSUT5  (GETBNDS )                                       */
*/*%INCLUDE SYSUT5  (DEFALTID)                                       */
*/*%INCLUDE SYSUT5  (DEFALTID)                                       */
*/*%INCLUDE SYSUT5  (ALLSTOR )                                       */
*/*%INCLUDE SYSUT5  (ALLSTOR )                                       */
*/*%INCLUDE SYSUT5  (ALLSTOR )                                       */
*/*%INCLUDE SYSUT5  (GETASIDS)                                       */
*/*%INCLUDE SYSUT5  (ASIDEND )                                       */
*/*%INCLUDE SYSUT5  (BREAKOUT)                                       */
*/*%INCLUDE SYSUT5  (PRNTSTOR)                                       */
*/*%INCLUDE SYSUT5  (IDINDUMP)                                       */
*/*%INCLUDE SYSUT5  (ASIDMSG )                                       */
*/*%INCLUDE SYSUT5  (ASIDHDR )                                       */
*/*%INCLUDE SYSUT5  (VIRTERR )                                       */
*/*%INCLUDE SYSUT5  (PRNTREAL)                                       */
*/*%INCLUDE SYSUT5  (REALERR )                                       */
*/*%INCLUDE SYSUT5  (CLEANUP )                                       */
*/*%INCLUDE SYSUT5  (ENVIRONM)                                       */
*/*%INCLUDE SYSUT5  (STORSCAN)                                       */
*/*%INCLUDE SYSUT5  (ASIDCHK )                                       */
*/*%INCLUDE SYSUT5  (NUMCHECK)                                       */
*/*%INCLUDE SYSUT5  (DELIMSCN)                                       */
*/*%INCLUDE SYSUT5  (PMSSTOP )                                       */
*                                                               01S0641
*       ;                                                       01S0641
@DATA    DS    0H
@CH00057 DC    H'2'
@CH00156 DC    H'4'
@CH00154 DC    H'5'
@CH00405 DC    H'6'
@CH00240 DC    H'12'
@CH00055 DC    H'15'
@CH00366 DC    H'18'
@SB00706 TR    OPERAND(0,@04),HEXTABL(COMBASE)
@SM00708 MVC   0(0,@14),OPERAND(@04)
         DS    0F
@SA00001 DS    18F
@SA00003 DS    15F
@SA00002 DS    15F
         DS    0F
@CF00076 DC    F'1'
@CH00076 EQU   @CF00076+2
@CF00043 DC    F'8'
@CF00183 DC    F'16'
@CF00213 DC    F'20'
@CH00213 EQU   @CF00213+2
@CF00222 DC    F'24'
@CF00705 DC    F'-1'
@CF00465 DC    XL4'00FFFFFF'
         DS    0D
GOODNUM  DS    AL4
         ORG   GOODNUM
THISNUM3 DS    CL5
         ORG   GOODNUM+5
         DS    CL3
PMSSAVE  DS    A
STOPSAVE DS    A
MSGADDR  DS    A
@CC00668 DC    C'      '
@CC00659 DC    C'NONUC'
@CC00660 DC    C'NOCOM'
@CC00460 DC    C'ASID'
@CB00467 DC    X'FFFF'
@CB00644 DC    X'FFFD'
@CB00645 DC    X'FFFE'
         DS    CL2
PCBPL    DS    CL12
         ORG   PCBPL
PCBPBGN  DS    AL4
PCBPEND  DS    AL4
PCBPASID DS    BL2
PCBPFLG1 DS    CL1
         ORG   PCBPFLG1
PCBPVIRT DS    BL1
PCBPREAL EQU   PCBPFLG1+0
PCBPLOWC EQU   PCBPFLG1+0
PCBPTOPC EQU   PCBPFLG1+0
@NM00049 EQU   PCBPFLG1+0
         ORG   PCBPL+11
PCBPFLG2 DS    CL1
         ORG   PCBPFLG2
PCBPFUNC DS    BL1
@NM00050 EQU   PCBPFLG2+0
         ORG   PCBPL+12
STATUS   DS    CL1
SWITCHES DS    CL1
         ORG   SWITCHES
ENVIRON  DS    BL1
OPSCAN   EQU   SWITCHES+0
ASIDSCN  EQU   SWITCHES+0
TITLSW   EQU   SWITCHES+0
ASIDTHER EQU   SWITCHES+0
ASIDFND  EQU   SWITCHES+0
ASIDNOTF EQU   SWITCHES+0
ASIDSRCH EQU   SWITCHES+0
         ORG   SWITCHES+1
PMSVTITL DC    CL57'* * * *  V I R T U A L  S T O R A G E  P R I N T  *C
                * * *'
PMSRTITL DC    CL52'* * * *  R E A L  S T O R A G E  P R I N T  * * * *C
               '
HDRSAVE  DC    CL10' '
         DS    CL3
TABLASID DS    CL124
         ORG   TABLASID
NUMASID  DS    FL4
@NM00052 DS    CL4
         ORG   @NM00052+0
STASID   DS    BL2
ENDASID  DS    BL2
         ORG   TABLASID+124
TABLADS  DS    CL124
         ORG   TABLADS
NUMPAIRS DS    FL4
@NM00053 DS    CL8
         ORG   @NM00053+0
LOWAD    DS    AL4
HIAD     DS    AL4
         ORG   TABLADS+124
TABLLOW  DS    CL124
         ORG   TABLLOW
NUMLOW   DS    FL4
@NM00054 DS    CL8
         ORG   @NM00054+0
LOSTART  DS    AL4
LOEND    DS    AL4
         ORG   TABLLOW+124
TABLMID  DS    CL84
         ORG   TABLMID
NUMMID   DS    FL4
@NM00055 DS    CL8
         ORG   @NM00055+0
MIDSTART DS    AL4
MIDEND   DS    AL4
         ORG   TABLMID+84
TABLHI   DS    CL84
         ORG   TABLHI
NUMHI    DS    FL4
@NM00056 DS    CL8
         ORG   @NM00056+0
HISTART  DS    AL4
HIEND    DS    AL4
         ORG   TABLHI+84
ASID     DS    BL2
NUCLEUS  DC    CL7'NUCLEUS'
ASIDCHAR DC    CL4'ASID'
COMMN    DC    CL6'COMMON'
         DS    CL1
THISASID DS    BL2
CHARWORK DS    CL6
THISNUM2 DS    CL4
DELIMR   DS    CL47
         ORG   DELIMR
DELIMR01 DC    H'43'
DELIMR02 DC    B'1000000000000000'
DELIMR03 DC    CL39'        DELIMITER ERROR IN REAL OPERAND'
DELIMR04 DC    B'0000001000000000'
DELIMR05 DC    B'0100000000000000'
         ORG   DELIMR+47
         DS    CL1
DELIMS   DS    CL50
         ORG   DELIMS
DELIMS01 DC    H'46'
DELIMS02 DC    B'1000000000000000'
DELIMS03 DC    CL42'        DELIMITER ERROR IN STORAGE OPERAND'
DELIMS04 DC    B'0000001000000000'
DELIMS05 DC    B'0100000000000000'
         ORG   DELIMS+50
         DS    CL2
TOBIGS   DS    CL56
         ORG   TOBIGS
TOBIGS01 DC    H'52'
TOBIGS02 DC    B'1000000000000000'
TOBIGS03 DC    CL48'        LENGTH OF STORAGE ADDRESS GREATER THAN 6'
TOBIGS04 DC    B'0000001000000000'
TOBIGS05 DC    B'0100000000000000'
         ORG   TOBIGS+56
TOBIGR   DS    CL53
         ORG   TOBIGR
TOBIGR01 DC    H'49'
TOBIGR02 DC    B'1000000000000000'
TOBIGR03 DC    CL45'        LENGTH OF REAL ADDRESS GREATER THAN 6'
TOBIGR04 DC    B'0000001000000000'
TOBIGR05 DC    B'0100000000000000'
         ORG   TOBIGR+53
         DS    CL3
OPMISS   DS    CL51
         ORG   OPMISS
OPMISS01 DC    H'47'
OPMISS02 DC    B'1000000000000000'
OPMISS03 DC    CL43'        STARTING OMITTED IN STORAGE OPERAND'
OPMISS04 DC    B'0000001000000000'
OPMISS05 DC    B'0100000000000000'
         ORG   OPMISS+51
         DS    CL1
OPMISR   DS    CL48
         ORG   OPMISR
OPMISR01 DC    H'44'
OPMISR02 DC    B'1000000000000000'
OPMISR03 DC    CL40'        STARTING OMITTED IN REAL OPERAND'
OPMISR04 DC    B'0000001000000000'
OPMISR05 DC    B'0100000000000000'
         ORG   OPMISR+48
BADNMR   DS    CL47
         ORG   BADNMR
BADNMR01 DC    H'43'
BADNMR02 DC    B'1000000000000000'
BADNMR03 DC    CL39'        INVALID NUMERIC IN REAL OPERAND'
BADNMR04 DC    B'0000001000000000'
BADNMR05 DC    B'0100000000000000'
         ORG   BADNMR+47
         DS    CL1
BADNMS   DS    CL50
         ORG   BADNMS
BADNMS01 DC    H'46'
BADNMS02 DC    B'1000000000000000'
BADNMS03 DC    CL42'        INVALID NUMERIC IN STORAGE OPERAND'
BADNMS04 DC    B'0000001000000000'
BADNMS05 DC    B'0100000000000000'
         ORG   BADNMS+50
         DS    CL2
SRNGE    DS    CL64
         ORG   SRNGE
SRNGE01  DC    H'60'
SRNGE02  DC    B'1000000000000000'
SRNGE03  DC    CL56'        STARTING ADDRESS IS NOT LESS THAN ENDING ADC
               DRESS'
SRNGE04  DC    B'0000001000000000'
SRNGE05  DC    B'0100000000000000'
         ORG   SRNGE+64
ASNOTL   DS    CL45
         ORG   ASNOTL
ASNOTL01 DC    H'41'
ASNOTL02 DC    B'1000000000000000'
ASNOTL03 DC    CL37'        ASID 0 OR FFFF IS NOT ALLOWED'
ASNOTL04 DC    B'0000001000000000'
ASNOTL05 DC    B'0100000000000000'
         ORG   ASNOTL+45
         DS    CL3
BGASID   DS    CL48
         ORG   BGASID
BGASID01 DC    H'44'
BGASID02 DC    B'1000000000000000'
BGASID03 DC    CL40'        LENGTH OF ASID IS GREATER THAN 4'
BGASID04 DC    B'0000001000000000'
BGASID05 DC    B'0100000000000000'
         ORG   BGASID+48
ARNGE    DS    CL70
         ORG   ARNGE
ARNGE01  DC    H'66'
ARNGE02  DC    B'1000000000000000'
ARNGE03  DC    CL62'        STARTING ASID IS NOT LESS THAN OR EQUAL TO C
               ENDING ASID'
ARNGE04  DC    B'0000001000000000'
ARNGE05  DC    B'0100000000000000'
         ORG   ARNGE+70
         DS    CL2
ASMISS   DS    CL38
         ORG   ASMISS
ASMISS01 DC    H'34'
ASMISS02 DC    B'1000000000000000'
ASMISS03 DC    CL30'        ASID OMITTED FROM LIST'
ASMISS04 DC    B'0000001000000000'
ASMISS05 DC    B'0100000000000000'
         ORG   ASMISS+38
A1NUC    DC    B'00000000'
A1COM    DC    B'00000000'
PATCH    DC    70F'0'
AMDPRPMS CSECT
*
DTAE     EQU   32                  DATA EBCDIC BIT
DTAC     EQU   16                  DATA IN CORE BIT
DTAP     EQU   8                   DATA PTR BIT
DTA      EQU   4                   DATA INCLUDED BIT
LBLP     EQU   2                   LABEL PTR BIT
LBL      EQU   1                   LABEL INCLUDED BIT
AMDPRPMS CSECT
         SYNEPS
AMDPRPMS CSECT
APMX     DC   V(AMDPRPMX)
AMDPRPMX CSECT
AMD251I  WTO   'AMD251I INPUT FILE DOES NOT CONTAIN A REAL OR VIRTUAL DX
               UMP',MF=L,ROUTCDE=(2),DESC=7
AMD252I  WTO   'AMD252I INPUT FILE DOES NOT CONTAIN A REAL DUMP',MF=L, X
               ROUTCDE=(2),DESC=7
AMD282I  WTO   'AMD282I SOME ASIDS COULD NOT BE FOUND',MF=L,           *
               ROUTCDE=(2),DESC=7
AMD295I  WTO   'AMD295I NONE OF THE SPECIFIED ASIDS COULD BE FOUND',   *
               MF=L,ROUTCDE=(2),DESC=7
AMDPRPMS CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
DEFLTMAX EQU   @03
REAL     EQU   @02
SRCH     EQU   @05
STOR     EQU   @02
BRK      EQU   @02
NUM      EQU   @02
ANTRY    EQU   @03
HI       EQU   @02
MID      EQU   @02
LOW      EQU   @02
LOWBOUND EQU   @07
HIBOUND  EQU   @06
OPSIZE   EQU   @05
ASMAPPTR EQU   @02
INDXADDR EQU   @02
BASE1    EQU   @11
BASE2    EQU   @10
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R9       EQU   @09
R13      EQU   @13
R15      EQU   @15
COMBASE  EQU   @12
GPR01P   EQU   @01
BASE3    EQU   @09
BUFREG   EQU   @06
CNTREG   EQU   @03
LINEREG  EQU   @08
PREG     EQU   @01
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R14      EQU   @14
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
STOPBASE EQU   @05
COMMON   EQU   0
KYWDBGN  EQU   COMMON+12
KYWDEND  EQU   COMMON+16
DELIMCD  EQU   COMMON+20
NUCTOP   EQU   COMMON+32
CURBUF   EQU   COMMON+48
PCBPTR   EQU   COMMON+60
SWA      EQU   COMMON+122
RDRSW    EQU   SWA
SWB      EQU   COMMON+123
SWC      EQU   COMMON+124
SWD      EQU   COMMON+125
FLSHMODE EQU   SWD
GPRSFND  EQU   SWD
SWE      EQU   COMMON+126
SWF      EQU   COMMON+127
BUFSW    EQU   COMMON+128
PRSW     EQU   COMMON+129
PRNTRL   EQU   PRSW
TABLE    EQU   COMMON+659
HEXTABL  EQU   TABLE+63
EBCTABL  EQU   HEXTABL+10
BLNK     EQU   COMMON+988
AWRITE   EQU   COMMON+1500
APRTMSG  EQU   COMMON+1504
ASYNTAX  EQU   COMMON+1508
STOPEXIT EQU   COMMON+1528
SYNMSGA  EQU   COMMON+1532
APCBENQ  EQU   COMMON+1560
APRTSTG  EQU   COMMON+1572
DCBADDRS EQU   COMMON+1608
@NM00042 EQU   DCBADDRS+16
@NM00043 EQU   @NM00042
REALMAP  EQU   COMMON+1644
REALMAX  EQU   COMMON+1652
QASID    EQU   COMMON+1664
ASIDNDX  EQU   COMMON+1968
ASCBMAP  EQU   COMMON+1976
TOPICHDR EQU   COMMON+2060
CSADDR   EQU   COMMON+2072
ASIDLIST EQU   0
ASDXLNK  EQU   ASIDLIST
ASDXASID EQU   ASIDLIST+4
ASCBPREF EQU   0
ASCBNUM  EQU   ASCBPREF+4
ASMAPENT EQU   0
MAPASID  EQU   ASMAPENT
TITLVPLC EQU   0
TITLRPLC EQU   0
TOPICPLC EQU   0
OPERAND  EQU   0
AMDPRDPS EQU   0
PRTMSG   EQU   0
AMDPRPCB EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
LASTDLM  EQU   0
ASIDPLC  EQU   HDRSAVE+5
FRSTIDH  EQU   PCBPASID
M251ILGT EQU   AMD251I
M252ILGT EQU   AMD252I
M282ILGT EQU   AMD282I
M295ILGT EQU   AMD295I
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00051 EQU   ASCBPREF+6
ASCBTAB  EQU   ASCBPREF
ASDXMAP  EQU   ASIDLIST+40
@NM00048 EQU   COMMON+2070
DFLTCSA  EQU   COMMON+2056
LPAMAX   EQU   COMMON+2052
DNUCTOP  EQU   COMMON+2048
XLMAX    EQU   COMMON+2044
DQEMAX   EQU   COMMON+2042
ASCBMAX  EQU   COMMON+2040
TCBMAX   EQU   COMMON+2038
SRBMAX   EQU   COMMON+2036
DDMAX    EQU   COMMON+2034
DEBMAX   EQU   COMMON+2032
JPQMAX   EQU   COMMON+2030
LLEMAX   EQU   COMMON+2028
PQEMAX   EQU   COMMON+2026
RBMAX    EQU   COMMON+2024
@NM00047 EQU   COMMON+2023
EXITFLAG EQU   COMMON+2022
AUSRASID EQU   COMMON+2020
AUSRTCBA EQU   COMMON+2016
AUSRDEL  EQU   COMMON+2012
AUSREXIT EQU   COMMON+2008
AUSRINIT EQU   COMMON+2004
ASRBFMT  EQU   COMMON+2000
AASCBFMT EQU   COMMON+1996
BRRDADJ  EQU   COMMON+1992
BRRDINIT EQU   COMMON+1988
BRRDDATA EQU   COMMON+1984
BUFERMAP EQU   COMMON+1980
CPUMAP   EQU   COMMON+1972
@NM00046 EQU   COMMON+1964
HDRTITLE EQU   COMMON+1864
HDRREGS  EQU   COMMON+1696
SACSWCAW EQU   COMMON+1684
ASVTADDR EQU   COMMON+1680
PREFXRGV EQU   COMMON+1676
PREFXRGR EQU   COMMON+1672
CURASCB  EQU   COMMON+1668
IPLCPU   EQU   COMMON+1666
QAPFT    EQU   COMMON+1660
@NM00045 EQU   COMMON+1656
SEGTABOR EQU   COMMON+1648
@NM00044 EQU   COMMON+1641
EDITER   EQU   COMMON+1640
AROOT    EQU   COMMON+1636
AEDITCB  EQU   COMMON+1632
TRCCOUNT EQU   COMMON+1628
ASYSUDCB EQU   @NM00042+1
ENDLIST  EQU   @NM00043
AINDCB   EQU   DCBADDRS+12
ARDRDCB  EQU   DCBADDRS+8
APTRDCB  EQU   DCBADDRS+4
AOUTDCB  EQU   DCBADDRS
ATCBSMRY EQU   COMMON+1604
ATCBSMFR EQU   COMMON+1600
ONGOPTR  EQU   COMMON+1596
AEND     EQU   COMMON+1592
AERRMSGA EQU   COMMON+1584
BUFREINT EQU   COMMON+1580
BUFSUM   EQU   COMMON+1576
AFORMAT  EQU   COMMON+1568
ASTPROUT EQU   COMMON+1564
ATCBRTRV EQU   COMMON+1556
ATCBREMV EQU   COMMON+1552
ATCBSAVE EQU   COMMON+1548
QATMERTN EQU   COMMON+1544
ALOADER  EQU   COMMON+1540
AEREXIT  EQU   COMMON+1536
ARGNBND  EQU   COMMON+1524
AWRDCNVT EQU   COMMON+1520
AADRCNVT EQU   COMMON+1516
AFMTLINE EQU   COMMON+1512
NONBLNK  EQU   COMMON+1244
@NM00041 EQU   COMMON+972
@NM00040 EQU   COMMON+915
@NM00039 EQU   HEXTABL
@NM00038 EQU   TABLE
CAPTABL  EQU   COMMON+403
TITLEPGE EQU   COMMON+394
@NM00037 EQU   COMMON+392
TITLETME EQU   COMMON+379
@NM00036 EQU   COMMON+377
TITLEDTE EQU   COMMON+364
@NM00035 EQU   COMMON+362
TITLEMOD EQU   COMMON+347
TITLEMSG EQU   COMMON+283
MSG2     EQU   COMMON+257
MSG1     EQU   COMMON+231
STOP     EQU   COMMON+227
TITLE    EQU   COMMON+222
BLANKS   EQU   COMMON+214
WTORMSG  EQU   COMMON+133
@NM00034 EQU   COMMON+130
@NM00033 EQU   PRSW
@NM00032 EQU   PRSW
PRNTREAL EQU   PRSW
TTLSW    EQU   PRSW
@NM00031 EQU   PRSW
QSEGTBSW EQU   PRSW
@NM00030 EQU   PRSW
@NM00029 EQU   BUFSW
PREFM    EQU   BUFSW
@NM00028 EQU   BUFSW
@NM00027 EQU   BUFSW
@NM00026 EQU   BUFSW
@NM00025 EQU   BUFSW
@NM00024 EQU   BUFSW
@NM00023 EQU   BUFSW
@NM00022 EQU   SWF
QUT1LOD  EQU   SWF
@NM00021 EQU   SWF
PAGEOK   EQU   SWF
DMPIC    EQU   SWF
QSADMP   EQU   SWF
NUCTFRMC EQU   SWF
QPRDINIT EQU   SWF
@NM00020 EQU   SWE
@NM00019 EQU   SWE
@NM00018 EQU   SWE
BUILDMAP EQU   SWE
TITLESW  EQU   SWE
RESPC    EQU   SWE
@NM00017 EQU   SWE
STOPSW   EQU   SWE
@NM00016 EQU   SWD
CONTSW   EQU   SWD
NOLOADSW EQU   SWD
NOSTDMG  EQU   SWD
@NM00015 EQU   SWD
@NM00014 EQU   SWD
@NM00013 EQU   SWC
@NM00012 EQU   SWC
@NM00011 EQU   SWC
EDITSW   EQU   SWC
TREADIN  EQU   SWC
POSITSW  EQU   SWC
SETFLSH  EQU   SWC
MSTRSW   EQU   SWC
@NM00010 EQU   SWB
@NM00009 EQU   SWB
QSYSUT2  EQU   SWB
ENDSW    EQU   SWB
@NM00008 EQU   SWB
@NM00007 EQU   SWB
FMTERR   EQU   SWB
IOERR    EQU   SWB
SETCVTSW EQU   SWA
@NM00006 EQU   SWA
GOSW     EQU   SWA
@NM00005 EQU   SWA
@NM00004 EQU   SWA
@NM00003 EQU   SWA
@NM00002 EQU   SWA
LINENUM  EQU   COMMON+120
LINENUMB EQU   COMMON+118
SIXTEEN  EQU   COMMON+116
TWELVE   EQU   COMMON+114
ELEVEN   EQU   COMMON+112
HTEN     EQU   COMMON+110
EIGHT    EQU   COMMON+108
SEVEN    EQU   COMMON+106
FIVE     EQU   COMMON+104
FOUR     EQU   COMMON+102
THREE    EQU   COMMON+100
TWO      EQU   COMMON+98
ONEA     EQU   COMMON+96
READTM   EQU   COMMON+92
RDERCNT  EQU   COMMON+88
READNO   EQU   COMMON+84
RDENTRY  EQU   COMMON+80
@NM00001 EQU   COMMON+78
FILESEQ  EQU   COMMON+76
INDD     EQU   COMMON+68
STORSIZE EQU   COMMON+64
CVTADDR  EQU   COMMON+56
TCBLIST  EQU   COMMON+52
PAGENUMB EQU   COMMON+44
LINECNT  EQU   COMMON+40
SIX      EQU   COMMON+36
WORK1    EQU   COMMON+24
VERBEND  EQU   COMMON+8
VERBGN   EQU   COMMON+4
ERRADDR  EQU   COMMON
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00103 EQU   @RC00098
@RC00101 EQU   @RC00098
@RF00108 EQU   @RC00098
@RF00120 EQU   @RC00098
@RF00134 EQU   @RC00125
@RF00141 EQU   @RC00093
@RF00154 EQU   @RC00093
@RC00144 EQU   @RC00093
@RC00157 EQU   @RC00093
@RC00091 EQU   @RC00088
@RF00297 EQU   @RC00292
@RF00378 EQU   @RC00067
@RC00420 EQU   @RC00417
@RF00472 EQU   @RC00467
@RC00511 EQU   @RC00504
@RC00506 EQU   @RC00504
@RC00518 EQU   @RC00504
@RF00555 EQU   @RC00538
@RF00566 EQU   @EL00002
@RF00571 EQU   @EL00002
@RC00569 EQU   @EL00002
@RC00589 EQU   @EL00003
@RC00578 EQU   @EL00003
@RC00576 EQU   @EL00003
@RF00593 EQU   @EL00003
@RF00596 EQU   @EL00003
@RF00607 EQU   @EL00004
@RF00173 EQU   @RC00091
@RF00522 EQU   @RC00518
@RC00580 EQU   @RC00578
@RF00585 EQU   @RC00578
@RC00583 EQU   @RC00578
@ENDDATA EQU   *
         END   AMDPRPMS,(C'PLS2014',0603,76133)
