         TITLE 'AMDPRLPA  -  LPA MAP EXECUTOR'                   Y02006
* /* START OF SPECIFICATIONS ****
*
*01*  MODULE-NAME = AMDPRLPA
*
*01*  DESCRIPTIVE-NAME = LINK PACK AREA MAP EXECUTOR
*
*01*  COPYRIGHT = NONE
*
*01*  STATUS = OS/VS2 REL. 02.0
*
*01*  FUNCTION = THIS ROUTINE PRINTS A LIST OF THE MODULES THAT
*     COMPRISE THE ACTIVE LINK PACK AREA AT THE TIME OF THE DUMP.
*
*02*     OPERATION = THE ACTIVE LPA QUEUE IS LOCATED VIA A POINTER IN
*        THE CVT (CVTQLPAQ).  THE MODULE NAME, ENTRY POINT ADDRESS, AND
*        TYPE ARE EXTRACTED FROM EACH CDE AND THE LENGTH AND STARTING
*        POINT ARE RETREIVED FROM THE EXTENT LIST ASSOCIATED WITH EACH
*        MAJOR CDE. IF ANY OF THE POINTERS LEADING TO THE FIRST CDE ARE
*        ZERO A 'LINK PACK AREA QUEUE EMPTY' MESSAGE IS ISSUED.  IF A
*        BRREAD ERROR OCCURS WHILE TRYING TO GET TO ANY CDE ON THE
*        QUEUE A MESSAGE IS PRINTED.  IF A BRREAD FAILS WHILE ACCESSING
*        THE EXTENT LIST A MESSAGE IS PRINTED.
*
*01*   NOTES = AS FOLLOWS
*
*02*     DEPENDENCIES = AS FOLLOWS
*
*03*        CHARACTER-CODE-DEPENDENCIES = EBCDIC - CORRECTABLE BY
*           REASSEMBLY
*
*02*     RESTRICTIONS = NONE
*
*02*     REGISTER-CONVENTIONS = REGISTERS ARE DECLARED IN THE EQUATES
*        PRIVATE MACRO.
*
*02*     PATCH-LABEL = LPAPATCH
*
*01*  MODULE-TYPE = PROCEDURE
*
*02*     PROCESSOR = ASSEMBLER
*
*02*     MODULE-SIZE = 1600 BYTES
*
*02*     ATTRIBUTES = PROBLEM PROGRAM REGION, REUSEABLE
*
*01*  ENTRY-POINT = AMDPRLPA
*
*02*     PURPOSE = IN RESPONSE TO LPA VERB
*
*02*     LINKAGE = STANDARD LINKAGE - CALLED ONLY BY AMDPRCTL
*
*02*     INPUT = REGISTERS
*             REGISTER 12 - POINTER TO COMMON DATA AREA
*             REGISTER 13 - POINTER TO CALLER'S SAVE AREA
*             REGISTER 14 - RETURN ADDRESS
*             REGISTER 15 - ENTRY POINT ADDRESS
*
*02*     OUTPUT = LINK PACK AREA MAP
*
*02*     REGISTERS-SAVED = ALL
*
*02*     REGISTER-USAGE = SEE REGISTER DECLARES
*
*02*     REGISTERS-RESTORED = ALL
*
*01*  EXIT-NORMAL = LPAEXIT
*
*02*     CONDITIONS = PROCESSING COMPLETED
*
*02*     OUTPUT = FORMATTED ACTIVE LINK PACK AREA QUEUE
*
*02*     RETURN-CODES = NONE
*
*01*  EXIT-ERROR = NONE
*
*01*  EXTERNAL-REFERENCES = AS FOLLOWS
*
*02*     ROUTINES =
*            AMDPRRDC - TO READ DUMP INPUT
*            AMDPRWTR - TO PRINT OUTPUT TO PRINTER DATA SET
*            ADRCNVT  - TO CONVERT ADDRESSES TO PRINTABLE HEX
*02*     DATA-AREAS = COMMON
*            AADRCNVT  (REF)
*            CURBUF    (REF)
*            CVTADDR   (REF)
*            ERRADDR   (MOD)
*            LINENUM   (REF)
*            LNCNT     (REF)
*            LINECNT   (REF)
*            MINCDE    (REF)
*02*     CONTROL-BLOCKS = NONE
*
*01*  TABLES = NONE
*
*01*  MACROS =
*        EXECUTABLE =
*            BRREAD -- PRIVATE, TO READ DUMP INPUT
*            BRWRITE -- PRIVATE, TO PRINT OUTPUT
*
*        MAPPING =
*            IHAXTLST
*            IHACDE
*            CVT
*
*02*     SERIALIZATION = NONE
*
*01*  CHANGE-ACTIVITY = AS FOLLOWS
*A 394500,418500,419000,422500,423500,436020-437500              Y01980
*A 437600-439000,44000-445600,448000,456000,478500-479000        Y01980
*A 480000,508000-510000,670500,672000,688000,690000,754000       Y01980
*A 796000                                                        Y01980
*
*D 2000,394500,418500-423500,436500,438000-438500,444500,445000  Y02006
*D 446000-448000,498000,510000,670500-704000,720000,796000-798000Y02006
*
*C 4000,6000-200000,437000,437600,439000,442000,444000,445500    Y02006
*C 450000,454703,458500-459000,460000,460500,478500-479000,      Y02006
*C 482500-483000,506000,508000,521500,632000,645900,645960,808000Y02006
*
*A 416500,436067-436900,439500,454500-454501,455000,456500-457500Y02006
*A 480700-482000,496500-497500,504500-505600,509600-510300,512500Y02006
*A 520500-521000,521600,645820-645897,671000-691000,754500       Y02006
*A 758500-759500,804500-807700                                   Y02006
*
*01*  MESSAGES =
*        UNABLE TO ACCESS CVT, LPAMAP FUNCTION TERMINATED
*        LOOP CONTROL VALUE IS ZERO, LPAMAP FUNCTION TERMINATED
*        ERROR FINDING ACTIVE LPA CHAIN POINTER, PROCESSING TERMINATED
*        LINK PACK AREA QUEUE EMPTY
*        ERROR FINDING CDE QUEUE POINTER, PROCESSING TERMINATED
*        ERROR FINDING CDE XXXXXX, PROCESSING TERMINATED
*        ERROR ACCESSING CDE XXXXXX, CONTINUING
*        ERROR FINDING EXTENT LIST, POINTER ZERO
*        ERROR FINDING MAJOR CDE, EXTENT LIST BYPASSED
*        ERROR ACCESSING EXTENT LIST
*        INFINITE LOOP IN ACTIVE LPA CHAIN, PROCESSING TERMINATED
*
*01*  ABEND-CODES = NONE
*
**** END OF SPECIFICATIONS ***/
         EJECT
*/*AMDPRLPA: CHART (SEQ) */
*/* HEADER
*/*AMDPRLPA - LINK PACK AREA MAPPING MODULE
*/*                                                    PAGE #       */
*/*AMDPRLPA: E START */
*/* M ESTABLISH ADDRESSABILITY */
*/* L BRWRITE: SKIP A PAGE */
*/* P LOAD ADDR OF OUTPUT BUFFER */
*/* S LPATITLE: PRINT BOTH TITLES */
*/* D (YES,PRTMSG1,NO,) IS CVT PTR 0 */
*/* P GET LOOP VALUE FROM COMMON */
*/* D (YES,CTRMSG,NO,) IS VALUE = 0 */
*/* P PUT ADDR OF 'LPAERRTN' IN COMMON SAVING PREVIOUS ERROR RTN ADDR
*/**/
*/* M SET SWA TO 0 */
*/* P PUT ADDR OF 'PRTMSG2' IN 'LPAERRTN' */
*/* P LOAD ADDR OF ACTIVE LPA QUEUE PTR FROM CVT */
*/* L (ERR,PRTMSG2,,) BRREAD: GET ADDR OF PTR TO CDE QUEUE PTR FROM CVT
*/* */
*/* P LOAD PTR TO CDE QUEUE PTR */
*/* D (YES,PRTMSG3,NO,) IS ACTIVE LPA Q PTR=0 */
*/* P PUT ADDR OF 'PRTMSG4' IN 'LPAERRTN' */
*/* L (ERR,PRTMSG4,,) BRREAD: GET PTR TO CDE QUEUE */
*/* D (YES,PRTMSG3,NO,LPAMAP2) IS QUEUE HEAD ZERO */
*/*LPALOOP: P CLEAR HIGH ORDER BYTE OF REG CONTAINING CDE ADDR */
*/* D (YES,LPADONE,NO,) IS CDE ADDRESS ZERO */
*/* P DECREMENT LOOP VALUE */
*/* D (YES,LOOPMSG,NO,) IS VALUE =0 */
*/*LPAMAP2: S LPATITLE: PRINT BOTH TITLES IF AT TOP OF PAGE */
*/* P PUT ADDR OF 'PRTMSG5' IN 'LPAERRTN' */
*/* L (ERR,PRTMSG5,,) BRREAD: GET CDE */
*/* P SAVE ADDR OF NEXT CDE IN CHAIN */
*/* P PUT ADDR OF 'PRTMSG6' IN 'LPAERRTN' */
*/* L (ERR,PRTMSG6,,) BRREAD: GET ATTRIBUTES AND SAVE THEM */
*/* L (ERR,PRTMSG6,,) BRREAD: GET AND SAVE MODULE NAME */
*/* L (ERR,PRTMSG6,,) BRREAD: GET ENTRY POINT ADDRESS */
*/* P POINT TO LOCATION FOR EPA IN BUFFER */
*/* L ADRCNVT: CONVERT EP ADDR TO HEX AND MOVE TO BUFFER */
*/* P LOAD ADDRESS OF MAJOR CODE/ EXTENT LIST */
*/* D (YES,LPAMAP3,NO,)  CDE ATTRIBUTES INDICATE MINOR CODE */
*/* P MOVE 'MAJOR' TYPE TO OUTPUT BUFFER */
*/*LPAMAP4: D (YES,PRTMSG7,NO,) IS EXTENT LIST ADDR=0 */
*/* P PUT ADDR OF 'SWASET' IN 'LPAERRTN' */
*/* L (ERR,SWASET,,) BRREAD: GET MODULE LENGTH */
*/* P POINT TO LOCATION FOR MODULE LENGTH IN BUFFER */
*/* L ADRCNVT: CONVERT LENGTH TO HEX AND MOVE TO BUFFER */
*/*MODLNTH: P PUT ADDR OF 'SWARESET' IN 'LPAERRTN' */
*/* L (ERR,SWARESET,,) BRREAD: GET MODULE STARTING ADDR */
*/* P POINT TO LOCATION FOR STARTING ADDRESS IN BUFFER */
*/* L ADRCNVT: CONV. START @ TO HEX & MOVE TO BUFFER */
*/* D (YES,SWARESET,NO,) IS SWA=1 */
*/*PRTLINE: L BRWRITE: PRINT OUT BUFFER */
*/*PTRSW: P (,LPALOOP) MOVE ADDR OF NEXT CDE INTO REG */
*/*LPAMAP3: P POINT TO EXTENT LIST ADDRESS */
*/* P PUT ADDR OF 'PRTMSG8' IN 'LPAERRTN' */
*/* L (ERR,PRTMSG8,,) BRREAD: GET EXTENT LIST ADDRESS */
*/* P LOAD ADDR OF EXTENT LIST */
*/* P (,LPAMAP4) MOVE 'MINOR' TYPE TO OUTPUT BUFFER */
*/*LPATITLE: D (YES,RETURN,NO,) ANY SPACE TO PRINT LINE ON THIS PAGE */
*/* P LOAD BUFFER ADDR */
*/* P MOVE FIRST TITLE TO OUTPUT BUFFER */
*/* L BRWRITE: PRINT FIRST TITLE */
*/* P MOVE SECOND TITLE TO OUTPUT BUFFER */
*/* L BRWRITE: PRINT SECOND TITLE */
*/*RETURN: R RETURN TO CALLER */
*/*PRTMSG1: L (,LPAEXIT) BRWRITE: PRINT ERROR MESSAGE '1' */
*/*SWARESET: M SET SWA TO 0 */
*/* P (,PRTLINE) MOVE ERROR MESSAGE '9' TO OUTPUT BUFFER */
*/*PRTMSG7: P (,PRTLINE) MOVE ERROR MESSAGE '7' TO OUTPUT BUFFER */
*/*PRTMSG3: L BRWRITE: PRINT ERROR MESSAGE '3' */
*/*LPADONE: P RESTORE PREVIOUS ERROR RTN ADDR IN COMMON */
*/*LPAEXIT: M RESTORE REGISTERS */
*/* R RETURN TO CALLER */
*/*CTRMSG: L (,LPAEXIT) BRWRITE: PRINT CTR 0 MSG */
*/*LOOPMSG: L (,LPADONE) BRWRITE: PRINT LOOP MSG */
*/*LPAERRTN: N BRREAD ERROR HANDLER */
*/* M RESTORE REGS FROM LPA SAVE AREA USING REG 15 */
*/* M REESTABLISH ADDRESSABILITY USING BASEREG */
*/* R BRANCH TO SPECIFIC FUNCTION */
*/*PRTMSG2: L (,LPADONE) BRWRITE: PRINT ERROR MESSAGE '2' */
*/*PRTMSG4: L (,LPADONE) BRWRITE: PRINT ERROR MESSAGE '4' */
*/*PRTMSG5: L (,LPADONE) BRWRITE: PRINT ERROR MESSAGE '5' */
*/*PRTMSG6: L (,PTRSW) BRWRITE: PRINT ERROR MESSAGE '6' */
*/*SWASET: M (,MODLNTH) SET SWA TO 1 */
*/*PRTMSG8: P (,PRTLINE) MOVE ERROR MESSAGE '8' TO OUTPUT BUFFER */
*/*AMDPRLPA: END */
         EJECT
         EQUATES
         COMMON
*                                                                 M3179
         OUTBUFM
AMDPRLPA CSECT
         SPACE
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         BALR  BASE1,0             ESTABLISH REG 11 AS BASE
         USING *,BASE1
LPABASE  LA    R0,MAPSAVE          SAVE AREA CHAINNING
         ST    R0,8(R13)
         ST    R13,MAPSAVE+4
         LR    R13,R0
         SPACE
         USING COMMON,COMBASE      COMMON CSECT BASED ON REG 12
         USING OUTBUF,BUFREG
         USING CVT,R8              CVT MACRO BASED ON REG 8      Y02006
         SPACE
***********************************************************************
*                                                                     *
*   SKIP A PAGE AND PRINT THE TITLES                                  *
*                                                                     *
***********************************************************************
         SPACE
         BRWRITE SKIP              SKIP TO LINE ONE
         L     BUFREG,CURBUF       LOAD BUFFER ADDR
         BAL   R9,LPATITL1      PRINT TITLE                    @ZA04282
         SPACE
***********************************************************************
*                                                                     *
*    IF CVT ADDR IS ZERO - PRINT ERROR MSG AND RETURN                 *
*                                                                     *
***********************************************************************
         SPACE
         L     R8,CVTADDR          CVT ADDR IN COMMON            Y02006
         LTR   R8,R8               IS ADDR ZERO                  Y02006
         BZ    PRTMSG1             YES--PRINT ERROR MESSAGE      Y02006
         SPACE
         L     LOOPCTR,LPAMAX      GET LOOP CONTROL VALUE        Y02006
         SR    R0,R0                                             Y02006
         CR    LOOPCTR,R0          IS VALUE ZERO                 Y02006
         BE    CTRMSG              YES - TERMINATE WITH MSG      Y02006
         SPACE
         MVC   LPAERSV,ERRADDR     SAVE CURRENT ERROR ROUTINE ADDR
         LA    R15,LPAERROR        LOAD ADDR OF LPAMAP ERROR ROUTINE
         ST    R15,ERRADDR         STORE AS ERROR ADDRESS
         SPACE
***********************************************************************
*                                                                     *
*             GET PTR TO ACTIVE LPA CHAIN - IF READ ERROR - PRINT     *
*               ERROR MESSAGE AND RETURN                              *
*                                                                     *
***********************************************************************
         SPACE
         MVI   SWITCHA,X'00'       ZERO OUT SWITCH               Y02006
         LA    R10,PRTMSG2         ERROR RTN FOR THIS BRREAD     Y02006
         LA    PREG,CVTQLPAQ       ACTIVE LPA CHAIN PTR          Y01980
         BRREAD  (PREG),DATA,ASID=0                              Y02006
         ICM   PREG,7,1(PREG)      IS PTR TO QUEUE HEAD ZERO     Y02006
         BZ    PRTMSG3             YES--PRINT MSG                Y02006
         LA    R10,PRTMSG4         ERROR RTN FOR THIS BRREAD     Y02006
         BRREAD  (PREG),DATA,ASID=0                              Y02006
         ICM   R2,7,1(PREG)        IS QUEUE HEAD ZER0            Y02006
         BZ    PRTMSG3             YES - TERMINATE WITH MSG      Y02006
         SPACE
***********************************************************************
*                                                                     *
*            PROCESSING OF CDE BEGINS HERE                            *
*                                                                     *
***********************************************************************
         SPACE
LPAMAP2  BAL   R9,LPATITLE         PRINT TITLE IF AT TOP OF PAGE
         LA    R10,PRTMSG5         ERROR RTN FOR THIS BRREAD     Y02006
         ST    R2,LCDEADDR         ADDR OF CDE FOR AARDCNVT      Y02006
*                                  R2 CONTAINS ADDR FOR BRREAD,  Y02006
*                                  AS LPATITLE RTN MODIFIES PREG Y02006
         BRREAD  (R2),DATA,ASID=0                                Y02006
         SPACE
         USING CDENTRY,R2          BASE FOR CDE MACRO            Y02006
         SPACE
         MVC   CDENEXT,0(PREG)     save aDDR OF NEXT CDE         y01980
         LA    R10,PRTMSG6         ERROR RTN FOR THIS BRREAD     Y02006
         LA    PREG,CDATTR         ADDR OF CDE ATTRIBUTES        Y02006
         BRREAD (PREG),DATA,ASID=0                               Y02006
         MVC   CDEATTR(1),0(PREG)  save cDE ATTRIBUTES           Y01980
         LA    PREG,CDNAME         ADDR OF CDE NAME FIELD        Y02006
         BRREAD (PREG),DATA,ASID=0                               Y02006
         MVC   FIELD1(8),0(PREG)   MOVE NAME to buffer
         LA    PREG,CDENTPT        ADDR OF CDE ENTRY POINT       Y02006
         BRREAD (PREG),DATA,ASID=0                               Y02006
         LA    R4,FIELD1+20        LOC OF EPA IN BUFFER
         L     R15,AADRCNVT        LOAD ADDR OF ADRCNVT ROUTINE
         BALR  RETREG,R15          LINK TO IT
         LA    PREG,CDXLMJP        ADDR OF EXTENT LIST/MAJOR CDE Y02006
         BRREAD (PREG),DATA,ASID=0                               Y02006
         L     R3,0(PREG)          EXTENT LIST OR MAJOR CDE ADDR Y01980
         TM    CDEATTR,MINCDE      IS THIS A MINOR CDE
         BO    LPAMAP3             YES--GET MAJOR
         MVC   FIELD1+44(5),MAJOR  NO--INDICATE MAJOR
         SPACE
         USING XTLST,R3            BASE FOR EXTENT LIST MACRO    Y02006
         SPACE
LPAMAP4  LTR   R3,R3               IS ADDR ZERO                  Y02006
         BZ    PRTMSG7             YES--PRINT ERROR MSG          Y02006
         LA    R10,SWASET          ERROR RTN FOR THIS BRREAD     Y02006
         LA    PREG,XTLMSBLA       ADDR OF LENGTH VALUE IN XLIST Y02006
         BRREAD (PREG),DATA,ASID=0                               Y02006
         LA    R4,FIELD1+36        LOC OF LENGTH IN BUFFER
         L     R15,AADRCNVT        LOAD ADDR OF ADRCNVT ROUTINE
         BALR  RETREG,R15          LINK TO IT
MODLNTH  LA    R10,SWARESET        ERROR RTN FOR THIS BRREAD     Y02006
         LA    PREG,XTLMSBAA       ADDR OF ETRY PT ADDR IN XLIST Y02006
         BRREAD (PREG),DATA,ASID=0                               Y02006
         LA    R4,FIELD1+28        LOC OF STA IN BUFFER
         L     R15,AADRCNVT        LOAD ADDR OF ADRCNVT ROUTINE
         BALR  RETREG,R15          LINK TO IT
         TM    SWITCHA,SWITCHON    DID READ FOR ATTRIB FAIL      Y02006
         BZ    PRTLINE             NO--PRINT OUTPUT LINE         Y02006
SWARESET MVI   SWITCHA,X'00'       RESET SWITCH                  Y02006
         MVC   FIELD2+22(L'LPAMSG9),LPAMSG9  MOVE ERROR MSG TO BUFFER
*                                                                Y02006
         SPACE
***********************************************************************
*                                                                     *
*        PRINT OUT BUFFER WITH CDE DATA                               *
*                                                                     *
***********************************************************************
         SPACE
PRTLINE  BRWRITE 1                 GO PRINT                      Y02006
         SPACE
***********************************************************************
*                                                                     *
*    SET ADDR OF NEXT CDE TO BE PROCESSED                             *
*                                                                     *
***********************************************************************
         SPACE
PTRSW    ICM   R2,7,CDENEXT+1      IS ADDR OF NEXT CDE ZERO      Y02006
         BZ    LPADONE             YES - ALL DONE MAPPING
         SPACE
         BCTR  LOOPCTR,0           DECREMENT LOOP VALUE          Y02006
         LTR   LOOPCTR,LOOPCTR     IS VALUE ZERO                 Y02006
         BZ    LOOPMSG             YES - LOOP IN CHAIN           Y02006
         B     LPAMAP2             NO - PROCESS THIS CDE         Y02006
         SPACE
***********************************************************************
*                                                                     *
*         GET MAJOR CDE FOR THIS MINOR                                *
*                                                                     *
***********************************************************************
         SPACE
LPAMAP3  LR    R2,R3               CHANGE BASE FOR CDE MACRO     Y02006
         MVC   FIELD1+44(5),MINOR  INDICATE MINOR CDE
         LA    R10,PRTMSG8         ERROR RTN FOR THIS BRREAD     Y02006
         LA    PREG,CDXLMJP        ADDR OF MAJOR CDE FIELD       Y02006
         BRREAD (PREG),DATA,ASID=0                               Y02006
         L     R3,0(PREG)          XTLIST ADDR OF MAJOR CDE      Y02006
         B     LPAMAP4             ACCESS XTLIST FOR LNGTH & EPA
         SPACE 2
***********************************************************************
*                                                                     *
*   TEST FOR TOP OF PAGE AND PRINT TITLES IF IT IS                    *
*                                                                     *
***********************************************************************
         SPACE
LPATITLE LH    R0,LINENUM          LOAD NUMBER OF LINES PER PAGE-2
         C     R0,LINECNT          AM I AT TOP OF PAGE
         BNER  R9                  RETURN TO CALLER IF NOT       Y02006
LPATITL1 L     BUFREG,CURBUF    TO ASSURE BUFREG IS LOADED     @ZA04282
         MVC   ADDR+33(54),TITLE1  MOVE FIRST TITLE
         BRWRITE 3                 GO PRINT FIRST TITLE
         MVC   FIELD1+2(47),TITLE2 MOVE SECOND TITLE
         BRWRITE 2                 GO PRINT SECOND TITLE
         BR    R9                  CONTINUE
         SPACE 2
***********************************************************************
*                                                                     *
*   ALL DONE WITH MAP...RETURN TO CALLER                              *
*                                                                     *
***********************************************************************
         SPACE
CTRMSG   MVC   ADDR(L'LPAMSG10),LPAMSG10                         Y02006
         MVC   ADDR+L'LPAMSG10(L'LPAMSG21),LPAMSG21              Y02006
         BRWRITE 1                                               Y02006
         B     LPAEXIT             RETURN TO CALLER              Y02006
         SPACE
LOOPMSG  MVC   ADDR(L'LPAMSG11),LPAMSG11                         Y02006
         MVC   ADDR+L'LPAMSG11(L'LPAMSG20),LPAMSG20              Y02006
         BRWRITE 1                                               Y02006
         B     LPADONE             RETURN TO CALLER              Y02006
         SPACE
PRTMSG3  MVC   ADDR(L'LPAMSG3),LPAMSG3                           Y02006
         BRWRITE  1                                              A35932
LPADONE  MVC   ERRADDR,LPAERSV     RESTORE PREVIOUS ERROR ADDR
LPAEXIT  L     R13,4(R13)          RESTORE CALLER'S REGISTERS    Y02006
         LM    R14,R12,12(R13)
         BR    RETREG              RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*                      BRREAD ERROR ROUTINE                           *
*       HANDLES READ ERRORS BY BRANCHING TO SPECIFIC ROUTINES.        *
*                                                                     *
***********************************************************************
         SPACE
         DROP  BASE1
         USING *,R15               ERROR HANDLER BASED ON REG 15
LPAERROR LA    R13,MAPSAVE         SET UP LPA MAP SAVE AREA
         LM    R14,R12,12(R13)     RESTORE LPA'S REGS
         DROP  R15
         USING LPABASE,BASE1
         L     BUFREG,CURBUF       LOAD BUFFER ADDR              Y01980
         BR    R10                 BRANCH TO SPECIFIC RTN        Y02006
         SPACE
PRTMSG1  MVC   ADDR(L'LPAMSG1),LPAMSG1 MOVE EROR MSG TO BUFFER   Y02006
         MVC   ADDR+L'LPAMSG1(L'LPAMSG21),LPAMSG21               Y02006
         BRWRITE 1                                               Y02006
         B     LPAEXIT             RETURN TO CALLER              Y02006
         SPACE
PRTMSG2  MVC   ADDR(L'LPAMSG2),LPAMSG2 MOVE ERROR MSG TO BUFFER  Y02006
         MVC   ADDR+L'LPAMSG2(L'LPAMSG20),LPAMSG20               Y02006
         BRWRITE 1                                               Y02006
         B     LPADONE             RETURN TO CALLER              Y02006
         SPACE
PRTMSG4  MVC   ADDR(L'LPAMSG4),LPAMSG4 MOVE ERROR MSG TO BUFFER  Y02006
         MVC   ADDR+L'LPAMSG4(L'LPAMSG20),LPAMSG20               Y02006
         BRWRITE 1                                               Y02006
         B     LPADONE             RETURN TO CALLER              Y02006
         SPACE
PRTMSG5  LA    R4,MSG5A            ADDR FOR AADRCNVT             Y02006
         LA    PREG,LCDEADDR       CDE ADDR THAT FAILED READ     Y02006
         L     R15,AADRCNVT        ADDR OF CONVERT RTN           Y02006
         BALR  RETREG,R15          CONVERT ADDR TO PRINT IT      Y02006
         MVC   ADDR(L'LPAMSG5),LPAMSG5 MOVE ERROR MSG TO BUFFER  Y02006
         MVC   ADDR+L'LPAMSG5(L'LPAMSG20),LPAMSG20               Y02006
         BRWRITE 1                                               Y02006
         B     LPADONE             RETURN TO CALLER              Y02006
         SPACE
PRTMSG6  LA    R4,MSG6A            BUFFER ADDR FOR AADRCNVT      Y02006
         LA    PREG,LCDEADDR       CDE ADDR THAT FAILED READ     Y02006
         L     R15,AADRCNVT        ADDR OF CONVERT RTN           Y02006
         BALR  RETREG,R15          CONVERT ADDR TO PRINT IT      Y02006
         MVC   ADDR(L'LPAMSG6),LPAMSG6 MOVE ERROR MSG TO BUFFER  Y02006
         MVC   ADDR+L'LPAMSG6(L'MSG62),MSG62                     Y02006
         BRWRITE 2                                               Y02006
         B     PTRSW               GET NEXT CDE ON QUEUE         Y02006
         SPACE
PRTMSG7  MVC   FIELD2+22(L'LPAMSG7),LPAMSG7 MOVE ERROR MSG TO BUFFER
*                                                                Y02006
         B     PRTLINE             PRINT BUFFER WITH MSG IN IT   Y02006
         SPACE
PRTMSG8  MVC   FIELD2+22(L'LPAMSG8),LPAMSG8 MOVE ERROR MSG TO BUFFER
*                                                                Y02006
         B     PRTLINE             PRINT BUFFER WITH MSG IN IT   Y02006
         SPACE
SWASET   OI    SWITCHA,SWITCHON    INDICATE XTLIST READ FAILED   Y02006
         B     MODLNTH             READ MOD LENGTH FROM XTLIST   Y02006
         EJECT
***********************************************************************
*                                                                     *
*            CONSTANTS AND SAVE AREA FOR LPAMAP ROUTINE               *
*                                                                     *
***********************************************************************
         SPACE
MAPSAVE  DC    18F'0'              AMDPRLPA SAVE AREA
LPAERSV  DC    F'0'                SAVE AREA FOR ERRADDR
CDENEXT  DC    F'0'                ADDR OF NEXT CDE IN QUEUE     Y01980
LCDEADDR DC    F'0'                ADDR OF CDE BEING PROCESSED   Y02006
LPAWORK1 DC    F'0'
LPAWORK2 DC    F'0'
SWITCHA  DC    X'00'               FOR BRREAD ERROR PROCESSING   Y02006
SWITCHON EQU   X'01'               USED TO SET SWITCHA           Y02006
LOOPCTR  EQU   7                   LOOP CONTROL REG              Y02006
         SPACE
MAJOR    DC    C'MAJOR'
MINOR    DC    C'MINOR'
CDEATTR  DC    X'00'
TITLE1   DC    C'* * * *    L I N K  P A C K  A R E A  M A P    * * * *X
               '
TITLE2   DC    C'NAME                EPA     STA    LNGH    TYPE'
         SPACE
***********************************************************************
*                                                                     *
*    OUTPUT COMMENTS FOR LPA - A CHANGE IN ANY MESSAGE TEXT WILL      *
*      REQUIRE A REASSEMBLY ONLY.  THE CODE IS NOT DEPENDENT ON THE   *
*      ABSOLUTE LENGTH OF ANY MESSAGE.                                *
*                                                                     *
***********************************************************************
         SPACE
LPAMSG1  DC    C'UNABLE TO ACCESS CVT'                           Y02006
LPAMSG2  DC    C'ERROR FINDING ACTIVE LPA CHAIN POINTER'         Y02006
LPAMSG3  DC    C'LINK PACK AREA QUEUE EMPTY'                     Y02006
LPAMSG4  DC    C'ERROR FINDING CDE QUEUE POINTER'                Y02006
MSG51    DC    C'ERROR FINDING CDE '                             Y02006
MSG5A    DC    XL6'00'                                           Y02006
         ORG   *-L'MSG51-L'MSG5A                                 Y02006
LPAMSG5  DS    0CL(L'MSG51+L'MSG5A)                              Y02006
*                                  RESET LOCATION COUNTER        Y02006
         ORG
         DC    X'00'               BYTE FOR AARDCNVT TO UNPAK IN Y02006
MSG61    DC    C'ERROR ACCESSING CDE '                           Y02006
MSG6A    DC    XL6'00'                                           Y02006
         ORG   *-L'MSG61-L'MSG6A                                 Y02006
LPAMSG6  DS    0CL(L'MSG61+L'MSG6A)                              Y02006
*                                  RESET LOCATION COUNTER        Y02006
         ORG
         DC    X'00'               BYTE FOR AARDCNVT TO UNPAK IN Y02006
MSG62    DC    C', CONTINUING'                                   Y02006
LPAMSG7  DC    C'ERROR FINDING EXTENT LIST, POINTER ZERO'        Y02006
LPAMSG8  DC    C'ERROR FINDING MAJOR CDE, EXTENT LIST BYPASSED'  Y02006
LPAMSG9  DC    C'ERROR ACCESSING EXTENT LIST'                    Y02006
LPAMSG10 DC    C'LOOP CONTROL VALUE IS ZERO'                     Y02006
LPAMSG11 DC    C'INFINITE LOOP IN ACTIVE LPA CHAIN'              Y02006
LPAMSG20 DC    C', PROCESSING TERMINATED'                        Y02006
LPAMSG21 DC    C', LPAMAP FUNCTION TERMINATED'                   Y02006
         SPACE
LPAPATCH DC    30F'0'              LPA PATCH AREA                Y02006
         EJECT
         IHAXTLST                                                Y02006
         SPACE
         IHACDE                                                  Y02006
         SPACE
         CVT   DSECT=YES                                         Y02006
         SPACE
         END   AMDPRLPA,(C'XFMLC',0101,73100)
