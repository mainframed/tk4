         TITLE   'AMDPRCTL - CONTROL/SCAN AND TERMINATION MODULE'
AMDPRCTL CSECT
***********************************************************************
*                                                                     *
* A 790000,816400-817120,823000                                 YA01752
* C 817200                                                      YA01752
* C 302400,310800                                                Y02006
* C 344700,349500,371700,372900,374100,403800-404100,404400      Y02006
* C 405900,408300,410700,411000,412200,413900,416400,416800      Y02006
* C 416900,417000,417300,417600,417900,420600,420900,422400      Y02006
* C 422400,423600,424200-424500,424800,426300,427500             Y02006
* C 428100-428400,437700,469500,483600,484200                    Y02006
* C 487800,491700,496800,497100,508800,517800,524100             Y02006
* C 540300,586800,589401,591900,598200,610800                    Y02006
* C 538800,560100,571800,588292,590700,601200                    Y02006
* C 587700,589636,591000,605400,608700,609600,625500,635400      Y02006
* C 639300,645285,668400,695100                                  Y02006
* C 671700,679800,684900,689100,691200,708600-708900             Y02006
* C 714000-714300,722400,741300,750000,804300,805200             Y02006
* A 305200,343400-344952,350200-350320,369400-369500             Y02006
* A 396400-396584                                                Y02006
* A 372100-372240,391600,399400,399700-399820,403600-403720      Y02006
* A 404200-404340,407720-407900,412300-412400,414400-414500      Y02006
* A 415600-415700,416200-416340,416820-416880,417400-417580      Y02006
* A 417700-417840,420700-420840,423400-423540,424600-424740      Y02006
* A 427300-427440,428500-428660,490900-491040,491500-491660      Y02006
* A 448400-448420,458900-458920,508600-508700,523900-524000      Y02006
* A 496900-497040,497420-498580,461600-468860,517600-517700      Y02006
* A 587300-587500,589501-589621                                  Y02006
* A 577000,580300,588713,589036,598200-598420,608000-608020      Y02006
* A 608500-608640,609300-609540,610800-611020,628600-628700      Y02006
* A 658300-658420,661004-661140,689020-689084,690700-691100      Y02006
* A 713200,714400,718300-718420,732400-732500                    Y02006
* A 735700-735800,745900-746020,789500,806300-807300             Y02006
* D 429000-437400,438900-444900,448200,451500,455100-458100      Y02006
* D 322500-326100,343200-344100,345600,346800-377400,368700      Y02006
* D 383100-389100,393900-394200,418500-419100,427900-428020      Y02006
* D 429000-437400,438900-444900,448200,451500,455100-458100      Y02006
* D 458700,459000,461400-468600,469200,483300,493200-493800      Y02006
* D 497700-498300,503400-503700,504600-508200,509100-509400      Y02006
* D 511500-511800,512400-515100,586500,586900-587100,589392      Y02006
* D 538500,559800,571500,587400,588288,589578,594000             Y02006
* D 589400,589459-589520,642000-642300,643600-644100             Y02006
* D 639500-644600,644964-645159,645329,645446-649800             Y02006
* D 659100-660000,660300,660600,661000-661200,665400-665700      Y02006
* D 672000-674100,676200-679200,680400-680700,681600-684600      Y02006
* D 686400,688800                                                Y02006
* D 689400-694800,708300,709500-710100,711300-712200,713400      Y02006
* D 714900-716100,726300,726900-727200,728700-729300,731100      Y02006
* D 732000,734100-734400,736200-738600,749400,802800-804000      Y02006
* D 812700,813300,815100-815400                                  Y02006
* A 304000,304100,391900,815900,824500                          SA54065
* D 815700,816900                                               SA54065
* C 563100,563400,564600                                         XM5890
* A 707800                                                       XM5890
* A 507400-507520                                                YM1462
* A 315500                                                       XM5100
* C 314700                                                       XM5100
* D 314400,315300-316500                                         XM5100
* A 463900-464000,466000-466197                                  YM1461
* C 468300,465300                                                YM1461
* A 698800,700600                                                YM1454
* A 427900-428020,638300-638620,643100-644600,645119-645527      Y01980
* A 661000-661120,709900,639500,644964,589392,589459,586900      Y01980
* A 645387-645440,645930                                         Y01980
* D 495000-495600,520200-523500,618300-620100,638100-638400      Y01980
* D 640500-640800,642900-644400,644992-644996,645900,717600      Y01980
* D 645600-655500,728100,806100-808500,312000,326400-328200      Y01980
* D 333000-334500,599100,611700                                  Y01980
* C 642000,644998,678000-678300,302400,397200,359100-359400      Y01980
* C 640200,64498,728700,592800,635400                            Y01980
* C 267300,690700                                               @YM3679
* A 267380-267700,690702-690718,691780-692020                   @YM3679
*
***********************************************************************
* /* START OF SPECIFICATIONS ****
*
*01*  MODULE-NAME = AMDPRCTL
*
*02*     CSECT-NAME = AMDPRCTL,AMDPRMSC,AMDPREND,AMDPRXIT
*
*01*  DESCRIPTIVE-NAME = MAIN AMDPRDMP CONTROL/SCAN MODULE
*
*01*  COPYRIGHT = NONE
*
*01*  STATUS - OS/VS2 RELEASE 03.7                             @ZA27117
*
*01*  FUNCTION = AMDPRCTL IS THE MAIN CONTROL MODULE FOR AMDPRDMP. IT
*     CONTAINS FOUR CSECTS WHOSE FUNCTIONS AND BASIC OPERATIONS ARE
*     LISTED UNDER THE OPERATION SECTION.
*
*02*     OPERATION = SEE COMMENTS THAT FOLLOW
*
*    AMDPRCTL:
*
*    THIS CSECT ANALYZES THE VALUE OF THE PARM FIELD AND STORES THE
*    PARAMETERS FOUND IN THE COMMON CSECT AMDPRCOM.  IT CALLS
*    THE OUTPUT DATA SET WRITE ROUTINE, AMDPRWTR, TO OPEN THE PRINTER
*    DATA SET AND IT BRANCHES TO THE USER INTERFACE MODULE,AMDPRUIM,TO
*    PERFORM INITIALIZATION.  IF THE TITLE OPTION IS BEING USED,
*    AMDPRCTL OBTAINS THE PAGE TITLE FROM THE OPERATOR.
*
*    THIS CSECT ALSO DETERMINES THE SOURCE OF CONTROL
*    STATEMENTS AS EITHER THE SYSIN DATA SET OR THE OPERATOR'S
*    CONSOLE AND READS IN THESE STATEMENTS.  AS EACH CONTROL
*    STATEMENT IS OBTAINED, THE AMDPRMSC CSECT IS CALLED TO INTERPRET
*    THE STATEMENTS AND CAUSE THE REQUESTED FUNCTION TO BE PERFORMED.
*    WHEN AN END CONTROL STATEMENT IS ENCOUNTERED IN THE INPUT STREAM
*    OR ENTERED BY THE OPERATOR, CONTROL IS PASSED TO AMDPREND TO PRINT
*    AMDPRDMP EXECUTION STATISTICS PRIOR TO TERMINATING THE PROGRAM.
*
*    AMDPRMSC:
*
*    THIS CSECT IS THE MAIN SCAN ROUTINE.  EACH CONTROL STATEMENT
*    IS SCANNED TO DETERMINE IT'S VERB.  WHEN THE VERBS LPAMAP,
*    SUMMARY, FORMAT, EDIT, CPUDATA AND PRINT ARE ENCOUNTERED AMDPRMSC
*    CALLS AMDPRSEG WHICH IN TURN LOADS THE
*    CORRESPONDING PATH SEGMENTS.  FOR THE PRINT VERB AMDPRMSC ALSO
*    SCANS THE PARAMETERS TO DETERMINE THE APPROPRIATE PATH.
*    CONTROL IS THEN PASSED TO THE LOADED EXECUTOR AND THE APPROPRIATE
*    FUNCTION IS PERFORMED. THE EXECUTORS FOR THE CVT=,NEWDUMP,NEWTAPE,
*    GO,ONGO,SEGTAB=, AND TITLE ARE CONTAINED IN AMDPRMSC ITSELF AND
*    ARE EXECUTED DIRECTLY WHEN THE ASSOCIATED CONTROL STATEMENTS ARE
*    ENCOUNTERED.  IF ANY OTHER CONTROL STATEMENTS ARE ENCOUNTERED,
*    CONTROL IS PASSED TO THE USER INTERFACE MODULE AMDPRUIM FOR SYNTAX
*    CHECKING AND PROCESSING.
*
*    THIS CSECT ALSO CONTAINS THE PRIMARY ERROR HANDLER, BEGINNING
*    AT LABEL ERRMSG.
*
*    AMDPREND:
*
*    THIS ROUTINE PERFORMS ONE OF TWO FUNCTIONS.  IF IT IS CALLED
*    AFTER A DUMP DATA SET HAS BEEN PROCESSED IT PRINTS THE EXECUTION
*    STATISTICS ON SYSPRINT.  HOWEVER, IF IT CALLED WHEN END WAS
*    THE ONLY CONTROL STATEMENT FOR THE DUMPED DATA SET, SO THAT NO
*    INITIALIZATION HAS BEEN PERFORMED, IT MERELY ISSUES THE BRREAD
*    MACRO FOR INIT TO CAUSE THE INPUT DUMP DATA SET TO BE TRANSFERRED
*    TO THE SYSUT2 DATA SET IF IT IS PRESENT.  IN
*    EITHER CASE AMDPREND EXITS TO AMDPRXIT WITH A CODE OF 4 IN
*    REGISTER 1 TO TERMINATE AMDPRDMP PROCESSING.
*
*    AMDPRXIT:
*
*    THIS CSECT IS ENTERED WHEN A CONDITION WHICH MAKES FURTHER
*    EXECUTION IMPOSSIBLE IS ENCOUNTERED.  DEPENDING UPON THE VALUE
*    OF THE CODE PASSED IN REGISTER 1, AMDPRXIT ISSUES EITHER MESSAGE
*    AMD150I OR MESSAGE AMD153I BEFORE TERMINATION OR IT TERMINATES
*    WITHOUT ISSUING ANY MESSAGE.  IN ANY CASE ITS TERMINATION
*    PROCESSING INCLUDES-- CLOSING ALL OPEN DATA SETS AND FREEING
*    THE ASSOCIATED BUFFERS, FREEING THE OUTPUT BUFFERS, CALLING
*    AMDPRRDC TO FREE THE INPUT BUFFERS, FREEING THE STORAGE OF
*    THE ONGO BUFFER, RESTORING THE TOP-OF-REAL VALUE AND THE
*    DEFAULT LINE COUNT, ZEROING THE PAGE NUMBER , CALLING AMDPRUIM
*    TO DELETE USER INTERFACE MODULES,
*    AND THEN RESETTING ALL SWITCHES.  FINALLY AMDPRXIT RESTORES
*    THE HIGHEST LEVEL SAVE AREA AND RETURNS CONTROL TO THE OPERATING
*    SYSTEM.
*
*01*   NOTES = SEE COMMENTS THAT FOLLOW
*
*02*     DEPENDENCIES = THE NEWDUMP PROCESSOR IS DEPENDENT ON THE ORDER
*        OF THE DCB ADDRESSES AT DCBADDRS IN THE AMDPRDMP COMMON CSECT.
*
*03*        CHARACTER-CODE-DEPENDENCIES = EBCDIC
*
*02*     RESTRICTIONS = NONE
*
*02*     REGISTER-CONVENTIONS = REGISTERS ARE DEFINED BY THE EQUATES
*        MACRO.
*
*02*     PATCH-LABEL =PTCHAREA - RESERVED FOR FUTURE USE
*
*01*  MODULE-TYPE = PROCEDURE
*
*02*     PROCESSOR = ASSEMBLER
*
*02*     MODULE SIZE - 7,073 BYTES                             @OZ24196
*
*02*     ATTRIBUTES = PROBLEM PROGRAM REGION,REUSABLE
*
*01*  ENTRY-POINT = AMDPRDMP
*
*02*     PURPOSE = MAIN ENTRY POINT TO AMDPRDMP
*
*02*     LINKAGE = ENTRY FROM THE OPERATING SYSTEM
*
*02*     INPUT = REGISTER 1 POINTS TO THE PARAMETER LIST THAT
*        REPRESENTS THE PARM FIELD OF THE EXEC STATEMENT THAT INITIATED
*        THE PRDMP JOB.  OTHER INPUT INCLUDES SYSIN CONTROL STATEMENTS
*        AND/OR OPERATOR REPLIES.
*
*02*     OUTPUT = SEE EXIT OUTPUT SECTIONS BELOW
*
*02*     REGISTERS-SAVED = ALL
*
*02*     REGISTER-USAGE = REGISTER 1, ON ENTRY,POINTS TO THE ADDRESS OF
*        THE PARAMETER LIST REPRESENTING THE PARM FIELD OF THE EXEC
*        STATEMENT THAT INITIATED THE PRDMP JOB.
*        REGISTER 12 IS INITIALIZED IN AMDPRCTL TO POINT TO THE COMMON
*        CSECT,AMDPRCOM.
*
*        ON RETURN FROM AMDPRMSC,REGISTER 15 CONTAINS A CODE WHICH
*        DETERMINES WHERE AMDPRCTL SHOULD RESUME PROCESSING, NAMELY:
*           0 - WRTMSG - ISSUE MESSAGE AMD154I TO SYSTEM OPERATOR TO
*              OBTAIN DUMP TITLE
*           4 - TRDRSW - IMMEDIATELY OBTAIN NEXT CONTROL STATEMENT
*              FROM SYSIN OR SYSTEM OPERATOR
*
*02*     REGISTERS-RESTORED = NONE - REGISTERS 0-14 ARE RESTORED BY THE
*        AMDPRXIT CSECT PRIOR TO RETURNING CONTROL TO THE OPERATING
*        SYSTEM.
*
*01*  ENTRY-POINT = AMDPRMSC
*
*02*     PURPOSE = SCAN EACH CONTROL STATEMENT AND EITHER PROCESS IT OR
*        PASS CONTROL TO OTHER ROUTINES FOR PROCESSING.
*
*02*     LINKAGE = BALR FROM AMDPRCTL CSECT
*
*02*     INPUT = REGISTER 12 POINTS TO THE COMMON CSECT.  THE CONTROL
*        STATEMENT LOCATED AT WTORMSG IN COMMON IS THE BASIC INPUT FOR
*        AMDPRMSC PROCESSING.
*
*02*     OUTPUT = SEE EXIT OUTPUT SECTIONS BELOW
*
*02*     REGISTERS-SAVED = ALL
*
*02*     REGISTER-USAGE = REGISTER 12 POINTS TO THE COMMON CSECT.
*        REGISTER 3 IS USED AS A LINK REGISTER TO SUBROUTINES IN THE
*        NEWDUMP PROCESSOR.
*        REGISTER 9 IS USED AS A LINK REGISTER TO THE OPRFREE
*        SUBROUTINES IN THE ONGO PROCESSOR.
*        REGISTER 14 IS SET UP TO CONTAIN THE ADDRESS OF THE RETURN
*        POINT FROM THE SYNTAX MESSAGE WRITER ROUTINE.
*        REGISTER 15 IS INITIALIZED WITH THE ADDRESS OF THE SYNTAX
*        MESSAGE ROUTINE.
*
*02*     REGISTERS-RESTORED = NONE
*
*01*  ENTRY-POINT = AMDPREND
*
*02*     PURPOSE = (1) TO PRINT EXECUTION STATISTICS ON SYSPRINT IF A
*        DUMP DATA SET HAS BEEN PROCESSED.
*        (2) TO CAUSE THE DUMP DATA SET TO BE TRANSFERRED TO THE DATA
*        SET DESCRIBED BY THE SYSUT2 DD STATEMENT IF END WAS THE ONLY
*        CONTROL STATEMENT FOR THE DUMP DATA SET.
*
*02*     LINKAGE = BCR FROM AMDPRCTL CSECT;  BALR FROM AMDPRMSC CSECT
*        (NO RETURN EXPECTED)
*
*02*     INPUT = REGISTER 12 POINTS TO THE COMMON CSECT.  THE FOLLOWING
*        FIELDS IN COMMON CONTAIN THE INFORMATION NEEDED TO OUTPUT THE
*        EXECUTION STATISTICS:  READNO,RDERCNT,BUFREINT,BUFSUM,RDENTRY,
*        READTM.
*
*02*     OUTPUT = SEE EXIT OUTPUT SECTIONS BELOW
*
*02*     REGISTERS-SAVED = ALL
*
*02*     REGISTER-USAGE = REGISTER 12 POINTS TO THE COMMON CSECT.
*
*02*     REGISTERS-RESTORED = NONE
*
*01*  ENTRY-POINT = AMDPRXIT
*
*02*     PURPOSE = TO TERMINATE AMDPRDMP PROCESSING
*
*02*     LINKAGE = BR FROM CSECT AMDPRCTL
*        BALR FROM CSECT AMDPRMSC (NO RETURN EXPECTED)
*        BALR FROM CSECT AMDPREND (NO RETURN EXPECTED)
*
*02*     INPUT = REGISTER 0 CONTAINS A CODE INDICATING THE DDNAME TO BE
*        USED IN MESSAGES AMD150I OR AMD153I SHOULD THE CODE IN
*        REGISTER 1 REQUEST THAT ONE OF THESE MESSAGES BE ISSUED.  THE
*        CODES AND THEIR CORRESPONDING DDNAMES ARE:
*        0 - PRINTER
*        4 - SYSUT1
*        8 - SYSIN
*        12 - DDNAME OBTAINABLE FROM COMMON
*        16 - SYSUT2
*        REGISTER 1 CONTAINS A CODE INDICATING THE MESSAGE TO BE
*        PRINTED BEFORE TERMINATION PROCESSING:
*        0 - AMD150I
*        4 - NO MESSAGE
*        8 - NO MESSAGE
*        12 - AMD153I
*        REGISTER 12 POINTS TO THE COMMON CSECT
*
*02*     OUTPUT = SEE EXIT OUTPUT SECTIONS BELOW
*
*02*     REGISTERS-SAVED = ALL
*
*02*     REGISTER-USAGE = REGISTER 12 POINTS TO THE COMMON CSECT
*
*02*     REGISTERS-RESTORED = 0-14; REGISTER 15 IS SET TO 0 PRIOR TO
*        RETURNING CONTROL TO THE OPERATING SYSTEM
*
*01*  EXIT-NORMAL = TITLMSG
*
*02*     CONDITIONS = WHEN THE TITLE PARAMETER IS USED ON THE EXEC CARD
*        AND THE OPERATOR REPLIES END IN RESPONSE TO THE REQUEST FOR A
*        TITLE, AMDPRCTL PASSES CONTROL TO AMDPREND.
*
*02*     OUTPUT = TITLESW IN SWE IN COMMON IS SET ON TO INDICATE THAT
*        THE TITLE OPTION WAS REQUESTED IN THE PARM FIELD OF THE EXEC
*        STATEMENT.
*        TITLEMSG IN COMMON IS FILLED IN WITH THE TITLE SUPPLIED BY THE
*        OPERATOR.
*
*02*     RETURN-CODES = NONE
*
*01*  EXIT-NORMAL = CALLSCAN
*
*02*     CONDITIONS = FOR EACH CONTROL STATEMENT AMDPRCTL READS, IT
*        CALLS AMDPRMSC TO INTERPRET THE STATEMENT AND CONTROL ITS
*        PROCESSING.  EXCEPT FOR END STATEMENTS AMDPRMSC RETURNS TO
*        AMDPRCTL AFTER PROCESSING TO READ ANOTHER CONTROL STATEMENT.
*        WHEN AMDPRMSC ENCOUNTERS AND END STATEMENT IT INITIATES
*        TERMINATION PROCESSING WHICH RESULTS IN CONTROL BEING RETURNED
*        TO THE OPERATING SYSTEM WITH OUT RETURNING CONTROL TO
*        AMDPRCTL.  IN THIS CONTEXT, AMDPRMSC'S ENCOUNTERING AN END
*        STATEMENT RESULTS IN AN EXIT FROM AMDPRCTL.
*
*02*     OUTPUT = THE FOLLOWING FIELDS MAY BE MODIFIED BY AMDPRCTL'S
*        PROCESSING:
*        RDRSW IN SWA IS SET IF CONTROL STATEMENTS ARE COMING FROM
*        SYSIN AND , IF SO, TURNED OFF WHEN SYSIN EOF OCCURS.
*        POSITSW IN SWC IS SET TO INDICATE DUMP DATA SET POSITIONING IS
*        REQUIRED.
*        BUILDMAP IN SWE IS SET ON FOR A NEW DUMP (NEWDUMP,NEWTAPE) TO
*        INDICATE THAT THE DUMP DATA SET MUST BE SCANNED AND MAPPED.
*        STOPSW IN SWE IS SET TO 1 TO INDICATE THAT THE STOP OPTION WAS
*        REQUESTED IN THE PARM FIELD OF THE EXEC STATEMENT.
*        WTORMSG IS BLANKED PRIOR TO READING CARDS OR ISSUING A WTOR
*        FOR CONTROL INFORMATION.
*        LINENUMB IS SET TO THE NUMBER OF LINES PER OUTPUT PAGE FOR
*        PRINTER OUTPUT CORRESPONDING TO THE VALUE ENTERED IN THE PARM
*        FIELD OF THE EXEC STATEMENT.  IF NO LINECOUNT WAS SPECIFIED,
*        58 IS USED AS A DEFAULT.
*        LINENUM IS SET TO LINENUMB-2.  THIS CORRESPONDS TO THE NUMBER
*        OF LINES THAT ARE TO BE PRINTED FOR EACH OUTPUT PAGE EXCLUDING
*        TWO LINES FOR THE TITLE.
*        ARDRDCB IS SET TO CONTAIN THE ADDRESS OF THE SYSIN DCB
*        PROVIDED THE DATA SET OPENS SUCCESSFULLY.
*        EDITER IS FILLED IN WITH THE VALUE OF THE EDIT ERROR PARAMETER
*        IF IT APPEARS IN THE PARM FIELD OF THE EXEC STATEMENT.
*        ERRADDR IS SET TO ZERO.
*        CVTADDR IS SET TO ZERO.
*        ONGOPTR IS INITIALIZED TO POINT TO THE DEFAULT PARAMETERS
*        SUMMARY, EDIT, PRINT CURRENT.
*
*02*     RETURN-CODES = NONE
*
*01*  EXIT-NORMAL = MAP5
*
*02*     CONDITIONS = UPON NORMAL COMPLETION OF ANY CONTROL STATEMENT
*        PROCESSING OTHER THAN AN END STATEMENT AMDPRMSC RETURNS
*        CONTROL TO AMDPRCTL WITH A CODE OF 0 IN REGISTER 15 IF THE
*        OPERATOR SHOULD BE ASKED FOR A DUMP TITLE AND WITH A CODE OF 4
*        OTHERWISE.
*
*02*     OUTPUT = INITIALLY ALL THE BITS OF SWA EXCEPT FOR RDRSW AND
*        SETCVTSW ARE RESET TO ZERO.
*        SETCVTSW IS SET IF A CVT CONTROL STATEMENT IS ENCOUNTERED TO
*        INDICATE THAT THE CVT ADDRESS HAS BEEN SET BY A CONTROL
*        STATEMENT.  IT IS RESET TO ZERO IF A NEWTAPE OR NEWDUMP
*        CONTROL STATEMENT IS USED FOR NEW DUMP DATA SET PROCESSING.
*        GOSW IS SET WHEN PROCESSING A GO CONTROL STATEMENT BEFORE ANY
*        ONGO PARAMETERS ARE FETCHED AND PROCESSED.  IT IS USED TO
*        PREVENT THE ONGO PARAMETER FORM CONTAINING A GO VERB.  IF THIS
*        EXTRA GO WERE TO BE PROCESSED IT WOULD HAVE THE ONGO
*        PARAMETERS FETCHED AGAIN AND THEN BEGIN PROCESSING TO THE GO
*        PARAMETER AGAIN CAUSING AN INFINITE LOOP.
*        FMTERR AND IOERR SWITCHES IN SWB ARE SET TO ZERO UPON ENTERING
*        AMDPRMSC.
*        POSITSW IN SWC IS SET TO INDICATE THAT INPUT POSITIONING IS
*        REQUIRED (NEWDUMP PROCESSOR).
*        EDITSW IS SET ON TO INDICATE THAT THE EDIT SECTION HAS CONTROL
*        AND RESET TO 0 WHEN THE EDIT SECTION RELINQUISHES CONTROL.
*        MSTRSW IN SWC IS RESET TO 0 WHEN THE CVT OR SEGTAB CONTROL
*        STATEMENTS ARE PROCESSED TO ALLOW AMDPRRDC TO ATTEMPT
*        INITIALIZATION AGAIN BY INVOKING THE GET MASTER ROUTINE
*        AMDPRMST.
*        SETFLSH IN SWC IS SET FOR NEWDUMP AND NEWTAPE PROCESSING TO
*        INDICATE TO THE SYNTAX WRITER TO SET FLUSHMODE IF AN ERROR
*        OCCURS.  IT IS RESET WHEN PROCESSING IS COMPLETED.
*        CONTSW IN SWD IS RESET WHEN PROCESSING A STATEMENT
*        CONTINUATION.
*        FLSHMODE IN SWD IS RESET TO 0 BY SUCCESSFUL COMPLETION ON THE
*        NEWDUMP PROCESSOR.
*        NOLOADSW IS SET TO INDICATE THAT A CONTROL STATEMENT OTHER
*        THAN END HAS BEEN PROCESSED.
*        FMTDSW IN SWE IS INITIALLY SET TO ZERO.
*        RESPC IN SWE IS RESET WHEN AN EDIT CONTINUATION STATEMENT IS
*        READ.
*        BUILDMAP IN SWE IS SET DURING NEWDUMP PROCESSING WHEN THE DUMP
*        DATA SET MUST BE SCANNED AND MAPPED.
*        PRNTRL IN PRSW IS SET TO 1 FOR A PRINT REAL REQUEST AND IS
*        RESET TO 0 AFTER THE REQUEST IS PROCESSED.
*        QSEGTBSW IN PRSW IS SET TO 1 TO INDICATE THAT THE ADDRESS OF
*        SEGTAB WAS SET BY A CONTROL STATEMENT.
*        ERRADDR IS SET TO ERRMSG, THE ADDRESS OF AMDPRCTL'S MAIN ERROR
*        HANDLER.
*        STOPEXIT IS SET TO STOPCMP, THE ADDRESS OF THE FINAL STOP EXIT
*        ROUTINE.
*        INDD IS USED TO SAVE THE DDNAME OF A NEW DUMP DATA SET WHEN A
*        NEWDUMP OR NEWTAPE (DEFAULT OF TAPE) CONTROL STATEMENT IS
*        PROCESSED.
*        FILESEQ IS FILLED IN WITH THE FILE SEQUENCE NUMBER OF A
*        NEWDUMP DATA SET DURING NEWDUMP PROCESSING AND IS RESET TO
*        THE DEFAULT OF 1 DURING NEWTAPE PROCESSING.
*        CVTADDR IS ZEROED AFTER PROCESSING FOR NEWDUMP OR NEWTAPE
*        CONTROL STATEMENTS AND SET BY CVT CONTROL STATEMENTS.
*        REALMAX IS RESTORED WITH THE TOP-OF-REAL VALUE THAT IS FOUND
*        IN REALMAX1 WHEN PROCESSING A NEWDUMP OR NEWTAPE CONTROL
*        STATEMENT.
*        VERBGN IS FILLED IN WITH THE BEGINNING ADDRESS OF THE VERB
*        THAT IS BEING SCANNED.
*        SYNMSGA IS SET UP TO POINT TO THE APPROPRIATE TABLE OF SYNTAX
*        ERROR MESSAGE ADDRESSES.
*        DELIMCD IS USED TO SAVE THE CODE FOR THE MOST RECENTLY
*        ENCOUNTERED DELIMITER ON THE CURRENT CONTROL STATEMENT.
*        VERBEND IS FILLED IN WITH THE ADDRESS OF THE END OF THE VERB
*        THAT WAS JUST SCANNED.
*        KYWDBGN IS FILLED IN WITH THE ADDRESS OF THE BEGINNING OF THE
*        KEYWORD THAT IS BEING SCANNED.
*        ONGOPTR IS FILLED IN WITH A POINTER TO THE ONGO OPERANDS AND
*        IS ZEROED WHEN THE STORAGE FOR THE OPERANDS IS FREED.
*        KYWDEND IS FILLED IN WITH THE ADDRESS OF THE END OF THE
*        KEYWORD THAT WAS JUST SCANNED.
*        WORK1 IS USED AS A WORK AREA FOR DATA CONVERSION.
*        SEGTABOR IS FILLED IN WITH THE SEGMENT TABLE ADDRESS THAT WAS
*        GIVEN ON THE SEGTAB= CONTROL STATEMENT.
*        TITLEMSG IS BLANKED OUT AND FILLED IN WITH THE TITLE FROM A
*        TITLE CONTROL STATEMENT.
*
*02*     RETURN-CODES = 0 OR 4 IN REGISTER 15 TO INDICATE WHERE TO
*        RESUME PROCESSING (VIA BRANCH TABLE IN AMDPRCTL): EITHER TEST
*        FOR NEW TITLE AND GET NEXT CONTROL STATEMENT, OR IMMEDIATELY
*        GET NEXT CONTROL STATEMENT.
*
*01*  EXIT-NORMAL = VERBSCN4
*
*02*     CONDITIONS = WHEN AMDPRMSC ENCOUNTERS AN END STATEMENT IT
*        CALLS AMDPREND TO INITIATE TERMINAL PROCESSING.  CONTROL IS
*        EVENTUALLY RETURNED TO THE OPERATING SYSTEM WITHOUT RETURNING
*        TO AMDPRMSC.  IN THIS CONTEXT, ENCOUNTERING AN END STATEMENT
*        RESULTS IN EXIT FROM AMDPRMSC.
*
*02*     OUTPUT = NONE
*
*02*     RETURN-CODES = NONE
*
*01*  EXIT-NORMAL = EXITOUT
*
*02*     CONDITIONS = COMPLETION OF AMDPREND PROCESSING
*
*02*     OUTPUT = WHEN AMDPREND IS ENTERED TO TRANSFER THE DUMP DATA
*        SET TO THE SYSUT2 DATA SET, ENDSW IN SWB IS SET TO 1 TO
*        INDICATE THAT AN END CONTROL STATEMENT IS BEING PROCESSED.
*        WHEN AMDPREND IS ENTERED TO PRINT THE EXECUTION STATISTICS,
*        THE MESSAGES THAT ARE LISTED UNDER THE AMDPREND PORTION OF
*        THE MESSAGES SECTION ARE OUTPUT TO THE SYSPRINT DATA SET.
*
*02*     RETURN-CODES = REGISTER 1 IS SET TO CONTAIN A TERMINATION CODE
*        OF 4 WHEN AMDPREND CALLS AMDPRXIT FOR TERMINAL PROCESSING.
*
*01*  EXIT-NORMAL = EXIT
*
*02*     CONDITIONS = COMPLETION OF PRDMP PROCESSING
*
*02*     OUTPUT = ALL THE SWITCHES IN SWA, SWB, SWC, SWD, SWE,AND PRSW
*        ARE TURNED OFF PRIOR TO TERMINATION.
*        PAGENUMB IS ZEROED.
*        CURBUF, THE ADDRESS OF THE CURRENT OUTPUT BUFFER, IS ZEROED.
*        ONGOPTR IS ZEROED.
*        REALMAX IS RESTORED WITH THE MAXIMUM REAL ADDRESS THAT WAS
*        STORED IN REALMAX1.
*        LINENUMB IS RESTORED TO CONTAIN THE DEFAULT NUMBER OF LINES
*        PER PAGE.
*        LINENUM, THE NUMBER OF LINES PER PAGE EXCLUDING THE TWO LINES
*        USED FOR THE TITLE, IS RESTORED TO THE DEFAULT.
*
*02*     RETURN-CODES = 0 IN REGISTER 15
*
*01*  EXIT-ERROR = STORERR
*02*     CONDITIONS = IF UPON ENTERING AMDPRCTL THERE IS LESS THAN 64K
*        OF STORAGE AVAILABLE FOR USE (WHICH IS THE MINIMUM AMOUNT IN
*        WHICH PRDMP CAN EXECUTE) THIS EXIT IS TAKEN.
*
*02*     OUTPUT = MESSAGE AMD151I IS OUTPUT.
*
*02*     RETURN-CODES = REGISTER 1 IS SET TO CONTAIN A VALUE OF 4.
*
*01*  EXIT-ERROR = RDRERR
*
*02*     CONDITIONS = IF CONTROL STATEMENTS ARE COMING FROM SYSIN AND
*        AN I/O ERROR OCCURS THE SYNAD ROUTINE CAUSES AMDPRCTL TO EXIT
*        TO AMDPRXIT.
*
*02*     OUTPUT = NONE
*
*02*     RETURN-CODES = REGISTER 0 CONTAINS A CODE OF 8 INDICATING THAT
*        AN ERROR OCCURRED IN THE SYSIN FILE.
*        REGISTER 1 CONTAINS A CODE OF 12 INDICATING THAT AN I/O ERROR
*        OCCURRED.
*
*01*  EXIT-ERROR = MAP4
*
*02*     CONDITIONS = IF AMDPRMSC IS ASKED TO PROCESS A BLANK INPUT
*        STATEMENT, AMDPRMSC RETURNS CONTROL TO AMDPRCTL TO READ
*        ANOTHER CONTROL STATEMENT.
*
*02*     OUTPUT = NONE
*
*02*     RETURN-CODES = A CODE OF 4 IN REGISTER 15 WHICH INDICATES THAT
*        ANOTHER CONTROL STATEMENT SHOULD BE READ.
*
*01*  EXTERNAL-REFERENCES = SEE COMMENTS THAT FOLLOW
*
*02*     ROUTINES = AMDPRSYN IS USED TO WRITE SYNTAX ERROR MESSAGES TO
*        THE SYSPRINT DATA SET AND ALSO THE CONSOLE IF CONTROL
*        STATEMENTS ARE BEING ENTERED FROM THE CONSOLE.
*        AMDPRSEG IS USED TO LOAD VARIOUS AMDPRDMP SERVICE ROUTINES.
*        AMDPRUIM IS USED TO PROCESS VERBS ON PRDMP CONTROL STATEMENTS
*        THAT ARE NOT RECOGNIZED AS ORDINARY PRDMP VERBS.
*        THE FOLLOWING EXECUTOR MODULES OF AMDPRDMP ARE LOADED AND
*        CALLED BY AMDPRMSC:
*        AMDPRLPA - LPA VERB PROCESSING
*        AMDPRFXT - FORMAT
*        AMDPRSCN - GTF/EDIT (CONTROL STATEMENT SCAN PHASE)
*        AMDPRXED - GTF/EDIT (EXECUTION PHASE)
*        AMDPRPMS - PRINT STORAGE,REAL
*        AMDPRNUC - PRINT NUCLEUS,SQA,CSA
*        AMDPRPJB - PRINT JOBNAME
*        AMDPRPCR - PRINT CURRENT
*        AMDPRSUM - SUMMARY
*        AMDPRGCD - CPUDATA
*
*02*     DATA-AREAS = COMMON AREAS REFERENCED BY AMDPRCTL, BUT NOT
*        MODIFIED ARE:  ONEA,EIGHT, FOUR, TITLE, STOP, HTEN, TWO,
*        CAPTABL, RESPC SWITCH IN SWE, AND CONTSW SWITCH IN SWD.
*
*        AREAS REFERENCED BY AMDPRMSC ARE: ASYNTAX, BLNK, ONEA, EIGHT,
*        TITLE, RDRSW SWITCH IN SWA, FOUR, TWELVE, SIX, BLANKS, AINDCB,
*        MSG2, MSG1,MSG3,ATCBREMV.
*
*        AREAS REFERENCED BY AMDPREND ARE: NOLOADSW SWITCH IN SWD,
*        RDENTRY, READTM, READNO, RDERCNT, BUFREINT, BUFSUM, AND HTEN.
*
*        AREAS REFERENCED BY AMDPRXIT ARE: DCBADDRS, TWO.
*
*02*     CONTROL-BLOCKS = AMDPRCTL:  DCB-(R),ECB FOR WTOR - (C,W)
*        AMDPRMSC: UCB-(R) - (DEVTYPE MACRO INSTRUCTION); DCB -(R)
*        AMDPRXIT: DCB-(R)
*
*01*  TABLES = ERBRTAB - BRANCH ENTRY TABLE IN AMDPRXIT
*     ERNMTAB - NAME TABLE IN AMDPRXIT
*
*01*  MACROS = OPEN,WTOR,WAIT,GET,SAVE,GETMAIN,FREEMAIN,WTO,DEVTYPE,
*     CLOSE,FREEPOOL,RETURN,BRREAD,BRWRITE,BRPRTMSG
*
*02*     SERIALIZATION = NONE
*
*01*  CHANGE-ACTIVITY = SEE MICROFICHE FLAGGING ABOVE
*                                                              @UZ81000
* UZ81000 - SU 10 SUPPORT                                      @UZ81000
*         - SUPPORT FOR CONDENSED DUMP                         @UZ81000
*                                                              @OZ09686
* OZ09686 - 0C1 ABEND AFTER AMD154                             @OZ09686
*         - INITIALIZE BEFORE TERMINATING IF END IS ENTERED    @OZ09686
*                                                              @OZ12030
* OZ12030 - PROVIDE RETURN CODE OF 4 IF DUMP D/S IS EMPTY      @OZ12030
*         - CHECK FOR EMPTY D/S BEFORE ENDING                  @OZ12030
*                                                              @OZ19024
* OZ19024 - REPLY 'SAME' TO AMD154 IS TREATED AS TITLE         @OZ19024
*         - START CHECK FOR TITLE AFTER 'SAME'                 @OZ19024
*                                                              @OZ24196
* OZ24196 - TITLE FOR OLD DUMP IN HEADER FOR NEWDUMP           @OZ24196
*         - CLEAR OLD TITLE IN THE HEADER FOR NEWDUMP ENTRY    @OZ24196
* OZ27117 - INAPPROPRIATE MAXIMUM LINE COUNT VALUE             @ZA27117
*         - RESET MAXIMUM LINE COUNT LINE VALUE  11/10/77      @ZA27117
*
*01*  MESSAGES = THE FOLLOWING MESSAGES AND OUTPUT COMMENTS ARE ISSUED
*     FROM THE VARIOUS CSECTS IN THIS MODULE:
*
*     AMDPRCTL:
*     AMD151I INSUFFICIENT STORAGE - EXECUTION TERMINATED
*     AMD187I INVALID EXEC CARD PARAMETER - SYSPRINT DATA SET
*     AMD154D REPLY TITLE, 'SAME', OR 'END' - CONSOLE
*     AMD155D REPLY WITH GO, DESIRED FUNCTION OR END - CONSOLE
*     AMD199D CONTINUE DEFINITION - CONSOLE
*     AMD210D RESPECIFY EDIT KEYWORDS OR REPLY 'RUNEDIT'
*     AMD170I END OF FILE ON SYSIN - CONTROL PASSED TO OPERATOR -
*     SYSPRINT DATA SET
*     AMD283D REPLY WITH NEWDUMP OR END - CONSOLE
*     THE REPLIES TO MESSAGES AMD155D,AMD199D,AMD210D,AND AMD283D MADE
*     BY THE OPERATOR ARE PRINTED ON SYSPRINT.
*
*     AMDPRMSC:
*     AMD162I GO FUNCTIONS TO BE PERFORMED - SYSPRINT AND/OR CONSOLE
*     THIS MESSAGE IS FOLLOWED BY A LINE LISTING THE GO FUNCTIONS.
*     AMD164I TAPE IS PREFORMATTED DUMP - REMAINING PARAMETERS IGNORED
*     - SYSPRINT
*     AMD168I DUMP DATA SET EMPTY - DD XXXXXXXX - SYSPRINT
*
*     AMDPREND:
*     1   NO OF ENTRIES TO READ ROUTINE 0000000000 - SYSPRINT
*     2   NO OR TIMES REQ ADDR WAS NOT IN A BUFFER - 0000000000 -
*     SYSPRINT
*     3   NO OF BLOCKS READ - 0000000000 - SYSPRINT
*     4   NO OF PERMANENT I/O ERRORS - 0000000000 - SYSPRINT
*     RATIO OF ITEM 1 TO ITEM 2 - XXX TO 1 - SYSPRINT
*     5   AVERAGE NO OF BUFFERS PER FUNCTION - XXXX.XX - SYSPRINT
*     6   NUMBER OF TRACE RECORDS PROCESSED  - 0000000000 - SYSPRINT
*
*     AMDPRXIT:
*                  PRINTER
*                  SYSUT1
*     AMD150I FILE SYSIN   CANNOT BE OPENED
*                  XXXXXX
*                  SYSUT2
*                            PRINTER
*                            SYSUT1
*     PERMANENT I/O ERROR ON SYSIN     - EXECUTION TERMINATED
*                            XXXXXXX
*                            SYSUT2
*
*01*  ABEND-CODES = NONE
**** END OF SPECIFICATIONS ***/
*                                                                     *
***********************************************************************
*/*AMDPRCTL: CHART (SEQ) */
*/* HEADER
*/*AMDPRCTL - SCANS CONTROL STATEMENTS & LOADS CORRESPONDING MODULES
*/*                                                       PAGE #    */
*/*SYNTAX: N SYNTAX IS EP (VIA DSECT) IN AMDPRSYN MODULE */
*/* P (,SYNTAX4) INDICATE STANDARD ERROR MSG */
*/*SYNTAXA: N SYNTAXA IS EP (VIA DSECT) IN AMDPRSYN MODULE */
*/* P (,SYNTAX4) LOAD @ OF 1ST ERROR MSG */
*/*SYNTAXB: N SYNTAXB IS EP (VIA DSECT) IN AMDPRSYN MODULE */
*/* P (,SYNTAX4) LOAD @ OF 2ND ERROR MSG */
*/*SYNTAXC: N SYNTAXC IS EP (VIA DSECT) IN AMDPRSYN MODULE */
*/* P (,SYNTAX4) LOAD @ OF 3RD ERROR MSG */
*/*SYNTAXD: N SYNTAXD IS EP (VIA DSECT) IN AMDPRSYN MODULE */
*/* P (,SYNTAX4) LOAD @ OF 4TH ERROR MSG */
*/*SYNTAXE: N SYNTAXE IS EP (VIA DSECT) IN AMDPRSYN MODULE */
*/* P (,SYNTAX4) LOAD @ OF 5TH ERROR MSG */
*/*SYNTAX4: P SAVE CALLER'S REG */
*/* I WRITE MSG ON SYSPRINT (AMDPRSYN) */
*/* P RESTORE CALLER'S REG. (AMDPRSYN) */
*/* R RETURN FROM AMDPRSYN */
*/*AMDPRCTL: E START */
*/* P SET ERROR ROUTINE @ TO ZERO */
*/* P SET CVT @ IN COM TO ZERO */
*/* P GET LENGTH OF EXEC CARD PARM. */
*/* D (NO,BEGIN6,YES,) IS LENGTH POSITIVE */
*/* P SET COUNT TO ZERO */
*/* P SET PARM. POINTER TO BEGIN. OF PARM STRING */
*/* P SET DELIMITER POINTER TO BEGIN. OF STRING  */
*/*BGNLOOP: D (YES,BEGIN1,NO,) IS DELIMITER A COMMA */
*/* P INCREMENT COUNT BY 1   */
*/*BEGIN2: P INCREMENT DELIMITER POINTER BY 1 */
*/* P DECREASE LENGTH BY 1 */
*/* D (YES,BEGIN1,NO,BGNLOOP) LENGTH ZERO */
*/*BEGIN1: D (YES,BEGINER,NO,) COUNT LESS THAN 1 */
*/* D (YES,BEGLNCT,NO,) COUNT GREATER 8 */
*/* D (YES,BEGER,NO,) COUNT = 4 */
*/*BEGIN5: P DECREMENT COUNT BY 1 FOR EXECUTE INSTR. */
*/* P POINT TO "TITLE" */
*/* D (EQ,BEGTITLE,NE,) EXECUTE COMPARE OF PARM TO T OF "TITLE" */
*/* P POINT TO "STOP" */
*/* D (EQ,%BEGSTOP,NE,BEGINER) EXECUTE COMPARE PARM TO "STOP" */
*/*BEGINER: D (YES,BEGIN3,NO,) HAS ERROR MSG BEEN GIVEN */
*/* M INDICATE MESSAGE ISSUED */
*/* L BRPRTMSG: ISSUE MESSAGE AMD186I TO SYSPRINT */
*/*BEGIN3: D (YES,BEGIN6,NO,) LENGTH EQUAL TO ZERO */
*/* P SET COUNT TO ZERO */
*/* P (,BEGIN2) UPDATE START @ FOR PARM. TO BE SEARCHED */
*/*BEGLNCT: N LENGTH GREATER THAN 8 - TEST FOR LINECNT */
*/* D (NO,BEGINER,YES,) PARM "LINECNT" */
*/* P SUB. 8 FROM COUNT - LENGTH OF VALUE */
*/* P POINT TO VALUE */
*/* S BEGFREE2: CONVERT VALUE TO BINARY */
*/* D (NO,BEGINER,YES,) VALUE GREATER THAN 10 */
*/* P STORE VALUE IN COMMON (LINENUMB) */
*/* P SUB. 2 TO ACCOUNT FOR TITLE */
*/* P (,BEGIN3) STORE AS CURRENT LINE NUMBER (LINENUM) */
*/*BEGFREE2: P SET VALUE COUNT TO LENGTH */
*/* P SAVE DELIMITER POINTER */
*/*BEGFREE1: D (NO,BEGINER,YES,) VALUE HAS ZONE OF F */
*/* P INCREMENT DELIMITER POINTER */
*/* P DECREMENT VALUE COUNT BY 1 */
*/* D (NO,BEGFREE1,YES,) VALUE COUNT 0 */
*/* P DECREMENT LENGTH FOR EX INSTR. */
*/* P RESTORE DELIMITER POINTER */
*/* P EXECUTE PACK - PACK VALUE */
*/* P CONVERT VALUE TO BINARY */
*/* R RETURN */
*/*BEGTITLE: M (,BEGIN3) SET TITLE SWITCH */
*/*%BEGSTOP: M (,BEGIN3) SET STOP SWITCH */
*/*BEGIN6: N SCAN OF EXEC PARM. COMPLETE */
*/* P SET UP DEFAULT ONGO VALUE */
*/* L GETMAIN FOR ALL CONTIGUOUS STORAGE */
*/* D (YES,,NO,STOROKAY) IS SIZE < 64K */
*/* P SET UP TO PRINT STORAGE ERROR MSG */
*/* L CALL SYNTAX RTN TO PRINT ERROR MSG */
*/* P SET NO MSG RETURN CODE */
*/* R RETURN TO AMDPRXIT */
*/*STOROKAY: P SAVE THE SIZE OF STORAGE GOTTEN IN COMMON */
*/* L FREE THE STORAGE */
*/* M INDICATE DUMP DS MUST BE SCANNED & MAPPED */
*/* M SET POSITIONING REQUIRED SWITCH */
*/* L BRWRITE: OPEN PRINTER DATA SET */
*/* L OPEN: SYSIN DCB */
*/* D (NO,BEGIN7,YES,) OPEN OK */
*/* P STORE SYSIN DCB @ IN COMMON */
*/* M (,CALLUIMI) SET RDR SWITCH - SYSIN CONTROL */
*/*BEGIN7: M  TURN OFF RDR SWITCH - CONSOLE CONTROL */
*/*CALLUIMI: L AMDPRUIM: INITIALIZE USER INTERFACE MODULE */
*/*WRTMSG: D (OFF,TRDRSW,ON,) TITLE SWITCH */
*/*DUMPMSG: P CLEAR BUFFER AREA */
*/*TITLMSG: I WTOR: GET TITLE */
*/* W WAIT FOR WTO REPLY */
*/* P TRANSLATE REPLY TO CAPS. */
*/* P CLEAR WTOR ECB */
*/* D (YES,TRDRSW,NO,) IS REPLY "SAME" */
*/* D (YES,%2,NO,) IS REPLY "END" */
*/* P (,TRDRSW) MOVE TITLE TO COMMON */
*/*%2: P (,AMDPREND) POINT TO AMDPREND */
*/*TRDRSW: D (YES,RDCARD,NO,) CONTROL STMT'S FROM READER */
*/*WRTMSG1: P CLEAR INPUT BUFFER */
*/* D (ON,NEWDMSG,OFF,) TEST FLUSHMODE SWITCH */
*/* D (OFF,,ON,RESPMSG) TEST RESPECIFY SWITCH */
*/* D (ON,CONTMSG,OFF,) TEST CONTINUATION SWITCH */
*/* I (,WTORWAIT) WTOR: ISSUE AMD155D "REPLY WITH GO,..." */
*/*NEWDMSG: I (,WTORWAIT) WTOR: ISSUE MESSAGE FOR NEWDUMP OR END */
*/*RESPMSG: I (,WTORWAIT) WTOR: ISSUE AMD210D */
*/*CONTMSG: I (,WTORWAIT) WTOR: ISSUE MESSAGE AMD199D "CONTINUE" */
*/*WTORWAIT: W WAIT FOR REPLY */
*/* P CLEAR WTOR ECB */
*/*CALLSCAN: P TRANSLATE REPLY TO CAPS. */
*/* L BRPRTMSG: PRINT REPLY ON SYSPRINT */
*/* L AMDPRMSC: ISOLATE CONTROL STATEMENT PARM */
*/* D (4,TRDRSW,0,WRTMSG) TEST RETURN CODE */
*/*RDCARD: I (EOF,,SYND,RDRERR,,CALLSCAN) GET CONTROL CARD */
*/*RDREOF: L BRPRTMSG: PRINT EOF MESSAGE (AMD170I) */
*/* M (,WRTMSG1) TURN OFF RDR SWITCH */
*/*RDRERR: P SET SYSIN DDNAME CODE (R0 = 8) */
*/* P (,AMDPRXIT) SET I/O ERROR MSG. CODE (R1 = 12) */
*/*BEGER: D (NO,BEGIN5,YES,) PARM = "ED" EDIT ERROR */
*/* P POINT TO VALUE */
*/* D (NO,BEGINER,YES,) VALUE HAVE F ZONE */
*/* D (YES,BEGINER,NO,) VALUE GT MAX OF 3 */
*/* P (,BEGIN3) STORE VALUE IN COMMON IN HEX */
*/*AMDPRMSC: E ENTER */
*/* P SAVE CALLER'S REG. & CHAIN SAVE AREAS */
*/* P SET @ OF ERROR ROUTINE */
*/* P STORE POINTER TO LIST OF SYNTAX ERROR MSG @'S */
*/* P POINT TO AMDPRSYN SYNTAX MSG ROUTINE */
*/* M RESET SWA EXCEPT FOR RDR & CVT @ SWITCHES */
*/*VERBSCN5: D (YES,VERBSCN6,NO,) COLUMN 72 BLANK */
*/* P MAKE COLUMN 72 BLANK */
*/* L AMDPRSYN: EP=SYNTAXE - COL 72 NOT BLANK */
*/*VERBSCN6: D (YES,MAP4,NO,) INPUT BUFFER BLANK */
*/*VERBSCN3: M RESET I/O & FORMAT ERROR SWITCHES */
*/* M RESET PRE-FORMATTED SWITCH */
*/* P STORE @ OF CONTROL STATEMENT VERB */
*/*CK4PRST: P SET @ OF STOP ROUTINE */
*/* P POINT RETURN FROM AMDPRSYN TO MAP4 */
*/* D (YES,EDITCONT,NO,) PROCESSING A CONTINUATION CARD */
*/*SETDELCD: P SET DELIMITER TO ZERO FOR TRT INSTR. */
*/* D (YES,SYNTAXA,NO,) VERB LONGER THAN 8 CHAR. */
*/* D
*/*(COMA,VERBSCN4,EQSN,VERBSCN4,BLK,VERBSCN4,LPRN,SYNTAXB,RPRN,
*/*SYNTAXB) TEST DELIMITER */
*/*VERBSCN4: P SAVE DELIMITER */
*/* P SAVE @ OF DELIMITER */
*/* P CALC. LENGTH OF VERB */
*/* D (NO,SYNTAX,YES,) LENGTH POSITIVE */
*/* P LOAD @ OF VERB FOR COMPARES */
*/* P DECREMENT LENGTH BY 1 FOR EX INSTR. */
*/* D (YES,%5,NO,) VERB IS "END" */
*/*CVTTEST: M INDICATE END NOT ONLY CONTROL STATEMENT */
*/* D (YES,CVTSET,NO,) VERB IS "CVT" */
*/* D (YES,SEGTBSET,NO,) VERB IS 'SEGTAB' */
*/* D (YES,SYNTAXB,NO,) DELIMITER AN EQUAL SIGN */
*/* D (NO,CKOTHR,YES,) VERB LENGTH = 6 */
*/* D (YES,SUMMARY,NO,) VERB IS 'SUMMARY' */
*/* D (YES,CPUDATA,NO,) VERB IS 'CPUDATA' */
*/*CKOTHR: D (LPA,MAP,FMT,PRNTFMT,TITL,TITLEVRB,PRNT,
*/*PRINT,GO,GO,ONGO,ONGO,NTPE,NEWTDUMP,NDMP,NEWDUMP,ND,NEWDUMP,EDIT,
*/*EDIT,,CALLUIM) TEST VERB VIA EX */
*/*%5: D (NO,SYNTAXB,YES,) DELIMITER A BLANK */
*/* S AMDPREND: END */
*/* N (,CVTTEST) NO RETURN FROM AMDPREND EXPECTED */
*/*CALLUIM: M INDICATE CTL IS CALLER */
*/* L (,MAP2) AMDPRUIM: TEST FOR USER VERBS AND INVALID VERBS */
*/*TITLEVRB: D (NO,SYNTAX,YES,) BLANK DELIMITER */
*/* P POINT TO TITLE TO BE PRINTED */
*/* D (NP,SYNTAX,POS,) CALC. LENGTH OF TITLE */
*/* D (YES,TITLMOVE,NO,) LENGTH OF TITLE & BLANK DELIMITER LT 64 */
*/* P SET LENGTH OF TITLE TO MAX OF 64 */
*/*TITLMOVE: P BLANK TITLE MSG AREA */
*/* P DECREASE LENGTH BY 1 FOR EX INSTR. */
*/* P (,MAP4) MOVE TITLE TO MSG AREA VIA EX */
*/*NEWDUMP: P POINT RETURN FROM AMDPRSYN TO MAP4 */
*/* M INDICATE FLSHMODE SHOULD BE SET IF ERROR OCCURS */
*/* P SET DDNAME TO DEFAULT "TAPE" */
*/* P SET FILE SEQ. TO DEFAULT 1 */
*/* D (YES,NEWDPGO1,NO,) COMMA DELIMITER */
*/* D (NO,SYNTAXB,YES,) BLANK DELIMITER */
*/* P STORE LIST SYNTAX ERROR MSG. @'S IN COMMON */
*/* D (NEG,SYNTAX,ZERO,NEWDPGO2,POS,) CALC LENGTH OF REMAINDER OF
*/*BUFFER */
*/* P DECREASE LENGTH BY 1 FOR EX INSTR. */
*/* P POINT TO REMAINDER OF BUFFER */
*/* P CLEAR DELIMITER */
*/* P SEARCH REMAINDER OF BUFFER FOR CHAR OR NUMERIC */
*/* D (YES,NEWDPGO2,NO,) REMAINDER ALL BLANK */
*/* P SAVE @ OF KEYWORD */
*/*NEWDUMP1: D (NO,SYNTAXA,YES,) A DELIMITER IN NEXT 9 CHAR */
*/* P SAVE @ OF KEYWORD DELIMITER */
*/* P SAVE KEYWORD DELIMITER CODE */
*/* D (NO,SYNTAXB,YES,) DELIMITER EQUAL SIGN */
*/* P CALC. LENGTH OF KEYWORD */
*/* D (YES,SYNTAX,NO,) LENGTH NOT POSITIVE */
*/* P DECREMENT LENGTH BY 1 FOR EX INSTR. */
*/* D (FSEQ,NEWFILE,DDN,NEWDD,,SYNTAXC) TEST
*/*KEYWORD VIA EX INSTR */
*/*NEWTDUMP: P POINT RETURN FROM AMDPRSYN TO MAP4 */
*/* M INDICATE FLSHMODE SHOULD BE SET IF ERROR OCCURS */
*/* P SET DDNAME TO "TAPE" (DEFAULT) */
*/* P SET FILE SEQ TO 1 (DEFAULT) */
*/* D (YES,NEWDPGO1,NO,) IS DELIMITER A COMMA */
*/* D (NO,SYNTAXB,YES,NEWDPGO2) IS DELIMITER A BLANK */
*/*NEWISOLT: P POINT TO PARAMETER VALUE */
*/* P CLEAR DELIMITER */
*/* D (NO,SYNTAXD,YES,) A DELIMITER IN NEXT 9 CHAR */
*/* P SAVE @ OF VALUE DELIMITER */
*/* P SAVE DELIMITER CODE */
*/* D (YES,NEWDUMP3,NO,) IS DELIMITER A COMMA */
*/* D (NO,SYNTAXB,YES,) IS DELIMITER A BLANK */
*/*NEWDUMP3: P COMPUTE LENGTH OF VALUE */
*/* D (YES,NEWMORE,NO,) LENGTH ZERO */
*/* P POINT TO VALUE */
*/* R RETURN VIA R3 */
*/*NEWDD: S NEWISOLT: ISOLATE @ & LENGTH OF DDNAME */
*/* P CLEAR DDNAME */
*/* P DECREMENT LENGTH BY 1 FOR EX INSTR. */
*/* P (,NEWMORE) SET DDNAME TO PARM. VALUE */
*/*NEWFILE: S NEWISOLT: ISOLATE @ & LENGTH OF FILE SEQ # */
*/* S NEWCONV: CONVERT VALUE TO BINARY */
*/* P (,NEWMORE) SET FILE SEQ # TO PARM. VALUE */
*/*NEWCONV: P MOVE @ & LENGTH OF VALUE TO WORK AREA */
*/*NEWCONV1: D (NO,SYNTAXD,YES,) DIGIT OF VALUE HAVE "F" ZONE */
*/* P POINT TO NEXT DIGIT OF VALUE */
*/* D (NO,NEWCONV1,YES,) ALL DIGITS OF VALUE TESTED */
*/* P POINT TO BEGINNING OF VALUE */
*/* P DECREMENT VALUE BY 1 FOR EX INSTR */
*/* P CONVERT VALUE TO BINARY */
*/* D (YES,SYNTAXD,NO,) VALUE LESS THAN 1 */
*/* R RETURN VIA R3 */
*/*NEWMORE: D (YES,NEWDPGO2,NO,) DELIMITER A BLANK */
*/* P POINT TO NEXT KEYWORD */
*/* P (,NEWDUMP1) UPDATE @ OF KEYWORD TO BE PROCESSED */
*/*NEWDPGO1: M (,NEWDPGO) INDICATE DELIMITER WAS COMMA */
*/*NEWDPGO2: M INDICATE DELIMITER WAS NOT COMMA (BLANK) */
*/*NEWDPGO: M INDICATE NEW DUMP */
*/*NEWTSTMS: L DEVTYPE: OBTAIN DEVICE ATTRIBUTES FOR DDNAME */
*/* D (YES,DDPRES,NO,) DEVTYPE SUCCESSFUL */
*/* P STORE "NO DD" MESSAGE IN COMMON */
*/* D (YES,ITSMAP2,NO,) NEWDUMP CONTINUATION? */
*/* P (,SYNTAXA) POINT RETURN FROM AMDPRSYN TO MAP4 */
*/*ITSMAP2: P (,SYNTAXA) POINT RETURN FROM AMDPRSYN TO MAP2 */
*/*DDPRES: D (NO,,YES,CLOSESEQ) TAPE DEVICE */
*/*DAINPUT: P GET @ OF SYNTAX WRITER */
*/* D (YES,,NO,SYNTAXE) FILE SEQ # 1 */
*/*CLOSESEQ: P GET @ OF AINDCB */
*/*SEQLOOP1: P LOAD DCB ADDRESS */
*/* P CLEAR POSSIBLE HI ORDER BYTE */
*/* D (YES,,NO,SEQLOOP2) HAD DCB BEEN STORED? */
*/* D (YES,,NO,SEQLOOP2) IS THIS DCB OPEN? */
*/* L CLOSE THIS DCB */
*/*SEQLOOP2: D (YES,SEQEND,NO,) LAST ENTRY IN DCB LIST? */
*/* P (,SEQLOOP1) STEP TO NEXT DCB ADDRESS */
*/*SEQEND: M INDICATE INPUT POSITIONING REQUIRED */
*/* M INDICATE DUMP DS MUST BE SCANNED & MAPPED */
*/* M TURN OFF QUT1PRE & QUT1LOD SWITCHES */
*/*NEWRESET: M INDICATE GET MASTER ROUTINE REQUIRED */
*/* M RESET FLUSH MODE */
*/* M RESET CVT CONTROLLED SWITCH */
*/* M RESET READ INIT. SUPPRESSION SWITCH */
*/* P RESTORE MAX @ ALLOWABLE */
*/* P RESTORE TOP-OF-REAL VALUE */
*/* P ZERO CVT @ */
*/* M RESET SWF */
*/* P ZERO QASID */
*/* P ZERO IPLCPU */
*/* M RESET SEGTAB SWITCH */
*/*NEWDONE: M RESET NEW DUMP PROCESSING SWITCH */
*/* D (YES,,NO,MAP4) NEWDUMP CONTINUATION */
*/*MAP2: D (YES,MAP3,NO,) DELIMITER A COMMA */
*/*MAP1: P SET R15 TO ZERO - NEED NEW TITLE */
*/*MAP5: P RESTORE CALLER'S REG. */
*/* R RETURN */
*/*MAP3: P (,VERBSCN3) POINT TO FIRST LOCATION FOR NEXT VERB */
*/*MAP4: P (,MAP5) SET R15 TO 4 - DO NOT NEED NEW TITLE */
*/*SUMMARY: D (YES,MAP2,NO,) IN FLUSH MODE */
*/* P POINT TO SUM PATH DESCRIPTOR */
*/* L AMDPRSEG: LOAD AMDPRSUM PATH */
*/* L (,MAP2) AMDPRSUM: SUMMARIZE DUMP DATA SET INFORMATION */
*/*CPUDATA: D (YES,MAP2,NO,) IN FLUSH MODE */
*/* P POINT TO GCD PATH DESCRIPTION */
*/* L AMDPRSEG: LOAD AMDPRGCD PATH DESCRIPTOR */
*/* L (,MAP2) AMDPRGCD: GET CPUDATA INFORMATION FROM DUMP */
*/*PRNTFMT: D (YES,MAP2,NO,) IN FLUSH MODE */
*/* M RESET FORMATTED TCB LIST SWITCH */
*/* P POINT TO FSR PATH DESCRIPTOR */
*/* L AMDPRSEG: LOAD AMDPRFSR PATH */
*/* L (,MAP2) AMDPRFSR: BUILD LIST OF TCB @'S ON TREE */
*/*MAP: D (YES,MAP2,NO,) IN FLUSH MODE */
*/* P POINT TO LPA PATH DESCRIPTOR */
*/* L AMDPRSEG: LOAD AMDPRLPA PATH */
*/* L (,MAP2) AMDPRLPA: MAP LINK PACK AREA */
*/*EDITCONT: M INDICATE RESPCIFY PROCESSED */
*/* M (,EDITSCN) INDICATE CONTINUATION PROCESSED */
*/*EDIT: P STORE DELIMITER CODE */
*/* P INDICATE EDIT IN PROGRESS */
*/*EDITSCN: P POINT TO PATH DESCRIPTOR FOR SCAN PHASE OF EDIT */
*/* L AMDPRSEG: LOAD AMDPRSCN PATH */
*/* L AMDPRSCN: EXECUTE EDIT SCAN */
*/* D (0,TEST4CT,1,) TEST CONTINUATION INVALID SWITCH */
*/* M ZERO CONTINV SWITCH */
*/* D (NO,MAP4,YES,) CONTROL STMT'S FROM READER */
*/* M (,SETDELCD) ZERO CONTSW,RESPC,EDITSW SWITCHES */
*/*TEST4CT: D (YES,MAP4,NO,) EDIT STATEMENT CONTINUATION */
*/* P RESTORE DELIMITER CODE */
*/*EDITCODE: D (YES,LODEXPHZ,NO,) SCAN PORTION OF EDIT SUCCEED */
*/* P (,MAP1) INDICATE EDIT CONTROL COMPLETED */
*/*LODEXPHZ: P POINT TO PATH DESCRIPTOR FOR EXECUTE PHASE OF EDIT */
*/* L AMDPRSEG: LOAD AMDPRXED */
*/* L AMDPRXED: EXECUTE PORTION OF EDIT */
*/* M (,MAP1) INDICATE EDIT CONTROL COMPLETED */
*/*PRINT: D (NO,SYNTAXB,YES,) DELIMITER A BLANK */
*/* P CALC SIZE OF REMAINDER OF BUFFER */
*/* D (YES,SYNTAX,NO,) SIZE NOT POSITIVE */
*/* P DECREMENT SIZE BY 1 FOR EX INSTR */
*/* P POINT TO END OF VERB */
*/* P ZERO DELIMITER */
*/* D (NO,SYNTAXD,YES,) SOME PARAMETER IN REMAINDER OF BUFFER */
*/* P SAVE @ OF PARAMETER */
*/* P STORE @ OF LIST OF SYNTAX ERROR MSG. */
*/*PRINT1: D (NO,SYNTAXA,YES,) DELIMITER IN NEXT 9 CHAR */
*/* P SET RETURN TO MAP4 */
*/* P LOAD ADDRESS OF SYNTAX MSG RTN. */
*/* P SAVE @ OF DELIMITER */
*/* P SAVE DELIMITER CODE */
*/* D (NO,SYNTAXB,YES,) DELIMITER BLANK */
*/* P CALC LENGTH OF KEYWORD */
*/* D (YES,SYNTAX,NO,) LENGTH NOT POSITIVE */
*/* P DECREMENT LENGTH BY 1 FOR EX INSTR */
*/* D (STOR,STORAGE,NUC,NUCLEUS,JOBN,JOBNAME,CURR,CURNT,
*/*REAL,REAL,SQA,NUCLEUS,CSA,NUCLEUS,,SYNTAXC) CHECK KEYWORD VIA EX
*/*INSTR */
*/*REAL: M (,REALSTOR) INDICATE PRINT REAL REQUEST */
*/*STORAGE: M INDICATE ABSOLUTE STORAGE REQUEST */
*/*REALSTOR: P SET PATH DESCRIPTOR FOR PMS MODULE */
*/* P POINT TO PATH DESCRIPTOR */
*/* L AMDPRSEG: LOAD AMDPRPMS PATH */
*/* L AMDPRPMS: ENQ REQUESTED STORAGE ON PCB QUEUE */
*/* D (NO,MORETEST,YES,MAP1) ERROR OCCURRED */
*/*NUCLEUS: D (YES,MORETEST,NO,) IN FLUSH MODE */
*/* P SET PATH DESCRIPTOR FOR NUC MODULE */
*/* D (NO,,YES,NUCPATH) ERROR OCCURRED */
*/* S DELTEST: CHECK FOR VALID DELIMITER */
*/* P POINT TO PATH DESCRIPTOR */
*/*NUCPATH: L AMDPRSEG: LOAD AMDPRNUC PATH */
*/* L AMDPRNUC: ENQUEUE NUCLEUS & HIGH PREFIX FOR PRINTING */
*/* D (NO,MORETEST,YES,MAP1) ERROR OCCURRED */
*/*JOBNAME: P POINT TO PJB PATH DESCRIPTOR */
*/* L AMDPRSEG: LOAD AMDPRPJB PATH */
*/* L (,MORETEST) AMDPRPJB: BUILD TABLE FOR JOBNAMES */
*/*CURNT: D (YES,MORETEST,NO,) IN FLUSH MODE */
*/* P SET PATH DESCRIPTOR FOR PCR MODULE */
*/* S DELTEST: CHECK FOR VALID DELIMITER */
*/* P POINT TO PCR PATH DESCRIPTOR */
*/* L AMDPRSEG: LOAD AMDPRPCR PATH */
*/*  L AMDPRPCR: PLACE @ OF CURRENT TCB IN TCBLIST */
*/*MORETEST: P SET UP FOR SYNTAX WRITER */
*/* D (NO,MAP1,YES,) DELIMITER A COMMA */
*/* P (,PRINT1) STORE @ OF BEGINNING OF NEXT PARM */
*/*DELTEST: E DELIMITER CHECK */
*/* D (NO,,YES,%DELRET) DELIMITER A COMMA */
*/* D (NO,SYNTAXB,YES,) DELIMITER A BLANK */
*/*%DELRET: R RETURN TO CALLER */
*/*ONGO: D (NO,SYNTAXB,YES,) DELIMITER A BLANK */
*/* P SET INCREMENTAL VALUE TO -1 */
*/* P POINT TO CHAR AFTER VERB */
*/* P POINT TO SCAN CHAR AT END OF BUFFER */
*/*ONGOLP1: D (NO,ONGO1,YES,) SCAN CHAR A BLANK */
*/* D (NO,ONGOLP1,YES,ONGORST) ENTIRE BUFFER TESTED */
*/*ONGORST: D (NO,MAP4,YES,) WAS THERE PREVIOUS ONGO VERB */
*/* S OPRFREE: FREE STORAGE USED */
*/* P (,MAP4) SET DEFAULT ONGO VALUES */
*/*ONGO1: P CALC LENGTH OF OPERAND */
*/* P INCREASE LENGTH BY 16 FOR WTO */
*/* P SAVE LENGTH FOR WTO (R3) */
*/* D (NO,ONGO2,YES,) WAS THERE PREV. ONGO OPERAND */
*/* S OPRFREE: FREE STORAGE OF PREV. OPERAND */
*/*ONGO2: L GETMAIN: GET STORAGE AREA FOR OPERAND */
*/* P SAVE @ OF THIS AREA (R1) */
*/* P DECREMENT LENGTH OF AREA BY 4 */
*/* P STORE LENGTH OF AREA IN AREA */
*/* P ZERO 2ND HALFWORD OF AREA */
*/* M INDICATE MULTIPLE CONSOLE SUPPORT */
*/* P BLANK OUT MESSAGE ID */
*/* P POINT TO OPERAND */
*/* P DECREMENT LENGTH BY 8 TO LENGTH OF OPERAND */
*/* P DECREMENT LENGTH BY 1 FOR EX INSTR */
*/* P MOVE OPERAND TO BUFFER VIA EX INSTR */
*/* P POINT TO END OF OPERAND */
*/* P (,MAP4) PUT DESCRIPTOR CODE & ROUTING CODE AT END OF OPERAND */
*/*OPRFREE: P CALC LENGTH OF OPERAND INCLUDING DESC & ROUTCDE */
*/* S FREEMAIN: FREE THAT STORAGE */
*/* P ZERO @ OF ONGO VERB */
*/* R RETURN VIA R9 */
*/*GO: D (NO,SYNTAXB,YES,) DELIMITER A BLANK */
*/* D (YES,GOONGOS,NO,) GO ALREADY SPECIFIED */
*/* M INDICATE GO SPECIFIED */
*/* P POINT TO ONGO OPERAND */
*/*GOONGO: P BLANK WTOR BUFFER */
*/* P LOAD LENGTH OF OPERAND AREA */
*/* P DECREMENT LENGTH BY 13 FOR EX & TO INCLUDE ID & OPERAND ONLY */
*/* P POINT TO ID & OPERAND */
*/* P MOVE ID & OPERAND TO WTOR BUFFER VIA EX INSTR */
*/* L BRPRTMSG: PRINT MSG LABELING GO FUNCTIONS */
*/* P LOAD LENGTH OF ONGO OPERANDS */
*/* P POINT TO ONGO OPERANDS */
*/* L BRPRTMSG: PRINT ONGO OPERANDS */
*/* D (YES,VERBSCN5,NO,) CONTROL CARDS OFF SYSIN */
*/*GOONGOWT: I WTO: "AMD163I GO FUNCTIONS TO BE PERFORMED" */
*/*  I (,VERBSCN5) WTO: WRITE ONGO OPERANDS */
*/*GOONGOS: P (,SYNTAXA) STORE @ OF GO SYNTAX ERROR POINTER */
*/*CVTSET: D (NO,SYNTAXB,YES,) DELIMITER AN EQUAL SIGN */
*/* P SET CVT ERROR MSG. @ */
*/* P POINT TO BEGINNING OF CVT PARAMETER VALUE */
*/* P STORE @ OF BEGINNING CVT PARAMETER VALUE */
*/* P CLEAR DELIMITER */
*/* P SCAN NEXT 9 CHAR FOR DELIMITER */
*/* P POINT TO CVT DELIMITER */
*/* D (COMA,CVTSET0,BLNK,CVTSET0,OTHR,SYNTAXB) TEST DELIMITER */
*/*CVTSET0: P SAVE DELIMITER CODE */
*/* P CALC LENGTH OF VALUE */
*/* D (YES,SYNTAXA,NO,) LENGTH ZERO */
*/* D (YES,SYNTAXA,NO,) LENGTH GT 6 */
*/* D (NO,CVTSET1,YES,) LENGTH = 1 */
*/*CVTSETA: D (NO,CVTSET1,YES,) VALUE = "P" */
*/* P (,CVTSET2) LOAD @ CVT OF PRESENT SYSTEM */
*/*CVTSET1: P SAVE LENGTH OF VALUE (R2) */
*/*CHECKCVT: D (YES,CVTOK,NO,) DIGIT OF VALUE HAVE F ZONE */
*/* D (NO,SYNTAXA,YES,) DIGIT OF VALUE A THRU F */
*/*CVTOK: P POINT TO NEXT DIGIT OF VALUE */
*/* P DECREMENT LENGTH BY 1 */
*/* D (NO,CHECKCVT,YES,) ENTIRE LENGTH CHECKED */
*/* P POINT TO VALUE */
*/* P RESTORE LENGTH OF VALUE */
*/* P TRANSLATE VALUE TO HEX WITH "F" ZONES */
*/* P PACK VALUE INTO WORK AREA */
*/* P ELIMINATE SIGN IN PACKED VALUE */
*/* P LOAD @ OF PACKED VALUE OF CVT */
*/*CVTSET2: P STORE @ OF CVT */
*/* M INDICATE CVT @ SET CVT CONTROL STATEMENT */
*/*CVTSET3: M RESET MASTER SWITCH FOR MST RE-INIT */
*/* P (,MAP2) LOAD DELIMITER CODE */
*/*SEGTBSET: D (NO,SYNTAXB,YES,) DELIMITER AN EQUAL SIGN */
*/* P SET SEGTAB ERROR MSG. @ */
*/* P POINT TO BEGINNING OF SEGTAB PARAMETER VALUE */
*/* P STORE @ OF BEGINNING SEGTAB PARAMETER VALUE */
*/* P CLEAR DELIMITER */
*/* P SCAN NEXT 9 CHAR FOR DELIMITER */
*/* P POINT TO SEGTAB DELIMITER */
*/* D (COMA,SEGSET0,BLNK,SEGSET0,OTHR,SYNTAXB) TEST DELIMITER */
*/*SEGSET0: P SAVE DELIMITER CODE */
*/* P CALC LENGTH OF VALUE */
*/* D (YES,SYNTAXA,NO,) LENGTH ZERO */
*/* D (YES,SYNTAXA,NO,) LENGTH GT 6 */
*/*SEGSET1: P SAVE LENGTH OF VALUE (R2) */
*/*CHECKSEG: D (YES,SEGOK,NO,) DIGIT OF VALUE HAVE F ZONE */
*/* D (NO,SYNTAXA,YES,) DIGIT OF VALUE A THRU F */
*/*SEGOK: P POINT TO NEXT DIGIT OF VALUE */
*/* P DECREMENT LENGTH BY 1 */
*/* D (NO,CHECKSEG,YES,) ENTIRE LENGTH CHECKED */
*/* P POINT TO VALUE */
*/* P RESTORE LENGTH OF VALUE */
*/* P TRANSLATE VALUE TO HEX WITH "F" ZONES */
*/* P PACK VALUE INTO WORK AREA */
*/* P ELIMINATE SIGN IN PACKED VALUE */
*/* P LOAD @ OF PACKED VALUE OF SEGTAB */
*/*SEGSET2: P STORE @ OF SEGTAB */
*/* P INDICATE PAGE SIZE */
*/* M INDICATE SEGTAB @ SET BY CONTROL STATEMENT */
*/*SEGSET3: M RESET MASTER SWITCH FOR MST RE-INIT */
*/* P (,MAP2) LOAD DELIMITER CODE */
*/*ERRMSG: P RESTORE CALLER'S REG. */
*/*NOT2: D (NO,NOPREFMT,YES,) IS DUMP PRE-FORMATTED */
*/* M RESET DUMP PRE-FORMATTED SWITCH */
*/* L BRPRTMSG: AMD164I TAPE IS PRE-FORMATTED DUMP MSG */
*/*TSTRDR: D (YES,ERRMSGC3,NO,) CONTROL CARDS FROM READER */
*/* I (,ERRMSGC3) WTO: AMD164I TAPE IS PRE-FORMATTED DUMP MSG */
*/*NOPREFMT: D (NO,NOPOSIT,YES,) I/O ERROR */
*/* P (,ERRMSGC) MOVE I/O ERROR MSG TO WTO AREA */
*/*NOPOSIT: D (NO,ERRMSGA,YES,) DATA POSITIONING IN PROGRESS */
*/*ORIGTAPE: P MOVE DDNAME INTO AMD168I MSG */
*/* L BRPRTMSG: WRITE AMD168I "DUMP DS EMPTY" MSG */
*/* P (,TSTRDR) POINT TO WTO MSG LIST */
*/*ERRMSGA: D (NO,ERRMSGC3,YES,) FORMATTING ERROR */
*/* P (,ERRMSGC) MOVE FORMAT ERROR MSG TO WTO LIST */
*/*ERRMSGC: L BRPRTMSG: PRINT MESSAGE */
*/*ERRMSGC3: D (NO,ERRSELEC,YES,) PROCESSING END CARD */
*/* P POINT TO EXIT ROUTINE (AMDPRXIT) */
*/* P SET TERMINATION CODE TO 4 FOR EXIT ROUTINE */
*/* L AMDPRXIT: TERMINATION - EXECUTION IMPOSSIBLE */
*/* N (,AMDPRXIT) NO RETURN FROM AMDPRXIT EXPECTED */
*/*ERRSELEC: M RESET I/O & FORMAT ERROR SWITCHES */
*/* D (NO,INITOK,YES,) BLOW-UP IN GET MASTER */
*/* M INDICATE READ INIT. TO BE SUPPRESSED */
*/* P RESTORE MAX @ */
*/* P RESTORE TOP-OF-REAL VALUE */
*/*INITOK: P LOAD R1 WITH VERBGN */
*/* D (YES,MAP3,NO,) IS VERB = E, */
*/* D (YES,MAP3,NO,) IS VERB = EDIT, */
*/* D (YES,MAP4,NO,) IS VERB = E */
*/* D (YES,MAP4,NO,) IS VERB = EDIT */
*/* P LOAD R1 WITH KYWDBGN */
*/* D (YES,PRINT1,NO,) IS KYWDBGN = 0 */
*/* P (,CK4PRST) LOAD R1 WITH VERBGN */
*/*STOPCMP: P RESTORE MSC'S REG. */
*/* P INDICATE ALL TCB'S REMOVED */
*/* L AMDPRTSV: REMOVE TCB'S */
*/* N (,MAP2) CONTINUE SCAN */
*/*AMDPRXIT: E ENTER */
*/*EREXIT: P SAVE CALLER'S REG. & CHAIN SAVE AREAS */
*/* P SAVE DDNAME CODE (R7) */
*/* D (0,EROPN,4,TERM,8,TERM,12,ERIO) BRANCH ON ACTION REQUIRED CODE */
*/*EROPN: P POINT TO "FILE CAN NOT BE OPENED" MSG */
*/* P POINT TO DDNAME */
*/* P (,ERWTO) MOVE DDNAME TO MSG */
*/*ERIO: P POINT TO PERMANENT I/O ERROR MSG */
*/* D (YES,ERIOTAPE,NO,) VAR. INPUT DDNAME (CODE = 12) */
*/* P LOCATE DDNAME IN TABLE */
*/* P (,ERWTO) MOVE DDNAME TO MSG */
*/*ERIOTAPE: P MOVE DDNAME FROM COMMON TO MSG */
*/*ERWTO: I WTO: WRITE ERROR MESSAGE */
*/*TERM: P LOAD @ OF DCB POINTERS LIST */
*/*ENDLOOP2: P POINT TO DCB @ */
*/* D (YES,ENDLOOP1,NO,) @ ZERO */
*/* D (NO,ENDLOOP3,YES,) DCB OPEN */
*/* L CLOSE: CLOSE DCB */
*/*ENDLOOP3: D (NO,ENDLOOP1,YES,) BUFFER POOL CONTROL BLOCK */
*/* L FREEPOOL: FREE BUFFER POOL */
*/*ENDLOOP1: D (YES,END1,NO,) LAST DCB */
*/* P (,ENDLOOP2) STEP TO NEXT DCB */
*/*END1: P LOAD OUTPUT BUFFER @ */
*/* D (YES,END2,NO,) @ ZERO */
*/* L FREEMAIN: FREE BUFFER */
*/* P ZERO BUFFER POINTER */
*/*END2: L BRREAD: RELEASE BUFFER SPACE */
*/* L AMDPRUIM: PERFORM USER INTERFACE CLEAN-UP */
*/*END3: P POINT TO ONGO OPERAND */
*/* D (NO,END7A,YES,) ANY OPERANDS */
*/* P LOAD LENGTH OF ONGO AREA */
*/* L FREEMAIN: FREE ONGO AREA */
*/*END7A: P ZERO ONGO OPERAND POINTER */
*/*END5: M RESET SWA, SWB, SWC, SWD, SWE, PRSW, LOADSW */
*/* P RESTORE MAX @ */
*/* P ZERO PAGE NUMBER */
*/* P RESTORE TOP-OF-REAL VALUE */
*/* P RESTORE DEFAULT LINE COUNT */
*/* P STORE LINE COUNT DEFAULT -2 */
*/*ENDALL: P RESTORE CALLER'S SAVE AREA PTR */
*/*EXIT: P RESTORE REG. FROM LAST SAVE AREA */
*/* R RETURN */
*/*AMDPREND: E ENTER */
*/* P SAVE CALLER'S REG. & CHAIN SAVE AREAS */
*/*END: M INDICATE END */
*/* D (NO,ENDSTATO,YES,) SYSUT2 LOAD REQUIRED */
*/* M SET SWITCH TO BYPASS AMDPRMST */
*/* L BRREAD: LOAD DUMP DS INTO WORK FILE */
*/*ENDSTATO: L BRPRTMSG: SPACE 2 LINES */
*/* P CONVERT TO DEC. VALUE GIVING # OF REQ. READS */
*/* P MOVE # OF REQ. READS TO MSG. 1 AREA */
*/* L BRPRTMSG: PRINT MSG 1 GIVING # READ RTN ENTRIES */
*/* P CONVERT TO DEC VALUE GIVING # OF TIMES REQ. @ NOT IN BUFFER */
*/* P MOVE VALUE TO MSG 2 AREA */
*/* L BRPRTMSG: PRINT MSG 2 - # OF TIMES REQ @ NOT IN BUFFER */
*/* D (NO,ENDSTAT1,YES,) NO OF ENTRIES TO READ ROUTINE ZERO */
*/*ENDSTAT3: P (,ENDSTAT2) ZERO DIVIDEND FOR RATIO */
*/*ENDSTAT4: P (,ENDSTAT2) SET DIVIDEND TO 1 FOR RATIO */
*/*ENDSTAT5: P (,ENDSTAT2) SET DIVIDEND TO 999 FOR RATIO */
*/*ENDSTAT1: D (EQ,ENDSTAT4,LOW,ENDSTAT3,HIGH,) COMPARE # OF READS
*/*TO # OF TIMES @ NOT IN BUF */
*/* D (ZERO,ENDSTAT5,NZ,) NO. OF TIMES @ NOT IN BUFFER */
*/* P DIVIDE # OF ENTRIES BY # OF REQ. READS */
*/* P SAVE RESULTING RATIO (R5) */
*/*ENDSTAT2: P CONVERT # OF BLOCKS READ TO DEC. */
*/* P MOVE # OF BLOCKS READ TO MSG 3 */
*/* L BRPRTMSG: PRINT MSG 3 GIVING # OF BLOCKS READ */
*/* P CONVERT # OF PERM. I/O ERRORS TO DEC. */
*/* P MOVE VALUE GIVING # OF PERM. I/O ERRORS TO MSG 4 */
*/* L BRPRTMSG: WRITE MSG 4 GIVING # OF PERM. I/O ERRORS */
*/* D (ZERO,ENDSTAT6,NZ,) COUNT OF BUFFER INIT'S */
*/* P DIVIDE TOTAL # OF BUFFERS BY COUNT OF INITIALIZATIONS */
*/*ENDSTAT6: P CONVERT RESUTLING QUOTIENT TO DEC. */
*/* P MOVE RATIO TO MSG 6 */
*/* D (YES,ENDSTAT7,NO,) REMAINDER OF DIVIDE ZERO */
*/* P MULTIPLY REMAINDER BY 100 */
*/* P DIVIDE TO OBTAIN FRACTIONAL PART */
*/*ENDSTAT7: P CONVERT FRACTION TO TWO DECIMAL DIGITS */
*/* P MOVE CONBINED RATIO TO MSG 6 */
*/* L BRPRTMSG: WRITE MSG 6 GIVING AVG # OF BUFFERS PER FN */
*/* L BRPRTMSG: SPACE A LINE */
*/* P CONVERT RATIO OF # OF ENTRIES TO # OF REQ. READS TO DEC */
*/* P MOVE RATIO TO MSG 5 */
*/* L BRPRTMSG: PRINT MSG 5 OF RATIO OF ITEM 1 TO ITEM 2 */
*/* P CONVERT # OF TRACE RECORDS PROCESSED TO DEC */
*/* L BRPRTMSG: SPACE A LINE */
*/* L BRPRTMSG: PRINT MSG 7 GIVING # OF TRACE RECORDS */
*/*EXITOUT: P LOAD TERMINATION CODE OF 4 */
*/* L () AMDPRXIT: TERMINATE */
*/*AMDPRCTL: END */
***********************************************************************
*                                                                     *
**                      ****   B E G I N   ****                      **
*                                                                     *
***********************************************************************
         SPACE
         EQUATES
         COMMON
DCBOFLGS EQU   48
CVTPTR   EQU   76
PARMER   EQU   128                 INVALID EXEC CARD PARM
AMDPRCTL CSECT                                                  X01980
         ENTRY AMDPRDMP
AMDPRDMP SAVE  (14,12),T,AMDPRDMP-OS/VS2-02.0                    Y02006
         BALR  BASE1,0             SET UP REG 11 AS BASE
         USING *,BASE1
CTLBASE  LA    R2,CTLSAVE          SAVE AREA CHAINING           X01980
         ST    R13,CTLSAVE+4
         ST    R2,8(R13)
         L     R3,SAVEPTR          STORE R13 IN XIT'S           SA54065
         ST    R13,0(R3)           SAVE AREA                    SA54065
         LR    R13,R2
         SPACE
         L     COMBASE,COMMADDR    LOAD BASE FOR COMMON
         USING COMMON,COMBASE
         USING SYNEPS,R15                                        Y02006
         SPACE
         XC    ERRADDR,ERRADDR     ZERO ERROR ROUTINE ADDRESS
         XC    CVTADDR,CVTADDR     ZERO SET CVT ADDR
         NI    I3800SW,XFF-I3800ULN ZERO USER-SPEC-LEN FLAG    @Z40MI3F
         L     R4,0(R1)            PARAMETER ADDR
         LH    R2,0(R4)            PARAMETER LENGTH
         LTR   R2,R2               TEST LENGTH
         BNP   BEGIN6              ZERO OR NEG BR
         SR    R5,R5               ZERO CNT REG
         LA    R4,2(R4)            ADDR OF BEGINNING OF PARM
         LR    R6,R4               PLACE ADDR IN R6
BGNLOOP  CLI   0(R6),C','          LOOK FOR COMMA
         BE    BEGIN1              FOUND ONE
         AH    R5,ONEA             INCREMENT COUNT
BEGIN2   AH    R6,ONEA             INCREMENT ADDRESS
         BCT   R2,BGNLOOP          LOOP FOR ORIGINAL CNT IN R2
         SPACE
BEGIN1   CH    R5,ONEA             COMPARE LENGTH TO ONE
         BL    BEGINER             BR IF LT ONE
         BE    BEGIN5              BR IF EQ--DEFAULT PARAMETER   Y02006
         CH    R5,EIGHT            COMPARE LN TO 8               S21014
         BH    BEGLCNT             GT 8--PROBABLY LINE COUNT
         CH    R5,FOUR             COMPARE TO FOUR               S21014
         BE    BEGER               GO TEST FOR EDIT ER= PARM     S21014
BEGIN5   BCTR  R5,0                DECR CNT FOR EXECUTE
         LA    R3,TITLE
         EX    R5,COMPARE1         DOES PARM EQ 'TITLE'
         BE    BEGTITLE            YES--SET TITLESW
         LA    R3,STOP
         EX    R5,COMPARE1         DOES PARM EQ 'STOP'
         BNE   BEGINER             NO--LOOK AT NEXT PARM         XM5100
         SPACE
*** STOP OPTION WAS REQUESTED ***                                XM5100
         OI    SWE,STOPSW          SET SW TO ALLOW OPERATOR TO STOP
*                                  DUMP
         B     BEGIN3              CONTINUE
BEGTITLE OI    SWE,TITLESW         SET SW TO FORCE OPERATOR TO ENTER
*                                  DUMP NUMBER FOR TITLE
         B     BEGIN3              CONTINUE
         SPACE
BEGLCNT  CLC   LNCNTP(8),0(R4)     TEST FOR 'LINECNT'            S21014
         BNE   BEGINER             NO--LOOK AT NEXT PARM
         SH    R5,EIGHT            GET LN OF LINECNT VAL
         LA    R8,8(R4)            ADDR OF LINE CNT NO
         BAL   R9,BEGFREE2         GO GET LINE COUNT VALUE IN HEX
         CH    R8,HTEN             COMPARE SPECIFIED LINECNT TO 10
         BNH   BEGINER             DON'T SET LINECNT IF IT IS LT 10
         CH    R8,LNCNTMAX         COMPARE LINECNT TO MAXIMUM  @ZA27117
         BH    BEGINER             DONT SET LINECNT IF > MAX   @ZA27117
         STH   R8,LINENUMB         STORE NUMBER OF LINES PER PAGE
 ST R8,LINECNT RESET LINE COUNT
         SH    R8,TWO              SUBTRACT 2 FOR LINECNT-2
         STH   R8,LINENUM          STORE LINECNT-2 VALUE
         OI    I3800SW,I3800ULN    SET USER-SPEC-LEN FLAG      @Z40MI3F
         B     BEGIN3              CONTINUE WITH NEXT PARM
LNCNTMAX DC    H'32767'            LINE COUNT MAXIMUM VALUE    @ZA27117
         SPACE
***  CONVERT VALUE TO BINARY  ***                                S21014
BEGFREE2 LR    R0,R8               SAVE R8 IN R0  (ADDR OF VALUE)
         LR    R7,R5               LOAD LENGTH TO R7 AND TEST IT S21014
*                                  LENGTH MUST BE POITIVE TO     S21014
*                                  GET THIS FAR                  S21014
BEGFREE1 TM    0(R8),X'F0'         TEST ZONE FOR 'F'
         BNO   BEGINER             IGNORE IF NOT
         LA    R8,1(R8)            STEP TO NEXT
         BCT   R7,BEGFREE1         LOOP FOR LENGTH
         BCTR  R5,0                DECR FOR EXECUTE
         LR    R8,R0               RESTORE ADDR OF VALUE TO R8 FOR PACK
         EX    R5,BUFPACK          PACK BUFNO TO WORK1
         CVB   R8,WORK1            CONVERT TO BINARY INTO R8
         BR    R9                  BR ON PRE-LOADED R9 - RETURN TO
*                                  CALLER
BEGER    CLC   EDITPARM(3),0(R4)   TEST FOR EDIT ERROR PARM      S21014
         BNE   BEGIN5              BRANCH IF NOT TO CONTINUE     S21014
*                                  TESTING FOR ADDITIONAL PARMS  S21014
         LA    R4,3(R4)            POINT TO PARM VALUE           S21014
         TM    0(R4),X'F0'         TEST FOR NUMERIC VALUE        S21014
         BNO   BEGINER             IF NOT, BRANCH TO GIVE ERROR  S21014
*                                  MESSAGE                       S21014
         CLI   0(R4),C'3'          COMPARE TO MAXIMUM VALUE      S21014
         BH    BEGINER             VALUE TO BIG - GIVE ERROR MSG S21014
         MVC   EDITER(1),0(R4)     MOVE TO COMMON FOR LATTER USE S21014
*                                  BY EDIT                       S21014
         NI    EDITER,X'0F'        CLEAR ZONE                    S21014
         SPACE
***  CONTINUE SCAN  ***
BEGIN3   LTR   R2,R2               IS ORIGINAL COUNT ZERO
         BZ    BEGIN6              YES--DONE
         SR    R5,R5               ZERO COUNT
         LA    R4,1(R6)            NEW STARTING ADDR TO R4
         B     BEGIN2              LOOK FOR NEXT PARM
         SPACE
BEGINER  TM    CTLSW,PARMER        HAS MESSAGE BEEN GIVEN
         BO    BEGIN3              BRANCH AROUND MESSAGE IF YES  X01980
         OI    CTLSW,PARMER        INDICATE MESSAGE ISSUED       X01980
         LR    R5,R2               SAVE REG 2 VALUE AROUND MACRO
         BRPRTMSG  INVPARM,L'INVPARM
         LR    R2,R5               RESTORE REG 2
         B     BEGIN3              LOOK AT NEXT PARM
          SPACE
BEGIN6   EQU   *                                                 Y02006
         MVC   ONGOPTR,AUTONGO1    MOVE IN AUTO ONGO PTR         Y02006
         GETMAIN  VC,LA=REQUEST,A=GETSTG  GET ALL AVAILABLE STORAGE
*                                                                Y02006
         LTR   R15,R15             WAS AT LEAST 64K THERE        Y02006
         BZ    STOROKAY            YES, GO FREE IT               Y02006
*   THE STORAGE AREA FOR THE AMDPRDMP PROGRAM IS LESS THAN 128K.
*   PRINT MESSAGE AND TERMINATE PRDMP.
STORERR  L     R15,STORMSG         ADDRESS OF ERROR MESSAGE      Y02006
         ST    R15,SYNMSGA         STORE IN COMMON               Y02006
         OI    SWD,NOSTDMG         INDICATE MSG 165I NOT NEEDED  Y02006
         L     R15,ASYNTAX         POINT TO MSG WRITER           Y02006
         BAL   R14,SYNTAXA         WRITE MESSAGE AMD151I         Y02006
         LA    R1,4                LOAD TERMINATION CODE         Y02006
         L     R15,AEREXIT         POINT TO TERMINATION ROUTINE  Y02006
         BALR  R14,R15             LINK TO IT(NO RETURN EXPECTED)Y02006
         SPACE 1
*   THERE IS ENOUGH STORAGE AVAILABLE FOR PRDMP TO PROCESS, SO CONTINUE
STOROKAY MVC   STORSIZE,AVAILSTG   SAVE STORAGE SIZE IN COMMON   Y02006
         FREEMAIN  V,A=GETSTG      FREE ALL GOTTEN STORAGE       Y02006
         SPACE 1
         OI    SWE,BUILDMAP        DUMP DS MUST BE SCANNED       Y02006
*                                  AND MAPPED                    X01980
         OI    SWC,POSITSW         INPUT DATA POSITIONING IS REQUIRED
         BRWRITE 0                 OPEN OUTDCB FIRST THING TO PREVENT
*                                  AN 80A ABEND AFTER CORE IS GOTTEN
*                                  FOR INPUT BUFFERS
         OPEN  RDRDCB              TRY TO OPEN RDRDCB
         TM    RDRDCB+DCBOFLGS,DCBOPEN DID IT OPEN
         BZ    BEGIN7              NO--SYSIN DD CARD NOT THERE
         LA    R2,RDRDCB           GET ADDR READER DCB            M0732
         ST    R2,ARDRDCB          STORE IN COMMON CSECT          M0732
         OI    SWA,RDRSW           YES - INDICATE READING CONTROL CARDS
         B     CALLUIMI            CONTINUE                      Y02006
BEGIN7   NI    SWA,XFF-RDRSW       RESET READER SWITCH - NOT READING
*                                  SYSIN
CALLUIMI L     R15,AUSRINIT        GET ADDR OF USER INTERFACE    Y02006
*                                  INITIALIZATION ROUTINE        Y02006
         BALR  RETREG,R15          LINK TO IT                    Y02006
         EJECT
***********************************************************************
*                                                                     *
**                     ***  GET DUMP NUMBER  ***                     **
*                                                                     *
*                                                                     *
*   IF THE TITLESW IS SET (TITLE CODED AS AN EXEC CARD PARM) THIS     *
*   ROUTINE WILL ISSUE A WTOR TO ALLOW THE OPERATOR TO ENTER A        *
*   TITLE WHICH WILL BE PRINTED AS PART OF THE TITLE ON EACH PAGE OF  *
*   THE OUTPUT LISTING.  THERE ARE ONLY 3 VALID REPLIES....           *
*                                                                     *
*        1  A CHARACTER STRING OF UP TO 64 CHARACTERS, WHICH     S21014
*           WILL BECOME THE DUMP TITLE                           S21014
*                                                                     *
*        2  'SAME' - ENTERED EXACTLY AS SHOWN WILL LEAVE THE TITLE    *
*           AS IS.                                                    *
*                                                                     *
*        3  'END' - ENTERED EXACTLY AS SHOWN WILL CAUSE THE PROGRAM   *
*           TO TERMINATE.                                             *
*                                                                     *
***********************************************************************
         SPACE
WRTMSG   DS    0H
         TM    SWE,TITLESW         IS TITLESW ON
         BZ    TRDRSW              NO - DON'T REQUEST TITLE
DUMPMSG  MVI   WTORMSG,X'40'
         MVC   WTORMSG+1(79),WTORMSG CLEAR BUFFER
         LA    R2,WTORMSG          GET ADDR'S OF WTOR REPLY AREA
         LA    R3,WTORECB          AND WTOR ECB
TITLMSG  WTOR  'AMD154D REPLY TITLE , ''SAME'', OR ''END''',     Y01980X
               (R2),64,(R3),ROUTCDE=(1),DESC=2
         WAIT  ECB=WTORECB         WAIT FOR REPLY
         TR    WTORMSG(80),CAPTABL TRANSLATE TO CAPITALS
         MVI   WTORECB,0           CLEAR COMPLETION CODE
         LA    R2,WTORMSG         SET BEGINNING OF INPUT BUFFER OZ09686
FSTCHR   CLC   0(3,R2),ENDVERB1   END ENTERED                   OZ09686
         BNE   CHKSAME            NO - LOOK FOR SAME            OZ09686
         LA    R2,3(R2)           STEP AROUND END FIELD         OZ09686
         B     CONT               CHECK FOR ADDITIONAL FIELDS   OZ09686
CHKSAME  CLC   0(5,R2),SAME       SAME ENTERED                  OZ09686
         BNE   TMTITLE            MUST BE TITLE                 OZ09686
         LA    R2,4(R2)            STEP AROUND 'SAME'          @OZ19024
CONT     LA    R3,74              LOOP MAX OF 74                OZ09686
BLNKLOOP CLI   0(R2),X'40'        LOOK FOR NON BLANK            OZ09686
         BNE   TMTITLE            NON BLANK MEANS TITLE HERE    OZ09686
         LA    R2,1(R2)           LOOK AT NEXT FIELD            OZ09686
         BCT   R3,BLNKLOOP        CHECK NEXT POSITION           OZ09686
         CLC   WTORMSG(5),SAME     IS REPLY 'SAME'               X01980
         BE    TRDRSW              YES--LEAVE THE SAME TITLE
         CLC   WTORMSG(3),ENDVERB1 WAS REPLY 'END'
         BNE   TMTITLE            NOT END SO MUST BE TITLE      OZ09686
         SR    R15,R15                                          OZ09686
         C     R15,ERRADDR        WAS ERRADDR SET YET           OZ09686
         BE    CALLSCAN           NO - GO THROUGH NORMAL        OZ09686
*                                 INITIALIZATION FIRST          OZ09686
         L     R15,AEND            GET ADDRESS OF END ROUTINE
         BR    R15                 BRANCH TO END ROUTINE        OZ09686
***  MUST BE TITLE  ***                                          S21014
TMTITLE  EQU   *                  BRANCH HERE TO PROCESS TITLE  OZ09686
         MVC   TITLEMSG(64),WTORMSG  MOVE TITLE                  S21014
*                                  FUNC. COMPLETE FALL THROUGH   S21014
*                                  TO GET NEXT CONTROL STATEMENT S21014
         EJECT
***********************************************************************
*                                                                     *
**                  ***  GET CONTROL STATEMENT  ***                  **
*                                                                     *
*                                                                     *
*   THIS ROUTINE WILL EITHER ISSUE A WTOR SO THAT THE OPERATOR MAY    *
*   ENTER CONTROL STATEMENTS OR BRANCH TO READ CONTROL CARDS FROM     *
*   THE SYSIN DATA SET.  ONCE A CONTROL STATEMENT IS OBTAINED CSECT   *
*   AMDPRMSC - MAIN SCAN - IS CALLED TO PROCESS THE STATEMENT.   X01980
*                                                                     *
***********************************************************************
         SPACE
TRDRSW   TM    SWA,RDRSW           TEST SOURCE OF CONTROL CARDS
         BO    RDCARD              ON - READ FROM SYSIN
*                                  OFF - ASK OPERATOR
WRTMSG1  MVI   WTORMSG,X'40'
         MVC   WTORMSG+1(79),WTORMSG CLEAR BUFFER
         LA    R2,WTORMSG          GET ADDR'S OF WTOR AREA
         LA    R3,WTORECB          AND WTOR ECB
         TM    SWD,FLSHMODE        IS FLUSHMODE SWITCH SET       Y02006
         BO    NEWDMSG             YES - ISSUE NEWDUMP MESSAGE   Y02006
         TM    SWE,RESPC           RESPECIFY FOR EDIT            X01014
         BO    RESPMSG             YES - ISSUE RESPECIFY MESSAGE X01014
         TM    SWD,CONTSW          TEST FOR READING CONTINUATION X01980
         BO    CONTMSG             IF SO, BRANCH TO ISSUE        S21014
*                                  MESSAGE AMD199D RATHER THAN   X01980
*                                  AMD155D                       X01980
         WTOR  'AMD155D REPLY WITH GO, DESIRED FUNCTION, OR END',      X
               (R2),71,(R3),ROUTCDE=(1),DESC=2                   Y02006
         B     WTORWAIT            BRANCH TO WAIT FOR REPLY      S21014
***  REQUEST NEWDUMP OR END  ***                                 Y02006
NEWDMSG  WTOR  'AMD283D REPLY WITH NEWDUMP OR END',                    X
               (R2),71,(R3),ROUTCDE=(1),DESC=2                   Y02006
         B     WTORWAIT            BRANCH TO WAIT FOR REPLY      Y02006
***  REQUEST RESPECIFICATION  ***                                X01014
RESPMSG  WTOR  'AMD210D RESPECIFY EDIT KEYWORDS OR REPLY ''RUNEDIT''', X
               (R2),71,(R3),ROUTCDE=(1),DESC=2                   Y02006
         B     WTORWAIT            BRANCH TO WAIT FOR REPLY      X01014
***  REQUEST CONTINUATION  ***                                   S21014
CONTMSG  WTOR  'AMD199D  CONTINUE DEFINITION',                         X
               (R2),71,(R3),ROUTCDE=1,DESC=2                     Y02006
WTORWAIT WAIT  ECB=WTORECB
         MVI   WTORECB,0           CLEAR COMPLETION CODE
CALLSCAN TR    WTORMSG(80),CAPTABL CONVERT SMALL LETTERS TO CAPS S21014
         BRPRTMSG WTORMSG,80       PRINT REPLY ON SYSPRINT       S21014
         SPACE
         L     R15,ASCAN           GET ADDRESS OF SCAN CSECT     S21014
         BALR  RETREG,R15          LINK TO SCAN
         B     *+4(R15)            BRANCH ON RETURN CODE FROM SCAN
         B     WRTMSG              BRANCH TO TEST FOR NEW TITLE
         B     TRDRSW              JUST GET NEW CONTROL CARD
         EJECT
***********************************************************************
*                                                                     *
*   READ CONTROL CARDS FROM SYSIN                                     *
*                                                                     *
***********************************************************************
         SPACE
RDCARD   GET   RDRDCB,WTORMSG      READ CONTROL CARD INTO WTOR BUFFER
         B     CALLSCAN            CONTINUE
         SPACE 2
RDRERR   LA    R0,8                LOAD CODE FOR SYSIN DD NAME
         LA    R1,12               LOAD CODE FOR I/O ERROR MSG
         L     R15,AEREXIT         EXIT TO WRITE MSG  AND
         BR    R15                 TERMINATE PROGRAM
         SPACE
RDREOF   BRPRTMSG  RDEOFMSG,57     PRINT END OF FILE MESSAGE
         NI    SWA,XFF-RDRSW       RESET RDR SWITCH
         B     WRTMSG1             GO COMMUNICATE WITH OPERATOR
         EJECT
***********************************************************************
*                                                                     *
*   CONSTANTS FOR INIT                                                *
*                                                                     *
***********************************************************************
         SPACE
BUFPACK  PACK  WORK1(8),0(0,R8)
COMPARE1 CLC   0(0,R4),0(R3)
WTORECB  DC    F'0'                ECB FOR WTOR'S                Y02006
         SPACE
SAVEPTR  DC    A(R13SAVE)          ADDR OF R13 SAVE AREA        SA54065
COMMADDR DC    V(AMDPRCOM)         ADDRESS OF COMMON CSECT       X01980
ASCAN    DC    A(AMDPRMSC)         ADDRESS OF SCAN CSECT         X01980
AUTONGO1 DC    X'80'               INDICATE AUTO ONGO
         DC    AL3(AUTOPER)        ADDR OF AUTO OPERANDS
CTLSAVE  DC    18F'0'              SAVE AREA FOR AMDPRCTL        X01980
ENDVERB1 DC    C'END'
SAME     DC    CL5'SAME'
LNCNTP   DC    C'LINECNT='                                       S21014
EDITPARM DC    C'ER='              EDIT ERROR PARM               S21014
CTLSW    DC    X'00'
INVPARM  DC    C'AMD187I INVALID EXEC CARD PARAMETER'            X01980
RDEOFMSG DC    C'AMD170I END OF FILE ON SYSIN - CONTROL PASSED TO OPERAX
               TOR'                                              X01980
STORMSG  DC    V(AMDPRP01)         ERROR MESSAGE ADDRESS         Y02006
REQUEST  DS    0CL8                AREA FOR GETMAIN              Y02006
MIN      DC    F'65536'                                          Y02006
MAX      DC    XL4'00FFFFFF'                                     Y02006
GETSTG   DS    0CL8                AREA FOR GETMAIN/FREEMAIN     Y02006
         DC    F'0'                                              Y02006
AVAILSTG DC    F'0'                                              Y02006
         EJECT
RDRDCB   DCB   DDNAME=SYSIN,MACRF=(GM),DSORG=PS,                       X
               EODAD=RDREOF,SYNAD=RDRERR,LRECL=80                Y01980
         EJECT
***********************************************************************
*                                                                     *
*  CONTROL STATEMENT SCAN ROUTINE                                     *
*                                                                     *
***********************************************************************
         SPACE
BLANK    EQU   X'40'                                             Y02006
AMDPRMSC CSECT                                                   X01980
         USING *,R15                                             Y02006
         MODID                                                   Y02006
         DROP  R15                                               Y02006
         STM   R14,R12,12(R13)     SAVE INIT'S REGS
         BALR  BASE1,0             BASE SCAN ROUTINE
         USING *,BASE1
MSCBASE  LA    R2,MSCSAVE
         ST    R2,8(R13)
         ST    R13,MSCSAVE+4
         LR    R13,R2
         SPACE
         USING COMMON,COMBASE      BASE COMMON CSECT
         USING SYNEPS,R15
         USING MSCSAVE,R13         BASE DATA AREA                X01980
         SPACE
         LA    R2,ERRMSG           GET ADDRESS OF MAJOR ERROR ROUTINE
         ST    R2,ERRADDR          STORE IT IN COMMON
         LA    R15,WRTSYNA         ADDR OF SYNTAX ERROR MSG ADDR Y02006
         ST    R15,SYNMSGA         STORE IT                      Y02006
         L     R15,ASYNTAX         GET ADDR OF SYNTAX MSG ROUT   Y02006
         NI    SWA,RDRSW+SETCVTSW  RESET ALL BUT RDRSW AND SET   Y02006
*                                  CVT ADDR SWITCHES IN SWA      Y02006
VERBSCN5 CLI   WTORMSG+71,BLANK    IS COLUMN 72 BLANK            Y02006
         BE    VERBSCN6            YES - GO SCAN BUFFER          Y02006
         MVI   WTORMSG+71,BLANK    BLANK COLUMN 72               Y02006
         BAL   RETREG,SYNTAXE      OUTPUT ERROR MESSAGE          Y02006
VERBSCN6 TRT   WTORMSG(72),NONBLNK LOOK FOR FIRST NON-BLANK CHAR Y02006
         BC    8,MAP4              BUFFER BLANK
VERBSCN3 NI    SWB,XFF-(IOERR+FMTERR)  RESET ERROR INDICATORS
         NI    BUFSW,XFF-PREFM     RESET PRE-FORMATTED SW        X01980
         ST    R1,VERBGN           SAVE ADDR OF BEGINNING OF VERB
CK4PRST  LA    R2,STOPCMP          GET ADDRESS OF STOP ROUTINE   Y02006
         ST    R2,STOPEXIT         STORE IN COMMON CSECT
         LA    R15,WRTSYNA         ADDR OF SYNTAX ERROR MSG ADDRS
         ST    R15,SYNMSGA         STORE IT
         L     R15,ASYNTAX         GET ADDR OF SYNTAX MSG ROUTINE
         LA    R14,MAP4            POINT RETURN TO TEST RDRSW
*                                  DON'T NEED TITLE AFTER SYNTAX ER
         XC    KYWDBGN(4),KYWDBGN  ZERO KEYWORD POINTER          Y02006
         XC    KYWDEND(4),KYWDEND  ZERO KEYWORD END POINTER      Y02006
         TM    SWD,CONTSW          CONTINUATION STMT EXPECTED    Y02006
         BO    EDITCONT            YES - GO SCAN IT              Y02006
         SR    R2,R2               CLEAR DELIMITER REGISTER
         TRT   0(72,R1),BLNK       LOOK FOR FIRST DELIMITER      Y02006
         B     *(2)                IF DELIMITER WAS A COMMA REG2 WILL
*                                  EQ 4, IF IT WAS AN = REG2 WILL EQ 8,
*                                  IF IT WAS A BLANK REG2 WILL EQ 12
         B     VERBSCN4            COMMA--OK
         B     VERBSCN4            EQUAL SIGN--ONLY 'CVT=' & 'SEGTAB='
         B     VERBSCN4            BLANK--OK
         B     SYNTAXB             LEFT PAREN--INVALID           Y02006
         B     SYNTAXB             RIGHT PAREN--INVALID          Y02006
VERBSCN4 ST    R2,DELIMCD          SAVE DELIMITER CODE
         ST    R1,VERBEND          SAVE VERB END ADDR
         S     R1,VERBGN           GET LENGTH
         BNP   SYNTAX              LENGTH EQ TO OR LT ZERO       Y02006
         CH    R1,EIGHT            IS VERB GREATER THAN 8 CHAR   Y02006
         BH    VB2LNG              YES - ERROR                   Y02006
         L     R4,VERBGN
         SH    R1,ONEA             SET FOR EXEC. INSTRUCTION     X01980
         BZ    CVTTEST             IS LENGTH OF VERB EQUAL 1     X01980
*                                  YES, IT IS NOT 'END' VERB     X01980
         CLC   0(3,R4),ENDVERB     WAS VERB 'END'                Y02006
         BNE   CVTTEST             BRANCH IF INVALID VERB        X01980
         CLC   DELIMCD+2(2),TWELVE WAS DELIMITER A BLANK         Y02006
         BNE   SYNTAXB             NO - GO ISSUE ERROR MESSAGE   Y02006
         L     R15,AEND            GET ADDRES OF END ROUTINE     X01980
         BALR  RETREG,R15          YES - ALL DONE - BALR ONLY    X01980
*                                  TO LOAD REG 14 FOR DEBUGGING  X01980
*                                  NO RETURN EXPECTED            X01980
VB2LNG   LA    R14,MAP2            ERROR RETURN ADDRESS          Y02006
         B     SYNTAXA             GO ISSUE ERROR MESSAGE        Y02006
CVTTEST  OI    SWD,NOLOADSW        END NOT ONLY STATEMENT        X01980
         LA    R3,CVTPARM
         LTR   R1,R1               LENGTH=1                      Y02006
         BE    CVTCOMP             YES,OK TO COMPARE             Y02006
         CH    R1,TWO              LENGTH = 3                    Y02006
         BNE   SEGCOMP             NO - GO CHECK FOR SEGTAB      Y02006
CVTCOMP  EX    R1,COMPARE          WAS PARM 'CVT'                Y02006
         BE    CVTSET              YES--SET ADDR OF CVT TO BE USED
SEGCOMP  LA    R3,SGTBPARM                                       Y02006
         LTR   R1,R1               LENGTH = 1                    Y02006
         BE    SEGCOMP1            YES, OK TO COMPARE            Y02006
         CH    R1,FIVE             LENGTH = 6                    Y02006
         BNE   CHKDEL              NO, CHECK DELIMITER           Y02006
SEGCOMP1 EX    R1,COMPARE          WAS PARM 'SEGTAB'?            Y02006
         BE    SEGTBSET            YES- SET @ SEG TAB TO BE USED X01980
CHKDEL   CH    R2,EIGHT            WAS DELIMITER AN EQ SIGN      Y02006
         BE    SYNTAXB             YES--DELIMITER ERROR          Y02006
         C     R1,SIX              WAS LENGTH = SEVEN            Y02006
         BNE   CKOTHR              NO - NOT SUMMARY OR CPUDATA   Y02006
         CLC   0(7,R4),SUMVERB     WAS VERB 'SUMMARY'            Y02006
         BE    SUMMARY             YES - GO PRINT SUMMARY INFO   Y02006
         CLC   0(7,R4),CPUDVERB    WAS VERB 'CPUDATA'            Y02006
         BE    CPUDATA             YES - GO PRINT CPUDATA INFO   Y02006
         CLC   0(7,R4),DISPVERB    WAS VERB 'DISPLAY'          @Y30MIBS
         BE    DISPLAY             YES, GO TO DISPLAY RTN      @Y30MIBS
CKOTHR   LA    R3,MAPPARM          ADDR OF LPAMAP
         LTR   R1,R1               LENGTH = 1                    Y02006
         BE    LCOMP               YES, OK TO COMPARE            Y02006
         CH    R1,FIVE             LENGTH = 6                    Y02006
         BNE   CHKTITLE            NO,NOT LPAMAP OR FORMAT       Y02006
LCOMP    EX    R1,COMPARE          IS IT EQUAL                   Y02006
         BE    MAP                 YES--DO LINK PACK AREA MAP
         LA    R3,FMTPARM
         EX    R1,COMPARE          WAS VERB 'FORMAT'
         BE    PRNTFMT             YES--GO FORMAT ALL REGION'S CONTROL
*                                  BLOCKS
CHKTITLE LA    R3,TITLE                                          Y02006
         LTR   R1,R1               LENGTH = 1                    Y02006
         BE    TITLECMP            YES, OK TO COMPARE            Y02006
         CH    R1,FOUR             LENGTH = 5                    Y02006
         BNE   GOCOMP              NO, NOT TITLE OR PRINT        Y02006
TITLECMP EX    R1,COMPARE          WAS VERB 'TITLE'              Y02006
         BE    TITLEVRB            YES--MOVE TITLE TO TITLEMSG
         LA    R3,PRNTVERB
         EX    R1,COMPARE          WAS VERB 'PRINT'
         BE    PRINT               YES
         LA    R3,DISPVERB                                     @Y30MIBS
         EX    R1,COMPARE          WAS VERB 'DISPLAY'          @Y30MIBS
         BE    DISPLAY             YES, GO TO DISPLAY RTN      @Y30MIBS
GOCOMP   LA    R3,GOVERB                                         Y02006
         EX    R1,COMPARE          WAS VERB 'GO'
         BE    GO                  YES
         LA    R3,ONGOVRB
         LTR   R1,R1               LENGTH = 1                    Y02006
         BE    ONGOCOMP            YES, OK TO COMPARE            Y02006
         CH    R1,THREE            LENGTH = 4                    Y02006
         BNE   NDCOMP              NO, NOT ONGO VERB             Y02006
ONGOCOMP EX    R1,COMPARE          WAS VERB 'ONGO'               Y02006
         BE    ONGO                YES--SAVE OPERAND
NDCOMP   LA    R3,NEWTVERB         BEFORE NEWDUMP SO 'N' TAKES   Y02006
*                                  AS ABRV. FOR NEWTAPE
         LTR   R1,R1               LENGTH = 1                    Y02006
         BE    NCMP                YES, OKAY TO COMPARE          Y02006
         C     R1,SIX              LENGTH = 7                    Y02006
         BNE   CHKND               NO,NOT NEWDUMP OR NEWTAPE     Y02006
NCMP     EX    R1,COMPARE          WAS VERB 'NEWTAPE'            Y02006
         BE    NEWTDUMP            YES
         LA    R3,NEWVERB
         EX    R1,COMPARE          WAS VERB 'NEWDUMP'
         BE    NEWDUMP             YES
CHKND    LA    R3,NEWVERBA                                       Y02006
         EX    R1,COMPARE          WAS VERB 'ND' - ABRV. FOR NEWDUMP
         BE    NEWDUMP             YES
         LA    R3,EDITVERB         POINT TO 'EDIT' VERB          S21014
         LTR   R1,R1               LENGTH = 1                    Y02006
         BE    EDITCOMP            YES , OK TO COMPARE           Y02006
         CH    R1,THREE            LENGTH = 4                    Y02006
         BNE   USRVERB             NO - NOT EDIT                 Y02006
EDITCOMP EX    R1,COMPARE          WAS VERB 'EDIT'               Y02006
         BE    EDIT                YES                           S21014
*                                  NO MATCH--FALL THRU TO USER   Y02006
*                                  INTERFACE MODULE              Y02006
         SPACE 1                                                 Y02006
USRVERB  MVI   EXITFLAG,ZVERB      SET UP FOR CALL FROM CTL      Y02006
         L     R15,AUSREXIT        LOAD ADDRESS OF USER          Y02006
*                                  INTERFACE MODULE              Y02006
         BALR  R14,R15             BRANCH TO IT                  Y02006
         B     MAP2                GO TEST FOR ADD. SCAN         Y02006
         EJECT
***********************************************************************
*   HANDLE EDIT CONTINUATION STATEMENTS                               *
***********************************************************************
EDITCONT NI    SWE,XFF-RESPC       RESET RESPECIFY SWITCH        Y02006
         NI    SWD,XFF-CONTSW      ON MEANS CONT. RECEIVED       S21014
         B     EDITSCN             GO TO EDIT SCAN               S21014
         SPACE 2
***********************************************************************
*                                                                     *
*   THE FOLLOWING ROUTINES LINK TO RESPECTIVE AMDPRDMP EXECUTORS.     *
*   BEFORE AN EXECUTOR CAN BE INVOKED, THE PATH WHICH TERMINATES WITH *
*   THAT EXECUTOR IS LOADED.  NODES ON THE EXECUTORS PATH ARE THE     *
*   SERVICE ROUTINES WHICH IT REQUIRES.                               *
*                                                                     *
***********************************************************************
         SPACE
***  LINK TO LPA MAP ROUTINE TO PRINT MAP OF LINK PACK AREA  ***
MAP      TM    SWD,FLSHMODE        IN FLUSH MODE                 Y02006
         BO    MAP2                YES, DON'T LOAD PATH          Y02006
         LA    PREG,LPAPATH        POINT TO LPA EXECUTOR'S PATH
*                                  DESCRIPTOR
         L     R15,ALOADER         GET ADDRESS OF LOAD ROUTINE
         BALR  RETREG,R15          LINK TO LOADER
         LR    R15,PREG            LOAD ADDRESS OF LPA MAP EXECUTOR
*                                  RETURNED BY LOADER
         BALR  RETREG,R15          LINK TO IT
MAP2     CH    R2,FOUR             WAS DELIMITER CODE 4 (COMMA)
         BE    MAP3                GO INCREMENT TO NEXT VERB
MAP1     SR    R15,R15             TEST FOR NEW TITLE
MAP5     L     R13,4(R13)          POINT TO INIT'S SAVE AREA
         L     R14,12(R13)         RESTORE INIT'S REGS
         LM    R0,R12,20(R13)
         BR    RETREG              RETURN FOR CONTROL STATEMENT
         SPACE
MAP4     LA    R15,4               DON'T NEED NEW TITLE
         B     MAP5                CONTINUE PROCESSING
MAP3     L     R1,VERBEND          LOAD DELIMITER ADDRESS
         AH    R1,ONEA             STEP TO NEXT CHARACTER
         B     VERBSCN3            SCAN FOR NEXT VERB
         SPACE
***  LINK TO FORMAT EXECUTOR  ***
PRNTFMT  TM    SWD,FLSHMODE        IN FLUSH MODE                 Y02006
         BO    MAP2                YES, DON'T LOAD PATH          Y02006
         LA    PREG,FMTPATH        POINT FORMAT'S PATH DESCRIPTOR
         L     R15,ALOADER         GET ADDRESS OF LOAD ROUTINE
         BALR  RETREG,R15          LINK TO LOADER
         LR    R15,PREG            GET ADDRESS OF FORMAT EXECUTOR
         BALR  RETREG,R15          LINK TO IT
         B     MAP2                GO TEST FOR ADDITIONAL SCANNING
         SPACE
***  PROCESS SUMMARY VERB  ***                                   Y02006
SUMMARY  TM    SWD,FLSHMODE        IN FLUSH MODE                 Y02006
         BO    MAP2                YES, DON'T LOAD PATH          Y02006
         LA    PREG,SUMPATH        POINT TO SUMMARY'S PATH       Y02006
*                                  DESCRIPTOR                    Y02006
         L     R15,ALOADER         GET ADDRESS OF LOAD ROUTINE   Y02006
         BALR  RETREG,R15          LINK TO LOADER                Y02006
         LR    R15,PREG            GET ADDRESS OF AMDPRSUM RETURNED
*                                  BY LOADER                     Y02006
         BALR  RETREG,R15          LINK TO IT                    Y02006
         B     MAP2                GO TEST FOR ADD. SCANNING     Y02006
         SPACE 2                                               @Y30MIBS
***  PROCESS DISPLAY VERB  ***                                 @Y30MIBS
DISPLAY  TM    SWD,FLSHMODE        IN FLUSH MODE               @Y30MIBS
         BO    MAP2                YES, DON'T LOAD PATH        @Y30MIBS
         LA    PREG,DISPATH        POINT TO DISPLAY'S PATH     @Y30MIBS
         L     R15,ALOADER         GET ADDR OF LOAD RTN        @Y30MIBS
         BALR  RETREG,R15          LINK TO LOADER              @Y30MIBS
         LR    R15,PREG            GET ADDR OF AMDPRFDS        @Y30MIBS
         BALR  RETREG,R15          LINK TO IT                  @Y30MIBS
         B     MAP2                GO TEST FOR ADD. SCANNING   @Y30MIBS
         SPACE 2                                                 Y02006
*** PROCESS CPUDATA VERB  ***                                    Y02006
CPUDATA  TM    SWD,FLSHMODE        IN FLUSH MODE                 Y02006
         BO    MAP2                YES, DON'T LOAD PATH          Y02006
         LA    PREG,CPUDPATH       POINT TO CPUDATA'S PATH       Y02006
*                                  DESCRIPTOR                    Y02006
         L     R15,ALOADER         GET ADDRESS OF LOAD ROUTINE   Y02006
         BALR  RETREG,R15          LINK TO LOADER                Y02006
         LR    R15,PREG            GET ADDRESS OF CPUDATA EXECUTOR
*                                  RETURNED BY LOADER            Y02006
         BALR  RETREG,R15          LINK TO IT                    Y02006
         B     MAP2                GO TEST FOR ADD. SCANNING     Y02006
         SPACE 2                                                 Y02006
***  EDIT - PROCESS GTF TRACE DATA  ***                          S21014
EDIT     TM    SWD,FLSHMODE        IN FLUSH MODE               @ZA02798
         BO    MAP2                YES,DON'T LOAD PATH         @ZA02798
         STC   R2,EDDELIM          SAVE DELIMETER FOLLOWING EDIT
*                                  VERB AS INDICATOR OF WHERE    S21014
*                                  SCAN IS TO PICK UP AFTER      S21014
*                                  EDIT PROCESSING - SAME CARD   S21014
*                                  OR GET NEXT CARD              S21014
         OI    SWC,EDITSW          INDICATE EDIT IN PROCESS      S21014
         LA    PREG,EDIT1          POINT TO PATH DESCRIPTOR FOR  S21014
*                                  SCAN PHASE OF EDIT            S21014
         L     R15,ALOADER         GET ADDRESS OF PATH LOAD RTN  S21014
         BALR  RETREG,R15          LINK TO LOADER                S21014
         ST    PREG,AEDITSCN       SAVE EP ADDRESS OF AMDPRSCN   X01980
*                                  RETURNED BY LOADER            S21014
EDITSCN  L     R15,AEDITSCN        POINT TO SCN                  S21014
         BALR  RETREG,R15          LINK TO EDIT SCAN ROUTINE -   S21014
*                                  AMDPRSCN                      X01980
         TM    SWD,CONTSW          TEST FOR EDIT SCAN REQUESTING S21014
*                                  CONTINUATION                  S21014
         BO    MAP4                BRANCH TO GET STMT. IF SO     S21014
         SR    R2,R2               CLEAR DELIM REG BEFORE IC     S21014
         IC    R2,EDDELIM          LOAD DELIMITER CODE SO ACTION S21014
*                                  CAN BE TAKEN AFTER EITHER     S21014
*                                  SCAN ERROR OR EDIT COMPLETE   S21014
         B     EDITCODE(R15)       BRANCH ON SCN'S RETURN CODE   S21014
EDITCODE B     LODEXPHZ            0 - GO LOAD EDIT EXECUTION    S21014
*                                      PHASE                     S21014
         NI    SWC,XFF-EDITSW      EDIT NO LONGER IN CONTROL     S21014
         B     MAP2                BRANCH TO NEXT VERB STMT      S21014
***  LOAD EDIT EXECUTION PHASE  ***                              S21014
LODEXPHZ LA    PREG,EDIT2          POINT TO PATH DESCRIPTOR FOR  S21014
*                                  EDIT EXECUTION PHASE          S21014
         L     R15,ALOADER         GET ADDR PATH LOAD ROUTINE    S21014
         BALR  RETREG,R15          LINK TO LOADER                S21014
         LR    R15,PREG            POINT TO EDIT FORMAT CONTROL  S21014
*                                  ROUTINE - AMDPRFRM            X01980
         BALR  RETREG,R15          LINK TO FRM                   S21014
         NI    SWC,XFF-EDITSW      EDIT NO LONGER IN CONTROL     S21014
         B     MAP2                BRANCH TO GET NEXT VERB       S21014
         SPACE
***********************************************************************
*                                                                     *
*  THE PRINT CONTROL STATEMENT MUST BE SCANNED BEYOND THE VERB LEVEL  *
*  TO SEPARATE ABSOLUTE STORAGE REQUESTS FROM PRINT REQUESTS WHICH    *
*  NEED THE AMDPRFMT SERVICE ROUTINE                             X01980
*                                                                     *
***********************************************************************
         SPACE
PRINT    CH    R2,TWELVE           TEST FOR DELIMITER OF BLANK   Y02006
         BNE   SYNTAXB             NOT BLANK--ERROR
         LA    R4,WTORMSG+71       COMPUTE NUMBER                Y02006
         S     R4,VERBEND          OF BYTES REMAINING
*                                  IN BUFFER
         BC    12,SYNTAX           BR IF ZERO OR NEGATIVE
         BCTR  R4,0                DECREMENT 1 FOR EXECUTE
         L     R1,VERBEND
         SR    R2,R2               CLEAR DELIMITER CODE REG
         EX    R4,NBLNKTRT         LOOK FOR KEY WORD
         BC    8,SYNTAXD           NO OPERAND
         ST    R1,KYWDBGN          SAVE BEGINNING ADDR
PRINT1   LA    RETREG,MAP4
         L     R15,ASYNTAX
         TRT   0(72,R1),BLNK       LOOK FOR NEXT DELIMITER       Y02006
         LA    R3,PRTSYNA          ADDR OF SYNTAX ERROR MSG ADDRS
         ST    R3,SYNMSGA          STORE IT
         ST    R1,KYWDEND          SAVE ENDING ADDR
         ST    R2,DELIMCD          SAVE DELIMITER CODE
         CH    R2,TWELVE           IS DELIM VALID                X01980
         BH    SYNTAXB             BR IF NOT
         L     R4,KYWDBGN
         SR    R1,R4               LENGTH OF KEYWORD
         BC    12,SYNTAX           BR IF LE ZERO
         LA    R14,MORETEST        ERROR RETURN ADDRESS          Y02006
         CH    R1,EIGHT            KEYWORD LONGER THAN 8 CHAR    Y02006
         BH    SYNTAXA             YES - GO ISSUE MESSAGE        Y02006
         LA    R14,MAP4            RESET ERROR RETURN ADDRESS    Y02006
         BCTR  R1,0                DECR BY 1 FOR EXECUTE
         LA    R3,STOROP
         LTR   R1,R1               LENGTH = 1                    Y02006
         BE    PRNTCOMP            YES, OK TO COMPARE            Y02006
         C     R1,SIX              LENGTH = 7                    Y02006
         BNE   CHKREAL             NO - NOT CURRENT,JOBNAME,STORAGE
*                                  OR NUCLEUS                    Y02006
PRNTCOMP EX    R1,COMPARE          KEYWORD EQUAL STORAGE         Y02006
         BE    STORAGE             ABSOLUTE STORAGE REQUEST
         LA    R3,NUCOP
         EX    R1,COMPARE          KEYWORD EQUAL NUCLEUS
         BE    NUCLEUS             YES--PRINT NUCLEUS AND SQS
         LA    R3,JOBOP
         EX    R1,COMPARE          KEYWORD EQUAL JOBNAME
         BE    JOBNAME             PRINT TASKS ASSOCIATED WITH JOB
         LA    R3,CUROP
         EX    R1,COMPARE          KEYWORD EQ 'CURRENT'
         BE    CURNT               YES--PRINT CURRENT TASK
CHKREAL  LA    R3,REALOP                                         Y02006
         LTR   R1,R1               LENGTH = 1                    Y02006
         BE    REALCOMP            YES , OK TO COMPARE           Y02006
         CH    R1,THREE            LENGTH = 4                    Y02006
         BNE   CHKCSA              NO - NO REAL                  Y02006
REALCOMP EX    R1,COMPARE          KEYWORD EQ 'REAL'             Y02006
         BE    REAL                YES--PRINT REAL STORAGE       X01980
CHKCSA   LA    R14,MORETEST        ERROR RETURN ADDRESS          Y02006
         CH    R1,TWO              WAS LENGTH = THREE            Y02006
         BNE   SYNTAXC             NO - NOT CSA OR SQA           Y02006
         LA    R14,MAP4            RESTORE ERROR RETURN ADDR     Y02006
         LA    R3,CSAOP                                          Y02006
         EX    R1,COMPARE          KEYWORD EQUAL CSA             Y02006
         BE    NUCLEUS             YES -PRINT COMMON SYSTEM AREA Y02006
         LA    R3,SQAOP                                          Y02006
         EX    R1,COMPARE          KEYWORD EQUAL SQA             Y02006
         BE    NUCLEUS             YES - PRINT SQA               Y02006
         LA    R14,MORETEST        ERROR RETURN ADDRESS          Y02006
         B     SYNTAXC             KEYWORD INVALID
         SPACE
***  REAL STORAGE REQUEST - LINK TO PMS EXECUTOR  ***            X01980
REAL     OI    PRSW,PRNTRL         INDICATE PRINT REAL REQUEST   X01980
         B     REALSTOR            SET PATH DESCRIPTOR           X01980
***  ABSOLUTE STORAGE REQUEST - LINK TO PMS EXECUTOR  ***
STORAGE  NI    PRSW,XFF-PRNTRL     INDICATE ABSOLUTE STORAGE     X01980
*                                  REQUEST                       X01980
REALSTOR MVC   PRTPATH+5(3),PMS    SET NAME OF ABSOLUTE STORAGE  X01980
*                                  EXECUTOR IN PATH DESCRIPTOR   X01980
         LA    PREG,PRTPATH        POINT TO PATH DESCRITOR
         L     R15,ALOADER         GET ADDRESS OF LOAD ROUTINE
         BALR  RETREG,R15          LINK TO IT
         LR    R15,PREG            LOAD ADDRESS ABSOLUTE STORAGE
*                                  EXECUTOR - RETURNED BY LOADER
         BALR  RETREG,R15          LINK TO THE EXECUTOR
         B     MORETEST            GO TEST FOR MORE PRINT PARMS
         SPACE
***  SET UP TO PRINT NUCLEUS AND SQA - NUC EXECUTOR  ***
NUCLEUS  TM    SWD,FLSHMODE        IN FLUSH MODE                 Y02006
         BO    MORETEST            YES, DON'T LOAD PATH          Y02006
         MVC   PRTPATH+5(3),NUC    SET NAME OF NUC PRINT EXEC    Y02006
         BAL   R9,DELTEST          CHECK FOR VALID DELIMITER     X01980
NUCPATH  LA    PREG,PRTPATH        POINT TO PATH DESCRIPTOR      X01980
         L     R15,ALOADER         GET ADDRESS OF LOAD ROUTINE
         BALR  RETREG,R15          LINK TO LOADER
         LR    R15,PREG            GET ADDRESS OF NUC EXECUTOR
         BALR  RETREG,R15          LINK TO IT
         B     MORETEST            GO TEST FOR MORE PRINT PARMS
         EJECT
***********************************************************************
*                                                                     *
*  THE FOLLOWING PRINT OPERATIONS REQUIRE THE FORMAT SERVICE ROUTINE  *
*                                                                     *
***********************************************************************
         SPACE
***  PRINT STORAGE BY SPECIFIC JOBNAME  ***
JOBNAME  MVC   FPRTPATH+17(3),PJB  SET NAME OF JOBNAME EXECUTOR  Y02006
*                                  IN PATH DESCRIPTOR            Y02006
         LA    PREG,FPRTPATH       POINT TO PATH DESCRIPTOR      Y02006
         L     R15,ALOADER         LOAD ADDRESS OF LOAD ROUTINE
         BALR  RETREG,R15          LINK TO LOADER
         LR    R15,PREG            GET ADDRESS OF JOBNAME EXECUTOR
*                                  RETURNED BY LOADER
         BALR  RETREG,R15          LINK TO IT
         B     MORETEST            GO TEST FOR MORE PRINT KEYWORDS
         SPACE
***  LINK TO PRINT CURRENT EXECUTOR  ***
CURNT    TM    SWD,FLSHMODE        IN FLUSH MODE                 Y02006
         BO    MORETEST            YES, DON'T LOAD PATH          Y02006
         MVC   FPRTPATH+17(3),CUR  SET NAME OF CURRENT EXECUTOR  Y02006
*                                  IN PATH DESCRIPTOR
         LA    PREG,FPRTPATH       POINT TO PATH DESCRIPTOR
         BAL   R9,DELTEST          CHECK FOR VALID DELIMITER     X01980
         L     R15,ALOADER         LOAD ADDRESS LOAD ROUTINE
         BALR  RETREG,R15          LINK TO LOADER
         LR    R15,PREG            GET ADDRESS OF CURRENT EXECUTOR
         BALR  RETREG,R15          LINK TO IT
*                                  FALL THROUGH TO MORETEST TO CHECK
*                                  FOR ADDITIONAL PRINT KEYWORDS
         SPACE
MORETEST LA    R14,MAP4            RELOAD RETURN REGISTER        A44079
         L     R15,ASYNTAX         RELOAD EP ADDR OF AMDPRSYN    A44079
         CLI   DELIMCD+3,X'04'     TEST FOR DELIMITER OF COMMA    M3515
         BNE   MAP1                NO - READ NEXT CARD            M3515
*                                  OTHERWISE - CONTINUE SCAN OF   M3515
*                                  THIS CONTROL STMT.             M3515
         L     R1,KYWDEND          DELIMITER ADDR
         AH    R1,ONEA             INCR BY ONE
         ST    R1,KYWDBGN          SAVE ADDR OF BEGINNING OF NEXT PARM
         B     PRINT1              CONTINUE SCANNING BUFFER
         EJECT
***********************************************************************
*                                                                     *
*        THE FOLLOWING VERIFIES THAT ONLY A BLANK OR COMMA DELIMITER  *
*        FOLLOWS PRINT CURRENT, NUCLEUS, CSA, OR SQA REQUESTS         *
*                                                                     *
***********************************************************************
         SPACE
DELTEST  CLI   DELIMCD+3,X'04'     DELIMITER A COMMA             X01980
         BCR   8,R9                YES - RETURN                  X01980
         CLI   DELIMCD+3,X'0C'     DELIMITER A BLANK             X01980
         BCR   8,R9                YES - RETURN                  X09180
         L     R15,ASYNTAX         ADDRESS OF SYNTAX WRITER      X01980
         B     SYNTAXB             INVALID DELIMITER             X01980
***********************************************************************
*                                                                     *
**                    ***  ONGO VERB ROUTINE  ***                    **
*                                                                     *
*                                                                     *
*   THIS ROUTINE SETS UP THE FUNCTIONS TO BE DONE FOR A CONTROL       *
*   STATEMENT OF 'GO'.  THE 'ONGO' VERB SHOULD BE FOLLOWED BY AT      *
*   LEAST ONE BLANK FOLLOWED BY THE DESIRED FUNCTIONS.  IF THERE IS   *
*   NOTHING FOLLOWING 'ONGO' THE ONGO FUNCTION WILL BE RESET AND THE  *
*   STANDARD GO DEFAULTS WILL BE DONE.                                *
*                                                                     *
***********************************************************************
         SPACE
ONGO     CH    R2,TWELVE           WAS DELIMITER BLANK           Y02006
         BNE   SYNTAXB             NO--ERROR...DELIMITER INVALID
         LA    R2,1                LOAD INCR VALUE
         L     R3,VERBEND          LOAD ADDR DELIMITER FOR COMPARAND
         LCR   R2,R2               COMPLIMENT FOR A NEG INCR
         LA    R1,WTORMSG+70       LOAD START ADDR FOR BACK SCAN Y02006
ONGOLP1  CLI   0(R1),C' '          LOOK FOR FIRST NON BLANK CHAR IN
*                                  BACK SCAN
         BNE   ONGO1               BR IF NON BLANK FOUND
         BXH   R1,R2,ONGOLP1       LOOP--SCANNING BACKWARDS FOR FIRST
*                                  NON-BLANK CHAR
         B     ONGORST             ALL BLANK--RESET ONGO FUNCTION
         SPACE
ONGO1    S     R1,VERBEND          LENGTH OF ONGO OPERAND
         LA    R1,16(R1)           ADD 16 FOR TOTAL LN REQUIRED TO
*                                  FORM WTO LIST
         LR    R3,R1               SAVE IN R3
         L     R2,ONGOPTR          LOAD ADDR OF PREV ONGO OPERAND
         LTR   R2,R2               WAS THERE A PREV ONE
         BNP   ONGO2               NO--BR AROUND
         BAL   R9,OPRFREE          YES--FREE SPACE OCCUPIED BY OLD OPER
ONGO2    LR    R0,R3               LOAD LENGTH REQ FOR OPER TO R0 FOR
*                                  GETMAIN
         GETMAIN R,LV=(0)          GET CORE FOR SAVING OPERAND IN
         ST    R1,ONGOPTR          SAVE ADDR OF GOTTEN CORE
         SH    R3,FOUR             STORE LN MINUS ROUTCDE AND DESC
         STH   R3,0(R1)            STORE LN OF OPERAND IN GOTTEN CORE
         XC    2(2,R1),2(R1)       ZERO 2ND HALFWORD OF GOTTEN LIST
         OI    2(R1),X'80'         INDICATE MCS LIST
         MVI   4(R1),C' '          BLANK OUT MESSAGE ID
         MVC   5(7,R1),4(R1)
         LA    R7,12(R1)           ADDR OF WHERE TO PUT OPERAND
         L     R2,VERBEND
         AH    R2,ONEA             ADDR OF BEG OF OPER
         SH    R3,TWELVE           DECR LN 5 FOR EX
         BCTR  R3,0
         EX    R3,JOBMOVE          MOVE OPERAND TO SAVE BUFFER
         LA    R7,1(R3,R7)         ADDR OF ROUTCDE AND DESC
         XC    0(4,R7),0(R7)
         OI    0(R7),X'02'         DESC=7
         OI    2(R7),X'40'         ROUTCDE=(2)
         B     MAP4                CONTINUE
         SPACE
ONGORST  L     R2,ONGOPTR          LOAD ADDR OF ONGO OPERAND
         LTR   R2,R2               IS IT ZERO OR NEG (AUTO ONGO OPER)
         BNP   MAP4                 YES--NOTHING TO DO...SO CONTINUE
         BAL   R9,OPRFREE          GO FREE THE CORE
         MVC   ONGOPTR,AUTONGO     SET AUTO ONGO OPERAND BACK UP
         B     MAP4                CONTINUE
         SPACE 2
OPRFREE  LH    R0,0(R2)            LOAD LN OF OPERAND
         LA    R0,4(R0)            INCR. LENGTH TO ACCOUNT FOR
*                                  ROUTCDE AND DESC
         LR    R1,R2               ADDR OF AREA TO BE FREED
         FREEMAIN R,LV=(0),A=(1)   FREE IT
         XC    ONGOPTR,ONGOPTR     ZERO POINTER
         BR    R9                  RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
**                     ***  GO VERB ROUTINE  ***                     **
*                                                                     *
*                                                                     *
*   THIS ROUTINE MOVES THE SAVED ONGO OPERAND TO THE WTORMSG BUFFER   *
*   AND RETURNS TO VERBSCN5 TO EXECUTE IT AS A CONTROL STATEMENT.  IF *
*   THE GOSW IS ON UPON ENTRY THE ONGO OPERAND HAD A GO PARAMETER IN  *
*   IT AND THE ROUTINE WILL INDICATE A SYNTAX ERROR.                  *
*                                                                     *
***********************************************************************
         SPACE
GO       CH    R2,TWELVE           WAS DELIMITER A BLANK         Y02006
         BNE   SYNTAXB             NO--ERROR..DELIMITER INVALID
         TM    SWA,GOSW            IS GOSW ALREADY ON
         BO    GOONGOS             YES--GO SPECIFIED IN ONGO OPERAND
*                                  ERROR...ERROR
         OI    SWA,GOSW            SET GO SWITCH
         L     R1,ONGOPTR          LOAD ONGO OPERAND PTR
GOONGO   MVI   WTORMSG,C' '        BLANK WTOR
         MVC   WTORMSG+1(79),WTORMSG BUFFER
         LH    R3,0(R1)            LOAD LN OF OPERAND
         SH    R3,C13              DECR 13 FOR EX                XM5890
         LA    R2,12(R1)           ADDR OF OPERAND TO R2         XM5890
         LA    R7,WTORMSG          ADDR OF WHERE IT GOES
         EX    R3,JOBMOVE          MOVE ONGO OPERAND TO WTOR BUFFER
         BRPRTMSG GOONGOWT+8,36    PRINT MESSAGE OF GO FUNCTIONS
         LA    R2,9(R3)            LOAD LN OF OPERAND -12        XM5890
         L     R1,ONGOPTR          LOAD ONGO OPERAND POINTER
         LA    R1,4(R1)            LOAD ADDR OF OPERAND
         BRPRTMSG  (R1),(R2)       PRINT ONGO OPERANDS
         TM    SWA,RDRSW
         BO    VERBSCN5            YES--DON'T WTO THE OPERAND
*                                                                 M3375
GOONGOWT WTO   'AMD163I GO FUNCTIONS TO BE PERFORMED',ROUTCDE=(2),     X
               DESC=7                                            X01980
         L     R1,ONGOPTR          LOAD ADDR OF ONGO OPERAND
         WTO   MF=(E,(1))          WTO THE OPERAND
         B     VERBSCN5            PROCEED
         SPACE 2
GOONGOS  LA    R1,GOSYNA           LOAD ADDR OF GO SYNTAX ERROR PTRS
         ST    R1,SYNMSGA          ST IN SYNTAX ERR MSG PTRS PTR
         B     SYNTAXA             GO TELL'EM ABOUT IT
         EJECT
***********************************************************************
*                                                                     *
*   SET THE CVT ADDRESS TO THAT SPECIFIED BY OPERATOR                 *
*                                                                     *
***********************************************************************
         SPACE
CVTSET   CH    R2,EIGHT            IS DELIMITER AN EQ SIGN       Y02006
         BNE   SYNTAXB             NO--DELIMITER ERROR
         LA    R3,CVTSYNA          SET SYNTAX
         ST    R3,SYNMSGA          ERROR MSG ADDR
         L     R3,VERBEND          POINT TO END OF CVT VERB
         AH    R3,ONEA             INCREMENT PAST DELIMITER
         ST    R3,KYWDEND          POINT TO END OF VALUE
         LR    R1,R3               REG 1 TO ADDR BEGINNING OF VALUE
         SR    R2,R2               CLEAR DELIMITER REG BEFORE TRANSLATE
         TRT   0(9,R3),BLNK        SCAN OPERAND
         ST    R1,VERBEND          STORE ADDR END OF CVT-VAL     A43177
         CH    R2,FOUR             IS DELIM A COMMA - OK         A43177
         BE    CVTSET0             BRANCH TO PROCESS VALUE       A43177
         CH    R2,TWELVE           IS DELIM A BLANK              A43177
         BNE   SYNTAXB             INVALID DELIMITER - GO ISSUE  A43177
*                                  ERROR MESSAGE                 A43177
CVTSET0  ST    R2,DELIMCD          SAVE DELIMITER CODE FOR       A43177
*                                  TESTING AT LABEL MAP2         A43177
         LA    R14,MAP2            ERROR RETURN ADDRESS          Y02006
         SR    R1,R3               CALC LENGTH OF VALUE          A43177
         BZ    SYNTAXA             ZERO--NO ADDR
         C     R1,SIX              COMPARE LN TO SIX
         BH    SYNTAXA             GT 6--TOO BIG
         CH    R1,ONEA             IS LENGTH OF ADDR 1
         BH    CVTSET1             NO--CAN'T BE A 'P'
CVTSETA  CLI   0(R3),C'P'          IS ADDR GIVEN 'P'
         BNE   CVTSET1             NO--MUST BE AN ADDR
         L     R1,CVTPTR           YES--USE CVT ADDR OF PRESENT SYSTEM
         B     CVTSET2             BR AROUND
CVTSET1  LR    R2,R1               SAVE LENGTH IN R2             A35933
         LA    R14,CVTERRTN        ERROR RETURN ADDRESS          Y02006
CHECKCVT TM    0(R3),X'F0'         TEST FOR NUMERIC ZONE         A35933
         BO    CVTOK               STEP TO NEXT IF SO            A35933
         CLI   0(R3),C'F'          TEST FOR LEST THAN 'F'        A35933
         BH    SYNTAXA             ERROR IF NOT                  A35933
         CLI   0(R3),C'A'          TEST FOR GREATER THAN 'A'     A35933
         BL    SYNTAXA             ERROR IF NOT                  A35399
CVTOK    LA    R3,1(R3)            INCREMENT VALUE POINTER       A35933
         BCT   R1,CHECKCVT         LOOP ON LENGTH                A35933
         L     R1,KYWDEND          RESTORE VALUE POINTER         A35933
         LR    R3,R2               LENGTH TO R3                  A35933
         BCTR  R3,0                DECR FOR EXECUTE
         EX    R3,STRGTR           TRANSLATE TO UNPACKED HEX
         LA    R2,X'70'            LENGTH OF TARGET FOR PACK INST
         OR    R2,R3               LENGTH OF SOURCE IN R3, OR TO GET
*                                  BOTH LENGTHS IN ONE BYTE
         EX    R2,STRGPACK         PACK TO HEX IN WORK1
         MVO   WORK1+1(4),WORK1+4(4)  GET RID OF SIGN
         L     R1,WORK1            LOAD HEX ADDRESS INTO R1
CVTSET2  ST    R1,CVTADDR          STORE GIVEN CVT ADDR
         OI    SWA,SETCVTSW        INDICATE CVT ADDR SET BY CONTROL
CVTSET3  NI    SWC,XFF-MSTRSW      RESET MASTER SWITCH AND       Y02006
         TM    SWF,QSADMP          AMDSADMP INPUT                Y02006
         BZ    CVTERRTN            NO - BRANCH                   Y02006
         XC    QASID(2),QASID      ZERO QASID FIELD IN COMMON    Y02006
CVTERRTN L     R2,DELIMCD          LOAD DELIMITER CODE           Y02006
         B     MAP2                CONTINUE  - GO TEST DELIM     A43177
         EJECT
***********************************************************************
*                                                                     *
*   SET THE SEGTAB ADDRESS TO THAT SPECIFIED BY OPERATOR              *
*                                                                     *
***********************************************************************
         SPACE
SEGTBSET CH    R2,EIGHT            IS DELIMITER AN EQ SIGN       Y02006
         BNE   SYNTAXB             NO--DELIMITER ERROR           X01980
         LA    R3,SEGSYNA          SET SYNTAX                    X01980
         ST    R3,SYNMSGA          ERROR MSG ADDR                X01980
         L     R3,VERBEND          POINT TO END OF CVT VERB      X01980
         AH    R3,ONEA             INCREMENT PAST DELIMITER      X01980
         ST    R3,KYWDEND          POINT TO END OF VALUE         X01980
         LR    R1,R3               REG 1 TO @ BEGINNING OF VALUE X01980
         SR    R2,R2               CLEAR DELIM REG BEFOR XLATE   X01980
         TRT   0(9,R3),BLNK        SCAN OPERAND                  X01980
         ST    R1,VERBEND          STORE ADDR END OF CVT-VAL     X01980
         CH    R2,FOUR             IS DELIM A COMMA - OK         X01980
         BE    SEGSET0             BRANCH TO PROCESS VALUE       X01980
         CH    R2,TWELVE           IS DELIM A BLANK              X01980
         BNE   SYNTAXB             INVALID DELIMITER - GO ISSUE  X01980
*                                  ERROR MESSAGE                 X01980
SEGSET0  ST    R2,DELIMCD          SAVE DELIMITER CODE FOR       X01980
*                                  TESTING AT LABEL MAP2         X01980
         LA    R14,MAP2            ERROR RETURN ADDRESS          Y02006
         SR    R1,R3               CALC LENGTH OF VALUE          X01980
         BZ    SYNTAXA             ZERO--NO ADDR                 X01980
         C     R1,SIX              COMPARE LN TO SIX             X01980
         BH    SYNTAXA             GT 6--TOO BIG                 X01980
SEGSET1  LR    R2,R1               SAVE LENGTH IN R2             X01980
         LA    R14,SEGERRTN        ERROR RETURN ADDRESS          Y02006
CHECKSEG TM    0(R3),X'F0'         TEST FOR NUMERIC ZONE         X01980
         BO    SEGOK               STEP TO NEXT IF SO            X01980
         CLI   0(R3),C'F'          TEST FOR LESS THAN 'F'        X01980
         BH    SYNTAXA             ERROR IF NOT                  X01980
         CLI   0(R3),C'A'          TEST FOR GREATER THAN 'A'     X01980
         BL    SYNTAXA             ERROR IF NOT                  X01980
SEGOK    LA    R3,1(R3)            INCREMENT VALUE POINTER       X01980
         BCT   R1,CHECKSEG         LOOP ON LENGTH                X01980
         L     R1,KYWDEND          RESTORE VALUE POINTER         X01980
         LR    R3,R2               LENGTH TO R3                  X01980
         BCTR  R3,0                DECR FOR EXECUTE              X01980
         EX    R3,STRGTR           TRANSLATE TO UNPACKED HEX     X01980
         LA    R2,X'70'            LENGTH OF TARGET FOR PACK INS X01980
         OR    R2,R3               LENGTH SRC IN R3, OR TO GET   X01980
*                                  BOTH LENGTHS IN ONE BYTE      X01980
         EX    R2,STRGPACK         PACK TO HEX IN WORK1          X01980
         MVO   WORK1+1(4),WORK1+4(4)  GET RID OF SIGN            X01980
         L     R1,WORK1            LOAD HEX ADDRESS INTO R1      X01980
SEGSET2  ST    R1,SEGTABOR         STORE GIVEN SEGTAB ADDR       X01980
         MVI   SEGTABOR,X'FF'      FLAG BYTE                     X01980
         OI    PRSW,QSEGTBSW       INDICATE @SEGTAB SET BY CNTRL X01980
SEGSET3  NI    SWC,XFF-MSTRSW      RESET MASTER SWITCH AND       Y02006
         TM    SWF,QSADMP          AMDSADMP INPUT                Y02006
         BZ    SEGERRTN            NO - BRANCH                   Y02006
         XC    QASID(2),QASID      ZERO QASID FIELD IN COMMON    Y02006
SEGERRTN L     R2,DELIMCD          LOAD DELIMITER CODE           Y02006
         B     MAP2                CONTINUE  - GO TEST DELIM     X01980
         EJECT
***********************************************************************
*                                                                     *
*   ENTER INFORMATION TO BE PRINTED AS PART OF TITLE                  *
*                                                                     *
***********************************************************************
         SPACE
TITLEVRB CH    R2,TWELVE           WAS DELIMITER A BLANK         Y02006
         BNE   SYNTAXB             NO--ERROR                     Y02006
         L     R1,VERBEND          ADDR OF BLANK AFTER TITLE VERB
         AH    R1,ONEA             ADDR OF TITLE TO BE PRINTED
         LA    R3,WTORMSG+71                                     Y02006
         SR    R3,R1               LENGTH OF TITLE IN R3
         BNP   SYNTAX              LENGTH 0 OR NEG--ERROR
         LA    R2,64               LOAD MAXIMUM TITLE LENGTH     Y01980
         CR    R3,R2               COMPARE TO LENGTH OF TITLE     M1141
         BL    TITLMOVE            BRANCH TO MOVE TITLE -         M1141
*                                  LENGTH OK                      M1141
         LR    R3,R2               TOO LONG - USE MAX             M1141
TITLMOVE MVI   TITLEMSG,X'40'      BLANK TITLE AREA               M1141
         MVC   TITLEMSG+1(63),TITLEMSG
         BCTR  R3,0                DECR FOR EXECUTE
         EX    R3,TITLCARD         MOVE TITLE FROM CONTROL STMT.
         B     MAP4                GO GET NEXT CONTROL STMT.
         EJECT
***********************************************************************
*                                                                     *
*                          NEWDUMP PROCESSOR                          *
*                                                                     *
***********************************************************************
         SPACE
NEWDPSCN EQU   64
NEWDUMP  LA    R14,MAP4            POINT RETURN FROM AMDPRSYN    Y02006
*                                  TO MAP4                       Y02006
         OI    SWC,SETFLSH         INDICATE TO SET FLUSHMODE IF  Y02006
*                                  ERROR OCCURS                  Y02006
         MVC   INDD(8),TAPEDD      START WITH DEFALT VALUES
         MVC   FILESEQ(2),ONEA     FILE 1
         CH    R2,FOUR             TEST FOR DELIMITER OF COMMA
         BE    NEWDPGO1            COMMA - GO SCAN FOR NEXT VERB
         CH    R2,TWELVE           NOT COMMA, THEN MUST BE BLANK
         BNE   SYNTAXB             OTHERWISE, SYNTAX ERROR
         LA    R4,NEWSYNA          POINT TO SYNTAX ERROR MESSAGE ADDR'S
         ST    R4,SYNMSGA          STORE IN COMMON
         LA    R4,WTORMSG+71       COMPUTE NUMBER                Y02006
         S     R4,VERBEND          OF BYTES REMAINING
*                                  IN BUFFER
         BZ    NEWDPGO2            LAST ON CARD, USE DEFAULT BY BRANCH
*                                  BACK TO GET CONTROL CARD
         BM    SYNTAX              NEGATIVE MEANS PROBLEM
         BCTR  R4,0                DECREMENT 1 FOR EXECUTE
         L     R1,VERBEND          GET SCAN START ADDRESS
         SR    R2,R2               CLEAR DELIMITER REG
         EX    R4,NBLNKTRT         LOOK FOR KEYWORDS
*                                  USE DEFAULTS IN CASE OF NO OPERANDS
         BC    8,NEWDPGO2          BRANCH TO READ NEXT CARD
         ST    R1,KYWDBGN          SAVE BEGINNING ADDRESS OF KEYWORDS
NEWDUMP1 SR    R2,R2               CLEAR DELIMITER REGISTER
         TRT   0(72,R1),BLNK       SCAN FOR NEXT DELIMITER       Y02006
         BZ    SYNTAXA             KEYWORD TOO LONG
         ST    R1,KYWDEND          SAVE PTR TO DELIMITER
         ST    R2,DELIMCD          SAVE DELIMITER CODE
         CH    R2,EIGHT            VERIFY EQUAL SIGN
         BNE   SYNTAXB             SYNTAX ERROR IF NOT
         L     R4,KYWDBGN          POINT TO KEYWORD FOR COMPARES
         SR    R1,R4               COMPUTE LENGTH OF KEYWORD
         BNP   SYNTAX              NOT POSITIVE IS SYNTAX ERROR
         CH    R1,EIGHT            KEYWORD LONGER THAN 8 CHAR    Y02006
         BH    SYNTAXA             GO ISSUE ERROR MESSAGE        Y02006
         BCTR  R1,0                DECREMENT 1 FOR EXECUTE
         LA    R3,NEWFILOP
         LTR   R1,R1               LENGTH = 1                    Y02006
         BE    FILECOMP            YES, OK TO COMPARE            Y02006
         C     R1,SIX              LENGTH = 7                    Y02006
         BNE   CHKDD               NO - NOT FILESEQ              Y02006
FILECOMP EX    R1,COMPARE          IS KEYWORD 'FILESEQ'          Y02006
         BE    NEWFILE             YES
CHKDD    LA    R3,NEWDDOP                                        Y02006
         CH    R1,ONEA             LENGTH = 2                    Y02006
         BE    DDCOMP              YES , OK TO COMPARE           Y02006
         CH    R1,FIVE             LENGTH = 6                    Y02006
         BNE   SYNTAXC             NO - NOT DDNAME               Y02006
DDCOMP   EX    R1,COMPARE          IS KEYWORD 'DDNAME'           Y02006
         BE    NEWDD               YES
         B     SYNTAXC             INVALID KEYWORD
         SPACE
NEWTDUMP LA    R14,MAP4            POINT RETURN FROM AMDPRSYN    Y02006
*                                  TO MAP4                       Y02006
         OI    SWC,SETFLSH         INDICATE TO SET FLUSHMODE IF  Y02006
*                                  ERROR OCCURS                  Y02006
         MVC   INDD(8),TAPEDD      OLD 'NEWTAPE' GETS DEFAULT VALUES
         MVC   FILESEQ(2),ONEA     FILE 1
         CH    R2,FOUR             TEST FOR COMMA
         BE    NEWDPGO1            IF SO GO SCAN FOR NEXT VERB
         CH    R2,TWELVE           IF NOT COMMA, MUST BE BLANK
         BNE   SYNTAXB             OTHERWISE, INVALID DELIMITER
         B     NEWDPGO2            OK, GO GET NEXT CONTROL STMT.
         SPACE 2
***  DDNAME SPECIFIED  ***
NEWDD    BAL   R3,NEWISOLT         GO ISOLATE VALUE OF KEYWORD PARM
*                                  R1 - LENGTH, R2 - PTR TO VALUE
         MVC   INDD(8),BLANKS      CLEAR DDNAME SLOT
         BCTR  R1,0                DECREMENT BY 1 FOR EXECUTE OF MVC
         LA    R7,INDD             POINT CLC TO TARGET AREA
         EX    R1,JOBMOVE          MOVE DDNAME TO COMMON
         B     NEWMORE             GO FIND NEXT KEYWORD
         SPACE
***  FILE SEQUENCE NUMBER SPECIFIED  ***
NEWFILE  BAL   R3,NEWISOLT         ISOLATE KEYWORD VALUE
*                                  R1 - LENGTH, R2 - PTR TO VALUE
         BAL   R3,NEWCONV          GO CONVERT TO BINARY VALUE
         STH   R2,FILESEQ          STORE NUMBER IN COMMON
         B     NEWMORE             GO SEE ABOUT NEXT KEYWORD
         SPACE
***  TEST FOR MORE KEYWORDS ON NEWDUMP CARD  ***
NEWMORE  L     R2,DELIMCD          FETCH DELIMITER CODE
         CH    R2,TWELVE           TEST FOR BLANK - ALL DONE WITH
*                                  NEWDUMP
         BE    NEWDPGO2            GO GET NEXT CONTROL STMT
*                                  NOT BLANK, MUST BE COMMA OR NEWISOLT
*                                  WOULD HAVE CAUGHT IT - CONTINUE
         L     R1,KYWDEND          POINT TO BEGINNING OF NEXT KEYWORD
         AH    R1,ONEA             BY INCREMENTING PAST DELIMITER
         ST    R1,KYWDBGN          STORE IN KEYWORD BEGIN POINTER
         B     NEWDUMP1            RESTART SCAN
         SPACE
***  ISOLATE KEYWORD VALUE  ***
NEWISOLT L     R4,KYWDEND          POINT TO BEGINNING OF VALUE BY
         AH    R4,ONEA             INCR. PAST DELIMITER
         SR    R2,R2               CLEAR DELIMITER REG
         TRT   0(72,R4),BLNK       SCAN FOR COMMA OR BLANK AT    Y02006
*                                  END OF KEYWORD VALUE
         BZ    SYNTAXD             TOO LONG
         ST    R1,KYWDEND          SAVE ENDING ADDRESS
         ST    R2,DELIMCD          SAVE DELIMITER CODE
         CH    R2,FOUR             TEST FOR COMMA
         BE    NEWDUMP3            COMMA IS OK
         CH    R2,TWELVE           TEST FOR BLANK
         BNE   SYNTAXB             SYNTAX ERROR
NEWDUMP3 SR    R1,R4               COMPUTE LENGTH OF VALUE
         BZ    NEWMORE             NO VALUE - USE DEFAULT        X01980
         CH    R1,EIGHT            LENGTH GREATER THAN 8         Y02006
         BH    SYNTAXD             YES - ISSUE MESSAGE           Y02006
         LR    R2,R4               POINT TO BEGINNING OF VALUE
         BR    R3                  RETURN
         SPACE
***  CONVERT DECIMAL NUMBER TO BINARY  ***
NEWCONV  LR    R4,R2               SAVE SOURCE POINTER
         LR    R8,R1               SAVE LENGHT
NEWCONV1 TM    0(R4),X'F0'         TEST FOR ZONES OF 'F'         A48717
         BNO   SYNTAXD             INVALID VALUE IF NOT
         LA    R4,1(R4)            INCREMENT TO NEXT DIGIT
         BCT   R8,NEWCONV1         LOOP ON VALUE LENGTH          A48717
         LR    R8,R2               POINT TO SOURCE FOR PACK
         BCTR  R1,0                DECREMENT 1 FOR EXECUTE
         EX    R1,NEWPACK          PACK TO WORK1
         CVB   R2,WORK1            CONVERT TO FIXED-POINT BINARY
         CH    R2,ONEA             VERIFY THAT NUMBER IS NOT ZERO
         BL    SYNTAXD             BRANCH TO ISSUE MESSAGE IF SO
         BR    R3                  RETURN
         SPACE
*** CARRY OUT NEWDUMP PROCEDURES  ***
NEWDPGO1 OI    MSCSW,NEWDPSCN      DELIMITER WAS COMMA
         B     NEWDPGO             CONTINUE PROCESSING
NEWDPGO2 NI    MSCSW,XFF-NEWDPSCN  DELIMITER WAS BLANK
NEWDPGO  EQU   *                                                 Y02006
NEWTSTMS DEVTYPE  INDD,DEVAREA     OBTAIN DEVICE TYPE OF NEW INDD
         LTR   R15,R15             NO DD CARD -
         BZ    DDPRES              DD CARD PRESENT GO SEE WHAT DEVICE
         LA    R4,ANODD            POINT TO NO DD MESSAGE AD
         ST    R4,SYNMSGA          STORE IN COMMON CSECT
         TM    MSCSW,NEWDPSCN      TEST FOR ENDING ACTION        Y01980
         LA    R14,MAP2            TO CONTINUE SCAN OF THIS CARD Y01980
         BO    ITSMAP2             YES                           Y01980
         LA    R14,MAP4            TO READ ANOTHER CARD          Y01980
ITSMAP2  L     R15,ASYNTAX         GET @ OF SYNTAX WRITER        Y01980
         B     SYNTAXA             BRANCH TO WRITE MESSAGE
DDPRES   CLI   DEVAREA+2,X'80'     TEST FOR TAPE
         BE    CLOSESEQ            BRANCH IF TAPE                Y02006
***  NEW DD CARD POINTS TO D/A DATA SET  ***
DAINPUT  L     R15,ASYNTAX         GET ADDRESS OF SYNTAX WRITER
         CLC   FILESEQ(2),ONEA     TEST FOR FILESEQ NUMBER SPECIFIED
*                                  FOR A D/A INPUT DEVICE
         BNE   SYNTAXE             GIVE ERROR MESSAGE IF NOT 1
CLOSESEQ LA    R3,AINDCB           LOAD @ OF DCB ADDRESSES       Y01980
SEQLOOP1 L     R4,0(R3)            LOAD DCB @                    Y01980
         LA    R4,0(R4)            CLEAR POSSIBLE HI-ORDER BYTE  Y01980
         LTR   R4,R4               HAS @ DCB BEEN STORED?        Y01980
         BZ    SEQLOOP2            NO- CONTINUE                  Y01980
         TM    DCBOFLGS(R4),DCBOPEN IS THIS DCB OPEN?            Y01980
         BZ    SEQLOOP2            NO- DO NOT CLOSE              Y01980
         CLOSE ((R4))              CLOSE THIS DCB                Y01980
SEQLOOP2 TM    0(R3),X'80'         LAST ENTRY IN DCB LIST?       Y01980
         BO    NEWRESET            YES                           Y02006
         LA    R3,4(R3)            STEP TO NEXT DCB @            Y01980
         B     SEQLOOP1            CONTINUE                      Y01980
         SPACE
***  RESET SWITCHES AND DUMP INFO IN COMMON CSECT  ***
NEWRESET NI    SWC,XFF-MSTRSW      INDICATE GET-MASTER ROUTINE IS
*                                  REQUIRED
         OI    SWC,POSITSW         INPUT POSITIONING REQUIRED    Y02006
         OI    SWE,BUILDMAP        DUMP DS MUST BE SCANNED       Y02006
*                                  AND MAPPED                    Y02006
         NI    SWD,XFF-FLSHMODE    RESET FLUSH MODE FOR RETRY
         NI    SWA,XFF-SETCVTSW    RESET CVT BY OPERATOR SWITCH
         XC    CVTADDR,CVTADDR     RESET CVT POINTER
         NI    PRSW,XFF-QSEGTBSW   RESET SEGTAB SW               X01980
         MVI   SWF,X'00'           RESET SWF                     Y01980
         XC    SEGTABOR,SEGTABOR   ZERO SEGTAB ADDRESS           Y02006
         MVI   TITLEMSG,BLANK      BLANK OUT TITLE IN HEADER   @OZ24196
         MVC   TITLEMSG+1(63),TITLEMSG                         @OZ24196
         MVC   TITLEMOD+7(8),BLANKS  BLANK MODULE NAME FIELD     Y02006
         MVC   TITLEDTE+5(8),BLANKS  BLANK DATE FIELD            Y02006
         MVC   TITLETME+5(8),BLANKS  BLANK TIME                  Y02006
         XC    SACSWCAW(12),SACSWCAW  ZERO SADMP HDR FIELDS      Y02006
         XC    HDRREGS(168),HDRREGS  ZERO DSS/SVC HDR FIELDS     Y02006
         MVI   HDRTITLE,BLANK      BLANK HDR TITLE               Y02006
         MVC   HDRTITLE+1(99),HDRTITLE                           Y02006
         XC    AUSRTCBA(4),AUSRTCBA  ZERO USER TCB ADDRESS       Y02006
         XC    AUSRASID(2),AUSRASID  ZERO USER ASID FIELD        Y02006
         XC    QASID(2),QASID      RESET ASID                    Y02006
         XC    IPLCPU,IPLCPU       RESET IPL CPU ADDRESS         Y02006
         NI    SWC,XFF-SETFLSH     RESET SET FLUSHMODE INDICATOR Y02006
         TM    MSCSW,NEWDPSCN      TEST FOR NEW DUMP ENDING ACTION
         BO    MAP2                CONTINUE SCAN OF THIS CARD
         B     MAP4                GO READ ANOTHER CARD
         EJECT
***********************************************************************
*                                                                     *
**        ***  ERROR RETURN FROM READ  ROUTINES  ***                 **
*                                                                     *
***********************************************************************
         SPACE
         DROP  R13
         USING *,R15
ERRMSG   LA    R13,MSCSAVE         POINT TO INIT'S SAVE AREA
         LM    R14,R12,12(R13)     RESTORE OUR REGS
         USING MSCBASE,BASE1       SHIFT BACK TO REG 11 AS BASE
         DROP  R15
         USING MSCSAVE,R13         RESTORE DATA AREA BASE        X01980
         SPACE
NOT2     TM    BUFSW,PREFM         TEST FOR PRE-FORMATTED DUMP   X01980
         BZ    NOPREFMT            BRANCH IF NOT                   B-PT
         NI    BUFSW,XFF-PREFM     RESET INDICATOR
*                                  WRITE PRE-FORMATTED DUMP MSG ON
         BRPRTMSG  PREFMSG+4,65    SYSPRINT
         LA    R1,PREFMSG          POINT TO WTO LIST             A39011
TSTRDR   TM    SWA,RDRSW           TEST FOR SOURCE OF CONTROL    Y02006
*                                  CARDS                         A39011
         BO    ERRMSGC3            SW ON MEANS CARD READER, SO DON'T
*                                  WRITE TO CONSOLE
         WTO   MF=(E,(1))          WRITE MESSAGE TO OPERATOR     A39011
         B     ERRMSGC3            EXIT TO GET NEXT CONTROL CARD
NOPREFMT TM    SWB,IOERR           IS I/O ERROR SW ON              B-PT
         BZ    NOPOSIT             BR IF NO                        B-PT
         MVC   ERRWTO+4(26),MSG2   MOVE ERROR MSG TO WTO           B-PT
         B     ERRMSGC             CONTINUE PROCESSING             B-PT
NOPOSIT  TM    SWC,POSITSW         TEST FOR POSIT IN PROGRESS      B-PT
         BZ    ERRFMT              BRANCH IF NOT                 Y02006
ORIGTAPE EQU   *
         MVC   NODUMPMG+37(8),INDD MOVE OFFENDING DD NAME TO MSG A39011
         BRPRTMSG  NODUMPMG+4,41   WRITE MESSAGE ON SYSPRINT     A39011
         LA    R1,NODUMPMG         POINT TO WTO LIST             A39011
         TM    RETCODE,XFF         RETURN CODE SET              OZ12030
         BM    SKIPSET             YES - KEEP CURRENT CODE      OZ12030
         OI    RETCODE,X'04'       SET RETURN CODE 4            OZ12030
SKIPSET  EQU   *                                                OZ12030
         B     TSTRDR              BRANCH TO ISSUE WTO AND       A39011
*                                  EXIT FROM ERROR PROCEDURE     A39011
ERRFMT   TM    SWB,FMTERR          IS FORMAT ERROR SW ON
         BZ    ERRMSGC3            BR IF NO
         MVC   ERRWTO+4(26),MSG1   MOVE ERROR MSG TO WTO
         SPACE
ERRMSGC  DS    0H
ERRMSGC2 BRPRTMSG ERRWTO+4,26      PRINT ERROR MSG ON SYSPRINT   Y02006
         TM    SWA,RDRSW           IS READER SW ON
         BO    ERRMSGC3            DO NOT WRITE TO OPER IF IT IS
         WTO   MF=(E,ERRWTO)
ERRMSGC3 EQU   *
         TM    SWB,ENDSW           TEST FOR PROCESSING END CARD   M1153
         BZ    ERRSELEC            BRANCH IF NOT TO TAKE ERROR    M1153
*                                  ACTION                         M1153
*                                  IN CASE OF END CARD TERMINATE  M1153
         L     R15,AEREXIT         POINT TO EXIT ROUTINE          M1153
         LA    R1,4                SET TERMINATION CODE           M1153
         BALR  RETREG,R15          BRANCH TO EXIT ROUTINE         M1153
ERRSELEC OI    SWC,SETFLSH         SET FLUSHMODE                  M1153
         XC    SYNMSGA(4),SYNMSGA  ZERO SYNMSGA                  Y02006
         L     R15,ASYNTAX         MESSAGE WRITER ADDRESS        Y02006
         USING SYNEPS,R15                                        Y02006
         BAL   RETREG,SYNTAX       ISSUE FLUSH MSG AND SET       Y02006
*                                  FLUSHMODE                     Y02006
         NI    BUFSW,XFF-PREFM     RESET PRE-FORMATTED SWITCH    Y02006
         NI    SWB,XFF-IOERR-FMTERR RESET I/O AND FORMAT ERROR SWITCHES
*                                                                Y02006
INITOK   L     R1,VERBGN           LOAD VERB ADDRESS            @YM3679
         CLC   0(2,R1),ECOMMA      CONTINUE TO SCAN CARD AT     @YM3679
         BE    MAP3                MAP3 OR MAP4 FOR OTHER VERBS @YM3679
         CLC   0(5,R1),EDITCOM     IF HIT ON EDIT VERB SIGNAL,  @YM3679
         BE    MAP3                AS FOLLOWS -                 @YM3679
         CLC   0(2,R1),EBLANK        E, OR EDIT, TO MAP3        @YM3679
         BE    MAP4                  E$ OR EDIT$ TO MAP4        @YM3679
         CLC   0(5,R1),EDITBLK     WHERE $=BLANK CHARACTER      @YM3679
         BE    MAP4                                             @YM3679
         L     R1,KYWDBGN          LOAD KEYWORD ADDRESS
         LTR   R1,R1               IS ADDRESS ZERO               Y02006
         BNZ   PRINT1              NO - GO RESCAN KEYWORD        Y02006
         L     R1,VERBGN           LOAD VERB ADDRESS             Y02006
         B     CK4PRST             BRANCH BACK TO MAIN ROUTINE   Y02006
*                                  TO RESCAN CURRENT VERB        Y02006
ECOMMA   DC    C'E,'               LEGAL                        @YM3679
EDITCOM  DC    C'EDIT,'               VARATIONS                 @YM3679
EBLANK   DC    C'E '                         OF THE             @YM3679
EDITBLK  DC    C'EDIT '                          EDIT VERB      @YM3679
         SPACE 2
ERRWTO   DC    AL2(30)             WTO LIST FORM                 X01980
         DC    X'8000'
         DC    CL26' '
         DC    X'0200'             DESC
         DC    X'4000'             ROUTCDE
         EJECT
***********************************************************************
*                                                                     *
*  FINAL STOP EXIT ROUTINE                                            *
*                                                                     *
***********************************************************************
         SPACE
         DS    0H
         DROP  R13
         USING *,R15               BASE ON REG 15 UNTIL REGS CAN
*                                  BE RELOADED
STOPCMP  LA    R13,MSCSAVE
         LM    R14,R12,12(R13)     RESTORE MSC'S REGS
         USING MSCBASE,BASE1       SHIFT BACK TO REG 11 AS BASE
         DROP  R15
         USING MSCSAVE,R13         RESTORE DATA AREA BASE        YM1454
         SPACE
         SR    R2,R2               INDICATE REMOVAL OF ALL TCBS
         L     R15,ATCBREMV        POINT TO TCB REMOVE ROUTINE
         BALR  RETREG,R15          LINK TO IT
         B     MAP2                CONTINUE SCAN
         EJECT
*  EXECUTABLE INSTRUCTIONS
         SPACE
STRGTR   TR    0(0,R1),HEXTABL
STRGPACK PACK  WORK1(0),0(0,R1)
TITLCARD MVC   TITLEMSG(0),0(R1)
COMPARE  CLC   0(0,R4),0(R3)
JOBMOVE  MVC   0(0,R7),0(R2)
NBLNKTRT TRT   0(0,R1),NONBLNK
         SPACE
NEWPACK  PACK  WORK1(8),0(0,R8)
         EJECT
***********************************************************************
*                                                                     *
*   CONSTANTS FOR SCAN                                                *
*                                                                     *
***********************************************************************
         SPACE
MSCSAVE  DC    18F'0'              SAVE AREA FOR INIT
C13      DC    H'13'                                             XM5890
LPAPATH  DC    X'80',CL3'LPA'      PATH DESCRIPTOR FOR LPA MAP
FMTPATH  DC    X'00',CL3'FAR'      PATH DESC. FOR FORMATTING     Y02006
         DC    X'00',CL3'FSR'      SYSTEM CONTROL BLOCKS FOR ALL Y02006
         DC    X'80',CL3'FXT'      TASKS
*                                  PATH DESCRIPTOR FOR PRINT STORAGE
PRTPATH  DC    X'00',CL3'DPS'      BY ABSOLUTE ADDRESS OR NUCLEUS & SQA
         DC    X'80',CL3' '        PATH END FILLED IN BY PRINT SCAN
PMS      DC    C'PMS'              ID FOR ABSOLUTE STORAGE EXECUTOR
NUC      DC    C'NUC'              ID FOR PRINT NUCLEUS AND SQA
*                                  EXECUTOR
PJB      DC    C'PJB'              ID FOR PRINT JOBNAME REQUEST  Y02006
FPRTPATH DC    X'00',CL3'DPS'      PATH DESCRIPTOR FOR PRINT STORAGE
         DC    X'00',CL3'FAR'      BY JOBNAME OR CURRENT         Y02006
         DC    X'00',CL3'FSR'                                    Y02006
         DC    X'00',CL3'FUB'                                    Y02006
         DC    X'80',CL3' '        PATH END FILLED IN BY PRINT SCAN
EDIT1    DC    X'00',CL3'OOT'      PATH FOR EDIT SCAN PHASE      S21014
         DC    X'80',CL3'SCN'                                    S21014
EDIT2    DC    X'00',CL3'OOT'      PATH FOR EDIT EXECUTION       S21014
         DC    X'80',CL3'XED'                                    S21014
CUR      DC    C'PCR'
SUMPATH  DC    X'80',CL3'SUM'      PATH DESCRIPTOR FOR SUMMARY   Y02006
DISPATH  DC    X'80',CL3'FDS'                                  @Y30MIBS
CPUDPATH DC    X'00',CL3'DPS'      PATH DESCRIPTOR FOR CPUDATA   Y02006
         DC    X'80',CL3'GCD'                                    Y02006
MSCSW    DS    C                   BIT 0 - NEWDDSW
*                                      1 - NEWDPSCN
*                                      2 - NEWDMPDD
EDDELIM  DS    C                   SAVE AREA FOR DELIM CODE
*                                  AFTER EDIT VERB
DEVAREA  DC    D'0'
AUTONGO  DC    X'80'               FLAG TO INDICATE AUTO ONGO OPER
         DC    AL3(AUTOPER)        ADDR OF AUTO ONGO OPERAND
AEDITSCN DC    A(0)                ADDRESS OF EDIT SCAN MODULE   S21014
WRTSYNA  DC    V(WRTSYN1)
         DC    V(WRTSYN2)
         DC    V(WRTSYN3)
         DC    V(PRTSYN4)
         DC    V(C72MSG)                                         Y02006
PRTSYNA  DC    V(PRTSYN1)
         DC    V(PRTSYN2)
         DC    V(PRTSYN3)
NEWSYNA  DC    V(PRTSYN1)          ERROR MESSAGES USED BY NEWDUMP
         DC    V(PRTSYN2)
         DC    V(PRTSYN3)
         DC    V(NEWSYN1)
         DC    V(FILERMSG)
GOSYNA   DC    V(GOSYN1)
CVTSYNA  DC    V(CVTSYN1)
         DC    V(PRTSYN2)
SEGSYNA  DC    V(SEGSYN1)                                        X01980
         DC    V(PRTSYN2)                                        X01980
PREFMSGA DC    A(PREFMSG)
ANODD    DC    V(NODDMSG)
CUROP    DC    C'CURRENT'
ONGOVRB  DC    C'ONGO'
CVTPARM  DC    C'CVT'
SGTBPARM DC    C'SEGTAB'                                         X01980
TAPENM   DC    CL8'TAPE'
GOVERB   DC    C'GO'
PRNTVERB DC    C'PRINT'
ENDVERB  DC    C'END'
STOROP   DC    C'STORAGE'
REALOP   DC    C'REAL'                                           X01980
JOBOP    DC    C'JOBNAME'
NUCOP    DC    C'NUCLEUS'
CSAOP    DC    C'CSA'                                            Y02006
SQAOP    DC    C'SQA'                                            Y02006
NEWTVERB DC    C'NEWTAPE'
NEWVERB  DC    C'NEWDUMP'
NEWVERBA DC    C'ND'               ABRV. FOR NEWDUMP
MAPPARM  DC    C'LPAMAP'
FMTPARM  DC    C'FORMAT'
NEWDDOP  DC    C'DDNAME'
NEWFILOP DC    C'FILESEQ'
NEWDMPOP DC    C'DUMPSEQ'
EDITVERB DC    C'EDIT'             EDIT VERB                     S21014
SUMVERB  DC    C'SUMMARY'                                        Y02006
CPUDVERB DC    C'CPUDATA'                                        Y02006
DISPVERB DC    C'DISPLAY'                                      @Y30MIBS
TAPEDD   DC    CL8'TAPE'
         EJECT
***********************************************************************
*                                                                     *
*   ERROR MESSAGES                                                    *
*                                                                     *
***********************************************************************
         SPACE
*                                  AUTO ONGO OPERAND
AUTOPER  WTO   '        EDIT,SUMMARY,PRINT CURRENT',MF=L,ROUTCDE=(2),  X
               DESC=7                                            Y02006
PREFMSG  WTO   'AMD164I TAPE IS PRE-FORMATTED DUMP - REMAINING PARAMETEX
               RS IGNORED',MF=L,ROUTCDE=(2),DESC=7               X01980
NODUMPMG WTO   'AMD168I DUMP DATA SET EMPTY - DD XXXXXXXX',      A39011*
               MF=L,ROUTCDE=(2),DESC=7                           X01980
         SPACE
         DROP  BASE1
         DROP  R13                                               X01980
         EJECT
AMDPREND CSECT                                                   X01980
         SPACE
***********************************************************************
*                                                                     *
**                        ****   E N D   ****                        **
*                                                                     *
***********************************************************************
         SPACE
         USING *,R15                                             Y02006
         MODID                                                   Y02006
         DROP  R15                                               Y02006
         STM   R14,R12,12(R13)     SAVE CALLER'S REGS
         BALR  BASE1,0             ESTABLISH REG 11 AS BASE
         USING *,BASE1
         LA    R2,ENDSAVE          SAVE AREA CHAINING
         ST    R13,ENDSAVE+4
         ST    R2,8(R13)
         LR    R13,R2              ENTRY COMPLETE
         SPACE
END      OI    SWB,ENDSW           SET END SWITCH
         TM    SWD,NOLOADSW        LOAD MODE                     X01980
         BO    ENDSTAT0            GO PRINT STATISTICS           X01980
         SR    PREG,PREG           ZERO INIT REQUIREMENT         X01980
         BRREAD  INIT                                            Y02006
         B     EXITOUT             SKIP STATISTICS IN LOAD MODE  X01980
ENDSTAT0 BRPRTMSG ,0               SPACE
         BRPRTMSG ,(R2)            TWO LINES
         L     R3,RDENTRY          NO OF ENTRIES TO READ ROUTINE
         CVD   R3,WORK1            CONVERT TO DECIMAL
         UNPK  ENDMSG1+36(10),WORK1 UNPACK TO MSG
         OI    ENDMSG1+45,X'F0'    MAKE SIGN 'F'
         BRPRTMSG ENDMSG1,46       PRINT MSG 1
         L     R4,READTM           NO OF TIMES REQ ADDR WAS NOT IN
*                                  BUFFER ALREADY
         CVD   R4,WORK1            CONVERT TO DECIMAL
         UNPK  ENDMSG2+47(10),WORK1 UNPK TO MSG
         OI    ENDMSG2+56,X'F0'    MAKE SIGN 'F'
         BRPRTMSG ENDMSG2,57       PRINT MSG
         LTR   R3,R3               TEST R3 FOR ZERO
         BNZ   ENDSTAT1            BR IF NOT
ENDSTAT3 SR    R5,R5               YES--CLEAR R5 FOR RATIO OF 0 TO 1
         B     ENDSTAT2            CONTINUE--WITHOUT DIVIDE
ENDSTAT4 LA    R5,1                LOAD FOR A RATIO OF 1 TO 1
         B     ENDSTAT2            CONTINUE--WITHOUT DIVIDE
ENDSTAT5 LA    R5,999              RATIO OF 999 TO 1
         B     ENDSTAT2            CONTINUE--WITHOUT DIVIDE
ENDSTAT1 CR    R3,R4               COMPARE R3 TO R4
         BL    ENDSTAT3            RATIO OF 0 TO 1 IF LOW
         BE    ENDSTAT4            RATIO OF 1 TO 1 IF EQUAL
         LTR   R4,R4               TEST FOR ZERO
         BZ    ENDSTAT5            YES--AVOID DIVIDE
         SR    R2,R2               SET UP FOR DIVIDE
         DR    R2,R4               DIVIDE NO OF ENTRIES BY NO OF REQ
*                                  READS
         LR    R5,R3               SAVE RESULT IN R5
ENDSTAT2 EQU   *
         L     R3,READNO           NO OF BLOCKS READ
         CVD   R3,WORK1            CONVERT TO DECIMAL
         UNPK  ENDMSG3+24(10),WORK1 UNPK INTO MSG
         OI    ENDMSG3+33,X'F0'    MAKE SIGN 'F'
         BRPRTMSG ENDMSG3,34       PRINT MSG
         L     R3,RDERCNT          NO OF PERM I/O ERRS
         CVD   R3,WORK1            CONVERT TO DECIMAL
         UNPK  ENDMSG4+33(10),WORK1 UNPK INTO MSG
         OI    ENDMSG4+42,X'F0'    MAKE SIGN 'F'
         BRPRTMSG ENDMSG4,43       PRINT MSG
         SR    R2,R2               CLEAR DIVIDE REGISTERS
         LR    R3,R2
         L     R4,BUFREINT         GET COUNT OF BUFFER INITIALIZATIONS
         LTR   R4,R4               TEST FOR ZERO TO AVOID ZERO DIVIDE
         BZ    ENDSTAT6            BRANCH IF ZERO TO CONVERT
         L     R3,BUFSUM           LOAD TOTAL NUMBER OF BUFFERS
*                                  FOR THIS EXECUTION
         DR    R2,R4               COMPUTE AVERAGE
ENDSTAT6 CVD   R3,WORK1            CONVERT QUOTIENT TO DECIMAL
         UNPK  ENDMSG6+41(4),WORK1+5(3)
         OI    ENDMSG6+44,X'F0'
         LTR   R3,R2               TEST FOR ZERO REMAINDER
         BZ    ENDSTAT7            BRANCH IF SO TO AVOID ZERO DIVIDE
         MH    R2,HTEN             MULTIPLY BY 10 -
         MH    R2,HTEN             10 AGAIN TO MAKE 100
         LR    R3,R2               LOAD FOR DIVIDE
         SR    R2,R2               CLEAR REMAINDER REG
         DR    R2,R4               DIVIDE TO GET FRACTION DIGITS
ENDSTAT7 CVD   R3,WORK1            CONVERT FRACTION DIGITS
         UNPK  ENDMSG6+46(2),WORK1+6(2)
         OI    ENDMSG6+47,X'F0'
         BRPRTMSG  ENDMSG6,L'ENDMSG6
         BRPRTMSG ,0               SPACE A LINE
         CVD   R5,WORK1            RATIO OF RDENTRY TO READTM
         UNPK  ENDMSG5+28(3),WORK1+6(2)
         OI    ENDMSG5+30,X'F0'
         BRPRTMSG ENDMSG5,36       PRINT MSG
         L     R2,TRCCOUNT         LOAD TRACE RECORD COUNT       S21014
         CVD   R2,WORK1            CONVERT COUNT                 S21014
         UNPK  ENDMSG7+40(10),WORK1  UNPACK TO EBCDIC            S21014
         OI    ENDMSG7+49,X'F0'    CORRECT ZONE                  S21014
         BRPRTMSG  ,0              SPACE A LINE                  S21014
         BRPRTMSG  ENDMSG7,L'ENDMSG7  PRINT NUMBER OF TRACE      S21014
*                                  RECORDS PROCESSED             S21014
EXITOUT  LA    R1,4                LOAD TERMINATION CODE         S21014
         L     R15,AEREXIT         POINT TO TERMINATION ROUTINE
         BALR  RETREG,R15          LINK TO IT
         EJECT
***********************************************************************
*                                                                     *
*  CONSTANTS FOR END ROUTINE                                          *
*                                                                     *
***********************************************************************
         SPACE
ENDSAVE  DC    18F'0'              SAVE AREA FOR STIC'S ROUTINE
ENDMSG1  DC    C'1   NO OF ENTRIES TO READ ROUTINE - 0000000000'
ENDMSG2  DC    C'2   NO OF TIMES REQ ADDR WAS NOT IN A BUFFER - 0000000X
               000'
ENDMSG3  DC    C'3   NO OF BLOCKS READ - 0000000000'
ENDMSG4  DC    C'4   NO OF PERMANENT I/O ERRORS - 0000000000'
ENDMSG5  DC    C'RATIO OF ITEM 1 TO ITEM 2 -     TO 1'
ENDMSG6  DC    C'5   AVERAGE NO OF BUFFERS PER FUNCTION - 0000.00'
ENDMSG7  DC    C'6   NUMBER OF TRACE RECORDS PROCESSED - 0000000000'
*                                                                S21014
         SPACE
         DROP  BASE1
         EJECT
AMDPRXIT CSECT                                                   X01980
         SPACE
***********************************************************************
*                                                                     *
*                         ERROR EXIT ROUTINE                          *
*                                                                     *
*  THIS ROUTINE IS ENTERED WHEN ANY CONDITION IS ENCOUNTERED IN THE   *
*  ENVIRONMENT WHICH MAKES FURTHER PROCESSING IMPOSSIBLE.             *
*                                                                     *
*   REGISTER ONE ON ENTRY CONTAINS A CODE INDICATING THE              *
*  ACTION REQUIRED:                                                   *
*                    0 - AMD150I                                 X01980
*                    4 - TERMINATE WITHOUT MESSAGE                    *
*                    12- AMD153I                                 X01980
*                                                                     *
*    REGISTER ZERO CONTAINS A DDNAME CODE IF THE MESSAGE              *
*    REQUIRE A DDNAME INSERTED:                                  X01980
*                    0 - PRINTER                                      *
*                    4 - SYSUT1                                       *
*                    8 - SYSIN                                        *
*                   12 - VARIABLE INPUT DDNAME                        *
*                   16 - SYSUT2                                       *
*                                                                     *
***********************************************************************
         SPACE
EREXIT   STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         BALR  BASE1,0             ESTABLISH REG 11 AS BASE
         USING *,BASE1
         LA    R2,XITSAVE          SAVE AREA CHAINING            X01980
         ST    R13,XITSAVE+4
         ST    R2,8(R13)
         LR    R13,R2              ENTRY COMPLETE
         MODID                     IDENTIFY CSECT                Y02006
         SPACE
         LR    R7,R0               SAVE DDNAME DISPLACEMENT
         ST    R1,RCSTORE          SAVE MESSAGE CODE            YA01752
         LA    R8,ERBRTAB          USING REGISTER ONE AND THE BRANCH
         B     0(R8,R1)            TABLE, GO PREPARE PROPER MESSAGE
         SPACE
EROPN    LA    R1,EROPEN           ERROR DURING OPEN OF DCB.
         LA    R3,ERNMTAB          POINT TO DDNAME TABLE          M1143
         L     R2,0(R3,R7)         SELECT PROPER DDNAME           M1143
         MVC   17(7,R1),0(R2)      MOVE IT TO MESSAGE             M1143
         B     ERWTO               GO WTO                        X01980
         SPACE
ERIO     LA    R1,ERINIO           I/O ERROR, USING REG 0 VALUE
*                                  TO DETERMINE DDNAME FOR MESSAGE
         LA    R3,12               SCREEN OUT CASE OF VARIABLE INPUT
*                                  DDNAME
         CR    R3,R7               CODE 12 - INPUT DD            X01980
         BE    ERIOTAPE            IF SUCH, BRANCH TO MOVE DDNAME FROM
*                                  COMMON CSECT
         LA    R3,ERNMTAB          DISPLACEMENT INTO  DDNAME TABLE,
         L     R2,0(R3,R7)         MOVE PROPER DD NAME INTO MSG
         MVC   35(7,R1),0(R2)
         B     ERWTO               WRITE ERROR MESSAGE
         SPACE
ERIOTAPE MVC   35(8,R1),INDD       MOVE NAME TO MESSAGE
*                                  FALL THROUGH TO ISSUE MESSAGE X01980
***  WRITE ERROR MESSAGE TO PROGRAMMER'S OUTPUT  ***
ERWTO    WTO   MF=(E,(1))
         SPACE
TERM     LA    R3,DCBADDRS         LOAD ADDR OF DCB PTRS         X01980
ENDLOOP2 L     R2,0(R3)            LOAD DCB ADDR
         LA    R2,0(R2)            CLEAR POSSIBLE HIGH ORDER BYTE
         LTR   R2,R2               HAS DCB ADDR BEEN STORED
         BZ    ENDLOOP1            NO - CONTINUE
         TM    DCBOFLGS(R2),DCBOPEN IS THIS DCB OPEN
         BZ    ENDLOOP3            NO--TEST FOR BUFFER POOL
         CLOSE ((R2))              CLOSE THIS DCB
ENDLOOP3 TM    23(R2),X'01'        TEST FOR BUFCB
         BO    ENDLOOP1            BYPASS FREEPOOL IF NO BUFCB
         FREEPOOL (R2)             FREE BUFFER POOL
         SPACE
ENDLOOP1 TM    0(R3),X'80'         LAST ENTRY IN DCB LIST
         BO    END1                YES, GO FREE BUFFERS
         LA    R3,4(R3)            STEP TO NEXT DCB ADDR
         B     ENDLOOP2            LOOP THROUGH ENTIRE LIST
END1     XC    CURBUF,CURBUF       ZERO BUFFER POINTER           Y02006
END2     SR    R1,R1               CLEAR COUNT REG SO THAT       X01980
*                                  ADJUST WILL SURELY WORK       X01980
         BRREAD  ADJUST              CAUSE DUMP PROCESSING       Y02006
*                                    BUFFERS TO BE FREED IF THEY X01980
*                                    EXIST                       X01980
         L     R15,AUSRDEL         GET ADDR OF USER INTERFACE    Y02006
*                                  CLEAN-UP ROUTINE              Y02006
         BALR  RETREG,R15          LINK TO IT                    Y02006
END3     L     R1,ONGOPTR          LOAD ONGO OPERAND PTR
         LTR   R1,R1               IS IT ZERO
         BNP   END7A               YES--NOTHING TO BE FREED
         LH    R0,0(R1)            LOAD LNGH OF ONGO OPERAND
         LA    R0,4(R0)            ACCOUNT FOR ROUTCDE AND DESC
         FREEMAIN R,LV=(0),A=(1)   FREE ONGO SAVE BUFFER
END7A    XC    ONGOPTR,ONGOPTR     ZERO POINTER
END5     MVI   SWA,0               RESET SWA
         MVI   SWB,0               RESET SWB
         MVI   SWC,0               RESET SWC
         MVI   SWD,0               RESET SWD
         MVI   SWE,0               RESET SWE
         MVI   PRSW,0              RESET PRSW
         XC    PAGENUMB,PAGENUMB   ZERO PAGE NUMBER
         LA    R3,LNCNT            RESTORE LINECNT TO DEFAULT VALUE
         STH   R3,LINENUMB         STORE LINECNT VAL
         SH    R3,TWO
         STH   R3,LINENUM          STORE LINECNT VAL-2
ENDALL   L R13,R13SAVE             GET CALLER'S SAVE AREA PTR   SA54065
EXIT     L     R1,RCSTORE          RESTORE MESSAGE CODE         YA01752
         LA    R3,4                CODE FOR NO MESSAGE          YA01752
         CR    R1,R3               WAS A MESSAGE ISSUED         YA01752
         BE    EXITCODE            CHECK FOR RETURN CODE 4 EXIT OZ12030
         RETURN  (14,12),RC=8      SET RETURN CODE OF 8         YA01752
EXITCODE EQU   *                                                OZ12030
         MVC   EXCODE+3(1),RETCODE SET CODE IN INSTRUCTION      OZ12030
         LM    R14,R12,R12(R13)    RESTORE REGS                 OZ12030
EXCODE   LA    R15,0(0,0)          SET RETURN CODE              OZ12030
         BR    R14                 RETURN                       OZ12030
         EJECT
***********************************************************************
*                                                                     *
*  CONSTANTS FOR AMDPRXIT ROUTINE                                X01980
*                                                                     *
***********************************************************************
         SPACE
ERBRTAB  B     EROPN               BRANCH TABLE  WITH ENTRY FOR
         B     TERM                OPEN ERROR,
         B     TERM                TERMINATION ERROR,
         B     ERIO                AND I/O ERROR HANDLER
         SPACE
ERNMTAB  DC    A(PRTDCB)
         DC    A(SYSDCB)
         DC    A(SYSIDCB)
         DC    A(TAPEDCB)
         DC    A(SYS2DCB)
         SPACE
XITSAVE  DC    18F'0'
RCSTORE  DC    F'0'                MESSAGE CODE SAVEAREA        YA01752
PRTDCB   DC    C'PRINTER'
SYSDCB   DC    C'SYSUT1 '
SYSIDCB  DC    C'SYSIN  '
TAPEDCB  DC    C'TAPE   '
SYS2DCB  DC    CL7'SYSUT2'
R13SAVE  DS    F                                                SA54065
PTCHAREA DC    85F'0'              PATCH AREA                    X01980
         EJECT
***********************************************************************
*                                                                     *
*  TERMINAL MESSAGES                                                  *
*                                                                     *
***********************************************************************
         SPACE
EROPEN   WTO   'AMD150I FILE         CANNOT BE OPENED',MF=L,     A38027X
               ROUTCDE=11,DESC=6                                 X01980
ERINIO   WTO   'AMD153I PERMANENT I/O ERROR ON         - EXECUTION TERMX
               INATED',MF=L,ROUTCDE=11,DESC=6                    X01980
         EJECT
         USING SYNEPS,R15
         SYNEPS
         SPACE 2
         END   AMDPRCTL
