         TITLE 'AMDPRPCR - PRINT CURRENT EXECUTOR                      *
                       '
AMDPRPCR CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'AMDPRPCR  73.242'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @11,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@11                                      01S0001
         ST    @13,@SA00001+4                                   01S0001
         LA    @14,@SA00001                                     01S0001
         ST    @14,8(,@13)                                      01S0001
         LR    @13,@14                                          01S0001
*/*------------------------------------------------------------------*/
*/* PRINT CURRENT MAINLINE -- CONTROL BLOCKS AND STORAGE FOR THE     */
*/* CURRENT TASK ARE REQUESTED.                                      */
*/*------------------------------------------------------------------*/
*/*------------------------------------------------------------------*/
*/* INITIALIZE POINTERS AND DATA AREAS                               */
*/*------------------------------------------------------------------*/
*DO;                                                            02S0017
*  RESPECIFY R13 RESTRICTED;                                    02S0018
*  PCRSAVE = R13;                 /* ADDRESS OF PCR SAVE AREA        */
         ST    R13,PCRSAVE                                      02S0019
*  RESPECIFY R13 UNRESTRICTED;                                  02S0020
*  READSAVE = ERRADDR;            /* SAVE PREVIOUS READ RTN          */
         L     READSAVE,ERRADDR(,COMBASE)                       02S0021
*  STOPSAVE = STOPEXIT;           /* SAVE PREVIOUS STOP RTN ADDR     */
         L     STOPSAVE,STOPEXIT(,COMBASE)                      02S0022
*  STOPEXIT = ADDR(PCRSTOP);      /* ESTABLISH PCR STOP EXIT         */
         LA    @10,PCRSTOP                                      02S0023
         ST    @10,STOPEXIT(,COMBASE)                           02S0023
*  ERRADDR = ADDR(PCRREAD);       /* ESTABLISH PCR READ ERR RTN      */
         LA    @10,PCRREAD                                      02S0024
         ST    @10,ERRADDR(,COMBASE)                            02S0024
*  GENERATE REFS(AWRITE)                                        02S0025
*    (BRWRITE SKIP);              /* SKIP TO TOP OF PAGE             */
         BRWRITE SKIP
*  MESSAGE(40:39+LENGTH(PCRTITLE)) = PCRTITLE;                  02S0026
         L     @10,CURBUF(,COMBASE)                             02S0026
         MVC   MESSAGE+40(40,@10),PCRTITLE                      02S0026
*  GENERATE REFS(AWRITE)                                        02S0027
*    (BRWRITE 2);                 /* PRINT TITLE                     */
         BRWRITE 2
*  PCBPL = PCBPL&&PCBPL;                                        02S0028
         XC    PCBPL(12),PCBPL                                  02S0028
*END;                                                           02S0029
*  EXITFLAG = DCURJOB;            /* USER EXIT FUNCTION CODE         */
         MVI   EXITFLAG(COMBASE),X'10'                          01S0030
*  CALL AMDPRUIM;                 /* USER EXIT                       */
         L     @15,AUSREXIT(,COMBASE)                           01S0031
         BALR  @14,@15                                          01S0031
*  IF CURASCB=0 THEN              /* CURRENT TASK COULD NOT BE  01S0032
*                                    OBTAINED                        */
         ICM   @10,15,CURASCB(COMBASE)                          01S0032
         BNZ   @RF00032                                         01S0032
*    DO;                                                        01S0033
*      MESSAGE(1:LENGTH(UNABLMSG)) = UNABLMSG;                  01S0034
         L     @10,CURBUF(,COMBASE)                             01S0034
         MVC   MESSAGE+1(29,@10),UNABLMSG                       01S0034
*      GENERATE REFS(AWRITE) FLOWS(PCRSTOP)                     01S0035
*          (BRWRITE 1);           /* PRINT OUTPUT COMMENT            */
         BRWRITE 1
*    END;                                                       01S0036
*  ELSE                                                         01S0037
*    IF QASID=0 THEN              /* CURRENT TASK MAY BE WAIT TASK   */
         B     @RC00032                                         01S0037
@RF00032 ICM   @10,3,QASID(COMBASE)                             01S0037
         BNZ   @RF00037                                         01S0037
*      DO;                                                      01S0038
*        /* READ FOR THE ASID FIELD IN THE CURRENT ASCB              */
*        RESPECIFY PREG RESTRICTED;                             01S0039
*                                                               01S0039
*        DO;                                                    01S0040
*          PREG = ADDR(CURASCB->ASCBASID);                      01S0041
         L     PREG,CURASCB(,COMBASE)                           01S0041
         LA    PREG,ASCBASID(,PREG)                             01S0041
*          RETCODE = 0;                                         01S0042
         SR    @10,@10                                          01S0042
         ST    @10,RETCODE                                      01S0042
*          GEN(BRREAD (PREG))                                   01S0043
*             REFS(BRRDDATA)                                    01S0043
*             SETS(PREG,RETCODE)                                01S0043
*             FLOWS(PCRREAD);                                   01S0043
         BRREAD (PREG)
*        END;                                                   01S0044
*        RESPECIFY PREG UNRESTRICTED;                           01S0045
*        IF RETCODE=0 THEN        /* READ SUCCESSFUL -- WAIT TASK    */
         ICM   @10,15,RETCODE                                   01S0046
         BNZ   @RF00046                                         01S0046
*          DO;                                                  01S0047
*            MESSAGE(1:LENGTH(DUMMYMSG)) = DUMMYMSG;            01S0048
         L     @10,CURBUF(,COMBASE)                             01S0048
         MVC   MESSAGE+1(31,@10),DUMMYMSG                       01S0048
*            GENERATE (BRWRITE 1);                              01S0049
         BRWRITE 1
*          END;                                                 01S0050
*        ELSE                     /* CURRENT ASCB WAS UNAVAILABLE    */
*          DO;                                                  01S0051
         B     @RC00046                                         01S0051
@RF00046 DS    0H                                               01S0052
*            MESSAGE(1:LENGTH(UNABLMSG)) = UNABLMSG;            01S0052
         L     @10,CURBUF(,COMBASE)                             01S0052
         MVC   MESSAGE+1(29,@10),UNABLMSG                       01S0052
*            GENERATE REFS(AWRITE) FLOWS(PCRSTOP)               01S0053
*                (BRWRITE 1);     /* PRINT OUTPUT COMMENT            */
         BRWRITE 1
*          END;                                                 01S0054
*      END;                                                     01S0055
*    ELSE                         /* THERE IS A CURRENT TASK         */
*      DO;                                                      01S0056
         B     @RC00037                                         01S0056
@RF00037 DS    0H                                               01S0057
*        PCBPASID = QASID;        /* PUT ASID IN PCB PARM LIST       */
         MVC   PCBPASID(2),QASID(COMBASE)                       01S0057
*        PCBPFUNC = PCBPENQ;      /* INDICATE ENQ REQUEST            */
         NI    PCBPFUNC,B'01111111'                             01S0058
*        PCBPVIRT = ON;           /* INDICATE VIRTUAL READS          */
         OI    PCBPVIRT,B'10000000'                             01S0059
*        CALL FUB(CURASCB,QASID,PCBPL); /* FIND USER AREA BNDYS      */
         LA    @10,CURASCB(,COMBASE)                            01S0060
         ST    @10,@AL00001                                     01S0060
         LA    @10,QASID(,COMBASE)                              01S0060
         ST    @10,@AL00001+4                                   01S0060
         LA    @10,PCBPL                                        01S0060
         ST    @10,@AL00001+8                                   01S0060
         L     @15,ARGNBND(,COMBASE)                            01S0060
         LA    @01,@AL00001                                     01S0060
         BALR  @14,@15                                          01S0060
*        CALL FSR(CURASCB,QASID); /* FORMAT CONTROL BLOCKS           */
         LA    @10,CURASCB(,COMBASE)                            01S0061
         ST    @10,@AL00001                                     01S0061
         LA    @10,QASID(,COMBASE)                              01S0061
         ST    @10,@AL00001+4                                   01S0061
         L     @15,AFORMAT(,COMBASE)                            01S0061
         LA    @01,@AL00001                                     01S0061
         BALR  @14,@15                                          01S0061
*        IF PCBPTR^=0 THEN        /* THERE IS A PCB                  */
         ICM   @10,15,PCBPTR(COMBASE)                           01S0062
         BZ    @RF00062                                         01S0062
*          DO;                                                  01S0063
*            GPRSFND = ON;        /* REQUEST REGISTERS               */
         OI    GPRSFND(COMBASE),B'00000010'                     01S0064
*            GENERATE(BRWRITE SKIP); /* SKIP TO TOP OF NEW PAGE      */
         BRWRITE SKIP
*            CALL DPS;            /* PRINT OUT THE PRIVATE AREA      */
         L     @15,APRTSTG(,COMBASE)                            01S0066
         BALR  @14,@15                                          01S0066
*          END;                                                 01S0067
*        CALL TCBSMRY;            /* PRINT TCB SUMMARY               */
@RF00062 L     @15,ATCBSMRY(,COMBASE)                           01S0068
         BALR  @14,@15                                          01S0068
*      END;                                                     01S0069
*  ERRADDR = READSAVE;                                          01S0070
@RC00037 DS    0H                                               01S0070
@RC00032 ST    READSAVE,ERRADDR(,COMBASE)                       01S0070
*  STOPEXIT = STOPSAVE;                                         01S0071
         ST    STOPSAVE,STOPEXIT(,COMBASE)                      01S0071
*  RETURN;                                                      01S0072
@EL00001 L     @13,4(,@13)                                      01S0072
@EF00001 DS    0H                                               01S0072
@ER00001 LM    @14,@12,12(@13)                                  01S0072
         BR    @14                                              01S0072
*/*------------------------------------------------------------------*/
*/* PCRSTOP IS ENTERED ASYNCHRONOUSLY AFTER A BRWRITE IF THE OPER    */
*/* REQUESTED THAT PRDMP STOP PROCESSING                             */
*/*------------------------------------------------------------------*/
*PCRSTOP:                                                       02S0073
*  GENERATE REFS(PCRSAVE);                                      02S0073
PCRSTOP  DS    0H                                               02S0073
              USING *,R15         SET UP ADDRESSABILITY
              L     R13,PCRSAVE
              LM    R14,R12,12(R13)
              DROP R15
*  DO WHILE PCBPTR^=0;            /* PURGE THE PCB QUEUE             */
         B     @DE00074                                         02S0074
@DL00074 DS    0H                                               02S0075
*    RESPECIFY R1 RESTRICTED;                                   02S0075
*    R1 = ADDR(PCBPL);                                          02S0076
         LA    R1,PCBPL                                         02S0076
*    PCBPFUNC = PCBPDEQ;                                        02S0077
         OI    PCBPFUNC,B'10000000'                             02S0077
*    CALL PCBRTN;                                               02S0078
         L     @15,APCBENQ(,COMBASE)                            02S0078
         BALR  @14,@15                                          02S0078
*    RESPECIFY R1 UNRESTRICTED;                                 02S0079
*  END;                                                         02S0080
@DE00074 ICM   @10,15,PCBPTR(COMBASE)                           02S0080
         BNZ   @DL00074                                         02S0080
*  STOPEXIT = STOPSAVE;           /* RESTORE PREVIOUS STOP RTN       */
         ST    STOPSAVE,STOPEXIT(,COMBASE)                      02S0081
*  ERRADDR = READSAVE;            /* RESTORE PREVIOUS READ RTN       */
         ST    READSAVE,ERRADDR(,COMBASE)                       02S0082
*  RESPECIFY R15 RESTRICTED;                                    02S0083
*  R15 = STOPSAVE;                /* ADDRESS OF PREVIOUS STOP EXIT   */
         LR    R15,STOPSAVE                                     02S0084
*  GO TO R15;                     /* PERCOLATE TO PREVIOUS STOP EXIT */
         BR    R15                                              02S0085
*  RESPECIFY R15 UNRESTRICTED;                                  02S0086
*/*------------------------------------------------------------------*/
*/* PCRREAD IS ENTERED ASYNCHRONOUSLY AFTER A BRREAD IF THE DATA     */
*/* REQUESTED WAS NOT IN THE DUMP                                    */
*/*------------------------------------------------------------------*/
*PCRREAD:                                                       02S0087
*  RESPECIFY R14 RESTRICTED;                                    02S0087
PCRREAD  DS    0H                                               02S0088
*  GENERATE REFS(PCRSAVE);                                      02S0088
              USING *,R15         SET UP ADDRESSABILITY
              L     R13,PCRSAVE
              LM    R14,R12,12(R13)
              DROP R15
*  RETCODE = 4;                   /* INDICATE DATA UNAVAILABLE       */
         MVC   RETCODE(4),@CF00154                              02S0089
*  GO TO MAINLINE;                /* RETURN TO INSTR FOLLOWING BRREAD*/
         BR    R14                                              02S0090
*  RESPECIFY R14 UNRESTRICTED;                                  02S0091
*END AMDPRPCR                                                   01S0092
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSUT5  (PROLOGUE)                                        *
*/*%INCLUDE SYSUT5  (PCRFL1  )                                        *
*/*%INCLUDE SYSUT5  (DECLARES)                                        *
*/*%INCLUDE SYSLIB  (COMMON  )                                        *
*/*%INCLUDE SYSLIB  (AMDPCBPL)                                        *
*/*%INCLUDE SYSLIB  (IHAASCB )                                        *
*/*%INCLUDE SYSUT5  (INIT    )                                        *
*/*%INCLUDE SYSUT5  (PCRSTOP )                                        *
*/*%INCLUDE SYSUT5  (PCRREAD )                                        *
*;                                                              01S0092
@DATA    DS    0H
         DS    0F
@SA00001 DS    18F
@AL00001 DS    3A
         DS    0F
@CF00154 DC    F'4'
         DS    0D
RETCODE  DS    F
PCRSAVE  DS    A
PCBPL    DS    CL12
         ORG   PCBPL
PCBPBGN  DS    AL4
PCBPEND  DS    AL4
PCBPASID DS    BL2
PCBPFLG1 DS    CL1
         ORG   PCBPFLG1
PCBPVIRT DS    BL1
PCBPREAL EQU   PCBPFLG1+0
PCBPLOWC EQU   PCBPFLG1+0
PCBPTOPC EQU   PCBPFLG1+0
@NM00049 EQU   PCBPFLG1+0
         ORG   PCBPL+11
PCBPFLG2 DS    CL1
         ORG   PCBPFLG2
PCBPFUNC DS    BL1
@NM00050 EQU   PCBPFLG2+0
         ORG   PCBPL+12
UNABLMSG DC    CL29'UNABLE TO ACCESS CURRENT TASK'
DUMMYMSG DC    CL31'CURRENT TASK IS DUMMY WAIT TASK'
PCRTITLE DC    CL40'* * * *  C U R R E N T  T A S K  * * * *'
PATCH    DC    12F'0'
AMDPRPCR CSECT
DTAE     EQU   32                  DATA EBCDIC BIT
DTAC     EQU   16                  DATA IN CORE BIT
DTAP     EQU   8                   DATA PTR BIT
DTA      EQU   4                   DATA INCLUDED BIT
LBLP     EQU   2                   LABEL PTR BIT
LBL      EQU   1                   LABEL INCLUDED BIT
AMDPRPCR CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
STOPSAVE EQU   @02
READSAVE EQU   @03
R1       EQU   @01
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
COMBASE  EQU   @12
PREG     EQU   @01
BASE1    EQU   @11
BASE2    EQU   @10
BASE3    EQU   @09
BUFREG   EQU   @06
CNTREG   EQU   @03
LINEREG  EQU   @08
R0       EQU   @00
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
STOPBASE EQU   @05
COMMON   EQU   0
ERRADDR  EQU   COMMON
CURBUF   EQU   COMMON+48
PCBPTR   EQU   COMMON+60
SWA      EQU   COMMON+122
SWB      EQU   COMMON+123
SWC      EQU   COMMON+124
SWD      EQU   COMMON+125
GPRSFND  EQU   SWD
SWE      EQU   COMMON+126
SWF      EQU   COMMON+127
BUFSW    EQU   COMMON+128
PRSW     EQU   COMMON+129
TABLE    EQU   COMMON+659
HEXTABL  EQU   TABLE+63
AWRITE   EQU   COMMON+1500
ARGNBND  EQU   COMMON+1524
STOPEXIT EQU   COMMON+1528
APCBENQ  EQU   COMMON+1560
AFORMAT  EQU   COMMON+1568
APRTSTG  EQU   COMMON+1572
ATCBSMRY EQU   COMMON+1604
DCBADDRS EQU   COMMON+1608
@NM00042 EQU   DCBADDRS+16
@NM00043 EQU   @NM00042
QASID    EQU   COMMON+1664
CURASCB  EQU   COMMON+1668
BRRDDATA EQU   COMMON+1984
AUSREXIT EQU   COMMON+2008
EXITFLAG EQU   COMMON+2022
ASCB     EQU   0
ASCBASID EQU   ASCB+36
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
FUB      EQU   0
FSR      EQU   0
DPS      EQU   0
TCBSMRY  EQU   0
PCBRTN   EQU   0
AMDPRUIM EQU   0
MESSAGE  EQU   0
MAINLINE EQU   0
ASCBPTR  EQU   CURASCB
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBLGCB EQU   ASCB+180
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBCMSB EQU   ASCB+132
ASCBCMSF EQU   ASCB+128
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBQSVC EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBLSLQ EQU   ASCB+24
ASCBFSLQ EQU   ASCB+20
ASCBIOSP EQU   ASCB+16
ASCBLOCK EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
CSADDR   EQU   COMMON+2072
@NM00048 EQU   COMMON+2070
TOPICHDR EQU   COMMON+2060
DFLTCSA  EQU   COMMON+2056
LPAMAX   EQU   COMMON+2052
DNUCTOP  EQU   COMMON+2048
XLMAX    EQU   COMMON+2044
DQEMAX   EQU   COMMON+2042
ASCBMAX  EQU   COMMON+2040
TCBMAX   EQU   COMMON+2038
SRBMAX   EQU   COMMON+2036
DDMAX    EQU   COMMON+2034
DEBMAX   EQU   COMMON+2032
JPQMAX   EQU   COMMON+2030
LLEMAX   EQU   COMMON+2028
PQEMAX   EQU   COMMON+2026
RBMAX    EQU   COMMON+2024
@NM00047 EQU   COMMON+2023
AUSRASID EQU   COMMON+2020
AUSRTCBA EQU   COMMON+2016
AUSRDEL  EQU   COMMON+2012
AUSRINIT EQU   COMMON+2004
ASRBFMT  EQU   COMMON+2000
AASCBFMT EQU   COMMON+1996
BRRDADJ  EQU   COMMON+1992
BRRDINIT EQU   COMMON+1988
BUFERMAP EQU   COMMON+1980
ASCBMAP  EQU   COMMON+1976
CPUMAP   EQU   COMMON+1972
ASIDNDX  EQU   COMMON+1968
@NM00046 EQU   COMMON+1964
HDRTITLE EQU   COMMON+1864
HDRREGS  EQU   COMMON+1696
SACSWCAW EQU   COMMON+1684
ASVTADDR EQU   COMMON+1680
PREFXRGV EQU   COMMON+1676
PREFXRGR EQU   COMMON+1672
IPLCPU   EQU   COMMON+1666
QAPFT    EQU   COMMON+1660
@NM00045 EQU   COMMON+1656
REALMAX  EQU   COMMON+1652
SEGTABOR EQU   COMMON+1648
REALMAP  EQU   COMMON+1644
@NM00044 EQU   COMMON+1641
EDITER   EQU   COMMON+1640
AROOT    EQU   COMMON+1636
AEDITCB  EQU   COMMON+1632
TRCCOUNT EQU   COMMON+1628
ASYSUDCB EQU   @NM00042+1
ENDLIST  EQU   @NM00043
AINDCB   EQU   DCBADDRS+12
ARDRDCB  EQU   DCBADDRS+8
APTRDCB  EQU   DCBADDRS+4
AOUTDCB  EQU   DCBADDRS
ATCBSMFR EQU   COMMON+1600
ONGOPTR  EQU   COMMON+1596
AEND     EQU   COMMON+1592
AERRMSGA EQU   COMMON+1584
BUFREINT EQU   COMMON+1580
BUFSUM   EQU   COMMON+1576
ASTPROUT EQU   COMMON+1564
ATCBRTRV EQU   COMMON+1556
ATCBREMV EQU   COMMON+1552
ATCBSAVE EQU   COMMON+1548
QATMERTN EQU   COMMON+1544
ALOADER  EQU   COMMON+1540
AEREXIT  EQU   COMMON+1536
SYNMSGA  EQU   COMMON+1532
AWRDCNVT EQU   COMMON+1520
AADRCNVT EQU   COMMON+1516
AFMTLINE EQU   COMMON+1512
ASYNTAX  EQU   COMMON+1508
APRTMSG  EQU   COMMON+1504
NONBLNK  EQU   COMMON+1244
BLNK     EQU   COMMON+988
@NM00041 EQU   COMMON+972
@NM00040 EQU   COMMON+915
EBCTABL  EQU   HEXTABL+10
@NM00039 EQU   HEXTABL
@NM00038 EQU   TABLE
CAPTABL  EQU   COMMON+403
TITLEPGE EQU   COMMON+394
@NM00037 EQU   COMMON+392
TITLETME EQU   COMMON+379
@NM00036 EQU   COMMON+377
TITLEDTE EQU   COMMON+364
@NM00035 EQU   COMMON+362
TITLEMOD EQU   COMMON+347
TITLEMSG EQU   COMMON+283
MSG2     EQU   COMMON+257
MSG1     EQU   COMMON+231
STOP     EQU   COMMON+227
TITLE    EQU   COMMON+222
BLANKS   EQU   COMMON+214
WTORMSG  EQU   COMMON+133
@NM00034 EQU   COMMON+130
@NM00033 EQU   PRSW
@NM00032 EQU   PRSW
PRNTREAL EQU   PRSW
PRNTRL   EQU   PRSW
TTLSW    EQU   PRSW
@NM00031 EQU   PRSW
QSEGTBSW EQU   PRSW
@NM00030 EQU   PRSW
@NM00029 EQU   BUFSW
PREFM    EQU   BUFSW
@NM00028 EQU   BUFSW
@NM00027 EQU   BUFSW
@NM00026 EQU   BUFSW
@NM00025 EQU   BUFSW
@NM00024 EQU   BUFSW
@NM00023 EQU   BUFSW
@NM00022 EQU   SWF
QUT1LOD  EQU   SWF
@NM00021 EQU   SWF
PAGEOK   EQU   SWF
DMPIC    EQU   SWF
QSADMP   EQU   SWF
NUCTFRMC EQU   SWF
QPRDINIT EQU   SWF
@NM00020 EQU   SWE
@NM00019 EQU   SWE
@NM00018 EQU   SWE
BUILDMAP EQU   SWE
TITLESW  EQU   SWE
RESPC    EQU   SWE
@NM00017 EQU   SWE
STOPSW   EQU   SWE
@NM00016 EQU   SWD
CONTSW   EQU   SWD
NOLOADSW EQU   SWD
NOSTDMG  EQU   SWD
@NM00015 EQU   SWD
@NM00014 EQU   SWD
FLSHMODE EQU   SWD
@NM00013 EQU   SWC
@NM00012 EQU   SWC
@NM00011 EQU   SWC
EDITSW   EQU   SWC
TREADIN  EQU   SWC
POSITSW  EQU   SWC
SETFLSH  EQU   SWC
MSTRSW   EQU   SWC
@NM00010 EQU   SWB
@NM00009 EQU   SWB
QSYSUT2  EQU   SWB
ENDSW    EQU   SWB
@NM00008 EQU   SWB
@NM00007 EQU   SWB
FMTERR   EQU   SWB
IOERR    EQU   SWB
RDRSW    EQU   SWA
SETCVTSW EQU   SWA
@NM00006 EQU   SWA
GOSW     EQU   SWA
@NM00005 EQU   SWA
@NM00004 EQU   SWA
@NM00003 EQU   SWA
@NM00002 EQU   SWA
LINENUM  EQU   COMMON+120
LINENUMB EQU   COMMON+118
SIXTEEN  EQU   COMMON+116
TWELVE   EQU   COMMON+114
ELEVEN   EQU   COMMON+112
HTEN     EQU   COMMON+110
EIGHT    EQU   COMMON+108
SEVEN    EQU   COMMON+106
FIVE     EQU   COMMON+104
FOUR     EQU   COMMON+102
THREE    EQU   COMMON+100
TWO      EQU   COMMON+98
ONEA     EQU   COMMON+96
READTM   EQU   COMMON+92
RDERCNT  EQU   COMMON+88
READNO   EQU   COMMON+84
RDENTRY  EQU   COMMON+80
@NM00001 EQU   COMMON+78
FILESEQ  EQU   COMMON+76
INDD     EQU   COMMON+68
STORSIZE EQU   COMMON+64
CVTADDR  EQU   COMMON+56
TCBLIST  EQU   COMMON+52
PAGENUMB EQU   COMMON+44
LINECNT  EQU   COMMON+40
SIX      EQU   COMMON+36
NUCTOP   EQU   COMMON+32
WORK1    EQU   COMMON+24
DELIMCD  EQU   COMMON+20
KYWDEND  EQU   COMMON+16
KYWDBGN  EQU   COMMON+12
VERBEND  EQU   COMMON+8
VERBGN   EQU   COMMON+4
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00046 EQU   @RC00037
@ENDDATA EQU   *
         END   AMDPRPCR,(C'PL/S-II',0502,73242)
