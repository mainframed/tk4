         TITLE 'PRINTER IMAGE LIBRARY UTILITY CARD SCAN -IEBISCAN-.    *
                        '
IEBISCAN CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IEBISCAN  76.222'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @11,0                                            01S0001
@PSTART  LA    @12,4095(,@11)                                   01S0001
         USING @PSTART,@11                                      01S0001
         USING @PSTART+4095,@12                                 01S0001
BACK     EQU   4
FORE     EQU   8
         ST  @13,SAVE2+BACK(,BUFAD)    BACKWARD POINTER.
         LA  @14,SAVE2(,BUFAD)         THIS ROUTINE SAVE AREA.
         ST  @14,FORE(,@13)            FORWARD POINTER.
         LR  @13,@14                   LINKAGE COMPLETE.
*        IF SCANINP = OFF              /* NOT SCAN IN PROGRESS MEANS */
*         & CONTINUE = OFF                                      01S0035
*          THEN                        /*  NO OPERATION FOUND YET.   */
         TM    SCANINP(BUFAD),B'01000000'                       01S0035
         BNZ   @RF00035                                         01S0035
         TM    CONTINUE(BUFAD),B'00001000'                      01S0035
         BNZ   @RF00035                                         01S0035
*            DO;                       /*                            */
*              CALL GETCARDN;          /* READ A CONTROL CARD.       */
         BAL   @14,GETCARDN                                     01S0037
*              IF EOFFLG = OFF         /* TEST FOR NO MORE CARDS.    */
*                THEN                  /*                            */
         TM    EOFFLG(BUFAD),B'01000000'                        01S0038
         BNZ   @RF00038                                         01S0038
*                  DO;                 /* DETERMINE OPERATION.       */
*                    SCANINP = ON;     /* INDICATE SCAN IN PROGRESS. */
         OI    SCANINP(BUFAD),B'01000000'                       01S0040
*/*********************************************************************
**                                                                    *
**  THE CONTROL CARD IS NOW SCANNED FOR VALID SYMBOL AND OPERATION    *
**  FIELDS.                                                           *
**                                                                    *
**********************************************************************/
*          CALL SCAN;                  /*  SYMBOL SCAN.              */
         BAL   @14,SCAN                                         02S0041
*          IF STOPCODE = BLANK         /* BLANK SHOULD FOLLOW SYMBOL.*/
*           & PARMSIZE =< EIGHT        /* MAX OF EIGHT CHAR SYMBOL.  */
*            THEN                      /* SYMBOL GOOD.               */
         SLR   @10,@10                                          02S0042
         IC    @10,ARGMT(,BUFAD)                                02S0042
         LA    @10,FBYTE-1(@10)                                 02S0042
         CLI   STOPCODE(@10),X'11'                              02S0042
         BNE   @RF00042                                         02S0042
         CLC   PARMSIZE(2,BUFAD),@CH00049                       02S0042
         BH    @RF00042                                         02S0042
*              DO;                     /*                            */
*                DO                    /* START BLANK SCAN.          */
*                 CC = CC              /* FROM CURRENT COLUMN        */
*                 TO CARDEND           /* TO THE END OF CARD.        */
*                 WHILE COL(ONE)=BLAN; /* STOP AT NON BLANK.         */
         SLR   @10,@10                                          02S0044
         ICM   @10,7,CC(BUFAD)                                  02S0044
         B     @DE00044                                         02S0044
@DL00044 ICM   @10,7,CC(BUFAD)                                  02S0044
         CLI   COL(@10),C' '                                    02S0044
         BNE   @DC00044                                         02S0044
*                END;                  /* END OF BLANK SCAN.         */
         LA    @10,1                                            02S0045
         SLR   @09,@09                                          02S0045
         ICM   @09,7,CC(BUFAD)                                  02S0045
         ALR   @10,@09                                          02S0045
         STCM  @10,7,CC(BUFAD)                                  02S0045
@DE00044 C     @10,CARDEND(,BUFAD)                              02S0045
         BNH   @DL00044                                         02S0045
@DC00044 DS    0H                                               02S0046
*                IF CC < CARDEND       /* BLANK OPERATION NOT ALLOWED*/
*                  THEN                /*                            */
         SLR   @10,@10                                          02S0046
         ICM   @10,7,CC(BUFAD)                                  02S0046
         C     @10,CARDEND(,BUFAD)                              02S0046
         BNL   @RF00046                                         02S0046
*                    DO;               /*                            */
*                      CALL SCAN;            /* SCAN OPERATION FIELD.*/
         BAL   @14,SCAN                                         02S0048
*                      IF STOPCODE = BLANK   /* SHOULD STOP AT       */
*                        THEN                /*  BLANK COLUMN.       */
         SLR   @10,@10                                          02S0049
         IC    @10,ARGMT(,BUFAD)                                02S0049
         LA    @10,FBYTE-1(@10)                                 02S0049
         CLI   STOPCODE(@10),X'11'                              02S0049
         BNE   @RF00049                                         02S0049
*                          DO;               /*                      */
*                            DO              /* FIND OP IN OP TABLE  */
*                             NEXTOP = ONE   /* DETERMINE OPERATION  */
*                             TO OPTABLN     /*  BY SCANNING OP TABLE*/
*                             WHILE NAMELEN ^= PARMSIZE         02S0051
*                                 × TABLENAM(ONE:NAMELEN)/*  USING OP*/
*                                ^= CARDDATA(ONE:PARMSIZE);     02S0051
         LA    @10,1                                            02S0051
         B     @DE00051                                         02S0051
@DL00051 SLR   @10,@10                                          02S0051
         IC    @10,NEXTOP(,BUFAD)                               02S0051
         MH    @10,@CH00054                                     02S0051
         SLR   @09,@09                                          02S0051
         ICM   @09,7,OPTABAD(BUFAD)                             02S0051
         LA    @01,0(@10,@09)                                   02S0051
         AL    @01,@CF01021                                     02S0051
         SLR   @15,@15                                          02S0051
         ICM   @15,3,PARMSIZE(BUFAD)                            02S0051
         SLR   @14,@14                                          02S0051
         IC    @14,NAMELEN(,@01)                                02S0051
         CR    @15,@14                                          02S0051
         BNE   @DB00051                                         02S0051
         AL    @09,@CF01022                                     02S0051
         LA    @10,RTNAME-16(@10,@09)                           02S0051
         BCTR  @15,0                                            02S0051
         EX    @15,@SC01023                                     02S0051
         BE    @DC00051                                         02S0051
@DB00051 DS    0H                                               02S0052
*                            END;            /*                      */
         LA    @10,1                                            02S0052
         SLR   @09,@09                                          02S0052
         IC    @09,NEXTOP(,BUFAD)                               02S0052
         ALR   @10,@09                                          02S0052
@DE00051 STC   @10,NEXTOP(,BUFAD)                               02S0052
         SLR   @09,@09                                          02S0052
         IC    @09,OPTABLN(,BUFAD)                              02S0052
         CR    @10,@09                                          02S0052
         BNH   @DL00051                                         02S0052
@DC00051 DS    0H                                               02S0053
*                            DO              /* START BLANK SCAN.    */
*                             CC = CC        /* FROM CURRENT COLUMN  */
*                             TO CARDEND     /*  TO THE END OF CARD. */
*                             WHILE COL(ONE) /*  STOP AT NON BLANK.  */
*                                 = BLAN;    /*                      */
         SLR   @10,@10                                          02S0053
         ICM   @10,7,CC(BUFAD)                                  02S0053
         B     @DE00053                                         02S0053
@DL00053 ICM   @10,7,CC(BUFAD)                                  02S0053
         CLI   COL(@10),C' '                                    02S0053
         BNE   @DC00053                                         02S0053
*                            END;            /* END BLANK SCAN.      */
         LA    @10,1                                            02S0054
         SLR   @09,@09                                          02S0054
         ICM   @09,7,CC(BUFAD)                                  02S0054
         ALR   @10,@09                                          02S0054
         STCM  @10,7,CC(BUFAD)                                  02S0054
@DE00053 C     @10,CARDEND(,BUFAD)                              02S0054
         BNH   @DL00053                                         02S0054
@DC00053 DS    0H                                               02S0055
*                            IF CC ^< CARDEND    /* TEST FOR         */
*                              THEN              /*  NO KEYWORDS.    */
         SLR   @10,@10                                          02S0055
         ICM   @10,7,CC(BUFAD)                                  02S0055
         C     @10,CARDEND(,BUFAD)                              02S0055
         BL    @RF00055                                         02S0055
*                                DO;             /* RESET            */
*                                  SCANINP = OFF;/*  SCAN IN PROGRESS*/
         NI    SCANINP(BUFAD),B'10111111'                       02S0057
*                                  IF NOFLAG(NEXTOP) = ON       02S0058
*                                    THEN        /* NO KWD, VALID.   */
         SLR   @10,@10                                          02S0058
         IC    @10,NEXTOP(,BUFAD)                               02S0058
         MH    @10,@CH00054                                     02S0058
         ICM   @09,7,OPTABAD(BUFAD)                             02S0058
         ALR   @09,@10                                          02S0058
         AL    @09,@CF01026                                     02S0058
         TM    NOFLAG-3(@09),B'10000000'                        02S0058
         BNO   @RF00058                                         02S0058
*                                      NOKEY=ON; /* SET NO KEYWORD.  */
         OI    NOKEY(BUFAD),B'01000000'                         02S0059
*                                END;            /*                  */
*                          END;              /* OPERATION DETERMINED.*/
*                        ELSE                /*                      */
*                          NEXTOP            /* INCORRECT OP FIELD.  */
*                           = OPTABLN + ONE;                    02S0062
         B     @RC00049                                         02S0062
@RF00049 LA    @10,1                                            02S0062
         SLR   @09,@09                                          02S0062
         IC    @09,OPTABLN(,BUFAD)                              02S0062
         ALR   @10,@09                                          02S0062
         STC   @10,NEXTOP(,BUFAD)                               02S0062
*                    END;              /*                            */
*                  ELSE                /*                            */
*                    DO;               /* INCORRECT CARD FORMAT.     */
         B     @RC00046                                         02S0064
@RF00046 DS    0H                                               02S0065
*                      NEXTOP = OPTABLN + ONE;                  02S0065
         LA    @10,1                                            02S0065
         SLR   @09,@09                                          02S0065
         IC    @09,OPTABLN(,BUFAD)                              02S0065
         ALR   @10,@09                                          02S0065
         STC   @10,NEXTOP(,BUFAD)                               02S0065
*                      FMTERR = ON;    /* INDICATE FORMAT ERROR.     */
         OI    FMTERR(BUFAD),B'00001000'                        02S0066
*                    END;              /*                            */
*              END;                    /*                            */
*            ELSE                      /* SYMBOL ERROR.              */
*              DO;                     /*                            */
         B     @RC00042                                         02S0069
@RF00042 DS    0H                                               02S0070
*                NEXTOP = OPTABLN + ONE;/* INCORRECT SYMBOL FLD.     */
         LA    @10,1                                            02S0070
         SLR   @09,@09                                          02S0070
         IC    @09,OPTABLN(,BUFAD)                              02S0070
         ALR   @10,@09                                          02S0070
         STC   @10,NEXTOP(,BUFAD)                               02S0070
*                FMTERR = ON;          /* INDICATE FORMAT ERROR.     */
         OI    FMTERR(BUFAD),B'00001000'                        02S0071
*              END;                    /*                            */
*                  END;                /* END OF OPERATION SCAN.     */
*                ELSE;                 /* NO CARD, LEAVE QUICKLY.    */
@RF00038 DS    0H                                               01S0075
*            END;                      /*                            */
*          ELSE                        /*                            */
*            DO                        /* EXECUTE THIS ROUTINE WHILE */
*             WHILE SCANINP = ON;      /*  THERE ARE KEYWORDS.       */
         B     @RC00035                                         01S0076
@RF00035 B     @DE00076                                         01S0076
@DL00076 DS    0H                                               01S0077
*              IF KEYIN = ON           /* KEYWORD COULD BE READY.    */
*                THEN                  /*                            */
         TM    KEYIN(BUFAD),B'10000000'                         01S0077
         BNO   @RF00077                                         01S0077
*                  KEYIN = OFF;        /* DO NOT SCAN FOR IT.        */
         NI    KEYIN(BUFAD),B'01111111'                         01S0078
*                ELSE                  /*                            */
*                  CALL SCAN;          /* SCAN KEYWORD.              */
         B     @RC00077                                         01S0079
@RF00077 BAL   @14,SCAN                                         01S0079
*              IF PARMSIZE ^= ZERO     /* CHECK FOR NULL KEYWORD.    */
*                THEN                  /* NOT NULL.                  */
@RC00077 ICM   @10,3,PARMSIZE(BUFAD)                            01S0080
         BZ    @RF00080                                         01S0080
*                  IF STOPCODE = EQUAL /* SHOULD ALWAYS STOP AT      */
*                    THEN              /*  EQUAL SIGN.               */
         SLR   @10,@10                                          01S0081
         IC    @10,ARGMT(,BUFAD)                                01S0081
         LA    @10,FBYTE-1(@10)                                 01S0081
         CLI   STOPCODE(@10),X'20'                              01S0081
         BNE   @RF00081                                         01S0081
*                      DO;             /*  KEYWORD PROCESSING.       */
*/*********************************************************************
**                                                                    *
** THIS SEGMENT WILL INVOKE THE APPROPRIATE KEYWORD SCAN ROUTINE      *
** WHICH WILL PROCESS THE PARAMETER(S) OF THE KEYWORD IF ANY.         *
**                                                                    *
**********************************************************************/
*        ACTIVKEY = ZERO;              /* INITIALIZE KEYWORD CODE.   */
         MVI   ACTIVKEY(BUFAD),X'00'                            02S0083
*        DO                            /* KEYWORD SEARCH.            */
*         /************************************************************
*         *                                                           *
*         *  THE KEYWORD TABLE IS SEARCHED FOR A MATCH OF THE         *
*         *  KEYWORD FOUND ON THE CONTROL CARD.                       *
*         *                                                           *
*         ************************************************************/
*         UNTIL ACTIVKEY = DIM(KEYADDR)                         02S0084
*          × (VARI(ACTIVKEY) = OFF & PARMSIZE = KLEN(ACTIVKEY)  02S0084
*                & KEYWD(ACTIVKEY,ONE:PARMSIZE)                 02S0084
*                = CARDDATA(ONE:PARMSIZE))                      02S0084
*          × (VARI(ACTIVKEY) = ON                               02S0084
*                & KEYWD(ACTIVKEY,ONE:KLEN(ACTIVKEY))           02S0084
*                = CARDDATA(ONE:KLEN(ACTIVKEY)));               02S0084
@DL00084 DS    0H                                               02S0085
*          ACTIVKEY = ACTIVKEY + ONE;  /* GET NEXT KEYWORD IN TABLE. */
         LA    @10,1                                            02S0085
         SLR   @09,@09                                          02S0085
         IC    @09,ACTIVKEY(,BUFAD)                             02S0085
         ALR   @10,@09                                          02S0085
         STC   @10,ACTIVKEY(,BUFAD)                             02S0085
*        END;                          /* END OF SEARCH.             */
@DE00084 CLI   ACTIVKEY(BUFAD),15                               02S0086
         BE    @DC00084                                         02S0086
         SLR   @10,@10                                          02S0086
         IC    @10,ACTIVKEY(,BUFAD)                             02S0086
         MH    @10,@CH00359                                     02S0086
         LA    @09,VARI-20(@10)                                 02S0086
         TM    0(@09),B'00010000'                               02S0086
         BNZ   @GL00004                                         02S0086
         SLR   @09,@09                                          02S0086
         ICM   @09,3,PARMSIZE(BUFAD)                            02S0086
         SLR   @15,@15                                          02S0086
         IC    @15,KLEN-20(@10)                                 02S0086
         CR    @09,@15                                          02S0086
         BNE   @GL00004                                         02S0086
         BCTR  @09,0                                            02S0086
         LA    @01,KEYWD-20(@10)                                02S0086
         EX    @09,@SC01029                                     02S0086
         BE    @DC00084                                         02S0086
@GL00004 SLR   @10,@10                                          02S0086
         IC    @10,ACTIVKEY(,BUFAD)                             02S0086
         MH    @10,@CH00359                                     02S0086
         LA    @09,VARI-20(@10)                                 02S0086
         TM    0(@09),B'00010000'                               02S0086
         BNO   @DL00084                                         02S0086
         SLR   @09,@09                                          02S0086
         IC    @09,KLEN-20(@10)                                 02S0086
         BCTR  @09,0                                            02S0086
         LA    @01,KEYWD-20(@10)                                02S0086
         EX    @09,@SC01029                                     02S0086
         BNE   @DL00084                                         02S0086
@DC00084 DS    0H                                               02S0087
*        PRNCNT = ZERO;                /* RESET PARENTHESIS COUNTER. */
         SLR   @10,@10                                          02S0087
         STH   @10,PRNCNT(,BUFAD)                               02S0087
*        KWDCOMP = OFF;                /* SET INCOMPLETE THRU KWD.   */
*        FOUND = OFF;                  /* INITIALIZE FOR PARM SCAN.  */
         NI    KWDCOMP(BUFAD),B'10111110'                       02S0089
*        FLDSW = OFF;                  /* RESET IN FIELD SWITCH.     */
*        PARMGRP = OFF;                /* RESET PARAMETER GRP SW.    */
         NI    FLDSW(BUFAD),B'11110011'                         02S0091
*        PARMNUM = ONE;                /* PRIME FOR PARM SCAN.       */
         MVI   PARMNUM(BUFAD),X'01'                             02S0092
*        PARMSIZE = MIN(PARMSIZE,EIGHT);/* EIGHT IS MAXIMUM SIZE     */
         SLR   @10,@10                                          02S0093
         ICM   @10,3,PARMSIZE(BUFAD)                            02S0093
         LA    @09,8                                            02S0093
         CR    @10,@09                                          02S0093
         BNH   *+6
         LR    @10,@09                                          02S0093
         STH   @10,PARMSIZE(,BUFAD)                             02S0093
*        LASTKEY = CARDDATA(ONE:PARMSIZE);/* SAVE THIS KEYWORD.      */
         MVI   LASTKEY+1(BUFAD),C' '                            02S0094
         MVC   LASTKEY+2(6,BUFAD),LASTKEY+1(BUFAD)              02S0094
         BCTR  @10,0                                            02S0094
         EX    @10,@SM01031                                     02S0094
*        CALL PARMRTN;                 /* PROCESS PARMS THIS KEYWORD.*/
         SLR   @10,@10                                          02S0095
         IC    @10,ACTIVKEY(,BUFAD)                             02S0095
         MH    @10,@CH00359                                     02S0095
         L     @15,PRMPTR-21(@10)                               02S0095
         LA    @15,0(,@15)                                      02S0095
         BALR  @14,@15                                          02S0095
*        IF PARMNUM ^= ZERO            /* CATCH ALL OTHER ERRORS.    */
*         & KWDCOMP = OFF              /*                            */
*         & INVKWD = OFF               /*                            */
*         & EXCLKWD = OFF              /*                            */
*          THEN                        /*                            */
         CLI   PARMNUM(BUFAD),0                                 02S0096
         BE    @RF00096                                         02S0096
         TM    KWDCOMP(BUFAD),B'00110001'                       02S0096
         BNZ   @RF00096                                         02S0096
*            INVPARM = ON;             /* MUST BE INVALID            */
         OI    INVPARM(BUFAD),B'00001000'                       02S0097
*          ELSE;                       /* NOT INVALID HERE.          */
@RF00096 DS    0H                                               02S0099
*        IF COL(ONE) = BLAN            /* CHECK FOR ANOTHER          */
*         & SCANINP = ON               /*  KEYWORD ON THIS CARD.     */
*          THEN                        /*                            */
         ICM   @10,7,CC(BUFAD)                                  02S0099
         CLI   COL(@10),C' '                                    02S0099
         BNE   @RF00099                                         02S0099
         TM    SCANINP(BUFAD),B'01000000'                       02S0099
         BNO   @RF00099                                         02S0099
*            IF CONTINUE = ON          /* CHECK FOR POSSIBLE         */
*              THEN                    /*  CONTINUATION.             */
         TM    CONTINUE(BUFAD),B'00001000'                      02S0100
         BNO   @RF00100                                         02S0100
*                CALL GETCARDN;        /* NEXT CARD CONTINUES.       */
         BAL   @14,GETCARDN                                     02S0101
*        DO                            /* MUST FIND NEXT KEYWORD.    */
*         WHILE KWDCOMP = OFF;         /* IF SCAN INCOMPLETE.        */
@RF00100 DS    0H                                               02S0102
@RF00099 B     @DE00102                                         02S0102
@DL00102 DS    0H                                               02S0103
*          CALL SCAN;                  /*                            */
         BAL   @14,SCAN                                         02S0103
*          IF STOPCODE = BLANK         /* STOP ON ANY BLANK.         */
*            THEN                      /*                            */
         SLR   @10,@10                                          02S0104
         IC    @10,ARGMT(,BUFAD)                                02S0104
         LA    @10,FBYTE-1(@10)                                 02S0104
         CLI   STOPCODE(@10),X'11'                              02S0104
         BNE   @RF00104                                         02S0104
*              DO;                     /*                            */
*                KWDCOMP = ON;         /* SET TO GET OUT OF LOOP.    */
         OI    KWDCOMP(BUFAD),B'00000001'                       02S0106
*                SCANINP = OFF;        /* RESET TO GET OUT OF SCAN.  */
         NI    SCANINP(BUFAD),B'10111111'                       02S0107
*              END;                    /*                            */
*            ELSE                      /* NOT A BLANK.               */
*              IF STOPCODE = COMMA     /* COULD BE A KEYWORD.        */
*                THEN                  /*  DELIMITER.                */
         B     @RC00104                                         02S0109
@RF00104 SLR   @10,@10                                          02S0109
         IC    @10,ARGMT(,BUFAD)                                02S0109
         LA    @10,FBYTE-1(@10)                                 02S0109
         CLI   STOPCODE(@10),X'10'                              02S0109
         BNE   @RF00109                                         02S0109
*                  DO;                 /*                            */
*                   IF COL(ONE) = BLAN /* CHECK FOR ANOTHER          */
*                    & SCANINP = ON    /*  KEYWORD ON THIS CARD.     */
*                      THEN            /*                            */
         ICM   @10,7,CC(BUFAD)                                  02S0111
         CLI   COL(@10),C' '                                    02S0111
         BNE   @RF00111                                         02S0111
         TM    SCANINP(BUFAD),B'01000000'                       02S0111
         BNO   @RF00111                                         02S0111
*                        IF CONTINUE = ON /* CHECK FOR POSSIBLE      */
*                          THEN        /*  CONTINUATION.             */
         TM    CONTINUE(BUFAD),B'00001000'                      02S0112
         BNO   @RF00112                                         02S0112
*                            CALL GETCARDN;/* NEXT CARD CONTINUES.   */
         BAL   @14,GETCARDN                                     02S0113
*                          ELSE;       /* NO CONTINUATION.           */
@RF00112 DS    0H                                               02S0115
*                      ELSE;           /* GET NEXT KEYWORD.          */
@RF00111 DS    0H                                               02S0116
*                    CALL SCAN;        /*                            */
         BAL   @14,SCAN                                         02S0116
*                    IF STOPCODE=EQUAL /* STOP AT EQUAL SIGN MEANS   */
*                      THEN            /*  KEYWORD FOUND.            */
         SLR   @10,@10                                          02S0117
         IC    @10,ARGMT(,BUFAD)                                02S0117
         LA    @10,FBYTE-1(@10)                                 02S0117
         CLI   STOPCODE(@10),X'20'                              02S0117
         BNE   @RF00117                                         02S0117
*                        DO;           /*                            */
*                         KWDCOMP = ON;/* SET TO EXIT LOOP.          */
         OI    KWDCOMP(BUFAD),B'00000001'                       02S0119
*                         KEYIN=ON;    /* KEYWORD IN PLACE.          */
         OI    KEYIN(BUFAD),B'10000000'                         02S0120
*                        END;          /*                            */
*                  END;                /*                            */
@RF00117 DS    0H                                               02S0123
*        END;                          /* END OF KEYWORD FIND LOOP.  */
@RF00109 DS    0H                                               02S0123
@RC00104 DS    0H                                               02S0123
@DE00102 TM    KWDCOMP(BUFAD),B'00000001'                       02S0123
         BZ    @DL00102                                         02S0123
*        KWDCOMP = OFF;                /* RESET KEYWORD COMPLETE.    */
*        FOUND = OFF;                  /* RESET FOUND INDICATION.    */
         NI    KWDCOMP(BUFAD),B'10111110'                       02S0125
*                      END;            /*                            */
*                    ELSE              /* MUST BE A NAME FIELD.      */
*/*********************************************************************
**                                                                    *
**  THIS SEGMENT WILL SCAN A FIELD INTENDED TO CONTAIN THE REPLACE    *
**  SUBPARAMETER, (R). ANY ERRORS WILL CAUSE THE INVALID PARAMETER    *
**  MESSAGE TO BE PRINTED.                                            *
**                                                                    *
**********************************************************************/
*                                                               02S0127
*        IF NAMEFLAG(NEXTOP) = ON      /* COULD BE NOT A KEYWD       */
*         & NAMESET = OFF              /*                            */
*         & (STOPFLAG = ONEH × STOPCODE = LPARN)                02S0127
*          THEN                        /*                            */
         B     @RC00081                                         02S0127
@RF00081 SLR   @10,@10                                          02S0127
         IC    @10,NEXTOP(,BUFAD)                               02S0127
         MH    @10,@CH00054                                     02S0127
         ICM   @09,7,OPTABAD(BUFAD)                             02S0127
         ALR   @09,@10                                          02S0127
         AL    @09,@CF01034                                     02S0127
         TM    NAMEFLAG-2(@09),B'10000000'                      02S0127
         BNO   @RF00127                                         02S0127
         TM    NAMESET(BUFAD),B'10000000'                       02S0127
         BNZ   @RF00127                                         02S0127
         SLR   @10,@10                                          02S0127
         IC    @10,ARGMT(,BUFAD)                                02S0127
         LA    @10,FUNCTION-1(@10)                              02S0127
         TM    STOPFLAG(@10),B'00010000'                        02S0127
         BNO   @GL00014                                         02S0127
         TM    STOPFLAG(@10),B'11100000'                        02S0127
         BZ    @RT00127                                         02S0127
@GL00014 SLR   @10,@10                                          02S0127
         IC    @10,ARGMT(,BUFAD)                                02S0127
         LA    @10,FBYTE-1(@10)                                 02S0127
         CLI   STOPCODE(@10),X'80'                              02S0127
         BNE   @RF00127                                         02S0127
@RT00127 DS    0H                                               02S0128
*            IF (PARMSIZE =< FOUR      /* NAMES ARE MAX FOUR CHARS   */
*                & CARDDATA(ONE) ^= SPLAT) /* ASTERISK NOT NORM.     */
*             × (ACTIVOP ^= ZERO           /*                        */
*                & PARMSIZE = ONE          /* TEST REQUEST FOR       */
*                & CARDDATA(ONE) = SPLAT   /*  SPECIAL IBM SUPPLIED  */
*                & READMOD = ON            /*  GRAPHIC CHARACTER     */
*                & ASTRFLAG(ACTIVOP) = ON) /*  MODIFICATION MODULE.  */
*              THEN                    /*                            */
         CLC   PARMSIZE(2,BUFAD),@CH00051                       02S0128
         BH    @GL00015                                         02S0128
         CLI   CARDDATA(BUFAD),C'*'                             02S0128
         BNE   @RT00128                                         02S0128
@GL00015 CLI   ACTIVOP(BUFAD),0                                 02S0128
         BE    @RF00128                                         02S0128
         CLC   PARMSIZE(2,BUFAD),@CH00061                       02S0128
         BNE   @RF00128                                         02S0128
         CLI   CARDDATA(BUFAD),C'*'                             02S0128
         BNE   @RF00128                                         02S0128
         TM    READMOD(BUFAD),B'00000001'                       02S0128
         BNO   @RF00128                                         02S0128
         SLR   @10,@10                                          02S0128
         IC    @10,ACTIVOP(,BUFAD)                              02S0128
         MH    @10,@CH00054                                     02S0128
         ICM   @09,7,OPTABAD(BUFAD)                             02S0128
         ALR   @09,@10                                          02S0128
         AL    @09,@CF01026                                     02S0128
         TM    ASTRFLAG-3(@09),B'01000000'                      02S0128
         BNO   @RF00128                                         02S0128
@RT00128 DS    0H                                               02S0129
*                DO;                   /*                            */
*                  NAMESET = ON;       /* INDICATE NAME FOUND.       */
         OI    NAMESET(BUFAD),B'10000000'                       02S0130
*                  BSUFIX =            /* SET NAME IN BLDL LIST.     */
*                   CARDDATA(ONE:PARMSIZE);                     02S0131
         MVI   BSUFIX+1(BUFAD),C' '                             02S0131
         MVC   BSUFIX+2(2,BUFAD),BSUFIX+1(BUFAD)                02S0131
         SLR   @10,@10                                          02S0131
         ICM   @10,3,PARMSIZE(BUFAD)                            02S0131
         BCTR  @10,0                                            02S0131
         EX    @10,@SM01035                                     02S0131
*                  IF STOPCODE=LPARN   /* CHECK FOR REPLACE          */
*                    THEN              /*  OPTION.                   */
         SLR   @10,@10                                          02S0132
         IC    @10,ARGMT(,BUFAD)                                02S0132
         LA    @10,FBYTE-1(@10)                                 02S0132
         CLI   STOPCODE(@10),X'80'                              02S0132
         BNE   @RF00132                                         02S0132
*                      DO;             /*                            */
*                        CALL SCAN;    /* EXECUTE SCAN SEGMENT.      */
         BAL   @14,SCAN                                         02S0134
*                        IF STOPCODE   /* CHECK FOR REPLACE OPTION.  */
*                             = RPARN  /* MUST STOP AT RIGHT PAREN.  */
*                         & PARMSIZE = ONE                      02S0135
*                         & REP = CARDDATA(ONE)                 02S0135
*                         & REPFLAG(NEXTOP) = ON                02S0135
*                          THEN        /*                            */
         SLR   @10,@10                                          02S0135
         IC    @10,ARGMT(,BUFAD)                                02S0135
         LA    @10,FBYTE-1(@10)                                 02S0135
         CLI   STOPCODE(@10),X'40'                              02S0135
         BNE   @RF00135                                         02S0135
         CLC   PARMSIZE(2,BUFAD),@CH00061                       02S0135
         BNE   @RF00135                                         02S0135
         CLI   CARDDATA(BUFAD),C'R'                             02S0135
         BNE   @RF00135                                         02S0135
         SLR   @10,@10                                          02S0135
         IC    @10,NEXTOP(,BUFAD)                               02S0135
         MH    @10,@CH00054                                     02S0135
         ICM   @09,7,OPTABAD(BUFAD)                             02S0135
         ALR   @09,@10                                          02S0135
         AL    @09,@CF01026                                     02S0135
         TM    REPFLAG-3(@09),B'00100000'                       02S0135
         BNO   @RF00135                                         02S0135
*                            REPUSE=ON;/* SET REPLACE FLAG.          */
         OI    REPUSE(BUFAD),B'10000000'                        02S0136
*                          ELSE        /*                            */
*                            DO;       /*                            */
         B     @RC00135                                         02S0137
@RF00135 DS    0H                                               02S0138
*                              MSGN = IEBA29I;/* NAME ERROR MESSAGE. */
         MVI   MSGN(BUFAD),X'1D'                                02S0138
*                              CALL IEBIMSGS; /* PRINT IT.           */
         L     @15,@CV00034                                     02S0139
         BALR  @14,@15                                          02S0139
*                              INHIBITW = ON; /* PREVENT LIB UPDATE. */
*                              INHIBITR = ON; /* PREVENT LIB READ.   */
         OI    INHIBITW(BUFAD),B'01100000'                      02S0141
*                              BNAME = BADNAME;/* INV NAME FOR PRT.  */
         MVC   BNAME(8,BUFAD),@CC00924                          02S0142
*                                      /* SET RETURN CODE 8 THIS OP. */
*                              RETSAVE = MAX(RETSAVE,RC8);      02S0143
         SLR   @10,@10                                          02S0143
         IC    @10,RETSAVE(,BUFAD)                              02S0143
         LA    @09,8                                            02S0143
         CR    @10,@09                                          02S0143
         BNL   *+6
         LR    @10,@09                                          02S0143
         STC   @10,RETSAVE(,BUFAD)                              02S0143
*                            END;      /*                            */
*                      END;            /*                            */
@RC00135 DS    0H                                               02S0146
*                      IF COL(ONE)=BLAN /* COULD BE KEYWORD          */
*                        THEN          /*  FOLLOWING.                */
@RF00132 ICM   @10,7,CC(BUFAD)                                  02S0146
         CLI   COL(@10),C' '                                    02S0146
         BNE   @RF00146                                         02S0146
*                          SCANINP=OFF;/* NOT THIS TIME.             */
         NI    SCANINP(BUFAD),B'10111111'                       02S0147
*                 END;                 /*                            */
*               ELSE                   /* ERROR IN NAME.             */
*                 DO;                  /*                            */
         B     @RC00128                                         02S0149
@RF00128 DS    0H                                               02S0150
*                   NAMESET = ON;      /* INDICATE NAME FOUND.       */
         OI    NAMESET(BUFAD),B'10000000'                       02S0150
*                   MSGN = IEBA29I;    /* NAME ERROR MESSAGE.        */
         MVI   MSGN(BUFAD),X'1D'                                02S0151
*                   CALL IEBIMSGS;     /* PRINT IT.                  */
         L     @15,@CV00034                                     02S0152
         BALR  @14,@15                                          02S0152
*                   INHIBITW = ON;     /* PREVENT LIBRARY UPDATE.    */
*                   INHIBITR = ON;     /* PREVENT LIBRARY READ       */
         OI    INHIBITW(BUFAD),B'01100000'                      02S0154
*                   BNAME = BADNAME;   /* SET INV NAME FOR PRINT.    */
         MVC   BNAME(8,BUFAD),@CC00924                          02S0155
*                                      /* SET RETURN CODE 8 THIS OP. */
*                   RETSAVE = MAX(RETSAVE,RC8);                 02S0156
         SLR   @10,@10                                          02S0156
         IC    @10,RETSAVE(,BUFAD)                              02S0156
         LA    @09,8                                            02S0156
         CR    @10,@09                                          02S0156
         BNL   *+6
         LR    @10,@09                                          02S0156
         STC   @10,RETSAVE(,BUFAD)                              02S0156
*                  SCANINP = OFF;      /* RESET SCAN IN PROGRESS.    */
         NI    SCANINP(BUFAD),B'10111111'                       02S0157
*                 END;                 /*                            */
*            ELSE                      /* STOPPED AT INVALID CHAR.   */
*              DO;                     /*                            */
         B     @RC00127                                         02S0159
@RF00127 DS    0H                                               02S0160
*                FWORK = CC;           /* DETERMINE CARD COLUMN      */
         SLR   @10,@10                                          02S0160
         ICM   @10,7,CC(BUFAD)                                  02S0160
         ST    @10,FWORK(,BUFAD)                                02S0160
*                INVCHAR = ON;         /* SET INVALID CHARACTER SW.  */
         OI    INVCHAR(BUFAD),B'00000100'                       02S0161
*              END;                    /*                            */
*                ELSE                  /* MUST BE AN ERROR.          */
*                  INVCHAR = ON;       /* SET INVALID CHARACTER.     */
         B     @RC00080                                         01S0163
@RF00080 OI    INVCHAR(BUFAD),B'00000100'                       01S0163
*              IF STATUS3 ^= ZERO      /* SCAN STATUS HAS ERROR FLAGS*/
*                THEN                  /*                            */
@RC00080 CLI   STATUS3(BUFAD),0                                 01S0164
         BE    @RF00164                                         01S0164
*                  DO;                 /*                            */
*/*********************************************************************
**                                                                    *
**  THIS SEGMENT WILL SET UP THE PROPER MESSAGE FOR ANY OF THE        *
**  KEYWORD EXCEPTIONS THAT MAY HAVE OCCURRED DURING SCANNING.        *
**                                                                    *
**********************************************************************/
*        IF INVCHAR = ON               /* TEST FOR INVALID CHARACTER.*/
*          THEN                        /*                            */
         TM    INVCHAR(BUFAD),B'00000100'                       02S0166
         BNO   @RF00166                                         02S0166
*            DO;                       /* FIND CARD COLUMN NUMBER.   */
*              FWORK = FWORK - ADDR(PRIMCARD);                  02S0168
         LA    @10,PRIMCARD(,BUFAD)                             02S0168
         LCR   @10,@10                                          02S0168
         AL    @10,FWORK(,BUFAD)                                02S0168
         ST    @10,FWORK(,BUFAD)                                02S0168
*              CVD(FWORK,DWORK);       /* MAKE IT DECIMAL.           */
         CVD   @10,DWORK(,BUFAD)                                02S0169
*              UNPK(UWORK,PWORK);      /* MAKE PRINTABLE.            */
         UNPK  UWORK(2,BUFAD),PWORK(2,BUFAD)                    02S0170
*              UNITS = UNITS × MASK;   /*                            */
         OI    UNITS(BUFAD),C'0'                                02S0171
*              MSGN = IEBA22I;         /* INVALID CHARACTER MESSAGE. */
         MVI   MSGN(BUFAD),X'16'                                02S0172
*              INHIBITW = ON;          /* INHIBIT LIBRARY WRITE.     */
         OI    INHIBITW(BUFAD),B'01000000'                      02S0173
*              SCANINP = OFF;          /* DO NO MORE SCANNING.       */
         NI    SCANINP(BUFAD),B'10111111'                       02S0174
*                                      /* GET EDIT ADDR FOR MESSAGE. */
*              EDITDATA(ONE) = ADDR(UWORK);                     02S0175
         LA    @10,UWORK(,BUFAD)                                02S0175
         STCM  @10,7,EDITDATA(BUFAD)                            02S0175
*                                      /* GET LENGTH FOR MESSAGE.    */
*              EDITLEN(ONE) = LENGTH(UWORK);                    02S0176
         MVI   EDITLEN(BUFAD),X'02'                             02S0176
*            END;                      /* END INVALID CHAR MESSAGE.  */
*          ELSE                        /*                            */
*            DO;                       /* OTHER MSGS NEED KWD NAME.  */
         B     @RC00166                                         02S0178
@RF00166 DS    0H                                               02S0179
*              EDITDATA(ONE)           /* SET ADDR OF KEYWORD NAME   */
*               = ADDR(LASTKEY);       /*  FOR EDITING.              */
         LA    @10,LASTKEY(,BUFAD)                              02S0179
         STCM  @10,7,EDITDATA(BUFAD)                            02S0179
*              EDITLEN(ONE)            /* SET LENGTH OF KEYWORD TO   */
*               = LENGTH(LASTKEY);     /*  BE EDITED                 */
         MVI   EDITLEN(BUFAD),X'08'                             02S0180
*              IF INVKWD = ON          /*                            */
*                THEN                  /*                            */
         TM    INVKWD(BUFAD),B'00100000'                        02S0181
         BNO   @RF00181                                         02S0181
*                  MSGN = IEBA15I;     /* INVALID KEYWORD MESSAGE    */
         MVI   MSGN(BUFAD),X'0F'                                02S0182
*                ELSE                  /*                            */
*                  IF INVPARM = ON     /*                            */
*                    THEN              /*                            */
         B     @RC00181                                         02S0183
@RF00181 TM    INVPARM(BUFAD),B'00001000'                       02S0183
         BNO   @RF00183                                         02S0183
*                      MSGN = IEBA14I; /* INVALID PARAMETER          */
         MVI   MSGN(BUFAD),X'0E'                                02S0184
*                    ELSE              /*                            */
*                      IF EXCLKWD = ON /*                            */
*                        THEN          /*                            */
         B     @RC00183                                         02S0185
@RF00183 TM    EXCLKWD(BUFAD),B'00010000'                       02S0185
         BNO   @RF00185                                         02S0185
*                          MSGN=IEBA23I;/* EXCLUSIVE ERROR.          */
         MVI   MSGN(BUFAD),X'17'                                02S0186
*                        ELSE          /*                            */
*                          IF INVDLM = ON                       02S0187
*                            THEN      /* INVALID DELIMITER.         */
         B     @RC00185                                         02S0187
@RF00185 TM    INVDLM(BUFAD),B'10000000'                        02S0187
         BNO   @RF00187                                         02S0187
*                              MSGN = IEBA26I;                  02S0188
         MVI   MSGN(BUFAD),X'1A'                                02S0188
*                            ELSE      /*                            */
*                              IF UNBAL = ON                    02S0189
*                                THEN  /* UNBALANCED PARENTHESIS.    */
         B     @RC00187                                         02S0189
@RF00187 TM    UNBAL(BUFAD),B'00000010'                         02S0189
         BNO   @RF00189                                         02S0189
*                                  MSGN = IEBA35I;              02S0190
         MVI   MSGN(BUFAD),X'23'                                02S0190
*                                ELSE; /* NO ERROR.                  */
@RF00189 DS    0H                                               02S0192
*            END;                      /*                            */
@RC00187 DS    0H                                               02S0192
@RC00185 DS    0H                                               02S0192
@RC00183 DS    0H                                               02S0192
@RC00181 DS    0H                                               02S0193
*        RETSAVE = MAX(RC8,RETSAVE);   /* SET RETURN CODE            */
@RC00166 SLR   @10,@10                                          02S0193
         IC    @10,RETSAVE(,BUFAD)                              02S0193
         LA    @09,8                                            02S0193
         CR    @10,@09                                          02S0193
         BNL   *+6
         LR    @10,@09                                          02S0193
         STC   @10,RETSAVE(,BUFAD)                              02S0193
*        CALL IEBIMSGS;                /* PRINT MESSAGE SELECTED.    */
         L     @15,@CV00034                                     02S0194
         BALR  @14,@15                                          02S0194
*        STATUS3 = ZERO;               /* RESET FOR THIS KEYWORD.    */
         MVI   STATUS3(BUFAD),X'00'                             02S0195
*        INHIBITW = ON;                /* PREVENT LIBRARY UPDATE     */
         OI    INHIBITW(BUFAD),B'01000000'                      02S0196
*                  END;                /*                            */
*            END;                      /* END OF KEYWORD SCAN.       */
@RF00164 DS    0H                                               01S0198
@DE00076 TM    SCANINP(BUFAD),B'01000000'                       01S0198
         BO    @DL00076                                         01S0198
*          IF SCANINP = OFF            /* ERROR MAY HAVE RESET       */
*            THEN                      /*  SCAN IN PROGRESS.         */
@RC00035 TM    SCANINP(BUFAD),B'01000000'                       01S0199
         BNZ   @RF00199                                         01S0199
*              DO                      /* PURGE AND PRINT ALL        */
*               WHILE CONTINUE=ON;     /*  CONTINUATION CARDS.       */
         B     @DE00200                                         01S0200
@DL00200 DS    0H                                               01S0201
*                CALL GETCARDN;        /* GET CONTINUATION.          */
         BAL   @14,GETCARDN                                     01S0201
*              END;                    /* END OF PURGE.              */
@DE00200 TM    CONTINUE(BUFAD),B'00001000'                      01S0202
         BO    @DL00200                                         01S0202
*        GEN REFS(SAVE2)               /* RESTORE BACKWARD POINTER   */
*         (L   @13,SAVE2+BACK(,BUFAD));/* RETURN TO CALLER.          */
@RF00199 DS    0H                                               01S0203
         L   @13,SAVE2+BACK(,BUFAD)
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE LOC KEYWORD       *
**  AND ITS PARAMETERS. VALID PARAMETERS INCLUDE GROUPS OF THREE      *
**  POSSIBLE VALUES -                                                 *
**       1. AN EBCDIC ASSIGNMENT WHICH IS A TABLE REFERENCE.          *
**       2. A CGM REFERENCE.                                          *
**       3. A CGMID ORDER REFERENCE.                                  *
**                                                                    *
**********************************************************************/
*LOC:                                                           01S0204
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0204
         B     @PB00002                                         01S0204
LOC      STM   @14,@12,12(@13)                                  01S0204
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.
         ST    @14,FORE(,@13)          FORWARD POINTER.
         LR    @13,@14                 LINKAGE COMPLETE.
*        IF LOCFLAG(ACTIVOP) = ON      /* IS KEYWORD VALID FOR       */
*          THEN                        /*  OPERATION?                */
         SLR   @10,@10                                          01S0206
         IC    @10,ACTIVOP(,BUFAD)                              01S0206
         MH    @10,@CH00054                                     01S0206
         ICM   @09,7,OPTABAD(BUFAD)                             01S0206
         ALR   @09,@10                                          01S0206
         AL    @09,@CF01034                                     01S0206
         TM    LOCFLAG-2(@09),B'00000010'                       01S0206
         BNO   @RF00206                                         01S0206
*            IF LOCSET = OFF           /* HAS KEYWORD BEEN USED OR   */
*              THEN                    /*  IS IT MUTUALLY EXCLUSIVE? */
         TM    LOCSET(BUFAD),B'00010000'                        01S0207
         BNZ   @RF00207                                         01S0207
*                DO;                   /* THIS PATH FOR KEYWORD OK.  */
*                  LOCSET = ON;        /* SET KEYWORD USED FLAG.     */
         OI    LOCSET(BUFAD),B'00010000'                        01S0209
*                  CALL FINDPARM;      /* SCAN PARAMETER.            */
         BAL   @14,FINDPARM                                     01S0210
*                      DO              /* START PARAMETER PROCESS.   */
*                       SCNT = ONE     /* FILL THE SCAN ARRAY WITH   */
*                       TO DIM(SCANARY)/*  PARMS FROM THE LOC KEYWORD*/
*                       WHILE PARMNUM  /* CONTINUE THRU ALL PARMS.   */
*                            ^= ZERO;  /*                            */
         LA    @10,1                                            01S0211
         STH   @10,SCNT(,BUFAD)                                 01S0211
@DL00211 CLI   PARMNUM(BUFAD),0                                 01S0211
         BE    @DC00211                                         01S0211
*                        SCANARY(SCNT,TWO) = ALBIT;             01S0212
         SLR   @10,@10                                          01S0212
         ICM   @10,3,SCNT(BUFAD)                                01S0212
         SLA   @10,2                                            01S0212
         LA    @09,255                                          01S0212
         STC   @09,SCANARY-3(@10,BUFAD)                         01S0212
*                        SCANARY(SCNT,THREE) = ZERO;            01S0213
         SLR   @09,@09                                          01S0213
         STC   @09,SCANARY-2(@10,BUFAD)                         01S0213
*                        DO            /* START PARM GROUP.          */
*                         UNTIL PARMNUM<TWO;                    01S0214
@DL00214 DS    0H                                               01S0215
*                          IF PARMNUM = THREE                   01S0215
*                            THEN      /* THIRD PARM IS DECIMAL.     */
         CLI   PARMNUM(BUFAD),3                                 01S0215
         BNE   @RF00215                                         01S0215
*                              SCANARY(SCNT,THREE) = FWORK;     01S0216
         SLR   @10,@10                                          01S0216
         ICM   @10,3,SCNT(BUFAD)                                01S0216
         SLA   @10,2                                            01S0216
         L     @09,FWORK(,BUFAD)                                01S0216
         STC   @09,SCANARY-2(@10,BUFAD)                         01S0216
*                            ELSE      /* 1ST AND 2ND PARMS ARE HEX. */
*                              SCANARY(SCNT,PARMNUM) = CARDDATA(ONE);
         B     @RC00215                                         01S0217
@RF00215 SLR   @10,@10                                          01S0217
         ICM   @10,3,SCNT(BUFAD)                                01S0217
         SLA   @10,2                                            01S0217
         SLR   @09,@09                                          01S0217
         IC    @09,PARMNUM(,BUFAD)                              01S0217
         ALR   @10,@09                                          01S0217
         SLR   @09,@09                                          01S0217
         IC    @09,CARDDATA(,BUFAD)                             01S0217
         STC   @09,SCANARY-5(@10,BUFAD)                         01S0217
*                          PARMNUM=PARMNUM+ONE;                 01S0218
@RC00215 LA    @10,1                                            01S0218
         SLR   @09,@09                                          01S0218
         IC    @09,PARMNUM(,BUFAD)                              01S0218
         ALR   @10,@09                                          01S0218
         STC   @10,PARMNUM(,BUFAD)                              01S0218
*                          IF KWDCOMP = OFF                     01S0219
*                            THEN      /* GET ANOTHER PARAMETER.     */
         TM    KWDCOMP(BUFAD),B'00000001'                       01S0219
         BNZ   @RF00219                                         01S0219
*                              CALL FINDPARM;                   01S0220
         BAL   @14,FINDPARM                                     01S0220
*                            ELSE      /* SET PARMNUM TO EXIT LOOP.  */
*                              PARMNUM = ZERO;                  01S0221
         B     @RC00219                                         01S0221
@RF00219 MVI   PARMNUM(BUFAD),X'00'                             01S0221
*                        END;                                   01S0222
@RC00219 DS    0H                                               01S0222
@DE00214 CLI   PARMNUM(BUFAD),2                                 01S0222
         BNL   @DL00214                                         01S0222
*                      END;            /* END PARAMETER PROCESS.     */
         LA    @10,1                                            01S0223
         SLR   @09,@09                                          01S0223
         ICM   @09,3,SCNT(BUFAD)                                01S0223
         ALR   @10,@09                                          01S0223
         STH   @10,SCNT(,BUFAD)                                 01S0223
         CH    @10,@CH00220                                     01S0223
         BNH   @DL00211                                         01S0223
@DC00211 DS    0H                                               01S0224
*                END;                  /* END VALID KEYWORD PROCESS. */
*              ELSE                    /* KEYWORD PREVIOUSLY USED OR */
*                EXCLKWD = ON;         /*  MUTUALLY EXCLUSIVE.       */
         B     @RC00207                                         01S0225
@RF00207 OI    EXCLKWD(BUFAD),B'00010000'                       01S0225
*          ELSE                        /* KEYWORD NOT VALID FOR THIS */
*            INVKWD = ON;              /*  OPERATION.                */
         B     @RC00206                                         01S0226
@RF00206 OI    INVKWD(BUFAD),B'00100000'                        01S0226
*        GEN REFS(SAVE3)               /*                            */
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */
@RC00206 DS    0H                                               01S0227
         L   @13,SAVE3+BACK(,BUFAD)
*  END LOC;                            /* RETURN TO CALLER.          */
@EL00002 DS    0H                                               01S0228
@EF00002 DS    0H                                               01S0228
@ER00002 LM    @14,@12,12(@13)                                  01S0228
         BR    @14                                              01S0228
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE CH KEYWORD        *
**  AND ITS PARAMETERS. VALID PARAMETERS INCLUDE DECIMAL NUMBERS      *
**  (ONE TO NINTY SIX).                                               *
**                                                                    *
**********************************************************************/
*CH:                                                            01S0229
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0229
CH       STM   @14,@12,12(@13)                                  01S0229
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.
         ST    @14,FORE(,@13)          FORWARD POINTER.
         LR    @13,@14                 LINKAGE COMPLETE.
*        IF CHFLAG(ACTIVOP) = ON       /* CHECK FOR VALID KEYWORD.   */
*         & (PARMSIZE = FOUR           /*                            */
*         × PARMSIZE = THREE)          /*                            */
*          THEN                        /*                            */
         SLR   @10,@10                                          01S0231
         IC    @10,ACTIVOP(,BUFAD)                              01S0231
         MH    @10,@CH00054                                     01S0231
         ICM   @09,7,OPTABAD(BUFAD)                             01S0231
         ALR   @09,@10                                          01S0231
         AL    @09,@CF01039                                     01S0231
         TM    CHFLAG-1(@09),B'00100000'                        01S0231
         BNO   @RF00231                                         01S0231
         CLC   PARMSIZE(2,BUFAD),@CH00051                       01S0231
         BE    @RT00231                                         01S0231
         CLC   PARMSIZE(2,BUFAD),@CH00112                       01S0231
         BNE   @RF00231                                         01S0231
@RT00231 DS    0H                                               01S0232
*            DO;                       /* THIS PATH FOR KEYWORD OK.  */
*              CHSET = ON;             /* SET KEYWORD USED FLAG.     */
         OI    CHSET(BUFAD),B'00000100'                         01S0233
*                                      /* MOVE CHAN CODE FOR CONVERT.*/
*              CARDDATA(ONE:TWO)       /* THROW AWAY (CH).           */
*                = CARDDATA(THREE:FOUR);                        01S0234
         MVC   CARDDATA(2,BUFAD),CARDDATA+2(BUFAD)              01S0234
*              PARMSIZE = PARMSIZE-TWO;/* REDUCE SIZE VALUE.         */
         SLR   @10,@10                                          01S0235
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0235
         BCTR  @10,0                                            01S0235
         BCTR  @10,0                                            01S0235
         STH   @10,PARMSIZE(,BUFAD)                             01S0235
*              CALL CONVERT;           /* CONVERT CANNEL CODE.       */
         BAL   @14,CONVERT                                      01S0236
*              IF INVPARM = ON         /* CHANNEL CODE VALIDITY CHECK*/
*               × FWORK > TWELV        /* CHANNEL CODES ARE 1 TO 12. */
*               × FWORK < ONE                                   01S0237
*                THEN                  /* ERROR TIME.                */
         TM    INVPARM(BUFAD),B'00001000'                       01S0237
         BO    @RT00237                                         01S0237
         L     @10,FWORK(,BUFAD)                                01S0237
         CH    @10,@CH00033                                     01S0237
         BH    @RT00237                                         01S0237
         LTR   @10,@10                                          01S0237
         BP    @RF00237                                         01S0237
@RT00237 DS    0H                                               01S0238
*                  INVKWD = ON;        /* INDICATE KEYWORD ERROR.    */
         OI    INVKWD(BUFAD),B'00100000'                        01S0238
*                ELSE                                           01S0239
*                  DO;                 /* CONTINUE THRU PARMAMETERS. */
         B     @RC00237                                         01S0239
@RF00237 DS    0H                                               01S0240
*                    CHAN = FWORK;     /* SAVE CHANNEL CODE.         */
         MVC   CHAN(1,BUFAD),FWORK+3(BUFAD)                     01S0240
*                    CALL FINDPARM;    /* SCAN PARAMETER.            */
         BAL   @14,FINDPARM                                     01S0241
*                        DO            /* START PARAMETER PROCESS.   */
*                         UNTIL PARMNUM /* CONTINUE THRU ALL PARMS.  */
*                               = ZERO;/*                            */
@DL00242 DS    0H                                               01S0243
*                          IF PARMSIZE => ONE                   01S0243
*                           & (FWORK =< FCBMAX & FWORK => ONE)  01S0243
*                            THEN      /* CHECK FOR PARAMETER.       */
         CLC   PARMSIZE(2,BUFAD),@CH00061                       01S0243
         BL    @RF00243                                         01S0243
         L     @10,FWORK(,BUFAD)                                01S0243
         CH    @10,@CH00889                                     01S0243
         BH    @RF00243                                         01S0243
         CH    @10,@CH00061                                     01S0243
         BL    @RF00243                                         01S0243
*                              IF FCBBOD(FWORK) = ZERO          01S0244
*                                THEN  /* SET CHAN CODE IN FCB.      */
         SLR   @09,@09                                          01S0244
         IC    @09,FCBBOD-1(@10,BUFAD)                          01S0244
         CH    @09,@CH00480                                     01S0244
         BNE   @RF00244                                         01S0244
*                                  FCBBOD(FWORK) = CHAN;        01S0245
         ALR   @10,BUFAD                                        01S0245
         MVC   FCBBOD-1(1,@10),CHAN(BUFAD)                      01S0245
*                                ELSE  /* CHAN CODE ALREADY SET.     */
*                                  DO;                          01S0246
         B     @RC00244                                         01S0246
@RF00244 DS    0H                                               01S0247
*                                    EDITDATA(ONE)=ADDR(CARDDATA);
         LA    @10,CARDDATA(,BUFAD)                             01S0247
         STCM  @10,7,EDITDATA(BUFAD)                            01S0247
*                                    EDITLEN(ONE)=PARMSIZE;     01S0248
         MVC   EDITLEN(1,BUFAD),PARMSIZE+1(BUFAD)               01S0248
*                                    MSGN = IEBA36I;            01S0249
         MVI   MSGN(BUFAD),X'24'                                01S0249
*                                    CALL IEBIMSGS;             01S0250
         L     @15,@CV00034                                     01S0250
         BALR  @14,@15                                          01S0250
*                                    INHIBITW = ON;             01S0251
         OI    INHIBITW(BUFAD),B'01000000'                      01S0251
*                                  END;                         01S0252
*                            ELSE      /* MISSING PARAMETER.         */
*                              INVPARM = ON;                    01S0253
         B     @RC00243                                         01S0253
@RF00243 OI    INVPARM(BUFAD),B'00001000'                       01S0253
*                          IF KWDCOMP = OFF                     01S0254
*                            THEN      /* STILL SCANNING.            */
@RC00243 TM    KWDCOMP(BUFAD),B'00000001'                       01S0254
         BNZ   @RF00254                                         01S0254
*                              CALL FINDPARM;/* GET NEXT PARAMETER.  */
         BAL   @14,FINDPARM                                     01S0255
*                            ELSE      /* END PARAMETER PROCESS.     */
*                              PARMNUM = ZERO;                  01S0256
         B     @RC00254                                         01S0256
@RF00254 MVI   PARMNUM(BUFAD),X'00'                             01S0256
*                        END;          /* END OF PARAMETER PROCESS.  */
@RC00254 DS    0H                                               01S0257
@DE00242 CLI   PARMNUM(BUFAD),0                                 01S0257
         BNE   @DL00242                                         01S0257
*                 END;                 /*                            */
*             END;                     /* END VALID KEYWORD PROCESS. */
*          ELSE                        /* KEYWORD NOT VALID FOR THIS */
*            INVKWD = ON;              /*  OPERATION.                */
         B     @RC00231                                         01S0260
@RF00231 OI    INVKWD(BUFAD),B'00100000'                        01S0260
*        GEN REFS(SAVE3)               /*                            */
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */
@RC00231 DS    0H                                               01S0261
         L   @13,SAVE3+BACK(,BUFAD)
*  END CH;                             /* RETURN TO CALLER.          */
@EL00003 DS    0H                                               01S0262
@EF00003 DS    0H                                               01S0262
@ER00003 LM    @14,@12,12(@13)                                  01S0262
         BR    @14                                              01S0262
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE SIZE KEYWORD      *
**  AND ITS PARAMETER. VALID PARAMETER IS A TWO OR THREE DIGIT FIELD. *
**                                                                    *
**********************************************************************/
*SIZE:                                                          01S0263
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0263
SIZE     STM   @14,@12,12(@13)                                  01S0263
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.
         ST    @14,FORE(,@13)          FORWARD POINTER.
         LR    @13,@14                 LINKAGE COMPLETE.
*        IF SIZEFLAG(ACTIVOP) = ON     /* IS KEYWORD VALID FOR       */
*          THEN                        /*  OPERATION?                */
         SLR   @10,@10                                          01S0265
         IC    @10,ACTIVOP(,BUFAD)                              01S0265
         MH    @10,@CH00054                                     01S0265
         ICM   @09,7,OPTABAD(BUFAD)                             01S0265
         ALR   @09,@10                                          01S0265
         AL    @09,@CF01039                                     01S0265
         TM    SIZEFLAG-1(@09),B'00010000'                      01S0265
         BNO   @RF00265                                         01S0265
*            IF SIZESET = OFF          /* HAS KEYWORD BEEN USED OR   */
*              THEN                    /*  IS IT MUTUALLY EXCLUSIVE? */
         TM    SIZESET(BUFAD),B'00001000'                       01S0266
         BNZ   @RF00266                                         01S0266
*                DO;                   /* THIS PATH FOR KEYWORD OK.  */
*                  SIZESET = ON;       /* SET KEYWORD USED FLAG.     */
         OI    SIZESET(BUFAD),B'00001000'                       01S0268
*                  CALL FINDPARM;      /* SCAN PARAMETER.            */
         BAL   @14,FINDPARM                                     01S0269
*                  IF PARMNUM ^= ZERO  /* CHECK FOR PRESENCE OF      */
*                   & FWORK =< SZMAX   /*  VALID                     */
*                   & FWORK => SZMIN   /*  PARAMETER.                */
*                   & FWORK // FIVE = ZERO /* MUST BE HALF INCH.     */
*                    THEN              /*                            */
         CLI   PARMNUM(BUFAD),0                                 01S0270
         BE    @RF00270                                         01S0270
         L     @10,FWORK(,BUFAD)                                01S0270
         CH    @10,@CH00195                                     01S0270
         BH    @RF00270                                         01S0270
         CH    @10,@CH00378                                     01S0270
         BL    @RF00270                                         01S0270
         LR    @00,@10                                          01S0270
         SRDA  @00,32                                           01S0270
         D     @00,@CF00037                                     01S0270
         LTR   @00,@00                                          01S0270
         BNZ   @RF00270                                         01S0270
*                      FCBSIZE = FWORK;/* SET FORM SIZE.             */
         STH   @10,FCBSIZE(,BUFAD)                              01S0271
*                    ELSE              /*                            */
*                      INVPARM = ON;   /* SET INVALID PARAMETER.     */
         B     @RC00270                                         01S0272
@RF00270 OI    INVPARM(BUFAD),B'00001000'                       01S0272
*                END;                  /* END VALID KEYWORD PROCESS. */
*              ELSE                    /* KEYWORD PREVIOUSLY USED OR */
*                EXCLKWD = ON;         /*  MUTUALLY EXCLUSIVE.       */
         B     @RC00266                                         01S0274
@RF00266 OI    EXCLKWD(BUFAD),B'00010000'                       01S0274
*          ELSE                        /* KEYWORD NOT VALID FOR THIS */
*            INVKWD = ON;              /*  OPERATION.                */
         B     @RC00265                                         01S0275
@RF00265 OI    INVKWD(BUFAD),B'00100000'                        01S0275
*        GEN REFS(SAVE3)               /*                            */
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */
@RC00265 DS    0H                                               01S0276
         L   @13,SAVE3+BACK(,BUFAD)
*  END SIZE;                           /* RETURN TO CALLER.          */
@EL00004 DS    0H                                               01S0277
@EF00004 DS    0H                                               01S0277
@ER00004 LM    @14,@12,12(@13)                                  01S0277
         BR    @14                                              01S0277
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE POS KEYWORD       *
**  AND ITS PARAMETER. VALID PARAMETER IS A ONE TO THREE DIGIT FIELD. *
**                                                                    *
**********************************************************************/
*POS:                                                           01S0278
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0278
POS      STM   @14,@12,12(@13)                                  01S0278
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.
         ST    @14,FORE(,@13)          FORWARD POINTER.
         LR    @13,@14                 LINKAGE COMPLETE.
*        IF POSFLAG(ACTIVOP) = ON      /* IS KEYWORD VALID FOR       */
*          THEN                        /*  OPERATION?                */
         SLR   @10,@10                                          01S0280
         IC    @10,ACTIVOP(,BUFAD)                              01S0280
         MH    @10,@CH00054                                     01S0280
         ICM   @09,7,OPTABAD(BUFAD)                             01S0280
         ALR   @09,@10                                          01S0280
         AL    @09,@CF01039                                     01S0280
         TM    POSFLAG-1(@09),B'00000010'                       01S0280
         BNO   @RF00280                                         01S0280
*            IF POSSET = OFF           /* HAS KEYWORD BEEN USED OR   */
*              THEN                    /*  IS IT MUTUALLY EXCLUSIVE? */
         TM    POSSET(BUFAD),B'00000100'                        01S0281
         BNZ   @RF00281                                         01S0281
*                DO;                   /* THIS PATH FOR KEYWORD OK.  */
*                  POSSET = ON;        /* SET KEYWORD USED FLAG.     */
         OI    POSSET(BUFAD),B'00000100'                        01S0283
*                  CALL FINDPARM;      /* SCAN PARAMETER.            */
         BAL   @14,FINDPARM                                     01S0284
*                  IF PARMNUM ^= ZERO  /* CHECK FOR PRESENCE OF      */
*                   & FWORK =< POSMAX  /*  VALID                     */
*                    THEN              /*                            */
         CLI   PARMNUM(BUFAD),0                                 01S0285
         BE    @RF00285                                         01S0285
         L     @10,FWORK(,BUFAD)                                01S0285
         CH    @10,@CH00281                                     01S0285
         BH    @RF00285                                         01S0285
*                      IPOS = FWORK;   /* SET INITIAL PRINT POSITION.*/
         STC   @10,IPOS+796(,BUFAD)                             01S0286
*                    ELSE              /*                            */
*                      INVPARM = ON;   /* SET INVALID PARAMETER.     */
         B     @RC00285                                         01S0287
@RF00285 OI    INVPARM(BUFAD),B'00001000'                       01S0287
*                END;                  /* END VALID KEYWORD PROCESS. */
*              ELSE                    /* KEYWORD PREVIOUSLY USED OR */
*                EXCLKWD = ON;         /*  MUTUALLY EXCLUSIVE.       */
         B     @RC00281                                         01S0289
@RF00281 OI    EXCLKWD(BUFAD),B'00010000'                       01S0289
*          ELSE                        /* KEYWORD NOT VALID FOR THIS */
*            INVKWD = ON;              /*  OPERATION.                */
         B     @RC00280                                         01S0290
@RF00280 OI    INVKWD(BUFAD),B'00100000'                        01S0290
*        GEN REFS(SAVE3)               /*                            */
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */
@RC00280 DS    0H                                               01S0291
         L   @13,SAVE3+BACK(,BUFAD)
*  END POS;                            /* RETURN TO CALLER.          */
@EL00005 DS    0H                                               01S0292
@EF00005 DS    0H                                               01S0292
@ER00005 LM    @14,@12,12(@13)                                  01S0292
         BR    @14                                              01S0292
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE COPIES KEYWORD    *
**  AND ITS PARAMETERS. VALID PARAMETERS INCLUDE GROUPS OF TWO        *
**  POSSIBLE VALUES -                                                 *
**       1. AN INITIAL COPY NUMBER.                                   *
**       2. TOTAL NUMBER OF COPIES TO BE MODIFIED.                    *
**                                                                    *
**********************************************************************/
*COPIES:                                                        01S0293
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0293
COPIES   STM   @14,@12,12(@13)                                  01S0293
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.
         ST    @14,FORE(,@13)          FORWARD POINTER.
         LR    @13,@14                 LINKAGE COMPLETE.
*        IF COPYFLAG(ACTIVOP) = ON     /* IS KEYWORD VALID FOR       */
*          THEN                        /*  OPERATION?                */
         SLR   @10,@10                                          01S0295
         IC    @10,ACTIVOP(,BUFAD)                              01S0295
         MH    @10,@CH00054                                     01S0295
         ICM   @09,7,OPTABAD(BUFAD)                             01S0295
         ALR   @09,@10                                          01S0295
         AL    @09,@CF01039                                     01S0295
         TM    COPYFLAG-1(@09),B'00001000'                      01S0295
         BNO   @RF00295                                         01S0295
*            IF COPYSET = OFF          /* HAS KEYWORD BEEN USED OR   */
*              THEN                    /*  IS IT MUTUALLY EXCLUSIVE? */
         TM    COPYSET(BUFAD),B'00010000'                       01S0296
         BNZ   @RF00296                                         01S0296
*                DO;                   /* THIS PATH FOR KEYWORD OK.  */
*                  COPYSET = ON;       /* SET KEYWORD USED FLAG.     */
         OI    COPYSET(BUFAD),B'00010000'                       01S0298
*                  CALL FINDPARM;      /* SCAN PARAMETER.            */
         BAL   @14,FINDPARM                                     01S0299
*                      DO              /* START PARAMETER PROCESS.   */
*                       WHILE PARMNUM  /* CONTINUE THRU ALL PARMS.   */
*                            ^= ZERO;  /*                            */
         B     @DE00300                                         01S0300
@DL00300 DS    0H                                               01S0301
*                        IF FWORK =< MAXCOPY                    01S0301
*                          THEN        /* CHECK FOR VALID PARM.      */
         L     @10,FWORK(,BUFAD)                                01S0301
         CH    @10,@CH00550                                     01S0301
         BH    @RF00301                                         01S0301
*                            IF PARMNUM = ONE                   01S0302
*                              THEN    /* SET INITIAL COPY NUMBER.   */
         CLI   PARMNUM(BUFAD),1                                 01S0302
         BNE   @RF00302                                         01S0302
*                                ICOPY = FWORK;                 01S0303
         STC   @10,ICOPY+796(,BUFAD)                            01S0303
*                              ELSE    /* SET NUMBER OF COPIES.      */
*                                COPYX = FWORK;                 01S0304
         B     @RC00302                                         01S0304
@RF00302 MVC   COPYX+796(1,BUFAD),FWORK+3(BUFAD)                01S0304
*                          ELSE        /* INVALID PARAMETER.         */
*                            INVPARM = ON;                      01S0305
         B     @RC00301                                         01S0305
@RF00301 OI    INVPARM(BUFAD),B'00001000'                       01S0305
*                        IF KWDCOMP = OFF                       01S0306
*                          THEN        /* GET ANOTHER PARAMETER.     */
@RC00301 TM    KWDCOMP(BUFAD),B'00000001'                       01S0306
         BNZ   @RF00306                                         01S0306
*                            DO;                                01S0307
*                              PARMNUM=PARMNUM+ONE;             01S0308
         LA    @10,1                                            01S0308
         SLR   @09,@09                                          01S0308
         IC    @09,PARMNUM(,BUFAD)                              01S0308
         ALR   @10,@09                                          01S0308
         STC   @10,PARMNUM(,BUFAD)                              01S0308
*                              CALL FINDPARM;                   01S0309
         BAL   @14,FINDPARM                                     01S0309
*                            END;                               01S0310
*                          ELSE        /* SET PARMNUM TO EXIT LOOP.  */
*                            PARMNUM = ZERO;                    01S0311
         B     @RC00306                                         01S0311
@RF00306 MVI   PARMNUM(BUFAD),X'00'                             01S0311
*                      END;            /* END PARAMETER PROCESS.     */
@RC00306 DS    0H                                               01S0312
@DE00300 CLI   PARMNUM(BUFAD),0                                 01S0312
         BNE   @DL00300                                         01S0312
*                END;                  /* END VALID KEYWORD PROCESS. */
*              ELSE                    /* KEYWORD PREVIOUSLY USED OR */
*                EXCLKWD = ON;         /*  MUTUALLY EXCLUSIVE.       */
         B     @RC00296                                         01S0314
@RF00296 OI    EXCLKWD(BUFAD),B'00010000'                       01S0314
*          ELSE                        /* KEYWORD NOT VALID FOR THIS */
*            INVKWD = ON;              /*  OPERATION.                */
         B     @RC00295                                         01S0315
@RF00295 OI    INVKWD(BUFAD),B'00100000'                        01S0315
*        GEN REFS(SAVE3)               /*                            */
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */
@RC00295 DS    0H                                               01S0316
         L   @13,SAVE3+BACK(,BUFAD)
*  END COPIES;                         /* RETURN TO CALLER.          */
@EL00006 DS    0H                                               01S0317
@EF00006 DS    0H                                               01S0317
@ER00006 LM    @14,@12,12(@13)                                  01S0317
         BR    @14                                              01S0317
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE LINES KEYWORD     *
**  AND ITS PARAMETERS. VALID PARAMETERS INCLUDE GROUPS OF TWO        *
**  POSSIBLE VALUES -                                                 *
**       1. AN INITIAL LINE NUMBER.                                   *
**       2. TOTAL NUMBER OF LINES TO BE MODIFIED.                     *
**                                                                    *
**********************************************************************/
*LINES:                                                         01S0318
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0318
LINES    STM   @14,@12,12(@13)                                  01S0318
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.
         ST    @14,FORE(,@13)          FORWARD POINTER.
         LR    @13,@14                 LINKAGE COMPLETE.
*        IF LINEFLAG(ACTIVOP) = ON     /* IS KEYWORD VALID FOR       */
*          THEN                        /*  OPERATION?                */
         SLR   @10,@10                                          01S0320
         IC    @10,ACTIVOP(,BUFAD)                              01S0320
         MH    @10,@CH00054                                     01S0320
         ICM   @09,7,OPTABAD(BUFAD)                             01S0320
         ALR   @09,@10                                          01S0320
         AL    @09,@CF01039                                     01S0320
         TM    LINEFLAG-1(@09),B'00000100'                      01S0320
         BNO   @RF00320                                         01S0320
*            IF LINESET = OFF          /* HAS KEYWORD BEEN USED OR   */
*              THEN                    /*  IS IT MUTUALLY EXCLUSIVE? */
         TM    LINESET(BUFAD),B'00001000'                       01S0321
         BNZ   @RF00321                                         01S0321
*                DO;                   /* THIS PATH FOR KEYWORD OK.  */
*                  LINESET = ON;       /* SET KEYWORD USED FLAG.     */
         OI    LINESET(BUFAD),B'00001000'                       01S0323
*                  CALL FINDPARM;      /* SCAN PARAMETER.            */
         BAL   @14,FINDPARM                                     01S0324
*                      DO              /* START PARAMETER PROCESS.   */
*                       WHILE PARMNUM  /* CONTINUE THRU ALL PARMS.   */
*                            ^= ZERO;  /*                            */
         B     @DE00325                                         01S0325
@DL00325 DS    0H                                               01S0326
*                        IF FWORK =< MAXLINE                    01S0326
*                          THEN        /* CHECK FOR VALID PARM.      */
         L     @10,FWORK(,BUFAD)                                01S0326
         CH    @10,@CH00889                                     01S0326
         BH    @RF00326                                         01S0326
*                            IF PARMNUM = ONE                   01S0327
*                              THEN    /* SET INITIAL LINE NUMBER.   */
         CLI   PARMNUM(BUFAD),1                                 01S0327
         BNE   @RF00327                                         01S0327
*                                ILINE = FWORK;                 01S0328
         STC   @10,ILINE+796(,BUFAD)                            01S0328
*                              ELSE    /* SET NUMBER OF LINES.       */
*                                LINEX = FWORK;                 01S0329
         B     @RC00327                                         01S0329
@RF00327 MVC   LINEX+796(1,BUFAD),FWORK+3(BUFAD)                01S0329
*                          ELSE        /* INVALID PARAMETER.         */
*                            INVPARM = ON;                      01S0330
         B     @RC00326                                         01S0330
@RF00326 OI    INVPARM(BUFAD),B'00001000'                       01S0330
*                        IF KWDCOMP = OFF                       01S0331
*                          THEN        /* GET ANOTHER PARAMETER.     */
@RC00326 TM    KWDCOMP(BUFAD),B'00000001'                       01S0331
         BNZ   @RF00331                                         01S0331
*                            DO;                                01S0332
*                              PARMNUM=PARMNUM+ONE;             01S0333
         LA    @10,1                                            01S0333
         SLR   @09,@09                                          01S0333
         IC    @09,PARMNUM(,BUFAD)                              01S0333
         ALR   @10,@09                                          01S0333
         STC   @10,PARMNUM(,BUFAD)                              01S0333
*                              CALL FINDPARM;                   01S0334
         BAL   @14,FINDPARM                                     01S0334
*                            END;                               01S0335
*                          ELSE        /* SET PARMNUM TO EXIT LOOP.  */
*                            PARMNUM = ZERO;                    01S0336
         B     @RC00331                                         01S0336
@RF00331 MVI   PARMNUM(BUFAD),X'00'                             01S0336
*                      END;            /* END PARAMETER PROCESS.     */
@RC00331 DS    0H                                               01S0337
@DE00325 CLI   PARMNUM(BUFAD),0                                 01S0337
         BNE   @DL00325                                         01S0337
*                END;                  /* END VALID KEYWORD PROCESS. */
*              ELSE                    /* KEYWORD PREVIOUSLY USED OR */
*                EXCLKWD = ON;         /*  MUTUALLY EXCLUSIVE.       */
         B     @RC00321                                         01S0339
@RF00321 OI    EXCLKWD(BUFAD),B'00010000'                       01S0339
*          ELSE                        /* KEYWORD NOT VALID FOR THIS */
*            INVKWD = ON;              /*  OPERATION.                */
         B     @RC00320                                         01S0340
@RF00320 OI    INVKWD(BUFAD),B'00100000'                        01S0340
*        GEN REFS(SAVE3)               /*                            */
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */
@RC00320 DS    0H                                               01S0341
         L   @13,SAVE3+BACK(,BUFAD)
*  END LINES;                          /* RETURN TO CALLER.          */
@EL00007 DS    0H                                               01S0342
@EF00007 DS    0H                                               01S0342
@ER00007 LM    @14,@12,12(@13)                                  01S0342
         BR    @14                                              01S0342
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE DELSEG KEYWORD    *
**  AND ITS PARAMETERS. VALID PARAMETERS ARE DECIMAL NUMBERS FROM     *
**  1 TO 999.                                                         *
**                                                                    *
**********************************************************************/
*DELSEG:                                                        01S0343
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0343
DELSEG   STM   @14,@12,12(@13)                                  01S0343
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.
         ST    @14,FORE(,@13)          FORWARD POINTER.
         LR    @13,@14                 LINKAGE COMPLETE.
*        IF DELFLAG(ACTIVOP) = ON      /* IS KEYWORD VALID FOR       */
*          THEN                        /*  OPERATION?                */
         SLR   @10,@10                                          01S0345
         IC    @10,ACTIVOP(,BUFAD)                              01S0345
         MH    @10,@CH00054                                     01S0345
         ICM   @09,7,OPTABAD(BUFAD)                             01S0345
         ALR   @09,@10                                          01S0345
         AL    @09,@CF01034                                     01S0345
         TM    DELFLAG-2(@09),B'00100000'                       01S0345
         BNO   @RF00345                                         01S0345
*            IF DELSET = OFF           /* HAS KEYWORD BEEN USED OR   */
*              THEN                    /*  IS IT MUTUALLY EXCLUSIVE? */
         TM    DELSET(BUFAD),B'00100000'                        01S0346
         BNZ   @RF00346                                         01S0346
*                DO;                   /* THIS PATH FOR KEYWORD OK.  */
*                  DELSET = ON;        /* SET KEYWORD USED FLAG.     */
         OI    DELSET(BUFAD),B'00100000'                        01S0348
*                  DO                  /* CLEAR DELETE ARRAY.        */
*                   CNT = ONE          /*                            */
*                   TO DIM(DEL);       /*                            */
         LA    CNT,1                                            01S0349
@DL00349 DS    0H                                               01S0350
*                    DEL(CNT) = ZERO;  /* SET EACH ELEMENT TO ZERO.  */
         SLR   @10,@10                                          01S0350
         STC   @10,DEL+795(CNT,BUFAD)                           01S0350
*                  END;                /* ARRAY IS CLEARED.          */
         AH    CNT,@CH00061                                     01S0351
         CH    CNT,@CH00254                                     01S0351
         BNH   @DL00349                                         01S0351
*                  CALL FINDPARM;      /* SCAN PARAMETER.            */
         BAL   @14,FINDPARM                                     01S0352
*                      DO              /* START PARAMETER PROCESS.   */
*                       SCNT = ONE     /* FILL THE SCAN ARRAY WITH   */
*                       TO DIM(DEL)    /*  PARMS FROM THE LOC KEYWORD*/
*                       WHILE PARMNUM  /* CONTINUE THRU ALL PARMS.   */
*                            ^= ZERO;  /*                            */
         LA    @10,1                                            01S0353
         STH   @10,SCNT(,BUFAD)                                 01S0353
@DL00353 CLI   PARMNUM(BUFAD),0                                 01S0353
         BE    @DC00353                                         01S0353
*                          IF PARMSIZE => ONE                   01S0354
*                            THEN      /* CHECK FOR PARAMETER.       */
         CLC   PARMSIZE(2,BUFAD),@CH00061                       01S0354
         BL    @RF00354                                         01S0354
*                              IF DEL(FWORK) = ZERO             01S0355
*                                THEN  /* SET SEGMENT NUMBER IN ARRAY*/
         L     @10,FWORK(,BUFAD)                                01S0355
         LA    @09,796                                          01S0355
         ALR   @09,BUFAD                                        01S0355
         LA    @01,0(@10,@09)                                   01S0355
         BCTR  @01,0                                            01S0355
         SLR   @00,@00                                          01S0355
         IC    @00,DEL(,@01)                                    01S0355
         CH    @00,@CH00480                                     01S0355
         BNE   @RF00355                                         01S0355
*                                  DEL(FWORK) = ALBIT;          01S0356
         ALR   @09,@10                                          01S0356
         BCTR  @09,0                                            01S0356
         MVI   DEL(@09),X'FF'                                   01S0356
*                                ELSE  /* SEGMENT ALREADY SET.       */
*                                  INVPARM = ON;                01S0357
         B     @RC00355                                         01S0357
@RF00355 OI    INVPARM(BUFAD),B'00001000'                       01S0357
*                            ELSE      /* MISSING PARAMETER.         */
*                              INVPARM = ON;                    01S0358
         B     @RC00354                                         01S0358
@RF00354 OI    INVPARM(BUFAD),B'00001000'                       01S0358
*                        IF KWDCOMP = OFF                       01S0359
*                          THEN        /* GET ANOTHER PARAMETER.     */
@RC00354 TM    KWDCOMP(BUFAD),B'00000001'                       01S0359
         BNZ   @RF00359                                         01S0359
*                            CALL FINDPARM;                     01S0360
         BAL   @14,FINDPARM                                     01S0360
*                          ELSE        /* SET PARMNUM TO EXIT LOOP.  */
*                            PARMNUM = ZERO;                    01S0361
         B     @RC00359                                         01S0361
@RF00359 MVI   PARMNUM(BUFAD),X'00'                             01S0361
*                      END;            /* END PARAMETER PROCESS.     */
@RC00359 LA    @10,1                                            01S0362
         SLR   @09,@09                                          01S0362
         ICM   @09,3,SCNT(BUFAD)                                01S0362
         ALR   @10,@09                                          01S0362
         STH   @10,SCNT(,BUFAD)                                 01S0362
         CH    @10,@CH00254                                     01S0362
         BNH   @DL00353                                         01S0362
@DC00353 DS    0H                                               01S0363
*                END;                  /* END VALID KEYWORD PROCESS. */
*              ELSE                    /* KEYWORD PREVIOUSLY USED OR */
*                EXCLKWD = ON;         /*  MUTUALLY EXCLUSIVE.       */
         B     @RC00346                                         01S0364
@RF00346 OI    EXCLKWD(BUFAD),B'00010000'                       01S0364
*          ELSE                        /* KEYWORD NOT VALID FOR THIS */
*            INVKWD = ON;              /*  OPERATION.                */
         B     @RC00345                                         01S0365
@RF00345 OI    INVKWD(BUFAD),B'00100000'                        01S0365
*        GEN REFS(SAVE3)               /*                            */
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */
@RC00345 DS    0H                                               01S0366
         L   @13,SAVE3+BACK(,BUFAD)
*  END DELSEG;                         /* RETURN TO CALLER.          */
@EL00008 DS    0H                                               01S0367
@EF00008 DS    0H                                               01S0367
@ER00008 LM    @14,@12,12(@13)                                  01S0367
         BR    @14                                              01S0367
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE GCM KEYWORD       *
**  AND ITS PARAMETER. ONLY VALID PARAMETER IS A ONE TO FOUR          *
**  CHARACTER SUFFIX, WHICH WILL BE APPENDED TO A STANDARD PREFIX.    *
**                                                                    *
**********************************************************************/
*GCM:                                                           01S0368
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0368
GCM      STM   @14,@12,12(@13)                                  01S0368
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.
         ST    @14,FORE(,@13)          FORWARD POINTER.
         LR    @13,@14                 LINKAGE COMPLETE.
*        IF GCMFLAG(ACTIVOP) = ON      /* IS KEYWORD VALID FOR       */
*          THEN                        /*  OPERATION?                */
         SLR   @10,@10                                          01S0370
         IC    @10,ACTIVOP(,BUFAD)                              01S0370
         MH    @10,@CH00054                                     01S0370
         ICM   @09,7,OPTABAD(BUFAD)                             01S0370
         ALR   @09,@10                                          01S0370
         AL    @09,@CF01034                                     01S0370
         TM    GCMFLAG-2(@09),B'00001000'                       01S0370
         BNO   @RF00370                                         01S0370
*            IF GCMSET = OFF           /* HAS KEYWORD BEEN USED OR   */
*              THEN                    /*  IS IT MUTUALLY EXCLUSIVE? */
         TM    GCMSET(BUFAD),B'00001000'                        01S0371
         BNZ   @RF00371                                         01S0371
*                DO;                   /* THIS PATH FOR KEYWORD OK.  */
*                  GCMSET = ON;        /* SET KEYWORD USED FLAG.     */
         OI    GCMSET(BUFAD),B'00001000'                        01S0373
*                  CALL FINDPARM;      /* SCAN PARAMETER.            */
         BAL   @14,FINDPARM                                     01S0374
*                  IF PARMNUM ^= ZERO  /* CHECK FOR PRESENCE OF      */
*                    THEN              /*  PARAMETER.                */
         CLI   PARMNUM(BUFAD),0                                 01S0375
         BE    @RF00375                                         01S0375
*                      BSUFIX=CARDDATA(ONE:PARMSIZE);           01S0376
         MVI   BSUFIX+1(BUFAD),C' '                             01S0376
         MVC   BSUFIX+2(2,BUFAD),BSUFIX+1(BUFAD)                01S0376
         SLR   @10,@10                                          01S0376
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0376
         BCTR  @10,0                                            01S0376
         EX    @10,@SM01035                                     01S0376
*                    ELSE;             /*                            */
@RF00375 DS    0H                                               01S0378
*                END;                  /* END VALID KEYWORD PROCESS. */
*              ELSE                    /* KEYWORD PREVIOUSLY USED OR */
*                EXCLKWD = ON;         /*  MUTUALLY EXCLUSIVE.       */
         B     @RC00371                                         01S0379
@RF00371 OI    EXCLKWD(BUFAD),B'00010000'                       01S0379
*          ELSE                        /* KEYWORD NOT VALID FOR THIS */
*            INVKWD = ON;              /*  OPERATION.                */
         B     @RC00370                                         01S0380
@RF00370 OI    INVKWD(BUFAD),B'00100000'                        01S0380
*        GEN REFS(SAVE3)               /*                            */
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */
@RC00370 DS    0H                                               01S0381
         L   @13,SAVE3+BACK(,BUFAD)
*  END GCM;                            /* RETURN TO CALLER.          */
@EL00009 DS    0H                                               01S0382
@EF00009 DS    0H                                               01S0382
@ER00009 LM    @14,@12,12(@13)                                  01S0382
         BR    @14                                              01S0382
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE REF KEYWORD       *
**  AND ITS PARAMETERS. VALID PARAMETERS INCLUDE GROUPS OF TWO        *
**  POSSIBLE VALUES -                                                 *
**       1. A REFERNCE TO A GCM SEGMENT.                              *
**       2. AN EBCDIC ASSIGNMENT WHICH IS A TABLE REFERENCE.          *
**                                                                    *
**********************************************************************/
*REF:                                                           01S0383
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0383
REF      STM   @14,@12,12(@13)                                  01S0383
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.
         ST    @14,FORE(,@13)          FORWARD POINTER.
         LR    @13,@14                 LINKAGE COMPLETE.
*        IF REFFLAG(ACTIVOP) = ON      /* IS KEYWORD VALID FOR       */
*          THEN                        /*  OPERATION?                */
         SLR   @10,@10                                          01S0385
         IC    @10,ACTIVOP(,BUFAD)                              01S0385
         MH    @10,@CH00054                                     01S0385
         ICM   @09,7,OPTABAD(BUFAD)                             01S0385
         ALR   @09,@10                                          01S0385
         AL    @09,@CF01034                                     01S0385
         TM    REFFLAG-2(@09),B'00010000'                       01S0385
         BNO   @RF00385                                         01S0385
*            IF REFSET = OFF           /* HAS KEYWORD BEEN USED OR   */
*              THEN                    /*  IS IT MUTUALLY EXCLUSIVE? */
         TM    REFSET(BUFAD),B'00010000'                        01S0386
         BNZ   @RF00386                                         01S0386
*                DO;                   /* THIS PATH FOR KEYWORD OK.  */
*                  REFSET = ON;        /* SET KEYWORD USED FLAG.     */
         OI    REFSET(BUFAD),B'00010000'                        01S0388
*                  CALL FINDPARM;      /* SCAN PARAMETER.            */
         BAL   @14,FINDPARM                                     01S0389
*                      DO              /* START PARAMETER PROCESS.   */
*                       SCNT = ONE     /* FILL THE SCAN ARRAY WITH   */
*                       TO DIM(GRAFARY)/*  PARMS FROM THE LOC KEYWORD*/
*                       WHILE PARMNUM  /* CONTINUE THRU ALL PARMS.   */
*                            ^= ZERO;  /*                            */
         LA    @10,1                                            01S0390
         STH   @10,SCNT(,BUFAD)                                 01S0390
@DL00390 CLI   PARMNUM(BUFAD),0                                 01S0390
         BE    @DC00390                                         01S0390
*                        DO             /* */                   01S0391
*                          UNTIL PARMNUM < TWO;                 01S0391
@DL00391 DS    0H                                               01S0392
*                        IF PARMNUM = ONE                       01S0392
*                          THEN                                 01S0392
         CLI   PARMNUM(BUFAD),1                                 01S0392
         BNE   @RF00392                                         01S0392
*                    DO;                                        01S0393
*                        GRAFARY(SCNT) = ZERO;/* INITIALIZE NO ENTRY*/
         SLR   @10,@10                                          01S0394
         ICM   @10,3,SCNT(BUFAD)                                01S0394
         SLA   @10,2                                            01S0394
         LA    @09,796                                          01S0394
         ALR   @09,BUFAD                                        01S0394
         SLR   @15,@15                                          01S0394
         LA    @14,0(@10,@09)                                   01S0394
         AL    @14,@CF01040                                     01S0394
         ST    @15,GRAFARY(,@14)                                01S0394
*                            REFARRAY(SCNT) = FWORK;            01S0395
         L     @15,FWORK(,BUFAD)                                01S0395
         BCTR  @09,0                                            01S0395
         BCTR  @09,0                                            01S0395
         STH   @15,REFARRAY-2(@10,@09)                          01S0395
*                    END;                                       01S0396
*                          ELSE                                 01S0397
*                            DO;       /* ASSIGNMENT VALUE AND FLAG. */
         B     @RC00392                                         01S0397
@RF00392 DS    0H                                               01S0398
*                              ASNARRAY(SCNT) = CARDDATA(ONE);  01S0398
         SLR   @10,@10                                          01S0398
         ICM   @10,3,SCNT(BUFAD)                                01S0398
         SLA   @10,2                                            01S0398
         LA    @09,796                                          01S0398
         ALR   @09,BUFAD                                        01S0398
         ST    @10,@TF00001                                     01S0398
         ALR   @10,@09                                          01S0398
         AL    @10,@CF01040                                     01S0398
         MVC   ASNARRAY(1,@10),CARDDATA(BUFAD)                  01S0398
*                              ASNENTRY(SCNT) = ALBIT;          01S0399
         AL    @09,@TF00001                                     01S0399
         AL    @09,@CF01041                                     01S0399
         MVI   ASNENTRY-1(@09),X'FF'                            01S0399
*                            END;                               01S0400
*                        IF KWDCOMP = OFF                       01S0401
*                          THEN        /* GET ANOTHER PARAMETER.     */
@RC00392 TM    KWDCOMP(BUFAD),B'00000001'                       01S0401
         BNZ   @RF00401                                         01S0401
*                            DO;                                01S0402
*                              PARMNUM=PARMNUM+ONE;             01S0403
         LA    @10,1                                            01S0403
         SLR   @09,@09                                          01S0403
         IC    @09,PARMNUM(,BUFAD)                              01S0403
         ALR   @10,@09                                          01S0403
         STC   @10,PARMNUM(,BUFAD)                              01S0403
*                              CALL FINDPARM;                   01S0404
         BAL   @14,FINDPARM                                     01S0404
*                            END;                               01S0405
*                          ELSE        /* SET PARMNUM TO EXIT LOOP.  */
*                            PARMNUM = ZERO;                    01S0406
         B     @RC00401                                         01S0406
@RF00401 MVI   PARMNUM(BUFAD),X'00'                             01S0406
*                        END;                                   01S0407
@RC00401 DS    0H                                               01S0407
@DE00391 CLI   PARMNUM(BUFAD),2                                 01S0407
         BNL   @DL00391                                         01S0407
*                      END;            /* END PARAMETER PROCESS.     */
         LA    @10,1                                            01S0408
         SLR   @09,@09                                          01S0408
         ICM   @09,3,SCNT(BUFAD)                                01S0408
         ALR   @10,@09                                          01S0408
         STH   @10,SCNT(,BUFAD)                                 01S0408
         CH    @10,@CH00247                                     01S0408
         BNH   @DL00390                                         01S0408
@DC00390 DS    0H                                               01S0409
*                END;                  /* END VALID KEYWORD PROCESS. */
*              ELSE                    /* KEYWORD PREVIOUSLY USED OR */
*                EXCLKWD = ON;         /*  MUTUALLY EXCLUSIVE.       */
         B     @RC00386                                         01S0410
@RF00386 OI    EXCLKWD(BUFAD),B'00010000'                       01S0410
*          ELSE                        /* KEYWORD NOT VALID FOR THIS */
*            INVKWD = ON;              /*  OPERATION.                */
         B     @RC00385                                         01S0411
@RF00385 OI    INVKWD(BUFAD),B'00100000'                        01S0411
*        GEN REFS(SAVE3)               /*                            */
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */
@RC00385 DS    0H                                               01S0412
         L   @13,SAVE3+BACK(,BUFAD)
*  END REF;                            /* RETURN TO CALLER.          */
@EL00010 DS    0H                                               01S0413
@EF00010 DS    0H                                               01S0413
@ER00010 LM    @14,@12,12(@13)                                  01S0413
         BR    @14                                              01S0413
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE ASSIGN KEYWORD    *
**  AND ITS PARAMETERS. VALID PARAMETERS INCLUDE GROUPS OF TWO        *
**  POSSIBLE VALUES -                                                 *
**       1. AN EBCDIC ASSIGNMENT WHICH IS A TABLE REFERENCE.          *
**       2. A CHARACTER PITCH,DEFAULT IS 10.                          *
**                                                                    *
**********************************************************************/
*ASSIGN:                                                        01S0414
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0414
ASSIGN   STM   @14,@12,12(@13)                                  01S0414
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.
         ST    @14,FORE(,@13)          FORWARD POINTER.
         LR    @13,@14                 LINKAGE COMPLETE.
*        IF ASGNFLAG(ACTIVOP) = ON     /* IS KEYWORD VALID FOR       */
*          THEN                        /*  OPERATION?                */
         SLR   @10,@10                                          01S0416
         IC    @10,ACTIVOP(,BUFAD)                              01S0416
         MH    @10,@CH00054                                     01S0416
         ICM   @09,7,OPTABAD(BUFAD)                             01S0416
         ALR   @09,@10                                          01S0416
         AL    @09,@CF01034                                     01S0416
         TM    ASGNFLAG-2(@09),B'01000000'                      01S0416
         BNO   @RF00416                                         01S0416
*            IF ASGNSET = OFF          /* HAS KEYWORD BEEN USED OR   */
*              THEN                    /*  IS IT MUTUALLY EXCLUSIVE? */
         TM    ASGNSET(BUFAD),B'00000100'                       01S0417
         BNZ   @RF00417                                         01S0417
*                DO;                   /* THIS PATH FOR KEYWORD OK.  */
*                  ASGNSET = ON;       /* SET KEYWORD USED FLAG.     */
         OI    ASGNSET(BUFAD),B'00000100'                       01S0419
*                  CALL FINDPARM;      /* SCAN PARAMETER.            */
         BAL   @14,FINDPARM                                     01S0420
*                      DO              /* START PARAMETER PROCESS.   */
*                       WHILE PARMNUM  /* CONTINUE THRU ALL PARMS.   */
*                            ^= ZERO;  /*                            */
         B     @DE00421                                         01S0421
@DL00421 DS    0H                                               01S0422
*                        IF PARMNUM = ONE                       01S0422
*                          THEN        /* SET ASSIGNMENT.            */
         CLI   PARMNUM(BUFAD),1                                 01S0422
         BNE   @RF00422                                         01S0422
*                            ASGNMENT = CARDDATA(ONE);          01S0423
         MVC   ASGNMENT(1,BUFAD),CARDDATA(BUFAD)                01S0423
*                          ELSE        /* SET PITCH IF VALID.        */
*                            IF FWORK = TEN    /*                    */
*                             × FWORK = TWELV  /*VERIFY CORRECT PITCH*/
*                             × FWORK = FIFTN  /*  SPECIFICATION.    */
*                              THEN            /*                    */
         B     @RC00422                                         01S0424
@RF00422 L     @10,FWORK(,BUFAD)                                01S0424
         CH    @10,@CH00344                                     01S0424
         BE    @RT00424                                         01S0424
         CH    @10,@CH00033                                     01S0424
         BE    @RT00424                                         01S0424
         CH    @10,@CH00157                                     01S0424
         BNE   @RF00424                                         01S0424
@RT00424 DS    0H                                               01S0425
*                                PITCH = FWORK;/* SET PITCH.         */
         MVC   PITCH(1,BUFAD),FWORK+3(BUFAD)                    01S0425
*                              ELSE            /* SPECIFICATION      */
*                                INVPARM = ON; /* IS INVALID.        */
         B     @RC00424                                         01S0426
@RF00424 OI    INVPARM(BUFAD),B'00001000'                       01S0426
*                        IF KWDCOMP = OFF                       01S0427
*                          THEN        /* GET ANOTHER PARAMETER.     */
@RC00424 DS    0H                                               01S0427
@RC00422 TM    KWDCOMP(BUFAD),B'00000001'                       01S0427
         BNZ   @RF00427                                         01S0427
*                            DO;                                01S0428
*                              PARMNUM=PARMNUM+ONE;             01S0429
         LA    @10,1                                            01S0429
         SLR   @09,@09                                          01S0429
         IC    @09,PARMNUM(,BUFAD)                              01S0429
         ALR   @10,@09                                          01S0429
         STC   @10,PARMNUM(,BUFAD)                              01S0429
*                              CALL FINDPARM;                   01S0430
         BAL   @14,FINDPARM                                     01S0430
*                            END;                               01S0431
*                          ELSE        /* SET PARMNUM TO EXIT LOOP.  */
*                            PARMNUM = ZERO;                    01S0432
         B     @RC00427                                         01S0432
@RF00427 MVI   PARMNUM(BUFAD),X'00'                             01S0432
*                      END;            /* END PARAMETER PROCESS.     */
@RC00427 DS    0H                                               01S0433
@DE00421 CLI   PARMNUM(BUFAD),0                                 01S0433
         BNE   @DL00421                                         01S0433
*                END;                  /* END VALID KEYWORD PROCESS. */
*              ELSE                    /* KEYWORD PREVIOUSLY USED OR */
*                EXCLKWD = ON;         /*  MUTUALLY EXCLUSIVE.       */
         B     @RC00417                                         01S0435
@RF00417 OI    EXCLKWD(BUFAD),B'00010000'                       01S0435
*          ELSE                        /* KEYWORD NOT VALID FOR THIS */
*            INVKWD = ON;              /*  OPERATION.                */
         B     @RC00416                                         01S0436
@RF00416 OI    INVKWD(BUFAD),B'00100000'                        01S0436
*        GEN REFS(SAVE3)               /*                            */
*         (L   @13,SAVE3+BACK(,BUFAD));/* RESTORE BACKWARD POINTER.  */
@RC00416 DS    0H                                               01S0437
         L   @13,SAVE3+BACK(,BUFAD)
*  END ASSIGN;                         /* RETURN TO CALLER.          */
@EL00011 DS    0H                                               01S0438
@EF00011 DS    0H                                               01S0438
@ER00011 LM    @14,@12,12(@13)                                  01S0438
         BR    @14                                              01S0438
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE GCMLIST KEYWORD   *
**  AND ITS PARAMETERS. THE VALUES WILL BE PLACED IN A TABLE FOR      *
**  FUTURE USE BY THE CALLING OPERATION.                              *
**                                                                    *
**********************************************************************/
*GCMLIST:                                                       01S0439
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0439
GCMLIST  STM   @14,@12,12(@13)                                  01S0439
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.
         ST    @14,FORE(,@13)          FORWARD POINTER.
         LR    @13,@14                 LINKAGE COMPLETE.
*        IF GCMLFLAG(ACTIVOP) = ON     /* IS LPI VALID THIS OPERATION*/
*          THEN                        /* YES,                       */
         SLR   @10,@10                                          01S0441
         IC    @10,ACTIVOP(,BUFAD)                              01S0441
         MH    @10,@CH00054                                     01S0441
         ICM   @09,7,OPTABAD(BUFAD)                             01S0441
         ALR   @09,@10                                          01S0441
         AL    @09,@CF01034                                     01S0441
         TM    GCMLFLAG-2(@09),B'00000100'                      01S0441
         BNO   @RF00441                                         01S0441
*            IF GCMLSET = OFF          /* HAS LPI BEEN USED PREVIOUS?*/
*              THEN                    /* NO,                        */
         TM    GCMLSET(BUFAD),B'00000100'                       01S0442
         BNZ   @RF00442                                         01S0442
*                DO;                   /* START ANALYSIS             */
*                  GCMLSET = ON;       /* INDICATE LPI KEYWORD USED. */
         OI    GCMLSET(BUFAD),B'00000100'                       01S0444
*                  GRFMODS = BLAN;     /* BLANK GRAFMOD NAMES.       */
         MVI   GRFMODS+1(BUFAD),C' '                            01S0445
         MVC   GRFMODS+2(14,BUFAD),GRFMODS+1(BUFAD)             01S0445
         MVI   GRFMODS(BUFAD),C' '                              01S0445
*                  CALL FINDPARM;      /* SCAN CARD                  */
         BAL   @14,FINDPARM                                     01S0446
*                      DO              /* START PARAMETER SCAN.      */
*                       GCNT = ONE     /* PUT GCM NAMES IN TEMP AREA.*/
*                       TO DIM(GRAFMODN)  /*                         */
*                       WHILE PARMNUM ^= ZERO;    /*                 */
         LA    GCNT,1                                           01S0447
@DL00447 CLI   PARMNUM(BUFAD),0                                 01S0447
         BE    @DC00447                                         01S0447
*                        IF PARMSIZE ^= ZERO /* CHECK FOR PARAMETER. */
*                          THEN                                 01S0448
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0448
         BZ    @RF00448                                         01S0448
*                              IF PARMSIZE = SIX                01S0449
*                               & CARDDATA(ONE:PARMSIZE) = DELETE
*                               & GCNT = ONE                    01S0449
*                                THEN  /* 1ST PARM CAN BE DELETE.    */
         SLR   @10,@10                                          01S0449
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0449
         CH    @10,@CH00187                                     01S0449
         BNE   @RF00449                                         01S0449
         BCTR  @10,0                                            01S0449
         EX    @10,@SC01042                                     01S0449
         BNE   @RF00449                                         01S0449
         CH    GCNT,@CH00061                                    01S0449
         BNE   @RF00449                                         01S0449
*                                  PARMNUM = TWO;/* ALLOW NO MORE.   */
         MVI   PARMNUM(BUFAD),X'02'                             01S0450
*                                ELSE  /* NAMES ARE ONLY FOUR CHARS. */
*                                  IF PARMSIZE > FOUR           01S0451
*                                    THEN /* BAD PARM, SKIP IT.      */
         B     @RC00449                                         01S0451
@RF00449 CLC   PARMSIZE(2,BUFAD),@CH00051                       01S0451
         BNH   @RF00451                                         01S0451
*                                      INVPARM = ON;            01S0452
         OI    INVPARM(BUFAD),B'00001000'                       01S0452
*                                    ELSE /* GOOD PARM, SAVE IT.     */
*                                      GRAFMODN(GCNT)           01S0453
*                                       =CARDDATA(ONE:PARMSIZE);
         B     @RC00451                                         01S0453
@RF00451 LR    @10,GCNT                                         01S0453
         SLA   @10,2                                            01S0453
         ALR   @10,BUFAD                                        01S0453
         MVI   GRAFMODN-3(@10),C' '                             01S0453
         MVC   GRAFMODN-2(2,@10),GRAFMODN-3(@10)                01S0453
         SLR   @09,@09                                          01S0453
         ICM   @09,3,PARMSIZE(BUFAD)                            01S0453
         BCTR  @09,0                                            01S0453
         EX    @09,@SM01044                                     01S0453
*                                ELSE  /* SHOULD NOT HAVE 0 PARMSIZE */
*                                  INVPARM = ON;                01S0454
         B     @RC00448                                         01S0454
@RF00448 OI    INVPARM(BUFAD),B'00001000'                       01S0454
*                              IF KWDCOMP = OFF                 01S0455
*                                THEN  /* MORE PARMS FOLLOW.         */
@RC00448 TM    KWDCOMP(BUFAD),B'00000001'                       01S0455
         BNZ   @RF00455                                         01S0455
*                                  CALL FINDPARM;               01S0456
         BAL   @14,FINDPARM                                     01S0456
*                                ELSE  /* END PARAMETER FETCH.       */
*                                  PARMNUM = ZERO;              01S0457
         B     @RC00455                                         01S0457
@RF00455 MVI   PARMNUM(BUFAD),X'00'                             01S0457
*                            END;      /* END PARAMETER FETCH LOOP.  */
@RC00455 AH    GCNT,@CH00061                                    01S0458
         CH    GCNT,@CH00051                                    01S0458
         BNH   @DL00447                                         01S0458
@DC00447 DS    0H                                               01S0459
*                END;                  /* END PARAMETER ANALYSIS.    */
*              ELSE                    /* KEYWORD HAS BEEN           */
*                EXCLKWD = ON;         /*  USED BEFORE.              */
         B     @RC00442                                         01S0460
@RF00442 OI    EXCLKWD(BUFAD),B'00010000'                       01S0460
*          ELSE                        /* KEYWORD NOT VALID FOR      */
*            INVKWD = ON;              /*  THIS OPERATION.           */
         B     @RC00441                                         01S0461
@RF00441 OI    INVKWD(BUFAD),B'00100000'                        01S0461
*        GEN REFS(SAVE3)               /*                            */
*         (L  @13,SAVE3+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER.  */
@RC00441 DS    0H                                               01S0462
         L  @13,SAVE3+BACK(,BUFAD)
*   END GCMLIST;                       /* RETURN TO CALLER.          */
@EL00012 DS    0H                                               01S0463
@EF00012 DS    0H                                               01S0463
@ER00012 LM    @14,@12,12(@13)                                  01S0463
         BR    @14                                              01S0463
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE CGMID KEYWORD AND *
**  ITS PARAMETERS. THE VALUES WILL BE PLACED IN A TABLE FOR FUTURE   *
**  USE BY THE CALLING OPERATION.                                     *
**                                                                    *
**********************************************************************/
*CGMID:                                                         01S0464
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0464
CGMID    STM   @14,@12,12(@13)                                  01S0464
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.
         ST    @14,FORE(,@13)          FORWARD POINTER.
         LR    @13,@14                 LINKAGE COMPLETE.
*        IF CGMIDFLG(ACTIVOP) = ON     /* IS KWD VALID THIS OPERATION*/
*          THEN                        /* YES,                       */
         SLR   @10,@10                                          01S0466
         IC    @10,ACTIVOP(,BUFAD)                              01S0466
         MH    @10,@CH00054                                     01S0466
         ICM   @09,7,OPTABAD(BUFAD)                             01S0466
         ALR   @09,@10                                          01S0466
         AL    @09,@CF01034                                     01S0466
         TM    CGMIDFLG-2(@09),B'00000001'                      01S0466
         BNO   @RF00466                                         01S0466
*            IF CGMIDSET = OFF         /* HAS KWD BEEN USED PREVIOUS?*/
*              THEN                    /* NO,                        */
         TM    CGMIDSET(BUFAD),B'00001000'                      01S0467
         BNZ   @RF00467                                         01S0467
*                DO;                   /* START ANALYSIS             */
*                  CGMIDSET = ON;      /* INDICATE KEYWORD USED.     */
         OI    CGMIDSET(BUFAD),B'00001000'                      01S0469
*                                      /* ZERO CGMID AREA.           */
*                  CGMIDALL = CGMIDALL && CGMIDALL;             01S0470
         XC    CGMIDALL(8,BUFAD),CGMIDALL(BUFAD)                01S0470
*                  CALL FINDPARM;      /* SCAN CARD                  */
         BAL   @14,FINDPARM                                     01S0471
*                      DO              /* START PARAMETER SCAN.      */
*                       GCNT = ONE     /* FILL CGMID LIST.           */
*                       TO DIM(CGMIDX) /*                            */
*                       WHILE PARMNUM ^= ZERO;    /*                 */
         LA    GCNT,1                                           01S0472
@DL00472 CLI   PARMNUM(BUFAD),0                                 01S0472
         BE    @DC00472                                         01S0472
*                        IF PARMSIZE ^= ZERO /* CHECK FOR PARAMETER. */
*                         & CARDDATA(ONE) ^= ZERO               01S0473
*                          THEN        /* GOOD PARAMETER.            */
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0473
         BZ    @RF00473                                         01S0473
         SLR   @10,@10                                          01S0473
         IC    @10,CARDDATA(,BUFAD)                             01S0473
         LTR   @10,@10                                          01S0473
         BZ    @RF00473                                         01S0473
*                            DO                   /*                 */
*                              CGMIDN(GCNT)       /* SET CGMID.      */
*                               =CARDDATA(ONE);   /*                 */
         LR    @09,GCNT                                         01S0474
         ALR   @09,@09                                          01S0474
         STC   @10,CGMIDN-2(@09,BUFAD)                          01S0474
*                              CGMIDNO(GCNT)      /* SET CGMID ORDER.*/
*                               =GCNT-ONE;        /*                 */
         LR    @10,GCNT                                         01S0475
         ALR   @10,@10                                          01S0475
         LR    @09,GCNT                                         01S0475
         BCTR  @09,0                                            01S0475
         STC   @09,CGMIDNO-2(@10,BUFAD)                         01S0475
*                              IF KWDCOMP = OFF   /* CHECK KEYWORD   */
*                                THEN             /*  COMPLETE.      */
         TM    KWDCOMP(BUFAD),B'00000001'                       01S0476
         BNZ   @RF00476                                         01S0476
*                                  CALL FINDPARM; /* GET ANOTHER.    */
         BAL   @14,FINDPARM                                     01S0477
*                                ELSE             /*                 */
*                                  PARMNUM = ZERO;/* END PARM PROCESS*/
         B     @RC00476                                         01S0478
@RF00476 MVI   PARMNUM(BUFAD),X'00'                             01S0478
*                            END;                               01S0479
@RC00476 DS    0H                                               01S0480
*                      END;            /*                            */
@RF00473 AH    GCNT,@CH00061                                    01S0480
         CH    GCNT,@CH00051                                    01S0480
         BNH   @DL00472                                         01S0480
@DC00472 DS    0H                                               01S0481
*                END;                  /* END PARAMETER ANALYSIS.    */
*              ELSE                    /* KEYWORD HAS BEEN           */
*                EXCLKWD = ON;         /*  USED BEFORE.              */
         B     @RC00467                                         01S0482
@RF00467 OI    EXCLKWD(BUFAD),B'00010000'                       01S0482
*          ELSE                        /* KEYWORD NOT VALID FOR      */
*            INVKWD = ON;              /*  THIS OPERATION.           */
         B     @RC00466                                         01S0483
@RF00466 OI    INVKWD(BUFAD),B'00100000'                        01S0483
*        GEN REFS(SAVE3)               /*                            */
*         (L  @13,SAVE3+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER.  */
@RC00466 DS    0H                                               01S0484
         L  @13,SAVE3+BACK(,BUFAD)
*  END CGMID;                          /* RETURN TO CALLER.          */
@EL00013 DS    0H                                               01S0485
@EF00013 DS    0H                                               01S0485
@ER00013 LM    @14,@12,12(@13)                                  01S0485
         BR    @14                                              01S0485
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS ROUTINE WILL DETERMINE THE VALIDITY OF THE LPI KEYWORD AND   *
**  ITS PARAMETERS. THE VALUES WILL BE PLACED IN A TABLE FOR FUTURE   *
**  USE BY THE CALLING OPERATION.                                     *
**                                                                    *
**********************************************************************/
*LPI:                                                           01S0486
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0486
LPI      STM   @14,@12,12(@13)                                  01S0486
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.
         ST    @14,FORE(,@13)          FORWARD POINTER.
         LR    @13,@14                 LINKAGE COMPLETE.
*        IF LPIFLAG(ACTIVOP) = ON      /* IS LPI VALID THIS OPERATION*/
*          THEN                        /* YES,                       */
         SLR   @10,@10                                          01S0488
         IC    @10,ACTIVOP(,BUFAD)                              01S0488
         MH    @10,@CH00054                                     01S0488
         ICM   @09,7,OPTABAD(BUFAD)                             01S0488
         ALR   @09,@10                                          01S0488
         AL    @09,@CF01039                                     01S0488
         TM    LPIFLAG-1(@09),B'01000000'                       01S0488
         BNO   @RF00488                                         01S0488
*            IF LPISET = OFF           /* HAS LPI BEEN USED PREVIOUS?*/
*              THEN                    /* NO,                        */
         TM    LPISET(BUFAD),B'00010000'                        01S0489
         BNZ   @RF00489                                         01S0489
*                DO;                   /* START ANALYSIS             */
*                  LPISET = ON;        /* INDICATE LPI KEYWORD USED. */
         OI    LPISET(BUFAD),B'00010000'                        01S0491
*                  CALL FINDPARM;      /* SCAN CARD                  */
         BAL   @14,FINDPARM                                     01S0492
*                      DO              /* START PARAMETER SCAN.      */
*                       SCNT = ONE                /* INIT SCAN ARRAY */
*                       TO DIM(SCANARY)           /*  COUNTER.       */
*                       WHILE PARMNUM ^= ZERO;    /*                 */
         LA    @10,1                                            01S0493
         STH   @10,SCNT(,BUFAD)                                 01S0493
@DL00493 CLI   PARMNUM(BUFAD),0                                 01S0493
         BE    @DC00493                                         01S0493
*                        SCANARY(SCNT,TWO)=ZERO;                01S0494
         SLR   @10,@10                                          01S0494
         ICM   @10,3,SCNT(BUFAD)                                01S0494
         SLA   @10,2                                            01S0494
         SLR   @09,@09                                          01S0494
         STC   @09,SCANARY-3(@10,BUFAD)                         01S0494
*                        IF PARMSIZE ^= ZERO /* CHECK FOR PARAMETER. */
*                          THEN        /* HANDLE THIS PARAMETER.     */
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0495
         BZ    @RF00495                                         01S0495
*                            DO                     /*               */
*                             UNTIL PARMNUM=<ONE;   /*EXIT AT GRP END*/
@DL00496 DS    0H                                               01S0497
*                              SCANARY(SCNT,PARMNUM)/*               */
*                               =FWORK;             /* SET LPI.      */
         SLR   @10,@10                                          01S0497
         ICM   @10,3,SCNT(BUFAD)                                01S0497
         SLA   @10,2                                            01S0497
         SLR   @09,@09                                          01S0497
         IC    @09,PARMNUM(,BUFAD)                              01S0497
         ALR   @10,@09                                          01S0497
         L     @15,FWORK(,BUFAD)                                01S0497
         STC   @15,SCANARY-5(@10,BUFAD)                         01S0497
*                              PARMNUM=PARMNUM+ONE; /* INCR PARM NO. */
         AH    @09,@CH00061                                     01S0498
         STC   @09,PARMNUM(,BUFAD)                              01S0498
*                              IF KWDCOMP = OFF     /* CHECK KEYWORD */
*                                THEN               /*  COMPLETE.    */
         TM    KWDCOMP(BUFAD),B'00000001'                       01S0499
         BNZ   @RF00499                                         01S0499
*                                  CALL FINDPARM;   /* GET ANOTHER.  */
         BAL   @14,FINDPARM                                     01S0500
*                                ELSE               /* END           */
*                                  PARMNUM = ZERO;  /*  PARM PROCESS.*/
         B     @RC00499                                         01S0501
@RF00499 MVI   PARMNUM(BUFAD),X'00'                             01S0501
*                            END;      /*                            */
@RC00499 DS    0H                                               01S0502
@DE00496 CLI   PARMNUM(BUFAD),1                                 01S0502
         BH    @DL00496                                         01S0502
*                      END;            /*                            */
@RF00495 LA    @10,1                                            01S0503
         SLR   @09,@09                                          01S0503
         ICM   @09,3,SCNT(BUFAD)                                01S0503
         ALR   @10,@09                                          01S0503
         STH   @10,SCNT(,BUFAD)                                 01S0503
         CH    @10,@CH00220                                     01S0503
         BNH   @DL00493                                         01S0503
@DC00493 DS    0H                                               01S0504
*                END;                  /* END PARAMETER ANALYSIS.    */
*              ELSE                    /* KEYWORD HAS BEEN           */
*                EXCLKWD = ON;         /*  USED BEFORE.              */
         B     @RC00489                                         01S0505
@RF00489 OI    EXCLKWD(BUFAD),B'00010000'                       01S0505
*          ELSE                        /* KEYWORD NOT VALID FOR      */
*            INVKWD = ON;              /*  THIS OPERATION.           */
         B     @RC00488                                         01S0506
@RF00488 OI    INVKWD(BUFAD),B'00100000'                        01S0506
*        GEN REFS(SAVE3)               /*                            */
*         (L  @13,SAVE3+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER.  */
@RC00488 DS    0H                                               01S0507
         L  @13,SAVE3+BACK(,BUFAD)
*   END LPI;                           /* RETURN TO CALLER.          */
@EL00014 DS    0H                                               01S0508
@EF00014 DS    0H                                               01S0508
@ER00014 LM    @14,@12,12(@13)                                  01S0508
         BR    @14                                              01S0508
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS ROUTINE WILL ACCEPT PARAMETERS FOR THE TEXT KEYWORD. VALID   *
**  PARAMETERS ARE A DUPLICATION FACTOR OF 0 - 204 FOLLOWED BY THE    *
**  TEXT STRING TYPE, X OR C, AND THE TEXT STRING                     *
**********************************************************************/
*TEXT:                                                          01S0509
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0509
TEXT     STM   @14,@12,12(@13)                                  01S0509
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.
         ST    @14,FORE(,@13)          FORWARD POINTER.
         LR    @13,@14                 LINKAGE COMPLETE.
*        IF TEXTFLAG(ACTIVOP) = ON     /* CHECK FOR VALID KEYWORD    */
*          THEN                        /*  THIS OPERATION.           */
         SLR   @10,@10                                          01S0511
         IC    @10,ACTIVOP(,BUFAD)                              01S0511
         MH    @10,@CH00054                                     01S0511
         ICM   @09,7,OPTABAD(BUFAD)                             01S0511
         ALR   @09,@10                                          01S0511
         AL    @09,@CF01039                                     01S0511
         TM    TEXTFLAG-1(@09),B'00000001'                      01S0511
         BNO   @RF00511                                         01S0511
*            IF TEXTSET = OFF          /* CHECK FOR DUPLICATE        */
*              THEN                    /*  KEYWORD THIS OPERATION    */
         TM    TEXTSET(BUFAD),B'00000010'                       01S0512
         BNZ   @RF00512                                         01S0512
*                DO;                   /* GOOD KEYWORD, PROCESS.     */
*                  TEXTSET = ON;       /* INDICATE KEYWORD USED.     */
         OI    TEXTSET(BUFAD),B'00000010'                       01S0514
*                  RESPECIFY           /*                            */
*                   (BUFFPTR) RESTRICTED;                       01S0515
*                  BUFFPTR = ADDR(TEXTD);/* INITIALIZE TEXT AREA ADDR*/
         LA    BUFFPTR,TEXTD+796(,BUFAD)                        01S0516
*                  CALL FINDPARM;      /* GET A PARAMETER.           */
         BAL   @14,FINDPARM                                     01S0517
*                  DO                  /* START PARAMETER PROCESS.   */
*                   WHILE PARMNUM ^= ZERO;                      01S0518
         B     @DE00518                                         01S0518
@DL00518 DS    0H                                               01S0519
*                    IF PARMNUM = ONE  /* CHECK FOR PRESENCE OF      */
*                      THEN            /*  PARAMETER ONE.            */
         CLI   PARMNUM(BUFAD),1                                 01S0519
         BNE   @RF00519                                         01S0519
*                        DO;           /* GOT ONE                    */
*                          FIELDT      /* SAVE TEXT STRING TYPE.     */
*                           = CARDDATA(PARMSIZE);               01S0521
         SLR   @10,@10                                          01S0521
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0521
         SLR   @09,@09                                          01S0521
         IC    @09,CARDDATA-1(@10,BUFAD)                        01S0521
         STC   @09,FIELDT(,BUFAD)                               01S0521
*                          IF PARMSIZE > ONE                    01S0522
*                            THEN      /* CHECK FOR PRESENCE OF      */
         CH    @10,@CH00061                                     01S0522
         BNH   @RF00522                                         01S0522
*                              DO;     /*  DUPLICATION FACTOR.       */
*                                PARMSIZE = PARMSIZE - ONE;     01S0524
         BCTR  @10,0                                            01S0524
         STH   @10,PARMSIZE(,BUFAD)                             01S0524
*                                CALL  /* CONVERT DUP FACTOR.        */
*                                  CONVERT;                     01S0525
         BAL   @14,CONVERT                                      01S0525
*                                IF INVPARM = OFF /* CHECK FOR ERROR */
*                                  THEN /* SAVE DUPLICATION FACTOR.  */
         TM    INVPARM(BUFAD),B'00001000'                       01S0526
         BNZ   @RF00526                                         01S0526
*                                    FIELDL = FWORK;            01S0527
         MVC   FIELDL(1,BUFAD),FWORK+3(BUFAD)                   01S0527
*                                  ELSE /* SET DUP FACTOR TO ONE.    */
*                                    FIELDL = ONE;              01S0528
         B     @RC00526                                         01S0528
@RF00526 MVI   FIELDL(BUFAD),X'01'                              01S0528
*                              END;    /*                            */
*                            ELSE      /* SET DUP FACTOR TO ONE.     */
*                              FIELDL = ONE;                    01S0530
         B     @RC00522                                         01S0530
@RF00522 MVI   FIELDL(BUFAD),X'01'                              01S0530
*/*********************************************************************
**                                                                    *
**  THIS SEGMENT HANDLES THE TEXT DATA PARAMETER OF THE TEXT KEYWORD. *
**                                                                    *
**********************************************************************/
*        DO;                           /* PLACE TEXT IN SCAN BUFFER. */
@RC00522 DS    0H                                               02S0532
*/*********************************************************************
**                                                                    *
**  THIS SEGMENT SCANS THE DATA PORTION OF THE TEXT KEYWORD. DATA     *
**  DELIMITERS ARE SINGLE QUOTE MARKS. DOUBLE QUOTES ARE REDUCED TO   *
**  A SINGLE QUOTE AND NOT USED AS A DELIMITER.                       *
**                                                                    *
**********************************************************************/
*        LASTQ = OFF;                  /* RESET LAST QUOTE INDICATOR.*/
         NI    LASTQ(BUFAD),B'11111110'                         03S0532
*        PARMNUM = TWO;                /* INDICATE SECOND PARAMETER  */
         MVI   PARMNUM(BUFAD),X'02'                             03S0533
*        PARMSIZE = ZERO;              /*  AND ZERO SIZE             */
         SLR   @10,@10                                          03S0534
         STH   @10,PARMSIZE(,BUFAD)                             03S0534
*        IF COL(ONE) = QUOTE           /* FIRST COLUMN NEEDS A       */
*          THEN                        /*  QUOTATION MARK.           */
         ICM   @10,7,CC(BUFAD)                                  03S0535
         CLI   COL(@10),C''''                                   03S0535
         BNE   @RF00535                                         03S0535
*            DO;                       /*                            */
*              PRECOL = NOQUOTE;       /* PRESET MULTI QUOTE IND.    */
         MVI   PRECOL(BUFAD),X'FF'                              03S0537
*              DO                      /* START TEXT SCAN            */
*               UNTIL LASTQ = ON       /* GO TO SINGLE QUOTE         */
*                   × PARMSIZE => LENGTH(CARDDATA)              03S0538
*                   × (CONTINUE = OFF  /* STOP IF STATEMENT EXCEEDED.*/
*                    & CC => CARDEND); /*  OR BUFFER FULL.           */
@DL00538 DS    0H                                               03S0539
*                CC = CC + ONE;        /* INCR CARD COLUMN POINTER.  */
         LA    @10,1                                            03S0539
         SLR   @09,@09                                          03S0539
         ICM   @09,7,CC(BUFAD)                                  03S0539
         ALR   @10,@09                                          03S0539
         STCM  @10,7,CC(BUFAD)                                  03S0539
*                IF CONTINUE = ON      /* CHECK FOR NEED OF          */
*                 & CC = CARDEND       /*  CONTINUATION CARD.        */
*                  THEN                /*                            */
         TM    CONTINUE(BUFAD),B'00001000'                      03S0540
         BNO   @RF00540                                         03S0540
         C     @10,CARDEND(,BUFAD)                              03S0540
         BNE   @RF00540                                         03S0540
*                    CALL GETCARDN;    /* GET ANOTHER CARD.          */
         BAL   @14,GETCARDN                                     03S0541
*                  ELSE;               /*                            */
@RF00540 DS    0H                                               03S0543
*                IF PRECOL = QUOTE     /* CHECK FOR PREVIOUS QUOTE.  */
*                  THEN                /* CHECK FOR DOUBLE QUOTE.    */
         CLI   PRECOL(BUFAD),C''''                              03S0543
         BNE   @RF00543                                         03S0543
*                    IF COL(ONE) ^= QUOTE                       03S0544
*                      THEN            /* SINGLE QUOTE.              */
         ICM   @10,7,CC(BUFAD)                                  03S0544
         CLI   COL(@10),C''''                                   03S0544
         BE    @RF00544                                         03S0544
*                        LASTQ = ON;   /* END OF TEXT STRING.        */
         OI    LASTQ(BUFAD),B'00000001'                         03S0545
*                      ELSE            /* DOUBLE QUOTE, RESET IND.   */
*                        PRECOL = NOQUOTE;                      03S0546
         B     @RC00544                                         03S0546
@RF00544 MVI   PRECOL(BUFAD),X'FF'                              03S0546
*                  ELSE                /* NO PREVIOUS QUOTE.         */
*                    DO;               /*                            */
         B     @RC00543                                         03S0547
@RF00543 DS    0H                                               03S0548
*                      PARMSIZE = PARMSIZE + ONE;/* INCR FIELD SIZE. */
         LA    @10,1                                            03S0548
         SLR   @09,@09                                          03S0548
         ICM   @09,3,PARMSIZE(BUFAD)                            03S0548
         ALR   @10,@09                                          03S0548
         STH   @10,PARMSIZE(,BUFAD)                             03S0548
*                      IF COL(ONE) = ALBIT /* (FF) TEST.             */
*                       & FIELDT = CHARC   /* CHARACTER FORM ONLY.   */
*                        THEN              /*                        */
         ICM   @10,7,CC(BUFAD)                                  03S0549
         CLI   COL(@10),X'FF'                                   03S0549
         BNE   @RF00549                                         03S0549
         CLI   FIELDT(BUFAD),195                                03S0549
         BNE   @RF00549                                         03S0549
*                          HEXERR = ON;    /* REMEMBER ERROR.        */
         OI    HEXERR(BUFAD),B'00010000'                        03S0550
*                        ELSE              /*                        */
*                          SCANBUF = COL(ONE);/* SET CHAR IN BUFF.   */
         B     @RC00549                                         03S0551
@RF00549 LA    @10,CARDDATA(,BUFAD)                             03S0551
         BCTR  @10,0                                            03S0551
         SLR   @09,@09                                          03S0551
         ICM   @09,3,PARMSIZE(BUFAD)                            03S0551
         ALR   @10,@09                                          03S0551
         ICM   @09,7,CC(BUFAD)                                  03S0551
         MVC   SCANBUF(1,@10),COL(@09)                          03S0551
*                      IF COL(ONE) = QUOTE /*                        */
*                        THEN          /* SET PREVIOUS IF QUOTE.     */
@RC00549 ICM   @10,7,CC(BUFAD)                                  03S0552
         CLI   COL(@10),C''''                                   03S0552
         BNE   @RF00552                                         03S0552
*                          PRECOL = QUOTE;                      03S0553
         MVI   PRECOL(BUFAD),C''''                              03S0553
*                        ELSE;         /*                            */
@RF00552 DS    0H                                               03S0555
*                      END;            /*                            */
*              END;                    /* END OF TEXT SCAN.          */
@RC00543 DS    0H                                               03S0556
@DE00538 TM    LASTQ(BUFAD),B'00000001'                         03S0556
         BO    @DC00538                                         03S0556
         CLC   PARMSIZE(2,BUFAD),@CH00223                       03S0556
         BNL   @DC00538                                         03S0556
         TM    CONTINUE(BUFAD),B'00001000'                      03S0556
         BNZ   @DL00538                                         03S0556
         SLR   @10,@10                                          03S0556
         ICM   @10,7,CC(BUFAD)                                  03S0556
         C     @10,CARDEND(,BUFAD)                              03S0556
         BL    @DL00538                                         03S0556
@DC00538 DS    0H                                               03S0557
*            END;                      /*                            */
*          ELSE;                       /* NO TEXT STRING.            */
@RF00535 DS    0H                                               03S0559
*        END;                          /*                            */
*        IF LASTQ = OFF                /* CHECK FOR SUCCESSFUL SCAN. */
*         × PARMSIZE ^> ONE            /*                            */
*          THEN                        /*                            */
         TM    LASTQ(BUFAD),B'00000001'                         02S0560
         BZ    @RT00560                                         02S0560
         CLC   PARMSIZE(2,BUFAD),@CH00061                       02S0560
         BH    @RF00560                                         02S0560
@RT00560 DS    0H                                               02S0561
*            INVPARM = ON;             /* SET INVALID PARAMETER.     */
         OI    INVPARM(BUFAD),B'00001000'                       02S0561
*          ELSE                        /*                            */
*            DO;                       /* PARM INCLUDES LAST QUOTE   */
         B     @RC00560                                         02S0562
@RF00560 DS    0H                                               02S0563
*              PARMSIZE = PARMSIZE - ONE;/* DECREMENT PARMSIZE.      */
         SLR   @10,@10                                          02S0563
         ICM   @10,3,PARMSIZE(BUFAD)                            02S0563
         BCTR  @10,0                                            02S0563
         STH   @10,PARMSIZE(,BUFAD)                             02S0563
*              DO;                     /* SET TOTAL TEXT FIELD.      */
*/*********************************************************************
**                                                                    *
**  THIS SEGMENT WILL PROCESS THE TEXT DATA STRING OF THE TEXT        *
**  KEYWORD. DATA WILL BE CONVERTED TO HEXADECIAML IF REQUESTED AND   *
**  THE DATA STRING WILL BE DUPLICATED AS REQUESTED.                  *
**                                                                    *
**********************************************************************/
*        DO;                           /*                            */
*          IF FIELDT = CHARX           /* CHECK FOR DATA TYPE.       */
*            THEN                      /* MUST BE HEX.               */
         CLI   FIELDT(BUFAD),231                                03S0566
         BNE   @RF00566                                         03S0566
*              IF PARMSIZE =< XMAX     /* CHECK FOR MAXIMUM SIZE.    */
*                THEN                  /* SIZE OK                    */
         CH    @10,@CH00897                                     03S0567
         BH    @RF00567                                         03S0567
*                  DO;                 /*                            */
*                    CALL CONVERTX;    /* CONVERT TO HEXADECIMAL.    */
         BAL   @14,CONVERTX                                     03S0569
*                  END;                /*                            */
*                ELSE                  /* SIZE ERROR.                */
*                  PARMSIZE = ZERO;    /* RESET, DO NOT USE PARM.    */
         B     @RC00567                                         03S0571
@RF00567 SLR   @10,@10                                          03S0571
         STH   @10,PARMSIZE(,BUFAD)                             03S0571
*            ELSE                      /* NOT HEX REQUEST            */
*              IF FIELDT ^= CHARC      /* SHOULD BE CHARACTER REQUEST*/
*               × PARMSIZE > CMAX      /* CHECK FOR SIZE ALSO.       */
*                THEN                  /*                            */
         B     @RC00566                                         03S0572
@RF00566 CLI   FIELDT(BUFAD),195                                03S0572
         BNE   @RT00572                                         03S0572
         CLC   PARMSIZE(2,BUFAD),@CH00281                       03S0572
         BNH   @RF00572                                         03S0572
@RT00572 DS    0H                                               03S0573
*                  PARMSIZE = ZERO;    /* DO NOT USE PARAMETER.      */
         SLR   @10,@10                                          03S0573
         STH   @10,PARMSIZE(,BUFAD)                             03S0573
*                ELSE;                 /*                            */
@RF00572 DS    0H                                               03S0575
*          IF HEXERR = ON              /* ERRORS IN CONVERT          */
*            THEN                      /*                            */
@RC00566 TM    HEXERR(BUFAD),B'00010000'                        03S0575
         BNO   @RF00575                                         03S0575
*              DO;                     /*                            */
*                MSGN = IEBA34I;       /* HEX (FF) NOT ALLOWED.      */
         MVI   MSGN(BUFAD),X'22'                                03S0577
*                CALL IEBIMSGS;        /* PRINT IT.                  */
         L     @15,@CV00034                                     03S0578
         BALR  @14,@15                                          03S0578
*                INHIBITW = ON;        /* PREVENT LIBRARY UPDATE.    */
         OI    INHIBITW(BUFAD),B'01000000'                      03S0579
*                HEXERR = OFF;         /* RESET HEXERR               */
         NI    HEXERR(BUFAD),B'11101111'                        03S0580
*                PARMSIZE = ZERO;      /*  AND PARMSIZE              */
         SLR   @10,@10                                          03S0581
         STH   @10,PARMSIZE(,BUFAD)                             03S0581
*              END;                    /*                            */
*            ELSE;                     /* NO ERROR.                  */
@RF00575 DS    0H                                               03S0584
*          IF PARMSIZE ^= ZERO         /* PARAMETER VALID TEST       */
*           & FIELDL*PARMSIZE + TEXTN =< CMAX                   03S0584
*           & FIELDL ^= ZERO           /* CHECK VALID DUP FACTOR.    */
*            THEN                      /*                            */
         SLR   @10,@10                                          03S0584
         ICM   @10,3,PARMSIZE(BUFAD)                            03S0584
         LTR   @10,@10                                          03S0584
         BZ    @RF00584                                         03S0584
         SLR   @01,@01                                          03S0584
         IC    @01,FIELDL(,BUFAD)                               03S0584
         MR    @00,@10                                          03S0584
         SLR   @09,@09                                          03S0584
         IC    @09,TEXTN+796(,BUFAD)                            03S0584
         ALR   @09,@01                                          03S0584
         CH    @09,@CH00281                                     03S0584
         BH    @RF00584                                         03S0584
         CLI   FIELDL(BUFAD),0                                  03S0584
         BE    @RF00584                                         03S0584
*              DO;                     /* MOVE DATA STRING TO        */
*                TEXTDATA(ONE:PARMSIZE)/*  TEMPORARY TEXT SEGMENT    */
*                 = CARDDATA(ONE:PARMSIZE);                     03S0586
         LR    @09,@10                                          03S0586
         BCTR  @09,0                                            03S0586
         EX    @09,@SM01049                                     03S0586
*                FIELDL                /* DETERMINE TOTAL            */
*                 = FIELDL * PARMSIZE; /*  TEXT LENGTH.              */
         STC   @01,FIELDL(,BUFAD)                               03S0587
*                IF FIELDL > PARMSIZE  /* CHECK FOR DUPLICATION      */
*                  THEN                /* NEED SOME, SO DUPLICATE.   */
         CR    @01,@10                                          03S0588
         BNH   @RF00588                                         03S0588
*                    MVC(TEXTDATA(PARMSIZE+ONE:FIELDL),         03S0589
*                     TEXTDATA(ONE:FIELDL-PARMSIZE));           03S0589
         ALR   @10,BUFFPTR                                      03S0589
         SLR   @09,@09                                          03S0589
         IC    @09,FIELDL(,BUFAD)                               03S0589
         SLR   @07,@07                                          03S0589
         ICM   @07,3,PARMSIZE(BUFAD)                            03S0589
         SLR   @09,@07                                          03S0589
         BCTR  @09,0                                            03S0589
         EX    @09,@SM01051                                     03S0589
*                  ELSE;               /* UPDATE TEXT BYTE COUNT.    */
@RF00588 DS    0H                                               03S0591
*                TEXTN = TEXTN + FIELDL;                        03S0591
         LA    @10,796                                          03S0591
         ALR   @10,BUFAD                                        03S0591
         SLR   @09,@09                                          03S0591
         IC    @09,FIELDL(,BUFAD)                               03S0591
         SLR   @07,@07                                          03S0591
         IC    @07,TEXTN(,@10)                                  03S0591
         ALR   @07,@09                                          03S0591
         STC   @07,TEXTN(,@10)                                  03S0591
*                BUFFPTR               /* UPDATE TEXT POINTER.       */
*                 = BUFFPTR + FIELDL;  /*                            */
         ALR   BUFFPTR,@09                                      03S0592
*              END;                    /*                            */
*            ELSE                      /* MUST BE AN ERROR.          */
*              INVPARM = ON;           /* SO INDICATE.               */
         B     @RC00584                                         03S0594
@RF00584 OI    INVPARM(BUFAD),B'00001000'                       03S0594
*          BLNK = BLVAL;               /* RESET TO CATCH BLANKS.     */
@RC00584 MVI   BLNK,X'11'                                       03S0595
*        END;                          /* END SEGMENT.               */
*              END;                    /*                            */
*              IF COL(ONE) ^= RITEPARN /* CHECK FOR STOP AT RIGHT    */
*                THEN                  /*  PARENTHESIS.              */
         ICM   @10,7,CC(BUFAD)                                  02S0598
         CLI   COL(@10),C')'                                    02S0598
         BE    @RF00598                                         02S0598
*                  INVDLM = ON;        /* SET INVALID DELIMITER.     */
         OI    INVDLM(BUFAD),B'10000000'                        02S0599
*                ELSE                  /*                            */
*                  DO;                 /* REDUCE PARENTHESIS COUNTER.*/
         B     @RC00598                                         02S0600
@RF00598 DS    0H                                               02S0601
*                    PRNCNT = PRNCNT - ONE;                     02S0601
         LH    @10,PRNCNT(,BUFAD)                               02S0601
         BCTR  @10,0                                            02S0601
         STH   @10,PRNCNT(,BUFAD)                               02S0601
*                    PRECOL = RPARN;   /* SET PREVIOUS COLUMN FOR    */
         MVI   PRECOL(BUFAD),X'40'                              02S0602
*                    CC = CC + ONE;    /*  CONTINUATION OF SCAN.     */
         LA    @09,1                                            02S0603
         SLR   @07,@07                                          02S0603
         ICM   @07,7,CC(BUFAD)                                  02S0603
         ALR   @09,@07                                          02S0603
         STCM  @09,7,CC(BUFAD)                                  02S0603
*                    FLDSW = OFF;      /* END OF THIS FIELD.         */
         NI    FLDSW(BUFAD),B'11110111'                         02S0604
*                    IF PRNCNT = ZERO  /* COULD BE LAST GROUP.       */
*                      THEN            /*                            */
         LTR   @10,@10                                          02S0605
         BNZ   @RF00605                                         02S0605
*                        PARMGRP = OFF;/* END OF THIS GROUP.         */
         NI    PARMGRP(BUFAD),B'11111011'                       02S0606
*                  END;                /*                            */
@RF00605 DS    0H                                               02S0608
*              FOUND = OFF;            /* RESET FOUND.               */
@RC00598 NI    FOUND(BUFAD),B'10111111'                         02S0608
*            END;                      /*                            */
*        IF STATUS3 = ZERO             /* CHECK FOR ANY ERRORS.      */
*          THEN                        /*                            */
@RC00560 CLI   STATUS3(BUFAD),0                                 02S0610
         BNE   @RF00610                                         02S0610
*            CALL FINDPARM;            /* NONE, CONTINUE SCAN.       */
         BAL   @14,FINDPARM                                     02S0611
*          ELSE                        /*                            */
*            PARMNUM = ZERO;           /* ERROR, EXIT KEYWORD.       */
         B     @RC00610                                         02S0612
@RF00610 MVI   PARMNUM(BUFAD),X'00'                             02S0612
*                        END;                                   01S0613
*                      ELSE            /* MUST BE PARM TWO.          */
*                        PARMNUM = ZERO;/* INDICATE BAD PARM.        */
         B     @RC00519                                         01S0614
@RF00519 MVI   PARMNUM(BUFAD),X'00'                             01S0614
*                  END;                /* END PARM PROCESS LOOP.     */
@RC00519 DS    0H                                               01S0615
@DE00518 CLI   PARMNUM(BUFAD),0                                 01S0615
         BNE   @DL00518                                         01S0615
*                  RESPECIFY (BUFFPTR) UNRESTRICTED;            01S0616
*                END;                  /*                            */
*              ELSE                    /* DUPLICATE KEYWORD.         */
*                EXCLKWD = ON;         /*                            */
         B     @RC00512                                         01S0618
@RF00512 OI    EXCLKWD(BUFAD),B'00010000'                       01S0618
*          ELSE                        /* INVALID KEYWORD.           */
*            INVKWD = ON;              /*                            */
         B     @RC00511                                         01S0619
@RF00511 OI    INVKWD(BUFAD),B'00100000'                        01S0619
*        GEN REFS(SAVE3)               /******************************/
*         (L  @13,SAVE3+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER.  */
@RC00511 DS    0H                                               01S0620
         L  @13,SAVE3+BACK(,BUFAD)
*  END TEXT;                           /* RETURN TO CALLER.          */
@EL00015 DS    0H                                               01S0621
@EF00015 DS    0H                                               01S0621
@ER00015 LM    @14,@12,12(@13)                                  01S0621
         BR    @14                                              01S0621
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS ROUTINE WILL INDICATE THAT AN INVALID KEYWORD HAS BEEN       *
**  FOUND.                                                            *
**                                                                    *
**********************************************************************/
*INVKEY:                                                        01S0622
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0622
INVKEY   STM   @14,@12,12(@13)                                  01S0622
*        GEN SETS(SAVE3);              /* USE CONVENTIONAL SAVE.     */
         ST    @13,SAVE3+BACK(,BUFAD)  BACKWARD POINTER.
         LA    @14,SAVE3(,BUFAD)       THIS ROUTINE SAVE AREA.
         ST    @14,FORE(,@13)          FORWARD POINTER.
         LR    @13,@14                 LINKAGE COMPLETE.
*        PARMNUM = ZERO;               /* RESET TO EXIT KEYWORD.     */
         MVI   PARMNUM(BUFAD),X'00'                             01S0624
*        INHIBITW = ON;                /* PREVENT LIBRARY UPDATE.    */
         OI    INHIBITW(BUFAD),B'01000000'                      01S0625
*                                      /* POINT TO BAD WORD.         */
*        EDITDATA(ONE) = ADDR(LASTKEY);                         01S0626
         LA    @10,LASTKEY(,BUFAD)                              01S0626
         STCM  @10,7,EDITDATA(BUFAD)                            01S0626
*                                      /* MAX OF 8 CHARS TO MESSAGE. */
*        EDITLEN(ONE) = LENGTH(LASTKEY);                        01S0627
         MVI   EDITLEN(BUFAD),X'08'                             01S0627
*        MSGN = IEBA15I;               /* BAD KEYWORD MESSAGE.       */
         MVI   MSGN(BUFAD),X'0F'                                01S0628
*        CALL IEBIMSGS;                /* PRINT THE MESSAGE.         */
         L     @15,@CV00034                                     01S0629
         BALR  @14,@15                                          01S0629
*        GEN REFS(SAVE3)               /*                            */
*         (L  @13,SAVE3+BACK(,BUFAD)); /* RESTORE BACKWARD POINTER.  */
         L  @13,SAVE3+BACK(,BUFAD)
*   END INVKEY;                        /* RETURN TO CALLER.          */
@EL00016 DS    0H                                               01S0631
@EF00016 DS    0H                                               01S0631
@ER00016 LM    @14,@12,12(@13)                                  01S0631
         BR    @14                                              01S0631
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS ROUTINE READS CARDS INTO A SECONDARY BUFFER WHAT SHOULD BE A *
**  CONTINUATION CARD.                                                *
**                                                                    *
**********************************************************************/
*GETCARDN:                                                      01S0632
*  PROCEDURE OPTIONS(NOSAVEAREA);                               01S0632
GETCARDN STM   @14,@12,12(@13)                                  01S0632
*        GEN SETS(SAVE4);              /* USE CONVENTIONAL SAVE      */
         ST  @13,SAVE4+BACK(,BUFAD)    BACKWARD POINTER.
         LA  @14,SAVE4(,BUFAD)         THIS ROUTINE SAVE AREA.
         ST  @14,FORE(,@13)            FORWARD POINTER.
         LR  @13,@14                   LINKAGE COMPLETE.
*        RESPECIFY (DB,R14) RESTRICTED;                         01S0634
*        IF CARDIN = ON                /* CARD COULD HAVE BEEN       */
*          THEN                        /*  READ PREVIOUSLY.          */
         TM    CARDIN(BUFAD),B'00100000'                        01S0635
         BNO   @RF00635                                         01S0635
*            DO;                       /*                            */
*              PRIMCARD = SDRYCARD;    /* MOVE CARD TO PRIMARY AREA. */
         MVC   PRIMCARD(80,BUFAD),SDRYCARD(BUFAD)               01S0637
*              CARDIN = OFF;           /* RESET INDICATOR.           */
         NI    CARDIN(BUFAD),B'11011111'                        01S0638
*            END;                      /*                            */
*          ELSE                        /* NEED TO READ NEXT CARD.    */
*            DO;                       /*                            */
         B     @RC00635                                         01S0640
@RF00635 DS    0H                                               01S0641
*              IF CONTINUE = ON        /* COULD BE LOOKING FOR       */
*                THEN                  /*  CONTINUATION CARD.        */
         TM    CONTINUE(BUFAD),B'00001000'                      01S0641
         BNO   @RF00641                                         01S0641
*                  R14 = ADDR(SDRYCARD);                        01S0642
         LA    R14,SDRYCARD(,BUFAD)                             01S0642
*                ELSE                  /* DESTINATION IS PRIMARY.    */
*                  R14 = ADDR(PRIMCARD);                        01S0643
         B     @RC00641                                         01S0643
@RF00641 LA    R14,PRIMCARD(,BUFAD)                             01S0643
*              DB = SYSINAD;           /* GET SYSIN ADDRESS.         */
@RC00641 L     DB,SYSINAD(,BUFAD)                               01S0644
*              GEN REFS(DB,R14);       /* READ CARD.                 */
               GET (DB),(R14)
*            END;                      /*                            */
*        IF CONTINUE = ON              /* CHECK CONTINUATION IN PROG.*/
*          THEN                        /*                            */
@RC00635 TM    CONTINUE(BUFAD),B'00001000'                      01S0647
         BNO   @RF00647                                         01S0647
*            IF SDRYCARD(ONE:FIFTN)    /* COLUMN ONE THRU 15         */
*               = BLNKS(ONE:FIFTN)     /*  NEED 15 BLANKS.           */
*              THEN                    /*                            */
         CLC   SDRYCARD(15,BUFAD),BLNKS                         01S0648
         BNE   @RF00648                                         01S0648
*                DO;                   /* PREPARE TO MOVE CARD.      */
*                  PRIMCARD=SDRYCARD;  /* MOVE CONTINUATION CARD.    */
         MVC   PRIMCARD(80,BUFAD),SDRYCARD(BUFAD)               01S0650
*                  MSGTXT = SDRYCARD;  /* CONT CARD TO PRT.          */
         MVI   MSGTXT+80(BUFAD),C' '                            01S0651
         MVC   MSGTXT+81(39,BUFAD),MSGTXT+80(BUFAD)             01S0651
         MVC   MSGTXT(80,BUFAD),SDRYCARD(BUFAD)                 01S0651
*                  SPACE = SINGL;      /* SET SINGLE SPACE.          */
         MVI   SPACE(BUFAD),C' '                                01S0652
*                  CC=ADDR(PRIMCARD)+FIFTN;/* RESET COL PTR.         */
         LA    @15,PRIMCARD(,BUFAD)                             01S0653
         AH    @15,@CH00157                                     01S0653
         STCM  @15,7,CC(BUFAD)                                  01S0653
*                  DB = SYSPRTAD;      /* GET ADDRESS OF SYSPRINT DCB*/
         L     DB,SYSPRTAD(,BUFAD)                              01S0654
*                  GEN REFS(DB,MSG)    /* PRINT CONTINUATION CARD.   */
*                   (PUT  (DB),MSG(BUFAD));                     01S0655
         PUT  (DB),MSG(BUFAD)
*                  IF COL72 = BLAN                              01S0656
*                    THEN              /* NO MORE CONTINUE CARDS.    */
         CLI   COL72(BUFAD),C' '                                01S0656
         BNE   @RF00656                                         01S0656
*                      CONTINUE = OFF; /* RESET CONTINUATION SWITCH. */
         NI    CONTINUE(BUFAD),B'11110111'                      01S0657
*                    ELSE              /* ANOTHER CONTINUATION CARD. */
*                      COL72 = BLAN;   /* MAKE BLANK FOR SCAN.       */
         B     @RC00656                                         01S0658
@RF00656 MVI   COL72(BUFAD),C' '                                01S0658
*                END;                  /* END CARD MOVE.             */
*              ELSE                    /* MUST BE ERROR.             */
*                DO;                   /************IEBA12I***********/
         B     @RC00648                                         01S0660
@RF00648 DS    0H                                               01S0661
*                  SCANINP = OFF;      /* FORCE SCAN END.            */
         NI    SCANINP(BUFAD),B'10111111'                       01S0661
*                  CONTINUE = OFF;     /* RESET CONTINUE SWITCH.     */
*                  CARDIN = ON;        /* CARD IN BUFF SW.           */
         OI    CARDIN(BUFAD),B'00100000'                        01S0663
         NI    CONTINUE(BUFAD),B'11110111'                      01S0663
*                  MSGN = IEBA12I;     /* INV CONTINUE CARD          */
         MVI   MSGN(BUFAD),X'0C'                                01S0664
*                  CALL IEBIMSGS;      /* GET MESSAGE.               */
         L     @15,@CV00034                                     01S0665
         BALR  @14,@15                                          01S0665
*                  INHIBITW = ON;      /* INHIBIT DISK WR.           */
         OI    INHIBITW(BUFAD),B'01000000'                      01S0666
*                  KWDCOMP = ON;       /* TERMINATE KEYWORD.         */
         OI    KWDCOMP(BUFAD),B'00000001'                       01S0667
*                END;                  /******************************/
*          ELSE                                                 01S0669
*            CC = ADDR(PRIMCARD);      /* RESET CURRENT COLUMN.      */
         B     @RC00647                                         01S0669
@RF00647 LA    @15,PRIMCARD(,BUFAD)                             01S0669
         STCM  @15,7,CC(BUFAD)                                  01S0669
*        RESPECIFY (DB,R14) UNRESTRICTED;                       01S0670
@RC00647 DS    0H                                               01S0671
*        IF COL72 ^= BLAN              /* CHECK FOR PUNCH IN         */
*          THEN                        /*  COLUMN 72.                */
         CLI   COL72(BUFAD),C' '                                01S0671
         BE    @RF00671                                         01S0671
*            CONTINUE = ON;            /* SET CONTINUATION SWITCH.   */
         OI    CONTINUE(BUFAD),B'00001000'                      01S0672
*        GEN REFS(SAVE4)               /* RESTORE BACKWARD POINTER   */
*         (L  @13,SAVE4+BACK(,BUFAD)); /*                            */
@RF00671 DS    0H                                               01S0673
         L  @13,SAVE4+BACK(,BUFAD)
*  END GETCARDN;                       /* RETURN TO CALLER.          */
@EL00017 DS    0H                                               01S0674
@EF00017 DS    0H                                               01S0674
@ER00017 LM    @14,@12,12(@13)                                  01S0674
         BR    @14                                              01S0674
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS SEGMENT WILL SCAN A PREDETERMINED NUMBER OF CHARACTERS ON    *
**  THE CONTROL CARD. IF A CONTROL CARD INDICATION IS ENCOUNTERED,    *
**  THE NEXT CARD WILL BE REQUESTED AND THE SCAN CONTINUED. CARD      *
**  SCANNING WILL CEASE IF ANY OF THE FOLLOWING CONDITIONS ARE FOUND- *
**       1. A VALID DELEMITER ENCOUNTERED.                            *
**       2. AN INVALID CHARACTER ENCOUNTERED.                         *
**       3. AN INVALID CONTINUATION CARD READ.                        *
**       4. EXAUSTION OF THE FIELD TO BE SCANNED.                     *
**                                                                    *
**********************************************************************/
*                                                               01S0675
*SCAN:                                                          01S0675
*   PROCEDURE OPTIONS(SAVE(14));                                01S0675
SCAN     ST    @14,@SA00018                                     01S0675
*        PARMSIZE = ZERO;              /* RESET STRING LENGTH.       */
         SLR   @10,@10                                          01S0676
         STH   @10,PARMSIZE(,BUFAD)                             01S0676
*        DO                            /* START SCAN OF FIELD.       */
*         UNTIL STOPFLAG ^= NULL       /* SCAN ALL VALID CHARACTERS. */
*              × PARMSIZE => LENGTH(CARDDATA);                  01S0677
@DL00677 DS    0H                                               01S0678
*          IF CONTINUE = ON            /* POSSIBLE CONTINUATION?     */
*           & CC = CARDEND             /* IS THIS COLUMN 72?         */
*            THEN                      /* AT END OF CARD             */
         TM    CONTINUE(BUFAD),B'00001000'                      01S0678
         BNO   @RF00678                                         01S0678
         SLR   @10,@10                                          01S0678
         ICM   @10,7,CC(BUFAD)                                  01S0678
         C     @10,CARDEND(,BUFAD)                              01S0678
         BNE   @RF00678                                         01S0678
*              CALL GETCARDN;          /* GET A CONTINUATION CARD.   */
         BAL   @14,GETCARDN                                     01S0679
*            ELSE;                     /* NOT AT END OF CARD.        */
@RF00678 DS    0H                                               01S0681
*          ARGMT = COL(ONE)+ONE;       /* GET FIRST CHAR OF THIS CARD*/
         LA    @10,1                                            01S0681
         SLR   @09,@09                                          01S0681
         ICM   @09,7,CC(BUFAD)                                  01S0681
         SLR   @02,@02                                          01S0681
         IC    @02,COL(,@09)                                    01S0681
         ALR   @02,@10                                          01S0681
         STC   @02,ARGMT(,BUFAD)                                01S0681
*          IF STOPFLAG = NULL          /* CHECK FOR INVALID CHARACTER*/
*            THEN                      /* SAVE VALID CHARACTERS IN   */
         LA    @02,FUNCTION-1(@02)                              01S0682
         TM    STOPFLAG(@02),B'11110000'                        01S0682
         BNZ   @RF00682                                         01S0682
*              DO;                     /*  THE SCAN BUFFER.          */
*                PARMSIZE=PARMSIZE+ONE;/* TRACK STRING LENGTH.       */
         SLR   @02,@02                                          01S0684
         ICM   @02,3,PARMSIZE(BUFAD)                            01S0684
         ALR   @10,@02                                          01S0684
         STH   @10,PARMSIZE(,BUFAD)                             01S0684
*                SCANBUF = COL(ONE);   /*                            */
         LA    @02,CARDDATA(,BUFAD)                             01S0685
         BCTR  @02,0                                            01S0685
         ALR   @02,@10                                          01S0685
         MVC   SCANBUF(1,@02),COL(@09)                          01S0685
*              END;                    /* END CHARACTER SAVE.        */
*            ELSE;                     /*                            */
@RF00682 DS    0H                                               01S0688
*          CC = CC + ONE;              /* TRACK CARD COLUMNS.        */
         LA    @10,1                                            01S0688
         SLR   @09,@09                                          01S0688
         ICM   @09,7,CC(BUFAD)                                  01S0688
         ALR   @10,@09                                          01S0688
         STCM  @10,7,CC(BUFAD)                                  01S0688
*        END;                          /* END SCAN OF FIELD.         */
@DE00677 SLR   @10,@10                                          01S0689
         IC    @10,ARGMT(,BUFAD)                                01S0689
         LA    @10,FUNCTION-1(@10)                              01S0689
         TM    STOPFLAG(@10),B'11110000'                        01S0689
         BNZ   @DC00677                                         01S0689
         CLC   PARMSIZE(2,BUFAD),@CH00223                       01S0689
         BL    @DL00677                                         01S0689
@DC00677 DS    0H                                               01S0690
*        FWORK = CC;                   /* PRIME FOR POSSIBLE ERROR.  */
         SLR   @10,@10                                          01S0690
         ICM   @10,7,CC(BUFAD)                                  01S0690
         ST    @10,FWORK(,BUFAD)                                01S0690
*   END SCAN;                          /* RETURN TO CALLER.          */
@EL00018 DS    0H                                               01S0691
@EF00018 DS    0H                                               01S0691
@ER00018 L     @14,@SA00018                                     01S0691
         BR    @14                                              01S0691
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS ROUTINE WILL LOCATE THE PARAMETERS WITHIN KEYWORDS.          *
**   INPUT IS POINTER TO FIRST COL TO BE SCANNED.                     *
**   OUTPUT IS NUMBER OF PARAMETER, NUMBER OF BYTES IN PARAMETER      *
**   AND A POINTER TO THE PROPERLY CONVERTED PARAMETER.               *
**                                                                    *
**********************************************************************/
*                                                               01S0692
* FINDPARM:                                                     01S0692
*   PROCEDURE OPTIONS(SAVE(14));                                01S0692
FINDPARM ST    @14,@SA00019                                     01S0692
*        FOUND = OFF;                  /* RESET FOUND INDICATOR.     */
         NI    FOUND(BUFAD),B'10111111'                         01S0693
*        DO                            /* START PARAMETER DETERMINE  */
*         WHILE STATUS3 = ZERO;        /* GO UNTIL FOUND OR ERROR.   */
         B     @DE00694                                         01S0694
@DL00694 DS    0H                                               01S0695
*          CALL SCAN;                  /* SCAN FOR PARAMETER.        */
         BAL   @14,SCAN                                         01S0695
*          FWORK = CC;                 /* PRIME FOR POSSIBLE ERROR.  */
         SLR   @10,@10                                          01S0696
         ICM   @10,7,CC(BUFAD)                                  01S0696
         ST    @10,FWORK(,BUFAD)                                01S0696
*          IF PARMSIZE = ZERO          /* CHECK FOR                  */
*            THEN                      /*  PARAMETER OR DELIMITER.   */
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0697
         BNZ   @RF00697                                         01S0697
*              IF FLDSW = OFF          /* COULD BE WITHIN PARM GROUP.*/
*                THEN                  /*                            */
         TM    FLDSW(BUFAD),B'00001000'                         01S0698
         BNZ   @RF00698                                         01S0698
*                  DO;                 /* FIRST CHARACTER DELIMITER. */
*/*********************************************************************
**                                                                    *
**  THIS SEGMENT WILL BE ENTERED IF THE FIRST CHARACTER SCANNED IS    *
**  NOT ALPHANUMERIC.                                                 *
**                                                                    *
**********************************************************************/
*        IF STOPCODE = LPARN           /* CHECK FOR FIRST CHARACTER  */
*          THEN                        /*  PARENTHESIS               */
         SLR   @10,@10                                          02S0700
         IC    @10,ARGMT(,BUFAD)                                02S0700
         LA    @10,FBYTE-1(@10)                                 02S0700
         CLI   STOPCODE(@10),X'80'                              02S0700
         BNE   @RF00700                                         02S0700
*            DO;                       /*                            */
*              PRNCNT=PRNCNT+ONE;      /* INCREMENT PARENTHESIS COUNT*/
         LA    @10,1                                            02S0702
         LH    @09,PRNCNT(,BUFAD)                               02S0702
         ALR   @09,@10                                          02S0702
         STH   @09,PRNCNT(,BUFAD)                               02S0702
*              PARMNUM = ONE;          /* SET PARAMETER NUMBER.      */
         MVI   PARMNUM(BUFAD),X'01'                             02S0703
*              IF PRNCNT > ONE         /* CHECKING MULTIPLE PARENS.  */
*               & KPARN2(ACTIVKEY) = OFF /* CHECKING PERMISSION.     */
*                THEN                  /* ERROR.                     */
         CR    @09,@10                                          02S0704
         BNH   @RF00704                                         02S0704
         SLR   @10,@10                                          02S0704
         IC    @10,ACTIVKEY(,BUFAD)                             02S0704
         MH    @10,@CH00359                                     02S0704
         LA    @09,KPARN2-20(@10)                               02S0704
         TM    0(@09),B'00100000'                               02S0704
         BNZ   @RF00704                                         02S0704
*                  DO;                 /*                            */
*                    PARMNUM = ZERO;   /* SET FOR KEYWORD EXIT.      */
         MVI   PARMNUM(BUFAD),X'00'                             02S0706
*                    INVDLM = ON;      /* INDICATE INVALID.          */
         OI    INVDLM(BUFAD),B'10000000'                        02S0707
*                  END;                /*                            */
*                ELSE;                 /*                            */
@RF00704 DS    0H                                               02S0710
*            END;                      /*                            */
*          ELSE                        /*                            */
*            IF PRNCNT ^= ZERO         /* COULD BE IN THE MIDST OF   */
*              THEN                    /*  DELIMITERS.               */
         B     @RC00700                                         02S0711
@RF00700 ICM   @10,3,PRNCNT(BUFAD)                              02S0711
         BZ    @RF00711                                         02S0711
*                DO;                   /*                            */
*                    IF PRECOL ^= RPARN      /* CHECK FOR PROPER     */
*                     & (STOPCODE = RPARN    /* DELIMITER IN         */
*                        × STOPCODE = COMMA) /* PARAMETER GROUP.     */
*                      THEN                  /* ^)) OR ^), INVALID   */
         CLI   PRECOL(BUFAD),X'40'                              02S0713
         BE    @RF00713                                         02S0713
         SLR   @10,@10                                          02S0713
         IC    @10,ARGMT(,BUFAD)                                02S0713
         LA    @10,FBYTE-1(@10)                                 02S0713
         CLI   STOPCODE(@10),X'40'                              02S0713
         BE    @RT00713                                         02S0713
         CLI   STOPCODE(@10),X'10'                              02S0713
         BNE   @RF00713                                         02S0713
@RT00713 DS    0H                                               02S0714
*                        DO;                 /*                      */
*                          INVDLM = ON;      /* SET DELIMITER INVALID*/
         OI    INVDLM(BUFAD),B'10000000'                        02S0715
*                          PARMNUM = ZERO;   /* EXIT THIS KEYWORD.   */
         MVI   PARMNUM(BUFAD),X'00'                             02S0716
*                        END;                /*                      */
*                      ELSE;                 /* DELIMITER OK SO FAR. */
@RF00713 DS    0H                                               02S0719
*                IF STOPCODE ^= COMMA  /* ONLY RIGHT PARENS          */
*                  THEN                /*  AND COMMAS HERE           */
         SLR   @10,@10                                          02S0719
         IC    @10,ARGMT(,BUFAD)                                02S0719
         LA    @10,FBYTE-1(@10)                                 02S0719
         CLI   STOPCODE(@10),X'10'                              02S0719
         BE    @RF00719                                         02S0719
*                    IF STOPCODE=RPARN /*                            */
*                      THEN            /* MUST BE RIGHT PAREN.       */
         CLI   STOPCODE(@10),X'40'                              02S0720
         BNE   @RF00720                                         02S0720
*                        DO;           /*                            */
*                          PRNCNT =    /* DECREMENT PARENTHESIS      */
*                           PRNCNT -ONE; /*  COUNT.                  */
         LH    @10,PRNCNT(,BUFAD)                               02S0722
         BCTR  @10,0                                            02S0722
         STH   @10,PRNCNT(,BUFAD)                               02S0722
*                           IF PRNCNT = ZERO                    02S0723
*                             THEN     /*CHECK FOR PARM GROUP END.   */
         LTR   @10,@10                                          02S0723
         BNZ   @RF00723                                         02S0723
*                               PARMGRP = OFF;                  02S0724
         NI    PARMGRP(BUFAD),B'11111011'                       02S0724
*                        END;          /*                            */
*                      ELSE            /* DO NOT KNOW WHAT IT IS.    */
*                        DO;           /*                            */
         B     @RC00720                                         02S0726
@RF00720 DS    0H                                               02S0727
*                          INVCHAR = ON; /* MUST BE ERROR.           */
         OI    INVCHAR(BUFAD),B'00000100'                       02S0727
*                          PARMNUM = ZERO;/* EXIT THIS KEYWORD.      */
         MVI   PARMNUM(BUFAD),X'00'                             02S0728
*                        END;          /*                            */
*                  ELSE                /* MUST BE COMMA.             */
*                    IF COL(ONE)=BLAN  /* CHECK FOR CONTINUATION     */
*                     & CONTINUE=ON    /* CARD FOLLOWING.            */
*                      THEN            /*                            */
         B     @RC00719                                         02S0730
@RF00719 ICM   @10,7,CC(BUFAD)                                  02S0730
         CLI   COL(@10),C' '                                    02S0730
         BNE   @RF00730                                         02S0730
         TM    CONTINUE(BUFAD),B'00001000'                      02S0730
         BNO   @RF00730                                         02S0730
*                        CALL GETCARDN;/* GET A CONTINUATION CARD.   */
         BAL   @14,GETCARDN                                     02S0731
*                      ELSE;           /* NO CONTINUATION.           */
@RF00730 DS    0H                                               02S0733
*                END;                  /*                            */
*              ELSE                    /* PARENTHESIS COUNT          */
*                DO;                   /* IS EQUAL TO ZERO.          */
         B     @RC00711                                         02S0734
@RF00711 DS    0H                                               02S0735
*                  IF STOPFLAG = ONEH  /* CHECK FOR BLANK OR COMMA.  */
*                    THEN              /*                            */
         SLR   @10,@10                                          02S0735
         IC    @10,ARGMT(,BUFAD)                                02S0735
         LA    @10,FUNCTION-1(@10)                              02S0735
         TM    STOPFLAG(@10),B'00010000'                        02S0735
         BNO   @RF00735                                         02S0735
         TM    STOPFLAG(@10),B'11100000'                        02S0735
         BNZ   @RF00735                                         02S0735
*                      DO;             /*                            */
*                        KWDCOMP = ON; /* KEYWORD IS COMPLETE.       */
         OI    KWDCOMP(BUFAD),B'00000001'                       02S0737
*                        IF PARMGRP = ON                        02S0738
*                          THEN        /* CHECK FOR GOOD COMPLETION. */
         TM    PARMGRP(BUFAD),B'00000100'                       02S0738
         BNO   @RF00738                                         02S0738
*                            DO;       /*                            */
*                              INVPARM = ON;  /* SET INVALID PARM.   */
         OI    INVPARM(BUFAD),B'00001000'                       02S0740
*                              PARMNUM = ZERO;/* EXIT THIS KEYWORD.  */
         MVI   PARMNUM(BUFAD),X'00'                             02S0741
*                              PARMGRP = OFF; /* RESET PARM GROUP.   */
         NI    PARMGRP(BUFAD),B'11111011'                       02S0742
*                            END;      /*                            */
*                          ELSE;       /* KEYWORD COMPLETION OK.     */
@RF00738 DS    0H                                               02S0745
*                        IF STOPCODE=BLANK                      02S0745
*                          THEN        /* CHECK FOR STATEMENT DONE.  */
         SLR   @10,@10                                          02S0745
         IC    @10,ARGMT(,BUFAD)                                02S0745
         LA    @10,FBYTE-1(@10)                                 02S0745
         CLI   STOPCODE(@10),X'11'                              02S0745
         BNE   @RF00745                                         02S0745
*                            SCANINP = OFF;                     02S0746
         NI    SCANINP(BUFAD),B'10111111'                       02S0746
*                          ELSE        /* CHECK FOR CONTINUATION.    */
*                            IF COL(ONE)=BLAN                   02S0747
*                             & CONTINUE=ON                     02S0747
*                              THEN    /* CONTINUATION EXPECTED.     */
         B     @RC00745                                         02S0747
@RF00745 ICM   @10,7,CC(BUFAD)                                  02S0747
         CLI   COL(@10),C' '                                    02S0747
         BNE   @RF00747                                         02S0747
         TM    CONTINUE(BUFAD),B'00001000'                      02S0747
         BNO   @RF00747                                         02S0747
*                                CALL GETCARDN;/* SO GET IT.         */
         BAL   @14,GETCARDN                                     02S0748
*                      END;            /*                            */
*                    ELSE              /* INVALID STOP FLAG.         */
*                      IF STOPCODE = RPARN                      02S0750
*                        THEN          /* RIGHT PARENTHESIS.         */
         B     @RC00735                                         02S0750
@RF00735 SLR   @10,@10                                          02S0750
         IC    @10,ARGMT(,BUFAD)                                02S0750
         LA    @10,FBYTE-1(@10)                                 02S0750
         CLI   STOPCODE(@10),X'40'                              02S0750
         BNE   @RF00750                                         02S0750
*                          UNBAL = ON; /* SET UNBALANCED PAREN.      */
         OI    UNBAL(BUFAD),B'00000010'                         02S0751
*                        ELSE          /* DO NOT KNOW WHAT IT IS.    */
*                          INVCHAR = ON;                        02S0752
         B     @RC00750                                         02S0752
@RF00750 OI    INVCHAR(BUFAD),B'00000100'                       02S0752
*                  PARMNUM = ZERO;     /* EXIT THIS KEY WORD.        */
@RC00750 DS    0H                                               02S0753
@RC00735 MVI   PARMNUM(BUFAD),X'00'                             02S0753
*                END;                  /*                            */
*                  END;                /* END DELIMITER ANALYSIS.    */
*                ELSE                  /* ERROR IN PARM GROUP.       */
*                  DO;                 /*                            */
         B     @RC00698                                         01S0756
@RF00698 DS    0H                                               01S0757
*                    INVDLM = ON;      /* INDICATE BAD PARAMETER.    */
         OI    INVDLM(BUFAD),B'10000000'                        01S0757
*                    PARMNUM = ZERO;   /* RESET TO EXIT KEYWORD.     */
         MVI   PARMNUM(BUFAD),X'00'                             01S0758
*                  END;                /*                            */
*            ELSE                      /* PARAMETER HERE.            */
*              IF PARMGRP = OFF        /* CHECK FOR VALID            */
*               × FLDSW = ON           /*  PARAMETER                 */
*               × PRECOL = LPARN       /*  POSITION.                 */
*                THEN                  /*                            */
         B     @RC00697                                         01S0760
@RF00697 TM    FLDSW(BUFAD),B'00001000'                         01S0760
         BNZ   @RT00760                                         01S0760
         TM    PARMGRP(BUFAD),B'00000100'                       01S0760
         BNO   @RT00760                                         01S0760
         CLI   PRECOL(BUFAD),X'80'                              01S0760
         BNE   @RF00760                                         01S0760
@RT00760 DS    0H                                               01S0761
*                  DO;                 /* COULD BE A PARAMETER.      */
*/*********************************************************************
**                                                                    *
**  THIS SEGMENT IS ENTERED WHEN A DELIMITING CHARACTER IS FOUND      *
**  AFTER FINDING A VALID PARAMETER CHARACTER STRING.                 *
**                                                                    *
**********************************************************************/
*                                                               02S0762
*        IF PARMSIZE  =< KPLEN(PARMNUM)/* CHECK FOR LENGTH RANGE.    */
*           × (KPLEN(PARMNUM) = ALBIT                           02S0762
*              & PARMSIZE < LENGTH(CARDDATA))                   02S0762
*          THEN                        /*                            */
         SLR   @10,@10                                          02S0762
         ICM   @10,3,PARMSIZE(BUFAD)                            02S0762
         SLR   @09,@09                                          02S0762
         IC    @09,PARMNUM(,BUFAD)                              02S0762
         ALR   @09,@09                                          02S0762
         SLR   @02,@02                                          02S0762
         IC    @02,ACTIVKEY(,BUFAD)                             02S0762
         MH    @02,@CH00359                                     02S0762
         LA    @02,KPARM-20(@02)                                02S0762
         BCTR  @02,0                                            02S0762
         SLR   @15,@15                                          02S0762
         IC    @15,KPLEN-1(@09,@02)                             02S0762
         CR    @10,@15                                          02S0762
         BNH   @RT00762                                         02S0762
         CH    @15,@CH00827                                     02S0762
         BNE   @RF00762                                         02S0762
         CH    @10,@CH00223                                     02S0762
         BNL   @RF00762                                         02S0762
@RT00762 DS    0H                                               02S0763
*            IF PRNCNT = ZERO          /* COULD BE AT THE BEGINNING  */
*             × STOPCODE = LPARN                                02S0763
*              THEN                    /*  OF A PARAMETER GROUP.     */
         ICM   @10,3,PRNCNT(BUFAD)                              02S0763
         BZ    @RT00763                                         02S0763
         SLR   @10,@10                                          02S0763
         IC    @10,ARGMT(,BUFAD)                                02S0763
         LA    @10,FBYTE-1(@10)                                 02S0763
         CLI   STOPCODE(@10),X'80'                              02S0763
         BNE   @RF00763                                         02S0763
@RT00763 DS    0H                                               02S0764
*                IF STOPCODE = RPARN   /* RIGHT PARENTHESIS          */
*                 × STOPCODE = LPARN                            02S0764
*                  THEN                /*  ARE INVALID HERE          */
         SLR   @10,@10                                          02S0764
         IC    @10,ARGMT(,BUFAD)                                02S0764
         LA    @10,FBYTE-1(@10)                                 02S0764
         CLI   STOPCODE(@10),X'40'                              02S0764
         BE    @RT00764                                         02S0764
         CLI   STOPCODE(@10),X'80'                              02S0764
         BNE   @RF00764                                         02S0764
@RT00764 DS    0H                                               02S0765
*                    DO;                                        02S0765
*                      INVDLM = ON;    /* SET INVALID DELIMITER.     */
         OI    INVDLM(BUFAD),B'10000000'                        02S0766
*                      PARMNUM = ZERO; /* EXIT THIS KEYWORD.         */
         MVI   PARMNUM(BUFAD),X'00'                             02S0767
*                    END;              /*                            */
*                  ELSE                /* ONLY COMMA OR BLANK        */
*                    IF STOPFLAG=ONEH  /*  IS ALLOWED TO             */
*                      THEN            /*  DELIMIT HERE.             */
         B     @RC00764                                         02S0769
@RF00764 SLR   @10,@10                                          02S0769
         IC    @10,ARGMT(,BUFAD)                                02S0769
         LA    @10,FUNCTION-1(@10)                              02S0769
         TM    STOPFLAG(@10),B'00010000'                        02S0769
         BNO   @RF00769                                         02S0769
         TM    STOPFLAG(@10),B'11100000'                        02S0769
         BNZ   @RF00769                                         02S0769
*                        DO;           /*                            */
*                          CALL CONVRTER;/* CONVERT PARAMETER.       */
         BAL   @14,CONVRTER                                     02S0771
*                          KWDCOMP = ON;/* SET KEYWORD COPLETE.      */
         OI    KWDCOMP(BUFAD),B'00000001'                       02S0772
*                          IF STOPCODE=BLANK                    02S0773
*                            THEN      /* CHCK FOR STATEMENT COMPLETE*/
         SLR   @10,@10                                          02S0773
         IC    @10,ARGMT(,BUFAD)                                02S0773
         LA    @10,FBYTE-1(@10)                                 02S0773
         CLI   STOPCODE(@10),X'11'                              02S0773
         BNE   @RF00773                                         02S0773
*                              SCANINP = OFF;/* SET TO EXIT SCAN.    */
         NI    SCANINP(BUFAD),B'10111111'                       02S0774
*                            ELSE;     /*                            */
@RF00773 DS    0H                                               02S0776
*                        END;          /*                            */
*                      ELSE            /*                            */
*                        DO;           /* DO NOT KNOW WHAT IT IS.    */
         B     @RC00769                                         02S0777
@RF00769 DS    0H                                               02S0778
*                          INVCHAR = ON; /* INVALID CHARACTER.       */
         OI    INVCHAR(BUFAD),B'00000100'                       02S0778
*                          PARMNUM = ZERO;/* EXIT THIS KEYWORD.      */
         MVI   PARMNUM(BUFAD),X'00'                             02S0779
*                        END;          /*                            */
*              ELSE                    /* SCAN IS IN THE MIDST OF A  */
*                IF STOPCODE = RPARN   /*  PARAMETER GROUP           */
*                  THEN                /*                            */
         B     @RC00763                                         02S0781
@RF00763 SLR   @10,@10                                          02S0781
         IC    @10,ARGMT(,BUFAD)                                02S0781
         LA    @10,FBYTE-1(@10)                                 02S0781
         CLI   STOPCODE(@10),X'40'                              02S0781
         BNE   @RF00781                                         02S0781
*                    DO;               /*                            */
*                      FLDSW = OFF;    /* RESET IN GROUP SWITCH.     */
         NI    FLDSW(BUFAD),B'11110111'                         02S0783
*                      PRNCNT=PRNCNT-ONE;/* INCREMENT PAREN CNT      */
         LH    @10,PRNCNT(,BUFAD)                               02S0784
         BCTR  @10,0                                            02S0784
         STH   @10,PRNCNT(,BUFAD)                               02S0784
*                      CALL CONVRTER;  /* CONVERT PARAMETER.         */
         BAL   @14,CONVRTER                                     02S0785
*                      IF PRNCNT = ZERO /* COULD BE LAST GROUP.      */
*                        THEN          /*                            */
         ICM   @10,3,PRNCNT(BUFAD)                              02S0786
         BNZ   @RF00786                                         02S0786
*                          PARMGRP = OFF;/* END OF THIS GROUP.       */
         NI    PARMGRP(BUFAD),B'11111011'                       02S0787
*                    END;              /*                            */
*                  ELSE                /*                            */
*                    IF STOPCODE =COMMA /* COMMA OK HERE             */
*                      THEN            /*                            */
         B     @RC00781                                         02S0789
@RF00781 SLR   @10,@10                                          02S0789
         IC    @10,ARGMT(,BUFAD)                                02S0789
         LA    @10,FBYTE-1(@10)                                 02S0789
         CLI   STOPCODE(@10),X'10'                              02S0789
         BNE   @RF00789                                         02S0789
*                        DO;           /*                            */
*                          FLDSW = ON; /* INDICATE IN PARAMETER GROUP*/
         OI    FLDSW(BUFAD),B'00001000'                         02S0791
*                          CALL CONVRTER;/* CONVERT PARAMETER        */
         BAL   @14,CONVRTER                                     02S0792
*                            IF COL(ONE)=BLAN                   02S0793
*                             & CONTINUE=ON                     02S0793
*                              THEN    /* CHECK FOR CONTINUATION.    */
         ICM   @10,7,CC(BUFAD)                                  02S0793
         CLI   COL(@10),C' '                                    02S0793
         BNE   @RF00793                                         02S0793
         TM    CONTINUE(BUFAD),B'00001000'                      02S0793
         BNO   @RF00793                                         02S0793
*                                CALL GETCARDN;/* GET CONTINUATION.  */
         BAL   @14,GETCARDN                                     02S0794
*                        END;          /*                            */
*                      ELSE            /*                            */
*                        DO;           /* DO NOT KNOW WHAT IT IS.    */
         B     @RC00789                                         02S0796
@RF00789 DS    0H                                               02S0797
*                          INVCHAR = ON; /* INVALID CHARACTER        */
         OI    INVCHAR(BUFAD),B'00000100'                       02S0797
*                          PARMNUM = ZERO;/* EXIT THIS KEYWORD.      */
         MVI   PARMNUM(BUFAD),X'00'                             02S0798
*                        END;          /*                            */
*          ELSE                        /*                            */
*            DO;                       /*                            */
         B     @RC00762                                         02S0800
@RF00762 DS    0H                                               02S0801
*              INVPARM = ON;           /* INVALID PARAMETER.         */
         OI    INVPARM(BUFAD),B'00001000'                       02S0801
*              PARMNUM = ZERO;         /* RESET PARAMETER NUMBER     */
         MVI   PARMNUM(BUFAD),X'00'                             02S0802
*              PARMSIZE = ZERO;        /*  AND PARAMETER SIZE.       */
         SLR   @10,@10                                          02S0803
         STH   @10,PARMSIZE(,BUFAD)                             02S0803
*            END;                      /*                            */
*                  END;                /* END PARAMETER ANALYSIS.    */
*                ELSE                  /* MUST BE INVALID.           */
*                  DO;                 /*                            */
         B     @RC00760                                         01S0806
@RF00760 DS    0H                                               01S0807
*                    INVPARM = ON;     /* INDICATE INVALID.          */
         OI    INVPARM(BUFAD),B'00001000'                       01S0807
*                    PARMNUM = ZERO;   /* RESET TO EXIT KEYWORD.     */
         MVI   PARMNUM(BUFAD),X'00'                             01S0808
*                  END;                /*                            */
*          PRECOL = STOPCODE;          /* SAVE LAST STOPCODE.        */
@RC00760 DS    0H                                               01S0810
@RC00697 SLR   @10,@10                                          01S0810
         IC    @10,ARGMT(,BUFAD)                                01S0810
         LA    @10,FBYTE-1(@10)                                 01S0810
         MVC   PRECOL(1,BUFAD),STOPCODE(@10)                    01S0810
*        END;                          /* END PARAMETER DETERMINATION*/
@DE00694 CLI   STATUS3(BUFAD),0                                 01S0811
         BE    @DL00694                                         01S0811
*  END FINDPARM;                       /* RETURN TO CALLER.          */
@EL00019 DS    0H                                               01S0812
@EF00019 DS    0H                                               01S0812
@ER00019 L     @14,@SA00019                                     01S0812
         BR    @14                                              01S0812
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS ROUTINE WILL DETERMINE WHICH KIND OF CONVERSION IS           *
**  REQUIRED FOR EACH PARAMETER AND INVOKE THE APPROPRIATE            *
**  CONVERSION ROUTINE.                                               *
**                                                                    *
**********************************************************************/
*CONVRTER:                                                      01S0813
*  PROCEDURE OPTIONS(SAVE(R14));                                01S0813
CONVRTER ST    @14,@SA00020                                     01S0813
*        IF PARMNUM =< KCNT(ACTIVKEY)  /* CHECK FOR TO MANY          */
*          THEN                        /*  PARAMETERS.               */
         SLR   @10,@10                                          01S0814
         IC    @10,PARMNUM(,BUFAD)                              01S0814
         SLR   @09,@09                                          01S0814
         IC    @09,ACTIVKEY(,BUFAD)                             01S0814
         MH    @09,@CH00359                                     01S0814
         SLR   @02,@02                                          01S0814
         IC    @02,KCNT-20(@09)                                 01S0814
         CR    @10,@02                                          01S0814
         BH    @RF00814                                         01S0814
*            IF KDEC(PARMNUM)=ON       /* CHECK FOR DECIMAL REQUEST. */
*              THEN                    /* PARAMETER REQUIRES         */
         ALR   @10,@10                                          01S0815
         LA    @09,KPARM-20(@09)                                01S0815
         ALR   @09,@10                                          01S0815
         BCTR  @09,0                                            01S0815
         BCTR  @09,0                                            01S0815
         TM    KDEC(@09),B'10000000'                            01S0815
         BNO   @RF00815                                         01S0815
*                CALL CONVERT;         /*  DECIMAL CONVERSION.       */
         BAL   @14,CONVERT                                      01S0816
*              ELSE                    /*                            */
*                IF KHEX(PARMNUM) = ON /* CHECK HEXADECIMAL REQUEST. */
*                  THEN                /* PARAMETER REQUIRES         */
         B     @RC00815                                         01S0817
@RF00815 SLR   @10,@10                                          01S0817
         IC    @10,PARMNUM(,BUFAD)                              01S0817
         ALR   @10,@10                                          01S0817
         SLR   @09,@09                                          01S0817
         IC    @09,ACTIVKEY(,BUFAD)                             01S0817
         MH    @09,@CH00359                                     01S0817
         LA    @09,KPARM-20(@09)                                01S0817
         ALR   @09,@10                                          01S0817
         BCTR  @09,0                                            01S0817
         BCTR  @09,0                                            01S0817
         TM    KHEX(@09),B'01000000'                            01S0817
         BNO   @RF00817                                         01S0817
*                    CALL CONVERTX;    /*  HEXADECIMAL CONVERSION.   */
         BAL   @14,CONVERTX                                     01S0818
*                  ELSE;               /* NO CONVERSION.             */
@RF00817 DS    0H                                               01S0820
*          ELSE                        /* TOO MANY PARAMETERS        */
*            INVPARM = ON;             /*  IS INVALID.               */
         B     @RC00814                                         01S0820
@RF00814 OI    INVPARM(BUFAD),B'00001000'                       01S0820
*        IF INVPARM = ON               /* ANY PARAMETER ERROR WILL   */
*          THEN                        /*  CAUSE SCANNING TO STOP    */
@RC00814 TM    INVPARM(BUFAD),B'00001000'                       01S0821
         BNO   @RF00821                                         01S0821
*            PARMNUM = ZERO;           /*  FOR THIS KEYWORD.         */
         MVI   PARMNUM(BUFAD),X'00'                             01S0822
*          ELSE                        /* NO ERROR,                  */
*            DO;                       /*                            */
         B     @RC00821                                         01S0823
@RF00821 DS    0H                                               01S0824
*              FOUND = ON;             /* A PARAMETER WAS FOUND.     */
         OI    FOUND(BUFAD),B'01000000'                         01S0824
*              PARMGRP = ON;           /* INDICATE IN PARAMETER GROUP*/
         OI    PARMGRP(BUFAD),B'00000100'                       01S0825
*            END;                      /*                            */
*  END CONVRTER;                       /* RETURN TO CALLER.          */
@EL00020 DS    0H                                               01S0827
@EF00020 DS    0H                                               01S0827
@ER00020 L     @14,@SA00020                                     01S0827
         BR    @14                                              01S0827
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS ROUTINE WILL CONVERT HEXADECIMAL CHARACTERS TO FOUR          *
**  BIT HEXADECIMAL HALF BYTES, VALIDATING THAT EACH CHARACTER        *
**  IS INDEED A HEXADECIMAL CHARACTER.                                *
**                                                                    *
**********************************************************************/
*CONVERTX:                                                      01S0828
*  PROCEDURE OPTIONS(SAVE(R14));                                01S0828
*                                                               01S0828
CONVERTX ST    @14,12(,@13)                                     01S0828
*        HEXERR = OFF;                 /* RESET ERROR INDICATOR.     */
         NI    HEXERR(BUFAD),B'11101111'                        01S0829
*        IF (PARMSIZE & ODD) = ZERO    /* HEX CHARACTERS MUST BE     */
*         & PARMSIZE ^= ZERO           /*  NOT ZERO AND AN           */
*          THEN                        /*  EVEN NUMBER OF BYTES.     */
         SLR   @10,@10                                          01S0830
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0830
         LR    @09,@10                                          01S0830
         N     @09,@CF00061                                     01S0830
         LTR   @09,@09                                          01S0830
         BNZ   @RF00830                                         01S0830
         LTR   @10,@10                                          01S0830
         BZ    @RF00830                                         01S0830
*            DO;                       /*                            */
*              DO                      /*                            */
*               CNT = TWO              /* TWO CHARS FROM CARD WILL   */
*               BY TWO                 /*  MAKE ONE BYTE OF HEX.     */
*               TO PARMSIZE            /*                            */
*               WHILE TRODD ^= INVHEX  /* CHECKING ODD CHARACTER.    */
*                  & TREVEN ^= INVHEX; /* CHECKING EVEN CHARACTER.   */
         LA    CNT,2                                            01S0832
         B     @DE00832                                         01S0832
@DL00832 LA    @10,TRANS                                        01S0832
         SLR   @09,@09                                          01S0832
         IC    @09,CARDDATA-2(CNT,BUFAD)                        01S0832
         ALR   @09,@10                                          01S0832
         CLI   TRODD(@09),X'C3'                                 01S0832
         BE    @DC00832                                         01S0832
         SLR   @15,@15                                          01S0832
         IC    @15,CARDDATA-1(CNT,BUFAD)                        01S0832
         ALR   @15,@10                                          01S0832
         CLI   TREVEN(@15),X'C3'                                01S0832
         BE    @DC00832                                         01S0832
*                                      /* TRANSLATE LEFT HALF.       */
*                CARDDATA(CNT/TWO) = TRODD & LHALF;             01S0833
         LA    @15,2                                            01S0833
         LR    @00,CNT                                          01S0833
         SRDA  @00,32                                           01S0833
         DR    @00,@15                                          01S0833
         ALR   @01,BUFAD                                        01S0833
         MVC   @TS00001(1),TRODD(@09)                           01S0833
         NI    @TS00001,X'F0'                                   01S0833
         MVC   CARDDATA-1(1,@01),@TS00001                       01S0833
*                                      /* TRANSLATE RIGHT HALF.      */
*                CARDDATA(CNT/TWO) =                            01S0834
*                 CARDDATA(CNT/TWO) × (TREVEN & RHALF);         01S0834
         LR    @00,CNT                                          01S0834
         SRDA  @00,32                                           01S0834
         DR    @00,@15                                          01S0834
         ALR   @01,BUFAD                                        01S0834
         LR    @04,CNT                                          01S0834
         SRDA  @04,32                                           01S0834
         DR    @04,@15                                          01S0834
         SLR   @09,@09                                          01S0834
         IC    @09,CARDDATA-1(CNT,BUFAD)                        01S0834
         ALR   @10,@09                                          01S0834
         MVC   @TS00001(1),TREVEN(@10)                          01S0834
         NI    @TS00001,X'0F'                                   01S0834
         ALR   @05,BUFAD                                        01S0834
         OC    @TS00001(1),CARDDATA-1(@05)                      01S0834
         MVC   CARDDATA-1(1,@01),@TS00001                       01S0834
*                IF CARDDATA(CNT/TWO) = ALBIT                   01S0835
*                  THEN                /* (FF) INVALID SOMETIMES.    */
         LR    @00,CNT                                          01S0835
         SRDA  @00,32                                           01S0835
         DR    @00,@15                                          01S0835
         ALR   @01,BUFAD                                        01S0835
         CLI   CARDDATA-1(@01),X'FF'                            01S0835
         BNE   @RF00835                                         01S0835
*                    HEXERR = ON;      /* SO SAY SO.                 */
         OI    HEXERR(BUFAD),B'00010000'                        01S0836
*                  ELSE;               /*                            */
@RF00835 DS    0H                                               01S0838
*              END;                    /* END OF TRANSLATE.          */
         AH    CNT,@CH00058                                     01S0838
@DE00832 SLR   @10,@10                                          01S0838
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0838
         CR    CNT,@10                                          01S0838
         BNH   @DL00832                                         01S0838
@DC00832 DS    0H                                               01S0839
*              IF CNT ^> PARMSIZE      /* CHECK FOR INCOMPLETE       */
*                THEN                  /*  TRANSLATION.              */
         SLR   @10,@10                                          01S0839
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0839
         CR    CNT,@10                                          01S0839
         BH    @RF00839                                         01S0839
*                  INVPARM = ON;       /* MEANS CHAR NOT HEX.        */
         OI    INVPARM(BUFAD),B'00001000'                       01S0840
*                ELSE                  /* ADJUST PARAMETER SIZE.     */
*                  PARMSIZE = PARMSIZE/TWO;                     01S0841
         B     @RC00839                                         01S0841
@RF00839 SLR   @10,@10                                          01S0841
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0841
         SRL   @10,1                                            01S0841
         STH   @10,PARMSIZE(,BUFAD)                             01S0841
*            END;                      /*                            */
*          ELSE                        /* ODD NUMBER OF BYTES.       */
*            INVPARM = ON;             /* MEANS INVALID PARAMETER.   */
         B     @RC00830                                         01S0843
@RF00830 OI    INVPARM(BUFAD),B'00001000'                       01S0843
*  END CONVERTX;                       /* RETURN TO CALLER.          */
@EL00021 DS    0H                                               01S0844
@EF00021 DS    0H                                               01S0844
@ER00021 L     @14,12(,@13)                                     01S0844
         BR    @14                                              01S0844
         EJECT
*/*********************************************************************
**                                                                    *
**  THIS ROUTINE WILL VALIDATE THAT THE SUBJECT FIELD IS A            *
**  NUMERIC VALUE, THEN CONVERT THAT EBCDIC VALUE TO THE BINARY       *
**  REPRESENTATION OF THAT VALUE.                                     *
**                                                                    *
**********************************************************************/
*CONVERT:                                                       01S0845
*  PROCEDURE OPTIONS(SAVE(R14));                                01S0845
CONVERT  ST    @14,@SA00022                                     01S0845
*        DO                            /* VALIDATE CHARACTER FIELD.  */
*         HCNT = ONE                   /* FIELD IS                   */
*         TO PARMSIZE                  /*  FOUR CHARACTERS.          */
*         WHILE CARDDATA(HCNT) =< X9   /* EACH CHAR VALUE MUST BE    */
*             & CARDDATA(HCNT) => X0;  /*  A NUMERIC.                */
         LA    HCNT,1                                           01S0846
         B     @DE00846                                         01S0846
@DL00846 LR    @10,BUFAD                                        01S0846
         ALR   @10,HCNT                                         01S0846
         CLC   CARDDATA-1(1,@10),X9                             01S0846
         BH    @DC00846                                         01S0846
         LR    @10,BUFAD                                        01S0846
         ALR   @10,HCNT                                         01S0846
         CLC   CARDDATA-1(1,@10),X0                             01S0846
         BL    @DC00846                                         01S0846
*        END;                          /* END VALIDATION.            */
         AL    HCNT,@CF00061                                    01S0847
@DE00846 SLR   @10,@10                                          01S0847
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0847
         CR    HCNT,@10                                         01S0847
         BNH   @DL00846                                         01S0847
@DC00846 DS    0H                                               01S0848
*        IF HCNT > PARMSIZE            /* EXCEEDED COUNT INDICATES   */
*         & PARMSIZE ^= ZERO           /*  ALL OK.                   */
*         & PARMSIZE < SIXTN           /* MAX OF FIFTEEN CHARS.      */
*          THEN                        /*  A VALID NUMERIC VALUE.    */
         SLR   @10,@10                                          01S0848
         ICM   @10,3,PARMSIZE(BUFAD)                            01S0848
         CR    HCNT,@10                                         01S0848
         BNH   @RF00848                                         01S0848
         LTR   @10,@10                                          01S0848
         BZ    @RF00848                                         01S0848
         CH    @10,@CH00117                                     01S0848
         BNL   @RF00848                                         01S0848
*            DO;                       /*                            */
*              RESPECIFY (DB,R14) RESTRICTED;                   01S0850
*              DB = PARMSIZE - ONE;    /* NUMBER FOR PACK INSTRUCTION*/
         BCTR  @10,0                                            01S0851
         LR    DB,@10                                           01S0851
*              R14 = ADDR(CARDDATA);                            01S0852
         LA    R14,CARDDATA(,BUFAD)                             01S0852
*              GEN REFS(PACKIT)                                 01S0853
*               (EX  DB,PACKIT);       /* EXECUTE A PACK INSTRUCTION.*/
         EX  DB,PACKIT
*              RESPECIFY (DB,R14) UNRESTRICTED;                 01S0854
*              CVB(FWORK,DWORK);       /* CONVERT TO BINARY.         */
         CVB   @10,DWORK(,BUFAD)                                01S0855
         ST    @10,FWORK(,BUFAD)                                01S0855
*            END;                      /*                            */
*          ELSE                        /* ENTER HERE IF INVALID.     */
*            INVPARM = ON;             /* INDICATE INVALID.          */
         B     @RC00848                                         01S0857
@RF00848 OI    INVPARM(BUFAD),B'00001000'                       01S0857
*        IF KSPEC(PARMNUM) = OFF       /* CHECK FOR ZEROES PERMITTED */
*         & FWORK = ZERO               /* CHECK FOR ZERO CODED.      */
*          THEN                        /*                            */
@RC00848 SLR   @10,@10                                          01S0858
         IC    @10,PARMNUM(,BUFAD)                              01S0858
         ALR   @10,@10                                          01S0858
         SLR   @09,@09                                          01S0858
         IC    @09,ACTIVKEY(,BUFAD)                             01S0858
         MH    @09,@CH00359                                     01S0858
         LA    @09,KPARM-20(@09)                                01S0858
         ALR   @09,@10                                          01S0858
         BCTR  @09,0                                            01S0858
         BCTR  @09,0                                            01S0858
         TM    KSPEC(@09),B'00010000'                           01S0858
         BNZ   @RF00858                                         01S0858
         ICM   @10,15,FWORK(BUFAD)                              01S0858
         BNZ   @RF00858                                         01S0858
*            INVPARM = ON;             /* INDICATE ERROR             */
         OI    INVPARM(BUFAD),B'00001000'                       01S0859
*          ELSE;                       /*                            */
@RF00858 DS    0H                                               01S0861
*  END;                                /* RETURN TO CALLER.          */
*                                                               01S0861
*                                                               01S0861
@EL00022 DS    0H                                               01S0861
@EF00022 DS    0H                                               01S0861
@ER00022 L     @14,@SA00022                                     01S0861
         BR    @14                                              01S0861
@PB00022 DS    0H                                               01S0862
*              GEN DATA  DEFS(PACKIT);                          01S0862
*                                                               01S0862
*                                                               01S0862
*  END IEBISCAN                        /* RETURN TO OPERATION.       */
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (IEBIBLKS)                                        *
*/*@INCLUDE SYSUT5  (OPSCAN  )                                        *
*/*@INCLUDE SYSUT5  (KEYWORD )                                        *
*/*@INCLUDE SYSUT5  (REPSCAN )                                        *
*/*@INCLUDE SYSUT5  (KWDEXCEP)                                        *
*/*@INCLUDE SYSUT5  (SAVECODE)                                        *
*/*@INCLUDE SYSUT5  (SAVECODE)                                        *
*/*@INCLUDE SYSUT5  (SAVECODE)                                        *
*/*@INCLUDE SYSUT5  (SAVECODE)                                        *
*/*@INCLUDE SYSUT5  (SAVECODE)                                        *
*/*@INCLUDE SYSUT5  (SAVECODE)                                        *
*/*@INCLUDE SYSUT5  (SAVECODE)                                        *
*/*@INCLUDE SYSUT5  (SAVECODE)                                        *
*/*@INCLUDE SYSUT5  (SAVECODE)                                        *
*/*@INCLUDE SYSUT5  (SAVECODE)                                        *
*/*@INCLUDE SYSUT5  (SAVECODE)                                        *
*/*@INCLUDE SYSUT5  (SAVECODE)                                        *
*/*@INCLUDE SYSUT5  (SAVECODE)                                        *
*/*@INCLUDE SYSUT5  (SAVECODE)                                        *
*/*@INCLUDE SYSUT5  (SAVECODE)                                        *
*/*@INCLUDE SYSUT5  (TEXTDATA)                                        *
*/*@INCLUDE SYSUT5  (DLMCK1  )                                        *
*/*@INCLUDE SYSUT5  (DLMCK2  )                                        *
*;                                                              01S0863
@EL00001 DS    0H                                               01S0863
@EF00001 DS    0H                                               01S0863
@ER00001 LM    @14,@12,12(@13)                                  01S0863
         BR    @14                                              01S0863
@DATA    DS    0H
@CH00480 DC    H'0'
@CH00058 DC    H'2'
@CH00112 DC    H'3'
@CH00051 DC    H'4'
@CH00187 DC    H'6'
@CH00049 DC    H'8'
@CH00344 DC    H'10'
@CH00033 DC    H'12'
@CH00157 DC    H'15'
@CH00117 DC    H'16'
@CH00359 DC    H'20'
@CH00054 DC    H'24'
@CH00378 DC    H'30'
@CH00247 DC    H'64'
@CH00195 DC    H'120'
@CH00889 DC    H'132'
@CH00281 DC    H'204'
@CH00550 DC    H'255'
@CH00220 DC    H'256'
@CH00897 DC    H'408'
@CH00223 DC    H'414'
@CH00254 DC    H'1024'
@CH00827 DC    XL2'FF'
@SC01023 CLC   TABLENAM(0,@10),CARDDATA(BUFAD)
@SC01029 CLC   0(0,@01),CARDDATA(BUFAD)
@SM01031 MVC   LASTKEY(0,BUFAD),CARDDATA(BUFAD)
@SM01035 MVC   BSUFIX(0,BUFAD),CARDDATA(BUFAD)
@SC01042 CLC   CARDDATA(0,BUFAD),@CC00456
@SM01044 MVC   GRAFMODN-4(0,@10),CARDDATA(BUFAD)
@SM01049 MVC   TEXTDATA(0,BUFFPTR),CARDDATA(BUFAD)
@SM01051 MVC   TEXTDATA(0,@10),TEXTDATA(BUFFPTR)
         DS    0F
@SA00018 DS    1F
@SA00019 DS    1F
@SA00022 DS    1F
@SA00020 DS    1F
@TF00001 DS    F
         DS    0F
@CF00061 DC    F'1'
@CH00061 EQU   @CF00061+2
@CF00037 DC    F'5'
@CF01039 DC    F'-23'
@CF01034 DC    F'-22'
@CF01026 DC    F'-21'
@CF01021 DC    F'-20'
@CF01022 DC    F'-8'
@CF01040 DC    F'-4'
@CF01041 DC    F'-3'
@CV00034 DC    V(IEBIMSGS)
         DS    0D
@TS00001 DS    CL1
@CC00924 DC    C'BAD NAME'
@CC00456 DC    C'DELETE'
         DS    CL1
KEYTAB   DS    CL300
         ORG   KEYTAB
KELEM    DS    CL20
         ORG   KELEM
@NM00024 DC    AL1(3)
@NM00025 DC    AL3(LPI)
@NM00026 DC    B'11100000'
@NM00027 DC    AL1(2)
@NM00028 DC    B'10000000'
@NM00029 DC    AL1(2)
@NM00030 DC    B'10000000'
@NM00031 DC    AL1(3)
@NM00032 DC    B'00000000'
@NM00033 DC    AL1(0)
@NM00034 DC    CL8'LPI'
         ORG   KEYTAB+20
@NM00035 DS    CL20
         ORG   @NM00035
@NM00036 DC    AL1(4)
@NM00037 DC    AL3(SIZE)
@NM00038 DC    B'00000000'
@NM00039 DC    AL1(1)
@NM00040 DC    B'10000000'
@NM00041 DC    AL1(3)
@NM00042 DC    B'00000000'
@NM00043 DC    AL1(0)
@NM00044 DC    B'00000000'
@NM00045 DC    AL1(0)
@NM00046 DC    CL8'SIZE'
         ORG   KEYTAB+40
@NM00047 DS    CL20
         ORG   @NM00047
@NM00048 DC    AL1(6)
@NM00049 DC    AL3(COPIES)
@NM00050 DC    B'11000000'
@NM00051 DC    AL1(2)
@NM00052 DC    B'10000000'
@NM00053 DC    AL1(3)
@NM00054 DC    B'10000000'
@NM00055 DC    AL1(3)
@NM00056 DC    B'00000000'
@NM00057 DC    AL1(0)
@NM00058 DC    CL8'COPIES'
         ORG   KEYTAB+60
@NM00059 DS    CL20
         ORG   @NM00059
@NM00060 DC    AL1(5)
@NM00061 DC    AL3(LINES)
@NM00062 DC    B'11000000'
@NM00063 DC    AL1(2)
@NM00064 DC    B'10000000'
@NM00065 DC    AL1(3)
@NM00066 DC    B'10000000'
@NM00067 DC    AL1(3)
@NM00068 DC    B'00000000'
@NM00069 DC    AL1(0)
@NM00070 DC    CL8'LINES'
         ORG   KEYTAB+80
@NM00071 DS    CL20
         ORG   @NM00071
@NM00072 DC    AL1(3)
@NM00073 DC    AL3(POS)
@NM00074 DC    B'00000000'
@NM00075 DC    AL1(1)
@NM00076 DC    B'10000000'
@NM00077 DC    AL1(3)
@NM00078 DC    B'00000000'
@NM00079 DC    AL1(0)
@NM00080 DC    B'00000000'
@NM00081 DC    AL1(0)
@NM00082 DC    CL8'POS'
         ORG   KEYTAB+100
@NM00083 DS    CL20
         ORG   @NM00083
@NM00084 DC    AL1(4)
@NM00085 DC    AL3(TEXT)
@NM00086 DC    B'11100000'
@NM00087 DC    AL1(2)
@NM00088 DC    B'00000000'
@NM00089 DC    AL1(4)
@NM00090 DC    B'00000000'
@NM00091 DC    AL1(255)
@NM00092 DC    B'00000000'
@NM00093 DC    AL1(0)
@NM00094 DC    CL8'TEXT'
         ORG   KEYTAB+120
@NM00095 DS    CL20
         ORG   @NM00095
@NM00096 DC    AL1(3)
@NM00097 DC    AL3(REF)
@NM00098 DC    B'11100000'
@NM00099 DC    AL1(2)
@NM00100 DC    B'10000000'
@NM00101 DC    AL1(3)
@NM00102 DC    B'01000000'
@NM00103 DC    AL1(2)
@NM00104 DC    B'00000000'
@NM00105 DC    AL1(0)
@NM00106 DC    CL8'REF'
         ORG   KEYTAB+140
@NM00107 DS    CL20
         ORG   @NM00107
@NM00108 DC    AL1(3)
@NM00109 DC    AL3(GCM)
@NM00110 DC    B'00000000'
@NM00111 DC    AL1(1)
@NM00112 DC    B'00100000'
@NM00113 DC    AL1(4)
@NM00114 DC    B'00000000'
@NM00115 DC    AL1(0)
@NM00116 DC    B'00000000'
@NM00117 DC    AL1(0)
@NM00118 DC    CL8'GCM'
         ORG   KEYTAB+160
@NM00119 DS    CL20
         ORG   @NM00119
@NM00120 DC    AL1(7)
@NM00121 DC    AL3(GCMLIST)
@NM00122 DC    B'11000000'
@NM00123 DC    AL1(1)
@NM00124 DC    B'00100000'
@NM00125 DC    AL1(7)
@NM00126 DC    B'00000000'
@NM00127 DC    AL1(0)
@NM00128 DC    B'00000000'
@NM00129 DC    AL1(0)
@NM00130 DC    CL8'GCMLIST'
         ORG   KEYTAB+180
@NM00131 DS    CL20
         ORG   @NM00131
@NM00132 DC    AL1(3)
@NM00133 DC    AL3(LOC)
@NM00134 DC    B'11100000'
@NM00135 DC    AL1(3)
@NM00136 DC    B'01000000'
@NM00137 DC    AL1(2)
@NM00138 DC    B'01000000'
@NM00139 DC    AL1(2)
@NM00140 DC    B'10010000'
@NM00141 DC    AL1(2)
@NM00142 DC    CL8'LOC'
         ORG   KEYTAB+200
@NM00143 DS    CL20
         ORG   @NM00143
@NM00144 DC    AL1(5)
@NM00145 DC    AL3(CGMID)
@NM00146 DC    B'11000000'
@NM00147 DC    AL1(1)
@NM00148 DC    B'01000000'
@NM00149 DC    AL1(2)
@NM00150 DC    B'00000000'
@NM00151 DC    AL1(0)
@NM00152 DC    B'00000000'
@NM00153 DC    AL1(0)
@NM00154 DC    CL8'CGMID'
         ORG   KEYTAB+220
@NM00155 DS    CL20
         ORG   @NM00155
@NM00156 DC    AL1(6)
@NM00157 DC    AL3(DELSEG)
@NM00158 DC    B'11000000'
@NM00159 DC    AL1(1)
@NM00160 DC    B'10000000'
@NM00161 DC    AL1(3)
@NM00162 DC    B'00000000'
@NM00163 DC    AL1(0)
@NM00164 DC    B'00000000'
@NM00165 DC    AL1(0)
@NM00166 DC    CL8'DELSEG'
         ORG   KEYTAB+240
@NM00167 DS    CL20
         ORG   @NM00167
@NM00168 DC    AL1(6)
@NM00169 DC    AL3(ASSIGN)
@NM00170 DC    B'11000000'
@NM00171 DC    AL1(2)
@NM00172 DC    B'01000000'
@NM00173 DC    AL1(2)
@NM00174 DC    B'10000000'
@NM00175 DC    AL1(2)
@NM00176 DC    B'00000000'
@NM00177 DC    AL1(0)
@NM00178 DC    CL8'ASSIGN'
         ORG   KEYTAB+260
@NM00179 DS    CL20
         ORG   @NM00179
@NM00180 DC    AL1(2)
@NM00181 DC    AL3(CH)
@NM00182 DC    B'11010000'
@NM00183 DC    AL1(1)
@NM00184 DC    B'10000000'
@NM00185 DC    AL1(3)
@NM00186 DC    B'00000000'
@NM00187 DC    AL1(0)
@NM00188 DC    B'00000000'
@NM00189 DC    AL1(0)
@NM00190 DC    CL8'CH'
         ORG   KEYTAB+280
@NM00191 DS    CL20
         ORG   @NM00191
@NM00192 DC    AL1(8)
@NM00193 DC    AL3(INVKEY)
@NM00194 DC    B'11100000'
@NM00195 DC    AL1(255)
@NM00196 DC    B'00000000'
@NM00197 DC    AL1(255)
@NM00198 DC    B'00000000'
@NM00199 DC    AL1(0)
@NM00200 DC    B'00000000'
@NM00201 DC    AL1(0)
@NM00202 DC    CL8' '
         ORG   KEYTAB+300
TRTAB    DS    CL256
         ORG   TRTAB
X0       DC    X'F0'
X1       DC    X'F1'
X2       DC    X'F2'
X3       DC    X'F3'
X4       DC    X'F4'
X5       DC    X'F5'
X6       DC    X'F6'
X7       DC    X'F7'
X8       DC    X'F8'
X9       DC    X'F9'
XA       DC    X'C1'
XB       DC    X'C2'
XC       DC    X'C3'
XD       DC    X'C4'
XE       DC    X'C5'
XF       DC    X'C6'
@NM00203 DC    48X'C0'
BLNK     DC    X'11'
@NM00204 DC    12X'C0'
LPRN     DC    X'80'
@NM00205 DC    13X'C0'
DOLLA    DC    X'00'
ASTER    DC    X'00'
RPRN     DC    X'40'
@NM00206 DC    2X'C0'
DASH     DC    X'00'
@NM00207 DC    10X'C0'
COM      DC    X'10'
@NM00208 DC    15X'C0'
POUND    DC    X'00'
ATSI     DC    X'00'
@NM00209 DC    X'C0'
EQU      DC    X'20'
@NM00210 DC    65X'C0'
PLUS0    DC    X'00'
A        DC    X'0A'
B        DC    X'0B'
C        DC    X'0C'
D        DC    X'0D'
E        DC    X'0E'
F        DC    X'0F'
GTOI     DC    3X'00'
@NM00211 DC    7X'C0'
JTOR     DC    9X'00'
@NM00212 DC    8X'C0'
STOZ     DC    8X'00'
@NM00213 DC    6X'C0'
HEXNO    DS    CL10
         ORG   HEXNO
H0       DC    X'00'
H1       DC    X'01'
H2       DC    X'02'
H3       DC    X'03'
H4       DC    X'04'
H5       DC    X'05'
H6       DC    X'06'
H7       DC    X'07'
H8       DC    X'08'
H9       DC    X'09'
         ORG   TRTAB+250
HA       DC    X'C1'
HB       DC    X'C2'
HC       DC    X'C3'
HD       DC    X'C4'
HE       DC    X'C5'
HF       DC    X'C6'
         ORG   TRTAB+256
TRANS    DS    CL256
         ORG   TRANS
@NM00214 DC    193X'C3'
AA       DC    X'AA'
BB       DC    X'BB'
CCC      DC    X'CC'
DD       DC    X'DD'
EE       DC    X'EE'
FF       DC    X'FF'
@NM00215 DC    41X'C3'
H00      DC    X'00'
H11      DC    X'11'
H22      DC    X'22'
H33      DC    X'33'
H44      DC    X'44'
H55      DC    X'55'
H66      DC    X'66'
H77      DC    X'77'
H88      DC    X'88'
H99      DC    X'99'
@NM00216 DC    6X'C3'
         ORG   TRANS+256
BLNKS    DC    CL15' '
PATCH    DC    40CL5'PATCH'
IEBISCAN CSECT
PACKIT  PACK DWORK(8,BUFAD),0(0,R14) PACK SOME DATA.
IEBISCAN CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
GCNT     EQU   @03
HCNT     EQU   @02
CNT      EQU   @02
BUFAD    EQU   @08
BUFFPTR  EQU   @06
DB       EQU   @07
R14      EQU   @14
PARAM    EQU   @03
RECAREA  EQU   @04
RECSIZE  EQU   @05
REMSIZE  EQU   @03
RETCODE  EQU   @15
R0       EQU   @00
R1       EQU   @01
SHIFT    EQU   @04
SHIFT2   EQU   @05
TRANSIZE EQU   @07
WORKAREA EQU   0
WORK     EQU   WORKAREA
WSTOR    EQU   WORK
DWORK    EQU   WSTOR
DWORK1   EQU   DWORK
DWORK2   EQU   DWORK+4
PWORK    EQU   DWORK2+2
FWORK    EQU   WSTOR+8
STATUS1  EQU   WORK+12
EOFFLG   EQU   STATUS1
CARDIN   EQU   STATUS1
CONTINUE EQU   STATUS1
STATUS2  EQU   WORK+13
REPUSE   EQU   STATUS2
INHIBIT  EQU   STATUS2
INHIBITW EQU   INHIBIT
INHIBITR EQU   INHIBIT
FMTERR   EQU   STATUS2
PRTYERR  EQU   STATUS2
READMOD  EQU   STATUS2
STATUS3  EQU   WORK+14
INVDLM   EQU   STATUS3
FOUND    EQU   STATUS3
INVKWD   EQU   STATUS3
EXCLKWD  EQU   STATUS3
INVPARM  EQU   STATUS3
INVCHAR  EQU   STATUS3
UNBAL    EQU   STATUS3
KWDCOMP  EQU   STATUS3
STATUS4  EQU   WORK+15
KEYIN    EQU   STATUS4
SCANINP  EQU   STATUS4
HEXERR   EQU   STATUS4
FLDSW    EQU   STATUS4
PARMGRP  EQU   STATUS4
LASTQ    EQU   STATUS4
KWDUSED  EQU   WORK+16
ACTIVOP  EQU   WORK+17
NEXTOP   EQU   WORK+18
ACTIVKEY EQU   WORK+19
OPTABLN  EQU   WORK+20
OPTABAD  EQU   WORK+21
DIRECTRY EQU   WORK+24
DNAME    EQU   DIRECTRY
DATTRI   EQU   DIRECTRY+20
BLDLNTRY EQU   WORK+62
BNAME    EQU   BLDLNTRY+4
BSUFIX   EQU   BNAME+4
BTTRTA   EQU   BLDLNTRY+18
BATTRI   EQU   BLDLNTRY+26
PRECOL   EQU   WORK+105
NEXT     EQU   WORK+106
RETSAVE  EQU   WORK+108
CC       EQU   WORK+109
CARDEND  EQU   WORK+112
DCBADS   EQU   WORK+116
SYSPRTAD EQU   DCBADS
SYSINAD  EQU   DCBADS+4
MSGEDIT  EQU   WORK+132
EDITLEN  EQU   MSGEDIT
EDITDATA EQU   MSGEDIT+1
PRNCNT   EQU   WORK+148
ARGMT    EQU   WORK+152
LOADNAME EQU   WORK+160
TESTP    EQU   WORK+170
TPITCH   EQU   TESTP
TPP      EQU   TPITCH
TPARTY   EQU   TESTP+1
TPS      EQU   TPARTY
SAVE2    EQU   WORKAREA+244
SAVE3    EQU   WORKAREA+316
SAVE4    EQU   WORKAREA+388
PRIMCARD EQU   WORKAREA+460
SDRYCARD EQU   WORKAREA+540
MSGN     EQU   WORKAREA+620
MSG      EQU   WORKAREA+621
SPACE    EQU   MSG
MSGTXT   EQU   MSG+1
MSGR     EQU   MSGTXT+4
MSGOF    EQU   MSGR+1
FCBSIZE  EQU   WORKAREA+742
LPICNT   EQU   WORKAREA+744
LPI8     EQU   LPICNT
LPI6     EQU   LPICNT+1
LASTKEY  EQU   WORKAREA+784
PARMSIZE EQU   WORKAREA+792
PARMNUM  EQU   WORKAREA+794
SCANWORK EQU   WORKAREA+796
SCANARY  EQU   SCANWORK
SCNT     EQU   SCANWORK+1024
CARDDATA EQU   SCANWORK+1026
LIBBUF   EQU   WORKAREA+2236
MODHEAD  EQU   LIBBUF
MODCNT   EQU   MODHEAD+6
MODBOD   EQU   LIBBUF+8
FCBBOD   EQU   MODBOD+3
MSGSAVE  EQU   WORKAREA+10648
GRAFARY  EQU   0
ASNARRAY EQU   GRAFARY
ASNENTRY EQU   GRAFARY+1
REFARRAY EQU   GRAFARY+2
DEL      EQU   0
TEXTDATA EQU   0
COPYLINE EQU   0
COPYLABL EQU   COPYLINE
ICOPY    EQU   COPYLABL
COPYX    EQU   COPYLABL+1
ILINE    EQU   COPYLABL+2
LINEX    EQU   COPYLABL+3
IPOS     EQU   COPYLABL+4
TEXTN    EQU   COPYLABL+5
TEXTD    EQU   COPYLINE+6
COL      EQU   0
PRTQELEM EQU   0
PRTQUEUE EQU   PRTQELEM+1
TABLDEF  EQU   0
OPFLAGS  EQU   TABLDEF+1
LPIFLAG  EQU   OPFLAGS
CHFLAG   EQU   OPFLAGS
SIZEFLAG EQU   OPFLAGS
COPYFLAG EQU   OPFLAGS
LINEFLAG EQU   OPFLAGS
POSFLAG  EQU   OPFLAGS
TEXTFLAG EQU   OPFLAGS
NAMEFLAG EQU   OPFLAGS+1
ASGNFLAG EQU   OPFLAGS+1
DELFLAG  EQU   OPFLAGS+1
REFFLAG  EQU   OPFLAGS+1
GCMFLAG  EQU   OPFLAGS+1
GCMLFLAG EQU   OPFLAGS+1
LOCFLAG  EQU   OPFLAGS+1
CGMIDFLG EQU   OPFLAGS+1
NOFLAG   EQU   OPFLAGS+2
ASTRFLAG EQU   OPFLAGS+2
REPFLAG  EQU   OPFLAGS+2
NOB      EQU   TABLDEF+4
RTNAME   EQU   TABLDEF+16
SCANBUF  EQU   0
TABLENAM EQU   0
NAMELEN  EQU   0
PARMRTN  EQU   0
PARMATTR EQU   0
KPFLAGS  EQU   PARMATTR
KDEC     EQU   KPFLAGS
KHEX     EQU   KPFLAGS
KSPEC    EQU   KPFLAGS
KPLEN    EQU   PARMATTR+1
STOPCODE EQU   0
STOPFLAG EQU   0
TRODD    EQU   0
TREVEN   EQU   0
ASGNSAVE EQU   0
ASGNMENT EQU   LPI8
PITCH    EQU   LPI6
ALLKEY   EQU   KWDUSED
NAMESET  EQU   ALLKEY
NOKEY    EQU   ALLKEY
DELSET   EQU   ALLKEY
FCBKEY   EQU   KWDUSED
LPISET   EQU   FCBKEY
SIZESET  EQU   FCBKEY
CHSET    EQU   FCBKEY
TBLKEY   EQU   KWDUSED
LOCSET   EQU   TBLKEY
CGMIDSET EQU   TBLKEY
GCMLSET  EQU   TBLKEY
COPYKEY  EQU   KWDUSED
COPYSET  EQU   COPYKEY
LINESET  EQU   COPYKEY
POSSET   EQU   COPYKEY
TEXTSET  EQU   COPYKEY
GRAPHKEY EQU   KWDUSED
REFSET   EQU   GRAPHKEY
GCMSET   EQU   GRAPHKEY
ASGNSET  EQU   GRAPHKEY
XLATTABL EQU   MODBOD
XPOS     EQU   XLATTABL
CGMIDALL EQU   XLATTABL+256
CGMIDX   EQU   CGMIDALL
CGMIDN   EQU   CGMIDX
CGMIDNO  EQU   CGMIDX+1
GRFMODS  EQU   XLATTABL+264
GRAFMODN EQU   GRFMODS
FCBMOD   EQU   LIBBUF
FCBHEAD  EQU   FCBMOD
FCBYTE   EQU   FCBMOD+8
FLPI12   EQU   FCBYTE
CWORK    EQU   FWORK
UWORK    EQU   CWORK
UNITS    EQU   UWORK+1
CWORKX   EQU   FWORK
CWORK3   EQU   CWORKX+1
CWORK2   EQU   CWORK3+1
COL72    EQU   PRIMCARD+71
FIELDT   EQU   LPI6
FIELDL   EQU   LPI8
CHAN     EQU   LPI6
KEYADDR  EQU   KEYTAB
KLEN     EQU   KEYADDR
PRMPTR   EQU   KEYADDR+1
KFLAGS   EQU   KEYADDR+4
KPARN2   EQU   KFLAGS
VARI     EQU   KFLAGS
KCNT     EQU   KEYADDR+5
KPARM    EQU   KEYADDR+6
KEYWD    EQU   KEYADDR+12
FBYTE    EQU   TRTAB
FUNCTION EQU   FBYTE
DCBTAB   EQU   DCBADS
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
KPARN1   EQU   KFLAGS
KMULT    EQU   KFLAGS
CWORK1   EQU   CWORK2+1
@NM00020 EQU   CWORK2
@NM00019 EQU   CWORK3
@NM00018 EQU   CWORKX
@NM00017 EQU   UWORK
FCHN     EQU   FCBYTE
FLPI     EQU   FLPI12
@NM00016 EQU   FLPI12
FCBNA    EQU   FCBYTE
FCBCNT   EQU   FCBHEAD+6
FCBRSVD  EQU   FCBHEAD+4
FCBNAME  EQU   FCBHEAD
XREF     EQU   XPOS
XWCGM    EQU   XPOS
@NM00015 EQU   GRAPHKEY
@NM00014 EQU   COPYKEY
@NM00013 EQU   TBLKEY
@NM00012 EQU   FCBKEY
KCHAR    EQU   KPFLAGS
PRTPTR   EQU   TABLDEF+13
@NM00023 EQU   TABLDEF+12
CHKPTR   EQU   TABLDEF+9
@NM00022 EQU   TABLDEF+8
BLDPTR   EQU   TABLDEF+5
MLTFLAG  EQU   OPFLAGS
OPNUM    EQU   TABLDEF
TBN      EQU   PRTQUEUE+54
@NM00021 EQU   PRTQUEUE
CONTROL  EQU   PRTQELEM
LASTBYTE EQU   WORKAREA+17908
OVERFLO  EQU   LIBBUF+8200
FCBCLR   EQU   MODBOD+144
BEGMARG  EQU   MODBOD
CMODCNT  EQU   MODCNT
MODRSVD  EQU   MODHEAD+4
MODNAME  EQU   MODHEAD
LINSV    EQU   CARDDATA+3
COPSV    EQU   CARDDATA
RESRV1   EQU   WORKAREA+795
DDNAMES  EQU   WORKAREA+752
LOOP     EQU   WORKAREA+750
BOTTOM   EQU   WORKAREA+748
MARGN    EQU   LPICNT+3
LPI12    EQU   LPICNT+2
PAGENO   EQU   MSGOF+100
@NM00011 EQU   MSGOF
@NM00010 EQU   MSGR
PREFX    EQU   MSGTXT
SEQNO    EQU   SDRYCARD+28
IDENT    EQU   SDRYCARD+24
@NM00009 EQU   SDRYCARD+18
RASDATA  EQU   SDRYCARD
SAVE1    EQU   WORKAREA+172
PR2      EQU   TPS
PR1      EQU   TPS
TP2      EQU   TPP
TP1      EQU   TPP
SEGCNT   EQU   WORK+168
INCLNAME EQU   LOADNAME+4
@NM00008 EQU   LOADNAME
LOADMOD  EQU   WORK+157
LOADFLAG EQU   WORK+156
TODAY    EQU   WORK+153
PAGE     EQU   WORK+150
UTOUTAD  EQU   DCBADS+12
UTINAD   EQU   DCBADS+8
LIBEXT   EQU   WORK+104
@NM00007 EQU   BLDLNTRY+33
BLEN     EQU   BLDLNTRY+31
BSTOR    EQU   BLDLNTRY+28
BUNIREC  EQU   BATTRI
@NM00006 EQU   BATTRI
BTTRT    EQU   BTTRTA
BINDCT   EQU   BLDLNTRY+17
@NM00005 EQU   BLDLNTRY+15
BTTRP    EQU   BLDLNTRY+12
BPREFX   EQU   BNAME
BFFLL    EQU   BLDLNTRY
LIBBLKSZ EQU   WORK+60
@NM00004 EQU   DIRECTRY+27
DLEN     EQU   DIRECTRY+25
DSTOR    EQU   DIRECTRY+22
UNIREC   EQU   DATTRI
@NM00003 EQU   DATTRI
@NM00002 EQU   DIRECTRY+16
DTTRT    EQU   DIRECTRY+12
DINDCT   EQU   DIRECTRY+11
DTTRP    EQU   DIRECTRY+8
DSUFIX   EQU   DNAME+4
DPREFX   EQU   DNAME
OPINPRG  EQU   STATUS4
INCLSW   EQU   STATUS4
SETRAS   EQU   PRTYERR
FMTERR1  EQU   STATUS2
INHIBITP EQU   STATUS2
NOTED    EQU   STATUS1
NOWRITE  EQU   STATUS1
INHIBLIB EQU   STATUS1
ABNDFLG  EQU   STATUS1
PWORK1   EQU   PWORK
XWORK    EQU   DWORK2
DWORKB   EQU   DWORK1+1
@NM00001 EQU   DWORK1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00038 EQU   @RC00035
@RC00127 EQU   @RC00080
@RC00081 EQU   @RC00080
@RC00207 EQU   @RC00206
@RC00244 EQU   @RC00243
@RC00237 EQU   @RC00231
@RC00266 EQU   @RC00265
@RC00281 EQU   @RC00280
@RC00302 EQU   @RC00301
@RC00296 EQU   @RC00295
@RC00327 EQU   @RC00326
@RC00321 EQU   @RC00320
@RC00355 EQU   @RC00354
@RC00346 EQU   @RC00345
@RC00371 EQU   @RC00370
@RC00386 EQU   @RC00385
@RC00417 EQU   @RC00416
@RC00451 EQU   @RC00448
@RC00449 EQU   @RC00448
@RC00442 EQU   @RC00441
@RC00467 EQU   @RC00466
@RC00489 EQU   @RC00488
@RC00526 EQU   @RC00522
@RC00544 EQU   @RC00543
@RC00567 EQU   @RC00566
@RC00610 EQU   @RC00519
@RC00512 EQU   @RC00511
@RC00648 EQU   @RC00647
@RF00747 EQU   @RC00735
@RC00745 EQU   @RC00735
@RC00698 EQU   @RC00697
@RC00762 EQU   @RC00760
@RC00815 EQU   @RC00814
@RC00821 EQU   @EL00020
@RC00830 EQU   @EL00021
@PB00021 EQU   @PB00022
@RC00042 EQU   @RC00038
@RC00128 EQU   @RC00127
@RC00270 EQU   @RC00266
@RC00285 EQU   @RC00281
@RC00656 EQU   @RC00648
@RC00711 EQU   @RC00698
@RC00700 EQU   @RC00698
@RC00789 EQU   @RC00762
@RC00781 EQU   @RC00762
@RC00763 EQU   @RC00762
@PB00020 EQU   @PB00021
@RC00839 EQU   @RC00830
@RC00046 EQU   @RC00042
@RF00146 EQU   @RC00128
@RC00719 EQU   @RC00711
@RC00769 EQU   @RC00763
@RC00764 EQU   @RC00763
@RF00786 EQU   @RC00781
@RF00793 EQU   @RC00789
@PB00019 EQU   @PB00020
@RC00049 EQU   @RC00046
@PB00018 EQU   @PB00019
@RC00720 EQU   @RC00719
@RF00055 EQU   @RC00049
@RF00058 EQU   @RC00049
@PB00017 EQU   @PB00018
@RF00723 EQU   @RC00720
@PB00016 EQU   @PB00017
@PB00015 EQU   @PB00016
@PB00014 EQU   @PB00015
@PB00013 EQU   @PB00014
@PB00012 EQU   @PB00013
@PB00011 EQU   @PB00012
@PB00010 EQU   @PB00011
@PB00009 EQU   @PB00010
@PB00008 EQU   @PB00009
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IEBISCAN,(C'PLS2026',0701,76222)
