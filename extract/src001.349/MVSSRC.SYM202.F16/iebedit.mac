IEBEDIT  CSECT                                                 @YA02576
* /* START OF SPECIFICATIONS ***
*01* PROCESSOR = ASSEM;
**** END OF SPECIFICATIONS ***/
         TITLE    'IEBEDIT UTILITY'                            YL026VC
***********************************************************************
*A 044700,045300,098100-098140,099300-099380,455540            @YA02576
*C 000200,012200,067200,248800                                 @YA02576
*A 268500-268520,275700-275720                                 @YA02589
*D 269000-269200,276000-276200                                 @YA02589
*A 035100,035900                                               @YA02593
*A 136300,136320                                               @ZA01659
*C 136000,136600                                               @ZA01659
*A 168500-168520,179300-179320,455524                          @ZA04410
*C 177100,177800                                               @ZA04410
*C 275700                                                      @ZA04414
*C 188800                              /*NONE BLANK PROBLEM    @ZA07327
*A 168540-168560,177120,189220-189340  /*NONE BLANK PROBLEM    @ZA07327
*C 178800,179000                       //JOBCAT PROBLEM        @ZA07326
*A 179340-179380                       //JOBCAT PROBLEM        @ZA07326
*A 191300-191320                                               @ZA07353
*C 179360                                                      @ZA07353
*D 179400-179800                                               @ZA07353
*A 189304,189308                       /*EOF PROBLEM           @ZA11930
*C 189000                              /*EOF PROBLEM           @ZA11930
*MODULE NAME   IEBEDIT                                         YL026VC*
*                                                              YL026VC*
*DESCRIPTIVE NAME  IEBEDIT IS A SINGLE MODULE UTILITY.         YL026VC*
*              A DESCRIPTION OF EACH SUBROUTINE IS IN A PROLOG YL026VC*
*              PRECEEDING IT.                                  YL026VC*
*                                                              YL026VC*
*COPYRIGHT     NONE                                            YL026VC*
*                                                              YL026VC*
*STATUS        VS2 REL2 PROGRAM MODIFICATION NOVEMBER 1972     YL026VC*
*                                                                     *
*FUNCTION      IEBEDIT IS THE INITIALIZATION ROUTINE FOR THE UTILITY  *
*              IEBEDIT. THIS ROUTINE PERFORMS THE FOLLOWING FUNCTIONS:*
*              ESTABLISHES ADDRESSABILITY AND AN ACTIVE SAVE AREA,    *
*              REQUESTS MAIN STORAGE FOR WORK AREAS AND SWITCHES AND  *
*              ESTABLISHES ADDRESSABILITY FOR A DSECT TO REFERENCE    *
*              THIS AREA, ZEROS SWITCHES AND INITIALIZES THE WORK     *
*              AREA, OPENS DATA SETS, TESTS FOR GOOD OPENS, CHECKS    *
*              SPECIFICATION AND VALIDITY OF THE BLKSIZE PARAMETER    *
*              FOR EACH DATA SET, AND GETS THE FIRST RECORD OF THE    *
*              SYSUT1 DATA SET IF ALL ERROR CHECKING HAS BEEN SUCCESS-*
*              FUL. THIS SECTION OF CODE ALSO CONTAINS EXIT LISTS AND *
*              RELATED CODE FOR THE SYSUT1, SYSUT2 AND SYSIN DATA     *
*              SETS.                                                  *
*                                                                     *
*ENTRY         IEBEDIT- ENTRY FOR IEBEDIT UTILITY                     *
*                                                                     *
*INPUT         N/A                                                    *
*                                                                     *
*OUTPUT        ON AN EXIT TO THE PRINT ROUTINE, A CODE FOR THE        *
*              REQUESTED ERROR MSG TO BE PRINTED IS PASSED IN REGISTER*
*              TWO(R2).                                               *
*              ON AN EXIT TO THE MAIN ROUTINE, THE ADDRESS OF THE     *
*              FIRST SYSUT1 RECORD IS PASSED IN REGISTER RCARD.       *
*              ON AN EXIT TO INBLK, THE BLOCKSIZE CHECK ROUTINE, THE  *
*              ERROR MSG CODE IS PASSED IN REGISTER R8 AND DATA SET   *
*              IDENTIFICATION CODE IS PASSED IN REGISTER RCARD.       *
*                                                                     *
*EXTERNAL ROUTINES  THE PRINT ROUTINE, PRINT, IS USED TO PRINT ALL    *
*                   ERROR AND NORMAL MESSAGES. CONTROL IS PASSED VIA; *
*                   BAL RLINK,PRINT INSTRUCTION.                      *
*                   THE BLOCKSIZE CHECK ROUTINE, INBLK, IS USED TO    *
*                   CHECK FOR VALID BLKSIZE SPECIFICATION FOR THE     *
*                   SYSUT1, SYSUT2, AND SYSIN DATA SETS. CONTROL IS   *
*                   PASSED VIA, BAL RLINK,INBLK INSTRUCTION.          *
*                                                                     *
*EXITS-NORMAL  AN EXIT IS MADE TO THE MAIN ROUTINE, MAIN, IF ALL ERROR*
*              CHECKING DONE BY IEBEDIT HAS BEEN SUCCESSFULL. CONTROL *
*              IS PASSED VIA,  B MAIN INSTRUCTION.                    *
*     -ERROR   IF THE SYSPRINT DATA SET WAS NOT OPENED SUCCESSFULLY,  *
*              CONTROL IS PASSED TO THE CLOSE ROUTINE VIA, B PORT     *
*              INSTRUCTION.                                           *
*              IF ANY OTHER ERRORS HAVE BEEN FOUND IN PROCESSING THE  *
*              DATA SETS, CONTROL IS PASSED TO THE CLOSE ROUTINE VIA, *
*              BAL RLINK,POST1 INSTRUCTION.                           *
*                                                                     *
*NOTES         N/A                                                    *
*                                                                     *
*CHANGE ACTIVITY  FOLLOWS THIS PROLOG                          YL026VC*
*                                                              YL026VC*
***********************************************************************
* 247500                                                          M4212
*3412021000,030000,046000-048000,059500,831500-832000,833500       BS0H
*230000                                                          A29714
* 535000                                                         A27599
*249500,250000,250500                                            A29712
*222500                                                          A33351
*534800,535100                                                   A38600
*C164600,188600                                                 YL026VC
*A 161620-161680,177020,179020,195820-195900,455420-455440      YA01706
*C 161000-161600                                                YA01706
***********************************************************************
         SAVE  (14,12)                                         @YA02576
         BALR  RBASE,0                  ESTABLISH ADDRESSABILITY
         USING *,RBASE                  *
         GETMAIN R,LV=72
         ST    RSAVE,4(R1)              CHAIN SAVE AREAS
         ST    R1,8(RSAVE)              *
         LR    RSAVE,R1                 ESTABLISH ACTIVE SAVE AREA
*                                                                     *
*    VARIABLE GETMAIN ISSUED FOR WORK AREA AND SWITCHES               *
*         LA=INSIZE, WHER INSIZE IS TWO WORDS INDICATNG MAX ABD MIN   *
*                          STORAGE REQUESTED                          *
*         INPARA CONTAINS THE ADDRESS OF STORAGE ALLOCATED TO THE TASK*
*                 BY THE GETMAIN AND IS ONE FULL WORD                 *
*         INPARA+4-(1 FULL WORD) CONTAINS THE LENGTH ACTUALLY         *
*                      ALLOCATED BY THE GETMAIN                       *
*                                                                     *
         GETMAIN VC,LA=INSIZE,A=INPARA
  LTR  R15,R15   WAS  GETMAIN  OK
    BZ   VCOK     YES
    LA  R15,8      NO,  SET  RETURN CODE
   B   RETCC2         AND  EXIT
VCOK     EQU   *
         L     RWORK,INPARA            GET ADDR OF STORAGE TO ADDR
         USING IEBED,RWORK              * SWITCHES, WORKAREAS
         XC    IEBED10(IEBED20-IEBED10),IEBED10    ZERO  SWITCHES
   XC  IEBED46(16),IEBED46        CLEAR PUT PRINT AREA
   XC  SC4(4),SC4       CLEAR  CARD SCAN AREA
   LA   R3,1       SET UP PAGE COUNT IF NO OVER RIDE
         STH   R3,HPAGE            STORE PAGE COUNT OF ONE
         L     R6,INSYSIN          RESTORE SYSIN DD NAME
         MVC   40(8,R6),INSYSDD
         L     R6,INPRT            RESTORE SYSPRINT DD NAME
         MVC   40(8,R6),INPRTDD
         L     R6,INUT1            RESTORE SYSUT1 DD NAME
         MVC   40(8,R6),INUT1DD
         L     R6,INUT2OT          RESTORE SYSUT2 DD NAME
         MVC   40(8,R6),INUT2DD
  L  R3,4(RSAVE)  GET REG 1 POINTER
   L  R3,24(R3)     TO INVOLKING LIST
   L  R4,0(R3)   GET POINTER TO PARM FIELD
*     R4  CONTAINS POINTER TO HALF WORD BEFORE PARM FIELD
*
    TM  0(R3),X'80'   END OF LIST
   BO  INPARM    YES
   LA  R3,4(R3)    GET DD  POINTER
    L   R4,0(R3)
    LA   R4,0(R4)   IS THERE I  A  DD  LIST
   LTR   R4,R4
   BZ  INPARM1   NO
    LR   R5,R4    GET LENGTH OF LIST
    AH   R5,0(R4)   END OF LIST
   LA  R5,1(R5)   POINTER TO LAST USED BYTE
   LA   R4,34(R4)  POINTER TO SYSIN OVERRIDE
   CR  R4,R5   SYSIN WITHIN LIST
    BH   INPARM1    NO
   CLC 0(8,R4),=X'0000000000000000'   OVER RIDE PRESENT
   BE  INPARM2    NO
  L  R6,INSYSIN
   MVC  40(8,R6),0(R4)    MOVE  DD  OVERRIDE
INPARM2  LA  R4,8(R4)   POINT TO SYSPRINT OVERRIDE
   CR  R4,R5   SYSPRINT WITHIN LIST
   BH  INPARM1    NO
  CLC 0(8,R4),=X'0000000000000000'
  BE  INPARM3  SYSPRINT OVERRIDE PRESENT
*      NO
   L  R6,INPRT
   MVC  40(8,R6),0(R4)    MOVE  DD  OVERRIDE
INPARM3   LA  R4,16(R4)  POINT TO SYSUT1  OVERRIDE
   CR  R4,R5   WITHIN LIST
    BH  INPARM1     NO
   CLC 0(8,R4),=X'0000000000000000'
    BE  INPARM4   OVERRIDE PRESENT
   L   R6,INUT1
   MVC  40(8,R6),0(R4)    MOVE  DD  OVERRIDE
INPARM4  LA  R4,8(R4)   POINT TO SYSUT2 OVERRIDE
  CR  R4,R5    WITHIN LIST
   BH  INPARM1     NO
   CLC 0(8,R4),=X'0000000000000000'
   BE  INPARM1      OVERRIDE PRESENT
   L   R6,INUT2OT
   MVC  40(8,R6),0(R4)    MOVE  DD  OVERRIDE
INPARM1  TM  0(R3),X'80'               END OF LIST
   BO  INPARM   YES
   LA  R3,4(R3)   POINT TO PAGE COUNT OVERRIDE
   L   R4,0(R3)
   LA  R4,0(R4)   GET PAGE COUNT
   LTR  R4,R4     PAGE PRESENT
   BZ  INPARM           NO
   PACK  IEBED00(8),2(4,R4)
   CVB  R6,IEBED00   CONVERT TO BINARY THE PAGE COUNT
   STH  R6,HPAGE
   OI  IEBED13,PAGEOV    INDICATE THAT MUST RETURN THE PAGE
INPARM   EQU   *
         MVI   INEXT1,X'85'            SET UP CODE FOR EXLST
         MVI  INEXT12,X'85'
         MVI   OUTEXIT,X'85'                                       BS0H
         MVI   INEXT13,X'85'            *
         LA    R2,IEBED99              ESTABLISH POINTER TO
         ST    R2,IEBED61              TO PERMANENT WORK AREA
         L     R2,INUT1                SET UP DCB ADDRS FOR DATA SETS-
         ST    R2,IEBED21               * SYSUT1
         L     R2,INUT2OT              *
         ST    R2,IEBED22               * SYSUT2
         L     R2,INPRT                *
         ST    R2,IEBED23               * SYSPRINT
         L     R2,INSYSIN              *
         ST    R2,IEBED20               * SYSIN
         L     R2,INPRT                GET DCB FOR SYSPRINT
         MVI   DFLG,X'00'               INITIALIZE ERROR FLAGS     BS0H
         MVI   DFLAG,X'00'                                         BS0H
         OPEN  ((R2),(OUTPUT))         OPEN SYSPRINT DCB
         L     R2,IEBED23               GET ADDR OF SYSPRINT DCB
         USING IHADCB,R2                * TO REFERENCE DCB
         TM    DCBOFLGS,X'10'           BRANCH IF DATA SET OPEN
         BO    FLAGTEST                 TEST FOR BLKSIZE ERROR     BS0H
         OI    IEBED13,HIGHCODE         SET RETURNCODE = 8     @YA02593
         B     PORT
FLAGTEST TM    DFLG,X'10'               TEST FOR BLOCKSIZE ERROR   BS0H
         BC    8,INPRTOP                NO BLKSIZE ERROR - PROCESS BS0H
         CLOSE ((R2))                   IF THERE IS ONE PREPARE TO BS0H
         OI    IEBED13,HIGHCODE         SET RETURNCODE = 8     @YA02593
         B     PORT                     EXIT                       BS0H
INNXTOP  L     R2,INUT1                GET ADDR OF SYSUT1 DCB
         OPEN  ((R2))                  OPEN SYSUT1 DCB
         TM    DFLAG,X'08'         WAS THERE A BLOCKSIZE ERROR
         BZ    INOPEN              NO, OPEN REST OF DCB'S
         LA    R2,32              SET MESSAGE CODE
         BAL   RLINK,PRINT        PRINT ERROR MESSAGE
         OI    IEBED11,X'08'       SET SYSUT2 NOT OPEN FLAG
         OI    IEBED11,X'10'       SET SYSIN NOT OPEN FLAG
         OI    IEBED11,NOOPEN      SET NOT OPEN FLAGS FOR POST
         OI    IEBED13,X'04'       SET HIGH SEVERITY CODE
         B     POST1               POST AND RETURN
INOPEN   L     R2,INSYSIN          GET ADDRESS OF SYSIN DCB
         L     R3,INUT2OT              GET ADDR OF SYSUT2 DCB
         OPEN  ((R3),(OUTPUT),(R2))    OPEN REMAINING DCBS
         L     R2,IEBED21               GET SYSUT1 DCB ADDR
         TM    DCBOFLGS,X'10'           BRANCH IF SYSUT1 DCB
         BZ    INSW1                    *  NOT OPEN
INNXT1   LA    RCARD,1                 CODE FOR SYSUT1 DATA SET
         LA    R8,32                   MSG CODE T
         BAL   RLINK,INBLK             * TEST FOR VALID BLKSIZE
         L     R2,IEBED20              GET SYSIN DCB ADDR
         TM    DCBOFLGS,X'10'           BRANCH IF SYSIN DCB
         BZ    INSW2                    * NOT  OPEN
         TM    DFLAG,X'10'        TEST FOR INVALID SYSIN BLKSIZE   BS0H
         BC    8,INNXT21          IF NO ERROR CONTINUE PROCESS     BS0H
         CLOSE ((R2))                                              BS0H
         BC    15,INSW2                 BAD SYSIN OPEN - SET SW    BS0H
INNXT2   LA    RCARD,2                 BRANCH TO TEST SYSIN BLKSIZE
         LA    R8,148                  *
         BAL   RLINK,INBLKIN            *                          BS0H
INNXT21  L     R2,IEBED22               GET SYSUT2 DCB ADDR
         TM    DCBOFLGS,X'10'           BRANCH IF SYSUT2 DCB
         BZ    INSW3                    * NOT OPEN
INNXT3   LA    RCARD,0                 GET COD E FOR SYSUT2 DATA SET
         TM    DFLAG,X'04'         TEST FOR BLOCKSIZE ERROR
         BZ    INNXT31             IF NO ERROR, CONTINUE
         LA    R2,152              OTHERWISE, SET UP MESSAGE CODE
         BAL   RLINK,PRINT         PRINT ERROR MESSAGE
         OI    IEBED13,X'02'       SET LOW SEVERITY CODE
INNXT31  TM    IEBED11,X'FF'       BRANCH IF SOME DCBS NOT OPEN
         BNZ   INMESS                   *  TO PRINT MESSAGE AND ABEND
         TM    IEBED12,X'FF'           BRANCH IF QUIT SWITCH ON
         BNZ   INMESS3                 * TO POST
         OI    IEBED14,CARDUT1         SET ANY CARD SYSUT1SW   @YA02576
         L      R4,IEBED21             GET SYSUT1 ADDR
         GET    (4)
         LR    RCARD,R1              GET SYSUT1 RECORD
         NI    IEBED14,OFF-CARDUT1     RESET CARDUT1SW         @YA02576
         B     MAIN                    GO TO DETERMINE REQUEST
*                  TEST FOR SYSUT1  BLKSIZE                           *
INEXIT1  LR    R2,R1                   GET DCB ADDR- SYSUT1
         OC    DCBBLKSI(2),DCBBLKSI    BRANCH IF BLOCKSIZE IS NOT
         BZ    INEXIT15            BRANCH IF ZERO TO SET DEFAULT
         LH    RODD,DCBBLKSI       GET BLOCKSIZE TO TEST FOR
         SR    REVEN,REVEN
         LA    R7,80               * MULTIPLE OF 80
         DR    REVEN,R7
         LTR   REVEN,REVEN
         BZ    INEX1               IF MULTIPLE OF 80, RETURN
         OI    DFLAG,X'08'         OTHERWISE, SET ERROR FLAG
INEXIT15 MVI   DCBBLKSI+1,X'50'    SET BLOCKSIZE DEFAULT OF 80
INEX1     RETURN
*                TEST FOR SYSUT2 BLKSIZE                              *
INEXIT2  LR    R2,R1                   GET SYSUT1DCB ADDR
         LA    R3,IEBED00               GET ADDR OF VOLITAL WORK AREA
         OC    DCBBLKSI(2),DCBBLKSI TEST BLOCKSIZE FOR ZERO
         BZ    INEXIT22            IF ZERO, GO TO SET DEFAULT
         LH    RODD,DCBBLKSI        GET BLOCKSIZE TO TEST FOR MULTIPLE
         SR    REVEN,REVEN          * OF 80
         LA    R7,80
         DR    REVEN,R7
         LTR   REVEN,REVEN          TEST FOR REMAINDER
         BZ    INEX2                IF NOT REMAINDER, RETURN
         OI    DFLAG,X'04'          OTHERWISE, SET ERROR FLAG
INEXIT22 L     R2,IEBED21           GET SYSUT1 DCB ADDRESS
          OC   DCBBLKSI(2),DCBBLKSI    BRANCH IF SYSUT1 BLKSIZE
         BC    8,INEXIT25              * IS ZERO
         MVC   0(2,R3),DCBBLKSI         GET SYSUT1 BLOCKSIZE
         LR    R2,R1                   GET SYSUT2 DCB ADDR
         MVC   DCBBLKSI(2),0(R3)        PUT AS SYSUT2 BLOCKSIZE-DEFAULT
         B     INEX2
INEXIT25 LR     R2,R1                  GET SYSUT2  DCB ADDR
         MVI   DCBBLKSI,X'50'          PUT IN A BLKSIZE FOR OPEN
INEX2     RETURN
*             TEST FOR SYSIN BLKSIZE                                  *
INEXIT3  LH    R5,DCBBLKSI              LOAD BLKSIZE               BS0H
         LTR   R5,R5                    IS IT ZERO                 BS0H
         BC    8,SETSIZE                YES -- MUST INSERT SIZE    BS0H
         SR    R4,R4                    TEST FOR MULTIPLE OF 80    BS0H
         LA    R3,80                                               BS0H
         DR    R4,R3                                               BS0H
         LTR   R4,R4                                               BS0H
         BCR   8,R14                    IF OD RETURN               BS0H
         MVI   DFLAG,X'10'              OTHERWISE, SET ERROR FLAG  BS0H
         MVC   DCBBLKSI(2),DCBLRECL     MOVE LRECL TO BLKSIZE      BS0H
         RETURN
SETSIZE  MVI   DCBBLKSI+1,X'50'         INSERT BLOCKSIZE - 80      BS0H
         RETURN
*              TEST FOR SYSPRINT BLKSIZE                           BS0H
DCBEXIT  LR    R2,R1                    ADDRESS OF SYSPRINT        BS0H
         LH    R5,DCBBLKSI              GET BLKSIZE                BS0H
         LTR   R5,R5                    IS IT ZERO                 BS0H
         BC    8,SETBLK                 IF SO INSERT               BS0H
         SR    R4,R4                    CHECK FOR MULTIPLE OF 121  BS0H
         LA    R3,121                                              BS0H
         DR    R4,R3                                               BS0H
         LTR   R4,R4                                               BS0H
         BCR   8,R14                    IF OK RETURN               BS0H
         MVI   DFLG,X'10'               OTERWISE - SET ERROR FLAG  BS0H
         MVC   DCBBLKSI(2),DCBLRECL     MOVE LRECL TO BLKSIZE      BS0H
         RETURN
SETBLK   MVI   DCBBLKSI+1,X'79'         INSERT BLKSIZE -- 121      BS0H
         RETURN
INPRTOP  OI    IEBED13,X'40'           * CARD IS PRESENT
         B     INNXTOP
INSW1    OI    IEBED11,X'04'       SET SW FOR BAD SYSUT1 OPEN
         B     INNXT1              RETURN
INSW2    OI    IEBED11,X'10'       SET SW FOR BAD SYSIN OPEN
         B     INNXT2              RETURN
INSW3    OI    IEBED11,X'08'       SET SW FOR BAD SYSUT2 OPEN
         B     INNXT3
INMESS   LA    R2,0
         IC    R2,IEBED11               GET CODE FOR ERROR MSG
         OI    IEBED11,NOOPEN          SET BAD OPEN SWITCH FOR POST
INMESS2  BAL   RLINK,PRINT             * ROUTINE AND GO
INMESS3  OI    IEBED13,X'04'           SET HIGH SEVERITY CODE
         BAL   RLINK,POST1             GO TO CLOSE ROUTINE
INBLKIN  LA    R3,IEBED00                                          BS0H
         B     INBLKON                  TEST SYSUT2 BLKSIZE        BS0H
INBLK  LA   R3,IEBED00                 GET ADDR OF VOLITAL WORK AREA
         MVC   0(2,R3),DCBBLKSI        GET DATA SET BLKSIZE
        LH    RODD,0(R3)               *
         LA    R7,1                    CLEAR EVEN REG
         MR    REVEN,R7                * TO DIVIDE
         LA    R7,80                   TEST VALIDITY OF
         DR    REVEN,R7                *BLKSIZE
         LTR   REVEN,REVEN             BRANCH IF BLKSIZE IS MULIPLE
         BC    8,INBLK1                * OF RECORD LENGTH
INBLKON  LTR   RCARD,RCARD              BRANCH IF SYSUT2 DATA SET  BS0H
         LA    R3,121                                              BS0H
         BC    8,INBLK2                *BLKSIZE INVALID
         ST    RLINK,SAVER
         LR    R2,R8                   PUT OUT ERROR MESSAGE FOR
         BAL   RLINK,PRINT             *INVALID BLKSZIE
         OI    IEBED12,X'10'           SET SWITCH TO REMEMBER  LKSIZE
         L     RLINK,SAVER             *
INBLK1   BR    RLINK                   *
INBLK2   L     R2,IEBED21              GET SYSUT1 DCB ADDR
         MVC   0(2,R3),DCBBLKSI        GET SYSUT1 BLKSIZE
         L     R2,IEBED22              GET SYSUT2 DCB ADDR
         MVC   DCBBLKSI(2),0(R3)       PUT AS SYSUT2 BLKSIZE
         ST    RLINK,SAVER
         LR    R2,R8                   PUT OUT ERROR MSG FOR INVALID
         BAL   RLINK,PRINT             * INVALID BLKSIZE
         L     RLINK,SAVER
         BR    RLINK                   RETURN
         DCBD  DSORG=(QS)
IEBEDIT  CSECT                                                 @YA02576
         DS    0F
OUTEXIT  DC    A(DCBEXIT)                                          BS0H
INEXT1   DC    A(INEXIT1)
INEXT12      DC   A(INEXIT2)
INEXT13     DC    A(INEXIT3)
INUT1    DC   A(DCBUT1)
INPRT    DC      A(DCBPRT)
INUT2OT    DC   A(DCBUT2)
INSYSIN  DC    A(DCBSYS)
INSYSDD  DC    C'SYSIN   '
INPRTDD  DC    C'SYSPRINT'
INUT1DD  DC    C'SYSUT1  '
INUT2DD  DC    C'SYSUT2  '
SAVER    DS    1F
DFLG     DS    X                        BLKSIZE ERROR FLAGS        BS0H
DFLAG    DS    X                                                   BS0H
         DS    0F
INSIZE   DC    F'4000'
         DC    F'8000'
INPARA   DC    F'0'
         DC    F'0'
***********************************************************************
*                                                                     *
*TITLE         MAIN ROUTINE                                           *
*                                                                     *
*                                                                     *
*FUNCTION      THE MAIN ROUTINE READS THE SYSUT1 DATA SET, LINKS TO   *
*              THE PROPER SUBROUTINES TO ANALYZE THE TYPE OF RECORD   *
*              READ AND THEN DETERMINES WHETHER OR NOT THIS PARTICULAR*
*              RECORD BELONGS IN THE SYSUT2 DATA SET.  WHEN AN EOF    *
*              CONDITION HAS BEEN REACHED ON THE SYSUT1 DATA SET, THE *
*              STEPNAME TABLE IS SEARCHED TO SEE IF ALL STEPNAMES     *
*              REQUESTED WHERE FOUND.  APPROPRIATE MESSAGES ARE       *
*              PRINTED AND THEN CONTROL IS PASSED TO THE POST         *
*              PROCESSOR ROUTINE.                                     *
*                                                                     *
*                                                                     *
*ENTRY         MAIN           FROM INITIALIZATION ROUTINE             *
*              MATYPE         FROM STARTJOB ROUTINE                   *
*                                                                     *
*                                                                     *
*INPUT         OPEN SYSUT1 AND SYSUT2 DATA SET                        *
*              APPROPRIATE SWITCHES IN IEBED DSECT                    *
*                                                                     *
*                                                                     *
*OUTPUT        ADDRESS OF RECORD TO BE PRINTED AND/OR PLACED IN SYSUT2*
*              DATA SET                                               *
*                                                                     *
*                                                                     *
*EXTERNAL      SCANAD TO ANALYZE SYSIN DATA SET                       *
*REFERENCES    STARTJOB TO PUT OUT JOB RECORD                         *
*              UPDATE TO CHECK FOR ..* RECORDS                        *
*              POST PROCESSOR AT EOF ON SYSUT1 OR EXIT                *
*                                                                     *
*                                                                     *
*ERROR         IF STEPNAMES HAVE BEEN REQUESTED AND ARE NOT FOUND, THE*
*CONDITIONS    APPROPRIATE MESSAGE IS PRINTED                         *
*                                                                     *
***********************************************************************
MAIN     L     RLINK,SCANAD
         BALR  RLINK,RLINK             CARD SCAN ROUTINE
         TM    IEBED13,TOTCOPY         IS THIS A TOTAL COPY
         BO    MATOT
         BAL   RLINK,STARTJOB           START ROUTINE - PUT OUT JOB CRD
MAGET    BAL   RLINK,MAEODAD            INITIALIZE EODAD IN DCB
*
***      GET A RECORD AND DETERMINE TYPE
*
         L     R3,SYSUT1                GET A RECORD
         GET   (R3)                     *
         LR    RCARD,R1                 LOAD POINTER TO RECORD
         BAL   RLINK,CARDTYPE           DETERMINE TYPE OF RECORD
*
***      DETERMINE WHAT TYPE COPY TO BE DONE
*
MATYPE   TM    IEBED11,DDDATA           DD DATA SWITCH ON?
         BO    MASLASH                  * YES
         TM    IEBED12,JOB              IS IT A JOB RECORD ?
         BO    MAJOB1                   * YES
         TM    IEBED12,DATA             IS IT A DD DATA RECORD ?
         BO    MADATA                   * YES
         TM    IEBED11,POSCOPY          IS POSITION COPY SWITCH ON ?
         BO    MAPUT                    * YES
         TM    IEBED12,EXEC             IS IT AN EXEC RECORD ?
         BO    MASTEP                   * YES
MAEXIN   TM    IEBED11,IECOPY           IS INCLUDE EXCLUDE SWITCH ON ?
         BO    MAPUT                    * YES - PUT OUT RECORD
*
***      DETERMINE IF JCL,DDDATA OFF AND RECORD CONTINUED
*
MACNTLP  TM    IEBED12,JCL              * NO - IS IT A JCL CARD
         BO    MAYESJCL                 *        YES - IS DD DATA SW ON
         B     MAGET                    *        NO - GET NEXT RECORD
MAYESJCL TM    IEBED11,DDDATA           IS DD DATA SWITCH ON ?
         BO    MAGET                    * YES- GET NEXT REOCRD
MACONT   TM    IEBED12,CONTINUE         * NO - IS THIS RECORD CONT
         BZ    MAGET                    *        NO - GET NXT RECORD
         BAL   RLINK,MAEODAD            INITIALIZE EODAD IN DCB
         L     R3,SYSUT1                GET A RECORD
         GET   (R3)                     *
         LR    RCARD,R1                 LOAD POINTER TO RECORD
         BAL   RLINK,CARDTYPE           SET CONTINUE SWITCH
         B     MACONT                   SEE IF RECORD CONTINUED
MATOTCPY L     R3,SYSUT1               GET
         GET   (R3)                    *   AND
         LR    RCARD,R1
MATOT    LR    R2,RCARD
         L     R15,UPDATE              PUT
         BALR  R14,R15                 *
         B     MATOTCPY                RETURN
MAEODAD  STM   R2,RLINK,IEBED50         SET UP EODAD ADDRESS
         XR    R2,R2                    *
         L     R6,SYSUT1                *
         IC    R2,32(R6)                *
         XR    R3,R3                    *
         LA    R3,MAJOB                 *
         ST    R3,32(R6)                *
         STC   R2,32(R6)                *
         LM    R2,RLINK,IEBED50         *
         BR    RLINK                    *
*        CONTINUATION CHECK AND PUT
MAPUT    TM    IEBED12,JCL              IS THIS A JCL RECORD
         BZ    MAPUT2                   * NO - PUT IT OUT
         TM    IEBED11,DDDATA           * YES- IS DD DATA SWITCH ON?
         BO    MAPUT2                   *     YES - PUT OUT RECORD
MARECCTD TM    IEBED12,CONTINUE         *     NO - IS THIS RECORD CONTD
         BZ    MAPUT2                   *        NO -
         LR    R2,RCARD                 *
         L     R15,UPDATE              * PUT OUT RECORD
         BALR  R14,R15                 *
         L     R3,SYSUT1                GET A RECORD
         GET   (R3)                     *
         LR    RCARD,R1                 LOAD POINTER TO RECORD
         BAL   RLINK,CARDTYPE           *           SET CONTINUE SWITCH
         B     MARECCTD                 *
MAPUT2   LR    R2,RCARD                 LOAD POINTER TO RECORD
         L     R15,UPDATE              * PUT OUT RECORD
         BALR  R14,R15                 *
         B     MAGET                    GET NEXT RECORD
*
***      CHECK FOR END OF DD DATA INPUT
*
MASLASH  TM    IEBED12,SLASHA           IS THIS A SLASH ASTER RECORD
         BO    MASLOFF                  * YES -TURN OFF SWITCH
MASL1    TM    IEBED11,POSCOPY          IS POSITION COPY SWITCH ON
         BO    MAPUT                    * YES - PUT OUT RECORD
         B     MAEXIN                   * NO -  IS INC EXC SWITCH ON
MASLOFF  NI    IEBED11,OFF-DDDATA       TURN OFF DD DATA SWITCH
         B     MASL1                     RETURN
*
***      JOB CARD FOUND - MUST SEE IF ALL STEPS WERE FOUND AND CLOSE
*
MAJOB    OI    IEBED13,EOFUT1           TURN ON EOF
MAJOB1   L     R7,IEBED30               ADDRESS OF FIRST STEPNAME
         TM    IEBED14,CARDUT1         IS SWITCH ON            @YA02576
         BO    NOCARD                  YES BRANCH              @YA02576
         TM    IEBED11,SINGSTEP
         BZ    MAENDTST
         TM    IEBED10,STEPNAME         STEPNAME SPECIFIED?
         BZ    MAENDTST                 * NO
         L     R6,IEBED31               ADDRESS OF LAST STEPNAME
         B     MACOMP                   FIRST TIME COMPARE
NOCARD   NI    IEBED14,OFF-CARDUT1     RESET SWITCH            @YA02576
         LA    R2,80                   MSG 80                  @YA02576
         BAL   RLINK,PRINT             GO TO PRINT MSG         @YA02576
         OI    IEBED13,LOWCODE         SET SEV. CODE TO 4      @YA02576
         B     POST1                   GO TO CLOSR ROUTINE     @YA02576
MAALLSTP CLR   R7,R6                    ARE WE AT LAST ENTRY
         BE    MAENDTST                 * YES
         LA    R7,8(R7)                 POINT TO NEXT ENTRY
MACOMP   CLI   0(R7),X'00'              HAS THIS STEPNAME BEEN FOUND
         BE    MAALLSTP                 * YES
         B     MAPRNSTP
*
***      DD DATA RECORD FOUND
*
MADATA   OI    IEBED11,DDDATA           TURN ON DD DATA SWITCH
         B     MASL1                    WHICH SWITCH SET-POS OR IE COPY
*
***      SEARCH TABLE FOR STEPNAME
*
MASTEP   TM    IEBED10,STEPNAME         WAS STEPNAME SPECIFIED
         BZ    MANOSTEP                 * NO
         TM    IEBED11,INCLSPEC        WQS INCLUSIVE SPECIFIED?
         BO    MA02                    * YES
         B     MA01                    * NO
*
*** SEARCH INCLUSIVE TABLE
*
MA02     TM    IEBED11,INCLSTAT        ARE WE IN MIDDLE OF INCLSIVE?
         BO    MA07                    * YES
         L     R4,IEBED33              ADDRESS OF FIRST STEPNAME
         L     R5,IEBED34              ADDRESS OF LAST STEPNAME
         B     MA04
MA03     CLR   R4,R5                   END OF TABLE ?
         BE    MA10                    * YES
         LA    R4,16(R4)                POINT TO NEXT ENTRY
MA04     CLI   0(R4),X'00'             HAS THIS BEGIN STEP BEEN FOUND
         BE    MA03                    * YES
         CLC   0(8,R4),IEBED41         IS THIS THE BEGIN STEPNAME?
         BE    MA06                    * YES
         B     MA03                    *NO
MA06     OI    IEBED11,INCLSTAT        TURN ON INCLUSIVE STATE SWITCH
         MVI   0(R4),X'00'             CLEAR BEGIN STEPNAME
         LA    R4,8(R4)                END STEPNAME
         ST    R4,MAADDEND             SAVE END STEPNAME
         B     MANOSTEP
MA07     L     R4,MAADDEND             ADDRESS OF END STEPNAME
         CLC   0(8,R4),IEBED41
         BNE   MANOSTEP                * NO
         MVI   0(R4),X'00'
         NI    IEBED11,OFF-INCLSTAT    TURN OFF INCLUSIVE STATE SWITCH
         B     MANOSTEP
MA11     OI    IEBED13,LOWCODE
         LM    R2,R3,8(R4)
         B     MA05
MA08     OI    IEBED13,LOWCODE         SET COMPLETOON CODE
         LM    R2,R3,0(R4)             PICK UP STEPNAME
MA05     STM   R2,R3,MASTPNAM+16
         XR    R2,R2                   PASS
         LA    R1,MASTPNAM
         BAL   RLINK,PRINT             *   TO PRINT
         B     MAB
MA10     TM    IEBED11,SINGSTEP        WERE SINGLE STEPS SPECIFIED
         BO    MA01                    * YES
         B     MANOTFND                * NO
MA01     L     R7,IEBED30              ADDRESS OF FIRST STEPNAME
         L     R6,IEBED31               ADDRESS OF LAST STEPNAME
         B     MASEARCH                 FIRST TIME COMPARE
MAAGN    CLR   R6,R7                    ARE WE AT LAST ENTRY
         BE    MANOTFND                 * YES
         LA    R7,8(R7)                 POINT TO NEXT ENTRY
MASEARCH CLI   0(R7),X'00'              HAS THIS NAME BEEN REMOVED
         BE    MAAGN                    * YES
         CLC   0(8,R7),IEBED41         STEPNAME  HERE
         BNE   MAAGN                    * NO
*
***      STEPNAME HAS BEEN FOUND
*
         MVI   0(R7),X'00'              THIS STEPNAME FOUND IN TABLE
MANOSTEP TM    IEBED10,POSITION         POSITION COPY
         BO    MAPOSON                  * YES
         TM    IEBED10,INCLUDE          INCLUDE COPY
         BO    MAIEON                   * YES
         NI    IEBED11,OFF-IECOPY       EXCLUDE COPY - TURN OFF IECOPY
         B     MACNTLP                  SEE IF RECORD IS CONTINUED
MAPOSON  OI    IEBED11,POSCOPY          TURN ON POSITION COPY SWITCH
         B     MAPUT                    GO TO PUT ROUTINE
MAIEON   OI    IEBED11,IECOPY           TURN ON IECOPY SWITCH
         B     MAPUT                    GO TO PUT ROUTINE
*
***      STEPNAME WAS NOT FOUND
*
MAPRNSTP OI    IEBED13,LOWCODE          SET COMPLETION CODE
         LM    R2,R3,0(R7)              PICK UP STEPNAME
         STM   R2,R3,MASTPNAM+16        COMPLETE MESSAGE
         XR    R2,R2                    PASS CODE TO PRINT
         LA    R1,MASTPNAM              PASS ADDRESS OF TEXT
         BAL   RLINK,PRINT              PRINT
         B     MAALLSTP                 RETURN TO TEST FOR END
MANOTFND TM    IEBED10,POSITION         POSITION COPY
         BO    MAGET                    GET NEXT RECORD
         TM    IEBED10,INCLUDE          INCLUDE COPY
         BO    MAIEOFF                  - YES
         OI    IEBED11,IECOPY           EXCLUDE COPY - TURN ON IECOPY S
         B     MAPUT                    PUT OUT RECORD
MAIEOFF  NI    IEBED11,OFF-IECOPY       TURN OFF IECOPY
         B     MACNTLP                  CONTINUATION LOOP
*
***      CHECK INCLUSIVE STEPNAME TABLE
*
MAENDTST  TM   IEBED11,INCLSPEC
         BZ    MAFINSH
         L     R4,IEBED33
         L     R5,IEBED34
         B     MAA
MAB      CLR   R4,R5
         BE    MAFINSH
         LA    R4,16(R4)
MAA      CLI   0(R4),X'00'
         BNE   MA08
         CLI   8(R4),X'00'
         BNE   MA11
         B     MAB
MAFINSH  TM    IEBED13,EOFUT1
         BO    POST
         B     MAIN                     * NO - SEE IF ANOTHER CTRLCARD
***********************************************************************
*                                                                     *
*TITLE         POST PROCESSOR ROUTINE                                 *
*                                                                     *
*                                                                     *
*FUNCTION      THE POST PROCESSOR ROUTINE LINKS TO THE SCANAD ROUTINE *
*              UNTIL AN EOF CONDITION ON THE SYSIN DATA SET HAS BEEN  *
*              REACHED.  THE SEVERITY CODE IS PRINTED, DATA SETS WHICH*
*              HAVE BEEN OPENED ARE CLOSED, STORAGE IS FREED AND      *
*              CONTROL IS PASSED TO THE PROGRAM WHICH CALLED IEBEDIT  *
*                                                                     *
*                                                                     *
*ENTRY         POST - USUAL ENTRY FOR ALL SUBROUTINES                 *
*              POST1 - ENTRY FOR INITIALIZATION ROUTINE               *
*                                                                     *
*                                                                     *
*INPUT         IEBED13        X'20' EOF ON SYSIN                      *
*                             X'04' SEVERITY CODE OF 8                *
*                             X'02' SEVERITY CODE OF 4                *
*              IEBED11        X'12' SYSIN NOT OPEN                    *
*                             X'10' SYSUT2 NOT OPEN                   *
*                             X'06' SYSUT1 NOT OPEN                   *
*              SEVERITY CODE SWITCH SET IN DSECT                      *
*                                                                     *
*                                                                     *
*OUTPUT        SEVERITY CODE MESSAGE, FREED STORAGE AND CLOSED DATA   *
*              SETS                                                   *
*                                                                     *
*                                                                     *
*EXTERNAL      SCANAD ROUTINE FOR EOF CONDITION ON SYSIN              *
*REFERENCES    PRINT ROUTINE TO PRINT SEVERITY CODE MESSAGE           *
*              EXIT TO PROGRAM WHICH CALLED IEBEDIT                   *
*                                                                     *
*                                                                     *
*ERROR         NONE                                                   *
*CONDITIONS                                                           *
*                                                                     *
***********************************************************************
 TITLE '           POST PROCESSOR                     IEBEDIT'
*
***      POST PROCESSOR ROUTINE
*
POST     TM    IEBED13,EOFIN
         BO    POST1
         L     RLINK,SCANAD
         BALR  RLINK,RLINK
POST1    TM    IEBED13,HIGHCODE         8 SEVERITY CODE ?
         BO    PSHIGH                     YES
         TM    IEBED13,LOWCODE          4 SEVERITY CODE ?
         BO    PSLOW                      YES
         L     R2,=F'132'               O SEVERITY CODE FOUND
PSCODE   TM    IEBED13,PRINTSW
         BZ    PSER3
         BAL   RLINK,PRINT
         LM    R2,RODD,SYSIN
         CLOSE  ((R2),,(R3),,(REVEN),,(RODD))
         L     R1,SYSPRINT
         FREEPOOL  (1)
PSFREE   TM    IEBED11,X'10'+NOOPEN    TO FREE OR NOT TO
         BO    *+12                            S
         L     R1,SYSIN                         Y   IN
         BAL   R7,PSFREE1                        S
         TM    IEBED11,X'08'+NOOPEN
         BO    FREEUT1                         S               @ZA01659
         L     R1,SYSUT2                        Y   UT2
         TM    23(R1),X'01'            TEST IF FREEPOOL NEEDED @ZA01659
         BO    FREEUT1                 NO..GO ON               @ZA01659
         BAL   R7,PSFREE1                        S
FREEUT1  TM    IEBED11,X'04'+NOOPEN                            @ZA01659
         BO    *+12                            S
         L     R1,SYSUT1                        Y   UT1
         BAL   R7,PSFREE1                        S
PORT     L     R0,INPARA+4             FREEMAIN
  TM  IEBED13,PAGEOV    PASSED A PAGE COUNT
   BZ  NOPAGE     NO
   L  R6,4(RSAVE)    GET SAVE AREA POINTER
   L  R6,24(R6)
     L  R6,8(R6)  POINT TO PAGE COUNT
   LH   R5,HPAGE
  CVD  R5,IEBED00         EBCDIC
   UNPK  2(4,R6),IEBED00+4(4)    RETURN NEW PAGE
NOPAGE   EQU   *
         L     R1,INPARA               *
    LA   R6,8          SET UP CONDITION
      TM   IEBED13,HIGHCODE          CODE
     BO   RETCC1                FOR RETURN
     LA    R6,4              TO CALLER
    TM   IEBED13,LOWCODE
    BO   RETCC1
    SR   R6,R6
RETCC1   EQU   *
         FREEMAIN R,LV=(0),A=(1)       *
     LR   R15,R6        PLACE RETURN CODE IN REG 15
RETCC2   EQU   *           LABEL FOR RETURN WHEN CORE NO GOTTEN
         L     13,4(13)                 RETURN TO CALLING PROGRAM
         RETURN (14,12),T,RC=(15)
PSER3    LM    R2,REVEN,SYSIN
         CLOSE  ((R2),,(R3),,(REVEN))
         B     PSFREE
PSFREE1  FREEPOOL  (1)
         BR    R7
PSHIGH   L     R2,=F'124'               SET COMPLETION CODE OF 8
         B     PSCODE                   *
PSLOW    L     R2,=F'128'               SET COMPLETION CODE OF 4
         B     PSCODE                   *
***********************************************************************
*                                                                     *
*TITLE         SYNAD ROUTINE                                          *
*                                                                     *
*                                                                     *
*FUNCTION      THE SYNAD ROUTINE FIRST ISSUES THE SYNADAF MACRO TO    *
*              DETERMINE THE TYPE OF I/O ERROR WHICH OCCURRED.  A     *
*              MESSAGE CONTAINING THIS INFORMATION IS PRINTED,  THE   *
*              SYNAD BUFFER IS FREED, THE COMPLETION CODE IS SET AND  *
*              CONTROL IS PASSED TO THE POST PROCESSOR ROUTINE.       *
*                                                                     *
*                                                                     *
*ENTRY         PSER1     I/O ERROR ON SYSUT1      SYNAD ENTRY         *
*              PSER2     I/O ERROR ON SYSUT2      SYNAD ENTRY         *
*              PSER4     I/O ERROR ON SYSIN       SYNAD ENTRY         *
*                                                                     *
*                                                                     *
*INPUT         REG1      ADDRESS OF I/O ERROR ANALYSIS                *
*                                                                     *
*                                                                     *
*OUTPUT        CONDITION CODE IS SET IN DSECT,IEBED                   *
*                                                                     *
*                                                                     *
*EXTERNAL      PRINT ROUTINE TO PRINT I/O ERROR MESSAGE               *
*REFERENCES    POST PROCESSOR AT EXIT                                 *
*                                                                     *
*                                                                     *
*ERROR         NONE                                                   *
*CONDITIONS                                                           *
*                                                                     *
***********************************************************************
PSER1    SYNADAF ACSMETH=QSAM            I/O ERROR ON SYSUT1
         L    R2,PTMSG+136
         MVC   8(18,R1),0(R2)          INSERT MESSAGE
         LA    R1,8(R1)                INCREMENT MESSAGE
         LNR   R2,RBASE                PRINT MESSAGE
         BAL   RLINK,PRINT             *
         SYNADRLS                      FREE SYNAD BUFFER AND SAVE AREA
         OI    IEBED13,HIGHCODE        SET COMPLETION CODE
         B     POST1
PSER2    B     PSER1
PSER4    B     PSER1
***********************************************************************
*                                                                     *
*TITLE         STARTJOB SUBROUTINE                                    *
*                                                                     *
*              THIS ROUTINE DETERMINES IF THE REQUIRED JOB CARD       *
*              ( AND JOBLIB CARD IF PRESENT ) HAS BEEN FOUND IN THE   *
*              INPUT DATA SET. WHEN FOUND, IT IS COPIED TO THE OUTPUT *
*              DATA SET.                                              *
*                                                                     *
*                                                                     *
*ENTRY         STARTJOB                                               *
*                                                                     *
*                                                                     *
*INPUT         INPUT IS IN THE FORM OF AN INTERNAL DSECT. IF A        *
*              PARTICULAR JOB NAME IS SPECIFIED, THE NAME FOR         *
*              COMPARISON IS LOCATED WITH IEIED32 AND THE JOB NAME    *
*              OF THE INPUT RECORD IS FOUND AT IEIED41.               *
*                                                                     *
*                                                                     *
*OUTPUT        WHEN THE CORRECT JOB CARD IS FOUND, IT IS COPIED TO    *
*              THE OUTPUT DATA SET FROM THE INPUT DATA SET LOCATED    *
*              BY RCARD                                               *
*                                                                     *
*                                                                     *
*EXTERNAL      THIS ROUTINE CALLS CARDTYPE, WHICH IS A SUBROUTINE     *
*REFERENCES    THAT DEFINES THE INPUT RECORD AS TO TYPE (JOB,STEP,ETC)*
*                                                                     *
*                                                                     *
*ERROR ROUTINE IF EODAD IS REACHED IN THIS ROUTINE, IT CONSTITUTES    *
*              AN ERROR AND A CONDITION CODE OF X'40' IS RETURNED TO  *
*              THE POST ROUTINE                                       *
*                                                                     *
***********************************************************************
 TITLE '           STARTJOB SUBROUTINE                IEBEDIT'
STARTJOB STM   R2,RLINK,IEBED50         SAVE REGISTERS
         L     R6,SYSUT1
         MVC   EODSAV(3),33(R6)         SAVE SYSUT1 EODAD
         LA    R3,STEODAD
         ST    R3,ADDR
         MVC   33(3,R6),ADDR+1
STTOP    BAL   RLINK,CARDTYPE           SET APPROPRIATE TYPE SWITCHES
         TM    WROTE,X'FF'              WRITTEN YET
         BC    8,STJOB                  NO - OMIT JOBLIB TEST
         TM    IEBED14,JOBLIB1          ANY JOBLIB CARD FOUND   YA01706
         BNO   STJOB                    IF NO BRANCH OUT        YA01706
         TM    IEBED12,JOBLIB           IS THIS THE JOBLIB CARD YA01706
         BO    STWRITE                  YES WRITE THE JOBLIB CD YA01706
         TM    IEBED14,CONCAT           IS IT A JOBLIB CONCAT   YA01706
         BO    STWRITE                  YES WRITE THE CONCAT CD YA01706
         NI    IEBED14,OFF-(JOBLIB1+CONCAT)   CLEAR SWITCHES    YA01706
         B     STJOB                    BRANCH OUT              YA01706
STWRITE  MVI   WROTE,X'FF'              SET WRITTEN SWITCH
         LR    R2,RCARD                 *
         L     R15,UPDATE              * PUT OUT RECORD
         BALR  R14,R15                 *
         TM    IEBED12,CONTINUE         CONTINUED
         BC    8,STCLR                  CLEAR CONTINUE SWITCH
         MVI   CON,X'FF'                SET CONTINUE SWITCH
         B     STGET                    GET NEXT RECORD
STCLR    NI    CON,OFF-OFF              CLEAR CONTINUE SWITCH
STGET    L     R4,SYSUT1
         GET   (R4)
         LR    RCARD,R1                SET UP PARAMETER FOR CARDTYPE
         TM    IEBED12,DATA             DD DATA STREAM           A29714
         BC    8,STTOP                  NO-RETURN TO SCAN        A29714
         CLC   0(3,RCARD),=C'/* '       /*-END OF DD DATA?      YL026VC
         BNE   STGET                    NO-GET NEXT RECORD       A29714
         XI    IEBED12,X'08'            TURN OFF DD DATA SWITCH  A29714
         B     STGET                                             A29714
         B     STTOP                    RETURN TO SCAN
STJOB    TM    IEBED12,JOB              JOB CARD
         BC    8,STDDDATA               NO-TEXT IF DD DATA STREAMA29714
         TM    IEBED10,START            START AT SPECIAL JOB
         BC    8,STWRITE                NO-GO WRITE
         L     R2,IEBED32               GET POINTER TO JOB NAME
         CLC   IEBED41(8),0(R2)         RIGHT JOB NAME
         BC    8,STWRITE                YES-GO WRITE
         B     STGET                    NO-GET NEXT RECORD
STDDDATA TM    IEBED12,DATA             DD DATA RECORD?          A29714
         BC    8,STCONT                 NO-CHECK IF CONTINUATION A29714
         B     STGET                                             A29714
STCONT   TM    CON,X'FF'                CONTINUED FROM LAST CARD
         BC    1,STWRITE                YES-GO WRITE
         TM    WROTE,X'FF'              WRITTEN YET
         BC    8,STGET                  NO-GO GET ANOTHER RECORD
         TM    IEBED14,COMMENT         COMMENT CARD?           @ZA04410
         BC    1,STWRITE               YES-GO WRITE            @ZA04410
         TM    IEBED14,SLASNON         /*NONE BLANK            @ZA07327
         BC    1,STWRITE               YES-GO WRITE            @ZA07327
         NI    WROTE,OFF-OFF            CLEAR WRITTEN SWITCH
STRET    L     R6,SYSUT1
         MVC   33(3,R6),EODSAV          RESTORE SYSUT1 EODAD
         LM    R2,RLINK,IEBED50
         L     RCARD,IEBED51+28         POINT TO NEW RECORD
         B     MATYPE
STEODAD  L     R2,=F'116'               SET MESSAGE CODE
         BAL   RLINK,PRINT              WRITE MESSAGE
         OI    IEBED13,EOFUT1
         OI    IEBED13,LOWCODE         SET COMPLETION CODE
         B     POST                     EXIT
ADDR     DS    F                        EODAD ADDRESS
EODSAV   DC    C'   '                   SAVE AREA FOR EODAD
WROTE    DC    X'00'
CON      DC    X'00'
***********************************************************************
*                                                                     *
*TITLE         CARDTYPE SUBROUTINE                                    *
*                                                                     *
*              THIS SUBROUTINE SCANS A RECORD AND IDENTIFIES IT AS    *
*              TO TYPE. THE DIFFERENT TYPES ARE - JCL,/*,EXEC,DD,     *
*              DD DATA,JOBLIB. IF A JOB CARD OR EXEC CARD IS FOUND,   *
*              THE JOB NAME IS SAVED. IF THE CARD IS CONTINUED ON     *
*              ANOTHER CARD, THIS IS SO INDICATED.                    *
*                                                                     *
*                                                                     *
*ENTRY         CARDTYPE                                               *
*                                                                     *
*                                                                     *
*INPUT         INPUT IS DEFINED AS A SINGLE RECORD FROM THE INPUT DATA*
*              SET LOCATED BY RCARD                                   *
*                                                                     *
*                                                                     *
*OUTPUT        OUTPUT IS IN THE FORM OF SWITCHES IN A DSECT NAMED     *
*              IEIED12 WHICH CONSISTS OF BINARY SWITCHES INDICATING   *
*              TYPES. JOB NAMES OR STEP NAMES ARE STORED IN IEIED41.  *
*                                                                     *
***********************************************************************
 TITLE '           CARD TYPE SUBROUTINE               IEBEDIT'
CARDTYPE STM   R2,RLINK,IEBED51         SAVE REGISTERS
         XR    R2,R2                    CLEAR REG 2
         XR    R3,R3                    CLEAR REG 3
         NI    IEBED12,OFF-OFF          CLEAR CARD TYPE SWITCHES
         NI    IEBED14,OFF-(CONCAT+COMMENT)   CLEAR SWITCHES   @ZA04410
         NI    IEBED14,OFF-SLASNON     CLEAR SWITCH            @ZA07327
         CLC   0(2,RCARD),=C'//'        JCL CARD
         BC    7,TYSLASHA               NO-GO TO /* TEST
         CLC   2(1,RCARD),=C'*'        COMMENT CARD              A38638
         BE    TYCOMM                 YES-GO TO SET COMMENT SW @ZA04410
         OI    IEBED12,JCL              SET JCL SWITCH
         TM    IEBED11,DDDATA           DD DATA INPUT STREAM?    A29714
         BO    TYRET                    YES-RETURN               A29714
         CLC   2(7,RCARD),=C'JOBLIB '   JOBLIB CARD
         BC    7,TYJOBCAT               NO-GO TO CONT EXPECTED @ZA07326
STCAT1   OI    IEBED12,JOBLIB           SET JOBLIB SWITCH      @ZA07326
         OI    IEBED14,JOBLIB1          SET SECOND JOBLIB SW    YA01706
         B     TYSPACE
TYCOMM   OI    IEBED14,COMMENT         SET COMMENT SWITCH      @ZA04410
         B     TYRET                   RETURN                  @ZA04410
TYJOBCAT CLC   2(7,RCARD),=C'JOBCAT '  JOBCAT CARD ?           @ZA07326
         BC    7,TYSPACE               NO THEN BRANCH          @ZA07353
         B     STCAT1                  BRANCH                  @ZA07326
TYCONT   CLC   71(1,RCARD),=C' '        COL.72 BLANK
         BE    TYCONTIN                YES-GOTO COMMA-BLANK TEST A29712
TYCONTSW OI    IEBED12,CONTINUE        SET CONTINUATION SWITCH   A29712
         B     TYRET                                             A29712
TYCONTIN XR    R3,R3                   CLEAR REG 3               A29712
         LA    R3,71(RCARD)            MAX SCAN COL.             A29712
         MVI   APOSTONE,X'00'          INIT APOST.-PAIRS SWITCH  A29712
TYLOOP4  CLC   0(1,R2),=C' '           FIND FIRST NON-BLANK      A29712
         BNE   TYAPOST                                           A29712
         LA    R2,1(R2)                                          A29712
         CR    R2,R3                   SCAN REACHED COL.72?      A29712
         BL    TYLOOP4                                           A29712
         B     TYRET                   COL.72 & NO CONT. FOUND   A29712
TYAPOST  CLC   0(1,R2),APOST           APOSTROPHE?               A29712
         BE    TYSWITCH                YES                       A29712
         CLC   0(2,R2),=C', '          COMMA-BLANK DELIMITER?    A29712
         BE    TYSWTEST                YES                       A29712
         CLC   0(1,R2),=C' '           BLANK?                    A29712
         BNE   TYPLUS1                 NO                        A29712
         CLI   APOSTONE,X'00'          APOST-PAIRS SWITCH OFF?   A29712
         BE    TYRET                   YES, NO CONT. FOUND       A29712
         B     TYPLUS1                 NO, REPEAT SCAN           A29712
TYSWTEST CLI   APOSTONE,X'00'          APOST-PAIRS SWITCH OFF?   A29712
         BE    TYCONTSW                YES, CONT. FOUND          A29712
         B     TYPLUS1                 NO, REPEAT SCAN           A29712
TYSWITCH CLI   APOSTONE,X'FF'          APOST-PAIRS SWITCH ON?    A29712
         BE    TYSETOFF                YES                       A29712
         MVI   APOSTONE,X'FF'          SET SW-1ST APOST OF PAIR  A29712
TYPLUS1  LA    R2,1(R2)                                          A29712
         CR    R2,R3                   SCAN REACHED COL.72?      A29712
         BL    TYAPOST                 NO                        A29712
         B     TYRET                   YES                       A29712
TYSETOFF MVI   APOSTONE,X'00'          SET SW-PAIR OF APOST FOUNDA29712
TYPLUS2  LA    R2,1(R2)                                          A29712
         CR    R2,R3                   SCAN REACHED COL.72?      A29712
         BE    TYRET                                             A29712
         CLC   0(1,R2),=C' '           BLANK?                    A29712
         BE    TYRET                   YES, NO CONT. RECORD      A29712
         CLC   0(2,R2),=C', '          COMMA-BLANK DELIMITER?    A29712
         BE    TYCONTSW                YES, CONT. FOUND          A29712
         CLC   0(1,R2),APOST           APOSTROPHE?               A29712
         BE    TYSWITCH                YES                       A29712
         B     TYPLUS2                 NO, CONTINUE SCAN         A29712
TYSLASHA CLC   0(3,RCARD),=C'/* '       /* CARD                 YL026VC
         BC    7,TYSLNON                NO-GO TO RETURN        @ZA07327
SETSLASH OI    IEBED12,SLASHA           SET /* SWITCH          @ZA11930
         B     TYCONT                   CHECK FOR CONTINUATION
TYSLNON  CLC   0(2,RCARD),=C'/*'       /*NONE BLANK?           @ZA07327
         BC    7,TYRET                 NO GO TO RETURN         @ZA07327
         CLC   2(3,RCARD),=C'EOF'      /*EOF CARD?             @ZA11930
         BE    SETSLASH                YES,SET SLASHA SW       @ZA11930
         OI    IEBED14,SLASNON          SET /*NONE BLANK SW    @ZA07327
         B     TYCONT                   CHECK FOR CONTINUATION @ZA07327
TYSPACE  LR    R2,RCARD
TYLOOP1  LA    R2,1(R2)                 FIND FIRST BLANK
         CLC   0(1,R2),=C' '            BLANK CHARACTER
         BC    7,TYLOOP1                NO-GET NEXT CHARACTER
         LR    R3,R2                    FIND NO. OF CHARS. TO BLANK
         SR    R3,RCARD
         SH    R3,THREE                 ACCOUNT FOR // AND BLANK
TYLOOP   LA    R2,1(R2)                 FIND NEXT NON-BLANK
         CLC   0(1,R2),=C' '            BLANK CHARACTER
         BC    8,TYLOOP                 YES-GET NEXT CHARACTER
         TM    CON,X'FF'                CONTINUATION EXPECTED? @ZA07353
         BO    TYCONT                   YES                    @ZA07353
         CLC   0(4,R2),=C'JOB '         JOB CARD
         BC    7,TYEXEC                 NO-GO TO EXEC CHECK
         OI    IEBED12,JOB              SET JOB SWITCH
         LA    R2,3(R2)                SETUP FOR CONTINUATION CK.A29712
         NI    IEBED12,OFF-JOBLIB       CLEAR JOBLIB SWITCH
         MVC   IEBED41(8),=C'        '  CLEAR NAME FIELD
         LTR   R3,R3                    TEST FOR BLANK JOB NAME   M4212
         BC    4,TYCONT                 BRANCH IF BLANK           M4212
STMOVEJ  EX    (R3),STEX1               MOVE JOB NAME
         B     TYCONT                   CHECK FOR CONTINUATION
TYEXEC   CLC   0(5,R2),=C'EXEC '        EXECUTE CARD
         BC    7,TYDD                   NO-CHECK FOR DD CARD
         OI    IEBED12,EXEC             SET EXEC SWITCH
         LA    R2,4(R2)                SETUP FOR CONTINUATION CK.A29712
         NI    IEBED12,OFF-JOBLIB       CLEAR JOBLIB SWITCH
         MVC   IEBED41(8),=C'        '  CLEAR NAME FIELD
         LTR   R3,R3                    TEST FOR BLANK STEP NAME
         BC    4,TYCONT                 BRANCH IF BLANK
STMOVES  EX    (R3),STEX1               MOVE STEP NAME
         B     TYCONT                   CHECK FOR CONTINUATION
TYDD     CLC   0(3,R2),=C'DD '          DD CARD
         BC    7,TYCONT                 NO-CHECK FOR CONTINUATION
         OI    IEBED12,DD               SET DD SWITCH
         LTR   R3,R3                    TEST IF BLANK DD-NAME   YA01706
         BC    11,TYLOOP2               NO,BRANCH OUT           YA01706
         TM    IEBED14,JOBLIB1          WAS PREV. CARD A JOBLIB YA01706
         BNO   TYLOOP2                  NO, BRANCH OUT          YA01706
         OI    IEBED14,CONCAT           SET ON JOBLIB CONCAT SW YA01706
TYLOOP2  LA    R2,1(R2)                 FIND NEXT BLANK CHARACTER
         CLC   0(1,R2),=C' '            BLANK
         BC    7,TYLOOP2                NO-GET NEXT CHARACTER
TYLOOP3  LA    R2,1(R2)                 FIND NEXT NON-BLANK
         CLC   0(1,R2),=C' '            BLANK
         BC    8,TYLOOP3                YES-GET NEXT CHARACTER
         CLC   0(5,R2),=C'DATA '        DD DATA
         BC    7,TYCONT                 NO-CHECK FOR CONTINUATION
         OI    IEBED12,DATA             SET DD DATA SWITCH
         B     TYCONT                   GO TO CONTINUATION CHECK
TYRET    LM    R2,RLINK,IEBED51         RESTORE REGISTERS
         BR    RLINK
STEX1    MVC   IEBED41(1),2(RCARD)
APOSTONE DS    X                                                 A29712
APOST    DC    X'7D'                                             A29712
THREE    DC    H'3'
***********************************************************************
*TITLE         'PUT-PRINT SUBROUTINE'                                 *
*                                                                     *
*FUNCTION      THIS SUBROUTINE PERFORMS ALL OUTPUT OPERATIONS FOR THE *
*              ENTIRE IEBEDIT PROGRAM.  MESSAGES, DELETED RECORDS, AND*
*              THE NEWLY CREATED JOB STREAM MAY BE WRITTEN ON THE     *
*              SYSPRINT DATA SET.  THE OUTPUT DATA SET (SYSUT2) CON-  *
*              TAINS THE NEW JOB STREAM.                              *
*                                                                     *
*ENTRY POINTS  PUT - TO WRITE RECORDS ON THE SYSUT2 DATA SET          *
*                             BAL 14,PUT                              *
*              PRINT - TO WRITE MESSAGES AND RECORDS ON THE SYSPRINT  *
*              DATA SET       BAL 14,PRINT                            *
*                                                                     *
*INPUT         TO 'PUT'       R2 - ADDR OF RECORD TO BE WRITTEN       *
*              TO 'PRINT' - ONE OF THE FOLLOWING                      *
*                             R2 - ADDR OF RECORD TO BE WRITTEN       *
*                             IEBED46 - UT2 SWITCH ON                 *
*                                             -OR-                    *
*                             R2 - 0 OR NEGATIVE                      *
*                             R1 - ADDR OF MESSAGE OR RECORD          *
*                                             -OR-                    *
*                             R2 - INDEX NUMBER FOR MESSAGE ADDR TABLE*
*                                                                     *
*OUTPUT        NO PARAMETERS PASSED                                   *
*                                                                     *
*EXTERNAL REFERENCES    NONE                                          *
*                                                                     *
*EXITS         RETURN TO CALLING ROUTINE  -  BR 14                    *
*                                                                     *
*NOTES         ALL RECORDS WRITTEN ON THE SYSUT2 DATA SET ARE ALSO    *
*              PUT ON THE SYSPRINT DATA SET UNLESS (NOPRINT' IS SPECI-*
*              FIED ON THE EDIT CONTROL CARD.                         *
***********************************************************************
 TITLE '           PUT - PRINT SUBROUTINE             IEBEDIT'
PUT      STM   R2,RLINK,IEBED51         SAVE REGISTERS
         L     DCBAD,SYSUT2             GET SYSUT2 DCB ADDRESS
         PUT   (DCBAD)                  WRITE RECORD ON SYSUT2
         MVC   0(80,1),0(R2)            MOVE SYSUT2 RECORD IN AREA
         TM    IEBED10,NOPRINT          IF NOPRINT SPECIFIED ***
         BO    PTRETURN                 * RETURN
         OI    IEBED46,UT2              TURN UT2 ENTRY BIT ON
         B     PTCONT                   GO TO PRINT ROUTINE
PRINT    STM   R2,RLINK,IEBED51         SAVE REGISTERS
PTCONT   TM    IEBED13,PRINTSW          SYSPRINT OPENED CORRECTLY
         BZ    PTRETURN                 * NO - NO SYSPRINT
         L     DCBAD,SYSPRINT           GET SYSPRINT DCB ADDRESS
         TM    IEBED46,FTS              IS FIRST TIME SWITCH ON
         BO    PTRTN                    NOT FIRST TIME
         BAL   RLINK,PTPINIT            GO TO PRINT FIRST HEADING
PTRTN    LTR   R2,R2                    IS MSG IN ANOTHER ROUTINE
         BC    8,PTOWNMSG               *YES- IT'S 80 BYTES
         BC    4,PT120                  *     IT'S 120 BYTES
         TM    IEBED46,UT2              IS UT2 RECORD ALSO FOR SYSPRINT
         BO    PTPRNT                   * YES
         PUT   (DCBAD)                  PUT OUT MEESAGE
         L     R2,PTMSG(R2)             GET MESSAGE ADDRESS
         MVC   0(1,1),ASACODE           ASA CODE ON BUFFER
         MVC   1(47,1),0(2)             MOVE MESSAGE INTO BUFFER
         MVI   48(1),X'40'              BLANK REST OF BUFFER
         MVC   49(72,1),48(1)           *
         B     PTSPACE
PTOWNMSG LR    R2,R1                    SAVE MESSAGE ADDRESS
         PUT   (DCBAD)
         MVC   0(1,1),ASACODE           ASACODE FO RSPACING
         TM    IEBED14,DELETE           IS RECORD TO BE DELETED
         BO    PTDLET                   * YES - APPEND RECORD
         MVC   1(80,1),0(2)             MOVE MESSAGE INTO BUFFER
         MVI   81(1),X'40'              BLANK REST OF BUFFER
         MVC   82(39,1),81(1)           *
         B     PTSPACE
PTDLET   XI    IEBED14,DELETE           TURN DELETE SWITCH OFF
         MVI   1(1),X'40'               INDENT
         MVC   2(15,1),1(1)             *
         MVC   17(80,1),0(R2)           PUT DATA IN BUFFER
         MVI   97(1),X'40'              BLANK OUT REST OF BUFFER
         MVC   98(8,1),97(1)            BLANK
         MVC   106(15,1),DLETMSG        APPEND RECORD WITH 'DELETE'
         B     PTSPACE
PT120    LR    R2,R1                    PUT MSG ADDRESS IN SAVE REG
         PUT   (DCBAD)                  'PUT' MESSAGE
         MVC   0(1,1),ASACODE           CARRIAGE CONTROL(ASA) CODE
         MVC   1(120,1),0(2)            MOVE 120 BYTE MSG INTO BUFFER
         B     PTSPACE
PTPRNT   XI    IEBED46,UT2              TURN UT2 SWITCH OFF
PT1      PUT   (DCBAD)                  PUT OUT RECORD
         MVC   0(1,1),ASACODE           MOVE ASA CODE INTO BUFFER
         MVI   1(1),X'40'              INDENT SYSUT2 OUTPUT
         MVC   2(15,1),1(1)             *
         MVC   17(80,1),0(R2)           PUT DATA IN BUFFER
         MVI   97(1),X'40'              BLANK OUT REST OF BUFFER
         TM    IEBED14,INSERT           IS RECORD TO BE INSERTED
         BO    PTINSRT                  * YES - APPEND RECORD
         MVC   98(23,1),97(1)           *
         B     PTSPACE
PTINSRT  XI    IEBED14,INSERT           TURN INSERT SWITCH OFF
         MVC   98(8,1),97(1)            BLANK
         MVC   106(15,1),INSRTMSG       APPEND RECORD TO INSERT
PTSPACE  MVI   ASACODE,SP               REGULAR SPACING
         LH    LINE,LNCNT               GET SAVED LINT COUNTER
         BCT   LINE,PTSTORE             DECREMENT LINE COUNTER
         LA    RLINK,PTRETURN           INITIALIZE RETURN TO RESTORE
         B     PTLINIT                  GO TO PRINT HEADING
PTSTORE  STH   LINE,LNCNT               RESTORE LINE COUNTER
PTRETURN LM    R2,RLINK,IEBED51         RELOAD SAVED REGISTERS
         BR    RLINK                    RETURN
         SPACE
************  PAGE AND LINE INITIALIZATION SUBROUTINE  ****************
PTPINIT  OI    IEBED46,FTS              TURN FIRST TIME SWITCH ON
PTLINIT  MVC   LNCNT(2),H49             INITIEALIZE LINE COUNT
         LH    PAGE,HPAGE               GET PAGE COUNTER
         CVD   PAGE,DBLWD               CONVERT PAGE NUMBER FOR HEADING
         UNPK   MSGPG(4),DBLWD+4(4)     *
         OI    MSGPG+3,XF               *
         ST    1,PTMSG                  SAVE REGISTER 1
         PUT   (DCBAD)                  PUT OUT HEADING
         MVC   0(81,1),HEADING          MOVE HEADIN GINTO BUFFER
         MVI   81(1),X'40'             BLANKS IN RESR OF BUFFER
         MVC   82(39,1),81(1)           *
         L     1,PTMSG                  RESTORE REGISTER 1
         LA    PAGE,1(PAGE)             INCREMENT PAGE NUMBER
         STH   PAGE,HPAGE               SAVE PAGE COUNT
         MVI   ASACODE,CMIN             SAVE ASA CODE FOR 3 SPACES
         BR    RLINK                    BRANCH TO MAIN ROUTINE
*                                                                     *
************************************  CONSTANTS  **********************
*                                                                     *
H1       DC    H'1'
H49      DC    H'49'                    PAGE LINE COUNT
XF       EQU   X'F0'
X0       EQU   X'00'
UT2      EQU   X'08'                    SYSUT2 ENTRY SWITCH
FTS      EQU   X'01'                    FIRST TIME SWITCH
HEADING  DC    CL16'1'
         DC    CL48'IEBEDIT LISTING'
         DC    C'   PAGE '              *
MSGPG    DC    C'         '             *
DLETMSG  DC    CL15'DELETED RECORD'
INSRTMSG DC    CL15'INSERTED RECORD'
CMIN     EQU   X'60'                    MINUS SIGN - 3 SPACE ASA CODE
PTMSG    DS    F
         DC    A(MSG4)
         DC    A(MSG8)
         DC    A(MSG12)
         DC    A(MSG16)
         DC    A(MSG20)
         DC    A(MSG24)
         DC    A(MSG28)
         DC    A(MSG32)
         DC    A(MSG36)
         DC    A(MSG40)
         DC    A(MSG44)
         DC    A(MSG48)
         DC    A(MSG48)
         DC    A(MSG48)
         DC    A(MSG60)
         DC    A(MSG48)
         DC    A(MSG48)
         DC    A(MSG44)
         DC    A(MSG48)
    DC   A(MSG80)
         DC    A(MSG84)
         DS    F                                 RESERVED
         DC    A(MSG92)
         DC    A(MSG96)
    DC  A(MSG100)
   DC  A(MSG104)
         DS    F                                 RESERVED
         DS    F
         DC    A(MSG116)
         DS     F
         DC    A(MSG124)
         DC    A(MSG128)
         DC    A(MSG132)
         DC    A(MSG136)
         DC    A(MSG136)
         DC    A(MSG136)
         DC    A(MSG148)
         DC    A(MSG152)
*                                                                     *
***********************************************************************
         DS    0F
SCANAD   DC    A(SCAN)
UPDATE    DC   A(UPDATER)               UPDATE ROUTINE ADDRESS
MASTPNAM DC    CL80'IEB023I                  STEP COULD NOT BE FOUND'
         DS    0F
MAADDEND DS    F                       ADDRESS OF END STEPNAME
         LTORG
 TITLE '           UPDATE CONTROL ROUTINE             IEBEDIT   '
*
UPDATER  STM   R14,RWORK,IEBED52
    BALR   R9,0
    USING  *,R9
*
*
*                            R2 POINTS AT RECORD TO BE OUTPUTED
*                            TO SYSUT2 AFTER UPDATES
*
*
*              THIS ROUTINE WILL CONTROL ALL MODIFICATIONS
*                            TO A PHYSICAL RECORD
*
*
*
UPSLACH   DS   0H       ROUTINE TO HANDLE UPDATING /* INTO OUTPUT
*
    CLC  SUBCHARS(L'SUBCHARS),0(R2)   DOES RECORD CONTAIN ..*
     BNE  UPPUT      NO    OUTPUT
         NI    IEBED11,X'DF'           ISSUE DDDATA SWITCH OFF   A38600
         NI    IEBED12,X'F7'           INSURE DATA SWITCH IS OFF A38600
*
    OI  IEBED14,DELETE   INDICATE DELETE RECORD
    BAL  R8,UPPRINT    PRINT DELETED RECORD
*
    MVC  0(L'REPCHARS,R2),REPCHARS       MAKE SUBSTITION
    OI   IEBED14,INSERT      INDICATE INSERT RECORD
     B   UPPUT      PUT AND PRINT RECORD
*
UPPRINT   DS   0H     ROUTINE TO PRINT AND RETURN TO WITHIN UPDATR
    LR   R3,R2     SAVE AREA  ADDRESS
    LR   R1,R2   SET UP FOR PRINT
    SR   R2,R2       CLEAR FOR PRINT
    BAL  RLINK,PRINT   GO TO PRINT
    LR   R2,R3   RESTORE AREA ADDRESS
      BR    R8     RETURN  CALLLER
*
UPPUT    DS   0H     PUT ROUTINE
*            PUTS RECORD AND RETURNS TO CALLER OF UPDATER
   BAL   RLINK,PUT          GO TO PUT ROUTINE
*
UPRETURN    DS   0H          RETURN TO CALLER OF UPDATER ROUTINE
         LM    R14,RWORK,IEBED52       RESTORE REGS
         BR    R14                     RETURN TO CALLER
*
*
SUBCHARS   DC   CL3'..*'
REPCHARS    DC   CL3'/* '
*
*
     LTORG
*
*            FOLLOWING CARD MUST BE LAST CARD OF
*           UPDATE CONTROL ROUTINE
*
        DROP    R9
*
*
 TITLE '           CARD SCAN SUBROUTINE               IEBEDIT'
IEBEDIT  CSECT                                                 @YA02576
***********************************************************************
*                                                                     *
*                                                                     *
*TITLE         CARD SCAN SUBROUTINE                                   *
*                                                                     *
*                                                                     *
*FUNCTION      THIS ROUTINE WILL SCAN CONTROL CARDS FOR THE           *
*              IEBEDIT PROGRAM. THE SUBROUTINE IS DIVIDED INTO        *
*              TWO INTER RELATED PHASES. PHASE TWO (SCSEARCH)         *
*              WILL CONTROL THE ACTUAL INPUT AND OUTPUT ASSOCIATED    *
*              WITH THE CONTROL CARD PROCESSING.  IT ALSO HANDLES     *
*              THE SCANNING OF DELIMITED CHARACTER STRINGS AND        *
*              SUPPLIES THESE STRINGS TO PHASE ONE(SCAN) FOR          *
*              INTERAGATION.  PHASE ONE (SCAN) INTERAGATES THE        *
*              CHARACTER STRINGS TO DETERMINE VALID NAME, OPERATOR,   *
*              AND OPERAND FIELDS.  THE VALID OPERATORS AND           *
*              OPERANDS ARE DEFINED VIA A SERIES OF TABLES WHICH      *
*              IS POINTED TO BY THE PRIMARY OPT CODE TABLE POINTER.   *
*              THIS POINTER IS LABELED SCOPOINT.  THESE TABLES        *
*              ALSO INDICATE WHAT CONTROL INFORMATION IS TO BE        *
*              PLACED IN THE IEBEDIT WORK AREA.                       *
*                                                                     *
*                                                                     *
*ENTRY POINT   SCAN                                                   *
*                                                                     *
*                                                                     *
*INPUT         AN OPENED DCB ADDRESS IN THE IEBEDIT WORK AREA         *
*              AND A TEN WORD CARD SCAN WORK AREA                     *
*                                                                     *
*                                                                     *
*OUTPUT        CONTROL INFORMATION PLACED IN THE IEBEDIT WORK         *
*              AREA (IEBED00 DSECT) TO INDICATE CONTROL CARD          *
*              INFORMATION                                            *
*                                                                     *
*                                                                     *
*EXTERNAL      PRINT ROUTINE- PRINTING OF CONTROL CARDS               *
*ROUTINES      AND DIAGONISTIC INFORMATION IF ANY                     *
*                                                                     *
*                                                                     *
*EXITS         NORMAL EXIT IS RETURN TO CALLING ROUTINE               *
*              END OF DATA EXIT IS TO POST PROCESSOR ROUTINE          *
*                                                                     *
*                                                                     *
*TABLES/WORK AREAS                                                    *
*              IEBED00 DSECT - REGISTER 12 IS DSECT BASE              *
*              SPECIAL CARD SCAN WORK AREA OF TEN                     *
*              WORDS AT IEBED45 IN DSECT                              *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
*
*                             CARD SCAN ROUTINE
*
*
*
SCAN     STM   R2,RBASE,IEBED50           SAVE  REGS
    DROP  RBASE
        BALR  RBASE,R0
        USING   *,RBASE
*
      TM   IEBED13,EOFIN           EOF  ON SYSIN
       BO    SCEOD2        YES
*
         MVI   SC4,X'00'                INIT FOR
*                                            SCSEARCH ROUTINE
         TM    SC1,SCSINS               REQUEST ANOTHER SUB CARD
         BO    SC400                     YES
*
SC90     XC    IEBED10(IEBED13-IEBED10-1),IEBED10      CLEAR SWITCHES
         MVC   IEBED60(4),IEBED61       RE-ESTABLISH PERM WORK
         L     R6,SCOPOINT              SET UP
         ST    R6,SCCOPT                CURRENT OPT TABLE POINTER
SC99     NC  SC4(4),=X'00000020'
         EJECT
*
SC100    LA    R8,4                     INDICATE SEARCH FOR BLANK
         BAL   RLINK,SCSEARCH                BYPASS NAME
    TM  SC2,SCEND     IS  END ON
         BO    SCE1                     ERROR *** INVALID NAME FIELD
   C  R5,=F'7'            IS NAME TO LONG
     BC    2,SCE1                       * * *  ERROR INVALID NAME
         OI    SC2,SCNAMEF
         LA    R8,8                     INDICATE SEARCH FOR
         BAL   RLINK,SCSEARCH           NON BLANK
         TM    SC2,SCEND                     FIMD OPERATOR
         BO    SCE2                     ERROR *** INVALID SYNTAX
         LA    R8,4
         BAL   RLINK,SCSEARCH           INDICATE SEARCH FOR
         TM    SC2,SCEND                 BLANK
*                                          ISOLATE OPERATOR
         BO    SCE2                     ERROR *** INVALID SYNTAX
*                                       IS OPT CODE VALID
         MVC   SC1000(8),=C'        '
         C     R5,=F'7'                 LENGTH OK              @YA02589
         BC    2,SCET10                ERROR OPERATOR LENGTH   @YA02589
         EX    R5,SCEX100               SET UP OPT CODE FOR COMPARE
         L     R8,SCCOPT
SC105    CLC   SCOPCODE(8,R8),SC1000    OPT CODE FOUND
         BE    SC110                         YES
         TM    SCOPINFO(R8),SCOPILST    END OF OPT TABLE
         BO    SC106                         YES POSSIBLE ERROR
         LA    R8,SCOPTLEN(R8)          UP POINTER
         B     SC105                    LOOP
SC106    TM    SC1,SCMULS+SCSINS        ARE WE PROCESSING SUBSIDARY
         BO    SC450                    CARDS - YES END SUBSIDARY
         B     SCE3                     ERROR *** INVALID OPT CODE
SCET10   OI    IEBED13,INPUTON         INDICATE SYSIN            A38600
         B     SCE10                   BRANCH TO ERROR TABLE     A38600
*
SC110    ST    R8,SCCOP                 SET UP CURRENT OPT POINTER
    LA   R9,SCOPTON(R8)
         BAL   RLINK,SCTURNON           TURN ON SWITCHES
         OI    SC2,SCOPTF               OPERATOR FOUND SWITCH
         L     R9,SCOPPARM(R8)          SET UP CURRENT PARM TABLE
         ST    R9,SCCPT
         LA    R8,8                     INDICATE SEARCH FOR
         BAL   RLINK,SCSEARCH            NON BLANK
*                                        FIND FIRST OPERAND
         TM    SC2,SCEND                END DETECTED
         BO    SCANPP                   YES NO OPERANDS GO TO POST
*                                       PROCESSOR
         EJECT
*
*                                  OPERAND PROCESSOR
SC200    EQU   *
         LA    R8,12               INDICATE SEARCH
         BAL   RLINK,SCSEARCH      FOR DELIMITER
         L     R8,SCCPT            GET CURRENT PARM TABLE
         MVC   SC1000(8),=C'        '
         CL    R5,=F'7'                 LENGTH OK              @ZA04414
         BC    2,SCE11             ERROR *** OPERAND LENGTH    @YA02589
         EX    R5,SCEX100          SET UP OPERAND
SC205    CLC   SCPMCODE(8,R8),SC1000    OPERAND FOUND
         BE    SC210                    YES
         TM    SCPMINFO(R8),SCPMILST   END OF OPERAND SEARCH
         BO    SCE4                     ERROR ***  INVALID OPERAND
         LA    R8,SCPMTLEN(R8)          UP POINTER
         B     SC205                    LOOP
SC210    EQU   *
         LA    R9,SCPMTON(R8)           TURN ON OPERAND
         BAL   RLINK,SCTURNON           SWITCHES
         ST    R8,SCCP                  SAVE PARM POINTER
         TM    SCPMINFO(R8),SCPMIKEY    IS THIS KEYWORD ONLY OPERAND
         BZ    SC220                    NO, CONTINUE PROCESSING
         CLI   SCFUN+3,X'1C'            DELIMITER COMMA
         BE    SC200                    YES LOOP TO PROCESS NEXT PARM
         TM    SC2,SCEND                END DETECTED
         BO    SCANPP                   YES GO TO POST PROCESSOR
         B     SCE5                     ERROR *** INVALID OPERAND FIELD
*                                            FORMAT
*                                  OPERAND VALUE HANDLER
SC220    L     R6,SCCP
         TM    SC2,SCEND
         BO    SCE6                     ERROR *** INVALID OPERAND VALUE
SC225    CLI   SCFUN+3,X'20'
         BNE   SCE7                     ERROR *** INVALID DELIMITER
SC227    SR    R15,R15                  INDICATE SEARCH FOR DELIMITER
         TM    SCPMINFO(R6),SCPMICS     WITH OR WITHOUT C. S.
         BZ    SC228                    WITHOUT C. S.
         LA    R15,4(R15)               WITH C. S.
SC228    LA    R8,12(R15)
         BAL   RLINK,SCSEARCH           GO TO SEARCH
         LTR   R5,R5                    IS LENGTH ZERO
         BC    11,SC230                 NO
         CLI   SCFUN+3,X'14'            YES, IS THIS A SUBPARAMETER
         BNE   SCE5                     ERROR *** INVALID OPERAND FIELD
         TM    SCPMINFO(R6),SCPMISUB         FORMAT
         BZ    SCE8                     SUBPARAMETERS ALLOWED
*                                       ERROR *** SUBPARMETER NOT ALLOW
         TM    SC1,SCINSUB              ALREADY IN SUBPARMETER
         BO    SCE5                     ERROR *** INVALID OPERAND FIELD
*                                            FORMAT
         OI    SC1,SCINSUB              INDICATE IN SUBPARAMETER
         B     SC227
SC230    TM    SCPMINFO(R6),SCPMIFIX    IS THIS A FIXED OR VARIABLE
         L     R15,SCPMACT(R6)               OPERAND
         BO    SC235                    FIXED
*                                       VARIABLE
         BALR  R14,R15             PASSED TO ACTION ROUTINE
         EX    R0,*+4(R15)              R4 BEGIN VALUE
         B     SC236                    R5 LENGTH -1 OF VAVE
*                                       R14 RETURN ADDRESS
         B     SCE5                     ERROR *** INVALID OPERAND FIELD
*                                            FORMAT
SC236    LM    R1,R4,SCFD               INIT AFTER
         L     R6,SCCP                  ACTION ROUTINE
         B     SC240
SC235    EQU   *                        FIXED OPERAND
         MVC   SC1000(8),=C'        '
         C     R5,=F'7'                 LENGTH OK
         BC    2,SCE9                   ERROR *** OPERAND VALUE
         EX    R5,SCEX100                    LENGTH ERROR
SC237    CLC   SCFOPVAL(8,R15),SC1000   OPERAND VALUE FOUND
         BE    SC238                    YES
         TM    SCFOPINF(R15),SCFOPILT   LAST ENTRY
         BO    SCE6                     ERROR *** INVALID OPERAND VALUE
         LA    R15,SCFOPLEN(R15)        UP POINTER
         B     SC237                    LOOP
SC238    LA    R9,SCFOPTON(R15)         GO TO TURN ON
         BAL   RLINK,SCTURNON
*        B     SC240
*
SC240    EQU   *
      CLI  SCFUN+3,X'2C'          DELIMITER   -
      BE   SC227            YES  GET NEXT SUB-PARM
         TM    SC1,SCINSUB              ARE WE PROCESSING SUB PARAMETER
         BZ    SC250                    NO
         CLI   SCFUN+3,X'18'            DELIMITER )
         BE    SC245                    YES
         CLI   SCFUN+3,X'1C'            DELIMITER ,
         BE    SC227             YES
         B     SCE7                     ERROR *** INVALID DELIMITER
SC245    LA    R8,12                    INDICATE SEARCH
         BAL   RLINK,SCSEARCH           FOR NEXT DELIMITER
         NI    SC1,OFF-SCINSUB
         LTR   R5,R5                    LENGTH OK
         BC    4,SC250                  YES
         B     SCE1                     ERROR *** INVALID SYNTAX
SC250    TM    SC2,SCEND                END NOTED
         BO    SCSCANPP
         CLI   SCFUN+3,X'1C'            DELIMITER COMMA
         BE    SC200                    END OF OPERAND - GO TO
         B     SCE7                     PROCESS NEXT
*                                       ERROR *** INVALID DELIMITER
*
*                                  END OPERAND PROCE
         EJECT
*
*
*                                  SCAN POST PROCESSOR
*
*                                       CARD IS OK SO FAR
SCANPP   EQU   *
*
         L     R8,SCCPT                 GET CURRENT PARM
         SR    R9,R9                    TABLE
SC500    EQU   *
         IC     R9,SCPMTON(R8)          GET DISPLACEMENT
         LA    R14,IEBED10(R9)          TO CHECK IS PARAMETER SPECIFIED
         IC    R15,SCPMTON+1(R8)
         EX    R15,SCEX101              SPECIFIED
         BO    SC505                    YES
         IC     R9,SCPMASSM(R8)         NO
         LA    R14,IEBED10(R9)          ASSUM PARAMETER
         IC    R15,SCPMASSM+1(R8)            SWITCHES
         EX    R15,SCEX102
SC505    TM    SCPMINFO(R8),SCPMILST    END OF TABLE
         BO    SC520                    YES
         LA    R8,SCPMTLEN(R8)          NO
         B     SC500                    LOOP
SC520    EQU   *
         L     R8,SCCOP                 GET OPT CODE
         IC    R9,SCOPREQ(R8)
         LA    R14,IEBED10(R9)
     SR   R15,R15
         IC    R15,SCOPREQ+1(R8)
     LTR   R15,R15
    BC   8,SC521
         EX    R15,SCEX101
         BZ    SCE13                    ERROR *** REQUIRED OPERAND
SC521   EQU   *
   L  R15,SCOPSPC(R8)      GET SPECIAL DIAG POINTER
    LTR  R15,R15    ANY SPECIAL DIAG
     BC    8,SC522        NO
    BALR  R14,R15                YES
SC522   EQU   *
         LA    R8,20                    OMITTED
         BAL   RLINK,SCSEARCH           SEARCH FLUSH
         TM    SC1,SCSINS               ARE PROCESSING SINGLE
         BO    SC600                    SUB CARDS
         TM    SC1,SCMULS               ARE PROCESSING MULTIPLE
         BO    SC700                    SUB CARDS
*
     L   R8,SCCOP
         TM    SCOPINFO(R8),SCOPISO     DOES THIS OPT CODE
         BO    SC650                    ALLOW SINGLE SUB CARDS
         TM    SCOPINFO(R8),SCOPISA     DOES THIS OPT CODE
         BO    SC750                    ALLOW MULTIPLE SUB CODES
*
*
SC530    EQU   *
         SR    R15,R15                  RETURN CODE
SC531  EQU   *
    TM  IEBED13,EOFUT1
    BO   SCE12
      LM  R2,RBASE,IEBED50
         BR    RLINK                    RETURN
         EJECT
*
SC650    L     R9,SCOPSUB(R8)           GET SUB OPT TABLE
         ST    R9,SCCOPT
         OI    SC1,SCSINS               INDICATE PROCESSING SUB OPT
SC653  NC  SC4(3),=X'000000'      RESET  FOR SUB OPT
         B     SC100                    CHECK FOR SUB OPT
*
*
SC600    EQU   *
         LA    R15,4                    INDICATE THAT ANOTHER
*                                       OR FIRST SUB OPT HAS BEEN
*                                       FOUND
         B     SC531
*
SC750    EQU   *
         L     R9,SCOPSUB(R8)           GET SUB OPT TABLE
         ST    R9,SCCOPT
         OI    SC1,SCMULS               INDICATE MUL SUB OPS
*
         B     SC653
*
SC700    EQU   SC653
*
*
SC400    EQU   *                        REQUESTING ANOTHER SUB OPT
         OI    SC1,SCSINS2
         B     SC653
SC450    OI    SC1,SCOVERR              OPT CODE NOT FOUND WHEN
         TM    SC1,SCMULS               PROCESSING MUL OR SINGLE
         BO    SC460                    SUB OPT
         TM    SC1,SCSINS2                   SINGLE SUB OPT
         BZ    SC452                    FIRST LOOK FOR SUB OPT
         LA    R15,8                    RETURN CODE
         NI    SC1,OFF-SCSINS-SCSINS2   TURN OFF SWITCHES
         B     SC531
SC452    NI    SC1,OFF-SCSINS           SINGLE SUB OPT
         B     SC530                    NONE FOUND
SC460    NI    SC1,OFF-SCMULS           TURN OFF
         LA    R15,12
         B     SC531
*
*                                  RETURNS
*
*                                    0  MAIN OPT  NO SUBS
*
*                                    4  A-MAIN OPT  1 SINGLE SUB
*                                       B-          1 SINGLE SUB
*
*                                    8  REQUESTING ANOTHER SUB OPT
*                                       AND NONE AVAILBLE
*
*                                    12 MAIN OPT WITH MULT SUB OPTS
*
         EJECT
*
*                                       ERROR TABLE
*
         DS    0F
SCERROR  EQU   *-32
SCE1     BAL   R2,SCE0                  36
SCE2     BAL   R2,SCE0             40
SCE3     BAL   R2,SCE0             44
SCE4     BAL   R2,SCE0             48
SCE5     BAL   R2,SCE0             52
SCE6     BAL   R2,SCE0             56
SCE7     BAL   R2,SCE0             60
SCE8     BAL   R2,SCE0             64
SCE9     BAL   R2,SCE0             68
SCE10    BAL   R2,SCE0       72                                  A38600
SCE11    BAL   R2,SCE0             76
SCE12    BAL   R2,SCE0             80
SCE13    BAL   R2,SCE0             84
SCSE1    BAL   R2,SCEE1                88
SCSE2    BAL   R2,SCEE1                 92
SCSE3    BAL   R2,SCEE1                96
SCE14   BAL  R2,SCE0         100
SCE15   BAL  R2,SCE0          104
SCE0     LA    R1,SCERROR               SET UP ERROR
    LA   R2,0(R2)
        SR  R2,R1                 CODE
   ST  R2,SC1000
         LA    R8,20
         BAL   RLINK,SCSEARCH           FLUSH
    L   R2,SC1000
      LR   R9,RBASE
   L  RLINK,SCPRINTX
     L   RBASE,IEBED50+36
    BALR   RLINK,RLINK
      LR   RBASE,R9
   MVI   SC4,X'00'     RESET
         OI    IEBED13,LOWCODE          SET CONDITION
         B     SC90
SCEE1      EQU  SCE0
*
*
         EJECT
*
*                             CARD SCAN TABLES FOR IEBEDIT
*
*
*                                  PRIMARY OPT TABLE POINTER
SCOPOINT DC    A(SC900)
*
*                                  PRIMARY OPT TABLE
*
SC900    EQU   *
         DC    C'EDIT    '                   OPT CODE
         DC    AL1(IEBED10-IEBED10)          TURN ON DISPLACEMENT
         DC    AL1(EDIT)                     SWITCHES TO TURN ON
         DC    AL1(IEBED10-IEBED10)          REQUIRED DISPLACEMENT
         DC    AL1(EDIT)                     SWITCHES REQUIRED
         DC    XL1'80'                       INFO BOX
         DC    AL3(SC950)                    PARM TABLE POINTER
         DC    AL4(0)                        SUB OPT TABLE POINTER
    DC  AL4(SC805)                 SPECIAL DIAGONISTIC ROUTINE
*
*                                  END  PRIMARY OPT TABLE
*
         EJECT
*
*                                  PARAMETER TABLE FOR OPT-EDIT
*
SC950    DS    0F
         DC    C'STEPNAME'                   PARAMETER
         DC    AL1(IEBED10-IEBED10)          TURN ON DISPLACEMENT
         DC    AL1(STEPNAME)                 SWITCES TO BE TURNED ON
         DC    AL1(IEBED11-IEBED10)          ASSUME DISPLACEMENT
         DC    AL1(POSCOPY)                  SWITCHES ASSUMED
         DC    XL1'28'                       INFO BOX
         DC    AL3(SC800)                    ACTION ADDRESS
*
         DC    C'TYPE    '                   PARAMETER
         DC    AL1(IEBED10-IEBED10)          TURN ON DISPLACEMENT
         DC    AL1(TYPE)                     SWITCHES TO BE TURNED ON
         DC    AL1(IEBED10-IEBED10)          ASSUME DISPLACEMENT
         DC    AL1(POSITION)                 SWITCHES ASSUMED
         DC    XL1'40'                       INFO BOX
         DC    AL3(SC960)                    ACTION ADDRESS
*
         DC    C'START   '                   PARMAETER
         DC    AL1(IEBED10-IEBED10)          TURN ON DISPLACEMENT
         DC    AL1(START)                    SWITCHES TO BE TURNED ON
         DC    AL1(IEBED10-IEBED10)          ASSUME DISPLACEMENT
         DC    AL1(0)                        SWITCHES ASSUMED
         DC    XL1'20'                       INFO BOX
         DC    AL3(SC801)                    ACTION ADDRESS
*
         DC    C'NOPRINT '                   PARAMETER
         DC    AL1(IEBED10-IEBED10)          TURN ON DISPLACEMENT
         DC    AL1(NOPRINT)                  SWITCHES TO BE TURNED ON
         DC    AL1(IEBED10-IEBED10)          ASSUME DISPLACEMENT
         DC    AL1(0)                        SWITCHES ASSUMED
         DC    XL1'84'                       INFO BOX
         DC    AL3(0)                        ACTION ADDRESS
*
*
*                                  END PARAMETER TABLE FOP OPT-EDIT
*
  EJECT
*
*                                  FIXED OPERAND TABLE FOR TYPE
*
SC960    DS    0F
         DC    C'POSITION'                   OPERAND VALUE
         DC    AL1(IEBED10-IEBED10)          TURN ON DISPLACEMENT
         DC    AL1(POSITION)                 SWITCHES TO BE TURNED ON
         DC    AL1(0)                        UNUSED
         DC    X'00'                         INFO BOX
*
         DC    C'INCLUDE '                   OPERAND VALUE
         DC    AL1(IEBED10-IEBED10)          TURN ON DISPLACEMENT
         DC    AL1(INCLUDE)                  SWITCHES TO BE TURNED ON
         DC    AL1(0)                        UNUSED
         DC    XL1'00'                       INFO BOX
*
         DC    C'EXCLUDE '                   OPERAND VALUE
         DC    AL1(IEBED10-IEBED10)          TURN ON DISPLACEMENT
         DC    AL1(EXCLUDE)                  SWITCHES TO BE TURNED ON
         DC    AL1(0)                        UNUSED
         DC    XL1'80'                       INFO BOX
*
*                                  END FIXED OPERAND TABLE FOR TYPE
*
*
*
*                             END CARD SCAN TABLES FOR IEBEDIT
*
*
         EJECT
*
*
SC801  L  R8,IEBED60         JOB  NAME HANDLER
       MVC  0(8,R8),=C'        '    CLEAR
   EX  R5,SC8018      MOVE JOB NAME
  ST  R8,IEBED32     STORE  POINTER
   LA  R8,8(R8)
   ST  R8,IEBED60
   SR  R15,R15
   BR   R14
SC8018   MVC  0(1,R8),0(R3)        MOVE  CHARACTERS
*
  EJECT
*
*
SC800    DS   0H
   TM  SC2,SCFPARM       FIRST STEPNAME
   BO   SC8001      NO
     L    R8,IEBED60      YES, GET PERM  WORK
         LA    RLINK,2032(R8)          UP PERM WORK
         LA    R9,16(RLINK)            FOR INCLUSIVE STEPNAME TABLE
         STM   R9,RLINK,IEBED33        SET UP BEGIN END INCLUSIVE TAB
     ST   R8,IEBED30    SET UP STEPNAME TABLE
     S  R8,=F'8'
     ST   R8,IEBED31
     ST    R9,IEBED60      RESET  PERM    WORK
     OI   SC2,SCFPARM    INDICATE NOT FIRST PARM
*
SC8001   DS  0H
    SR   R15,R15      SET   RETURN  CODE
     TM   SC2,SCINC2     IS THIS SECOND PART OF INCLUSIVE STEPNAMES
   BO  SC8005       YES
    CLI   SCFUN+3,X'2C'      NO
     BE   SC8004      FIRST PART OF INCLUSIVE
*                    YES BRANCH
      L   R8,IEBED31      SINGLE STEPNAMES
   LA   R8,8(R8)      UP TABLE POINTER
     OI   IEBED11,SINGSTEP      INDICATE  A SINGLE STEPNAME
    ST   R8,IEBED31   SET  UP POINTER
SC8006    MVC   0(8,R8),=C'        '    CLEAR
    EX   R5,SC8018    SET  UP STEP  NAME
*
       BR   R14     RETURN
SC8004    DS   0H
     L   R8,IEBED33     GET  TABLE POINTER
   OI   SC2,SCINC2     INDICATE SECOND INCLUSIVE COMING UP
   OI  IEBED11,INCLSPEC     INDICATE INCLUSIVE SPECIFIED
    S   R8,=F'16'
     ST   R8,IEBED33
     B   SC8006    GO TO SET UP STEPNAMES
SC8005    NI  SC2,OFF-SCINC2    RESET  INCLUSIVE
    L   R8,IEBED33   POINT TO ENTRY
    LA  R8,8(R8)
     B   SC8006    GO TO SET UP STEPNAME
*
*
SCFSTEP  EQU  X'10'
SC805   DS  0H
    TM  IEBED10,INCLUDE    WAS INCLUDE SPECFIED
     BZ   SC8051          NO
    TM  IEBED10,STEPNAME         STEPNAME SPECIFIED
       BZ   SCE14          * * *  ERROR  STEPNAME REQUIRED
SC8051  TM  IEBED10,EXCLUDE      EXCLUDE SPECIFIED
       BZ   SC8052                    NO
      TM  IEBED10,STEPNAME       STEPNAME SPECIFIED
       BZ   SCE15      * * * ERROR  STEPNAME REQUIRED
SC8052   EQU   *
        BR    R14        RETURN   TO CALLER
         EJECT
         DS    0H
SCGET    EQU   *                        GET CARD ROUTINE FOR
         TM    SC1,SCOVERR              CARD SCAN SUBROUTINE
         BO    SCGET2
*                                            R7 RETURN REG
*                                            R1 POINTER TO CARD
*
         L     R1,SYSIN                 GET SYSIN DCB
         GET   (R1)
         ST    R1,SCOVER                SAVE IF OVERRUN CARD
      OI   IEBED13,INPUTON        INDICATE WE HAVESYSIN DATA
         SR    R2,R2
   LR  R3,RLINK
   L  RLINK,SCPRINTX
      LR   R9,RBASE
     L   RBASE,IEBED50+36
    BALR   RLINK,RLINK
      LR   RBASE,R9
    LR RLINK,R3
   MVI   SC4,X'00'     RESET
         L     R1,SCOVER
         BR    R7                       RETURN CALLER
SCGET2   NI    SC1,OFF-SCOVERR          ****
         B     SCGET                    FURTURE ON OVERRUN CARD
         EJECT
*
         DS    0H                  EOD ON SYSIN
SCEOD    EQU   *
         OI    IEBED13,EOFIN     INDICATE EOF ON SYSIN
       TM   IEBED13,INPUTON      HAVE WE HAD SYSIN  DATA
      BO  SCEOD2          YES PROCESS  NORMALLY
      OI    IEBED13,TOTCOPY       NO THEN ASSUMETOTAL COPY
      B   SC530
SCEOD2   EQU   *
         TM    SC1,SCSINS+SCMULS   PROCESSING SINGLE OR MULT SUBS
         BO    SCEOD1
     L  R0,SCPOSTXX
     LM   R2,RBASE,IEBED50
        LR  RLINK,R0
         BR    RLINK
SCPOSTXX   DC   A(POST)
SCEOD1   EQU   *
  EJECT
*                                       TURN ON ROUTINE
*                                             R9 POINTES TO TURN
SCTURNON SR    R14,R14                           ON BOX
         IC    R14,0(R9)                GET DISPLACEMENT
         IC    R15,1(R9)                GET SWITCHES
         LA    R14,IEBED10(R14)         GET SWITCH ADDRESS
         EX    R15,SCEX101              SWITCHES ALREADY ON
         BO    SCE4                     ERROR *** DULPLICATE OPERAND
         EX    R15,SCEX102              TURN ON SWITCHES
         BR    RLINK
  EJECT
*                             SEARCH
*
*                             LINKAGE     BAL  RLINK,SCSEARCH
*                                         R8 CONTAINS SEARCH TYPE
*
*                             OUTPUT
*                                  R1   POINTER TO FOUND CHARACTER
*                                  R2   FOUND CHARACTER FUNCTION BYTE
*                                  R3   BEGIN TRT FOR THIS FIND
*                                  R4   LENGTH OF TRT
*                                  R0   LENGTH OF THIS FIND
*
*
*                             SWITCHES
SCCURNT  EQU   X'10'
SCEND    EQU   X'20'
SCCURNTN EQU   X'EF'
*
*                                  ENTRY
*                                       4    SEARCH  BLANK
*                                       8    SEARCH  NON BLANK
*                                       12   SEARCH  DELIMITER
*                                       16   SEARCH  DELIMITER
*                                                 WITH CHARACTER STRING
*                                       20   SEARCH FLUSH
*
  EJECT
SCSEARCH EX    R8,SCEX1            IS TRT TABLE GOOD
         BE    SCTRT               YES, NO INIT
         STC   R8,SC4              NO, SET UP TYPE FOR NEXT ENTRY
         TM    SC1,SCCURNT         IS SCWORK VALID
         BO    SCS1                YES, NO INIT SCWORK
   CLI  SC4,X'14'    ANYTHING TO FLUSH
   BE  SCSPP1
         OI    SC1,SCCURNT         SET SCWORK CURRENT
         BAL   R7,SCGET            GET CARD
         MVC   SCCARD(80),0(R1)    MOVE TO TRT AREA
         LA    R3,SCCARD           SET UP BEGIN TRT
         LA    R4,71               SET UP LENGTH
         EX    R0,SCSETUP(R8)      GO TO TYPE SETUP ROUTINE
         B     SCTRT1
SCS1     EX    R0,SCSETUP(R8)      GO TO TYPE SET UP ROUTINE
SCTRT    LM    R1,R4,SCFD          GET TRT INFO
         LA    R2,1(R1)            SET UP BEGIN TRT
         SR    R1,R3               SET UP
         SR    R4,R1               LENGTH OF TRT
         BCTR  R4,R0
         LR    R3,R2
SCTRT1   SR    R2,R2
    SR   R1,R1
         EX    R4,SCEX3            DO  TRANSLATE AND TEST
         BC    8,SCCONT1                CONTINUATION CARD
         BC    2,SCCONT2
SCBTAB   EX    R0,*(R2)            GO TO TYPE
         B     SCSPP               S  BLANK  FOUND          4
         B     SCSNB1              S  NON BLANK FOUND       8
         B     SCINV               INVALID CHARACTER        12
         B     SCDB                BLANK WHEN SEARCHING     16
*                                       FOR DELIMITER
         B     SCSPP               SEARCH DEL FOUND (       20
         B     SCSPP               SEARCH DEL FOUND )       24
         B     SCSPP               SEARCH DEL FOUND ,       28
         B     SCSPP               SEARCH DEL FOUND =       32
         B     SCSDQ               SEACH FOR QUOTE - FOUND  36
         B     SCSDQ1              SEARCH  CHARCTER SRING   40
*                                  ANY THING
        B    SCSPP                     SEARCH DELIMITER FOUND -  44
*
  EJECT
SCSDQ   EQU    *                   SEARCH CHARACTER SRING   QUOTE
SCSDQ1   EQU   *                                            ANYTHING
SCDB     CR    R1,R3                     SEARCH DELIMITER BLANK FOUND
         BNE   SCDB1
         L     R7,SCFD                  COMMA FOLLOWED BY BLANK
         CLI   0(R7),C','
         BNE   SCDB1                    YES
         B     SCCONT3                     THEN CONTINUE CARD
SCDB1    OI    SC2,SCEND
         B     SCSPP
SCSPP    LR    R5,R1                    SET UP PARAMETERS
         SR    R5,R3                         TO PASS BACK
         BCTR  R5,R0
         STM   R1,R4,SCWORK             SAVE INFO
SCSPP1   BR    RLINK                    RETURN
SCSNB1   BCTR  R1,R0                    ADJUST POINTER
         B     SCSPP
*
*                                  CONTINUE  ROUTINE
  EJECT
*
*                             SCCONT1   ALL FUNCTION BYTES NON ZERO
*                             SCCONT2   LAST FUNCTION BYTE NON ZERO
SCCONT1  LA    R5,0(R3,R4)    SCCONT3   COMA FOLLOWED BY BLANK
         CLI   0(R5),C' '          CONTINUE CARD
         BNE   SCC1                YES GET CARD AND READJUST
   OI  SC2,SCEND
         BR    RLINK
SCC1     EX    R4,SCEX4
SCC4     BAL   R7,SCGET
         CLI   0(R1),C' '
   BNE  SCC5
         CLC   1(14,R1),0(R1)
   BNE  SCC5
         LA    R5,SCCARD(R4)
         MVC   0(57,R5),15(R1)
         LA    R4,56(R4)
   C  R4,=F'200'
   BC  13,SCC6
  LA  R2,71
    STM   R1,R2,SCBEGTRT
     B   SCE2
SCC6   EQU   *
         LA    R3,SCCARD
         B     SCTRT1
SCCONT2  LA    R5,0(R3,R4)                   LAST FUNCTION  FIND
         CLI   0(R5),C' '                    FOUND BLANK
         BNE   SCC2
   OI  SC2,SCEND
         EX    R0,SCBTAB(R2)                 BRANCH TO HANDLER
SCC2     EQU   SCC1
*
SCCONT3  LA    R5,0(R3,R4)                   CONTINUATION
*                                      OF ,B
         CLI   0(R5),C' '
         BNE   SCC3
   OI  SC2,SCEND
         B     SCSE2                         INVALID CONTINUATION
SCC3     SR    R4,R4
         B     SCC4
SCSFSH   LM    R3,R4,SCBEGTRT           SEARCH FLUSH
    OI  SC4,X'00'
         LA    R5,0(R3,R4)
         NI    SC1,X'FF'-SCCURNT        TURN OFF CURRENT SWITCH
SCSFSH1  CLI   0(R5),C' '
         BE    SCSPP1
         BAL   R7,SCGET
    LA   R5,71(R1)
         B     SCSFSH1
SCSDCS   MVI   IEBED00,X'28'
         MVC   IEBED00+1(255),IEBED00
         MVI   IEBED00+X'7D',X'24'
         BR    R7
SCSB     MVI   IEBED00,X'00'       SEARCH BLANK
         MVC   IEBED00+1(255),IEBED00
         MVI   IEBED00+C' ',X'04'
         BR    R7
SCSNB    MVI   IEBED00,X'08'       SEARCH NON BLANK
         MVC   IEBED00+1(255),IEBED00
         MVI   IEBED00+C' ',X'00'
         BR    R7
SCSD     MVC   IEBED00(256),SCTABLE
         BR    R7
SCC5   LA  R2,71
   STM   R1,R2,SCBEGTRT
    B  SCSE2
  EJECT
  EJECT
SCTABLE  DC    64X'0C'
         DC    XL1'10'                  BLANK
         DC    12X'0C'
         DC    XL1'14'                  (
         DC    13X'0C'
         DC    XL1'00'
         DC    XL1'0C'
         DC    XL1'18'                  )
         DC   2X'0C'
      DC  XL1'2C'                            -
     DC   10X'0C'
         DC    XL1'1C'                  ,
         DC    15X'0C'
         DC    XL2'00'
         DC    XL1'0C'
         DC    XL1'20'                  =
         DC    66X'0C'
         DC    XL9'00'
         DC     7X'0C'
         DC    XL9'00'
         DC     8X'0C'
         DC    XL8'00'
         DC     6X'0C'
         DC    XL10'00'
         DC     6X'0C'
         EJECT
*                                       EXECUTE TABLE
*
SCEX100  MVC   SC1000(1),0(R3)
SCEX101  TM    0(R14),X'00'
SCEX102  OI    0(R14),X'00'
SCPRINTX  DC  A(PRINT)
*
SCEX1    CLI   SC4,X'00'
*
SCSETUP  BAL   R7,SCTRT
         BAL   R7,SCSB             SEARCH BLANK
         BAL   R7,SCSNB            SEARCH NON BLANK
         BAL   R7,SCSD             SEARCH DELIMITER
         BAL   R7,SCSDCS           SEARCH DELIMITER WITH CHARACTER ST
         BAL   R7,SCSFSH           SEARCH FLUSH
*
*
SCEX3    TRT   0(1,R3),IEBED00
SCEX4    MVC   SCCARD(1),0(R3)
  EJECT
SCMULS   EQU   X'80'                    PROCESSIN MULTIPLE SUB CARDS
SCINC2   EQU  X'02'
SCFPARM   EQU  X'04'
SCFINSTP   EQU  X'08'
*        SC1
*              80     SCMULS  MULTIPLE SUB OPTS
*              40     SCSINS  SINGLE SUB OPTS
*              20     SCOVERR  OVERRUN RECORD
*              10     SCCURNT  SCWORK VALID
*              08     SCINSUB  IN SUBPARAMETER
*              04     SCSINS2  REQUESTING ANOTHER SUB OPT
*              02      U
*              01     U
*        SC2
*              80     SCNAMEF  NAME FIELD SCANNED
*              40     SCOPTF  OPT CODE SCANNED
*              20     SCEND  END RETURN FROM SCSEARCH
*              10     SCFSTEP  FIRST STEPNAME
*              08     SCFINSTP  FIRST INCLUSIVE STEPNAME
*              04     SCFPARM  FIRST STEPNAME PARAMETER
*              02     SCINC2  2ND INCLUSIVE SUBPARAMETER
*              01     U
*        SC3
*              ALL UNUSED
*        SC4
*              SEARCH ENTRY CHARACTER
*
*
SCSINS   EQU   X'40'                    PROCESSIN SINGLE SUB CARDS
SCNAMEF  EQU   X'80'                    NAME FOUND
SCOPTF   EQU   X'40'                    OPERATOR FOUND
SCINSUB  EQU   X'08'                    IN SUBPARAMETER
SCSINS2  EQU   X'04'
SCOVERR  EQU   X'20'                    OVERRUN CARD PRESENT
*
*                             OPT TABLE ENTRY FORMAT
SCOPTLEN   EQU  24                LENGTH OF OPT TABLE   24 BYTES
SCOPCODE EQU   0                   OPT CODE       8 BYTES
SCOPTON  EQU   8                   TURN ON BOX    2 BYTES
*                                   BYTE 1   DISPLACEMENT FROM IEBED10
*                                   BYTE 2   SWITCHES TO BE TURNED ON
SCOPREQ  EQU   10                  REQUIRED BOX   2 BYTES
*                                   BYTE 1   DISPLACEMENT FROM IEBED10
*                                   BYTE 2   SWITCHES WHICH MUST BE ON
*                                            AFTER ALL OPERANDS PROCESS
SCOPINFO EQU   12                  INFORMATION    1 BYTE
SCOPILST EQU   X'80'                    LAST OPT CODE IN TABLE
SCOPISO  EQU   X'40'                    PROCESS ONE SUBSIDARY OPT CODE
SCOPISA  EQU   X'20'                    PROCESS ALL SUBSIDARY OPT CODES
*
SCOPPARM EQU   12                  PARM TABLE     4 BYTES
*                                       POINTER TO PARM TABLE
SCOPSUB  EQU   16                  SUBSIDARY OPT  4 BYTES
*                                       POINTER TO SUBSIDARY OPT CODE
*                                       TABLE
SCOPSPC   EQU   20              SPECIAL DIAGONISTIC ROUTINE
*                          POINTER TO ROUTINE TO HANDLE SPECIAL
*                          DIAGONISTICS FOR THIS OPT CODE
*           SPECIAL DIAGONISTICS FOR OPT CODE EDIT
*
*
*
*
*
*                             PARM TABLE FORMAT
*
SCPMTLEN EQU   16                       LENGTH    16 BYTES
*
SCPMCODE EQU   0                   OPERAND        8 BYTES
SCPMTON  EQU   8                   TURN ON BOX    2 BYTES
*                                    BYTE 1  DISPLACEMENT FROM IEBED10
*                                    BYTE 2  SWITCHES TO BE TURNED ON
SCPMASSM EQU   10                  ASSUME BOX     2 BYTES
*                                    BYTE 1  DISPLACEMENT FROM IEBED10
*                                    BYTE 2  SWITCHES TO BE TURNED ON
*                                            IF THIS OPERAND IS OMITTED
SCPMINFO EQU   12                  INFORMATION    1 BYTE
SCPMILST EQU   X'80'                    LAST PARM TABLE ENTRY
SCPMIFIX EQU   X'40'                    FIXED OPERAND VALUE
SCPMIVAR EQU   X'20'                    VARIABLE OPERAND VALUE
SCPMICS  EQU   X'10'                    ALLOW CHARACTER STRING
SCPMISUB EQU   X'08'                    ALLOW SUBPARAMETERS
SCPMIKEY EQU   X'04'                    KEYWORD ONLY
*
SCPMACT  EQU   12                  ACTION ADDRESS 4 BYTES
*                                         IF THIS IS FIXED OPERAND
*                                           AA IS POINTER TO FIXED
*                                         OPERAND TABLE
*                                         IF THIS IS A VARIABLE
*                                         OPERAND THEH THIS IS THE
*                                         ADDRESS OF THE HANDLING
*                                         ROUTINE
*
*
*
*
*                             FIXED OPERAND TABLE
*
SCFOPLEN EQU   12                       LENGTH    13 BYTES
SCFOPVAL EQU   0                   FIXED OPERAND VALUE 8 BYTES
*
SCFOPTON EQU   8                   TURN ON BOX    2 BYTES
*                                    BYTE 1  DISPLACEMENT FROM IEBED10
*                                    BYTE 2  SWITCHES TO TURNED ON
SCFOPINF EQU   11                  INFORMATION BOX
SCFOPILT EQU   X'80'                 LAST FIXED OPERAND VALUE
*
*
*
*
*
SCINV    EQU   SCSE3
SCSCANPP    EQU  SCANPP
       LTORG
       DROP    RBASE
 TITLE '           MESSAGES                           IEBEDIT'
MSG4     DC   C'IEB001I  SYSUT1 NOT OPEN                        '
MSG8     DC   C'IEB001I  SYSUT2 NOT OPEN                        '
MSG12    DC   C'IEB001I  SYSUT1,SYSUT2 NOT OPEN                 '
MSG16    DC   C'IEB001I  SYSIN NOT OPEN                         '
MSG20    DC   C'IEB001I  SYSUT1,SYSIN NOT OPEN                  '
MSG24    DC   C'IEB001I  SYSUT2, SYSIN NOT OPEN                 '
MSG28    DC   C'IEB001I  SYSUT2, SYSIN, SYSUT1 NOT OPEN         '
MSG32    DC    C'IEB030I  SYSUT1 BLKSIZE INVALID                '
MSG36    DC   C'IEB008I  INVALID NAME FIELD                     '
MSG40    DC   C'IEB009I  INVALID STATEMENT SYNTAX               '
MSG44    DC   C'IEB010I  INVALID OPERATION CODE                 '
MSG48    DC   C'IEB011I  INVALID OPERAND                        '
MSG60    DC   C'IEB014I  INVALID DELIMITER                      '
MSG80  DC  CL48'IEB033I STATEMENT NOT PROCESSED EOF ON SYSUT1'
MSG84    DC   C'IEB019I  REQUIRED OPERAND OMITTED               '
*        DS    CL0                      RESERVED
MSG92    DC   C'IEB020I  INVALID CONTINUATION CARD              '
MSG96    DC   C'IEB021I  INVALID CHARACTER                      '
MSG100  DC  CL48'IEB034I STEPNAME REQUIRED WITH TYPE=INCLUDE'
MSG104  DC  CL48'IEB034I STEPNAME REQUIRED WITH TYPE=EXCLUDE'
*        DS    CL0                      RESERVED
*        DS    CL0                      RESERVED
MSG116   DC    C'IEB022I  JOB NAME NOT FOUND BEFORE END OF FILE '
MSG124   DC    C'IEB024I  8 WAS HIGHEST SEVERITY CODE           '
MSG128   DC    C'IEB024I  4 WAS HIGHEST SEVERITY CODE           '
MSG132   DC    C'IEB024I  0 WAS HIGHEST SEVERITY CODE           '
MSG136   DC    CL48'IEB027I I/O ERROR '
MSG148   DC    C'IEB030I  SYSIN BLKSIZE INVALID                 '
MSG152   DC    C'IEB032I  SYSUT2 BLKSIZE INVALID-SYSUT1 ASSUMED '
 TITLE '           WORK AREA                          IEBEDIT'
DCBUT1   DCB   DDNAME=SYSUT1,DSORG=PS,EODAD=MAJOB,EROPT=ABE,BUFNO=3,   X
               EXLST=INEXT1,MACRF=GL,RECFM=FB,SYNAD=PSER1,LRECL=80
DCBUT2   DCB   DDNAME=SYSUT2,DSORG=PS,EROPT=ABE,BUFNO=3,               X
               EXLST=INEXT12,MACRF=PL,RECFM=FB,SYNAD=PSER2,LRECL=80
DCBPRT   DCB   EXLST=OUTEXIT,BUFNO=5,DDNAME=SYSPRINT,DSORG=PS,     BS0H*
               EROPT=ABE,LRECL=121,MACRF=(PL),RECFM=FBA,           BS0H*
               SYNAD=PSER3
DCBSYS   DCB   DDNAME=SYSIN,DSORG=PS,EODAD=SCEODAD,EROPT=ABE,          X
               LRECL=80,MACRF=(GL),RECFM=FB,SYNAD=PSER4,           BS0H*
               EXLST=INEXT13                                       BS0H
*                        REGISTERS
*
*                             IF IT IS DESIZED TO USE OTHER SYMBOLS
*                             FOR REGISTERS, EQU THOSE SYMBOLS TO THE
*                             REG SYMBOLS DEFINED BELOW TO PRESERVE
*                             REGISTER INDEPEDENCE.
*
R0       EQU   0         VOLATILE WORK REGISTER  USED BY MOST MACROS
R1       EQU   1         VOLATILE WORK REGISTER  USED BY MOST MACROS
R2       EQU   2         WORK REGISTER PRESERVED BY SUBROUTINES
R3       EQU   3         WORK REGISTER PRESERVED BY SUBROUTINES
REVEN    EQU   4         WORK REGISTER PRESERVED BY SUBROUTINES
RODD     EQU   5         WORK REGISTER PRESERVED BY SUBROUTINES
*                          REVEN AND RODD WILL ALWAYS BE AN
*                          EVEN-ODD CONSECTIVE REG PAIR
R6       EQU   6         WORK REGISTER PRESERVED BY SUBROUTINES
R7       EQU   7         WORK REGISTER PRESERVED BY SUBROUTINES
R8       EQU   8         WORK REGISTER PRESERVED BY SUBROUTINES
RCARD    EQU   9         CURRENT CARD BEING PROCESSED  SYSUT1
RLINK    EQU   10        LINK REGISTER TO SUBROUTINES
RBASE    EQU   11        BASE REGISTER
RWORK    EQU   12        WORK AREA BASE - USED WITH DSECT IEBED00
RSAVE    EQU   13        SAVE AREA POINTER
R14      EQU   14        VOLATILE WORK REGISTER  USED BY MACROS
R15      EQU   15        VOLATILE WORK REGISTER  USED BY MACROS
*
*
*
IEBED    DSECT
IEBED00  DS   130F       240 BYTE VOLITAL WORK AREA
IEBED10  DS    XL1'00'   VERB SWITCH AREA    CLEAR EACH OPERATOR
START    EQU   X'80'               START SPECIFIED
TYPE     EQU   X'40'               TYPE  SPECIFIED
POSITION EQU   X'20'               TYPE=POSITION SPECIFIED
INCLUDE  EQU   X'10'               TYPE=INCLUDE SPECIFIED
EXCLUDE  EQU   X'08'               TYPE=EXCLUDE SPECIFIED
STEPNAME EQU   X'04'               STEPNAME SPECIFIED
NOPRINT  EQU   X'02'               NOPRINT SPECIFIED
EDIT     EQU   X'01'
IEBED11  DS    XL1'00'   PROCESS SWITCH AREA CLEAR EACH OPERATOR
POSCOPY  EQU   X'80'               POSITION COPY SWITCH
IECOPY   EQU   X'40'               INCLUDE EXCLUDE COPY SWITCH
DDDATA   EQU   X'20'               DD  DATA SWITCH
INCLSPEC EQU   X'10'                   INCLUSIVE SPECIFIED
INCLSTAT EQU   X'08'                   INCLUSIVE STATE
SINGSTEP EQU   X'04'                   SINGLE STEPS HAVE BEEN SPECIFIED
NOOPEN   EQU   X'02'                   BAD OPEN SWITCH
         DC   0X'01'               UNUSED
IEBED12  DS    XL1'00'   CARD TYPE SWITCH AREA    CLEAR IN CARD TYPE
JCL      EQU   X'80'               JCL CARD
JOB      EQU   X'40'               JOB CARD
EXEC     EQU   X'20'               EXEC CARD
DD       EQU   X'10'               DD CARD
DATA     EQU   X'08'               DD DATA CARD
CONTINUE EQU   X'04'               CARD IS CONTINUED
JOBLIB   EQU   X'02'               DD NAME IS JOBLIB
SLASHA   EQU   X'01'               CARD IS A  /*
IEBED13  DS    XL1'00'   GENERALE SWITCH AREA     NOT  CLEARED
EOFUT1   EQU   X'80'               EOF ON SYSUT1
PRINTSW  EQU   X'40'               SYSPRINT DD CARD PRESENT
EOFIN    EQU   X'20'
INPUTON EQU  X'10'     THERE AHS  BEEN INPUT SYSIN
TOTCOPY  EQU   X'08'    NO SYSIN DATA - TOTAL COPY
HIGHCODE EQU   X'04'                    COMPLETION CODE OF 8
LOWCODE  EQU   X'02'                    COMPLETION CODE OF 4
PAGEOV   EQU  X'01'   OVER RIDE PAGE COUNT SUPPLIED
IEBED14   DS  XL1'00'             PUT - PRINT SWITCH CONTROL
DELETE   EQU  X'80'                         DELETE RECORD
INSERT   EQU  X'40'                         INSERT RECORD
JOBLIB1  EQU   X'20'                    SECOND JOBLIB SWITCH    YA01706
CONCAT   EQU   X'10'                    JOBLIB CONCAT SWITCH    YA01706
SLASNON  EQU   X'04'                   /*NONE BLANK SW         @ZA07327
COMMENT  EQU   X'02'                   COMMENT CARD (//*)      @ZA04410
CARDUT1  EQU   X'01'               ANY CARD ON SYSUT1 SWITCH   @YA02576
*
IEBED20  DS    F         SYSIN DCB ADDRESS
SYSIN    EQU   IEBED20
*
IEBED21  DS    F         SYSUT1 DCB ADDRESS
SYSUT1   EQU   IEBED21
*
IEBED22  DS    F         SYSUT2 DCB ADDRESS
SYSUT2   EQU   IEBED22
*
IEBED23  DS    F         SYSPRINT DCB ADDRESS
SYSPRINT EQU   IEBED23
*
IEBED30  DS    F         POINTER TO BEGINNING OF STEP NAME ENTRIES
IEBED31  DS    F         POINTER TO END OF STEP NAME ENTRIES
IEBED32  DS    F         POINTER TO START JOBNAME
IEBED33  DS  F                    POINTER TO BEGIN INCLUSIVE STEPNAMES
IEBED34   DS   F                  POINTER TO END  INCLUSIVE STEPNAMES
IEBED41  DS  XL8'00'
*                             TYPE ROUTINE
IEBED45  DS    10F       CARD SCAN
IEBED46   DS   4F                 WORK AREA FOR PUT-PRINT ROUTINE
IEBED50  DS    14F                     SAVE AREA NUMBER 1
IEBED51  DS    10F       SUBROUTINE REG SAVE AREA  TWO
IEBED52     DS    15F                  SAVE
IEBED60  DS    F         POINTER TO NEXT AVAILABLE PERM AREA LOCATION
IEBED61  DS    F         POINTER TO BEGIN PERM AREA
IEBED99  DS    0F        BEGINNING OF PERMANENT WORK AREA
OFF       EQU   X'FF'
    EJECT
SCWORK   EQU   IEBED45
SCFD     EQU   SCWORK
SCFUN    EQU   SCWORK+4
SCBEGTRT EQU   SCWORK+8
SCLENTRT EQU   SCWORK+12
SCCOPT   EQU   SCWORK+16
SCCPT    EQU   SCWORK+20
SCOVER   EQU   SCWORK+24
SCCOP    EQU   SCWORK+28
SCCP     EQU   SCWORK+32
SC1      EQU   SCWORK+39
SC2      EQU   SCWORK+37
SC3      EQU   SCWORK+38                CHARACTER
SC4      EQU   SCWORK+36                TRT ENTRY BYTE
*
R4       EQU   REVEN
SCCARD   EQU   IEBED00+256
R9       EQU   RCARD
R5  EQU  RODD
SC1000   EQU   IEBED00+500
SCEODAD   EQU   SCEOD
SP       EQU   TYPE
PAGE     EQU   R6                       PAGE COUNTER
LINE     EQU   R7                       LINE COUNTER
DCBAD    EQU   8
LNCNT    EQU   IEBED46+2
ASACODE  EQU   IEBED46+4
HPAGE    EQU   IEBED46+8
DBLWD    EQU   IEBED00                  DOUBLE WORD FOR PAGE NUMBER
PRNTAREA EQU   IEBED00+8
         END   IEBEDIT
