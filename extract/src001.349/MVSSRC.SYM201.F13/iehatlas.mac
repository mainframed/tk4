         TITLE 'IEHATLAS - UTILITY'                              S20201
         COPY  LCGASMSW
IEHATLAS CSECT
*
*D 731200                           @SA73430=@YA08015=@XA08848=@ZA01742
*C 732000                           @SA73430=@YA08015=@XA08848=@ZA01742
*A 732500                           @SA73430=@YA08015=@XA08848=@ZA01742
*
*
*          RELEASE 22 DELETIONS/CHANGES
*          RELEASE 21 DELETIONS/CHANGES
*C155600,650000                                                @ZA01660
*485300,941300                                                OX02345
*          RELEASE 20 DELETIONS/CHANGES
*0700000800-001600,590400                                        S20201
*
*STATUS CHANGE LEVEL 002
*
*        TITLE 'IEHATLAS-UTILITY'
*FUNCTION/OPERATION                                                   *
*    THIS MODULE IS THE UTILITY PORTION OF THE PROGRAM IEHATLAS, THE  *
*SYSTEM UTILITY THAT ATTEMPTS RECOVERY FROM HARD READ/WRITE ERRORS.   *
*UPON ENTRY IT ESTABLISHES ITS OWN ADDRESSABILITY AND THAT OF THE     *
*WORK AREA WHICH IT GETS.  ITS MAIN FUNCTIONS ARE THE FOLLOWING-      *
*                                                                     *
*    1.  TO GET DDNAMES AND PAGE NUMBER PARAMETERS IF THE             *
*        UTILITY IS INVOKED.                                          *
*    2.  TO CHECK DCB PARAMETERS OF SYSIN AND SYSPRINT FOR            *
*        BLOCKSIZE A MULTIPLE OF LRECL                                *
*    3.  TO GET A CONTROL CARD AND CHECK FOR VALIDITY                 *
*    4.  TO GET CORE FOR THE INPUT RECORD, GET THE RECORD, AND        *
*        PRINT IT ON THE MESSAGE DATA SET                             *
*    5.  TO EXECUTE THE CHANNEL PROGRAM WHICH IT BUILDS IN AN         *
*        ATTEMPT TO WRITE THE RECORD WHERE THE ERROR OCCURRED         *
*    6.  TO INSURE AN ERROR ACTUALLY EXISTS IF THE INPUT RECORD       *
*        IS THE VTOC BY ATTEMPTING TO READ THE ERROR RECORD           *
*    7.  TO GIVE CONTROL TO THE SVC IF AN ALTERNATE TRACK             *
*        MUST BE ASSIGNED                                             *
*    8,  TO PRINT DIAGNOSTIC MESSAGES INDICATING RESULTS OF           *
*        EXECUTION                                                    *
*                                                                     *
*ENTRY POINTS                                                         *
*    IEHATLAS - ATTEMPTS RECOVERY FROM A HARD READ/WRITE ERROR.       *
*                                                                     *
*INPUT                                                                *
*    CONSISTS OF THE FOLLOWING-                                       *
*                                                                     *
*    1.  A PARAMETER LIST INCLUDING DDNAME-OVERRIDES AND PAGE         *
*        NUMBER (REGISTER 1 CONTAINS A POINTER TO THE ADDRESSES       *
*        OF THE PARAMETERS)                                           *
*    2.  CONTROL INFORMATION SPECIFYING TYPE OF RECORD TO BE          *
*        REPLACED (VTOC OR TRACK), THE LOCATION OF THE RECORD         *
*        ON THE DEIVCE, THE LENGTH OF THE RECORD, AND AN              *
*        INDICATION IF WRITE SPECIAL IS REQUIRED                      *
*    3.  THE RECORD IN HEXADECIMAL                                    *
*    4.  RETURN CODES FROM THE SVC --                                 *
*          0 - SUCCESS                                                *
*          4 - WRONG DEVICE TYPES                                     *
*          8 - NO MORE ALTERNATES                                     *
*         12 - CORE NOT AVAILABLE                                     *
*         16 - I/O ERROR IN ALTERNATE TRACK ASSIGNMENT                *
*         20 - INVALID I/O SENSE INDICATION                           *
*         24 - FORMAT 4 IN ERROR                                      *
*         28 - USER'S RECORD IS FORMAT 4                              *
*         32 - ERROR IN COUNT FIELD OF LAST RECORD ON TRACK           *
*         36 - R0-HOME ADDRESS ERRORS                                 *
*         40 - -ERROR/ERRORS ENCOUNTERED BUT AN ALTERNATE HAS         *
*              BEEN ASSIGNED                                          *
*         44 - ERROR/ERRORS ENCOUNTERED  NO ALTERNATE ASSIGNED        *
*         48 - NO ERRORS FOUND, NO ALTERNATE ASSIGNED                 *
*         52 - CAN NOT RE-EXECUTE CALLER'S CHANNEL PROGRAM            *
*         56 - SYSTEM DOES NOT SUPPORT TRACK OVERFLOW                 *
*         60 - TRACK ADDRESS PROVIDED DOES NOT BELONG TO DATASET      *
*        64 - VIRTUAL DEVICES NOT SUPPORTED                     YL02912
*                                                                     *
*OUTPUT                                                               *
*    CONSISTS OF THE FOLLOWING-                                       *
*                                                                     *
*    1.  A MESSAGE DATA SET INCLUDING THE CONTROL INFORMATION         *
*        SUPPLIED BY THE USER, THE INPUT RECORD, AND DIAGNOSTICS      *
*    2.  UPDATED PAGE NUMBER                                          *
*    3.  CORRECT FORM OF RECORD IN ERROR EITHER ON THE ORIGINAL       *
*        TRACK OR ON AN ALTERNATE TRACK                               *
*                                                                     *
*EXTERNAL ROUTINES                                                    *
*    SVC 86 ASSIGNS AN ALTERNATE TRACK, TRANSFERS DATA FROM THE BAD   *
*TRACK, RE-EXECUTES THE CHANNEL PROGRAM TO WRITE THE CORRECTED RECORD,*
*AND UPDATES THE FORMAT4 DSCB.  A TWO-WORD PARAMETER LIST INCLUDING   *
*THE ADDRESSES OF THE IOB AND THE COUNT ARE POINTED TO BY REGISTER 1  *
*WHEN THE SVC IS INVOKED  A ONE WORD PARAMETER LIST IS RETURNED WHICH *
*INDICATES THE RECORD NUMBERS OF A MAXIMUM OF THREE ERROR RECORDS IF  *
*AN UNRECOVERABLE CONDITION OCCURS IN ASSIGNING AN ALTERNATE          *
*                                                                     *
*EXITS                                                                *
*    RETURNS CONTROL TO THE CALLING PROGRAM                           *
*                                                                     *
*TABLES/WORK AREAS                                                    *
*    A GETMAIN IS ISSUED FOR THE SIZE OF THE INPUT RECORD AND ANOTHER *
*FOR A WORK AREA OF 1300 BYTES.  THE WORK AREA PROVIDES SPACE FOR     *
*BUILDING THE CHANNEL PROGRAM, MESSAGES, COUNT FIELDS, DCB'S, AND     *
*LIST FORMS OF THE MACROS.                                            *
*                                                                     *
*ATTRIBUTES                                                           *
*    REENTRANT, REFRESHABLE                                           *
***********************************************************************
*        EQUATES                                                     *
***********************************************************************
TBIT1    EQU   X'40'                    *
TBIT2    EQU   X'20'                    *
TBIT3    EQU   X'10'                    *
TBIT5    EQU   X'04'                    *
TBIT6    EQU   X'02'                    *
TBIT7    EQU   X'01'                    *
BITS67   EQU   X'03'                    *
ALLBITS  EQU   X'FF'                    *
ATLASSVC EQU   86                       ATLAS SVC NUMBER         S20201
***********************************************************************
*        CONSTANTS                                                   *
***********************************************************************
C00      EQU   X'00'                    *
C03      EQU   X'03'                    *
C0D      EQU   X'0D'                    *
C16      EQU   X'10'                    *
C28      EQU   X'28'                    *
C30      EQU   X'30'                    *
C40      EQU   X'40'                    *
C41      EQU   X'41'                    *
C42      EQU   X'42'                    *
C80      EQU   X'80'                    *
DBLZERO  EQU   X'00'                    *
DUMMY    EQU   X'10'                    *
OHFOUR   EQU   X'04'                    *
ZEROFOX  EQU   X'0F'                    *
ELEVEN   EQU   X'11'                    *
TWENTY   EQU   X'20'                    *
EIGHTY   EQU   X'80'                    *
EIGHTY7  EQU   X'87'                    *
FOXZERO  EQU   X'F0'                    *
SKIPAGE  EQU   X'F1'                    *
BLANK    EQU   C' '                     *
PRINTERR EQU   C'R'                     *
SPECIALW EQU   C'S'                     *
EQUALS   EQU   C'='                     *
SLASH    EQU   C'/'                     *
X0       EQU   0                        *
***********************************************************************
*        CONDITION CODE EQUATES                                       *
***********************************************************************
CC00     EQU   X'00'                    *
CC16     EQU   X'10'                    *
***********************************************************************
*        DISPLACEMENT CONSTANTS                                      *
***********************************************************************
D0       EQU   0                        *
D1       EQU   1                        *
D2       EQU   2                        *
D3       EQU   3                        *
D4       EQU   4                        *
D6       EQU   6                        *
D7       EQU   7                        *
D8       EQU   8                        *
D12      EQU   12                       *
D14      EQU   14                       *
D26      EQU   26                       *
D27      EQU   27                       *                       YL02912
D34      EQU   34                       *
D42      EQU   42                       *
D49      EQU   49                       *
D58      EQU   58                       *
D75      EQU   75                       *
***********************************************************************
*        FULLWORD AND HALFWORD EQUATES                                *
***********************************************************************
FW1      EQU   1                        *
FW2      EQU   2                        *
FW3      EQU   3                        *
FW10     EQU   10                       *
FW18     EQU   18                       *
FW19     EQU   19                       *
FW29     EQU   29                       *
FW59     EQU   59                       *
***********************************************************************
*        LENGTH CONSTANTS                                            *
***********************************************************************
L1       EQU   1                        *
L2       EQU   2                        *
L3       EQU   3                        *
L4       EQU   4                        *
L5       EQU   5                        *
L6       EQU   6                        *
L7       EQU   7                        *
L8       EQU   8                        *
L9       EQU   9                        *
L12      EQU   12                       *
L13      EQU   13                       *
L16      EQU   16                       *
L20      EQU   20                       *
L24      EQU   24                       *
L26      EQU   26                       *
L36      EQU   36                       *
L40      EQU   40                       *
L43      EQU   43                       *
L44      EQU   44                       *
L48      EQU   48                       *
L53      EQU   53                       *
L60      EQU   60                       *                      @ZA01660
L76      EQU   76                       *
L79      EQU   79                       *
L80      EQU   80                       *
L117     EQU   117                      *
L118     EQU   118                      *
L119     EQU   119                      *
L120     EQU   120                      *
L255     EQU   255                      *
***********************************************************************
*        MESSAGE CODES                                               *
***********************************************************************
MC00     EQU   X'00'                    *
MC01     EQU   X'01'                    *
MC02     EQU   X'02'                    *
MC03     EQU   X'03'                    *
MC04     EQU   X'04'                    *
MC05     EQU   X'05'                    *
MC06     EQU   X'06'                    *
MC07     EQU   X'07'                    *
MC08     EQU   X'08'                    *
MC09     EQU   X'09'                    *
MC0A     EQU   X'0A'                    *
MC0B     EQU   X'0B'                    *
MC0C     EQU   X'0C'                    *
MC0D     EQU   X'0D'                    *
MC0E     EQU   X'0E'                    *
MC0F     EQU   X'0F'                    *
MC10     EQU   X'10'                    *
MC11     EQU   X'11'                    *
MC12     EQU   X'12'                    *
MC13     EQU   X'13'                    *
MC14     EQU   X'14'                    *
MC15     EQU   X'15'                    *
MC16     EQU   X'16'                    *
MC17     EQU   X'17'                    *
MC18     EQU   X'18'                    *                       YL02912
***********************************************************************
*        SWITCH EQUATES                                               *
***********************************************************************
SW3      EQU   X'10'                    *
SW4      EQU   X'08'                    *
SW7      EQU   X'01'                    *
*                                                                     *
*REGISTER ASSIGNMENTS
PARMA    EQU   0                        PARAMETER REGISTER ZERO
PARMB    EQU   1                        PARAMETER REGISTER ONE
WORKE    EQU   2                        EVEN WORK REGISTER
WORKO    EQU   3                        ODD WORK REGISTER
FOUR     EQU   4                        WORK REGISTERS
FIVE     EQU   5                        *
SIX      EQU   6                        *
SEVEN    EQU   7                        *
EIGHT    EQU   8                        *
NINE     EQU   9                        *
TEN      EQU   10                       *
AREAREG  EQU   11                       WORKAREA POINTER
BASEREG  EQU   12                       BASE REGISTER
SAVEREG  EQU   13                       SAVE AREA POINTER
RETREG   EQU   14                       RETURN REGISTER
ADDREG   EQU   15                       ADDRESSABILITY REGISTER AND
*                                          RETURN CODE REGISTER
         EJECT
*STANDARD LINKAGE CONVENTION
         SAVE  (14,12),T,--A-68-V1      SAVE CALLING PROGRAM'S REG'S
         USING IEHATLAS,BASEREG         ESTABLISH ADDRESSABILITY
         LR    BASEREG,ADDREG
         EXTRN MESSTBL
***********************************************************************
* PRIMARY WORK AREA WILL CONTAIN DCB'S,IOB,ECB,CHANNEL PROGRAM,
* MESSAGE AREA AND SWITCHES
***********************************************************************
         LR    FOUR,PARMB
         GETMAIN R,LV=1300
***********************************************************************
* CLEAR THE ENTIRE WORKAREA TO ZEROS
***********************************************************************
         LR    AREAREG,PARMB            SET UP ADDRESSABILITY TO THE
         USING IEHWORK,AREAREG             WORK AREA
         MVI   SAVE1,DBLZERO            ZERO PROPAGATION OF SAVE AREA
         MVC   SAVE110(L255),SAVE10     *
         MVC   SAVE111(L255),SAVE11     *
         MVC   SAVE112(L255),SAVE12     *
         MVC   SAVE113(L255),SAVE13     *
         MVC   SAVE114(L255),SAVE14     *
         MVC   SAVE115(L24),SAVE15      *
         ST    SAVEREG,SAVE1BK          CHAIN SAVE AREA TO NEW SAVE
         LR    SAVEREG,AREAREG             AREA
         MVI   HEADER,BLANK             CLEAR HEADING TO BLANKS
         MVC   HEADER1(L119),HEADER
         MVI   MESSAGE,BLANK            SET MESSAGE AREA TO BLANKS
         MVC   MESSAGE1(L119),MESSAGE
* INVOCATION
         CLI   D0(FOUR),C80             WAS UTILITY INVOKED BY PROBLEM
*                                          PROGRAM
         BE    SETDCBS                  NO, PREPARE DCB'S
***********************************************************************
* PICK UP DDNAMES IF USER SUPPLIES THEM
***********************************************************************
         L     FIVE,D4(X0,FOUR)         LOAD SECOND PARAMETER
         CLI   D0(FIVE),C00             IS DDNAME LIST LONG ENOUGH TO
*                                          INCLUDE SYSUT1 DDNAME
         BNE   CHKALL                   YES, CHECK FOR NAMES
         CLI   D1(FIVE),C40             LIST LONG ENOUGH TO INCLUDE
*                                          SYSUT1 DDNAME
         BL    CHK2                     NO, TEST FOR OTHERS
         SPACE
CHKALL   OC    D58(L8,FIVE),D58(FIVE)   IS SYSUT1 DDNAME GIVEN
         BZ    CHKPRT                   NO
         MVC   SYSUT1DD(L8),D58(FIVE)   YES, SAVE IN WORK AREA
         SPACE
CHKPRT   OC    D42(L8,FIVE),D42(FIVE)   IS SYSPRINT DDNAME GIVEN
         BZ    CHKIN                    NO
         MVC   PRINTDD(L8),D42(FIVE)    YES,SAVE IN WORK AREA
         SPACE
CHKIN    OC    D34(L8,FIVE),D34(FIVE)   IS SYSIN DDNAME GIVEN
         BZ    CHKFLG                   NO
         MVC   SYSINDD(L8),D34(FIVE)    YES, SAVE IN WORK AREA
         SPACE
CHKFLG   CLI   D4(FOUR),C80             WAS DDNAME THE LAST PARAMETER
         BE    SETDCBS                  YES, PREPARE DCB'S
         B     GETPG                    CHECK PAGE PARAMETER
         SPACE
CHK2     CLI   D1(FIVE),C30             IS LIST LONG ENOUGH TO INCLUDE
*                                          SYSPRINT
         BNL   CHKPRT                   YES
         CLI   D1(FIVE),C28             IS LIST LONG ENOUGH TO INCLUDE
*                                          SYSIN
         BNL   CHKIN                    YES
         B     CHKFLG                   CHECK FOR PAGE PARAMETER
***********************************************************************
         SPACE
* DETERMINE PAGE NUMBER
***********************************************************************
GETPG    L     FIVE,D8(X0,FOUR)         LOAD PAGE NUMBER ADDRESS
         ST    FIVE,SAVEPAR             SAVE ADDRESS
         OC    D0(L2,FIVE),D0(FIVE)     IS PAGE NUMBER GIVEN
         BZ    SETDCBS                  NO,PREPARE DCB'S
***********************************************************************
         SPACE
* THIS SECTION MOVES THE PAGE NUMBER TO THE WORK AREA AND CONVERTS
* IT TO HEXADECIMAL
***********************************************************************
         XC    DOUBLE(L8),DOUBLE        CLEAR WORK AREA
         MVC   CONVERT(L4),D2(FIVE)     MOVE PAGE NO TO WORK AREA
         PACK  DOUBLE5(L3),CONVERT(L4)  CONVERT PAGE NO TO BINARY
         SR    SIX,SIX
         CVB   SIX,DOUBLE
         BCTR  SIX,X0                   DECREMENT BY ONE
         ST    SIX,PAGENO               STORE CONVERTED PAGE NUMBER
***********************************************************************
         SPACE
* PREPARE DCB'S AND OPEN MACRO
***********************************************************************
SETDCBS  MVC   REENTAR(CLOSELS-OPENLS),OPENLS   MOVE L FORM TO WORKAREA
         MVC   DCBSYP(DCBXLST-DCBPRINT),DCBPRINT  MOVE DCB TO WKAREA
         LA    EIGHT,DCBSYP             ESTABLISH DCB ADDRESSABILITY
         USING IHADCB,EIGHT
         OC    PRINTDD(L8),PRINTDD      WAS SYSPRINT DDNAME
*                                          USER SUPPLIED
         BZ    OPENPRNT                 *
         MVC   DCBDDNAM(L8),PRINTDD     MOVE DDNAME TO DCB
OPENPRNT OPEN  ((8),OUTPUT),MF=(E,REENTAR)
         TM    DCBOFLGS,TBIT3           WAS OPEN SUCCESSFUL FOR
*                                          SYSPRINT
         BO    TESTUT1                  YES, SUCCESSFUL OPEN
         MVI   COMPCODE,CC16            SET COMPLETION CODE TO 16
         B     ENDEXIT                  BRANCH TO EXIT ROUTINE
TESTUT1  TM    COMPCODE,ALLBITS         CHECK FOR ERROR IN DCB EXIT
         BM    WRAPUP                   YES, ERROR FOUND
***********************************************************************
         SPACE
*THIS SECTION PUTS OUT A HEADING WITH UTILITY NAME, DATE, AND PAGE
*NUMBER
***********************************************************************
         MVI   HEADERC,SKIPAGE          SET TO SKIP TO A NEW PAGE
         MVC   HEADER(L8),UTNAME        MOVE IN UTILITY NAME
         MVC   HEADR105(L4),PAGEEQ      MOVE IN PAGE NUMBER
DA000    TIME
         LR    PARMA,PARMB              PICK UP DATE
         SRDL  PARMA,L16                SEPARATE YEARS AND DAYS
         SRL   PARMB,L16                PUT DAYS LOW ORDER
         LR    FOUR,PARMA               SAVE YEAR
         SR    PARMA,PARMA              CLEAR REGISTER
         LA    WORKO,FW19               DOES YEAR(IN DECIMAL) HAVE AN
         NR    WORKO,FOUR                  EVEN FIRST DIGIT AND A
*                                          SECOND DIGIT OF 0, 4, OR 8
         BZ    DA010                    YES, LEAP YEAR
         LA    WORKE,FW18               DOES YEAR(IN DECIMAL) HAVE AN
         XR    WORKO,WORKE                 ODD FIRST DIGIT AND A SECOND
*                                          DIGIT OF 2, OR 6
         BZ    DA010                    YES, LEAP YEAR
         LA    WORKO,FW1                SET SWITCH TO INDICATE THAT
*                                          THIS IS NOT A LEAP YEAR
*
DA010    STM   PARMA,PARMB,DOUBLE
         CVB   WORKE,DOUBLE             CONVERT DAYS TO BINARY
         SR    PARMB,PARMB
         LR    FIVE,PARMB
*
DA020    LA    PARMB,D1(X0,PARMB)       INCREMENT MONTH
         IC    FIVE,XTMN-D1(PARMB)      DAYS MONTH
         SR    WORKE,FIVE               SUBTRACT FROM DAYS LEFT
         LA    SIX,FW3                  CONSTANT FOR THIRD MONTH
         CLR   SIX,PARMB                IS THIS MARCH
         BNE   DA030                    NO
         LTR   WORKO,WORKO              YES, IS IT LEAP YEAR
         BP    DA030                    NO
         BCTR  WORKE,X0                 YES, REDUCE DAYS BY ONE
*
DA030    LTR   WORKE,WORKE              ARE DAYS COUNTED DOWN TO ZERO
         BP    DA020                    NO, REPEAT LOOP
         AR    WORKE,FIVE               YES,RESTORE SUBTRACTED VALUE
         LTR   WORKE,WORKE              TEST FOR ZERO.(FEBRUARY 29TH)
         BNZ   DA040                    NO
         LA    WORKE,FW29               YES, SET FOR DAY 29
         BCTR  PARMB,X0                 DECREMENT TO FEBRUARY
*
DA040    LA    WORKO,FW2                LOOP COUNT
DA050    CVD   PARMB,DOUBLE             CHANGE MONTH TO DECIMAL
         L     FIVE,DOUBLE4             MONTH TO LOWER HALF
         SLL   FIVE,L20
         SLDL  FOUR,L8                  SHIFT UP TO YEAR OR MONTH
         LR    PARMB,WORKE
         BCT   WORKO,DA050              REPEAT UNTIL DONE
         SLL   FOUR,L8                  POSITION DATE FOR STORING
         ST    FOUR,DOUBLE              CONVERT FOR PRINTING
         UNPK  CONVERT(L7),DOUBLE(L4)   POSITION DATE FOR STORING
         MVC   HEADER90(L2),CONVERT2    MOVE IN MONTH OF YEAR
         MVI   HEADER92,SLASH
         MVC   HEADER93(L2),CONVERT4    MOVE IN DAY OF MONTH
         MVI   HEADER95,SLASH
         MVC   HEADER96(L2),CONVERT     MOVE IN YEAR
***********************************************************************
*        OPEN  SYSIN / SYSUT1                                   YL02912
***********************************************************************
         EJECT
         MVC   DCBSYSIN(DCBPRINT-DCBIN),DCBIN  MOVE SYSIN DCB TO
*                                              WORKAREA
         MVC   DCBSYS1(DCBIN-DCBDATA),DCBDATA  MOVE SYSUT1 DCB TO
*                                              WORKAREA
         MVC   REENTAR(CLOSEL-OPENL1),OPENL1   MOVE L FORM TO
*                                              WORKAREA
         LA    NINE,DCBSYS1             PICK UP ADDRESSES OF THE DCB'S
         LA    TEN,DCBSYSIN
         DROP  EIGHT
         USING IHADCB,TEN
         OC    SYSINDD(L8),SYSINDD      WAS SYSIN DDNAME USER-SUPPLIED
         BZ    OPENDCB                  NO, OPEN SYSIN DCB
***********************************************************************
*        OPEN  SYSIN                                            YL02912
***********************************************************************
         MVC   DCBDDNAM,SYSINDD         MOVE DDNAME TO DCB
OPENDCB  OPEN  ((10),INPUT),MF=(E,REENTAR)
         TM    DCBOFLGS,TBIT3           WAS OPEN SUCCESSFUL FOR SYSIN
         BZ    SETNO                    NO, OPEN NOT SUCCESSFUL
READSYS  MVC   REENTAR(OPENLS-READJL),READJL   MOVE L FORM TO
*                                              WORKAREA
         LA    WORKE,JFCBADR            LOAD POINTER TO JFCB AREA
         ST    WORKE,CONVERT
         MVC   SECONDX1(L3),CONVERT1    SET UP DCB EXIT
         MVI   SECONDEX,EIGHTY7         FLAG FOR JFCB EXIT
         LA    WORKE,SECONDEX           PICK UP READJ DCB EXIT LIST
*                                          ADDRESS
         ST    WORKE,CONVERT
         DROP  TEN
         USING IHADCB,NINE
         OC    SYSUT1DD(L8),SYSUT1DD    WAS SYSUT1 DDNAME USER-SUPPLIED
         BZ    MOVEEXIT                 NO, BRANCH AROUND
***********************************************************************
*        OPEN  SYSUT1                                           YL02912
***********************************************************************
         MVC   DCBDDNAM(L8),SYSUT1DD    MOVE IN SYSUT1 DDNAME
MOVEEXIT MVC   DCBEXLST+D1(L3),CONVERT1 MOVE EXIT ADDRESS INTO DCB
         RDJFCB (DCBSYS1),MF=(E,REENTAR)  READ JFCB FOR SYSUT1
         MVC   NAMESLOT(L44),JFCBADR    SAVE DSNAME FROM SYSUT1 JFCB
***********************************************************************
*        COMPLETE HEADING W/PAGE NUMBER                         YL02912
***********************************************************************
PAGEING  L     FOUR,PAGENO              UPDATE PAGE NUMBER
         LA    FOUR,D1(X0,FOUR)
         ST    FOUR,PAGENO              RETURN UPDATED PAGE NUMBER
         CVD   FOUR,DOUBLE              CONVERT PAGE NUMBER FOR
         UNPK  DOUBLE8(L3),DOUBLE6(L2)     PRINTING
         OI    DOUBLE10,FOXZERO
         MVC   HEADR110(L3),DOUBLE8     MOVE IN PAGE NUMBER
         LA    FOUR,FW59                ESTABLISH LINE COUNT
         STH   FOUR,LINECT
         PUT   DCBSYP,HEADERC           WRITE OUT MESSAGE DATA SET
*                                          HEADER
         TM    MESSCODE,BITS67          CHECK FOR MISSING DD
         BO    WRITEMES                 YES, WRITE APPROPRIATE MESSAGE
         TM    COMPCODE,ALLBITS         CHECK FOR AN ERROR DURING OPEN
*                                          EXIT
***********************************************************************
*        GET CONTROL CARDS                                      YL02912
***********************************************************************
         BM    ERRIN                    YES, GO TO CLOSE
         EJECT
ANOTHER  GET   DCBSYSIN                 GET ANOTHER CONTROL RECORD
         DROP  NINE
         USING IHADCB,TEN
         LA    FOUR,EODAD               CHANGE EODAD
         ST    FOUR,DCBEODAD               FOR DATA CARDS
         DROP  TEN
         USING IHADCB,NINE
         MVC   MESSAGE(L80),D0(PARMB)   MOVE CONTROL CARD TO WORKAREA
         BAL   RETREG,WRITECD           GO TO PRINT CONTROL CARD
***********************************************************************
*        VALIDATE CONTROL CARD                                  YL02912
***********************************************************************
         CLI   MESSAGE,BLANK            CHECK FOR BLANK IN COLUMN ONE
         BNE   INVALID                  NO, INVALID CONTROL CARD
         LA    FOUR,MESSAGE1            SET UP SCAN FOR TRACK OR VTOC
         LA    FIVE,MESSAG61               KEYWORDS
CHECKKEY CLI   D0(FOUR),BLANK           START OF CONTROL CARD
         BE    GOON                     NO
         CLC   D0(L6,FOUR),TRACK        CHECK FOR TRACK KEYWORD
         BE    PICKCNT                  YES, FOUND KEYWORD
         CLC   D0(L5,FOUR),VTOC         CHECK FOR VTOC KEYWORD
         BE    VTOCFND                  YES, VTOC FOUND
         B     INVALID                  INVALID CONTROL CARD
GOON     CR    FOUR,FIVE                AT END OF CONTROL CARD
         BNL   INVALID                  YES, AT END OF CONTROL CARD
         LA    FOUR,D1(X0,FOUR)         BUMP POINTER
         B     CHECKKEY                 RETURN TO LOOP
INVALID  MVI   COMPCODE,CC16            SET COMPLETION CODE=16
         MVI   MESSCODE,MC05            SET MESSAGE CODE TO INDICATE
*                                          MISSING OR INVALID CONTROL
*                                          CARD KEYWORD
         B     FLUSH                    GO TO FLUSH INPUT
VTOCFND  BCTR  FOUR,X0                  DECREMENT POINTER
         OI    TRKOVFL,SW7              SET FOR VTOC
PICKCNT  LA    FIVE,FW10                SET COUNTER FOR 20
         TR    D6(L20,FOUR),TABLE       CONVERT TO 20 BYTES
CHECK    CLI   D6(FOUR),C16             CHECK FOR INVALID CHARACTER
         BE    WRONG                    YES,INVALID CHARACTER
         CLI   D7(FOUR),C16             CHECK FOR INVALID CHARACTER
         BE    WRONG                    YES,INVALID CHARACTER
         LA    FOUR,D2(X0,FOUR)         BUMP POINTER
         BCT   FIVE,CHECK               CHECK FOR ALL BYTES CONVERTED
         SH    FOUR,HW20                ADJUST POINTER TO BEGINNING
*                                          OF COUNT
***********************************************************************
*        SET CYLINDER AND TRACK DATA                            YL02912
***********************************************************************
         MVC   DOUBLE(L8),D6(FOUR)      MOVE BBBBCCCC TO WORK AREA
         PACK  DOUBLE4(L5),DOUBLE(L9)   REMOVE EXTRA ZONE BYTES
         MVC   TRACKAD2(L4),DOUBLE4     MOVE BBCC TO SEEK ADDRESS
         MVC   COUNT(L2),DOUBLE6        MOVE CC TO COUNT FIELD
         MVC   DOUBLE(L12),D14(FOUR)    MOVE HHHHRRKKDDDD TO WORK AREA
         PACK  DOUBLE6(L7),DOUBLE(L13)  REMOVE EXTRA ZONE BYTES
         MVC   TRACKAD6(L2),DOUBLE6     MOVE HH TO SEEK ADDRESS
         MVC   COUNT2(L6),DOUBLE6       MOVE HHRKDD TO COUNT FIELD
         SR    FIVE,FIVE
         IC    FIVE,COUNT5              PICK UP KEY LENGTH
         STH   FIVE,KEYSIZE             SAVE THIS KEY LENGTH
         AH    FIVE,COUNT6              ADD THE DATA FIELD LENGTH
         STH   FIVE,KEYDATA             SAVE THIS KEY-DATA LENGTH
         LA    FIVE,D8(X0,FIVE)         ADD COUNT FIELD LENGTH OF 8
         STH   FIVE,CCWCOUNT            SAVE COUNT+KEY+DATA LENGTH
         MVC   TESTDS(L12),D27(FOUR)    /TEST/    /SNAP         YL02912
         XC    PNTSNAP,PNTSNAP          CLEAR SNAP LIST POINTER YL02912
         CLC   TESTDC,TESTDS            TEST MODE               YL02912
         BNE   CHEKSPEC                 NOT TESTING             YL02912
         LA    PARMB,DCBSYS1            SYSUT1 DCBDATA AREA     YL02912
         USING IHADCB,PARMB             ADDRESSING              YL02912
         MVI   DCBMACR1,FOXZERO         APPENDAGES REQUIRED     YL02912
         DROP  PARMB                    DROP REG                YL02912
         CLC   SNAPDC,SNAPDS            SNAP NEEDED             YL02912
         BNE   CHEKSPEC                 NOT SNAPPING            YL02912
         OPEN  (DUMP1,(OUTPUT))         OPEN SNAP AREA          YL02912
         LA    PARMB,SNAPIT             GET LIST ADDRESS        YL02912
         ST    PARMB,PNTSNAP            SAVE LIST ADDRESS       YL02912
CHEKSPEC CLI   D26(FOUR),SPECIALW       CHECK FOR WRITE SPECIAL
*                                          COMMAND REQUIRED
         BNE   GETBUFF                  NO, GO GET RECORD BUFFER
***********************************************************************
*        GET DEVICE CONFIGURATION                               YL02912
***********************************************************************
         DEVTYPE  DCBDDNAM,DEVFEAT      GET DEVICE CHARACTERISTICS
         TM    DEVFEAT1,TBIT1           DOES THE SYSTEM SUPPORT TRACK
*                                          OVERFLOW
         BO    SETSW                    YES, TRACK OVERFLOW IS
*                                          SUPPORTED
         MVI   MESSCODE,MC14            THE SYSTEM DOES NOT SUPPORT
*                                          TRACK OVERFLOW
         B     COMPSET                  SET COMPLETION CODE
SETSW    OI    TRKOVFL,SW3              SET FOR WRITE SPECIAL
***********************************************************************
*        GET CORE FOR RECORD                                    YL02912
***********************************************************************
GETBUFF  MVC   GETLS(L16),GETL          MOVE LIST FORM TO WORK AREA
         ST    FIVE,GETLS               PUT NUMBER BYTES REQUIRED
         LA    PARMB,GETLS              GET ADDRESS OF WHERE AREA
         ST    PARMB,GETLS4                ADDRESS IS TO BE RETURNED
         GETMAIN EC,MF=(E,(1))          GETMAIN FOR RECORD SIZE
         LTR   ADDREG,ADDREG            CHECK FOR GOTTEN CORE
         BNZ   NOCORE                   CORE NOT AVAILABLE
         L     PARMB,GETLS              PICK UP ADDRESS OF GOTTEN CORE
         ST    PARMB,GOTCORE            SAVE POINTER TO GOTTEN CORE
         LR    FOUR,PARMB               PICK UP POINTER TO GOTTON CORE
         LA    SIX,D8(X0,FOUR)          ADJUST MOVING POINTER BEYOND
*                                          COUNT
         MVC   D0(L8,FOUR),COUNT        MOVE IN COUNT
         S     FIVE,FW8                 ACCOUNT FOR COUNT FIELD LENGTH
         LTR   FIVE,FIVE                IS DATA + KEY LENGTH=0
         BZ    GOGETUM                  YES, MAKE SURE NO MORE CONTROL
*                                          CARDS ARE IN INPUT STREAM
***********************************************************************
*        GET USERS DATA                                         YL02912
***********************************************************************
GETSYS   GET   DCBSYSIN
         MVC   MESSAGE(L80),D0(PARMB)   MOVE IN USER'S DATA INTO OUTPUT
*                                          AREA TO PRINT
         LR    WORKE,PARMB
         BAL   RETREG,WRITECD           GO TO WRITE DATA CARD
         C     FIVE,FW40                MORE THAN 40 BYTES LEFT
         BH    MOVE40                   YES, MORE THAN 40
         LR    SEVEN,FIVE               SET UP BYTE COUNTER
         SR    FIVE,FIVE
         B     TRANSLAT                 TRANSLATE PROPER NUMBER
*                                          OF BYTES
***********************************************************************
*        VALIDATE USERS RECORD                                  YL02912
***********************************************************************
MOVE40   LA    SEVEN,L40                SET COUNTER FOR 40
         S     FIVE,FW40                SUBTRACT 40 FOR OUTPUT
TRANSLAT TR    D0(L80,WORKE),TABLE      CONVERT TO 80 BYTES
VALIDCK  CLI   D0(WORKE),C16            CHECK FOR INVALID CHARACTER
         BE    WRONG                    YES, INVALID CHARACTER
         CLI   D1(WORKE),C16            CHECK FOR INVALID CHARACTER
         BE    WRONG                    YES, INVALID CHARACTER
         IC    EIGHT,D0(WORKE)          PICK UP FIRST BYTE OF 2 BYTE
*                                          CHARACTER
         SLL   EIGHT,L4                 SHIFT OUT HIGH ORDER DIGIT
         STC   EIGHT,D0(SIX)            STORE FIRST HALF OF DIGIT
         OC    D0(L1,SIX),D1(WORKE)     OR THE FIRST AND SECOND DIGITS
         LA    SIX,D1(X0,SIX)           BUMP OUTPUT POINTER
         LA    WORKE,D2(X0,WORKE)       BUMP INPUT POINTER
         BCT   SEVEN,VALIDCK            CHECK FOR ALL BYTES ON THIS
*                                          CARD CONVERTED
         LTR   FIVE,FIVE                CHECK FOR ALL BYTES IN RECORD
*                                       CONVERTED
         BNZ   GETSYS                   NO, ALL BYTES NOT CONVERTED
***********************************************************************
* GET AGAIN FROM SYSIN TO FORCE EODAD
***********************************************************************
GOGETUM  GET   DCBSYSIN
         B     TOOFEW                   SHOULD NOT BE HERE UNLESS SYSIN
*                                          CONTAINS MORE CONTROL OR
*                                          DATA CARDS THAN REQUIRED
***********************************************************************
*        ESTABLISH CCW'S                                        YL02912
***********************************************************************
         EJECT
EODAD    LTR   FIVE,FIVE                TEST FOR CORRECT NUMBER OF
*                                          BYTES FOR OUTPUT
         BNZ   TOOFEW                   CHARACTERS RECEIVED IS LESS
*                                          THAN COUNT SPECIFIED
         MVC   CCWAR1(L48),CCW1         MOVE CCWS TO WORK AREA
         L     FOUR,GOTCORE             RESTORE WORK AREA POINTER
         ST    FOUR,CONVERT
         MVC   CCWAR11(L3),CONVERT1     ESTABLISH POINTER TO COUNT FOR
*                                          SEARCH EQUAL ID
         MVC   CCWAR41(L3),CONVERT1
         LA    FIVE,CCWAR1              ESTABLISH ADDRESS OF FIRST CCW
         ST    FIVE,CONVERT                FOR TIC
         MVC   CCWAR21(L3),CONVERT1
         LA    FIVE,CCWAR4              ESTABLISH ADDRESS OF FOURTH CCW
         ST    FIVE,CONVERT                FOR TIC
         MVC   CCWAR51(L3),CONVERT1
         MVC   CCWAR3A2(L2),KEYDATA     INSERT LENGTH OF KEY AND DATA
         LA    FIVE,D8(X0,FOUR)         PICK UP POINTER TO RECORD
         ST    FIVE,CONVERT
         MVC   CCWAR31(L3),CONVERT1     ESTABLISH ADDRESS FROM WHICH
*                                          DATA IS TO BE WRITTEN
         MVC   CCWAR61(L3),CONVERT1     ESTABLISH ADDRESS INTO WHICH
*                                       DATA IS TO BE READ
***********************************************************************
         MVC   CCWAR6A2(L2),KEYDATA     MOVE LENGTH OF KEY/DATA OX02345
         SPACE
* INSERT TEST HERE TO CHANGE WRITE KEY DATA TO WRITE(SPECIAL) COUNT,KEY
* DATA
***********************************************************************
         TM    TRKOVFL,TBIT3              WRITE SPECIAL REQUIRED
         BZ    BUILDECB                 NO, WRITE SPECIAL NOT REQUIRED
         MVI   CCWAR3,SW7               SET WRITE FOR TRACK OVERFLOW
         MVC   CCWAR31(L3),CCWAR11      MOVE ADDRESS OF COUNT IN FOR
*                                          WRITE(SPECIAL) COUNT, KEY,
*                                          DATA
         MVC   CCWAR3A2(L2),CCWCOUNT    INSERT LENGTH OF KEY+DATA+COUNT
         L     FIVE,CCWAR1              LOAD POINTER TO COUNT FIELD
*                                          FOR SEARCH ID EQUAL CCW
         MVC   ID(L4),D0(FIVE)          MOVE INTO NEW COUNT FIELD
         XR    FOUR,FOUR
         IC    FOUR,D4(FIVE)            LOAD OLD SEARCH RECORD NUMBER
         BCTR  FOUR,X0                  DECREMENT BY 1
         STC   FOUR,ID4                 STORE R IN NEW COUNT FIELD
         LA    FOUR,ID                  OBTAIN POINTER TO NEW COUNT
*                                          FIELD
         ST    FOUR,TEMP
         MVC   CCWAR11(L3),TEMP1        MOVE POINTER INTO SEARCH CCW
***********************************************************************
         EJECT
* THIS SECTION BUILDS THE REQUIRED ECB AND IOB AND ATTEMPTS TO WRITE
* THE REPLACEMENT RECORD
***********************************************************************
BUILDECB LA    FIVE,ECB                 PUT ECB ADDRESS INTO IOB
         ST    FIVE,IOBECB
         OC    KEYDATA(L2),KEYDATA      KEY/DATA LENGTH = ZERO.
         BNZ   NONZERO                  NO, GO ON
         LA    FIVE,CCWAR4              PUT ADDRESS OF FOURTH CCW INTO
*                                          IOB
         B     MARCHON                  CONTINUE
NONZERO  LA    FIVE,CCWAR1              PUT ADDRESS OF FIRST CCW AND
MARCHON  LA    SIX,DCBSYS1                 DCB ADDRESS INTO IOB
         STM   FIVE,SIX,IOBSTART
         MVC   SEEK1(L6),TRACKAD2       MOVE IN SEEK ADDRESS
         LA    NINE,DCBSYS1
PREPDCB  MVC   REENTAR(OPENL1-OPENL2),OPENL2   MOVE L FORM TO WORKAREA
         XC    DCBEXLST+D1(L3),DCBEXLST+D1 CLEAR DCBEXIT
         TM    TRKOVFL,TBIT7            CHECK FOR VTOC
         BZ    REGOPEN                  NO, NOT VTOC
         MVI   JFCBADR,OHFOUR           SET 44 BYTES TO X'04'
         MVC   JFCBADR1(L43),JFCBADR
         LA    FIVE,DOUBLE
         ST    FIVE,DCBEXLST            STORE POINTER TO DCB EXIT LIST
         LA    FIVE,JFCBADR             SET UP POINTER TO JFCB TO BE
         ST    FIVE,DOUBLE                 USED
         MVI   DOUBLE,EIGHTY7           SET FOR JFCB BEING USED
         OI    JFCBTSDM,SW4             TURN ON FLAG SO JFCB WILL
*                                          NOT BE WRITTEN BACK
***********************************************************************
*        OPEN SYSUT1                                            YL02912
***********************************************************************
         OPEN  ((9),INOUT),TYPE=J,MF=(E,REENTAR)  OPEN SYSUT1 FOR VTOC
         B     HERE                     GO ON
REGOPEN  OPEN  ((9),INOUT),MF=(E,REENTAR)         OPEN SYSUT1
HERE     TM    DCBOFLGS,TBIT3           CHECK FOR SUCCESSFUL OPEN
         BZ    SETNOS                   NO, MISSING DD CARD
***********************************************************************
         EJECT
* THIS SECTION DETERMINES WHICH EXTENT OF THE SYSUT1 DATA SET INCLUDES
* THE GIVEN BAD TRACK
***********************************************************************
         L     SEVEN,DCBDEBAD           LOAD PTR TO DEB
         XR    FIVE,FIVE                ZERO REGISTER
         LR    SIX,FIVE                 SET M=0
         IC    FIVE,DEBNMEXT(SEVEN)     LOAD NUMBER OF EXTENTS
         TM    DEBOFLGS(SEVEN),TBIT5    CHECK FOR SPLIT CYL
         BNO   NOSPLIT                  BRANCH AROUND IF NOT SPLIT
         MVI   SPLIT,ALLBITS            SET SPLIT SWITCH
NOSPLIT  LA    SEVEN,DEBDASD(SEVEN)     BUMP PTR TO FIRST EXTENT
*                                          DESCRIPTION
STARTEST CLC   TRACKAD4(L4),DEBSTRCC(SEVEN) IS GIVEN BAD TRACK LOWER
*                                       THAN START OF EXTENT
         BL    DECREMNT                 YES, CONTINUE TESTING
         CLC   TRACKAD4(L4),DEBENDCC(SEVEN) IS GIVEN BAD TRACK HIGHER
*                                          THAN END OF EXTENT
         BH    DECREMNT                 YES, CONTINUE TESTING
         CLI   SPLIT,ALLBITS            SPLIT SWITCH ON
         BNE   STOREM                   NO, STORE M
         CLC   TRACKAD6(L2),DEBSTRHH(SEVEN) IS GIVEN BAD TRACK HH
*                                       LOWER THAN EXTENT
         BL    DECREMNT                 YES, CONTINUE TESTING
         CLC   TRACKAD6(L2),DEBENDHH(SEVEN) IS GIVEN BAD TRACK HH
*                                          HIGHER THAN EXTENT
         BH    DECREMNT                 YES,CONTINUE TESTING
         B     STOREM                   STORE M
DECREMNT BCT   FIVE,INCREMNT            DECREMENT NUMBER OF EXTENTS AND
*                                          CONTINUE
         B     INVALIDS                 OUT OF EXTENT
INCREMNT LA    SIX,D1(SIX)              INCREMENT M
         LA    SEVEN,NEXTEXT(SEVEN)     BUMP POINTER TO NEXT DEB EXTENT
         B     STARTEST                 CHECK NEXT EXTENT
STOREM   STC   SIX,SEEK                 STORE M INTO IOB SEEK ADDRESS
         L     SIX,D0(SEVEN)            GET POINTER TO UCB      YL02912
         TM    D0(SIX),EIGHTY           IS IT VIRTUAL           YL02912
         BO    ISVERT                   YES - DON'T SUPPORT     YL02912
         USING UCB,SIX                                         @Y30LSFY
         TM    UCBTBYT2,UCB2OPT4        VIRTUAL UCB ?          @Y30LSFY
         BO    ISVERT                   YES - DON'T SUPPORT    @Y30LSFY
         DROP  SIX                                             @Y30LSFY
         EJECT
         TM    TRKOVFL,TBIT7            CHECK FOR VTOC
         BO    TESTVTOC                 YES, VTOC, TRY TO READ RECORD
***********************************************************************
*        ATTEMP TO WRITE RECORD                                 YL02912
***********************************************************************
GOODSEEK EQU   *
         XC    ECB(L4),ECB              CLEAR ECB
         EXCP  IOB                      ATTEMPT TO WRITE RECORD
         WAIT  1,ECB=ECB                WAIT FOR I/O TO COMPLETE
         TM    ECB,TBIT2                CHECK FOR I/O SUCCESSFUL
         BO    NOALT                    YES, I/O SUCCESSFUL
         CLI   ECB,C42                  OUT OF EXTENT
         BE    INVALIDS                 YES, WRITE ERROR MESSAGE
         CLI   ECB,C41                  ARE CSW CONTENTS VALID
         BNE   WRONGERR                 NO, CAN'T HANDLE ERROR
         CLI   IOBCSWST,C0D             END OF FILE
         BE    NOALT                    YES, KEYDATA LENGTH =0
         TM    IOBCSWST,TBIT6           DID USER CHECK OCCUR
         BNO   WRONGERR                 NO, CAN'T HANDLE ERROR
         B     GETSET                   SET UP PARAMETER LIST
***********************************************************************
*        READ VTOC                                              YL02912
***********************************************************************
TESTVTOC LA    SIX,CCWAR4               GET NEW ADDRESS TO READ RECORD
         ST    SIX,IOBSTART             STORE IN IOBSTART
         EXCP  IOB                      ATTEMPT TO READ
         WAIT  1,ECB=ECB                WAIT FOR I/O TO COMPLETE
         TM    ECB,TBIT2                I/O SUCCESSFUL
         BO    PREPMESS                 YES, CAN'T HANDLE REQUEST
         LA    SIX,CCWAR1               RESTORE IOBSTART FIELD WITH
         ST    SIX,IOBSTART                ADDRESS OF WRITE PROGRAM
         MVI   DCBIFLGS,DBLZERO         RESET ERROR FLAGS
         B     GOODSEEK                 EXECUTE WRITE CHANNEL PROG
***********************************************************************
*        PREPARE FOR ATLAS SVC                                  YL02912
***********************************************************************
GETSET   MVI   DCBIFLGS,DBLZERO         RESET ERROR FLAGS
         DROP  NINE
         EJECT
         LA    PARMB,IOB                SET UP POINTER TO IOB
         ST    PARMB,PARMLIST
         LA    PARMB,COUNT              SET UP POINTER TO COUNT
         ST    PARMB,PARMLIS4
         MVI   PARMLIS4,EIGHTY          TURN ON UTILITY FLAG FOR SVC
         TM    TRKOVFL,TBIT3            WAS USER RECORD AN OVERFLOW
*                                          SEGMENT
         BZ    NOVFL                    NO,WRITE SPECIAL NOT REQUIRED
         OI    PARMLIS4,TWENTY          YES, TURN ON WRITE SPECIAL FOR
*                                          SVC
NOVFL    LA    PARMB,PARMLIST           SET UP PARAMETER REGISTER TO
*                                          POINT TO PARAMETER LIST
         SVC   ATLASSVC                 ISSUE SVC 86             S20201
***********************************************************************
         SPACE
* BRANCH TABLE BASED ON SVC RETURN CODES. GO TO APPROPRIATE ROUTINE TO
* SET COMPLETION AND MESSAGE CODES.
***********************************************************************
         B     BRANCH(ADDREG)           B
BRANCH   B     SUCCESS                   R
         B     WRONGDEV                   A
         B     NOMORE                   F  N
         B     NOCORE                    O  C
         B     IOERROR                    R  H
         B     WRONGERR                    -
         B     F4NOT                        E  T
         B     USERF4                        R  A
         B     LASTCNT                        R  B
         B     R0HA                            O  L
         B     DATAERR                          R  E
         B     USERSREC                          -
         B     NOERR                              M
         B     NOREEX                              S
         B     NOTRKOVF                             G
         B     TRKOUT                                S
         B     ISVERT                   *                       YL02912
*
SUCCESS  MVI   MESSCODE,MC00            MESSAGE FOR SUCCESS
         B     WRITEMES                 WRITE SUCCESSFUL MESSAGE
WRONGDEV MVI   MESSCODE,MC07            WRONG DEVICE TYPES
         B     COMPSET                  SET COMPLETION CODE
NOMORE   MVI   MESSCODE,MC08            NO MORE ALTERNATES
         B     COMPSET                  SET COMPLETION CODE
NOCORE   MVI   MESSCODE,MC09            CORE NOT AVAILABLE
         B     COMPSET                  SET COMPLETION CODE
IOERROR  MVI   MESSCODE,MC02            I/O ERROR
         B     COMPSET                  SET COMPLETION CODE
WRONGERR MVI   MESSCODE,MC0D            NO DATA CHECK OR MISSING
*                                          ADDRESS MARKER
         B     COMPSET                  SET COMPLETION CODE
F4NOT    MVI   MESSCODE,MC0E            FORMAT 4 DSCB COULD NOT BE READ
         B     COMPSET                  SET COMPLETION CODE
USERF4   MVI   MESSCODE,MC0F            ERROR ON LAST COUNT FIELD
*                                          RECORD
         B     COMPSET                  SET COMPLETION CODE
LASTCNT  MVI   MESSCODE,MC10            ERROR ON LAST COUNT FIELD
         B     COMPSET                  SET COMPLETION CODE
R0HA     MVI   MESSCODE,MC11            R0 AND HA ERRORS
         B     COMPSET                  SET COMPLETION CODE
DATAERR  MVI   MESSCODE,MC12            ERROR/ERRORS ENCOUNTERED
*                                          AN ALTERNATE HAS BEEN
*                                          ASSIGNED
         B     COMPSET                  SET COMPLETION CODE
NOERR    MVI   MESSCODE,MC17            NO ERRORS FOUND ON TRACK
*                                          NO ALTERNATE ASSIGNED
         B     COMPSET                  SET COMPLETION CODE
NOREEX   MVI   MESSCODE,MC13            CHANNEL PROGRAM NOT RE-
*                                          EXECUTABLE
         B     COMPSET                  SET COMPLETION CODE
NOTRKOVF MVI   MESSCODE,MC14            MESSAGE FOR SYSTEM DOES NOT
*                                          SUPPORT TRACK OVERFLOW
         B     COMPSET                  SET COMPLETION CODE
TRKOUT   MVI   MESSCODE,MC0B            TRACK IS OUT OF EXTENTS
         B     COMPSET                  SET COMPLETION CODE
ISVERT   EQU   *                        YL02912
         MVI   MESSCODE,MC18            NO VIRTUAL UCB SUPPORT
         B     COMPSET                  SET COMPLETION CODE
USERSREC MVI   MESSCODE,MC16            CAN'T HANDLE ERROR
*                                          NO ALTERNATE ASSIGNED
COMPSET  MVI   COMPCODE,CC16            SET COMPLETION CODE TO 16
         ST    PARMA,RETPARM            SAVE ERROR RECORD NUMBERS
***********************************************************************
* THIS ROUTINE WRITES OUT ALL MESSAGES
***********************************************************************
WRITEMES EQU   *
         SR    WORKO,WORKO
         IC    WORKO,MESSCODE           PICK UP MESSAGE NUMBER
         CH    WORKO,HW10               CHECK FOR SYNAD ENTERED FOR
*                                          SYSIN
         BE    SPECIAL                  YES, SYNAD ENTERED FOR SYSIN
CONTWRT  SLL   WORKO,L6                 MULTIPLY MESSAGE X 64   YL02912
         L     FOUR,MESSTBLA            MESSAGE MASK ADDRESS    YL02912
         MVC   MESSAGE(L120),D0(FOUR)   SET IN MASK             YL02912
         LA    WORKO,L120(WORKO,FOUR)   INCREMENT TO MESSAGE    YL02912
         MVC   MESSAGE4(L2),D0(WORKO)   SET IN IEH9XXI CODE     YL02912
         MVC   MESS112(L2),D2(WORKO)    SET IN COMPLETION CODE  YL02912
         MVC   MESSAGE8(L60),D4(WORKO)  SET IN MESSAGE         @ZA01660
         LA    FIVE,CHKMESS             LOAD RETURN ADDRESS
PUTOUT   PUT   DCBSYP,MESSAGEC          PUT OUT MESSAGE
         BR    FIVE                     GO TO NEXT ROUTINE
***********************************************************************
*        CHECK MESSAGE CODE                                     YL02912
***********************************************************************
CHKMESS  CLI   MESSCODE,C03             IS MESSAGE CODE FOR MISSING DD
         BNE   NEXTEST                  NO, GO ON TO NEXT TEST
         USING IHADCB,TEN
         TM    DCBOFLGS,TBIT3           IS SYSIN DCB OPEN
         BO    ENDCARD                  YES, IT IS OPEN
         B     WRAPUP                   BRANCH TO EXIT ROUTINE
         DROP  TEN
NEXTEST  EQU   *
         CLI   MESSCODE,C00             WAS MESSAGE FOR SUCCESSFUL
*                                          COMPLETION
         BE    ORCORE                   YES,NO NEED TO PRINT ERROR
*                                          RECORD NUMBERS
         CLI   RETPARM,C00              ARE THERE ANY ERROR RECORDS TO
*                                          BE PRINTED OUT
         BE    ORCORE                   NO,GO TO WRAP UP
         XR    WORKE,WORKE              CLEAR REGISTER
         LA    FOUR,MESSAGE
         MVI   MESSAGE,PRINTERR         SET UP PRINTOUT FOR ERROR
         MVI   MESSAGE1,EQUALS             RECORDS
         MVI   MESSAGE2,ELEVEN          MOVE IN DUMMY CODE FOR BLANKS
         MVC   MESSAGE3(L117),MESSAGE2  PROPAGATE THRU MESSAGE AREA
         LA    WORKO,RETPARM
         XR    SIX,SIX
***********************************************************************
*        SET IN ERROR RECORD NUMBERS                            YL02912
***********************************************************************
         IC    SIX,RETPARM              PICK UP NUMBER OF ERROR RECORDS
MOVIT    IC    WORKE,D1(X0,WORKO)       PICK UP ERROR RECORD NUMBER
         SRL   WORKE,L4                 SHIFT OUT RIGHT DIGIT
         STC   WORKE,D2(X0,FOUR)        PLACE LEFT DIGIT IN ONE BYTE
*                                          OF MESSAGE AREA
         MVC   D3(L1,FOUR),D1(WORKO)    MOVE SAME RECORD NUMBER TO
*                                          NEXT BYTE IN MESSAGE AREA
         NI    D3(FOUR),ZEROFOX         SET LEFT HALF OF BYTE TO ZERO
         MVI   D4(FOUR),DUMMY           MOVE IN DUMMY COMMA
         LA    FOUR,D3(FOUR)            INCREMENT MESSAGE AREA
*                                          POINTER
         LA    WORKO,D1(WORKO)          INCREMENT PARAMETER LIST
*                                          POINTER
         BCT   SIX,MOVIT                REDUCE NUMBER OF ERROR RECORDS
*                                          BY ONE AND TEST FOR ZERO
         TR    MESSAGE2(L118),TRANSTB   IF ALL RECORD NUMBERS MOVED TO
*                                          MESSAGE AREA-TRANSLATE FOR
*                                          PRINTOUT
         LA    FIVE,ORCORE              LOAD RETURN ADDRESS
         B     PUTOUT                   BRANCH TO PUT ROUTINE
***********************************************************************
*        FREE WORK AREA                                         YL02912
***********************************************************************
ORCORE   OC    GOTCORE(L4),GOTCORE      HAS CORE BEEN GOTTEN FOR THE
*                                          RECORD
         BZ    ENDCARD                  NO, CLOSE DCB'S
FREE     LH    FIVE,CCWCOUNT
         L     FOUR,GOTCORE             RESTORE WORK AREA POINTER
         FREEMAIN R,LV=(5),A=(4)        FREE BUFFER
         B     ENDCARD                  CLOSE OUT DCB'S
SPECIAL  MVC   MESSAGE(L8),IONUMBER     MOVE IN SPECIAL MESSAGE NUMBER
         MVC   MESSAG96(L24),COMPMESS   MOVE COMPLETION CODE TO MESSAGE
         PUT   DCBSYP,MESSAGEC
         B     CONTWRT                  PUT OUT ANOTHER MESSAGE
***********************************************************************
*        NO ALTERNATES                                          YL02912
***********************************************************************
NOALT    MVI   COMPCODE,CC00            SET COMPLETION CODE TO ZERO
         MVI   MESSCODE,MC01            SET MESSAGE CODE TO ONE
         B     WRITEMES                 WRITE SUCCESSFUL MESSAGE
***********************************************************************
*        WRITE CONTROL CARD                                     YL02912
***********************************************************************
WRITECD  LR    FOUR,RETREG              SAVE RETURN POINTER
         PUT   DCBSYP,MESSAGEC          WRITE CONTROL CARD
         LH    EIGHT,LINECT
         BCT   EIGHT,SUBTRACT           CHECK LINE COUNT
         L     EIGHT,PAGENO             NEED NEW PAGE
         LA    EIGHT,D1(X0,EIGHT)       UPDATE PAGE NUMBER
         ST    EIGHT,PAGENO
         CVD   EIGHT,DOUBLE             CONVERT PAGE NUMBER FOR
         UNPK  DOUBLE8(L3),DOUBLE6(L2)     PRINTING
         OI    DOUBLE10,FOXZERO
         MVC   HEADR110(L3),DOUBLE8     MOVE IN PAGE NUMBER
         PUT   DCBSYP,HEADERC           WRITE OUT HEADER ON MESSAGE
*                                          DATA SET
         LA    EIGHT,FW59
         STH   EIGHT,LINECT             RE-ESTABLISH LINE COUNT
         LR    RETREG,FOUR              RESTORE RETURN POINTER
         BR    RETREG                   RETURN TO CALLER
SUBTRACT STH   EIGHT,LINECT             RETURN UPDATED LINE COUNT
         LR    RETREG,FOUR              RESTORE RETURN POINTER
         BR    RETREG                   RETURN TO CALLER
***********************************************************************
*        NO MORE INPUT CARDS                                    YL02912
***********************************************************************
         EJECT
ENDCARD  MVC   REENTAR(DCBDATA-CLOSEL),CLOSEL  MOVE L FORM TO WORKAREA
         USING IHADCB,NINE
         XC    DCBDSORG(L2),DCBDSORG    ZERO OUT DSORG IN SYSUT1 DCB
         DROP  NINE
         CLOSE ((9),,(10)),MF=(E,REENTAR)      CLOSE SYSIN & SYSUT1
         FREEPOOL DCBSYSIN              FREE BUFFER FOR SYSIN
***********************************************************************
*        WRAP UP ROUTINES                                       YL02912
***********************************************************************
WRAPUP   MVC   REENTAR(OPENL2-CLOSELS),CLOSELS  MOVE L FORM TO WORKAREA
         LA    EIGHT,DCBSYP             RESTORE DCB POINTER
         CLOSE ((8)),MF=(E,REENTAR)
         FREEPOOL DCBSYP                FREE BUFFERS FOR SYSPRINT
         CLC   SNAPDC,SNAPDS                                    YL02912
         BNE   ENDEXIT                                          YL02912
         CLOSE DUMP1                    CLOSE SNAP DUMP         YL02912
ENDEXIT  L     SAVEREG,D4(SAVEREG)      RESTORE SAVE AREA POINTER
         SR    FOUR,FOUR
         OC    SAVEPAR(L4),SAVEPAR      WAS PAGE PARAMETER GIVEN
         BZ    FREECORE                 NO, ISSUE FREEMAIN
         L     FIVE,SAVEPAR             LOAD ADDRESS OF PARAMETER
         L     SIX,PAGENO
         CVD   SIX,DOUBLE               CONVERT PAGE NUMBER TO DECIMAL
         UNPK  CONVERT(L4),DOUBLE5(L3)
         MVC   D2(L4,FIVE),CONVERT      RESTORE PAGE NUMBER PARAMETER
FREECORE IC    FOUR,COMPCODE            INSERT COMPLETION CODE @ZA01742
         FREEMAIN R,LV=1300,A=(11)      FREE MAIN WORK AREA    @ZA01742
         LR    ADDREG,FOUR
         L     RETREG,D12(X0,SAVEREG)   RESTORE RETURN ADDRESS
         RETURN (2,12),T
***********************************************************************
         EJECT
*THIS IS THE SYNAD ROUTINE FOR SYSIN.  THE SYNADAF & SYNADRLS MACROS
*ARE USED.  THE COMPLETION CODE AND MESSAGE NUMBERS ARE SET.
SYSINSYN SYNADAF ACSMETH=QSAM,PARM1=DCBSYSIN,PARM2=(0)
***********************************************************************
         MVC   MESSAGE8(L79),D49(PARMB) MOVE IN PRINTABLE DATA FROM
*                                          BUFFER FOR MESSAGE
         MVI   COMPCODE,CC16            SET COMPLETION CODE FOR 16
         MVI   MESSCODE,MC0A            SET MESSAGE CODE FOR 10
         SYNADRLS
         B     WRITEMES                 PUT OUT MESSAGE
***********************************************************************
         SPACE
* THIS SECTION SETS MESSAGE AND COMPLETION CODES FOR MISSING DD
***********************************************************************
SETNO    MVI   COMPCODE,CC16            SET COMPLETION CODE TO SIXTEEN
         MVI   MESSCODE,MC03            SET MESSAGE CODE TO THREE
         B     READSYS                  GO BACK TO READJ FOR SYSUT1
SETNOS   MVI   MESSCODE,MC03            SET MESSAGE CODE TO THREE
         MVI   COMPCODE,CC16            SET COMPLETION CODE TO 16
         B     WRITEMES                 WRITE ERROR MESSAGE
***********************************************************************
         SPACE
* THIS IS THE SYSIN DCB EXIT FOR DCB PARAMETER VALIDATION
***********************************************************************
         USING IHADCB,TEN
DCBEXIT  OC    DCBBLKSI(L2),DCBBLKSI    CHECK FOR NO BLKSIZE
         BNZ   CHECKM                   YES, BLOCKSIZE PRESENT
         MVC   DCBBLKSI(L2),DCBLRECL    SET UP BLOCKSIZE
CHECKM   LH    WORKO,DCBBLKSI           PICK UP BLOCKSIZE
         LH    FOUR,DCBLRECL            PICK UP LOGICAL RECORD SIZE
         SR    WORKE,WORKE
         DR    WORKE,FOUR               DIVIDE BLOCKSIZE BY LRECL
         LTR   WORKE,WORKE              CHECK FOR NO REMAINDER
         BNE   DCBERR                   NO, SET FOR ERROR IN DCB
         RETURN
***********************************************************************
*        SYSIN DCB ERROR                                        YL02912
***********************************************************************
DCBERR   MVI   MESSCODE,MC04            SET MESSAGE NUMBER TO FOUR
         MVI   COMPCODE,CC16            SET COMPLETION CODE TO 16
         MVC   DCBBLKSI(L2),DCBLRECL    CHANGE BLOCKSIZE
         RETURN
***********************************************************************
WRONG    MVI   MESSCODE,MC06            SET MESSAGE CODE FOR INVALID
*                                          CHARACTER IN THE USER'S
*                                          RECORD
         MVI   COMPCODE,CC16            SET COMPLETION CODE TO 16
FLUSH    LA    EIGHT,WRITEMES           CHANGE SYSIN EODAD ADDRESS
         ST    EIGHT,CONVERT
         MVC   DCBEODAD+D1(L3),CONVERT1 MOVE IN NEW EODAD ADDRESS
FLUSHGET GET   DCBSYSIN
         B     FLUSHGET                 FLUSH REMAINING CARDS
         DROP  TEN
***********************************************************************
         USING IHADCB,EIGHT
PRINTCK  OC    DCBBLKSI(L2),DCBBLKSI    CHECK FOR NO BLKSIZE
         BNZ   CHECKPM                  YES, BLOCKSIZE PRESENT
         MVC   DCBBLKSI(L2),DCBLRECL    SET UP BLOCKSIZE
CHECKPM  LH    WORKO,DCBBLKSI           PICK UP BLOCKSIZE
         LH    FOUR,DCBLRECL            PICK UP LOGICAL RECORD SIZE
         SR    WORKE,WORKE
         DR    WORKE,FOUR               DIVIDE BLOCKSIZE BY LRECL
         LTR   WORKE,WORKE              CHECK FOR NO REMAINDER
         BNE   ERRDCB                   NO, SET FOR ERROR IN DCB
         RETURN
***********************************************************************
ERRDCB   MVI   COMPCODE,CC16            SET COMPLETION CODE TO 16
         MVC   DCBBLKSI(L2),DCBLRECL    MOVE LRECL TO BLKSIZE
         RETURN
***********************************************************************
ERRIN    MVI   COMPCODE,CC16            SET COMPLETION CODE TO 16
         MVI   MESSCODE,MC04            SET MESSAGE CODE FOR INVALID
*                                          DCB PARAMETERS FOR SYSIN
         B     WRITEMES                 GO TO WRITE MESSAGE
***********************************************************************
NOCARD   MVI   COMPCODE,CC16            SET COMPLETION CODE TO 16
         MVI   MESSCODE,MC05            SET MESSAGE CODE TO INDICATE
*                                          MISSING CONTROL CARD
         B     WRITEMES                 GO TO WRITE MESSAGE
***********************************************************************
         SPACE
* THIS SECTION ISSUES A SYNADAF MACRO FOR AN I/O ERROR ON SYSPRINT
***********************************************************************
SYSSYNAD MVC   WTOLIST(L76),WTOLS       MOVE LIST FORM TO WORK AREA
         LR    FOUR,PARMA               SAVE REGISTER
         LA    PARMB,WTOLIST            PREPARE TO ISSUE MACRO
         WTO   MF=(E,(1))
         LR    PARMA,FOUR               RESTORE REGISTER
         SYNADAF   ACSMETH=QSAM,PARM1=DCBSYP,PARM2=(0)
         MVC   WTOLIS12(L26),D49(PARMB) MOVE IN FIRST PART OF MESSAGE
         MVC   MSGWTO(L53),D75(PARMB)   SAVE LAST PART OF MESSAGE
         MVI   WTOLIS38,BLANK           CLEAR REST OF MESSAGE AREA
         MVC   WTOLIS39(L36),WTOLIS38
         MVI   COMPCODE,CC16            SET COMPLETION CODE TO 16
         SYNADRLS
         LA    PARMB,WTOLIST            PREPARE TO ISSUE MACRO
         WTO   MF=(E,(1))
         MVC   WTOLIS12(L53),MSGWTO     MOVE IN SECOND PART OF MESSAGE
         MVI   WTOLIS65,BLANK           CLEAR REST OF MESSAGE AREA
         MVC   WTOLIS66(L9),WTOLIS65
         LA    PARMB,WTOLIST            PREPARE TO ISSUE MACRO
         WTO   MF=(E,(1))
         B     ENDCARD                  GO TO CLOSE OUT
***********************************************************************
INVALIDS MVI   COMPCODE,CC16            SET COMPLETION AND MESSAGE CODE
         MVI   MESSCODE,MC0B               FOR INVALID DEB EXTENTS
         B     WRITEMES                 WRITE ERROR MESSAGE
***********************************************************************
PREPMESS MVI   COMPCODE,CC00            SET COMPLETION CODE TO 00 -
*                                          THERE IS NO ERROR
         MVI   MESSCODE,MC15            RECORD NOT IN ERROR
         B     WRITEMES                 WRITE MESSAGE
***********************************************************************
TOOFEW   MVI   COMPCODE,CC16            SET MESSAGE COMPLETION CODES
         MVI   MESSCODE,MC0C            FOR TO FEW CHARACTERS
         B     WRITEMES                 WRITE ERROR MESSAGE
***********************************************************************
*        LIST FORM FOR OPEN AND CLOSE                           YL02912
***********************************************************************
READJL   RDJFCB (,),MF=L                READJ FOR SYSUT1
OPENLS   OPEN  (,OUTPUT),MF=L           OPEN FOR SYSPRINT
CLOSELS  CLOSE (,),MF=L                 CLOSE FOR SYSPRINT
OPENL2   OPEN  (,INOUT),MF=L            OPEN FOR SYSUT1
OPENL1   OPEN  (,INPUT),MF=L            OPEN FOR SYSIN
CLOSEL   CLOSE (,,,),MF=L               CLOSE FOR SYSIN, SYSUT1
GETL     GETMAIN  EC,MF=L               LIST FORM FOR GETMAIN
WTOLS    WTO   'IEH924I    MESSAGE TEXT PROVIDED BY SYNADAF MACRO  COMP*
               LETION CODE = 16',MF=L,ROUTCDE=(11),DESC=(7)
***********************************************************************
DCBDATA  DCB   DSORG=PS,MACRF=(E),DDNAME=SYSUT1
         DC    XL8'0'                   EXCP APPENDAGE LIST THISYL02912
         DC    CL12'WY0 0 WZWX0 '       MUST FOLLOW DCBDATA     YL02912
DCBIN    DCB   DSORG=PS,MACRF=GL,DDNAME=SYSIN,EODAD=NOCARD,            *
               EXLST=DCBXLST,SYNAD=SYSINSYN,RECFM=FB,LRECL=80
***********************************************************************
DCBPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,EXLST=DCBEX2,         *
               SYNAD=SYSSYNAD,RECFM=FBA,LRECL=121
***********************************************************************
DCBXLST  DS    0F                       SYSIN DCB
         DC    X'85'                       EXIT
         DC    AL3(DCBEXIT)                LIST
DCBEX2   DS    0F                       SYSPRINT DCB
         DC    X'85'                       EXIT
         DC    AL3(PRINTCK)                LIST
MESSTBLA DC    A(MESSTBL)               ADCON FOR MESSAGE CSECT
IONUMBER DC    CL8'IEH910I'             MESSAGE NUMBER FOR I/O ERROR
SNAPIT   SNAP  DCB=DUMP1,ID=1,PDATA=ALL,MF=L                    YL02912
DUMP1    DCB   DSORG=PS,RECFM=VBA,MACRF=W,BLKSIZE=882,          YL02912*
               LRECL=125,DDNAME=SNAP1                           YL02912
COMPMESS DC    CL24'COMPLETION CODE=16     ' SPECIAL MESSAGE
XTMN     DC    X'1F1C1F1E1F1E1F1F1E1F1E1F'   DAYS IN MONTH
ZONEMASK DC    8XL2'2020'               E ZONE TO C ZONE CONVERT
PAGEEQ   DC    CL4'PAGE'                HEADING
UTNAME   DC    CL8'IEHATLAS'               CONSTANTS
VTOC     DC    CL5'VTOC='               CONTROL CARD
TRACK    DC    CL6'TRACK='                 KEYWORDS
TRANSTB  DC    C'0123456789ABCDEF, '    TRANSLATE TABLE FOR CONVERSION
*                                          OF HEX TO PRINTABLE CHAR
***********************************************************************
*        CCW  STRINGS                                           YL02912
***********************************************************************
         DS    0D
CCW1     CCW   X'31',COUNT-SAVE1,X'40',5  SEARCH EQUAL ID
CCW2     CCW   X'08',CCWAR1-SAVE1,0,0    TIC BACK TO SEARCH
CCW3     CCW   X'0D',0,X'40',0          WRITE KEY DATA
CCW4     CCW   X'31',COUNT-SAVE1,X'40',5  SEARCH EQUAL ID
CCW5     CCW   X'08',CCWAR4-SAVE1,0,0   TIC BACK TO SEARCH
CCW6     CCW   X'0E',0,X'30',1          READ KEY DATA
***********************************************************************
TABLE    DC    193X'10'                 TABLE
         DC    X'0A0B0C0D0E0F'             TO
         DC    41X'10'                        CONVERT
         DC    X'00010203040506070809'           TO
         DC    6X'10'                               HEX
DEBNMEXT EQU   16                       *
DEBDASD  EQU   32                       *
DEBSTRCC EQU   6                        *
DEBENDCC EQU   10                       *
DEBSTRHH EQU   8                        *
DEBENDHH EQU   12                       *
DEBOFLGS EQU   8                        *
NEXTEXT  EQU   16                       *
FW8      DC    F'8'                     *
FW40     DC    F'40'                    *
HW20     DC    H'20'                    *
HW10     DC    H'10'                    *
TESTDC   DC    CL4'TEST'                TEST MODE               YL02912
SNAPDC   DC    CL4'SNAP'                SNAP MODE               YL02912
MAINT    DC    8CL25'IEHATLAS MAINTENANCE AREA'                 YL02912
***********************************************************************
*        IEHWORK DSECT                                          YL02912
***********************************************************************
IEHWORK  DSECT
SAVE1    DS    1F                       PL/1
SAVE10   EQU   SAVE1+0*255              *
SAVE11   EQU   SAVE1+1*255              *
SAVE12   EQU   SAVE1+2*255              *
SAVE13   EQU   SAVE1+3*255              *
SAVE14   EQU   SAVE1+4*255              *
SAVE15   EQU   SAVE1+5*255              *
SAVE110  EQU   SAVE1+1+0*255            *
SAVE111  EQU   SAVE1+1+1*255            *
SAVE112  EQU   SAVE1+1+2*255            *
SAVE113  EQU   SAVE1+1+3*255            *
SAVE114  EQU   SAVE1+1+4*255            *
SAVE115  EQU   SAVE1+1+5*255            *
SAVE1BK  DS    1F                       BACK CHAIN POINTER
SAVE1FD  DS    1F                       FORWARD CHAIN POINTER
         DS    15F                      REGISTER SAVE AREA
TRACKADR DS    1D                       TRACK ADDRESS OF BAD RECORD
TRACKAD2 EQU   TRACKADR+2               *
TRACKAD4 EQU   TRACKADR+4               *
TRACKAD6 EQU   TRACKADR+6               *
COUNT    DS    1D                       COUNT OF BAD RECORD
COUNT2   EQU   COUNT+2                  *
COUNT5   EQU   COUNT+5                  *
COUNT6   EQU   COUNT+6                  *
GETLS    DS    2D                       FOR GETMAIN
GETLS4   EQU   GETLS+4                  *
DCBSYS1  DS    25F                      SYSUT1 DCB
DCBSYSIN DS    25F                      SYSIN DCB
DCBSYP   DS    25F                      SYSPRINT DCB
REENTAR  DS    9F                       WORK AREA
GOTCORE  DS    1F                       SAVE GOTTEN CORE POINTER
***********************************************************************
*        MESSAGE AREA                                           YL02912
***********************************************************************
MESSAGEC DS    CL1                      MESSAGE CONTROL CHARACTER
MESSAGE  DS    CL120                    MESSAGE AREA
MESSAGE1 EQU   MESSAGE+1                *
MESSAGE2 EQU   MESSAGE+2                *
MESSAGE3 EQU   MESSAGE+3                *
MESSAGE4 EQU   MESSAGE+4                IEH9XXI CODE            YL02912
MESSAGE8 EQU   MESSAGE+8                *
MESSAG61 EQU   MESSAGE+61               *
MESSAG96 EQU   MESSAGE+96               *
MESS112  EQU   MESSAGE+112              COMPLETION CODE         YL02912
HEADERC  DS    CL1                      HEADER CONTROL CHARACTER
HEADER   DS    CL30                     HEADER AREA
HEADER1  EQU   HEADER+1                 *
HEADER90 EQU   HEADER+90                *
HEADER92 EQU   HEADER+92                *
HEADER93 EQU   HEADER+93                *
HEADER95 EQU   HEADER+95                *
HEADER96 EQU   HEADER+96                *
HEADR105 EQU   HEADER+105               *
HEADR110 EQU   HEADER+110               *
***********************************************************************
NAMESLOT DS    CL90                     DSNAME AREA FROM SYSUT1
TARGET   DS    1D                       DATE HOLDER
CONVERT  DS    1D                       WORK AREA
CONVERT1 EQU   CONVERT+1                *
CONVERT2 EQU   CONVERT+2                *
CONVERT4 EQU   CONVERT+4                *
DOUBLE   DS    1D                       *
DOUBLE4  EQU   DOUBLE+4                 *
DOUBLE5  EQU   DOUBLE+5                 *
DOUBLE6  EQU   DOUBLE+6                 *
DOUBLE8  EQU   DOUBLE+8                 *
DOUBLE10 EQU   DOUBLE+10                *
SECONDEX DS    0F                       *
         DS    1D                       *
SECONDX1 EQU   SECONDEX+1               *
JFCBADR  DS    CL176                    JFCB FOR SYSUT1
JFCBADR1 EQU   JFCBADR+1                *
JFCBTSDM EQU   JFCBADR+52               *
ECB      DS    1F                       ECB FOR UTILITY
IOB      DS    8F                       IOB FOR UTILITY
IOBECB   EQU   IOB+4                    ADDRESS OF ECB
IOBSTART EQU   IOB+16                   CHANNEL PROGRAM START ADDRESS
IOBSENS1 EQU   IOB+3                    *
IOBCSWST EQU   IOB+12                   *
SEEK     DS    2F                       SEEK ADDRESS FOR REPLACEMENT
*                                          RECORD
SEEK1    EQU   SEEK+1                   *
WTOLIST  DS    19F                      LIST FORM FOR WTO
WTOLIS12 EQU   WTOLIST+12               *
WTOLIS38 EQU   WTOLIST+38               *
WTOLIS39 EQU   WTOLIST+39               *
WTOLIS65 EQU   WTOLIST+65
WTOLIS66 EQU   WTOLIST+66
MSGWTO   DS    14F                      MESSAGE AREA FOR WTO
***********************************************************************
*        CCW WORK AREA                                          YL02912
***********************************************************************
         DS    0D
CCWAR1   DS    1F                       SEARCH EQUAL ID
CCWAR11  EQU   CCWAR1+1
CCWAR1AD DS    1F                       *
CCWAR2   DS    1F                       TIC TO SEARCH
CCWAR21  EQU   CCWAR2+1
CCWAR2AD DS    1F                       *
CCWAR3   DS    1F                       WRITE
CCWAR31  EQU   CCWAR3+1
CCWAR3AD DS    1F                       *
CCWAR3A2 EQU   CCWAR3AD+2
CCWAR4   DS    1F                       SEARCH EQUAL ID
CCWAR41  EQU   CCWAR4+1
CCWAR4AD DS    1F                       *
CCWAR5   DS    1F                       TIC TO SEARCH
CCWAR51  EQU   CCWAR5+1
CCWAR5AD DS    1F                       *
CCWAR6   DS    1F                       READ
CCWAR61  EQU   CCWAR6+1
CCWAR6AD DS    1F                       *
***********************************************************************
CCWAR6A2 EQU   CCWAR6AD+2              LENGTH OF READ         OX02345
RECSIZE  DS    1F                       SIZE OF RECORD BEING REPLACED-
*                                          USED BY GET & FREEMAIN
KEYSIZE  DS    1H                       KEY SIZE AREA
KEYDATA  DS    1H                       KEY + DATA SIZE AREA
CCWCOUNT DS    1H                       TOTAL SIZE-COUNT+KEY+DATA
COMPCODE DS    CL1                      COMPLETION CODE AREA
MESSCODE DS    CL1                      MESSAGE CODE
TRKOVFL  DS    CL1                      TRACK OVERFLOW SWITCH
PAGENO   DS    1F                       PAGE NUMBER HOLD AREA
LINECT   DS    1H                       LINE COUNT HOLD AREA
PARMLIST DS    2F                       LIST FOR PARAMETERS FOR SVC
PARMLIS4 EQU   PARMLIST+4
TESTDS   DS    1F                       CONTROL CARD 'TEST'     YL02912
PNTSNAP  DS    1F                       POINTER TO SNAP LIST    YL02912
SNAPDS   DS    1F                       CONTROL CARD 'SNAP'     YL02912
SYSINDD  DS    1D                       USER-SUPPLIED SYSIN DDNAME
PRINTDD  DS    1D                       USER-SUPPLIED SYSPRINT DDNAME
SYSUT1DD DS    1D                       USER-SUPPLIED SYSUT1 DDNAME
SAVEPAR  DS    1F                       PAGENO PARAMETER ADDRESS
DEVFEAT  DS    2F                       DEVICE CHARACTERISTICS
DEVFEAT1 EQU   DEVFEAT+1
TEMP     DS    1F                       TEMPORARY STORAGE
TEMP1    EQU   TEMP+1
RETPARM  DS    1F                       RETURN PARAMETER FORM SVC
ID       DS    5C                       SEARCH ID FIELD IF TRACK OVER-
ID4      EQU   ID+4
*                                          FLOW IS USED
SPLIT    DS    1C                       SPLIT CYLINDER SWITCH
         DCBD  DSORG=(PS)
         EJECT                                                 @Y30LSFY
UCB      DSECT                                                 @Y30LSFY
         IEFUCBOB                                              @Y30LSFY
         END   IEHATLAS
