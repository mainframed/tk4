         TITLE 'HMASMCOM - COMPRESS INTERFACE PROCEDURE'
HMASMCOM CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMCOM  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  LA    @10,4095(,@12)                                      0001
         LA    @09,4095(,@10)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@10                                    0001
         USING @PSTART+8190,@09                                    0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         EJECT
*                                                                  0235
*   /*****************************************************************/
*   /*                                                               */
*   /* PROGRAM INITIALIZATION                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0235
*   FLAGS=RESET;                    /* INITIALIZE COMPRESS FLAGS   0235
*                                                             @30XX9J*/
         MVI   FLAGS,X'00'                                         0235
*   COMRTNCD=ZERO;                  /* INITIALIZE THE RC AREA      0236
*                                                            @YA07506*/
         SLR   COMRTNCD,COMRTNCD                                   0236
*   HMASMMGP=''B;                   /* CLEAR FLAGS           @ZA17732*/
         XC    HMASMMGP(40),HMASMMGP                               0237
*   MGPPRINT=ON;                    /* ALL MESSAGES TO PRINT @Z40SP00*/
*   MGPHLDS=ON;                     /* AND LOG               @Z40SP00*/
         OI    MGPPRINT,B'10010000'                                0239
*   IOPPTR=CCAIOPTR;                /* ADDRESSIBILITY FOR IOP        */
         L     @08,CCAIOPTR(,CCAPTR)                               0240
         ST    @08,IOPPTR                                          0240
*   INPUTDD='';                     /* INIT INDD AND OUTDD   @ZA17732*/
         MVI   INPUTDD,C' '                                        0241
         MVC   INPUTDD+1(7),INPUTDD                                0241
*   OUTPUTDD='';                    /* AREA IN CASE REENTRY  @ZA17732*/
         MVI   OUTPUTDD,C' '                                       0242
         MVC   OUTPUTDD+1(7),OUTPUTDD                              0242
*   RFY                                                            0243
*    (ICTLMOD) BASED(CCAICLMD);     /* ADDR OF ICT LMOD TABLE@Z67SP00*/
*   RFY                                                            0244
*    (ICTIXLF) BASED(ICTLCHN(I));   /* CHAIN POINTER TO INDEX BACK TO
*                                      MOD SECTIONS          @Z67SP00*/
*   RFY                                                            0245
*    (ICTMOD) BASED(ICTIXL(J));     /* CHN PTR BACK TO ICT MOD     0245
*                                      ENTRIES               @Z67SP00*/
*   RFY                                                            0246
*    (ICTPTF) BASED(ICTPPTR(1));    /* POINTER TO PTF ENTRY  @Z67SP00*/
*   RFY                                                            0247
*     RVAPARM BASED(CCARVAD);       /* FOR STAE              @Z67SP00*/
*                                                                  0247
*   /*****************************************************************/
*   /*                                                               */
*   /* COM PROCESSING START                                  @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0248
*   MACPASS=OFF;                    /* RESET MAC/SRC FLAG    @Z67SP00*/
         NI    MACPASS,B'11111011'                                 0248
*   MGPHLDS=ON;                     /* ALL MSGS TO LOG       @Z30XX9J*/
*   MGPPRINT=ON;                    /* AND PRINTER           @Z30XX9J*/
         OI    MGPHLDS,B'10010000'                                 0250
*   IOPDSID=IOPMACL;                /* INDICATE CLOSE FOR SMPMAC   0251
*                                                            @SA75283*/
         MVI   IOPDSID(@08),X'05'                                  0251
*   CALL CLOSE;                     /* CALL COMMON CLOSE RTN @SA75283*/
         BAL   @14,CLOSE                                           0252
*   IOPDSID=IOPSRCL;                /* CLOSE FOR SOURCE LIB  @SA77276*/
         L     @08,IOPPTR                                          0253
         MVI   IOPDSID(@08),X'16'                                  0253
*   CALL CLOSE;                     /* CALL CLOSE RTN        @SA77276*/
         BAL   @14,CLOSE                                           0254
*   IOPDSID=IOPANYDD;               /* ANY OPEN TGT LIBS     @SA77276*/
         L     @08,IOPPTR                                          0255
         MVI   IOPDSID(@08),X'18'                                  0255
*   CALL CLOSE;                     /* CLOSE THEM            @SA77276*/
         BAL   @14,CLOSE                                           0256
*   IF CCAAPPLY=ON                  /*                       @Z67SP00*/
*       ×CCAACCPT=ON                /*                       @Z67SP00*/
*       ×CCARES=ON                  /*                       @Z67SP00*/
*     THEN                          /*                       @Z67SP00*/
         TM    CCAAPPLY(CCAPTR),B'01101000'                        0257
         BZ    @RF00257                                            0257
*     DO;                           /*                       @Z67SP00*/
*       CALL LMCHK;                 /* START LMOD PROCESSING @Z67SP00*/
*                                                                  0259
         BAL   @14,LMCHK                                           0259
*       /*************************************************************/
*       /*                                                           */
*       /* CALL ROUTINE FOR COMPRESS PROCESSING OF MAC/SRC LIBS      */
*       /*                                                   @Z67SP00*/
*       /* AND DELETION OF ELIGIBLE SRC MODULES                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0260
*       IF COPYERR=OFF              /* IF COPY OK            @SA77276*/
*           &(CCAAPPLY=ON           /* AND APPLY             @SA77276*/
*           ×CCARES=ON              /* OR RESTORE            @SA77276*/
*           ×CCAACCPT=ON)           /* OR ACCEPT             @SA77276*/
*         THEN                      /* THEN DEL SOURCE       @Z67SP00*/
         TM    COPYERR,B'10000000'                                 0260
         BNZ   @RF00260                                            0260
         TM    CCAAPPLY(CCAPTR),B'01101000'                        0260
         BZ    @RF00260                                            0260
*         CALL MACSRC;              /* CALL THE ROUTINE      @Z67SP00*/
         BAL   @14,MACSRC                                          0261
*     END;                          /*                       @Z67SP00*/
*                                                                  0262
@RF00260 DS    0H                                                  0263
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK REST OF COMPRESS LIST AND BUILD MORE STMTS      @Z30XX9J*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0263
*   IF COPYERR=OFF                  /* NO ERROR ABOVE        @Z30XX9J*/
*     THEN                          /* CONTINUE              @Z30XX9J*/
@RF00257 TM    COPYERR,B'10000000'                                 0263
         BNZ   @RF00263                                            0263
*     CALL FNSHLST;                 /* LOOK AT REST OF LIST  @Z30XX9J*/
*                                                                  0264
         BAL   @14,FNSHLST                                         0264
*   /*****************************************************************/
*   /*                                                               */
*   /* IF COPIES WERE SUCCESSFUL THEN RE-BLDL FOR PROGRAMS NEEDED FOR*/
*   /* SMP                                                   @SA77276*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0265
*   IF COPYERR=OFF                  /* IF COPY OK            @SA77276*/
*     THEN                          /* THEN DO BLDL FOR SMP  @SA77276*/
@RF00263 TM    COPYERR,B'10000000'                                 0265
         BNZ   @RF00265                                            0265
*     CALL HMASMBDL;                /* SMP MODULE                    */
         L     @15,@CV01635                                        0266
         BALR  @14,@15                                             0266
*   RETURN CODE(COMRTNCD);          /* RETURN TO CALLER WITH HIGHEST
*                                      RC                    @YA07506*/
@RF00265 LR    @15,COMRTNCD                                        0267
         L     @13,4(,@13)                                         0267
         L     @14,12(,@13)                                        0267
         LM    @00,@12,20(@13)                                     0267
         BR    @14                                                 0267
         EJECT
*                                                                  0268
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROCEDURE ISSUES A WRITE REQUEST TO THE SCR1 SCRATCH DATA*/
*   /* SET.                                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0268
*IORTN:                                                            0268
*   PROCEDURE OPTIONS(SAVEAREA);                                   0268
@EL00001 L     @13,4(,@13)                                         0268
@EF00001 DS    0H                                                  0268
@ER00001 LM    @14,@12,12(@13)                                     0268
         BR    @14                                                 0268
IORTN    STM   @14,@04,12(@13)                                     0268
         STM   @06,@12,44(@13)                                     0268
         ST    @13,@SA00002+4                                      0268
         LA    @14,@SA00002                                        0268
         ST    @14,8(,@13)                                         0268
         LR    @13,@14                                             0268
*   IOPDSID=IOPSCR1;                /* SET DATA SET ID               */
         L     @08,IOPPTR                                          0269
         MVI   IOPDSID(@08),X'03'                                  0269
*   IOPFUNCT=IOPWRITE;              /* SET I/O FUNCTION FOR WRITE    */
         MVI   IOPFUNCT(@08),X'51'                                 0270
*   CALL HMASMIO(HMASMIOP);         /* CALL I/O ROUTINE              */
         ST    @08,@AL00001                                        0271
         L     @15,@CV01634                                        0271
         LA    @01,@AL00001                                        0271
         BALR  @14,@15                                             0271
*   IF IOPRETRN^=IOPGOOD            /* I/O ERROR             @Z67SP00*/
*     THEN                                                         0272
         L     @08,IOPPTR                                          0272
         CLI   IOPRETRN(@08),0                                     0272
         BE    @RF00272                                            0272
*     DO;                                                          0273
*       COMRTNCD=MAX(IOPRETRN,COMRTNCD);/* SET MAX RC        @Z67SP00*/
         SLR   @04,@04                                             0274
         IC    @04,IOPRETRN(,@08)                                  0274
         CR    COMRTNCD,@04                                        0274
         BNL   *+6
         LR    COMRTNCD,@04                                        0274
*       COPYERR=ON;                 /* INDICATE ERROR                */
         OI    COPYERR,B'10000000'                                 0275
*     END;                                                         0276
*   END IORTN;                                                     0277
*                                                                  0277
@EL00002 L     @13,4(,@13)                                         0277
@EF00002 DS    0H                                                  0277
@ER00002 LM    @14,@04,12(@13)                                     0277
         LM    @06,@12,44(@13)                                     0277
         BR    @14                                                 0277
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROCEDURE SETS UP THE COPY OUTDD=,INDD= STATEMENT.       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0278
*WTRCOPY:                                                          0278
*   PROC OPTIONS(SAVEAREA);                                        0278
WTRCOPY  STM   @14,@04,12(@13)                                     0278
         STM   @06,@12,44(@13)                                     0278
         ST    @13,@SA00003+4                                      0278
         LA    @14,@SA00003                                        0278
         ST    @14,8(,@13)                                         0278
         LR    @13,@14                                             0278
*   BUFFER=BLANK;                   /* CLEAR BUFFER AREA             */
         L     @08,IOPPTR                                          0279
         L     @08,IOPBUFAD(,@08)                                  0279
         MVI   BUFFER+1(@08),C' '                                  0279
         MVC   BUFFER+2(78,@08),BUFFER+1(@08)                      0279
         MVI   BUFFER(@08),C' '                                    0279
*   BUFFER(L2:L12)=COPY;            /* MOVE COPY AND OUTDD VERBS     */
         MVC   BUFFER+1(11,@08),COPY                               0280
*   LX=L8;                          /* SET LENGTH FIELD              */
         LA    LX,8                                                0281
*CHECK3:                                                           0282
*   IF OUTPUTDD(LX)=BLANK           /* LAST POSITION BLANK           */
*     THEN                                                         0282
CHECK3   LA    @08,OUTPUTDD-1(LX)                                  0282
         CLI   0(@08),C' '                                         0282
         BNE   @RF00282                                            0282
*     DO;                                                          0283
*       LX=LX-L1;                   /* CK NEXT POSITION              */
         BCTR  LX,0                                                0284
*       GOTO CHECK3;                /* BRANCH BACK TO TEST           */
         B     CHECK3                                              0285
*     END;                                                         0286
*   LY=L12+LX;                      /* CALC DISP IN BUFFER           */
@RF00282 LA    LY,12                                               0287
         ALR   LY,LX                                               0287
*   BUFFER(L13:LY)=OUTPUTDD;        /* MOVE OUTPUT DD NAME           */
         L     @08,IOPPTR                                          0288
         L     @08,IOPBUFAD(,@08)                                  0288
         LR    @02,LY                                              0288
         SH    @02,@CH00439                                        0288
         EX    @02,@SM01913                                        0288
*   LZ=LY+L6;                       /* CALC DISPLACEMENT             */
         LA    LZ,6                                                0289
         ALR   LZ,LY                                               0289
*   LY=LY+L1;                       /* CALC DISPLACEMENT             */
         LA    @02,1                                               0290
         ALR   LY,@02                                              0290
*   BUFFER(LY:LZ)=INPUT;            /* MOVE INDD VERB                */
         LR    @01,@08                                             0291
         ALR   @01,LY                                              0291
         BCTR  @01,0                                               0291
         LR    @15,LZ                                              0291
         SLR   @15,LY                                              0291
         EX    @15,@SM01915                                        0291
*   LY=LZ+L8;                       /* CALC DISPLACEMENT             */
         LA    LY,8                                                0292
         ALR   LY,LZ                                               0292
*   LZ=LZ+L1;                       /* CALC DISPLACEMENT             */
         ALR   LZ,@02                                              0293
*   BUFFER(LZ:LY)=INPUTDD;          /* MOVE INPUT DD NAME            */
         ALR   @08,LZ                                              0294
         BCTR  @08,0                                               0294
         LR    @02,LY                                              0294
         SLR   @02,LZ                                              0294
         EX    @02,@SM01917                                        0294
*   CALL IORTN;                     /* CALL IOP ROUTINE              */
         BAL   @14,IORTN                                           0295
*   END WTRCOPY;                                                   0296
@EL00003 L     @13,4(,@13)                                         0296
@EF00003 DS    0H                                                  0296
@ER00003 LM    @14,@04,12(@13)                                     0296
         LM    @06,@12,44(@13)                                     0296
         BR    @14                                                 0296
         EJECT
*                                                                  0297
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROCEDURE ISSUES A CLOSE REQUEST FOR ALL DATA SETS NEEDED*/
*   /* TO BE CLOSED.                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0297
*CLOSE:                                                            0297
*   PROCEDURE;                      /*                       @SA77276*/
CLOSE    STM   @14,@04,@SA00004                                    0297
         STM   @06,@12,@SA00004+28                                 0297
*   IOPFUNCT=IOPCLOSE;              /* SET TO DO CLOSE               */
         L     @08,IOPPTR                                          0298
         MVI   IOPFUNCT(@08),X'50'                                 0298
*   CALL HMASMIO(HMASMIOP);         /* CALL I/O ROUTINE              */
         ST    @08,@AL00001                                        0299
         L     @15,@CV01634                                        0299
         LA    @01,@AL00001                                        0299
         BALR  @14,@15                                             0299
*   IF IOPRETRN^=IOPGOOD            /* I/O SUCCESSFUL        @YA07506*/
*     THEN                                                         0300
         L     @08,IOPPTR                                          0300
         CLI   IOPRETRN(@08),0                                     0300
         BE    @RF00300                                            0300
*     DO;                                                          0301
*       COMRTNCD=MAX(COMRTNCD,IOPRETRN);/* CHANGE COM RTN CODE IF IT
*                                      IS LESS THAN RTN FROM IO    0302
*                                                            @YA07506*/
         SLR   @04,@04                                             0302
         IC    @04,IOPRETRN(,@08)                                  0302
         CR    COMRTNCD,@04                                        0302
         BNL   *+6
         LR    COMRTNCD,@04                                        0302
*       COPYERR=ON;                 /* INDICATE ERROR                */
         OI    COPYERR,B'10000000'                                 0303
*     END;                          /* END CLOSE FAILED      @SA77276*/
*   END CLOSE;                                                     0305
@EL00004 DS    0H                                                  0305
@EF00004 DS    0H                                                  0305
@ER00004 LM    @14,@04,@SA00004                                    0305
         LM    @06,@12,@SA00004+28                                 0305
         BR    @14                                                 0305
         EJECT
*                                                                  0306
*   /*****************************************************************/
*   /*                                                               */
*   /* THE INDICATED TARGET LIB IS CHECKED AGINST THE LIST   @Z30XX9J*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0306
*LISTCHK:                           /*                       @Z30XX9J*/
*   PROC;                           /*                       @Z30XX9J*/
LISTCHK  STM   @14,@12,12(@13)                                     0306
*   OUTPUTDD=INPUTDD;               /* FOR COMPRESS STATEMENT      0307
*                                                            @Z30XX9J*/
         MVC   OUTPUTDD(8),INPUTDD                                 0307
*   IF LISTELM(1)^=ALL              /* A COMPRESS LIST OTHER THAN ALL
*                                                            @Z30XX9J*/
*     THEN                          /* HAS BEEN BUILT        @Z30XX9J*/
         L     @08,CCACLST(,CCAPTR)                                0308
         CLC   LISTELM(8,@08),ALL                                  0308
         BE    @RF00308                                            0308
*     DO L=1 BY 1 WHILE(LISTELM(L,1:4)^=ICTENDNT/*           @Z30XX9J*/
*           &COPYERR=OFF);          /* CHECKING FOR TGTLIB MATCH   0309
*                                                            @Z30XX9J*/
         LA    L,1                                                 0309
         B     @DE00309                                            0309
@DL00309 DS    0H                                                  0310
*       IF INPUTDD=LISTELM(L)       /* TGTLIB IS ON LIST     @Z30XX9J*/
*         THEN                      /* PROCESS COMPRESS STMT @Z30XX9J*/
         LR    @08,L                                               0310
         MH    @08,@CH00034                                        0310
         L     @02,CCACLST(,CCAPTR)                                0310
         ST    @08,@TF00001                                        0310
         ALR   @08,@02                                             0310
         AL    @08,@CF01919                                        0310
         CLC   INPUTDD(8),LISTELM(@08)                             0310
         BNE   @RF00310                                            0310
*         DO;                       /*                       @Z30XX9J*/
*           LISTDEL(L)=ON;          /* INDICATE IN LIST      @Z30XX9J*/
         AL    @02,@TF00001                                        0312
         BCTR  @02,0                                               0312
         OI    LISTDEL-8(@02),B'10000000'                          0312
*           TDELSW=ON;              /* INDICATE DELETES CAN BE DONE
*                                                            @Z30XX9J*/
         OI    TDELSW,B'00010000'                                  0313
*         END;                      /* END MATCH FOUND DO    @Z30XX9J*/
*     END;                          /* END OF LOOP ON THE COMPRESS 0315
*                                      LIST                  @Z30XX9J*/
@RF00310 AH    L,@CH00086                                          0315
@DE00309 LR    @08,L                                               0315
         MH    @08,@CH00034                                        0315
         L     @02,CCACLST(,CCAPTR)                                0315
         ALR   @02,@08                                             0315
         AL    @02,@CF01919                                        0315
         CLC   LISTELM(4,@02),ICTENDNT                             0315
         BE    @DC00309                                            0315
         TM    COPYERR,B'10000000'                                 0315
         BZ    @DL00309                                            0315
@DC00309 DS    0H                                                  0316
*   ELSE                            /* ALL MUST HAVE BEEN SPECIFIED
*                                                            @Z30XX9J*/
*     DO;                           /*                       @Z30XX9J*/
         B     @RC00308                                            0316
@RF00308 DS    0H                                                  0317
*       TDELSW=ON;                  /* INDICAT DELETES DONE THIS PASS
*                                                            @Z30XX9J*/
         OI    TDELSW,B'00010000'                                  0317
*     END;                          /*                       @Z30XX9J*/
*   END LISTCHK;                    /*                       @Z30XX9J*/
@EL00005 DS    0H                                                  0319
@EF00005 DS    0H                                                  0319
@ER00005 LM    @14,@12,12(@13)                                     0319
         BR    @14                                                 0319
         EJECT
*                                                                  0320
*   /*****************************************************************/
*   /*                                                               */
*   /* THE REMAINING LMODS IN THE ICT ARE CHECKED FOR A MATCH ON THE */
*   /* TGTLIB OF THE PRIMARY LMOD BEING CONSIDERED. DELETES ARE DONE */
*   /* IF THE LMOD IS ELIGIBLE                               @Z30XX9J*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0320
*OTHRLMCK:                          /*                       @Z30XX9J*/
*   PROC;                           /*                       @Z30XX9J*/
OTHRLMCK STM   @14,@04,@SA00006                                    0320
         STM   @06,@12,@SA00006+28                                 0320
*   RFY                                                            0321
*     ICTLMOD BASED(CCAICLMD);      /*                       @Z30XX9J*/
*   IF ICTTIND2(M)=OFF              /* ONLYONE TGTLIB        @Z30XX9J*/
*     THEN                          /*                       @Z30XX9J*/
         L     @08,M                                               0322
         MH    @08,@CH01006                                        0322
         L     @04,CCAICLMD(,CCAPTR)                               0322
         ST    @08,@TF00001                                        0322
         ALR   @08,@04                                             0322
         AL    @08,@CF01921                                        0322
         TM    ICTTIND2-14(@08),B'01000000'                        0322
         BNZ   @RF00322                                            0322
*     DO;                           /* CHECK TGT AGINST CURRENT TGT
*                                                            @Z30XX9J*/
*       IF ICTTG1(M)=INPUTDD        /* IF THE TGTLIB THE CURRENT ONE
*                                                            @Z30XX9J*/
*         THEN                      /*                       @Z30XX9J*/
         LR    @08,@04                                             0324
         AL    @08,@TF00001                                        0324
         AL    @08,@CF01922                                        0324
         CLC   ICTTG1-15(8,@08),INPUTDD                            0324
         BNE   @RF00324                                            0324
*         ICTLDEL(M)=ON;            /* INDICATE LMOD HAS BEEN      0325
*                                      PROCESSED             @Z30XX9J*/
         AL    @04,@TF00001                                        0325
         AL    @04,@CF01923                                        0325
         OI    ICTLDEL-13(@04),B'00001000'                         0325
*     END;                          /* END ONE TGT PROCESS   @Z30XX9J*/
*   ELSE                            /* MUST BE LMOD WITH TWO TGTLIBS
*                                                            @Z30XX9J*/
*     IF ICTTG1(M)=INPUTDD×         /* IF FIRST A MATCH      @Z30XX9J*/
*         ICTTG2(M)=INPUTDD         /* OR SECOND A MATCH     @Z30XX9J*/
*       THEN                        /* PROCESS A TWO TGLTLIB LMOD  0327
*                                                            @Z30XX9J*/
         B     @RC00322                                            0327
@RF00322 L     @08,M                                               0327
         MH    @08,@CH01006                                        0327
         L     @04,CCAICLMD(,CCAPTR)                               0327
         ST    @08,@TF00001                                        0327
         ALR   @08,@04                                             0327
         AL    @08,@CF01922                                        0327
         CLC   ICTTG1-15(8,@08),INPUTDD                            0327
         BE    @RT00327                                            0327
         AL    @04,@TF00001                                        0327
         AL    @04,@CF01925                                        0327
         CLC   ICTTG2-23(8,@04),INPUTDD                            0327
         BNE   @RF00327                                            0327
@RT00327 DS    0H                                                  0328
*       DO;                         /*                       @Z30XX9J*/
*         IF ICTTIND1(M)=OFF        /* SECOND PASS ON THIS LMOD    0329
*                                                            @Z30XX9J*/
*           THEN                    /* TGTLIB2 IS NEXT TO PROCESS  0329
*                                                            @Z30XX9J*/
         L     @08,M                                               0329
         MH    @08,@CH01006                                        0329
         L     @04,CCAICLMD(,CCAPTR)                               0329
         ST    @08,@TF00001                                        0329
         ALR   @08,@04                                             0329
         AL    @08,@CF01921                                        0329
         TM    ICTTIND1-14(@08),B'10000000'                        0329
         BNZ   @RF00329                                            0329
*           DO;                     /*                       @Z30XX9J*/
*             ICTLDEL(M)=ON;        /* INDICATE LMODE COMPLETED    0331
*                                                            @Z30XX9J*/
         LR    @08,@04                                             0331
         AL    @08,@TF00001                                        0331
         AL    @08,@CF01923                                        0331
         OI    ICTLDEL-13(@08),B'00001000'                         0331
*             ICTTIND1(M)=ON;       /* RESET THE INDICATOR   @Z30XX9J*/
         AL    @04,@TF00001                                        0332
         AL    @04,@CF01921                                        0332
         OI    ICTTIND1-14(@04),B'10000000'                        0332
*           END;                    /*                       @Z30XX9J*/
*         ELSE                      /* TWO TGTLIBS FIRST PASS      0334
*                                                            @Z30XX9J*/
*           DO;                     /*                       @Z30XX9J*/
         B     @RC00329                                            0334
@RF00329 DS    0H                                                  0335
*             ICTTIND1(M)=OFF;      /* INDICATE FIRST PASS   @Z30XX9J*/
         L     @08,M                                               0335
         MH    @08,@CH01006                                        0335
         L     @04,CCAICLMD(,CCAPTR)                               0335
         ST    @08,@TF00001                                        0335
         ALR   @08,@04                                             0335
         AL    @08,@CF01921                                        0335
         NI    ICTTIND1-14(@08),B'01111111'                        0335
*             IF ICTTG1(M)^=INPUTDD /* FIRST NOT CURRENT     @Z30XX9J*/
*               THEN                /* MUST BE THE OTHER     @Z30XX9J*/
         LR    @08,@04                                             0336
         AL    @08,@TF00001                                        0336
         AL    @08,@CF01922                                        0336
         CLC   ICTTG1-15(8,@08),INPUTDD                            0336
         BE    @RF00336                                            0336
*               DO;                 /* SWITCH SO FIRST IS THE CURRENT
*                                                            @Z30XX9J*/
*                 ICTTG2(M)=ICTTG1(M);/* SECOND IS OTHER     @Z30XX9J*/
         LR    @08,@04                                             0338
         AL    @08,@TF00001                                        0338
         AL    @08,@CF01925                                        0338
         LR    @01,@04                                             0338
         AL    @01,@TF00001                                        0338
         AL    @01,@CF01922                                        0338
         MVC   ICTTG2-23(8,@08),ICTTG1-15(@01)                     0338
*                 ICTTG1(M)=INPUTDD;/* FIRST NOW CURRENT     @Z30XX9J*/
         AL    @04,@TF00001                                        0339
         AL    @04,@CF01922                                        0339
         MVC   ICTTG1-15(8,@04),INPUTDD                            0339
*               END;                /*                       @Z30XX9J*/
*           END;                    /* END 2 TGTLIB FIRST PASS DO  0341
*                                                            @Z30XX9J*/
@RF00336 DS    0H                                                  0342
*       END;                        /* END 2 TGTLIBS WITH A MATCH DO
*                                                            @Z30XX9J*/
@RC00329 DS    0H                                                  0343
*   IF(ICTTG1(M)=INPUTDD×ICTTG2(M)=INPUTDD)/* TGT MATCH      @Z30XX9J*/
*       &TDELSW=ON                  /* AND DELETES BEING DONE      0343
*                                                            @Z30XX9J*/
*     THEN                          /*                       @Z30XX9J*/
*                                                                  0343
@RF00327 DS    0H                                                  0343
@RC00322 L     @08,M                                               0343
         MH    @08,@CH01006                                        0343
         L     @04,CCAICLMD(,CCAPTR)                               0343
         ST    @08,@TF00001                                        0343
         ALR   @08,@04                                             0343
         AL    @08,@CF01922                                        0343
         CLC   ICTTG1-15(8,@08),INPUTDD                            0343
         BE    @GL00004                                            0343
         AL    @04,@TF00001                                        0343
         AL    @04,@CF01925                                        0343
         CLC   ICTTG2-23(8,@04),INPUTDD                            0343
         BNE   @RF00343                                            0343
@GL00004 TM    TDELSW,B'00010000'                                  0343
         BNO   @RF00343                                            0343
*     /***************************************************************/
*     /*                                                             */
*     /* EVRYTHING READY TO CHECK LMOD FOR DELETION          @Z30XX9J*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0344
*     CALL DELETCHK(M);             /* CHECK LMOD, MAYBE DELETE    0344
*                                                            @Z30XX9J*/
         LA    @01,@AL00344                                        0344
         BAL   @14,DELETCHK                                        0344
*   END OTHRLMCK;                   /*                       @Z30XX9J*/
@EL00006 DS    0H                                                  0345
@EF00006 DS    0H                                                  0345
@ER00006 LM    @14,@04,@SA00006                                    0345
         LM    @06,@12,@SA00006+28                                 0345
         BR    @14                                                 0345
         EJECT
*                                                                  0346
*   /*****************************************************************/
*   /*                                                               */
*   /* LMODS ARE CHECKED FOR DELETION ELIGIBILITY, ALAIS     @Z30XX9J*/
*   /* EXISTANCE IS CHECKED, A CALL TO 'DELETIT' DOES THE    @Z30XX9J*/
*   /* ACTUAL STOW DELETES                                   @Z30XX9J*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0346
*DELETCHK:                          /*                       @Z30XX9J*/
*   PROC(D);                        /* D IS THE INDIX FOR THE ICT, 0346
*                                                            @Z30XX9J*/
DELETCHK STM   @14,@04,@SA00007                                    0346
         STM   @06,@12,@SA00007+28                                 0346
         MVC   @PC00007(4),0(@01)                                  0346
*   DECLARE                         /*                       @SA77276*/
*     D PTR(31);                    /* INDEX FOR LMODS       @Z30XX9J*/
*   DECLARE                         /*                       @SA77276*/
*     DELI FIXED(31);               /* LOOP COUNTER          @SA77276*/
*   DECLARE                         /*                       @SA77276*/
*     1 DELSW1 BIT(8),              /*                       @SA77276*/
*      2 NODELSW BIT(1),            /* DONT DO DEL           @SA77276*/
*      2 * BIT(7);                  /*                       @SA77276*/
*   RFY                                                            0350
*     ICTLMOD BASED(CCAICLMD);      /*                       @Z30XX9J*/
*   RFY                                                            0351
*     ICTIXLF BASED(ICTLCHN(D));    /*                       @Z30XX9J*/
*   RFY                                                            0352
*     ICTMOD BASED(ICTIXL(1));      /*                       @Z30XX9J*/
*   RFY                                                            0353
*     ICTPTF BASED(ICTPPTR(1));     /* PTR TO PTF ENTRY      @Z67SP00*/
*   IF ICTLCPL(D)=OFF&ICTLPROC(D)=OFF/* NOT CPL,PROC         @Z30XX9J*/
*       &ICTLNOGO(D)=OFF            /* NOT NOGO              @Z30XX9J*/
*       &ICTCOPY(D)=ON              /* AND COPIED OR ANY FOR ACCEPT
*                                                            @Z30XX9J*/
*       &INPUTDD(1:7)^=SYSPUNCH     /* AND NOT SYSPUNCH      @Z30XX9J*/
*     THEN                          /* THEN LMOD ELIGIBLE    @Z30XX9J*/
         L     @08,@PC00007                                        0354
         L     @08,D(,@08)                                         0354
         MH    @08,@CH01006                                        0354
         L     @04,CCAICLMD(,CCAPTR)                               0354
         ST    @08,@TF00001                                        0354
         ALR   @08,@04                                             0354
         AL    @08,@CF01927                                        0354
         TM    ICTLCPL-8(@08),B'11100000'                          0354
         BNZ   @RF00354                                            0354
         AL    @04,@TF00001                                        0354
         AL    @04,@CF01923                                        0354
         TM    ICTCOPY-13(@04),B'10000000'                         0354
         BNO   @RF00354                                            0354
         CLC   INPUTDD(7),SYSPUNCH                                 0354
         BE    @RF00354                                            0354
*     DO;                           /* FOR DELETE            @Z30XX9J*/
*       NODELSW=OFF;                /* INIT SW TO ALLOW FOR DELETES
*                                                            @SA77276*/
         NI    NODELSW,B'01111111'                                 0356
*       DO DELI=1 TO DIM(BLDLELMT); /* LOOP THRU PGMS NAMES USED BY
*                                      SMP                   @SA77276*/
         LA    DELI,1                                              0357
@DL00357 DS    0H                                                  0358
*         IF ICTLNAME(D)=BLDLNAME(DELI)/* IF SAME AS LMOD    @SA77276*/
*           THEN                    /* THEN DONT DELETE IT   @SA77276*/
         L     @08,@PC00007                                        0358
         L     @08,D(,@08)                                         0358
         MH    @08,@CH01006                                        0358
         L     @04,CCAICLMD(,CCAPTR)                               0358
         LR    @02,DELI                                            0358
         MH    @02,@CH00325                                        0358
         L     @01,CCADBLDL(,CCAPTR)                               0358
         ALR   @04,@08                                             0358
         AL    @04,@CF01928                                        0358
         ALR   @01,@02                                             0358
         AL    @01,@CF01929                                        0358
         CLC   ICTLNAME(8,@04),BLDLNAME-4(@01)                     0358
         BNE   @RF00358                                            0358
*           NODELSW=ON;             /* SET SW                @SA77276*/
         OI    NODELSW,B'10000000'                                 0359
*       END;                        /*                       @SA77276*/
@RF00358 AH    DELI,@CH00086                                       0360
         CH    DELI,@CH00199                                       0360
         BNH   @DL00357                                            0360
*       IF ICTMNOGO(1)=ON×          /* PROCESS ERROR         @Z67SP00*/
*           ICTMCPL(1)=ON×          /* MODULE COMPLETE       @Z67SP00*/
*           ICTMXPND(1)=ON×         /* MODULE EXPANDED       @Z67SP00*/
*           ICTMZAP(1)=ON THEN      /* MODULE ZAP            @Z67SP00*/
         L     @08,@PC00007                                        0361
         L     @08,D(,@08)                                         0361
         MH    @08,@CH01006                                        0361
         L     @04,CCAICLMD(,CCAPTR)                               0361
         AL    @04,@CF01930                                        0361
         L     @08,ICTLCHN-34(@08,@04)                             0361
         L     @08,ICTIXL(,@08)                                    0361
         TM    ICTMNOGO(@08),B'01100000'                           0361
         BNZ   @RT00361                                            0361
         TM    ICTMXPND(@08),B'00110000'                           0361
         BZ    @RF00361                                            0361
@RT00361 DS    0H                                                  0362
*         NODELSW=ON;               /* DONT DELETE           @Z67SP00*/
*                                                                  0362
         OI    NODELSW,B'10000000'                                 0362
*       /*************************************************************/
*       /*                                                           */
*       /* IF OK TO DELETE LMOD THEN DO IT                   @SA77276*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0363
*       IF NODELSW=OFF              /* IF OK TO DELETE       @SA77276*/
*         THEN                      /*                       @SA77276*/
@RF00361 TM    NODELSW,B'10000000'                                 0363
         BNZ   @RF00363                                            0363
*         DO;                       /*                       @SA77276*/
*                                                                  0364
*           /*********************************************************/
*           /*                                                       */
*           /* SYSMOD ENTRY CREATION FOR A(CDS)              @Z67SP00*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0365
*           CALL HMASMSEC(ICTPTF(1),ADDR(HMASMIOP));/*       @Z67SP00*/
         L     @08,@PC00007                                        0365
         L     @08,D(,@08)                                         0365
         MH    @08,@CH01006                                        0365
         L     @04,CCAICLMD(,CCAPTR)                               0365
         AL    @04,@CF01930                                        0365
         L     @08,ICTLCHN-34(@08,@04)                             0365
         L     @08,ICTIXL(,@08)                                    0365
         L     @08,ICTPPTR(,@08)                                   0365
         ST    @08,@AL00001                                        0365
         LA    @08,IOPPTR                                          0365
         ST    @08,@AL00001+4                                      0365
         L     @15,@CV01636                                        0365
         LA    @01,@AL00001                                        0365
         BALR  @14,@15                                             0365
*           ICTPPROC(1)=ON;         /* PTF IN PROCESS        @Z67SP00*/
*                                                                  0366
         L     @08,@PC00007                                        0366
         L     @08,D(,@08)                                         0366
         MH    @08,@CH01006                                        0366
         L     @04,CCAICLMD(,CCAPTR)                               0366
         LA    @01,0(@08,@04)                                      0366
         AL    @01,@CF01930                                        0366
         L     @01,ICTLCHN-34(,@01)                                0366
         L     @01,ICTIXL(,@01)                                    0366
         L     @01,ICTPPTR(,@01)                                   0366
         OI    ICTPPROC(@01),B'10000000'                           0366
*           /*********************************************************/
*           /*                                                       */
*           /* CALL DELETE ROUTINE                           @Z30XX9J*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0367
*           CALL DELETIT(ICTLMOD(D));/* PASS NAME TO DEL     @Z30XX9J*/
*                                                                  0367
         AL    @04,@CF01928                                        0367
         LA    @08,ICTLMOD(@08,@04)                                0367
         ST    @08,@AL00001                                        0367
         LA    @01,@AL00001                                        0367
         BAL   @14,DELETIT                                         0367
*           /*********************************************************/
*           /*                                                       */
*           /* IF ALIAS ARE PRESENT CALL PROC TO DELETE ALIAS NAMES  */
*           /*                                               @Z30XX9J*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0368
*           IF ICTMALIS(1)=ON       /* ALIAS INVOLVED        @Z30XX9J*/
*               &COPYERR=OFF        /* AND NO ERRORS SO FAR  @SA77276*/
*               &TDELSW=ON          /* AND DELETES ARE BEING DONE  0368
*                                      STILL                 @Z30XX9J*/
*             THEN                  /* LOC MOD ON PTS        @Z30XX9J*/
         L     @08,@PC00007                                        0368
         L     @08,D(,@08)                                         0368
         MH    @08,@CH01006                                        0368
         L     @04,CCAICLMD(,CCAPTR)                               0368
         AL    @04,@CF01930                                        0368
         L     @08,ICTLCHN-34(@08,@04)                             0368
         L     @08,ICTIXL(,@08)                                    0368
         TM    ICTMALIS(@08),B'00000100'                           0368
         BNO   @RF00368                                            0368
         TM    TDELSW,B'00010000'                                  0368
         BNO   @RF00368                                            0368
         TM    COPYERR,B'10000000'                                 0368
         BNZ   @RF00368                                            0368
*             DO;                   /* TO GET ALIAS NAMES    @Z30XX9J*/
*               RFY                                                0370
*                 ICTTALLS BASED(ICTMTCHN(1));/*             @Z67SP00*/
*               DO A=1 BY 1 WHILE(ICTTALND(A)^=ICTENDIX);/*  @Z67SP00*/
         LA    A,1                                                 0371
         B     @DE00371                                            0371
@DL00371 DS    0H                                                  0372
*                 CALL DELETIT(ICTTALNM(A));/*               @Z67SP00*/
         LR    @08,A                                               0372
         SLA   @08,3                                               0372
         L     @04,@PC00007                                        0372
         L     @04,D(,@04)                                         0372
         MH    @04,@CH01006                                        0372
         L     @02,CCAICLMD(,CCAPTR)                               0372
         AL    @02,@CF01930                                        0372
         L     @04,ICTLCHN-34(@04,@02)                             0372
         L     @04,ICTIXL(,@04)                                    0372
         L     @04,ICTMTCHN(,@04)                                  0372
         AL    @04,@CF01931                                        0372
         LA    @08,ICTTALNM(@08,@04)                               0372
         ST    @08,@AL00001                                        0372
         LA    @01,@AL00001                                        0372
         BAL   @14,DELETIT                                         0372
*               END;                /* END ALIAS PROCESS     @Z30XX9J*/
         AH    A,@CH00086                                          0373
@DE00371 LR    @08,A                                               0373
         SLA   @08,3                                               0373
         L     @04,@PC00007                                        0373
         L     @04,D(,@04)                                         0373
         MH    @04,@CH01006                                        0373
         L     @02,CCAICLMD(,CCAPTR)                               0373
         AL    @02,@CF01930                                        0373
         L     @04,ICTLCHN-34(@04,@02)                             0373
         L     @04,ICTIXL(,@04)                                    0373
         L     @04,ICTMTCHN(,@04)                                  0373
         AL    @04,@CF01931                                        0373
         L     @08,ICTTALND(@08,@04)                               0373
         CL    @08,ICTENDIX                                        0373
         BNE   @DL00371                                            0373
*             END;                  /* END NEED TO DELETE    @SA77276*/
*         END;                      /* END LMOD ELIGIBLE FOR DELETE
*                                      GROUP                 @SA77276*/
*     END;                          /*                       @Z67SP00*/
*   RFY                                                            0377
*     ICTIXLF BASED(ICTLCHN(I));    /* LMOD BASE             @Z30XX9J*/
*   END DELETCHK;                   /* END DELETE PROC       @Z30XX9J*/
@EL00007 DS    0H                                                  0378
@EF00007 DS    0H                                                  0378
@ER00007 LM    @14,@04,@SA00007                                    0378
         LM    @06,@12,@SA00007+28                                 0378
         BR    @14                                                 0378
         EJECT
*                                                                  0379
*   /*****************************************************************/
*   /*                                                               */
*   /* ALL DELETES ARE DONE VIA STOW DELETE CALL TO HMASMIO  @Z30XX9J*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0379
*DELETIT:                           /*                       @Z30XX9J*/
*   PROC(DELEMOD);                  /* MOD NAME IS PASSED FROM CALLER
*                                                            @Z30XX9J*/
DELETIT  STM   @14,@04,@SA00008                                    0379
         STM   @06,@12,@SA00008+28                                 0379
         MVC   @PC00008(4),0(@01)                                  0379
*   DECLARE                                                        0380
*     DELEMOD CHAR(8);              /* MODULE NAME           @Z30XX9J*/
*   MGPVARPT(1)=ADDR(DELEMOD);      /* SETOP MSG             @Z30XX9J*/
         L     @08,@PC00008                                        0381
         ST    @08,MGPVARPT                                        0381
*   MGPVARPT(2)=ADDR(INPUTDD);      /* SETUP MSG             @Z30XX9J*/
         LA    @04,INPUTDD                                         0382
         ST    @04,MGPVARPT+4                                      0382
*   IOPNAME=DELEMOD;                /* INDICATE NAME FOR DELETION  0383
*                                                            @Z30XX9J*/
         L     @04,IOPPTR                                          0383
         MVC   IOPNAME(8,@04),DELEMOD(@08)                         0383
*   IOPTYPE=IOPMOD;                 /* TYPE                  @ZD00008*/
         MVI   IOPTYPE(@04),X'05'                                  0384
*   IOPDSID=IOPDDNM;                /* INDICATES IO TO A TGTLIB    0385
*                                                            @Z30XX9J*/
         MVI   IOPDSID(@04),X'0E'                                  0385
*   IOPFUNCT=IOPSTOWD;              /* INDICATE STOW DELETE  @Z30XX9J*/
         MVI   IOPFUNCT(@04),X'53'                                 0386
*   IOPDELDD=INPUTDD;               /* INDICATES TGTLIB NAME @Z30XX9J*/
         MVC   IOPDELDD(8,@04),INPUTDD                             0387
*   CALL HMASMIO(HMASMIOP);         /* DO THE DELETE         @Z30XX9J*/
         ST    @04,@AL00001                                        0388
         L     @15,@CV01634                                        0388
         LA    @01,@AL00001                                        0388
         BALR  @14,@15                                             0388
*   COMRTNCD=MAX(COMRTNCD,IOPRETRN);/* SET RC                @YA07506*/
         L     @08,IOPPTR                                          0389
         SLR   @04,@04                                             0389
         IC    @04,IOPRETRN(,@08)                                  0389
         CR    COMRTNCD,@04                                        0389
         BNL   *+6
         LR    COMRTNCD,@04                                        0389
*   IF IOPRETRN=IOPGOOD             /* GOOD DELETE?          @YA07506*/
*     THEN                          /* WRITE A MSG           @Z30XX9J*/
         CLI   IOPRETRN(@08),0                                     0390
         BNE   @RF00390                                            0390
*     DO;                           /*                       @Z30XX9J*/
*       MGPMGNO1=HMA224I;           /* SUCCESSFULLY DELETED  @Z30XX9J*/
         MVC   MGPMGNO1(2),@CH00460                                0392
*       MGPMGNO2=PART050;           /* MODULE                @Z30XX9J*/
         MVC   MGPMGNO2(2),@CH00730                                0393
*       MGPMGNO3=PART040;           /* FROM LIBRARY          @Z30XX9J*/
         MVC   MGPMGNO3(2),@CH00487                                0394
*       MGPHLDS=ON;                 /* MSG TO LOG            @Z40SP00*/
         OI    MGPHLDS,B'00010000'                                 0395
*       MGPTYPE=MGPINFO;            /* MESSAGE SEVERITRY     @ZD00001*/
         MVI   MGPTYPE,X'01'                                       0396
*       CALL HMASMMSG(HMASMMGP);    /* WRITE IT              @Z30XX9J*/
         L     @15,@CV01638                                        0397
         LA    @01,@AL00397                                        0397
         BALR  @14,@15                                             0397
*       MGPHLDS=ON;                 /* RESET LOG             @Z40SP00*/
         OI    MGPHLDS,B'00010000'                                 0398
*     END;                          /* END GOOD DELETE DO    @Z30XX9J*/
*   IF IOPRETRN=IOPUNMOV            /* FOUND AN UNMOVABLE LIBRARY  0400
*                                                            @YA07506*/
*     THEN                          /* SETUP TO BYPASS COMPRESS TO 0400
*                                      LIB                   @Z30XX9J*/
@RF00390 L     @08,IOPPTR                                          0400
         CLI   IOPRETRN(@08),4                                     0400
         BNE   @RF00400                                            0400
*     DO;                           /*                       @Z30XX9J*/
*       MGPMGNO1=HMA285I;           /* UNMOVABLE MSG         @Z30XX9J*/
         MVC   MGPMGNO1(2),@CH00523                                0402
*       MGPVARPT(1)=ADDR(INPUTDD);  /* DD NAME               @Z30XX9J*/
         LA    @08,INPUTDD                                         0403
         ST    @08,MGPVARPT                                        0403
*       MGPMGNO2=ZERO;              /* NO SECOND             @Z30XX9J*/
         SLR   @08,@08                                             0404
         STH   @08,MGPMGNO2                                        0404
*       MGPMGNO3=ZERO;              /* OR THIRD              @Z30XX9J*/
         STH   @08,MGPMGNO3                                        0405
*       MGPTYPE=MGPWARN;            /* MESSAGE SEVERITY      @ZD00001*/
         MVI   MGPTYPE,X'02'                                       0406
*       CALL HMASMMSG(HMASMMGP);    /* WRITE IT              @Z30XX9J*/
         L     @15,@CV01638                                        0407
         LA    @01,@AL00407                                        0407
         BALR  @14,@15                                             0407
*       TDELSW=OFF;                 /* STOP DELETES FROM THIS LIB  0408
*                                                            @Z30XX9J*/
         NI    TDELSW,B'11101111'                                  0408
*     END;                          /*                       @Z30XX9J*/
*   IF IOPRETRN>STOPPTF             /* I/O ERR ON DELETE?    @YA07506*/
*     THEN                          /* WRITE A MSG AND QUIT  @Z30XX9J*/
@RF00400 L     @08,IOPPTR                                          0410
         CLI   IOPRETRN(@08),8                                     0410
         BNH   @RF00410                                            0410
*     DO;                           /*                       @Z30XX9J*/
*       COPYERR=ON;                 /* STOP THE COMPRESS FUNCTION AND
*                                      SMP                   @Z30XX9J*/
         OI    COPYERR,B'10000000'                                 0412
*     END;                          /* END IO ERROR DO       @Z30XX9J*/
*   END DELETIT;                    /*                       @Z30XX9J*/
@EL00008 DS    0H                                                  0414
@EF00008 DS    0H                                                  0414
@ER00008 LM    @14,@04,@SA00008                                    0414
         LM    @06,@12,@SA00008+28                                 0414
         BR    @14                                                 0414
         EJECT
*LMCHK:                             /*                       @Z67SP00*/
*   PROC;                           /*                       @Z67SP00*/
*                                                                  0415
LMCHK    STM   @14,@04,@SA00009                                    0415
         STM   @06,@12,@SA00009+28                                 0415
*   /*****************************************************************/
*   /*                                                               */
*   /* COMPRESS FUNCTION: THE ICT LMOD SECTION IS CHECKED FOR LMODS  */
*   /* ELIGIBLE FOR DELETION, IF THE TGTLIB IS ELIGIBLE FOR COMPRESS */
*   /* THEN THE REST OF THE LMODS IN THE ICT WITH THE SAME TGTLIB ARE*/
*   /* CHECKED FOR POSSIBLE DELETION                         @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0416
*   RFY                                                            0416
*     ICTLMOD BASED(CCAICLMD);      /* ADDR ICT LMOD TABLE   @Z30XX9J*/
*   RFY                                                            0417
*     ICTIXLF BASED(ICTLCHN(I));    /* CHN PTR TO INDEX BACK TO MOD S*/
*   RFY                                                            0418
*     ICTMOD BASED(ICTIXL(1));      /* CHN PTR BACK TO ICT MOD     0418
*                                      ENTRIES                       */
*   DO I=1 BY 1 WHILE(ICTLEND(I)^=ICTENDNT/* MAIN LOOP       @Z30XX9J*/
*         &COPYERR=OFF);            /* CONTINUE UNTILL END OR ERROR
*                                                            @Z30XX9J*/
         LA    @08,1                                               0419
         ST    @08,I                                               0419
         B     @DE00419                                            0419
@DL00419 DS    0H                                                  0420
*     TDELSW=OFF;                   /* INITIALIZE DELETE INDICATOR 0420
*                                                            @Z30XX9J*/
*                                                                  0420
         NI    TDELSW,B'11101111'                                  0420
*     /***************************************************************/
*     /*                                                             */
*     /* THE LMODS AND THEIR TGTLIBS ARE CHECKED OUT FIRST   @Z30XX9J*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0421
*     IF ICTLDEL(I)=OFF             /* LMOD NOT CHECKED BEFORE     0421
*                                                            @Z30XX9J*/
*       THEN                        /* CHECK ITS TGTLIBS     @Z30XX9J*/
         L     @08,I                                               0421
         MH    @08,@CH01006                                        0421
         L     @04,CCAICLMD(,CCAPTR)                               0421
         ST    @08,@TF00001                                        0421
         ALR   @08,@04                                             0421
         AL    @08,@CF01923                                        0421
         TM    ICTLDEL-13(@08),B'00001000'                         0421
         BNZ   @RF00421                                            0421
*       DO;                         /*                       @Z30XX9J*/
*         IF ICTTIND2(I)=OFF        /* NO 2ND TARGET LIB     @Z30XX9J*/
*           THEN                    /* ONLY ONE              @Z30XX9J*/
         LR    @08,@04                                             0423
         AL    @08,@TF00001                                        0423
         AL    @08,@CF01921                                        0423
         TM    ICTTIND2-14(@08),B'01000000'                        0423
         BNZ   @RF00423                                            0423
*           DO;                     /* SET UP FOR LMOD CHECK OUT   0424
*                                                            @Z30XX9J*/
*             ICTLDEL(I)=ON;        /* INDICATE LMOD PROCESSED     0425
*                                                            @Z30XX9J*/
         LR    @08,@04                                             0425
         AL    @08,@TF00001                                        0425
         AL    @08,@CF01923                                        0425
         OI    ICTLDEL-13(@08),B'00001000'                         0425
*             INPUTDD=ICTTG1(I);    /* FOR COMPRESS STMT BUILD     0426
*                                                            @Z30XX9J*/
         AL    @04,@TF00001                                        0426
         AL    @04,@CF01922                                        0426
         MVC   INPUTDD(8),ICTTG1-15(@04)                           0426
*           END;                    /*                       @Z30XX9J*/
*         ELSE                      /* MUST BE TWO TGTLIBS FOR THIS
*                                      LMOD                  @Z30XX9J*/
*           IF ICTTIND1(I)=OFF      /* INDICATES SECOND PASS @Z30XX9J*/
*             THEN                  /* FINISH IT UP          @Z30XX9J*/
         B     @RC00423                                            0428
@RF00423 L     @08,I                                               0428
         MH    @08,@CH01006                                        0428
         L     @04,CCAICLMD(,CCAPTR)                               0428
         ST    @08,@TF00001                                        0428
         ALR   @08,@04                                             0428
         AL    @08,@CF01921                                        0428
         TM    ICTTIND1-14(@08),B'10000000'                        0428
         BNZ   @RF00428                                            0428
*             DO;                   /*                       @Z30XX9J*/
*               ICTTIND1(I)=ON;     /* RESET 2 TGTLIG INDICATOR    0430
*                                                            @Z30XX9J*/
         LR    @08,@04                                             0430
         AL    @08,@TF00001                                        0430
         AL    @08,@CF01921                                        0430
         OI    ICTTIND1-14(@08),B'10000000'                        0430
*               ICTLDEL(I)=ON;      /* COMPRESS FINISHED LMOD      0431
*                                                            @Z30XX9J*/
         LR    @08,@04                                             0431
         AL    @08,@TF00001                                        0431
         AL    @08,@CF01923                                        0431
         OI    ICTLDEL-13(@08),B'00001000'                         0431
*               INPUTDD=ICTTG2(I);  /* FOR COMPRESS STMT     @Z30XX9J*/
         AL    @04,@TF00001                                        0432
         AL    @04,@CF01925                                        0432
         MVC   INPUTDD(8),ICTTG2-23(@04)                           0432
*             END;                  /*                       @Z30XX9J*/
*           ELSE                    /* FIRST PASS LMOD WITH TWO    0434
*                                      TGTLIBS               @Z30XX9J*/
*             DO;                   /* PROCESS FIRST AND INDICATE TWO
*                                                            @Z30XX9J*/
         B     @RC00428                                            0434
@RF00428 DS    0H                                                  0435
*               ICTTIND1(I)=OFF;    /* FIRST PASS INDICATOR  @Z30XX9J*/
         L     @08,I                                               0435
         MH    @08,@CH01006                                        0435
         L     @04,CCAICLMD(,CCAPTR)                               0435
         ST    @08,@TF00001                                        0435
         ALR   @08,@04                                             0435
         AL    @08,@CF01921                                        0435
         NI    ICTTIND1-14(@08),B'01111111'                        0435
*               INPUTDD=ICTTG1(I);  /* FOR COMPRESS STMT     @Z30XX9J*/
         AL    @04,@TF00001                                        0436
         AL    @04,@CF01922                                        0436
         MVC   INPUTDD(8),ICTTG1-15(@04)                           0436
*               IRESET=ON;          /* SO THAT LMOD WILL BE RECHECKED
*                                                            @Z30XX9J*/
         OI    IRESET,B'00100000'                                  0437
*             END;                  /* END OF TWO TGTLIG FIRST PASS
*                                      PROCESS               @Z30XX9J*/
*                                                                  0438
*         /***********************************************************/
*         /*                                                         */
*         /* CHECK OUT TGTLIB BUILD COMPRESS STMTS           @Z30XX9J*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0439
*         CALL LISTCHK;             /*                       @Z30XX9J*/
@RC00428 DS    0H                                                  0439
@RC00423 BAL   @14,LISTCHK                                         0439
*         IF COPYERR=OFF&TDELSW=ON  /* NO ERRORS AND DELET   @Z30XX9J*/
*           THEN                    /*                       @Z30XX9J*/
*                                                                  0440
         TM    TDELSW,B'00010000'                                  0440
         BNO   @RF00440                                            0440
         TM    COPYERR,B'10000000'                                 0440
         BNZ   @RF00440                                            0440
*           /*********************************************************/
*           /*                                                       */
*           /* CHECK OUT THIS LMOD AND DELETE IF ELIGIBLE    @Z30XX9J*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0441
*           CALL DELETCHK(I);       /*                       @Z30XX9J*/
*                                                                  0441
         LA    @01,@AL00441                                        0441
         BAL   @14,DELETCHK                                        0441
*         /***********************************************************/
*         /*                                                         */
*         /* CHECK THE REMAINING LMODS IN ICT WITH SAME TGTLIB THOSE */
*         /* LMODS WILL ALSO BE DELETED BY THIS CALL         @Z30XX9J*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0442
*         DO M=(I+1) BY 1 WHILE(ICTLEND(M)^=ICTENDNT/*       @Z30XX9J*/
*               &COPYERR=OFF);      /* LOOP ON REMAINING LMODS     0442
*                                                            @Z30XX9J*/
@RF00440 LA    @08,1                                               0442
         AL    @08,I                                               0442
         ST    @08,M                                               0442
         B     @DE00442                                            0442
@DL00442 DS    0H                                                  0443
*           CALL OTHRLMCK;          /* LOOK AT THIS LMOD     @Z30XX9J*/
         BAL   @14,OTHRLMCK                                        0443
*         END;                      /* END OF PROCESS OF LMODS WITH
*                                      SAME TGTLIB           @Z30XX9J*/
*                                                                  0444
         LA    @08,1                                               0444
         AL    @08,M                                               0444
         ST    @08,M                                               0444
@DE00442 L     @08,M                                               0444
         MH    @08,@CH01006                                        0444
         L     @04,CCAICLMD(,CCAPTR)                               0444
         AL    @04,@CF01928                                        0444
         L     @08,ICTLEND(@08,@04)                                0444
         CL    @08,ICTENDNT                                        0444
         BE    @DC00442                                            0444
         TM    COPYERR,B'10000000'                                 0444
         BZ    @DL00442                                            0444
@DC00442 DS    0H                                                  0445
*         /***********************************************************/
*         /*                                                         */
*         /* WRITE COMPRESS STMT AND CALL COPY FOR EACH LIB  @Z30XX9J*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0445
*         IF TDELSW=ON              /* IS IT OK TO COMPRESS THIS LIB
*                                                            @Z30XX9J*/
*             &COPYERR=OFF          /* NO ERRORS ABOVE       @Z40SP00*/
*             &INPUTDD^=ZEROS       /* AND THIS IS TRUELY A LIBRARY
*                                                            @OS76129*/
*             &ICTLNOGO(I)=OFF      /* AND LMOD NOT BAD      @ZA18589*/
*           THEN                    /* YES , DO IT           @Z30XX9J*/
         TM    TDELSW,B'00010000'                                  0445
         BNO   @RF00445                                            0445
         TM    COPYERR,B'10000000'                                 0445
         BNZ   @RF00445                                            0445
         CLC   INPUTDD(8),ZEROS                                    0445
         BE    @RF00445                                            0445
         L     @08,I                                               0445
         MH    @08,@CH01006                                        0445
         L     @04,CCAICLMD(,CCAPTR)                               0445
         ALR   @04,@08                                             0445
         AL    @04,@CF01927                                        0445
         TM    ICTLNOGO-8(@04),B'01000000'                         0445
         BNZ   @RF00445                                            0445
*           CALL COPYLNK;           /* COPY INTERFACE        @Z30XX9J*/
         BAL   @14,COPYLNK                                         0446
*       END;                        /* END FOR LMOD NOT PREVIOUSLY 0447
*                                      CHECKED               @Z30XX9J*/
@RF00445 DS    0H                                                  0448
*     IF IRESET=ON                  /* DOES THIS LMOD HAVE TWO     0448
*                                      TGTLIBS AND ONLY      @Z30XX9J*/
*       THEN                                                       0448
@RF00421 TM    IRESET,B'00100000'                                  0448
         BNO   @RF00448                                            0448
*       DO;                         /* THE FIRST HAS BEEN PROCESSED
*                                                            @Z30XX9J*/
*         I=(I-1);                  /* RESET LOOP COUNTER TO GET IT
*                                      AGAIN                 @Z30XX9J*/
         L     @08,I                                               0450
         BCTR  @08,0                                               0450
         ST    @08,I                                               0450
*         IRESET=OFF;               /* RESET LOOP REPEATER INDICATOR
*                                                            @Z30XX9J*/
         NI    IRESET,B'11011111'                                  0451
*       END;                        /*                       @Z30XX9J*/
*   END;                            /* END OF PRIMARY LMOD LOOP IN 0453
*                                      ICT                   @Z30XX9J*/
@RF00448 LA    @08,1                                               0453
         AL    @08,I                                               0453
         ST    @08,I                                               0453
@DE00419 L     @08,I                                               0453
         MH    @08,@CH01006                                        0453
         L     @04,CCAICLMD(,CCAPTR)                               0453
         AL    @04,@CF01928                                        0453
         L     @08,ICTLEND(@08,@04)                                0453
         CL    @08,ICTENDNT                                        0453
         BE    @DC00419                                            0453
         TM    COPYERR,B'10000000'                                 0453
         BZ    @DL00419                                            0453
@DC00419 DS    0H                                                  0454
*   END LMCHK;                      /*                       @Z67SP00*/
@EL00009 DS    0H                                                  0454
@EF00009 DS    0H                                                  0454
@ER00009 LM    @14,@04,@SA00009                                    0454
         LM    @06,@12,@SA00009+28                                 0454
         BR    @14                                                 0454
         EJECT
*                                                                  0455
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THRU THE MODULE ENTRIES OF THE ICT, FOR MACRO/SRC@Z67SP00*/
*   /* REPLACEMENTS AND UPDATES. DO DELETE PROCESSING FOR RE-@Z67SP00*/
*   /* PLACEMENT SRC MODULES AND COMPRESSES OF REPLACEMENT/  @Z67SP00*/
*   /* UPDATED MACROS AND UPDATED SRC MODULES.               @Z67SP00*/
*   /*                                                       @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0455
*MACSRC:                                                           0455
*   PROC;                           /*                       @Z67SP00*/
MACSRC   STM   @14,@04,@SA00010                                    0455
         STM   @06,@12,@SA00010+28                                 0455
*   RFY                                                            0456
*     ICTMOD BASED(CCAICMOD);       /*                       @Z40SP00*/
*   DO G=1 BY 1                     /* LOOP THRU MODS        @Z40SP00*/
*         WHILE(ICTMEND(G)^=ICTENDNT&COPYERR=OFF);/* NO ERRORS     0457
*                                                            @Z40SP00*/
         LA    G,1                                                 0457
         B     @DE00457                                            0457
@DL00457 DS    0H                                                  0458
*     IF(ICTMMACR(G)=ON×ICTMSRCR(G)=ON/* MAC/SRC REPLACE     @Z67SP00*/
*         ×ICTMMACU(G)=ON×ICTMSRCU(G)=ON)/* OR UPDATE        @Z67SP00*/
*         &(ICTMDEL(G)=OFF          /* AND NOT ALREADY DONE  @Z40SP00*/
*         &ICTMCPL(G)=OFF           /* AND NOT IN ERROR      @Z40SP00*/
*         &ICTMPROC(G)=OFF          /*                       @Z40SP00*/
*         &ICTMNOGO(G)=OFF)         /*                       @Z40SP00*/
*       THEN                        /* THEN PROCEEDE WITH    @Z40SP00*/
         LR    @08,G                                               0458
         MH    @08,@CH01895                                        0458
         L     @04,CCAICMOD(,CCAPTR)                               0458
         ST    @08,@TF00001                                        0458
         ALR   @08,@04                                             0458
         AL    @08,@CF01935                                        0458
         TM    ICTMMACR-9(@08),B'00001111'                         0458
         BZ    @RF00458                                            0458
         LR    @08,@04                                             0458
         AL    @08,@TF00001                                        0458
         AL    @08,@CF01936                                        0458
         TM    ICTMDEL-8(@08),B'11101000'                          0458
         BNZ   @RF00458                                            0458
*       DO;                         /* PROCESSING            @Z40SP00*/
*         TDELSW=OFF;               /* INITIALIZE SWITCH@Z40SP00     */
*         MACPASS=ON;               /* MAC/SRC PASS          @Z40SP00*/
         OI    MACPASS,B'00000100'                                 0461
         NI    TDELSW,B'11101111'                                  0461
*         INPUTDD=ICTTOLIB(G);      /* GET DD NAME           @Z40SP00*/
         LR    @08,@04                                             0462
         AL    @08,@TF00001                                        0462
         AL    @08,@CF01937                                        0462
         MVC   INPUTDD(8),ICTTOLIB-32(@08)                         0462
*         ICTMDEL(G)=ON;            /* INDICATE IN ICT       @Z40SP00*/
*                                                                  0463
         AL    @04,@TF00001                                        0463
         AL    @04,@CF01936                                        0463
         OI    ICTMDEL-8(@04),B'00001000'                          0463
*         /***********************************************************/
*         /*                                                         */
*         /* CHECT THE DATASET FOR COMPRESS ELIGIBILITY      @Z40SP00*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0464
*         CALL LISTCHK;             /* CHECK TOLIB           @Z40SP00*/
*                                                                  0464
         BAL   @14,LISTCHK                                         0464
*         /***********************************************************/
*         /*                                                         */
*         /* CHECK THE MEMBER AND ALIAS FOR DELETION ELIGIBILITY     */
*         /*                                                 @Z40SP00*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0465
*         IF TDELSW=ON THEN         /* IF OK THEN PROCESS    @Z67SP00*/
         TM    TDELSW,B'00010000'                                  0465
         BNO   @RF00465                                            0465
*           CALL SRCDEL;            /* DO DELETE OF MEMBERS  @Z40SP00*/
         BAL   @14,SRCDEL                                          0466
*         IF TDELSW=ON&COPYERR=OFF  /* OK TO CONTINUE        @Z40SP00*/
*           THEN                    /* DO COMPRESS           @Z40SP00*/
*                                                                  0467
@RF00465 TM    TDELSW,B'00010000'                                  0467
         BNO   @RF00467                                            0467
         TM    COPYERR,B'10000000'                                 0467
         BNZ   @RF00467                                            0467
*           /*********************************************************/
*           /*                                                       */
*           /* PREPARE TO DO THE COMPRESS VIA USING IEBCOPY  @Z40SP00*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0468
*           CALL COPYLNK;           /* OF TOLIB              @Z40SP00*/
         BAL   @14,COPYLNK                                         0468
*       END;                        /*                       @Z40SP00*/
@RF00467 DS    0H                                                  0470
*   END;                            /* OF LOOP               @Z40SP00*/
@RF00458 AH    G,@CH00086                                          0470
@DE00457 LR    @08,G                                               0470
         MH    @08,@CH01895                                        0470
         L     @04,CCAICMOD(,CCAPTR)                               0470
         AL    @04,@CF01938                                        0470
         L     @08,ICTMEND(@08,@04)                                0470
         CL    @08,ICTENDNT                                        0470
         BE    @DC00457                                            0470
         TM    COPYERR,B'10000000'                                 0470
         BZ    @DL00457                                            0470
@DC00457 DS    0H                                                  0471
*   END MACSRC;                     /*                       @Z40SP00*/
@EL00010 DS    0H                                                  0471
@EF00010 DS    0H                                                  0471
@ER00010 LM    @14,@04,@SA00010                                    0471
         LM    @06,@12,@SA00010+28                                 0471
         BR    @14                                                 0471
         EJECT
*                                                                  0472
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE THE SOURCE MEMBER FROM THE TOLIB.              @Z67SP00*/
*   /* LOOP THRU THE REST OF THE ICT MODULE ENTRIES          @Z40SP00*/
*   /* LOOKING FOR MEMBERS FROM THE SAME TOLIB AND           @Z40SP00*/
*   /* DO DELETE PROCESSING FOR THEM                         @Z40SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0472
*SRCDEL:                                                           0472
*   PROC;                           /*                       @Z40SP00*/
SRCDEL   STM   @14,@04,@SA00011                                    0472
         STM   @06,@12,@SA00011+28                                 0472
*   RFY                                                            0473
*     ICTPTF BASED(ICTPPTR(G));     /* PTR TO PTF ENTRY      @Z67SP00*/
*   RFY                                                            0474
*     ICTMOD BASED(CCAICMOD);       /* ICT MOD BASE FROM CCA @Z40SP00*/
*   IF ICTTOLIB(G)^=SMPSTS          /* SRC NOT STS           @Z67SP00*/
*       &ICTMSRCR(G)=ON             /* SRC REPLACEMENT       @Z67SP00*/
*     THEN                          /* OK FOR PROCESSING     @Z40SP00*/
         LR    @08,G                                               0475
         MH    @08,@CH01895                                        0475
         L     @04,CCAICMOD(,CCAPTR)                               0475
         ST    @08,@TF00001                                        0475
         ALR   @08,@04                                             0475
         AL    @08,@CF01937                                        0475
         CLC   ICTTOLIB-32(8,@08),@CC01769                         0475
         BE    @RF00475                                            0475
         LR    @08,@04                                             0475
         AL    @08,@TF00001                                        0475
         AL    @08,@CF01935                                        0475
         TM    ICTMSRCR-9(@08),B'00000010'                         0475
         BNO   @RF00475                                            0475
*     DO;                           /*                       @Z67SP00*/
*                                                                  0476
*       /*************************************************************/
*       /*                                                           */
*       /* CALL ROUTINE TO DELETE MEMBER, PASS NAME AS PARM  @Z40SP00*/
*       /* SYSMOD ENTRY CREATION FOR A(CDS)                  @Z67SP00*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0477
*       CALL HMASMSEC(ICTPTF(1),ADDR(HMASMIOP));/*           @Z67SP00*/
         L     @08,@TF00001                                        0477
         AL    @04,@CF01939                                        0477
         L     @08,ICTPPTR-96(@08,@04)                             0477
         ST    @08,@AL00001                                        0477
         LA    @08,IOPPTR                                          0477
         ST    @08,@AL00001+4                                      0477
         L     @15,@CV01636                                        0477
         LA    @01,@AL00001                                        0477
         BALR  @14,@15                                             0477
*       CALL DELETIT(ICTMOD(G));    /* CALL IT               @Z40SP00*/
         LR    @08,G                                               0478
         MH    @08,@CH01895                                        0478
         L     @04,CCAICMOD(,CCAPTR)                               0478
         AL    @04,@CF01938                                        0478
         LA    @08,ICTMOD(@08,@04)                                 0478
         ST    @08,@AL00001                                        0478
         LA    @01,@AL00001                                        0478
         BAL   @14,DELETIT                                         0478
*     END;                          /*                       @Z67SP00*/
*                                                                  0479
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW LOOP THRU THE REST OF THE ICT MEMBERS LOOKING     @Z40SP00*/
*   /* FOR THOSE HAVING THE SAME TOLIB AS THE CURRENT        @Z40SP00*/
*   /* MEMBER. DO DELETE PROCESSING FOR THESE                @Z40SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0480
*   RFY                                                            0480
*     ICTPTF BASED(ICTPPTR(H));     /* PTR TO PTF ENTRY      @Z67SP00*/
@RF00475 DS    0H                                                  0481
*   DO H=G+1 BY 1 WHILE(            /* LOOP FROM CURRENT ON  @Z40SP00*/
*         ICTMEND(H)^=ICTENDNT&COPYERR=OFF);/* TO END        @Z40SP00*/
         LA    H,1                                                 0481
         ALR   H,G                                                 0481
         B     @DE00481                                            0481
@DL00481 DS    0H                                                  0482
*     IF ICTTOLIB(H)=INPUTDD THEN   /* MATCH OF TOLIB        @Z40SP00*/
         LA    @08,144                                             0482
         LR    @01,H                                               0482
         MR    @00,@08                                             0482
         L     @02,CCAICMOD(,CCAPTR)                               0482
         ST    @01,@TF00001                                        0482
         ALR   @01,@02                                             0482
         AL    @01,@CF01937                                        0482
         CLC   ICTTOLIB-32(8,@01),INPUTDD                          0482
         BNE   @RF00482                                            0482
*       IF ICTMDEL(H)=OFF           /* NOT PREVIOUSLY DONE   @Z40SP00*/
*           &ICTMCPL(H)=OFF         /* AND NOT IN ERROR      @Z40SP00*/
*           &ICTMPROC(H)=OFF        /*                       @Z40SP00*/
*           &ICTMNOGO(H)=OFF        /*                       @Z40SP00*/
*         THEN                      /* THEN PROCEED          @Z40SP00*/
         LR    @01,@02                                             0483
         AL    @01,@TF00001                                        0483
         AL    @01,@CF01936                                        0483
         TM    ICTMDEL-8(@01),B'11101000'                          0483
         BNZ   @RF00483                                            0483
*         DO;                       /*                       @Z40SP00*/
*                                                                  0484
*           /*********************************************************/
*           /*                                                       */
*           /* DELETE THE MEMBER FROM THE TOLIB              @Z40SP00*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0485
*           ICTMDEL(H)=ON;          /* INDICATE IN ICT       @Z40SP00*/
         LR    @01,@02                                             0485
         AL    @01,@TF00001                                        0485
         AL    @01,@CF01936                                        0485
         OI    ICTMDEL-8(@01),B'00001000'                          0485
*           IF ICTMSRCR(H)=ON       /* SOURCE                @Z67SP00*/
*               &ICTTOLIB(G)^=SMPSTS/* OR STS                @Z40SP00*/
*             THEN                  /*                       @Z40SP00*/
         LR    @01,@02                                             0486
         AL    @01,@TF00001                                        0486
         AL    @01,@CF01935                                        0486
         TM    ICTMSRCR-9(@01),B'00000010'                         0486
         BNO   @RF00486                                            0486
         LR    @01,@08                                             0486
         MR    @00,G                                               0486
         ALR   @01,@02                                             0486
         AL    @01,@CF01937                                        0486
         CLC   ICTTOLIB-32(8,@01),@CC01769                         0486
         BE    @RF00486                                            0486
*             DO;                   /* GET DELETED           @Z40SP00*/
*                                                                  0487
*               /*****************************************************/
*               /*                                                   */
*               /* SYSMOD ENTRY CREATION FOR A(CDS)          @Z67SP00*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0488
*               CALL HMASMSEC(ICTPTF(1),ADDR(HMASMIOP));/*   @Z67SP00*/
         L     @08,@TF00001                                        0488
         AL    @02,@CF01939                                        0488
         L     @08,ICTPPTR-96(@08,@02)                             0488
         ST    @08,@AL00001                                        0488
         LA    @08,IOPPTR                                          0488
         ST    @08,@AL00001+4                                      0488
         L     @15,@CV01636                                        0488
         LA    @01,@AL00001                                        0488
         BALR  @14,@15                                             0488
*               CALL DELETIT(ICTMOD(H));/* NAME AS PARM      @Z40SP00*/
         LR    @08,H                                               0489
         MH    @08,@CH01895                                        0489
         L     @02,CCAICMOD(,CCAPTR)                               0489
         AL    @02,@CF01938                                        0489
         LA    @08,ICTMOD(@08,@02)                                 0489
         ST    @08,@AL00001                                        0489
         LA    @01,@AL00001                                        0489
         BAL   @14,DELETIT                                         0489
*             END;                  /*                       @Z40SP00*/
*         END;                      /* END DELETE DO         @Z40SP00*/
@RF00486 DS    0H                                                  0492
*   END;                            /* TOLIB MATCH DO        @Z40SP00*/
@RF00483 DS    0H                                                  0492
@RF00482 AH    H,@CH00086                                          0492
@DE00481 LR    @08,H                                               0492
         MH    @08,@CH01895                                        0492
         L     @02,CCAICMOD(,CCAPTR)                               0492
         AL    @02,@CF01938                                        0492
         L     @08,ICTMEND(@08,@02)                                0492
         CL    @08,ICTENDNT                                        0492
         BE    @DC00481                                            0492
         TM    COPYERR,B'10000000'                                 0492
         BZ    @DL00481                                            0492
@DC00481 DS    0H                                                  0493
*   END SRCDEL;                     /*                       @Z40SP00*/
@EL00011 DS    0H                                                  0493
@EF00011 DS    0H                                                  0493
@ER00011 LM    @14,@04,@SA00011                                    0493
         LM    @06,@12,@SA00011+28                                 0493
         BR    @14                                                 0493
         EJECT
*                                                                  0494
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK THE COMPRESS LIST FOR TGTLIBS NOT PROCESSED     @Z30XX9J*/
*   /* BUILD STMTS , IF ALL TAKE CARE OF SMPPTS              @Z30XX9J*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0494
*FNSHLST:                           /*                       @Z30XX9J*/
*   PROC;                           /*                       @Z30XX9J*/
FNSHLST  STM   @14,@04,@SA00012                                    0494
         STM   @06,@12,@SA00012+28                                 0494
*   IF LISTELM(1)=ALL               /* ALL HAS BEEN SPECIFIED      0495
*                                                            @Z30XX9J*/
*     THEN                          /* TAKE CARE OF PTS      @Z30XX9J*/
         L     @08,CCACLST(,CCAPTR)                                0495
         CLC   LISTELM(8,@08),ALL                                  0495
         BNE   @RF00495                                            0495
*     DO;                           /*                       @Z30XX9J*/
*       INPUTDD=SMPPTS;             /* SMPPTS COMPRESS STMT  @Z30XX9J*/
         MVC   INPUTDD(8),SMPPTS                                   0497
*       OUTPUTDD=INPUTDD;           /* FOR A COMPRESS        @Z30XX9J*/
*                                                                  0498
         MVC   OUTPUTDD(8),INPUTDD                                 0498
*       /*************************************************************/
*       /*                                                           */
*       /* COMPRESS SMPPTS                                   @Z30XX9J*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0499
*       CALL COPYLNK;               /* DO IT                 @Z30XX9J*/
         BAL   @14,COPYLNK                                         0499
*     END;                          /* END OFF ALL PROCESS   @Z30XX9J*/
*                                                                  0500
*   /*****************************************************************/
*   /*                                                               */
*   /* ALL WAS NOT SPECIFIED SO PROCESS REST OF LIST         @Z30XX9J*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0501
*   ELSE                            /*                       @Z30XX9J*/
*     DO R=1 BY 1                   /* LOOP ON COMPRESS LIST @Z30XX9J*/
*           WHILE(LISTELM(R,1:4)^=ICTENDNT/*                 @Z30XX9J*/
*           &COPYERR=OFF);          /*                       @Z30XX9J*/
*                                                                  0501
         B     @RC00495                                            0501
@RF00495 LA    R,1                                                 0501
         B     @DE00501                                            0501
@DL00501 DS    0H                                                  0502
*       /*************************************************************/
*       /*                                                           */
*       /* SKIP IF CDS OR ACDS                               @ZD00002*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0502
*       IF LISTELM(R)^=SMPCDS       /*                       @ZD00002*/
*           &LISTELM(R)^=SMPACDS    /*                       @ZD00002*/
*         THEN                      /*                       @ZD00002*/
         LR    @08,R                                               0502
         MH    @08,@CH00034                                        0502
         L     @04,CCACLST(,CCAPTR)                                0502
         ST    @08,@TF00001                                        0502
         ALR   @08,@04                                             0502
         AL    @08,@CF01919                                        0502
         CLC   LISTELM(8,@08),SMPCDS                               0502
         BE    @RF00502                                            0502
         LR    @08,@04                                             0502
         AL    @08,@TF00001                                        0502
         AL    @08,@CF01919                                        0502
         CLC   LISTELM(8,@08),SMPACDS                              0502
         BE    @RF00502                                            0502
*         DO;                       /*                       @ZD00002*/
*           IF LISTDEL(R)=OFF       /* TGTLIB NOT ALREADY PROCESSED
*                                                            @Z30XX9J*/
*             THEN                  /* HANDLE IT             @Z30XX9J*/
         LR    @08,@04                                             0504
         AL    @08,@TF00001                                        0504
         BCTR  @08,0                                               0504
         TM    LISTDEL-8(@08),B'10000000'                          0504
         BNZ   @RF00504                                            0504
*             DO;                   /*                       @Z30XX9J*/
*               INPUTDD=LISTELM(R); /* SETUP TGTLIB DD NAME  @Z30XX9J*/
         AL    @04,@TF00001                                        0506
         AL    @04,@CF01919                                        0506
         MVC   INPUTDD(8),LISTELM(@04)                             0506
*               GEN(DEVTYPE INPUTDD,WORK)/* MAKE SURE THERE IS     0507
*                                                            @Z30XX9J*/
*               REFS(INPUTDD,WORK); /* DD STATEMENT IN JCL   @Z30XX9J*/
         DEVTYPE INPUTDD,WORK
*               RFY                                                0508
*                 RTNCODE RSTD;     /*                       @SA77276*/
*               IF RTNCODE=ZERO     /* THERE IS A DD STATEMENT     0509
*                                                            @Z30XX9J*/
*                 THEN              /* WRITE THE STMT        @Z30XX9J*/
*                                                                  0509
         SLR   @14,@14                                             0509
         CR    RTNCODE,@14                                         0509
         BNE   @RF00509                                            0509
*                 /***************************************************/
*                 /*                                                 */
*                 /* COMPRESS THE LIB FROM LIST              @Z30XX9J*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0510
*                 DO;               /*                       @Z30XX9J*/
*                   RFY                                            0511
*                     RTNCODE UNRSTD;/*                      @SA77276*/
*                   IF INPUTDD=SVCLIB/* SVCLIB COMPRESS      @Z30XX9J*/
*                       &CCAIOSUP^=ZERO/* AND IEHIOSUP AVAILABL    0512
*                                                            @ZA08061*/
*                     THEN          /* INDICATE TO APA/RES   @Z30XX9J*/
         CLC   INPUTDD(8),SVCLIB                                   0512
         BNE   @RF00512                                            0512
         L     @08,CCABLDLP(,CCAPTR)                               0512
         C     @14,CCAIOSUP(,@08)                                  0512
         BE    @RF00512                                            0512
*                     CCASVCLB=ON;  /* SVCLIB AFFECTED       @Z30XX9J*/
         OI    CCASVCLB(CCAPTR),B'01000000'                        0513
*                   OUTPUTDD=INPUTDD;/* A COMPRESS           @Z30XX9J*/
@RF00512 MVC   OUTPUTDD(8),INPUTDD                                 0514
*                   CALL COPYLNK;   /* COMPRESS IT           @Z30XX9J*/
         BAL   @14,COPYLNK                                         0515
*                 END;              /*                       @Z30XX9J*/
*               ELSE                /* THE DD STATEMENT WAS NOT    0517
*                                      SPECIFIED             @Z30XX9J*/
*                                                                  0517
*                 /***************************************************/
*                 /*                                                 */
*                 /* A TGTLIB IN COMPRESS LIST WAS NOT IN JCL        */
*                 /*                                         @Z30XX9J*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0517
*                 DO;               /* WRITE A MSG           @Z30XX9J*/
         B     @RC00509                                            0517
@RF00509 DS    0H                                                  0518
*                   MGPMGNO1=HMA283I;/* DD STATEMENT MISSING @Z30XX9J*/
         MVC   MGPMGNO1(2),@CH00519                                0518
*                   MGPVARPT(1)=ADDR(INPUTDD);/* TGTLIB NAME @Z30XX9J*/
         LA    @08,INPUTDD                                         0519
         ST    @08,MGPVARPT                                        0519
*                   MGPMGNO2=PART018;/*                      @Z30XX9J*/
         MVC   MGPMGNO2(2),@CH00447                                0520
*                   MGPVARPT(2)=ADDR(COMPRESS);/* FOR COMPRESS     0521
*                                                            @Z30XX9J*/
         LA    @08,COMPRESS                                        0521
         ST    @08,MGPVARPT+4                                      0521
*                   MGPMGNO3=ZERO;  /*                       @Z30XX9J*/
         SLR   @08,@08                                             0522
         STH   @08,MGPMGNO3                                        0522
*                   MGPTYPE=MGPWARN;/* SET SEVERITY          @ZD00001*/
         MVI   MGPTYPE,X'02'                                       0523
*                   CALL HMASMMSG(HMASMMGP);/* WRITE IT      @Z30XX9J*/
         L     @15,@CV01638                                        0524
         LA    @01,@AL00524                                        0524
         BALR  @14,@15                                             0524
*                 END;              /*                       @Z30XX9J*/
*             END;                  /* END OF PROCESS FOR A GOOD   0526
*                                      TGTLIB                @Z30XX9J*/
*         END;                      /* END NOT CDS OR ACDS   @ZD00002*/
*                                                                  0527
*       /*************************************************************/
*       /*                                                           */
*       /* DD NAME WAS SMPCDS OR SMPACDS                     @ZD00002*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0528
*       ELSE                        /*                       @ZD00002*/
*         DO;                       /*                       @ZD00002*/
         B     @RC00502                                            0528
@RF00502 DS    0H                                                  0529
*           COMRTNCD=MAX(COMRTNCD,WARNPTF);/* ERROR CODE     @ZD00005*/
         LA    @08,4                                               0529
         CR    COMRTNCD,@08                                        0529
         BNL   *+6
         LR    COMRTNCD,@08                                        0529
*           MGPCLEAR=''B;           /* CLEAR PARTS           @ZD00002*/
         XC    MGPCLEAR(6),MGPCLEAR                                0530
*           MGPTYPE=MGPWARN;        /* SEVERITY              @ZD00002*/
         MVI   MGPTYPE,X'02'                                       0531
*           MGPMGNO1=HMA304I;       /* INVALID COMPRESS      @ZD00002*/
         MVC   MGPMGNO1(2),@CH00943                                0532
*           IF LISTELM(R)=SMPCDS THEN/* FOR CDS              @ZD00002*/
         LR    @08,R                                               0533
         MH    @08,@CH00034                                        0533
         L     @04,CCACLST(,CCAPTR)                                0533
         ALR   @04,@08                                             0533
         AL    @04,@CF01919                                        0533
         CLC   LISTELM(8,@04),SMPCDS                               0533
         BNE   @RF00533                                            0533
*             MGPVARPT(1)=ADDR(SMPCDS);/*                    @ZD00002*/
         LA    @08,SMPCDS                                          0534
         ST    @08,MGPVARPT                                        0534
*           ELSE                    /* FOR ACDS              @ZD00002*/
*             MGPVARPT(1)=ADDR(SMPACDS);/*                   @ZD00002*/
         B     @RC00533                                            0535
@RF00533 LA    @08,SMPACDS                                         0535
         ST    @08,MGPVARPT                                        0535
*           CALL HMASMMSG(HMASMMGP);/*                       @ZD00002*/
@RC00533 L     @15,@CV01638                                        0536
         LA    @01,@AL00536                                        0536
         BALR  @14,@15                                             0536
*         END;                      /*                       @ZD00002*/
*     END;                          /* END OF NOT ALL PROCESS      0538
*                                                            @Z30XX9J*/
@RC00502 AH    R,@CH00086                                          0538
@DE00501 LR    @08,R                                               0538
         MH    @08,@CH00034                                        0538
         L     @04,CCACLST(,CCAPTR)                                0538
         ALR   @04,@08                                             0538
         AL    @04,@CF01919                                        0538
         CLC   LISTELM(4,@04),ICTENDNT                             0538
         BE    @DC00501                                            0538
         TM    COPYERR,B'10000000'                                 0538
         BZ    @DL00501                                            0538
@DC00501 DS    0H                                                  0539
*   END FNSHLST;                    /*                       @Z30XX9J*/
@EL00012 DS    0H                                                  0539
@EF00012 DS    0H                                                  0539
@ER00012 LM    @14,@04,@SA00012                                    0539
         LM    @06,@12,@SA00012+28                                 0539
         BR    @14                                                 0539
         EJECT
*                                                                  0540
*   /*****************************************************************/
*   /*                                                               */
*   /* LINK TO IEBCOPY FOR COMPRESS ONLY                     @Z30XX9J*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0540
*COPYLNK:                           /*                       @Z30XX9J*/
*   PROC;                           /*                       @Z30XX9J*/
COPYLNK  STM   @14,@04,@SA00013                                    0540
         STM   @06,@12,@SA00013+28                                 0540
*   CALL WTRCOPY;                   /* WRITE STMT TO SYSUT1  @Z30XX9J*/
         BAL   @14,WTRCOPY                                         0541
*   IOPDSID=IOPSCR1;                /* INDICATE SCRATCH DATA SET   0542
*                                                            @SA75283*/
         L     @08,IOPPTR                                          0542
         MVI   IOPDSID(@08),X'03'                                  0542
*   CALL CLOSE;                     /* CLOSE SYSUT1          @Z30XX9J*/
*                                                                  0543
         BAL   @14,CLOSE                                           0543
*   /*****************************************************************/
*   /*                                                               */
*   /* CLOSE DATASET BEFORE COMPRESS AND GET PARMS           @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0544
*   IOPDSID=IOPDDNM;                /* INDICATE TYPE         @SA74339*/
         L     @08,IOPPTR                                          0544
         MVI   IOPDSID(@08),X'0E'                                  0544
*   CALL CLOSE;                     /* DO CLOSE WITH COMMON RTN    0545
*                                                            @SA74339*/
         BAL   @14,CLOSE                                           0545
*   IF COPYERR=OFF                  /* NO ERRORS ABOVE       @Z30XX9J*/
*       &INPUTDD(1:7)^=SYSPUNCH     /* AND NOT SYSPUNCH DD   @Z30XX9J*/
*     THEN                          /* OK TO DO COMPRESS     @Z30XX9J*/
         TM    COPYERR,B'10000000'                                 0546
         BNZ   @RF00546                                            0546
         CLC   INPUTDD(7),SYSPUNCH                                 0546
         BE    @RF00546                                            0546
*     DO;                           /*                       @Z30XX9J*/
*       RFY                                                        0548
*         LINKREG RSTD;             /*                       @Z30XX9J*/
*       DO X=1 BY 1 WHILE CCACOMPM(X)^=BLANK;/* MOVE ANY     @Z67SP00*/
         LA    X,1                                                 0549
         B     @DE00549                                            0549
@DL00549 DS    0H                                                  0550
*         OPTVAR(X)=CCACOMPM(X);    /* PARMS                 @Z67SP00*/
         LA    @08,OPTVAR-1(X)                                     0550
         L     @04,CCABLDLP(,CCAPTR)                               0550
         ALR   @04,X                                               0550
         MVC   0(1,@08),CCACOMPM-1(@04)                            0550
*       END;                        /*                       @Z67SP00*/
         AH    X,@CH00086                                          0551
@DE00549 L     @08,CCABLDLP(,CCAPTR)                               0551
         LR    @04,@08                                             0551
         ALR   @04,X                                               0551
         CLI   CCACOMPM-1(@04),C' '                                0551
         BNE   @DL00549                                            0551
*       OPTLGTH=X-1;                /* LENGTH OF FIELD       @Z67SP00*/
         LR    @04,X                                               0552
         BCTR  @04,0                                               0552
         STH   @04,OPTLGTH                                         0552
*       SYSPRINT=CCACOMSP;          /* SYSPRINT DD NAME      @Z67SP00*/
         MVC   SYSPRINT(8),CCACOMSP(@08)                           0553
*       LINKREG=CCACOMRS;           /* FOR COMPRESS LNK      @Z67SP00*/
*                                                                  0554
         L     LINKREG,CCACOMRS(,@08)                              0554
*       /*************************************************************/
*       /*                                                           */
*       /* LINK TO IEBCOPY AND STAE INTERFACE                @Z67SP00*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0555
*       SAVRVANM=RVAEPRNM;          /* SAVE RVA NAME         @Z67SP00*/
         L     @04,CCARVAD(,CCAPTR)                                0555
         MVC   SAVRVANM(8),RVAEPRNM(@04)                           0555
*       RVAEPRNM=CCACOMNM;          /* COM PROC NAME         @Z67SP00*/
         MVC   RVAEPRNM(8,@04),CCACOMNM(@08)                       0556
*       GEN(LINK DE=(LINKREG),PARAM=(0,DDNAMES),VL=1)/* LINK @Z30XX9J*/
*       REFS(LINKREG,DDNAMES);      /* TO IEBCOPY            @Z30XX9J*/
         LINK DE=(LINKREG),PARAM=(0,DDNAMES),VL=1
*       RFY                                                        0558
*         RTNCODE RSTD;             /*                       @SA77276*/
*       RVAEPRNM=SAVRVANM;          /* RESET RVA NAME        @Z67SP00*/
         L     @14,CCARVAD(,CCAPTR)                                0559
         MVC   RVAEPRNM(8,@14),SAVRVANM                            0559
*       CVD(RTNCODE,SAVE1);         /* CONVERT CODE          @Z30XX9J*/
         CVD   RTNCODE,SAVE1                                       0560
*       UNPK(SAVE2,SAVE1);          /* UNPACK                @Z30XX9J*/
         UNPK  SAVE2(8),SAVE1(8)                                   0561
*       SIGN=MASK;                  /* SIGN                  @Z30XX9J*/
         OI    SIGN,B'11110000'                                    0562
*       MGPMGNO1=HMA303I;           /* COMPRESS XXXXXX       @ZD00001*/
         MVC   MGPMGNO1(2),@CH01649                                0563
*       MGPVARPT(2)=ADDR(INPUTDD);  /* INPUTDD               @Z30XX9J*/
         LA    @14,INPUTDD                                         0564
         ST    @14,MGPVARPT+4                                      0564
*       MGPVARPT(3)=ADDR(LINKRTN);  /* CODE                  @ZD00001*/
         LA    @14,LINKRTN                                         0565
         ST    @14,MGPVARPT+8                                      0565
*       IF RTNCODE>CCACOMRC         /* BAD COMPRESS          @Z67SP00*/
*         THEN                      /* TERM SMP              @Z30XX9J*/
         L     @14,CCABLDLP(,CCAPTR)                               0566
         SLR   @08,@08                                             0566
         IC    @08,CCACOMRC(,@14)                                  0566
         CR    RTNCODE,@08                                         0566
         BNH   @RF00566                                            0566
*         DO;                       /* SET FLAG, MESSAGE     @Z30XX9J*/
*           COMRTNCD=MAX(COMRTNCD,STOPSMP);/* SET TO TERMINATE HMASMP
*                                                            @Z67SP00*/
         LA    @14,16                                              0568
         CR    COMRTNCD,@14                                        0568
         BNL   *+6
         LR    COMRTNCD,@14                                        0568
*           CALL HMASMCPL(STATUS);  /* STATUS CHECK          @Z67SP00*/
         L     @15,@CV01637                                        0569
         LA    @01,@AL00569                                        0569
         BALR  @14,@15                                             0569
*           COMRTNCD=MAX(COMRTNCD,RTNCODE);/*                @Z67SP00*/
         CR    COMRTNCD,RTNCODE                                    0570
         BNL   *+6
         LR    COMRTNCD,RTNCODE                                    0570
*           MGPVARPT(1)=ADDR(TXTFAIL);/* FAILED IN MSG       @Z40SP00*/
         LA    @14,@CC01659                                        0571
         ST    @14,MGPVARPT                                        0571
*           MGPTYPE=MGPTERM;        /* MESSAGE SEVERITY      @ZD00001*/
         MVI   MGPTYPE,X'05'                                       0572
*           COPYERR=ON;             /*                       @Z30XX9J*/
         OI    COPYERR,B'10000000'                                 0573
*         END;                      /*                       @Z30XX9J*/
*       ELSE                                                       0575
*         DO;                       /* NOT A SEVERE ERROR    @YA07506*/
         B     @RC00566                                            0575
@RF00566 DS    0H                                                  0576
*           IF RTNCODE=L4           /* RC=4?                 @YA07506*/
*             THEN                  /* CHANGE RC             @ZD00001*/
         CH    RTNCODE,@CH01679                                    0576
         BNE   @RF00576                                            0576
*             DO;                   /*                       @ZD00001*/
*               MGPTYPE=MGPWARN;    /* SEVERITY              @ZD00001*/
         MVI   MGPTYPE,X'02'                                       0578
*               COMRTNCD=MAX(COMRTNCD,WARNPTF);/*            @ZD00001*/
         LA    @14,4                                               0579
         CR    COMRTNCD,@14                                        0579
         BNL   *+6
         LR    COMRTNCD,@14                                        0579
*             END;                  /*                       @ZD00001*/
*           ELSE                    /* CODE IS ZERO          @ZD00001*/
*             MGPTYPE=MGPINFO;      /* MESSAGE SEVERITY      @ZD00001*/
         B     @RC00576                                            0581
@RF00576 MVI   MGPTYPE,X'01'                                       0581
*           MGPVARPT(1)=ADDR(TXTSUCC);/* SUCCESS IN MSG      @Z40SP00*/
@RC00576 LA    @14,@CC01656                                        0582
         ST    @14,MGPVARPT                                        0582
*         END;                      /*                       @YA07506*/
*       RFY                                                        0584
*         RTNCODE UNRSTD;           /*                       @SA77276*/
@RC00566 DS    0H                                                  0585
*       MGPMGNO2=ZERO;              /*                       @ZD00001*/
         SLR   @08,@08                                             0585
         STH   @08,MGPMGNO2                                        0585
*       MGPMGNO3=ZERO;              /*                       @ZD00001*/
         STH   @08,MGPMGNO3                                        0586
*       CALL HMASMMSG(HMASMMGP);    /* WRITE MSG             @Z30XX9J*/
         L     @15,@CV01638                                        0587
         LA    @01,@AL00587                                        0587
         BALR  @14,@15                                             0587
*     END;                          /* END COPYERR OFF PROCESS     0588
*                                                            @Z30XX9J*/
*   END COPYLNK;                    /*                       @Z30XX9J*/
@EL00013 DS    0H                                                  0589
@EF00013 DS    0H                                                  0589
@ER00013 LM    @14,@04,@SA00013                                    0589
         LM    @06,@12,@SA00013+28                                 0589
         BR    @14                                                 0589
         EJECT
*   END HMASMCOM                                                   0590
*                                                                  0590
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMICT)                                       */
*/*%INCLUDE SYSLIB  (HMASMMGP)                                       */
*                                                                  0590
*       ;                                                          0590
@DATA    DS    0H
@CH00086 DC    H'1'
@CH00199 DC    H'6'
@CH00034 DC    H'9'
@CH00439 DC    H'13'
@CH00447 DC    H'18'
@CH00460 DC    H'25'
@CH00487 DC    H'40'
@CH00730 DC    H'50'
@CH01006 DC    H'54'
@CH00325 DC    H'74'
@CH00519 DC    H'84'
@CH00523 DC    H'86'
@CH01649 DC    H'104'
@CH00943 DC    H'105'
@CH01895 DC    H'144'
@CH01679 DC    XL2'04'
@SM01913 MVC   BUFFER+12(0,@08),OUTPUTDD
@SM01915 MVC   BUFFER(0,@01),INPUT
@SM01917 MVC   BUFFER(0,@08),INPUTDD
         DS    0F
@AL00344 DC    A(M)                    LIST WITH   1 ARGUMENT(S)
@AL00397 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00407 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00524 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00536 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00587 DC    A(HMASMMGP)             LIST WITH   1 ARGUMENT(S)
@AL00441 DC    A(I)                    LIST WITH   1 ARGUMENT(S)
@AL00569 DC    A(STATUS)               LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@SA00009 DS    14F
@SA00010 DS    14F
@SA00012 DS    14F
@SA00002 DS    18F
@SA00003 DS    18F
@SA00006 DS    14F
@SA00007 DS    14F
@PC00007 DS    1F
@SA00013 DS    14F
@SA00011 DS    14F
@SA00008 DS    0F
@PC00008 EQU   @SA00008+56
@SA00004 DS    0F
         DS    15F
@AL00001 DS    2A
@TF00001 DS    F
         DS    0F
@CF01938 DC    F'-144'
@CF01936 DC    F'-136'
@CF01935 DC    F'-135'
@CF01937 DC    F'-112'
@CF01929 DC    F'-70'
@CF01928 DC    F'-54'
@CF01939 DC    F'-48'
@CF01927 DC    F'-46'
@CF01923 DC    F'-41'
@CF01921 DC    F'-40'
@CF01922 DC    F'-39'
@CF01925 DC    F'-31'
@CF01930 DC    F'-20'
@CF01919 DC    F'-9'
@CF01931 DC    F'-8'
@CV01634 DC    V(HMASMIO)
@CV01635 DC    V(HMASMBDL)
@CV01636 DC    V(HMASMSEC)
@CV01637 DC    V(HMASMCPL)
@CV01638 DC    V(HMASMMSG)
         DS    0D
IOPPTR   DS    A
I        DS    A
J        DS    A
M        DS    A
@CC01656 DC    C'SUCCESSFUL'
@CC01659 DC    C'FAILED    '
@CC01769 DC    C'SMPSTS  '
ICTENDCH DC    X'FFFFFFFF'
HMASMMGP DS    CL40
         ORG   HMASMMGP
MGPFIXED DS    CL12
         ORG   MGPFIXED
MGPCLEAR DS    CL6
         ORG   MGPCLEAR
MGPMGNO1 DS    FL2
MGPMGNO2 DS    FL2
MGPMGNO3 DS    FL2
         ORG   MGPFIXED+6
MGPFLAGS DS    BL2
         ORG   MGPFLAGS
MGPPRINT DS    BL1
MGPLIST  EQU   MGPFLAGS+0
MGPRPT   EQU   MGPFLAGS+0
MGPHLDS  EQU   MGPFLAGS+0
MGPWTOR  EQU   MGPFLAGS+0
MGPWTO   EQU   MGPFLAGS+0
MGPWTP   EQU   MGPFLAGS+0
@NM00225 EQU   MGPFLAGS+0
         ORG   MGPFIXED+8
MGPTYPE  DS    FL1
@NM00226 DS    CL3
         ORG   HMASMMGP+12
MGPVAR   DS    CL28
         ORG   MGPVAR
MGPVARPT DS    7A
         ORG   HMASMMGP+40
SAVRVANM DS    CL8
COPY     DC    CL11'COPY OUTDD='
INPUT    DC    CL6',INDD='
INPUTDD  DS    CL8
OUTPUTDD DS    CL8
         DS    CL1
DDNAMES  DS    CL90
         ORG   DDNAMES
DDCOUNT  DC    XL2'58'
DD1      DC    32X'00'
SYSIN    DC    CL8'SYSUT1  '
SYSPRINT DS    CL8
DD3      DC    24X'00'
DD4      DC    CL8'SYSUT2  '
DD5      DC    CL8'SYSUT3  '
         ORG   DDNAMES+90
OPTLST   DS    CL93
         ORG   OPTLST
OPTLGTH  DS    FL2
OPTVAR   DC    CL91' '
         ORG   OPTLST+93
         DS    CL7
WORKAREA DS    CL16
         ORG   WORKAREA
SAVE1    DS    CL8
SAVE2    DS    CL8
         ORG   SAVE2
@NM00230 DS    CL6
LINKRTN  DS    CL2
         ORG   LINKRTN
@NM00231 DS    CL1
@NM00232 DS    CL1
         ORG   @NM00232
SIGN     DS    BL1
         ORG   WORKAREA+16
STATUS   DS    CL1
FLAGS    DC    X'00'
         ORG   FLAGS
COPYERR  DS    BL1
COMCMPRS EQU   FLAGS+0
IRESET   EQU   FLAGS+0
TDELSW   EQU   FLAGS+0
CALLCOPY EQU   FLAGS+0
MACPASS  EQU   FLAGS+0
@NM00233 EQU   FLAGS+0
         ORG   FLAGS+1
ZEROS    DS    CL8
         ORG   ZEROS
@NM00234 DC    8X'00'
         ORG   ZEROS+8
PATCHCOM DS    CL80
         ORG   PATCHCOM
@NM00235 DC    80X'FF'
         ORG   PATCHCOM+80
         DS    CL2
SMPPTS   DC    CL8'SMPPTS '
WORK     DS    CL8
ALL      DC    CL8'ALL     '
SVCLIB   DC    CL8'SVCLIB  '
COMPRESS DC    CL8'COMPRESS'
SYSPUNCH DC    CL7'SYSPUNC'
SMPCDS   DC    CL8'SMPCDS  '
SMPACDS  DC    CL8'SMPACDS '
DELSW1   DS    BL1
         ORG   DELSW1
NODELSW  DS    BL1
@NM00242 EQU   DELSW1+0
         ORG   DELSW1+1
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
DELI     EQU   @03
COMRTNCD EQU   @05
LZ       EQU   @03
LY       EQU   @04
LX       EQU   @03
X        EQU   @03
L        EQU   @03
R        EQU   @03
H        EQU   @04
G        EQU   @03
A        EQU   @03
CCAPTR   EQU   @11
LINKREG  EQU   @02
RTNCODE  EQU   @15
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAIOPTR EQU   CCAFIOP
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCARVAD  EQU   CCAFSTA
CCAFICT  EQU   HMASMCCA+192
CCAICT   EQU   CCAFICT
CCAICPTF EQU   CCAFICT+4
CCAICMOD EQU   CCAFICT+8
CCAICLMD EQU   CCAFICT+12
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCACLST  EQU   CCAFPGM+12
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00009 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAAPPLY EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAFLAG2 EQU   CCAFFUNC+11
CCASVCLB EQU   CCAFLAG2
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCABLDLA EQU   0
@NM00025 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00027 EQU   CCABLDLL
CCALKDRC EQU   @NM00027+20
@NM00029 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00029+20
@NM00031 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00031+20
@NM00033 EQU   CCABLDLL+372
CCACOMNM EQU   @NM00033
CCACOMRS EQU   @NM00033+8
CCACOMSP EQU   @NM00033+12
CCACOMRC EQU   @NM00033+20
CCACOMPM EQU   @NM00033+24
@NM00035 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00035+20
@NM00037 EQU   CCABLDLL+620
CCAIOSUP EQU   @NM00037+8
CCASUPRC EQU   @NM00037+20
@NM00039 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00039+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
@NM00043 EQU   HMASMIOP+12
@NM00044 EQU   @NM00043
IOPDDNAM EQU   HMASMIOP+24
IOPDELDD EQU   IOPDDNAM
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00154 EQU   IOPQSMIF
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPBS02  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
HMASMICT EQU   0
ICTCORE  EQU   HMASMICT
ICTPSPLN EQU   ICTCORE
ICTMSPLN EQU   ICTCORE+4
ICTLSPLN EQU   ICTCORE+8
ICTGMSPL EQU   0
ICTPTF   EQU   0
ICTPTFS  EQU   ICTPTF
ICTPFLG1 EQU   ICTPTF+7
ICTPFLG3 EQU   ICTPTF+8
ICTPPROC EQU   ICTPFLG3
ICTPFLG5 EQU   ICTPTF+9
ICTPFLG6 EQU   ICTPTF+11
ICTPFLF  EQU   ICTPFLG6
ICTPFLG2 EQU   ICTPTF+12
ICTPFLG4 EQU   ICTPTF+13
ICTPFLG8 EQU   ICTPTF+14
ICTPFLG9 EQU   ICTPTF+15
@NM00181 EQU   ICTPFLG9
ICTPFLGA EQU   ICTPTF+16
ICTPUSR1 EQU   ICTPFLGA
ICTPCHN  EQU   ICTPTF+64
ICTPRCHN EQU   ICTPTF+68
ICTPSCHN EQU   ICTPTF+72
ICTPPCHN EQU   ICTPTF+76
ICTPICHN EQU   ICTPTF+80
ICTPNCHN EQU   ICTPTF+84
ICTPVCHN EQU   ICTPTF+88
ICTPDCHN EQU   ICTPTF+92
ICTPBCHN EQU   ICTPTF+96
ICTIXPF  EQU   0
ICTENTLS EQU   0
ICTENTNT EQU   ICTENTLS
ICTENTNM EQU   ICTENTNT
ICTENTST EQU   ICTENTNT+7
ICTREQLS EQU   0
ICTREQNT EQU   ICTREQLS
ICTREQNM EQU   ICTREQNT
ICTREQST EQU   ICTREQNT+7
ICTSUPLS EQU   0
ICTSUPNT EQU   ICTSUPLS
ICTSUPNM EQU   ICTSUPNT
ICTPRELS EQU   0
ICTPRENT EQU   ICTPRELS
ICTPRENM EQU   ICTPRENT
ICTPREST EQU   ICTPRENT+7
ICTIRQLS EQU   0
ICTIRQNT EQU   ICTIRQLS
ICTIRQNM EQU   ICTIRQNT
ICTIRQST EQU   ICTIRQNT+7
ICTCSRST EQU   ICTIRQNT+15
ICTNPRLS EQU   0
ICTNPRNT EQU   ICTNPRLS
ICTNPRNM EQU   ICTNPRNT
ICTVRSLS EQU   0
ICTVRSNT EQU   ICTVRSLS
ICTVRSNM EQU   ICTVRSNT
ICTDELLS EQU   0
ICTDELNT EQU   ICTDELLS
ICTDELNM EQU   ICTDELNT
ICTDELST EQU   ICTDELNT+7
ICTSBYLS EQU   0
ICTSBYNT EQU   ICTSBYLS
ICTSBYNM EQU   ICTSBYNT
ICTMOD   EQU   0
ICTMNAME EQU   ICTMOD
ICTMEND  EQU   ICTMNAME
ICTMFLG2 EQU   ICTMOD+8
ICTMPROC EQU   ICTMFLG2
ICTMNOGO EQU   ICTMFLG2
ICTMCPL  EQU   ICTMFLG2
ICTMDEL  EQU   ICTMFLG2
ICTMFLG1 EQU   ICTMOD+9
ICTMMODR EQU   ICTMFLG1
ICTMZAP  EQU   ICTMFLG1
ICTMXPND EQU   ICTMFLG1
ICTMMACR EQU   ICTMFLG1
ICTMMACU EQU   ICTMFLG1
ICTMSRCR EQU   ICTMFLG1
ICTMSRCU EQU   ICTMFLG1
ICTMFLG3 EQU   ICTMOD+10
ICTMALIS EQU   ICTMFLG3
ICTMFLG4 EQU   ICTMOD+11
ICTMFLG5 EQU   ICTMOD+12
ICTMODF4 EQU   ICTMOD+13
ICTMLEP1 EQU   ICTMODF4
ICTMODF5 EQU   ICTMOD+14
ICTMLEP2 EQU   ICTMODF5
ICTMODF6 EQU   ICTMOD+15
ICTMLEP3 EQU   ICTMODF6
ICTMODF7 EQU   ICTMOD+16
ICTMLEP4 EQU   ICTMODF7
ICTMACF4 EQU   ICTMOD+17
ICTTOLIB EQU   ICTMOD+32
ICTPPTR  EQU   ICTMOD+96
ICTMCHN  EQU   ICTMOD+100
ICTMICHN EQU   ICTMOD+104
ICTMACHN EQU   ICTMOD+112
ICTMTCHN EQU   ICTMOD+116
ICTMVCHN EQU   ICTMOD+120
ICTMUCHN EQU   ICTMOD+124
ICTIXMF  EQU   0
ICTMIDLS EQU   0
ICTMID   EQU   ICTMIDLS
ICTMODID EQU   ICTMID
ICTMODST EQU   ICTMID+7
ICTASMLS EQU   0
ICTASMAD EQU   ICTASMLS
ICTTALLS EQU   0
ICTTALNM EQU   ICTTALLS
ICTTALND EQU   ICTTALNM
ICTMVRLS EQU   0
ICTMVRNT EQU   ICTMVRLS
ICTMVRNM EQU   ICTMVRNT
ICTMUMLS EQU   0
ICTMUMNT EQU   ICTMUMLS
ICTMUMNM EQU   ICTMUMNT
ICTLMOD  EQU   0
ICTLMNAM EQU   ICTLMOD
ICTLNAME EQU   ICTLMNAM
ICTLEND  EQU   ICTLNAME
ICTLFLG4 EQU   ICTLMOD+8
ICTLPROC EQU   ICTLFLG4
ICTLNOGO EQU   ICTLFLG4
ICTLCPL  EQU   ICTLFLG4
ICTLFLG1 EQU   ICTLMOD+9
ICTLFLG5 EQU   ICTLMOD+10
ICTLFLG6 EQU   ICTLMOD+11
ICTLFLG7 EQU   ICTLMOD+12
ICTLFLG2 EQU   ICTLMOD+13
ICTCOPY  EQU   ICTLFLG2
ICTLDEL  EQU   ICTLFLG2
ICTLFLG3 EQU   ICTLMOD+14
ICTTIND1 EQU   ICTLFLG3
ICTTIND2 EQU   ICTLFLG3
ICTTG1   EQU   ICTLMOD+15
ICTTG2   EQU   ICTLMOD+23
ICTLCHN  EQU   ICTLMOD+34
ICTIXLF  EQU   0
ICTIXL   EQU   ICTIXLF
RVAPARM  EQU   0
RVAINFO  EQU   RVAPARM
RVAPASS  EQU   RVAPARM+12
RVASTAE  EQU   RVAPARM+20
RVAEPRNM EQU   RVASTAE+4
@NM00227 EQU   RVASTAE+16
@NM00228 EQU   RVASTAE+20
RVAFLAGS EQU   RVASTAE+24
BUFFER   EQU   0
CPRSLIST EQU   0
LISTELM  EQU   CPRSLIST
LISTFLG  EQU   CPRSLIST+8
LISTDEL  EQU   LISTFLG
BLDLLIST EQU   0
BLDLELMT EQU   BLDLLIST+4
BLDLPOS  EQU   BLDLELMT
BLDLNAME EQU   BLDLPOS
SUPBLDL  EQU   0
CCADSIDA EQU   0
CCATYPEA EQU   0
IOPBS01  EQU   0
IOPBS03  EQU   0
D        EQU   0
DELEMOD  EQU   0
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00050 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
@NM00061 EQU   IOPUDATA
@NM00062 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPABUNT EQU   IOPASMDR+1
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPLMDF2 EQU   IOPLMLEP+1
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPLMDFX EQU   IOPLMDNT+24
@NM00071 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMST  EQU   IOPRMIDE+7
IOPFMIDE EQU   IOPMACDR+9
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00082 EQU   IOPSRCDR+1
@NM00084 EQU   @NM00082+7
@NM00088 EQU   IOPSRCDR+9
IOPSRCFX EQU   IOPSRCNT+24
@NM00092 EQU   IOPSRCFX
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00098 EQU   IOPMODDR+1
@NM00100 EQU   @NM00098+7
@NM00104 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00108 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODST EQU   IOPLMODS+7
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00119 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPSYSFX EQU   IOPSYSNT+24
@NM00126 EQU   IOPSYSFX
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPPTFFX EQU   IOPPTFNT+24
@NM00135 EQU   IOPPTFFX
@NM00136 EQU   @NM00135
IOPPDTES EQU   IOPPTFFX+41
@NM00139 EQU   IOPPDTES
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPPTFG1 EQU   IOPPTSFX+34
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00164 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00164
IOPPTREL EQU   IOPPTFMD
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBLEP2 EQU   IOPBPDS+9
@NM00168 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00168
IOPBFTB1 EQU   IOPBFTB0
ICTENDNT EQU   ICTENDCH
ICTENDIX EQU   ICTENDCH
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
IOPBCEND EQU   IOPBPDS+21
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00170 EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
@NM00169 EQU   IOPBFTB1
IOPBAOSL EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBREFR EQU   IOPBLEP2
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
@NM00167 EQU   IOPBLEP2
IOPBDC   EQU   IOPBLEP2
@NM00166 EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00165 EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBRENT EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
IOPPTIND EQU   IOPPTNTR+8
IOPPTSND EQU   IOPPTREL
@NM00163 EQU   IOPPTSFX+872
IOPSYZPP EQU   IOPPTSFX+772
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZAP EQU   IOPPTSFX+755
IOPSYUPP EQU   IOPPTSFX+655
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPD EQU   IOPPTSFX+638
IOPSYSPP EQU   IOPPTSFX+538
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSUP EQU   IOPPTSFX+521
IOPSYLKP EQU   IOPPTSFX+421
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKD EQU   IOPPTSFX+404
IOPSYCPP EQU   IOPPTSFX+304
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOM EQU   IOPPTSFX+170
IOPSYASP EQU   IOPPTSFX+70
IOPSYASR EQU   IOPPTSFX+69
IOPSYASS EQU   IOPPTSFX+61
IOPSYASM EQU   IOPPTSFX+53
@NM00162 EQU   IOPPTSFX+35
@NM00161 EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPPTSNP EQU   IOPPTFG1
IOPSYPLN EQU   IOPPTSFX+32
IOPDSPFX EQU   IOPPTSFX+6
IOPDSDIR EQU   IOPDSSPC+4
IOPDSSEC EQU   IOPDSSPC+2
IOPDSPRM EQU   IOPDSSPC
@NM00160 EQU   IOPPTSDR+4
IOPPTPEM EQU   IOPPTSDR+2
IOPPCNVL EQU   IOPPTSDR+1
@NM00159 EQU   IOPPTSDR
IOPQFMTP EQU   IOPQFMLS+8
@NM00158 EQU   IOPQFMLS+7
IOPQFMND EQU   IOPQFMNM
@NM00157 EQU   IOPQFMDR
@NM00153 EQU   IOPQSMDR
@NM00152 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
IOPSBYNM EQU   IOPSBYNT
@NM00151 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00150 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00149 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00148 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00147 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00146 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00145 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00144 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00143 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00142 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00141 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
IOPPIND  EQU   IOPPNTRY+8
IOPPTFND EQU   IOPPMODS
IOPPFMID EQU   IOPPTFFX+73
@NM00140 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
IOPACCT  EQU   IOPDATES+15
IOPACCD  EQU   IOPDATES+12
IOPRSTT  EQU   IOPDATES+9
IOPRSTD  EQU   IOPDATES+6
IOPAPPT  EQU   IOPDATES+3
IOPAPPD  EQU   IOPDATES
IOPRECT  EQU   @NM00139+3
IOPRECD  EQU   @NM00139
@NM00138 EQU   IOPPTFFX+8
@NM00137 EQU   @NM00135+7
IOPPRELN EQU   @NM00136
@NM00134 EQU   IOPPTFDR+20
IOPSBYNO EQU   IOPPTFDR+13
IOPDBYNO EQU   IOPPTFDR+6
@NM00133 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPSBYP  EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00132 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPREGEN EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
IOPDUMMP EQU   IOPFLGS5
@NM00131 EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
IOPAPP   EQU   IOPFLGS5
IOPPTYPE EQU   IOPPTFDR+1
@NM00130 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
IOPSYSND EQU   IOPSYNTR
@NM00129 EQU   IOPSYSFX+21
IOPSYSID EQU   IOPSYSFX+13
IOPNUCID EQU   IOPSYSFX+12
IOPSREL  EQU   IOPSYSFX+8
@NM00128 EQU   @NM00126+7
@NM00127 EQU   @NM00126
@NM00125 EQU   IOPSYSDR+5
@NM00124 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPMTSNP EQU   IOPFLGS7
IOPPEMAX EQU   IOPSYSDR+2
IOPSCNVL EQU   IOPSYSDR+1
@NM00123 EQU   IOPSYSDR
IOPDLIND EQU   IOPDNTRY+8
IOPDLBND EQU   IOPDSYS
@NM00122 EQU   IOPDLBFX+8
@NM00121 EQU   @NM00119+7
@NM00120 EQU   @NM00119
@NM00118 EQU   IOPDLBDR+1
@NM00117 EQU   IOPDLBDR
IOPMDIND EQU   IOPMNTRY+8
@NM00116 EQU   IOPMODST
IOPMODND EQU   IOPMODID
IOPDLIB  EQU   IOPMODFX+72
@NM00115 EQU   IOPMODFX+12
@NM00114 EQU   IOPMODF4
@NM00113 EQU   IOPMODF3
@NM00112 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00111 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00110 EQU   @NM00108+7
@NM00109 EQU   @NM00108
@NM00107 EQU   IOPMODDR+17
@NM00106 EQU   @NM00104+7
@NM00105 EQU   @NM00104
@NM00103 EQU   @NM00100
@NM00102 EQU   @NM00100
@NM00101 EQU   @NM00100
@NM00099 EQU   @NM00098
@NM00097 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00096 EQU   IOPSRCST
IOPSRCND EQU   IOPSRCID
IOPSRDLB EQU   IOPSRCFX+72
IOPSRSYS EQU   IOPSRCFX+64
@NM00095 EQU   IOPSRCFX+8
@NM00094 EQU   @NM00092+7
@NM00093 EQU   @NM00092
@NM00091 EQU   IOPSRCDR+18
IOPSRLNG EQU   IOPSRCDR+17
@NM00090 EQU   @NM00088+7
@NM00089 EQU   @NM00088
@NM00087 EQU   @NM00084
@NM00086 EQU   @NM00084
@NM00085 EQU   @NM00084
@NM00083 EQU   @NM00082
@NM00081 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
IOPMCTYP EQU   IOPMCIND
@NM00080 EQU   IOPMACST
IOPMACND EQU   IOPMACID
IOPMCDLB EQU   IOPMACFX+72
IOPMCSYS EQU   IOPMACFX+64
@NM00079 EQU   IOPMACFX+8
IOPBUTYP EQU   IOPBUNT+7
IOPBUSMD EQU   IOPBUNT
@NM00078 EQU   IOPMACDR+18
IOPMCLNG EQU   IOPMACDR+17
IOPFMST  EQU   IOPFMIDE+7
IOPFMID  EQU   IOPFMIDE
@NM00077 EQU   IOPRMST
IOPRMASM EQU   IOPRMST
@NM00076 EQU   IOPRMST
IOPRMID  EQU   IOPRMIDE
@NM00075 EQU   IOPMACDR
IOPLMIND EQU   IOPLNTRY+8
IOPLMDND EQU   IOPSYSLB
@NM00073 EQU   @NM00071+7
@NM00072 EQU   @NM00071
@NM00070 EQU   IOPLMDDR+6
@NM00069 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPCOPY  EQU   IOPFLGS3
@NM00068 EQU   IOPLMDF4
@NM00067 EQU   IOPLMDF3
@NM00066 EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPNE    EQU   IOPLMDF2
@NM00065 EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPAPF   EQU   IOPFLGS2
@NM00064 EQU   IOPLMDDR
@NM00063 EQU   IOPASMDR+9
IOPABUTP EQU   IOPABUNT+7
IOPABUPT EQU   IOPABUNT
IOPNTLVL EQU   IOPASMDR
IOPALLOC EQU   @NM00062+4
IOPUSED  EQU   @NM00062
IOPTPSEQ EQU   @NM00061+8
IOPVLSER EQU   @NM00061+2
IOPBLKSI EQU   @NM00061
IOPCQMAX EQU   IOPCQMAP+12
@NM00060 EQU   IOPCQMAP+11
@NM00059 EQU   IOPCQMAP+8
@NM00058 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00057 EQU   IOPSCMAP+11
@NM00056 EQU   IOPSCMAP+8
@NM00055 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00054 EQU   IOPNTMAX+11
@NM00053 EQU   IOPNTMAX+8
@NM00052 EQU   IOPNTMAX
@NM00051 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00050+5
IOPIPTF3 EQU   @NM00050
@NM00241 EQU   SUPBLDL+12
SUPNAME  EQU   SUPBLDL+4
@NM00240 EQU   SUPBLDL+2
@NM00239 EQU   SUPBLDL
BLDLREC  EQU   BLDLELMT+10
BLDLPSTN EQU   BLDLPOS+8
@NM00238 EQU   BLDLLIST+2
@NM00237 EQU   BLDLLIST
@NM00236 EQU   LISTFLG
RVAEND   EQU   RVASTAE+25
@NM00229 EQU   RVAFLAGS
RVASDWFD EQU   RVAFLAGS
RVAVS1   EQU   RVAFLAGS
RVAMVS   EQU   RVAFLAGS
RVAUSRCH EQU   @NM00228+2
RVASYSCH EQU   @NM00228
RVAUSRCD EQU   @NM00227+2
RVASYSCD EQU   @NM00227
RVAABNDC EQU   RVASTAE+12
RVASDWAP EQU   RVASTAE
RVAREC   EQU   RVAPASS+4
RVATBL   EQU   RVAPASS
RVAMAJNM EQU   RVAINFO+8
RVACCAP  EQU   RVAINFO+4
RVAHDR   EQU   RVAINFO
@NM00224 EQU   ICTLMOD+38
ICTLTTR  EQU   ICTLMOD+31
@NM00223 EQU   ICTLFLG3
ICTLZAP  EQU   ICTLFLG3
ICTLLKD  EQU   ICTLFLG3
ICTLCPY  EQU   ICTLFLG3
ICTLXPND EQU   ICTLFLG3
@NM00222 EQU   ICTLFLG2
@NM00221 EQU   ICTLFLG2
ICTLTDEL EQU   ICTLFLG2
ICTLINK  EQU   ICTLFLG2
@NM00220 EQU   ICTLFLG7
@NM00219 EQU   ICTLFLG6
@NM00218 EQU   ICTLFLG5
ICTLPAGA EQU   ICTLFLG5
ICTLNE   EQU   ICTLFLG5
@NM00217 EQU   ICTLFLG1
ICTLDC   EQU   ICTLFLG1
ICTLREFR EQU   ICTLFLG1
ICTLOVLY EQU   ICTLFLG1
ICTLSCTR EQU   ICTLFLG1
ICTLREUS EQU   ICTLFLG1
ICTLRENT EQU   ICTLFLG1
ICTLAPF  EQU   ICTLFLG1
@NM00216 EQU   ICTLFLG4
ICTLPASS EQU   ICTLFLG4
ICTLDDCK EQU   ICTLFLG4
ICTLMSG  EQU   ICTLFLG4
@NM00215 EQU   ICTMUMNT+7
ICTMUMND EQU   ICTMUMNM
@NM00214 EQU   ICTMVRNT+7
ICTMVRND EQU   ICTMVRNM
ICTASMND EQU   ICTASMAD
ICTMIDTY EQU   ICTMODST
ICTMIDAM EQU   ICTMODST
ICTMIDRG EQU   ICTMODST
ICTMIDF1 EQU   ICTMODST
ICTMIDPL EQU   ICTMODST
ICTMIDPS EQU   ICTMODST
@NM00213 EQU   ICTMODST
ICTMIDND EQU   ICTMODID
ICTIXM   EQU   ICTIXMF
@NM00212 EQU   ICTMOD+128
ICTMICHA EQU   ICTMOD+108
@NM00211 EQU   ICTMOD+95
ICTMFMID EQU   ICTMOD+88
@NM00210 EQU   ICTMOD+87
ICTMRMID EQU   ICTMOD+80
ICTMSSI  EQU   ICTMOD+72
ICTMDOBJ EQU   ICTMOD+64
ICTMSYSL EQU   ICTMOD+56
ICTMDSTL EQU   ICTMOD+48
ICTMASLB EQU   ICTMOD+40
ICTFMLIB EQU   ICTMOD+24
ICTMRELN EQU   ICTMOD+22
@NM00209 EQU   ICTMOD+21
ICTMLANG EQU   ICTMOD+20
@NM00208 EQU   ICTMOD+19
ICTMACF5 EQU   ICTMOD+18
ICTMZMPR EQU   ICTMACF4
ICTMZOMZ EQU   ICTMACF4
ICTMDOAS EQU   ICTMACF4
ICTMXUPD EQU   ICTMACF4
ICTMFXC  EQU   ICTMACF4
ICTMFXBS EQU   ICTMACF4
ICTMHASM EQU   ICTMACF4
ICTMACDL EQU   ICTMACF4
@NM00207 EQU   ICTMLEP4
@NM00206 EQU   ICTMLEP3
@NM00205 EQU   ICTMLEP2
ICTMPAGA EQU   ICTMLEP2
ICTMNE   EQU   ICTMLEP2
@NM00204 EQU   ICTMLEP1
ICTMDC   EQU   ICTMLEP1
ICTMREFR EQU   ICTMLEP1
ICTMOVLY EQU   ICTMLEP1
ICTMSCTR EQU   ICTMLEP1
ICTMREUS EQU   ICTMLEP1
ICTMRENT EQU   ICTMLEP1
ICTMAPF  EQU   ICTMLEP1
@NM00203 EQU   ICTMFLG5
ICTMNORL EQU   ICTMFLG5
ICTMELCK EQU   ICTMFLG5
ICTMCOPY EQU   ICTMFLG5
ICTMPASS EQU   ICTMFLG5
@NM00202 EQU   ICTMFLG4
ICTMTSEL EQU   ICTMFLG4
ICTMDSTE EQU   ICTMFLG4
ICTMMIDE EQU   ICTMFLG4
ICTMASOC EQU   ICTMFLG4
ICTMSELM EQU   ICTMFLG4
ICTMIDEL EQU   ICTMFLG4
ICTMISEL EQU   ICTMFLG4
@NM00201 EQU   ICTMFLG3
ICTMPRMS EQU   ICTMFLG3
ICTMWRK  EQU   ICTMFLG3
ICTMTRX  EQU   ICTMFLG3
ICTMRELF EQU   ICTMFLG3
ICTLIBTX EQU   ICTMFLG3
ICTLIBLK EQU   ICTMFLG3
ICTMASM  EQU   ICTMMODR
ICTMMOD  EQU   ICTMMODR
@NM00200 EQU   ICTMFLG2
@NM00199 EQU   ICTMFLG2
ICTMMIDU EQU   ICTMFLG2
ICTMMSG  EQU   ICTMFLG2
@NM00198 EQU   ICTSBYNT+7
ICTSBYND EQU   ICTSBYNM
ICTDELEX EQU   ICTDELST
ICTDELND EQU   ICTDELNM
@NM00197 EQU   ICTVRSNT+7
ICTVRSND EQU   ICTVRSNM
@NM00196 EQU   ICTNPRNT+7
ICTNPRND EQU   ICTNPRNM
@NM00195 EQU   ICTCSRST
@NM00194 EQU   ICTCSRST
ICTCSRF  EQU   ICTCSRST
@NM00193 EQU   ICTCSRST
ICTCSRNM EQU   ICTIRQNT+8
@NM00192 EQU   ICTIRQST
ICTIREQT EQU   ICTIRQST
ICTIREQI EQU   ICTIRQST
ICTIREQB EQU   ICTIRQST
ICTIREQS EQU   ICTIRQST
@NM00191 EQU   ICTIRQST
ICTIRQND EQU   ICTIRQNM
@NM00190 EQU   ICTPREST
ICTPREQT EQU   ICTPREST
ICTPREQI EQU   ICTPREST
ICTPREQB EQU   ICTPREST
ICTPREQS EQU   ICTPREST
@NM00189 EQU   ICTPREST
ICTPREND EQU   ICTPRENM
@NM00188 EQU   ICTSUPNT+7
ICTSUPND EQU   ICTSUPNM
@NM00187 EQU   ICTREQST
ICTRREQT EQU   ICTREQST
ICTRREQI EQU   ICTREQST
ICTRREQB EQU   ICTREQST
ICTRREQS EQU   ICTREQST
@NM00186 EQU   ICTREQST
ICTREQND EQU   ICTREQNM
@NM00185 EQU   ICTENTST
ICTEREQT EQU   ICTENTST
ICTEREQI EQU   ICTENTST
ICTEREQB EQU   ICTENTST
ICTEREQS EQU   ICTENTST
@NM00184 EQU   ICTENTST
ICTENTND EQU   ICTENTNM
ICTIXP   EQU   ICTIXPF
@NM00183 EQU   ICTPTF+100
ICTPTPFX EQU   ICTPTF+38
ICTPRELN EQU   ICTPTF+36
ICTPRECT EQU   ICTPTF+33
ICTPRECD EQU   ICTPTF+30
ICTPVERN EQU   ICTPTF+29
ICTPFMID EQU   ICTPTF+22
ICTPSUPN EQU   ICTPTF+20
ICTPONUM EQU   ICTPTF+18
ICTPTYPE EQU   ICTPTF+17
ICTPUSR8 EQU   ICTPFLGA
ICTPUSR7 EQU   ICTPFLGA
ICTPUSR6 EQU   ICTPFLGA
ICTPUSR5 EQU   ICTPFLGA
ICTPUSR4 EQU   ICTPFLGA
ICTPUSR3 EQU   ICTPFLGA
ICTPUSR2 EQU   ICTPFLGA
ICTPPASS EQU   ICTPUSR1
@NM00182 EQU   @NM00181
ICTPRQBY EQU   @NM00181
ICTPRQOK EQU   @NM00181
ICTPRQCK EQU   @NM00181
@NM00180 EQU   ICTPFLG9
ICTPPDEL EQU   ICTPFLG9
ICTPWRKO EQU   ICTPFLG9
ICTPMSL  EQU   ICTPFLG9
@NM00179 EQU   ICTPFLG8
ICTPDCPL EQU   ICTPFLG8
ICTPECPL EQU   ICTPFLG8
ICTPGCPL EQU   ICTPFLG8
@NM00178 EQU   ICTPFLG4
@NM00177 EQU   ICTPFLG4
@NM00176 EQU   ICTPFLG4
ICTPGELM EQU   ICTPFLG4
ICTPDIMP EQU   ICTPFLG4
ICTPDEXP EQU   ICTPFLG4
ICTPREDO EQU   ICTPFLG4
ICTPCDSE EQU   ICTPFLG4
@NM00175 EQU   ICTPFLG2
ICTPRCND EQU   ICTPFLG2
ICTPTPS  EQU   ICTPFLG2
ICTPTR1  EQU   ICTPFLG2
ICTPVRSP EQU   ICTPFLG2
@NM00174 EQU   ICTPFLG6
ICTFLF   EQU   ICTPFLF
ICTPDBYP EQU   ICTPFLG6
ICTPSBYP EQU   ICTPFLG6
ICTPMDLP EQU   ICTPFLG5+1
ICTPADDP EQU   ICTPFLG5+1
@NM00173 EQU   ICTPFLG5+1
ICTPLRFP EQU   ICTPFLG5
ICTPJCLP EQU   ICTPFLG5
ICTPSUPP EQU   ICTPFLG5
ICTPREQP EQU   ICTPFLG5
ICTPPREP EQU   ICTPFLG5
ICTPNPRP EQU   ICTPFLG5
ICTPIRQP EQU   ICTPFLG5
ICTPDELP EQU   ICTPFLG5
@NM00172 EQU   ICTPFLG3
ICTPSLST EQU   ICTPFLG3
ICTPNOLB EQU   ICTPFLG3
ICTPVERJ EQU   ICTPFLG3
ICTPMSG  EQU   ICTPFLG3
ICTPCPL  EQU   ICTPFLG3
ICTPNOGO EQU   ICTPFLG3
ICTPROCS EQU   ICTPPROC
ICTREGEN EQU   ICTPFLG1
ICTBYP   EQU   ICTPFLG1
ICTDUMMP EQU   ICTPFLG1
@NM00171 EQU   ICTPFLG1
ICTERROR EQU   ICTPFLG1
ICTACC   EQU   ICTPFLG1
ICTRES   EQU   ICTPFLG1
ICTAPP   EQU   ICTPFLG1
ICTPEND  EQU   ICTPTFS
ICTLEN   EQU   ICTGMSPL+1
ICTSP    EQU   ICTGMSPL
ICTLLEN  EQU   ICTLSPLN+1
ICTLSP   EQU   ICTLSPLN
ICTMLEN  EQU   ICTMSPLN+1
ICTMSP   EQU   ICTMSPLN
ICTPLEN  EQU   ICTPSPLN+1
ICTPSP   EQU   ICTPSPLN
IOPBS04E EQU   IOPBS04+2
IOPBAPFC EQU   IOPBAPF+1
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
IOPQSMTP EQU   IOPQSMLS+8
@NM00156 EQU   IOPQSMLS+7
IOPQSMND EQU   IOPQSMNM
@NM00155 EQU   @NM00154+7
IOPQSMFM EQU   @NM00154
@NM00074 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00049 EQU   IOPUSERL
@NM00048 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00047 EQU   HMASMIOP+32
@NM00046 EQU   @NM00043+10
IOPSEQNO EQU   @NM00043+8
@NM00045 EQU   @NM00044+7
IOPPTFNM EQU   @NM00044
IOPNAM17 EQU   IOPNAME
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00042 EQU   CCABLDLM+2
@NM00041 EQU   CCABLDLM
CCAUPDPM EQU   @NM00039+24
@NM00040 EQU   @NM00039+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00039+12
CCAUPDTE EQU   @NM00039+8
CCAUPDNM EQU   @NM00039
CCASUPPM EQU   @NM00037+24
@NM00038 EQU   @NM00037+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00037+12
CCASUPNM EQU   @NM00037
CCAZAPPM EQU   @NM00035+24
@NM00036 EQU   @NM00035+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00035+12
CCASPZAP EQU   @NM00035+8
CCAZAPNM EQU   @NM00035
@NM00034 EQU   @NM00033+21
CCARCOMP EQU   CCACOMRC
CCACPYPM EQU   @NM00031+24
@NM00032 EQU   @NM00031+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00031+12
CCACOPY  EQU   @NM00031+8
CCACPYNM EQU   @NM00031
CCAASMPM EQU   @NM00029+24
@NM00030 EQU   @NM00029+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00029+12
CCAASM   EQU   @NM00029+8
CCAASMNM EQU   @NM00029
CCALKDPM EQU   @NM00027+24
@NM00028 EQU   @NM00027+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00027+12
CCALKED  EQU   @NM00027+8
CCALKDNM EQU   @NM00027
CCAPGMPM EQU   @NM00025+24
@NM00026 EQU   @NM00025+21
CCABPGRC EQU   @NM00025+20
CCABPGSP EQU   @NM00025+12
CCABPGAD EQU   @NM00025+8
CCABPGNM EQU   @NM00025
CCAEND   EQU   HMASMCCA+371
@NM00024 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00023 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00022 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00021 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00020 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00019 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00018 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00017 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00016 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00015 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00014 EQU   @NM00009+18
@NM00013 EQU   @NM00009+16
CCATBLPA EQU   @NM00009+12
@NM00012 EQU   @NM00009+8
@NM00011 EQU   @NM00009+4
@NM00010 EQU   @NM00009
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCASPDCB EQU   CCAFPGM+8
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00008 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
@NM00007 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00006 EQU   CCAFBUFR+122
@NM00005 EQU   CCAFBUFR+120
@NM00004 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00003 EQU   CCAFBUFR+88
@NM00002 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00001 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00272 EQU   @EL00002
@RF00300 EQU   @EL00004
@RC00308 EQU   @EL00005
@RF00324 EQU   @RC00322
@RF00343 EQU   @EL00006
@RF00354 EQU   @EL00007
@RF00363 EQU   @EL00007
@RF00368 EQU   @EL00007
@RF00410 EQU   @EL00008
@RF00504 EQU   @RC00502
@RC00509 EQU   @RC00502
@RC00495 EQU   @EL00012
@RF00546 EQU   @EL00013
@ENDDATA EQU   *
         END   HMASMCOM,(C'PLS1948',0802,78334)
