         TITLE 'HMASMCPL  COMPLETENESS DETERMINATION ROUTINE'
HMASMCPL CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMCPL  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  LA    @10,4095(,@12)                                      0001
         LA    @09,4095(,@10)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@10                                    0001
         USING @PSTART+8190,@09                                    0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*   CPLRTNCD=ZERO;                  /*                               */
         SLR   CPLRTNCD,CPLRTNCD                                   0204
*   IOPPTR=CCAIOPTR;                /* PTR TO IOP                    */
         MVC   IOPPTR(4),CCAIOPTR(CCAPTR)                          0205
*   HMASMMGP=''B;                   /* CLEAR MSG PARM                */
         XC    HMASMMGP(28),HMASMMGP                               0206
*   MGPHLDS=ON;                     /* ALL MSG TO LOG AND            */
*   MGPPRINT=ON;                    /* SMPOUT                        */
         OI    MGPHLDS,B'10010000'                                 0208
*   CPLSW=''B;                      /* CLEAR INTERNAL SWITCHES       */
         XC    CPLSW(2),CPLSW                                      0209
*   IF GONOGO=NOGO                  /* IF PARM INDICATED THAT        */
*       ×GONOGO=DELNOGO             /*                               */
*       ×GONOGO=STAENOGO            /*                               */
*     THEN                          /* PGM RETURN BAD RC THEN SET    */
         L     @08,@PC00001                                        0210
         CLI   GONOGO(@08),C'B'                                    0210
         BE    @RT00210                                            0210
         CLI   GONOGO(@08),C'D'                                    0210
         BE    @RT00210                                            0210
         CLI   GONOGO(@08),C'S'                                    0210
         BNE   @RF00210                                            0210
@RT00210 DS    0H                                                  0211
*     NOGOSW=ON;                    /* SW TO MAKE CHECK EASIER       */
         OI    NOGOSW,B'10000000'                                  0211
*   RFY                                                            0212
*     RTNCODE RSTD;                 /*                               */
*                                                                  0212
@RF00210 DS    0H                                                  0213
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TABLE SUBROUTINE TO ZERO OUT USER FLAGS                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0213
*   TSLPMLAD=ADDR(TSLICTSR);        /* TSL PARAMETER LIST            */
         LA    @14,TSLICTSR                                        0213
         ST    @14,TSLPMLAD                                        0213
*   TSLTBLXP=ZERO;                  /*                               */
         SLR   @14,@14                                             0214
         ST    @14,TSLTBLXP                                        0214
*   TSLFUNCT=TSLFCLRP;              /* RESET TEMP FLAGS              */
         MVI   TSLFUNCT,X'05'                                      0215
*   CALL HMASMTSB(TSLPARMS);        /* CALL TBL SUBROUTINE           */
         L     @15,@CV01870                                        0216
         LA    @01,@AL00216                                        0216
         BALR  @14,@15                                             0216
*   CPLRTNCD=MAX(CPLRTNCD,RTNCODE); /*                               */
*                                                                  0217
         CR    CPLRTNCD,RTNCODE                                    0217
         BNL   *+6
         LR    CPLRTNCD,RTNCODE                                    0217
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL ROUTINE TO GO THRU ICT AND MARK ALL ELEMENTS AND RELATED */
*   /* ICT ENTRIES COMPLETE AND NOGO (IF REQUIRED) FOR THOSE ELEMENTS*/
*   /* PROCESSED THIS TIME                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0218
*   IF CPLRTNCD<STOPFUNC            /*                               */
*     THEN                          /*                               */
         CH    CPLRTNCD,@CH00033                                   0218
         BNL   @RF00218                                            0218
*     DO;                           /*                               */
*       CALL ICTCK1;                /*                               */
         BAL   @14,ICTCK1                                          0220
*       CPLRTNCD=MAX(CPLRTNCD,RTNCODE);/*                            */
         CR    CPLRTNCD,RTNCODE                                    0221
         BNL   *+6
         LR    CPLRTNCD,RTNCODE                                    0221
*     END;                          /*                               */
*                                                                  0222
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL ROUTINE TO PUT OUT ERROR MESSAGE FOR ALL SYSMODS         */
*   /* TERMINATED DUE TO ERROR IN LAST SYSTEM UTILITY INVOKED        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0223
*   IF CPLRTNCD<STOPFUNC            /*                               */
*     THEN                          /*                               */
@RF00218 CH    CPLRTNCD,@CH00033                                   0223
         BNL   @RF00223                                            0223
*     DO;                           /*                               */
*       CALL SMDNG1;                /*                               */
         BAL   @14,SMDNG1                                          0225
*       CPLRTNCD=MAX(CPLRTNCD,RTNCODE);/*                            */
         CR    CPLRTNCD,RTNCODE                                    0226
         BNL   *+6
         LR    CPLRTNCD,RTNCODE                                    0226
*     END;                          /*                               */
*                                                                  0227
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW CALL ROUTINE TO CHECK FOR ANY SYSMODS THAT SHOULD BE      */
*   /* TERMINATED DUE TO PROCESS ERROR IN ANOTHER SYSMOD             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0228
*   IF CPLRTNCD<STOPFUNC            /*                               */
*     THEN                          /*                               */
@RF00223 CH    CPLRTNCD,@CH00033                                   0228
         BNL   @RF00228                                            0228
*     DO;                           /*                               */
*       CALL SMDNG2;                /*                               */
         BAL   @14,SMDNG2                                          0230
*       CPLRTNCD=MAX(CPLRTNCD,RTNCODE);/*                            */
         CR    CPLRTNCD,RTNCODE                                    0231
         BNL   *+6
         LR    CPLRTNCD,RTNCODE                                    0231
*     END;                          /*                               */
*                                                                  0232
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL ROUTINE TO CHECK TO SEE WHETHER ANY SYSMODS HAVE         */
*   /* COMPLETED SUCCESSFULLY OR NOT AND MARK THEM AND ALL RELATED   */
*   /* SYSMODS COMPLETE AND NOGO IF REQUIRED                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0233
*   IF CPLRTNCD<STOPFUNC            /*                               */
*     THEN                          /*                               */
@RF00228 CH    CPLRTNCD,@CH00033                                   0233
         BNL   @RF00233                                            0233
*     DO;                           /*                               */
*       CALL SMDCK1;                /*                               */
         BAL   @14,SMDCK1                                          0235
*       CPLRTNCD=MAX(CPLRTNCD,RTNCODE);/*                            */
         CR    CPLRTNCD,RTNCODE                                    0236
         BNL   *+6
         LR    CPLRTNCD,RTNCODE                                    0236
*     END;                          /*                               */
*                                                                  0237
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL ROUTINE TO CHECK FOR ANY SYSMODS THAT WERE COMPLETED     */
*   /* SUCCESSFULLY IN THIS PASS (IE ALL MODS COMPLETE AND ALL       */
*   /* REQUISITE SYSMODS SATISFIED                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0238
*   IF CPLRTNCD<STOPFUNC            /*                               */
*     THEN                          /*                               */
@RF00233 CH    CPLRTNCD,@CH00033                                   0238
         BNL   @RF00238                                            0238
*     DO;                           /*                               */
*       CALL SMDOK1;                /*                               */
         BAL   @14,SMDOK1                                          0240
*       CPLRTNCD=MAX(CPLRTNCD,RTNCODE);/*                            */
         CR    CPLRTNCD,RTNCODE                                    0241
         BNL   *+6
         LR    CPLRTNCD,RTNCODE                                    0241
*     END;                          /*                               */
*                                                                  0242
*   /*****************************************************************/
*   /*                                                               */
*   /* IF PREVIOUS FUNCTIONS OK THEN CALL ROUTINE TO CHECK TO SEE IF */
*   /* ANY LMODS WERE COMPLETED DURING THIS PASS AND MARK LMODS      */
*   /* COMPLETE                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0243
*   IF CPLRTNCD<STOPFUNC            /*                               */
*     THEN                          /*                               */
@RF00238 CH    CPLRTNCD,@CH00033                                   0243
         BNL   @RF00243                                            0243
*     DO;                           /*                               */
*       CALL LMDCK1;                /*                               */
         BAL   @14,LMDCK1                                          0245
*       CPLRTNCD=MAX(CPLRTNCD,RTNCODE);/*                            */
         CR    CPLRTNCD,RTNCODE                                    0246
         BNL   *+6
         LR    CPLRTNCD,RTNCODE                                    0246
*     END;                          /*                               */
*                                                                  0247
*   /*****************************************************************/
*   /*                                                               */
*   /* PRIOR TO RETURNING CALL ROUTINE TO GO THRU AND TURN OFF THE IN*/
*   /* PROCESS INDICATOR FOR ALL THOSE ELEMENTS THAT ARE MARKED      */
*   /* COMPLETED                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0248
*   CALL CPLRESET;                  /*                               */
@RF00243 BAL   @14,CPLRESET                                        0248
*   CPLRTNCD=MAX(CPLRTNCD,RTNCODE); /* SAVE RC                       */
*                                                                  0249
         CR    CPLRTNCD,RTNCODE                                    0249
         BNL   *+6
         LR    CPLRTNCD,RTNCODE                                    0249
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0250
*   RETURN CODE(CPLRTNCD);          /*                               */
         LR    @15,CPLRTNCD                                        0250
         L     @13,4(,@13)                                         0250
         L     @14,12(,@13)                                        0250
         LM    @00,@12,20(@13)                                     0250
         BR    @14                                                 0250
*   RFY                                                            0251
*     RTNCODE UNRSTD;               /*                               */
         EJECT
*                                                                  0252
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS CALLED UPON ENTRY TO SEARCH THRU THE ICT TO   */
*   /* DETERMINE WHICH LMOD, MOD, AND SYSMOD WERE POTENTIALLY        */
*   /* COMPLETED DURING THE LAST INVOCATION OF THE SYSTEM UTILITY    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0252
*ICTCK1:                            /*                               */
*   PROCEDURE;                      /*                               */
ICTCK1   STM   @14,@12,@SA00002                                    0252
*   DECLARE                         /*                               */
*     M1PTR PTR(31),                /* PTR FOR ICT MOD LOOP          */
*     MX1 FIXED(31),                /* INDEX THRU MODS INDEX         */
*     M3PTR PTR(31),                /* PTR FOR ICT MOD LOOP          */
*     L1PTR PTR(31),                /* PTR FOR ICT LMOD LOOP         */
*     LX1 FIXED(31);                /* INDEX THRU LMOD INDEX         */
*   DECLARE                         /*                               */
*     OK1NGSET CHAR(1);             /*                               */
*   RFY                                                            0255
*     ICTMOD BASED(M1PTR);          /* MOD BASED ON LOOP PTR         */
*                                                                  0255
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THRU ALL MOD ENTRIES TO SEE IF ANY MODS WERE LEFT AS     */
*   /* NON-SELECTED BUT WITHOUT ANOTHER RELATED SELECTED ELEMENT.    */
*   /* THIS COULD HAPPEN WHEN THE CDS/ACDS INDICATES THAT A HIGHER   */
*   /* LEVEL OF THE MODULE ALREADY EXISTS. THUS ALL MODS FOR A SYSMOD*/
*   /* COULD BE NON-SELECTED.                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0256
*   DO M1PTR=CCAICMOD BY LENGTH(ICTMOD(1)) WHILE(/* MOD LOOP         */
*         ICTMEND(1)^=ICTENDNT);    /* TILL END                      */
         L     M1PTR,CCAICMOD(,CCAPTR)                             0256
         B     @DE00256                                            0256
@DL00256 DS    0H                                                  0257
*     IF ICTMISEL(1)=OFF            /* IF ELEMENT NOT SELECTED       */
*         &ICTMCPL(1)=OFF           /* AND NOT COMPLETE YET          */
*       THEN                        /*                               */
         TM    ICTMISEL(M1PTR),B'10000000'                         0257
         BNZ   @RF00257                                            0257
         TM    ICTMCPL(M1PTR),B'00100000'                          0257
         BNZ   @RF00257                                            0257
*       DO;                         /*                               */
*         STOP=OFF;                 /*                               */
         NI    STOP,B'10111111'                                    0259
*         DO M3PTR=CCAICMOD BY LENGTH(ICTMOD(1)) WHILE(/* MOD LOOP   */
*               M3PTR->ICTMEND(1)^=ICTENDNT/* TILL END               */
*               &STOP=OFF);         /* OR RELATED ELEMENT FOUND      */
         L     M3PTR,CCAICMOD(,CCAPTR)                             0260
         B     @DE00260                                            0260
@DL00260 DS    0H                                                  0261
*           IF M1PTR^=M3PTR         /* IF NOT SAME ELEMENT ENTRY     */
*               &ICTMNAME(1)=M3PTR->ICTMNAME(1)/* NAMES THE SAME     */
*               &M3PTR->ICTMISEL(1)=ON/* AND ELEMENT SELECTED        */
*             THEN                  /*                               */
         CR    M1PTR,M3PTR                                         0261
         BE    @RF00261                                            0261
         CLC   ICTMNAME(8,M1PTR),ICTMNAME(M3PTR)                   0261
         BNE   @RF00261                                            0261
         TM    ICTMISEL(M3PTR),B'10000000'                         0261
         BNO   @RF00261                                            0261
*             DO;                   /*                               */
*               IF ICTMFLG1(1)=M3PTR->ICTMFLG1(1)/* AND SAME TYPE    */
*                 THEN              /*                               */
         CLC   ICTMFLG1(1,M1PTR),ICTMFLG1(M3PTR)                   0263
         BNE   @RF00263                                            0263
*                 STOP=ON;          /* STOP SEARCH                   */
         OI    STOP,B'01000000'                                    0264
*               ELSE                /*                               */
*                 IF ICTMASM(1)=ON&M3PTR->ICTMMOD(1)=ON/* MOD/ASM PR */
*                   THEN            /*                               */
         B     @RC00263                                            0265
@RF00263 TM    ICTMASM(M1PTR),B'01000000'                          0265
         BNO   @RF00265                                            0265
         TM    ICTMMOD(M3PTR),B'10000000'                          0265
         BNO   @RF00265                                            0265
*                   STOP=ON;        /* STOP SEARCH                   */
         OI    STOP,B'01000000'                                    0266
*                 ELSE              /*                               */
*                   IF ICTMMOD(1)=ON&M3PTR->ICTMASM(1)=ON/* ASM/MOD  */
*                     THEN          /*                               */
         B     @RC00265                                            0267
@RF00265 TM    ICTMMOD(M1PTR),B'10000000'                          0267
         BNO   @RF00267                                            0267
         TM    ICTMASM(M3PTR),B'01000000'                          0267
         BNO   @RF00267                                            0267
*                     STOP=ON;      /* STOP SEARCH                   */
         OI    STOP,B'01000000'                                    0268
*             END;                  /*                               */
@RF00267 DS    0H                                                  0269
@RC00265 DS    0H                                                  0269
@RC00263 DS    0H                                                  0270
*         END;                      /* END SEARCH FOR RELATED ELEM   */
@RF00261 AH    M3PTR,@CH02175                                      0270
@DE00260 CLC   ICTMEND(4,M3PTR),ICTENDNT                           0270
         BE    @DC00260                                            0270
         TM    STOP,B'01000000'                                    0270
         BZ    @DL00260                                            0270
@DC00260 DS    0H                                                  0271
*         IF STOP=OFF               /* IF NO RELATED ELEMENT FOUND   */
*           THEN                    /*                               */
         TM    STOP,B'01000000'                                    0271
         BNZ   @RF00271                                            0271
*           DO;                     /*                               */
*             ICTMPROC(1)=ON;       /* MOD IN PROCESS                */
*             ICTMCPL(1)=ON;        /* MOD COMPLETE                  */
         OI    ICTMPROC(M1PTR),B'10100000'                         0274
*           END;                    /*                               */
*       END;                        /* END ELEMENT NOT SELECTED      */
@RF00271 DS    0H                                                  0277
*   END;                            /* END ICT MOD LOOP              */
@RF00257 AH    M1PTR,@CH02175                                      0277
@DE00256 CLC   ICTMEND(4,M1PTR),ICTENDNT                           0277
         BNE   @DL00256                                            0277
*                                                                  0278
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THRU ALL LMODS AND IF LMOD IN PROCESS THEN ALL MODS FOR  */
*   /* LMOD ALSO IN PROCESS. IF LMOD NOGO THEN ALL MODS NOGO. IF LMOD*/
*   /* MARKED IN PROCESS THEN CALL MUST BE AFTER LINK OR COPY SO DO  */
*   /* NOT MARK ZAPS FOR THAT LMOD AS COMPLETED YET.                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0278
*   RFY                                                            0278
*     ICTLMOD BASED(L1PTR);         /* BASE FOR ICT LMODS            */
*   RFY                                                            0279
*     ICTIXLF BASED(ICTLCHN(1));    /* LMOD TO MOD INDEX LIST        */
*   RFY                                                            0280
*     ICTMOD BASED(ICTIXL(LX1));    /* MOD BASED ON LMOD CHAIN       */
*   DO L1PTR=CCAICLMD BY LENGTH(ICTLMOD(1)) WHILE(/* LMOD LOOP       */
*         ICTLEND(1)^=ICTENDNT);    /*                               */
         L     L1PTR,CCAICLMD(,CCAPTR)                             0281
         B     @DE00281                                            0281
@DL00281 DS    0H                                                  0282
*     IF ICTLPROC(1)=ON             /* IF LMOD PROCESSED IN THIS PASS*/
*       THEN                        /*                               */
         TM    ICTLPROC(L1PTR),B'10000000'                         0282
         BNO   @RF00282                                            0282
*       DO;                         /*                               */
*         ICTLCPL(1)=ON;            /* LMOD IS COMPLETE              */
         OI    ICTLCPL(L1PTR),B'00100000'                          0284
*         IF NOGOSW=ON              /* IF ERR IN PROCESS             */
*           THEN                    /*                               */
         TM    NOGOSW,B'10000000'                                  0285
         BNO   @RF00285                                            0285
*           ICTLNOGO(1)=ON;         /* LMOD IS NOGO                  */
         OI    ICTLNOGO(L1PTR),B'01000000'                         0286
*         DO LX1=1 BY 1 WHILE(      /* LOOP THRU ALL LMOD TO MOD     */
*               ICTIXL(LX1)^=ICTENDIX);/* INDEX LIST                 */
@RF00285 LA    LX1,1                                               0287
         B     @DE00287                                            0287
@DL00287 DS    0H                                                  0288
*           IF ICTMZAP(1)=OFF       /* IF MOD IS NOT ZAP             */
*             THEN                  /* THEN MOD IN PROCESS           */
         LR    @08,LX1                                             0288
         SLA   @08,2                                               0288
         L     @01,ICTLCHN(,L1PTR)                                 0288
         AL    @01,@CF02213                                        0288
         L     @08,ICTIXL(@08,@01)                                 0288
         TM    ICTMZAP(@08),B'00100000'                            0288
         BNZ   @RF00288                                            0288
*             DO;                   /*                               */
*               ICTMPROC(1)=ON;     /* MOD ALSO PROCESSED THIS PASS  */
         OI    ICTMPROC(@08),B'10000000'                           0290
*               IF NOGOSW=ON        /* IF LMOD NOGO                  */
*                 THEN              /* THEN                          */
         TM    NOGOSW,B'10000000'                                  0291
         BNO   @RF00291                                            0291
*                 DO;               /*                               */
*                   ICTMNOGO(1)=ON; /* MOD ALSO NOGO                 */
*                   ICTMCPL(1)=ON;  /* MOD ALSO COMPLETE             */
         OI    ICTMNOGO(@08),B'01100000'                           0294
*                 END;              /*                               */
*             END;                  /*                               */
@RF00291 DS    0H                                                  0297
*         END;                      /* END LOOP THRU LMOD TO MOD     */
@RF00288 AH    LX1,@CH00037                                        0297
@DE00287 LR    @08,LX1                                             0297
         SLA   @08,2                                               0297
         L     @01,ICTLCHN(,L1PTR)                                 0297
         AL    @01,@CF02213                                        0297
         L     @08,ICTIXL(@08,@01)                                 0297
         CL    @08,ICTENDIX                                        0297
         BNE   @DL00287                                            0297
*       END;                        /* END LMOD PROCESSED THIS PASS  */
*   END;                            /* END LOOP THRU LMODS           */
@RF00282 AH    L1PTR,@CH01013                                      0299
@DE00281 CLC   ICTLEND(4,L1PTR),ICTENDNT                           0299
         BNE   @DL00281                                            0299
*                                                                  0300
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW LOOP THRU ALL ICT MODS AND IF ANY MOD IN PROCESS THEN PTF */
*   /* FOR THAT MOD ALSO IN PROCESS. IF MOD IS NOGO THEN PTF IS ALSO */
*   /* NOGO IF TYPE MOD ENTRY IS MOD OR ZAP AND NOT COMPLETE THEN IF */
*   /* ALL LMODS ARE COMPLETE OR IF NO LMODS THEM MOD CPL.           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0300
*   RFY                                                            0300
*     ICTMOD BASED(M1PTR);          /* BASE FOR ICT MODS             */
*   RFY                                                            0301
*     ICTPTF BASED(ICTPPTR(1));     /* PTF BASED ON PTR FROM MOD     */
*   RFY                                                            0302
*     ICTIXMF BASED(ICTMCHN(1));    /* MOD TO LMOD CHAIN             */
*   RFY                                                            0303
*     ICTLMOD BASED(ICTIXM(MX1));   /* LMOD BASED ON MOD CHAIN PTR   */
*   DO M1PTR=CCAICMOD BY LENGTH(ICTMOD(1)) WHILE(/* MOD LOOP         */
*         ICTMEND(1)^=ICTENDNT);    /* TILL END                      */
         L     M1PTR,CCAICMOD(,CCAPTR)                             0304
         B     @DE00304                                            0304
@DL00304 DS    0H                                                  0305
*     IF ICTMPROC(1)=ON             /* IF MOD PROCESSED IN THIS PASS */
*       THEN                        /*                               */
         TM    ICTMPROC(M1PTR),B'10000000'                         0305
         BNO   @RF00305                                            0305
*       DO;                         /*                               */
*         ICTPPROC(1)=ON;           /* PTF IN PROCESS ALSO           */
         L     @08,ICTPPTR(,M1PTR)                                 0307
         OI    ICTPPROC(@08),B'10000000'                           0307
*         IF NOGOSW=ON              /* IF PROCESS FAILED             */
*           THEN                    /* THEN                          */
         TM    NOGOSW,B'10000000'                                  0308
         BNO   @RF00308                                            0308
*           DO;                     /*                               */
*             ICTMNOGO(1)=ON;       /* MARK MOD NOGO                 */
*             ICTMCPL(1)=ON;        /* MARK MOD COMPLETE             */
         OI    ICTMNOGO(M1PTR),B'01100000'                         0311
*             ICTPNOGO(1)=ON;       /* MARK PTF NOGO                 */
*             ICTPCPL(1)=ON;        /* MARK PTF COMPLETED            */
         L     @08,ICTPPTR(,M1PTR)                                 0313
         OI    ICTPNOGO(@08),B'01100000'                           0313
*           END;                    /* END MOD NOGO                  */
*         IF ICTMMACR(1)=ON         /* IF MAC REPLACEMENT            */
*             ×ICTMMACU(1)=ON       /* OR MAC UPDATE                 */
*             ×ICTMSRCR(1)=ON       /* OR SRC REPLACEMENT            */
*             ×ICTMSRCU(1)=ON       /* OR SRC UPATE                  */
*             ×ICTMZAP(1)=ON        /* OR ZAP                        */
*             ×(ICTMMOD(1)=ON       /* OR MOD                        */
*             &ICTMIDEL(1)=ON)      /* ... TO BE DELETED (NO LMODS)  */
*             ×(ICTMASM(1)=ON       /* OR ASSEM THAT IS NOT TO BE    */
*             &ICTMMOD(1)=OFF)      /* LINKED(ASSEM NOT FOUND)       */
*           THEN                    /* THEN PROCESSING IS COMPLETED  */
@RF00308 TM    ICTMMACR(M1PTR),B'00101111'                         0315
         BNZ   @RT00315                                            0315
         TM    ICTMMOD(M1PTR),B'10000000'                          0315
         BNO   @GL00009                                            0315
         TM    ICTMIDEL(M1PTR),B'01000000'                         0315
         BO    @RT00315                                            0315
@GL00009 TM    ICTMASM(M1PTR),B'01000000'                          0315
         BNO   @RF00315                                            0315
         TM    ICTMMOD(M1PTR),B'10000000'                          0315
         BNZ   @RF00315                                            0315
@RT00315 DS    0H                                                  0316
*           ICTMCPL(1)=ON;          /* FOR THESE ELEMENTS SINCE IT IS
*                                      DONE ON THE MODULE CONTROL  0316
*                                      LEVEL                         */
         OI    ICTMCPL(M1PTR),B'00100000'                          0316
*       END;                        /* END MOD PROCESSED IN THIS PASS*/
@RF00315 DS    0H                                                  0318
*     IF ICTMCPL(1)=OFF             /* IF MOD NOT COMPLETE YET       */
*         &ICTMISEL(1)=ON           /* AND MOD SELECTED              */
*         &ICTMIDEL(1)=OFF          /* AND MOD NOT DELETED           */
*         &(ICTMMOD(1)=ON           /* AND TYPE=MOD                  */
*         ×ICTMXPND(1)=ON)          /* OR EXPAND ZAP                 */
*       THEN                        /*                               */
@RF00305 TM    ICTMCPL(M1PTR),B'00100000'                          0318
         BNZ   @RF00318                                            0318
         TM    ICTMISEL(M1PTR),B'10000000'                         0318
         BNO   @RF00318                                            0318
         TM    ICTMIDEL(M1PTR),B'01000000'                         0318
         BNZ   @RF00318                                            0318
         TM    ICTMMOD(M1PTR),B'10010000'                          0318
         BZ    @RF00318                                            0318
*       DO;                         /*                               */
*                                                                  0319
*         /***********************************************************/
*         /*                                                         */
*         /* CHECK ALL LMODS FOR NON-DELETED MOD ENTRIES             */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0320
*         ICTMCPL(1)=ON;            /* ASSUME ALL LMODS FOR MOD CPL  */
         OI    ICTMCPL(M1PTR),B'00100000'                          0320
*         DO MX1=1 BY 1 WHILE(      /* LOOP THRU MOD TO LMOD INDEX   */
*               ICTIXM(MX1)^=ICTENDIX);/* TILL END                   */
         LA    MX1,1                                               0321
         B     @DE00321                                            0321
@DL00321 DS    0H                                                  0322
*           IF ICTLCPL(1)=OFF       /* IF LMOD NOT COMPLETE          */
*             THEN                  /* THEN                          */
         LR    @08,MX1                                             0322
         SLA   @08,2                                               0322
         L     @01,ICTMCHN(,M1PTR)                                 0322
         AL    @01,@CF02213                                        0322
         L     @08,ICTIXM(@08,@01)                                 0322
         TM    ICTLCPL(@08),B'00100000'                            0322
         BNZ   @RF00322                                            0322
*             ICTMCPL(1)=OFF;       /* MOD NOT COMPLETE              */
         NI    ICTMCPL(M1PTR),B'11011111'                          0323
*         END;                      /* END MOD TO LOM INDEX LOOP     */
@RF00322 AH    MX1,@CH00037                                        0324
@DE00321 LR    @08,MX1                                             0324
         SLA   @08,2                                               0324
         L     @01,ICTMCHN(,M1PTR)                                 0324
         AL    @01,@CF02213                                        0324
         L     @08,ICTIXM(@08,@01)                                 0324
         CL    @08,ICTENDIX                                        0324
         BNE   @DL00321                                            0324
*         IF ICTMCPL(1)=ON          /* IF MOD COMPLETE THEN          */
*           THEN                    /*                               */
         TM    ICTMCPL(M1PTR),B'00100000'                          0325
         BNO   @RF00325                                            0325
*           DO;                     /*                               */
*             ICTMPROC(1)=ON;       /* INSURE ALSO IN PROCESS        */
         OI    ICTMPROC(M1PTR),B'10000000'                         0327
*             ICTPPROC(1)=ON;       /*                               */
         L     @08,ICTPPTR(,M1PTR)                                 0328
         OI    ICTPPROC(@08),B'10000000'                           0328
*           END;                    /*                               */
*       END;                        /* END MOD NOT COMPLETE YET      */
@RF00325 DS    0H                                                  0331
*   END;                            /* END LOOP THRU MODS            */
@RF00318 AH    M1PTR,@CH02175                                      0331
@DE00304 CLC   ICTMEND(4,M1PTR),ICTENDNT                           0331
         BNE   @DL00304                                            0331
*                                                                  0332
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP CALLING ROUTINES TO MARK ALL RELATED ELEMENTS AS IN      */
*   /* PROCESS AND POSSIBLY NOGO AND THEN CALL ROUTINE TO MARK ALL   */
*   /* ELEMENTS OF NOGO SYSMODS AS NOGO AND COMPLETE. THIS LOOP      */
*   /* CONTINUES UNTIL NO MORE SYSMODS ARE MARKED NOGO.              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0332
*   OK1NGSET=YES;                   /* ALLOW LOOP TO START           */
         MVI   OK1NGSET,C'Y'                                       0332
*   DO WHILE(OK1NGSET=YES);         /* LOOP TILL NO PTFS MARKED NOGO */
         B     @DE00333                                            0333
@DL00333 DS    0H                                                  0334
*     OK1NGSET=NO;                  /* SET TO STOP LOOP AFTER THIS   */
         MVI   OK1NGSET,C'N'                                       0334
*     CALL CPLRELEM(OK1NGSET);      /* CHECK FOR RELATED ELEMENTS    */
         LA    @01,@AL00335                                        0335
         BAL   @14,CPLRELEM                                        0335
*     CALL CPLMODNG;                /* MARK MODS FOR NOGO PTF NOGO   */
         BAL   @14,CPLMODNG                                        0336
*   END;                            /*                               */
@DE00333 CLI   OK1NGSET,C'Y'                                       0337
         BE    @DL00333                                            0337
*   RETURN CODE(ZERO);              /*                               */
         SLR   @15,@15                                             0338
         L     @14,@SA00002                                        0338
         LM    @00,@12,@SA00002+8                                  0338
         BR    @14                                                 0338
*   END ICTCK1;                     /*                               */
         EJECT
*                                                                  0340
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS CALLED AFTER INITIAL CHECKING OF THE ICT. ALL */
*   /* SYSMODS THAT ARE MARKED NOGO AT THIS TIME HAVE BEEN MARKED AS */
*   /* SUCH DUE TO AN ERROR IN ONE OF THE UTILITIES THAT WAS INVOKED */
*   /* FOR ONE OF THE ELEMENTS OF THE SYSMOD. ISSUE A MESSAGE FOR THE*/
*   /* SYSMOD INDICATING FUNCTION FAILED AND CAUSE WAS UTILITY       */
*   /* FAULURE                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0340
*SMDNG1:                            /*                               */
*   PROCEDURE;                      /*                               */
SMDNG1   STM   @14,@12,@SA00003                                    0340
*   DECLARE                         /*                               */
*     P4PTR PTR(31);                /* PTR FOR ICT PTF LOOP          */
*   RFY                                                            0342
*     ICTPTF BASED(P4PTR);          /*                               */
*   DO P4PTR=CCAICPTF BY LENGTH(ICTPTF(1)) WHILE(/* PTF LOOP         */
*         ICTPEND(1)^=ICTENDNT);    /* TILL END                      */
         L     P4PTR,CCAICPTF(,CCAPTR)                             0343
         B     @DE00343                                            0343
@DL00343 DS    0H                                                  0344
*     IF ICTPPROC(1)=ON             /* IF PTF IN PROCESS             */
*         &(ICTPNOGO(1)=ON          /* AND NOGO                      */
*         ×GONOGO=STAENOGO)         /* OR CALL FROM STAE RECOVERY    */
*         &ICTPMSG(1)=OFF           /* AND NO MSG ISSUED YET         */
*       THEN                        /*                               */
         TM    ICTPPROC(P4PTR),B'10000000'                         0344
         BNO   @RF00344                                            0344
         TM    ICTPNOGO(P4PTR),B'01000000'                         0344
         BO    @GL00014                                            0344
         L     @08,@PC00001                                        0344
         CLI   GONOGO(@08),C'S'                                    0344
         BNE   @RF00344                                            0344
@GL00014 TM    ICTPMSG(P4PTR),B'00010000'                          0344
         BNZ   @RF00344                                            0344
*       DO;                         /* ISSUE ERROR MESSAGE           */
*         ICTPNOGO(1)=ON;           /* SET SYSMOD IN ERROR AND       */
*         ICTPCPL(1)=ON;            /* COMPLETE (IN CASE SER CALL)   */
*         ICTPMSG(1)=ON;            /* INDICATE MSG WRITTEN          */
         OI    ICTPNOGO(P4PTR),B'01110000'                         0348
*         MGPCLEAR=''B;             /* ZERO MSG PARM                 */
         XC    MGPCLEAR(6),MGPCLEAR                                0349
*         MGPMGNO1=HMA302I;         /* XXXXXXX PROCESSING TERMINATED
*                                      FOR SYSMOD XXXXXXX - REASON = */
         MVC   MGPMGNO1(2),@CH01873                                0350
*         IF GONOGO=NOGO            /* IF UTILITY FAILURE            */
*           THEN                    /*                               */
         L     @08,@PC00001                                        0351
         CLI   GONOGO(@08),C'B'                                    0351
         BNE   @RF00351                                            0351
*           MGPMGNO2=PART104;       /* SYSTEM UTILITY FAILURE        */
         MVC   MGPMGNO2(2),@CH01880                                0352
*         ELSE                      /*                               */
*           IF GONOGO=DELNOGO       /* IF CALL FROM DELETE           */
*             THEN                  /*                               */
         B     @RC00351                                            0353
@RF00351 L     @08,@PC00001                                        0353
         CLI   GONOGO(@08),C'D'                                    0353
         BNE   @RF00353                                            0353
*             MGPMGNO2=PART028;     /* DELETE PROCESSING FAILURE     */
         MVC   MGPMGNO2(2),@CH00476                                0354
*           ELSE                    /* MUST BE CALL FROM STAE        */
*             MGPMGNO2=PART030;     /* SYSTEM ABEND                  */
         B     @RC00353                                            0355
@RF00353 MVC   MGPMGNO2(2),@CH00480                                0355
*         MGPVARPT(1)=ADDR(CCAFUNCT);/* FUNCTION                     */
@RC00353 DS    0H                                                  0356
@RC00351 LA    @08,CCAFUNCT(,CCAPTR)                               0356
         ST    @08,MGPVARPT                                        0356
*         MGPVARPT(2)=ADDR(ICTPTFS(1));/* SYSMOD NUMBER              */
         ST    P4PTR,MGPVARPT+4                                    0357
*         MGPTYPE=MGPINFO;          /* INFO ONLY                     */
         MVI   MGPTYPE,X'01'                                       0358
*         CALL HMASMMSG(HMASMMGP);  /* WRITE MSG                     */
         L     @15,@CV01866                                        0359
         LA    @01,@AL00359                                        0359
         BALR  @14,@15                                             0359
*       END;                        /* END PTF INPROCESS/NOGO        */
*   END;                            /* END ICT PTF LOOP              */
@RF00344 AH    P4PTR,@CH02176                                      0361
@DE00343 CLC   ICTPEND(4,P4PTR),ICTENDNT                           0361
         BNE   @DL00343                                            0361
*   RETURN CODE(ZERO);              /*                               */
         SLR   @15,@15                                             0362
         L     @14,@SA00003                                        0362
         LM    @00,@12,@SA00003+8                                  0362
         BR    @14                                                 0362
*   END SMDNG1;                     /*                               */
         EJECT
*                                                                  0364
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS CALLED TO CHECK FOR ANY SYSMODS THAT HAVE A   */
*   /* DEPENDENCY ON ANOTHER SYSMOD THAT WAS MARKED NOGO DUE TO A    */
*   /* PROCESSING ERROR                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0364
*SMDNG2:                            /*                               */
*   PROCEDURE;                      /*                               */
SMDNG2   STM   @14,@12,@SA00004                                    0364
*   DECLARE                         /*                               */
*     P9PTR PTR(31);                /* PTR FOR ICT PTF LOOP          */
*   DECLARE                         /*                               */
*     NGSET CHAR(1);                /*                               */
*   RFY                                                            0367
*     ICTPTF BASED(P9PTR);          /* ICT PTF SECTION BASE          */
*   RFY                                                            0368
*     ICTPRELS BASED(ICTPPCHN(1));  /* PRE LIST                      */
*   RFY                                                            0369
*     ICTREQLS BASED(ICTPRCHN(1));  /* REQ LIST                      */
*   RFY                                                            0370
*     ICTIRQLS BASED(ICTPICHN(1));  /* IFREQ LIST                    */
*   RFY                                                            0371
*     ICTSUPLS BASED(ICTPSCHN(1));  /* SUP LIST                      */
*   RFY                                                            0372
*     ICTDELLS BASED(ICTPDCHN(1));  /* DELETE LIST                   */
*   NGSET=YES;                      /*                               */
         MVI   NGSET,C'Y'                                          0373
*   DO WHILE NGSET=YES;             /* LOOP TILL NO SYSMODS STOPPED  */
         B     @DE00374                                            0374
@DL00374 DS    0H                                                  0375
*     NGSET=NO;                     /* STOP LOOP                     */
         MVI   NGSET,C'N'                                          0375
*     DO P9PTR=CCAICPTF BY LENGTH(ICTPTF(1)) WHILE(/* ICT PTF LOOP   */
*           ICTPEND(1)^=ICTENDNT);  /* TILL END                      */
*                                                                  0376
         L     P9PTR,CCAICPTF(,CCAPTR)                             0376
         B     @DE00376                                            0376
@DL00376 DS    0H                                                  0377
*       /*************************************************************/
*       /*                                                           */
*       /* IF ANY PRE SYSMODS WERE MARKED NOGO THEN CURRENT SYSMOD IS*/
*       /* ALSO MARKED NOGO AND MESSAGE IS ISSUED.                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0377
*       CALL NG2PRECK(ICTPTF(1),ICTPPCHN(1),LENGTH(ICTPRELS(1)),PART108
*           ,NGSET);                /*                               */
*                                                                  0377
         MVC   @AL00001+8(12),@AL00377                             0377
         ST    P9PTR,@AL00001                                      0377
         LA    @08,ICTPPCHN(,P9PTR)                                0377
         ST    @08,@AL00001+4                                      0377
         LA    @01,@AL00001                                        0377
         BAL   @14,NG2PRECK                                        0377
*       /*************************************************************/
*       /*                                                           */
*       /* IF ANY REQ SYSMODS WERE MARKED NOGO THEN CURRENT SYSMOD IS*/
*       /* ALSO MARKED NOGO AND MESSAGE IS ISSUED.                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0378
*       CALL NG2REQCK(ICTPTF(1),ICTPRCHN(1),LENGTH(ICTREQLS(1)),PART106
*           ,NGSET);                /*                               */
*                                                                  0378
         MVC   @AL00001+8(12),@AL00378                             0378
         ST    P9PTR,@AL00001                                      0378
         LA    @08,ICTPRCHN(,P9PTR)                                0378
         ST    @08,@AL00001+4                                      0378
         LA    @01,@AL00001                                        0378
         BAL   @14,NG2REQCK                                        0378
*       /*************************************************************/
*       /*                                                           */
*       /* IF ANY IFREQ SYSMODS WERE MARKED NOGO THEN CURRENT SYSMOD */
*       /* IS ALSO MARKED NOGO AND MESSAGE IS ISSUED.                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0379
*       CALL NG2IRQCK(ICTPTF(1),ICTPICHN(1),LENGTH(ICTIRQLS(1)),PART107
*           ,NGSET);                /*                               */
*                                                                  0379
         MVC   @AL00001+8(12),@AL00379                             0379
         ST    P9PTR,@AL00001                                      0379
         LA    @08,ICTPICHN(,P9PTR)                                0379
         ST    @08,@AL00001+4                                      0379
         LA    @01,@AL00001                                        0379
         BAL   @14,NG2IRQCK                                        0379
*       /*************************************************************/
*       /*                                                           */
*       /* IF CURRENT SYSMOD HAS NOT YET BEEN MARKED NOGO NUT FMID   */
*       /* SYSMOD IS NOGO THEN CURRENT SYSMOD IS MARKED NOGO AND     */
*       /* MESSAGE IS ISSUED.                                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0380
*       IF ICTPNOGO(1)=OFF          /* IF NOT NOGO YET               */
*         THEN                      /*                               */
         TM    ICTPNOGO(P9PTR),B'01000000'                         0380
         BNZ   @RF00380                                            0380
*         CALL NG2FMDCK(ICTPTF(1),PART109,NGSET);/*                  */
*                                                                  0381
         MVC   @AL00001+4(8),@AL00381                              0381
         ST    P9PTR,@AL00001                                      0381
         LA    @01,@AL00001                                        0381
         BAL   @14,NG2FMDCK                                        0381
*       /*************************************************************/
*       /*                                                           */
*       /* IF CURRENT SYSMOD IS NOT NOGO THEN CHECK TO SEE IF ALL THE*/
*       /* SYSMODS THAT SUPED IT OR DELETED IT ARE MARKED NOGO. IF SO*/
*       /* THEN ISSUE ERR MSG AND MARK CURRENT SYSMOD NOGO.          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0382
*       IF ICTPNOGO(1)=OFF          /* IF SYSMOD IS NOT NOGO         */
*           &(ICTPSUPN(1)^=ZERO     /* AND IS SUPED                  */
*           ×(ICTPDEXP(1)=ON×ICTPDIMP(1)=ON))/* OR PTF DELETED       */
*         THEN                      /*                               */
@RF00380 TM    ICTPNOGO(P9PTR),B'01000000'                         0382
         BNZ   @RF00382                                            0382
         ICM   @08,3,ICTPSUPN(P9PTR)                               0382
         BNZ   @RT00382                                            0382
         TM    ICTPDEXP(P9PTR),B'00110000'                         0382
         BZ    @RF00382                                            0382
@RT00382 DS    0H                                                  0383
*         CALL NG2XX3CK(ICTPTF(1),NGSET);/*                          */
         ST    P9PTR,@AL00001                                      0383
         LA    @08,NGSET                                           0383
         ST    @08,@AL00001+4                                      0383
         LA    @01,@AL00001                                        0383
         BAL   @14,NG2XX3CK                                        0383
*     END;                          /* END LOOP THRU ICT             */
*                                                                  0384
@RF00382 AH    P9PTR,@CH02176                                      0384
@DE00376 CLC   ICTPEND(4,P9PTR),ICTENDNT                           0384
         BNE   @DL00376                                            0384
*     /***************************************************************/
*     /*                                                             */
*     /* NO CALL ROUTINE TO MARK ALL ELEMENTS OF NOGO PTFS AS NOGO   */
*     /* AND THEN CALL ROUTINE TO MARK ALL PTFS WITH RELATED ELEMENTS*/
*     /* AS NOGO                                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0385
*     CALL CPLMODNG;                /* MARK MODS OF NOGO PTFS NOGO   */
         BAL   @14,CPLMODNG                                        0385
*     CALL CPLRELEM(NGSET);         /* MARK RELATED SYSMODS AS NOGO  */
         LA    @01,@AL00386                                        0386
         BAL   @14,CPLRELEM                                        0386
*   END;                            /* END DO WHILE LOOP             */
@DE00374 CLI   NGSET,C'Y'                                          0387
         BE    @DL00374                                            0387
*   RETURN CODE(ZERO);              /*                               */
         SLR   @15,@15                                             0388
         L     @14,@SA00004                                        0388
         LM    @00,@12,@SA00004+8                                  0388
         BR    @14                                                 0388
*   END SMDNG2;                     /*                               */
         EJECT
*                                                                  0390
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS CALLED TO LOOP THRU ONE OF THE REQ LISTS FOR A*/
*   /* SYSMOD TO DETERMINE WHETHER ANY REQS WERE NOGO. IF SO THEN THE*/
*   /* CURRENT SYSMOD IS ALSO MARKED NOGO AND A MESSAGE IS ISSUED    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0390
*NG2XX1CK:                          /*                               */
*NG2PRECK:                          /*                               */
*NG2REQCK:                          /*                               */
*NG2IRQCK:                          /*                               */
*   PROCEDURE(XX1SMD,XX1CHN,XX1LEN,XX1PART2,XX1NGSET);/*             */
NG2XX1CK DS    0H                                                  0390
NG2PRECK DS    0H                                                  0390
NG2REQCK DS    0H                                                  0390
NG2IRQCK STM   @14,@12,@SA00005                                    0390
         MVC   @PC00005(20),0(@01)                                 0390
*   DECLARE                         /*                               */
*     XX1SMD CHAR(*),               /* CURRENT SYSMOD ICT ENTRY      */
*     XX1CHN PTR(31),               /* PTR TO REQ LIST               */
*     XX1LEN FIXED(31),             /* LENGTH OF ICT ENTRY           */
*     XX1PART2 FIXED(31),           /* MSG PART 2 NUMBER             */
*     XX1NGSET CHAR(1);             /* SMD MARKED NOGO               */
*   DECLARE                         /*                               */
*     XX1PTR1 PTR(31);              /*                               */
*   DECLARE                         /*                               */
*     XX1INDX FIXED(31);            /*                               */
*   DECLARE                         /*                               */
*     1 XX1SW BIT(8),               /*                               */
*       3 XX1STOP1 BIT(1),          /*                               */
*       3 XX1NG BIT(1),             /*                               */
*       3 XX1OK BIT(1),             /*                               */
*       3 XX1RQFND BIT(1),          /*                               */
*       3 * BIT(4);                 /*                               */
*   DECLARE                         /*                               */
*     PBPTR PTR(31),                /* PTR FOR ICT PTF LOOP          */
*     PXB FIXED(31),                /* INDEX THRU REQ LIST           */
*     PGPTR PTR(31),                /* PTR FOR ICT PTF LOOP          */
*     PXG FIXED(31);                /* INDEX THRU SUP LIST           */
*   DECLARE                         /*                               */
*     TEMP1PTF CHAR(7);             /*                               */
*   RFY                             /*                               */
*     ICTPTF BASED(PBPTR);          /*                               */
*   RFY                             /*                               */
*     ICTENTLS BASED(XX1CHN);       /*                               */
*   XX1PTR1=ADDR(XX1SMD);           /* PTR TO CURRENT SYSMOD         */
         L     XX1PTR1,@PC00005                                    0399
*   XX1INDX=XX1LEN/LENGTH(ICTENTLS(1));/* INDEX THRU CHAIN           */
         L     @08,@PC00005+8                                      0400
         L     @00,XX1LEN(,@08)                                    0400
         SRDA  @00,32                                              0400
         D     @00,@CF00121                                        0400
         LR    XX1INDX,@01                                         0400
*   DO PXB=1 BY XX1INDX WHILE(      /* LOOP THRU REQ LISTS           */
*         ICTENTND(PXB)^=ICTENDIX   /* TILL END                      */
*         &XX1PTR1->ICTPNOGO(1)=OFF);/* OR TILL SYSMOD MARKED IN NO  */
*                                                                  0401
         LA    PXB,1                                               0401
         B     @DE00401                                            0401
@DL00401 DS    0H                                                  0402
*     /***************************************************************/
*     /*                                                             */
*     /* IF REQ WAS NOT FOUND IN TARGET SYSTEM THEN IT MUST EXISTS IN*/
*     /* ICT AS REAL OR SUPED ENTRY. SEE IF IT IS NOW COMPLETE       */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0402
*     IF ICTEREQT(PXB)=OFF          /* IF REQ NOT ON (A)CDS          */
*         &ICTEREQB(PXB)=OFF        /* AND NOT BYPASS                */
*       THEN                        /* THEN REQ MUST HAVE BE IN ICT  */
         LR    @08,PXB                                             0402
         SLA   @08,3                                               0402
         L     @07,@PC00005+4                                      0402
         L     @07,XX1CHN(,@07)                                    0402
         ST    @08,@TF00001                                        0402
         ALR   @08,@07                                             0402
         BCTR  @08,0                                               0402
         TM    ICTEREQT-7(@08),B'00001010'                         0402
         BNZ   @RF00402                                            0402
*       DO;                         /* OR SUPED BY PTF IN ICT        */
*         TEMP1PTF=ICTENTNM(PXB);   /* SAVE REQ NUMBER               */
*                                                                  0404
         AL    @07,@TF00001                                        0404
         AL    @07,@CF02215                                        0404
         MVC   TEMP1PTF(7),ICTENTNM(@07)                           0404
*         /***********************************************************/
*         /*                                                         */
*         /* SEARCH THRU ICT TO SEE IF REQ EXISTS AS NON-SUPED ENTRY.*/
*         /* IF FOUND AND NOGO THEN SET CURRENT SYSMOD NOGO AND ISSUE*/
*         /* MESSAGE                                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0405
*         XX1RQFND=OFF;             /* REQ NOT FOUND                 */
         NI    XX1RQFND,B'11101111'                                0405
*         DO PBPTR=CCAICPTF BY LENGTH(ICTPTF(1)) WHILE(/* PTF LOOP   */
*               ICTPEND(1)^=ICTENDNT/* OR END OF LIST                */
*               &ICTPTFS(1)^=TEMP1PTF);/*                            */
         L     PBPTR,CCAICPTF(,CCAPTR)                             0406
         B     @DE00406                                            0406
@DL00406 DS    0H                                                  0407
*         END;                      /*                               */
         AH    PBPTR,@CH02176                                      0407
@DE00406 CLC   ICTPEND(4,PBPTR),ICTENDNT                           0407
         BE    @DC00406                                            0407
         CLC   ICTPTFS(7,PBPTR),TEMP1PTF                           0407
         BNE   @DL00406                                            0407
@DC00406 DS    0H                                                  0408
*         IF ICTPEND(1)^=ICTENDNT   /* IF REQ FOUND                  */
*             &ICTPSUPN(1)=ZERO     /* AND NOT SUPED                 */
*           THEN                    /*                               */
         CLC   ICTPEND(4,PBPTR),ICTENDNT                           0408
         BE    @RF00408                                            0408
         ICM   @08,3,ICTPSUPN(PBPTR)                               0408
         BNZ   @RF00408                                            0408
*           DO;                     /*                               */
*             XX1RQFND=ON;          /* SET REQ FOUND                 */
*                                                                  0410
         OI    XX1RQFND,B'00010000'                                0410
*             /*******************************************************/
*             /*                                                     */
*             /* IF APPLY OR ACCEPT AND REQ IS NOGO THEN CURRENT     */
*             /* SYSMOD IS ALSO NOGO                                 */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0411
*             IF CCAAPPLY=ON×CCAACCPT=ON/* IF APPLY OR ACCEPT        */
*               THEN                /*                               */
         TM    CCAAPPLY(CCAPTR),B'01100000'                        0411
         BZ    @RF00411                                            0411
*               DO;                 /*                               */
*                 IF ICTPNOGO(1)=ON /* AND ITS NOGO                  */
*                   THEN            /*                               */
         TM    ICTPNOGO(PBPTR),B'01000000'                         0413
         BNO   @RF00413                                            0413
*                   DO;             /*                               */
*                     XX1PTR1->ICTPNOGO(1)=ON;/*                     */
*                     XX1PTR1->ICTPCPL(1)=ON;/*                      */
         OI    ICTPNOGO(XX1PTR1),B'01100000'                       0416
*                     IF XX1PTR1->ICTPMSG(1)=OFF/* IF NO MSG YET     */
*                       THEN        /*                               */
         TM    ICTPMSG(XX1PTR1),B'00010000'                        0417
         BNZ   @RF00417                                            0417
*                       DO;         /*                               */
*                         XX1PTR1->ICTPMSG(1)=ON;/*                  */
         OI    ICTPMSG(XX1PTR1),B'00010000'                        0419
*                         MGPCLEAR=''B;/*                            */
         XC    MGPCLEAR(6),MGPCLEAR                                0420
*                         MGPMGNO1=HMA302I;/* XXXXXXX PROCESSING   0421
*                                      TERMINATRED FOR SYSMOD XXXXXXX
*                                      - REASON =                    */
         MVC   MGPMGNO1(2),@CH01873                                0421
*                         MGPMGNO2=XX1PART2;/* XXX SYSMOD FAILURE    */
         L     @08,@PC00005+12                                     0422
         MVC   MGPMGNO2(2),XX1PART2+2(@08)                         0422
*                         MGPTYPE=MGPERR;/*                          */
         MVI   MGPTYPE,X'03'                                       0423
*                         MGPVARPT(1)=ADDR(CCAFUNCT);/*              */
         LA    @08,CCAFUNCT(,CCAPTR)                               0424
         ST    @08,MGPVARPT                                        0424
*                         MGPVARPT(2)=ADDR(XX1SMD);/*                */
         L     @08,@PC00005                                        0425
         ST    @08,MGPVARPT+4                                      0425
*                         CALL HMASMMSG(HMASMMGP);/*                 */
         L     @15,@CV01866                                        0426
         LA    @01,@AL00426                                        0426
         BALR  @14,@15                                             0426
*                         XX1NGSET=YES;/*                            */
         L     @08,@PC00005+16                                     0427
         MVI   XX1NGSET(@08),C'Y'                                  0427
*                       END;        /* END MSG NOT ISSUED YET        */
*                   END;            /* END REQ FOUND AS NOGO         */
*               END;                /* END APPLY OR ACCEPT           */
*                                                                  0430
*             /*******************************************************/
*             /*                                                     */
*             /* IF RESTORE AND CURRENT SYSMOD IS NOGO THEN ALL ITS  */
*             /* REQS ARE ALSO NOGO                                  */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0431
*             ELSE                  /*                               */
*               DO;                 /* MUST BE RESTORE               */
         B     @RC00411                                            0431
@RF00411 DS    0H                                                  0432
*                 IF XX1PTR1->ICTPNOGO(1)=ON/* IF CURRENT NOGO       */
*                   THEN            /*                               */
         TM    ICTPNOGO(XX1PTR1),B'01000000'                       0432
         BNO   @RF00432                                            0432
*                   DO;             /* THEN ALL REQS NOGO            */
*                     IF ICTPNOGO(1)=OFF/* IF REQ NOT ALREADY NOGO   */
*                       THEN        /*                               */
         TM    ICTPNOGO(PBPTR),B'01000000'                         0434
         BNZ   @RF00434                                            0434
*                       DO;         /*                               */
*                         ICTPNOGO(1)=ON;/* MARK REQ NOGO            */
*                         ICTPCPL(1)=ON;/* REQ COMPLETE              */
*                         ICTPMSG(1)=ON;/* MESSAGE ISSUED            */
         OI    ICTPNOGO(PBPTR),B'01110000'                         0438
*                         MGPCLEAR=''B;/*                            */
         XC    MGPCLEAR(6),MGPCLEAR                                0439
*                         MGPMGNO1=HMA302I;/* XXXXXXXX PROCESSING  0440
*                                      TERMINATED FOR SYSMOD X7X - 0440
*                                      REASON =                      */
         MVC   MGPMGNO1(2),@CH01873                                0440
*                         MGPMGNO2=XX1PART2;/* XXX SYSMOD FAILURE    */
         L     @08,@PC00005+12                                     0441
         MVC   MGPMGNO2(2),XX1PART2+2(@08)                         0441
*                         MGPTYPE=MGPERR;/*                          */
         MVI   MGPTYPE,X'03'                                       0442
*                         MGPVARPT(1)=ADDR(CCAFUNCT);/*              */
         LA    @08,CCAFUNCT(,CCAPTR)                               0443
         ST    @08,MGPVARPT                                        0443
*                         MGPVARPT(2)=ADDR(ICTPTFS(1));/*            */
         ST    PBPTR,MGPVARPT+4                                    0444
*                         CALL HMASMMSG(HMASMMGP);/*                 */
         L     @15,@CV01866                                        0445
         LA    @01,@AL00445                                        0445
         BALR  @14,@15                                             0445
*                         XX1NGSET=YES;/*                            */
         L     @08,@PC00005+16                                     0446
         MVI   XX1NGSET(@08),C'Y'                                  0446
*                       END;        /* END REQ NOT NOGO YET          */
*                   END;            /* END CURRENT IS NOGO           */
@RF00434 DS    0H                                                  0449
*               END;                /* END MUST BE RESTORE           */
@RF00432 DS    0H                                                  0450
*           END;                    /* END REQ FOUND IN ICT          */
*                                                                  0450
@RC00411 DS    0H                                                  0451
*         /***********************************************************/
*         /*                                                         */
*         /* IF REQ IS NOT IN ICT THEN IT MUST HAVE BEEN SUPED BY    */
*         /* SOME OTHER SYSMOD IN ICT. SEARCH ICT FOR THAT SYSMOD. IF*/
*         /* ALL SYSMODS THAT SUP REQ ARE NOGO THEN CURRENT    SYSMOD*/
*         /* IS NOGO AND MESSAGE ISSUED. IF ONE NONE=NOGO SYSMOD IS  */
*         /* FOUND THEN CURRENT SYSMOD STILL OK                      */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0451
*         RFY                       /*                               */
*           ICTPTF BASED(PGPTR);    /*                               */
@RF00408 DS    0H                                                  0452
*         RFY                       /*                               */
*           ICTENTLS BASED(XX1CHN); /*                               */
*         RFY                       /*                               */
*           ICTSUPLS BASED(PGPTR->ICTPSCHN(1));/*                    */
*         IF XX1RQFND=OFF           /* IF RERQ NOT FOUND IN ICT      */
*           THEN                    /*                               */
         TM    XX1RQFND,B'00010000'                                0454
         BNZ   @RF00454                                            0454
*           DO;                     /* REQ MUST BE SUPED BY PTF      */
*             XX1STOP1=OFF;         /* INIT LOOP CONTROL SW          */
*             XX1NG=OFF;            /* NOGO PTF NOT FOUND            */
*             XX1OK=OFF;            /* GOOD PTF NOT FOUND            */
         NI    XX1STOP1,B'00011111'                                0458
*             DO PGPTR=CCAICPTF BY LENGTH(ICTPTF(1)) WHILE(/* LOOP   */
*                   ICTPEND(1)^=ICTENDNT/* TILL END                  */
*                   &XX1STOP1=OFF); /* AND SW NOT SET                */
         L     PGPTR,CCAICPTF(,CCAPTR)                             0459
         B     @DE00459                                            0459
@DL00459 DS    0H                                                  0460
*               DO PXG=1 BY 1 WHILE(/* LOOP THRU SUPS FOR PTF        */
*                     ICTSUPND(PXG)^=ICTENDIX/* TILL END             */
*                     &XX1STOP1=OFF);/* AND SW NOT SET               */
         LA    PXG,1                                               0460
         B     @DE00460                                            0460
@DL00460 DS    0H                                                  0461
*                 IF ICTSUPNM(PXG)=TEMP1PTF/* IF REQ MATCHES SUP     */
*                   THEN            /*                               */
         LR    @08,PXG                                             0461
         SLA   @08,3                                               0461
         L     @07,ICTPSCHN(,PGPTR)                                0461
         ALR   @07,@08                                             0461
         AL    @07,@CF02215                                        0461
         CLC   ICTSUPNM(7,@07),TEMP1PTF                            0461
         BNE   @RF00461                                            0461
*                   DO;             /*                               */
*                     IF CCAAPPLY=ON×CCAACCPT=ON/*                   */
*                       THEN        /*                               */
         TM    CCAAPPLY(CCAPTR),B'01100000'                        0463
         BZ    @RF00463                                            0463
*                       DO;         /*                               */
*                         IF ICTPNOGO(1)=ON/* IF SYSMOD IS NOGO      */
*                           THEN    /*                               */
         TM    ICTPNOGO(PGPTR),B'01000000'                         0465
         BNO   @RF00465                                            0465
*                           XX1NG=ON;/* SET FOUND NOGO PTF           */
         OI    XX1NG,B'01000000'                                   0466
*                         ELSE      /*                               */
*                           DO;     /*                               */
         B     @RC00465                                            0467
@RF00465 DS    0H                                                  0468
*                             XX1OK=ON;/* SET GOOD PTF FOUND         */
*                             XX1STOP1=ON;/* STOP LOOP               */
         OI    XX1OK,B'10100000'                                   0469
*                           END;    /*                               */
*                       END;        /*                               */
*                     ELSE          /* MUST BE RESTORE               */
*                       DO;         /*                               */
         B     @RC00463                                            0472
@RF00463 DS    0H                                                  0473
*                         IF XX1PTR1->ICTPNOGO(1)=ON/* IF CURRENT    */
*                           THEN    /* NOGO                          */
         TM    ICTPNOGO(XX1PTR1),B'01000000'                       0473
         BNO   @RF00473                                            0473
*                           DO;     /* THEN SUPS OF REQS NOGO        */
*                             IF ICTPNOGO(1)=OFF/* IF SUP NOT NOGO   */
*                               THEN/*                               */
         TM    ICTPNOGO(PGPTR),B'01000000'                         0475
         BNZ   @RF00475                                            0475
*                               DO; /*                               */
*                                 ICTPNOGO(1)=ON;/*                  */
*                                 ICTPCPL(1)=ON;/*                   */
*                                 ICTPMSG(1)=ON;/*                   */
         OI    ICTPNOGO(PGPTR),B'01110000'                         0479
*                                 MGPCLEAR=''B;/*                    */
         XC    MGPCLEAR(6),MGPCLEAR                                0480
*                                 MGPMGNO1=HMA302I;/* XXXXXXXX     0481
*                                      PROCESSING TERMINATED FOR   0481
*                                      SYSMOD X7X - REASON =         */
         MVC   MGPMGNO1(2),@CH01873                                0481
*                                 MGPMGNO2=XX1PART2;/* XXX SYSMOD  0482
*                                      FAILURE                       */
         L     @08,@PC00005+12                                     0482
         MVC   MGPMGNO2(2),XX1PART2+2(@08)                         0482
*                                 MGPTYPE=MGPERR;/*                  */
         MVI   MGPTYPE,X'03'                                       0483
*                                 MGPVARPT(1)=ADDR(CCAFUNCT);/*      */
         LA    @08,CCAFUNCT(,CCAPTR)                               0484
         ST    @08,MGPVARPT                                        0484
*                                 MGPVARPT(2)=ADDR(ICTPTFS(1));/*    */
         ST    PGPTR,MGPVARPT+4                                    0485
*                                 CALL HMASMMSG(HMASMMGP);/*         */
         L     @15,@CV01866                                        0486
         LA    @01,@AL00486                                        0486
         BALR  @14,@15                                             0486
*                                 XX1NGSET=YES;/*                    */
         L     @08,@PC00005+16                                     0487
         MVI   XX1NGSET(@08),C'Y'                                  0487
*                               END;/* END SUP NOT NOGO YET          */
*                           END;    /* END CURRENT NOGO              */
@RF00475 DS    0H                                                  0490
*                       END;        /*                               */
@RF00473 DS    0H                                                  0491
*                   END;            /* END REQ MATCHES SUP           */
@RC00463 DS    0H                                                  0492
*               END;                /* END LOOP THRU SUPS            */
@RF00461 AH    PXG,@CH00037                                        0492
@DE00460 LR    @08,PXG                                             0492
         SLA   @08,3                                               0492
         L     @07,ICTPSCHN(,PGPTR)                                0492
         AL    @07,@CF02215                                        0492
         L     @08,ICTSUPND(@08,@07)                               0492
         CL    @08,ICTENDIX                                        0492
         BE    @DC00460                                            0492
         TM    XX1STOP1,B'10000000'                                0492
         BZ    @DL00460                                            0492
@DC00460 DS    0H                                                  0493
*             END;                  /* END LOOP THRU ICT PTFS        */
         AH    PGPTR,@CH02176                                      0493
@DE00459 CLC   ICTPEND(4,PGPTR),ICTENDNT                           0493
         BE    @DC00459                                            0493
         TM    XX1STOP1,B'10000000'                                0493
         BZ    @DL00459                                            0493
@DC00459 DS    0H                                                  0494
*             IF XX1NG=ON           /* IF SUPING NOGO SYSMOD FOUND   */
*                 &XX1OK=OFF        /* AND NO SUPING OK PTF FOUND    */
*               THEN                /* THEN                          */
         TM    XX1NG,B'01000000'                                   0494
         BNO   @RF00494                                            0494
         TM    XX1OK,B'00100000'                                   0494
         BNZ   @RF00494                                            0494
*               DO;                 /* STOP CURRENT SYSMOD           */
*                 XX1PTR1->ICTPNOGO(1)=ON;/*                         */
*                 XX1PTR1->ICTPCPL(1)=ON;/*                          */
         OI    ICTPNOGO(XX1PTR1),B'01100000'                       0497
*                 IF XX1PTR1->ICTPMSG(1)=OFF/* IF NO MSG YET         */
*                   THEN            /*                               */
         TM    ICTPMSG(XX1PTR1),B'00010000'                        0498
         BNZ   @RF00498                                            0498
*                   DO;             /*                               */
*                     XX1PTR1->ICTPMSG(1)=ON;/*                      */
         OI    ICTPMSG(XX1PTR1),B'00010000'                        0500
*                     MGPCLEAR=''B; /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                0501
*                     MGPMGNO1=HMA302I;/* XXXXXXX PROCESSING       0502
*                                      TERMINATRED FOR SYSMOD XXXXXXX
*                                      - REASON =                    */
         MVC   MGPMGNO1(2),@CH01873                                0502
*                     MGPMGNO2=XX1PART2;/* XXX SYSMOD FAILURE        */
         L     @08,@PC00005+12                                     0503
         MVC   MGPMGNO2(2),XX1PART2+2(@08)                         0503
*                     MGPTYPE=MGPERR;/*                              */
         MVI   MGPTYPE,X'03'                                       0504
*                     MGPVARPT(1)=ADDR(CCAFUNCT);/*                  */
         LA    @08,CCAFUNCT(,CCAPTR)                               0505
         ST    @08,MGPVARPT                                        0505
*                     MGPVARPT(2)=ADDR(XX1SMD);/*                    */
         L     @08,@PC00005                                        0506
         ST    @08,MGPVARPT+4                                      0506
*                     CALL HMASMMSG(HMASMMGP);/*                     */
         L     @15,@CV01866                                        0507
         LA    @01,@AL00507                                        0507
         BALR  @14,@15                                             0507
*                     XX1NGSET=YES; /*                               */
         L     @08,@PC00005+16                                     0508
         MVI   XX1NGSET(@08),C'Y'                                  0508
*                   END;            /* END MSG NOT ISSUED YET        */
*               END;                /* END STOP CURRENT SYSMOD       */
@RF00498 DS    0H                                                  0511
*           END;                    /* END REQ MUST BE SUPED         */
@RF00494 DS    0H                                                  0512
*       END;                        /* END REQ NOT ON DS & NOT BYPASS*/
@RF00454 DS    0H                                                  0513
*   END;                            /* END LOOP THRU REQ LIST        */
@RF00402 ALR   PXB,XX1INDX                                         0513
@DE00401 LR    @08,PXB                                             0513
         SLA   @08,3                                               0513
         L     @07,@PC00005+4                                      0513
         L     @07,XX1CHN(,@07)                                    0513
         AL    @07,@CF02215                                        0513
         L     @08,ICTENTND(@08,@07)                               0513
         CL    @08,ICTENDIX                                        0513
         BE    @DC00401                                            0513
         TM    ICTPNOGO(XX1PTR1),B'01000000'                       0513
         BZ    @DL00401                                            0513
@DC00401 DS    0H                                                  0514
*   RETURN CODE(ZERO);              /*                               */
         SLR   @15,@15                                             0514
         L     @14,@SA00005                                        0514
         LM    @00,@12,@SA00005+8                                  0514
         BR    @14                                                 0514
*   END NG2XX1CK;                   /*                               */
         EJECT
*                                                                  0516
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS CALLED TO SEE IF THE FMID SYSMOD FOR THE      */
*   /* CURRENT SYSMOD HAS BEEN MARKED NOGO. IF SO THEN THE CURRENT IS*/
*   /* ALSO MARKED NOGO AND A MESSAGE IS ISSUED.                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0516
*NG2XX2CK:                          /*                               */
*NG2FMDCK:                          /*                               */
*   PROCEDURE(XX2SMD,XX2PART2,XX2NGSET);/*                           */
NG2XX2CK DS    0H                                                  0516
NG2FMDCK STM   @14,@12,@SA00006                                    0516
         MVC   @PC00006(12),0(@01)                                 0516
*   DECLARE                         /*                               */
*     XX2SMD CHAR(*),               /* CURRENT SYSMOD ICT ENTRY      */
*     XX2PART2 FIXED(31),           /* MSG PART 2 NUMBER             */
*     XX2NGSET CHAR(1);             /* SMD MARKED NOGO               */
*   DECLARE                         /*                               */
*     XX2PTR1 PTR(31);              /*                               */
*   DECLARE                         /*                               */
*     PDPTR PTR(31);                /* PTR FOR ICT PTF LOOP          */
*   RFY                                                            0520
*     ICTPTF BASED(PDPTR);          /*                               */
*   XX2PTR1=ADDR(XX2SMD);           /* PTR TO CURRENT SYSMOD         */
         L     XX2PTR1,@PC00006                                    0521
*   DO PDPTR=CCAICPTF BY LENGTH(ICTPTF(1)) WHILE(/* ICT PTF LOOP     */
*         ICTPEND(1)^=ICTENDNT      /* TILL END                      */
*         &ICTPTFS(1)^=XX2PTR1->ICTPFMID(1));/* OR FMID FOUND        */
         L     PDPTR,CCAICPTF(,CCAPTR)                             0522
         B     @DE00522                                            0522
@DL00522 DS    0H                                                  0523
*   END;                            /*                               */
         AH    PDPTR,@CH02176                                      0523
@DE00522 CLC   ICTPEND(4,PDPTR),ICTENDNT                           0523
         BE    @DC00522                                            0523
         CLC   ICTPTFS(7,PDPTR),ICTPFMID(XX2PTR1)                  0523
         BNE   @DL00522                                            0523
@DC00522 DS    0H                                                  0524
*   IF ICTPEND(1)^=ICTENDNT         /* IF FMID FOUND                 */
*     THEN                          /*                               */
         CLC   ICTPEND(4,PDPTR),ICTENDNT                           0524
         BE    @RF00524                                            0524
*     DO;                           /*                               */
*       IF CCAAPPLY=ON×CCAACCPT=ON  /* IF APPLY OR ACCEPT            */
*         THEN                      /*                               */
         TM    CCAAPPLY(CCAPTR),B'01100000'                        0526
         BZ    @RF00526                                            0526
*         DO;                       /*                               */
*           IF ICTPNOGO(1)=ON       /* IF FMID NOGO                  */
*             THEN                  /*                               */
         TM    ICTPNOGO(PDPTR),B'01000000'                         0528
         BNO   @RF00528                                            0528
*             DO;                   /*                               */
*               MGPCLEAR=''B;       /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                0530
*               MGPMGNO1=HMA302I;   /* XXXXXXX PROCESSING TERMINATED
*                                      FOR SYSMOD XXXXXXX - REASON=  */
         MVC   MGPMGNO1(2),@CH01873                                0531
*               MGPMGNO2=XX2PART2;  /* FMID SYSMOD FAILURE           */
         L     @08,@PC00006+4                                      0532
         MVC   MGPMGNO2(2),XX2PART2+2(@08)                         0532
*               MGPTYPE=MGPERR;     /*                               */
         MVI   MGPTYPE,X'03'                                       0533
*               MGPVARPT(1)=ADDR(CCAFUNCT);/*                        */
         LA    @08,CCAFUNCT(,CCAPTR)                               0534
         ST    @08,MGPVARPT                                        0534
*               MGPVARPT(2)=ADDR(XX2PTR1->ICTPTFS(1));/*             */
         ST    XX2PTR1,MGPVARPT+4                                  0535
*               CALL HMASMMSG(HMASMMGP);/*                           */
         L     @15,@CV01866                                        0536
         LA    @01,@AL00536                                        0536
         BALR  @14,@15                                             0536
*               XX2PTR1->ICTPNOGO(1)=ON;/*                           */
*               XX2PTR1->ICTPCPL(1)=ON;/*                            */
*               XX2PTR1->ICTPMSG(1)=ON;/*                            */
         OI    ICTPNOGO(XX2PTR1),B'01110000'                       0539
*               XX2NGSET=YES;       /*                               */
         L     @08,@PC00006+8                                      0540
         MVI   XX2NGSET(@08),C'Y'                                  0540
*             END;                  /* END FMID IS NOGO              */
*         END;                      /* END APPLY OR ACCEPT           */
*       ELSE                        /* MUST BE RESTORE               */
*         DO;                       /*                               */
         B     @RC00526                                            0543
@RF00526 DS    0H                                                  0544
*           IF XX2PTR1->ICTPNOGO(1)=ON/* IF SYSMOD NOGO              */
*             THEN                  /*                               */
         TM    ICTPNOGO(XX2PTR1),B'01000000'                       0544
         BNO   @RF00544                                            0544
*             DO;                   /*                               */
*               IF ICTPNOGO(1)=OFF  /* IF FMID NOT NOGO YET          */
*                 THEN              /*                               */
         TM    ICTPNOGO(PDPTR),B'01000000'                         0546
         BNZ   @RF00546                                            0546
*                 DO;               /*                               */
*                   MGPCLEAR=''B;   /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                0548
*                   MGPMGNO1=HMA302I;/* X8X PROCESSING TERMINATED FOR
*                                      SYSMOD X7X - REASON =         */
         MVC   MGPMGNO1(2),@CH01873                                0549
*                   MGPMGNO2=PART029;/* RELATED SYSMOD FAILURE       */
         MVC   MGPMGNO2(2),@CH00478                                0550
*                   MGPTYPE=MGPERR; /*                               */
         MVI   MGPTYPE,X'03'                                       0551
*                   MGPVARPT(1)=ADDR(CCAFUNCT);/*                    */
         LA    @08,CCAFUNCT(,CCAPTR)                               0552
         ST    @08,MGPVARPT                                        0552
*                   MGPVARPT(2)=ADDR(ICTPTFS(1));/*                  */
         ST    PDPTR,MGPVARPT+4                                    0553
*                   CALL HMASMMSG(HMASMMGP);/*                       */
         L     @15,@CV01866                                        0554
         LA    @01,@AL00554                                        0554
         BALR  @14,@15                                             0554
*                   ICTPNOGO(1)=ON; /*                               */
*                   ICTPCPL(1)=ON;  /*                               */
*                   ICTPMSG(1)=ON;  /*                               */
         OI    ICTPNOGO(PDPTR),B'01110000'                         0557
*                   XX2NGSET=YES;   /*                               */
         L     @08,@PC00006+8                                      0558
         MVI   XX2NGSET(@08),C'Y'                                  0558
*                 END;              /* END FMID NOT NOGO YET         */
*             END;                  /* END SYSMOD NOGO               */
@RF00546 DS    0H                                                  0561
*         END;                      /* END RESTORE                   */
@RF00544 DS    0H                                                  0562
*     END;                          /* END FMID FOUND                */
@RC00526 DS    0H                                                  0563
*   RETURN CODE(ZERO);              /*                               */
@RF00524 SLR   @15,@15                                             0563
         L     @14,@SA00006                                        0563
         LM    @00,@12,@SA00006+8                                  0563
         BR    @14                                                 0563
*   END NG2XX2CK;                   /*                               */
         EJECT
*                                                                  0565
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS CALLED TO SEE IF THE CURRENT SYSMOD HAS BEEN  */
*   /* SUPERCEEDED OR DELETED BY ANY SYSMOD AND IF SO TO SEE WHETHER */
*   /* ALL SUCH SYSMODS HAVE BEEN MARKED NOGO. IF SO THEN THE CURRENT*/
*   /* SYSMOD IS ALSO MARKED NOGO.                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0565
*NG2XX3CK:                          /*                               */
*NG2SUPCK:                          /*                               */
*NG2DELCK:                          /*                               */
*   PROCEDURE(XX3SMD,XX3NGSET);     /*                               */
NG2XX3CK DS    0H                                                  0565
NG2SUPCK DS    0H                                                  0565
NG2DELCK STM   @14,@12,@SA00007                                    0565
         MVC   @PC00007(8),0(@01)                                  0565
*   DECLARE                         /*                               */
*     XX3SMD CHAR(*),               /* CURRENT SYSMOD ICT ENTRY      */
*     XX3NGSET CHAR(1);             /* SMD MARKED NOGO               */
*   DECLARE                         /*                               */
*     XX3PTR1 PTR(31);              /*                               */
*   DECLARE                         /*                               */
*     PEPTR PTR(31),                /* PTR FOR ICT PTF LOOP          */
*     PXE FIXED(31);                /* INDEX THRU SUP/DEL LIST       */
*   RFY                                                            0569
*     ICTPTF BASED(PEPTR);          /*                               */
*   RFY                             /*                               */
*     ICTSUPLS BASED(ICTPSCHN(1));  /*                               */
*   RFY                             /*                               */
*     ICTDELLS BASED(ICTPDCHN(1));  /*                               */
*   XX3PTR1=ADDR(XX3SMD);           /*                               */
         L     XX3PTR1,@PC00007                                    0572
*   XX3PTR1->ICTPNOGO(1)=ON;        /* ASSUME ALL SUP/DEL ALSO NOGO  */
         OI    ICTPNOGO(XX3PTR1),B'01000000'                       0573
*   DO PEPTR=CCAICPTF BY LENGTH(ICTPTF(1)) WHILE(/* ICT PTF LOOP     */
*         ICTPEND(1)^=ICTENDNT      /* TILL END                      */
*         &XX3PTR1->ICTPNOGO(1)=ON);/* OR NOGO RESET                 */
         L     PEPTR,CCAICPTF(,CCAPTR)                             0574
         B     @DE00574                                            0574
@DL00574 DS    0H                                                  0575
*     IF XX3PTR1->ICTPSUPN(1)^=ZERO /* IF SYSMOD IS SUPED            */
*       THEN                        /*                               */
         ICM   @08,3,ICTPSUPN(XX3PTR1)                             0575
         BZ    @RF00575                                            0575
*       DO;                         /*                               */
*         DO PXE=1 BY 1 WHILE(      /* LOOP THRU SUP LIST FOR THIS   */
*               ICTSUPND(PXE)^=ICTENDIX/* SYSMOD TILL END            */
*               &ICTSUPNM(PXE)^=XX3PTR1->ICTPTFS(1));/* OR SYSMOD    */
         LA    PXE,1                                               0577
         B     @DE00577                                            0577
@DL00577 DS    0H                                                  0578
*         END;                      /*                               */
         AH    PXE,@CH00037                                        0578
@DE00577 LR    @08,PXE                                             0578
         SLA   @08,3                                               0578
         L     @05,ICTPSCHN(,PEPTR)                                0578
         LA    @01,0(@08,@05)                                      0578
         AL    @01,@CF02215                                        0578
         L     @15,ICTSUPND(,@01)                                  0578
         CL    @15,ICTENDIX                                        0578
         BE    @DC00577                                            0578
         ALR   @05,@08                                             0578
         AL    @05,@CF02215                                        0578
         CLC   ICTSUPNM(7,@05),ICTPTFS(XX3PTR1)                    0578
         BNE   @DL00577                                            0578
@DC00577 DS    0H                                                  0579
*         IF ICTSUPND(PXE)^=ICTENDIX/* IF SYSMOD FOUND               */
*             &ICTPNOGO(1)=OFF      /* AND SUPING SYSMOD NOT NOGO    */
*           THEN                    /*                               */
         LR    @08,PXE                                             0579
         SLA   @08,3                                               0579
         L     @05,ICTPSCHN(,PEPTR)                                0579
         AL    @05,@CF02215                                        0579
         L     @08,ICTSUPND(@08,@05)                               0579
         CL    @08,ICTENDIX                                        0579
         BE    @RF00579                                            0579
         TM    ICTPNOGO(PEPTR),B'01000000'                         0579
         BNZ   @RF00579                                            0579
*           XX3PTR1->ICTPNOGO(1)=OFF;/* THEN SUPED SYSMOD NOT NOGO   */
         NI    ICTPNOGO(XX3PTR1),B'10111111'                       0580
*       END;                        /*                               */
@RF00579 DS    0H                                                  0582
*     IF XX3PTR1->ICTPNOGO(1)=ON    /* IF STILL NOGO                 */
*         &(XX3PTR1->ICTPDEXP(1)=ON /* AND IT IS DELETED             */
*         ×XX3PTR1->ICTPDIMP(1)=ON) /*                               */
*       THEN                        /*                               */
@RF00575 TM    ICTPNOGO(XX3PTR1),B'01000000'                       0582
         BNO   @RF00582                                            0582
         TM    ICTPDEXP(XX3PTR1),B'00110000'                       0582
         BZ    @RF00582                                            0582
*       DO;                         /*                               */
*         DO PXE=1 BY 1 WHILE(      /* LOOP THRU SYSMODS             */
*               ICTDELND(PXE)^=ICTENDIX/* SYSMOD TILL END            */
*               &ICTDELNM(PXE)^=XX3PTR1->ICTPTFS(1));/* OR SYSMOD    */
         LA    PXE,1                                               0584
         B     @DE00584                                            0584
@DL00584 DS    0H                                                  0585
*         END;                      /*                               */
         AH    PXE,@CH00037                                        0585
@DE00584 LR    @08,PXE                                             0585
         SLA   @08,3                                               0585
         L     @05,ICTPDCHN(,PEPTR)                                0585
         LA    @01,0(@08,@05)                                      0585
         AL    @01,@CF02215                                        0585
         L     @15,ICTDELND(,@01)                                  0585
         CL    @15,ICTENDIX                                        0585
         BE    @DC00584                                            0585
         ALR   @05,@08                                             0585
         AL    @05,@CF02215                                        0585
         CLC   ICTDELNM(7,@05),ICTPTFS(XX3PTR1)                    0585
         BNE   @DL00584                                            0585
@DC00584 DS    0H                                                  0586
*         IF ICTDELND(PXE)^=ICTENDIX/* IF SYSMOD FOUND               */
*             &ICTPNOGO(1)=OFF      /* AND DELETING SYSMOD NOT NOGO  */
*           THEN                    /*                               */
         LR    @08,PXE                                             0586
         SLA   @08,3                                               0586
         L     @05,ICTPDCHN(,PEPTR)                                0586
         AL    @05,@CF02215                                        0586
         L     @08,ICTDELND(@08,@05)                               0586
         CL    @08,ICTENDIX                                        0586
         BE    @RF00586                                            0586
         TM    ICTPNOGO(PEPTR),B'01000000'                         0586
         BNZ   @RF00586                                            0586
*           XX3PTR1->ICTPNOGO(1)=OFF;/* THEN DELETED SYSMOD NOT NOGO */
         NI    ICTPNOGO(XX3PTR1),B'10111111'                       0587
*       END;                        /* END SYSMOD DELETED            */
@RF00586 DS    0H                                                  0589
*   END;                            /* END LOOP THRU ICT SYSMODS     */
*                                                                  0589
@RF00582 AH    PEPTR,@CH02176                                      0589
@DE00574 CLC   ICTPEND(4,PEPTR),ICTENDNT                           0589
         BE    @DC00574                                            0589
         TM    ICTPNOGO(XX3PTR1),B'01000000'                       0589
         BO    @DL00574                                            0589
@DC00574 DS    0H                                                  0590
*   /*****************************************************************/
*   /*                                                               */
*   /* IF SYSMOD STILL NOGO THEN ALL SUPING AND DELETING SYSMODS WERE*/
*   /* NOGO SO ISSUE ERROR MESSAGE FOR SYSMOD NOW.                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0590
*   RFY                                                            0590
*     ICTPTF BASED(XX3PTR1);        /*                               */
*   IF ICTPNOGO(1)=ON               /* IF SYSMOD IS NOGO             */
*     THEN                          /*                               */
         TM    ICTPNOGO(XX3PTR1),B'01000000'                       0591
         BNO   @RF00591                                            0591
*     DO;                           /*                               */
*       ICTPCPL(1)=ON;              /*                               */
*       ICTPMSG(1)=ON;              /*                               */
         OI    ICTPCPL(XX3PTR1),B'00110000'                        0594
*       XX3NGSET=YES;               /*                               */
         L     @08,@PC00007+4                                      0595
         MVI   XX3NGSET(@08),C'Y'                                  0595
*       MGPCLEAR=''B;               /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                0596
*       MGPMGNO1=HMA302I;           /* XXXXXXX PROCESSING TERMINATED
*                                      FOR SYSMOD XXXXXXX - REASON = */
         MVC   MGPMGNO1(2),@CH01873                                0597
*       MGPTYPE=MGPERR;             /*                               */
         MVI   MGPTYPE,X'03'                                       0598
*       MGPVARPT(1)=ADDR(CCAFUNCT); /*                               */
         LA    @08,CCAFUNCT(,CCAPTR)                               0599
         ST    @08,MGPVARPT                                        0599
*       MGPVARPT(2)=ADDR(ICTPTFS(1));/*                              */
         ST    XX3PTR1,MGPVARPT+4                                  0600
*       IF ICTPSUPN(1)^=ZERO        /* IF SYSMOD SUPED               */
*         THEN                      /*                               */
         ICM   @08,3,ICTPSUPN(XX3PTR1)                             0601
         BZ    @RF00601                                            0601
*         DO;                       /*                               */
*           MGPMGNO2=PART110;       /* ALL SUPERCEDING SYSMODS FAILED*/
         MVC   MGPMGNO2(2),@CH01891                                0603
*           CALL HMASMMSG(HMASMMGP);/*                               */
         L     @15,@CV01866                                        0604
         LA    @01,@AL00604                                        0604
         BALR  @14,@15                                             0604
*         END;                      /*                               */
*       IF ICTPDEXP(1)=ON×ICTPDIMP(1)=ON/* IF SYSMOD DELETED         */
*         THEN                      /*                               */
@RF00601 TM    ICTPDEXP(XX3PTR1),B'00110000'                       0606
         BZ    @RF00606                                            0606
*         DO;                       /*                               */
*           MGPMGNO2=PART111;       /* ALL DELETING SYSMODS FAILED   */
         MVC   MGPMGNO2(2),@CH01893                                0608
*           CALL HMASMMSG(HMASMMGP);/*                               */
         L     @15,@CV01866                                        0609
         LA    @01,@AL00609                                        0609
         BALR  @14,@15                                             0609
*         END;                      /*                               */
*     END;                          /* END SYSMOD STILL NOGO         */
@RF00606 DS    0H                                                  0612
*   RETURN CODE(ZERO);              /*                               */
@RF00591 SLR   @15,@15                                             0612
         L     @14,@SA00007                                        0612
         LM    @00,@12,@SA00007+8                                  0612
         BR    @14                                                 0612
*   END NG2XX3CK;                   /*                               */
         EJECT
*                                                                  0614
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS CALLED TO GO THRU THE ICT SYSMOD ENTRIES AND  */
*   /* DETERMINE WHICH SYSMODS ARE COMPLETED. THIS IS DONE BY CALLING*/
*   /* HMASMCP2 FOR EACH SYSMOD. HMASMCP2 WILL DO ALL COMPLETION     */
*   /* CHECKING FOR PRE, REQ, AND IFREQ RELATIONSHIPS                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0614
*SMDCK1:                            /*                               */
*   PROCEDURE;                      /*                               */
SMDCK1   STM   @14,@12,@SA00008                                    0614
*   DECLARE                         /*                               */
*     P7PTR PTR(31),                /* PTR FOR ICT PTF LOOP          */
*     PCPTR PTR(31),                /* PTR FOR ICT PTF LOOP          */
*     PXC FIXED(31);                /*                               */
*   DECLARE                         /*                               */
*     SMDCKRC FIXED(8);             /* PROC RETURN CODE              */
*   RFY                                                            0617
*     ICTPTF BASED(P7PTR);          /*                               */
*   RFY                                                            0618
*     ICTDELLS BASED(PCPTR->ICTPDCHN(1));/* DELETE LIST              */
*   SMDCKRC=ZERO;                   /* INIT RC                       */
*                                                                  0619
         SLR   SMDCKRC,SMDCKRC                                     0619
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP CHECKING FOR COMPLETED SYSMODS UNTIL A PASS IS MADE THRU */
*   /* ENTIRE ICT AND NO SYSMOD IS MARKED COMPLETED                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0620
*   LOOPSW1=ON;                     /* SET SW TO LET LOOP GO         */
         OI    LOOPSW1,B'00000001'                                 0620
*   DO WHILE LOOPSW1=ON;            /* LOOP WHILE SYSMOD CPL         */
         B     @DE00621                                            0621
@DL00621 DS    0H                                                  0622
*     LOOPSW1=OFF;                  /* STOP LOOP IF NONE COMPLETED   */
*                                                                  0622
         NI    LOOPSW1,B'11111110'                                 0622
*     /***************************************************************/
*     /*                                                             */
*     /* IF SYSMOD NOT BEING DELETED THEN CHECK FOR RELATED SYSMODS  */
*     /* AS COMPLETE AND FOR FMID COMPLETE                           */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0623
*     DO P7PTR=CCAICPTF BY LENGTH(ICTPTF(1)) WHILE(/* ICT PTF LOOP   */
*           ICTPEND(1)^=ICTENDNT);  /* TILL END                      */
         L     P7PTR,CCAICPTF(,CCAPTR)                             0623
         B     @DE00623                                            0623
@DL00623 DS    0H                                                  0624
*       IF ICTPECPL(1)=ON           /* IF ALL ELEMENTS COMPLETE      */
*           &ICTPGCPL(1)=OFF        /* BUT SYSMOD NOT COMPLETED      */
*           &ICTPNOGO(1)=OFF        /* AND NOT NOGO                  */
*           &ICTPPROC(1)=ON         /* AND IN PROCESS                */
*           &ICTPDEXP(1)=OFF        /* AND NOT BEING DELETED         */
*           &ICTPDIMP(1)=OFF        /*                               */
*         THEN                      /* THEN ASSUME ALL REQ COMPLETE  */
         TM    ICTPECPL(P7PTR),B'01000000'                         0624
         BNO   @RF00624                                            0624
         TM    ICTPGCPL(P7PTR),B'10000000'                         0624
         BNZ   @RF00624                                            0624
         TM    ICTPPROC(P7PTR),B'10000000'                         0624
         BNO   @RF00624                                            0624
         TM    ICTPNOGO(P7PTR),B'01000000'                         0624
         BNZ   @RF00624                                            0624
         TM    ICTPDEXP(P7PTR),B'00110000'                         0624
         BNZ   @RF00624                                            0624
*         DO;                       /*                               */
*           CALL HMASMCP2(ICTPTF(1));/* DO REQ COMPLETION CHECK      */
         ST    P7PTR,@AL00001                                      0626
         L     @15,@CV01861                                        0626
         LA    @01,@AL00001                                        0626
         BALR  @14,@15                                             0626
*           RFY                                                    0627
*             RTNCODE RSTD;         /*                               */
*           IF RTNCODE=ZERO         /* IF RELATED SYSMODS COMPLETE   */
*             THEN                  /* THEN                          */
         LTR   RTNCODE,RTNCODE                                     0628
         BNZ   @RF00628                                            0628
*             DO;                   /*                               */
*               IF ICTPTFS(1)^=ICTPFMID(1)/* IF NOT FIRST LVL        */
*                 THEN              /* FUNCTION                      */
         CLC   ICTPTFS(7,P7PTR),ICTPFMID(P7PTR)                    0630
         BE    @RF00630                                            0630
*                 DO;               /*                               */
*                   DO PCPTR=CCAICPTF BY LENGTH(ICTPTF(1)) WHILE(/*  */
*                         PCPTR->ICTPEND(1)^=ICTENDNT/* FIND END     */
*                         &PCPTR->ICTPTFS(1)^=ICTPFMID(1));/* OR FMID*/
         L     PCPTR,CCAICPTF(,CCAPTR)                             0632
         B     @DE00632                                            0632
@DL00632 DS    0H                                                  0633
*                   END;            /* FOUND                         */
         AH    PCPTR,@CH02176                                      0633
@DE00632 CLC   ICTPEND(4,PCPTR),ICTENDNT                           0633
         BE    @DC00632                                            0633
         CLC   ICTPTFS(7,PCPTR),ICTPFMID(P7PTR)                    0633
         BNE   @DL00632                                            0633
@DC00632 DS    0H                                                  0634
*                   IF PCPTR->ICTPEND(1)=ICTENDNT/* IF FMID NT FND   */
*                       ×PCPTR->ICTPGCPL(1)=ON/* OR FMID COMPLETE    */
*                     THEN          /*                               */
         CLC   ICTPEND(4,PCPTR),ICTENDNT                           0634
         BE    @RT00634                                            0634
         TM    ICTPGCPL(PCPTR),B'10000000'                         0634
         BNO   @RF00634                                            0634
@RT00634 DS    0H                                                  0635
*                     DO;           /*                               */
*                       ICTPGCPL(1)=ON;/* GROUP NOW COMPLETE         */
         OI    ICTPGCPL(P7PTR),B'10000000'                         0636
*                       LOOPSW1=ON; /* GO THRU LOOP AGAIN            */
         OI    LOOPSW1,B'00000001'                                 0637
*                     END;          /*                               */
*                 END;              /*                               */
*               ELSE                /*                               */
*                 DO;               /*                               */
         B     @RC00630                                            0640
@RF00630 DS    0H                                                  0641
*                   ICTPGCPL(1)=ON; /* GROUP NOW COMPLETE            */
         OI    ICTPGCPL(P7PTR),B'10000000'                         0641
*                   LOOPSW1=ON;     /* GO THRU LOOP AGAIN            */
         OI    LOOPSW1,B'00000001'                                 0642
*                 END;              /*                               */
*             END;                  /*                               */
@RC00630 DS    0H                                                  0645
*           RFY                                                    0645
*             RTNCODE UNRSTD;       /*                               */
@RF00628 DS    0H                                                  0646
*         END;                      /* END ELEMENT COMPLETE          */
*     END;                          /* END ICT PTF LOOP              */
@RF00624 AH    P7PTR,@CH02176                                      0647
@DE00623 CLC   ICTPEND(4,P7PTR),ICTENDNT                           0647
         BNE   @DL00623                                            0647
*   END;                            /* END DO WHILE LOOP             */
*                                                                  0648
@DE00621 TM    LOOPSW1,B'00000001'                                 0648
         BO    @DL00621                                            0648
*   /*****************************************************************/
*   /*                                                               */
*   /* IF SYSMOD IS BEING DELETED THEN SYSMOD IS COMPLETE WHEN ONE OF*/
*   /* THE DELETING SYSMODS IS COMPLETE                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0649
*   DO P7PTR=CCAICPTF BY LENGTH(ICTPTF(1)) WHILE(/* ICT PTF LOOP     */
*         ICTPEND(1)^=ICTENDNT);    /* TILL END                      */
         L     P7PTR,CCAICPTF(,CCAPTR)                             0649
         B     @DE00649                                            0649
@DL00649 DS    0H                                                  0650
*     IF ICTPCPL(1)=OFF             /* IF NOT COMPLETE YET           */
*         &(ICTPDIMP(1)=ON          /* AND SYSMOD BEING DELETED      */
*         ×ICTPDEXP(1)=ON)          /*                               */
*         &ICTPDCPL(1)=ON           /* AND DELETE PROCESSING DONE    */
*       THEN                        /*                               */
         TM    ICTPCPL(P7PTR),B'00100000'                          0650
         BNZ   @RF00650                                            0650
         TM    ICTPDIMP(P7PTR),B'00110000'                         0650
         BZ    @RF00650                                            0650
         TM    ICTPDCPL(P7PTR),B'00100000'                         0650
         BNO   @RF00650                                            0650
*       DO;                         /*                               */
*         DO PCPTR=CCAICPTF BY LENGTH(ICTPTF(1)) WHILE(/* PTF LOOP   */
*               PCPTR->ICTPEND(1)^=ICTENDNT);/* TILL END             */
         L     PCPTR,CCAICPTF(,CCAPTR)                             0652
         B     @DE00652                                            0652
@DL00652 DS    0H                                                  0653
*           DO PXC=1 BY 1 WHILE(    /* LOOP THRU DELETE LIST         */
*                 ICTDELND(PXC)^=ICTENDIX/* TILL END                 */
*                 &ICTDELNM(PXC)^=ICTPTFS(1));/* OR SYSMOD FOUND     */
         LA    PXC,1                                               0653
         B     @DE00653                                            0653
@DL00653 DS    0H                                                  0654
*           END;                    /* NOT FOUND                     */
         AH    PXC,@CH00037                                        0654
@DE00653 LR    @08,PXC                                             0654
         SLA   @08,3                                               0654
         L     @15,ICTPDCHN(,PCPTR)                                0654
         LA    @01,0(@08,@15)                                      0654
         AL    @01,@CF02215                                        0654
         L     @14,ICTDELND(,@01)                                  0654
         CL    @14,ICTENDIX                                        0654
         BE    @DC00653                                            0654
         ALR   @15,@08                                             0654
         AL    @15,@CF02215                                        0654
         CLC   ICTDELNM(7,@15),ICTPTFS(P7PTR)                      0654
         BNE   @DL00653                                            0654
@DC00653 DS    0H                                                  0655
*           IF ICTDELND(PXC)^=ICTENDIX/* IF SYSMOD FOUND             */
*               &PCPTR->ICTPECPL(1)=ON/* AND DELETING SMD COMPLETE   */
*               &PCPTR->ICTPGCPL(1)=ON/*                             */
*             THEN                  /*                               */
         LR    @08,PXC                                             0655
         SLA   @08,3                                               0655
         L     @01,ICTPDCHN(,PCPTR)                                0655
         AL    @01,@CF02215                                        0655
         L     @08,ICTDELND(@08,@01)                               0655
         CL    @08,ICTENDIX                                        0655
         BE    @RF00655                                            0655
         TM    ICTPECPL(PCPTR),B'11000000'                         0655
         BNO   @RF00655                                            0655
*             DO;                   /*                               */
*               ICTPECPL(1)=ON;     /*                               */
*               ICTPGCPL(1)=ON;     /*                               */
         OI    ICTPECPL(P7PTR),B'11000000'                         0658
*               ICTPPROC(1)=ON;     /*                               */
         OI    ICTPPROC(P7PTR),B'10000000'                         0659
*             END;                  /*                               */
*         END;                      /* END LOOP THRU SYSMODS         */
@RF00655 AH    PCPTR,@CH02176                                      0661
@DE00652 CLC   ICTPEND(4,PCPTR),ICTENDNT                           0661
         BNE   @DL00652                                            0661
*       END;                        /* END SYSMOD NOT COMPLETE       */
*   END;                            /* END ICT PTF LOOP              */
@RF00650 AH    P7PTR,@CH02176                                      0663
@DE00649 CLC   ICTPEND(4,P7PTR),ICTENDNT                           0663
         BNE   @DL00649                                            0663
*   RETURN CODE(SMDCKRC);           /*                               */
         LR    @15,SMDCKRC                                         0664
         L     @14,@SA00008                                        0664
         LM    @00,@12,@SA00008+8                                  0664
         BR    @14                                                 0664
*   END SMDCK1;                     /*                               */
         EJECT
*                                                                  0666
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS CALLED AFTER ALL SYSMODS HAVE BEEN EXAMINED   */
*   /* AND MARKED AS COMPLETED AND REQS SATISFIED. NOW GO THRU ICT   */
*   /* SYSMODS AND FOR EACH SYSMOD THAT HAS HAD ALL OF ITS ELEMENT   */
*   /* COMPLETED AND ALL REQS SATISFIED DO SUCCESS PROCESSING.       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0666
*SMDOK1:                            /*                               */
*   PROCEDURE;                      /*                               */
SMDOK1   STM   @14,@12,@SA00009                                    0666
*   DECLARE                         /*                               */
*     P8PTR PTR(31),                /* PTR FOR ICT PTF LOOP          */
*     SAVP8 PTR(31);                /* SAVE FOR ABOVE                */
*   DECLARE                         /*                               */
*     OKRC FIXED(8),                /*                               */
*     OKRC1 FIXED(8);               /*                               */
*   DECLARE                         /*                               */
*     LON FIXED(15),                /*                               */
*     CON FIXED(15);                /*                               */
*   DECLARE                         /*                               */
*     MAXNUM FIXED(16) INIT('7FFF'X);/*                              */
*   RFY                                                            0671
*     ICTPTF BASED(P8PTR);          /*                               */
*   RFY                                                            0672
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   OKRC=ZERO;                      /*                               */
*                                                                  0673
         SLR   OKRC,OKRC                                           0673
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THRU ICT SYSMOD ENTRIES UNTIL A COMPLTE PASS THRU HAS    */
*   /* BEEN MADE WITHOUT FINDING ANT SYSMODS THAT ARE COMPLETED      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0674
*   LOOPSW1=ON;                     /*                               */
         OI    LOOPSW1,B'00000001'                                 0674
*   DO WHILE LOOPSW1=ON;            /*                               */
         B     @DE00675                                            0675
@DL00675 DS    0H                                                  0676
*     LOOPSW1=OFF;                  /* STOP LOOP                     */
         NI    LOOPSW1,B'11111110'                                 0676
*     IF CCAAPPLY=ON×CCAACCPT=ON    /* SET UP ORDER NUMBERS TO BE    */
*       THEN                        /* DETERMINE ORDER TO PROCESS    */
         TM    CCAAPPLY(CCAPTR),B'01100000'                        0677
         BZ    @RF00677                                            0677
*       CON=ZERO;                   /*                               */
         SLR   CON,CON                                             0678
*     ELSE                          /*                               */
*       CON=MAXNUM;                 /*                               */
         B     @RC00677                                            0679
@RF00677 SLR   CON,CON                                             0679
         ICM   CON,3,MAXNUM                                        0679
*     FND=ON;                       /*                               */
@RC00677 OI    FND,B'00000010'                                     0680
*     DO WHILE(FND=ON               /* LOOP TILL NO MORE SYSMODS     */
*           &OKRC<STOPFUNC);        /* OR ERROR                      */
         B     @DE00681                                            0681
@DL00681 DS    0H                                                  0682
*       IF CCAAPPLY=ON×CCAACCPT=ON  /* SET UP ORDER NUMBERS TO BE    */
*         THEN                      /* DETERMINE ORDER TO PROCESS    */
         TM    CCAAPPLY(CCAPTR),B'01100000'                        0682
         BZ    @RF00682                                            0682
*         LON=MAXNUM;               /*                               */
         SLR   LON,LON                                             0683
         ICM   LON,3,MAXNUM                                        0683
*       ELSE                        /*                               */
*         LON=ZERO;                 /*                               */
         B     @RC00682                                            0684
@RF00682 SLR   LON,LON                                             0684
*       FND=OFF;                    /* SET FOR NO SYSMOD FOUND       */
@RC00682 NI    FND,B'11111101'                                     0685
*       OKRC1=ZERO;                 /*                               */
         SLR   OKRC1,OKRC1                                         0686
*       DO P8PTR=CCAICPTF BY LENGTH(ICTPTF(1)) WHILE(/* PTF LOOP     */
*             ICTPEND(1)^=ICTENDNT  /* TILL END                      */
*             &OKRC1<STOPFUNC);     /* AND NO SERIOUS ERRORS         */
         L     P8PTR,CCAICPTF(,CCAPTR)                             0687
         B     @DE00687                                            0687
@DL00687 DS    0H                                                  0688
*         IF ICTPPROC(1)=ON         /* IF SYSMOD IN PROCESS          */
*             &ICTPNOGO(1)=OFF      /* BUT NOT NOGO                  */
*             &ICTPECPL(1)=ON       /* AND ALL ELEMENTS COMPLETE     */
*             &ICTPGCPL(1)=ON       /* AND RELATED SYSMOD COMPLETE   */
*             &ICTPCPL(1)=OFF       /* AND NOT PROCESSED YET         */
*           THEN                    /*                               */
         TM    ICTPPROC(P8PTR),B'10000000'                         0688
         BNO   @RF00688                                            0688
         TM    ICTPNOGO(P8PTR),B'01000000'                         0688
         BNZ   @RF00688                                            0688
         TM    ICTPECPL(P8PTR),B'11000000'                         0688
         BNO   @RF00688                                            0688
         TM    ICTPCPL(P8PTR),B'00100000'                          0688
         BNZ   @RF00688                                            0688
*           DO;                     /*                               */
*             IF((CCAAPPLY=ON×CCAACCPT=ON)/* IF APPLY/ACCEPT         */
*                 &ICTPONUM(1)>CON  /* AND THIS HIGHER THAN CURR     */
*                 &ICTPONUM(1)<LON) /* AND LESS THAN LAST ONE        */
*                 ×(CCARES=ON       /* OR RESTORE                    */
*                 &ICTPONUM(1)<CON  /* AND THIS IS LESS THAN LAST    */
*                 &ICTPONUM(1)>LON) /* AND GREATER THAN CURR         */
*               THEN                /* THEN THIS IS POTENTIAL        */
         TM    CCAAPPLY(CCAPTR),B'01100000'                        0690
         BZ    @GL00041                                            0690
         SLR   @08,@08                                             0690
         ICM   @08,3,ICTPONUM(P8PTR)                               0690
         CR    @08,CON                                             0690
         BNH   @GL00041                                            0690
         CR    @08,LON                                             0690
         BL    @RT00690                                            0690
@GL00041 TM    CCARES(CCAPTR),B'00001000'                          0690
         BNO   @RF00690                                            0690
         SLR   @08,@08                                             0690
         ICM   @08,3,ICTPONUM(P8PTR)                               0690
         CR    @08,CON                                             0690
         BNL   @RF00690                                            0690
         CR    @08,LON                                             0690
         BNH   @RF00690                                            0690
@RT00690 DS    0H                                                  0691
*               DO;                 /* NEXT SYSMOD                   */
*                 LON=ICTPONUM(1);  /* SAVE SYSMOD ORDER NUMBER      */
         SLR   LON,LON                                             0692
         ICM   LON,3,ICTPONUM(P8PTR)                               0692
*                 FND=ON;           /* NEXT SYSMOD FOUND             */
         OI    FND,B'00000010'                                     0693
*                 SAVP8=P8PTR;      /* SAVE INDEX                    */
         ST    P8PTR,SAVP8                                         0694
*               END;                /* END NEXT SYSMOD FOUND         */
*           END;                    /* END SYSMOD ELIGIBLE           */
@RF00690 DS    0H                                                  0697
*       END;                        /* END LOOP THRU SYSMODS         */
@RF00688 AH    P8PTR,@CH02176                                      0697
@DE00687 CLC   ICTPEND(4,P8PTR),ICTENDNT                           0697
         BE    @DC00687                                            0697
         CH    OKRC1,@CH00033                                      0697
         BL    @DL00687                                            0697
@DC00687 DS    0H                                                  0698
*       IF FND=ON                   /* IF NEXT SYSMOD FOUND          */
*         THEN                      /*                               */
         TM    FND,B'00000010'                                     0698
         BNO   @RF00698                                            0698
*         DO;                       /*                               */
*           LOOPSW1=ON;             /* SET TO CONTINUE OUTER LOOP    */
         OI    LOOPSW1,B'00000001'                                 0700
*           P8PTR=SAVP8;            /* RESET INDEX                   */
         L     P8PTR,SAVP8                                         0701
*           ICTPCPL(1)=ON;          /* PTF COMPLETE                  */
         OI    ICTPCPL(P8PTR),B'00100000'                          0702
*           CON=ICTPONUM(1);        /*                               */
         SLR   CON,CON                                             0703
         ICM   CON,3,ICTPONUM(P8PTR)                               0703
*           RFY                                                    0704
*             RTNCODE RSTD;         /*                               */
*           IF ICTPDEXP(1)=OFF      /* IF NOT DELETED                */
*               &ICTPDIMP(1)=OFF    /*                               */
*             THEN                  /*                               */
         TM    ICTPDEXP(P8PTR),B'00110000'                         0705
         BNZ   @RF00705                                            0705
*             CALL OK1NTDEL;        /*                               */
         BAL   @14,OK1NTDEL                                        0706
*           ELSE                    /*                               */
*             CALL OK1DEL;          /*                               */
         B     @RC00705                                            0707
@RF00705 BAL   @14,OK1DEL                                          0707
*           OKRC1=MAX(OKRC1,RTNCODE);/*                              */
@RC00705 CR    OKRC1,RTNCODE                                       0708
         BNL   *+6
         LR    OKRC1,RTNCODE                                       0708
*           RFY                                                    0709
*             RTNCODE UNRSTD;       /*                               */
*           ICTPPROC(1)=OFF;        /* PTF NO LONGER IN PROCESS      */
         NI    ICTPPROC(P8PTR),B'01111111'                         0710
*           OKRC=MAX(OKRC,OKRC1);   /* UPDATE RETURN CODE            */
         CR    OKRC,OKRC1                                          0711
         BNL   *+6
         LR    OKRC,OKRC1                                          0711
*         END;                      /* END SYSMOD ELIGIBLE           */
*     END;                          /* END ALL SYSMOD FOUND          */
@RF00698 DS    0H                                                  0713
@DE00681 TM    FND,B'00000010'                                     0713
         BNO   @DC00681                                            0713
         CH    OKRC,@CH00033                                       0713
         BL    @DL00681                                            0713
@DC00681 DS    0H                                                  0714
*   END;                            /* END CONTINUAL LOOP            */
@DE00675 TM    LOOPSW1,B'00000001'                                 0714
         BO    @DL00675                                            0714
*   RETURN CODE(OKRC);              /*                               */
         LR    @15,OKRC                                            0715
         L     @14,@SA00009                                        0715
         LM    @00,@12,@SA00009+8                                  0715
         BR    @14                                                 0715
*                                                                  0716
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO COMPLETE PROCESSING FOR THOSE NON           */
*   /* DELETED/NON SUPERCEDED SYSMODS                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0716
*OK1NTDEL:                          /*                               */
*   PROCEDURE;                      /*                               */
OK1NTDEL STM   @14,@12,@SA00010                                    0716
*   DECLARE                         /*                               */
*     NTDELRC FIXED(8);             /*                               */
*   DECLARE                         /*                               */
*     TMPID CHAR(8),                /* CDS/ACDS ID                   */
*     TMPTYPE FIXED(8),             /* CDS/ACDS ID SYSMOD TYPE       */
*     NTX FIXED(31);                /* INDEX THRU IOP                */
*   DECLARE                         /*                               */
*     TIMETEMP CHAR(4) BDY(WORD);   /*                               */
*   DECLARE                         /*                               */
*     SAVAPPD CHAR(3),              /*                               */
*     SAVAPPT CHAR(3);              /*                               */
*   RFY                             /*                               */
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   RFY                             /*                               */
*     ICTPTF BASED(P8PTR);          /*                               */
*   NTDELRC=ZERO;                   /*                               */
         SLR   NTDELRC,NTDELRC                                     0723
*   RFY                                                            0724
*     RTNCODE RSTD;                 /*                               */
*                                                                  0724
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NO SYSMOD ENTRY EXISTS ON THE DATASET ALREADY PUT ONE OUT  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0725
*   IF ICTPCDSE(1)=OFF              /* IF NO ENTRY ON DATASET        */
*       &ICTPSUPN(1)=ZERO           /* AND NOT SUPED SYSMOD ENTRY    */
*     THEN                          /*                               */
         TM    ICTPCDSE(P8PTR),B'10000000'                         0725
         BNZ   @RF00725                                            0725
         ICM   @14,3,ICTPSUPN(P8PTR)                               0725
         BNZ   @RF00725                                            0725
*     DO;                           /*                               */
*       CALL HMASMSEC(ICTPTF(1),IOPPTR);/* CREATE ONE                */
         ST    P8PTR,@AL00001                                      0727
         LA    @14,IOPPTR                                          0727
         ST    @14,@AL00001+4                                      0727
         L     @15,@CV01867                                        0727
         LA    @01,@AL00001                                        0727
         BALR  @14,@15                                             0727
*       NTDELRC=MAX(NTDELRC,RTNCODE);/* SAVE RC                      */
         CR    NTDELRC,RTNCODE                                     0728
         BNL   *+6
         LR    NTDELRC,RTNCODE                                     0728
*     END;                          /*                               */
*                                                                  0729
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RESTORE AND SYSMOD HAD INLINE JCLIN THEN MUST NOW DELETE   */
*   /* ANY ENTRIES THAT WERE ADDED TO CDS AS RESULT OF JCLIN         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0730
*   IF(ICTPJCLP(1)=ON               /* IF SYSMOD HAD JCLIN           */
*       ×ICTPADDP(1)=ON)            /* OR ADDED CDS ELEMENTS         */
*       &CCARES=ON                  /* AND RESTORE                   */
*       &NTDELRC<STOPPTF            /*                               */
*     THEN                          /*                               */
@RF00725 TM    ICTPJCLP(P8PTR),B'00000010'                         0730
         BO    @GL00050                                            0730
         TM    ICTPADDP(P8PTR),B'00000010'                         0730
         BNO   @RF00730                                            0730
@GL00050 TM    CCARES(CCAPTR),B'00001000'                          0730
         BNO   @RF00730                                            0730
         CH    NTDELRC,@CH00121                                    0730
         BNL   @RF00730                                            0730
*     DO;                           /*                               */
*       BUPPARM=''B;                /* ZERO BUR PARM                 */
         XC    BUPPARM(20),BUPPARM                                 0732
*       BUPFUNCT=BUPCDSDL;          /* SET TO DELETE CDS ENTRIES     */
         MVI   BUPFUNCT,X'06'                                      0733
*       BUPSTYPE=ICTPTYPE(1);       /* SET SYSMOD TYPE               */
         MVC   BUPSTYPE(1),ICTPTYPE(P8PTR)                         0734
*       BUPSYSMD=ICTPTFS(1);        /* SET SYSMOD NUMBER             */
         MVC   BUPSYSMD(7),ICTPTFS(P8PTR)                          0735
*       CALL HMASMBUR(BUPPARM);     /* DELETE ENTRIES                */
         L     @15,@CV01859                                        0736
         LA    @01,@AL00736                                        0736
         BALR  @14,@15                                             0736
*       NTDELRC=MAX(NTDELRC,RTNCODE);/* SAVE RC                      */
         CR    NTDELRC,RTNCODE                                     0737
         BNL   *+6
         LR    NTDELRC,RTNCODE                                     0737
*     END;                          /*                               */
*                                                                  0738
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RESTORE OR ACCEPT AFTER APPLY AND SYSMOD HAD INLINE JCLIN  */
*   /* MUST NOW PURGE BACKUP COPIES FROM SCDS                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0739
*   IF(ICTPJCLP(1)=ON               /* IF SYSMOD HAD JCLIN           */
*       ×ICTPADDP(1)=ON             /* OR ADDED ELEMENTS             */
*       ×ICTPMDLP(1)=ON)            /* OR DELETED ELEMENTS           */
*       &(CCARES=ON                 /* AND EITHER RESTORE            */
*       ×(CCAACCPT=ON&TBLNOAPP=OFF))/* OR ACCEPT NOT NOAPPLY         */
*       &NTDELRC<STOPPTF            /*                               */
*     THEN                          /*                               */
@RF00730 TM    ICTPJCLP(P8PTR),B'00000010'                         0739
         BO    @GL00053                                            0739
         TM    ICTPADDP(P8PTR),B'00000011'                         0739
         BZ    @RF00739                                            0739
@GL00053 TM    CCARES(CCAPTR),B'00001000'                          0739
         BO    @GL00052                                            0739
         TM    CCAACCPT(CCAPTR),B'00100000'                        0739
         BNO   @RF00739                                            0739
         L     @14,CCATBLPA(,CCAPTR)                               0739
         TM    TBLNOAPP(@14),B'10000000'                           0739
         BNZ   @RF00739                                            0739
@GL00052 CH    NTDELRC,@CH00121                                    0739
         BNL   @RF00739                                            0739
*     DO;                           /*                               */
*       BUPPARM=''B;                /* ZERO BUR PARM                 */
         XC    BUPPARM(20),BUPPARM                                 0741
*       BUPFUNCT=BUPSTOWD;          /* SET TO DELETE SCDS ENTRIES    */
         MVI   BUPFUNCT,X'05'                                      0742
*       BUPSTYPE=ICTPTYPE(1);       /* SET SYSMOD TYPE               */
         MVC   BUPSTYPE(1),ICTPTYPE(P8PTR)                         0743
*       BUPSYSMD=ICTPTFS(1);        /* SET SYSMOD NUMBER             */
         MVC   BUPSYSMD(7),ICTPTFS(P8PTR)                          0744
*       CALL HMASMBUR(BUPPARM);     /* DELETE ENTRIES                */
         L     @15,@CV01859                                        0745
         LA    @01,@AL00745                                        0745
         BALR  @14,@15                                             0745
*       NTDELRC=MAX(NTDELRC,RTNCODE);/* SAVE RC                      */
         CR    NTDELRC,RTNCODE                                     0746
         BNL   *+6
         LR    NTDELRC,RTNCODE                                     0746
*     END;                          /*                               */
*                                                                  0747
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RESTORE THEN PURGE ENTRIES FROM CRQ/ACRQ                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0748
*   IF CCARES=ON                    /*                               */
*       &NTDELRC<STOPPTF            /*                               */
*     THEN                          /*                               */
@RF00739 TM    CCARES(CCAPTR),B'00001000'                          0748
         BNO   @RF00748                                            0748
         CH    NTDELRC,@CH00121                                    0748
         BNL   @RF00748                                            0748
*     DO;                           /*                               */
*       CALL HMASMPGC(ICTPTF(1));   /*                               */
         ST    P8PTR,@AL00001                                      0750
         L     @15,@CV01864                                        0750
         LA    @01,@AL00001                                        0750
         BALR  @14,@15                                             0750
*       NTDELRC=MAX(NTDELRC,RTNCODE);/*                              */
         CR    NTDELRC,RTNCODE                                     0751
         BNL   *+6
         LR    NTDELRC,RTNCODE                                     0751
*     END;                          /*                               */
*                                                                  0752
*   /*****************************************************************/
*   /*                                                               */
*   /* IF APPLY OR ACCEPT THEN WRITE RCDS TO CRQ/ACRQ                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0753
*   IF(CCAACCPT=ON×CCAAPPLY=ON)     /*                               */
*       &ICTPSUPN(1)=ZERO           /* AND NOT SUPED SYSMOD ENTRY    */
*       &NTDELRC<STOPPTF            /*                               */
*     THEN                          /*                               */
@RF00748 TM    CCAACCPT(CCAPTR),B'01100000'                        0753
         BZ    @RF00753                                            0753
         ICM   @14,3,ICTPSUPN(P8PTR)                               0753
         BNZ   @RF00753                                            0753
         CH    NTDELRC,@CH00121                                    0753
         BNL   @RF00753                                            0753
*     DO;                           /*                               */
*       CALL HMASMCRW(ICTPTF(1));   /*                               */
         ST    P8PTR,@AL00001                                      0755
         L     @15,@CV01860                                        0755
         LA    @01,@AL00001                                        0755
         BALR  @14,@15                                             0755
*       NTDELRC=MAX(NTDELRC,RTNCODE);/*                              */
         CR    NTDELRC,RTNCODE                                     0756
         BNL   *+6
         LR    NTDELRC,RTNCODE                                     0756
*     END;                          /*                               */
*                                                                  0757
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL ROUTINE TO STORE SUP INFO TO CDS/ACDS                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0758
*   IF NTDELRC<STOPPTF              /* IF NO PREV ERRORS             */
*       &(                          /* AND                           */
*       ((CCAAPPLY=ON×CCAACCPT=ON)  /* EITHER APPLY OR ACCEPT        */
*       &ICTPSUPN(1)=ZERO)          /* AND SYSMOD NOT SUPED          */
*       ×(CCARES=ON)                /* OR RESTORE                    */
*       )                           /*                               */
*     THEN                          /*                               */
@RF00753 CH    NTDELRC,@CH00121                                    0758
         BNL   @RF00758                                            0758
         TM    CCAAPPLY(CCAPTR),B'01100000'                        0758
         BZ    @GL00061                                            0758
         ICM   @14,3,ICTPSUPN(P8PTR)                               0758
         BZ    @RT00758                                            0758
@GL00061 TM    CCARES(CCAPTR),B'00001000'                          0758
         BNO   @RF00758                                            0758
@RT00758 DS    0H                                                  0759
*     DO;                           /*                               */
*       CALL HMASMSUP(ICTPTF(1));   /*                               */
         ST    P8PTR,@AL00001                                      0760
         L     @15,@CV01869                                        0760
         LA    @01,@AL00001                                        0760
         BALR  @14,@15                                             0760
*       NTDELRC=MAX(NTDELRC,RTNCODE);/*                              */
         CR    NTDELRC,RTNCODE                                     0761
         BNL   *+6
         LR    NTDELRC,RTNCODE                                     0761
*     END;                          /*                               */
*                                                                  0762
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL ROUTINE TO UPDATE MODID FIELDS                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0763
*   IF NTDELRC<STOPPTF              /*                               */
*       &ICTPSUPN(1)=ZERO           /* AND NOT SUPED SYSMOD ENTRY    */
*     THEN                          /*                               */
@RF00758 CH    NTDELRC,@CH00121                                    0763
         BNL   @RF00763                                            0763
         ICM   @14,3,ICTPSUPN(P8PTR)                               0763
         BNZ   @RF00763                                            0763
*     DO;                           /*                               */
*       CALL HMASMIDU(ICTPTF(1));   /*                               */
         ST    P8PTR,@AL00001                                      0765
         L     @15,@CV01862                                        0765
         LA    @01,@AL00001                                        0765
         BALR  @14,@15                                             0765
*       NTDELRC=MAX(NTDELRC,RTNCODE);/*                              */
         CR    NTDELRC,RTNCODE                                     0766
         BNL   *+6
         LR    NTDELRC,RTNCODE                                     0766
*     END;                          /*                               */
*                                                                  0767
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE SYSMOD ENTRIES FROM SMPPTS                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0768
*   IF NTDELRC<STOPPTF              /* IF PREV FUNCTIONS OK          */
*       &(                          /* AND EITHER                    */
*       (CCAACCPT=ON&TBLNOAPP=OFF&CCAPTSNP=OFF)/* ACC BUT NOT NOAPP
*                                      AND NOT NOPURGE               */
*       ×(CCARES=ON&CCAPTSNJ=OFF)   /* OR RESTORE WITH REJECT        */
*       )                           /*                               */
*     THEN                          /*                               */
@RF00763 CH    NTDELRC,@CH00121                                    0768
         BNL   @RF00768                                            0768
         TM    CCAACCPT(CCAPTR),B'00100000'                        0768
         BNO   @GL00065                                            0768
         L     @14,CCATBLPA(,CCAPTR)                               0768
         TM    TBLNOAPP(@14),B'10000000'                           0768
         BNZ   @GL00065                                            0768
         TM    CCAPTSNP(CCAPTR),B'10000000'                        0768
         BZ    @RT00768                                            0768
@GL00065 TM    CCARES(CCAPTR),B'00001000'                          0768
         BNO   @RF00768                                            0768
         TM    CCAPTSNJ(CCAPTR),B'00010000'                        0768
         BNZ   @RF00768                                            0768
@RT00768 DS    0H                                                  0769
*     DO;                           /*                               */
*       CALL HMASMRJD(ICTPTFS(1),ICTPTPFX(1),ICTPRELN(1));         0770
         ST    P8PTR,@AL00001                                      0770
         LA    @14,ICTPTPFX(,P8PTR)                                0770
         ST    @14,@AL00001+4                                      0770
         LA    @14,ICTPRELN(,P8PTR)                                0770
         ST    @14,@AL00001+8                                      0770
         L     @15,@CV01865                                        0770
         LA    @01,@AL00001                                        0770
         BALR  @14,@15                                             0770
*       NTDELRC=MAX(NTDELRC,RTNCODE);/* SAVE RC                      */
         CR    NTDELRC,RTNCODE                                     0771
         BNL   *+6
         LR    NTDELRC,RTNCODE                                     0771
*     END;                          /*                               */
*   RFY                                                            0773
*     RTNCODE UNRSTD;               /*                               */
@RF00768 DS    0H                                                  0774
*                                                                  0774
*   /*****************************************************************/
*   /*                                                               */
*   /* IF SYSMOD PROCESSED OK THEN UPDATE THE CDS/ACDS ID LIST IN THE*/
*   /* PTS SYSMOD ENTRY                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0774
*   IF NTDELRC<STOPPTF              /* IF PTF PROCESSED OK           */
*       &(                          /* AND EITHER                    */
*       CCAAPPLY=ON                 /* APPLY                         */
*       ×                           /* OR                            */
*       (CCAACCPT=ON                /* ACCEPT WITH                   */
*       &(TBLNOAPP=ON×CCAPTSNP=ON)) /* NOAPPLY OR NO PTS PURGE       */
*       ×                           /* OR                            */
*       (CCARES=ON&CCAPTSNJ=ON)     /* OR RESTORE WITH NO PTS REJECT */
*       )                           /*                               */
*     THEN                          /*                               */
         CH    NTDELRC,@CH00121                                    0774
         BNL   @RF00774                                            0774
         TM    CCAAPPLY(CCAPTR),B'01000000'                        0774
         BO    @RT00774                                            0774
         TM    CCAACCPT(CCAPTR),B'00100000'                        0774
         BNO   @GL00070                                            0774
         L     @08,CCATBLPA(,CCAPTR)                               0774
         TM    TBLNOAPP(@08),B'10000000'                           0774
         BO    @RT00774                                            0774
         TM    CCAPTSNP(CCAPTR),B'10000000'                        0774
         BO    @RT00774                                            0774
@GL00070 TM    CCARES(CCAPTR),B'00001000'                          0774
         BNO   @RF00774                                            0774
         TM    CCAPTSNJ(CCAPTR),B'00010000'                        0774
         BNO   @RF00774                                            0774
@RT00774 DS    0H                                                  0775
*     DO;                           /*                               */
*       IOPFUNCT=IOPLOC;            /* LOCATE                        */
         L     @08,IOPPTR                                          0776
         MVI   IOPFUNCT(@08),X'03'                                 0776
*       IOPNAME=ICTPTFS(1);         /* THE CURRENT                   */
         MVI   IOPNAME+7(@08),C' '                                 0777
         MVC   IOPNAME(7,@08),ICTPTFS(P8PTR)                       0777
*       IOPTYPE=IOPSMD;             /* SYSMOD                        */
         MVI   IOPTYPE(@08),X'0B'                                  0778
*       IOPDSID=IOPPTS;             /* ON THE SMPPTS                 */
         MVI   IOPDSID(@08),X'06'                                  0779
*       CALL HMASMIO(HMASMIOP);     /*                               */
         ST    @08,@AL00001                                        0780
         L     @15,@CV01863                                        0780
         LA    @01,@AL00001                                        0780
         BALR  @14,@15                                             0780
*       IF IOPRETRN=IOPGOOD         /* IF LOCATED OK                 */
*         THEN                      /*                               */
         L     @08,IOPPTR                                          0781
         CLI   IOPRETRN(@08),0                                     0781
         BNE   @RF00781                                            0781
*         DO;                       /*                               */
*           IF CCAAPPLY=ON          /* IF APPLY                      */
*               ×CCARES=ON          /* OR RESTORE                    */
*             THEN                  /*                               */
         TM    CCAAPPLY(CCAPTR),B'01001000'                        0783
         BZ    @RF00783                                            0783
*             DO;                   /*                               */
*               TMPID=CCACDSID;     /* SAVE CDSID                    */
         MVC   TMPID(8),CCACDSID(CCAPTR)                           0785
*               TMPTYPE=IOPPAPID;   /* AND APPLY ID SUBENTRY TYPE    */
         LA    TMPTYPE,40                                          0786
*               IOPAPP=ON;          /* SYSMOD APPLIED                */
         OI    IOPAPP(@08),B'10000000'                             0787
*             END;                  /*                               */
*           ELSE                    /*                               */
*             DO;                   /*                               */
         B     @RC00783                                            0789
@RF00783 DS    0H                                                  0790
*               TMPID=CCAACDID;     /* SAVE ACDSID                   */
         MVC   TMPID(8),CCAACDID(CCAPTR)                           0790
*               TMPTYPE=IOPPACID;   /* AND ACCPT ID SUBENTRY TYPE    */
         LA    TMPTYPE,41                                          0791
*               IOPACC=ON;          /* SYSMOD ACCEPTED               */
         L     @08,IOPPTR                                          0792
         OI    IOPACC(@08),B'00100000'                             0792
*             END;                  /*                               */
*           DO NTX=1 BY 1 WHILE(    /* LOOP THRU SYSMOD SUBENTRIES   */
*                 IOPPTFND(NTX)^=IOPEOLST/* TILL END                 */
*                 &(IOPPIND(NTX)^=TMPTYPE/* OR TILL ID AND TYPE MATCH*/
*                 ×IOPPMODS(NTX)^=TMPID));/* FOUND                   */
@RC00783 LA    NTX,1                                               0794
         B     @DE00794                                            0794
@DL00794 DS    0H                                                  0795
*           END;                    /* END SEARCH FOR ID             */
         AH    NTX,@CH00037                                        0795
@DE00794 L     @08,IOPPTR                                          0795
         LR    @15,NTX                                             0795
         MH    @15,@CH00035                                        0795
         SLR   @14,@14                                             0795
         IC    @14,IOPPTFND-9(@15,@08)                             0795
         CH    @14,@CH00628                                        0795
         BE    @DC00794                                            0795
         SLR   @14,@14                                             0795
         IC    @14,IOPPIND-9(@15,@08)                              0795
         CR    TMPTYPE,@14                                         0795
         BNE   @DL00794                                            0795
         ALR   @08,@15                                             0795
         CLC   IOPPMODS-9(8,@08),TMPID                             0795
         BNE   @DL00794                                            0795
@DC00794 DS    0H                                                  0796
*           SMDUPD=OFF;             /* INDICATE SYSMOD NOT UPDATED   */
*                                                                  0796
         NI    SMDUPD,B'11111011'                                  0796
*           /*********************************************************/
*           /*                                                       */
*           /* NOW DETERMINE WHETHER SYSMOD MUST BE UPDATED AND IF SO*/
*           /* EITHER ADD OR DELETE THE ID FROM THE ENTRY            */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0797
*           IF IOPPTFND(NTX)=IOPEOLST/* IF ID NOT FOUND              */
*             THEN                  /*                               */
         LA    @08,255                                             0797
         L     @15,IOPPTR                                          0797
         LR    @14,NTX                                             0797
         MH    @14,@CH00035                                        0797
         SLR   @07,@07                                             0797
         IC    @07,IOPPTFND-9(@14,@15)                             0797
         CR    @08,@07                                             0797
         BNE   @RF00797                                            0797
*             DO;                   /*                               */
*               IF CCAAPPLY=ON×CCAACCPT=ON/* IF APPLY OR ACCEPT      */
*                 THEN              /* THEN MUST ADD ID TO           */
         TM    CCAAPPLY(CCAPTR),B'01100000'                        0799
         BZ    @RF00799                                            0799
*                 DO;               /* SYSMOD                        */
*                   IOPPIND(NTX)=TMPTYPE;/* SET SUBENTRY TYPE        */
         STC   TMPTYPE,IOPPIND-9(@14,@15)                          0801
*                   IOPPMODS(NTX)=TMPID;/* ID VALUE                  */
         ST    @14,@TF00001                                        0802
         ALR   @14,@15                                             0802
         MVC   IOPPMODS-9(8,@14),TMPID                             0802
*                   IOPPTFND(NTX+1)=IOPEOLST;/* NEW END OF LIST      */
         L     @05,@TF00001                                        0803
         STC   @08,IOPPTFND(@05,@15)                               0803
*                   SMDUPD=ON;      /*                               */
         OI    SMDUPD,B'00000100'                                  0804
*                 END;              /*                               */
*             END;                  /*                               */
*           ELSE                    /*                               */
*             DO;                   /*                               */
         B     @RC00797                                            0807
@RF00797 DS    0H                                                  0808
*               IF CCARES=ON        /* IF RESTORE THEN MUST DELETE   */
*                 THEN              /* ID FROM SYSMOD                */
         TM    CCARES(CCAPTR),B'00001000'                          0808
         BNO   @RF00808                                            0808
*                 DO;               /*                               */
*                   DO NTX=NTX BY 1 WHILE(/* SHIFT REST OF ENTRIES   */
*                         IOPPTFND(NTX)^=IOPEOLST);/* OVER           */
         B     @DE00810                                            0810
@DL00810 DS    0H                                                  0811
*                     IOPPNTRY(NTX)=IOPPNTRY(NTX+1);/* SHIFT ENTRY   */
         L     @08,IOPPTR                                          0811
         LR    @05,NTX                                             0811
         MH    @05,@CH00035                                        0811
         ST    @05,@TF00001                                        0811
         ALR   @05,@08                                             0811
         AL    @08,@TF00001                                        0811
         MVC   IOPPNTRY-9(9,@05),IOPPNTRY(@08)                     0811
*                   END;            /* END SHIFT                     */
         AH    NTX,@CH00037                                        0812
@DE00810 LR    @08,NTX                                             0812
         MH    @08,@CH00035                                        0812
         L     @05,IOPPTR                                          0812
         SLR   @15,@15                                             0812
         IC    @15,IOPPTFND-9(@08,@05)                             0812
         CH    @15,@CH00628                                        0812
         BNE   @DL00810                                            0812
*                   SMDUPD=ON;      /*                               */
         OI    SMDUPD,B'00000100'                                  0813
*                   DO NTX=1 BY 1 WHILE(/* LOOP THRU SUBENTRIES      */
*                         IOPPTFND(NTX)^=IOPEOLST/* TO SEE IF ANY    */
*                         &IOPPIND(NTX)^=IOPPAPID);/* APPLY IDS ARE  */
         LA    NTX,1                                               0814
         B     @DE00814                                            0814
@DL00814 DS    0H                                                  0815
*                   END;            /* LEFT                          */
         AH    NTX,@CH00037                                        0815
@DE00814 L     @08,IOPPTR                                          0815
         LR    @05,NTX                                             0815
         MH    @05,@CH00035                                        0815
         SLR   @15,@15                                             0815
         IC    @15,IOPPTFND-9(@05,@08)                             0815
         CH    @15,@CH00628                                        0815
         BE    @DC00814                                            0815
         SLR   @15,@15                                             0815
         IC    @15,IOPPIND-9(@05,@08)                              0815
         CH    @15,@CH00497                                        0815
         BNE   @DL00814                                            0815
@DC00814 DS    0H                                                  0816
*                   IF IOPPTFND(NTX)=IOPEOLST/* IF NONE LEFT THEN    */
*                     THEN          /* SYSMOD HAS NOT BEEN APPLIED   */
         L     @08,IOPPTR                                          0816
         LR    @05,NTX                                             0816
         MH    @05,@CH00035                                        0816
         SLR   @15,@15                                             0816
         IC    @15,IOPPTFND-9(@05,@08)                             0816
         CH    @15,@CH00628                                        0816
         BNE   @RF00816                                            0816
*                     IOPAPP=OFF;   /*                               */
         NI    IOPAPP(@08),B'01111111'                             0817
*                 END;              /*                               */
@RF00816 DS    0H                                                  0819
*             END;                  /*                               */
*                                                                  0819
@RF00808 DS    0H                                                  0820
*           /*********************************************************/
*           /*                                                       */
*           /* NOW STOW UPDATED PTS SYSMOD ENTRY                     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0820
*           IF SMDUPD=ON            /* IF SYSMOD UPDATED             */
*             THEN                  /*                               */
@RC00797 TM    SMDUPD,B'00000100'                                  0820
         BNO   @RF00820                                            0820
*             DO;                   /*                               */
*               IOPFUNCT=IOPSTOWR;  /*                               */
         L     @08,IOPPTR                                          0822
         MVI   IOPFUNCT(@08),X'54'                                 0822
*               CALL HMASMIO(HMASMIOP);/*                            */
         ST    @08,@AL00001                                        0823
         L     @15,@CV01863                                        0823
         LA    @01,@AL00001                                        0823
         BALR  @14,@15                                             0823
*               NTDELRC=MAX(NTDELRC,IOPRETRN);/* SAVE RC             */
         L     @08,IOPPTR                                          0824
         SLR   @05,@05                                             0824
         IC    @05,IOPRETRN(,@08)                                  0824
         CR    NTDELRC,@05                                         0824
         BNL   *+6
         LR    NTDELRC,@05                                         0824
*             END;                  /*                               */
*         END;                      /* END SYSMOD LOCATED ON PTS     */
*       ELSE                        /* IF ERR IN LOCATE              */
*         NTDELRC=MAX(NTDELRC,IOPRETRN);/* SAVE RC                   */
         B     @RC00781                                            0827
@RF00781 L     @08,IOPPTR                                          0827
         SLR   @05,@05                                             0827
         IC    @05,IOPRETRN(,@08)                                  0827
         CR    NTDELRC,@05                                         0827
         BNL   *+6
         LR    NTDELRC,@05                                         0827
*     END;                          /* END UPDATE PTS SYSMOD GROUP   */
@RC00781 DS    0H                                                  0829
*                                                                  0829
*   /*****************************************************************/
*   /*                                                               */
*   /* GET SYSTEM TIME TO PUT IN SYSMOD ENTRIES                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0829
*   GEN(TIME DEC)                                                  0829
*   SETS(R0);                       /*                               */
@RF00774 DS    0H                                                  0829
         TIME DEC
*   RFY                             /*                               */
*     R0 RSTD;                      /*                               */
*   TIMETEMP=R0;                    /* SAVE TIME                     */
         ST    R0,TIMETEMP                                         0831
*   RFY                             /*                               */
*     R0 UNRSTD;                    /*                               */
*                                                                  0832
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ACCEPT WITHOUT NOAPPLY THEN TURN ON ACC BIT IN CDS SYSMOD  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0833
*   IF NTDELRC<STOPPTF              /*                               */
*       &CCAACCPT=ON                /*                               */
*       &TBLNOAPP=OFF               /*                               */
*     THEN                          /*                               */
         CH    NTDELRC,@CH00121                                    0833
         BNL   @RF00833                                            0833
         TM    CCAACCPT(CCAPTR),B'00100000'                        0833
         BNO   @RF00833                                            0833
         L     @08,CCATBLPA(,CCAPTR)                               0833
         TM    TBLNOAPP(@08),B'10000000'                           0833
         BNZ   @RF00833                                            0833
*     DO;                           /*                               */
*       IOPFUNCT=IOPLOC;            /* GET                           */
         L     @08,IOPPTR                                          0835
         MVI   IOPFUNCT(@08),X'03'                                 0835
*       IOPTYPE=IOPSMD;             /* SYSMOD ENTRY                  */
         MVI   IOPTYPE(@08),X'0B'                                  0836
*       IOPNAME=ICTPTFS(1);         /* FOR CURRENT SYSMOD            */
         MVI   IOPNAME+7(@08),C' '                                 0837
         MVC   IOPNAME(7,@08),ICTPTFS(P8PTR)                       0837
*       IOPDSID=IOPCDS;             /* FROM CDS                      */
         MVI   IOPDSID(@08),X'02'                                  0838
*       CALL HMASMIO(HMASMIOP);     /*                               */
         ST    @08,@AL00001                                        0839
         L     @15,@CV01863                                        0839
         LA    @01,@AL00001                                        0839
         BALR  @14,@15                                             0839
*       IF IOPRETRN=IOPGOOD         /* IF FOUND                      */
*           &IOPDUMMP=OFF           /* AND NOT DUMMY SUP             */
*         THEN                      /*                               */
         L     @08,IOPPTR                                          0840
         CLI   IOPRETRN(@08),0                                     0840
         BNE   @RF00840                                            0840
         TM    IOPDUMMP(@08),B'00000100'                           0840
         BNZ   @RF00840                                            0840
*         DO;                       /*                               */
*           IOPFUNCT=IOPSTOWR;      /*                               */
         MVI   IOPFUNCT(@08),X'54'                                 0842
*           IOPACC=ON;              /* SET ACCEPT BIT                */
         OI    IOPACC(@08),B'00100000'                             0843
*           IOPACCD=CCADATE;        /* SET DATE AND TIME             */
         MVC   IOPACCD(3,@08),CCADATE(CCAPTR)                      0844
*           IOPACCT=TIMETEMP(1:3);  /*                               */
         MVC   IOPACCT(3,@08),TIMETEMP                             0845
*           SAVAPPD=IOPAPPD;        /* SAVE APPLY DATE AND TIME TO   */
         MVC   SAVAPPD(3),IOPAPPD(@08)                             0846
*           SAVAPPT=IOPAPPT;        /* PUT IN ACDS                   */
         MVC   SAVAPPT(3),IOPAPPT(@08)                             0847
*           CALL HMASMIO(HMASMIOP); /*                               */
         ST    @08,@AL00001                                        0848
         L     @15,@CV01863                                        0848
         LA    @01,@AL00001                                        0848
         BALR  @14,@15                                             0848
*         END;                      /*                               */
*       IF IOPRETRN>IOPNTFND        /*                               */
*         THEN                      /*                               */
@RF00840 L     @08,IOPPTR                                          0850
         CLI   IOPRETRN(@08),4                                     0850
         BNH   @RF00850                                            0850
*         NTDELRC=MAX(NTDELRC,IOPRETRN);/*                           */
         SLR   @05,@05                                             0851
         IC    @05,IOPRETRN(,@08)                                  0851
         CR    NTDELRC,@05                                         0851
         BNL   *+6
         LR    NTDELRC,@05                                         0851
*     END;                          /*                               */
@RF00850 DS    0H                                                  0853
*                                                                  0853
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ALL PROCESSING FOR SYSMOD OK THEN STOW ENTRY               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0853
*   IF ICTPSUPN(1)=ZERO             /* IF NOT SUPED SYSMOD           */
*     THEN                          /* THEN STOW (A)CDS ENTRY        */
@RF00833 ICM   @08,3,ICTPSUPN(P8PTR)                               0853
         BNZ   @RF00853                                            0853
*     DO;                           /*                               */
*       IF NTDELRC<STOPPTF          /* IF PREV FUNCTIONS OK          */
*         THEN                      /*                               */
         CH    NTDELRC,@CH00121                                    0855
         BNL   @RF00855                                            0855
*         DO;                       /*                               */
*           IOPNAM17=ICTPTFS(1);    /*                               */
         L     @08,IOPPTR                                          0857
         MVC   IOPNAM17(7,@08),ICTPTFS(P8PTR)                      0857
*           IOPTYPE=IOPSMD;         /*                               */
         MVI   IOPTYPE(@08),X'0B'                                  0858
*           IF CCAAPPLY=ON          /* IF APPLY OR RESTORE           */
*               ×CCARES=ON          /*                               */
*             THEN                  /*                               */
         TM    CCAAPPLY(CCAPTR),B'01001000'                        0859
         BZ    @RF00859                                            0859
*             IOPDSID=IOPCDS;       /* LOCATE ON CDS                 */
         MVI   IOPDSID(@08),X'02'                                  0860
*           ELSE                    /*                               */
*             IOPDSID=IOPACDS;      /* LOCATE ON ACDS FOR ACCEPT     */
         B     @RC00859                                            0861
@RF00859 L     @08,IOPPTR                                          0861
         MVI   IOPDSID(@08),X'0C'                                  0861
*           IF CCARES=OFF           /* NO NEED TO LOCATE FOR RESTORE */
*             THEN                  /*                               */
@RC00859 TM    CCARES(CCAPTR),B'00001000'                          0862
         BNZ   @RF00862                                            0862
*             DO;                   /*                               */
*               IOPFUNCT=IOPLOC;    /*                               */
         L     @08,IOPPTR                                          0864
         MVI   IOPFUNCT(@08),X'03'                                 0864
*               CALL HMASMIO(HMASMIOP);/*                            */
         ST    @08,@AL00001                                        0865
         L     @15,@CV01863                                        0865
         LA    @01,@AL00001                                        0865
         BALR  @14,@15                                             0865
*               NTDELRC=MAX(NTDELRC,IOPRETRN);/*                     */
         L     @08,IOPPTR                                          0866
         SLR   @05,@05                                             0866
         IC    @05,IOPRETRN(,@08)                                  0866
         CR    NTDELRC,@05                                         0866
         BNL   *+6
         LR    NTDELRC,@05                                         0866
*             END;                  /*                               */
*           ELSE                    /* IF NOT TO BE LOCATED THEN     */
*             IOPRETRN=IOPGOOD;     /* PRIME RETURN CODE             */
         B     @RC00862                                            0868
@RF00862 L     @08,IOPPTR                                          0868
         MVI   IOPRETRN(@08),X'00'                                 0868
*           IF IOPRETRN=IOPGOOD     /* IF SYSMOD LOCATED OK          */
*             THEN                  /*                               */
@RC00862 L     @08,IOPPTR                                          0869
         CLI   IOPRETRN(@08),0                                     0869
         BNE   @RF00869                                            0869
*             DO;                   /*                               */
*               IF CCAAPPLY=ON      /* IF APPLY                      */
*                 THEN              /*                               */
         TM    CCAAPPLY(CCAPTR),B'01000000'                        0871
         BNO   @RF00871                                            0871
*                 DO;               /*                               */
*                   IOPFUNCT=IOPSTOWR;/*                             */
         MVI   IOPFUNCT(@08),X'54'                                 0873
*                   IOPAPP=ON;      /*                               */
         OI    IOPAPP(@08),B'10000000'                             0874
*                   IOPAPPD=CCADATE;/*                               */
         MVC   IOPAPPD(3,@08),CCADATE(CCAPTR)                      0875
*                   IOPAPPT=TIMETEMP(1:3);/*                         */
         MVC   IOPAPPT(3,@08),TIMETEMP                             0876
*                 END;              /*                               */
*               ELSE                /*                               */
*                 IF CCAACCPT=ON    /* IF ACCEPT                     */
*                   THEN            /* THEN                          */
         B     @RC00871                                            0878
@RF00871 TM    CCAACCPT(CCAPTR),B'00100000'                        0878
         BNO   @RF00878                                            0878
*                   DO;             /*                               */
*                     IOPFUNCT=IOPSTOWR;/* UPDATE DIRECTORY          */
         L     @08,IOPPTR                                          0880
         MVI   IOPFUNCT(@08),X'54'                                 0880
*                     IOPREGEN=ON;  /* SET REGEN                     */
*                     IOPACC=ON;    /*                               */
         OI    IOPREGEN(@08),B'00100001'                           0882
*                     IOPACCD=CCADATE;/* SET ACC DATE AND TIME       */
         MVC   IOPACCD(3,@08),CCADATE(CCAPTR)                      0883
*                     IOPACCT=TIMETEMP(1:3);/*                       */
         MVC   IOPACCT(3,@08),TIMETEMP                             0884
*                     IF TBLNOAPP=OFF/* AND APPLY IF NOT             */
*                       THEN        /* NOAPPLY OPTION                */
         L     @05,CCATBLPA(,CCAPTR)                               0885
         TM    TBLNOAPP(@05),B'10000000'                           0885
         BNZ   @RF00885                                            0885
*                       DO;         /*                               */
*                         IOPAPP=ON;/*                               */
         OI    IOPAPP(@08),B'10000000'                             0887
*                         IOPAPPD=SAVAPPD;/* SET APPLY DATE IN ACDS  */
         MVC   IOPAPPD(3,@08),SAVAPPD                              0888
*                         IOPAPPT=SAVAPPT;/*                         */
         MVC   IOPAPPT(3,@08),SAVAPPT                              0889
*                       END;        /*                               */
*                   END;            /*                               */
*                 ELSE              /* IF RESTORE                    */
*                   IOPFUNCT=IOPSTOWD;/* DO STOW DELETE              */
         B     @RC00878                                            0892
@RF00878 L     @08,IOPPTR                                          0892
         MVI   IOPFUNCT(@08),X'53'                                 0892
*               IOPERROR=OFF;       /*                               */
@RC00878 DS    0H                                                  0893
@RC00871 L     @08,IOPPTR                                          0893
         NI    IOPERROR(@08),B'11101111'                           0893
*               CALL HMASMIO(HMASMIOP);/* UPDATE DATASET WITH      0894
*                                      COMPLETED SYSMOD ENTRY        */
         ST    @08,@AL00001                                        0894
         L     @15,@CV01863                                        0894
         LA    @01,@AL00001                                        0894
         BALR  @14,@15                                             0894
*               NTDELRC=MAX(NTDELRC,IOPRETRN);/* SAVE RC             */
         L     @08,IOPPTR                                          0895
         SLR   @05,@05                                             0895
         IC    @05,IOPRETRN(,@08)                                  0895
         CR    NTDELRC,@05                                         0895
         BNL   *+6
         LR    NTDELRC,@05                                         0895
*               ICTPFLG1(1)=IOPPTFF1;/* RESET STATUS INDICATORS      */
         MVC   ICTPFLG1(1,P8PTR),IOPPTFF1(@08)                     0896
*             END;                  /*                               */
*         END;                      /* END SYSMOD COMPLETED OK       */
@RF00869 DS    0H                                                  0899
*       MGPCLEAR=''B;               /*                               */
@RF00855 XC    MGPCLEAR(6),MGPCLEAR                                0899
*       MGPVARPT(1)=ADDR(CCAFUNCT); /* FUNCTION                      */
         LA    @08,CCAFUNCT(,CCAPTR)                               0900
         ST    @08,MGPVARPT                                        0900
*       MGPVARPT(2)=ADDR(ICTPTFS(1));/* SYSMOD NUMBER                */
         ST    P8PTR,MGPVARPT+4                                    0901
*       MGPTYPE=MGPINFO;            /*                               */
*                                                                  0902
         MVI   MGPTYPE,X'01'                                       0902
*       /*************************************************************/
*       /*                                                           */
*       /* IF SYSMOD COMPLETED OK THEN ISSUE MESSAGE                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0903
*       IF NTDELRC<STOPPTF          /*                               */
*         THEN                      /*                               */
         CH    NTDELRC,@CH00121                                    0903
         BNL   @RF00903                                            0903
*         MGPMGNO1=HMA227I;         /* XXXXXXXX PROCESSING         0904
*                                      SUCCESSFULL FOR SYSMOD XXXXXXX*/
*                                                                  0904
         MVC   MGPMGNO1(2),@CH00476                                0904
*       /*************************************************************/
*       /*                                                           */
*       /* IF SYSMOD DID NOT COMPLETE OK THEN ISSUE ERROR MESSAGE    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0905
*       ELSE                        /*                               */
*         DO;                       /*                               */
         B     @RC00903                                            0905
@RF00903 DS    0H                                                  0906
*           MGPMGNO1=HMA302I;       /* XXXXXXX PROCESSING TERMINATED
*                                      FOR SYSMOD XXXXXXX - REASON = */
         MVC   MGPMGNO1(2),@CH01873                                0906
*           MGPMGNO2=PART105;       /* SMP UPDATE FAILURE            */
         MVC   MGPMGNO2(2),@CH00950                                0907
*         END;                      /*                               */
*       CALL HMASMMSG(HMASMMGP);    /*                               */
@RC00903 L     @15,@CV01866                                        0909
         LA    @01,@AL00909                                        0909
         BALR  @14,@15                                             0909
*     END;                          /* END NOT SUPED SYSMOD          */
*   RETURN CODE(NTDELRC);           /*                               */
@RF00853 LR    @15,NTDELRC                                         0911
         L     @14,@SA00010                                        0911
         LM    @00,@12,@SA00010+8                                  0911
         BR    @14                                                 0911
*   END OK1NTDEL;                   /*                               */
*                                                                  0913
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO COMPLETE PROCESSING FOR DELETED SYSMODS            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0913
*OK1DEL:                            /*                               */
*   PROCEDURE;                      /*                               */
OK1DEL   STM   @14,@12,@SA00011                                    0913
*   DECLARE                         /*                               */
*     DELRC FIXED(8);               /*                               */
*   DECLARE                         /*                               */
*     PFPTR PTR(31),                /*                               */
*     PXF FIXED(31),                /*                               */
*     SAVPF PTR(31),                /*                               */
*     REDOPTR PTR(31);              /*                               */
*   DECLARE                         /*                               */
*     HOLDNUM FIXED(15);            /*                               */
*   RFY                             /*                               */
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   RFY                             /*                               */
*     ICTPTF BASED(P8PTR);          /*                               */
*   RFY                             /*                               */
*     ICTDELLS BASED(PFPTR->ICTPDCHN(1));/*                          */
*   DELRC=ZERO;                     /*                               */
         SLR   DELRC,DELRC                                         0920
*   IOPTYPE=IOPSMD;                 /*                               */
         L     @08,IOPPTR                                          0921
         MVI   IOPTYPE(@08),X'0B'                                  0921
*   IF CCAAPPLY=ON                  /*                               */
*     THEN                          /*                               */
         TM    CCAAPPLY(CCAPTR),B'01000000'                        0922
         BNO   @RF00922                                            0922
*     IOPDSID=IOPCDS;               /*                               */
         MVI   IOPDSID(@08),X'02'                                  0923
*   ELSE                            /*                               */
*     IOPDSID=IOPACDS;              /*                               */
*                                                                  0924
         B     @RC00922                                            0924
@RF00922 L     @08,IOPPTR                                          0924
         MVI   IOPDSID(@08),X'0C'                                  0924
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL ROUTINE TO PROCESS THE SUPED SYSMODS FROM THE DELETED    */
*   /* SYSMOD                                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0925
*   CALL CPLSUPDL;                  /*                               */
@RC00922 BAL   @14,CPLSUPDL                                        0925
*   RFY                             /*                               */
*     RTNCODE RSTD;                 /*                               */
*   DELRC=MAX(DELRC,RTNCODE);       /*                               */
         CR    DELRC,RTNCODE                                       0927
         BNL   *+6
         LR    DELRC,RTNCODE                                       0927
*   RFY                             /*                               */
*     RTNCODE UNRSTD;               /*                               */
*                                                                  0928
*   /*****************************************************************/
*   /*                                                               */
*   /* IF SUP PROCESSING THEN PROCESS DELETING THE SYSMOD            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0929
*   IOPNAME=ICTPTFS(1);             /*                               */
         L     @08,IOPPTR                                          0929
         MVI   IOPNAME+7(@08),C' '                                 0929
         MVC   IOPNAME(7,@08),ICTPTFS(P8PTR)                       0929
*   IF DELRC<STOPPTF                /*                               */
*     THEN                          /*                               */
         CH    DELRC,@CH00121                                      0930
         BNL   @RF00930                                            0930
*     DO;                           /*                               */
*       IF ICTPDIMP(1)=ON           /* IF IMPLICITLY DELETED         */
*         THEN                      /*                               */
         TM    ICTPDIMP(P8PTR),B'00010000'                         0932
         BNO   @RF00932                                            0932
*         DO;                       /*                               */
*           CALL REDOCHK(ICTPTF(1), /* SYSMOD BEING DELETED          */
*               REDOPTR);           /* SAME SYSMOD BEING REINSTALLED */
         ST    P8PTR,@AL00001                                      0934
         LA    @08,REDOPTR                                         0934
         ST    @08,@AL00001+4                                      0934
         LA    @01,@AL00001                                        0934
         BAL   @14,REDOCHK                                         0934
*           IF REDOPTR=ZERO         /* SYSMOD NOT BEING RE-INSTALLED */
*             THEN                                                 0935
         ICM   @08,15,REDOPTR                                      0935
         BNZ   @RF00935                                            0935
*             DO;                                                  0936
*               IOPFUNCT=IOPSTOWD;  /*                               */
         L     @08,IOPPTR                                          0937
         MVI   IOPFUNCT(@08),X'53'                                 0937
*               CALL HMASMIO(HMASMIOP);/* DELETE SYSMOD ENTRY        */
         ST    @08,@AL00001                                        0938
         L     @15,@CV01863                                        0938
         LA    @01,@AL00001                                        0938
         BALR  @14,@15                                             0938
*               DELRC=MAX(DELRC,IOPRETRN);/* SAVE RC                 */
         L     @08,IOPPTR                                          0939
         SLR   @05,@05                                             0939
         IC    @05,IOPRETRN(,@08)                                  0939
         CR    DELRC,@05                                           0939
         BNL   *+6
         LR    DELRC,@05                                           0939
*             END;                                                 0940
*           ICTERROR(1)=OFF;        /* NO LONGER IN ERROR            */
@RF00935 NI    ICTERROR(P8PTR),B'11101111'                         0941
*         END;                      /*                               */
*       ELSE                        /* IF EXPLICITLY DELETED         */
*         IF ICTPPDEL(1)=OFF        /* AND NOT PREVIOUSLY DELETED    */
*           THEN                    /*                               */
         B     @RC00932                                            0943
@RF00932 TM    ICTPPDEL(P8PTR),B'00100000'                         0943
         BNZ   @RF00943                                            0943
*           DO;                     /*                               */
*             HOLDNUM=ZERO;         /*                               */
         SLR   HOLDNUM,HOLDNUM                                     0945
*             DO PFPTR=CCAICPTF BY LENGTH(ICTPTF(1)) WHILE(/* LOOP   */
*                   PFPTR->ICTPEND(1)^=ICTENDNT);/* TILL END OF PTFS */
         L     PFPTR,CCAICPTF(,CCAPTR)                             0946
         B     @DE00946                                            0946
@DL00946 DS    0H                                                  0947
*               IF PFPTR->ICTPCPL(1)=ON/* IF SYSMOD COMPLETE         */
*                   &PFPTR->ICTPNOGO(1)=OFF/* AND NOT NOGO           */
*                   &PFPTR->ICTPDELP(1)=ON/* AND HAS DELETES         */
*                   &PFPTR->ICTPONUM(1)>HOLDNUM/* AND HIGHER ORDER   */
*                 THEN              /* THEN SEE IF THIS ONES         */
         TM    ICTPCPL(PFPTR),B'00100000'                          0947
         BNO   @RF00947                                            0947
         TM    ICTPNOGO(PFPTR),B'01000000'                         0947
         BNZ   @RF00947                                            0947
         TM    ICTPDELP(PFPTR),B'10000000'                         0947
         BNO   @RF00947                                            0947
         SLR   @08,@08                                             0947
         ICM   @08,3,ICTPONUM(PFPTR)                               0947
         CR    HOLDNUM,@08                                         0947
         BNL   @RF00947                                            0947
*                 DO;               /* DELETES CURRENT ON            */
*                   DO PXF=1 BY 1 WHILE(/* SEE IF THIS DELETES       */
*                         ICTDELND(PXF)^=ICTENDIX/* CURRENT          */
*                         &ICTDELNM(PXF)^=ICTPTFS(1));/*             */
         LA    PXF,1                                               0949
         B     @DE00949                                            0949
@DL00949 DS    0H                                                  0950
*                   END;            /*                               */
         AH    PXF,@CH00037                                        0950
@DE00949 LR    @08,PXF                                             0950
         SLA   @08,3                                               0950
         L     @07,ICTPDCHN(,PFPTR)                                0950
         LA    @01,0(@08,@07)                                      0950
         AL    @01,@CF02215                                        0950
         L     @15,ICTDELND(,@01)                                  0950
         CL    @15,ICTENDIX                                        0950
         BE    @DC00949                                            0950
         ALR   @07,@08                                             0950
         AL    @07,@CF02215                                        0950
         CLC   ICTDELNM(7,@07),ICTPTFS(P8PTR)                      0950
         BNE   @DL00949                                            0950
@DC00949 DS    0H                                                  0951
*                   IF ICTDELND(PXF)^=ICTENDIX/* IF NOT STOP         */
*                     THEN          /* AT END                        */
         LR    @08,PXF                                             0951
         SLA   @08,3                                               0951
         L     @07,ICTPDCHN(,PFPTR)                                0951
         AL    @07,@CF02215                                        0951
         L     @08,ICTDELND(@08,@07)                               0951
         CL    @08,ICTENDIX                                        0951
         BE    @RF00951                                            0951
*                     DO;           /*                               */
*                       HOLDNUM=PFPTR->ICTPONUM(1);/* SAVE ORDER     */
         SLR   HOLDNUM,HOLDNUM                                     0953
         ICM   HOLDNUM,3,ICTPONUM(PFPTR)                           0953
*                       SAVPF=PFPTR;/*                               */
         ST    PFPTR,SAVPF                                         0954
*                     END;          /*                               */
*                 END;              /*                               */
@RF00951 DS    0H                                                  0957
*             END;                  /*                               */
@RF00947 AH    PFPTR,@CH02176                                      0957
@DE00946 CLC   ICTPEND(4,PFPTR),ICTENDNT                           0957
         BNE   @DL00946                                            0957
*             IOPPTFDR=''B;         /*                               */
         L     @08,IOPPTR                                          0958
         XC    IOPPTFDR(24,@08),IOPPTFDR(@08)                      0958
*             IOPPTFFX=''B;         /*                               */
         XC    IOPPTFFX(80,@08),IOPPTFFX(@08)                      0959
*             IOPDUMMP=ON;          /* DUMMY ONLY DELETED            */
         OI    IOPDUMMP(@08),B'00000100'                           0960
*             IOPDBYP=ON;           /* DELNUM PRESENT                */
         OI    IOPDBYP(@08),B'01000000'                            0961
*             IOPPTYPE=IOPPFUNC;    /* DELETED ENTRIES ARE FUNCTIONS */
         MVI   IOPPTYPE(@08),X'04'                                 0962
*             IOPDBYNO=SAVPF->ICTPTFS(1);/* PUT IN DELETEING SMD     */
         L     @05,SAVPF                                           0963
         MVC   IOPDBYNO(7,@08),ICTPTFS(@05)                        0963
*             IOPFUNCT=IOPSTOWR;    /*                               */
         MVI   IOPFUNCT(@08),X'54'                                 0964
*             CALL HMASMIO(HMASMIOP);/*                              */
         ST    @08,@AL00001                                        0965
         L     @15,@CV01863                                        0965
         LA    @01,@AL00001                                        0965
         BALR  @14,@15                                             0965
*             DELRC=MAX(DELRC,IOPRETRN);/* SAVE RC                   */
         L     @08,IOPPTR                                          0966
         SLR   @05,@05                                             0966
         IC    @05,IOPRETRN(,@08)                                  0966
         CR    DELRC,@05                                           0966
         BNL   *+6
         LR    DELRC,@05                                           0966
*             ICTPFLG1(1)=IOPPTFF1; /* RESET FLAGS                   */
         MVC   ICTPFLG1(1,P8PTR),IOPPTFF1(@08)                     0967
*           END;                    /*                               */
*     END;                          /* END SUP PROCESSING OK         */
@RF00943 DS    0H                                                  0969
@RC00932 DS    0H                                                  0970
*   CALL HMASMPGC(ICTPTF(1));       /* PURGE CRQ/SCRQ DATA           */
@RF00930 ST    P8PTR,@AL00001                                      0970
         L     @15,@CV01864                                        0970
         LA    @01,@AL00001                                        0970
         BALR  @14,@15                                             0970
*   RFY                             /*                               */
*     RTNCODE RSTD;                 /*                               */
*   DELRC=MAX(DELRC,RTNCODE);       /*                               */
         CR    DELRC,RTNCODE                                       0972
         BNL   *+6
         LR    DELRC,RTNCODE                                       0972
*   RFY                             /*                               */
*     RTNCODE UNRSTD;               /*                               */
*   RETURN CODE(DELRC);             /*                               */
         LR    @15,DELRC                                           0974
         L     @14,@SA00011                                        0974
         LM    @00,@12,@SA00011+8                                  0974
         BR    @14                                                 0974
*   END OK1DEL;                     /*                               */
         EJECT
*                                                                  0976
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO PROCESS THE SUPERCEDED SYSMODS FOR THOSE    */
*   /* SYSMODS BEING DELETED COMPLETE                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0976
*CPLSUPDL:                          /*                               */
*   PROCEDURE;                      /*                               */
CPLSUPDL STM   @14,@12,@SA00012                                    0976
*   DECLARE                         /*                               */
*     1 SUPDLSW BIT(8),             /*                               */
*       3 SUPFND BIT(1),            /*                               */
*       3 * BIT(7);                 /*                               */
*   DECLARE                         /*                               */
*     SUPDLRC FIXED(8);             /*                               */
*   DECLARE                         /*                               */
*     SUPDLX FIXED(31);             /*                               */
*   DECLARE                         /*                               */
*     PXH FIXED(31);                /*                               */
*   RFY                             /*                               */
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   RFY                             /*                               */
*     ICTPTF BASED(P8PTR);          /*                               */
*   RFY                             /*                               */
*     ICTSUPLS BASED(ICTPSCHN(1));  /*                               */
*   SUPDLRC=ZERO;                   /*                               */
         SLR   SUPDLRC,SUPDLRC                                     0984
*   SUPFND=OFF;                     /*                               */
*                                                                  0985
         NI    SUPFND,B'01111111'                                  0985
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THRU ICT AND PROCESS ALL SUPED SYSMODS FROM THE SYSMOD   */
*   /* BEING DELETED                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0986
*   DO PXH=1 BY 1 WHILE(            /* LOOP THRU PTFS SUPS           */
*         SUPDLRC<STOPPTF           /* TILL ERROR                    */
*         &ICTSUPND(PXH)^=ICTENDNT);/* OR END                        */
         LA    PXH,1                                               0986
         B     @DE00986                                            0986
@DL00986 DS    0H                                                  0987
*     IOPFUNCT=IOPLOC;              /*                               */
         L     @08,IOPPTR                                          0987
         MVI   IOPFUNCT(@08),X'03'                                 0987
*     IOPNAME=ICTSUPNM(PXH);        /* PICK UP SUPED NUMBER          */
         MVI   IOPNAME+7(@08),C' '                                 0988
         LR    @02,PXH                                             0988
         SLA   @02,3                                               0988
         L     @01,ICTPSCHN(,P8PTR)                                0988
         ALR   @01,@02                                             0988
         AL    @01,@CF02215                                        0988
         MVC   IOPNAME(7,@08),ICTSUPNM(@01)                        0988
*     IOPTYPE=IOPSMD;               /*                               */
         MVI   IOPTYPE(@08),X'0B'                                  0989
*     CALL HMASMIO(HMASMIOP);       /* LOCATE SUPED SYSMOD           */
         ST    @08,@AL00001                                        0990
         L     @15,@CV01863                                        0990
         LA    @01,@AL00001                                        0990
         BALR  @14,@15                                             0990
*     IF IOPRETRN=IOPGOOD           /* IF FOUND                      */
*       THEN                        /*                               */
         L     @08,IOPPTR                                          0991
         CLI   IOPRETRN(@08),0                                     0991
         BNE   @RF00991                                            0991
*       DO;                         /*                               */
*         IF IOPSBYNO=ICTPTFS(1)    /* IF THIS WAS LAST SUP          */
*           THEN                    /*                               */
         CLC   IOPSBYNO(7,@08),ICTPTFS(P8PTR)                      0993
         BNE   @RF00993                                            0993
*           DO;                     /*                               */
*             IOPSBYNO='';          /* BLANK IT OUT                  */
         MVI   IOPSBYNO(@08),C' '                                  0995
         MVC   IOPSBYNO+1(6,@08),IOPSBYNO(@08)                     0995
*             SUPFND=ON;            /* NEED TO UPDATE RCD            */
         OI    SUPFND,B'10000000'                                  0996
*           END;                    /*                               */
*         ELSE                      /* NOT MATCH IN LAST SUP         */
*           DO;                     /*                               */
         B     @RC00993                                            0998
@RF00993 DS    0H                                                  0999
*             DO SUPDLX=1 BY 1 WHILE(/* LOOP THRU ITS SUBNTS         */
*                   IOPPTFND(SUPDLX)^=IOPEOLST/* TILL END            */
*                   &IOPSBYNM(SUPDLX)^=ICTPTFS(1));/* OR MATCH       */
         LA    SUPDLX,1                                            0999
         B     @DE00999                                            0999
@DL00999 DS    0H                                                  1000
*             END;                  /*                               */
         AH    SUPDLX,@CH00037                                     1000
@DE00999 L     @08,IOPPTR                                          1000
         LR    @15,SUPDLX                                          1000
         MH    @15,@CH00035                                        1000
         SLR   @14,@14                                             1000
         IC    @14,IOPPTFND-9(@15,@08)                             1000
         CH    @14,@CH00628                                        1000
         BE    @DC00999                                            1000
         ALR   @08,@15                                             1000
         CLC   IOPSBYNM-9(7,@08),ICTPTFS(P8PTR)                    1000
         BNE   @DL00999                                            1000
@DC00999 DS    0H                                                  1001
*             IF IOPSBYNM(SUPDLX)=ICTPTFS(1)/* IF MATCH              */
*               THEN                /*                               */
         LR    @08,SUPDLX                                          1001
         MH    @08,@CH00035                                        1001
         L     @01,IOPPTR                                          1001
         ALR   @01,@08                                             1001
         CLC   IOPSBYNM-9(7,@01),ICTPTFS(P8PTR)                    1001
         BNE   @RF01001                                            1001
*               DO;                 /*                               */
*                 SUPFND=ON;        /*                               */
         OI    SUPFND,B'10000000'                                  1003
*                 DO UNTIL(         /* MOVE REST OF                  */
*                       IOPPTFND(SUPDLX)=IOPEOLST);/* ENTRIES        */
@DL01004 DS    0H                                                  1005
*                   IOPPNTRY(SUPDLX)=IOPPNTRY(SUPDLX+1);/*           */
         L     @08,IOPPTR                                          1005
         LR    @15,SUPDLX                                          1005
         MH    @15,@CH00035                                        1005
         ST    @15,@TF00001                                        1005
         ALR   @15,@08                                             1005
         AL    @08,@TF00001                                        1005
         MVC   IOPPNTRY-9(9,@15),IOPPNTRY(@08)                     1005
*                   SUPDLX=SUPDLX+1;/*                               */
         AH    SUPDLX,@CH00037                                     1006
*                 END;              /* END MOVE LOOP                 */
@DE01004 LR    @08,SUPDLX                                          1007
         MH    @08,@CH00035                                        1007
         L     @01,IOPPTR                                          1007
         SLR   @00,@00                                             1007
         IC    @00,IOPPTFND-9(@08,@01)                             1007
         CH    @00,@CH00628                                        1007
         BNE   @DL01004                                            1007
*               END;                /* END MATCH FOUND               */
*           END;                    /* END NOT MATCH IN LAST SUP     */
@RF01001 DS    0H                                                  1010
*         IF SUPFND=ON              /* IF CHANGE MADE                */
*           THEN                    /*                               */
@RC00993 TM    SUPFND,B'10000000'                                  1010
         BNO   @RF01010                                            1010
*           DO;                     /*                               */
*             IOPSBYP=OFF;          /* ASSUME NOT SUPED              */
         L     @08,IOPPTR                                          1012
         NI    IOPSBYP(@08),B'01111111'                            1012
*             IF IOPSBYNO(1)=BLANK  /* IF NO LAST SUP                */
*               THEN                /*                               */
         CLI   IOPSBYNO(@08),C' '                                  1013
         BNE   @RF01013                                            1013
*               DO;                 /*                               */
*                 DO SUPDLX=1 BY 1 WHILE(/* SEE IF ANY SUPBY         */
*                       IOPPTFND(SUPDLX)^=IOPEOLST/* LEFT IN         */
*                       &IOPPIND(SUPDLX)^=IOPPSBY);/* SYSMOD         */
         LA    SUPDLX,1                                            1015
         B     @DE01015                                            1015
@DL01015 DS    0H                                                  1016
*                 END;              /*                               */
         AH    SUPDLX,@CH00037                                     1016
@DE01015 L     @08,IOPPTR                                          1016
         LR    @15,SUPDLX                                          1016
         MH    @15,@CH00035                                        1016
         SLR   @14,@14                                             1016
         IC    @14,IOPPTFND-9(@15,@08)                             1016
         CH    @14,@CH00628                                        1016
         BE    @DC01015                                            1016
         SLR   @14,@14                                             1016
         IC    @14,IOPPIND-9(@15,@08)                              1016
         CH    @14,@CH01072                                        1016
         BNE   @DL01015                                            1016
@DC01015 DS    0H                                                  1017
*                 IF IOPPTFND(SUPDLX)^=IOPEOLST/* IF FOUND           */
*                   THEN            /*                               */
         L     @08,IOPPTR                                          1017
         LR    @15,SUPDLX                                          1017
         MH    @15,@CH00035                                        1017
         SLR   @14,@14                                             1017
         IC    @14,IOPPTFND-9(@15,@08)                             1017
         CH    @14,@CH00628                                        1017
         BE    @RF01017                                            1017
*                   IOPSBYP=ON;     /* SET SYSMOD SUPED              */
         OI    IOPSBYP(@08),B'10000000'                            1018
*               END;                /*                               */
*             ELSE                  /* IF LASTSUP PRESENT            */
*               IOPSBYP=ON;         /* SET SYSMOD SUPED              */
         B     @RC01013                                            1020
@RF01013 L     @08,IOPPTR                                          1020
         OI    IOPSBYP(@08),B'10000000'                            1020
*             IOPFUNCT=IOPSTOWR;    /* UPDATE SUPED SYSMOD           */
@RC01013 L     @08,IOPPTR                                          1021
         MVI   IOPFUNCT(@08),X'54'                                 1021
*             IF IOPPTFND(1)=IOPEOLST/* IF NO SUBENTRIES             */
*               THEN                /*                               */
         CLI   IOPPTFND(@08),255                                   1022
         BNE   @RF01022                                            1022
*               DO;                 /*                               */
*                 IOPDUMMP=ON;      /* THEN THIS IS DUMMY SYSMOD     */
         OI    IOPDUMMP(@08),B'00000100'                           1024
*                 IF IOPDBYP=OFF    /* IF NO DELETE ENTRY            */
*                     &IOPSBYP=OFF  /* OR SUPED                      */
*                   THEN            /* THEN SHOULD                   */
         TM    IOPDBYP(@08),B'11000000'                            1025
         BNZ   @RF01025                                            1025
*                   IOPFUNCT=IOPSTOWD;/* DELETE THIS GUY             */
         MVI   IOPFUNCT(@08),X'53'                                 1026
*               END;                /*                               */
@RF01025 DS    0H                                                  1028
*             CALL HMASMIO(HMASMIOP);/* STOW DEL/REP SYSMOD          */
@RF01022 L     @08,IOPPTR                                          1028
         ST    @08,@AL00001                                        1028
         L     @15,@CV01863                                        1028
         LA    @01,@AL00001                                        1028
         BALR  @14,@15                                             1028
*             SUPDLRC=MAX(SUPDLRC,IOPRETRN);/*                       */
         L     @08,IOPPTR                                          1029
         SLR   @02,@02                                             1029
         IC    @02,IOPRETRN(,@08)                                  1029
         CR    SUPDLRC,@02                                         1029
         BNL   *+6
         LR    SUPDLRC,@02                                         1029
*           END;                    /* END CHANGE MADE TO SUPED SMD  */
*       END;                        /* END SUP FOUND                 */
*     ELSE                          /*                               */
*       IF IOPRETRN>IOPNTFND        /* IF ERR IN LOCATE              */
*         THEN                      /*                               */
         B     @RC00991                                            1032
@RF00991 L     @08,IOPPTR                                          1032
         CLI   IOPRETRN(@08),4                                     1032
         BNH   @RF01032                                            1032
*         SUPDLRC=MAX(SUPDLRC,IOPRETRN);/* SAVE RC                   */
         SLR   @02,@02                                             1033
         IC    @02,IOPRETRN(,@08)                                  1033
         CR    SUPDLRC,@02                                         1033
         BNL   *+6
         LR    SUPDLRC,@02                                         1033
*   END;                            /* END LOOP THRU SUP LIST IN ICT */
*                                                                  1034
@RF01032 DS    0H                                                  1034
@RC00991 AH    PXH,@CH00037                                        1034
@DE00986 CH    SUPDLRC,@CH00121                                    1034
         BNL   @DC00986                                            1034
         LR    @08,PXH                                             1034
         SLA   @08,3                                               1034
         L     @02,ICTPSCHN(,P8PTR)                                1034
         AL    @02,@CF02215                                        1034
         L     @08,ICTSUPND(@08,@02)                               1034
         CL    @08,ICTENDNT                                        1034
         BNE   @DL00986                                            1034
@DC00986 DS    0H                                                  1035
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER WITH RETURN CODE SET UP DURING PROCESS       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1035
*   RETURN CODE(SUPDLRC);           /*                               */
         LR    @15,SUPDLRC                                         1035
         L     @14,@SA00012                                        1035
         LM    @00,@12,@SA00012+8                                  1035
         BR    @14                                                 1035
*   END CPLSUPDL;                   /*                               */
*   END SMDOK1;                     /*                               */
         EJECT
*                                                                  1038
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO DETERMINE WHETHER AN LMOD IS COMPLETE. A    */
*   /* LMOD IS COMPLETE ONLY WHEN ALL OF ITS ASSOCIATED MODULES ARE  */
*   /* COMPLETE                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1038
*LMDCK1:                            /*                               */
*   PROCEDURE;                      /*                               */
LMDCK1   STM   @14,@12,12(@13)                                     1038
*   DECLARE                         /*                               */
*     L6PTR PTR(31),                /* PTR FOR ICT LMOD LOOP         */
*     LX6 FIXED(31);                /* INDEX THRU LMOD TO MOD INDEX  */
*   RFY                                                            1040
*     ICTLMOD BASED(L6PTR);         /* LMODS BASED ON ADDR OF LMODS  */
*   RFY                                                            1041
*     ICTIXLF BASED(ICTLCHN(1));    /* LMOD TO MOD LIST BASED ON LMOD*/
*   RFY                                                            1042
*     ICTMOD BASED(ICTIXL(LX6));    /* MOD BASED ON LMOD TO MOD PTR  */
*   DO L6PTR=CCAICLMD BY LENGTH(ICTLMOD(1)) WHILE(/* LMOD LOOP       */
*         ICTLEND(1)^=ICTENDNT);    /* TILL END                      */
         L     L6PTR,CCAICLMD(,CCAPTR)                             1043
         B     @DE01043                                            1043
@DL01043 DS    0H                                                  1044
*     IF ICTLCPL(1)=OFF             /* IF LMOD NOT ALREADY COMPLETE  */
*       THEN                        /* THEN SEE IF COMPLETED         */
         TM    ICTLCPL(L6PTR),B'00100000'                          1044
         BNZ   @RF01044                                            1044
*       DO;                         /* NOW                           */
*         ICTLCPL(1)=ON;            /* ASSUME ALL MODS FOR LMOD CPLT */
         OI    ICTLCPL(L6PTR),B'00100000'                          1046
*         DO LX6=1 BY 1 WHILE(      /* LOOP THRI LMOD TO MOD INDEX   */
*               ICTIXL(LX6)^=ICTENDIX);/* TILL END                   */
         LA    LX6,1                                               1047
         B     @DE01047                                            1047
@DL01047 DS    0H                                                  1048
*           IF ICTMCPL(1)=OFF       /* IF ANY MOD IS NOT COMPLETE    */
*             THEN                  /* THEN                          */
         LR    @08,LX6                                             1048
         SLA   @08,2                                               1048
         L     @01,ICTLCHN(,L6PTR)                                 1048
         AL    @01,@CF02213                                        1048
         L     @08,ICTIXL(@08,@01)                                 1048
         TM    ICTMCPL(@08),B'00100000'                            1048
         BNZ   @RF01048                                            1048
*             ICTLCPL(1)=OFF;       /* LMOD IS NOT COMPLETE YET      */
         NI    ICTLCPL(L6PTR),B'11011111'                          1049
*         END;                      /* END LOOP THRU LMOD TO MOD     */
@RF01048 AH    LX6,@CH00037                                        1050
@DE01047 LR    @08,LX6                                             1050
         SLA   @08,2                                               1050
         L     @01,ICTLCHN(,L6PTR)                                 1050
         AL    @01,@CF02213                                        1050
         L     @08,ICTIXL(@08,@01)                                 1050
         CL    @08,ICTENDIX                                        1050
         BNE   @DL01047                                            1050
*       END;                        /* END LMOD NOT COMPLETE YET     */
*   END;                            /* END LOOP THRU LMODS           */
@RF01044 AH    L6PTR,@CH01013                                      1052
@DE01043 CLC   ICTLEND(4,L6PTR),ICTENDNT                           1052
         BNE   @DL01043                                            1052
*   RETURN CODE(ZERO);              /*                               */
         SLR   @15,@15                                             1053
         L     @14,12(,@13)                                        1053
         LM    @00,@12,20(@13)                                     1053
         BR    @14                                                 1053
*   END LMDCK1;                     /*                               */
         EJECT
*                                                                  1055
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE GOES THRU ALL SECTIONS OF THE ICT AND TURNS OFF  */
*   /* THE INPROCESS INDICATOR FOR ALL THOSE ELEMENTS MARKED AS AS   */
*   /* COMPLETED                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1055
*CPLRESET:                          /*                               */
*   PROCEDURE;                      /*                               */
CPLRESET STM   @14,@12,@SA00014                                    1055
*   DECLARE                         /*                               */
*     P2PTR PTR(31),                /* PTR FOR ICT PTF LOOP          */
*     M2PTR PTR(31),                /* PTR FOR ICT MOD LOOP          */
*     L2PTR PTR(31);                /* PTR FOR ICT LMOD LOOP         */
*   DECLARE                         /*                               */
*     RESETRC FIXED(8);             /*                               */
*   RFY                                                            1058
*     ICTPTF BASED(P2PTR);          /*                               */
*   RFY                                                            1059
*     ICTMOD BASED(M2PTR);          /*                               */
*   RFY                                                            1060
*     ICTLMOD BASED(L2PTR);         /*                               */
*                                                                  1060
*   /*****************************************************************/
*   /*                                                               */
*   /* TURN OFF PTF IN PROCESS INDICATORS                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1061
*   RESETRC=ZERO;                   /*                               */
         SLR   RESETRC,RESETRC                                     1061
*   DO P2PTR=CCAICPTF BY LENGTH(ICTPTF(1)) WHILE(/* LOOP THRU PTFS   */
*         ICTPEND(1)^=ICTENDNT);    /*                               */
         L     P2PTR,CCAICPTF(,CCAPTR)                             1062
         B     @DE01062                                            1062
@DL01062 DS    0H                                                  1063
*     IF ICTPCPL(1)=ON              /* IF PTF COMPLETE THEN          */
*       THEN                        /* NO LONGER                     */
         TM    ICTPCPL(P2PTR),B'00100000'                          1063
         BNO   @RF01063                                            1063
*       ICTPPROC(1)=OFF;            /* IN PROCESS                    */
         NI    ICTPPROC(P2PTR),B'01111111'                         1064
*     IF ICTPNOGO(1)=ON             /* IF PTF IS NOGO                */
*         &ICTPTYPE(1)=IOPPFUNC     /* AND SYSMOD IS FUNCTION TYPE   */
*       THEN                        /*                               */
@RF01063 TM    ICTPNOGO(P2PTR),B'01000000'                         1065
         BNO   @RF01065                                            1065
         CLI   ICTPTYPE(P2PTR),4                                   1065
         BNE   @RF01065                                            1065
*       DO;                         /*                               */
*         MGPCLEAR=''B;             /* ZERO MSG PARM                 */
         XC    MGPCLEAR(6),MGPCLEAR                                1067
*         MGPMGNO1=HMA370I;         /* XXXXXXXX PROCESSING TERMINATED
*                                      BECAUSE FUNCTION SYSMOD     1068
*                                      XXXXXXX FAILED                */
         MVC   MGPMGNO1(2),@CH01875                                1068
*         MGPVARPT(1)=ADDR(CCAFUNCT);/* FUNCTION NAME                */
         LA    @08,CCAFUNCT(,CCAPTR)                               1069
         ST    @08,MGPVARPT                                        1069
*         MGPVARPT(2)=ADDR(ICTPTFS(1));/* SYSMOD NUMBER              */
         ST    P2PTR,MGPVARPT+4                                    1070
*         MGPTYPE=MGPSEV;           /*                               */
         MVI   MGPTYPE,X'04'                                       1071
*         CALL HMASMMSG(HMASMMGP);  /*                               */
         L     @15,@CV01866                                        1072
         LA    @01,@AL01072                                        1072
         BALR  @14,@15                                             1072
*         RESETRC=STOPFUNC;         /* SET RETURN CODE               */
         LA    RESETRC,12                                          1073
*       END;                        /*                               */
*   END;                            /*                               */
*                                                                  1075
@RF01065 AH    P2PTR,@CH02176                                      1075
@DE01062 CLC   ICTPEND(4,P2PTR),ICTENDNT                           1075
         BNE   @DL01062                                            1075
*   /*****************************************************************/
*   /*                                                               */
*   /* TURN OFF MOD IN PROCESS INDICATORS                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1076
*   DO M2PTR=CCAICMOD BY LENGTH(ICTMOD(1)) WHILE(/* LOOP THRU MODS   */
*         ICTMEND(1)^=ICTENDNT);    /*                               */
         L     M2PTR,CCAICMOD(,CCAPTR)                             1076
         B     @DE01076                                            1076
@DL01076 DS    0H                                                  1077
*     ICTMPROC(1)=OFF;              /*                               */
         NI    ICTMPROC(M2PTR),B'01111111'                         1077
*   END;                            /*                               */
*                                                                  1078
         AH    M2PTR,@CH02175                                      1078
@DE01076 CLC   ICTMEND(4,M2PTR),ICTENDNT                           1078
         BNE   @DL01076                                            1078
*   /*****************************************************************/
*   /*                                                               */
*   /* TURN OFF LMD IN PROCESS INDICATORS                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1079
*   DO L2PTR=CCAICLMD BY LENGTH(ICTLMOD(1)) WHILE(/* LOOP THRU LMODS */
*         ICTLEND(1)^=ICTENDNT);    /*                               */
         L     L2PTR,CCAICLMD(,CCAPTR)                             1079
         B     @DE01079                                            1079
@DL01079 DS    0H                                                  1080
*     ICTLPROC(1)=OFF;              /*                               */
         NI    ICTLPROC(L2PTR),B'01111111'                         1080
*   END;                            /*                               */
*                                                                  1081
         AH    L2PTR,@CH01013                                      1081
@DE01079 CLC   ICTLEND(4,L2PTR),ICTENDNT                           1081
         BNE   @DL01079                                            1081
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1082
*   RETURN CODE(RESETRC);           /*                               */
         LR    @15,RESETRC                                         1082
         L     @14,@SA00014                                        1082
         LM    @00,@12,@SA00014+8                                  1082
         BR    @14                                                 1082
*   END CPLRESET;                   /*                               */
         EJECT
*                                                                  1084
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THRU PTF SECTION OF ICT AND FOR EACH PTF MARKED AS BEING */
*   /* IN PROCESS AND NOGO THEN MARK ALL MODS FOR THAT PTF AS IN     */
*   /* PROCESS AND NOGO                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1084
*CPLMODNG:                          /*                               */
*   PROCEDURE;                      /*                               */
CPLMODNG STM   @14,@12,12(@13)                                     1084
*   DECLARE                         /*                               */
*     P1PTR PTR(31),                /* PTR FOR ICT PTF LOOP          */
*     PX1 FIXED(31);                /* INDEX THRU PTF INDEX          */
*   RFY                                                            1086
*     ICTPTF BASED(P1PTR);          /* BASE FOR PTFS                 */
*   RFY                                                            1087
*     ICTIXPF BASED(ICTPCHN(1));    /* BASE FOR PTF TO MOD INDEX     */
*   RFY                                                            1088
*     ICTMOD BASED(ICTIXP(PX1));    /* MOD BASED ON PTF TO MOD LIST  */
*   DO P1PTR=CCAICPTF BY LENGTH(ICTPTF(1)) WHILE(/* LOOP THRU PTFS   */
*         ICTPEND(1)^=ICTENDNT);    /* TILL END                      */
         L     P1PTR,CCAICPTF(,CCAPTR)                             1089
         B     @DE01089                                            1089
@DL01089 DS    0H                                                  1090
*     IF ICTPGCPL(1)=ON             /*                               */
*       THEN                        /*                               */
         TM    ICTPGCPL(P1PTR),B'10000000'                         1090
         BNO   @RF01090                                            1090
*       ICTPCPL(1)=ON;              /*                               */
         OI    ICTPCPL(P1PTR),B'00100000'                          1091
*     ICTPECPL(1)=ON;               /* ASSUME ALL MOD FOR PTF CMPLT  */
@RF01090 OI    ICTPECPL(P1PTR),B'01000000'                         1092
*     DO PX1=1 BY 1 WHILE(          /* LOOP THRU PTF TO MOD INDEX    */
*           ICTIXP(PX1)^=ICTENDIX); /* TILL END                      */
         LA    PX1,1                                               1093
         B     @DE01093                                            1093
@DL01093 DS    0H                                                  1094
*       IF ICTPNOGO(1)=ON           /* IF PTF NOGO                   */
*         THEN                      /* THEN                          */
         TM    ICTPNOGO(P1PTR),B'01000000'                         1094
         BNO   @RF01094                                            1094
*         DO;                       /*                               */
*           ICTPCPL(1)=ON;          /*                               */
         OI    ICTPCPL(P1PTR),B'00100000'                          1096
*           ICTMNOGO(1)=ON;         /* MOD NOGO                      */
*           ICTMPROC(1)=ON;         /* MOD CONSIDERED IN PROCESS     */
*           ICTMCPL(1)=ON;          /* MOD COMPLETE                  */
         LR    @08,PX1                                             1099
         SLA   @08,2                                               1099
         L     @01,ICTPCHN(,P1PTR)                                 1099
         AL    @01,@CF02213                                        1099
         L     @08,ICTIXP(@08,@01)                                 1099
         OI    ICTMNOGO(@08),B'11100000'                           1099
*         END;                      /*                               */
*       ELSE                        /*                               */
*         IF ICTMCPL(1)=OFF         /* IF ANY MOD FOR PTF NOT        */
*             &ICTMSELM(1)=OFF      /* AND ELEMENT NOT ELIMINATED    */
*           THEN                    /* COMPLETE THEN PTF ALSO        */
         B     @RC01094                                            1101
@RF01094 LR    @08,PX1                                             1101
         SLA   @08,2                                               1101
         L     @01,ICTPCHN(,P1PTR)                                 1101
         AL    @01,@CF02213                                        1101
         L     @08,ICTIXP(@08,@01)                                 1101
         TM    ICTMCPL(@08),B'00100000'                            1101
         BNZ   @RF01101                                            1101
         TM    ICTMSELM(@08),B'00100000'                           1101
         BNZ   @RF01101                                            1101
*           ICTPECPL(1)=OFF;        /* NOT COMPLETE                  */
         NI    ICTPECPL(P1PTR),B'10111111'                         1102
*     END;                          /* END PTF TO MOD INDEX LOOP     */
@RF01101 DS    0H                                                  1103
@RC01094 AH    PX1,@CH00037                                        1103
@DE01093 LR    @08,PX1                                             1103
         SLA   @08,2                                               1103
         L     @01,ICTPCHN(,P1PTR)                                 1103
         AL    @01,@CF02213                                        1103
         L     @08,ICTIXP(@08,@01)                                 1103
         CL    @08,ICTENDIX                                        1103
         BNE   @DL01093                                            1103
*   END;                            /* END LOOP THRU ICT PTFS        */
         AH    P1PTR,@CH02176                                      1104
@DE01089 CLC   ICTPEND(4,P1PTR),ICTENDNT                           1104
         BNE   @DL01089                                            1104
*   RETURN CODE(ZERO);              /*                               */
         SLR   @15,@15                                             1105
         L     @14,12(,@13)                                        1105
         LM    @00,@12,20(@13)                                     1105
         BR    @14                                                 1105
*   END CPLMODNG;                   /*                               */
         EJECT
*                                                                  1107
*/********************************************************************/
*/*                                                                  */
*/*       FIND ALL ELEMENTS THAT ARE RELATED TO THE CURRENT          */
*/*       ELEMENT AND MARK THEM IN PROCESS, COMPLETE, AND IF         */
*/*       REQUIRED, NOGO.                                            */
*/*                                                                  */
*/*       THE FOLLOWING DIAGRAM DESCRIBES LOGIC.                     */
*/*       A INDICATES 'AND' CONDITION.                               */
*/*       O INDICATES 'OR'  CONDITION.                               */
*/*                                                                  */
*/*     NAME 1 MATCHES NAME 2 -------×                               */
*/*                                  A -----×                        */
*/*     TYPE 1 MATCHES TYPE 2 -------×      ×                        */
*/*                                         ×                        */
*/*                                         ×                        */
*/*     NAME 1 MATCHES NAME 2 -------×      ×                        */
*/*                                  ×      ×                        */
*/*     TYPE 1 MODULE REPLACEMENT ---×      ×                        */
*/*                                  A ---- ×                        */
*/*     TYPE 2 IS ZAP ------×        ×      ×                        */
*/*                         O -------×      O -- POST ELEMENT 2      */
*/*     TYPE 2 IS EXPAND ---×               ×                        */
*/*                                         ×                        */
*/*                                         ×                        */
*/*     TYPE 1 MACRO REPLACEMENT ----×      ×                        */
*/*                                  A -----×                        */
*/*     TYPE 2 MACRO UPDATE ---------×      ×                        */
*/*                                         ×                        */
*/*     TYPE 1 SOURCE REPLACEMENT ---×      ×                        */
*/*                                  A -----×                        */
*/*     TYPE 2 SOURCE UPDATE --------×                               */
*/*                                                                  */
*/********************************************************************/
*                                                                  1107
*CPLRELEM:                                                         1107
*   PROCEDURE(RELEMNG);             /*                               */
CPLRELEM STM   @14,@12,@SA00016                                    1107
         MVC   @PC00016(4),0(@01)                                  1107
*   DECLARE                         /*                               */
*     RELEMNG CHAR(1);              /*                               */
*   DECLARE                         /*                               */
*     1 RELEMSW BIT(8),             /*                               */
*       3 RELSTOP BIT(1),           /*                               */
*       3 RELTYPE BIT(1),           /* USED IN RELEM CHECK           */
*       3 RELFND BIT(1),            /* USED IN RELEM CHECK           */
*       3 * BIT(5);                 /*                               */
*   DECLARE                         /*                               */
*     M4PTR PTR(31),                /* PTR FOR ICT MOD LOOP          */
*     M5PTR PTR(31);                /* PTR FOR ICT MOD LOOP          */
*   RFY                             /*                               */
*     ICTMOD BASED(M4PTR);          /* BASE FOR ICT MODS             */
*   RFY                                                            1112
*     ICTPTF BASED(M5PTR->ICTPPTR(1));/* PTF BASED ON SECONDARY MOD  */
*   RELEMSW=''B;                    /*                               */
         MVI   RELEMSW,X'00'                                       1113
*   DO M4PTR=CCAICMOD BY LENGTH(ICTMOD(1)) WHILE(/* LOOP THRU MODS   */
*         ICTMEND(1)^=ICTENDNT);    /* NOGO ELEMENTS                 */
         L     M4PTR,CCAICMOD(,CCAPTR)                             1114
         B     @DE01114                                            1114
@DL01114 DS    0H                                                  1115
*     IF ICTMISEL(1)=ON             /* IF ELEMENT IS SELECTED AND    */
*         &ICTMNORL(1)=OFF          /* AND RELATED ELEM PRESENT      */
*         &(ICTMPROC(1)=ON          /* ELEMENT WAS PROCESSED         */
*         ×ICTMCPL(1)=ON            /* OR COMPLETED                  */
*         ×ICTMNOGO(1)=ON)          /* OR NOGO                       */
*       THEN                        /*                               */
         TM    ICTMISEL(M4PTR),B'10000000'                         1115
         BNO   @RF01115                                            1115
         TM    ICTMNORL(M4PTR),B'00010000'                         1115
         BNZ   @RF01115                                            1115
         TM    ICTMPROC(M4PTR),B'11100000'                         1115
         BZ    @RF01115                                            1115
*       DO;                         /* HAVE RELATED ELEMENTS MARKED  */
*         RELFND=OFF;               /* NO RELATED TYPE FOUND         */
         NI    RELFND,B'11011111'                                  1117
*         DO M5PTR=CCAICMOD BY LENGTH(ICTMOD(1)) WHILE(/* LOOP       */
*               M5PTR->ICTMEND(1)^=ICTENDNT);/* ICT MODS FOR REL.EL. */
*                                                                  1118
         L     M5PTR,CCAICMOD(,CCAPTR)                             1118
         B     @DE01118                                            1118
@DL01118 DS    0H                                                  1119
*           /*********************************************************/
*           /*                                                       */
*           /* CHECK TO SEE IF THE PRIMARY ELEMENT IS EQUAL TO THE   */
*           /* SECONDARY ELEMENT AND SECONDARY ELEMENT NOT ACTUALLY  */
*           /* SAME AS FIRST ELEMENT AND SECONDARY NOT PROC          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  1119
*           IF ICTMNAME(1)=M5PTR->ICTMNAME(1)/* IF SAME NAME         */
*               &M5PTR->ICTMNOGO(1)=OFF/* AND SECOND NOT ALRDY. NOGO */
*               &M4PTR^=M5PTR       /* AND THIS IS NOT CURRENT MOD   */
*             THEN                  /*                               */
         CLC   ICTMNAME(8,M4PTR),ICTMNAME(M5PTR)                   1119
         BNE   @RF01119                                            1119
         TM    ICTMNOGO(M5PTR),B'01000000'                         1119
         BNZ   @RF01119                                            1119
         CR    M4PTR,M5PTR                                         1119
         BE    @RF01119                                            1119
*             DO;                   /* CHECK IF RELATED.             */
*                                                                  1120
*               /*****************************************************/
*               /*                                                   */
*               /* CHECK TO SEE IF ELEMENTS ARE RELATED (IE THEY ARE */
*               /* OF THE SAME TYPE                                  */
*               /*                                                   */
*               /*****************************************************/
*                                                                  1121
*               IF(ICTMMOD(1)=ON&M5PTR->ICTMMOD(1)=ON)/* IF SAME     */
*                   ×(ICTMASM(1)=ON&M5PTR->ICTMASM(1)=ON)/* TYPE     */
*                   ×(ICTMZAP(1)=ON&M5PTR->ICTMZAP(1)=ON)/*          */
*                 THEN              /*                               */
         TM    ICTMMOD(M4PTR),B'10000000'                          1121
         BNO   @GL00094                                            1121
         TM    ICTMMOD(M5PTR),B'10000000'                          1121
         BO    @RT01121                                            1121
@GL00094 TM    ICTMASM(M4PTR),B'01000000'                          1121
         BNO   @GL00093                                            1121
         TM    ICTMASM(M5PTR),B'01000000'                          1121
         BO    @RT01121                                            1121
@GL00093 TM    ICTMZAP(M4PTR),B'00100000'                          1121
         BNO   @RF01121                                            1121
         TM    ICTMZAP(M5PTR),B'00100000'                          1121
         BNO   @RF01121                                            1121
@RT01121 DS    0H                                                  1122
*                 RELTYPE=ON;       /* THEN INDICATED RELATED        */
         OI    RELTYPE,B'01000000'                                 1122
*               ELSE                /*                               */
*                 IF(ICTMMACR(1)=ON&M5PTR->ICTMMACR(1)=ON)/*         */
*                     ×(ICTMMACU(1)=ON&M5PTR->ICTMMACU(1)=ON)/*      */
*                     ×(ICTMSRCR(1)=ON&M5PTR->ICTMSRCR(1)=ON)/*      */
*                     ×(ICTMSRCU(1)=ON&M5PTR->ICTMSRCU(1)=ON)/*      */
*                   THEN            /*                               */
         B     @RC01121                                            1123
@RF01121 TM    ICTMMACR(M4PTR),B'00001000'                         1123
         BNO   @GL00100                                            1123
         TM    ICTMMACR(M5PTR),B'00001000'                         1123
         BO    @RT01123                                            1123
@GL00100 TM    ICTMMACU(M4PTR),B'00000100'                         1123
         BNO   @GL00099                                            1123
         TM    ICTMMACU(M5PTR),B'00000100'                         1123
         BO    @RT01123                                            1123
@GL00099 TM    ICTMSRCR(M4PTR),B'00000010'                         1123
         BNO   @GL00098                                            1123
         TM    ICTMSRCR(M5PTR),B'00000010'                         1123
         BO    @RT01123                                            1123
@GL00098 TM    ICTMSRCU(M4PTR),B'00000001'                         1123
         BNO   @RF01123                                            1123
         TM    ICTMSRCU(M5PTR),B'00000001'                         1123
         BNO   @RF01123                                            1123
@RT01123 DS    0H                                                  1124
*                   RELTYPE=ON;     /* THEN INDICATED RELATED        */
         OI    RELTYPE,B'01000000'                                 1124
*                 ELSE              /* OR                            */
*                   IF ICTMMOD(1)=ON/* IF FIRST IS MOD THAT          */
*                       &ICTMNOGO(1)=ON/* IS NOGO                    */
*                       &(M5PTR->ICTMZAP(1)=ON/* AND SECOND IS ZAP   */
*                       ×M5PTR->ICTMXPND(1)=ON)/* OR EXPAND ZAP      */
*                     THEN          /*                               */
         B     @RC01123                                            1125
@RF01123 TM    ICTMMOD(M4PTR),B'10000000'                          1125
         BNO   @RF01125                                            1125
         TM    ICTMNOGO(M4PTR),B'01000000'                         1125
         BNO   @RF01125                                            1125
         TM    ICTMZAP(M5PTR),B'00110000'                          1125
         BZ    @RF01125                                            1125
*                     RELTYPE=ON;   /* THEN INDICATED RELATED        */
         OI    RELTYPE,B'01000000'                                 1126
*                   ELSE            /* OR                            */
*                     IF ICTMMACR(1)=ON/* IF FIRST IS MAC            */
*                         &ICTMNOGO(1)=ON/* IS NOGO                  */
*                         &(M5PTR->ICTMMACR(1)=ON/* AND 2ND IS MAC   */
*                         ×M5PTR->ICTMMACU(1)=ON)/* OR MACUPD        */
*                       THEN        /*                               */
         B     @RC01125                                            1127
@RF01125 TM    ICTMMACR(M4PTR),B'00001000'                         1127
         BNO   @RF01127                                            1127
         TM    ICTMNOGO(M4PTR),B'01000000'                         1127
         BNO   @RF01127                                            1127
         TM    ICTMMACR(M5PTR),B'00001100'                         1127
         BZ    @RF01127                                            1127
*                       RELTYPE=ON; /* THEN INDICATED RELATED        */
         OI    RELTYPE,B'01000000'                                 1128
*                     ELSE          /* OR                            */
*                       IF ICTMSRCR(1)=ON/* IF FIRST IS SRC          */
*                           &ICTMNOGO(1)=ON/* IS NOGO                */
*                           &(M5PTR->ICTMSRCR(1)=ON/* AND 2ND IS SRC */
*                           ×M5PTR->ICTMSRCU(1)=ON)/* OR SRCUPD      */
*                         THEN      /*                               */
         B     @RC01127                                            1129
@RF01127 TM    ICTMSRCR(M4PTR),B'00000010'                         1129
         BNO   @RF01129                                            1129
         TM    ICTMNOGO(M4PTR),B'01000000'                         1129
         BNO   @RF01129                                            1129
         TM    ICTMSRCR(M5PTR),B'00000011'                         1129
         BZ    @RF01129                                            1129
*                         RELTYPE=ON;/* THEN INDICATED RELATED       */
         OI    RELTYPE,B'01000000'                                 1130
*                       ELSE        /*                               */
*                         RELTYPE=OFF;/* NOT RELATED TYPE ENTRIES    */
*                                                                  1131
         B     @RC01129                                            1131
@RF01129 NI    RELTYPE,B'10111111'                                 1131
*               /*****************************************************/
*               /*                                                   */
*               /* IF ELEMENTS ARE RELATED TYPES AND SYSMOD FOR      */
*               /* SECONDARY IS NOT NOGO OR COMPLETE THEN SET        */
*               /* PROCESSING BITS FOR SECONDARY BASED ON STATUS OF  */
*               /* BITS IN PRIMARY                                   */
*               /*                                                   */
*               /*****************************************************/
*                                                                  1132
*               IF RELTYPE=ON       /* IF RELATED TYPE               */
*                 THEN              /*                               */
@RC01129 DS    0H                                                  1132
@RC01127 DS    0H                                                  1132
@RC01125 DS    0H                                                  1132
@RC01123 DS    0H                                                  1132
@RC01121 TM    RELTYPE,B'01000000'                                 1132
         BNO   @RF01132                                            1132
*                 DO;               /*                               */
*                   RELFND=ON;      /* RELTYPE FOUND SW              */
         OI    RELFND,B'00100000'                                  1134
*                   IF ICTPNOGO(1)=OFF/* IF SECONDARY SYSMOD NOT     */
*                       &ICTPCPL(1)=OFF/* NOGO OR COMPLETE           */
*                     THEN          /*                               */
         L     @08,ICTPPTR(,M5PTR)                                 1135
         TM    ICTPNOGO(@08),B'01100000'                           1135
         BNZ   @RF01135                                            1135
*                     DO;           /*                               */
*                       IF ICTMPROC(1)=ON/* IF PRIMARY IN PROCESS    */
*                         THEN      /*                               */
         TM    ICTMPROC(M4PTR),B'10000000'                         1137
         BNO   @RF01137                                            1137
*                         DO;       /*                               */
*                           M5PTR->ICTMPROC(1)=ON;/* SECOND IN PROC  */
         OI    ICTMPROC(M5PTR),B'10000000'                         1139
*                           ICTPPROC(1)=ON;/* PTF FOR SECOND MOD IN
*                                      PROCESS                       */
         L     @08,ICTPPTR(,M5PTR)                                 1140
         OI    ICTPPROC(@08),B'10000000'                           1140
*                         END;      /*                               */
*                       IF ICTMCPL(1)=ON/* IF PRIMARY COMPLETE       */
*                         THEN      /* THEN                          */
@RF01137 TM    ICTMCPL(M4PTR),B'00100000'                          1142
         BNO   @RF01142                                            1142
*                         M5PTR->ICTMCPL(1)=ON;/* SECOND COMPLETE    */
         OI    ICTMCPL(M5PTR),B'00100000'                          1143
*                       IF ICTMNOGO(1)=ON/* IF PRIMARY NOGO          */
*                         THEN      /* THEN SECONDARY IS ALSO        */
@RF01142 TM    ICTMNOGO(M4PTR),B'01000000'                         1144
         BNO   @RF01144                                            1144
*                         DO;       /*                               */
*                           M5PTR->ICTMNOGO(1)=ON;/* SECOND IS NOGO  */
         OI    ICTMNOGO(M5PTR),B'01000000'                         1146
*                           ICTPNOGO(1)=ON;/* PTF FOR SECOND MOD NOGO*/
*                           ICTPCPL(1)=ON;/* AND COMPLETE            */
         L     @08,ICTPPTR(,M5PTR)                                 1148
         OI    ICTPNOGO(@08),B'01100000'                           1148
*                           IF ICTPMSG(1)=OFF/* IF NO MSG YET        */
*                             THEN  /*                               */
         TM    ICTPMSG(@08),B'00010000'                            1149
         BNZ   @RF01149                                            1149
*                             DO;   /*                               */
*                               ICTPMSG(1)=ON;/*                     */
         OI    ICTPMSG(@08),B'00010000'                            1151
*                               MGPCLEAR=''B;/*                      */
         XC    MGPCLEAR(6),MGPCLEAR                                1152
*                               MGPMGNO1=HMA302I;/* X8X PROCESSING 1153
*                                      TERMINATED FOR SYSMOD X7X - 1153
*                                      REASON =                      */
         MVC   MGPMGNO1(2),@CH01873                                1153
*                               MGPMGNO2=PART029;/* RELATED SYSMOD 1154
*                                      FAILED                        */
         MVC   MGPMGNO2(2),@CH00478                                1154
*                               MGPVARPT(1)=ADDR(CCAFUNCT);/* FUNC   */
         LA    @15,CCAFUNCT(,CCAPTR)                               1155
         ST    @15,MGPVARPT                                        1155
*                               MGPVARPT(2)=ADDR(ICTPTFS(1));      1156
         ST    @08,MGPVARPT+4                                      1156
*                               MGPTYPE=MGPERR;/*                    */
         MVI   MGPTYPE,X'03'                                       1157
*                               CALL HMASMMSG(HMASMMGP);/*           */
         L     @15,@CV01866                                        1158
         LA    @01,@AL01158                                        1158
         BALR  @14,@15                                             1158
*                               RELEMNG=YES;/* SET SYSMOD MRKD NOGO  */
         L     @08,@PC00016                                        1159
         MVI   RELEMNG(@08),C'Y'                                   1159
*                             END;  /*                               */
*                         END;      /*                               */
@RF01149 DS    0H                                                  1162
*                     END;          /* END SECON NOT NOGO/CPL        */
@RF01144 DS    0H                                                  1163
*                 END;              /* END ELEMENTS ARE RELATED      */
@RF01135 DS    0H                                                  1164
*             END;                  /* END SAME NAME/NO NOGO YET     */
@RF01132 DS    0H                                                  1165
*         END;                      /* END SECONDARY ICT MOD LOOP    */
@RF01119 AH    M5PTR,@CH02175                                      1165
@DE01118 CLC   ICTMEND(4,M5PTR),ICTENDNT                           1165
         BNE   @DL01118                                            1165
*         IF RELFND=OFF             /* IF NO RELATED ELEMENTS        */
*           THEN                    /* SET BIT IN ICT SO THAT NO     */
         TM    RELFND,B'00100000'                                  1166
         BNZ   @RF01166                                            1166
*           ICTMNORL(1)=ON;         /* MORE LOOP THRU HERE FOR MOD   */
         OI    ICTMNORL(M4PTR),B'00010000'                         1167
*       END;                        /* END PRIMARY SELECTED/NOGO     */
@RF01166 DS    0H                                                  1169
*   END;                            /* END PRIMARY ICT MOD LOOP      */
*                                                                  1169
@RF01115 AH    M4PTR,@CH02175                                      1169
@DE01114 CLC   ICTMEND(4,M4PTR),ICTENDNT                           1169
         BNE   @DL01114                                            1169
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW CHECK FOR ELEMENTS THAT WERE ELIMINATED AND DO NOT HAVE A */
*   /* RELATED ELEMENT IN THE ICT. THESE ELEMENTS ARE NOW CONSIDERED */
*   /* COMPLETED                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1170
*   DO M4PTR=CCAICMOD BY LENGTH(ICTMOD(1)) WHILE(/* LOOP THRU MODS   */
*         ICTMEND(1)^=ICTENDNT);    /* TILL END                      */
         L     M4PTR,CCAICMOD(,CCAPTR)                             1170
         B     @DE01170                                            1170
@DL01170 DS    0H                                                  1171
*     IF ICTMISEL(1)=OFF            /* IF ELEMENT NOT SELECTED       */
*         &ICTMELCK(1)=OFF          /* AND NOT CHECKED YET           */
*       THEN                        /*                               */
         TM    ICTMISEL(M4PTR),B'10000000'                         1171
         BNZ   @RF01171                                            1171
         TM    ICTMELCK(M4PTR),B'00100000'                         1171
         BNZ   @RF01171                                            1171
*       DO;                         /*                               */
*         ICTMELCK(1)=ON;           /* ELEMENT CHECKED               */
         OI    ICTMELCK(M4PTR),B'00100000'                         1173
*         RELSTOP=OFF;              /*                               */
         NI    RELSTOP,B'01111111'                                 1174
*         DO M5PTR=CCAICMOD BY LENGTH(ICTMOD(1)) WHILE(/* LOOP       */
*               M5PTR->ICTMEND(1)^=ICTENDNT/* TILL END               */
*               &RELSTOP=OFF);      /* OR RELATED SELECTED ELEM FOUND*/
         L     M5PTR,CCAICMOD(,CCAPTR)                             1175
         B     @DE01175                                            1175
@DL01175 DS    0H                                                  1176
*           IF ICTMNAME(1)=M5PTR->ICTMNAME(1)/* IF SAME ELEMENT      */
*               &M5PTR->ICTMISEL(1)=ON/* AND THIS ONE SELECTED       */
*             THEN                  /*                               */
         CLC   ICTMNAME(8,M4PTR),ICTMNAME(M5PTR)                   1176
         BNE   @RF01176                                            1176
         TM    ICTMISEL(M5PTR),B'10000000'                         1176
         BNO   @RF01176                                            1176
*             DO;                   /*                               */
*               IF(ICTMMOD(1)=ON&M5PTR->ICTMMOD(1)=ON)/* AND TYPE    */
*                   ×(ICTMASM(1)=ON&M5PTR->ICTMASM(1)=ON)/*          */
*                   ×(ICTMZAP(1)=ON&M5PTR->ICTMZAP(1)=ON)/*          */
*                 THEN              /*                               */
         TM    ICTMMOD(M4PTR),B'10000000'                          1178
         BNO   @GL00114                                            1178
         TM    ICTMMOD(M5PTR),B'10000000'                          1178
         BO    @RT01178                                            1178
@GL00114 TM    ICTMASM(M4PTR),B'01000000'                          1178
         BNO   @GL00113                                            1178
         TM    ICTMASM(M5PTR),B'01000000'                          1178
         BO    @RT01178                                            1178
@GL00113 TM    ICTMZAP(M4PTR),B'00100000'                          1178
         BNO   @RF01178                                            1178
         TM    ICTMZAP(M5PTR),B'00100000'                          1178
         BNO   @RF01178                                            1178
@RT01178 DS    0H                                                  1179
*                 RELSTOP=ON;       /* STOP LOOP                     */
         OI    RELSTOP,B'10000000'                                 1179
*               ELSE                /*                               */
*                 IF(ICTMMACR(1)=ON&M5PTR->ICTMMACR(1)=ON)/*         */
*                     ×(ICTMMACU(1)=ON&M5PTR->ICTMMACU(1)=ON)/*      */
*                     ×(ICTMSRCR(1)=ON&M5PTR->ICTMSRCR(1)=ON)/*      */
*                     ×(ICTMSRCU(1)=ON&M5PTR->ICTMSRCU(1)=ON)/*      */
*                   THEN            /*                               */
         B     @RC01178                                            1180
@RF01178 TM    ICTMMACR(M4PTR),B'00001000'                         1180
         BNO   @GL00120                                            1180
         TM    ICTMMACR(M5PTR),B'00001000'                         1180
         BO    @RT01180                                            1180
@GL00120 TM    ICTMMACU(M4PTR),B'00000100'                         1180
         BNO   @GL00119                                            1180
         TM    ICTMMACU(M5PTR),B'00000100'                         1180
         BO    @RT01180                                            1180
@GL00119 TM    ICTMSRCR(M4PTR),B'00000010'                         1180
         BNO   @GL00118                                            1180
         TM    ICTMSRCR(M5PTR),B'00000010'                         1180
         BO    @RT01180                                            1180
@GL00118 TM    ICTMSRCU(M4PTR),B'00000001'                         1180
         BNO   @RF01180                                            1180
         TM    ICTMSRCU(M5PTR),B'00000001'                         1180
         BNO   @RF01180                                            1180
@RT01180 DS    0H                                                  1181
*                   RELSTOP=ON;     /* STOP LOOP                     */
         OI    RELSTOP,B'10000000'                                 1181
*             END;                  /* END SAME TYPE AND SELECTED    */
@RF01180 DS    0H                                                  1182
@RC01178 DS    0H                                                  1183
*         END;                      /* END SECOND LOOP               */
@RF01176 AH    M5PTR,@CH02175                                      1183
@DE01175 CLC   ICTMEND(4,M5PTR),ICTENDNT                           1183
         BE    @DC01175                                            1183
         TM    RELSTOP,B'10000000'                                 1183
         BZ    @DL01175                                            1183
@DC01175 DS    0H                                                  1184
*         IF RELSTOP=OFF            /* IF NO RELATED ELEMENT         */
*           THEN                    /* THEN FIRST ELEMENT            */
         TM    RELSTOP,B'10000000'                                 1184
         BNZ   @RF01184                                            1184
*           ICTMCPL(1)=ON;          /* IS COMPLETE                   */
         OI    ICTMCPL(M4PTR),B'00100000'                          1185
*       END;                        /* END ELEMENT NOT SELECTED      */
@RF01184 DS    0H                                                  1187
*   END;                            /* END FIRST MOD LOOP            */
*                                                                  1187
@RF01171 AH    M4PTR,@CH02175                                      1187
@DE01170 CLC   ICTMEND(4,M4PTR),ICTENDNT                           1187
         BNE   @DL01170                                            1187
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1188
*   RETURN CODE(ZERO);              /* RETURN TO CALLER              */
         SLR   @15,@15                                             1188
         L     @14,@SA00016                                        1188
         LM    @00,@12,@SA00016+8                                  1188
         BR    @14                                                 1188
*   END CPLRELEM;                                                  1189
*                                                                  1190
*/********************************************************************/
*/*                                                                  */
*/* REDOCHK  - SEARCH THE ICT PTF SECTION FOR A NON-NOGO SYSMOD      */
*/*            MATCHING (BUT NOT EQUAL TO) THE ICT SYSMOD ENTRY      */
*/*            PASSED.                                               */
*/*                                                                  */
*/********************************************************************/
*                                                                  1190
*REDOCHK:                                                          1190
*   PROC(REDOPTF,REDO@);                                           1190
REDOCHK  STM   @14,@12,12(@13)                                     1190
         MVC   @PC00017(8),0(@01)                                  1190
*   DCL                                                            1191
*     REDOPTF CHAR(*);              /* ICT PTF SECTION ENTRY         */
*   DCL                                                            1192
*     REDO@ PTR(31);                /* RETURNED TO CALLER WITH     1192
*                                      ADDRESS OF ANOTHER ICT PTF  1192
*                                      SECTION ENTRY (OR ZERO)       */
*   DCL                                                            1193
*     REDOPT1 PTR(31);              /* LOCAL POINTER                 */
*   DCL                                                            1194
*     REDOPTFS CHAR(7);             /* LOCAL SAVE AREA               */
*   REDO@=0;                        /* CLEAR PTR RETURNED TO CALLER  */
         L     @08,@PC00017+4                                      1195
         SLR   @03,@03                                             1195
         ST    @03,REDO@(,@08)                                     1195
*   REDOPTFS=ADDR(REDOPTF)->ICTPTFS(1);/* SAVE NAME OF SYSMOD PASSED */
         L     @08,@PC00017                                        1196
         MVC   REDOPTFS(7),ICTPTFS(@08)                            1196
*   REDOPT1=CCAICPTF;               /* POINT TO FIRST ENTRY IN ICT 1197
*                                      PTF SECTION                   */
         L     REDOPT1,CCAICPTF(,CCAPTR)                           1197
*   RESPECIFY                                                      1198
*     ICTPTF BASED(REDOPT1);        /* ADDRESS ICT PTF SECT ENTRY    */
*   DO REDOPT1=REDOPT1 BY LENGTH(ICTPTF)/* GO THRU ICT PTF SECTION   */
*         WHILE ICTPEND(1)^=ICTENDNT/* NOT AT END                    */
*         &REDO@=0;                 /* MATCHING SYSMOD NOT YET FOUND */
         B     @DE01199                                            1199
@DL01199 DS    0H                                                  1200
*     IF REDOPT1^=ADDR(REDOPTF)     /* NOT ENTRY PASSED              */
*         &ICTPTFS(1)=REDOPTFS      /* MATCHES SYSMOD NAME PASSED    */
*         &ICTPNOGO(1)=OFF          /* NOT NOGO                      */
*       THEN                                                       1200
         L     @08,@PC00017                                        1200
         CR    REDOPT1,@08                                         1200
         BE    @RF01200                                            1200
         CLC   ICTPTFS(7,REDOPT1),REDOPTFS                         1200
         BNE   @RF01200                                            1200
         TM    ICTPNOGO(REDOPT1),B'01000000'                       1200
         BNZ   @RF01200                                            1200
*       REDO@=REDOPT1;              /* POINT TO MATCHING SYSMOD      */
         L     @08,@PC00017+4                                      1201
         ST    REDOPT1,REDO@(,@08)                                 1201
*   END;                                                           1202
@RF01200 AH    REDOPT1,@CH02176                                    1202
@DE01199 CLC   ICTPEND(4,REDOPT1),ICTENDNT                         1202
         BE    @DC01199                                            1202
         L     @08,@PC00017+4                                      1202
         ICM   @03,15,REDO@(@08)                                   1202
         BZ    @DL01199                                            1202
@DC01199 DS    0H                                                  1203
*   RETURN;                                                        1203
@EL00017 DS    0H                                                  1203
@EF00017 DS    0H                                                  1203
@ER00017 LM    @14,@12,12(@13)                                     1203
         BR    @14                                                 1203
*   END REDOCHK;                                                   1204
*   END HMASMCPL                    /*                               */
*                                                                  1205
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMICT)                                       */
*/*%INCLUDE SYSLIB  (HMASMMGP)                                       */
*/*%INCLUDE SYSLIB  (HMASMSPL)                                       */
*                                                                  1205
*       ;                                                          1205
@DATA    DS    0H
@CH00037 DC    H'1'
@CH00035 DC    H'9'
@CH00033 DC    H'12'
@CH00476 DC    H'28'
@CH00478 DC    H'29'
@CH00480 DC    H'30'
@CH00497 DC    H'40'
@CH01013 DC    H'54'
@CH01873 DC    H'103'
@CH01880 DC    H'104'
@CH00950 DC    H'105'
@CH01891 DC    H'110'
@CH01893 DC    H'111'
@CH02176 DC    H'116'
@CH02175 DC    H'144'
@CH01072 DC    H'170'
@CH01875 DC    H'171'
@CH00628 DC    H'255'
         DS    0F
@AL00216 DC    A(TSLPARMS)             LIST WITH   1 ARGUMENT(S)
@AL00335 DC    A(OK1NGSET)             LIST WITH   1 ARGUMENT(S)
@AL00359 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00426 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00445 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00486 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00507 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00536 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00554 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00604 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00609 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00909 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01072 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01158 DC    A(HMASMMGP)             LIST WITH   1 ARGUMENT(S)
@AL00377 DC    A(@CF00121)             LIST WITH   3 ARGUMENT(S)
         DC    A(@CF01887)
         DC    A(NGSET)
@AL00378 DC    A(@CF00121)             LIST WITH   3 ARGUMENT(S)
         DC    A(@CF01883)
         DC    A(NGSET)
@AL00379 DC    A(@CF00197)             LIST WITH   3 ARGUMENT(S)
         DC    A(@CF01885)
         DC    A(NGSET)
@AL00381 DC    A(@CF01889)             LIST WITH   2 ARGUMENT(S)
@AL00386 DC    A(NGSET)                LIST WITH   1 ARGUMENT(S)
@AL00736 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00745 DC    A(BUPPARM)              LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00002 DS    15F
@SA00004 DS    15F
@SA00009 DS    15F
@SA00010 DS    15F
@SA00011 DS    15F
@PC00017 DS    2F
@SA00012 DS    0F
@SA00006 DS    0F
@PC00006 EQU   @SA00006+60
@SA00005 DS    0F
@PC00005 EQU   @SA00005+60
@SA00007 DS    0F
@PC00007 EQU   @SA00007+60
@SA00016 DS    0F
@PC00016 EQU   @SA00016+60
@SA00014 DS    0F
@SA00008 DS    0F
@SA00003 DS    0F
         DS    20F
@AL00001 DS    5A
@TF00001 DS    F
         DS    0F
@CF00121 DC    F'8'
@CH00121 EQU   @CF00121+2
@CF00197 DC    F'16'
@CF01883 DC    F'106'
@CF01885 DC    F'107'
@CF01887 DC    F'108'
@CF01889 DC    F'109'
@CF02215 DC    F'-8'
@CF02213 DC    F'-4'
@CV01859 DC    V(HMASMBUR)
@CV01860 DC    V(HMASMCRW)
@CV01861 DC    V(HMASMCP2)
@CV01862 DC    V(HMASMIDU)
@CV01863 DC    V(HMASMIO)
@CV01864 DC    V(HMASMPGC)
@CV01865 DC    V(HMASMRJD)
@CV01866 DC    V(HMASMMSG)
@CV01867 DC    V(HMASMSEC)
@CV01869 DC    V(HMASMSUP)
@CV01870 DC    V(HMASMTSB)
@CV01868 DC    V(HMASMSUB)
         DS    0D
IOPPTR   DS    A
SAVP8    DS    A
SAVPF    DS    A
REDOPTR  DS    A
MAXNUM   DC    XL2'7FFF'
         DS    CL2
ICTENDCH DC    X'FFFFFFFF'
HMASMMGP DS    CL28
         ORG   HMASMMGP
MGPFIXED DS    CL12
         ORG   MGPFIXED
MGPCLEAR DS    CL6
         ORG   MGPCLEAR
MGPMGNO1 DS    FL2
MGPMGNO2 DS    FL2
MGPMGNO3 DS    FL2
         ORG   MGPFIXED+6
MGPFLAGS DS    BL2
         ORG   MGPFLAGS
MGPPRINT DS    BL1
MGPLIST  EQU   MGPFLAGS+0
MGPRPT   EQU   MGPFLAGS+0
MGPHLDS  EQU   MGPFLAGS+0
MGPWTOR  EQU   MGPFLAGS+0
MGPWTO   EQU   MGPFLAGS+0
MGPWTP   EQU   MGPFLAGS+0
@NM00225 EQU   MGPFLAGS+0
         ORG   MGPFIXED+8
MGPTYPE  DS    FL1
@NM00226 DS    CL3
         ORG   HMASMMGP+12
MGPVAR   DS    CL16
         ORG   MGPVAR
MGPVARPT DS    4A
         ORG   HMASMMGP+28
HMASMSPL DS    CL5
         ORG   HMASMSPL
SPLPMAD  DS    AL4
SPLFUNCT DS    FL1
         ORG   HMASMSPL+5
         DS    CL3
BUPPARM  DS    CL20
         ORG   BUPPARM
BUPFUNCT DS    FL1
BUPTYPE  DS    FL1
BUPSTYPE DS    FL1
BUPFLAGS DS    BL1
         ORG   BUPFLAGS
BUPREDO  DS    BL1
@NM00227 EQU   BUPFLAGS+0
         ORG   BUPPARM+4
BUPSYSMD DS    CL7
@NM00228 DS    CL1
BUPIOPAD DS    AL4
BUPGTPAD DS    AL4
         ORG   BUPPARM+20
TSLPARMS DS    CL10
         ORG   TSLPARMS
TSLTBLXP DS    AL4
TSLPMLAD DS    AL4
TSLFUNCT DS    FL1
TSLRETRN DS    FL1
         ORG   TSLPARMS+10
         DS    CL2
TSLICTSR DS    CL14
         ORG   TSLICTSR
TSLISMD  DS    CL7
TSLIOPTF DS    CL1
         ORG   TSLIOPTF
TSLIONXT DS    BL1
@NM00243 EQU   TSLIOPTF+0
         ORG   TSLICTSR+8
TSLICTP  DS    AL4
TSLICTF  DS    CL1
         ORG   TSLICTF
TSLIFND  DS    BL1
TSLIOK   EQU   TSLICTF+0
TSLISUP  EQU   TSLICTF+0
TSLIDEL  EQU   TSLICTF+0
TSLIDLE  EQU   TSLICTF+0
TSLIDLI  EQU   TSLICTF+0
TSLINOG  EQU   TSLICTF+0
@NM00244 EQU   TSLICTF+0
         ORG   TSLICTSR+13
@NM00245 DS    BL1
         ORG   TSLICTSR+14
         DS    CL2
TSLLSTSR DS    CL16
         ORG   TSLLSTSR
TSLLSMD  DS    CL7
TSLLOPTF DS    CL1
         ORG   TSLLOPTF
TSLLONXT DS    BL1
@NM00246 EQU   TSLLOPTF+0
         ORG   TSLLSTSR+8
TSLLOFST DS    FL4
TSLLRTNP DS    AL4
         ORG   TSLLSTSR+16
TSLGET   DS    CL13
         ORG   TSLGET
TSLGSMD  DS    CL7
TSLGOPTF DS    CL1
         ORG   TSLGOPTF
@NM00247 DS    BL1
@NM00248 EQU   TSLGOPTF+0
@NM00249 EQU   TSLGOPTF+0
TSLGOMSG EQU   TSLGOPTF+0
TSLGOXTD EQU   TSLGOPTF+0
@NM00250 EQU   TSLGOPTF+0
         ORG   TSLGET+8
TSLGIOPP DS    AL4
TSLGDSID DS    FL1
         ORG   TSLGET+13
         DS    CL3
TSLSICDS DS    CL20
         ORG   TSLSICDS
TSLSSMD  DS    CL7
TSLSOPTF DS    CL1
         ORG   TSLSOPTF
TSLSOICT DS    BL1
TSLSOCDS EQU   TSLSOPTF+0
TSLSOALL EQU   TSLSOPTF+0
TSLSOMSG EQU   TSLSOPTF+0
TSLSOXTD EQU   TSLSOPTF+0
@NM00251 EQU   TSLSOPTF+0
         ORG   TSLSICDS+8
TSLSICTP DS    AL4
TSLSIOPP DS    AL4
TSLSICTF DS    CL1
         ORG   TSLSICTF
TSLSIFND DS    BL1
TSLSIOK  EQU   TSLSICTF+0
TSLSISUP EQU   TSLSICTF+0
TSLSIDEL EQU   TSLSICTF+0
TSLSIDLE EQU   TSLSICTF+0
TSLSIDLI EQU   TSLSICTF+0
TSLSINOG EQU   TSLSICTF+0
TSLSISLS EQU   TSLSICTF+0
         ORG   TSLSICDS+17
@NM00252 DS    BL1
TSLSCDSF DS    CL1
         ORG   TSLSCDSF
TSLSCFND DS    BL1
TSLSCOK  EQU   TSLSCDSF+0
TSLSCSUP EQU   TSLSCDSF+0
TSLSCDEL EQU   TSLSCDSF+0
@NM00253 EQU   TSLSCDSF+0
@NM00254 EQU   TSLSCDSF+0
TSLSCERR EQU   TSLSCDSF+0
TSLSDUM  EQU   TSLSCDSF+0
         ORG   TSLSICDS+19
@NM00255 DS    BL1
         ORG   TSLSICDS+20
TSLENTSR DS    CL16
         ORG   TSLENTSR
TSLETYPE DS    FL1
TSLEVER# DS    FL1
TSLEOPTF DS    CL1
         ORG   TSLEOPTF
TSLEONXT DS    BL1
@NM00256 EQU   TSLEOPTF+0
         ORG   TSLENTSR+3
@NM00257 DS    BL1
TSLENMEP DS    AL4
TSLEBGNP DS    AL4
TSLEFNDP DS    AL4
         ORG   TSLENTSR+16
TSLMFUNC DS    CL8
         ORG   TSLMFUNC
TSLMTYPE DS    FL1
TSLMSMD  DS    CL7
         ORG   TSLMFUNC+8
TSLRELM  DS    CL16
         ORG   TSLRELM
TSLRSMD  DS    CL7
@NM00258 DS    CL1
TSLRAPTR DS    AL4
TSLRRTNP DS    AL4
         ORG   TSLRELM+16
CPLSW    DS    BL2
         ORG   CPLSW
NOGOSW   DS    BL1
STOP     EQU   CPLSW+0
PTFCPL   EQU   CPLSW+0
MODCPL   EQU   CPLSW+0
LMDCPL   EQU   CPLSW+0
SMDUPD   EQU   CPLSW+0
FND      EQU   CPLSW+0
LOOPSW1  EQU   CPLSW+0
@NM00259 DS    BL1
         ORG   CPLSW+2
OK1NGSET DS    CL1
NGSET    DS    CL1
XX1SW    DS    BL1
         ORG   XX1SW
XX1STOP1 DS    BL1
XX1NG    EQU   XX1SW+0
XX1OK    EQU   XX1SW+0
XX1RQFND EQU   XX1SW+0
@NM00260 EQU   XX1SW+0
         ORG   XX1SW+1
TEMP1PTF DS    CL7
TMPID    DS    CL8
TIMETEMP DS    CL4
SAVAPPD  DS    CL3
SAVAPPT  DS    CL3
SUPDLSW  DS    BL1
         ORG   SUPDLSW
SUPFND   DS    BL1
@NM00261 EQU   SUPDLSW+0
         ORG   SUPDLSW+1
RELEMSW  DS    BL1
         ORG   RELEMSW
RELSTOP  DS    BL1
RELTYPE  EQU   RELEMSW+0
RELFND   EQU   RELEMSW+0
@NM00262 EQU   RELEMSW+0
         ORG   RELEMSW+1
REDOPTFS DS    CL7
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
REDOPT1  EQU   @02
M5PTR    EQU   @02
M4PTR    EQU   @03
PX1      EQU   @03
P1PTR    EQU   @02
RESETRC  EQU   @03
L2PTR    EQU   @02
M2PTR    EQU   @02
P2PTR    EQU   @02
LX6      EQU   @03
L6PTR    EQU   @02
PXH      EQU   @05
SUPDLX   EQU   @02
SUPDLRC  EQU   @03
HOLDNUM  EQU   @06
PXF      EQU   @05
PFPTR    EQU   @02
DELRC    EQU   @03
NTX      EQU   @02
TMPTYPE  EQU   @05
NTDELRC  EQU   @03
CON      EQU   @06
LON      EQU   @02
OKRC1    EQU   @03
OKRC     EQU   @05
P8PTR    EQU   @04
SMDCKRC  EQU   @05
PXC      EQU   @02
PCPTR    EQU   @04
P7PTR    EQU   @03
PXE      EQU   @04
PEPTR    EQU   @03
XX3PTR1  EQU   @02
PDPTR    EQU   @02
XX2PTR1  EQU   @03
PXG      EQU   @05
PGPTR    EQU   @02
PXB      EQU   @04
PBPTR    EQU   @02
XX1INDX  EQU   @06
XX1PTR1  EQU   @03
P9PTR    EQU   @02
P4PTR    EQU   @02
LX1      EQU   @03
L1PTR    EQU   @02
M3PTR    EQU   @03
MX1      EQU   @03
M1PTR    EQU   @02
CPLRTNCD EQU   @03
CCAPTR   EQU   @11
RTNCODE  EQU   @15
R0       EQU   @00
RTNREG   EQU   @14
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAIOPTR EQU   CCAFIOP
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCACDSID EQU   CCAFSYS+24
CCAACDID EQU   CCAFSYS+32
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAICT   EQU   CCAFICT
CCAICPTF EQU   CCAFICT+4
CCAICMOD EQU   CCAFICT+8
CCAICLMD EQU   CCAFICT+12
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00009 EQU   HMASMCCA+244
CCATBLPA EQU   @NM00009+12
CCAFFUNC EQU   HMASMCCA+264
CCAFUNCT EQU   CCAFFUNC
CCAFLAG1 EQU   CCAFFUNC+8
CCAAPPLY EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAFLAG2 EQU   CCAFFUNC+11
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCAPTSNP EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCADATE  EQU   CCAFCTL+1
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCABLDLA EQU   0
@NM00025 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00027 EQU   CCABLDLL
CCALKDRC EQU   @NM00027+20
@NM00029 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00029+20
@NM00031 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00031+20
@NM00033 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00033+20
@NM00035 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00035+20
@NM00037 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00037+20
@NM00039 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00039+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
IOPNAM17 EQU   IOPNAME
@NM00043 EQU   HMASMIOP+12
@NM00044 EQU   @NM00043
IOPDDNAM EQU   HMASMIOP+24
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00154 EQU   IOPQSMIF
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPBS02  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
HMASMICT EQU   0
ICTCORE  EQU   HMASMICT
ICTPSPLN EQU   ICTCORE
ICTMSPLN EQU   ICTCORE+4
ICTLSPLN EQU   ICTCORE+8
ICTGMSPL EQU   0
ICTPTF   EQU   0
ICTPTFS  EQU   ICTPTF
ICTPEND  EQU   ICTPTFS
ICTPFLG1 EQU   ICTPTF+7
ICTERROR EQU   ICTPFLG1
ICTPFLG3 EQU   ICTPTF+8
ICTPPROC EQU   ICTPFLG3
ICTPNOGO EQU   ICTPFLG3
ICTPCPL  EQU   ICTPFLG3
ICTPMSG  EQU   ICTPFLG3
ICTPFLG5 EQU   ICTPTF+9
ICTPDELP EQU   ICTPFLG5
ICTPJCLP EQU   ICTPFLG5
ICTPADDP EQU   ICTPFLG5+1
ICTPMDLP EQU   ICTPFLG5+1
ICTPFLG6 EQU   ICTPTF+11
ICTPFLF  EQU   ICTPFLG6
ICTPFLG2 EQU   ICTPTF+12
ICTPFLG4 EQU   ICTPTF+13
ICTPCDSE EQU   ICTPFLG4
ICTPDEXP EQU   ICTPFLG4
ICTPDIMP EQU   ICTPFLG4
ICTPFLG8 EQU   ICTPTF+14
ICTPGCPL EQU   ICTPFLG8
ICTPECPL EQU   ICTPFLG8
ICTPDCPL EQU   ICTPFLG8
ICTPFLG9 EQU   ICTPTF+15
ICTPPDEL EQU   ICTPFLG9
@NM00181 EQU   ICTPFLG9
ICTPFLGA EQU   ICTPTF+16
ICTPUSR1 EQU   ICTPFLGA
ICTPTYPE EQU   ICTPTF+17
ICTPONUM EQU   ICTPTF+18
ICTPSUPN EQU   ICTPTF+20
ICTPFMID EQU   ICTPTF+22
ICTPRELN EQU   ICTPTF+36
ICTPTPFX EQU   ICTPTF+38
ICTPCHN  EQU   ICTPTF+64
ICTPRCHN EQU   ICTPTF+68
ICTPSCHN EQU   ICTPTF+72
ICTPPCHN EQU   ICTPTF+76
ICTPICHN EQU   ICTPTF+80
ICTPNCHN EQU   ICTPTF+84
ICTPVCHN EQU   ICTPTF+88
ICTPDCHN EQU   ICTPTF+92
ICTPBCHN EQU   ICTPTF+96
ICTIXPF  EQU   0
ICTIXP   EQU   ICTIXPF
ICTENTLS EQU   0
ICTENTNT EQU   ICTENTLS
ICTENTNM EQU   ICTENTNT
ICTENTND EQU   ICTENTNM
ICTENTST EQU   ICTENTNT+7
ICTEREQB EQU   ICTENTST
ICTEREQT EQU   ICTENTST
ICTREQLS EQU   0
ICTREQNT EQU   ICTREQLS
ICTREQNM EQU   ICTREQNT
ICTREQST EQU   ICTREQNT+7
ICTSUPLS EQU   0
ICTSUPNT EQU   ICTSUPLS
ICTSUPNM EQU   ICTSUPNT
ICTSUPND EQU   ICTSUPNM
ICTPRELS EQU   0
ICTPRENT EQU   ICTPRELS
ICTPRENM EQU   ICTPRENT
ICTPREST EQU   ICTPRENT+7
ICTIRQLS EQU   0
ICTIRQNT EQU   ICTIRQLS
ICTIRQNM EQU   ICTIRQNT
ICTIRQST EQU   ICTIRQNT+7
ICTCSRST EQU   ICTIRQNT+15
ICTNPRLS EQU   0
ICTNPRNT EQU   ICTNPRLS
ICTNPRNM EQU   ICTNPRNT
ICTVRSLS EQU   0
ICTVRSNT EQU   ICTVRSLS
ICTVRSNM EQU   ICTVRSNT
ICTDELLS EQU   0
ICTDELNT EQU   ICTDELLS
ICTDELNM EQU   ICTDELNT
ICTDELND EQU   ICTDELNM
ICTDELST EQU   ICTDELNT+7
ICTSBYLS EQU   0
ICTSBYNT EQU   ICTSBYLS
ICTSBYNM EQU   ICTSBYNT
ICTMOD   EQU   0
ICTMNAME EQU   ICTMOD
ICTMEND  EQU   ICTMNAME
ICTMFLG2 EQU   ICTMOD+8
ICTMPROC EQU   ICTMFLG2
ICTMNOGO EQU   ICTMFLG2
ICTMCPL  EQU   ICTMFLG2
ICTMFLG1 EQU   ICTMOD+9
ICTMMODR EQU   ICTMFLG1
ICTMMOD  EQU   ICTMMODR
ICTMASM  EQU   ICTMMODR
ICTMZAP  EQU   ICTMFLG1
ICTMXPND EQU   ICTMFLG1
ICTMMACR EQU   ICTMFLG1
ICTMMACU EQU   ICTMFLG1
ICTMSRCR EQU   ICTMFLG1
ICTMSRCU EQU   ICTMFLG1
ICTMFLG3 EQU   ICTMOD+10
ICTMFLG4 EQU   ICTMOD+11
ICTMISEL EQU   ICTMFLG4
ICTMIDEL EQU   ICTMFLG4
ICTMSELM EQU   ICTMFLG4
ICTMFLG5 EQU   ICTMOD+12
ICTMELCK EQU   ICTMFLG5
ICTMNORL EQU   ICTMFLG5
ICTMODF4 EQU   ICTMOD+13
ICTMLEP1 EQU   ICTMODF4
ICTMODF5 EQU   ICTMOD+14
ICTMLEP2 EQU   ICTMODF5
ICTMODF6 EQU   ICTMOD+15
ICTMLEP3 EQU   ICTMODF6
ICTMODF7 EQU   ICTMOD+16
ICTMLEP4 EQU   ICTMODF7
ICTMACF4 EQU   ICTMOD+17
ICTPPTR  EQU   ICTMOD+96
ICTMCHN  EQU   ICTMOD+100
ICTMICHN EQU   ICTMOD+104
ICTMACHN EQU   ICTMOD+112
ICTMTCHN EQU   ICTMOD+116
ICTMVCHN EQU   ICTMOD+120
ICTMUCHN EQU   ICTMOD+124
ICTIXMF  EQU   0
ICTIXM   EQU   ICTIXMF
ICTMIDLS EQU   0
ICTMID   EQU   ICTMIDLS
ICTMODID EQU   ICTMID
ICTMODST EQU   ICTMID+7
ICTASMLS EQU   0
ICTASMAD EQU   ICTASMLS
ICTTALLS EQU   0
ICTTALNM EQU   ICTTALLS
ICTMVRLS EQU   0
ICTMVRNT EQU   ICTMVRLS
ICTMVRNM EQU   ICTMVRNT
ICTMUMLS EQU   0
ICTMUMNT EQU   ICTMUMLS
ICTMUMNM EQU   ICTMUMNT
ICTLMOD  EQU   0
ICTLMNAM EQU   ICTLMOD
ICTLNAME EQU   ICTLMNAM
ICTLEND  EQU   ICTLNAME
ICTLFLG4 EQU   ICTLMOD+8
ICTLPROC EQU   ICTLFLG4
ICTLNOGO EQU   ICTLFLG4
ICTLCPL  EQU   ICTLFLG4
ICTLFLG1 EQU   ICTLMOD+9
ICTLFLG5 EQU   ICTLMOD+10
ICTLFLG6 EQU   ICTLMOD+11
ICTLFLG7 EQU   ICTLMOD+12
ICTLFLG2 EQU   ICTLMOD+13
ICTLFLG3 EQU   ICTLMOD+14
ICTLCHN  EQU   ICTLMOD+34
ICTIXLF  EQU   0
ICTIXL   EQU   ICTIXLF
SPLPPACK EQU   0
SPLPUNPK EQU   0
SPLPDSN  EQU   0
SPLODSN  EQU   SPLPDSN
TBLXPARM EQU   0
TBLXINDX EQU   TBLXPARM+4
TBLXTBL  EQU   TBLXPARM+28
TBLXFLG1 EQU   TBLXPARM+80
TBLXRC   EQU   TBLXPARM+92
TBLXOPTS EQU   0
TBLFLAGS EQU   TBLXOPTS+8
TBLFLG1  EQU   TBLFLAGS
TBLNOAPP EQU   TBLFLG1
TBLFLG2  EQU   TBLFLAGS+2
TBLFLG3  EQU   TBLFLAGS+3
TBLFLG4  EQU   TBLFLAGS+5
TBLFLG5  EQU   TBLFLAGS+7
CCADSIDA EQU   0
CCATYPEA EQU   0
IOPBS01  EQU   0
IOPBS03  EQU   0
GONOGO   EQU   0
XX1SMD   EQU   0
XX1CHN   EQU   0
XX1LEN   EQU   0
XX1PART2 EQU   0
XX1NGSET EQU   0
XX2SMD   EQU   0
XX2PART2 EQU   0
XX2NGSET EQU   0
XX3SMD   EQU   0
XX3NGSET EQU   0
RELEMNG  EQU   0
REDOPTF  EQU   0
REDO@    EQU   0
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00050 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
@NM00061 EQU   IOPUDATA
@NM00062 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPABUNT EQU   IOPASMDR+1
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPLMDF2 EQU   IOPLMLEP+1
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPLMDFX EQU   IOPLMDNT+24
@NM00071 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMST  EQU   IOPRMIDE+7
IOPFMIDE EQU   IOPMACDR+9
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00082 EQU   IOPSRCDR+1
@NM00084 EQU   @NM00082+7
@NM00088 EQU   IOPSRCDR+9
IOPSRCFX EQU   IOPSRCNT+24
@NM00092 EQU   IOPSRCFX
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00098 EQU   IOPMODDR+1
@NM00100 EQU   @NM00098+7
@NM00104 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00108 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODST EQU   IOPLMODS+7
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00119 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPSYSFX EQU   IOPSYSNT+24
@NM00126 EQU   IOPSYSFX
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPTYPE EQU   IOPPTFDR+1
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPAPP   EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPDUMMP EQU   IOPFLGS5
IOPREGEN EQU   IOPFLGS5
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPSBYP  EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPDBYNO EQU   IOPPTFDR+6
IOPSBYNO EQU   IOPPTFDR+13
IOPPTFFX EQU   IOPPTFNT+24
@NM00135 EQU   IOPPTFFX
@NM00136 EQU   @NM00135
IOPPDTES EQU   IOPPTFFX+41
@NM00139 EQU   IOPPDTES
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPAPPD  EQU   IOPDATES
IOPAPPT  EQU   IOPDATES+3
IOPACCD  EQU   IOPDATES+12
IOPACCT  EQU   IOPDATES+15
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPPTFND EQU   IOPPMODS
IOPPIND  EQU   IOPPNTRY+8
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
IOPSBYNM EQU   IOPSBYNT
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPPTFG1 EQU   IOPPTSFX+34
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00164 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00164
IOPPTREL EQU   IOPPTFMD
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBLEP2 EQU   IOPBPDS+9
@NM00168 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00168
IOPBFTB1 EQU   IOPBFTB0
ICTENDNT EQU   ICTENDCH
ICTENDIX EQU   ICTENDCH
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
IOPBCEND EQU   IOPBPDS+21
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00170 EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
@NM00169 EQU   IOPBFTB1
IOPBAOSL EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBREFR EQU   IOPBLEP2
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
@NM00167 EQU   IOPBLEP2
IOPBDC   EQU   IOPBLEP2
@NM00166 EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00165 EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBRENT EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
IOPPTIND EQU   IOPPTNTR+8
IOPPTSND EQU   IOPPTREL
@NM00163 EQU   IOPPTSFX+872
IOPSYZPP EQU   IOPPTSFX+772
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZAP EQU   IOPPTSFX+755
IOPSYUPP EQU   IOPPTSFX+655
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPD EQU   IOPPTSFX+638
IOPSYSPP EQU   IOPPTSFX+538
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSUP EQU   IOPPTSFX+521
IOPSYLKP EQU   IOPPTSFX+421
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKD EQU   IOPPTSFX+404
IOPSYCPP EQU   IOPPTSFX+304
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOM EQU   IOPPTSFX+170
IOPSYASP EQU   IOPPTSFX+70
IOPSYASR EQU   IOPPTSFX+69
IOPSYASS EQU   IOPPTSFX+61
IOPSYASM EQU   IOPPTSFX+53
@NM00162 EQU   IOPPTSFX+35
@NM00161 EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPPTSNP EQU   IOPPTFG1
IOPSYPLN EQU   IOPPTSFX+32
IOPDSPFX EQU   IOPPTSFX+6
IOPDSDIR EQU   IOPDSSPC+4
IOPDSSEC EQU   IOPDSSPC+2
IOPDSPRM EQU   IOPDSSPC
@NM00160 EQU   IOPPTSDR+4
IOPPTPEM EQU   IOPPTSDR+2
IOPPCNVL EQU   IOPPTSDR+1
@NM00159 EQU   IOPPTSDR
IOPQFMTP EQU   IOPQFMLS+8
@NM00158 EQU   IOPQFMLS+7
IOPQFMND EQU   IOPQFMNM
@NM00157 EQU   IOPQFMDR
@NM00153 EQU   IOPQSMDR
@NM00152 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
@NM00151 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00150 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00149 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00148 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00147 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00146 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00145 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00144 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00143 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00142 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00141 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
IOPPFMID EQU   IOPPTFFX+73
@NM00140 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
IOPRSTT  EQU   IOPDATES+9
IOPRSTD  EQU   IOPDATES+6
IOPRECT  EQU   @NM00139+3
IOPRECD  EQU   @NM00139
@NM00138 EQU   IOPPTFFX+8
@NM00137 EQU   @NM00135+7
IOPPRELN EQU   @NM00136
@NM00134 EQU   IOPPTFDR+20
@NM00133 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00132 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPBYP   EQU   IOPFLGS5
@NM00131 EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
@NM00130 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
IOPSYSND EQU   IOPSYNTR
@NM00129 EQU   IOPSYSFX+21
IOPSYSID EQU   IOPSYSFX+13
IOPNUCID EQU   IOPSYSFX+12
IOPSREL  EQU   IOPSYSFX+8
@NM00128 EQU   @NM00126+7
@NM00127 EQU   @NM00126
@NM00125 EQU   IOPSYSDR+5
@NM00124 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPMTSNP EQU   IOPFLGS7
IOPPEMAX EQU   IOPSYSDR+2
IOPSCNVL EQU   IOPSYSDR+1
@NM00123 EQU   IOPSYSDR
IOPDLIND EQU   IOPDNTRY+8
IOPDLBND EQU   IOPDSYS
@NM00122 EQU   IOPDLBFX+8
@NM00121 EQU   @NM00119+7
@NM00120 EQU   @NM00119
@NM00118 EQU   IOPDLBDR+1
@NM00117 EQU   IOPDLBDR
IOPMDIND EQU   IOPMNTRY+8
@NM00116 EQU   IOPMODST
IOPMODND EQU   IOPMODID
IOPDLIB  EQU   IOPMODFX+72
@NM00115 EQU   IOPMODFX+12
@NM00114 EQU   IOPMODF4
@NM00113 EQU   IOPMODF3
@NM00112 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00111 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00110 EQU   @NM00108+7
@NM00109 EQU   @NM00108
@NM00107 EQU   IOPMODDR+17
@NM00106 EQU   @NM00104+7
@NM00105 EQU   @NM00104
@NM00103 EQU   @NM00100
@NM00102 EQU   @NM00100
@NM00101 EQU   @NM00100
@NM00099 EQU   @NM00098
@NM00097 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00096 EQU   IOPSRCST
IOPSRCND EQU   IOPSRCID
IOPSRDLB EQU   IOPSRCFX+72
IOPSRSYS EQU   IOPSRCFX+64
@NM00095 EQU   IOPSRCFX+8
@NM00094 EQU   @NM00092+7
@NM00093 EQU   @NM00092
@NM00091 EQU   IOPSRCDR+18
IOPSRLNG EQU   IOPSRCDR+17
@NM00090 EQU   @NM00088+7
@NM00089 EQU   @NM00088
@NM00087 EQU   @NM00084
@NM00086 EQU   @NM00084
@NM00085 EQU   @NM00084
@NM00083 EQU   @NM00082
@NM00081 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
IOPMCTYP EQU   IOPMCIND
@NM00080 EQU   IOPMACST
IOPMACND EQU   IOPMACID
IOPMCDLB EQU   IOPMACFX+72
IOPMCSYS EQU   IOPMACFX+64
@NM00079 EQU   IOPMACFX+8
IOPBUTYP EQU   IOPBUNT+7
IOPBUSMD EQU   IOPBUNT
@NM00078 EQU   IOPMACDR+18
IOPMCLNG EQU   IOPMACDR+17
IOPFMST  EQU   IOPFMIDE+7
IOPFMID  EQU   IOPFMIDE
@NM00077 EQU   IOPRMST
IOPRMASM EQU   IOPRMST
@NM00076 EQU   IOPRMST
IOPRMID  EQU   IOPRMIDE
@NM00075 EQU   IOPMACDR
IOPLMIND EQU   IOPLNTRY+8
IOPLMDND EQU   IOPSYSLB
@NM00073 EQU   @NM00071+7
@NM00072 EQU   @NM00071
@NM00070 EQU   IOPLMDDR+6
@NM00069 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPCOPY  EQU   IOPFLGS3
@NM00068 EQU   IOPLMDF4
@NM00067 EQU   IOPLMDF3
@NM00066 EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPNE    EQU   IOPLMDF2
@NM00065 EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPAPF   EQU   IOPFLGS2
@NM00064 EQU   IOPLMDDR
@NM00063 EQU   IOPASMDR+9
IOPABUTP EQU   IOPABUNT+7
IOPABUPT EQU   IOPABUNT
IOPNTLVL EQU   IOPASMDR
IOPALLOC EQU   @NM00062+4
IOPUSED  EQU   @NM00062
IOPTPSEQ EQU   @NM00061+8
IOPVLSER EQU   @NM00061+2
IOPBLKSI EQU   @NM00061
IOPCQMAX EQU   IOPCQMAP+12
@NM00060 EQU   IOPCQMAP+11
@NM00059 EQU   IOPCQMAP+8
@NM00058 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00057 EQU   IOPSCMAP+11
@NM00056 EQU   IOPSCMAP+8
@NM00055 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00054 EQU   IOPNTMAX+11
@NM00053 EQU   IOPNTMAX+8
@NM00052 EQU   IOPNTMAX
@NM00051 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00050+5
IOPIPTF3 EQU   @NM00050
@NM00242 EQU   TBLFLG5
TBLICTOK EQU   TBLFLG5
@NM00241 EQU   TBLFLG4
TBLBPFM  EQU   TBLFLG4
@NM00240 EQU   TBLFLG4
TBLBPIRQ EQU   TBLFLG4
TBLBPREQ EQU   TBLFLG4
TBLBPPRE EQU   TBLFLG4
TBLBPID  EQU   TBLFLG4
@NM00239 EQU   TBLFLG3+1
TBLSTS   EQU   TBLFLG3
TBLMTS   EQU   TBLFLG3
TBLPTS   EQU   TBLFLG3
TBLACRQ  EQU   TBLFLG3
TBLCRQ   EQU   TBLFLG3
TBLSCDS  EQU   TBLFLG3
TBLACDS  EQU   TBLFLG3
TBLCDS   EQU   TBLFLG3
TBLMASS  EQU   TBLFLG2
@NM00238 EQU   TBLFLG2
TBLFMID  EQU   TBLFLG2
TBLGROUP EQU   TBLFLG2
TBLEXC   EQU   TBLFLG2
TBLSEL   EQU   TBLFLG2
@NM00237 EQU   TBLFLG1+1
TBLDISW  EQU   TBLFLG1+1
TBLDISR  EQU   TBLFLG1+1
TBLDISN  EQU   TBLFLG1+1
TBLNOJCL EQU   TBLFLG1
TBLFLUSH EQU   TBLFLG1
TBLUSER  EQU   TBLFLG1
TBLAPAR  EQU   TBLFLG1
TBLCOMP  EQU   TBLFLG1
TBLASSEM EQU   TBLFLG1
TBLCHECK EQU   TBLFLG1
@NM00236 EQU   TBLXOPTS+5
TBLNUCID EQU   TBLXOPTS+4
TBLJCLGT EQU   TBLXOPTS
TBLXEND0 EQU   TBLXPARM+124
@NM00235 EQU   TBLXPARM+108
TBLXIOP3 EQU   TBLXPARM+104
TBLXD2GT EQU   TBLXPARM+100
TBLXDLGT EQU   TBLXPARM+96
@NM00234 EQU   TBLXRC+3
TBLXIRC  EQU   TBLXRC+2
TBLXLRC  EQU   TBLXRC+1
TBLXTRC  EQU   TBLXRC
TBLXIBGN EQU   TBLXPARM+88
TBLXTSLP EQU   TBLXPARM+84
@NM00233 EQU   TBLXPARM+83
@NM00232 EQU   TBLXPARM+82
@NM00231 EQU   TBLXPARM+81
@NM00230 EQU   TBLXFLG1
TBLXTCRC EQU   TBLXFLG1
TBLXFUND EQU   TBLXPARM+72
TBLXFUNC EQU   TBLXPARM+64
@NM00229 EQU   TBLXPARM+62
TBLXCRQI EQU   TBLXPARM+61
TBLXCDSI EQU   TBLXPARM+60
TBLXLMGT EQU   TBLXPARM+56
TBLXSCGT EQU   TBLXPARM+52
TBLXSREL EQU   TBLXPARM+48
TBLXASGT EQU   TBLXPARM+44
TBLXIFGT EQU   TBLXPARM+40
TBLXNULL EQU   TBLXPARM+36
TBLXTOP  EQU   TBLXPARM+32
TBLXSEGT EQU   TBLXPARM+24
TBLXIOPF EQU   TBLXPARM+20
TBLXIOP2 EQU   TBLXPARM+16
TBLXEND  EQU   TBLXINDX+8
TBLXSTRT EQU   TBLXINDX+4
TBLXCUR  EQU   TBLXINDX
TBLXHDR  EQU   TBLXPARM
SPLIFIL  EQU   SPLODSN+33
SPLISMD  EQU   SPLODSN+26
SPLIPFX  EQU   SPLODSN
SPLIUNPK EQU   SPLPUNPK+8
SPLOUNPK EQU   SPLPUNPK
SPLOPACK EQU   SPLPPACK+8
SPLIPACK EQU   SPLPPACK
@NM00224 EQU   ICTLMOD+38
ICTLTTR  EQU   ICTLMOD+31
ICTTG2   EQU   ICTLMOD+23
ICTTG1   EQU   ICTLMOD+15
@NM00223 EQU   ICTLFLG3
ICTLZAP  EQU   ICTLFLG3
ICTLLKD  EQU   ICTLFLG3
ICTLCPY  EQU   ICTLFLG3
ICTLXPND EQU   ICTLFLG3
ICTTIND2 EQU   ICTLFLG3
ICTTIND1 EQU   ICTLFLG3
@NM00222 EQU   ICTLFLG2
ICTLDEL  EQU   ICTLFLG2
@NM00221 EQU   ICTLFLG2
ICTLTDEL EQU   ICTLFLG2
ICTLINK  EQU   ICTLFLG2
ICTCOPY  EQU   ICTLFLG2
@NM00220 EQU   ICTLFLG7
@NM00219 EQU   ICTLFLG6
@NM00218 EQU   ICTLFLG5
ICTLPAGA EQU   ICTLFLG5
ICTLNE   EQU   ICTLFLG5
@NM00217 EQU   ICTLFLG1
ICTLDC   EQU   ICTLFLG1
ICTLREFR EQU   ICTLFLG1
ICTLOVLY EQU   ICTLFLG1
ICTLSCTR EQU   ICTLFLG1
ICTLREUS EQU   ICTLFLG1
ICTLRENT EQU   ICTLFLG1
ICTLAPF  EQU   ICTLFLG1
@NM00216 EQU   ICTLFLG4
ICTLPASS EQU   ICTLFLG4
ICTLDDCK EQU   ICTLFLG4
ICTLMSG  EQU   ICTLFLG4
@NM00215 EQU   ICTMUMNT+7
ICTMUMND EQU   ICTMUMNM
@NM00214 EQU   ICTMVRNT+7
ICTMVRND EQU   ICTMVRNM
ICTTALND EQU   ICTTALNM
ICTASMND EQU   ICTASMAD
ICTMIDTY EQU   ICTMODST
ICTMIDAM EQU   ICTMODST
ICTMIDRG EQU   ICTMODST
ICTMIDF1 EQU   ICTMODST
ICTMIDPL EQU   ICTMODST
ICTMIDPS EQU   ICTMODST
@NM00213 EQU   ICTMODST
ICTMIDND EQU   ICTMODID
@NM00212 EQU   ICTMOD+128
ICTMICHA EQU   ICTMOD+108
@NM00211 EQU   ICTMOD+95
ICTMFMID EQU   ICTMOD+88
@NM00210 EQU   ICTMOD+87
ICTMRMID EQU   ICTMOD+80
ICTMSSI  EQU   ICTMOD+72
ICTMDOBJ EQU   ICTMOD+64
ICTMSYSL EQU   ICTMOD+56
ICTMDSTL EQU   ICTMOD+48
ICTMASLB EQU   ICTMOD+40
ICTTOLIB EQU   ICTMOD+32
ICTFMLIB EQU   ICTMOD+24
ICTMRELN EQU   ICTMOD+22
@NM00209 EQU   ICTMOD+21
ICTMLANG EQU   ICTMOD+20
@NM00208 EQU   ICTMOD+19
ICTMACF5 EQU   ICTMOD+18
ICTMZMPR EQU   ICTMACF4
ICTMZOMZ EQU   ICTMACF4
ICTMDOAS EQU   ICTMACF4
ICTMXUPD EQU   ICTMACF4
ICTMFXC  EQU   ICTMACF4
ICTMFXBS EQU   ICTMACF4
ICTMHASM EQU   ICTMACF4
ICTMACDL EQU   ICTMACF4
@NM00207 EQU   ICTMLEP4
@NM00206 EQU   ICTMLEP3
@NM00205 EQU   ICTMLEP2
ICTMPAGA EQU   ICTMLEP2
ICTMNE   EQU   ICTMLEP2
@NM00204 EQU   ICTMLEP1
ICTMDC   EQU   ICTMLEP1
ICTMREFR EQU   ICTMLEP1
ICTMOVLY EQU   ICTMLEP1
ICTMSCTR EQU   ICTMLEP1
ICTMREUS EQU   ICTMLEP1
ICTMRENT EQU   ICTMLEP1
ICTMAPF  EQU   ICTMLEP1
@NM00203 EQU   ICTMFLG5
ICTMCOPY EQU   ICTMFLG5
ICTMPASS EQU   ICTMFLG5
@NM00202 EQU   ICTMFLG4
ICTMTSEL EQU   ICTMFLG4
ICTMDSTE EQU   ICTMFLG4
ICTMMIDE EQU   ICTMFLG4
ICTMASOC EQU   ICTMFLG4
@NM00201 EQU   ICTMFLG3
ICTMPRMS EQU   ICTMFLG3
ICTMALIS EQU   ICTMFLG3
ICTMWRK  EQU   ICTMFLG3
ICTMTRX  EQU   ICTMFLG3
ICTMRELF EQU   ICTMFLG3
ICTLIBTX EQU   ICTMFLG3
ICTLIBLK EQU   ICTMFLG3
@NM00200 EQU   ICTMFLG2
@NM00199 EQU   ICTMFLG2
ICTMMIDU EQU   ICTMFLG2
ICTMDEL  EQU   ICTMFLG2
ICTMMSG  EQU   ICTMFLG2
@NM00198 EQU   ICTSBYNT+7
ICTSBYND EQU   ICTSBYNM
ICTDELEX EQU   ICTDELST
@NM00197 EQU   ICTVRSNT+7
ICTVRSND EQU   ICTVRSNM
@NM00196 EQU   ICTNPRNT+7
ICTNPRND EQU   ICTNPRNM
@NM00195 EQU   ICTCSRST
@NM00194 EQU   ICTCSRST
ICTCSRF  EQU   ICTCSRST
@NM00193 EQU   ICTCSRST
ICTCSRNM EQU   ICTIRQNT+8
@NM00192 EQU   ICTIRQST
ICTIREQT EQU   ICTIRQST
ICTIREQI EQU   ICTIRQST
ICTIREQB EQU   ICTIRQST
ICTIREQS EQU   ICTIRQST
@NM00191 EQU   ICTIRQST
ICTIRQND EQU   ICTIRQNM
@NM00190 EQU   ICTPREST
ICTPREQT EQU   ICTPREST
ICTPREQI EQU   ICTPREST
ICTPREQB EQU   ICTPREST
ICTPREQS EQU   ICTPREST
@NM00189 EQU   ICTPREST
ICTPREND EQU   ICTPRENM
@NM00188 EQU   ICTSUPNT+7
@NM00187 EQU   ICTREQST
ICTRREQT EQU   ICTREQST
ICTRREQI EQU   ICTREQST
ICTRREQB EQU   ICTREQST
ICTRREQS EQU   ICTREQST
@NM00186 EQU   ICTREQST
ICTREQND EQU   ICTREQNM
@NM00185 EQU   ICTENTST
ICTEREQI EQU   ICTENTST
ICTEREQS EQU   ICTENTST
@NM00184 EQU   ICTENTST
@NM00183 EQU   ICTPTF+100
ICTPRECT EQU   ICTPTF+33
ICTPRECD EQU   ICTPTF+30
ICTPVERN EQU   ICTPTF+29
ICTPUSR8 EQU   ICTPFLGA
ICTPUSR7 EQU   ICTPFLGA
ICTPUSR6 EQU   ICTPFLGA
ICTPUSR5 EQU   ICTPFLGA
ICTPUSR4 EQU   ICTPFLGA
ICTPUSR3 EQU   ICTPFLGA
ICTPUSR2 EQU   ICTPFLGA
ICTPPASS EQU   ICTPUSR1
@NM00182 EQU   @NM00181
ICTPRQBY EQU   @NM00181
ICTPRQOK EQU   @NM00181
ICTPRQCK EQU   @NM00181
@NM00180 EQU   ICTPFLG9
ICTPWRKO EQU   ICTPFLG9
ICTPMSL  EQU   ICTPFLG9
@NM00179 EQU   ICTPFLG8
@NM00178 EQU   ICTPFLG4
@NM00177 EQU   ICTPFLG4
@NM00176 EQU   ICTPFLG4
ICTPGELM EQU   ICTPFLG4
ICTPREDO EQU   ICTPFLG4
@NM00175 EQU   ICTPFLG2
ICTPRCND EQU   ICTPFLG2
ICTPTPS  EQU   ICTPFLG2
ICTPTR1  EQU   ICTPFLG2
ICTPVRSP EQU   ICTPFLG2
@NM00174 EQU   ICTPFLG6
ICTFLF   EQU   ICTPFLF
ICTPDBYP EQU   ICTPFLG6
ICTPSBYP EQU   ICTPFLG6
@NM00173 EQU   ICTPFLG5+1
ICTPLRFP EQU   ICTPFLG5
ICTPSUPP EQU   ICTPFLG5
ICTPREQP EQU   ICTPFLG5
ICTPPREP EQU   ICTPFLG5
ICTPNPRP EQU   ICTPFLG5
ICTPIRQP EQU   ICTPFLG5
@NM00172 EQU   ICTPFLG3
ICTPSLST EQU   ICTPFLG3
ICTPNOLB EQU   ICTPFLG3
ICTPVERJ EQU   ICTPFLG3
ICTPROCS EQU   ICTPPROC
ICTREGEN EQU   ICTPFLG1
ICTBYP   EQU   ICTPFLG1
ICTDUMMP EQU   ICTPFLG1
@NM00171 EQU   ICTPFLG1
ICTACC   EQU   ICTPFLG1
ICTRES   EQU   ICTPFLG1
ICTAPP   EQU   ICTPFLG1
ICTLEN   EQU   ICTGMSPL+1
ICTSP    EQU   ICTGMSPL
ICTLLEN  EQU   ICTLSPLN+1
ICTLSP   EQU   ICTLSPLN
ICTMLEN  EQU   ICTMSPLN+1
ICTMSP   EQU   ICTMSPLN
ICTPLEN  EQU   ICTPSPLN+1
ICTPSP   EQU   ICTPSPLN
IOPBS04E EQU   IOPBS04+2
IOPBAPFC EQU   IOPBAPF+1
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
IOPQSMTP EQU   IOPQSMLS+8
@NM00156 EQU   IOPQSMLS+7
IOPQSMND EQU   IOPQSMNM
@NM00155 EQU   @NM00154+7
IOPQSMFM EQU   @NM00154
@NM00074 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00049 EQU   IOPUSERL
@NM00048 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00047 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00046 EQU   @NM00043+10
IOPSEQNO EQU   @NM00043+8
@NM00045 EQU   @NM00044+7
IOPPTFNM EQU   @NM00044
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00042 EQU   CCABLDLM+2
@NM00041 EQU   CCABLDLM
CCAUPDPM EQU   @NM00039+24
@NM00040 EQU   @NM00039+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00039+12
CCAUPDTE EQU   @NM00039+8
CCAUPDNM EQU   @NM00039
CCASUPPM EQU   @NM00037+24
@NM00038 EQU   @NM00037+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00037+12
CCAIOSUP EQU   @NM00037+8
CCASUPNM EQU   @NM00037
CCAZAPPM EQU   @NM00035+24
@NM00036 EQU   @NM00035+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00035+12
CCASPZAP EQU   @NM00035+8
CCAZAPNM EQU   @NM00035
CCACOMPM EQU   @NM00033+24
@NM00034 EQU   @NM00033+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00033+12
CCACOMRS EQU   @NM00033+8
CCACOMNM EQU   @NM00033
CCACPYPM EQU   @NM00031+24
@NM00032 EQU   @NM00031+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00031+12
CCACOPY  EQU   @NM00031+8
CCACPYNM EQU   @NM00031
CCAASMPM EQU   @NM00029+24
@NM00030 EQU   @NM00029+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00029+12
CCAASM   EQU   @NM00029+8
CCAASMNM EQU   @NM00029
CCALKDPM EQU   @NM00027+24
@NM00028 EQU   @NM00027+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00027+12
CCALKED  EQU   @NM00027+8
CCALKDNM EQU   @NM00027
CCAPGMPM EQU   @NM00025+24
@NM00026 EQU   @NM00025+21
CCABPGRC EQU   @NM00025+20
CCABPGSP EQU   @NM00025+12
CCABPGAD EQU   @NM00025+8
CCABPGNM EQU   @NM00025
CCAEND   EQU   HMASMCCA+371
@NM00024 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00023 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
@NM00022 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
@NM00021 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00020 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00019 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00018 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00017 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00016 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00015 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
@NM00014 EQU   @NM00009+18
@NM00013 EQU   @NM00009+16
@NM00012 EQU   @NM00009+8
@NM00011 EQU   @NM00009+4
@NM00010 EQU   @NM00009
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCARVAD  EQU   CCAFSTA
CCALNLEN EQU   CCAFSYS+22
@NM00008 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
@NM00007 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00006 EQU   CCAFBUFR+122
@NM00005 EQU   CCAFBUFR+120
@NM00004 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00003 EQU   CCAFBUFR+88
@NM00002 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00001 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00413 EQU   @RC00411
@RF00417 EQU   @RC00411
@RC00465 EQU   @RC00463
@RF00528 EQU   @RC00526
@RF00634 EQU   @RC00630
@RF00799 EQU   @RC00797
@RF00820 EQU   @RC00781
@RF00885 EQU   @RC00878
@RF01017 EQU   @RC01013
@RF01010 EQU   @RC00991
@ENDDATA EQU   *
         END   HMASMCPL,(C'PLS1957',0802,78334)
