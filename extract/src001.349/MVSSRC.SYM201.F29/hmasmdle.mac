         TITLE 'HMASMDLE - ELEMENT/LMOD DELETE PROCESSOR'
HMASMDLE CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMDLE  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  LA    @10,4095(,@12)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@10                                    0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
*                                                                  0207
*   /*****************************************************************/
*   /*                                                               */
*   /* MAIN MODULE SEGMENT                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0207
*   HIGHDLE=0;                      /* CLEAR RETURN CODE COLLECTOR   */
         SLR   HIGHDLE,HIGHDLE                                     0207
*   IOPPTR=CCAIOPTR;                /* POINT TO GENERAL-USE IOP      */
         MVC   IOPPTR(4),CCAIOPTR(CCAPTR)                          0208
*   LOCALIOP=ADDR(LOCIOP);          /* POINT TO LOCAL IOP            */
         LA    LOCALIOP,LOCIOP                                     0209
*   DLEFLAGS=''B;                   /* CLEAR LOCAL FLAGS             */
         MVI   DLEFLAGS,X'00'                                      0210
*   HMASMGTP(1)=''B;                /* CLEAR SELECT LIST GTP         */
         XC    HMASMGTP(28),HMASMGTP                               0211
*   HMASMGTP(2)=''B;                /* CLEAR LMOD-TO-MOD GTP         */
         XC    HMASMGTP+28(28),HMASMGTP+28                         0212
*   HMASMGTP(3)=''B;                /* CLEAR TST GTP                 */
*                                                                  0213
         XC    HMASMGTP+56(28),HMASMGTP+56                         0213
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE TST GTP                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0214
*   GTPRCDLN(3)=LENGTH(TSTRCRD);    /* RECORD LENGTH                 */
         LA    @15,16                                              0214
         STH   @15,GTPRCDLN+56                                     0214
*   GTPKEYLN(3)=LENGTH(TSTRCRD);    /* KEY LENGTH                    */
         STH   @15,GTPKEYLN+56                                     0215
*   GTPBUFAD(3)=ADDR(TSTRCRD);      /* BUFFER ADDRESS                */
         LA    @15,TSTRCRD                                         0216
         ST    @15,GTPBUFAD+56                                     0216
*   GTPPSIZE(3)=GTP512B;            /* PAGE SIZE                     */
         NI    GTPPSIZE+56,B'11111001'                             0217
         OI    GTPPSIZE+56,B'00000001'                             0217
*                                                                  0218
*   /*****************************************************************/
*   /*                                                               */
*   /* GO THRU THE ICT PTF SECTION                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0218
*   RESPECIFY                                                      0218
*     ICTPTF BASED(CCAICPTF);       /* ADDRESS ENTIRE PTF SECTION    */
*   DO I=1 BY 1 WHILE ICTPEND(I)^=ICTENDNT/* NOT AT END              */
*         &HIGHDLE<STOPFUNC;        /* NO TERMINATING ERRORS         */
         LA    I,1                                                 0219
         B     @DE00219                                            0219
@DL00219 DS    0H                                                  0220
*     IF ICTPNOGO(I)=OFF            /* SYSMOD NOT NOGO               */
*         &ICTPGELM(I)=OFF          /* SYSMOD NOT ELIMINATED         */
*       THEN                                                       0220
         LR    @03,I                                               0220
         MH    @03,@CH02104                                        0220
         L     @15,CCAICPTF(,CCAPTR)                               0220
         ST    @03,@TF00001                                        0220
         ALR   @03,@15                                             0220
         AL    @03,@CF02118                                        0220
         TM    ICTPNOGO-8(@03),B'01000000'                         0220
         BNZ   @RF00220                                            0220
         LR    @03,@15                                             0220
         AL    @03,@TF00001                                        0220
         AL    @03,@CF02119                                        0220
         TM    ICTPGELM-13(@03),B'00001000'                        0220
         BNZ   @RF00220                                            0220
*       DO;                                                        0221
*                                                                  0221
*         /***********************************************************/
*         /*                                                         */
*         /* PROCESS ELEMENTS IN ONE NON-NOGO SYSMOD                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0222
*         RESPECIFY                                                0222
*           ICTIXPF BASED(ICTPCHN(I));/* ADDRESS LIST OF PTRS TO MOD
*                                      SECT ENTRIES FOR THIS SYSMOD  */
*         CPTF=ADDR(ICTPTF(I));     /* SAVE ADDR. OF PTF SECT ENTRY  */
         L     @03,@TF00001                                        0223
         AL    @15,@CF02120                                        0223
         LA    @03,ICTPTF(@03,@15)                                 0223
         ST    @03,CPTF                                            0223
*         SYSMODRC=0;               /* CLEAR RETURN CODE FOR THIS  0224
*                                      SYSMOD                        */
         SLR   @03,@03                                             0224
         ST    @03,SYSMODRC                                        0224
*         SBKUPD=OFF;               /* SCDS BACKUP ENTRY NOT CREATED
*                                      OR UPDATED FOR THIS SYSMOD    */
*         PTFENT=OFF;               /* NO ELEMENTS PROCESSED         */
         NI    SBKUPD,B'00111111'                                  0226
*         IF CCAAPPLY=ON            /* APPLY                         */
*             ×CCAACCPT=ON          /* ACCEPT                        */
*           THEN                                                   0227
         TM    CCAAPPLY(CCAPTR),B'01100000'                        0227
         BZ    @RF00227                                            0227
*           CALL MDLPCHK;           /* DETERMINE THE SETTING OF    0228
*                                      ICTPMDLP FOR THIS SYSMOD      */
*                                                                  0228
         BAL   @14,MDLPCHK                                         0228
*         /***********************************************************/
*         /*                                                         */
*         /* GO THRU MOD SECTION ENTIRES FOR ONE SYSMOD              */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0229
*         DO K=1 BY 1 WHILE ICTIXP(K)^=ICTENDIX/* NOT AT END         */
*               &SYSMODRC<STOPPTF;  /* SYSMOD NOT TERMINATED         */
@RF00227 LA    K,1                                                 0229
         B     @DE00229                                            0229
@DL00229 DS    0H                                                  0230
*           RESPECIFY                                              0230
*             ICTMOD BASED(ICTIXP(K));/* ADDRESS MOD SECT ENTRY      */
*           IF(ICTMTSEL(1)=ON       /* ELEMENT SELECTED DURING     0231
*                                      ELEMENT SELECTION PROCESSING  */
*               ×ICTMISEL(1)=ON)    /* ELEMENT SELECTED              */
*               &ICTMIDEL(1)=ON     /* ... FOR DELETION              */
*             THEN                                                 0231
         LR    @15,K                                               0231
         SLA   @15,2                                               0231
         LR    @14,I                                               0231
         MH    @14,@CH02104                                        0231
         L     @09,CCAICPTF(,CCAPTR)                               0231
         LA    @01,0(@14,@09)                                      0231
         AL    @01,@CF02121                                        0231
         L     @01,ICTPCHN-64(,@01)                                0231
         AL    @01,@CF02122                                        0231
         L     @15,ICTIXP(@15,@01)                                 0231
         TM    ICTMTSEL(@15),B'10000010'                           0231
         BZ    @RF00231                                            0231
         TM    ICTMIDEL(@15),B'01000000'                           0231
         BNO   @RF00231                                            0231
*             DO;                                                  0232
*                                                                  0232
*               /*****************************************************/
*               /*                                                   */
*               /* PROCESS DELETED ELEMENT                           */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0233
*               CALL PTFENTRY(ICTPTF(I),/* CREATE (A)CDS PTF ENTRY   */
*                   SYSMODRC);      /* RETURN CODE PARAMETER         */
         AL    @09,@CF02120                                        0233
         LA    @15,ICTPTF(@14,@09)                                 0233
         ST    @15,@AL00001                                        0233
         LA    @15,SYSMODRC                                        0233
         ST    @15,@AL00001+4                                      0233
         LA    @01,@AL00001                                        0233
         BAL   @14,PTFENTRY                                        0233
*               IF ICTMMACR(1)=ON   /* MACRO                         */
*                   ×ICTMSRCR(1)=ON /* SOURCE                        */
*                 THEN                                             0234
         LR    @15,K                                               0234
         SLA   @15,2                                               0234
         LR    @14,I                                               0234
         MH    @14,@CH02104                                        0234
         L     @01,CCAICPTF(,CCAPTR)                               0234
         AL    @01,@CF02121                                        0234
         L     @01,ICTPCHN-64(@14,@01)                             0234
         AL    @01,@CF02122                                        0234
         L     @15,ICTIXP(@15,@01)                                 0234
         TM    ICTMMACR(@15),B'00001010'                           0234
         BZ    @RF00234                                            0234
*                 CALL SRCMAC(ICTMOD(1),/* PROCESS MACRO OR SRC      */
*                     SYSMODRC);    /* RETURN CODE                   */
         ST    @15,@AL00001                                        0235
         LA    @15,SYSMODRC                                        0235
         ST    @15,@AL00001+4                                      0235
         LA    @01,@AL00001                                        0235
         BAL   @14,SRCMAC                                          0235
*               ELSE                                               0236
*                 IF ICTMMOD(1)=ON  /* MODULE                        */
*                   THEN                                           0236
         B     @RC00234                                            0236
@RF00234 LR    @15,K                                               0236
         SLA   @15,2                                               0236
         LR    @14,I                                               0236
         MH    @14,@CH02104                                        0236
         L     @01,CCAICPTF(,CCAPTR)                               0236
         AL    @01,@CF02121                                        0236
         L     @01,ICTPCHN-64(@14,@01)                             0236
         AL    @01,@CF02122                                        0236
         L     @15,ICTIXP(@15,@01)                                 0236
         TM    ICTMMOD(@15),B'10000000'                            0236
         BNO   @RF00236                                            0236
*                   CALL MOD(ICTMOD(1),/* PROCESS MOD                */
*                       SYSMODRC);  /* RETURN CODE                   */
         ST    @15,@AL00001                                        0237
         LA    @15,SYSMODRC                                        0237
         ST    @15,@AL00001+4                                      0237
         LA    @01,@AL00001                                        0237
         BAL   @14,MOD                                             0237
*             END;                                                 0238
@RF00236 DS    0H                                                  0238
@RC00234 DS    0H                                                  0239
*         END;                      /* END LOOP THRU MOD SECT ENTRIES*/
*                                                                  0239
@RF00231 AH    K,@CH00085                                          0239
@DE00229 LR    @15,K                                               0239
         SLA   @15,2                                               0239
         LR    @14,I                                               0239
         MH    @14,@CH02104                                        0239
         L     @01,CCAICPTF(,CCAPTR)                               0239
         AL    @01,@CF02121                                        0239
         L     @01,ICTPCHN-64(@14,@01)                             0239
         AL    @01,@CF02122                                        0239
         L     @15,ICTIXP(@15,@01)                                 0239
         CL    @15,ICTENDIX                                        0239
         BE    @DC00229                                            0239
         L     @15,SYSMODRC                                        0239
         CH    @15,@CH00110                                        0239
         BL    @DL00229                                            0239
@DC00229 DS    0H                                                  0240
*         /***********************************************************/
*         /*                                                         */
*         /* DELETE APPROPRIATE LMODS                                */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0240
*         IF CCAAPPLY=ON            /* APPLY                         */
*             ×CCARES=ON            /* RESTORE                       */
*           THEN                                                   0240
         TM    CCAAPPLY(CCAPTR),B'01001000'                        0240
         BZ    @RF00240                                            0240
*           CALL DELLMODS(SYSMODRC);/* DELETE LMODS                  */
*                                                                  0241
         LA    @01,@AL00241                                        0241
         BAL   @14,DELLMODS                                        0241
*         /***********************************************************/
*         /*                                                         */
*         /* ALL ELEMENTS FROM ONE SYSMOD PROCESSED                  */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0242
*         ICTPDCPL(I)=ON;           /* DELETE PROC. COMPLETE FOR SMD.*/
@RF00240 LR    @03,I                                               0242
         MH    @03,@CH02104                                        0242
         L     @15,CCAICPTF(,CCAPTR)                               0242
         ST    @03,@TF00001                                        0242
         ALR   @03,@15                                             0242
         AL    @03,@CF02123                                        0242
         OI    ICTPDCPL-14(@03),B'00100000'                        0242
*         IF SBKUPD=ON              /* SYSMOD ENTRY CREATED/UPDATED
*                                      ON SCDS                       */
*           THEN                                                   0243
         TM    SBKUPD,B'10000000'                                  0243
         BNO   @RF00243                                            0243
*           DO;                                                    0244
*                                                                  0244
*             /*******************************************************/
*             /*                                                     */
*             /* STOW THE SCDS SYSMOD BACKUP ENTRY                   */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0245
*             BUPFUNCT=BUPSTOW;     /* STOW SYSMOD ENTRY ON SCDS     */
         MVI   BUPFUNCT,X'03'                                      0245
*             BUPSYSMD=ICTPTFS(I);  /* SYSMOD-ID                     */
         LR    @03,@15                                             0246
         AL    @03,@TF00001                                        0246
         AL    @03,@CF02120                                        0246
         MVC   BUPSYSMD(7),ICTPTFS(@03)                            0246
*             BUPSTYPE=ICTPTYPE(I); /* SYSMOD TYPE                   */
         L     @03,@TF00001                                        0247
         AL    @15,@CF02125                                        0247
         SLR   @14,@14                                             0247
         IC    @14,ICTPTYPE-17(@03,@15)                            0247
         STC   @14,BUPSTYPE                                        0247
*             CALL HMASMBUE(BUPPARM);/* STOW THE SYSMOD ENTRY        */
         L     @15,@CV01851                                        0248
         LA    @01,@AL00248                                        0248
         BALR  @14,@15                                             0248
*             RESPECIFY                                            0249
*               REG15 RSTD;                                        0249
*             SYSMODRC=MAX(SYSMODRC,REG15);/* MAINTAIN RETURN CODE   */
         L     @14,SYSMODRC                                        0250
         CR    @14,REG15                                           0250
         BNL   *+6
         LR    @14,REG15                                           0250
         ST    @14,SYSMODRC                                        0250
*             RESPECIFY                                            0251
*               REG15 UNRSTD;                                      0251
*           END;                                                   0252
*         HIGHDLE=MAX(HIGHDLE,SYSMODRC);/* MAINTAIN RETURN CODE      */
@RF00243 L     @03,SYSMODRC                                        0253
         CR    HIGHDLE,@03                                         0253
         BNL   *+6
         LR    HIGHDLE,@03                                         0253
*         IF PTFENT=ON              /* PTF ENTRY CREATED             */
*           THEN                                                   0254
         TM    PTFENT,B'01000000'                                  0254
         BNO   @RF00254                                            0254
*           DO;                                                    0255
*                                                                  0255
*             /*******************************************************/
*             /*                                                     */
*             /* GO TO THE COMPLETION PROCESSOR WITH THE RESULTS OF  */
*             /* DELETE PROCESSING FOR THIS SYSMOD                   */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0256
*             IF SYSMODRC<STOPPTF   /* SYSMOD NOT TERMINATED         */
*               THEN                                               0256
         CH    @03,@CH00110                                        0256
         BNL   @RF00256                                            0256
*               SYSMCPL=GOOD;                                      0257
         MVI   SYSMCPL,C'G'                                        0257
*             ELSE                                                 0258
*               SYSMCPL=DLEBAD;                                    0258
         B     @RC00256                                            0258
@RF00256 MVI   SYSMCPL,C'D'                                        0258
*             CALL HMASMCPL(SYSMCPL);                              0259
@RC00256 L     @15,@CV01852                                        0259
         LA    @01,@AL00259                                        0259
         BALR  @14,@15                                             0259
*             RESPECIFY                                            0260
*               REG15 RSTD;                                        0260
*             HIGHDLE=MAX(HIGHDLE,REG15);/* MAINTAIN RETURN CODE     */
         CR    HIGHDLE,REG15                                       0261
         BNL   *+6
         LR    HIGHDLE,REG15                                       0261
*             RESPECIFY                                            0262
*               REG15 UNRSTD;                                      0262
*           END;                                                   0263
*       END;                        /* END NON-NOGO SYSMOD           */
@RF00254 DS    0H                                                  0265
*   END;                            /* END LOOP THRU ICT PTF SECTION */
@RF00220 AH    I,@CH00085                                          0265
@DE00219 LR    @03,I                                               0265
         MH    @03,@CH02104                                        0265
         L     @01,CCAICPTF(,CCAPTR)                               0265
         AL    @01,@CF02120                                        0265
         L     @03,ICTPEND(@03,@01)                                0265
         CL    @03,ICTENDNT                                        0265
         BE    @DC00219                                            0265
         CH    HIGHDLE,@CH00032                                    0265
         BL    @DL00219                                            0265
@DC00219 DS    0H                                                  0266
*                                                                  0266
*   /*****************************************************************/
*   /*                                                               */
*   /* SET THE DELETE PROCESSING COMPLETE FLAG IN ALL REMAINING      */
*   /* SYSMODS IN THE ICT PTF SECTION AND CALL HMASMCPL              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0266
*   RESPECIFY                                                      0266
*     ICTPTF BASED(CCAICPTF);       /* ADDRESS ENTIRE PTF SECTION    */
*   DO J=1 BY 1 WHILE ICTPEND(J)^=ICTENDNT;                        0267
         LA    J,1                                                 0267
         B     @DE00267                                            0267
@DL00267 DS    0H                                                  0268
*     ICTPDCPL(J)=ON;               /* DELETE PROCESSING COMPLETE    */
         LR    @04,J                                               0268
         MH    @04,@CH02104                                        0268
         L     @03,CCAICPTF(,CCAPTR)                               0268
         ALR   @03,@04                                             0268
         AL    @03,@CF02123                                        0268
         OI    ICTPDCPL-14(@03),B'00100000'                        0268
*   END;                                                           0269
         AH    J,@CH00085                                          0269
@DE00267 LR    @04,J                                               0269
         MH    @04,@CH02104                                        0269
         L     @03,CCAICPTF(,CCAPTR)                               0269
         AL    @03,@CF02120                                        0269
         L     @04,ICTPEND(@04,@03)                                0269
         CL    @04,ICTENDNT                                        0269
         BNE   @DL00267                                            0269
*   SYSMCPL=GOOD;                                                  0270
         MVI   SYSMCPL,C'G'                                        0270
*   CALL HMASMCPL(SYSMCPL);                                        0271
*                                                                  0271
         L     @15,@CV01852                                        0271
         LA    @01,@AL00271                                        0271
         BALR  @14,@15                                             0271
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE TST GTA FILE                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0272
*   GTPFUNCT(3)=GTPFREE;            /* FREE TST GTA FILE             */
         MVI   GTPFUNCT+56,X'0A'                                   0272
*   CALL HMASMGTA(HMASMGTP(3));                                    0273
         L     @15,@CV01853                                        0273
         LA    @01,@AL00273                                        0273
         BALR  @14,@15                                             0273
*   RETURN CODE(HIGHDLE);                                          0274
         LR    @15,HIGHDLE                                         0274
         L     @13,4(,@13)                                         0274
         L     @14,12(,@13)                                        0274
         LM    @00,@12,20(@13)                                     0274
         BR    @14                                                 0274
*                                                                  0275
*/********************************************************************/
*/*                                                                  */
*/* SRCMAC  - PROCESS DELETED SRC AND MAC ENTRIES                    */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0275
*SRCMAC:                                                           0275
*   PROC(SRCMACE,SRCMACRC);                                        0275
SRCMAC   STM   @14,@12,@SA00002                                    0275
         MVC   @PC00002(8),0(@01)                                  0275
*   DCL                                                            0276
*     SRCMACE CHAR(*);              /* SRC OR MAC ICT MOD SECT ENTRY */
*   DCL                                                            0277
*     SRCMACRC FIXED(31);           /* RETURN CODE PARAMETER         */
*   DCL                                                            0278
*     SRCMACTP FIXED(8);            /* ELEMENT TYPE (IOPMAC/IOPSRC)  */
*   DCL                                                            0279
*     MM FIXED(15);                 /* INDEX - ALIAS LISTS           */
*   RESPECIFY                                                      0280
*     ICTMOD BASED(ADDR(SRCMACE));  /* ADDRESS ENTRY PASSED          */
*   IF ICTMISEL(1)=ON               /* ELEMENT SELECTED FOR DELETION */
*     THEN                                                         0281
         L     @05,@PC00002                                        0281
         TM    ICTMISEL(@05),B'10000000'                           0281
         BNO   @RF00281                                            0281
*     ICTMPROC(1)=ON;               /* MARK ELEMENT "IN-PROCESS"     */
         OI    ICTMPROC(@05),B'10000000'                           0282
*   IF ICTMMACR(1)=ON THEN          /* SET ELEMENT TYPE:             */
@RF00281 L     @05,@PC00002                                        0283
         TM    ICTMMACR(@05),B'00001000'                           0283
         BNO   @RF00283                                            0283
*     SRCMACTP=IOPMAC;              /* ... MACRO ELEMENT             */
         MVI   SRCMACTP,X'03'                                      0284
*   ELSE                                                           0285
*     SRCMACTP=IOPSRC;              /* ... SRC ELEMENT               */
         B     @RC00283                                            0285
@RF00283 MVI   SRCMACTP,X'08'                                      0285
*   IF CCAAPPLY=ON                  /* APPLY PROCESSING              */
*       &ICTMISEL(1)=ON             /* ELEMENT SELECTED FOR DELETION */
*       &ICTPPTR(1)->ICTPDEXP(1)=OFF/* OWNING SYSMOD NOT DELETED     */
*       &ICTPPTR(1)->ICTPDIMP(1)=OFF/* OWNING SYSMOD NOT DELETED     */
*       &SRCMACRC<STOPPTF           /* NOT TERMINATING               */
*     THEN                                                         0286
@RC00283 TM    CCAAPPLY(CCAPTR),B'01000000'                        0286
         BNO   @RF00286                                            0286
         L     @05,@PC00002                                        0286
         TM    ICTMISEL(@05),B'10000000'                           0286
         BNO   @RF00286                                            0286
         L     @01,ICTPPTR(,@05)                                   0286
         TM    ICTPDEXP(@01),B'00110000'                           0286
         BNZ   @RF00286                                            0286
         L     @15,@PC00002+4                                      0286
         L     @14,SRCMACRC(,@15)                                  0286
         CH    @14,@CH00110                                        0286
         BNL   @RF00286                                            0286
*     DO;                                                          0287
*                                                                  0287
*       /*************************************************************/
*       /*                                                           */
*       /* ACCESS CDS ELEMENT ENTRY FOR SRC OR MAC                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0288
*       CALL CDSELEM(ICTMOD(1),     /* ACCESS ENTRY ON CDS           */
*           SRCMACRC);              /* RETURN CODE PARAMETER         */
         ST    @05,@AL00001                                        0288
         ST    @15,@AL00001+4                                      0288
         LA    @01,@AL00001                                        0288
         BAL   @14,CDSELEM                                         0288
*       IF IOPRETRN=IOPGOOD         /* CDS ENTRY ACCESSED            */
*         THEN                                                     0289
*                                                                  0289
         L     @05,IOPPTR                                          0289
         CLI   IOPRETRN(@05),0                                     0289
         BNE   @RF00289                                            0289
*         /***********************************************************/
*         /*                                                         */
*         /* BACKUP CDS ELEMENT ENTRY ON SCDS DATASET                */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0290
*         CALL BACKUP(SRCMACRC);    /* CREATE BACKUP ENTRY ASSOCIATED
*                                      WITH CURRENT SYSMOD           */
         L     @05,@PC00002+4                                      0290
         ST    @05,@AL00001                                        0290
         LA    @01,@AL00001                                        0290
         BAL   @14,BACKUP                                          0290
*     END;                                                         0291
@RF00289 DS    0H                                                  0292
*                                                                  0292
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE ELEMENT FROM TARGET SYSTEM                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0292
*   IF SRCMACRC<STOPPTF             /* SUCCESSFULLY BACKED UP        */
*       &ICTMISEL(1)=ON             /* ELEMENT SELECTED FOR DELETION */
*     THEN                                                         0292
@RF00286 L     @05,@PC00002+4                                      0292
         L     @15,SRCMACRC(,@05)                                  0292
         CH    @15,@CH00110                                        0292
         BNL   @RF00292                                            0292
         L     @15,@PC00002                                        0292
         TM    ICTMISEL(@15),B'10000000'                           0292
         BNO   @RF00292                                            0292
*     DO;                                                          0293
*       TARGETDD=ICTTOLIB(1);       /* TARGET SYSTEM LIBRARY         */
         MVC   TARGETDD(8),ICTTOLIB(@15)                           0294
*       CALL DELMEMBR(ICTMNAME(1),  /* MEMBER NAME TO BE DELETED     */
*           SRCMACTP,               /* ELEMENT TYPE (IOPMAC/IOPSRC)  */
*           TARGETDD,               /* TARGET SYS LIBRARY (DDNAME)   */
*           SRCMACRC);              /* RETURN CODE PARAMETER         */
         ST    @15,@AL00001                                        0295
         LA    @15,SRCMACTP                                        0295
         ST    @15,@AL00001+4                                      0295
         LA    @15,TARGETDD                                        0295
         ST    @15,@AL00001+8                                      0295
         ST    @05,@AL00001+12                                     0295
         LA    @01,@AL00001                                        0295
         BAL   @14,DELMEMBR                                        0295
*     END;                                                         0296
*                                                                  0296
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE ELEMENT'S ALIASES FROM TARGET SYSTEM ... THIS IS DONE  */
*   /* FOR ELEMENTS WHICH ARE ACTUALLY BEING DELETED (ICTMISEL=ON)   */
*   /* AND FOR ELEMENTS WHICH WERE AT ONE TIME SELECTED FOR DELETION */
*   /* (ICTMTSEL=ON)                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0297
*   RESPECIFY                                                      0297
*     ICTTALLS BASED(ICTMTCHN(1));  /* ADDRESS ALIAS LIST FOR ELEMENT*/
@RF00292 DS    0H                                                  0298
*   IF SRCMACRC<STOPPTF             /* BACKUP WAS SUCCESSFUL         */
*     THEN                                                         0298
         L     @05,@PC00002+4                                      0298
         L     @05,SRCMACRC(,@05)                                  0298
         CH    @05,@CH00110                                        0298
         BNL   @RF00298                                            0298
*     DO;                                                          0299
*                                                                  0299
*       /*************************************************************/
*       /*                                                           */
*       /* GO THRU ELEMENT''S ALIAS LIST                             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0300
*       DO MM=1 BY 1 WHILE ICTTALND(MM)^=ICTENDIX;                 0300
         LA    MM,1                                                0300
         B     @DE00300                                            0300
@DL00300 DS    0H                                                  0301
*         CALL DELMEMBR(ICTTALNM(MM),/* MEMBER NAME TO BE DELETED    */
*             SRCMACTP,             /* ELEMENT TYPE (IOPMAC/IOPSRC)  */
*             TARGETDD,             /* TARGET SYS LIBRARY (DDNAME)   */
*             SRCMACRC);            /* RETURN CODE PARAMETER         */
         LR    @05,MM                                              0301
         SLA   @05,3                                               0301
         L     @03,@PC00002                                        0301
         L     @03,ICTMTCHN(,@03)                                  0301
         AL    @03,@CF02127                                        0301
         LA    @05,ICTTALNM(@05,@03)                               0301
         ST    @05,@AL00001                                        0301
         LA    @05,SRCMACTP                                        0301
         ST    @05,@AL00001+4                                      0301
         LA    @05,TARGETDD                                        0301
         ST    @05,@AL00001+8                                      0301
         L     @05,@PC00002+4                                      0301
         ST    @05,@AL00001+12                                     0301
         LA    @01,@AL00001                                        0301
         BAL   @14,DELMEMBR                                        0301
*       END;                                                       0302
         AH    MM,@CH00085                                         0302
@DE00300 LR    @05,MM                                              0302
         SLA   @05,3                                               0302
         L     @03,@PC00002                                        0302
         L     @03,ICTMTCHN(,@03)                                  0302
         AL    @03,@CF02127                                        0302
         L     @05,ICTTALND(@05,@03)                               0302
         CL    @05,ICTENDIX                                        0302
         BNE   @DL00300                                            0302
*     END;                                                         0303
*                                                                  0303
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE ELEMENT ENTRY FROM (A)CDS                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0304
*   IF SRCMACRC<STOPPTF             /* BACKUP WAS SUCCESSFUL         */
*       &ICTMISEL(1)=ON             /* ELEMENT SELECTED FOR DELETION */
*     THEN                                                         0304
@RF00298 L     @05,@PC00002+4                                      0304
         L     @15,SRCMACRC(,@05)                                  0304
         CH    @15,@CH00110                                        0304
         BNL   @RF00304                                            0304
         L     @15,@PC00002                                        0304
         TM    ICTMISEL(@15),B'10000000'                           0304
         BNO   @RF00304                                            0304
*     CALL DELENTRY(ICTMOD(1),      /* ENTRY TO DELETE FROM (A)CDS   */
*         SRCMACRC);                /* RETURN CODE PARAMETER         */
         ST    @15,@AL00001                                        0305
         ST    @05,@AL00001+4                                      0305
         LA    @01,@AL00001                                        0305
         BAL   @14,DELENTRY                                        0305
*   RETURN;                                                        0306
@EL00002 DS    0H                                                  0306
@EF00002 DS    0H                                                  0306
@ER00002 LM    @14,@12,@SA00002                                    0306
         BR    @14                                                 0306
*   END SRCMAC;                                                    0307
         B     @EL00002                                            0307
*                                                                  0308
*/********************************************************************/
*/*                                                                  */
*/* MOD     - PROCESS DELETED MODULE ENTRIES                         */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0308
*MOD:                                                              0308
*   PROC(MODICTE,MODRC);                                           0308
MOD      STM   @14,@12,@SA00003                                    0308
         MVC   @PC00003(8),0(@01)                                  0308
*   DCL                                                            0309
*     MODICTE CHAR(*);              /* ICT MOD SECTION ENTRY         */
*   DCL                                                            0310
*     MODRC FIXED(31);              /* RETURN CODE PARAMETER         */
*   DCL                                                            0311
*     KK FIXED(15);                 /* INDEX - ALIAS LISTS           */
*   RESPECIFY                                                      0312
*     ICTMOD BASED(ADDR(MODICTE));  /* ADDRESS ENTRY PASSED          */
*   ICTMPROC(1)=ON;                 /* MARK ELEMENT "IN-PROCESS"     */
         L     @05,@PC00003                                        0313
         OI    ICTMPROC(@05),B'10000000'                           0313
*   IF CCAACCPT=ON                  /* ACCEPT PROCESSING             */
*       &ICTMISEL(1)=ON             /* ELEMENT SELECTED FOR DELETION */
*       &MODRC<STOPPTF              /* NOT TERMINATING               */
*     THEN                                                         0314
         TM    CCAACCPT(CCAPTR),B'00100000'                        0314
         BNO   @RF00314                                            0314
         TM    ICTMISEL(@05),B'10000000'                           0314
         BNO   @RF00314                                            0314
         L     @15,@PC00003+4                                      0314
         L     @14,MODRC(,@15)                                     0314
         CH    @14,@CH00110                                        0314
         BNL   @RF00314                                            0314
*     DO;                                                          0315
*                                                                  0315
*       /*************************************************************/
*       /*                                                           */
*       /* ACCEPT PROCESSING FOR MODULE ELEMENT                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0316
*                                                                  0316
*       /*************************************************************/
*       /*                                                           */
*       /* DELETE ELEMENT FROM TARGET DISTRIBUTION LIB               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0316
*       TARGETDD=ICTMDSTL(1);       /* DELETE FROM DISTLIB FOR ACCEPT*/
         MVC   TARGETDD(8),ICTMDSTL(@05)                           0316
*       CALL DELMEMBR(ICTMNAME(1),  /* MEMBER NAME TO BE DELETED     */
*           IOPMOD,                 /* ELEMENT TYPE                  */
*           TARGETDD,               /* TARGET DISTLIB (DDNAME)       */
*           MODRC);                 /* RETURN CODE PARAMETER         */
*                                                                  0317
         ST    @05,@AL00001                                        0317
         LA    @05,@CH00128+1                                      0317
         ST    @05,@AL00001+4                                      0317
         LA    @05,TARGETDD                                        0317
         ST    @05,@AL00001+8                                      0317
         ST    @15,@AL00001+12                                     0317
         LA    @01,@AL00001                                        0317
         BAL   @14,DELMEMBR                                        0317
*       /*************************************************************/
*       /*                                                           */
*       /* DELETE ELEMENT''S ALIASES FROM TARGET SYSTEM              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0318
*       RESPECIFY                                                  0318
*         ICTTALLS BASED(ICTMTCHN(1));/* ADDRESS ALIAS LIST FOR    0318
*                                      ELEMENT                       */
*       DO KK=1 BY 1 WHILE ICTTALND(KK)^=ICTENDIX;                 0319
         LA    KK,1                                                0319
         B     @DE00319                                            0319
@DL00319 DS    0H                                                  0320
*         CALL DELMEMBR(ICTTALNM(KK),/* MEMBER NAME TO BE DELETED    */
*             IOPMOD,               /* ELEMENT TYPE                  */
*             TARGETDD,             /* TARGET DISTLIB (DDNAME)       */
*             MODRC);               /* RETURN CODE PARAMETER         */
         LR    @05,KK                                              0320
         SLA   @05,3                                               0320
         L     @03,@PC00003                                        0320
         L     @03,ICTMTCHN(,@03)                                  0320
         AL    @03,@CF02127                                        0320
         LA    @05,ICTTALNM(@05,@03)                               0320
         ST    @05,@AL00001                                        0320
         LA    @05,@CH00128+1                                      0320
         ST    @05,@AL00001+4                                      0320
         LA    @05,TARGETDD                                        0320
         ST    @05,@AL00001+8                                      0320
         L     @05,@PC00003+4                                      0320
         ST    @05,@AL00001+12                                     0320
         LA    @01,@AL00001                                        0320
         BAL   @14,DELMEMBR                                        0320
*       END;                                                       0321
*                                                                  0321
         AH    KK,@CH00085                                         0321
@DE00319 LR    @05,KK                                              0321
         SLA   @05,3                                               0321
         L     @03,@PC00003                                        0321
         L     @01,ICTMTCHN(,@03)                                  0321
         AL    @01,@CF02127                                        0321
         L     @05,ICTTALND(@05,@01)                               0321
         CL    @05,ICTENDIX                                        0321
         BNE   @DL00319                                            0321
*       /*************************************************************/
*       /*                                                           */
*       /* DELETE ELEMENT ENTRY FROM ACDS                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0322
*       CALL DELENTRY(ICTMOD(1),    /* ENTRY TO DELETE FROM ACDS     */
*           MODRC);                 /* RETURN CODE PARAMETER         */
         ST    @03,@AL00001                                        0322
         L     @05,@PC00003+4                                      0322
         ST    @05,@AL00001+4                                      0322
         LA    @01,@AL00001                                        0322
         BAL   @14,DELENTRY                                        0322
*     END;                          /* END PROCESSING FOR ACCEPT     */
*   IF(CCAAPPLY=ON                  /* APPLY PROCESSING              */
*       ×CCARES=ON)                 /* RESTORE PROCESSING            */
*       &ICTMISEL(1)=ON             /* ELEMENT SELECTED FOR DELETION */
*       &MODRC<STOPPTF              /* NOT TERMINATING               */
*     THEN                                                         0324
@RF00314 TM    CCAAPPLY(CCAPTR),B'01001000'                        0324
         BZ    @RF00324                                            0324
         L     @05,@PC00003                                        0324
         TM    ICTMISEL(@05),B'10000000'                           0324
         BNO   @RF00324                                            0324
         L     @15,@PC00003+4                                      0324
         L     @14,MODRC(,@15)                                     0324
         CH    @14,@CH00110                                        0324
         BNL   @RF00324                                            0324
*     DO;                                                          0325
*                                                                  0325
*       /*************************************************************/
*       /*                                                           */
*       /* APPLY OR RESTORE PROCESSING FOR MODS AND ASSEMBLIES       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0326
*                                                                  0326
*       /*************************************************************/
*       /*                                                           */
*       /* ACCESS CDS MOD ENTRY FOR MODULE OR ASSEMBLY BEING DELETED */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0326
*       CALL CDSELEM(ICTMOD(1),     /* ACCESS CDS ELEMENT ENTRY      */
*           MODRC);                 /* RETURN CODE PARAMETER         */
         ST    @05,@AL00001                                        0326
         ST    @15,@AL00001+4                                      0326
         LA    @01,@AL00001                                        0326
         BAL   @14,CDSELEM                                         0326
*       IF ICTPPTR(1)->ICTPDEXP(1)=OFF/* NOT FROM DELETED SYSMOD     */
*           &ICTPPTR(1)->ICTPDIMP(1)=OFF/* NOT FROM DELETED SYSMOD   */
*           &CCARES=OFF             /* NOT RESTORE (I.E., APPLY)     */
*           &IOPRETRN=IOPGOOD       /* ENTRY FOUND ON CDS            */
*         THEN                                                     0327
*                                                                  0327
         L     @05,@PC00003                                        0327
         L     @05,ICTPPTR(,@05)                                   0327
         TM    ICTPDEXP(@05),B'00110000'                           0327
         BNZ   @RF00327                                            0327
         TM    CCARES(CCAPTR),B'00001000'                          0327
         BNZ   @RF00327                                            0327
         L     @05,IOPPTR                                          0327
         CLI   IOPRETRN(@05),0                                     0327
         BNE   @RF00327                                            0327
*         /***********************************************************/
*         /*                                                         */
*         /* BACKUP CDS ENTRY FOR MODULE ON SCDS (APPLY)             */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0328
*         CALL BACKUP(MODRC);       /* CREATE BACKUP ENTRY ASSOCIATED
*                                      WITH CURRENT SYSMOD           */
*                                                                  0328
         L     @05,@PC00003+4                                      0328
         ST    @05,@AL00001                                        0328
         LA    @01,@AL00001                                        0328
         BAL   @14,BACKUP                                          0328
*       /*************************************************************/
*       /*                                                           */
*       /* PUT LMODS FOR THIS MOD ENTRY IN SELECT-LIST GTA FILE      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0329
*       IF MODRC<STOPPTF            /* BACKUP SUCCESSFUL             */
*         THEN                                                     0329
@RF00327 L     @05,@PC00003+4                                      0329
         L     @15,MODRC(,@05)                                     0329
         CH    @15,@CH00110                                        0329
         BNL   @RF00329                                            0329
*         CALL XRFSEL(MODRC);       /* PUT LMODS IN SELECT-LIST      */
         ST    @05,@AL00001                                        0330
         LA    @01,@AL00001                                        0330
         BAL   @14,XRFSEL                                          0330
*                                                                  0331
*       /*************************************************************/
*       /*                                                           */
*       /* DELETE MOD ENTRY FROM THE CDS                             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0331
*       IF CCARES=ON                /* RESTORE PROCESSING            */
*         THEN                                                     0331
@RF00329 TM    CCARES(CCAPTR),B'00001000'                          0331
         BNO   @RF00331                                            0331
*         CALL SRCHPTF(IOPBUSMD,    /* SYSMOD CAUSING BACKUP         */
*             PPARM);               /* PTR TO PTF ENTRY IN ICT       */
         L     @05,IOPPTR                                          0332
         LA    @05,IOPBUSMD(,@05)                                  0332
         ST    @05,@AL00001                                        0332
         LA    @05,PPARM                                           0332
         ST    @05,@AL00001+4                                      0332
         LA    @01,@AL00001                                        0332
         BAL   @14,SRCHPTF                                         0332
*       IF MODRC<STOPPTF            /* BACKUP AND LMOD DELETE OK     */
*         THEN                                                     0333
@RF00331 L     @05,@PC00003+4                                      0333
         L     @05,MODRC(,@05)                                     0333
         CH    @05,@CH00110                                        0333
         BNL   @RF00333                                            0333
*         IF CCARES=OFF             /* NOT RESTORE                   */
*             ×(CCARES=ON           /* RESTORE ...                   */
*             &PPARM^=0)            /* CAUSER OF BKUP BEING RESTORED */
*           THEN                                                   0334
         TM    CCARES(CCAPTR),B'00001000'                          0334
         BZ    @RT00334                                            0334
         TM    CCARES(CCAPTR),B'00001000'                          0334
         BNO   @RF00334                                            0334
         ICM   @05,15,PPARM                                        0334
         BZ    @RF00334                                            0334
@RT00334 DS    0H                                                  0335
*           CALL DELENTRY(ICTMOD(1),/* MOD ENTRY TO DELETE FROM CDS  */
*               MODRC);             /* RETURN CODE PARAMETER         */
         L     @05,@PC00003                                        0335
         ST    @05,@AL00001                                        0335
         L     @05,@PC00003+4                                      0335
         ST    @05,@AL00001+4                                      0335
         LA    @01,@AL00001                                        0335
         BAL   @14,DELENTRY                                        0335
*     END;                                                         0336
*   RETURN;                                                        0337
@EL00003 DS    0H                                                  0337
@EF00003 DS    0H                                                  0337
@ER00003 LM    @14,@12,@SA00003                                    0337
         BR    @14                                                 0337
*   END MOD;                                                       0338
         B     @EL00003                                            0338
*                                                                  0339
*/********************************************************************/
*/*                                                                  */
*/*  DELLMODS   - DETERMINE WHETHER ANY OF THE LOAD MODULES          */
*/*               ASSOCIATED WITH DELETED MODULES MAY BE DELETED     */
*/*               FROM THE TARGET SYSTEM (AND THE CDS).              */
*/*                                                                  */
*/*               NOTE - THE SELECT-LIST GTA FILE IS EXPECTED TO     */
*/*               CONTAIN THE NAMES OF ALL LMODS ASSOCIATED WITH     */
*/*               MODULES BEING DELETED.                             */
*/*                                                                  */
*/********************************************************************/
*                                                                  0339
*DELLMODS:                                                         0339
*   PROC(DELLMRC);                                                 0339
DELLMODS STM   @14,@12,@SA00004                                    0339
         MVC   @PC00004(4),0(@01)                                  0339
*   DCL                                                            0340
*     DELLMRC FIXED(31);            /* RETURN CODE PARAMETER         */
*                                                                  0340
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE XREF OUTPUT GTP FOR HMASMXRF                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0341
*   GTPRCDLN(2)=LENGTH(XRFRCD);     /* RECORD LENGTH                 */
         MVC   GTPRCDLN+28(2),@CH00470                             0341
*   GTPBUFAD(2)=ADDR(XRFRCD);       /* RECORD BUFFER ADDRESS         */
*                                                                  0342
         LA    @05,XRFRCD                                          0342
         ST    @05,GTPBUFAD+28                                     0342
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE LISTPARM PASSED TO HMASMXRF                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0343
*   LISTPARM=''B;                   /* CLEAR LISTPARM PASSED TO    0343
*                                      HMASMXRF                      */
         XC    LISTPARM(19),LISTPARM                               0343
*   LISTLMD=ON;                     /* LMOD ENTRIES                  */
         OI    LISTLMD,B'00100000'                                 0344
*   LISTXREF=ON;                    /* XREF FUNCTION                 */
         OI    LISTXREF,B'01000000'                                0345
*   LISTCDS=ON;                     /* ... GET CDS LMODS             */
         OI    LISTCDS,B'01000000'                                 0346
*   LISTSEL=ON;                     /* ... USE SELECT LIST PASSED    */
*                                                                  0347
         OI    LISTSEL,B'10000000'                                 0347
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD LMOD-TO-MOD XREF GTA FILE                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0348
*   IF DELLMRC<STOPPTF              /* NO TERMINATING ERRORS         */
*     THEN                                                         0348
         L     @05,@PC00004                                        0348
         L     @05,DELLMRC(,@05)                                   0348
         CH    @05,@CH00110                                        0348
         BNL   @RF00348                                            0348
*     DO;                                                          0349
*       CALL HMASMXRF(LISTPARM,     /* LIST PARM LIST                */
*           HMASMGTP(2),            /* GTP FOR OUTPUT GTA FILE       */
*           HMASMGTP(1));           /* GTP FOR SET GTA FILE          */
         L     @15,@CV01857                                        0350
         LA    @01,@AL00350                                        0350
         BALR  @14,@15                                             0350
*       RESPECIFY                                                  0351
*         REG15 RSTD;                                              0351
*       IF REG15>=STOPPTF           /* TERMINATING ERROR             */
*         THEN                                                     0352
         CH    REG15,@CH00110                                      0352
         BL    @RF00352                                            0352
*         DELLMRC=MAX(DELLMRC,REG15);                              0353
         L     @14,@PC00004                                        0353
         L     @05,DELLMRC(,@14)                                   0353
         CR    @05,REG15                                           0353
         BNL   *+6
         LR    @05,REG15                                           0353
         ST    @05,DELLMRC(,@14)                                   0353
*       RESPECIFY                                                  0354
*         REG15 UNRSTD;                                            0354
@RF00352 DS    0H                                                  0355
*     END;                                                         0355
*                                                                  0356
*   /*****************************************************************/
*   /*                                                               */
*   /* GO THRU THE LMODS IN THE SET GTA FILE AND CALL DELLMOD PROC   */
*   /* FOR EACH LOAD MODULE                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0356
*   GTPFUNCT(1)=GTPOPENN;           /* RESTART GTA FILE FROM START   */
@RF00348 MVI   GTPFUNCT,X'01'                                      0356
*   GTPRCDLN(1)=LENGTH(HMASMSET);   /* RECORD LENGTH                 */
         MVC   GTPRCDLN(2),@CH00032                                0357
*   GTPBUFAD(1)=ADDR(HMASMSET);     /* RECORD BUFFER ADDRESS         */
         LA    @05,HMASMSET                                        0358
         ST    @05,GTPBUFAD                                        0358
*   CALL HMASMGTA(HMASMGTP(1));                                    0359
         L     @15,@CV01853                                        0359
         LA    @01,@AL00359                                        0359
         BALR  @14,@15                                             0359
*   GTPFUNCT(1)=GTPGETN;            /* GET NEXT RECORD FUNCTION      */
         MVI   GTPFUNCT,X'08'                                      0360
*   CALL HMASMGTA(HMASMGTP(1));     /* GET FIRST RECORD              */
         L     @15,@CV01853                                        0361
         LA    @01,@AL00361                                        0361
         BALR  @14,@15                                             0361
*   DO WHILE GTPRETRN(1)=GTPGOOD;                                  0362
         B     @DE00362                                            0362
@DL00362 DS    0H                                                  0363
*     CALL DELLMOD(SENAME,DELLMRC); /* SEE IF LOAD MODULE SHOULD BE
*                                      DELETED ... IF SO, DELETE IT  */
         LA    @05,SENAME                                          0363
         ST    @05,@AL00001                                        0363
         L     @05,@PC00004                                        0363
         ST    @05,@AL00001+4                                      0363
         LA    @01,@AL00001                                        0363
         BAL   @14,DELLMOD                                         0363
*     CALL HMASMGTA(HMASMGTP(1));   /* GET NEXT RECORD FROM SELECT 0364
*                                      LIST GTA FILE                 */
         L     @15,@CV01853                                        0364
         LA    @01,@AL00364                                        0364
         BALR  @14,@15                                             0364
*   END;                                                           0365
*                                                                  0365
@DE00362 CLI   GTPRETRN,0                                          0365
         BE    @DL00362                                            0365
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE THE GTA FILES                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0366
*   GTPFUNCT(1)=GTPFREE;            /* FREE SELECT LIST FILE         */
         MVI   GTPFUNCT,X'0A'                                      0366
*   CALL HMASMGTA(HMASMGTP(1));                                    0367
         L     @15,@CV01853                                        0367
         LA    @01,@AL00367                                        0367
         BALR  @14,@15                                             0367
*   GTPFUNCT(2)=GTPFREE;            /* FREE LMOD-TO-MOD FILE         */
         MVI   GTPFUNCT+28,X'0A'                                   0368
*   CALL HMASMGTA(HMASMGTP(2));                                    0369
         L     @15,@CV01853                                        0369
         LA    @01,@AL00369                                        0369
         BALR  @14,@15                                             0369
*   RETURN;                                                        0370
@EL00004 DS    0H                                                  0370
@EF00004 DS    0H                                                  0370
@ER00004 LM    @14,@12,@SA00004                                    0370
         BR    @14                                                 0370
*   END DELLMODS;                                                  0371
*                                                                  0372
*/********************************************************************/
*/*                                                                  */
*/*  DELLMOD    - DETERMINE WHETHER THE LOAD MODULE PASSED MAY       */
*/*               BE DELETED FROM THE TARGET SYSTEM AND WHETHER      */
*/*               THE LMOD ENTRY MAY BE DELETED FROM THE CDS.        */
*/*                                                                  */
*/*             - CALL LMODDEL TO DO THE ACTUAL DELETION OF THE      */
*/*               LOAD MODULE AND CDS LMOD ENTRY.                    */
*/*                                                                  */
*/*               * THE LOAD MODULE MAY BE DELETED IF ALL OF THE     */
*/*                 MODULES WHICH MAKE UP THE LOAD MODULE ARE        */
*/*                 FOUND IN THE ICT MARKED AS SELECTED.             */
*/*                                                                  */
*/*               * THE CDS LMOD ENTRY MAY BE DELETED IF ALL THE     */
*/*                 MODULES WHICH MAKE UP THE LOAD MODULE ARE        */
*/*                 FOUND IN THE ICT MARKED AS SELECTED (ICTMISEL)   */
*/*                 FOR DELETION (ICTMIDEL).                         */
*/*                                                                  */
*/*               * THE CDS LMOD ENTRY MUST BE BACKED UP IF ANY      */
*/*                 OF THE MODS WHICH MAKE UP THE LOAD MODULE ARE    */
*/*                 NOT FROM A DELETED SYSMOD.                       */
*/*                                                                  */
*/*               NOTE - THE LMOD-TO-MOD GTA FILE IS EXPECTED TO     */
*/*               BE INITIALIZED WITH MOD DATA FOR THE LOAD MODULE   */
*/*               PASSED TO THIS PROCEDURE.                          */
*/*                                                                  */
*/********************************************************************/
*                                                                  0372
*DELLMOD:                                                          0372
*   PROC(LMDNAME,DELLMRC1);                                        0372
DELLMOD  STM   @14,@12,@SA00005                                    0372
         MVC   @PC00005(8),0(@01)                                  0372
*   DCL                                                            0373
*     LMDNAME CHAR(8);              /* LOAD MODULE NAME              */
*   DCL                                                            0374
*     DELLMRC1 FIXED(31);           /* RETURN CODE PARAMETER         */
*   DCL                                                            0375
*     MPTR PTR(31);                 /* PTR TO AN ICT MOD SECT ENTRY  */
*   CURNTLMD=LMDNAME;               /* LMOD "CURRENTLY BEING       0376
*                                      PROCESSED" AS PASSED BY CALLER*/
         L     @05,@PC00005                                        0376
         MVC   CURNTLMD(8),LMDNAME(@05)                            0376
*                                                                  0377
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE FOR LOAD MODULE DELETE PROCESSING                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0377
*   DLLMFLGS=''B;                   /* CLEAR LMOD PROCESSING FLAGS   */
*                                                                  0377
         MVI   DLLMFLGS,X'00'                                      0377
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCATE LOAD MODULE PASSED IN LMOD-TO-MOD GTA FILE             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0378
*   IF DELLMRC1<STOPPTF             /* NO TERMINATING ERRORS         */
*     THEN                                                         0378
         L     @05,@PC00005+4                                      0378
         L     @05,DELLMRC1(,@05)                                  0378
         CH    @05,@CH00110                                        0378
         BNL   @RF00378                                            0378
*     DO;                                                          0379
*       ALLMODS=ON;                 /* ASSUME ALL MODS FOR LMOD ARE
*                                      IN THE ICT                    */
*       ALLIDEL=ON;                 /* ASSUME ALL MODS FOR LMOD ARE
*                                      IN THE ICT AND BEING DELETED  */
         OI    ALLMODS,B'11000000'                                 0381
*       IF CPTF->ICTPDEXP(1)=OFF    /* "CURRENT" SYSMOD NOT DELETED  */
*           &CPTF->ICTPDIMP(1)=OFF  /* "CURRENT" SYSMOD NOT DELETED  */
*         THEN                                                     0382
         L     @05,CPTF                                            0382
         TM    ICTPDEXP(@05),B'00110000'                           0382
         BNZ   @RF00382                                            0382
*         LMBKUP=ON;                /* ASSUME BACKUP IS REQUIRED     */
         OI    LMBKUP,B'00010000'                                  0383
*       GTPFUNCT(2)=GTPLOC;         /* LOCATE RECORD IN FILE         */
@RF00382 MVI   GTPFUNCT+28,X'03'                                   0384
*       GTPRCDLN(2)=LENGTH(XRFRCD); /* RECORD LENGTH                 */
         MVC   GTPRCDLN+28(2),@CH00470                             0385
*       GTPKEYLN(2)=LENGTH(XRFETYPE)+LENGTH(XRFENAME);/* KEY LENGTH  */
         MVC   GTPKEYLN+28(2),@CH00432                             0386
*       GTPBUFAD(2)=ADDR(XRFRCD);   /* RECORD BUFFER ADDRESS         */
         LA    @05,XRFRCD                                          0387
         ST    @05,GTPBUFAD+28                                     0387
*       XRFKEY1=''B;                /* CLEAR ENTIRE KEY FIELD        */
         XC    XRFKEY1(29),XRFKEY1                                 0388
*       XRFETYPE=IOPLMD;            /* SET ELEMENT TYPE - LOAD MODULE*/
         MVI   XRFETYPE,X'02'                                      0389
*       XRFENAME=CURNTLMD;          /* SET ELEMENT NAME - NAME PASSD.*/
         MVC   XRFENAME(8),CURNTLMD                                0390
*       CALL HMASMGTA(HMASMGTP(2)); /* *** LOCATE LOAD MODULE ***    */
         L     @15,@CV01853                                        0391
         LA    @01,@AL00391                                        0391
         BALR  @14,@15                                             0391
*       IF GTPRETRN(2)=GTPGOOD      /* LMOD FOUND IN FILE            */
*         THEN                                                     0392
         CLI   GTPRETRN+28,0                                       0392
         BNE   @RF00392                                            0392
*         DO;                                                      0393
*           GTPFUNCT(2)=GTPSTRTN;   /* RESTART GET-NEXT OPERATION AT
*                                      RECORD JUST LOCATED           */
         MVI   GTPFUNCT+28,X'06'                                   0394
*           CALL HMASMGTA(HMASMGTP(2));/* RESTART GET-NEXT           */
         L     @15,@CV01853                                        0395
         LA    @01,@AL00395                                        0395
         BALR  @14,@15                                             0395
*           IF GTPRETRN(2)=GTPGOOD  /* RESTART SUCCESSFUL            */
*             THEN                                                 0396
         CLI   GTPRETRN+28,0                                       0396
         BNE   @RF00396                                            0396
*             DO;                                                  0397
*               GTPFUNCT(2)=GTPGETN;/* GET-NEXT RECORD OPERATION     */
         MVI   GTPFUNCT+28,X'08'                                   0398
*               CALL HMASMGTA(HMASMGTP(2));/* GET FIRST RECORD       */
         L     @15,@CV01853                                        0399
         LA    @01,@AL00399                                        0399
         BALR  @14,@15                                             0399
*             END;                                                 0400
*         END;                                                     0401
@RF00396 DS    0H                                                  0402
*     END;                                                         0402
@RF00392 DS    0H                                                  0403
*                                                                  0403
*   /*****************************************************************/
*   /*                                                               */
*   /* GO THRU LMOD-TO-MOD XREF GTA FILE. DETERMINE WHETHER THE LOAD */
*   /* MODULE MAY BE DELETED BY CHECKING THE ICT FOR EACH MOD WHICH  */
*   /* MAKES UP THE LOAD MODULE.                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0403
*   DO WHILE DELLMRC1<STOPPTF       /* NO TERMINATING ERRORS         */
*         &XRF2LMD=CURNTLMD         /* STILL LMOD PASSED             */
*         &ALLMODS=ON               /* ALL MODS (SO FAR) ARE IN ICT  */
*         &GTPRETRN(2)=GTPGOOD;     /* NOT AT END OF GTA FILE        */
*                                                                  0403
@RF00378 B     @DE00403                                            0403
@DL00403 DS    0H                                                  0404
*     /***************************************************************/
*     /*                                                             */
*     /* A MOD FOUND WHICH MAKES UP THIS LOAD MODULE ... CHECK THE   */
*     /* ICT FOR THE STATUS OF THE MOD                               */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0404
*     CALL SRCHMOD(XRF2MOD,MPTR);   /* SEARCH ICT FOR A SELECTED OR
*                                      DELETED VERSION OF THIS MOD   */
         LA    @01,@AL00404                                        0404
         BAL   @14,SRCHMOD                                         0404
*     IF MPTR=0                     /* MOD (FOR LMOD) NOT IN ICT     */
*       THEN                                                       0405
         ICM   @05,15,MPTR                                         0405
         BNZ   @RF00405                                            0405
*       ALLMODS=OFF;                /* ALL MODS ARE NOT IN THE ICT 0406
*                                      ... LOAD MODULE CANNOT BE   0406
*                                      DELETED                       */
         NI    ALLMODS,B'01111111'                                 0406
*     ELSE                                                         0407
*       DO;                                                        0407
*                                                                  0407
         B     @RC00405                                            0407
@RF00405 DS    0H                                                  0408
*         /***********************************************************/
*         /*                                                         */
*         /* MOD (FOR LMOD) IS IN ICT ... CHECK IT TO DETERMINE WHAT */
*         /* SHOULD BE DONE TO THE CDS LMOD ENTRY                    */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0408
*         IF MPTR->ICTMIDEL(1)=ON   /* MOD SELECTED FOR DELETION     */
*             &MPTR->ICTPPTR(1)->ICTPDEXP(1)=OFF/* MOD IS NOT FROM 0408
*                                      ...                           */
*             &MPTR->ICTPPTR(1)->ICTPDIMP(1)=OFF/* .. A DELETED    0408
*                                      SYSMOD                        */
*           THEN                                                   0408
         L     @05,MPTR                                            0408
         TM    ICTMIDEL(@05),B'01000000'                           0408
         BNO   @RF00408                                            0408
         L     @05,ICTPPTR(,@05)                                   0408
         TM    ICTPDEXP(@05),B'00110000'                           0408
         BNZ   @RF00408                                            0408
*           LMBKUP=ON;              /* LMOD ENTRY BACKUP REQUIRED    */
         OI    LMBKUP,B'00010000'                                  0409
*         IF MPTR->ICTMIDEL(1)=OFF  /* NOT A DELETED MOD             */
*           THEN                                                   0410
@RF00408 L     @05,MPTR                                            0410
         TM    ICTMIDEL(@05),B'01000000'                           0410
         BNZ   @RF00410                                            0410
*           ALLIDEL=OFF;            /* A NON-DELETED MOD FOUND       */
         NI    ALLIDEL,B'10111111'                                 0411
*       END;                                                       0412
@RF00410 DS    0H                                                  0413
*     CALL HMASMGTA(HMASMGTP(2));   /* GET NEXT XREF GTA RECORD      */
@RC00405 L     @15,@CV01853                                        0413
         LA    @01,@AL00413                                        0413
         BALR  @14,@15                                             0413
*   END;                                                           0414
@DE00403 L     @05,@PC00005+4                                      0414
         L     @05,DELLMRC1(,@05)                                  0414
         CH    @05,@CH00110                                        0414
         BNL   @DC00403                                            0414
         CLC   XRF2LMD(8),CURNTLMD                                 0414
         BNE   @DC00403                                            0414
         TM    ALLMODS,B'10000000'                                 0414
         BNO   @DC00403                                            0414
         CLI   GTPRETRN+28,0                                       0414
         BE    @DL00403                                            0414
@DC00403 DS    0H                                                  0415
*                                                                  0415
*   /*****************************************************************/
*   /*                                                               */
*   /* ALL RECORDS IN LMOD-TO-MOD FILE FOR THE CURRENT LMOD HAVE BEEN*/
*   /* PROCESSED                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0415
*   IF ALLMODS=ON                   /* ALL MODS FOR LMOD FOUND IN ICT
*                                      ... LOAD MOD DELETEABLE       */
*       &DELLMRC1<STOPPTF           /* NO TERMINATING ERRORS         */
*     THEN                                                         0415
*                                                                  0415
         TM    ALLMODS,B'10000000'                                 0415
         BNO   @RF00415                                            0415
         L     @05,@PC00005+4                                      0415
         L     @15,DELLMRC1(,@05)                                  0415
         CH    @15,@CH00110                                        0415
         BNL   @RF00415                                            0415
*     /***************************************************************/
*     /*                                                             */
*     /* DELETE THE LOAD MODULE FROM TARGET LIBRARIES AND THE LMOD   */
*     /* ENTRY FROM THE CDS (IF APPROPRIATE)                         */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0416
*     CALL LMODDEL(DELLMRC1);       /* DELETE LMOD "CURNTLMD"        */
         ST    @05,@AL00001                                        0416
         LA    @01,@AL00001                                        0416
         BAL   @14,LMODDEL                                         0416
*   RETURN;                                                        0417
@EL00005 DS    0H                                                  0417
@EF00005 DS    0H                                                  0417
@ER00005 LM    @14,@12,@SA00005                                    0417
         BR    @14                                                 0417
*   END DELLMOD;                                                   0418
         B     @EL00005                                            0418
*                                                                  0419
*/********************************************************************/
*/*                                                                  */
*/*  DELENTRY   - DELETE AN (A)CDS ELEMENT ENTRY (MOD, MAC OR SRC)   */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0419
*DELENTRY:                                                         0419
*   PROC(MLENTRY,DELENTRC);                                        0419
DELENTRY STM   @14,@12,@SA00006                                    0419
         MVC   @PC00006(8),0(@01)                                  0419
*   DCL                                                            0420
*     MLENTRY CHAR(*);              /* ICT MOD ENTRY                 */
*   DCL                                                            0421
*     DELENTRC FIXED(31);           /* RETURN CODE PARAMETER         */
*                                                                  0421
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE LOCAL IOP FOR PROCESSING                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0422
*   RESPECIFY                                                      0422
*     ICTMOD BASED(ADDR(MLENTRY));  /* ADDRESS ICT MOD ENTRY PASSED  */
*   IF CCAAPPLY=ON                  /* APPLY PROCESSING              */
*       ×CCARES=ON                  /* RESTORE PROCESSING            */
*     THEN                                                         0423
         TM    CCAAPPLY(CCAPTR),B'01001000'                        0423
         BZ    @RF00423                                            0423
*     LOCALIOP->IOPDSID=IOPCDS;     /* ... USE CDS DATASET           */
         MVI   IOPDSID(LOCALIOP),X'02'                             0424
*   ELSE                                                           0425
*     LOCALIOP->IOPDSID=IOPACDS;    /* ... USE ACDS DATASET          */
         B     @RC00423                                            0425
@RF00423 MVI   IOPDSID(LOCALIOP),X'0C'                             0425
*   LOCALIOP->IOPFUNCT=IOPSTOWD;    /* DELETE                        */
*                                                                  0426
@RC00423 MVI   IOPFUNCT(LOCALIOP),X'53'                            0426
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE IOP FOR DELETION OF (A)CDS MOD/MAC/SRC ENTRY       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0427
*   LOCALIOP->IOPNAME=ICTMNAME(1);  /* ... SET ENTRY NAME            */
         L     @05,@PC00006                                        0427
         MVC   IOPNAME(8,LOCALIOP),ICTMNAME(@05)                   0427
*   IF ICTMMOD(1)=ON                /* MOD REPLACEMENT               */
*     THEN                                                         0428
         TM    ICTMMOD(@05),B'10000000'                            0428
         BNO   @RF00428                                            0428
*     LOCALIOP->IOPTYPE=IOPMOD;     /* ... SET ENTRY TYPE            */
         MVI   IOPTYPE(LOCALIOP),X'05'                             0429
*   ELSE                                                           0430
*     IF ICTMSRCR(1)=ON             /* SOURCE REPLACEMENT            */
*       THEN                                                       0430
         B     @RC00428                                            0430
@RF00428 L     @05,@PC00006                                        0430
         TM    ICTMSRCR(@05),B'00000010'                           0430
         BNO   @RF00430                                            0430
*       LOCALIOP->IOPTYPE=IOPSRC;   /* ... SET ENTRY TYPE            */
         MVI   IOPTYPE(LOCALIOP),X'08'                             0431
*     ELSE                                                         0432
*       IF ICTMMACR(1)=ON           /* MACRO REPLACEMENT             */
*         THEN                                                     0432
         B     @RC00430                                            0432
@RF00430 L     @05,@PC00006                                        0432
         TM    ICTMMACR(@05),B'00001000'                           0432
         BNO   @RF00432                                            0432
*         LOCALIOP->IOPTYPE=IOPMAC; /* ... SET ENTRY TYPE            */
*                                                                  0433
         MVI   IOPTYPE(LOCALIOP),X'03'                             0433
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE THE ENTRY FROM THE (A)CDS                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0434
*   CALL HMASMIO(LOCALIOP->HMASMIOP);                              0434
@RF00432 DS    0H                                                  0434
@RC00430 DS    0H                                                  0434
@RC00428 ST    LOCALIOP,@AL00001                                   0434
         L     @15,@CV01854                                        0434
         LA    @01,@AL00001                                        0434
         BALR  @14,@15                                             0434
*   DELENTRC=MAX(DELENTRC,LOCALIOP->IOPRETRN);                     0435
         L     @05,@PC00006+4                                      0435
         L     @15,DELENTRC(,@05)                                  0435
         SLR   @14,@14                                             0435
         IC    @14,IOPRETRN(,LOCALIOP)                             0435
         CR    @15,@14                                             0435
         BNL   *+6
         LR    @15,@14                                             0435
         ST    @15,DELENTRC(,@05)                                  0435
*   RETURN;                                                        0436
@EL00006 DS    0H                                                  0436
@EF00006 DS    0H                                                  0436
@ER00006 LM    @14,@12,@SA00006                                    0436
         BR    @14                                                 0436
*   END DELENTRY;                                                  0437
*                                                                  0438
*/********************************************************************/
*/*                                                                  */
*/*  DELMEMBR   - DELETE A MEMBER FROM A TARGET SYSTEM LIBRARY       */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0438
*DELMEMBR:                                                         0438
*   PROC(MEMBRNAM,MEMBRTP,DDNAME,DELMEMRC);                        0438
DELMEMBR STM   @14,@12,@SA00007                                    0438
         MVC   @PC00007(16),0(@01)                                 0438
*   DCL                                                            0439
*     MEMBRNAM CHAR(8);             /* MEMBER NAME                   */
*   DCL                                                            0440
*     MEMBRTP FIXED(8);             /* MEMBER TYPE (IOPTYPE VALUES)  */
*   DCL                                                            0441
*     DDNAME CHAR(8);               /* DDNAME OF LIBRARY FROM WHICH
*                                      ELEMENT IS TO BE DELETED      */
*   DCL                                                            0442
*     DELMEMRC FIXED(31);           /* RETURN CODE PARAMETER         */
*   IF DDNAME^=BLANKDDN             /* VALID DDNAME (NON-BLANKS)     */
*       &DDNAME^=ZERODDN            /* VALID DDNAME (NON-ZEROS)      */
*       &DDNAME^=SYSPUNCH           /* VALID DDNAME (NOT "SYSPUNCH") */
*     THEN                                                         0443
         L     @05,@PC00007+8                                      0443
         CLC   DDNAME(8,@05),@CC01867                              0443
         BE    @RF00443                                            0443
         CLC   DDNAME(8,@05),ZERODDN                               0443
         BE    @RF00443                                            0443
         CLC   DDNAME(8,@05),@CC01872                              0443
         BE    @RF00443                                            0443
*     DO;                                                          0444
*                                                                  0444
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE IOP FOR PROCESSING                             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0445
*       LOCALIOP->IOPNAME=MEMBRNAM; /* MEMBER NAME PASSED            */
         L     @15,@PC00007                                        0445
         MVC   IOPNAME(8,LOCALIOP),MEMBRNAM(@15)                   0445
*       LOCALIOP->IOPDSID=IOPDDNM;  /* DATASET SPECIFIED VIA DDNAME  */
         MVI   IOPDSID(LOCALIOP),X'0E'                             0446
*       LOCALIOP->IOPDELDD=DDNAME;  /* DDNAME PASSED                 */
         MVC   IOPDELDD(8,LOCALIOP),DDNAME(@05)                    0447
*       LOCALIOP->IOPTYPE=IOPMEM;   /* NON-SMP DATASET MEMBER        */
         MVI   IOPTYPE(LOCALIOP),X'11'                             0448
*       LOCALIOP->IOPFUNCT=IOPSTOWD;/* STOW DELETE MEMBER            */
*                                                                  0449
         MVI   IOPFUNCT(LOCALIOP),X'53'                            0449
*       /*************************************************************/
*       /*                                                           */
*       /* DELETE MEMBER                                             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0450
*       CALL HMASMIO(LOCALIOP->HMASMIOP);                          0450
         ST    LOCALIOP,@AL00001                                   0450
         L     @15,@CV01854                                        0450
         LA    @01,@AL00001                                        0450
         BALR  @14,@15                                             0450
*       DELMEMRC=MAX(DELMEMRC,LOCALIOP->IOPRETRN);                 0451
         L     @05,@PC00007+12                                     0451
         L     @15,DELMEMRC(,@05)                                  0451
         SLR   @14,@14                                             0451
         IC    @14,IOPRETRN(,LOCALIOP)                             0451
         CR    @15,@14                                             0451
         BNL   *+6
         LR    @15,@14                                             0451
         ST    @15,DELMEMRC(,@05)                                  0451
*     END;                                                         0452
*   IF DDNAME^=BLANKDDN             /* VALID DDNAME (NON-BLANKS)     */
*       &DDNAME^=ZERODDN            /* VALID DDNAME (NON-ZEROS)      */
*       &DDNAME^=SYSPUNCH           /* VALID DDNAME (NOT "SYSPUNCH") */
*       &LOCALIOP->IOPRETRN=IOPGOOD /* DELETED SUCCESSFULLY          */
*     THEN                                                         0453
@RF00443 L     @05,@PC00007+8                                      0453
         CLC   DDNAME(8,@05),@CC01867                              0453
         BE    @RF00453                                            0453
         CLC   DDNAME(8,@05),ZERODDN                               0453
         BE    @RF00453                                            0453
         CLC   DDNAME(8,@05),@CC01872                              0453
         BE    @RF00453                                            0453
         CLI   IOPRETRN(LOCALIOP),0                                0453
         BNE   @RF00453                                            0453
*     DO;                                                          0454
*                                                                  0454
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK TST GTA FILE TO SEE IF HMA224 HAS ALREADY BEEN      */
*       /* ISSUED FOR THIS MEMBER/DDNAME                             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0455
*       GTPFUNCT(3)=GTPLOC;         /* LOCATE                        */
         MVI   GTPFUNCT+56,X'03'                                   0455
*       TSTMEMNM=MEMBRNAM;          /* ... MEMBER NAME               */
         L     @15,@PC00007                                        0456
         MVC   TSTMEMNM(8),MEMBRNAM(@15)                           0456
*       TSTDDNAM=DDNAME;            /* ... DDNAME                    */
         MVC   TSTDDNAM(8),DDNAME(@05)                             0457
*       CALL HMASMGTA(HMASMGTP(3)); /* CHECK GTA FILE                */
         L     @15,@CV01853                                        0458
         LA    @01,@AL00458                                        0458
         BALR  @14,@15                                             0458
*       IF GTPRETRN(3)=GTPNTFND     /* MEMBER NOT ALREADY DELETED    */
*         THEN                                                     0459
         CLI   GTPRETRN+56,4                                       0459
         BNE   @RF00459                                            0459
*         DO;                                                      0460
*                                                                  0460
*           /*********************************************************/
*           /*                                                       */
*           /* ISSUE HMA224I FOR MEMBER WHICH WAS DELETED            */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0461
*           HMASMMGP=''B;           /* CLEAR HMASMMSG PARM LIST      */
         XC    HMASMMGP(24),HMASMMGP                               0461
*           MGPMGNO1=HMA224I;       /* HMA224I - PRIMARY MSG #       */
         MVC   MGPMGNO1(2),@CH00460                                0462
*           MGPMGNO2=PART031;       /* ... MESSAGE PART              */
         MVC   MGPMGNO2(2),@CH00040                                0463
*           MGPMGNO3=PART016;       /* ... MESSAGE PART              */
         MVC   MGPMGNO3(2),@CH00186                                0464
*           MGPPRINT=ON;            /* ROUTE MSG TO SMPOUT           */
         OI    MGPPRINT,B'10000000'                                0465
*           MGPTYPE=MGPINFO;        /* INFORMATIONAL MESSAGE         */
         MVI   MGPTYPE,X'01'                                       0466
*           MGPVARPT(1)=ADDR(CCATYPEA(MEMBRTP));/* MEMBER TYPE       */
         L     @05,@PC00007+4                                      0467
         SLR   @15,@15                                             0467
         IC    @15,MEMBRTP(,@05)                                   0467
         SLA   @15,3                                               0467
         L     @05,CCATPAD(,CCAPTR)                                0467
         AL    @05,@CF02127                                        0467
         LA    @05,CCATYPEA(@15,@05)                               0467
         ST    @05,MGPVARPT                                        0467
*           MGPVARPT(2)=ADDR(MEMBRNAM);/* MEMBER NAME                */
         L     @05,@PC00007                                        0468
         ST    @05,MGPVARPT+4                                      0468
*           MGPVARPT(3)=ADDR(DDNAME);/* LIBRARY DDNAME               */
         L     @05,@PC00007+8                                      0469
         ST    @05,MGPVARPT+8                                      0469
*           CALL HMASMMSG(HMASMMGP);/* ISSUE MESSAGE                 */
*                                                                  0470
         L     @15,@CV01855                                        0470
         LA    @01,@AL00470                                        0470
         BALR  @14,@15                                             0470
*           /*********************************************************/
*           /*                                                       */
*           /* PUT MEMBER/DDNAME IN TST GTA FILE                     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0471
*           GTPFUNCT(3)=GTPADD;     /* ADD MEMBER/DDNAME             */
         MVI   GTPFUNCT+56,X'04'                                   0471
*           CALL HMASMGTA(HMASMGTP(3));/* ... TO TST GTA FILE        */
         L     @15,@CV01853                                        0472
         LA    @01,@AL00472                                        0472
         BALR  @14,@15                                             0472
*           DELMEMRC=MAX(DELMEMRC,GTPRETRN(3));/* MAINTAIN RTN.CODE  */
         L     @05,@PC00007+12                                     0473
         L     @15,DELMEMRC(,@05)                                  0473
         SLR   @14,@14                                             0473
         IC    @14,GTPRETRN+56                                     0473
         CR    @15,@14                                             0473
         BNL   *+6
         LR    @15,@14                                             0473
         ST    @15,DELMEMRC(,@05)                                  0473
*         END;                                                     0474
*     END;                                                         0475
*   RETURN;                                                        0476
@EL00007 DS    0H                                                  0476
@EF00007 DS    0H                                                  0476
@ER00007 LM    @14,@12,@SA00007                                    0476
         BR    @14                                                 0476
*   END DELMEMBR;                                                  0477
         B     @EL00007                                            0477
*                                                                  0478
*/********************************************************************/
*/*                                                                  */
*/*  XRFSEL     - BUILD SELECT-LIST XREF GTA FILE FOR ALL LMODS      */
*/*               IN THE CDS ++MOD ENTRY IOP POINTED TO BY IOPPTR    */
*/*                                                                  */
*/*               NOTE - THE IOP POINTED TO BY IOPPTR IS EXPECTED    */
*/*               TO BE INITIALIZED WITH THE CDS MOD ENTRY FOR THE   */
*/*               MOD BEING DELETED (FROM THIS ENTRY, LMODS ARE      */
*/*               FOUND).                                            */
*/*                                                                  */
*/********************************************************************/
*                                                                  0478
*XRFSEL:                                                           0478
*   PROC(LMXRFRC);                                                 0478
XRFSEL   STM   @14,@12,@SA00008                                    0478
         MVC   @PC00008(4),0(@01)                                  0478
*   DCL                                                            0479
*     LMXRFRC FIXED(31);            /* RETURN CODE PARAMETER         */
*   DCL                                                            0480
*     LL FIXED(31);                 /* INDEX - IOP SUB-ENTRY         */
*                                                                  0481
*   /*****************************************************************/
*   /*                                                               */
*   /* GO THRU LMODS IN THE CDS MOD ENTRY IOP AND BUILD SELECT LIST  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0481
*   DO LL=1 BY 1 WHILE IOPRETRN=IOPGOOD/* VALID MOD IOP PASSED       */
*         &IOPMODND(LL)^=IOPEOLST   /* NOT END OF SUBENTRIES         */
*         &LMXRFRC<STOPPTF;         /* NO TERMINATING ERRORS         */
         LA    LL,1                                                0481
         B     @DE00481                                            0481
@DL00481 DS    0H                                                  0482
*     IF IOPMDIND(LL)=IOPMDLMD      /* LMOD SUB-ENTRY                */
*       THEN                                                       0482
         L     @03,IOPPTR                                          0482
         LR    @15,LL                                              0482
         MH    @15,@CH00432                                        0482
         SLR   @14,@14                                             0482
         IC    @14,IOPMDIND-9(@15,@03)                             0482
         CH    @14,@CH00085                                        0482
         BNE   @RF00482                                            0482
*       DO;                                                        0483
*                                                                  0483
*         /***********************************************************/
*         /*                                                         */
*         /* INITIALIZE SET RECORD FOR LMOD AND PUT TO GTA FILE      */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0484
*         SELSTFLG=''B;             /* CLEAR TYPE FLAGS IN SET       */
         XC    SELSTFLG(2),SELSTFLG                                0484
*         SEFLAGS=''B;              /* CLEAR SELECT/EXCLUDE FLAGS    */
         MVI   SEFLAGS,X'00'                                       0485
*         SESELECT=ON;              /* SET SELECT FLAG               */
         OI    SESELECT,B'01000000'                                0486
*         SELMD=ON;                 /* SET LMOD TYPE                 */
         OI    SELMD,B'00001000'                                   0487
*         SENAME=IOPLMODS(LL);      /* PUT LMOD NAME INTO RECORD     */
         ALR   @03,@15                                             0488
         MVC   SENAME(8),IOPLMODS-9(@03)                           0488
*         GTPFUNCT(1)=GTPADD;       /* PUT SET RECORD TO GTA FILE    */
         MVI   GTPFUNCT,X'04'                                      0489
*         GTPRCDLN(1)=LENGTH(HMASMSET);/* SET RECORD LENGTH          */
         MVC   GTPRCDLN(2),@CH00032                                0490
*         GTPKEYLN(1)=LENGTH(SELSTENT);/* SET KEY LENGTH             */
         MVC   GTPKEYLN(2),@CH00033                                0491
*         GTPBUFAD(1)=ADDR(HMASMSET);/* POINT TO SET RECORD          */
         LA    @03,HMASMSET                                        0492
         ST    @03,GTPBUFAD                                        0492
*         CALL HMASMGTA(HMASMGTP(1));/* PUT SET RECORD TO GTA FILE   */
         L     @15,@CV01853                                        0493
         LA    @01,@AL00493                                        0493
         BALR  @14,@15                                             0493
*         LMXRFRC=MAX(LMXRFRC,GTPRETRN(1));/* MAINTAIN RETURN CODE   */
         L     @03,@PC00008                                        0494
         L     @15,LMXRFRC(,@03)                                   0494
         SLR   @14,@14                                             0494
         IC    @14,GTPRETRN                                        0494
         CR    @15,@14                                             0494
         BNL   *+6
         LR    @15,@14                                             0494
         ST    @15,LMXRFRC(,@03)                                   0494
*       END;                                                       0495
*   END;                                                           0496
@RF00482 AH    LL,@CH00085                                         0496
@DE00481 L     @03,IOPPTR                                          0496
         CLI   IOPRETRN(@03),0                                     0496
         BNE   @DC00481                                            0496
         LR    @15,LL                                              0496
         MH    @15,@CH00432                                        0496
         SLR   @14,@14                                             0496
         IC    @14,IOPMODND-9(@15,@03)                             0496
         CH    @14,@CH00621                                        0496
         BE    @DC00481                                            0496
         L     @03,@PC00008                                        0496
         L     @03,LMXRFRC(,@03)                                   0496
         CH    @03,@CH00110                                        0496
         BL    @DL00481                                            0496
@DC00481 DS    0H                                                  0497
*   RETURN;                                                        0497
@EL00008 DS    0H                                                  0497
@EF00008 DS    0H                                                  0497
@ER00008 LM    @14,@12,@SA00008                                    0497
         BR    @14                                                 0497
*   END XRFSEL;                                                    0498
*                                                                  0499
*/********************************************************************/
*/*                                                                  */
*/* LMODDEL  - DELETE LOAD MODULE FROM THE TARGET SYSTEM LIBRARIES.  */
*/*                                                                  */
*/*          - DELETE THE LMOD ENTRY FROM THE CDS IF ALL MODS ARE    */
*/*            BEING DELETED.                                        */
*/*                                                                  */
*/*          * CONDITIONS ON ENTRY:                                  */
*/*                                                                  */
*/*            - CURNTLMD - NAME OF LMOD TO BE DELETED               */
*/*                                                                  */
*/*            - DLLMFLGS:                                           */
*/*                                                                  */
*/*               LMBKUP   - '1'  LMOD ENTRY SHOULD BE BACKED UP.    */
*/*                          '0'  LMOD ENTRY BACKUP NOT REQUIRED.    */
*/*               ALLMODS  - '1'  ALL MODS (FOR LMOD) FOUND IN ICT   */
*/*                               (CONDITION FOR CALLING THIS PROC). */
*/*               ALLIDEL  - '1'  ALL MODS FOUND AND BEING DELETED.  */
*/*                          '0'  ALL MODS FOUND BUT SOME ARE NOT    */
*/*                               BEING DELETED.                     */
*/*                                                                  */
*/********************************************************************/
*                                                                  0499
*LMODDEL:                                                          0499
*   PROC(LMDDRC);                                                  0499
LMODDEL  STM   @14,@12,@SA00009                                    0499
         MVC   @PC00009(4),0(@01)                                  0499
*   DCL                                                            0500
*     LMDDRC FIXED(31);             /* RETURN CODE                   */
*   DCL                                                            0501
*     LM FIXED(15);                 /* INDEX - LMOD SECT ENTRIES     */
*   DCL                                                            0502
*     LMSYSLIB CHAR(8);             /* LOAD MODULE''S SYSLIB DDNAME  */
*                                                                  0503
*   /*****************************************************************/
*   /*                                                               */
*   /* ACCESS LMOD ON CDS TO FIND TARGET SYSTEM LIBRARIES            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0503
*   LMDENTRY=OFF;                   /* ASSUME LMOD ENTRY NOT FOUND   */
         NI    LMDENTRY,B'11011111'                                0503
*   IOPNAME=CURNTLMD;               /* LOAD MODULE NAME              */
         L     @05,IOPPTR                                          0504
         MVC   IOPNAME(8,@05),CURNTLMD                             0504
*   IOPDSID=IOPCDS;                 /* SMPCDS DATASET                */
         MVI   IOPDSID(@05),X'02'                                  0505
*   IOPFUNCT=IOPLOC;                /* GET ENTIRE ENTRY              */
         MVI   IOPFUNCT(@05),X'03'                                 0506
*   IOPTYPE=IOPLMD;                 /* LMOD TYPE ENTRY               */
         MVI   IOPTYPE(@05),X'02'                                  0507
*   CALL HMASMIO(HMASMIOP);                                        0508
         ST    @05,@AL00001                                        0508
         L     @15,@CV01854                                        0508
         LA    @01,@AL00001                                        0508
         BALR  @14,@15                                             0508
*   IF IOPRETRN>IOPNOTFD            /* TERMINATING ERROR             */
*     THEN                                                         0509
         L     @05,IOPPTR                                          0509
         CLI   IOPRETRN(@05),4                                     0509
         BNH   @RF00509                                            0509
*     LMDDRC=MAX(LMDDRC,IOPRETRN);  /* MAINTAIN RETURN CODE          */
         L     @15,@PC00009                                        0510
         L     @14,LMDDRC(,@15)                                    0510
         SLR   @09,@09                                             0510
         IC    @09,IOPRETRN(,@05)                                  0510
         CR    @14,@09                                             0510
         BNL   *+6
         LR    @14,@09                                             0510
         ST    @14,LMDDRC(,@15)                                    0510
*   ELSE                                                           0511
*     IF IOPRETRN=IOPGOOD           /* LMOD ENTRY FOUND              */
*       THEN                                                       0511
*                                                                  0511
         B     @RC00509                                            0511
@RF00509 L     @05,IOPPTR                                          0511
         CLI   IOPRETRN(@05),0                                     0511
         BNE   @RF00511                                            0511
*       /*************************************************************/
*       /*                                                           */
*       /* CDS LMOD ENTRY FOUND                                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0512
*       DO;                                                        0512
*         LMDENTRY=ON;              /* INDICATE LMOD ENTRY FOUND     */
         OI    LMDENTRY,B'00100000'                                0513
*         IF CCARES=ON              /* RESTORE PROCESSING            */
*           THEN                                                   0514
         TM    CCARES(CCAPTR),B'00001000'                          0514
         BNO   @RF00514                                            0514
*           DO;                                                    0515
*                                                                  0515
*             /*******************************************************/
*             /*                                                     */
*             /* FOR RESTORE PROCESSING SEE IF SYSMOD CAUSING "ADD"  */
*             /* OF CDS LMOD ENTRY IS BEING RESTORED                 */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0516
*             IF IOPBUTYP=IOPBUADD  /* LMOD ENTRY "ADDED"            */
*               THEN                                               0516
         CLI   IOPBUTYP(@05),1                                     0516
         BNE   @RF00516                                            0516
*               CALL SRCHPTF(IOPBUSMD,/* SYSMOD WHICH ADDED LMOD     */
*                   PPARM);         /* PTR TO PTF ENTRY IN ICT       */
         LA    @05,IOPBUSMD(,@05)                                  0517
         ST    @05,@AL00001                                        0517
         LA    @05,PPARM                                           0517
         ST    @05,@AL00001+4                                      0517
         LA    @01,@AL00001                                        0517
         BAL   @14,SRCHPTF                                         0517
*             ELSE                                                 0518
*               PPARM=0;            /* CLEAR PTR TO PTF ENTRY IN ICT */
         B     @RC00516                                            0518
@RF00516 SLR   @05,@05                                             0518
         ST    @05,PPARM                                           0518
*           END;                                                   0519
@RC00516 DS    0H                                                  0520
*       END;                                                       0520
@RF00514 DS    0H                                                  0521
*   IF LMDDRC<STOPPTF               /* NOT TERMINATING               */
*       &LMDENTRY=ON                /* LMOD ENTRY FOUND              */
*       &ALLIDEL=ON                 /* NO SELECTED MODS FOR LMOD ...
*                                      (I.E., LMOD WILL BE DELETED)  */
*       &LMBKUP=ON                  /* LMOD BACKUP REQUIRED ........
*                                      (I.E., SOME DELETED MODS WERE
*                                      FROM NON-DELETED SYSMODS)     */
*       &CCARES=OFF                 /* NOT RESTORE PROCESSING        */
*       &CPTF->ICTPDEXP(1)=OFF      /* SYSMOD NOT BEING DELETED      */
*       &CPTF->ICTPDIMP(1)=OFF      /* SYSMOD NOT BEING DELETED      */
*     THEN                                                         0521
*                                                                  0521
@RF00511 DS    0H                                                  0521
@RC00509 L     @05,@PC00009                                        0521
         L     @15,LMDDRC(,@05)                                    0521
         CH    @15,@CH00110                                        0521
         BNL   @RF00521                                            0521
         TM    LMDENTRY,B'01110000'                                0521
         BNO   @RF00521                                            0521
         TM    CCARES(CCAPTR),B'00001000'                          0521
         BNZ   @RF00521                                            0521
         L     @01,CPTF                                            0521
         TM    ICTPDEXP(@01),B'00110000'                           0521
         BNZ   @RF00521                                            0521
*     /***************************************************************/
*     /*                                                             */
*     /* BACKUP CDS LMOD ENTRY ON SCDS (APPLY)                       */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0522
*     CALL BACKUP(LMDDRC);          /* CREATE BACKUP LMOD ENTRY    0522
*                                      ASSOCIATED WITH CURRENT SYSMOD*/
*                                                                  0522
         ST    @05,@AL00001                                        0522
         LA    @01,@AL00001                                        0522
         BAL   @14,BACKUP                                          0522
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE LOAD MODULE FROM ALL TARGET LIBS SPECIFIED IN ENTRY    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0523
*   IF LMDDRC<STOPPTF               /* NOT TERMINATING               */
*       &LMDENTRY=ON                /* LMOD ENTRY FOUND ON (A)CDS    */
*     THEN                                                         0523
@RF00521 L     @05,@PC00009                                        0523
         L     @05,LMDDRC(,@05)                                    0523
         CH    @05,@CH00110                                        0523
         BNL   @RF00523                                            0523
         TM    LMDENTRY,B'00100000'                                0523
         BNO   @RF00523                                            0523
*     DO;                                                          0524
*                                                                  0524
*       /*************************************************************/
*       /*                                                           */
*       /* GO THRU ALL TARGET LIBS FOUND IN (A)CDS LMOD ENTRY        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0525
*       DO LM=1 BY 1 WHILE IOPLMDND(LM)^=IOPEOLST;                 0525
         LA    LM,1                                                0525
         B     @DE00525                                            0525
@DL00525 DS    0H                                                  0526
*         IF IOPLMIND(LM)=IOPLMSYS  /* SYSLIB SUB-ENTRY FOUND        */
*           THEN                                                   0526
         L     @05,IOPPTR                                          0526
         LR    @03,LM                                              0526
         MH    @03,@CH00432                                        0526
         SLR   @15,@15                                             0526
         IC    @15,IOPLMIND-9(@03,@05)                             0526
         CH    @15,@CH00085                                        0526
         BNE   @RF00526                                            0526
*           DO;                                                    0527
*             LMSYSLIB=IOPSYSLB(LM);/* SAVE SYSLIB/DDNAME            */
         ALR   @05,@03                                             0528
         MVC   LMSYSLIB(8),IOPSYSLB-9(@05)                         0528
*             CALL DELMEMBR(CURNTLMD,/* LOAD MODULE TO BE DELETED    */
*                 IOPLMD,           /* ELEMENT TYPE - LOAD MODULE    */
*                 LMSYSLIB,         /* SYSLIB/DDNAME                 */
*                 LMDDRC);          /* RETURN CODE PARAMETER         */
         MVC   @AL00001(12),@AL00529                               0529
         L     @05,@PC00009                                        0529
         ST    @05,@AL00001+12                                     0529
         LA    @01,@AL00001                                        0529
         BAL   @14,DELMEMBR                                        0529
*             IF LMDDRC<STOPPTF     /* NOT TERMINATING               */
*               THEN                                               0530
         L     @05,@PC00009                                        0530
         L     @05,LMDDRC(,@05)                                    0530
         CH    @05,@CH00110                                        0530
         BNL   @RF00530                                            0530
*               CALL LMALIAS(LMSYSLIB);/* DELETE LOAD MODULE''S    0531
*                                      ALIASES FROM SYSLIB           */
         LA    @01,@AL00531                                        0531
         BAL   @14,LMALIAS                                         0531
*           END;                                                   0532
@RF00530 DS    0H                                                  0533
*       END;                                                       0533
@RF00526 AH    LM,@CH00085                                         0533
@DE00525 LR    @05,LM                                              0533
         MH    @05,@CH00432                                        0533
         L     @03,IOPPTR                                          0533
         SLR   @15,@15                                             0533
         IC    @15,IOPLMDND-9(@05,@03)                             0533
         CH    @15,@CH00621                                        0533
         BNE   @DL00525                                            0533
*     END;                                                         0534
*                                                                  0535
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE LMOD ENTRY FROM CDS                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0535
*   IF LMDDRC<STOPPTF               /* NOT TERMINATING               */
*       &ALLIDEL=ON                 /* NO SELECTED MODS FOR LMOD     */
*       &LMDENTRY=ON                /* CDS LMOD ENTRY FOUND          */
*       &(CCARES=OFF                /* NOT RESTORE                   */
*       ×(CCARES=ON                 /* RESTORE ...                   */
*       &PPARM^=0))                 /* SYSMOD ADDING LMOD BEING REST */
*     THEN                                                         0535
@RF00523 L     @15,@PC00009                                        0535
         L     @15,LMDDRC(,@15)                                    0535
         CH    @15,@CH00110                                        0535
         BNL   @RF00535                                            0535
         TM    ALLIDEL,B'01100000'                                 0535
         BNO   @RF00535                                            0535
         TM    CCARES(CCAPTR),B'00001000'                          0535
         BZ    @RT00535                                            0535
         TM    CCARES(CCAPTR),B'00001000'                          0535
         BNO   @RF00535                                            0535
         ICM   @15,15,PPARM                                        0535
         BZ    @RF00535                                            0535
@RT00535 DS    0H                                                  0536
*     DO;                                                          0536
*       IOPNAME=CURNTLMD;           /* LOAD MODULE NAME              */
         L     @15,IOPPTR                                          0537
         MVC   IOPNAME(8,@15),CURNTLMD                             0537
*       IOPDSID=IOPCDS;             /* CDS DATASET                   */
         MVI   IOPDSID(@15),X'02'                                  0538
*       IOPTYPE=IOPLMD;             /* ENTRY TYPE - LMOD             */
         MVI   IOPTYPE(@15),X'02'                                  0539
*       IOPFUNCT=IOPSTOWD;          /* SET STOW DELETE IN IOP        */
         MVI   IOPFUNCT(@15),X'53'                                 0540
*       CALL HMASMIO(HMASMIOP);     /* DELETE LMOD ENTRY             */
         ST    @15,@AL00001                                        0541
         L     @15,@CV01854                                        0541
         LA    @01,@AL00001                                        0541
         BALR  @14,@15                                             0541
*       LMDDRC=MAX(LMDDRC,IOPRETRN);/* MAINTAIN RETURN CODE          */
         L     @15,@PC00009                                        0542
         L     @14,LMDDRC(,@15)                                    0542
         L     @01,IOPPTR                                          0542
         SLR   @00,@00                                             0542
         IC    @00,IOPRETRN(,@01)                                  0542
         CR    @14,@00                                             0542
         BNL   *+6
         LR    @14,@00                                             0542
         ST    @14,LMDDRC(,@15)                                    0542
*       CALL LMPRCICT(CURNTLMD);    /* MARK ANY ICT LMOD ENTRIES AS
*                                      "IN-PROCESS"                  */
         LA    @01,@AL00543                                        0543
         BAL   @14,LMPRCICT                                        0543
*     END;                                                         0544
*   RETURN;                                                        0545
@EL00009 DS    0H                                                  0545
@EF00009 DS    0H                                                  0545
@ER00009 LM    @14,@12,@SA00009                                    0545
         BR    @14                                                 0545
*   END LMODDEL;                                                   0546
         B     @EL00009                                            0546
*                                                                  0547
*/********************************************************************/
*/*                                                                  */
*/* SRCHPTF - SERACH ICT PTF SECTION FOR A NON-NOGO SYSMOD ENTRY     */
*/*            REPRESENTING THE SYSMOD-ID PASSED.                    */
*/*                                                                  */
*/*          - THE CALLER''S RETURN PARAMETER IS SET TO POINT TO     */
*/*            THE PTF SECTION ENTRY (IF FOUND).                     */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0547
*SRCHPTF:                                                          0547
*   PROC(SMDNAME,SMDPTR);                                          0547
SRCHPTF  STM   @14,@12,12(@13)                                     0547
         MVC   @PC00010(8),0(@01)                                  0547
*   DCL                                                            0548
*     SMDNAME CHAR(7);              /* SYSMOD ID                     */
*   DCL                                                            0549
*     SMDPTR PTR(31);               /* POINTER RETURNED TO THE CALLER
*                                      POINTING TO THE PTF SECTION 0549
*                                      ENTRY FOUND ... SET TO ZERO IF
*                                      NO PTF SECTION ENTRY FOUND    */
*   DCL                                                            0550
*     NN FIXED(15);                 /* INDEX - ICT PTF SECT ENTRIES  */
*   RESPECIFY                                                      0551
*     ICTPTF BASED(CCAICPTF);       /* ADDRESS ENTIRE ICT PTF SECT   */
*   SMDPTR=0;                       /* CLEAR PTR RETURNED            */
*                                                                  0552
         L     @15,@PC00010+4                                      0552
         SLR   @14,@14                                             0552
         ST    @14,SMDPTR(,@15)                                    0552
*   /*****************************************************************/
*   /*                                                               */
*   /* GO THRU ICT MOD SECTION                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0553
*   DO NN=1 BY 1 WHILE ICTPEND(NN)^=ICTENDNT/* NOT AT END OF ICT     */
*         &SMDPTR=0;                /* ENTRY NOT FOUND               */
         LA    NN,1                                                0553
         B     @DE00553                                            0553
@DL00553 DS    0H                                                  0554
*     IF ICTPTFS(NN)=SMDNAME        /* SYSMOD ENTRY FOUND            */
*         &ICTPNOGO(NN)=OFF         /* ... NOT NOGO                  */
*       THEN                                                       0554
         LR    @03,NN                                              0554
         MH    @03,@CH02104                                        0554
         L     @15,CCAICPTF(,CCAPTR)                               0554
         L     @14,@PC00010                                        0554
         ST    @03,@TF00001                                        0554
         ALR   @03,@15                                             0554
         AL    @03,@CF02120                                        0554
         CLC   ICTPTFS(7,@03),SMDNAME(@14)                         0554
         BNE   @RF00554                                            0554
         LR    @03,@15                                             0554
         AL    @03,@TF00001                                        0554
         AL    @03,@CF02118                                        0554
         TM    ICTPNOGO-8(@03),B'01000000'                         0554
         BNZ   @RF00554                                            0554
*       SMDPTR=ADDR(ICTPTF(NN));    /* SET PTR RETURNED TO CALLER    */
         L     @03,@PC00010+4                                      0555
         L     @14,@TF00001                                        0555
         AL    @15,@CF02120                                        0555
         LA    @15,ICTPTF(@14,@15)                                 0555
         ST    @15,SMDPTR(,@03)                                    0555
*   END;                                                           0556
@RF00554 AH    NN,@CH00085                                         0556
@DE00553 LR    @03,NN                                              0556
         MH    @03,@CH02104                                        0556
         L     @01,CCAICPTF(,CCAPTR)                               0556
         AL    @01,@CF02120                                        0556
         L     @03,ICTPEND(@03,@01)                                0556
         CL    @03,ICTENDNT                                        0556
         BE    @DC00553                                            0556
         L     @03,@PC00010+4                                      0556
         ICM   @15,15,SMDPTR(@03)                                  0556
         BZ    @DL00553                                            0556
@DC00553 DS    0H                                                  0557
*   END SRCHPTF;                                                   0557
@EL00010 DS    0H                                                  0557
@EF00010 DS    0H                                                  0557
@ER00010 LM    @14,@12,12(@13)                                     0557
         BR    @14                                                 0557
*                                                                  0558
*/********************************************************************/
*/*                                                                  */
*/* SRCHMOD - SERACH ICT MOD SECTION FOR A SELECTED MOD-TYPE ENTRY   */
*/*            MATCHING THE ELEMENT PASSED.                          */
*/*                                                                  */
*/*            THE ICT IS SERACHED FOR A ++MOD-TYPE MOD SECTION      */
*/*            ENTRY.                                                */
*/*                                                                  */
*/*          - THE CALLER''S RETURN PARAMETER IS SET TO POINT TO     */
*/*            THE MOD SECTION ENTRY (IF FOUND).                     */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0558
*SRCHMOD:                                                          0558
*   PROC(SMODNAME,SMODPTR);                                        0558
SRCHMOD  STM   @14,@12,12(@13)                                     0558
         MVC   @PC00011(8),0(@01)                                  0558
*   DCL                                                            0559
*     SMODNAME CHAR(8);             /* ++MOD ELEMENT NAME            */
*   DCL                                                            0560
*     SMODPTR PTR(31);              /* POINTER RETURNED TO THE CALLER
*                                      POINTING TO THE MOD SECTION 0560
*                                      ENTRY FOUND ... SET TO ZERO IF
*                                      NO MOD SECTION ENTRY FOUND    */
*   DCL                                                            0561
*     JJ FIXED(15);                 /* INDEX - ICT MOD SECT ENTRIES  */
*   RESPECIFY                                                      0562
*     ICTMOD BASED(CCAICMOD);       /* ADDRESS ENTIRE ICT MOD SECT   */
*   SMODPTR=0;                      /* CLEAR PTR RETURNED            */
*                                                                  0563
         L     @15,@PC00011+4                                      0563
         SLR   @14,@14                                             0563
         ST    @14,SMODPTR(,@15)                                   0563
*   /*****************************************************************/
*   /*                                                               */
*   /* GO THRU ICT MOD SECTION                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0564
*   DO JJ=1 BY 1 WHILE ICTMEND(JJ)^=ICTENDNT/* NOT AT END OF ICT     */
*         &SMODPTR=0;               /* ENTRY NOT FOUND               */
         LA    JJ,1                                                0564
         B     @DE00564                                            0564
@DL00564 DS    0H                                                  0565
*     IF ICTMNAME(JJ)=SMODNAME      /* ELEMENT NAMES MATCH           */
*         &ICTMMOD(JJ)=ON           /* ++MOD-TYPE ENTRY              */
*         &ICTMISEL(JJ)=ON          /* ELEMENT IS SELECTED           */
*         &ICTMSELM(JJ)=OFF         /* ELEMENT IS NOT ELMINIATED     */
*         &ICTPPTR(JJ)->ICTPNOGO(1)=OFF/* SYSMOD IS NOT NOGO         */
*       THEN                                                       0565
         LR    @03,JJ                                              0565
         MH    @03,@CH02105                                        0565
         L     @15,CCAICMOD(,CCAPTR)                               0565
         L     @14,@PC00011                                        0565
         ST    @03,@TF00001                                        0565
         ALR   @03,@15                                             0565
         AL    @03,@CF02134                                        0565
         CLC   ICTMNAME(8,@03),SMODNAME(@14)                       0565
         BNE   @RF00565                                            0565
         LR    @03,@15                                             0565
         AL    @03,@TF00001                                        0565
         AL    @03,@CF02135                                        0565
         TM    ICTMMOD-9(@03),B'10000000'                          0565
         BNO   @RF00565                                            0565
         LR    @03,@15                                             0565
         AL    @03,@TF00001                                        0565
         AL    @03,@CF02136                                        0565
         TM    ICTMISEL-11(@03),B'10000000'                        0565
         BNO   @RF00565                                            0565
         TM    ICTMSELM-11(@03),B'00100000'                        0565
         BNZ   @RF00565                                            0565
         L     @03,@TF00001                                        0565
         AL    @03,@CF02137                                        0565
         L     @03,ICTPPTR-96(@03,@15)                             0565
         TM    ICTPNOGO(@03),B'01000000'                           0565
         BNZ   @RF00565                                            0565
*       SMODPTR=ADDR(ICTMOD(JJ));   /* SET PTR RETURNED TO CALLER    */
         L     @03,@PC00011+4                                      0566
         L     @14,@TF00001                                        0566
         AL    @15,@CF02134                                        0566
         LA    @15,ICTMOD(@14,@15)                                 0566
         ST    @15,SMODPTR(,@03)                                   0566
*   END;                                                           0567
@RF00565 AH    JJ,@CH00085                                         0567
@DE00564 LR    @03,JJ                                              0567
         MH    @03,@CH02105                                        0567
         L     @01,CCAICMOD(,CCAPTR)                               0567
         AL    @01,@CF02134                                        0567
         L     @03,ICTMEND(@03,@01)                                0567
         CL    @03,ICTENDNT                                        0567
         BE    @DC00564                                            0567
         L     @03,@PC00011+4                                      0567
         ICM   @15,15,SMODPTR(@03)                                 0567
         BZ    @DL00564                                            0567
@DC00564 DS    0H                                                  0568
*   END SRCHMOD;                                                   0568
@EL00011 DS    0H                                                  0568
@EF00011 DS    0H                                                  0568
@ER00011 LM    @14,@12,12(@13)                                     0568
         BR    @14                                                 0568
*                                                                  0569
*/********************************************************************/
*/*                                                                  */
*/* CDSELEM  - ACCESS CDS ENTRY FOR SPECIFIED ELEMENT                */
*/*                                                                  */
*/*          - USES IOP POINTED TO BY IOPPTR ... RESUTLING           */
*/*            I/O RETURN CODE AND MOD DATA CAN BE FOUND THERE       */
*/*                                                                  */
*/********************************************************************/
*                                                                  0569
*CDSELEM:                                                          0569
*   PROC(CDSMICTE,CDSELRC);                                        0569
CDSELEM  STM   @14,@12,@SA00012                                    0569
         MVC   @PC00012(8),0(@01)                                  0569
*   DCL                                                            0570
*     CDSMICTE CHAR(*);             /* ICT MOD SECTION ENTRY         */
*   DCL                                                            0571
*     CDSELRC FIXED(31);            /* RETURN CODE PARAMETER         */
*   RESPECIFY                                                      0572
*     ICTMOD BASED(ADDR(CDSMICTE)); /* ADDRESS ICT ENTRY             */
*                                                                  0572
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE IOP FOR LOCATE OF CDS MOD ENTRY                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0573
*   IOPDSID=IOPCDS;                 /* ACCESS CDS                    */
         L     @15,IOPPTR                                          0573
         MVI   IOPDSID(@15),X'02'                                  0573
*   IOPFUNCT=IOPLOC;                /* GET ENTIRE ENTRY (LOCATE)     */
         MVI   IOPFUNCT(@15),X'03'                                 0574
*   IOPNAME=ICTMNAME(1);            /* ENTRY NAME                    */
         L     @14,@PC00012                                        0575
         MVC   IOPNAME(8,@15),ICTMNAME(@14)                        0575
*   IOPRETRN=IOPGOOD;               /* CLEAR IOP RETURN CODE FIELD   */
         MVI   IOPRETRN(@15),X'00'                                 0576
*   IF ICTMMOD(1)=ON                /* ICT MOD ENTRY                 */
*     THEN                                                         0577
         TM    ICTMMOD(@14),B'10000000'                            0577
         BNO   @RF00577                                            0577
*     IOPTYPE=IOPMOD;               /* MOD TYPE ENTRY                */
         MVI   IOPTYPE(@15),X'05'                                  0578
*   ELSE                                                           0579
*     IF ICTMMACR(1)=ON             /* ICT MAC ENTRY                 */
*       THEN                                                       0579
         B     @RC00577                                            0579
@RF00577 L     @15,@PC00012                                        0579
         TM    ICTMMACR(@15),B'00001000'                           0579
         BNO   @RF00579                                            0579
*       IOPTYPE=IOPMAC;             /* MAC TYPE ENTRY                */
         L     @01,IOPPTR                                          0580
         MVI   IOPTYPE(@01),X'03'                                  0580
*     ELSE                                                         0581
*       IF ICTMSRCR(1)=ON           /* ICT SRC ENTRY                 */
*         THEN                                                     0581
         B     @RC00579                                            0581
@RF00579 L     @15,@PC00012                                        0581
         TM    ICTMSRCR(@15),B'00000010'                           0581
         BNO   @RF00581                                            0581
*         IOPTYPE=IOPSRC;           /* SRC TYPE ENTRY                */
         L     @01,IOPPTR                                          0582
         MVI   IOPTYPE(@01),X'08'                                  0582
*       ELSE                                                       0583
*         IOPRETRN=IOPEOF;          /* UN-KNOWN TYPE OF ICT ENTRY    */
         B     @RC00581                                            0583
@RF00581 L     @01,IOPPTR                                          0583
         MVI   IOPRETRN(@01),X'04'                                 0583
*   IF IOPRETRN=IOPGOOD             /* VALID ICT ENTRY PASSED        */
*     THEN                                                         0584
@RC00581 DS    0H                                                  0584
@RC00579 DS    0H                                                  0584
@RC00577 L     @15,IOPPTR                                          0584
         CLI   IOPRETRN(@15),0                                     0584
         BNE   @RF00584                                            0584
*     CALL HMASMIO(HMASMIOP);       /* LOCATE ELEMENT ON CDS         */
         ST    @15,@AL00001                                        0585
         L     @15,@CV01854                                        0585
         LA    @01,@AL00001                                        0585
         BALR  @14,@15                                             0585
*   IF IOPRETRN>IOPEOF              /* I/O ERROR                     */
*     THEN                                                         0586
@RF00584 L     @15,IOPPTR                                          0586
         CLI   IOPRETRN(@15),4                                     0586
         BNH   @RF00586                                            0586
*     CDSELRC=MAX(CDSELRC,IOPRETRN);/* MAINTAIN ERROR RETURN CODES   */
         L     @14,@PC00012+4                                      0587
         L     @09,CDSELRC(,@14)                                   0587
         SLR   @08,@08                                             0587
         IC    @08,IOPRETRN(,@15)                                  0587
         CR    @09,@08                                             0587
         BNL   *+6
         LR    @09,@08                                             0587
         ST    @09,CDSELRC(,@14)                                   0587
*   RETURN;                                                        0588
@EL00012 DS    0H                                                  0588
@EF00012 DS    0H                                                  0588
@ER00012 LM    @14,@12,@SA00012                                    0588
         BR    @14                                                 0588
*   END CDSELEM;                                                   0589
         B     @EL00012                                            0589
*                                                                  0590
*/********************************************************************/
*/*                                                                  */
*/* BACKUP   - BACKUP A CDS ELEMENT ENTRY BY CALLING HMASMBUE        */
*/*                                                                  */
*/*            THE BACKUP ENTRY WILL BE ASSOCIATED WITH THE SYSMOD   */
*/*            REPRESENTED BY THE ICT PTF SECTION ENTRY POINTED TO   */
*/*            BY CPTF                                               */
*/*                                                                  */
*/*               NOTE - THE IOP POINTED TO BY IOPPTR IS EXPECTED    */
*/*               TO BE INITIALIZED WITH THE CDS ELEMENT ENTRY TO    */
*/*               BE BACKED UP ON THE SCDS                           */
*/*                                                                  */
*/********************************************************************/
*                                                                  0590
*BACKUP:                                                           0590
*   PROC(BKUPRC);                                                  0590
BACKUP   STM   @14,@12,@SA00013                                    0590
         MVC   @PC00013(4),0(@01)                                  0590
*   DCL                                                            0591
*     BKUPRC FIXED(31);             /* RETURN CODE                   */
*                                                                  0591
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE HMASMBUE PARM LIST (BUPPARM)                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0592
*   BUPPARM=''B;                    /* CLEAR PARM LIST               */
         XC    BUPPARM(20),BUPPARM                                 0592
*   BUPFUNCT=BUPEBKUP;              /* BACKUP CDS ELEMENT ENTRY      */
         MVI   BUPFUNCT,X'02'                                      0593
*   BUPTYPE=BUPDEL;                 /* ENTRY IS BEING DELETED        */
         MVI   BUPTYPE,X'03'                                       0594
*   BUPSYSMD=CPTF->ICTPTFS(1);      /* SYSMOD-ID (DELETING SYSMOD)   */
         L     @15,CPTF                                            0595
         MVC   BUPSYSMD(7),ICTPTFS(@15)                            0595
*   BUPSTYPE=CPTF->ICTPTYPE(1);     /* SYSMOD TYPE (DELETING  SYSMOD)*/
         MVC   BUPSTYPE(1),ICTPTYPE(@15)                           0596
*   BUPIOPAD=IOPPTR;                /* IOP WITH CDS ELEMENT ENTRY    */
         MVC   BUPIOPAD(4),IOPPTR                                  0597
*   BUPGTPAD=0;                     /* N/A                           */
         SLR   @15,@15                                             0598
         ST    @15,BUPGTPAD                                        0598
*   CALL HMASMBUE(BUPPARM);         /* BACKUP THE ENTRY              */
         L     @15,@CV01851                                        0599
         LA    @01,@AL00599                                        0599
         BALR  @14,@15                                             0599
*   RESPECIFY                                                      0600
*     REG15 RSTD;                                                  0600
*   BKUPRC=MAX(BKUPRC,REG15);       /* SAVE RETURN CODE              */
         L     @14,@PC00013                                        0601
         L     @09,BKUPRC(,@14)                                    0601
         CR    @09,REG15                                           0601
         BNL   *+6
         LR    @09,REG15                                           0601
         ST    @09,BKUPRC(,@14)                                    0601
*   RESPECIFY                                                      0602
*     REG15 UNRSTD;                                                0602
*   IF BKUPRC>=STOPPTF              /* SYSMOD TERMINATING ERROR      */
*     THEN                                                         0603
         CH    @09,@CH00110                                        0603
         BL    @RF00603                                            0603
*     DO;                                                          0604
*                                                                  0604
*       /*************************************************************/
*       /*                                                           */
*       /* MARK THE SYSMOD DELETING THIS ELEMENT NOGO                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0605
*       CPTF->ICTPNOGO(1)=ON;       /* SET NOGO FLAG                 */
         L     @01,CPTF                                            0605
         OI    ICTPNOGO(@01),B'01000000'                           0605
*     END;                                                         0606
*   ELSE                                                           0607
*     SBKUPD=ON;                    /* SCDS SYSMOD ENTRY HAS BEEN  0607
*                                      CREATED OR UPDATED            */
         B     @RC00603                                            0607
@RF00603 OI    SBKUPD,B'10000000'                                  0607
*   RETURN;                                                        0608
@EL00013 DS    0H                                                  0608
@EF00013 DS    0H                                                  0608
@ER00013 LM    @14,@12,@SA00013                                    0608
         BR    @14                                                 0608
*   END BACKUP;                                                    0609
         B     @EL00013                                            0609
*                                                                  0610
*/********************************************************************/
*/*                                                                  */
*/* LMPRCICT - FOR A GIVEN LOAD MODULE WHICH HAS BEEN DELETED,       */
*/*            MARK ANY ICT LMOD ENTRIES FOR THE SAME LOAD MODULE    */
*/*            AS "IN-PROCESS" SO THE COMPLETION PROCEDURE (HMASMCPL)*/
*/*            WILL KNOW THAT THE LMOD HAS BEEN PROCESSED            */
*/*                                                                  */
*/********************************************************************/
*                                                                  0610
*LMPRCICT:                                                         0610
*   PROC(DLMNAME);                                                 0610
LMPRCICT STM   @14,@12,12(@13)                                     0610
         MVC   @PC00014(4),0(@01)                                  0610
*   DCL                                                            0611
*     DLMNAME CHAR(8);              /* LOAD MODULE NAME              */
*   DCL                                                            0612
*     LN FIXED(15);                 /* INDEX - ICT LMOD SECTION      */
*   RESPECIFY                                                      0613
*     ICTLMOD BASED(CCAICLMD);      /* ADDRESS ENTIRE LMOD SECT      */
*                                                                  0613
*   /*****************************************************************/
*   /*                                                               */
*   /* GO THRU THE ICT LMOD LOOKING FOR THE LOAD MODULE NAME PASSED  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0614
*   DO LN=1 BY 1 WHILE ICTLEND(LN)^=ICTENDNT;                      0614
         LA    LN,1                                                0614
         B     @DE00614                                            0614
@DL00614 DS    0H                                                  0615
*     IF ICTLMNAM(LN)=DLMNAME       /* LMOD ENTRY MATCHES NAME PASSED*/
*       THEN                                                       0615
         LR    @03,LN                                              0615
         MH    @03,@CH01006                                        0615
         L     @15,CCAICLMD(,CCAPTR)                               0615
         L     @14,@PC00014                                        0615
         ST    @03,@TF00001                                        0615
         ALR   @03,@15                                             0615
         AL    @03,@CF02138                                        0615
         CLC   ICTLMNAM(8,@03),DLMNAME(@14)                        0615
         BNE   @RF00615                                            0615
*       DO;                                                        0616
*                                                                  0616
*         /***********************************************************/
*         /*                                                         */
*         /* MARK THE LMOD ENTRY AS "IN-PROCESS"                     */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0617
*         ICTLPROC(LN)=ON;          /* SET "IN-PROCESS" FLAG         */
         AL    @15,@TF00001                                        0617
         AL    @15,@CF02139                                        0617
         OI    ICTLPROC-8(@15),B'10000000'                         0617
*       END;                                                       0618
*   END;                                                           0619
@RF00615 AH    LN,@CH00085                                         0619
@DE00614 LR    @03,LN                                              0619
         MH    @03,@CH01006                                        0619
         L     @01,CCAICLMD(,CCAPTR)                               0619
         AL    @01,@CF02138                                        0619
         L     @03,ICTLEND(@03,@01)                                0619
         CL    @03,ICTENDNT                                        0619
         BNE   @DL00614                                            0619
*   RETURN;                                                        0620
@EL00014 DS    0H                                                  0620
@EF00014 DS    0H                                                  0620
@ER00014 LM    @14,@12,12(@13)                                     0620
         BR    @14                                                 0620
*   END LMPRCICT;                                                  0621
*                                                                  0622
*/********************************************************************/
*/*                                                                  */
*/* MDLPCHK  - DETERMINE THE SETTING OF ICTPMDLP FOR THE "CURRENT"   */
*/*            SYSMOD.  ICTPMDLP WILL BE SET IF AN SCDS BACKUP ENTRY */
*/*            WILL BE CREATED FOR THIS SYSMOD AT APPLY TIME.        */
*/*            AN SCDS BACKUP ENTRY WILL BE CREATED IF THERE ARE     */
*/*            DELETED ELEMENTS IN THE SYSMOD AND THE SYSMOD IS      */
*/*            NOT BEING DELETED (EITHER EXPLICITLY OR IMPLICITLY).  */
*/*                                                                  */
*/*           ON ENTRY: CPTF IS EXPECTED TO BE POINTING TO THE ICT   */
*/*                     PTF SECTION ENTRY REPRESENTING THE "CURRENT" */
*/*                     SYSMOD.                                      */
*/*                                                                  */
*/********************************************************************/
*                                                                  0622
*MDLPCHK:                                                          0622
*   PROC;                                                          0622
MDLPCHK  STM   @14,@12,12(@13)                                     0622
*   DCL                                                            0623
*     MDLINX FIXED(15);             /* INDEX INTO "CURRENT" SYSMOD'S
*                                      LIST OF ELEMENTS              */
*   RESPECIFY                                                      0624
*     ICTPTF BASED(CPTF);           /* ADDRESS "CURRENT" SYSMOD      */
*   RESPECIFY                                                      0625
*     ICTIXPF BASED(ICTPCHN(1));    /* ADDRESS LIST OF ELEMENTS      */
*   RESPECIFY                                                      0626
*     ICTMOD BASED(ICTIXPF(MDLINX));/* ADDRESS AN ELEMENT            */
*   ICTPMDLP(1)=OFF;                /* CLEAR MDLP FLAG IN ICT ENTRY  */
         L     @15,CPTF                                            0627
         NI    ICTPMDLP(@15),B'11111110'                           0627
*   IF ICTPDEXP(1)=OFF              /* SYSMOD NOT EXPLICITLY DELETED */
*       &ICTPDIMP(1)=OFF            /* SYSMOD NOT IMPLICITLY DELETED */
*     THEN                                                         0628
         TM    ICTPDEXP(@15),B'00110000'                           0628
         BNZ   @RF00628                                            0628
*     DO;                                                          0629
*                                                                  0629
*       /*************************************************************/
*       /*                                                           */
*       /* GO THRU MOD SECTION ENTRIES FOR THIS SYSMOD               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0630
*       DO MDLINX=1 BY 1 WHILE ICTIXP(MDLINX)^=ICTENDIX/* NOT END    */
*             &ICTPMDLP(1)=OFF;     /* FLAG NOT YET SET              */
         LA    MDLINX,1                                            0630
         B     @DE00630                                            0630
@DL00630 DS    0H                                                  0631
*         IF ICTMISEL(1)=ON         /* ELEMENT SELECTED              */
*             &ICTMIDEL(1)=ON       /* ... FOR DELETION              */
*           THEN                                                   0631
         LR    @03,MDLINX                                          0631
         SLA   @03,2                                               0631
         L     @15,CPTF                                            0631
         L     @01,ICTPCHN(,@15)                                   0631
         AL    @01,@CF02122                                        0631
         L     @03,ICTIXPF(@03,@01)                                0631
         TM    ICTMISEL(@03),B'11000000'                           0631
         BNO   @RF00631                                            0631
*           ICTPMDLP(1)=ON;         /* SET FLAG WHICH IMPLIES THAT AN
*                                      SCDS BACKUP ENTRY WILL BE   0632
*                                      CREATED AT APPLY TIME         */
         OI    ICTPMDLP(@15),B'00000001'                           0632
*       END;                                                       0633
@RF00631 AH    MDLINX,@CH00085                                     0633
@DE00630 LR    @03,MDLINX                                          0633
         SLA   @03,2                                               0633
         L     @15,CPTF                                            0633
         L     @01,ICTPCHN(,@15)                                   0633
         AL    @01,@CF02122                                        0633
         L     @03,ICTIXP(@03,@01)                                 0633
         CL    @03,ICTENDIX                                        0633
         BE    @DC00630                                            0633
         TM    ICTPMDLP(@15),B'00000001'                           0633
         BZ    @DL00630                                            0633
@DC00630 DS    0H                                                  0634
*     END;                                                         0634
*   RETURN;                                                        0635
@EL00015 DS    0H                                                  0635
@EF00015 DS    0H                                                  0635
@ER00015 LM    @14,@12,12(@13)                                     0635
         BR    @14                                                 0635
*   END MDLPCHK;                                                   0636
         B     @EL00015                                            0636
*                                                                  0637
*/********************************************************************/
*/*                                                                  */
*/* PTFENTRY - CALL HMASMSEC TO CREATE AN (A)CDS PTF ENTRY FOR       */
*/*            THE SYSMOD PASSED                                     */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0637
*PTFENTRY:                                                         0637
*   PROC(PTFICT,PTFENTRC);                                         0637
PTFENTRY STM   @14,@12,@SA00016                                    0637
         MVC   @PC00016(8),0(@01)                                  0637
*   DCL                                                            0638
*     PTFICT CHAR(*);               /* ICT PTF ENTRY                 */
*   DCL                                                            0639
*     PTFENTRC FIXED(31);           /* RETURN CODE PARAMETER         */
*   RESPECIFY                                                      0640
*     ICTPTF BASED(ADDR(PTFICT));   /* ADDRESS ENTRY PASSED          */
*   IF PTFENT=OFF                   /* PTF ENTRY NOT YET CREATED     */
*     THEN                                                         0641
         TM    PTFENT,B'01000000'                                  0641
         BNZ   @RF00641                                            0641
*     DO;                                                          0642
*       CALL HMASMSEC(ICTPTF(1),IOPPTR);/* CREATE (A)CDS PTF ENTRY 0643
*                                      FOR THIS SYSMOD "IN-ERROR"    */
         L     @15,@PC00016                                        0643
         ST    @15,@AL00001                                        0643
         LA    @15,IOPPTR                                          0643
         ST    @15,@AL00001+4                                      0643
         L     @15,@CV01856                                        0643
         LA    @01,@AL00001                                        0643
         BALR  @14,@15                                             0643
*       RESPECIFY                                                  0644
*         REG15 RSTD;                                              0644
*       PTFENTRC=MAX(PTFENTRC,REG15);/* MAINTAIN RETURN CODE         */
         L     @14,@PC00016+4                                      0645
         L     @09,PTFENTRC(,@14)                                  0645
         CR    @09,REG15                                           0645
         BNL   *+6
         LR    @09,REG15                                           0645
         ST    @09,PTFENTRC(,@14)                                  0645
*       RESPECIFY                                                  0646
*         REG15 UNRSTD;                                            0646
*       PTFENT=ON;                  /* (A)CDS PTF ENTRY CREATED      */
         OI    PTFENT,B'01000000'                                  0647
*     END;                                                         0648
*   RETURN;                                                        0649
@EL00016 DS    0H                                                  0649
@EF00016 DS    0H                                                  0649
@ER00016 LM    @14,@12,@SA00016                                    0649
         BR    @14                                                 0649
*   END PTFENTRY;                                                  0650
         B     @EL00016                                            0650
*                                                                  0651
*/********************************************************************/
*/*                                                                  */
*/* LMALIAS  - FIND LOAD MODULE ALIASES IN (A)CDS LMOD ENTRY AND     */
*/*            DELETE THEM FROM SYSLIB PASSED                        */
*/*                                                                  */
*/*            NOTE - THE IOP USED BY THIS PROCEDURE MUST BE         */
*/*                   INITIALIZED BY DOING A LOCATE FOR THE CDS      */
*/*                   LMOD ENTRY ASSOCIATED WITH THE LOAD MODULE     */
*/*                   WHOSE ALIASES ARE TO BE PROCESSED              */
*/*                                                                  */
*/********************************************************************/
*                                                                  0651
*LMALIAS:                                                          0651
*   PROC(LMDDN);                                                   0651
LMALIAS  STM   @14,@12,@SA00017                                    0651
         MVC   @PC00017(4),0(@01)                                  0651
*   DCL                                                            0652
*     LMDDN CHAR(8);                /* SYSLIB DDNAME                 */
*   DCL                                                            0653
*     1 LMDFLGS BIT(8),             /* LOCAL FLAGS                   */
*      2 LMDEOF BIT(1),             /* END-OF-FILE ON CDS LMOD ENTRY */
*      2 STMTCONT BIT(1),           /* LKED CNTRL STMT CONTINUED     */
*      2 * BIT(6);                  /*                               */
*   DCL                                                            0654
*     STMTTYPE CHAR(1);             /* LKED CNTRL STMT TYPE          */
*   DCL                                                            0655
*     ALIASTYP CHAR(1) CONSTANT('A');/* ALIAS CNTRL STMT             */
*   DCL                                                            0656
*     NOTYPE CHAR(1) CONSTANT('N'); /* ALL OTHER LKED STMTS          */
*   DCL                                                            0657
*     KEYALIAS CHAR(5) INIT('ALIAS');                              0657
*   DCL                                                            0658
*     BLANK8 CHAR(8) CONSTANT('        ');                         0658
*                                                                  0658
*   /*****************************************************************/
*   /*                                                               */
*   /* LKED CNTRL STMT INPUT BUFFER MAPPING                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0659
*   DCL                                                            0659
*     BUFINDX FIXED(15);            /* INPUT BUFFER INDEX            */
*   DCL                                                            0660
*     1 STMTBUF CHAR(80) BASED,     /* STMT INPUT BUFFER             */
*      2 STMT CHAR(71),             /* DATA FIELD                    */
*      2 STMT72 CHAR(1),            /* CONTINUATION FIELD            */
*      2 * CHAR(8);                 /* SEQUENCE NO. FIELD            */
*   DCL                                                            0661
*     COL16 FIXED(15) CONSTANT(16); /* START POSITION OF CONTD STMT  */
*                                                                  0661
*   /*****************************************************************/
*   /*                                                               */
*   /* ALIAS NAME ARRAY                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0662
*   DCL                                                            0662
*     MAXALIAS FIXED(31) CONSTANT(16);/* MAXIMUM NUMBER OF ALIASES 0662
*                                      ALLOWED BY LINKAGE EDITOR     */
*   DCL                                                            0663
*     OPARRAY(MAXALIAS) CHAR(8);    /* ARRAY OF ALIAS NAMES          */
*   DCL                                                            0664
*     OPINDX FIXED(15);             /* INDEX INTO OPARRAY            */
*   DCL                                                            0665
*     LMDRTN FIXED(31);             /* RETURN CODE COLLECTOR         */
*   RESPECIFY                                                      0666
*     STMTBUF BASED(IOPBUFAD);      /* ADDRESS INPUT BUFFER AREA     */
*   LMDFLGS=''B;                    /* CLEAR LOCAL FLAGS             */
         MVI   LMDFLGS,X'00'                                       0667
*   LMDRTN=0;                       /* CLEAR RETURN CODE             */
*                                                                  0668
         SLR   @05,@05                                             0668
         ST    @05,LMDRTN                                          0668
*   /*****************************************************************/
*   /*                                                               */
*   /* BLANK ALL ENTRIES IN ALIAS NAME ARRAY (OPARRAY)               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0669
*   DO OPINDX=1 BY 1 TO MAXALIAS;                                  0669
         LA    OPINDX,1                                            0669
@DL00669 DS    0H                                                  0670
*     OPARRAY(OPINDX)=BLANK8;       /* BLANK ALIAS NAME ENTRY        */
         LR    @05,OPINDX                                          0670
         SLA   @05,3                                               0670
         LA    @02,OPARRAY-8(@05)                                  0670
         MVC   0(8,@02),@CC01867                                   0670
*   END;                                                           0671
         AH    OPINDX,@CH00085                                     0671
         CH    OPINDX,@CH00186                                     0671
         BNH   @DL00669                                            0671
*   OPINDX=1;                       /* INITIALIZE ARRAY INDEX        */
*                                                                  0672
         LA    OPINDX,1                                            0672
*   /*****************************************************************/
*   /*                                                               */
*   /* POSITION TO LMOD MEMBER DATA IN CDS                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0673
*   IOPFUNCT=IOPPOSI;                                              0673
         L     @05,IOPPTR                                          0673
         MVI   IOPFUNCT(@05),X'02'                                 0673
*   CALL HMASMIO(HMASMIOP);                                        0674
         ST    @05,@AL00001                                        0674
         L     @15,@CV01854                                        0674
         LA    @01,@AL00001                                        0674
         BALR  @14,@15                                             0674
*   LMDRTN=MAX(LMDRTN,IOPRETRN);    /* MAINTAIN RETURN CODE          */
*                                                                  0675
         L     @05,IOPPTR                                          0675
         L     @02,LMDRTN                                          0675
         SLR   @15,@15                                             0675
         IC    @15,IOPRETRN(,@05)                                  0675
         CR    @02,@15                                             0675
         BNL   *+6
         LR    @02,@15                                             0675
         ST    @02,LMDRTN                                          0675
*   /*****************************************************************/
*   /*                                                               */
*   /* READ FIRST RECORD FROM LMOD MEMBER DATA ... IGNORE IT         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0676
*   IF LMDRTN=ZERO THEN                                            0676
         LTR   @02,@02                                             0676
         BNZ   @RF00676                                            0676
*     DO;                                                          0677
*       IOPFUNCT=IOPREAD;                                          0678
         MVI   IOPFUNCT(@05),X'01'                                 0678
*       CALL HMASMIO(HMASMIOP);                                    0679
         ST    @05,@AL00001                                        0679
         L     @15,@CV01854                                        0679
         LA    @01,@AL00001                                        0679
         BALR  @14,@15                                             0679
*       IF IOPRETRN=IOPEOF          /* END-OF-FILE ENCOUNTERED       */
*         THEN                                                     0680
         L     @05,IOPPTR                                          0680
         CLI   IOPRETRN(@05),4                                     0680
         BNE   @RF00680                                            0680
*         LMDEOF=ON;                /* SET END-OF-FILE FLAG          */
         OI    LMDEOF,B'10000000'                                  0681
*       ELSE                                                       0682
*         LMDRTN=MAX(LMDRTN,IOPRETRN);/* MAINTAIN RETURN CODE        */
         B     @RC00680                                            0682
@RF00680 L     @05,LMDRTN                                          0682
         L     @02,IOPPTR                                          0682
         SLR   @15,@15                                             0682
         IC    @15,IOPRETRN(,@02)                                  0682
         CR    @05,@15                                             0682
         BNL   *+6
         LR    @05,@15                                             0682
         ST    @05,LMDRTN                                          0682
*     END;                                                         0683
*                                                                  0683
@RC00680 DS    0H                                                  0684
*   /*****************************************************************/
*   /*                                                               */
*   /* READ SECOND RECORD FROM LMOD MEMBER DATA                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0684
*   IF LMDRTN=ZERO THEN                                            0684
@RF00676 ICM   @05,15,LMDRTN                                       0684
         BNZ   @RF00684                                            0684
*     DO;                                                          0685
*       IOPFUNCT=IOPREAD;                                          0686
         L     @05,IOPPTR                                          0686
         MVI   IOPFUNCT(@05),X'01'                                 0686
*       CALL HMASMIO(HMASMIOP);                                    0687
         ST    @05,@AL00001                                        0687
         L     @15,@CV01854                                        0687
         LA    @01,@AL00001                                        0687
         BALR  @14,@15                                             0687
*       IF IOPRETRN=IOPEOF          /* END-OF-FILE ENCOUNTERED       */
*         THEN                                                     0688
         L     @05,IOPPTR                                          0688
         CLI   IOPRETRN(@05),4                                     0688
         BNE   @RF00688                                            0688
*         LMDEOF=ON;                /* SET END-OF-FILE FLAG          */
         OI    LMDEOF,B'10000000'                                  0689
*       ELSE                                                       0690
*         LMDRTN=MAX(LMDRTN,IOPRETRN);/* MAINTAIN RETURN CODE        */
         B     @RC00688                                            0690
@RF00688 L     @05,LMDRTN                                          0690
         L     @02,IOPPTR                                          0690
         SLR   @15,@15                                             0690
         IC    @15,IOPRETRN(,@02)                                  0690
         CR    @05,@15                                             0690
         BNL   *+6
         LR    @05,@15                                             0690
         ST    @05,LMDRTN                                          0690
*     END;                                                         0691
@RC00688 DS    0H                                                  0692
*                                                                  0692
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS THE REMAINING RECORDS IN LMOD MEMBER                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0692
*   DO WHILE LMDRTN<STOPPTF         /* NO TERMINATING ERRORS         */
*         &LMDEOF=OFF;              /* NOT AT END-OF-FILE            */
@RF00684 B     @DE00692                                            0692
@DL00692 DS    0H                                                  0693
*     CALL STMTCHK(BUFINDX);        /* DETERMINE STATEMENT TYPE      */
         LA    @01,@AL00693                                        0693
         BAL   @14,STMTCHK                                         0693
*     IF STMTTYPE=ALIASTYP          /* "ALIAS" STATEMENT             */
*       THEN                                                       0694
         CLI   STMTTYPE,C'A'                                       0694
         BNE   @RF00694                                            0694
*       CALL OPERANDS(BUFINDX);     /* PICK UP ALIAS OPERANDS        */
         LA    @01,@AL00695                                        0695
         BAL   @14,OPERANDS                                        0695
*     STMTCONT=OFF;                 /* CLEAR STMT CONTINUED FLAG     */
@RF00694 NI    STMTCONT,B'10111111'                                0696
*     IF STMT(1)=' '                /* LKED CNTRL STMT (COL 1 BLANK) */
*         &STMT72^=' '              /* CONTINUED (COL 72 NON-BLANK)  */
*       THEN                                                       0697
         L     @05,IOPPTR                                          0697
         L     @05,IOPBUFAD(,@05)                                  0697
         CLI   STMT(@05),C' '                                      0697
         BNE   @RF00697                                            0697
         CLI   STMT72(@05),C' '                                    0697
         BE    @RF00697                                            0697
*       STMTCONT=ON;                /* SET STMT CONTIUNED FLAG       */
*                                                                  0698
         OI    STMTCONT,B'01000000'                                0698
*     /***************************************************************/
*     /*                                                             */
*     /* READ THE NEXT LMOD RECORD                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0699
*     IOPFUNCT=IOPREAD;                                            0699
@RF00697 L     @05,IOPPTR                                          0699
         MVI   IOPFUNCT(@05),X'01'                                 0699
*     CALL HMASMIO(HMASMIOP);                                      0700
         ST    @05,@AL00001                                        0700
         L     @15,@CV01854                                        0700
         LA    @01,@AL00001                                        0700
         BALR  @14,@15                                             0700
*     IF IOPRETRN=IOPEOF            /* END-OF-FILE ENCOUNTERED       */
*       THEN                                                       0701
         L     @05,IOPPTR                                          0701
         CLI   IOPRETRN(@05),4                                     0701
         BNE   @RF00701                                            0701
*       LMDEOF=ON;                  /* SET END-OF-FILE FLAG          */
         OI    LMDEOF,B'10000000'                                  0702
*     ELSE                                                         0703
*       LMDRTN=MAX(LMDRTN,IOPRETRN);/* MAINTAIN RETURN CODE          */
         B     @RC00701                                            0703
@RF00701 L     @05,LMDRTN                                          0703
         L     @02,IOPPTR                                          0703
         SLR   @15,@15                                             0703
         IC    @15,IOPRETRN(,@02)                                  0703
         CR    @05,@15                                             0703
         BNL   *+6
         LR    @05,@15                                             0703
         ST    @05,LMDRTN                                          0703
*   END;                                                           0704
*                                                                  0704
@RC00701 DS    0H                                                  0704
@DE00692 L     @05,LMDRTN                                          0704
         CH    @05,@CH00110                                        0704
         BNL   @DC00692                                            0704
         TM    LMDEOF,B'10000000'                                  0704
         BZ    @DL00692                                            0704
@DC00692 DS    0H                                                  0705
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE ALL ALIAS NAMES FROM THE DDNAME PASSED                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0705
*   DO OPINDX=1 BY 1 TO MAXALIAS    /* GO THUR OPARRAY OF ALIASES    */
*         WHILE(OPARRAY(OPINDX)^=BLANK8/* NOT AT END OF ALIASES      */
*         &LMDRTN<STOPPTF);         /* NO TERMINATING ERRORS         */
         LA    OPINDX,1                                            0705
@DL00705 LR    @05,OPINDX                                          0705
         SLA   @05,3                                               0705
         LA    @02,OPARRAY-8(@05)                                  0705
         CLC   0(8,@02),@CC01867                                   0705
         BE    @DC00705                                            0705
         L     @02,LMDRTN                                          0705
         CH    @02,@CH00110                                        0705
         BNL   @DC00705                                            0705
*     CALL DELMEMBR(OPARRAY(OPINDX),/* ALIAS NAME TO BE DELETED      */
*         IOPLMD,                   /* ELEMENT TYPE - LOAD MODULE    */
*         LMDDN,                    /* DDNAME OF DATASET             */
*         LMDRTN);                  /* RETURN CODE PARAMETER         */
         LA    @05,OPARRAY-8(@05)                                  0706
         ST    @05,@AL00001                                        0706
         LA    @05,@CH00181+1                                      0706
         ST    @05,@AL00001+4                                      0706
         L     @05,@PC00017                                        0706
         ST    @05,@AL00001+8                                      0706
         LA    @05,LMDRTN                                          0706
         ST    @05,@AL00001+12                                     0706
         LA    @01,@AL00001                                        0706
         BAL   @14,DELMEMBR                                        0706
*   END;                                                           0707
         AH    OPINDX,@CH00085                                     0707
         CH    OPINDX,@CH00186                                     0707
         BNH   @DL00705                                            0707
@DC00705 DS    0H                                                  0708
*   RETURN;                                                        0708
@EL00017 DS    0H                                                  0708
@EF00017 DS    0H                                                  0708
@ER00017 LM    @14,@12,@SA00017                                    0708
         BR    @14                                                 0708
*                                                                  0709
*/********************************************************************/
*/*                                                                  */
*/* STMTCHK  - DETERMINE THE TYPE OF STATEMENT IN THE INPUT BUFFER   */
*/*                                                                  */
*/********************************************************************/
*                                                                  0709
*STMTCHK:                                                          0709
*   PROC(STEND);                                                   0709
STMTCHK  STM   @14,@12,12(@13)                                     0709
         MVC   @PC00018(4),0(@01)                                  0709
*   DCL                                                            0710
*     STEND FIXED(15);              /* INDEX OF THE CHARACTER      0710
*                                      FOLLOWING THE LKED CNTRL STMT
*                                      FOUND                         */
*   DCL                                                            0711
*     ST FIXED(15);                 /* LOCAL INDEX                   */
*   DCL                                                            0712
*     STE FIXED(15);                /* LOCAL INDEX                   */
*   DCL                                                            0713
*     KEYL FIXED(15);               /* KEYWORD LENGTH                */
*   IF STMTCONT=ON                  /* CONTINUED LKED STATEMENT      */
*     THEN                                                         0714
         TM    STMTCONT,B'01000000'                                0714
         BNO   @RF00714                                            0714
*     STEND=COL16;                  /* OPERANDS START IN COLUMN 16   */
         L     @15,@PC00018                                        0715
         MVC   STEND(2,@15),@CH00186                               0715
*   ELSE                                                           0716
*     DO;                                                          0716
*                                                                  0716
         B     @RC00714                                            0716
@RF00714 DS    0H                                                  0717
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE THE TYPE OF STATEMENT IN STMTBUF                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0717
*       STMTTYPE=NOTYPE;            /* INITIALIZE TO NO VALID TYPE   */
         MVI   STMTTYPE,C'N'                                       0717
*       IF STMTBUF(1)=' '           /* LKED CNTRL STMT (BLANK COL 1) */
*         THEN                                                     0718
         L     @01,IOPPTR                                          0718
         L     @01,IOPBUFAD(,@01)                                  0718
         CLI   STMTBUF(@01),C' '                                   0718
         BNE   @RF00718                                            0718
*         DO;                                                      0719
*           ST=1;                   /* START IN COLUMN 1             */
*                                                                  0720
         LA    ST,1                                                0720
*           /*********************************************************/
*           /*                                                       */
*           /* FIND THE FIRST NON-BLANK                              */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0721
*           DO WHILE STMT(ST)=' '&ST<=LENGTH(STMT);                0721
         B     @DE00721                                            0721
@DL00721 DS    0H                                                  0722
*             ST=ST+1;              /* INCREMENT TO NEXT POSITION    */
         AH    ST,@CH00085                                         0722
*           END;                                                   0723
*                                                                  0723
@DE00721 L     @03,IOPPTR                                          0723
         L     @03,IOPBUFAD(,@03)                                  0723
         ALR   @03,ST                                              0723
         BCTR  @03,0                                               0723
         CLI   STMT(@03),C' '                                      0723
         BNE   @DC00721                                            0723
         CH    ST,@CH01036                                         0723
         BNH   @DL00721                                            0723
@DC00721 DS    0H                                                  0724
*           /*********************************************************/
*           /*                                                       */
*           /* FIND THE NEXT BLANK                                   */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0724
*           STE=ST;                 /* START AT 1ST NON-BLANK        */
         LR    STE,ST                                              0724
*           DO WHILE STMT(STE)^=' '&STE<=LENGTH(STMT);             0725
         B     @DE00725                                            0725
@DL00725 DS    0H                                                  0726
*             STE=STE+1;            /* INCREMENT TO NEXT POSITION    */
         AH    STE,@CH00085                                        0726
*           END;                                                   0727
@DE00725 L     @01,IOPPTR                                          0727
         L     @01,IOPBUFAD(,@01)                                  0727
         ALR   @01,STE                                             0727
         BCTR  @01,0                                               0727
         CLI   STMT(@01),C' '                                      0727
         BE    @DC00725                                            0727
         CH    STE,@CH01036                                        0727
         BNH   @DL00725                                            0727
@DC00725 DS    0H                                                  0728
*           KEYL=STE-ST;            /* LENGTH OF KEYWORD FOUND       */
         LR    KEYL,STE                                            0728
         SLR   KEYL,ST                                             0728
*           IF KEYL>0               /* NOT AT END-OF-STMT            */
*             THEN                                                 0729
         LTR   KEYL,KEYL                                           0729
         BNP   @RF00729                                            0729
*             DO;                                                  0730
*                                                                  0730
*               /*****************************************************/
*               /*                                                   */
*               /* SEE IF KEYWORD FOUND IS "ALIAS"                   */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0731
*               IF KEYL=LENGTH(KEYALIAS)/* PROPER LENGTH             */
*                   &STMT(ST:ST+KEYL-1)=KEYALIAS(1:KEYL-1)/* "ALIAS" */
*                 THEN                                             0731
         CH    KEYL,@CH00128                                       0731
         BNE   @RF00731                                            0731
         L     @05,IOPPTR                                          0731
         L     @05,IOPBUFAD(,@05)                                  0731
         LR    @15,KEYL                                            0731
         BCTR  @15,0                                               0731
         BCTR  @15,0                                               0731
         ALR   @05,ST                                              0731
         BCTR  @05,0                                               0731
         EX    @15,@SC02141                                        0731
         BNE   @RF00731                                            0731
*                 DO;                                              0732
*                   STMTTYPE=ALIASTYP;/* SET STMT TYPE INDICATOR     */
         MVI   STMTTYPE,C'A'                                       0733
*                   STEND=STE;      /* SET INDEX TO END OF KYWRD +1  */
         L     @02,@PC00018                                        0734
         STH   STE,STEND(,@02)                                     0734
*                 END;                                             0735
*             END;                                                 0736
*         END;                                                     0737
*     END;                                                         0738
*   RETURN;                                                        0739
@EL00018 DS    0H                                                  0739
@EF00018 DS    0H                                                  0739
@ER00018 LM    @14,@12,12(@13)                                     0739
         BR    @14                                                 0739
*   END STMTCHK;                                                   0740
         B     @EL00018                                            0740
*                                                                  0741
*/********************************************************************/
*/*                                                                  */
*/* OPERANDS - FILL IN THE OPARRAY WITH THE ALIAS NAMES ON THE       */
*/*            LKED CONTROL STATEMENT                                */
*/*                                                                  */
*/********************************************************************/
*                                                                  0741
*OPERANDS:                                                         0741
*   PROC(STRTINDX);                                                0741
OPERANDS STM   @14,@02,12(@13)                                     0741
         STM   @04,@12,36(@13)                                     0741
         MVC   @PC00019(4),0(@01)                                  0741
*   DCL                                                            0742
*     STRTINDX FIXED(15);           /* INDEX OF THE CHARACTER IN   0742
*                                      STMTBUF WHERE OPERANDS START  */
*   DCL                                                            0743
*     OPSTART FIXED(15);            /* 1ST CHARACTER OF AN OPERAND   */
*   DCL                                                            0744
*     CHARINDX FIXED(15);           /* INDEX TO CHAR IN STMT         */
*   CHARINDX=STRTINDX;              /* STARTING INDEX                */
         L     @15,@PC00019                                        0745
         LH    CHARINDX,STRTINDX(,@15)                             0745
*   DO WHILE CHARINDX<=LENGTH(STMT);                               0746
*                                                                  0746
         B     @DE00746                                            0746
@DL00746 DS    0H                                                  0747
*     /***************************************************************/
*     /*                                                             */
*     /* FIND THE FIRST NON-BLANK                                    */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0747
*     DO WHILE STMT(CHARINDX)=' '&CHARINDX<=LENGTH(STMT);          0747
         B     @DE00747                                            0747
@DL00747 DS    0H                                                  0748
*       CHARINDX=CHARINDX+1;        /* INCREMENT TO NEXT POSITION    */
         AH    CHARINDX,@CH00085                                   0748
*     END;                                                         0749
@DE00747 L     @01,IOPPTR                                          0749
         L     @01,IOPBUFAD(,@01)                                  0749
         ALR   @01,CHARINDX                                        0749
         BCTR  @01,0                                               0749
         CLI   STMT(@01),C' '                                      0749
         BNE   @DC00747                                            0749
         CH    CHARINDX,@CH01036                                   0749
         BNH   @DL00747                                            0749
@DC00747 DS    0H                                                  0750
*     OPSTART=CHARINDX;             /* SAVE START OF OPERAND         */
*                                                                  0750
         LR    OPSTART,CHARINDX                                    0750
*     /***************************************************************/
*     /*                                                             */
*     /* FIND THE NEXT BLANK OR COMMA                                */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0751
*     DO WHILE STMT(CHARINDX)^=' '  /* NOT A BLANK                   */
*           &STMT(CHARINDX)^=','    /* NOT A COMMA                   */
*           &CHARINDX<=LENGTH(STMT);/* NOT AT END                    */
         B     @DE00751                                            0751
@DL00751 DS    0H                                                  0752
*       CHARINDX=CHARINDX+1;        /* INCREMENT TO NEXT POSITION    */
         AH    CHARINDX,@CH00085                                   0752
*     END;                                                         0753
@DE00751 L     @05,IOPPTR                                          0753
         L     @05,IOPBUFAD(,@05)                                  0753
         LR    @01,@05                                             0753
         ALR   @01,CHARINDX                                        0753
         BCTR  @01,0                                               0753
         CLI   STMT(@01),C' '                                      0753
         BE    @DC00751                                            0753
         ALR   @05,CHARINDX                                        0753
         BCTR  @05,0                                               0753
         CLI   STMT(@05),C','                                      0753
         BE    @DC00751                                            0753
         CH    CHARINDX,@CH01036                                   0753
         BNH   @DL00751                                            0753
@DC00751 DS    0H                                                  0754
*     IF(CHARINDX-OPSTART)>0        /* NOT AT END-OF-STMT            */
*         &(CHARINDX-OPSTART)<=LENGTH(OPARRAY)/* OPERAND NOT TOO LONG*/
*         &OPINDX<=MAXALIAS         /* ROOM IN OPARRAY               */
*       THEN                                                       0754
         LR    @05,CHARINDX                                        0754
         SLR   @05,OPSTART                                         0754
         LTR   @05,@05                                             0754
         BNP   @RF00754                                            0754
         CH    @05,@CH00110                                        0754
         BH    @RF00754                                            0754
         CH    OPINDX,@CH00186                                     0754
         BH    @RF00754                                            0754
*       DO;                                                        0755
*         OPARRAY(OPINDX)=STMT(OPSTART:CHARINDX-1);                0756
         LR    @15,OPINDX                                          0756
         SLA   @15,3                                               0756
         LA    @14,OPARRAY-8(@15)                                  0756
         MVI   1(@14),C' '                                         0756
         MVC   2(6,@14),1(@14)                                     0756
         BCTR  @05,0                                               0756
         L     @01,IOPPTR                                          0756
         L     @01,IOPBUFAD(,@01)                                  0756
         ALR   @01,OPSTART                                         0756
         BCTR  @01,0                                               0756
         EX    @05,@SM02143                                        0756
*         OPINDX=OPINDX+1;          /* INCREMENT POSITION IN ARRAY   */
         AH    OPINDX,@CH00085                                     0757
*       END;                                                       0758
*     IF STMT(CHARINDX)=' '         /* STOPPED ON A BLANK            */
*       THEN                                                       0759
@RF00754 L     @01,IOPPTR                                          0759
         L     @01,IOPBUFAD(,@01)                                  0759
         ALR   @01,CHARINDX                                        0759
         BCTR  @01,0                                               0759
         CLI   STMT(@01),C' '                                      0759
         BNE   @RF00759                                            0759
*       CHARINDX=LENGTH(STMT)+1;    /* TERMINATE LOOP                */
         LA    CHARINDX,72                                         0760
*     ELSE                                                         0761
*       CHARINDX=CHARINDX+1;        /* MOVE OVER COMMA. NEXT OPERAND */
         B     @RC00759                                            0761
@RF00759 AH    CHARINDX,@CH00085                                   0761
*   END;                                                           0762
@RC00759 DS    0H                                                  0762
@DE00746 CH    CHARINDX,@CH01036                                   0762
         BNH   @DL00746                                            0762
*   RETURN;                                                        0763
@EL00019 DS    0H                                                  0763
@EF00019 DS    0H                                                  0763
@ER00019 LM    @14,@02,12(@13)                                     0763
         LM    @04,@12,36(@13)                                     0763
         BR    @14                                                 0763
*   END OPERANDS;                                                  0764
*   END LMALIAS;                                                   0765
*   END HMASMDLE                                                   0766
*                                                                  0766
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMICT)                                       */
*/*%INCLUDE SYSLIB  (HMASMGTP)                                       */
*/*%INCLUDE SYSLIB  (HMASMSET)                                       */
*/*%INCLUDE SYSLIB  (HMASMMGP)                                       */
*                                                                  0766
*       ;                                                          0766
@DATA    DS    0H
@CH00085 DC    H'1'
@CH00181 DC    H'2'
@CH00128 DC    H'5'
@CH00110 DC    H'8'
@CH00432 DC    H'9'
@CH00033 DC    H'10'
@CH00032 DC    H'12'
@CH00186 DC    H'16'
@CH00460 DC    H'25'
@CH00470 DC    H'30'
@CH00040 DC    H'31'
@CH01006 DC    H'54'
@CH01036 DC    H'71'
@CH02104 DC    H'116'
@CH02105 DC    H'144'
@CH00621 DC    H'255'
@SC02141 CLC   STMT(0,@05),KEYALIAS
@SM02143 MVC   0(0,@14),STMT(@01)
         DS    0F
@AL00241 DC    A(SYSMODRC)             LIST WITH   1 ARGUMENT(S)
@AL00248 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00599 DC    A(BUPPARM)              LIST WITH   1 ARGUMENT(S)
@AL00259 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00271 DC    A(SYSMCPL)              LIST WITH   1 ARGUMENT(S)
@AL00273 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00458 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00472 DC    A(HMASMGTP+56)          LIST WITH   1 ARGUMENT(S)
@AL00350 DC    A(LISTPARM)             LIST WITH   3 ARGUMENT(S)
@AL00369 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00391 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00395 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00399 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00413 DC    A(HMASMGTP+28)          LIST WITH   1 ARGUMENT(S)
@AL00359 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00361 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00364 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00367 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00493 DC    A(HMASMGTP)             LIST WITH   1 ARGUMENT(S)
@AL00404 DC    A(XRF2MOD)              LIST WITH   2 ARGUMENT(S)
         DC    A(MPTR)
@AL00470 DC    A(HMASMMGP)             LIST WITH   1 ARGUMENT(S)
@AL00529 EQU   *                       LIST WITH   3 ARGUMENT(S)
@AL00543 DC    A(CURNTLMD)             LIST WITH   1 ARGUMENT(S)
         DC    A(@CH00181+1)
@AL00531 DC    A(LMSYSLIB)             LIST WITH   1 ARGUMENT(S)
@AL00693 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00695 DC    A(BUFINDX)              LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@SA00002 DS    15F
@PC00002 DS    2F
@SA00003 DS    15F
@PC00003 DS    2F
@SA00004 DS    15F
@PC00004 DS    1F
@PC00010 DS    2F
@SA00005 DS    15F
@PC00005 DS    2F
@PC00011 DS    2F
@SA00009 DS    15F
@PC00009 DS    1F
@SA00017 DS    15F
@PC00017 DS    1F
@PC00014 DS    1F
@PC00018 DS    1F
@PC00019 DS    1F
@SA00008 DS    0F
@PC00008 EQU   @SA00008+60
@SA00006 DS    0F
@PC00006 EQU   @SA00006+60
@SA00007 DS    0F
@PC00007 EQU   @SA00007+60
@SA00013 DS    0F
@PC00013 EQU   @SA00013+60
@SA00012 DS    0F
@PC00012 EQU   @SA00012+60
@SA00016 DS    0F
@PC00016 EQU   @SA00016+60
         DS    19F
@AL00001 DS    4A
@TF00001 DS    F
         DS    0F
@CF02134 DC    F'-144'
@CF02135 DC    F'-135'
@CF02136 DC    F'-133'
@CF02120 DC    F'-116'
@CF02118 DC    F'-108'
@CF02119 DC    F'-103'
@CF02123 DC    F'-102'
@CF02125 DC    F'-99'
@CF02138 DC    F'-54'
@CF02121 DC    F'-52'
@CF02137 DC    F'-48'
@CF02139 DC    F'-46'
@CF02127 DC    F'-8'
@CF02122 DC    F'-4'
@CV01851 DC    V(HMASMBUE)
@CV01852 DC    V(HMASMCPL)
@CV01853 DC    V(HMASMGTA)
@CV01854 DC    V(HMASMIO)
@CV01855 DC    V(HMASMMSG)
@CV01856 DC    V(HMASMSEC)
@CV01857 DC    V(HMASMXRF)
         DS    0D
IOPPTR   DS    A
SYSMODRC DS    F
PPARM    DS    A
MPTR     DS    A
LMDRTN   DS    F
BUFINDX  DS    H
SRCMACTP DS    FL1
@CC01867 DC    C'        '
@CC01872 DC    C'SYSPUNCH'
         DS    CL1
ICTENDCH DC    X'FFFFFFFF'
HMASMSET DS    CL12
         ORG   HMASMSET
SELSTENT DS    CL10
         ORG   SELSTENT
SELSTFLG DS    BL2
         ORG   SELSTFLG
@NM00228 DS    BL1
SEMCS    EQU   SELSTFLG+0
SESMD    EQU   SELSTFLG+0
SESRC    DS    BL1
SEDLB    EQU   SELSTFLG+1
SEMOD    EQU   SELSTFLG+1
SEMAC    EQU   SELSTFLG+1
SELMD    EQU   SELSTFLG+1
SEASM    EQU   SELSTFLG+1
SEFMD    EQU   SELSTFLG+1
SESYS    EQU   SELSTFLG+1
         ORG   SELSTENT+2
SENAME   DS    CL8
         ORG   SENAME
SESMDNO  DS    CL7
         ORG   SESMDNO
SEPTFNO  DS    CL7
         ORG   SENAME+7
@NM00229 DS    CL1
         ORG   HMASMSET+10
SEFLAGS  DS    BL1
         ORG   SEFLAGS
SEGROUP  DS    BL1
SESELECT EQU   SEFLAGS+0
SEEXCLUD EQU   SEFLAGS+0
SENOJCL  EQU   SEFLAGS+0
SEFMID   EQU   SEFLAGS+0
@NM00230 EQU   SEFLAGS+0
SEFOUND  EQU   SEFLAGS+0
         ORG   HMASMSET+11
SEFLAG2  DS    BL1
         ORG   SEFLAG2
SEFLAG2A DS    BL1
SEFLAG2B EQU   SEFLAG2+0
SEFLAG2C EQU   SEFLAG2+0
SEFLAG2D EQU   SEFLAG2+0
SEFLAG2E EQU   SEFLAG2+0
SEFLAG2F EQU   SEFLAG2+0
SEFLAG2G EQU   SEFLAG2+0
SEFLAG2H EQU   SEFLAG2+0
         ORG   HMASMSET+12
XRFRCD   DS    CL30
         ORG   XRFRCD
XRFKEY1  DS    CL29
         ORG   XRFKEY1
XRFETYPE DS    FL1
XRFENAME DS    CL8
XRFRTYPE DS    FL1
XRFUKEY1 DS    FL1
@NM00231 DS    CL18
         ORG   XRFRCD+29
XRFNKEY1 DS    CL1
         ORG   XRFNKEY1
XRFFLAG1 DS    BL1
         ORG   XRFFLAG1
XRFFLGA  DS    BL1
XRFFLGB  EQU   XRFFLAG1+0
XRFFLGC  EQU   XRFFLAG1+0
XRFFLGD  EQU   XRFFLAG1+0
XRFFLGE  EQU   XRFFLAG1+0
XRFFLGF  EQU   XRFFLAG1+0
XRFFLGG  EQU   XRFFLAG1+0
XRFFLGH  EQU   XRFFLAG1+0
         ORG   XRFRCD+30
LISTPARM DS    CL19
         ORG   LISTPARM
LISTPRM1 DS    BL2
         ORG   LISTPRM1
LISTALL1 DS    BL1
LISTCDS  EQU   LISTPRM1+0
LISTACDS EQU   LISTPRM1+0
LISTSCDS EQU   LISTPRM1+0
LISTCRQ  EQU   LISTPRM1+0
LISTACRQ EQU   LISTPRM1+0
LISTPTS  EQU   LISTPRM1+0
@NM00252 EQU   LISTPRM1+0
LISTLOG  EQU   LISTPRM1+1
@NM00253 EQU   LISTPRM1+1
         ORG   LISTPARM+2
LISTPRM2 DS    BL2
         ORG   LISTPRM2
LISTALL2 DS    BL1
LISTASM  EQU   LISTPRM2+0
LISTLMD  EQU   LISTPRM2+0
LISTMAC  EQU   LISTPRM2+0
LISTMOD  EQU   LISTPRM2+0
LISTSRC  EQU   LISTPRM2+0
LISTDLB  EQU   LISTPRM2+0
LISTSYS  EQU   LISTPRM2+0
LISTSMD  DS    BL1
LISTFMD  EQU   LISTPRM2+1
LISTMCS  EQU   LISTPRM2+1
@NM00254 EQU   LISTPRM2+1
         ORG   LISTPARM+4
LISTPRM3 DS    BL2
         ORG   LISTPRM3
LISTALL3 DS    BL1
LISTNOAP EQU   LISTPRM3+0
LISTNOAC EQU   LISTPRM3+0
LISTRES  EQU   LISTPRM3+0
LISTFUNC EQU   LISTPRM3+0
LISTPTF  EQU   LISTPRM3+0
LISTAPAR EQU   LISTPRM3+0
LISTUSER EQU   LISTPRM3+0
LISTSUP  DS    BL1
LISTNSUP EQU   LISTPRM3+1
LISTDEL  EQU   LISTPRM3+1
LISTBYP  EQU   LISTPRM3+1
LISTERR  EQU   LISTPRM3+1
@NM00255 EQU   LISTPRM3+1
         ORG   LISTPARM+6
LISTPRM4 DS    BL1
         ORG   LISTPRM4
LISTSEL  DS    BL1
LISTXREF EQU   LISTPRM4+0
@NM00256 EQU   LISTPRM4+0
         ORG   LISTPARM+7
LISTDATE DS    CL12
         ORG   LISTDATE
LISTBDAT DS    CL6
         ORG   LISTBDAT
LISTBMM  DS    CL2
LISTBDD  DS    CL2
LISTBYY  DS    CL2
         ORG   LISTDATE+6
LISTEDAT DS    CL6
         ORG   LISTEDAT
LISTEMM  DS    CL2
LISTEDD  DS    CL2
LISTEYY  DS    CL2
         ORG   LISTPARM+19
         DS    CL3
BUPPARM  DS    CL20
         ORG   BUPPARM
BUPFUNCT DS    FL1
BUPTYPE  DS    FL1
BUPSTYPE DS    FL1
BUPFLAGS DS    BL1
         ORG   BUPFLAGS
BUPREDO  DS    BL1
@NM00257 EQU   BUPFLAGS+0
         ORG   BUPPARM+4
BUPSYSMD DS    CL7
@NM00258 DS    CL1
BUPIOPAD DS    AL4
BUPGTPAD DS    AL4
         ORG   BUPPARM+20
HMASMMGP DS    CL24
         ORG   HMASMMGP
MGPFIXED DS    CL12
         ORG   MGPFIXED
MGPCLEAR DS    CL6
         ORG   MGPCLEAR
MGPMGNO1 DS    FL2
MGPMGNO2 DS    FL2
MGPMGNO3 DS    FL2
         ORG   MGPFIXED+6
MGPFLAGS DS    BL2
         ORG   MGPFLAGS
MGPPRINT DS    BL1
MGPLIST  EQU   MGPFLAGS+0
MGPRPT   EQU   MGPFLAGS+0
MGPHLDS  EQU   MGPFLAGS+0
MGPWTOR  EQU   MGPFLAGS+0
MGPWTO   EQU   MGPFLAGS+0
MGPWTP   EQU   MGPFLAGS+0
@NM00259 EQU   MGPFLAGS+0
         ORG   MGPFIXED+8
MGPTYPE  DS    FL1
@NM00260 DS    CL3
         ORG   HMASMMGP+12
MGPVAR   DS    CL12
         ORG   MGPVAR
MGPVARPT DS    3A
         ORG   HMASMMGP+24
ZERODDN  DC    X'0000000000000000'
TARGETDD DS    CL8
SYSMCPL  DS    CL1
         DS    CL3
@NM00261 DS    CL5
         ORG   @NM00261
CPTF     DS    AL4
DLEFLAGS DS    BL1
         ORG   DLEFLAGS
SBKUPD   DS    BL1
PTFENT   EQU   DLEFLAGS+0
@NM00262 EQU   DLEFLAGS+0
         ORG   @NM00261+5
@NM00263 DS    CL9
         ORG   @NM00263
CURNTLMD DS    CL8
DLLMFLGS DS    BL1
         ORG   DLLMFLGS
ALLMODS  DS    BL1
ALLIDEL  EQU   DLLMFLGS+0
LMDENTRY EQU   DLLMFLGS+0
LMBKUP   EQU   DLLMFLGS+0
@NM00264 EQU   DLLMFLGS+0
         ORG   @NM00263+9
TSTRCRD  DS    CL16
         ORG   TSTRCRD
TSTMEMNM DS    CL8
TSTDDNAM DS    CL8
         ORG   TSTRCRD+16
LOCIOP   DS    CL68
LMSYSLIB DS    CL8
LMDFLGS  DS    BL1
         ORG   LMDFLGS
LMDEOF   DS    BL1
STMTCONT EQU   LMDFLGS+0
@NM00265 EQU   LMDFLGS+0
         ORG   LMDFLGS+1
STMTTYPE DS    CL1
KEYALIAS DC    CL5'ALIAS'
         DS    CL3
HMASMGTP DS    CL28
         ORG   HMASMGTP+0
GTPFUNCT DS    FL1
GTPRETRN DS    FL1
@NM00225 DS    CL2
GTPRCDLN DS    FL2
GTPKEYLN DS    FL2
GTPWKAD  DS    AL4
GTPBUFAD DS    AL4
GTPRESTR DS    CL10
         ORG   GTPRESTR+0
GTPPAG   DS    AL4
GTPRCD   DS    AL4
GTPPOS   DS    FL2
         ORG   HMASMGTP+26
GTPFLGS1 DS    BL1
         ORG   GTPFLGS1+0
GTPNOSPM DS    BL1
GTPRCDNF EQU   GTPFLGS1+0
@NM00226 EQU   GTPFLGS1+0
GTPPSIZE EQU   GTPFLGS1+0
         ORG   HMASMGTP+27
@NM00227 DS    FL1
         ORG   HMASMGTP+84
OPARRAY  DS    16CL8
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CHARINDX EQU   @02
OPSTART  EQU   @04
KEYL     EQU   @04
STE      EQU   @03
ST       EQU   @02
OPINDX   EQU   @03
MDLINX   EQU   @02
LN       EQU   @02
JJ       EQU   @02
NN       EQU   @02
LM       EQU   @02
LL       EQU   @02
KK       EQU   @02
MM       EQU   @02
K        EQU   @03
J        EQU   @02
I        EQU   @02
LOCALIOP EQU   @04
HIGHDLE  EQU   @05
CCAPTR   EQU   @11
REG15    EQU   @15
RTNCODE  EQU   @15
RTNREG   EQU   @14
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAIOPTR EQU   CCAFIOP
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAICT   EQU   CCAFICT
CCAICPTF EQU   CCAFICT+4
CCAICMOD EQU   CCAFICT+8
CCAICLMD EQU   CCAFICT+12
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00009 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAAPPLY EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAFLAG2 EQU   CCAFFUNC+11
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCATYPEA EQU   0
CCABLDLA EQU   0
@NM00025 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00027 EQU   CCABLDLL
CCALKDRC EQU   @NM00027+20
@NM00029 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00029+20
@NM00031 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00031+20
@NM00033 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00033+20
@NM00035 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00035+20
@NM00037 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00037+20
@NM00039 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00039+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
@NM00043 EQU   HMASMIOP+12
@NM00044 EQU   @NM00043
IOPDDNAM EQU   HMASMIOP+24
IOPDELDD EQU   IOPDDNAM
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00154 EQU   IOPQSMIF
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPBS02  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
HMASMICT EQU   0
ICTCORE  EQU   HMASMICT
ICTPSPLN EQU   ICTCORE
ICTMSPLN EQU   ICTCORE+4
ICTLSPLN EQU   ICTCORE+8
ICTGMSPL EQU   0
ICTPTF   EQU   0
ICTPTFS  EQU   ICTPTF
ICTPEND  EQU   ICTPTFS
ICTPFLG1 EQU   ICTPTF+7
ICTPFLG3 EQU   ICTPTF+8
ICTPPROC EQU   ICTPFLG3
ICTPNOGO EQU   ICTPFLG3
ICTPFLG5 EQU   ICTPTF+9
ICTPMDLP EQU   ICTPFLG5+1
ICTPFLG6 EQU   ICTPTF+11
ICTPFLF  EQU   ICTPFLG6
ICTPFLG2 EQU   ICTPTF+12
ICTPFLG4 EQU   ICTPTF+13
ICTPDEXP EQU   ICTPFLG4
ICTPDIMP EQU   ICTPFLG4
ICTPGELM EQU   ICTPFLG4
ICTPFLG8 EQU   ICTPTF+14
ICTPDCPL EQU   ICTPFLG8
ICTPFLG9 EQU   ICTPTF+15
@NM00181 EQU   ICTPFLG9
ICTPFLGA EQU   ICTPTF+16
ICTPUSR1 EQU   ICTPFLGA
ICTPTYPE EQU   ICTPTF+17
ICTPCHN  EQU   ICTPTF+64
ICTPRCHN EQU   ICTPTF+68
ICTPSCHN EQU   ICTPTF+72
ICTPPCHN EQU   ICTPTF+76
ICTPICHN EQU   ICTPTF+80
ICTPNCHN EQU   ICTPTF+84
ICTPVCHN EQU   ICTPTF+88
ICTPDCHN EQU   ICTPTF+92
ICTPBCHN EQU   ICTPTF+96
ICTIXPF  EQU   0
ICTIXP   EQU   ICTIXPF
ICTENTLS EQU   0
ICTENTNT EQU   ICTENTLS
ICTENTNM EQU   ICTENTNT
ICTENTST EQU   ICTENTNT+7
ICTREQLS EQU   0
ICTREQNT EQU   ICTREQLS
ICTREQNM EQU   ICTREQNT
ICTREQST EQU   ICTREQNT+7
ICTSUPLS EQU   0
ICTSUPNT EQU   ICTSUPLS
ICTSUPNM EQU   ICTSUPNT
ICTPRELS EQU   0
ICTPRENT EQU   ICTPRELS
ICTPRENM EQU   ICTPRENT
ICTPREST EQU   ICTPRENT+7
ICTIRQLS EQU   0
ICTIRQNT EQU   ICTIRQLS
ICTIRQNM EQU   ICTIRQNT
ICTIRQST EQU   ICTIRQNT+7
ICTCSRST EQU   ICTIRQNT+15
ICTNPRLS EQU   0
ICTNPRNT EQU   ICTNPRLS
ICTNPRNM EQU   ICTNPRNT
ICTVRSLS EQU   0
ICTVRSNT EQU   ICTVRSLS
ICTVRSNM EQU   ICTVRSNT
ICTDELLS EQU   0
ICTDELNT EQU   ICTDELLS
ICTDELNM EQU   ICTDELNT
ICTDELST EQU   ICTDELNT+7
ICTSBYLS EQU   0
ICTSBYNT EQU   ICTSBYLS
ICTSBYNM EQU   ICTSBYNT
ICTMOD   EQU   0
ICTMNAME EQU   ICTMOD
ICTMEND  EQU   ICTMNAME
ICTMFLG2 EQU   ICTMOD+8
ICTMPROC EQU   ICTMFLG2
ICTMFLG1 EQU   ICTMOD+9
ICTMMODR EQU   ICTMFLG1
ICTMMOD  EQU   ICTMMODR
ICTMMACR EQU   ICTMFLG1
ICTMSRCR EQU   ICTMFLG1
ICTMFLG3 EQU   ICTMOD+10
ICTMFLG4 EQU   ICTMOD+11
ICTMISEL EQU   ICTMFLG4
ICTMIDEL EQU   ICTMFLG4
ICTMSELM EQU   ICTMFLG4
ICTMTSEL EQU   ICTMFLG4
ICTMFLG5 EQU   ICTMOD+12
ICTMODF4 EQU   ICTMOD+13
ICTMLEP1 EQU   ICTMODF4
ICTMODF5 EQU   ICTMOD+14
ICTMLEP2 EQU   ICTMODF5
ICTMODF6 EQU   ICTMOD+15
ICTMLEP3 EQU   ICTMODF6
ICTMODF7 EQU   ICTMOD+16
ICTMLEP4 EQU   ICTMODF7
ICTMACF4 EQU   ICTMOD+17
ICTTOLIB EQU   ICTMOD+32
ICTMDSTL EQU   ICTMOD+48
ICTPPTR  EQU   ICTMOD+96
ICTMCHN  EQU   ICTMOD+100
ICTMICHN EQU   ICTMOD+104
ICTMACHN EQU   ICTMOD+112
ICTMTCHN EQU   ICTMOD+116
ICTMVCHN EQU   ICTMOD+120
ICTMUCHN EQU   ICTMOD+124
ICTIXMF  EQU   0
ICTMIDLS EQU   0
ICTMID   EQU   ICTMIDLS
ICTMODID EQU   ICTMID
ICTMODST EQU   ICTMID+7
ICTASMLS EQU   0
ICTASMAD EQU   ICTASMLS
ICTTALLS EQU   0
ICTTALNM EQU   ICTTALLS
ICTTALND EQU   ICTTALNM
ICTMVRLS EQU   0
ICTMVRNT EQU   ICTMVRLS
ICTMVRNM EQU   ICTMVRNT
ICTMUMLS EQU   0
ICTMUMNT EQU   ICTMUMLS
ICTMUMNM EQU   ICTMUMNT
ICTLMOD  EQU   0
ICTLMNAM EQU   ICTLMOD
ICTLNAME EQU   ICTLMNAM
ICTLEND  EQU   ICTLNAME
ICTLFLG4 EQU   ICTLMOD+8
ICTLPROC EQU   ICTLFLG4
ICTLFLG1 EQU   ICTLMOD+9
ICTLFLG5 EQU   ICTLMOD+10
ICTLFLG6 EQU   ICTLMOD+11
ICTLFLG7 EQU   ICTLMOD+12
ICTLFLG2 EQU   ICTLMOD+13
ICTLFLG3 EQU   ICTLMOD+14
ICTLCHN  EQU   ICTLMOD+34
ICTIXLF  EQU   0
STMTBUF  EQU   0
STMT     EQU   STMTBUF
STMT72   EQU   STMTBUF+71
CCADSIDA EQU   0
IOPBS01  EQU   0
IOPBS03  EQU   0
SRCMACE  EQU   0
SRCMACRC EQU   0
MODICTE  EQU   0
MODRC    EQU   0
DELLMRC  EQU   0
LMDNAME  EQU   0
DELLMRC1 EQU   0
MLENTRY  EQU   0
DELENTRC EQU   0
MEMBRNAM EQU   0
MEMBRTP  EQU   0
DDNAME   EQU   0
DELMEMRC EQU   0
LMXRFRC  EQU   0
LMDDRC   EQU   0
SMDNAME  EQU   0
SMDPTR   EQU   0
SMODNAME EQU   0
SMODPTR  EQU   0
CDSMICTE EQU   0
CDSELRC  EQU   0
BKUPRC   EQU   0
DLMNAME  EQU   0
PTFICT   EQU   0
PTFENTRC EQU   0
LMDDN    EQU   0
STEND    EQU   0
STRTINDX EQU   0
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00050 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
@NM00061 EQU   IOPUDATA
@NM00062 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPABUNT EQU   IOPASMDR+1
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPLMDF2 EQU   IOPLMLEP+1
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPLMDFX EQU   IOPLMDNT+24
@NM00071 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPLMDND EQU   IOPSYSLB
IOPLMIND EQU   IOPLNTRY+8
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMST  EQU   IOPRMIDE+7
IOPFMIDE EQU   IOPMACDR+9
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPBUSMD EQU   IOPBUNT
IOPBUTYP EQU   IOPBUNT+7
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00082 EQU   IOPSRCDR+1
@NM00084 EQU   @NM00082+7
@NM00088 EQU   IOPSRCDR+9
IOPSRCFX EQU   IOPSRCNT+24
@NM00092 EQU   IOPSRCFX
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00098 EQU   IOPMODDR+1
@NM00100 EQU   @NM00098+7
@NM00104 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00108 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODND EQU   IOPMODID
IOPMODST EQU   IOPLMODS+7
IOPMDIND EQU   IOPMNTRY+8
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00119 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPSYSFX EQU   IOPSYSNT+24
@NM00126 EQU   IOPSYSFX
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPPTFFX EQU   IOPPTFNT+24
@NM00135 EQU   IOPPTFFX
@NM00136 EQU   @NM00135
IOPPDTES EQU   IOPPTFFX+41
@NM00139 EQU   IOPPDTES
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPPTFG1 EQU   IOPPTSFX+34
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00164 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00164
IOPPTREL EQU   IOPPTFMD
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBLEP2 EQU   IOPBPDS+9
@NM00168 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00168
IOPBFTB1 EQU   IOPBFTB0
ICTENDNT EQU   ICTENDCH
ICTENDIX EQU   ICTENDCH
XRFRCD1  EQU   XRFRCD
XRFRCD2  EQU   XRFRCD
XRF2LMD  EQU   XRFRCD2+1
XRF2MOD  EQU   XRFRCD2+11
XRFRCD3  EQU   XRFRCD
XRF3MAC  EQU   XRFRCD3+1
XRF3MOD  EQU   XRF3MAC
XRF3PF1  EQU   XRFRCD3+24
XRFRCD4  EQU   XRFRCD
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00251 EQU   XRFRCD4+28
@NM00250 EQU   XRFRCD4+18
XRFX4PTF EQU   XRFRCD4+11
@NM00249 EQU   XRFRCD4+10
@NM00248 EQU   XRFRCD4+9
XRF4PTF  EQU   XRFRCD4+1
@NM00247 EQU   XRFRCD4
@NM00246 EQU   XRFRCD3+29
@NM00245 EQU   XRFRCD3+28
XRF3PF3  EQU   XRFRCD3+27
XRF3PIND EQU   XRFRCD3+26
XRF3PTYP EQU   XRFRCD3+25
XRF3STAT EQU   XRF3PF1
XRF3PTF  EQU   XRFRCD3+17
XRF3TIM  EQU   XRFRCD3+14
XRF3DAT  EQU   XRFRCD3+11
@NM00244 EQU   XRFRCD3+10
@NM00243 EQU   XRFRCD3+9
XRF3SRC  EQU   XRF3MOD
@NM00242 EQU   XRFRCD3
@NM00241 EQU   XRFRCD2+29
@NM00240 EQU   XRFRCD2+19
@NM00239 EQU   XRFRCD2+10
@NM00238 EQU   XRFRCD2+9
@NM00237 EQU   XRFRCD2
@NM00236 EQU   XRFRCD1+29
@NM00235 EQU   XRFRCD1+19
XRF1MAC  EQU   XRFRCD1+11
@NM00234 EQU   XRFRCD1+10
@NM00233 EQU   XRFRCD1+9
XRF1ASM  EQU   XRFRCD1+1
@NM00232 EQU   XRFRCD1
IOPBCEND EQU   IOPBPDS+21
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00170 EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
@NM00169 EQU   IOPBFTB1
IOPBAOSL EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBREFR EQU   IOPBLEP2
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
@NM00167 EQU   IOPBLEP2
IOPBDC   EQU   IOPBLEP2
@NM00166 EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00165 EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBRENT EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
IOPPTIND EQU   IOPPTNTR+8
IOPPTSND EQU   IOPPTREL
@NM00163 EQU   IOPPTSFX+872
IOPSYZPP EQU   IOPPTSFX+772
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZAP EQU   IOPPTSFX+755
IOPSYUPP EQU   IOPPTSFX+655
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPD EQU   IOPPTSFX+638
IOPSYSPP EQU   IOPPTSFX+538
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSUP EQU   IOPPTSFX+521
IOPSYLKP EQU   IOPPTSFX+421
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKD EQU   IOPPTSFX+404
IOPSYCPP EQU   IOPPTSFX+304
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOM EQU   IOPPTSFX+170
IOPSYASP EQU   IOPPTSFX+70
IOPSYASR EQU   IOPPTSFX+69
IOPSYASS EQU   IOPPTSFX+61
IOPSYASM EQU   IOPPTSFX+53
@NM00162 EQU   IOPPTSFX+35
@NM00161 EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPPTSNP EQU   IOPPTFG1
IOPSYPLN EQU   IOPPTSFX+32
IOPDSPFX EQU   IOPPTSFX+6
IOPDSDIR EQU   IOPDSSPC+4
IOPDSSEC EQU   IOPDSSPC+2
IOPDSPRM EQU   IOPDSSPC
@NM00160 EQU   IOPPTSDR+4
IOPPTPEM EQU   IOPPTSDR+2
IOPPCNVL EQU   IOPPTSDR+1
@NM00159 EQU   IOPPTSDR
IOPQFMTP EQU   IOPQFMLS+8
@NM00158 EQU   IOPQFMLS+7
IOPQFMND EQU   IOPQFMNM
@NM00157 EQU   IOPQFMDR
@NM00153 EQU   IOPQSMDR
@NM00152 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
IOPSBYNM EQU   IOPSBYNT
@NM00151 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00150 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00149 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00148 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00147 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00146 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00145 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00144 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00143 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00142 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00141 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
IOPPIND  EQU   IOPPNTRY+8
IOPPTFND EQU   IOPPMODS
IOPPFMID EQU   IOPPTFFX+73
@NM00140 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
IOPACCT  EQU   IOPDATES+15
IOPACCD  EQU   IOPDATES+12
IOPRSTT  EQU   IOPDATES+9
IOPRSTD  EQU   IOPDATES+6
IOPAPPT  EQU   IOPDATES+3
IOPAPPD  EQU   IOPDATES
IOPRECT  EQU   @NM00139+3
IOPRECD  EQU   @NM00139
@NM00138 EQU   IOPPTFFX+8
@NM00137 EQU   @NM00135+7
IOPPRELN EQU   @NM00136
@NM00134 EQU   IOPPTFDR+20
IOPSBYNO EQU   IOPPTFDR+13
IOPDBYNO EQU   IOPPTFDR+6
@NM00133 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPSBYP  EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00132 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPREGEN EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
IOPDUMMP EQU   IOPFLGS5
@NM00131 EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
IOPAPP   EQU   IOPFLGS5
IOPPTYPE EQU   IOPPTFDR+1
@NM00130 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
IOPSYSND EQU   IOPSYNTR
@NM00129 EQU   IOPSYSFX+21
IOPSYSID EQU   IOPSYSFX+13
IOPNUCID EQU   IOPSYSFX+12
IOPSREL  EQU   IOPSYSFX+8
@NM00128 EQU   @NM00126+7
@NM00127 EQU   @NM00126
@NM00125 EQU   IOPSYSDR+5
@NM00124 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPMTSNP EQU   IOPFLGS7
IOPPEMAX EQU   IOPSYSDR+2
IOPSCNVL EQU   IOPSYSDR+1
@NM00123 EQU   IOPSYSDR
IOPDLIND EQU   IOPDNTRY+8
IOPDLBND EQU   IOPDSYS
@NM00122 EQU   IOPDLBFX+8
@NM00121 EQU   @NM00119+7
@NM00120 EQU   @NM00119
@NM00118 EQU   IOPDLBDR+1
@NM00117 EQU   IOPDLBDR
@NM00116 EQU   IOPMODST
IOPDLIB  EQU   IOPMODFX+72
@NM00115 EQU   IOPMODFX+12
@NM00114 EQU   IOPMODF4
@NM00113 EQU   IOPMODF3
@NM00112 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00111 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00110 EQU   @NM00108+7
@NM00109 EQU   @NM00108
@NM00107 EQU   IOPMODDR+17
@NM00106 EQU   @NM00104+7
@NM00105 EQU   @NM00104
@NM00103 EQU   @NM00100
@NM00102 EQU   @NM00100
@NM00101 EQU   @NM00100
@NM00099 EQU   @NM00098
@NM00097 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00096 EQU   IOPSRCST
IOPSRCND EQU   IOPSRCID
IOPSRDLB EQU   IOPSRCFX+72
IOPSRSYS EQU   IOPSRCFX+64
@NM00095 EQU   IOPSRCFX+8
@NM00094 EQU   @NM00092+7
@NM00093 EQU   @NM00092
@NM00091 EQU   IOPSRCDR+18
IOPSRLNG EQU   IOPSRCDR+17
@NM00090 EQU   @NM00088+7
@NM00089 EQU   @NM00088
@NM00087 EQU   @NM00084
@NM00086 EQU   @NM00084
@NM00085 EQU   @NM00084
@NM00083 EQU   @NM00082
@NM00081 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
IOPMCTYP EQU   IOPMCIND
@NM00080 EQU   IOPMACST
IOPMACND EQU   IOPMACID
IOPMCDLB EQU   IOPMACFX+72
IOPMCSYS EQU   IOPMACFX+64
@NM00079 EQU   IOPMACFX+8
@NM00078 EQU   IOPMACDR+18
IOPMCLNG EQU   IOPMACDR+17
IOPFMST  EQU   IOPFMIDE+7
IOPFMID  EQU   IOPFMIDE
@NM00077 EQU   IOPRMST
IOPRMASM EQU   IOPRMST
@NM00076 EQU   IOPRMST
IOPRMID  EQU   IOPRMIDE
@NM00075 EQU   IOPMACDR
@NM00073 EQU   @NM00071+7
@NM00072 EQU   @NM00071
@NM00070 EQU   IOPLMDDR+6
@NM00069 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPCOPY  EQU   IOPFLGS3
@NM00068 EQU   IOPLMDF4
@NM00067 EQU   IOPLMDF3
@NM00066 EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPNE    EQU   IOPLMDF2
@NM00065 EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPAPF   EQU   IOPFLGS2
@NM00064 EQU   IOPLMDDR
@NM00063 EQU   IOPASMDR+9
IOPABUTP EQU   IOPABUNT+7
IOPABUPT EQU   IOPABUNT
IOPNTLVL EQU   IOPASMDR
IOPALLOC EQU   @NM00062+4
IOPUSED  EQU   @NM00062
IOPTPSEQ EQU   @NM00061+8
IOPVLSER EQU   @NM00061+2
IOPBLKSI EQU   @NM00061
IOPCQMAX EQU   IOPCQMAP+12
@NM00060 EQU   IOPCQMAP+11
@NM00059 EQU   IOPCQMAP+8
@NM00058 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00057 EQU   IOPSCMAP+11
@NM00056 EQU   IOPSCMAP+8
@NM00055 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00054 EQU   IOPNTMAX+11
@NM00053 EQU   IOPNTMAX+8
@NM00052 EQU   IOPNTMAX
@NM00051 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00050+5
IOPIPTF3 EQU   @NM00050
@NM00266 EQU   STMTBUF+72
ICTIXL   EQU   ICTIXLF
@NM00224 EQU   ICTLMOD+38
ICTLTTR  EQU   ICTLMOD+31
ICTTG2   EQU   ICTLMOD+23
ICTTG1   EQU   ICTLMOD+15
@NM00223 EQU   ICTLFLG3
ICTLZAP  EQU   ICTLFLG3
ICTLLKD  EQU   ICTLFLG3
ICTLCPY  EQU   ICTLFLG3
ICTLXPND EQU   ICTLFLG3
ICTTIND2 EQU   ICTLFLG3
ICTTIND1 EQU   ICTLFLG3
@NM00222 EQU   ICTLFLG2
ICTLDEL  EQU   ICTLFLG2
@NM00221 EQU   ICTLFLG2
ICTLTDEL EQU   ICTLFLG2
ICTLINK  EQU   ICTLFLG2
ICTCOPY  EQU   ICTLFLG2
@NM00220 EQU   ICTLFLG7
@NM00219 EQU   ICTLFLG6
@NM00218 EQU   ICTLFLG5
ICTLPAGA EQU   ICTLFLG5
ICTLNE   EQU   ICTLFLG5
@NM00217 EQU   ICTLFLG1
ICTLDC   EQU   ICTLFLG1
ICTLREFR EQU   ICTLFLG1
ICTLOVLY EQU   ICTLFLG1
ICTLSCTR EQU   ICTLFLG1
ICTLREUS EQU   ICTLFLG1
ICTLRENT EQU   ICTLFLG1
ICTLAPF  EQU   ICTLFLG1
@NM00216 EQU   ICTLFLG4
ICTLPASS EQU   ICTLFLG4
ICTLDDCK EQU   ICTLFLG4
ICTLMSG  EQU   ICTLFLG4
ICTLCPL  EQU   ICTLFLG4
ICTLNOGO EQU   ICTLFLG4
@NM00215 EQU   ICTMUMNT+7
ICTMUMND EQU   ICTMUMNM
@NM00214 EQU   ICTMVRNT+7
ICTMVRND EQU   ICTMVRNM
ICTASMND EQU   ICTASMAD
ICTMIDTY EQU   ICTMODST
ICTMIDAM EQU   ICTMODST
ICTMIDRG EQU   ICTMODST
ICTMIDF1 EQU   ICTMODST
ICTMIDPL EQU   ICTMODST
ICTMIDPS EQU   ICTMODST
@NM00213 EQU   ICTMODST
ICTMIDND EQU   ICTMODID
ICTIXM   EQU   ICTIXMF
@NM00212 EQU   ICTMOD+128
ICTMICHA EQU   ICTMOD+108
@NM00211 EQU   ICTMOD+95
ICTMFMID EQU   ICTMOD+88
@NM00210 EQU   ICTMOD+87
ICTMRMID EQU   ICTMOD+80
ICTMSSI  EQU   ICTMOD+72
ICTMDOBJ EQU   ICTMOD+64
ICTMSYSL EQU   ICTMOD+56
ICTMASLB EQU   ICTMOD+40
ICTFMLIB EQU   ICTMOD+24
ICTMRELN EQU   ICTMOD+22
@NM00209 EQU   ICTMOD+21
ICTMLANG EQU   ICTMOD+20
@NM00208 EQU   ICTMOD+19
ICTMACF5 EQU   ICTMOD+18
ICTMZMPR EQU   ICTMACF4
ICTMZOMZ EQU   ICTMACF4
ICTMDOAS EQU   ICTMACF4
ICTMXUPD EQU   ICTMACF4
ICTMFXC  EQU   ICTMACF4
ICTMFXBS EQU   ICTMACF4
ICTMHASM EQU   ICTMACF4
ICTMACDL EQU   ICTMACF4
@NM00207 EQU   ICTMLEP4
@NM00206 EQU   ICTMLEP3
@NM00205 EQU   ICTMLEP2
ICTMPAGA EQU   ICTMLEP2
ICTMNE   EQU   ICTMLEP2
@NM00204 EQU   ICTMLEP1
ICTMDC   EQU   ICTMLEP1
ICTMREFR EQU   ICTMLEP1
ICTMOVLY EQU   ICTMLEP1
ICTMSCTR EQU   ICTMLEP1
ICTMREUS EQU   ICTMLEP1
ICTMRENT EQU   ICTMLEP1
ICTMAPF  EQU   ICTMLEP1
@NM00203 EQU   ICTMFLG5
ICTMNORL EQU   ICTMFLG5
ICTMELCK EQU   ICTMFLG5
ICTMCOPY EQU   ICTMFLG5
ICTMPASS EQU   ICTMFLG5
@NM00202 EQU   ICTMFLG4
ICTMDSTE EQU   ICTMFLG4
ICTMMIDE EQU   ICTMFLG4
ICTMASOC EQU   ICTMFLG4
@NM00201 EQU   ICTMFLG3
ICTMPRMS EQU   ICTMFLG3
ICTMALIS EQU   ICTMFLG3
ICTMWRK  EQU   ICTMFLG3
ICTMTRX  EQU   ICTMFLG3
ICTMRELF EQU   ICTMFLG3
ICTLIBTX EQU   ICTMFLG3
ICTLIBLK EQU   ICTMFLG3
ICTMSRCU EQU   ICTMFLG1
ICTMMACU EQU   ICTMFLG1
ICTMXPND EQU   ICTMFLG1
ICTMZAP  EQU   ICTMFLG1
ICTMASM  EQU   ICTMMODR
@NM00200 EQU   ICTMFLG2
@NM00199 EQU   ICTMFLG2
ICTMMIDU EQU   ICTMFLG2
ICTMDEL  EQU   ICTMFLG2
ICTMMSG  EQU   ICTMFLG2
ICTMCPL  EQU   ICTMFLG2
ICTMNOGO EQU   ICTMFLG2
@NM00198 EQU   ICTSBYNT+7
ICTSBYND EQU   ICTSBYNM
ICTDELEX EQU   ICTDELST
ICTDELND EQU   ICTDELNM
@NM00197 EQU   ICTVRSNT+7
ICTVRSND EQU   ICTVRSNM
@NM00196 EQU   ICTNPRNT+7
ICTNPRND EQU   ICTNPRNM
@NM00195 EQU   ICTCSRST
@NM00194 EQU   ICTCSRST
ICTCSRF  EQU   ICTCSRST
@NM00193 EQU   ICTCSRST
ICTCSRNM EQU   ICTIRQNT+8
@NM00192 EQU   ICTIRQST
ICTIREQT EQU   ICTIRQST
ICTIREQI EQU   ICTIRQST
ICTIREQB EQU   ICTIRQST
ICTIREQS EQU   ICTIRQST
@NM00191 EQU   ICTIRQST
ICTIRQND EQU   ICTIRQNM
@NM00190 EQU   ICTPREST
ICTPREQT EQU   ICTPREST
ICTPREQI EQU   ICTPREST
ICTPREQB EQU   ICTPREST
ICTPREQS EQU   ICTPREST
@NM00189 EQU   ICTPREST
ICTPREND EQU   ICTPRENM
@NM00188 EQU   ICTSUPNT+7
ICTSUPND EQU   ICTSUPNM
@NM00187 EQU   ICTREQST
ICTRREQT EQU   ICTREQST
ICTRREQI EQU   ICTREQST
ICTRREQB EQU   ICTREQST
ICTRREQS EQU   ICTREQST
@NM00186 EQU   ICTREQST
ICTREQND EQU   ICTREQNM
@NM00185 EQU   ICTENTST
ICTEREQT EQU   ICTENTST
ICTEREQI EQU   ICTENTST
ICTEREQB EQU   ICTENTST
ICTEREQS EQU   ICTENTST
@NM00184 EQU   ICTENTST
ICTENTND EQU   ICTENTNM
@NM00183 EQU   ICTPTF+100
ICTPTPFX EQU   ICTPTF+38
ICTPRELN EQU   ICTPTF+36
ICTPRECT EQU   ICTPTF+33
ICTPRECD EQU   ICTPTF+30
ICTPVERN EQU   ICTPTF+29
ICTPFMID EQU   ICTPTF+22
ICTPSUPN EQU   ICTPTF+20
ICTPONUM EQU   ICTPTF+18
ICTPUSR8 EQU   ICTPFLGA
ICTPUSR7 EQU   ICTPFLGA
ICTPUSR6 EQU   ICTPFLGA
ICTPUSR5 EQU   ICTPFLGA
ICTPUSR4 EQU   ICTPFLGA
ICTPUSR3 EQU   ICTPFLGA
ICTPUSR2 EQU   ICTPFLGA
ICTPPASS EQU   ICTPUSR1
@NM00182 EQU   @NM00181
ICTPRQBY EQU   @NM00181
ICTPRQOK EQU   @NM00181
ICTPRQCK EQU   @NM00181
@NM00180 EQU   ICTPFLG9
ICTPPDEL EQU   ICTPFLG9
ICTPWRKO EQU   ICTPFLG9
ICTPMSL  EQU   ICTPFLG9
@NM00179 EQU   ICTPFLG8
ICTPECPL EQU   ICTPFLG8
ICTPGCPL EQU   ICTPFLG8
@NM00178 EQU   ICTPFLG4
@NM00177 EQU   ICTPFLG4
@NM00176 EQU   ICTPFLG4
ICTPREDO EQU   ICTPFLG4
ICTPCDSE EQU   ICTPFLG4
@NM00175 EQU   ICTPFLG2
ICTPRCND EQU   ICTPFLG2
ICTPTPS  EQU   ICTPFLG2
ICTPTR1  EQU   ICTPFLG2
ICTPVRSP EQU   ICTPFLG2
@NM00174 EQU   ICTPFLG6
ICTFLF   EQU   ICTPFLF
ICTPDBYP EQU   ICTPFLG6
ICTPSBYP EQU   ICTPFLG6
ICTPADDP EQU   ICTPFLG5+1
@NM00173 EQU   ICTPFLG5+1
ICTPLRFP EQU   ICTPFLG5
ICTPJCLP EQU   ICTPFLG5
ICTPSUPP EQU   ICTPFLG5
ICTPREQP EQU   ICTPFLG5
ICTPPREP EQU   ICTPFLG5
ICTPNPRP EQU   ICTPFLG5
ICTPIRQP EQU   ICTPFLG5
ICTPDELP EQU   ICTPFLG5
@NM00172 EQU   ICTPFLG3
ICTPSLST EQU   ICTPFLG3
ICTPNOLB EQU   ICTPFLG3
ICTPVERJ EQU   ICTPFLG3
ICTPMSG  EQU   ICTPFLG3
ICTPCPL  EQU   ICTPFLG3
ICTPROCS EQU   ICTPPROC
ICTREGEN EQU   ICTPFLG1
ICTBYP   EQU   ICTPFLG1
ICTDUMMP EQU   ICTPFLG1
@NM00171 EQU   ICTPFLG1
ICTERROR EQU   ICTPFLG1
ICTACC   EQU   ICTPFLG1
ICTRES   EQU   ICTPFLG1
ICTAPP   EQU   ICTPFLG1
ICTLEN   EQU   ICTGMSPL+1
ICTSP    EQU   ICTGMSPL
ICTLLEN  EQU   ICTLSPLN+1
ICTLSP   EQU   ICTLSPLN
ICTMLEN  EQU   ICTMSPLN+1
ICTMSP   EQU   ICTMSPLN
ICTPLEN  EQU   ICTPSPLN+1
ICTPSP   EQU   ICTPSPLN
IOPBS04E EQU   IOPBS04+2
IOPBAPFC EQU   IOPBAPF+1
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
IOPQSMTP EQU   IOPQSMLS+8
@NM00156 EQU   IOPQSMLS+7
IOPQSMND EQU   IOPQSMNM
@NM00155 EQU   @NM00154+7
IOPQSMFM EQU   @NM00154
@NM00074 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00049 EQU   IOPUSERL
@NM00048 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00047 EQU   HMASMIOP+32
@NM00046 EQU   @NM00043+10
IOPSEQNO EQU   @NM00043+8
@NM00045 EQU   @NM00044+7
IOPPTFNM EQU   @NM00044
IOPNAM17 EQU   IOPNAME
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00042 EQU   CCABLDLM+2
@NM00041 EQU   CCABLDLM
CCAUPDPM EQU   @NM00039+24
@NM00040 EQU   @NM00039+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00039+12
CCAUPDTE EQU   @NM00039+8
CCAUPDNM EQU   @NM00039
CCASUPPM EQU   @NM00037+24
@NM00038 EQU   @NM00037+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00037+12
CCAIOSUP EQU   @NM00037+8
CCASUPNM EQU   @NM00037
CCAZAPPM EQU   @NM00035+24
@NM00036 EQU   @NM00035+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00035+12
CCASPZAP EQU   @NM00035+8
CCAZAPNM EQU   @NM00035
CCACOMPM EQU   @NM00033+24
@NM00034 EQU   @NM00033+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00033+12
CCACOMRS EQU   @NM00033+8
CCACOMNM EQU   @NM00033
CCACPYPM EQU   @NM00031+24
@NM00032 EQU   @NM00031+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00031+12
CCACOPY  EQU   @NM00031+8
CCACPYNM EQU   @NM00031
CCAASMPM EQU   @NM00029+24
@NM00030 EQU   @NM00029+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00029+12
CCAASM   EQU   @NM00029+8
CCAASMNM EQU   @NM00029
CCALKDPM EQU   @NM00027+24
@NM00028 EQU   @NM00027+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00027+12
CCALKED  EQU   @NM00027+8
CCALKDNM EQU   @NM00027
CCAPGMPM EQU   @NM00025+24
@NM00026 EQU   @NM00025+21
CCABPGRC EQU   @NM00025+20
CCABPGSP EQU   @NM00025+12
CCABPGAD EQU   @NM00025+8
CCABPGNM EQU   @NM00025
CCAEND   EQU   HMASMCCA+371
@NM00024 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00023 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00022 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00021 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00020 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00019 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00018 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00017 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00016 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00015 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00014 EQU   @NM00009+18
@NM00013 EQU   @NM00009+16
CCATBLPA EQU   @NM00009+12
@NM00012 EQU   @NM00009+8
@NM00011 EQU   @NM00009+4
@NM00010 EQU   @NM00009
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00008 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
@NM00007 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00006 EQU   CCAFBUFR+122
@NM00005 EQU   CCAFBUFR+120
@NM00004 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00003 EQU   CCAFBUFR+88
@NM00002 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00001 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00304 EQU   @EL00002
@RF00324 EQU   @EL00003
@RF00334 EQU   @EL00003
@RF00333 EQU   @EL00003
@RF00415 EQU   @EL00005
@RF00453 EQU   @EL00007
@RF00459 EQU   @EL00007
@RF00535 EQU   @EL00009
@RF00586 EQU   @EL00012
@RC00603 EQU   @EL00013
@RF00628 EQU   @EL00015
@RF00641 EQU   @EL00016
@RC00714 EQU   @EL00018
@RF00718 EQU   @EL00018
@RF00729 EQU   @EL00018
@RF00731 EQU   @EL00018
@ENDDATA EQU   *
         END   HMASMDLE,(C'PLS2118',0802,78334)
