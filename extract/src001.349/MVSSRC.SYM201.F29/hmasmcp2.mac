         TITLE 'HMASMCP2 CHECK A SYSMOD FOR GROUP-COMPLETE PROCESSING'
HMASMCP2 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMCP2  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @10,@01                                             0001
         USING @DATD,@10                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @10,8(,@13)                                         0001
         LR    @13,@10                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
         MVC   @PC00001(4),0(@01)                                  0001
*                                      ICT PTF SECTION ENTRY PASSED
*                                      BY THE CALLER                 */
*   PTFPTR=ADDR(PTFENTRY);          /* SET BASE FOR ICT PTF          */
         L     PTFPTR,@PC00001                                     0056
*   CP2RETRN=NOTCOMPL;              /* INITIALIZE LOCAL RETURN CODE
*                                      TO "NOT COMPLETE"             */
         LA    CP2RETRN,4                                          0057
*   IF ICTPGCPL(1)=ON               /* SYSMOD ALREADY MARKED "GROUP
*                                      COMPLETE"                     */
*     THEN                                                         0058
         TM    ICTPGCPL(PTFPTR),B'10000000'                        0058
         BNO   @RF00058                                            0058
*     CP2RETRN=COMPLETE;            /* SET REQISISTES "COMPLETE"     */
         SLR   CP2RETRN,CP2RETRN                                   0059
*   CP2FLGS=''B;                    /* CLEAR LOCAL PROCESSING FLAGS  */
@RF00058 MVI   CP2FLGS,X'00'                                       0060
*   IF ICTPPASS(1)=ON THEN          /* CHK PASS FLAG IN ENTRY PASSED */
         TM    ICTPPASS(PTFPTR),B'10000000'                        0061
         BNO   @RF00061                                            0061
*     LOCALCP2=ON;                  /* REMEMBER THAT CP2 PROCESSING
*                                      FLAG WAS SET UPON ENTRY       */
         OI    LOCALCP2,B'10000000'                                0062
*   ELSE                                                           0063
*     ICTPPASS(1)=ON;               /* OTHERWISE SET CP2 PROCESSING
*                                      FLAG IN CURRENT PTF ENTRY     */
         B     @RC00061                                            0063
@RF00061 OI    ICTPPASS(PTFPTR),B'10000000'                        0063
*                                                                  0064
*   /*****************************************************************/
*   /*                                                               */
*   /* IF SYSMOD NOT ALREADY COMPLETED AND ALL ELEMENTS ARE COMPLETE */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0064
*   IF CP2RETRN=NOTCOMPL            /* IF REQUISITE NOT COMPLETE     */
*       &ICTPECPL(1)=ON             /* AND ALL ELEMENTS ARE COMPLETE */
*     THEN                          /*                               */
@RC00061 CH    CP2RETRN,@CH00037                                   0064
         BNE   @RF00064                                            0064
         TM    ICTPECPL(PTFPTR),B'01000000'                        0064
         BNO   @RF00064                                            0064
*     DO;                           /*                               */
*       CP2RETRN=COMPLETE;          /* RE-INITIALIZE RETURN CODE TO
*                                      REQUISITES "COMPLETE"         */
*                                                                  0066
         SLR   CP2RETRN,CP2RETRN                                   0066
*       /*************************************************************/
*       /*                                                           */
*       /* APPLY OR ACCEPT PROCESSING CHECKS. ALL PRE, REQ, AND IFREQ*/
*       /* SYSMODS MUST ALSO BE COMPLETED                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0067
*       IF(CCAAPPLY=ON×CCAACCPT=ON) /* IF APPLY OR ACCEPT            */
*         THEN                                                     0067
         TM    CCAAPPLY(CCAPTR),B'01100000'                        0067
         BZ    @RF00067                                            0067
*         DO;                                                      0068
*           RFY                     /*                               */
*             RTNCODE RSTD;         /*                               */
*           CALL REQCHK(ICTPPCHN(1),PRE);/* CHECK PRES               */
         LA    @14,ICTPPCHN(,PTFPTR)                               0070
         ST    @14,@AL00001                                        0070
         LA    @14,@CH00085+1                                      0070
         ST    @14,@AL00001+4                                      0070
         LA    @01,@AL00001                                        0070
         BAL   @14,REQCHK                                          0070
*           CP2RETRN=RTNCODE;       /*                               */
         LR    CP2RETRN,RTNCODE                                    0071
*           IF CP2RETRN=COMPLETE    /* IF SYSMOD STILL COMPLETE      */
*             THEN                  /*                               */
         LTR   CP2RETRN,CP2RETRN                                   0072
         BNZ   @RF00072                                            0072
*             DO;                   /*                               */
*               CALL REQCHK(ICTPRCHN(1),REQ);/* CHECK REQS           */
         LA    @14,ICTPRCHN(,PTFPTR)                               0074
         ST    @14,@AL00001                                        0074
         LA    @14,@CH00182+1                                      0074
         ST    @14,@AL00001+4                                      0074
         LA    @01,@AL00001                                        0074
         BAL   @14,REQCHK                                          0074
*               CP2RETRN=RTNCODE;   /*                               */
         LR    CP2RETRN,RTNCODE                                    0075
*             END;                  /*                               */
*           IF CP2RETRN<NOTCOMPL    /* IF SYSMOD STILL COMPLETE      */
*             THEN                  /*                               */
@RF00072 CH    CP2RETRN,@CH00037                                   0077
         BNL   @RF00077                                            0077
*             DO;                   /*                               */
*               CALL REQCHK(ICTPICHN(1),IRQ);/* CHECK IFREQS         */
         LA    @14,ICTPICHN(,PTFPTR)                               0079
         ST    @14,@AL00001                                        0079
         LA    @14,@CH00234+1                                      0079
         ST    @14,@AL00001+4                                      0079
         LA    @01,@AL00001                                        0079
         BAL   @14,REQCHK                                          0079
*               CP2RETRN=RTNCODE;   /*                               */
         LR    CP2RETRN,RTNCODE                                    0080
*             END;                  /*                               */
*           RFY                     /*                               */
*             RTNCODE UNRSTD;       /*                               */
@RF00077 DS    0H                                                  0083
*         END;                      /* END APPLY/ACCEPT GROUP        */
*                                                                  0083
*       /*************************************************************/
*       /*                                                           */
*       /* IF FUNCTION IS RESTORE THEN ALL THE SYSMODS THAT PRE, REQ,*/
*       /* IFREQ, OR SUP THIS SYSMOD MUSTBE COMPLETE                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0084
*       ELSE                                                       0084
*         DO;                       /*                               */
         B     @RC00067                                            0084
@RF00067 DS    0H                                                  0085
*           RFY                     /*                               */
*             RTNCODE RSTD;         /*                               */
*           CALL RESREQ1(PRE);      /* CHECK ALL THAT PRE CURRENT    */
         LA    @01,@AL00086                                        0086
         BAL   @14,RESREQ1                                         0086
*           CP2RETRN=RTNCODE;       /*                               */
         LR    CP2RETRN,RTNCODE                                    0087
*           IF CP2RETRN=COMPLETE    /* IF SYSMOD STILL COMPLETE      */
*             THEN                  /*                               */
         LTR   CP2RETRN,CP2RETRN                                   0088
         BNZ   @RF00088                                            0088
*             DO;                   /*                               */
*               CALL RESREQ1(REQ);  /* CHECK ALL THAT REQ CURRENT    */
         LA    @01,@AL00090                                        0090
         BAL   @14,RESREQ1                                         0090
*               CP2RETRN=RTNCODE;   /*                               */
         LR    CP2RETRN,RTNCODE                                    0091
*             END;                  /*                               */
*           IF CP2RETRN=COMPLETE    /* IF SYSMOD STILL COMPLETE      */
*             THEN                  /*                               */
@RF00088 LTR   CP2RETRN,CP2RETRN                                   0093
         BNZ   @RF00093                                            0093
*             DO;                   /*                               */
*               CALL RESREQ1(IRQ);  /* CHECK ALL THAT IFREQ CURRENT  */
         LA    @01,@AL00095                                        0095
         BAL   @14,RESREQ1                                         0095
*               CP2RETRN=RTNCODE;   /*                               */
         LR    CP2RETRN,RTNCODE                                    0096
*             END;                  /*                               */
*           IF CP2RETRN=COMPLETE    /* IF SYSMOD STILL COMPLETE      */
*             THEN                  /*                               */
@RF00093 LTR   CP2RETRN,CP2RETRN                                   0098
         BNZ   @RF00098                                            0098
*             DO;                   /*                               */
*               CALL RESREQ1(SUP);  /* CHECK ALL THAT SUP CURRENT    */
         LA    @01,@AL00100                                        0100
         BAL   @14,RESREQ1                                         0100
*               CP2RETRN=RTNCODE;   /*                               */
         LR    CP2RETRN,RTNCODE                                    0101
*             END;                  /*                               */
*           RFY                     /*                               */
*             RTNCODE UNRSTD;       /*                               */
@RF00098 DS    0H                                                  0104
*         END;                      /*                               */
*     END;                          /* END NOT CPL/ELE CPL           */
*                                                                  0105
@RC00067 DS    0H                                                  0106
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THIS IS RECURSION NOT RECURSION PASS THRU CP2 THEN RESET   */
*   /* ICT BIT INDICATING POSSIBLE RECURSION                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0106
*   IF LOCALCP2=OFF                 /* RECURSION FLAG NOT SET ON   0106
*                                      ENTRY                         */
*     THEN                                                         0106
@RF00064 TM    LOCALCP2,B'10000000'                                0106
         BNZ   @RF00106                                            0106
*     ICTPPASS(1)=OFF;              /* TURN OFF CP2 RECURSION FLAG   */
         NI    ICTPPASS(PTFPTR),B'01111111'                        0107
*   RETURN CODE(CP2RETRN);          /* RETURN WITH APPROPRIATE CODE  */
@RF00106 L     @13,4(,@13)                                         0108
         L     @00,@SIZDATD                                        0108
         LR    @01,@10                                             0108
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@02                                             0108
         L     @14,12(,@13)                                        0108
         LM    @00,@12,20(@13)                                     0108
         BR    @14                                                 0108
         EJECT
*                                                                  0109
*/********************************************************************/
*/*                                                                  */
*/*  REQCHK   - CHECK THE REQUISITES OF A SYSMOD FOR PROCESSING      */
*/*             COMPLETENESS                                         */
*/*                                                                  */
*/*     * CONDITIONS UPON EXIT                                       */
*/*                                                                  */
*/*           - CP2RETRN UNCHANGED IF ALL REQUISITES ARE FOUND TO    */
*/*             BE "GROUP COMPLETE".                                 */
*/*                                                                  */
*/*           - CP2RETRN SET TO 4 ("NOTCOMPL") IF ANY REQUISITE IS   */
*/*             FOUND TO BE NOT "GROUP COMPLETE".                    */
*/*                                                                  */
*/********************************************************************/
*                                                                  0109
*REQCHK:                                                           0109
*   PROC(RLISTPTR,REQTYPE);                                        0109
REQCHK   STM   @14,@12,@SA00002                                    0109
         MVC   @PC00002(8),0(@01)                                  0109
*   DECLARE                                                        0110
*     RLISTPTR PTR(31);             /* POINTER TO REQUISITE LIST     */
*   DECLARE                                                        0111
*     REQTYPE FIXED(8);             /* REQ TYPE (PRE,REQ,IRQ)        */
*                                                                  0111
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL VARIABLES                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0112
*   DECLARE                                                        0112
*     I FIXED(31);                  /* REQ LIST ENTRY INDEX          */
*   DECLARE                                                        0113
*     REQPTR PTR(31);               /* PTR TO ICT PTF SECTION ENTRY
*                                      FOR REQ (IF FOUND IN ICT)     */
*   DECLARE                                                        0114
*     SPTR PTR(31);                 /* PTR TO ICT PTF SECTION ENTRY
*                                      FOR SUPERSEDER OF REQ (IF   0114
*                                      FOUND IN ICT)                 */
*   DECLARE                                                        0115
*     INDXSTEP FIXED(31);           /* INDEX STEP INCREMENT          */
*                                                                  0116
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP ADDRESSIBILITY TO THE REQUISITE LIST PASSED            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0116
*   RFY                                                            0116
*     ICTENTLS BASED(RLISTPTR);     /* "GENERAL" REQUISISTE LIST   0116
*                                      ENTRY                         */
*   RFY                                                            0117
*     ICTPRELS BASED(RLISTPTR);     /* PREREQ REQUISISTE LIST ENTRY  */
*   RFY                                                            0118
*     ICTREQLS BASED(RLISTPTR);     /* REQ/MREQ REQUISISTE LIST ENTRY*/
*   RFY                                                            0119
*     ICTIRQLS BASED(RLISTPTR);     /* IREQ REQUISITE LIST ENTRY     */
*                                                                  0119
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP LOOP INDEX INCREMENT BASED UPON THE TYPE OF REQUISITE  */
*   /* LIST ENTRY BEING DEALT WITH                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0120
*   IF REQTYPE=IRQ THEN                                            0120
         L     @02,@PC00002+4                                      0120
         CLI   REQTYPE(@02),3                                      0120
         BNE   @RF00120                                            0120
*     INDXSTEP=2;                   /* INDEX STEP FOR IREQ ENTRIES IS
*                                      2 ... IREQ ENTRIES ARE MADE UP
*                                      OF TWO "GENERAL" ENTRIES      */
         LA    INDXSTEP,2                                          0121
*   ELSE                                                           0122
*     INDXSTEP=1;                   /* INDEX STEP FOR ALL OTHERS IS 1*/
         B     @RC00120                                            0122
@RF00120 LA    INDXSTEP,1                                          0122
*                                                                  0123
*   /*****************************************************************/
*   /*                                                               */
*   /* GO THRU ALL REQUISITE LIST ENTRIES                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0123
*   LOCREQC=ON;                     /* SET REQUISITES COMPLETE       */
@RC00120 OI    LOCREQC,B'01000000'                                 0123
*   DO I=1 BY INDXSTEP WHILE ICTENTND(I)^=ICTENDIX/* NOT END         */
*         &LOCREQC=ON;              /* REQUISITES COMPLETE           */
         LA    I,1                                                 0124
         B     @DE00124                                            0124
@DL00124 DS    0H                                                  0125
*     LOCREQC=OFF;                  /* SET REQUISITES INCOMPLETE     */
         NI    LOCREQC,B'10111111'                                 0125
*     IF ICTEREQT(I)=ON             /* REQ ON TARGET SYSTEM          */
*         &ICTEREQI(I)=OFF          /* NOT REQUIRED TO BE IN ICT     */
*       THEN                                                       0126
         LR    @05,I                                               0126
         SLA   @05,3                                               0126
         L     @15,@PC00002                                        0126
         L     @01,RLISTPTR(,@15)                                  0126
         ALR   @01,@05                                             0126
         BCTR  @01,0                                               0126
         TM    ICTEREQT-7(@01),B'00000010'                         0126
         BNO   @RF00126                                            0126
         TM    ICTEREQI-7(@01),B'00000100'                         0126
         BNZ   @RF00126                                            0126
*       LOCREQC=ON;                 /* SET REQUISITES COMPLETE       */
         OI    LOCREQC,B'01000000'                                 0127
*     ELSE                                                         0128
*       IF ICTEREQB(I)=ON           /* REQ WAS BYPASSED              */
*         THEN                                                     0128
         B     @RC00126                                            0128
@RF00126 LR    @05,I                                               0128
         SLA   @05,3                                               0128
         L     @15,@PC00002                                        0128
         L     @01,RLISTPTR(,@15)                                  0128
         ALR   @01,@05                                             0128
         BCTR  @01,0                                               0128
         TM    ICTEREQB-7(@01),B'00001000'                         0128
         BNO   @RF00128                                            0128
*         LOCREQC=ON;               /* SET REQUISITES COMPLETE       */
         OI    LOCREQC,B'01000000'                                 0129
*     IF LOCREQC=OFF THEN                                          0130
*                                                                  0130
@RF00128 DS    0H                                                  0130
@RC00126 TM    LOCREQC,B'01000000'                                 0130
         BNZ   @RF00130                                            0130
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK THE ICT FOR THIS REQ                                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0131
*       CALL CKICTREQ;              /* CHECK FOR REQ IN ICT          */
         BAL   @14,CKICTREQ                                        0131
*     IF LOCREQC=OFF THEN                                          0132
*                                                                  0132
@RF00130 TM    LOCREQC,B'01000000'                                 0132
         BNZ   @RF00132                                            0132
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK THE ICT FOR SYSMODS WHICH SUPERSEDE THIS REQ        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0133
*       CALL CKICTSUP;              /* CHECK FOR REQ SUPD IN ICT     */
         BAL   @14,CKICTSUP                                        0133
*   END;                            /* END OF LOOP THRU ALL        0134
*                                      REQUISITES IN CURRENT REQ LIST*/
*                                                                  0134
@RF00132 ALR   I,INDXSTEP                                          0134
@DE00124 LR    @05,I                                               0134
         SLA   @05,3                                               0134
         L     @15,@PC00002                                        0134
         L     @01,RLISTPTR(,@15)                                  0134
         AL    @01,@CF00840                                        0134
         L     @05,ICTENTND(@05,@01)                               0134
         CL    @05,ICTENDIX                                        0134
         BE    @DC00124                                            0134
         TM    LOCREQC,B'01000000'                                 0134
         BO    @DL00124                                            0134
@DC00124 DS    0H                                                  0135
*   /*****************************************************************/
*   /*                                                               */
*   /* ALL REQS IN THE LIST HAVE BEEN CHECKED (IF LOCREQC IS "ON")   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0135
*   IF LOCREQC=OFF THEN             /*                               */
         TM    LOCREQC,B'01000000'                                 0135
         BNZ   @RF00135                                            0135
*     RETURN CODE(NOTCOMPL);        /* AN INCOMPLETE REQUISITE FOUND */
         LA    @15,4                                               0136
         L     @14,@SA00002                                        0136
         LM    @00,@12,@SA00002+8                                  0136
         BR    @14                                                 0136
*   ELSE                            /*                               */
*     RETURN CODE(COMPLETE);                                       0137
@RF00135 SLR   @15,@15                                             0137
         L     @14,@SA00002                                        0137
         LM    @00,@12,@SA00002+8                                  0137
         BR    @14                                                 0137
         EJECT
*                                                                  0138
*/********************************************************************/
*/*                                                                  */
*/*      CKICTREQ - CHECK ICT FOR THE CURRENT REQUISITE              */
*/*                                                                  */
*/*         RLISTPTR - POINTS TO THE REQUISITE LIST BEING CHECKED    */
*/*                                                                  */
*/*         I        - INDEX (IN REQUISITE LIST) OF THE REQUISITE    */
*/*                    TO BE CHECKED                                 */
*/*                                                                  */
*/*        NOTE - LOCREQC IS EXPECTED TO BE "OFF" ON ENTRY           */
*/*                                                                  */
*/*             - LOCREQC WILL BE SET "ON" IF THE REQUISITE IS       */
*/*               FOUND TO BE COMPLETE.                              */
*/*                                                                  */
*/*        NOTE - THIS INTERNAL PROCEDURE IS PART OF REQCHK          */
*/*                                                                  */
*/********************************************************************/
*                                                                  0138
*CKICTREQ:                                                         0138
*   PROC;                                                          0138
CKICTREQ STM   @14,@12,@SA00003                                    0138
*   CALL CHKICT(ICTENTNM(I),REQPTR);/* LOOK FOR REQ IN ICT           */
         LR    @03,I                                               0139
         SLA   @03,3                                               0139
         L     @15,@PC00002                                        0139
         L     @01,RLISTPTR(,@15)                                  0139
         AL    @01,@CF00840                                        0139
         LA    @03,ICTENTNM(@03,@01)                               0139
         ST    @03,@AL00001                                        0139
         LA    @03,REQPTR                                          0139
         ST    @03,@AL00001+4                                      0139
         LA    @01,@AL00001                                        0139
         BAL   @14,CHKICT                                          0139
*   IF REQPTR^=0                    /* REQUISITE FOUND IN ICT        */
*     THEN                                                         0140
         L     @03,REQPTR                                          0140
         LTR   @03,@03                                             0140
         BZ    @RF00140                                            0140
*     DO;                                                          0141
*                                                                  0141
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK THE ACTUAL REQUISITE FOUND IN THE ICT               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0142
*       IF REQPTR->ICTPPASS(1)=ON   /* CP2 RECURSION FLAG SET        */
*           ×REQPTR->ICTPGCPL(1)=ON /* REQ IS "GROUP" COMPLETE       */
*         THEN                                                     0142
         TM    ICTPPASS(@03),B'10000000'                           0142
         BO    @RT00142                                            0142
         TM    ICTPGCPL(@03),B'10000000'                           0142
         BNO   @RF00142                                            0142
@RT00142 DS    0H                                                  0143
*         LOCREQC=ON;               /* SET REQ COMPLETE FLAG         */
         OI    LOCREQC,B'01000000'                                 0143
*       ELSE                                                       0144
*         DO;                                                      0144
*                                                                  0144
         B     @RC00142                                            0144
@RF00142 DS    0H                                                  0145
*           /*********************************************************/
*           /*                                                       */
*           /* THE REQUISITE FOUND IN THE ICT IS NOT YET MARKED      */
*           /* "GROUP COMPLETE" ... CHECK IT BY CALLING HMASMCP2     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0145
*           CALL HMASMCP2(REQPTR->ICTPTF(1));/* CHECK IT             */
         L     @03,REQPTR                                          0145
         ST    @03,@AL00001                                        0145
         LA    @01,@AL00001                                        0145
         L     @15,@CA00028                                        0145
         BALR  @14,@15                                             0145
*           RFY                                                    0146
*             RTNCODE RSTD;                                        0146
*           IF RTNCODE=COMPLETE THEN                               0147
         LTR   RTNCODE,RTNCODE                                     0147
         BNZ   @RF00147                                            0147
*             LOCREQC=ON;           /* SET REQUISITE "GROUP COMPL."  */
         OI    LOCREQC,B'01000000'                                 0148
*           RFY                                                    0149
*             RTNCODE UNRSTD;                                      0149
@RF00147 DS    0H                                                  0150
*         END;                                                     0150
*     END;                          /* END OF CODE PROCESSING      0151
*                                      REQUISITE FOUND IN ICT        */
*   RETURN;                                                        0152
@EL00003 DS    0H                                                  0152
@EF00003 DS    0H                                                  0152
@ER00003 LM    @14,@12,@SA00003                                    0152
         BR    @14                                                 0152
*   END CKICTREQ;                                                  0153
         B     @EL00003                                            0153
         EJECT
*                                                                  0154
*/********************************************************************/
*/*                                                                  */
*/*    CKICTSUP - CHECK ICT TO SEE IF THE CURRENT REQUISITE IS SUPD  */
*/*               ... IF SO, SEE IF THE SUPERSEDING SYSMOD IS        */
*/*                   COMPLETE                                       */
*/*                                                                  */
*/*         RLISTPTR - POINTS TO THE REQUISITE LIST BEING CHECKED    */
*/*                                                                  */
*/*         I        - INDEX (IN REQUISITE LIST) OF THE REQUISITE    */
*/*                    TO BE CHECKED                                 */
*/*                                                                  */
*/*        NOTE - LOCREQC IS EXPECTED TO BE "OFF" ON ENTRY           */
*/*                                                                  */
*/*             - LOCREQC WILL BE SET "ON" IF THE REQUISITE IS       */
*/*               FOUND TO BE COMPLETE.                              */
*/*                                                                  */
*/*        NOTE - THIS INTERNAL PROCEDURE IS PART OF REQCHK          */
*/*                                                                  */
*/********************************************************************/
*                                                                  0154
*CKICTSUP:                                                         0154
*   PROC;                                                          0154
CKICTSUP STM   @14,@12,@SA00004                                    0154
*   SPTR=0;                         /* INITIALIZE PTR SO SUPICT PROC
*                                      STARTS LOOKING FOR SUPS AT THE
*                                      BEGINNING OF THE ICT.         */
         SLR   @15,@15                                             0155
         ST    @15,SPTR                                            0155
*   CALL SUPICT(ICTENTNM(I),SPTR);  /* CHECK ICT FOR SUPING PTF      */
*                                                                  0156
         LR    @15,I                                               0156
         SLA   @15,3                                               0156
         L     @14,@PC00002                                        0156
         L     @01,RLISTPTR(,@14)                                  0156
         AL    @01,@CF00840                                        0156
         LA    @15,ICTENTNM(@15,@01)                               0156
         ST    @15,@AL00001                                        0156
         LA    @15,SPTR                                            0156
         ST    @15,@AL00001+4                                      0156
         LA    @01,@AL00001                                        0156
         BAL   @14,SUPICT                                          0156
*   /*****************************************************************/
*   /*                                                               */
*   /* EXAMINE ALL SYSMODS IN THE ICT SUPERSEDING THE REQUISITE UNTIL*/
*   /* A "GROUP COMPLETE" ONE IS FOUND                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0157
*   DO WHILE LOCREQC=OFF            /* SYSMOD NOT CONSIDERED COMPLETE*/
*         &SPTR^=0;                 /* THERE IS A SUPERSEDING SYSMOD */
*                                                                  0157
         B     @DE00157                                            0157
@DL00157 DS    0H                                                  0158
*     /***************************************************************/
*     /*                                                             */
*     /* CHECK THE SYSMOD SUPERSEDING THE REQUISITE (SPTR POINTS TO  */
*     /* IT)                                                         */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0158
*     IF REQTYPE=IRQ                /* IFREQ REQUISITE               */
*         &ICTENTNM(I+1)=ICTPTFS(1) /* CAUSED BY "SELF"              */
*         &SPTR=PTFPTR              /* SUPERSEDED BY "SELF"          */
*       THEN                                                       0158
         L     @15,@PC00002+4                                      0158
         CLI   REQTYPE(@15),3                                      0158
         BNE   @RF00158                                            0158
         LR    @15,I                                               0158
         SLA   @15,3                                               0158
         L     @14,@PC00002                                        0158
         L     @01,RLISTPTR(,@14)                                  0158
         ALR   @01,@15                                             0158
         CLC   ICTENTNM(7,@01),ICTPTFS(PTFPTR)                     0158
         BNE   @RF00158                                            0158
         C     PTFPTR,SPTR                                         0158
         BE    @RT00158                                            0158
*       ;                           /* DO NOT USE "SELF" ... THERE IS
*                                      ANOTHER SUPERSEDER IN ICT     */
*     ELSE                                                         0160
*       DO;                                                        0160
@RF00158 DS    0H                                                  0161
*         IF SPTR->ICTPGCPL(1)=ON   /* SUPERSEDER IS "GROUP COMPLETE"*/
*             ×SPTR->ICTPPASS(1)=ON /* CP2 RECURSION FLAG SET        */
*             ×SPTR=PTFPTR          /* SUPERSEDER IS "SELF"          */
*           THEN                                                   0161
         L     @15,SPTR                                            0161
         TM    ICTPGCPL(@15),B'10000000'                           0161
         BO    @RT00161                                            0161
         TM    ICTPPASS(@15),B'10000000'                           0161
         BO    @RT00161                                            0161
         CR    @15,PTFPTR                                          0161
         BNE   @RF00161                                            0161
@RT00161 DS    0H                                                  0162
*           LOCREQC=ON;             /* SET REQ COMPLETE              */
         OI    LOCREQC,B'01000000'                                 0162
*         ELSE                                                     0163
*           DO;                                                    0163
*                                                                  0163
         B     @RC00161                                            0163
@RF00161 DS    0H                                                  0164
*             /*******************************************************/
*             /*                                                     */
*             /* SUPERSEDING SYSMOD IN THE ICT IS NOT YET MARKED     */
*             /* "GROUP" COMPLETE ... CHECK IT BY CALLING HMASMCP2   */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0164
*             CALL HMASMCP2(SPTR->ICTPTF(1));                      0164
         L     @01,SPTR                                            0164
         ST    @01,@AL00001                                        0164
         LA    @01,@AL00001                                        0164
         L     @15,@CA00028                                        0164
         BALR  @14,@15                                             0164
*             RFY                                                  0165
*               RTNCODE RSTD;                                      0165
*             IF RTNCODE=COMPLETE THEN                             0166
         LTR   RTNCODE,RTNCODE                                     0166
         BNZ   @RF00166                                            0166
*               LOCREQC=ON;         /* SET REQ COMPLETE FLAG         */
         OI    LOCREQC,B'01000000'                                 0167
*             RFY                                                  0168
*               RTNCODE UNRSTD;                                    0168
@RF00166 DS    0H                                                  0169
*           END;                                                   0169
*       END;                                                       0170
@RC00161 DS    0H                                                  0171
*     IF LOCREQC=OFF THEN                                          0171
*                                                                  0171
@RT00158 TM    LOCREQC,B'01000000'                                 0171
         BNZ   @RF00171                                            0171
*       /*************************************************************/
*       /*                                                           */
*       /* THE SUPERSEDER DID NOT CHECK SUCCESSFULLY. LOOK FOR       */
*       /* ANOTHER SUPERSEDER IN THE ICT.                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0172
*       CALL SUPICT(ICTENTNM(I),SPTR);/* GET ANOTHER SUP             */
         LR    @15,I                                               0172
         SLA   @15,3                                               0172
         L     @14,@PC00002                                        0172
         L     @01,RLISTPTR(,@14)                                  0172
         AL    @01,@CF00840                                        0172
         LA    @15,ICTENTNM(@15,@01)                               0172
         ST    @15,@AL00001                                        0172
         LA    @15,SPTR                                            0172
         ST    @15,@AL00001+4                                      0172
         LA    @01,@AL00001                                        0172
         BAL   @14,SUPICT                                          0172
*   END;                            /* END OF LOOP FOR ALL         0173
*                                      SUPERSEDING SYSMODS IN ICT    */
@RF00171 DS    0H                                                  0173
@DE00157 TM    LOCREQC,B'01000000'                                 0173
         BNZ   @DC00157                                            0173
         L     @15,SPTR                                            0173
         LTR   @15,@15                                             0173
         BNZ   @DL00157                                            0173
@DC00157 DS    0H                                                  0174
*   RETURN;                                                        0174
@EL00004 DS    0H                                                  0174
@EF00004 DS    0H                                                  0174
@ER00004 LM    @14,@12,@SA00004                                    0174
         BR    @14                                                 0174
*   END CKICTSUP;                                                  0175
*   END REQCHK;                                                    0176
         EJECT
*                                                                  0177
*/********************************************************************/
*/*                                                                  */
*/*      CHKICT   - CHECK THE ICT FOR A NON-NOGO, NON-DELETED, NON-  */
*/*                 SUPERSEDED ICT PTF SECTION ENTRY REPRESENTING    */
*/*                 THE SYSMOD NAME PASSED BY THE CALLER.            */
*/*                                                                  */
*/*               - IF SUCH AN ENTRY IS FOUND, RETURN A POINTER TO   */
*/*                 IT.                                              */
*/*                                                                  */
*/*                 IF SUCH AN ENTRY IS NOT FOUND, RETURN THE POINTER*/
*/*                 AS ZERO.                                         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0177
*CHKICT:                                                           0177
*   PROC(SYSMNAME,SRCHPTR);                                        0177
CHKICT   STM   @14,@12,12(@13)                                     0177
         MVC   @PC00005(8),0(@01)                                  0177
*   DECLARE                                                        0178
*     SYSMNAME CHAR(7);             /* SYSMOD TO BE FOUND IN ICT     */
*   DECLARE                                                        0179
*     SRCHPTR PTR(31);              /* RETURNS PTR TO SYSMOD FOUND   */
*   DECLARE                                                        0180
*     P2PTR PTR(31);                /* PTR FOR ICT PTF LOOP          */
*   RFY                                                            0181
*     ICTPTF BASED(P2PTR);          /* PTF BASED ON PTR              */
*   SRCHPTR=0;                      /* INITIALIZE TO ZERO WHICH    0182
*                                      IMPLIES "NOT FOUND"           */
*                                                                  0182
         L     @15,@PC00005+4                                      0182
         SLR   @14,@14                                             0182
         ST    @14,SRCHPTR(,@15)                                   0182
*   /*****************************************************************/
*   /*                                                               */
*   /* GO THRU THE ICT PTF SECTION ENTIRES LOOKING FOR "SYSMNAME"    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0183
*   DO P2PTR=CCAICPTF BY LENGTH(ICTPTF(1)) WHILE(/* ICT PTF LOOP     */
*         ICTPEND(1)^=ICTENDNT      /* TILL END                      */
*         &SRCHPTR=0);              /* AND SYSMOD NOT FOUND          */
         L     P2PTR,CCAICPTF(,CCAPTR)                             0183
         B     @DE00183                                            0183
@DL00183 DS    0H                                                  0184
*     IF ICTPTFS(1)=SYSMNAME        /* IF EQUAL SYSMOD FOUND         */
*         &ICTPNOGO(1)=OFF          /* NOT NOGO                      */
*         &ICTPDEXP(1)=OFF          /* NOT EXPLICITLY DELETED        */
*         &ICTPDIMP(1)=OFF          /* NOT IMPLICITLY DELETED        */
*         &ICTPSUPN(1)=0            /* NOT SUPERSEDED                */
*       THEN                                                       0184
         L     @03,@PC00005                                        0184
         CLC   ICTPTFS(7,P2PTR),SYSMNAME(@03)                      0184
         BNE   @RF00184                                            0184
         TM    ICTPNOGO(P2PTR),B'01000000'                         0184
         BNZ   @RF00184                                            0184
         TM    ICTPDEXP(P2PTR),B'00110000'                         0184
         BNZ   @RF00184                                            0184
         MVC   @ZT00002+2(2),ICTPSUPN(P2PTR)                       0184
         L     @03,@ZT00002                                        0184
         LTR   @03,@03                                             0184
         BNZ   @RF00184                                            0184
*       SRCHPTR=P2PTR;              /* RETURN POINTER TO CALLER      */
         L     @03,@PC00005+4                                      0185
         ST    P2PTR,SRCHPTR(,@03)                                 0185
*   END;                                                           0186
@RF00184 AH    P2PTR,@CH00832                                      0186
@DE00183 CLC   ICTPEND(4,P2PTR),ICTENDNT                           0186
         BE    @DC00183                                            0186
         L     @03,@PC00005+4                                      0186
         L     @03,SRCHPTR(,@03)                                   0186
         LTR   @03,@03                                             0186
         BZ    @DL00183                                            0186
@DC00183 DS    0H                                                  0187
*   RETURN;                                                        0187
@EL00005 DS    0H                                                  0187
@EF00005 DS    0H                                                  0187
@ER00005 LM    @14,@12,12(@13)                                     0187
         BR    @14                                                 0187
*   END CHKICT;                                                    0188
         EJECT
*                                                                  0189
*/********************************************************************/
*/*                                                                  */
*/*      SUPICT   - CHECK THE ICT FOR A NON-NOGO, NON-DELETED, NON-  */
*/*                 SUPERSEDED SYSMOD WHICH SUPERSEDES THE SYSMOD    */
*/*                 PASSED BY THE CALLER.                            */
*/*                                                                  */
*/*               - THE SERACH THRU THE ICT PTF SECTION IS STARTED   */
*/*                 FROM THE PTF SECTION ENTRY AFTER THE ENTRY       */
*/*                 POINTED TO BY THE PARAMETER, "SUPPTR".  IF       */
*/*                 "SUPPTR" IS ZERO UPON ENTRY, THE SEARCH WILL     */
*/*                 START AT THE BEGINNING OF THE ICT PTF SECTION.   */
*/*                                                                  */
*/*               - ON EXIT, THE PARAMETER "SUPPTR" WILL POINT TO    */
*/*                 THE NEXT SYSMOD FOUND IN THE ICT WHICH SUPERSEDES*/
*/*                 THE SYSMOD PASSED.  IF "SUPPTR" IS ZERO ON EXIT, */
*/*                 NO OTHER SYSMOD WAS FOUND IN THE ICT WHICH       */
*/*                 SUPERSEDED THE SYSMOD PASSED.                    */
*/*                                                                  */
*/********************************************************************/
*                                                                  0189
*SUPICT:                                                           0189
*   PROC(SUPNAME,SUPPTR);                                          0189
SUPICT   STM   @14,@12,12(@13)                                     0189
         MVC   @PC00006(8),0(@01)                                  0189
*   DECLARE                                                        0190
*     SUPNAME CHAR(7);              /* SYSMOD TO BE FOUND AS       0190
*                                      SUPERSEDED IN ICT             */
*   DECLARE                                                        0191
*     SUPPTR PTR(31);               /* UPON ENTRY THIS PARAMETER IS
*                                      EITHER 0 OR POINTS TO AN ICT
*                                      PTF SECTION ENTRY. .........
*                                      UPON EXIT THIS PARAMETER IS 0191
*                                      SET TO EITHER 0 OR POINTS TO
*                                      THE ICT PTF SECTION ENTRY FOR
*                                      A SYSMOD WHICH SUPERSEDES   0191
*                                      "SUPNAME".                    */
*   DECLARE                                                        0192
*     P3PTR PTR(31);                /* PTR FOR ICT PTF LOOP          */
*   DECLARE                                                        0193
*     UPTR PTR(31);                 /* PTR TO SUPERSEDING SYSMOD     */
*   DECLARE                                                        0194
*     L FIXED(31);                  /* INDEX - SUP LIST ENTRIES      */
*   RFY                                                            0195
*     ICTPTF BASED(SUPPTR);         /* ADDRESS PTF SECT ENTRY PASSED */
*   UPTR=0;                         /* SUPERSEDING SYSMOD NOT FOUND  */
         SLR   UPTR,UPTR                                           0196
*   IF SUPPTR=0 THEN                                               0197
         L     @02,@PC00006+4                                      0197
         L     @15,SUPPTR(,@02)                                    0197
         LTR   @15,@15                                             0197
         BNZ   @RF00197                                            0197
*     SUPPTR=CCAICPTF;              /* START WITH THE FIRST PTF    0198
*                                      SECTION ENTRY.                */
         MVC   SUPPTR(4,@02),CCAICPTF(CCAPTR)                      0198
*   ELSE                                                           0199
*     SUPPTR=ADDR(ICTPTF(2));       /* START WITH THE NEXT PTF     0199
*                                      SECTION ENTRY.                */
         B     @RC00197                                            0199
@RF00197 L     @02,@PC00006+4                                      0199
         L     @01,SUPPTR(,@02)                                    0199
         LA    @15,ICTPTF+116(,@01)                                0199
         ST    @15,SUPPTR(,@02)                                    0199
*                                                                  0200
*   /*****************************************************************/
*   /*                                                               */
*   /* GO THRU ALL REMAINING PTF SECTION ENTRIES                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0200
*   RFY                             /*                               */
*     ICTPTF BASED(P3PTR);          /* NEW ICT PTF BASED             */
@RC00197 DS    0H                                                  0201
*   DO P3PTR=SUPPTR BY LENGTH(ICTPTF(1)) WHILE(/* LOOP THRU REMAINING
*                                      ICT PTFS                      */
*         ICTPEND(1)^=ICTENDNT      /* TILL END                      */
*         &UPTR=0);                 /* OR SUPING SYSMOD FOUND        */
         L     @15,@PC00006+4                                      0201
         L     P3PTR,SUPPTR(,@15)                                  0201
         B     @DE00201                                            0201
@DL00201 DS    0H                                                  0202
*     IF ICTPNOGO(1)=OFF            /* NOT NOGO                      */
*         &ICTPDEXP(1)=OFF          /* NOT EXPLICITLY DELETED        */
*         &ICTPDIMP(1)=OFF          /* NOT IMPLICITLY DELETED        */
*         &ICTPSUPN(1)=0            /* NOT SUPERSEDED                */
*       THEN                                                       0202
         TM    ICTPNOGO(P3PTR),B'01000000'                         0202
         BNZ   @RF00202                                            0202
         TM    ICTPDEXP(P3PTR),B'00110000'                         0202
         BNZ   @RF00202                                            0202
         MVC   @ZT00002+2(2),ICTPSUPN(P3PTR)                       0202
         L     @15,@ZT00002                                        0202
         LTR   @15,@15                                             0202
         BNZ   @RF00202                                            0202
*       DO;                                                        0203
*                                                                  0203
*         /***********************************************************/
*         /*                                                         */
*         /* GO THRU THE LIST OF SUPERSEDED SYSMODS IN THE CURRENT   */
*         /* PTF SECTION ENTRY                                       */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0204
*         DO L=1 BY 1 WHILE ICTPSCHN(1)->ICTSUPND(L)^=ICTENDIX&UPTR=0;
         LA    L,1                                                 0204
         B     @DE00204                                            0204
@DL00204 DS    0H                                                  0205
*                                   /* SUPERSEDING SYSMOD NOT FOUND  */
*           IF ICTPSCHN(1)->ICTSUPNM(L)=SUPNAME THEN               0205
         LR    @05,L                                               0205
         SLA   @05,3                                               0205
         MVC   @TF00001(4),ICTPSCHN(P3PTR)                         0205
         L     @01,@TF00001                                        0205
         L     @15,@PC00006                                        0205
         ALR   @01,@05                                             0205
         AL    @01,@CF00840                                        0205
         CLC   ICTSUPNM(7,@01),SUPNAME(@15)                        0205
         BNE   @RF00205                                            0205
*             UPTR=ADDR(ICTPTF(1)); /* POINT TO SUPERSEDER           */
         LR    UPTR,P3PTR                                          0206
*         END;                                                     0207
@RF00205 AH    L,@CH00085                                          0207
@DE00204 LR    @05,L                                               0207
         SLA   @05,3                                               0207
         MVC   @TF00001(4),ICTPSCHN(P3PTR)                         0207
         L     @01,@TF00001                                        0207
         AL    @01,@CF00840                                        0207
         L     @05,ICTSUPND(@05,@01)                               0207
         CL    @05,ICTENDIX                                        0207
         BE    @DC00204                                            0207
         LTR   UPTR,UPTR                                           0207
         BZ    @DL00204                                            0207
@DC00204 DS    0H                                                  0208
*       END;                                                       0208
*   END;                                                           0209
@RF00202 AH    P3PTR,@CH00832                                      0209
@DE00201 CLC   ICTPEND(4,P3PTR),ICTENDNT                           0209
         BE    @DC00201                                            0209
         LTR   UPTR,UPTR                                           0209
         BZ    @DL00201                                            0209
@DC00201 DS    0H                                                  0210
*   SUPPTR=UPTR;                    /* RETURN POINTER TO CALLER      */
         L     @02,@PC00006+4                                      0210
         ST    UPTR,SUPPTR(,@02)                                   0210
*   RETURN;                                                        0211
@EL00006 DS    0H                                                  0211
@EF00006 DS    0H                                                  0211
@ER00006 LM    @14,@12,12(@13)                                     0211
         BR    @14                                                 0211
*   END SUPICT;                                                    0212
         EJECT
*                                                                  0213
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS CALLED FOR THE RESTORE FUNCTION TO INSURE ALL */
*   /* SYSMODS THAT PRE, REQ, IFREQ, OR SUP THE PASSED SYSMOD ARE    */
*   /* COMPLETE. IF SO THEN PASSED SYSMOD IS COMPLETE ELSE PASSED    */
*   /* SYSMOD IS NOT COMPLETE                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0213
*RESREQ1:                           /*                               */
*   PROCEDURE(RESTYPE);             /*                               */
RESREQ1  STM   @14,@12,@SA00007                                    0213
         MVC   @PC00007(4),0(@01)                                  0213
*   DECLARE                         /*                               */
*     RESTYPE FIXED(8);             /*                               */
*   DECLARE                         /*                               */
*     RESRC FIXED(8);               /*                               */
*   DECLARE                         /*                               */
*     RESINCR FIXED(31);            /* INCR THRU VARIABLE LIST       */
*   DECLARE                         /*                               */
*     RESX FIXED(31);               /* INDEX THRU VARIABLE LISTS     */
*   DECLARE                         /*                               */
*     P1PTR PTR(31);                /* PTR FOR ICT PTF LOOP          */
*   DECLARE                         /*                               */
*     RESVRPTR PTR(31);             /* BASE FOR LISTS                */
*   RFY                             /*                               */
*     ICTPTF BASED(P1PTR);          /* BASE FOR ICT PTFS             */
*   RFY                             /*                               */
*     ICTENTLS BASED(RESVRPTR);     /*                               */
*   RESRC=COMPLETE;                 /*                               */
*                                                                  0222
         SLR   RESRC,RESRC                                         0222
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THRU ALL ICT PTFS UNTIL END OF ICT OR TILL SYSMOD THAT IS*/
*   /* RELATED TO CURRENT IS FOUND THAT IS NOT COMPLETE              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0223
*   DO P1PTR=CCAICPTF BY LENGTH(ICTPTF(1)) WHILE(/* ICT PTF LOOP     */
*         ICTPEND(1)^=ICTENDNT      /* TILL END                      */
*         &RESRC=COMPLETE);         /* AND CURRENT SYSMOD COMPLETE   */
*                                                                  0223
         L     P1PTR,CCAICPTF(,CCAPTR)                             0223
         B     @DE00223                                            0223
@DL00223 DS    0H                                                  0224
*     /***************************************************************/
*     /*                                                             */
*     /* DETERMINE CORRECT LIST TO LOOP THRU BASED ON TYPE PASSED    */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0224
*     RESINCR=1;                    /* DEFAULT INCR IS 1             */
         LA    RESINCR,1                                           0224
*     IF RESTYPE=PRE                /*                               */
*       THEN                        /*                               */
         L     @07,@PC00007                                        0225
         CLI   RESTYPE(@07),1                                      0225
         BNE   @RF00225                                            0225
*       RESVRPTR=ICTPPCHN(1);       /* ADDR OF PRE LIST              */
         MVC   @TF00001(4),ICTPPCHN(P1PTR)                         0226
         L     RESVRPTR,@TF00001                                   0226
*     ELSE                          /*                               */
*       IF RESTYPE=REQ              /*                               */
*         THEN                      /*                               */
         B     @RC00225                                            0227
@RF00225 L     @07,@PC00007                                        0227
         CLI   RESTYPE(@07),2                                      0227
         BNE   @RF00227                                            0227
*         RESVRPTR=ICTPRCHN(1);     /* ADDR OF REQ LIST              */
         MVC   @TF00001(4),ICTPRCHN(P1PTR)                         0228
         L     RESVRPTR,@TF00001                                   0228
*       ELSE                        /*                               */
*         IF RESTYPE=IRQ            /*                               */
*           THEN                    /*                               */
         B     @RC00227                                            0229
@RF00227 L     @07,@PC00007                                        0229
         CLI   RESTYPE(@07),3                                      0229
         BNE   @RF00229                                            0229
*           DO;                     /*                               */
*             RESVRPTR=ICTPICHN(1); /* ADDR OF IFREQ LIST            */
         MVC   @TF00001(4),ICTPICHN(P1PTR)                         0231
         L     RESVRPTR,@TF00001                                   0231
*             RESINCR=2;            /* INCR FOR LOOP                 */
         LA    RESINCR,2                                           0232
*           END;                    /*                               */
*         ELSE                      /*                               */
*           RESVRPTR=ICTPSCHN(1);   /* ADDR OF SUP LIST              */
*                                                                  0234
         B     @RC00229                                            0234
@RF00229 MVC   @TF00001(4),ICTPSCHN(P1PTR)                         0234
         L     RESVRPTR,@TF00001                                   0234
*     /***************************************************************/
*     /*                                                             */
*     /* NOW LOOP THRU APPROPRIATE LIST TO SEE IF ELEMENT IN LIST IS */
*     /* EQUAL TO CURRENT SYSMOD                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0235
*     DO RESX=1 BY RESINCR WHILE(   /* LOOP THRU LIST                */
*           ICTENTND(RESX)^=ICTENDIX/* TILL END                      */
*           &RESRC=COMPLETE);       /* AND CURRENT STILL COMPLETE    */
*                                                                  0235
@RC00229 DS    0H                                                  0235
@RC00227 DS    0H                                                  0235
@RC00225 LA    RESX,1                                              0235
         B     @DE00235                                            0235
@DL00235 DS    0H                                                  0236
*       /*************************************************************/
*       /*                                                           */
*       /* IF ENTRY IN LIST IS EQUAL TO THE SYSMOD PASSED THEN CHECK */
*       /* TO SEE THIS SYSMOD IS COMPLETE. IF NOT COMPLETE THEN SET  */
*       /* RETURN CODE TO STOP LOOP AND STOP PROCESS FOR SYSMOD      */
*       /* PASSED                                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0236
*       IF ICTENTNM(RESX)=PTFPTR->ICTPTFS(1)/* IF CURRENT RELATED    */
*           &ICTPPASS(1)=OFF        /* AND FIRST LOOK AT THIS SYSMOD */
*         THEN                      /*                               */
         LR    @15,RESX                                            0236
         SLA   @15,3                                               0236
         ALR   @15,RESVRPTR                                        0236
         AL    @15,@CF00840                                        0236
         CLC   ICTENTNM(7,@15),ICTPTFS(PTFPTR)                     0236
         BNE   @RF00236                                            0236
         TM    ICTPPASS(P1PTR),B'10000000'                         0236
         BNZ   @RF00236                                            0236
*         DO;                       /*                               */
*           CALL HMASMCP2(ICTPTF(1));/* CHECK THIS PTF FOR COMPLETE  */
         ST    P1PTR,@AL00001                                      0238
         LA    @01,@AL00001                                        0238
         L     @15,@CA00028                                        0238
         BALR  @14,@15                                             0238
*           RFY                     /*                               */
*             RTNCODE RSTD;         /*                               */
*           IF RTNCODE^=ZERO        /* IF NOT COMPLETE               */
*             THEN                  /* THEN                          */
         LTR   RTNCODE,RTNCODE                                     0240
         BZ    @RF00240                                            0240
*             RESRC=NOTCOMPL;       /* CURRENT SYSMOD NOT COMPLETE   */
         LA    RESRC,4                                             0241
*           RFY                     /*                               */
*             RTNCODE UNRSTD;       /*                               */
@RF00240 DS    0H                                                  0243
*         END;                      /* END SYSMOD RELATED            */
*     END;                          /* END LOOP THRU LIST            */
@RF00236 ALR   RESX,RESINCR                                        0244
@DE00235 LR    @15,RESX                                            0244
         SLA   @15,3                                               0244
         AL    @15,@CF00840                                        0244
         L     @15,ICTENTND(@15,RESVRPTR)                          0244
         CL    @15,ICTENDIX                                        0244
         BE    @DC00235                                            0244
         CH    RESRC,@CH00251                                      0244
         BE    @DL00235                                            0244
@DC00235 DS    0H                                                  0245
*   END;                            /* END ICT PTF LOOP              */
         AH    P1PTR,@CH00832                                      0245
@DE00223 CLC   ICTPEND(4,P1PTR),ICTENDNT                           0245
         BE    @DC00223                                            0245
         CH    RESRC,@CH00251                                      0245
         BE    @DL00223                                            0245
@DC00223 DS    0H                                                  0246
*   RETURN CODE(RESRC);             /*                               */
         LR    @15,RESRC                                           0246
         L     @14,@SA00007                                        0246
         LM    @00,@12,@SA00007+8                                  0246
         BR    @14                                                 0246
*   END RESREQ1;                    /*                               */
*   END HMASMCP2                                                   0248
*                                                                  0248
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMICT)                                       */
*                                                                  0248
*       ;                                                          0248
@DATA    DS    0H
@CH00251 DC    H'0'
@CH00085 DC    H'1'
@CH00182 DC    H'2'
@CH00234 DC    H'3'
@CH00037 DC    H'4'
@CH00832 DC    H'116'
         DS    0F
@AL00086 DC    A(@CH00085+1)           LIST WITH   1 ARGUMENT(S)
@AL00090 DC    A(@CH00182+1)           LIST WITH   1 ARGUMENT(S)
@AL00095 DC    A(@CH00234+1)           LIST WITH   1 ARGUMENT(S)
@AL00100 DC    A(@CH00037+1)           LIST WITH   1 ARGUMENT(S)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00002 DS    15F
@PC00002 DS    2F
@SA00007 DS    15F
@PC00007 DS    1F
@SA00003 DS    15F
@SA00004 DS    15F
@PC00005 DS    2F
@PC00006 DS    2F
@AL00001 DS    2A
@TF00001 DS    F
@ZTEMPS  DS    0F
@ZT00002 DC    F'0'
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
HMASMCP2 CSECT
         DS    0F
@CF00840 DC    F'-8'
@DATD    DSECT
         DS    0D
REQPTR   DS    A
SPTR     DS    A
CP2FLGS  DS    BL1
         ORG   CP2FLGS
LOCALCP2 DS    BL1
LOCREQC  EQU   CP2FLGS+0
@NM00097 EQU   CP2FLGS+0
@NM00098 EQU   CP2FLGS+0
@NM00099 EQU   CP2FLGS+0
@NM00100 EQU   CP2FLGS+0
@NM00101 EQU   CP2FLGS+0
@NM00102 EQU   CP2FLGS+0
         ORG   CP2FLGS+1
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
HMASMCP2 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CA00028 DC    A(HMASMCP2)
         DS    0D
ICTENDCH DC    X'FFFFFFFF'
PATCHCP2 DS    CL80
         ORG   PATCHCP2
@NM00103 DC    80X'FF'
         ORG   PATCHCP2+80
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RESVRPTR EQU   @05
P1PTR    EQU   @02
RESX     EQU   @07
RESINCR  EQU   @06
RESRC    EQU   @04
L        EQU   @04
UPTR     EQU   @03
P3PTR    EQU   @02
P2PTR    EQU   @02
INDXSTEP EQU   @04
I        EQU   @02
PTFPTR   EQU   @03
CP2RETRN EQU   @02
CCAPTR   EQU   @11
RTNCODE  EQU   @15
RTNREG   EQU   @14
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAICT   EQU   CCAFICT
CCAICPTF EQU   CCAFICT+4
CCAICMOD EQU   CCAFICT+8
CCAICLMD EQU   CCAFICT+12
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00009 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAAPPLY EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCAFLAG2 EQU   CCAFFUNC+11
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCABLDLA EQU   0
@NM00025 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00027 EQU   CCABLDLL
CCALKDRC EQU   @NM00027+20
@NM00029 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00029+20
@NM00031 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00031+20
@NM00033 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00033+20
@NM00035 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00035+20
@NM00037 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00037+20
@NM00039 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00039+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMICT EQU   0
ICTCORE  EQU   HMASMICT
ICTPSPLN EQU   ICTCORE
ICTMSPLN EQU   ICTCORE+4
ICTLSPLN EQU   ICTCORE+8
ICTGMSPL EQU   0
ICTPTF   EQU   0
ICTPTFS  EQU   ICTPTF
ICTPEND  EQU   ICTPTFS
ICTPFLG1 EQU   ICTPTF+7
ICTPFLG3 EQU   ICTPTF+8
ICTPPROC EQU   ICTPFLG3
ICTPNOGO EQU   ICTPFLG3
ICTPFLG5 EQU   ICTPTF+9
ICTPFLG6 EQU   ICTPTF+11
ICTPFLF  EQU   ICTPFLG6
ICTPFLG2 EQU   ICTPTF+12
ICTPFLG4 EQU   ICTPTF+13
ICTPDEXP EQU   ICTPFLG4
ICTPDIMP EQU   ICTPFLG4
ICTPFLG8 EQU   ICTPTF+14
ICTPGCPL EQU   ICTPFLG8
ICTPECPL EQU   ICTPFLG8
ICTPFLG9 EQU   ICTPTF+15
@NM00053 EQU   ICTPFLG9
ICTPFLGA EQU   ICTPTF+16
ICTPUSR1 EQU   ICTPFLGA
ICTPPASS EQU   ICTPUSR1
ICTPSUPN EQU   ICTPTF+20
ICTPCHN  EQU   ICTPTF+64
ICTPRCHN EQU   ICTPTF+68
ICTPSCHN EQU   ICTPTF+72
ICTPPCHN EQU   ICTPTF+76
ICTPICHN EQU   ICTPTF+80
ICTPNCHN EQU   ICTPTF+84
ICTPVCHN EQU   ICTPTF+88
ICTPDCHN EQU   ICTPTF+92
ICTPBCHN EQU   ICTPTF+96
ICTIXPF  EQU   0
ICTENTLS EQU   0
ICTENTNT EQU   ICTENTLS
ICTENTNM EQU   ICTENTNT
ICTENTND EQU   ICTENTNM
ICTENTST EQU   ICTENTNT+7
ICTEREQB EQU   ICTENTST
ICTEREQI EQU   ICTENTST
ICTEREQT EQU   ICTENTST
ICTREQLS EQU   0
ICTREQNT EQU   ICTREQLS
ICTREQNM EQU   ICTREQNT
ICTREQST EQU   ICTREQNT+7
ICTSUPLS EQU   0
ICTSUPNT EQU   ICTSUPLS
ICTSUPNM EQU   ICTSUPNT
ICTSUPND EQU   ICTSUPNM
ICTPRELS EQU   0
ICTPRENT EQU   ICTPRELS
ICTPRENM EQU   ICTPRENT
ICTPREST EQU   ICTPRENT+7
ICTIRQLS EQU   0
ICTIRQNT EQU   ICTIRQLS
ICTIRQNM EQU   ICTIRQNT
ICTIRQST EQU   ICTIRQNT+7
ICTCSRST EQU   ICTIRQNT+15
ICTNPRLS EQU   0
ICTNPRNT EQU   ICTNPRLS
ICTNPRNM EQU   ICTNPRNT
ICTVRSLS EQU   0
ICTVRSNT EQU   ICTVRSLS
ICTVRSNM EQU   ICTVRSNT
ICTDELLS EQU   0
ICTDELNT EQU   ICTDELLS
ICTDELNM EQU   ICTDELNT
ICTDELST EQU   ICTDELNT+7
ICTSBYLS EQU   0
ICTSBYNT EQU   ICTSBYLS
ICTSBYNM EQU   ICTSBYNT
ICTMOD   EQU   0
ICTMNAME EQU   ICTMOD
ICTMFLG2 EQU   ICTMOD+8
ICTMFLG1 EQU   ICTMOD+9
ICTMMODR EQU   ICTMFLG1
ICTMFLG3 EQU   ICTMOD+10
ICTMFLG4 EQU   ICTMOD+11
ICTMFLG5 EQU   ICTMOD+12
ICTMODF4 EQU   ICTMOD+13
ICTMLEP1 EQU   ICTMODF4
ICTMODF5 EQU   ICTMOD+14
ICTMLEP2 EQU   ICTMODF5
ICTMODF6 EQU   ICTMOD+15
ICTMLEP3 EQU   ICTMODF6
ICTMODF7 EQU   ICTMOD+16
ICTMLEP4 EQU   ICTMODF7
ICTMACF4 EQU   ICTMOD+17
ICTMCHN  EQU   ICTMOD+100
ICTMICHN EQU   ICTMOD+104
ICTMACHN EQU   ICTMOD+112
ICTMTCHN EQU   ICTMOD+116
ICTMVCHN EQU   ICTMOD+120
ICTMUCHN EQU   ICTMOD+124
ICTIXMF  EQU   0
ICTMIDLS EQU   0
ICTMID   EQU   ICTMIDLS
ICTMODID EQU   ICTMID
ICTMODST EQU   ICTMID+7
ICTASMLS EQU   0
ICTASMAD EQU   ICTASMLS
ICTTALLS EQU   0
ICTTALNM EQU   ICTTALLS
ICTMVRLS EQU   0
ICTMVRNT EQU   ICTMVRLS
ICTMVRNM EQU   ICTMVRNT
ICTMUMLS EQU   0
ICTMUMNT EQU   ICTMUMLS
ICTMUMNM EQU   ICTMUMNT
ICTLMOD  EQU   0
ICTLMNAM EQU   ICTLMOD
ICTLNAME EQU   ICTLMNAM
ICTLFLG4 EQU   ICTLMOD+8
ICTLFLG1 EQU   ICTLMOD+9
ICTLFLG5 EQU   ICTLMOD+10
ICTLFLG6 EQU   ICTLMOD+11
ICTLFLG7 EQU   ICTLMOD+12
ICTLFLG2 EQU   ICTLMOD+13
ICTLFLG3 EQU   ICTLMOD+14
ICTLCHN  EQU   ICTLMOD+34
ICTIXLF  EQU   0
CCADSIDA EQU   0
CCATYPEA EQU   0
PTFENTRY EQU   0
RLISTPTR EQU   0
REQTYPE  EQU   0
SYSMNAME EQU   0
SRCHPTR  EQU   0
SUPNAME  EQU   0
SUPPTR   EQU   0
RESTYPE  EQU   0
ICTENDNT EQU   ICTENDCH
ICTENDIX EQU   ICTENDCH
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
ICTIXL   EQU   ICTIXLF
@NM00096 EQU   ICTLMOD+38
ICTLTTR  EQU   ICTLMOD+31
ICTTG2   EQU   ICTLMOD+23
ICTTG1   EQU   ICTLMOD+15
@NM00095 EQU   ICTLFLG3
ICTLZAP  EQU   ICTLFLG3
ICTLLKD  EQU   ICTLFLG3
ICTLCPY  EQU   ICTLFLG3
ICTLXPND EQU   ICTLFLG3
ICTTIND2 EQU   ICTLFLG3
ICTTIND1 EQU   ICTLFLG3
@NM00094 EQU   ICTLFLG2
ICTLDEL  EQU   ICTLFLG2
@NM00093 EQU   ICTLFLG2
ICTLTDEL EQU   ICTLFLG2
ICTLINK  EQU   ICTLFLG2
ICTCOPY  EQU   ICTLFLG2
@NM00092 EQU   ICTLFLG7
@NM00091 EQU   ICTLFLG6
@NM00090 EQU   ICTLFLG5
ICTLPAGA EQU   ICTLFLG5
ICTLNE   EQU   ICTLFLG5
@NM00089 EQU   ICTLFLG1
ICTLDC   EQU   ICTLFLG1
ICTLREFR EQU   ICTLFLG1
ICTLOVLY EQU   ICTLFLG1
ICTLSCTR EQU   ICTLFLG1
ICTLREUS EQU   ICTLFLG1
ICTLRENT EQU   ICTLFLG1
ICTLAPF  EQU   ICTLFLG1
@NM00088 EQU   ICTLFLG4
ICTLPASS EQU   ICTLFLG4
ICTLDDCK EQU   ICTLFLG4
ICTLMSG  EQU   ICTLFLG4
ICTLCPL  EQU   ICTLFLG4
ICTLNOGO EQU   ICTLFLG4
ICTLPROC EQU   ICTLFLG4
ICTLEND  EQU   ICTLNAME
@NM00087 EQU   ICTMUMNT+7
ICTMUMND EQU   ICTMUMNM
@NM00086 EQU   ICTMVRNT+7
ICTMVRND EQU   ICTMVRNM
ICTTALND EQU   ICTTALNM
ICTASMND EQU   ICTASMAD
ICTMIDTY EQU   ICTMODST
ICTMIDAM EQU   ICTMODST
ICTMIDRG EQU   ICTMODST
ICTMIDF1 EQU   ICTMODST
ICTMIDPL EQU   ICTMODST
ICTMIDPS EQU   ICTMODST
@NM00085 EQU   ICTMODST
ICTMIDND EQU   ICTMODID
ICTIXM   EQU   ICTIXMF
@NM00084 EQU   ICTMOD+128
ICTMICHA EQU   ICTMOD+108
ICTPPTR  EQU   ICTMOD+96
@NM00083 EQU   ICTMOD+95
ICTMFMID EQU   ICTMOD+88
@NM00082 EQU   ICTMOD+87
ICTMRMID EQU   ICTMOD+80
ICTMSSI  EQU   ICTMOD+72
ICTMDOBJ EQU   ICTMOD+64
ICTMSYSL EQU   ICTMOD+56
ICTMDSTL EQU   ICTMOD+48
ICTMASLB EQU   ICTMOD+40
ICTTOLIB EQU   ICTMOD+32
ICTFMLIB EQU   ICTMOD+24
ICTMRELN EQU   ICTMOD+22
@NM00081 EQU   ICTMOD+21
ICTMLANG EQU   ICTMOD+20
@NM00080 EQU   ICTMOD+19
ICTMACF5 EQU   ICTMOD+18
ICTMZMPR EQU   ICTMACF4
ICTMZOMZ EQU   ICTMACF4
ICTMDOAS EQU   ICTMACF4
ICTMXUPD EQU   ICTMACF4
ICTMFXC  EQU   ICTMACF4
ICTMFXBS EQU   ICTMACF4
ICTMHASM EQU   ICTMACF4
ICTMACDL EQU   ICTMACF4
@NM00079 EQU   ICTMLEP4
@NM00078 EQU   ICTMLEP3
@NM00077 EQU   ICTMLEP2
ICTMPAGA EQU   ICTMLEP2
ICTMNE   EQU   ICTMLEP2
@NM00076 EQU   ICTMLEP1
ICTMDC   EQU   ICTMLEP1
ICTMREFR EQU   ICTMLEP1
ICTMOVLY EQU   ICTMLEP1
ICTMSCTR EQU   ICTMLEP1
ICTMREUS EQU   ICTMLEP1
ICTMRENT EQU   ICTMLEP1
ICTMAPF  EQU   ICTMLEP1
@NM00075 EQU   ICTMFLG5
ICTMNORL EQU   ICTMFLG5
ICTMELCK EQU   ICTMFLG5
ICTMCOPY EQU   ICTMFLG5
ICTMPASS EQU   ICTMFLG5
@NM00074 EQU   ICTMFLG4
ICTMTSEL EQU   ICTMFLG4
ICTMDSTE EQU   ICTMFLG4
ICTMMIDE EQU   ICTMFLG4
ICTMASOC EQU   ICTMFLG4
ICTMSELM EQU   ICTMFLG4
ICTMIDEL EQU   ICTMFLG4
ICTMISEL EQU   ICTMFLG4
@NM00073 EQU   ICTMFLG3
ICTMPRMS EQU   ICTMFLG3
ICTMALIS EQU   ICTMFLG3
ICTMWRK  EQU   ICTMFLG3
ICTMTRX  EQU   ICTMFLG3
ICTMRELF EQU   ICTMFLG3
ICTLIBTX EQU   ICTMFLG3
ICTLIBLK EQU   ICTMFLG3
ICTMSRCU EQU   ICTMFLG1
ICTMSRCR EQU   ICTMFLG1
ICTMMACU EQU   ICTMFLG1
ICTMMACR EQU   ICTMFLG1
ICTMXPND EQU   ICTMFLG1
ICTMZAP  EQU   ICTMFLG1
ICTMASM  EQU   ICTMMODR
ICTMMOD  EQU   ICTMMODR
@NM00072 EQU   ICTMFLG2
@NM00071 EQU   ICTMFLG2
ICTMMIDU EQU   ICTMFLG2
ICTMDEL  EQU   ICTMFLG2
ICTMMSG  EQU   ICTMFLG2
ICTMCPL  EQU   ICTMFLG2
ICTMNOGO EQU   ICTMFLG2
ICTMPROC EQU   ICTMFLG2
ICTMEND  EQU   ICTMNAME
@NM00070 EQU   ICTSBYNT+7
ICTSBYND EQU   ICTSBYNM
ICTDELEX EQU   ICTDELST
ICTDELND EQU   ICTDELNM
@NM00069 EQU   ICTVRSNT+7
ICTVRSND EQU   ICTVRSNM
@NM00068 EQU   ICTNPRNT+7
ICTNPRND EQU   ICTNPRNM
@NM00067 EQU   ICTCSRST
@NM00066 EQU   ICTCSRST
ICTCSRF  EQU   ICTCSRST
@NM00065 EQU   ICTCSRST
ICTCSRNM EQU   ICTIRQNT+8
@NM00064 EQU   ICTIRQST
ICTIREQT EQU   ICTIRQST
ICTIREQI EQU   ICTIRQST
ICTIREQB EQU   ICTIRQST
ICTIREQS EQU   ICTIRQST
@NM00063 EQU   ICTIRQST
ICTIRQND EQU   ICTIRQNM
@NM00062 EQU   ICTPREST
ICTPREQT EQU   ICTPREST
ICTPREQI EQU   ICTPREST
ICTPREQB EQU   ICTPREST
ICTPREQS EQU   ICTPREST
@NM00061 EQU   ICTPREST
ICTPREND EQU   ICTPRENM
@NM00060 EQU   ICTSUPNT+7
@NM00059 EQU   ICTREQST
ICTRREQT EQU   ICTREQST
ICTRREQI EQU   ICTREQST
ICTRREQB EQU   ICTREQST
ICTRREQS EQU   ICTREQST
@NM00058 EQU   ICTREQST
ICTREQND EQU   ICTREQNM
@NM00057 EQU   ICTENTST
ICTEREQS EQU   ICTENTST
@NM00056 EQU   ICTENTST
ICTIXP   EQU   ICTIXPF
@NM00055 EQU   ICTPTF+100
ICTPTPFX EQU   ICTPTF+38
ICTPRELN EQU   ICTPTF+36
ICTPRECT EQU   ICTPTF+33
ICTPRECD EQU   ICTPTF+30
ICTPVERN EQU   ICTPTF+29
ICTPFMID EQU   ICTPTF+22
ICTPONUM EQU   ICTPTF+18
ICTPTYPE EQU   ICTPTF+17
ICTPUSR8 EQU   ICTPFLGA
ICTPUSR7 EQU   ICTPFLGA
ICTPUSR6 EQU   ICTPFLGA
ICTPUSR5 EQU   ICTPFLGA
ICTPUSR4 EQU   ICTPFLGA
ICTPUSR3 EQU   ICTPFLGA
ICTPUSR2 EQU   ICTPFLGA
@NM00054 EQU   @NM00053
ICTPRQBY EQU   @NM00053
ICTPRQOK EQU   @NM00053
ICTPRQCK EQU   @NM00053
@NM00052 EQU   ICTPFLG9
ICTPPDEL EQU   ICTPFLG9
ICTPWRKO EQU   ICTPFLG9
ICTPMSL  EQU   ICTPFLG9
@NM00051 EQU   ICTPFLG8
ICTPDCPL EQU   ICTPFLG8
@NM00050 EQU   ICTPFLG4
@NM00049 EQU   ICTPFLG4
@NM00048 EQU   ICTPFLG4
ICTPGELM EQU   ICTPFLG4
ICTPREDO EQU   ICTPFLG4
ICTPCDSE EQU   ICTPFLG4
@NM00047 EQU   ICTPFLG2
ICTPRCND EQU   ICTPFLG2
ICTPTPS  EQU   ICTPFLG2
ICTPTR1  EQU   ICTPFLG2
ICTPVRSP EQU   ICTPFLG2
@NM00046 EQU   ICTPFLG6
ICTFLF   EQU   ICTPFLF
ICTPDBYP EQU   ICTPFLG6
ICTPSBYP EQU   ICTPFLG6
ICTPMDLP EQU   ICTPFLG5+1
ICTPADDP EQU   ICTPFLG5+1
@NM00045 EQU   ICTPFLG5+1
ICTPLRFP EQU   ICTPFLG5
ICTPJCLP EQU   ICTPFLG5
ICTPSUPP EQU   ICTPFLG5
ICTPREQP EQU   ICTPFLG5
ICTPPREP EQU   ICTPFLG5
ICTPNPRP EQU   ICTPFLG5
ICTPIRQP EQU   ICTPFLG5
ICTPDELP EQU   ICTPFLG5
@NM00044 EQU   ICTPFLG3
ICTPSLST EQU   ICTPFLG3
ICTPNOLB EQU   ICTPFLG3
ICTPVERJ EQU   ICTPFLG3
ICTPMSG  EQU   ICTPFLG3
ICTPCPL  EQU   ICTPFLG3
ICTPROCS EQU   ICTPPROC
ICTREGEN EQU   ICTPFLG1
ICTBYP   EQU   ICTPFLG1
ICTDUMMP EQU   ICTPFLG1
@NM00043 EQU   ICTPFLG1
ICTERROR EQU   ICTPFLG1
ICTACC   EQU   ICTPFLG1
ICTRES   EQU   ICTPFLG1
ICTAPP   EQU   ICTPFLG1
ICTLEN   EQU   ICTGMSPL+1
ICTSP    EQU   ICTGMSPL
ICTLLEN  EQU   ICTLSPLN+1
ICTLSP   EQU   ICTLSPLN
ICTMLEN  EQU   ICTMSPLN+1
ICTMSP   EQU   ICTMSPLN
ICTPLEN  EQU   ICTPSPLN+1
ICTPSP   EQU   ICTPSPLN
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00042 EQU   CCABLDLM+2
@NM00041 EQU   CCABLDLM
CCAUPDPM EQU   @NM00039+24
@NM00040 EQU   @NM00039+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00039+12
CCAUPDTE EQU   @NM00039+8
CCAUPDNM EQU   @NM00039
CCASUPPM EQU   @NM00037+24
@NM00038 EQU   @NM00037+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00037+12
CCAIOSUP EQU   @NM00037+8
CCASUPNM EQU   @NM00037
CCAZAPPM EQU   @NM00035+24
@NM00036 EQU   @NM00035+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00035+12
CCASPZAP EQU   @NM00035+8
CCAZAPNM EQU   @NM00035
CCACOMPM EQU   @NM00033+24
@NM00034 EQU   @NM00033+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00033+12
CCACOMRS EQU   @NM00033+8
CCACOMNM EQU   @NM00033
CCACPYPM EQU   @NM00031+24
@NM00032 EQU   @NM00031+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00031+12
CCACOPY  EQU   @NM00031+8
CCACPYNM EQU   @NM00031
CCAASMPM EQU   @NM00029+24
@NM00030 EQU   @NM00029+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00029+12
CCAASM   EQU   @NM00029+8
CCAASMNM EQU   @NM00029
CCALKDPM EQU   @NM00027+24
@NM00028 EQU   @NM00027+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00027+12
CCALKED  EQU   @NM00027+8
CCALKDNM EQU   @NM00027
CCAPGMPM EQU   @NM00025+24
@NM00026 EQU   @NM00025+21
CCABPGRC EQU   @NM00025+20
CCABPGSP EQU   @NM00025+12
CCABPGAD EQU   @NM00025+8
CCABPGNM EQU   @NM00025
CCAEND   EQU   HMASMCCA+371
@NM00024 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00023 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00022 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00021 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00020 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00019 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00018 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00017 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00016 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00015 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00014 EQU   @NM00009+18
@NM00013 EQU   @NM00009+16
CCATBLPA EQU   @NM00009+12
@NM00012 EQU   @NM00009+8
@NM00011 EQU   @NM00009+4
@NM00010 EQU   @NM00009
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00008 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
CCAIOPTR EQU   CCAFIOP
@NM00007 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00006 EQU   CCAFBUFR+122
@NM00005 EQU   CCAFBUFR+120
@NM00004 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00003 EQU   CCAFBUFR+88
@NM00002 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00001 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00140 EQU   @EL00003
@RC00142 EQU   @EL00003
@ENDDATA EQU   *
         END   HMASMCP2,(C'PLS1958',0802,78334)
