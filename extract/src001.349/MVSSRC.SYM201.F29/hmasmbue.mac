         TITLE 'HMASMBUE - BACKUP CDS ENTRIES ON SCDS'
HMASMBUE CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMBUE  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
         EJECT
*                                                                  0152
*   /*****************************************************************/
*   /*                                                               */
*   /* INIT RETURN CODE, INTERNAL SW, AND PTRS TO PASSED IOP         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0152
*   BUERTNCD=ZERO;                  /*                               */
         SLR   BUERTNCD,BUERTNCD                                   0152
*   BUESW=''B;                      /* INIT SW                       */
         MVI   BUESW,X'00'                                         0153
*   IOPPTR=BUPIOPAD;                /*                               */
         L     @10,@PC00001                                        0154
         L     IOPPTR,BUPIOPAD(,@10)                               0154
*   HMASMMGP=''B;                   /* INIT MSG PARM FOR ALL MSG     */
         XC    HMASMMGP(28),HMASMMGP                               0155
*   MGPPRINT=ON;                    /* TO SMPOUT AND SMPLOG          */
*   MGPHLDS=ON;                     /*                               */
         OI    MGPPRINT,B'10010000'                                0157
*   RFY                                                            0158
*     HMASMIOP BASED(IOPPTR);       /* IOP WITH CDS ELEMENT ENTRY    */
*   RFY                                                            0159
*     RTNCODE RSTD;                 /*                               */
*                                                                  0159
*   /*****************************************************************/
*   /*                                                               */
*   /* IF IN CHECK MODE THEN NO PROCESSSING EXCEPT SETTING LAST      */
*   /* UPDATE FIELDS IS REQUIRED                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0160
*   IF CCACHECK=OFF                 /* PROCESS ONLY IF NOT CHECK     */
*     THEN                          /*                               */
         TM    CCACHECK(CCAPTR),B'00010000'                        0160
         BNZ   @RF00160                                            0160
*     DO;                           /*                               */
*                                                                  0161
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK TO SEE IF ANOTHER IOP IS REQUIRED TO BUILD THE      */
*       /* SYSMOD ENTRY                                              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0162
*       IF BUERTNCD=ZERO            /* IF PREV FUNCTIONS OK          */
*           &BUPSYSMD^=TXTJCLIN     /* AND NOT JCLIN FUNCTION        */
*         THEN                      /*                               */
         CH    BUERTNCD,@CH00270                                   0162
         BNE   @RF00162                                            0162
         CLC   BUPSYSMD(7,@10),@CC01292                            0162
         BE    @RF00162                                            0162
*         DO;                       /*                               */
*           CALL BUEGMIOP;          /*                               */
         BAL   @14,BUEGMIOP                                        0164
*           BUERTNCD=MAX(BUERTNCD,RTNCODE);/*                        */
         CR    BUERTNCD,RTNCODE                                    0165
         BNL   *+6
         LR    BUERTNCD,RTNCODE                                    0165
*         END;                      /*                               */
*                                                                  0166
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK TO SEE IF THE SYSMOD MUST BE LOCATED ON SCDS BEFORE */
*       /* ADDING ANOTHER SUBENTRY TO IT                             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0167
*       IF BUERTNCD=ZERO            /* IF PREVIOUS FUNCTION OK       */
*           &BUPSYSMD^=TXTJCLIN     /* AND NOT JCLIN FUNCTION        */
*         THEN                      /*                               */
@RF00162 CH    BUERTNCD,@CH00270                                   0167
         BNE   @RF00167                                            0167
         L     @14,@PC00001                                        0167
         CLC   BUPSYSMD(7,@14),@CC01292                            0167
         BE    @RF00167                                            0167
*         DO;                       /*                               */
*           CALL BUELOC;            /*                               */
         BAL   @14,BUELOC                                          0169
*           BUERTNCD=MAX(BUERTNCD,RTNCODE);/*                        */
         CR    BUERTNCD,RTNCODE                                    0170
         BNL   *+6
         LR    BUERTNCD,RTNCODE                                    0170
*         END;                      /*                               */
*                                                                  0171
*       /*************************************************************/
*       /*                                                           */
*       /* IF PREVIOUS FUNCTIONS WERE OK AND FUNCTION IS TO SAVE     */
*       /* BACKUP ENTRY THEN DO IT NOW                               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0172
*       IF BUERTNCD<STOPPTF         /* IF PREV FUNCTIONS OK          */
*           &BUPSYSMD^=TXTJCLIN     /* AND NOT JCLIN FUNCTION        */
*           &(BUPFUNCT=BUPABKUP×BUPFUNCT=BUPEBKUP)/* AND BACKUP REQ  */
*         THEN                      /*                               */
@RF00167 CH    BUERTNCD,@CH00035                                   0172
         BNL   @RF00172                                            0172
         L     @14,@PC00001                                        0172
         CLC   BUPSYSMD(7,@14),@CC01292                            0172
         BE    @RF00172                                            0172
         CLI   BUPFUNCT(@14),1                                     0172
         BE    @RT00172                                            0172
         CLI   BUPFUNCT(@14),2                                     0172
         BNE   @RF00172                                            0172
@RT00172 DS    0H                                                  0173
*         DO;                       /*                               */
*           CALL BUEBKUP;           /*                               */
         BAL   @14,BUEBKUP                                         0174
*           BUERTNCD=MAX(BUERTNCD,RTNCODE);/*                        */
         CR    BUERTNCD,RTNCODE                                    0175
         BNL   *+6
         LR    BUERTNCD,RTNCODE                                    0175
*         END;                      /*                               */
*     END;                          /* END NOT CHECK                 */
*                                                                  0177
@RF00172 DS    0H                                                  0178
*   /*****************************************************************/
*   /*                                                               */
*   /* IF REQUEST WAS TO BACKUP CDS ENTRY UPDATE THE JCLIN ASSOCIATED*/
*   /* FIELDS IN THAT ENTRY                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0178
*   IF(BUPFUNCT=BUPABKUP×BUPFUNCT=BUPEBKUP)/* IF BACKUP REQUEST      */
*     THEN                          /*                               */
@RF00160 L     @14,@PC00001                                        0178
         CLI   BUPFUNCT(@14),1                                     0178
         BE    @RT00178                                            0178
         CLI   BUPFUNCT(@14),2                                     0178
         BNE   @RF00178                                            0178
@RT00178 DS    0H                                                  0179
*     DO;                           /*                               */
*       CALL BUEUPDAT;              /* UPDATE JCLIN FIELDS           */
         BAL   @14,BUEUPDAT                                        0180
*       BUERTNCD=MAX(BUERTNCD,RTNCODE);/* SAVE RC                    */
         CR    BUERTNCD,RTNCODE                                    0181
         BNL   *+6
         LR    BUERTNCD,RTNCODE                                    0181
*     END;                          /*                               */
*                                                                  0182
*   /*****************************************************************/
*   /*                                                               */
*   /* IF PREVIOUS FUNCTIONS HAD ANY ERROR OR IF FUNCTION WAS TO STOW*/
*   /* SYSMOD THEN STOW IT NOW. STOWING SYSMOD AFTER ERROR CONDITION */
*   /* ENABLES ANY BACKUP ENTRIES CREATED TO BE RESTORED VIA A CALL  */
*   /* TO HMASMBUR BY THE CALLING PROGRAM                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0183
*   IF(BUERTNCD>=STOPPTF            /*                               */
*       ×BUPFUNCT=BUPSTOW)          /*                               */
*       &BUPSYSMD^=TXTJCLIN         /* AND NOT JCLIN FUNCTION        */
*       &CCACHECK=OFF               /* AND NOT CHECK MODE            */
*     THEN                          /*                               */
@RF00178 CH    BUERTNCD,@CH00035                                   0183
         BNL   @GL00008                                            0183
         L     @14,@PC00001                                        0183
         CLI   BUPFUNCT(@14),3                                     0183
         BNE   @RF00183                                            0183
@GL00008 L     @14,@PC00001                                        0183
         CLC   BUPSYSMD(7,@14),@CC01292                            0183
         BE    @RF00183                                            0183
         TM    CCACHECK(CCAPTR),B'00010000'                        0183
         BNZ   @RF00183                                            0183
*     DO;                           /*                               */
*       CALL BUESTOW;               /*                               */
         BAL   @14,BUESTOW                                         0185
*       BUERTNCD=MAX(BUERTNCD,RTNCODE);/*                            */
*                                                                  0186
         CR    BUERTNCD,RTNCODE                                    0186
         BNL   *+6
         LR    BUERTNCD,RTNCODE                                    0186
*       /*************************************************************/
*       /*                                                           */
*       /* IF ANY ERRORS IN PROCESS OR IF FUNCTION WAS STOW SCDS     */
*       /* SYSMOD THEN FREE UP THE SCDS SYSMOD IOP                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0187
*       CALL BUEFMIOP;              /*                               */
         BAL   @14,BUEFMIOP                                        0187
*       BUERTNCD=MAX(BUERTNCD,RTNCODE);/*                            */
         CR    BUERTNCD,RTNCODE                                    0188
         BNL   *+6
         LR    BUERTNCD,RTNCODE                                    0188
*     END;                          /*                               */
*                                                                  0189
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0190
*   RFY                                                            0190
*     RTNCODE UNRSTD;               /*                               */
@RF00183 DS    0H                                                  0191
*   RETURN CODE(BUERTNCD);          /*                               */
         LR    @15,BUERTNCD                                        0191
         L     @13,4(,@13)                                         0191
         L     @14,12(,@13)                                        0191
         LM    @00,@12,20(@13)                                     0191
         BR    @14                                                 0191
         EJECT
*                                                                  0192
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO CHECK TO SEE IF A SECOND IOP IS REQUIRED AND*/
*   /* IF SO TO GETMAIN ONE                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0192
*BUEGMIOP:                          /*                               */
*   PROCEDURE;                      /*                               */
BUEGMIOP STM   @14,@12,@SA00002                                    0192
*   DECLARE                         /*                               */
*     GMRC FIXED(8);                /*                               */
*   RFY                                                            0194
*     HMASMIOP BASED(IOPPTR2);      /* IOP FOR SCDS SYSMOD           */
*   GMRC=ZERO;                      /*                               */
         SLR   GMRC,GMRC                                           0195
*   GMDONE=OFF;                     /* DID NOT DO GETMAIN            */
*                                                                  0196
         NI    GMDONE,B'01111111'                                  0196
*   /*****************************************************************/
*   /*                                                               */
*   /* IF IOP NOT YET OBTAINED THEN CALL SUB TO GET ONE              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0197
*   IF IOPPTR2=ZERO                 /* IF SYSMOD IP NOT GETMAINED YET*/
*     THEN                          /*                               */
         ICM   @10,15,IOPPTR2                                      0197
         BNZ   @RF00197                                            0197
*     DO;                           /*                               */
*       GMDONE=ON;                  /* DID GETMAIN                   */
         OI    GMDONE,B'10000000'                                  0199
*       HMASMSPL=''B;               /* ZERO PARM                     */
         XC    HMASMSPL(5),HMASMSPL                                0200
*       SPLFUNCT=SPLGMIOP;          /*                               */
         MVI   SPLFUNCT,X'03'                                      0201
*       CALL HMASMSUB(HMASMSPL);    /*                               */
         L     @15,@CV01285                                        0202
         LA    @01,@AL00202                                        0202
         BALR  @14,@15                                             0202
*       RFY                                                        0203
*         RTNCODE RSTD;             /*                               */
*       GMRC=RTNCODE;               /*                               */
         LR    GMRC,RTNCODE                                        0204
*       RFY                                                        0205
*         RTNCODE UNRSTD;           /*                               */
*                                                                  0205
*       /*************************************************************/
*       /*                                                           */
*       /* IF IOP GEMAINED OK THEN INIT PTR AND INIT IOP             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0206
*       IF GMRC=ZERO                /* IF IOP OBTAINED               */
*         THEN                      /*                               */
         CH    GMRC,@CH00270                                       0206
         BNE   @RF00206                                            0206
*         DO;                       /*                               */
*           IOPPTR2=SPLPMAD;        /*                               */
         L     @10,SPLPMAD                                         0208
         ST    @10,IOPPTR2                                         0208
*           HMASMIOP=''B;           /* INIT IOP                      */
         XC    HMASMIOP(68,@10),HMASMIOP(@10)                      0209
*           IOPTYPE=IOPSMD;         /* SYSMOD TYPE IOP               */
         MVI   IOPTYPE(@10),X'0B'                                  0210
*           IOPNAM17=BUPSYSMD;      /* SYSMOD NUMBER                 */
         L     @03,@PC00001                                        0211
         MVC   IOPNAM17(7,@10),BUPSYSMD(@03)                       0211
*           IOPPTFNM=BUPSYSMD;      /* SYSMOD NUMBER FOR SCDS        */
         MVC   IOPPTFNM(7,@10),BUPSYSMD(@03)                       0212
*           IOPPTFNT=''B;           /*                               */
         XC    IOPPTFNT(104,@10),IOPPTFNT(@10)                     0213
*           IOPNTLVL=IOPPTFLC;      /* ENTRY LEVEL CODE              */
         MVI   IOPNTLVL(@10),X'02'                                 0214
*           IOPPTYPE=BUPSTYPE;      /* SYSMOD TYPE                   */
         MVC   IOPPTYPE(1,@10),BUPSTYPE(@03)                       0215
*           IOPDBYNO=BLANK7;        /*                               */
         MVC   IOPDBYNO(7,@10),@CC01289                            0216
*           IOPSBYNO=BLANK7;        /*                               */
         MVC   IOPSBYNO(7,@10),@CC01289                            0217
*           IOPBUSMD=BUPSYSMD;      /*                               */
         MVC   IOPBUSMD(7,@10),BUPSYSMD(@03)                       0218
*           IOPBUTYP=IOPBUADD;      /*                               */
         MVI   IOPBUTYP(@10),X'01'                                 0219
*           IOPPTFND(1)=IOPEOLST;   /* END OF LIST MARKER            */
         MVI   IOPPTFND(@10),X'FF'                                 0220
*           SUBNTCNT=ONE;           /* NO SUBENTRIES IN SYSMOD       */
         MVC   SUBNTCNT(4),@CF00040                                0221
*         END;                      /*                               */
*     END;                          /*                               */
*   ELSE                            /* IF SCDS IOP ALREADY GETMAINED */
*     IF IOPNAM17^=BUPSYSMD         /* INSURE THAT THE CURRENT       */
*       THEN                        /* SYSMOD IS SAME AS THE ONE     */
         B     @RC00197                                            0224
@RF00197 L     @10,@PC00001                                        0224
         L     @03,IOPPTR2                                         0224
         CLC   IOPNAM17(7,@03),BUPSYSMD(@10)                       0224
         BE    @RF00224                                            0224
*       GMRC=STOPSMP;               /* AT GETMAIN TIME               */
*                                                                  0225
         LA    GMRC,16                                             0225
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0226
*   RETURN CODE(GMRC);              /*                               */
@RF00224 DS    0H                                                  0226
@RC00197 LR    @15,GMRC                                            0226
         L     @14,@SA00002                                        0226
         LM    @00,@12,@SA00002+8                                  0226
         BR    @14                                                 0226
*   END BUEGMIOP;                   /*                               */
         EJECT
*                                                                  0228
*   /*****************************************************************/
*   /*                                                               */
*   /* IF IOP GETMAINED OK AND THIS WAS REQUEST TO BACKUP ANOTHER    */
*   /* SUBENTRY FOR AN EXISTING SCDS SYSMOD THEN LOCATE THE SYSMOD ON*/
*   /* THE SCDS                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0228
*BUELOC:                            /*                               */
*   PROCEDURE;                      /*                               */
BUELOC   STM   @14,@12,@SA00003                                    0228
*   DECLARE                         /*                               */
*     LOCRC FIXED(8);               /*                               */
*   RFY                                                            0230
*     HMASMIOP BASED(IOPPTR2);      /* IOPWITH SCDS SYSMOD ENTRY     */
*   LOCRC=ZERO;                     /*                               */
         SLR   LOCRC,LOCRC                                         0231
*   IF(BUPFUNCT=BUPEBKUP            /* BACKUP EXISING ENTRY          */
*       ×(BUPFUNCT=BUPABKUP         /* OR ADD NEW ENTRY BUT          */
*       &BUPREDO=ON))               /* SYSMOD BEING REPROCESSED THEN
*                                      DO NOT SAVE ANY MEMBERS THAT
*                                      WERE SAVED FIRST TIME THRU    */
*       &GMDONE=ON                  /* AND GETMAIN DONE THIS TIME    */
*     THEN                          /*                               */
         L     @10,@PC00001                                        0232
         CLI   BUPFUNCT(@10),2                                     0232
         BE    @GL00010                                            0232
         CLI   BUPFUNCT(@10),1                                     0232
         BNE   @RF00232                                            0232
         TM    BUPREDO(@10),B'10000000'                            0232
         BNO   @RF00232                                            0232
@GL00010 TM    GMDONE,B'10000000'                                  0232
         BNO   @RF00232                                            0232
*     DO;                           /*                               */
*       IOPFUNCT=IOPLOC;            /* LOCATE ENTRY                  */
         L     @10,IOPPTR2                                         0234
         MVI   IOPFUNCT(@10),X'03'                                 0234
*       IOPDSID=IOPSCDS;            /* ON SCDS                       */
         MVI   IOPDSID(@10),X'21'                                  0235
*       CALL HMASMIO(HMASMIOP);     /*                               */
         ST    @10,@AL00001                                        0236
         L     @15,@CV01283                                        0236
         LA    @01,@AL00001                                        0236
         BALR  @14,@15                                             0236
*       IF IOPRETRN=IOPGOOD         /* IF SYSMOD FOUND               */
*         THEN                      /*                               */
         L     @10,IOPPTR2                                         0237
         CLI   IOPRETRN(@10),0                                     0237
         BNE   @RF00237                                            0237
*         DO;                       /*                               */
*           DO SUBNTCNT=1 BY 1 WHILE/* LOOP THRU SYSMOD SUBENTRIES   */
*                 (IOPPTFND(SUBNTCNT)^=IOPEOLST);/* TILL END         */
         LA    @10,1                                               0239
         ST    @10,SUBNTCNT                                        0239
         B     @DE00239                                            0239
@DL00239 DS    0H                                                  0240
*           END;                    /*                               */
         LA    @10,1                                               0240
         AL    @10,SUBNTCNT                                        0240
         ST    @10,SUBNTCNT                                        0240
@DE00239 L     @10,SUBNTCNT                                        0240
         MH    @10,@CH00453                                        0240
         L     @03,IOPPTR2                                         0240
         SLR   @15,@15                                             0240
         IC    @15,IOPPTFND-9(@10,@03)                             0240
         CH    @15,@CH00642                                        0240
         BNE   @DL00239                                            0240
*         END;                      /*                               */
*       ELSE                        /*                               */
*         IF IOPRETRN>IOPNTFND      /* IF ERR IN LOCATE              */
*           THEN                    /*                               */
         B     @RC00237                                            0242
@RF00237 L     @10,IOPPTR2                                         0242
         CLI   IOPRETRN(@10),4                                     0242
         BNH   @RF00242                                            0242
*           LOCRC=IOPRETRN;         /* PASS ALONG RC                 */
         SLR   LOCRC,LOCRC                                         0243
         IC    LOCRC,IOPRETRN(,@10)                                0243
*     END;                          /*                               */
*                                                                  0244
@RF00242 DS    0H                                                  0244
@RC00237 DS    0H                                                  0245
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0245
*   RETURN CODE(LOCRC);             /*                               */
@RF00232 LR    @15,LOCRC                                           0245
         L     @14,@SA00003                                        0245
         LM    @00,@12,@SA00003+8                                  0245
         BR    @14                                                 0245
*   END BUELOC;                     /*                               */
         EJECT
*                                                                  0247
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO UPDATE SCDS SYSMOD ENTRY WITH ANOTHER       */
*   /* SUBENTRY AND THEN STOW BACKUP COPY OF SUBENTRY ON SCDS        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0247
*BUEBKUP:                           /*                               */
*   PROCEDURE;                      /*                               */
BUEBKUP  STM   @14,@12,@SA00004                                    0247
*   DECLARE                         /*                               */
*     BKUPRC FIXED(8);              /*                               */
*   DECLARE                         /*                               */
*     SAVNAME CHAR(8),              /* SAVE FOR IOPNAME              */
*     SAVDSID FIXED(8),             /* IOPDSID                       */
*     SAVFUNCT FIXED(8),            /* IOPFUNCT                      */
*     SAVPTFNM CHAR(7),             /* IOPPTFNM                      */
*     SAVDRMAP CHAR(LENGTH(IOPDRMAP));/* AND DIRECTORY DATA          */
*   DECLARE                         /*                               */
*     STYPE1 FIXED(8),              /*                               */
*     STYPE2 FIXED(8),              /*                               */
*     STYPE3 FIXED(8);              /*                               */
*   RFY                                                            0251
*     HMASMIOP BASED(IOPPTR);       /* IOP WITH ENTRY TO SAVE        */
*   BKUPRC=ZERO;                    /*                               */
*                                                                  0252
         SLR   BKUPRC,BKUPRC                                       0252
*   /*****************************************************************/
*   /*                                                               */
*   /* SAVE MEMBER INFO CONTAINED IN PASSED IOP                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0253
*   SAVNAME=IOPNAME;                /*                               */
         MVC   SAVNAME(8),IOPNAME(IOPPTR)                          0253
*   SAVDSID=IOPDSID;                /*                               */
         SLR   SAVDSID,SAVDSID                                     0254
         IC    SAVDSID,IOPDSID(,IOPPTR)                            0254
*   SAVFUNCT=IOPFUNCT;              /*                               */
         SLR   SAVFUNCT,SAVFUNCT                                   0255
         IC    SAVFUNCT,IOPFUNCT(,IOPPTR)                          0255
*   SAVPTFNM=IOPPTFNM;              /*                               */
         MVC   SAVPTFNM(7),IOPPTFNM(IOPPTR)                        0256
*   SAVDRMAP=IOPDRMAP;              /*                               */
*                                                                  0257
         MVC   SAVDRMAP(12),IOPDRMAP(IOPPTR)                       0257
*   /*****************************************************************/
*   /*                                                               */
*   /* BASED ON TYPE CODE IN PASSED IOP DETERMINE SYSMOD SUBENTRY    */
*   /* TYPE CODE                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0258
*   IF IOPTYPE=IOPASM               /*                               */
*     THEN                          /*                               */
         CLI   IOPTYPE(IOPPTR),1                                   0258
         BNE   @RF00258                                            0258
*     DO;                           /*                               */
*       STYPE1=IOPSAASM;            /*                               */
         MVI   STYPE1,X'36'                                        0260
*       STYPE2=IOPSDASM;            /*                               */
         MVI   STYPE2,X'3C'                                        0261
*       STYPE3=IOPSUASM;            /*                               */
         MVI   STYPE3,X'42'                                        0262
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF IOPTYPE=IOPLMD             /*                               */
*       THEN                        /*                               */
         B     @RC00258                                            0264
@RF00258 CLI   IOPTYPE(IOPPTR),2                                   0264
         BNE   @RF00264                                            0264
*       DO;                         /*                               */
*         STYPE1=IOPSALMD;          /*                               */
         MVI   STYPE1,X'37'                                        0266
*         STYPE2=IOPSDLMD;          /*                               */
         MVI   STYPE2,X'3D'                                        0267
*         STYPE3=IOPSULMD;          /*                               */
         MVI   STYPE3,X'43'                                        0268
*       END;                        /*                               */
*     ELSE                          /*                               */
*       IF IOPTYPE=IOPMAC           /*                               */
*         THEN                      /*                               */
         B     @RC00264                                            0270
@RF00264 CLI   IOPTYPE(IOPPTR),3                                   0270
         BNE   @RF00270                                            0270
*         DO;                       /*                               */
*           STYPE1=IOPSAMAC;        /*                               */
         MVI   STYPE1,X'38'                                        0272
*           STYPE2=IOPSDMAC;        /*                               */
         MVI   STYPE2,X'3E'                                        0273
*           STYPE3=IOPSUMAC;        /*                               */
         MVI   STYPE3,X'44'                                        0274
*         END;                      /*                               */
*       ELSE                        /*                               */
*         IF IOPTYPE=IOPMOD         /*                               */
*           THEN                    /*                               */
         B     @RC00270                                            0276
@RF00270 CLI   IOPTYPE(IOPPTR),5                                   0276
         BNE   @RF00276                                            0276
*           DO;                     /*                               */
*             STYPE1=IOPSAMOD;      /*                               */
         MVI   STYPE1,X'39'                                        0278
*             STYPE2=IOPSDMOD;      /*                               */
         MVI   STYPE2,X'3F'                                        0279
*             STYPE3=IOPSUMOD;      /*                               */
         MVI   STYPE3,X'45'                                        0280
*           END;                    /*                               */
*         ELSE                      /*                               */
*           IF IOPTYPE=IOPSRC       /*                               */
*             THEN                  /*                               */
         B     @RC00276                                            0282
@RF00276 CLI   IOPTYPE(IOPPTR),8                                   0282
         BNE   @RF00282                                            0282
*             DO;                   /*                               */
*               STYPE1=IOPSASRC;    /*                               */
         MVI   STYPE1,X'3A'                                        0284
*               STYPE2=IOPSDSRC;    /*                               */
         MVI   STYPE2,X'40'                                        0285
*               STYPE3=IOPSUSRC;    /*                               */
         MVI   STYPE3,X'46'                                        0286
*             END;                  /*                               */
*           ELSE                    /*                               */
*             IF IOPTYPE=IOPDLB     /*                               */
*               THEN                /*                               */
         B     @RC00282                                            0288
@RF00282 CLI   IOPTYPE(IOPPTR),6                                   0288
         BNE   @RF00288                                            0288
*               DO;                 /*                               */
*                 STYPE1=IOPSADLB;  /*                               */
         MVI   STYPE1,X'3B'                                        0290
*                 STYPE2=IOPSDDLB;  /*                               */
         MVI   STYPE2,X'41'                                        0291
*                 STYPE3=IOPSUDLB;  /*                               */
         MVI   STYPE3,X'47'                                        0292
*               END;                /*                               */
*                                                                  0293
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK TO SEE IF ENTRY TO BE SAVED HAS ALREADY BEEN SAVED FOR  */
*   /* THIS SYSMOD                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0294
*   FOUND=OFF;                      /* ENTRY NOT FOUND               */
@RF00288 DS    0H                                                  0294
@RC00282 DS    0H                                                  0294
@RC00276 DS    0H                                                  0294
@RC00270 DS    0H                                                  0294
@RC00264 DS    0H                                                  0294
@RC00258 NI    FOUND,B'10111111'                                   0294
*   DO I=1 BY 1 WHILE(              /* LOOP THRU SYSMOD SUBENTRIES   */
*         IOPPTR2->IOPPTFND(I)^=IOPEOLST/* UNTIL END OF LIST         */
*         &FOUND=OFF                /*                               */
*         );                        /*                               */
         LA    I,1                                                 0295
         B     @DE00295                                            0295
@DL00295 DS    0H                                                  0296
*     IF IOPPTR2->IOPPMODS(I)=IOPNAME/* SAME SAME                    */
*         &(IOPPTR2->IOPPIND(I)=STYPE1/* AND SAME TYPE               */
*         ×IOPPTR2->IOPPIND(I)=STYPE2/*                              */
*         ×IOPPTR2->IOPPIND(I)=STYPE3)/*                             */
*       THEN                        /*                               */
         L     @10,IOPPTR2                                         0296
         LR    @07,I                                               0296
         MH    @07,@CH00453                                        0296
         ST    @07,@TF00001                                        0296
         ALR   @07,@10                                             0296
         CLC   IOPPMODS-9(8,@07),IOPNAME(IOPPTR)                   0296
         BNE   @RF00296                                            0296
         L     @07,@TF00001                                        0296
         SLR   @15,@15                                             0296
         IC    @15,IOPPIND-9(@07,@10)                              0296
         SLR   @10,@10                                             0296
         IC    @10,STYPE1                                          0296
         CR    @15,@10                                             0296
         BE    @RT00296                                            0296
         SLR   @10,@10                                             0296
         IC    @10,STYPE2                                          0296
         CR    @15,@10                                             0296
         BE    @RT00296                                            0296
         SLR   @10,@10                                             0296
         IC    @10,STYPE3                                          0296
         CR    @15,@10                                             0296
         BNE   @RF00296                                            0296
@RT00296 DS    0H                                                  0297
*       FOUND=ON;                   /*                               */
         OI    FOUND,B'01000000'                                   0297
*   END;                            /*                               */
*                                                                  0298
@RF00296 AL    I,@CF00040                                          0298
@DE00295 LR    @10,I                                               0298
         MH    @10,@CH00453                                        0298
         L     @07,IOPPTR2                                         0298
         SLR   @15,@15                                             0298
         IC    @15,IOPPTFND-9(@10,@07)                             0298
         CH    @15,@CH00642                                        0298
         BE    @DC00295                                            0298
         TM    FOUND,B'01000000'                                   0298
         BZ    @DL00295                                            0298
@DC00295 DS    0H                                                  0299
*   /*****************************************************************/
*   /*                                                               */
*   /* SEE IF ADDING ANOTHER SUBENTRY TO SYSMOD WILL RESULT IN PEMAX */
*   /* BEING EXCEEDED                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0299
*   IF FOUND=OFF                    /* IF MEMBER NOT HERE ALREADY    */
*       &SUBNTCNT>=CCAPEMAX         /* IF PEMAX ABOUT TO BE          */
*     THEN                          /* EXCEEDED                      */
         TM    FOUND,B'01000000'                                   0299
         BNZ   @RF00299                                            0299
         L     @10,SUBNTCNT                                        0299
         CH    @10,CCAPEMAX(,CCAPTR)                               0299
         BL    @RF00299                                            0299
*     DO;                           /*                               */
*       MGPCLEAR=''B;               /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                0301
*       MGPMGNO1=HMA259I;           /* XXXXXXXX XXXXXXXX ELEMENT   0302
*                                      PEMAX EXCEEDED ATTEMPTING TO
*                                      ADD X16X X8X                  */
         MVC   MGPMGNO1(2),@CH00879                                0302
*       MGPMGNO2=PART016;           /* ON XXXXXXXX LIBRARY           */
         MVC   MGPMGNO2(2),@CH00209                                0303
*       MGPVARPT(1)=ADDR(CCATYPEA(IOPSMD));/* SYSMOD                 */
         L     @10,CCATPAD(,CCAPTR)                                0304
         LA    @10,CCATYPEA+80(,@10)                               0304
         ST    @10,MGPVARPT                                        0304
*       MGPVARPT(2)=ADDR(IOPPTR2->IOPNAME);/* SYSMOD NUMBER          */
         L     @10,IOPPTR2                                         0305
         LA    @10,IOPNAME(,@10)                                   0305
         ST    @10,MGPVARPT+4                                      0305
*       MGPVARPT(3)=ADDR(TXTSUBNT); /* SUBENTRY                      */
         LA    @10,@CC01294                                        0306
         ST    @10,MGPVARPT+8                                      0306
*       MGPVARPT(4)=ADDR(CCADSIDA(IOPSCDS));/* SMPSCDS               */
         L     @10,CCADSAD(,CCAPTR)                                0307
         LA    @10,CCADSIDA+256(,@10)                              0307
         ST    @10,MGPVARPT+12                                     0307
*       MGPTYPE=MGPERR;             /*                               */
         MVI   MGPTYPE,X'03'                                       0308
*       CALL HMASMMSG(HMASMMGP);    /*                               */
         L     @15,@CV01284                                        0309
         LA    @01,@AL00309                                        0309
         BALR  @14,@15                                             0309
*       BKUPRC=STOPPTF;             /*                               */
         LA    BKUPRC,8                                            0310
*     END;                          /*                               */
*                                                                  0311
*   /*****************************************************************/
*   /*                                                               */
*   /* IF SUBENTRY NOT THERE ALREADY AND NO PREV ERROR THEN ADD NEW  */
*   /* SUBENTRY TO SCDS SYSMOD ENTRY                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0312
*   IF BKUPRC=ZERO                  /*                               */
*       &FOUND=OFF                  /*                               */
*     THEN                          /*                               */
@RF00299 CH    BKUPRC,@CH00270                                     0312
         BNE   @RF00312                                            0312
         TM    FOUND,B'01000000'                                   0312
         BNZ   @RF00312                                            0312
*     DO;                           /*                               */
*       IOPPTR2->IOPPMODS(SUBNTCNT)=IOPNAME;/* MOVE MEMBER NAME      */
         L     @10,IOPPTR2                                         0314
         L     @07,SUBNTCNT                                        0314
         MH    @07,@CH00453                                        0314
         ST    @07,@TF00001                                        0314
         ALR   @07,@10                                             0314
         MVC   IOPPMODS-9(8,@07),IOPNAME(IOPPTR)                   0314
*       IF BUPTYPE=BUPADD           /*                               */
*         THEN                      /*                               */
         L     @07,@PC00001                                        0315
         CLI   BUPTYPE(@07),1                                      0315
         BNE   @RF00315                                            0315
*         IOPPTR2->IOPPIND(SUBNTCNT)=STYPE1;/* ADD TYPE ENTRY        */
         SLR   @07,@07                                             0316
         IC    @07,STYPE1                                          0316
         L     @04,@TF00001                                        0316
         STC   @07,IOPPIND-9(@04,@10)                              0316
*       ELSE                        /*                               */
*         IF BUPTYPE=BUPDEL         /*                               */
*           THEN                    /*                               */
         B     @RC00315                                            0317
@RF00315 L     @10,@PC00001                                        0317
         CLI   BUPTYPE(@10),3                                      0317
         BNE   @RF00317                                            0317
*           IOPPTR2->IOPPIND(SUBNTCNT)=STYPE2;/* DEL TYPE ENTRY      */
         L     @10,SUBNTCNT                                        0318
         MH    @10,@CH00453                                        0318
         SLR   @07,@07                                             0318
         IC    @07,STYPE2                                          0318
         L     @04,IOPPTR2                                         0318
         STC   @07,IOPPIND-9(@10,@04)                              0318
*         ELSE                      /*                               */
*           IOPPTR2->IOPPIND(SUBNTCNT)=STYPE3;/* UPDATE              */
         B     @RC00317                                            0319
@RF00317 L     @10,SUBNTCNT                                        0319
         MH    @10,@CH00453                                        0319
         SLR   @07,@07                                             0319
         IC    @07,STYPE3                                          0319
         L     @04,IOPPTR2                                         0319
         STC   @07,IOPPIND-9(@10,@04)                              0319
*       IOPPTR2->IOPPTFND(SUBNTCNT+1)=IOPEOLST;/*                    */
@RC00317 DS    0H                                                  0320
@RC00315 L     @10,SUBNTCNT                                        0320
         MH    @10,@CH00453                                        0320
         LA    @07,255                                             0320
         L     @04,IOPPTR2                                         0320
         STC   @07,IOPPTFND(@10,@04)                               0320
*     END;                          /*                               */
*                                                                  0321
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ENTRY TYPE WAS ASM OR LMOD AND FUNCTION WAS NOT ADD THEN   */
*   /* COPY CDS CONTROL CARDS TO SCDS                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0322
*   IF BKUPRC=ZERO                  /* IF NO PREV ERRORS             */
*       &FOUND=OFF                  /* AND NOT ALREADY SAVED         */
*       &(IOPTYPE=IOPASM×IOPTYPE=IOPLMD)/* IF ASSEM OR LMOD          */
*       &BUPTYPE^=BUPADD            /* AND NOT ADD                   */
*     THEN                          /*                               */
@RF00312 CH    BKUPRC,@CH00270                                     0322
         BNE   @RF00322                                            0322
         TM    FOUND,B'01000000'                                   0322
         BNZ   @RF00322                                            0322
         CLI   IOPTYPE(IOPPTR),1                                   0322
         BE    @GL00019                                            0322
         CLI   IOPTYPE(IOPPTR),2                                   0322
         BNE   @RF00322                                            0322
@GL00019 L     @10,@PC00001                                        0322
         CLI   BUPTYPE(@10),1                                      0322
         BE    @RF00322                                            0322
*     DO;                           /*                               */
*       IOPFUNCT=IOPPOSI;           /* POINT TO DATA CARDS           */
         MVI   IOPFUNCT(IOPPTR),X'02'                              0324
*       CALL HMASMIO(HMASMIOP);     /*                               */
         ST    IOPPTR,@AL00001                                     0325
         L     @15,@CV01283                                        0325
         LA    @01,@AL00001                                        0325
         BALR  @14,@15                                             0325
*       DO WHILE IOPRETRN=IOPGOOD;  /*                               */
         B     @DE00326                                            0326
@DL00326 DS    0H                                                  0327
*         IOPFUNCT=IOPREAD;         /*                               */
         MVI   IOPFUNCT(IOPPTR),X'01'                              0327
*         CALL HMASMIO(HMASMIOP);   /* READ INPUT                    */
         ST    IOPPTR,@AL00001                                     0328
         L     @15,@CV01283                                        0328
         LA    @01,@AL00001                                        0328
         BALR  @14,@15                                             0328
*         IF IOPRETRN=IOPGOOD       /*                               */
*           THEN                    /*                               */
         CLI   IOPRETRN(IOPPTR),0                                  0329
         BNE   @RF00329                                            0329
*           DO;                     /*                               */
*             IOPDSID=IOPSCDS;      /*                               */
         MVI   IOPDSID(IOPPTR),X'21'                               0331
*             IOPFUNCT=IOPWRITE;    /*                               */
         MVI   IOPFUNCT(IOPPTR),X'51'                              0332
*             CALL HMASMIO(HMASMIOP);/* WRITE TO SCDS                */
         ST    IOPPTR,@AL00001                                     0333
         L     @15,@CV01283                                        0333
         LA    @01,@AL00001                                        0333
         BALR  @14,@15                                             0333
*             IOPDSID=SAVDSID;      /* RESET DATASET ID              */
         STC   SAVDSID,IOPDSID(,IOPPTR)                            0334
*           END;                    /*                               */
*       END;                        /*                               */
@RF00329 DS    0H                                                  0336
@DE00326 CLI   IOPRETRN(IOPPTR),0                                  0336
         BE    @DL00326                                            0336
*       IF IOPRETRN>IOPEOF          /*                               */
*         THEN                      /*                               */
         CLI   IOPRETRN(IOPPTR),4                                  0337
         BNH   @RF00337                                            0337
*         BKUPRC=IOPRETRN;          /*                               */
         SLR   BKUPRC,BKUPRC                                       0338
         IC    BKUPRC,IOPRETRN(,IOPPTR)                            0338
*     END;                          /*                               */
*                                                                  0339
@RF00337 DS    0H                                                  0340
*   /*****************************************************************/
*   /*                                                               */
*   /* IF FUNCTION WAS BACKUPO OR DELETE EXISTING ENTRY AND PREV     */
*   /* FUNCTIONS WERE OK THEN STOW ENTRY ON SCDS                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0340
*   IF BKUPRC=ZERO                  /*                               */
*       &FOUND=OFF                  /*                               */
*       &(BUPTYPE=BUPDEL×BUPTYPE=BUPUPD)/*                           */
*     THEN                          /*                               */
@RF00322 CH    BKUPRC,@CH00270                                     0340
         BNE   @RF00340                                            0340
         TM    FOUND,B'01000000'                                   0340
         BNZ   @RF00340                                            0340
         L     @10,@PC00001                                        0340
         CLI   BUPTYPE(@10),3                                      0340
         BE    @RT00340                                            0340
         CLI   BUPTYPE(@10),2                                      0340
         BNE   @RF00340                                            0340
@RT00340 DS    0H                                                  0341
*     DO;                           /*                               */
*       IOPFUNCT=IOPSTOWR;          /* STOW REPLACE                  */
         MVI   IOPFUNCT(IOPPTR),X'54'                              0342
*       IOPDSID=IOPSCDS;            /* ON SCDS                       */
         MVI   IOPDSID(IOPPTR),X'21'                               0343
*       IOPPTFNM=BUPSYSMD;          /* SYSMOD NUMBER                 */
         L     @10,@PC00001                                        0344
         MVC   IOPPTFNM(7,IOPPTR),BUPSYSMD(@10)                    0344
*       IOPSEQNO=SUBNTCNT;          /* NUM TO NAME SCDS ELEMENT      */
         MVC   IOPSEQNO(2,IOPPTR),SUBNTCNT+2                       0345
*       CALL HMASMIO(HMASMIOP);     /* STOW ENTRY                    */
         ST    IOPPTR,@AL00001                                     0346
         L     @15,@CV01283                                        0346
         LA    @01,@AL00001                                        0346
         BALR  @14,@15                                             0346
*       BKUPRC=IOPRETRN;            /*                               */
         SLR   BKUPRC,BKUPRC                                       0347
         IC    BKUPRC,IOPRETRN(,IOPPTR)                            0347
*     END;                          /*                               */
*                                                                  0348
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ANOTHER SUBENTRY WAS ADDED INCREMENT SUBENTRY COUNT        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0349
*   IF FOUND=OFF                    /*                               */
*     THEN                          /*                               */
@RF00340 TM    FOUND,B'01000000'                                   0349
         BNZ   @RF00349                                            0349
*     SUBNTCNT=SUBNTCNT+1;          /*                               */
*                                                                  0350
         LA    @10,1                                               0350
         AL    @10,SUBNTCNT                                        0350
         ST    @10,SUBNTCNT                                        0350
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW RESTORE IOP FIELDS TO ORIGINAL VALUES                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0351
*   IOPFUNCT=SAVFUNCT;              /*                               */
@RF00349 STC   SAVFUNCT,IOPFUNCT(,IOPPTR)                          0351
*   IOPDSID=SAVDSID;                /*                               */
         STC   SAVDSID,IOPDSID(,IOPPTR)                            0352
*   IOPNAME=SAVNAME;                /*                               */
         MVC   IOPNAME(8,IOPPTR),SAVNAME                           0353
*   IOPPTFNM=SAVPTFNM;              /*                               */
         MVC   IOPPTFNM(7,IOPPTR),SAVPTFNM                         0354
*   IOPDRMAP=SAVDRMAP;              /*                               */
*                                                                  0355
         MVC   IOPDRMAP(12,IOPPTR),SAVDRMAP                        0355
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0356
*   RETURN CODE(BKUPRC);            /*                               */
         LR    @15,BKUPRC                                          0356
         L     @14,@SA00004                                        0356
         LM    @00,@12,@SA00004+8                                  0356
         BR    @14                                                 0356
*   END BUEBKUP;                    /*                               */
         EJECT
*                                                                  0358
*   /*****************************************************************/
*   /*                                                               */
*   /* UPDATE THE CDS ELEMENT ENTRY WITH THE SYSMOD NUMBER PASSED AND*/
*   /* THE TYPE OF UPDATE                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0358
*BUEUPDAT:                          /*                               */
*   PROCEDURE;                      /*                               */
BUEUPDAT STM   @14,@12,12(@13)                                     0358
*   IF IOPTYPE=IOPASM               /*                               */
*     THEN                          /*                               */
         CLI   IOPTYPE(IOPPTR),1                                   0359
         BNE   @RF00359                                            0359
*     DO;                           /*                               */
*       IF BUPTYPE=BUPADD           /* IF ADD OR WAS PREV ADDED FOR  */
*           ×(IOPABUTP=IOPBUADD&IOPABUPT=BUPSYSMD)/* SAME PTF        */
*         THEN                      /*                               */
         L     @10,@PC00001                                        0361
         CLI   BUPTYPE(@10),1                                      0361
         BE    @RT00361                                            0361
         CLI   IOPABUTP(IOPPTR),1                                  0361
         BNE   @RF00361                                            0361
         CLC   IOPABUPT(7,IOPPTR),BUPSYSMD(@10)                    0361
         BNE   @RF00361                                            0361
@RT00361 DS    0H                                                  0362
*         IOPABUTP=IOPBUADD;        /*                               */
         MVI   IOPABUTP(IOPPTR),X'01'                              0362
*       ELSE                        /*                               */
*         IF BUPTYPE=BUPUPD         /*                               */
*           THEN                    /*                               */
         B     @RC00361                                            0363
@RF00361 L     @10,@PC00001                                        0363
         CLI   BUPTYPE(@10),2                                      0363
         BNE   @RF00363                                            0363
*           IOPABUTP=IOPBUMOD;      /*                               */
         MVI   IOPABUTP(IOPPTR),X'03'                              0364
*         ELSE                      /*                               */
*           IOPABUTP=IOPBUDEL;      /*                               */
         B     @RC00363                                            0365
@RF00363 MVI   IOPABUTP(IOPPTR),X'02'                              0365
*       IOPABUPT=BUPSYSMD;          /*                               */
@RC00363 DS    0H                                                  0366
@RC00361 L     @10,@PC00001                                        0366
         MVC   IOPABUPT(7,IOPPTR),BUPSYSMD(@10)                    0366
*     END;                          /*                               */
*   ELSE                            /*                               */
*     DO;                           /*                               */
         B     @RC00359                                            0368
@RF00359 DS    0H                                                  0369
*       IF BUPTYPE=BUPADD           /* IF ADD OR WAS PREV ADDED FOR  */
*           ×(IOPBUTYP=IOPBUADD&IOPBUSMD=BUPSYSMD)/* SAME PTF        */
*         THEN                      /*                               */
         L     @10,@PC00001                                        0369
         CLI   BUPTYPE(@10),1                                      0369
         BE    @RT00369                                            0369
         CLI   IOPBUTYP(IOPPTR),1                                  0369
         BNE   @RF00369                                            0369
         CLC   IOPBUSMD(7,IOPPTR),BUPSYSMD(@10)                    0369
         BNE   @RF00369                                            0369
@RT00369 DS    0H                                                  0370
*         IOPBUTYP=IOPBUADD;        /*                               */
         MVI   IOPBUTYP(IOPPTR),X'01'                              0370
*       ELSE                        /*                               */
*         IF BUPTYPE=BUPUPD         /*                               */
*           THEN                    /*                               */
         B     @RC00369                                            0371
@RF00369 L     @10,@PC00001                                        0371
         CLI   BUPTYPE(@10),2                                      0371
         BNE   @RF00371                                            0371
*           IOPBUTYP=IOPBUMOD;      /*                               */
         MVI   IOPBUTYP(IOPPTR),X'03'                              0372
*         ELSE                      /*                               */
*           IOPBUTYP=IOPBUDEL;      /*                               */
         B     @RC00371                                            0373
@RF00371 MVI   IOPBUTYP(IOPPTR),X'02'                              0373
*       IOPBUSMD=BUPSYSMD;          /*                               */
@RC00371 DS    0H                                                  0374
@RC00369 L     @10,@PC00001                                        0374
         MVC   IOPBUSMD(7,IOPPTR),BUPSYSMD(@10)                    0374
*     END;                          /*                               */
*                                                                  0375
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0376
*   RETURN CODE(ZERO);              /*                               */
@RC00359 SLR   @15,@15                                             0376
         L     @14,12(,@13)                                        0376
         LM    @00,@12,20(@13)                                     0376
         BR    @14                                                 0376
*   END BUEUPDAT;                   /*                               */
         EJECT
*                                                                  0378
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO STOW SYSMOD ENTRY ON SCDS                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0378
*BUESTOW:                           /*                               */
*   PROCEDURE;                      /*                               */
BUESTOW  STM   @14,@12,@SA00006                                    0378
*   RFY                                                            0379
*     HMASMIOP BASED(IOPPTR2);      /*                               */
*   DECLARE                         /*                               */
*     STOWRC FIXED(8);              /*                               */
*   DECLARE                         /*                               */
*     STOWR0 FIXED(31) REG(0);      /* RETURN FROM TIME MACRO        */
*   DECLARE                         /*                               */
*     TIMETEMP CHAR(4) BDY(WORD);   /* SAVE FOR TIME                 */
*   STOWRC=ZERO;                    /*                               */
         SLR   STOWRC,STOWRC                                       0383
*   IF IOPPTR2^=ZERO                /* IF SYSMOD IOP OBTAINED OK     */
*     THEN                          /*                               */
         ICM   @10,15,IOPPTR2                                      0384
         BZ    @RF00384                                            0384
*     DO;                           /*                               */
*       GEN(TIME DEC)                                              0386
*       SETS(STOWR0);               /*                               */
         TIME DEC
*       RFY                                                        0387
*         STOWR0 RSTD;              /*                               */
*       TIMETEMP=STOWR0;            /*                               */
         ST    STOWR0,TIMETEMP                                     0388
*       RFY                                                        0389
*         STOWR0 UNRSTD;            /*                               */
*       IOPAPPD=CCADATE;            /*                               */
         L     @10,IOPPTR2                                         0390
         MVC   IOPAPPD(3,@10),CCADATE(CCAPTR)                      0390
*       IOPAPPT=TIMETEMP(1:3);      /*                               */
         MVC   IOPAPPT(3,@10),TIMETEMP                             0391
*       IOPFUNCT=IOPSTOWR;          /*                               */
         MVI   IOPFUNCT(@10),X'54'                                 0392
*       IOPDSID=IOPSCDS;            /*                               */
         MVI   IOPDSID(@10),X'21'                                  0393
*       CALL HMASMIO(HMASMIOP);     /* STOW SYSMOD ON SCDS           */
         ST    @10,@AL00001                                        0394
         L     @15,@CV01283                                        0394
         LA    @01,@AL00001                                        0394
         BALR  @14,@15                                             0394
*       STOWRC=IOPRETRN;            /*                               */
         L     @10,IOPPTR2                                         0395
         SLR   STOWRC,STOWRC                                       0395
         IC    STOWRC,IOPRETRN(,@10)                               0395
*     END;                          /*                               */
*   RETURN CODE(STOWRC);            /*                               */
@RF00384 LR    @15,STOWRC                                          0397
         L     @14,@SA00006                                        0397
         LM    @00,@12,@SA00006+8                                  0397
         BR    @14                                                 0397
*   END BUESTOW;                    /*                               */
         EJECT
*                                                                  0399
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO FREE UP THE IOP GETMAINED FOR THE SCDS      */
*   /* SYSMOD ENTRY                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0399
*BUEFMIOP:                          /*                               */
*   PROCEDURE;                      /*                               */
BUEFMIOP STM   @14,@12,@SA00007                                    0399
*   DECLARE                         /*                               */
*     FMRC FIXED(8);                /*                               */
*   FMRC=ZERO;                      /*                               */
         SLR   FMRC,FMRC                                           0401
*   IF IOPPTR2^=ZERO                /*                               */
*     THEN                          /*                               */
         L     @10,IOPPTR2                                         0402
         LTR   @10,@10                                             0402
         BZ    @RF00402                                            0402
*     DO;                           /*                               */
*       SPLPMAD=IOPPTR2;            /*                               */
         ST    @10,SPLPMAD                                         0404
*       SPLFUNCT=SPLFMIOP;          /*                               */
         MVI   SPLFUNCT,X'04'                                      0405
*       CALL HMASMSUB(HMASMSPL);    /*                               */
         L     @15,@CV01285                                        0406
         LA    @01,@AL00406                                        0406
         BALR  @14,@15                                             0406
*       RFY                                                        0407
*         RTNCODE RSTD;             /*                               */
*       FMRC=RTNCODE;               /*                               */
         LR    FMRC,RTNCODE                                        0408
*       RFY                                                        0409
*         RTNCODE UNRSTD;           /*                               */
*       IOPPTR2=ZERO;               /*                               */
         SLR   @10,@10                                             0410
         ST    @10,IOPPTR2                                         0410
*     END;                          /*                               */
*   RETURN CODE(FMRC);              /*                               */
@RF00402 LR    @15,FMRC                                            0412
         L     @14,@SA00007                                        0412
         LM    @00,@12,@SA00007+8                                  0412
         BR    @14                                                 0412
*   END BUEFMIOP;                   /*                               */
*   END HMASMBUE                    /*                               */
*                                                                  0414
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMMGP)                                       */
*/*%INCLUDE SYSLIB  (HMASMSPL)                                       */
*                                                                  0414
*       ;                                                          0414
@DATA    DS    0H
@CH00270 DC    H'0'
@CH00035 DC    H'8'
@CH00453 DC    H'9'
@CH00209 DC    H'16'
@CH00879 DC    H'160'
@CH00642 DC    H'255'
         DS    0F
@AL00202 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00406 DC    A(HMASMSPL)             LIST WITH   1 ARGUMENT(S)
@AL00309 DC    A(HMASMMGP)             LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00006 DS    15F
@SA00007 DS    0F
@SA00004 DS    0F
@SA00003 DS    0F
@SA00002 DS    0F
         DS    15F
@AL00001 DS    1A
@TF00001 DS    F
         DS    0F
@CF00040 DC    F'1'
@CV01283 DC    V(HMASMIO)
@CV01284 DC    V(HMASMMSG)
@CV01285 DC    V(HMASMSUB)
         DS    0D
IOPPTR2  DC    A(0)
SUBNTCNT DC    F'0'
STYPE1   DS    FL1
STYPE2   DS    FL1
STYPE3   DS    FL1
@CC01294 DC    C'SUBENTRY        '
@CC01289 DC    C'       '
@CC01292 DC    C'JCLIN  '
         DS    CL3
HMASMMGP DS    CL28
         ORG   HMASMMGP
MGPFIXED DS    CL12
         ORG   MGPFIXED
MGPCLEAR DS    CL6
         ORG   MGPCLEAR
MGPMGNO1 DS    FL2
MGPMGNO2 DS    FL2
MGPMGNO3 DS    FL2
         ORG   MGPFIXED+6
MGPFLAGS DS    BL2
         ORG   MGPFLAGS
MGPPRINT DS    BL1
MGPLIST  EQU   MGPFLAGS+0
MGPRPT   EQU   MGPFLAGS+0
MGPHLDS  EQU   MGPFLAGS+0
MGPWTOR  EQU   MGPFLAGS+0
MGPWTO   EQU   MGPFLAGS+0
MGPWTP   EQU   MGPFLAGS+0
@NM00173 EQU   MGPFLAGS+0
         ORG   MGPFIXED+8
MGPTYPE  DS    FL1
@NM00174 DS    CL3
         ORG   HMASMMGP+12
MGPVAR   DS    CL16
         ORG   MGPVAR
MGPVARPT DS    4A
         ORG   HMASMMGP+28
HMASMSPL DS    CL5
         ORG   HMASMSPL
SPLPMAD  DS    AL4
SPLFUNCT DS    FL1
         ORG   HMASMSPL+5
BUESW    DS    BL1
         ORG   BUESW
GMDONE   DS    BL1
FOUND    EQU   BUESW+0
@NM00175 EQU   BUESW+0
         ORG   BUESW+1
PATCHBUE DS    CL80
         ORG   PATCHBUE
@NM00176 DC    80X'FF'
         ORG   PATCHBUE+80
SAVNAME  DS    CL8
SAVPTFNM DS    CL7
SAVDRMAP DS    CL12
         DS    CL3
TIMETEMP DS    CL4
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
FMRC     EQU   @02
STOWRC   EQU   @02
SAVFUNCT EQU   @06
SAVDSID  EQU   @05
BKUPRC   EQU   @03
LOCRC    EQU   @02
GMRC     EQU   @02
BUERTNCD EQU   @03
I        EQU   @04
IOPPTR   EQU   @02
CCAPTR   EQU   @11
RTNCODE  EQU   @15
STOWR0   EQU   @00
RTNREG   EQU   @14
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAFSYS  EQU   HMASMCCA+148
CCAPEMAX EQU   CCAFSYS+10
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00011 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAFLAG2 EQU   CCAFFUNC+11
CCACHECK EQU   CCAFLAG2
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCADATE  EQU   CCAFCTL+1
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCADSIDA EQU   0
CCATYPEA EQU   0
CCABLDLA EQU   0
@NM00027 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00029 EQU   CCABLDLL
CCALKDRC EQU   @NM00029+20
@NM00031 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00031+20
@NM00033 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00033+20
@NM00035 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00035+20
@NM00037 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00037+20
@NM00039 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00039+20
@NM00041 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00041+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
IOPNAM17 EQU   IOPNAME
@NM00045 EQU   HMASMIOP+12
@NM00046 EQU   @NM00045
IOPPTFNM EQU   @NM00046
IOPSEQNO EQU   @NM00045+8
IOPDDNAM EQU   HMASMIOP+24
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00156 EQU   IOPQSMIF
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPBS02  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
SPLPPACK EQU   0
SPLPUNPK EQU   0
SPLPDSN  EQU   0
SPLODSN  EQU   SPLPDSN
IOPBS01  EQU   0
IOPBS03  EQU   0
BUPPARM  EQU   0
BUPFUNCT EQU   BUPPARM
BUPTYPE  EQU   BUPPARM+1
BUPSTYPE EQU   BUPPARM+2
BUPFLAGS EQU   BUPPARM+3
BUPREDO  EQU   BUPFLAGS
BUPSYSMD EQU   BUPPARM+4
BUPIOPAD EQU   BUPPARM+12
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00052 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
@NM00063 EQU   IOPUDATA
@NM00064 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPNTLVL EQU   IOPASMDR
IOPABUNT EQU   IOPASMDR+1
IOPABUPT EQU   IOPABUNT
IOPABUTP EQU   IOPABUNT+7
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPLMDF2 EQU   IOPLMLEP+1
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPLMDFX EQU   IOPLMDNT+24
@NM00073 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMST  EQU   IOPRMIDE+7
IOPFMIDE EQU   IOPMACDR+9
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPBUSMD EQU   IOPBUNT
IOPBUTYP EQU   IOPBUNT+7
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00084 EQU   IOPSRCDR+1
@NM00086 EQU   @NM00084+7
@NM00090 EQU   IOPSRCDR+9
IOPSRCFX EQU   IOPSRCNT+24
@NM00094 EQU   IOPSRCFX
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00100 EQU   IOPMODDR+1
@NM00102 EQU   @NM00100+7
@NM00106 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00110 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODST EQU   IOPLMODS+7
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00121 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPSYSFX EQU   IOPSYSNT+24
@NM00128 EQU   IOPSYSFX
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPTYPE EQU   IOPPTFDR+1
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPDBYNO EQU   IOPPTFDR+6
IOPSBYNO EQU   IOPPTFDR+13
IOPPTFFX EQU   IOPPTFNT+24
@NM00137 EQU   IOPPTFFX
@NM00138 EQU   @NM00137
IOPPDTES EQU   IOPPTFFX+41
@NM00141 EQU   IOPPDTES
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPAPPD  EQU   IOPDATES
IOPAPPT  EQU   IOPDATES+3
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPPTFND EQU   IOPPMODS
IOPPIND  EQU   IOPPNTRY+8
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPPTFG1 EQU   IOPPTSFX+34
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00166 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00166
IOPPTREL EQU   IOPPTFMD
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBLEP2 EQU   IOPBPDS+9
@NM00170 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00170
IOPBFTB1 EQU   IOPBFTB0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
IOPBCEND EQU   IOPBPDS+21
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00172 EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
@NM00171 EQU   IOPBFTB1
IOPBAOSL EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBREFR EQU   IOPBLEP2
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
@NM00169 EQU   IOPBLEP2
IOPBDC   EQU   IOPBLEP2
@NM00168 EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00167 EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBRENT EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
IOPPTIND EQU   IOPPTNTR+8
IOPPTSND EQU   IOPPTREL
@NM00165 EQU   IOPPTSFX+872
IOPSYZPP EQU   IOPPTSFX+772
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZAP EQU   IOPPTSFX+755
IOPSYUPP EQU   IOPPTSFX+655
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPD EQU   IOPPTSFX+638
IOPSYSPP EQU   IOPPTSFX+538
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSUP EQU   IOPPTSFX+521
IOPSYLKP EQU   IOPPTSFX+421
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKD EQU   IOPPTSFX+404
IOPSYCPP EQU   IOPPTSFX+304
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOM EQU   IOPPTSFX+170
IOPSYASP EQU   IOPPTSFX+70
IOPSYASR EQU   IOPPTSFX+69
IOPSYASS EQU   IOPPTSFX+61
IOPSYASM EQU   IOPPTSFX+53
@NM00164 EQU   IOPPTSFX+35
@NM00163 EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPPTSNP EQU   IOPPTFG1
IOPSYPLN EQU   IOPPTSFX+32
IOPDSPFX EQU   IOPPTSFX+6
IOPDSDIR EQU   IOPDSSPC+4
IOPDSSEC EQU   IOPDSSPC+2
IOPDSPRM EQU   IOPDSSPC
@NM00162 EQU   IOPPTSDR+4
IOPPTPEM EQU   IOPPTSDR+2
IOPPCNVL EQU   IOPPTSDR+1
@NM00161 EQU   IOPPTSDR
IOPQFMTP EQU   IOPQFMLS+8
@NM00160 EQU   IOPQFMLS+7
IOPQFMND EQU   IOPQFMNM
@NM00159 EQU   IOPQFMDR
@NM00155 EQU   IOPQSMDR
@NM00154 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
IOPSBYNM EQU   IOPSBYNT
@NM00153 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00152 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00151 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00150 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00149 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00148 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00147 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00146 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00145 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00144 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00143 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
IOPPFMID EQU   IOPPTFFX+73
@NM00142 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
IOPACCT  EQU   IOPDATES+15
IOPACCD  EQU   IOPDATES+12
IOPRSTT  EQU   IOPDATES+9
IOPRSTD  EQU   IOPDATES+6
IOPRECT  EQU   @NM00141+3
IOPRECD  EQU   @NM00141
@NM00140 EQU   IOPPTFFX+8
@NM00139 EQU   @NM00137+7
IOPPRELN EQU   @NM00138
@NM00136 EQU   IOPPTFDR+20
@NM00135 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPSBYP  EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00134 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPREGEN EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
IOPDUMMP EQU   IOPFLGS5
@NM00133 EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
IOPAPP   EQU   IOPFLGS5
@NM00132 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
IOPSYSND EQU   IOPSYNTR
@NM00131 EQU   IOPSYSFX+21
IOPSYSID EQU   IOPSYSFX+13
IOPNUCID EQU   IOPSYSFX+12
IOPSREL  EQU   IOPSYSFX+8
@NM00130 EQU   @NM00128+7
@NM00129 EQU   @NM00128
@NM00127 EQU   IOPSYSDR+5
@NM00126 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPMTSNP EQU   IOPFLGS7
IOPPEMAX EQU   IOPSYSDR+2
IOPSCNVL EQU   IOPSYSDR+1
@NM00125 EQU   IOPSYSDR
IOPDLIND EQU   IOPDNTRY+8
IOPDLBND EQU   IOPDSYS
@NM00124 EQU   IOPDLBFX+8
@NM00123 EQU   @NM00121+7
@NM00122 EQU   @NM00121
@NM00120 EQU   IOPDLBDR+1
@NM00119 EQU   IOPDLBDR
IOPMDIND EQU   IOPMNTRY+8
@NM00118 EQU   IOPMODST
IOPMODND EQU   IOPMODID
IOPDLIB  EQU   IOPMODFX+72
@NM00117 EQU   IOPMODFX+12
@NM00116 EQU   IOPMODF4
@NM00115 EQU   IOPMODF3
@NM00114 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00113 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00112 EQU   @NM00110+7
@NM00111 EQU   @NM00110
@NM00109 EQU   IOPMODDR+17
@NM00108 EQU   @NM00106+7
@NM00107 EQU   @NM00106
@NM00105 EQU   @NM00102
@NM00104 EQU   @NM00102
@NM00103 EQU   @NM00102
@NM00101 EQU   @NM00100
@NM00099 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00098 EQU   IOPSRCST
IOPSRCND EQU   IOPSRCID
IOPSRDLB EQU   IOPSRCFX+72
IOPSRSYS EQU   IOPSRCFX+64
@NM00097 EQU   IOPSRCFX+8
@NM00096 EQU   @NM00094+7
@NM00095 EQU   @NM00094
@NM00093 EQU   IOPSRCDR+18
IOPSRLNG EQU   IOPSRCDR+17
@NM00092 EQU   @NM00090+7
@NM00091 EQU   @NM00090
@NM00089 EQU   @NM00086
@NM00088 EQU   @NM00086
@NM00087 EQU   @NM00086
@NM00085 EQU   @NM00084
@NM00083 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
IOPMCTYP EQU   IOPMCIND
@NM00082 EQU   IOPMACST
IOPMACND EQU   IOPMACID
IOPMCDLB EQU   IOPMACFX+72
IOPMCSYS EQU   IOPMACFX+64
@NM00081 EQU   IOPMACFX+8
@NM00080 EQU   IOPMACDR+18
IOPMCLNG EQU   IOPMACDR+17
IOPFMST  EQU   IOPFMIDE+7
IOPFMID  EQU   IOPFMIDE
@NM00079 EQU   IOPRMST
IOPRMASM EQU   IOPRMST
@NM00078 EQU   IOPRMST
IOPRMID  EQU   IOPRMIDE
@NM00077 EQU   IOPMACDR
IOPLMIND EQU   IOPLNTRY+8
IOPLMDND EQU   IOPSYSLB
@NM00075 EQU   @NM00073+7
@NM00074 EQU   @NM00073
@NM00072 EQU   IOPLMDDR+6
@NM00071 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPCOPY  EQU   IOPFLGS3
@NM00070 EQU   IOPLMDF4
@NM00069 EQU   IOPLMDF3
@NM00068 EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPNE    EQU   IOPLMDF2
@NM00067 EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPAPF   EQU   IOPFLGS2
@NM00066 EQU   IOPLMDDR
@NM00065 EQU   IOPASMDR+9
IOPALLOC EQU   @NM00064+4
IOPUSED  EQU   @NM00064
IOPTPSEQ EQU   @NM00063+8
IOPVLSER EQU   @NM00063+2
IOPBLKSI EQU   @NM00063
IOPCQMAX EQU   IOPCQMAP+12
@NM00062 EQU   IOPCQMAP+11
@NM00061 EQU   IOPCQMAP+8
@NM00060 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00059 EQU   IOPSCMAP+11
@NM00058 EQU   IOPSCMAP+8
@NM00057 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00056 EQU   IOPNTMAX+11
@NM00055 EQU   IOPNTMAX+8
@NM00054 EQU   IOPNTMAX
@NM00053 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00052+5
IOPIPTF3 EQU   @NM00052
BUPGTPAD EQU   BUPPARM+16
@NM00002 EQU   BUPPARM+11
@NM00001 EQU   BUPFLAGS
SPLIFIL  EQU   SPLODSN+33
SPLISMD  EQU   SPLODSN+26
SPLIPFX  EQU   SPLODSN
SPLIUNPK EQU   SPLPUNPK+8
SPLOUNPK EQU   SPLPUNPK
SPLOPACK EQU   SPLPPACK+8
SPLIPACK EQU   SPLPPACK
IOPBS04E EQU   IOPBS04+2
IOPBAPFC EQU   IOPBAPF+1
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
IOPQSMTP EQU   IOPQSMLS+8
@NM00158 EQU   IOPQSMLS+7
IOPQSMND EQU   IOPQSMNM
@NM00157 EQU   @NM00156+7
IOPQSMFM EQU   @NM00156
@NM00076 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00051 EQU   IOPUSERL
@NM00050 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00049 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00048 EQU   @NM00045+10
@NM00047 EQU   @NM00046+7
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00044 EQU   CCABLDLM+2
@NM00043 EQU   CCABLDLM
CCAUPDPM EQU   @NM00041+24
@NM00042 EQU   @NM00041+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00041+12
CCAUPDTE EQU   @NM00041+8
CCAUPDNM EQU   @NM00041
CCASUPPM EQU   @NM00039+24
@NM00040 EQU   @NM00039+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00039+12
CCAIOSUP EQU   @NM00039+8
CCASUPNM EQU   @NM00039
CCAZAPPM EQU   @NM00037+24
@NM00038 EQU   @NM00037+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00037+12
CCASPZAP EQU   @NM00037+8
CCAZAPNM EQU   @NM00037
CCACOMPM EQU   @NM00035+24
@NM00036 EQU   @NM00035+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00035+12
CCACOMRS EQU   @NM00035+8
CCACOMNM EQU   @NM00035
CCACPYPM EQU   @NM00033+24
@NM00034 EQU   @NM00033+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00033+12
CCACOPY  EQU   @NM00033+8
CCACPYNM EQU   @NM00033
CCAASMPM EQU   @NM00031+24
@NM00032 EQU   @NM00031+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00031+12
CCAASM   EQU   @NM00031+8
CCAASMNM EQU   @NM00031
CCALKDPM EQU   @NM00029+24
@NM00030 EQU   @NM00029+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00029+12
CCALKED  EQU   @NM00029+8
CCALKDNM EQU   @NM00029
CCAPGMPM EQU   @NM00027+24
@NM00028 EQU   @NM00027+21
CCABPGRC EQU   @NM00027+20
CCABPGSP EQU   @NM00027+12
CCABPGAD EQU   @NM00027+8
CCABPGNM EQU   @NM00027
CCAEND   EQU   HMASMCCA+371
@NM00026 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00025 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
@NM00024 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00023 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00022 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00021 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00020 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00019 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00018 EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00017 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCAAPPLY EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00016 EQU   @NM00011+18
@NM00015 EQU   @NM00011+16
CCATBLPA EQU   @NM00011+12
@NM00014 EQU   @NM00011+8
@NM00013 EQU   @NM00011+4
@NM00012 EQU   @NM00011
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCAICLMD EQU   CCAFICT+12
CCAICMOD EQU   CCAFICT+8
CCAICPTF EQU   CCAFICT+4
CCAICT   EQU   CCAFICT
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00010 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
CCAIOPTR EQU   CCAFIOP
@NM00009 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00008 EQU   CCAFBUFR+122
@NM00007 EQU   CCAFBUFR+120
@NM00006 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00005 EQU   CCAFBUFR+88
@NM00004 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00003 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00206 EQU   @RC00197
@ENDDATA EQU   *
         END   HMASMBUE,(C'PLS1928',0802,78334)
