***********************************************************************
*                                                                     *
* NAME   *****   *****   *   *   ****    *****   ****    *****        *
*        *       *   *   ** **   *   *   *   *   *   *   *            *
*        *       *   *   * * *   ****    *****   ****    ****         *
*        *       *   *   *   *   *       *   *   *  *    *            *
*        *****   *****   *   *   *       *   *   *   *   *****        *
*                                                                     *
***********************************************************************
*                                                                     *
* FUNCTION/OPERATION                                                  *
*                                                                     *
*     THIS IS THE ROOT SEGMENT FOR IEBCOMPR, THE DATA SET UTILITY THAT*
*   COMPARES TWO SEQUENTIAL OR TWO PARTITIONED DATA SETS.  ITS MAIN   *
*   FUNCTIONS ARE THE FOLLOWING:                                      *
*                                                                     *
*       1. TO SET ITS OWN ADDRESSABILITY                              *
*       2. TO SET THE COMMUNICATION REGION'S ADDRESSABILITY           *
*       3. TO INTERRAGATE THE DDNAME LIST AND SET THE APPROPRIATE     *
*            SWITHCES                                                 *
*       4. TO OPEN THE SYSPRINT DATA SET                              *
*       5. TO CONTROL BRANCHING TO THE CONTROL CARD ANALYZER, AND THE *
*            MAIN PROCESSING ROUTINE                                  *
*       6. TO PRINT ANY REQUEST ASKED BY EITHER OF THE TWO OVERLAY    *
*            SEGMENTS                                                 *
*                                                                     *
***********************************************************************
*                                                                     *
* ENTRY POINTS                                                        *
*                                                                     *
*   1. 'COMPARE'    THIS IS THE ENTRY TO THE ROOT SEGMENT FROM ANY    *
*                 CALLING PROGRAM.                                    *
*                                                                     *
*   2. 'JPRINTRT'   ENTRY IS MADE HERE WHENEVER THE ANALYZER OR MAIN  *
*                 PROCESSOR WANTS A STANDARD DIAGNOSTIC MESSAGE       *
*                 PRINTED.                                            *
*                                                                     *
*   3. 'ZZPR'       ENTRY IS MADE HERE WHENEVER THE ANALYZER OR MAIN  *
*                 PROCESSOR WANTS ANY DATA OR ANY INFORMATIONAL       *
*                 MESSAGE PRINTED.                                    *
*                                                                     *
***********************************************************************
*                                                                     *
* INPUT                                                               *
*                                                                     *
*     INPUT TO THIS MODULE IS ONE OF THE FOLLOWING:                   *
*                                                                     *
*       1. UPON ENTRY FROM THE CALLING PROGRAM THE DDNAME LIST IS     *
*            INPUT INFORMATION.                                       *
*       2. WHEN PRINTING REQUESTS FROM EITHER THE ANALYZER OR MAIN    *
*            PROCESSOR, THE ADDRESS OF THE MESSAGE AND ITS LENGTH     *
*            ARE INPUT.
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
* OUTPUT                                                              *
*                                                                     *
*     THE OUTPUT OF THIS MODULE CONSISTS OF DIAGNOSTIC MESSAGES,      *
*   INFORMATIONAL MESSAGES, AND LOGICAL RECORDS WHICH WERE EITHER     *
*   MISCOMPARES OR EXTRA RECORDS ON A PARTICULAR DATA SET.  IF A PDS  *
*   IS BEING COMPARED, THERE IS A POSSIBILITY THAT USER DATA FROM     *
*   EITHER PDS DIRECTORY WILL ALSO BE PRINTED.                        *
*                                                                     *
***********************************************************************
*                                                                     *
* EXTERNAL ROUTINES                                                   *
*                                                                     *
*     FOR THIS PARTICULAR CSECT THERE ARE ONLY TWO EXTERNAL ROUTINES, *
*   THE CONTROL CARD ANALYZER, ANALY, AND THE MAIN PROCESSOR, MAIN.   *
*   EACH OF THESE IS AN OVERLAY SEGMENT.                              *
*                                                                     *
***********************************************************************
***********************************************************************
*                                                                     *
* EXITS                                                               *
*                                                                     *
*     THERE IS ONLY ONE ACTUAL EXIT TAKEN FROM THE ROOT SEGMENT, THAT *
*   BEING A BRANCH TO THE MAIN PROCESSOR.  THE MAIN PROCESSOR WILL    *
*   BRANCH TO THE ROOT SEGMENT'S PRINT ROUTINE, HOWEVER RETURN IS     *
*   ALWAYS GIVEN BACK TO THE MAIN PROCESSOR AND IT IS THE MAIN        *
*   PROCESSOR THAT REUTURNS CONTROL TO THE CALLING PROGRAM.           *
*                                                                     *
***********************************************************************
*                                                                     *
* TABLES/WORK AREAS                                                   *
*                                                                     *
*     THE ONLY TABLE SET UP BY THE ROOT SEGMENT IS THE COMMUNICATION  *
*   REGION, WHILE THE ONLY WORK AREA IS THE PRINTOUT AREA.            *
*                                                                     *
***********************************************************************
*                                                                     *
* ATTRIBUTES                                                          *
*                                                                     *
*     NON-REENTRANT AND NON-REUSEABLE                                 *
*                                                                     *
***********************************************************************
         EJECT
COMPARE  CSECT
* 030980,032800-033000                                           A27718
*1000031000,052400-052600,058400-058600                            BS0H
* REGISTER ASSIGNMENTS
R0       EQU   0
R1       EQU   1
R2       EQU   2                                                 A27718
R4       EQU   4                                                   BS0H
R5       EQU   5                                                   BS0H
R6       EQU   6                                                   BS0H
R7       EQU   7                                                   BS0H
RETREG   EQU   14                                                  BS0H
         SAVE  (14,12)
         BALR  11,0
         USING BEGIN,11
BEGIN    STM   13,14,SAVE1315
         LA    10,COMMON           LOAD ADDRESS OF COMMUNICATION TABLE
         LA    13,SAVEREGS
         MVI   ZZCTRL,X'00'        MOVE CONTROL CHARACTER TO AREA
         SPACE 3
***********************************************************************
*        ROUTINE TO PROCESS DDNAME LIST
***********************************************************************
         TM    0(1),X'80'          IS THERE A DDNAME LIST
         BO    LLEORI                BRANCH - NO DDLIST
         L     5,4(1)              LOAD ADDRESS OF LIST INTO REG 5
         LH    6,0(5)              PLACE LENGTH OF LIST INTO REG 6
         C     6,FORTY             IS LENGTH OF LIST LESS THAN 40
         BL    LLHEAD                YES-THEN NOT OVERRIDING ANYTHING
         CLI   34(5),X'00'         IS THERE A DDNAME IN SLOT (SYSIN)
         BE    LLSEC                 BRANCH - NO DDNAME IN SLOT
         MVC   DDSYSIN(8),34(5)    MOVE DDNAME INTO COMMUNICATION TABLE
LLSEC    C     6,FOREIGHT
         BL    LLHEAD
         CLI   42(5),X'00'         IS THERE A DDNAME IN SLOT (SYSPRINT)
         BE    LLTHR                 NO - BRANCH
         LA    7,PRINTOUT          MOVE DDNAME INTO OUTPUT DCB
         MVC   DDNAME(8,7),42(5)
LLTHR    C     6,SIXFOUR
         BL    LLHEAD
         CLI   58(5),X'00'         IS THERE A DDNAME IN SLOT (SYSUT1)
         BE    LLFOUR                NO-BRANCH
         MVC   DDSUBNAM(8),58(5)   MOVE DDNAME INTO COMMUNICATION TABLE
LLFOUR   C     6,SEVTWO
         BL    LLHEAD
         CLI   66(5),X'00'         IS THERE A DDNAME IN SLOT (SYSUT2)
         BE    LLHEAD                NO-BRANCH
         MVC   DDSUBNAM+8(8),66(5) MOVE DDNAME INTO COMMUN TABLE
**********************************************************************
*   ROUTINE TO PROCESS INITIAL USER PAGE NUMBER
***********************************************************************
LLHEAD   TM    4(1),X'80'          IS THERE A USER PAGE NUMBER
         BO    LLEORI                NO-BRANCH
         L     5,8(1)              LOAD ADDRESS OF PAGE NO. INTO REG 5
         LH    7,0(5)              PLACE LENGTH OF PAGE NO. IN REG 7
         LA    6,PRHEAD+PAGEPOS    MOVE INITIAL PAGE
         SR    6,7                   NUMBER INTO PROPER
         SH    7,ONE                   POSITION
         STC   7,LLMOVPAG+1              IN
LLMOVPAG MVC   0(1,6),2(5)                 HEADER
**********************************************************************
LLEORI   ST    1,SAVEREG1
         OPEN  (PRINTOUT,OUTPUT)   OPEN FOR PRINTER
         LA    1,PRINTOUT         GET DCB ADRESS
         TM    48(1),X'10'        WAS OPEN ACCOMPLISHED
         BZ    FORGETIT           GO ABORT JOB
         TM    DFLG,X'10'               CHECK FOR BLKSIZE ERROR    BS0H
         BC    8,CONTON                 IF NONE --                 BS0H
CLOSEDCB CLOSE (PRINTOUT)                                        A27718
         B     FORGETIT                 SET RETURN CODE            BS0H
CONTON   LA    0,HEADER      PRINT HEADER 0=LENGTH OF MESSAGE      BS0H
         LA    1,PRHEAD                          1=ADDR OF MESSAGE
         BAL   14,ZZPR
         L     1,SAVEREG1
GOTOANAL L     15,ADDANALY         GO TO CARD SCAN ROUTINE
         BALR  14,15
GOTOMAIN L     15,ADDMAIN          GO TO MAIN PROCESSOR
         BR    15
FORGETIT LA    15,12              PUT RETURN CODE OF '0C' IN REG15
         LM    13,14,SAVE1315
         RETURN (2,12)            RETURN TO CALLING PROGRAM
***                                                                ****
**  EXIT TAKEN WHEN PERMANENT I/O ERROR OCCURRED ON SYSPRINT        ***
SYNADEX  SYNADAF   ACSMETH=QSAM         GET I/O ERROR STATUS     A27718
         MVC   WTOLF1+23(26),49(R1)     MOVE I/O ERROR STATUS    A27718
         MVC   WTOLF2+12(53),75(R1)     INTO LIST FORM WTO       A27718
         SYNADRLS            RELEASE BUFFER GOT BY SYNADAF       A27718
         LA    R1,WTOLF1                                         A27718
         WTO   MF=(E,(1))                                        A27718
         LA    R1,WTOLF2                                         A27718
         WTO   MF=(E,(1))                                        A27718
         B     CLOSEDCB                                          A27718
WTOLF1   WTO   'IEB267I I/O ERROR                            ',  A27718*
               MF=L,ROUTCDE=11,DESC=7                            A27718
WTOLF2   WTO   'IEB267I                                                *
                      ',MF=L,ROUTCDE=11,DESC=7                   A27718
*******************************************************************BS0H
*   THIS IS THE DCB EXIT ROUTINE                                   BS0H
*******************************************************************BS0H
PRINTEXT LA    R7,PRINTOUT                                         BS0H
         USING IHADCB,R7                                           BS0H
         LH    R5,DCBBLKSI              LOAD BLKSIZE               BS0H
         LTR   R5,R5                                               BS0H
         BC    8,PRTBLK                 IF NONE SPECIFIED --       BS0H
         SR    R4,R4                                               BS0H
         LA    R6,121                                              BS0H
         DR    R4,R6                    CHECK FOR MODULAR BLKSIZE  BS0H
         LTR   R4,R4                                               BS0H
         BCR   8,RETREG                 RETURN TO CALLER - OPEN    BS0H
         MVI   DFLG,X'10'               SET BLKSIZE ERROR FLAG     BS0H
         MVC   DCBBLKSI(2),DCBLRECL     MOVE LRECL TO BLKSIZE      BS0H
         RETURN
PRTBLK   MVI   DCBBLKSI+1,X'79'         INSERT BLKSIZE             BS0H
         DROP  R7                                                  BS0H
         RETURN
**********************************************************************
***      CONSTANT AREA
         DS    0D                                                  BS0H
OPT      DC    X'85'                                               BS0H
         DC    AL3(PRINTEXT)                                       BS0H
DFLG     DC    X'00'                                               BS0H
SAVEREG1 DC    F'0'
ONE      DC    H'1'
TWO      DC    H'2'
EIGHT    DC    H'8'
TWELVE   DC    H'12'
SIXTEEN  DC    H'16'
FORTY    DC    F'40'
FOREIGHT DC    F'48'
SIXFOUR  DC    F'64'
SEVTWO   DC    F'72'
PRHEAD   DC    CL32'                                '
         DC    CL32'               COMPARE UTILITY  '
         DC    CL32'                                '
         DC    CL24' PAGE 0001'
         DC    X'32'
PAGEPOS  EQU   106
ADDANALY DC    V(ANALY)            ADDRESS OF CARD SCAN ROUTINE
ADDMAIN  DC    V(MAIN)             ADDRESS OF MAIN PROCESSOR ROUTINE
**********************************************************************
         ENTRY JPRINTRT
         USING *,15
JPRINTRT L     0,ADDRMESS
         CH    R1,THIRTY           IS MESSAGE NO. EQUAL 30         UV0H
         BH    MSEVEN              BRANCH IF HIGH                  UV0H
         MH    1,HFORTY
         AR    1,0
         LA    0,39
         B     ZZPR
MSEVEN   SH    R1,THIRTY                                           UV0H
         MH    R1,HSEVEN                                           UV0H
         SH     R1,HSEVEN                                          UV0H
         L     R0,ADMSG31                                          UV0H
         AR    R1,R0                                               UV0H
         LA    R0,71                                               UV0H
         B     ZZPR           BRANCH                               UV0H
THIRTY   DC    H'30'                                               UV0H
HSEVEN   DC    H'72'                                               UV0H
         EXTRN MSG31                                               UV0H
ADMSG31  DC    A(MSG31)                                            UV0H
HFORTY   DC    H'40'
         EXTRN MESSLIST
ADDRMESS DC    A(MESSLIST)
         DROP  15
*********************************************************************
**       THIS IS THE GENERALIZED MESSAGE WRITER WHICH INCLUDES THE
**    FACILITYS TO PRINT A HEADER ON EACH PAGE WITH ASSENDING PAGE
**  NUMBERS.  THE LINKAGE IS AS FOLLOWS --- REG0=LENGTH OF MESSAGE
**                                              REG 1= ADDR OF MESSAGE
**                                                   BAL   14,ZZPR
*********************************************************************
         ENTRY ZZPR
ZZPR     BALR  15,0                SET ADDRESSABILITY FOR NEXT INST
         USING *,15
         STM   14,3,ZZSAVE         SAVE REGISTERS
         DROP  15
         BALR  2,0
         USING *,2
          TM   ZZSW,X'02'               SHOULD WE SET UP HEADER
          BO   ZZHEAD                   YES
          TM   ZZSW,X'01'               SHOULD WE SKIP TO NEXT PAGE
          BO   ZZSKIP                   YES
          CLC  ZZLINES(1),ZZLINCNT      IS THIS END OF PAGE
          BL   FULLPAGE                 YES
          B    ZZCLEAR                  CLEAR PRINT BUFFER AND PRINT
PRNTRTRN  LM   14,3,ZZSAVE              RESTORE REGISTERS
          BR   14                       RETURN
ZZHEAD    MVC  ZZHDSAVE(121),0(1)       MOVE HEADER AND LINE COUNT TO
*                                        SAVE AREA
          BAL  3,ZZPG                   GO TO ADD ONE TO PAGE NUMBER
*                                        AND PRINT HEADER
          B    PRNTRTRN
*
ZZSKIP    CLI  ZZCTRL,C'-'              IS NEXT PRINT A TRIPLE SPACE
          BE   PRNTRTRN                 YES   RETURN WITHOUT PRINT
          BAL  3,ZZPG                   GO TO PRINT HEADER
          B    PRNTRTRN
FULLPAGE  BAL  3,ZZPG                   GO PRINT HEADER
          B    ZZCLEAR                  GO PRINT LINE
*                           THIS ROUTINE ADDS ONE TO PAGE NO. AND
*                           PRINTS HEAD  SET CONTROL CHAR FOR NEXT PRNT
ZZPG     TM    ZZCTRL,X'FF'
         BZ    ZZNOADD
          PACK ZZCONVRT(8),ZZPGNO(3)    ADD ONE
          CVB  15,ZZCONVRT                TO
          LA   15,1(15)                     PAGE
          CVD  15,ZZCONVRT                    NUMBER
          UNPK ZZPGNO(3),ZZCONVRT(8)            IN
          OI   ZZPGNO+2,X'F0'                     HEADER
ZZNOADD  MVI   ZZCTRL,C'1'         SET SKIP TO 1 CONTROL
          MVI  ZZLINCNT,X'04'           INITIALIZE LINE COUNT TO 4
          MVC  ZZPRINT(120),ZZHDSAVE   MOVE HEADER INTO PRINT BUFFER
          ST   3,SAVE3                  SAVE REGISTER 3
          BAL  3,ZZWRITE                GO TO WRITE HEADER
          MVI  ZZCTRL,C'-'              SET CONTROL TO TRIPLE SPACE
          L    3,SAVE3
          BR   3
ZZCLEAR   IC   14,ZZLINCNT              THIS ROUTINE WILL
          LA   14,1(14)                    ADD ONE
          STC  14,ZZLINCNT              STORE NEW LINE COUNT
          MVI  ZZPRINT,C' '
         MVC   ZZPRINT+1(119),ZZPRINT      CLEAR PRINT BUFFER
          LM   14,15,ZZSAVE+8                TO BLANKS
          EX   14,ZZMOVE                   MOVE LINE TO BE PRINTED
          BAL  3,ZZWRITE                     INTO BUFFER
          MVI  ZZCTRL,C' '                 SET CONTROL CHAR FOR NEXT
          B    PRNTRTRN                 PRINT LINE AND  RETURN
ZZMOVE    MVC  ZZPRINT(1),0(15)         MOVE MESSAGE TO PRINT BUFFER
ZZWRITE  PUT   ZZDCB,ZZCTRL             WRITE MESSAGE              BS0H
          BR   3
          DS   0D
ZZSAVE    DS   10X
ZZSW      DS   10X
          DS    4X
SAVE3     DS    4X
ZZCTRL   DS    1X
ZZPRINT  DS    121X
ZZHDSAVE DS    120X
ZZCONVRT EQU   ZZSAVE+32
ZZLINES  DS    1X
ZZLINCNT DS    1X
ZZDECB   DS    24X
SKIP     EQU   256
HEADER   EQU   512
ZZPGNO   EQU   ZZHDSAVE+103
*********************************************************************
***      COMMON COMMUNICATION AREA
SAVE1315 DS    3F                  SAVE AREA FOR REGS 13-15
SAVEREGS DS    18F                 REGISTER SAVE AREA
PARALIST DS    8F                  AREA FOR EXITS PARAMETER LIST
DDSYSIN  DC    2F'0'                        DDNAME=SYSIN AREA
DDSUBNAM DC    2F'0'                        DDNAME AREA 1-SYSUT1
         DC    2F'0'                        DDNAME AREA 2-SYSUT2
HICONCOD DC    H'0'
CCADSORG DC    X'00'               PO OR PS SWITCH (01=PO)
ABORTSW  DC    X'00'               ABORT SWITCH
LABEL    DC    X'00'          SET TO X'00' IF DATA=YES             UL0H
*                                    X'01' IF DATA=NO              UL0H
*                                    X'10' IF DATA=ONLY            UL0H
*                                    X'20' IF DATA=ALL             UL0H
UEXIT    DC    X'00'          SET TO 01 IF OPEN TOOK USER LAB EXIT UL0H
UHRADR   DC    F'0'           CONTAIN ADDR. OF INHDR               UL0H
UTRADR   DC    F'0'           CONTAIN ADDR. OF INTLR               UL0H
INHD1    DC    F'0'           HAS ADDR. OF SYSUT1 HD LAB SAVE AREA UL0H
INHD2    DC    F'0'           HAS ADDR. OF SYSUT2 HD LAB SAVE AREA UL0H
INHDCT1  DC    F'0'           CONT. NO. OF HEADER LABELS FOR SYSUT1UL0H
INHDCT2  DC    F'0'           CONT. NO. OF HEADER LABELS FOR SYSUT2UL0H
INTL1    DC    F'0'           HAS ADDR. OF SYSUT1 TL LAB SAVE AREA UL0H
INTL2    DC    F'0'           HAS ADDR. OF SYSUT2 TL LAB SAVE AREA UL0H
INTLCT1  DC    F'0'           CONT. NO. OF TRAILER LABEL FOR SYSUT1UL0H
INTLCT2  DC    F'0'           CONT. NO. OF TRAILER LABEL FOR SYSUT2UL0H
BUFF1    DC    F'0'           CONTAIN ADDR. OF READ AREA-DS1       VS0H
BUFF2    DC    F'0'           CONTAIN ADDR. OF READ AREA-DS2       VS0H
LBUFF1   DC    F'0'           LENGTH OF BUFFER FOR SYSUT1 RCD PROC VS0H
LBUFF2   DC    F'0'           LENGTH OF BUFFER FOR SYSUT2 RCD PROC VS0H
LORECO   DC    F'0'           TOTAL LOGICAL RECORD COUNTER         VS0H
RECLTH   DC    H'0'           LOGICAL RECORD LENGTH-DS1            VS0H
RECLH2   DC    H'0'           LOGICAL RECORD LENGTH-DS2            VS0H
DSET1    DC    F'0'          ADDRS. OF SYSUT1 DCB IN IEBCQSAM      VS0H
DSET2    DC    F'0'          ADDRS. OF SYSUT2 DCB IN IEBCQSAM      VS0H
INPUTLOC DC    F'0'          ADDR. OF INPUT BUFFER FOR BLPRT RT    VS0H
NOEXTSW  DC    X'00'          NO EXIT TO USER LAB RTN IF SET TO 01 UL0H
TERMSW   DC    X'00'          TERM. AFTER LAB. PROC. IF SET TO 01  UL0H
EXIT1SW  DC    X'00'          SET TO 01 IF THERE IS AN USER INHDR  UL0H
EXIT3SW  DC    X'00'          SET TO 01 IF THERE IS AN USER INTLR  UL0H
VSSWT    DC    X'00'          SET TO 01 IF BSAM USED TO PROC VS RCDVS0H
*                             SET TO 02 IF QSAM USED TO PROC VS RCDVS0H
NOLB     DC    X'00'          SET TO 01 IF NO USER LABEL ON SYSUT1 UL0H
*                             SET TO 02 IF NO USER LABEL ON SYSUT2 UL0H
LABSW    DC    X'00'          SET TO 01; SYSUT1 HEADER LABEL PROC  UL0H
*                             SET TO 02; SYSUT2 HEADER LABEL PROC  UL0H
*                             SET TO 04; SYSUT2 TRAILER LABEL PROC UL0H
*                             SET TO 08; SYSUT2 TRAILER LABEL PROC UL0H
***********************************************************************
PRINTOUT DCB   DSORG=PS,MACRF=(PM),DDNAME=SYSPRINT,                BS0H*
               LRECL=121,                                        A35461*
               SYNAD=SYNADEX,                                    A27718*
               RECFM=FBA,EXLST=OPT,DEVD=DA                         BS0H
*********************************************************************
COMMON   EQU   SAVE1315
ZZDCB    EQU   PRINTOUT
         DCBD  DSORG=PS
DDNAME   EQU   DCBDDNAM-IHADCB
         END   COMPARE
