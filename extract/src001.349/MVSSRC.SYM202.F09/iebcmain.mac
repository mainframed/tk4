***********************************************************************
*                                                                     *
* NAME               *   *   *****   ***   *   *                      *
*                    ** **   *   *    *    **  *                      *
*                    * * *   *****    *    * * *                      *
*                    *   *   *   *    *    *  **                      *
*                    *   *   *   *   ***   *   *                      *
*                                                                     *
***********************************************************************
*                                                                     *
* FUNCTION/OPERATION                                                  *
*                                                                     *
*      THIS IS THE MAIN PROCESSOR MODULE FOR THE DATA SET UTILITY     *
*   IEBCOMPR.  ITS MAIN FUNCTIONS ARE AS FOLLOWS:                     *
*                                                                     *
*      1.  SETS ITS ADDRESSABILITY WITH TWO BASE REGISTERS            *
*      2.  FINALIZES THE SYSUT1 AND SYSUT2 DCB'S FROM INFORMATION     *
*            PROVIDED BY THE PREVIOUS ROUTINES                        *
*      3.  OPENS THE TWO DATA SETS TO BE COMPARED- SYSUT1 AND SYSUT2  *
*      4.  IF SEQUENTIAL DATA SETS ARE BEING COMPARED, THIS MODULE    *
*            READS THE RECORDS AND MAKES THE COMPARISONS AT THE       *
*            LOGICAL RECORD LEVEL. IF DATA SETS ARE OF VS RECFM AND   *
*            WITH KEYS OR OF VS RECFM AND WITH RECORDS GREATER THAN   *
*            32756 BYTES LONG, THEN IT WILL MAKE COMPARISONS AT       *
*       PHYSICAL BLOCK LEVEL.                                         *
*            USER INPUT HEADER/TRAILER LABELS WILL BE COMPARED AS     *
*            DATA IF REQUESTED BY USER                                *
*      5.  IF PARTITIONED DATA SETS ARE BEING COMPARED, THE MODULE    *
*            READS THE PDS DIRECTORY AND SETS UP APPROPRIATE SWITCHES *
*            AND TABLES TO ALLOW IT TO OBTAIN THE DATA IN EACH MEMBER *
*            AFTER THE DIRECTORY COMPARISON HAS TAKEN PLACE.  AFTER   *
*            THE DIRECTORIES ARE COMPARED, THE MEMBERS OF THE DATA    *
*            SETS ARE COMPARED AT THE LOGICAL RECORD LEVEL.           *
*      6.  UPON FINDING ANY MISCOMPARES THIS MODULE SETS UP THE       *
*            APPROPRIATE MESSAGES AND CONVERTS THE NON-COMPARING      *
*            INFORMATION INTO PRINTABLE HEX                           *
*      7.  IS RESPONSIBLE FOR BRANCHING TO THE APPROPRIATE PRINT      *
*            ROUTINE                                                  *
*      8.  TERMINATING EXECUTION AFTER TEN CONSECUTIVE ERRORS IN A    *
*            SEQUENTIAL DATA SET, OR IF COMPARING A PDS, IT MUST      *
*            TERMINATE COMPARING OF A MEMBER AFTER TEN CONSECUTIVE    *
*            ERRORS IN THAT MEMBER                                    *
*      9.  LINKING TO THE USER PROVIDED EXIT ROUTINES                 *
*     10.  DETERMINING IF AND WHEN TO ABORT THE JOB                   *
*     11.  CLOSING THE SYSPRINT, SYSUT1, AND SYSUT2 DATA SETS UPON    *
*            EXIT                                                     *
*     12.  SETTING THE FINAL CONDITION CODE                           *
*     13.  RETURNING TO THE CALLING PROGRAM                           *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
* ENTRY POINTS                                                        *
*                                                                     *
*   1. 'MAIN'    THIS IS THE ENTRY POINT TO THE MAIN PROCESSOR FROM   *
*                ROOT SEGMENT.                                        *
*   2. 'COMPAR'  THIS IS THE ENTRY POINT TO THE SUBROUTINE WHICH      *
*                COMPARES RECORDS FROM INPUT DATA SETS                *
*   3. 'BEFNREND' THIS IS THE ENTRY POINT TO THE SUBROUTINE WHICH     *
*                INITIALIZE THE PROPER SWITCHES FOR USER INPUT TRAILER*
*                LABEL COMPARISON.                                    *
*   4. 'NORMEND' THIS IS THE ENTRY POINT TO THE SUBROUTINE WHICH      *
*                CLOSES THE DCBS, FREE GOTTEN STORAGE AND DELETE      *
*                USER EXIT ROUTINES WERE BROUGHT IN BY IEBCOMPR.      *
*   5. 'BLPRT'   THIS IS THE ENTRY POINT TO THE SUBROUTINE WHICH      *
*                CONVERTS THE NON-COMPARING INFORMATION TO PRINTABLE  *
*                HEX                                                  *
*                                                                     *
***********************************************************************
*                                                                     *
* INPUT                                                               *
*                                                                     *
*      INPUT TO THIS MODULE IS TWOFOLD.  FIRST, IT MAKES USE OF THE   *
*    SWITCHES AND PARAMETER LISTS WHICH WERE SET UP BY THE ROOT       *
*    SEGMENT, COMPARE, AND BY ANALY, THE FIRT OVERLAY SEGMENT.  THIS  *
*    INFORMATION IS PASSED TO MAIN THROUGH THE COMMUNICATION REGION   *
*    IN THE ROOT SEGMENT.  THE OTHER SOURCE OF INPUT IS DATA ITSELF.  *
*    THIS DATA MAY RESIDE ON ANY STORAGE DEVICE AND MAY BE SEQUENTIAL,*
*    OR PARTITIONED.  OF COUSE ANY PARTITIONED DATA SET MAY ONLY      *
*    RESIDE ON A DIRECT ACCESS DEVICE.                                *
*                                                                     *
***********************************************************************
*                                                                     *
* OUTPUT                                                              *
*                                                                     *
*      THE OUTPUT FROM THIS MODULE IS DIAGNOSTIC AND INFORMATIONAL    *
*    MESSAGES, AS WELL AS RECORDS WHICH MISCOMPARED DURING EXECUTION  *
*    OF THE PROGRAM.  IF THERE WERE EXTRA RECORDS ON EITHER DATA SET, *
*    OR,IF IN A PARTITIONED DATA SET, THE USER DATA WAS UNEQUAL THE   *
*    UNEQUAL RECORDS WILL ALSO BE PRINTED.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* EXTERNAL ROUTINES                                                   *
*                                                                     *
*     MAIN USES THE ROOT SEGMENT'S PRINT ROUTINES, ZZPR AND JPRINTRT, *
*   AS CLOSED SUBROUTINES.  LINKAGE TO THESE ROUTINES IS MADE BY      *
*   BRANCH AND LINK INSTRUCTIONS. MAIN ALSO USES IEBQSAM AS A CLOSED  *
*   SUBROUTINE TO RETRIEVE RECORDS OF VS TYPE. MAIN ALSO USES IEBCULET*
*   VIA DCBEXLST TO SAVE USER INPUT HEADER/TRAILER LABELS AND TO GIVE *
*   CONTROL TO USER INHDR/INTLR EXITS. IF USER HAS SPECIFIED AN 'EXIT *
*   ROUTINE, THE LINKAGE TO THIS ROUTINE IS MADE BY AN O/S 360 LINK   *
*   INSTRUCTION.                                                      *
*                                                                     *
***********************************************************************
*                                                                     *
* EXITS                                                               *
*                                                                     *
*     THE ONLY EXIT MADE FROM MAIN IS A RETURN BACK TO THE CALLING    *
*   PROGRAM WHEN PROCESSING IS FINISHED.                              *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
* TABLES/WORK AREAS                                                   *
*                                                                     *
*     THERE IS ONE TABLE IN MAIN.  THIS IS A TRANSLATE TABLE USED     *
*   WHEN HEX DIGITS ARE BEING TRANSLATED TO PRINTABLE CHARACTERS.     *
*   THE SYMBOLIC NAME FOR THE START OF THE TABLE IS FCLIST.           *
*                                                                     *
***********************************************************************
*                                                                     *
* ATTRIBUTES                                                          *
*                                                                     *
*     NON-REENTRANT AND NON-REUSEABLE                                 *
*                                                                     *
***********************************************************************
         EJECT
COMMX    DSECT
         USING COMMX,10
SAVE1315 DS    3F                  SAVE AREA FOR REGS 13,14, AND 15
SAVEREGS DS    18F                 MY REGISTER SAVE AREA
PARALIST DS    8F                  THE EXITS PARAMETER LIST-USER ROUTS
*                                    1. INHDR PARAMETER NAME
*                                    2. INTLR PARAMETER NAME
*                                    3. ERROR PARAMETER NAME
*                                    4. PRECOMP PARAMETER NAME
DDSYSIN  DS    2F                  SYSIN PARAMETER
DDSUBNAM DS    4F                  DDNAME PARAMETER LIST
*                                    1. SYSUT1 DDNAME
*                                    2. SYSUT2 DDNAME
HICONCOD DS    2X                  RETURN CODE STORAGE AREA
CCADSORG DS    1X                  SET TO '01' IF PARTITIONED DATA SET
ABORTSW  DS    1X                  ABORT SWITCH - SET TO '01' IF ON
LABEL    DS    1X             SET TO X'00' IF DATA=YES             UL0H
*                                    X'01' IF DATA=NO              UL0H
*                                    X'10' IF DATA=ONLY            UL0H
*                                    X'20' IF DATA=ALL             UL0H
UEXIT    DS    1X             SET TO 01 IF OPEN TOOK USER LAB EXIT UL0H
UHRADR   DS    1F             CONTAIN ADDR. OF INHDR               UL0H
UTRADR   DS    1F             CONTAIN ADDR. OF INTLR               UL0H
INHD1    DS    1F             HAS ADDR. OF SYSUT1 HD LAB SAVE AREA UL0H
INHD2    DS    1F             HAS ADDR. OF SYSUT2 HD LAB SAVE AREA UL0H
INHDCT1  DS    1F             CONT. NO. OF HEADER LABELS FOR SYSUT1UL0H
INHDCT2  DS    1F             CONT. NO. OF HEADER LABELS FOR SYSUT2UL0H
INTL1    DS    1F             HAS ADDR. OF SYSUT1 TL LAB SAVE AREA UL0H
INTL2    DS    1F             HAS ADDR. OF SYSUT2 TL LAB SAVE AREA UL0H
INTLCT1  DS    1F             CONT. NO. OF TRAILER LABEL FOR SYSUT1UL0H
INTLCT2  DS    1F             CONT. NO. OF TRAILER LABEL FOR SYSUT2UL0H
BUFF1    DS    1F             CONTAIN ADDR. OF READ AREA-DS1       VS0H
BUFF2    DS    1F             CONTAIN ADDR. OF READ AREA-DS2       VS0H
LBUFF1   DS    1F             LENGTH OF BUFFER FOR SYSUT1 RCD PROC VS0H
LBUFF2   DS    1F             LENGTH OF BUFFER FOR SYSUT2 RCD PROC VS0H
LORECO   DS    1F             TOTAL LOGICAL RECORD COUNTER         VS0H
RECLTH   DS    1H             LOGICAL RECORD LENGTH-DS1            VS0H
RECLH2   DS    1H             LOGICAL RECORD LENGTH-DS2            VS0H
DSET1    DS    1F            ADDRS. OF SYSUT1 DCB IN IEBCQSAM      VS0H
DSET2    DS    1F            ADDRS. OF SYSUT2 DCB IN IEBCQSAM      VS0H
INPUTLOC DS    1F            ADDR. OF INPUT BUFFER FOR BLPRT RT    VS0H
NOEXTSW  DS    1X             NO EXIT TO USER LAB RTN IF SET TO 01 UL0H
TERMSW   DS    1X             TERM. AFTER LAB. PROC. IF SET TO 01  UL0H
EXIT1SW  DS    1X             SET TO 01 IF THERE IS AN USER INHDR  UL0H
EXIT3SW  DS    1X             SET TO 01 IF THERE IS AN USER INTLR  UL0H
VSSWT    DS    1X             SET TO 01 IF BSAM USED TO PROC VS RCDVS0H
*                             SET TO 02 IF QSAM USED TO PROC VS RCDVS0H
NOLB     DS    1X             SET TO 01 IF NO USER LABEL ON SYSUT1 UL0H
*                             SET TO 02 IF NO USER LABEL ON SYSUT2 UL0H
LABSW    DS    1X             SET TO 01; SYSUT1 HEADER LABEL PROC  UL0H
*                             SET TO 02; SYSUT2 HEADER LABEL PROC  UL0H
*                             SET TO 04; SYSUT2 TRAILER LABEL PROC UL0H
*                             SET TO 08; SYSUT2 TRAILER LABEL PROC UL0H
PRINTOUT DS    0F                  SYSPRINT DCB
         SPACE 3
***********************************************************************
*                   THIS IS THE MAIN PROCESSING MODULE                *
***********************************************************************
MAIN     CSECT
* 038600-039200,053600-054200,103200,111400-111600,114800,       A26556
* 122200-131400,144000-144400,145000-147200,151400,154400-154800,A26556
* 156600-156800,157400,230200,231800                             A26556
* 164000,165800,172600,176600,181000-181200,190600-190800,200800 A27718
* 114800,114900,146600,146700                                    A37861
*                                                                A38747
*A037300,037320,043500,043520,047500,047200,085900,085920,       A41765
*A087500,087520,172360-172360-172399,172532-17266721,176360-     A41765
*A176399,176532-176667,2835402,047450,283900                     A41765
*D172200,172400,176200,176400                                    A41765
*A089105-089107                                                  A44317
*C089180,089560,158600,261400                                    A44317
*D158400                                                         A44317
*C060300-061100                                                  A48817
*A082300-082380                                                  A48817
*A203204                                                         A50947
*C089660,089668,089676,089696-089704                            OY01190
*C200680,200740                                                 OY01191
*3015                                                              9314
*2926091600,094400,250600,256000                                   SA0I
*C200680,200740                                                @YA02529
*A 169500,173700                                               @YM04833
*C 297563-297581                                               @YM04833
*D240600-240800,247800-248000,261800-262800                    @YA01671
*A232560-232568                                                @ZA10944
         ENTRY STARTP                                              VS0H
         ENTRY COMPAR                                              VS0H
         ENTRY BEFNREND                                            VS0H
         ENTRY NORMEND                                             VS0H
         ENTRY BLPRT                                               VS0H
R0       EQU   0                                                   UV0H
R1       EQU   1                                                   UV0H
R2       EQU   2                                                   UV0H
R3       EQU   3                                                   UV0H
R4       EQU   4                                                   UV0H
R5       EQU   5                                                   UV0H
R6       EQU   6                                                   UV0H
R7       EQU   7                                                   UV0H
R8       EQU   8                                                   UV0H
R9       EQU   9                                                   UV0H
R10      EQU   10                                                  UV0H
R11      EQU   11                                                  UV0H
R12      EQU   12                                                  UV0H
R13      EQU   13                                                  UV0H
R14      EQU   14                                                  UV0H
R15      EQU   15                                                  UV0H
         EXTRN DDERROR1            ALLOWS STORING OF DDNAME IN MESSAGE
         BALR  11,0                SET ADDRESSABILITY
         USING STARTP,11,12
STARTP   L     12,ADCON1           SET ADDRESSABILITY FOR 8192 BYTES
         TM    ABORTSW,X'01'       IS ABORT SWITCH ON
         BO    ABNOTER1              YES BRANCH                   48817
         LA    7,DASET1           LOAD DCB ADRESS
         LA    8,DASET2           LOAD DCB ADRESS
         CLI   DDSUBNAM,X'00'      IS THERE A DIFFERENT DDNAME FOR
*                                    SYSUT1
         BE    TESTSUB2              NO BRANCH
         MVC   DDNAMDCB(8,7),DDSUBNAM   MOVE DDNAME INTO DCB FOR SYSUT1
TESTSUB2 CLI   DDSUBNAM+8,X'00'    IS THERE A DIFFERENT DDNAME FOR
*                                    SYSUT2
         BE    BEGIN1                NO BRANCH
         MVC   DDNAMDCB(8,8),DDSUBNAM+8 MOVE DDNAME INTO DCB FOR SYSUT2
BEGIN1   MVC   NAMEDD1(8),DDNAMDCB(7)       MOVE DDNAME INTO AREA
         MVC   NAMEDD2(8),DDNAMDCB(8)       MOVE DDNAME INTO AREA
         MVC   PARATABL(32),PARALIST    MOVE EXITS PARAMETER LIST
*                                    (THESE ARE THE USER ROUTINES)
         EJECT
***********************************************************************
*        THIS SECTION SETS THE APPROPRIATE SWITCHES TO INDICATE       *
*        WHICH USER ROUTINES ARE PRESENT.                             *
***********************************************************************
         CLI   PARALIST,X'40'      IS THERE AN INHDR ROUTINE
         BE    EX3TEST               NO BRANCH
         MVI   EXIT1SW,1           SET INHDR SWITCH ON
EX3TEST  CLI   PARALIST+8,X'40'    IS THERE AN OUTHDR ROUTINE
         BE    ERRTESTE              NO BRANCH
         MVI   EXIT3SW,1           SET OUTHDR SWITCH ON
ERRTESTE CLI   PARALIST+16,X'40'   IS THERE AN ERROR USER ROUTINE
         BE    PRETESTE              NO BRANCH
         MVI   ERRORSW,1           SET ERROR USER SWITCH ON
PRETESTE CLI   PARALIST+24,X'40'   IS THERE A PRECOMP USER ROUTINE
         BE    JOESTA                NO BRANCH
         MVI   PRECOMSW,1          SET PRECOMP USER SWITCH ON
JOESTA   TM    CCADSORG,1          ARE THE DATA SETS PARTITIONED
         BZ    STARTBSA              NO BRANCH
         SPACE 3
***********************************************************************
*        THIS SECTION OF CODE OBTAINS AN AREA OF CORE STORAGE FOR     *
*        THE DIRECTORY OF THE SYSUT1 DATA SET. IT THEN DETERMINES     *
*        HOW MANY TRUE NAMES ARE IN THIS PDS AND OBTAINS STORAGE FOR  *
*        THESE NAMES. THE NAMES ARE USED LATER TO "FIND" THE MEMBERS  *
*        OF THE PDS.                                                  *
***********************************************************************
         GETMAIN R,LV=256          FOR THE PDS DIRECTORY BLOCK
         ST    1,BUFF1             STORE ADDRESS OF 256 BYTE BUFFER
         OPEN  DASET1              OPEN FIRST DCB
         LA    1,DASET1           LOAD DCB ADDRESS
         TM    48(1),X'10'        WAS OPEN ACCOMPLISHED
         BZ    NOTOPEN              NO-ABORT JOB
         TM    ERRDCB,X'80'    BLKS,OR LRECL PARAMETER ZERO ?    A41765
         BO    ERRFMT          YES, PRINT MESS. IEB212I          A41765
DIRCORD  L     8,BUFF1             LOAD BUFFER ADDRESS
         READ  DECBFT,SF,DASET1,(8),'S'
         CHECK DECBFT
         LH    4,TWO               REG4 IS RELATIVE POINTER--HERE WE
*                                    INITIALIZE IT PAST FIRST TWO BYTES
*                                    OF BLOCKSIZE DATA IN PDS DIRECTORY
         CLC   0(2,8),TWOFS+2     IS DIRECTORY BLOCK GREATER     A26556
*                                  THAN 256                      A26556
         BH    ERR2                YES, BRANCH                   A26556
         CLC   0(2,8),F14         IS DIRECTORY BLOCK LESS THAN   A26556
*                                  14                            A26556
         BL    ERR2                YES, BRANCH                   A26556
         MVC   BLKLTH1(2),0(8)     STORE BLOCKSIZE IN SAVE AREA
FINUPBLK L     8,BUFF1             LOAD READING BUFFER ADDRESS
         AR    8,4                 REG8 NOW POINTS TO MEMBER NAME
         CLC   0(8,8),ALLFS        IS THIS NAME THE LAST IN DIRECTORY
         BE    ENDDIRCO              YES BRANCH
         TM    11(8),128           IS THIS NAME A TRUE NAME
         BO    DONTADD               NO BRANCH
         L     5,NOOFTN            WAS TRUE NAME, THUS ADD 1 TO TRUE
         LA    5,1(5)                NAME COUNTER
         ST    5,NOOFTN
DONTADD  LH    5,10(8)             INCREMENT REG. 4 BY NUMBER
         N     5,MASK1               OF BYTES
         AR    5,5                     OF USER
         AR    4,5                       DATA.
         AH    4,TWELVE            ADD LENGTH OF NAME + TTRC (12)
         CH    4,BLKLTH1           HAS BLOCK BEEN COMPLETED
         BL    FINUPBLK              NO BRANCH
         B     DIRCORD               YES-GO GET ANOTHER PDS BLOCK
ENDDIRCO CLOSE (DASET1,REREAD)     CLOSE FOR DIRECTORY BLOCK READS
         L     0,NOOFTN            LOAD NUMBER OF TRUE NAMES IN PDS
*                                    DIRECTORY BLOCKS FOR SYSUT1
         LTR   R0,R0           IS LENGTH EQ ZERO ?               A41765
         BC    8,BOSETTNM      YES,PRINT ERR. MESS. IEB210I      A41765
         SLL   0,3                 MULTIPLY BY 8
         GETMAIN R,LV=(0)          FOR MEMBER NAMES
         ST    1,TNSET             STORE ADDRESS FOR TABLE
         L     0,NOOFTN            LOAD NUMBER OF TRUE NAMES IN PDS
         MH    0,TWELVE            MULTIPLY BY 12
         GETMAIN R,LV=(0)          FOR TTRN'S OF EACH MEMBER (PDS#1)
         ST    1,TTRSET1           STORE ADDRESS OF TABLE
         L     0,NOOFTN            LOAD NUMBER OF TRUE NAMES IN PDS
         MH    0,TWELVE            MULTIPLY BY 12
         GETMAIN R,LV=(0)          FOR TTRN'S OF EACH MEMBER (PDS#2)
         ST    1,TTRSET2           STORE ADDRESS OF TABLE
         SPACE 3
***********************************************************************
*        THIS SECTION OF CODE OPENS BOTH DATA SETS, AND READS THE PDS *
*        DIRECTORIES. IT THEN COMPARES THE DIRECTORIES AND THEIR USER *
*        DATA AND PRINTS THE APPROPRIATE MESSAGES.                    *
***********************************************************************
         OPEN  DASET2              OPEN SYSUT2 DCB
         LA    1,DASET2           LOAD DCB ADDRESS
         TM    48(1),X'10'        WAS OPEN ACCOMPLISHED
         BZ    NOTOPEN             NO, END JOB                   A41765
         TM    ERRDCB,X'80'    BLKS,OR LRECL PARAMETER ZERO ?    A41765
         BO    ERRFMT          YES, PRINT MESS. IEB212I          A41765
         OPEN  DASET1              OPEN SYSUT1 DCB
         LA    1,DASET1           LOAD DCB ADDRESS
         TM    48(1),X'10'        WAS OPEN ACCOMPLISHED
         BZ    NOTOPEN              NO-ABORT JOB
         SR    2,2                 ZERO REG2 FOR INITIALIZATION
         SR    3,3                 ZERO REG3 FOR INITIALIZATION
         GETMAIN R,LV=256          FOR SYSUT2 BUFFER
         ST    1,BUFF2             STORE ADDRESS OF SYSUT2 BUFFER
DIRBUFF1 TM    BUFSW1,1            SHOULD ANOTHER BLOCK  BE READ FROM
         BZ    DIRBUFF2              DATA SET 1. NO-GO TO DIRBUFF2
         L     8,BUFF1             LOAD SYSUT1 BUFFER ADDRESS
         READ  DECB1,SF,DASET1,(8),'S'
         CHECK DECB1
         MVI   BUFSW1,0            SET SWITCH - BUFFER 1 NOT EMPTY
         LH    4,TWO               INITIALIZE REG4 AS A RELATIVE PTR.
*                                    THIS PTR IS INITIALIZED PAST THE
*                                    BLOCKSIZE FIELD OF THE PDS
*                                    DIRECTORY
         MVC   BLKLTH1(2),0(8)     STORE BLOCKSIZE IN SAVE AREA
DIRBUFF2 TM    BUFSW2,1            SHOULD ANOTHER BLOCK  BE READ FROM
         BZ    PRENAMCO              DATA SET 2.  NO-GO TO PRENAMCO
         L     8,BUFF2             LOAD SYSUT2 BUFFER ADDRESS
         READ  DECB2,SF,DASET2,(8),'S'
         CHECK DECB2
         MVI   BUFSW2,0            SET SWITCH - BUFFER 2 NOT EMPTY
         LH    6,TWO               INITIALIZE REG6 AS A RELATIVE PTR.
*                                    THIS PTR IS INITIALIZED PAST THE
*                                    BLOCKSIZE FIELD OF THE PDS
*                                    DIRECTORY
         CLC   0(2,8),TWOFS+2     IS DIRECTORY BLOCK GREATER     A26556
*                                  THAN 256                      A26556
         BH    ERR2                YES, BRANCH                   A26556
         CLC   0(2,8),F14         IS DIRECTORY BLOCK LESS THAN   A26556
*                                  14                            A26556
         BL    ERR2                YES, BRANCH                   A26556
         MVC   BLKLTH2(2),0(8)     STORE BLOCKSIZE IN SAVE AREA
PRENAMCO L     7,BUFF1             PLACE NUMBER OF
         AR    7,4                   BYTES OF USER
         IC    15,11(7)            INSERT THE 'C' CHAR OF TTRC
         N     15,MASK2            MASK OUT ALL BUT BITS 1&2 OF C FIELD
         SRL   15,3                GET LENGTH OF TTRZ'S IN REG 15
         STH   15,TTRLTH           STORE IN SAVE AREA
         LH    5,10(7)                 DATA IN REGISTER 5
         N     5,MASK1                   AND IN
         AR    5,5                         USERDAL.
         STH   5,USERDAL
         L     7,BUFF2
         AR    7,6
         IC    15,11(7)            INSERT THE 'C' CHAR OF TTRC
         N     15,MASK2            MASK OUT ALL BUT BITS 1&2 OF C FIELD
         SRL   15,3                GET LENGTH OF TTRZ'S IN REG 15
         STH   15,TTRLTH2          STORE IN SAVE AREA
         LH    5,10(7)
         N     5,MASK1
         AR    5,5
         STH   5,USERDAL2
NAMECOMP L     8,BUFF1
         AR    8,4
         L     9,BUFF2
         AR    9,6
         CLC   0(8,8),0(9)         COMPARE MEMBER NAMES
         BL    LOGNAME1            NAME MISSING FROM DATA SET 2.
         BH    LOGNAME2            NAME MISSING FROM DATA SET 1.
         CLC   0(8,8),ALLFS
         BE    AFTDIRCO
         TM    11(8),X'80'              TEST ALIAS OR TRUE NAME  A48817
         BO    ALIACOMP                 TEST IF SECOND IS ALIAS  A48817
         TM    11(9),X'80'              TEST ALIAS OR TRUE NAME  A48817
         BZ    STORNAME                 BOTH TRUE NAMES          A48817
         B     ALIAMEMB                 NO,COMPARE AS USER DATA  A48817
ALIACOMP TM    11(9),X'80'              IS ENTRY ON SYSUT1 ALIAS A48817
         BO    RESET7                   BOTH ALIAS NAMES         A48817
         B     ALIAMEMB                 NO,COMPARE AS USER DATA  A48817
STORNAME L     8,TNSET
         AR    8,2                 STORE NAME IN
         L     9,BUFF1               LIST OF
         AR    9,4                     TRUE
         MVC   0(8,8),0(9)               NAMES.
         AH    2,EIGHT
         LH    7,TTRLTH
         LTR   7,7                 DETERMINE WHICH TTR'S IN USER DATA
         BZ    RESET7                POINT TO NOTE LISTS. STORE THOSE
         L     9,BUFF1               1 (TTRSET1). STORE THE CORRESPOND-
         AR    9,4                   ING TTR'S FROM DATA SET 2 IN
         TM    15(9),255             TTRSET2.
         BZ    SECTTR
         L     8,TTRSET1
         AR    8,3
         MVC   0(3,8),12(9)
         MVI   3(8),0
         L     8,TTRSET2
         AR    8,3
         L     9,BUFF2
         AR    9,6
         MVC   0(3,8),12(9)
         MVI   3(8),0
         AH    3,FOUR
SECTTR   SH    7,FOUR
         LTR   7,7
         BZ    RESET7
         L     9,BUFF1
         AR    9,4
         TM    19(9),255
         BZ    THIRDTTR
         L     8,TTRSET1
         AR    8,3
         MVC   0(3,8),16(9)
         MVI   3(8),0
         L     8,TTRSET2
         AR    8,3
         L     9,BUFF2
         AR    9,6
         MVC   0(3,8),16(9)
         MVI   3(8),0
         AH    3,FOUR
THIRDTTR SH    7,FOUR
         LTR   7,7
         BZ    RESET7
         L     9,BUFF1
         AR    9,4
         TM    23(9),255
         BZ    RESET7
         L     8,TTRSET1
         AR    8,3
         MVC   0(3,8),20(9)
         MVI   3(8),0
         L     8,TTRSET2
         AR    8,3
         L     9,BUFF2
         AR    9,6
         MVC   0(3,8),20(9)
         MVI   3(8),0
         AH    3,FOUR              END OF STORING OF TTR'S.
RESET7   CLC   USERDAL+1(1),USERDAL2+1  ARE USER DATA LENGTHS EQUAL
         BNE   ERRCOMUD                   NO BRANCH
         CLI   USERDAL+1,X'00'          IS USER DATA LENGTH ZERO
         BZ    RETERRCU              NO BYTES TO BE COMPARED
         L     8,BUFF1
         AR    8,4
*
         L     9,BUFF2
         AR    9,6
         SH    5,ONE
         STC   5,COMPDAT+1
COMPDAT  CLC   12(1,8),12(9)       COMPARE USER DATA.
         BNE   ERRCOMUD
RETERRCU AH    4,TWELVE
         AH    4,USERDAL
         CH    4,BLKLTH1           DOES BUFFER 1 NEED MORE RECORDS.
         BL    DIRBUF2S              NO
         MVI   BUFSW1,1              YES - SET BUFSW1
DIRBUF2S AH    6,TWELVE
         AH    6,USERDAL2
         CH    6,BLKLTH2           DOES BUFFER 2 NEED MORE RECORDS.
         BL    DIRBUFF1              NO
         MVI   BUFSW2,1              YES - SET BUFSW2
         B     DIRBUFF1
ADCON1   DC    A(STARTP+4096)
LOGNAME1 L     8,BUFF1
         AR    8,4
         TM    11(8),128           IS MISSING NAME AN ALIAS.
         BO    PRNAL1                YES
         LH    8,ONE                 NO - SET SWITCH - TRUE NAME
         STC   8,TNMIS2SW                 MISSING FROM SET 2.
         B     PRNTN1
RETFRPR1 AH    4,TWELVE
         AH    4,USERDAL
         CH    4,BLKLTH1           DOES BUFFER 1 NEED MORE RECORDS.
         BL    DIRBUFF1              NO
         LH    8,ONE                 YES - SET BUFSW1
         STC   8,BUFSW1
         B     DIRBUFF1
LOGNAME2 L     8,BUFF2
         AR    8,6
         TM    11(8),128           IS MISSING NAME AN ALIAS.
         BO    PRNAL2                YES
         LH    8,ONE                 NO - SET SWITCH - TRUE NAME
         STC   8,TNMIS1SW                 MISSING FROM SET 1.
         B     PRNTN2
ALIAMEMB LA    R1,3                     LOAD MESSAGE NUMBER      A48817
         L     R15,PRINCONS             LOAD PRINT ROUTINE       A48817
         BALR  R14,R15                  GO TO PRINT ROUTINE      A48817
         MVI   HICONCOD+1,X'08'         SET RETURN CODE TO EIGHT A48817
         MVC   MYPRTARE(120),BLANKS     CLEAR PRINT BUFFER       A48817
         MVC   MYPRTARE+10(14),MEMRNAME SET MEMBER NAME =        A48817
         MVC   MYPRTARE+24(8),0(8)      MOVE IN MEMBER/ALIAS NAMEA48817
         LA    R0,119                   PRINT LINE               A48817
         LA    R1,MYPRTARE              PRINT LINE               A48817
         L     R15,MYPRTCON             PRINT LINE               A48817
         BALR  R14,R15                  PRINT LINE               A48817
         B     RESET7                   CHECK IF USER DATA EQUAL A48817
AFTDIRCO TM    TNMIS1SW,1
         BO    TESSW2TN
         TM    TNMIS2SW,1
         BZ    TABLE1
         MVI   TABLE2SW,1
         B     NEXTSTEP
TESSW2TN TM    TNMIS2SW,1
         BO    BOSETTNM
TABLE1   MVI   TABLE1SW,1
NEXTSTEP ST    2,TNTABLEL
         ST    3,TTRTABLL
         CLOSE (DASET1,REREAD,DASET2,REREAD)
         FREEMAIN R,LV=256,A=BUFF1
         XC    BUFF1(4),BUFF1      CLEAR OUT BUFF1               A26556
         FREEMAIN R,LV=256,A=BUFF2
         XC    BUFF2(4),BUFF2      CLEAR OUT BUFF2               A26556
         B     OPEN1                                               UL0H
ERR2     LA    R1,2                                              A26556
         B     ABNOTERM                                          A26556
STARTBSA MVI   DCALBLX1,X'05'      ACTIVATE USER INPUT HEADER AND  UL0H
         MVI   DCALBLX2,X'05'      TRAILER LABEL EXITS             UL0H
         TM    EXIT1SW,X'01'       IS THERE AN INHDR               UL0H
         BZ    UTEXIT              NO                              UL0H
         LOAD  EPLOC=PARALIST      YES, LOAD USER INHDR            UL0H
         ST    R0,UHRADR           ST MAIN STORAGE ADDR OF INHDR   UL0H
UTEXIT   TM    EXIT3SW,X'01'       IS THERE AN INTLR               UL0H
         BZ    OPEN1               NO                              UL0H
         LOAD  EPLOC=PARALIST+8    YES, LOAD USER INTLR            UL0H
         ST    R0,UTRADR                                           UL0H
OPEN1    OPEN  DASET1         OPEN SYSUT1 DCB                      UL0H
         LA    1,DASET1           LOAD DCB ADDRESS
         TM    48(1),X'10'        WAS OPEN ACCOMPLISHED
         BZ    NOTOPEN              NO-ABORT JOB
         TM    ERRDCB,X'80'    BLKS,OR LRECL PARAMETER ZERO ?    A41765
         BO    ERRFMT          YES, PRINT MESS. IEB212I          A41765
         MVC   RECLTH(2),LRECLDCB(1)   MOVE LOGICAL RECORD LENGTH
         TM    DEVTDCB(1),X'20'   IS THIS A D. A. DEVICE
         BZ    OP1                  NO BRANCH
         MVC   KEYLTH(1),KEYLEDCB(1)   MOVE KEY LENGTH INTO SAVE AREA
OP1      OPEN  DASET2             OPEN SYSUT2
         LA    1,DASET2           LOAD DCB ADDRESS
         TM    48(1),X'10'        WAS OPEN ACCOMPLISHED
         BZ    NOTOPEN              NO-ABORT JOB
         TM    ERRDCB,X'80'    BLKS,OR LRECL PARAMETER ZERO ?    A41765
         BO    ERRFMT          YES, PRINT MESS. IEB212I          A41765
         MVC   RECLH2(2),LRECLDCB(1)   MOVE LOGICAL RECORD LENGTH
         TM    DEVTDCB(1),X'20'   IS THIS A D. A. DEVICE
         BZ    OP2                  NO BRANCH
         MVC   DCBKL2(1),KEYLEDCB(1)   MOVE KEY LENGTH INTO SAVE AREA
OP2      MVI   BUFSW1,1           SET BUFSW1 AND BUFSW2 = 1 SO THEY
         MVI   BUFSW2,1              ARE CONSIDERED EMPTY
* COORDINATION OF INPUT DATA SETS AND SWITCH SETTING
         TM    CCADSORG,1     PO DATA SET                          UL0H
         BO    SDSOBEG        YES, BRANCH                          UL0H
         TM    UEXIT,X'03'     IS LABEL EXIT TAKEN FOR BOTH DS     UL0H
         BO    HLABPROC        YES, BRANCH                         UL0H
         BZ    SDSOBEG         NO, BRANCH                          UL0H
         TM    LABEL,X'01'     DIS USER REP COMPARE LABELS         UL0H
         BO    SDSOBEG         NO, BRANCH                          UL0H
         LA    R1,58           YES, BUT ONE DS DID NOT TAKE EXIT   UL0H
         B     ABNOTERM        GO TO TERM. THE PROCESS             UL0H
***********************************************************************
*        INITIALIZATION FOR USER INPUT HEADER LABEL COMPARISON.       *
***********************************************************************
HLABPROC MVI   LBSW,X'00'     SET SW TO IND. WILL GO FOR INPUT HD  UL0H
*                             LABEL COMPARISON.                    UL0H
         MVC   CTR1(4),INHDCT1 SET CTR1 EQ NO. OF INPUT HEADER LAB UL0H
*                              PROCESSED FOR SYSUT1                UL0H
         MVC   CTR2(4),INHDCT2 SET CTR2 EQ NO. OF INPUT HEADER LAB UL0H
*                              PROCESSED FOR SYSUT2                UL0H
         MVC   SAREA1(4),INHD1 SAREA1 HAS ADDR OF SYSUT1 INPUT HD  UL0H
*                              SAVE AREA                           UL0H
         MVC   SAREA2(4),INHD2 SAREA2 HAS ADDR OF SYSUT2 INPUT HD  UL0H
         MVC   LABMSG1+6(7),HD  INITIALIZE MESSAGE                 UL0H
         BAL   R9,LABPROC      GO TO COMPARE THE LABEL             UL0H
         B     CKVRE          BRANCH                               UL0H
***********************************************************************
*        THIS SECTION OF CODE WILL COMPARE USER INPUT HEADER OR       *
*        TRAILER LABELS.                                              *
*              CTR1=NO. OF INPUT HEADER OR TRAILER LAB PROC FOR SYSUT1*
*              CTR2=NO. OF INPUT HEADER OR TRAILER LAB PROC FOR SYSUT2*
*              SAREA1= ADDR OF INPUT HD OR TL LAB SAVEAREA FOR SYSUT1 *
*              SAREA2= ADDR OF INPUT HD OR TL LAB SAVEAREA FOR SYSUT2 *
*              LBSW PRESET TO X'00' FOR HEADER LABEL COMPARISON       *
*                             X'01' FOR TRAILER LABEL COMPARISON      *
***********************************************************************
LABPROC  ST    R9,SAVE9                                            UL0H
         TM    LABEL,X'01'    IS DATA=NO                           UL0H
         BO    FTEST          YES, BRANCH                          UL0H
         B     ANYLAB         BRANCH                               UL0H
FTEST    CLI   LBSW,X'00'     IS IN HEADER LABEL PROCESSING        UL0H
         BNE   FTEST1         NO, BRANCH                           UL0H
         TM    EXIT1SW,X'01'  IS THERE AN USER INHDR               UL0H
         BZ    GOBACK1        NO,BRANCH                            UL0H
         B     ANYLAB         BRANCH                               UL0H
FTEST1   TM    EXIT3SW,X'01'  IS THERE AN USER INTLR               UL0H
         BZ    GOBACK1        NO,BRANCH                            UL0H
ANYLAB   TM    NOLB,X'01'     IS THERE ANY USER LABEL ON SYSUT1    UL0H
*                              SAVE AREA                           UL0H
         BO    NOLAB1         BRANCH IF NO USER LABEL ON SYSUT1    UL0H
         TM    NOLB,X'02'     IS THERE ANY USER LABEL ON SYSUT2    UL0H
         BO    NOLAB2         BRANCH IF NO USER LABEL ON SYSUT2    UL0H
         TM    LABEL,X'01'    IS DATA=NO                           UL0H
         BO    CKTERM         YES, BRANCH                          UL0H
         TM    LABEL,X'30'    IS DATA=ALL OR DATA=ONLY             UL0H
         BM    LCOMP          YES, BRANCH                          UL0H
TTERM    TM    TERMSW,X'01'   DID USER LAB RTN REQ TERMINATION     UL0H
         BO    USREQTE1       YES,BRANCH                           UL0H
LCOMP    SR    R5,R5          CLEAR REG5                           UL0H
         L     R2,SAREA1      REG2 HAS SYSUT1 USER LABEL SAVEAREA  UL0H
         L     R3,SAREA2      REG3 HAS SYSUT2 USER LABEL SAVEAREA  UL0H
ATCOMP   CLC   0(80,R2),0(R3) COMPR CORRESP. LABEL FROM BOTH DS    UL0H
         BE    BUMPTR         IF EQ. GO BUMP THE POINTERS          UL0H
         BAL   R4,UNEQLAB     IF UNEQ, GO PRINT MSG AND LABELS     UL0H
BUMPTR   LA    R5,1(R5)       BUMP CTR OF THE LABELS COMPARED      UL0H
         C     R5,CTR1        ANY LABEL LEFT FROM SYSUT1           UL0H
         BE    END1           NO LABEL LEFT FROM SYSUT1            UL0H
         C     R5,CTR2        ANY LABEL LEFT FROM SYSUT2           UL0H
         BE    PPRT1          NO LABEL LEFT FROM SYSUT2            UL0H
         A     R2,EIGHTY           REG2 PT TO NEXT LABEL TO BE COMPUL0H
         A     R3,EIGHTY           REG3 PT TP NEXT LABEL TO BE COMPUL0H
         B     ATCOMP         GO COMPARE THEM                      UL0H
*                                                                  UL0H
*        SYSUT1 HAS NO LABEL LEFT TO BE COMPARED                   UL0H
END1     C     R5,CTR2        ANY LABEL LEFT FROM SYSUT2           UL0H
         BE    END            NO LABEL LEFT FROM SYSUT2            UL0H
PPRT2    TM    LBSW,X'01'     IN TRAILER LABEL COMPARING           UL0H
         BO    ET2            YES,BRANCH                           UL0H
         LA    R1,32          NO,EXTRA INPUT HEADER LABEL ON SYSUT2UL0H
         B     PRINT2         BRANCH                               UL0H
ET2      LA    R1,34          EXTRA INPUT TRAILER LABEL ON SYSUT2  UL0H
PRINT2   L     R15,PRINCONS                                        UL0H
         BALR  R14,R15        PRINT MSG                            UL0H
         CLI   HICONCOD+1,X'08'         ALREADY RETURN CODE OF 8 A44317
         BH    PRT2                     RETURN CODE MORE THAN 8  A44317
         MVI   HICONCOD+1,X'08'         SET RETURN CODE TO 8     A44317
PRT2     A     R3,EIGHTY      REG3 PT TO THE EXTRA LABEL ON SYSUT2 UL0H
         LR    R1,R3                                               UL0H
         LA    R0,79                                               UL0H
         L     R15,MYPRTCON   GO TO ZZPR TO PRINT THE EXTRA LABEL  UL0H
         BALR  R14,R15             PRINT                           UL0H
         LA    R5,1(R5)       BUMP CTR OF LABELS PROCESSED         UL0H
         C     R5,CTR2        ANY LABEL LEFT FROM SYSUT2           UL0H
         BL    PRT2           YES, GO PRINT THEM                   UL0H
         B     CKTERM         BRANCH                               UL0H
*                                                                  UL0H
*        SYSUT2 HAS NO LABELS LEFT TO BE COMPARED                  UL0H
PPRT1    TM    LBSW,X'01'     IN TRAILER LABEL COMPARISON          UL0H
         BO    ET1            YES,BRANCH                           UL0H
         LA    R1,31          EXTRA INPUT HEADER LAB ON SYSUT1 MSG UL0H
         B     PRINT1         BRANCH                               UL0H
ET1      LA    R1,33          EXTRA INPUS TRAILER LAB ON SYSUT1 MSGUL0H
PRINT1   L     R15,PRINCONS                                        UL0H
         BALR  R14,R15        BRANCH                               UL0H
         CLI   HICONCOD+1,X'08'    IS HIGHEST RET. CODE EQ 8     A44317
         BH    PRT1           BRANCH IF HIGHER THAN 8              UL0H
         MVI   HICONCOD+1,X'08'                                    UL0H
PRT1     A     R2,EIGHTY      REG2 PT TO THE EXTRA LABEL ON SYSUT1 UL0H
         LR    R1,R2                                               UL0H
         LA    R0,79                                               UL0H
         L     R15,MYPRTCON   GO TO ZZPR TO PRINT THE EXTRA LABEL  UL0H
         BALR  R14,R15        BRANCH                               UL0H
         LA    R5,1(R5)       BUMP CTR OF LABELS PROCESSED         UL0H
         C     R5,CTR1        ANY LABEL LEFT FROM SYSUT1           UL0H
         BL    PRT1           YES, GO PRINT THEM                   UL0H
         B     CKTERM         BRANCH                               UL0H
*
UNEQLAB  TM    LBSW,X'01'     IN TRAILER LABEL COMPARISON          UL0H
         BO    TUNEQ          YES, BRANCH                          UL0H
         LA    R1,41          CORRESP. INHD LABEL UNEQUAL MSG      UL0H
         B     PT             BRANCH                               UL0H
TUNEQ    LA    R1,42          CORRESP. INTL LABEL UNEQUAL MSG      UL0H
PT       L     R15,PRINCONS                                        UL0H
         BALR  R14,R15             PRINT                           UL0H
         CLI   HICONCOD+1,X'08'    IS HIGHEST RET. CODE EQ 8       UL0H
         BH    PRTLAB              BRANH IF HIGHER                 UL0H
         MVI   HICONCOD+1,X'08'                                    UL0H
PRTLAB   LR    R1,R2               PRINT UNEQUAL LABEL FROM SYSUT1 UL0H
         LA    R0,79                                               UL0H
         L     R15,MYPRTCON                                        UL0H
         BALR  R14,R15             PRINT                           UL0H
         LR    R1,R3          PRINT UNEQ LABEL FROM SYSUT2         UL0H
         LA    R0,79                                               UL0H
         L     R15,MYPRTCON                                        UL0H
         BALR  R14,R15             PRINT                           UL0H
         BR    R4             GO BACK TO COMPARE MORE LABELS       UL0H
*
END      LA    R6,LABMSG                                           UL0H
MYPRT    MVC   MYPRTARE(120),BLANKS                                UL0H
         CVD   R5,CONVTDEC                                         UL0H
         UNPK  PTAREA(8),CONVTDEC(8)                               UL0H
         OI    PTAREA+7,X'F0'                                      UL0H
         MVC   LABMSG+8(1),PTAREA+7                                UL0H
         MVC   MYPRTARE(72),LABMSG                                 UL0H
         LA    R0,119                                              UL0H
         LA    R1,MYPRTARE             OUTPUT # OF LABELS          UL0H
         L     R15,MYPRTCON                 COMPARED MSG           UL0H
         BALR  R14,R15             PRINT                           UL0H
         B     CKTERM         BRANCH                               UL0H
*
*        SYSUT1 CONTAINS NO INPUT LABELS
NOLAB1   TM    NOLB,X'02'     IS THERE ANY USER LABEL ON SYSUT2    UL0H
         BO    NOLAB          BRANCH                               UL0H
         TM    LBSW,X'01'     IN TRAILER LABEL COMPARISON          UL0H
         BO    NOT1           BRANCH                               UL0H
         LA    R1,35          SYSUT1 HAS NO INPUT HD LABEL MSG     UL0H
         B     PT1            BRANCH                               UL0H
NOT1     LA    R1,38          SYSUT1 HAS NO INPUT TL LABEL MSG     UL0H
PT1      L     R15,PRINCONS                                        UL0H
         BALR  R14,R15             PRINT                           UL0H
         SR    R5,R5          CLEAR REG5                           UL0H
         L     R3,SAREA2      REG3 CONT. ADDR OF SYSUT2 LAB SAVAREAUL0H
         S     R3,EIGHTY                                           UL0H
         B     PPRT2          GO PRINT THE LABELS ON SYSUT2        UL0H
*                                                                  UL0H
*        SYSUT2 CONTAINS NO INPUT LABELS                           UL0H
NOLAB2   TM    LBSW,X'01'     IN TRAILER LABEL COMPARISON          UL0H
         BO    NOT2           YES, BRANCH                          UL0H
         LA    R1,36          SYSUT2 HAS NO INPUT HD LABEL MSG     UL0H
         B     PT2            BRANCH                               UL0H
NOT2     LA    R1,39          SYSUT2 HAS NO INPUT TL LABEL MSG     UL0H
PT2      L     R15,PRINCONS                                        UL0H
         BALR  R14,R15             PRINT                           UL0H
         SR    R5,R5          CLEAR REG5                           UL0H
         L     R2,SAREA1      REG2 HAS ADDR. OF SYSUT1 LABEL SAVAREUL0H
         S     R2,EIGHTY                                           UL0H
         B     PPRT1          BRANCH                               UL0H
*                                                                  UL0H
NOLAB    TM    LBSW,X'01'     IN TRAILER LABEL COMPARISON          UL0H
         BO    NOTL           YES, BRANCH                          UL0H
         LA    R1,37          NO USER INHD LABEL ON BOTH DATA SETS UL0H
         B     PTL            BRANCH                               UL0H
NOTL     LA    R1,40          NO USER INTL LABEL ON BOTH DATA SETS UL0H
PTL      L     R15,PRINCONS                                        UL0H
         BALR  R14,R15             PRINT                           UL0H
         CLI   HICONCOD+1,X'08'    IS HIGHEST RET. CODE EQ 8       UL0H
         BH    CKTERM         BRANCH IF HIGHER                     UL0H
         MVI   HICONCOD+1,X'08'                                    UL0H
CKTERM   TM    TERMSW,X'01'   USER LABEL PROC. RTN REQUESTED TERM. UL0H
         BO    USREQTE1       YES, BRANCH                          UL0H
         TM    LBSW,X'01'     IN TRAILER LABEL COMPARISON          UL0H
         BO    GOBACK1        YES                                  UL0H
         TM    LABEL,X'10'    IS DATA=ONLY                         UL0H
         BZ    GOBACK1        NO, BRANCH                           UL0H
         LA    R1,49          NO RECORDS COMPARED,DATA=ONLY MSG    UL0H
         L     R15,PRINCONS                                        UL0H
         BALR  R14,R15             PRINT                           UL0H
         B     NORMEND        BRANCH                               UL0H
GOBACK1  L     R9,SAVE9       RETURN                               UL0H
         BR    R9                  BRANCH                          UL0H
USREQTE1 MVI   HICONCOD+1,X'16'   RET CODE=16 ON USER REQUEST    A44317
         B     USREQTER       BRANCH                               UL0H
USREQTE2 LA    R15,16                                              UL0H
         STC   R15,HICONCOD                                        UL0H
         LA    R1,57          TERM AFTER USER VOL-SWITCH LAB PROC  UL0H
         L     R15,PRINCONS                                        UL0H
         BALR  R14,R15             BRANCH                          UL0H
         B     NORMEND        BRANCH                               UL0H
***********************************************************************
*        THIS SECTION OF CODE WILL CHECK FOR THE PRESENCE OF VS RECORD*
*        IN BOTH INPUT DATA SETS. THEN DECIDE WHETHER BSAM OR QSAM MOV*
*        MODE SHOULD BE USED FOR VS RECORD PROCESSING. IF NO VS RECORD*
*        IN EITHER INPUT DATA SETS, BSAM WILL BE USED TO PROCESS BOTH *
*        INPUT DATA SETS.                                             *
***********************************************************************
CKVRE    MVI   NOEXTSW,X'00'  TURN OFF NO MORE EXIT TO USER LAB SW VS0H
         MVI   NOLB,X'00'                                          UL0H
SDSOBEG  CLC   KEYLTH(1),DCBKL2    COMPARE KEY LENGTHS             VS0H
         BNE   ERRKEY                                              VS0H
         TM    KEYLTH,255                                          VS0H
         BZ    CKVRE1         NO, BRANCH                           VS0H
         MVI   KSWT,1              SET KEY PRESENT SW ON           VS0H
CKVRE1   TM    CCADSORG,1     ARE DATA SETS PARTITIONED            VS0H
         BO    FMTEST         YES, BRANCH                          VS0H
VSFM1    TM    RECFM1,X'48'        IS RECFM OF SYSUT1 VS           VS0H
         BO    VSFM2               YES,BRANCH                      VS0H
         TM    RECFM1,X'80'        IS RECFM OF SYSUT1 V         OY01190
         BNO   V1                  YES,BRANCH                   OY01190
         TM    RECFM2,X'48'        IS RECFM OF SYSUT2 VS           VS0H
         BO    ERRFMT2             YES, RECFM DIFFERENT MSG     OY01190
         B     FORMTEST            NO,BRANCH                       VS0H
*        SYSUT1 RECFM IS VS
VSFM2    TM    RECFM2,X'48'        IS RECFM OF SYSUT2 VS           VS0H
         BO    BOTHVS              YES,BRANCH                      VS0H
         TM    RECFM2,X'80'        IS RECFM OF SYSUT2 V         OY01190
         BNO   VSV2                YES,BRANCH                   OY01190
         B     ERRFMT2             NO, RECFM DIFFERENT MSG      OY01190
*        SYSUT1 RECFM IS V
V1       TM    RECFM2,X'48'        IS RECFM OF SYSUT2 VS           VS0H
         BO    VSV1                YES,BRANCH                      VS0H
         B     FORMTEST       NO                                   VS0H
*        RECFM OF BOTH DATA SETS ARE VS                               *
BOTHVS   TM    KSWT,X'01'     ARE KEY PRESENT                      VS0H
         BO    INITBSAM       YES, BRANCH                          VS0H
         TM    RECLTH,X'80'   IS SYSUT1 LRECL GREATER THAN 32K     VS0H
         BO    NITBSAM                  YES, CHECK IF SYSUT2 ALSO  VS0H
         TM    RECLH2,X'80'   IS SYSUT2 LRECL GREATER THAN 32K     VS0H
         BO    ERRMLTH             YES, INCOMPATABLE DATA SETS     VS0H
         B     INITQSAM       BRANCH                               VS0H
*        RECFM OF ONE INPUT DATA SET IS VS AND RECFM OF THE OTHER DATA*
*        SET IS V                                                     *
VSV1     TM    RECLH2,X'80'   IS SYSUT2 LRECL GREATER THAN 32K     VS0H
         BZ    VSV            NO                                   VS0H
         BO    ERRMLTH        YES, BRANCH                          VS0H
VSV2     TM    RECLTH,X'80'   IS SYSUT1 LRECL GREATER THAN 32K     VS0H
         BO    ERRMLTH        YES, BRANCH                          VS0H
VSV      TM    KSWT,X'01'     KEY PRESENT SW ON                    VS0H
         BO    KEYVSV         YES, BRANCH                          VS0H
         B     INITQSAM       BRANCH                               VS0H
NITBSAM  TM    RECLH2,X'80'         SYSUT2 ALSO GREATER THAN 32K   VS0H
         BO    INITBSAM                 IF SO THAN PROCEED         VS0H
ERRMLTH  LA    R1,51         ONE DATA SET CONTAINS LOGICAL RECORDS VS0H
         B     ABNOTERM       BRANCH                               VS0H
KEYVSV   LA    R1,52          KEYED DATA SETS, ONE CONTAINS VS     VS0H
         B     ABNOTERM       BRANCH                               VS0H
POVS     LA    R1,56               PARTITION ORG. DATA SETS        VS0H
         B     ABNOTERM       BRANCH                               VS0H
INITQSAM CLOSE (DASET1,REREAD,DASET2,REREAD)                       UL0H
         L     R15,ADQSAM                                          UL0H
         BR    R15                 GO TO IEBCQSAM                  UL0H
INITBSAM MVI   VSSWT,X'01'    SET BSAM PROC VS RECORD SW ON        VS0H
         LA    R1,53          RECORD COMPARED AT PHYS BLK LEVEL    VS0H
         L     R15,PRINCONS                                        VS0H
         BALR  R14,R15             PRINT                           VS0H
         B     GETCORE        BRANCH                               VS0H
FMTEST   TM    RECFM1,X'48'        IS RECFM OF SYSUT1 VS           VS0H
         BO    POVS                YES, BRANCH                     VS0H
         TM    RECFM2,X'48'        IS RECFM OF SYSUT2 VS           VS0H
         BO    POVS                YES, BRANCH                     VS0H
FORMTEST TM    RECFM1,X'C0'
         BO    FMTUNKWN
         TM    RECFM1,128
         BO    FMTFIXED
         TM    RECFM1,64
         BO    FMTVAR
         B     ERRFMT
FMTFIXED TM    RECFM2,128
         BZ    ERRFMT2                                             SA0I
         MVI   FSWT,1
         CLC   RECLTH(2),LORECO    IS RECORD LENGTH = ZERO
         BNE   RECLTHCR
         MVC   RECLTH(2),MAXBLLH1+2  SET RECORD LENGTH = BLOCKSIZE
         MVC   RECLH2(2),RECLTH
RECLTHCR CLC   RECLTH(2),RECLH2    ARE RECORD LENGTHS EQUAL
         BNE   ERRMELEN
         B     GETCORE
FMTVAR   TM    RECFM2,64
         BZ    ERRFMT2
         MVI   VSWT,1
         B     GETCORE
FMTUNKWN TM    RECFM2,X'C0'
         BC    14,ERRFMT2                                          SA0I
* COORDINATION COMPLETED AND SWITCHES SET.
GETCORE  L     0,MAXBLLH1          OBTAIN BUFFER FOR DATA SET 1 RECORDS
         L     1,KEYLTH
         SRL   1,24
         ST    1,KEYLTH
         A     0,KEYLTH
         ST    R0,LBUFF1      SAVE LENGTH OF GET STORAGE           VS0H
         MVC   DCBKL2+3(1),DCBKL2  MOVE KEY LENGTH FOR SYSUT2 TO LOW
*                                    ORDER BYTE
         NI    DCBKL2,X'00'        SET HIGH ORDER BYTE OF KEY FIELD =0
         GETMAIN R,LV=(0)
         ST    1,BUFF1             STORE ADDRESS OF BUFFER AREA
         L     0,MAXBLLH2          OBTAIN BUFFER FOR DATA SET 2 RECORDS
         A     0,KEYLTH
         ST    R0,LBUFF2      SAVE LENGTH OF GET STORAGE           VS0H
         GETMAIN R,LV=(0)
         ST    1,BUFF2
TESTBUF1 TM    BUFSW1,1            IS BUFFER 1 EMPTY.
         BZ    TESTBUF2              NO
         TM    CCADSORG,1
         BZ    READSET1
         TM    ONETIME,1           SWITCH IS SET
         BO    READSET1              AFTER THE
         MVI   ONETIME,1               FIRST TIME THROUGH
GETMEMB  TM    ENDMEMBS,1          ARE THERE ANY MEMBER NAMES LEFT.
         BO    NORMEND               NO
         XC    PHRECO1(4),PHRECO1  SET PHYSICAL RECORD COUNTERS
         XC    PHRECO2(4),PHRECO2    EQUAL TO ZERO
         XC    ERRCO(2),ERRCO     ZERO ERROR COUNTER
         MVI   EOD1SW,0            SET EOD SWITCHES
         MVI   EOD2SW,0              EQUAL TO ZERO
         MVI   BUFSW1,1            SET SWITCHES TO READ
         MVI   BUFSW2,1              BOTH DATA SETS
         L     3,NOTNREAD
         L     9,TNSET
         AR    9,3                 PLACE NEXT MEMBER NAME
         MVC   FINDAREA(8),0(9)      IN FINDAREA.
         AH    3,EIGHT
         ST    3,NOTNREAD
         C     3,TNTABLEL          HAS LAST MEMBER BEEN PICKED UP.
         BNE   FINDBPAM              NO.
         MVI   ENDMEMBS,1
FINDBPAM LA    13,SAVEREGS
         FIND  DASET1,FINDAREA,D
         LTR   15,15               TEST RETURN FROM FIND MACRO
         BNE   ERRMRET2            BRANCH                        A26556
         FIND  DASET2,FINDAREA,D
         LTR   15,15               TEST RETURN FROM FIND MACRO
         BNE   ERRMRET2
READSET1 L     8,BUFF1
         MVC   LOREPP1(2),ONE      SET LOGICAL RECORD/BLOCK COUNTER=1
         READ  DECB1A,SF,DASET1,(8),'S'
         CHECK DECB1A
         TM    TERMSW,X'01'   DID USER INHDR/INTLR REQUEST TERM.   UL0H
         BO    USREQTE2       BRANCH                               VS0H
         TM    CCADSORG,1          IS DATA SET 1 PARTITIONED.
         BZ    NOSCAN                NO
         SR    8,8
         C     8,TTRTABLL          ARE NOTE LISTS PRESENT
         BE    NOSCAN                NO
         TM    TABLE1SW,1          IS DATA SET 1 THE SUBSET
         BZ    NOSCAN                NO
         NOTE  DASET1
SCANNL1  L     7,TTRSET1
         AR    7,8
         C     1,0(7)              IS TTR OF RECORD READ IN NOTE LIST
         BE    SKIPPAM2              TABLE. YES
         AH    8,FOUR
         C     8,TTRTABLL          HAS ENTIRE TABLE BEEN SCANNED.
         BE    NOSCAN                YES
         B     SCANNL1               NO
SKIPPAM2 L     8,BUFF2
         READ  DECB2A,SF,DASET2,(8),'S',MF=E
         CHECK DECB2A
         B     READSET1
NOSCAN   MVI   BUFSW1,0
         OI    BUFSW1,X'10'       SET JUST READ SYSUT1 SWITCH ON
         L     7,PHRECO1           INCREMENT PHYSICAL RECORD
         AH    7,ONE                 COUNTER FOR DATA
         ST    7,PHRECO1               SET 1
         TM    KSWT,1              ARE KEYS PRESENT.
         BO    TESTBUF2              YES
         TM    VSSWT,X'01'    IS RECFM VS TYPE                     VS0H
         BO    TESTBUF2       YES, BRANCH                          VS0H
         TM    VSWT,1              ARE RECORDS V-TYPE.
         BZ    FORUTYPE              NO
         LH    4,FOUR              INITIALIZE REG. 4 FOR V-TYPE RECORDS
         L     7,BUFF1
         MVC   BLKLTH1(2),0(7)     PLACE BLOCK LENGTH 1N BLKLTH1.
         AR    7,4
         MVC   RECLTH(2),0(R7)     GET LITTLE LL                 A26556
         LH    R5,RECLTH           STORE LITTLE LL IN REG5       A26556
         B     TESTBUF2
FORUTYPE SR    4,4                 INITIALIZE REG. 4 FOR F OR U-TYPE
         L     8,MAXBLLH1          OBTAIN NUMBER
         L     9,DECB1A+16           OF BYTES READ
         LH    9,14(9)                 AND
         SR    8,9                       STORE
         STH   8,BLKLTH1                   IN BLKLTH1
         TM    FSWT,1              ARE RECORDS F-TYPE.
         BO    FTYPE                 YES
         STH   8,RECLTH              NO -STORE LENGTH OF U-TYPE RECORD.
FTYPE    LH    5,RECLTH
TESTBUF2 TM    BUFSW2,1            DOES BUFFER 2 NEED MORE RECORDS.
         BO    READ2                 YES
ACTUCOMP TM    VSWT,X'01'         ARE THESE V-TYPE RECORDS
         BZ    ACT2COMP              NO BRANCH
         BAL   R3,SPORTL           GO CHECK FOR VALID RECORD LEN A26556
ACT2COMP BAL   3,COMPAR           BRANCH TO COMPARE SUBROUTINE
RETFRCOM L     3,LORECO            INCREMENT TOTAL LOGICAL
         AH    3,ONE                 RECORD
         ST    3,LORECO                COUNTER
         LH    3,LOREPP1           INCREMENT
         AH    3,ONE                 LOGICAL
         STH   3,LOREPP1               RECORD
         LH    3,LOREPP2                 PER
         AH    3,ONE                       BLOCK
         STH   3,LOREPP2                     COUNTERS
         AH    4,RECLTH            INCREMENT REGISTER 4.
         CH    4,BLKLTH1           ARE MORE RECORDS NEEDED FOR SET 1.
         BL    BUF2SET               NO
         MVI   BUFSW1,1              YES - RESET BUFSW1
BUF2SET  AH    6,RECLH2           UP RELATIVE POINTER IN BUFF2
*    INSTRUCTIONS TO OBTAIN NEW RECORD LENGTH, IF NECESSARY.
         TM    VSWT,1
         BZ    NEWRLSET
         TM    BUFSW1,1
         BO    NEWRLSET
         L     7,BUFF1
         AR    7,4
         MVC   RECLTH(2),0(7)
* NEW RECORD LENGTH OBTAINED
NEWRLSET LH    5,RECLTH
         CH    6,BLKLTH2
         BL    ARO
         MVI   BUFSW2,1
         B     TESTBUF1
ARO      TM    VSWT,1             IS THIS V-TYPE RECORD
         BO    VAG                  YES BRANCH
         B     TESTBUF1           GO GET ANOTHER RECORD
VAG      L     7,BUFF2            BUFF2 IS NOT EMPTY, THUS UP RELATIVE
         AR    7,6                 POINTER TO NEXT V-TYPE RECORD
         MVC   RECLH2(2),0(7)
         B     TESTBUF1           GO GET ANOTHER RECORD
SPORTB   CLC   BLKLTH1(2),EIGHT    IS BLKLTH1 NO HIGHER THAN 8   A26556
         BNH   INPERR              YES, BRANCH                   A26556
         CLC   BLKLTH1(2),MAXLL    IS BLKLTH1 GREATER THAN 32760 A26556
         BH    INPERR              YES, BRANCH                   A26556
         CLC   BLKLTH2(2),EIGHT    IS BLKLTH2 NO HIGHER THAN 8   A26556
         BNH   INPERR              YES, BRANCH                   A26556
         CLC   BLKLTH2(2),MAXLL    IS BLKLTH2 GREATER THAN 32760 A26556
         BH    INPERR              YES, BRANCH                   A26556
SPORTL   CLC   RECLTH(2),FOUR     IS LITTLE LL NO HIGHER THAN 4  A26556
         BNH   ERRMRET1            YES, BRANCH                   A26556
         CLC   RECLTH(2),MAXLLL   IS RECLTH GREATER THAN 32756   A26556
         BH    ERRMRET1            YES, BRANCH                   A26556
         CLC   RECLH2(2),FOUR     IS LITTLE LL NO HIGHER THAN 4  A26556
         BNH   ERRMRET1            YES, BRANCH                   A26556
         CLC   RECLH2(2),MAXLLL    IS RECLH2 GREATER THAN 32756  A26556
         BH    ERRMRET1            YES, BRANCH                   A26556
         BR    R3                  BRANCH BACK                   A26556
READ2    L     8,BUFF2
         MVC   LOREPP2(2),ONE      SET LOGICAL RECORD/BLOCK COUNTER=1
         LA    13,SAVEREGS
         READ  DECB2A,SF,DASET2,(8),'S'
         CHECK DECB2A
         TM    TERMSW,X'01'   DID USER INHDR/INTLR REQUEST TERM.   UL0H
         BO    USREQTE2       BRANCH                               VS0H
         TM    CCADSORG,1
         BZ    NOSCAN2
         SR    8,8
         C     8,TTRTABLL
         BE    NOSCAN2
         TM    TABLE2SW,1
         BZ    NOSCAN2
         NOTE  DASET2
SCANNL2  L     7,TTRSET2
         AR    7,8
         C     1,0(7)
         BE    SKIPPAM1
         AH    8,FOUR
         C     8,TTRTABLL
         BE    NOSCAN2
         B     SCANNL2
SKIPPAM1 L     8,BUFF1
         READ  DECB1A,SF,DASET1,(8),'S',MF=E
         CHECK DECB1A
         B     READ2
NOSCAN2  MVI   BUFSW2,0
         L     7,PHRECO2           INCREMENT PHYSICAL RECORD
         AH    7,ONE                 COUNTER FOR DATA
         ST    7,PHRECO2               SET 2
         TM    KSWT,1              ARE KEYS PRESENT.
         BO    KEYROU                YES -GO TO KEYROU
         TM    VSSWT,X'01'    IS RECFM VS TYPE                     VS0H
         BO    VSCOMP         YES, GO TO COMPR VS TYPE RECORDS     VS0H
         TM    VSWT,1
         BZ    FORUTYP2
         LH    6,FOUR              INITIALIZE REG. 6 FOR V-TYPE RECORDS
         L     7,BUFF2
         MVC   BLKLTH2(2),0(7)
         AR    7,6                UP POINTER TO LOGICAL RECORD
         MVC   RECLH2(2),0(7)     MOVE LOGICAL RECORD LENGTH
         B     ACTUCOMP
FORUTYP2 SR    6,6                 INITIALIZE REG. 6 FOR F OR U-TYPE
         L     8,MAXBLLH2
         L     9,DECB2A+16
         LH    9,14(9)
         SR    8,9
         STH   8,BLKLTH2
         TM    FSWT,1              IS FORMAT FIXED
         BO    STOREC2
         STH   8,RECLH2           STORE LOGICAL RECORD LTH OF U-TYPE
         B     ACTUCOMP           GO COMPARE RECORDS
*    ROUTINE WHEN KEYS ARE PRESENT
KEYROU   L     5,KEYLTH
         SR    4,4                 INITIALIZE REGISTERS
         SR    6,6                   4 AND 6
         MVI   KEYCOMSW,1
         BAL   3,COMPAR            COMPARE KEYS
         MVI   KEYCOMSW,0
         A     4,KEYLTH
         A     6,KEYLTH
         TM    VSSWT,X'01'    IS RECFM VS TYPE                     VS0H
         BO    VSCOMPK        YES, GO TO COMPR VS TYPE RECORDS     VS0H
         TM    VSWT,1              ARE RECORDS V-TYPE.
         BZ    OTHTYPE               NO
         L     7,BUFF1
         AR    7,4
         MVC   BLKLTH1(2),0(R7)    GET BIG LL IN BLKLTH1         A26556
         L     15,BUFF2           LOAD BUFF2 ADDR
         AR    15,6               UP POINTER TO PHYSICAL RECORD
         MVC   BLKLTH2(2),0(R15)   GET BIG LL IN BLKLTH2         A26556
         MVC   RECLTH(2),4(R7)                                   A26556
         MVC   RECLH2(2),4(R15)                                  A26556
         BAL   R3,SPORTB           GO CHECK FOR VALID BLOCK AND  A26556
*                                  RECORD SIZE                   A26556
         LH    R14,BLKLTH1         GET BLOCK SIZE 1              A26556
         AR    R14,R4              ADD KEY LENGTH TO IT          A26556
         STH   R14,BLKLTH1         STORE ACTUAL SIZE OF BUFFER   A26556
*                                  IN BLKLTH1                    A26556
         AH    R4,FOUR             REG4 HAS PROPER DISPLACEMENT  A26556
*                                  TO NEXT RECORD IN BUFFER 1    A26556
         LH    R14,BLKLTH2         GET BLOCK SIZE 2              A26556
         AR    R14,R6              ADD KEY LENGTH TO IT          A26556
         STH   R14,BLKLTH2         STORE ACTUAL SIZE OF BUFFER   A26556
*                                  IN BLKLTH2                    A26556
         AH    R6,FOUR             REG6 HAS PROPER DISPLACEMENT  A26556
*                                  TO NEXT RECORD IN BUFFER 2    A26556
KEYROU2  BAL   3,COMPAR            GO COMPARE RECORDS
         L     3,LORECO            INCREMENT TOTAL LOGICAL
         AH    3,ONE                 RECORD
         ST    3,LORECO                COUNTER
         LH    3,LOREPP1           INCREMENT
         AH    3,ONE                 LOGICAL
         STH   3,LOREPP1               RECORD
         LH    3,LOREPP2                 PER
         AH    3,ONE                       BLOCK
         STH   3,LOREPP2                     COUNTERS
         AH    4,RECLTH
         AH    6,RECLTH
         CH    4,BLKLTH1           IS ANOTHER PHYSICAL RECORD NEEDED.
         BNL   SETBUFSW              YES
         TM    VSWT,1              ARE RECORDS V-TYPE.
         BZ    MUSTBEF               NO -RECORDS MUST BE F-TYPE
         L     7,BUFF1
         AR    7,4
         MVC   RECLTH(2),0(7)
         L     R8,BUFF2            GET BUFF2 ADDRESS             A26556
         AR    R8,R6               ADD PROPER DISPLACEMENT TO IT A26556
         MVC   RECLH2(2),0(8)      GET LRECL 2                   A26556
         BAL   R3,SPORTL           GO CHECK FOR VALID RECORD LEN A26556
         B     KEYROU2                 BRANCH TO COMPAR         A37861
MUSTBEF  LH    5,RECLTH
         B     KEYROU2             BRANCH                        A26556
SETBUFSW MVI   BUFSW1,1
         MVI   BUFSW2,1
         B     TESTBUF1
OTHTYPE  L     8,MAXBLLH1          OBTAIN NUMBER
         L     9,DECB1A+16           OF
         LH    9,14(9)                 BYTES
         SR    8,9                       READ
         LR    9,8
         AR    8,4                 ADD KEY LENGTH
         STH   8,BLKLTH1               STORE IN BLOCK LENGTH
         ST    REG3,SAVEREG3      SAVE REG3                        9314
         L     OUTLEN,MAXBLLH2    DECB LENGTH INFO.                9314
         L     REG3,DECB2A+16     LENGTH OF READ                   9314
         LH    REG3,14(REG3)      POINT TO FIRST REC.              9314
         SR    OUTLEN,REG3        OBTAIN # OF                      9314
         LR    REG3,OUTLEN                    RECORDS READ         9314
         AR    OUTLEN,REG4        ADD KEYLENGTH                    9314
         STH   OUTLEN,BLKLTH2     STORE RECORD LENGTH              9314
         TM    FSWT,1                  ARE RECORDS F-TYPE
         BO    KEYFTYPE                  YES
         STH   9,RECLTH                  NO -NO. OF BYTES READ = RECLTH
         STH   REG3,RECLH2        STORE RECORD LENGTH              9314
         L     REG3,SAVEREG3      RESTORE REG3                     9314
         CLC   BLKLTH1(2),BLKLTH2 COMPARE LENGTH R1 TO R2          9314
         BNE   ERRCOMP            NOT EQUAL IS AN ERROR CONDITION  9314
KEYFTYPE LH    5,RECLTH
         B     KEYROU2             BRANCH                        A26556
VSCOMP   SR    R4,R4          CLEAR REG4                           VS0H
         SR    R6,R6          CLEAR REG6                           VS0H
VSCOMPK  SR    R3,R3          CLEAR REG3                           VS0H
         STH   R3,LOREPP1     SET LOG./PHYS.RCD CT FOR SYSUT1 TO 0 VS0H
         STH   R3,LOREPP2     SET LOG./PHYS.RCD CT FOR SYSUT2 TO 0 VS0H
         L     R7,BUFF1       GET ADDR. OF BUFFER 1                VS0H
         AR    R7,R4          GET REG7 POINTS TO BIG LL            VS0H
         LH    R5,0(R7)       REG5 CONTAIN BIG LL                  VS0H
         CH    R5,EIGHT       IS LL GREATER THAN 8                 VS0H
         BNH   INPERR         NO, PERMANENT INPUT ERROR            VS0H
         CH    R5,MAXLL       IS BIG LL GREATER THAN 32760         VS0H
         BH    INPERR         YES, PERMANENT INPUT ERROR           VS0H
         STH   R5,RECLTH      SET RCD LENGTH OF SYSUT1 EQ BIG LL   VS0H
         L     R8,BUFF2       GET ADDR. OF BUFFER 2                VS0H
         AR    R8,R6          GET REG8 POINTS TO BIG LL            VS0H
         LH    R3,0(R8)       REG3 CONTAIN BIG LL                  VS0H
         CH    R3,EIGHT       IS LL GREATER THAN 8                 VS0H
         BNH   INPERR         NO, PERMANENT ERROR                  VS0H
         CH    R3,MAXLL       IS LL GREATER THAN 32760             VS0H
         BH    INPERR         YES, PERMANENT ERROR                 VS0H
         STH   R3,RECLH2      SET RCD LENGTH OF SYSUT2 EQ BIG LL   VS0H
         BAL   R3,COMPAR      GO TO COMPARE 2 BLOCKS OF RECORD     VS0H
AGAIN    MVI   BUFSW1,X'01'   SET BUFFER 1 EMPTY SW ON             VS0H
         MVI   BUFSW2,X'01'   SET BUFFER 2 EMPTY SW ON             VS0H
         B     TESTBUF1       BRANCH                               VS0H
* COMPARE ROUTINE
COMPAR   STM   R2,R8,CSAVE    SAVE REG2-REG8                       VS0H
         L     R8,BUFF1       GET DS1 BUFFER ADDRESS               VS0H
         AR    8,4                       BE COMPARED IN REGS. 8 AND 9.
         L     R7,BUFF2                                            VS0H
         AR    R7,R6                                               VS0H
         NI    BUFSW1,1           SET SYSUT1 JUST READ SWITCH OFF
         TM    KEYCOMSW,1         ARE WE COMPARING KEYS
         BO    DOOVER               YES BRANCH
COMB     TM    VSSWT,X'03'    VS-TYPE RECORD                       VS0H
         BZ    NOTVS          NO, BRANCH                           VS0H
         LH    R5,0(R8)       YES, GET LL FIELD OF DS1 RECORD      VS0H
         LH    R3,0(R7)            GET LL FIELD OF DS2 RECORD      VS0H
         B     PREC           BRANCH                               VS0H
NOTVS    CLC   RECLTH(2),RECLH2        ARE RECORD LENGTHS EQUAL A37861
         BNE   ERRL                    NO BRANCH                A37861
         LH    R5,RECLTH               GET RECORD LENGTH IN R5  A37861
         LR    R3,R5                   AND RO                   A37861
PREC     TM    PRECOMSW,1     IS THERE AN USER PRECOMP ROUTINE     VS0H
         BZ    COML           NO, BRANCH                           VS0H
         LINK  EPLOC=PARATBLZ,PARAM=((8),(5),(7),(3))              VS0H
         CH    15,EIGHT
         BNH   NOTECOCD
USREQTER LA    R1,25          USER REQ. TERMINATION              A44317
         L     R15,PRINCONS                                        UV0H
         BALR  R14,R15             PRINT                           UV0H
         B     NORMEND
NOTECOCD CH    15,HICONCOD
         BL    CKVS           BRANCH IF LOW                        VS0H
         STH   15,HICONCOD
CKVS     TM    VSSWT,X'03'    VS-TYPE RECORDS                      VS0H
         BM    CKL            YES, BRANCH                          VS0H
         B     DOOVER         NO                                   VS0H
CKL      LH    R5,0(R8)       GET LL FIELD OF DS1 RECORD           VS0H
         LH    R3,0(R7)       GET LL FIELD OF DS2 RECORD           VS0H
COML     CR    R5,R3          ARE LL JIELD EQ                      VS0H
         BNE   ERRL           NO, BRANCH                           VS0H
DOOVER   C     5,TWOFS             IS RECLTH GREATER THAN 256 BYTES.
         BH    COMP1                 YES
         SH    5,ONE                 NO -PLACE NO. OF BYTES TO BE
         STC   5,COMP2+1             COMPARED IN COMPARE INSTRUCTION.
COMP2    CLC   0(1,R8),0(R7)       ARE RECORDS EQUAL               VS0H
         BNE   ERRCOMP               NO
         TM    KEYCOMSW,1
         BO    REST                SET KEY ERROR COUNT BACK TO ZERO
         SR    8,8
         STH   8,ERRCO
ENDCOMP  LM    R2,R8,CSAVE                                         VS0H
         B     0(R3)               BRANCH                          VS0H
COMP1    CLC   0(256,R8),0(R7)     COMPARE 256 BYTES               VS0H
         BNE   ERRCOMP               NOT EQUAL
         S     5,TWOFS             SUBTRACT 256 FROM RECORD LENGTH
         A     8,TWOFS             ADD 256 TO ADDRESSES
         A     R7,TWOFS            IN REG 8 AND 7                  VS0H
         B     DOOVER
REST     MVI   KEYERCT+1,X'00'     SET KEY ERROR COUNT BACK TO ZERO
         B     ENDCOMP        BRANCH                               VS0H
         USING IHADCB,SYMREG1
         DCBD  DSORG=PS
DDNAMDCB EQU   DCBDDNAM-IHADCB
DEVTDCB  EQU   DCBDEVT-IHADCB
KEYLEDCB EQU   DCBKEYLE-IHADCB
LRECLDCB EQU   DCBLRECL-IHADCB
MAIN     CSECT
**                                                                   **
**   EXIT TAKEN WHEN PERMANENT INPUT ERROR OCCURRED ON SYSUT1 OR     **
**   SYSUT2 DATA SETS                                                **
SYNADEX  SYNADAF    ACSMETH=BSAM   GET I/O ERROR STATUS          A27718
         MVC   MYPRTARE(120),BLANKS  CLEAR OUTPUT BUFFER         A27718
         MVC   MYPRTARE(18),IOERR  MOVE MSG. NO. INTO OUTPUT BUF A27718
         MVC   MYPRTARE+19(79),49(R1) MOVE I/O ERROR STATUS INTO A27718
*                                    OUTPUT BUFFER               A27718
         LA    R0,119                NO. OF BYTES TO BE PRINTED  A27718
         LA    R1,MYPRTARE           ADDRESS OF OUTPUT BUFFER    A27718
         L     R15,MYPRTCON          GET ADDR. OF PRINT ROUTINE  A27718
         BALR  R14,R15               GO TO PRINT MSG             A27718
         SYNADRLS                  RELEASE AREAS GOT BY SYNADAF  A27718
         B     ABNOTER1              GO TO ERROR TERMINATION     A48817
*  EXIT TAKEN DURING OPEN.  CRITICAL PARAMETERS STORED.
DCBEXIT1 LA    SYMREG1,DASET1
         TM    CCADSORG,1
         BZ    ITISBSA1
         OI    DCBMACF1,X'04'                                  @YM04833
         TM    SWFORBP1,1
         BO    NOTFIRS1
         MVI   SWFORBP1,1
LLD1    NOP  LLD2
       MVC  KEYLTH(1),DCBKEYLE
LLD2   MVI  LLD1+1,X'F0'
         MVI   DCBKEYLE,X'00'
         L     8,TWOFS
         STH   8,DCBBLKSI
         MVI   DCBRECFM,X'88'
         RETURN
NOTFIRS1 MVI   DCBDSORG,X'02'
        MVC  DCBKEYLE(1),KEYLTH
ITISBSA1 CLC   DCBBLKSI(2),=X'0000'    BLKSIZE SPECIFIED ?       A41765
         BNE   TESTLRE1           YES, TEST LRECL                A41765
         MVC   DCBBLKSI(2),=X'0001'    NO, SET DEFAULT BLKSIZE=1 A41765
         MVC   DCBLRECL(2),=X'0001'    NO, SET DEFAULT LRECL=1   A41765
         OI    ERRDCB,X'80'       SET ERROR BIT                  A41765
TESTLRE1 TM    DCBRECFM,X'C0'     IS RECFM. UNDEF. OR NOT DEF. ? A41765
         BC    9,DCBUND1          YES, SET LRECL EQ BLKSIZE      A41765
         CLC   DCBLRECL(2),=X'0000'    LRECL SPECIFIED ?         A41765
         BNE   SAVBLKS1           YES, END OF ERROR CHECKING     A41765
         MVC   DCBLRECL(2),=X'0001'    NO, SET DEFAULT LRECL=1   A41765
         OI    ERRDCB,X'80'       SET ERROR BIT                  A41765
         B     SAVBLKS1       END OF ERROR CHECKING              A41765
DCBUND1  MVC   DCBLRECL(2),DCBBLKSI  MOVE BLKSI IN LRECL FIELD   A41765
         OI    DCBRECFM,X'C0'        SET RECFM TO U.             A41765
SAVBLKS1 MVC   MAXBLLH1+2(2),DCBBLKSI SAVE BLKSIZE PARAMETER     A41765
         MVC   RECFM1(1),DCBRECFM                                A41765
         RETURN
*  EXIT TAKEN DURING OPEN.  CRITICAL PARAMETERS STORED.
DCBEXIT2 LA    SYMREG1,DASET2
         TM    CCADSORG,1
         BZ    ITISBSA2
         OI    DCBMACF1,X'04'                                  @YM04833
         TM    SWFORBP2,1
         BO    NOTFIRS2
         MVI   SWFORBP2,1
         MVI   SWFORBP1,0
         MVC   DCBKL2(1),DCBKEYLE
         MVI   DCBKEYLE,X'00'
         L     8,TWOFS
         STH   8,DCBBLKSI
         MVI   DCBRECFM,X'88'
         RETURN
NOTFIRS2 MVI   DCBDSORG,X'02'
         MVC   DCBKEYLE(1),DCBKL2
ITISBSA2 CLC   DCBBLKSI(2),=X'0000'    BLKSIZE SPECIFIED ?       A41765
         BNE   TESTLRE2           YES, TEST LRECL                A41765
         MVC   DCBBLKSI(2),=X'0001'    NO, SET DEFAULT BLKSIZE=1 A41765
         MVC   DCBLRECL(2),=X'0001'    NO, SET DEFAULT LRECL=1   A41765
         OI    ERRDCB,X'80'       SET ERROR BIT                  A41765
TESTLRE2 TM    DCBRECFM,X'C0'     IS RECFM. UNDEF. OR NOT DEF. ? A41765
         BC    9,DCBUND2          YES, SET LRECL EQ BLKSIZE      A41765
         CLC   DCBLRECL(2),=X'0000'    LRECL SPECIFIED ?         A41765
         BNE   SAVBLKS2           YES, END OF ERROR CHECKING     A41765
         MVC   DCBLRECL(2),=X'0001'    NO, SET DEFAULT LRECL=1   A41765
         OI    ERRDCB,X'80'       SET ERROR BIT                  A41765
         B     SAVBLKS2       END OF ERROR CHECKING              A41765
DCBUND2  MVC   DCBLRECL(2),DCBBLKSI  MOVE BLKSI IN LRECL FIELD   A41765
         OI    DCBRECFM,X'C0'        SET RECFM TO U.             A41765
SAVBLKS2 MVC   MAXBLLH2+2(2),DCBBLKSI SAVE BLKSIZE PARAMETER     A41765
         MVC   RECFM2(1),DCBRECFM                                A41765
         RETURN
INHDEXT1 L     R2,ADULAB                                           UL0H
         MVI   LABSW,X'01'    SET LABSW TO IND. IN SYSUT1 HD PROC  UL0H
         B     0(R2)               GO TO IEBCULET                  UL0H
INHDEXT2 L     R2,ADULAB                                           UL0H
         MVI   LABSW,X'02'    SET LABSW TO IND. IN SYSUT2 HD PROC  UL0H
         B     0(R2)               GO TO IEBCULET                  UL0H
INTLEXT1 L     R2,ADULAB                                           UL0H
         MVI   LABSW,X'04'    SET LABSW TO IND. IN SYSUT1 TL PROC  UL0H
         B     0(R2)               GO TO IEBCULET                  UL0H
INTLEXT2 L     R2,ADULAB                                           UL0H
         MVI   LABSW,X'08'    SET LABSW TO IND. IN SYSUT2 TL PROC  UL0H
         B     0(R2)               GO TO IEBCULET                  UL0H
INEOD1   NI    DASET1+44,X'00'
         MVI   EOD1SW,1
         MVI   NOEXTSW,X'00'  RE-INIT NO EXIT TO LAB PROC. RTN SW  UL0H
         TM    EOD2SW,1
         BO    PICKNEX1
         TM    BUFSW2,1            DOES BUFF2 HAVE RECORDS LEFT
         BZ    PRTLOG2               YES BRANCH
READEXT2 SR    6,6                 ZERO REG6
         L     8,BUFF2             LOAD BUFF2 ADDRESS
         READ DECB2A,SF,DASET2,(8),'S',MF=E
         CHECK DECB2A
         TM    TERMSW,X'01'   DID USER INHDR/INTLR REQUEST TERM.   UL0H
         BO    USREQTE2       YES, BRANCH                          UL0H
         L     8,MAXBLLH2          LOAD MAXIMUM BLOCK SIZE
         LA    9,DASET2            GET DCB ADDRESS
         TM    DEVTDCB(9),X'20'    IS THIS A DIRECT ACCESS DEVICE
         BO    INKEYEX2              YES BRANCH
OFAG     L     9,DECB2A+16         GET IOB ADDRESS
         LH    9,14(9)             OBTAIN CSW RESIDUAL COUNT
         SR    8,9                 GET NO. OF BYTES READ IN REG8
         STH   8,BLKLTH2           STORE ACTUAL BLOCK LENGTH
PRTLOG2  MVI   HICONCOD+1,8        PLACE RETURN CODE
         LA    1,23                PRINT EXTRA RECORD MESSAGE
         L     15,PRINCONS         PRINT EXTRA RECORD MESSAGE
         BALR  14,15               PRINT EXTRA RECORD MESSAGE
         MVC   MYPRTARE(120),BLANKS    RIPPLE BLANKS IN PRINT AREA
         MVC   MYPRTARE+4(9),NAMEDDCN   MOVE "DDNAME = " CONSTANT
         MVC   MYPRTARE+13(8),NAMEDD2   MOVE ACTUAL DDNAME
         TM    CCADSORG,1               IS THIS A PDS
         BZ    GO1                        NO BRANCH
         MVC   MYPRTARE+23(14),MEMRNAME MOVE "MEMNAME = " CONSTANT
         MVC   MYPRTARE+37(8),FINDAREA  MOVE ACTUAL MEMBER NAME
GO1      LA    0,119                    PRINT LINE
         LA    1,MYPRTARE               PRINT LINE
         L     15,MYPRTCON              PRINT LINE
         BALR  14,15                    PRINT LINE
         LH    7,BLKLTH2                GET BLOCK SIZE
         SR    7,6                      SUBTRACT LOGICAL RECS USED
         MVC   INPUTLOC(4),BUFF2        PUT ADDR FOR BLPRT SUBROUTINE
         LR    5,6                      SET RELATIVE POINTER FOR SUBROU
         BAL   4,BLPRT                  SUBROU-CONVERT AND PRINT HEX
         B     READEXT2                 ANYMORE EXTRA RECORDS
INKEYEX2 SR    15,15               CLEAR REG15
         IC    15,DCBKL2+3         GET KEY LENGTH FOR DATA SET 2
         AR    8,15                ADD KEY LENGTH TO BLOCK SIZE
         B     OFAG
PICKNEX1 TM    CCADSORG,1
         BZ    BEFNREND       NO, BRANCH                           UL0H
         B     GETMEMB
INEOD2   NI    DASET2+44,X'00'
         MVI   EOD2SW,1
         MVI   NOEXTSW,X'00'  RE-INIT NO EXIT TO LAB PROC. RTN SW  UL0H
         TM    EOD1SW,1
         BO    PICKNEX2
         TM    BUFSW1,X'10'       TEST SYSUT1 JUST READ SWITCH
         BO    PRTLOG1            YES PRINT EXTRA RECORDS        A38747
         TM    BUFSW1,1            DOES BUFF1 HAVE RECORDS LEFT
         BZ    PRTLOG1               YES BRANCH
READEXT1 SR    4,4                 ZERO REG4
         L     8,BUFF1             GET BUFF1 ADDRESS
         READ  DECB1A,SF,DASET1,(8),'S',MF=E
         CHECK DECB1A
         TM    TERMSW,X'01'   DID USER INHDR/INTLR REQUEST TERM.   UL0H
         BO    USREQTE2       YES, BRANCH                          UL0H
         L     8,MAXBLLH1         LOAD MAXIMUM BLOCK SIZE
         LA    9,DASET1            LOAD DCB ADDRESS
         TM    DEVTDCB(9),X'20'    IS THIS A DIRECT ACCESS DEVICE
         BO    INKEYEX1              YES BRANCH
OFAGG    L     9,DECB1A+16         GET IOB ADDRESS
         LH    9,14(9)             OBTAIN CSW RESIDUAL COUNT
         SR    8,9                 GET NO. OF BYTES READ IN REG8
         STH   8,BLKLTH1           STORE ACTUAL BLOCK LENGTH
PRTLOG1  MVI   HICONCOD+1,8        PLACE RETURN CODE
         LA    1,24                PRINT EXTRA RECORD MESSAGE
         L     15,PRINCONS         PRINT EXTRA RECORD MESSAGE
         BALR  14,15               PRINT EXTRA RECORD MESSAGE
         MVC   MYPRTARE(120),BLANKS    RIPPLE BLANKS IN PRINT AREA
         MVC   MYPRTARE+4(9),NAMEDDCN   MOVE "DDNAME = " CONSTANT
         MVC   MYPRTARE+13(8),NAMEDD1   MOVE ACTUAL DDNAME
         TM    CCADSORG,1               IS THIS A PDS
         BZ    GO2                   NO BRANCH
         MVC   MYPRTARE+23(14),MEMRNAME  MOVE "MEMNAME = " CONSTANT
         MVC   MYPRTARE+37(8),FINDAREA   MOVE ACTUAL MEMBER NAME
GO2      LA    0,119                    PRINT LINE
         LA    1,MYPRTARE               PRINT LINE
         L     15,MYPRTCON              PRINT LINE
         BALR  14,15                    PRINT LINE
         LH    7,BLKLTH1                GET BLOCK SIZE
         SR    7,4                      SUBTRACT LOGICAL RECS USED
         MVC   INPUTLOC(4),BUFF1        PUT ADDR FOR BLPRT SUBROUTINE
         LR    5,4                      SET RELATIVE PTR FOR SUBROUTINE
         BAL   4,BLPRT             SUBROU-CONVERT AND PRINT HEX
         B     READEXT1            ANYMORE EXTRA RECORDS
INKEYEX1 L     15,KEYLTH           GET KEY LENGTH
         AR    8,15                ADD KEY LENGTH TO BLOCK SIZE
         B     OFAGG
PICKNEX2 TM    CCADSORG,1
         BZ    BEFNREND       NO, BRANCH                           UL0H
         B     GETMEMB
***********************************************************************
*        INITIALIZATION FOR USER INPUT TRAILER LABEL COMPARISON.      *
***********************************************************************
BEFNREND TM    UEXIT,X'01'    HAS OPEN TAKEN USER LAB EXITS        UL0H
         BZ    NORMEND        NO, BRANCH                           UL0H
         MVI   LBSW,X'01'     SET SW TO IND. WILL GO FOR INPUT TL  UL0H
*                             LABEL COMPARISON.
         MVC   CTR1(4),INTLCT1 SET CTR1 EQ NO. OF INPUT TRAILER LABUL0H
*                              PROCESSED FOR SYSUT1
         MVC   CTR2(4),INTLCT2 SET CTR2 EQ NO. OF INPUT TRAILER LABUL0H
*                              PROCESSED FOR SYSUT2
         MVC   SAREA1(4),INTL1 SAREA1 HAS ADDR. OF SYSUT1 INPUT TL UL0H
*                              LABEL SAVEAREA
         MVC   SAREA2(4),INTL2 SAREA2 HAS ADDR. OF SYSUT2 INPUT TL UL0H
*                              LABEL SAVEAREA
         MVC   LABMSG1+6(7),TL  INITIALIZE MESSAGE                 UL0H
         BAL   R9,LABPROC     BRANCH                               UL0H
         B     NORMEND        BRANCH                               UL0H
ABNOTERM L     R15,PRINCONS            LOAD PRINT MODULE         A48817
         BALR  R14,R15                PRINT MESSAGE              A48817
ABNOTER1 MVI   HICONCOD+1,12          SET COND. CODE             A48817
NORMEND  TM    VSSWT,X'02'    VS RECORD PROCESSED BY IEBCQSAM      VS0H
         BZ    NORMEND1       NO, BRANCH                           VS0H
         L     R2,DSET1       LOAD SYSUT1 DCB ADDRESS              VS0H
         L     R3,DSET2       LOAD SYSUT2 DCB ADDRESS              VS0H
         B     CFILE          BRANCH                               VS0H
NORMEND1 LA    R2,DASET1      LOAD SYSUT1 DCB ADDRESS              VS0H
         LA    R3,DASET2      LOAD SYSUT2 DCB ADDRESS              VS0H
CFILE    CLOSE ((R2))                  CLOSE NORMAL            @YA02529
         CLOSE ((R3))                  CLOSE NORMAL            @YA02529
         TM    VSSWT,X'02'    QSAM HAS BEEN USED FOR PROCESS     A27718
         BZ    FMSG                  IF NOT, BRANCH              A27718
         FREEPOOL  (2)                YES, FREEPOOL  SYSUT1      A27718
         FREEPOOL  (3)                YES, FREEPOOL  SYSUT2      A27718
FMSG     MVC   MYPRTARE(120),BLANKS  RIPPLE BLANKS IN PRINT AREA A27718
         MVC   MYPRTARE+4(46),EOJMESS
         TM    VSSWT,X'01'    VS RECORD PROC.AT PHYS. RCD LEVEL    VS0H
         BO    PHSCOV         YES, BRANCH                          VS0H
         L     R1,LORECO      LOAD TOTAL NO. OF LOGICAL RCD PROC.  VS0H
         B     CVTD                                                VS0H
PHSCOV   L     R1,PHRECO1     LOAD TOTAL NO. OF PHYS. RCD PROC.    VS0H
CVTD     CVD   R1,CONVTDEC                                         VS0H
         UNPK  PTAREA(8),CONVTDEC(8)
         OI    PTAREA+7,X'F0'
         MVC   MYPRTARE+50(8),PTAREA
         LA    0,119
         LA    1,MYPRTARE
         L     15,MYPRTCON
         BALR  14,15
         LA    7,PRINTOUT
         CLOSE ((7))
         FREEPOOL (7)               FREEPOOL SYSPRINT DCB        A50947
         TM    EXIT1SW,X'01'  IS THERE AN USER INHDR               UL0H
         BZ    DELET1         NO,BRANCH                            UL0H
         DELETE  EPLOC=PARALIST    YES, DELETE USER INHDR          UL0H
DELET1   TM    EXIT3SW,X'01'  IS THERE AN USER INTLR               UL0H
         BZ    DELET2         NO, BRANCH                           UL0H
         DELETE  EPLOC=PARALIST+8    YES,DELETE USER INTLR         UL0H
DELET2   TM    ERRORSW,X'01'  IS THERE AN USER ERROR ROUTINE       UL0H
         BZ    DELET3         NO, BRANCH                           UL0H
         DELETE  EPLOC=PARALIST+16   YES, DELETE USER ERROR RTN    UL0H
DELET3   TM    PRECOMSW,X'01' IS THERE AN USER PRECOMP ROUTINE     UL0H
         BZ    FREE1          NO, BRANCH                           UL0H
         DELETE  EPLOC=PARALIST+24   YES, DELETE USER PRECOMP      UL0H
FREE1    L     R1,INHD1       GET ADDR OF SYSUT1 INHD LAB SAVEAREA UL0H
         LTR   R1,R1          IS IT ZERO                           UL0H
         BC    8,FREE2        YES, BRANCH                          UL0H
         FREEMAIN R,LV=640,A=(R1)                                  UL0H
FREE2    L     R1,INHD2       GET ADDR OF SYSUT2 INHD LAB SAVEAREA UL0H
         LTR   R1,R1          IS IT ZERO                           UL0H
         BC    8,FREE3        YES, BRANCH                          UL0H
         FREEMAIN  R,LV=640,A=(R1)                                 UL0H
FREE3    L     R1,INTL1       GET ADDR OF SYSUT1 INTL LAB SAVEAREA UL0H
         LTR   R1,R1          IS IT ZERO                           UL0H
         BC    8,FREE4        YES, BRANCH                          UL0H
         FREEMAIN  R,LV=640,A=(R1)                                 UL0H
FREE4    L     R1,INTL2       GET ADDR OF SYSUT2 INTL LAB SAVEAREA UL0H
         LTR   R1,R1          IS IT ZERO                           UL0H
         BC    8,FREE5        YES, BRANCH                          VS0H
         FREEMAIN R,LV=640,A=(R1)                                  UL0H
FREE5    L     R1,BUFF1                                            VS0H
         LTR   R1,R1          WAS BUFFER GOTTEN FOR SYSUT1         VS0H
         BC    8,FREE6        NO, BRANCHH                          VS0H
         L     R0,LBUFF1      YES, GET THE LENGTH OF BUFFER        VS0H
         FREEMAIN  R,LV=(R0),A=(R1)                                UL0H
FREE6    L     R1,BUFF2                                            VS0H
         LTR   R1,R1          WAS BUFFER GOTTEN FOR SYSUT2         VS0H
         BC    8,GOBACK       NO, BRANCH                           VS0H
         L     R0,LBUFF2      TES, GET THE LENGTH OF BUFFER        VS0H
         FREEMAIN  R,LV=(R0),A=(R1)                                UL0H
GOBACK   LM    13,14,SAVE1315
         LH    R15,HICONCOD                                        UV0H
         RETURN (2,12)
EOJMESS  DC    CL32'END OF JOB-TOTAL NUMBER OF RECOR'
         DC    CL14'DS COMPARED = '
ERRCOMUD LA    1,5                 USER DATA COMPARISON FAILURE
         L     15,PRINCONS
         BALR  14,15
         MVI   HICONCOD+1,8        ERROR MESSAGE HAS BEEN WRITTEN
         MVC   MYPRTARE(120),BLANKS    RIPPLE BLANKS IN PRINT AREA
         MVC   MYPRTARE+4(9),NAMEDDCN
         MVC   MYPRTARE+13(8),NAMEDD1
         MVC   MYPRTARE+23(14),MEMRNAME
         L     8,BUFF1
         AR    8,4
         MVC   MYPRTARE+37(8),0(8)
         LA    0,119
         LA    1,MYPRTARE
         L     15,MYPRTCON
         BALR  14,15
         LH    7,USERDAL
         LR    5,4
         AH    5,TWELVE
         MVC   INPUTLOC(4),BUFF1
         STM   2,4,SAVEREG2
         BAL   4,BLPRT1            BRANCH TO CONVERT USER DATA
         LM    2,4,SAVEREG2
         MVC   MYPRTARE(120),BLANKS    RIPPLE BLANKS IN PRINT AREA
         MVC   MYPRTARE+4(9),NAMEDDCN
         MVC   MYPRTARE+13(8),NAMEDD2
         MVC   MYPRTARE+23(14),MEMRNAME
         L     8,BUFF2             LOAD BUFFER2 ADDRESS
         AR    8,6                 MOVE POINTER TO POINT AT MEMBER NAME
         MVC   MYPRTARE+37(8),0(8)
         LA    0,119
         LA    1,MYPRTARE
         L     15,MYPRTCON
         BALR  14,15
         LH    7,USERDAL2
         LR    5,6
         AH    5,TWELVE
         MVC   INPUTLOC(4),BUFF2
         STM   2,4,SAVEREG2
         BAL   4,BLPRT1            BRANCH TO CONVERT USER DATA
         LM    2,4,SAVEREG2
         B     RETERRCU
PRNAL1   LA    1,6                 ALIAS MISSING FROM SET 2
         L     15,PRINCONS
         BALR  14,15
         MVI   HICONCOD+1,8        ERROR MESSAGE HAS BEEN WRITTEN
         MVC   MYPRTARE(120),BLANKS    RIPPLE BLANKS IN PRINT AREA
         MVC   MYPRTARE+4(9),NAMEDDCN
         MVC   MYPRTARE+13(8),NAMEDD2
         MVC   MYPRTARE+23(14),ALIANAME
         MVC   MYPRTARE+37(8),0(8)
         LA    0,119
         LA    1,MYPRTARE
         L     15,MYPRTCON
         BALR  14,15
         B     RETFRPR1
PRNTN1   LA    1,7                 TRUE NAME MISSING FROM SET 2
         L     15,PRINCONS
         BALR  14,15
         MVI   HICONCOD+1,8        ERROR MESSAGE HAS BEEN WRITTEN
         MVC   MYPRTARE(120),BLANKS    RIPPLE BLANKS IN PRINT AREA
         MVC   MYPRTARE+4(9),NAMEDDCN
         MVC   MYPRTARE+13(8),NAMEDD2
         MVC   MYPRTARE+23(14),MEMRNAME
         L     8,BUFF1
         AR    8,4
         MVC   MYPRTARE+37(8),0(8)
         LA    0,119
         LA    1,MYPRTARE
         L     15,MYPRTCON
         BALR  14,15
         B     RETFRPR1
PRNAL2   LA    1,8                 ALIAS MISSING FROM SET 1
         L     15,PRINCONS
         BALR  14,15
         MVI   HICONCOD+1,8        ERROR MESSAGE HAS BEEN WRITTEN
         MVC   MYPRTARE(120),BLANKS    RIPPLE BLANKS IN PRINT AREA
         MVC   MYPRTARE+4(9),NAMEDDCN
         MVC   MYPRTARE+13(8),NAMEDD1
         MVC   MYPRTARE+23(14),ALIANAME
         MVC   MYPRTARE+37(8),0(8)
         LA    0,119
         LA    1,MYPRTARE
         L     15,MYPRTCON
         BALR  14,15
         B     DIRBUF2S
PRNTN2   LA    1,9                 TRUE NAME MISSING FROM SET 1
         L     15,PRINCONS
         BALR  14,15
         MVI   HICONCOD+1,8        ERROR MESSAGE HAS BEEN WRITTEN
         MVC   MYPRTARE(120),BLANKS    RIPPLE BLANKS IN PRINT AREA
         MVC   MYPRTARE+4(9),NAMEDDCN
         MVC   MYPRTARE+13(8),NAMEDD1
         MVC   MYPRTARE+23(14),MEMRNAME
         L     9,BUFF2
         AR    9,6
         MVC   MYPRTARE+37(8),0(9)
         LA    0,119
         LA    1,MYPRTARE
         L     15,MYPRTCON
         BALR  14,15
         B     DIRBUF2S
BOSETTNM LA    1,10                TRUE NAMES MISSING- BOTH SETS
         B     ABNOTERM
ERRKEY   LA    1,11                KEY LENGTHS ARE NOT EQUAL
         B     ABNOTERM
ERRFMT   LA    1,12                ILLEGAL RECORD FORMAT
         B     ABNOTERM
ERRMELEN LA    1,14                FIXED RECORD LENGTHS UNEQUAL
         B     ABNOTERM
ERRFMT2  LA    1,15                SETS HAVE DIFFERENT FORMATS
         B     ABNOTERM
ERRMRET1 LA    R1,17          INVALID LRECL ON V-TYPE RECORD     A26556
         B     ABNOTERM
ERRMRET2 LA    1,18                ERROR RETURN FROM FIND MACRO
         B     ABNOTERM
INPERR   LA    R1,19          INVALID BLKSI ON V-TYPE RECORD     A26556
         B     ABNOTERM
ERRL     TM    VSSWT,X'01'    VS-TYPE RCD PROC BY BSAM             VS0H
         BO    ERRPL          YES, BRANCH                          VS0H
         LA    R1,55          CORRESP LITTLE LL NOT EQ             VS0H
         B     WRTMSG         BRANCH                               VS0H
ERRPL    LA    R1,54          CORRESP. LL NOT EQ                   VS0H
WRTMSG   L     R15,PRINCONS                                        VS0H
         BALR  R14,R15             PRINT                           VS0H
         CLI   HICONCOD+1,X'08'    RC ALREADY GT 8 ?           @ZA10944
         BH    *+8                 YES, IGNORE NEW RC          @ZA10944
         MVI   HICONCOD+1,X'08'    SET RC=08                   @ZA10944
         B     ERRECLTH       BRANCH                               VS0H
ERRLEREC LA    1,20                RECORD LENGTHS ARE UNEQUAL
         B     ABNOTERM
ERRCOMP  TM    KEYCOMSW,1
         MVI   HICONCOD+1,8        ERROR MESSAGE HAS BEEN WRITTEN
         BO    SETBK
         LA    1,21                RECORDS ARE NOT EQUAL
         L     15,PRINCONS
         BALR  14,15
ERRECLTH MVC   MYPRTARE(120),BLANKS                                VS0H
         MVC   MYPRTARE+4(9),NAMEDDCN
         MVC   MYPRTARE+13(8),NAMEDD1
         TM    CCADSORG,1
         BZ    PRNBSRE1
         MVC   MYPRTARE+23(14),MEMRNAME
         MVC   MYPRTARE+37(8),FINDAREA
PRNBSRE1 LA    0,119
         LA    1,MYPRTARE
         L     15,MYPRTCON
         BALR  14,15
         MVC   MYPRTARE(120),BLANKS    RIPPLE BLANKS IN PRINT AREA
         TM    VSSWT,X'02'    WAS DATA SET PROCESSED BY QSAM       VS0H
         BO    PRNLSER1       YES, BRANCH                          VS0H
         MVC   MYPRTARE+4(25),PHYSRENU
         L     1,PHRECO1
         CVD   1,CONVTDEC
         UNPK  PTAREA(8),CONVTDEC(8)
         OI    PTAREA+7,X'F0'
         MVC   MYPRTARE+29(8),PTAREA
         MVC   MYPRTARE+39(47),LOGWIPHY
         LH    1,LOREPP1
         CVD   1,CONVTDEC
         UNPK  PTAREA(8),CONVTDEC(8)
         OI    PTAREA+7,X'F0'
         MVC   MYPRTARE+86(8),PTAREA
         B     PRTN1          BRANCH                               VS0H
PRNLSER1 MVC   MYPRTARE+4(22),LOGWIPHY                             VS0H
         MVC   MYPRTARE+26(2),EQSIGN                               VS0H
         L     R1,LORECO                                           VS0H
         AH    R1,ONE                                              VS0H
         CVD   R1,CONVTDEC                                         VS0H
         UNPK  PTAREA(8),CONVTDEC(8)                               VS0H
         OI    PTAREA+7,X'F0'                                      VS0H
         MVC   MYPRTARE+29(8),PTAREA                               VS0H
PRTN1    LA    R0,119                                              VS0H
         LA    1,MYPRTARE
         L     15,MYPRTCON
         BALR  14,15
         LH    7,RECLTH
         MVC   INPUTLOC(4),BUFF1
         LR    5,4
PRBUF1   STM   2,4,SAVEREG2
         BAL   4,BLPRT
         LM    2,4,SAVEREG2
         MVC   MYPRTARE(120),BLANKS    RIPPLE BLANKS IN PRINT AREA
         MVC   MYPRTARE+4(9),NAMEDDCN
         MVC   MYPRTARE+13(8),NAMEDD2
         TM    CCADSORG,1
         BZ    PRNBSRE2
         MVC   MYPRTARE+23(14),MEMRNAME
         MVC   MYPRTARE+37(8),FINDAREA
PRNBSRE2 LA    0,119
         LA    1,MYPRTARE
         L     15,MYPRTCON
         BALR  14,15
         MVC   MYPRTARE(120),BLANKS    RIPPLE BLANKS IN PRINT AREA
         TM    VSSWT,X'02'    WAS DATA SET PROCESSED BY QSAM       VS0H
         BO    PRNLSER2       YES, BRANCH                          VS0H
         MVC   MYPRTARE+4(25),PHYSRENU
         L     1,PHRECO2
         CVD   1,CONVTDEC
         UNPK  PTAREA(8),CONVTDEC(8)
         OI    PTAREA+7,X'F0'
         MVC   MYPRTARE+29(8),PTAREA
         MVC   MYPRTARE+39(47),LOGWIPHY
         LH    1,LOREPP2
         CVD   1,CONVTDEC
         UNPK  PTAREA(8),CONVTDEC(8)
         OI    PTAREA+7,X'F0'
         MVC   MYPRTARE+86(8),PTAREA
         B     PRTN2          BRANCH                               VS0H
PRNLSER2 MVC   MYPRTARE+4(22),LOGWIPHY                             VS0H
         MVC   MYPRTARE+26(2),EQSIGN                               VS0H
         L     R1,LORECO                                           VS0H
         AH    R1,ONE                                              VS0H
         CVD   R1,CONVTDEC                                         VS0H
         UNPK  PTAREA(8),CONVTDEC(8)                               VS0H
         OI    PTAREA+7,X'F0'                                      VS0H
         MVC   MYPRTARE+29(8),PTAREA                               VS0H
PRTN2    LA    R0,119                                              VS0H
         LA    1,MYPRTARE
         L     15,MYPRTCON
         BALR  14,15
         LH    7,RECLH2            LOAD LOGICAL RECORD LENGTH
         MVC   INPUTLOC(4),BUFF2
         LR    5,6
PRBUF2   STM   2,4,SAVEREG2
         BAL   4,BLPRT
         LM    2,4,SAVEREG2
         TM    ERRORSW,1           IS THERE A USER ERROR ROUTINE
         BZ    ADD1ERRC              NO
         LINK  EPLOC=PARATBLY,PARAM=(DASET1,DASET2)
         CH    15,EIGHT
         BNH   PRNEXCOM
         L     3,LORECO
         AH    3,ONE
         ST    3,LORECO
         LA    1,25               USER REQUESTED TERMINATION       SA0I
         STH   15,HICONCOD     STORE USERS RETURN CODE
         L     15,PRINCONS
         BALR  14,15
         B     NORMEND
PRNEXCOM CH    15,HICONCOD
         BL    ENDCOMP                                             VS0H
         STH   15,HICONCOD
         B     ENDCOMP        BRANCH                               VS0H
ADD1ERRC LH    7,ERRCO
         AH    7,ONE
         STH   7,ERRCO
COM10    CH    7,TEN               TEN CONSECUTIVE ERRORS
         BNE   ENDCOMP                                             VS0H
         TM    CCADSORG,1
         BZ    TERM10
         LA    1,27                TEN CONSECUTIVE ERRORS- CONTINUE
         L     15,PRINCONS
         BALR  14,15
         MVI   ERRCO+1,0
         L     3,LORECO
         AH    3,ONE
         ST    3,LORECO
         B     GETMEMB
TERM10   L     3,LORECO            GET LOGICAL RECORD COUNT
         LA    3,1(3)              ADD 1 TO RECORD COUNT
         ST    3,LORECO            STORE LOGICAL RECORD COUNT
         LA    1,27               LOAD RELATIVE ADDR OF MESSAGE    SA0I
         B     ABNOTERM
SETBK    LA    1,22                KEYS ARE NOT EQUAL
         L     15,PRINCONS
         BALR  14,15
         MVC   MYPRTARE(120),BLANKS    RIPPLE BLANKS IN PRINT AREA
         MVC   MYPRTARE+4(25),PHYSRENU   MOVE MESSAGE
         L     1,PHRECO1                 LOAD NUMBER OF PHY. RECORDS
         CVD   1,CONVTDEC
         UNPK  PTAREA(8),CONVTDEC(8)
         OI    PTAREA+7,X'F0'
         MVC   MYPRTARE+29(8),PTAREA     NOW ACTUAL NUMBER IN PRINT AR.
         LA    0,119                     GO PRINT MESSAGE
         LA    1,MYPRTARE
         L     15,MYPRTCON
         BALR  14,15
         LH    7,KEYERCT           ADD 1 TO COUNT OF CONSECUTIVE NON
         LA    7,1(7)                COMPARES OF KEYS
         STH   7,KEYERCT
         B     COM10
NOTOPEN  L     15,NODDNAM         LOAD ADDR OF MESSAGE
         MVC   7(8,15),DDNAMDCB(1)     MOVE DDNAME INTO MESSAGE
         LA    1,29               GO PRINT MESSAGE
         L     15,PRINCONS
         BALR  14,15
         MVI   HICONCOD+1,X'12'     LOAD RETURN CODE OF TWELVE   A44317
         B     GOBACK             RESTORE REGS AND RETURN
STOREC2  MVC   RECLH2(2),RECLTH   MAKE SURE SME LENGTH RECORDS
         B     ACTUCOMP           GO COMPARE RECORDS
***********************************************************************
*   THIS ROUTINE PRINTS OUT A CHARACTER REPRESENTATION OF INTERNAL
* HEXADECIMAL DATA (I.E. 60 INTERNAL BYTES APPEAR AS 120 EBCDIC
* CHARACTERS)
BLPRT1   LTR   7,7                 IS THERE ANY USER DATA
         BC    8,JUSPR               NO-BRANCH
BLPRT    MVC   MYPRTARE(120),BLANKS    RIPPLE BLANKS IN PRINT AREA
         L     RLOC,INPUTLOC       INITIALIZE
         AR    RLOC,5                CONVERSION
         LA    ROUT,MYPRTARE           ROUTINE
         C     7,SIXTY
         BH    GRTHSXTY
         LR    INLEN,7
         B     BALTOCON
GRTHSXTY L     INLEN,SIXTY
         MVI   CONVSW,1
BALTOCON ST    6,SAVEREG6
         ST    R9,SAVEREG9                                         VS0H
         BAL   14,FLDCONV1
         L     6,SAVEREG6
         L     R9,SAVEREG9                                         VS0H
GOPRI    LA    0,119
         LA    1,MYPRTARE
         L     15,MYPRTCON
         BALR  14,15
         TM    CONVSW,1
         BZ    0(4)
         MVI   CONVSW,0
         S     7,SIXTY
         A     5,SIXTY
         B     BLPRT
JUSPR    MVC   MYPRTARE+4(4),MYPRTARE+3   MOVE FOUR BLANKS INTO PR AREA
         MVC   MYPRTARE+8(40),NOUSER      MOVE MESSAGE INTO AREA
         B     GOPRI                      PRINT AND GO BACK
NOUSER   DC    CL32'NO USER DATA IN PREVIOUS DIRECTO'
         DC    CL8'RY ENTRY'
***********************************************************************
***********************************************************************
*    CONVERSION ROUTINE
*        INLEN = NUMBER OF BYTES TO BE CONVERTED
*        RLOC = INPUT LOCATION
*        ROUT = OUTPUT LOCATION
FLDCONV1 STH   INLEN,LENSAV
         ST    ROUT,OUTSAV
FC1      SR    TEMP1,TEMP1
         IC    TEMP1,0(RLOC)
         LR    TEMP2,TEMP1
         SRL   TEMP1,4
         STC   TEMP1,0(ROUT)       SEPARATE THE 4-BIT CHARACTERS
         STC   TEMP2,1(ROUT)         IN EACH BYTE
         BCT   INLEN,FC2
         B     FC3
FC2      AH    ROUT,TWO
         AH    RLOC,ONE
         B     FC1
FC3      LH    INLEN,LENSAV
         L     ROUT,OUTSAV
FC5      SLL   INLEN,1
         BCTR  INLEN,0
         NI    0(ROUT),X'0F'
         EX    INLEN,FCMZ
         EX    INLEN,FCTR
         B     0(14)
FCLIST   DC    C'0123456789'
         DC    C'ABCDEF'
FCMZ     MVZ   1(1,ROUT),0(ROUT)
FCTR     TR    0(1,ROUT),FCLIST
***********************************************************************
*     CONSTANT AREA
NAMEDDCN DC    CL9'DDNAME = '
MEMRNAME DC    CL14'MEMBER NAME = '
ALIANAME DC    CL14' ALIAS NAME = '
PHYSRENU DC    CL25'PHYSICAL RECORD NUMBER = '
LOGWIPHY DC    CL32'LOGICAL RECORD NUMBER WITHIN PHY'
         DC    CL15'SICAL RECORD = '
PRINCONS DC    V(JPRINTRT)
MYPRTCON DC    V(ZZPR)
NODDNAM  DC    A(DDERROR1)        WHERE UNOPENED DDNAME GOES
BUFSW1   DC    X'01'               SWITCH - IF BUFFER 1 EMPTY SET = 1
BUFSW2   DC    X'01'               SWITCH - IF BUFFER 2 EMPTY SET = 1
ONE      DC    H'1'
TWO      DC    H'2'
FOUR     DC    H'4'
EIGHT    DC    H'8'
TEN      DC    H'10'
TWELVE   DC    H'12'
SIXTY    DC    F'60'
TWOFS    DC    F'256'
MASK1    DC    F'31'
MASK2    DC    F'96'               MASK FOR 'C' CHAR OF TTRC'S
OOOOFFFF DC    X'0000FFFF'      BLOCK COMPARISON CONSTANT
OOO1OOFE DC    X'000100FE'         BLOCK COMPARISON CONSTANT
ALLFS    DC    8X'FF'
SYMREG1  EQU   3
REG3     EQU   3                                                   9314
REG4     EQU   4                                                   9314
OUTLEN   EQU   8                                                   9314
RLOC     EQU   2
ROUT     EQU   3
INLEN    EQU   8
TEMP1    EQU   9
TEMP2    EQU   6
SAVEREG2 DC    F'0'
SAVEREG3 DC    F'0'
SAVEREG4 DC    F'0'
SAVEREG6 DC    F'0'
SAVEREG9 DC    F'0'                                                VS0H
CSAVE    DS    7F                                                  VS0H
ERRDCB   DC    X'00'           BLKSI,LRECL ERROR BIT             A41765
DIROPOK  DC    X'00'              DIRECTORY BLOCK 'READ SWITCHES'
EOD1SW   DC    X'00'              SET = TO 1 WHEN EOD READ ON PDS1
         CNOP  2,4                 ALIGN TO HLFWRD FOR BL. BYTE  A41765
EOD2SW   DC    X'00'              SET = TO 1 WHEN EOD READ ON PDS2
BLANKS   DC    X'40'              USED TO RIPPLE BLANKS IN PRINT AREA
MYPRTARE DS    30F                 PRINT AREA
PARATABL DS    0D
        DC   D'0'
PARATBLX DC    D'0'
PARATBLY DC    D'0'
PARATBLZ DC    D'0'
NAMEDD1  DC    D'0'                CONTAINS DDNAME FOR SET 1
NAMEDD2  DC    D'0'                CONTAINS DDNAME FOR SET 2
PTAREA   DC    D'0'                WORK AREA- HOLDS UNPACKED NUMBER
CONVTDEC DC    D'0'                WORK AREA- USED FOR CONVERTING
FINDAREA DC    2F'0'               CONTAINS NAME FOR FIND MACRO
MAXBLLH1 DC    F'0'                MAXIMUM BLOCK SIZE - DATA SET 1
MAXBLLH2 DC    F'0'                MAXIMUM BLOCK SIZE - DATA SET 2
KEYLTH   DC    F'0'                KEY LENGTH FOR DATA SET 1
DCBKL2   DC    F'0'                KEY LENGTH FOR DATA SET 2
TNTABLEL DC    F'0'                LENGTH OF TRUE NAME TABLE
TTRTABLL DC    F'0'                LENGTH OF TTR TABLES
NOOFTN   DC    F'0'                NUMBER OF TRUE NAMES
NOTNREAD DC    F'0'                NO. OF TRUE NAMES READ X 8.
TNSET    DC    F'0'                CONTAINS ADDRESS OF TRUE NAME TABLE
TTRSET1  DC    F'0'                CONTAINS ADDRESS OF TTR TABLE-DS1
TTRSET2  DC    F'0'                CONTAINS ADDRESS OF TTR TABLE-DS2
PHRECO1  DC    F'0'                PHYSICAL RECORD COUNTER-DATA SET 1
PHRECO2  DC    F'0'                PHYSICAL RECORD COUNTER-DATA SET 2
OUTSAV   DC    F'0'
BLKLTH1  DC    H'0'                PHYSICAL BLOCK LENGTH - DS1
BLKLTH2  DC    H'0'                PHYSICAL BLOCK LENGTH - DS2
TTRLTH   DC    H'0'                WORK AREA
TTRLTH2  DC    H'0'                TTR LTH FOR MEMBERS OF SYSUT2
USERDAL  DC    H'0'                WORK AREA
USERDAL2 DC    H'0'
ERRCO    DC    H'0'                ERROR COUNTER
KEYERCT  DC    H'0'                'KEY' ERROR COUNTER
LOREPP1  DC    H'0'                LOGICAL RECORD PER PHYSICAL RECORD
LOREPP2  DC    H'0'                  COUNTERS FOR DATA SETS 1 AND 2
LENSAV   DC    H'0'
SWFORBP1 DC    X'00'               SWITCH-BPAM DS1-SET DURING DCB EXIT
SWFORBP2 DC    X'00'               SWITCH-BPAM DS2-SET DURING DCB EXIT
TNMIS1SW DC    X'00'               SWITCH - IF TN MISSING FROM SET 1.=1
TNMIS2SW DC    X'00'               SWITCH - IF TN MISSING FROM SET 2.=1
TABLE1SW DC    X'00'               SWITCH -USE TTR TABLE 1 IF = 1.
TABLE2SW DC    X'00'               SWITCH -USE TTR TABLE 2 IF = 1
KSWT     DC    X'00'               SWITCH-IF KEYS PRESENT SET = 1.
VSWT     DC    X'00'               SWITCH - IF V-TYPE FORMAT SET = 1.
FSWT     DC    X'00'               SWITCH - IF F-TYPE FORMAT SET = 1.
RECFM1   DC    X'00'               CONTAINS RECORD FORMAT - DS1
RECFM2   DC    X'00'               CONTAINS RECORD FORMAT - DS2
ONETIME  DC    X'00'               SWITCH-SET = 1 AFTER FIRST FIND.
ENDMEMBS DC    X'00'               SWITCH-NO MEMBERS LEFT IF = 1.
KEYCOMSW DC    X'00'               SWITCH-SET=1 WHEN KEYS ARE COMPARED
ERRORSW  DC    X'00'
PRECOMSW DC    X'00'
CONVSW   DC    X'00'               SWITCH- USED FOR CONVERSION ROUTINE
EQSIGN   DC    CL2'= '                                             VS0H
EIGHTY   DC    F'80'                                               UL0H
ADQSAM   DC    V(QSAM)                                             UL0H
ADULAB   DC    V(USERLAB)                                          UL0H
SAVE9    DC    F'0'                                                UL0H
CTR1     DC    F'0'           CONTAIN NO. OF LAB ON SYSUT1 TO BE   UL0H
*                             COMPARED                             UL0H
CTR2     DC    F'0'           CONTAIN NO. OF LAB ON SYSUT2 TO BE   UL0H
*                             COMPARED                             UL0H
SAREA1   DC    F'0'           CONTAIN ADDR. OF SYSUT1 LAB SAVEAREA UL0H
SAREA2   DC    F'0'           CONTAIN ADDR. OF SYSUT2 LAB SAVEAREA UL0H
MAXLL    DC    X'7FF8'        MAX. BIG LL                          VS0H
MAXLLL   DC    X'7FF4'        MAX. LITTLE LL                     A26556
F14      DC    H'14'
HD       DC    CL7'HEADER '                                        UL0H
TL       DC    CL7'TRAILER'                                        UL0H
LBSW     DC    X'00'          SET TO 00 TO IND. IN HEADER LAB COMPRUL0H
*                             SET TO 01 TO IND. IN TL LAB COMPR    UL0H
IOERR    DC    CL18'IEB267I I/O ERROR,'                          A27718
***********************************************************************
*        THE FOLLOWING MESSAGE IS BUILT AT EXECUTION TIME             *
LABMSG   DC    CL10'IEB247I   '                                    UL0H
LABMSG1  DC    CL32'INPUT         LABELS FROM BOTH D'              UL0H
         DC    CL30'ATA SETS ARE COMPARED         '                UL0H
         DS    0F                                                  UL0H
DCALBLX1 DC    X'85'                                               UL0H
         DC    AL3(DCBEXIT1)
         DC    X'01'
         DC    AL3(INHDEXT1)                                       UL0H
         DC    X'83'                                               UL0H
         DC    AL3(INTLEXT1)                                       UL0H
         DS    0F                                                  UL0H
DCALBLX2 DC    X'85'                                               UL0H
         DC    AL3(DCBEXIT2)
         DC    X'01'
         DC    AL3(INHDEXT2)                                       UL0H
         DC    X'83'                                               UL0H
         DC    AL3(INTLEXT2)                                       UL0H
DASET1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=R,NCP=1,BFALN=F,DEVD=DA,   1
               EODAD=INEOD1,SYNAD=SYNADEX,EXLST=DCALBLX1       @YM04833
DASET2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=R,NCP=1,BFALN=F,DEVD=DA,   1
               EODAD=INEOD2,SYNAD=SYNADEX,EXLST=DCALBLX2       @YM04833
         END
