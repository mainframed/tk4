         TITLE 'EP=BLSCADST - DAS CONDITIONAL ALLOCATION DSNAME VALIDAT*
               TION     '
*     /* CHANGE ACTIVITY
*    THIS MODULE IS WRITTEN FOR @G57LPSR
BLSCADST CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'BLSCADST  78.062'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         BLSCGETF R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(8),0(@01)                                  0002
         EJECT
*                                                                  0015
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE MODULE STATUS                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0015
*   DMCBPTR=ADDR(DMCBPARM);         /* BASE THE DMCB                 */
         L     DMCBPTR,@PC00001                                    0015
*   MODNAME=LMODNMC;                                               0016
         MVC   MODNAME(8),@CC00313                                 0016
*   RETCODE=F0C;                                                   0017
         SLR   @10,@10                                             0017
         ST    @10,RETCODE                                         0017
*   CLEN=F0C;                       /* INIT COMPARE LENGTH           */
         SLR   CLEN,CLEN                                           0018
*   ALBAS=ADDR(ALPARMS);            /* SET ALPARM BASE TO PLIST START*/
*                                                                  0019
         L     ALBAS,@PC00001+4                                    0019
         LA    @10,ALPARMS(,ALBAS)                                 0019
         LR    ALBAS,@10                                           0019
*   /*****************************************************************/
*   /*                                                               */
*   /* VALIDATE OVERRIDE DSNAME WITH ALLOCATED DSNAME                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0020
*   IF OPNPVL=ON THEN               /* TEST FOR NO OVERRIDE PARMS    */
         L     @10,@PC00001+4                                      0020
         TM    OPNPVL(@10),B'10000000'                             0020
         BNO   @RF00020                                            0020
*     RETCODE=ZZZFLAGT;             /* OVERRIDE PARM IS REQUIRED     */
         MVC   RETCODE(4),@CF00054                                 0021
*   ELSE                                                           0022
*     DO;                           /* OVERRIDE PARM PRESENT         */
         B     @RC00020                                            0022
@RF00020 DS    0H                                                  0023
*       ALOPT=ALOP&LHEX7FC;         /* ELIMINATE LAST ENTRY BIT FROM
*                                      KEY CODE                      */
         LA    ALOPT,127                                           0023
         SLR   @10,@10                                             0023
         IC    @10,ALOP(,ALBAS)                                    0023
         NR    ALOPT,@10                                           0023
*       IF ALOPT^=DSNOPC THEN       /* TEST NOT DATA SET NAME PARM   */
         C     ALOPT,@CF00070                                      0024
         BE    @RF00024                                            0024
*         RETCODE=ZZZFLAGT;         /* DSN PARM MUST BE FIRST PARM   */
         MVC   RETCODE(4),@CF00054                                 0025
*       ELSE                                                       0026
*         DO;                       /* DATA SET NAME PARM            */
         B     @RC00024                                            0026
@RF00024 DS    0H                                                  0027
*           ALBAS=ALBAS+F4C;        /* BUMP PLIST BASE TO PARM LENGTH
*                                      ADDR                          */
         AL    ALBAS,@CF00039                                      0027
*           IF ALPTR=F0C×ALPTR=ZZZNULL×/* TEST FOR INVALID LENGTH  0028
*                                      POINTER                       */
*               CLEN<F0C×CLEN>F44C THEN/* OR FOR INVALID DSN PARM  0028
*                                      LENGTH                        */
         SLR   @10,@10                                             0028
         L     @04,ALPTR(,ALBAS)                                   0028
         CR    @04,@10                                             0028
         BE    @RT00028                                            0028
         CL    @04,@CF00063                                        0028
         BE    @RT00028                                            0028
         CR    CLEN,@10                                            0028
         BL    @RT00028                                            0028
         C     CLEN,@CF00088                                       0028
         BNH   @RF00028                                            0028
@RT00028 DS    0H                                                  0029
*             RETCODE=ZZZFLAGT;     /* INVALID DSN PARM LENGTH       */
         MVC   RETCODE(4),@CF00054                                 0029
*           ELSE                                                   0030
*             DO;                   /* VALID DSN LENGTH              */
         B     @RC00028                                            0030
@RF00028 DS    0H                                                  0031
*               CLEN=ALPTF31;       /* GET COMPARE LENGTH            */
         L     @10,ALPTR(,ALBAS)                                   0031
         L     CLEN,ALPTF31(,@10)                                  0031
*               ALBAS=ALBAS+F4C;    /* BUMP ALPARM BASE TO GET PTR TO
*                                      VL PARM FIELD                 */
         AL    ALBAS,@CF00039                                      0032
*               IF ALPTR=F0C×ALPTR=ZZZNULL×/* TEST FOR INVALID DSN 0033
*                                      POINTER                       */
*                   DMCBDSN(F1C:CLEN)^=ALPTCVL(F1C:CLEN) THEN/* OR 0033
*                                      FOR NO DATA SET NAME MATCH    */
         L     @10,ALPTR(,ALBAS)                                   0033
         LTR   @10,@10                                             0033
         BZ    @RT00033                                            0033
         CL    @10,@CF00063                                        0033
         BE    @RT00033                                            0033
         LR    @04,CLEN                                            0033
         BCTR  @04,0                                               0033
         EX    @04,@SC00323                                        0033
         BE    @RF00033                                            0033
@RT00033 DS    0H                                                  0034
*                 RETCODE=ZZZFLAGT; /* DATA SET NAMES MUST MATCH     */
         MVC   RETCODE(4),@CF00054                                 0034
*             END;                  /* VALID DSN LENGTH              */
@RF00033 DS    0H                                                  0036
*         END;                      /* DATA SET NAME PARM            */
@RC00028 DS    0H                                                  0037
*     END;                          /* OVERRIDE PARM PRESENT         */
@RC00024 DS    0H                                                  0038
         SPACE 1
*   RETURN CODE(RETCODE);           /* ALL DONE                      */
@RC00020 L     @10,RETCODE                                         0038
         L     @13,4(,@13)                                         0038
         L     @00,@SIZDATD                                        0038
         LR    @01,@11                                             0038
         BLSCFREF R,LV=(0),A=(1)
         LR    @15,@10                                             0038
         L     @14,12(,@13)                                        0038
         LM    @00,@12,20(@13)                                     0038
         BR    @14                                                 0038
         EJECT
*                                                                  0039
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE STATEMENTS END                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0039
*/*BLSUPEND--MVS IPCS MODULE                                         */
*                                                                  0039
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0039
*     I031F FIXED(31) BASED,                                       0039
*     I031P PTR(31) BASED,                                         0039
*     I015F FIXED(15) BASED,                                       0039
*     I015P PTR(15) BASED,                                         0039
*     I008P PTR(8) BASED,                                          0039
*     I001C CHAR(1) BASED;                                         0039
*   GENERATE NODEFS NOREFS DATA;                                   0040
*   END;                            /* BLRPEND                       */
@EL00001 L     @13,4(,@13)                                         0041
@EF00001 L     @00,@SIZDATD                                        0041
         LR    @01,@11                                             0041
         BLSCFREF R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0041
         BR    @14                                                 0041
@DATA    DS    0H
@SC00323 CLC   DMCBDSN(0,DMCBPTR),ALPTCVL(@10)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    2F
BLSCADST CSECT
         DS    0F
@CF00070 DC    F'2'
@CF00039 DC    F'4'
@CF00054 DC    F'16'
@CF00088 DC    F'44'
@CF00063 DC    XL4'80000000'
@DATD    DSECT
         DS    0D
MODSTAT  DS    CL12
         ORG   MODSTAT
MODNAME  DS    CL8
RETCODE  DS    FL4
         ORG   MODSTAT+12
BLSCADST CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00313 DC    C'BLSCADST'
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSCADST CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSCADST+19)/20+7)/8)CL8'BLSCADST'
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSCADST CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ALOPT    EQU   @04
CLEN     EQU   @03
ALBAS    EQU   @02
DMCBPTR  EQU   @05
DMCB     EQU   0
DMCBFTY  EQU   DMCB+20
DMCBOPN  EQU   DMCB+21
DMCBRMOD EQU   DMCB+23
DMCBOUT  EQU   DMCBRMOD
DMCBOPTS EQU   DMCB+24
DMCBGKY  EQU   DMCBOPTS
DMCBMFLG EQU   DMCB+28
DMCBBUFP EQU   DMCB+32
DMCBKEYP EQU   DMCB+44
DMCBRI   EQU   DMCB+64
DMCBFRE  EQU   DMCB+88
DMCBEOB  EQU   DMCB+92
DMCBACBE EQU   DMCB+124
DMCBDSN  EQU   DMCB+284
DMCBSPEC EQU   DMCB+380
DMCBAMS  EQU   DMCB+416
DMCBAUDT EQU   DMCB+568
DMCBLSCP EQU   DMCBAUDT+16
ALPTR    EQU   0
ALOP     EQU   ALPTR
ALPRB4C1 EQU   ALPTR+3
ALPTF31  EQU   0
ALPTB2C3 EQU   ALPTF31+1
ALPTB3C2 EQU   ALPTB2C3+1
ALPTCVL  EQU   0
DMCBDMGR EQU   0
DMCBRQC  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
DMCBPARM EQU   0
PLIST    EQU   0
OPNP     EQU   PLIST+16
OPNPVL   EQU   OPNP
ALPARMS  EQU   PLIST+20
DMCBVSM  EQU   DMCBAMS
DMCBQSM  EQU   DMCBAMS
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
DMCBRES7 EQU   DMCBQSM+96
DMCBDCB  EQU   DMCBQSM
DMCBACB  EQU   DMCBVSM+76
DMCBRPL  EQU   DMCBVSM
ACMODP   EQU   PLIST+12
MODELP   EQU   PLIST+8
DMCBPP   EQU   PLIST+4
ZZ2P     EQU   PLIST
ALPTB4C1 EQU   ALPTB3C2+1
@NM00004 EQU   ALPTB3C2
@NM00003 EQU   ALPTB2C3
@NM00002 EQU   ALPTF31
ALPRB4F1 EQU   ALPRB4C1
@NM00001 EQU   ALPTR+1
ALVL     EQU   ALOP
DMCBWRK  EQU   DMCB+648
DMCBRES8 EQU   DMCB+640
DMCBMODN EQU   DMCB+632
DMCBCARY EQU   DMCBAUDT+20
DMCBCLC  EQU   DMCBAUDT+12
DMCBOPC  EQU   DMCBAUDT+8
DMCBFRC  EQU   DMCBAUDT+4
DMCBALC  EQU   DMCBAUDT
DMCBFR   EQU   DMCB+412
DMCBRES6 EQU   DMCB+410
DMCBIRSC EQU   DMCB+408
DMCBSUBC EQU   DMCB+404
DMCBDRBP EQU   DMCB+400
DMCBRSZM EQU   DMCB+398
DMCBRSZA EQU   DMCB+396
DMCBCISZ EQU   DMCB+394
DMCBDCBL EQU   DMCB+392
DMCBDCLR EQU   DMCB+390
DMCBDCFM EQU   DMCB+389
DMCBRES5 EQU   DMCB+388
DMCBLBRT EQU   DMCB+386
DMCBLBSQ EQU   DMCB+384
DMCBLBPS EQU   DMCB+383
DMCBLBTY EQU   DMCB+382
DMCBRES4 EQU   DMCB+381
DMCBSPRS EQU   DMCBSPEC
DMCBSPRN EQU   DMCBSPEC
DMCBSPCT EQU   DMCBSPEC
DMCBSPRL EQU   DMCBSPEC
DMCBSPSE EQU   DMCB+376
DMCBSPPR EQU   DMCB+372
DMCBSPTY EQU   DMCB+369
DMCBODIS EQU   DMCB+368
DMCBDISP EQU   DMCB+367
DMCBSTAT EQU   DMCB+366
DMCBRES3 EQU   DMCB+364
DMCBMEMB EQU   DMCB+356
DMCBMODL EQU   DMCB+348
DMCBRES9 EQU   DMCB+340
DMCBPID  EQU   DMCB+332
DMCBTYPE EQU   DMCB+328
DMCBUNIT EQU   DMCB+276
DMCBDSOR EQU   DMCB+274
DMCBVOL  EQU   DMCB+268
DMCBDDNM EQU   DMCB+260
DMCBSYNM EQU   DMCB+132
DMCBRPLF EQU   DMCB+128
DMCBDCBE EQU   DMCBACBE
DMCBARC  EQU   DMCB+120
DMCBCPC  EQU   DMCB+116
DMCBRET  EQU   DMCB+112
DMCBSTL  EQU   DMCB+96
DMCBRES2 EQU   DMCB+85
DMCBSPID EQU   DMCB+84
DMCBRESC EQU   DMCB+80
DMCBZZ1P EQU   DMCB+76
DMCBMSGS EQU   DMCB+72
DMCBMSG0 EQU   DMCB+68
DMCBRRL  EQU   DMCB+60
DMCBRBA  EQU   DMCB+56
DMCBMSG  EQU   DMCB+52
DMCBKEYL EQU   DMCB+48
DMCBKPC  EQU   DMCBKEYP
DMCBORL  EQU   DMCB+40
DMCBBLEN EQU   DMCB+36
DMCBBFPC EQU   DMCBBUFP
DMCBRES1 EQU   DMCB+31
DMCBACCM EQU   DMCB+30
DMCBREJ  EQU   DMCB+29
DMCBRESB EQU   DMCBMFLG
DMCBFMOD EQU   DMCBMFLG
DMCBLOPT EQU   DMCB+27
DMCBLRM  EQU   DMCB+26
DMCBLRQ  EQU   DMCB+25
DMCBOPRS EQU   DMCBOPTS
DMCBLRD  EQU   DMCBOPTS
DMCBBWD  EQU   DMCBOPTS
DMCBUPD  EQU   DMCBOPTS
DMCBAPX  EQU   DMCBOPTS
DMCBRNO  EQU   DMCBGKY
DMCBKYD  EQU   DMCBOPTS
DMCBRMRS EQU   DMCBRMOD
DMCBRM5  EQU   DMCBRMOD
DMCBRM6  EQU   DMCBRMOD
DMCBTMP  EQU   DMCBOUT
DMCBRQST EQU   DMCB+22
DMCBRESA EQU   DMCBOPN
DMCBSOUT EQU   DMCBOPN
DMCBSIN  EQU   DMCBOPN
DMCBVSF  EQU   DMCBFTY
DMCBKSF  EQU   DMCBFTY
DMCBFTRS EQU   DMCBFTY
DMCBSHF  EQU   DMCBFTY
DMCBIRL  EQU   DMCB+16
DMCBRTC  EQU   DMCB+12
DMCBTVP  EQU   DMCB+8
DMCBNEXT EQU   DMCB+4
DMCBID   EQU   DMCB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   BLSCADST,(C'PLS2001',0701,78062)
