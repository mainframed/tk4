         TITLE 'EP=BLSCAMPR -- IPCS DAS IDCAMS SYSPRINT INTERFACE      *
                        '
*     /* CHANGE ACTIVITY
*    THIS MODULE IS WRITTEN FOR @G57LPSR
BLSCAMPR CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'BLSCAMPR  78.062'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(12),0(@01)                                 0002
*                                                                  0008
*   /*****************************************************************/
*   /*                                                               */
*   /* REGISTER DECLARATIONS                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0009
*/*                                                                  */
*/*MACRO BLSCDGPR (01P) INVOKED                                      */
*/*                                                                  */
*                                                                  0009
*                                   /* DECLARE EXPLICITLY USED     0009
*                                      REGISTERS                     */
*                                                                  0009
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE MODULE STATUS                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0009
*   OURCODE=F0C;                    /* INIT RETURN CODE              */
*                                                                  0009
         L     @10,@PC00001                                        0009
         SLR   @15,@15                                             0009
         ST    @15,OURCODE(,@10)                                   0009
*   /*****************************************************************/
*   /*                                                               */
*   /* OPEN FUNCTION                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0010
*   IF IOOPN=F0C THEN               /* TEST FOR OPEN FUNCTION        */
         L     @15,@PC00001+4                                      0010
         CLI   IOOPN(@15),0                                        0010
         BNE   @RF00010                                            0010
*     DO;                           /* DO OPEN FUNCTION              */
*       IF OUTOPEN=ON&              /* TEST THAT FILE IS TO BE OPENED
*                                      FOR OUTPUT                    */
*           DDIOINFO=ON&            /* AND IF DDNAME IS SUPPLIED AND */
*           DNAME=OUDDN THEN        /* DDNAME = 'SYSPRINT'           */
         TM    OUTOPEN(@15),B'01100000'                            0012
         BNO   @RF00012                                            0012
         L     @15,@PC00001+8                                      0012
         CLC   DNAME(8,@15),@CC00187                               0012
         BNE   @RF00012                                            0012
*         OUOPNFL=ON;               /* MARK DATA SET OPEN            */
         OI    OUOPNFL(@10),B'01000000'                            0013
*       ELSE                                                       0014
*         DO;                       /* OPEN ERROR                    */
         B     @RC00012                                            0014
@RF00012 DS    0H                                                  0015
*           OUECODE=OUECODE×XF1C;   /* MARK OPEN ERROR               */
         L     @10,@PC00001                                        0015
         OC    OUECODE(4,@10),@CB00175                             0015
*           OURCODE=SEVERE;         /* OPEN FAILED                   */
         MVC   OURCODE(4,@10),@CF00053                             0016
*         END;                      /* OPEN ERROR                    */
*     END;                          /* DO OPEN FUNCTION              */
*                                                                  0018
*   /*****************************************************************/
*   /*                                                               */
*   /* CLOSE FUNCTION                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0019
*   ELSE                                                           0019
*     IF IOOPN=F4C THEN             /* TEST FOR CLOSE REQUEST        */
         B     @RC00010                                            0019
@RF00010 L     @10,@PC00001+4                                      0019
         CLI   IOOPN(@10),4                                        0019
         BNE   @RF00019                                            0019
*       DO;                         /* DO CLOSE FUNCTION             */
*         IF OUTOPEN=ON THEN        /* TEST CLOSE OF OUTPUT FILE     */
         TM    OUTOPEN(@10),B'01000000'                            0021
         BNO   @RF00021                                            0021
*           OUOPNFL=OFF;            /* INDICATE DATA SET CLOSED      */
         L     @10,@PC00001                                        0022
         NI    OUOPNFL(@10),B'10111111'                            0022
*         ELSE                                                     0023
*           DO;                     /* CLOSE ERROR                   */
         B     @RC00021                                            0023
@RF00021 DS    0H                                                  0024
*             OUECODE=OUECODE×XF2C; /* MARK CLOSE ERROR              */
         L     @10,@PC00001                                        0024
         OC    OUECODE(4,@10),@CB00177                             0024
*             OURCODE=SEVERE;       /* CLOSE ERROR                   */
         MVC   OURCODE(4,@10),@CF00053                             0025
*           END;                    /* CLOSE ERROR                   */
*       END;                        /* DO CLOSE FUNCTION             */
         EJECT
*                                                                  0028
*   /*****************************************************************/
*   /*                                                               */
*   /* PUT FUNCTION                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0028
*     ELSE                                                         0028
*       IF IOOPN=F12C THEN          /* TEST FOR PUT REQUEST          */
         B     @RC00019                                            0028
@RF00019 L     @10,@PC00001+4                                      0028
         CLI   IOOPN(@10),12                                       0028
         BNE   @RF00028                                            0028
*         DO;                       /* DO PUT FUNCTION               */
*           IF OUOPNFL=OFF THEN     /* TEST FOR DATA SET NOT OPEN    */
         L     @10,@PC00001                                        0030
         TM    OUOPNFL(@10),B'01000000'                            0030
         BNZ   @RF00030                                            0030
*             DO;                   /* DATA SET NOT OPEN             */
*               OUECODE=OUECODE×XF4C;/* DATA SET NOT OPEN FOR PUT    */
         OC    OUECODE(4,@10),@CB00179                             0032
*               OURCODE=SEVERE;     /* MARK ERROR                    */
         MVC   OURCODE(4,@10),@CF00053                             0033
*             END;                  /* DATA SET NOT OPEN             */
*           ELSE                                                   0035
*             DO;                   /* DATA SET OPEN FOR PUT         */
         B     @RC00030                                            0035
@RF00030 DS    0H                                                  0036
*               OUFLEN=(RECLEN+LENGTH(MSGDENT)+F7C)&XDWBDYC;/* SET 0036
*                                      GETMAIN LENGTH                */
         L     @10,@PC00001+8                                      0036
         LA    OUFLEN,23                                           0036
         AL    OUFLEN,RECLEN(,@10)                                 0036
         N     OUFLEN,@CF00185                                     0036
*               DO;                 /* GETMAIN (RC) LV(OUFLEN)     0037
*                                      SP(ZZZSPEXC) RTCD(SUBCODE)    */
*                 RESPECIFY                                        0038
*                  (GPR01F,                                        0038
*                   GPR15F,                                        0038
*                   GPR00F) RESTRICTED;                            0038
*                 GPR01F=0;         /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                       0039
*                 GPR15F=0;         /* RC-TYPE GETMAIN               */
         SLR   GPR15F,GPR15F                                       0040
*                 GPR00F=OUFLEN;    /* LENGTH REQUESTED              */
         LR    GPR00F,OUFLEN                                       0041
*                 GPR15F=GPR15F×((ZZZSPEXC)*256);/* SP IN BYTE 2     */
         O     GPR15F,@CF00194                                     0042
*                 SVC(120);         /* RC/RU-FORM OF GETMAIN         */
         SVC   120                                                 0043
*                 SUBCODE=GPR15F;   /* SET RETURN CODE               */
         LR    SUBCODE,GPR15F                                      0044
*                 RESPECIFY                                        0045
*                  (GPR01F,                                        0045
*                   GPR15F,                                        0045
*                   GPR00F) UNRESTRICTED;                          0045
*               END;                /* GETMAIN (RC) LV(OUFLEN)     0046
*                                      SP(ZZZSPEXC) RTCD(SUBCODE) GET
*                                      SPACE FOR RECORD              */
*               RFY                                                0047
*                 GPR01P RSTD;                                     0047
*               OUPTR=GPR01P;       /* ADDRESABILITY TO RECORD       */
         LR    OUPTR,GPR01P                                        0048
*               RFY                                                0049
*                 GPR01P UNRSTD;                                   0049
*               IF SUBCODE^=0 THEN  /* TEST FOR GETMAIN ERROR        */
         LTR   SUBCODE,SUBCODE                                     0050
         BZ    @RF00050                                            0050
*                 DO;               /* GETMAIN ERROR                 */
*                   OUECODE=OUECODE×XF8C;/* GETMAIN FAILED           */
         L     @10,@PC00001                                        0052
         OC    OUECODE(4,@10),@CB00181                             0052
*                   OURCODE=SEVERE; /* MARK ERROR                    */
         MVC   OURCODE(4,@10),@CF00053                             0053
*                 END;              /* GETMAIN ERROR                 */
*               ELSE                                               0055
*                 DO;               /* GETMAIN OK, CHAIN RECORD TO 0055
*                                      LIST                          */
         B     @RC00050                                            0055
@RF00050 DS    0H                                                  0056
*                   MSGDENT(F1C:OUFLEN)=MSGDENT(F1C:OUFLEN)&&MSGDENT(
*                       F1C:OUFLEN);/* CLEAR REC                     */
         LR    @10,OUFLEN                                          0056
         BCTR  @10,0                                               0056
         EX    @10,@SX00209                                        0056
*                   MSGDSPID=ZZZSPEXC;/* SUBPOOL ID FOR FREEMAIN     */
         MVI   MSGDSPID(OUPTR),X'01'                               0057
*                   MSGDFLEN=OUFLEN;/* MESSAGE FREEMAIN LENGTH       */
         STCM  OUFLEN,7,MSGDFLEN(OUPTR)                            0058
*                   MSGDLEN=RECLEN+LENGTH(MSGDMOV);/* BUILD SYSPRINT
*                                      RECORD                        */
         L     @10,@PC00001+8                                      0059
         L     @04,RECLEN(,@10)                                    0059
         LA    @03,4                                               0059
         ALR   @03,@04                                             0059
         STH   @03,MSGDLEN(,OUPTR)                                 0059
*                   MSGDTXT(1:RECLEN)=RECORD(1:RECLEN);            0060
         BCTR  @04,0                                               0060
         L     @10,RECPTR(,@10)                                    0060
         EX    @04,@SM00211                                        0060
*                   OUWPTR=OUPTR+LENGTH(MSGDPRF);/* SET MESSAGE CHAIN
*                                      POINTER                       */
         LA    OUWPTR,8                                            0061
         ALR   OUWPTR,OUPTR                                        0061
*                   IF OUHEAD=F0C THEN/* TEST FOR NULL LIST          */
         L     @10,@PC00001                                        0062
         L     @04,OUHEAD(,@10)                                    0062
         LTR   @04,@04                                             0062
         BNZ   @RF00062                                            0062
*                     OUHEAD=OUWPTR;/* FIRST RECORD                  */
         ST    OUWPTR,OUHEAD(,@10)                                 0063
*                   ELSE                                           0064
*                     DO;           /* NON-NULL LIST                 */
         B     @RC00062                                            0064
@RF00062 DS    0H                                                  0065
*                       OUTAIL->MSGWNXT=OUWPTR;/* HOOK NEW RECORD TO
*                                      PREVIOUS RECORD               */
         L     @10,@PC00001                                        0065
         L     @10,OUTAIL(,@10)                                    0065
         ST    OUWPTR,MSGWNXT(,@10)                                0065
*                       MSGDBAK=OUTAIL-LENGTH(MSGDPRF);/* BACKCHAIN
*                                      PREVIOUS REC TO NEW REC       */
         SL    @10,@CF00051                                        0066
         ST    @10,MSGDBAK(,OUPTR)                                 0066
*                     END;          /* NON-NULL LIST                 */
*                   DHEAD=OUHEAD-LENGTH(MSGDPRF);                  0068
@RC00062 L     @10,@PC00001                                        0068
         L     DHEAD,OUHEAD(,@10)                                  0068
         SL    DHEAD,@CF00051                                      0068
*                   DHEAD->MSGDBAK=OUPTR;/* BACKCHAIN NEW REC TO HEAD*/
         ST    OUPTR,MSGDBAK(,DHEAD)                               0069
*                   OUTAIL=OUWPTR;  /* NEW LIST END                  */
         ST    OUWPTR,OUTAIL(,@10)                                 0070
*                 END;              /* GETMAIN OK, CHAIN RECORD TO 0071
*                                      LIST                          */
*             END;                  /* DATA SET OPEN FOR PUT         */
*         END;                      /* DO PUT FUNCTION               */
*       ELSE                                                       0074
*         DO;                       /* INVALID REQUEST OPCODE        */
         B     @RC00028                                            0074
@RF00028 DS    0H                                                  0075
*           OUECODE=OUECODE×XF10C;  /* INVALID OPCODE                */
         L     @10,@PC00001                                        0075
         OC    OUECODE(4,@10),@CB00183                             0075
*           OURCODE=SEVERE;         /* MARK ERROR                    */
         MVC   OURCODE(4,@10),@CF00053                             0076
*         END;                      /* INVALID REQUEST OPCODE        */
*                                                                  0077
*   /*****************************************************************/
*   /*                                                               */
*   /* FUNCTION COMPLETE, RETURN TO CALLER                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0078
*   RETURN CODE(OURCODE);                                          0078
@RC00028 DS    0H                                                  0078
@RC00019 DS    0H                                                  0078
@RC00010 L     @10,@PC00001                                        0078
         L     @10,OURCODE(,@10)                                   0078
         L     @13,4(,@13)                                         0078
         L     @00,@SIZDATD                                        0078
         LR    @01,@11                                             0078
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@10                                             0078
         L     @14,12(,@13)                                        0078
         LM    @00,@12,20(@13)                                     0078
         BR    @14                                                 0078
         EJECT
*                                                                  0079
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF EXECUTABLE PROCEDURE STATEMENTS                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0079
*/*BLSUPEND--MVS IPCS MODULE                                         */
*                                                                  0079
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                     0079
*     GPR01F FIXED(31) REG(1),                                     0079
*     GPR15F FIXED(31) REG(15),                                    0079
*     GPR01P PTR(31) REG(1);                                       0079
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0080
*     I031F FIXED(31) BASED,                                       0080
*     I031P PTR(31) BASED,                                         0080
*     I015F FIXED(15) BASED,                                       0080
*     I015P PTR(15) BASED,                                         0080
*     I008P PTR(8) BASED,                                          0080
*     I001C CHAR(1) BASED;                                         0080
*   GENERATE NODEFS NOREFS DATA;                                   0081
*   END                             /* BLRPEND THATS ALL FOLKS       */
*                                                                  0082
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (BLSDMSGD)                                       */
*                                                                  0082
*       ;                                                          0082
@EL00001 L     @13,4(,@13)                                         0082
@EF00001 L     @00,@SIZDATD                                        0082
         LR    @01,@11                                             0082
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0082
         BR    @14                                                 0082
@DATA    DS    0H
@SX00209 XC    MSGDENT(0,OUPTR),MSGDENT(OUPTR)
@SM00211 MVC   MSGDTXT(0,OUPTR),RECORD(@10)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
BLSCAMPR CSECT
         DS    0F
@CF00051 DC    F'8'
@CF00053 DC    F'12'
@CF00194 DC    F'256'
@CF00185 DC    XL4'FFFFFFF8'
@DATD    DSECT
         DS    0D
BLSCAMPR CSECT
         DS    0F
@SIZDATD DC    AL1(77)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00187 DC    C'SYSPRINT'
@CB00175 DC    X'00000001'
@CB00177 DC    X'00000002'
@CB00179 DC    X'00000004'
@CB00181 DC    X'00000008'
@CB00183 DC    X'00000010'
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSCAMPR CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSCAMPR+19)/20+7)/8)CL8'BLSCAMPR'
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSCAMPR CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
DHEAD    EQU   @03
OUFLEN   EQU   @06
SUBCODE  EQU   @07
OUWPTR   EQU   @02
OUPTR    EQU   @05
GPR01F   EQU   @01
GPR15F   EQU   @15
GPR00F   EQU   @00
GPR01P   EQU   @01
RECORD   EQU   0
MSGDENT  EQU   0
MSGDPRF  EQU   MSGDENT
MSGDSPID EQU   MSGDPRF
MSGDFLEN EQU   MSGDPRF+1
MSGDBAK  EQU   MSGDPRF+4
MSGDWRT  EQU   MSGDENT+8
MSGDMOV  EQU   MSGDWRT+4
MSGDLEN  EQU   MSGDMOV
MSGDTXT  EQU   MSGDMOV+4
MSGWENT  EQU   0
MSGWNXT  EQU   MSGWENT
MSGWMOV  EQU   MSGWENT+4
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
USERDATA EQU   0
OUHEAD   EQU   USERDATA
OUTAIL   EQU   USERDATA+8
OURCODE  EQU   USERDATA+12
OUECODE  EQU   USERDATA+16
OUOPNFL  EQU   OUECODE
IOFLAGS  EQU   0
IOOPN    EQU   IOFLAGS
FLAGS    EQU   IOFLAGS+1
OUTOPEN  EQU   FLAGS
DDIOINFO EQU   FLAGS
IOINFO   EQU   0
RECPTR   EQU   IOINFO
RECLEN   EQU   IOINFO+4
DNAME    EQU   IOINFO
DSNAME   EQU   IOINFO
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
PUTRECTY EQU   IOFLAGS+2
DSIOINFO EQU   FLAGS
INOPEN   EQU   FLAGS
LISTHD   EQU   USERDATA+20
INOPNFL  EQU   OUECODE
OUCUR    EQU   USERDATA+4
MSGWTXT  EQU   MSGWMOV+4
MSGWPAD  EQU   MSGWMOV+2
MSGWLEN  EQU   MSGWMOV
MSGDPAD  EQU   MSGDMOV+2
MSGDNXT  EQU   MSGDWRT
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00012 EQU   @RC00010
@RC00021 EQU   @RC00019
@RC00030 EQU   @RC00028
@RC00050 EQU   @RC00028
@ENDDATA EQU   *
         END   BLSCAMPR,(C'PLS1845',0701,78062)
