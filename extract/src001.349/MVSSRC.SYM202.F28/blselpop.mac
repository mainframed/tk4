         TITLE 'BUILD OUTPUT QUEUE                                     *
                        '
*           /*CHANGE ACTIVITY*/
*THIS MODULE IS WRITTEN FOR @G57LPMN
BLSELPOP CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'BLSELPOP  78.065'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         BLSUALLS R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(24),0(@01)                                 0002
*                                      STATUS FORMAT                 */
*                                                                  0172
*   /*****************************************************************/
*   /*                                                               */
*   /* START OF EXECUTABLE CODE                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0173
*   ZZ2PTR=ADDR(ZZ2PARM);           /* INITIALIZE ZZ2 POINTER        */
         L     ZZ2PTR,@PC00001                                     0173
*   RETC=ZERO;                      /* INITIALIZE THE RETURN         */
         SLR   RETC,RETC                                           0174
*   RETCDE=ZERO;                    /* CODES                         */
         SLR   RETCDE,RETCDE                                       0175
*   MAXRETC=ZERO;                                                  0176
         SLR   MAXRETC,MAXRETC                                     0176
*   ZZ1PDRP->DMCBMSG=ZERO;          /* SET MSG AREA PTR TO 0         */
*                                                                  0177
         SLR   @14,@14                                             0177
         L     @10,ZZ2ZZ1P(,ZZ2PTR)                                0177
         L     @10,ZZ1PDRP(,@10)                                   0177
         ST    @14,DMCBMSG(,@10)                                   0177
*   /*****************************************************************/
*   /*                                                               */
*   /* EXPAND THE PROBLEM OWNER FIELD INTO A FULL SEVEN CHARACTERS   */
*   /* FOR ALL OUTPUT FORMATS                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0178
*   FULLOWN=NULLOWN;                /* INITIALIZE FULL OWNER FIELD TO
*                                      BLANKS                        */
         MVC   FULLOWN(7),@CC01079                                 0178
*   FULLOWN(ONE:PDROWNLN)=PDROWNID; /* ASSIGN OWNER-ID TO FULL OWNER
*                                      FIELD                         */
*                                                                  0179
         L     @10,@PC00001+4                                      0179
         L     @10,STATPTR(,@10)                                   0179
         SLR   @06,@06                                             0179
         IC    @06,PDROWNLN(,@10)                                  0179
         BCTR  @06,0                                               0179
         EX    @06,@SM01351                                        0179
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS LIST AND ABSTRACT FORMATS                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0180
*   IF(LPLIST=ON                    /* IF LIST OR ABSTRACT           */
*       ×LPABST=ON) THEN                                           0180
         L     @10,@PC00001+8                                      0180
         L     @10,LPWAPTR(,@10)                                   0180
         TM    LPLIST(@10),B'11000000'                             0180
         BZ    @RF00180                                            0180
*     DO;                                                          0181
*       IF((PIDCOUNT^=ZERO)         /* IF NOT 1ST PROBLEM IN LIST    */
*           &((LPABST=ON)           /* & IN ABSTRACT FORMAT          */
*           ×(LPDSNAME=ON)))        /* OR IN DSNAMES FORMAT          */
*         THEN                                                     0182
         L     @06,@PC00001+16                                     0182
         C     @14,PIDCOUNT(,@06)                                  0182
         BE    @RF00182                                            0182
         TM    LPABST(@10),B'01001000'                             0182
         BZ    @RF00182                                            0182
*         DO;                                                      0183
*           DO;                     /* BLSDMSG (ZZ2PARM,BLANKID,DATAH
*                                      EAD,BLSDMSGS)                 */
*             CALL BLSDMSG0(ZZ2PARM,BLANKID,DATAHEAD,BLSDMSGS,     0185
*                 '00000000'B,0);   /* BUILD MESSAGE                 */
         L     @14,@PC00001                                        0185
         ST    @14,@AL00001                                        0185
         LA    @14,@CF01190                                        0185
         ST    @14,@AL00001+4                                      0185
         L     @14,@PC00001+12                                     0185
         ST    @14,@AL00001+8                                      0185
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0185
         ST    @14,@AL00001+12                                     0185
         LA    @14,@CB01204                                        0185
         ST    @14,@AL00001+16                                     0185
         LA    @14,@CF00057                                        0185
         ST    @14,@AL00001+20                                     0185
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0185
         LA    @01,@AL00001                                        0185
         BALR  @14,@15                                             0185
*           END;                    /* BLSDMSG (ZZ2PARM,BLANKID,DATAH
*                                      EAD,BLSDMSGS) THEN ADD A BLANK
*                                      LINE TO OUTPUT QUEUE          */
*           QUEUELNS=QUEUELNS+ONE;  /* INCREMENT # OF LINES IN THE 0187
*                                      OUTPUT QUEUE                  */
         L     @14,@PC00001+20                                     0187
         LA    @10,1                                               0187
         AL    @10,QUEUELNS(,@14)                                  0187
         ST    @10,QUEUELNS(,@14)                                  0187
*         END;                                                     0188
*       ELSE                                                       0189
*         ;                         /* CALCULATE LASTDATE FIELD      */
@RF00182 DS    0H                                                  0190
*       NEWPYEAR=PYEAR;             /* PUT PROBLEM STATUS DATES IN   */
         L     @14,@PC00001+4                                      0190
         L     @14,STATPTR(,@14)                                   0190
         MVC   NEWPYEAR(2),PYEAR(@14)                              0190
*       NEWPMO=PMO;                 /* CORRECT ORDER FOR COMPARISON  */
         MVC   NEWPMO(2),PMO(@14)                                  0191
*       NEWPDAY=PDAY;                                              0192
         MVC   NEWPDAY(2),PDAY(@14)                                0192
*       NEWIYEAR=IYEAR;             /* PUT IBM STATUS DATES IN ORDER */
         MVC   NEWIYEAR(2),IYEAR(@14)                              0193
*       NEWIMO=IMO;                                                0194
         MVC   NEWIMO(2),IMO(@14)                                  0194
*       NEWIDAY=IDAY;                                              0195
         MVC   NEWIDAY(2),IDAY(@14)                                0195
*       NEWTYEAR=TYEAR;             /* PUT PTF STATUS DATES IN ORDER */
         MVC   NEWTYEAR(2),TYEAR(@14)                              0196
*       NEWTMO=TMO;                                                0197
         MVC   NEWTMO(2),TMO(@14)                                  0197
*       NEWTDAY=TDAY;                                              0198
         MVC   NEWTDAY(2),TDAY(@14)                                0198
*       NEWFYEAR=FYEAR;             /* PUT FIX STATUS DATES IN ORDER */
         MVC   NEWFYEAR(2),FYEAR(@14)                              0199
*       NEWFMO=FMO;                                                0200
         MVC   NEWFMO(2),FMO(@14)                                  0200
*       NEWFDAY=FDAY;                                              0201
         MVC   NEWFDAY(2),FDAY(@14)                                0201
*       MAXDATE=NEWPDATE;           /* FIND MOST RECENT DATE USING   */
         MVC   MAXDATE(6),NEWPDATE                                 0202
*       IF NEWIDATE>MAXDATE         /* SERIES OF 'IF' STATEMENTS     */
*         THEN                                                     0203
         CLC   NEWIDATE(6),MAXDATE                                 0203
         BNH   @RF00203                                            0203
*         MAXDATE=NEWIDATE;                                        0204
         MVC   MAXDATE(6),NEWIDATE                                 0204
*       ELSE                                                       0205
*         ;                                                        0205
@RF00203 DS    0H                                                  0206
*       IF NEWTDATE>MAXDATE THEN                                   0206
         CLC   NEWTDATE(6),MAXDATE                                 0206
         BNH   @RF00206                                            0206
*         MAXDATE=NEWTDATE;                                        0207
         MVC   MAXDATE(6),NEWTDATE                                 0207
*       ELSE                                                       0208
*         ;                                                        0208
@RF00206 DS    0H                                                  0209
*       IF NEWFDATE>MAXDATE THEN                                   0209
         CLC   NEWFDATE(6),MAXDATE                                 0209
         BNH   @RF00209                                            0209
*         MAXDATE=NEWFDATE;                                        0210
         MVC   MAXDATE(6),NEWFDATE                                 0210
*       ELSE                                                       0211
*         ;                                                        0211
@RF00209 DS    0H                                                  0212
*       LASTMO=MAXMO;               /* PUT MOST RECENT DATE IN     0212
*                                      CORRECT                       */
         MVC   LASTMO(2),MAXMO                                     0212
*       LASTDAY=MAXDAY;             /* FORMAT FOR OUTPUTTING         */
         MVC   LASTDAY(2),MAXDAY                                   0213
*       LASTYEAR=MAXYEAR;                                          0214
         MVC   LASTYEAR(2),MAXYEAR                                 0214
*       IF MAXDATE^=NULLDATE        /* IF MOST RECENT DATE IS NOT  0215
*                                      NULL                          */
*         THEN                                                     0215
         CLC   MAXDATE(6),@CC01131                                 0215
         BE    @RF00215                                            0215
*         DO;                                                      0216
*           SLASH1=SLASH;           /* THEN INSERT SLASHES IN DATE   */
         MVI   SLASH1,C'/'                                         0217
*           SLASH2=SLASH;                                          0218
         MVI   SLASH2,C'/'                                         0218
*         END;                                                     0219
*       ELSE                                                       0220
*         DO;                       /* ELSE BLANK OUT SLASHES        */
         B     @RC00215                                            0220
@RF00215 DS    0H                                                  0221
*           SLASH1=BLANK;                                          0221
         MVI   SLASH1,C' '                                         0221
*           SLASH2=BLANK;                                          0222
         MVI   SLASH2,C' '                                         0222
*         END;                                                     0223
*       DO;                         /* BLSDMSG (ZZ2PARM,LISTID,DATAHE
*                                      AD,BLSDMSGS) NOCOMP INSERT(FPP
*                                      IDP,PDRKPNUM,PDRODATE,PDRSEV,P
*                                      DRCOMP,FULLOWN,PDRPSTAT,PDRIST
*                                      AT,PDRTSTAT,PDRFSTAT,LASTDATE)*/
@RC00215 DS    0H                                                  0225
*         IOPTLIST(1)=ADDR(IOPTLIST(4));/* CHAIN TO NEXT INSERT      */
         LA    @14,IOPTLIST+12                                     0225
         ST    @14,IOPTLIST                                        0225
*         IOPTLIST(2)=ADDR(FPPIDP); /* INSERT NAME POINTER           */
         L     @14,ZZ2ZZ1P(,ZZ2PTR)                                0226
         L     @14,ZZ1FPP(,@14)                                    0226
         LA    @14,FPPIDP(,@14)                                    0226
         ST    @14,IOPTLIST+4                                      0226
*         IOPTLIST(3)=0;            /* ZERO RESERVED FIELD           */
         SLR   @14,@14                                             0227
         ST    @14,IOPTLIST+8                                      0227
*         RFY                                                      0228
*           I015F BASED(ADDR(IOPTLIST(3)));/* ACCESS BYTES 1-2       */
*         I015F=LENGTH(FPPIDP);     /* INSERT LENGTH                 */
         LA    @10,IOPTLIST+8                                      0229
         MVC   I015F(2,@10),@CH00105                               0229
*         IOPTLIST(4)=ADDR(IOPTLIST(7));/* CHAIN TO NEXT INSERT      */
         LA    @10,IOPTLIST+24                                     0230
         ST    @10,IOPTLIST+12                                     0230
*         IOPTLIST(5)=ADDR(PDRKPNUM);/* INSERT NAME POINTER          */
         L     @10,@PC00001+4                                      0231
         L     @10,STATPTR(,@10)                                   0231
         LA    @06,PDRKPNUM(,@10)                                  0231
         ST    @06,IOPTLIST+16                                     0231
*         IOPTLIST(6)=0;            /* ZERO RESERVED FIELD           */
         ST    @14,IOPTLIST+20                                     0232
*         RFY                                                      0233
*           I015F BASED(ADDR(IOPTLIST(6)));/* ACCESS BYTES 1-2       */
*         I015F=LENGTH(PDRKPNUM);   /* INSERT LENGTH                 */
         LA    @06,IOPTLIST+20                                     0234
         MVC   I015F(2,@06),@CH00102                               0234
*         IOPTLIST(7)=ADDR(IOPTLIST(10));/* CHAIN TO NEXT INSERT     */
         LA    @06,IOPTLIST+36                                     0235
         ST    @06,IOPTLIST+24                                     0235
*         IOPTLIST(8)=ADDR(PDRODATE);/* INSERT NAME POINTER          */
         LA    @06,PDRODATE(,@10)                                  0236
         ST    @06,IOPTLIST+28                                     0236
*         IOPTLIST(9)=0;            /* ZERO RESERVED FIELD           */
         ST    @14,IOPTLIST+32                                     0237
*         RFY                                                      0238
*           I015F BASED(ADDR(IOPTLIST(9)));/* ACCESS BYTES 1-2       */
*         I015F=LENGTH(PDRODATE);   /* INSERT LENGTH                 */
         LA    @06,8                                               0239
         LA    @04,IOPTLIST+32                                     0239
         STH   @06,I015F(,@04)                                     0239
*         IOPTLIST(10)=ADDR(IOPTLIST(13));/* CHAIN TO NEXT INSERT    */
         LA    @04,IOPTLIST+48                                     0240
         ST    @04,IOPTLIST+36                                     0240
*         IOPTLIST(11)=ADDR(PDRSEV);/* INSERT NAME POINTER           */
         LA    @04,PDRSEV(,@10)                                    0241
         ST    @04,IOPTLIST+40                                     0241
*         IOPTLIST(12)=0;           /* ZERO RESERVED FIELD           */
         ST    @14,IOPTLIST+44                                     0242
*         RFY                                                      0243
*           I015F BASED(ADDR(IOPTLIST(12)));/* ACCESS BYTES 1-2      */
*         I015F=LENGTH(PDRSEV);     /* INSERT LENGTH                 */
         LA    @04,IOPTLIST+44                                     0244
         MVC   I015F(2,@04),@CH00052                               0244
*         IOPTLIST(13)=ADDR(IOPTLIST(16));/* CHAIN TO NEXT INSERT    */
         LA    @04,IOPTLIST+60                                     0245
         ST    @04,IOPTLIST+48                                     0245
*         IOPTLIST(14)=ADDR(PDRCOMP);/* INSERT NAME POINTER          */
         LA    @04,PDRCOMP(,@10)                                   0246
         ST    @04,IOPTLIST+52                                     0246
*         IOPTLIST(15)=0;           /* ZERO RESERVED FIELD           */
         ST    @14,IOPTLIST+56                                     0247
*         RFY                                                      0248
*           I015F BASED(ADDR(IOPTLIST(15)));/* ACCESS BYTES 1-2      */
*         I015F=LENGTH(PDRCOMP);    /* INSERT LENGTH                 */
         LA    @04,IOPTLIST+56                                     0249
         MVC   I015F(2,@04),@CH00633                               0249
*         IOPTLIST(16)=ADDR(IOPTLIST(19));/* CHAIN TO NEXT INSERT    */
         LA    @04,IOPTLIST+72                                     0250
         ST    @04,IOPTLIST+60                                     0250
*         IOPTLIST(17)=ADDR(FULLOWN);/* INSERT NAME POINTER          */
         LA    @04,FULLOWN                                         0251
         ST    @04,IOPTLIST+64                                     0251
*         IOPTLIST(18)=0;           /* ZERO RESERVED FIELD           */
         ST    @14,IOPTLIST+68                                     0252
*         RFY                                                      0253
*           I015F BASED(ADDR(IOPTLIST(18)));/* ACCESS BYTES 1-2      */
*         I015F=LENGTH(FULLOWN);    /* INSERT LENGTH                 */
         LA    @04,IOPTLIST+68                                     0254
         MVC   I015F(2,@04),@CH00168                               0254
*         IOPTLIST(19)=ADDR(IOPTLIST(22));/* CHAIN TO NEXT INSERT    */
         LA    @04,IOPTLIST+84                                     0255
         ST    @04,IOPTLIST+72                                     0255
*         IOPTLIST(20)=ADDR(PDRPSTAT);/* INSERT NAME POINTER         */
         LA    @04,PDRPSTAT(,@10)                                  0256
         ST    @04,IOPTLIST+76                                     0256
*         IOPTLIST(21)=0;           /* ZERO RESERVED FIELD           */
         ST    @14,IOPTLIST+80                                     0257
*         RFY                                                      0258
*           I015F BASED(ADDR(IOPTLIST(21)));/* ACCESS BYTES 1-2      */
*         I015F=LENGTH(PDRPSTAT);   /* INSERT LENGTH                 */
         LA    @04,IOPTLIST+80                                     0259
         STH   @06,I015F(,@04)                                     0259
*         IOPTLIST(22)=ADDR(IOPTLIST(25));/* CHAIN TO NEXT INSERT    */
         LA    @04,IOPTLIST+96                                     0260
         ST    @04,IOPTLIST+84                                     0260
*         IOPTLIST(23)=ADDR(PDRISTAT);/* INSERT NAME POINTER         */
         LA    @04,PDRISTAT(,@10)                                  0261
         ST    @04,IOPTLIST+88                                     0261
*         IOPTLIST(24)=0;           /* ZERO RESERVED FIELD           */
         ST    @14,IOPTLIST+92                                     0262
*         RFY                                                      0263
*           I015F BASED(ADDR(IOPTLIST(24)));/* ACCESS BYTES 1-2      */
*         I015F=LENGTH(PDRISTAT);   /* INSERT LENGTH                 */
         LA    @04,IOPTLIST+92                                     0264
         STH   @06,I015F(,@04)                                     0264
*         IOPTLIST(25)=ADDR(IOPTLIST(28));/* CHAIN TO NEXT INSERT    */
         LA    @04,IOPTLIST+108                                    0265
         ST    @04,IOPTLIST+96                                     0265
*         IOPTLIST(26)=ADDR(PDRTSTAT);/* INSERT NAME POINTER         */
         LA    @04,PDRTSTAT(,@10)                                  0266
         ST    @04,IOPTLIST+100                                    0266
*         IOPTLIST(27)=0;           /* ZERO RESERVED FIELD           */
         ST    @14,IOPTLIST+104                                    0267
*         RFY                                                      0268
*           I015F BASED(ADDR(IOPTLIST(27)));/* ACCESS BYTES 1-2      */
*         I015F=LENGTH(PDRTSTAT);   /* INSERT LENGTH                 */
         LA    @04,4                                               0269
         LA    @09,IOPTLIST+104                                    0269
         STH   @04,I015F(,@09)                                     0269
*         IOPTLIST(28)=ADDR(IOPTLIST(31));/* CHAIN TO NEXT INSERT    */
         LA    @09,IOPTLIST+120                                    0270
         ST    @09,IOPTLIST+108                                    0270
*         IOPTLIST(29)=ADDR(PDRFSTAT);/* INSERT NAME POINTER         */
         LA    @10,PDRFSTAT(,@10)                                  0271
         ST    @10,IOPTLIST+112                                    0271
*         IOPTLIST(30)=0;           /* ZERO RESERVED FIELD           */
         ST    @14,IOPTLIST+116                                    0272
*         RFY                                                      0273
*           I015F BASED(ADDR(IOPTLIST(30)));/* ACCESS BYTES 1-2      */
*         I015F=LENGTH(PDRFSTAT);   /* INSERT LENGTH                 */
         LA    @10,IOPTLIST+116                                    0274
         STH   @04,I015F(,@10)                                     0274
*         IOPTLIST(31)=0;           /* LAST INSERT                   */
         ST    @14,IOPTLIST+120                                    0275
*         IOPTLIST(32)=ADDR(LASTDATE);/* INSERT NAME POINTER         */
         LA    @10,LASTDATE                                        0276
         ST    @10,IOPTLIST+124                                    0276
*         IOPTLIST(33)=0;           /* ZERO RESERVED FIELD           */
         ST    @14,IOPTLIST+128                                    0277
*         RFY                                                      0278
*           I015F BASED(ADDR(IOPTLIST(33)));/* ACCESS BYTES 1-2      */
*         I015F=LENGTH(LASTDATE);   /* INSERT LENGTH                 */
         LA    @14,IOPTLIST+128                                    0279
         STH   @06,I015F(,@14)                                     0279
*         CALL BLSDMSG0(ZZ2PARM,LISTID,DATAHEAD,BLSDMSGS,'01000000'B,
*             ADDR(IOPTLIST));      /* BUILD MESSAGE                 */
         L     @14,@PC00001                                        0280
         ST    @14,@AL00001                                        0280
         LA    @14,@CF01166                                        0280
         ST    @14,@AL00001+4                                      0280
         L     @14,@PC00001+12                                     0280
         ST    @14,@AL00001+8                                      0280
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0280
         ST    @14,@AL00001+12                                     0280
         LA    @14,@CB01243                                        0280
         ST    @14,@AL00001+16                                     0280
         LA    @14,IOPTLIST                                        0280
         ST    @14,@AFTEMPS                                        0280
         LA    @14,@AFTEMPS                                        0280
         ST    @14,@AL00001+20                                     0280
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0280
         LA    @01,@AL00001                                        0280
         BALR  @14,@15                                             0280
*       END;                        /* BLSDMSG (ZZ2PARM,LISTID,DATAHE
*                                      AD,BLSDMSGS) NOCOMP INSERT(FPP
*                                      IDP,PDRKPNUM,PDRODATE,PDRSEV,P
*                                      DRCOMP,FULLOWN,PDRPSTAT,PDRIST
*                                      AT,PDRTSTAT,PDRFSTAT,LASTDATE)*/
*                                                                  0281
*       /*************************************************************/
*       /*                                                           */
*       /* ADD LINE OF DATA TO OUTPUT QUEUE IN LIST FORMAT           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0282
*       QUEUELNS=QUEUELNS+ONE;      /* INCREMENT # OF LINES IN THE 0282
*                                      OUTPUT QUEUE                  */
         L     @14,@PC00001+20                                     0282
         LA    @10,1                                               0282
         AL    @10,QUEUELNS(,@14)                                  0282
         ST    @10,QUEUELNS(,@14)                                  0282
*     END;                                                         0283
*                                                                  0283
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS STATUS AND DESCRIPTION FORMATS                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0284
*   ELSE                                                           0284
*     IF(LPSTAT=ON                  /* IF STATUS FORMAT OR           */
*         ×LPDESC=ON)               /* DESCRIPTION FORMAT            */
*       THEN                                                       0284
         B     @RC00180                                            0284
@RF00180 L     @14,@PC00001+8                                      0284
         L     @14,LPWAPTR(,@14)                                   0284
         TM    LPSTAT(@14),B'00110000'                             0284
         BZ    @RF00284                                            0284
*       DO;                         /* ADD 7 LINES OF PROBLEM DATA TO
*                                      THE OUTPUT QUEUE              */
*         DO;                       /* BLSDMSG (ZZ2PARM,STAT1ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP INSERT(FP
*                                      PIDP,PDRKPNUM,PDRODATE,PDROTIM
*                                      E,PDRCOMP)                    */
*           IOPTLIST(1)=ADDR(IOPTLIST(4));/* CHAIN TO NEXT INSERT    */
         LA    @14,IOPTLIST+12                                     0287
         ST    @14,IOPTLIST                                        0287
*           IOPTLIST(2)=ADDR(FPPIDP);/* INSERT NAME POINTER          */
         L     @14,ZZ2ZZ1P(,ZZ2PTR)                                0288
         L     @14,ZZ1FPP(,@14)                                    0288
         LA    @14,FPPIDP(,@14)                                    0288
         ST    @14,IOPTLIST+4                                      0288
*           IOPTLIST(3)=0;          /* ZERO RESERVED FIELD           */
         SLR   @14,@14                                             0289
         ST    @14,IOPTLIST+8                                      0289
*           RFY                                                    0290
*             I015F BASED(ADDR(IOPTLIST(3)));/* ACCESS BYTES 1-2     */
*           I015F=LENGTH(FPPIDP);   /* INSERT LENGTH                 */
         LA    @10,IOPTLIST+8                                      0291
         MVC   I015F(2,@10),@CH00105                               0291
*           IOPTLIST(4)=ADDR(IOPTLIST(7));/* CHAIN TO NEXT INSERT    */
         LA    @10,IOPTLIST+24                                     0292
         ST    @10,IOPTLIST+12                                     0292
*           IOPTLIST(5)=ADDR(PDRKPNUM);/* INSERT NAME POINTER        */
         L     @10,@PC00001+4                                      0293
         L     @10,STATPTR(,@10)                                   0293
         LA    @06,PDRKPNUM(,@10)                                  0293
         ST    @06,IOPTLIST+16                                     0293
*           IOPTLIST(6)=0;          /* ZERO RESERVED FIELD           */
         ST    @14,IOPTLIST+20                                     0294
*           RFY                                                    0295
*             I015F BASED(ADDR(IOPTLIST(6)));/* ACCESS BYTES 1-2     */
*           I015F=LENGTH(PDRKPNUM); /* INSERT LENGTH                 */
         LA    @06,IOPTLIST+20                                     0296
         MVC   I015F(2,@06),@CH00102                               0296
*           IOPTLIST(7)=ADDR(IOPTLIST(10));/* CHAIN TO NEXT INSERT   */
         LA    @06,IOPTLIST+36                                     0297
         ST    @06,IOPTLIST+24                                     0297
*           IOPTLIST(8)=ADDR(PDRODATE);/* INSERT NAME POINTER        */
         LA    @06,PDRODATE(,@10)                                  0298
         ST    @06,IOPTLIST+28                                     0298
*           IOPTLIST(9)=0;          /* ZERO RESERVED FIELD           */
         ST    @14,IOPTLIST+32                                     0299
*           RFY                                                    0300
*             I015F BASED(ADDR(IOPTLIST(9)));/* ACCESS BYTES 1-2     */
*           I015F=LENGTH(PDRODATE); /* INSERT LENGTH                 */
         LA    @06,8                                               0301
         LA    @04,IOPTLIST+32                                     0301
         STH   @06,I015F(,@04)                                     0301
*           IOPTLIST(10)=ADDR(IOPTLIST(13));/* CHAIN TO NEXT INSERT  */
         LA    @04,IOPTLIST+48                                     0302
         ST    @04,IOPTLIST+36                                     0302
*           IOPTLIST(11)=ADDR(PDROTIME);/* INSERT NAME POINTER       */
         LA    @04,PDROTIME(,@10)                                  0303
         ST    @04,IOPTLIST+40                                     0303
*           IOPTLIST(12)=0;         /* ZERO RESERVED FIELD           */
         ST    @14,IOPTLIST+44                                     0304
*           RFY                                                    0305
*             I015F BASED(ADDR(IOPTLIST(12)));/* ACCESS BYTES 1-2    */
*           I015F=LENGTH(PDROTIME); /* INSERT LENGTH                 */
         LA    @04,IOPTLIST+44                                     0306
         STH   @06,I015F(,@04)                                     0306
*           IOPTLIST(13)=0;         /* LAST INSERT                   */
         ST    @14,IOPTLIST+48                                     0307
*           IOPTLIST(14)=ADDR(PDRCOMP);/* INSERT NAME POINTER        */
         LA    @10,PDRCOMP(,@10)                                   0308
         ST    @10,IOPTLIST+52                                     0308
*           IOPTLIST(15)=0;         /* ZERO RESERVED FIELD           */
         ST    @14,IOPTLIST+56                                     0309
*           RFY                                                    0310
*             I015F BASED(ADDR(IOPTLIST(15)));/* ACCESS BYTES 1-2    */
*           I015F=LENGTH(PDRCOMP);  /* INSERT LENGTH                 */
         LA    @14,IOPTLIST+56                                     0311
         MVC   I015F(2,@14),@CH00633                               0311
*           CALL BLSDMSG0(ZZ2PARM,STAT1ID,DATAHEAD,BLSDMSGS,'01000000'B
*               ,ADDR(IOPTLIST));   /* BUILD MESSAGE                 */
         L     @14,@PC00001                                        0312
         ST    @14,@AL00001                                        0312
         LA    @14,@CF01172                                        0312
         ST    @14,@AL00001+4                                      0312
         L     @14,@PC00001+12                                     0312
         ST    @14,@AL00001+8                                      0312
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0312
         ST    @14,@AL00001+12                                     0312
         LA    @14,@CB01243                                        0312
         ST    @14,@AL00001+16                                     0312
         LA    @14,IOPTLIST                                        0312
         ST    @14,@AFTEMPS                                        0312
         LA    @14,@AFTEMPS                                        0312
         ST    @14,@AL00001+20                                     0312
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0312
         LA    @01,@AL00001                                        0312
         BALR  @14,@15                                             0312
*         END;                      /* BLSDMSG (ZZ2PARM,STAT1ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP INSERT(FP
*                                      PIDP,PDRKPNUM,PDRODATE,PDROTIM
*                                      E,PDRCOMP)                    */
*         DO;                       /* BLSDMSG (ZZ2PARM,STAT2ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP INSERT(PD
*                                      RSEV,FULLOWN,PDRGROUP,PDRSYS) */
*           IOPTLIST(1)=ADDR(IOPTLIST(4));/* CHAIN TO NEXT INSERT    */
         LA    @14,IOPTLIST+12                                     0315
         ST    @14,IOPTLIST                                        0315
*           IOPTLIST(2)=ADDR(PDRSEV);/* INSERT NAME POINTER          */
         L     @14,@PC00001+4                                      0316
         L     @14,STATPTR(,@14)                                   0316
         LA    @10,PDRSEV(,@14)                                    0316
         ST    @10,IOPTLIST+4                                      0316
*           IOPTLIST(3)=0;          /* ZERO RESERVED FIELD           */
         SLR   @10,@10                                             0317
         ST    @10,IOPTLIST+8                                      0317
*           RFY                                                    0318
*             I015F BASED(ADDR(IOPTLIST(3)));/* ACCESS BYTES 1-2     */
*           I015F=LENGTH(PDRSEV);   /* INSERT LENGTH                 */
         LA    @06,IOPTLIST+8                                      0319
         MVC   I015F(2,@06),@CH00052                               0319
*           IOPTLIST(4)=ADDR(IOPTLIST(7));/* CHAIN TO NEXT INSERT    */
         LA    @06,IOPTLIST+24                                     0320
         ST    @06,IOPTLIST+12                                     0320
*           IOPTLIST(5)=ADDR(FULLOWN);/* INSERT NAME POINTER         */
         LA    @06,FULLOWN                                         0321
         ST    @06,IOPTLIST+16                                     0321
*           IOPTLIST(6)=0;          /* ZERO RESERVED FIELD           */
         ST    @10,IOPTLIST+20                                     0322
*           RFY                                                    0323
*             I015F BASED(ADDR(IOPTLIST(6)));/* ACCESS BYTES 1-2     */
*           I015F=LENGTH(FULLOWN);  /* INSERT LENGTH                 */
         LA    @06,IOPTLIST+20                                     0324
         MVC   I015F(2,@06),@CH00168                               0324
*           IOPTLIST(7)=ADDR(IOPTLIST(10));/* CHAIN TO NEXT INSERT   */
         LA    @06,IOPTLIST+36                                     0325
         ST    @06,IOPTLIST+24                                     0325
*           IOPTLIST(8)=ADDR(PDRGROUP);/* INSERT NAME POINTER        */
         LA    @06,PDRGROUP(,@14)                                  0326
         ST    @06,IOPTLIST+28                                     0326
*           IOPTLIST(9)=0;          /* ZERO RESERVED FIELD           */
         ST    @10,IOPTLIST+32                                     0327
*           RFY                                                    0328
*             I015F BASED(ADDR(IOPTLIST(9)));/* ACCESS BYTES 1-2     */
*           I015F=LENGTH(PDRGROUP); /* INSERT LENGTH                 */
         LA    @06,8                                               0329
         LA    @04,IOPTLIST+32                                     0329
         STH   @06,I015F(,@04)                                     0329
*           IOPTLIST(10)=0;         /* LAST INSERT                   */
         ST    @10,IOPTLIST+36                                     0330
*           IOPTLIST(11)=ADDR(PDRSYS);/* INSERT NAME POINTER         */
         LA    @14,PDRSYS(,@14)                                    0331
         ST    @14,IOPTLIST+40                                     0331
*           IOPTLIST(12)=0;         /* ZERO RESERVED FIELD           */
         ST    @10,IOPTLIST+44                                     0332
*           RFY                                                    0333
*             I015F BASED(ADDR(IOPTLIST(12)));/* ACCESS BYTES 1-2    */
*           I015F=LENGTH(PDRSYS);   /* INSERT LENGTH                 */
         LA    @14,IOPTLIST+44                                     0334
         STH   @06,I015F(,@14)                                     0334
*           CALL BLSDMSG0(ZZ2PARM,STAT2ID,DATAHEAD,BLSDMSGS,'01000000'B
*               ,ADDR(IOPTLIST));   /* BUILD MESSAGE                 */
         L     @14,@PC00001                                        0335
         ST    @14,@AL00001                                        0335
         LA    @14,@CF01174                                        0335
         ST    @14,@AL00001+4                                      0335
         L     @14,@PC00001+12                                     0335
         ST    @14,@AL00001+8                                      0335
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0335
         ST    @14,@AL00001+12                                     0335
         LA    @14,@CB01243                                        0335
         ST    @14,@AL00001+16                                     0335
         LA    @14,IOPTLIST                                        0335
         ST    @14,@AFTEMPS                                        0335
         LA    @14,@AFTEMPS                                        0335
         ST    @14,@AL00001+20                                     0335
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0335
         LA    @01,@AL00001                                        0335
         BALR  @14,@15                                             0335
*         END;                      /* BLSDMSG (ZZ2PARM,STAT2ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP INSERT(PD
*                                      RSEV,FULLOWN,PDRGROUP,PDRSYS) */
*         DO;                       /* BLSDMSG (ZZ2PARM,STAT3ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP INSERT(PD
*                                      RPSTAT,PDRPDATE,PDRPTIME,PDRRD
*                                      ATE,PDRRTIME)                 */
*           IOPTLIST(1)=ADDR(IOPTLIST(4));/* CHAIN TO NEXT INSERT    */
         LA    @14,IOPTLIST+12                                     0338
         ST    @14,IOPTLIST                                        0338
*           IOPTLIST(2)=ADDR(PDRPSTAT);/* INSERT NAME POINTER        */
         L     @14,@PC00001+4                                      0339
         L     @14,STATPTR(,@14)                                   0339
         LA    @10,PDRPSTAT(,@14)                                  0339
         ST    @10,IOPTLIST+4                                      0339
*           IOPTLIST(3)=0;          /* ZERO RESERVED FIELD           */
         SLR   @10,@10                                             0340
         ST    @10,IOPTLIST+8                                      0340
*           RFY                                                    0341
*             I015F BASED(ADDR(IOPTLIST(3)));/* ACCESS BYTES 1-2     */
*           I015F=LENGTH(PDRPSTAT); /* INSERT LENGTH                 */
         LA    @06,8                                               0342
         LA    @04,IOPTLIST+8                                      0342
         STH   @06,I015F(,@04)                                     0342
*           IOPTLIST(4)=ADDR(IOPTLIST(7));/* CHAIN TO NEXT INSERT    */
         LA    @04,IOPTLIST+24                                     0343
         ST    @04,IOPTLIST+12                                     0343
*           IOPTLIST(5)=ADDR(PDRPDATE);/* INSERT NAME POINTER        */
         LA    @04,PDRPDATE(,@14)                                  0344
         ST    @04,IOPTLIST+16                                     0344
*           IOPTLIST(6)=0;          /* ZERO RESERVED FIELD           */
         ST    @10,IOPTLIST+20                                     0345
*           RFY                                                    0346
*             I015F BASED(ADDR(IOPTLIST(6)));/* ACCESS BYTES 1-2     */
*           I015F=LENGTH(PDRPDATE); /* INSERT LENGTH                 */
         LA    @04,IOPTLIST+20                                     0347
         STH   @06,I015F(,@04)                                     0347
*           IOPTLIST(7)=ADDR(IOPTLIST(10));/* CHAIN TO NEXT INSERT   */
         LA    @04,IOPTLIST+36                                     0348
         ST    @04,IOPTLIST+24                                     0348
*           IOPTLIST(8)=ADDR(PDRPTIME);/* INSERT NAME POINTER        */
         LA    @04,PDRPTIME(,@14)                                  0349
         ST    @04,IOPTLIST+28                                     0349
*           IOPTLIST(9)=0;          /* ZERO RESERVED FIELD           */
         ST    @10,IOPTLIST+32                                     0350
*           RFY                                                    0351
*             I015F BASED(ADDR(IOPTLIST(9)));/* ACCESS BYTES 1-2     */
*           I015F=LENGTH(PDRPTIME); /* INSERT LENGTH                 */
         LA    @04,IOPTLIST+32                                     0352
         STH   @06,I015F(,@04)                                     0352
*           IOPTLIST(10)=ADDR(IOPTLIST(13));/* CHAIN TO NEXT INSERT  */
         LA    @04,IOPTLIST+48                                     0353
         ST    @04,IOPTLIST+36                                     0353
*           IOPTLIST(11)=ADDR(PDRRDATE);/* INSERT NAME POINTER       */
         LA    @04,PDRRDATE(,@14)                                  0354
         ST    @04,IOPTLIST+40                                     0354
*           IOPTLIST(12)=0;         /* ZERO RESERVED FIELD           */
         ST    @10,IOPTLIST+44                                     0355
*           RFY                                                    0356
*             I015F BASED(ADDR(IOPTLIST(12)));/* ACCESS BYTES 1-2    */
*           I015F=LENGTH(PDRRDATE); /* INSERT LENGTH                 */
         LA    @04,IOPTLIST+44                                     0357
         STH   @06,I015F(,@04)                                     0357
*           IOPTLIST(13)=0;         /* LAST INSERT                   */
         ST    @10,IOPTLIST+48                                     0358
*           IOPTLIST(14)=ADDR(PDRRTIME);/* INSERT NAME POINTER       */
         LA    @14,PDRRTIME(,@14)                                  0359
         ST    @14,IOPTLIST+52                                     0359
*           IOPTLIST(15)=0;         /* ZERO RESERVED FIELD           */
         ST    @10,IOPTLIST+56                                     0360
*           RFY                                                    0361
*             I015F BASED(ADDR(IOPTLIST(15)));/* ACCESS BYTES 1-2    */
*           I015F=LENGTH(PDRRTIME); /* INSERT LENGTH                 */
         LA    @14,IOPTLIST+56                                     0362
         STH   @06,I015F(,@14)                                     0362
*           CALL BLSDMSG0(ZZ2PARM,STAT3ID,DATAHEAD,BLSDMSGS,'01000000'B
*               ,ADDR(IOPTLIST));   /* BUILD MESSAGE                 */
         L     @14,@PC00001                                        0363
         ST    @14,@AL00001                                        0363
         LA    @14,@CF01176                                        0363
         ST    @14,@AL00001+4                                      0363
         L     @14,@PC00001+12                                     0363
         ST    @14,@AL00001+8                                      0363
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0363
         ST    @14,@AL00001+12                                     0363
         LA    @14,@CB01243                                        0363
         ST    @14,@AL00001+16                                     0363
         LA    @14,IOPTLIST                                        0363
         ST    @14,@AFTEMPS                                        0363
         LA    @14,@AFTEMPS                                        0363
         ST    @14,@AL00001+20                                     0363
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0363
         LA    @01,@AL00001                                        0363
         BALR  @14,@15                                             0363
*         END;                      /* BLSDMSG (ZZ2PARM,STAT3ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP INSERT(PD
*                                      RPSTAT,PDRPDATE,PDRPTIME,PDRRD
*                                      ATE,PDRRTIME)                 */
*         DO;                       /* BLSDMSG (ZZ2PARM,STAT4ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP INSERT(PD
*                                      RISTAT,PDRIDATE,PDRITIME,PDRAP
*                                      RID)                          */
*           IOPTLIST(1)=ADDR(IOPTLIST(4));/* CHAIN TO NEXT INSERT    */
         LA    @14,IOPTLIST+12                                     0366
         ST    @14,IOPTLIST                                        0366
*           IOPTLIST(2)=ADDR(PDRISTAT);/* INSERT NAME POINTER        */
         L     @14,@PC00001+4                                      0367
         L     @14,STATPTR(,@14)                                   0367
         LA    @10,PDRISTAT(,@14)                                  0367
         ST    @10,IOPTLIST+4                                      0367
*           IOPTLIST(3)=0;          /* ZERO RESERVED FIELD           */
         SLR   @10,@10                                             0368
         ST    @10,IOPTLIST+8                                      0368
*           RFY                                                    0369
*             I015F BASED(ADDR(IOPTLIST(3)));/* ACCESS BYTES 1-2     */
*           I015F=LENGTH(PDRISTAT); /* INSERT LENGTH                 */
         LA    @06,8                                               0370
         LA    @04,IOPTLIST+8                                      0370
         STH   @06,I015F(,@04)                                     0370
*           IOPTLIST(4)=ADDR(IOPTLIST(7));/* CHAIN TO NEXT INSERT    */
         LA    @04,IOPTLIST+24                                     0371
         ST    @04,IOPTLIST+12                                     0371
*           IOPTLIST(5)=ADDR(PDRIDATE);/* INSERT NAME POINTER        */
         LA    @04,PDRIDATE(,@14)                                  0372
         ST    @04,IOPTLIST+16                                     0372
*           IOPTLIST(6)=0;          /* ZERO RESERVED FIELD           */
         ST    @10,IOPTLIST+20                                     0373
*           RFY                                                    0374
*             I015F BASED(ADDR(IOPTLIST(6)));/* ACCESS BYTES 1-2     */
*           I015F=LENGTH(PDRIDATE); /* INSERT LENGTH                 */
         LA    @04,IOPTLIST+20                                     0375
         STH   @06,I015F(,@04)                                     0375
*           IOPTLIST(7)=ADDR(IOPTLIST(10));/* CHAIN TO NEXT INSERT   */
         LA    @04,IOPTLIST+36                                     0376
         ST    @04,IOPTLIST+24                                     0376
*           IOPTLIST(8)=ADDR(PDRITIME);/* INSERT NAME POINTER        */
         LA    @04,PDRITIME(,@14)                                  0377
         ST    @04,IOPTLIST+28                                     0377
*           IOPTLIST(9)=0;          /* ZERO RESERVED FIELD           */
         ST    @10,IOPTLIST+32                                     0378
*           RFY                                                    0379
*             I015F BASED(ADDR(IOPTLIST(9)));/* ACCESS BYTES 1-2     */
*           I015F=LENGTH(PDRITIME); /* INSERT LENGTH                 */
         LA    @04,IOPTLIST+32                                     0380
         STH   @06,I015F(,@04)                                     0380
*           IOPTLIST(10)=0;         /* LAST INSERT                   */
         ST    @10,IOPTLIST+36                                     0381
*           IOPTLIST(11)=ADDR(PDRAPRID);/* INSERT NAME POINTER       */
         LA    @14,PDRAPRID(,@14)                                  0382
         ST    @14,IOPTLIST+40                                     0382
*           IOPTLIST(12)=0;         /* ZERO RESERVED FIELD           */
         ST    @10,IOPTLIST+44                                     0383
*           RFY                                                    0384
*             I015F BASED(ADDR(IOPTLIST(12)));/* ACCESS BYTES 1-2    */
*           I015F=LENGTH(PDRAPRID); /* INSERT LENGTH                 */
         LA    @14,IOPTLIST+44                                     0385
         MVC   I015F(2,@14),@CH00168                               0385
*           CALL BLSDMSG0(ZZ2PARM,STAT4ID,DATAHEAD,BLSDMSGS,'01000000'B
*               ,ADDR(IOPTLIST));   /* BUILD MESSAGE                 */
         L     @14,@PC00001                                        0386
         ST    @14,@AL00001                                        0386
         LA    @14,@CF01178                                        0386
         ST    @14,@AL00001+4                                      0386
         L     @14,@PC00001+12                                     0386
         ST    @14,@AL00001+8                                      0386
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0386
         ST    @14,@AL00001+12                                     0386
         LA    @14,@CB01243                                        0386
         ST    @14,@AL00001+16                                     0386
         LA    @14,IOPTLIST                                        0386
         ST    @14,@AFTEMPS                                        0386
         LA    @14,@AFTEMPS                                        0386
         ST    @14,@AL00001+20                                     0386
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0386
         LA    @01,@AL00001                                        0386
         BALR  @14,@15                                             0386
*         END;                      /* BLSDMSG (ZZ2PARM,STAT4ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP INSERT(PD
*                                      RISTAT,PDRIDATE,PDRITIME,PDRAP
*                                      RID)                          */
*         DO;                       /* BLSDMSG (ZZ2PARM,STAT5ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP INSERT(PD
*                                      RTSTAT,PDRTDATE,PDRTTIME,PDRPT
*                                      FID)                          */
*           IOPTLIST(1)=ADDR(IOPTLIST(4));/* CHAIN TO NEXT INSERT    */
         LA    @14,IOPTLIST+12                                     0389
         ST    @14,IOPTLIST                                        0389
*           IOPTLIST(2)=ADDR(PDRTSTAT);/* INSERT NAME POINTER        */
         L     @14,@PC00001+4                                      0390
         L     @14,STATPTR(,@14)                                   0390
         LA    @10,PDRTSTAT(,@14)                                  0390
         ST    @10,IOPTLIST+4                                      0390
*           IOPTLIST(3)=0;          /* ZERO RESERVED FIELD           */
         SLR   @10,@10                                             0391
         ST    @10,IOPTLIST+8                                      0391
*           RFY                                                    0392
*             I015F BASED(ADDR(IOPTLIST(3)));/* ACCESS BYTES 1-2     */
*           I015F=LENGTH(PDRTSTAT); /* INSERT LENGTH                 */
         LA    @06,IOPTLIST+8                                      0393
         MVC   I015F(2,@06),@CH00049                               0393
*           IOPTLIST(4)=ADDR(IOPTLIST(7));/* CHAIN TO NEXT INSERT    */
         LA    @06,IOPTLIST+24                                     0394
         ST    @06,IOPTLIST+12                                     0394
*           IOPTLIST(5)=ADDR(PDRTDATE);/* INSERT NAME POINTER        */
         LA    @06,PDRTDATE(,@14)                                  0395
         ST    @06,IOPTLIST+16                                     0395
*           IOPTLIST(6)=0;          /* ZERO RESERVED FIELD           */
         ST    @10,IOPTLIST+20                                     0396
*           RFY                                                    0397
*             I015F BASED(ADDR(IOPTLIST(6)));/* ACCESS BYTES 1-2     */
*           I015F=LENGTH(PDRTDATE); /* INSERT LENGTH                 */
         LA    @06,8                                               0398
         LA    @04,IOPTLIST+20                                     0398
         STH   @06,I015F(,@04)                                     0398
*           IOPTLIST(7)=ADDR(IOPTLIST(10));/* CHAIN TO NEXT INSERT   */
         LA    @04,IOPTLIST+36                                     0399
         ST    @04,IOPTLIST+24                                     0399
*           IOPTLIST(8)=ADDR(PDRTTIME);/* INSERT NAME POINTER        */
         LA    @04,PDRTTIME(,@14)                                  0400
         ST    @04,IOPTLIST+28                                     0400
*           IOPTLIST(9)=0;          /* ZERO RESERVED FIELD           */
         ST    @10,IOPTLIST+32                                     0401
*           RFY                                                    0402
*             I015F BASED(ADDR(IOPTLIST(9)));/* ACCESS BYTES 1-2     */
*           I015F=LENGTH(PDRTTIME); /* INSERT LENGTH                 */
         LA    @04,IOPTLIST+32                                     0403
         STH   @06,I015F(,@04)                                     0403
*           IOPTLIST(10)=0;         /* LAST INSERT                   */
         ST    @10,IOPTLIST+36                                     0404
*           IOPTLIST(11)=ADDR(PDRPTFID);/* INSERT NAME POINTER       */
         LA    @14,PDRPTFID(,@14)                                  0405
         ST    @14,IOPTLIST+40                                     0405
*           IOPTLIST(12)=0;         /* ZERO RESERVED FIELD           */
         ST    @10,IOPTLIST+44                                     0406
*           RFY                                                    0407
*             I015F BASED(ADDR(IOPTLIST(12)));/* ACCESS BYTES 1-2    */
*           I015F=LENGTH(PDRPTFID); /* INSERT LENGTH                 */
         LA    @14,IOPTLIST+44                                     0408
         MVC   I015F(2,@14),@CH00168                               0408
*           CALL BLSDMSG0(ZZ2PARM,STAT5ID,DATAHEAD,BLSDMSGS,'01000000'B
*               ,ADDR(IOPTLIST));   /* BUILD MESSAGE                 */
         L     @14,@PC00001                                        0409
         ST    @14,@AL00001                                        0409
         LA    @14,@CF01180                                        0409
         ST    @14,@AL00001+4                                      0409
         L     @14,@PC00001+12                                     0409
         ST    @14,@AL00001+8                                      0409
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0409
         ST    @14,@AL00001+12                                     0409
         LA    @14,@CB01243                                        0409
         ST    @14,@AL00001+16                                     0409
         LA    @14,IOPTLIST                                        0409
         ST    @14,@AFTEMPS                                        0409
         LA    @14,@AFTEMPS                                        0409
         ST    @14,@AL00001+20                                     0409
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0409
         LA    @01,@AL00001                                        0409
         BALR  @14,@15                                             0409
*         END;                      /* BLSDMSG (ZZ2PARM,STAT5ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP INSERT(PD
*                                      RTSTAT,PDRTDATE,PDRTTIME,PDRPT
*                                      FID)                          */
*         DO;                       /* BLSDMSG (ZZ2PARM,STAT6ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP INSERT(PD
*                                      RFSTAT,PDRFDATE,PDRFTIME,PDRUS
*                                      ER)                           */
*           IOPTLIST(1)=ADDR(IOPTLIST(4));/* CHAIN TO NEXT INSERT    */
         LA    @14,IOPTLIST+12                                     0412
         ST    @14,IOPTLIST                                        0412
*           IOPTLIST(2)=ADDR(PDRFSTAT);/* INSERT NAME POINTER        */
         L     @14,@PC00001+4                                      0413
         L     @14,STATPTR(,@14)                                   0413
         LA    @10,PDRFSTAT(,@14)                                  0413
         ST    @10,IOPTLIST+4                                      0413
*           IOPTLIST(3)=0;          /* ZERO RESERVED FIELD           */
         SLR   @10,@10                                             0414
         ST    @10,IOPTLIST+8                                      0414
*           RFY                                                    0415
*             I015F BASED(ADDR(IOPTLIST(3)));/* ACCESS BYTES 1-2     */
*           I015F=LENGTH(PDRFSTAT); /* INSERT LENGTH                 */
         LA    @06,IOPTLIST+8                                      0416
         MVC   I015F(2,@06),@CH00049                               0416
*           IOPTLIST(4)=ADDR(IOPTLIST(7));/* CHAIN TO NEXT INSERT    */
         LA    @06,IOPTLIST+24                                     0417
         ST    @06,IOPTLIST+12                                     0417
*           IOPTLIST(5)=ADDR(PDRFDATE);/* INSERT NAME POINTER        */
         LA    @06,PDRFDATE(,@14)                                  0418
         ST    @06,IOPTLIST+16                                     0418
*           IOPTLIST(6)=0;          /* ZERO RESERVED FIELD           */
         ST    @10,IOPTLIST+20                                     0419
*           RFY                                                    0420
*             I015F BASED(ADDR(IOPTLIST(6)));/* ACCESS BYTES 1-2     */
*           I015F=LENGTH(PDRFDATE); /* INSERT LENGTH                 */
         LA    @06,8                                               0421
         LA    @04,IOPTLIST+20                                     0421
         STH   @06,I015F(,@04)                                     0421
*           IOPTLIST(7)=ADDR(IOPTLIST(10));/* CHAIN TO NEXT INSERT   */
         LA    @04,IOPTLIST+36                                     0422
         ST    @04,IOPTLIST+24                                     0422
*           IOPTLIST(8)=ADDR(PDRFTIME);/* INSERT NAME POINTER        */
         LA    @04,PDRFTIME(,@14)                                  0423
         ST    @04,IOPTLIST+28                                     0423
*           IOPTLIST(9)=0;          /* ZERO RESERVED FIELD           */
         ST    @10,IOPTLIST+32                                     0424
*           RFY                                                    0425
*             I015F BASED(ADDR(IOPTLIST(9)));/* ACCESS BYTES 1-2     */
*           I015F=LENGTH(PDRFTIME); /* INSERT LENGTH                 */
         LA    @04,IOPTLIST+32                                     0426
         STH   @06,I015F(,@04)                                     0426
*           IOPTLIST(10)=0;         /* LAST INSERT                   */
         ST    @10,IOPTLIST+36                                     0427
*           IOPTLIST(11)=ADDR(PDRUSER);/* INSERT NAME POINTER        */
         LA    @14,PDRUSER(,@14)                                   0428
         ST    @14,IOPTLIST+40                                     0428
*           IOPTLIST(12)=0;         /* ZERO RESERVED FIELD           */
         ST    @10,IOPTLIST+44                                     0429
*           RFY                                                    0430
*             I015F BASED(ADDR(IOPTLIST(12)));/* ACCESS BYTES 1-2    */
*           I015F=LENGTH(PDRUSER);  /* INSERT LENGTH                 */
         LA    @14,IOPTLIST+44                                     0431
         STH   @06,I015F(,@14)                                     0431
*           CALL BLSDMSG0(ZZ2PARM,STAT6ID,DATAHEAD,BLSDMSGS,'01000000'B
*               ,ADDR(IOPTLIST));   /* BUILD MESSAGE                 */
         L     @14,@PC00001                                        0432
         ST    @14,@AL00001                                        0432
         LA    @14,@CF01182                                        0432
         ST    @14,@AL00001+4                                      0432
         L     @14,@PC00001+12                                     0432
         ST    @14,@AL00001+8                                      0432
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0432
         ST    @14,@AL00001+12                                     0432
         LA    @14,@CB01243                                        0432
         ST    @14,@AL00001+16                                     0432
         LA    @14,IOPTLIST                                        0432
         ST    @14,@AFTEMPS                                        0432
         LA    @14,@AFTEMPS                                        0432
         ST    @14,@AL00001+20                                     0432
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0432
         LA    @01,@AL00001                                        0432
         BALR  @14,@15                                             0432
*         END;                      /* BLSDMSG (ZZ2PARM,STAT6ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP INSERT(PD
*                                      RFSTAT,PDRFDATE,PDRFTIME,PDRUS
*                                      ER)                           */
*         DO;                       /* BLSDMSG (ZZ2PARM,STAT7ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP        0434
*                                      INSERT(PDRFIXID)              */
*           IOPTLIST(1)=0;          /* LAST INSERT                   */
         SLR   @14,@14                                             0435
         ST    @14,IOPTLIST                                        0435
*           IOPTLIST(2)=ADDR(PDRFIXID);/* INSERT NAME POINTER        */
         L     @10,@PC00001+4                                      0436
         L     @10,STATPTR(,@10)                                   0436
         LA    @10,PDRFIXID(,@10)                                  0436
         ST    @10,IOPTLIST+4                                      0436
*           IOPTLIST(3)=0;          /* ZERO RESERVED FIELD           */
         ST    @14,IOPTLIST+8                                      0437
*           RFY                                                    0438
*             I015F BASED(ADDR(IOPTLIST(3)));/* ACCESS BYTES 1-2     */
*           I015F=LENGTH(PDRFIXID); /* INSERT LENGTH                 */
         LA    @14,IOPTLIST+8                                      0439
         MVC   I015F(2,@14),@CH01000                               0439
*           CALL BLSDMSG0(ZZ2PARM,STAT7ID,DATAHEAD,BLSDMSGS,'01000000'B
*               ,ADDR(IOPTLIST));   /* BUILD MESSAGE                 */
         L     @14,@PC00001                                        0440
         ST    @14,@AL00001                                        0440
         LA    @14,@CF01184                                        0440
         ST    @14,@AL00001+4                                      0440
         L     @14,@PC00001+12                                     0440
         ST    @14,@AL00001+8                                      0440
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0440
         ST    @14,@AL00001+12                                     0440
         LA    @14,@CB01243                                        0440
         ST    @14,@AL00001+16                                     0440
         LA    @14,IOPTLIST                                        0440
         ST    @14,@AFTEMPS                                        0440
         LA    @14,@AFTEMPS                                        0440
         ST    @14,@AL00001+20                                     0440
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0440
         LA    @01,@AL00001                                        0440
         BALR  @14,@15                                             0440
*         END;                      /* BLSDMSG (ZZ2PARM,STAT7ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP        0441
*                                      INSERT(PDRFIXID)              */
*         QUEUELNS=QUEUELNS+STATLNS;/* INCREMENT # OF LINES IN THE 0442
*                                      OUTPUT QUEUE                  */
         L     @14,@PC00001+20                                     0442
         LA    @10,8                                               0442
         AL    @10,QUEUELNS(,@14)                                  0442
         ST    @10,QUEUELNS(,@14)                                  0442
*       END;                                                       0443
*     ELSE                                                         0444
*       ;                                                          0444
*                                                                  0444
@RF00284 DS    0H                                                  0445
*   /*****************************************************************/
*   /*                                                               */
*   /* ADD THE PROBLEM ABSTRACT TO THE OUTPUT QUEUE FOR ALL FORMATS  */
*   /* EXCEPT THE 'LIST' FORMAT                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0445
*   IF LPLIST=OFF                   /* IF LIST FORMAT IS OFF         */
*     THEN                                                         0445
@RC00180 L     @14,@PC00001+8                                      0445
         L     @14,LPWAPTR(,@14)                                   0445
         TM    LPLIST(@14),B'10000000'                             0445
         BNZ   @RF00445                                            0445
*     IF PDRABS(FRSTLNLN+ONE:PDRABSLN)=NULLABST/* IF THE ABSTRACT IS
*                                      BLANK FROM COLUMNS 68 TO 128  */
*       THEN                                                       0446
         L     @14,@PC00001+4                                      0446
         L     @14,STATPTR(,@14)                                   0446
         CLC   PDRABS+67(61,@14),NULLABST                          0446
         BNE   @RF00446                                            0446
*       DO;                                                        0447
*         DO;                       /* BLSDMSG (ZZ2PARM,ABST1ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP INSERT((P
*                                      DRABS(ONE:FRSTLNLN),FRSTLNLN))*/
*           IOPTLIST(1)=0;          /* LAST INSERT                   */
         SLR   @10,@10                                             0449
         ST    @10,IOPTLIST                                        0449
*           IOPTLIST(2)=ADDR(PDRABS(ONE:FRSTLNLN));/* INSERT NAME  0450
*                                      POINTER                       */
         LA    @14,PDRABS(,@14)                                    0450
         ST    @14,IOPTLIST+4                                      0450
*           IOPTLIST(3)=0;          /* ZERO RESERVED FIELD           */
         ST    @10,IOPTLIST+8                                      0451
*           RFY                                                    0452
*             I015F BASED(ADDR(IOPTLIST(3)));/* ACCESS BYTES 1-2     */
*           I015F=FRSTLNLN;         /* INSERT LENGTH                 */
         LA    @14,IOPTLIST+8                                      0453
         MVC   I015F(2,@14),@CH01136                               0453
*           CALL BLSDMSG0(ZZ2PARM,ABST1ID,DATAHEAD,BLSDMSGS,'01000000'B
*               ,ADDR(IOPTLIST));   /* BUILD MESSAGE                 */
         L     @14,@PC00001                                        0454
         ST    @14,@AL00001                                        0454
         LA    @14,@CF01168                                        0454
         ST    @14,@AL00001+4                                      0454
         L     @14,@PC00001+12                                     0454
         ST    @14,@AL00001+8                                      0454
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0454
         ST    @14,@AL00001+12                                     0454
         LA    @14,@CB01243                                        0454
         ST    @14,@AL00001+16                                     0454
         LA    @14,IOPTLIST                                        0454
         ST    @14,@AFTEMPS                                        0454
         LA    @14,@AFTEMPS                                        0454
         ST    @14,@AL00001+20                                     0454
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0454
         LA    @01,@AL00001                                        0454
         BALR  @14,@15                                             0454
*         END;                      /* BLSDMSG (ZZ2PARM,ABST1ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP INSERT((P
*                                      DRABS(ONE:FRSTLNLN),FRSTLNLN))
*                                      THEN THE ABSTRACT WILL FIT ON
*                                      1 LINE, SO ADD 1 LINE TO    0455
*                                      OUTPUT QUEUE                  */
*         QUEUELNS=QUEUELNS+ONE;    /* INCREMENT # OF LINES IN OUTPUT
*                                      QUEUE                         */
         L     @14,@PC00001+20                                     0456
         LA    @10,1                                               0456
         AL    @10,QUEUELNS(,@14)                                  0456
         ST    @10,QUEUELNS(,@14)                                  0456
*       END;                                                       0457
*     ELSE                                                         0458
*       DO;                                                        0458
         B     @RC00446                                            0458
@RF00446 DS    0H                                                  0459
*         LASTCHAR=FRSTLNLN;        /* SET LAST CHARACTER FOR      0459
*                                      OUTPUTTED ABSTRACT LINE TO 67 */
         LA    LASTCHAR,67                                         0459
*         NEWABS(MAXLNLN:FRSTLNLN)=NULLABST(ONE:FRSTLNLN-MAXLNLN+ONE);
         MVC   NEWABS+60(7),NULLABST                               0460
*                                   /* SET END OF 1ST ABSTRACT LINE
*                                      TO BLANKS, SINCE MAY MOVE SOME
*                                      OF THE CHARS TO THE 2ND LINE  */
*         IF(PDRABS(FRSTLNLN)^=BLANK/* IF COLUMN 67 IS NOT BLANK     */
*             &PDRABS(FRSTLNLN+ONE)^=BLANK)/* AND 68 IS NOT BLANK    */
*           THEN                                                   0461
         L     @14,@PC00001+4                                      0461
         L     @14,STATPTR(,@14)                                   0461
         CLI   PDRABS+66(@14),C' '                                 0461
         BE    @RF00461                                            0461
         CLI   PDRABS+67(@14),C' '                                 0461
         BE    @RF00461                                            0461
*           DO;                                                    0462
*             DO WHILE((PDRABS(LASTCHAR)^=BLANK)&(LASTCHAR>MAXLNLN));
         B     @DE00463                                            0463
@DL00463 DS    0H                                                  0464
*                                   /* THEN GO BACKWARDS FROM COL 67
*                                      UNTIL FIND A BLANK CHAR AT  0464
*                                      WHICH TO BREAK THE LINE OR  0464
*                                      UNTIL REACH 61, THE MAX 1ST 0464
*                                      LINE LENGTH ALLOWABLE SO THAT
*                                      THE REST OF THE ABSTRACT WILL
*                                      FIT ON THE 2ND LINE.          */
*               LASTCHAR=LASTCHAR-ONE;/* DECREMENT LASTCHAR          */
         BCTR  LASTCHAR,0                                          0464
*             END;                                                 0465
@DE00463 L     @14,@PC00001+4                                      0465
         L     @14,STATPTR(,@14)                                   0465
         ALR   @14,LASTCHAR                                        0465
         CLI   PDRABS-1(@14),C' '                                  0465
         BE    @DC00463                                            0465
         C     LASTCHAR,@CF01139                                   0465
         BH    @DL00463                                            0465
@DC00463 DS    0H                                                  0466
*             IF((LASTCHAR=MAXLNLN) /* IF LASTCHAR = 61              */
*                 &(PDRABS(LASTCHAR)^=BLANK))/* AND COL 61 IS NOT  0466
*                                      BLANK                         */
*               THEN                                               0466
         C     LASTCHAR,@CF01139                                   0466
         BNE   @RF00466                                            0466
         L     @14,@PC00001+4                                      0466
         L     @14,STATPTR(,@14)                                   0466
         ALR   @14,LASTCHAR                                        0466
         CLI   PDRABS-1(@14),C' '                                  0466
         BE    @RF00466                                            0466
*               DO;                                                0467
*                 LASTCHAR=LASTCHAR+ONE;/* SET LASTCHAR TO 62 SO THAT
*                                      THERE WILL BE AT LEAST 2 CHARS
*                                      BEFORE THE HYPHENATION        */
         AL    LASTCHAR,@CF00052                                   0468
*                 NEWABS(LASTCHAR+ONE)=HYPHEN;/* INSERT THE HYPHEN IN
*                                      THE NEW ABSTRACT BUFFER       */
         LA    @14,NEWABS(LASTCHAR)                                0469
         MVI   0(@14),C'-'                                         0469
*               END;                                               0470
*             ELSE                                                 0471
*               ;                                                  0471
@RF00466 DS    0H                                                  0472
*           END;                                                   0472
*         ELSE                                                     0473
*           ;                                                      0473
@RF00461 DS    0H                                                  0474
*         NEWABS(ONE:LASTCHAR)=PDRABS(ONE:LASTCHAR);/* STORE THE REST
*                                      OF THE 1ST LINE OF ABSTRACT 0474
*                                      INTO THE NEW ABSTRACT BUFFER  */
         LR    @14,LASTCHAR                                        0474
         BCTR  @14,0                                               0474
         L     @10,@PC00001+4                                      0474
         L     @10,STATPTR(,@10)                                   0474
         EX    @14,@SM01353                                        0474
*         DO;                       /* BLSDMSG (ZZ2PARM,ABST1ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP        0475
*                                      INSERT(NEWABS)                */
*           IOPTLIST(1)=0;          /* LAST INSERT                   */
         SLR   @14,@14                                             0476
         ST    @14,IOPTLIST                                        0476
*           IOPTLIST(2)=ADDR(NEWABS);/* INSERT NAME POINTER          */
         LA    @10,NEWABS                                          0477
         ST    @10,IOPTLIST+4                                      0477
*           IOPTLIST(3)=0;          /* ZERO RESERVED FIELD           */
         ST    @14,IOPTLIST+8                                      0478
*           RFY                                                    0479
*             I015F BASED(ADDR(IOPTLIST(3)));/* ACCESS BYTES 1-2     */
*           I015F=LENGTH(NEWABS);   /* INSERT LENGTH                 */
         LA    @14,IOPTLIST+8                                      0480
         MVC   I015F(2,@14),@CH01136                               0480
*           CALL BLSDMSG0(ZZ2PARM,ABST1ID,DATAHEAD,BLSDMSGS,'01000000'B
*               ,ADDR(IOPTLIST));   /* BUILD MESSAGE                 */
         L     @14,@PC00001                                        0481
         ST    @14,@AL00001                                        0481
         LA    @14,@CF01168                                        0481
         ST    @14,@AL00001+4                                      0481
         L     @14,@PC00001+12                                     0481
         ST    @14,@AL00001+8                                      0481
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0481
         ST    @14,@AL00001+12                                     0481
         LA    @14,@CB01243                                        0481
         ST    @14,@AL00001+16                                     0481
         LA    @14,IOPTLIST                                        0481
         ST    @14,@AFTEMPS                                        0481
         LA    @14,@AFTEMPS                                        0481
         ST    @14,@AL00001+20                                     0481
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0481
         LA    @01,@AL00001                                        0481
         BALR  @14,@15                                             0481
*         END;                      /* BLSDMSG (ZZ2PARM,ABST1ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP        0482
*                                      INSERT(NEWABS) ADD THE FIRST
*                                      LINE TO THE OUTPUT QUEUE      */
*         QUEUELNS=QUEUELNS+ONE;    /* INCREMENT # OF LINES IN THE 0483
*                                      OUTPUT QUEUE                  */
         L     @14,@PC00001+20                                     0483
         LA    @10,1                                               0483
         AL    @10,QUEUELNS(,@14)                                  0483
         ST    @10,QUEUELNS(,@14)                                  0483
*         DO;                       /* BLSDMSG (ZZ2PARM,ABST2ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP INSERT((P
*                                      DRABS(LASTCHAR+ONE:PDRABSLN),P
*                                      DRABSLN-LASTCHAR))            */
*           IOPTLIST(1)=0;          /* LAST INSERT                   */
         SLR   @14,@14                                             0485
         ST    @14,IOPTLIST                                        0485
*           IOPTLIST(2)=ADDR(PDRABS(LASTCHAR+ONE:PDRABSLN));/* INSERT
*                                      NAME POINTER                  */
         L     @10,@PC00001+4                                      0486
         L     @10,STATPTR(,@10)                                   0486
         LA    @10,PDRABS(LASTCHAR,@10)                            0486
         ST    @10,IOPTLIST+4                                      0486
*           IOPTLIST(3)=0;          /* ZERO RESERVED FIELD           */
         ST    @14,IOPTLIST+8                                      0487
*           RFY                                                    0488
*             I015F BASED(ADDR(IOPTLIST(3)));/* ACCESS BYTES 1-2     */
*           I015F=PDRABSLN-LASTCHAR;/* INSERT LENGTH                 */
         LA    @14,IOPTLIST+8                                      0489
         LA    @10,128                                             0489
         SLR   @10,LASTCHAR                                        0489
         STH   @10,I015F(,@14)                                     0489
*           CALL BLSDMSG0(ZZ2PARM,ABST2ID,DATAHEAD,BLSDMSGS,'01000000'B
*               ,ADDR(IOPTLIST));   /* BUILD MESSAGE                 */
         L     @14,@PC00001                                        0490
         ST    @14,@AL00001                                        0490
         LA    @14,@CF01170                                        0490
         ST    @14,@AL00001+4                                      0490
         L     @14,@PC00001+12                                     0490
         ST    @14,@AL00001+8                                      0490
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0490
         ST    @14,@AL00001+12                                     0490
         LA    @14,@CB01243                                        0490
         ST    @14,@AL00001+16                                     0490
         LA    @14,IOPTLIST                                        0490
         ST    @14,@AFTEMPS                                        0490
         LA    @14,@AFTEMPS                                        0490
         ST    @14,@AL00001+20                                     0490
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0490
         LA    @01,@AL00001                                        0490
         BALR  @14,@15                                             0490
*         END;                      /* BLSDMSG (ZZ2PARM,ABST2ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP INSERT((P
*                                      DRABS(LASTCHAR+ONE:PDRABSLN),P
*                                      DRABSLN-LASTCHAR)) ADD 2ND  0491
*                                      LINE TO THE OUTPUT QUEUE      */
*         QUEUELNS=QUEUELNS+ONE;    /* INCREMENT # OF LINES IN THE 0492
*                                      OUTPUT QUEUE                  */
         L     @14,@PC00001+20                                     0492
         LA    @10,1                                               0492
         AL    @10,QUEUELNS(,@14)                                  0492
         ST    @10,QUEUELNS(,@14)                                  0492
*       END;                                                       0493
*                                                                  0493
*   /*****************************************************************/
*   /*                                                               */
*   /* PERFORM THE FOLLOWING PROCESSING IF THE PROBLEM DESCRIPTION IS*/
*   /* NEEDED FOR OUTPUT                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0494
*   IF LPDESC=ON                    /* IF PROBLEM DESCRIPTION IS   0494
*                                      NEEDED                        */
*     THEN                                                         0494
@RC00446 DS    0H                                                  0494
@RF00445 L     @14,@PC00001+8                                      0494
         L     @14,LPWAPTR(,@14)                                   0494
         TM    LPDESC(@14),B'00010000'                             0494
         BNO   @RF00494                                            0494
*     DO;                                                          0495
*       DO;                         /* BLSDMSG (ZZ2PARM,DESC1ID,DATAH
*                                      EAD,BLSDMSGS)                 */
*         CALL BLSDMSG0(ZZ2PARM,DESC1ID,DATAHEAD,BLSDMSGS,'00000000'B,0
*             );                    /* BUILD MESSAGE                 */
         L     @14,@PC00001                                        0497
         ST    @14,@AL00001                                        0497
         LA    @14,@CF01186                                        0497
         ST    @14,@AL00001+4                                      0497
         L     @14,@PC00001+12                                     0497
         ST    @14,@AL00001+8                                      0497
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0497
         ST    @14,@AL00001+12                                     0497
         LA    @14,@CB01204                                        0497
         ST    @14,@AL00001+16                                     0497
         LA    @14,@CF00057                                        0497
         ST    @14,@AL00001+20                                     0497
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0497
         LA    @01,@AL00001                                        0497
         BALR  @14,@15                                             0497
*       END;                        /* BLSDMSG (ZZ2PARM,DESC1ID,DATAH
*                                      EAD,BLSDMSGS) ADD           0498
*                                      'DESCRIPTION' LINE HDR TO   0498
*                                      OUTPUT QUEUE                  */
*       QUEUELNS=QUEUELNS+ONE;      /* INCREMENT # OF LINES IN THE 0499
*                                      OUTPUT QUEUE                  */
         L     @14,@PC00001+20                                     0499
         LA    @10,1                                               0499
         AL    @10,QUEUELNS(,@14)                                  0499
         ST    @10,QUEUELNS(,@14)                                  0499
*       RESPECIFY                                                  0500
*         PDREC BASED(DESCPTR);     /* RFY BASE OF PDR               */
*       DESCPTR=ADDR(DEBUFFER);     /* INITIALIZE PTR FOR DESCRIPTION
*                                      LINE BUFFER                   */
         LA    DESCPTR,DEBUFFER                                    0501
*       RECTYPE=PDRDESCC;           /* RECORD TYPE FETCHED IS 'DE',
*                                      DESCRIPTION                   */
         MVC   RECTYPE(2),@CC01029                                 0502
*       PDRPREF=FPDBPIDP;           /* PROBLEM PREFIX                */
         L     @14,ZZ2ZZ1P(,ZZ2PTR)                                0503
         L     @14,ZZ1FPP(,@14)                                    0503
         MVC   PDRPREF(3),FPDBPIDP(@14)                            0503
*       PDRPID=STATPTR->PDRKPNUM;   /* PROBLEM NUMBER FETCHED        */
         L     @14,@PC00001+4                                      0504
         L     @14,STATPTR(,@14)                                   0504
         MVC   PDRPID(5),PDRKPNUM(@14)                             0504
*       SEQNO=EBCDIC0;              /* INITIALIZE SEQUENCE NUMBER OF
*                                      RECORD                        */
         MVC   SEQNO(4),@CC01152                                   0505
*       ENDFLAG=OFF;                /* INITIALIZE ENDFLAG            */
         NI    ENDFLAG,B'01111111'                                 0506
*       DO WHILE(ENDFLAG=OFF);      /* DO UNTIL FETCH A RECORD WHICH
*                                      IS NOT A DESC RECORD FOR    0507
*                                      CURRENT PID                   */
*                                                                  0507
         B     @DE00507                                            0507
@DL00507 DS    0H                                                  0508
*         /***********************************************************/
*         /*                                                         */
*         /* BLSGET (ZZ1PDRP)                                        */
*         /* AREAL(DESCPTR)AREALEN(LENGTH(DEBUFFER))GENGE            */
*         /* ARG(SRCHKEY)ARGLEN(SRCHKEYL)                            */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0508
*         DO;                       /* BLSGET (ZZ1PDRP) AREAL(DESCPTR
*                                      )AREALEN(LENGTH(DEBUFFER))GENG
*                                      E ARG(SRCHKEY)ARGLEN(SRCHKEYL)*/
*           RFY                                                    0509
*             GPR01P RSTD;                                         0509
*           GPR01P=ZZ1PDRP;         /* ADDRESS DMCB                  */
         L     @14,ZZ2ZZ1P(,ZZ2PTR)                                0510
         L     GPR01P,ZZ1PDRP(,@14)                                0510
*           RFY                                                    0511
*             DMCB BASED(GPR01P);                                  0511
*           IF((GPR01P&'FFFFFFF8'X)=GPR01P)&DMCBID='DMCB'/* VALID  0512
*                                      DMCB ?                        */
*             THEN                                                 0512
         LR    @14,GPR01P                                          0512
         N     @14,@CF01307                                        0512
         CLR   @14,GPR01P                                          0512
         BNE   @RF00512                                            0512
         CLC   DMCBID(4,GPR01P),@CC01308                           0512
         BNE   @RF00512                                            0512
*             DO;                                                  0513
*               DMCBBUFP=DESCPTR&'7FFFFFFF'X;/* PLACE BUFFER ADDRESS
*                                      IN DMCB                       */
         LR    @14,DESCPTR                                         0514
         N     @14,@CF01309                                        0514
         ST    @14,DMCBBUFP(,GPR01P)                               0514
*               DMCBBLEN=LENGTH(DEBUFFER)&'7FFFFFFF'X;/* PLACE BUFFER
*                                      LENGTH IN DMCB                */
         MVC   DMCBBLEN(4,GPR01P),@CF01344                         0515
*               DMCBKEYP=ADDR(SRCHKEY);/* PLACE KEY ADDRESS IN DMCB  */
         LA    @14,SRCHKEY                                         0516
         ST    @14,DMCBKEYP(,GPR01P)                               0516
*               DMCBKEYL=(SRCHKEYL)&'7FFFFFFF'X;/* PLACE KEY LENGTH
*                                      IN DMCB                       */
         MVC   DMCBKEYL(4,GPR01P),@CF00960                         0517
*               DMCBKYD='1'B;       /* INDICATE KEYED ACCESS         */
*               DMCBGKY='1'B;       /* INDICATE GENERIC KEY          */
*               DMCBAPX='1'B;       /* INDICATE APROX MATCH          */
*               DMCBUPD='0'B;       /* DEFAULT FOR GET IS NUP        */
         OI    DMCBKYD(GPR01P),B'11100000'                         0521
         NI    DMCBUPD(GPR01P),B'11101111'                         0521
*               DMCBRQST=DMCBGER;   /* INDICATE GET REQUEST          */
         MVI   DMCBRQST(GPR01P),X'04'                              0522
*               CALL DMCBRI->DMCBDMGR;/* CALL BLSCRQST               */
         L     @15,DMCBRI(,GPR01P)                                 0523
         BALR  @14,@15                                             0523
*             END;                                                 0524
*           ELSE                                                   0525
*             DO;                                                  0525
         B     @RC00512                                            0525
@RF00512 DS    0H                                                  0526
*               RFY                                                0526
*                (GPR00F,                                          0526
*                 GPR15F) RSTD;                                    0526
*               GPR00F=0;           /* INDICATE NO MESSAGE CHAIN     */
         SLR   GPR00F,GPR00F                                       0527
*               GPR15F=16;          /* INDICATE INVALID DMCB         */
         LA    GPR15F,16                                           0528
*               RFY                                                0529
*                (GPR00F,                                          0529
*                 GPR15F);                                         0529
*             END;                                                 0530
*           RFY                                                    0531
*             DMCB;                                                0531
@RC00512 DS    0H                                                  0532
*           RFY                                                    0532
*             GPR01P;                                              0532
*         END;                      /* BLSGET (ZZ1PDRP) AREAL(DESCPTR
*                                      )AREALEN(LENGTH(DEBUFFER))GENG
*                                      E ARG(SRCHKEY)ARGLEN(SRCHKEYL)*/
*         IF((RETCDE^=ZZZFLAGI)     /* IF RETURN CODE ^= 0           */
*             &(RETCDE^=ZZZFLAGE))  /* AND RETURN CODE ^= 8          */
*           THEN                                                   0534
         SLR   @14,@14                                             0534
         CR    RETCDE,@14                                          0534
         BE    @RF00534                                            0534
         C     RETCDE,@CF00060                                     0534
         BE    @RF00534                                            0534
*           DO;                                                    0535
*             IF RETCDE=ZZZFLAGT    /* IF RETURN CODE = 16           */
*               THEN                                               0536
         C     RETCDE,@CF00063                                     0536
         BNE   @RF00536                                            0536
*               ERRHEAD=ZERO;       /* THEN OUTPUT 1 ERROR MSG       */
         ST    @14,ERRHEAD                                         0537
*             ELSE                                                 0538
*               ERRHEAD=ZZ1PDRP->DMCBMSG;/* ELSE OUTPUT MSG CHAIN    */
         B     @RC00536                                            0538
@RF00536 L     @14,ZZ2ZZ1P(,ZZ2PTR)                                0538
         L     @14,ZZ1PDRP(,@14)                                   0538
         L     @14,DMCBMSG(,@14)                                   0538
         ST    @14,ERRHEAD                                         0538
*             DO;                   /* BLSDMSG (ZZ2PARM,PUTID,DATAHEA
*                                      D,BLSDMSGS) ROUTE(BOTH)       */
@RC00536 DS    0H                                                  0540
*               CALL BLSDMSG0(ZZ2PARM,PUTID,DATAHEAD,BLSDMSGS,     0540
*                   '00110000'B,0); /* BUILD MESSAGE                 */
         L     @14,@PC00001                                        0540
         ST    @14,@AL00001                                        0540
         LA    @14,@CF01194                                        0540
         ST    @14,@AL00001+4                                      0540
         L     @14,@PC00001+12                                     0540
         ST    @14,@AL00001+8                                      0540
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0540
         ST    @14,@AL00001+12                                     0540
         LA    @14,@CB01312                                        0540
         ST    @14,@AL00001+16                                     0540
         LA    @14,@CF00057                                        0540
         ST    @14,@AL00001+20                                     0540
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0540
         LA    @01,@AL00001                                        0540
         BALR  @14,@15                                             0540
*             END;                  /* BLSDMSG (ZZ2PARM,PUTID,DATAHEA
*                                      D,BLSDMSGS) ROUTE(BOTH) OUTPUT
*                                      DATA ON OUTPUT QUEUE SO FAR   */
*             DO;                   /* BLSDMSG (ZZ2PARM,GETID,ERRHEAD
*                                      ,BLSDMSGS) LIFO ROUTE(TERM)   */
*               CALL BLSDMSG0(ZZ2PARM,GETID,ERRHEAD,BLSDMSGS,'10010000'
*                   ,0);            /* BUILD MESSAGE                 */
         L     @14,@PC00001                                        0543
         ST    @14,@AL00001                                        0543
         LA    @14,@CF01192                                        0543
         ST    @14,@AL00001+4                                      0543
         LA    @14,ERRHEAD                                         0543
         ST    @14,@AL00001+8                                      0543
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0543
         ST    @14,@AL00001+12                                     0543
         LA    @14,@CB01313                                        0543
         ST    @14,@AL00001+16                                     0543
         LA    @14,@CF00057                                        0543
         ST    @14,@AL00001+20                                     0543
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0543
         LA    @01,@AL00001                                        0543
         BALR  @14,@15                                             0543
*             END;                  /* BLSDMSG (ZZ2PARM,GETID,ERRHEAD
*                                      ,BLSDMSGS) LIFO ROUTE(TERM) 0544
*                                      OUTPUT THE ERROR MSGS         */
*             DO;                   /* ABEND(GETABEND) DUMP          */
*               RESPECIFY                                          0546
*                (GPR01F) RESTRICTED;                              0546
*               GPR01F=GETABEND;    /* COMP CODE IN REG 1            */
         LA    GPR01F,123                                          0547
*               GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG */
         O     GPR01F,@CF00072                                     0548
*               SVC(13);            /* ISSUE ABEND SVC               */
         SVC   13                                                  0549
*               RESPECIFY                                          0550
*                (GPR01F) UNRESTRICTED;                            0550
*             END;                  /* ABEND(GETABEND) DUMP ABEND    */
*           END;                                                   0552
*         ELSE                                                     0553
*           IF((PDRKRCTY^=PDRDESCC) /* IF TYPE OF RECORD FETCHED IS
*                                      NOT DESCRIPTION               */
*               ×(PDRKPID^=STATPTR->/* OR PROBLEM IS NOT             */
*               PDRKPID)            /* CURRENT PROBLEM               */
*               ×(RETCDE=ZZZFLAGE)) /* OR END OF FILE OF PDR         */
*             THEN                                                 0553
         B     @RC00534                                            0553
@RF00534 CLC   PDRKRCTY(2,DESCPTR),@CC01029                        0553
         BNE   @RT00553                                            0553
         L     @14,@PC00001+4                                      0553
         L     @14,STATPTR(,@14)                                   0553
         CLC   PDRKPID(8,DESCPTR),PDRKPID(@14)                     0553
         BNE   @RT00553                                            0553
         C     RETCDE,@CF00060                                     0553
         BNE   @RF00553                                            0553
@RT00553 DS    0H                                                  0554
*             ENDFLAG=ON;           /* THEN END LOOP, HAVE FETCHED 0554
*                                      ALL DESC RECORDS              */
         OI    ENDFLAG,B'10000000'                                 0554
*           ELSE                                                   0555
*             DO;                   /* ELSE PUT DESCRIPTION LINES IN
*                                      RECORD IN OUTPUT QUEUE        */
         B     @RC00553                                            0555
@RF00553 DS    0H                                                  0556
*               DLINES=(ZZ1PDRP->DMCBIRL-LENGTH(PDREC))/DLINELN;/* #
*                                      OF DESC LINES IN FETCHED    0556
*                                      RECORD =                    0556
*                                      LENGTH(FETCHED-RECORD) /    0556
*                                      LENGTH(1-DESC-LINE)           */
         L     @14,ZZ2ZZ1P(,ZZ2PTR)                                0556
         L     @14,ZZ1PDRP(,@14)                                   0556
         L     @00,DMCBIRL(,@14)                                   0556
         SL    @00,@CF00063                                        0556
         SRDA  @00,32                                              0556
         D     @00,@CF01010                                        0556
         LR    DLINES,@01                                          0556
*               DO COUNTER=ONE TO DLINES;/* DO FROM 1 TO # OF DESC 0557
*                                      LINES IN FETCHED REC          */
         LA    COUNTER,1                                           0557
         B     @DE00557                                            0557
@DL00557 DS    0H                                                  0558
*                 DO;               /* BLSDMSG (ZZ2PARM,DESC2ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP        0558
*                                      INSERT(PDRDESCR(COUNTER))     */
*                   IOPTLIST(1)=0;  /* LAST INSERT                   */
         SLR   @14,@14                                             0559
         ST    @14,IOPTLIST                                        0559
*                   IOPTLIST(2)=ADDR(PDRDESCR(COUNTER));/* INSERT  0560
*                                      NAME POINTER                  */
         LA    @10,72                                              0560
         LR    @01,COUNTER                                         0560
         MR    @00,@10                                             0560
         AL    @01,@CF01357                                        0560
         LA    @04,PDRDESCR-16(@01,DESCPTR)                        0560
         ST    @04,IOPTLIST+4                                      0560
*                   IOPTLIST(3)=0;  /* ZERO RESERVED FIELD           */
         ST    @14,IOPTLIST+8                                      0561
*                   RFY                                            0562
*                     I015F BASED(ADDR(IOPTLIST(3)));/* ACCESS BYTES
*                                      1-2                           */
*                   I015F=LENGTH(PDRDESCR(COUNTER));/* INSERT LENGTH */
         LA    @14,IOPTLIST+8                                      0563
         STH   @10,I015F(,@14)                                     0563
*                   CALL BLSDMSG0(ZZ2PARM,DESC2ID,DATAHEAD,BLSDMSGS,
*                       '01000000'B,ADDR(IOPTLIST));/* BUILD MESSAGE */
         L     @14,@PC00001                                        0564
         ST    @14,@AL00001                                        0564
         LA    @14,@CF01188                                        0564
         ST    @14,@AL00001+4                                      0564
         L     @14,@PC00001+12                                     0564
         ST    @14,@AL00001+8                                      0564
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0564
         ST    @14,@AL00001+12                                     0564
         LA    @14,@CB01243                                        0564
         ST    @14,@AL00001+16                                     0564
         LA    @14,IOPTLIST                                        0564
         ST    @14,@AFTEMPS                                        0564
         LA    @14,@AFTEMPS                                        0564
         ST    @14,@AL00001+20                                     0564
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0564
         LA    @01,@AL00001                                        0564
         BALR  @14,@15                                             0564
*                 END;              /* BLSDMSG (ZZ2PARM,DESC2ID,DATAH
*                                      EAD,BLSDMSGS) NOCOMP        0565
*                                      INSERT(PDRDESCR(COUNTER)) ADD
*                                      DESCRIPTION LINE TO OUTPUT  0565
*                                      QUEUE                         */
*                 QUEUELNS=QUEUELNS+ONE;/* INCREMENT # OF LINES IN 0566
*                                      THE OUTPUT QUEUE              */
         L     @14,@PC00001+20                                     0566
         LA    @10,1                                               0566
         AL    @10,QUEUELNS(,@14)                                  0566
         ST    @10,QUEUELNS(,@14)                                  0566
*               END;                                               0567
         AL    COUNTER,@CF00052                                    0567
@DE00557 CR    COUNTER,DLINES                                      0567
         BNH   @DL00557                                            0567
*               SEQNO=PDRRECSQ+ONE; /* INCREMENT SEQUENCE # OF RECORD
*                                      TO BE FETCHED                 */
         ICM   @14,15,PDRRECSQ(DESCPTR)                            0568
         AL    @14,@CF00052                                        0568
         STCM  @14,15,SEQNO                                        0568
*             END;                                                 0569
*       END;                                                       0570
@RC00553 DS    0H                                                  0570
@RC00534 DS    0H                                                  0570
@DE00507 TM    ENDFLAG,B'10000000'                                 0570
         BZ    @DL00507                                            0570
*     END;                                                         0571
*   ELSE                                                           0572
*     ;                                                            0572
*                                                                  0572
@RF00494 DS    0H                                                  0573
*   /*****************************************************************/
*   /*                                                               */
*   /* PERFORM THE FOLLOWING IF DSNAMES ARE NEEDED FOR OUTPUT        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0573
*   IF LPDSNAME=ON                  /* IF DSNAMES ARE NEEDED         */
*     THEN                                                         0573
         L     @14,@PC00001+8                                      0573
         L     @14,LPWAPTR(,@14)                                   0573
         TM    LPDSNAME(@14),B'00001000'                           0573
         BNO   @RF00573                                            0573
*     DO;                                                          0574
*       IF LPDSDESC=ON              /* IF DATA SET DESCRIPTION IS  0575
*                                      NEEDED                        */
*         THEN                                                     0575
         TM    LPDSDESC(@14),B'00000100'                           0575
         BNO   @RF00575                                            0575
*         DSDESC=YES;               /* THEN SEND 'YES' TO LISTDSN    */
         MVC   DSDESC(3),@CC01158                                  0576
*       ELSE                                                       0577
*         DSDESC=NO;                /* ELSE SEND 'NO'                */
         B     @RC00575                                            0577
@RF00575 MVC   DSDESC(3),@CC01160                                  0577
*       RESPECIFY                                                  0578
*         PDREC BASED(DSRPTR);      /* RFY BASE OF PDR               */
@RC00575 DS    0H                                                  0579
*       DSRPTR=ADDR(DSBUFFER);      /* INITIALIZE PTR FOR DATA SET 0579
*                                      RECORDS                       */
         LA    DSRPTR,DSBUFFER                                     0579
*       RECTYPE=PDRDSNC;            /* RECORD TYPE IS 'DS'           */
         MVC   RECTYPE(2),@CC01031                                 0580
*       PDRPREF=FPDBPIDP;           /* PROBLEM PREFIX                */
         L     @14,ZZ2ZZ1P(,ZZ2PTR)                                0581
         L     @14,ZZ1FPP(,@14)                                    0581
         MVC   PDRPREF(3),FPDBPIDP(@14)                            0581
*       PDRPID=STATPTR->PDRKPNUM;   /* PROBLEM TO BE FETCHED IS    0582
*                                      CURRENT PROBLEM               */
         L     @14,@PC00001+4                                      0582
         L     @14,STATPTR(,@14)                                   0582
         MVC   PDRPID(5),PDRKPNUM(@14)                             0582
*       SEQNO=EBCDIC0;              /* 1ST SEQUENCE # = 0            */
         MVC   SEQNO(4),@CC01152                                   0583
*       ENDFLAG=OFF;                /* TURN OFF ENDFLAG              */
         NI    ENDFLAG,B'01111111'                                 0584
*       DO WHILE(ENDFLAG=OFF);      /* DO WHILE FETCHED RECORD IS A
*                                      DATA SET RECORD FOR CURRENT 0585
*                                      PID                           */
*                                                                  0585
         B     @DE00585                                            0585
@DL00585 DS    0H                                                  0586
*         /***********************************************************/
*         /*                                                         */
*         /* BLSGET (ZZ1PDRP)                                        */
*         /* AREAL(DSRPTR)AREALEN(LENGTH(DSBUFFER))GENGE             */
*         /* ARG(SRCHKEY)ARGLEN(SRCHKEYL)                            */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0586
*         DO;                       /* BLSGET (ZZ1PDRP) AREAL(DSRPTR)
*                                      AREALEN(LENGTH(DSBUFFER))GENGE
*                                      ARG(SRCHKEY)ARGLEN(SRCHKEYL)  */
*           RFY                                                    0587
*             GPR01P RSTD;                                         0587
*           GPR01P=ZZ1PDRP;         /* ADDRESS DMCB                  */
         L     @14,ZZ2ZZ1P(,ZZ2PTR)                                0588
         L     GPR01P,ZZ1PDRP(,@14)                                0588
*           RFY                                                    0589
*             DMCB BASED(GPR01P);                                  0589
*           IF((GPR01P&'FFFFFFF8'X)=GPR01P)&DMCBID='DMCB'/* VALID  0590
*                                      DMCB ?                        */
*             THEN                                                 0590
         LR    @14,GPR01P                                          0590
         N     @14,@CF01307                                        0590
         CLR   @14,GPR01P                                          0590
         BNE   @RF00590                                            0590
         CLC   DMCBID(4,GPR01P),@CC01308                           0590
         BNE   @RF00590                                            0590
*             DO;                                                  0591
*               DMCBBUFP=DSRPTR&'7FFFFFFF'X;/* PLACE BUFFER ADDRESS
*                                      IN DMCB                       */
         LR    @14,DSRPTR                                          0592
         N     @14,@CF01309                                        0592
         ST    @14,DMCBBUFP(,GPR01P)                               0592
*               DMCBBLEN=LENGTH(DSBUFFER)&'7FFFFFFF'X;/* PLACE BUFFER
*                                      LENGTH IN DMCB                */
         MVC   DMCBBLEN(4,GPR01P),@CF01344                         0593
*               DMCBKEYP=ADDR(SRCHKEY);/* PLACE KEY ADDRESS IN DMCB  */
         LA    @14,SRCHKEY                                         0594
         ST    @14,DMCBKEYP(,GPR01P)                               0594
*               DMCBKEYL=(SRCHKEYL)&'7FFFFFFF'X;/* PLACE KEY LENGTH
*                                      IN DMCB                       */
         MVC   DMCBKEYL(4,GPR01P),@CF00960                         0595
*               DMCBKYD='1'B;       /* INDICATE KEYED ACCESS         */
*               DMCBGKY='1'B;       /* INDICATE GENERIC KEY          */
*               DMCBAPX='1'B;       /* INDICATE APROX MATCH          */
*               DMCBUPD='0'B;       /* DEFAULT FOR GET IS NUP        */
         OI    DMCBKYD(GPR01P),B'11100000'                         0599
         NI    DMCBUPD(GPR01P),B'11101111'                         0599
*               DMCBRQST=DMCBGER;   /* INDICATE GET REQUEST          */
         MVI   DMCBRQST(GPR01P),X'04'                              0600
*               CALL DMCBRI->DMCBDMGR;/* CALL BLSCRQST               */
         L     @15,DMCBRI(,GPR01P)                                 0601
         BALR  @14,@15                                             0601
*             END;                                                 0602
*           ELSE                                                   0603
*             DO;                                                  0603
         B     @RC00590                                            0603
@RF00590 DS    0H                                                  0604
*               RFY                                                0604
*                (GPR00F,                                          0604
*                 GPR15F) RSTD;                                    0604
*               GPR00F=0;           /* INDICATE NO MESSAGE CHAIN     */
         SLR   GPR00F,GPR00F                                       0605
*               GPR15F=16;          /* INDICATE INVALID DMCB         */
         LA    GPR15F,16                                           0606
*               RFY                                                0607
*                (GPR00F,                                          0607
*                 GPR15F);                                         0607
*             END;                                                 0608
*           RFY                                                    0609
*             DMCB;                                                0609
@RC00590 DS    0H                                                  0610
*           RFY                                                    0610
*             GPR01P;                                              0610
*         END;                      /* BLSGET (ZZ1PDRP) AREAL(DSRPTR)
*                                      AREALEN(LENGTH(DSBUFFER))GENGE
*                                      ARG(SRCHKEY)ARGLEN(SRCHKEYL)
*                                      FETCH A DATA SET RECORD       */
*         IF((RETCDE^=ZZZFLAGI)     /* IF RETURN CODE ^= 0           */
*             &(RETCDE^=ZZZFLAGE))  /* AND RETURN CODE ^= 8          */
*           THEN                                                   0612
         SLR   @14,@14                                             0612
         CR    RETCDE,@14                                          0612
         BE    @RF00612                                            0612
         C     RETCDE,@CF00060                                     0612
         BE    @RF00612                                            0612
*           DO;                                                    0613
*             IF RETCDE=ZZZFLAGT    /* IF RETURN CODE = 16           */
*               THEN                                               0614
         C     RETCDE,@CF00063                                     0614
         BNE   @RF00614                                            0614
*               ERRHEAD=ZERO;       /* THEN OUTPUT 1 ERROR MSG       */
         ST    @14,ERRHEAD                                         0615
*             ELSE                                                 0616
*               ERRHEAD=ZZ1PDRP->DMCBMSG;/* ELSE OUTPUT MSG CHAIN    */
         B     @RC00614                                            0616
@RF00614 L     @14,ZZ2ZZ1P(,ZZ2PTR)                                0616
         L     @14,ZZ1PDRP(,@14)                                   0616
         L     @14,DMCBMSG(,@14)                                   0616
         ST    @14,ERRHEAD                                         0616
*             DO;                   /* BLSDMSG (ZZ2PARM,PUTID,DATAHEA
*                                      D,BLSDMSGS) ROUTE(BOTH)       */
@RC00614 DS    0H                                                  0618
*               CALL BLSDMSG0(ZZ2PARM,PUTID,DATAHEAD,BLSDMSGS,     0618
*                   '00110000'B,0); /* BUILD MESSAGE                 */
         L     @14,@PC00001                                        0618
         ST    @14,@AL00001                                        0618
         LA    @14,@CF01194                                        0618
         ST    @14,@AL00001+4                                      0618
         L     @14,@PC00001+12                                     0618
         ST    @14,@AL00001+8                                      0618
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0618
         ST    @14,@AL00001+12                                     0618
         LA    @14,@CB01312                                        0618
         ST    @14,@AL00001+16                                     0618
         LA    @14,@CF00057                                        0618
         ST    @14,@AL00001+20                                     0618
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0618
         LA    @01,@AL00001                                        0618
         BALR  @14,@15                                             0618
*             END;                  /* BLSDMSG (ZZ2PARM,PUTID,DATAHEA
*                                      D,BLSDMSGS) ROUTE(BOTH) OUTPUT
*                                      CONTENTS OF THE DATA QUEUE    */
*             DO;                   /* BLSDMSG (ZZ2PARM,GETID,ERRHEAD
*                                      ,BLSDMSGS) LIFO ROUTE(TERM)   */
*               CALL BLSDMSG0(ZZ2PARM,GETID,ERRHEAD,BLSDMSGS,'10010000'
*                   ,0);            /* BUILD MESSAGE                 */
         L     @14,@PC00001                                        0621
         ST    @14,@AL00001                                        0621
         LA    @14,@CF01192                                        0621
         ST    @14,@AL00001+4                                      0621
         LA    @14,ERRHEAD                                         0621
         ST    @14,@AL00001+8                                      0621
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0621
         ST    @14,@AL00001+12                                     0621
         LA    @14,@CB01313                                        0621
         ST    @14,@AL00001+16                                     0621
         LA    @14,@CF00057                                        0621
         ST    @14,@AL00001+20                                     0621
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0621
         LA    @01,@AL00001                                        0621
         BALR  @14,@15                                             0621
*             END;                  /* BLSDMSG (ZZ2PARM,GETID,ERRHEAD
*                                      ,BLSDMSGS) LIFO ROUTE(TERM) 0622
*                                      OUTPUT ERROR MSGS             */
*             DO;                   /* ABEND(GETABEND) DUMP          */
*               RESPECIFY                                          0624
*                (GPR01F) RESTRICTED;                              0624
*               GPR01F=GETABEND;    /* COMP CODE IN REG 1            */
         LA    GPR01F,123                                          0625
*               GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG */
         O     GPR01F,@CF00072                                     0626
*               SVC(13);            /* ISSUE ABEND SVC               */
         SVC   13                                                  0627
*               RESPECIFY                                          0628
*                (GPR01F) UNRESTRICTED;                            0628
*             END;                  /* ABEND(GETABEND) DUMP ABEND    */
*           END;                                                   0630
*         ELSE                                                     0631
*           IF((PDRKPID^=STATPTR->  /* IF PROBLEM OF FETCHED         */
*               PDRKPID)            /* RECORD ^= CURRENT PROBLEM     */
*               ×(PDRKRCTY^=PDRDSNC)/* OR TYPE OF RECORD FETCHED ^=
*                                      DATA SET                      */
*               ×(RETCDE=ZZZFLAGE)) /* OR END OF FILE OF PDR         */
*             THEN                                                 0631
         B     @RC00612                                            0631
@RF00612 L     @14,@PC00001+4                                      0631
         L     @14,STATPTR(,@14)                                   0631
         CLC   PDRKPID(8,DSRPTR),PDRKPID(@14)                      0631
         BNE   @RT00631                                            0631
         CLC   PDRKRCTY(2,DSRPTR),@CC01031                         0631
         BNE   @RT00631                                            0631
         C     RETCDE,@CF00060                                     0631
         BNE   @RF00631                                            0631
@RT00631 DS    0H                                                  0632
*             ENDFLAG=ON;           /* THEN END THE LOOP             */
         OI    ENDFLAG,B'10000000'                                 0632
*           ELSE                                                   0633
*             DO;                                                  0633
         B     @RC00631                                            0633
@RF00631 DS    0H                                                  0634
*               CALL BLSFLP00(ZZ2PARM,PDRDSNM,DSDESC,DATAHEAD);/*  0634
*                                      ELSE CALL LISTDSN TO ADD DATA
*                                      SET INFO TO THE OUTPUT DATA 0634
*                                      QUEUE                         */
         L     @14,@PC00001                                        0634
         ST    @14,@AL00001                                        0634
         LA    @14,PDRDSNM(,DSRPTR)                                0634
         ST    @14,@AL00001+4                                      0634
         LA    @14,DSDESC                                          0634
         ST    @14,@AL00001+8                                      0634
         L     @14,@PC00001+12                                     0634
         ST    @14,@AL00001+12                                     0634
         L     @10,ZZ2DVTP(,ZZ2PTR)                                0634
         L     @15,DVTLP00P(,@10)                                  0634
         LA    @01,@AL00001                                        0634
         BALR  @14,@15                                             0634
*               MAXRETC=MAX(RETCDE,MAXRETC);/* RETURN CODE=0,8, OR 12*/
         CR    MAXRETC,RETCDE                                      0635
         BNL   *+6
         LR    MAXRETC,RETCDE                                      0635
*               IF RETCDE=ZZZFLAGS  /* IF RETURN CODE = 12           */
*                 THEN                                             0636
         C     RETCDE,@CF00038                                     0636
         BNE   @RF00636                                            0636
*                 RETURN CODE(RETCDE);/* THEN RETURN                 */
         LR    @10,@15                                             0637
         L     @13,4(,@13)                                         0637
         L     @00,@SIZDATD                                        0637
         LR    @01,@11                                             0637
         BLSUFRES R,LV=(0),A=(1)
         LR    @15,@10                                             0637
         L     @14,12(,@13)                                        0637
         LM    @00,@12,20(@13)                                     0637
         BR    @14                                                 0637
*               ELSE                                               0638
*                 ;                                                0638
@RF00636 DS    0H                                                  0639
*               QUEUELNS=QUEUELNS+ONE;/* INCREMENT # OF LINES IN THE
*                                      OUTPUT QUEUE                  */
         L     @14,@PC00001+20                                     0639
         LA    @10,1                                               0639
         L     @04,QUEUELNS(,@14)                                  0639
         ALR   @04,@10                                             0639
         ST    @04,QUEUELNS(,@14)                                  0639
*               SEQNO=PDRRECSQ+ONE; /* INCREMENT THE SEQUENCE # OF 0640
*                                      RECORD TO BE FETCHED          */
         ICM   @14,15,PDRRECSQ(DSRPTR)                             0640
         ALR   @10,@14                                             0640
         STCM  @10,15,SEQNO                                        0640
*             END;                                                 0641
*       END;                                                       0642
@RC00631 DS    0H                                                  0642
@RC00612 DS    0H                                                  0642
@DE00585 TM    ENDFLAG,B'10000000'                                 0642
         BZ    @DL00585                                            0642
*     END;                                                         0643
*   ELSE                                                           0644
*     ;                                                            0644
@RF00573 DS    0H                                                  0645
*   ZZ1PDRP->DMCBMSG=ZERO;          /* SET MSG AREA PTR TO 0         */
         L     @14,ZZ2ZZ1P(,ZZ2PTR)                                0645
         L     @14,ZZ1PDRP(,@14)                                   0645
         SLR   @10,@10                                             0645
         ST    @10,DMCBMSG(,@14)                                   0645
*   RETURN CODE(MAXRETC);           /* AND RETURN                    */
         L     @13,4(,@13)                                         0646
         L     @00,@SIZDATD                                        0646
         LR    @01,@11                                             0646
         BLSUFRES R,LV=(0),A=(1)
         LR    @15,@07                                             0646
         L     @14,12(,@13)                                        0646
         LM    @00,@12,20(@13)                                     0646
         BR    @14                                                 0646
*/*BLSUPEND--MVS IPCS MODULE                                         */
*                                                                  0647
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                     0647
*     GPR01F FIXED(31) REG(1),                                     0647
*     GPR15F FIXED(31) REG(15),                                    0647
*     GPR01P PTR(31) REG(1);                                       0647
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0648
*     I031F FIXED(31) BASED,                                       0648
*     I031P PTR(31) BASED,                                         0648
*     I015F FIXED(15) BASED,                                       0648
*     I015P PTR(15) BASED,                                         0648
*     I008P PTR(8) BASED,                                          0648
*     I001C CHAR(1) BASED;                                         0648
*   DECLARE                                                        0649
*     IOPTLIST(33) PTR(31) BDY(WORD);/* OPTION LIST ARRAY            */
*   GENERATE NODEFS NOREFS DATA;                                   0650
*   END                             /* BLRPEND                       */
*                                                                  0651
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (BLSUZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLRFULL )                                       */
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */
*/*%INCLUDE SYSLIB  (IKJPSCB )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJUPT  )                                       */
*/*%INCLUDE SYSLIB  (BLSUSERV)                                       */
*/*%INCLUDE SYSLIB  (BLRSERV )                                       */
*/*%INCLUDE SYSLIB  (BLRSERVD)                                       */
*/*%INCLUDE SYSLIB  (BLSDSERV)                                       */
*/*%INCLUDE SYSLIB  (BLSFP   )                                       */
*/*%INCLUDE SYSLIB  (BLSELPWA)                                       */
*/*%INCLUDE SYSLIB  (BLSPDR  )                                       */
*                                                                  0651
*       ;                                                          0651
@EL00001 L     @13,4(,@13)                                         0651
@EF00001 L     @00,@SIZDATD                                        0651
         LR    @01,@11                                             0651
         BLSUFRES R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0651
         BR    @14                                                 0651
@DATA    DS    0H
@CH00105 DC    H'3'
@CH00049 DC    H'4'
@CH00102 DC    H'5'
@CH00168 DC    H'7'
@CH00633 DC    H'10'
@CH01000 DC    H'60'
@CH01136 DC    H'67'
@SM01351 MVC   FULLOWN(0),PDROWNID(@10)
@SM01353 MVC   NEWABS(0),PDRABS(@10)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    6F
@AL00001 DS    6A
@AFTEMPS DS    1F
BLSELPOP CSECT
         DS    0F
@CF00057 DC    F'0'
@CF00052 DC    F'1'
@CH00052 EQU   @CF00052+2
@CF00060 DC    F'8'
@CF00038 DC    F'12'
@CF00960 DC    F'14'
@CF00063 DC    F'16'
@CF01139 DC    F'61'
@CF01010 DC    F'72'
@CF01344 DC    F'952'
@CF01192 DC    F'4043'
@CF01166 DC    F'40006'
@CF01168 DC    F'40007'
@CF01170 DC    F'40008'
@CF01172 DC    F'40009'
@CF01174 DC    F'40010'
@CF01176 DC    F'40011'
@CF01178 DC    F'40012'
@CF01180 DC    F'40013'
@CF01182 DC    F'40014'
@CF01184 DC    F'40015'
@CF01186 DC    F'40016'
@CF01188 DC    F'40017'
@CF01190 DC    F'40019'
@CF01357 DC    F'-56'
@CF01194 DC    F'-1'
@CF00072 DC    XL4'80000000'
@CF01307 DC    XL4'FFFFFFF8'
@CF01309 DC    XL4'7FFFFFFF'
@DATD    DSECT
         DS    0D
ERRHEAD  DS    A
SRCHKEY  DS    CL14
         ORG   SRCHKEY
RECTYPE  DS    CL2
PDRPREF  DS    CL3
PDRPID   DS    CL5
SEQNO    DS    CL4
         ORG   SRCHKEY+14
FULLOWN  DS    CL7
NEWPDATE DS    CL6
         ORG   NEWPDATE
NEWPYEAR DS    CL2
NEWPMO   DS    CL2
NEWPDAY  DS    CL2
         ORG   NEWPDATE+6
NEWIDATE DS    CL6
         ORG   NEWIDATE
NEWIYEAR DS    CL2
NEWIMO   DS    CL2
NEWIDAY  DS    CL2
         ORG   NEWIDATE+6
NEWTDATE DS    CL6
         ORG   NEWTDATE
NEWTYEAR DS    CL2
NEWTMO   DS    CL2
NEWTDAY  DS    CL2
         ORG   NEWTDATE+6
NEWFDATE DS    CL6
         ORG   NEWFDATE
NEWFYEAR DS    CL2
NEWFMO   DS    CL2
NEWFDAY  DS    CL2
         ORG   NEWFDATE+6
MAXDATE  DS    CL6
         ORG   MAXDATE
MAXYEAR  DS    CL2
MAXMO    DS    CL2
MAXDAY   DS    CL2
         ORG   MAXDATE+6
LASTDATE DS    CL8
         ORG   LASTDATE
LASTMO   DS    CL2
SLASH1   DS    CL1
LASTDAY  DS    CL2
SLASH2   DS    CL1
LASTYEAR DS    CL2
         ORG   LASTDATE+8
NEWABS   DS    CL67
DEBUFFER DS    CL952
DSDESC   DS    CL3
DSBUFFER DS    CL952
ENDFLAG  DS    BL1
         DS    CL2
IOPTLIST DS    33A
BLSELPOP CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC01079 DC    C'       '
@CC01131 EQU   @CC01079
@CC01152 DC    C'0000'
@CC01308 DC    C'DMCB'
@CC01158 DC    C'YES'
@CC01160 DC    C'NO '
@CC01029 DC    C'DE'
@CC01031 DC    C'DS'
@CB01204 DC    B'00000000'
@CB01243 DC    B'01000000'
@CB01312 DC    B'00110000'
@CB01313 DC    B'10010000'
NULLABST DC    CL61' '
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSELPOP CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSELPOP+19)/20+7)/8)CL8'BLSELPOP'
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSELPOP CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
MAXRETC  EQU   @07
DSRPTR   EQU   @06
COUNTER  EQU   @02
DESCPTR  EQU   @06
DLINES   EQU   @03
LASTCHAR EQU   @02
RETC     EQU   @02
ZZ2PTR   EQU   @05
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R9       EQU   @09
RB       EQU   @11
RD       EQU   @13
RE       EQU   @14
RF       EQU   @15
RETCDE   EQU   @15
GPR01P   EQU   @01
GPR00F   EQU   @00
GPR15F   EQU   @15
GPR01F   EQU   @01
RA       EQU   @10
RC       EQU   @12
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
DMCB     EQU   0
DMCBID   EQU   DMCB
DMCBIRL  EQU   DMCB+16
DMCBFTY  EQU   DMCB+20
DMCBOPN  EQU   DMCB+21
DMCBRQST EQU   DMCB+22
DMCBRMOD EQU   DMCB+23
DMCBOUT  EQU   DMCBRMOD
DMCBOPTS EQU   DMCB+24
DMCBKYD  EQU   DMCBOPTS
DMCBGKY  EQU   DMCBOPTS
DMCBAPX  EQU   DMCBOPTS
DMCBUPD  EQU   DMCBOPTS
DMCBMFLG EQU   DMCB+28
DMCBBUFP EQU   DMCB+32
DMCBBLEN EQU   DMCB+36
DMCBKEYP EQU   DMCB+44
DMCBKEYL EQU   DMCB+48
DMCBMSG  EQU   DMCB+52
DMCBRI   EQU   DMCB+64
DMCBACBE EQU   DMCB+124
DMCBSPEC EQU   DMCB+380
DMCBAMS  EQU   DMCB+416
DMCBAUDT EQU   DMCB+568
DMCBLSCP EQU   DMCBAUDT+16
DMCBDMGR EQU   0
ZZ1      EQU   0
ZZ1PDRP  EQU   ZZ1+40
ZZ1FPP   EQU   ZZ1+140
ZZ1ATTN  EQU   ZZ1+360
ZZ1EVE   EQU   ZZ1ATTN+4
ZZ1F     EQU   ZZ1+368
ZZ1N     EQU   ZZ1+1116
ZZ2      EQU   0
ZZ2AMD   EQU   ZZ2
@NM00013 EQU   ZZ2AMD+7
ZZ2PRT   EQU   ZZ2+138
ZZ2PRTT  EQU   ZZ2PRT+4
ZZ2PRTT1 EQU   ZZ2PRTT+1
ZZ2A     EQU   ZZ2+272
ZZ2AF    EQU   ZZ2A+16
ZZ2APID  EQU   ZZ2A+64
ZZ2AD    EQU   ZZ2A+74
ZZ2ADD   EQU   ZZ2AD
ZZ2ADDT  EQU   ZZ2ADD+2
ZZ2ADM   EQU   ZZ2AD+46
ZZ2ADMT  EQU   ZZ2ADM+2
ZZ2ADP   EQU   ZZ2AD+56
ZZ2ADPT  EQU   ZZ2ADP+2
ZZ2AQAS  EQU   ZZ2A+144
ZZ2AQD   EQU   ZZ2A+160
ZZ2AQDT  EQU   ZZ2AQD+10
ZZ2AQDF  EQU   ZZ2AQD+52
ZZ2STG   EQU   ZZ2+960
ZZ2ALLOP EQU   ZZ2+992
ZZ2FREEP EQU   ZZ2+996
ZZ2FF19P EQU   ZZ2+1000
ZZ2FRE1P EQU   ZZ2+1004
ZZ2FF18P EQU   ZZ2+1008
ZZ2DYNAP EQU   ZZ2+1012
ZZ2ZZ2CP EQU   ZZ2+1016
ZZ2ZZ2DP EQU   ZZ2+1020
ZZ2STAIP EQU   ZZ2+1024
ZZ2FF02P EQU   ZZ2+1028
ZZ2GETLP EQU   ZZ2+1032
ZZ2PARSP EQU   ZZ2+1036
ZZ2PTGTP EQU   ZZ2+1040
ZZ2PUTLP EQU   ZZ2+1044
ZZ2SCANP EQU   ZZ2+1048
ZZ2STCKP EQU   ZZ2+1052
ZZ2ALOCP EQU   ZZ2+1056
ZZ2MSGSP EQU   ZZ2+1060
ZZ2TRMOP EQU   ZZ2+1064
ZZ2TRMVP EQU   ZZ2+1068
ZZ2MSG0P EQU   ZZ2+1076
ZZ2PUTNP EQU   ZZ2+1084
ZZ2TRMNP EQU   ZZ2+1088
ZZ2ENQ0P EQU   ZZ2+1092
ZZ2ADSDP EQU   ZZ2+1096
ZZ2APDRP EQU   ZZ2+1100
ZZ2FDSDP EQU   ZZ2+1104
ZZ2FPDRP EQU   ZZ2+1108
ZZ2ZZ1P  EQU   ZZ2+1264
ZZ2DVTP  EQU   ZZ2+1276
ZZ2BVTP  EQU   ZZ2+1280
ZZ2CPPL  EQU   ZZ2+1292
ZZ2CPPLC EQU   ZZ2CPPL
ZZ2ITR   EQU   ZZ2+2840
ZZ2ITRE  EQU   ZZ2ITR+16
ZZ2ITSE  EQU   ZZ2+2864
ZZ2ES    EQU   ZZ2+2872
ZZ2AMDX  EQU   ZZ2+7160
ZZ2AXO   EQU   ZZ2+7934
ZZ2AXOT  EQU   ZZ2AXO+2
CMD      EQU   0
CMDT     EQU   CMD+4
PSCB     EQU   0
PSCBATR1 EQU   PSCB+16
ECT      EQU   0
ECTSWS   EQU   ECT+28
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
UPT      EQU   0
UPTSWS   EQU   UPT+12
SA       EQU   0
SA1      EQU   SA
SAR      EQU   SA+12
BVT      EQU   0
BVTPUTLP EQU   BVT+4
BVTPUTOP EQU   BVT+12
BVTPUTTP EQU   BVT+16
BVTPUTVP EQU   BVT+20
BVTPUTAP EQU   BVT+24
BVTPRTTP EQU   BVT+28
BVTPRTAP EQU   BVT+32
BVTPUTDP EQU   BVT+36
BVTMONP  EQU   BVT+40
BVTMON2P EQU   BVT+44
BVTVSARP EQU   BVT+48
BVTVSENP EQU   BVT+64
BVTVSERP EQU   BVT+68
BVTVSGEP EQU   BVT+72
BVTVSGUP EQU   BVT+76
BVTVSPOP EQU   BVT+80
BVTVSPUP EQU   BVT+84
BVTMPKNP EQU   BVT+104
BVTMONLP EQU   BVT+108
BVTPUTCP EQU   BVT+132
BVTMPK1P EQU   BVT+136
BVTZZ2RP EQU   BVT+140
BVTPGMRP EQU   BVT+144
BVTMONAP EQU   BVT+148
BVTBLDDP EQU   BVT+152
BVTBLDLP EQU   BVT+156
BVTPGMCP EQU   BVT+160
BVTPGMDP EQU   BVT+164
BVTPGMLP EQU   BVT+168
BVTMONCP EQU   BVT+180
BVTMONDP EQU   BVT+184
BVTMONTP EQU   BVT+188
BVTPARIP EQU   BVT+192
BVTPARUP EQU   BVT+196
BVTPRTNP EQU   BVT+204
BVTVSCRP EQU   BVT+208
BVTVSMRP EQU   BVT+212
BVTMONXP EQU   BVT+216
BVTTRMAP EQU   BVT+228
BLSDMSGS EQU   0
BLSDMSG0 EQU   0
BLSFLP00 EQU   0
DVT      EQU   0
DVTDEQPP EQU   DVT+8
DVTENQPP EQU   DVT+12
DVTAUTHP EQU   DVT+20
DVTLPCLP EQU   DVT+24
DVTBP00P EQU   DVT+28
DVTCN00P EQU   DVT+32
DVTDF00P EQU   DVT+36
DVTDS00P EQU   DVT+44
DVTFL00P EQU   DVT+48
DVTFP00P EQU   DVT+52
DVTGD00P EQU   DVT+56
DVTGG00P EQU   DVT+60
DVTGP00P EQU   DVT+64
DVTND00P EQU   DVT+68
DVTND01P EQU   DVT+72
DVTOD00P EQU   DVT+76
DVTPS00P EQU   DVT+80
DVTSD00P EQU   DVT+84
DVTSL00P EQU   DVT+88
DVTTL00P EQU   DVT+92
DVTUD00P EQU   DVT+96
DVTUP00P EQU   DVT+100
DVTLP00P EQU   DVT+104
DVTLALLP EQU   DVT+108
DVTLPFMP EQU   DVT+112
DVTCLOSP EQU   DVT+116
DVTOPENP EQU   DVT+120
DVTPERAP EQU   DVT+124
DVTDALLP EQU   DVT+128
FPBLOK   EQU   0
FPPIDP   EQU   FPBLOK+96
FPDBPIDP EQU   FPBLOK+100
FPADMNM  EQU   FPBLOK+120
FPDELNM  EQU   FPBLOK+128
BLSELPWA EQU   0
LPFRMFLG EQU   BLSELPWA+12
LPLIST   EQU   LPFRMFLG
LPABST   EQU   LPFRMFLG
LPSTAT   EQU   LPFRMFLG
LPDESC   EQU   LPFRMFLG
LPDSNAME EQU   LPFRMFLG
LPDSDESC EQU   LPFRMFLG
BLSESCB  EQU   0
PDREC    EQU   0
PDRKEY   EQU   PDREC
PDRGRP   EQU   PDRKEY
PDRKRCTY EQU   PDRGRP
PDRKPID  EQU   PDRGRP+2
PDRKPNUM EQU   PDRKPID+3
PDRRECSQ EQU   PDRKEY+10
PDRINFO  EQU   PDREC+16
I015F    EQU   0
BLSCALOC EQU   0
BLSDADSD EQU   0
BLSDAPDR EQU   0
BLSDDEQP EQU   0
BLSDENQP EQU   0
BLSDENQ0 EQU   0
BLSDFDSD EQU   0
BLSDFPDR EQU   0
BLSEAUTH EQU   0
BLSELPCL EQU   0
BLSELPFM EQU   0
BLSFBP00 EQU   0
BLSFCLOS EQU   0
BLSFCN00 EQU   0
BLSFDALL EQU   0
BLSFDF00 EQU   0
BLSFDS00 EQU   0
BLSFFL00 EQU   0
BLSFFP00 EQU   0
BLSFGD00 EQU   0
BLSFGG00 EQU   0
BLSFGP00 EQU   0
BLSFLALL EQU   0
BLSFND00 EQU   0
BLSFND01 EQU   0
BLSFOD00 EQU   0
BLSFOPEN EQU   0
BLSFPERA EQU   0
BLSFPS00 EQU   0
BLSFSD00 EQU   0
BLSFSL00 EQU   0
BLSFTL00 EQU   0
BLSFUD00 EQU   0
BLSFUP00 EQU   0
BLSUALLO EQU   0
BLSUBLDD EQU   0
BLSUBLDL EQU   0
BLSUDYNA EQU   0
BLSUFREE EQU   0
BLSUFRE1 EQU   0
BLSUMON  EQU   0
BLSUMONA EQU   0
BLSUMONC EQU   0
BLSUMOND EQU   0
BLSUMONL EQU   0
BLSUMONT EQU   0
BLSUMONX EQU   0
BLSUMON2 EQU   0
BLSUMPKN EQU   0
BLSUMPK1 EQU   0
BLSUPARI EQU   0
BLSUPARU EQU   0
BLSUPGMC EQU   0
BLSUPGMD EQU   0
BLSUPGML EQU   0
BLSUPGMR EQU   0
BLSUPRTA EQU   0
BLSUPRTN EQU   0
BLSUPRTT EQU   0
BLSUPUTA EQU   0
BLSUPUTC EQU   0
BLSUPUTD EQU   0
BLSUPUTL EQU   0
BLSUPUTN EQU   0
BLSUPUTO EQU   0
BLSUPUTT EQU   0
BLSUPUTV EQU   0
BLSUSTAI EQU   0
BLSUTRMA EQU   0
BLSUTRMN EQU   0
BLSUTRMO EQU   0
BLSUTRMV EQU   0
BLSUVSAR EQU   0
BLSUVSCR EQU   0
BLSUVSEN EQU   0
BLSUVSER EQU   0
BLSUVSGE EQU   0
BLSUVSGU EQU   0
BLSUVSMR EQU   0
BLSUVSPO EQU   0
BLSUVSPU EQU   0
BLSUZZ2C EQU   0
BLSUZZ2D EQU   0
BLSUZZ2R EQU   0
DMCBRQC  EQU   0
IKJEFF02 EQU   0
IKJEFF18 EQU   0
IKJEFF19 EQU   0
IKJGETL  EQU   0
IKJPARS  EQU   0
IKJPTGT  EQU   0
IKJPUTL  EQU   0
IKJSCAN  EQU   0
IKJSTCK  EQU   0
I001C    EQU   0
I008P    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
ZZ2PARM  EQU   0
STATPTR  EQU   0
LPWAPTR  EQU   0
DATAHEAD EQU   0
PIDCOUNT EQU   0
QUEUELNS EQU   0
DMCBVSM  EQU   DMCBAMS
DMCBQSM  EQU   DMCBAMS
CPPL     EQU   ZZ2CPPL
CPPLUPT  EQU   CPPL+4
CPPLPSCB EQU   CPPL+8
CPPLECT  EQU   CPPL+12
PDRSTREC EQU   PDRINFO
PDRODATE EQU   PDRSTREC
PDROTIME EQU   PDRSTREC+8
PDRCOMP  EQU   PDRSTREC+16
PDRSEV   EQU   PDRSTREC+26
PDROWNNM EQU   PDRSTREC+32
PDROWNID EQU   PDROWNNM
PDROWNLN EQU   PDROWNNM+7
PDRGROUP EQU   PDRSTREC+40
PDRSYS   EQU   PDRSTREC+48
PDRUSER  EQU   PDRSTREC+56
PDRPSTAT EQU   PDRSTREC+64
PDRPDATE EQU   PDRSTREC+72
PDRPTIME EQU   PDRSTREC+80
PDRRDATE EQU   PDRSTREC+88
PDRRTIME EQU   PDRSTREC+96
PDRISTAT EQU   PDRSTREC+104
PDRIDATE EQU   PDRSTREC+112
PDRITIME EQU   PDRSTREC+120
PDRAPRID EQU   PDRSTREC+128
PDRTSTAT EQU   PDRSTREC+140
PDRTDATE EQU   PDRSTREC+144
PDRTTIME EQU   PDRSTREC+152
PDRPTFID EQU   PDRSTREC+160
PDRFSTAT EQU   PDRSTREC+172
PDRFDATE EQU   PDRSTREC+176
PDRFTIME EQU   PDRSTREC+184
PDRFIXID EQU   PDRSTREC+192
PDRABS   EQU   PDRSTREC+256
PDRDEREC EQU   PDRINFO
PDRDESCR EQU   PDRDEREC
PDRDESC  EQU   PDRDESCR
PDRTRREC EQU   PDRINFO
PDRTRARR EQU   PDRTRREC
PDRHSREC EQU   PDRINFO
PDRDSREC EQU   PDRINFO
PDRDSNM  EQU   PDRDSREC
PDRSVALU EQU   PDRODATE
PDATE    EQU   PDRPDATE
PMO      EQU   PDATE
PDAY     EQU   PDATE+3
PYEAR    EQU   PDATE+6
IDATE    EQU   PDRIDATE
IMO      EQU   IDATE
IDAY     EQU   IDATE+3
IYEAR    EQU   IDATE+6
TDATE    EQU   PDRTDATE
TMO      EQU   TDATE
TDAY     EQU   TDATE+3
TYEAR    EQU   TDATE+6
FDATE    EQU   PDRFDATE
FMO      EQU   FDATE
FDAY     EQU   FDATE+3
FYEAR    EQU   FDATE+6
*                                      START UNREFERENCED COMPONENTS
@NM00076 EQU   FDATE+5
@NM00075 EQU   FDATE+2
@NM00074 EQU   TDATE+5
@NM00073 EQU   TDATE+2
@NM00072 EQU   IDATE+5
@NM00071 EQU   IDATE+2
@NM00070 EQU   PDATE+5
@NM00069 EQU   PDATE+2
PDRSVNUM EQU   PDRSVALU+3
PDRSVRES EQU   PDRSVALU
PDRDSRES EQU   PDRDSREC+52
PDRMEMB  EQU   PDRDSNM+44
PDRDSN   EQU   PDRDSNM
PDRHYMSD EQU   PDRHSREC+4
PDRHSLEN EQU   PDRHSREC
PDRTRKD  EQU   PDRTRARR
PDRDSSEQ EQU   PDRSTREC+396
PDRRES6  EQU   PDRSTREC+392
PDRTRKL  EQU   PDRSTREC+388
PDRDESCL EQU   PDRSTREC+384
PDRRES5  EQU   PDRSTREC+252
PDRRES4  EQU   PDRSTREC+167
PDRRES3  EQU   PDRSTREC+135
PDRRES1  EQU   PDRSTREC+27
CPPLCBUF EQU   CPPL
DMCBRES7 EQU   DMCBQSM+96
DMCBDCB  EQU   DMCBQSM
DMCBACB  EQU   DMCBVSM+76
DMCBRPL  EQU   DMCBVSM
PDRRESV  EQU   PDREC+14
PDRKPREF EQU   PDRKPID
SCBVALS  EQU   BLSESCB+16
SCBLASTP EQU   BLSESCB+12
SCBNXTSC EQU   BLSESCB+8
SCBFLDLN EQU   BLSESCB+4
SCBFLDOF EQU   BLSESCB
LPSCBLKS EQU   BLSELPWA+16
LPFRMRES EQU   LPFRMFLG
LPSUBTIT EQU   LPFRMFLG
LPPRBPTR EQU   BLSELPWA+8
LPSCBLKP EQU   BLSELPWA+4
LPWALEN  EQU   BLSELPWA
FPRES6   EQU   FPBLOK+136
FPDELLN  EQU   FPDELNM+7
FPDELID  EQU   FPDELNM
FPADMLN  EQU   FPADMNM+7
FPADMID  EQU   FPADMNM
FPGRPID  EQU   FPBLOK+112
FPSYSID  EQU   FPBLOK+104
FPRES4   EQU   FPBLOK+103
FPRES3   EQU   FPBLOK+99
FPRES2   EQU   FPBLOK+92
FPDSDS   EQU   FPBLOK+48
FPRES1   EQU   FPBLOK+44
FPPDDS   EQU   FPBLOK
DVT99999 EQU   DVT+256
DVT0064P EQU   DVT+252
DVT0063P EQU   DVT+248
DVT0062P EQU   DVT+244
DVT0061P EQU   DVT+240
DVT0060P EQU   DVT+236
DVT0059P EQU   DVT+232
DVT0058P EQU   DVT+228
DVT0057P EQU   DVT+224
DVT0056P EQU   DVT+220
DVT0055P EQU   DVT+216
DVT0054P EQU   DVT+212
DVT0053P EQU   DVT+208
DVT0052P EQU   DVT+204
DVT0051P EQU   DVT+200
DVT0050P EQU   DVT+196
DVT0049P EQU   DVT+192
DVT0048P EQU   DVT+188
DVT0047P EQU   DVT+184
DVT0046P EQU   DVT+180
DVT0045P EQU   DVT+176
DVT0044P EQU   DVT+172
DVT0043P EQU   DVT+168
DVT0042P EQU   DVT+164
DVT0041P EQU   DVT+160
DVT0040P EQU   DVT+156
DVT0039P EQU   DVT+152
DVT0038P EQU   DVT+148
DVT0037P EQU   DVT+144
DVT0036P EQU   DVT+140
DVT0035P EQU   DVT+136
DVT0034P EQU   DVT+132
DVT0011P EQU   DVT+40
DVT0005P EQU   DVT+16
DVT0002P EQU   DVT+4
DVT0001P EQU   DVT
BVT99999 EQU   BVT+256
BVT0064P EQU   BVT+252
BVT0063P EQU   BVT+248
BVT0062P EQU   BVT+244
BVT0061P EQU   BVT+240
BVT0060P EQU   BVT+236
BVT0059P EQU   BVT+232
BVT0057P EQU   BVT+224
BVT0056P EQU   BVT+220
BVTSTBLP EQU   BVT+200
BVT0045P EQU   BVT+176
BVT0044P EQU   BVT+172
BVT0033P EQU   BVT+128
BVT0032P EQU   BVT+124
BVT0031P EQU   BVT+120
BVT0030P EQU   BVT+116
BVT0029P EQU   BVT+112
BVT0026P EQU   BVT+100
BVT0025P EQU   BVT+96
BVT0024P EQU   BVT+92
BVT0023P EQU   BVT+88
BVT0016P EQU   BVT+60
BVT0015P EQU   BVT+56
BVT0014P EQU   BVT+52
BVT0003P EQU   BVT+8
BVT0001P EQU   BVT
SA99     EQU   SA+72
SARC     EQU   SAR+56
SARB     EQU   SAR+52
SARA     EQU   SAR+48
SAR9     EQU   SAR+44
SAR8     EQU   SAR+40
SAR7     EQU   SAR+36
SAR6     EQU   SAR+32
SAR5     EQU   SAR+28
SAR4     EQU   SAR+24
SAR3     EQU   SAR+20
SAR2     EQU   SAR+16
SAR1     EQU   SAR+12
SAR0     EQU   SAR+8
SARF     EQU   SAR+4
SARE     EQU   SAR
SAFWD    EQU   SA+8
SABAK    EQU   SA+4
SA1L     EQU   SA1+1
SA1P     EQU   SA1
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00068 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00067 EQU   UPT
@NM00066 EQU   ECT+52
@NM00065 EQU   ECT+48
@NM00064 EQU   ECT+44
@NM00063 EQU   ECTSWS2+1
@NM00062 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00061 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00060 EQU   PSCB+36
@NM00059 EQU   PSCB+32
@NM00058 EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00057 EQU   PSCBATR1
@NM00056 EQU   PSCBATR1
@NM00055 EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
PSCBUSRL EQU   PSCB+7
PSCBUSER EQU   PSCB
CMDT1    EQU   CMDT
CMDO     EQU   CMD+2
CMDL     EQU   CMD
ZZ299999 EQU   ZZ2+8192
ZZ2AXOT1 EQU   ZZ2AXOT
ZZ2AXOL  EQU   ZZ2AXO
@NM00054 EQU   ZZ2+7288
@NM00053 EQU   ZZ2AMDX+4
ZZ2AMDXC EQU   ZZ2AMDX
ZZ2HSD   EQU   ZZ2+3056
@NM00052 EQU   ZZ2ES
@NM00051 EQU   ZZ2+2868
ZZ2ITSEC EQU   ZZ2ITSE+1
@NM00050 EQU   ZZ2ITSE
ZZ2ITSEP EQU   ZZ2ITSE
ZZ2ITSEW EQU   ZZ2ITSE
@NM00049 EQU   ZZ2ITR+20
ZZ2ITREC EQU   ZZ2ITRE+1
@NM00048 EQU   ZZ2ITRE
ZZ2ITREP EQU   ZZ2ITRE
ZZ2ITREW EQU   ZZ2ITRE
@NM00047 EQU   ZZ2ITR+9
ZZ2ITRRC EQU   ZZ2ITR+8
ZZ2ITR2P EQU   ZZ2ITR+4
ZZ2ITRPP EQU   ZZ2ITR
@NM00046 EQU   ZZ2+1544
ZZ2PGM   EQU   ZZ2+1536
@NM00045 EQU   ZZ2+1526
ZZ2CW    EQU   ZZ2+1524
@NM00044 EQU   ZZ2+1504
@NM00043 EQU   ZZ2+1352
ZZ2FFSYP EQU   ZZ2+1348
ZZ2SASYP EQU   ZZ2+1344
ZZ2RDSYP EQU   ZZ2+1340
ZZ2RASYP EQU   ZZ2+1336
ZZ2PHSYP EQU   ZZ2+1332
ZZ2ESSYP EQU   ZZ2+1328
ZZ200SYP EQU   ZZ2+1324
ZZ2SCWP  EQU   ZZ2+1320
ZZ2TTLP  EQU   ZZ2+1316
ZZ2LOADP EQU   ZZ2+1312
ZZ2VRESP EQU   ZZ2+1308
ZZ2CPPLE EQU   ZZ2CPPL+12
ZZ2CPPLP EQU   ZZ2CPPL+8
ZZ2CPPLU EQU   ZZ2CPPL+4
ZZ2VRSAP EQU   ZZ2+1288
ZZ2RVTP  EQU   ZZ2+1284
@NM00042 EQU   ZZ2+1272
@NM00041 EQU   ZZ2+1268
ZZ2RPLP  EQU   ZZ2+1260
ZZ2TCBP  EQU   ZZ2+1256
@NM00040 EQU   ZZ2+1252
ZZ2ZZ2P  EQU   ZZ2+1248
@NM00039 EQU   ZZ2+1112
@NM00038 EQU   ZZ2+1080
ZZ2FT25P EQU   ZZ2+1072
@NM00037 EQU   ZZ2+976
ZZ2TOD   EQU   ZZ2+968
ZZ2STGN  EQU   ZZ2STG+4
ZZ2STGP  EQU   ZZ2STG
@NM00036 EQU   ZZ2+952
ZZ2SCMDE EQU   ZZ2+944
ZZ2SCMDN EQU   ZZ2+936
ZZ2IDENT EQU   ZZ2+928
ZZ2A9999 EQU   ZZ2A+656
@NM00035 EQU   ZZ2A+224
@NM00034 EQU   ZZ2A+220
ZZ2AQD99 EQU   ZZ2AQD+60
@NM00033 EQU   ZZ2AQD+56
@NM00032 EQU   ZZ2AQDF
ZZ2AQDFA EQU   ZZ2AQDF
ZZ2AQDIL EQU   ZZ2AQD+48
ZZ2AQDIM EQU   ZZ2AQD+44
ZZ2AQDT9 EQU   ZZ2AQDT+34
ZZ2AQDTE EQU   ZZ2AQDT+33
ZZ2AQDTD EQU   ZZ2AQDT+2
@NM00031 EQU   ZZ2AQDT+1
ZZ2AQDTY EQU   ZZ2AQDT
ZZ2AQDT0 EQU   ZZ2AQDT
ZZ2AQDLB EQU   ZZ2AQD+9
ZZ2AQDOB EQU   ZZ2AQD+8
ZZ2AQDLE EQU   ZZ2AQD+4
ZZ2AQDOF EQU   ZZ2AQD
ZZ2AQD00 EQU   ZZ2AQD
ZZ2AQAS9 EQU   ZZ2AQAS+16
@NM00030 EQU   ZZ2AQAS+12
ZZ2AQAS2 EQU   ZZ2AQAS+8
ZZ2AQAS1 EQU   ZZ2AQAS+4
@NM00029 EQU   ZZ2AQAS+2
ZZ2AQAST EQU   ZZ2AQAS
ZZ2AQAS0 EQU   ZZ2AQAS
ZZ2AZZ6P EQU   ZZ2A+140
ZZ2ADPTA EQU   ZZ2ADPT
ZZ2ADPL  EQU   ZZ2ADP
ZZ2ADMTA EQU   ZZ2ADMT
ZZ2ADML  EQU   ZZ2ADM
ZZ2ADDTA EQU   ZZ2ADDT
ZZ2ADDL  EQU   ZZ2ADD
@NM00028 EQU   ZZ2A+72
ZZ2APIDB EQU   ZZ2APID+3
ZZ2APIDA EQU   ZZ2APID
@NM00027 EQU   ZZ2A+24
@NM00026 EQU   ZZ2AF+5
ZZ2AFX   EQU   ZZ2AF+5
@NM00025 EQU   ZZ2AF+3
ZZ2AFS   EQU   ZZ2AF+2
ZZ2AFD   EQU   ZZ2AF+2
ZZ2AFQ   EQU   ZZ2AF+2
ZZ2AF$   EQU   ZZ2AF+2
@NM00024 EQU   ZZ2AF+2
ZZ2AFM   EQU   ZZ2AF+2
@NM00023 EQU   ZZ2AF+2
@NM00022 EQU   ZZ2AF+1
ZZ2AFV   EQU   ZZ2AF+1
@NM00021 EQU   ZZ2AF+1
ZZ2AFC   EQU   ZZ2AF+1
@NM00020 EQU   ZZ2AF
ZZ2AFFS  EQU   ZZ2AF
ZZ2AFT   EQU   ZZ2AF
ZZ2AFP   EQU   ZZ2AF
@NM00019 EQU   ZZ2A+8
ZZ2ALINE EQU   ZZ2A+4
@NM00018 EQU   ZZ2A+3
ZZ2ASE   EQU   ZZ2A+2
ZZ2ACH   EQU   ZZ2A
@NM00017 EQU   ZZ2+264
@NM00016 EQU   ZZ2+263
ZZ2PRTT0 EQU   ZZ2PRTT
ZZ2PRTO  EQU   ZZ2PRT+2
ZZ2PRTL  EQU   ZZ2PRT
@NM00015 EQU   ZZ2AMD+56
ZZ2AMDXP EQU   ZZ2AMD+52
ZZ2AMDD  EQU   ZZ2AMD+48
ZZ2AMDL  EQU   ZZ2AMD+44
ZZ2AMDU  EQU   ZZ2AMD+28
ZZ2AMDF  EQU   ZZ2AMD+24
ZZ2AMDS  EQU   ZZ2AMD+20
ZZ2AMDC  EQU   ZZ2AMD+16
ZZ2AMDP  EQU   ZZ2AMD+12
ZZ2AMDB  EQU   ZZ2AMD+8
@NM00014 EQU   @NM00013
ZZ2AMD2  EQU   @NM00013
ZZ2AMD1  EQU   @NM00013
ZZ2AMD0  EQU   ZZ2AMD+6
ZZ2AMDA  EQU   ZZ2AMD+4
ZZ2AMDT  EQU   ZZ2AMD
ZZ199999 EQU   ZZ1+3072
@NM00012 EQU   ZZ1+2160
ZZ1TRTAS EQU   ZZ1+1904
ZZ1TRUPC EQU   ZZ1+1648
ZZ1TRCTX EQU   ZZ1+1392
ZZ1NASID EQU   ZZ1N+274
ZZ1NSTRL EQU   ZZ1N+272
ZZ1NOFF  EQU   ZZ1N+268
ZZ1NBDY  EQU   ZZ1N+264
ZZ1NADE  EQU   ZZ1N+260
ZZ1NADB  EQU   ZZ1N+256
ZZ1NSTR  EQU   ZZ1N
@NM00011 EQU   ZZ1+1080
ZZ1TREBC EQU   ZZ1+824
ZZ1TRHEX EQU   ZZ1+568
@NM00010 EQU   ZZ1+377
ZZ1USTAE EQU   ZZ1+376
@NM00009 EQU   ZZ1F+1
@NM00008 EQU   ZZ1F
ZZ1FM    EQU   ZZ1F
ZZ1FX    EQU   ZZ1F
ZZ1FU    EQU   ZZ1F
ZZ1EVEC  EQU   ZZ1EVE+1
@NM00007 EQU   ZZ1EVE
ZZ1EVEP  EQU   ZZ1EVE
ZZ1EVEW  EQU   ZZ1EVE
ZZ1ACMP  EQU   ZZ1ATTN
@NM00006 EQU   ZZ1+144
ZZ1ZZ6P  EQU   ZZ1+136
@NM00005 EQU   ZZ1+84
ZZ1PLINE EQU   ZZ1+80
ZZ1PGSZ  EQU   ZZ1+76
ZZ1PCNT  EQU   ZZ1+72
@NM00004 EQU   ZZ1+68
ZZ1TPAGE EQU   ZZ1+64
ZZ1TLINE EQU   ZZ1+60
@NM00003 EQU   ZZ1+52
ZZ1DMCBP EQU   ZZ1+48
ZZ1DSDP  EQU   ZZ1+44
ZZ1ZZ2P  EQU   ZZ1+36
ZZ1327WP EQU   ZZ1+32
ZZ1ACBP  EQU   ZZ1+28
@NM00002 EQU   ZZ1+24
ZZ1PDCBP EQU   ZZ1+20
ZZ1BLRBL EQU   ZZ1+16
@NM00001 EQU   ZZ1+12
ZZ1PNULL EQU   ZZ1+8
ZZ1NULL  EQU   ZZ1+4
ZZ1IDE   EQU   ZZ1
DMCBWRK  EQU   DMCB+648
DMCBRES8 EQU   DMCB+640
DMCBMODN EQU   DMCB+632
DMCBCARY EQU   DMCBAUDT+20
DMCBCLC  EQU   DMCBAUDT+12
DMCBOPC  EQU   DMCBAUDT+8
DMCBFRC  EQU   DMCBAUDT+4
DMCBALC  EQU   DMCBAUDT
DMCBFR   EQU   DMCB+412
DMCBRES6 EQU   DMCB+410
DMCBIRSC EQU   DMCB+408
DMCBSUBC EQU   DMCB+404
DMCBDRBP EQU   DMCB+400
DMCBRSZM EQU   DMCB+398
DMCBRSZA EQU   DMCB+396
DMCBCISZ EQU   DMCB+394
DMCBDCBL EQU   DMCB+392
DMCBDCLR EQU   DMCB+390
DMCBDCFM EQU   DMCB+389
DMCBRES5 EQU   DMCB+388
DMCBLBRT EQU   DMCB+386
DMCBLBSQ EQU   DMCB+384
DMCBLBPS EQU   DMCB+383
DMCBLBTY EQU   DMCB+382
DMCBRES4 EQU   DMCB+381
DMCBSPRS EQU   DMCBSPEC
DMCBSPRN EQU   DMCBSPEC
DMCBSPCT EQU   DMCBSPEC
DMCBSPRL EQU   DMCBSPEC
DMCBSPSE EQU   DMCB+376
DMCBSPPR EQU   DMCB+372
DMCBSPTY EQU   DMCB+369
DMCBODIS EQU   DMCB+368
DMCBDISP EQU   DMCB+367
DMCBSTAT EQU   DMCB+366
DMCBRES3 EQU   DMCB+364
DMCBMEMB EQU   DMCB+356
DMCBMODL EQU   DMCB+348
DMCBRES9 EQU   DMCB+340
DMCBPID  EQU   DMCB+332
DMCBTYPE EQU   DMCB+328
DMCBDSN  EQU   DMCB+284
DMCBUNIT EQU   DMCB+276
DMCBDSOR EQU   DMCB+274
DMCBVOL  EQU   DMCB+268
DMCBDDNM EQU   DMCB+260
DMCBSYNM EQU   DMCB+132
DMCBRPLF EQU   DMCB+128
DMCBDCBE EQU   DMCBACBE
DMCBARC  EQU   DMCB+120
DMCBCPC  EQU   DMCB+116
DMCBRET  EQU   DMCB+112
DMCBSTL  EQU   DMCB+96
DMCBEOB  EQU   DMCB+92
DMCBFRE  EQU   DMCB+88
DMCBRES2 EQU   DMCB+85
DMCBSPID EQU   DMCB+84
DMCBRESC EQU   DMCB+80
DMCBZZ1P EQU   DMCB+76
DMCBMSGS EQU   DMCB+72
DMCBMSG0 EQU   DMCB+68
DMCBRRL  EQU   DMCB+60
DMCBRBA  EQU   DMCB+56
DMCBKPC  EQU   DMCBKEYP
DMCBORL  EQU   DMCB+40
DMCBBFPC EQU   DMCBBUFP
DMCBRES1 EQU   DMCB+31
DMCBACCM EQU   DMCB+30
DMCBREJ  EQU   DMCB+29
DMCBRESB EQU   DMCBMFLG
DMCBFMOD EQU   DMCBMFLG
DMCBLOPT EQU   DMCB+27
DMCBLRM  EQU   DMCB+26
DMCBLRQ  EQU   DMCB+25
DMCBOPRS EQU   DMCBOPTS
DMCBLRD  EQU   DMCBOPTS
DMCBBWD  EQU   DMCBOPTS
DMCBRNO  EQU   DMCBGKY
DMCBRMRS EQU   DMCBRMOD
DMCBRM5  EQU   DMCBRMOD
DMCBRM6  EQU   DMCBRMOD
DMCBTMP  EQU   DMCBOUT
DMCBRESA EQU   DMCBOPN
DMCBSOUT EQU   DMCBOPN
DMCBSIN  EQU   DMCBOPN
DMCBVSF  EQU   DMCBFTY
DMCBKSF  EQU   DMCBFTY
DMCBFTRS EQU   DMCBFTY
DMCBSHF  EQU   DMCBFTY
DMCBRTC  EQU   DMCB+12
DMCBTVP  EQU   DMCB+8
DMCBNEXT EQU   DMCB+4
*                                      END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   BLSELPOP,(C'PLS1332',0701,78065)
