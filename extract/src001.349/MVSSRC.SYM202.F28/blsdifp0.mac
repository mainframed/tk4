IFP0     TITLE 'BLSDIFP0--PROCESS SYS1.PARMLIB(IPCSPRNN)               *
                        '
*/* CHANGE ACTIVITY -------------------------------------------------*/
*/*   THIS MODULE WAS WRITTEN FOR @G57LPKB                           */
*/*------------------------------------------------------------------*/
BLSDIFP0 CSECT ,                                                01S0002
@MAINENT DS    0H                                               01S0002
         USING *,@15                                            01S0002
         B     @PROLOG                                          01S0002
         DC    AL1(16)                                          01S0002
         DC    C'BLSDIFP0  78.057'                              01S0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0002
         BALR  @12,0                                            01S0002
@PSTART  DS    0H                                               01S0002
         USING @PSTART,@12                                      01S0002
         L     @00,@SIZDATD                                     01S0002
         BLSUALLS R,LV=(0)
         LR    @11,@01                                          01S0002
         USING @DATD,@11                                        01S0002
         ST    @13,@SA00001+4                                   01S0002
         LM    @00,@01,20(@13)                                  01S0002
         ST    @11,8(,@13)                                      01S0002
         LR    @13,@11                                          01S0002
         MVC   @PC00001(8),0(@01)                               01S0002
*   ZZ1PTR=ADDR(ZZ1);               /* ->ZZ1                         */
         L     ZZ1PTR,ZZ2ZZ1P(,R9)                              01S0206
*   RESPECIFY                                                   01S0207
*    (ZZ1) BASED(ZZ1PTR);           /* ->ZZ1                         */
*   RETC=ZZZFLAGI;                  /* ASSUME SUCCESS                */
         SLR   RETC,RETC                                        01S0208
*   ANCHOR=ZZZZNULL;                /* NULL POINTER                  */
         SLR   @14,@14                                          01S0209
         ST    @14,ANCHOR                                       01S0209
*   DMCBPTR=ZZZZNULL;               /* ->DMCB                        */
         ST    @14,DMCBPTR                                      01S0210
*   MEMBNM='IPCSPR00';              /* ASSUME DEFAULT MEMBER         */
         MVC   MEMBNM(8),@CC01306                               01S0211
*   IF PDEIFP^='0'B THEN            /* USER HAS SUPPLIED SUFFIX      */
         L     @14,@PC00001+4                                   01S0212
         TM    PDEIFP(@14),B'10000000'                          01S0212
         BZ    @RF00212                                         01S0212
*     MEMBNM(LENGTH(MEMBNM)+1-PDEIL:LENGTH(MEMBNM))=PDEI(1:PDEIL);
*                                                               01S0213
         LA    @10,9                                            01S0213
         SH    @10,PDEIL(,@14)                                  01S0213
         LA    @08,MEMBNM-1(@10)                                01S0213
         LCR   @10,@10                                          01S0213
         AL    @10,@CF00056                                     01S0213
         L     @14,PDEIP(,@14)                                  01S0213
         EX    @10,@SM01342                                     01S0213
*   /*****************************************************************/
*   /*                                                               */
*   /* ACQUIRE AND INITIALIZE FP CONTROL BLOCK                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0214
*   DO;                             /* GETMAIN (RC)             01S0214
*                                      LV(LENGTH(FPBLOK))       01S0214
*                                      SP(ZZZSPEXC)                  */
@RF00212 DS    0H                                               01S0215
*     RESPECIFY                                                 01S0215
*      (GPR01F,                                                 01S0215
*       GPR15F,                                                 01S0215
*       GPR00F) RESTRICTED;                                     01S0215
*     GPR01F=0;                     /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                    01S0216
*     GPR15F=0;                     /* RC-TYPE GETMAIN               */
         SLR   GPR15F,GPR15F                                    01S0217
*     GPR00F=LENGTH(FPBLOK);        /* LENGTH REQUESTED              */
         LA    GPR00F,152                                       01S0218
*     GPR15F=GPR15F×((ZZZSPEXC)*256);/* SP IN BYTE 2                 */
         O     GPR15F,@CF00174                                  01S0219
*     SVC(120);                     /* RC/RU-FORM OF GETMAIN         */
         SVC   120                                              01S0220
*     RESPECIFY                                                 01S0221
*      (GPR01F,                                                 01S0221
*       GPR15F,                                                 01S0221
*       GPR00F) UNRESTRICTED;                                   01S0221
*   END;                            /* GETMAIN (RC)             01S0222
*                                      LV(LENGTH(FPBLOK))       01S0222
*                                      SP(ZZZSPEXC)                  */
*   RESPECIFY                                                   01S0223
*    (R1) RESTRICTED;               /* ->GETMAIN'D AREA              */
*   ZZ1FPP=R1;                      /* BASE THE FPBLOK               */
         ST    R1,ZZ1FPP(,ZZ1PTR)                               01S0224
*   RESPECIFY                                                   01S0225
*    (R1) UNRESTRICTED;             /* ->GETMAIN'D AREA              */
*   IF RF>0 THEN                                                01S0226
         LTR   RF,RF                                            01S0226
         BNP   @RF00226                                         01S0226
*     DO;                           /* UNABLE TO OBTAIN STORAGE      */
*       RETC=ZZZFLAGT;              /* TERMINATING RETURN CODE       */
         LA    RETC,16                                          01S0228
*       CALL BLSUTRMV(ZZ2,M1);      /* PUT OUT MESSAGE               */
         ST    R9,@AL00001                                      01S0229
         LA    @14,M1                                           01S0229
         ST    @14,@AL00001+4                                   01S0229
         L     @15,ZZ2TRMVP(,R9)                                01S0229
         LA    @01,@AL00001                                     01S0229
         BALR  @14,@15                                          01S0229
*       GO TO EXIT;                 /* GIVE UP                       */
         B     EXIT                                             01S0230
*     END;                          /* UNABLE TO OBTAIN STORAGE      */
*   FPBLOK=DFPBLOK;                 /* INITIALIZE WITH DEFAULT VALUES*/
*                                                               01S0232
@RF00226 L     @14,ZZ1FPP(,ZZ1PTR)                              01S0232
         MVC   FPBLOK(152,@14),DFPBLOK                          01S0232
*   /*****************************************************************/
*   /*                                                               */
*   /* ALLOCATE THE SYS1.PARMLIB DATA SET                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0233
*/* BLSALLOC (ZZ2,DMCBPTR,MODEL,ACCMODE) MEMBER(LENGTH(MEMBNM),MEMBNM)
*                                                                    */
*                                                               01S0233
*   DO;                             /* BLSALLOC                 01S0233
*                                      (ZZ2,DMCBPTR,MODEL,ACCMODE)
*                                      MEMBER(LENGTH(MEMBNM),MEMBNM) */
*     IOPTLIST(1)=ADDR(ZZ2);        /* ZZ2 POINTER PARAMETER         */
         ST    R9,IOPTLIST                                      01S0234
*     IOPTLIST(2)=ADDR(DMCBPTR);    /* DMCB POINTER PARAMETER        */
         LA    @14,DMCBPTR                                      01S0235
         ST    @14,IOPTLIST+4                                   01S0235
*     IOPTLIST(3)=ADDR(MODEL);      /* MODEL NAME PARAMETER          */
         LA    @14,@CC01219                                     01S0236
         ST    @14,IOPTLIST+8                                   01S0236
*     IOPTLIST(4)=ADDR(ACCMODE);    /* MAXIMUM ACCESS PARAMETER      */
         LA    @14,@CH00053+1                                   01S0237
         ST    @14,IOPTLIST+12                                  01S0237
*     IOPTLIST(5)=ADDR(DMCBALOC);   /* INDICATE ALLOCATE REQUEST     */
         LA    @14,@CB00906                                     01S0238
         ST    @14,IOPTLIST+16                                  01S0238
*     IOPTLIST(6)='03000000'X;      /* 'MEMBER' KEY                  */
         MVC   IOPTLIST+20(4),@CF01314                          01S0239
*     IOPTLIST(7)=ADDR(LENGTH(MEMBNM));/* 'MEMBER' LENGTH            */
         LA    @14,@CF00056                                     01S0240
         ST    @14,IOPTLIST+24                                  01S0240
*     IOPTLIST(8)=ADDR(MEMBNM);     /* 'MEMBER' TEXT                 */
         LA    @14,MEMBNM                                       01S0241
         ST    @14,IOPTLIST+28                                  01S0241
*     IOPTLIST(8)=IOPTLIST(8)×'80000000'X;/* PLIST END MARKER        */
         O     @14,@CF00068                                     01S0242
         ST    @14,IOPTLIST+28                                  01S0242
*     RFY                                                       01S0243
*      (GPR01P,                                                 01S0243
*       GPR15P) RSTD;                                           01S0243
*     GPR01P=ADDR(IOPTLIST);        /* POINT REGISTER 1 TO PLIST     */
         LA    GPR01P,IOPTLIST                                  01S0244
*     GPR15P=ZZ2ALOCP;              /* BLSCALOC ENTRY POINT          */
         L     GPR15P,ZZ2ALOCP(,R9)                             01S0245
*     CALL GPR15P->DMCBDMGR;        /* PERFORM DATA SET ALLOCATION   */
         BALR  @14,@15                                          01S0246
*     RFY                                                       01S0247
*      (GPR01P,                                                 01S0247
*       GPR15P) UNRSTD;                                         01S0247
*   END;                            /* BLSALLOC                 01S0248
*                                      (ZZ2,DMCBPTR,MODEL,ACCMODE)
*                                      MEMBER(LENGTH(MEMBNM),MEMBNM)
*                                      ALLOCATE SYS1.PARMLIB         */
*   RESPECIFY                                                   01S0249
*    (R0) RESTRICTED;               /* ->MSG CHAIN, RETC             */
*   ANCHOR=R0;                      /* ->MSG CHAIN, IF ANY           */
         ST    R0,ANCHOR                                        01S0250
*   RETC=RF;                        /* RETURN CODE                   */
         LR    RETC,RF                                          01S0251
*   RESPECIFY                                                   01S0252
*    (R0) UNRESTRICTED;             /* ->MSG CHAIN, RETC             */
*   IF RETC>ZZZFLAGI THEN           /* ALLOCATION ERROR              */
*                                                               01S0253
         LTR   RETC,RETC                                        01S0253
         BNP   @RF00253                                         01S0253
*     /***************************************************************/
*     /*                                                             */
*     /* PARMLIB ALLOCATION FAILED                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0254
*     DO;                           /* PARMLIB ALLOCATION FAILED     */
*       RETC=ZZZFLAGT;              /* TERMINATING RETURN CODE       */
         LA    RETC,16                                          01S0255
*       DO;                         /* BLSDMSG                  01S0256
*                                      (ZZ2,NOMSG,ANCHOR,BLSDMSGS)
*                                      ROUTE(TERM)                   */
*         CALL BLSDMSG0(ZZ2,NOMSG,ANCHOR,BLSDMSGS,'00010000'B,0);/*
*                                      BUILD MESSAGE                 */
         ST    R9,@AL00001                                      01S0257
         LA    @14,@CF01217                                     01S0257
         ST    @14,@AL00001+4                                   01S0257
         LA    @14,ANCHOR                                       01S0257
         ST    @14,@AL00001+8                                   01S0257
         L     @14,ZZ2MSGSP(,R9)                                01S0257
         ST    @14,@AL00001+12                                  01S0257
         LA    @14,@CB01317                                     01S0257
         ST    @14,@AL00001+16                                  01S0257
         LA    @14,@CF00053                                     01S0257
         ST    @14,@AL00001+20                                  01S0257
         L     @15,ZZ2MSG0P(,R9)                                01S0257
         LA    @01,@AL00001                                     01S0257
         BALR  @14,@15                                          01S0257
*       END;                        /* BLSDMSG                  01S0258
*                                      (ZZ2,NOMSG,ANCHOR,BLSDMSGS)
*                                      ROUTE(TERM)                   */
*       GO TO EXITFPFR;             /* FREE FPBLOK                   */
         B     EXITFPFR                                         01S0259
*     END;                          /* PARMLIB ALLOCATION FAILED     */
*                                                               01S0260
*   /*****************************************************************/
*   /*                                                               */
*   /* ADD SYS1.PARMLIB(IPCSPRNN) TO INPUT STACK                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0261
*   SYS1PARM=DMCBDDNM;              /* SYS1.PARMLIB DDNAME           */
@RF00253 L     @14,DMCBPTR                                      01S0261
         MVC   SYS1PARM(8),DMCBDDNM(@14)                        01S0261
*   IOPLECB=ADDR(ZZ1EVE);           /* ->ECB                         */
         LA    @14,ZZ1EVE(,ZZ1PTR)                              01S0262
         ST    @14,IOPLECB                                      01S0262
*   IOPLUPT=ADDR(UPT);              /* ->UPT                         */
         L     @14,CPPLUPT(,R9)                                 01S0263
         ST    @14,IOPLUPT                                      01S0263
*   IOPLECT=ADDR(ECT);              /* ->ECT                         */
         L     @14,CPPLECT(,R9)                                 01S0264
         ST    @14,IOPLECT                                      01S0264
*   IOPLIOPB=ADDR(STPB);            /* ->STPB                        */
         LA    @14,STPB                                         01S0265
         ST    @14,IOPLIOPB                                     01S0265
*   RESPECIFY                                                   01S0266
*    (R1) RESTRICTED;               /* ->IOPL, STACK                 */
*   R1=ADDR(IOPL);                  /* ->IOPL                        */
         LA    R1,IOPL                                          01S0267
*   RF=ZZ2STCKP;                    /* ->STACK ENTRY POINT           */
         L     RF,ZZ2STCKP(,R9)                                 01S0268
*   GENERATE SETS(STPB) REFS(STPB,SYS1PARM,MEMBNM) CODE;        01S0269
         STACK DATASET=(INDD=SYS1PARM,MEMBER=MEMBNM),MF=(E,(1)),       *
               ENTRY=(15),PARM=STPB
*   RESPECIFY                                                   01S0270
*    (R1) UNRESTRICTED;             /* ->IOPL                        */
*   IF RF>0 THEN                    /* STACK UNSUCCESSFUL            */
*                                                               01S0271
         LTR   RF,RF                                            01S0271
         BNP   @RF00271                                         01S0271
*     /***************************************************************/
*     /*                                                             */
*     /* STACK UNSUCCESSFUL                                          */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0272
*     DO;                           /* STACK UNSUCCESSFUL            */
*       RETC=ZZZFLAGT;              /* TERMINATING RETURN CODE       */
         LA    @14,16                                           01S0273
         LR    RETC,@14                                         01S0273
*       IF RF=16 THEN               /* MEMBER NOT FOUND              */
         CR    RF,@14                                           01S0274
         BNE   @RF00274                                         01S0274
*         DO;                       /* ERROR MESSAGE                 */
*           M2B=M2S;                /* MESSAGE SKELETON              */
         MVC   M2B(51),M2S                                      01S0276
*           M2BTB=MEMBNM;           /* FILL IN MEMBER NAME           */
         MVC   M2BTB(8),MEMBNM                                  01S0277
*           CALL BLSUTRMV(ZZ2,M2B); /* ISSUE MESSAGE                 */
         ST    R9,@AL00001                                      01S0278
         LA    @14,M2B                                          01S0278
         ST    @14,@AL00001+4                                   01S0278
         L     @15,ZZ2TRMVP(,R9)                                01S0278
         LA    @01,@AL00001                                     01S0278
         BALR  @14,@15                                          01S0278
*         END;                      /* ERROR MESSAGE                 */
*       GO TO EXITPRDL;             /* DEALLOCATE PARMLIB            */
         B     EXITPRDL                                         01S0280
*     END;                          /* STACK UNSUCCESSFUL            */
*                                                               01S0281
*   /*****************************************************************/
*   /*                                                               */
*   /* RETRIEVE AND PARSE PARMLIB                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0282
*   FLAG1='0'B;                     /* INITIALIZE FLAG               */
@RF00271 SLR   FLAG1,FLAG1                                      01S0282
*   GENERATE SETS(GTPB) CODE(MVC   ADATA(SDATAEND-SDATA),SDATA);
         MVC   ADATA(SDATAEND-SDATA),SDATA
*   DO WHILE(FLAG1='0'B&RETC=ZZZFLAGI);/* EXHAUST INPUT SOURCE       */
*                                                               01S0284
         B     @DE00284                                         01S0284
@DL00284 DS    0H                                               01S0285
*     /***************************************************************/
*     /*                                                             */
*     /* ISSUE GETLINE                                               */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0285
*     CALL IKJGETL(UPT,ECT,ZZ1EVE,GTPB);/* RETRIEVE INPUT LINE       */
         L     @14,CPPLUPT(,R9)                                 01S0285
         ST    @14,@AL00001                                     01S0285
         L     @14,CPPLECT(,R9)                                 01S0285
         ST    @14,@AL00001+4                                   01S0285
         LA    @14,ZZ1EVE(,ZZ1PTR)                              01S0285
         ST    @14,@AL00001+8                                   01S0285
         LA    @14,GTPB                                         01S0285
         ST    @14,@AL00001+12                                  01S0285
         L     @15,ZZ2GETLP(,R9)                                01S0285
         LA    @01,@AL00001                                     01S0285
         BALR  @14,@15                                          01S0285
*     IF RF=4×RF=16 THEN            /* SUCCESSFUL OR AT END          */
         C     RF,@CF00045                                      01S0286
         BE    @RT00286                                         01S0286
         C     RF,@CF00059                                      01S0286
         BNE   @RF00286                                         01S0286
@RT00286 DS    0H                                               01S0287
*       DO;                                                     01S0287
*         RETC=ZZZFLAGI;            /* SUCCESSFUL COMPLETION         */
         SLR   RETC,RETC                                        01S0288
*         IF RF=16 THEN             /* AT END                        */
         C     RF,@CF00059                                      01S0289
         BNE   @RF00289                                         01S0289
*           FLAG1='1'B;             /* TIME TO QUIT                  */
         LA    FLAG1,1                                          01S0290
*       END;                                                    01S0291
*     ELSE                                                      01S0292
*       DO;                         /* SOMETHING IS WRONG            */
         B     @RC00286                                         01S0292
@RF00286 DS    0H                                               01S0293
*         RETC=ZZZFLAGT;            /* TERMINATING RETURN CODE       */
         LA    RETC,16                                          01S0293
*         GO TO EXITPRCL;           /* CLOSE PARMLIB                 */
         B     EXITPRCL                                         01S0294
*       END;                        /* SOMETHING IS WRONG            */
*     IF FLAG1^='1'B THEN           /* RETRIEVED INPUT LINE          */
*                                                               01S0296
@RC00286 C     FLAG1,@CF00051                                   01S0296
         BE    @RF00296                                         01S0296
*       /*************************************************************/
*       /*                                                           */
*       /* PARSE INPUT LINE                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0297
*       DO;                         /* PARSE INPUT LINE              */
*         CALL IKJPARS(UPT,ECT,0,PYCSECT,PDAPTR,GCMD,ZZ2);/* PARSE   */
         L     @14,CPPLUPT(,R9)                                 01S0298
         ST    @14,@AL00001                                     01S0298
         L     @14,CPPLECT(,R9)                                 01S0298
         ST    @14,@AL00001+4                                   01S0298
         LA    @14,@CF00053                                     01S0298
         ST    @14,@AL00001+8                                   01S0298
         L     @14,PYPTR                                        01S0298
         ST    @14,@AL00001+12                                  01S0298
         LA    @14,PDAPTR                                       01S0298
         ST    @14,@AL00001+16                                  01S0298
         L     @14,GTPBIBUF                                     01S0298
         ST    @14,@AL00001+20                                  01S0298
         ST    R9,@AL00001+24                                   01S0298
         L     @15,ZZ2PARSP(,R9)                                01S0298
         LA    @01,@AL00001                                     01S0298
         BALR  @14,@15                                          01S0298
*         RETC=RF;                  /* RETURN CODE                   */
         LR    RETC,RF                                          01S0299
*         IF RF=0 THEN              /* PARSE SUCCESSFUL              */
*                                                               01S0300
         LTR   RF,RF                                            01S0300
         BNZ   @RF00300                                         01S0300
*           /*********************************************************/
*           /*                                                       */
*           /* INITIALIZE FPBLOK                                     */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0301
*           DO;                     /* INITIALIZE FPBLOK             */
*             RESPECIFY                                         01S0302
*              (PDRPTR) RESTRICTED; /* ->PD                          */
*             PDRPTR=PDAPTR;        /* ->PD                          */
         L     PDRPTR,PDAPTR                                    01S0303
*             GENERATE REFS(PD,PDRPTR) CODE(USING PD,PDRPTR);   01S0304
         USING PD,PDRPTR
*             IF PDDSDDFP='1'B THEN /* DATA SET DIRECTORY            */
         LA    @14,PDDSD                                        01S0305
         TM    PDDSDDFP(@14),B'10000000'                        01S0305
         BNO   @RF00305                                         01S0305
*               FPDSDS(1:PDDSDDL)=PDDSDD(1:PDDSDDL);            01S0306
         L     @08,ZZ1FPP(,ZZ1PTR)                              01S0306
         LH    @04,PDDSDDL(,@14)                                01S0306
         BCTR  @04,0                                            01S0306
         L     @14,PDDSDDP(,@14)                                01S0306
         EX    @04,@SM01344                                     01S0306
*             IF PDPDRDFP='1'B THEN /* PROBLEM DIRECTORY             */
@RF00305 LA    @14,PDPDR                                        01S0307
         TM    PDPDRDFP(@14),B'10000000'                        01S0307
         BNO   @RF00307                                         01S0307
*               FPPDDS(1:PDPDRDL)=PDPDRD(1:PDPDRDL);            01S0308
         L     @08,ZZ1FPP(,ZZ1PTR)                              01S0308
         LH    @04,PDPDRDL(,@14)                                01S0308
         BCTR  @04,0                                            01S0308
         L     @14,PDPDRDP(,@14)                                01S0308
         EX    @04,@SM01346                                     01S0308
*             IF PDPIDIFP='1'B THEN /* PROBID PREFIX                 */
@RF00307 TM    PDPIDIFP,B'10000000'                             01S0309
         BNO   @RF00309                                         01S0309
*               IF PDPIDIL=3 THEN   /* HAVE REQUIRED LENGTH          */
         LH    @14,PDPIDIL                                      01S0310
         C     @14,@CF00101                                     01S0310
         BNE   @RF00310                                         01S0310
*                 FPPIDP(1:PDPIDIL)=PDPIDI(1:PDPIDIL);          01S0311
         L     @08,ZZ1FPP(,ZZ1PTR)                              01S0311
         BCTR  @14,0                                            01S0311
         L     @04,PDPIDIP                                      01S0311
         EX    @14,@SM01348                                     01S0311
*             IF PDSYSIFP='1'B THEN /* SYSTEM ID                     */
@RF00310 DS    0H                                               01S0312
@RF00309 TM    PDSYSIFP,B'10000000'                             01S0312
         BNO   @RF00312                                         01S0312
*               FPSYSID(1:PDSYSIL)=PDSYSI(1:PDSYSIL);           01S0313
         L     @14,ZZ1FPP(,ZZ1PTR)                              01S0313
         LH    @08,PDSYSIL                                      01S0313
         BCTR  @08,0                                            01S0313
         L     @04,PDSYSIP                                      01S0313
         EX    @08,@SM01350                                     01S0313
*             IF PDGRPIFP='1'B THEN /* GROUP ID                      */
@RF00312 TM    PDGRPIFP,B'10000000'                             01S0314
         BNO   @RF00314                                         01S0314
*               FPGRPID(1:PDGRPIL)=PDGRPI(1:PDGRPIL);           01S0315
         L     @14,ZZ1FPP(,ZZ1PTR)                              01S0315
         LH    @08,PDGRPIL                                      01S0315
         BCTR  @08,0                                            01S0315
         L     @04,PDGRPIP                                      01S0315
         EX    @08,@SM01352                                     01S0315
*             IF PDADMIFP='1'B THEN /* ADMINISTRATIVE AUTHORITY      */
@RF00314 TM    PDADMIFP,B'10000000'                             01S0316
         BNO   @RF00316                                         01S0316
*               DO;                                             01S0317
*                 FPADMID(1:PDADMIL)=PDADMI(1:PDADMIL);/* TSO LOGONID*/
         L     @14,ZZ1FPP(,ZZ1PTR)                              01S0318
         LH    @08,PDADMIL                                      01S0318
         LR    @04,@08                                          01S0318
         BCTR  @04,0                                            01S0318
         L     @01,PDADMIP                                      01S0318
         EX    @04,@SM01354                                     01S0318
*                 FPADMLN=PDADMIL;  /* LENGTH                        */
         STC   @08,FPADMLN(,@14)                                01S0319
*               END;                                            01S0320
*             IF PDDELIFP='1'B THEN /* DELETE AUTHORITY              */
@RF00316 TM    PDDELIFP,B'10000000'                             01S0321
         BNO   @RF00321                                         01S0321
*               DO;                                             01S0322
*                 FPDELID(1:PDDELIL)=PDDELI(1:PDDELIL);/* TSO LOGONID*/
         L     @14,ZZ1FPP(,ZZ1PTR)                              01S0323
         LH    @08,PDDELIL                                      01S0323
         LR    @04,@08                                          01S0323
         BCTR  @04,0                                            01S0323
         L     @01,PDDELIP                                      01S0323
         EX    @04,@SM01356                                     01S0323
*                 FPDELLN=PDDELIL;  /* LENGTH                        */
         STC   @08,FPDELLN(,@14)                                01S0324
*               END;                                            01S0325
*             IF PDLINIFP='1'B THEN /* PRINT LINE LENGTH             */
@RF00321 TM    PDLINIFP,B'10000000'                             01S0326
         BNO   @RF00326                                         01S0326
*               ZZ1PLINE=PDLINI;                                01S0327
         L     @14,PDLINIP                                      01S0327
         L     @14,PDLINI(,@14)                                 01S0327
         ST    @14,ZZ1PLINE(,ZZ1PTR)                            01S0327
*             IF PDPSZIFP='1'B THEN /* PRINT PAGE SIZE               */
@RF00326 TM    PDPSZIFP,B'10000000'                             01S0328
         BNO   @RF00328                                         01S0328
*               ZZ1PGSZ=PDPSZI;                                 01S0329
*                                                               01S0329
         L     @14,PDPSZIP                                      01S0329
         L     @14,PDPSZI(,@14)                                 01S0329
         ST    @14,ZZ1PGSZ(,ZZ1PTR)                             01S0329
*             /*******************************************************/
*             /*                                                     */
*             /* FREE PDL                                            */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S0330
*             DO WHILE(PDAPTR^=0);  /* BLRRLSA MF(EXECUTE,PD)        */
@RF00328 B     @DE00330                                         01S0330
@DL00330 DS    0H                                               01S0331
*               PDRPTR=PDAPTR;                                  01S0331
         L     PDRPTR,PDAPTR                                    01S0331
*               PDAPTR=PDXP;                                    01S0332
         L     @14,PDXP-1(,PDRPTR)                              01S0332
         LA    @14,0(,@14)                                      01S0332
         ST    @14,PDAPTR                                       01S0332
*               DO;                 /* FREEMAIN(R)              01S0333
*                                      LV(PDL)SP(1)A(PDDSECT)        */
*                 RESPECIFY                                     01S0334
*                  (GPR01F,                                     01S0334
*                   GPR00F) RESTRICTED;                         01S0334
*                 GPR00F=PDL;       /* LENGTH REQUESTED              */
         L     GPR00F,PDL-1(,PDRPTR)                            01S0335
         ICM   GPR00F,8,@CB01358                                01S0335
*                 GPR01F=1;         /* SP IN REG 1                   */
         LA    GPR01F,1                                         01S0336
*                 GEN(SLL   GPR01F,24)                          01S0337
*                 NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;  01S0337
         SLL   GPR01F,24
*                 GPR00F=GPR00F×GPR01F;/* SP IN HI BYTE              */
         OR    GPR00F,GPR01F                                    01S0338
*                 GPR01F=ADDR(PDDSECT);/* SET REGISTER ONE           */
         LR    GPR01F,PDRPTR                                    01S0339
*                 SVC(10);          /* R-FORM OF GETMAIN             */
         SVC   10                                               01S0340
*                 RESPECIFY                                     01S0341
*                  (GPR01F,                                     01S0341
*                   GPR00F) UNRESTRICTED;                       01S0341
*               END;                /* FREEMAIN(R)              01S0342
*                                      LV(PDL)SP(1)A(PDDSECT)        */
*             END;                  /* BLRRLSA MF(EXECUTE,PD)        */
@DE00330 L     @14,PDAPTR                                       01S0343
         LTR   @14,@14                                          01S0343
         BNZ   @DL00330                                         01S0343
*             RESPECIFY                                         01S0344
*              (PDRPTR) UNRESTRICTED;/* ->PD                         */
*             RETC=MAX(RETC,RF);    /* RETURN CODE                   */
         CR    RETC,RF                                          01S0345
         BNL   *+6
         LR    RETC,RF                                          01S0345
*           END;                    /* INITIALIZE FPBLOK             */
*                                                               01S0346
*         /***********************************************************/
*         /*                                                         */
*         /* FREE GETLINE BUFFER                                     */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0347
*         DO;                       /* FREEMAIN(R)              01S0347
*                                      LV(GCMDL)SP(1)A(GCMD)         */
@RF00300 DS    0H                                               01S0348
*           RESPECIFY                                           01S0348
*            (GPR01F,                                           01S0348
*             GPR00F) RESTRICTED;                               01S0348
*           GPR00F=GCMDL;           /* LENGTH REQUESTED              */
         L     @14,GTPBIBUF                                     01S0349
         LH    GPR00F,GCMDL(,@14)                               01S0349
         N     GPR00F,@CF01359                                  01S0349
*           GPR01F=1;               /* SP IN REG 1                   */
         LA    GPR01F,1                                         01S0350
*           GEN(SLL   GPR01F,24)                                01S0351
*           NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;        01S0351
         SLL   GPR01F,24
*           GPR00F=GPR00F×GPR01F;   /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                    01S0352
*           GPR01F=ADDR(GCMD);      /* SET REGISTER ONE              */
         L     GPR01F,GTPBIBUF                                  01S0353
*           SVC(10);                /* R-FORM OF GETMAIN             */
         SVC   10                                               01S0354
*           RESPECIFY                                           01S0355
*            (GPR01F,                                           01S0355
*             GPR00F) UNRESTRICTED;                             01S0355
*         END;                      /* FREEMAIN(R)              01S0356
*                                      LV(GCMDL)SP(1)A(GCMD)         */
*         RETC=MAX(RETC,RF);        /* RETURN CODE                   */
         CR    RETC,RF                                          01S0357
         BNL   *+6
         LR    RETC,RF                                          01S0357
*       END;                        /* PARSE INPUT LINE              */
*   END;                            /* GETLINE LOOP                  */
*                                                               01S0359
@RF00296 DS    0H                                               01S0359
@DE00284 C     FLAG1,@CF00049                                   01S0359
         BNE   @DC00284                                         01S0359
         LTR   RETC,RETC                                        01S0359
         BZ    @DL00284                                         01S0359
@DC00284 DS    0H                                               01S0360
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK IF EVERYTHING VALID                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0360
*   IF RETC>ZZZFLAGI THEN           /* NON-ZERO RETURN CODE          */
         LTR   RETC,RETC                                        01S0360
         BNP   @RF00360                                         01S0360
*     DO;                           /* PARSE PROCESSING ERROR        */
*       RETC=ZZZFLAGT;              /* TERMINATING RETURN CODE       */
         LA    RETC,16                                          01S0362
*       M3B=M3S;                    /* MESSAGE SKELETON              */
         MVC   M3B(71),M3S                                      01S0363
*       M3BTB=MEMBNM;               /* FILL IN MEMBER NAME           */
         MVC   M3BTB(8),MEMBNM                                  01S0364
*       CALL BLSUTRMV(ZZ2,M3B);     /* TRANSMIT MESSAGE              */
         ST    R9,@AL00001                                      01S0365
         LA    @14,M3B                                          01S0365
         ST    @14,@AL00001+4                                   01S0365
         L     @15,ZZ2TRMVP(,R9)                                01S0365
         LA    @01,@AL00001                                     01S0365
         BALR  @14,@15                                          01S0365
*     END;                          /* PARSE PROCESSING ERROR        */
*   ELSE                                                        01S0367
*     DO;                           /* CHECK FOR REQUIRED PARAMETERS */
         B     @RC00360                                         01S0367
@RF00360 DS    0H                                               01S0368
*       M4B=M4S;                    /* ASSUME ERROR - INIT MSG       */
         MVC   M4B(53),M4S                                      01S0368
*       IF FPPIDP='000000'X THEN    /* NULL PROBLEM ID PREFIX        */
         L     @14,ZZ1FPP(,ZZ1PTR)                              01S0369
         CLC   FPPIDP(3,@14),@CB01227                           01S0369
         BNE   @RF00369                                         01S0369
*         DO;                       /* PROBLEM ID PREFIX ERROR       */
*           RETC=ZZZFLAGT;          /* TERMINATING RETURN CODE       */
         LA    RETC,16                                          01S0371
*           M4BTB='PROBIDPREFIX';   /* FILL IN PARAMETER DESCRIPTION */
         MVC   M4BTB(12),@CC01322                               01S0372
*         END;                      /* PROBLEM ID PREFIX ERROR       */
*       ELSE                        /* PROBLEM ID PREFIX OK          */
*         DO;                       /* CHECK DATA SET DIRECTORY      */
         B     @RC00369                                         01S0374
@RF00369 DS    0H                                               01S0375
*           DO;                     /* BLSUCALL EP(BLSDADSD)         */
*             RESPECIFY                                         01S0376
*              (GPR01P) RESTRICTED; /* ->TASK VARIABLE               */
*             GPR01P=ADDR(ZZ2);     /* ->TASK VARIABLE               */
         LR    GPR01P,R9                                        01S0377
*             CALL BLSDADSD;        /* CALL RESIDENT IPCS PROGRAM    */
         L     @15,ZZ2ADSDP(,R9)                                01S0378
         BALR  @14,@15                                          01S0378
*             RESPECIFY                                         01S0379
*              (GPR01P) UNRESTRICTED;/* ->TASK VARIABLE              */
*           END;                    /* BLSUCALL EP(BLSDADSD) ALLOCATE
*                                      DATE SET DIRECTORY            */
*           IF RF>ZZZFLAGI THEN     /* NON-ZERO RETURN CODE          */
         LTR   RF,RF                                            01S0381
         BNP   @RF00381                                         01S0381
*             DO;                   /* DATA SET DIRECTORY ERROR      */
*               RETC=ZZZFLAGT;      /* TERMINATING RETURN CODE       */
         LA    RETC,16                                          01S0383
*               M4BTB(1:3)='DSD';   /* FILL IN PARM DESCRIPTION      */
         MVC   M4BTB(3),@CC01324                                01S0384
*             END;                  /* DATA SET DIRECTORY ERROR      */
*           ELSE                    /* DATA SET DIRECTORY OK         */
*             DO;                   /* CHECK PROBLEM DIRECTORY       */
         B     @RC00381                                         01S0386
@RF00381 DS    0H                                               01S0387
*               DO;                 /* BLSUCALL EP(BLSDAPDR)         */
*                 RESPECIFY                                     01S0388
*                  (GPR01P) RESTRICTED;/* ->TASK VARIABLE            */
*                 GPR01P=ADDR(ZZ2); /* ->TASK VARIABLE               */
         LR    GPR01P,R9                                        01S0389
*                 CALL BLSDAPDR;    /* CALL RESIDENT IPCS PROGRAM    */
         L     @15,ZZ2APDRP(,R9)                                01S0390
         BALR  @14,@15                                          01S0390
*                 RESPECIFY                                     01S0391
*                  (GPR01P) UNRESTRICTED;/* ->TASK VARIABLE          */
*               END;                /* BLSUCALL EP(BLSDAPDR)    01S0392
*                                      ALLLOCATE PROBLEM DIRECTORY   */
*               IF RF>ZZZFLAGI THEN /* NON-ZERO RETURN CODE          */
         LTR   RF,RF                                            01S0393
         BNP   @RF00393                                         01S0393
*                 DO;               /* PROBLEM DIRECTORY ERROR       */
*                   RETC=ZZZFLAGT;  /* TERMINATING RETURN CODE       */
         LA    RETC,16                                          01S0395
*                   M4BTB(1:3)='PDR';/* FILL IN PARM DESCRIPTION     */
         MVC   M4BTB(3),@CC01325                                01S0396
*                 END;              /* PROBLEM DIRECTORY ERROR       */
*             END;                  /* CHECK PROBLEM DIRECTORY       */
@RF00393 DS    0H                                               01S0399
*         END;                      /* CHECK DATA SET DIRECTORY      */
@RC00381 DS    0H                                               01S0400
*       IF RETC>ZZZFLAGI THEN       /* SOMETHING WRONG WITH PARMS    */
@RC00369 LTR   RETC,RETC                                        01S0400
         BNP   @RF00400                                         01S0400
*         CALL BLSUTRMV(ZZ2,M4B);   /* TRANSMIT MESSAGE              */
         ST    R9,@AL00001                                      01S0401
         LA    @14,M4B                                          01S0401
         ST    @14,@AL00001+4                                   01S0401
         L     @15,ZZ2TRMVP(,R9)                                01S0401
         LA    @01,@AL00001                                     01S0401
         BALR  @14,@15                                          01S0401
*     END;                          /* CHECK FOR REQUIRED PARAMETERS */
*                                                               01S0402
@RF00400 DS    0H                                               01S0403
*   /*****************************************************************/
*   /*                                                               */
*   /* CLOSE, DEALLOCATE PARMLIB                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0403
*EXITPRCL:                          /* CLOSE PARMLIB                 */
*   RESPECIFY                                                   01S0403
*    (R1) RESTRICTED;               /* ->IOPL                        */
@RC00360 DS    0H                                               01S0403
EXITPRCL DS    0H                                               01S0404
*   R1=ADDR(IOPL);                  /* ->IOPL                        */
         LA    R1,IOPL                                          01S0404
*   RF=ZZ2STCKP;                    /* ->STACK ENTRY POINT           */
         L     RF,ZZ2STCKP(,R9)                                 01S0405
*   GENERATE SETS(STPB) REFS(STPB) CODE;                        01S0406
         STACK DATASET=(CLOSE),MF=(E,(1)),ENTRY=(15),PARM=STPB
*   RESPECIFY                                                   01S0407
*    (R1) UNRESTRICTED;             /* ->IOPL                        */
*   RETC=MAX(RETC,RF);              /* RETURN CODE                   */
         CR    RETC,RF                                          01S0408
         BNL   *+6
         LR    RETC,RF                                          01S0408
*EXITPRDL:                          /* DEALLOCATE PARMLIB            */
*   DO;                             /* BLSFREE (DMCBPTR)             */
EXITPRDL DS    0H                                               01S0410
*     IF(DMCBPTR&'FFFFFFF8'X)=DMCBPTR&DMCBPTR->DMCBID='DMCB' THEN/*
*                                      TEST FOR VALID DMCB           */
         L     @14,DMCBPTR                                      01S0410
         LR    @10,@14                                          01S0410
         N     @10,@CF01328                                     01S0410
         CLR   @10,@14                                          01S0410
         BNE   @RF00410                                         01S0410
         CLC   DMCBID(4,@14),@CC01329                           01S0410
         BNE   @RF00410                                         01S0410
*       DO;                         /* VALID DMCB                    */
*         CALL DMCBPTR->DMCBFR->DMCBDMGR(DMCBPTR->DMCB,DMCBPTR,0);/*
*                                      CALL TO BLSCFREE              */
         ST    @14,@AL00001                                     01S0412
         LA    @10,DMCBPTR                                      01S0412
         ST    @10,@AL00001+4                                   01S0412
         LA    @10,@CF00053                                     01S0412
         ST    @10,@AL00001+8                                   01S0412
         L     @15,DMCBFR(,@14)                                 01S0412
         LA    @01,@AL00001                                     01S0412
         BALR  @14,@15                                          01S0412
*       END;                        /* VALID DMCB                    */
*     ELSE                                                      01S0414
*       DO;                         /* INVALID DMCB                  */
         B     @RC00410                                         01S0414
@RF00410 DS    0H                                               01S0415
*         RFY                                                   01S0415
*          (GPR00F,                                             01S0415
*           GPR15F) RSTD;                                       01S0415
*         GPR00F=0;                 /* INDICATE NO MESSAGE CHAIN     */
         SLR   GPR00F,GPR00F                                    01S0416
*         GPR15F=16;                /* INVALID DMCB                  */
         LA    GPR15F,16                                        01S0417
*         RFY                                                   01S0418
*          (GPR00F,                                             01S0418
*           GPR15F) UNRSTD;                                     01S0418
*       END;                        /* INVALID DMCB                  */
*   END;                            /* BLSFREE (DMCBPTR)             */
@RC00410 DS    0H                                               01S0421
*   RESPECIFY                                                   01S0421
*    (R0) RESTRICTED;               /* ->MSGS., IF ANY               */
*   ANCHOR=R0;                      /* SAVE MESSAGE CHAIN IF PRESENT */
         ST    R0,ANCHOR                                        01S0422
*   RETC=MAX(RETC,RF);              /* RETURN CODE                   */
         CR    RETC,RF                                          01S0423
         BNL   *+6
         LR    RETC,RF                                          01S0423
*   RESPECIFY                                                   01S0424
*    (R0) UNRESTRICTED;             /* ->MSGS., IF ANY               */
*   IF RF^=ZZZFLAGI THEN            /* PARMLIB FREE ERROR            */
         LTR   RF,RF                                            01S0425
         BZ    @RF00425                                         01S0425
*     DO;                           /* BLSDMSG                  01S0426
*                                      (ZZ2,NOMSG,ANCHOR,BLSDMSGS)
*                                      ROUTE(TERM)                   */
*       CALL BLSDMSG0(ZZ2,NOMSG,ANCHOR,BLSDMSGS,'00010000'B,0);/*
*                                      BUILD MESSAGE                 */
         ST    R9,@AL00001                                      01S0427
         LA    @14,@CF01217                                     01S0427
         ST    @14,@AL00001+4                                   01S0427
         LA    @14,ANCHOR                                       01S0427
         ST    @14,@AL00001+8                                   01S0427
         L     @14,ZZ2MSGSP(,R9)                                01S0427
         ST    @14,@AL00001+12                                  01S0427
         LA    @14,@CB01317                                     01S0427
         ST    @14,@AL00001+16                                  01S0427
         LA    @14,@CF00053                                     01S0427
         ST    @14,@AL00001+20                                  01S0427
         L     @15,ZZ2MSG0P(,R9)                                01S0427
         LA    @01,@AL00001                                     01S0427
         BALR  @14,@15                                          01S0427
*     END;                          /* BLSDMSG                  01S0428
*                                      (ZZ2,NOMSG,ANCHOR,BLSDMSGS)
*                                      ROUTE(TERM)                   */
*                                                               01S0428
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK IF EVERYTHING OK                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0429
*   IF RETC=ZZZFLAGI THEN           /* EVERYTHING FINE               */
@RF00425 LTR   RETC,RETC                                        01S0429
         BZ    @RT00429                                         01S0429
*     ;                                                         01S0430
*   ELSE                            /* SOMETHING WRONG               */
*EXITFPFR:                          /* FREE FPBLOK                   */
*     DO;                           /* FREEMAIN(R) LV(LENGTH(FPBLOK))
*                                      SP(ZZZSPEXC)A(FPBLOK)         */
EXITFPFR DS    0H                                               01S0432
*       RESPECIFY                                               01S0432
*        (GPR01F,                                               01S0432
*         GPR00F) RESTRICTED;                                   01S0432
*       GPR00F=LENGTH(FPBLOK);      /* LENGTH REQUESTED              */
         LA    GPR00F,152                                       01S0433
*       GPR01F=ZZZSPEXC;            /* SP IN REG 1                   */
         LA    GPR01F,1                                         01S0434
*       GEN(SLL   GPR01F,24)                                    01S0435
*       NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;            01S0435
         SLL   GPR01F,24
*       GPR00F=GPR00F×GPR01F;       /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                    01S0436
*       GPR01F=ADDR(FPBLOK);        /* SET REGISTER ONE              */
         L     GPR01F,ZZ1FPP(,ZZ1PTR)                           01S0437
*       SVC(10);                    /* R-FORM OF GETMAIN             */
         SVC   10                                               01S0438
*       RESPECIFY                                               01S0439
*        (GPR01F,                                               01S0439
*         GPR00F) UNRESTRICTED;                                 01S0439
*     END;                          /* FREEMAIN(R) LV(LENGTH(FPBLOK))
*                                      SP(ZZZSPEXC)A(FPBLOK)         */
*EXIT:                              /* STANDARD RETURN               */
*   RETURN CODE(RETC);              /* RETURN CODE                   */
@RT00429 DS    0H                                               01S0441
EXIT     L     @13,4(,@13)                                      01S0441
         L     @00,@SIZDATD                                     01S0441
         LR    @01,@11                                          01S0441
         BLSUFRES R,LV=(0),A=(1)
         LR    @15,@05                                          01S0441
         L     @14,12(,@13)                                     01S0441
         LM    @00,@12,20(@13)                                  01S0441
         BR    @14                                              01S0441
*/*BLSUPEND--MVS IPCS MODULE                                         */
*                                                               01S0442
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                  01S0442
*     GPR01F FIXED(31) REG(1),                                  01S0442
*     GPR15F FIXED(31) REG(15),                                 01S0442
*     GPR01P PTR(31) REG(1),                                    01S0442
*     GPR15P PTR(31) REG(15);                                   01S0442
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                    01S0443
*     I031F FIXED(31) BASED,                                    01S0443
*     I031P PTR(31) BASED,                                      01S0443
*     I015F FIXED(15) BASED,                                    01S0443
*     I015P PTR(15) BASED,                                      01S0443
*     I008P PTR(8) BASED,                                       01S0443
*     I001C CHAR(1) BASED;                                      01S0443
*   DECLARE                                                     01S0444
*     IOPTLIST(8) PTR(31) BDY(WORD);/* OPTION LIST ARRAY             */
*   GENERATE NODEFS NOREFS DATA;                                01S0445
*   END                             /* BLRPEND                       */
*                                                               01S0446
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (BLSUZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLRFULL )                                       */
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */
*/*%INCLUDE SYSLIB  (IKJPSCB )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJUPT  )                                       */
*/*%INCLUDE SYSLIB  (BLSUSERV)                                       */
*/*%INCLUDE SYSLIB  (BLRSERV )                                       */
*/*%INCLUDE SYSLIB  (BLRSERVD)                                       */
*/*%INCLUDE SYSLIB  (BLSDSERV)                                       */
*/*%INCLUDE SYSLIB  (IKJIOPL )                                       */
*/*%INCLUDE SYSLIB  (IKJGTPB )                                       */
*/*%INCLUDE SYSLIB  (BLSFP   )                                       */
*                                                               01S0446
*       ;                                                       01S0446
@EL00001 L     @13,4(,@13)                                      01S0446
@EF00001 L     @00,@SIZDATD                                     01S0446
         LR    @01,@11                                          01S0446
         BLSUFRES R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                  01S0446
         BR    @14                                              01S0446
@DATA    DS    0H
@SM01342 MVC   0(0,@08),PDEI(@14)
@SM01344 MVC   FPDSDS(0,@08),PDDSDD(@14)
@SM01346 MVC   FPPDDS(0,@08),PDPDRD(@14)
@SM01348 MVC   FPPIDP(0,@08),PDPIDI(@04)
@SM01350 MVC   FPSYSID(0,@14),PDSYSI(@04)
@SM01352 MVC   FPGRPID(0,@14),PDGRPI(@04)
@SM01354 MVC   FPADMID(0,@14),PDADMI(@01)
@SM01356 MVC   FPDELID(0,@14),PDDELI(@01)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    2F
@AL00001 DS    7A
BLSDIFP0 CSECT
         DS    0F
@CF00053 DC    F'0'
@CH00053 EQU   @CF00053+2
@CF00101 DC    F'3'
@CF00045 DC    F'4'
@CF00056 DC    F'8'
@CF00059 DC    F'16'
@CF00174 DC    F'256'
@CF01217 DC    F'-1'
@CF00068 DC    XL4'80000000'
@CF01314 DC    XL4'03000000'
@CF01328 DC    XL4'FFFFFFF8'
@CF01359 DC    XL4'0000FFFF'
@CF00049 DC    BL4'0'
@CF00051 DC    BL4'1'
@DATD    DSECT
         DS    0D
DMCBPTR  DS    A
PDAPTR   DS    A
ANCHOR   DS    A
IOPL     DS    CL16
         ORG   IOPL
IOPLUPT  DS    AL4
IOPLECT  DS    AL4
IOPLECB  DS    AL4
IOPLIOPB DS    AL4
         ORG   IOPL+16
SYS1PARM DS    CL8
MEMBNM   DS    CL8
M2B      DS    CL51
         ORG   M2B
M2BL     DS    FL2
@NM00097 DS    BL2
M2BT     DS    CL47
         ORG   M2BT
M2BTA    DS    CL30
M2BTB    DS    CL8
M2BTC    DS    CL9
         ORG   M2B+51
         DS    CL1
M3B      DS    CL71
         ORG   M3B
M3BL     DS    FL2
@NM00099 DS    BL2
M3BT     DS    CL67
         ORG   M3BT
M3BTA    DS    CL58
M3BTB    DS    CL8
M3BTC    DS    CL1
         ORG   M3B+71
         DS    CL1
M4B      DS    CL53
         ORG   M4B
M4BL     DS    FL2
@NM00101 DS    BL2
M4BT     DS    CL49
         ORG   M4BT
M4BTA    DS    CL37
M4BTB    DS    CL12
         ORG   M4B+53
         DS    CL3
IOPTLIST DS    8A
BLSDIFP0 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
PYPTR    DC    AL4(PY)
@CC01322 DC    C'PROBIDPREFIX'
@CC01219 DC    C'RDIPCSPR'
@CC01306 DC    C'IPCSPR00'
@CC01329 DC    C'DMCB'
@CC01324 DC    C'DSD'
@CC01325 DC    C'PDR'
@CB01227 DC    X'000000'
@CB00906 DC    X'01'
@CB01358 EQU   @CB01227
@CB01317 DC    B'00010000'
         DS    CL1
DFPBLOK  DS    CL152
         ORG   DFPBLOK
DFPPDDS  DC    CL44' '
DFPRES1  DC    CL4' '
DFPDSDS  DC    CL44' '
DFPRES2  DC    CL4' '
DFPPIDP  DC    X'000000'
DFPRES3  DC    CL1' '
DFPDPIDP DC    CL3'000'
DFPRES4  DC    CL1' '
DFPSYSID DC    CL8' '
DFPGRPID DC    CL8' '
DFPADMNM DS    CL8
         ORG   DFPADMNM
DFPADMID DC    CL7' '
DFPADMLN DC    AL1(0)
         ORG   DFPBLOK+128
DFPDELNM DS    CL8
         ORG   DFPDELNM
DFPDELID DC    CL7' '
DFPDELLN DC    AL1(0)
         ORG   DFPBLOK+136
DFPRES5  DC    CL16' '
         ORG   DFPBLOK+152
M1       DS    CL49
         ORG   M1
M1L      DC    AL2(49)
@NM00095 DC    X'0000'
M1T      DS    CL45
         ORG   M1T
M1TA     DC    CL45'BLS04016I UNABLE TO OBTAIN STORAGE FOR FPBLOK'
         ORG   M1+49
         DS    CL1
M2S      DS    CL51
         ORG   M2S
M2SL     DC    AL2(51)
@NM00096 DC    X'0000'
M2ST     DS    CL47
         ORG   M2ST
M2STA    DC    CL30'BLS04017I SYS1.PARMLIB MEMBER '
M2STB    DC    CL8' '
M2STC    DC    CL9'NOT FOUND'
         ORG   M2S+51
         DS    CL1
M3S      DS    CL71
         ORG   M3S
M3SL     DC    AL2(71)
@NM00098 DC    X'0000'
M3ST     DS    CL67
         ORG   M3ST
M3STA    DC    CL58'BLS04018I ERROR ENCOUNTERED WHILE PROCESSING SYS1.PC
               ARMLIB('
M3STB    DC    CL8' '
M3STC    DC    CL1')'
         ORG   M3S+71
         DS    CL1
M4S      DS    CL53
         ORG   M4S
M4SL     DC    AL2(53)
@NM00100 DC    X'0000'
M4ST     DS    CL49
         ORG   M4ST
M4STA    DC    CL37'BLS04019I MISSING OR INVALID KEYWORD '
M4STB    DC    CL12' '
         ORG   M4S+53
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSDIFP0 CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSDIFP0+19)/20+7)/8)CL8'BLSDIFP0'
@DATD    DSECT
         DS    0H
@DATD    DSECT
BLSDIFP0 CSECT
SDATA    DS    0D
SGTPB    GETLINE MF=L
SDATAEND DS    0D
@DATD    DSECT
ADATA    DS    0D
GTPB     GETLINE MF=L
@DATD    DSECT
         SPACE 2
***********************************************************************
* IKJPARM--BEGIN MACROS SPECIFYING COMMAND SYNTAX                     *
***********************************************************************
         SPACE
BLSDIFP0 CSECT
PY       IKJPARM DSECT=PD
@DATD    DSECT
BLSDIFP0 CSECT
PKDSD    IKJKEYWD
@DATD    DSECT
BLSDIFP0 CSECT
         IKJNAME 'DSD',SUBFLD=PSDSD
@DATD    DSECT
BLSDIFP0 CSECT
PKPDR    IKJKEYWD
@DATD    DSECT
BLSDIFP0 CSECT
         IKJNAME 'PDR',SUBFLD=PSPDR
@DATD    DSECT
BLSDIFP0 CSECT
PKPID    IKJKEYWD
@DATD    DSECT
BLSDIFP0 CSECT
         IKJNAME 'PROBIDPREFIX',SUBFLD=PSPID
@DATD    DSECT
BLSDIFP0 CSECT
PKSYS    IKJKEYWD
@DATD    DSECT
BLSDIFP0 CSECT
         IKJNAME 'SYSTEM',SUBFLD=PSSYS
@DATD    DSECT
BLSDIFP0 CSECT
PKGRP    IKJKEYWD
@DATD    DSECT
BLSDIFP0 CSECT
         IKJNAME 'GROUP',SUBFLD=PSGRP
@DATD    DSECT
BLSDIFP0 CSECT
PKADMIN  IKJKEYWD
@DATD    DSECT
BLSDIFP0 CSECT
         IKJNAME 'ADMINAUTHORITY',SUBFLD=PSADMIN
@DATD    DSECT
BLSDIFP0 CSECT
PKDEL    IKJKEYWD
@DATD    DSECT
BLSDIFP0 CSECT
         IKJNAME 'DELETEAUTHORITY',SUBFLD=PSDEL
@DATD    DSECT
BLSDIFP0 CSECT
PKLINLN  IKJKEYWD
@DATD    DSECT
BLSDIFP0 CSECT
         IKJNAME 'LINELENGTH',SUBFLD=PSLINLN
@DATD    DSECT
BLSDIFP0 CSECT
PKPGSZ   IKJKEYWD
@DATD    DSECT
BLSDIFP0 CSECT
         IKJNAME 'PAGESIZE',SUBFLD=PSPGSZ
@DATD    DSECT
BLSDIFP0 CSECT
         SPACE
PSDSD    IKJSUBF
@DATD    DSECT
BLSDIFP0 CSECT
PDDSD    IKJPOSIT DSNAME,LIST,PROMPT='DATA SET DIRECTORY NAME'
@DATD    DSECT
BLSDIFP0 CSECT
         SPACE
PSPDR    IKJSUBF
@DATD    DSECT
BLSDIFP0 CSECT
PDPDR    IKJPOSIT DSNAME,LIST,PROMPT='PROBLEM DIRECTORY NAME'
@DATD    DSECT
BLSDIFP0 CSECT
         SPACE
PSPID    IKJSUBF
@DATD    DSECT
BLSDIFP0 CSECT
PDPID    IKJIDENT 'PROBLEM ID PREFIX',FIRST=ALPHANUM,MAXLNTH=3,OTHER=AL*
               PHANUM,PROMPT='PROBLEM ID PREFIX'
@DATD    DSECT
BLSDIFP0 CSECT
         SPACE
PSSYS    IKJSUBF
@DATD    DSECT
BLSDIFP0 CSECT
PDSYS    IKJIDENT 'SYSTEM ID',FIRST=ALPHANUM,MAXLNTH=8,OTHER=ALPHANUM, *
               PROMPT='SYSTEM ID'
@DATD    DSECT
BLSDIFP0 CSECT
         SPACE
PSGRP    IKJSUBF
@DATD    DSECT
BLSDIFP0 CSECT
PDGRP    IKJIDENT 'GROUP ID',FIRST=ALPHANUM,MAXLNTH=8,OTHER=ALPHANUM,  *
               PROMPT='GROUP ID'
@DATD    DSECT
BLSDIFP0 CSECT
         SPACE
PSADMIN  IKJSUBF
@DATD    DSECT
BLSDIFP0 CSECT
PDADM    IKJIDENT 'ADMIN AUTHORITY LOGON ID',MAXLNTH=7,OTHER=ALPHANUM, *
               PROMPT='ADMIN AUTHORITY LOGON ID'
@DATD    DSECT
BLSDIFP0 CSECT
         SPACE
PSDEL    IKJSUBF
@DATD    DSECT
BLSDIFP0 CSECT
PDDEL    IKJIDENT 'DELETE AUTHORITY LOGON ID',MAXLNTH=7,OTHER=ALPHANUM,*
               PROMPT='DELETE AUTHORITY LOGON ID'
@DATD    DSECT
BLSDIFP0 CSECT
         SPACE
PSLINLN  IKJSUBF
@DATD    DSECT
BLSDIFP0 CSECT
PDLIN    IKJIDENT 'PRINT LINE LENGTH',INTEG,PROMPT='PRINT LINE LENGTH'
@DATD    DSECT
BLSDIFP0 CSECT
         SPACE
PSPGSZ   IKJSUBF
@DATD    DSECT
BLSDIFP0 CSECT
PDPSZ    IKJIDENT 'PRINT PAGE SIZE',INTEG,PROMPT='PRINT PAGE SIZE'
@DATD    DSECT
PD       DSECT
PD99     DS    0C
BLSDIFP0 CSECT
         IKJENDP
         SPACE 2
***********************************************************************
* IKJENDP--END SYNTAX DESCRIPTION                                     *
***********************************************************************
         SPACE
@DATD    DSECT
@DATD    DSECT
STPB     STACK MF=L
BLSDIFP0 CSECT
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSDIFP0 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
FLAG1    EQU   @07
RETC     EQU   @05
ZZ1PTR   EQU   @06
R9       EQU   @09
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
RB       EQU   @11
RD       EQU   @13
RE       EQU   @14
RF       EQU   @15
PDRPTR   EQU   @10
GPR01F   EQU   @01
GPR15F   EQU   @15
GPR00F   EQU   @00
GPR01P   EQU   @01
GPR15P   EQU   @15
RA       EQU   @10
RC       EQU   @12
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
ZZ1      EQU   0
ZZ1PGSZ  EQU   ZZ1+76
ZZ1PLINE EQU   ZZ1+80
ZZ1FPP   EQU   ZZ1+140
ZZ1ATTN  EQU   ZZ1+360
ZZ1EVE   EQU   ZZ1ATTN+4
ZZ1F     EQU   ZZ1+368
ZZ1N     EQU   ZZ1+1116
ZZ2      EQU   0
ZZ2AMD   EQU   ZZ2
@NM00013 EQU   ZZ2AMD+7
ZZ2PRT   EQU   ZZ2+138
ZZ2PRTT  EQU   ZZ2PRT+4
ZZ2PRTT1 EQU   ZZ2PRTT+1
ZZ2A     EQU   ZZ2+272
ZZ2AF    EQU   ZZ2A+16
ZZ2APID  EQU   ZZ2A+64
ZZ2AD    EQU   ZZ2A+74
ZZ2ADD   EQU   ZZ2AD
ZZ2ADDT  EQU   ZZ2ADD+2
ZZ2ADM   EQU   ZZ2AD+46
ZZ2ADMT  EQU   ZZ2ADM+2
ZZ2ADP   EQU   ZZ2AD+56
ZZ2ADPT  EQU   ZZ2ADP+2
ZZ2AQAS  EQU   ZZ2A+144
ZZ2AQD   EQU   ZZ2A+160
ZZ2AQDT  EQU   ZZ2AQD+10
ZZ2AQDF  EQU   ZZ2AQD+52
ZZ2STG   EQU   ZZ2+960
ZZ2ALLOP EQU   ZZ2+992
ZZ2FREEP EQU   ZZ2+996
ZZ2FF19P EQU   ZZ2+1000
ZZ2FRE1P EQU   ZZ2+1004
ZZ2FF18P EQU   ZZ2+1008
ZZ2DYNAP EQU   ZZ2+1012
ZZ2ZZ2CP EQU   ZZ2+1016
ZZ2ZZ2DP EQU   ZZ2+1020
ZZ2STAIP EQU   ZZ2+1024
ZZ2FF02P EQU   ZZ2+1028
ZZ2GETLP EQU   ZZ2+1032
ZZ2PARSP EQU   ZZ2+1036
ZZ2PTGTP EQU   ZZ2+1040
ZZ2PUTLP EQU   ZZ2+1044
ZZ2SCANP EQU   ZZ2+1048
ZZ2STCKP EQU   ZZ2+1052
ZZ2ALOCP EQU   ZZ2+1056
ZZ2MSGSP EQU   ZZ2+1060
ZZ2TRMOP EQU   ZZ2+1064
ZZ2TRMVP EQU   ZZ2+1068
ZZ2MSG0P EQU   ZZ2+1076
ZZ2PUTNP EQU   ZZ2+1084
ZZ2TRMNP EQU   ZZ2+1088
ZZ2ENQ0P EQU   ZZ2+1092
ZZ2ADSDP EQU   ZZ2+1096
ZZ2APDRP EQU   ZZ2+1100
ZZ2FDSDP EQU   ZZ2+1104
ZZ2FPDRP EQU   ZZ2+1108
ZZ2ZZ1P  EQU   ZZ2+1264
ZZ2DVTP  EQU   ZZ2+1276
ZZ2BVTP  EQU   ZZ2+1280
ZZ2CPPL  EQU   ZZ2+1292
ZZ2CPPLC EQU   ZZ2CPPL
ZZ2ITR   EQU   ZZ2+2840
ZZ2ITRE  EQU   ZZ2ITR+16
ZZ2ITSE  EQU   ZZ2+2864
ZZ2ES    EQU   ZZ2+2872
ZZ2AMDX  EQU   ZZ2+7160
ZZ2AXO   EQU   ZZ2+7934
ZZ2AXOT  EQU   ZZ2AXO+2
CMD      EQU   0
CMDT     EQU   CMD+4
PSCB     EQU   0
PSCBATR1 EQU   PSCB+16
ECT      EQU   0
ECTSWS   EQU   ECT+28
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
UPT      EQU   0
UPTSWS   EQU   UPT+12
SA       EQU   0
SA1      EQU   SA
SAR      EQU   SA+12
SAR1     EQU   SAR+12
IKJGETL  EQU   0
IKJPARS  EQU   0
BLSUTRMV EQU   0
BVT      EQU   0
BVTPUTLP EQU   BVT+4
BVTPUTOP EQU   BVT+12
BVTPUTTP EQU   BVT+16
BVTPUTVP EQU   BVT+20
BVTPUTAP EQU   BVT+24
BVTPRTTP EQU   BVT+28
BVTPRTAP EQU   BVT+32
BVTPUTDP EQU   BVT+36
BVTMONP  EQU   BVT+40
BVTMON2P EQU   BVT+44
BVTVSARP EQU   BVT+48
BVTVSENP EQU   BVT+64
BVTVSERP EQU   BVT+68
BVTVSGEP EQU   BVT+72
BVTVSGUP EQU   BVT+76
BVTVSPOP EQU   BVT+80
BVTVSPUP EQU   BVT+84
BVTMPKNP EQU   BVT+104
BVTMONLP EQU   BVT+108
BVTPUTCP EQU   BVT+132
BVTMPK1P EQU   BVT+136
BVTZZ2RP EQU   BVT+140
BVTPGMRP EQU   BVT+144
BVTMONAP EQU   BVT+148
BVTBLDDP EQU   BVT+152
BVTBLDLP EQU   BVT+156
BVTPGMCP EQU   BVT+160
BVTPGMDP EQU   BVT+164
BVTPGMLP EQU   BVT+168
BVTMONCP EQU   BVT+180
BVTMONDP EQU   BVT+184
BVTMONTP EQU   BVT+188
BVTPARIP EQU   BVT+192
BVTPARUP EQU   BVT+196
BVTPRTNP EQU   BVT+204
BVTVSCRP EQU   BVT+208
BVTVSMRP EQU   BVT+212
BVTMONXP EQU   BVT+216
BVTTRMAP EQU   BVT+228
BLSDADSD EQU   0
BLSDAPDR EQU   0
BLSDMSGS EQU   0
BLSDMSG0 EQU   0
DVT      EQU   0
DVTDEQPP EQU   DVT+8
DVTENQPP EQU   DVT+12
DVTAUTHP EQU   DVT+20
DVTLPCLP EQU   DVT+24
DVTBP00P EQU   DVT+28
DVTCN00P EQU   DVT+32
DVTDF00P EQU   DVT+36
DVTDS00P EQU   DVT+44
DVTFL00P EQU   DVT+48
DVTFP00P EQU   DVT+52
DVTGD00P EQU   DVT+56
DVTGG00P EQU   DVT+60
DVTGP00P EQU   DVT+64
DVTND00P EQU   DVT+68
DVTND01P EQU   DVT+72
DVTOD00P EQU   DVT+76
DVTPS00P EQU   DVT+80
DVTSD00P EQU   DVT+84
DVTSL00P EQU   DVT+88
DVTTL00P EQU   DVT+92
DVTUD00P EQU   DVT+96
DVTUP00P EQU   DVT+100
DVTLP00P EQU   DVT+104
DVTLALLP EQU   DVT+108
DVTLPFMP EQU   DVT+112
DVTCLOSP EQU   DVT+116
DVTOPENP EQU   DVT+120
DVTPERAP EQU   DVT+124
DVTDALLP EQU   DVT+128
DMCB     EQU   0
DMCBID   EQU   DMCB
DMCBFTY  EQU   DMCB+20
DMCBOPN  EQU   DMCB+21
DMCBRMOD EQU   DMCB+23
DMCBOUT  EQU   DMCBRMOD
DMCBOPTS EQU   DMCB+24
DMCBGKY  EQU   DMCBOPTS
DMCBMFLG EQU   DMCB+28
DMCBBUFP EQU   DMCB+32
DMCBKEYP EQU   DMCB+44
DMCBRI   EQU   DMCB+64
DMCBACBE EQU   DMCB+124
DMCBDDNM EQU   DMCB+260
DMCBSPEC EQU   DMCB+380
DMCBFR   EQU   DMCB+412
DMCBAMS  EQU   DMCB+416
DMCBAUDT EQU   DMCB+568
DMCBLSCP EQU   DMCBAUDT+16
DMCBDMGR EQU   0
FPBLOK   EQU   0
FPPDDS   EQU   FPBLOK
FPDSDS   EQU   FPBLOK+48
FPPIDP   EQU   FPBLOK+96
FPSYSID  EQU   FPBLOK+104
FPGRPID  EQU   FPBLOK+112
FPADMNM  EQU   FPBLOK+120
FPADMID  EQU   FPADMNM
FPADMLN  EQU   FPADMNM+7
FPDELNM  EQU   FPBLOK+128
FPDELID  EQU   FPDELNM
FPDELLN  EQU   FPDELNM+7
PDEI     EQU   0
PYCSECT  EQU   0
PDDSECT  EQU   0
PDXP     EQU   PDDSECT+1
PDL      EQU   PDDSECT+5
PDDSDX   EQU   0
PDDSDDP  EQU   PDDSDX
PDDSDDL  EQU   PDDSDX+4
PDDSDDF  EQU   PDDSDX+6
PDDSDDFP EQU   PDDSDDF
PDDSDMP  EQU   PDDSDX+8
PDDSDMF  EQU   PDDSDX+14
PDDSDPP  EQU   PDDSDX+16
PDDSDPF  EQU   PDDSDX+22
PDDSDD   EQU   0
PDPDRX   EQU   0
PDPDRDP  EQU   PDPDRX
PDPDRDL  EQU   PDPDRX+4
PDPDRDF  EQU   PDPDRX+6
PDPDRDFP EQU   PDPDRDF
PDPDRMP  EQU   PDPDRX+8
PDPDRMF  EQU   PDPDRX+14
PDPDRPP  EQU   PDPDRX+16
PDPDRPF  EQU   PDPDRX+22
PDPDRD   EQU   0
PDPIDI   EQU   0
PDSYSI   EQU   0
PDGRPI   EQU   0
PDADMI   EQU   0
PDDELI   EQU   0
PDLINI   EQU   0
PDPSZI   EQU   0
GCMD     EQU   0
GCMDL    EQU   GCMD
GCMDT    EQU   GCMD+4
BLSCALOC EQU   0
BLSDDEQP EQU   0
BLSDENQP EQU   0
BLSDENQ0 EQU   0
BLSDFDSD EQU   0
BLSDFPDR EQU   0
BLSEAUTH EQU   0
BLSELPCL EQU   0
BLSELPFM EQU   0
BLSFBP00 EQU   0
BLSFCLOS EQU   0
BLSFCN00 EQU   0
BLSFDALL EQU   0
BLSFDF00 EQU   0
BLSFDS00 EQU   0
BLSFFL00 EQU   0
BLSFFP00 EQU   0
BLSFGD00 EQU   0
BLSFGG00 EQU   0
BLSFGP00 EQU   0
BLSFLALL EQU   0
BLSFLP00 EQU   0
BLSFND00 EQU   0
BLSFND01 EQU   0
BLSFOD00 EQU   0
BLSFOPEN EQU   0
BLSFPERA EQU   0
BLSFPS00 EQU   0
BLSFSD00 EQU   0
BLSFSL00 EQU   0
BLSFTL00 EQU   0
BLSFUD00 EQU   0
BLSFUP00 EQU   0
BLSUALLO EQU   0
BLSUBLDD EQU   0
BLSUBLDL EQU   0
BLSUDYNA EQU   0
BLSUFREE EQU   0
BLSUFRE1 EQU   0
BLSUMON  EQU   0
BLSUMONA EQU   0
BLSUMONC EQU   0
BLSUMOND EQU   0
BLSUMONL EQU   0
BLSUMONT EQU   0
BLSUMONX EQU   0
BLSUMON2 EQU   0
BLSUMPKN EQU   0
BLSUMPK1 EQU   0
BLSUPARI EQU   0
BLSUPARU EQU   0
BLSUPGMC EQU   0
BLSUPGMD EQU   0
BLSUPGML EQU   0
BLSUPGMR EQU   0
BLSUPRTA EQU   0
BLSUPRTN EQU   0
BLSUPRTT EQU   0
BLSUPUTA EQU   0
BLSUPUTC EQU   0
BLSUPUTD EQU   0
BLSUPUTL EQU   0
BLSUPUTN EQU   0
BLSUPUTO EQU   0
BLSUPUTT EQU   0
BLSUPUTV EQU   0
BLSUSTAI EQU   0
BLSUTRMA EQU   0
BLSUTRMN EQU   0
BLSUTRMO EQU   0
BLSUVSAR EQU   0
BLSUVSCR EQU   0
BLSUVSEN EQU   0
BLSUVSER EQU   0
BLSUVSGE EQU   0
BLSUVSGU EQU   0
BLSUVSMR EQU   0
BLSUVSPO EQU   0
BLSUVSPU EQU   0
BLSUZZ2C EQU   0
BLSUZZ2D EQU   0
BLSUZZ2R EQU   0
DMCBRQC  EQU   0
IKJEFF02 EQU   0
IKJEFF18 EQU   0
IKJEFF19 EQU   0
IKJPTGT  EQU   0
IKJPUTL  EQU   0
IKJSCAN  EQU   0
IKJSTCK  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
PDDSDM   EQU   0
PDDSDP   EQU   0
PDPDRM   EQU   0
PDPDRP   EQU   0
GTPBIBUF EQU   GTPB+4
PDPIDIP  EQU   PDPID
PDPIDIL  EQU   PDPID+4
PDPIDIF  EQU   PDPID+6
PDPIDIFP EQU   PDPIDIF
PDSYSIP  EQU   PDSYS
PDSYSIL  EQU   PDSYS+4
PDSYSIF  EQU   PDSYS+6
PDSYSIFP EQU   PDSYSIF
PDGRPIP  EQU   PDGRP
PDGRPIL  EQU   PDGRP+4
PDGRPIF  EQU   PDGRP+6
PDGRPIFP EQU   PDGRPIF
PDADMIP  EQU   PDADM
PDADMIL  EQU   PDADM+4
PDADMIF  EQU   PDADM+6
PDADMIFP EQU   PDADMIF
PDDELIP  EQU   PDDEL
PDDELIL  EQU   PDDEL+4
PDDELIF  EQU   PDDEL+6
PDDELIFP EQU   PDDELIF
PDLINIP  EQU   PDLIN
PDLINIF  EQU   PDLIN+6
PDLINIFP EQU   PDLINIF
PDPSZIP  EQU   PDPSZ
PDPSZIF  EQU   PDPSZ+6
PDPSZIFP EQU   PDPSZIF
PZ2      EQU   0
PDE      EQU   0
PDEIP    EQU   PDE
PDEIL    EQU   PDE+4
PDEIF    EQU   PDE+6
PDEIFP   EQU   PDEIF
CPPL     EQU   ZZ2CPPL
CPPLUPT  EQU   CPPL+4
CPPLPSCB EQU   CPPL+8
CPPLECT  EQU   CPPL+12
DMCBVSM  EQU   DMCBAMS
DMCBQSM  EQU   DMCBAMS
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
DMCBRES7 EQU   DMCBQSM+96
DMCBDCB  EQU   DMCBQSM
DMCBACB  EQU   DMCBVSM+76
DMCBRPL  EQU   DMCBVSM
CPPLCBUF EQU   CPPL
@NM00071 EQU   PDE+8
@NM00070 EQU   PDE+7
PDEIF8   EQU   PDEIF
PDEIF7   EQU   PDEIF
PDEIF6   EQU   PDEIF
PDEIF5   EQU   PDEIF
PDEIF4   EQU   PDEIF
PDEIF3   EQU   PDEIF
PDEIF2   EQU   PDEIF
@NM00094 EQU   PDPSZ+8
@NM00093 EQU   PDPSZ+7
PDPSZIF8 EQU   PDPSZIF
PDPSZIF7 EQU   PDPSZIF
PDPSZIF6 EQU   PDPSZIF
PDPSZIF5 EQU   PDPSZIF
PDPSZIF4 EQU   PDPSZIF
PDPSZIF3 EQU   PDPSZIF
PDPSZIF2 EQU   PDPSZIF
PDPSZIL  EQU   PDPSZ+4
@NM00092 EQU   PDLIN+8
@NM00091 EQU   PDLIN+7
PDLINIF8 EQU   PDLINIF
PDLINIF7 EQU   PDLINIF
PDLINIF6 EQU   PDLINIF
PDLINIF5 EQU   PDLINIF
PDLINIF4 EQU   PDLINIF
PDLINIF3 EQU   PDLINIF
PDLINIF2 EQU   PDLINIF
PDLINIL  EQU   PDLIN+4
@NM00090 EQU   PDDEL+8
@NM00089 EQU   PDDEL+7
PDDELIF8 EQU   PDDELIF
PDDELIF7 EQU   PDDELIF
PDDELIF6 EQU   PDDELIF
PDDELIF5 EQU   PDDELIF
PDDELIF4 EQU   PDDELIF
PDDELIF3 EQU   PDDELIF
PDDELIF2 EQU   PDDELIF
@NM00088 EQU   PDADM+8
@NM00087 EQU   PDADM+7
PDADMIF8 EQU   PDADMIF
PDADMIF7 EQU   PDADMIF
PDADMIF6 EQU   PDADMIF
PDADMIF5 EQU   PDADMIF
PDADMIF4 EQU   PDADMIF
PDADMIF3 EQU   PDADMIF
PDADMIF2 EQU   PDADMIF
@NM00086 EQU   PDGRP+8
@NM00085 EQU   PDGRP+7
PDGRPIF8 EQU   PDGRPIF
PDGRPIF7 EQU   PDGRPIF
PDGRPIF6 EQU   PDGRPIF
PDGRPIF5 EQU   PDGRPIF
PDGRPIF4 EQU   PDGRPIF
PDGRPIF3 EQU   PDGRPIF
PDGRPIF2 EQU   PDGRPIF
@NM00084 EQU   PDSYS+8
@NM00083 EQU   PDSYS+7
PDSYSIF8 EQU   PDSYSIF
PDSYSIF7 EQU   PDSYSIF
PDSYSIF6 EQU   PDSYSIF
PDSYSIF5 EQU   PDSYSIF
PDSYSIF4 EQU   PDSYSIF
PDSYSIF3 EQU   PDSYSIF
PDSYSIF2 EQU   PDSYSIF
@NM00082 EQU   PDPID+8
@NM00081 EQU   PDPID+7
PDPIDIF8 EQU   PDPIDIF
PDPIDIF7 EQU   PDPIDIF
PDPIDIF6 EQU   PDPIDIF
PDPIDIF5 EQU   PDPIDIF
PDPIDIF4 EQU   PDPIDIF
PDPIDIF3 EQU   PDPIDIF
PDPIDIF2 EQU   PDPIDIF
@NM00069 EQU   GTPB
GCMDT1   EQU   GCMDT
GCMDO    EQU   GCMD+2
PDPDRXP  EQU   PDPDRX+24
@NM00080 EQU   PDPDRX+23
PDPDRPF8 EQU   PDPDRPF
PDPDRPF7 EQU   PDPDRPF
PDPDRPF6 EQU   PDPDRPF
PDPDRPF5 EQU   PDPDRPF
PDPDRPF4 EQU   PDPDRPF
PDPDRPF3 EQU   PDPDRPF
PDPDRPF2 EQU   PDPDRPF
PDPDRPFP EQU   PDPDRPF
PDPDRPL  EQU   PDPDRX+20
@NM00079 EQU   PDPDRX+15
PDPDRMF8 EQU   PDPDRMF
PDPDRMF7 EQU   PDPDRMF
PDPDRMF6 EQU   PDPDRMF
PDPDRMF5 EQU   PDPDRMF
PDPDRMF4 EQU   PDPDRMF
PDPDRMF3 EQU   PDPDRMF
PDPDRMF2 EQU   PDPDRMF
PDPDRMFP EQU   PDPDRMF
PDPDRML  EQU   PDPDRX+12
@NM00078 EQU   PDPDRX+7
@NM00077 EQU   PDPDRDF
PDPDRDFQ EQU   PDPDRDF
PDDSDXP  EQU   PDDSDX+24
@NM00076 EQU   PDDSDX+23
PDDSDPF8 EQU   PDDSDPF
PDDSDPF7 EQU   PDDSDPF
PDDSDPF6 EQU   PDDSDPF
PDDSDPF5 EQU   PDDSDPF
PDDSDPF4 EQU   PDDSDPF
PDDSDPF3 EQU   PDDSDPF
PDDSDPF2 EQU   PDDSDPF
PDDSDPFP EQU   PDDSDPF
PDDSDPL  EQU   PDDSDX+20
@NM00075 EQU   PDDSDX+15
PDDSDMF8 EQU   PDDSDMF
PDDSDMF7 EQU   PDDSDMF
PDDSDMF6 EQU   PDDSDMF
PDDSDMF5 EQU   PDDSDMF
PDDSDMF4 EQU   PDDSDMF
PDDSDMF3 EQU   PDDSDMF
PDDSDMF2 EQU   PDDSDMF
PDDSDMFP EQU   PDDSDMF
PDDSDML  EQU   PDDSDX+12
@NM00074 EQU   PDDSDX+7
@NM00073 EQU   PDDSDDF
PDDSDDFQ EQU   PDDSDDF
PDSP     EQU   PDDSECT+4
@NM00072 EQU   PDDSECT
FPRES6   EQU   FPBLOK+136
FPRES4   EQU   FPBLOK+103
FPDBPIDP EQU   FPBLOK+100
FPRES3   EQU   FPBLOK+99
FPRES2   EQU   FPBLOK+92
FPRES1   EQU   FPBLOK+44
DMCBWRK  EQU   DMCB+648
DMCBRES8 EQU   DMCB+640
DMCBMODN EQU   DMCB+632
DMCBCARY EQU   DMCBAUDT+20
DMCBCLC  EQU   DMCBAUDT+12
DMCBOPC  EQU   DMCBAUDT+8
DMCBFRC  EQU   DMCBAUDT+4
DMCBALC  EQU   DMCBAUDT
DMCBRES6 EQU   DMCB+410
DMCBIRSC EQU   DMCB+408
DMCBSUBC EQU   DMCB+404
DMCBDRBP EQU   DMCB+400
DMCBRSZM EQU   DMCB+398
DMCBRSZA EQU   DMCB+396
DMCBCISZ EQU   DMCB+394
DMCBDCBL EQU   DMCB+392
DMCBDCLR EQU   DMCB+390
DMCBDCFM EQU   DMCB+389
DMCBRES5 EQU   DMCB+388
DMCBLBRT EQU   DMCB+386
DMCBLBSQ EQU   DMCB+384
DMCBLBPS EQU   DMCB+383
DMCBLBTY EQU   DMCB+382
DMCBRES4 EQU   DMCB+381
DMCBSPRS EQU   DMCBSPEC
DMCBSPRN EQU   DMCBSPEC
DMCBSPCT EQU   DMCBSPEC
DMCBSPRL EQU   DMCBSPEC
DMCBSPSE EQU   DMCB+376
DMCBSPPR EQU   DMCB+372
DMCBSPTY EQU   DMCB+369
DMCBODIS EQU   DMCB+368
DMCBDISP EQU   DMCB+367
DMCBSTAT EQU   DMCB+366
DMCBRES3 EQU   DMCB+364
DMCBMEMB EQU   DMCB+356
DMCBMODL EQU   DMCB+348
DMCBRES9 EQU   DMCB+340
DMCBPID  EQU   DMCB+332
DMCBTYPE EQU   DMCB+328
DMCBDSN  EQU   DMCB+284
DMCBUNIT EQU   DMCB+276
DMCBDSOR EQU   DMCB+274
DMCBVOL  EQU   DMCB+268
DMCBSYNM EQU   DMCB+132
DMCBRPLF EQU   DMCB+128
DMCBDCBE EQU   DMCBACBE
DMCBARC  EQU   DMCB+120
DMCBCPC  EQU   DMCB+116
DMCBRET  EQU   DMCB+112
DMCBSTL  EQU   DMCB+96
DMCBEOB  EQU   DMCB+92
DMCBFRE  EQU   DMCB+88
DMCBRES2 EQU   DMCB+85
DMCBSPID EQU   DMCB+84
DMCBRESC EQU   DMCB+80
DMCBZZ1P EQU   DMCB+76
DMCBMSGS EQU   DMCB+72
DMCBMSG0 EQU   DMCB+68
DMCBRRL  EQU   DMCB+60
DMCBRBA  EQU   DMCB+56
DMCBMSG  EQU   DMCB+52
DMCBKEYL EQU   DMCB+48
DMCBKPC  EQU   DMCBKEYP
DMCBORL  EQU   DMCB+40
DMCBBLEN EQU   DMCB+36
DMCBBFPC EQU   DMCBBUFP
DMCBRES1 EQU   DMCB+31
DMCBACCM EQU   DMCB+30
DMCBREJ  EQU   DMCB+29
DMCBRESB EQU   DMCBMFLG
DMCBFMOD EQU   DMCBMFLG
DMCBLOPT EQU   DMCB+27
DMCBLRM  EQU   DMCB+26
DMCBLRQ  EQU   DMCB+25
DMCBOPRS EQU   DMCBOPTS
DMCBLRD  EQU   DMCBOPTS
DMCBBWD  EQU   DMCBOPTS
DMCBUPD  EQU   DMCBOPTS
DMCBAPX  EQU   DMCBOPTS
DMCBRNO  EQU   DMCBGKY
DMCBKYD  EQU   DMCBOPTS
DMCBRMRS EQU   DMCBRMOD
DMCBRM5  EQU   DMCBRMOD
DMCBRM6  EQU   DMCBRMOD
DMCBTMP  EQU   DMCBOUT
DMCBRQST EQU   DMCB+22
DMCBRESA EQU   DMCBOPN
DMCBSOUT EQU   DMCBOPN
DMCBSIN  EQU   DMCBOPN
DMCBVSF  EQU   DMCBFTY
DMCBKSF  EQU   DMCBFTY
DMCBFTRS EQU   DMCBFTY
DMCBSHF  EQU   DMCBFTY
DMCBIRL  EQU   DMCB+16
DMCBRTC  EQU   DMCB+12
DMCBTVP  EQU   DMCB+8
DMCBNEXT EQU   DMCB+4
DVT99999 EQU   DVT+256
DVT0064P EQU   DVT+252
DVT0063P EQU   DVT+248
DVT0062P EQU   DVT+244
DVT0061P EQU   DVT+240
DVT0060P EQU   DVT+236
DVT0059P EQU   DVT+232
DVT0058P EQU   DVT+228
DVT0057P EQU   DVT+224
DVT0056P EQU   DVT+220
DVT0055P EQU   DVT+216
DVT0054P EQU   DVT+212
DVT0053P EQU   DVT+208
DVT0052P EQU   DVT+204
DVT0051P EQU   DVT+200
DVT0050P EQU   DVT+196
DVT0049P EQU   DVT+192
DVT0048P EQU   DVT+188
DVT0047P EQU   DVT+184
DVT0046P EQU   DVT+180
DVT0045P EQU   DVT+176
DVT0044P EQU   DVT+172
DVT0043P EQU   DVT+168
DVT0042P EQU   DVT+164
DVT0041P EQU   DVT+160
DVT0040P EQU   DVT+156
DVT0039P EQU   DVT+152
DVT0038P EQU   DVT+148
DVT0037P EQU   DVT+144
DVT0036P EQU   DVT+140
DVT0035P EQU   DVT+136
DVT0034P EQU   DVT+132
DVT0011P EQU   DVT+40
DVT0005P EQU   DVT+16
DVT0002P EQU   DVT+4
DVT0001P EQU   DVT
BVT99999 EQU   BVT+256
BVT0064P EQU   BVT+252
BVT0063P EQU   BVT+248
BVT0062P EQU   BVT+244
BVT0061P EQU   BVT+240
BVT0060P EQU   BVT+236
BVT0059P EQU   BVT+232
BVT0057P EQU   BVT+224
BVT0056P EQU   BVT+220
BVTSTBLP EQU   BVT+200
BVT0045P EQU   BVT+176
BVT0044P EQU   BVT+172
BVT0033P EQU   BVT+128
BVT0032P EQU   BVT+124
BVT0031P EQU   BVT+120
BVT0030P EQU   BVT+116
BVT0029P EQU   BVT+112
BVT0026P EQU   BVT+100
BVT0025P EQU   BVT+96
BVT0024P EQU   BVT+92
BVT0023P EQU   BVT+88
BVT0016P EQU   BVT+60
BVT0015P EQU   BVT+56
BVT0014P EQU   BVT+52
BVT0003P EQU   BVT+8
BVT0001P EQU   BVT
SA99     EQU   SA+72
SARC     EQU   SAR+56
SARB     EQU   SAR+52
SARA     EQU   SAR+48
SAR9     EQU   SAR+44
SAR8     EQU   SAR+40
SAR7     EQU   SAR+36
SAR6     EQU   SAR+32
SAR5     EQU   SAR+28
SAR4     EQU   SAR+24
SAR3     EQU   SAR+20
SAR2     EQU   SAR+16
SAR0     EQU   SAR+8
SARF     EQU   SAR+4
SARE     EQU   SAR
SAFWD    EQU   SA+8
SABAK    EQU   SA+4
SA1L     EQU   SA1+1
SA1P     EQU   SA1
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00068 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00067 EQU   UPT
@NM00066 EQU   ECT+52
@NM00065 EQU   ECT+48
@NM00064 EQU   ECT+44
@NM00063 EQU   ECTSWS2+1
@NM00062 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00061 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00060 EQU   PSCB+36
@NM00059 EQU   PSCB+32
@NM00058 EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00057 EQU   PSCBATR1
@NM00056 EQU   PSCBATR1
@NM00055 EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
PSCBUSRL EQU   PSCB+7
PSCBUSER EQU   PSCB
CMDT1    EQU   CMDT
CMDO     EQU   CMD+2
CMDL     EQU   CMD
ZZ299999 EQU   ZZ2+8192
ZZ2AXOT1 EQU   ZZ2AXOT
ZZ2AXOL  EQU   ZZ2AXO
@NM00054 EQU   ZZ2+7288
@NM00053 EQU   ZZ2AMDX+4
ZZ2AMDXC EQU   ZZ2AMDX
ZZ2HSD   EQU   ZZ2+3056
@NM00052 EQU   ZZ2ES
@NM00051 EQU   ZZ2+2868
ZZ2ITSEC EQU   ZZ2ITSE+1
@NM00050 EQU   ZZ2ITSE
ZZ2ITSEP EQU   ZZ2ITSE
ZZ2ITSEW EQU   ZZ2ITSE
@NM00049 EQU   ZZ2ITR+20
ZZ2ITREC EQU   ZZ2ITRE+1
@NM00048 EQU   ZZ2ITRE
ZZ2ITREP EQU   ZZ2ITRE
ZZ2ITREW EQU   ZZ2ITRE
@NM00047 EQU   ZZ2ITR+9
ZZ2ITRRC EQU   ZZ2ITR+8
ZZ2ITR2P EQU   ZZ2ITR+4
ZZ2ITRPP EQU   ZZ2ITR
@NM00046 EQU   ZZ2+1544
ZZ2PGM   EQU   ZZ2+1536
@NM00045 EQU   ZZ2+1526
ZZ2CW    EQU   ZZ2+1524
@NM00044 EQU   ZZ2+1504
@NM00043 EQU   ZZ2+1352
ZZ2FFSYP EQU   ZZ2+1348
ZZ2SASYP EQU   ZZ2+1344
ZZ2RDSYP EQU   ZZ2+1340
ZZ2RASYP EQU   ZZ2+1336
ZZ2PHSYP EQU   ZZ2+1332
ZZ2ESSYP EQU   ZZ2+1328
ZZ200SYP EQU   ZZ2+1324
ZZ2SCWP  EQU   ZZ2+1320
ZZ2TTLP  EQU   ZZ2+1316
ZZ2LOADP EQU   ZZ2+1312
ZZ2VRESP EQU   ZZ2+1308
ZZ2CPPLE EQU   ZZ2CPPL+12
ZZ2CPPLP EQU   ZZ2CPPL+8
ZZ2CPPLU EQU   ZZ2CPPL+4
ZZ2VRSAP EQU   ZZ2+1288
ZZ2RVTP  EQU   ZZ2+1284
@NM00042 EQU   ZZ2+1272
@NM00041 EQU   ZZ2+1268
ZZ2RPLP  EQU   ZZ2+1260
ZZ2TCBP  EQU   ZZ2+1256
@NM00040 EQU   ZZ2+1252
ZZ2ZZ2P  EQU   ZZ2+1248
@NM00039 EQU   ZZ2+1112
@NM00038 EQU   ZZ2+1080
ZZ2FT25P EQU   ZZ2+1072
@NM00037 EQU   ZZ2+976
ZZ2TOD   EQU   ZZ2+968
ZZ2STGN  EQU   ZZ2STG+4
ZZ2STGP  EQU   ZZ2STG
@NM00036 EQU   ZZ2+952
ZZ2SCMDE EQU   ZZ2+944
ZZ2SCMDN EQU   ZZ2+936
ZZ2IDENT EQU   ZZ2+928
ZZ2A9999 EQU   ZZ2A+656
@NM00035 EQU   ZZ2A+224
@NM00034 EQU   ZZ2A+220
ZZ2AQD99 EQU   ZZ2AQD+60
@NM00033 EQU   ZZ2AQD+56
@NM00032 EQU   ZZ2AQDF
ZZ2AQDFA EQU   ZZ2AQDF
ZZ2AQDIL EQU   ZZ2AQD+48
ZZ2AQDIM EQU   ZZ2AQD+44
ZZ2AQDT9 EQU   ZZ2AQDT+34
ZZ2AQDTE EQU   ZZ2AQDT+33
ZZ2AQDTD EQU   ZZ2AQDT+2
@NM00031 EQU   ZZ2AQDT+1
ZZ2AQDTY EQU   ZZ2AQDT
ZZ2AQDT0 EQU   ZZ2AQDT
ZZ2AQDLB EQU   ZZ2AQD+9
ZZ2AQDOB EQU   ZZ2AQD+8
ZZ2AQDLE EQU   ZZ2AQD+4
ZZ2AQDOF EQU   ZZ2AQD
ZZ2AQD00 EQU   ZZ2AQD
ZZ2AQAS9 EQU   ZZ2AQAS+16
@NM00030 EQU   ZZ2AQAS+12
ZZ2AQAS2 EQU   ZZ2AQAS+8
ZZ2AQAS1 EQU   ZZ2AQAS+4
@NM00029 EQU   ZZ2AQAS+2
ZZ2AQAST EQU   ZZ2AQAS
ZZ2AQAS0 EQU   ZZ2AQAS
ZZ2AZZ6P EQU   ZZ2A+140
ZZ2ADPTA EQU   ZZ2ADPT
ZZ2ADPL  EQU   ZZ2ADP
ZZ2ADMTA EQU   ZZ2ADMT
ZZ2ADML  EQU   ZZ2ADM
ZZ2ADDTA EQU   ZZ2ADDT
ZZ2ADDL  EQU   ZZ2ADD
@NM00028 EQU   ZZ2A+72
ZZ2APIDB EQU   ZZ2APID+3
ZZ2APIDA EQU   ZZ2APID
@NM00027 EQU   ZZ2A+24
@NM00026 EQU   ZZ2AF+5
ZZ2AFX   EQU   ZZ2AF+5
@NM00025 EQU   ZZ2AF+3
ZZ2AFS   EQU   ZZ2AF+2
ZZ2AFD   EQU   ZZ2AF+2
ZZ2AFQ   EQU   ZZ2AF+2
ZZ2AF$   EQU   ZZ2AF+2
@NM00024 EQU   ZZ2AF+2
ZZ2AFM   EQU   ZZ2AF+2
@NM00023 EQU   ZZ2AF+2
@NM00022 EQU   ZZ2AF+1
ZZ2AFV   EQU   ZZ2AF+1
@NM00021 EQU   ZZ2AF+1
ZZ2AFC   EQU   ZZ2AF+1
@NM00020 EQU   ZZ2AF
ZZ2AFFS  EQU   ZZ2AF
ZZ2AFT   EQU   ZZ2AF
ZZ2AFP   EQU   ZZ2AF
@NM00019 EQU   ZZ2A+8
ZZ2ALINE EQU   ZZ2A+4
@NM00018 EQU   ZZ2A+3
ZZ2ASE   EQU   ZZ2A+2
ZZ2ACH   EQU   ZZ2A
@NM00017 EQU   ZZ2+264
@NM00016 EQU   ZZ2+263
ZZ2PRTT0 EQU   ZZ2PRTT
ZZ2PRTO  EQU   ZZ2PRT+2
ZZ2PRTL  EQU   ZZ2PRT
@NM00015 EQU   ZZ2AMD+56
ZZ2AMDXP EQU   ZZ2AMD+52
ZZ2AMDD  EQU   ZZ2AMD+48
ZZ2AMDL  EQU   ZZ2AMD+44
ZZ2AMDU  EQU   ZZ2AMD+28
ZZ2AMDF  EQU   ZZ2AMD+24
ZZ2AMDS  EQU   ZZ2AMD+20
ZZ2AMDC  EQU   ZZ2AMD+16
ZZ2AMDP  EQU   ZZ2AMD+12
ZZ2AMDB  EQU   ZZ2AMD+8
@NM00014 EQU   @NM00013
ZZ2AMD2  EQU   @NM00013
ZZ2AMD1  EQU   @NM00013
ZZ2AMD0  EQU   ZZ2AMD+6
ZZ2AMDA  EQU   ZZ2AMD+4
ZZ2AMDT  EQU   ZZ2AMD
ZZ199999 EQU   ZZ1+3072
@NM00012 EQU   ZZ1+2160
ZZ1TRTAS EQU   ZZ1+1904
ZZ1TRUPC EQU   ZZ1+1648
ZZ1TRCTX EQU   ZZ1+1392
ZZ1NASID EQU   ZZ1N+274
ZZ1NSTRL EQU   ZZ1N+272
ZZ1NOFF  EQU   ZZ1N+268
ZZ1NBDY  EQU   ZZ1N+264
ZZ1NADE  EQU   ZZ1N+260
ZZ1NADB  EQU   ZZ1N+256
ZZ1NSTR  EQU   ZZ1N
@NM00011 EQU   ZZ1+1080
ZZ1TREBC EQU   ZZ1+824
ZZ1TRHEX EQU   ZZ1+568
@NM00010 EQU   ZZ1+377
ZZ1USTAE EQU   ZZ1+376
@NM00009 EQU   ZZ1F+1
@NM00008 EQU   ZZ1F
ZZ1FM    EQU   ZZ1F
ZZ1FX    EQU   ZZ1F
ZZ1FU    EQU   ZZ1F
ZZ1EVEC  EQU   ZZ1EVE+1
@NM00007 EQU   ZZ1EVE
ZZ1EVEP  EQU   ZZ1EVE
ZZ1EVEW  EQU   ZZ1EVE
ZZ1ACMP  EQU   ZZ1ATTN
@NM00006 EQU   ZZ1+144
ZZ1ZZ6P  EQU   ZZ1+136
@NM00005 EQU   ZZ1+84
ZZ1PCNT  EQU   ZZ1+72
@NM00004 EQU   ZZ1+68
ZZ1TPAGE EQU   ZZ1+64
ZZ1TLINE EQU   ZZ1+60
@NM00003 EQU   ZZ1+48
ZZ1DSDP  EQU   ZZ1+44
ZZ1PDRP  EQU   ZZ1+40
ZZ1ZZ2P  EQU   ZZ1+36
ZZ1327WP EQU   ZZ1+32
ZZ1ACBP  EQU   ZZ1+28
@NM00002 EQU   ZZ1+24
ZZ1PDCBP EQU   ZZ1+20
ZZ1BLRBL EQU   ZZ1+16
@NM00001 EQU   ZZ1+12
ZZ1PNULL EQU   ZZ1+8
ZZ1NULL  EQU   ZZ1+4
ZZ1IDE   EQU   ZZ1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00274 EQU   EXITPRDL
@RF00289 EQU   @RC00286
@ENDDATA EQU   *
         END   BLSDIFP0,(C'PLS1341',0701,78057)
