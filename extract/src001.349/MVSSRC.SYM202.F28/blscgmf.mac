         TITLE 'EP=BLSCGMF -- IPCS DAS BUILD GETMAIN FAIL MESSAGE      *
                        '
*     /* CHANGE ACTIVITY
*    THIS MODULE IS WRITTEN FOR @G57LPSR
BLSCGMF  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'BLSCGMF   78.062'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         BLSCGETF R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(12),0(@01)                                 0002
         EJECT
*                                                                  0025
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE MODULE STATUS                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0025
*   DMCBPTR=ADDR(DMCBPARM);         /* BASE THE DMCB                 */
         L     DMCBPTR,@PC00001                                    0025
*   MODNAME=LMODNMC;                /* INIT THE MODULE NAME          */
         MVC   MODNAME(8),@CC00258                                 0026
*   RETCODE=F0C;                    /* INIT THE MODULE RETURN CODE   */
         SLR   @10,@10                                             0027
         ST    @10,RETCODE                                         0027
*   RCODE=F0C;                      /* INIT THE ABEND REASON CODE    */
*                                                                  0028
         ST    @10,RCODE                                           0028
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD GETMAIN FAIL MESSAGE                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0029
*   RFY                                                            0029
*     MSGDENT BASED(MSGDPTR);       /* BASE THE GETMAIN FAIL MSG MAP */
*   CALL LOCMSGSK;                  /* FIND THE GETMAIN FAIL MSG TXT */
         BAL   @14,LOCMSGSK                                        0030
*   IF RCODE^=F0C THEN              /* TEST FOR BAD MESSAGE SKELETON */
         L     @10,RCODE                                           0031
         LTR   @10,@10                                             0031
         BZ    @RF00031                                            0031
*     DO;                           /* BAD MESSAGE SKELETON - ABEND  */
*       RFY                                                        0033
*         GPR15F RSTD;                                             0033
*       GPR15F=RCODE;               /* SET ABEND REASON CODE         */
         LR    GPR15F,@10                                          0034
*       RFY                                                        0035
*         GPR15F UNRSTD;                                           0035
*       DO;                         /* ABEND(GMFAC) DUMP USER        */
*         RESPECIFY                                                0037
*          (GPR01F) RESTRICTED;                                    0037
*         GPR01F=(GMFAC)&'00000FFF'X;/* COMP CODE IN BITS 20-31      */
         LA    GPR01F,103                                          0038
*         GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG       */
         O     GPR01F,@CF00286                                     0039
*         SVC(13);                  /* ISSUE ABEND SVC               */
         SVC   13                                                  0040
*         RESPECIFY                                                0041
*          (GPR01F) UNRESTRICTED;                                  0041
*       END;                        /* ABEND(GMFAC) DUMP USER UNABLE
*                                      TO ISSUE GETMAIN FAIL MESSAGE */
*     END;                          /* BAD MESSAGE SKELETON - ABEND  */
*   MSGDLN=(MSGSKL+LENGTH(MODNMPAR)+LENGTH(MSGDENT)+F7C)&XDWBDYC;/*
*                                      MESSAGE LENGTH ROUNDED UP TO A
*                                      DOUBLE WORD BOUNDARY          */
@RF00031 LA    MSGDLN,31                                           0044
         SLR   @10,@10                                             0044
         IC    @10,MSGSKL(,MSGSKA)                                 0044
         ALR   MSGDLN,@10                                          0044
         N     MSGDLN,@CF00260                                     0044
*   MSGDPTR=DMCBEOB-MSGDLN;         /* GET SPACE FROM DATA MANAGER 0045
*                                      FREE BLOCK                    */
         L     @10,DMCBEOB(,DMCBPTR)                               0045
         SLR   @10,MSGDLN                                          0045
         ST    @10,MSGDPTR                                         0045
*   IF MSGDPTR<DMCBFRE THEN         /* TEST FOR STORAGE AVAILABLE    */
         CL    @10,DMCBFRE(,DMCBPTR)                               0046
         BNL   @RF00046                                            0046
*     DO;                           /* NO STORAGE AVAILABLE - ABEND  */
*       RFY                                                        0048
*         GPR15F RSTD;                                             0048
*       GPR15F=NSTOR;               /* SET ABEND REASON CODE         */
         LA    GPR15F,60                                           0049
*       RFY                                                        0050
*         GPR15F UNRSTD;                                           0050
*       DO;                         /* ABEND(GMFAC) DUMP USER        */
*         RESPECIFY                                                0052
*          (GPR01F) RESTRICTED;                                    0052
*         GPR01F=(GMFAC)&'00000FFF'X;/* COMP CODE IN BITS 20-31      */
         LA    GPR01F,103                                          0053
*         GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG       */
         O     GPR01F,@CF00286                                     0054
*         SVC(13);                  /* ISSUE ABEND SVC               */
         SVC   13                                                  0055
*         RESPECIFY                                                0056
*          (GPR01F) UNRESTRICTED;                                  0056
*       END;                        /* ABEND(GMFAC) DUMP USER UNABLE
*                                      TO ISSUE GETMAIN FAIL MESSAGE */
*     END;                          /* NO STORAGE AVAILABLE - ABEND  */
*   DMCBEOB=MSGDPTR;                /* MARK STORAGE TAKEN            */
@RF00046 L     @10,MSGDPTR                                         0059
         ST    @10,DMCBEOB(,DMCBPTR)                               0059
*   MSGDSPID=DMCBSPID;              /* SUBPOOL ID FOR FREEMAIN       */
         IC    @02,DMCBSPID(,DMCBPTR)                              0060
         STC   @02,MSGDSPID(,@10)                                  0060
*   MSGDFLEN=MSGDLN;                /* FREEMAIN LENGTH               */
         STCM  MSGDLN,7,MSGDFLEN(@10)                              0061
*   MSGDBAK=MSGDPTR;                /* MESSAGE BACK CHAIN            */
         ST    @10,MSGDBAK(,@10)                                   0062
*   MSGDNXT=F0C;                    /* INIT CHAIN ADDRESS            */
         SLR   @04,@04                                             0063
         ST    @04,MSGDNXT(,@10)                                   0063
*   MSGDLEN=MSGSKL+LENGTH(MODNMPAR)+LENGTH(MSGDMOV);/* SET MSG LEN   */
         SLR   @02,@02                                             0064
         IC    @02,MSGSKL(,MSGSKA)                                 0064
         LA    @15,12                                              0064
         ALR   @15,@02                                             0064
         STH   @15,MSGDLEN(,@10)                                   0064
*   MSGDPAD=F0C;                    /* ZERO THE PAD                  */
         STH   @04,MSGDPAD(,@10)                                   0065
*   MSGDTXT(F1C:MSGSKL)=MSGSKT(F1C:MSGSKL);/* MOVE IN MSG TEXT       */
         LR    @04,@02                                             0066
         BCTR  @04,0                                               0066
         EX    @04,@SM00305                                        0066
*   MSGDTXT(MSGSKL+F1C:MSGSKL+LENGTH(MODNMPAR))=MODNMPAR;/* APPEND 0067
*                                      MODULE NAME                   */
         ALR   @02,@10                                             0067
         L     @04,@PC00001+8                                      0067
         MVC   MSGDTXT(8,@02),MODNMPAR(@04)                        0067
*   MSGDPTR=MSGDPTR+LENGTH(MSGDPRF);/* BUMP MESSAGE BASE FOR HOOK    */
         AL    @10,@CF00041                                        0068
         ST    @10,MSGDPTR                                         0068
*   CALL BLSCHOK(DMCB,MSGANCHR,MSGDPTR);/* HOOK GETMAIN FAIL MESSAGE
*                                      TO MESSAGE CHAIN OR ANCHOR    */
         ST    DMCBPTR,@AL00001                                    0069
         L     @10,@PC00001+4                                      0069
         ST    @10,@AL00001+4                                      0069
         LA    @10,MSGDPTR                                         0069
         ST    @10,@AL00001+8                                      0069
         L     @15,@CV00224                                        0069
         LA    @01,@AL00001                                        0069
         BALR  @14,@15                                             0069
*   RETURN CODE(RETCODE);                                          0070
         L     @10,RETCODE                                         0070
         L     @13,4(,@13)                                         0070
         L     @00,@SIZDATD                                        0070
         LR    @01,@11                                             0070
         BLSCFREF R,LV=(0),A=(1)
         LR    @15,@10                                             0070
         L     @14,12(,@13)                                        0070
         LM    @00,@12,20(@13)                                     0070
         BR    @14                                                 0070
         EJECT
*                                                                  0071
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCATE THE MESSAGE SKELETON IN THE MESSAGE CSECT GIVEN THE    */
*   /* MESSAGE NUMBER AS THE KEY. --NOTE-- THE STRUCTURE OF THE      */
*   /* MESSAGE CSECT IS DESCRIBED IN THE PROLOG OF THE BLSDMSGG      */
*   /* MACRO.                                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0071
*LOCMSGSK:                                                         0071
*   PROCEDURE;                                                     0071
@EL00001 L     @13,4(,@13)                                         0071
@EF00001 L     @00,@SIZDATD                                        0071
         LR    @01,@11                                             0071
         BLSCFREF R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0071
         BR    @14                                                 0071
LOCMSGSK STM   @14,@02,12(@13)                                     0071
         STM   @04,@12,36(@13)                                     0071
*   SCTPTR=F0C;                     /* INIT POINTERS                 */
         SLR   SCTPTR,SCTPTR                                       0072
*   SSCTPTR=F0C;                                                   0073
         SLR   SSCTPTR,SSCTPTR                                     0073
*   MSGSKA=F0C;                                                    0074
         SLR   MSGSKA,MSGSKA                                       0074
*   TEMP=MSGNO/COMPC;               /* ISOLATE THE COMPONENT CROSS 0075
*                                      REFERENCE TABLE INDEX         */
         LA    TEMP,3                                              0075
*   IF TEMP>NCCRIT                  /* IF THIS INDEX IS GREATER THAN
*                                      THE NUMBER OF ENTRIES IN THE
*                                      TABLE, THEN SET THE REASON  0076
*                                      CODE.                         */
*     THEN                                                         0076
         L     @10,DMCBMSGS(,DMCBPTR)                              0076
         L     @10,CCRITPTR(,@10)                                  0076
         C     TEMP,NCCRIT(,@10)                                   0076
         BNH   @RF00076                                            0076
*     RCODE=NCTE;                                                  0077
         MVC   RCODE(4),@CF00253                                   0077
*   ELSE                                                           0078
*     DO;                                                          0078
         B     @RC00076                                            0078
@RF00076 DS    0H                                                  0079
*       SCTPTR=SCTP(TEMP+F1C);      /* GET THE ADDRESS OF THE      0079
*                                      SUBCOMPONENT CROSS REFERENCE
*                                      TABLE.                        */
         LR    @10,TEMP                                            0079
         SLA   @10,2                                               0079
         L     @04,DMCBMSGS(,DMCBPTR)                              0079
         L     @04,CCRITPTR(,@04)                                  0079
         L     SCTPTR,SCTP(@10,@04)                                0079
*       IF SCTPTR=F0C               /* IF THIS ADDRESS IS ZERO, THEN
*                                      THE NEEDED SUBCOMPONENT CROSS
*                                      REFERENCE TABLE DOES NOT    0080
*                                      EXIST. SET THE REASON CODE FOR
*                                      THIS SITUATION.               */
*         THEN                                                     0080
         LTR   SCTPTR,SCTPTR                                       0080
         BNZ   @RF00080                                            0080
*         RCODE=ZCTE;                                              0081
         MVC   RCODE(4),@CF00210                                   0081
*     END;                                                         0082
@RF00080 DS    0H                                                  0083
*   IF RCODE=F0C                    /* IF NO ERROR HAS OCCURRED, THEN
*                                      ...                           */
*     THEN                                                         0083
@RC00076 L     @10,RCODE                                           0083
         LTR   @10,@10                                             0083
         BNZ   @RF00083                                            0083
*     DO;                                                          0084
*       TEMP=MSGNO//COMPC;          /* ISOLATE THE SUBCOMPONENT CROSS
*                                      REFERENCE TABLE INDEX FROM THE
*                                      INPUT MESSAGE NUMBER (THE   0085
*                                      HUNDREDS DIGIT).              */
         LA    TEMP,109                                            0085
*       TEMP1=TEMP/SCOMPC;                                         0086
         LR    @00,TEMP                                            0086
         SRDA  @00,32                                              0086
         D     @00,@CF00264                                        0086
         LR    TEMP1,@01                                           0086
*       IF TEMP1>NSCT               /* IF THE SUBCOMPONENT CROSS   0087
*                                      REFERENCE TABLE INDEX IS    0087
*                                      GREATER THAN THE NUMBER OF  0087
*                                      ENTRIES IN THE TABLE, THEN  0087
*                                      THEN SET THE REASON CODE TO 0087
*                                      INDICATE THIS FACT.           */
*         THEN                                                     0087
         C     TEMP1,NSCT(,SCTPTR)                                 0087
         BNH   @RF00087                                            0087
*         RCODE=NSCTE;                                             0088
         MVC   RCODE(4),@CF00270                                   0088
*       ELSE                                                       0089
*         DO;                                                      0089
         B     @RC00087                                            0089
@RF00087 DS    0H                                                  0090
*           SSCTPTR=SSCTP(TEMP1+F1C);/* OTHERWISE, GET THE ADDRESS OF
*                                      THE SUB-SUBCOMPONENT CROSS  0090
*                                      REFERENCE TABLE.              */
         LR    @10,TEMP1                                           0090
         SLA   @10,2                                               0090
         L     SSCTPTR,SSCTP(@10,SCTPTR)                           0090
*           IF SSCTPTR=F0C          /* IF THE ADDRESS OF THE       0091
*                                      SUB-SUBCOMPONENT CROSS      0091
*                                      REFERENCE TABLE IS ZERO, THEN
*                                      THIS TABLE DOES NOT EXIST. SET
*                                      THE REASON CODE TO INDICATE 0091
*                                      THIS SITUATION.               */
*             THEN                                                 0091
         LTR   SSCTPTR,SSCTPTR                                     0091
         BNZ   @RF00091                                            0091
*             RCODE=ZSCTE;                                         0092
         MVC   RCODE(4),@CF00090                                   0092
*         END;                                                     0093
@RF00091 DS    0H                                                  0094
*     END;                                                         0094
@RC00087 DS    0H                                                  0095
*   IF RCODE=F0C                    /* IF NO ERRORS HAVE OCCURRED, 0095
*                                      THEN...                       */
*     THEN                                                         0095
@RF00083 L     @10,RCODE                                           0095
         LTR   @10,@10                                             0095
         BNZ   @RF00095                                            0095
*     DO;                                                          0096
*       TEMP1=TEMP//SCOMPC;         /* EXTRACT THE SUB-SUBCOMPONENT
*                                      CROSS REFERENCE TABLE INDEX 0097
*                                      FROM THE INPUT MESSAGE NUMBER
*                                      (THE LAST TWO DIGITS).        */
         LR    @00,TEMP                                            0097
         SRDA  @00,32                                              0097
         D     @00,@CF00264                                        0097
         LR    TEMP1,@00                                           0097
*       IF TEMP1>NSSCT              /* IF THIS INDEX IS GREATER THAN
*                                      THE NUMBER OF ENTRIES IN THE
*                                      TABLE, THEN SET THE REASON  0098
*                                      CODE TO INDICATE THIS FACT.   */
*         THEN                                                     0098
         C     TEMP1,NSSCT(,SSCTPTR)                               0098
         BNH   @RF00098                                            0098
*         RCODE=NSSCTE;                                            0099
         MVC   RCODE(4),@CF00273                                   0099
*       ELSE                                                       0100
*         DO;                                                      0100
         B     @RC00098                                            0100
@RF00098 DS    0H                                                  0101
*           MSGSKA=MSGP(TEMP1+F1C); /* OTHERWISE, OBTAIN THE ADDRESS
*                                      OF THE MESSAGE SKELETON FROM
*                                      THE SUB-SUBCOMPONENT CROSS  0101
*                                      REFERENCE TABLE.              */
         LR    @10,TEMP1                                           0101
         SLA   @10,2                                               0101
         L     MSGSKA,MSGP(@10,SSCTPTR)                            0101
*           IF MSGSKA=F0C           /* IF THIS ADDRESS IS ZERO, THE
*                                      THE REQUESTED MESSAGE DOES NOT
*                                      EXIST. SET THE REASON CODE TO
*                                      INDICATE THIS SITUATION.      */
*             THEN                                                 0102
         LTR   MSGSKA,MSGSKA                                       0102
         BNZ   @RF00102                                            0102
*             RCODE=ZSSCTE;                                        0103
         MVC   RCODE(4),@CF00275                                   0103
*           ELSE                                                   0104
*             IF MSGSKNIN^=F0C      /* VALIDATE MESSAGE FORMAT FOR NO
*                                      INSERTS                       */
*               THEN                                               0104
         B     @RC00102                                            0104
@RF00102 LH    @10,MSGSKNIN(,MSGSKA)                               0104
         LTR   @10,@10                                             0104
         BZ    @RF00104                                            0104
*               RCODE=NINSE;        /* MARK INSERTS PRESENT          */
         MVC   RCODE(4),@CF00279                                   0105
*         END;                                                     0106
*     END;                                                         0107
*   END LOCMSGSK;                   /* RETURN THE ADDRESS OF THE   0108
*                                      MESSAGE SKELETON OR A REASON
*                                      CODE TO THE MAINLINE.         */
@EL00002 DS    0H                                                  0108
@EF00002 DS    0H                                                  0108
@ER00002 LM    @14,@02,12(@13)                                     0108
         LM    @04,@12,36(@13)                                     0108
         BR    @14                                                 0108
*                                                                  0109
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE STATEMENTS END                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0109
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR01F FIXED(31) REG(1),                                     0109
*     GPR15F FIXED(31) REG(15);                                    0109
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0110
*     I031F FIXED(31) BASED,                                       0110
*     I031P PTR(31) BASED,                                         0110
*     I015F FIXED(15) BASED,                                       0110
*     I015P PTR(15) BASED,                                         0110
*     I008P PTR(8) BASED,                                          0110
*     I001C CHAR(1) BASED;                                         0110
*   DCL                                                            0111
*     1 DASPATCH LOCAL BDY(DWORD),  /* PATCH AREA                    */
*      2 DASPATA(DASPATLN) PTR INIT((DASPATLN)0);                  0111
*   END BLSCGMF                                                    0112
*                                                                  0112
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (BLSDMSGD)                                       */
*                                                                  0112
*       ;                                                          0112
@DATA    DS    0H
@SM00305 MVC   MSGDTXT(0,@10),MSGSKT(MSGSKA)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@AL00001 DS    3A
BLSCGMF  CSECT
         DS    0F
@CF00041 DC    F'8'
@CF00253 DC    F'20'
@CF00210 DC    F'24'
@CF00270 DC    F'28'
@CF00090 DC    F'32'
@CF00273 DC    F'36'
@CF00275 DC    F'40'
@CF00279 DC    F'64'
@CF00264 DC    F'100'
@CF00260 DC    XL4'FFFFFFF8'
@CF00286 DC    XL4'80000000'
@DATD    DSECT
         DS    0D
MSGDPTR  DS    A
MODSTAT  DS    CL16
         ORG   MODSTAT
MODNAME  DS    CL8
RETCODE  DS    FL4
RCODE    DS    FL4
         ORG   MODSTAT+16
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSCGMF  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00224 DC    V(BLSCHOK)
         DS    0D
@CC00258 DC    C'BLSCGMF '
DASPATCH DS    CL80
         ORG   DASPATCH
DASPATA  DC    20A(0)
         ORG   DASPATCH+80
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
TEMP1    EQU   @04
TEMP     EQU   @02
MSGDLN   EQU   @04
MSGSKA   EQU   @03
SSCTPTR  EQU   @07
SCTPTR   EQU   @06
DMCBPTR  EQU   @05
GPR15F   EQU   @15
GPR01F   EQU   @01
DMCB     EQU   0
DMCBFTY  EQU   DMCB+20
DMCBOPN  EQU   DMCB+21
DMCBRMOD EQU   DMCB+23
DMCBOUT  EQU   DMCBRMOD
DMCBOPTS EQU   DMCB+24
DMCBGKY  EQU   DMCBOPTS
DMCBMFLG EQU   DMCB+28
DMCBBUFP EQU   DMCB+32
DMCBKEYP EQU   DMCB+44
DMCBRI   EQU   DMCB+64
DMCBMSGS EQU   DMCB+72
DMCBSPID EQU   DMCB+84
DMCBFRE  EQU   DMCB+88
DMCBEOB  EQU   DMCB+92
DMCBACBE EQU   DMCB+124
DMCBSPEC EQU   DMCB+380
DMCBAMS  EQU   DMCB+416
DMCBAUDT EQU   DMCB+568
DMCBLSCP EQU   DMCBAUDT+16
MSGDENT  EQU   0
MSGDPRF  EQU   MSGDENT
MSGDSPID EQU   MSGDPRF
MSGDFLEN EQU   MSGDPRF+1
MSGDBAK  EQU   MSGDPRF+4
MSGDWRT  EQU   MSGDENT+8
MSGDNXT  EQU   MSGDWRT
MSGDMOV  EQU   MSGDWRT+4
MSGDLEN  EQU   MSGDMOV
MSGDPAD  EQU   MSGDMOV+2
MSGDTXT  EQU   MSGDMOV+4
MSGWENT  EQU   0
MSGWMOV  EQU   MSGWENT+4
CCRITPTR EQU   0
CCRIT    EQU   0
NCCRIT   EQU   CCRIT
SCTP     EQU   CCRIT+4
SCT      EQU   0
NSCT     EQU   SCT
SSCTP    EQU   SCT+4
SSCT     EQU   0
NSSCT    EQU   SSCT
MSGP     EQU   SSCT+4
MSGSK    EQU   0
MSGSKNIN EQU   MSGSK
MSGSKL   EQU   MSGSK+2
MSGSKT   EQU   MSGSK+3
BLSDMSGS EQU   0
DMCBDMGR EQU   0
DMCBRQC  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
DMCBPARM EQU   0
MSGANCHR EQU   0
MODNMPAR EQU   0
DMCBVSM  EQU   DMCBAMS
DMCBQSM  EQU   DMCBAMS
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
DMCBRES7 EQU   DMCBQSM+96
DMCBDCB  EQU   DMCBQSM
DMCBACB  EQU   DMCBVSM+76
DMCBRPL  EQU   DMCBVSM
MSGWTXT  EQU   MSGWMOV+4
MSGWPAD  EQU   MSGWMOV+2
MSGWLEN  EQU   MSGWMOV
MSGWNXT  EQU   MSGWENT
DMCBWRK  EQU   DMCB+648
DMCBRES8 EQU   DMCB+640
DMCBMODN EQU   DMCB+632
DMCBCARY EQU   DMCBAUDT+20
DMCBCLC  EQU   DMCBAUDT+12
DMCBOPC  EQU   DMCBAUDT+8
DMCBFRC  EQU   DMCBAUDT+4
DMCBALC  EQU   DMCBAUDT
DMCBFR   EQU   DMCB+412
DMCBRES6 EQU   DMCB+410
DMCBIRSC EQU   DMCB+408
DMCBSUBC EQU   DMCB+404
DMCBDRBP EQU   DMCB+400
DMCBRSZM EQU   DMCB+398
DMCBRSZA EQU   DMCB+396
DMCBCISZ EQU   DMCB+394
DMCBDCBL EQU   DMCB+392
DMCBDCLR EQU   DMCB+390
DMCBDCFM EQU   DMCB+389
DMCBRES5 EQU   DMCB+388
DMCBLBRT EQU   DMCB+386
DMCBLBSQ EQU   DMCB+384
DMCBLBPS EQU   DMCB+383
DMCBLBTY EQU   DMCB+382
DMCBRES4 EQU   DMCB+381
DMCBSPRS EQU   DMCBSPEC
DMCBSPRN EQU   DMCBSPEC
DMCBSPCT EQU   DMCBSPEC
DMCBSPRL EQU   DMCBSPEC
DMCBSPSE EQU   DMCB+376
DMCBSPPR EQU   DMCB+372
DMCBSPTY EQU   DMCB+369
DMCBODIS EQU   DMCB+368
DMCBDISP EQU   DMCB+367
DMCBSTAT EQU   DMCB+366
DMCBRES3 EQU   DMCB+364
DMCBMEMB EQU   DMCB+356
DMCBMODL EQU   DMCB+348
DMCBRES9 EQU   DMCB+340
DMCBPID  EQU   DMCB+332
DMCBTYPE EQU   DMCB+328
DMCBDSN  EQU   DMCB+284
DMCBUNIT EQU   DMCB+276
DMCBDSOR EQU   DMCB+274
DMCBVOL  EQU   DMCB+268
DMCBDDNM EQU   DMCB+260
DMCBSYNM EQU   DMCB+132
DMCBRPLF EQU   DMCB+128
DMCBDCBE EQU   DMCBACBE
DMCBARC  EQU   DMCB+120
DMCBCPC  EQU   DMCB+116
DMCBRET  EQU   DMCB+112
DMCBSTL  EQU   DMCB+96
DMCBRES2 EQU   DMCB+85
DMCBRESC EQU   DMCB+80
DMCBZZ1P EQU   DMCB+76
DMCBMSG0 EQU   DMCB+68
DMCBRRL  EQU   DMCB+60
DMCBRBA  EQU   DMCB+56
DMCBMSG  EQU   DMCB+52
DMCBKEYL EQU   DMCB+48
DMCBKPC  EQU   DMCBKEYP
DMCBORL  EQU   DMCB+40
DMCBBLEN EQU   DMCB+36
DMCBBFPC EQU   DMCBBUFP
DMCBRES1 EQU   DMCB+31
DMCBACCM EQU   DMCB+30
DMCBREJ  EQU   DMCB+29
DMCBRESB EQU   DMCBMFLG
DMCBFMOD EQU   DMCBMFLG
DMCBLOPT EQU   DMCB+27
DMCBLRM  EQU   DMCB+26
DMCBLRQ  EQU   DMCB+25
DMCBOPRS EQU   DMCBOPTS
DMCBLRD  EQU   DMCBOPTS
DMCBBWD  EQU   DMCBOPTS
DMCBUPD  EQU   DMCBOPTS
DMCBAPX  EQU   DMCBOPTS
DMCBRNO  EQU   DMCBGKY
DMCBKYD  EQU   DMCBOPTS
DMCBRMRS EQU   DMCBRMOD
DMCBRM5  EQU   DMCBRMOD
DMCBRM6  EQU   DMCBRMOD
DMCBTMP  EQU   DMCBOUT
DMCBRQST EQU   DMCB+22
DMCBRESA EQU   DMCBOPN
DMCBSOUT EQU   DMCBOPN
DMCBSIN  EQU   DMCBOPN
DMCBVSF  EQU   DMCBFTY
DMCBKSF  EQU   DMCBFTY
DMCBFTRS EQU   DMCBFTY
DMCBSHF  EQU   DMCBFTY
DMCBIRL  EQU   DMCB+16
DMCBRTC  EQU   DMCB+12
DMCBTVP  EQU   DMCB+8
DMCBNEXT EQU   DMCB+4
DMCBID   EQU   DMCB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00095 EQU   @EL00002
@RC00098 EQU   @EL00002
@RF00104 EQU   @EL00002
@RC00102 EQU   @EL00002
@ENDDATA EQU   *
         END   BLSCGMF,(C'PLS1925',0701,78062)
