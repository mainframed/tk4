         TITLE 'EP=BLSCAMER -- MERGE ALLOCATION MODEL OVERRIDES WITH MO*
               ODEL     '
*     /* CHANGE ACTIVITY
*    THIS MODULE IS WRITTEN FOR @G57LPSR
BLSCAMER CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'BLSCAMER  78.062'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         BLSCGETS R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
*   DMCBPTR=GPR01P;                 /* BASE THE DMCB AND DMAL        */
         LR    DMCBPTR,GPR01P                                      0055
*   RFY                                                            0056
*     GPR01P UNRSTD;                                               0056
*   MODNAME=LMODNMC;                                               0057
         MVC   MODNAME(8),@CC00601                                 0057
*   RETCODE=F0C;                                                   0058
         SLR   @10,@10                                             0058
         ST    @10,RETCODE                                         0058
*   SUBCODE=F0C;                                                   0059
         ST    @10,SUBCODE                                         0059
*   S99TUFP=F0C;                    /* INIT THE TEXT UNIT MULTIPLE 0060
*                                      ENTRY BASE (UNUSED VARIABLE)  */
         SLR   S99TUFP,S99TUFP                                     0060
*   MODELPTR=DMALMODP;              /* ADDRESS OF THE ALLOCATION   0061
*                                      MODEL                         */
         L     MODELPTR,DMALMODP(,DMCBPTR)                         0061
*   IF MODELNAM^=MMNAME THEN        /* TEST FOR AN INVALID MODEL NAME
*                                      POINTER                       */
         L     @07,DMALMODA(,DMCBPTR)                              0062
         CLC   MODELNAM(8,@07),MMNAME(MODELPTR)                    0062
         BE    @RF00062                                            0062
*     DO;                           /* INVALID MODEL NAME POINTER    */
*       DO;                         /* BLSDMSG                     0064
*                                      (ZZ2,F3105C,DMCBMSG,BLSDMSGS)
*                                      INSERT(DMCBMODL)              */
*         IOPTLIST(1)=0;            /* LAST INSERT                   */
         ST    @10,IOPTLIST                                        0065
*         IOPTLIST(2)=ADDR(DMCBMODL);/* INSERT NAME POINTER          */
         LA    @02,DMCBMODL(,DMCBPTR)                              0066
         ST    @02,IOPTLIST+4                                      0066
*         IOPTLIST(3)=0;            /* ZERO RESERVED FIELD           */
         ST    @10,IOPTLIST+8                                      0067
*         RFY                                                      0068
*           I015F BASED(ADDR(IOPTLIST(3)));/* ACCESS BYTES 1-2       */
*         I015F=LENGTH(DMCBMODL);   /* INSERT LENGTH                 */
         LA    @10,IOPTLIST+8                                      0069
         MVC   I015F(2,@10),@CH00044                               0069
*         CALL BLSDMSG0(ZZ2,F3105C,DMCBMSG,BLSDMSGS,'00000000'B,ADDR(
*             IOPTLIST));           /* BUILD MESSAGE                 */
         L     @10,DMCBTVP(,DMCBPTR)                               0070
         ST    @10,@AL00001                                        0070
         LA    @10,@CF00585                                        0070
         ST    @10,@AL00001+4                                      0070
         LA    @10,DMCBMSG(,DMCBPTR)                               0070
         ST    @10,@AL00001+8                                      0070
         L     @10,DMCBMSGS(,DMCBPTR)                              0070
         ST    @10,@AL00001+12                                     0070
         LA    @10,@CB00610                                        0070
         ST    @10,@AL00001+16                                     0070
         LA    @10,IOPTLIST                                        0070
         ST    @10,@AFTEMPS                                        0070
         LA    @10,@AFTEMPS                                        0070
         ST    @10,@AL00001+20                                     0070
         L     @15,DMCBMSG0(,DMCBPTR)                              0070
         LA    @01,@AL00001                                        0070
         BALR  @14,@15                                             0070
*       END;                        /* BLSDMSG                     0071
*                                      (ZZ2,F3105C,DMCBMSG,BLSDMSGS)
*                                      INSERT(DMCBMODL) BUILD INVALID
*                                      MODEL NAME MESSAGE            */
*       RETCODE=ERROR;              /* NOTIFY CALLER                 */
         MVC   RETCODE(4),@CF00044                                 0072
*     END;                          /* INVALID MODEL NAME POINTER    */
*   ELSE                                                           0074
*     DO;                           /* VALID MODEL NAME POINTER      */
*                                                                  0074
         B     @RC00062                                            0074
@RF00062 DS    0H                                                  0075
*       /*************************************************************/
*       /*                                                           */
*       /* MERGE THE OVERRIDE ENTRIES WITH THE MODEL ENTRIES GIVING  */
*       /* PRIORITY TO THE OVERRIDE ENTRIES                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0075
*       S99TUPLM=DMALTUPM;          /* LAST USED TEXT UNIT POINTER 0075
*                                      INDEX                         */
         L     @09,DMALTUPM(,DMCBPTR)                              0075
         LR    S99TUPLM,@09                                        0075
*       S99TUPLX=DMALTUPM+F1C;      /* INIT THE S99 TEXT UNIT POINTER
*                                      LIST INDEX                    */
         LA    @07,1                                               0076
         ALR   @09,@07                                             0076
         LR    S99TUPLX,@09                                        0076
*       S99TUBAS=DMALTUBS;          /* START OF TEXT UNIT FREE SPACE */
         L     S99TUBAS,DMALTUBS(,DMCBPTR)                         0077
*       MMTUPLX=F1C;                /* INIT THE MM TEXT UNIT POINTER
*                                      LIST INDEX                    */
         LR    MMTUPLX,@07                                         0078
*       MMSW=F0C;                   /* INIT THE MODEL LIST END SWITCH*/
         SLR   MMSW,MMSW                                           0079
*       DO WHILE MMSW=F0C;          /* PROCESS MODEL TEXT UNITS      */
         B     @DE00080                                            0080
@DL00080 DS    0H                                                  0081
*         MMTUP=MMTUPTR(MMTUPLX);   /* LOCAL COPY OF CURRENT MODEL TU
*                                      PTR                           */
         LR    @09,MMTUPLX                                         0081
         SLA   @09,2                                               0081
         L     @01,MMDYRBP(,MODELPTR)                              0081
         L     @01,MMTXTPP(,@01)                                   0081
         AL    @01,@CF00674                                        0081
         L     @09,MMTUPTR(@09,@01)                                0081
         ST    @09,MMTUP                                           0081
*         MMOP=MMTUKEY;             /* CURRENT MODEL TEXT UNIT KEY   */
         SLR   MMOP,MMOP                                           0082
         ICM   MMOP,3,MMTUKEY(@09)                                 0082
*         IF MMOP<F0C×MMOP>=DALMSVGP THEN/* TEST FOR VALID KEY       */
         LTR   MMOP,MMOP                                           0083
         BM    @RT00083                                            0083
         C     MMOP,@CF00542                                       0083
         BL    @RF00083                                            0083
@RT00083 DS    0H                                                  0084
*           DO;                     /* INVALID ALLOCATION MODEL TEXT
*                                      UNIT KEY                      */
*             CHSTR867=MMOP;        /* GET MODEL TEXT UNIT KEY FIELD */
         STCM  MMOP,3,CHSTR867                                     0085
*             CHSTR88=LHEX0FC;      /* TRANSLATE IT TO PRINTABLE HEX */
         MVI   CHSTR88,X'0F'                                       0086
*             UNPK(CTEMP,CHSTR8);                                  0087
         UNPK  CTEMP(9),CHSTR8(8)                                  0087
*             TR(CTEMP,HEXTBL);                                    0088
         TR    CTEMP(9),HEXTBL                                     0088
*             DO;                   /* BLSDMSG                     0089
*                                      (ZZ2,F3113C,DMCBMSG,BLSDMSGS)
*                                      INSERT(DMCBMODL,CTEMP54)      */
*               IOPTLIST(1)=ADDR(IOPTLIST(4));/* CHAIN TO NEXT INSERT*/
         LA    @09,IOPTLIST+12                                     0090
         ST    @09,IOPTLIST                                        0090
*               IOPTLIST(2)=ADDR(DMCBMODL);/* INSERT NAME POINTER    */
         LA    @09,DMCBMODL(,DMCBPTR)                              0091
         ST    @09,IOPTLIST+4                                      0091
*               IOPTLIST(3)=0;      /* ZERO RESERVED FIELD           */
         SLR   @09,@09                                             0092
         ST    @09,IOPTLIST+8                                      0092
*               RFY                                                0093
*                 I015F BASED(ADDR(IOPTLIST(3)));/* ACCESS BYTES 1-2 */
*               I015F=LENGTH(DMCBMODL);/* INSERT LENGTH              */
         LA    @07,IOPTLIST+8                                      0094
         MVC   I015F(2,@07),@CH00044                               0094
*               IOPTLIST(4)=0;      /* LAST INSERT                   */
         ST    @09,IOPTLIST+12                                     0095
*               IOPTLIST(5)=ADDR(CTEMP54);/* INSERT NAME POINTER     */
         LA    @07,CTEMP54                                         0096
         ST    @07,IOPTLIST+16                                     0096
*               IOPTLIST(6)=0;      /* ZERO RESERVED FIELD           */
         ST    @09,IOPTLIST+20                                     0097
*               RFY                                                0098
*                 I015F BASED(ADDR(IOPTLIST(6)));/* ACCESS BYTES 1-2 */
*               I015F=LENGTH(CTEMP54);/* INSERT LENGTH               */
         LA    @09,IOPTLIST+20                                     0099
         MVC   I015F(2,@09),@CH00037                               0099
*               CALL BLSDMSG0(ZZ2,F3113C,DMCBMSG,BLSDMSGS,'00000000'B,
*                   ADDR(IOPTLIST));/* BUILD MESSAGE                 */
         L     @09,DMCBTVP(,DMCBPTR)                               0100
         ST    @09,@AL00001                                        0100
         LA    @09,@CF00591                                        0100
         ST    @09,@AL00001+4                                      0100
         LA    @09,DMCBMSG(,DMCBPTR)                               0100
         ST    @09,@AL00001+8                                      0100
         L     @09,DMCBMSGS(,DMCBPTR)                              0100
         ST    @09,@AL00001+12                                     0100
         LA    @09,@CB00610                                        0100
         ST    @09,@AL00001+16                                     0100
         LA    @09,IOPTLIST                                        0100
         ST    @09,@AFTEMPS                                        0100
         LA    @09,@AFTEMPS                                        0100
         ST    @09,@AL00001+20                                     0100
         L     @15,DMCBMSG0(,DMCBPTR)                              0100
         LA    @01,@AL00001                                        0100
         BALR  @14,@15                                             0100
*             END;                  /* BLSDMSG                     0101
*                                      (ZZ2,F3113C,DMCBMSG,BLSDMSGS)
*                                      INSERT(DMCBMODL,CTEMP54) BUILD
*                                      INVALID MODEL TEXT UNIT KEY 0101
*                                      MESSAGE                       */
*             MMSW=F1C;             /* SET LIST END SWITCH           */
         LA    MMSW,1                                              0102
*             RETCODE=ERROR;        /* NOTIFY CALLER                 */
         MVC   RETCODE(4),@CF00044                                 0103
*           END;                    /* INVALID ALLOCATION MODEL TEXT
*                                      UNIT KEY                      */
*         ELSE                                                     0105
*           DO;                     /* VALID ALLOCATION MODEL TEXT 0105
*                                      UNIT KEY                      */
         B     @RC00083                                            0105
@RF00083 DS    0H                                                  0106
*DSNAL:                                                            0106
*             DO;                   /* DSNAL:CASE(MMOP)NAMES(ZKY,ZKY,
*                                      ZKY,ZKY,ZKY,ZKY,TRKC,CYLC,BLKL
*                                      NC,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY
*                                      ,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,S
*                                      YSOUC,SYSOUC,SYSOUC,SYSOUC,ZKY
*                                      ,SYSOUC,ZKY,ZKY,ZKY,ZKY,ZKY,RE
*                                      TPDC,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,Z
*                                      KY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY
*                                      ,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,Z
*                                      KY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY
*                                      ,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,Z
*                                      KY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY
*                                      ,PASSWC,ZKY,ZKY,ZKY,ZKY,ZKY,ZK
*                                      Y,ZKY,SYSOUC,SYSOUC,ZKY,ZKY,ZK
*                                      Y,ZKY,ZKY)                    */
DSNAL    DS    0H                                                  0107
*               DCL                                                0107
*                 CL0001@ LABEL BASED(CP0001@(MMOP)) VALUERANGE(ZKY,ZKY
*                     ,ZKY,ZKY,ZKY,ZKY,TRKC,CYLC,BLKLNC,ZKY,ZKY,ZKY,ZKY
*                     ,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,SYSOUC,
*                     SYSOUC,SYSOUC,SYSOUC,ZKY,SYSOUC,ZKY,ZKY,ZKY,ZKY,
*                     ZKY,RETPDC,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,
*                     ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,
*                     ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,
*                     ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY, 0107
*                     PASSWC,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,ZKY,SYSOUC,SYSOUC,
*                     ZKY,ZKY,ZKY,ZKY,ZKY);/* BRANCH TARGET          */
*               DCL                                                0108
*                 CP0001@(94) PTR(31) INIT(ADDR(ZKY),ADDR(ZKY),ADDR(ZKY
*                     ),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(TRKC),ADDR(
*                     CYLC),ADDR(BLKLNC),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),
*                     ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY)
*                     ,ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY
*                     ),ADDR(ZKY),ADDR(SYSOUC),ADDR(SYSOUC),ADDR(SYSOUC
*                     ),ADDR(SYSOUC),ADDR(ZKY),ADDR(SYSOUC),ADDR(ZKY),
*                     ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(
*                     RETPDC),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),
*                     ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY)
*                     ,ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY
*                     ),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(
*                     ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR
*                     (ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),
*                     ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY)
*                     ,ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY
*                     ),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(
*                     ZKY),ADDR(ZKY),ADDR(PASSWC),ADDR(ZKY),ADDR(ZKY),
*                     ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY),ADDR(ZKY)
*                     ,ADDR(SYSOUC),ADDR(SYSOUC),ADDR(ZKY),ADDR(ZKY),
*                     ADDR(ZKY),ADDR(ZKY),ADDR(ZKY));              0108
*               GOTO CL0001@;       /* BRANCH TO SELECTED CASE 53 -
*                                      5E                            */
*                                                                  0109
         LR    @09,MMOP                                            0109
         SLA   @09,2                                               0109
         L     @09,CP0001@-4(@09)                                  0109
         BR    @09                                                 0109
*               /*****************************************************/
*               /*                                                   */
*               /* MODEL OVERRIDE KEY PROCESSING                     */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0110
*ZKY:                                                              0110
*               DO;                 /* SUBCASE NO CONFLICT KEY NAMES
*                                      PROCESSING                    */
ZKY      DS    0H                                                  0111
*                 CALL MERGTST(F0C);/* DO MERGE TEST AND MOVE -- NO
*                                      CONFLICTING KEYS              */
         LA    @01,@AL00111                                        0111
         BAL   @14,MERGTST                                         0111
*                 GOTO CE0001@;     /* BRANCH TO END OF CASE         */
         B     CE0001@                                             0112
*               END ZKY;            /* END OF SUBCASE                */
*TRKC:                                                             0114
*               DO;                 /* SUBCASE MERGE TRK ALLOCATION
*                                      TEXT UNIT                     */
TRKC     DS    0H                                                  0115
*                 CALL MERGTST(F2C,DALCYL,DALBLKLN);/* MERGE DS TRK
*                                      ALLOC TEXT UNIT               */
         LA    @01,@AL00115                                        0115
         BAL   @14,MERGTST                                         0115
*                 GOTO CE0001@;     /* BRANCH TO END OF CASE         */
         B     CE0001@                                             0116
*               END TRKC;           /* END OF SUBCASE                */
*CYLC:                                                             0118
*               DO;                 /* SUBCASE MERGE CYLINDER      0118
*                                      ALLOCATION TEXT UNIT          */
CYLC     DS    0H                                                  0119
*                 CALL MERGTST(F2C,DALTRK,DALBLKLN);/* MERGE DS CYL
*                                      ALLOC TEXT UNIT               */
         LA    @01,@AL00119                                        0119
         BAL   @14,MERGTST                                         0119
*                 GOTO CE0001@;     /* BRANCH TO END OF CASE         */
         B     CE0001@                                             0120
*               END CYLC;           /* END OF SUBCASE                */
*BLKLNC:                                                           0122
*               DO;                 /* SUBCASE MERGE BLOCK LENGTH  0122
*                                      ALLOCATION TEXT UNIT          */
BLKLNC   DS    0H                                                  0123
*                 CALL MERGTST(F2C,DALTRK,DALCYL);/* MERGE DS BLKLN
*                                      ALLOC TEXT UNIT               */
         LA    @01,@AL00123                                        0123
         BAL   @14,MERGTST                                         0123
*                 GOTO CE0001@;     /* BRANCH TO END OF CASE         */
         B     CE0001@                                             0124
*               END BLKLNC;         /* END OF SUBCASE                */
*SYSOUC:                                                           0126
*               DO;                 /* SUBCASE MERGE SYSOUT CLASS  0126
*                                      TEXT UNIT PROCESSING          */
SYSOUC   DS    0H                                                  0127
*                 CALL MERGTST(F10C,DALDSNAM,DALMEMBR,DALSTATS,DALNDISP
*                     ,DALCDISP,DALVLSER,DALLABEL,DALDSSEQ,DALPASPR,
*                     DALPASSW);    /* MERGE SYSOUT CLASS TU         */
         LA    @01,@AL00127                                        0127
         BAL   @14,MERGTST                                         0127
*                 GOTO CE0001@;     /* BRANCH TO END OF CASE         */
         B     CE0001@                                             0128
*               END SYSOUC;         /* END OF SUBCASE SYSOUT CLASS 0129
*                                      PROCESSING                    */
*RETPDC:                                                           0130
*               DO;                 /* SUBCASE MERGE RETPD TEXT UNIT
*                                      PROCESSING                    */
RETPDC   DS    0H                                                  0131
*                 CALL MERGTST(F1C,DALEXPDT);/* MERGE RETENTION    0131
*                                      PERIOD TEXT UNIT              */
         LA    @01,@AL00131                                        0131
         BAL   @14,MERGTST                                         0131
*                 GOTO CE0001@;     /* BRANCH TO END OF CASE         */
         B     CE0001@                                             0132
*               END RETPDC;         /* END OF SUBCASE                */
*PASSWC:                                                           0134
*               DO;                 /* SUBCASE MERGE PASSWORD TEXT 0134
*                                      UNIT PROCESSING               */
PASSWC   DS    0H                                                  0135
*                 CALL MERGTST(F1C,DALDSNAM);/* MERGE PASSWORD TEXT
*                                      UNIT                          */
         LA    @01,@AL00135                                        0135
         BAL   @14,MERGTST                                         0135
*                 GOTO CE0001@;     /* BRANCH TO END OF CASE         */
         B     CE0001@                                             0136
*               END PASSWC;         /* END OF SUBCASE PASSWORD     0137
*                                      PROCESSING                    */
*CE0001@:                                                          0138
*             END DSNAL;            /* END OF CASE ALLOCATION      0138
*                                      PARAMETER CASE STATEMENT      */
*                                                                  0138
CE0001@  DS    0H                                                  0139
*             /*******************************************************/
*             /*                                                     */
*             /* TEST FOR MERGE ERROR                                */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0139
*             IF RETCODE=F0C THEN   /* TEST FOR ERROR                */
         L     @09,RETCODE                                         0139
         LTR   @09,@09                                             0139
         BNZ   @RF00139                                            0139
*               DO;                 /* UPDATE LIST CONTROLS          */
*                 IF MMTUPND=ON THEN/* TEST FOR LAST LIST ELEMENT    */
         TM    MMTUPND,B'10000000'                                 0141
         BNO   @RF00141                                            0141
*                   DO;             /* LAST LIST ELEMENT             */
*                     MMSW=F1C;     /* TERMINATE LIST PROCESSING     */
         LA    MMSW,1                                              0143
*                     S99TUPLN(S99TUPLM)=ON;/* END OF TU PTR LIST    */
         LR    @09,S99TUPLM                                        0144
         SLA   @09,2                                               0144
         L     @07,S99TXTPP(,DMCBPTR)                              0144
         ALR   @07,@09                                             0144
         AL    @07,@CF00674                                        0144
         OI    S99TUPLN(@07),B'10000000'                           0144
*                     DMALTUPM=S99TUPLM;/* REMEMBER LAST USED TU PTR
*                                      INDEX                         */
         ST    S99TUPLM,DMALTUPM(,DMCBPTR)                         0145
*                     DMALTUBS=S99TUBAS;/* REMEMBER NEXT AVAILABLE TU
*                                      SPACE                         */
         ST    S99TUBAS,DMALTUBS(,DMCBPTR)                         0146
*                   END;            /* LAST LIST ELEMENT             */
*                 ELSE                                             0148
*                   DO;             /* NOT LAST LIST ELEMENT         */
         B     @RC00141                                            0148
@RF00141 DS    0H                                                  0149
*                     MMTUPLX=MMTUPLX+F1C;/* PREPARE TO LOOK AT NEXT
*                                      LIST ENTRY                    */
         AL    MMTUPLX,@CF00046                                    0149
*                     IF S99TUPLX>DIM(DMALTUPL) THEN/* TEST FOR TOO
*                                      MANY TU PTRS                  */
         C     S99TUPLX,@CF00084                                   0150
         BNH   @RF00150                                            0150
*                       DO;         /* TOO MANY TU PTRS              */
*                         DO;       /* BLSDMSG                     0152
*                                      (ZZ2,F3106C,DMCBMSG,BLSDMSGS)
*                                      INSERT(MODNAME,DMCBMODL)      */
*                           IOPTLIST(1)=ADDR(IOPTLIST(4));/* CHAIN TO
*                                      NEXT INSERT                   */
         LA    @09,IOPTLIST+12                                     0153
         ST    @09,IOPTLIST                                        0153
*                           IOPTLIST(2)=ADDR(MODNAME);/* INSERT NAME
*                                      POINTER                       */
         LA    @09,MODNAME                                         0154
         ST    @09,IOPTLIST+4                                      0154
*                           IOPTLIST(3)=0;/* ZERO RESERVED FIELD     */
         SLR   @09,@09                                             0155
         ST    @09,IOPTLIST+8                                      0155
*                           RFY                                    0156
*                             I015F BASED(ADDR(IOPTLIST(3)));/*    0156
*                                      ACCESS BYTES 1-2              */
*                           I015F=LENGTH(MODNAME);/* INSERT LENGTH   */
         LA    @07,8                                               0157
         LA    @15,IOPTLIST+8                                      0157
         STH   @07,I015F(,@15)                                     0157
*                           IOPTLIST(4)=0;/* LAST INSERT             */
         ST    @09,IOPTLIST+12                                     0158
*                           IOPTLIST(5)=ADDR(DMCBMODL);/* INSERT NAME
*                                      POINTER                       */
         LA    @15,DMCBMODL(,DMCBPTR)                              0159
         ST    @15,IOPTLIST+16                                     0159
*                           IOPTLIST(6)=0;/* ZERO RESERVED FIELD     */
         ST    @09,IOPTLIST+20                                     0160
*                           RFY                                    0161
*                             I015F BASED(ADDR(IOPTLIST(6)));/*    0161
*                                      ACCESS BYTES 1-2              */
*                           I015F=LENGTH(DMCBMODL);/* INSERT LENGTH  */
         LA    @09,IOPTLIST+20                                     0162
         STH   @07,I015F(,@09)                                     0162
*                           CALL BLSDMSG0(ZZ2,F3106C,DMCBMSG,BLSDMSGS,
*                               '00000000'B,ADDR(IOPTLIST));/* BUILD
*                                      MESSAGE                       */
         L     @09,DMCBTVP(,DMCBPTR)                               0163
         ST    @09,@AL00001                                        0163
         LA    @09,@CF00587                                        0163
         ST    @09,@AL00001+4                                      0163
         LA    @09,DMCBMSG(,DMCBPTR)                               0163
         ST    @09,@AL00001+8                                      0163
         L     @09,DMCBMSGS(,DMCBPTR)                              0163
         ST    @09,@AL00001+12                                     0163
         LA    @09,@CB00610                                        0163
         ST    @09,@AL00001+16                                     0163
         LA    @09,IOPTLIST                                        0163
         ST    @09,@AFTEMPS                                        0163
         LA    @09,@AFTEMPS                                        0163
         ST    @09,@AL00001+20                                     0163
         L     @15,DMCBMSG0(,DMCBPTR)                              0163
         LA    @01,@AL00001                                        0163
         BALR  @14,@15                                             0163
*                         END;      /* BLSDMSG                     0164
*                                      (ZZ2,F3106C,DMCBMSG,BLSDMSGS)
*                                      INSERT(MODNAME,DMCBMODL) BUILD
*                                      TOO MANY TU PTRS MESSAGE      */
*                         RETCODE=ERROR;/* MARK ERROR                */
         MVC   RETCODE(4),@CF00044                                 0165
*                         MMSW=F1C; /* TERMINATE LIST PROCESSING     */
         LA    MMSW,1                                              0166
*                       END;        /* TOO MANY TU PTRS              */
*                     IF S99TUBAS>ADDR(DMALEND) THEN/* TEST FOR OUT
*                                      OF TU SPACE                   */
@RF00150 LA    @09,DMALEND(,DMCBPTR)                               0168
         CR    S99TUBAS,@09                                        0168
         BNH   @RF00168                                            0168
*                       DO;         /* OUT OF TU SPACE               */
*                         DO;       /* BLSDMSG                     0170
*                                      (ZZ2,F3107C,DMCBMSG,BLSDMSGS)
*                                      INSERT(MODNAME,DMCBMODL)      */
*                           IOPTLIST(1)=ADDR(IOPTLIST(4));/* CHAIN TO
*                                      NEXT INSERT                   */
         LA    @09,IOPTLIST+12                                     0171
         ST    @09,IOPTLIST                                        0171
*                           IOPTLIST(2)=ADDR(MODNAME);/* INSERT NAME
*                                      POINTER                       */
         LA    @09,MODNAME                                         0172
         ST    @09,IOPTLIST+4                                      0172
*                           IOPTLIST(3)=0;/* ZERO RESERVED FIELD     */
         SLR   @09,@09                                             0173
         ST    @09,IOPTLIST+8                                      0173
*                           RFY                                    0174
*                             I015F BASED(ADDR(IOPTLIST(3)));/*    0174
*                                      ACCESS BYTES 1-2              */
*                           I015F=LENGTH(MODNAME);/* INSERT LENGTH   */
         LA    @07,8                                               0175
         LA    @15,IOPTLIST+8                                      0175
         STH   @07,I015F(,@15)                                     0175
*                           IOPTLIST(4)=0;/* LAST INSERT             */
         ST    @09,IOPTLIST+12                                     0176
*                           IOPTLIST(5)=ADDR(DMCBMODL);/* INSERT NAME
*                                      POINTER                       */
         LA    @15,DMCBMODL(,DMCBPTR)                              0177
         ST    @15,IOPTLIST+16                                     0177
*                           IOPTLIST(6)=0;/* ZERO RESERVED FIELD     */
         ST    @09,IOPTLIST+20                                     0178
*                           RFY                                    0179
*                             I015F BASED(ADDR(IOPTLIST(6)));/*    0179
*                                      ACCESS BYTES 1-2              */
*                           I015F=LENGTH(DMCBMODL);/* INSERT LENGTH  */
         LA    @09,IOPTLIST+20                                     0180
         STH   @07,I015F(,@09)                                     0180
*                           CALL BLSDMSG0(ZZ2,F3107C,DMCBMSG,BLSDMSGS,
*                               '00000000'B,ADDR(IOPTLIST));/* BUILD
*                                      MESSAGE                       */
         L     @09,DMCBTVP(,DMCBPTR)                               0181
         ST    @09,@AL00001                                        0181
         LA    @09,@CF00589                                        0181
         ST    @09,@AL00001+4                                      0181
         LA    @09,DMCBMSG(,DMCBPTR)                               0181
         ST    @09,@AL00001+8                                      0181
         L     @09,DMCBMSGS(,DMCBPTR)                              0181
         ST    @09,@AL00001+12                                     0181
         LA    @09,@CB00610                                        0181
         ST    @09,@AL00001+16                                     0181
         LA    @09,IOPTLIST                                        0181
         ST    @09,@AFTEMPS                                        0181
         LA    @09,@AFTEMPS                                        0181
         ST    @09,@AL00001+20                                     0181
         L     @15,DMCBMSG0(,DMCBPTR)                              0181
         LA    @01,@AL00001                                        0181
         BALR  @14,@15                                             0181
*                         END;      /* BLSDMSG                     0182
*                                      (ZZ2,F3107C,DMCBMSG,BLSDMSGS)
*                                      INSERT(MODNAME,DMCBMODL) BUILD
*                                      OUT OF TU SPACE MESSAGE       */
*                         RETCODE=ERROR;/* MARK ERROR                */
         MVC   RETCODE(4),@CF00044                                 0183
*                         MMSW=F1C; /* TERMINATE LIST PROCESSING     */
         LA    MMSW,1                                              0184
*                       END;        /* OUT OF TU SPACE               */
*                   END;            /* NOT LAST LIST ELEMENT         */
@RF00168 DS    0H                                                  0187
*               END;                /* UPDATE LIST CONTROLS          */
@RC00141 DS    0H                                                  0188
*           END;                    /* VALID ALLOCATION MODEL TEXT 0188
*                                      UNIT KEY                      */
@RF00139 DS    0H                                                  0189
*       END;                        /* PROCESS MODEL TEXT UNITS      */
@RC00083 DS    0H                                                  0189
@DE00080 C     MMSW,@CF00190                                       0189
         BE    @DL00080                                            0189
*     END;                          /* VALID MODEL NAME POINTER      */
*                                                                  0190
*   /*****************************************************************/
*   /*                                                               */
*   /* ALLOCATION MODEL MERGE COMPLETE, RETURN TO CALLER             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0191
*   IF RETCODE^=F0C THEN            /* TEST FOR ERROR                */
@RC00062 SLR   @10,@10                                             0191
         C     @10,RETCODE                                         0191
         BE    @RF00191                                            0191
*     DMCBDRBP=F0C;                 /* MARK DYNALLOC PARM LIST NOT 0192
*                                      USABLE                        */
         ST    @10,DMCBDRBP(,DMCBPTR)                              0192
*   RETURN CODE(RETCODE);                                          0193
@RF00191 L     @10,RETCODE                                         0193
         L     @13,4(,@13)                                         0193
         L     @00,@SIZDATD                                        0193
         LR    @01,@11                                             0193
         BLSCFRES R,LV=(0),A=(1)
         LR    @15,@10                                             0193
         L     @14,12(,@13)                                        0193
         LM    @00,@12,20(@13)                                     0193
         BR    @14                                                 0193
         EJECT
*                                                                  0194
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERNAL PROCEDURE TO TEST FOR MERGE CONFLICT                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0194
*MERGTST:                                                          0194
*   PROCEDURE;                                                     0194
MERGTST  STM   @14,@03,12(@13)                                     0194
         STM   @05,@07,40(@13)                                     0194
         ST    @09,56(,@13)                                        0194
         STM   @11,@12,64(@13)                                     0194
*   DCL                                                            0195
*     MTBAS PTR(31);                /* MERGE TEST PARM LIST BASE   0195
*                                      ADDRESS                       */
*   DCL                                                            0196
*     MTNDX BIN(31);                /* MERGE TEST KEY INDEX          */
*   DCL                                                            0197
*     MTMAX BIN(31);                /* LOCAL COPY OF MERGE TEST KEY
*                                      COUNT                         */
*   DCL                                                            0198
*     1 MTP BASED(MTBAS),           /* MERGE TEST PARM LIST POINTERS */
*      2 MTCNTP PTR(31),            /* ADDRESS OF MERGE TEST KEY   0198
*                                      COUNT                         */
*      2 MTPTR(*) PTR(31);          /* ADDRESSES OF MERGE TEST KEYS  */
*   DCL                                                            0199
*     MTCNT BIN(31) BASED(MTCNTP);  /* MERGE TEST KEY COUNT          */
*   DCL                                                            0200
*     MTKEY BIT(16) BASED;          /* MERGE TEST KEY                */
*   DCL                                                            0201
*     MERSW BIN(8);                 /* MERGE CONFLICT SWITCH         */
*   DCL                                                            0202
*     MLEN BIN(31);                 /* VARIABLE LENGTH MOVE LENGTH   */
*   DCL                                                            0203
*     TLEN BIN(31);                 /* TEXT UNIT LENGTH              */
*   RFY                                                            0204
*     GPR01P RSTD;                                                 0204
*   MTBAS=GPR01P;                   /* BASE THE MERGE TEST PARM LIST */
         ST    GPR01P,MTBAS                                        0205
*   RFY                                                            0206
*     GPR01P UNRSTD;                                               0206
*   MERTUPLM=DMALTUPM;              /* LAST USED TEXT UNIT POINTER 0207
*                                      INDEX                         */
         L     @02,DMALTUPM(,DMCBPTR)                              0207
         STH   @02,MERTUPLM                                        0207
*   MERSW=F0C;                      /* INIT MERGE CONFLICT SW TO NO
*                                      CONFLICT                      */
         SLR   MERSW,MERSW                                         0208
*   MLEN=F0C;                       /* INIT TEXT UNIT VALUE MOVE   0209
*                                      LENGTH                        */
         SLR   MLEN,MLEN                                           0209
*   TLEN=F0C;                       /* INIT TEXT UNIT LENGTH         */
         SLR   TLEN,TLEN                                           0210
*   DO MERTUPLX=F1C TO MERTUPLM WHILE MERSW=F0C;/* LOOP THRU OVERRIDE
*                                      TUS                           */
         LA    @05,1                                               0211
         B     @DE00211                                            0211
@DL00211 C     MERSW,@CF00190                                      0211
         BNE   @DC00211                                            0211
*     MERTUP=MERTUPTR(MERTUPLX);    /* CURRENT MODEL OVERRIDE TU PTR */
         LH    @15,MERTUPLX                                        0212
         SLA   @15,2                                               0212
         L     @01,S99TXTPP(,DMCBPTR)                              0212
         AL    @01,@CF00674                                        0212
         L     MERTUP,MERTUPTR(@15,@01)                            0212
*     MLEN=F0C;                     /* INIT TEXT UNIT VALUE MOVE   0213
*                                      LENGTH                        */
         SLR   MLEN,MLEN                                           0213
*     TLEN=F0C;                     /* INIT TEXT UNIT LENGTH         */
         SLR   TLEN,TLEN                                           0214
*     MEROP=MERTUKEY;               /* CURRENT MERGE TEXT UNIT KEY   */
         SLR   MEROP,MEROP                                         0215
         ICM   MEROP,3,MERTUKEY(MERTUP)                            0215
*     IF MMOP=MEROP THEN            /* TEST FOR OVERRIDE MATCH       */
         CR    MMOP,MEROP                                          0216
         BNE   @RF00216                                            0216
*       MERSW=F1C;                  /* KEYS MATCH, CANNOT MERGE MODEL
*                                      TU                            */
         LA    MERSW,1                                             0217
*     ELSE                                                         0218
*       DO;                         /* MERGE KEY DOES NOT MATCH,   0218
*                                      CHECK FOR CONFLICT KEYS       */
         B     @RC00216                                            0218
@RF00216 DS    0H                                                  0219
*         IF MTCNT>F0C THEN         /* TEST FOR POSSIBLE CONFLICT    */
         L     @02,MTBAS                                           0219
         L     @02,MTCNTP(,@02)                                    0219
         L     @02,MTCNT(,@02)                                     0219
         LTR   @02,@02                                             0219
         BNP   @RF00219                                            0219
*           DO;                     /* CONFLICT POSSIBLE             */
*             MTMAX=MTCNT;          /* MAKE LOCAL COPY OF CONFLICT 0221
*                                      KEY COUNT                     */
         ST    @02,MTMAX                                           0221
*             DO MTNDX=F1C TO MTMAX WHILE MERSW=F0C;/* LOOP THRU   0222
*                                      CONFLICT CANDIDATES           */
         LA    MTNDX,1                                             0222
         B     @DE00222                                            0222
@DL00222 C     MERSW,@CF00190                                      0222
         BNE   @DC00222                                            0222
*               IF MEROP=MTPTR(MTNDX)->MTKEY THEN/* TEST FOR CONFLICT*/
         LR    @15,MTNDX                                           0223
         SLA   @15,2                                               0223
         L     @01,MTBAS                                           0223
         L     @01,MTPTR-4(@15,@01)                                0223
         SLR   @00,@00                                             0223
         ICM   @00,3,MTKEY(@01)                                    0223
         CR    MEROP,@00                                           0223
         BNE   @RF00223                                            0223
*                 MERSW=F1C;        /* FOUND MERGE CONFLICT          */
         LA    MERSW,1                                             0224
*             END;                  /* LOOP THRU CONFLICT CANDIDATES */
@RF00223 AL    MTNDX,@CF00046                                      0225
@DE00222 C     MTNDX,MTMAX                                         0225
         BNH   @DL00222                                            0225
@DC00222 DS    0H                                                  0226
*           END;                    /* CONFLICT POSSIBLE             */
*       END;                        /* MERGE KEY DOES NOT MATCH,   0227
*                                      CHECK FOR CONFLICT KEYS       */
@RF00219 DS    0H                                                  0228
*   END;                            /* LOOP THRU OVERRIDE TUS        */
@RC00216 LA    @05,1                                               0228
         AH    @05,MERTUPLX                                        0228
@DE00211 STH   @05,MERTUPLX                                        0228
         CH    @05,MERTUPLM                                        0228
         BNH   @DL00211                                            0228
@DC00211 DS    0H                                                  0229
*   IF MERSW=F0C THEN               /* TEST FOR NO MERGE CONFLICT    */
         SLR   @07,@07                                             0229
         CR    MERSW,@07                                           0229
         BNE   @RF00229                                            0229
*     DO;                           /* MERGE MODEL TEXT UNIT WITH  0230
*                                      OVERRIDE TEXT UNITS           */
*       TLEN=F4C;                   /* TEXT UNIT LENGTH              */
         LA    TLEN,4                                              0231
*       S99TUPTR(S99TUPLX)=S99TUBAS;/* INIT TU PTR TO START OF TU    */
         LR    @10,S99TUPLX                                        0232
         SLA   @10,2                                               0232
         L     @02,S99TXTPP(,DMCBPTR)                              0232
         AL    @02,@CF00674                                        0232
         ST    S99TUBAS,S99TUPTR(@10,@02)                          0232
*       RFY                                                        0233
*         S99TUNIT BASED(S99TUBAS); /* BASE THE TEXT UNIT            */
*       S99TUKEY=MMTUKEY;           /* INIT THE KEY                  */
         L     @10,MMTUP                                           0234
         MVC   S99TUKEY(2,S99TUBAS),MMTUKEY(@10)                   0234
*       S99TUNUM=MMTUNUM;           /* NUMBER OF TU ENTRIES          */
         ICM   @02,12,MMTUNUM(@10)                                 0235
         SRA   @02,16                                              0235
         STCM  @02,3,S99TUNUM(S99TUBAS)                            0235
*       IF S99TUNUM>F0C THEN        /* TEST NUMBER OF TU ENTRIES     */
         CR    @02,@07                                             0236
         BNH   @RF00236                                            0236
*         DO;                       /* TU ENTRY PRESENT, MOVE IT OVER*/
*           TLEN=F6C;               /* RESET TU LENGTH               */
         LA    TLEN,6                                              0238
*           MLEN=MMTULNG;           /* SET MOVE LENGTH               */
         ICM   @02,12,MMTULNG(@10)                                 0239
         SRA   @02,16                                              0239
         LR    MLEN,@02                                            0239
*           S99TULNG=MMTULNG;       /* SET TU ENTRY LENGTH           */
         STCM  @02,3,S99TULNG(S99TUBAS)                            0240
*           S99TUPAR(F1C:MLEN)=MMTUPAR(F1C:MLEN);/* COPY TU PARM     */
         LR    @02,MLEN                                            0241
         BCTR  @02,0                                               0241
         EX    @02,@SM00676                                        0241
*         END;                      /* TU ENTRY PRESENT, MOVE IT OVER*/
*       S99TUPLM=S99TUPLX;          /* SAVE LAST USED TU PTR INDEX   */
@RF00236 LR    S99TUPLM,S99TUPLX                                   0243
*       S99TUPLX=S99TUPLX+F1C;      /* BUMP TO NEXT TU PTR SLOT      */
         LA    @02,1                                               0244
         ALR   S99TUPLX,@02                                        0244
*       S99TUBAS=S99TUBAS+MLEN+TLEN+F1C;/* BUMP TU BASE TO NEXT    0245
*                                      AVAILABLE HALF WORD           */
         LR    @15,S99TUBAS                                        0245
         ALR   @15,MLEN                                            0245
         ALR   @15,TLEN                                            0245
         ALR   @15,@02                                             0245
         LR    S99TUBAS,@15                                        0245
*       S99TUBAS=S99TUBAS&LHWBNDY;  /* FORCE TO HALF WORD            */
         N     S99TUBAS,@CF00599                                   0246
*     END;                          /* MERGE MODEL TEXT UNIT WITH  0247
*                                      OVERRIDE TEXT UNITS           */
*   END MERGTST;                                                   0248
@EL00002 DS    0H                                                  0248
@EF00002 DS    0H                                                  0248
@ER00002 LM    @14,@03,12(@13)                                     0248
         LM    @05,@07,40(@13)                                     0248
         L     @09,56(,@13)                                        0248
         LM    @11,@12,64(@13)                                     0248
         BR    @14                                                 0248
         EJECT
*                                                                  0249
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF EXECUTABLE PROCEDURE STATEMENTS                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0249
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR01P PTR(31) REG(1);                                       0249
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0250
*     I031F FIXED(31) BASED,                                       0250
*     I031P PTR(31) BASED,                                         0250
*     I015F FIXED(15) BASED,                                       0250
*     I015P PTR(15) BASED,                                         0250
*     I008P PTR(8) BASED,                                          0250
*     I001C CHAR(1) BASED;                                         0250
*   DECLARE                                                        0251
*     IOPTLIST(6) PTR(31) BDY(WORD);/* OPTION LIST ARRAY             */
*   DCL                                                            0252
*     1 DASPATCH LOCAL BDY(DWORD),  /* PATCH AREA                    */
*      2 DASPATA(DASPATLN) PTR INIT((DASPATLN)0);                  0252
*   GEN DATA DEFS(HEXTBL);                                         0253
*   END BLSCAMER                                                   0254
*                                                                  0254
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (BLSCAMOM)                                       */
*/*%INCLUDE SYSLIB  (IEFZB4D0)                                       */
*/*%INCLUDE SYSLIB  (IEFZB4D2)                                       */
*                                                                  0254
*       ;                                                          0254
@EL00001 L     @13,4(,@13)                                         0254
@EF00001 L     @00,@SIZDATD                                        0254
         LR    @01,@11                                             0254
         BLSCFRES R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0254
         BR    @14                                                 0254
@DATA    DS    0H
@CH00037 DC    H'4'
@SM00676 MVC   S99TUPAR(0,S99TUBAS),MMTUPAR(@10)
         DS    0F
@AL00111 DC    A(@CF00190)             LIST WITH   1 ARGUMENT(S)
@AL00115 DC    A(@CF00072)             LIST WITH   3 ARGUMENT(S)
         DC    A(@CB00370)
         DC    A(@CB00372)
@AL00119 DC    A(@CF00072)             LIST WITH   3 ARGUMENT(S)
         DC    A(@CB00368)
         DC    A(@CB00372)
@AL00123 DC    A(@CF00072)             LIST WITH   3 ARGUMENT(S)
         DC    A(@CB00368)
         DC    A(@CB00370)
@AL00127 DC    A(@CF00583)             LIST WITH  11 ARGUMENT(S)
         DC    A(@CB00358)
         DC    A(@CB00360)
         DC    A(@CB00362)
         DC    A(@CB00364)
         DC    A(@CB00366)
         DC    A(@CB00386)
         DC    A(@CB00414)
         DC    A(@CB00416)
         DC    A(@CB00418)
         DC    A(@CB00514)
@AL00131 DC    A(@CF00046)             LIST WITH   2 ARGUMENT(S)
         DC    A(@CB00422)
@AL00135 DC    A(@CF00046)             LIST WITH   2 ARGUMENT(S)
         DC    A(@CB00358)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@AL00001 DS    6A
@AFTEMPS DS    1F
BLSCAMER CSECT
         DS    0F
@CF00190 DC    F'0'
@CF00046 DC    F'1'
@CF00072 DC    F'2'
@CF00044 DC    F'8'
@CH00044 EQU   @CF00044+2
@CF00583 DC    F'10'
@CF00084 DC    F'32'
@CF00585 DC    F'3105'
@CF00587 DC    F'3106'
@CF00589 DC    F'3107'
@CF00591 DC    F'3113'
@CF00674 DC    F'-4'
@CF00599 DC    XL4'FFFFFFFE'
@CF00542 DC    XL4'005E'
@DATD    DSECT
         DS    0D
MMTUP    DS    AL4
         ORG   MMTUP
MMTUPND  DS    BL1
         ORG   MMTUP+4
MTBAS    DS    A
MTMAX    DS    F
MERTUPLX DS    H
MERTUPLM DS    H
MODSTAT  DS    CL16
         ORG   MODSTAT
MODNAME  DS    CL8
RETCODE  DS    FL4
SUBCODE  DS    FL4
         ORG   MODSTAT+16
CHSTR8   DS    CL8
         ORG   CHSTR8
CHSTR813 DS    CL3
CHSTR847 DS    CL4
         ORG   CHSTR847
CHSTR845 DS    CL2
CHSTR867 DS    CL2
         ORG   CHSTR8+8
CTEMP    DS    CL9
         ORG   CTEMP
CTEMP14  DS    CL4
CTEMP54  DS    CL4
         ORG   CTEMP+9
         DS    CL3
IOPTLIST DS    6A
BLSCAMER CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00318 DC    V(BLSCAMOD)
         DS    0D
@CC00601 DC    C'BLSCAMER'
@CB00358 DC    X'0002'
@CB00360 DC    X'0003'
@CB00362 DC    X'0004'
@CB00364 DC    X'0005'
@CB00366 DC    X'0006'
@CB00368 DC    X'0007'
@CB00370 DC    X'0008'
@CB00372 DC    X'0009'
@CB00386 DC    X'0010'
@CB00414 DC    X'001E'
@CB00416 DC    X'001F'
@CB00418 DC    X'0020'
@CB00422 DC    X'0022'
@CB00514 DC    X'0050'
@CB00610 DC    B'00000000'
         DS    CL3
DASPATCH DS    CL256
         ORG   DASPATCH
DASPATA  DC    64A(0)
         ORG   DASPATCH+256
CP0001@  DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(TRKC)
         DC    AL4(CYLC)
         DC    AL4(BLKLNC)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(SYSOUC)
         DC    AL4(SYSOUC)
         DC    AL4(SYSOUC)
         DC    AL4(SYSOUC)
         DC    AL4(ZKY)
         DC    AL4(SYSOUC)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(RETPDC)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(PASSWC)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(SYSOUC)
         DC    AL4(SYSOUC)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
         DC    AL4(ZKY)
BLSCAMER CSECT
*                         /*
HEXTBL   EQU   *-240
         DC    CL16'0123456789ABCDEF'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSCAMER CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
TLEN     EQU   @05
MLEN     EQU   @09
MERSW    EQU   @06
MTNDX    EQU   @02
MEROP    EQU   @05
S99TUPLM EQU   @10
S99TUBAS EQU   @04
S99TUPLX EQU   @08
MMTUPLX  EQU   @05
MMSW     EQU   @02
MMOP     EQU   @07
MERTUP   EQU   @02
S99TUFP  EQU   @04
MODELPTR EQU   @06
DMCBPTR  EQU   @03
GPR01P   EQU   @01
DMCB     EQU   0
DMCBTVP  EQU   DMCB+8
DMCBFTY  EQU   DMCB+20
DMCBOPN  EQU   DMCB+21
DMCBRMOD EQU   DMCB+23
DMCBOUT  EQU   DMCBRMOD
DMCBOPTS EQU   DMCB+24
DMCBGKY  EQU   DMCBOPTS
DMCBMFLG EQU   DMCB+28
DMCBBUFP EQU   DMCB+32
DMCBKEYP EQU   DMCB+44
DMCBMSG  EQU   DMCB+52
DMCBRI   EQU   DMCB+64
DMCBMSG0 EQU   DMCB+68
DMCBMSGS EQU   DMCB+72
DMCBFRE  EQU   DMCB+88
DMCBEOB  EQU   DMCB+92
DMCBACBE EQU   DMCB+124
DMCBMODL EQU   DMCB+348
DMCBSPEC EQU   DMCB+380
DMCBDRBP EQU   DMCB+400
DMCBAMS  EQU   DMCB+416
DMCBAUDT EQU   DMCB+568
DMCBLSCP EQU   DMCBAUDT+16
DMCBWRK  EQU   DMCB+648
MODELNAM EQU   0
MODLMAP  EQU   0
MMNAME   EQU   MODLMAP+8
MMACBDCB EQU   MODLMAP+16
MMRPLP   EQU   MODLMAP+20
MMOPCLP  EQU   MODLMAP+24
MMDYRBP  EQU   MODLMAP+28
MMAMSLP  EQU   MODLMAP+32
MMACB    EQU   0
MMDYRB   EQU   0
MMAMSREC EQU   0
MMTUPL   EQU   0
MMTUPTR  EQU   MMTUPL
MMTUNIT  EQU   0
MMTUKEY  EQU   MMTUNIT
MMTUNUM  EQU   MMTUNIT+2
MMTUENT  EQU   MMTUNIT+4
MMTULNG  EQU   MMTUENT
MMTUPAR  EQU   MMTUENT+2
S99TUPL  EQU   0
S99TUPTR EQU   S99TUPL
S99TUPLN EQU   S99TUPTR
S99TUP   EQU   0
S99TUNIT EQU   0
S99TUKEY EQU   S99TUNIT
S99TUNUM EQU   S99TUNIT+2
S99TUENT EQU   S99TUNIT+4
S99TULNG EQU   S99TUENT
S99TUPAR EQU   S99TUENT+2
S99TUFLD EQU   0
BLSDMSGS EQU   0
BLSDMSG0 EQU   0
ZZ2      EQU   0
MERTUPL  EQU   0
MERTUPTR EQU   MERTUPL
MERTUNIT EQU   0
MERTUKEY EQU   MERTUNIT
MERTUENT EQU   MERTUNIT+4
I015F    EQU   0
CL0001@  EQU   0
MTP      EQU   0
MTCNTP   EQU   MTP
MTPTR    EQU   MTP+4
MTCNT    EQU   0
MTKEY    EQU   0
DMCBDMGR EQU   0
DMCBRQC  EQU   0
I001C    EQU   0
I008P    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
MMAMSL   EQU   0
MMDCB    EQU   0
MMOPCL   EQU   0
MMRPL    EQU   0
DMCBVSM  EQU   DMCBAMS
DMCBQSM  EQU   DMCBAMS
DMAL     EQU   DMCBWRK
DMALMODA EQU   DMAL+4
DMALMODP EQU   DMAL+12
DMALDYRB EQU   DMAL+16
DMALTUPM EQU   DMAL+36
DMALTUBS EQU   DMAL+40
DMALTUPL EQU   DMAL+44
DMALEND  EQU   DMAL+1196
MMACBMCF EQU   MMACB+12
MMACBMC1 EQU   MMACBMCF
MMRB     EQU   MMDYRB
MMRSC    EQU   MMRB+4
MMTXTPP  EQU   MMRB+8
S99RBPTR EQU   DMCBDRBP
S99RB    EQU   DMALDYRB
S99FLAG1 EQU   S99RB+2
S99FLG11 EQU   S99FLAG1
S99RSC   EQU   S99RB+4
S99TXTPP EQU   S99RB+8
S99FLAG2 EQU   S99RB+16
S99FLG21 EQU   S99FLAG2
S99FLG22 EQU   S99FLAG2+1
CHSTR88  EQU   CHSTR8+7
S99TUPR1 EQU   S99TUPAR
S99TUPR2 EQU   S99TUPAR
S99TUPR3 EQU   S99TUPAR
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
S99FLG24 EQU   S99FLAG2+3
S99FLG23 EQU   S99FLAG2+2
S99PCINT EQU   S99FLG22
S99UDEVT EQU   S99FLG22
S99MOUNT EQU   S99FLG21
S99CATLG EQU   S99FLG21
S99TIONQ EQU   S99FLG21
S99OFFLN EQU   S99FLG21
S99WTUNT EQU   S99FLG21
S99NORES EQU   S99FLG21
S99WTDSN EQU   S99FLG21
S99WTVOL EQU   S99FLG21
S99RSV01 EQU   S99RB+12
S99INFO  EQU   S99RSC+2
S99ERROR EQU   S99RSC
S99FLG12 EQU   S99FLAG1+1
S99JBSYS EQU   S99FLG11
S99NOMNT EQU   S99FLG11
S99NOCNV EQU   S99FLG11
S99ONCNV EQU   S99FLG11
S99VERB  EQU   S99RB+1
S99RBLN  EQU   S99RB
S99RBPND EQU   S99RBPTR
MMFLAG2  EQU   MMRB+16
MMRSV01  EQU   MMRB+12
MMINFO   EQU   MMRSC+2
MMERROR  EQU   MMRSC
MMFLAG1  EQU   MMRB+2
MMVERB   EQU   MMRB+1
MMRBLN   EQU   MMRB
MMACBKEY EQU   MMACBMC1
DMALTUS  EQU   DMAL+172
DMALPRMP EQU   DMAL+8
DMALID   EQU   DMAL
DMCBRES7 EQU   DMCBQSM+96
DMCBDCB  EQU   DMCBQSM
DMCBACB  EQU   DMCBVSM+76
DMCBRPL  EQU   DMCBVSM
MERTUPAR EQU   MERTUENT+2
MERTULNG EQU   MERTUENT
MERTUNUM EQU   MERTUNIT+2
MERTUPLN EQU   MERTUPTR
S99TUPRM EQU   S99TUFLD+2
S99TULEN EQU   S99TUFLD
S99TUPND EQU   S99TUP
MMTUPLN  EQU   MMTUPTR
MMAMSTXT EQU   MMAMSREC+4
MMAMSPAD EQU   MMAMSREC+2
MMAMSLEN EQU   MMAMSREC
MMACBID  EQU   MMACB
MMRRL    EQU   MODLMAP+36
MMRESV1  EQU   MODLMAP+4
MMNXMOD  EQU   MODLMAP
DMCBRES8 EQU   DMCB+640
DMCBMODN EQU   DMCB+632
DMCBCARY EQU   DMCBAUDT+20
DMCBCLC  EQU   DMCBAUDT+12
DMCBOPC  EQU   DMCBAUDT+8
DMCBFRC  EQU   DMCBAUDT+4
DMCBALC  EQU   DMCBAUDT
DMCBFR   EQU   DMCB+412
DMCBRES6 EQU   DMCB+410
DMCBIRSC EQU   DMCB+408
DMCBSUBC EQU   DMCB+404
DMCBRSZM EQU   DMCB+398
DMCBRSZA EQU   DMCB+396
DMCBCISZ EQU   DMCB+394
DMCBDCBL EQU   DMCB+392
DMCBDCLR EQU   DMCB+390
DMCBDCFM EQU   DMCB+389
DMCBRES5 EQU   DMCB+388
DMCBLBRT EQU   DMCB+386
DMCBLBSQ EQU   DMCB+384
DMCBLBPS EQU   DMCB+383
DMCBLBTY EQU   DMCB+382
DMCBRES4 EQU   DMCB+381
DMCBSPRS EQU   DMCBSPEC
DMCBSPRN EQU   DMCBSPEC
DMCBSPCT EQU   DMCBSPEC
DMCBSPRL EQU   DMCBSPEC
DMCBSPSE EQU   DMCB+376
DMCBSPPR EQU   DMCB+372
DMCBSPTY EQU   DMCB+369
DMCBODIS EQU   DMCB+368
DMCBDISP EQU   DMCB+367
DMCBSTAT EQU   DMCB+366
DMCBRES3 EQU   DMCB+364
DMCBMEMB EQU   DMCB+356
DMCBRES9 EQU   DMCB+340
DMCBPID  EQU   DMCB+332
DMCBTYPE EQU   DMCB+328
DMCBDSN  EQU   DMCB+284
DMCBUNIT EQU   DMCB+276
DMCBDSOR EQU   DMCB+274
DMCBVOL  EQU   DMCB+268
DMCBDDNM EQU   DMCB+260
DMCBSYNM EQU   DMCB+132
DMCBRPLF EQU   DMCB+128
DMCBDCBE EQU   DMCBACBE
DMCBARC  EQU   DMCB+120
DMCBCPC  EQU   DMCB+116
DMCBRET  EQU   DMCB+112
DMCBSTL  EQU   DMCB+96
DMCBRES2 EQU   DMCB+85
DMCBSPID EQU   DMCB+84
DMCBRESC EQU   DMCB+80
DMCBZZ1P EQU   DMCB+76
DMCBRRL  EQU   DMCB+60
DMCBRBA  EQU   DMCB+56
DMCBKEYL EQU   DMCB+48
DMCBKPC  EQU   DMCBKEYP
DMCBORL  EQU   DMCB+40
DMCBBLEN EQU   DMCB+36
DMCBBFPC EQU   DMCBBUFP
DMCBRES1 EQU   DMCB+31
DMCBACCM EQU   DMCB+30
DMCBREJ  EQU   DMCB+29
DMCBRESB EQU   DMCBMFLG
DMCBFMOD EQU   DMCBMFLG
DMCBLOPT EQU   DMCB+27
DMCBLRM  EQU   DMCB+26
DMCBLRQ  EQU   DMCB+25
DMCBOPRS EQU   DMCBOPTS
DMCBLRD  EQU   DMCBOPTS
DMCBBWD  EQU   DMCBOPTS
DMCBUPD  EQU   DMCBOPTS
DMCBAPX  EQU   DMCBOPTS
DMCBRNO  EQU   DMCBGKY
DMCBKYD  EQU   DMCBOPTS
DMCBRMRS EQU   DMCBRMOD
DMCBRM5  EQU   DMCBRMOD
DMCBRM6  EQU   DMCBRMOD
DMCBTMP  EQU   DMCBOUT
DMCBRQST EQU   DMCB+22
DMCBRESA EQU   DMCBOPN
DMCBSOUT EQU   DMCBOPN
DMCBSIN  EQU   DMCBOPN
DMCBVSF  EQU   DMCBFTY
DMCBKSF  EQU   DMCBFTY
DMCBFTRS EQU   DMCBFTY
DMCBSHF  EQU   DMCBFTY
DMCBIRL  EQU   DMCB+16
DMCBRTC  EQU   DMCB+12
DMCBNEXT EQU   DMCB+4
DMCBID   EQU   DMCB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00229 EQU   @EL00002
@ENDDATA EQU   *
         END   BLSCAMER,(C'PLS1835',0701,78062)
