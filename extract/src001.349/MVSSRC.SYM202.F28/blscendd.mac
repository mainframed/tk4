         TITLE 'BLSCENDD - IPCS DATA ACCESS SERVICES END REQUEST EXECUT*
               TOR      '
*     /* CHANGE ACTIVITY
*    THIS MODULE IS WRITTEN FOR @G57LPSR
BLSCENDD CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'BLSCENDD  78.062'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         BLSCGETS R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
*   DMCBPTR=GPR01P;                 /* ESTABLISH ADDRESSIBILITY TO 0010
*                                      DMCB                          */
         LR    DMCBPTR,GPR01P                                      0010
*   RFY                                                            0011
*     GPR01P UNRSTD;                                               0011
*   MODNAME=LMODNMC;                /* MARK AUTOMATIC AREA           */
         MVC   MODNAME(8),@CC00220                                 0012
*   SUBCODE=F0C;                    /* SUB-ROUTINE RETURN CODE       */
         SLR   @10,@10                                             0013
         ST    @10,SUBCODE                                         0013
*   DMCBRTC=F0C;                    /* WE ARE SUCCESSFUL UNTIL WE  0014
*                                      FAIL                          */
*                                                                  0014
         ST    @10,DMCBRTC(,DMCBPTR)                               0014
*   /*****************************************************************/
*   /*                                                               */
*   /* FIRST DECIDE WHETHER DMCB IS OPEN                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0015
*   IF DMCBSOUT=OFF                 /* DMCB NOT OPEN FOR OUTPUT      */
*       &DMCBSIN=OFF THEN           /* OR INPUT                      */
         TM    DMCBSOUT(DMCBPTR),B'11000000'                       0015
         BNZ   @RF00015                                            0015
*     DO;                           /* DATA SET NOT OPEN             */
*       DMCBRTC=INVRQ;              /* INDICATE INVALID REQUEST      */
         MVC   DMCBRTC(4,DMCBPTR),@CF00037                         0017
*       DMCBREJ=F0C;                /* REQ REJECTED SINCE DMCB IS NOT
*                                      OPEN FOR OUTPUT               */
         MVI   DMCBREJ(DMCBPTR),X'00'                              0018
*       RETURN;                                                    0019
@EL00001 L     @13,4(,@13)                                         0019
@EF00001 L     @00,@SIZDATD                                        0019
         LR    @01,@11                                             0019
         BLSCFRES R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0019
         BR    @14                                                 0019
*     END;                          /* DATA SET NOT OPEN             */
         EJECT
*                                                                  0021
*   /*****************************************************************/
*   /*                                                               */
*   /* VSAM FILE                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0021
*   IF DMCBVSF=ON THEN                                             0021
@RF00015 TM    DMCBVSF(DMCBPTR),B'00000001'                        0021
         BNO   @RF00021                                            0021
*     DO;                           /* VSAM FILE                     */
*                                                                  0022
*       /*************************************************************/
*       /*                                                           */
*       /* FOR VSAM FILES CALL BLSCSETT TO PERFORM RPL MODIFICATIONS */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0023
*       RFY                                                        0023
*         GPR01P RSTD;                                             0023
*       GPR01P=DMCBPTR;             /* BLSCSETT INTERFACE            */
         LR    GPR01P,DMCBPTR                                      0024
*       CALL BLSCSETT;              /* PERFORM SET FUNCTION          */
         L     @15,@CV00197                                        0025
         BALR  @14,@15                                             0025
*       RFY                                                        0026
*         GPR01P UNRSTD;                                           0026
*       IF DMCBRTC^=F0C THEN                                       0027
         L     @10,DMCBRTC(,DMCBPTR)                               0027
         LTR   @10,@10                                             0027
         BNZ   @RT00027                                            0027
*         RETURN;                   /* IF SET FAILED THEN RETURN     */
*                                                                  0028
*       /*************************************************************/
*       /*                                                           */
*       /* PERFORM VSAM END REQUEST                                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0029
*       RFY                                                        0029
*        (GPR01P,                                                  0029
*         GPR15F) RSTD;                                            0029
*       GPR01P=ADDR(DMCBRPL);                                      0030
         LA    GPR01P,DMCBRPL(,DMCBPTR)                            0030
*       GEN REFS(GPR01P) SETS(GPR15F)(ENDREQ RPL=(1));             0031
         ENDREQ RPL=(1)
*       DMCBSUBC=GPR15F;                                           0032
         ST    GPR15F,DMCBSUBC(,DMCBPTR)                           0032
*       RFY                                                        0033
*        (GPR01P,                                                  0033
*         GPR15F) UNRSTD;                                          0033
*       IF DMCBSUBC=LOGER THEN      /* IF A LOGICAL ERROR            */
         L     @10,DMCBSUBC(,DMCBPTR)                              0034
         CL    @10,@CF00044                                        0034
         BNE   @RF00034                                            0034
*         CALL VSMLERR;             /* THEN ANALYSE THE FDBK FIELD IN
*                                      THE RPL                       */
         BAL   @14,VSMLERR                                         0035
*       ELSE                                                       0036
*         DO;                       /* NOT LOGICAL ERROR             */
         B     @RC00034                                            0036
@RF00034 DS    0H                                                  0037
*           IF DMCBSUBC=PERMER THEN /* ELSE IF A PHYSICAL ERROR      */
         CLC   DMCBSUBC(4,DMCBPTR),@CF00206                        0037
         BNE   @RF00037                                            0037
*             DO;                   /* ABEND(F141C) DUMP USER        */
*               RESPECIFY                                          0039
*                (GPR01F) RESTRICTED;                              0039
*               GPR01F=(F141C)&'00000FFF'X;/* COMP CODE IN BITS 20-31*/
         LA    GPR01F,141                                          0040
*               GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG */
         O     GPR01F,@CF00227                                     0041
*               SVC(13);            /* ISSUE ABEND SVC               */
         SVC   13                                                  0042
*               RESPECIFY                                          0043
*                (GPR01F) UNRESTRICTED;                            0043
*             END;                  /* ABEND(F141C) DUMP USER      0044
*                                      SHOULDNT OCCUR WITH         0044
*                                      SYNCHRONOUS PROCESSING        */
*         END;                      /* NOT LOGICAL ERROR             */
*     END;                          /* VSAM FILE                     */
*   RETURN;                                                        0047
         B     @EL00001                                            0047
         EJECT
*VSMLERR:                                                          0048
*   PROCEDURE;                                                     0048
*                                                                  0048
VSMLERR  STM   @14,@12,@SA00002                                    0048
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS ENTERED IF A VSAM LOGICAL ERROR OCCURS IT     */
*   /* EXTRACTS THE FEEDBACK FIELD FROM THE REQUEST PARAMETER LIST   */
*   /* AND DETERMINES THE PROPER RETURN CODE. LOGICAL ERRORS SHOULD  */
*   /* NEVER OCCUR FOR A DATA MANAGER END REQUEST THEREFORE AN ABEND */
*   /* IS ISSUED TO INDICATE A DATA MANAGER FAILURE.                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0049
*   RFY                                                            0049
*    (GPR08P,                                                      0049
*     GPR02P,                                                      0049
*     GPR03P,                                                      0049
*     GPR15F) RSTD;                                                0049
*   GPR08P=ADDR(DMCBRPL);           /* ADDRESS RPL FOR SHOWCB MACRO  */
         LA    GPR08P,DMCBRPL(,DMCBPTR)                            0050
*   GPR02P=ADDR(SHWLIST);           /* POINT TO SHOW PARAMETER LIST  */
         LA    GPR02P,SHWLIST                                      0051
*   GPR03P=ADDR(DMCBRPLF);          /* ADDRESS FEEDBACK FIELD        */
         LA    GPR03P,DMCBRPLF(,DMCBPTR)                           0052
*   GEN SETS(DMCBRPLF,GPR15F,SHWLIST);                             0053
         SHOWCB RPL=(GPR08P),AREA=(GPR03P),LENGTH=4,                   *
               FIELDS=(FDBK),MF=(G,(GPR02P))
*   RFY                                                            0054
*    (GPR08P,                                                      0054
*     GPR02P,                                                      0054
*     GPR03P,                                                      0054
*     GPR15F) UNRSTD;                                              0054
*   DO;                             /* ABEND(F141C) DUMP USER        */
*     RESPECIFY                                                    0056
*      (GPR01F) RESTRICTED;                                        0056
*     GPR01F=(F141C)&'00000FFF'X;   /* COMP CODE IN BITS 20-31       */
         LA    GPR01F,141                                          0057
*     GPR01F=GPR01F×'80000000'X;    /* DUMP/STEP/DUMPOPTS FLAG       */
         O     GPR01F,@CF00227                                     0058
*     SVC(13);                      /* ISSUE ABEND SVC               */
         SVC   13                                                  0059
*     RESPECIFY                                                    0060
*      (GPR01F) UNRESTRICTED;                                      0060
*   END;                            /* ABEND(F141C) DUMP USER      0061
*                                      INDICATE DATA MANAGER FAILED  */
*   END VSMLERR;                                                   0062
@EL00002 DS    0H                                                  0062
@EF00002 DS    0H                                                  0062
@ER00002 LM    @14,@12,@SA00002                                    0062
         BR    @14                                                 0062
         EJECT
*                                                                  0063
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF EXECUTABLE PROCEDURE STATEMENTS                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0063
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR01F FIXED(31) REG(1),                                     0063
*     GPR15F FIXED(31) REG(15),                                    0063
*     GPR00P PTR(31) REG(0),                                       0063
*     GPR01P PTR(31) REG(1),                                       0063
*     GPR02P PTR(31) REG(2),                                       0063
*     GPR03P PTR(31) REG(3),                                       0063
*     GPR08P PTR(31) REG(8);                                       0063
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0064
*     I031F FIXED(31) BASED,                                       0064
*     I031P PTR(31) BASED,                                         0064
*     I015F FIXED(15) BASED,                                       0064
*     I015P PTR(15) BASED,                                         0064
*     I008P PTR(8) BASED,                                          0064
*     I001C CHAR(1) BASED;                                         0064
*   DCL                                                            0065
*     1 DASPATCH LOCAL BDY(DWORD),  /* PATCH AREA                    */
*      2 DASPATA(DASPATLN) PTR INIT((DASPATLN)0);                  0065
*   END BLSCENDD;                                                  0066
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00002 DS    15F
BLSCENDD CSECT
         DS    0F
@CF00037 DC    F'4'
@CF00044 DC    F'8'
@CF00206 DC    F'12'
@CF00227 DC    XL4'80000000'
@DATD    DSECT
         DS    0D
MODSTAT  DS    CL12
         ORG   MODSTAT
MODNAME  DS    CL8
SUBCODE  DS    FL4
         ORG   MODSTAT+12
         DS    CL4
SHWLIST  DS    CL28
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSCENDD CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00197 DC    V(BLSCSETT)
         DS    0D
@CC00220 DC    C'BLSCENDD'
DASPATCH DS    CL80
         ORG   DASPATCH
DASPATA  DC    20A(0)
         ORG   DASPATCH+80
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
DMCBPTR  EQU   @05
GPR01P   EQU   @01
GPR15F   EQU   @15
GPR01F   EQU   @01
GPR08P   EQU   @08
GPR02P   EQU   @02
GPR03P   EQU   @03
GPR00P   EQU   @00
DMCB     EQU   0
DMCBRTC  EQU   DMCB+12
DMCBFTY  EQU   DMCB+20
DMCBVSF  EQU   DMCBFTY
DMCBOPN  EQU   DMCB+21
DMCBSIN  EQU   DMCBOPN
DMCBSOUT EQU   DMCBOPN
DMCBRMOD EQU   DMCB+23
DMCBOUT  EQU   DMCBRMOD
DMCBOPTS EQU   DMCB+24
DMCBGKY  EQU   DMCBOPTS
DMCBMFLG EQU   DMCB+28
DMCBREJ  EQU   DMCB+29
DMCBBUFP EQU   DMCB+32
DMCBKEYP EQU   DMCB+44
DMCBFRE  EQU   DMCB+88
DMCBEOB  EQU   DMCB+92
DMCBACBE EQU   DMCB+124
DMCBRPLF EQU   DMCB+128
DMCBSPEC EQU   DMCB+380
DMCBSUBC EQU   DMCB+404
DMCBAMS  EQU   DMCB+416
DMCBAUDT EQU   DMCB+568
DMCBLSCP EQU   DMCBAUDT+16
DMCBRQC  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
DMCBVSM  EQU   DMCBAMS
DMCBRPL  EQU   DMCBVSM
DMCBQSM  EQU   DMCBAMS
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
DMCBRES7 EQU   DMCBQSM+96
DMCBDCB  EQU   DMCBQSM
DMCBACB  EQU   DMCBVSM+76
DMCBWRK  EQU   DMCB+648
DMCBRES8 EQU   DMCB+640
DMCBMODN EQU   DMCB+632
DMCBCARY EQU   DMCBAUDT+20
DMCBCLC  EQU   DMCBAUDT+12
DMCBOPC  EQU   DMCBAUDT+8
DMCBFRC  EQU   DMCBAUDT+4
DMCBALC  EQU   DMCBAUDT
DMCBFR   EQU   DMCB+412
DMCBRES6 EQU   DMCB+410
DMCBIRSC EQU   DMCB+408
DMCBDRBP EQU   DMCB+400
DMCBRSZM EQU   DMCB+398
DMCBRSZA EQU   DMCB+396
DMCBCISZ EQU   DMCB+394
DMCBDCBL EQU   DMCB+392
DMCBDCLR EQU   DMCB+390
DMCBDCFM EQU   DMCB+389
DMCBRES5 EQU   DMCB+388
DMCBLBRT EQU   DMCB+386
DMCBLBSQ EQU   DMCB+384
DMCBLBPS EQU   DMCB+383
DMCBLBTY EQU   DMCB+382
DMCBRES4 EQU   DMCB+381
DMCBSPRS EQU   DMCBSPEC
DMCBSPRN EQU   DMCBSPEC
DMCBSPCT EQU   DMCBSPEC
DMCBSPRL EQU   DMCBSPEC
DMCBSPSE EQU   DMCB+376
DMCBSPPR EQU   DMCB+372
DMCBSPTY EQU   DMCB+369
DMCBODIS EQU   DMCB+368
DMCBDISP EQU   DMCB+367
DMCBSTAT EQU   DMCB+366
DMCBRES3 EQU   DMCB+364
DMCBMEMB EQU   DMCB+356
DMCBMODL EQU   DMCB+348
DMCBRES9 EQU   DMCB+340
DMCBPID  EQU   DMCB+332
DMCBTYPE EQU   DMCB+328
DMCBDSN  EQU   DMCB+284
DMCBUNIT EQU   DMCB+276
DMCBDSOR EQU   DMCB+274
DMCBVOL  EQU   DMCB+268
DMCBDDNM EQU   DMCB+260
DMCBSYNM EQU   DMCB+132
DMCBDCBE EQU   DMCBACBE
DMCBARC  EQU   DMCB+120
DMCBCPC  EQU   DMCB+116
DMCBRET  EQU   DMCB+112
DMCBSTL  EQU   DMCB+96
DMCBRES2 EQU   DMCB+85
DMCBSPID EQU   DMCB+84
DMCBRESC EQU   DMCB+80
DMCBZZ1P EQU   DMCB+76
DMCBMSGS EQU   DMCB+72
DMCBMSG0 EQU   DMCB+68
DMCBRI   EQU   DMCB+64
DMCBRRL  EQU   DMCB+60
DMCBRBA  EQU   DMCB+56
DMCBMSG  EQU   DMCB+52
DMCBKEYL EQU   DMCB+48
DMCBKPC  EQU   DMCBKEYP
DMCBORL  EQU   DMCB+40
DMCBBLEN EQU   DMCB+36
DMCBBFPC EQU   DMCBBUFP
DMCBRES1 EQU   DMCB+31
DMCBACCM EQU   DMCB+30
DMCBRESB EQU   DMCBMFLG
DMCBFMOD EQU   DMCBMFLG
DMCBLOPT EQU   DMCB+27
DMCBLRM  EQU   DMCB+26
DMCBLRQ  EQU   DMCB+25
DMCBOPRS EQU   DMCBOPTS
DMCBLRD  EQU   DMCBOPTS
DMCBBWD  EQU   DMCBOPTS
DMCBUPD  EQU   DMCBOPTS
DMCBAPX  EQU   DMCBOPTS
DMCBRNO  EQU   DMCBGKY
DMCBKYD  EQU   DMCBOPTS
DMCBRMRS EQU   DMCBRMOD
DMCBRM5  EQU   DMCBRMOD
DMCBRM6  EQU   DMCBRMOD
DMCBTMP  EQU   DMCBOUT
DMCBRQST EQU   DMCB+22
DMCBRESA EQU   DMCBOPN
DMCBKSF  EQU   DMCBFTY
DMCBFTRS EQU   DMCBFTY
DMCBSHF  EQU   DMCBFTY
DMCBIRL  EQU   DMCB+16
DMCBTVP  EQU   DMCB+8
DMCBNEXT EQU   DMCB+4
DMCBID   EQU   DMCB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00027 EQU   @EL00001
@RF00021 EQU   @EL00001
@RC00034 EQU   @EL00001
@RF00037 EQU   @EL00001
@ENDDATA EQU   *
         END   BLSCENDD,(C'PLS1903',0701,78062)
