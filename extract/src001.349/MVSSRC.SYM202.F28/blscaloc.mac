         TITLE 'EP=BLSCALOC -- DATA ACCESS SERVICES ALLOCATION TOP LEVE*
               EL       '
*     /* CHANGE ACTIVITY
*  THIS MODULE IS WRITTEN FOR @G57LPSR
BLSCALOC CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'BLSCALOC  78.066'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         BLSUALLS R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         EJECT
*                                                                  0122
*   /*****************************************************************/
*   /*                                                               */
*   /* HANDLE CONDITIONAL ALLOCATE REQUEST                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0122
*   MODNAME=LMODNMC;                /* INIT THE MODULE NAME          */
         MVC   MODNAME(8),@CC00977                                 0122
*   RETCODE=F0C;                    /* INIT THE MODULE RETURN CODE   */
         SLR   @10,@10                                             0123
         ST    @10,RETCODE                                         0123
*   SUBCODE=F0C;                    /* INIT THE SUBROUTINE RETURN  0124
*                                      CODE                          */
         ST    @10,SUBCODE                                         0124
*   RESPECIFY                                                      0125
*     GPR13P RESTRICTED;                                           0125
*   PLISTPTR=CSAVR1;                /* BASE THE REQST PARAMETER LIST */
         L     @15,MSAVHSA(,GPR13P)                                0126
         L     PLISTPTR,CSAVR1(,@15)                               0126
*   RESPECIFY                                                      0127
*     GPR13P UNRESTRICTED;                                         0127
*   IF OPNP->I008P=DMCBCONA&        /* TEST FOR CONDITIONAL ALLOCATE */
*       DMCBP^=ZZZNULL&             /* AND DMCB POINTER NOT NULL     */
*       DMCBP^=F0C THEN             /* AND DMCB POINTER NOT ZERO     */
         L     @06,OPNP(,PLISTPTR)                                 0128
         CLI   I008P(@06),3                                        0128
         BNE   @RF00128                                            0128
         L     @06,DMCBPP(,PLISTPTR)                               0128
         L     @06,DMCBP(,@06)                                     0128
         CL    @06,@CF00059                                        0128
         BE    @RF00128                                            0128
         CR    @06,@10                                             0128
         BE    @RF00128                                            0128
*     DO;                           /* DAS WORK AREA MAY BE ALLOCATED*/
         ST    @06,@TF00001                                        0129
*       DMCBPTR=DMCBP;              /* BASE THE DMCB CANDIDATE       */
         L     DMCBPTR,@TF00001                                    0130
*       IF DMCBID^=LDMCBC THEN      /* TEST FOR VALID DMCB           */
         CLC   DMCBID(4,DMCBPTR),@CC00979                          0131
         BE    @RF00131                                            0131
*         DO;                       /* INVALID DMCB                  */
*           RETCODE=INVDMCB;        /* RETURN TO CALLER              */
         LA    @14,16                                              0133
         ST    @14,RETCODE                                         0133
*           RESPECIFY                                              0134
*             GPR13P RESTRICTED;                                   0134
*           CSAVR0=F0C;             /* ZERO THE MESSAGE CHAIN POINTER*/
         ST    @10,CSAVR0(,@15)                                    0135
*           RESPECIFY                                              0136
*             GPR13P UNRESTRICTED;                                 0136
*           RETURN CODE(RETCODE);   /* RETURN TO CALLER              */
         LR    @10,@14                                             0137
         L     @13,4(,@13)                                         0137
         L     @00,@SIZDATD                                        0137
         LR    @01,@11                                             0137
         BLSUFRES R,LV=(0),A=(1)
         LR    @15,@10                                             0137
         L     @14,12(,@13)                                        0137
         LM    @00,@12,20(@13)                                     0137
         BR    @14                                                 0137
*         END;                      /* INVALID DMCB                  */
*       ELSE                                                       0139
*         DO;                       /* VALID DMCB                    */
@RF00131 DS    0H                                                  0140
*           CALL BLSCADST(DMCB,PLIST);/* TEST THAT REQUESTED DATA SET
*                                      MATCHES DMCB ADDR             */
         ST    DMCBPTR,@AL00001                                    0140
         ST    PLISTPTR,@AL00001+4                                 0140
         L     @15,@CV00939                                        0140
         LA    @01,@AL00001                                        0140
         BALR  @14,@15                                             0140
*           RETCODE=SUBCODE;                                       0141
         L     @10,SUBCODE                                         0141
         ST    @10,RETCODE                                         0141
*         END;                      /* VALID DMCB                    */
*       RESPECIFY                                                  0143
*         GPR13P RESTRICTED;                                       0143
*       CSAVR0=F0C;                 /* ZERO THE MESSAGE CHAIN POINTER*/
         L     @01,MSAVHSA(,GPR13P)                                0144
         SLR   @00,@00                                             0144
         ST    @00,CSAVR0(,@01)                                    0144
*       RESPECIFY                                                  0145
*         GPR13P UNRESTRICTED;                                     0145
*       RETURN CODE(RETCODE);       /* RETURN TO CALLER              */
         L     @13,4(,@13)                                         0146
         L     @00,@SIZDATD                                        0146
         LR    @01,@11                                             0146
         BLSUFRES R,LV=(0),A=(1)
         LR    @15,@10                                             0146
         L     @14,12(,@13)                                        0146
         LM    @00,@12,20(@13)                                     0146
         BR    @14                                                 0146
*     END;                          /* DAS WORK AREA MAY BE ALLOCATED*/
         EJECT
*                                                                  0148
*   /*****************************************************************/
*   /*                                                               */
*   /* ALLOCATE THE DAS WORKAREA                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0148
*   DO;                             /* GETMAIN (RC) LV(DASWALEN)   0148
*                                      SP(ZZZSPSHR) RTCD(SUBCODE)    */
@RF00128 DS    0H                                                  0149
*     RESPECIFY                                                    0149
*      (GPR01F,                                                    0149
*       GPR15F,                                                    0149
*       GPR00F) RESTRICTED;                                        0149
*     GPR01F=0;                     /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                       0150
*     GPR15F=0;                     /* RC-TYPE GETMAIN               */
         SLR   GPR15F,GPR15F                                       0151
*     GPR00F=DASWALEN;              /* LENGTH REQUESTED              */
         L     GPR00F,DASWALEN                                     0152
*     GPR15F=GPR15F×((ZZZSPSHR)*256);/* SP IN BYTE 2                 */
         O     GPR15F,@CF01026                                     0153
*     SVC(120);                     /* RC/RU-FORM OF GETMAIN         */
         SVC   120                                                 0154
*     SUBCODE=GPR15F;               /* SET RETURN CODE               */
         ST    GPR15F,SUBCODE                                      0155
*     RESPECIFY                                                    0156
*      (GPR01F,                                                    0156
*       GPR15F,                                                    0156
*       GPR00F) UNRESTRICTED;                                      0156
*   END;                            /* GETMAIN (RC) LV(DASWALEN)   0157
*                                      SP(ZZZSPSHR) RTCD(SUBCODE) DAS
*                                      WORK AREA                     */
*   RESPECIFY                                                      0158
*     GPR01P RESTRICTED;                                           0158
*   DMCBPTR=GPR01P;                 /* SET THE DAS CONTROL BLOCK BASE
*                                      POINTER                       */
         LR    DMCBPTR,GPR01P                                      0159
*   RESPECIFY                                                      0160
*     GPR01P UNRESTRICTED;                                         0160
*   IF SUBCODE^=F0C THEN            /* TEST FOR GETMAIN ERROR        */
         L     @10,SUBCODE                                         0161
         SLR   @15,@15                                             0161
         CR    @10,@15                                             0161
         BE    @RF00161                                            0161
*     DO;                           /* GETMAIN ERROR                 */
*       RETCODE=NOSPACE;            /* GETMAIN FAILED                */
         LA    @10,12                                              0163
         ST    @10,RETCODE                                         0163
*       RESPECIFY                                                  0164
*         GPR13P RESTRICTED;                                       0164
*       CSAVR0=F0C;                 /* ZERO MESSAGE CHAIN POINTER    */
         L     @01,MSAVHSA(,GPR13P)                                0165
         ST    @15,CSAVR0(,@01)                                    0165
*       RESPECIFY                                                  0166
*         GPR13P UNRESTRICTED;                                     0166
*       RETURN CODE(RETCODE);       /* RETURN TO CALLER              */
         L     @13,4(,@13)                                         0167
         L     @00,@SIZDATD                                        0167
         LR    @01,@11                                             0167
         BLSUFRES R,LV=(0),A=(1)
         LR    @15,@10                                             0167
         L     @14,12(,@13)                                        0167
         LM    @00,@12,20(@13)                                     0167
         BR    @14                                                 0167
*     END;                          /* GETMAIN ERROR                 */
*   ELSE                                                           0169
*     DO;                           /* GETMAIN SUCCESSFUL            */
*                                                                  0169
@RF00161 DS    0H                                                  0170
*       /*************************************************************/
*       /*                                                           */
*       /* ZERO THE WORKAREA                                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0170
*       RESPECIFY                                                  0170
*        (GPR00P,                                                  0170
*         GPR01F,                                                  0170
*         GPR14P,                                                  0170
*         GPR15F) RESTRICTED;                                      0170
*       GPR14P=DMCBPTR;             /* WORKAREA POINTER              */
         LR    GPR14P,DMCBPTR                                      0171
*       GPR15F=DASWALEN;            /* WORKAREA LENGTH               */
         L     GPR15F,DASWALEN                                     0172
*       GPR00P=F0C;                 /* NULL FROM POINTER             */
         SLR   GPR00P,GPR00P                                       0173
*       GPR01F=F0C;                 /* FROM LENGTH AND PAD IS ZERO   */
         SLR   GPR01F,GPR01F                                       0174
*       MVCL(GPR14P,GPR00P);        /* ZERO THE WORK AREA            */
         MVCL  GPR14P,GPR00P                                       0175
*       RESPECIFY                                                  0176
*        (GPR00P,                                                  0176
*         GPR01F,                                                  0176
*         GPR14P,                                                  0176
*         GPR15F) UNRESTRICTED;                                    0176
*                                                                  0176
*       /*************************************************************/
*       /*                                                           */
*       /* SUBALLOCATE THE DMCB INCLUDING THE DMAL                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0177
*       DMCBP=DMCBPTR;              /* INIT USER'S DMCB POINTER      */
         L     @10,DMCBPP(,PLISTPTR)                               0177
         ST    DMCBPTR,DMCBP(,@10)                                 0177
*       DMCBEOB=DMCBPTR+DASWALEN;   /* INIT END OF WORK AREA         */
         L     @10,DASWALEN                                        0178
         LR    @15,DMCBPTR                                         0178
         ALR   @15,@10                                             0178
         ST    @15,DMCBEOB(,DMCBPTR)                               0178
*       DMCBFRE=DMCBPTR+(F7C+LENGTH(DMCB)+LENGTH(DMAL)&XDWBDYC);/* 0179
*                                      INCREMENT FREE AREA ADDRESS   */
         LA    @14,1848                                            0179
         ALR   @14,DMCBPTR                                         0179
         ST    @14,DMCBFRE(,DMCBPTR)                               0179
*       IF DMCBFRE>=DMCBEOB THEN    /* TEST IF WORKAREA TOO SMALL    */
         CR    @14,@15                                             0180
         BL    @RF00180                                            0180
*         DO;                       /* WORKAREA TOO SMALL            */
*           RETCODE=NOSPACE;        /* MARK ERROR                    */
         MVC   RETCODE(4),@CF00048                                 0182
*           DO;                     /* FREEMAIN(R) LV(DASWALEN)SP(ZZZ
*                                      SPSHR)A(DMCB)                 */
*             RESPECIFY                                            0184
*              (GPR01F,                                            0184
*               GPR00F) RESTRICTED;                                0184
*             GPR00F=DASWALEN;      /* LENGTH REQUESTED              */
         LR    GPR00F,@10                                          0185
*             GPR01F=ZZZSPSHR;      /* SP IN REG 1                   */
         LA    GPR01F,77                                           0186
*             GEN(SLL   GPR01F,24)                                 0187
*             NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;         0187
         SLL   GPR01F,24
*             GPR00F=GPR00F×GPR01F; /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                       0188
*             GPR01F=ADDR(DMCB);    /* SET REGISTER ONE              */
         LR    GPR01F,DMCBPTR                                      0189
*             SVC(10);              /* R-FORM OF GETMAIN             */
         SVC   10                                                  0190
*             RESPECIFY                                            0191
*              (GPR01F,                                            0191
*               GPR00F) UNRESTRICTED;                              0191
*           END;                    /* FREEMAIN(R) LV(DASWALEN)SP(ZZZ
*                                      SPSHR)A(DMCB) DAS WORK AREA   */
*           RESPECIFY                                              0193
*             GPR13P RESTRICTED;                                   0193
*           CSAVR0=F0C;             /* ZERO MESSAGE CHAIN POINTER    */
         L     @10,MSAVHSA(,GPR13P)                                0194
         SLR   @15,@15                                             0194
         ST    @15,CSAVR0(,@10)                                    0194
*           RESPECIFY                                              0195
*             GPR13P UNRESTRICTED;                                 0195
*           RETURN CODE(RETCODE);                                  0196
         L     @10,RETCODE                                         0196
         L     @13,4(,@13)                                         0196
         L     @00,@SIZDATD                                        0196
         LR    @01,@11                                             0196
         BLSUFRES R,LV=(0),A=(1)
         LR    @15,@10                                             0196
         L     @14,12(,@13)                                        0196
         LM    @00,@12,20(@13)                                     0196
         BR    @14                                                 0196
*         END;                      /* WORKAREA TOO SMALL            */
*     END;                          /* GETMAIN SUCCESSFUL            */
@RF00180 DS    0H                                                  0199
         EJECT
*                                                                  0199
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE FOR DATA SET ALLOCATION                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0199
*   RESPECIFY                                                      0199
*     GPR13P RESTRICTED;                                           0199
*   DMCBALC=CSAVR14;                /* REMEMBER WHERE CALLED FROM    */
         L     @10,MSAVHSA(,GPR13P)                                0200
         L     @10,CSAVR14(,@10)                                   0200
         ST    @10,DMCBALC(,DMCBPTR)                               0200
*   RESPECIFY                                                      0201
*     GPR13P UNRESTRICTED;                                         0201
*   DMALMODA=MODELP;                /* INITIALIZE THE ALLOCATION   0202
*                                      MODEL NAME ADDRESS            */
         L     @10,MODELP(,PLISTPTR)                               0202
         ST    @10,DMALMODA(,DMCBPTR)                              0202
*   DMCBACCM=ACMODP->I008P;         /* MAXIMUM ACCESS MODE           */
         L     @10,ACMODP(,PLISTPTR)                               0203
         IC    @15,I008P(,@10)                                     0203
         STC   @15,DMCBACCM(,DMCBPTR)                              0203
*   DMCBRQST=OPNP->I008P;           /* FUNCTION REQUESTED            */
         L     @10,OPNP(,PLISTPTR)                                 0204
         IC    @15,I008P(,@10)                                     0204
         STC   @15,DMCBRQST(,DMCBPTR)                              0204
*   IF OPNPVL=ON THEN               /* TEST FOR END OF LIST--NO MODEL
*                                      OVERRIDES                     */
         TM    OPNPVL(PLISTPTR),B'10000000'                        0205
         BNO   @RF00205                                            0205
*     DMALPRMP=F0C;                 /* MARK THERE ARE NO OVERRIDES   */
         SLR   @10,@10                                             0206
         ST    @10,DMALPRMP(,DMCBPTR)                              0206
*   ELSE                                                           0207
*     DMALPRMP=ADDR(ALPARMS);       /* ALLOCATION OVERRIDE PARMS ADDR*/
         B     @RC00205                                            0207
@RF00205 LA    @10,ALPARMS(,PLISTPTR)                              0207
         ST    @10,DMALPRMP(,DMCBPTR)                              0207
*   DMCBNEXT=ZZZNULL;               /* INIT THE DMCB CHAIN NEXT PTR  */
@RC00205 MVC   DMCBNEXT(4,DMCBPTR),@CF00059                        0208
*   DMCBTVP=ZZ2P;                   /* BLSUZZ2 POINTER               */
         L     @10,ZZ2P(,PLISTPTR)                                 0209
         ST    @10,DMCBTVP(,DMCBPTR)                               0209
*   DMCBZZ1P=ZZ2ZZ1P;               /* BLSUZZ1 ADDRESS               */
         L     @15,ZZ2ZZ1P(,@10)                                   0210
         ST    @15,DMCBZZ1P(,DMCBPTR)                              0210
*   DMCBSPID=ZZZSPSHR;              /* DAS GLOBAL SUB-POOL ID        */
         MVI   DMCBSPID(DMCBPTR),X'4D'                             0211
*   DMCBMSG0=ZZ2MSG0P;              /* PM/DM MSG BUILD AND ROUTE EP  */
         L     @15,ZZ2MSG0P(,@10)                                  0212
         ST    @15,DMCBMSG0(,DMCBPTR)                              0212
*   DMCBMSGS=ZZ2MSGSP;              /* PM/DM MESSAGE TEXT CSECT ADDR */
         L     @10,ZZ2MSGSP(,@10)                                  0213
         ST    @10,DMCBMSGS(,DMCBPTR)                              0213
*   RESPECIFY                                                      0214
*    (GPR01P,                                                      0214
*     GPR15F) RESTRICTED;                                          0214
*   GPR01P=DMCBPTR;                 /* PASS DMCB ADDRESS             */
         LR    GPR01P,DMCBPTR                                      0215
*   CALL BLSCAINT;                  /* PERFORM DATA SET ALLOCATION 0216
*                                      INITIALIZATION                */
         L     @15,@CV00935                                        0216
         BALR  @14,@15                                             0216
*   SUBCODE=GPR15F;                 /* SAVE SUBROUTINE RETURN CODE   */
         ST    GPR15F,SUBCODE                                      0217
*   RESPECIFY                                                      0218
*    (GPR01P,                                                      0218
*     GPR15F) UNRESTRICTED;                                        0218
*   IF SUBCODE^=F0C THEN            /* TEST FOR SUBROUTINE ERROR     */
         L     @10,SUBCODE                                         0219
         LTR   @10,@10                                             0219
         BZ    @RF00219                                            0219
*     DO;                           /* DATA SET ALLOCATION         0220
*                                      INITIALIZATION FAILED         */
*       RETCODE=ERROR;                                             0221
         MVC   RETCODE(4),@CF00046                                 0221
*     END;                          /* DATA SET ALLOCATION         0222
*                                      INITIALIZATION FAILED         */
         EJECT
*                                                                  0223
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD DYNALLOC TEXT UNITS FROM ALLOCATION OVERRIDE PARMS      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0223
*   IF RETCODE=F0C THEN             /* TEST WHETHER TO CONTINUE      */
@RF00219 L     @10,RETCODE                                         0223
         LTR   @10,@10                                             0223
         BNZ   @RF00223                                            0223
*     DO;                           /* BUILD DYNALLOC TEXT UNITS FROM
*                                      ALLOCATION OVERRIDE PARMS     */
*       RESPECIFY                                                  0225
*        (GPR01P,                                                  0225
*         GPR15F) RESTRICTED;                                      0225
*       GPR01P=DMCBPTR;             /* PASS DMCB ADDRESS             */
         LR    GPR01P,DMCBPTR                                      0226
*       CALL BLSCABLD;              /* BUILD DYNALLOC TEXT UNITS FROM
*                                      ALLOC OVRIDE PARMS            */
         L     @15,@CV00936                                        0227
         BALR  @14,@15                                             0227
*       SUBCODE=GPR15F;             /* SAVE SUBROUTINE RETURN CODE   */
         ST    GPR15F,SUBCODE                                      0228
*       RESPECIFY                                                  0229
*        (GPR01P,                                                  0229
*         GPR15F) UNRESTRICTED;                                    0229
*       IF SUBCODE^=F0C THEN        /* TEST FOR SUBROUTINE ERROR     */
         L     @10,SUBCODE                                         0230
         LTR   @10,@10                                             0230
         BZ    @RF00230                                            0230
*         DO;                       /* DYNALLOC PARMLIST BUILD FAILED*/
*           RETCODE=ERROR;                                         0232
         MVC   RETCODE(4),@CF00046                                 0232
*         END;                      /* DYNALLOC PARMLIST BUILD FAILED*/
*     END;                          /* BUILD DYNALLOC TEXT UNITS FROM
*                                      ALLOCATION OVERRIDE PARMS     */
@RF00230 DS    0H                                                  0235
         EJECT
*                                                                  0235
*   /*****************************************************************/
*   /*                                                               */
*   /* MERGE ALLOCATION OVERRIDE PARAMETERS WITH MODEL               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0235
*   IF RETCODE=F0C THEN             /* TEST WHETHER TO CONTINUE      */
@RF00223 L     @10,RETCODE                                         0235
         LTR   @10,@10                                             0235
         BNZ   @RF00235                                            0235
*     DO;                           /* MERGE ALLOCATION OVERRIDE   0236
*                                      PARAMETERS WITH MODEL         */
*       RESPECIFY                                                  0237
*        (GPR01P,                                                  0237
*         GPR15F) RESTRICTED;                                      0237
*       GPR01P=DMCBPTR;             /* PASS DMCB ADDRESS             */
         LR    GPR01P,DMCBPTR                                      0238
*       CALL BLSCAMER;              /* DO PARMLIST MERGE WITH MODEL  */
         L     @15,@CV00937                                        0239
         BALR  @14,@15                                             0239
*       SUBCODE=GPR15F;             /* SAVE SUBROUTINE RETURN CODE   */
         ST    GPR15F,SUBCODE                                      0240
*       RESPECIFY                                                  0241
*        (GPR01P,                                                  0241
*         GPR15F) UNRESTRICTED;                                    0241
*       IF SUBCODE^=F0C THEN        /* TEST FOR SUBROUTINE ERROR     */
         L     @10,SUBCODE                                         0242
         LTR   @10,@10                                             0242
         BZ    @RF00242                                            0242
*         DO;                       /* PARM LIST MERGE WITH MODEL  0243
*                                      FAILED                        */
*           RETCODE=ERROR;                                         0244
         MVC   RETCODE(4),@CF00046                                 0244
*         END;                      /* PARM LIST MERGE WITH MODEL  0245
*                                      FAILED                        */
*     END;                          /* MERGE ALLOCATION OVERRIDE   0246
*                                      PARAMETERS WITH MODEL         */
@RF00242 DS    0H                                                  0247
         EJECT
*                                                                  0247
*   /*****************************************************************/
*   /*                                                               */
*   /* OBTAIN VSAM DASD SPACE USING ACCESS METHOD SERVICES           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0247
*   IF RETCODE=F0C&                 /* TEST WHETHER TO GET VSAM SPACE*/
*       DMCBSTAT=STATNEW&           /* DATA SET STATUS = NEW         */
*       DMCBVSF=ON THEN             /* VSAM ACCESS METHOD            */
@RF00235 L     @10,RETCODE                                         0247
         LTR   @10,@10                                             0247
         BNZ   @RF00247                                            0247
         CLI   DMCBSTAT(DMCBPTR),4                                 0247
         BNE   @RF00247                                            0247
         TM    DMCBVSF(DMCBPTR),B'00000001'                        0247
         BNO   @RF00247                                            0247
*     DO;                           /* OBTAIN VSAM DASD SPACE USING
*                                      ACCESS METHOD SERVICES        */
*       RESPECIFY                                                  0249
*        (GPR01P,                                                  0249
*         GPR15F) RESTRICTED;                                      0249
*       GPR01P=DMCBPTR;             /* PASS DMCB ADDRESS             */
         LR    GPR01P,DMCBPTR                                      0250
*       CALL BLSCAAMS;              /* PERFORM GET VSAM DASD SPACE   */
         L     @15,@CV00938                                        0251
         BALR  @14,@15                                             0251
*       SUBCODE=GPR15F;             /* SAVE SUBROUTINE RETURN CODE   */
         ST    GPR15F,SUBCODE                                      0252
*       RESPECIFY                                                  0253
*        (GPR01P,                                                  0253
*         GPR15F) UNRESTRICTED;                                    0253
*       IF SUBCODE^=F0C THEN        /* TEST FOR SUBROUTINE ERROR     */
         L     @10,SUBCODE                                         0254
         LTR   @10,@10                                             0254
         BZ    @RF00254                                            0254
*         DO;                       /* GET VSAM DASD SPACE FAILED    */
*           RETCODE=ERROR;                                         0256
         MVC   RETCODE(4),@CF00046                                 0256
*         END;                      /* GET VSAM DASD SPACE FAILED    */
*     END;                          /* OBTAIN VSAM DASD SPACE USING
*                                      ACCESS METHOD SERVICES        */
@RF00254 DS    0H                                                  0259
         EJECT
*                                                                  0259
*   /*****************************************************************/
*   /*                                                               */
*   /* PERFORM DYNAMIC ALLOCATION FUNCTION                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0259
*   IF RETCODE=F0C THEN             /* TEST WHETHER TO CONTINUE      */
@RF00247 L     @10,RETCODE                                         0259
         LTR   @10,@10                                             0259
         BNZ   @RF00259                                            0259
*     DO;                           /* PERFORM DYNAMIC ALLOCATION  0260
*                                      FUNCTION                      */
*       RESPECIFY                                                  0261
*        (GPR01P,                                                  0261
*         GPR15F) RESTRICTED;                                      0261
*       GPR01P=DMCBPTR;             /* PASS DMCB ADDRESS             */
         LR    GPR01P,DMCBPTR                                      0262
*       CALL BLSCADYN;              /* DO DYNAMIC ALLOCATION FUNCTION*/
         L     @15,@CV00940                                        0263
         BALR  @14,@15                                             0263
*       SUBCODE=GPR15F;             /* SAVE SUBROUTINE RETURN CODE   */
         ST    GPR15F,SUBCODE                                      0264
*       RESPECIFY                                                  0265
*        (GPR01P,                                                  0265
*         GPR15F) UNRESTRICTED;                                    0265
*       IF SUBCODE^=F0C THEN        /* TEST FOR SUBROUTINE ERROR     */
         L     @10,SUBCODE                                         0266
         LTR   @10,@10                                             0266
         BZ    @RF00266                                            0266
*         DO;                       /* DYNAMIC ALLOCATION FUNCTION 0267
*                                      FAILED                        */
*           RETCODE=ERROR;                                         0268
         MVC   RETCODE(4),@CF00046                                 0268
*         END;                      /* DYNAMIC ALLOCATION FUNCTION 0269
*                                      FAILED                        */
*     END;                          /* PERFORM DYNAMIC ALLOCATION  0270
*                                      FUNCTION                      */
@RF00266 DS    0H                                                  0271
         EJECT
*                                                                  0271
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP TO RETURN TO CALLER                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0271
*   RESPECIFY                                                      0271
*     GPR13P RESTRICTED;                                           0271
@RF00259 DS    0H                                                  0272
*   CSAVR0=DMCBMSG;                 /* PASS MESSAGE CHAIN TO CALLER  */
         L     @10,MSAVHSA(,GPR13P)                                0272
         L     @15,DMCBMSG(,DMCBPTR)                               0272
         ST    @15,CSAVR0(,@10)                                    0272
*   RESPECIFY                                                      0273
*     GPR13P UNRESTRICTED;                                         0273
         SPACE 2
*   IF RETCODE<ERROR THEN           /* TEST FOR SUCESSFUL ALLOCATION */
         L     @10,RETCODE                                         0274
         LA    @15,8                                               0274
         CR    @10,@15                                             0274
         BNL   @RF00274                                            0274
*     DO;                           /* SUCCESS RETURN TO CALLER      */
*                                                                  0275
*       /*************************************************************/
*       /*                                                           */
*       /* SUCCESFUL ALLOCATION, RETURN EXCESS DAS WORKAREA TO SYSTEM*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0276
*       DMCBRTC=RETCODE;            /* PUT RETURN CODE IN DMCB       */
         ST    @10,DMCBRTC(,DMCBPTR)                               0276
*       DMCBFRE=ADDR(DMCBWRK);      /* RETURN THE ALLOCATION WORK TO
*                                      DMCB FREE SPACE               */
         LA    @10,DMCBWRK(,DMCBPTR)                               0277
         ST    @10,DMCBFRE(,DMCBPTR)                               0277
*       ENDPTR=MAX(DMCBFRE+F8C,ADDR(DMCBWRK)+DASSIZE)+F7C&XDWBDYC;/*
*                                      CALCULATE NEW DMCBEOB VALUE.
*                                      THIS VALUE IS CONTROLLED BY 0278
*                                      THE STORAGE REQUIREMENTS OF 0278
*                                      DATA ACCESS SERVICES AFTER  0278
*                                      ALLOCATION IS COMPLETED       */
         ALR   @15,@10                                             0278
         AL    @10,DASSIZE                                         0278
         CR    @15,@10                                             0278
         BNL   *+6
         LR    @15,@10                                             0278
         AL    @15,@CF00415                                        0278
         N     @15,@CF00975                                        0278
         LR    ENDPTR,@15                                          0278
*       IF ENDPTR<DMCBEOB THEN      /* TEST IF DMCB CAN BE REDUCED   */
         L     @10,DMCBEOB(,DMCBPTR)                               0279
         CLR   ENDPTR,@10                                          0279
         BNL   @RF00279                                            0279
*         DO;                       /* DMCB SIZE CAN BE REDUCED      */
*           DO;                     /* FREEMAIN(R) LV(DMCBEOB-ENDPTR)
*                                      SP(ZZZSPSHR)A(ENDPTR->I256C)  */
*             RESPECIFY                                            0282
*              (GPR01F,                                            0282
*               GPR00F) RESTRICTED;                                0282
*             GPR00F=DMCBEOB-ENDPTR;/* LENGTH REQUESTED              */
         SLR   @10,ENDPTR                                          0283
         LR    GPR00F,@10                                          0283
*             GPR01F=ZZZSPSHR;      /* SP IN REG 1                   */
         LA    GPR01F,77                                           0284
*             GEN(SLL   GPR01F,24)                                 0285
*             NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;         0285
         SLL   GPR01F,24
*             GPR00F=GPR00F×GPR01F; /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                       0286
*             GPR01F=ADDR(ENDPTR->I256C);/* SET REGISTER ONE         */
         LR    GPR01F,ENDPTR                                       0287
*             SVC(10);              /* R-FORM OF GETMAIN             */
         SVC   10                                                  0288
*             RESPECIFY                                            0289
*              (GPR01F,                                            0289
*               GPR00F) UNRESTRICTED;                              0289
*           END;                    /* FREEMAIN(R) LV(DMCBEOB-ENDPTR)
*                                      SP(ZZZSPSHR)A(ENDPTR->I256C)
*                                      DAS EXCESS WORK AREA          */
*           DMCBEOB=ENDPTR;         /* MARK DMCB SIZE REDUCED        */
         ST    ENDPTR,DMCBEOB(,DMCBPTR)                            0291
*         END;                      /* DMCB SIZE CAN BE REDUCED      */
*                                                                  0292
*       /*************************************************************/
*       /*                                                           */
*       /* HOOK DMCB TO DMCB CHAIN ANCHORED AT ZZ1DMCBP              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0293
*       WORKPTR=ZZ1DMCBP;           /* INIT WORK PTR TO CHAIN ANCHOR
*                                      ADDR                          */
@RF00279 L     @10,ZZ2P(,PLISTPTR)                                 0293
         L     @10,ZZ2ZZ1P(,@10)                                   0293
         L     @15,ZZ1DMCBP(,@10)                                  0293
         LR    WORKPTR,@15                                         0293
*       IF ZZ1DMCBP=ZZZNULL THEN    /* TEST FOR EMPTY CHAIN          */
         CL    @15,@CF00059                                        0294
         BNE   @RF00294                                            0294
*         ZZ1DMCBP=DMCBPTR;         /* PUT FIRST DMCB ON CHAIN       */
         ST    DMCBPTR,ZZ1DMCBP(,@10)                              0295
*       ELSE                                                       0296
*         DO;                       /* NOT FIRST DMCB ON CHAIN       */
         B     @RC00294                                            0296
@RF00294 DS    0H                                                  0297
*           DO WHILE WORKPTR->DMCBNEXT^=ZZZNULL;/* FIND END OF CHAIN */
         B     @DE00297                                            0297
@DL00297 DS    0H                                                  0298
*             CALL TSTDMCB;         /* TEST FOR INVALID DMCB OR DMCB
*                                      POINTER                       */
         BAL   @14,TSTDMCB                                         0298
*             WORKPTR=WORKPTR->DMCBNEXT;/* BUMP TO NEXT DMCB         */
         L     WORKPTR,DMCBNEXT(,WORKPTR)                          0299
*           END;                    /* FIND END OF CHAIN             */
@DE00297 CLC   DMCBNEXT(4,WORKPTR),@CF00059                        0300
         BNE   @DL00297                                            0300
*           CALL TSTDMCB;           /* TEST FOR INVALID DMCB OR DMCB
*                                      POINTER                       */
         BAL   @14,TSTDMCB                                         0301
*           WORKPTR->DMCBNEXT=DMCBPTR;/* HOOK DMCB TO END OF CHAIN   */
         ST    DMCBPTR,DMCBNEXT(,WORKPTR)                          0302
*         END;                      /* NOT FIRST DMCB ON CHAIN       */
*     END;                          /* SUCCESS RETURN TO CALLER      */
*   ELSE                                                           0305
*     DO;                           /* ERROR RETURN TO CALLER        */
*                                                                  0305
         B     @RC00274                                            0305
@RF00274 DS    0H                                                  0306
*       /*************************************************************/
*       /*                                                           */
*       /* ALLOCATION ERROR, FREEMAIN THE DMCB                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0306
*       DMCBP=ZZZNULL;              /* NULL CALLER'S DMCB POINTER    */
         L     @10,DMCBPP(,PLISTPTR)                               0306
         MVC   DMCBP(4,@10),@CF00059                               0306
*       DMCBID=LBCMDC;              /* INVALIDATE THE DMCB           */
         MVC   DMCBID(4,DMCBPTR),@CC00981                          0307
*       DO;                         /* FREEMAIN(R) LV(DMCBEOB-ADDR(DM
*                                      CB))SP(ZZZSPSHR)A(DMCB)       */
*         RESPECIFY                                                0309
*          (GPR01F,                                                0309
*           GPR00F) RESTRICTED;                                    0309
*         GPR00F=DMCBEOB-ADDR(DMCB);/* LENGTH REQUESTED              */
         L     GPR00F,DMCBEOB(,DMCBPTR)                            0310
         SLR   GPR00F,DMCBPTR                                      0310
*         GPR01F=ZZZSPSHR;          /* SP IN REG 1                   */
         LA    GPR01F,77                                           0311
*         GEN(SLL   GPR01F,24)                                     0312
*         NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;             0312
         SLL   GPR01F,24
*         GPR00F=GPR00F×GPR01F;     /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                       0313
*         GPR01F=ADDR(DMCB);        /* SET REGISTER ONE              */
         LR    GPR01F,DMCBPTR                                      0314
*         SVC(10);                  /* R-FORM OF GETMAIN             */
         SVC   10                                                  0315
*         RESPECIFY                                                0316
*          (GPR01F,                                                0316
*           GPR00F) UNRESTRICTED;                                  0316
*       END;                        /* FREEMAIN(R) LV(DMCBEOB-ADDR(DM
*                                      CB))SP(ZZZSPSHR)A(DMCB)       */
*/*                                          DAS WORK AREA         0318
*                                                                    */
*                                                                  0318
*     END;                          /* ERROR RETURN TO CALLER        */
*   RETURN CODE(RETCODE);           /* RETURN TO CALLER              */
@RC00274 L     @10,RETCODE                                         0319
         L     @13,4(,@13)                                         0319
         L     @00,@SIZDATD                                        0319
         LR    @01,@11                                             0319
         BLSUFRES R,LV=(0),A=(1)
         LR    @15,@10                                             0319
         L     @14,12(,@13)                                        0319
         LM    @00,@12,20(@13)                                     0319
         BR    @14                                                 0319
         EJECT
*                                                                  0320
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOR INVALID DMCB OR DMCB POINTER                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0320
*TSTDMCB:                                                          0320
*   PROCEDURE;                      /* TEST FOR INVALID DMCB OR DMCB
*                                      POINTER                       */
TSTDMCB  STM   @14,@12,@SA00002                                    0320
*   IF WORKPTR->DMCBID^=LDMCBC THEN /* TEST FOR INVALID DMCB         */
         CLC   DMCBID(4,WORKPTR),@CC00979                          0321
         BE    @RF00321                                            0321
*     DO;                           /* INVALID DMCB OR DMCB POINTER  */
*       CHSTR847=WORKPTR;           /* DMCB POINTER                  */
         STCM  WORKPTR,15,CHSTR847                                 0323
*       CHSTR88=LHEX0FC;            /* TRANSLATE IT TO PRINTABLE HEX */
         MVI   CHSTR88,X'0F'                                       0324
*       UNPK(CTEMP,CHSTR8);                                        0325
         UNPK  CTEMP(9),CHSTR8(8)                                  0325
*       TR(CTEMP,HEXTBL);                                          0326
         TR    CTEMP(9),HEXTBL                                     0326
*       DO;                         /* BLSDMSG                     0327
*                                      (ZZ2,INVCB,DMCBMSG,BLSDMSGS)
*                                      INSERT(LDMCBC,LDMCBC,CTEMP18) */
*         IOPTLIST(1)=ADDR(IOPTLIST(4));/* CHAIN TO NEXT INSERT      */
         LA    @10,IOPTLIST+12                                     0328
         ST    @10,IOPTLIST                                        0328
*         IOPTLIST(2)=ADDR(LDMCBC); /* INSERT NAME POINTER           */
         LA    @10,@CC00979                                        0329
         ST    @10,IOPTLIST+4                                      0329
*         IOPTLIST(3)=0;            /* ZERO RESERVED FIELD           */
         SLR   @03,@03                                             0330
         ST    @03,IOPTLIST+8                                      0330
*         RFY                                                      0331
*           I015F BASED(ADDR(IOPTLIST(3)));/* ACCESS BYTES 1-2       */
*         I015F=LENGTH(LDMCBC);     /* INSERT LENGTH                 */
         LA    @15,4                                               0332
         LA    @14,IOPTLIST+8                                      0332
         STH   @15,I015F(,@14)                                     0332
*         IOPTLIST(4)=ADDR(IOPTLIST(7));/* CHAIN TO NEXT INSERT      */
         LA    @14,IOPTLIST+24                                     0333
         ST    @14,IOPTLIST+12                                     0333
*         IOPTLIST(5)=ADDR(LDMCBC); /* INSERT NAME POINTER           */
         ST    @10,IOPTLIST+16                                     0334
*         IOPTLIST(6)=0;            /* ZERO RESERVED FIELD           */
         ST    @03,IOPTLIST+20                                     0335
*         RFY                                                      0336
*           I015F BASED(ADDR(IOPTLIST(6)));/* ACCESS BYTES 1-2       */
*         I015F=LENGTH(LDMCBC);     /* INSERT LENGTH                 */
         LA    @10,IOPTLIST+20                                     0337
         STH   @15,I015F(,@10)                                     0337
*         IOPTLIST(7)=0;            /* LAST INSERT                   */
         ST    @03,IOPTLIST+24                                     0338
*         IOPTLIST(8)=ADDR(CTEMP18);/* INSERT NAME POINTER           */
         LA    @10,CTEMP18                                         0339
         ST    @10,IOPTLIST+28                                     0339
*         IOPTLIST(9)=0;            /* ZERO RESERVED FIELD           */
         ST    @03,IOPTLIST+32                                     0340
*         RFY                                                      0341
*           I015F BASED(ADDR(IOPTLIST(9)));/* ACCESS BYTES 1-2       */
*         I015F=LENGTH(CTEMP18);    /* INSERT LENGTH                 */
         LA    @10,IOPTLIST+32                                     0342
         MVC   I015F(2,@10),@CH00046                               0342
*         CALL BLSDMSG0(ZZ2,INVCB,DMCBMSG,BLSDMSGS,'00000000'B,ADDR(
*             IOPTLIST));           /* BUILD MESSAGE                 */
         L     @10,ZZ2P(,PLISTPTR)                                 0343
         ST    @10,@AL00001                                        0343
         LA    @03,@CF00971                                        0343
         ST    @03,@AL00001+4                                      0343
         LA    @03,DMCBMSG(,DMCBPTR)                               0343
         ST    @03,@AL00001+8                                      0343
         L     @03,ZZ2MSGSP(,@10)                                  0343
         ST    @03,@AL00001+12                                     0343
         LA    @03,@CB01017                                        0343
         ST    @03,@AL00001+16                                     0343
         LA    @03,IOPTLIST                                        0343
         ST    @03,@AFTEMPS                                        0343
         LA    @03,@AFTEMPS                                        0343
         ST    @03,@AL00001+20                                     0343
         L     @15,ZZ2MSG0P(,@10)                                  0343
         LA    @01,@AL00001                                        0343
         BALR  @14,@15                                             0343
*       END;                        /* BLSDMSG                     0344
*                                      (ZZ2,INVCB,DMCBMSG,BLSDMSGS)
*                                      INSERT(LDMCBC,LDMCBC,CTEMP18) */
*       DO;                         /* BLSDMSG                     0345
*                                      (ZZ2,HDRMSG,DMCBMSG,BLSDMSGS)
*                                      LIFO                        0345
*                                      ROUTE(TERM)INSERT(MODNAME)    */
*         IOPTLIST(1)=0;            /* LAST INSERT                   */
         SLR   @10,@10                                             0346
         ST    @10,IOPTLIST                                        0346
*         IOPTLIST(2)=ADDR(MODNAME);/* INSERT NAME POINTER           */
         LA    @03,MODNAME                                         0347
         ST    @03,IOPTLIST+4                                      0347
*         IOPTLIST(3)=0;            /* ZERO RESERVED FIELD           */
         ST    @10,IOPTLIST+8                                      0348
*         RFY                                                      0349
*           I015F BASED(ADDR(IOPTLIST(3)));/* ACCESS BYTES 1-2       */
*         I015F=LENGTH(MODNAME);    /* INSERT LENGTH                 */
         LA    @10,IOPTLIST+8                                      0350
         MVC   I015F(2,@10),@CH00046                               0350
*         CALL BLSDMSG0(ZZ2,HDRMSG,DMCBMSG,BLSDMSGS,'10010000'B,ADDR(
*             IOPTLIST));           /* BUILD MESSAGE                 */
         L     @10,ZZ2P(,PLISTPTR)                                 0351
         ST    @10,@AL00001                                        0351
         LA    @03,@CF00969                                        0351
         ST    @03,@AL00001+4                                      0351
         LA    @03,DMCBMSG(,DMCBPTR)                               0351
         ST    @03,@AL00001+8                                      0351
         L     @03,ZZ2MSGSP(,@10)                                  0351
         ST    @03,@AL00001+12                                     0351
         LA    @03,@CB01020                                        0351
         ST    @03,@AL00001+16                                     0351
         LA    @03,IOPTLIST                                        0351
         ST    @03,@AFTEMPS                                        0351
         LA    @03,@AFTEMPS                                        0351
         ST    @03,@AL00001+20                                     0351
         L     @15,ZZ2MSG0P(,@10)                                  0351
         LA    @01,@AL00001                                        0351
         BALR  @14,@15                                             0351
*       END;                        /* BLSDMSG                     0352
*                                      (ZZ2,HDRMSG,DMCBMSG,BLSDMSGS)
*                                      LIFO                        0352
*                                      ROUTE(TERM)INSERT(MODNAME)    */
*       DO;                         /* ABEND(F145C) DUMP USER        */
*         RESPECIFY                                                0354
*          (GPR01F) RESTRICTED;                                    0354
*         GPR01F=(F145C)&'00000FFF'X;/* COMP CODE IN BITS 20-31      */
         LA    GPR01F,145                                          0355
*         GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG       */
         O     GPR01F,@CF00059                                     0356
*         SVC(13);                  /* ISSUE ABEND SVC               */
         SVC   13                                                  0357
*         RESPECIFY                                                0358
*          (GPR01F) UNRESTRICTED;                                  0358
*       END;                        /* ABEND(F145C) DUMP USER INVALID
*                                      DMCB POINTER OR DMCB          */
*     END;                          /* INVALID DMCB OR DMCB POINTER  */
*   END TSTDMCB;                    /* TEST FOR INVALID DMCB OR DMCB
*                                      POINTER                       */
@EL00002 DS    0H                                                  0361
@EF00002 DS    0H                                                  0361
@ER00002 LM    @14,@12,@SA00002                                    0361
         BR    @14                                                 0361
         EJECT
*                                                                  0362
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF EXECUTABLE PROCEDURE STATEMENTS                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0362
*/*BLSUPEND--MVS IPCS MODULE                                         */
*                                                                  0362
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                     0362
*     GPR01F FIXED(31) REG(1),                                     0362
*     GPR15F FIXED(31) REG(15),                                    0362
*     GPR00P PTR(31) REG(0),                                       0362
*     GPR01P PTR(31) REG(1),                                       0362
*     GPR13P PTR(31) REG(13),                                      0362
*     GPR14P PTR(31) REG(14);                                      0362
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0363
*     I031F FIXED(31) BASED,                                       0363
*     I031P PTR(31) BASED,                                         0363
*     I015F FIXED(15) BASED,                                       0363
*     I015P PTR(15) BASED,                                         0363
*     I008P PTR(8) BASED,                                          0363
*     I001C CHAR(1) BASED;                                         0363
*   DECLARE                                                        0364
*     IOPTLIST(9) PTR(31) BDY(WORD);/* OPTION LIST ARRAY             */
*   GENERATE NODEFS NOREFS DATA;                                   0365
*   END                             /* BLRPEND END OF PROCESSING     */
*                                                                  0366
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (BLSUZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLRFULL )                                       */
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */
*/*%INCLUDE SYSLIB  (IKJPSCB )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJUPT  )                                       */
*/*%INCLUDE SYSLIB  (BLSUSERV)                                       */
*/*%INCLUDE SYSLIB  (BLRSERV )                                       */
*/*%INCLUDE SYSLIB  (BLRSERVD)                                       */
*/*%INCLUDE SYSLIB  (BLSDSERV)                                       */
*                                                                  0366
*       ;                                                          0366
@EL00001 L     @13,4(,@13)                                         0366
@EF00001 L     @00,@SIZDATD                                        0366
         LR    @01,@11                                             0366
         BLSUFRES R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0366
         BR    @14                                                 0366
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00002 DS    15F
@AL00001 DS    6A
@TF00001 DS    F
@AFTEMPS DS    1F
BLSCALOC CSECT
         DS    0F
@CF00415 DC    F'7'
@CF00046 DC    F'8'
@CH00046 EQU   @CF00046+2
@CF00048 DC    F'12'
@CF00969 DC    F'4071'
@CF00971 DC    F'4072'
@CF01026 DC    F'19712'
@CF00059 DC    XL4'80000000'
@CF00975 DC    XL4'FFFFFFF8'
@DATD    DSECT
         DS    0D
MODSTAT  DS    CL16
         ORG   MODSTAT
MODNAME  DS    CL8
RETCODE  DS    FL4
SUBCODE  DS    FL4
         ORG   MODSTAT+16
CHSTR8   DS    CL8
         ORG   CHSTR8
@NM00069 DS    CL3
CHSTR847 DS    CL4
         ORG   CHSTR847
CHSTR846 DS    CL3
CHSTR87  DS    CL1
         ORG   CHSTR8+7
CHSTR88  DS    CL1
         ORG   CHSTR8+8
CTEMP    DS    CL9
         ORG   CTEMP
CTEMP18  DS    CL8
         ORG   CTEMP18
CTEMP14  DS    CL4
CTEMP58  DS    CL4
         ORG   CTEMP58
CTEMP56  DS    CL2
CTEMP78  DS    CL2
         ORG   CTEMP+9
         DS    CL3
IOPTLIST DS    9A
BLSCALOC CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00935 DC    V(BLSCAINT)
@CV00936 DC    V(BLSCABLD)
@CV00937 DC    V(BLSCAMER)
@CV00938 DC    V(BLSCAAMS)
@CV00939 DC    V(BLSCADST)
@CV00940 DC    V(BLSCADYN)
         DS    0D
DASWALEN DC    F'4096'
DASSIZE  DC    F'4096'
@CC00977 DC    C'BLSCALOC'
@CC00979 DC    C'DMCB'
@CC00981 DC    C'BCMD'
@CB01017 DC    B'00000000'
@CB01020 DC    B'10010000'
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSCALOC CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSCALOC+19)/20+7)/8)CL8'BLSCALOC'
BLSCALOC CSECT
*                         /*
HEXTBL   EQU   *-240
         DC    CL16'0123456789ABCDEF'
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSCALOC CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
WORKPTR  EQU   @02
ENDPTR   EQU   @02
PLISTPTR EQU   @07
DMCBPTR  EQU   @06
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R9       EQU   @09
RB       EQU   @11
RD       EQU   @13
RE       EQU   @14
RF       EQU   @15
GPR13P   EQU   @13
GPR01F   EQU   @01
GPR15F   EQU   @15
GPR00F   EQU   @00
GPR01P   EQU   @01
GPR00P   EQU   @00
GPR14P   EQU   @14
RA       EQU   @10
RC       EQU   @12
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
ZZ1      EQU   0
ZZ1DMCBP EQU   ZZ1+48
ZZ1ATTN  EQU   ZZ1+360
ZZ1EVE   EQU   ZZ1ATTN+4
ZZ1F     EQU   ZZ1+368
ZZ1N     EQU   ZZ1+1116
ZZ2      EQU   0
ZZ2AMD   EQU   ZZ2
@NM00013 EQU   ZZ2AMD+7
ZZ2PRT   EQU   ZZ2+138
ZZ2PRTT  EQU   ZZ2PRT+4
ZZ2PRTT1 EQU   ZZ2PRTT+1
ZZ2A     EQU   ZZ2+272
ZZ2AF    EQU   ZZ2A+16
ZZ2APID  EQU   ZZ2A+64
ZZ2AD    EQU   ZZ2A+74
ZZ2ADD   EQU   ZZ2AD
ZZ2ADDT  EQU   ZZ2ADD+2
ZZ2ADM   EQU   ZZ2AD+46
ZZ2ADMT  EQU   ZZ2ADM+2
ZZ2ADP   EQU   ZZ2AD+56
ZZ2ADPT  EQU   ZZ2ADP+2
ZZ2AQAS  EQU   ZZ2A+144
ZZ2AQD   EQU   ZZ2A+160
ZZ2AQDT  EQU   ZZ2AQD+10
ZZ2AQDF  EQU   ZZ2AQD+52
ZZ2STG   EQU   ZZ2+960
ZZ2ALLOP EQU   ZZ2+992
ZZ2FREEP EQU   ZZ2+996
ZZ2FF19P EQU   ZZ2+1000
ZZ2FRE1P EQU   ZZ2+1004
ZZ2FF18P EQU   ZZ2+1008
ZZ2DYNAP EQU   ZZ2+1012
ZZ2ZZ2CP EQU   ZZ2+1016
ZZ2ZZ2DP EQU   ZZ2+1020
ZZ2STAIP EQU   ZZ2+1024
ZZ2FF02P EQU   ZZ2+1028
ZZ2GETLP EQU   ZZ2+1032
ZZ2PARSP EQU   ZZ2+1036
ZZ2PTGTP EQU   ZZ2+1040
ZZ2PUTLP EQU   ZZ2+1044
ZZ2SCANP EQU   ZZ2+1048
ZZ2STCKP EQU   ZZ2+1052
ZZ2MSGSP EQU   ZZ2+1060
ZZ2TRMOP EQU   ZZ2+1064
ZZ2TRMVP EQU   ZZ2+1068
ZZ2MSG0P EQU   ZZ2+1076
ZZ2PUTNP EQU   ZZ2+1084
ZZ2TRMNP EQU   ZZ2+1088
ZZ2ENQ0P EQU   ZZ2+1092
ZZ2ADSDP EQU   ZZ2+1096
ZZ2APDRP EQU   ZZ2+1100
ZZ2FDSDP EQU   ZZ2+1104
ZZ2FPDRP EQU   ZZ2+1108
ZZ2ZZ1P  EQU   ZZ2+1264
ZZ2DVTP  EQU   ZZ2+1276
ZZ2BVTP  EQU   ZZ2+1280
ZZ2CPPL  EQU   ZZ2+1292
ZZ2CPPLC EQU   ZZ2CPPL
ZZ2ITR   EQU   ZZ2+2840
ZZ2ITRE  EQU   ZZ2ITR+16
ZZ2ITSE  EQU   ZZ2+2864
ZZ2ES    EQU   ZZ2+2872
ZZ2AMDX  EQU   ZZ2+7160
ZZ2AXO   EQU   ZZ2+7934
ZZ2AXOT  EQU   ZZ2AXO+2
CMD      EQU   0
CMDT     EQU   CMD+4
PSCB     EQU   0
PSCBATR1 EQU   PSCB+16
ECT      EQU   0
ECTSWS   EQU   ECT+28
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
UPT      EQU   0
UPTSWS   EQU   UPT+12
SA       EQU   0
SA1      EQU   SA
SAR      EQU   SA+12
SAR1     EQU   SAR+12
BVT      EQU   0
BVTPUTLP EQU   BVT+4
BVTPUTOP EQU   BVT+12
BVTPUTTP EQU   BVT+16
BVTPUTVP EQU   BVT+20
BVTPUTAP EQU   BVT+24
BVTPRTTP EQU   BVT+28
BVTPRTAP EQU   BVT+32
BVTPUTDP EQU   BVT+36
BVTMONP  EQU   BVT+40
BVTMON2P EQU   BVT+44
BVTVSARP EQU   BVT+48
BVTVSENP EQU   BVT+64
BVTVSERP EQU   BVT+68
BVTVSGEP EQU   BVT+72
BVTVSGUP EQU   BVT+76
BVTVSPOP EQU   BVT+80
BVTVSPUP EQU   BVT+84
BVTMPKNP EQU   BVT+104
BVTMONLP EQU   BVT+108
BVTPUTCP EQU   BVT+132
BVTMPK1P EQU   BVT+136
BVTZZ2RP EQU   BVT+140
BVTPGMRP EQU   BVT+144
BVTMONAP EQU   BVT+148
BVTBLDDP EQU   BVT+152
BVTBLDLP EQU   BVT+156
BVTPGMCP EQU   BVT+160
BVTPGMDP EQU   BVT+164
BVTPGMLP EQU   BVT+168
BVTMONCP EQU   BVT+180
BVTMONDP EQU   BVT+184
BVTMONTP EQU   BVT+188
BVTPARIP EQU   BVT+192
BVTPARUP EQU   BVT+196
BVTPRTNP EQU   BVT+204
BVTVSCRP EQU   BVT+208
BVTVSMRP EQU   BVT+212
BVTMONXP EQU   BVT+216
BVTTRMAP EQU   BVT+228
BLSDMSGS EQU   0
BLSDMSG0 EQU   0
DVT      EQU   0
DVTDEQPP EQU   DVT+8
DVTENQPP EQU   DVT+12
DVTAUTHP EQU   DVT+20
DVTLPCLP EQU   DVT+24
DVTBP00P EQU   DVT+28
DVTCN00P EQU   DVT+32
DVTDF00P EQU   DVT+36
DVTDS00P EQU   DVT+44
DVTFL00P EQU   DVT+48
DVTFP00P EQU   DVT+52
DVTGD00P EQU   DVT+56
DVTGG00P EQU   DVT+60
DVTGP00P EQU   DVT+64
DVTND00P EQU   DVT+68
DVTND01P EQU   DVT+72
DVTOD00P EQU   DVT+76
DVTPS00P EQU   DVT+80
DVTSD00P EQU   DVT+84
DVTSL00P EQU   DVT+88
DVTTL00P EQU   DVT+92
DVTUD00P EQU   DVT+96
DVTUP00P EQU   DVT+100
DVTLP00P EQU   DVT+104
DVTLALLP EQU   DVT+108
DVTLPFMP EQU   DVT+112
DVTCLOSP EQU   DVT+116
DVTOPENP EQU   DVT+120
DVTPERAP EQU   DVT+124
DVTDALLP EQU   DVT+128
DMCB     EQU   0
DMCBID   EQU   DMCB
DMCBNEXT EQU   DMCB+4
DMCBTVP  EQU   DMCB+8
DMCBRTC  EQU   DMCB+12
DMCBFTY  EQU   DMCB+20
DMCBVSF  EQU   DMCBFTY
DMCBOPN  EQU   DMCB+21
DMCBRQST EQU   DMCB+22
DMCBRMOD EQU   DMCB+23
DMCBOUT  EQU   DMCBRMOD
DMCBOPTS EQU   DMCB+24
DMCBGKY  EQU   DMCBOPTS
DMCBMFLG EQU   DMCB+28
DMCBACCM EQU   DMCB+30
DMCBBUFP EQU   DMCB+32
DMCBKEYP EQU   DMCB+44
DMCBMSG  EQU   DMCB+52
DMCBRI   EQU   DMCB+64
DMCBMSG0 EQU   DMCB+68
DMCBMSGS EQU   DMCB+72
DMCBZZ1P EQU   DMCB+76
DMCBSPID EQU   DMCB+84
DMCBFRE  EQU   DMCB+88
DMCBEOB  EQU   DMCB+92
DMCBACBE EQU   DMCB+124
DMCBSTAT EQU   DMCB+366
DMCBSPEC EQU   DMCB+380
DMCBAMS  EQU   DMCB+416
DMCBAUDT EQU   DMCB+568
DMCBALC  EQU   DMCBAUDT
DMCBLSCP EQU   DMCBAUDT+16
DMCBWRK  EQU   DMCB+648
MSA      EQU   0
MSAVHSA  EQU   MSA+4
CSAV     EQU   0
CSAVR14  EQU   CSAV+12
CSAVR0   EQU   CSAV+20
CSAVR1   EQU   CSAV+24
PLIST    EQU   0
ZZ2P     EQU   PLIST
DMCBPP   EQU   PLIST+4
MODELP   EQU   PLIST+8
ACMODP   EQU   PLIST+12
OPNP     EQU   PLIST+16
OPNPVL   EQU   OPNP
ALPARMS  EQU   PLIST+20
DMCBP    EQU   0
I008P    EQU   0
I256C    EQU   0
I015F    EQU   0
BLSDADSD EQU   0
BLSDAPDR EQU   0
BLSDDEQP EQU   0
BLSDENQP EQU   0
BLSDENQ0 EQU   0
BLSDFDSD EQU   0
BLSDFPDR EQU   0
BLSEAUTH EQU   0
BLSELPCL EQU   0
BLSELPFM EQU   0
BLSFBP00 EQU   0
BLSFCLOS EQU   0
BLSFCN00 EQU   0
BLSFDALL EQU   0
BLSFDF00 EQU   0
BLSFDS00 EQU   0
BLSFFL00 EQU   0
BLSFFP00 EQU   0
BLSFGD00 EQU   0
BLSFGG00 EQU   0
BLSFGP00 EQU   0
BLSFLALL EQU   0
BLSFLP00 EQU   0
BLSFND00 EQU   0
BLSFND01 EQU   0
BLSFOD00 EQU   0
BLSFOPEN EQU   0
BLSFPERA EQU   0
BLSFPS00 EQU   0
BLSFSD00 EQU   0
BLSFSL00 EQU   0
BLSFTL00 EQU   0
BLSFUD00 EQU   0
BLSFUP00 EQU   0
BLSUALLO EQU   0
BLSUBLDD EQU   0
BLSUBLDL EQU   0
BLSUDYNA EQU   0
BLSUFREE EQU   0
BLSUFRE1 EQU   0
BLSUMON  EQU   0
BLSUMONA EQU   0
BLSUMONC EQU   0
BLSUMOND EQU   0
BLSUMONL EQU   0
BLSUMONT EQU   0
BLSUMONX EQU   0
BLSUMON2 EQU   0
BLSUMPKN EQU   0
BLSUMPK1 EQU   0
BLSUPARI EQU   0
BLSUPARU EQU   0
BLSUPGMC EQU   0
BLSUPGMD EQU   0
BLSUPGML EQU   0
BLSUPGMR EQU   0
BLSUPRTA EQU   0
BLSUPRTN EQU   0
BLSUPRTT EQU   0
BLSUPUTA EQU   0
BLSUPUTC EQU   0
BLSUPUTD EQU   0
BLSUPUTL EQU   0
BLSUPUTN EQU   0
BLSUPUTO EQU   0
BLSUPUTT EQU   0
BLSUPUTV EQU   0
BLSUSTAI EQU   0
BLSUTRMA EQU   0
BLSUTRMN EQU   0
BLSUTRMO EQU   0
BLSUTRMV EQU   0
BLSUVSAR EQU   0
BLSUVSCR EQU   0
BLSUVSEN EQU   0
BLSUVSER EQU   0
BLSUVSGE EQU   0
BLSUVSGU EQU   0
BLSUVSMR EQU   0
BLSUVSPO EQU   0
BLSUVSPU EQU   0
BLSUZZ2C EQU   0
BLSUZZ2D EQU   0
BLSUZZ2R EQU   0
DMCBDMGR EQU   0
DMCBRQC  EQU   0
IKJEFF02 EQU   0
IKJEFF18 EQU   0
IKJEFF19 EQU   0
IKJGETL  EQU   0
IKJPARS  EQU   0
IKJPTGT  EQU   0
IKJPUTL  EQU   0
IKJSCAN  EQU   0
IKJSTCK  EQU   0
I001C    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
MODELNAM EQU   0
CPPL     EQU   ZZ2CPPL
CPPLUPT  EQU   CPPL+4
CPPLPSCB EQU   CPPL+8
CPPLECT  EQU   CPPL+12
DMCBVSM  EQU   DMCBAMS
DMCBQSM  EQU   DMCBAMS
DMAL     EQU   DMCBWRK
DMALMODA EQU   DMAL+4
DMALPRMP EQU   DMAL+8
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
DMALEND  EQU   DMAL+1196
DMALTUS  EQU   DMAL+172
DMALTUPL EQU   DMAL+44
DMALTUBS EQU   DMAL+40
DMALTUPM EQU   DMAL+36
DMALDYRB EQU   DMAL+16
DMALMODP EQU   DMAL+12
DMALID   EQU   DMAL
DMCBRES7 EQU   DMCBQSM+96
DMCBDCB  EQU   DMCBQSM
DMCBACB  EQU   DMCBVSM+76
DMCBRPL  EQU   DMCBVSM
CPPLCBUF EQU   CPPL
CSAVR15  EQU   CSAV+16
CSAVRES  EQU   CSAV
MSAVWD1  EQU   MSA
DMCBRES8 EQU   DMCB+640
DMCBMODN EQU   DMCB+632
DMCBCARY EQU   DMCBAUDT+20
DMCBCLC  EQU   DMCBAUDT+12
DMCBOPC  EQU   DMCBAUDT+8
DMCBFRC  EQU   DMCBAUDT+4
DMCBFR   EQU   DMCB+412
DMCBRES6 EQU   DMCB+410
DMCBIRSC EQU   DMCB+408
DMCBSUBC EQU   DMCB+404
DMCBDRBP EQU   DMCB+400
DMCBRSZM EQU   DMCB+398
DMCBRSZA EQU   DMCB+396
DMCBCISZ EQU   DMCB+394
DMCBDCBL EQU   DMCB+392
DMCBDCLR EQU   DMCB+390
DMCBDCFM EQU   DMCB+389
DMCBRES5 EQU   DMCB+388
DMCBLBRT EQU   DMCB+386
DMCBLBSQ EQU   DMCB+384
DMCBLBPS EQU   DMCB+383
DMCBLBTY EQU   DMCB+382
DMCBRES4 EQU   DMCB+381
DMCBSPRS EQU   DMCBSPEC
DMCBSPRN EQU   DMCBSPEC
DMCBSPCT EQU   DMCBSPEC
DMCBSPRL EQU   DMCBSPEC
DMCBSPSE EQU   DMCB+376
DMCBSPPR EQU   DMCB+372
DMCBSPTY EQU   DMCB+369
DMCBODIS EQU   DMCB+368
DMCBDISP EQU   DMCB+367
DMCBRES3 EQU   DMCB+364
DMCBMEMB EQU   DMCB+356
DMCBMODL EQU   DMCB+348
DMCBRES9 EQU   DMCB+340
DMCBPID  EQU   DMCB+332
DMCBTYPE EQU   DMCB+328
DMCBDSN  EQU   DMCB+284
DMCBUNIT EQU   DMCB+276
DMCBDSOR EQU   DMCB+274
DMCBVOL  EQU   DMCB+268
DMCBDDNM EQU   DMCB+260
DMCBSYNM EQU   DMCB+132
DMCBRPLF EQU   DMCB+128
DMCBDCBE EQU   DMCBACBE
DMCBARC  EQU   DMCB+120
DMCBCPC  EQU   DMCB+116
DMCBRET  EQU   DMCB+112
DMCBSTL  EQU   DMCB+96
DMCBRES2 EQU   DMCB+85
DMCBRESC EQU   DMCB+80
DMCBRRL  EQU   DMCB+60
DMCBRBA  EQU   DMCB+56
DMCBKEYL EQU   DMCB+48
DMCBKPC  EQU   DMCBKEYP
DMCBORL  EQU   DMCB+40
DMCBBLEN EQU   DMCB+36
DMCBBFPC EQU   DMCBBUFP
DMCBRES1 EQU   DMCB+31
DMCBREJ  EQU   DMCB+29
DMCBRESB EQU   DMCBMFLG
DMCBFMOD EQU   DMCBMFLG
DMCBLOPT EQU   DMCB+27
DMCBLRM  EQU   DMCB+26
DMCBLRQ  EQU   DMCB+25
DMCBOPRS EQU   DMCBOPTS
DMCBLRD  EQU   DMCBOPTS
DMCBBWD  EQU   DMCBOPTS
DMCBUPD  EQU   DMCBOPTS
DMCBAPX  EQU   DMCBOPTS
DMCBRNO  EQU   DMCBGKY
DMCBKYD  EQU   DMCBOPTS
DMCBRMRS EQU   DMCBRMOD
DMCBRM5  EQU   DMCBRMOD
DMCBRM6  EQU   DMCBRMOD
DMCBTMP  EQU   DMCBOUT
DMCBRESA EQU   DMCBOPN
DMCBSOUT EQU   DMCBOPN
DMCBSIN  EQU   DMCBOPN
DMCBKSF  EQU   DMCBFTY
DMCBFTRS EQU   DMCBFTY
DMCBSHF  EQU   DMCBFTY
DMCBIRL  EQU   DMCB+16
DVT99999 EQU   DVT+256
DVT0064P EQU   DVT+252
DVT0063P EQU   DVT+248
DVT0062P EQU   DVT+244
DVT0061P EQU   DVT+240
DVT0060P EQU   DVT+236
DVT0059P EQU   DVT+232
DVT0058P EQU   DVT+228
DVT0057P EQU   DVT+224
DVT0056P EQU   DVT+220
DVT0055P EQU   DVT+216
DVT0054P EQU   DVT+212
DVT0053P EQU   DVT+208
DVT0052P EQU   DVT+204
DVT0051P EQU   DVT+200
DVT0050P EQU   DVT+196
DVT0049P EQU   DVT+192
DVT0048P EQU   DVT+188
DVT0047P EQU   DVT+184
DVT0046P EQU   DVT+180
DVT0045P EQU   DVT+176
DVT0044P EQU   DVT+172
DVT0043P EQU   DVT+168
DVT0042P EQU   DVT+164
DVT0041P EQU   DVT+160
DVT0040P EQU   DVT+156
DVT0039P EQU   DVT+152
DVT0038P EQU   DVT+148
DVT0037P EQU   DVT+144
DVT0036P EQU   DVT+140
DVT0035P EQU   DVT+136
DVT0034P EQU   DVT+132
DVT0011P EQU   DVT+40
DVT0005P EQU   DVT+16
DVT0002P EQU   DVT+4
DVT0001P EQU   DVT
BVT99999 EQU   BVT+256
BVT0064P EQU   BVT+252
BVT0063P EQU   BVT+248
BVT0062P EQU   BVT+244
BVT0061P EQU   BVT+240
BVT0060P EQU   BVT+236
BVT0059P EQU   BVT+232
BVT0057P EQU   BVT+224
BVT0056P EQU   BVT+220
BVTSTBLP EQU   BVT+200
BVT0045P EQU   BVT+176
BVT0044P EQU   BVT+172
BVT0033P EQU   BVT+128
BVT0032P EQU   BVT+124
BVT0031P EQU   BVT+120
BVT0030P EQU   BVT+116
BVT0029P EQU   BVT+112
BVT0026P EQU   BVT+100
BVT0025P EQU   BVT+96
BVT0024P EQU   BVT+92
BVT0023P EQU   BVT+88
BVT0016P EQU   BVT+60
BVT0015P EQU   BVT+56
BVT0014P EQU   BVT+52
BVT0003P EQU   BVT+8
BVT0001P EQU   BVT
SA99     EQU   SA+72
SARC     EQU   SAR+56
SARB     EQU   SAR+52
SARA     EQU   SAR+48
SAR9     EQU   SAR+44
SAR8     EQU   SAR+40
SAR7     EQU   SAR+36
SAR6     EQU   SAR+32
SAR5     EQU   SAR+28
SAR4     EQU   SAR+24
SAR3     EQU   SAR+20
SAR2     EQU   SAR+16
SAR0     EQU   SAR+8
SARF     EQU   SAR+4
SARE     EQU   SAR
SAFWD    EQU   SA+8
SABAK    EQU   SA+4
SA1L     EQU   SA1+1
SA1P     EQU   SA1
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00068 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00067 EQU   UPT
@NM00066 EQU   ECT+52
@NM00065 EQU   ECT+48
@NM00064 EQU   ECT+44
@NM00063 EQU   ECTSWS2+1
@NM00062 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00061 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00060 EQU   PSCB+36
@NM00059 EQU   PSCB+32
@NM00058 EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00057 EQU   PSCBATR1
@NM00056 EQU   PSCBATR1
@NM00055 EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
PSCBUSRL EQU   PSCB+7
PSCBUSER EQU   PSCB
CMDT1    EQU   CMDT
CMDO     EQU   CMD+2
CMDL     EQU   CMD
ZZ299999 EQU   ZZ2+8192
ZZ2AXOT1 EQU   ZZ2AXOT
ZZ2AXOL  EQU   ZZ2AXO
@NM00054 EQU   ZZ2+7288
@NM00053 EQU   ZZ2AMDX+4
ZZ2AMDXC EQU   ZZ2AMDX
ZZ2HSD   EQU   ZZ2+3056
@NM00052 EQU   ZZ2ES
@NM00051 EQU   ZZ2+2868
ZZ2ITSEC EQU   ZZ2ITSE+1
@NM00050 EQU   ZZ2ITSE
ZZ2ITSEP EQU   ZZ2ITSE
ZZ2ITSEW EQU   ZZ2ITSE
@NM00049 EQU   ZZ2ITR+20
ZZ2ITREC EQU   ZZ2ITRE+1
@NM00048 EQU   ZZ2ITRE
ZZ2ITREP EQU   ZZ2ITRE
ZZ2ITREW EQU   ZZ2ITRE
@NM00047 EQU   ZZ2ITR+9
ZZ2ITRRC EQU   ZZ2ITR+8
ZZ2ITR2P EQU   ZZ2ITR+4
ZZ2ITRPP EQU   ZZ2ITR
@NM00046 EQU   ZZ2+1544
ZZ2PGM   EQU   ZZ2+1536
@NM00045 EQU   ZZ2+1526
ZZ2CW    EQU   ZZ2+1524
@NM00044 EQU   ZZ2+1504
@NM00043 EQU   ZZ2+1352
ZZ2FFSYP EQU   ZZ2+1348
ZZ2SASYP EQU   ZZ2+1344
ZZ2RDSYP EQU   ZZ2+1340
ZZ2RASYP EQU   ZZ2+1336
ZZ2PHSYP EQU   ZZ2+1332
ZZ2ESSYP EQU   ZZ2+1328
ZZ200SYP EQU   ZZ2+1324
ZZ2SCWP  EQU   ZZ2+1320
ZZ2TTLP  EQU   ZZ2+1316
ZZ2LOADP EQU   ZZ2+1312
ZZ2VRESP EQU   ZZ2+1308
ZZ2CPPLE EQU   ZZ2CPPL+12
ZZ2CPPLP EQU   ZZ2CPPL+8
ZZ2CPPLU EQU   ZZ2CPPL+4
ZZ2VRSAP EQU   ZZ2+1288
ZZ2RVTP  EQU   ZZ2+1284
@NM00042 EQU   ZZ2+1272
@NM00041 EQU   ZZ2+1268
ZZ2RPLP  EQU   ZZ2+1260
ZZ2TCBP  EQU   ZZ2+1256
@NM00040 EQU   ZZ2+1252
ZZ2ZZ2P  EQU   ZZ2+1248
@NM00039 EQU   ZZ2+1112
@NM00038 EQU   ZZ2+1080
ZZ2FT25P EQU   ZZ2+1072
ZZ2ALOCP EQU   ZZ2+1056
@NM00037 EQU   ZZ2+976
ZZ2TOD   EQU   ZZ2+968
ZZ2STGN  EQU   ZZ2STG+4
ZZ2STGP  EQU   ZZ2STG
@NM00036 EQU   ZZ2+952
ZZ2SCMDE EQU   ZZ2+944
ZZ2SCMDN EQU   ZZ2+936
ZZ2IDENT EQU   ZZ2+928
ZZ2A9999 EQU   ZZ2A+656
@NM00035 EQU   ZZ2A+224
@NM00034 EQU   ZZ2A+220
ZZ2AQD99 EQU   ZZ2AQD+60
@NM00033 EQU   ZZ2AQD+56
@NM00032 EQU   ZZ2AQDF
ZZ2AQDFA EQU   ZZ2AQDF
ZZ2AQDIL EQU   ZZ2AQD+48
ZZ2AQDIM EQU   ZZ2AQD+44
ZZ2AQDT9 EQU   ZZ2AQDT+34
ZZ2AQDTE EQU   ZZ2AQDT+33
ZZ2AQDTD EQU   ZZ2AQDT+2
@NM00031 EQU   ZZ2AQDT+1
ZZ2AQDTY EQU   ZZ2AQDT
ZZ2AQDT0 EQU   ZZ2AQDT
ZZ2AQDLB EQU   ZZ2AQD+9
ZZ2AQDOB EQU   ZZ2AQD+8
ZZ2AQDLE EQU   ZZ2AQD+4
ZZ2AQDOF EQU   ZZ2AQD
ZZ2AQD00 EQU   ZZ2AQD
ZZ2AQAS9 EQU   ZZ2AQAS+16
@NM00030 EQU   ZZ2AQAS+12
ZZ2AQAS2 EQU   ZZ2AQAS+8
ZZ2AQAS1 EQU   ZZ2AQAS+4
@NM00029 EQU   ZZ2AQAS+2
ZZ2AQAST EQU   ZZ2AQAS
ZZ2AQAS0 EQU   ZZ2AQAS
ZZ2AZZ6P EQU   ZZ2A+140
ZZ2ADPTA EQU   ZZ2ADPT
ZZ2ADPL  EQU   ZZ2ADP
ZZ2ADMTA EQU   ZZ2ADMT
ZZ2ADML  EQU   ZZ2ADM
ZZ2ADDTA EQU   ZZ2ADDT
ZZ2ADDL  EQU   ZZ2ADD
@NM00028 EQU   ZZ2A+72
ZZ2APIDB EQU   ZZ2APID+3
ZZ2APIDA EQU   ZZ2APID
@NM00027 EQU   ZZ2A+24
@NM00026 EQU   ZZ2AF+5
ZZ2AFX   EQU   ZZ2AF+5
@NM00025 EQU   ZZ2AF+3
ZZ2AFS   EQU   ZZ2AF+2
ZZ2AFD   EQU   ZZ2AF+2
ZZ2AFQ   EQU   ZZ2AF+2
ZZ2AF$   EQU   ZZ2AF+2
@NM00024 EQU   ZZ2AF+2
ZZ2AFM   EQU   ZZ2AF+2
@NM00023 EQU   ZZ2AF+2
@NM00022 EQU   ZZ2AF+1
ZZ2AFV   EQU   ZZ2AF+1
@NM00021 EQU   ZZ2AF+1
ZZ2AFC   EQU   ZZ2AF+1
@NM00020 EQU   ZZ2AF
ZZ2AFFS  EQU   ZZ2AF
ZZ2AFT   EQU   ZZ2AF
ZZ2AFP   EQU   ZZ2AF
@NM00019 EQU   ZZ2A+8
ZZ2ALINE EQU   ZZ2A+4
@NM00018 EQU   ZZ2A+3
ZZ2ASE   EQU   ZZ2A+2
ZZ2ACH   EQU   ZZ2A
@NM00017 EQU   ZZ2+264
@NM00016 EQU   ZZ2+263
ZZ2PRTT0 EQU   ZZ2PRTT
ZZ2PRTO  EQU   ZZ2PRT+2
ZZ2PRTL  EQU   ZZ2PRT
@NM00015 EQU   ZZ2AMD+56
ZZ2AMDXP EQU   ZZ2AMD+52
ZZ2AMDD  EQU   ZZ2AMD+48
ZZ2AMDL  EQU   ZZ2AMD+44
ZZ2AMDU  EQU   ZZ2AMD+28
ZZ2AMDF  EQU   ZZ2AMD+24
ZZ2AMDS  EQU   ZZ2AMD+20
ZZ2AMDC  EQU   ZZ2AMD+16
ZZ2AMDP  EQU   ZZ2AMD+12
ZZ2AMDB  EQU   ZZ2AMD+8
@NM00014 EQU   @NM00013
ZZ2AMD2  EQU   @NM00013
ZZ2AMD1  EQU   @NM00013
ZZ2AMD0  EQU   ZZ2AMD+6
ZZ2AMDA  EQU   ZZ2AMD+4
ZZ2AMDT  EQU   ZZ2AMD
ZZ199999 EQU   ZZ1+3072
@NM00012 EQU   ZZ1+2160
ZZ1TRTAS EQU   ZZ1+1904
ZZ1TRUPC EQU   ZZ1+1648
ZZ1TRCTX EQU   ZZ1+1392
ZZ1NASID EQU   ZZ1N+274
ZZ1NSTRL EQU   ZZ1N+272
ZZ1NOFF  EQU   ZZ1N+268
ZZ1NBDY  EQU   ZZ1N+264
ZZ1NADE  EQU   ZZ1N+260
ZZ1NADB  EQU   ZZ1N+256
ZZ1NSTR  EQU   ZZ1N
@NM00011 EQU   ZZ1+1080
ZZ1TREBC EQU   ZZ1+824
ZZ1TRHEX EQU   ZZ1+568
@NM00010 EQU   ZZ1+377
ZZ1USTAE EQU   ZZ1+376
@NM00009 EQU   ZZ1F+1
@NM00008 EQU   ZZ1F
ZZ1FM    EQU   ZZ1F
ZZ1FX    EQU   ZZ1F
ZZ1FU    EQU   ZZ1F
ZZ1EVEC  EQU   ZZ1EVE+1
@NM00007 EQU   ZZ1EVE
ZZ1EVEP  EQU   ZZ1EVE
ZZ1EVEW  EQU   ZZ1EVE
ZZ1ACMP  EQU   ZZ1ATTN
@NM00006 EQU   ZZ1+144
ZZ1FPP   EQU   ZZ1+140
ZZ1ZZ6P  EQU   ZZ1+136
@NM00005 EQU   ZZ1+84
ZZ1PLINE EQU   ZZ1+80
ZZ1PGSZ  EQU   ZZ1+76
ZZ1PCNT  EQU   ZZ1+72
@NM00004 EQU   ZZ1+68
ZZ1TPAGE EQU   ZZ1+64
ZZ1TLINE EQU   ZZ1+60
@NM00003 EQU   ZZ1+52
ZZ1DSDP  EQU   ZZ1+44
ZZ1PDRP  EQU   ZZ1+40
ZZ1ZZ2P  EQU   ZZ1+36
ZZ1327WP EQU   ZZ1+32
ZZ1ACBP  EQU   ZZ1+28
@NM00002 EQU   ZZ1+24
ZZ1PDCBP EQU   ZZ1+20
ZZ1BLRBL EQU   ZZ1+16
@NM00001 EQU   ZZ1+12
ZZ1PNULL EQU   ZZ1+8
ZZ1NULL  EQU   ZZ1+4
ZZ1IDE   EQU   ZZ1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00294 EQU   @RC00274
@RF00321 EQU   @EL00002
@ENDDATA EQU   *
         END   BLSCALOC,(C'PLS0015',0701,78066)
