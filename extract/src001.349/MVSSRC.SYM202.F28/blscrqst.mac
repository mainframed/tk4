         TITLE 'BLSCRQST -- IPCS DAS DATA ACCESS REQUEST INTERFACE     *
                        '
*     /* CHANGE ACTIVITY
*    THIS MODULE IS WRITTEN FOR @G57LPSR
BLSCRQST CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'BLSCRQST  78.062'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         BLSCGETS R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
*   DMCBPTR=GPR01P;                 /* BASE THE DMCB                 */
         LR    DMCBPTR,GPR01P                                      0012
*   RFY                                                            0013
*     GPR01P UNRSTD;                                               0013
*   MODNAME=LMODNMC;                /* MARK AUTOMATIC STORAGE WITH 0014
*                                      MODULE NAME                   */
         MVC   MODNAME(8),@CC00235                                 0014
*   DMCBRTC=F0C;                    /* INIT THE RETURN CODE          */
         SLR   @10,@10                                             0015
         ST    @10,DMCBRTC(,DMCBPTR)                               0015
*   DMCBREJ=F0C;                    /* INIT THE REJECT CODE          */
         MVI   DMCBREJ(DMCBPTR),X'00'                              0016
*   DMCBSUBC=F0C;                   /* INIT THE VSAM RETURN CODE     */
         ST    @10,DMCBSUBC(,DMCBPTR)                              0017
*   DMCBACBE=F0C;                   /* INIT THE ACB ERROR REASON CODE*/
         ST    @10,DMCBACBE(,DMCBPTR)                              0018
*   DMCBRPLF=F0C;                   /* INIT THE RPL FEEDBACK CODE    */
*                                                                  0019
         ST    @10,DMCBRPLF(,DMCBPTR)                              0019
*   /*****************************************************************/
*   /*                                                               */
*   /* FIND THE CURRENT TASK VARIABLE FOR TCB                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0020
*   CALL BLSCRTCB(DMCB);            /* OBTAIN CURRENT ZZ2 TASK VAR   */
*                                                                  0020
         ST    DMCBPTR,@AL00001                                    0020
         L     @15,@CV00210                                        0020
         LA    @01,@AL00001                                        0020
         BALR  @14,@15                                             0020
*   /*****************************************************************/
*   /*                                                               */
*   /* SAVE REQUEST CALLER                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0021
*   IF DMCBRQST=DMCBOPR             /* FOR OPEN REQUEST SAVE RETURN  */
*     THEN                                                         0021
         CLI   DMCBRQST(DMCBPTR),1                                 0021
         BNE   @RF00021                                            0021
*     DMCBOPC=CALLER14;             /* ADDRESS IN DMCBOPC            */
         L     @10,CSAVEP(,DMCBPTR)                                0022
         L     @10,CALLER14(,@10)                                  0022
         ST    @10,DMCBOPC(,DMCBPTR)                               0022
*   IF DMCBRQST=DMCBCLR             /* FOR CLOSE REQUEST SAVE RETURN */
*     THEN                                                         0023
@RF00021 CLI   DMCBRQST(DMCBPTR),2                                 0023
         BNE   @RF00023                                            0023
*     DMCBCLC=CALLER14;             /* ADDRESS IN DMCBCLC            */
         L     @10,CSAVEP(,DMCBPTR)                                0024
         L     @10,CALLER14(,@10)                                  0024
         ST    @10,DMCBCLC(,DMCBPTR)                               0024
*   ELSE                                                           0025
*     DO;                           /* ELSE SAVE IT IN PROPER SLOT IN
*                                      WRAP AROUND LIST              */
         B     @RC00023                                            0025
@RF00023 DS    0H                                                  0026
*       IF(DMCBLSCP<ADDR(DMCBCARY(F10C)))&(DMCBLSCP>=ADDR(DMCBCARY(F1C)
*           )) THEN                                                0026
         L     @10,DMCBLSCP(,DMCBPTR)                              0026
         LA    @02,DMCBCARY+36(,DMCBPTR)                           0026
         CR    @10,@02                                             0026
         BNL   @RF00026                                            0026
         LA    @02,DMCBCARY(,DMCBPTR)                              0026
         CR    @10,@02                                             0026
         BL    @RF00026                                            0026
*         DMCBLSCP=DMCBLSCP+F4C;                                   0027
         AL    @10,@CF00037                                        0027
         ST    @10,DMCBLSCP(,DMCBPTR)                              0027
*       ELSE                                                       0028
*         DMCBLSCP=ADDR(DMCBCARY(F1C));                            0028
         B     @RC00026                                            0028
@RF00026 LA    @10,DMCBCARY(,DMCBPTR)                              0028
         ST    @10,DMCBLSCP(,DMCBPTR)                              0028
*       DMCBRQC=CALLER14;                                          0029
@RC00026 L     @10,DMCBLSCP(,DMCBPTR)                              0029
         L     @02,CSAVEP(,DMCBPTR)                                0029
         L     @02,CALLER14(,@02)                                  0029
         ST    @02,DMCBRQC(,@10)                                   0029
*     END;                                                         0030
*                                                                  0030
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW DETERMINE REQUEST VALIDITY                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0031
*   IF(DMCBRQST>DMCBPOR)×           /* IS REQUEST RANGE              */
*       (DMCBRQST=LX00C)            /* INVALID                       */
*     THEN                                                         0031
@RC00023 CLI   DMCBRQST(DMCBPTR),8                                 0031
         BH    @RT00031                                            0031
         CLI   DMCBRQST(DMCBPTR),0                                 0031
         BNE   @RF00031                                            0031
@RT00031 DS    0H                                                  0032
*     DO;                           /* INVALID REQUEST               */
*       DMCBRTC=F4C;                /* INDICATE INVALID REQUEST      */
         MVC   DMCBRTC(4,DMCBPTR),@CF00037                         0033
*       DO;                         /* ABEND(F129C) DUMP USER        */
*         RESPECIFY                                                0035
*          (GPR01F) RESTRICTED;                                    0035
*         GPR01F=(F129C)&'00000FFF'X;/* COMP CODE IN BITS 20-31      */
         LA    GPR01F,129                                          0036
*         GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG       */
         O     GPR01F,@CF00241                                     0037
*         SVC(13);                  /* ISSUE ABEND SVC               */
         SVC   13                                                  0038
*         RESPECIFY                                                0039
*          (GPR01F) UNRESTRICTED;                                  0039
*       END;                        /* ABEND(F129C) DUMP USER ABEND
*                                      FOR INVALID REQUEST           */
*     END;                          /* INVALID REQUEST               */
*   ELSE                                                           0042
*     DO;                           /* WITHIN VALID RANGE            */
*                                                                  0042
         B     @RC00031                                            0042
@RF00031 DS    0H                                                  0043
*       /*************************************************************/
*       /*                                                           */
*       /* CALL PROPER ROUTINE. RQPROC IS THE PROPER ENTRY OF RQPROCS*/
*       /* AS SELECTED BY THE DMCBRQST FIELD                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0043
*       RFY                                                        0043
*         GPR01P RSTD;                                             0043
*       GPR01P=DMCBPTR;             /* PASS THE DMCB POINTER         */
         LR    GPR01P,DMCBPTR                                      0044
*       CALL RQPROCS(DMCBRQST)->RQPROC;                            0045
         SLR   @10,@10                                             0045
         IC    @10,DMCBRQST(,DMCBPTR)                              0045
         SLA   @10,2                                               0045
         L     @15,RQPROCS-4(@10)                                  0045
         BALR  @14,@15                                             0045
*       RFY                                                        0046
*         GPR01P UNRSTD;                                           0046
*                                                                  0046
*       /*************************************************************/
*       /*                                                           */
*       /* REMEMBER THIS REQUEST                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0047
*       DMCBLRQ=DMCBRQST;           /* THIS REQUEST IS NOW THE LAST
*                                      REQUEST                       */
         IC    @10,DMCBRQST(,DMCBPTR)                              0047
         STC   @10,DMCBLRQ(,DMCBPTR)                               0047
*       DMCBLRM=DMCBRMOD;           /* UNTIL THE NEXT REQUEST        */
         MVC   DMCBLRM(1,DMCBPTR),DMCBRMOD(DMCBPTR)                0048
*       DMCBLOPT=DMCBOPTS;          /* REMEMBER THE OPTIONS TOO      */
*                                                                  0049
         MVC   DMCBLOPT(1,DMCBPTR),DMCBOPTS(DMCBPTR)               0049
*       /*************************************************************/
*       /*                                                           */
*       /* FORCE VSAM UPDATE MODE OFF AS REQUIRED                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0050
*       IF DMCBRQST=DMCBGER&        /* IF GET REQUEST AND            */
*           DMCBRTC^=F0C THEN       /* GET ERROR                     */
         CLI   DMCBRQST(DMCBPTR),4                                 0050
         BNE   @RF00050                                            0050
         L     @10,DMCBRTC(,DMCBPTR)                               0050
         LTR   @10,@10                                             0050
         BZ    @RF00050                                            0050
*         DMCBUPD=OFF;              /* TURN OFF UPDATE MODE          */
         NI    DMCBUPD(DMCBPTR),B'11101111'                        0051
*       IF DMCBRQST=DMCBPUR×        /* IF PUT REQUEST OR             */
*           DMCBRQST=DMCBERR×       /* ERASE REQUEST OR              */
*           DMCBRQST=DMCBENR THEN   /* END REQUEST                   */
@RF00050 CLI   DMCBRQST(DMCBPTR),5                                 0052
         BE    @RT00052                                            0052
         CLI   DMCBRQST(DMCBPTR),6                                 0052
         BE    @RT00052                                            0052
         CLI   DMCBRQST(DMCBPTR),7                                 0052
         BNE   @RF00052                                            0052
@RT00052 DS    0H                                                  0053
*         DMCBUPD=OFF;              /* TURN OFF UPDATE MODE          */
*                                                                  0053
         NI    DMCBUPD(DMCBPTR),B'11101111'                        0053
*       /*************************************************************/
*       /*                                                           */
*       /* IF FUNCTION ERROR, DO ERROR ANALYSIS                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0054
*       IF DMCBRTC^=F0C&            /* TEST FOR FUNCTION ERROR AND   */
*           NOANLE=OFF THEN         /* ERROR ANALYSIS DESIRED        */
@RF00052 L     @10,DMCBRTC(,DMCBPTR)                               0054
         LTR   @10,@10                                             0054
         BZ    @RF00054                                            0054
         TM    NOANLE(DMCBPTR),B'10000000'                         0054
         BNZ   @RF00054                                            0054
*         DO;                       /* ANALYZE FUNCTION ERROR        */
*           CALL BLSCANLE(DMCB);    /* ANALYZE FUNCTION ERROR        */
         ST    DMCBPTR,@AL00001                                    0056
         L     @15,@CV00209                                        0056
         LA    @01,@AL00001                                        0056
         BALR  @14,@15                                             0056
*         END;                      /* ANALYZE FUNCTION ERROR        */
*       NOANLE=OFF;                 /* RESET NO ERROR ANALYSIS SWITCH*/
@RF00054 NI    NOANLE(DMCBPTR),B'01111111'                         0058
*       CALLER0=DMCBMSG;            /* PASS MESSAGE POINTER TO     0059
*                                      CALLER'S REG 0                */
         L     @10,CSAVEP(,DMCBPTR)                                0059
         L     @02,DMCBMSG(,DMCBPTR)                               0059
         ST    @02,CALLER0(,@10)                                   0059
*     END;                          /* WITHIN VALID RANGE            */
*   RETURN CODE(DMCBRTC);           /* RETURN THE CODE REPORTED BY 0061
*                                      THE FUNCTION                  */
*                                                                  0061
@RC00031 L     @10,DMCBRTC(,DMCBPTR)                               0061
         L     @13,4(,@13)                                         0061
         L     @00,@SIZDATD                                        0061
         LR    @01,@11                                             0061
         BLSCFRES R,LV=(0),A=(1)
         LR    @15,@10                                             0061
         L     @14,12(,@13)                                        0061
         LM    @00,@12,20(@13)                                     0061
         BR    @14                                                 0061
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE STATEMENTS END                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0062
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR01F FIXED(31) REG(1),                                     0062
*     GPR01P PTR(31) REG(1);                                       0062
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0063
*     I031F FIXED(31) BASED,                                       0063
*     I031P PTR(31) BASED,                                         0063
*     I015F FIXED(15) BASED,                                       0063
*     I015P PTR(15) BASED,                                         0063
*     I008P PTR(8) BASED,                                          0063
*     I001C CHAR(1) BASED;                                         0063
*   DCL                                                            0064
*     1 DASPATCH LOCAL BDY(DWORD),  /* PATCH AREA                    */
*      2 DASPATA(DASPATLN) PTR INIT((DASPATLN)0);                  0064
*   END BLSCRQST;                                                  0065
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@AL00001 DS    1A
BLSCRQST CSECT
         DS    0F
@CF00037 DC    F'4'
@CF00241 DC    XL4'80000000'
@DATD    DSECT
         DS    0D
MODNAME  DS    CL8
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSCRQST CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00201 DC    V(BLSCOPEN)
@CV00202 DC    V(BLSCCLSE)
@CV00203 DC    V(BLSCSETT)
@CV00204 DC    V(BLSCGETT)
@CV00205 DC    V(BLSCPUTT)
@CV00206 DC    V(BLSCERSE)
@CV00207 DC    V(BLSCENDD)
@CV00208 DC    V(BLSCPOIN)
@CV00209 DC    V(BLSCANLE)
@CV00210 DC    V(BLSCRTCB)
         DS    0D
@CC00235 DC    C'BLSCRQST'
DASPATCH DS    CL80
         ORG   DASPATCH
DASPATA  DC    20A(0)
         ORG   DASPATCH+80
RQPROCS  DC    VL4(BLSCOPEN)
         DC    VL4(BLSCCLSE)
         DC    VL4(BLSCSETT)
         DC    VL4(BLSCGETT)
         DC    VL4(BLSCPUTT)
         DC    VL4(BLSCERSE)
         DC    VL4(BLSCENDD)
         DC    VL4(BLSCPOIN)
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
DMCBPTR  EQU   @03
GPR01P   EQU   @01
GPR01F   EQU   @01
DMCB     EQU   0
DMCBRTC  EQU   DMCB+12
DMCBFTY  EQU   DMCB+20
DMCBOPN  EQU   DMCB+21
DMCBRQST EQU   DMCB+22
DMCBRMOD EQU   DMCB+23
DMCBOUT  EQU   DMCBRMOD
DMCBOPTS EQU   DMCB+24
DMCBGKY  EQU   DMCBOPTS
DMCBUPD  EQU   DMCBOPTS
DMCBLRQ  EQU   DMCB+25
DMCBLRM  EQU   DMCB+26
DMCBLOPT EQU   DMCB+27
DMCBMFLG EQU   DMCB+28
DMCBREJ  EQU   DMCB+29
DMCBBUFP EQU   DMCB+32
DMCBKEYP EQU   DMCB+44
DMCBMSG  EQU   DMCB+52
DMCBRI   EQU   DMCB+64
DMCBFRE  EQU   DMCB+88
DMCBEOB  EQU   DMCB+92
DMCBACBE EQU   DMCB+124
DMCBRPLF EQU   DMCB+128
DMCBSPEC EQU   DMCB+380
DMCBSUBC EQU   DMCB+404
DMCBAMS  EQU   DMCB+416
DMCBAUDT EQU   DMCB+568
DMCBOPC  EQU   DMCBAUDT+8
DMCBCLC  EQU   DMCBAUDT+12
DMCBLSCP EQU   DMCBAUDT+16
DMCBCARY EQU   DMCBAUDT+20
DMCBWRK  EQU   DMCB+648
DMCBRQC  EQU   0
RQPROC   EQU   0
CALLER14 EQU   12
CALLER0  EQU   20
DMCBDMGR EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
DMCBVSM  EQU   DMCBAMS
DMCBQSM  EQU   DMCBAMS
NOANLE   EQU   DMCBRTC
RQSTSAVE EQU   DMCBWRK
CSAVEP   EQU   RQSTSAVE+4
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00002 EQU   RQSTSAVE+12
NSAVEP   EQU   RQSTSAVE+8
@NM00001 EQU   RQSTSAVE
DMCBRES7 EQU   DMCBQSM+96
DMCBDCB  EQU   DMCBQSM
DMCBACB  EQU   DMCBVSM+76
DMCBRPL  EQU   DMCBVSM
DMCBRES8 EQU   DMCB+640
DMCBMODN EQU   DMCB+632
DMCBFRC  EQU   DMCBAUDT+4
DMCBALC  EQU   DMCBAUDT
DMCBFR   EQU   DMCB+412
DMCBRES6 EQU   DMCB+410
DMCBIRSC EQU   DMCB+408
DMCBDRBP EQU   DMCB+400
DMCBRSZM EQU   DMCB+398
DMCBRSZA EQU   DMCB+396
DMCBCISZ EQU   DMCB+394
DMCBDCBL EQU   DMCB+392
DMCBDCLR EQU   DMCB+390
DMCBDCFM EQU   DMCB+389
DMCBRES5 EQU   DMCB+388
DMCBLBRT EQU   DMCB+386
DMCBLBSQ EQU   DMCB+384
DMCBLBPS EQU   DMCB+383
DMCBLBTY EQU   DMCB+382
DMCBRES4 EQU   DMCB+381
DMCBSPRS EQU   DMCBSPEC
DMCBSPRN EQU   DMCBSPEC
DMCBSPCT EQU   DMCBSPEC
DMCBSPRL EQU   DMCBSPEC
DMCBSPSE EQU   DMCB+376
DMCBSPPR EQU   DMCB+372
DMCBSPTY EQU   DMCB+369
DMCBODIS EQU   DMCB+368
DMCBDISP EQU   DMCB+367
DMCBSTAT EQU   DMCB+366
DMCBRES3 EQU   DMCB+364
DMCBMEMB EQU   DMCB+356
DMCBMODL EQU   DMCB+348
DMCBRES9 EQU   DMCB+340
DMCBPID  EQU   DMCB+332
DMCBTYPE EQU   DMCB+328
DMCBDSN  EQU   DMCB+284
DMCBUNIT EQU   DMCB+276
DMCBDSOR EQU   DMCB+274
DMCBVOL  EQU   DMCB+268
DMCBDDNM EQU   DMCB+260
DMCBSYNM EQU   DMCB+132
DMCBDCBE EQU   DMCBACBE
DMCBARC  EQU   DMCB+120
DMCBCPC  EQU   DMCB+116
DMCBRET  EQU   DMCB+112
DMCBSTL  EQU   DMCB+96
DMCBRES2 EQU   DMCB+85
DMCBSPID EQU   DMCB+84
DMCBRESC EQU   DMCB+80
DMCBZZ1P EQU   DMCB+76
DMCBMSGS EQU   DMCB+72
DMCBMSG0 EQU   DMCB+68
DMCBRRL  EQU   DMCB+60
DMCBRBA  EQU   DMCB+56
DMCBKEYL EQU   DMCB+48
DMCBKPC  EQU   DMCBKEYP
DMCBORL  EQU   DMCB+40
DMCBBLEN EQU   DMCB+36
DMCBBFPC EQU   DMCBBUFP
DMCBRES1 EQU   DMCB+31
DMCBACCM EQU   DMCB+30
DMCBRESB EQU   DMCBMFLG
DMCBFMOD EQU   DMCBMFLG
DMCBOPRS EQU   DMCBOPTS
DMCBLRD  EQU   DMCBOPTS
DMCBBWD  EQU   DMCBOPTS
DMCBAPX  EQU   DMCBOPTS
DMCBRNO  EQU   DMCBGKY
DMCBKYD  EQU   DMCBOPTS
DMCBRMRS EQU   DMCBRMOD
DMCBRM5  EQU   DMCBRMOD
DMCBRM6  EQU   DMCBRMOD
DMCBTMP  EQU   DMCBOUT
DMCBRESA EQU   DMCBOPN
DMCBSOUT EQU   DMCBOPN
DMCBSIN  EQU   DMCBOPN
DMCBVSF  EQU   DMCBFTY
DMCBKSF  EQU   DMCBFTY
DMCBFTRS EQU   DMCBFTY
DMCBSHF  EQU   DMCBFTY
DMCBIRL  EQU   DMCB+16
DMCBTVP  EQU   DMCB+8
DMCBNEXT EQU   DMCB+4
DMCBID   EQU   DMCB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   BLSCRQST,(C'PLS1948',0701,78062)
