         TITLE 'EP=BLSCRFM - IPCS DAS REFORMAT TSO MESSAGE TO DAS FORMA*
               AT       '
*     /* CHANGE ACTIVITY
*    THIS MODULE IS WRITTEN FOR @G57LPSR
BLSCRFM  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'BLSCRFM   78.062'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         BLSCGETF R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(12),0(@01)                                 0002
         EJECT
*                                                                  0015
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE MODULE STATUS                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0015
*   DMCBPTR=ADDR(DMCBPARM);         /* BASE THE DMCB                 */
         L     DMCBPTR,@PC00001                                    0015
*   MODNAME=LMODNMC;                /* INIT THE MODULE NAME          */
         MVC   MODNAME(8),@CC00317                                 0016
*   RETCODE=F0C;                    /* INIT THE MODULE RETURN CODE   */
         SLR   @10,@10                                             0017
         ST    @10,RETCODE                                         0017
*   SUBCODE=F0C;                    /* INIT THE SUBROUTINE RETURN  0018
*                                      CODE                          */
*                                                                  0018
         ST    @10,SUBCODE                                         0018
*   /*****************************************************************/
*   /*                                                               */
*   /* REFORMAT MESSAGE                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0019
*   RFMVLEN=MTBUFLEN;               /* PICK UP TSO MESSAGE LENGTH    */
         L     @10,@PC00001+8                                      0019
         L     @10,BUFP(,@10)                                      0019
         LH    RFMVLEN,MTBUFLEN(,@10)                              0019
*   IF RFMVLEN>F4C THEN             /* TEST FOR MESSAGE PRESENT      */
         LA    @10,4                                               0020
         CR    RFMVLEN,@10                                         0020
         BNH   @RF00020                                            0020
*     DO;                           /* MESSAGE IS PRESENT            */
*       RFMVLEN=MIN(RFMVLEN-(LENGTH(MTBUFLEN)+LENGTH(MTBUFOFF)),LENGTH(
*           MTBUFTXT)-LENGTH(CARRC));/* ADJUST MOVE LENGTH FOR TEXT
*                                      PLUS CARRIAGE CONTROL       0022
*                                      CHARACTER AND TRUNCATE TO   0022
*                                      MAXIMUM MESSAGE LENGTH        */
         LCR   @10,@10                                             0022
         ALR   @10,RFMVLEN                                         0022
         LA    @04,250                                             0022
         CR    @10,@04                                             0022
         BNH   *+6
         LR    @10,@04                                             0022
         LR    RFMVLEN,@10                                         0022
*       RFMFLEN=(RFMVLEN+LENGTH(MSGDPRF)+LENGTH(MSGDNXT)+LENGTH(MSGDLEN
*           )+LENGTH(MSGDPAD)+LENGTH(CARRC)+F7C)&XDWBDYC;/* CALCULATE
*                                      GETMAIN LENGTH                */
         LA    RFMFLEN,24                                          0023
         ALR   RFMFLEN,RFMVLEN                                     0023
         N     RFMFLEN,@CF00319                                    0023
*       DO;                         /* GETMAIN (RC) LV(RFMFLEN)    0024
*                                      SP(ZZZSPEXC) RTCD(SUBCODE)    */
*         RESPECIFY                                                0025
*          (GPR01F,                                                0025
*           GPR15F,                                                0025
*           GPR00F) RESTRICTED;                                    0025
*         GPR01F=0;                 /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                       0026
*         GPR15F=0;                 /* RC-TYPE GETMAIN               */
         SLR   GPR15F,GPR15F                                       0027
*         GPR00F=RFMFLEN;           /* LENGTH REQUESTED              */
         LR    GPR00F,RFMFLEN                                      0028
*         GPR15F=GPR15F×((ZZZSPEXC)*256);/* SP IN BYTE 2             */
         O     GPR15F,@CF00326                                     0029
*         SVC(120);                 /* RC/RU-FORM OF GETMAIN         */
         SVC   120                                                 0030
*         SUBCODE=GPR15F;           /* SET RETURN CODE               */
         ST    GPR15F,SUBCODE                                      0031
*         RESPECIFY                                                0032
*          (GPR01F,                                                0032
*           GPR15F,                                                0032
*           GPR00F) UNRESTRICTED;                                  0032
*       END;                        /* GETMAIN (RC) LV(RFMFLEN)    0033
*                                      SP(ZZZSPEXC) RTCD(SUBCODE)  0033
*                                      SPACE FOR TEXT LINE           */
*       RFY                                                        0034
*         GPR01P RSTD;                                             0034
*       RFMSGP=GPR01P;              /* ADDRESS OF TEXT LINE          */
         ST    GPR01P,RFMSGP                                       0035
*       RFY                                                        0036
*         GPR01P UNRSTD;                                           0036
*       IF SUBCODE^=0 THEN          /* TEST FOR GETMAIN ERROR        */
         L     @10,SUBCODE                                         0037
         LTR   @10,@10                                             0037
         BZ    @RF00037                                            0037
*         DO;                       /* GETMAIN FAILED                */
*           RETCODE=SEVERE;         /* NOTIFY CALLER                 */
         MVC   RETCODE(4),@CF00054                                 0039
*           CALL BLSCGMF(DMCB,ANCH,MODNAME);/* BUILD GETMAIN FAILURE
*                                      MESSAGE                       */
         ST    DMCBPTR,@AL00001                                    0040
         L     @10,@PC00001+4                                      0040
         ST    @10,@AL00001+4                                      0040
         LA    @10,MODNAME                                         0040
         ST    @10,@AL00001+8                                      0040
         L     @15,@CV00300                                        0040
         LA    @01,@AL00001                                        0040
         BALR  @14,@15                                             0040
*         END;                      /* GETMAIN FAILED                */
*       ELSE                                                       0042
*         DO;                       /* GETMAIN OK                    */
         B     @RC00037                                            0042
@RF00037 DS    0H                                                  0043
*           MSGDSPID=ZZZSPEXC;      /* SUBPOOL ID FOR FREEMAIN       */
         L     @10,RFMSGP                                          0043
         MVI   MSGDSPID(@10),X'01'                                 0043
*           MSGDFLEN=RFMFLEN;       /* MESSAGE FREEMAIN LENGTH       */
         STCM  RFMFLEN,7,MSGDFLEN(@10)                             0044
*           MSGDBAK=RFMSGP;         /* MESSAGE BACK CHAIN            */
         ST    @10,MSGDBAK(,@10)                                   0045
*           MSGDNXT=F0C;            /* MARK END OF MESSAGE CHAIN     */
         SLR   @06,@06                                             0046
         ST    @06,MSGDNXT(,@10)                                   0046
*           MSGDLEN=RFMVLEN+LENGTH(MSGDLEN)+LENGTH(MSGDPAD)+LENGTH(
*               CARRC);             /* SET MESSAGE LENGTH            */
         LA    @04,5                                               0047
         ALR   @04,RFMVLEN                                         0047
         STH   @04,MSGDLEN(,@10)                                   0047
*           MSGDPAD=F0C;            /* ZERO THE MSG PAD              */
         STH   @06,MSGDPAD(,@10)                                   0048
*           MSGDTXT(F1C)=CARRC;     /* INSERT CARRIAGE CONTROL     0049
*                                      CHARACTER                     */
         MVI   MSGDTXT(@10),C' '                                   0049
*           MSGDTXT(F2C:RFMVLEN+F1C)=MTBUFTXT(F1C:RFMVLEN);/* MOVE 0050
*                                      MESSAGE TO OUTPUT             */
         LR    @06,RFMVLEN                                         0050
         BCTR  @06,0                                               0050
         L     @04,@PC00001+8                                      0050
         L     @04,BUFP(,@04)                                      0050
         EX    @06,@SM00339                                        0050
*           RFMSGP=RFMSGP+LENGTH(MSGDPRF);/* BASE MESSAGE FOR HOOK   */
         AL    @10,@CF00052                                        0051
         ST    @10,RFMSGP                                          0051
*           CALL BLSCHOK(DMCB,ANCH,RFMSGP);/* HOOK MESSAGE TO CHAIN  */
         ST    DMCBPTR,@AL00001                                    0052
         L     @10,@PC00001+4                                      0052
         ST    @10,@AL00001+4                                      0052
         LA    @10,RFMSGP                                          0052
         ST    @10,@AL00001+8                                      0052
         L     @15,@CV00301                                        0052
         LA    @01,@AL00001                                        0052
         BALR  @14,@15                                             0052
*         END;                      /* GETMAIN OK                    */
*     END;                          /* MESSAGE IS PRESENT            */
@RC00037 DS    0H                                                  0055
*   RETURN CODE(RETCODE);                                          0055
@RF00020 L     @10,RETCODE                                         0055
         L     @13,4(,@13)                                         0055
         L     @00,@SIZDATD                                        0055
         LR    @01,@11                                             0055
         BLSCFREF R,LV=(0),A=(1)
         LR    @15,@10                                             0055
         L     @14,12(,@13)                                        0055
         LM    @00,@12,20(@13)                                     0055
         BR    @14                                                 0055
*                                                                  0056
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE STATEMENTS END                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0056
*/*BLSUPEND--MVS IPCS MODULE                                         */
*                                                                  0056
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                     0056
*     GPR01F FIXED(31) REG(1),                                     0056
*     GPR15F FIXED(31) REG(15),                                    0056
*     GPR01P PTR(31) REG(1);                                       0056
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0057
*     I031F FIXED(31) BASED,                                       0057
*     I031P PTR(31) BASED,                                         0057
*     I015F FIXED(15) BASED,                                       0057
*     I015P PTR(15) BASED,                                         0057
*     I008P PTR(8) BASED,                                          0057
*     I001C CHAR(1) BASED;                                         0057
*   GENERATE NODEFS NOREFS DATA;                                   0058
*   END                             /* BLRPEND THATS ALL FOLKS       */
*                                                                  0059
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (BLSDMSGD)                                       */
*                                                                  0059
*       ;                                                          0059
@EL00001 L     @13,4(,@13)                                         0059
@EF00001 L     @00,@SIZDATD                                        0059
         LR    @01,@11                                             0059
         BLSCFREF R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0059
         BR    @14                                                 0059
@DATA    DS    0H
@SM00339 MVC   MSGDTXT+1(0,@10),MTBUFTXT(@04)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@AL00001 DS    3A
BLSCRFM  CSECT
         DS    0F
@CF00052 DC    F'8'
@CF00054 DC    F'12'
@CF00326 DC    F'256'
@CF00319 DC    XL4'FFFFFFF8'
@DATD    DSECT
         DS    0D
RFMSGP   DS    A
MODSTAT  DS    CL16
         ORG   MODSTAT
MODNAME  DS    CL8
RETCODE  DS    FL4
SUBCODE  DS    FL4
         ORG   MODSTAT+16
BLSCRFM  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00300 DC    V(BLSCGMF)
@CV00301 DC    V(BLSCHOK)
         DS    0D
@CC00317 DC    C'BLSCRFM '
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSCRFM  CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSCRFM+19)/20+7)/8)CL8'BLSCRFM'
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSCRFM  CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RFMFLEN  EQU   @06
RFMVLEN  EQU   @05
DMCBPTR  EQU   @07
GPR01F   EQU   @01
GPR15F   EQU   @15
GPR00F   EQU   @00
GPR01P   EQU   @01
DMCB     EQU   0
DMCBFTY  EQU   DMCB+20
DMCBOPN  EQU   DMCB+21
DMCBRMOD EQU   DMCB+23
DMCBOUT  EQU   DMCBRMOD
DMCBOPTS EQU   DMCB+24
DMCBGKY  EQU   DMCBOPTS
DMCBMFLG EQU   DMCB+28
DMCBBUFP EQU   DMCB+32
DMCBKEYP EQU   DMCB+44
DMCBRI   EQU   DMCB+64
DMCBFRE  EQU   DMCB+88
DMCBEOB  EQU   DMCB+92
DMCBACBE EQU   DMCB+124
DMCBSPEC EQU   DMCB+380
DMCBAMS  EQU   DMCB+416
DMCBAUDT EQU   DMCB+568
DMCBLSCP EQU   DMCBAUDT+16
MSGDENT  EQU   0
MSGDPRF  EQU   MSGDENT
MSGDSPID EQU   MSGDPRF
MSGDFLEN EQU   MSGDPRF+1
MSGDBAK  EQU   MSGDPRF+4
MSGDWRT  EQU   MSGDENT+8
MSGDNXT  EQU   MSGDWRT
MSGDMOV  EQU   MSGDWRT+4
MSGDLEN  EQU   MSGDMOV
MSGDPAD  EQU   MSGDMOV+2
MSGDTXT  EQU   MSGDMOV+4
MSGWENT  EQU   0
MSGWMOV  EQU   MSGWENT+4
MTBUF    EQU   0
MTBUFLEN EQU   MTBUF
MTBUFOFF EQU   MTBUF+2
MTBUFTXT EQU   MTBUF+4
DMCBDMGR EQU   0
DMCBRQC  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
DMCBPARM EQU   0
ANCH     EQU   0
BUFP     EQU   0
DMCBVSM  EQU   DMCBAMS
DMCBQSM  EQU   DMCBAMS
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
DMCBRES7 EQU   DMCBQSM+96
DMCBDCB  EQU   DMCBQSM
DMCBACB  EQU   DMCBVSM+76
DMCBRPL  EQU   DMCBVSM
MSGWTXT  EQU   MSGWMOV+4
MSGWPAD  EQU   MSGWMOV+2
MSGWLEN  EQU   MSGWMOV
MSGWNXT  EQU   MSGWENT
DMCBWRK  EQU   DMCB+648
DMCBRES8 EQU   DMCB+640
DMCBMODN EQU   DMCB+632
DMCBCARY EQU   DMCBAUDT+20
DMCBCLC  EQU   DMCBAUDT+12
DMCBOPC  EQU   DMCBAUDT+8
DMCBFRC  EQU   DMCBAUDT+4
DMCBALC  EQU   DMCBAUDT
DMCBFR   EQU   DMCB+412
DMCBRES6 EQU   DMCB+410
DMCBIRSC EQU   DMCB+408
DMCBSUBC EQU   DMCB+404
DMCBDRBP EQU   DMCB+400
DMCBRSZM EQU   DMCB+398
DMCBRSZA EQU   DMCB+396
DMCBCISZ EQU   DMCB+394
DMCBDCBL EQU   DMCB+392
DMCBDCLR EQU   DMCB+390
DMCBDCFM EQU   DMCB+389
DMCBRES5 EQU   DMCB+388
DMCBLBRT EQU   DMCB+386
DMCBLBSQ EQU   DMCB+384
DMCBLBPS EQU   DMCB+383
DMCBLBTY EQU   DMCB+382
DMCBRES4 EQU   DMCB+381
DMCBSPRS EQU   DMCBSPEC
DMCBSPRN EQU   DMCBSPEC
DMCBSPCT EQU   DMCBSPEC
DMCBSPRL EQU   DMCBSPEC
DMCBSPSE EQU   DMCB+376
DMCBSPPR EQU   DMCB+372
DMCBSPTY EQU   DMCB+369
DMCBODIS EQU   DMCB+368
DMCBDISP EQU   DMCB+367
DMCBSTAT EQU   DMCB+366
DMCBRES3 EQU   DMCB+364
DMCBMEMB EQU   DMCB+356
DMCBMODL EQU   DMCB+348
DMCBRES9 EQU   DMCB+340
DMCBPID  EQU   DMCB+332
DMCBTYPE EQU   DMCB+328
DMCBDSN  EQU   DMCB+284
DMCBUNIT EQU   DMCB+276
DMCBDSOR EQU   DMCB+274
DMCBVOL  EQU   DMCB+268
DMCBDDNM EQU   DMCB+260
DMCBSYNM EQU   DMCB+132
DMCBRPLF EQU   DMCB+128
DMCBDCBE EQU   DMCBACBE
DMCBARC  EQU   DMCB+120
DMCBCPC  EQU   DMCB+116
DMCBRET  EQU   DMCB+112
DMCBSTL  EQU   DMCB+96
DMCBRES2 EQU   DMCB+85
DMCBSPID EQU   DMCB+84
DMCBRESC EQU   DMCB+80
DMCBZZ1P EQU   DMCB+76
DMCBMSGS EQU   DMCB+72
DMCBMSG0 EQU   DMCB+68
DMCBRRL  EQU   DMCB+60
DMCBRBA  EQU   DMCB+56
DMCBMSG  EQU   DMCB+52
DMCBKEYL EQU   DMCB+48
DMCBKPC  EQU   DMCBKEYP
DMCBORL  EQU   DMCB+40
DMCBBLEN EQU   DMCB+36
DMCBBFPC EQU   DMCBBUFP
DMCBRES1 EQU   DMCB+31
DMCBACCM EQU   DMCB+30
DMCBREJ  EQU   DMCB+29
DMCBRESB EQU   DMCBMFLG
DMCBFMOD EQU   DMCBMFLG
DMCBLOPT EQU   DMCB+27
DMCBLRM  EQU   DMCB+26
DMCBLRQ  EQU   DMCB+25
DMCBOPRS EQU   DMCBOPTS
DMCBLRD  EQU   DMCBOPTS
DMCBBWD  EQU   DMCBOPTS
DMCBUPD  EQU   DMCBOPTS
DMCBAPX  EQU   DMCBOPTS
DMCBRNO  EQU   DMCBGKY
DMCBKYD  EQU   DMCBOPTS
DMCBRMRS EQU   DMCBRMOD
DMCBRM5  EQU   DMCBRMOD
DMCBRM6  EQU   DMCBRMOD
DMCBTMP  EQU   DMCBOUT
DMCBRQST EQU   DMCB+22
DMCBRESA EQU   DMCBOPN
DMCBSOUT EQU   DMCBOPN
DMCBSIN  EQU   DMCBOPN
DMCBVSF  EQU   DMCBFTY
DMCBKSF  EQU   DMCBFTY
DMCBFTRS EQU   DMCBFTY
DMCBSHF  EQU   DMCBFTY
DMCBIRL  EQU   DMCB+16
DMCBRTC  EQU   DMCB+12
DMCBTVP  EQU   DMCB+8
DMCBNEXT EQU   DMCB+4
DMCBID   EQU   DMCB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   BLSCRFM,(C'PLS1942',0701,78062)
