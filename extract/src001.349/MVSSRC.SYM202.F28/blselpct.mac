         TITLE 'CHECK TIME                                             *
                        '
*           /*CHANGE ACTIVITY*/
*THIS MODULE IS WRITTEN FOR @G57LPMN
BLSELPCT CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'BLSELPCT  78.065'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         BLSUALLS R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(28),0(@01)                                 0002
*                                      MSG CHAIN                     */
*                                                                  0142
*   /*****************************************************************/
*   /*                                                               */
*   /* START OF EXECUTABLE CODE                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0143
*   ZZ2PTR=ADDR(ZZ2PARM);           /* INITIALIZE ZZ2 POINTER        */
         L     ZZ2PTR,@PC00001                                     0143
*   RETC=ZERO;                      /* INITIALIZE THE RETURN         */
         SLR   RETC,RETC                                           0144
*   RETCDE=ZERO;                    /* CODES                         */
         SLR   RETCDE,RETCDE                                       0145
*   ZZ1PDRP->DMCBMSG=ZERO;          /* SET MSG AREA PTR TO 0         */
         L     @14,ZZ2ZZ1P(,ZZ2PTR)                                0146
         L     @14,ZZ1PDRP(,@14)                                   0146
         SLR   @10,@10                                             0146
         ST    @10,DMCBMSG(,@14)                                   0146
*   GEN CODE SETS(NEWFTIME);                                       0147
*                                                                  0147
*                                             /*GET THE CURRENT TIME  *
         STCK  NEWFTIME
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE MAXIMUM TIME HAS ELAPSED, OR THE MAXIMUM NUMBER OF     */
*   /* LINES ARE IN THE OUTPUT QUEUE, OR ARE ON THE DEFAULT PROBLEM, */
*   /* THEN CLOSE THE PDR                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0148
*   OLDFTIME=PARMTIME;                                             0148
         L     @14,@PC00001+4                                      0148
         MVC   OLDFTIME(8),PARMTIME(@14)                           0148
*   IF(CURRTIME-STARTIME>=MAX#SECS*CLOCKINC/DIVISOR)/* IF CURRENT  0149
*                                      TIME MINUS START TIME IS    0149
*                                      GREATER THAN MAXIMUM TIME     */
*       ×(QUEUELNS>=MAXQUEUE)       /* OR # OF LINES IN OUTPUT QUEUE
*                                      >= MAXIMUM # OF LINES ALLOWED
*                                      IN THE QUEUE                  */
*       ×(LPPRBPTR=DEFPTR)          /* OR ARE ON THE DEFAULT PROBLEM */
*     THEN                                                         0149
         L     @14,CURRTIME                                        0149
         SL    @14,STARTIME                                        0149
         CL    @14,@CF00104                                        0149
         BNL   @RT00149                                            0149
         L     @14,@PC00001+20                                     0149
         L     @14,QUEUELNS(,@14)                                  0149
         C     @14,@CF00958                                        0149
         BNL   @RT00149                                            0149
         L     @14,@PC00001+12                                     0149
         L     @14,LPWAPTR(,@14)                                   0149
         L     @14,LPPRBPTR(,@14)                                  0149
         LTR   @14,@14                                             0149
         BNZ   @RF00149                                            0149
@RT00149 DS    0H                                                  0150
*     DO;                                                          0150
*       DO;                         /* BLSCLOSE(ZZ1PDRP)DISP         */
*         RFY                                                      0152
*           GPR01P RSTD;                                           0152
*         GPR01P=ZZ1PDRP;           /* ADDRESS THE DMCB              */
         L     @14,ZZ2ZZ1P(,ZZ2PTR)                                0153
         L     GPR01P,ZZ1PDRP(,@14)                                0153
*         RFY                                                      0154
*           DMCB BASED(GPR01P);                                    0154
*         IF((GPR01P&'FFFFFFF8'X)=GPR01P)&DMCBID='DMCB'/* VALID DMCB
*                                      ?                             */
*           THEN                                                   0155
         LR    @14,GPR01P                                          0155
         N     @14,@CF00984                                        0155
         CLR   @14,GPR01P                                          0155
         BNE   @RF00155                                            0155
         CLC   DMCBID(4,GPR01P),@CC00985                           0155
         BNE   @RF00155                                            0155
*           DO;                                                    0156
*             DMCBRQST=DMCBCLR;     /* INDICATE CLOSE REQUEST        */
         MVI   DMCBRQST(GPR01P),X'02'                              0157
*             DMCBTMP='0'B;         /* INDICATE NON TEMP CLOSE       */
*             DMCBRM6='0'B;         /* INDICATE                      */
*             DMCBRM5='0'B;         /* DISP OPTION                   */
         NI    DMCBTMP(GPR01P),B'00011111'                         0160
*             CALL DMCBRI->DMCBDMGR;/* CALL BLSCRQST                 */
         L     @15,DMCBRI(,GPR01P)                                 0161
         BALR  @14,@15                                             0161
*           END;                                                   0162
*         ELSE                                                     0163
*           DO;                                                    0163
         B     @RC00155                                            0163
@RF00155 DS    0H                                                  0164
*             RFY                                                  0164
*              (GPR00F,                                            0164
*               GPR15F) RSTD;                                      0164
*             GPR00F=0;             /* INDICATE NO MESSAGE CHAIN     */
         SLR   GPR00F,GPR00F                                       0165
*             GPR15F=16;            /* INDICATE INVALID DMCB         */
         LA    GPR15F,16                                           0166
*             RFY                                                  0167
*              (GPR00F,                                            0167
*               GPR15F);                                           0167
*           END;                                                   0168
*         RFY                                                      0169
*           DMCB;                                                  0169
@RC00155 DS    0H                                                  0170
*         RFY                                                      0170
*           GPR01P;                                                0170
*       END;                        /* BLSCLOSE(ZZ1PDRP)DISP CLOSE 0171
*                                      THE PDR                       */
*       IF RETCDE^=ZZZFLAGI         /* IF RETURN CODE ^= 0           */
*         THEN                                                     0172
         SLR   @14,@14                                             0172
         CR    RETCDE,@14                                          0172
         BE    @RF00172                                            0172
*         DO;                                                      0173
*           IF RETCDE=ZZZFLAGT      /* IF RETURN CODE = 16           */
*             THEN                                                 0174
         C     RETCDE,@CF00065                                     0174
         BNE   @RF00174                                            0174
*             ERRHEAD=ZERO;         /* THEN OUTPUT 1 ERROR MSG       */
         ST    @14,ERRHEAD                                         0175
*           ELSE                                                   0176
*             ERRHEAD=ZZ1PDRP->DMCBMSG;/* ELSE OUTPUT MSG CHAIN      */
         B     @RC00174                                            0176
@RF00174 L     @14,ZZ2ZZ1P(,ZZ2PTR)                                0176
         L     @14,ZZ1PDRP(,@14)                                   0176
         L     @14,DMCBMSG(,@14)                                   0176
         ST    @14,ERRHEAD                                         0176
*           DO;                     /* BLSDMSG (ZZ2PARM,PUTID,DATAHEA
*                                      D,BLSDMSGS) ROUTE(BOTH)       */
@RC00174 DS    0H                                                  0178
*             CALL BLSDMSG0(ZZ2PARM,PUTID,DATAHEAD,BLSDMSGS,'00110000'B
*                 ,0);              /* BUILD MESSAGE                 */
         L     @14,@PC00001                                        0178
         ST    @14,@AL00001                                        0178
         LA    @14,@CF00980                                        0178
         ST    @14,@AL00001+4                                      0178
         L     @14,@PC00001+16                                     0178
         ST    @14,@AL00001+8                                      0178
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0178
         ST    @14,@AL00001+12                                     0178
         LA    @14,@CB00988                                        0178
         ST    @14,@AL00001+16                                     0178
         LA    @14,@CF00059                                        0178
         ST    @14,@AL00001+20                                     0178
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0178
         LA    @01,@AL00001                                        0178
         BALR  @14,@15                                             0178
*           END;                    /* BLSDMSG (ZZ2PARM,PUTID,DATAHEA
*                                      D,BLSDMSGS) ROUTE(BOTH) OUTPUT
*                                      CONTENTS OF THE DATA QUEUE    */
*           DO;                     /* BLSDMSG (ZZ2PARM,CLOSEID,ERRHE
*                                      AD,BLSDMSGS) LIFO ROUTE(TERM) */
*             CALL BLSDMSG0(ZZ2PARM,CLOSEID,ERRHEAD,BLSDMSGS,'10010000'
*                 ,0);              /* BUILD MESSAGE                 */
         L     @14,@PC00001                                        0181
         ST    @14,@AL00001                                        0181
         LA    @14,@CF00976                                        0181
         ST    @14,@AL00001+4                                      0181
         LA    @14,ERRHEAD                                         0181
         ST    @14,@AL00001+8                                      0181
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0181
         ST    @14,@AL00001+12                                     0181
         LA    @14,@CB00989                                        0181
         ST    @14,@AL00001+16                                     0181
         LA    @14,@CF00059                                        0181
         ST    @14,@AL00001+20                                     0181
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0181
         LA    @01,@AL00001                                        0181
         BALR  @14,@15                                             0181
*           END;                    /* BLSDMSG (ZZ2PARM,CLOSEID,ERRHE
*                                      AD,BLSDMSGS) LIFO ROUTE(TERM)
*                                      BLSCLOSE ERROR MESSAGE        */
*           DO;                     /* ABEND(CLABEND) DUMP           */
*             RESPECIFY                                            0184
*              (GPR01F) RESTRICTED;                                0184
*             GPR01F=CLABEND;       /* COMP CODE IN REG 1            */
         LA    GPR01F,137                                          0185
*             GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG   */
         O     GPR01F,@CF00074                                     0186
*             SVC(13);              /* ISSUE ABEND SVC               */
         SVC   13                                                  0187
*             RESPECIFY                                            0188
*              (GPR01F) UNRESTRICTED;                              0188
*           END;                    /* ABEND(CLABEND) DUMP ABEND     */
*         END;                                                     0190
*       ELSE                                                       0191
*         DO;                                                      0191
*                                                                  0191
         B     @RC00172                                            0191
@RF00172 DS    0H                                                  0192
*           /*********************************************************/
*           /*                                                       */
*           /* OUTPUT SUBTITLES NEEDED FOR THE LIST AND ABSTRACT     */
*           /* FORMATS                                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0192
*           IF((LPLIST=ON           /* IF LIST FORMAT                */
*               ×LPABST=ON)         /* OR ABSTRACT FORMAT            */
*               &(LPSUBTIT=OFF)     /* AND HAVE NOT OUTPUTTED      0192
*                                      SUBTITLES YET                 */
*               &(PIDCOUNT>ZERO))   /* AND AT LEAST 1 PROBLEM IS IN
*                                      THE DATA QUEUE                */
*             THEN                                                 0192
         L     @14,@PC00001+12                                     0192
         L     @14,LPWAPTR(,@14)                                   0192
         TM    LPLIST(@14),B'11000000'                             0192
         BZ    @RF00192                                            0192
         TM    LPSUBTIT(@14),B'00000010'                           0192
         BNZ   @RF00192                                            0192
         SLR   @14,@14                                             0192
         L     @10,@PC00001+24                                     0192
         C     @14,PIDCOUNT(,@10)                                  0192
         BNL   @RF00192                                            0192
*             DO;                                                  0193
*               SUBTITHD=ZERO;      /* SET SUBTITLE ADDR TO 0        */
         ST    @14,SUBTITHD                                        0194
*               IF ZZ2AFP=ON        /* IF OUTPUTTING TO              */
*                 THEN                                             0195
         TM    ZZ2AFP(ZZ2PTR),B'10000000'                          0195
         BNO   @RF00195                                            0195
*                 DO;               /* PRINTER                       */
*                   DO;             /* BLSDMSG (ZZ2PARM,LISTHDID,SUBT
*                                      ITHD,BLSDMSGS)                */
*                     CALL BLSDMSG0(ZZ2PARM,LISTHDID,SUBTITHD,BLSDMSGS,
*                         '00000000'B,0);/* BUILD MESSAGE            */
         L     @14,@PC00001                                        0198
         ST    @14,@AL00001                                        0198
         LA    @14,@CF00963                                        0198
         ST    @14,@AL00001+4                                      0198
         LA    @14,SUBTITHD                                        0198
         ST    @14,@AL00001+8                                      0198
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0198
         ST    @14,@AL00001+12                                     0198
         LA    @14,@CB00992                                        0198
         ST    @14,@AL00001+16                                     0198
         LA    @14,@CF00059                                        0198
         ST    @14,@AL00001+20                                     0198
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0198
         LA    @01,@AL00001                                        0198
         BALR  @14,@15                                             0198
*                   END;            /* BLSDMSG (ZZ2PARM,LISTHDID,SUBT
*                                      ITHD,BLSDMSGS) PUT SUBTITLE IN
*                                      CSECT FOR BLSUPRTT            */
*                   DO;             /* BLSDMSG (ZZ2PARM,BLANKID,SUBTI
*                                      THD,BLSDMSGS)                 */
*                     CALL BLSDMSG0(ZZ2PARM,BLANKID,SUBTITHD,BLSDMSGS,
*                         '00000000'B,0);/* BUILD MESSAGE            */
         L     @14,@PC00001                                        0201
         ST    @14,@AL00001                                        0201
         LA    @14,@CF00965                                        0201
         ST    @14,@AL00001+4                                      0201
         LA    @14,SUBTITHD                                        0201
         ST    @14,@AL00001+8                                      0201
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0201
         ST    @14,@AL00001+12                                     0201
         LA    @14,@CB00992                                        0201
         ST    @14,@AL00001+16                                     0201
         LA    @14,@CF00059                                        0201
         ST    @14,@AL00001+20                                     0201
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0201
         LA    @01,@AL00001                                        0201
         BALR  @14,@15                                             0201
*                   END;            /* BLSDMSG (ZZ2PARM,BLANKID,SUBTI
*                                      THD,BLSDMSGS) FOLLOWED BY A 0202
*                                      BLANK LINE                    */
*                   CALL BLSUPRTT(ZZ2PARM,SUBTEXT);/* CALL PRINT   0203
*                                      SUBTITLE INTERFACE MODULE     */
         L     @14,@PC00001                                        0203
         ST    @14,@AL00001                                        0203
         L     @14,SUBTITHD                                        0203
         ST    @14,@AL00001+4                                      0203
         L     @10,ZZ2BVTP(,ZZ2PTR)                                0203
         L     @15,BVTPRTTP(,@10)                                  0203
         LA    @01,@AL00001                                        0203
         BALR  @14,@15                                             0203
*                   DO;             /* BLSDMSG (ZZ2PARM,PUTID,SUBTITH
*                                      D,BLSDMSGS)                   */
*                     CALL BLSDMSG0(ZZ2PARM,PUTID,SUBTITHD,BLSDMSGS,
*                         '00000000'B,0);/* BUILD MESSAGE            */
         L     @14,@PC00001                                        0205
         ST    @14,@AL00001                                        0205
         LA    @14,@CF00980                                        0205
         ST    @14,@AL00001+4                                      0205
         LA    @14,SUBTITHD                                        0205
         ST    @14,@AL00001+8                                      0205
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0205
         ST    @14,@AL00001+12                                     0205
         LA    @14,@CB00992                                        0205
         ST    @14,@AL00001+16                                     0205
         LA    @14,@CF00059                                        0205
         ST    @14,@AL00001+20                                     0205
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0205
         LA    @01,@AL00001                                        0205
         BALR  @14,@15                                             0205
*                   END;            /* BLSDMSG (ZZ2PARM,PUTID,SUBTITH
*                                      D,BLSDMSGS) FREE SUBTITLE   0206
*                                      STORAGE                       */
*                 END;                                             0207
*               ELSE                                               0208
*                 ;                                                0208
@RF00195 DS    0H                                                  0209
*               SUBTITHD=ZERO;      /* SET SUBTITLE HEADER BACK TO 0209
*                                      ZERO                          */
         SLR   @14,@14                                             0209
         ST    @14,SUBTITHD                                        0209
*               IF(ZZ2AFT=ON        /* IF OUTPUTTING TO THE TERMINAL */
*                   ×(ZZ2AFP=OFF&ZZ2AFT=OFF))/* OR FORCING OUTPUT TO
*                                      THE TERMINAL                  */
*                 THEN                                             0210
         TM    ZZ2AFT(ZZ2PTR),B'01000000'                          0210
         BO    @RT00210                                            0210
         TM    ZZ2AFP(ZZ2PTR),B'11000000'                          0210
         BNZ   @RF00210                                            0210
@RT00210 DS    0H                                                  0211
*                 DO;                                              0211
*                   DO;             /* BLSDMSG (ZZ2PARM,LISTHDID,SUBT
*                                      ITHD,BLSDMSGS)                */
*                     CALL BLSDMSG0(ZZ2PARM,LISTHDID,SUBTITHD,BLSDMSGS,
*                         '00000000'B,0);/* BUILD MESSAGE            */
         L     @14,@PC00001                                        0213
         ST    @14,@AL00001                                        0213
         LA    @14,@CF00963                                        0213
         ST    @14,@AL00001+4                                      0213
         LA    @14,SUBTITHD                                        0213
         ST    @14,@AL00001+8                                      0213
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0213
         ST    @14,@AL00001+12                                     0213
         LA    @14,@CB00992                                        0213
         ST    @14,@AL00001+16                                     0213
         LA    @14,@CF00059                                        0213
         ST    @14,@AL00001+20                                     0213
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0213
         LA    @01,@AL00001                                        0213
         BALR  @14,@15                                             0213
*                   END;            /* BLSDMSG (ZZ2PARM,LISTHDID,SUBT
*                                      ITHD,BLSDMSGS) THEN PUT     0214
*                                      SUBTITLE IN QUEUE FOR       0214
*                                      OUTPUTTING                    */
*                   DO;             /* BLSDMSG (ZZ2PARM,BLANKID,SUBTI
*                                      THD,BLSDMSGS)                 */
*                     CALL BLSDMSG0(ZZ2PARM,BLANKID,SUBTITHD,BLSDMSGS,
*                         '00000000'B,0);/* BUILD MESSAGE            */
         L     @14,@PC00001                                        0216
         ST    @14,@AL00001                                        0216
         LA    @14,@CF00965                                        0216
         ST    @14,@AL00001+4                                      0216
         LA    @14,SUBTITHD                                        0216
         ST    @14,@AL00001+8                                      0216
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0216
         ST    @14,@AL00001+12                                     0216
         LA    @14,@CB00992                                        0216
         ST    @14,@AL00001+16                                     0216
         LA    @14,@CF00059                                        0216
         ST    @14,@AL00001+20                                     0216
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0216
         LA    @01,@AL00001                                        0216
         BALR  @14,@15                                             0216
*                   END;            /* BLSDMSG (ZZ2PARM,BLANKID,SUBTI
*                                      THD,BLSDMSGS) ALONG WITH A  0217
*                                      BLANK LINE                    */
*                   DO;             /* BLSDMSG (ZZ2PARM,PUTID,SUBTITH
*                                      D,BLSDMSGS) ROUTE(TERM)       */
*                     CALL BLSDMSG0(ZZ2PARM,PUTID,SUBTITHD,BLSDMSGS,
*                         '00010000'B,0);/* BUILD MESSAGE            */
         L     @14,@PC00001                                        0219
         ST    @14,@AL00001                                        0219
         LA    @14,@CF00980                                        0219
         ST    @14,@AL00001+4                                      0219
         LA    @14,SUBTITHD                                        0219
         ST    @14,@AL00001+8                                      0219
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0219
         ST    @14,@AL00001+12                                     0219
         LA    @14,@CB00993                                        0219
         ST    @14,@AL00001+16                                     0219
         LA    @14,@CF00059                                        0219
         ST    @14,@AL00001+20                                     0219
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0219
         LA    @01,@AL00001                                        0219
         BALR  @14,@15                                             0219
*                   END;            /* BLSDMSG (ZZ2PARM,PUTID,SUBTITH
*                                      D,BLSDMSGS) ROUTE(TERM) AND 0220
*                                      OUTPUT THE 2 LINES TO THE   0220
*                                      TERMINAL                      */
*                 END;                                             0221
*               ELSE                                               0222
*                 ;                                                0222
@RF00210 DS    0H                                                  0223
*               LPSUBTIT=ON;        /* SET SUBTITLE FLAG ON          */
         L     @14,@PC00001+12                                     0223
         L     @14,LPWAPTR(,@14)                                   0223
         OI    LPSUBTIT(@14),B'00000010'                           0223
*             END;                                                 0224
*           ELSE                                                   0225
*             ;                                                    0225
*                                                                  0225
@RF00192 DS    0H                                                  0226
*           /*********************************************************/
*           /*                                                       */
*           /* OUTPUT CONTENTS OF THE DATA OUTPUT QUEUE              */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0226
*           DO;                     /* BLSDMSG (ZZ2PARM,PUTID,DATAHEA
*                                      D,BLSDMSGS) ROUTE(BOTH)       */
*             CALL BLSDMSG0(ZZ2PARM,PUTID,DATAHEAD,BLSDMSGS,'00110000'B
*                 ,0);              /* BUILD MESSAGE                 */
         L     @14,@PC00001                                        0227
         ST    @14,@AL00001                                        0227
         LA    @14,@CF00980                                        0227
         ST    @14,@AL00001+4                                      0227
         L     @14,@PC00001+16                                     0227
         ST    @14,@AL00001+8                                      0227
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0227
         ST    @14,@AL00001+12                                     0227
         LA    @14,@CB00988                                        0227
         ST    @14,@AL00001+16                                     0227
         LA    @14,@CF00059                                        0227
         ST    @14,@AL00001+20                                     0227
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0227
         LA    @01,@AL00001                                        0227
         BALR  @14,@15                                             0227
*           END;                    /* BLSDMSG (ZZ2PARM,PUTID,DATAHEA
*                                      D,BLSDMSGS) ROUTE(BOTH) OUTPUT
*                                      WHATEVER IS IN THE OUTPUT   0228
*                                      QUEUE                         */
*           NUMPROBS=ZERO;          /* SET TO ZERO THE # OF STATUS 0229
*                                      RECORDS FETCHED WITH THE PDR
*                                      OPEN                          */
         SLR   @14,@14                                             0229
         L     @10,@PC00001+8                                      0229
         ST    @14,NUMPROBS(,@10)                                  0229
*           QUEUELNS=ZERO;          /* SET TO ZERO THE # OF LINES IN
*                                      OUTPUT QUEUE                  */
*                                                                  0230
         L     @10,@PC00001+20                                     0230
         ST    @14,QUEUELNS(,@10)                                  0230
*           /*********************************************************/
*           /*                                                       */
*           /* RE-OPEN THE PDR                                       */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0231
*           DO;                     /* BLSOPEN(ZZ1PDRP)INPUT         */
*             RFY                                                  0232
*               GPR01P RSTD;                                       0232
*             GPR01P=ZZ1PDRP;       /* ADDRESS DMCB                  */
         L     @14,ZZ2ZZ1P(,ZZ2PTR)                                0233
         L     GPR01P,ZZ1PDRP(,@14)                                0233
*             RFY                                                  0234
*               DMCB BASED(GPR01P);                                0234
*             IF((GPR01P&'FFFFFFF8'X)=GPR01P)&DMCBID='DMCB'/* VALID
*                                      DMCB ?                        */
*               THEN                                               0235
         LR    @14,GPR01P                                          0235
         N     @14,@CF00984                                        0235
         CLR   @14,GPR01P                                          0235
         BNE   @RF00235                                            0235
         CLC   DMCBID(4,GPR01P),@CC00985                           0235
         BNE   @RF00235                                            0235
*               DO;                                                0236
*                 DMCBRQST=DMCBOPR; /* INDICATE OPEN REQUEST         */
         MVI   DMCBRQST(GPR01P),X'01'                              0237
*                 DMCBOUT='0'B;     /* INDICATE OPEN FOR INPUT       */
         NI    DMCBOUT(GPR01P),B'01111111'                         0238
*                 CALL DMCBRI->DMCBDMGR;/* CALL BLSCRQST             */
         L     @15,DMCBRI(,GPR01P)                                 0239
         BALR  @14,@15                                             0239
*               END;                                               0240
*             ELSE                                                 0241
*               DO;                                                0241
         B     @RC00235                                            0241
@RF00235 DS    0H                                                  0242
*                 RFY                                              0242
*                  (GPR00F,                                        0242
*                   GPR15F) RSTD;                                  0242
*                 GPR00F=0;         /* INDICATE NO MESSAGE CHAIN     */
         SLR   GPR00F,GPR00F                                       0243
*                 GPR15F=16;        /* INDICATE INVALID DMCB         */
         LA    GPR15F,16                                           0244
*                 RFY                                              0245
*                  (GPR00F,                                        0245
*                   GPR15F);                                       0245
*               END;                                               0246
*             RFY                                                  0247
*               DMCB;                                              0247
@RC00235 DS    0H                                                  0248
*             RFY                                                  0248
*               GPR01P;                                            0248
*           END;                    /* BLSOPEN(ZZ1PDRP)INPUT RE-OPEN
*                                      THE PDR                       */
*           SAVEDRC=RETCDE;         /* SAVE THE RETURN CODE          */
         LR    SAVEDRC,RETCDE                                      0250
*           IF RETCDE^=ZZZFLAGI     /* IF RETURN CODE ^= 0           */
*             THEN                                                 0251
         SLR   @14,@14                                             0251
         CR    RETCDE,@14                                          0251
         BE    @RF00251                                            0251
*             DO;                                                  0252
*               IF RETCDE=ZZZFLAGT  /* IF RETURN CODE = 16           */
*                 THEN                                             0253
         C     RETCDE,@CF00065                                     0253
         BNE   @RF00253                                            0253
*                 ERRHEAD=ZERO;     /* THEN OUTPUT 1 ERROR MESSAGE   */
         ST    @14,ERRHEAD                                         0254
*               ELSE                                               0255
*                 ERRHEAD=ZZ1PDRP->DMCBMSG;/* ELSE OUTPUT MSG CHAIN  */
         B     @RC00253                                            0255
@RF00253 L     @14,ZZ2ZZ1P(,ZZ2PTR)                                0255
         L     @14,ZZ1PDRP(,@14)                                   0255
         L     @14,DMCBMSG(,@14)                                   0255
         ST    @14,ERRHEAD                                         0255
*               DO;                 /* BLSDMSG (ZZ2PARM,PUTID,DATAHEA
*                                      D,BLSDMSGS) ROUTE(BOTH)       */
@RC00253 DS    0H                                                  0257
*                 CALL BLSDMSG0(ZZ2PARM,PUTID,DATAHEAD,BLSDMSGS,   0257
*                     '00110000'B,0);/* BUILD MESSAGE                */
         L     @14,@PC00001                                        0257
         ST    @14,@AL00001                                        0257
         LA    @14,@CF00980                                        0257
         ST    @14,@AL00001+4                                      0257
         L     @14,@PC00001+16                                     0257
         ST    @14,@AL00001+8                                      0257
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0257
         ST    @14,@AL00001+12                                     0257
         LA    @14,@CB00988                                        0257
         ST    @14,@AL00001+16                                     0257
         LA    @14,@CF00059                                        0257
         ST    @14,@AL00001+20                                     0257
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0257
         LA    @01,@AL00001                                        0257
         BALR  @14,@15                                             0257
*               END;                /* BLSDMSG (ZZ2PARM,PUTID,DATAHEA
*                                      D,BLSDMSGS) ROUTE(BOTH) OUTPUT
*                                      CONTENTS OF THE DATA QUEUE    */
*               DO;                 /* BLSDMSG (ZZ2PARM,OPENID,ERRHEA
*                                      D,BLSDMSGS) LIFO ROUTE(TERM)  */
*                 CALL BLSDMSG0(ZZ2PARM,OPENID,ERRHEAD,BLSDMSGS,   0260
*                     '10010000'B,0);/* BUILD MESSAGE                */
         L     @14,@PC00001                                        0260
         ST    @14,@AL00001                                        0260
         LA    @14,@CF00978                                        0260
         ST    @14,@AL00001+4                                      0260
         LA    @14,ERRHEAD                                         0260
         ST    @14,@AL00001+8                                      0260
         L     @14,ZZ2MSGSP(,ZZ2PTR)                               0260
         ST    @14,@AL00001+12                                     0260
         LA    @14,@CB00989                                        0260
         ST    @14,@AL00001+16                                     0260
         LA    @14,@CF00059                                        0260
         ST    @14,@AL00001+20                                     0260
         L     @15,ZZ2MSG0P(,ZZ2PTR)                               0260
         LA    @01,@AL00001                                        0260
         BALR  @14,@15                                             0260
*               END;                /* BLSDMSG (ZZ2PARM,OPENID,ERRHEA
*                                      D,BLSDMSGS) LIFO ROUTE(TERM)
*                                      BLSOPEN ERROR                 */
*               IF SAVEDRC^=ZZZFLAGW/* IF RETURN CODE^=4             */
*                 THEN                                             0262
         C     SAVEDRC,@CF00051                                    0262
         BE    @RF00262                                            0262
*                 DO;               /* ABEND(OPABEND) DUMP           */
*                   RESPECIFY                                      0264
*                    (GPR01F) RESTRICTED;                          0264
*                   GPR01F=OPABEND; /* COMP CODE IN REG 1            */
         LA    GPR01F,138                                          0265
*                   GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS
*                                      FLAG                          */
         O     GPR01F,@CF00074                                     0266
*                   SVC(13);        /* ISSUE ABEND SVC               */
         SVC   13                                                  0267
*                   RESPECIFY                                      0268
*                    (GPR01F) UNRESTRICTED;                        0268
*                 END;              /* ABEND(OPABEND) DUMP ABEND     */
*               ELSE                                               0270
*                 RETCDE=ZZZFLAGS;  /* ELSE RETURN CODE = 12         */
         B     @RC00262                                            0270
@RF00262 LA    RETCDE,12                                           0270
*             END;                                                 0271
*           ELSE                                                   0272
*             DO;                   /* GET THE START TIME            */
         B     @RC00251                                            0272
@RF00251 DS    0H                                                  0273
*               GEN CODE SETS(OLDFTIME);                           0273
         STCK  OLDFTIME
*               PARMTIME=OLDFTIME;  /* PUT TIME IN PARAMETER         */
         L     @14,@PC00001+4                                      0274
         MVC   PARMTIME(8,@14),OLDFTIME                            0274
*             END;                                                 0275
*         END;                                                     0276
*     END;                                                         0277
*   ELSE                                                           0278
*     ;                                                            0278
@RF00149 DS    0H                                                  0279
*   ZZ1PDRP->DMCBMSG=ZERO;          /* SET MSG AREA PTR TO ZERO      */
@RC00149 L     @14,ZZ2ZZ1P(,ZZ2PTR)                                0279
         L     @14,ZZ1PDRP(,@14)                                   0279
         SLR   @10,@10                                             0279
         ST    @10,DMCBMSG(,@14)                                   0279
*   RETURN CODE(RETCDE);            /* AND RETURN                    */
         LR    @10,@15                                             0280
         L     @13,4(,@13)                                         0280
         L     @00,@SIZDATD                                        0280
         LR    @01,@11                                             0280
         BLSUFRES R,LV=(0),A=(1)
         LR    @15,@10                                             0280
         L     @14,12(,@13)                                        0280
         LM    @00,@12,20(@13)                                     0280
         BR    @14                                                 0280
*/*BLSUPEND--MVS IPCS MODULE                                         */
*                                                                  0281
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                     0281
*     GPR01F FIXED(31) REG(1),                                     0281
*     GPR15F FIXED(31) REG(15),                                    0281
*     GPR01P PTR(31) REG(1);                                       0281
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0282
*     I031F FIXED(31) BASED,                                       0282
*     I031P PTR(31) BASED,                                         0282
*     I015F FIXED(15) BASED,                                       0282
*     I015P PTR(15) BASED,                                         0282
*     I008P PTR(8) BASED,                                          0282
*     I001C CHAR(1) BASED;                                         0282
*   GENERATE NODEFS NOREFS DATA;                                   0283
*   END                             /* BLRPEND                       */
*                                                                  0284
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (BLSUZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLRFULL )                                       */
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */
*/*%INCLUDE SYSLIB  (IKJPSCB )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJUPT  )                                       */
*/*%INCLUDE SYSLIB  (BLSUSERV)                                       */
*/*%INCLUDE SYSLIB  (BLRSERV )                                       */
*/*%INCLUDE SYSLIB  (BLRSERVD)                                       */
*/*%INCLUDE SYSLIB  (BLSDSERV)                                       */
*/*%INCLUDE SYSLIB  (BLSELPWA)                                       */
*                                                                  0284
*       ;                                                          0284
@EL00001 L     @13,4(,@13)                                         0284
@EF00001 L     @00,@SIZDATD                                        0284
         LR    @01,@11                                             0284
         BLSUFRES R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0284
         BR    @14                                                 0284
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    7F
@AL00001 DS    6A
BLSELPCT CSECT
         DS    0F
@CF00059 DC    F'0'
@CF00051 DC    F'4'
@CF00104 DC    F'5'
@CF00065 DC    F'16'
@CF00958 DC    F'100'
@CF00978 DC    F'4042'
@CF00976 DC    F'4045'
@CF00963 DC    F'40005'
@CF00965 DC    F'40019'
@CF00980 DC    F'-1'
@CF00074 DC    XL4'80000000'
@CF00984 DC    XL4'FFFFFFF8'
@DATD    DSECT
         DS    0D
SUBTITHD DS    A
ERRHEAD  DS    A
OLDFTIME DS    CL8
NEWFTIME DS    CL8
BLSELPCT CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00985 DC    C'DMCB'
@CB00988 DC    B'00110000'
@CB00989 DC    B'10010000'
@CB00992 DC    B'00000000'
@CB00993 DC    B'00010000'
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSELPCT CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSELPCT+19)/20+7)/8)CL8'BLSELPCT'
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSELPCT CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SAVEDRC  EQU   @06
RETC     EQU   @02
ZZ2PTR   EQU   @05
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R9       EQU   @09
RB       EQU   @11
RD       EQU   @13
RE       EQU   @14
RF       EQU   @15
RETCDE   EQU   @15
GPR01P   EQU   @01
GPR00F   EQU   @00
GPR15F   EQU   @15
GPR01F   EQU   @01
RA       EQU   @10
RC       EQU   @12
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
DMCB     EQU   0
DMCBID   EQU   DMCB
DMCBFTY  EQU   DMCB+20
DMCBOPN  EQU   DMCB+21
DMCBRQST EQU   DMCB+22
DMCBRMOD EQU   DMCB+23
DMCBOUT  EQU   DMCBRMOD
DMCBTMP  EQU   DMCBOUT
DMCBRM6  EQU   DMCBRMOD
DMCBRM5  EQU   DMCBRMOD
DMCBOPTS EQU   DMCB+24
DMCBGKY  EQU   DMCBOPTS
DMCBMFLG EQU   DMCB+28
DMCBBUFP EQU   DMCB+32
DMCBKEYP EQU   DMCB+44
DMCBMSG  EQU   DMCB+52
DMCBRI   EQU   DMCB+64
DMCBACBE EQU   DMCB+124
DMCBSPEC EQU   DMCB+380
DMCBAMS  EQU   DMCB+416
DMCBAUDT EQU   DMCB+568
DMCBLSCP EQU   DMCBAUDT+16
DMCBDMGR EQU   0
ZZ1      EQU   0
ZZ1PDRP  EQU   ZZ1+40
ZZ1ATTN  EQU   ZZ1+360
ZZ1EVE   EQU   ZZ1ATTN+4
ZZ1F     EQU   ZZ1+368
ZZ1N     EQU   ZZ1+1116
ZZ2      EQU   0
ZZ2AMD   EQU   ZZ2
@NM00013 EQU   ZZ2AMD+7
ZZ2PRT   EQU   ZZ2+138
ZZ2PRTT  EQU   ZZ2PRT+4
ZZ2PRTT1 EQU   ZZ2PRTT+1
ZZ2A     EQU   ZZ2+272
ZZ2AF    EQU   ZZ2A+16
ZZ2AFP   EQU   ZZ2AF
ZZ2AFT   EQU   ZZ2AF
ZZ2APID  EQU   ZZ2A+64
ZZ2AD    EQU   ZZ2A+74
ZZ2ADD   EQU   ZZ2AD
ZZ2ADDT  EQU   ZZ2ADD+2
ZZ2ADM   EQU   ZZ2AD+46
ZZ2ADMT  EQU   ZZ2ADM+2
ZZ2ADP   EQU   ZZ2AD+56
ZZ2ADPT  EQU   ZZ2ADP+2
ZZ2AQAS  EQU   ZZ2A+144
ZZ2AQD   EQU   ZZ2A+160
ZZ2AQDT  EQU   ZZ2AQD+10
ZZ2AQDF  EQU   ZZ2AQD+52
ZZ2STG   EQU   ZZ2+960
ZZ2ALLOP EQU   ZZ2+992
ZZ2FREEP EQU   ZZ2+996
ZZ2FF19P EQU   ZZ2+1000
ZZ2FRE1P EQU   ZZ2+1004
ZZ2FF18P EQU   ZZ2+1008
ZZ2DYNAP EQU   ZZ2+1012
ZZ2ZZ2CP EQU   ZZ2+1016
ZZ2ZZ2DP EQU   ZZ2+1020
ZZ2STAIP EQU   ZZ2+1024
ZZ2FF02P EQU   ZZ2+1028
ZZ2GETLP EQU   ZZ2+1032
ZZ2PARSP EQU   ZZ2+1036
ZZ2PTGTP EQU   ZZ2+1040
ZZ2PUTLP EQU   ZZ2+1044
ZZ2SCANP EQU   ZZ2+1048
ZZ2STCKP EQU   ZZ2+1052
ZZ2ALOCP EQU   ZZ2+1056
ZZ2MSGSP EQU   ZZ2+1060
ZZ2TRMOP EQU   ZZ2+1064
ZZ2TRMVP EQU   ZZ2+1068
ZZ2MSG0P EQU   ZZ2+1076
ZZ2PUTNP EQU   ZZ2+1084
ZZ2TRMNP EQU   ZZ2+1088
ZZ2ENQ0P EQU   ZZ2+1092
ZZ2ADSDP EQU   ZZ2+1096
ZZ2APDRP EQU   ZZ2+1100
ZZ2FDSDP EQU   ZZ2+1104
ZZ2FPDRP EQU   ZZ2+1108
ZZ2ZZ1P  EQU   ZZ2+1264
ZZ2DVTP  EQU   ZZ2+1276
ZZ2BVTP  EQU   ZZ2+1280
ZZ2CPPL  EQU   ZZ2+1292
ZZ2CPPLC EQU   ZZ2CPPL
ZZ2ITR   EQU   ZZ2+2840
ZZ2ITRE  EQU   ZZ2ITR+16
ZZ2ITSE  EQU   ZZ2+2864
ZZ2ES    EQU   ZZ2+2872
ZZ2AMDX  EQU   ZZ2+7160
ZZ2AXO   EQU   ZZ2+7934
ZZ2AXOT  EQU   ZZ2AXO+2
CMD      EQU   0
CMDT     EQU   CMD+4
PSCB     EQU   0
PSCBATR1 EQU   PSCB+16
ECT      EQU   0
ECTSWS   EQU   ECT+28
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
UPT      EQU   0
UPTSWS   EQU   UPT+12
SA       EQU   0
SA1      EQU   SA
SAR      EQU   SA+12
BLSUPRTT EQU   0
BVT      EQU   0
BVTPUTLP EQU   BVT+4
BVTPUTOP EQU   BVT+12
BVTPUTTP EQU   BVT+16
BVTPUTVP EQU   BVT+20
BVTPUTAP EQU   BVT+24
BVTPRTTP EQU   BVT+28
BVTPRTAP EQU   BVT+32
BVTPUTDP EQU   BVT+36
BVTMONP  EQU   BVT+40
BVTMON2P EQU   BVT+44
BVTVSARP EQU   BVT+48
BVTVSENP EQU   BVT+64
BVTVSERP EQU   BVT+68
BVTVSGEP EQU   BVT+72
BVTVSGUP EQU   BVT+76
BVTVSPOP EQU   BVT+80
BVTVSPUP EQU   BVT+84
BVTMPKNP EQU   BVT+104
BVTMONLP EQU   BVT+108
BVTPUTCP EQU   BVT+132
BVTMPK1P EQU   BVT+136
BVTZZ2RP EQU   BVT+140
BVTPGMRP EQU   BVT+144
BVTMONAP EQU   BVT+148
BVTBLDDP EQU   BVT+152
BVTBLDLP EQU   BVT+156
BVTPGMCP EQU   BVT+160
BVTPGMDP EQU   BVT+164
BVTPGMLP EQU   BVT+168
BVTMONCP EQU   BVT+180
BVTMONDP EQU   BVT+184
BVTMONTP EQU   BVT+188
BVTPARIP EQU   BVT+192
BVTPARUP EQU   BVT+196
BVTPRTNP EQU   BVT+204
BVTVSCRP EQU   BVT+208
BVTVSMRP EQU   BVT+212
BVTMONXP EQU   BVT+216
BVTTRMAP EQU   BVT+228
BLSDMSGS EQU   0
BLSDMSG0 EQU   0
DVT      EQU   0
DVTDEQPP EQU   DVT+8
DVTENQPP EQU   DVT+12
DVTAUTHP EQU   DVT+20
DVTLPCLP EQU   DVT+24
DVTBP00P EQU   DVT+28
DVTCN00P EQU   DVT+32
DVTDF00P EQU   DVT+36
DVTDS00P EQU   DVT+44
DVTFL00P EQU   DVT+48
DVTFP00P EQU   DVT+52
DVTGD00P EQU   DVT+56
DVTGG00P EQU   DVT+60
DVTGP00P EQU   DVT+64
DVTND00P EQU   DVT+68
DVTND01P EQU   DVT+72
DVTOD00P EQU   DVT+76
DVTPS00P EQU   DVT+80
DVTSD00P EQU   DVT+84
DVTSL00P EQU   DVT+88
DVTTL00P EQU   DVT+92
DVTUD00P EQU   DVT+96
DVTUP00P EQU   DVT+100
DVTLP00P EQU   DVT+104
DVTLALLP EQU   DVT+108
DVTLPFMP EQU   DVT+112
DVTCLOSP EQU   DVT+116
DVTOPENP EQU   DVT+120
DVTPERAP EQU   DVT+124
DVTDALLP EQU   DVT+128
BLSELPWA EQU   0
LPPRBPTR EQU   BLSELPWA+8
LPFRMFLG EQU   BLSELPWA+12
LPLIST   EQU   LPFRMFLG
LPABST   EQU   LPFRMFLG
LPSUBTIT EQU   LPFRMFLG
BLSESCB  EQU   0
SUBTEXT  EQU   0
BLSCALOC EQU   0
BLSDADSD EQU   0
BLSDAPDR EQU   0
BLSDDEQP EQU   0
BLSDENQP EQU   0
BLSDENQ0 EQU   0
BLSDFDSD EQU   0
BLSDFPDR EQU   0
BLSEAUTH EQU   0
BLSELPCL EQU   0
BLSELPFM EQU   0
BLSFBP00 EQU   0
BLSFCLOS EQU   0
BLSFCN00 EQU   0
BLSFDALL EQU   0
BLSFDF00 EQU   0
BLSFDS00 EQU   0
BLSFFL00 EQU   0
BLSFFP00 EQU   0
BLSFGD00 EQU   0
BLSFGG00 EQU   0
BLSFGP00 EQU   0
BLSFLALL EQU   0
BLSFLP00 EQU   0
BLSFND00 EQU   0
BLSFND01 EQU   0
BLSFOD00 EQU   0
BLSFOPEN EQU   0
BLSFPERA EQU   0
BLSFPS00 EQU   0
BLSFSD00 EQU   0
BLSFSL00 EQU   0
BLSFTL00 EQU   0
BLSFUD00 EQU   0
BLSFUP00 EQU   0
BLSUALLO EQU   0
BLSUBLDD EQU   0
BLSUBLDL EQU   0
BLSUDYNA EQU   0
BLSUFREE EQU   0
BLSUFRE1 EQU   0
BLSUMON  EQU   0
BLSUMONA EQU   0
BLSUMONC EQU   0
BLSUMOND EQU   0
BLSUMONL EQU   0
BLSUMONT EQU   0
BLSUMONX EQU   0
BLSUMON2 EQU   0
BLSUMPKN EQU   0
BLSUMPK1 EQU   0
BLSUPARI EQU   0
BLSUPARU EQU   0
BLSUPGMC EQU   0
BLSUPGMD EQU   0
BLSUPGML EQU   0
BLSUPGMR EQU   0
BLSUPRTA EQU   0
BLSUPRTN EQU   0
BLSUPUTA EQU   0
BLSUPUTC EQU   0
BLSUPUTD EQU   0
BLSUPUTL EQU   0
BLSUPUTN EQU   0
BLSUPUTO EQU   0
BLSUPUTT EQU   0
BLSUPUTV EQU   0
BLSUSTAI EQU   0
BLSUTRMA EQU   0
BLSUTRMN EQU   0
BLSUTRMO EQU   0
BLSUTRMV EQU   0
BLSUVSAR EQU   0
BLSUVSCR EQU   0
BLSUVSEN EQU   0
BLSUVSER EQU   0
BLSUVSGE EQU   0
BLSUVSGU EQU   0
BLSUVSMR EQU   0
BLSUVSPO EQU   0
BLSUVSPU EQU   0
BLSUZZ2C EQU   0
BLSUZZ2D EQU   0
BLSUZZ2R EQU   0
DMCBRQC  EQU   0
IKJEFF02 EQU   0
IKJEFF18 EQU   0
IKJEFF19 EQU   0
IKJGETL  EQU   0
IKJPARS  EQU   0
IKJPTGT  EQU   0
IKJPUTL  EQU   0
IKJSCAN  EQU   0
IKJSTCK  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
ZZ2PARM  EQU   0
PARMTIME EQU   0
NUMPROBS EQU   0
LPWAPTR  EQU   0
DATAHEAD EQU   0
QUEUELNS EQU   0
PIDCOUNT EQU   0
DMCBVSM  EQU   DMCBAMS
DMCBQSM  EQU   DMCBAMS
CPPL     EQU   ZZ2CPPL
CPPLUPT  EQU   CPPL+4
CPPLPSCB EQU   CPPL+8
CPPLECT  EQU   CPPL+12
OLDPTIME EQU   OLDFTIME
STARTIME EQU   OLDPTIME
NEWPTIME EQU   NEWFTIME
CURRTIME EQU   NEWPTIME
*                                      START UNREFERENCED COMPONENTS
@NM00070 EQU   NEWPTIME+4
@NM00069 EQU   OLDPTIME+4
CPPLCBUF EQU   CPPL
DMCBRES7 EQU   DMCBQSM+96
DMCBDCB  EQU   DMCBQSM
DMCBACB  EQU   DMCBVSM+76
DMCBRPL  EQU   DMCBVSM
SCBVALS  EQU   BLSESCB+16
SCBLASTP EQU   BLSESCB+12
SCBNXTSC EQU   BLSESCB+8
SCBFLDLN EQU   BLSESCB+4
SCBFLDOF EQU   BLSESCB
LPSCBLKS EQU   BLSELPWA+16
LPFRMRES EQU   LPFRMFLG
LPDSDESC EQU   LPFRMFLG
LPDSNAME EQU   LPFRMFLG
LPDESC   EQU   LPFRMFLG
LPSTAT   EQU   LPFRMFLG
LPSCBLKP EQU   BLSELPWA+4
LPWALEN  EQU   BLSELPWA
DVT99999 EQU   DVT+256
DVT0064P EQU   DVT+252
DVT0063P EQU   DVT+248
DVT0062P EQU   DVT+244
DVT0061P EQU   DVT+240
DVT0060P EQU   DVT+236
DVT0059P EQU   DVT+232
DVT0058P EQU   DVT+228
DVT0057P EQU   DVT+224
DVT0056P EQU   DVT+220
DVT0055P EQU   DVT+216
DVT0054P EQU   DVT+212
DVT0053P EQU   DVT+208
DVT0052P EQU   DVT+204
DVT0051P EQU   DVT+200
DVT0050P EQU   DVT+196
DVT0049P EQU   DVT+192
DVT0048P EQU   DVT+188
DVT0047P EQU   DVT+184
DVT0046P EQU   DVT+180
DVT0045P EQU   DVT+176
DVT0044P EQU   DVT+172
DVT0043P EQU   DVT+168
DVT0042P EQU   DVT+164
DVT0041P EQU   DVT+160
DVT0040P EQU   DVT+156
DVT0039P EQU   DVT+152
DVT0038P EQU   DVT+148
DVT0037P EQU   DVT+144
DVT0036P EQU   DVT+140
DVT0035P EQU   DVT+136
DVT0034P EQU   DVT+132
DVT0011P EQU   DVT+40
DVT0005P EQU   DVT+16
DVT0002P EQU   DVT+4
DVT0001P EQU   DVT
BVT99999 EQU   BVT+256
BVT0064P EQU   BVT+252
BVT0063P EQU   BVT+248
BVT0062P EQU   BVT+244
BVT0061P EQU   BVT+240
BVT0060P EQU   BVT+236
BVT0059P EQU   BVT+232
BVT0057P EQU   BVT+224
BVT0056P EQU   BVT+220
BVTSTBLP EQU   BVT+200
BVT0045P EQU   BVT+176
BVT0044P EQU   BVT+172
BVT0033P EQU   BVT+128
BVT0032P EQU   BVT+124
BVT0031P EQU   BVT+120
BVT0030P EQU   BVT+116
BVT0029P EQU   BVT+112
BVT0026P EQU   BVT+100
BVT0025P EQU   BVT+96
BVT0024P EQU   BVT+92
BVT0023P EQU   BVT+88
BVT0016P EQU   BVT+60
BVT0015P EQU   BVT+56
BVT0014P EQU   BVT+52
BVT0003P EQU   BVT+8
BVT0001P EQU   BVT
SA99     EQU   SA+72
SARC     EQU   SAR+56
SARB     EQU   SAR+52
SARA     EQU   SAR+48
SAR9     EQU   SAR+44
SAR8     EQU   SAR+40
SAR7     EQU   SAR+36
SAR6     EQU   SAR+32
SAR5     EQU   SAR+28
SAR4     EQU   SAR+24
SAR3     EQU   SAR+20
SAR2     EQU   SAR+16
SAR1     EQU   SAR+12
SAR0     EQU   SAR+8
SARF     EQU   SAR+4
SARE     EQU   SAR
SAFWD    EQU   SA+8
SABAK    EQU   SA+4
SA1L     EQU   SA1+1
SA1P     EQU   SA1
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00068 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00067 EQU   UPT
@NM00066 EQU   ECT+52
@NM00065 EQU   ECT+48
@NM00064 EQU   ECT+44
@NM00063 EQU   ECTSWS2+1
@NM00062 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00061 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00060 EQU   PSCB+36
@NM00059 EQU   PSCB+32
@NM00058 EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00057 EQU   PSCBATR1
@NM00056 EQU   PSCBATR1
@NM00055 EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
PSCBUSRL EQU   PSCB+7
PSCBUSER EQU   PSCB
CMDT1    EQU   CMDT
CMDO     EQU   CMD+2
CMDL     EQU   CMD
ZZ299999 EQU   ZZ2+8192
ZZ2AXOT1 EQU   ZZ2AXOT
ZZ2AXOL  EQU   ZZ2AXO
@NM00054 EQU   ZZ2+7288
@NM00053 EQU   ZZ2AMDX+4
ZZ2AMDXC EQU   ZZ2AMDX
ZZ2HSD   EQU   ZZ2+3056
@NM00052 EQU   ZZ2ES
@NM00051 EQU   ZZ2+2868
ZZ2ITSEC EQU   ZZ2ITSE+1
@NM00050 EQU   ZZ2ITSE
ZZ2ITSEP EQU   ZZ2ITSE
ZZ2ITSEW EQU   ZZ2ITSE
@NM00049 EQU   ZZ2ITR+20
ZZ2ITREC EQU   ZZ2ITRE+1
@NM00048 EQU   ZZ2ITRE
ZZ2ITREP EQU   ZZ2ITRE
ZZ2ITREW EQU   ZZ2ITRE
@NM00047 EQU   ZZ2ITR+9
ZZ2ITRRC EQU   ZZ2ITR+8
ZZ2ITR2P EQU   ZZ2ITR+4
ZZ2ITRPP EQU   ZZ2ITR
@NM00046 EQU   ZZ2+1544
ZZ2PGM   EQU   ZZ2+1536
@NM00045 EQU   ZZ2+1526
ZZ2CW    EQU   ZZ2+1524
@NM00044 EQU   ZZ2+1504
@NM00043 EQU   ZZ2+1352
ZZ2FFSYP EQU   ZZ2+1348
ZZ2SASYP EQU   ZZ2+1344
ZZ2RDSYP EQU   ZZ2+1340
ZZ2RASYP EQU   ZZ2+1336
ZZ2PHSYP EQU   ZZ2+1332
ZZ2ESSYP EQU   ZZ2+1328
ZZ200SYP EQU   ZZ2+1324
ZZ2SCWP  EQU   ZZ2+1320
ZZ2TTLP  EQU   ZZ2+1316
ZZ2LOADP EQU   ZZ2+1312
ZZ2VRESP EQU   ZZ2+1308
ZZ2CPPLE EQU   ZZ2CPPL+12
ZZ2CPPLP EQU   ZZ2CPPL+8
ZZ2CPPLU EQU   ZZ2CPPL+4
ZZ2VRSAP EQU   ZZ2+1288
ZZ2RVTP  EQU   ZZ2+1284
@NM00042 EQU   ZZ2+1272
@NM00041 EQU   ZZ2+1268
ZZ2RPLP  EQU   ZZ2+1260
ZZ2TCBP  EQU   ZZ2+1256
@NM00040 EQU   ZZ2+1252
ZZ2ZZ2P  EQU   ZZ2+1248
@NM00039 EQU   ZZ2+1112
@NM00038 EQU   ZZ2+1080
ZZ2FT25P EQU   ZZ2+1072
@NM00037 EQU   ZZ2+976
ZZ2TOD   EQU   ZZ2+968
ZZ2STGN  EQU   ZZ2STG+4
ZZ2STGP  EQU   ZZ2STG
@NM00036 EQU   ZZ2+952
ZZ2SCMDE EQU   ZZ2+944
ZZ2SCMDN EQU   ZZ2+936
ZZ2IDENT EQU   ZZ2+928
ZZ2A9999 EQU   ZZ2A+656
@NM00035 EQU   ZZ2A+224
@NM00034 EQU   ZZ2A+220
ZZ2AQD99 EQU   ZZ2AQD+60
@NM00033 EQU   ZZ2AQD+56
@NM00032 EQU   ZZ2AQDF
ZZ2AQDFA EQU   ZZ2AQDF
ZZ2AQDIL EQU   ZZ2AQD+48
ZZ2AQDIM EQU   ZZ2AQD+44
ZZ2AQDT9 EQU   ZZ2AQDT+34
ZZ2AQDTE EQU   ZZ2AQDT+33
ZZ2AQDTD EQU   ZZ2AQDT+2
@NM00031 EQU   ZZ2AQDT+1
ZZ2AQDTY EQU   ZZ2AQDT
ZZ2AQDT0 EQU   ZZ2AQDT
ZZ2AQDLB EQU   ZZ2AQD+9
ZZ2AQDOB EQU   ZZ2AQD+8
ZZ2AQDLE EQU   ZZ2AQD+4
ZZ2AQDOF EQU   ZZ2AQD
ZZ2AQD00 EQU   ZZ2AQD
ZZ2AQAS9 EQU   ZZ2AQAS+16
@NM00030 EQU   ZZ2AQAS+12
ZZ2AQAS2 EQU   ZZ2AQAS+8
ZZ2AQAS1 EQU   ZZ2AQAS+4
@NM00029 EQU   ZZ2AQAS+2
ZZ2AQAST EQU   ZZ2AQAS
ZZ2AQAS0 EQU   ZZ2AQAS
ZZ2AZZ6P EQU   ZZ2A+140
ZZ2ADPTA EQU   ZZ2ADPT
ZZ2ADPL  EQU   ZZ2ADP
ZZ2ADMTA EQU   ZZ2ADMT
ZZ2ADML  EQU   ZZ2ADM
ZZ2ADDTA EQU   ZZ2ADDT
ZZ2ADDL  EQU   ZZ2ADD
@NM00028 EQU   ZZ2A+72
ZZ2APIDB EQU   ZZ2APID+3
ZZ2APIDA EQU   ZZ2APID
@NM00027 EQU   ZZ2A+24
@NM00026 EQU   ZZ2AF+5
ZZ2AFX   EQU   ZZ2AF+5
@NM00025 EQU   ZZ2AF+3
ZZ2AFS   EQU   ZZ2AF+2
ZZ2AFD   EQU   ZZ2AF+2
ZZ2AFQ   EQU   ZZ2AF+2
ZZ2AF$   EQU   ZZ2AF+2
@NM00024 EQU   ZZ2AF+2
ZZ2AFM   EQU   ZZ2AF+2
@NM00023 EQU   ZZ2AF+2
@NM00022 EQU   ZZ2AF+1
ZZ2AFV   EQU   ZZ2AF+1
@NM00021 EQU   ZZ2AF+1
ZZ2AFC   EQU   ZZ2AF+1
@NM00020 EQU   ZZ2AF
ZZ2AFFS  EQU   ZZ2AF
@NM00019 EQU   ZZ2A+8
ZZ2ALINE EQU   ZZ2A+4
@NM00018 EQU   ZZ2A+3
ZZ2ASE   EQU   ZZ2A+2
ZZ2ACH   EQU   ZZ2A
@NM00017 EQU   ZZ2+264
@NM00016 EQU   ZZ2+263
ZZ2PRTT0 EQU   ZZ2PRTT
ZZ2PRTO  EQU   ZZ2PRT+2
ZZ2PRTL  EQU   ZZ2PRT
@NM00015 EQU   ZZ2AMD+56
ZZ2AMDXP EQU   ZZ2AMD+52
ZZ2AMDD  EQU   ZZ2AMD+48
ZZ2AMDL  EQU   ZZ2AMD+44
ZZ2AMDU  EQU   ZZ2AMD+28
ZZ2AMDF  EQU   ZZ2AMD+24
ZZ2AMDS  EQU   ZZ2AMD+20
ZZ2AMDC  EQU   ZZ2AMD+16
ZZ2AMDP  EQU   ZZ2AMD+12
ZZ2AMDB  EQU   ZZ2AMD+8
@NM00014 EQU   @NM00013
ZZ2AMD2  EQU   @NM00013
ZZ2AMD1  EQU   @NM00013
ZZ2AMD0  EQU   ZZ2AMD+6
ZZ2AMDA  EQU   ZZ2AMD+4
ZZ2AMDT  EQU   ZZ2AMD
ZZ199999 EQU   ZZ1+3072
@NM00012 EQU   ZZ1+2160
ZZ1TRTAS EQU   ZZ1+1904
ZZ1TRUPC EQU   ZZ1+1648
ZZ1TRCTX EQU   ZZ1+1392
ZZ1NASID EQU   ZZ1N+274
ZZ1NSTRL EQU   ZZ1N+272
ZZ1NOFF  EQU   ZZ1N+268
ZZ1NBDY  EQU   ZZ1N+264
ZZ1NADE  EQU   ZZ1N+260
ZZ1NADB  EQU   ZZ1N+256
ZZ1NSTR  EQU   ZZ1N
@NM00011 EQU   ZZ1+1080
ZZ1TREBC EQU   ZZ1+824
ZZ1TRHEX EQU   ZZ1+568
@NM00010 EQU   ZZ1+377
ZZ1USTAE EQU   ZZ1+376
@NM00009 EQU   ZZ1F+1
@NM00008 EQU   ZZ1F
ZZ1FM    EQU   ZZ1F
ZZ1FX    EQU   ZZ1F
ZZ1FU    EQU   ZZ1F
ZZ1EVEC  EQU   ZZ1EVE+1
@NM00007 EQU   ZZ1EVE
ZZ1EVEP  EQU   ZZ1EVE
ZZ1EVEW  EQU   ZZ1EVE
ZZ1ACMP  EQU   ZZ1ATTN
@NM00006 EQU   ZZ1+144
ZZ1FPP   EQU   ZZ1+140
ZZ1ZZ6P  EQU   ZZ1+136
@NM00005 EQU   ZZ1+84
ZZ1PLINE EQU   ZZ1+80
ZZ1PGSZ  EQU   ZZ1+76
ZZ1PCNT  EQU   ZZ1+72
@NM00004 EQU   ZZ1+68
ZZ1TPAGE EQU   ZZ1+64
ZZ1TLINE EQU   ZZ1+60
@NM00003 EQU   ZZ1+52
ZZ1DMCBP EQU   ZZ1+48
ZZ1DSDP  EQU   ZZ1+44
ZZ1ZZ2P  EQU   ZZ1+36
ZZ1327WP EQU   ZZ1+32
ZZ1ACBP  EQU   ZZ1+28
@NM00002 EQU   ZZ1+24
ZZ1PDCBP EQU   ZZ1+20
ZZ1BLRBL EQU   ZZ1+16
@NM00001 EQU   ZZ1+12
ZZ1PNULL EQU   ZZ1+8
ZZ1NULL  EQU   ZZ1+4
ZZ1IDE   EQU   ZZ1
DMCBWRK  EQU   DMCB+648
DMCBRES8 EQU   DMCB+640
DMCBMODN EQU   DMCB+632
DMCBCARY EQU   DMCBAUDT+20
DMCBCLC  EQU   DMCBAUDT+12
DMCBOPC  EQU   DMCBAUDT+8
DMCBFRC  EQU   DMCBAUDT+4
DMCBALC  EQU   DMCBAUDT
DMCBFR   EQU   DMCB+412
DMCBRES6 EQU   DMCB+410
DMCBIRSC EQU   DMCB+408
DMCBSUBC EQU   DMCB+404
DMCBDRBP EQU   DMCB+400
DMCBRSZM EQU   DMCB+398
DMCBRSZA EQU   DMCB+396
DMCBCISZ EQU   DMCB+394
DMCBDCBL EQU   DMCB+392
DMCBDCLR EQU   DMCB+390
DMCBDCFM EQU   DMCB+389
DMCBRES5 EQU   DMCB+388
DMCBLBRT EQU   DMCB+386
DMCBLBSQ EQU   DMCB+384
DMCBLBPS EQU   DMCB+383
DMCBLBTY EQU   DMCB+382
DMCBRES4 EQU   DMCB+381
DMCBSPRS EQU   DMCBSPEC
DMCBSPRN EQU   DMCBSPEC
DMCBSPCT EQU   DMCBSPEC
DMCBSPRL EQU   DMCBSPEC
DMCBSPSE EQU   DMCB+376
DMCBSPPR EQU   DMCB+372
DMCBSPTY EQU   DMCB+369
DMCBODIS EQU   DMCB+368
DMCBDISP EQU   DMCB+367
DMCBSTAT EQU   DMCB+366
DMCBRES3 EQU   DMCB+364
DMCBMEMB EQU   DMCB+356
DMCBMODL EQU   DMCB+348
DMCBRES9 EQU   DMCB+340
DMCBPID  EQU   DMCB+332
DMCBTYPE EQU   DMCB+328
DMCBDSN  EQU   DMCB+284
DMCBUNIT EQU   DMCB+276
DMCBDSOR EQU   DMCB+274
DMCBVOL  EQU   DMCB+268
DMCBDDNM EQU   DMCB+260
DMCBSYNM EQU   DMCB+132
DMCBRPLF EQU   DMCB+128
DMCBDCBE EQU   DMCBACBE
DMCBARC  EQU   DMCB+120
DMCBCPC  EQU   DMCB+116
DMCBRET  EQU   DMCB+112
DMCBSTL  EQU   DMCB+96
DMCBEOB  EQU   DMCB+92
DMCBFRE  EQU   DMCB+88
DMCBRES2 EQU   DMCB+85
DMCBSPID EQU   DMCB+84
DMCBRESC EQU   DMCB+80
DMCBZZ1P EQU   DMCB+76
DMCBMSGS EQU   DMCB+72
DMCBMSG0 EQU   DMCB+68
DMCBRRL  EQU   DMCB+60
DMCBRBA  EQU   DMCB+56
DMCBKEYL EQU   DMCB+48
DMCBKPC  EQU   DMCBKEYP
DMCBORL  EQU   DMCB+40
DMCBBLEN EQU   DMCB+36
DMCBBFPC EQU   DMCBBUFP
DMCBRES1 EQU   DMCB+31
DMCBACCM EQU   DMCB+30
DMCBREJ  EQU   DMCB+29
DMCBRESB EQU   DMCBMFLG
DMCBFMOD EQU   DMCBMFLG
DMCBLOPT EQU   DMCB+27
DMCBLRM  EQU   DMCB+26
DMCBLRQ  EQU   DMCB+25
DMCBOPRS EQU   DMCBOPTS
DMCBLRD  EQU   DMCBOPTS
DMCBBWD  EQU   DMCBOPTS
DMCBUPD  EQU   DMCBOPTS
DMCBAPX  EQU   DMCBOPTS
DMCBRNO  EQU   DMCBGKY
DMCBKYD  EQU   DMCBOPTS
DMCBRMRS EQU   DMCBRMOD
DMCBRESA EQU   DMCBOPN
DMCBSOUT EQU   DMCBOPN
DMCBSIN  EQU   DMCBOPN
DMCBVSF  EQU   DMCBFTY
DMCBKSF  EQU   DMCBFTY
DMCBFTRS EQU   DMCBFTY
DMCBSHF  EQU   DMCBFTY
DMCBIRL  EQU   DMCB+16
DMCBRTC  EQU   DMCB+12
DMCBTVP  EQU   DMCB+8
DMCBNEXT EQU   DMCB+4
*                                      END UNREFERENCED COMPONENTS
@RC00172 EQU   @RC00149
@RC00251 EQU   @RC00149
@RC00262 EQU   @RC00251
@ENDDATA EQU   *
         END   BLSELPCT,(C'PLS1137',0701,78065)
