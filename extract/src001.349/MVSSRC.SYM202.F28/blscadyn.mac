         TITLE 'EP=BLSCADYN -- IPCS DAS DYNAMIC ALLOCATION INTERFACE   *
                        '
*     /* CHANGE ACTIVITY
*    THIS MODULE IS WRITTEN FOR @G57LPSR
BLSCADYN CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'BLSCADYN  78.062'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         BLSCGETS R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
*   DMCBPTR=GPR01P;                 /* BASE THE DMCB                 */
         LR    DMCBPTR,GPR01P                                      0033
*   RFY                                                            0034
*     GPR01P UNRSTD;                                               0034
*   MODNAME=LMODNMC;                /* INIT THE MODULE NAME          */
         MVC   MODNAME(8),@CC00522                                 0035
*   RETCODE=F0C;                    /* INIT THE MODULE RETURN CODE   */
         SLR   @10,@10                                             0036
         ST    @10,RETCODE                                         0036
*   SUBCODE=F0C;                    /* INIT THE SUBROUTINE RETURN  0037
*                                      CODE                          */
         ST    @10,SUBCODE                                         0037
*   S99TUFP=F0C;                    /* INIT THE TEXT UNIT MULTIPLE 0038
*                                      ENTRY BASE (UNUSED VARIABLE)  */
*                                                                  0038
         SLR   S99TUFP,S99TUFP                                     0038
*   /*****************************************************************/
*   /*                                                               */
*   /* PERFORM DYNAMIC ALLOCATION FUNCTION                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0039
*   RFY                                                            0039
*    (GPR01P,                                                      0039
*     GPR15F) RSTD;                                                0039
*   GPR01P=ADDR(DMCBDRBP);          /* PASS DYNALLOC PARM LIST     0040
*                                      ADDRESS                       */
         LA    GPR01P,DMCBDRBP(,DMCBPTR)                           0040
*/* MACDATE Y-2 73082                                                */
*                                                                  0041
*   SVC(99);                        /* PERFORM DYNAMIC ALLOCATION  0041
*                                      FUNCTION                      */
         SVC   99                                                  0041
*   SUBCODE=GPR15F;                 /* SAVE SUBROUTINE RETURN CODE 0042
*                                      FOR EXAMINATION               */
         ST    GPR15F,SUBCODE                                      0042
*   RFY                                                            0043
*    (GPR01P,                                                      0043
*     GPR15F) UNRSTD;                                              0043
*   IF SUBCODE^=F0C THEN            /* TEST FOR SUBROUTINE ERROR     */
         L     @10,SUBCODE                                         0044
         LTR   @10,@10                                             0044
         BZ    @RF00044                                            0044
*     DO;                           /* DYNAMIC ALLOCATION FUNCTION 0045
*                                      FAILED                        */
*                                                                  0045
*       /*************************************************************/
*       /*                                                           */
*       /* PERFORM ALLOCATION ERROR ANALYSIS FUNCTION                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0046
*       DMCBSUBC=SUBCODE;           /* DYNALLOC RETURN CODE          */
         ST    @10,DMCBSUBC(,DMCBPTR)                              0046
*       RFY                                                        0047
*        (GPR01P) RSTD;                                            0047
*       GPR01P=DMCBPTR;             /* PASS DMCB ADDRESS             */
         LR    GPR01P,DMCBPTR                                      0048
*       RFY                                                        0049
*        (GPR01P) UNRSTD;                                          0049
*       CALL BLSCANAL;              /* PERFORM ERROR ANALYSIS        */
         L     @15,@CV00270                                        0050
         BALR  @14,@15                                             0050
*       RFY                                                        0051
*        (GPR15F) RSTD;                                            0051
*       SUBCODE=GPR15F;             /* SAVE RETURN CODE FOR TEST     */
         ST    GPR15F,SUBCODE                                      0052
*       RFY                                                        0053
*        (GPR15F) UNRSTD;                                          0053
*       IF SUBCODE^=F0C THEN        /* TEST FOR SUBROUTINE ERROR     */
         L     @10,SUBCODE                                         0054
         LTR   @10,@10                                             0054
         BZ    @RF00054                                            0054
*         DO;                       /* ERROR ANALYSIS FAILED         */
*           RETCODE=SUBCODE;        /* MARK ERROR TO CALLER          */
         ST    @10,RETCODE                                         0056
*           IF SUBCODE^=SEVERE THEN /* TEST FOR OTHER THAN GETMAIN 0057
*                                      ERROR                         */
         C     @10,@CF00502                                        0057
         BE    @RF00057                                            0057
*             DO;                   /* OTHER ERROR ANALYSIS ERROR    */
*               DO;                 /* BLSDMSG (ZZ2,NOMSG,DMCBMSG,0)
*                                      ROUTE(TERM)                   */
*                 CALL BLSDMSG0(ZZ2,NOMSG,DMCBMSG,0,'00010000'B,0);/*
*                                      BUILD MESSAGE                 */
         MVC   @AL00001+4(20),@AL00060                             0060
         L     @10,DMCBTVP(,DMCBPTR)                               0060
         ST    @10,@AL00001                                        0060
         LA    @10,DMCBMSG(,DMCBPTR)                               0060
         ST    @10,@AL00001+8                                      0060
         L     @15,DMCBMSG0(,DMCBPTR)                              0060
         LA    @01,@AL00001                                        0060
         BALR  @14,@15                                             0060
*               END;                /* BLSDMSG (ZZ2,NOMSG,DMCBMSG,0)
*                                      ROUTE(TERM) OUTPUT MESSAGE  0061
*                                      LIST                          */
*               DO;                 /* ABEND(F133C) DUMP USER        */
*                 RESPECIFY                                        0063
*                  (GPR01F) RESTRICTED;                            0063
*                 GPR01F=(F133C)&'00000FFF'X;/* COMP CODE IN BITS  0064
*                                      20-31                         */
         LA    GPR01F,133                                          0064
*                 GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS  0065
*                                      FLAG                          */
         O     GPR01F,@CF00531                                     0065
*                 SVC(13);          /* ISSUE ABEND SVC               */
         SVC   13                                                  0066
*                 RESPECIFY                                        0067
*                  (GPR01F) UNRESTRICTED;                          0067
*               END;                /* ABEND(F133C) DUMP USER SVC99
*                                      ERROR ANALYSIS FAILED         */
*             END;                  /* OTHER ERROR ANALYSIS ERROR    */
*         END;                      /* ERROR ANALYSIS FAILED         */
*       ELSE                                                       0071
*         DO;                       /* ERROR ANALYSIS OK             */
         B     @RC00054                                            0071
@RF00054 DS    0H                                                  0072
*           RETCODE=ERROR;                                         0072
         MVC   RETCODE(4),@CF00044                                 0072
*         END;                      /* ERROR ANALYSIS OK             */
*     END;                          /* DYNAMIC ALLOCATION FUNCTION 0074
*                                      FAILED                        */
         EJECT
*   ELSE                                                           0075
*     DO;                           /* DATA SET ALLOCATED, COMPLETE
*                                      THE DMCB INITIALIZATION       */
*                                                                  0075
         B     @RC00044                                            0075
@RF00044 DS    0H                                                  0076
*       /*************************************************************/
*       /*                                                           */
*       /* DATA SET ALLOCATED, COMPLETE THE DMCB INITIALIZATION      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0076
*       MLEN=F0C;                   /* INIT MOVE LENGTH TO KEEP THE
*                                      COMPILER QUIET                */
         SLR   MLEN,MLEN                                           0076
*       KEYSW=F0C;                  /* DO THE SAME FOR THE KEY FOUND
*                                      SWITCH                        */
         SLR   KEYSW,KEYSW                                         0077
*       IF DMCBDDNM(F1C)=LHEX0C THEN/* TEST DDNAME NOT FILLED IN     */
         CLI   DMCBDDNM(DMCBPTR),X'00'                             0078
         BNE   @RF00078                                            0078
*         DO;                       /* FILL IN DDNAME                */
*           DMCBDDNM='';            /* INIT THE ASSIGNED DDNAME TO 0080
*                                      BLANKS                        */
         MVI   DMCBDDNM(DMCBPTR),C' '                              0080
         MVC   DMCBDDNM+1(7,DMCBPTR),DMCBDDNM(DMCBPTR)             0080
*           CALL GETDAT(DALRTDDN,DMCBDDNM);/* FILL IN THE DDNAME   0081
*                                      ASSIGNED                      */
         LA    @10,@CB00450                                        0081
         ST    @10,@AL00001                                        0081
         LA    @10,DMCBDDNM(,DMCBPTR)                              0081
         ST    @10,@AL00001+4                                      0081
         LA    @01,@AL00001                                        0081
         BAL   @14,GETDAT                                          0081
*         END;                      /* FILL IN DDNAME                */
*       IF DMCBDSN(F1C)=LHEX0C THEN /* TEST DSNAME NOT FILLED IN     */
@RF00078 CLI   DMCBDSN(DMCBPTR),X'00'                              0083
         BNE   @RF00083                                            0083
*         DO;                       /* FILL IN DSNAME                */
*           DMCBDSN='';             /* INIT THE ASSIGNED DSNAME TO 0085
*                                      BLANKS                        */
         MVI   DMCBDSN(DMCBPTR),C' '                               0085
         MVC   DMCBDSN+1(43,DMCBPTR),DMCBDSN(DMCBPTR)              0085
*           CALL GETDAT(DALRTDSN,DMCBDSN);/* FILL IN THE DSNAME    0086
*                                      ASSIGNED                      */
         LA    @10,@CB00452                                        0086
         ST    @10,@AL00001                                        0086
         LA    @10,DMCBDSN(,DMCBPTR)                               0086
         ST    @10,@AL00001+4                                      0086
         LA    @01,@AL00001                                        0086
         BAL   @14,GETDAT                                          0086
*         END;                      /* FILL IN DSNAME                */
*       IF DMCBVOL(F1C)=LHEX0C THEN /* TEST VOLUME SERIAL NOT FILLED
*                                      IN                            */
@RF00083 CLI   DMCBVOL(DMCBPTR),X'00'                              0088
         BNE   @RF00088                                            0088
*         DO;                       /* FILL IN VOLUME SERIAL         */
*           DMCBVOL='';             /* INIT THE ASSIGNED VOLUME    0090
*                                      SERIAL TO BLANKS              */
         MVI   DMCBVOL(DMCBPTR),C' '                               0090
         MVC   DMCBVOL+1(5,DMCBPTR),DMCBVOL(DMCBPTR)               0090
*           CALL GETDAT(DALRTVOL,DMCBVOL);/* FILL IN THE VOLUME    0091
*                                      SERIAL ASSIGNED               */
         LA    @10,@CB00466                                        0091
         ST    @10,@AL00001                                        0091
         LA    @10,DMCBVOL(,DMCBPTR)                               0091
         ST    @10,@AL00001+4                                      0091
         LA    @01,@AL00001                                        0091
         BAL   @14,GETDAT                                          0091
*         END;                      /* FILL IN VOLUME SERIAL         */
*       DMCBDSOR=LHEX0SC;           /* INIT THE DSORG TO ZEROS       */
@RF00088 MVC   DMCBDSOR(2,DMCBPTR),@CB00518                        0093
*       CALL GETDAT(DALRTORG,DMCBDSOR);/* FILL IN THE DSORG          */
         LA    @10,@CB00454                                        0094
         ST    @10,@AL00001                                        0094
         LA    @10,DMCBDSOR(,DMCBPTR)                              0094
         ST    @10,@AL00001+4                                      0094
         LA    @01,@AL00001                                        0094
         BAL   @14,GETDAT                                          0094
*       IF DMCBSTAT=LHEX0C THEN     /* TEST DS STATUS NOT FILLED IN  */
         CLI   DMCBSTAT(DMCBPTR),X'00'                             0095
         BNE   @RF00095                                            0095
*         CALL GETDAT(DALSTATS,DMCBSTAT);/* FILL IN DATA SET STATUS  */
         LA    @10,@CB00288                                        0096
         ST    @10,@AL00001                                        0096
         LA    @10,DMCBSTAT(,DMCBPTR)                              0096
         ST    @10,@AL00001+4                                      0096
         LA    @01,@AL00001                                        0096
         BAL   @14,GETDAT                                          0096
*       IF DMCBDISP=LHEX0C THEN     /* TEST DS DISPOSITION NOT FILLED
*                                      IN                            */
@RF00095 CLI   DMCBDISP(DMCBPTR),X'00'                             0097
         BNE   @RF00097                                            0097
*         CALL GETDAT(DALNDISP,DMCBDISP);/* FILL IN DATA SET       0098
*                                      DISPOSITION                   */
         LA    @10,@CB00290                                        0098
         ST    @10,@AL00001                                        0098
         LA    @10,DMCBDISP(,DMCBPTR)                              0098
         ST    @10,@AL00001+4                                      0098
         LA    @01,@AL00001                                        0098
         BAL   @14,GETDAT                                          0098
*       IF DMCBUNIT(F1C)=LHEX0C THEN/* TEST UNIT NOT FILLED IN       */
@RF00097 CLI   DMCBUNIT(DMCBPTR),X'00'                             0099
         BNE   @RF00099                                            0099
*         DO;                       /* FILL IN UNIT                  */
*           DMCBUNIT='';            /* INIT THE UNIT DESCRIPTION TO
*                                      BLANKS                        */
         MVI   DMCBUNIT(DMCBPTR),C' '                              0101
         MVC   DMCBUNIT+1(7,DMCBPTR),DMCBUNIT(DMCBPTR)             0101
*           CALL GETDAT(DALUNIT,DMCBUNIT);/* FILL IN THE UNIT      0102
*                                      DESCRIPTION                   */
         LA    @10,@CB00322                                        0102
         ST    @10,@AL00001                                        0102
         LA    @10,DMCBUNIT(,DMCBPTR)                              0102
         ST    @10,@AL00001+4                                      0102
         LA    @01,@AL00001                                        0102
         BAL   @14,GETDAT                                          0102
*         END;                      /* FILL IN UNIT                  */
*       IF DMCBVSF=ON THEN          /* TEST FOR VSAM DATA SET      0104
*                                      ALLOCATION                    */
@RF00099 TM    DMCBVSF(DMCBPTR),B'00000001'                        0104
         BNO   @RF00104                                            0104
*         ACBDDNM=DMCBDDNM;         /* FILL IN ACB DDNAME FIELD      */
         MVC   ACBDDNM(8,DMCBPTR),DMCBDDNM(DMCBPTR)                0105
*       ELSE                                                       0106
*         DCBDDNAM=DMCBDDNM;        /* FILL IN DCB DDNAME FIELD      */
         B     @RC00104                                            0106
@RF00104 MVC   DCBDDNAM(8,DMCBPTR),DMCBDDNM(DMCBPTR)               0106
*     END;                          /* DATA SET ALLOCATED, COMPLETE
*                                      THE DMCB INITIALIZATION       */
*                                                                  0107
@RC00104 DS    0H                                                  0108
*   /*****************************************************************/
*   /*                                                               */
*   /* ALLOCATION COMPLETE, RETURN TO CALLER                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0108
*   RETURN CODE(RETCODE);                                          0108
@RC00044 L     @10,RETCODE                                         0108
         L     @13,4(,@13)                                         0108
         L     @00,@SIZDATD                                        0108
         LR    @01,@11                                             0108
         BLSCFRES R,LV=(0),A=(1)
         LR    @15,@10                                             0108
         L     @14,12(,@13)                                        0108
         LM    @00,@12,20(@13)                                     0108
         BR    @14                                                 0108
         EJECT
*                                                                  0109
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERNAL PROCEDURE TO FIND REQUESTED DYNALLOC TEXT UNIT       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0109
*GETDAT:                                                           0109
*   PROCEDURE(KEYX,RETVAL);                                        0109
GETDAT   STM   @14,@12,12(@13)                                     0109
         MVC   @PC00002(8),0(@01)                                  0109
*   DCL                                                            0110
*     KEYX CHAR(2);                 /* TEXT UNIT KEY TO SEARCH ON    */
*   DCL                                                            0111
*     RETVAL CHAR(*);               /* VALUE RETURNED                */
*   MLEN=F0C;                       /* INITIALIZE THE TU PARM LENGTH
*                                      VALUE                         */
         SLR   MLEN,MLEN                                           0112
*   KEYSW=F0C;                      /* INIT THE KEY FOUND SWITCH TO
*                                      NOT FOUND                     */
         SLR   KEYSW,KEYSW                                         0113
*   DO S99TUPLX=F1C TO DMALTUPM WHILE KEYSW=F0C;/* LOOP THROUGH TEXT
*                                      UNITS                         */
         LA    S99TUPLX,1                                          0114
         B     @DE00114                                            0114
@DL00114 SLR   @10,@10                                             0114
         CR    KEYSW,@10                                           0114
         BNE   @DC00114                                            0114
*     S99TUBAS=S99TUPTR(S99TUPLX);  /* SET TEXT UNIT ADDRESABILITY   */
         LR    @15,S99TUPLX                                        0115
         SLA   @15,2                                               0115
         L     @01,S99TXTPP(,DMCBPTR)                              0115
         AL    @01,@CF00553                                        0115
         L     S99TUBAS,S99TUPTR(@15,@01)                          0115
*     RFY                                                          0116
*       S99TUNIT BASED(S99TUBAS);                                  0116
*     IF S99TUKEY=KEYX THEN         /* TEST FOR KEY MATCH            */
         L     @15,@PC00002                                        0117
         CLC   S99TUKEY(2,S99TUBAS),KEYX(@15)                      0117
         BNE   @RF00117                                            0117
*       DO;                         /* KEY MATCH, MOVE IN DATA AND 0118
*                                      STOP SEARCH                   */
*         MLEN=S99TULNG;            /* MOVE LENGTH                   */
         ICM   MLEN,12,S99TULNG(S99TUBAS)                          0119
         SRA   MLEN,16                                             0119
*         IF MLEN>F0C THEN          /* TEST FOR SOMETHING TO MOVE    */
         CR    MLEN,@10                                            0120
         BNH   @RF00120                                            0120
*           RETVAL(F1C:MLEN)=S99TUPAR(F1C:MLEN);/* MOVE IN THE     0121
*                                      PARAMETER                     */
         L     @10,@PC00002+4                                      0121
         LR    @15,MLEN                                            0121
         BCTR  @15,0                                               0121
         EX    @15,@SM00554                                        0121
*         KEYSW=F1C;                /* STOP SEARCH                   */
@RF00120 LA    KEYSW,1                                             0122
*       END;                        /* KEY MATCH, MOVE IN DATA AND 0123
*                                      STOP SEARCH                   */
*   END;                            /* LOOP THROUGH TEXT UNITS       */
@RF00117 AL    S99TUPLX,@CF00046                                   0124
@DE00114 C     S99TUPLX,DMALTUPM(,DMCBPTR)                         0124
         BNH   @DL00114                                            0124
@DC00114 DS    0H                                                  0125
*   END GETDAT;                                                    0125
@EL00002 DS    0H                                                  0125
@EF00002 DS    0H                                                  0125
@ER00002 LM    @14,@12,12(@13)                                     0125
         BR    @14                                                 0125
         EJECT
*                                                                  0126
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF EXECUTABLE PROCEDURE STATEMENTS                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0126
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR01F FIXED(31) REG(1),                                     0126
*     GPR15F FIXED(31) REG(15),                                    0126
*     GPR01P PTR(31) REG(1);                                       0126
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0127
*     I031F FIXED(31) BASED,                                       0127
*     I031P PTR(31) BASED,                                         0127
*     I015F FIXED(15) BASED,                                       0127
*     I015P PTR(15) BASED,                                         0127
*     I008P PTR(8) BASED,                                          0127
*     I001C CHAR(1) BASED;                                         0127
*   DCL                                                            0128
*     1 DASPATCH LOCAL BDY(DWORD),  /* PATCH AREA                    */
*      2 DASPATA(DASPATLN) PTR INIT((DASPATLN)0);                  0128
*   END BLSCADYN                                                   0129
*                                                                  0129
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IEFZB4D0)                                       */
*/*%INCLUDE SYSLIB  (IEFZB4D2)                                       */
*                                                                  0129
*       ;                                                          0129
@DATA    DS    0H
@SM00554 MVC   RETVAL(0,@10),S99TUPAR(S99TUBAS)
         DS    0F
@AL00060 DC    A(@CF00510)             LIST WITH   5 ARGUMENT(S)
         DS    F
         DC    A(@CF00190)
         DC    A(@CB00528)
         DC    A(@CF00190)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00002 DS    2F
@AL00001 DS    6A
BLSCADYN CSECT
         DS    0F
@CF00190 DC    F'0'
@CF00046 DC    F'1'
@CF00044 DC    F'8'
@CF00502 DC    F'12'
@CF00553 DC    F'-4'
@CF00510 DC    F'-1'
@CF00531 DC    XL4'80000000'
@DATD    DSECT
         DS    0D
MODSTAT  DS    CL16
         ORG   MODSTAT
MODNAME  DS    CL8
RETCODE  DS    FL4
SUBCODE  DS    FL4
         ORG   MODSTAT+16
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSCADYN CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00270 DC    V(BLSCANAL)
         DS    0D
@CC00522 DC    C'BLSCADYN'
@CB00288 DC    X'0004'
@CB00290 DC    X'0005'
@CB00322 DC    X'0015'
@CB00450 DC    X'0055'
@CB00452 DC    X'0056'
@CB00454 DC    X'0057'
@CB00466 DC    X'005D'
@CB00518 DC    X'0000'
@CB00528 DC    B'00010000'
         DS    CL7
DASPATCH DS    CL256
         ORG   DASPATCH
DASPATA  DC    64A(0)
         ORG   DASPATCH+256
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
KEYSW    EQU   @02
MLEN     EQU   @02
S99TUBAS EQU   @03
S99TUPLX EQU   @04
S99TUFP  EQU   @02
DMCBPTR  EQU   @05
GPR01P   EQU   @01
GPR15F   EQU   @15
GPR01F   EQU   @01
DMCB     EQU   0
DMCBTVP  EQU   DMCB+8
DMCBFTY  EQU   DMCB+20
DMCBVSF  EQU   DMCBFTY
DMCBOPN  EQU   DMCB+21
DMCBRMOD EQU   DMCB+23
DMCBOUT  EQU   DMCBRMOD
DMCBOPTS EQU   DMCB+24
DMCBGKY  EQU   DMCBOPTS
DMCBMFLG EQU   DMCB+28
DMCBBUFP EQU   DMCB+32
DMCBKEYP EQU   DMCB+44
DMCBMSG  EQU   DMCB+52
DMCBRI   EQU   DMCB+64
DMCBMSG0 EQU   DMCB+68
DMCBFRE  EQU   DMCB+88
DMCBEOB  EQU   DMCB+92
DMCBACBE EQU   DMCB+124
DMCBDDNM EQU   DMCB+260
DMCBVOL  EQU   DMCB+268
DMCBDSOR EQU   DMCB+274
DMCBUNIT EQU   DMCB+276
DMCBDSN  EQU   DMCB+284
DMCBSTAT EQU   DMCB+366
DMCBDISP EQU   DMCB+367
DMCBSPEC EQU   DMCB+380
DMCBDRBP EQU   DMCB+400
DMCBSUBC EQU   DMCB+404
DMCBAMS  EQU   DMCB+416
DMCBAUDT EQU   DMCB+568
DMCBLSCP EQU   DMCBAUDT+16
DMCBWRK  EQU   DMCB+648
S99TUPL  EQU   0
S99TUPTR EQU   S99TUPL
S99TUP   EQU   0
S99TUNIT EQU   0
S99TUKEY EQU   S99TUNIT
S99TUENT EQU   S99TUNIT+4
S99TULNG EQU   S99TUENT
S99TUPAR EQU   S99TUENT+2
S99TUFLD EQU   0
BLSDMSG0 EQU   0
ZZ2      EQU   0
DMCBDMGR EQU   0
DMCBRQC  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
MODELNAM EQU   0
KEYX     EQU   0
RETVAL   EQU   0
DMCBVSM  EQU   DMCBAMS
DMCBACB  EQU   DMCBVSM+76
DMCBQSM  EQU   DMCBAMS
DMCBDCB  EQU   DMCBQSM
DMAL     EQU   DMCBWRK
DMALMODA EQU   DMAL+4
DMALDYRB EQU   DMAL+16
DMALTUPM EQU   DMAL+36
ACBDDNM  EQU   DMCBACB+40
DCBDDNAM EQU   DMCBDCB+40
S99RBPTR EQU   DMCBDRBP
S99RB    EQU   DMALDYRB
S99FLAG1 EQU   S99RB+2
S99FLG11 EQU   S99FLAG1
S99RSC   EQU   S99RB+4
S99TXTPP EQU   S99RB+8
S99FLAG2 EQU   S99RB+16
S99FLG21 EQU   S99FLAG2
S99FLG22 EQU   S99FLAG2+1
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
S99FLG24 EQU   S99FLAG2+3
S99FLG23 EQU   S99FLAG2+2
S99PCINT EQU   S99FLG22
S99UDEVT EQU   S99FLG22
S99MOUNT EQU   S99FLG21
S99CATLG EQU   S99FLG21
S99TIONQ EQU   S99FLG21
S99OFFLN EQU   S99FLG21
S99WTUNT EQU   S99FLG21
S99NORES EQU   S99FLG21
S99WTDSN EQU   S99FLG21
S99WTVOL EQU   S99FLG21
S99RSV01 EQU   S99RB+12
S99INFO  EQU   S99RSC+2
S99ERROR EQU   S99RSC
S99FLG12 EQU   S99FLAG1+1
S99JBSYS EQU   S99FLG11
S99NOMNT EQU   S99FLG11
S99NOCNV EQU   S99FLG11
S99ONCNV EQU   S99FLG11
S99VERB  EQU   S99RB+1
S99RBLN  EQU   S99RB
S99RBPND EQU   S99RBPTR
DMALEND  EQU   DMAL+1196
DMALTUS  EQU   DMAL+172
DMALTUPL EQU   DMAL+44
DMALTUBS EQU   DMAL+40
DMALMODP EQU   DMAL+12
DMALPRMP EQU   DMAL+8
DMALID   EQU   DMAL
DMCBRES7 EQU   DMCBQSM+96
DMCBRPL  EQU   DMCBVSM
S99TUPRM EQU   S99TUFLD+2
S99TULEN EQU   S99TUFLD
S99TUNUM EQU   S99TUNIT+2
S99TUPND EQU   S99TUP
S99TUPLN EQU   S99TUPTR
DMCBRES8 EQU   DMCB+640
DMCBMODN EQU   DMCB+632
DMCBCARY EQU   DMCBAUDT+20
DMCBCLC  EQU   DMCBAUDT+12
DMCBOPC  EQU   DMCBAUDT+8
DMCBFRC  EQU   DMCBAUDT+4
DMCBALC  EQU   DMCBAUDT
DMCBFR   EQU   DMCB+412
DMCBRES6 EQU   DMCB+410
DMCBIRSC EQU   DMCB+408
DMCBRSZM EQU   DMCB+398
DMCBRSZA EQU   DMCB+396
DMCBCISZ EQU   DMCB+394
DMCBDCBL EQU   DMCB+392
DMCBDCLR EQU   DMCB+390
DMCBDCFM EQU   DMCB+389
DMCBRES5 EQU   DMCB+388
DMCBLBRT EQU   DMCB+386
DMCBLBSQ EQU   DMCB+384
DMCBLBPS EQU   DMCB+383
DMCBLBTY EQU   DMCB+382
DMCBRES4 EQU   DMCB+381
DMCBSPRS EQU   DMCBSPEC
DMCBSPRN EQU   DMCBSPEC
DMCBSPCT EQU   DMCBSPEC
DMCBSPRL EQU   DMCBSPEC
DMCBSPSE EQU   DMCB+376
DMCBSPPR EQU   DMCB+372
DMCBSPTY EQU   DMCB+369
DMCBODIS EQU   DMCB+368
DMCBRES3 EQU   DMCB+364
DMCBMEMB EQU   DMCB+356
DMCBMODL EQU   DMCB+348
DMCBRES9 EQU   DMCB+340
DMCBPID  EQU   DMCB+332
DMCBTYPE EQU   DMCB+328
DMCBSYNM EQU   DMCB+132
DMCBRPLF EQU   DMCB+128
DMCBDCBE EQU   DMCBACBE
DMCBARC  EQU   DMCB+120
DMCBCPC  EQU   DMCB+116
DMCBRET  EQU   DMCB+112
DMCBSTL  EQU   DMCB+96
DMCBRES2 EQU   DMCB+85
DMCBSPID EQU   DMCB+84
DMCBRESC EQU   DMCB+80
DMCBZZ1P EQU   DMCB+76
DMCBMSGS EQU   DMCB+72
DMCBRRL  EQU   DMCB+60
DMCBRBA  EQU   DMCB+56
DMCBKEYL EQU   DMCB+48
DMCBKPC  EQU   DMCBKEYP
DMCBORL  EQU   DMCB+40
DMCBBLEN EQU   DMCB+36
DMCBBFPC EQU   DMCBBUFP
DMCBRES1 EQU   DMCB+31
DMCBACCM EQU   DMCB+30
DMCBREJ  EQU   DMCB+29
DMCBRESB EQU   DMCBMFLG
DMCBFMOD EQU   DMCBMFLG
DMCBLOPT EQU   DMCB+27
DMCBLRM  EQU   DMCB+26
DMCBLRQ  EQU   DMCB+25
DMCBOPRS EQU   DMCBOPTS
DMCBLRD  EQU   DMCBOPTS
DMCBBWD  EQU   DMCBOPTS
DMCBUPD  EQU   DMCBOPTS
DMCBAPX  EQU   DMCBOPTS
DMCBRNO  EQU   DMCBGKY
DMCBKYD  EQU   DMCBOPTS
DMCBRMRS EQU   DMCBRMOD
DMCBRM5  EQU   DMCBRMOD
DMCBRM6  EQU   DMCBRMOD
DMCBTMP  EQU   DMCBOUT
DMCBRQST EQU   DMCB+22
DMCBRESA EQU   DMCBOPN
DMCBSOUT EQU   DMCBOPN
DMCBSIN  EQU   DMCBOPN
DMCBKSF  EQU   DMCBFTY
DMCBFTRS EQU   DMCBFTY
DMCBSHF  EQU   DMCBFTY
DMCBIRL  EQU   DMCB+16
DMCBRTC  EQU   DMCB+12
DMCBNEXT EQU   DMCB+4
DMCBID   EQU   DMCB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00054 EQU   @RC00044
@RF00057 EQU   @RC00054
@ENDDATA EQU   *
         END   BLSCADYN,(C'PLS1637',0701,78062)
