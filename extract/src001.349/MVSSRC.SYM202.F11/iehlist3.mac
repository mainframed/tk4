 TITLE 'IEHLIST3-IEHLIST PROGRAM CARD SCAN ROUTINE'
***********************************************************************
* MODULE NAME--IEHLIST3                                        YL026VC*
*                                                              YL026VC*
* DESCRIPTIVE NAME--IEHLIST CARD SCAN ROUTINE                  YL026VC*
*                                                              YL026VC*
* COPYRIGHT--NONE                                              YL026VC*
*                                                                     *
* STATUS--PROLOG MODIFICATION NOVEMBER 1972                    YL026VC*
*                                                                     *
* FUNCTION--THIS IS THE CARD SCAN ROUTINE USED BY THE IEHLIST PROGRAM *
*    IT READS THE CARDS AND SCANS OFF EACH COMMAND OR KEYWORD OR      *
*    PARAMETER OF THAT CARD. THIS INFORMATION IS PASSED TO THE CON-   *
*    TROL CARD ANALYZER ROUTINE (IEHLISTP) OF THE IEHLIST PROGRAM     *
*    (MODULE IEHLIST1)                                                *
*                                                                     *
* ENTRY POINTS--BEGINNING OF CSECT IEHLISTC                           *
*                                                                     *
* INPUT--140 BYTE WORKAREA POINTED TO BY REGISTER 13                  *
*    FIRST BYTE OF WORKAREA USED AS FOLLOWS:                          *
*    BIT 0  SCAN ERROR                                                *
*    BIT 1  BYPASS THE CARD                                           *
*    BIT 2  END OF FILE ON CARD INPUT                                 *
*    BIT 3  SCANNER FIRST ENTRY SW                                    *
*    BIT 4  COMMAND                                                   *
*    BIT 5  KEYWORD                                                   *
*    BIT 6  PARAMETER                                                 *
*    BIT 7  LEFT PARENTHESIS                                          *
*                                                                     *
* OUTPUT--INPUT WORK AREA                                             *
*    REG 2  LENGTH OF FIELD BEING PASSED                              *
*    REG 3  ADDRESS OF FIELD BEING PASSED                             *
*                                                                     *
* EXTERNAL REFERENCES--NONE                                           *
*                                                                     *
* EXITS,NORMAL-- RETURN VIA REG 14                                    *
*                                                                     *
* EXITS,ERROR--RETURN VIA REG 14 BUT WITH ERROR INDICATORS ON IN WORK *
*         AREA                                                        *
*                                                                     *
* TABLES/WORKAREAS--140 BYTE WORKAREA                                 *
*                                                                     *
* ATTRIBUTES--REUSABLE                                                *
*                                                                     *
* NOTES--                                                             *
*                                                                     *
* CHANGE ACTIVITY--FOLLOWS PROLOG                              YL026VC*
*                                                                     *
***********************************************************************
         EJECT
IEHPSCAN START 0
*1608                                                              8103
* 101000                                                         A24963
IEHLISTC CSECT
         USING RDCARD,12
*
*                   THIS ROUTINE SAVES REG 3 THRU 14 UPON ENTRY
*                      TEST ENTRY CONTROL SWITCHES TO CONTROL
*                      ENTRY TO SCAN ROUTINE  INITIALIZE POINTER
*                      TO START SCAN ADDRESS
RDCARD   STM   REG3,REG14,DSP15(REG13)
         LR    REG12,15
         LR    REG7,REG13
         L     REG3,DSP13(0,REG7)     RESTORE SAVED POINTER IN REG 3
         NI    0(REG7),X'7F'          RESET ERROR BIT IN SWITCHRD
         TM    0(REG7),BIT3           TEST FIRST ENTRY SWITCH
         BC    OFF,KIRSCD
         TM    0(REG7),BIT1           TEST BYPASS SWITCH
         BC    ON,KBYPO
         TM    DSP5(REG7),BIT4        TEST READ CARD SWITCH
         BC    ON,KGTCD
KPFOL    TM    DSP5(REG7),BIT2        TEST PARAMETER FOLLOW SWITCH
         BC    ON,SCANR
         TM    DSP5(REG7),BIT1        TEST CONTINUE SWITCH
         BC    ON,KCONT
         LA    REG3,ONE(0,REG7)       LOAD ADDRESS OF BEGIN COLUMN
*
*                   THIS ROUTINE CHECKS FOR A NAME  IF NAME IS PRESENT
*                      BYPASSES NAME AND SET POINTER TO FIRST BLANK COL
*
KNAME    CLI   0(REG3),BLANKCOL
         BC    YES,KOMMD
         LA    REG5,DSP3(0,REG7)
         CR    REG3,REG5
         BC    SAME,KNOP
         LA    REG3,ONE(0,REG3)
         BC    GO,KNAME
*
*                   INITIALIZE SWITCHES AND INDICATORS TO RECOGNIZE
*                      COMMAND WORD IN FIRST CARD OF A GROUP
*                      RESET PARENTHESES COUNTER
*
KOMMD    LA    REG3,ONE(0,REG3)
         SR    REG2,REG2
         STH   REG2,DSP9(0,REG7)        RESET PARENTHESES COUNTER
         OI    DSP5(REG7),BIT5          SET COMMAND CONTROL SWITCH
         OI    0(REG7),BIT4             SET COMMAND BIT IN SWITCHRD
         NI    DSP10(REG7),RESET0       RESET DELIMITER INDICATOR
*
*
*                   ADJUST POINTER TO FIRST CHARACTER OF COMMAND
*                      IF NO COMMAND FOUND BEFORE COL 71 SET BYPASS BIT
         LA    REG5,DSP3(0,REG7)        LOAD ADDRESS OF END COLUMN
KABC     CLI   0(REG3),BLANKCOL           IS COLUMN BLANK
         BC    NO,SCAN
         CR    REG3,REG5                  IS THIS THE END COLUMN
         BC    SAME,KNOP
         LA    REG3,ONE(0,REG3)           ADJUST POINTER TO NEXT COL
         BC    GO,KABC
*
*                   RESET SWITCHRD CONTROLS  RESET EXIT CONTROLS
*                      SAVE LAST DELIMITER AND CLEAR DELIMITER IND
*
SCANR    NI    0(REG7),RESET1           RESET COMMAND BIT
SCAN     NI    0(REG7),RESET2           RESET ALL BITS BUT ERR  FST ENT
         NI    DSP5(REG7),BIT8          RESET ALL BITS BUT CMD CNTL SW
SCANPP   MVC   DSP11(ONE,REG7),DSP10(REG7)
KCPSS    NI    DSP10(REG7),RESET0
         NI    DSP8(REG7),RESET10       RESET EXIT CONTROL SW
*
*                   THIS ROUTINE SCANS CARD UNTIL DELIMITER IS FOUND
*                      SAVES ADDRESS OF FIRST CHAR  COMPUTES LENGTH
*                      SET BIT IN EXIT CONTROL IF DELIM IS IN END COL
*                      OR BEFORE END COL
*
KTRT     SR    REG1,REG1
         SR    REG2,REG2
         LA    REG5,DSP3(0,REG7)        LOAD ADDR OF EN COLUMN
         LR    REG1,REG3
KOMPAR   CLI   0(REG3),KSPLT            IS CHAR A DELIMITER
         BC    LOW,KFIND
KOMPARA  LA    REG2,ONE(0,REG2)         ADD ONE TO LENGTH
         CR    REG3,REG5                IS THIS END COLUMN
         BC    SAME,KPART               IF SAME GO TO SAVE PARTIAL PARM
KOMPARS  LA    REG3,ONE(0,REG3)         ADJUST POINTER TO NEXT COL
         BC    GO,KOMPAR
*
*                  KFIND CHECKS FOR DELIMITER OF PERIOD OR MINUS IF
*                      PRESENT RETURNS TO SCAN ROUTINE   TESTS END COL
*                      IF DELIMITER IS IN END COL SET CC2 BIT  IF BEFOR
*                      END COL SET CC1 BIT AND GOES TO TEST DELIMITER
*                      ROUTINE.
*
*
KFIND    CLI   0(REG3),PERIOD
         BC    YES,KOMPARA
         CLI   0(REG3),MINUS
         BC    YES,KOMPARA
         CLI   0(REG3),SLASH
         BC    YES,KOMPARA
         CLI   0(REG3),X'5B'           IS CHAR A DOLLAR SIGN       8103
         BC    YES,KOMPARA                                         8103
         CLI   0(REG3),X'7B'           IS CHAR A NUMBER SIGN       8103
         BC    YES,KOMPARA                                         8103
         CLI   0(REG3),X'7C'           IS CHAR AN AT SIGN          8103
         BC    YES,KOMPARA                                         8103
         CR    REG3,REG5               IS THIS END COLUMN
         BC    NO,SETCC1                   SET COND CODE 1 BIT
         OI    DSP8(REG7),BIT2             SET COND CODE 2 BIT
         TM    DSP5(REG7),BIT3          IS PARTIAL PARAM SW ON
         BC    ON,KTERBY                   IF ON LENGTH IS TO LONG
         BC    GO,TESTPAR
*
*                   THIS ROUTINE SETS ENTRY SWITCHES WHEN NO COMMAND
*                      WORD IS FOUND OR NO KEYWORD OR PARAMETER FOLLOWS
*                      A COMMAND WORD
*
KNOP     OI    0(REG7),BIT0            NO COMMAMD  OR PARAM  IN CARD
         SR    REG1,REG1
         SR    REG2,REG2
KNOPAR   OI    0(REG7),BIT1        NO KEYWORD OR PARAMETERS FOLLOW
         BC    GO,KPASS               COMMAND   SET BYPASS AND GO
*                                     TO KPASS
*
*
*
*                   TESTPAR CHECKS FOR PRESENCE OF PAPTIAL PARAMETER
*                      AND CHECKS LENGTH FOR ZERO OR  GT ZERO.
*                      SETS CORRECT LENGTH BIT
TESTPAR  TM    DSP5(REG7),BIT3     IS PARTIAL PARAM SW ON
         BC    ON,KPPAR
         SR    REG4,REG4
         AR    REG4,REG2
         BC    ZERO,SETLZ
         OI    DSP8(REG7),BIT6          SET LNG GT ZERO BIT
*
*
*
*                   DELIM  CHECKS FOR VALID DELIMITER AND BRANCHES TO
*                      ROUTINE TO SET CONTROL SWITCHES
*                      IF INVALID DELIMITER IS FOUND BRANCHES TO KINVAL
*
DELIM    CLI   0(REG3),EQUAL
         BC    YES,KEY
         CLI   0(REG3),COMMA
         BC    YES,PARAMC
         CLI   0(REG3),LPARN
         BC    YES,PARAMLP
         CLI   0(REG3),RPARN
         BC    YES,PARAMRP
         CLI   0(REG3),BLANKCOL
         BC    YES,PARBLANK
         BC    GO,KINVALD              INVALID DELIM FOUND
*
*                   DECID  CHECK THE EXIT CONTROL SW AND DELIMITER
*                      INDICATOR TO SET CORRECT ENTRY SWITCHES AND
*                      INFORMATION IN SWITCHRD FOR USER PROGRAM
*
*
*                   KIRSCO IS THE FIRST ENTRY ROUTINE  WHICH CLEARS
*                      CONTROL SWITCHES TO ZERO FOR FIRST READ
*                      GOES TO READ CARD  ROUTINE
*
KIRSCD   OI    0(REG7),BIT3             SET FIRST ENTRY BIT
         SR    REG3,REG3               *CLEAR READ ROUTINE
         ST    REG3,DSP9(0,REG7)        SWITCH AREAS ON FIRST
         STC   REG3,DSP5(0,REG7)        ENTRY INTO ROUTINE*
         STC   REG3,DSP8(0,REG7)
         MVC   321(3,REG7),EODA        STORE ADDR OF EODAD IN DCB
         BC    GO,KGTCD
*
*                   KGTCD READS A CARD INTO INPUT AREA IF LAST CARD
*                      HAS BEEN READ GO TO KEOF  IF NOT GO TO KGTCDR
*
*        LA    REG1,DSP16(0,REG7)       LOAD ADDR OF DCB
*        LA    REG2,DSP1(0,REG7)        LOAD ADDR OF INPUT AREA
*        GET   (REG1),(REG2)            READ A CARD
KGTCD    LA    REG1,DSP16(0,7)         DECB
         LA    REG2,DSP18(0,7)         DCB
         LA    REG10,ONE(0,7)          AREA
         LA    REG13,DSP17(0,7)        SAVEAREA
        GET   (2),(10)
         LR    REG13,REG7
         CLC   1(3,7),KEND
         BC    8,KEOF
*
*                   KGTCDR TESTS COLUMN 72 FOR BLANK AND SETS BIT FOR
*                      BLANK OR NON BLANK   TEST BYPASS BIT IF ON
*                      GO TO KBYPO IF OFF GO TO ROUTINE TO TEST ENTRY
*                      CONTROL SWITCH
*
KGTCDR   NI    DSP8(REG7),RESET0
         CLI   DSP4(REG7),BLANKCOL      IS COL 72 BLANK
         BC    YES,SET72B
         OI    DSP8(REG7),BIT5          SET 72 NB SW
RETURN   TM    0(REG7),BIT1             IS BYPASS SW ON
         BC    ON,KBYPO
         BC    GO,KPFOL
*
*                   PARBLANK IS ENTERED IF DELIMITER WAS A BLANK
*                      CHECKS FOR PRESENCE OF COMMAND WORD IF COMMAND
*                      ADJUST POINTER TO NEXT NON BLANK COLUMN
*                      CHECKS LENGTH IF NOT ZERO SET BYPASS SW
*                      IF ZERO AND PRECEDED BY COMMA READ NEXT
*                      CARD
*
PARBLANK TM    DSP5(REG7),BIT5          IS C SWITCH ON
         BC    ON,KPCMD
         OI    0(REG7),BIT6            SET PARAM  BIT
         OI    DSP10(REG7),BIT4        SET BLANK DELIM BIT
DECID    TM    DSP8(REG7),BIT2          IS DELIM IN END COLUMN
         BC    ON,KWENT
         TM    DSP8(REG7),BIT7          IS LENGTH EQ TO ZERO
         BC    ON,KFORZRO
         OI    DSP5(REG7),BIT2          SET PARAM FOLLOW SW
         TM    DSP10(REG7),BIT4         IS DELIM A BLANK
         BC    ON,KETBYP
         BC    GO,KPASS
*
*
KETBYP   OI    0(REG7),BIT1             SET BYPASS SW ON
         BAL   REG9,PARAN               GO TO TEST PARAN CTR
         BC    GO,KPASS
*
*
KFORZRO  SR    REG1,REG1                SET REG1 AND REG2 TO ZERO
         SR    REG2,REG2
         TM    DSP10(REG7),BIT4         IS DELIM A BLANK
         BC    ON,KETRDCD
         OI    DSP5(REG7),BIT2          SET PARAM FOLLOW SW
         TM    DSP10(REG7),BIT0         IS DELIM EQUAL SIGN
         BC    ON,KTER
         TM    DSP10(REG7),BIT2         IS DELIM LEFT PARAN
         BC    ON,KPAFOL
         TM    DSP10(REG7),BIT3         IS DELIM RIGT PARAN
         BC    ON,KPASS
         TM    DSP11(REG7),BIT3        WAS LAST DELIM A )
         BC    ON,KPAFOL
         BC    GO,KPASS
*
*
KDSP     LA    REG4,DSP2(0,REG7)       IS THIS COL 16
         CR    REG3,REG4
         BC    SAME,KBYPS              YES SET BYPASS
         TM    DSP11(REG7),EQRPN       WAS LAST DELIM AN = OR )
         BC    OFF,KTERBY
         BC    GO,KBYPS
KETRDCD  OI    DSP5(REG7),CONT          SET RD CARD AND CONTINUE
         TM    DSP8(REG7),BIT4          IS COL 72 BLANK
         BC    ON,KDSP
         TM    DSP11(REG7),BIT1         IS LAST DELIM A COMMA
         BC    ON,KGTCD
         TM    DSP11(REG7),BIT2        WAS LAST DELIM AN  (
         BC    ON,KTERBY
         BC    GO,KBYPS
*
*
KTERBY   OI    0(REG7),BIT1             SET BYPASS SW
KTER     OI    0(REG7),BIT0             SET ERR SW
         BC    GO,KPASS
*
*
KWENT    OI    DSP5(REG7),CONT          SET RD CARD AND CONTINUE
         TM    DSP8(REG7),BIT4          IS COL 72 BLANK
         BC    ON,KETCTBL
         TM    DSP8(REG7),BIT7          IS LNG EQ ZERO
         BC    ON,KZERO
         TM    DSP10(REG7),BIT4         IS DELIM BLANK
         BC    ON,KETBYP
         BC    GO,KPASS
*
*
KZERO    SR    REG1,REG1
         TM    DSP10(REG7),BIT0         IS DELIM EQUAL
         BC    ON,KTER
         TM    DSP10(REG7),BIT4            IS DELIMITER A BLANK
         BC    ON,KETRDCD
         TM    DSP10(REG7),BIT1        IS A DELIM A COMMA
         BC    OFF,KRTPR
         TM    DSP11(REG7),BIT3        WAS LAST  DELIM A )
         BC    ON,KGTCD
         BC    GO,KPASS
KRTPR    TM    DSP10(REG7),BIT3        IS DELIM  A RT  PAREN
         BC    ON,KPASS
         BC    GO,KGTCD
*
*
KETCTBL  OI    0(REG7),BIT1             SET BYPASS SW
         BAL   REG9,PARAN               CHECK PARAN CTR
         TM    DSP8(REG7),BIT7          IS LNG EQ ZERO
         BC    ON,KETLPRN
         TM    DSP10(REG7),BIT1         IS DELIM A COMMA
         BC    ON,KTER                    SET ERR AND GO TO KPASS
         BC    GO,KPASS
*
*
KETLPRN  SR    REG1,REG1
         TM    DSP10(REG7),BIT3        IS DELIM A RTPAREN
         BC    ON,KPASS
         TM    DSP10(REG7),BIT4         IS DELIM A BLANK
         BC    ON,KETBLK
         BC    GO,KTER                    SET ERR AND GO TO KPASS
*
*
KETBLK   TM    DSP11(REG7),MSKG         IS LAST DELIM COMMA OR LT PARAN
         BC    OFF,KPASS
         BC    GO,KTER                    SET ERR AND GO TO KPASS
*
BYRDCD   OI    0(REG7),BIT1             SET BYPASS SW
         BC    GO,KGTCD                 READ NEXT CARD
SET72B   OI    DSP8(REG7),BIT4              SET COL 72 BLK SW
         BC    GO,RETURN
KBYPO    CLI   DSP4(REG7),BLANKCOL           IS COL 72 BLANK
         BC    NO,KGTCD
         NI    0(REG7),BIT3                  RESET SWITCHRD
         NI    DSP5(REG7),RESET0             RESET ENTRY CONTROL SW
         BC    GO,KGTCD
SETCC1   OI    DSP8(REG7),BIT1               SET COND CODE 1 SW
         BC    GO,TESTPAR
SETLZ    OI    DSP8(REG7),BIT7
         BC    GO,DELIM
KEY      OI    0(REG7),BIT5                  KEY KEYWORD BIT
         OI    DSP10(REG7),BIT0              SET DELIMITE BIT
         BC    GO,DECID
PARAMC   OI    0(REG7),BIT6                  SET PARAMETER BIT
         OI    DSP10(REG7),BIT1              SET DELIMETER BIT
         BC    GO,DECID
PARAMLP  OI    0(REG7),BIT6                  SET PARAMETER BIT
         OI    DSP10(REG7),BIT2              SET DELIMITER BIT
         BAL   REG9,ADD
         BC    GO,DECID
PARAMRP  OI    0(REG7),PRPARN                SET PARAM AND RT PAREN BIT
         OI    DSP10(REG7),BIT3
         BAL   REG9,SUBT
         BC    GO,DECID
*
PRFOL    OI    DSP5(REG7),BIT2          SET PARAM FOLLOW TO CNTL ENTRY
         BC    GO,KPASS
*
*
KINVAL   OI    0(REG7),BIT0             INVALID DELIMITER USED
         LA    REG2,ONE(0,REG2)          TO NEXT DELIMITER ADJ
         LA    REG3,ONE(0,REG3)          LNG IN REG 2
         CLI   0(REG3),KSPLT           SET ERROR  BIT
         BC    LOW,KINV
         CR    REG3,REG5
         BC    LOW,KINVAL
         TM    DSP8(REG7),BIT4          IS COL 72 BLANK
         BC    ON,KTERBY
         LA    REG2,ONE(0,REG2)
         BC    GO,KPTERR
KCONT    LA    REG3,DSP2(0,REG7)        SET POINTER TO CONTINUE COL
         NI    DSP10(REG7),RESET0       CLEAR DELIMITER INDICATOR
         BC    GO,SCANR
*
*
KPART    TM    DSP5(REG7),BIT3          IS PARTIAL PARAM SWITCH ON
         BC    ON,KTERBY
         OI    DSP8(REG7),BIT0          SET CCO BIT
KPTERR   OI    DSP5(REG7),BIT3          SET PARTIAL PARAM BIT
         TM    DSP8(REG7),BIT4          IS COL 72 BLANK
         BC    ON,KLAST
         MVI   DSP7(REG7),BIT1
         MVC   DSP7+1(43,REG7),DSP7(REG7)
         STC   REG2,DSP6(0,REG7)        SAVE LENGTH OF PARTIAL PARAM
         BCTR  REG2,0                   ADJ LNG FOR MOVE
         EX    REG2,MOVEP               MOVE PARTIAL TO SAVE AREA
         OI    DSP5(REG7),BIT1          SET CONTINUE BIT
         BC    GO,KCDFL
KLAST    OI    0(REG7),BIT6                 SET PARAM BIT
         BC    GO,KETBYP               SET BYPASS BIT
*
*
KPPAR    SR    REG4,REG4                CLEAR REG
         AR    REG4,REG2                 COMPLETE PARAMETER IN HOLD
         BC    ZERO,KOMPL                AREA
         SR    REG4,REG4
         IC    REG4,DSP6(0,REG7)
         LA    REG9,DSP7(0,REG7)
         AR    REG4,REG9
         BCTR  REG2,0
         EX    REG2,MOVPP
         LA    REG2,ONE(0,REG2)
KOMPL    SR    REG4,REG4                COMPUTE LENGTH AND PLACE IN
         IC    REG4,DSP6(0,REG7)          REG 2
         AR    REG2,REG4
         LA    REG1,DSP7(0,REG7)         PLACE ADDR OF HOLD AREA IN
*                                         REG 1
         NI    DSP8(REG7),RESET10
         OI    DSP8(REG7),MSKE          SET  CC1 AND LNG GT ZERO
         MVC   DSP11(ONE,REG7),DSP10(REG7)
         NI    DSP10(REG7),RESET0
         NI    DSP5(REG7),RESET6        RESET PARTIAL PARAM SW
         BC    GO,DELIM
*
*
KPASS    LA    REG3,ONE(0,REG3)
KPASS1   NI    DSP5(REG7),X'EB'
         ST    REG3,DSP13(0,REG7)
         LM    REG3,REG14,DSP15(REG7)
         BR    14
*
*
KPCMD    LA    REG3,ONE(0,REG3)         ADJ POINTER TO START OF NEXT
         CLI   0(REG3),BLANKCOL           KEYWORD OR PARAMETER AND GO
         BC    NO,KPCMA                   TO PRFOL IF NO KEYW OR PARAM
         CR    REG5,REG3                  IS PRESENT GO KNOPAR
         BC    SAME,KNOPAR
         BC    GO,KPCMD
*
*
KPCMA    CLI   0(REG3),COMMA              IF COMMA IS FIRST CHAR FOUND
         BC    YES,KNOPAR                  GO TO KNOPAR
         BCTR  3,0
         BC    GO,PRFOL
*
*
KSETP    OI    DSP5(REG7),BIT3            SET PARAM FOLLOW AND
         LA    REG2,ONE(0,REG2)            ADJUST LNG
         BC    GO,KPTERR
*
*
KINV     TM    DSP5(REG7),BIT5            IF COMP CNTL SW ON ADJ
         BC    ON,KPCMD                    POINTER TO NEXT PARAM
         BC    GO,PRFOL
KCDFL    TM    DSP8(REG7),BIT5            IF COL 72 NON BLANK GET CARD
         BC    ON,KGTCD
         OI    0(REG7),BIT0               IF COL 72 BLANK GO TO ERROR
KBYPS    OI    0(REG7),BIT1
         BC    GO,KPASS
*
*
SUBT     LH    REG4,DSP9(0,REG7)        DELIMITER WAS A CLOSE
         BCTR  REG4,0                   PARENTHESES SUBTRACT
         STH   REG4,DSP9(0,REG7)        ONE FROM COUNTER
         LTR   4,4
         BC    11,KACK
         OI    0(REG7),BIT0
KACK     BR    REG9
*
*
ADD      LH    REG4,DSP9(0,REG7)        DELIMITER WAS A OPEN
         LA    REG4,ONE(0,REG4)
         STH   REG4,DSP9(0,REG7)        ONE TO COUNTER
         BR    REG9
KPAFOL   LA    REG3,ONE(0,REG3)         ADJUST POINTER TO NEXT COL
         BC    GO,SCANR
KINVALD  OI    0(REG7),BIT0
         TM    DSP8(REG7),BIT2         IS DELIM IN END COL
         BC    ON,KSETP
         BC    GO,KINVAL
*
*
KEOF     NI    0(7),X'00'
         OI    0(7),X'20'
         BAL   9,PARAN
         TM    DSP5(REG7),BIT1         WAS CONTINUATION EXPECTED A24963
         BC    OFF,OKAY2               NO, RETURN AS IS          A24963
         OI    0(REG7),X'80'           YES, SET SCAN ERROR BIT   A24963
OKAY2    B     KPASS                   GO PASS INDICATORS BACK   A24963
*
*
PARAN    SR    4,4
         AH    4,128(0,7)
         BC    8,OKAY
         OI    0(7),X'80'
OKAY     BR    9
*
*
*
*
MOVEP    MVC   DSP7(ONE,REG7),0(REG1)
MOVPP    MVC   0(ONE,REG4),0(REG1)
KEND     DC    CL3'/* '
EODA     DC    AL3(KEOF)
         ENTRY KEOF
         ENTRY RDCARD
REG1     EQU   1
REG2     EQU   2
REG3     EQU   3
REG4     EQU   4
REG5     EQU   5
REG6     EQU   6
REG7     EQU   7
REG8     EQU   8
REG9     EQU   9
REG10    EQU   10
REG11    EQU   11
REG12    EQU   12
REG13    EQU   13
REG14    EQU   14
BIT0     EQU   X'80'          SET       ERROR,CC0
BIT1     EQU   X'40'          SET       BYPASS,CONT,CC1
BIT2     EQU   X'20'          SET       EOF,PARAM FOLL,CC2
BIT3     EQU   X'10'          SET       FIRSTENTRY,PARTIAL PARAM
BIT4     EQU   X'08'             SET   COMMAND,RDCD,COL72 NONBLANK
BIT5     EQU   X'04'          SET       KEYWORD,CSWITCH,COL72 NONBLANK
BIT6     EQU   X'02'          SET       PARAM,L70
BIT7     EQU   X'01'          SET       RPAREN,L=O
BIT8     EQU   X'14'
BIT9     EQU   X'0C'
RESET0   EQU   X'00'
RESET1   EQU   X'F7'          RESET     COMMAND,RDCD,COL72 BLANK
RESET2   EQU   X'98'          RESET
RESET3   EQU   X'84'
RESET4   EQU   X'9E'
RESET5   EQU   X'BF'
RESET6   EQU   X'EF'
RESET7   EQU   X'F0'
RESET8   EQU   X'FB'          RESET     KEYWORD,CSWTICH,COL72 NB
RESET9   EQU   X'90'
RESET10  EQU   X'0C'
RESETB   EQU   X'50'
CC0      EQU   8
CC1      EQU   4
CONT     EQU   X'48'
ON       EQU   1
OFF      EQU   8
OFFA     EQU   12
ONE      EQU   1
YES      EQU   8
NO       EQU   7
GO       EQU   15
ZERO     EQU   8
SAME     EQU   8
KSPLT    EQU   X'7F'
LOW      EQU   4
HIGH     EQU   2
EOF      EQU   1
ECLP     EQU   X'E0'
DSP1     EQU   1
DSP2     EQU   16
DSP3     EQU   71
DSP4     EQU   72
DSP5     EQU   81
DSP6     EQU   82
DSP7     EQU   83
DSP8     EQU   127
DSP9     EQU   128
DSP10    EQU   130
DSP11    EQU   131
DSP12    EQU   132
DSP13    EQU   136
DSP14    EQU   140
DSP15    EQU   144
DSP16    EQU   192
DSP17    EQU   216
DSP18    EQU   288
EQUAL    EQU   X'7E'
COMMA    EQU   X'6B'
BLANKCOL EQU   X'40'
LPARN    EQU   X'4D'
RPARN    EQU   X'5D'
PERIOD   EQU   X'4B'
MINUS    EQU   X'60'
SLASH    EQU   X'61'
PRPARN   EQU   X'03'          SET       PARAM,RPARAN
EQRPN    EQU   X'90'
MSKA     EQU   X'26'
MSKB     EQU   X'2A'
MSKC     EQU   X'29'
MSKD     EQU   X'25'
MSKE     EQU   X'42'
MSKF     EQU   X'41'
MSKG     EQU   X'60'
MSKJ     EQU   X'49'
MSKK     EQU   X'45'
         END
