         TITLE 'ISTNMC6S - PORT SOLICITOR INBOUND RETRY PROCESSOR      *
                        '
*                                                                  0001
ISTNMC6S CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTNMC6S  78.158'                                 0001
         DROP  @15
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*/*CMZPROC OPTIONS(NOSAVE,NOSAVEAREA,REENTRANT,ID,NODATAREG)WORKREGS(1,
*,4,5,6,8,13)INCLUDES(ISTRPH)                                        */
*                                                                  0002
*   DO;                                                            0002
*                                                                  0002
*/* ATBUILD (ISTRPH)                                                 */
*                                                                  0003
*/* RPL HEADER                                                        *
*/*  REVISIONS                                         006 04/09/75   *
*DCL RPHPTR PTR(31) REGISTER(1) RESTRICTED;                        0003
*DCL  1  ISTRPH BDY(WORD) BASED(RPHPTR),                           0004
*       2  RPHCNTL FIXED(32),          /* CONTROL INFORMATION         *
*       3  RPHTYPE CHAR(1),            /* CONTROL BLOCK TYPE          *
*       3  RPHLNGTH PTR(8),            /* LENGTH IN BYTES             *
*       3  RPHFLAGS BIT(8),            /* SYSTEM DEPENDENT FLAGS      *
*         4  RPHOGIND BIT(1),          /* OPEN GATE INDICATOR         *
*         4  RPHSPGIN BIT(1),          /* SPECIAL GATE OPEN IND.      *
*         4  RPHAPTYP BIT(1),          /* APS IS A USER EXIT          *
*            5  RPHAUTEX BIT(1),        /*EXIT TO AUTHORIZED USER VS2 *
*         4  RPHSMQ BIT(1),            /* INDICATOR IF RPH IS TO BE   *
*                                      /* QUEUED                      *
*         4  RPHSMTYP BIT(1),          /* REQUEST TYPE IS BUFFER OR   *
*                                      /* DOUBLE-WORD                 *
*         4  RPHSMCLR BIT(1),          /* INDICATOR IF BUFFER TO BE   *
*                                      /* CLEARED                     *
*           4  RPHMLTCP BIT(1),        /* USED BY LOCAL 3270  SUPPORT *
*                                      /* WHEN BUILDING MULTIPLE CHAN *
*                                      /* PROGRAM                     *
*           4  RPHFSTLC BIT(1),        /* USED BY LOCAL 3270 SUPPORT  *
*                                      /* TO INDICATE FIRST LCCW      *
*              5  RPHFNFLG BIT(1),     /* LCCW SET FUNCTION FLAGS     *
*        3  RPHFLGB BIT(8),            /* SECOND FLAG BYTE            *
*           4  RPHLOCK BIT(1),         /* LOCKING OPTION              *
*           4  RPHBSSP BIT(1),         /* SYSTEM SERVICES PROGRESS    *
*           4  RPHFBAPS BIT(1),        /* STG. OBTAINED BY APS        *
*           4  RPHPGCMP BIT(1),        /* BIT ON INDICATES RESOURCE   *
*                                      /* MGR HAS COMPLETED UNLOCK    *
*           4  RPHNRSAV BIT(1),        /* DO NOT SAVE ON ACTIVATE     *
*           4  RPHRLCRA BIT(1),        /* RPH CAN BE RELEASED         *
*                                      /* WHEN PURGE COMPLETE         *
*           4  *        BIT(2),        /* RESERVED                    *
*       2  RPHRPHA PTR(31),            /* ADDR.OF NEXT RPL HEADER     *
*         3  RPHCVFLG BIT(8),          /*                    @ZA30004*/
*           4  RPHGATE BIT(1),         /* GATING FLAG                 *
*             5  RPHVYRPH BIT(1),      /* THIS IS VARYS RPH   @ZA30004*
*           4  RPHPSRPH BIT(1),        /*WAIT ON PORTSOL PURGE@ZA30004*
*           4  RPHCDRPH BIT(1),        /*WAIT ON CLSDST PURGE @ZA30004*
*           4  RPHOWRPH BIT(1),        /* WAIT ON OWN PURGE   @ZA30004*
*           4  RPHFRRPH BIT (1),       /* WAIT IN OCCFR       @ZA30004*
*           4  *       BIT(3),         /* RESERVED                    *
*         3  RPHRPHAP PTR(24),         /* RPH WAITING ON PURGE        *
*       2  RPHTSKID PTR(31),           /* TASK IDENTIFICATION         *
*                                      /* OR ADDR.OF APS TABLE        *
*          3  *     CHAR(3),           /* RPH TSK ID                  *
*          3  RPHTIK PTR(8),           /* TIK                         *
*       2  RPHDVTA PTR(31),            /* ADDR.OF  CURRENT DVT        *
*       2  RPHRESMA PTR(31) BDY(WORD), /* TPWAIT-POST INFO */      0004
*         3 RPHWPFLG CHAR(1),          /* WAIT-POST FLAGS */       0004
*           4 RPHRSKEY BIT(4),         /* STORAGE PROTECT KEY TO RESUME
*                                         PROCESSING                  *
*           4 RPHWT BIT(1),            /* WAIT BIT */              0004
*           4 RPHPT BIT(1),            /* POST BIT */              0004
*           4 RPHPURGE BIT(1),         /* RPH FLAGGED BY RECOVERY    */
*                                      /* TO BE PURGED BY PSS        */
*                                      /* VS/2 ONLY                  */
*           4 RPHRSV01 BIT(1),        /* RESERVED                    */
*         3 RPHRESUM PTR(24),          /* RESUME ADDRESS */        0004
*       2  RPHPABOF PTR(8),            /* OFFSET OF PAB IN CONTROL BLK*
*       2  RPHMAJCB PTR(24),           /* ADDR.OF MAJOR CONTROL BLOCK *
*       2  RPHWEA PTR(31),             /* ADDR.OF WORK ELEMENT        *
*         3  RPHCSPA PTR(31),          /* ADDR OF ISTCSP              *
*           4  RPHWEGT BIT(1),         /* GATE FOR WORK ELEMENT PROC. *
*       2  RPHSRPRM PTR(31),           /* SERVICE ROUTINE PARM.FIELD  *
*         3 RPHSRP12 FIXED(15),        /* COUNT OF Q'ED SMS REQUESTS  *
*         3 RPHSRP34 FIXED(15),        /* SIZE OF Q'ED SMS REQUESTS   *
*       2  RPHCRR PTR(31),             /* ADDR.OF COMPONENT RECOVERY  *
*                                      /* RECORD                      *
*       2  RPHPABQA PTR(31),           /* PAB QUEUE ADDRESS           *
*          3 RPHPABFG CHAR(1),         /* FLAG BYTE CARRIED FROM PAB  *
*          3 RPHPABQP PTR(24),         /* POINTER TO QUEUE OF PAB'S   *
*       2  RPHWORK CHAR(64) BDY(WORD), /* 16 WORD WORK AREA           *
*         3  RPHSAVE1 FIXED(31),       /*                             *
*           4  RPHSBYTE CHAR(1),       /* 1-BYTE SAVE FIELD           *
*           4  RPHSBITS BIT(8),        /* SAVE FIELD FOR FLAG BYTE    *
*              5  RPHSBIT1 BIT(1),     /* 1ST SAVE FIELD              *
*              5  RPHSBIT2 BIT(1),     /* 2ND SAVE FIELD              *
*              5  RPHSBIT3 BIT(1),     /* 3RD SAVE FIELD              *
*              5  RPHSBIT4 BIT(1),     /* 4TH SAVE FIELD              *
*              5  RPHSBIT5 BIT(1),     /* 5TH SAVE FIELD              *
*              5  RPHSBIT6 BIT(1),     /* 6TH SAVE FIELD              *
*              5  RPHSBIT7 BIT(1),     /* 7TH SAVE FIELD              *
*              5  RPHSBIT8 BIT(1),     /* 8TH SAVE FIELD              *
*           4  RPHSHALF FIXED(15),     /* HALF WORD SAVE AREA         *
*         3  RPHSAVE2 FIXED(31),       /*                             *
*         3  RPHSAVE3 FIXED(31),       /*                             *
*         3  RPHSAVE4 FIXED(31),       /*                             *
*         3  RPHSAVE5 FIXED(31),       /*                             *
*         3  RPHSAVE6 FIXED(31),       /*                             *
*         3  RPHSAVE7 FIXED(31),       /*                             *
*         3  RPHSAVE8 FIXED(31),       /*                             *
*         3  RPHSAVE9 FIXED(31),       /*                             *
*         3  RPHSAV10 FIXED(31),       /*                             *
*         3  RPHSAV11 FIXED(31),       /*                             *
*         3  RPHSAV12 FIXED(31),       /*                             *
*         3  RPHSAV13 FIXED(31),       /*                             *
*         3  RPHSAV14 FIXED(31),       /*                             *
*         3  RPHSAV15 FIXED(31),       /*                             *
*         3  RPHSAV16 FIXED(31),       /*                             *
*       2  RPHNEXPO PTR(31);           /* ADDR.NEXT RPH TO BE POSTED  *
* DCL RPTYPE BIT(8) CONSTANT('01'X);   /* TYPE CODE FOR RPH           *
* DCL RPHWT0 BIT(32) CONSTANT('F7FFFFFF'X);   /* TURN RPHWT OFF */ 0006
* DCL RPHWT1 BIT(32) CONSTANT('08000000'X);   /* TURN RPHWT ON */  0007
* DCL RPHPT0 BIT(32) CONSTANT('FBFFFFFF'X);   /* TURN RPHPT OFF */ 0008
* DCL RPHPT1 BIT(32) CONSTANT('04000000'X);   /* TURN RPHPT ON */  0009
* DCL RPHPABQ1 BIT(24) CONSTANT('000000'X); /* TURN RPHPBQ GATE */ 0010
*                                                                  0011
*/* END OF ATBUILD                                                   */
*                                                                  0011
*     DCL                                                          0011
*       GPR01F FIXED(31) REG(01);                                  0011
*     DCL                                                          0012
*       GPR01P PTR(31) REG(01);                                    0012
*     DCL                                                          0013
*       GPR03F FIXED(31) REG(03);                                  0013
*     DCL                                                          0014
*       GPR03P PTR(31) REG(03);                                    0014
*     DCL                                                          0015
*       GPR04F FIXED(31) REG(04);                                  0015
*     DCL                                                          0016
*       GPR04P PTR(31) REG(04);                                    0016
*     DCL                                                          0017
*       GPR05F FIXED(31) REG(05);                                  0017
*     DCL                                                          0018
*       GPR05P PTR(31) REG(05);                                    0018
*     DCL                                                          0019
*       GPR06F FIXED(31) REG(06);                                  0019
*     DCL                                                          0020
*       GPR06P PTR(31) REG(06);                                    0020
*     DCL                                                          0021
*       GPR08F FIXED(31) REG(08);                                  0021
*     DCL                                                          0022
*       GPR08P PTR(31) REG(08);                                    0022
*     DCL                                                          0023
*       GPR13F FIXED(31) REG(13);                                  0023
*     DCL                                                          0024
*       GPR13P PTR(31) REG(13);                                    0024
*     DCL                                                          0025
*       GPR14F FIXED(31) REG(14);                                  0025
*     DCL                                                          0026
*       GPR14P PTR(31) REG(14);                                    0026
*     RFY                                                          0027
*      (GPR01P,                                                    0027
*       GPR03P,                                                    0027
*       GPR04P,                                                    0027
*       GPR05P,                                                    0027
*       GPR06P,                                                    0027
*       GPR08P,                                                    0027
*       GPR13P,                                                    0027
*       GPR14P) RSTD;                                              0027
*   END;                                                           0028
*                                                                  0028
*/*A-000000-999999                                           @DL30HHT*/
*/*                                                                  */
*/*      COMMUNICATION VECTOR TABLE                                  */
*/*                                                                  */
*/*      OS/VS1 RELEASE 5, OS/VS2 RELEASE 4, 09/30/75, LEVEL=13      */
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*      PL/S - DCL CVTPTR PTR                                       */
*/*      BAL  - DSECT=YES SHOULD BE SPECIFIED ON MACRO CALL EXCEPT   */
*/*             WHEN CALLED DURING SYSGEN TO CREATE CSECT.  CVT FOR  */
*/*             OS/VS2 IS MAPPED UNLESS SYS=AOS1 IS SPECIFIED.  THE  */
*/*             PREFIX IS NOT MAPPED UNLESS PREFIX=YES IS SPECIFIED. */
*/*             A USING ON CVTMAP OR DSECT NAME WILL ESTABLISH       */
*/*             ADDRESSABILITY FOR ALL SYMBOLS EXCEPT IN THE 2       */
*/*             EXTENSIONS.  TO ESTABLISH ADDRESSABILITY FOR THE     */
*/*             OS - OS/VS COMMON EXTENSION, YOU SHOULD CODE         */
*/*                                                                  */
*/*             L     REG,CVTEXT1                                    */
*/*             USING CVTXTNT1,REG                                   */
*/*                                                                  */
*/*             TO ESTABLISH ADDRESSABILITY FOR THE OS/VS1 - OS/VS2  */
*/*             COMMON EXTENSION, YOU SHOULD CODE                    */
*/*                                                                  */
*/*             L     REG,CVTEXT2                                    */
*/*             USING CVTXTNT2,REG                                   */
*/*                                                                  */
*/*             WHERE REG IN EITHER CASE IS ANY REGISTER OTHER       */
*/*             THAN ZERO.                                           */
*/*                                                                  */
*/*             WHEN LISTING IS SUPPRESSED, YOU CAN DETERMINE WHICH  */
*/*             DSECT A SYMBOL IS IN BY USING THE STATEMENT NUMBER   */
*/*             IN THE DEFN COLUMN IN THE CROSS REFERENCE LISTING.   */
*/*             FOR EXAMPLE, ANY SYMBOL DEFINED BETWEEN THE          */
*/*             STATEMENT NUMBERS FOR CVTXTNT1 AND CVTXTNT2 IS IN    */
*/*             THE OS - OS/VS COMMON EXTENSION.                     */
*/*                                                                  */
*/*  F.E.'S                                                          */
*/*      MICROFICHE LISTING - CVT                                    */
*/*                                                                  */
*/*  DEVELOPERS                                                      */
*/*      BAL LISTING  - SPECIFY LIST=YES ON MACRO CALL               */
*/*      PL/S LISTING - SPECIFY %IHALIST='YES' BEFORE INCLUDE        */
*/*                                                                  */
*/*      FOR INTEGRATION, A LISTING MUST NOT BE REQUESTED UNLESS     */
*/*      YOUR MODULE CREATES THE CSECT.                              */
*                                                                  0029
*                                                                  0029
*/*                    CVT PROPER                                    */
*                                                                  0029
*   DECLARE                                                        0029
*     1 CVTMAP BASED(CVTPTR) BDY(WORD),                            0029
*      2 CVT CHAR(0) BDY(WORD),     /* BEGINNING OF CVT MDC150       */
*      2 CVTTCBP PTR(31),           /* ADDRESS OF A DOUBLE WORD, THE
*                                      FIRST CONTAINING THE NEXT-TO-
*                                      BE-DISPATCHED TCB ADDRESS. THE
*                                      SECOND CONTAINING THE LAST  0029
*                                      (CURRENT) TCB ADDRESS. BOTH 0029
*                                      WORDS ARE IDENTICAL UNLESS THE
*                                      TASK GOES INTO A WAIT STATE.
*                                      WHEN IN A WAIT STATE, THE   0029
*                                      FIRST WORD IS SET TO ZERO   0029
*                                      UNTIL THE WAITING IS OVER AND
*                                      THEN BOTH WORDS ARE ONCE AGAIN
*                                      IDENTICAL. (OS/VS1) ADDRESS OF
*                                      4-WORD LIST OF ADDRESSES - THE
*                                      NEXT TCB, THE CURRENT TCB, THE
*                                      NEXT ASCB AND THE CURRENT   0029
*                                      ASCB, IN THAT ORDER (OS/VS2)
*                                      MDC026                        */
*      2 CVT0EF00 PTR(31),          /* ADDRESS OF ROUTINE TO SCHEDULE
*                                      ASYNCHRONOUS EXITS            */
*      2 CVTLINK PTR(31),           /* ADDRESS OF DCB FOR          0029
*                                      SYS1.LINKLIB DATA SET         */
*      2 CVTJOB PTR(31),            /* ADDRESS OF QUEUE MANAGER    0029
*                                      RESIDENT DATA AREA (QMRES)  0029
*                                      (OS/VS1) (MDC083)       XM4042*/
*      2 CVTBUF PTR(31),            /* ADDRESS OF THE BUFFER OF THE
*                                      RESIDENT CONSOLE INTERRUPT  0029
*                                      ROUTINE                       */
*      2 CVTXAPG PTR(31),           /* ADDRESS OF I/O SUPERVISOR   0029
*                                      APPENDAGE VECTOR TABLE        */
*      2 CVT0VL00 PTR(31),          /* ADDRESS OF ENTRY POINT OF THE
*                                      TASK SUPERVISOR'S ADDRESS   0029
*                                      VALIDITY CHECKING ROUTINE     */
*      2 CVTPCNVT PTR(31),          /* ADDRESS OF ENTRY POINT OF THE
*                                      ROUTINE WHICH CONVERTS A    0029
*                                      RELATIVE TRACK ADDRESS (TTR)
*                                      TO AN ABSOLUTE TRACK ADDRESS
*                                      (MBBCCHHR)                    */
*      2 CVTPRLTV PTR(31),          /* ADDRESS OF ENTRY POINT OF THE
*                                      ROUTINE WHICH CONVERTS AN   0029
*                                      ABSOLUTE TRACK ADDRESS      0029
*                                      (MBBCCHHR) TO A RELATIVE TRACK
*                                      ADDRESS (TTR)                 */
*      2 CVTILK1 PTR(31),           /* ADDRESS OF THE CHANNEL AND  0029
*                                      CONTROL UNIT PORTION OF THE 0029
*                                      UCB LOOKUP TABLE              */
*      2 CVTILK2 PTR(31),           /* ADDRESS OF THE UCB HALFWORD 0029
*                                      ADDRESS LIST PORTION OF THE 0029
*                                      UCB LOOKUP TABLE              */
*      2 CVTXTLER PTR(31),          /* ADDRESS OF ERROR RECOVERY   0029
*                                      PROCEDURE (ERP) LOADER      0029
*                                      (IECVERPL) ENTRY POINT      0029
*                                      IECXTLER (MDC349)     @Z40AQ9A*/
*      2 CVTSYSAD PTR(31),          /* ADDRESS OF THE SYSTEM       0029
*                                      RESIDENCE VOLUME ENTRY IN THE
*                                      UCB LOOKUP TABLE              */
*      2 CVTBTERM PTR(31),          /* ADDRESS OF ENTRY POINT OF THE
*                                      ABTERM ROUTINE                */
*      2 CVTDATE CHAR(4) BDY(WORD), /* CURRENT DATE IN PACKED DECIMAL*/
*      2 CVTMSLT PTR(31),           /* ADDRESS OF THE MASTER COMMON
*                                      AREA IN MASTER SCHEDULER    0029
*                                      RESIDENT DATA AREA. NOTE - USE
*                                      CVTMSER INSTEAD TO ADDRESS  0029
*                                      MASTER SCHEDULER RESIDENT DATA
*                                      AREA.                         */
*      2 CVTZDTAB PTR(31),          /* ADDRESS OF I/O DEVICE       0029
*                                      CHARACTERISTIC TABLE          */
*      2 CVTXITP PTR(31),           /* ADDRESS OF ERROR INTERPRETER
*                                      ROUTINE                       */
*      2 CVTDAR PTR(31),            /* SAME AS CVTDARA BELOW (OS/VS1)
*                                      MDC029                        */
*       3 CVTFLGS1 BIT(8),          /* FLAG BYTE (OS/VS1) MDC030     */
*        4 CVTDMPLK BIT(1),         /* SVC DUMP IS IN PROGRESS     0029
*                                      (OS/VS1) MDC030               */
*        4 CVTRSV01 BIT(1),         /* RESERVED                      */
*        4 CVTRSV02 BIT(1),         /* RESERVED                      */
*        4 CVTRSV03 BIT(1),         /* RESERVED                      */
*        4 CVTRSV04 BIT(1),         /* RESERVED                      */
*        4 CVTRSV05 BIT(1),         /* RESERVED                      */
*        4 CVTRSV06 BIT(1),         /* RESERVED                      */
*        4 CVTRSV07 BIT(1),         /* RESERVED                      */
*       3 CVTDARA PTR(24),          /* ADDRESS OF THE SYS1.DUMP I/O
*                                      CONTROL BLOCKS NEEDED BY    0029
*                                      ABEND'S DAMAGE ASSESSMENT   0029
*                                      ROUTINE (DAR) (OS/VS1) MDC029 */
*      2 CVT0FN00 PTR(31),          /* ADDRESS OF ENTRY POINT OF THE
*                                      FINCH ROUTINE (OS/VS1)        */
*      2 CVTEXIT CHAR(2) BDY(WORD), /* AN SVC 3 INSTRUCTION. EXIT TO
*                                      DISPATCHER.                   */
*      2 CVTBRET CHAR(2) BDY(WORD,3),/* A BCR 15,14 INSTRUCTION.   0029
*                                      RETURN TO CALLER (USED BY DATA
*                                      MANAGEMENT ROUTINES)          */
*      2 CVTSVDCB PTR(31),          /* ADDRESS OF THE DCB FOR THE  0029
*                                      SYS1.SVCLIB DATA SET          */
*      2 CVTTPC PTR(31),            /* ADDRESS OF THE TIMER        0029
*                                      SUPERVISOR WORK AREA          */
*      2 CVTPBLDL PTR(31),          /* ADDRESS OF BRANCH AND LINK  0029
*                                      (BALR) ENTRY POINT OF THE BLDL
*                                      ROUTINE (OS/VS1) MDC103       */
*      2 CVTSJQ PTR(31),            /* ADDRESS OF THE SELECTED JOB 0029
*                                      QUEUE (OS/VS1)                */
*      2 CVTCUCB PTR(31),           /* ADDRESS OF THE TABLE THAT   0029
*                                      CONTAINS THE CURRENT CONSOLE
*                                      UCB ADDRESSES                 */
*      2 CVTQTE00 PTR(31),          /* ADDRESS OF THE TIMER ENQUEUE
*                                      ROUTINE FOR INTERVAL TIMER    */
*      2 CVTQTD00 PTR(31),          /* ADDRESS OF THE TIMER DEQUEUE
*                                      ROUTINE FOR INTERVAL TIMER    */
*      2 CVTSTB PTR(31),            /* ADDRESS OF THE I/O DEVICE   0029
*                                      STATISTICS TABLE              */
*      2 CVTDCB CHAR(1) BDY(WORD),  /* OPERATING SYSTEM CONFIGURATION*/
*        4 CVTRSV08 BIT(1),         /* RESERVED                      */
*        4 CVT1SSS BIT(1),          /* PCP                           */
*        4 CVT2SPS BIT(1),          /* MFT, OS/VS1                   */
*        4 CVT4MS1 BIT(1),          /* MVT, OS/VS2                   */
*        4 CVTRSV09 BIT(1),         /* RESERVED                      */
*        4 CVT4MPS BIT(1),          /* MODEL 65 MULTIPROCESSING      */
*        4 CVT6DAT BIT(1),          /* DYNAMIC ADDRESS TRANSLATION BY
*                                      CPU (OS/VS1, OS/VS2)          */
*        4 CVTMVS2 BIT(1),          /* MULTIPLE MEMORY OPTION OF   0029
*                                      OS/VS2 IS PRESENT MDC131      */
*      2 CVTDCBA PTR(24),           /* ADDRESS OF THE DCB FOR THE  0029
*                                      SYS1.LOGREC (OUTBOARD       0029
*                                      RECORDER) DATA SET FOR SYSTEM
*                                      ENVIRONMENT RECORDING (SER)   */
*      2 CVTIOQET PTR(31),          /* ADDRESS OF IOS REQUEST ELEMENT
*                                      TABLE (OS/VS1) MDC020         */
*      2 CVTIXAVL PTR(31),          /* ADDRESS OF THE I/O          0029
*                                      SUPERVISOR'S FREELIST POINTER
*                                      WHICH CONTAINS THE ADDRESS OF
*                                      THE NEXT REQUEST ELEMENT    0029
*                                      (OS/VS1) ADDRESS OF THE I/O 0029
*                                      SUPERVISOR'S COMMUNICATION  0029
*                                      AREA (IOCOM) (OS/VS2)         */
*      2 CVTNUCB PTR(31),           /* LOWEST ADDRESS NOT IN THE   0029
*                                      NUCLEUS (ON PAGE BOUNDARY FOR
*                                      OS/VS1) (ON SEGMENT BOUNDARY
*                                      FOR OS/VS2) (MDC318)  @Z30AQ9A*/
*      2 CVTFBOSV PTR(31),          /* ADDRESS OF PROGRAM FETCH    0029
*                                      ROUTINE                       */
*      2 CVT0DS PTR(31),            /* ADDRESS OF ENTRY POINT OF THE
*                                      DISPATCHER                    */
*      2 CVTILCH PTR(31),           /* ADDRESS OF THE LOGICAL CHANNEL
*                                      WORD TABLE                    */
*      2 CVTIERLC PTR(31),          /* ADDRESS OF THE ASYNCHRONOUS 0029
*                                      EXIT QUEUE (OS/VS1) (MDC218)
*                                                              YM4043*/
*       3 CVTRV516 PTR(31),         /* ** CVTIERLC FIELD UNUSED IN 0029
*                                      MVS ** (MDC218)         YM4043*/
*      2 CVTMSER PTR(31),           /* ADDRESS OF DATA AREA OF MASTER
*                                      SCHEDULER RESIDENT DATA AREA  */
*      2 CVT0PT01 PTR(31),          /* ADDRESS OF BRANCH ENTRY POINT
*                                      OF POST ROUTINE               */
*      2 CVTRSV11 PTR(31),          /* ** CVTTRMTB FIELD UNUSED IN 0029
*                                      OS/VS **                      */
*      2 CVTHEAD PTR(31),           /* ADDRESS OF THE HIGHEST      0029
*                                      PRIORITY TCB IN THE READY   0029
*                                      QUEUE (OS/VS1) MDC025         */
*      2 CVTMZ00 PTR(31),           /* HIGHEST ADDRESS IN VIRTUAL  0029
*                                      STORAGE FOR THE MACHINE       */
*      2 CVT1EF00 PTR(31),          /* ADDRESS OF ROUTINE WHICH    0029
*                                      CREATES IRB'S FOR EXITS       */
*      2 CVTQOCR PTR(31),           /* GRAPHICS INTERFACE TASK (GFX)
*                                      FIELD. ADDRESS OF SEVENTH WORD
*                                      OF GFX PARAMETER LIST, IF GFX
*                                      IS ACTIVE. ZERO IF GFX IS NOT
*                                      ACTIVE.                       */
*      2 CVTQMWR PTR(31),           /* ADDRESS OF QUEUE MANAGER'S  0029
*                                      SYSTEM OUTPUT COMMUNICATIONS-
*                                      DATA-AREA (CDA), WHICH IS   0029
*                                      STORED ON AN EXTERNAL DEVICE  */
*      2 CVTSNCTR FIXED(15),        /* SERIAL NUMBER COUNTER FOR   0029
*                                      ASSIGNING SERIAL NUMBERS TO 0029
*                                      NON-SPECIFIC, UNLABELED     0029
*                                      MAGNETIC TAPE VOLUMES         */
*      2 CVTOPTA CHAR(1),           /* OPTION INDICATORS             */
*       3 CVTCCH BIT(1),            /* CHANNEL CHECK HANDLER (CCH) 0029
*                                      OPTION PRESENT - RECOVERY   0029
*                                      MANAGEMENT SUPPORT (RMS)    0029
*                                                              XM4686*/
*       3 CVTAPR BIT(1),            /* ALTERNATE PATH RETRY (APR)  0029
*                                      OPTION PRESENT - RECOVERY   0029
*                                      MANAGEMENT SUPPORT (RMS)      */
*       3 CVTDDR BIT(1),            /* DYNAMIC DEVICE RECONFIGURATION
*                                      (DDR) OPTION PRESENT -      0029
*                                      RECOVERY MANAGEMENT SUPPORT 0029
*                                      (RMS) (OS/VS1) DDR          0029
*                                      SYSTEM-INITIATED SWAP ACTIVE
*                                      (OS/VS2) MDC126               */
*       3 CVTNIP BIT(1),            /* NIP IS EXECUTING              */
*       3 CVTRSV12 BIT(1),          /* RESERVED                      */
*       3 CVTRSV13 BIT(1),          /* RESERVED                      */
*       3 CVTASCII BIT(1),          /* ASCII TAPE PROCESSING IS    0029
*                                      GENERATED IN THIS SYSTEM      */
*       3 CVTXPFP BIT(1),           /* CPU HAS EXTENDED PRECISION  0029
*                                      FLOATING POINT FEATURE        */
*      2 CVTOPTB CHAR(1),           /* MISCELLANEOUS FLAGS           */
*       3 CVTPROT BIT(1),           /* CPU HAS STORE PROTECTION    0029
*                                      FEATURE (OS/VS1)              */
*       3 CVTCTIMS BIT(1),          /* IF ON, HARDWARE HAS THE CLOCK
*                                      COMPARATOR AND CPU TIMER    0029
*                                      FEATURE INSTALLED, AND OS/VS1
*                                      SYSGEN HAS SPECIFIED THIS   0029
*                                      FEATURE (OS/VS1) MDC127       */
*       3 CVTTOD BIT(1),            /* CPU HAS TIME-OF-DAY CLOCK   0029
*                                      FEATURE                       */
*       3 CVTNLOG BIT(1),           /* SYS1.LOGREC IS UNAVAILABLE FOR
*                                      ERROR RECORDING. ALWAYS SET TO
*                                      ZERO FOR OS/VS1 ICB382        */
*       3 CVTAPTHR BIT(1),          /* NIP SETS THIS BIT TO 1 WHEN 0029
*                                      DEVICE TESTING IS COMPLETE. IF
*                                      1, I/O SUPERVISOR USES AN   0029
*                                      ALTERNATE PATH TO A DEVICE  0029
*                                      WHEN A CONDITION CODE OF 3  0029
*                                      EXISTS. THIS BIT IS RESET BY
*                                      NIP TO 0 AFTER THE LINK PACK
*                                      AREA IS INITIALIZED.    YM2670*/
*       3 CVTFP BIT(1),             /* CPU HAS FETCH PROTECTION    0029
*                                      FEATURE (OS/VS1) ICB427       */
*       3 CVTRSV16 BIT(1),          /* RESERVED                      */
*       3 CVTRSV17 BIT(1),          /* RESERVED                      */
*      2 CVTQCDSR PTR(31),          /* CDE SEARCH ROUTINE ADDRESS  0029
*                                      (OS/VS2) ADDRESS OF THE     0029
*                                      ROUTINE THAT SEARCHES THE   0029
*                                      REENTERABLE LOAD MODULE QUEUE
*                                      (OS/VS1)                      */
*      2 CVTQLPAQ PTR(31),          /* ADDRESS OF POINTER TO MOST  0029
*                                      RECENT ENTRY ON LINK PACK AREA
*                                      CDE QUEUE (OS/VS2) ADDRESS OF
*                                      THE REENTERABLE LOAD MODULE 0029
*                                      QUEUE (OS/VS1)                */
*      2 CVTRSV18 PTR(31),          /* ** CVTMPCVT FIELD UNUSED IN 0029
*                                      OS/VS **                      */
*      2 CVTSMCA PTR(31),           /* ADDRESS OF THE SYSTEM       0029
*                                      MANAGEMENT CONTROL AREA (SMCA)
*                                      IF THE SYSTEM MANAGEMENT    0029
*                                      FACILITIES (SMF) OPTION IS  0029
*                                      PRESENT IN THE SYSTEM.      0029
*                                      OTHERWISE, ZERO.              */
*      2 CVTABEND PTR(31),          /* ADDRESS OF SECONDARY CVT FOR
*                                      ABEND IN EOT (OS/VS2) USED BY
*                                      AN INTERNAL ABEND TRACE     0029
*                                      ROUTINE FOR DEBUG PURPOSES  0029
*                                      (OS/VS1)                XM0615*/
*      2 CVTUSER PTR(31),           /* A WORD AVAILABLE TO THE USER  */
*      2 CVTMDLDS PTR(31),          /* RESERVED FOR MODEL-DEPENDENT
*                                      SUPPORT                       */
*      2 CVTQABST CHAR(2) BDY(WORD),/* AN SVC 13 (ABEND) INSTRUCTION
*                                      (OS/VS2) RESERVED (OS/VS1)    */
*      2 CVTLNKSC CHAR(2) BDY(WORD,3),/* AN SVC 6 (LINK) INSTRUCTION
*                                      ICB369                        */
*      2 CVTTSCE PTR(31),           /* ADDRESS OF THE FIRST TIME   0029
*                                      SLICE CONTROL ELEMENT (TSCE)  */
*      2 CVTPATCH PTR(31),          /* ADDRESS OF A 200-BYTE FE PATCH
*                                      AREA                          */
*      2 CVTRMS PTR(31),            /* RECOVERY MANAGEMENT SUPPORT 0029
*                                      (RMS) COMMUNICATIONS VECTOR.
*                                      ADDRESS OF A MACHINE STATUS 0029
*                                      BLOCK.                        */
*      2 CVTRV515 PTR(31),          /* ** CVTTSCVT FIELD UNUSED IN 0029
*                                      MVS ** (MDC037)       @Z40AQ9A*/
*      2 CVT0SCR1 PTR(31),          /* ADDRESS OF THE SECTOR       0029
*                                      CALCULATION ROUTINE FOR     0029
*                                      ROTATIONAL POSITION SENSING 0029
*                                      (RPS)                         */
*      2 CVTGTF PTR(31),            /* GENERALIZED TRACE FACILITY  0029
*                                      (GTF) CONTROL WORD ICB312     */
*       3 CVTGTFST BIT(8),          /* GTF FLAG BYTE ICB312          */
*        4 CVTGTFS BIT(2),          /* GTF STATUS (OS/VS1) MDC088    */
*         5 CVTGTFAV BIT(1),        /* IF ZERO, GTF NOT ACTIVE. IF 0029
*                                      ONE, GTF ACTIVE. (OS/VS2)   0029
*                                      MDC098                        */
*         5 CVTRV315 BIT(1),        /* RESERVED (OS/VS2)             */
*        4 CVTSTATE BIT(1),         /* GTF IS IN CONTROL PROCESSING A
*                                      HOOK (OS/VS1) MDC093          */
*         5 CVTRV316 BIT(1),        /* RESERVED (OS/VS2)             */
*        4 CVTTMODE BIT(1),         /* IF 0, MODE=INT SPECIFIED. IF
*                                      1, MODE=EXT SPECIFIED WHICH 0029
*                                      MEANS TRACE DATA IS TO BE   0029
*                                      WRITTEN TO AN EXTERNAL DEVICE.
*                                      (OS/VS1) MDC094               */
*         5 CVTRV317 BIT(1),        /* RESERVED (OS/VS2)             */
*        4 CVTFORM BIT(1),          /* TRACE DATA IS TO BE FORMATTED
*                                      ON ABNORMAL TERMINATION     0029
*                                      (OS/VS1) MDC095               */
*         5 CVTRV318 BIT(1),        /* RESERVED (OS/VS2)             */
*        4 CVTUSR BIT(1),           /* TRACE=USR SPECIFIED.        0029
*                                      USER-REQUESTED TRACE DATA IS
*                                      TO BE INCLUDED IN THE TRACE 0029
*                                      DATA SET. (MDC317)    @Z30AP9A*/
*        4 CVTRNIO BIT(1),          /* GTF IS ACTIVE AND TRACING RNIO
*                                      EVENTS MDC187                 */
*        4 CVTRSV27 BIT(1),         /* RESERVED                      */
*       3 CVTGTFA PTR(24),          /* ADDRESS OF THE MONITOR CALL 0029
*                                      VECTOR TABLE (OS/VS1) ADDRESS
*                                      OF MAIN MONITOR CALL ROUTING
*                                      TABLE, MCHEAD (OS/VS2) MDC156 */
*      2 CVTAQAVT PTR(31),          /* ADDRESS OF THE FIRST WORD OF
*                                      THE TCAM DISPATCHER WHICH   0029
*                                      CONTAINS THE ADDRESS OF THE 0029
*                                      ADDRESS VECTOR TABLE (AVT). IF
*                                      ZERO, TCAM IS NOT STARTED     */
*       3 CVTTCMFG CHAR(1),         /* TCAM FLAGS                    */
*        4 CVTTCRDY BIT(1),         /* TCAM IS READY TO ACCEPT USERS */
*        4 CVTRSV28 BIT(1),         /* RESERVED                      */
*        4 CVTRSV29 BIT(1),         /* RESERVED                      */
*        4 CVTRSV30 BIT(1),         /* RESERVED                      */
*        4 CVTRSV31 BIT(1),         /* RESERVED                      */
*        4 CVTRSV32 BIT(1),         /* RESERVED                      */
*        4 CVTRSV33 BIT(1),         /* RESERVED                      */
*        4 CVTRSV34 BIT(1),         /* RESERVED                      */
*       3 CVTAQAVB PTR(24),         /* SAME AS CVTAQAVT ABOVE        */
*      2 CVTVOLM2 PTR(31),          /* ADDRESS OF TABLE FOR POWER  0029
*                                      WARNING FEATURE (PWF) (OS/VS2)
*                                      (MDC308)              @Z30AQ9A*/
*       3 CVTTATA PTR(31),          /* ADDRESS OF THE FIRST ENTRY IN
*                                      THE TCB ADDRESS TABLE. THE  0029
*                                      FIRST ENTRY IS FOR PARTITION
*                                      0. (OS/VS1)                   */
*        4 CVTTSKS PTR(8),          /* MAXIMUM ALLOWABLE NUMBER OF 0029
*                                      ENTRIES IN THE TCB ADDRESS  0029
*                                      TABLE (OS/VS1)                */
*         5 CVTVOLF2 BIT(8),        /* PWF FLAG BYTE. THIS BYTE IS 0029
*                                      OVERLAID BY CVTVOLM2 AFTER PWF
*                                      INITIALIZATION. (OS/VS2)    0029
*                                      (MDC309)              @Z30AQ9A*/
*          6 CVTVOLI2 BIT(1),       /* PWF INITIALIZATION HAS NOT  0029
*                                      OCCURRED (OS/VS2) (MDC310)  0029
*                                                            @Z30AQ9A*/
*        4 CVTTAT PTR(24),          /* SAME AS CVTTATA ABOVE         */
*         5 CVTVOLT2 PTR(24),       /* PWF RECHECK TIME DELAY. THIS
*                                      VALUE IS OVERLAID BY CVTVOLM2
*                                      AFTER PWF INITIALIZATION.   0029
*                                      (OS/VS2) (MDC311)     @Z30AQ9A*/
*      2 CVTATER PTR(31),           /* ADDRESS OF THE SYSTEM ERROR 0029
*                                      TCB. THE PURGE ROUTINE USES 0029
*                                      THIS FIELD TO ACCESS THE SIRB.
*                                      (OS/VS1) ICB346               */
*       3 CVTSYST PTR(8),           /* NUMBER OF ENTRIES IN THE TCB
*                                      ADDRESS TABLE FOR TCB'S     0029
*                                      CREATED DURING SYSTEM       0029
*                                      GENERATION (OS/VS1)           */
*       3 CVTATERA PTR(24),         /* SAME AS CVTATER ABOVE         */
*      2 CVTEXT1 PTR(31),           /* ADDRESS OF OS - OS/VS COMMON
*                                      EXTENSION ICB421              */
*      2 CVTCBSP PTR(31),           /* ADDRESS OF ACCESS METHOD    0029
*                                      CONTROL BLOCK STRUCTURE MDC195*/
*      2 CVTPURG PTR(31),           /* ADDRESS OF SUBSYSTEM PURGE  0029
*                                      ROUTINE ICB330                */
*       3 CVTRSV35 PTR(8),          /* RESERVED ICB330               */
*       3 CVTPURGA PTR(24),         /* ADDRESS OF SUBSYSTEM PURGE  0029
*                                      ROUTINE ICB330                */
*      2 CVTAMFF CHAR(4),           /* RESERVED FOR ACCESS METHOD  0029
*                                      FLAGS ICB436                  */
*      2 CVTQMSG PTR(31),           /* ADDRESS OF INFORMATION TO BE
*                                      PRINTED BY ABEND ICB307       */
*       3 CVTRSV36 PTR(8),          /* RESERVED ICB307               */
*       3 CVTQMSGA PTR(24),         /* ADDRESS OF INFORMATION TO BE
*                                      PRINTED BY ABEND ICB307       */
*      2 CVTDMSR PTR(31),           /* SAME AS CVTDMSRA BELOW ICB346 */
*       3 CVTRSV37 PTR(8),          /* RESERVED (OS/VS1) ICB346      */
*        4 CVTDMSRF BIT(8),         /* OPEN/CLOSE/EOV FLAG BYTE.   0029
*                                      SETTING BOTH BIT 0 AND BIT 1
*                                      ON WILL CAUSE BOTH KINDS OF 0029
*                                      DUMPS TO BE TAKEN. THESE BITS
*                                      ARE USED DURING TESTING AND 0029
*                                      DEBUGGING WHEN OTHER DEBUG  0029
*                                      METHODS ARE INEFFECTIVE.    0029
*                                      (OS/VS2) (MDC350)     @Z40AQ9A*/
*         5 CVTSDUMP BIT(1),        /* SET BY COREZAP. WILL CAUSE AN
*                                      SDUMP TO BE TAKEN AND IEC999I
*                                      MESSAGE ISSUED FOR EVERY ABEND
*                                      ISSUED WITHIN AN            0029
*                                      OPEN/CLOSE/EOV OR DADSM     0029
*                                      FUNCTION. (OS/VS2) (MDC351) 0029
*                                                            @Z40AQ9A*/
*         5 CVTUDUMP BIT(1),        /* SET BY COREZAP. WILL CAUSE AN
*                                      ABEND DUMP TO BE TAKEN FOR  0029
*                                      EVERY ABEND ISSUED WITHIN AN
*                                      OPEN/CLOSE/EOV OR DADSM     0029
*                                      FUNCTION. (OS/VS2) (MDC352) 0029
*                                                            @Z40AQ9A*/
*         5 CVTRV629 BIT(1),        /* RESERVED (OS/VS2)     @Z40AQ9A*/
*         5 CVTRV630 BIT(1),        /* RESERVED (OS/VS2)     @Z40AQ9A*/
*         5 CVTRV631 BIT(1),        /* RESERVED (OS/VS2)     @Z40AQ9A*/
*         5 CVTRV632 BIT(1),        /* RESERVED (OS/VS2)     @Z40AQ9A*/
*         5 CVTRV633 BIT(1),        /* RESERVED (OS/VS2)     @Z40AQ9A*/
*         5 CVTRV634 BIT(1),        /* RESERVED (OS/VS2)     @Z40AQ9A*/
*       3 CVTDMSRA PTR(24),         /* ADDRESS OF THE OPEN/CLOSE/EOV
*                                      SUPERVISORY ROUTINE IN THE  0029
*                                      NUCLEUS. THIS ROUTINE HANDLES
*                                      THE ROUTING OF CONTROL AMONG
*                                      THE I/O SUPPORT ROUTINES.   0029
*                                      ICB346                        */
*      2 CVTRSV38 PTR(31),          /* RESERVED                      */
*      2 CVTRSV39 PTR(31),          /* RESERVED                      */
*/*            OS/VS1 - OS/VS2 COMMON SECTION                        */
*                                                                  0029
*      2 CVTREAL PTR(31),           /* ADDRESS OF THE VIRTUAL STORAGE
*                                      BYTE FOLLOWING THE HIGHEST  0029
*                                      VIRTUAL=REAL STORAGE ADDRESS
*                                      ICB368                        */
*      2 CVTPTRV PTR(31),           /* ADDRESS OF PAGING SUPERVISOR
*                                      GENERAL ROUTINE TO TRANSLATE
*                                      REAL ADDRESSES TO VIRTUAL   0029
*                                      ADDRESSES                     */
*      2 CVTMODE PTR(31),           /* ADDRESS OF ROUTINE TO CHANGE
*                                      SYSTEM MASK (OS/VS1) (MDC217)
*                                                              YM4244*/
*      2 CVTJESCT PTR(31),          /* ADDRESS OF JOB ENTRY SUBSYSTEM
*                                      (JES) CONTROL TABLE           */
*      2 CVTJEPS PTR(31),           /* ADDRESS OF JOB ENTRY        0029
*                                      PERIPHERAL SERVICES (JEPS)  0029
*                                      MONITOR TCB (OS/VS1)    YM2702*/
*      2 CVTTZ FIXED(31),           /* DIFFERENCE BETWEEN LOCAL TIME
*                                      AND GREENWICH MEAN TIME IN  0029
*                                      BINARY UNITS OF 1.048576    0029
*                                      SECONDS                       */
*      2 CVTMCHPR PTR(31),          /* ADDRESS OF MACHINE CHECK    0029
*                                      PARAMETER LIST                */
*      2 CVTEORM PTR(31),           /* HIGHEST REAL ADDRESS IN MAIN
*                                      STORAGE (OS/VS1) POTENTIAL  0029
*                                      REAL HIGH STORAGE ADDRESS   0029
*                                      (OS/VS2) MDC087               */
*      2 CVTERPV PTR(31),           /* ADDRESS OF I/O SUPERVISOR   0029
*                                      SUBROUTINE TO CONVERT CCW DATA
*                                      ADDRESSES TO VIRTUAL ADDRESSES
*                                      (OS/VS1) (MDC219)       YM4043*/
*       3 CVTRV517 PTR(31),         /* ** CVTERPV FIELD UNUSED IN MVS
*                                      ** (MDC219)             YM4043*/
*      2 CVTINTLA PTR(31),          /* ADDRESS OF A TIME INTERVAL. 0029
*                                      I/O LOAD BALANCING COUNTS THE
*                                      NUMBER OF EXCP'S ISSUED DURING
*                                      THIS TIME INTERVAL AND USES 0029
*                                      THE VALUE IN DETERMINING THE
*                                      AMOUNT OF I/O ACTIVITY IN THE
*                                      SYSTEM. (OS/VS1) (MDC220)   0029
*                                                              YM4043*/
*       3 CVTRV518 PTR(31),         /* ** CVTINTLA FIELD UNUSED IN 0029
*                                      MVS ** (MDC220)         YM4043*/
*      2 CVTAPF PTR(31),            /* SAME AS CVTAPFA BELOW ICB360  */
*       3 CVTRSV40 PTR(8),          /* RESERVED ICB360               */
*       3 CVTAPFA PTR(24),          /* ADDRESS OF BRANCH ENTRY POINT
*                                      IN AUTHORIZED PROGRAM FACILITY
*                                      (APF) ROUTINE                 */
*      2 CVTEXT2 PTR(31),           /* ADDRESS OF OS/VS1 - OS/VS2  0029
*                                      COMMON EXTENSION ICB330       */
*       3 CVTRSV41 PTR(8),          /* RESERVED ICB330               */
*       3 CVTEXT2A PTR(24),         /* SAME AS CVTEXT2 ABOVE ICB330  */
*      2 CVTHJES PTR(31),           /* SAME AS CVTHJESA BELOW ICB454 */
*       3 CVTRSV42 PTR(8),          /* RESERVED ICB454               */
*       3 CVTHJESA PTR(24),         /* ADDRESS OF OPTIONAL JOB ENTRY
*                                      SUBSYSTEM (JES) COMMUNICATION
*                                      VECTOR TABLE ICB454           */
*      2 CVTRSV43 FIXED(15),        /* RESERVED                      */
*      2 CVTRSV44 FIXED(15),        /* RESERVED                      */
*      2 CVTRSV45 PTR(31),          /* RESERVED                      */
*      2 CVTRSV46 PTR(31),          /* RESERVED                      */
*/*            OS/VS1 OVERLAY                                        */
*                                                                  0029
*      2 CVTPGSIA PTR(31),          /* ADDRESS OF PAGING SUPERVISOR
*                                      INFORMATION AREA              */
*      2 CVTPCVT PTR(31),           /* ADDRESS OF PAGED CVT EXTENSION*/
*      2 CVTA1F1 CHAR(1),           /* PAGE FAULT FLAGS              */
*       3 CVTPFSW BIT(1),           /* ONLY THE PAGING TASK MAY BE 0029
*                                      DISPATCHED                    */
*       3 CVTSRSW BIT(1),           /* NO TASK EXCEPT THE PAGING TASK
*                                      MAY EXECUTE DISABLED CODE     */
*       3 CVTRSV47 BIT(1),          /* RESERVED                      */
*       3 CVTRSV48 BIT(1),          /* RESERVED                      */
*       3 CVTRSV49 BIT(1),          /* RESERVED                      */
*       3 CVTRSV50 BIT(1),          /* RESERVED                      */
*       3 CVTRSV51 BIT(1),          /* RESERVED                      */
*       3 CVTRSV52 BIT(1),          /* RESERVED                      */
*      2 CVTSYSK CHAR(1),           /* SYSTEM LOCK. IF NOT ZERO, ONLY
*                                      THE PAGING TASK MAY BE      0029
*                                      DISPATCHED                    */
*       3 CVTRSV53 BIT(1),          /* RESERVED                      */
*       3 CVTRSV54 BIT(1),          /* RESERVED                      */
*       3 CVTRSV55 BIT(1),          /* RESERVED                      */
*       3 CVTRSV56 BIT(1),          /* RESERVED                      */
*       3 CVTSLKR BIT(1),           /* MACHINE CHECK HANDLING IS IN
*                                      PROGRESS ICB320               */
*       3 CVTSLKQ BIT(1),           /* SYSTEM QUEUE AREA (SQA) HAS 0029
*                                      BEEN EXHAUSTED                */
*       3 CVTSLKP BIT(1),           /* LAST PAGING CONTROL BLOCK   0029
*                                      (PCB) HAS BEEN USED           */
*       3 CVTSLKO BIT(1),           /* A ROUTINE RUNNING DISABLED HAS
*                                      PRODUCED A PAGE FAULT         */
*      2 CVTSULK FIXED(15),         /* SUPERVISOR LOCK. NUMBER OF  0029
*                                      TASKS ATTEMPTING TO EXECUTE 0029
*                                      DISABLED ROUTINES. IF NOT   0029
*                                      ZERO, ONLY ENABLED TASKS MAY
*                                      RUN.                          */
*      2 CVTSMF PTR(31),            /* ADDRESS OF SYSTEM MANAGEMENT
*                                      FACILITIES (SMF) TCB ICB395   */
*      2 CVTPNWFR PTR(31),          /* ADDRESS OF ROUTINE WHICH FREES
*                                      THE 'EMERGENCY' WORK AREA   0029
*                                      (ICB413)                XM2452*/
*      2 CVTDDCE PTR(31),           /* ADDRESS OF DYNAMIC DISPATCHING
*                                      CONTROL ELEMENT ICB466        */
*      2 CVTRSV57 FIXED(15),        /* RESERVED                      */
*      2 CVTRSV58 FIXED(15),        /* RESERVED                      */
*      2 CVTSTOA FIXED(31),         /* SAVE AREA FOR THE REAL STORAGE
*                                      ADDRESS OF THE SEGMENT TABLE
*                                      ORIGIN ICB496                 */
*      2 CVTVOLM1 PTR(31),          /* ADDRESS OF TABLE FOR POWER  0029
*                                      WARNING FEATURE (PWF) (MDC312)
*                                                            @X04AQ9A*/
*       3 CVTVOLF1 BIT(8),          /* PWF FLAG BYTE. THIS BYTE IS 0029
*                                      OVERLAID BY CVTVOLM1 AFTER PWF
*                                      INITIALIZATION. (MDC313)    0029
*                                                            @X04AQ9A*/
*        4 CVTVOLI1 BIT(1),         /* PWF INITIALIZATION HAS NOT  0029
*                                      OCCURRED (MDC314)     @X04AQ9A*/
*       3 CVTVOLT1 PTR(24),         /* PWF RECHECK TIME DELAY. THIS
*                                      VALUE IS OVERLAID BY CVTVOLM1
*                                      AFTER PWF INITIALIZATION.   0029
*                                      (MDC315)              @X04AQ9A*/
*      2 CVTRSV61 PTR(31),          /* RESERVED                      */
*      2 CVTATMCT PTR(31),          /* POINTER TO VTAM CONTROL TABLE
*                                      MDC082                        */
*       3 CVTATMST CHAR(1),         /* VTAM START STATUS MDC135      */
*       3 CVTATMCA PTR(24),         /* POINTER TO VTAM CONTROL TABLE
*                                      MDC138                        */
*      2 CVTAUTH PTR(31),           /* POINTER TO AUTHORIZED LIBRARY
*                                      TABLE MDC188                  */
*      2 CVTACTAP PTR(31),          /* ADDRESS OF BRANCH ENTRY TO  0029
*                                      VTAM'S SVC ROUTINE ISTAPC42 0029
*                                      (MDC216)              @X31BH9A*/
*      2 CVTRV485 PTR(31),          /* RESERVED MDC106               */
*      2 CVTRV486 PTR(31),          /* RESERVED MDC106               */
*      2 CVTRV487 PTR(31),          /* RESERVED MDC106               */
*      2 CVTRV488 PTR(31);          /* RESERVED MDC106               */
*/*            OS/VS2 OVERLAY                                        */
*                                                                  0030
*   DECLARE                                                        0030
*     1 CVTS01 DEF(CVTPGSIA) BDY(WORD),                            0030
*      2 CVTGETL PTR(31),           /* ADDRESS OF IKJGETL, TSO GET 0030
*                                      LINE ROUTINE (MDC206)   YM2225*/
*      2 CVTLPDSR PTR(31),          /* ADDRESS OF LINK PACK AREA   0030
*                                      (LPA) DIRECTORY SEARCH ROUTINE*/
*      2 CVTPVTP PTR(31),           /* ADDRESS OF PAGE VECTOR TABLE  */
*      2 CVTLPDIA PTR(31),          /* ADDRESS OF LINK PACK AREA   0030
*                                      (LPA) DIRECTORY (ON PAGE    0030
*                                      BOUNDARY)                     */
*       3 CVTDIRST CHAR(1),         /* FLAG BYTE                     */
*        4 CVTDICOM BIT(1),         /* LPA DIRECTORY HAS BEEN      0030
*                                      INITIALIZED BY NIP            */
*        4 CVTRSV63 BIT(1),         /* RESERVED                      */
*        4 CVTRSV64 BIT(1),         /* RESERVED                      */
*        4 CVTRSV65 BIT(1),         /* RESERVED                      */
*        4 CVTRSV66 BIT(1),         /* RESERVED                      */
*        4 CVTRSV67 BIT(1),         /* RESERVED                      */
*        4 CVTRSV68 BIT(1),         /* RESERVED                      */
*        4 CVTRSV69 BIT(1),         /* RESERVED                      */
*       3 CVTLPDIR PTR(24),         /* ADDRESS OF LPA DIRECTORY. ON
*                                      PAGE BOUNDARY                 */
*      2 CVTRV320 PTR(31),          /* ** CVTPAGE1 FIELD UNUSED IN 0030
*                                      MVS ** (MDC112)       @Z40AQ9A*/
*      2 CVTRV321 PTR(31),          /* ** CVTPGSUP FIELD UNUSED IN 0030
*                                      MVS ** (MDC113)       @Z40AQ9A*/
*      2 CVTSLIDA CHAR(4) BDY(WORD),/* IDENTITY OF TCB CAUSING     0030
*                                      SUPERVISOR LOCK BYTE (CVTSYLK)
*                                      TO BE SET OR IDENTITY OF TCB
*                                      THAT SECOND EXIT PROCESSING IS
*                                      FOR WHEN CVTSEIC=1            */
*       3 CVTSYLK CHAR(1),          /* SUPERVISOR LOCK. ONLY ENABLED
*                                      TASKS MAY BE DISPATCHED       */
*       3 CVTSLID CHAR(3),          /* SAME AS CVTSLIDA ABOVE        */
*      2 CVTRV322 PTR(31),          /* RESERVED FOR FUTURE USE     0030
*                                      (MDC343)              @Z40AQ9A*/
*      2 CVTRV328 PTR(31),          /* ** CVTSEG AND CVTSEGA FIELDS
*                                      UNUSED IN MVS ** (MDC139)   0030
*                                                            @Z40AQ9A*/
*      2 CVTRV329 PTR(31),          /* ** CVTSEGB FIELD UNUSED IN MVS
*                                      ** (MDC141)           @Z40AQ9A*/
*      2 CVTRV330 PTR(31),          /* ** CVTSEGC AND SUBFIELDS    0030
*                                      UNUSED IN MVS ** (MDC142)   0030
*                                                            @Z40AQ9A*/
*      2 CVTRV331 PTR(31),          /* ** CVTSEGD AND SUBFIELDS    0030
*                                      UNUSED IN MVS ** (MDC145)   0030
*                                                            @Z40AQ9A*/
*      2 CVTRSV77 PTR(8),           /* RESERVED                      */
*      2 CVTSPVLK PTR(8),           /* NUMBER OF TASKS WHICH HAVE  0030
*                                      TERMINATED WHILE OWNING     0030
*                                      SUPERVISOR LOCK WITHOUT     0030
*                                      OPERATOR HAVING YET BEEN    0030
*                                      NOTIFIED                      */
*      2 CVTCTLFG CHAR(1),          /* SYSTEM CONTROL FLAGS          */
*       3 CVTRV323 BIT(1),          /* ** CVTPSIC BIT UNUSED IN MVS
*                                      ** (MDC118)           @Z40AQ9A*/
*       3 CVTRV333 BIT(1),          /* ** CVTAPGB BIT UNUSED IN MVS
*                                      ** (MDC151)           @Z40AQ9A*/
*       3 CVTRSV78 BIT(1),          /* RESERVED ICB382               */
*       3 CVTDSTAT BIT(1),          /* DEVSTAT OPTION IN EFFECT.   0030
*                                      DEVICE ADDRESS FOR 2319, 3330,
*                                      2314, 3330-1, 3340 CAN VARY 0030
*                                      ACROSS SYSTEMS MDC189         */
*       3 CVTRSV79 BIT(1),          /* RESERVED                      */
*       3 CVTNOMP BIT(1),           /* MULTIPROCESSING CODE IS NOT IN
*                                      THE SYSTEM MDC176             */
*       3 CVTGTRCE BIT(1),          /* GENERALIZED TRACE FACILITY  0030
*                                      (GTF) HAS SUPPRESSED        0030
*                                      SUPERVISOR TRACE ICB446       */
*       3 CVTSDTRC BIT(1),          /* SVC DUMP HAS SUPPRESSED     0030
*                                      SUPERVISOR TRACE ICB446       */
*      2 CVTAPG CHAR(1),            /* DISPATCHING PRIORITY OF     0030
*                                      AUTOMATIC PRIORITY GROUP (APG)
*                                      ICB339                        */
*      2 CVTTRACE CHAR(2) BDY(WORD),/* BRANCH ON REGISTER          0030
*                                      INSTRUCTION. SET BY NIP.    0030
*                                      REGISTER TEN FOR TRACE.     0030
*                                      REGISTER ELEVEN FOR NO TRACE. */
*      2 CVTTRAC2 CHAR(2) BDY(WORD,3),/* BRANCH ON REGISTER 11     0030
*                                      INSTRUCTION. THIS ALLOWS FOR
*                                      SUPPRESSING TRACE DYNAMICALLY
*                                      BY SETTING CONDITION CODE MASK
*                                      TO ZERO IN FIRST INSTRUCTION
*                                      (CVTTRACE)                    */
*      2 CVTRSCN PTR(31),           /* ADDRESS OF ROUTINE TO SCAN TCB
*                                      TREE                          */
*      2 CVTTAS PTR(31),            /* ADDRESS OF ROUTINE TO TRANSFER
*                                      ADDRESS SPACE                 */
*      2 CVTRV332 PTR(31),          /* ** CVTPVALD FIELD UNUSED IN 0030
*                                      MVS ** (MDC148)       @Z40AQ9A*/
*      2 CVTSHRVM PTR(31),          /* LOWEST ADDRESS OF SHARED    0030
*                                      VIRTUAL STORAGE AREA. THIS  0030
*                                      ADDRESS WILL BE THE BEGINNING
*                                      OF THE COMMON SERVICE AREA  0030
*                                      (CSA) (MDC324)        @Z30AQ9A*/
*      2 CVT0VL01 PTR(31),          /* ENTRY POINT ADDRESS OF      0030
*                                      VALIDITY CHECK ROUTINE      0030
*                                      (IEA0VL01) USED TO COMPARE  0030
*                                      PROTECT KEY OF AN ADDRESS WITH
*                                      TCB PROTECT KEY.              */
*      2 CVTRV324 PTR(31),          /* ** CVTPFIXQ FIELD UNUSED IN 0030
*                                      MVS ** (MDC119)       @Z40AQ9A*/
*      2 CVTRV325 PTR(31),          /* ** CVTPFIXR FIELD UNUSED IN 0030
*                                      MVS ** (MDC120)       @Z40AQ9A*/
*      2 CVTRV326 PTR(31),          /* ** CVTPFIXP FIELD UNUSED IN 0030
*                                      MVS ** (MDC121)       @Z40AQ9A*/
*      2 CVTASCRF PTR(31),          /* CREATED ASCB QUEUE HEADER   0030
*                                      (MDC337)              @ZA04120*/
*      2 CVTASCRL PTR(31),          /* CREATED ASCB QUEUE TRAILER  0030
*                                      (MDC338)              @ZA04120*/
*      2 CVTPUTL PTR(31),           /* ADDRESS OF IKJPUTL, TSO PUT 0030
*                                      LINE ROUTINE (MDC207)   YM2225*/
*      2 CVTSRBRT PTR(31),          /* DISPATCHER RETURN ADDRESS FOR
*                                      SRB ROUTINES MDC130           */
*      2 CVTOLT0A PTR(31),          /* BRANCH ENTRY TO OLTEP MEMORY
*                                      TERMINATION RESOURCE MANAGER
*                                      MDC129                        */
*      2 CVTSMFEX PTR(31),          /* BRANCH ENTRY TO SYSTEM      0030
*                                      MANAGEMENT FACILITIES (SMF) 0030
*                                      EXCP COUNTING ROUTINE FOR VAM
*                                      WINDOW INTERCEPT MDC133       */
*      2 CVTCSPIE PTR(31),          /* FOR CHECKPOINT/RESTART, BRANCH
*                                      ENTRY TO SPIE MDC149          */
*      2 CVTPTGT PTR(31),           /* ADDRESS OF IKJPTGT, TSO PUTGET
*                                      ROUTINE (MDC208)        YM2225*/
*      2 CVTIOSPL PTR(8),           /* PRIORITY LEVEL OF I/O       0030
*                                      SUPERVISOR CHANNEL SCHEDULER
*                                      MDC019                        */
*      2 CVTRV513 CHAR(1),          /* RESERVED MDC165               */
*      2 CVTDSSAC CHAR(1),          /* DYNAMIC SUPPORT SYSTEM (DSS)
*                                      ACTIVATED FLAG - USED BY    0030
*                                      RESTART FLIH. IF X'00', DSS 0030
*                                      NOT INITIALIZED. IF X'FF', DSS
*                                      HAS BEEN INITIALIZED. MDC163  */
*      2 CVTRV139 PTR(8),           /* RESERVED                      */
*      2 CVTSTCK PTR(31),           /* ADDRESS OF IKJSTCK, TSO STACK
*                                      ROUTINE (MDC209)        YM2225*/
*      2 CVTMAXMP PTR(15),          /* FOR MEASUREMENT FACILITY    0030
*                                      (MF/1), MAXIMUM PHYSICAL CPU
*                                      ADDRESS SUPPORTED BY THIS   0030
*                                      RELEASE MDC165                */
*      2 CVTRV144 FIXED(15),        /* RESERVED                      */
*      2 CVTSCAN PTR(31),           /* ADDRESS OF IKJSCAN, TSO SCAN
*                                      ROUTINE (MDC210)        YM2225*/
*      2 CVTAUTHL PTR(31),          /* POINTER TO AUTHORIZED LIBRARY
*                                      TABLE MDC001                  */
*      2 CVTBLDCP PTR(31),          /* BRANCH ENTRY TO BUILD POOL  0030
*                                      MDC003                        */
*      2 CVTGETCL PTR(31),          /* BRANCH ENTRY TO GET CELL    0030
*                                      MDC004                        */
*      2 CVTFRECL PTR(31),          /* BRANCH ENTRY TO FREE CELL   0030
*                                      MDC005                        */
*      2 CVTDELCP PTR(31),          /* BRANCH ENTRY TO DELETE POOL 0030
*                                      MDC006                        */
*      2 CVTCRMN PTR(31),           /* BRANCH ENTRY TO SVC 120     0030
*                                      (GETMAIN/FREEMAIN:CRBRANCH) 0030
*                                      MDC007                        */
*      2 CVTCRAS PTR(31),           /* BRANCH ENTRY TO 'CREATE     0030
*                                      ADDRESS SPACE' MDC008         */
*      2 CVTQSAS PTR(31),           /* BRANCH ENTRY TO TASK        0030
*                                      TERMINATION MDC009            */
*      2 CVTFRAS PTR(31),           /* BRANCH ENTRY TO FREE ADDRESS
*                                      SPACE MDC010                  */
*      2 CVTS1EE PTR(31),           /* BRANCH ENTRY TO STAGE 1 EXIT
*                                      EFFECTOR MDC011               */
*      2 CVTPARS PTR(31),           /* ADDRESS OF IKJPARS, TSO PARSE
*                                      ROUTINE (MDC211)        YM2225*/
*      2 CVTQUIS PTR(31),           /* BRANCH ENTRY TO QUIESCE MDC013*/
*      2 CVTSTXU PTR(31),           /* BRANCH ENTRY TO ATTENTION EXIT
*                                      EPILOGUE MDC014               */
*      2 CVTOPTE PTR(31),           /* BRANCH ENTRY ADDRESS TO     0030
*                                      SYSEVENT MDC015               */
*      2 CVTSDRM PTR(31),           /* BRNACH ENTRY ADDRESS OF THE 0030
*                                      RESOURCE MANAGER ROUTINE FOR
*                                      SVC DUMP. THIS ROUTINE CAN BE
*                                      INVOKED BY MEMORY TERMINATION
*                                      MDC077                        */
*      2 CVTIOSCS PTR(31),          /* ENTRY POINT OF I/O SUPERVISOR
*                                      CHANNEL SCHEDULER MDC018      */
*      2 CVTAQTOP PTR(31),          /* POINTER TO AREA CONTAINING  0030
*                                      QUIESCE DESCRIPTOR BLOCK    0030
*                                      (QDB'S) FOR DEVICE ALLOCATION
*                                      MDC021                        */
*      2 CVTVVMDI PTR(31),          /* CONSTANT USED BY PAGED LINK 0030
*                                      PACK AREA (LPA) DIRECTORY   0030
*                                      SEARCH ALGORITHM MDC022       */
*      2 CVTASVT PTR(31),           /* POINTER TO ADDRESS SPACE    0030
*                                      VECTOR TABLE (ASVT) MDC070    */
*      2 CVTGDA PTR(31),            /* POINTER TO GLOBAL DATA AREA 0030
*                                      (GDA) IN SQA MDC024           */
*      2 CVTASCBH PTR(31),          /* POINTER TO HIGHEST PRIORITY 0030
*                                      ADDRESS SPACE CONTROL BLOCK 0030
*                                      (ASCB) ON THE ASCB DISPATCHING
*                                      QUEUE (HEAD OF ASCB QUEUE)  0030
*                                      MDC027                        */
*      2 CVTASCBL PTR(31),          /* POINTER TO LOWEST PRIORITY  0030
*                                      ASCB ON ASCB DISPATCHING QUEUE
*                                      MDC028                        */
*      2 CVTRTMCT PTR(31),          /* POINTER TO                  0030
*                                      RECOVERY/TERMINATION CONTROL
*                                      TABLE MDC031                  */
*      2 CVTSV60 PTR(31),           /* ADDRESS OF SVC 60 BRANCH ENTRY
*                                      POINT USED BY TYPE 2, 3, 4, 0030
*                                      SVC'S MDC032                  */
*      2 CVTSDMP PTR(31),           /* ADDRESS OF SVC DUMP BRANCH  0030
*                                      ENTRY POINT MDC033            */
*      2 CVTSCBP PTR(31),           /* ADDRESS OF SCB PURGE RESOURCE
*                                      MANAGER MDC034                */
*      2 CVTSDBF PTR(31),           /* ADDRESS OF 4K SQA BUFFER USED
*                                      BY SVC DUMP. HIGH ORDER BIT OF
*                                      THIS CVT WORD IS USED AS LOCK
*                                      TO INDICATE BUFFER IS IN USE
*                                      MDC035                        */
*      2 CVTRTMS PTR(31),           /* RTM1 INTERNAL SERVICABILITY 0030
*                                      LEVEL INDICATOR MDC036        */
*      2 CVTTPIOS PTR(31),          /* ADDRESS OF THE TELEPROCESSING
*                                      I/O SUPERV1SOR ROUTINE (TPIOS)
*                                      MDC078                        */
*      2 CVTSIC PTR(31),            /* BRANCH ENTRY ADDRESS OF THE 0030
*                                      ROUTINE TO SCHEDULE SYSTEM  0030
*                                      INITIALIZED CANCEL MDC042     */
*      2 CVTOPCTP PTR(31),          /* ADDRESS OF SYSTEM RESOURCES 0030
*                                      MANAGER (SRM) CONTROL TABLE 0030
*                                      MDC043                        */
*      2 CVTEXPRO PTR(31),          /* ADDRESS OF EXIT PROLOGUE/TYPE
*                                      1 EXIT MDC044                 */
*      2 CVTGSMQ PTR(31),           /* ADDRESS OF GLOBAL SERVICE   0030
*                                      MANAGER QUEUE MDC045          */
*      2 CVTLSMQ PTR(31),           /* ADDRESS OF LOCAL SERVICE    0030
*                                      MANAGER QUEUE MDC046          */
*      2 CVTGSPL PTR(31),           /* ADDRESS OF GLOBAL SYSTEM    0030
*                                      PRIORITY LIST QUEUE MDC047    */
*      2 CVTVWAIT PTR(31),          /* ADDRESS OF WAIT ROUTINE MDC048*/
*      2 CVTPARRL PTR(31),          /* ADDRESS OF PARTIALLY LOADED 0030
*                                      DELETE QUEUE MDC049           */
*      2 CVTAPFT PTR(31),           /* ADDRESS OF AUTHORIZED PROGRAM
*                                      FACILITY (APF) TABLE.       0030
*                                      INITIALIZED BY NIP. MDC050    */
*      2 CVTQCS01 PTR(31),          /* BRANCH ENTRY ADDRESS TO     0030
*                                      PROGRAM MANAGER USED BY ATTACH
*                                      MDC051                        */
*      2 CVTFQCB PTR(31),           /* POINTER TO FIRST MAJOR QCB FOR
*                                      ENQ MDC052                    */
*      2 CVTLQCB PTR(31),           /* POINTER TO LAST MAJOR QCB FOR
*                                      ENQ MDC053                    */
*      2 CVTRENQ PTR(31),           /* RESOURCE MANAGER ADDRESS FOR
*                                      ENQ MDC054                    */
*      2 CVTRSPIE PTR(31),          /* RESOURCE MANAGER FOR SPIE   0030
*                                      MDC055                        */
*      2 CVTLKRMA PTR(31),          /* RESOURCE MANAGER ADDRESS FOR
*                                      LOCK MANAGER MDC056           */
*      2 CVTCSD PTR(31),            /* VIRTUAL ADDRESS OF COMMON   0030
*                                      SYSTEM DATA AREA (CSD).     0030
*                                      INITIALIZED BY NIP. MDC057    */
*      2 CVTDQIQE PTR(31),          /* RESOURCE MANAGER FOR EXIT   0030
*                                      EFFECTORS MDC058              */
*      2 CVTRPOST PTR(31),          /* RESOURCE MANAGER FOR POST   0030
*                                      MDC059                        */
*      2 CVT062R1 PTR(31),          /* BRANCH ENTRY TO DETACH MDC060 */
*      2 CVTVEAC0 PTR(31),          /* ASCBCHAP BRANCH ENTRY MDC061  */
*      2 CVTGLMN PTR(31),           /* GLOBAL BRANCH ENTRY ADDRESS 0030
*                                      FOR GETMAIN/FREEMAIN MDC062   */
*      2 CVTSPSA PTR(31),           /* POINTER TO GLOBAL WORK/SAVE 0030
*                                      AREA VECTOR TABLE (WSAG)    0030
*                                      MDC071                        */
*      2 CVTWSAL PTR(31),           /* ADDRESS OF TABLE OF LENGTHS OF
*                                      LOCAL WORK/SAVE AREAS MDC072  */
*      2 CVTRV149 PTR(31),          /* RESERVED (MDC073)       YM4043*/
*      2 CVTWSAC PTR(31),           /* ADDRESS OF TABLE OF LENGTHS OF
*                                      CPU WORK/SAVE AREAS MDC074    */
*      2 CVTRECRQ PTR(31),          /* ADDRESS OF THE RECORDING    0030
*                                      REQUEST FACILITY (PART OF RTM1
*                                      - CALLED BY RTM2 AND RMS)   0030
*                                      MDC075                        */
*      2 CVTASMVT PTR(31),          /* POINTER TO AUXILIARY STORAGE
*                                      MANAGEMENT VECTOR TABLE (AMVT)
*                                      MDC076                        */
*      2 CVTIOBP PTR(31),           /* ADDRESS OF THE BLOCK PROCESSOR
*                                      CVT MDC079                    */
*      2 CVTSPOST PTR(31),          /* POST RESOURCE MANAGER       0030
*                                      TERMINATION ROUTINE (RMTR)  0030
*                                      ENTRY POINT MDC085            */
*      2 CVTRSTWD FIXED(31),        /* RESTART RESOURCE MANAGEMENT 0030
*                                      WORD - CONTAINS IDENTIFIER OF
*                                      USER IF RESTART IS IN USE.  0030
*                                      OTHERWISE, ZERO. MDC161       */
*      2 CVTFETCH PTR(31),          /* ADDRESS OF ENTRY POINT FOR  0030
*                                      BASIC FETCH MDC196            */
*      2 CVT044R2 PTR(31),          /* ADDRESS OF IGC044R2 IN CHAP 0030
*                                      SERVICE ROUTINE MDC197        */
*      2 CVTPERFM PTR(31),          /* ADDRESS OF THE PERFORMANCE  0030
*                                      WORK AREA. SET BY IGX00018. 0030
*                                      MDC205                        */
*      2 CVTDAIR PTR(31),           /* ADDRESS OF IKJDAIR, TSO     0030
*                                      DYNAMIC ALLOCATION INTERFACE
*                                      ROUTINE (MDC212)        YM2225*/
*      2 CVTEHDEF PTR(31),          /* ADDRESS OF IKJEHDEF, TSO    0030
*                                      DEFAULT SERVICE ROUTINE     0030
*                                      (MDC213)                YM2225*/
*      2 CVTEHCIR PTR(31),          /* ADDRESS OF IKJEHCIR, TSO    0030
*                                      CATALOG INFORMATION ROUTINE 0030
*                                      (MDC214)                YM2225*/
*      2 CVTSSAP PTR(31),           /* ADDRESS OF SYSTEM SAVE AREA 0030
*                                      MDC063                        */
*      2 CVTAIDVT PTR(31),          /* POINTER TO APPENDAGE ID VECTOR
*                                      TABLE MDC064                  */
*      2 CVTIPCDS PTR(31),          /* BRANCH ENTRY FOR DIRECT SIGNAL
*                                      SERVICE ROUTINE MDC065        */
*      2 CVTIPCRI PTR(31),          /* BRANCH ENTRY FOR REMOTE     0030
*                                      IMMEDIATE SIGNAL SERVICE    0030
*                                      ROUTINE MDC066                */
*      2 CVTIPCRP PTR(31),          /* BRANCH ENTRY FOR REMOTE     0030
*                                      PENDABLE SIGNAL SERVICE     0030
*                                      ROUTINE MDC067                */
*      2 CVTPCCAT PTR(31),          /* POINTER TO PHYSICAL CCA VECTOR
*                                      TABLE MDC068                  */
*      2 CVTLCCAT PTR(31),          /* POINTER TO LOGICAL CCA VECTOR
*                                      TABLE MDC069                  */
*      2 CVTRV210 BIT(8),           /* RESERVED                      */
*       3 CVTRV211 BIT(1),          /* RESERVED                      */
*       3 CVTRV212 BIT(1),          /* RESERVED                      */
*       3 CVTRV213 BIT(1),          /* RESERVED                      */
*       3 CVTRV214 BIT(1),          /* RESERVED                      */
*       3 CVTRV215 BIT(1),          /* RESERVED                      */
*       3 CVTRV216 BIT(1),          /* RESERVED                      */
*       3 CVTRV217 BIT(1),          /* RESERVED                      */
*       3 CVTRV218 BIT(1),          /* RESERVED                      */
*      2 CVTRV219 BIT(8),           /* RESERVED                      */
*       3 CVTRV220 BIT(1),          /* RESERVED                      */
*       3 CVTRV221 BIT(1),          /* RESERVED                      */
*       3 CVTRV222 BIT(1),          /* RESERVED                      */
*       3 CVTRV223 BIT(1),          /* RESERVED                      */
*       3 CVTRV224 BIT(1),          /* RESERVED                      */
*       3 CVTRV225 BIT(1),          /* RESERVED                      */
*       3 CVTRV226 BIT(1),          /* RESERVED                      */
*       3 CVTRV227 BIT(1),          /* RESERVED                      */
*      2 CVTRV228 BIT(8),           /* RESERVED                      */
*       3 CVTRV229 BIT(1),          /* RESERVED                      */
*       3 CVTRV230 BIT(1),          /* RESERVED                      */
*       3 CVTRV231 BIT(1),          /* RESERVED                      */
*       3 CVTRV232 BIT(1),          /* RESERVED                      */
*       3 CVTRV233 BIT(1),          /* RESERVED                      */
*       3 CVTRV234 BIT(1),          /* RESERVED                      */
*       3 CVTRV235 BIT(1),          /* RESERVED                      */
*       3 CVTRV236 BIT(1),          /* RESERVED                      */
*      2 CVTRV237 BIT(8),           /* RESERVED                      */
*       3 CVTRV238 BIT(1),          /* RESERVED                      */
*       3 CVTRV239 BIT(1),          /* RESERVED                      */
*       3 CVTRV240 BIT(1),          /* RESERVED                      */
*       3 CVTRV241 BIT(1),          /* RESERVED                      */
*       3 CVTRV242 BIT(1),          /* RESERVED                      */
*       3 CVTRV243 BIT(1),          /* RESERVED                      */
*       3 CVTRV244 BIT(1),          /* RESERVED                      */
*       3 CVTRV245 BIT(1),          /* RESERVED                      */
*      2 CVTRV246 PTR(8),           /* RESERVED                      */
*      2 CVTRV247 PTR(8),           /* RESERVED                      */
*      2 CVTRV248 PTR(8),           /* RESERVED                      */
*      2 CVTRV249 PTR(8),           /* RESERVED                      */
*      2 CVTRV250 PTR(8),           /* RESERVED                      */
*      2 CVTRV251 PTR(8),           /* RESERVED                      */
*      2 CVTRV252 PTR(15),          /* RESERVED                      */
*      2 CVTRV253 FIXED(15),        /* RESERVED                      */
*      2 CVTRV254 FIXED(15),        /* RESERVED                      */
*      2 CVTPWI PTR(31),            /* ADDRESS OF THE WINDOW       0030
*                                      INTERCEPT ROUTINE MDC104      */
*      2 CVTPVBP PTR(31),           /* ADDRESS OF THE VIRTUAL BLOCK
*                                      PROCESSOR MDC105              */
*      2 CVTMFCTL PTR(31),          /* POINTER TO MEASUREMENT      0030
*                                      FACILITY CONTROL BLOCK MDC100 */
*      2 CVTMFRTR PTR(31),          /* IF MEASUREMENT FACILITY IS  0030
*                                      ACTIVE, CONTAINS ADDRESS OF 0030
*                                      MEASUREMENT FACILITY ROUTER.
*                                      OTHERWISE, ADDRESS OF CVTBRET.
*                                      MDC101                        */
*       3 CVTMFACT BIT(1),          /* IF ONE, I/O SUPERVISOR AND  0030
*                                      TIMER SECOND LEVEL INTERRUPT
*                                      HANDLER HOOKS BRANCH TO     0030
*                                      MEASUREMENT FACILITY ROUTER 0030
*                                      MDC102                        */
*      2 CVTVPSIB PTR(31),          /* BRANCH ENTRY TO PAGE SERVICES
*                                      MDC108                        */
*      2 CVTVSI PTR(31),            /* BRANCH ENTRY TO VAM SERVICES
*                                      MDC109                        */
*      2 CVTVFP PTR(31),            /* BRANCH ENTRY TO FINDPAGE    0030
*                                      MDC110                        */
*      2 CVTRV262 BIT(8),           /* RESERVED                      */
*       3 CVTRV263 BIT(1),          /* RESERVED                      */
*       3 CVTRV264 BIT(1),          /* RESERVED                      */
*       3 CVTRV265 BIT(1),          /* RESERVED                      */
*       3 CVTRV266 BIT(1),          /* RESERVED                      */
*       3 CVTRV267 BIT(1),          /* RESERVED                      */
*       3 CVTRV268 BIT(1),          /* RESERVED                      */
*       3 CVTRV269 BIT(1),          /* RESERVED                      */
*       3 CVTRV270 BIT(1),          /* RESERVED                      */
*      2 CVTRV271 BIT(8),           /* RESERVED                      */
*       3 CVTRV272 BIT(1),          /* RESERVED                      */
*       3 CVTRV273 BIT(1),          /* RESERVED                      */
*       3 CVTRV274 BIT(1),          /* RESERVED                      */
*       3 CVTRV275 BIT(1),          /* RESERVED                      */
*       3 CVTRV276 BIT(1),          /* RESERVED                      */
*       3 CVTRV277 BIT(1),          /* RESERVED                      */
*       3 CVTRV278 BIT(1),          /* RESERVED                      */
*       3 CVTRV279 BIT(1),          /* RESERVED                      */
*      2 CVTRV280 BIT(8),           /* RESERVED                      */
*       3 CVTRV281 BIT(1),          /* RESERVED                      */
*       3 CVTRV282 BIT(1),          /* RESERVED                      */
*       3 CVTRV283 BIT(1),          /* RESERVED                      */
*       3 CVTRV284 BIT(1),          /* RESERVED                      */
*       3 CVTRV285 BIT(1),          /* RESERVED                      */
*       3 CVTRV286 BIT(1),          /* RESERVED                      */
*       3 CVTRV287 BIT(1),          /* RESERVED                      */
*       3 CVTRV288 BIT(1),          /* RESERVED                      */
*      2 CVTRV289 BIT(8),           /* RESERVED                      */
*       3 CVTRV290 BIT(1),          /* RESERVED                      */
*       3 CVTRV291 BIT(1),          /* RESERVED                      */
*       3 CVTRV292 BIT(1),          /* RESERVED                      */
*       3 CVTRV293 BIT(1),          /* RESERVED                      */
*       3 CVTRV294 BIT(1),          /* RESERVED                      */
*       3 CVTRV295 BIT(1),          /* RESERVED                      */
*       3 CVTRV296 BIT(1),          /* RESERVED                      */
*       3 CVTRV297 BIT(1),          /* RESERVED                      */
*      2 CVTTRCA PTR(31),           /* ADDRESS OF TRACE TABLE HEADER
*                                      (MDC327)              @ZA02352*/
*      2 CVTRV302 PTR(15),          /* RESERVED                      */
*      2 CVTRV303 PTR(15),          /* RESERVED                      */
*      2 CVTRV304 FIXED(15),        /* RESERVED                      */
*      2 CVTRV305 FIXED(15),        /* RESERVED                      */
*      2 CVTRV306 FIXED(15),        /* RESERVED                      */
*      2 CVTRV307 FIXED(15),        /* RESERVED                      */
*      2 CVTVIOP PTR(31),           /* ENTRY POINT OF PAGE I/O POST
*                                      MDC111                        */
*      2 CVTRMBR PTR(31),           /* ADDRESS OF REGMAIN BRANCH   0030
*                                      ENTRY MDC123                  */
*      2 CVTLFRM PTR(31),           /* LIST FORMAT FREEMAIN BRANCH 0030
*                                      ENTRY POINT MDC124            */
*      2 CVTGMBR PTR(31),           /* LIST FORMAT GETMAIN BRANCH  0030
*                                      ENTRY POINT MDC125            */
*      2 CVT0TC0A PTR(31),          /* ADDRESS OF TASK CLOSE MODULE
*                                      IFG0TC0A MDC128               */
*      2 CVTRLSTG FIXED(31),        /* SIZE OF ACTUAL REAL STORAGE 0030
*                                      ONLINE AT IPL TIME IN 'K'.  0030
*                                      VALUE PLACED HERE BY IEAVNIP0.
*                                      MDC153                        */
*      2 CVTSPFRR PTR(31),          /* 'SUPER FRR' ADDRESS (ADDRESS
*                                      OF FUNCTIONAL RECOVERY ROUTINE
*                                      ESTABLISHED AT NIP0 TIME TO 0030
*                                      PROTECT SUPERVISOR CONTROL  0030
*                                      PROGRAM) MDC154               */
*      2 CVTVEMS0 PTR(31),          /* ADDRESS OF MEMORY SWITCH    0030
*                                      ROUTINE MDC155                */
*      2 CVTJRECM PTR(31),          /* ADDRESS OF SUBSYSTEM INTERFACE
*                                      RESOURCE MANAGER MDC157       */
*      2 CVTIRECM PTR(31),          /* ADDRESS OF INITIATOR RESOURCE
*                                      MANAGER MDC158                */
*      2 CVTDARCM PTR(31),          /* ADDRESS OF DEVICE ALLOCATION
*                                      RESOURCE MANAGER MDC159       */
*      2 CVT0PT02 PTR(31),          /* ADDRESS OF POST ENTRY POINT 0030
*                                      IEA0PT02 MDC160               */
*      2 CVTSTPRS PTR(31),          /* ENTRY POINT OF STOP AND     0030
*                                      RESTART SUBROUTINE MDC162     */
*      2 CVTWTCB PTR(31),           /* ADDRESS OF WAIT STATE TCB   0030
*                                      MDC164                        */
*      2 CVTVACR PTR(31),           /* ACR/VARY CPU CHANNEL RECOVERY
*                                      ROUTINE ADDRESS. ADDRESS    0030
*                                      FILLED IN BY VARY CPU       0030
*                                      PROCESSOR. MDC178             */
*      2 CVTQUIT PTR(31),           /* VARY CPU SHUTDOWN ROUTINE   0030
*                                      ADDRESS. ADDRESS FILLED IN BY
*                                      VARY CPU PROCESSOR. MDC179    */
*      2 CVTGTFR8 PTR(31),          /* GENERALIZED TRACE FACILITY  0030
*                                      (GTF) CONTROL REGISTER 8    0030
*                                      INITIALIZATION ROUTINE ADDRESS
*                                      MDC180                        */
*      2 CVTVSTOP PTR(31),          /* ADDRESS OF VARY CPU STOP CPU
*                                      ROUTINE MDC169                */
*      2 CVTVPSA PTR(31),           /* ADDRESS OF COPY OF SYSGEN'ED
*                                      PSA - PLACED HERE BY NIP    0030
*                                      MDC170                        */
*      2 CVTRMPTT PTR(31),          /* ADDRESS OF ISTRAMA1, THE VTAM
*                                      RESOURCE MANAGER FOR NORMAL 0030
*                                      AND ABNORMAL TASK TERMINATION
*                                      (MDC322)              @Z30AP9A*/
*      2 CVTRMPMT PTR(31),          /* ADDRESS OF ISTRAMA2, THE VTAM
*                                      RESOURCE MANAGER FOR NORMAL 0030
*                                      AND ABNORMAL MEMORY         0030
*                                      TERMINATION (MDC323)  @Z30AP9A*/
*      2 CVTEXP1 PTR(31),           /* ADDRESS OF EXIT PROLOGUE WHICH
*                                      RETURNS TO THE DISPATCHER   0030
*                                      MDC173                        */
*      2 CVTCSDRL PTR(31),          /* REAL ADDRESS OF COMMON SYSTEM
*                                      DATA AREA (CSD). INITIALIZED
*                                      BY NIP. MDC174                */
*      2 CVTSSRB PTR(31),           /* STATUS STOP SRB ENTRY MDC175  */
*      2 CVTRPT PTR(31),            /* ADDRESS OF IGARPT01 MODULE OF
*                                      RADIX PARTITION TREE SERVICES.
*                                      INITIALIZED BY NIP. MDC177    */
*      2 CVTQV1 PTR(31),            /* ADDRESS OF QUEUE VERIFICATION
*                                      FOR SINGLE THREADED QUEUES  0030
*                                      WITH HEADERS ONLY MDC181      */
*      2 CVTQV2 PTR(31),            /* ADDRESS OF QUEUE VERIFICATION
*                                      FOR SINGLE THREADED QUEUES  0030
*                                      WITH HEADER AND TRAILER MDC182*/
*      2 CVTQV3 PTR(31),            /* ADDRESS OF QUEUE VERIFICATION
*                                      FOR DOUBLE THREADED QUEUES  0030
*                                      MDC183                        */
*      2 CVTGSDA PTR(31),           /* ADDRESS OF GLOBAL SYSTEM    0030
*                                      DUPLEX AREA. ADDRESS FILLED IN
*                                      BY NIP0. MDC184               */
*       3 CVTGSDAB BIT(1),          /* IF HIGH-ORDER BIT IS ONE,   0030
*                                      THERE IS A VALID VALUE IN   0030
*                                      FOLLOWING 31 BITS MDC185      */
*      2 CVTADV PTR(31),            /* ADDRESS OF ADDRESS          0030
*                                      VERIFICATION ROUTINE MDC186   */
*      2 CVTTPIO PTR(31),           /* ADDRESS OF VTAM TPIO (SVC 124)
*                                      ROUTINE MDC193                */
*      2 CVTCRCA PTR(31),           /* WHEN CHANNEL RECONFIGURATION
*                                      HARDWARE (CRH) IS ACTIVE,   0030
*                                      ADDRESS OF CRH COMMUNICATION
*                                      AREA IECVCRCA. OTHERWISE,   0030
*                                      ZERO. (MDC306)        @Z30CQ9A*/
*      2 CVTEVENT PTR(31),          /* BRANCH ENTRY ADDRESS TO EVENTS
*                                      (FAST MULTIPLE WAIT ROUTINE)
*                                      (MDC316)              @Z30HP9A*/
*      2 CVTSSCR PTR(31),           /* ADDRESS OF STORAGE SYSTEM   0030
*                                      CONTROLLER RECOVERY MANAGER 0030
*                                      CLEANUP ROUTINE (SSC RMCR)  0030
*                                      (MDC319)              @Z30LP9A*/
*      2 CVTCBBR PTR(31),           /* BRANCH ENTRY ADDRESS TO     0030
*                                      GETMAIN/FREEMAIN (MDC325)   0030
*                                                            @Z30EN9A*/
*      2 CVTEFF02 PTR(31),          /* ADDRESS OF IKJEFF02, TSO    0030
*                                      MESSAGE ISSUER SERVICE ROUTINE
*                                      (MDC326)              @ZM30972*/
*      2 CVTRV604 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/
*      2 CVTRV605 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/
*      2 CVTRV606 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/
*      2 CVTRV607 PTR(31),          /* RESERVED (MDC320)             */
*      2 CVTCGK PTR(31),            /* ADDRESS OF ROUTINE USED TO  0030
*                                      CHANGE THE KEY OF VIRTUAL   0030
*                                      PAGES (MDC331)        @Z40EP9A*/
*      2 CVTIRM PTR(31),            /* RESERVED (MDC332)     @Z40EP9A*/
*      2 CVT0PT0E PTR(31),          /* ENTRY POINT TO IDENTIFY POST
*                                      EXIT ROUTINES (MDC334)      0030
*                                                            @Z40EP9A*/
*      2 CVT0PT03 PTR(31),          /* POST REINVOCATION ENTRY POINT
*                                      FROM POST EXIT ROUTINES     0030
*                                      (MDC335)              @Z40EP9A*/
*      2 CVTTCASP PTR(31),          /* RESERVED FOR FUTURE USE     0030
*                                      (MDC336)              @Z40DQ9A*/
*      2 CVTRV613 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/
*      2 CVTRV614 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/
*      2 CVTRV615 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/
*      2 CVTRV616 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/
*      2 CVTRV617 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/
*      2 CVTRV618 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/
*      2 CVTRV619 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/
*      2 CVTRV620 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/
*      2 CVTRV621 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/
*      2 CVTRV622 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/
*      2 CVTRV623 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/
*      2 CVTRV624 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/
*      2 CVTRV625 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/
*      2 CVTRV626 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/
*      2 CVTRV627 PTR(31),          /* RESERVED (MDC307)     @Z30AQ9A*/
*      2 CVTRV628 PTR(31);          /* RESERVED (MDC307)     @Z30AQ9A*/
*/*                                                                  */
*/*            OS - OS/VS COMMON EXTENSION                           */
*/*                                                                  */
*                                                                  0031
*   DECLARE                                                        0031
*     1 CVTXTNT1 BASED(CVTEXT1),    /* START OF OS - OS/VS COMMON  0031
*                                      EXTENSION ICB421              */
*      2 CVTFACHN PTR(31),          /* ADDRESS OF CHAIN OF DCB FIELD
*                                      AREAS (ISAM) ICB421           */
*      2 CVTRSV87 PTR(31),          /* RESERVED                      */
*      2 CVTRSV88 PTR(31);          /* RESERVED                      */
*/*                                                                  */
*/*            OS/VS1 - OS/VS2 COMMON EXTENSION                      */
*/*                                                                  */
*                                                                  0032
*   DECLARE                                                        0032
*     1 CVTXTNT2 BASED(CVTEXT2),    /* START OF OS/VS1 - OS/VS2    0032
*                                      EXTENSION                     */
*      2 CVTDSSV PTR(31),           /* ADDRESS OF THE DYNAMIC SUPPORT
*                                      SYSTEM (DSS) VECTOR TABLE   0032
*                                      ICB313                        */
*       3 CVTRSV89 PTR(8),          /* RESERVED ICB313               */
*       3 CVTDSSVA PTR(24),         /* ADDRESS OF THE DSS VECTOR   0032
*                                      TABLE ICB313                  */
*      2 CVTNUCLS CHAR(1),          /* IDENTIFICATION OF THE NUCLEUS
*                                      MEMBER NAME ICB322            */
*      2 CVTFLGBT BIT(8),           /* FLAG BYTE (OS/VS1) (MDC301) 0032
*                                                            @X04EP9A*/
*       3 CVTNPE BIT(1),            /* INDICATES NON-PAGING        0032
*                                      ENVIRONMENT (VM HANDSHAKING)
*                                      (OS/VS1) (MDC302)     @X04EP9A*/
*       3 CVTVME BIT(1),            /* INDICATES MACHINE IS OPERATING
*                                      IN VM ENVIRONMENT (OS/VS1)  0032
*                                      (MDC303)              @X04EP9A*/
*       3 CVTRSV9C BIT(1),          /* RESERVED                      */
*       3 CVTRSV9D BIT(1),          /* RESERVED                      */
*       3 CVTRSV9E BIT(1),          /* RESERVED                      */
*       3 CVTRSV9F BIT(1),          /* RESERVED                      */
*       3 CVTRSV9G BIT(1),          /* RESERVED                      */
*       3 CVTRSV9H BIT(1),          /* RESERVED                      */
*      2 CVTRSV91 FIXED(15),        /* RESERVED                      */
*      2 CVTDEBVR PTR(31),          /* ADDRESS OF BRANCH ENTRY POINT
*                                      OF DEB VALIDITY CHECK ROUTINE
*                                      (ICB380)                XM9028*/
*      2 CVTRSV92 PTR(31),          /* RESERVED (MDC190)       YM2278*/
*      2 CVTRSV93 PTR(31),          /* RESERVED                      */
*      2 CVTRSV94 PTR(31),          /* RESERVED                      */
*      2 CVTQID PTR(31),            /* SAVE AS CVTQIDA BELOW ICB381  */
*       3 CVTRSV95 PTR(8),          /* RESERVED ICB381               */
*       3 CVTQIDA PTR(24),          /* ADDRESS OF QUEUE            0032
*                                      IDENTIFICATION (QID) TABLE  0032
*                                      PREFIX ICB381                 */
*      2 CVTOLTEP PTR(31),          /* POINTER TO CONTROL BLOCK    0032
*                                      CREATED BY SVC 59 TO POINT TO
*                                      PSEUDO-DEB'S ICB423           */
*      2 CVTRSV96 FIXED(15),        /* RESERVED                      */
*      2 CVTRSV97 FIXED(15),        /* RESERVED                      */
*      2 CVTRSV98 PTR(31),          /* RESERVED                      */
*      2 CVTSHS PTR(31),            /* RESERVED (MDC329)     @Z40EP9A*/
*       3 CVTSHSB BIT(1),           /* RESERVED (MDC330)     @Z40EP9A*/
*      2 CVTSKTA PTR(31),           /* ADDRESS OF STORAGE KEY TABLE
*                                      (VM HANDSHAKING) (OS/VS1)   0032
*                                      (MDC304)              @X04EP9A*/
*      2 CVTICB PTR(31),            /* ADDRESS OF MASS STORAGE SYSTEM
*                                      (MSS) CONTROL BLOCK (MDC305)
*                                                            @Z30LP9A*/
*      2 CVTRV400 BIT(8),           /* RESERVED                      */
*       3 CVTRV401 BIT(1),          /* RESERVED                      */
*       3 CVTRV402 BIT(1),          /* RESERVED                      */
*       3 CVTRV403 BIT(1),          /* RESERVED                      */
*       3 CVTRV404 BIT(1),          /* RESERVED                      */
*       3 CVTRV405 BIT(1),          /* RESERVED                      */
*       3 CVTRV406 BIT(1),          /* RESERVED                      */
*       3 CVTRV407 BIT(1),          /* RESERVED                      */
*       3 CVTRV408 BIT(1),          /* RESERVED                      */
*      2 CVTRV409 BIT(8),           /* RESERVED                      */
*       3 CVTRV410 BIT(1),          /* RESERVED                      */
*       3 CVTRV411 BIT(1),          /* RESERVED                      */
*       3 CVTRV412 BIT(1),          /* RESERVED                      */
*       3 CVTRV413 BIT(1),          /* RESERVED                      */
*       3 CVTRV414 BIT(1),          /* RESERVED                      */
*       3 CVTRV415 BIT(1),          /* RESERVED                      */
*       3 CVTRV416 BIT(1),          /* RESERVED                      */
*       3 CVTRV417 BIT(1),          /* RESERVED                      */
*      2 CVTRV418 PTR(8),           /* RESERVED                      */
*      2 CVTRV419 PTR(8),           /* RESERVED                      */
*      2 CVTRV420 PTR(15),          /* RESERVED                      */
*      2 CVTRV421 FIXED(15),        /* RESERVED                      */
*      2 CVTRV422 FIXED(15),        /* RESERVED                      */
*      2 CVTRV423 FIXED(15),        /* RESERVED                      */
*      2 CVTATCVT PTR(31),          /* POINTER TO VTAM'S CVT MDC080  */
*       3 CVTATACT BIT(1),          /* IF ON, VTAM IS ACTIVE MDC081  */
*      2 CVTRV425 PTR(31),          /* RESERVED                      */
*      2 CVTRV426 PTR(31),          /* RESERVED                      */
*      2 CVTRV427 PTR(31),          /* RESERVED                      */
*      2 CVTRV428 FIXED(31),        /* RESERVED                      */
*      2 CVTRV429 BIT(8),           /* RESERVED                      */
*       3 CVTRV430 BIT(1),          /* RESERVED                      */
*       3 CVTRV431 BIT(1),          /* RESERVED                      */
*       3 CVTRV432 BIT(1),          /* RESERVED                      */
*       3 CVTRV433 BIT(1),          /* RESERVED                      */
*       3 CVTRV434 BIT(1),          /* RESERVED                      */
*       3 CVTRV435 BIT(1),          /* RESERVED                      */
*       3 CVTRV436 BIT(1),          /* RESERVED                      */
*       3 CVTRV437 BIT(1),          /* RESERVED                      */
*      2 CVTRV438 BIT(8),           /* RESERVED                      */
*       3 CVTRV439 BIT(1),          /* RESERVED                      */
*       3 CVTRV440 BIT(1),          /* RESERVED                      */
*       3 CVTRV441 BIT(1),          /* RESERVED                      */
*       3 CVTRV442 BIT(1),          /* RESERVED                      */
*       3 CVTRV443 BIT(1),          /* RESERVED                      */
*       3 CVTRV444 BIT(1),          /* RESERVED                      */
*       3 CVTRV445 BIT(1),          /* RESERVED                      */
*       3 CVTRV446 BIT(1),          /* RESERVED                      */
*      2 CVTRV447 PTR(8),           /* RESERVED                      */
*      2 CVTRV448 PTR(8),           /* RESERVED                      */
*      2 CVTRV449 PTR(15),          /* RESERVED                      */
*      2 CVTRV450 FIXED(15),        /* RESERVED                      */
*      2 CVTRV451 FIXED(15),        /* RESERVED                      */
*      2 CVTRV452 FIXED(15),        /* RESERVED                      */
*      2 CVTRV453 PTR(31),          /* RESERVED                      */
*      2 CVTRV454 PTR(31),          /* RESERVED                      */
*      2 CVTRV455 PTR(31),          /* RESERVED                      */
*      2 CVTRV456 PTR(31),          /* RESERVED                      */
*      2 CVTRV457 BIT(8),           /* RESERVED                      */
*       3 CVTRV458 BIT(1),          /* RESERVED                      */
*       3 CVTRV459 BIT(1),          /* RESERVED                      */
*       3 CVTRV460 BIT(1),          /* RESERVED                      */
*       3 CVTRV461 BIT(1),          /* RESERVED                      */
*       3 CVTRV462 BIT(1),          /* RESERVED                      */
*       3 CVTRV463 BIT(1),          /* RESERVED                      */
*       3 CVTRV464 BIT(1),          /* RESERVED                      */
*       3 CVTRV465 BIT(1),          /* RESERVED                      */
*      2 CVTRV466 BIT(8),           /* RESERVED                      */
*       3 CVTRV467 BIT(1),          /* RESERVED                      */
*       3 CVTRV468 BIT(1),          /* RESERVED                      */
*       3 CVTRV469 BIT(1),          /* RESERVED                      */
*       3 CVTRV470 BIT(1),          /* RESERVED                      */
*       3 CVTRV471 BIT(1),          /* RESERVED                      */
*       3 CVTRV472 BIT(1),          /* RESERVED                      */
*       3 CVTRV473 BIT(1),          /* RESERVED                      */
*       3 CVTRV474 BIT(1),          /* RESERVED                      */
*      2 CVTRV475 PTR(8),           /* RESERVED                      */
*      2 CVTRV476 PTR(8),           /* RESERVED                      */
*      2 CVTRV477 PTR(8),           /* RESERVED                      */
*      2 CVTRV478 PTR(8),           /* RESERVED                      */
*      2 CVTRV479 FIXED(15),        /* RESERVED                      */
*      2 CVTRV480 PTR(31),          /* RESERVED                      */
*      2 CVTRV481 PTR(31),          /* RESERVED                      */
*      2 CVTRV482 PTR(31);          /* RESERVED                      */
*/*                       CVT PREFIX                                 */
*                                                                  0033
*   DCL                                                            0033
*     1 CVTFIX BASED(CVTPTR-256) BDY(WORD),                        0033
*      2 * CHAR(248) BDY(WORD),     /* RESERVED                      */
*      2 * CHAR(2) BDY(WORD),       /* RESERVED                      */
*      2 CVTMDL CHAR(2) BDY(WORD,3),/* CPU MODEL NUMBER IN SIGNLESS
*                                      PACKED DECIMAL, I.E., A MODEL
*                                      145 WOULD BE REPRESENTED AS 0033
*                                      0145 HEX                      */
*      2 CVTRELNO CHAR(4) BDY(WORD),/* RELEASE NUMBER (EBCDIC)       */
*       3 CVTNUMB CHAR(2) BDY(WORD),/* RELEASE NUMBER                */
*       3 CVTLEVL CHAR(2) BDY(WORD,3);/* LEVEL NUMBER OF THIS RELEASE*/
*/*                    END OF CVT MACRO                              */
*                                                                  0034
*                                                                  0034
*/* ATBUILD (ISTFSB,ISTLCCW)                                         */
*                                                                  0034
*/* FEEDBACK DATA BLOCK */                                         0034
*/* THE FOLLOWING DCR'S HAVE BEEN APPLIED */                       0034
*/* 1K0474 */                                                      0034
*DECLARE                                                           0034
*  1  ISTFDB  BDY(WORD) BASED,                                     0034
*   2  FDBFDBA     PTR(31),             /* POINTER TO NEXT FDB       */
*   2  FDBDATAA    PTR(31),             /* POINTER TO FEEDBACK DATA  */
*   2  FDBDATCT    FIXED(15),           /* DATA COUNT                */
*   2  FDBOFSET    PTR(15);            /* AMOUNT OF CORE PRECEDING 0034
*                                      THE FSB/FDB TO BE FREED IK0474 *
*/* FEEDBACK STATUS BLOCK */                                       0035
*/*  ADD A CONSTANT                                    007 12/13/74   *
*DCL  1  ISTFSB BDY(WORD) BASED(FSBPTR),                           0035
*       2  FSBFSB BDY(WORD),           /* FSB WITHOUT FDB             *
*        3  FSBTYPE CHAR(1),           /* CONTROL BLOCK TYPE          *
*        3  FSBLNGTH PTR(8),           /* LENGTH IN BYTES             *
*        3  FSBMNRCD BIT(8),           /* MINOR RETURN CODE OR        *
*                                      /* PHYSICAL CONDITION FLAGS    *
*           4  FSBMNELI BIT(1),        /* ERROR LOCK INDICATOR        *
*           4  FSBMNRVI BIT(1),        /* RVI RECEIVED                *
*           4  FSBMNATN BIT(1),        /* ATTN RECEIVED               *
*           4  FSBMNDNU BIT(1),        /* DEVICE NOT USABLE           *
*           4  FSBMNEOP BIT(1),        /* OUTPUT ERROR                *
*           4  FSBMNDIF BIT(1),        /* DIALOG INITIATION FEATURE   *
*           4  FSBMNOA BIT(1),         /* OPERATION ABORTED DUE TO CON*
*           4  FSBMNSDA BIT(1),        /* SENSE DATA AVAILABLE        *
*        3  FSBSFLGS BIT(8),           /* TPIOS SESSION FLAGS         *
*           4 FSBPGBUF BIT(1),         /* PAGEABLE BUFFER             *
*           4 FSBRSV02 BIT(6),         /* RESERVED            @ZA25404*
*           4 FSBLATOP BIT(1),         /* FSB HAS DCLCPB      @ZA25404*
*        3  FSBFSBA PTR(31),           /* ADDR OF NEXT FSB            *
*           4  FSBGATE BIT(1),         /* GATING FLAG                 *
*        3  FSBBTH CHAR(8),            /* BTH FIELDS                  *
*           4  FSBCID CHAR(4),         /* COMMUNICATION ID            *
*              5 FSBSAF BIT(16),       /* SIXTEEN BIT SOURCE ID       *
*              5 FSBDAF BIT(16),       /* SIXTEEN BIT DESTINATION ID  *
*           4  FSBRQTAG CHAR(2),       /* REQUEST TAG                 *
*              5  FSBSEQID BIT(16),    /* SEQUENCE NUMBER OR ID,SDCC  *
*               6  FSBFLAGS BIT(8),    /* FLAG BYTE                   *
*                 7  FSBRFIND BIT(1),  /* REQUEST FEEDBACK INDICATOR  *
*                 7  FSBACIND BIT(1),  /* ADDITIONAL COMMAND INDICATOR*
*                 7  FSBFFIND BIT(1),  /* FUNCTION FLAG GENERATED     *
*                 7  FSBLBIND BIT(1),  /* LAST BLOCK INDICATOR        *
*                 7  FSBNONCB BIT(1),  /* NO NCB FOR THIS REQUEST     *
*                 7  FSBINPET BIT(1),  /* INVITE PERPETUAL RESPONSE   *
*                 7  FSBASBTU BIT(1),  /* ASSOCIATED RESPONSE TO COME *
*                 7  FSBDTRCE BIT(1),  /* DEVICE TRACE REQUEST        *
*               6  FSBSEQ CHAR(1),     /* SEQENCE NUMBER              *
*                 7  FSBCMD CHAR(1),   /* LCCW COMMAND FOR LOCAL DEV  *
*           4  FSBCSWST CHAR(2),       /* CSW STATUS                  *
*              5  FSBTHFLD CHAR(2),    /* TRANSMISSION HEADER         *
*               6  FSBTH1  CHAR(1),    /* TH BYTE 1                   *
*                7  FSBSYSRS CHAR(1),  /* SYSTEM RESPONSE             *
*                 8  FSBSERR BIT(1),   /* ERROR FLAG                  *
*                 8  FSBSPHSE BIT(2),  /* RESPONSE PHASE              *
*                 8  FSBSCODE BIT(5),  /* RESPONSE CODE               *
*               6  FSBTH2  CHAR(1),    /* TH BYTE 2                   *
*                7  FSBEXTRS CHAR(1),  /* EXTENDED RESPONSE           *
*                 8  FSBXFSTS BIT(3),  /* FIRST STATUS                *
*                    9  FSBXNORM BIT(1),  /* OFF FOR NORM 1ST STATUS  *
*                 8  FSBXCODE BIT(5),  /* EXTENDED RESPONSE CODE      *
*                    9  FSBXFINS BIT(4),  /* FINAL STATUS             *
*                    9  FSBXLCI BIT(1),   /* LEADING CHARS INDICATED  *
*        3  FSBNETRS BIT(16),          /* NETWORK RESPONSE            *
*           4  FSBSRCAT BIT(8),        /* SYSTEM RESPONSE CATEGORY    *
*              5  FSBMJRCD BIT(8),     /* MAJOR RETURN CODE           *
*           4  FSBERC BIT(8),          /* EXTENTED RESPONSE CONDITIONS*
*              5  FSBELI BIT(1),       /* END OF LCP INDICATOR        *
*              5  FSBECI BIT(1),       /* END OF COMMAND INDICATOR    *
*              5  FSBEBI BIT(1),       /* END OF BLOCK INDICATOR      *
*              5  FSBEMI BIT(1),       /* END OF MESSAGE INDICATOR    *
*              5  FSBETI BIT(1),       /* END OF TRANSMISSION IND.    *
*              5  FSBFBMI BIT(1),      /* FIRST BLOCK IN MESSAGE INDIC*
*                 6  FSBLMRI BIT(1),   /* LOGOFF MESSAGE RECEIVED     *
*              5  FSBLGI BIT(1),       /* LEADING GRAPHICS INDICATOR  *
*              5  FSBSOHI BIT(1),      /* SOH INDICATOR               *
*        3  FSBDMGRS BIT(16),          /* DEVICE MANAGEMENT RESPONSE  *
*           4  FSBSS1 BIT(8),          /* STATUS SENSE BYTE 1         *
*              5  *     BIT(5),        /* RESERVED                    *
*              5  FSBSSUS BIT(1),      /* UNIT SPECIFY                *
*              5  FSBSSDE BIT(1),      /* DEVICE END                  *
*              5  *     BIT(1),        /* RESERVED                    *
*           4  FSBSS2 BIT(8),          /* STATUS SENSE BYTE 2         *
*              5  *     BIT(2),        /* RESERVED                    *
*              5  FSBSSCR BIT(1),      /* COMMAND REJECT              *
*              5  FSBSSIR BIT(1),      /* INTERV. REQUIRED            *
*              5  FSBSSEC BIT(1),      /* EQUIPMENT CHECK             *
*              5  FSBSSDC BIT(1),      /* DATA CHECK                  *
*              5  FSBSSCC BIT(1),      /* CONTROL CHECK               *
*              5  FSBSSOC BIT(1),      /* OPERATION CHECK             *
*        3  FSBLCPB PTR(31),           /* ADDR OF LCPB                *
*           4  FSBMSGID PTR(31),       /* OPERATOR MESSAGE ID         *
*              5  FSBICNCB PTR(31),    /* ICNCB PTR - CHECKPOINT REST *
*        3  FSBLCCWA PTR(31),          /* LCCW ADDRESS                *
*           4 FSBRLSTS BIT(8),         /* BUFFER RELEASE STATUS       *
*             5 FSBCFTX  BIT(1),       /* BUFFER CONTAINS CONFID TEXT *
*             5 FSBRLRSV BIT(7),       /* RESERVED                    *
*        3  FSBTHCNT BIN(15),          /* TH DATA COUNT               *
*        3  FSBRSV01 CHAR(2),          /* RESERVED                    *
*        2  FSBFDB CHAR(LENGTH(ISTFDB));/* FIRST FDB                  *
*/*       THIS IS AN OVERLAY FOR THE FIELDS BEGINNING AT FSBNETRS     *
*/*       TO SUPPORT THE DEFINED REQUEST/RESPONSE HEADER.             *
*DCL  1  FSBCOMBN BDY(BYTE) DEF(FSBNETRS),                         0036
*        2  FSBALIGN CHAR(1),           /* ALLIGNMENT BYTE            *
*        2  FSBRHFLD CHAR(3),           /* REQUEST/RESPONSE HEADER    *
*           3  FSBRH1 CHAR(1),          /* RH BYTE 1                  *
*           3  FSBRH2 CHAR(1),          /* RH BYTE 2                  *
*           3  FSBRH3 CHAR(1),          /* RH BYTE 3                  *
*              4 FSBLDFLG CHAR(1),      /* LOCAL DEVICE FLAGS FOR  0036
*                                          RECORD MODE                *
*                5 FSBLDRMF BIT(1),     /* RECORD MODE FLAG           *
*                5 FSBLDSCF BIT(1),     /* SESSION CONTROL FLAG       *
*                5 FSBLDFME BIT(1),     /* FME REQUESTED FLAG         *
*                5 FSBLDBBF BIT(1),     /* BEGIN BRACKET FLAG         *
*                5 FSBLDEBF BIT(1),     /* END BRACKET FLAG           *
*                5 FSBLDSOF BIT(1),     /* SEND OUTPUT COMMAND FLAG   *
*                5 FSBLDSIF BIT(1),     /* SEND INPUT COMMAND FLAG    *
*                5 FSBLDCUF BIT(1);     /* CLEAR/UNBIND FLAG          *
*DCL  1  *  BIT(12) DEFINED(FSBRQTAG),  /* COPY OF ZLBRQFLG  @XL03HDM *
*        2  FSBRT00 BIT(1),             /* LOGICAL ERROR FLAG @XL03HDM*
*        2  FSBRT01 BIT(1),             /* CONTRL BLOCK ERROR @XL03HDM*
*        2  FSBRT02 BIT(1),             /* END OF SCHEDULING BLOCK 0037
*                                                            @XL03HDM *
*        2  FSBRT03 BIT(1),             /* WRITE/READ REQUEST @XL03HDM*
*        2  FSBRT04 BIT(1),             /* FEEDBACK REQUESTED @XL03HDM*
*        2  FSBRT05 BIT(1),             /* DECREMENT SCHED COUNT ON
*                                          DEQUEUE           @XL03HDM *
*        2  FSBRT06 BIT(1),             /* WRITE REQUEST     @XL03HDM *
*        2  FSBRT07 BIT(1),             /* SCHEDULING FLAG   @XL03HDM *
*        2  FSBRT08 BIT(1),             /* DEVICE END NOTIFICATION 0037
*                                                            @XL03HDM *
*        2  FSBRT09 BIT(1),             /* CRITICAL TEXT FLAG @XL03HDM*
*        2  FSBRT0A BIT(1),             /* CONTACT           @XL03HDM *
*        2  FSBRT0B BIT(1);             /* DISCONNECT        @XL03HDM *
*DCL FSTYPE    BIT(8) CONSTANT('02'X),  /* TYPE CODE FOR FSB          *
*    FSTRACE   BIT(8) CONSTANT('8F'X),  /* TRACE FSB                  *
*    FSTYPEA   BIT(8) CONSTANT('80'X),  /* FID1 FSB                   *
*    FRREJBB BIT(8) CONSTANT('90'X),    /* REJECTED BEGIN BRACKET     *
*    FRREJBS BIT(8) CONSTANT('94'X),    /* REJECTED BRACKET STATUS    *
*    FSTHCON BIT(16) CONSTANT('1E00'X), /* 3270 RECORD TH BYTES 1,2   *
*    FRMNSALU BIT(8) CONSTANT('00'X),   /* NO SESSION EXISTS          *
*    FRMRCDNP BIT(8) CONSTANT('29'X),   /* RESET CONDL REJECT-        *
*                                       /* ERROR LOCK SET             *
*    FSATHCON BIT(16) CONSTANT('1F00'X),/* ASYCHRONOUS TH CONSTANT    *
*            /* MAJOR RETURN CODE TYPE VALUES */                   0038
*    FRNORM    BIT(8) CONSTANT('00'X),  /* NORMAL FEEDBACK            *
*    FRCBLKE   BIT(8) CONSTANT('04'X),  /* CONTROL BLOCK ERROR        *
*    FRLOGICE  BIT(8) CONSTANT('08'X),  /* LOGICAL ERROR IN ACCESS 0038
*                                          METHOD                     *
*    FRPHYSC   BIT(8) CONSTANT('0C'X),  /* I/O ERROR                  *
*    FRPPRIEX  BIT(8) CONSTANT('0D'X),  /* RU PURGED DUE TO EXCEPTION *
*                                       /* ON PRIOR ELEMENT ON CHAIN  *
*    FRNEGRCC  BIT(8) CONSTANT('10'X),  /* CONDIT COMMND NOT PERFORMED*
*    FRESPEC   BIT(8) CONSTANT('0C'X),  /* SPECIAL  CONDITION         *
*    FRCMDRST  BIT(8) CONSTANT('18'X),  /* COMMAND TERMINATED BY RESET*
*    FRPURGE   BIT(8) CONSTANT('1C'X),  /* REQUEST PURGED             *
*    FRDISCNT  BIT(8) CONSTANT('28'X),  /* DEVICE DISCONNECTED        *
*    FRMLCCWS BIT(8) CONSTANT('04'X),  /* LCCW SYNCH COMPLETION CODE  *
*    FRNETP    BIT(8) CONSTANT('80'X),  /* NETWORK PROCESSING         *
*    FRLINTR   BIT(8) CONSTANT('84'X),  /* LINE TRACE                 *
*    FRMDR     BIT(8) CONSTANT('88'X),  /* MDR RECORD                 *
*    FROLT     BIT(8) CONSTANT('8C'X),  /* OLTT                       *
*    FRNOTIFY  BIT(8) CONSTANT('30'X),  /* NOTIFY                     *
*    FRCLRRSP  BIT(8) CONSTANT('31'X);  /* CLEAR RESPONSE             *
*                                                                  0038
*/* MINOR RETURN CODES FOR NORMAL FEEDBACK */                      0039
*                                                                  0039
*DCL FRMOK     BIT(8) CONSTANT('00'X),  /* OK SO FAR                  *
*    FRMRCDPR BIT(8) CONSTANT('04'X),  /* RESET CONDITION SUCCESSFUL,
*                                         READ AHEAD DATA PRESENT    */
*    FRMLSYN  BIT(8) CONSTANT('04'X),  /* LCCW SYNCHRONIZATION       */
*    FRMSRCTL BIT(8) CONSTANT('0C'X),  /* CTL COM'D SESSION RECORD   */
*    FRMIRCTL BIT(8) CONSTANT('10'X),  /* CTL COM'D INCIDENT RECORD  */
*    FRMRSTEL BIT(8) CONSTANT('40'X),   /* RESET ERROR LOCK COMPLETED *
*    FRMRSTQP BIT(8) CONSTANT('41'X),   /* RESET OF QUEUE COMPLETE    *
*    FRMRELCB BIT(8) CONSTANT('30'X),   /* RELEASE CB                 *
*    FRMNPCR  BIT(8) CONSTANT('31'X),   /* CLEAR RESPONSE             *
*    FRMNPUR  BIT(8) CONSTANT('32'X),   /* UNBIND RESPONSE            *
*    FRMRSTSR BIT(8) CONSTANT('33'X);   /* RESETSR RESPONSE           *
*                                                                  0039
*/* MINOR RETURN CODES FOR CONTROL BLOCK ERROR */                  0040
*DCL FRMINVCF  BIT(8) CONSTANT('81'X),  /* INVLD CHAINING FLD IN LCCW *
*    FRMIECMD  BIT(8) CONSTANT('87'X),  /* INVALID ESCAPE CMD         *
*    FRMLGCNT  BIT(8) CONSTANT('88'X),  /* LEADING GRAPHICS COUNT > 15*
*    FRMESCNT  BIT(8) CONSTANT('89'X),  /* ESCAPE CMD COUNT < 4       *
*    FRMCPCNT  BIT(8) CONSTANT('8A'X),  /* COPY LCC COUNT NE 3        *
*    FRMINDAT  BIT(8) CONSTANT('97'X),  /* INVALID DATA ADDR/LENGTH   *
*    FRMINCNT  BIT(8) CONSTANT('8B'X),  /* INVALID DATA COUNT         *
*    FRMINDTR BIT(8) CONSTANT('17'X),   /* INVLD DATA/CNT-RECORD MODE *
*    FRMNSEGE BIT(8) CONSTANT('1C'X);   /* SEGMENTING ERROR           *
*                                                                  0040
*/* PHYSICAL CONDITION MINOR RETURN CODES */                       0041
*DCL FRMDENOT BIT(8) CONSTANT('01'X),  /* 3270 DEVICE END NOTIFICAT'N *
*    FRMLOERR BIT(8) CONSTANT('88'X),  /* 3270 LOCAL OUTPUT ERROR  0041
*                                         WITHOUT SENSE               *
*    FRMNRP   BIT(8) CONSTANT('80'X),  /* NEGATIVE RESPONSE TO POLLING*
*    FRMLERR  BIT(8) CONSTANT('80'X),  /* 3270 LOC I/O ERR W/O SENSE  *
*    FRMLOSNS BIT(8) CONSTANT('89'X),  /* 3270 LOC OUTPUT ERR W/SENSE *
*    FRMLESNS BIT(8) CONSTANT('81'X);  /* 3270 LOC I/O ERR WITH SENSE *
*/* MINOR RETURN CODES FOR LOGICAL ERRORS */                       0042
*DCL FRMVTAME  BIT(8) CONSTANT('A0'X),  /* VTAM ERROR                 *
*    FRMILRS   BIT(8) CONSTANT('A1'X),  /* INCOMPATABLE LOCAL/REMOTE  *
*                                       /* SYSGENS                    *
*    FRMRDIP   BIT(8) CONSTANT('A2'X),  /* RESET OR DEACTIVATE        *
*                                       /* + CLEAR IN PROGRESS        *
*    FRMUSELE  BIT(8) CONSTANT('A3'X),  /* USER LOGIC ERROR           *
*    FRMINVL   BIT(8) CONSTANT('A3'X),  /* USER LOGIC ERROR           *
*    FRMCTLCF  BIT(8) CONSTANT('A4'X),  /* CONTROL COMMAND            *
*    FRMOLTF   BIT(8) CONSTANT('A5'X),  /* OLTT FAILURE               *
*    FRMCDITS  BIT(8) CONSTANT('A6'X),  /* CONFLICTING DIALOGUE       *
*                                       /* INITIATION/TERMINATION     *
*    FRMCRNF   BIT(8) CONSTANT('A7'X),  /* CONVERSATIONAL REPLY NOT   *
*                                       /* FEASIBLE                   *
*    FRMELNV   BIT(8) CONSTANT('A9'X),  /* ESCAPE LCCW NOT VALID      *
*    FRMNELNV  BIT(8) CONSTANT('AA'X),  /* NON ESCAPE LCCW NOT VALID  *
*    FRMLCH    BIT(8) CONSTANT('AB'X),  /* LCCW COUNT EXCEEDS 255     *
*    FRMNORD   BIT(8) CONSTANT('AC'X),  /* NO READ WHERE REQUIRED     *
*    FRMINVBS  BIT(8) CONSTANT('AD'X), /* INVALID BTU SYSTEM RESPONSE *
*    FRMSEQER  BIT(8) CONSTANT('AE'X), /* RESPONSE SEQUENCE EEROR     *
*    FRMERNR BIT(8) CONSTANT('AF'X),   /* EXPECTED RESPONSE NOT RECVED*
*    FRMTRUN  BIT(8) CONSTANT('B0'X), /* DATA TRUNCATION OCCURRED     *
*    FRMCPYE2 BIT(8) CONSTANT('B1'X), /* ATTEMPT TO COPY FROM DEVICE
*                                     ON DIFFERENT CLUSTER            *
*    FRMRELNP BIT(8) CONSTANT('B2'X), /* RESET ERROR LOCK NOT PRFORMD *
*    FRMCPYE1 BIT(8) CONSTANT('B3'X), /* ATTMPT TO COPY FROM UNOP DEV *
*    FRMCPYE3 BIT(8) CONSTANT('B3'X),  /* ATTEMPT TO COPY FROM A DEVICE
*                                         NOT ALLOCATED TO THE COPIER *
*    FRMPRM1 BIT(8) CONSTANT('B4'X), /* ATTEMPT TO PREEMPT A       0042
*                                       PREEMPTED FMCB               */
*    FRMPRM2 BIT(8) CONSTANT('B5'X), /* ATTEMPT TO PREEMPT AN FMCB WITH
*                                       PREEMPT PENDING              */
*    FRMBHNDG BIT(8) CONSTANT('B6'X),  /* DIALOGUE ENTRY FAILED DUE TO
*                                         INVALID BH SET              *
*    FRMMDNDG BIT(8) CONSTANT('B7'X),  /* DIALOGUE ENTRY FAILED DUE TO
*                                         INVALID PROCESSING OPTIONS  *
*    FRMRCNA BIT(8) CONSTANT('B8'X),   /* READ CONTINUOUS NOT ALLOWED *
*    FRMRDLGO BIT(8) CONSTANT('B9'X);  /* READ WITH DATA LENGTH GT 1  *
*                                      /* INTERNAL TPIOS ONLY         *
*/* MINOR RETURN CODES FOR CONDITIONAL COMMAND NOT PERFORMED */    0043
*DCL  FRMNRCC BIT(8) CONSTANT('00'X),  /* RESET NOT PERFORMED         *
*     FRMYTC  BIT(8) CONSTANT('80'X);  /* YIELDED TO CONTENTION       *
*                                                                  0043
*/*  MINOR CODE FOR COMMAND RESET        */                        0044
*DCL  FRMCDRST BIT(8) CONSTANT('00'X);   /* COMMAND HAS BEEN RESET */
*/*  MINOR RETURN CODES FOR NOTIFY                                   */
*DCL FRMPREMT BIT(8) CONSTANT('0B'X),   /* TOLTEP PREMPT             */
*    FRMRESTR BIT(8) CONSTANT('0C'X),   /* RESTORE AFTER PREEMPT     */
*    FRNCDTRM BIT(8) CONSTANT('0D'X);   /* CONDITIONAL TERM SELF     */
*                                                                  0045
*/* MINOR RETURN CODES FOR REQUEST PURGED */                       0046
*DCL  FRPRARSS BIT(8) CONSTANT('01'X), /* 3705 ABEND, RESTART SUCSFL */
*     FRPRABND BIT(8) CONSTANT('02'X), /* EARLY WARN, RECOV IN PROG  */
*     FRPPCHFL BIT(8) CONSTANT('03'X), /* PERMANENT CHANNEL FAILURE  */
*     FRPRANSH BIT(8) CONSTANT('04'X), /* AUTO NETWORK SHUTDOWN      */
*     FRPAPABD BIT(8) CONSTANT('05'X), /* APPLICATION ABENDED        */
*     FRPCLSDO BIT(8) CONSTANT('06'X), /* CLSDST OCCURRED            */
*     FRPVRYOF BIT(8) CONSTANT('07'X), /* VARY OFFLINE OCCURRED      */
*     FRPDISCO BIT(8) CONSTANT('08'X), /* DISCONNECT OCCURRED        */
*     FRPDBTEX BIT(8) CONSTANT('09'X), /* BUFFER THRESHOLD EXCEEDED  */
*     FRPRTF   BIT(8) CONSTANT('10'X), /* TEMP RECORD DEVICE FAILURE */
*     FRPRTS   BIT(8) CONSTANT('11'X), /* TERMINATE SELF             */
*     FRPRAP   BIT(8) CONSTANT('0A'X), /* APPL ISSUED CLEAR          */
*     FRPRPR   BIT(8) CONSTANT('0B'X), /* PREEMPT                    */
*     FRNFRE   BIT(8) CONSTANT('0C'X), /* RESTORE                    */
*     FRPARSSL BIT(8) CONSTANT('81'X); /* THIS IS LAST OPERATION PURGED
*                                         FOR 3705 ABEND, RESTART  0046
*                                         SUCCESSFUL         @DL29HDM *
*/* MINOR RETURN CODES FOR NETWORK PROCESSING */                   0047
*DCL  FRMMTAID  BIT(8) CONSTANT('00'X), /* MTA DEVICE IDENTIFIED      *
*     FRMNPLQ   BIT(8) CONSTANT('04'X), /* NEG POLL LIMIT REACHED     *
*                                       /* QUEUE OPTION               *
*     FRMNPDES BIT(8) CONSTANT('08'X),  /*DEVICE END STATUS          */
*     FRMNPSE  BIT(8) CONSTANT('80'X),  /* ERROR SENSE/STATUS        */
*     FRMDEBSF  BIT(8) CONSTANT('84'X), /* DEVICE ERROR - BSC         *
*                                       /* STATUS TO FOLLOW           *
*     FRMBIDE  BIT(8) CONSTANT('0C'X),  /* BSC ID ERROR               *
*     FRMMTABS BIT(8) CONSTANT('18'X), /* MTA/BSC VERIFY SUCCESSFUL IN
*                                          370X                      */
*     FRMBSCER BIT(8) CONSTANT('90'X),  /* BSC ID VERIFY SUCCESSFUL
*                                         (IN HOST), ERROR LOCK SET  */
*     FRMNUTRM BIT(8) CONSTANT('94'X),  /* BSC ID VERIFY UNSUCCESSFUL
*                                          ERROR LOCK SET            */
*     FRMNPHPS BIT(8) CONSTANT('10'X),  /* HOLD - PENDING SENSE/ST   */
*     FRMNPRMD BIT(8) CONSTANT('20'X), /* REQUEST MANUALDIAL         */
*     FRMBSCOK BIT(8) CONSTANT('1C'X), /* BSC ID ASSOCIATION SUCCESS-
*                                         FUL IN TPIOS                *
*     FRMBSCKO BIT(8) CONSTANT('1E'X),  /* BSCID SUCSSFUL IN VS1 TPIOS*
*     FRMUNID BIT(8) CONSTANT('14'X),  /* UNIDENTIFIED DIAL IN TERMNL *
*     FRMNPRDV BIT(8) CONSTANT('42'X); /* RESET CONDITIONAL FAILED    *
*DCL FRMFIRM  BIT(8) CONSTANT('10'X),  /* LU FAILED                   *
*    FRMTERM  BIT(8) CONSTANT('11'X);  /* TERMINATE RECEIVED          *
*                                                                  0048
*/* MINOR RETURN CODES FOR LINE TRACE   */                         0049
*DCL  FRMLINTR BIT(8) CONSTANT('00'X), /* LINE TRACE                  *
*     FRMLTRE  BIT(8) CONSTANT('04'X); /* LINE TRACE TERMINATED BY ERR*
*                                                                  0049
*/* MINOR RETURN CODES FOR MDR RECORDS */                          0050
*DCL  FRMMDR   BIT(8) CONSTANT('00'X); /* MDR RECORDS                 *
*                                                                  0050
*/* MINOR RETURN CODES FOR OLTT */                                 0051
*DCL  FRMOLTR  BIT(8) CONSTANT('80'X), /* OLT REQUEST MESSAGE         *
*     FRMOLTE  BIT(8) CONSTANT('04'X), /* OLTT CMD TERMINATED         *
*     FRMOLTNC BIT(8) CONSTANT('90'X), /* NO CCW STRING QUEUED        *
*     FRMOLTNT BIT(8) CONSTANT('91'X), /* CCW STRING QUEUED - NOT TEST
*                                         MODE REQS                   *
*     FRMOLTNS BIT(8) CONSTANT('92'X); /* I/O NOT STARTED - HDV NOT
*                                         ISSUED                     */
*                                                                  0051
*/* ***** MINOR RETURN CODE FOR COMMAND RESET  **** ** */          0052
*DCL  FRMRSTRM BIT(8) CONSTANT('80'X), /* RESET BY SUCCSSFUL TRM      *
*     FRMRUTRM BIT(8) CONSTANT('81'X); /* RESET BY SUCCSSFUL TRM      *
*                                                                  0052
*/* **** MINOR RETURN CODES FOR PHYSICAL CONDITION **** */         0053
*DCL  FRMUSDA BIT(8) CONSTANT('00000001'B), /* UNSOL SENSE DATA AVAIL *
*     FRMSE   BIT(8) CONSTANT('10000001'B), /* ERROR SENSE DATA AVAIL *
*     FRMUSE  BIT(8) CONSTANT('10000001'B), /* ERROR,UNSOLICITED,SENSE*
*     FRMDDR  BIT(8) CONSTANT('90'X),    /* ASYN DIAL DISCON RECEIVED *
*     FRMNCLR BIT(8) CONSTANT('0A'X),    /* CLEARED BY CLEAR          *
*     FRMCU   BIT(8) CONSTANT('06'X),    /* CLEARED BY CLEAR/UNBIND   *
*     FRMCUN  BIT(8) CONSTANT('07'X);    /* CLRD BY CLEAR/UNBIND/NOTFY*
*        /* NCP SYSTEM RESPONSE FIELD */                           0054
*/* RESPONSE PHASE */                                              0054
*DCL  NCPPHSE0 BIT(2) CONSTANT('00'B), /* PHASE 0 RESPONSE            *
*     NCPPHSE1 BIT(2) CONSTANT('01'B), /* PHASE 1 RESPONSE            *
*     NCPPHSE2 BIT(2) CONSTANT('10'B), /* PHASE 2 RESPONSE            *
*     NCPPHSE3 BIT(2) CONSTANT('11'B); /* PHASE 3 RESPONSE            *
*                                                                  0054
*/* PHASE 0 NON ERROR RESPONSES */                                 0055
*DCL  NCPDAC   BIT(5) CONSTANT('00011'B), /* DEVICE ASSTN COMPLETE    *
*     NCPMTAID BIT(5) CONSTANT('00100'B), /* MTA DEVICE IDENTIFIED    *
*     NCPCAPM  BIT(5) CONSTANT('00101'B), /* CHANNEL ADAPTER TO PRIM  *
*                                         /* MODE                     *
*     NCPCASM  BIT(5) CONSTANT('00110'B), /* CHANNEL ADAPTER TO       *
*                                         /* SECONDARY MODE           *
*     NCPESYSS BIT(5) CONSTANT('00111'B), /* ENTERING SYSTEM SLOWDOWN *
*     NCPLSYSS BIT(5) CONSTANT('01000'B), /* LEAVING SYSTEM SLOWDOWN  *
*     NCPICOMP BIT(5) CONSTANT('01001'B), /* INIT COMPLETE            *
*     NCPMDR   BIT(5) CONSTANT('01010'B), /* MDR RECORD               *
*     NCPANSCT BIT(5) CONSTANT('11011'B), /* AUTO NETWORK SHUTDOWN    *
*                                         /* VIA CHANNEL TIMEOUT      *
*     NCPANSOP BIT(5) CONSTANT('11100'B), /* AUTO NETWORK SHUTDOWN    *
*                                         /* VIA OPERATIONS PANEL     *
*     NCPANSC  BIT(5) CONSTANT('11101'B), /* AUTO NETWORK SHUTDOWN    *
*                                         /* COMPLETE                 *
*     NCPMSLOG BIT(5) CONSTANT('11110'B), /* SERVICEABILITY AID -     *
*                                         /* MASS STORAGE LOGGING     *
*     NCPOFLO  BIT(5) CONSTANT('11111'B); /* OVERFLOW CONFIGURATION   *
*                                                                  0055
*/* PHASE 1,2,3 NON ERROR RESPONSES */                             0056
*DCL  NCPOK    BIT(5) CONSTANT('00000'B), /* COMMAND OK SO FAR        *
*     NCPLGR   BIT(5) CONSTANT('00001'B), /* LEADING GRAPHICS RECEIVED*
*     NCPOKD   BIT(5) CONSTANT('00010'B), /* OK SO FAR WITH DATE      *
*     NCPNPLQ  BIT(5) CONSTANT('00011'B), /* NEGITIVE POLL LIMIT      *
*                                         /* QUEUE OPTION             *
*     NCPOLTR  BIT(5) CONSTANT('00100'B), /* OLT REQUEST              *
*     NCPNPLNW BIT(5) CONSTANT('00110'B), /* NEGATIVE POLL LIMIT - -  *
*                                         /* NOWAIT OPTION            *
*     NCPLINTR BIT(5) CONSTANT('00111'B), /* LINE TRACE               *
*     NCPBSTAT BIT(5) CONSTANT('00101'B); /* BSC STATUS MESSAGE       *
*                                                                  0056
*/* PHASE 0 ERROR RESPONSES */                                     0057
*DCL  NCPCHERR BIT(5) CONSTANT('00000'B), /* CHANNEL ERROR            *
*     NCPIRID  BIT(5) CONSTANT('00001'B), /* INVALID RESOURCE ID      *
*     NCPICMD  BIT(5) CONSTANT('00010'B), /* INVALID COMMAND          *
*     NCPIMOD  BIT(5) CONSTANT('00011'B), /* INVALID MODIFIER         *
*     NCPRSIP  BIT(5) CONSTANT('00100'B), /* RESET OR DEACTIVATE IN   *
*                                         /* PROGRESS                 *
*     NCPDIACT BIT(5) CONSTANT('00101'B), /* DEVICE INACTIVE          *
*     NCPLIACT BIT(5) CONSTANT('00110'B), /* LINE INACTIVE            *
*     NCPCNVR  BIT(5) CONSTANT('00111'B), /* COMMAND NOT VALID FOR    *
*                                         /* RESOURCE                 *
*     NCPCSXE  BIT(5) CONSTANT('01000'B), /* COMMAND SYNTAX ERROR     *
*     NCPCNBS  BIT(5) CONSTANT('01001'B), /* COMMAND DID NOT CONFORM  *
*                                         /* TO BSC SPECIFICATIONS    *
*     NCPICDL  BIT(5) CONSTANT('01010'B), /* INVALID CONTROL DATA LENG*
*     NCPRSNP  BIT(5) CONSTANT('01011'B), /* RESET NOT PERFORMED      *
*     NCPGPA BIT(5) CONSTANT('01011'B), /* GEN. POLL ABORTED          *
*     NCPDNCR  BIT(5) CONSTANT('01100'B), /* DATA NOT CORE RESIDENT   *
*     NCPDSQL  BIT(5) CONSTANT('01101'B), /* DIAL SET QUEUE LIMIT     *
*                                         /* REACHED                  *
*     NCPSDLI  BIT(5) CONSTANT('01110'B), /* SWITCHED DEVICE LINE     *
*                                         /* INCOMPATIBILITY          *
*     NCPITXL  BIT(5) CONSTANT('01111'B), /* INVALID TEXT LENGTH      *
*     NCPICOD  BIT(5) CONSTANT('10001'B), /* INVALID CONTROL DATA     *
*     NCPINBTU BIT(5) CONSTANT('10010'B), /* INCOMPLETE BTU           *
*     NCPDATIU BIT(5) CONSTANT('10100'B), /* DATA IN USE              *
*     NCPICCM  BIT(5) CONSTANT('10101'B), /* INVALID CONTROL COMMAND  *
*                                         /* OR MODIFIER              *
*     NCPOLTRJ BIT(5) CONSTANT('10110'B), /* OLT COMMAND REJECTED     *
*     NCPMULTD BIT(5) CONSTANT('11000'B), /* MULTIPLE DIAL REQUESTS   *
*     NCPMODI  BIT(5) CONSTANT('11001'B), /* MODE INCONSISTENCY       *
*     NCPBUFNA BIT(5) CONSTANT('11010'B), /* BUFFER NOT AVAILABLE     *
*     NCPSYSS  BIT(5) CONSTANT('11011'B), /* COMMAND REJECTED --      *
*                                         /* SYSTEM IN SHUTDOWN       *
*     NCPERLS  BIT(5) CONSTANT('11100'B), /* COMMAND REJECTED --      *
*                                         /* ERROR LOCK SET           *
*     NCPCNOP  BIT(5) CONSTANT('11101'B), /* COMMAND REJECTED----     *
*                                         /* CHANNEL INOPERATIVE      *
*     NCPCRS   BIT(5) CONSTANT('11110'B), /* COMMAND RESET OR LINE    *
*                                         /* DEACTIVATED              *
*     NCPESC0  BIT(5) CONSTANT('11111'B); /* PHASE 0 ERROR ESCAPE     *
*/* EXTENDED RESPONSE (FINAL STATUS ) FOR PHASE 0 ERROR ESCAPE */  0058
*DCL  NCPIPLE  BIT(5) CONSTANT('00001'B), /* IPL LOCK ON     @XL03HDM *
*     NCPIVNE  BIT(5) CONSTANT('00101'B), /* INVALID NODE    @XL03HDM *
*     NCPTELE  BIT(5) CONSTANT('00100'B); /* TRUNK ERROR LOCK ON      *
*                                                                  0058
*/* PHASE 1,2,3 ERROR RESPONSES */                                 0059
*DCL  NCPDACHK BIT(5) CONSTANT('00000'B), /* DATA CHECK               *
*     NCPPIVR  BIT(5) CONSTANT('00001'B), /* POSSIBLE INTERVENTIONS   *
*                                         /* REQUIRED                 *
*     NCPIVR   BIT(5) CONSTANT('00010'B), /* INTERVENTION REQUIRED    *
*     NCPNPLW  BIT(5) CONSTANT('00011'B), /* NEGATIVE POLL LIMIT---   *
*                                         /* WAIT OPTION              *
*     NCPYCNT  BIT(5) CONSTANT('00100'B), /* YIELD TO CONTENTION      *
*     NCPDEBF  BIT(5) CONSTANT('00101'B), /* DEVICE ERROR--BSC STATUS *
*                                         /* TO FOLLOW                *
*     NCPBIDER BIT(5) CONSTANT('00110'B), /* BSC ID ERROR             *
*     NCPLTRT  BIT(5) CONSTANT('00111'B), /* LINE TRACE TERMINATED    *
*     NCPOCT   BIT(5) CONSTANT('01000'B), /* OLT COMMAND TERMINATED   *
*     NCPSSNS  BIT(5) CONSTANT('01001'B), /* SESSION NOT STARTED      *
*                                         /* BSC STATUS MESSAGE       *
*                                         /* AS NON ERROR RESPONSE    *
*     NCPESTAT BIT(5) CONSTANT('01010'B), /* BSC ERROR STATUS MESSAGE *
*     NCPDCREC BIT(5) CONSTANT('01100'B), /* DATA DISCONNECT RECEIVED *
*     NCPBRREC BIT(5) CONSTANT('10011'B), /* BREAK RECEIVED           *
*     NCPCRJS  BIT(5) CONSTANT('11000'B), /* CONTACT REJECTED ----    *
*                                         /* SESSION STARTED          *
*     NCPDDIC  BIT(5) CONSTANT('11001'B), /* DIAL DATA INCONSISTENCY  *
*                                         /* COMMAND RESET ----       *
*                                         /* AS PHASE 0 RESPONSE      *
*     NCPIPLR  BIT(5) CONSTANT('01101'B), /* IPL REQUIRED    @XL03HDM *
*     NCPTRNKE BIT(5) CONSTANT('01110'B), /* TRUNK ERROR     @XL03HDM *
*     NCPBLKR  BIT(5) CONSTANT('01111'B); /* REMOTE BLOCK RETURNED TO
*                                            HOST            @XL03HDM *
*                                                                  0059
*/* NCP EXTENTDED RESPONSE FIELD VALUES */                         0060
*/* FIRST STATUS VALUES */                                         0060
*DCL  NCPXCNTL  BIT(3) CONSTANT('000'B), /* CONTROL                   *
*     NCPXTXT   BIT(3) CONSTANT('001'B), /* TEXT                      *
*     NCPXTTXT  BIT(3) CONSTANT('010'B), /* TRANSPARENT TEXT          *
*     NCPXHEAD  BIT(3) CONSTANT('011'B), /* HEADING                   *
*     NCPXSPEC  BIT(3) CONSTANT('100'B), /* SPECIAL                   *
*     NCPXHCHK  BIT(3) CONSTANT('111'B); /* HARDWARE CHECK            *
*                                                                  0060
*/* FINAL STATUS VALUES WITH NORMAL FIRST STATUS IE CONTROL,TEXT,     *
*/* TRANSPARENT TEXT OR HEADING                                       *
*DCL  NCPXTIMT BIT(4) CONSTANT('0000'B), /* TIMEOUT                   *
*     NCPXCUTF BIT(4) CONSTANT('0010'B), /* CUTOFF                    *
*     NCPXABLK BIT(4) CONSTANT('0011'B), /* ABORT BLOCK               *
*     NCPXEHE  BIT(4) CONSTANT('0100'B), /* EOT HALTED ERP            *
*     NCPXDCE  BIT(4) CONSTANT('0101'B), /* DLE CONTROL END           *
*     NCPXWRAK BIT(4) CONSTANT('0110'B), /* WRONG ACK                 *
*     NCPXRSBE BIT(4) CONSTANT('1000'B), /* RECIEVED SUB BLOCK END    *
*     NCPXETX  BIT(4) CONSTANT('1001'B), /* END OF TEXT               *
*     NCPXETB  BIT(4) CONSTANT('1010'B), /* END OF BLOCK              *
*     NCPXENQ  BIT(4) CONSTANT('1011'B), /* ENQUIRY                   *
*     NCPXEOT  BIT(4) CONSTANT('1100'B), /* END OF TRANSMISSION       *
*     NCPXRVI  BIT(4) CONSTANT('1101'B), /* REVERSE INTERRUPT         *
*     NCPXPACK BIT(4) CONSTANT('1110'B), /* POSITIVE ACK              *
*     NCPXWACK BIT(4) CONSTANT('1111'B); /* WAIT ACK                  *
*                                                                  0061
*/* FINAL STATUS VALUES WITH SPECIAL FIRST STATUS */               0062
*/* TIMEOUT-- SAME AS NORMAL FIRST STATUS */                       0062
*                                                                  0062
*DCL  NCPXCREJ BIT(4) CONSTANT('0001'B), /* COMMAND REJECT            *
*     NCPXBPE  BIT(4) CONSTANT('0010'B), /* BUFFER POOL END           *
*     NCPXSLTD BIT(4) CONSTANT('0011'B), /* SELECTED                  *
*     NCPXRDS  BIT(4) CONSTANT('0100'B), /* RECEIVED DISCONNECT SIGNAL*
*     NCPXLDTA BIT(4) CONSTANT('0101'B), /* LOST DATA                 *
*     NCPXRSET BIT(4) CONSTANT('0110'B), /* RESET                     *
*     NCPXPLLD BIT(4) CONSTANT('0111'B), /* POLLED                    *
*     NCPXXSBE BIT(4) CONSTANT('1000'B), /* TRANSMIT SUB BLOCK END    *
*     NCPXESWR BIT(4) CONSTANT('1001'B), /* EOT SENT AFTER WACK RECVD *
*     NCPXRBT  BIT(4) CONSTANT('1010'B), /* RECEIVED BREAK IN TEXT    *
*     NCPXPLLS BIT(4) CONSTANT('1011'B), /* POLLING STOP              *
*     NCPXEOTS BIT(4) CONSTANT('1100'B), /* EOT SENT                  *
*     NCPXRCB  BIT(4) CONSTANT('1101'B), /* RECEIVED BREAK            *
*     NCPXDSCT BIT(4) CONSTANT('1110'B), /* DISCONNECTED              *
*     NCPXCNTD BIT(4) CONSTANT('1111'B); /* CONNECTED                 *
*                                                                  0062
*/* FINAL STATUS VALUES WITH HARDWARE CHECK FIRST STATUS */        0063
*DCL  NCPXEQUC BIT(4) CONSTANT('0000'B), /* EQUIPMENT CHECK           *
*     NCPXCSBC BIT(4) CONSTANT('0010'B), /* CSB CHECK                 *
*     NCPXADC  BIT(4) CONSTANT('0100'B), /* ADAPTER CHECK             *
*     NCPXUSER BIT(4) CONSTANT('0110'B), /* USER ERROR                *
*     NCPXMODC BIT(4) CONSTANT('1000'B), /* MODEM CHECK               *
*     NCPXDTOC BIT(4) CONSTANT('1010'B), /* DSR TURN ON CHECK         *
*     NCPXDTFC BIT(4) CONSTANT('1100'B), /* DSR TURN OFF CHECK        *
*     NCPXACUC BIT(4) CONSTANT('1110'B); /* ACU CHECK                 *
*                                                                  0063
*/* **** MISCELLANEOUS EQUATES ****                                  */
*DCL FSBLCWMX BIT(8) CONSTANT('FF'X),   /* MAX # LCCW'S LCPB         */
*    FRMCRJSS BIT(8) CONSTANT('08'X),  /* CONTACT RJCTED, SESN STARTED*
*    FSBNRMST BIT(8) CONSTANT('0C'X);   /* NORMAL I/O STATUS OF CE,DE *
*/*                                                                   *
*/*          SESSION FLAG VALUES                                      *
*DCL FSESCS    BIT(8) CONSTANT('01'X),  /* CONTACT SUCCESSFULL        *
*    FSESIS    BIT(8) CONSTANT('02'X),  /* INVITE SUCCESSFULL         *
*    FSESCR    BIT(8) CONSTANT('03'X),  /* CONTACT REJECTED           *
*    FSESDS    BIT(8) CONSTANT('04'X),  /* DISCONNECT SUCCESSFULL    */
*    FSESCWDS  BIT(8) CONSTANT('05'X),  /* CONTACT/WRITE/DISCONNECT  */
*                                       /* SUCCESSFULL               */
*    FSESIDS   BIT(8) CONSTANT('06'X),  /* INVITE/DISCONNECT SUCCESS */
*    FSESIADS  BIT(8) CONSTANT('07'X),  /* INVITE W. AUTO RESTART  0065
*                                          COMPLETED A CYCLE         */
*    FSESDF    BIT(8) CONSTANT('08'X),  /* COMM'D WITH DISCON. FAILED*/
*    FSESCF   BIT(8) CONSTANT('09'X),   /* WRITE WITH CONTACT AND DIS-
*                                          CONNECT FAILED             *
*    FSESIF    BIT(8) CONSTANT('0A'X),  /* INVITE WITH CONNECT FAILED*/
*    FSESSSDF  BIT(8) CONSTANT('0B'X),  /* WRITE WITH CONTACT AND DIS-
*                                       CONNECT FAILED TO END SESSION *
*    FSESISDF BIT(8) CONSTANT('0C'X),  /* INVITE STARTED SESSION BUT
*                                         DISCONNECT FAILED           *
*    FSESIR    BIT(8) CONSTANT('0E'X);  /* INVITE REJECTED - DISC SENT*
*/*                                                                   *
*/*       RH, TH, SENSE CONSTANTS                                     *
*DCL FSSEQSNS BIT(32) CONSTANT('00000000'X); /* SEQ NUM SENSE FIELD   *
*DCL FSSEQSLN BIT(8)  CONSTANT('04'X);       /* LENGTH OF ABOVE       *
*DCL FSEPRRH  BIT(24) CONSTANT('930100'X);   /* STAND-ALONE PACING    *
*                                            /* RESPONSE RH           *
*DCL FSDEONLY BIT(16) CONSTANT('0200'X);     /* DE ONLY STATUS        *
*DCL FSSNAMSK BIT(16) CONSTANT('3FFF'X);     /* MASK TO ZERO FIRST TWO
*                                               BITS OF STATUS        *
*/* LOGICAL CHANNEL COMMAND WORD                                      *
*/* ADD A DECLARE                                      003 10/18/74   *
*DCL  1  ISTLCCW BDY(WORD) BASED,                                  0071
*        2  LCCWOP    CHAR(1),         /* OPERATION CODE -CONTROL     *
*           3  LCCWSI BIT(1),          /* SESS INIT / START DIALOG FLG*
*           3  LCCWSD BIT(1),          /* SESS DISCON/END DIALOG FLG  *
*           3  LCCWRWOP BIT(6),        /* READ/WRITE OPERATION CODE   *
*              4  * BIT(1),            /* RESERVED                    *
*              4  LCCWSOP BIT(1),      /* SPECIAL OPERATION LIKE   0071
*                                         ERASE OR READ CONT          *
*              4  LCCWCTL BIT(4),      /* CONTROL TYPE                *
*                 5  LCCWMODE BIT(2),  /* MODE TYPE                   *
*                 5  LCCWTYPE BIT(2),  /* OPERATION TYPE              *
*        2  LCCWFLAG  CHAR(1),         /* FLAG BYTE                   *
*           3  LCCWCD BIT(1),          /* CHAIN DATA                  *
*           3  LCCWCC BIT(1),          /* CHAIN COMMAND               *
*           3  LCCWCKPT BIT(1),        /* SUPPRESS 3705 CHECK POINT
*                                         RECORD                      *
*           3  LCCWNTVC BIT(1),        /* DO NOT PERFORM VALCHEK      *
*           3  LCCWIDAT BIT(1),        /* LCCWDATA CONTAINS DATA      *
*           3  LCCWLSI BIT(1),         /* LCCW SYNCH INDICATOR        *
*              4  LCCWPER BIT(1),      /* POST=RESP                   *
*           3  LCCWRFI BIT(1),         /* REQUEST FEEDBACK INDICATOR  *
*           3  LCCWACI BIT(1),         /* ADDITION COMMAND INDICATOR  *
*        2  LCCWCNT FIXED(16),         /* DATA COUNT                  *
*        2  LCCWDATA PTR(31);          /* DATA ADDRESS OR IMMED. DATA *
*/* LOGICAL COMMAND CODES */                                       0072
*DCL  LXDQ     BIT(8) CONSTANT('3B'X), /* RESET DEVICE QUEUE          *
*     LXEC     BIT(8) CONSTANT('4B'X), /* RESET AT END OF COMMAND     *
*     LXO      BIT(8) CONSTANT('5B'X), /* RESET ORDERLY               *
*     LCCWPRGE BIT(8) CONSTANT('6B'X), /* PURGE                       *
*     LWH      BIT(8) CONSTANT('0F'X), /* WRITE HEADER INDI. 1ST BLOCK*
*     LWRVI    BIT(8) CONSTANT('1F'X), /* WRITE RVI                   *
*     LWNA     BIT(8) CONSTANT('2F'X), /* WRITE NEGATIVE ACK          *
*     LWAA     BIT(8) CONSTANT('3F'X), /* WRITE ALTERNATE ACK         *
*     LWPLG    BIT(8) CONSTANT('5F'X), /* WRITE ACK LEADING GRAPHICS  *
*     LWNLG    BIT(8) CONSTANT('6F'X), /* WRITE NACK LEADING GRAPHICS *
*     LSMDE    BIT(8) CONSTANT('4F'X), /* SET MODE                    *
*     LIFBM    BIT(8) CONSTANT('7F'X), /* INDIC 1ST BLOCK OF MESSAGE  *
*     LTEST    BIT(8) CONSTANT('FE'X), /* TEST LCCW                   *
*     LPRMPT   BIT(8) CONSTANT('13'X), /* PREEMPT LCCW                *
*     LRSTR    BIT(8) CONSTANT('43'X), /* RESTORE LCCW                *
*     LEXEC    BIT(8) CONSTANT('FF'X), /* SPECIAL CONTROL OPERATION   *
*     LREAD    BIT(2) CONSTANT('10'B),  /* READ TYPE LCCW             *
*     LWRITE   BIT(2) CONSTANT('01'B),  /* WRITE TYPE LCCW            *
*     LCNTRL   BIT(2) CONSTANT('11'B),  /* CONTROL TYPE LCCW          *
*     LRESET   BIT(4) CONSTANT('1011'B),/* RESET COMMANDS             *
*     LTIC     BIT(8) CONSTANT('08'X),  /* LOGICAL TIC                *
*     LWR      BIT(6) CONSTANT('000001'B),  /* WRITE CONVERSATIONAL   *
*     LWB      BIT(6) CONSTANT('000101'B),  /* WRITE BLOCK            *
*     LWM      BIT(6) CONSTANT('001001'B),  /* WRITE MESSAGE          *
*     LWT      BIT(6) CONSTANT('001101'B),  /* WRITE TRANSMISSION     *
*     LEWM     BIT(6) CONSTANT('011001'B),  /* ERASE/WRITE MESSAGE    *
*     LEWT     BIT(6) CONSTANT('011101'B),  /* ERASE/WRITE TRNSMSSN   *
*     LEAU     BIT(6) CONSTANT('010001'B),  /* ERASE ALL UNPROTECTED  *
*     LRB      BIT(6) CONSTANT('000110'B),  /* READ BLOCK             *
*     LRM      BIT(6) CONSTANT('001010'B),  /* READ MESSAGE           *
*     LRT      BIT(6) CONSTANT('001110'B),  /* READ TRANSMISSION      *
*     LRMOD    BIT(6) CONSTANT('010010'B),  /* READ MODIFIED          *
*     LRBUF    BIT(6) CONSTANT('010110'B),  /* READ BUFFER            *
*     LRCONT   BIT(6) CONSTANT('011010'B),  /* READ CONTINUOUS        *
*     LRPEP    BIT(6) CONSTANT('011110'B),  /* READ PERPETUAL         *
*     LCPYM    BIT(6) CONSTANT('101001'B),  /* COPY MESSAGE           *
*     LCPYT    BIT(6) CONSTANT('101101'B),  /* COPY TRANSMISSION      *
*     LD       BIT(8) CONSTANT('23'X),  /* DISCONNECT                 *
*     LDEC     BIT(8) CONSTANT('33'X),  /* DISCONNECT WITH END OF CALL*
*     LEOC     BIT(8) CONSTANT('53'X),  /* END OF CALL COMMAND        *
*     LXEL     BIT(8) CONSTANT('0B'X),  /* RESET ERROR LOCK           *
*     LXC      BIT(8) CONSTANT('1B'X),  /* RESET CONDITIONAL          *
*     LXI      BIT(8) CONSTANT('2B'X),  /* RESET IMMEDIATE            *
*     LC       BIT(8) CONSTANT('03'X),  /* CONTACT                    *
*     LWPA     BIT(8) CONSTANT('FD'X); /* WRITE POSITIVE ACK          *
*DCL  LMT      BIT(2) CONSTANT('11'B), /* TRANSMISSION MODE           *
*     LMS      BIT(2) CONSTANT('00'B), /* SPECIAL MODE LIKE CONV, EAU *
*     LMB      BIT(2) CONSTANT('01'B), /* BLOCK MODE                  *
*     LMM      BIT(2) CONSTANT('10'B); /* MSG OR CONTINUOUS MODE      *
*/* FOLLOWING EQUATES FOR  - PORT SOLICITOR (DIAL)                    *
*/* PORT SOLICITOR COMMAND CODES                                      *
*DCL PSOL    BIT(8) CONSTANT('FE'X), /* SPECIAL PORT SOLICITOR     0074
*                                       COMMAND                       *
*    STCTL    BIT(8) CONSTANT('01'X), /* START CONTROL                *
*    RESTCTL  BIT(8) CONSTANT('02'X), /* RESET & CONTROL - REDRIVE    *
*    STIPUT   BIT(8) CONSTANT('03'X); /* START INPUT                  *
*/*   FOLLOWING EQUATES FOR SDLC SUPPORT                              *
*DCL  LCCHOLD  BIT(8) CONSTANT('01'X),  /* HOLD                       *
*     LCCRHOLD BIT(8) CONSTANT('02'X),  /* RELEASE HOLD               *
*     LSEND    BIT(8) CONSTANT ('F1'X), /* SEND                       *
*     LCLEAR   BIT(8) CONSTANT ('F2'X), /* CLEAR                      *
*     LCRUD    BIT(8) CONSTANT ('F3'X), /* CLEAR, UNBIND              *
*     LCRUDNFY BIT(8) CONSTANT ('F4'X), /* CLEAR, UNBIND, NOTIFY      *
*     LNFY     BIT(8) CONSTANT ('F5'X), /* NOTIFY                     *
*     LRELCB   BIT(8) CONSTANT ('F6'X), /* RELEASE CB                 *
*     LRESTSR  BIT(8) CONSTANT ('F7'X), /* RESETSR                    *
*     LCLRNFY  BIT(8) CONSTANT('F8'X),  /* CLEAR/NOTIFY               *
*     LCHPUR   BIT(8) CONSTANT('F9'X);  /* PURGE                      *
*DCL  LCCWSIZE FIXED(8) CONSTANT(8);    /* LCCW SIZE                  *
*DCL  LRDS     BIT(8) CONSTANT('FF'X);  /* RECORD DEV STATS COMMAND   *
*DCL  LQUIS    BIT(8) CONSTANT('FE'X);  /* QUIESCE COMMAND            *
*                                                                  0079
*/* END OF ATBUILD                                                   */
*/* ATBUILD (ISTLCPB,ISTNMLPB,ISTFMCB)                               */
*                                                                  0079
*/*              LOGICAL CHANNEL PROGRAM BLOCK                       */
*/*                                                                  */
*/*  REVISIONS                                         007 05/19/75  */
*/*                                                                  */
*DCL  1  ISTLCPB BDY(WORD) BASED(LCPBPTR),                         0079
*        2 LCPTYPE CHAR(1),            /* TYPE CODE                  */
*        2 LCPLNGTH  PTR(8),           /* LENGTH IN BYTES            */
*        2 LCPREQTG CHAR(2),           /* LCPB REQ. TAG FIELD        */
*          3 LCPFLAGS BIT(8),          /* FLAG BYTE                  */
*            4 LCPZRT00 BIT(1),        /* LOGICAL ERROR FLAG         */
*            4 LCPZRT01 BIT(1),        /* CONTROL BLOCK ERROR        */
*            4 LCPZF001 BIT(1),        /* LCP START PROCESS FLAG     */
*              5 LCPZRT02 BIT(1),      /* I/O INITIATION DISABLED    */
*                6 LCPZRTL2 BIT(1),    /* END OF SCHEDULABLE BLOCK   */
*            4 LCPZF002 BIT(1),        /* LCP IN PROCESSING FLAG     */
*              5 LCPZRT03 BIT(1),      /* GO LOOK AT FMCB LINE STATE */
*                                      /* FIELD (REQ. TAG OVERLAY)   */
*                6 LCPZRTL3 BIT(1),    /* WRITE/READ REQUEST         */
*            4 LCPZF003 BIT(1),        /* LCP PROCESSING COMPLETE FLAG*
*              5 LCPZRT04 BIT(1),      /* STPR SET IN BDU FLAG       */
*                                      /* (REQ. TAG OVERLAY)         */
*                6 LCPZRTL4 BIT(1),    /* FEEDBACK REQUESTED         */
*            4 LCPZF004 BIT(1),        /* SINGLE LCCW/LCP FLAG       */
*              5 LCPZRT05 BIT(1),      /* FEEDBACK TO BE ROUTED TO   */
*                                      /* ICNCB FMCB (REQ. TAG       */
*                                      /* OVERLAY)                   */
*                6 LCPZRTL5 BIT(1),    /* DECREMENT SCHED COUNT ON DEQ*
*            4 LCPZRT06 BIT(1),        /* CRITICAL TEXT BLOCK        */
*                                      /* FLAG (REQ. TAG OVERLAY)    */
*              5 LCPZRTL6 BIT(1),      /* WRITE REQUEST              */
*            4 LCPZRT07 BIT(1),        /* BUFFER TRACE ACTIVE        */
*                                      /* FLAG (REQ. TAG OVERLAY)    */
*              5 LCPZRTL7 BIT(1),      /* SCHEDULING FLAG            */
*          3 LCPMNRCD CHAR(1),         /* LCP MINOR REJECTION CODE   */
*            4 LCPZRT08 BIT(1),        /* I/O TRACE ACTIVE FLAG      */
*                                      /* (REQ. TAG OVERLAY)         */
*              5 LCPZRTL8 BIT(1),      /* DEVICE END NOTIFICATION    */
*            4 LCPZRT09 BIT(1),        /* DIALOGUE SCHED DISABLED    */
*              5 LCPZRTL9 BIT(1),      /* CRITICAL TEXT FLAG         */
*            4 LCPZRT0A BIT(1),        /* SIMULATED CONTACT FLAG     */
*            4 LCPZRT0B BIT(1),        /* SIMULATED DISCONNECT FLAG  */
*        2 LCPCHAIN PTR(31),           /* APS CHAIN                  */
*          3 LCPCHAI1 PTR(8),                                      0079
*            4 LCPCHNG BIT(1),         /* GATE BIT                   */
*          3 LCPCHAI2 PTR(24),         /* ADDRESS FIELD              */
*        2 LCPRUCNT PTR(8),            /* NUMBER OF RU FOR THIS LCPB */
*          3 LCPZMIRC CHAR(1),         /* MINOR RETURN CODE          */
*        2 LCPFLAG2 CHAR(1),           /* SECOND FLAG BYTE           */
*          3 LCPPRFLG BIT(1),          /* PACING REQUIRED            */
*          3 LCPASYN  BIT(1),          /* ASYNCHRONOUS LCPB          */
*          3 LCPRSTRT BIT(1),          /* RESTART LCPB               */
*          3 LCPTLBPI BIT(1),          /* TPIOS BLOCK LCCW           */
*            4 LCPZRIMM BIT(1),        /* RESET IMMED REQUIRED ON ERR*/
*          3 LCPFID0  BIT(1),          /* FID0 TH INDICATOR FOR RECORD*
*            4 LCPEXRES BIT(1),        /* EXCEP. RESPONSE SPEC. 3270R*/
*          3 LCPDSTAT BIT(1),          /* DIALOGUE STATE BIT, 3270R  */
*                                      /* 0=REQ. REJECT,1=STATE ERROR*/
*          3 LCPFREE  BIT(1),          /* DEALLOCATE LCPB 3270R      */
*          3 LCPATOP  BIT(1),          /* ATOP LCPB  3270R           */
*        2 LCPSEQ   FIXED(16),         /* OUTBOUND SEQUENCE NUMBER   */
*          3 LCPRRCCT PTR(8),          /* COUNT OF RESPONSES RECEIVED*/
*          3 LCPRRCNT PTR(8),          /* COUNT OF RESPONSES REQUESTED*
*        2 LCPLCCW1 PTR(31),           /* ADDR FIRST LCCW FOR FID1   */
*        2 LCPCID CHAR(4) BDY(WORD),   /* COMMUNICATION ID           */
*          3 LCPSAF BIT(16),           /* SOURCE IDENTIFICATION      */
*          3 LCPDAF BIT(16),           /* DESTINATION IDENTIFICATION */
*        2 LCPNXLCW PTR(31),           /* ADDR NEXT LCCW             */
*        2 LCPFDBA PTR(31),            /* BTU ADDRESS                */
*          3 LCPFDB1 PTR(8),                                       0079
*          3 LCPFDB2 PTR(24),          /* ADDRESS FIELD              */
*        2 LCPTLBAD PTR(31),           /* ADDRESS OF TLB             */
*        2 LCPFOSN  BIT(16),           /* SEQUENCE NUMBER FIRST RU   */
*        2 LCPFSNCH FIXED(16),         /* 1ST SEQ NUMBER IN RU CHAIN */
*        2 LCPSTYPE FIXED(8),          /* LCPB SUB-TYPE X'FF' = RESET,*
*                                      /* X'00' = NON-RESET          */
*        2 LCPFLG1 CHAR(1),            /* FLAGS                      */
*          3 LCPRESET BIT(1),          /* A TPQUE WITH RESET QUEUED  */
*                                      /* THIS ELEMENT               */
*          3 LCPINTER BIT(1),          /* INTERNAL LCPB              */
*          3 LCPDIRPT BIT(1),          /* NOT SEND W/POST=SCHED=0    */
*          3 LCPREDRV BIT(1),          /* LCPB IS FOR REDRIVE        */
*          3 LCPSTLB  BIT(1),          /* TLB NOT TO BE FREED        */
*          3 LCPTRANS BIT(1),          /* DATA INCLUDES CONTROL CHARS*/
*          3 LCPRSV78 BIT(2),          /* RESERVED                   */
*        2 LCPLCCWC BIT(8),            /* COUNT OF LCCWS             */
*        2 LCPRSV77 CHAR(1),           /* RESERVED                   */
*        2 LCPFLCCW PTR(31),           /* ADDR OF FIRST LCCW         */
*          3 LCPUBFSB PTR(31),         /* UNBIND FSB ADDRESS         */
*        2 LCPCLREP PTR(31),           /* PTR TO CLEAR LCPB IN UCB   */
*/*  NOTE:  THE FOLLOWING FIELD - LCPLCCW MUST BE THE LAST FIELD     */
*/*         IN THIS CONTROL BLOCK.  THE CONTROL BLOCK ISTDCLCP HAS   */
*/*         FIELDS IN IT WHICH MUST BE CONTIGUOUS WITH LCPLCCW       */
*        2 LCPLCCW  CHAR(LENGTH(ISTLCCW)) BDY(WORD), /* FIRST LCCW   */
*          3 LCPRSTQH PTR(31),         /* RESET LCPB QUEUE HEADER    */
*          3 LCPPABA  PTR(31),         /* PAB POINTER                */
*            4 LCPRPHA  PTR(31),       /* RPH POINTER                */
*              5 LCPFTYPE BIT(1);      /* FEEDBACK TYPE              */
*/*     CONSTANTS FOR LCPTYPE                                         *
*DCL  LCRPHFT  BIT(1) CONSTANT('1'B);                              0080
*DCL  LCPABFT  BIT(1) CONSTANT('0'B);                              0081
*DCL LCPBFIRM BIT(8) CONSTANT('10'X);  /* LU FAILED, CLSDST, SCHED LOST
*                                         TERM, OPNDST MAY BE TRIED   *
*DCL LCPBTERM BIT(8) CONSTANT('11'X);  /* TERM RECEIVED,CLSDST,    0083
*                                         SCHED LOST TERM             *
*/*                                                                   *
*                                                                  0084
*DCL 1 LCPZTIE BDY(WORD) DEFINED(LCPCID), /* TOLTEP INTERFACE      0084
*                                         ELEMENT OVERLAY            */
*       2  LCPZFMCA PTR(31),           /* ACTIVE FMCB ADDRESS        */
*       2  LCPZSNA PTR(31),            /* SYMBOLIC NAME ADDRESS      */
*       2  LCPZSNAM CHAR(8) BDY(WORD), /* SYMBOLIC NAME              */
*          3  LCPZTRV1 PTR(31),        /* RESERVED FOR RESTORE LCP   */
*          3  LCPZTRV4 PTR(31);        /* RESERVED FOR RESTORE LCP   */
*DCL LCTYPE BIT(8) CONSTANT('04'X);                                0085
*DCL PLCPTYPE BIT(8) CONSTANT('28'X);  /* PURGE LCPB TYPE ID         */
*DCL LCPCLACB BIT(8) CONSTANT('04'X);  /* LCPB FROM CLOSE ACB        */
*DCL LSRSTYPE BIT(8) CONSTANT('FF'X);  /* RESET SUBTYPE              */
*DCL LCPETYPE BIT(8) CONSTANT('40'X);  /* EXTENDED LCPB TYPE ID      */
*/*                                                                  */
*/*  MINOR RETURN CODES                                              */
*/*                                                                  */
*DCL LCMCRSTR BIT(8) CONSTANT('F7'X),  /* MINOR RC FOR RESETSR       */
*    LCPMNEW  BIT(8) CONSTANT('02'X),  /* EARLY WARNING,             */
*                                      /* RECOVERY IN PROGRESS       */
*    LCPMNPF  BIT(8) CONSTANT('03'X),  /* PERM. I/O FAILURE          */
*    LCPMNAS  BIT(8) CONSTANT('04'X),  /* AUTO NETWORK SHUTDOWN      */
*    LCPMNCL  BIT(8) CONSTANT('06'X),  /* CLOSE/CLSDST OCCURED       */
*    LCPMNVD  BIT(8) CONSTANT('07'X),  /* VARY DEACTIVATE            */
*    LCPMNTF  BIT(8) CONSTANT('10'X),  /* TEMP RECORD DEVICE FAILURE */
*    LCPMNSF  BIT(8) CONSTANT('01'X),  /* TEMP BASIC FAILURE /       */
*    LCPMNTS  BIT(8) CONSTANT('11'X),  /* TERMINATE SELF             */
*    LCPMNAP  BIT(8) CONSTANT('0A'X),  /* APPL. ISSUED CLEAR         */
*    LCPMNPR  BIT(8) CONSTANT('0B'X),  /* PREEMPT                    */
*    LCPMNRE  BIT(8) CONSTANT('0C'X);  /* RESTORE                    */
*/* *****        NETWORK MANAGER CONTROL BLOCK                ****** */
*/*                                                                  */
*/*  REVISIONS                                         003 08/15/75  */
*/*                                                                  */
*DCL  1  ISTNMLPB BASED,                                           0091
*        2  NMLCPB CHAR(LENGTH(ISTLCPB)), /* INCLUDE PTIOS LCPB      */
*        2  NMLCW2 CHAR(LENGTH(ISTLCCW)), /* NETWORK MANAGER LCCW    */
*        2  NMLCW3 CHAR(LENGTH(ISTLCCW)), /* NETWORK MANAGER LCCW    */
*        2  NMCONTRL CHAR(8) BDY(WORD), /* CONTROL FIELDS            */
*           3  NMFNCTCD BIT(8),        /* NETWORK MNGR FUNCTION CODE */
*           3  NMPSRTRY CHAR(1),       /*PORT SOLICITOR I/O RTRY COUNT*
*           3  NMLCWCMD CHAR(2),       /* NMLPB NETWORK MNGR LCCW COM-
*                                         MANDS (PS) INDICATORS      */
*              4  NMINVT BIT(1),       /* INVITE                     */
*              4  NMCNTCT BIT(1),      /* CONTACT                    */
*              4  NMRESTI BIT(1),      /* RESET IMMEDIATE          0091
*                                        COMMAND OUTSTANDING         */
*              4  NMPURGE BIT(1),      /* PURGE (RESET)              */
*              4  NMDSEOC BIT(1),      /* DISCONNECT WITH END OF CALL*/
*              4  NMRDBLK BIT(1),      /* READ BLOCK                 */
*              4  NMFBDTA BIT(1),      /* LOAD/DUMP I/O REQUEST    0091
*                                         EXPECTS DATA RETURNED      */
*              4  NMSTCTLR BIT(1),     /* START CONTROL RESTART    0091
*                                         (FUNCTION CODE MUST BE   0091
*                                         NMFCD01)                   */
*              4  NMSTCTLI BIT(1),     /* START CONTROL INITIAL    0091
*                                         (FUNCTION CODE MUST BE   0091
*                                         NMFCD01)                   */
*              4  NMSTCTLF BIT(1),     /* START CONTROL FINAL      0091
*                                         (FUNCTION CODE MUST BE   0091
*                                         NMFCD01)                   */
*              4  NMVRYPRG BIT(1),     /* VARY DEACT IMMED ISS PURGE */
*              4  NMECRST  BIT(1),     /* RESET NOT DONE BY CLOSEDST */
*              4  NMRSV01 BIT(4),      /* NOT ASSIGNED               */
*           3  NMRDTEA PTR(31),        /* END CONTROL TERM RDRE ADDR */
*              4  NMNCSPL PTR(31),     /* ADDR OF NCSPL FOR REMOTE 0091
*                                         LOAD/DUMP SUBTASK          */
*        2  NMIPSEQ FIXED(8),          /* INVITE PERPETUAL COUNT     */
*        2  NMLRSV06 BIT(8),           /* RESERVED                   */
*        2  NMLRSV02 CHAR(2),          /* RESERVED                   */
*        2  NMECBPTR PTR(31),          /* ADDR OF LOAD/DUMP SUBTASK'S
*                                         ECB TO BE POSTED           */
*        2  NMLDRDTE PTR(31),          /* RDTE ADDR FOR CLOSE        */
*                                      /* UNDER ABEND                */
*        2  NMLRSV04 PTR(31),          /* RESERVED                   */
*        2  NMLRSV05 PTR(31);          /* RESERVED                   */
*DCL  NMLPBTYP BIT(8) CONSTANT('27'X), /* NETWORK MNGR LCPB TYPE CODE*/
*     NMFCD01 BIT(8) CONSTANT('01'X),  /* FIRST TIME START CONTROL   */
*     NMFCD02 BIT(8) CONSTANT('02'X),  /* REDRIVE PORT               */
*     NMFCD03 BIT(8) CONSTANT('03'X),  /* STRT INPUT (RESET(READ))   */
*     NMFCD04 BIT(8) CONSTANT('04'X),  /* END CONTROL                */
*     NMFCD05 BIT(8) CONSTANT('05'X),  /* LOAD/DUMP I/O REQUEST      */
*     NMFCD06 BIT(8) CONSTANT('06'X);  /* DUMP I/O REQUEST           */
*/* LOCKWORD FORMAT DSECT                                            */
*/*  INITIAL LEVEL                                     001 05/24/74  */
*DCL 1 ISTLOK BDY(WORD) BASED,                                     0093
*     2  LOKCT CHAR(1) BDY(WORD),       /* COUNT OF LOCK OWNERS      */
*     2  LOKCHN PTR(24),                /* ADDR OF NEXT RPH WAITING
*                                          ON LOCK                   */
*        3  LOKCHNG CHAR(3),            /* CHAIN/FLAGS               */
*           4 *        CHAR(2),                                    0093
*           4 *        BIT(8),                                     0093
*             5 *        BIT(6),                                   0093
*             5  LOKPRY BIT(1),         /* PRIORITY FLAG, 1 = ON     */
*             5  LOKXCL BIT(1);         /* EXCLUSIVE FLAG, 1 = ON    */
*DCL LOKXCL1  BIT(32) CONSTANT('00000001'X); /* CONSTANT TO TURN LOKXCL
*                                          ON                        */
*DCL LOKPRY1  BIT(32) CONSTANT('00000002'X); /* CONSTANT TO TURN LOKPRY
*                                          ON                        */
*DCL LOKCHN1  BIT(32) CONSTANT('00FFFFFC'X); /* CONSTANT TO TURN LOKXCL
*                                          AND LOKPRY OFF            */
*DCL LOKCT1   BIT(32) CONSTANT('01000000'X); /* CONSTANT TO MAKE LOKCT
*                                          = 1                       */
*DCL LOKCT255 BIT(32) CONSTANT('FF000000'X); /* CONSTANT TO CHECK FOR
*                                          MAX LOKCT (255)           */
*/* PROCESS ANCHOR BLOCK                                              *
*/*  REVISIONS                                         002 11/16/75  */
*/*       APAR      OZ19540    DCL PABSSN ABNORMAL           @ZA19540*/
*DCL  1  ISTPAB BDY(DWORD) BASED,                                  0099
*       2  PABWQCHN CHAR(8) BDY(DWORD), /* CPS SWAP FIELD FOR NEQ&CHN *
*        3  PABWEQA PTR(31) BDY(WORD), /* WORK ELEMENT QUEUE ADDRESS  *
*           4  PABWEQG BIT(1),         /* GATING BIT                  *
*           4  PABRSV01 BIT(7),        /* RESERVED                    *
*           4  PABWEQP PTR(24),        /* WKEL PTR                    *
*        3  PABCHAIN PTR(31) BDY(WORD), /* APS CHAIN                  *
*           4  PABCHNG BIT(1),         /* GATING BIT                  *
*           4  PABRESCH BIT(1),        /* RESCHEDULE PAB AT        0099
*                                         TPEXIT                      *
*           4  PABCDP BIT(1),          /* CLOSE DST/CHANGE IN PROGRESS*
*           4  PABUNCON BIT(1),        /* UNCONDITIONALLY RESCHEDULE
*                                         PAB AT TPEXIT               *
*           4  PABRESET BIT(1),        /* RESET ISSUED ON THIS PAB    *
*           4  PABRUNNG BIT(1),        /* PAB RUNNING                 *
*           4  PABDELAY BIT(1),        /* DELAY OPTION USED           *
*           4  PABRSV02 BIT(1),        /* RESERVED                    *
*           4  PABCHNGP PTR(24),       /* PSS CHAIN PTR               *
*        2  PABOFFST PTR(8),           /* OFFSET FROM CONTROL BLOCK   *
*        2  PABDVTA PTR(24),           /* DVT ADDRESS                 *
*        2  PABRPHFG PTR(31),          /* SCHED FLAGS AND RPH         *
*           3  PABFLAGS BIT(8),        /* SCHEDULING FLAGS            *
*              4  PABAPYP BIT(1),      /* APPLICATION IS A USER EXIT  *
*              4  PABPRIOR BIT(1),     /* IMMEDIATE PRIORITY          *
*              4  PABNORPR BIT(1),     /* NORMAL PRIORITY -           *
*                                      /* RESCHEDUALABLE              *
*              4  PABDYNAM BIT(1),     /* DYNAMIC                     *
*              4  PABSSN BIT(1) ABNL,  /* SYSTEM SERVICES    @ZA19540 *
*              4  PABERLCK BIT(1),     /* PAB ERROR LOCK FLAG         *
*                 5  PABERRLK BIT(1),  /* ERROR LOCK                  *
*                    6  PABERLOK BIT(1), /* ERROR LOCK                *
*/*    ABNORMAL TO ALLOW VARY COMPARE AND SWAP                        *
*              4  PABINHBT BIT(1) ABNL,/* 1=INHIBIT TRAFFIC,0=NO      *
*              4  PABNODQ BIT(1),      /* DO NOT DEQ WORK ELEMENT     *
*           3  PABRPHA PTR(24);        /* RPL HEADER ADDRESS          *
*DCL PABWEQG0 BIT(32) CONSTANT('7FFFFFFF'X),  /* TURN PABWEQG OFF     *
*    PABWEQG1 BIT(32) CONSTANT('80000000'X),  /* TURN PABWEQG ON      *
*    PABCHNG0 BIT(32) CONSTANT('7FFFFFFF'X),  /* TURN PABCHNG OFF     *
*    PABCHNG1 BIT(32) CONSTANT('80000000'X),  /* TURN PABCHNG ON      *
*    PABRESC0 BIT(32) CONSTANT('BFFFFFFF'X),  /* TURN PABRESCH OFF    *
*    PABRESC1 BIT(32) CONSTANT('40000000'X),  /* TURN PABRESCH ON     *
*    PABCDP0  BIT(32) CONSTANT ('DFFFFFFF'X), /* TURN PABCDP OFF      *
*    PABCDP1  BIT(32) CONSTANT ('20000000'X), /* TURN PABCDP ON       *
*    PABERLK0 BIT(32) CONSTANT('FBFFFFFF'X),  /* TURN PABERRLK ON     *
*    PABERLK1 BIT(32) CONSTANT('04000000'X),  /* TURN PABERRLK OFF    *
*    PABUNCO0 BIT(32) CONSTANT('EFFFFFFF'X),  /* TURN PABUNCON OFF    *
*    PABUNCO1 BIT(32) CONSTANT('10000000'X),  /* TURN PABUNCON ON     *
*    PABPRIR0 BIT(32) CONSTANT('BFFFFFFF'X),  /* TURN PAB PRIOR OFF   *
*    PABPRIR1 BIT(32) CONSTANT('40000000'X),  /* TURN PAB PRIOR ON    *
*    PABRST0  BIT(32) CONSTANT('F7FFFFFF'X),  /* TURN PABRESET OFF    *
*    PABRST1  BIT(32) CONSTANT('08000000'X),  /* TURN PABRESET ON     *
*    PABDLAY0 BIT(32) CONSTANT('FDFFFFFF'X),  /* TURN PAB DELAY OFF   *
*    PABDLAY1 BIT(32) CONSTANT('02000000'X);  /* TURN PAB DELAY ON    *
*/*   DEVICE CHARACTERISTICS TABLE - ORIGINATES IN RDT USED TO DEFINE
*    DEVICE CHARACTERISTICS IN DNCB,FMCB AND NIB  */               0101
*/*  INITIAL LEVEL                                     001 08/07/74  */
*DCL  1  ISTDEVCH  BDY(WORD)BASED,                                 0101
*        2  DEVSHCH BIT(8),            /* DEV SCHED CHARACTERISTICS  */
*           3  DEVCHAR  BIT(8),        /* COMPATIBILITY EXISTING CODE*/
*              4  DEVINPUT  BIT(1),    /* DEVICE IS FOR INPUT        */
*              4  DEVOTPUT  BIT(1),    /* DEVICE IS FOR OUTPUT       */
*              4  DEVCONVR  BIT(1),    /* DEVICE IS CONVERSATION     */
*                                      /* RN DEFINITION              */
*              4  DEVSUBND  BIT(1),    /* DEVICE HAS SCHEDULABLE     */
*                                      /*   SUB-NODES                */
*              4  DEVSPS BIT(1),       /* DEV IS START PRINT SENSITIVE*
*              4  DEVNNSPT BIT(1),     /* NODE HAS NETWRK MNGMNT SPRT*/
*              4  DEVCCTL BIT(1),      /* NODE HAS CONN CNTRL DEPENDCS*
*              4  DEVRSV01  BIT(1),    /* RESERVED                   */
*        2  DEVTCODE BIT(8),           /* DEVICE TYPE CODES          */
*           3  DEVCHAR2  BIT(8),       /* COMPATIBILITY EXISTING CODE*/
*        2  DEVMCODE BIT(8),           /* DEVICE MODEL CODE           *
*        2  DEVFLAGS BIT(8),           /*USE DEPENDS ON DEVSHCH VALUES*
*           3  DEVFCCTL BIT(4),        /* USED IF DEVICE REQ CONN CTRL*
*              4  DEVCBSC BIT(1),      /* RESET ORDERLY, BI-SYNCH  0101
*                                         TERMINALS EXCEPT 3270'S    */
*              4  DEVCSSL BIT(1),      /*RESET AT END OF COMMAND. 3270'
*                                         AND START/STOP EXCEPT TERMS
*                                         WITH REVERSE BREAK FEATURE */
*                                                                  0101
*              4  DEVCRVB BIT(1),      /* RESET IMMEDIATE. START/STOP
*                                         TERMS WITH REVERSE BREAK 0101
*                                         FEATURE                    */
*              4  DEVCSWL BIT(1),      /* 1=HIGHER NODE IS SWITCH CON-
*                                         NECTION, 0=LEASED CONNECTION*
*           3  DEVCHAR3 BIT(4),        /* COMPATIBILITY EXISTING CODE*/
*              4  DEVCATTN BIT(1),     /* TERMINAL CAN INTERRUPT WITH
*                                         ATTENTION                  */
*              4  DEVCCHEK BIT(1),     /* TERMINAL HAS CHECKING      */
*              4  DEVCSTCL BIT(1),     /* TERMINAL HAS STATION     0101
*                                         CONTROL                    */
*              4  DEVCSLPN BIT(1),     /* TERMINAL HAS SELECTOR PEN  */
*        2  DEVPHYSA CHAR(1),          /* PHYSICAL DEVICE ADDRESS    */
*        2  DEVRSV03 CHAR(3);          /* RESERVED                   */
*/* DEVICE TYPE CODES */                                           0102
*DCL DEV2740 BIT(8) CONSTANT ('01'X);  /* DEVICE IS A 2740           */
*DCL DEV2741 BIT(8) CONSTANT ('02'X);  /* DEVICE IS A 2741           */
*DCL DEV1050 BIT(8) CONSTANT ('03'X);  /* DEVICE IS A 1050           */
*DCL DEVTWX  BIT(8) CONSTANT ('04'X);  /* DEVICE IS A TWX            */
*DCL DEVWTTY BIT(8) CONSTANT ('05'X);  /* DEVICE IS A WTTY           */
*DCL DEV115A BIT(8) CONSTANT ('06'X);  /* DEVICE IS A 115A           */
*DCL DEV83B3 BIT(8) CONSTANT ('07'X);  /* DEVICE IS AN 83B3          */
*DCL DEV2715 BIT(8) CONSTANT ('08'X);  /* DEVICE IS A 2715           */
*DCL DEV2770 BIT(8) CONSTANT ('09'X);  /* DEVICE IS A 2770           */
*DCL DEV2780 BIT(8) CONSTANT ('0A'X);  /* DEVICE IS A 2780           */
*DCL DEV3735 BIT(8) CONSTANT ('0B'X);  /* DEVICE IS A 3735           */
*DCL DEV3780 BIT(8) CONSTANT ('0C'X);  /* DEVICE IS A 3780           */
*DCL DEV1130 BIT(8) CONSTANT ('0D'X);  /* DEVICE IS AN 1130          */
*DCL DEV1800 BIT(8) CONSTANT ('0E'X);  /* DEVICE IS AN 1800          */
*DCL DEV3125 BIT(8) CONSTANT ('11'X);  /* DEVICE IS A 3125           */
*DCL DEV3135 BIT(8) CONSTANT ('12'X);  /* DEVICE IS A 3135           */
*DCL DEVSYS3 BIT(8) CONSTANT ('13'X);  /* DEVICE IS SYS 3            */
*DCL DEV2701 BIT(8) CONSTANT ('14'X);  /* DEVICE IS A 2701 OZ05270   */
*DCL DEV2703 BIT(8) CONSTANT ('15'X);  /* DEVICE IS A 2703 OZ05270   */
*DCL DEV3704 BIT(8) CONSTANT ('16'X);  /* DEVICE IS A 3704           */
*DCL DEV3705 BIT(8) CONSTANT ('17'X);  /* DEVICE IS A 3705           */
*DCL DEV2980 BIT(8) CONSTANT ('18'X);  /* DEVICE IS A 2980           */
*DCL DEV3277 BIT(8) CONSTANT ('19'X);  /* DEVICE IS A 3277           */
*DCL DEV3284 BIT(8) CONSTANT ('1A'X);  /* DEVICE IS A 3284           */
*DCL DEV3286 BIT(8) CONSTANT ('1B'X);  /* DEVICE IS A 3286           */
*DCL DEV3275 BIT(8) CONSTANT ('1C'X);  /* DEVICE IS A 3275           */
*DCL DEV3741 BIT(8) CONSTANT ('1D'X);  /* DEVICE IS A 3741           */
*DCL DEV3747 BIT(8) CONSTANT ('1E'X);  /* DEVICE IS A 3747           */
*DCL DEVMTA  BIT(8) CONSTANT ('28'X);  /* DEVICE IS AN MTA           */
*DCL DEV2972 BIT(8) CONSTANT ('33'X);  /* DEVICE IS A 2972           */
*DCL DEV3271 BIT(8) CONSTANT ('34'X);  /* DEVICE IS A 3271           */
*DCL DEV3272 BIT(8) CONSTANT ('36'X);  /* DEVICE IS A 3272           */
*DCL DEVCC   BIT(8) CONSTANT ('35'X);  /* DEVICE IS A PHYSICAL UNIT  */
*DCL DEV1052 BIT(8) CONSTANT ('64'X);  /* DEVICE IS A 1052           */
*DCL DEV1053 BIT(8) CONSTANT ('65'X);  /* DEVICE IS A 1053           */
*DCL DEV1054 BIT(8) CONSTANT ('66'X);  /* DEVICE IS A 1054           */
*DCL DEV1055 BIT(8) CONSTANT ('67'X);  /* DEVICE IS A 1055           */
*DCL DEV1056 BIT(8) CONSTANT ('68'X);  /* DEVICE IS A 1056           */
*DCL DEV1057 BIT(8) CONSTANT ('69'X);  /* DEVICE IS A 1057           */
*DCL DEV1058 BIT(8) CONSTANT ('6A'X);  /* DEVICE IS A 1058           */
*DCL DEV1092 BIT(8) CONSTANT ('6B'X);  /* DEVICE IS A 1092           */
*DCL DEV1093 BIT(8) CONSTANT ('6C'X);  /* DEVICE IS A 1093           */
*DCL DEVLU   BIT(8) CONSTANT ('6D'X);  /* DEVICE IS A LOGICAL UNIT   */
*DCL DEV545  BIT(8) CONSTANT ('78'X);  /* DEVICE IS A 545            */
*DCL DEV1017 BIT(8) CONSTANT ('79'X);  /* DEVICE IS A 1017           */
*DCL DEV1018 BIT(8) CONSTANT ('7A'X);  /* DEVICE IS A 1018           */
*DCL DEV2203 BIT(8) CONSTANT ('7B'X);  /* DEVICE IS A 2203           */
*DCL DEV2213 BIT(8) CONSTANT ('7C'X);  /* DEVICE IS A 2213           */
*DCL DEV2265 BIT(8) CONSTANT ('7D'X);  /* DEVICE IS A 2265           */
*DCL DEV2502 BIT(8) CONSTANT ('7E'X);  /* DEVICE IS A 2502           */
*DCL DEV50   BIT(8) CONSTANT ('7F'X);  /* DEVICE IS A 50             */
*DCL DEV1255 BIT(8) CONSTANT ('80'X);  /* DEVICE IS A 1255           */
*DCL DEV5496 BIT(8) CONSTANT ('81'X);  /* DEVICE IS A 5496           */
*/* MODEL CODES */                                                 0155
*DCL DEVMOD1 BIT(8) CONSTANT ('00'X);  /* MODEL 1                    */
*DCL DEVMOD2 BIT(8) CONSTANT ('01'X);  /* MODEL 2                    */
*/*      VTAM PROCESS OPTION DEFINITION BLOCK                       */
*/*  USE RESERVED BIT                                  002 06/10/74 */
*/*  MOVED PROCPUID FROM BYTE 1 TO BYTE 2                  05/09/78 */
*DECLARE                                                           0157
*  1 ISTPROCD BDY(WORD) BASED,                                     0157
*    2 PROPROC  BIT(32),          /* PROCESSING OPTIONS             */
*      3 PROPROC1 BIT(8),         /* PROCESSING OPTIONS - 1         */
*        4 PROASYIP BIT(1),       /* 1=ASYIPX 0=NASYIPX             */
*        4 PROTRUNC BIT(1),       /* 1=TRUNC 0=KEEP                 */
*        4 PROXPOPT BIT(1),       /* 1=BINARY 0=NBINARY             */
*        4 PRODFASY BIT(1),       /* PROC-0=NDFASYX/1=DFASYX        */
*        4 PRORESPX BIT(1),       /* PROC-0=NRESPX/1=RESPX          */
*        4 PROCA    BIT(1),       /* 1=RECEIVE ANY CA/0=NO CA       */
*        4 PROCS    BIT(1),       /* 1=RECEIVE ANY CS/0=NO CS       */
*        4 PRORPLC  BIT(1),       /* 1=OPTION IN RPL/0=NO RPL       */
*      3 PROPROC2 BIT(8),         /* PROCESSING OPTIONS - 2         */
*        4 PRORSV03 BIT(1),       /* RESERVED                       */
*        4 PROERPO  BIT(1),       /* 1=NERPOUT 0=ERPOUT             */
*        4 PROLGOT  BIT(1),       /* 1=NLGOUT 0=LGOUT               */
*        4 PRORSV04 BIT(1),       /* RESERVED                       */
*        4 PRORSV05 BIT(1),       /* RESERVED                       */
*        4 PRONTFL  BIT(1),       /* 1=NTMFLL 0=TMFLL               */
*        4 PROEMLC  BIT(1),       /* 1=ELC 0=NELC                   */
*        4 PROCFTX  BIT(1),       /* 1=CONFTXT 0=NCONFTXT           */
*      3 PROPROC3 BIT(8),         /* PROCESSING OPTIONS - 3         */
*        4 PRORSV07 BIT(1),       /* RESERVED                       */
*        4 PROERPI  BIT(1),       /* 1=NERPIN 0=ERPIN               */
*        4 PROLGIN  BIT(1),       /* 1=NLGIN 0=LGIN                 */
*        4 PRONTO   BIT(1),       /* 1=NTIMEOUT 0=TIMEOUT           */
*        4 PROSUBLK BIT(1),       /* OFF = INHIBIT SUBBLOCKING      */
*                                 /* ON = ALLOW SUBBLOCKING         */
*        4 PROMONIT BIT(1),       /* 1=MONITOR 0=NMONITOR           */
*        4 PROMONT2 BIT(1),       /* 1=MONITOR, 0=NMONITOR          */
*        4 PROMONT3 BIT(1),       /* 1=CONT.MONIT.          @ZA19910*/
*                                 /* 0=STOP AFTER FIRST ATTN@ZA19910*/
*      3 PROPROC4 BIT(8),         /* PROCESSING OPTIONS - 4         */
*        4 PROEIB   BIT(1),       /* 1=EIB 0=NEIB                   */
*        4 PRORSV12 BIT(1),       /* RESERVED                       */
*        4 PRORSV13 BIT(1),       /* RESERVED                       */
*        4 PRORSV14 BIT(1),       /* RESERVED                       */
*        4 PROMODB  BIT(1),       /* BLOCK                          */
*        4 PROMODM  BIT(1),       /* MSG                            */
*        4 PROMODT  BIT(1),       /* TRANS (DEFAULT)                */
*        4 PROMODC  BIT(1);       /* CONT                           */
*/*                                                                 */
*/*                                                                 */
*DCL 1 PROPROCS BASED(ADDR(ISTPROCD)),  /* REDEFINITION OF         0158
*                                          OPTIONS FOR SETMODE MASK  */
*     2  PRORSV41 BIT(8),               /* PROCESSING OPTIONS - 1    */
*     2  PROSETMS CHAR(3),              /* SETMODE OPTION BYTES      */
*        3  PROSETM2 BIT(8),            /* PROCESSING OPTIONS - 2    */
*           4  PRORSV42 BIT(5),         /* RESERVED                  */
*           4  PROSNTFL BIT(1),         /* INHIBIT TIME FILL       0158
*                                          SS - ONLY                 */
*           4  PRORSV43 BIT(2),         /* RESERVED                  */
*        3  PROSETM3 BIT(8),            /* PROCESSING OPTIONS - 3    */
*           4  PROCPUID BIT(1),         /* ON=SUPPRESS PROMPTING     */
*           4  PRORSV44 BIT(2),         /* RESERVED                  */
*           4  PROSNTO BIT(1),          /* ON = BSC - EIB INSERTION
*                                          SS - INHIBIT TIMEOUT      */
*           4  PRORSV45 BIT(1),         /* RESERVED                  */
*           4  PROSMONT BIT(1),         /* ON = MONITOR FOR ATTN   0158
*                                          INTS - SS ONLY            */
*           4  PRORSV46 BIT(2),         /* RESERVED                  */
*        3  PROSETM4 BIT(8),            /* PROCESSING OPTIONS - 4    */
*           4  PROSCON  BIT(1),         /* ON = CONTINUOUS MODE    0158
*                                          (TPIOS ONLY)              */
*           4  PRORSV47 BIT(5),         /* RESERVED                  */
*           4  PROSRDEF BIT(2);         /* RECORD DEFINITION       0158
*                                          01 = BLOCK, 10 = MSG,   0158
*                                          11 = TRANSMISSION         */
*DCL PROSBLCK BIT(8) CONSTANT('01'X); /* TO INDICATE BLOCK MODE      */
*DCL PROSMSG  BIT(8) CONSTANT('02'X); /* TO INDICATE MSG MODE        */
*DCL PROSTRNS BIT(8) CONSTANT('03'X); /* TO INDICATE TRANSMISSION  0161
*                                          MODE                      */
*DCL PROSCONT BIT(8) CONSTANT('83'X); /* TO INDICATE CONTINUOUS MODE */
*DCL PROSANDC BIT(8) CONSTANT('7F'X); /* TO EQUATE CONT TO TRANS   0163
*                                          FOR 370X                  */
*DCL PROSORC  BIT(8) CONSTANT('80'X); /* TO RESTORE CONT INDICATOR   */
*/* FUNCTION MANAGEMENT CONTROL BLOCK                                 *
*/*  DELTA                                             005 05/15/75   *
*DCL  1  ISTFMCB BDY(DWORD) BASED(FMCBPTR),                        0165
*        2  FMCTYPE CHAR(1),           /* CONTROL TYPE BLOCK CODE     *
*        2  FMCLNGTH PTR(8),           /* LENGTH IN BYTES             *
*        2  FMCSAF CHAR(2),            /* ID OF SOURCE                *
*        2  FMCNXTCB PTR(31),          /* ADDR OF NEXT FMCB IN ACDEB  *
*        2  FMCTSKID PTR(31),          /* TASK IDENTIFIER             *
*                                      /* OS - TCB ADDR, DOS - PIK    *
*        2  FMCDVTA PTR(31),           /* ADDR OF DVT ENTRY           *
*                                      /* POINT TABLE                 *
*        2  FMCDNCBA PTR(31),          /* ADDR OF DNCB FOR THIS NODE  *
*        2  FMCFMCBA PTR(31),          /* ADDR OF NEXT FMCB FOR THIS  *
*                                      /* NODE                        *
*        2  FMCUSFLD CHAR(4) BDY(WORD), /* USE INFO. FIELD            *
*        2  FMCSTAT BIT(8),            /* SOURCE STATUS INFO.         *
*          3  FMCPRMTR BIT(1),         /* FMCB IS A PREEMPTOR         *
*          3  FMCPRMTE BIT(1),         /* FMCB IS A PREEMPTEE         *
*          3  FMCDAPT  BIT(1),         /* DEVICE ACCEPTED             *
*          3  FMCDEVOF BIT(1),         /* DEVICE VARIED OR SET BY     *
*                                      /* VARY DSACT.                 *
*          3  FMCDEDSC BIT(1),         /* DEVICE DISCONNECTED         *
*          3  FMCZF007 BIT(1),         /* BUFFER TRACE ACTIVE FLAG    *
*          3  FMCLTEAS BIT(1),         /* LOST TERM EXIT SCHEDULED FOR
*                                         THIS FMCB                   *
*          3  FMCVSP1  BIT(1),         /* SOFT PURGE IN PROGRESS      *
*        2  FMCSTAT1 BIT(8),           /* STATUS INFORMATION          *
*          3  FMCVSP2  BIT(1),         /* A USER REQUEST WAS SOFT  0165
*                                         PURGED                      *
*          3  FMCHPURG BIT(1),         /* SESSION HAS BEEN HARD PURGED*
*          3  FMCLTCLS BIT(1),      /* LOST TERM EXIT SCHED FOR CLSDST*
*          3  *        BIT(5),         /* RESERVED                    *
*        2  *        CHAR(1),          /* RESERVED                    *
*        2  FMCCMDFL CHAR(1),          /* COMMAND FLAGS               *
*           3  FMCCMDR  BIT(1),        /* 1=INITIATE SELF REVD        *
*           3  FMCVSNA  BIT(1),        /* FMCB FOR VARY SESSION       *
*           3  FMCSNA   BIT(1),        /* USER SESSION WITH NEW DEV'S *
*           3  *        BIT(5),        /* RESERVED                    *
*        2  FMCDEBA PTR(31),           /* ADDR OF ACDEB               *
*        2  FMCCMPS1 FIXED(32),                                    0165
*           3  FMCBUFLM BIT(16),       /* LIMIT OF QUEUED BUFFERS     *
*           3  FMCBUFNB BIT(16),       /* NUMBER OF QUEUED BUFFERS    *
*        2  FMCRPLH PTR(31),           /* ADDR OF HELD RPL            *
*        2  FMCVWT   PTR(31),          /* RPH ADDR FOR VARY WAIT      *
*        2 FMCPROCD CHAR(LENGTH(ISTPROCD)),/*PROCESS OPTION FROM NIB  *
*        2  FMCMODE CHAR(8),              /* MODE NAME FROM NIB       *
*        2  FMCFASYA PTR(31),             /* DFASY ANY Q CHAIN        *
*        2  FMCPAB1 CHAR(LENGTH(ISTPAB)) BDY(DWORD),/* CONTROL LAYER
*                                           OUTBOUND PAB              *
*        2  FMCPAB2 CHAR(LENGTH(ISTPAB)) BDY(DWORD),/* CONTROL LAYER
*                                            INBOUND PAB              *
*        2  FMCPAB3 CHAR(LENGTH(ISTPAB)) BDY(DWORD),/* SYNCH WITH  0165
*                                           OUTBOUND PAB              *
*        2  FMCPAB4 CHAR(LENGTH(ISTPAB)) BDY(DWORD),/* TPIOS INBOUND
*                                           PAB                       *
*        2  FMCPAB5 CHAR(LENGTH(ISTPAB)) BDY(DWORD),/* TPIOS ALL BUT
*                                           SYNCH WITH OUTBOUND PAB   *
*        2  FMCEXLST PTR(31),         /* ADDRESS OF CEXLST            *
*        2  FMCSIPA  PTR(31),         /* ADDRESS OF SESSION CONTROL
*                                                   INBOUND PAB       *
*           3 FMCSIP PTR(31),         /* SCAFFOLD FOR DCR***          *
*        2  FMCNXOSQ FIXED(32),       /* NEXT OUTBOUND SEQUENCE NUMS. *
*           3 FMCNXCFM FIXED(16),     /* NEXT OUTBOUND FM SEQ. NUMBER *
*            4  FMCOSSN  BIT(16),                                  0165
*           3 FMCNXOSC FIXED(16),     /* NEXT OUTBOUND SC SEQ. NUMBER *
*            4  FMCOASN  BIT(16),                                  0165
*        2  FMCISSN  FIXED(16),       /* INBOUND SYNC SEQUENCE NUMBER *
*        2  FMCRVD01 CHAR(1),         /* FOR CONTROL LAYER XXXX       *
*        2  FMCSSTAT CHAR(1),         /* SESSION-CPM STATUS           *
*           3 FMCSNBI  BIT(1),        /* SESSION NOT BOUND            *
*           3 FMCCIPI  BIT(1),        /* TPIOS CLEAR IN PROGRESS      *
*           3 FMCUIPI  BIT(1),        /* UNBIND IN PROGRESS           *
*           3 FMCSDTR  BIT(1),        /* SDT REQUIRED                 *
*           3 FMCBIP   BIT(1),        /* BIND IN PROGRESS             *
*           3 FMCNSALU BIT(1),        /* NO SESSION EXISTS BETWEEN THE*
*                                     /* APPLICATION AND THE LU       *
*           3 FMCPURCH BIT(1),        /* TPIOS PURGING CHAIN START    *
*           3 FMCCONF  BIT(1),        /* SICK FLAG                    *
*        2  FMCPACE  FIXED(32),       /* PACING COUNTS                *
*           3 FMCPACEN CHAR(1),       /* N VALUE OF PACING            *
*            4  FMCNPCNT BIT(8),                                   0165
*           3 FMCPACEM CHAR(1),       /* M VALUE OF PACING            *
*            4  FMCMPCNT BIT(8),                                   0165
*           3 FMCPACPC FIXED(8),      /* CURRENT PACING COUNT         *
*            4  FMCCPCNT BIT(8),                                   0165
*           3  FMCCVAL  CHAR(1),      /* CHAIN VALUES                 *
*            4 FMCOBCE  BIT(4),       /* CURRENT OUTBOUND             *
*             5 FMCFIRST BIT(1),      /* FIRST PIECE                  *
*             5 FMCMIDLE BIT(1),      /* MIDDLE PIECE                 *
*             5 FMCLAST  BIT(1),      /* LAST PIECE                   *
*             5 FMCONLY  BIT(1),      /* ONLY PIECE                   *
*            4 FMCIBCE  BIT(2),       /* CURRENT INBOUND              *
*            4 FMCPRCLS BIT(2),       /* PRESENTATION CLASS,       0165
*                                           01=RECORD                 *
*        2 FMCCLEXT,                  /* BASIC CONTROL LAYER EXTENSION*
*         3  FMCRPLA PTR(31),          /* ADDR OF APPLICATION RPL     *
*            4  FMCRPLRS PTR(8),       /* RESERVED                    *
*            4  FMCRPLPT PTR(24),      /* POINTER TO RPL              *
*         3  FMCFBA PTR(31),           /* ADDR OF FSB DATA QUEUE      *
*            4  FMCFBRSV PTR(8),       /* RESERVED                    *
*            4  FMCFBPTR PTR(24),      /* POINTER TO FSB              *
*         3  FMCRAFM PTR(31),          /* ADDR OF FMCB ON ACDEB READ  *
*                                      /* ANY QUEUE                   *
*         3  FMCDCLOK CHAR(LENGTH(ISTLOK)),  /* CNTRL LAYER FMCB LOCK *
*         3  FMCCMPS2 FIXED(32),                                   0165
*            4  FMCFLGA CHAR(1),       /* FLAG FIELD 1 (CONTROL       *
*                                      /* LAYER)                      *
*               5  FMCFLGA0 BIT(1),    /* DATA EXPECTED               *
*               5  FMCFLGA1 BIT(1),    /* IN DIALOGUE                 *
*               5  FMCFLGA2 BIT(1),    /* FMCB ON ACDEB FOR READ ANY  *
*               5  FMCFLGA3 BIT(1),    /* INCOMING DATA FLUSH         *
*               5  FMCFLGA4 BIT(1),    /* PURGE IN PROGRESS           *
*               5  FMCFLGA5 BIT(1),    /* BUFFER THRESHOLD EXCEEDED   *
*               5  FMCFLGA6 BIT(1),    /* READ DONE TO 3735 (ON)      *
*               5  FMCFLGA7 BIT(1),      /* RESERVED       @Z40GKDS  */
*            4  FMCFLGCL CHAR(1),      /* FLAG FIELD2 (RECORD CONTROL *
*                                      /* LAYER)                      *
*               5 FMCFLGB0 BIT(1),     /* FMCB ON ACDEB DFASY ANY Q   *
*               5 FMCFLGB1 BIT(1),     /* FMCB ON ACDEB REQ ANY Q     *
*               5 FMCFLGB2 BIT(1),     /* SATISFY DFASY SPEC.         *
*               5 FMCFLGB3 BIT(1),     /* SATISFY RESP SPEC.          *
*               5 FMCFLGB4 BIT(1),     /* RESERVED                    *
*               5 FMCFLGB5 BIT(1),     /* POST=SCHED OUTSTANDING      *
*               5 FMCFLGB6 BIT(1),     /* HOLD RESPONSE OUTSTANDING   *
*               5 FMCFLGB7 BIT(1),     /* RESERVED                    *
*             4  FMCPSCMD CHAR(1),       /* PORT OUTSTANDING COMMAND
*                                           FIELD                    */
*               5  FMCINVT BIT(1),       /* INVITE                   */
*               5  FMCCNTCT BIT(1),      /* CONTACT                  */
*               5  FMCRESTI BIT(1),      /* RESET IMMEDIATE        0165
*                                          COMMAND OUTSTANDING       */
*               5  FMCPURGE BIT(1),      /* PURGE(RESET)             */
*               5  FMCDSEOC BIT(1),      /* DISCONNECT END OF CALL   */
*               5  FMCRDBLK BIT(1),      /* READ BLOCK(START       0165
*                                           INPUT)                   */
*               5  FMCRSV88 BIT(2),      /* NOT DEFINED              */
*            4  FMCPSTAT CHAR(1),        /* PORT SOLICITOR STATUS FLAGS
*                                                                    */
*               5  FMCELKST BIT(1),      /* ERROR LOCK SET           */
*               5  FMCIDVFD BIT(1),      /* TPIOS COULD NOT FIND   0165
*                                           A                        */
*               5  FMCDDOCD BIT(1),      /* DIAL DISCONNECT OCCURRED */
*               5  FMCPCLSD BIT(1),      /* PORT BEING CLOSED BY PORT
*                                           SOLICITOR                */
*               5  FMCRSV89 BIT(4),      /* RESERVED                 */
*           3  FMCPRMRC CHAR(1),         /* PURGE MINOR RETURN CODE  */
*        2  FMCBHSET CHAR(1),            /* BHSET ID INDEX FOR     0165
*                                           CONNECTED APPLICATION    */
*        2  FMCSTAT2 BIT(8),             /* PURGE FLAGS              */
*           3  FMCVPIP BIT(1),           /* VARY PURGE IN PROGRESS   */
*           3  FMCZF00A BIT(1),          /* PURGE SUCCESSFULLY     0165
*                                           COMPLETED                */
*           3  FMCIAIO BIT(1),           /* INHIBIT ALL I/O          */
*           3  FMCALIPR BIT(1),          /* ALLOCATION IN PROGRESS   */
*           3  FMCCPIP BIT(1),           /* CLSDST PURGE IN        0165
*                                           PROGRESS                 */
*           3  FMCSEQI BIT(1),           /* SEQ/ID, 1=SEQUENCE NUMBER*/
*           3  FMCPSPIP BIT(1),       /*PORTSOL PURGE IN PROG@ZA30004*/
*           3  FMCCDPIP BIT(1),       /*CLSDST PURGE IN PROG @ZA30004*/
*        2  FMCLUSTR BIT(8),             /* COUNT OF START CTLS REC  */
*        2  FMCIPSEQ FIXED(8),           /* INVITE PERPETUAL COUNT   */
*        2  FMCMODEB CHAR(1),            /* MODE BYTE                */
*           3 FMCHOLD  BIT(1),           /* BUFFER FLOOD CONDITION   */
*           3 FMCCLEAR BIT(1),           /* CLEAR IN PROGRESS        */
*           3 FMCAPQ   BIT(1),           /* APPLICATION QUIESCED     */
*           3 FMCLUQ   BIT(1),           /* LU QUIESCED              */
*           3 FMCRSTSR BIT(1),           /* RESETSR IN PROGRESS      */
*           3 FMCRESOT BIT(1),           /* RESPONSE OUTSTANDING     */
*           3 FMCIBPRG BIT(1),           /* I/B PURGE CHAIN          */
*           3 FMCOBPRG BIT(1),           /* O/B PURGE CHAIN          */
*        2  FMCCLSEQ CHAR(4),            /* CL SEQUENCE NUMBERS      */
*           3 FMCTSQNO CHAR(2),          /* EXPECTED RESPONSE SEQ NR */
*           3 FMCBSQNO CHAR(2),          /* SQNO LAST RECEIVED       */
*        2  FMCCTLB  CHAR(1),            /* CTL TYPE OUTSTANDING     */
*        2  FMCRRESP CHAR(1),            /* RESPOND TYPE EXPECTED    */
*           3 FMCFPE   BIT(1),           /* 1=PATH END RESPONSE      */
*           3 FMCFEX   BIT(1),           /* 1=EXCEPTION RESPONSE     */
*           3 FMCFME   BIT(1),           /* 0=FUNCTION MNMT END RESP */
*           3 FMCFRRN  BIT(1),           /* 1=REACHED RECOVERY MODE  */
*           3 FMCTSLHA BIT(1),           /* 1=TERM SELF LAST HAS ARVD*/
*           3 *        BIT(3),           /* RESERVED                 */
*        2  FMCPSTRS CHAR(2),            /* CNT OUTSTANDING POST=RESP*/
*        2  FMCRSPLM CHAR(2),            /* RESPLIM VALUE            */
*        2  FMCSSEGQ PTR(31),            /* SYNC FLOW SEGMENT QUEUE  */
*           3  FMCSEGD  PTR(31),         /* SEGMENTED INPUT DATA QUE */
*        2  FMCLOCK CHAR(LENGTH(ISTLOK)), /* FMCB LOCK               */
*        2  FMCRDTPT PTR(31),            /* PTR TO RDTE AFTER FMCB 0165
*                                           DISCONNECT               */
*        2  FMCASEGQ PTR(31),            /* ASYN FLOW SEGMENT QUEUE  */
*        2  FMCFBAS  PTR(31),            /* DFASY DATA Q PTR         */
*           3 FMCZV002 PTR(31),          /* RESET ORDERLY LCPB ADDR  */
*             4 FMCFBXM  PTR(31),        /* PTR TO 1ST BUFFER OF TRAN*/
*        2  FMCFBRE  PTR(31),            /* RESP DATA Q PTR          */
*        2  FMCSNCTL CHAR(4),            /* SESSION CONTROL FIELD    */
*           3 FMCSCFLG CHAR(1),          /* FLAG BYTE                */
*             4 FMCIBSAC BIT(2),         /* SAVE IBSQAC              */
*             4 FMCOBSAC BIT(2),         /* SAVE OBSQAC              */
*             4 FMCLURO  BIT(1),         /* LU OWES RESPONSE         */
*             4 FMCAPRO  BIT(1),         /* APPL OWES RESPONSE       */
*             4 FMCSCCLO BIT(1),         /* CLEAR OUTSTANDING        */
*             4 FMCSTCTL BIT(1),         /* 1=CLUS ALREADY SCHED     */
*           3 FMCSCCTL CHAR(1),          /* SC LAST CTL RECEIVED     */
*           3 FMCSCSQN BIT(16),          /* SC LAST SEQ NR RECEIVED  */
*        2  FMCFRESA PTR(31),            /* RESP ANY Q CHAIN PTR     */
*/* END OF COMMON AREA...EXCEPT CONSTANTS                            */
*/*                                                                  */
*/*   VS1 TPIOS EXTENSION                                            */
*/*                                                                  */
*     2  FMCVS1,                        /* VS1 EXTENSION             */
*        3  FMCZFLAG BIT(32),           /* VS/1 TPIOS FLAGS          */
*           4  FMCZF001 BIT(1),         /* LSCB BTW ALLOCATION REQUIRED
*                                                                    */
*           4  FMCZF002 BIT(1),         /* I/O SCHEDULING TO BE    0165
*                                          SUSPENDED                 */
*           4  FMCZF003 BIT(1),         /* TPIOS WAIT IS FOR 370X  0165
*                                          SLOWDOWN                  */
*           4  FMCZF004 BIT(1),         /* READ OUTSTANDING FLAG     */
*           4  FMCZF005 BIT(1),         /* 1ST BSC (SWITCH) TRANS  0165
*                                          ACTION                    */
*           4   FMCZF006 BIT(4),        /* DEVICE SESSION STATUS IN
*                                          OUTBOUND SCHEDULING       */
*              5  FMCZFA06 BIT(1),      /* IN SESSION                */
*              5  FMCZFB06 BIT(1),      /* INVITE OUTSTANDING        */
*              5  FMCZFC06 BIT(1),      /* CONTACT OUTSTANDING       */
*              5  FMCZFD06 BIT(1),      /* DISCONNECT OUTSTANDING    */
*           4  FMCZF009 BIT(1),         /* RESET AT END OF COMMAND 0165
*                                          (LOCAL 3270)              */
*           4  FMCRSV10 BIT(1),         /* RESERVED                  */
*           4  FMCZF00B BIT(1),         /* FMCB PREEMPTED FLAG       */
*           4  FMCZF00C BIT(1),         /* 1ST BLK IN MSG FLAG (O/B) */
*           4  FMCZF00D BIT(1),         /* TRM RECEIVED FLAG         */
*           4  FMCZF00E BIT(1),         /* PREEMPT PENDING FLG       */
*           4  FMCZF00F BIT(1),         /* PREEMPT LCCW FLAG         */
*           4  FMCZF010 BIT(1),         /* RESET IN PROGRESS (AND  0165
*                                          SUSPENDED)                */
*           4  FMCZF011 BIT(1),         /* RESET ERROR LOCK INHIBITED*/
*           4  FMCZF012 BIT(1),         /* FMCB IN CONTACT QUEUE     */
*           4  FMCZF013 BIT(1),         /* FMCB IN INVITE QUEUE      */
*           4  FMCZF014 BIT(1),         /* LSCB FLAG                 */
*           4  FMCZF015 BIT(1),         /* RESET CLEANUP PHASE 1   0165
*                                          EXEC                      */
*           4  FMCZF016 BIT(1),         /* DNCB LOCK HELD            */
*           4  FMCZF017 BIT(1),         /* APPLICATION I/O SCHEDQ LOCK
*                                          INVITE                    */
*           4  FMCZF018 BIT(1),         /* EOT RECV'D FLAG           */
*           4  FMCZF019 BIT(1),         /* RESET ORDERLY IN PROGRESS
*                                          FLAG                      */
*           4  FMCZF020 BIT(1),         /* TPIOS CONT IN PROGRESS    */
*           4  FMCZF021 BIT(1),         /* DISCONNECT IN PROGRESS    */
*           4  FMCZF022 BIT(1),         /* DELAYED SCHEDQ LOCK       */
*           4  FMCZF023 BIT(1),         /* RESET IN PROCESS          */
*           4  FMCZF024 BIT(1),         /* PHASE-3 RECEIVED FOR      */
*           4  FMCZF025 BIT(1),         /* PREEMPT IN QUEUE          */
*        3  FMCZH001 FIXED(16),         /* FMCB LINE STATE FIELD     */
*        3  FMCZFCSQ FIXED(16),         /* SEQ NUMBER OF LAST 1ST    */
*                                       /* IN CHAIN RU               */
*        3  FMCSHEDQ PTR(31),           /* APPLICATION I/O SCHEDULE Q*/
*        3  FMCLBXM  PTR(31),            /* PTR TO LAST BUFF OF TRANS*/
*           4  FMCSHEAQ PTR(31),        /* ASYNCH I/O SCHEDULE QUEUE */
*              5  *        PTR(8),                                 0165
*              5  FMCASCDQ PTR(24),     /* ASYNCH I/O SCHEDULE QUEUE
*                                          ADDRESS FIELD             */
*        3  FMCLCPBQ PTR(31),           /* APPLICATION FEEDBACK    0165
*                                          QUEUE                     */
*           4  FMCLCPB1 PTR(8),                                    0165
*           4  FMCLCPB2 PTR(24),        /* ADDRESS FIELD             */
*        3  FMCLCPAQ PTR(31),           /* ASYNCH FEEDBACK WAIT QUEUE*/
*           4  *        PTR(8),                                    0165
*           4  FMCAWATQ PTR(24),        /* ASYNCH FEEDBACK WAIT QUEUE
*                                          ADDRESS FIELD             */
*        3  FMCZV001 PTR(31),           /* DIALOGUE SCHEDULE QUEUE 0165
*                                          CHAIN POINTER             */
*        3  FMCZX001 FIXED(8),          /* APPLICATION SESSION COUNT */
*        3  FMCZX002 FIXED(8),          /* RESERVED                  */
*        3  FMCZX003 FIXED(8),          /* I/O SCHEDULE QUEUE COUNT  */
*        3  FMCZX004 FIXED(8),          /* STPR SCHEDULE COUNT       */
*        3  FMCZX005 FIXED(8),          /* NEGATIVE RESP TO POLL CTR */
*        3  FMCZX006 FIXED(8),          /* RESET COUNT               */
*        3  FMCSEQ1 FIXED(8),           /* REQ TAG SEQ CTR           */
*           4  FMCSEQ1T BIT(4),         /* REQUEST TAG OVERFLOW      */
*           4  FMCSEQ1B BIT(4),         /* REQUEST TAG COUNT         */
*        3  FMCZFLG2 BIT(8),            /* VS/1 TPIOS FLAGS          */
*           4  FMCZF026 BIT(1),         /* DEAD PREEMPT REMEMBER     */
*           4  FMCZF027 BIT(1),         /* DATA RECEIVED FLAG        */
*           4  *        BIT(6),         /* RESERVED                  */
*        3  FMCLOCK2 CHAR(LENGTH(ISTLOK)), /* FMCB LOCK WORD         */
*        3  FMCZV004 PTR(31),            /* RESET FOR LCP FSB BFR ADDR
*                                                                    */
*        3  FMCCVFLG BIT(8),                                       0165
*           4 FMCVYRPH BIT(1),         /* THIS IS VARYS RPH          */
*           4 FMCPSRPH BIT(1),        /*WAIT ON PORTSOL PURGE@ZA30004*/
*           4 FMCCDRPH BIT(1),        /*WAIT ON CLSDST PURGE @ZA30004*/
*           4 FMCOWRPH BIT(1),         /* WAIT ON OWN PURGE  @ZA30004*/
*           4 FMCFRRPH BIT(1),         /* WAIT IN OCCFR      @ZA30004*/
*           4 FMCRSV0X BIT(3),                                     0165
*        3  FMCCLRPH PTR(24);            /* RPH WAITING ON PURGE     */
*DCL 1 FMCFLAG BASED(ADDR(FMCPSCMD)),  /* ADDITIONAL CONTROL       0166
*                                         LAYER FLAGS                */
*      2  FMCFLGB CHAR(1),             /* FLAG FIELD 2 (CONTROL    0166
*                                         LAYER)                     */
*         3  FMCFLGA8 BIT(1),          /* RESET CONDITIONAL        0166
*                                         IS ACTIVE                  */
*         3  FMCFLRSV BIT(7);          /* UNUSED                     */
*/*                                                                  */
*/* ***********   FMCB LINE STATE EQUATES           *************    */
*/*                                                                  */
*DCL FMCZHF01 BIT(16) CONSTANT('0005'X); /* NEG RESP TO POLLING    0167
*                                          (RESET PHASE)             */
*DCL FMCZHF11 BIT(16) CONSTANT ('0004'X); /* NEG RESP TO POLLING   0168
*                                          (DISC. PHASE)             */
*DCL FMCZHF21 BIT(16) CONSTANT ('0006'X);  /* NEG RESP TO POLLING  0169
*                                          (INVITE PHASE)            */
*DCL FMCZHF31 BIT(16) CONSTANT ('0000'X);  /* NULL (NORMAL) STATE    */
*DCL FMCZHF41 BIT(16) CONSTANT ('0007'X);  /* RESCHEDULE STATE       */
*DCL FMCZHF51 BIT(16) CONSTANT ('B007'X);  /* ERROR/RESCHEDULE STATE
*                                                                    */
*DCL FMCZHF61 BIT(16) CONSTANT ('9007'X);  /* LOCICAL ERROR STATE    */
*DCL FMCZHF71 BIT(16) CONSTANT ('A007'X);  /* PHYSICAL ERROR STATE   */
*DCL FMCZHF81 BIT(16) CONSTANT ('0008'X);  /* PREEMPT PENDING STATE  */
*DCL FMCZHRIP BIT(16) CONSTANT ('1000'X);  /* RESYNCH IN PROGRESS    */
*/* COMMON CONSTANTS FOLLOW                                          */
*DCL FMTYPE   BIT(8) CONSTANT('03'X);    /* TYPE CODE FOR FMCB       */
*DCL FMCOBCEI BIT(4) CONSTANT('0001'B);                            0178
*DCL FMCIBCEI BIT(2) CONSTANT('11'B);                              0179
*DCL FMCRCD   CHAR(8) CONSTANT('RECORD  '); /* EQUATE FOR RECORD MODE *
*DCL FMCPSOL  CHAR(8) CONSTANT('ISTYPSOL'); /* EQUATE FOR PORT SOLICIT*
*                                           /* SKELETON DVT           *
*                                                                  0182
*/* END OF ATBUILD                                                   */
*/* ATBUILD (ISTNCB,ISTDNCB,ISTRDT,ISTFDB)                           */
*                                                                  0182
*/* NODE CONTROL BLOCK */                                          0182
*/*  REVISIONS                                         005 07/01/75  */
*DCL  1  ISTNCB BDY(WORD) BASED,                                   0182
*        2  NCBTYPE CHAR(1),       /* CONTROL BLOCK TYPE CODE         *
*        2  NCBLNGTH PTR(8),       /* LENGTH IN BYTES                 *
*        2  NCBDAF CHAR(2),        /* ID OF DESTINATION               *
*        2  NCBRDTE PTR(31),       /* ADDR OF RDT ENTRY               *
*        2  NCBTSKID PTR(31),      /* TASK ID                         *
*        2  NCBNSNA PTR(31),       /* ADDR OF NEXT SCHEDULABLE NODE   *
*        2  NCBFMCBA PTR(31),      /* ADDR OF FIRST FMCB              *
*        2  NCBNCBA PTR(16),       /* CID OF NEXT SAME/LOWER LEVEL NODE
*                                                            @XL03HDM *
*        2  NCBNCSL PTR(16),       /* CID OF NEXT SAME-LEVEL NODE  0182
*                                                            @XL03HDM *
*        2  NCBFLAGS CHAR(4),      /* COMMON NCB FLAGS                *
*           3  NCBCSTAT BIT(8),    /* CONNECTION STATUS FLAG          *
*           3  NCBFRAS BIT(8),     /* RAS FLAG                        *
*              4  NCBFTRIO FIXED(8), /* I-O TRACE ACTIVE THIS NODE    *
*                 5  NCBFLTIO FIXED(8), /* I-O TRACE ACTIVE THIS NODE *
*           3  NCBFLAG1 CHAR(1),   /* NCB FLAGS                       *
*              4  NCBSNAI  BIT(1), /* OLD NODE                        *
*              4  NCBCONF  BIT(1), /* NODE SICK FLAG                  *
*              4  NCBRSTRT BIT(1), /* RECOVERY IN PROGRESS            *
*              4  NCBRSYNC BIT(1), /* C/R RESYNCH ON FIRST I/O        *
*                                  /* REQUIRED, 1=YES                 *
*              4  NCBTTF   BIT(1), /* C/R IGNORE TRICKLE TRAFFIC,     *
*                                  /* 1=YES                           *
*              4  NCBFORCE BIT(1), /* FORCED DEACT IN PROGRESS        *
*              4  *        BIT(2), /* RESERVED                        *
*           3  NCBNMLLN FIXED(8),  /* NUMBER OF LOWER LEVEL NODES     *
*        2  NCBRVPT1 CHAR(2),      /* COUNT OF LAST TRACE RECORDS     *
*        2  NCBLTRC  FIXED(15),    /* LOST TRACE RECORD COUNT         *
*        2  NCBFMCBP PTR(31),          /* ADDR OF PORT SOLICITOR FMCB *
*        2  NCBDEVCH CHAR(LENGTH(ISTDEVCH)), /* NODE DEV CHAR         *
*        2  NCBSWDAF CHAR(2),         /* REAL NETWORK ADDRESS OF */
*                                     /* TERM IN SW. SUBAREA     */
*        2  NCBRSV01 CHAR(2);         /* RESERVED                */
* DCL  LDTYPE BIT(8) CONSTANT('07'X); /* TYPE CODE FOR LDNCB     */
* DCL  ICTYPE BIT(8) CONSTANT('06'X); /* TYPE CODE FOR ICNCB     */
* DCL  DNTYPE BIT(8) CONSTANT('05'X); /* TYPE CODE FOR DNCB      */
* DCL  HCTYPE BIT(8) CONSTANT('14'X); /* HCNCB TYPE              */
* DCL  CCTYPE BIT(8) CONSTANT('15'X); /* CCNCB TYPE CODE         */
* DCL  LUTYPE BIT(8) CONSTANT('25'X); /* LUNCB TYPE CODE         */
* DCL  NCNOTRC  FIXED(8) CONSTANT(0); /* NO TRACE REQUIRED       */
*/* DESTINATION NODE CONTROL BLOCK */                              0190
*/*  CLEAN UP                                          002 07/18/74  */
*DCL  1  ISTDNCB BDY(DWORD) BASED(DNCBPTR),                        0190
*        2  DNCNCB CHAR(LENGTH(ISTNCB)),         /* COMMON NCB        *
*/*  THESE FIELDS MUST BE JUST BELOW (ISTNCB)                         *
*        2  DNCBHSET FIXED(8),     /* CURRENT DEVICE BH SET           *
*        2  DNCMODE CHAR(3),       /* CURRENT DEVICE PROC OPTIONS     *
*/*   VS1/VS2 EXTENSION                                               *
*        2  DNCOS,                     /* OS TPIOS EXTENSION          *
*           3  DNCZFLGS BIT(16),       /* DNCBFLAGS                  */
*              4  DNCZF001 BIT(1),     /* DEVICE PHYSICAL ERROR LOCK  *
*              4  DNCSESS  BIT(1),     /* DEVICE DIALOGUE STATUS FLAG *
*              4  DNCINVIT BIT(1),     /* INVITE OUTSTANDING FLAG     *
*              4  DNCCONT  BIT(1),     /* CONTACT OUTSTANDING FLAG    *
*              4  DNCDISC  BIT(1),     /* DISCONNECT OUTSTANDING FLAG *
*              4  DNCZRSCH BIT(1),     /* DEVICE RESCHEDULABLE FLAG   *
*              4  DNCZF002 BIT(1),     /* DIALOGUE SCHED IN PROGESS  */
*              4  DNCZF003 BIT(1),     /* LOGICAL ERROR FLAG          *
*              4  DNCZF004 BIT(1),     /* CONTACT FAILURE FLAG        *
*              4  DNCZF005 BIT(1),     /* DEDICATED READ FLAG         *
*              4  DNCZF006 BIT(1),     /* CONNECTION ESTABLISHED FLAG *
*              4  DNCZF007 BIT(1),     /* BUFFER TRACE ACTIVE FLAG    *
*              4  DNCPSOL  BIT(1),     /* =1 INDICATES DIAL IN/PORT
*                                         SOLICITOR, =0 INDICATES DIAL
*                                         OUT                @XL03HDM *
*              4  DNCZPSRD BIT(2),     /* PORT SOILCTOR READ TYPE     *
*              4  DNCZF008 BIT(1),     /* DATA PURGE FLAG             *
*           3  DNCBSCED CHAR (2),      /* INPUT AND OUTPUT BUFFER     *
*                                      /* SCHEDULING LIMITS           *
*              4  DNCLICP FIXED(8),    /* DEVICE SCHEDULING LIMIT     *
*              4  DNCACIP FIXED(8),    /* DEVICE CURRENT REQUEST COUNT*
*           3  DNCSESIQ PTR(31),       /* INVITE DIALOGUE INITIATION Q*
*           3  DNCSESCQ PTR(31),       /* CONTACT DIALOGUE INIT. QUEUE*
*           3  DNCZV000 PTR(31),       /* FREE LSCB QUEUE             *
*           3  DNCZX003 BIT(8),        /* TERMINAL SESSION COUNT      *
*           3  DNCZV001 PTR(24),       /* ACTIVE FMCB ADDRESS         *
*           3  DNCZX001 FIXED(8),      /* FREE LSCB COUNT             *
*           3  DNCZV002 PTR(24),       /* DIALG SCHEDULING FMCB ADDR  *
*           3  DNCZV003 PTR(31),       /* DNCB PAB DVT SAVE WORD     */
*           3  DNCZV004 PTR(31),       /* ADDRESS OF DIALOGUE SCHEDLR *
*           3  DNCZV005 PTR(31),       /* TASK ID SAVE WORD           *
*           3  DNCLOCK CHAR(LENGTH(ISTLOK)), /* DNCBLOCK WORD        */
*           3  DNCZC001 CHAR(LENGTH(ISTPAB)) BDY(DWORD);  /* TPIOS 0190
*                                                       FEEDBACK PAB */
*DCL DNCZPSRB BIT(2) CONSTANT('00'B),   /* PORT SOL RD BLK           */
*    DNCZPSRM BIT(2) CONSTANT('01'B),   /* PORT SOL RD MSG           */
*    DNCZPSRT BIT(2) CONSTANT('10'B),   /* PORT SOL RD X MISSION     */
*    DNCZPSRC BIT(2) CONSTANT('11'B);   /* PORT SOL RD CONT.         */
*/*              RESOURCE DEFINITION TABLE                           */
*/*  REVISIONS                                         013 07/01/75  */
*DCL                                                               0192
*1  ISTRPRE BDY(WORD) BASED,     /* COMMON PREFIX                    */
*   2  RPRNAME  CHAR(8),         /* RESOURCE NAME                    */
*   2  RPRCOMID FIXED(31),       /* COMMUNICATION ID                 */
*      3  RPRSAF BIT(16),        /* SOURCE ADDRESS FIELD             */
*      3  RPRDAF BIT(16),        /* DESTINATION ADDRESS FIELD-       */
*                             /* CONTAINS DAF OF CTERM IN PORT ENTRY */
*   2  RPRRLOCK CHAR(LENGTH(ISTLOK)),  /* RESOURCE LOCK              */
*   2  RPRELEN  FIXED(15),       /* CURRENT ENTRY LENGTH             */
*   2  RPRPELEN FIXED(15),       /* PREVIOUS ENTRY LENGTH            */
*   2  RPRENTRY BIT(8),          /* FLAG FIELD 1 (ENTRY TYPE)        */
*   2  RPRFLAGA BIT(8),                                            0192
*      3  RPRACT BIT(1),         /* ACTIVE                           */
*      3  RPRINV BIT(1),         /* INVALID                          */
*      3  RPRTIED BIT(1),        /* TIED                             */
*      3  RPRENTBF BIT(1),       /* BUFFER TRACE THIS NODE           */
*      3  RPRENTIO BIT(1),       /* RESERVED                         */
*      3  RPRENTED BIT(1),       /* LAST ENTRY IN RDT SEGMENT        */
*      3  RPRVRYPD BIT(1),       /* VARY PENDING ON ENTRY            */
*      3  RPRLIVE  BIT(1),       /* RESOURCE IS LIVE                 */
*   2  RPRFLAGB BIT(8),          /* FLAG FIELD                       */
*      3  RPRENTVH BIT(1),       /* WHEN 1, ENTRY IS A VTAM HEADER   */
*      3  RPRENTVT BIT(1),       /* WHEN 1, ENTRY IS VTAM            */
*      3  RPRAOPN BIT(1),        /* NODE OPENABLE BY APPLICATION     */
*      3  RPRVIODN BIT(1),       /* VARY I/O HAS BEEN DONE           */
*      3  RPRONLIN BIT(1),       /* NODE VARIED ONLINE               */
*      3  RPRHLVPD BIT(1),       /* VARY PENDING IN HIGHEST        0192
*                                   LEVEL NODE                       */
*      3  RPRVYIMM BIT(1),       /* VARY IMMEDAITE ISSUED FOR NODE   */
*      3  RPRINTST BIT(1),       /* DEVICE IN TEST MODE              */
*   2  RPRCAUSE BIT(8),          /* FLAGS INDICATING CAUSE OF ENTRY
*                                                      INVALIDATION  */
*      3  RPRNOSRT BIT(1),       /* RPRINV SET BECAUSE NO SRTE BUILT */
*      3  RPRCRCPT BIT(1),       /* C/R CHECKPOINT ACTIVE 1=ACTIVE   */
*      3  RPRRSYNC BIT(1),       /* C/R RE-SYNC ON FIRST I/O         */
*                                /* REQUIRED: 1=YES                  */
*      3  RPRRSV03 BIT(5),       /* RESERVED                         */
*   2  RPRPEPCT FIXED(15),       /* VARY PENDING COUNTER             */
*   2  RPRTIOCT FIXED(8),        /* I/O TRACE COUNT                  */
*   2  RPRHDTYP BIT(8),          /* HEADER TYPE                      */
*   2  RPRLGONF PTR(31),         /* SIM. LOGON CHAIN FORWARD PTR     */
*   2  RPRLGONB PTR(31),         /* SIM. LOGON CHAIN BACKWARD PTR    */
*   2  RPRNSNEA PTR(31),         /* NEXT SCHEDULABLE NODE ENTRY ADDR */
*   2  RPRNCBA PTR(31),          /* ADDR OF ASSOCIATED NCB FOR     0192
*                                    OPENED NODES                    */
*   2  RPRDEVCH CHAR(LENGTH(ISTDEVCH)),  /* DEVICE CHARACTERISTICS   */
*   2  RPRRVPT1 PTR(31),         /* RESERVED                         */
*   2  RPRSTPCT FIXED(15),       /* COUNT OF SHOULDER TAPS           */
*   2  RPRSWDAF BIT(16),         /* SWITCHED DAF                     */
*   2  RPRPTHCT FIXED(8),        /* COUNT OF AVAILABLE PATHS       0192
*                                   TO THIS DEVICE                   */
*   2  RPRFLAGD CHAR(1),         /* FLAG BYTE                        */
*      3 RPRLTASN BIT(1),        /* LINE TRACE ACTIVE = 1            */
*      3 RPRCONCT BIT(1),        /* PHYSICAL CONNECTION EXISTS       */
*      3 RPRRSON  BIT(1),        /* RESET ONLINE                     */
*      3 RPRACTP  BIT(1),        /* ACTIVATE IN PROGRESS             */
*      3 RPRCONP  BIT(1),        /* CONTACT IN PROGRESS              */
*      3 RPRRSV05 BIT(2),        /* RESERVED                         */
*      3 RPRINIMM BIT(1),        /* ON=INACTIVATE IMMED. IN PROGRESS */
*   2  RPRFLAGC BIT(8),          /* FLAG FIELD                       */
*      3  RPRCLVPD BIT(1),       /* THIS ENTRY HAS BEEN CLOSED       */
*   2  RPRCONID CHAR(9);         /* CONTROL BLOCK ID                 */
*                                                                  0192
*                                                                  0192
*/* RPRENTRY - FOLLOWING EQUATES ARE FOR THE VARIOUS ENTRY TYPES     */
*DCL RPRENTCM BIT(8) CONSTANT('90'X);  /* ENTRY IS A COMPONENT       */
*DCL RPRENTIN BIT(8) CONSTANT('82'X);  /* ENTRY IS INTERMEDIATE NODE */
*DCL RPRENTTR BIT(8) CONSTANT('80'X);  /* ENTRY IS A TERMINAL        */
*DCL RPRENTUT BIT(8) CONSTANT('75'X);  /* ENTRY IS UTERM             */
*DCL RPRENTCL BIT(8) CONSTANT('70'X);  /* ENTRY IS A CLUSTER         */
*DCL RPRENTLN BIT(8) CONSTANT('50'X);  /* ENTRY IS A LINE            */
*DCL RPRENTLH BIT(8) CONSTANT('03'X);  /* ENTRY IS A LOCAL HEADER    */
*DCL RPRENTGP BIT(8) CONSTANT('30'X);  /* ENTRY IS A GROUP           */
*DCL RPRENTLC BIT(8) CONSTANT('45'X);  /* ENTRY IS A LOCAL DEVICE    */
*DCL RPRENTAH BIT(8) CONSTANT('02'X);  /* ENTRY IS APPLICATION HEADER*/
*DCL RPRENTAP BIT(8) CONSTANT('55'X);  /* ENTRY IS APPLICATION       */
*DCL RPRENTDS BIT(8) CONSTANT('20'X);  /* ENTRY IS LCDO            0204
*                                         (DIALSET)                  */
*DCL RPRENTRN BIT(8) CONSTANT('01'X);  /* ENTRY IS THE RN            */
*DCL RPRENTCC BIT(8) CONSTANT('71'X);  /* ENTRY IS A PU              */
*DCL RPRENTLU BIT(8) CONSTANT('81'X);  /* ENTRY IS LOGICAL UNIT      */
*DCL RPRENTSW BIT(8) CONSTANT('04'X);  /* ENTRY IS SWITCHED          */
*                                      /* SUBAREA HEADER             */
*DCL RPRENTLS BIT(8) CONSTANT('05'X);  /* ENTRY IS LOCAL             */
*                                      /* SUBAREA HEADER             */
*DCL RPRENTPX BIT(8) CONSTANT('72'X);  /* ENTRY IS A PUX             */
*DCL RPRENTLX BIT(8) CONSTANT('10'X);  /* ENTRY IS A LUX             */
*DCL RPRENTDA BIT(8) CONSTANT('51'X);  /* ENTRY IS A DAN             */
*                                                                  0212
*                                                                  0212
*/* THE FOLLOWING IS A PREFIX FOR ALOCATION ENTRIES                  */
*/*   ISTRCL-CLUSTER,ISTRTR-TERMINAL,ISTRCM-COMPONENT                */
*                                                                  0213
*DCL                                                               0213
*1  ISTRCPRE BDY(WORD) BASED,    /* LEVEL 1 DECLARE                  */
*   2  RCPPRE  CHAR(LENGTH(ISTRPRE)),      /* COMMON PREFIX          */
*   2  RCPICELN PTR(31),         /* PTR LOGON ICE QUEUE              */
*   2  RCPLNAPA PTR(31),         /* PTR APLICATION ENTRY FOR SIMLOGON*/
*   2  RCPICEAQ PTR(31),         /* PTR ACQUIRE ICE QUEUE            */
*   2  RCPACETR PTR(31),         /* PTR ACE QUEUE                    */
*   2  RCPBHSI1 CHAR(1),         /* GEN'D BHSET ID                   */
*   2  RCPBHSI2 CHAR(1),         /* OVERRIDING BHSET ID SPECIFIED  0213
*                                   BY USER                          */
*   2  RCPBFLIM PTR(8),          /* BUFFER LIMIT                     */
*   2  RCPPMODE CHAR(1),         /* PERMISSABLE MODES                */
*      3 RCPRBASC BIT(1),        /* 1= BASIC OK                      */
*      3 RCPRRECD BIT(1),        /* 1= RECORD OK                     */
*      3 *        BIT(6),        /* RESERVED                         */
*   2  RCPLGNIN CHAR(20) BDY(WORD), /* INIT LOGON DATA               */
*      3 RCPLGNAP CHAR(8),       /* APPL FOR VTAM SIMLOGON           */
*      3 RCPLGNCT CHAR(8),       /* NAME OF LOGON CHAR TABLE         */
*      3 RCPINTA  PTR(31),       /* ADDR OF INTERPRET TABLE          */
*   2  RCPRSV03 PTR(31),         /* RESERVED FOR C/R                 */
*   2  RCPRSV04 PTR(31),         /* RESERVED FOR C/R                 */
*   2  RCPRSV05 PTR(31);         /* RESERVED FOR C/R                 */
*                                                                  0213
*                                                                  0213
*DCL                                                               0214
*1  ISTRDT BDY(WORD) BASED,      /* LEVEL 1 DECLARE                  */
*   2  RDTPRE CHAR(LENGTH(ISTRPRE)), /* ENTRY PREFIX                 */
*   2  RDTPLEN CHAR(4)BDY(WORD), /* PRIORITY AND LENGTH FIELD        */
*      3  RDTPRIOR,              /* DETERMINES SEGMENT TYPE          */
*         4  * BIT(3),           /*    NOT USED                      */
*         4  RDTPRIAP BIT(1),    /*    APPLICATION SEGMENT           */
*         4  RDTPRILC BIT(1),    /*    LOCAL SEGMENT                 */
*         4  RDTPRIRN BIT(1),    /*    RN SEGMENT                    */
*         4  RDTPRISW BIT(1),    /*    SWITCHED SEGMENT              */
*         4  RDTPRILS BIT(1),    /*    LOCAL SUBAREA SEGMENT         */
*      3  RDTLEN FIXED(24),      /* LENGTH OF RDT                    */
*   2  RDTFORW PTR(31),          /* FOREWARD POINTER                 */
*   2  RDTBACK PTR(31),          /* BACKWARD POINTER                 */
*   2  RDTFLAGS BIT(16),         /* SEGMENT FLAGS,UNUSED/REUSED      */
*   2  RDTCTSNT FIXED(15),       /* COUNT OF SNT ENTRIES FOR       0214
*                                   SEGMENT                          */
*   2  RDTMAXID PTR(8),          /* MAXIMUM NODE ID FOR            0214
*                                   NETWORK                          */
*   2  RDTNODID PTR(8),          /* NODE ID FOR THIS SEGMENT         */
*   2  RDTLGCT  PTR(8),          /* COUNT OF LOGONS OUTSTANDING      */
*   2  RDTFLAGB BIT(8),          /* FLAG BYTE                        */
*      3 RDTOUERP BIT(1),        /* 1 = REPEAT ERP                   */
*      3 RDTPRGDN BIT(1),        /* 1 = PURGE ISSUED                 */
*      3 RDTCTPGD BIT(1),        /* 1 = CONTACT PURGED               */
*      3 RDTCTCFL BIT(1),        /* HIGHER FAILURE-CONTACT FLUSHED   */
*      3 RDTBHSET BIT(1),        /* BHSET REQUIRED                   */
*      3 RDTRSV01 BIT(3),        /* RESERVED                         */
*   2  RDTVPAB  PTR(31),         /* ADDR OF VARY PAB                 */
*   2  RDTEPAB  PTR(31),         /* ADDR OF ERP PAB                  */
*   2  RDTDPAB  PTR(31),         /* ADDR OF DUMP/LOAD/RESTART PAB    */
*   2  RDTTPAB  PTR(31),         /* TOLTEP SSCP PAB                  */
*   2  RDTVYRPH PTR(31),         /* @ OF VARY RPH WAITING            */
*                                /* FOR RESTART COMPLETION           */
*      3 RRNVYRPH PTR(31),       /* DELETE ALIAS IN NEXT             */
*                                /* FIRST SNA/2 BUILD                */
*   2  RDTSTCNT PTR(8),          /* ACTIVE SUBNODE COUNT             */
*      3 RRNSTCNT PTR(8),        /* DELETE ALIAS IN NEXT             */
*                                /* FIRST SNA/2 BUILD                */
*   2  *        CHAR(3),         /* RESERVED                         */
*   2  RDTCRSDS CHAR(8),         /* C/R DATA SET IDENTIFIER          */
*                                /* BLANK IMPLIES NOT SPECIFIED      */
*   2  RDTCRSPW CHAR(8),         /* C/R DATASET PASSWORD             */
*                                /* BLANK IMPLIES NOT SPECIFIED      */
*   2  RDTVSRPL PTR(31);         /* C/R PTR TO VSAM RPL              */
*                                                                  0214
*                                                                  0214
*DCL                                                               0215
*1  ISTRAP BDY(WORD) BASED,      /* APPLICATION ENTRY                */
*   2  RAPPRE CHAR(LENGTH(ISTRPRE)), /*  USE ISTRPRE DSECT           */
*   2  RAPACBA PTR(31),          /*   POINTER TO ACB                 */
*   2  RAPACDEB PTR(31),         /*  POINTER TO ACBDEB               */
*   2  RAPAPPWD CHAR(8),         /* APPLICATION PASSWORD             */
*   2  RAPICELG PTR(31),         /* ANCHOR FOR LOGON ICE TO APLICATION*
*   2  RAPICEAC PTR(31),         /* ANCHOR ACEPT ICE FOR APPLICATION */
*   2  RAPICEAQ PTR(31),         /*  ANCHOR ACQUIRE ICE BY APPLI     */
*   2  RAPACEAP PTR(31),         /* ANCHOR FOR APPLICATION ACES      */
*   2  RAPTRPRE FIXED(15),       /* COUNT OF PREMPTED TERMINALS      */
*   2  RAPACEQD FIXED(15),       /* COUNT OF ACES QUEUED             */
*   2  RAPFLG BIT(8),            /*  FLAG FIELD                      */
*      3 RAPABLGN BIT(1),        /*  PERMANENTLY BLOCK LOGONS BIT    */
*      3 RAPAQUI BIT(1),         /* QUIESCE IN PROCESS               */
*      3 RAPASLGI BIT(1),        /*  APPLICATION FIRST TIME LOGON  0215
*                                    ISSUED FLAG                     */
*      3 RAPATLGN BIT(1),        /*  TEMPORARILY BLOCK LOGONS BIT    */
*      3 RAPRSV03 BIT(1),        /*  RESERVED                        */
*      3 RAPRSV04 BIT(1),        /*  RESERVED                        */
*      3 RAPRSV05 BIT(1),        /*  RESERVED                        */
*      3 RAPRSV06 BIT(1),        /*  RESERVED                        */
*   2  RAPFLGB BIT(8),           /* AUTHORIZATION FLAGS              */
*      3 RAPALLF BIT(1),         /* ALL FUNCTIONS AUTH.              */
*      3 RAPABLCK BIT(1),        /* BLOCK I/O AUTH.                  */
*      3 RAPAPASS BIT(1),        /* PASS AUTH.                       */
*      3 RAPAPRMT BIT(1),        /* PREEMPT AUTH.                    */
*      3 RAPAACQ BIT(1),         /* ACQUIRE AUTH.                    */
*      3 RAPAPPO  BIT(1),        /* RNO PPO (PRIMARY PROGRAM AUTH    */
*      3 RAPASPO  BIT(1),        /* RNO SPO (SECONDARY PROGRAM AUTH  */
*      3 RAPANVPC BIT(1),        /* NO VSPACE AUTHORIZED             */
*   2  RAPFLGC BIT(8),           /* AUTHORIZATION FLAGS RESERVED     */
*      3 RAPRSV10 BIT(1),        /*  RESERVED                        */
*      3 RAPRSV11 BIT(1),        /*  RESERVED                        */
*      3 RAPRSV12 BIT(1),        /*  RESERVED                        */
*      3 RAPRSV13 BIT(1),        /*  RESERVED                        */
*      3 RAPRSV14 BIT(1),        /*  RESERVED                        */
*      3 RAPRSV15 BIT(1),        /*  RESERVED                        */
*      3 RAPRSV16 BIT(1),        /*  RESERVED                        */
*      3 RAPRSV17 BIT(1),        /*  RESERVED                        */
*   2  RAPBFACT PTR(8),          /* BUFFER LIMIT FACTOR              */
*   2  RAPRVPT1 PTR(31),         /*  RESERVED                        */
*   2  RAPRVPT2 PTR(31);         /*  RESERVED                        */
*                                                                  0215
*                                                                  0215
*DCL                                                               0216
*1  ISTRLC BDY(WORD) BASED,      /* LOCAL ENTRY                      */
*   2  RLCPRE CHAR(LENGTH(ISTRPRE)),  /* COMMON PREFIX               */
*   2  RLCADR PTR(31),                                             0216
*      3  RLCFLAG BIT(8),        /* FLAG BYTE                        */
*         4  RLCRSV22 BIT(1),    /* RESERVED                         */
*         4  RLCRBISA BIT(1),    /* INITIAL STATUS - 1 = ACTIVE      */
*         4  RLCRSV14 BIT(3),    /* UNUSED/RESERVED                  */
*         4  RLCACNT BIT(1),     /* MESSAGE BLOCK ACCEPTED           */
*         4  RLCRSVDE BIT(2),    /* RESERVED                         */
*      3  RLCUCBAD PTR(24),      /* UCB /PUB ADDRESS                 */
*   2 RLCLCCUA CHAR(3),          /* DEVICE CHANNEL UNIT ADDR         */
*   2 RLCRVPT1 CHAR(1),          /* RESERVED                         */
*   2 RLCRVPT2 PTR(31);          /* RESERVED                         */
*                                                                  0216
*                                                                  0216
*DCL                                                               0217
*1  ISTRRN BDY(WORD) BASED,      /* RN ENTRY                         */
*   2  RRNPRE CHAR(LENGTH(ISTRDT)),  /*  USE ISTRDT DSECT            */
*   2  RRNADR PTR(31),                                             0217
*      3  RRNFLAG BIT(8),                                          0217
*         4  RRNRSV89 BIT(1),    /* RESERVED                         */
*         4  RRNRBISA BIT(1),    /* INITIAL STATUS 1 = ACTIVE        */
*         4  RRNLCSIP BIT(1),    /* NODE BEING ACTIVATED             */
*         4  RRNLCDIE BIT(1),    /* HIGHER NODE NOT SUCCESFULLY      */
*                                /*             ACTIVATED            */
*         4  RRNLCDIP BIT(1),    /* NODE BEING DEACTIVATED           */
*         4  RRNERPIP BIT(1),    /* ERP IN PROCESS                   */
*         4  RRNDSTCT BIT(1),    /* DEACT TO DECREMENT STCNT         */
*         4  RRNRSV11 BIT(1),    /* UNUSED/RESERVED                  */
*      3  RRNUCBAD PTR(24),      /* UCB/PUB ADDR                     */
*         4 RRNCHQI  BIT(8),     /* CHANNEL QUEUE INDEX              */
*         4 RRNLUBA  PTR(16),    /* DESCRIBE ENTRY IN PUB            */
*                                /* OWNERSHIP TABLE                  */
*   2  RRNGRPA PTR(31),          /* POINTER TO FIRST GROUP ENTRY     */
*   2  RRNRNCUA CHAR(3),         /* CHANNEL UNIT ADDR                */
*   2  RRNRLDIP FIXED(8),        /* REMOTE LOAD/DUMP IN PROG. COUNT  */
*   2  RRNTRENT PTR(31),         /* ADDR TERM ENTRY IN LOCAL         */
*   2  RRNBHSET PTR(31),         /* POINTER TO TABLE OF BHSET NAMES  */
*   2  RRNCTBHS FIXED(15),       /* COUNT OF BHSET NAMES IN RRNBHSET */
*   2  RRNCTEGP FIXED(15),       /* COUNT OF GROUP ENTRIES FOR RN    */
*   2  RRNCTELI FIXED(15),       /* COUNT OF LINE ENTRIES FOR RN     */
*   2  RRNCTECL FIXED(15),       /* COUNT OF CLUSTER ENTRIES FOR RN  */
*   2  RRNCTETR FIXED(15),       /* COUNT OF TERMINAL ENTRIES FOR RN */
*   2  RRNCTEIN FIXED(15),       /* COUNT OF INT. NODE ENTRIES FOR RN*/
*   2  RRNCTECM FIXED(15),       /* CNT OF COMPONENT ENTRIES FOR RN  */
*   2  RRNCTENT FIXED(15),       /* # ALL ENTRIES IN 370X RDT SEGMENT*/
*   2  RRNRDF CHAR(4),           /*  RESOURCE DEFINITION FLAG        */
*      3  RRNRDFA  BIT(8),       /* FLAGS (WORD 1 BYTE 1)            */
*         4  RRNRASHT BIT(1),    /* AUTO NETWORK SHUTDOWN            */
*         4  RRNRAIPL BIT(1),    /* AUTO IPL ON RN FAILURE           */
*         4  RRNRADMP BIT(1),    /* AUTO DUMP ON RN FAILURE          */
*         4  RRNRASYN BIT(1),    /* C/R AUTOMATICALLY RESYNCHRONIZED */
*                                /* IF ALREADY LOADED NCP            */
*                                /* 0=NO, 1=YES                      */
*         4  RRNRAOLT BIT(1),    /* ON-LINE TERMINAL TEST            */
*         4  RRNRBREM  BIT(1),   /* REMOTE RN FLAG                   */
*         4  RRNRANCP BIT(1),    /* GENERATION TYPE NCP              */
*         4  RRNRAPEP BIT(1),    /* GENERATION TYPE PEP              */
*      3  RRNRDFB BIT(16),       /* FLAG FIELD B (RDF)               */
*         4  RRNRBMDL BIT(1),    /* (=1 IF 3705) ELSE 3704           */
*         4  RRNRSV02 BIT(1),    /* RESERVED                         */
*         4  RRNRBCCL BIT(1),    /* LOOSELY COUPLED CHANNEL          */
*         4  RRNRBCCT BIT(1),    /* TIGHTLY COUPLED CHANNEL          */
*         4  RRNRBSEC BIT(1),    /* SECONDARY CHANNEL EXIST          */
*         4  RRNRBCT1 BIT(1),    /* PRIM CHAN TYPE (0=TYPE1,1=TYPE2) */
*         4  RRNRBCT2 BIT(1),    /* SEC CHAN TYPE (0=TYPE1,1=TYPE2)  */
*         4  RRNRSV03 BIT(1),    /* RESERVED                         */
*         4  RRNRBBUP BIT(1),    /* BRINGUP IS TO BE EXERCISED     0217
*                                         FOR THIS RN DURING IPL     */
*         4  RRNVYDON BIT(1),    /* RDT SEG IS BEING FREED           */
*         4  RRNRSV01 BIT(5),    /* RESERVED                         */
*         4  RRNPTASL BIT(1),    /* SOME PORT SOLICITOR IS WAITING 0217
*                                   TO BE REDRIVEN BY CLSDST         */
*      3  RRNRSV55 CHAR(1),      /*  RESERVED                        */
*   2  RRNCMF CHAR(4),           /*  FLAG FIELDS FOR COMMANDS        */
*      3  RRNCMFA  BIT(8),       /* FLAG FIELD A -COMMANDS           */
*         4  RRNCAALL BIT(1),    /* PHYSICAL DISCONNECT              */
*         4  RRNCAATD BIT(1),    /* ACTIVATE DEVICE                  */
*         4  RRNCAATG BIT(1),    /* ACTIVATE GROUP                   */
*         4  RRNCAATI BIT(1),    /* ACTIVATE INVITES                 */
*         4  RRNCAMBH BIT(1),    /* MODIFY BLOCK HANDLER SET         */
*         4  RRNCACDT BIT(1),    /* CHANGE DATE AND TIME             */
*         4  RRNCADTD BIT(1),    /* DEACTIVATE DEVICE                */
*         4  RRNCADGO BIT(1),    /* DEACTIVATE GROUP ORDERLY         */
*      3  RRNCMFB  BIT(8),       /* FLAG FIELD B - COMMANDS          */
*         4  RRNCBDLO BIT(1),    /* DEACTIVATE LINE ORDERLY          */
*         4  RRNCBDLH BIT(1),    /* DEACTIVATE LINE HALT             */
*         4  RRNCBDLR BIT(1),    /* DISPLAY LINE RESOURCE ID         */
*         4  RRNCBRDS BIT(1),    /* REQUEST DEVICE STATUS            */
*         4  RRNCBRLS BIT(1),    /* REQUEST LINE STATUS              */
*         4  RRNCBNPL BIT(1),    /* CHANGE LINE NEG POLL RESPONSE LIM*/
*         4  RRNCBMOD BIT(1),    /* COPY/SET DESTINATION NODE        */
*         4  RRNCBALT BIT(1),    /*  ACTIVATE LINE TRACE             */
*      3  RRNCMFC  BIT(8),       /* FLAG FIELD C - COMMANDS          */
*         4  RRNCCRCN BIT(1),    /* RESET CONDITIONAL                */
*         4  RRNCCRDQ BIT(1),    /* RESET DEVICE QUEUE               */
*         4  RRNCCRST BIT(1),    /* REQUEST DEVICE STATISTICS        */
*         4  RRNCCCRC BIT(1),    /* CHANGE RETRY COUNTS              */
*         4  RRNCCRIM BIT(1),    /* RESET IMMEDIATE                  */
*         4  RRNCCRCM BIT(1),    /* RESET CONTROL MODE               */
*         4  RRNCCSIM BIT(1),    /* COPY/REPLACE SESSION INIT INFO   */
*         4  RRNCCCSL BIT(1),    /* CHANGE SESSION LIMIT             */
*      3  RRNCMFD  BIT(8),       /* FLAG FIELD D - COMMANDS          */
*         4  RRNCDCSP BIT(1),    /* CHANGE SERIVCE PAUSE             */
*         4  RRNCDSTD BIT(1),    /* DISPLAY STORAGE                  */
*         4  RRNCDDTL BIT(1),    /* CHANGE DEVICE TRANSMIT LIMIT     */
*         4  RRNCDBCK BIT(1),    /* SWITCHED NETWORK BACKUP          */
*         4  RRNCDDSI BIT(1),    /* COPY/REPLACE DEV SESSION INIT INFO*
*         4  RRNCDREC BIT(1),    /* RESET AT END OF COMMAND          */
*         4  RRNREMPO BIT(1),    /* REMOTE POWER OFF                 */
*         4 RRNRSV05  BIT(1),    /*       NOT  USED                  */
*   2  RRNFLUX  PTR(31),         /* POINTER TO FIRST LUX             */
*   2  RRNCPLUB CHAR(6),         /* SYMBOLIC UNIT NAME OF NCP DATASET*/
*   2  RRNEPADR PTR(15),         /* EP SUBCHANNEL ADDRESS            */
*   2  RRNNMDPD  CHAR(8),        /* FILENAME FOR DUMP DATA SET       */
*      3  RRNDPLUB CHAR(6),      /* LUB NAME FOR DUMP DATASET        */
*      3  RRNPUBI  BIT(8),       /* PUB INDEX                        */
*      3  RRNRSV88 CHAR(1),      /* RESERVED-DOS ONLY                */
*   2  RRNRSV04  CHAR(6),        /* RESERVED                         */
*   2  RRNDELAY  CHAR(2),        /* INITIAL VALUE FROM DELAY         */
*   2  RRNNMNCP  CHAR(8),        /* DSNAME FOR NCP LOAD MODULE       */
*   2  RRNHPRE PTR(16),          /* HOST PREFIX INFORMATION          */
*      3  RRNHLENH PTR(8),       /* LENGTH OF HOST HEADER PREFIX     */
*      3  RRNHLENT PTR(8),       /* LENGTH OF HOST TEXT PREFIX       */
*   2  RRNHBUFS FIXED(15),       /* SIZE OF BUFFER UNITS FOR HOST    */
*   2  RRNCTPCC PTR(8),          /* CNT OF BUFFERS RECEIVING PCCU DATA*
*   2  RRNNCPNM CHAR(7),         /* NAME OF NCP LOAD MOD 7 CHAR MAX  */
*   2  RRNMSIZE PTR(31),         /* MAX SIZE OF SEND                 */
*   2  RRNRPLPT PTR(31),         /* C/R POINTER TO RPL               */
*   2  RRNNCSPL PTR(31),         /* POINTER TO NCSPL                 */
*   2  RRNLASTE PTR(31),         /* PTR TO LAST ENTRY IN RN SEGMENT  */
*   2  RRNRDCUA CHAR(3),         /* DEFAULT CUA                      */
*   2  *        PTR(8),          /* RESERVED                         */
*   2  RRNRINNM CHAR(8);         /* DEFAULT INNODE NAME IN LOCAL   0217
*                                   RDT TO CONNECT REMOTE RN         */
*                                                                  0217
*DCL                                                               0218
*1  ISTRGP BDY(WORD) BASED,      /* GROUP ENTRY                      */
*   2  RGPPRE CHAR(LENGTH(ISTRPRE)),        /*  USE ISTRPRE DSECT    */
*   2  RGPFLG BIT(8),            /*  FLAG FIELD                      */
*      3  RGPADIL BIT(1),        /* =1 SWITCHED, =0 NON-SWIT         */
*      3  RGPASS  BIT(1),        /* START/STOP                       */
*      3  RGPABSC  BIT(1),       /* BINARY SYNCHRONOUS               */
*      3  RGPASDLC BIT(1),       /* DATA LINK CONTROL                */
*      3 RGPRSV02  BIT(4),       /*     NOT USED                     */
*   2  RGPRSV03 FIXED(8),        /* USED TO FORCE ALINEMENT          */
*   2  RGPCTELN FIXED(15),       /* COUNT OF LINE ENTRIES FOR GROUP  */
*   2  RGPCTECL FIXED(15),       /* CNT OF CLUSTER ENTRIES FOR GROUP */
*   2  RGPCTETR FIXED(15),       /* CNT TERMINAL ENTRIES FOR GROUP   */
*   2  RGPCTEIN FIXED(15),       /* COUNT OF INNODE ENTRIES FOR GROUP*/
*   2  RGPCTECM FIXED(15),       /* CNT COMPONENT ENTRIES FOR GROUP  */
*   2  RGPRVPT1 PTR(31),         /* RESERVED                         */
*   2  RGPRVPT2 PTR(31);         /* RESERVED                         */
*                                                                  0218
*                                                                  0218
*DCL                                                               0219
*1  ISTRLN BDY(WORD) BASED,      /* LINE ENTRY                       */
*   2  RLNPRE CHAR(LENGTH(ISTRPRE)), /* USE COMMON PREFIX            */
*   2  RLNADR PTR(31),                                             0219
*      3  RLNFLAG BIT(8),                                          0219
*         4  RLNEAM   BIT(1),    /* ENABLE ANSWER MODE DONE          */
*         4  RLNRBISA BIT(1),    /* INITIAL STATUS 1=ACTIVE          */
*         4  RLNRSV01 BIT(6),    /* RESERVED                         */
*      3  RLNUCBAD PTR(24),      /* UCB/PUB ADDRESS                  */
*         4  RLNCUA CHAR(3),     /* NOT USED                         */
*   2  RLNCTECL FIXED(15),       /* CNT OF CLUSTER ENTRIES FOR LINE  */
*   2  RLNCTETR FIXED(15),       /* CNT OF TERMINAL ENTRIES FOR LINE */
*   2  RLNCTEIN FIXED(15),       /* COUNT OF INNODE ENTRIES FOR LINE */
*   2  RLNCTECM FIXED(15),       /* CNT OF COMPONENT ENTRIES FOR LINE*/
*   2  RLNACTCT FIXED(15),       /* COUNT OF COMPONENTS, CLUSTERS  0219
*                                             AND TERMINALS ON LINE  */
*   2  RLNSTAT1 BIT(8),          /* LINK TRAP STATUS                 */
*      3 RLNTRAP  BIT(1),        /* INTERCEPT NEXT LINK OPERATION    */
*      3 RLNLRST  BIT(1),        /* LINK RESTART COND CAUSED TRAP    */
*      3 RLNINOPL BIT(1),        /* LINK INOP CONDITION CAUSED TRAP  */
*      3 RLNINOPP BIT(1),        /* PU INOP CONDITION CAUSED TRAP    */
*      3 RLNVD    BIT(1),        /* VARY INACT CONDITION CAUSED TRAP */
*      3 RLNRSV03 BIT(3),        /* RESERVED                         */
*    2 RLNSTAT2 BIT(8),          /* LINK NORMAL STATUS               */
*      3 RLNOHIN  BIT(1),        /* OFFHOOK REPORTED TO SW SUBAREA-  */
*                                /* REPLY DUE                        */
*      3 RLNINUSE BIT(1),        /* LINK RESOURCES ALLOCATED TO PU   */
*      3 RLNRSV04 BIT(6),        /* RESERVED                         */
*   2  RLNRDF CHAR(4),           /*  RESOURCE DEFINITION FLAG        */
*      3  RLNRDFA  BIT(8),       /* FLAGS FIELD A                    */
*         4  RLNRACNT BIT(2),    /*  NEXT TWO FIELDS                 */
*            5  RLNRACAT BIT(1), /* CALL INITIATOR-TERMINAL          */
*            5  RLNRACAN BIT(1), /* CALL INITIATOR-NCP               */
*         4  RLNGANSW BIT(1),    /* C/R GENNED IN ANSWER MODE, 1=YES */
*         4  RLNPORT  BIT(1),    /* THIS IS A PORT ENTRY             */
*         4  RLNIDV   BIT(1),    /* THIS IS AN ID VERIFIED PORT      */
*         4  RLNRAEP  BIT(1),    /* TYPE IS EP                       */
*         4  RLNRANCP BIT(1),    /* TYPE IS NCP                      */
*         4  RLNRAPEP BIT(1),    /* TYPE IS PEP                      */
*      3  RLNRDFB  BIT(8),       /* FLAGS FIELD B                    */
*         4  RLNRBUSE BIT(1),    /* EP/NCP USE  1=NCP                */
*         4  RLNANSWR BIT(1),    /* ON = SEND ENABLE ANSWER          */
*                                /* AT ACTIVATE                      */
*         4  RLNAUTOD BIT(1),    /* ON=AUTODIAL, OFF=MANUAL          */
*         4  RLNRSV0B BIT(1),    /* RESERVED                         */
*         4  RLNTTV   BIT(1),    /* THIS IS TERM TYPE VERIFICATION 0219
*                                   PORT                             */
*         4  RLNRAPOL BIT(1),    /* POLLED LINE                      */
*         4  RLNRATRN BIT(1),    /* SDLC LINE                        */
*         4  RLNMULTP BIT(1),    /* 0 = POINT TO POINT,            0219
*                                   1 = MULTI POINT                  */
*      3  RLNRDFC  BIT(8),       /* FLAGS FIELD C - LINE CODES       */
*                                /* SEE CONSTANTS FOR DEFINITION     */
*      3  RLNRDFD  BIT(8),       /* FLAGS FIELD D - RESERVED         */
*   2  RLNAUTOA FIXED(15),       /* AUTOCALL ADDRESS                 */
*   2  RLNRDSLM FIXED(8),        /* SCHED. LIM BASED ON LINE SPEED 2-4*
*   2  RLNCTSES FIXED(8),        /* COUNT OF CONCURRENT SESSIONS     */
*   2  RLNACTRM PTR(8),          /* COUNT OF ACTIVE REMOTES FOR THIS
*                                   TRUNK                            */
*   2  RLNRESV1 BIT(8),          /* RESERVED/UNUSED                  */
*   2  RLNACTSN FIXED(15),       /* COUNT ACTIVE NODES ON LINK       */
*   2  RLNPOLMT FIXED(8),        /* NEG POLL RESPONSE LIMIT          */
*   2  RLNPAUSE FIXED(8),        /* POLL DELAY/PAUSE                 */
*   2  RLNCRFLG BIT(8),          /* FLAG-CONFIGURATION RESTART       */
*      3 RLNACTLN BIT(1),        /* ACTIVATE LINK OK                 */
*      3 RLNSWNCP BIT(1),        /* SWITCH PEP LINE TO NCP OK        */
*      3 RLNLSCMD BIT(3),        /* LINE SCHEDULING COMMANDS       0219
*                                   ISSUED OK                        */
*        4 RLNNPRLM BIT(1),      /* CHNG NEG POLL RESP LIMIT OK      */
*        4 RLNSESLM BIT(1),      /* CHNG SESSION LIMIT OK            */
*        4 RLNSVSKP BIT(1),      /* CHNG SERVICE SEEK PAUSE OK       */
*      3 RLNSWEP  BIT(1),        /* SWITCH TO EP                     */
*      3 RLNCRRSV BIT(2),        /* RESERVED FOR CONFIG RESTART      */
*   2  *        CHAR(1),         /* RESERVED                         */
*   2  RLNX2SW  PTR(31),         /* ADDRESS OF 370X TO SWITCH        */
*                                /* COMMUNICATION NCSPL              */
*   2  RLNNCSPL PTR(31),         /* ADDRESS OF SPIN-OFF NCSPL        */
*                                /* FOR VARY DEACTIVATE              */
*   2  RLNRVPT2 PTR(31);         /* RESERVED                         */
*                                                                  0219
*                                                                  0219
*DCL RLNRCEDC BIT(8) CONSTANT('01'X);  /* EBCDIC (CONSTANTS)         */
*DCL RLNRCUSA BIT(8) CONSTANT('02'X);  /* USASCII                    */
*DCL RLNRCBCD BIT(8) CONSTANT('03'X);  /* BCD                        */
*DCL RLNRCEBC BIT(8) CONSTANT('04'X);  /* EBCD                       */
*DCL RLNRCCOR BIT(8) CONSTANT('05'X);  /* COR                        */
*DCL RLNRCKAT BIT(8) CONSTANT('06'X);  /* KATAKANA                   */
*DCL RLNRCIT2 BIT(8) CONSTANT('08'X);  /* ITA2                       */
*DCL RLNRCZS3 BIT(8) CONSTANT('09'X);  /* ZSC3                       */
*                                                                  0227
*                                                                  0227
*DCL                                                               0228
*1  ISTRPT BDY(WORD) BASED,        /* PORT ENTRY                     */
*   2 RPTLN CHAR(LENGTH(ISTRLN)),  /* INCLUDE LINE ENTRY             */
*   2 RPTLNCID BDY(WORD) CHAR(4),  /* COMM ID OF LINE                */
*     3 RPTLNSAF CHAR(2),          /* SAF                            */
*     3 RPTLNDAF CHAR(2),          /* DAF                            */
*   2 RPTCTNM CHAR(8),             /* CTERM NAME                     */
*   2 RPTDITT PTR(31),             /* POINTER TO DITT TABLE          */
*     3 RPTDIVT PTR(31),           /* POINTER TO DIVT TABLE          */
*   2 RPTATERM PTR(31),            /* POINTER TO ASSOCIATED ENTRY    */
*   2 RPTUTERM PTR(31),            /* POINTER TO UTERM ENTRY         */
*   2 RPTFLAG1 CHAR(1),            /* PORT SOLICITOR FLAGS           */
*     3  RPTASLEP BIT(1),          /* THIS PORT SOLICITOR IS WAITING
*                                     TO BE REDRIVEN BY CLSDST       */
*     3 RPTVRYPD BIT(1),           /* VARY PENDING IN THIS CTERM     */
*     3 RPTHLVPD BIT(1),           /* VARY PENDING IN HIGHER LEVEL 0228
*                                     NODE                           */
*     3 RPTONLIN BIT(1),           /* ONLINE/OFFLINE(VARY)           */
*     3 RPTVIODN BIT(1),           /* I/O DONE FOR THIS NODE         */
*     3 RPTVYIMM BIT(1),           /* VARY IMM ISSUED FOR PORT       */
*     3 RPTDYNAM BIT(1),           /* BHSET = DYNAMIC                */
*     3 RPTISTAT BIT(1),           /* CTERM(PORT) IS INITIALLY ACTIVE*/
*                                  /* 1 = YES                        */
*   2 RPTRSV01 CHAR(1),            /* RESERVED                       */
*   2 RPTDAFSV BIT(16),            /* SAVE TERMINAL DAF              */
*   2 RPTPEPCT FIXED(15),          /* PEP COUNT FOR CTERM            */
*   2 RPTPTHCT FIXED(15),          /* PATH COUNT FOR CTERM           */
*   2 RPTNSNSV PTR(31),            /* SAVE TERMINAL NEXT SCHED NODE
*                                     POINTER                        */
*   2  RPTRSV02 PTR(31),           /* RESERVED                       */
*   2  RPTRSV03 PTR(31);           /* RESERVED                       */
*                                                                  0228
*                                                                  0228
*DCL                                                               0229
*1  ISTRCL BDY(WORD) BASED,      /* CLUSTER ENTRY                    */
*   2  RCLPRE CHAR(LENGTH(ISTRPRE)),    /* USE COMMON PREFIX         */
*   2  RCLADR PTR(31),                                             0229
*      3  RCLFLAG BIT(8),                                          0229
*         4  RCLRSV22 BIT(1),    /* RESERVED                         */
*         4  RCLRBISA BIT(1),    /* INITIAL STATUS 1=ACTIVE          */
*         4  RCLBATCH BIT(1),    /* BATCHED MESSAGE INPUT          0229
*                                   FEATURE                          */
*         4  RCLRSV33 BIT(5),    /* RESERVED                         */
*      3  RCLGPADR PTR(24),      /* ADDRESSING INFORMATION POINTER 0229
*                                                  (ADDR RCLCNGP)    */
*   2  RCLCTETR FIXED(15),       /* CNT TERMINAL ENTRIES FOR CLUSTER */
*   2  RCLCTECM FIXED(15),       /* CNT COMPONENT ENTRIES FOR CLUSTER*/
*   2  RCLRSV01 FIXED(15),       /* FILLER TO FORCE ALIGNMENT        */
*   2  RCLCTNGP FIXED(15),       /* GPOLL CHARACTER COUNT            */
*   2  RCLGPOLA PTR(31),         /* GPOLL CHARACTER STRING POINTER   */
*   2  RCLRVPT1 PTR(31),         /* RESERVED                         */
*   2  RCLRVPT2 PTR(31);         /* RESERVED                         */
*                                                                  0229
*                                                                  0229
*DCL                                                               0230
*1  ISTRTR BDY(WORD) BASED,      /* TERMINAL AND/OR COMPONENT ENTRY  */
*   2  RTRCRPR CHAR(LENGTH(ISTRCPRE)),     /* USE ISTRCPRE DSECT     */
*   2  RTRADR PTR(31),                                             0230
*      3  RTRFLAG BIT(8),                                          0230
*         4  RTRRSV21 BIT (1),   /* RESERVED */                    0230
*         4  RTRRBISA BIT(1),    /* INITIAL STATUS 1 = ACITVE        */
*         4  RTRRSV51 BIT(3),    /* RESERVED                         */
*         4  RTRVTERM BIT(1),    /* VTERM TERMINAL ENTRY             */
*         4 RTRRSV22 BIT(2),     /* UNUSED                           */
*      3  RTRADRPT PTR(24),      /* TO BE USED FOR POINTER TO      0230
*                                            ADDRESSING INFORMATION  */
*   2  RTRCTECM FIXED(15),       /* COUNT OF COMPONENT             0230
*                                               ENTRIES FOR TERMINAL */
*   2  RTRRSV01 FIXED(15),       /*  FILLER TO FORCE ALINEMENT       */
*   2  RTRRSV45 CHAR(4),         /* RESERVED                         */
*   2  RTRRDFA  BIT(8),          /* FLAG FIELD A                     */
*      3  RTRRAATN BIT(1),       /* TERMINAL CAN INTERRUPT PCCU      */
*      3  RTRRAALL BIT(3),       /* 3 FLAG FIELD                     */
*         4  RTRRAPT1 BIT(1),    /* PT1 BLOCK HANDLER FLAGS          */
*         4  RTRRAPT2 BIT(1),    /* PT2                              */
*         4  RTRRAPT3 BIT(1),    /* PT3                              */
*      3  RTRRACDT BIT(1),       /* CRITICAL DATA FLAG               */
*      3  RTRRSV60 BIT(1),       /* RESERVED                         */
*      3  RTRRACTR BIT(1),       /* LOGICAL DEVICE FLAG              */
*      3  RTRRSV02 BIT(1),       /* UNUSED                           */
*   2  RTRRDFB  BIT(8),          /* FLAG FIELD B - RESOURCE DEF      */
*      3  RTRRBECT BIT(1),       /* EMBEDDED LINE CONTROL            */
*      3  RTRRBEND BIT(1),       /* EOT/EOB                          */
*      3  RTRRSV32 BIT(6),       /* RESERVED                         */
*   2  RTRRDFC  BIT(8),          /* FLAG FIELD C - RESOURCE DEF      */
*      3  RTRRCIT1 BIT(1),       /* EIB CHAR AFTER ITB ON RECV       */
*      3  RTRRCIT2 BIT(1),       /* EIB CHAR AFTER ITB ON SEND       */
*      3  RTRRCPT3 BIT(1),       /* DEVICE HAS PT3 BHSET             */
*      3  RTRRCBLK BIT(1),       /* RECORD DATA - BLOCK              */
*      3  RTRRCMSG BIT(1),       /* RECORD DATA - MESSAGE            */
*      3  RTRRCXMS BIT(1),       /* RECORD DATA - XMISSION           */
*      3  RTRRSV23 BIT(2),       /* RESERVED/UNUSED                  */
*   2  RTRRDFD  BIT(8),          /* FLAG FIELD D - RESERVED          */
*      3  RTRRDBHN  BIT(1),      /* BHSET = NONE                     */
*      3  RTRRDBHD  BIT(1),      /* BHSET = DYNAMIC                  */
*      3  RTRRDBHI  BIT(1),      /* BHSET = SETNAME AND EXECUTR      */
*      3  RTRRSV10 BIT(2),       /* RESERVED                         */
*      3  RTRRSV11 BIT(3),       /* RESERVED                         */
*   2  RTRRDFE  BIT(8),          /* FLAG FIELD E - RESOURCE DEF      */
*/*                RTRREFT1  FEATURE FLAGS  (9 BITS)                 */
*      3  RTRREBRK BIT(1),       /* TRANSMIT INTERRUPT               */
*      3  RTRRSV0A BIT(1),       /* RESERVED                         */
*      3  RTRREACR BIT(1),       /* ACCELERATED CARRIAGE RETURN      */
*      3  RTRRECHK BIT(1),       /* CHECKING FEATURE                 */
*      3  RTRREATT BIT(1),       /*  TERMINAL INTERRUPT              */
*      3  RTRRESUP BIT(1),       /*  TIMEOUT SUPPRESSION             */
*      3  RTRRESCT BIT(1),       /*  STATION CONTROL                 */
*   2  RTRRDFF  BIT(8),          /* FLAG FIELD F - RESOURCE DEF      */
*      3  RTRRFXCT BIT(1),       /* TRANSMIT CONTROL                 */
*/*                      RTRRFFT2 FEATURE 2 FLAGS (NEXT 5 BITS)      */
*      3  RTRRFPEN BIT(1),       /* SELECTOR PEN                     */
*      3  RTRRFPFK BIT(1),       /* PROGRAM FUNCTION DEYBOARD        */
*      3  RTRRFANK BIT(1),       /* STANDARD ALPHA-NUMERIC KEYBOARD  */
*      3  RTRRFDEK BIT(1),       /* DATA ENTRY KEYBOARD              */
*      3  RTRRSV24 BIT(3),       /* UNUSED/RESERVED                  */
*   2  RTRTRMAX CHAR(1),         /* MAX # TRANSMISSIONS TERM TO PCCU */
*   2  RTRCRFLG PTR(8),          /* FLAG-CONFIGURATION RESTART       */
*      3 RTRCRSV1 BIT(2),        /* RESERVED FOR CONFIG RESTART      */
*      3 RTRLSCMD BIT(1),        /* LINE SCHEDULING CMD ISSUED OK    */
*        4 RTRDTRLM BIT(1),      /* CHNG DEV TRANSMISSION LIMIT OK   */
*      3 RTRCRSV2 BIT(5),        /* RESERVED FOR CONFIG. RESTART     */
*   2  RTRBHSN1 CHAR(8),         /* DEFAULT BHSET NAME IS BHF IS ON  */
*   2  RTRRVPT1 PTR(31),         /* RESERVED                         */
*   2  RTRRSV03 FIXED(15),       /* FILLER TO FORCE ALIGNMENT        */
*   2  RTRCTDIA FIXED(15),       /* CNT OF CHARS. IN TERM DIAL NUMBER*/
*   2  RTRCTPOL FIXED(15),       /* # CHARS. IN TERM POLL STRING     */
*   2  RTRCTADR FIXED(15),       /* COUNT OF ADDRESSING CHARACTERS   */
*   2  RTRCADDR  CHAR(8),        /* COMPONENT ADDRESSING CHARS       */
*   2  RTRPOLA PTR(31),          /* POINTER TO POLLING CHARACTERS    */
*   2  RTRDIAA PTR(31),          /* POINTING TO DIAL CHARACTERS      */
*   2  RTRRDFG  BIT(8),          /* CORRESPONDENCE CODE USED BY THIS
*                                   TERM LINE. SEE CONSTANTS.        */
*   2  RTRRSVDD CHAR(7),         /* RESERVED                         */
*   2  RTRBSCID CHAR(21),        /* BSC ID FIELD                     */
*      3  RTRIDLEN FIXED(8),     /* LENGTH OF ID                     */
*      3  RTRIDCAS CHAR(20),     /* ID CHARACTER                     */
*   2  RTRLCTI BIT(8),           /* LINE CONTROL TYPE ID             */
*   2  RTRRSV04 CHAR(2);         /* RESERVED                         */
*                                                                  0230
* DCL RTRDNCBA PTR(31) DEF(ISTRTR) POS(41);  /* SCAFFOLDING          */
*/* CONSTANTS FOR FIELD RTRRDFG                                      */
*DCL RTRRCBCD BIT(8) CONSTANT('03'X); /* BCD                         */
*DCL RTRRCEBC BIT(8) CONSTANT('04'X); /* EBCD                        */
*DCL RTRRCCOR BIT(8) CONSTANT('05'X); /* COR                         */
*                                                                  0234
*/*     CONSTANTS FOR FIELD RTRLCTI                                  */
*DCL RTR2741  BIT(8) CONSTANT('00'X);  /* 2741                       */
*DCL RTR2740A BIT(8) CONSTANT('02'X);  /* 2740-1 A (BASIC)           */
*DCL RTR2740D BIT(8) CONSTANT('06'X);  /* 2740-1 D (TRANS CONTROL)   */
*DCL RTR2740E BIT(8) CONSTANT('0A'X);  /* 2740-1 E (TRANS          0238
*                                   CONTROL WITH CHECKING            */
*DCL RTR2740F BIT(8) CONSTANT('0C'X);  /* 2740-1 F (CHECKING)        */
*DCL RTR1050  BIT(8) CONSTANT('1C'X);  /* 1050                       */
*DCL RTRTWX   BIT(8) CONSTANT('22'X);  /* TWX                        */
*/*                                                                  */
*/*   ENTRY IN LOCAL RN FOR REMOTE SEGMENT                           */
*/*                                                                  */
*DCL  1  ISTRIN   BDY(WORD) BASED,   /* INNODE REMOTE ENT IN LOCAL RN*/
*        2 RINCRPRE CHAR(LENGTH(ISTRCPRE)),  /* PREFIX               */
*        2 RINDFD   BIT(8),          /* FLAG FIELD                   */
*          3 RINREMPO BIT(1),        /* REMOTE POWER OFF             */
*            4 RTRREMPO BIT(1),      /* ALIAS                        */
*          3 RINNODEF BIT(1),        /* REMOTE TERM ENTRY INV AS ENT */
*            4 RTRNODEF BIT(1),      /* ALIAS                        */
*          3 RINLDISC BIT(1),        /* DISCONNECT REMOTE REQUIRED   */
*            4 RTRLDISC BIT(1),      /* ALIAS                        */
*          3 RINRSV01 BIT(5),        /* RESERVED                     */
*        2 RINNODID PTR(8),          /* NODE ID OF REMOTE            */
*          3 RTRNODID PTR(8),        /* ALIAS                        */
*        2 RINRLDAF CHAR(2),         /* DAF OF REMOTE WHEN ACTIVE    */
*          3 RTRRLDAF CHAR(2),       /* ALIAS                        */
*        2 RINREMOT PTR(31),         /* PTR TO RN ENTRY FOR REMOTE   */
*          3 RTRREMOT PTR(31),       /* ALIAS                        */
*        2 RINVPAB  PTR(31),         /* ADDR VARY PAB FOR REMOTE     */
*          3 RTRVPAB  PTR(31),       /* ALIAS                        */
*        2 RINRPHCN PTR(31),         /* ADDR RPH WAITING FOR CONTACT */
*          3 RTRRPHCN PTR(31),       /* ALIAS                        */
*        2 RINNCSPL PTR(31),         /* ADDR FOR NCSPL FOR DEACTIVATE*/
*          3 RTRNCSPL PTR(31),       /* ALIAS                        */
*        2 RINCNCNT PTR(8),          /* CONTACT COUNT FOR REMOTE     */
*          3 RTRCNCNT PTR(8),        /* ALIAS                        */
*        2 RINRSV02 CHAR(3),         /* RESERVED                     */
*        2 RINLOCRN PTR(31),         /* PTR TO RN ENTRY OF LOCAL     */
*        2 RINRSV04 CHAR(4),         /* RESERVED                     */
*        2 RINRSV05 CHAR(4);         /* RESERVED                     */
*/*                                                                  */
*DCL                                                               0243
*1   ISTRDS BDY(WORD) BASED,       /* LCDO ENTRY                     */
*           2  RDSPRE CHAR(LENGTH(ISTRPRE)), /* ENTRY PREFIX         */
*           2  RDSCTTRM FIXED(15), /* COUNT OF ENTRY POINTERS      0243
*                                     IN DIAL OUT TABLE              */
*           2  RDSCTATR FIXED(15), /*                                */
*           2  RDSADDOT PTR(31);   /* ADDRESS OF DIAL OUT TABLE      */
*/*                                                                  */
*DCL                                                               0244
*1   ISTDOT BDY(WORD) BASED,       /* DIAL OUT TABLE                 */
*           2  DOTADTRM PTR(31);   /* PTR TO DIAL OUT OR DIAL IN/  0244
*                                     OUT TERMINAL RDTE              */
*/*                                                                  */
*DCL                                                               0245
*1 ISTRCC BDY(WORD) BASED,             /* PU ENTRY                   */
*  2 RCCPRE   CHAR(LENGTH(ISTRPRE)),   /* COMMON PREFIX              */
*  2 RCCTYPE  CHAR(1),                 /* PU TYPE                    */
*  2 RCCFLAG  BIT(8),                  /* FLAG FIELD                 */
*    3 RCCRBISA BIT(1),                /* I STATUS 1=ACTIVE          */
*    3 RCCCUDIE BIT(1),                /* CLUSTER DEACTIVATING       */
*    3 RCCERPIP BIT(1),                /* ERP IN PROCESS             */
*    3 RCCLDISC BIT(1),                /* DISCONNECT REQUEST         */
*    3 RCCOHIMM BIT(1),                /* RTGOH RECEIVED AND WAS     */
*                                      /* AN IMMEDIATE TYPE          */
*    3 RCCOUERP BIT(1),                /* REPEAT ERP                 */
*    3 RCCPRGDN BIT(1),                /* PURGE ISSUED               */
*    3 RCCCTPGD BIT(1),                /* CONTACT PURGED             */
*  2 RCCFLAGB BIT(8),                  /* FLAG FIELD                 */
*    3 RCCDSTCT BIT(1),                /* DEACT TO DECR STCNT IN HDR */
*    3 RCCDIALP BIT(1),                /* DIAL IN PROGRESS           */
*    3 RCCIRETR BIT(1),                /* IRETRY 1 = YES             */
*    3 RCCBNNSP BIT(1),                /* BNNSUP FOR 3270            */
*    3 RCCFINAL BIT(1),                /* ON = DEACT PU FINAL REQD   */
*    3 RCCRESET BIT(1),                /* ON = RESET DEACT IN PROCESS*/
*    3 RCCBRKCN BIT(1),                /* ON-DISCOUNT=YES SPECIFIED  */
*                                      /* OFF-DISCOUNT=NO SPECIFIED  */
*    3 RCCRTGOH BIT(1),                /* ON=RTGOH RECEIVED          */
*  2 RCCCNCNT  PTR(8),                 /* CONTACT COUNT              */
*  2 RCCCTELU FIXED(15),               /* COUNT OF PU LU ENTRIES     */
*  2 RCCSTAID CHAR(8),                 /* 64 BIT PU STATION ID       */
*    3 RCCIDPA1 BIT(16),               /* FILLER OF 2 BYTES OF 0     */
*    3 RCCID48,                                                    0245
*      4 RCCIDPUT BIT(8),              /* PU TYPE                    */
*      4 RCCIDPA2 BIT(8),              /* FILLER OF 1 BYTE OF 0      */
*      4 RCCIDBLK BIT(12),             /* IDBLK VALUE                */
*      4 RCCIDNUM BIT(20),             /* IDNUM VALUE                */
*  2 RCCSESCT PTR(8),                  /* SESSION COUNT              */
*  2 *        CHAR(1),                 /* RESERVED                   */
*  2  RCCVPAB PTR(31),                 /* ADDRESS OF VARY PAB        */
*  2 RCCDPAB  PTR(31),                 /* ADDR RESTART PAB           */
*  2 RCCEPAB  PTR(31),                 /* ADDR OF ERP PAB            */
*  2 RCCRPHCN PTR(31),                 /* ADDR RPH WAIT FOR CONTACT  */
*  2 RCCNCSPL PTR(31),                 /* ADDR NCSPL FOR DEACTIVATE  */
*  2 RCCCRFLG BIT(8),                  /* FLAG-CONFIGURATION RESTART */
*    3 RCCACTPU BIT(1),                /* ACTIVATE PHYSICAL          */
*    3 RCCCTCFL BIT(1),          /* HIGHER FAILURE-CONTACT FLUSHED   */
*    3 RCCCRRSV BIT(6),                /* RES. FOR CONFIG. RESTART   */
*  2 RCCRSV02 PTR(24),                 /* RESERVED                   */
*  2 RCCTPAB  PTR(31),                 /* TOLTEP SSCP PAB            */
*  2 RCCDPQ   PTR(31),                 /* DIAL PENDING NCSPL QUE PTR */
*  2 RCCPATHT PTR(31),                 /* PTR TO PATH TABLE          */
*  2 RCCPATHZ FIXED(15),               /* # ENTRIES IN PATH TABLE    */
*  2 RCCINDEX FIXED(15),               /* INDEX TO PATH TABLE        */
*  2 RCCMXDAT FIXED(15),               /* MAXDATA SIZE               */
*  2 RCCMXOUT FIXED(8),                /* MAXOUT VALUE               */
*  2 RCCPASSL FIXED(8),                /* PASSLIM VALUE              */
*  2 RCCADDR  FIXED(8),                /* STATION ADDRESS            */
*  2 RCCRSPT2 PTR(24),                 /* RESERVED                   */
*  2 RCCSWTOX PTR(31),                 /* SWITCHED TO 370X           */
*                                      /* COMMUNICATIONS NCSPL       */
*  2 RCCXTOSW PTR(31),                 /* 370X TO SWITCHED           */
*                                      /* COMMUNICATIONS NCSPL       */
*  2 RCCRVPT2 PTR(31);                 /* RESERVED                   */
*/* RCCTYPE - PU TYPE CODES                                          */
*DCL RCCPU01  BIT(8) CONSTANT('01'X);  /* PU TYPE 1                  */
*DCL RCCPU02  BIT(8) CONSTANT('02'X);  /* PU TYPE 2                  */
*DCL RCCPU03  BIT(8) CONSTANT('03'X);  /* PU TYPE 3                  */
*DCL RCCPU04  BIT(8) CONSTANT('04'X);  /* PU TYPE 4                  */
*/*                                                                  */
*DCL                                                               0250
*1 ISTRLU BDY(WORD) BASED,             /* LU ENTRY                   */
*  2 RLUCRPR CHAR(LENGTH(ISTRCPRE)),   /* COMMON PREFIX              */
*  2 RLUTYPE  CHAR(1),                 /* LU TYPE                    */
*  2 RLUFLAG  CHAR(1),                 /* RLU FLAGS                  */
*    3 RLURBISA BIT(1),                /* I STATUS 1=ACTIVE          */
*    3 RLUBATCH BIT(1),                /* 1 IF BATCH = YES           */
*    3 RLUGSTAT BIT(1),                /* C/R GENNED ISTATUS VALUE   */
*                                      /* 1 = ACTIVE                 */
*    3 RLUNDSES BIT(1),                /* SPECIAL END SESSION        */
*    3 RLURSV00 BIT(4),                /* RESERVED                   */
*  2 RLUCRFLG BIT(8),                  /* FLAG-CONFIGURATION RESTART */
*    3 RLUACTLU BIT(1),                /* ACTIVATE LOGICAL UNIT OK   */
*    3 RLUCRRSV BIT(7),                /* RESERVED FOR CONFIG RESTART*/
*  2 RLUSSCFM BIT(8),                  /* FUNCTION MANAGER TYPE      */
*  2 RLUINTA PTR(31),                  /* RESERVED                   */
*  2 RLUPACE CHAR(2),                  /* VPACING COUNTS             */
*    3 RLUPACEN CHAR(1),               /* N COUNT                    */
*    3 RLUPACEM CHAR(1),               /* M COUNT                    */
*  2 RLUNCPPC CHAR(2),                 /* NCP PACING COUNTS          */
*    3 RLUNCPPN CHAR(1),               /* N COUNT                    */
*    3 RLUNCPPM CHAR(1),               /* M COUNT                    */
*  2 RLULOCAD CHAR(1),                 /* LOCAL ADDRESS OF LU        */
*  2 RLURSV01 CHAR(3),                 /* RESERVED                   */
*  2 RLUUSSTB CHAR(12) BDY(WORD),      /* USSTAB                     */
*    3 RLUUSSNM CHAR(8),               /* USSTAB NAME                */
*    3 RLUUSSPT PTR(31),               /* USSTAB ADDRESS             */
*  2 RLUMODET CHAR(12) BDY(WORD),      /* MODETAB                    */
*    3 RLUMODEN CHAR(8),               /* MODETAB NAME               */
*    3 RLUMODEP PTR(31),               /* MODETAB ADDRESS            */
*  2 RLULGMOD CHAR(8),                 /* LOGMODE                    */
*  2 RLURSV02 PTR(31);                 /* RESERVED                   */
*/*  RLUSSCFM - FOLLOWING EQUATES ARE FOR THE VARIOUS                */
*/*             FUNCTION MANAGER TYPES                               */
*DCL RLUFSS   BIT(8) CONSTANT('01'X);  /* FORMATTED SYS SERVICES     */
*DCL RLUUSS   BIT(8) CONSTANT('02'X);  /* UNFORMATTED SYS SERVICES   */
*DCL RLUU3270 BIT(8) CONSTANT('04'X);  /* UNFORMATTED SYS SVCS 3270  */
*/*  RLUTYPE - EQUATES FOR LU TYPE                                   */
*DCL RLUTYP04 BIT(8) CONSTANT('04'X);  /* LU TYPE IS 4               */
*/*                                                                  */
*DCL 1 ISTRPX BDY(WORD) BASED,     /* SKELETON PUX ENTRY             */
*      2 RPXPRE CHAR(LENGTH(ISTRPRE)),  /* COMMON PREFIX             */
*      2 RPXFLUX  PTR(31),         /* PTR TO FIRST LUX IN CHAIN      */
*      2 RPXMAXLU PTR(8),          /* MAX NUMBER OF LU'S             */
*                                  /* FOR THIS LINK                  */
*      2 RPXRSV02 PTR(24),         /* RESERVED                       */
*      2 RPXRSV01 PTR(31);         /* RESERVED                       */
*/*                                                                  */
*DCL 1 ISTRLX BDY(WORD) BASED,     /* SKELETON LUX ENTRY             */
*      2 RLXPRE CHAR(LENGTH(ISTRPRE)),  /* COMMON PREFIX             */
*      2 RLXNLUX  PTR(31),         /* PTR TO NEXT LUX IN CHAIN       */
*      2 RLXFLAGA CHAR(1),         /* FLAG BYTE                      */
*        3 RLXINUSE BIT(1),        /* ON = LUX IS IN USE             */
*        3 RLXRSV01 BIT(7),        /* RESERVED                       */
*      2 RLXRSV02 CHAR(3),         /* RESERVED                       */
*      2 RLXRSV03 PTR(31);         /* RESERVED                       */
*/*                                                                  */
*DCL 1 ISTRSW BDY(WORD) BASED,     /* SWITCHED SUBAREA HDR ENTRY     */
*      2 RSWPRE CHAR(LENGTH(ISTRDT)),   /* USE ISTRDT DSECT          */
*      2 RSWDIALT PTR(31),         /* PTR TO DIAL #'S TABLE          */
*      2 RSWGRUPT PTR(31),         /* PTR TO GROUP NAMES TABLE       */
*      2 RSWDIALZ FIXED(15),       /* # ENTRIES IN DIAL NO. TABLE    */
*      2 RSWGRUPZ FIXED(15),       /* # ENTRIES IN GRP NAME TABLE    */
*      2 RSWCTELU FIXED(15),       /* COUNT OF LU ENTRIES IN THIS SEG*/
*      2 RSWRSV02 CHAR(2),         /* RESERVED                       */
*      2 RSWRSV01 PTR(31);         /* RESERVED                       */
*/*                                                                  */
*DCL 1 ISTRDA BDY(WORD) BASED,     /* DAN ENTRY                      */
*      2 RDAPRE CHAR(LENGTH(ISTRPRE)),  /* COMMON PREFIX             */
*      2 RDAADR   PTR(31),                                         0258
*        3 RDAFLAG  BIT(8),        /* FLAG BYTE                      */
*          4 RDARBISA BIT(1),      /* INITIAL STATUS, 1 = ACTIVE     */
*          4 RDARSV01 BIT(7),      /* RESERVED                       */
*        3 RDAUCBAD PTR(24),       /* UCB.PUB ADDRESS                */
*          4 RDACHQI  BIT(8),      /* CHANNEL QUEUE INDEX            */
*          4 RDALUBA  BIT(16),     /* @ OF LOGICAL UNIT BLOCK        */
*      2 RDADACUA CHAR(3),         /* CHANNEL UNIT ADDRESS           */
*      2 RDACTPCC PTR(8),          /* CNT OF BUFFERS RECEIVING DATA  */
*      2 RDADFCUA CHAR(3),         /* DEFAULT CUA                    */
*      2 RDAPUBI  BIT(8),          /* PUB INDEX                      */
*      2 RDARSVPT PTR(31);         /* RESERVED                       */
*/*                                                                  */
*DCL 1 ISTRLS BDY(WORD) BASED,     /* LOCAL SUBAREA HEADER ENTRY     */
*      2 RLSPRE CHAR(LENGTH(ISTRDT)),   /* USE ISTRDT DSECT          */
*      2 RLSCTELU FIXED(15),       /* COUNT OF LU ENTRIES IN THIS SEG*/
*      2 RLSRSV01 FIXED(15),       /* RESERVED                       */
*      2 RLSRSV02 PTR(31);         /* RESERVED                       */
*/*                                                                  */
*DCL  1  ISTDNT BDY(WORD) BASED,  /* DIAL NUMBER TABLE               */
*        2 DNTCTDIG FIXED(8),     /* NUMBER OF DIGITS IN TEL. NUM.   */
*        2 DNTTELNO CHAR(32);     /* TELEPHONE NUMBER                */
*/*                                                                  */
* DCL  1  ISTGNT BDY(WORD) BASED, /* GROUP NAMES TABLE               */
*         2 GNTGRPNM CHAR(8);     /* GROUP NAME ENTRY                */
*/*                                                                  */
*DCL  1  ISTPAT BDY(WORD) BASED,  /* PATH TABLE                      */
*        2 PATGINDX FIXED(15),    /* INDEX TO GROUP NAME TABLE       */
*        2 PATDINDX FIXED(15),    /* INDEX TO DIAL NUMBER TABLE      */
*        2 PATPTHID PTR(8),       /* PATH ID                         */
*        2 PATGRPID PTR(8),       /* GROUP PATH ID                   */
*        2 PATRDCNT PTR(8),       /* REDIAL COUNT                    */
*        2 PATFLAGA BIT(8),       /* FLAG BYTE                       */
*          3 PATUSEFG BIT(1),     /* ON = PATH INITIALLY USABLE      */
*          3 PATRSV01 BIT(7);     /* RESERVED                        */
*                                                                  0263
*/* END OF ATBUILD                                                   */
*/* ATBUILD  DEFER(ALL)                                              */
*/* END OF ATBUILD                                                   */
*                                                                  0263
*                                   /*                       @D31KKDA
*                                                            @D31KKDA
*                                                            @D31KKDA*/
*   DCL                                                            0263
*     C6SWK FIXED(31) BASED;        /* USED TO FREE FSB              */
*                                                                  0264
*/*      POST AUDIT TRAIL IN PSOL CRR AREA                           */
*                                                                  0264
*   DO;                                                            0264
*                                                                  0264
*/***  CRRMAINT  PROCNM(ISTNMC6S)FUNC(SUB)COMP(PS)  **               */
*                                                                  0265
*     DCL                                                          0265
*       CMZK0014 PTR(31) REG(1);                                   0265
*     RFY                                                          0266
*      (CMZK0014) RSTD;                                            0266
*                                                                  0266
*/* ATBUILD (ISTRPH,ISTCRA,ISTPFCRR,ISTPSCRR)                        */
*                                                                  0267
*     RFY                                                          0267
*       ISTZSAVE;                                                  0267
*     RFY                                                          0268
*       ISTPFCRR;                                                  0268
*     RFY                                                          0269
*       ISTCFCRR;                                                  0269
*     RFY                                                          0270
*       ISTZCRR;                                                   0270
*     RFY                                                          0271
*       ISTASCRR;                                                  0271
*     RFY                                                          0272
*       ISTAPCRR;                                                  0272
*     RFY                                                          0273
*       ISTCRA;                                                    0273
*     RFY                                                          0274
*       ISTCNSTA;                                                  0274
*     RFY                                                          0275
*       ISTPSCRR;                                                  0275
*                                                                  0275
*/* END OF ATBUILD                                                   */
*                                                                  0276
*     /***************************************************************/
*     /*                                                             */
*     /* ** SET ENTERED BIT FOR THIS PROCEDURE                       */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0276
*     CMZK0014->RPHCRR->CRACRR->NNMC6S='1'B;                       0276
*                                                                  0276
         L     @15,RPHCRR(,CMZK0014)                               0276
         L     @15,CRACRR(,@15)                                    0276
         OI    NNMC6S(@15),B'00000010'                             0276
*     /***************************************************************/
*     /*                                                             */
*     /* ** CLEAR AND SET CURRENT PROCEDURE BIT                      */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0277
*     CMZK0014->RPHCRR->CRACRR->PSCCRT='0'B;                       0277
         MVI   PSCCRT+1(@15),X'00'                                 0277
         MVI   PSCCRT(@15),B'00000000'                             0277
*     CMZK0014->RPHCRR->CRACRR->CNMC6S='1'B;                       0278
         OI    CNMC6S(@15),B'00000010'                             0278
*   END;                                                           0279
*                                                                  0279
*/*      SET UP BASE STRUCTURE AND ADDRESSING                        */
*                                                                  0280
*   RFY                                                            0280
*    (GPR03P,                                                      0280
*     GPR04P,                                                      0280
*     GPR05P,                                                      0280
*     GPR08P) RSTD;                                                0280
*   RFY                                                            0281
*     ISTRPH BASED(GPR03P);         /* RPL HEADER                    */
*   GPR03P=GPR01P;                  /* RPH ADDRESS IS IN REG. 1 ON 0282
*                                      ENTRY                         */
         LR    GPR03P,GPR01P                                       0282
*   RFY                                                            0283
*     ISTFSB BASED(GPR04P);         /* FEEDBACK STATUS BLOCK         */
*   RFY                                                            0284
*     ISTFDB BASED(ADDR(FSBFDB));   /* FDB BASE                      */
*   GPR04P=RPHWEA;                  /* BASED ON RPH WORK ELEMENT   0285
*                                      ADDRESS                       */
         L     GPR04P,RPHWEA(,GPR03P)                              0285
*   RFY                                                            0286
*     ISTLCPB BASED(GPR05P);        /* GENERAL FORMAT LCPB           */
*   RFY                                                            0287
*     ISTNMLPB BASED(GPR05P);       /* PORT SOLICITOR LCPB           */
*   GPR05P=FSBLCPB;                 /* BASED ON INPUT LCPB           */
         L     GPR05P,FSBLCPB(,GPR04P)                             0288
*   RFY                                                            0289
*     ISTFMCB BASED(GPR08P);        /* PORT SOLICITOR FMCB           */
*   GPR08P=RPHMAJCB;                /* FMCB IS RPH MAJOR CONTROL   0290
*                                      BLOCK                         */
         L     GPR08P,RPHMAJCB-1(,GPR03P)                          0290
         LA    GPR08P,0(,GPR08P)                                   0290
*   RFY                                                            0291
*     ISTDNCB BASED(FMCDNCBA);      /* DESTINATION NODE CONTROL BLOCK*/
*   RFY                                                            0292
*     ISTNCB BASED(FMCDNCBA);       /* BASED ON POINTER IN PORT SOL
*                                      FMCB                          */
*   RFY                                                            0293
*     ISTRPRE BASED(NCBRDTE);       /* RDT TERMINAL ENTRY BASED ON 0293
*                                      DNCB                          */
*   RFY                                                            0294
*     ISTRPT BASED(NCBRDTE);        /* PORT BASED ON DNCB    @D31KKDA*/
*   RFY                                                            0295
*     ISTLCCW BASED(FSBLCCWA);      /* BASE FOR LCCW         @ZA32526*/
*/* SETUP LOGIC IS BEING REPLACED BY CRR MACROS                      */
*/* ADDRESS OF FMCB IS IN REG. 13                                    */
*/* ADDRESS OF LCPB IN REG. 5, FSB IN REG. 4                         */
*                                                                  0296
*   RPHWEA=ADDR(ISTNMLPB);          /* SAVE ADDRESS OF NMLPB         */
         ST    GPR05P,RPHWEA(,GPR03P)                              0296
*   LCPNXLCW=FSBLCCWA;              /* POINT TO CCW TO BE RETRIED    */
         L     @15,FSBLCCWA(,GPR04P)                               0297
         ST    @15,LCPNXLCW(,GPR05P)                               0297
*   RFY                                                            0298
*     GPR07P RSTD;                  /*                       @ZA32526*/
*   GPR07P=0;                       /*                       @ZA32526*/
         SLR   GPR07P,GPR07P                                       0299
*   IF LCCWRWOP=LRB                 /* IF INVITE             @ZA32526*/
*       &FSBSCODE^=NCPSSNS          /* SESSION NOT STARTED   @ZA32526*/
*     THEN                                                         0300
         TM    LCCWRWOP(@15),B'00000110'                           0300
         BNO   @RF00300                                            0300
         TM    LCCWRWOP(@15),B'00111001'                           0300
         BNZ   @RF00300                                            0300
         TM    FSBSCODE(GPR04P),B'00001001'                        0300
         BNO   @RT00300                                            0300
         TM    FSBSCODE(GPR04P),B'00010110'                        0300
         BZ    @RF00300                                            0300
@RT00300 DS    0H                                                  0301
*     GPR07P=1;                     /*                       @ZA32526*/
         LA    GPR07P,1                                            0301
*/* FOLLOWING CODE SETS UP FSB FOR RELSTORE                          */
*                                                                  0302
*   EVAL(ADDR(ISTFDB)-FDBOFSET)->C6SWK=FDBFDBA;                    0302
@RF00300 LA    @15,32                                              0302
         ALR   @15,GPR04P                                          0302
         LH    @09,FDBOFSET(,@15)                                  0302
         LR    @02,@15                                             0302
         SLR   @02,@09                                             0302
         L     @00,FDBFDBA(,@15)                                   0302
         ST    @00,C6SWK(,@02)                                     0302
*   GPR04P=(ADDR(ISTFDB)-FDBOFSET);                                0303
*                                                                  0303
         SLR   @15,@09                                             0303
         LR    GPR04P,@15                                          0303
*/*  RELSTORE BUFADDR(GPR04P)CLEAR(NO)SAVE(YES)                      */
*                                                                  0304
*   DO;                                                            0304
*                                                                  0304
*/* ATBUILD (ISTATCVT,ISTRPH)                                        */
*                                                                  0305
*     RFY                                                          0305
*       ISTDYPAB;                                                  0305
*     RFY                                                          0306
*       ISTATCVT;                                                  0306
*                                                                  0306
*/* END OF ATBUILD                                                   */
*                                                                  0307
*     DCL                                                          0307
*       GPR00F FIXED(31) REG(00);                                  0307
*     DCL                                                          0308
*       GPR00P PTR(31) REG(00);                                    0308
*     DCL                                                          0309
*       GPR02F FIXED(31) REG(02);                                  0309
*     DCL                                                          0310
*       GPR02P PTR(31) REG(02);                                    0310
*     DCL                                                          0311
*       GPR07F FIXED(31) REG(07);                                  0311
*     DCL                                                          0312
*       GPR07P PTR(31) REG(07);                                    0312
*     DCL                                                          0313
*       GPR09F FIXED(31) REG(09);                                  0313
*     DCL                                                          0314
*       GPR09P PTR(31) REG(09);                                    0314
*     DCL                                                          0315
*       GPR10F FIXED(31) REG(10);                                  0315
*     DCL                                                          0316
*       GPR10P PTR(31) REG(10);                                    0316
*     DCL                                                          0317
*       GPR11F FIXED(31) REG(11);                                  0317
*     DCL                                                          0318
*       GPR11P PTR(31) REG(11);                                    0318
*     DCL                                                          0319
*       GPR12F FIXED(31) REG(12);                                  0319
*     DCL                                                          0320
*       GPR12P PTR(31) REG(12);                                    0320
*     DCL                                                          0321
*       GPR15F FIXED(31) REG(15);                                  0321
*     DCL                                                          0322
*       GPR15P PTR(31) REG(15);                                    0322
*     RFY                                                          0323
*      (GPR02P,                                                    0323
*       GPR15P) RSTD;                                              0323
*     RFY                                                          0324
*      (GPR01P,                                                    0324
*       GPR13P) RSTD;                                              0324
*     GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);           0325
          STM GPR02P,GPR13P,RPHWORK(GPR01P)
*     RFY                                                          0326
*       GPR13P UNRSTD;                                             0326
*     GPR04P=GPR04P;                                               0327
*     DCL                                                          0328
*       1 FMZA0016 FIXED(31) STATIC LOCAL,                         0328
*        2 * FIXED(8) INIT(64),                                    0328
*        2 * PTR(24) INIT(0);                                      0328
*     GPR03F=FMZA0016;                                             0329
         L     GPR03F,FMZA0016                                     0329
*     DO;                           /* LISATCVT                    0330
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*       GPR15P=ATCLCPTR;            /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0331
*     END;                          /* LISATCVT                      */
*     GPR02P=GPR15P->ATCBPDA;                                      0333
         L     GPR02P,ATCBPDA(,GPR15P)                             0333
*     GPR15P=GPR15P->ATCSMRS;                                      0334
         L     GPR15P,ATCSMRS(,GPR15P)                             0334
*     DCL                                                          0335
*       FMZL0016 BASED(GPR15P) LABEL VALUERANGE(*);                0335
*     CALL FMZL0016;                                               0336
         BALR  @14,@15                                             0336
*     RFY                                                          0337
*       GPR13P RSTD;                                               0337
*     GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);           0338
          LM GPR02P,GPR13P,RPHWORK(GPR01P)
*     RFY                                                          0339
*      (GPR01P,                                                    0339
*       GPR13P) UNRSTD;                                            0339
*     RFY                                                          0340
*      (GPR02P,                                                    0340
*       GPR15P) UNRSTD;                                            0340
*   END;                            /* *********END OF RELSTORE    0341
*                                      EXPANSION********* GET RID OF
*                                      FSB                           */
*   IF NMPSRTRY<9                   /* RETRY COUNT EXCEEDED?         */
*     THEN                                                         0342
         CLI   NMPSRTRY(GPR05P),9                                  0342
         BNL   @RF00342                                            0342
*     DO;                                                          0343
*       NMPSRTRY=NMPSRTRY+1;        /* INCREMENT RETRY COUNT         */
         LA    @15,1                                               0344
         SLR   @09,@09                                             0344
         IC    @09,NMPSRTRY(,GPR05P)                               0344
         ALR   @09,@15                                             0344
         STC   @09,NMPSRTRY(,GPR05P)                               0344
*       IF GPR07P=1                 /*                       @ZA32526*/
*         THEN                      /*                       @ZA32526*/
         CR    GPR07P,@15                                          0345
         BNE   @RF00345                                            0345
*/*  TPDVTS DVTNAME(INREDRVE)                                        */
*                                                                  0346
*         DO;                                                      0346
*                                                                  0346
*/* ATBUILD (ISTRPH,ISTPAB,ISTDYPAB,ISTATCVT)                        */
*/* END OF ATBUILD                                                   */
*                                                                  0347
*           RFY                                                    0347
*            (GPR01P,                                              0347
*             GPR02P,                                              0347
*             GPR06P,                                              0347
*             GPR08P) RSTD;                                        0347
*           GEN REFS(GPR01P,GPR02P,GPR08P) SETS(RPHWORK)           0348
*               (STM   GPR02P,GPR08P,RPHWORK(GPR01P));             0348
         STM   GPR02P,GPR08P,RPHWORK(GPR01P)
*           RFY                                                    0349
*            (GPR02P,                                              0349
*             GPR08P) UNRSTD;                                      0349
*           RFY                                                    0350
*             GPR00P RSTD;                                         0350
*           DCL                                                    0351
*             FMZD0032 CHAR(8) INIT('INREDRVE');                   0351
*           GPR00P=ADDR(FMZD0032);                                 0352
         LA    GPR00P,FMZD0032                                     0352
*           GPR01P->RPHSRPRM=0;                                    0353
         SLR   @15,@15                                             0353
         ST    @15,RPHSRPRM(,GPR01P)                               0353
*           RFY                                                    0354
*             GPR15P RSTD;                                         0354
*           DO;                     /* LISATCVT                    0355
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*             GPR15P=ATCLCPTR;      /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0356
*           END;                    /* LISATCVT                      */
*           GPR15P=GPR15P->ATCESC02;                               0358
         L     GPR15P,ATCESC02(,GPR15P)                            0358
*           DCL                                                    0359
*             FMZL0032 BASED(GPR15P) LABEL VALUERANGE(*);          0359
*           CALL FMZL0032;                                         0360
         BALR  @14,@15                                             0360
*           RFY                                                    0361
*            (GPR00P,                                              0361
*             GPR15P) UNRSTD;                                      0361
*           RFY                                                    0362
*            (GPR02P,                                              0362
*             GPR08P) RSTD;                                        0362
*           GEN REFS(RPHWORK) SETS(GPR02P,GPR08P)                  0363
*               (LM    GPR02P,GPR08P,RPHWORK(GPR01P));             0363
         LM    GPR02P,GPR08P,RPHWORK(GPR01P)
*           RFY                                                    0364
*            (GPR01P,                                              0364
*             GPR02P,                                              0364
*             GPR06P,                                              0364
*             GPR08P) UNRSTD;                                      0364
*         END;                                                     0365
*                                                                  0365
*/***** END OF TPDVTS GENERATION ****                                */
*                                                                  0366
*                                   /*                       @ZA32526*/
*       ELSE                        /*                       @ZA32526*/
*/*  TPQUE (GPR05P,FMCPAB3) NORM                                     */
*                                                                  0366
*         DO;                                                      0366
         B     @RC00345                                            0366
@RF00345 DS    0H                                                  0367
*           RFY                                                    0367
*            (GPR00P,                                              0367
*             GPR15P) RSTD;                                        0367
*           GEN REFS(GPR01P) SETS(RPHWORK)                         0368
*               (STM GPR02P,GPR08P,RPHWORK(GPR01P));               0368
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*           GPR00P=0;                                              0369
         SLR   GPR00P,GPR00P                                       0369
*           GPR15P=ADDR(FMCPAB3);   /* HOLD PAB PTR                  */
         LA    GPR15P,FMCPAB3(,GPR08P)                             0370
*           GPR04P=GPR05P;          /* WORK ELE PTR                  */
         LR    GPR04P,GPR05P                                       0371
*           GPR05P=GPR15P;          /* PASS PAB PTR                  */
         LR    GPR05P,GPR15P                                       0372
*           CALL ATCLCPTR->ATCAP37->ISTAPC37;                      0373
         L     @06,ATCLCPTR                                        0373
         L     @15,ATCAP37(,@06)                                   0373
         BALR  @14,@15                                             0373
*           GEN(NOPR  0)                                           0374
*           NOSETS NOREFS;                                         0374
         NOPR  0
*           RFY                                                    0375
*            (GPR00P,                                              0375
*             GPR15P) UNRSTD;                                      0375
*         END;                      /* *** END OF TPQUE GENERATION 0376
*                                      SCHEDULE LCPB FOR RETRY       */
*     END;                                                         0377
*   ELSE                                                           0378
*     DO;                                                          0378
         B     @RC00342                                            0378
@RF00342 DS    0H                                                  0379
*       RFY                                                        0379
*        (GPR03P,                                                  0379
*         GPR05P,                                                  0379
*         GPR08P,                                                  0379
*         GPR13P) RSTD;             /*                       @DM09621*/
*/*  SET UP REG. 13 AS SAVE AREA POINTER FOR TPMSG                   */
*                                                                  0380
*       GPR13P=ADDR(RPHSAVE1)-4;                                   0380
*                                                                  0380
         LA    GPR13P,RPHSAVE1(,GPR03P)                            0380
         SL    GPR13P,@CF00080                                     0380
*/* PORT DNCB BASED ON FMCB                                          */
*/* PORT RDT ENTRY BASED ON PORT DNCB                                */
*/* NAME IS PARAMETER ON TPMSG                                       */
*/*TPMSG MSGID('854I')MSG((ADDR(RPTCTNM)))PLAREA(LCPLCCW)            */
*                                                                  0381
*       DO;                                                        0381
*         DCL                                                      0382
*           REG1046 REG(1) PTR;                                    0382
*         RFY                                                      0383
*          (REG1046) RSTD;                                         0383
*         RFY                                                      0384
*          (EMCR13) RSTD;                                          0384
*         DCL                                                      0385
*           1 * BASED(REG1046),                                    0385
*            2 CMZID046 PTR(31),                                   0385
*            2 *,                                                  0385
*             3 CMZRL046 PTR(8),                                   0385
*             3 CMZRA046 PTR(24) BDY(BYTE),                        0385
*            2 CMZEA046 PTR(31),                                   0385
*            2 CMZVP046 PTR(31);                                   0385
*                                                                  0385
*/*XREGSET  PID('PLAREA')PPARM(LCPLCCW)RREG(,REG1046)                */
*                                                                  0386
*         DO;                                                      0386
*           REG1046=ADDR(LCPLCCW);  /* SET RREG SYMBOL TO ADDRESS OF
*                                      PPARM OPERAND                 */
         LA    REG1046,LCPLCCW(,GPR05P)                            0387
*         END;                      /* XREGSET                       */
*         CMZID046=0;                                              0389
         SLR   @15,@15                                             0389
         ST    @15,CMZID046(,REG1046)                              0389
*         CMZRL046=0;                                              0390
         MVI   CMZRL046(REG1046),X'00'                             0390
*         CMZRA046=0;                                              0391
         STCM  @15,7,CMZRA046(REG1046)                             0391
*         CMZEA046=0;                                              0392
         ST    @15,CMZEA046(,REG1046)                              0392
*         CMZVP046=0;                                              0393
         ST    @15,CMZVP046(,REG1046)                              0393
*         DCL                                                      0394
*           CMZAA046 CHAR(4) INIT('854I');                         0394
*         CMZID046=ADDR(CMZAA046);                                 0395
         LA    @15,CMZAA046                                        0395
         ST    @15,CMZID046(,REG1046)                              0395
*         CMZVP046=ADDR(RPTCTNM);                                  0396
         L     @15,FMCDNCBA(,GPR08P)                               0396
         L     @15,NCBRDTE(,@15)                                   0396
         LA    @15,RPTCTNM(,@15)                                   0396
         ST    @15,CMZVP046(,REG1046)                              0396
*         DCL                                                      0397
*           CMZSA046(18) PTR(31) BASED(EMCR13);                    0397
*         DCL                                                      0398
*           CMZZO046(1) FIXED(31) INIT(0);                         0398
*         CMZSA046(5)=CMZZO046;                                    0399
         L     @15,CMZZO046                                        0399
         ST    @15,CMZSA046+16(,EMCR13)                            0399
*         DCL                                                      0400
*           REG15046 REG(15) PTR;                                  0400
*         RFY                                                      0401
*           REG15046 RSTD;                                         0401
*         DO;                       /* LISATCVT                    0402
*                                      CVTBASE(PAGEABLE,(REG15046))  */
*           REG15046=ATCLCPTR;      /* SET UP ATCVT POINTER          */
         L     REG15046,ATCLCPTR                                   0403
*         END;                      /* LISATCVT                      */
*         DCL                                                      0405
*           CMTA046 BASED(REG15046) ENTRY VALUERANGE(*);           0405
*         REG15046=REG15046->ATCMSGP;                              0406
         L     REG15046,ATCMSGP(,REG15046)                         0406
*         CALL CMTA046;                                            0407
         BALR  @14,@15                                             0407
*         RESPECIFY                                                0408
*          (REG1046,                                               0408
*           REG15046) UNRESTRICTED;                                0408
*         RFY                                                      0409
*          (EMCR13) UNRSTD;                                        0409
*       END;                                                       0410
*       GPR01P=GPR03P;              /* RESTORE NMLPB ADDR            */
*                                                                  0411
         LR    GPR01P,GPR03P                                       0411
*       /*************************************************************/
*       /*                                                           */
*       /* RELSTORE BUFADDR(GPR05P)CLEAR(NO)SAVE(YES)                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0412
*       DO;                                                        0412
*                                                                  0412
*/* ATBUILD (ISTATCVT,ISTRPH)                                        */
*/* END OF ATBUILD                                                   */
*                                                                  0413
*         RFY                                                      0413
*          (GPR02P,                                                0413
*           GPR15P) RSTD;                                          0413
*         RFY                                                      0414
*          (GPR01P,                                                0414
*           GPR13P) RSTD;                                          0414
*         GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);       0415
          STM GPR02P,GPR13P,RPHWORK(GPR01P)
*         RFY                                                      0416
*           GPR13P UNRSTD;                                         0416
*         GPR04P=GPR05P;                                           0417
         LR    GPR04P,GPR05P                                       0417
*         DCL                                                      0418
*           1 FMZA0055 FIXED(31) STATIC LOCAL,                     0418
*            2 * FIXED(8) INIT(64),                                0418
*            2 * PTR(24) INIT(0);                                  0418
*         GPR03F=FMZA0055;                                         0419
         L     GPR03F,FMZA0055                                     0419
*         DO;                       /* LISATCVT                    0420
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*           GPR15P=ATCLCPTR;        /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0421
*         END;                      /* LISATCVT                      */
*         GPR02P=GPR15P->ATCBPDA;                                  0423
         L     GPR02P,ATCBPDA(,GPR15P)                             0423
*         GPR15P=GPR15P->ATCSMRS;                                  0424
         L     GPR15P,ATCSMRS(,GPR15P)                             0424
*         DCL                                                      0425
*           FMZL0055 BASED(GPR15P) LABEL VALUERANGE(*);            0425
*         CALL FMZL0055;                                           0426
         BALR  @14,@15                                             0426
*         RFY                                                      0427
*           GPR13P RSTD;                                           0427
*         GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);       0428
          LM GPR02P,GPR13P,RPHWORK(GPR01P)
*         RFY                                                      0429
*          (GPR01P,                                                0429
*           GPR13P) UNRSTD;                                        0429
*         RFY                                                      0430
*          (GPR02P,                                                0430
*           GPR15P) UNRSTD;                                        0430
*       END;                        /* *********END OF RELSTORE    0431
*                                      EXPANSION********* FREE NMLPB */
*     END;                                                         0432
*   RFY                                                            0433
*     GPR07P UNRSTD;                /*                       @ZA32526*/
@RC00342 DS    0H                                                  0434
*/* TPEXIT  NORM                                                     */
*                                                                  0434
*   DO;                                                            0434
*     RESPECIFY                                                    0435
*       GPR15P RSTD;                                               0435
*                                                                  0435
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT)                               */
*/* END OF ATBUILD                                                   */
*                                                                  0436
*     DO;                           /* LISATCVT                    0436
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*       GPR15P=ATCLCPTR;            /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0437
*     END;                          /* LISATCVT                      */
*     RESPECIFY                                                    0439
*       GPR00F RSTD;                                               0439
*     GPR00F=4;                     /* SET PARAMETER REGISTER TO 4   */
         LA    GPR00F,4                                            0440
*     GPR15P=GPR15P->ATCAP31;                                      0441
         L     GPR15P,ATCAP31(,GPR15P)                             0441
*     DCL                                                          0442
*       FMZL0071 BASED(GPR15P) LABEL VALUERANGE(*);                0442
*     CALL FMZL0071;                                               0443
         BALR  @14,@15                                             0443
*     RESPECIFY                                                    0444
*      (GPR00F,                                                    0444
*       GPR15P) UNRSTD;                                            0444
*   END;                            /* **** END OF TPEXIT END OF   0445
*                                      PROCESS                       */
*/* TPEPILOG                                                         */
*                                                                  0446
*   GEN(PRINT OFF);                                                0446
         PRINT OFF
*/* VS1, VS2 TPIOS SAVEAREA FORMAT */                              0447
*DCL  1  ISTZSAVE BDY(WORD) BASED,                                 0447
*        2   ZSAZSVBC PTR(31),         /* SAVEAREA BACK CHAIN        */
*            3   ZSAZSVMS CHAR(1),     /* MODULE TRACE CODE          */
*                4 ZSAZACTV BIT(1),    /* ACTIVE SAVE AREA FLAG      */
*        2   ZSAZSVFC PTR(31),         /* SAVEAREA FORWARD CHAIN     */
*        2   ZSAZSVRR PTR(31),         /* RETURN REGISTER            */
*        2   ZSAZSVVR (6) PTR(31),    /* VARIABLE REGS (7-12) SVEAREA*/
*        2   ZSAZTRAC CHAR(4);        /* EBCDIC NAME OF OWNER        */
*/*                                                                0448
*THE FOLLOWING EQUATES SHOULD READ ''FIXED(8) CONSTANT(LENGTH(X))'',
*WHERE X IS THE NAME OF THE VARIABLE CONTROL BLOCK OR FIELD OF WHICH
*LENGTH IS THE VALUE BEING EQUATED, SHOULD THE PLS COMPILER BE     0448
*BE ABLE TO TAKE IT.                                               0448
*                                                                    */
*DCL ZSAZSVVA FIXED(8) CONSTANT(8);  /* DISPLACEMENT TO VARIABLE REGS*/
*DCL ZSAZSVSZ FIXED(8) CONSTANT(40); /* LENGTH OF ISTZSAVE           */
*/* PREFIX FOR CRR                                                   */
*/*                                                                  */
*/* RELEASE 1 - JUNE 28, 1973                                        */
*/*                                                                  */
*DCL 1 ISTPFCRR BASED BDY(WORD),        /* PREFIX FOR CRR            */
*     2  PFCCRR   CHAR(4),              /* CRR HEADER                */
*        3  PFCCRRID CHAR(1),           /* CRR ID FIELD              */
*           4  CRRID CHAR(1),           /* BASIC CTL LAYER DEFINITION*/
*        3  PFCRSV10 CHAR(1),           /* RESERVED FOR ALIGNMENT    */
*        3  PFCCRRLN CHAR(2),           /* CRR LENGTH                */
*           4  CRRLEN CHAR(2),          /* BASIC CTL LAYER DEF       */
*     2  PFCHDR CHAR(8) BDY(WORD),      /* SAVE AREA FOR OLD CRR FRR */
*        3  PFCCRRO  PTR(31),           /* PTR TO OLD CRR            */
*           4  CRRCHAIN PTR(31),        /* BASIC CTL LAYER DEFINITION
*                                          FOR OLD CRR PTR           */
*        3  PFCFRRO  PTR(31),           /* PTR TO OLD FRR            */
*           4  CRRFRR   PTR(31),        /* BASIC CTL LAYER         0450
*                                          DEFINITION OF OLD FRR PTR */
*     2  PFCFTA BIT(8),                 /* ID OF LAST FUNCTION TRACED*/
*     2  PFCRSV01 CHAR(3);              /* ALIGNMENT                 */
*DCL PFIDPIE BIT(8) CONSTANT('80'X);    /* DOS/VS TPIOS              */
*DCL PFIDORE BIT(8) CONSTANT('81'X);    /* DOS/VS BMS                */
*DCL PFIDAPE BIT(8) CONSTANT('82'X);    /* DOS/VS PSS                */
*DCL PFCIDPSV BIT(8) CONSTANT('38'X); /* COMPONENT ID              0454
*                                          PSS - VS1 AND 2           */
*DCL PFCIDTPV BIT(8) CONSTANT('3C'X); /* COMPONENT ID              0455
*                                          TPIOS VS1 AND 2           */
*DCL PFCIDSME BIT(8) CONSTANT('3D'X); /* COMPONENT ID              0456
*                                          STORAGE MANAGEMENT DOS    */
*DCL PFCIDOC BIT(8) CONSTANT('31'X);    /* COMPONENT ID OPEN/CLOSE   */
*DCL PFCIDPS BIT(8) CONSTANT('32'X);    /* PORT SOLICITOR            */
*DCL PFCIDCS BIT(8) CONSTANT('34'X);    /* CLUSTER SOLICITOR         */
*DCL PFCIDIT BIT(8) CONSTANT('35'X);    /* INIT/TERM                 */
*DCL PFCIDVY BIT(8) CONSTANT('36'X);    /* VARY                      */
*DCL PFCIDNS  BIT(8) CONSTANT('37'X);   /* NET. STAT.SRV.            */
*DCL PFCIDTPE BIT(8) CONSTANT('38'X);   /* COMPONENT ID            0463
*                                          TPIOS - DOS               */
*DCL PFCIDCL BIT(8) CONSTANT('39'X);    /* COMPONENT ID            0464
*                                          CONTROL LAYER             */
*DCL PFCIDPSE BIT(8) CONSTANT('3A'X);   /* COMPONENT ID            0465
*                                          PSS - DOS                 */
*DCL PFCIDSMV BIT(8) CONSTANT('3F'X);   /* COMPONENT ID            0466
*                                          STORAGE MANAGEMENT        */
*DCL PFCIDTIO BIT(8) CONSTANT('40'X);   /* COMPONENT ID TIIO       0467
*                                          PROCESSING (VS2)          */
*DCL PFCIDRS  BIT(8) CONSTANT('41'X);   /* ID FOR REMOTE SOLICITOR   */
*/* CRR FOR COMMAND FACILITIES                                      */
*/*  REVISIONS                                         001 06/02/75 */
*DCL  1  ISTCFCRR BDY(WORD) BASED, /* CRR FOR COMMAND FACILITIES    */
*        2 CFCAUDIT,               /* AUDIT TRAIL FOR CMD FACILITIES*/
*          3 CFCNTRD  CHAR(1),     /* LIST OF MODULES IN COMMAND    */
*                                  /* FACILITIES ENTERED            */
*            4 NCFCS1   BIT(1),    /* IND MODULE ISTCFCS1 ENTERED   */
*            4 NCFCS2   BIT(1),    /* IND MODULE ISTCFCS2 ENTERED   */
*            4 NCFCR1   BIT(1),    /* IND MODULE ISTCFCR1 ENTERED   */
*            4 NCFCRP   BIT(1),    /* IND MODULE ISTCFCRP ENTERED   */
*            4 NCFCR2   BIT(1),    /* IND MODULE ISTCFCR2 ENTERED   */
*            4 NCFRSVD  BIT(3),    /* RESERVED                      */
*          3 CFCCRT   CHAR(1),     /* LIST OF MODULES IN COMMAND    */
*                                  /* FACILITIES RUNNING            */
*            4 CCFCS1   BIT(1),    /* IND MODULE ISTCFCS1 RUNNING   */
*            4 CCFCS2   BIT(1),    /* IND MODULE ISTCFCS2 RUNNING   */
*            4 CCFCR1   BIT(1),    /* IND MODULE ISTCFCR1 RUNNING   */
*            4 CCFCRP   BIT(1),    /* IND MODULE ISTCFCRP RUNNING   */
*            4 CCFCR2   BIT(1),    /* IND MODULE ISTCFCR2 RUNNING   */
*            4 CCFRSVD1 BIT(3);    /* RESERVED                      */
*DCL TIDCFCS1 BIT(8) CONSTANT('00'X); /* THREAD ID FOR ISTCFCS1     */
*DCL TIDCFCR1 BIT(8) CONSTANT('01'X); /* THREAD ID FOR ISTCFCR1     */
*DCL TIDCFCR2 BIT(8) CONSTANT('02'X); /* THREAD ID FOR ISTCFCR2     */
*/* COMPONENT RECOVERY RECORD FOR TPIOS */                         0473
*/*  DELTA                                             006 02/10/75  */
*DCL                                                               0473
*1  ISTZCRR BDY(WORD) BASED,     /* CONTROL WORD                     */
*   2  ZCRCRR CHAR(4),           /* CONTROL WORD                     */
*      3  ZCRID CHAR(1),         /* CONTROL BLOCK ID                 */
*      3  ZCRLEN CHAR(2),        /* LENGTH OF ZCR                    */
*      3  ZCRFLAG CHAR(1),       /* FLAGS                            */
*   2  ZCRCHAIN PTR(31),         /* POINTER TO PREVIOUS ZCR          */
*   2  ZCRFRRA PTR(31),          /* PTR TO FRR                       */
*   2  ZCRFLGS1 CHAR(1),         /* FLGS USED BY REQUEST COMPLETION  */
*      3  ZCREXSW BIT(1),        /* EXIT SWITCH                      */
*      3  ZCRQUESW BIT(1),       /* QUEUE SWITCH                     */
*      3  ZCRDEQSW BIT(1),       /* DEQUEUE SWITCH                   */
*      3  ZCRWAIT BIT(1),        /* WAIT Q ANALYSIS COMPLETE         */
*      3  ZCRNRMEX BIT(1),       /* NORMAL EXIT TO BE TAKEN          */
*      3  ZCRENDLP BIT(1),       /* END OF LOOP SWITCH               */
*      3  ZCRUNSOL BIT(1),       /* UNSOLICITED DATA                 */
*      3  ZCRFEXIT BIT(1),       /* FORCE EXIT SWITCH                */
*   2  ZCRFLGS2 CHAR(1),         /* FLAGS USED WITHIN TPIOS          */
*      3  ZCRLOCAL BIT(1),       /* LOCAL SUPPORT                    */
*      3  ZCRSHEDI BIT(1),       /* IMMEDIATE SCHEDULE               */
*      3  ZCRFMSED BIT(1),       /* FMCB SEARCH ENDED                */
*      3  ZCROB    BIT(1),       /* OUTBOUND PROC IN PROGRESS        */
*      3  ZCRIF0E1 BIT(1),       /* SWITCH FOR STRUCTURED PGM USED BY
*                                   INBOUND PROCESSING               */
*      3  ZCRIF0E2 BIT(1),       /* SWITCH FOR STRUCTURED PGM USED BY
*                                   INBOUND PROCESSING               */
*      3  ZCRIF0E3 BIT(1),       /* SWITCH FOR STRUCTURED PGM USED BY
*                                   INBOUND PROCESSING               */
*   2  ZCRSWFLD CHAR(1),         /* SWITCHES FOR TPIOS OUTBOUND      */
*      3  ZCRENDSH BIT(1),       /* EXIT FROM REMOTE DEV SCHEDULER   */
*         4  ZCRSLCP BIT(1),     /* SCHEDULE LCPB                    */
*      3  ZCREXTYP BIT(1),       /* TPEXIT TYPE                      */
*      3  ZCRENDPR BIT(1),       /* EXIT FROM INNER PROCESS          */
*      3  ZCRNDLCP BIT(1),       /* EXIT FROM LCPB PROCESSING        */
*         4  ZCROB1 BIT(1),      /* REMOTE DEV SCHED 1ST TIME SWITCH */
*      3  ZCRENDX BIT(1),        /* EXIT FROM LCCW/BTU XLATION       */
*      3  ZCRENDXL BIT(1),       /* EXIT FROM LCCW PROC              */
*      3  ZCRENDAN BIT(1),       /* EXIT FROM LCPB ANALYSIS          */
*      3  ZCRRESET BIT(1),                                         0473
*         4  ZCRCNLXL BIT(1),    /* CANCEL FURTHER XLATE             */
*   2  ZCRFLGS3 CHAR(1),         /* FLAGS FOR OUTBOUND PROCESSING    */
*      3  ZCRTIC BIT(1),         /* SELECT NOT TO BE SENT            */
*      3  ZCRTPCON BIT(1),       /* TPIOS CONTACT SENT               */
*      3  ZCRTPDIS BIT(1),       /* TPIOS DISCONNECT TO BE SENT      */
*      3  ZCRDISC  BIT(1),       /* DISCONNECT IN PROCESS            */
*      3  ZCREDRIV BIT(1),       /* DO DERIVE                        */
*      3  ZCRNOFRE BIT(1),       /* NO FREEING OF SIO QUEUE          */
*      3  ZCRWRPTR BIT(1),       /* WRITE TO PRINTER REQUEST         */
*      3  ZCRINLCP BIT(1),       /* ERROR OCCURED DURING OUTBND PROC */
*   2  ZCRGENSW CHAR(1),         /* GENERAL SWITCHES                 */
*      3  ZCRTSW1  BIT(1),       /* TEMP SW FOR STRUCTURED PGM       */
*      3  ZCRTSW2  BIT(1),       /* TEMP SW FOR STRUCTURED PGM       */
*      3  ZCRRT06  BIT(1),       /* CRITICAL TEXT OPTION             */
*      3  ZCRLCSYN BIT(1),       /* LCCW SYNC SPECIFIED              */
*      3  ZCREXRES BIT(1),       /* EXCEPTION RESPONSE SPECIFIED     */
*      3  ZCRCLRBD BIT(1),       /* FLAG INDICATING BIND WAS CLEARED */
*      3  ZCRBRIS  BIT(1),       /* BRACKET REJECTED DUE TO IN BRAC. */
*      3  ZCRF1RES BIT(1),       /* FID1 RESPONSE TO BE GENERATED    */
*   2  ZCRPFLGS CHAR(1),         /* UTILITIES PROC OPTION FLAGS      */
*      3  ZCRQAHED BIT(1),      /* QXFR RTN TO USE INSERT OPT'N ON TPQ*
*      3  *        BIT(7),      /* RESERVED                          */
*   2  ZCRIBPR CHAR(1),          /* INBOUND PROCESSING FLAGS         */
*         3  ZCRNOBUF BIT(1),    /* FSB WITH NO BUFFER               */
*         3  ZCRERR   BIT(1),    /* ERROR INDICATOR                  */
*         3  ZCRRELK  BIT(1),    /* RESET ERROR LOCK FUNCTION REQ.   */
*         3  ZCRLCPFR BIT(1),    /* FLAG IND. DEALLOCATE ATOP LCPB   */
*         3  ZCRLCPFD BIT(1),    /* FLAG IND. LCPB FOUND ON WAITQ    */
*         3  ZCR3270  BIT(1),    /* 3270 DEVICE                      */
*         3  ZCR3270R BIT(1),    /* 3270 DEVICE IN RECORD MODE       */
*         3  *        BIT(1),    /* RESERVED                         */
*   2  ZCRSCPSW CHAR(1),         /* SESSION CONTROL FLAGS            */
*         3  ZCRTPEX BIT(1),     /* TP EXIT                          */
*         3  ZCRTPINV BIT(1),    /* INVOKE TPIOS                     */
*         3  ZCRRJLCP BIT(1),    /* LCPB REJECTED                    */
*         3  ZCRLREQ BIT(1),     /* REQUEST                          */
*         3  ZCRPRCMP BIT(1),    /* PROCESSING COMPLETE              */
*         3  ZCRFSBWE BIT(1),    /* FSB IS WORK ELEMENT              */
*         3  ZCRSKIPT BIT(1),    /* SKIP TRACE FLAG                  */
*         3  ZCRMDATA BIT(1),    /* LCCW DATA HAS BEEN MOVED @ZA29724*/
*   2  ZCRCRLCP PTR(31),         /* CURRENT LCPB PTR                 */
*   2  ZCRPARMS BDY(WORD),       /* PARAMETERS PASSED TO UTILITIES */
*      3  ZCRFBPTR PTR(31),      /* PTR TO FROM BUFFER               */
*         4  ZCRCBPTR PTR(31),   /* PTR TO CURRENT BUFFER            */
*      3  ZCRTBPTR PTR(31),      /* PTR TO TO-OR-TRANSLATE BUFFER    */
*      3  ZCRMLNG FIXED(16),     /* LENGTH TO MOVE         @ZA28610  */
*      3  ZCRDFRDA FIXED(15),    /* OFFSET FROM DATA ADDR IN FROM BUF*/
*         4  ZCRDTODA FIXED(15), /* OFFSET FROM DATA ADDR XLATE BUF  */
*      3  ZCRPCOD1 CHAR(1),      /* CODE BYTE FOR ALLOC/DISALLOC     */
*         4  ZCRPPG BIT(1),      /* GET PAGEABLE BUFF                */
*         4  ZCRPLNG BIT(1),     /* LENGTH OF BUFFER SPECIFIED       */
*         4  ZCRPFSB BIT(1),     /* GET FSB                          */
*         4  ZCRPLSBF BIT(1),    /* GET LSCB AND BUFFER              */
*            5 ZCRPLSBQ BIT(1),  /* PURGE LSCB QUEUE                 */
*         4  ZCRPLSCB BIT(1),    /* GET OR RELEASE LSCB              */
*         4  ZCRPBUF BIT(1),     /* GET OR RELEASE BUFFER            */
*         4  ZCRPCFTX BIT(1),    /* CONFIDENTIAL TEXT                */
*         4  ZCRPRES BIT(1),     /* RESERVED                         */
*      3  ZCRPCOD2 CHAR(1),      /* CODE BYTE FOR MOVE               */
*         4  ZCRPPG2 BIT(1),     /* GET PAGEABLE BUFFER              */
*         4  ZCRPFHDR BIT(1),    /* FROM BUFFER FDB TO BE USED       */
*         4  ZCRPMFGF BIT(1),    /* MOVE STARTS WIHT 1ST BUFF IN BLOCK*
*         4  ZCRPRES2 BIT(5),    /* RESERVED                         */
*      3  ZCRPCHAR CHAR(1),      /* TRANSLATE & TEST SEARCH CHARACTER*/
*      3  ZCRPSW   CHAR(1),      /* SWITCH FIELD                     */
*   2  ZCRCCWA PTR(31),          /* PTR TO CURRENT CCW (CCW 1 OR 2)  */
*   2  ZCRBFPTR PTR(31),         /* SAVE 1ST BUFF PTR IN TO-BUFF CHN
*                                   OR LAST BUFFER IN CHANNEL PGM    */
*   2  ZCRZLB PTR(31),           /* PTR TO CURR BUFF IN CHANNEL PGM  */
*   2  ZCRPVZB PTR(31),          /* PTR TO PREVIOUS BUFF IN CHAN PGM */
*   2  ZCRSVRTN BDY(WORD),       /* REG 14 SAVE AREAS                */
*      3  ZCRSVF1 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF2 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF3 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF4 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF5 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF6 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF7 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF8 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF9 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF10 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF11 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF12 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF13 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF14 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF15 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF16 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF17 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF18 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF19 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF20 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF21 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF22 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF23 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF24 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF25 PTR(31),      /* SAVE REQUIRED REGISTER           */
*   2  ZCRWKARA BDY(WORD),       /* TEMPORARY REG SAVE AREA          */
*      3  ZCRSVWK1 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK2 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK3 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK4 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK5 PTR(31),      /* SAVE REQUIRED REG                */
*   2  ZCRFSBSV PTR(31),         /* FSB CHAIN PTR SAVEAREA           */
*   2  ZCRFBPRC BIT(1),          /* FSB PROCESS SW                   */
*   2  ZCRMOREL BIT(1),          /* MORE ELEMENTS SW                 */
*   2  ZCRSCANQ BIT(1),          /* SCAN QUEUE SW                    */
*   2  ZCRNXTEL BIT(1),          /* NEXT ELEMENT SW                  */
*   2  ZCRXSCHD BIT(1),          /* EXIT SCHEDULE SW                 */
*   2  ZCRLSTFB BIT(1),          /* INBOUND PROC LAST FSB FOR ELEM SW*/
*   2  ZCRTOPQ  BIT(1),          /* QUEUE ELEMENT TO TOP SW          */
*   2  ZCRAWQSW BIT(1),          /* CHECK AWAITQ FOR MORE WORK =1    */
*                                /* CHECK WAITQ =0                   */
*   2  ZCRRCDSV CHAR(1),         /* RETURN CODE SAVEAREA             */
*   2  ZCRPRMTC CHAR(1),         /* PREEMPT COMPLETION PARAMETER BYTE*/
*   2  ZCROPCDE CHAR(1),         /* OP CODE TO BE TRANSFORMED         *
*   2  ZCRR2SV PTR(31),          /* ISTZBFDI REG 2 SAVE EREA         */
*   2  ZCRR13SV PTR(31),         /* ISTSBFDI REG 13 SAVE EREA        */
*   2  ZCRCIDSV BDY(WORD),       /* ISTZBFDI CID SAVE AREA           */
*      3  ZCRSAFSV CHAR(2),      /* ISTZBFDI SAF SAVE AREA           */
*      3  ZCRDAFSV CHAR(2),      /* ISTZBFDI DAF SAVE AREA           */
*   2  ZCRSAVEZ (6) BDY(WORD) CHAR(LENGTH(ISTZSAVE)),              0473
*                                /* SAVE/TRACE AREAS FOR TPIOS MODS  */
*   2  ZCRREMIC PTR(31),        /* POINTER TO REMOTE RN ICNCB        */
*   2  ZCRAUDIT CHAR(36),        /* TPIOS AUDIT TRAIL AREA           */
*      3  ZCRTID CHAR(1),        /* THREAD I.D.                      */
*      3  ZCRTNAME CHAR(4),      /* LAST 4 CHARS OF THREAD NAME      */
*      3  ZCRENTER BIT(248),     /* BIT ARRAY FOR MODULES ENTERED    */
*         4  ZCREAC1A BIT(1),    /* ISTZAC1A ENTERED                 */
*         4  ZCREAC0A BIT(1),    /* ISTZAC0A ENTERED                 */
*         4  ZCREAC0B BIT(1),    /* ISTZAC0B ENTERED                 */
*         4  ZCREAC1B BIT(1),    /* ISTZAC1B ENTERED                 */
*         4  ZCREBCAA BIT(1),    /* ISTZBCAA ENTERED                 */
*         4  ZCREBCAB BIT(1),    /* ISTZBCAB ENTERED                 */
*         4  ZCREBCAE BIT(1),    /* ISTZBCAE ENTERED                 */
*         4  ZCREBCAG BIT(1),    /* ISTZBCAG ENTERED                 */
*         4  ZCREBCAI BIT(1),    /* ISTZBCAI ENTERED                 */
*         4  ZCREBCAM BIT(1),    /* ISTZBCAM ENTERED                 */
*         4  ZCREBCBA BIT(1),    /* ISTZBCBA ENTERED                 */
*         4  ZCREBCBB BIT(1),    /* ISTZBCBB ENTERED                 */
*         4  ZCREBCBI BIT(1),    /* ISTZBCBI ENTERED                 */
*         4  ZCREBCCB BIT(1),    /* ISTZBCCB ENTERED                 */
*         4  ZCREBCDI BIT(1),    /* ISTZBCDI ENTERED                 */
*         4  ZCREBCEB BIT(1),    /* ISTZBCEB ENTERED                 */
*         4  ZCREBCFA BIT(1),    /* ISTZBCFA ENTERED                 */
*         4  ZCREBCFB BIT(1),    /* ISTZBCFB ENTERED                 */
*         4  ZCREBCGA BIT(1),    /* ISTZBCGA ENTERED                 */
*         4  ZCREBCGB BIT(1),    /* ISTZBCGB ENTERED                 */
*         4  ZCREBCHA BIT(1),    /* ISTZBCHA ENTERED                 */
*         4  ZCREBCHB BIT(1),    /* ISTZBCHB ENTERED                 */
*         4  ZCREBCIA BIT(1),    /* ISTZBCIA ENTERED                 */
*         4  ZCREBCIB BIT(1),    /* ISTZBCIB ENTERED                 */
*         4  ZCREBCID BIT(1),    /* ISTZBCID ENTERED                 */
*         4  ZCREBCJA BIT(1),    /* ISTZBCJA ENTERED                 */
*         4  ZCREBCJB BIT(1),    /* ISTZBCJB ENTERED                 */
*         4  ZCREBCKA BIT(1),    /* ISTZBCKA ENTERED                 */
*         4  ZCREBCKB BIT(1),    /* ISTZBCKB ENTERED                 */
*         4  ZCREBCLA BIT(1),    /* ISTZBCLA ENTERED                 */
*         4  ZCREBCLB BIT(1),    /* ISTZBCLB ENTERED                 */
*         4  ZCREBCMB BIT(1),    /* ISTZBCMB ENTERED                 */
*         4  ZCREBCND BIT(1),    /* ISTZBCND ENTERED                 */
*         4  ZCREBCNE BIT(1),    /* ISTZBCNE ENTERED                 */
*         4  ZCREBCOB BIT(1),    /* ISTZBCOB ENTERED                 */
*         4  ZCREBCPB BIT(1),    /* ISTZBCPB ENTERED                 */
*         4  ZCREBCQB BIT(1),    /* ISTZBCQB ENTERED                 */
*         4  ZCREBCRA BIT(1),    /* ISTZBCRA ENTERED                 */
*         4  ZCREBCRB BIT(1),    /* ISTZBCRB ENTERED                 */
*         4  ZCREBCSC BIT(1),    /* ISTZBCSC ENTERED                 */
*         4  ZCREBCXA BIT(1),    /* ISTZBCXA ENTERED                 */
*         4  ZCREBCX0 BIT(1),    /* ISTZBCX0 ENTERED                 */
*         4  ZCREBCY0 BIT(1),    /* ISTZBCY0 ENTERED                 */
*         4  ZCREBCZ0 BIT(1),    /* ISTZBCZ0 ENTERED                 */
*         4  ZCREBC0A BIT(1),    /* ISTZBC0A ENTERED                 */
*         4  ZCREBC0B BIT(1),    /* ISTZBC0B ENTERED                 */
*         4  ZCRECC0A BIT(1),    /* ISTZCC0A ENTERED                 */
*         4  ZCRECC0B BIT(1),    /* ISTZCC0B ENTERED                 */
*         4  ZCRECC1A BIT(1),    /* ISTZCC1A ENTERED                 */
*         4  ZCRECC1B BIT(1),    /* ISTZCC1B ENTERED                 */
*         4  ZCRECC2B BIT(1),    /* ISTZCC2B ENTERED                 */
*         4  ZCREDCA0 BIT(1),    /* ISTZDCA0 ENTERED                 */
*         4  ZCREDCB0 BIT(1),    /* ISTZDCB0 ENTERED                 */
*         4  ZCREDCC0 BIT(1),    /* ISTZDCC0 ENTERED                 */
*         4  ZCREDCD0 BIT(1),    /* ISTZDCD0 ENTERED                 */
*         4  ZCREDCE0 BIT(1),    /* ISTZDCE0 ENTERED                 */
*         4  ZCREDCF0 BIT(1),    /* ISTZDCF0 ENTERED                 */
*         4  ZCREDCH0 BIT(1),    /* ISTZDCH0 ENTERED                 */
*         4  ZCREDCI0 BIT(1),    /* ISTZDCI0 ENTERED                 */
*         4  ZCREDCJ0 BIT(1),    /* ISTZDCJ0 ENTERED                 */
*         4  ZCREDCKA BIT(1),    /* ISTZDCKA ENTERED                 */
*         4  ZCREDCKB BIT(1),    /* ISTZDCKB ENTERED                 */
*         4  ZCREDCL0 BIT(1),    /* ISTZDCL0 ENTERED                 */
*         4  ZCREDCMB BIT(1),    /* ISTZDCMB ENTERED                 */
*         4  ZCREECBA BIT(1),    /* ISTZECBA ENTERED                 */
*         4  ZCREECBB BIT(1),    /* ISTZECBB ENTERED                 */
*         4  ZCREECCA BIT(1),    /* ISTZECCA ENTERED                 */
*         4  ZCREECCB BIT(1),    /* ISTZECCB ENTERED                 */
*         4  ZCREECDA BIT(1),    /* ISTZECDA ENTERED                 */
*         4  ZCREECEA BIT(1),    /* ISTZECEA ENTERED                 */
*         4  ZCREECTA BIT(1),    /* ISTZECTA ENTERED                 */
*         4  ZCREFCEA BIT(1),    /* ISTZFCEA ENTERED                 */
*         4  ZCREFCEB BIT(1),    /* ISTZFCEB ENTERED                 */
*         4  ZCREGCAB BIT(1),    /* ISTZGCAB ENTERED                 */
*         4  ZCREGCBB BIT(1),    /* ISTZGCBB ENTERED                 */
*         4  *        BIT(1),    /* NOT USED                         */
*         4  ZCREGCDB BIT(1),    /* ISTZGCDB ENTERED                 */
*         4  ZCREGCEB BIT(1),    /* ISTZGCEB ENTERED                 */
*         4  ZCREGCLA BIT(1),    /* ISTZGCLA ENTERED                 */
*         4  ZCREGC0A BIT(1),    /* ISTZGC0A ENTERED                 */
*         4  ZCREGC0B BIT(1),    /* ISTZGC0B ENTERED                 */
*         4  ZCREHCAN BIT(1),    /* ISTZHCAN ENTERED                 */
*         4  ZCREICAA BIT(1),    /* ISTZICAA ENTERED                 */
*         4  ZCREICAB BIT(1),    /* ISTZICAB ENTERED                 */
*         4  ZCREICBB BIT(1),    /* ISTZICBB ENTERED                 */
*         4  ZCREICBI BIT(1),    /* ISTZICBI ENTERED                 */
*         4  ZCREICCB BIT(1),    /* ISTZICCB ENTERED                 */
*         4  ZCREICCI BIT(1),    /* ISTZICCI ENTERED                 */
*         4  ZCREICDB BIT(1),    /* ISTZICDB ENTERED                 */
*         4  ZCREICEB BIT(1),    /* ISTZICEB ENTERED                 */
*         4  ZCREICGB BIT(1),    /* ISTZICGB ENTERED                 */
*         4  ZCREICHB BIT(1),    /* ISTZICHB ENTERED                 */
*         4  ZCREICIB BIT(1),    /* ISTZICIB ENTERED                 */
*         4  ZCREICID BIT(1),    /* ISTZICID ENTERED                 */
*         4  ZCREICJB BIT(1),    /* ISTZICJB ENTERED                 */
*         4  ZCREICKB BIT(1),    /* ISTZICKB ENTERED                 */
*         4  ZCREICKE BIT(1),    /* ISTZICKE ENTERED                 */
*         4  ZCREICKG BIT(1),    /* ISTZICKG ENTERED                 */
*         4  ZCREICLB BIT(1),    /* ISTZICLB ENTERED                 */
*         4  ZCREICMB BIT(1),    /* ISTZICMB ENTERED                 */
*         4  ZCREICNA BIT(1),    /* ISTZICNA ENTERED                 */
*         4  ZCREICNB BIT(1),    /* ISTZICNB ENTERED                 */
*         4  ZCREICOA BIT(1),    /* ISTZICOA ENTERED                 */
*         4  ZCREICOB BIT(1),    /* ISTZICOB ENTERED                 */
*         4  ZCREICQA BIT(1),    /* ISTZICQA ENTERED                 */
*         4  ZCREICQB BIT(1),    /* ISTZICQB ENTERED                 */
*         4  ZCREICRB BIT(1),    /* ISTZICRB ENTERED                 */
*         4  ZCREICSB BIT(1),    /* ISTZICSB ENTERED                 */
*         4  ZCREICSC BIT(1),    /* ISTZICSC ENTERED                 */
*         4  ZCREICTB BIT(1),    /* ISTZICTB ENTERED                 */
*         4  ZCREICUB BIT(1),    /* ISTZICUB ENTERED                 */
*         4  ZCREICVB BIT(1),    /* ISTZICVB ENTERED                 */
*         4  ZCREICWB BIT(1),    /* ISTZICWB ENTERED                 */
*         4  ZCREICX0 BIT(1),    /* ISTZICX0 ENTERED                 */
*         4  ZCREIC0B BIT(1),    /* ISTZIC0B ENTERED                 */
*         4  ZCREIC1B BIT(1),    /* ISTZIC1B ENTERED                 */
*         4  ZCREJCAB BIT(1),    /* ISTZJCAB ENTERED                 */
*         4  ZCREJCBB BIT(1),    /* ISTZJCBB ENTERED                 */
*         4  ZCREJCCB BIT(1),    /* ISTZJCCB ENTERED                 */
*         4  ZCREJCDB BIT(1),    /* ISTZJCDB ENTERED                 */
*         4  ZCREJC0B BIT(1),    /* ISTZJC0B ENTERED                 */
*         4  ZCREKCBB BIT(1),    /* ISTZKCBB ENTERED                 */
*         4  ZCREKCBN BIT(1),    /* ISTZKCBN ENTERED                 */
*         4  ZCREKCCN BIT(1),    /* ISTZKCCN ENTERED                 */
*         4  ZCREDCWR BIT(1),    /* ISTZDCWR ENTERED                 */
*         4  ZCREDCWB BIT(1),    /* ISTZDCWB ENTERED                 */
*         4  ZCREDCXR BIT(1),    /* ISTZDCXR ENTERED                 */
*         4  ZCREBCBR BIT(1),    /* ISTZBCBR ENTERED                 */
*         4  ZCREBCDR BIT(1),    /* ISTZBCDR ENTERED                 */
*         4  ZCREBCAR BIT(1),    /* ISTZBCAR ENTERED                 */
*         4  ZCRECCBI BIT(1),    /* ISTZCCBI ENTERED                 */
*         4  ZCRECCAI BIT(1),    /* ISTZCCAI ENTERED                 */
*         4  ZCRECCCI BIT(1),    /* ISTZCCCI ENTERED                 */
*         4  ZCREAC1R BIT(1),    /* ISTZAC1R ENTERED                 */
*         4  ZCREBCSB BIT(1),    /* ISTZBCSB ENTERED                 */
*         4  ZCREDCPR BIT(1),    /* ISTZDCPR ENTERED                 */
*         4  ZCREDCQR BIT(1),    /* ISTZDCQR ENTERED                 */
*         4  ZCREBCAL BIT(1),    /* ISTZBCAL ENTERED                 */
*         4  ZCREBC0L BIT(1),    /* ISTZBC0L ENTERED                 */
*         4  ZCREBCNB BIT(1),    /* ISTZBCNB ENTERED                 */
*         4  ZCREICOE BIT(1),    /* ISTZICOE ENTERED                 */
*         4  ZCREDCNB BIT(1),    /* ISTZDCNB ENTERED                 */
*         4  ZCREKCCB BIT(1),    /* ISTZKCCB ENTERED                 */
*         4  ZCRECFY0 BIT(1),    /* ISTZCFY0 ENTERED                 */
*         4  ZCREDCK0 BIT(1),    /* ISTZDFK0 ENTERED                 */
*         4  ZCREICSG BIT(1),    /* ISTZICSG ENTERED                 */
*         4  ZCREBCIF BIT(1),    /* ISTZBCIF ENTERED                 */
*         4  ZCREDCMF BIT(1),    /* ISTZDCMF ENTERED                 */
*         4  ZCRELCAB BIT(1),    /* ISTZLCAB ENTERED                 */
*         4  ZCREAC2B BIT(1),    /* ISTZAC2B ENTERED                 */
*         4  ZCREIC2B BIT(1),    /* ISTZIC2B ENTERED                 */
*         4  ZCRRSV97 BIT(97),   /* RESERVED                         */
*   2  ZCRCMNRC CHAR(1),                /* PURGE MWOR RETURN CODE    */
*   2  ZCRWORDA CHAR(3),                /* RESERVED FOR LATER USE    */
*   2  ZCRLCPB  CHAR(LENGTH(ISTLCPB)),  /* 3270 S/R LCPB             */
*      3 ZCRRHRU,                       /* SAVEAREA FOR RH AND RU    */
*        4 ZCRRH    CHAR(3),            /* RH                        */
*        4 ZCRRU    CHAR(*);            /* RU                        */
*DCL ZCTYPE BIT(8) CONSTANT('00'X);   /* ZCR TYPE                   */
*DCL ZCLNG FIXED(15) CONSTANT(172);   /* ZCRR LENGTH                */
*DCL ZCRSAVNO BIT(8) CONSTANT('06'X); /* NUMBER OF SAVEAREAS IN ZCRR */
*DCL ZCRLSVNO BIT(8) CONSTANT('04'X); /* NUMBER OF SAVE AREAS IN   0477
*                                         LOCAL SUPPORT              */
*/* *** EQUATES FOR ZCRRCDSV *** */                                0478
*                                                                  0478
*DCL ZCRMRFSB BIT(8) CONSTANT('0C'X);  /* REQUEST COMPLETION MOVE FSB
*                                         TO PROCESS                 */
*DCL ZCRSRCHQ BIT(8) CONSTANT('10'X);  /* REQUEST COMPLETION SEARCH
*                                         REQUEST QUEUE              */
*DCL ZCREXIT  BIT(8) CONSTANT('14'X);  /* REQUEST COMPLETION EXIT    */
*DCL ZCRSFSB  BIT(8) CONSTANT('18'X);  /* REQUEST COMPLETION SINGLE
*                                         FSB                        */
*DCL ZCRDLFSB BIT(8) CONSTANT('1C'X);  /* REQUEST COMPLETION DUAL FSB *
*DCL ZCRNOSCH BIT (8) CONSTANT('20'X); /* REQUEST COMPLETION, EXIT WITH
*                                         SCHED NONE                 */
*DCL ZCRNRSCH BIT (8) CONSTANT('24'X); /* REQUEST COMPLETION, EXIT WITH
*                                         SCHED NORM                 */
*DCL ZCRLGERR FIXED(8) CONSTANT(8);    /* LOGICAL ERROR              */
*DCL ZCPLSCB BIT(8) CONSTANT('08'X);   /* GET A RELEASE LSCB         */
*DCL ZCPBUF  BIT(8) CONSTANT('04'X);   /* GET A RELEASE BUFFER       */
*DCL ZCRTAC0A FIXED(8) CONSTANT(01);   /* LOCAL DEVICE SCHEDULER(OUT)*/
*DCL ZCRTAC0B FIXED(8) CONSTANT(02);   /* REMOTE DEVICE SCHEDLER(OUT)*/
*DCL ZCRTCC1A FIXED(8) CONSTANT(03);   /* LOCAL DIALOG SCHEDLER(IN)  */
*DCL ZCRTCC1B FIXED(8) CONSTANT(04);   /* REMOTE DIALOG SCHEDLER(IN) */
*DCL ZCRTDCE0 FIXED(8) CONSTANT(05);   /* NCP SLOWDOWN RECOVERY      */
*DCL ZCRTDCKA FIXED(8) CONSTANT(06);   /* LOCAL GENERAL FUNCTIONS    */
*DCL ZCRTDCKB FIXED(8) CONSTANT(07);   /* REMOTE GENERAL FUNCTIONS   */
*DCL ZCRTFCEB FIXED(8) CONSTANT(08);   /* REMOTE READ BUFFER ALLOC.  */
*DCL ZCRTGCLA FIXED(8) CONSTANT(09);   /* LCAL CTL & TEST FEEDBACK(IN)*
*DCL ZCRTGC0A FIXED(8) CONSTANT(10);   /* LOCAL REQ. COMPLETION(IN)  */
*DCL ZCRTGC0B FIXED(8) CONSTANT(11);   /* REMOTE REQ. COMPLETION(IN) */
*DCL ZCRTICWB FIXED(8) CONSTANT(12);   /* RESET CLEANUP (PHASE 5)    */
*DCL ZCRTIC0B FIXED(8) CONSTANT(13);   /* REMOTE REQ COMPLTION CTL(IN)*
*DCL ZCRTAC1B FIXED(8) CONSTANT(14);   /* ISTZAC1B THREAD ID         */
*DCL ZCRTIC1B FIXED(8) CONSTANT(15);   /* ISTZIC1B THREAD ID         */
*DCL ZCRTCCBI FIXED(8) CONSTANT(16);   /* ISTZCCBI THREAD ID         */
*DCL ZCRTAC1R FIXED(8) CONSTANT(17);   /* ISTZAC1R THREAD ID         */
*DCL ZCRTAC1A FIXED(8) CONSTANT(18);   /* ISTZAC1A THREAD ID         */
*DCL ZCRTLCAB FIXED(8) CONSTANT(19);   /* ISTZLCAB THREAD ID         */
*/* COMPONENT RECOVERY                                               */
*/*                                                                  */
*DCL 1 ISTASCRR BDY(WORD) BASED,        /* CRR FOR SMS               */
*     2  ASCPFCRR CHAR(LENGTH(ISTPFCRR)),                          0507
*     2  ASCFLAGS CHAR(7),              /* FLAGS                     */
*        3  ASCFLG1 CHAR(2),            /* MODULE TRACE FLAGS        */
*           4  ASCFBA BIT(1),           /* ALLOCATION IN PATH        */
*           4  ASCFBD BIT(1),           /* DE-ALLOCATION IN PATH     */
*           4  ASCFSR BIT(1),           /* FSR IN PATH               */
*           4  ASCPASTR BIT(13),        /* RESERVED PATH FLAGS       */
*        3  ASCFLG2 CHAR(2),            /* MODULE IN CONTROL FLAGS   */
*           4  ASCFBAIC BIT(1),         /* ALLOCATION IN CONTROL     */
*           4  ASCFBDIC BIT(1),         /* DE-ALLOCATION IN CONTROL  */
*           4  ASCFSRIC BIT(1),         /* FSR IN CONTROL            */
*           4  ASCICR BIT(13),          /* RESERVED IN CONTROL FLAGS */
*        3  ASCFLG3 CHAR(3),            /* AUDIT FLAGS               */
*           4  ASCFSRGT BIT(1),         /* FSR DOING GET PROCESSING  */
*           4  ASCFBDAL BIT(1),         /* FBD DOING ALLOCATION      */
*           4  ASCKEYF BIT(1),          /* KEY HAS BEEN ALTERED      */
*           4  ASCLLKF BIT(1),          /* LOCAL LOCK HELD           */
*           4  ASCFBDUD BIT(1),         /* FBD USING USER DATA       */
*           4  ASCAUDIT BIT(19),        /* RESERVED AUDIT BITS       */
*     2  ASCKEY CHAR(1),                /* ORIGINAL KEY              */
*     2  ASCETRYA PTR(31),              /* RETRY ADRS FOR CONTINUE 0507
*                                          OPTION                    */
*     2  ASCUSRGS CHAR(16),             /* SAVE AREA FOR USER REGS 0507
*                                          14 - 1                    */
*        3  ASCUSR14 CHAR(4),           /* REGISTER 14               */
*        3  ASCUSR15 CHAR(4),           /* REGISTER 15               */
*        3  ASCUSR00 CHAR(4),           /* REGISTER 0                */
*        3  ASCUSR01 CHAR(4),           /* REGISTER 1                */
*     2  ASCPSREG CHAR(16);             /* SAVE AREA FOR PSS       0507
*                                          REGS 1 - 4                */
*/*  INITIAL LEVEL                                      001 04/09/75 */
*DCL 1 ISTAPCRR BDY(WORD) BASED,                                   0508
*     2 APCHDRSV CHAR(LENGTH(ISTPFCRR)),  /* HEADER                  */
*     2  APCATFLG CHAR(2),              /* AUDIT TRACE FLAGS         */
*        3  APC51E BIT(1),              /* ISTAPC51 WAS ENTERED      */
*        3  APC52E BIT(1),              /* ISTAPC52  '     '         */
*        3  APC53E BIT(1),              /* ISTAPC53                  */
*        3  APC54E BIT(1),                                         0508
*        3  APC56E BIT(1),                                         0508
*        3  APC57E BIT(1),                                         0508
*        3  APC58E BIT(1),                                         0508
*        3  APC31E BIT(1),                                         0508
*        3 * BIT(8),                    /* RESERVED                  */
*     2  APCRFLG CHAR(2),               /* AUDIT TRACE FLAGS         */
*        3  APC51R BIT(1),              /* ISTAPCR1 IS RUNNING       */
*        3  APC52R BIT(1),              /* ISTAPC52 IS RUNNING       */
*        3  APC53R BIT(1),                                         0508
*        3  APC54R BIT(1),                                         0508
*        3  APC56R BIT(1),                                         0508
*        3  APC57R BIT(1),                                         0508
*        3  APC58R BIT(1),                                         0508
*        3  APC31R BIT(1),                                         0508
*        3  *      BIT(8),              /* RESERVED                  */
*     2  APCPSTA PTR(31),               /* PST@                      */
*     2  APCTCBA PTR(31),               /* TCB@                      */
*     2  APCRTRN PTR(31),               /*@ TO BR14 TO RTN TO SYSTEM */
*     2  APCPABSV PTR(31),              /*SAVED PAB@ TO REDISPATCH   */
*     2  APCQWFO PTR(31),               /* Q@ IN PST WORK AREA ON    */
*     2  APCFRRPM PTR(31),              /* WORKAREA@ RTN'D FROM SETFR*/
*     2  APCSAVE CHAR(72),                                         0508
*        3  APCESTAL CHAR(72),          /* ESTAE PARAMETER LIST AREA */
*     2  APCCOMF CHAR(4) BDY(HWORD),    /* FLAGS USED BY ALL PSS RTN */
*        3  APCCOMF1 CHAR(2),                                      0508
*           4  APCSSTSK BIT(1),         /* IRB TYPE WORK             */
*           4  APCUETSK BIT(1),         /* USER EXIT RUNNING UNDER IRB*
*           4  APCSMCR BIT(1),          /* SMA CRA BEING USED        */
*           4  APCIRB1 BIT(1),          /* IRB1 BEING USED           */
*           4  APCIRB2 BIT(1),          /* IRB2 BEING USED           */
*           4  APCRELR BIT(1),          /*CALL ISTAPC58 TO RLEASE CRA*/
*           4  APCEXIT BIT(1),          /* TELLS ISTAPC58 TO EXIT SYS*/
*           4  APCZLBER BIT(1),         /* ERR WHILE RUNNING ZLFAB PAB*
*           4  * BIT(8),                /* RESERVED                  */
*        3  APCRETCD FIXED(15),         /* RTN CODE FOR R15 FOR SYS  */
*     2  APCSAV1 PTR(31),               /* 1ST SAVE WORD             */
*     2  APCSAV2 PTR(31),               /* 2ND SAVE WORD             */
*     2  APCSWTWD CHAR(4),              /* SWITCH AREA FOR PSS RTN   */
*     2  APC31FLG CHAR(1),              /* ISTAPC31 FLAGS            */
*        3  APCTPXIT BIT(1),            /* TPEXIT IN PROGRESS        */
*        3  APCRESCH BIT(1),            /*PAB TPEXIT OCCURED  RESCHED*/
*        3  APCSORT BIT(1),       /* PAB SORTED TO PROPER PST/MPST   */
*        3  *       BIT(5),       /* RESERVED                        */
*     2  APC52FLG CHAR(1),        /* ISTAPC52 FLAGS                  */
*        3  APCCKRQ BIT(1),       /* CHECK RDY Q FOR WORK            */
*        3  APCSMSR BIT(1),       /* RETURNING SMS RPH               */
*        3  APCQENQ BIT(1),       /* ENQUEUEING PAB'S ON PST Q'S     */
*        3  APCRDQ BIT(1),        /* DEQUEING PAB'S FROM PST RDY Q   */
*        3  APCNWF BIT(1),        /* NO WORK FOUND                   */
*        3  APCWKF   BIT(1),      /* WORK FOUND                      */
*        3    *      BIT(2),      /* RESERVED                        */
*     2  APC53FLG CHAR(1),        /* ISTAPC53 FLAGS                  */
*        3  APCPR153 BIT(1),      /* USED PREALLOCATED CRA           */
*     2  APC54FLG CHAR(1),        /* ISTAPC54 FLAGS                  */
*        3  APCRLST BIT(1),       /* SMS BEING CALLED TO RELEASE UECB*/
*        3  * BIT(7),             /* RESERVED                        */
*     2  APC57FLG CHAR(1),        /* ISTAPC57 FLAGS                  */
*        3  APCRECRA BIT(1),      /* RELEASE CRA BEING DONE          */
*        3  APCNREL BIT(1),       /* DID NOT RELEASE CRA             */
*        3  *   BIT(6),           /* RESERVED                        */
*     2  * CHAR(15);              /* RESERVED                        */
*/*               COMPONENT RECOVERY AREA                            */
*/*  REVISIONS                                         005 04/09/75  */
*DCL 1  ISTCRA BASED BDY(DWORD),        /* COMPONENT RECOVERY AREA   */
*     2  CRABASIC BDY(WORD),            /* CRA WITHOUT PROCESS CRR   */
*      3 CRAHDR CHAR(8) BDY(WORD),      /* CRA HEADER                */
*        4  CRACRR PTR(31),             /* PTR TO ACTIVE CRR         */
*        4  CRAFRR PTR(31),             /* PTR TO ACTIVE FRR         */
*      3 CRALKACT BIT(32),              /* LOCK LEVEL AND          0509
*                                          OWNERSHIP FLAGS           */
*        4  CRALEV32 BIT(1),            /* 1 = LEVEL 32 LOCK HELD    */
*        4  CRALEV31 BIT(1),            /* 1 = LEVEL 31 LOCK HELD    */
*        4  CRALEV30 BIT(1),            /* 1 = LEVEL 30 LOCK HELD    */
*        4  CRALEV29 BIT(1),            /* 1 = LEVEL 29 LOCK HELD    */
*        4  CRALEV28 BIT(1),            /* 1 = LEVEL 28 LOCK HELD    */
*        4  CRALEV27 BIT(1),            /* 1 = LEVEL 27 LOCK HELD    */
*        4  CRALEV26 BIT(1),            /* 1 = LEVEL 26 LOCK HELD    */
*        4  CRALEV25 BIT(1),            /* 1 = LEVEL 25 LOCK HELD    */
*        4  CRALEV24 BIT(1),            /* 1 = LEVEL 24 LOCK HELD    */
*        4  CRALEV23 BIT(1),            /* 1 = LEVEL 23 LOCK HELD    */
*        4  CRALEV22 BIT(1),            /* 1 = LEVEL 22 LOCK HELD    */
*        4  CRALEV21 BIT(1),            /* 1 = LEVEL 21 LOCK HELD    */
*        4  CRALEV20 BIT(1),            /* 1 = LEVEL 20 LOCK HELD    */
*        4  CRALEV19 BIT(1),            /* 1 = LEVEL 19 LOCK HELD    */
*        4  CRALEV18 BIT(1),            /* 1 = LEVEL 18 LOCK HELD    */
*        4  CRALEV17 BIT(1),            /* 1 = LEVEL 17 LOCK HELD    */
*        4  CRALEV16 BIT(1),            /* 1 = LEVEL 16 LOCK HELD    */
*        4  CRALEV15 BIT(1),            /* 1 = LEVEL 15 LOCK HELD    */
*        4  CRALEV14 BIT(1),            /* 1 = LEVEL 14 LOCK HELD    */
*        4  CRALEV13 BIT(1),            /* 1 = LEVEL 13 LOCK HELD    */
*        4  CRALEV12 BIT(1),            /* 1 = LEVEL 12 LOCK HELD    */
*        4  CRALEV11 BIT(1),            /* 1 = LEVEL 11 LOCK HELD    */
*        4  CRALEV10 BIT(1),            /* 1 = LEVEL 10 LOCK HELD    */
*        4  CRALEV09 BIT(1),            /* 1 = LEVEL 9 LOCK HELD     */
*        4  CRALEV08 BIT(1),            /* 1 = LEVEL 8 LOCK HELD     */
*        4  CRALEV07 BIT(1),            /* 1 = LEVEL 7 LOCK HELD     */
*        4  CRALEV06 BIT(1),            /* 1 = LEVEL 6 LOCK HELD     */
*        4  CRALEV05 BIT(1),            /* 1 = LEVEL 5 LOCK HELD     */
*        4  CRALEV04 BIT(1),            /* 1 = LEVEL 4 LOCK HELD     */
*        4  CRALEV03 BIT(1),            /* 1 = LEVEL 3 LOCK HELD     */
*        4  CRALEV02 BIT(1),            /* 1 = LEVEL 2 LOCK HELD     */
*        4  CRALEV01 BIT(1),            /* 1 = LEVEL 1 LOCK HELD     */
*      3 CRAL1PTR PTR(31),              /* PTR TO LEVEL 1 LOCK       */
*      3 CRAL2PTR PTR(31),              /* PTR TO LEVEL 2 LOCK       */
*      3 CRAL3PTR PTR(31),              /* PTR TO LEVEL 3 LOCK       */
*      3 CRAL4PTR PTR(31),              /* PTR TO LEVEL 4 LOCK       */
*      3 CRAL5PTR PTR(31),              /* PTR TO LEVEL 5 LOCK       */
*      3 CRAL6PTR PTR(31),              /* PTR TO LEVEL 6 LOCK       */
*      3 CRAL7PTR PTR(31),              /* PTR TO LEVEL 7 LOCK       */
*      3 CRAL8PTR PTR(31),              /* PTR TO LEVEL 8 LOCK       */
*      3 CRAL9PTR PTR(31),              /* PTR TO LEVEL 9 LOCK       */
*      3 CRALAPTR PTR(31),              /* RESERVED                  */
*/*                                                                  */
*/*   VS1/VS2 EXTENSION                                              */
*/*                                                                  */
*     2  CRARPH CHAR(LENGTH(ISTRPH)),   /* RPH ASSOCIATED WITH     0509
*                                          THIS CRH                  */
*     2  CRAPSS CHAR(LENGTH(ISTAPCRR)), /* PSS CRR                   */
*     2  CRAPROCR CHAR(LENGTH(ISTZCRR)) BDY(DWORD), /* PROCESS CRR   */
*     2  CRASVC CHAR(72) BDY(WORD),     /* SERVICE RTN CRA           */
*        3  CRAASCRR CHAR(LENGTH(ISTASCRR)), /* CRR FOR SMS          */
*        3  CRAHSIZ  PTR(31),           /* HEADER SIZE QUED SMS REQ  */
*        3  CRAMASK  PTR(31),           /* PREFIX MASK QUED SMS REQ  */
*        3  CRABUFA  FIXED(31),         /* BUFF QUE FOR FBQ ALLOCATION*
*           4 CRABFTBA BIT(1),          /* NO BUFFERS ALLOCATED YET   *
*     2  CRARSV01 PTR(31),              /* RESERVED                  */
*     2  CRARSV02 PTR(31),              /* RESERVED                  */
*     2  CRACHAIN PTR(31);              /* CHAIN FIELD USED TO QUEUE
*                                          CRA TO PREALLOCATE QUEUE
*                                          WHEN NOT IN USE           */
*DCL CRALMS32 BIT(32) CONSTANT('80000000'X); /* 32ND LEVEL LOCK MASK */
*DCL CRALMS31 BIT(32) CONSTANT('40000000'X); /* 31ST LEVEL LOCK MASK */
*DCL CRALMS30 BIT(32) CONSTANT('20000000'X); /* 30TH LEVEL LOCK MASK */
*DCL CRALMS29 BIT(32) CONSTANT('10000000'X); /* 29TH LEVEL LOCK MASK */
*DCL CRALMS28 BIT(32) CONSTANT('08000000'X); /* 28TH LEVEL LOCK MASK */
*DCL CRALMS27 BIT(32) CONSTANT('04000000'X); /* 27TH LEVEL LOCK MASK */
*DCL CRALMS26 BIT(32) CONSTANT('02000000'X); /* 26TH LEVEL LOCK MASK */
*DCL CRALMS25 BIT(32) CONSTANT('01000000'X); /* 25TH LEVEL LOCK MASK */
*DCL CRALMS24 BIT(32) CONSTANT('00800000'X); /* 24TH LEVEL LOCK MASK */
*DCL CRALMS23 BIT(32) CONSTANT('00400000'X); /* 23RD LEVEL LOCK MASK */
*DCL CRALMS22 BIT(32) CONSTANT('00200000'X); /* 22ND LEVEL LOCK MASK */
*DCL CRALMS21 BIT(32) CONSTANT('00100000'X); /* 21ST LEVEL LOCK MASK */
*DCL CRALMS20 BIT(32) CONSTANT('00080000'X); /* 20TH LEVEL LOCK MASK */
*DCL CRALMS19 BIT(32) CONSTANT('00040000'X); /* 19TH LEVEL LOCK MASK */
*DCL CRALMS18 BIT(32) CONSTANT('00020000'X); /* 18TH LEVEL LOCK MASK */
*DCL CRALMS17 BIT(32) CONSTANT('00010000'X); /* 17TH LEVEL LOCK MASK */
*DCL CRALMS16 BIT(32) CONSTANT('00008000'X); /* 16TH LEVEL LOCK MASK */
*DCL CRALMS15 BIT(32) CONSTANT('00004000'X); /* 15TH LEVEL LOCK MASK */
*DCL CRALMS14 BIT(32) CONSTANT('00002000'X); /* 14TH LEVEL LOCK MASK */
*DCL CRALMS13 BIT(32) CONSTANT('00001000'X); /* 13TH LEVEL LOCK MASK */
*DCL CRALMS12 BIT(32) CONSTANT('00000800'X); /* 12TH LEVEL LOCK MASK */
*DCL CRALMS11 BIT(32) CONSTANT('00000400'X); /* 11TH LEVEL LOCK MASK */
*DCL CRALMS10 BIT(32) CONSTANT('00000200'X); /* 10TH LEVEL LOCK MASK */
*DCL CRALMS09 BIT(32) CONSTANT('00000100'X); /* 9TH LEVEL LOCK MASK  */
*DCL CRALMS08 BIT(32) CONSTANT('00000080'X); /* 8TH LEVEL LOCK MASK  */
*DCL CRALMS07 BIT(32) CONSTANT('00000040'X); /* 7TH LEVEL LOCK MASK  */
*DCL CRALMS06 BIT(32) CONSTANT('00000020'X); /* 6TH LEVEL LOCK MASK  */
*DCL CRALMS05 BIT(32) CONSTANT('00000010'X); /* 5TH LEVEL LOCK MASK  */
*DCL CRALMS04 BIT(32) CONSTANT('00000008'X); /* 4TH LEVEL LOCK MASK  */
*DCL CRALMS03 BIT(32) CONSTANT('00000004'X); /* 3RD LEVEL LOCK MASK  */
*DCL CRALMS02 BIT(32) CONSTANT('00000002'X); /* 2ND LEVEL LOCK MASK  */
*DCL CRALMS01 BIT(32) CONSTANT('00000001'X); /* 1ST LEVEL LOCK MASK  */
*DCL CRACRA   CHAR(4) CONSTANT('CRA ');      /* CHARACTER C.B. ID    */
* /*  CONNECTION SERVICES COMPONENT RECOVERY RECORD                  */
* /* COMPLETED DCR SOLUTIONS                                         */
* /* 1H0540 APRIL 28, 1973 MB                                        */
*/* ZTR4417 JUNE 20, 73 DNM */                                     0543
* DCL 1 ISTCNSTA BDY(WORD) BASED,       /* CONNECTION SERVICES     0543
*                                          COMPONENT RECOVERY RECORD */
*     2  CNSTPFX CHAR(LENGTH(ISTPFCRR)), /* STANDARD PREFIX        0543
*                                          FOR CRR                   */
*     2  CNSTFLDA CHAR(3),              /* TRACE FIELD A - HISTORY   */
*        3  CNSMRINA BIT(1),            /* MASTER ENTERED            */
*        3  CNSAUTHA BIT(1),            /* ABOUT TO CALL AUTHORI-  0543
*                                          SATION EXIT       ZTR4417 */
*        3  CNSAQINA BIT(1),            /* ACQUIRE ENTERED           */
*        3  CNSXREQA BIT(1),            /* ACQUIRE SATISFIED         */
*        3  CNSQREQA BIT(1),            /* ACQUIRE QUEUED            */
*        3  CNSRLINA BIT(1),            /* RELEASE ENTERED           */
*        3  CNSDORLA BIT(1),            /* DOREL REALLOCATION      0543
*                                          ENTERED                   */
*        3  CNSTRRLA BIT(1),            /* RELEASE OF ACTIVE       0543
*                                          CONNECTION                */
*        3  CNSRQRLA BIT(1),            /* RELEASE QUEUED REQUEST    */
*        3  CNSPSINA BIT(1),            /* PASS ENTERED              */
*        3  CNSACINA BIT(1),            /* ACCEPT ENTERED            */
*        3  CNSLGINA BIT(1),            /* LOGON ENTERED             */
*        3  CNSGBINA BIT(1),            /* PREEMPT ENTERED           */
*        3  CNSCLINA BIT(1),            /* CANCEL ENTERED            */
*        3  CNSCLAQA BIT(1),            /* CANCEL ACQUIRES           */
*        3  CNSTCONA BIT(1),            /* TCONNECT                  */
*        3  CNSACONA BIT(1),            /* ACONNECT                  */
*        3  CNSQUEUA BIT(1),            /* QUEUE                     */
*        3  CNSSEARA BIT(1),            /* SEARCH Q                  */
*        3  CNSGETSA BIT(1),            /* CONNECTION SERVICES     0543
*                                          GETSTORE                  */
*        3  CNSFREEA BIT(1),            /* CONNECTION SERVICES     0543
*                                          FREESTORE                 */
*        3  CNSACCTA BIT(1),            /* ABOUT TO CALL           0543
*                                          ACCOUNTING EXIT           */
*        3  CNSLOG0A BIT(1),            /* LOGON 0                   */
*        3  CNSRSV01 BIT(1),            /* RESERVED                  */
*     2  CNSTFLDB CHAR(3),              /* TRACE FIELD B -         0543
*                                          CURRENT ACTIVITY          */
*        3  CNSMRINB BIT(1),                                       0543
*        3  CNSAUTHB BIT(1),                                       0543
*        3  CNSAQINB BIT(1),                                       0543
*        3  CNSXREQB BIT(1),                                       0543
*        3  CNSQREQB BIT(1),                                       0543
*        3  CNSRLINB BIT(1),                                       0543
*        3  CNSDORLB BIT(1),                                       0543
*        3  CNSTRRLB BIT(1),                                       0543
*        3  CNSRQRLB BIT(1),                                       0543
*        3  CNSPSINB BIT(1),                                       0543
*        3  CNSACINB BIT(1),                                       0543
*        3  CNSLGINB BIT(1),                                       0543
*        3  CNSGBINB BIT(1),                                       0543
*        3  CNSCLINB BIT(1),                                       0543
*        3  CNSCLAQB BIT(1),                                       0543
*        3  CNSTCONB BIT(1),                                       0543
*        3  CNSACONB BIT(1),                                       0543
*        3  CNSQUEUB BIT(1),                                       0543
*        3  CNSSEARB BIT(1),                                       0543
*        3  CNSGETSB BIT(1),                                       0543
*        3  CNSFREEB BIT(1),                                       0543
*        3  CNSACCTB BIT(1),                                       0543
*        3  CNSLOG0B BIT(1),                                       0543
*        3  CNSRSV05 BIT(1);                                       0543
*/* DCR SOLUTIONS COMPLETED                                          */
*/*                                                                  */
*/*        CRR FOR THE PORT SOLICITOR                                */
*DCL 1 ISTPSCRR BDY(WORD) BASED,        /* CRR FOR PORT SOLICITOR    */
*     2  PSCCNS CHAR(LENGTH(ISTCNSTA)), /* RESERVE SPACE FOR CONN. 0544
*                                          SVCS. AUDIT               */
*     2  PSCAUDIT,                      /* AUDIT TRAIL FOR PORT    0544
*                                          SOLICITOR                 */
*        3  PSCNTRD CHAR(2),            /* LIST OF MODULES ENTERED 0544
*                                          FOR PORT SOL              */
*           4  NNMC9P BIT(1),           /* INDICATES MODULE ISTNMC9P
*                                          ENTERED                   */
*           4  NNMC1S BIT(1),           /* INDICATES MODULE ISTNMC1S
*                                          ENTERED                   */
*           4  NNMC2S BIT(1),           /* INDICATES MODULE ISTNMC2S
*                                          ENTERED                   */
*           4  NNMC3S BIT(1),           /* INDICATES MODULE ISTNMC3S
*                                          ENTERED                   */
*           4  NNMC4S BIT(1),           /* INDICATES MODULE ISTNMC4S
*                                          ENTERED                   */
*           4  NNMC5S BIT(1),           /* INDICATES MODULE ISTNMC5S
*                                          ENTERED                   */
*           4  NNMC6S BIT(1),           /* INDICATES MODULE ISTNMC6S
*                                          ENTERED                   */
*           4  NNMC3P BIT(1),           /* INDICATES MODULE ISTNMC3P
*                                          ENTERED                   */
*           4  NNMC4P BIT(1),           /* INDICATES MODULE ISTNMC4P
*                                          ENTERED                   */
*           4  NNMC5P BIT(1),           /* INDICATES MODULE ISTNMC5P
*                                          ENTERED                   */
*           4  NNMC6P BIT(1),           /* INDICATES MODULE ISTNMC6P
*                                          ENTERED                   */
*           4  NNMC7P BIT(1),           /* INDICATES MODULE ISTNMC7P
*                                          ENTERED                   */
*           4  NNMC8P BIT(1),           /* INDICATES MODULE ISTNMC8P
*                                          ENTERED                   */
*           4  NNMC7S BIT(1),           /* INDICATES MODULE ISTNMC7S
*                                          ENTERED                   */
*           4  PSCRSVRD BIT(2),         /* RESERVED FOR FUTURE     0544
*                                          MODULES                   */
*        3  PSCCRT CHAR(2),             /* LIST OF MODULES WHO     0544
*                                          CAN HAVE CURRENT CONTROL  */
*           4  CNMC9P BIT(1),           /* INDICATES MODULE ISTNMC9P
*                                          RUNNING                   */
*           4  CNMC1S BIT(1),           /* INDICATES MODULE ISTNMC1S
*                                          RUNNING                   */
*           4  CNMC2S BIT(1),           /* INDICATES MODULE ISTNMC2S
*                                          RUNNING                   */
*           4  CNMC3S BIT(1),           /* INDICATES MODULE ISTNMC3S
*                                          RUNNING                   */
*           4  CNMC4S BIT(1),           /* INDICATES MODULE ISTNMC4S
*                                          RUNNING                   */
*           4  CNMC5S BIT(1),           /* INDICATES MODULE ISTNMC5S
*                                          RUNNING                   */
*           4  CNMC6S BIT(1),           /* INDICATES MODULE ISTNMC6S
*                                          RUNNING                   */
*           4  CNMC3P BIT(1),           /* INDICATES MODULE ISTNMC3P
*                                          RUNNING                   */
*           4  CNMC4P BIT(1),           /* INDICATES MODULE ISTNMC4P
*                                          RUNNING                   */
*           4  CNMC5P BIT(1),           /* INDICATES MODULE ISTNMC5P
*                                          RUNNING                   */
*           4  CNMC6P BIT(1),           /* INDICATES MODULE ISTNMC6P
*                                          RUNNING                   */
*           4  CNMC7P BIT(1),           /* INDICATES MODULE ISTNMC7P
*                                          RUNNING                   */
*           4  CNMC8P BIT(1),           /* INDICATES MODULE ISTNMC8P
*                                          RUNNING                   */
*           4  CNMC7S BIT(1),           /* INDICATES MODULE ISTNMC7S
*                                          RUNNING                   */
*           4  PSCRSV01 BIT(2),         /* RESERVED                  */
*        3  PSCRSV02 CHAR(2),           /* RESERVED - PADDING        */
*      2  PSCSAVE CHAR(64) BDY(WORD),   /* REGISTER SAVE AREA        */
*         3  PSCSV0 PTR(31),                                       0544
*         3  PSCSV1 PTR(31),                                       0544
*         3  PSCSV2 PTR(31),                                       0544
*         3  PSCSV3 PTR(31),                                       0544
*         3  PSCSV4 PTR(31),                                       0544
*         3  PSCSV5 PTR(31),                                       0544
*         3  PSCSV6 PTR(31),                                       0544
*         3  PSCSV7 PTR(31),                                       0544
*         3  PSCSV8 PTR(31),                                       0544
*         3  PSCSV9 PTR(31),                                       0544
*         3  PSCSV10 PTR(31),                                      0544
*         3  PSCSV11 PTR(31),                                      0544
*         3  PSCSV12 PTR(31),                                      0544
*         3  PSCSV13 PTR(31),                                      0544
*         3  PSCSV14 PTR(31),                                      0544
*         3  PSCSV15 PTR(31),                                      0544
*     2  PSCRSV03 PTR(31),              /* RESERVED                  */
*     2  PSCRSV04 PTR(31);              /* RESERVED                  */
*DCL TIDNMC9P BIT(8) CONSTANT('00'X);   /* THREAD ID FOR           0545
*                                          ISTNMC9P                  */
*DCL TIDNMC4P BIT(8) CONSTANT('01'X);   /* THREAD ID FOR           0546
*                                          ISTNMC4P                  */
*              /* DYNAMIC PAB 1K633 */                             0547
* /* 1K0997 JAN 20, 1973  MB   */                                  0547
* /* 1K1142 MAR 03, 1973  MB   */                                  0547
* DCL 1 ISTDYPAB BDY(DWORD) BASED, /* LEVEL 1 DECLARE 1K633 */     0547
*       2  DYPTYPE CHAR(1), /* CONTROL BLOCK TYPE CODE 1K633 */    0547
*       2  DYPLNGTH PTR(8), /* CONTROL BLOCK LENGTH (BYTES)  1K633 */
*       2 DYPFLGS CHAR(2),     /* FLAGS 1K633 */                   0547
*       2 DYPCHAIN PTR(31),    /* CHAIN POINTER 1K633 */           0547
*       2 DYPTSKID PTR(31),    /* TASKID OR PTR TO PSS TABLES 1K633 */
*       2  DYPRSV01 PTR(31),   /* RESERVED TO PRESERVE ALIGNMENT   0547
*                                                             1K0997 */
*       2 DYPPAB CHAR(LENGTH(ISTPAB)) BDY(DWORD); /* LENGTH OF 1K0997
*                                                    PAB         */
*DCL DYTYP   BIT(8) CONSTANT ('11'X);   /* TYPE           1K1142 */
*/*  REVISIONS                                             03/04/77   *
*DCL ATCLCPTR PTR LOCATION(1032);      /* POINTER TO ATCVT            *
*DCL  1  ISTATCVT BDY(DWORD) BASED,                                0550
*        2  ATCCOM BDY(WORD),          /* SYSTEM INDEPENDENT FIELDS   *
*           3  ATCSTAT CHAR(4),        /* VTAM  STATUS INDICATORS     *
*              4  ATCSTAT1 CHAR(1),    /* VTAM  STATUS BYTE 1         *
*                 5  ATCSTART BIT(1),  /* VTAM  IS STARTING           *
*                 5  ATCACTIV BIT(1),  /* VTAM  IS ACTIVE             *
*                 5  ATCSNHLT BIT(1),  /* VTAM  SESSION HALT          *
*                 5  ATCQKHLT BIT(1),  /* VTAM  QUICK HALT            *
*                 5  ATCNETSL BIT(1),  /* NETSOL=YES SPECIFIED ON CMD *
*                 5  ATCINHLT BIT(1),  /* INTERNAL VTAM HALT QUICK    *
*                 5  ATCMDHLT BIT(1),  /* VTAM CMD PROC HALTED        *
*                 5 * BIT(1),          /* RESERVED                    *
*              4  ATCSTFLG BIT(8),     /* STORAGE MANAGEMENT FLAGS    *
*                 5  ATCHSDMF BIT(1),  /* SYSTEM SLOW DOWN FLAG       *
*              4  ATCPOFLG BIT(8),     /* PROGRAM OPERATOR            *
*                                      /* INTERFACE FLAGS             *
*                 5 ATCPOUNS BIT(1),   /* APPLICATION AUTHORIZED TO   *
*                                      /* RECEIVE UNSOLICITED MESSAGES*
*                                      /* 1 = YES                     *
*                 5 *        BIT(7),   /* RESERVED                    *
*              4  ATCSTAT4 CHAR(1),    /* VTAM  STATUS BYTE 4         *
*                 5  ATCPRTAT BIT(1),  /* 1 = TRACE PRINT ACTIVE,  0550
*                                         0 = NOT ACTIVE              *
*                 5  ATCTPRT BIT(1),   /* WHEN 1, TPRINT IN PROCESS   *
*                 5  ATCMTST BIT(1),   /* WHEN 1, MODIFY TEST IN   0550
*                                         PROCESS                     *
*                 5  ATCNCSD BIT(1),   /* NCS QUIESCED DURING HALT    *
*                 5  ATCVTTRC BIT(1),  /* VTAM TRACE, 1=ACTIVE        *
*                 5  ATCRSV04 BIT(3),  /* RESERVED                    *
*           3  ATCAPI PTR(31),         /* ADDR OF API ROUTINE         *
*           3  ATCDCFRR PTR(31),       /* POINTER TO FRR OF CONTROL
*                                         LAYER,INITIALIZED BY OPENDST*
*           3  ATCRDT PTR(31),         /* POINTER TO FIRST RDT        *
*           3  ATCSRT PTR(31),         /* POINTER TO SRT DIRECTORY    *
*           3  ATCASCHD PTR(31),       /* POINTER TO AP SCHEDULER     *
*           3  ATCECMOD CHAR(4),       /* ECB FOR MODIFY COMMAND PROC.*
*           3  ATCMODQ PTR(31),        /* POINTER FOR OUTPUT QUEUE    *
*                                      /* FOR MODIFY COMMAND          *
*           3  ATCECHLT CHAR(4),       /* ECB FOR HALT COMMAND        *
*           3  ATCHALTQ PTR(31),       /* POINTER TO OUTPUT QUEUE     *
*                                      /* FOR HALT COMMAND            *
*           3  ATCECVRY CHAR(4),       /* ECB FOR VARY COMMAND PROC.  *
*           3  ATCVARYQ PTR(31),       /* POINTER TO OUTPUT QUEUE     *
*                                      /* FOR VARY COMMAND            *
*           3  ATCECDSP CHAR(4),       /* ECB FOR DISPLAY COMMAND     *
*           3  ATCDSPLQ PTR(31),       /*  POINTER TO OUTPUT QUEUE    *
*                                      /* FOR DISPLAY COMMAND         *
*           3  ATCOCHA PTR(31),        /* POINTER TO OCT HEADER       *
*           3  ATCECSES CHAR(4),       /* ECB TO HALT SESSION MODE    *
*           3  ATCECVRQ CHAR(4),       /* ERP ECB FOR VARY REQ. INFO. *
*                                      /* REQUEST NOTIFICATION        *
*           3  ATCVPARM PTR(31),       /* ADDR OF VARY PARAMETERS     *
*           3  ATCECOPC CHAR(4),       /* ECB TOINDICATE OPERATOR     *
*                                      /* CONTROL PROCESSING COMPLETE *
*           3  ATCECNET CHAR(4),       /* ERP ECB FOR NETWORK         *
*                                      /* CONFIGURATION REQUEST       *
*           3  ATCECPRM PTR(31),       /* POINTER TO QAB FOR ERP'S    *
*                                      /* ECB PARAMETERS              *
*           3  ATCHLTMS PTR(31),       /* POINTER TO HALT COMMAND     *
*                                      /* OR HALT RETURN MESSAGE      *
*           3  ATCFSB PTR(31),         /* PTR TO FEEDBACK STATUS      *
*                                      /* BLOCK                       *
*           3  ATCFRSCH PTR(31),       /* POINTER TO FEEDBACK         *
*                                      /* ROUTINE SCHEDULER           *
*           3  ATCRDTH PTR(31),        /*  POINTER RDT HEADER         *
*           3  ATCACCTA PTR(31),       /* POINTER TO INSTALLATION     *
*                                      /* ACCOUNTING ROUTINE          *
*           3  ATCAUTHA PTR(31),       /* POINTER TO INSTALLATION     *
*                                      /* AUTHORISATION ROUTINE       *
*           3  ATCPTCHA PTR(31),       /* PTR TO VTAM PATCH AREA      *
*           3  ATCCONFT PTR(31),       /* POINTER TO VTAM             *
*                                      /* CONFIGURATION TABLE         *
*           3  ATCFDVT PTR(31),        /* PTR TO FIRST DVT FOR O/C    *
*           3  ATCFEPT PTR(31),        /* PTR TO FIRST EPT FOR O/C    *
*           3  ATCDVTPT PTR(31),       /* ADDR OF LOAD MOD FOR        *
*                                      /* TYPE=VTAM TRACING           *
*           3  ATCBPDA PTR(31),        /* PTR TO BUFFER POOL DIRECTORY*
*           3  ATCADD PTR(31),         /* POINTER TO ADD PROCEDURE    *
*           3  ATCREMOV PTR(31),       /* POINTER TO REMOVE PROCEDURE *
*           3  ATCIOTRC PTR(31),       /*  POINTER TO I/O TRACE       *
*                                      /* PROCEDURE                   *
*              4 ATCTHTRC PTR(31),     /* ADDR OF TH TRACE ROUTINE    *
*                5 ATCTPBUF PTR(31),   /* TPIOS BUFFER TRACE(ISTRARTP)*
*           3  ATCBFTRC PTR(31),       /* PTR TO BUFFER TRACE         *
*                                      /* PROCEDURE                   *
*           3  ATCFBRPH PTR(31),       /* ADDR OF FEEDBACK PROC RPH   *
*           3  ATCBLDLA PTR(31),       /* ADDR OF BLDL ROUTINE        *
*           3  ATCALOAD PTR(31),       /* ADDR OF ALOAD ROUTINE       *
*           3  ATCREADA PTR(31),       /* ADDR OF SOURCE READ ROUTINE *
*           3  ATCGTSTR PTR(31),       /* ADDR OF GETSTOR ROUTINE     *
*           3  ATCFRSTR PTR(31),       /* ADDR OF FREESTOR ROUTINE    *
*           3  ATCSTMA PTR(31),        /* ADDR OF SM INITIALIZATION   *
*                                      /* ROUTINE                     *
*           3  ATCACDA PTR(31),        /* ADDR OF FIRST ACDEB         *
*           3  ATCSMRQ PTR(31),        /* ADDR OF REQUEST STORAGE     *
*                                      /* ROUTINE                     *
*           3  ATCSMQU PTR(31),        /* ADDR OF QUEUE REQUEST RTNE
*                                         - DOS ONLY                  *
*           3  ATCSMRS PTR(31),        /* ADDR OF RELEASE STORAGE     *
*                                      /* ROUTINE                     *
*           3  ATCSMRC PTR(31),        /* ADDR OF RECOVER STORAGE     *
*                                      /* ROUTINE  - DOS ONLY         *
*           3  ATCSMBQ PTR(31),        /* PTR TO Q'ED REQ. SMS RTN.   *
*           3  ATCFIRA PTR(31),        /* ADDR OF FEEDBACK INITIATION *
*                                      /* RPH                         *
*           3  ATCSRTAD PTR(31),       /* PTR TO SRTADD ROUTINE       *
*           3  ATCSRTDF PTR(31),       /* PTR TO SRTDELE ROUTN        *
*           3  ATCDCC60 PTR(31),       /* PTR TO ISTDCC60 - CTL. LAYER
*                                         MOVE TO USER AREA           *
*           3  ATCDCC61 PTR(31),       /* PTR TO ISTDCC61 - CTL. LAYER
*                                         MOVE FIXED TO PAGABLE       *
*/*  BEGIN 'ANY' DVT                                                  *
*           3  ATCNERST PTR(31),       /* PTR TO ISTDCC00 - REQUEST-ST*
*           3  ATCNERCV PTR(31),       /* PTR TO ISTRCC21-RECEIVE OB  *
*           3  ATCNERNE PTR(31),      /* PTR TO ISTDCC25 - READ-ANY   *
*           3  ATCNERFN PTR(31),      /* PTR TO ISTDCC02 - REQUEST-FN *
*/*  END 'ANY' DVT                                                    *
*           3  ATCAPOST PTR(31),      /* PTR TO VTAM  POST ROUTINE    *
*           3  ATCVTMID CHAR(2),      /* HOST MAJOR NODE I.D.         *
*           3  ATCRSV11 CHAR(2),      /* RESERVED                     *
*           3 ATCRCC63 PTR(31),  /* HSKPANYQ POINTER                  *
*           3 ATCRCC26 PTR(31),  /* SEND RESPONSE POINTER             *
*           3 ATCRCC65 PTR(31),  /* SET RPL POINTER                   *
*           3  ATCNESAL PTR(31),      /* PTR TO ISTDCC24 - SOLICIT-ALL*
*           3  ATCNERAP PTR(31),       /* PTR TO ISTDCC85 - READ ANY
*                                         PURGE                       *
*           3 ATCACTRM FIXED(15),     /* COUNT OF ACTIVE TERMINALS    *
*           3 ATCCIDM BIT(16),        /* CID MASK                     *
*           3 ATCMSGSP BIT(8), /* RESERVED FOR MESAGE SURPRESSION     *
*         2 ATCMAXID PTR(8),   /* MAXIMUM NUMBER OF MAJOR NODES, 0 =
*                                 NUMBER OF ENTRIES IN THE MNT        *
*         2 ATCRSV16 CHAR(2),  /* NOT USED                            *
*         2 ATCMNT PTR(31),    /*PTR TO MAJOR NODE TABLE -SET BY SYS.
*                                DEF. REF. BY ISTSDCCB (CBDEF),    0550
*                                ISTSDCCI (CINDEXY)                   *
*         2 ATCCDADD PTR(31),  /*PTR TO CIDADD ROUTINE ISTSDCCA    0550
*                                 REF. BY CIDCTL MACRO                *
*         2 ATCCDDEL PTR(31),  /*PTR TO CIDDEL ROUTINE ISTSDCCD    0550
*                                 REF. BY CIDCTL MACRO                *
*         2 ATCCDFND PTR(31),  /*PTR TO CIDFND ROUTINE IATSDCCF    0550
*                                 REF. BY CIDCTL MACRO                *
*         2 ATCESC01 PTR(31),  /*PTR TO ESC01                         *
*         2 ATCESC02 PTR(31),  /*PTR TO ESC02                         *
*         2 ATCCSMR PTR(31),        /* PTR TO CONNECTION SERVICES     *
*                                   /*  MASTER ROUTINE                *
*           3 ATCCSMA PTR(31),      /* PTR TO CONNECTION SERVICES  0550
*                                      MASTER ROUTINE                 *
*         2 ATCOCRT PTR(31),        /* PTR TO OPEN/CLOSE ROUTINE      *
*         2 ATCUEP  PTR(31),        /* POINTER TO USER EXIT           *
*         2 ATCSHRTN CHAR(8),       /* NAME OF VTAM  SHARED RTN       *
*                                   /*  TO BE LOADED                  *
*         2 ATCSHRFG BIT(8),        /* ATTRIBUTE FLAGS                *
*           3 ATCLAST BIT(1),       /* INDICATE HTIS IS LAST MODULE   *
*         2 ATCXRANG CHAR(1),       /* NUMBER OT BITS IN X-VALUE   0550
*                                       PORTION   OF CID              *
*         2 ATCSAF   CHAR(2),       /* SUB AREA ADDRESS FIELD         *
*         2 ATCEPA PTR(31),         /* ENTRY POINT ADDR OF LOADED     *
*         2 ATCALERT PTR(31),       /* POINTER TO ALERT-ROUTINE    0550
*                                      ISTSDCAL                       *
*         2 ATCDVLOD PTR(31),       /* PTR TO ISTSDCOD                *
*         2 ATCTRCPT PTR(31),       /* POINTER TO TRACE PARM LIST     *
*         2 ATCDVT   PTR(31),       /* POINTER TO FIRST DVT ON CHAIN  *
*         2 ATCEPT   PTR(31),       /* POINTER TO FIRST EPT ON CHAIN  *
*         2 ATCMSGP PTR(31),        /* POINTER TO TPMSG PROCESSOR     *
*         2 ATCMSGM PTR(31),        /* POINTER TO TPMSG - MESSAGE  0550
*                                      CSECT                          *
*         2 ATCTRPAB  PTR(31),      /* ADDRESS OF TRACE WRITER PAB    *
*         2 ATCVTLOD PTR(31),       /* ADDR OF VTAM LOAD LIST         *
*         2 ATCECPRT CHAR(4),       /* ECB FOR TRACE FILE PRINT       *
*         2 ATCZDVTB PTR(31),       /* ADDRESS OF ISTZCFBI            *
*         2 ATCECTLP CHAR(4),       /* TOLTEP ECB                     *
*         2 ATCRVCHS CHAR(8),       /* RESERVED                       *
*         2 ATCCRME  PTR(31),       /* VARY PSS CONTROL MECHANISM     *
*         2 ATCHPGM,                /* BUFFER INFORMATION            */
*           3 ATCHBFNO FIXED(15),   /* NUMBER OF BUFFS FOR CHANNEL   */
*           3 ATCHBSIZ FIXED(15),   /* BUFFER SIZE IN BYTES          */
*         2 ATCDEBCH PTR(31),       /* CLOSE DEB CHAIN PTR           */
*         2 ATCTODVT PTR(31),       /* THE TOLTEP DVT PTR POINTED  0550
*                                      TO BY 3RD WORD OF PAB         */
*         2 ATCADEL  PTR(31),       /* A DELETE ROUTINE ADDRESS      */
*         2 ATCCDPTR PTR(31),       /* PTR TO ISTOCCCD - DOS ONLY    */
*         2 ATCLDNCS PTR(31),       /* PTR TO NCSPL FOR LOAD/DUMP    */
*         2 ATCLDECB BIT(32),       /* ECB FOR LOAD/DUMP SUBTASK     */
*         2 ATCAPCR5 PTR(31),       /* POINTER TO ISTINCR5           */
*         2 ATCRSV69 PTR(31),       /* RESERVED TO SYNCH WITH DOS    */
*         2 ATCNODEL CHAR(8),       /* VSAM DATA SET NAME            */
*         2 ATCNODDS PTR(31),       /* POINTER TO RPL                */
*         2 ATCONFIG CHAR(8),       /* START VTAM CONFIG = PARAMETER */
*         2 ATCRSV99 CHAR(4),       /* RESERVED FOR LATER POINTERS   */
*         2 ATCAP33 PTR(31),        /* PTR TO ISTAPC33               */
*         2 ATCAP35 PTR(31),        /* PTR TO ISTAPC35               */
*         2 ATCAP36 PTR(31),        /* PTR TO ISTAPC36               */
*         2 ATCDVTLK CHAR(LENGTH(ISTLOK)), /* LOCK WORD FOR DVT LOCK */
*         2 ATCCDFIN PTR(31),       /* POINTER TO ISTSDCRR           */
*         2 ATCCDFDN PTR(31),       /* POINTER TO ISTSDCCN           */
*         2 ATCVOCLK CHAR(LENGTH(ISTLOK)), /* VOCLOCK LOCK           */
*         2 ATCRDTLK CHAR(LENGTH(ISTLOK)), /* RDTLOCK LOCK           */
*         2 ATCRSV97 PTR(31),              /* DWORD ALIGNMENT        */
*         2 ATCVPAB1 CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* PAB FOR VARY
*                                           UNDER PSS CONTROL        */
*         2 ATCPGPAB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* ERP PAB FOR
*                                      PURGE                         */
*         2 ATCDLRPB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* DUMP LOAD &
*                                           RESTART PAB              */
*         2 ATCCCLAD PTR(31),       /* ADDRESS OF VARY ERP (ISTINCCL)*/
*         2 ATCCDLAD PTR(31),       /* ADDRESS OF VARY DUMP,LD RSTRT
*                                      (ISTINCDL)                    */
*         2 ATCOCCOB PTR(31),       /* ADDRESS ISTOCCOB              */
*         2 ATCOCCCB PTR(31),       /* ADDRESS ISTOCCCB              */
*         2 ATCTIPAB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* A PAB   0550
*                                           FOR ISTOLTP              */
*         2 ATCTCIPB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* A PAB   0550
*                                           FOR TOLTEP CLIP          */
*         2 ATCVTIPB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* A PAB   0550
*                                           FOR TOLTEP-VTAM INTERFACE*/
*         2 ATCTCLOM PTR(31),      /* ADDR TOLTEP CLOP PROC          */
*         2 ATCTCLIM PTR(31),      /* ADDR TOLTEP CLIP PROC          */
*         2 ATCVTINM PTR(31),      /* ADDR TOLTEP-VTAM INTF PROC     */
*         2 ATCTACB  PTR(31),      /* TOLTEP ACB                     */
*         2 ATCRSV10 CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* RESERVED  */
*         2 ATCPTR00 CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* A PAB     */
*         2 ATCCFEAD PTR(31),          /* ADDR OF ISTINCFE           */
*         2 ATCVLCNT CHAR(4) BDY(HWORD), /* VARY DEVICE ONLINE COUNTS*/
*           3 ATCRNCNT PTR(16),        /* 370X COUNT                 */
*           3 ATCLCLCT PTR(16),        /* 3270 COUNT                 */
*         2 ATCS49XI PTR(31),          /* ADDRESS OF ISTPICXI        */
*         2 ATCS49XL PTR(31),          /* ADDRESS OF ISTPICXL        */
*         2 ATCPODVT PTR(31),          /* PTR TO PROGRAM OPERATOR DVT*/
*         2 ATCRNO,                                                0550
*           3 *        CHAR(1),                                    0550
*           3 ATCPOIA  PTR(24),        /* PTR TO PROGRAM OPERATOR    */
*                                      /* INTERFACE AREA             */
*         2 ATCSOPD CHAR(8) BDY(WORD), /* SESSION CONTROL            */
*           3 ATCSEC01 PTR(31),        /* OUTBOUND PROCESSING        */
*           3 ATCSEC10 PTR(31),        /* DVT                        */
*         2 ATCSIPD CHAR(12) BDY(WORD),/* SESSION CONTROL            */
*           3 ATCSEC21 PTR(31),        /* INBOUND PROCESSING         */
*           3 ATCSEC30 PTR(31),        /* FEEDBACK                   */
*           3 ATCSEC40 PTR(31),        /* DVT                        */
*         2 ATCSECST CHAR(4) BDY(WORD),/* SESSION CONTROLSESS TERM   */
*           3 ATCSEC51 PTR(31),        /* RECOVERY DVT               */
*         2 ATCNMCTR FIXED(15),        /* NAME COUNTER               */
*         2 ATCSTAT2 BIT(8),           /* TRACE FLAGS                */
*           3 ATCTRAPI BIT(1),         /* API                        */
*           3 ATCTRESC BIT(1),         /* ESC                        */
*           3 ATCTRPSS BIT(1),         /* PSS                        */
*           3 ATCTRLOK BIT(1),         /* LOCKS                      */
*           3 ATCTRSMS BIT(1),         /* SMS                        */
*           3 *        BIT(3),         /* RESERVED                   */
*         2 *        BIT(8),           /* RESERVED                   */
*         2 ATCSRTAB PTR(31),          /* SEARCH LOGON MODE TABLE    */
*                                      /* RTN ADDRESS (ISTINCSH)     */
*         2 ATCUSSPT PTR(31),          /* DEFAULT USS DEFINITION     */
*                                      /* TABLE ADDRESS (ISTINCDT)   */
*         2 ATCMODTB PTR(31),          /* DEFAULT SYSTEM LOGON MODE  */
*                                      /* TABLE ADDRESS (ISTINCLM)   */
*         2 ATCINCW3 PTR(31),          /* ADDRESS OF ISTINCW3        */
*         2 ATCIOECB PTR(31),          /* ECB USED BY IOS -          */
*                                      /* POINTED TO BY IOBECBPT     */
* 2 ATCVDPAB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD),                    0550
*                                    /* SSCP COMMAND PROCESSING PAB  */
* 2 ATCVFPAB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD),                    0550
*                                    /* SSCP FRONT END PAB           */
* 2 ATCVDLOK CHAR(LENGTH(ISTLOK)),   /* SSCP SERIALIZATION LOCK      */
*/* END OF COMMON AREA                                               */
*/* VS1/VS2 COMMON CODE.                                             */
*        2  ATCVTBAM CHAR(4),                                      0550
*           3  *     CHAR(3),          /* RESERVED                    *
*           3  *     CHAR(1),          /* FLAGS                       *
*              4 ATCVTMAB BIT(1) ABNL, /* ABEND IN VTAM JOBSTEP       *
*              4 *        BIT(7),      /* RESERVED                    *
*        2  ATCAOSM BDY(DWORD),                                    0550
*/*                                                                   *
*           3  ATCSRBRT PTR(31),       /* POINTER TO ROUTINE UNDER    *
*                                      /* SRB CONTROL                 *
*           3  ATCGSRBQ PTR(31),       /* READY QUEUE FOR GLOBAL SRB'S*
*              4  ATCGSRBG BIT(8),     /* READY QUEUE GATE BYTE       *
*                 5  ATCGSRBF BIT(1),  /* READY QUEUE GATE BIT        *
*           3  ATCPRPH PTR(31),        /* PTR TO PREALLOCATED RPH     *
*           3  ATCCMTCB PTR(31),       /* PTR TO COMMUNICATIONS TASK  *
*                                      /* TCB                         *
*           3  ATCAP11 PTR(31),        /* PTR TO ISTAPC11             *
*           3  ATCAP12 PTR(31),        /* PTR TO ISTAPC12             *
*           3  ATCAP31 PTR(31),        /* PTR TO ISTAPC31             *
*           3  ATCAP32 PTR(31),        /* PTR TO ISTAPC32             *
*           3  ATCAP34 PTR(31),        /* PTR TO ISTAPC34             *
*           3  ATCAP52 PTR(31),        /* PTR TO ISTAPC52             *
*           3  ATCAP53 PTR(31),        /* PTR TO ISTAPC53             *
*           3  ATCAP54 PTR(31),        /* PTR TO ISTAPC54             *
*           3  ATCAP57 PTR(31),        /* PTR TO ISTAPC57             *
*           3  ATCAP58 PTR(31),        /* PTR TO ISTAPC58             *
*           3  ATCAP61 PTR(31),        /* PTR TO ISTAPC61             *
*           3  ATCAP63 PTR(31),        /* PTR TO ISTAPC63             *
*           3  ATCAP64 PTR(31),        /* PTR TO ISTAPC64             *
*           3  ATCZFSVT PTR(31),       /* TPIOS FIXED SRVICES VCTR TAB*
*           3  ATCZPSVT PTR(31),       /* TPIOS PAGBL SRVCES VCTR TABL*
*           3  ATCICNCB PTR(31),       /* HEAD OF ICNCB QUEUE         *
*           3  ATCZDVT1 PTR(31),       /* TPIOS SLODWN RECOVRY PRCSR  *
*           3  ATCZDVT3 PTR(31),       /* 370X FEEDBACK STAT CNTRL RTR*
*           3  ATCZDVT4 PTR(31),       /* OPERATOR MESSAGE SCHEDULER  *
*           3  ATCZDVT6 PTR(31),       /* DIALOGUE SCHEDULER (INBOUND)*
*           3  ATCAP65 PTR(31),        /* PTR TO ISTAPC65            */
*           3  ATCICAPP CHAR(20) BDY(WORD), /* 3705 APPENDAGE VECTOR  *
*              4  ATCCDRPH PTR(31),    /* ADDR CLOSE DEB RPH       0550
*                                         (DUMMY EOA APP.)           */
*              4  ATCZSIOA PTR(31),    /* ADDR 3705 SIO APPENDAGE    */
*              4  ATCCDTCB PTR(31),    /* VTAM TCB (DUMMY PCI APP.)  */
*              4  ATCZCEA PTR(31),     /* ADDR 3705 CHANNEL END    0550
*                                         APPENDAGE                  */
*              4  ATCZAEA PTR(31),     /* ADDR 3705 CHANNEL END    0550
*                                         APPENDAGE                  */
*           3  ATCLDAPP CHAR(20) BDY(WORD), /* LOCAL 3270 APPENDAGE
*                                         VECTOR                     */
*              4  ATCCDTID PTR(31),    /* TASK ID OF VTAM          0550
*                                         (DUMP EOE)                 */
*              4  ATCSMFRR PTR(31),    /* ADDR OF SMS FRR          0550
*                                         (DUMMY SIOA)               */
*              4  ATCRSV17 PTR(31),    /* RESERVED FOR ALIGNMENT     */
*              4  ATCZLCEA PTR(31),    /* ADDR 3270 CHANNEL END    0550
*                                         APPENDAGE                  */
*              4  ATCZLAEA PTR(31),    /* ADDR 3270 CHANNEL END    0550
*                                         APPENDAGE                  */
*           3  ATCDAPVT CHAR(24) BDY(WORD),  /* DUMMY APPENDAGE    0550
*                                         VECTOR TABLE FOR LOAD/DVMMY*/
*              4  ATCDEOEA PTR(31),    /* ADDRESS OF DUMMY END     0550
*                                         OF EXTENT APPENDAGE        */
*              4  ATCDSIOA PTR(31),    /* ADDRESS OF DUMMY END     0550
*                                         OF SIO APPENDAGE           */
*              4  ATCDPCIA PTR(31),    /* ADDRESS OF DUMMY PCI     0550
*                                         APPENDAGE                  */
*              4  ATCDCEA PTR(31),     /* ADDRESS OF CHANNEL END   0550
*                                         APPENDAGE                  */
*              4  ATCDXCEA PTR(31),    /* ADDRESS OF ABNORMAL      0550
*                                         END APPENDAGE              */
*              4  ATCDAPDG CHAR(2),    /* DUMMY APPENDAGE            */
*              4  ATCRSV56 CHAR(2),    /* RESERVED                   */
*           3  ATCZDVT7 PTR(31),       /* ADDR OF RESET CLEANUP    0550
*                                         (PHASE 1)                   *
*           3  ATCZDVT8 PTR(31),       /* 3270 LOCAL TEST AND CTL  0550
*                                         FEEDBACK ROUTER            */
*           3  ATCZDVT9 PTR(31),       /* ADDRESS OF ISTZDFKA        */
*           3  ATCZDVTA PTR(31),       /* ADDRESS OF ISTZCFIA        */
*           3  ATCZDVTX PTR(31),       /* ADDRESS OF TRUNK LINE    0550
*                                         DEACTIVATE ROUTINE         */
*           3  ATCZLPVT PTR(31),       /* ADDRESS OF ISTZPSVA        */
*           3  ATCZLFVT PTR(31),       /* TPIOS 3270 LOCAL FIXED   0550
*                                         SERVICES VECTOR TABLE      */
*           3  ATCZPAB1 CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* PAB FOR
*                                         TEST AND CTL FEEDBACK ROUTER*
*           3  ATCZPAB2 CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* 370X 0550
*                                         STATUS AND FEEDBACK ROUTER
*                                         DYNAMIC PAB                */
*           3  ATCAP51  PTR(31),       /* PTR TO ISTAPC51            */
*           3  ATCZDFJ0 PTR(31),       /* ADDR OF ISTZDFJ0           */
*           3  ATCAP37  PTR(31),       /* PTR TO ISTAPC37            */
*           3  ATCAP38  PTR(31),       /* PTR TO ISTAPC38            */
*           3  ATCDMAPP PTR(31),       /* DUMMY APPENDAGE ROUTINE    */
*                                      /* FOR ABEND                  */
*           3  ATCRPT12 PTR(31),       /* RESERVED                   */
*        3  ATCCRA   CHAR(8) BDY(DWORD), /* AVAILABLE CRA             *
*           4 ATCCRAQ  PTR(31),          /* QUEUE OF AVAILABLE CRAS   *
*           4 ATCCRACN FIXED(31),        /* COUNTS                    *
*             5 ATCCRARC FIXED(16),      /* ENQUEUE COUNT TO ALLOW    *
*                                        /* MULTIPLE SIMUALTANIOUS    *
*                                        /* ENQUEUES AND DEQUEUES     *
*             5 ATCCRAAC FIXED(16),      /* COUNT OF CRAS ON AVAIL Q  *
*        3  ATCSRB   CHAR(8) BDY(DWORD), /* AVAILABLE SRBS            *
*             4 ATCSRBQ  PTR(31),        /* QUE OF AVAILABLE SRBS     *
*             4 ATCSRBCN FIXED(31),      /* COUNTS                    *
*               5 ATCSRBRC FIXED(16),    /* ENQUEUE COUNT TO ALLOW    *
*                                        /* MULTIPLE SIMUALTANIOUS    *
*                                        /* ENQUEUES AND DEQUEUES     *
*               5 ATCSRBAC FIXED(16),    /* COUNT OF SRBS ON AVAIL Q  *
*        3  ATCCRPL  CHAR(8) BDY(DWORD), /* AVAILABLE CRPLS           *
*             4 ATCCRPLQ PTR(31),        /* QUE OF AVAILABLE CRPLS    *
*             4 ATCRPLCN FIXED(31),      /* COUNTS                    *
*               5 ATCRPLRC FIXED(16),    /* ENQUEUE COUNT TO ALLOW    *
*                                        /* MULTIPLE SIMUALTANIOUS    *
*                                        /* ENQUEUES AND DEQUEUES     *
*               5 ATCRPLAC FIXED(16),    /* COUNT OF CRPLS ON AVAIL Q *
*           3  ATCSQAFR BDY(DWORD),    /* DOUBLE WORD FOR CDS      0550
*                                          SQA RELEASE       @VSRIUBL*/
*             4 ATCORTBF PTR(31),      /* ANCHOR FOR TO-BE-        0550
*                                          FREED STG Q       @VSRIUBL*/
*             4 ATCORTBC PTR(31),      /* PTR TO TCB OF TASK       0550
*                                          OWNING STG Q      @VSRIUBL*/
*               5 ATCORSRB PTR(31),    /* PTR TO SMS SRB     @VSRIUBL*/
*                 6 ATCORQG  BIT(1)ABNL, /* SRB GATE FOR SMS @VSRIUBL*/
*           3  ATCOROBT PTR(31),      /* ANCHOR FOR OBTAINED       0550
*                                         STAGE              @VSRIUBL*/
*           3  ATCORFRL PTR(31),      /* ADDR OF ISTORFRL    @VSRIUBL*/
*           3  ATCORFMG PTR(31),      /* ADDR OF ISTORFMG    @VSRIUBL*/
*           3  ATCINFDD PTR(31),      /* ADDR OF ISTINFDD    @VSRIUBL*/
*           3  ATCAIWT  PTR(31),      /* ADDRESS OF BYTE           0550
*                                         FOLLOWING WAIT IN        0550
*                                         ISTAICCK           @VSRIUBL*/
*           3  *        BIT(8),       /* RESERVED            @VSRIUBL*/
*             4 ATCABEN BIT(1)ABNL,   /* VTAM IS ABNORMALLY        0550
*                                         ENDING             @VSRIUBL*/
*             4 ATCOPKL BIT(1)ABNL,   /* OPERATOR IS ENDING        0550
*                                         VTAM               @VSRIUBL*/
*             4 ATCSNUF BIT(1)ABNL,   /* RECURSIVE VTAM ABEND      0550
*                                         DURING RSCE MGR          0550
*                                         OPERATION          @VSRIUBL*/
*             4 *       BIT(5),       /* RESERVED            @VSRIUBL*/
*           3  *        BIT(24),      /* RESERVED            @VSRIUBL*/
*           3  ATCRPT27 PTR(31),       /* RESERVED                   */
*           3  ATCRPT28 PTR(31),       /* RESERVED                   */
*           3  ATCRPT29 PTR(31),       /* RESERVED                   */
*           3  ATCRPT30 PTR(31),       /* RESERVED                   */
*           3  ATCRPT31 PTR(31),       /* RESERVED                   */
*           3  ATCRPT32 PTR(31),       /* RESERVED                   */
*           3  ATCRPT33 PTR(31),       /* RESERVED                   */
*           3  ATCRPT34 PTR(31),       /* RESERVED                   */
*           3  ATCRPT35 PTR(31),       /* RESERVED                   */
*           3  ATCRPT36 PTR(31),       /* RESERVED                   */
*           3  ATCRPT37 PTR(31),       /* RESERVED                   */
*           3  ATCRPT38 PTR(31),       /* RESERVED                   */
*           3  ATCRPT39 PTR(31),       /* RESERVED                   */
*           3  ATCRPT40 PTR(31),       /* RESERVED                   */
*/* END OF VS1/VS2 COMMON CODE.                                      */
*/* START OF VS2 UNIQUE CODE.                                        */
*           3  ATCVTFLG BIT(32),                                   0550
*              4 ATCVTACT BIT(1),      /* VTT ACTIVE                 */
*              4 *        BIT(31),     /* RESERVED                   */
*           3  ATCHLTCB PTR(31),       /* ECB FOR HALTING VTAM       */
*           3  ATCATA10 PTR(31),       /* PTR TO ISTATM10            */
*           3  ATCZLAAB PTR(31),       /* PTR TO ISTZLFAB            */
*           3  ATCCACXA PTR(31),       /* PTR TO ISTCFCXA            */
*           3  ATCSMARA PTR(31),       /* PTR TO ISTORFRA            */
*           3  ATCSMAID PTR(31),       /* PTR TO ISTORFID            */
*           3  ATCTPWQA PTR(31),       /* WAIT Q ANCHOR FOR TPIOS    */
*           3  ATCSMAPR PTR(31),       /* PTR TO ISTORFPR            */
*           3  ATCSMABF PTR(31),       /* PTR TO ISTORFBF            */
*           3  ATCPSTA  PTR(31),       /* ACTIVE PST QUEUE           */
*           3  ATCAPBE  PTR(31),       /* POINTER TO ISTAICBE        */
*           3  ATCTRMPB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD),         0550
*                                      /* PAB FOR VTAM TERM TASK     */
*           3  ATCTPSPB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD),         0550
*                                      /* PAB FOR TPIOS              */
*           3  ATCAP23  PTR(31),       /* PTR TO ISTAPC23            */
*           3  ATCAPC25 PTR(31),       /* PTR TO ISTAPC25            */
*           3  ATCAP41  PTR(31),       /* PTR TO ISTAPC41            */
*           3  ATCRCFY0 PTR(31),       /* PTR TO ISTRCFY0            */
*           3  ATCAP55  PTR(31),       /* PTR TO ISTAPC55            */
*           3  ATCAP56  PTR(31),       /* PTR TO ISTAPC56            */
*           3  ATCAPC59 PTR(31),       /* PTR TO ISTAPC59            */
*           3  ATCAP62  PTR(31),       /* PTR TO ISTAPC62            */
*           3  ATCAP66  PTR(31),       /* PTR TO ISTAPC66            */
*           3  ATCAP69  PTR(31),       /* PTR TO ISTAPM69            */
*           3  ATCAP82  PTR(31),       /* PTR TO ISTAPC82            */
*           3  ATCAP83  PTR(31),       /* PTR TO ISTAPC83            */
*           3  ATCAP84  PTR(31),       /* PTR TO ISTAPC84            */
*           3  ATCAP85  PTR(31),       /* PTR TO ISTAPC85            */
*           3  ATCAP86  PTR(31),       /* PTR TO ISTAPC86            */
*           3  ATCASCB  PTR(31),       /* PTR TO VTAM ASCB           */
*           3  ATCMPLTA  PTR(31),      /* PTR TO MPST LIST TABLE     */
*           3  ATCZR01  PTR(31),       /* PTR TO ISTZRM01            */
*           3  ATCAICTN PTR(31),       /* PTR TO ISTAICTN            */
*           3  ATCTPCP0 PTR(31),       /* PTR TO ISTZFSAV            */
*           3  ATCTPCP1 PTR(31),       /* PTR TO ISTZ19SV            */
*           3  ATCZFLAG BIT(8),        /* FLAG BYTE                  */
*              4 ATCZF001 BIT(1),      /* MDR RECORDING SUSPENDED    */
*              4 ATCRSV66 BIT(7),      /* RESERVED                   */
*           3  ATCRSV75 BIT(8),        /* RESERVED                   */
*           3  ATCSRBCT FIXED(16),     /* COUNT OF PREALLOCATED SRB'S*/
*           3  ATCCRACT FIXED(16),     /* COUNT OF PREALLOCATED CRA'S*/
*           3  ATCRPLCT FIXED(16),     /* COUNT OF PREALLOCATED CRPL */
*           3  ATCRSV88 PTR(31),       /* RESERVED                   */
*           3  ATCTPMPB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /*TP MSG PAB
*                                                         FOR VS2    */
*           3  ATCTPMMI PTR(31),        /* PTR TO ISTCFMMI - MSG ISSUER
*                                          FOR SRB MODE ROUTINES     */
*           3  ATCVIOPM PTR(31),       /* PTR TO ISTVIOPM            */
*           3  ATCPOPAB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD),         0550
*                   /* POPAB FOR REPLY PROCESSING, POI TERMINATION,  */
*                   /* AND VTAM MESSAGE PROCESSOR                    */
*        2  ATCAOS CHAR(0) BDY(WORD);  /* VS2 ONLY FIELDS            */
*   DECLARE                                                        0551
*     EMCR0 PTR REG(0),                                            0551
*     EMCR1 PTR REG(1),                                            0551
*     EMCR2 PTR REG(2),                                            0551
*     EMCR3 PTR REG(3),                                            0551
*     EMCR4 PTR REG(4),                                            0551
*     EMCR5 PTR REG(5),                                            0551
*     EMCR6 PTR REG(6),                                            0551
*     EMCR7 PTR REG(7),                                            0551
*     EMCR8 PTR REG(8),                                            0551
*     EMCR9 PTR REG(9),                                            0551
*     EMCR10 PTR REG(10),                                          0551
*     EMCR11 PTR REG(11),                                          0551
*     EMCR12 PTR REG(12),                                          0551
*     EMCR13 PTR REG(13),                                          0551
*     EMCR14 PTR REG(14),                                          0551
*     EMCR15 PTR REG(15);                                          0551
*   DCL                                                            0552
*     ISTAPC34 ENTRY BASED(ATCAP34) VALRG(*);/* RESET ROUTINE        */
*   DCL                                                            0553
*     ISTAPC37 ENTRY BASED(ATCAP37) VALRG(*);/* TPQUE ROUTINE        */
*   GEN(PRINT ON);                                                 0554
*                                                                  0554
         PRINT ON
*/* END OF TPEPILOG                                                  */
*                                                                  0555
*                                   /*                       @D31KKDA*/
*/*  CMZPEND                                                         */
*                                                                  0555
*   DO;                                                            0555
*     RFY                                                          0556
*      (GPR01P,                                                    0556
*       GPR03P,                                                    0556
*       GPR04P,                                                    0556
*       GPR05P,                                                    0556
*       GPR06P,                                                    0556
*       GPR08P,                                                    0556
*       GPR13P,                                                    0556
*       GPR14P) UNRSTD;                                            0556
*   END;                                                           0557
*   END ISTNMC6S                                                   0558
*                                                                  0558
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*                                                                  0558
*       ;                                                          0558
@EL00001 DS    0H                                                  0558
@EF00001 DS    0H                                                  0558
@ER00001 BR    @14                                                 0558
@DATA    DS    0H
@DATD    DSECT
         DS    0F
ISTNMC6S CSECT
         DS    0F
@CF00080 DC    F'4'
@DATD    DSECT
         DS    0D
CVTPTR   DS    A
FSBPTR   DS    A
LCPBPTR  DS    A
FMCBPTR  DS    A
DNCBPTR  DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTNMC6S CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
FMZA0016 DS    FL4
         ORG   FMZA0016
@NM00028 DC    AL1(64)
@NM00029 DC    AL3(0)
         ORG   FMZA0016+4
FMZA0055 DS    FL4
         ORG   FMZA0055
@NM00032 DC    AL1(64)
@NM00033 DC    AL3(0)
         ORG   FMZA0055+4
FMZD0032 DC    CL8'INREDRVE'
CMZAA046 DC    CL4'854I'
CMZZO046 DC    F'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RPHPTR   EQU   @01
GPR01P   EQU   @01
GPR03F   EQU   @03
GPR03P   EQU   @03
GPR04P   EQU   @04
GPR05P   EQU   @05
GPR06P   EQU   @06
GPR08P   EQU   @08
GPR13P   EQU   @13
GPR14P   EQU   @14
CMZK0014 EQU   @01
GPR07P   EQU   @07
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR02P   EQU   @02
GPR15P   EQU   @15
REG1046  EQU   @01
EMCR13   EQU   @13
REG15046 EQU   @15
EMCR0    EQU   @00
EMCR1    EQU   @01
EMCR10   EQU   @10
EMCR11   EQU   @11
EMCR12   EQU   @12
EMCR14   EQU   @14
EMCR15   EQU   @15
EMCR2    EQU   @02
EMCR3    EQU   @03
EMCR4    EQU   @04
EMCR5    EQU   @05
EMCR6    EQU   @06
EMCR7    EQU   @07
EMCR8    EQU   @08
EMCR9    EQU   @09
GPR01F   EQU   @01
GPR02F   EQU   @02
GPR04F   EQU   @04
GPR05F   EQU   @05
GPR06F   EQU   @06
GPR07F   EQU   @07
GPR08F   EQU   @08
GPR09F   EQU   @09
GPR09P   EQU   @09
GPR10F   EQU   @10
GPR10P   EQU   @10
GPR11F   EQU   @11
GPR11P   EQU   @11
GPR12F   EQU   @12
GPR12P   EQU   @12
GPR13F   EQU   @13
GPR14F   EQU   @14
GPR15F   EQU   @15
ATCLCPTR EQU   1032
ISTRPH   EQU   0
RPHCNTL  EQU   ISTRPH
RPHFLAGS EQU   RPHCNTL+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   RPHCNTL+3
RPHRPHA  EQU   ISTRPH+4
RPHCVFLG EQU   RPHRPHA
RPHGATE  EQU   RPHCVFLG
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHMAJCB EQU   ISTRPH+21
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHCRR   EQU   ISTRPH+32
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
ISTFDB   EQU   0
FDBFDBA  EQU   ISTFDB
FDBOFSET EQU   ISTFDB+10
ISTFSB   EQU   0
FSBFSB   EQU   ISTFSB
FSBMNRCD EQU   FSBFSB+2
FSBSFLGS EQU   FSBFSB+3
FSBFSBA  EQU   FSBFSB+4
FSBBTH   EQU   FSBFSB+8
FSBCID   EQU   FSBBTH
FSBRQTAG EQU   FSBBTH+4
FSBSEQID EQU   FSBRQTAG
FSBFLAGS EQU   FSBSEQID
FSBSEQ   EQU   FSBSEQID+1
FSBCSWST EQU   FSBBTH+6
FSBTHFLD EQU   FSBCSWST
FSBTH1   EQU   FSBTHFLD
FSBSYSRS EQU   FSBTH1
FSBSCODE EQU   FSBSYSRS
FSBTH2   EQU   FSBTHFLD+1
FSBEXTRS EQU   FSBTH2
FSBXFSTS EQU   FSBEXTRS
FSBXCODE EQU   FSBEXTRS
FSBNETRS EQU   FSBFSB+16
FSBSRCAT EQU   FSBNETRS
FSBERC   EQU   FSBNETRS+1
FSBFBMI  EQU   FSBERC
FSBDMGRS EQU   FSBFSB+18
FSBSS1   EQU   FSBDMGRS
FSBSS2   EQU   FSBDMGRS+1
FSBLCPB  EQU   FSBFSB+20
FSBMSGID EQU   FSBLCPB
FSBLCCWA EQU   FSBFSB+24
FSBRLSTS EQU   FSBLCCWA
FSBFDB   EQU   ISTFSB+32
ISTLCCW  EQU   0
LCCWOP   EQU   ISTLCCW
LCCWRWOP EQU   LCCWOP
LCCWCTL  EQU   LCCWRWOP
LCCWFLAG EQU   ISTLCCW+1
LCCWLSI  EQU   LCCWFLAG
ISTLCPB  EQU   0
LCPREQTG EQU   ISTLCPB+2
LCPFLAGS EQU   LCPREQTG
LCPZF001 EQU   LCPFLAGS
LCPZRT02 EQU   LCPZF001
LCPZF002 EQU   LCPFLAGS
LCPZRT03 EQU   LCPZF002
LCPZF003 EQU   LCPFLAGS
LCPZRT04 EQU   LCPZF003
LCPZF004 EQU   LCPFLAGS
LCPZRT05 EQU   LCPZF004
LCPZRT06 EQU   LCPFLAGS
LCPZRT07 EQU   LCPFLAGS
LCPMNRCD EQU   LCPREQTG+1
LCPZRT08 EQU   LCPMNRCD
LCPZRT09 EQU   LCPMNRCD
LCPCHAIN EQU   ISTLCPB+4
LCPCHAI1 EQU   LCPCHAIN
LCPRUCNT EQU   ISTLCPB+8
LCPFLAG2 EQU   ISTLCPB+9
LCPTLBPI EQU   LCPFLAG2
LCPFID0  EQU   LCPFLAG2
LCPSEQ   EQU   ISTLCPB+10
LCPCID   EQU   ISTLCPB+16
LCPNXLCW EQU   ISTLCPB+20
LCPFDBA  EQU   ISTLCPB+24
LCPFLG1  EQU   ISTLCPB+37
LCPFLCCW EQU   ISTLCPB+40
LCPLCCW  EQU   ISTLCPB+48
LCPPABA  EQU   LCPLCCW+4
LCPRPHA  EQU   LCPPABA
ISTNMLPB EQU   0
NMCONTRL EQU   ISTNMLPB+72
NMPSRTRY EQU   NMCONTRL+1
NMLCWCMD EQU   NMCONTRL+2
NMRDTEA  EQU   NMCONTRL+4
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00012 EQU   LOKCHNG+2
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVTCODE EQU   ISTDEVCH+1
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTPROCD EQU   0
PROPROC  EQU   ISTPROCD
PROPROC1 EQU   PROPROC
PROPROC2 EQU   PROPROC+1
PROPROC3 EQU   PROPROC+2
PROPROC4 EQU   PROPROC+3
PROPROCS EQU   0
PROSETMS EQU   PROPROCS+1
PROSETM2 EQU   PROSETMS
PROSETM3 EQU   PROSETMS+1
PROSETM4 EQU   PROSETMS+2
ISTFMCB  EQU   0
FMCDNCBA EQU   ISTFMCB+16
FMCSTAT  EQU   ISTFMCB+28
FMCSTAT1 EQU   ISTFMCB+29
FMCCMDFL EQU   ISTFMCB+31
FMCCMPS1 EQU   ISTFMCB+36
FMCPAB3  EQU   ISTFMCB+96
FMCSIPA  EQU   ISTFMCB+148
FMCNXOSQ EQU   ISTFMCB+152
FMCNXCFM EQU   FMCNXOSQ
FMCNXOSC EQU   FMCNXOSQ+2
FMCSSTAT EQU   ISTFMCB+159
FMCPACE  EQU   ISTFMCB+160
FMCPACEN EQU   FMCPACE
FMCPACEM EQU   FMCPACE+1
FMCPACPC EQU   FMCPACE+2
FMCCVAL  EQU   FMCPACE+3
FMCOBCE  EQU   FMCCVAL
FMCCLEXT EQU   ISTFMCB+164
FMCRPLA  EQU   FMCCLEXT
FMCFBA   EQU   FMCCLEXT+4
FMCCMPS2 EQU   FMCCLEXT+16
FMCFLGA  EQU   FMCCMPS2
FMCFLGCL EQU   FMCCMPS2+1
FMCPSCMD EQU   FMCCMPS2+2
FMCPSTAT EQU   FMCCMPS2+3
FMCSTAT2 EQU   ISTFMCB+186
FMCMODEB EQU   ISTFMCB+189
FMCCLSEQ EQU   ISTFMCB+190
FMCRRESP EQU   ISTFMCB+195
FMCSSEGQ EQU   ISTFMCB+200
FMCFBAS  EQU   ISTFMCB+216
FMCZV002 EQU   FMCFBAS
FMCSNCTL EQU   ISTFMCB+224
FMCSCFLG EQU   FMCSNCTL
FMCVS1   EQU   ISTFMCB+232
FMCZFLAG EQU   FMCVS1
FMCZF006 EQU   FMCZFLAG
FMCLBXM  EQU   FMCVS1+12
FMCSHEAQ EQU   FMCLBXM
FMCLCPBQ EQU   FMCVS1+16
FMCLCPAQ EQU   FMCVS1+20
FMCSEQ1  EQU   FMCVS1+34
FMCZFLG2 EQU   FMCVS1+35
FMCCVFLG EQU   FMCVS1+44
FMCFLAG  EQU   0
FMCFLGB  EQU   FMCFLAG
ISTNCB   EQU   0
NCBRDTE  EQU   ISTNCB+4
NCBFLAGS EQU   ISTNCB+24
NCBFRAS  EQU   NCBFLAGS+1
NCBFTRIO EQU   NCBFRAS
NCBFLAG1 EQU   NCBFLAGS+2
ISTDNCB  EQU   0
DNCOS    EQU   ISTDNCB+56
DNCZFLGS EQU   DNCOS
DNCBSCED EQU   DNCOS+2
ISTRPRE  EQU   0
RPRCOMID EQU   ISTRPRE+8
RPRFLAGA EQU   ISTRPRE+21
RPRFLAGB EQU   ISTRPRE+22
RPRCAUSE EQU   ISTRPRE+23
RPRFLAGD EQU   ISTRPRE+61
RPRFLAGC EQU   ISTRPRE+62
ISTRCPRE EQU   0
RCPPMODE EQU   ISTRCPRE+91
RCPLGNIN EQU   ISTRCPRE+92
ISTRDT   EQU   0
RDTPLEN  EQU   ISTRDT+72
RDTPRIOR EQU   RDTPLEN
RDTFLAGB EQU   ISTRDT+91
RDTVYRPH EQU   ISTRDT+108
RDTSTCNT EQU   ISTRDT+112
ISTRAP   EQU   0
RAPFLG   EQU   ISTRAP+108
RAPFLGB  EQU   ISTRAP+109
RAPFLGC  EQU   ISTRAP+110
ISTRLC   EQU   0
RLCADR   EQU   ISTRLC+72
RLCFLAG  EQU   RLCADR
ISTRRN   EQU   0
RRNADR   EQU   ISTRRN+136
RRNFLAG  EQU   RRNADR
RRNUCBAD EQU   RRNADR+1
RRNRDF   EQU   ISTRRN+172
RRNRDFA  EQU   RRNRDF
RRNRDFB  EQU   RRNRDF+1
RRNCMF   EQU   ISTRRN+176
RRNCMFA  EQU   RRNCMF
RRNCMFB  EQU   RRNCMF+1
RRNCMFC  EQU   RRNCMF+2
RRNCMFD  EQU   RRNCMF+3
RRNNMDPD EQU   ISTRRN+192
RRNHPRE  EQU   ISTRRN+216
ISTRGP   EQU   0
RGPFLG   EQU   ISTRGP+72
ISTRLN   EQU   0
RLNADR   EQU   ISTRLN+72
RLNFLAG  EQU   RLNADR
RLNUCBAD EQU   RLNADR+1
RLNSTAT1 EQU   ISTRLN+86
RLNSTAT2 EQU   ISTRLN+87
RLNRDF   EQU   ISTRLN+88
RLNRDFA  EQU   RLNRDF
RLNRACNT EQU   RLNRDFA
RLNRDFB  EQU   RLNRDF+1
RLNCRFLG EQU   ISTRLN+102
RLNLSCMD EQU   RLNCRFLG
ISTRPT   EQU   0
RPTLNCID EQU   ISTRPT+116
RPTCTNM  EQU   ISTRPT+120
RPTDITT  EQU   ISTRPT+128
RPTFLAG1 EQU   ISTRPT+140
ISTRCL   EQU   0
RCLADR   EQU   ISTRCL+72
RCLFLAG  EQU   RCLADR
ISTRTR   EQU   0
RTRADR   EQU   ISTRTR+124
RTRFLAG  EQU   RTRADR
RTRRDFA  EQU   ISTRTR+136
RTRRAALL EQU   RTRRDFA
RTRRDFB  EQU   ISTRTR+137
RTRRDFC  EQU   ISTRTR+138
RTRRDFD  EQU   ISTRTR+139
RTRRDFE  EQU   ISTRTR+140
RTRRDFF  EQU   ISTRTR+141
RTRCRFLG EQU   ISTRTR+143
RTRLSCMD EQU   RTRCRFLG
RTRBSCID EQU   ISTRTR+188
ISTRIN   EQU   0
RINDFD   EQU   ISTRIN+124
RINREMPO EQU   RINDFD
RINNODEF EQU   RINDFD
RINLDISC EQU   RINDFD
RINNODID EQU   ISTRIN+125
RINRLDAF EQU   ISTRIN+126
RINREMOT EQU   ISTRIN+128
RINVPAB  EQU   ISTRIN+132
RINRPHCN EQU   ISTRIN+136
RINNCSPL EQU   ISTRIN+140
RINCNCNT EQU   ISTRIN+144
ISTRDS   EQU   0
ISTDOT   EQU   0
ISTRCC   EQU   0
RCCFLAG  EQU   ISTRCC+73
RCCFLAGB EQU   ISTRCC+74
RCCSTAID EQU   ISTRCC+78
RCCID48  EQU   RCCSTAID+2
RCCCRFLG EQU   ISTRCC+108
ISTRLU   EQU   0
RLUFLAG  EQU   ISTRLU+125
RLUCRFLG EQU   ISTRLU+126
RLUPACE  EQU   ISTRLU+132
RLUNCPPC EQU   ISTRLU+134
RLUUSSTB EQU   ISTRLU+140
RLUMODET EQU   ISTRLU+152
ISTRPX   EQU   0
ISTRLX   EQU   0
RLXFLAGA EQU   ISTRLX+76
ISTRSW   EQU   0
ISTRDA   EQU   0
RDAADR   EQU   ISTRDA+72
RDAFLAG  EQU   RDAADR
RDAUCBAD EQU   RDAADR+1
ISTRLS   EQU   0
ISTDNT   EQU   0
ISTGNT   EQU   0
ISTPAT   EQU   0
PATFLAGA EQU   ISTPAT+7
C6SWK    EQU   0
ISTZSAVE EQU   0
ZSAZSVBC EQU   ISTZSAVE
ZSAZSVMS EQU   ZSAZSVBC
ISTPFCRR EQU   0
PFCCRR   EQU   ISTPFCRR
PFCCRRID EQU   PFCCRR
PFCCRRLN EQU   PFCCRR+2
PFCHDR   EQU   ISTPFCRR+4
PFCCRRO  EQU   PFCHDR
PFCFRRO  EQU   PFCHDR+4
ISTCFCRR EQU   0
CFCAUDIT EQU   ISTCFCRR
CFCNTRD  EQU   CFCAUDIT
CFCCRT   EQU   CFCAUDIT+1
ISTZCRR  EQU   0
ZCRCRR   EQU   ISTZCRR
ZCRFLGS1 EQU   ISTZCRR+12
ZCRFLGS2 EQU   ISTZCRR+13
ZCRSWFLD EQU   ISTZCRR+14
ZCRENDSH EQU   ZCRSWFLD
ZCRNDLCP EQU   ZCRSWFLD
ZCRRESET EQU   ZCRSWFLD
ZCRFLGS3 EQU   ISTZCRR+15
ZCRGENSW EQU   ISTZCRR+16
ZCRPFLGS EQU   ISTZCRR+17
ZCRIBPR  EQU   ISTZCRR+18
ZCRSCPSW EQU   ISTZCRR+19
ZCRPARMS EQU   ISTZCRR+24
ZCRFBPTR EQU   ZCRPARMS
ZCRDFRDA EQU   ZCRPARMS+10
ZCRPCOD1 EQU   ZCRPARMS+12
ZCRPLSBF EQU   ZCRPCOD1
ZCRPCOD2 EQU   ZCRPARMS+13
ZCRSVRTN EQU   ISTZCRR+56
ZCRWKARA EQU   ISTZCRR+156
ZCRCIDSV EQU   ISTZCRR+192
ZCRAUDIT EQU   ISTZCRR+440
ZCRENTER EQU   ZCRAUDIT+5
ZCRLCPB  EQU   ISTZCRR+480
ZCRRHRU  EQU   ZCRLCPB
ISTASCRR EQU   0
ASCFLAGS EQU   ISTASCRR+16
ASCFLG1  EQU   ASCFLAGS
ASCFLG2  EQU   ASCFLAGS+2
ASCFLG3  EQU   ASCFLAGS+4
ASCUSRGS EQU   ISTASCRR+28
ISTAPCRR EQU   0
APCATFLG EQU   ISTAPCRR+16
APCRFLG  EQU   ISTAPCRR+18
APCSAVE  EQU   ISTAPCRR+44
APCCOMF  EQU   ISTAPCRR+116
APCCOMF1 EQU   APCCOMF
APC31FLG EQU   ISTAPCRR+132
APC52FLG EQU   ISTAPCRR+133
APC53FLG EQU   ISTAPCRR+134
APC54FLG EQU   ISTAPCRR+135
APC57FLG EQU   ISTAPCRR+136
ISTCRA   EQU   0
CRABASIC EQU   ISTCRA
CRAHDR   EQU   CRABASIC
CRACRR   EQU   CRAHDR
CRALKACT EQU   CRABASIC+8
CRASVC   EQU   ISTCRA+848
CRABUFA  EQU   CRASVC+68
ISTCNSTA EQU   0
CNSTFLDA EQU   ISTCNSTA+16
CNSTFLDB EQU   ISTCNSTA+19
ISTPSCRR EQU   0
PSCAUDIT EQU   ISTPSCRR+22
PSCNTRD  EQU   PSCAUDIT
NNMC6S   EQU   PSCNTRD
PSCCRT   EQU   PSCAUDIT+2
CNMC6S   EQU   PSCCRT
PSCSAVE  EQU   ISTPSCRR+28
ISTDYPAB EQU   0
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCBPDA  EQU   ATCCOM+128
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCSMRS  EQU   ATCCOM+188
ATCESC02 EQU   ISTATCVT+292
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCMSGP  EQU   ISTATCVT+344
ATCHPGM  EQU   ISTATCVT+384
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCSTAT2 EQU   ISTATCVT+818
ATCVTBAM EQU   ISTATCVT+908
@NM00051 EQU   ATCVTBAM+3
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCAP31  EQU   ATCAOSM+24
ATCAP34  EQU   ATCAOSM+32
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCAP37  EQU   ATCAOSM+264
ATCCRA   EQU   ATCAOSM+280
ATCCRACN EQU   ATCCRA+4
ATCSRB   EQU   ATCAOSM+288
ATCSRBCN EQU   ATCSRB+4
ATCCRPL  EQU   ATCAOSM+296
ATCRPLCN EQU   ATCCRPL+4
ATCSQAFR EQU   ATCAOSM+304
ATCORTBC EQU   ATCSQAFR+4
ATCORSRB EQU   ATCORTBC
@NM00053 EQU   ATCAOSM+332
ATCVTFLG EQU   ATCAOSM+392
ATCZFLAG EQU   ATCAOSM+588
FMZL0016 EQU   0
FMZL0032 EQU   0
ISTAPC37 EQU   0
@NM00030 EQU   0
CMZID046 EQU   @NM00030
@NM00031 EQU   @NM00030+4
CMZRL046 EQU   @NM00031
CMZRA046 EQU   @NM00031+1
CMZEA046 EQU   @NM00030+8
CMZVP046 EQU   @NM00030+12
CMZSA046 EQU   0
CMTA046  EQU   0
FMZL0055 EQU   0
FMZL0071 EQU   0
ISTAPC34 EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
FSBCOMBN EQU   FSBNETRS
FSBRHFLD EQU   FSBCOMBN+1
FSBRH3   EQU   FSBRHFLD+2
FSBLDFLG EQU   FSBRH3
@NM00009 EQU   FSBRQTAG
LCPZTIE  EQU   LCPCID
LCPZSNAM EQU   LCPZTIE+8
RTRDNCBA EQU   ISTRTR+40
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
LCPZTRV4 EQU   LCPZSNAM+4
LCPZTRV1 EQU   LCPZSNAM
LCPZSNA  EQU   LCPZTIE+4
LCPZFMCA EQU   LCPZTIE
FSBRT0B  EQU   @NM00009+1
FSBRT0A  EQU   @NM00009+1
FSBRT09  EQU   @NM00009+1
FSBRT08  EQU   @NM00009+1
FSBRT07  EQU   @NM00009
FSBRT06  EQU   @NM00009
FSBRT05  EQU   @NM00009
FSBRT04  EQU   @NM00009
FSBRT03  EQU   @NM00009
FSBRT02  EQU   @NM00009
FSBRT01  EQU   @NM00009
FSBRT00  EQU   @NM00009
FSBLDCUF EQU   FSBLDFLG
FSBLDSIF EQU   FSBLDFLG
FSBLDSOF EQU   FSBLDFLG
FSBLDEBF EQU   FSBLDFLG
FSBLDBBF EQU   FSBLDFLG
FSBLDFME EQU   FSBLDFLG
FSBLDSCF EQU   FSBLDFLG
FSBLDRMF EQU   FSBLDFLG
FSBRH2   EQU   FSBRHFLD+1
FSBRH1   EQU   FSBRHFLD
FSBALIGN EQU   FSBCOMBN
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRSV88 EQU   ATCAOSM+596
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCAPBE  EQU   ATCAOSM+436
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00056 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
@NM00055 EQU   ATCAOSM+333
@NM00054 EQU   @NM00053
ATCSNUF  EQU   @NM00053
ATCOPKL  EQU   @NM00053
ATCABEN  EQU   @NM00053
ATCAIWT  EQU   ATCAOSM+328
ATCINFDD EQU   ATCAOSM+324
ATCORFMG EQU   ATCAOSM+320
ATCORFRL EQU   ATCAOSM+316
ATCOROBT EQU   ATCAOSM+312
ATCORQG  EQU   ATCORSRB
ATCORTBF EQU   ATCSQAFR
ATCRPLAC EQU   ATCRPLCN+2
ATCRPLRC EQU   ATCRPLCN
ATCCRPLQ EQU   ATCCRPL
ATCSRBAC EQU   ATCSRBCN+2
ATCSRBRC EQU   ATCSRBCN
ATCSRBQ  EQU   ATCSRB
ATCCRAAC EQU   ATCCRACN+2
ATCCRARC EQU   ATCCRACN
ATCCRAQ  EQU   ATCCRA
ATCRPT12 EQU   ATCAOSM+276
ATCDMAPP EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP32  EQU   ATCAOSM+28
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
@NM00052 EQU   @NM00051
ATCVTMAB EQU   @NM00051
@NM00050 EQU   ATCVTBAM
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00049 EQU   ISTATCVT+819
@NM00048 EQU   ATCSTAT2
ATCTRSMS EQU   ATCSTAT2
ATCTRLOK EQU   ATCSTAT2
ATCTRPSS EQU   ATCSTAT2
ATCTRESC EQU   ATCSTAT2
ATCTRAPI EQU   ATCSTAT2
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00047 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCAP35  EQU   ISTATCVT+448
ATCAP33  EQU   ISTATCVT+444
ATCRSV99 EQU   ISTATCVT+440
ATCONFIG EQU   ISTATCVT+432
ATCNODDS EQU   ISTATCVT+428
ATCNODEL EQU   ISTATCVT+420
ATCRSV69 EQU   ISTATCVT+416
ATCAPCR5 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMQU  EQU   ATCCOM+184
ATCSMRQ  EQU   ATCCOM+180
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCVTTRC EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00046 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00045 EQU   ATCSTAT1
ATCMDHLT EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
PSCRSV04 EQU   ISTPSCRR+96
PSCRSV03 EQU   ISTPSCRR+92
PSCSV15  EQU   PSCSAVE+60
PSCSV14  EQU   PSCSAVE+56
PSCSV13  EQU   PSCSAVE+52
PSCSV12  EQU   PSCSAVE+48
PSCSV11  EQU   PSCSAVE+44
PSCSV10  EQU   PSCSAVE+40
PSCSV9   EQU   PSCSAVE+36
PSCSV8   EQU   PSCSAVE+32
PSCSV7   EQU   PSCSAVE+28
PSCSV6   EQU   PSCSAVE+24
PSCSV5   EQU   PSCSAVE+20
PSCSV4   EQU   PSCSAVE+16
PSCSV3   EQU   PSCSAVE+12
PSCSV2   EQU   PSCSAVE+8
PSCSV1   EQU   PSCSAVE+4
PSCSV0   EQU   PSCSAVE
PSCRSV02 EQU   PSCAUDIT+4
PSCRSV01 EQU   PSCCRT+1
CNMC7S   EQU   PSCCRT+1
CNMC8P   EQU   PSCCRT+1
CNMC7P   EQU   PSCCRT+1
CNMC6P   EQU   PSCCRT+1
CNMC5P   EQU   PSCCRT+1
CNMC4P   EQU   PSCCRT+1
CNMC3P   EQU   PSCCRT
CNMC5S   EQU   PSCCRT
CNMC4S   EQU   PSCCRT
CNMC3S   EQU   PSCCRT
CNMC2S   EQU   PSCCRT
CNMC1S   EQU   PSCCRT
CNMC9P   EQU   PSCCRT
PSCRSVRD EQU   PSCNTRD+1
NNMC7S   EQU   PSCNTRD+1
NNMC8P   EQU   PSCNTRD+1
NNMC7P   EQU   PSCNTRD+1
NNMC6P   EQU   PSCNTRD+1
NNMC5P   EQU   PSCNTRD+1
NNMC4P   EQU   PSCNTRD+1
NNMC3P   EQU   PSCNTRD
NNMC5S   EQU   PSCNTRD
NNMC4S   EQU   PSCNTRD
NNMC3S   EQU   PSCNTRD
NNMC2S   EQU   PSCNTRD
NNMC1S   EQU   PSCNTRD
NNMC9P   EQU   PSCNTRD
PSCCNS   EQU   ISTPSCRR
CNSRSV05 EQU   CNSTFLDB+2
CNSLOG0B EQU   CNSTFLDB+2
CNSACCTB EQU   CNSTFLDB+2
CNSFREEB EQU   CNSTFLDB+2
CNSGETSB EQU   CNSTFLDB+2
CNSSEARB EQU   CNSTFLDB+2
CNSQUEUB EQU   CNSTFLDB+2
CNSACONB EQU   CNSTFLDB+2
CNSTCONB EQU   CNSTFLDB+1
CNSCLAQB EQU   CNSTFLDB+1
CNSCLINB EQU   CNSTFLDB+1
CNSGBINB EQU   CNSTFLDB+1
CNSLGINB EQU   CNSTFLDB+1
CNSACINB EQU   CNSTFLDB+1
CNSPSINB EQU   CNSTFLDB+1
CNSRQRLB EQU   CNSTFLDB+1
CNSTRRLB EQU   CNSTFLDB
CNSDORLB EQU   CNSTFLDB
CNSRLINB EQU   CNSTFLDB
CNSQREQB EQU   CNSTFLDB
CNSXREQB EQU   CNSTFLDB
CNSAQINB EQU   CNSTFLDB
CNSAUTHB EQU   CNSTFLDB
CNSMRINB EQU   CNSTFLDB
CNSRSV01 EQU   CNSTFLDA+2
CNSLOG0A EQU   CNSTFLDA+2
CNSACCTA EQU   CNSTFLDA+2
CNSFREEA EQU   CNSTFLDA+2
CNSGETSA EQU   CNSTFLDA+2
CNSSEARA EQU   CNSTFLDA+2
CNSQUEUA EQU   CNSTFLDA+2
CNSACONA EQU   CNSTFLDA+2
CNSTCONA EQU   CNSTFLDA+1
CNSCLAQA EQU   CNSTFLDA+1
CNSCLINA EQU   CNSTFLDA+1
CNSGBINA EQU   CNSTFLDA+1
CNSLGINA EQU   CNSTFLDA+1
CNSACINA EQU   CNSTFLDA+1
CNSPSINA EQU   CNSTFLDA+1
CNSRQRLA EQU   CNSTFLDA+1
CNSTRRLA EQU   CNSTFLDA
CNSDORLA EQU   CNSTFLDA
CNSRLINA EQU   CNSTFLDA
CNSQREQA EQU   CNSTFLDA
CNSXREQA EQU   CNSTFLDA
CNSAQINA EQU   CNSTFLDA
CNSAUTHA EQU   CNSTFLDA
CNSMRINA EQU   CNSTFLDA
CNSTPFX  EQU   ISTCNSTA
CRACHAIN EQU   ISTCRA+928
CRARSV02 EQU   ISTCRA+924
CRARSV01 EQU   ISTCRA+920
CRABFTBA EQU   CRABUFA
CRAMASK  EQU   CRASVC+64
CRAHSIZ  EQU   CRASVC+60
CRAASCRR EQU   CRASVC
CRAPROCR EQU   ISTCRA+312
CRAPSS   EQU   ISTCRA+160
CRARPH   EQU   ISTCRA+52
CRALAPTR EQU   CRABASIC+48
CRAL9PTR EQU   CRABASIC+44
CRAL8PTR EQU   CRABASIC+40
CRAL7PTR EQU   CRABASIC+36
CRAL6PTR EQU   CRABASIC+32
CRAL5PTR EQU   CRABASIC+28
CRAL4PTR EQU   CRABASIC+24
CRAL3PTR EQU   CRABASIC+20
CRAL2PTR EQU   CRABASIC+16
CRAL1PTR EQU   CRABASIC+12
CRALEV01 EQU   CRALKACT+3
CRALEV02 EQU   CRALKACT+3
CRALEV03 EQU   CRALKACT+3
CRALEV04 EQU   CRALKACT+3
CRALEV05 EQU   CRALKACT+3
CRALEV06 EQU   CRALKACT+3
CRALEV07 EQU   CRALKACT+3
CRALEV08 EQU   CRALKACT+3
CRALEV09 EQU   CRALKACT+2
CRALEV10 EQU   CRALKACT+2
CRALEV11 EQU   CRALKACT+2
CRALEV12 EQU   CRALKACT+2
CRALEV13 EQU   CRALKACT+2
CRALEV14 EQU   CRALKACT+2
CRALEV15 EQU   CRALKACT+2
CRALEV16 EQU   CRALKACT+2
CRALEV17 EQU   CRALKACT+1
CRALEV18 EQU   CRALKACT+1
CRALEV19 EQU   CRALKACT+1
CRALEV20 EQU   CRALKACT+1
CRALEV21 EQU   CRALKACT+1
CRALEV22 EQU   CRALKACT+1
CRALEV23 EQU   CRALKACT+1
CRALEV24 EQU   CRALKACT+1
CRALEV25 EQU   CRALKACT
CRALEV26 EQU   CRALKACT
CRALEV27 EQU   CRALKACT
CRALEV28 EQU   CRALKACT
CRALEV29 EQU   CRALKACT
CRALEV30 EQU   CRALKACT
CRALEV31 EQU   CRALKACT
CRALEV32 EQU   CRALKACT
CRAFRR   EQU   CRAHDR+4
@NM00044 EQU   ISTAPCRR+137
@NM00043 EQU   APC57FLG
APCNREL  EQU   APC57FLG
APCRECRA EQU   APC57FLG
@NM00042 EQU   APC54FLG
APCRLST  EQU   APC54FLG
APCPR153 EQU   APC53FLG
@NM00041 EQU   APC52FLG
APCWKF   EQU   APC52FLG
APCNWF   EQU   APC52FLG
APCRDQ   EQU   APC52FLG
APCQENQ  EQU   APC52FLG
APCSMSR  EQU   APC52FLG
APCCKRQ  EQU   APC52FLG
@NM00040 EQU   APC31FLG
APCSORT  EQU   APC31FLG
APCRESCH EQU   APC31FLG
APCTPXIT EQU   APC31FLG
APCSWTWD EQU   ISTAPCRR+128
APCSAV2  EQU   ISTAPCRR+124
APCSAV1  EQU   ISTAPCRR+120
APCRETCD EQU   APCCOMF+2
@NM00039 EQU   APCCOMF1+1
APCZLBER EQU   APCCOMF1
APCEXIT  EQU   APCCOMF1
APCRELR  EQU   APCCOMF1
APCIRB2  EQU   APCCOMF1
APCIRB1  EQU   APCCOMF1
APCSMCR  EQU   APCCOMF1
APCUETSK EQU   APCCOMF1
APCSSTSK EQU   APCCOMF1
APCESTAL EQU   APCSAVE
APCFRRPM EQU   ISTAPCRR+40
APCQWFO  EQU   ISTAPCRR+36
APCPABSV EQU   ISTAPCRR+32
APCRTRN  EQU   ISTAPCRR+28
APCTCBA  EQU   ISTAPCRR+24
APCPSTA  EQU   ISTAPCRR+20
@NM00038 EQU   APCRFLG+1
APC31R   EQU   APCRFLG
APC58R   EQU   APCRFLG
APC57R   EQU   APCRFLG
APC56R   EQU   APCRFLG
APC54R   EQU   APCRFLG
APC53R   EQU   APCRFLG
APC52R   EQU   APCRFLG
APC51R   EQU   APCRFLG
@NM00037 EQU   APCATFLG+1
APC31E   EQU   APCATFLG
APC58E   EQU   APCATFLG
APC57E   EQU   APCATFLG
APC56E   EQU   APCATFLG
APC54E   EQU   APCATFLG
APC53E   EQU   APCATFLG
APC52E   EQU   APCATFLG
APC51E   EQU   APCATFLG
APCHDRSV EQU   ISTAPCRR
ASCPSREG EQU   ISTASCRR+44
ASCUSR01 EQU   ASCUSRGS+12
ASCUSR00 EQU   ASCUSRGS+8
ASCUSR15 EQU   ASCUSRGS+4
ASCUSR14 EQU   ASCUSRGS
ASCETRYA EQU   ISTASCRR+24
ASCKEY   EQU   ISTASCRR+23
ASCAUDIT EQU   ASCFLG3
ASCFBDUD EQU   ASCFLG3
ASCLLKF  EQU   ASCFLG3
ASCKEYF  EQU   ASCFLG3
ASCFBDAL EQU   ASCFLG3
ASCFSRGT EQU   ASCFLG3
ASCICR   EQU   ASCFLG2
ASCFSRIC EQU   ASCFLG2
ASCFBDIC EQU   ASCFLG2
ASCFBAIC EQU   ASCFLG2
ASCPASTR EQU   ASCFLG1
ASCFSR   EQU   ASCFLG1
ASCFBD   EQU   ASCFLG1
ASCFBA   EQU   ASCFLG1
ASCPFCRR EQU   ISTASCRR
ZCRRU    EQU   ZCRRHRU+3
ZCRRH    EQU   ZCRRHRU
ZCRWORDA EQU   ISTZCRR+477
ZCRCMNRC EQU   ISTZCRR+476
ZCRRSV97 EQU   ZCRENTER+18
ZCREIC2B EQU   ZCRENTER+18
ZCREAC2B EQU   ZCRENTER+18
ZCRELCAB EQU   ZCRENTER+18
ZCREDCMF EQU   ZCRENTER+18
ZCREBCIF EQU   ZCRENTER+18
ZCREICSG EQU   ZCRENTER+18
ZCREDCK0 EQU   ZCRENTER+18
ZCRECFY0 EQU   ZCRENTER+17
ZCREKCCB EQU   ZCRENTER+17
ZCREDCNB EQU   ZCRENTER+17
ZCREICOE EQU   ZCRENTER+17
ZCREBCNB EQU   ZCRENTER+17
ZCREBC0L EQU   ZCRENTER+17
ZCREBCAL EQU   ZCRENTER+17
ZCREDCQR EQU   ZCRENTER+17
ZCREDCPR EQU   ZCRENTER+16
ZCREBCSB EQU   ZCRENTER+16
ZCREAC1R EQU   ZCRENTER+16
ZCRECCCI EQU   ZCRENTER+16
ZCRECCAI EQU   ZCRENTER+16
ZCRECCBI EQU   ZCRENTER+16
ZCREBCAR EQU   ZCRENTER+16
ZCREBCDR EQU   ZCRENTER+16
ZCREBCBR EQU   ZCRENTER+15
ZCREDCXR EQU   ZCRENTER+15
ZCREDCWB EQU   ZCRENTER+15
ZCREDCWR EQU   ZCRENTER+15
ZCREKCCN EQU   ZCRENTER+15
ZCREKCBN EQU   ZCRENTER+15
ZCREKCBB EQU   ZCRENTER+15
ZCREJC0B EQU   ZCRENTER+15
ZCREJCDB EQU   ZCRENTER+14
ZCREJCCB EQU   ZCRENTER+14
ZCREJCBB EQU   ZCRENTER+14
ZCREJCAB EQU   ZCRENTER+14
ZCREIC1B EQU   ZCRENTER+14
ZCREIC0B EQU   ZCRENTER+14
ZCREICX0 EQU   ZCRENTER+14
ZCREICWB EQU   ZCRENTER+14
ZCREICVB EQU   ZCRENTER+13
ZCREICUB EQU   ZCRENTER+13
ZCREICTB EQU   ZCRENTER+13
ZCREICSC EQU   ZCRENTER+13
ZCREICSB EQU   ZCRENTER+13
ZCREICRB EQU   ZCRENTER+13
ZCREICQB EQU   ZCRENTER+13
ZCREICQA EQU   ZCRENTER+13
ZCREICOB EQU   ZCRENTER+12
ZCREICOA EQU   ZCRENTER+12
ZCREICNB EQU   ZCRENTER+12
ZCREICNA EQU   ZCRENTER+12
ZCREICMB EQU   ZCRENTER+12
ZCREICLB EQU   ZCRENTER+12
ZCREICKG EQU   ZCRENTER+12
ZCREICKE EQU   ZCRENTER+12
ZCREICKB EQU   ZCRENTER+11
ZCREICJB EQU   ZCRENTER+11
ZCREICID EQU   ZCRENTER+11
ZCREICIB EQU   ZCRENTER+11
ZCREICHB EQU   ZCRENTER+11
ZCREICGB EQU   ZCRENTER+11
ZCREICEB EQU   ZCRENTER+11
ZCREICDB EQU   ZCRENTER+11
ZCREICCI EQU   ZCRENTER+10
ZCREICCB EQU   ZCRENTER+10
ZCREICBI EQU   ZCRENTER+10
ZCREICBB EQU   ZCRENTER+10
ZCREICAB EQU   ZCRENTER+10
ZCREICAA EQU   ZCRENTER+10
ZCREHCAN EQU   ZCRENTER+10
ZCREGC0B EQU   ZCRENTER+10
ZCREGC0A EQU   ZCRENTER+9
ZCREGCLA EQU   ZCRENTER+9
ZCREGCEB EQU   ZCRENTER+9
ZCREGCDB EQU   ZCRENTER+9
@NM00036 EQU   ZCRENTER+9
ZCREGCBB EQU   ZCRENTER+9
ZCREGCAB EQU   ZCRENTER+9
ZCREFCEB EQU   ZCRENTER+9
ZCREFCEA EQU   ZCRENTER+8
ZCREECTA EQU   ZCRENTER+8
ZCREECEA EQU   ZCRENTER+8
ZCREECDA EQU   ZCRENTER+8
ZCREECCB EQU   ZCRENTER+8
ZCREECCA EQU   ZCRENTER+8
ZCREECBB EQU   ZCRENTER+8
ZCREECBA EQU   ZCRENTER+8
ZCREDCMB EQU   ZCRENTER+7
ZCREDCL0 EQU   ZCRENTER+7
ZCREDCKB EQU   ZCRENTER+7
ZCREDCKA EQU   ZCRENTER+7
ZCREDCJ0 EQU   ZCRENTER+7
ZCREDCI0 EQU   ZCRENTER+7
ZCREDCH0 EQU   ZCRENTER+7
ZCREDCF0 EQU   ZCRENTER+7
ZCREDCE0 EQU   ZCRENTER+6
ZCREDCD0 EQU   ZCRENTER+6
ZCREDCC0 EQU   ZCRENTER+6
ZCREDCB0 EQU   ZCRENTER+6
ZCREDCA0 EQU   ZCRENTER+6
ZCRECC2B EQU   ZCRENTER+6
ZCRECC1B EQU   ZCRENTER+6
ZCRECC1A EQU   ZCRENTER+6
ZCRECC0B EQU   ZCRENTER+5
ZCRECC0A EQU   ZCRENTER+5
ZCREBC0B EQU   ZCRENTER+5
ZCREBC0A EQU   ZCRENTER+5
ZCREBCZ0 EQU   ZCRENTER+5
ZCREBCY0 EQU   ZCRENTER+5
ZCREBCX0 EQU   ZCRENTER+5
ZCREBCXA EQU   ZCRENTER+5
ZCREBCSC EQU   ZCRENTER+4
ZCREBCRB EQU   ZCRENTER+4
ZCREBCRA EQU   ZCRENTER+4
ZCREBCQB EQU   ZCRENTER+4
ZCREBCPB EQU   ZCRENTER+4
ZCREBCOB EQU   ZCRENTER+4
ZCREBCNE EQU   ZCRENTER+4
ZCREBCND EQU   ZCRENTER+4
ZCREBCMB EQU   ZCRENTER+3
ZCREBCLB EQU   ZCRENTER+3
ZCREBCLA EQU   ZCRENTER+3
ZCREBCKB EQU   ZCRENTER+3
ZCREBCKA EQU   ZCRENTER+3
ZCREBCJB EQU   ZCRENTER+3
ZCREBCJA EQU   ZCRENTER+3
ZCREBCID EQU   ZCRENTER+3
ZCREBCIB EQU   ZCRENTER+2
ZCREBCIA EQU   ZCRENTER+2
ZCREBCHB EQU   ZCRENTER+2
ZCREBCHA EQU   ZCRENTER+2
ZCREBCGB EQU   ZCRENTER+2
ZCREBCGA EQU   ZCRENTER+2
ZCREBCFB EQU   ZCRENTER+2
ZCREBCFA EQU   ZCRENTER+2
ZCREBCEB EQU   ZCRENTER+1
ZCREBCDI EQU   ZCRENTER+1
ZCREBCCB EQU   ZCRENTER+1
ZCREBCBI EQU   ZCRENTER+1
ZCREBCBB EQU   ZCRENTER+1
ZCREBCBA EQU   ZCRENTER+1
ZCREBCAM EQU   ZCRENTER+1
ZCREBCAI EQU   ZCRENTER+1
ZCREBCAG EQU   ZCRENTER
ZCREBCAE EQU   ZCRENTER
ZCREBCAB EQU   ZCRENTER
ZCREBCAA EQU   ZCRENTER
ZCREAC1B EQU   ZCRENTER
ZCREAC0B EQU   ZCRENTER
ZCREAC0A EQU   ZCRENTER
ZCREAC1A EQU   ZCRENTER
ZCRTNAME EQU   ZCRAUDIT+1
ZCRTID   EQU   ZCRAUDIT
ZCRREMIC EQU   ISTZCRR+436
ZCRSAVEZ EQU   ISTZCRR+196
ZCRDAFSV EQU   ZCRCIDSV+2
ZCRSAFSV EQU   ZCRCIDSV
ZCRR13SV EQU   ISTZCRR+188
ZCRR2SV  EQU   ISTZCRR+184
ZCROPCDE EQU   ISTZCRR+183
ZCRPRMTC EQU   ISTZCRR+182
ZCRRCDSV EQU   ISTZCRR+181
ZCRAWQSW EQU   ISTZCRR+180
ZCRTOPQ  EQU   ISTZCRR+180
ZCRLSTFB EQU   ISTZCRR+180
ZCRXSCHD EQU   ISTZCRR+180
ZCRNXTEL EQU   ISTZCRR+180
ZCRSCANQ EQU   ISTZCRR+180
ZCRMOREL EQU   ISTZCRR+180
ZCRFBPRC EQU   ISTZCRR+180
ZCRFSBSV EQU   ISTZCRR+176
ZCRSVWK5 EQU   ZCRWKARA+16
ZCRSVWK4 EQU   ZCRWKARA+12
ZCRSVWK3 EQU   ZCRWKARA+8
ZCRSVWK2 EQU   ZCRWKARA+4
ZCRSVWK1 EQU   ZCRWKARA
ZCRSVF25 EQU   ZCRSVRTN+96
ZCRSVF24 EQU   ZCRSVRTN+92
ZCRSVF23 EQU   ZCRSVRTN+88
ZCRSVF22 EQU   ZCRSVRTN+84
ZCRSVF21 EQU   ZCRSVRTN+80
ZCRSVF20 EQU   ZCRSVRTN+76
ZCRSVF19 EQU   ZCRSVRTN+72
ZCRSVF18 EQU   ZCRSVRTN+68
ZCRSVF17 EQU   ZCRSVRTN+64
ZCRSVF16 EQU   ZCRSVRTN+60
ZCRSVF15 EQU   ZCRSVRTN+56
ZCRSVF14 EQU   ZCRSVRTN+52
ZCRSVF13 EQU   ZCRSVRTN+48
ZCRSVF12 EQU   ZCRSVRTN+44
ZCRSVF11 EQU   ZCRSVRTN+40
ZCRSVF10 EQU   ZCRSVRTN+36
ZCRSVF9  EQU   ZCRSVRTN+32
ZCRSVF8  EQU   ZCRSVRTN+28
ZCRSVF7  EQU   ZCRSVRTN+24
ZCRSVF6  EQU   ZCRSVRTN+20
ZCRSVF5  EQU   ZCRSVRTN+16
ZCRSVF4  EQU   ZCRSVRTN+12
ZCRSVF3  EQU   ZCRSVRTN+8
ZCRSVF2  EQU   ZCRSVRTN+4
ZCRSVF1  EQU   ZCRSVRTN
ZCRPVZB  EQU   ISTZCRR+52
ZCRZLB   EQU   ISTZCRR+48
ZCRBFPTR EQU   ISTZCRR+44
ZCRCCWA  EQU   ISTZCRR+40
ZCRPSW   EQU   ZCRPARMS+15
ZCRPCHAR EQU   ZCRPARMS+14
ZCRPRES2 EQU   ZCRPCOD2
ZCRPMFGF EQU   ZCRPCOD2
ZCRPFHDR EQU   ZCRPCOD2
ZCRPPG2  EQU   ZCRPCOD2
ZCRPRES  EQU   ZCRPCOD1
ZCRPCFTX EQU   ZCRPCOD1
ZCRPBUF  EQU   ZCRPCOD1
ZCRPLSCB EQU   ZCRPCOD1
ZCRPLSBQ EQU   ZCRPLSBF
ZCRPFSB  EQU   ZCRPCOD1
ZCRPLNG  EQU   ZCRPCOD1
ZCRPPG   EQU   ZCRPCOD1
ZCRDTODA EQU   ZCRDFRDA
ZCRMLNG  EQU   ZCRPARMS+8
ZCRTBPTR EQU   ZCRPARMS+4
ZCRCBPTR EQU   ZCRFBPTR
ZCRCRLCP EQU   ISTZCRR+20
ZCRMDATA EQU   ZCRSCPSW
ZCRSKIPT EQU   ZCRSCPSW
ZCRFSBWE EQU   ZCRSCPSW
ZCRPRCMP EQU   ZCRSCPSW
ZCRLREQ  EQU   ZCRSCPSW
ZCRRJLCP EQU   ZCRSCPSW
ZCRTPINV EQU   ZCRSCPSW
ZCRTPEX  EQU   ZCRSCPSW
@NM00035 EQU   ZCRIBPR
ZCR3270R EQU   ZCRIBPR
ZCR3270  EQU   ZCRIBPR
ZCRLCPFD EQU   ZCRIBPR
ZCRLCPFR EQU   ZCRIBPR
ZCRRELK  EQU   ZCRIBPR
ZCRERR   EQU   ZCRIBPR
ZCRNOBUF EQU   ZCRIBPR
@NM00034 EQU   ZCRPFLGS
ZCRQAHED EQU   ZCRPFLGS
ZCRF1RES EQU   ZCRGENSW
ZCRBRIS  EQU   ZCRGENSW
ZCRCLRBD EQU   ZCRGENSW
ZCREXRES EQU   ZCRGENSW
ZCRLCSYN EQU   ZCRGENSW
ZCRRT06  EQU   ZCRGENSW
ZCRTSW2  EQU   ZCRGENSW
ZCRTSW1  EQU   ZCRGENSW
ZCRINLCP EQU   ZCRFLGS3
ZCRWRPTR EQU   ZCRFLGS3
ZCRNOFRE EQU   ZCRFLGS3
ZCREDRIV EQU   ZCRFLGS3
ZCRDISC  EQU   ZCRFLGS3
ZCRTPDIS EQU   ZCRFLGS3
ZCRTPCON EQU   ZCRFLGS3
ZCRTIC   EQU   ZCRFLGS3
ZCRCNLXL EQU   ZCRRESET
ZCRENDAN EQU   ZCRSWFLD
ZCRENDXL EQU   ZCRSWFLD
ZCRENDX  EQU   ZCRSWFLD
ZCROB1   EQU   ZCRNDLCP
ZCRENDPR EQU   ZCRSWFLD
ZCREXTYP EQU   ZCRSWFLD
ZCRSLCP  EQU   ZCRENDSH
ZCRIF0E3 EQU   ZCRFLGS2
ZCRIF0E2 EQU   ZCRFLGS2
ZCRIF0E1 EQU   ZCRFLGS2
ZCROB    EQU   ZCRFLGS2
ZCRFMSED EQU   ZCRFLGS2
ZCRSHEDI EQU   ZCRFLGS2
ZCRLOCAL EQU   ZCRFLGS2
ZCRFEXIT EQU   ZCRFLGS1
ZCRUNSOL EQU   ZCRFLGS1
ZCRENDLP EQU   ZCRFLGS1
ZCRNRMEX EQU   ZCRFLGS1
ZCRWAIT  EQU   ZCRFLGS1
ZCRDEQSW EQU   ZCRFLGS1
ZCRQUESW EQU   ZCRFLGS1
ZCREXSW  EQU   ZCRFLGS1
ZCRFRRA  EQU   ISTZCRR+8
ZCRCHAIN EQU   ISTZCRR+4
ZCRFLAG  EQU   ZCRCRR+3
ZCRLEN   EQU   ZCRCRR+1
ZCRID    EQU   ZCRCRR
CCFRSVD1 EQU   CFCCRT
CCFCR2   EQU   CFCCRT
CCFCRP   EQU   CFCCRT
CCFCR1   EQU   CFCCRT
CCFCS2   EQU   CFCCRT
CCFCS1   EQU   CFCCRT
NCFRSVD  EQU   CFCNTRD
NCFCR2   EQU   CFCNTRD
NCFCRP   EQU   CFCNTRD
NCFCR1   EQU   CFCNTRD
NCFCS2   EQU   CFCNTRD
NCFCS1   EQU   CFCNTRD
PFCRSV01 EQU   ISTPFCRR+13
PFCFTA   EQU   ISTPFCRR+12
CRRFRR   EQU   PFCFRRO
CRRCHAIN EQU   PFCCRRO
CRRLEN   EQU   PFCCRRLN
PFCRSV10 EQU   PFCCRR+1
CRRID    EQU   PFCCRRID
ZSAZTRAC EQU   ISTZSAVE+36
ZSAZSVVR EQU   ISTZSAVE+12
ZSAZSVRR EQU   ISTZSAVE+8
ZSAZSVFC EQU   ISTZSAVE+4
ZSAZACTV EQU   ZSAZSVMS
PATRSV01 EQU   PATFLAGA
PATUSEFG EQU   PATFLAGA
PATRDCNT EQU   ISTPAT+6
PATGRPID EQU   ISTPAT+5
PATPTHID EQU   ISTPAT+4
PATDINDX EQU   ISTPAT+2
PATGINDX EQU   ISTPAT
GNTGRPNM EQU   ISTGNT
DNTTELNO EQU   ISTDNT+1
DNTCTDIG EQU   ISTDNT
RLSRSV02 EQU   ISTRLS+140
RLSRSV01 EQU   ISTRLS+138
RLSCTELU EQU   ISTRLS+136
RLSPRE   EQU   ISTRLS
RDARSVPT EQU   ISTRDA+84
RDAPUBI  EQU   ISTRDA+83
RDADFCUA EQU   ISTRDA+80
RDACTPCC EQU   ISTRDA+79
RDADACUA EQU   ISTRDA+76
RDALUBA  EQU   RDAUCBAD+1
RDACHQI  EQU   RDAUCBAD
RDARSV01 EQU   RDAFLAG
RDARBISA EQU   RDAFLAG
RDAPRE   EQU   ISTRDA
RSWRSV01 EQU   ISTRSW+152
RSWRSV02 EQU   ISTRSW+150
RSWCTELU EQU   ISTRSW+148
RSWGRUPZ EQU   ISTRSW+146
RSWDIALZ EQU   ISTRSW+144
RSWGRUPT EQU   ISTRSW+140
RSWDIALT EQU   ISTRSW+136
RSWPRE   EQU   ISTRSW
RLXRSV03 EQU   ISTRLX+80
RLXRSV02 EQU   ISTRLX+77
RLXRSV01 EQU   RLXFLAGA
RLXINUSE EQU   RLXFLAGA
RLXNLUX  EQU   ISTRLX+72
RLXPRE   EQU   ISTRLX
RPXRSV01 EQU   ISTRPX+80
RPXRSV02 EQU   ISTRPX+77
RPXMAXLU EQU   ISTRPX+76
RPXFLUX  EQU   ISTRPX+72
RPXPRE   EQU   ISTRPX
RLURSV02 EQU   ISTRLU+172
RLULGMOD EQU   ISTRLU+164
RLUMODEP EQU   RLUMODET+8
RLUMODEN EQU   RLUMODET
RLUUSSPT EQU   RLUUSSTB+8
RLUUSSNM EQU   RLUUSSTB
RLURSV01 EQU   ISTRLU+137
RLULOCAD EQU   ISTRLU+136
RLUNCPPM EQU   RLUNCPPC+1
RLUNCPPN EQU   RLUNCPPC
RLUPACEM EQU   RLUPACE+1
RLUPACEN EQU   RLUPACE
RLUINTA  EQU   ISTRLU+128
RLUSSCFM EQU   ISTRLU+127
RLUCRRSV EQU   RLUCRFLG
RLUACTLU EQU   RLUCRFLG
RLURSV00 EQU   RLUFLAG
RLUNDSES EQU   RLUFLAG
RLUGSTAT EQU   RLUFLAG
RLUBATCH EQU   RLUFLAG
RLURBISA EQU   RLUFLAG
RLUTYPE  EQU   ISTRLU+124
RLUCRPR  EQU   ISTRLU
RCCRVPT2 EQU   ISTRCC+144
RCCXTOSW EQU   ISTRCC+140
RCCSWTOX EQU   ISTRCC+136
RCCRSPT2 EQU   ISTRCC+133
RCCADDR  EQU   ISTRCC+132
RCCPASSL EQU   ISTRCC+131
RCCMXOUT EQU   ISTRCC+130
RCCMXDAT EQU   ISTRCC+128
RCCINDEX EQU   ISTRCC+126
RCCPATHZ EQU   ISTRCC+124
RCCPATHT EQU   ISTRCC+120
RCCDPQ   EQU   ISTRCC+116
RCCTPAB  EQU   ISTRCC+112
RCCRSV02 EQU   ISTRCC+109
RCCCRRSV EQU   RCCCRFLG
RCCCTCFL EQU   RCCCRFLG
RCCACTPU EQU   RCCCRFLG
RCCNCSPL EQU   ISTRCC+104
RCCRPHCN EQU   ISTRCC+100
RCCEPAB  EQU   ISTRCC+96
RCCDPAB  EQU   ISTRCC+92
RCCVPAB  EQU   ISTRCC+88
@NM00027 EQU   ISTRCC+87
RCCSESCT EQU   ISTRCC+86
RCCIDNUM EQU   RCCID48+3
RCCIDBLK EQU   RCCID48+2
RCCIDPA2 EQU   RCCID48+1
RCCIDPUT EQU   RCCID48
RCCIDPA1 EQU   RCCSTAID
RCCCTELU EQU   ISTRCC+76
RCCCNCNT EQU   ISTRCC+75
RCCRTGOH EQU   RCCFLAGB
RCCBRKCN EQU   RCCFLAGB
RCCRESET EQU   RCCFLAGB
RCCFINAL EQU   RCCFLAGB
RCCBNNSP EQU   RCCFLAGB
RCCIRETR EQU   RCCFLAGB
RCCDIALP EQU   RCCFLAGB
RCCDSTCT EQU   RCCFLAGB
RCCCTPGD EQU   RCCFLAG
RCCPRGDN EQU   RCCFLAG
RCCOUERP EQU   RCCFLAG
RCCOHIMM EQU   RCCFLAG
RCCLDISC EQU   RCCFLAG
RCCERPIP EQU   RCCFLAG
RCCCUDIE EQU   RCCFLAG
RCCRBISA EQU   RCCFLAG
RCCTYPE  EQU   ISTRCC+72
RCCPRE   EQU   ISTRCC
DOTADTRM EQU   ISTDOT
RDSADDOT EQU   ISTRDS+76
RDSCTATR EQU   ISTRDS+74
RDSCTTRM EQU   ISTRDS+72
RDSPRE   EQU   ISTRDS
RINRSV05 EQU   ISTRIN+156
RINRSV04 EQU   ISTRIN+152
RINLOCRN EQU   ISTRIN+148
RINRSV02 EQU   ISTRIN+145
RTRCNCNT EQU   RINCNCNT
RTRNCSPL EQU   RINNCSPL
RTRRPHCN EQU   RINRPHCN
RTRVPAB  EQU   RINVPAB
RTRREMOT EQU   RINREMOT
RTRRLDAF EQU   RINRLDAF
RTRNODID EQU   RINNODID
RINRSV01 EQU   RINDFD
RTRLDISC EQU   RINLDISC
RTRNODEF EQU   RINNODEF
RTRREMPO EQU   RINREMPO
RINCRPRE EQU   ISTRIN
RTRRSV04 EQU   ISTRTR+210
RTRLCTI  EQU   ISTRTR+209
RTRIDCAS EQU   RTRBSCID+1
RTRIDLEN EQU   RTRBSCID
RTRRSVDD EQU   ISTRTR+181
RTRRDFG  EQU   ISTRTR+180
RTRDIAA  EQU   ISTRTR+176
RTRPOLA  EQU   ISTRTR+172
RTRCADDR EQU   ISTRTR+164
RTRCTADR EQU   ISTRTR+162
RTRCTPOL EQU   ISTRTR+160
RTRCTDIA EQU   ISTRTR+158
RTRRSV03 EQU   ISTRTR+156
RTRRVPT1 EQU   ISTRTR+152
RTRBHSN1 EQU   ISTRTR+144
RTRCRSV2 EQU   RTRCRFLG
RTRDTRLM EQU   RTRLSCMD
RTRCRSV1 EQU   RTRCRFLG
RTRTRMAX EQU   ISTRTR+142
RTRRSV24 EQU   RTRRDFF
RTRRFDEK EQU   RTRRDFF
RTRRFANK EQU   RTRRDFF
RTRRFPFK EQU   RTRRDFF
RTRRFPEN EQU   RTRRDFF
RTRRFXCT EQU   RTRRDFF
RTRRESCT EQU   RTRRDFE
RTRRESUP EQU   RTRRDFE
RTRREATT EQU   RTRRDFE
RTRRECHK EQU   RTRRDFE
RTRREACR EQU   RTRRDFE
RTRRSV0A EQU   RTRRDFE
RTRREBRK EQU   RTRRDFE
RTRRSV11 EQU   RTRRDFD
RTRRSV10 EQU   RTRRDFD
RTRRDBHI EQU   RTRRDFD
RTRRDBHD EQU   RTRRDFD
RTRRDBHN EQU   RTRRDFD
RTRRSV23 EQU   RTRRDFC
RTRRCXMS EQU   RTRRDFC
RTRRCMSG EQU   RTRRDFC
RTRRCBLK EQU   RTRRDFC
RTRRCPT3 EQU   RTRRDFC
RTRRCIT2 EQU   RTRRDFC
RTRRCIT1 EQU   RTRRDFC
RTRRSV32 EQU   RTRRDFB
RTRRBEND EQU   RTRRDFB
RTRRBECT EQU   RTRRDFB
RTRRSV02 EQU   RTRRDFA
RTRRACTR EQU   RTRRDFA
RTRRSV60 EQU   RTRRDFA
RTRRACDT EQU   RTRRDFA
RTRRAPT3 EQU   RTRRAALL
RTRRAPT2 EQU   RTRRAALL
RTRRAPT1 EQU   RTRRAALL
RTRRAATN EQU   RTRRDFA
RTRRSV45 EQU   ISTRTR+132
RTRRSV01 EQU   ISTRTR+130
RTRCTECM EQU   ISTRTR+128
RTRADRPT EQU   RTRADR+1
RTRRSV22 EQU   RTRFLAG
RTRVTERM EQU   RTRFLAG
RTRRSV51 EQU   RTRFLAG
RTRRBISA EQU   RTRFLAG
RTRRSV21 EQU   RTRFLAG
RTRCRPR  EQU   ISTRTR
RCLRVPT2 EQU   ISTRCL+92
RCLRVPT1 EQU   ISTRCL+88
RCLGPOLA EQU   ISTRCL+84
RCLCTNGP EQU   ISTRCL+82
RCLRSV01 EQU   ISTRCL+80
RCLCTECM EQU   ISTRCL+78
RCLCTETR EQU   ISTRCL+76
RCLGPADR EQU   RCLADR+1
RCLRSV33 EQU   RCLFLAG
RCLBATCH EQU   RCLFLAG
RCLRBISA EQU   RCLFLAG
RCLRSV22 EQU   RCLFLAG
RCLPRE   EQU   ISTRCL
RPTRSV03 EQU   ISTRPT+156
RPTRSV02 EQU   ISTRPT+152
RPTNSNSV EQU   ISTRPT+148
RPTPTHCT EQU   ISTRPT+146
RPTPEPCT EQU   ISTRPT+144
RPTDAFSV EQU   ISTRPT+142
RPTRSV01 EQU   ISTRPT+141
RPTISTAT EQU   RPTFLAG1
RPTDYNAM EQU   RPTFLAG1
RPTVYIMM EQU   RPTFLAG1
RPTVIODN EQU   RPTFLAG1
RPTONLIN EQU   RPTFLAG1
RPTHLVPD EQU   RPTFLAG1
RPTVRYPD EQU   RPTFLAG1
RPTASLEP EQU   RPTFLAG1
RPTUTERM EQU   ISTRPT+136
RPTATERM EQU   ISTRPT+132
RPTDIVT  EQU   RPTDITT
RPTLNDAF EQU   RPTLNCID+2
RPTLNSAF EQU   RPTLNCID
RPTLN    EQU   ISTRPT
RLNRVPT2 EQU   ISTRLN+112
RLNNCSPL EQU   ISTRLN+108
RLNX2SW  EQU   ISTRLN+104
@NM00026 EQU   ISTRLN+103
RLNCRRSV EQU   RLNCRFLG
RLNSWEP  EQU   RLNCRFLG
RLNSVSKP EQU   RLNLSCMD
RLNSESLM EQU   RLNLSCMD
RLNNPRLM EQU   RLNLSCMD
RLNSWNCP EQU   RLNCRFLG
RLNACTLN EQU   RLNCRFLG
RLNPAUSE EQU   ISTRLN+101
RLNPOLMT EQU   ISTRLN+100
RLNACTSN EQU   ISTRLN+98
RLNRESV1 EQU   ISTRLN+97
RLNACTRM EQU   ISTRLN+96
RLNCTSES EQU   ISTRLN+95
RLNRDSLM EQU   ISTRLN+94
RLNAUTOA EQU   ISTRLN+92
RLNRDFD  EQU   RLNRDF+3
RLNRDFC  EQU   RLNRDF+2
RLNMULTP EQU   RLNRDFB
RLNRATRN EQU   RLNRDFB
RLNRAPOL EQU   RLNRDFB
RLNTTV   EQU   RLNRDFB
RLNRSV0B EQU   RLNRDFB
RLNAUTOD EQU   RLNRDFB
RLNANSWR EQU   RLNRDFB
RLNRBUSE EQU   RLNRDFB
RLNRAPEP EQU   RLNRDFA
RLNRANCP EQU   RLNRDFA
RLNRAEP  EQU   RLNRDFA
RLNIDV   EQU   RLNRDFA
RLNPORT  EQU   RLNRDFA
RLNGANSW EQU   RLNRDFA
RLNRACAN EQU   RLNRACNT
RLNRACAT EQU   RLNRACNT
RLNRSV04 EQU   RLNSTAT2
RLNINUSE EQU   RLNSTAT2
RLNOHIN  EQU   RLNSTAT2
RLNRSV03 EQU   RLNSTAT1
RLNVD    EQU   RLNSTAT1
RLNINOPP EQU   RLNSTAT1
RLNINOPL EQU   RLNSTAT1
RLNLRST  EQU   RLNSTAT1
RLNTRAP  EQU   RLNSTAT1
RLNACTCT EQU   ISTRLN+84
RLNCTECM EQU   ISTRLN+82
RLNCTEIN EQU   ISTRLN+80
RLNCTETR EQU   ISTRLN+78
RLNCTECL EQU   ISTRLN+76
RLNCUA   EQU   RLNUCBAD
RLNRSV01 EQU   RLNFLAG
RLNRBISA EQU   RLNFLAG
RLNEAM   EQU   RLNFLAG
RLNPRE   EQU   ISTRLN
RGPRVPT2 EQU   ISTRGP+88
RGPRVPT1 EQU   ISTRGP+84
RGPCTECM EQU   ISTRGP+82
RGPCTEIN EQU   ISTRGP+80
RGPCTETR EQU   ISTRGP+78
RGPCTECL EQU   ISTRGP+76
RGPCTELN EQU   ISTRGP+74
RGPRSV03 EQU   ISTRGP+73
RGPRSV02 EQU   RGPFLG
RGPASDLC EQU   RGPFLG
RGPABSC  EQU   RGPFLG
RGPASS   EQU   RGPFLG
RGPADIL  EQU   RGPFLG
RGPPRE   EQU   ISTRGP
RRNRINNM EQU   ISTRRN+248
@NM00025 EQU   ISTRRN+247
RRNRDCUA EQU   ISTRRN+244
RRNLASTE EQU   ISTRRN+240
RRNNCSPL EQU   ISTRRN+236
RRNRPLPT EQU   ISTRRN+232
RRNMSIZE EQU   ISTRRN+228
RRNNCPNM EQU   ISTRRN+221
RRNCTPCC EQU   ISTRRN+220
RRNHBUFS EQU   ISTRRN+218
RRNHLENT EQU   RRNHPRE+1
RRNHLENH EQU   RRNHPRE
RRNNMNCP EQU   ISTRRN+208
RRNDELAY EQU   ISTRRN+206
RRNRSV04 EQU   ISTRRN+200
RRNRSV88 EQU   RRNNMDPD+7
RRNPUBI  EQU   RRNNMDPD+6
RRNDPLUB EQU   RRNNMDPD
RRNEPADR EQU   ISTRRN+190
RRNCPLUB EQU   ISTRRN+184
RRNFLUX  EQU   ISTRRN+180
RRNRSV05 EQU   RRNCMFD
RRNREMPO EQU   RRNCMFD
RRNCDREC EQU   RRNCMFD
RRNCDDSI EQU   RRNCMFD
RRNCDBCK EQU   RRNCMFD
RRNCDDTL EQU   RRNCMFD
RRNCDSTD EQU   RRNCMFD
RRNCDCSP EQU   RRNCMFD
RRNCCCSL EQU   RRNCMFC
RRNCCSIM EQU   RRNCMFC
RRNCCRCM EQU   RRNCMFC
RRNCCRIM EQU   RRNCMFC
RRNCCCRC EQU   RRNCMFC
RRNCCRST EQU   RRNCMFC
RRNCCRDQ EQU   RRNCMFC
RRNCCRCN EQU   RRNCMFC
RRNCBALT EQU   RRNCMFB
RRNCBMOD EQU   RRNCMFB
RRNCBNPL EQU   RRNCMFB
RRNCBRLS EQU   RRNCMFB
RRNCBRDS EQU   RRNCMFB
RRNCBDLR EQU   RRNCMFB
RRNCBDLH EQU   RRNCMFB
RRNCBDLO EQU   RRNCMFB
RRNCADGO EQU   RRNCMFA
RRNCADTD EQU   RRNCMFA
RRNCACDT EQU   RRNCMFA
RRNCAMBH EQU   RRNCMFA
RRNCAATI EQU   RRNCMFA
RRNCAATG EQU   RRNCMFA
RRNCAATD EQU   RRNCMFA
RRNCAALL EQU   RRNCMFA
RRNRSV55 EQU   RRNRDF+3
RRNPTASL EQU   RRNRDFB+1
RRNRSV01 EQU   RRNRDFB+1
RRNVYDON EQU   RRNRDFB+1
RRNRBBUP EQU   RRNRDFB+1
RRNRSV03 EQU   RRNRDFB
RRNRBCT2 EQU   RRNRDFB
RRNRBCT1 EQU   RRNRDFB
RRNRBSEC EQU   RRNRDFB
RRNRBCCT EQU   RRNRDFB
RRNRBCCL EQU   RRNRDFB
RRNRSV02 EQU   RRNRDFB
RRNRBMDL EQU   RRNRDFB
RRNRAPEP EQU   RRNRDFA
RRNRANCP EQU   RRNRDFA
RRNRBREM EQU   RRNRDFA
RRNRAOLT EQU   RRNRDFA
RRNRASYN EQU   RRNRDFA
RRNRADMP EQU   RRNRDFA
RRNRAIPL EQU   RRNRDFA
RRNRASHT EQU   RRNRDFA
RRNCTENT EQU   ISTRRN+170
RRNCTECM EQU   ISTRRN+168
RRNCTEIN EQU   ISTRRN+166
RRNCTETR EQU   ISTRRN+164
RRNCTECL EQU   ISTRRN+162
RRNCTELI EQU   ISTRRN+160
RRNCTEGP EQU   ISTRRN+158
RRNCTBHS EQU   ISTRRN+156
RRNBHSET EQU   ISTRRN+152
RRNTRENT EQU   ISTRRN+148
RRNRLDIP EQU   ISTRRN+147
RRNRNCUA EQU   ISTRRN+144
RRNGRPA  EQU   ISTRRN+140
RRNLUBA  EQU   RRNUCBAD+1
RRNCHQI  EQU   RRNUCBAD
RRNRSV11 EQU   RRNFLAG
RRNDSTCT EQU   RRNFLAG
RRNERPIP EQU   RRNFLAG
RRNLCDIP EQU   RRNFLAG
RRNLCDIE EQU   RRNFLAG
RRNLCSIP EQU   RRNFLAG
RRNRBISA EQU   RRNFLAG
RRNRSV89 EQU   RRNFLAG
RRNPRE   EQU   ISTRRN
RLCRVPT2 EQU   ISTRLC+80
RLCRVPT1 EQU   ISTRLC+79
RLCLCCUA EQU   ISTRLC+76
RLCUCBAD EQU   RLCADR+1
RLCRSVDE EQU   RLCFLAG
RLCACNT  EQU   RLCFLAG
RLCRSV14 EQU   RLCFLAG
RLCRBISA EQU   RLCFLAG
RLCRSV22 EQU   RLCFLAG
RLCPRE   EQU   ISTRLC
RAPRVPT2 EQU   ISTRAP+116
RAPRVPT1 EQU   ISTRAP+112
RAPBFACT EQU   ISTRAP+111
RAPRSV17 EQU   RAPFLGC
RAPRSV16 EQU   RAPFLGC
RAPRSV15 EQU   RAPFLGC
RAPRSV14 EQU   RAPFLGC
RAPRSV13 EQU   RAPFLGC
RAPRSV12 EQU   RAPFLGC
RAPRSV11 EQU   RAPFLGC
RAPRSV10 EQU   RAPFLGC
RAPANVPC EQU   RAPFLGB
RAPASPO  EQU   RAPFLGB
RAPAPPO  EQU   RAPFLGB
RAPAACQ  EQU   RAPFLGB
RAPAPRMT EQU   RAPFLGB
RAPAPASS EQU   RAPFLGB
RAPABLCK EQU   RAPFLGB
RAPALLF  EQU   RAPFLGB
RAPRSV06 EQU   RAPFLG
RAPRSV05 EQU   RAPFLG
RAPRSV04 EQU   RAPFLG
RAPRSV03 EQU   RAPFLG
RAPATLGN EQU   RAPFLG
RAPASLGI EQU   RAPFLG
RAPAQUI  EQU   RAPFLG
RAPABLGN EQU   RAPFLG
RAPACEQD EQU   ISTRAP+106
RAPTRPRE EQU   ISTRAP+104
RAPACEAP EQU   ISTRAP+100
RAPICEAQ EQU   ISTRAP+96
RAPICEAC EQU   ISTRAP+92
RAPICELG EQU   ISTRAP+88
RAPAPPWD EQU   ISTRAP+80
RAPACDEB EQU   ISTRAP+76
RAPACBA  EQU   ISTRAP+72
RAPPRE   EQU   ISTRAP
RDTVSRPL EQU   ISTRDT+132
RDTCRSPW EQU   ISTRDT+124
RDTCRSDS EQU   ISTRDT+116
@NM00024 EQU   ISTRDT+113
RRNSTCNT EQU   RDTSTCNT
RRNVYRPH EQU   RDTVYRPH
RDTTPAB  EQU   ISTRDT+104
RDTDPAB  EQU   ISTRDT+100
RDTEPAB  EQU   ISTRDT+96
RDTVPAB  EQU   ISTRDT+92
RDTRSV01 EQU   RDTFLAGB
RDTBHSET EQU   RDTFLAGB
RDTCTCFL EQU   RDTFLAGB
RDTCTPGD EQU   RDTFLAGB
RDTPRGDN EQU   RDTFLAGB
RDTOUERP EQU   RDTFLAGB
RDTLGCT  EQU   ISTRDT+90
RDTNODID EQU   ISTRDT+89
RDTMAXID EQU   ISTRDT+88
RDTCTSNT EQU   ISTRDT+86
RDTFLAGS EQU   ISTRDT+84
RDTBACK  EQU   ISTRDT+80
RDTFORW  EQU   ISTRDT+76
RDTLEN   EQU   RDTPLEN+1
RDTPRILS EQU   RDTPRIOR
RDTPRISW EQU   RDTPRIOR
RDTPRIRN EQU   RDTPRIOR
RDTPRILC EQU   RDTPRIOR
RDTPRIAP EQU   RDTPRIOR
@NM00023 EQU   RDTPRIOR
RDTPRE   EQU   ISTRDT
RCPRSV05 EQU   ISTRCPRE+120
RCPRSV04 EQU   ISTRCPRE+116
RCPRSV03 EQU   ISTRCPRE+112
RCPINTA  EQU   RCPLGNIN+16
RCPLGNCT EQU   RCPLGNIN+8
RCPLGNAP EQU   RCPLGNIN
@NM00022 EQU   RCPPMODE
RCPRRECD EQU   RCPPMODE
RCPRBASC EQU   RCPPMODE
RCPBFLIM EQU   ISTRCPRE+90
RCPBHSI2 EQU   ISTRCPRE+89
RCPBHSI1 EQU   ISTRCPRE+88
RCPACETR EQU   ISTRCPRE+84
RCPICEAQ EQU   ISTRCPRE+80
RCPLNAPA EQU   ISTRCPRE+76
RCPICELN EQU   ISTRCPRE+72
RCPPRE   EQU   ISTRCPRE
RPRCONID EQU   ISTRPRE+63
RPRCLVPD EQU   RPRFLAGC
RPRINIMM EQU   RPRFLAGD
RPRRSV05 EQU   RPRFLAGD
RPRCONP  EQU   RPRFLAGD
RPRACTP  EQU   RPRFLAGD
RPRRSON  EQU   RPRFLAGD
RPRCONCT EQU   RPRFLAGD
RPRLTASN EQU   RPRFLAGD
RPRPTHCT EQU   ISTRPRE+60
RPRSWDAF EQU   ISTRPRE+58
RPRSTPCT EQU   ISTRPRE+56
RPRRVPT1 EQU   ISTRPRE+52
RPRDEVCH EQU   ISTRPRE+44
RPRNCBA  EQU   ISTRPRE+40
RPRNSNEA EQU   ISTRPRE+36
RPRLGONB EQU   ISTRPRE+32
RPRLGONF EQU   ISTRPRE+28
RPRHDTYP EQU   ISTRPRE+27
RPRTIOCT EQU   ISTRPRE+26
RPRPEPCT EQU   ISTRPRE+24
RPRRSV03 EQU   RPRCAUSE
RPRRSYNC EQU   RPRCAUSE
RPRCRCPT EQU   RPRCAUSE
RPRNOSRT EQU   RPRCAUSE
RPRINTST EQU   RPRFLAGB
RPRVYIMM EQU   RPRFLAGB
RPRHLVPD EQU   RPRFLAGB
RPRONLIN EQU   RPRFLAGB
RPRVIODN EQU   RPRFLAGB
RPRAOPN  EQU   RPRFLAGB
RPRENTVT EQU   RPRFLAGB
RPRENTVH EQU   RPRFLAGB
RPRLIVE  EQU   RPRFLAGA
RPRVRYPD EQU   RPRFLAGA
RPRENTED EQU   RPRFLAGA
RPRENTIO EQU   RPRFLAGA
RPRENTBF EQU   RPRFLAGA
RPRTIED  EQU   RPRFLAGA
RPRINV   EQU   RPRFLAGA
RPRACT   EQU   RPRFLAGA
RPRENTRY EQU   ISTRPRE+20
RPRPELEN EQU   ISTRPRE+18
RPRELEN  EQU   ISTRPRE+16
RPRRLOCK EQU   ISTRPRE+12
RPRDAF   EQU   RPRCOMID+2
RPRSAF   EQU   RPRCOMID
RPRNAME  EQU   ISTRPRE
DNCZC001 EQU   DNCOS+40
DNCLOCK  EQU   DNCOS+36
DNCZV005 EQU   DNCOS+32
DNCZV004 EQU   DNCOS+28
DNCZV003 EQU   DNCOS+24
DNCZV002 EQU   DNCOS+21
DNCZX001 EQU   DNCOS+20
DNCZV001 EQU   DNCOS+17
DNCZX003 EQU   DNCOS+16
DNCZV000 EQU   DNCOS+12
DNCSESCQ EQU   DNCOS+8
DNCSESIQ EQU   DNCOS+4
DNCACIP  EQU   DNCBSCED+1
DNCLICP  EQU   DNCBSCED
DNCZF008 EQU   DNCZFLGS+1
DNCZPSRD EQU   DNCZFLGS+1
DNCPSOL  EQU   DNCZFLGS+1
DNCZF007 EQU   DNCZFLGS+1
DNCZF006 EQU   DNCZFLGS+1
DNCZF005 EQU   DNCZFLGS+1
DNCZF004 EQU   DNCZFLGS+1
DNCZF003 EQU   DNCZFLGS
DNCZF002 EQU   DNCZFLGS
DNCZRSCH EQU   DNCZFLGS
DNCDISC  EQU   DNCZFLGS
DNCCONT  EQU   DNCZFLGS
DNCINVIT EQU   DNCZFLGS
DNCSESS  EQU   DNCZFLGS
DNCZF001 EQU   DNCZFLGS
DNCMODE  EQU   ISTDNCB+49
DNCBHSET EQU   ISTDNCB+48
DNCNCB   EQU   ISTDNCB
NCBRSV01 EQU   ISTNCB+46
NCBSWDAF EQU   ISTNCB+44
NCBDEVCH EQU   ISTNCB+36
NCBFMCBP EQU   ISTNCB+32
NCBLTRC  EQU   ISTNCB+30
NCBRVPT1 EQU   ISTNCB+28
NCBNMLLN EQU   NCBFLAGS+3
@NM00021 EQU   NCBFLAG1
NCBFORCE EQU   NCBFLAG1
NCBTTF   EQU   NCBFLAG1
NCBRSYNC EQU   NCBFLAG1
NCBRSTRT EQU   NCBFLAG1
NCBCONF  EQU   NCBFLAG1
NCBSNAI  EQU   NCBFLAG1
NCBFLTIO EQU   NCBFTRIO
NCBCSTAT EQU   NCBFLAGS
NCBNCSL  EQU   ISTNCB+22
NCBNCBA  EQU   ISTNCB+20
NCBFMCBA EQU   ISTNCB+16
NCBNSNA  EQU   ISTNCB+12
NCBTSKID EQU   ISTNCB+8
NCBDAF   EQU   ISTNCB+2
NCBLNGTH EQU   ISTNCB+1
NCBTYPE  EQU   ISTNCB
FMCFLRSV EQU   FMCFLGB
FMCFLGA8 EQU   FMCFLGB
FMCCLRPH EQU   FMCVS1+45
FMCRSV0X EQU   FMCCVFLG
FMCFRRPH EQU   FMCCVFLG
FMCOWRPH EQU   FMCCVFLG
FMCCDRPH EQU   FMCCVFLG
FMCPSRPH EQU   FMCCVFLG
FMCVYRPH EQU   FMCCVFLG
FMCZV004 EQU   FMCVS1+40
FMCLOCK2 EQU   FMCVS1+36
@NM00020 EQU   FMCZFLG2
FMCZF027 EQU   FMCZFLG2
FMCZF026 EQU   FMCZFLG2
FMCSEQ1B EQU   FMCSEQ1
FMCSEQ1T EQU   FMCSEQ1
FMCZX006 EQU   FMCVS1+33
FMCZX005 EQU   FMCVS1+32
FMCZX004 EQU   FMCVS1+31
FMCZX003 EQU   FMCVS1+30
FMCZX002 EQU   FMCVS1+29
FMCZX001 EQU   FMCVS1+28
FMCZV001 EQU   FMCVS1+24
FMCAWATQ EQU   FMCLCPAQ+1
@NM00019 EQU   FMCLCPAQ
FMCLCPB2 EQU   FMCLCPBQ+1
FMCLCPB1 EQU   FMCLCPBQ
FMCASCDQ EQU   FMCSHEAQ+1
@NM00018 EQU   FMCSHEAQ
FMCSHEDQ EQU   FMCVS1+8
FMCZFCSQ EQU   FMCVS1+6
FMCZH001 EQU   FMCVS1+4
FMCZF025 EQU   FMCZFLAG+3
FMCZF024 EQU   FMCZFLAG+3
FMCZF023 EQU   FMCZFLAG+3
FMCZF022 EQU   FMCZFLAG+3
FMCZF021 EQU   FMCZFLAG+3
FMCZF020 EQU   FMCZFLAG+3
FMCZF019 EQU   FMCZFLAG+3
FMCZF018 EQU   FMCZFLAG+3
FMCZF017 EQU   FMCZFLAG+2
FMCZF016 EQU   FMCZFLAG+2
FMCZF015 EQU   FMCZFLAG+2
FMCZF014 EQU   FMCZFLAG+2
FMCZF013 EQU   FMCZFLAG+2
FMCZF012 EQU   FMCZFLAG+2
FMCZF011 EQU   FMCZFLAG+2
FMCZF010 EQU   FMCZFLAG+2
FMCZF00F EQU   FMCZFLAG+1
FMCZF00E EQU   FMCZFLAG+1
FMCZF00D EQU   FMCZFLAG+1
FMCZF00C EQU   FMCZFLAG+1
FMCZF00B EQU   FMCZFLAG+1
FMCRSV10 EQU   FMCZFLAG+1
FMCZF009 EQU   FMCZFLAG+1
FMCZFD06 EQU   FMCZF006+1
FMCZFC06 EQU   FMCZF006
FMCZFB06 EQU   FMCZF006
FMCZFA06 EQU   FMCZF006
FMCZF005 EQU   FMCZFLAG
FMCZF004 EQU   FMCZFLAG
FMCZF003 EQU   FMCZFLAG
FMCZF002 EQU   FMCZFLAG
FMCZF001 EQU   FMCZFLAG
FMCFRESA EQU   ISTFMCB+228
FMCSCSQN EQU   FMCSNCTL+2
FMCSCCTL EQU   FMCSNCTL+1
FMCSTCTL EQU   FMCSCFLG
FMCSCCLO EQU   FMCSCFLG
FMCAPRO  EQU   FMCSCFLG
FMCLURO  EQU   FMCSCFLG
FMCOBSAC EQU   FMCSCFLG
FMCIBSAC EQU   FMCSCFLG
FMCFBRE  EQU   ISTFMCB+220
FMCFBXM  EQU   FMCZV002
FMCASEGQ EQU   ISTFMCB+212
FMCRDTPT EQU   ISTFMCB+208
FMCLOCK  EQU   ISTFMCB+204
FMCSEGD  EQU   FMCSSEGQ
FMCRSPLM EQU   ISTFMCB+198
FMCPSTRS EQU   ISTFMCB+196
@NM00017 EQU   FMCRRESP
FMCTSLHA EQU   FMCRRESP
FMCFRRN  EQU   FMCRRESP
FMCFME   EQU   FMCRRESP
FMCFEX   EQU   FMCRRESP
FMCFPE   EQU   FMCRRESP
FMCCTLB  EQU   ISTFMCB+194
FMCBSQNO EQU   FMCCLSEQ+2
FMCTSQNO EQU   FMCCLSEQ
FMCOBPRG EQU   FMCMODEB
FMCIBPRG EQU   FMCMODEB
FMCRESOT EQU   FMCMODEB
FMCRSTSR EQU   FMCMODEB
FMCLUQ   EQU   FMCMODEB
FMCAPQ   EQU   FMCMODEB
FMCCLEAR EQU   FMCMODEB
FMCHOLD  EQU   FMCMODEB
FMCIPSEQ EQU   ISTFMCB+188
FMCLUSTR EQU   ISTFMCB+187
FMCCDPIP EQU   FMCSTAT2
FMCPSPIP EQU   FMCSTAT2
FMCSEQI  EQU   FMCSTAT2
FMCCPIP  EQU   FMCSTAT2
FMCALIPR EQU   FMCSTAT2
FMCIAIO  EQU   FMCSTAT2
FMCZF00A EQU   FMCSTAT2
FMCVPIP  EQU   FMCSTAT2
FMCBHSET EQU   ISTFMCB+185
FMCPRMRC EQU   FMCCLEXT+20
FMCRSV89 EQU   FMCPSTAT
FMCPCLSD EQU   FMCPSTAT
FMCDDOCD EQU   FMCPSTAT
FMCIDVFD EQU   FMCPSTAT
FMCELKST EQU   FMCPSTAT
FMCRSV88 EQU   FMCPSCMD
FMCRDBLK EQU   FMCPSCMD
FMCDSEOC EQU   FMCPSCMD
FMCPURGE EQU   FMCPSCMD
FMCRESTI EQU   FMCPSCMD
FMCCNTCT EQU   FMCPSCMD
FMCINVT  EQU   FMCPSCMD
FMCFLGB7 EQU   FMCFLGCL
FMCFLGB6 EQU   FMCFLGCL
FMCFLGB5 EQU   FMCFLGCL
FMCFLGB4 EQU   FMCFLGCL
FMCFLGB3 EQU   FMCFLGCL
FMCFLGB2 EQU   FMCFLGCL
FMCFLGB1 EQU   FMCFLGCL
FMCFLGB0 EQU   FMCFLGCL
FMCFLGA7 EQU   FMCFLGA
FMCFLGA6 EQU   FMCFLGA
FMCFLGA5 EQU   FMCFLGA
FMCFLGA4 EQU   FMCFLGA
FMCFLGA3 EQU   FMCFLGA
FMCFLGA2 EQU   FMCFLGA
FMCFLGA1 EQU   FMCFLGA
FMCFLGA0 EQU   FMCFLGA
FMCDCLOK EQU   FMCCLEXT+12
FMCRAFM  EQU   FMCCLEXT+8
FMCFBPTR EQU   FMCFBA+1
FMCFBRSV EQU   FMCFBA
FMCRPLPT EQU   FMCRPLA+1
FMCRPLRS EQU   FMCRPLA
FMCPRCLS EQU   FMCCVAL
FMCIBCE  EQU   FMCCVAL
FMCONLY  EQU   FMCOBCE
FMCLAST  EQU   FMCOBCE
FMCMIDLE EQU   FMCOBCE
FMCFIRST EQU   FMCOBCE
FMCCPCNT EQU   FMCPACPC
FMCMPCNT EQU   FMCPACEM
FMCNPCNT EQU   FMCPACEN
FMCCONF  EQU   FMCSSTAT
FMCPURCH EQU   FMCSSTAT
FMCNSALU EQU   FMCSSTAT
FMCBIP   EQU   FMCSSTAT
FMCSDTR  EQU   FMCSSTAT
FMCUIPI  EQU   FMCSSTAT
FMCCIPI  EQU   FMCSSTAT
FMCSNBI  EQU   FMCSSTAT
FMCRVD01 EQU   ISTFMCB+158
FMCISSN  EQU   ISTFMCB+156
FMCOASN  EQU   FMCNXOSC
FMCOSSN  EQU   FMCNXCFM
FMCSIP   EQU   FMCSIPA
FMCEXLST EQU   ISTFMCB+144
FMCPAB5  EQU   ISTFMCB+128
FMCPAB4  EQU   ISTFMCB+112
FMCPAB2  EQU   ISTFMCB+80
FMCPAB1  EQU   ISTFMCB+64
FMCFASYA EQU   ISTFMCB+60
FMCMODE  EQU   ISTFMCB+52
FMCPROCD EQU   ISTFMCB+48
FMCVWT   EQU   ISTFMCB+44
FMCRPLH  EQU   ISTFMCB+40
FMCBUFNB EQU   FMCCMPS1+2
FMCBUFLM EQU   FMCCMPS1
FMCDEBA  EQU   ISTFMCB+32
@NM00016 EQU   FMCCMDFL
FMCSNA   EQU   FMCCMDFL
FMCVSNA  EQU   FMCCMDFL
FMCCMDR  EQU   FMCCMDFL
@NM00015 EQU   ISTFMCB+30
@NM00014 EQU   FMCSTAT1
FMCLTCLS EQU   FMCSTAT1
FMCHPURG EQU   FMCSTAT1
FMCVSP2  EQU   FMCSTAT1
FMCVSP1  EQU   FMCSTAT
FMCLTEAS EQU   FMCSTAT
FMCZF007 EQU   FMCSTAT
FMCDEDSC EQU   FMCSTAT
FMCDEVOF EQU   FMCSTAT
FMCDAPT  EQU   FMCSTAT
FMCPRMTE EQU   FMCSTAT
FMCPRMTR EQU   FMCSTAT
FMCUSFLD EQU   ISTFMCB+24
FMCFMCBA EQU   ISTFMCB+20
FMCDVTA  EQU   ISTFMCB+12
FMCTSKID EQU   ISTFMCB+8
FMCNXTCB EQU   ISTFMCB+4
FMCSAF   EQU   ISTFMCB+2
FMCLNGTH EQU   ISTFMCB+1
FMCTYPE  EQU   ISTFMCB
PROSRDEF EQU   PROSETM4
PRORSV47 EQU   PROSETM4
PROSCON  EQU   PROSETM4
PRORSV46 EQU   PROSETM3
PROSMONT EQU   PROSETM3
PRORSV45 EQU   PROSETM3
PROSNTO  EQU   PROSETM3
PRORSV44 EQU   PROSETM3
PROCPUID EQU   PROSETM3
PRORSV43 EQU   PROSETM2
PROSNTFL EQU   PROSETM2
PRORSV42 EQU   PROSETM2
PRORSV41 EQU   PROPROCS
PROMODC  EQU   PROPROC4
PROMODT  EQU   PROPROC4
PROMODM  EQU   PROPROC4
PROMODB  EQU   PROPROC4
PRORSV14 EQU   PROPROC4
PRORSV13 EQU   PROPROC4
PRORSV12 EQU   PROPROC4
PROEIB   EQU   PROPROC4
PROMONT3 EQU   PROPROC3
PROMONT2 EQU   PROPROC3
PROMONIT EQU   PROPROC3
PROSUBLK EQU   PROPROC3
PRONTO   EQU   PROPROC3
PROLGIN  EQU   PROPROC3
PROERPI  EQU   PROPROC3
PRORSV07 EQU   PROPROC3
PROCFTX  EQU   PROPROC2
PROEMLC  EQU   PROPROC2
PRONTFL  EQU   PROPROC2
PRORSV05 EQU   PROPROC2
PRORSV04 EQU   PROPROC2
PROLGOT  EQU   PROPROC2
PROERPO  EQU   PROPROC2
PRORSV03 EQU   PROPROC2
PRORPLC  EQU   PROPROC1
PROCS    EQU   PROPROC1
PROCA    EQU   PROPROC1
PRORESPX EQU   PROPROC1
PRODFASY EQU   PROPROC1
PROXPOPT EQU   PROPROC1
PROTRUNC EQU   PROPROC1
PROASYIP EQU   PROPROC1
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVMCODE EQU   ISTDEVCH+2
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVSUBND EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABDELAY EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
LOKXCL   EQU   @NM00012
LOKPRY   EQU   @NM00012
@NM00013 EQU   @NM00012
@NM00011 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
NMLRSV05 EQU   ISTNMLPB+96
NMLRSV04 EQU   ISTNMLPB+92
NMLDRDTE EQU   ISTNMLPB+88
NMECBPTR EQU   ISTNMLPB+84
NMLRSV02 EQU   ISTNMLPB+82
NMLRSV06 EQU   ISTNMLPB+81
NMIPSEQ  EQU   ISTNMLPB+80
NMNCSPL  EQU   NMRDTEA
NMRSV01  EQU   NMLCWCMD+1
NMECRST  EQU   NMLCWCMD+1
NMVRYPRG EQU   NMLCWCMD+1
NMSTCTLF EQU   NMLCWCMD+1
NMSTCTLI EQU   NMLCWCMD+1
NMSTCTLR EQU   NMLCWCMD
NMFBDTA  EQU   NMLCWCMD
NMRDBLK  EQU   NMLCWCMD
NMDSEOC  EQU   NMLCWCMD
NMPURGE  EQU   NMLCWCMD
NMRESTI  EQU   NMLCWCMD
NMCNTCT  EQU   NMLCWCMD
NMINVT   EQU   NMLCWCMD
NMFNCTCD EQU   NMCONTRL
NMLCW3   EQU   ISTNMLPB+64
NMLCW2   EQU   ISTNMLPB+56
NMLCPB   EQU   ISTNMLPB
LCPFTYPE EQU   LCPRPHA
LCPRSTQH EQU   LCPLCCW
LCPCLREP EQU   ISTLCPB+44
LCPUBFSB EQU   LCPFLCCW
LCPRSV77 EQU   ISTLCPB+39
LCPLCCWC EQU   ISTLCPB+38
LCPRSV78 EQU   LCPFLG1
LCPTRANS EQU   LCPFLG1
LCPSTLB  EQU   LCPFLG1
LCPREDRV EQU   LCPFLG1
LCPDIRPT EQU   LCPFLG1
LCPINTER EQU   LCPFLG1
LCPRESET EQU   LCPFLG1
LCPSTYPE EQU   ISTLCPB+36
LCPFSNCH EQU   ISTLCPB+34
LCPFOSN  EQU   ISTLCPB+32
LCPTLBAD EQU   ISTLCPB+28
LCPFDB2  EQU   LCPFDBA+1
LCPFDB1  EQU   LCPFDBA
LCPDAF   EQU   LCPCID+2
LCPSAF   EQU   LCPCID
LCPLCCW1 EQU   ISTLCPB+12
LCPRRCNT EQU   LCPSEQ+1
LCPRRCCT EQU   LCPSEQ
LCPATOP  EQU   LCPFLAG2
LCPFREE  EQU   LCPFLAG2
LCPDSTAT EQU   LCPFLAG2
LCPEXRES EQU   LCPFID0
LCPZRIMM EQU   LCPTLBPI
LCPRSTRT EQU   LCPFLAG2
LCPASYN  EQU   LCPFLAG2
LCPPRFLG EQU   LCPFLAG2
LCPZMIRC EQU   LCPRUCNT
LCPCHAI2 EQU   LCPCHAIN+1
LCPCHNG  EQU   LCPCHAI1
LCPZRT0B EQU   LCPMNRCD
LCPZRT0A EQU   LCPMNRCD
LCPZRTL9 EQU   LCPZRT09
LCPZRTL8 EQU   LCPZRT08
LCPZRTL7 EQU   LCPZRT07
LCPZRTL6 EQU   LCPZRT06
LCPZRTL5 EQU   LCPZRT05
LCPZRTL4 EQU   LCPZRT04
LCPZRTL3 EQU   LCPZRT03
LCPZRTL2 EQU   LCPZRT02
LCPZRT01 EQU   LCPFLAGS
LCPZRT00 EQU   LCPFLAGS
LCPLNGTH EQU   ISTLCPB+1
LCPTYPE  EQU   ISTLCPB
LCCWDATA EQU   ISTLCCW+4
LCCWCNT  EQU   ISTLCCW+2
LCCWACI  EQU   LCCWFLAG
LCCWRFI  EQU   LCCWFLAG
LCCWPER  EQU   LCCWLSI
LCCWIDAT EQU   LCCWFLAG
LCCWNTVC EQU   LCCWFLAG
LCCWCKPT EQU   LCCWFLAG
LCCWCC   EQU   LCCWFLAG
LCCWCD   EQU   LCCWFLAG
LCCWTYPE EQU   LCCWCTL
LCCWMODE EQU   LCCWCTL
LCCWSOP  EQU   LCCWRWOP
@NM00010 EQU   LCCWRWOP
LCCWSD   EQU   LCCWOP
LCCWSI   EQU   LCCWOP
FSBRSV01 EQU   FSBFSB+30
FSBTHCNT EQU   FSBFSB+28
FSBRLRSV EQU   FSBRLSTS
FSBCFTX  EQU   FSBRLSTS
FSBICNCB EQU   FSBMSGID
FSBSSOC  EQU   FSBSS2
FSBSSCC  EQU   FSBSS2
FSBSSDC  EQU   FSBSS2
FSBSSEC  EQU   FSBSS2
FSBSSIR  EQU   FSBSS2
FSBSSCR  EQU   FSBSS2
@NM00008 EQU   FSBSS2
@NM00007 EQU   FSBSS1
FSBSSDE  EQU   FSBSS1
FSBSSUS  EQU   FSBSS1
@NM00006 EQU   FSBSS1
FSBSOHI  EQU   FSBERC
FSBLGI   EQU   FSBERC
FSBLMRI  EQU   FSBFBMI
FSBETI   EQU   FSBERC
FSBEMI   EQU   FSBERC
FSBEBI   EQU   FSBERC
FSBECI   EQU   FSBERC
FSBELI   EQU   FSBERC
FSBMJRCD EQU   FSBSRCAT
FSBXLCI  EQU   FSBXCODE
FSBXFINS EQU   FSBXCODE
FSBXNORM EQU   FSBXFSTS
FSBSPHSE EQU   FSBSYSRS
FSBSERR  EQU   FSBSYSRS
FSBCMD   EQU   FSBSEQ
FSBDTRCE EQU   FSBFLAGS
FSBASBTU EQU   FSBFLAGS
FSBINPET EQU   FSBFLAGS
FSBNONCB EQU   FSBFLAGS
FSBLBIND EQU   FSBFLAGS
FSBFFIND EQU   FSBFLAGS
FSBACIND EQU   FSBFLAGS
FSBRFIND EQU   FSBFLAGS
FSBDAF   EQU   FSBCID+2
FSBSAF   EQU   FSBCID
FSBGATE  EQU   FSBFSBA
FSBLATOP EQU   FSBSFLGS
FSBRSV02 EQU   FSBSFLGS
FSBPGBUF EQU   FSBSFLGS
FSBMNSDA EQU   FSBMNRCD
FSBMNOA  EQU   FSBMNRCD
FSBMNDIF EQU   FSBMNRCD
FSBMNEOP EQU   FSBMNRCD
FSBMNDNU EQU   FSBMNRCD
FSBMNATN EQU   FSBMNRCD
FSBMNRVI EQU   FSBMNRCD
FSBMNELI EQU   FSBMNRCD
FSBLNGTH EQU   FSBFSB+1
FSBTYPE  EQU   FSBFSB
FDBDATCT EQU   ISTFDB+8
FDBDATAA EQU   ISTFDB+4
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00005 EQU   CVTFIX+248
@NM00004 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00003 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00002 EQU   RPHCVFLG
RPHFRRPH EQU   RPHCVFLG
RPHOWRPH EQU   RPHCVFLG
RPHCDRPH EQU   RPHCVFLG
RPHPSRPH EQU   RPHCVFLG
RPHVYRPH EQU   RPHGATE
@NM00001 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   RPHCNTL+1
RPHTYPE  EQU   RPHCNTL
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00345 EQU   @RC00342
@ENDDATA EQU   *
         END   ISTNMC6S,(C'PLS2144',0603,78158)
