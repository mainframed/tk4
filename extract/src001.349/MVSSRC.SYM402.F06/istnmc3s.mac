         TITLE 'ISTNMC3S - DIAL DISCONNECT PROCESSOR                   *
                        '
ISTNMC3S CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTNMC3S  78.082'                                 0001
         DROP  @15
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*                                                                  0334
*   /*****************************************************************/
*   /*                                                               */
*   /* START OF MAIN LINE                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0334
*   DO;                                                            0334
*                                                                  0334
*/***  CRRMAINT  PROCNM(ISTNMC3S)COMP(PS)FUNC(SUB)  **               */
*                                                                  0335
*     DCL                                                          0335
*       CMZK0007 PTR(31) REG(1);                                   0335
*     RFY                                                          0336
*      (CMZK0007) RSTD;                                            0336
*                                                                  0336
*/* ATBUILD (ISTRPH,ISTCRA,ISTPFCRR,ISTPSCRR)                        */
*                                                                  0337
*     RFY                                                          0337
*       ISTZSAVE;                                                  0337
*     RFY                                                          0338
*       ISTPFCRR;                                                  0338
*     RFY                                                          0339
*       ISTCFCRR;                                                  0339
*     RFY                                                          0340
*       ISTZCRR;                                                   0340
*     RFY                                                          0341
*       ISTASCRR;                                                  0341
*     RFY                                                          0342
*       ISTAPCRR;                                                  0342
*     RFY                                                          0343
*       ISTCRA;                                                    0343
*     RFY                                                          0344
*       ISTCNSTA;                                                  0344
*     RFY                                                          0345
*       ISTPSCRR;                                                  0345
*                                                                  0345
*/* END OF ATBUILD                                                   */
*                                                                  0346
*     /***************************************************************/
*     /*                                                             */
*     /* ** SET ENTERED BIT FOR THIS PROCEDURE                       */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0346
*     CMZK0007->RPHCRR->CRACRR->NNMC3S='1'B;                       0346
*                                                                  0346
         L     @11,RPHCRR(,CMZK0007)                               0346
         L     @11,CRACRR(,@11)                                    0346
         OI    NNMC3S(@11),B'00010000'                             0346
*     /***************************************************************/
*     /*                                                             */
*     /* ** CLEAR AND SET CURRENT PROCEDURE BIT                      */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0347
*     CMZK0007->RPHCRR->CRACRR->PSCCRT='0'B;                       0347
         MVI   PSCCRT+1(@11),X'00'                                 0347
         MVI   PSCCRT(@11),B'00000000'                             0347
*     CMZK0007->RPHCRR->CRACRR->CNMC3S='1'B;                       0348
         OI    CNMC3S(@11),B'00010000'                             0348
*   END;                            /* RPHPTR(R1) HAS RPH PTR        */
*   C3SFSB=RPHWEA;                  /* GET FSB ADDR IN REG           */
         L     C3SFSB,RPHWEA(,C3SR1)                               0350
*   RDTPTR=RPHMAJCB->FMCDNCBA       /* EST. PORT RDT ENTRY ADDR      */
*       ->NCBRDTE;                  /* GET STORAGE FOR (PURGE) LCPB  */
         L     @11,RPHMAJCB-1(,C3SR1)                              0351
         LA    @11,0(,@11)                                         0351
         L     @11,FMCDNCBA(,@11)                                  0351
         L     RDTPTR,NCBRDTE(,@11)                                0351
*   C3SR2=ONE;                      /* INDICATE PLCPB                */
         LA    C3SR2,1                                             0352
*   C3SR4=ZERO;                     /* CLEAR SWITCH REG              */
         SLR   C3SR4,C3SR4                                         0353
*   CALL GTSTOR;                    /* IF R15 IS NOT ZERO            */
         BAL   @14,GTSTOR                                          0354
*   IF C3SR15>FOUR                  /* THEN NO STORAGE AVAILABLE     */
*     THEN                                                         0355
         C     C3SR15,@CF00075                                     0355
         BNH   @RF00355                                            0355
*     C3SR4=C3SR4×DONTPURG;         /* DONT TRY TO PURGE FMCB        */
         O     C3SR4,@CF00035                                      0356
*   ELSE                                                           0357
*     ;                             /* RPHSRPRM HAS ADDR OF STORAGE
*                                      FOR LCPB                      */
@RF00355 DS    0H                                                  0358
*   C3SR2=ZERO;                                                    0358
         SLR   C3SR2,C3SR2                                         0358
*   C3SR2=RPRDAF;                   /* GET COMID IN PORT ENTRY GET 0359
*                                      DAF LOCK                      */
         LH    C3SR2,RPRDAF(,RDTPTR)                               0359
         N     C3SR2,@CF04392                                      0359
*   DO;                             /* CIDCTL(FIND)                0360
*                                      CID(C3SR2)LOCK(XCLUSIVE)      */
*     RFY                                                          0361
*      (EMCR2,                                                     0361
*       EMCR3) RSTD;                                               0361
*     GEN SETS(RPHWORK)                                            0362
*         (STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH);     0362
         STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH
*     EMCR3='00'X;                  /* CLEAR EXTRA BITS              */
         SLR   EMCR3,EMCR3                                         0363
*     EMCR3='02'X;                  /* INDICATE EXCLUSIVE LOCK       */
         LA    EMCR3,2                                             0364
*     CALL ATCLCPTR->ATCCDFND->ISTSDCCF;/* PROCESS REQUEST           */
         L     @11,ATCLCPTR                                        0365
         L     @15,ATCCDFND(,@11)                                  0365
         BALR  @14,@15                                             0365
*     RFY                                                          0366
*      (EMCR2,                                                     0366
*       EMCR3) UNRSTD;                                             0366
*   END;                            /* CIDCTL                        */
*   IF C3SR15=ZERO                  /* IF RC IS GOOD                 */
*     THEN                                                         0368
         LTR   C3SR15,C3SR15                                       0368
         BNZ   @RF00368                                            0368
*     CALL PRGACTUR;                /* GO SEARCH FMCB CHAIN          */
         BAL   @14,PRGACTUR                                        0369
*   ELSE                                                           0370
*     DO;                           /*                               */
         B     @RC00368                                            0370
@RF00368 DS    0H                                                  0371
*       RPHMAJCB->FMCPCLSD=ON;      /* QUIESE I/O 'UNABLE TO SOLICIT
*                                      PORT'                         */
         L     @11,RPHMAJCB-1(,C3SR1)                              0371
         LA    @11,0(,@11)                                         0371
         OI    FMCPCLSD(@11),B'00010000'                           0371
*       RFY                                                        0372
*         C3SR6 RSTD;                                              0372
*       C3SR13=ADDR(RPHWORK)-FOUR;  /* REG. SAVEAREA                 */
         LA    C3SR13,RPHWORK(,C3SR1)                              0373
         SL    C3SR13,@CF00075                                     0373
*       C3SR6=C3SR1;                /* SAVE RPH ADDR                 */
         LR    C3SR6,C3SR1                                         0374
*       RFY                                                        0375
*         ISTRPH BASED(C3SR6);                                     0375
*                                                                  0375
*/*TPMSG MSGID('855I')MSG((ADDR(RPTCTNM)))PLAREA((ADDR(ISTFSB)))     */
*                                                                  0376
*       DO;                                                        0376
*         DCL                                                      0377
*           REG1013 REG(1) PTR;                                    0377
*         RFY                                                      0378
*          (REG1013) RSTD;                                         0378
*         RFY                                                      0379
*          (EMCR13) RSTD;                                          0379
*         DCL                                                      0380
*           1 * BASED(REG1013),                                    0380
*            2 CMZID013 PTR(31),                                   0380
*            2 *,                                                  0380
*             3 CMZRL013 PTR(8),                                   0380
*             3 CMZRA013 PTR(24) BDY(BYTE),                        0380
*            2 CMZEA013 PTR(31),                                   0380
*            2 CMZVP013 PTR(31);                                   0380
*                                                                  0380
*/*XREGSET  PID('PLAREA')PPARM((ADDR(ISTFSB)))RREG(,REG1013)         */
*                                                                  0381
*         DO;                                                      0381
*           REG1013=ADDR(ISTFSB);   /* SET RREG SYMBOL TO VALUE OF 0382
*                                      PPARM OPERAND                 */
         LR    REG1013,C3SFSB                                      0382
*         END;                      /* XREGSET                       */
*         CMZID013=0;                                              0384
         SLR   @07,@07                                             0384
         ST    @07,CMZID013(,REG1013)                              0384
*         CMZRL013=0;                                              0385
         MVI   CMZRL013(REG1013),X'00'                             0385
*         CMZRA013=0;                                              0386
         STCM  @07,7,CMZRA013(REG1013)                             0386
*         CMZEA013=0;                                              0387
         ST    @07,CMZEA013(,REG1013)                              0387
*         CMZVP013=0;                                              0388
         ST    @07,CMZVP013(,REG1013)                              0388
*         DCL                                                      0389
*           CMZAA013 CHAR(4) INIT('855I');                         0389
*         CMZID013=ADDR(CMZAA013);                                 0390
         LA    @07,CMZAA013                                        0390
         ST    @07,CMZID013(,REG1013)                              0390
*         CMZVP013=ADDR(RPTCTNM);                                  0391
         LA    @07,RPTCTNM(,RDTPTR)                                0391
         ST    @07,CMZVP013(,REG1013)                              0391
*         DCL                                                      0392
*           CMZSA013(18) PTR(31) BASED(EMCR13);                    0392
*         DCL                                                      0393
*           CMZZO013(1) FIXED(31) INIT(0);                         0393
*         CMZSA013(5)=CMZZO013;                                    0394
         L     @07,CMZZO013                                        0394
         ST    @07,CMZSA013+16(,EMCR13)                            0394
*         DCL                                                      0395
*           REG15013 REG(15) PTR;                                  0395
*         RFY                                                      0396
*           REG15013 RSTD;                                         0396
*         DO;                       /* LISATCVT                    0397
*                                      CVTBASE(PAGEABLE,(REG15013))  */
*           REG15013=ATCLCPTR;      /* SET UP ATCVT POINTER          */
         L     REG15013,ATCLCPTR                                   0398
*         END;                      /* LISATCVT                      */
*         DCL                                                      0400
*           CMTA013 BASED(REG15013) ENTRY VALUERANGE(*);           0400
*         REG15013=REG15013->ATCMSGP;                              0401
         L     REG15013,ATCMSGP(,REG15013)                         0401
*         CALL CMTA013;                                            0402
         BALR  @14,@15                                             0402
*         RESPECIFY                                                0403
*          (REG1013,                                               0403
*           REG15013) UNRESTRICTED;                                0403
*         RFY                                                      0404
*          (EMCR13) UNRSTD;                                        0404
*       END;                        /*                       @D31KKDA*/
*       C3SR1=C3SR6;                /* RESTORE RPH ADDR              */
         LR    C3SR1,C3SR6                                         0406
*       RFY                                                        0407
*         ISTRPH BASED(C3SR1);                                     0407
*       RFY                                                        0408
*         C3SR6 UNRSTD;                                            0408
*       IF C3SR4=ONE                /* IS THERE A PURGE LCPB         */
*         THEN                                                     0409
         C     C3SR4,@CF00035                                      0409
         BE    @RT00409                                            0409
*         ;                         /* NO DONT FREE                  */
*       ELSE                        /* FREE PURGE LCPB               */
*                                                                  0411
*         /***********************************************************/
*         /*                                                         */
*         /* RELSTORE BUFADDR(RPHSRPRM)CLEAR(NO)SAVE(YES)            */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0411
*         DO;                                                      0411
*                                                                  0411
*/* ATBUILD (ISTATCVT,ISTRPH)                                        */
*/* END OF ATBUILD                                                   */
*                                                                  0412
*           RFY                                                    0412
*            (GPR02P,                                              0412
*             GPR03P,                                              0412
*             GPR04P,                                              0412
*             GPR15P) RSTD;                                        0412
*           RFY                                                    0413
*            (GPR01P,                                              0413
*             GPR13P) RSTD;                                        0413
*           GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);     0414
          STM GPR02P,GPR13P,RPHWORK(GPR01P)
*           RFY                                                    0415
*             GPR13P UNRSTD;                                       0415
*           GPR04P=RPHSRPRM;                                       0416
         L     GPR04P,RPHSRPRM(,C3SR1)                             0416
*           DCL                                                    0417
*             1 FMZA0022 FIXED(31) STATIC LOCAL,                   0417
*              2 * FIXED(8) INIT(64),                              0417
*              2 * PTR(24) INIT(0);                                0417
*           GPR03F=FMZA0022;                                       0418
         L     GPR03F,FMZA0022                                     0418
*           DO;                     /* LISATCVT                    0419
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*             GPR15P=ATCLCPTR;      /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0420
*           END;                    /* LISATCVT                      */
*           GPR02P=GPR15P->ATCBPDA;                                0422
         L     GPR02P,ATCBPDA(,GPR15P)                             0422
*           GPR15P=GPR15P->ATCSMRS;                                0423
         L     GPR15P,ATCSMRS(,GPR15P)                             0423
*           DCL                                                    0424
*             FMZL0022 BASED(GPR15P) LABEL VALUERANGE(*);          0424
*           CALL FMZL0022;                                         0425
         BALR  @14,@15                                             0425
*           RFY                                                    0426
*             GPR13P RSTD;                                         0426
*           GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);     0427
          LM GPR02P,GPR13P,RPHWORK(GPR01P)
*           RFY                                                    0428
*            (GPR01P,                                              0428
*             GPR13P) UNRSTD;                                      0428
*           RFY                                                    0429
*            (GPR02P,                                              0429
*             GPR03P,                                              0429
*             GPR04P,                                              0429
*             GPR15P) UNRSTD;                                      0429
*         END;                      /* *********END OF RELSTORE    0430
*                                      EXPANSION*********            */
*     END;                                                         0431
@RT00409 DS    0H                                                  0432
*   CALL C3SCAN;                    /* RTN TO CANCEL LOGONS IF ANY   */
@RC00368 BAL   @14,C3SCAN                                          0432
*/*      FOLLOWING CODE REFORMATS FSB SO THAT IT CAN BE FREED        */
*                                                                  0433
*   EVAL(ADDR(ISTFDB)-FDBOFSET)->FSBC3S=FDBFDBA;                   0433
         LA    @11,32                                              0433
         ALR   @11,C3SFSB                                          0433
         LH    @10,FDBOFSET(,@11)                                  0433
         LR    @07,@11                                             0433
         SLR   @07,@10                                             0433
         L     @06,FDBFDBA(,@11)                                   0433
         ST    @06,FSBC3S(,@07)                                    0433
*   C3SFSB=(ADDR(ISTFDB)-FDBOFSET);                                0434
*                                                                  0434
         SLR   @11,@10                                             0434
         LR    C3SFSB,@11                                          0434
*/* FREE THE FSB                                                     */
*/*  RELSTORE BUFADDR(C3SFSB)CLEAR(NO)SAVE(YES)                      */
*                                                                  0435
*   DO;                                                            0435
*                                                                  0435
*/* ATBUILD (ISTATCVT,ISTRPH)                                        */
*/* END OF ATBUILD                                                   */
*                                                                  0436
*     RFY                                                          0436
*      (GPR02P,                                                    0436
*       GPR03P,                                                    0436
*       GPR04P,                                                    0436
*       GPR15P) RSTD;                                              0436
*     RFY                                                          0437
*      (GPR01P,                                                    0437
*       GPR13P) RSTD;                                              0437
*     GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);           0438
          STM GPR02P,GPR13P,RPHWORK(GPR01P)
*     RFY                                                          0439
*       GPR13P UNRSTD;                                             0439
*     GPR04P=C3SFSB;                                               0440
         LR    GPR04P,C3SFSB                                       0440
*     DCL                                                          0441
*       1 FMZA0038 FIXED(31) STATIC LOCAL,                         0441
*        2 * FIXED(8) INIT(64),                                    0441
*        2 * PTR(24) INIT(0);                                      0441
*     GPR03F=FMZA0038;                                             0442
         L     GPR03F,FMZA0038                                     0442
*     DO;                           /* LISATCVT                    0443
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*       GPR15P=ATCLCPTR;            /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0444
*     END;                          /* LISATCVT                      */
*     GPR02P=GPR15P->ATCBPDA;                                      0446
         L     GPR02P,ATCBPDA(,GPR15P)                             0446
*     GPR15P=GPR15P->ATCSMRS;                                      0447
         L     GPR15P,ATCSMRS(,GPR15P)                             0447
*     DCL                                                          0448
*       FMZL0038 BASED(GPR15P) LABEL VALUERANGE(*);                0448
*     CALL FMZL0038;                                               0449
         BALR  @14,@15                                             0449
*     RFY                                                          0450
*       GPR13P RSTD;                                               0450
*     GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);           0451
          LM GPR02P,GPR13P,RPHWORK(GPR01P)
*     RFY                                                          0452
*      (GPR01P,                                                    0452
*       GPR13P) UNRSTD;                                            0452
*     RFY                                                          0453
*      (GPR02P,                                                    0453
*       GPR03P,                                                    0453
*       GPR04P,                                                    0453
*       GPR15P) UNRSTD;                                            0453
*   END;                            /* *********END OF RELSTORE    0454
*                                      EXPANSION*********            */
*/* TPEXIT  NORM                                                     */
*                                                                  0455
*   DO;                                                            0455
*     RESPECIFY                                                    0456
*       GPR15P RSTD;                                               0456
*                                                                  0456
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT)                               */
*/* END OF ATBUILD                                                   */
*                                                                  0457
*     DO;                           /* LISATCVT                    0457
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*       GPR15P=ATCLCPTR;            /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0458
*     END;                          /* LISATCVT                      */
*     RESPECIFY                                                    0460
*       GPR00F RSTD;                                               0460
*     GPR00F=4;                     /* SET PARAMETER REGISTER TO 4   */
         LA    GPR00F,4                                            0461
*     GPR15P=GPR15P->ATCAP31;                                      0462
         L     GPR15P,ATCAP31(,GPR15P)                             0462
*     DCL                                                          0463
*       FMZL0054 BASED(GPR15P) LABEL VALUERANGE(*);                0463
*     CALL FMZL0054;                                               0464
         BALR  @14,@15                                             0464
*     RESPECIFY                                                    0465
*      (GPR00F,                                                    0465
*       GPR15P) UNRSTD;                                            0465
*   END;                            /* **** END OF TPEXIT GIVE     0466
*                                      EXECUTION TO PSS CONTROL      */
*                                                                  0466
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF MAINLINE                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0467
*                                                                  0467
*   /*****************************************************************/
*   /*                                                               */
*   /* GET STORAGE: USE 'REQSTORE' TO GET STORAGE FOR AN NMLPB OR A  */
*   /* PLCPB OR A CSP INPUT: R1 - HAS ADDR OF RPH R2 - =1,GET STORAGE*/
*   /* FOR AN PLCPB =2,GET STORAGE FOR A NMLPB =3,GET STORAGE FOR A  */
*   /* CSP OUTPUT: R15 - =8, NO STORAGE AVAILABLE MSG - 'NO STORAGE' */
*   /* =0, RPHSRPRM HAS ADDR OF STORAGE                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0467
*GTSTOR:                                                           0467
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0467
         B     @PB00002                                            0467
GTSTOR   DS    0H                                                  0468
*   RFY                                                            0468
*     C3SR6 RSTD;                                                  0468
*   C3SR6=C3SR14;                   /* SAVE RETURN REG               */
         LR    C3SR6,C3SR14                                        0469
*   IF C3SR2=ONE                    /* IS PLCPB NEEDED               */
*     THEN                                                         0470
         C     C3SR2,@CF00035                                      0470
         BNE   @RF00470                                            0470
*     DO;                           /* YES - ID=PLCPB                */
*                                                                  0471
*       /*************************************************************/
*       /*                                                           */
*       /* REQSTORE CBID(PLCPB)RPH(C3SR1)CLEAR(YES)SAVE(YES)         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0472
*       DO;                                                        0472
*                                                                  0472
*/* ATBUILD (ISTDYPAB,ISTATCVT,ISTRPH)                               */
*/* END OF ATBUILD                                                   */
*                                                                  0473
*         RFY                                                      0473
*          (GPR02P,                                                0473
*           GPR03P,                                                0473
*           GPR04P,                                                0473
*           GPR15P) RSTD;                                          0473
*         RFY                                                      0474
*          (GPR01P,                                                0474
*           GPR13P) RSTD;                                          0474
*         GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);       0475
           STM GPR02P,GPR13P,RPHWORK(GPR01P)
*         RFY                                                      0476
*          (GPR01P,                                                0476
*           GPR13P) UNRSTD;                                        0476
*         DO;                       /* LISATCVT                    0477
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*           GPR15P=ATCLCPTR;        /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0478
*         END;                      /* LISATCVT                      */
*         GPR02P=GPR15P->ATCBPDA×'80000000'X;                      0480
         L     GPR02P,ATCBPDA(,GPR15P)                             0480
         O     GPR02P,@CF00959                                     0480
*         DCL                                                      0481
*           1 FMZA0062 FIXED(31) STATIC LOCAL,                     0481
*            2 * FIXED(8) INIT(184),                               0481
*            2 * PTR(24) INIT(0);                                  0481
*         GPR03F=FMZA0062;                                         0482
         L     GPR03F,FMZA0062                                     0482
*         GPR04F=20;                                               0483
         LA    GPR04F,20                                           0483
*         GPR15P=GPR15P->ATCSMRQ;                                  0484
         L     GPR15P,ATCSMRQ(,GPR15P)                             0484
*         DCL                                                      0485
*           FMZL0062 BASED(GPR15P) LABEL VALUERANGE(*);            0485
*         CALL FMZL0062;                                           0486
         BALR  @14,@15                                             0486
*         RFY                                                      0487
*          (GPR13P) RSTD;                                          0487
*         GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);       0488
           LM GPR02P,GPR13P,RPHWORK(GPR01P)
*         RFY                                                      0489
*          (GPR13P) UNRSTD;                                        0489
*         RFY                                                      0490
*          (GPR02P,                                                0490
*           GPR03P,                                                0490
*           GPR04P,                                                0490
*           GPR15P) UNRSTD;                                        0490
*       END;                        /* ******** END OF REQSTORE    0491
*                                      EXPANSION                     */
*     END;                                                         0492
*   ELSE                                                           0493
*     IF C3SR2=TWO                  /* NO - ID=NMLPB                 */
*       THEN                                                       0493
         B     @RC00470                                            0493
@RF00470 C     C3SR2,@CF00041                                      0493
         BNE   @RF00493                                            0493
*       DO;                                                        0494
*                                                                  0494
*         /***********************************************************/
*         /*                                                         */
*         /* REQSTORE CBID(NMLPB)RPH(C3SR1)CLEAR(YES)SAVE(YES)       */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0495
*         DO;                                                      0495
*                                                                  0495
*/* ATBUILD (ISTDYPAB,ISTATCVT,ISTRPH)                               */
*/* END OF ATBUILD                                                   */
*                                                                  0496
*           RFY                                                    0496
*            (GPR02P,                                              0496
*             GPR03P,                                              0496
*             GPR04P,                                              0496
*             GPR15P) RSTD;                                        0496
*           RFY                                                    0497
*            (GPR01P,                                              0497
*             GPR13P) RSTD;                                        0497
*           GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);     0498
           STM GPR02P,GPR13P,RPHWORK(GPR01P)
*           RFY                                                    0499
*            (GPR01P,                                              0499
*             GPR13P) UNRSTD;                                      0499
*           DO;                     /* LISATCVT                    0500
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*             GPR15P=ATCLCPTR;      /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0501
*           END;                    /* LISATCVT                      */
*           GPR02P=GPR15P->ATCBPDA×'80000000'X;                    0503
         L     GPR02P,ATCBPDA(,GPR15P)                             0503
         O     GPR02P,@CF00959                                     0503
*           DCL                                                    0504
*             1 FMZA0081 FIXED(31) STATIC LOCAL,                   0504
*              2 * FIXED(8) INIT(184),                             0504
*              2 * PTR(24) INIT(0);                                0504
*           GPR03F=FMZA0081;                                       0505
         L     GPR03F,FMZA0081                                     0505
*           GPR04F=19;                                             0506
         LA    GPR04F,19                                           0506
*           GPR15P=GPR15P->ATCSMRQ;                                0507
         L     GPR15P,ATCSMRQ(,GPR15P)                             0507
*           DCL                                                    0508
*             FMZL0081 BASED(GPR15P) LABEL VALUERANGE(*);          0508
*           CALL FMZL0081;                                         0509
         BALR  @14,@15                                             0509
*           RFY                                                    0510
*            (GPR13P) RSTD;                                        0510
*           GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);     0511
           LM GPR02P,GPR13P,RPHWORK(GPR01P)
*           RFY                                                    0512
*            (GPR13P) UNRSTD;                                      0512
*           RFY                                                    0513
*            (GPR02P,                                              0513
*             GPR03P,                                              0513
*             GPR04P,                                              0513
*             GPR15P) UNRSTD;                                      0513
*         END;                      /* ******** END OF REQSTORE    0514
*                                      EXPANSION                     */
*       END;                                                       0515
*     ELSE                                                         0516
*       DO;                         /* GET CSP FOR CONNECTION      0516
*                                      SERVICES                      */
*                                                                  0516
         B     @RC00493                                            0516
@RF00493 DS    0H                                                  0517
*         /***********************************************************/
*         /*                                                         */
*         /* REQSTORE CBID(CSP)RPH(C3SR1)CLEAR(YES)SAVE(YES)         */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0517
*         DO;                                                      0517
*                                                                  0517
*/* ATBUILD (ISTDYPAB,ISTATCVT,ISTRPH)                               */
*/* END OF ATBUILD                                                   */
*                                                                  0518
*           RFY                                                    0518
*            (GPR02P,                                              0518
*             GPR03P,                                              0518
*             GPR04P,                                              0518
*             GPR15P) RSTD;                                        0518
*           RFY                                                    0519
*            (GPR01P,                                              0519
*             GPR13P) RSTD;                                        0519
*           GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);     0520
           STM GPR02P,GPR13P,RPHWORK(GPR01P)
*           RFY                                                    0521
*            (GPR01P,                                              0521
*             GPR13P) UNRSTD;                                      0521
*           DO;                     /* LISATCVT                    0522
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*             GPR15P=ATCLCPTR;      /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0523
*           END;                    /* LISATCVT                      */
*           GPR02P=GPR15P->ATCBPDA×'80000000'X;                    0525
         L     GPR02P,ATCBPDA(,GPR15P)                             0525
         O     GPR02P,@CF00959                                     0525
*           DCL                                                    0526
*             1 FMZA0100 FIXED(31) STATIC LOCAL,                   0526
*              2 * FIXED(8) INIT(184),                             0526
*              2 * PTR(24) INIT(0);                                0526
*           GPR03F=FMZA0100;                                       0527
         L     GPR03F,FMZA0100                                     0527
*           GPR04F=4;                                              0528
         LA    GPR04F,4                                            0528
*           GPR15P=GPR15P->ATCSMRQ;                                0529
         L     GPR15P,ATCSMRQ(,GPR15P)                             0529
*           DCL                                                    0530
*             FMZL0100 BASED(GPR15P) LABEL VALUERANGE(*);          0530
*           CALL FMZL0100;                                         0531
         BALR  @14,@15                                             0531
*           RFY                                                    0532
*            (GPR13P) RSTD;                                        0532
*           GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);     0533
           LM GPR02P,GPR13P,RPHWORK(GPR01P)
*           RFY                                                    0534
*            (GPR13P) UNRSTD;                                      0534
*           RFY                                                    0535
*            (GPR02P,                                              0535
*             GPR03P,                                              0535
*             GPR04P,                                              0535
*             GPR15P) UNRSTD;                                      0535
*         END;                      /* ******** END OF REQSTORE    0536
*                                      EXPANSION                     */
*       END;                                                       0537
*   IF C3SR15=EIGHT                 /* IF RC=8 - WAIT                */
*     THEN                                                         0538
@RC00493 DS    0H                                                  0538
@RC00470 C     C3SR15,@CF00043                                     0538
         BNE   @RF00538                                            0538
*     DO;                                                          0539
*                                                                  0539
*/*  TPWAIT                                                          */
*                                                                  0540
*       DO;                         /* BEGIN TPWAIT GENERATION       */
*         RFY                                                      0541
*          (GPR01P,                                                0541
*           GPR14P,                                                0541
*           GPR15P) RSTD;                                          0541
*         RFY                                                      0542
*          (GPR00P) RSTD;                                          0542
*         GEN(STM   GPR00P,GPR15P,RPHWORK(GPR01P))                 0543
*         REFS(GPR00P,GPR01P,GPR15P) SETS(RPHWORK);                0543
         STM   GPR00P,GPR15P,RPHWORK(GPR01P)
*         RFY                                                      0544
*          (GPR00P) UNRSTD;                                        0544
*         GPR15P=ADDR(LHAA0119);                                   0545
         LA    GPR15P,LHAA0119                                     0545
*         GPR14P=0;                                                0546
         SLR   GPR14P,GPR14P                                       0546
*         GPR15P=GPR15P&'00FFFFFF'X;                               0547
         N     GPR15P,@CF03512                                     0547
*         GPR15P=GPR15P×RPHWT1;                                    0548
         O     GPR15P,@CF00983                                     0548
*         CS(GPR14P,GPR15P,GPR01P->RPHRESMA);                      0549
         CS    GPR14P,@15,RPHRESMA(GPR01P)                         0549
*         BC(7,LHAB0119);                                          0550
*                                                                  0550
         BC    7,LHAB0119                                          0550
*/* TPEXIT  NONE                                                     */
*                                                                  0551
*         DO;                                                      0551
*           RESPECIFY                                              0552
*             GPR15P RSTD;                                         0552
*                                                                  0552
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT)                               */
*/* END OF ATBUILD                                                   */
*                                                                  0553
*           DO;                     /* LISATCVT                    0553
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*             GPR15P=ATCLCPTR;      /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0554
*           END;                    /* LISATCVT                      */
*           RESPECIFY                                              0556
*             GPR00F RSTD;                                         0556
*           GPR00F=0;               /* SET PARAMETER REGISTER TO 0   */
         SLR   GPR00F,GPR00F                                       0557
*           GPR15P=GPR15P->ATCAP31;                                0558
         L     GPR15P,ATCAP31(,GPR15P)                             0558
*           DCL                                                    0559
*             FMZL0124 BASED(GPR15P) LABEL VALUERANGE(*);          0559
*           CALL FMZL0124;                                         0560
         BALR  @14,@15                                             0560
*           RESPECIFY                                              0561
*            (GPR00F,                                              0561
*             GPR15P) UNRSTD;                                      0561
*         END;                      /* **** END OF TPEXIT            */
*LHAB0119:                                                         0563
*         ;                                                        0563
LHAB0119 DS    0H                                                  0564
*         GPR01P->RPHRESMA=0;                                      0564
         SLR   @07,@07                                             0564
         ST    @07,RPHRESMA(,GPR01P)                               0564
*         RFY                                                      0565
*          (GPR00P) RSTD;                                          0565
*LHAA0119:                                                         0566
*         ;                                                        0566
LHAA0119 DS    0H                                                  0567
*         GEN(LM    GPR00P,GPR15P,RPHWORK(GPR01P))                 0567
*         REFS(RPHWORK,GPR01P) SETS(GPR00P,GPR15P);                0567
         LM    GPR00P,GPR15P,RPHWORK(GPR01P)
*         RFY                                                      0568
*          (GPR00P,                                                0568
*           GPR01P,                                                0568
*           GPR14P,                                                0568
*           GPR15P) UNRSTD;                                        0568
*       END;                        /* ****END OF TPWAIT             */
*       C3SR15=ZERO;                /* SET GOOD RETURN CODE          */
         SLR   C3SR15,C3SR15                                       0570
*     END;                                                         0571
*   ELSE                                                           0572
*     ;                                                            0572
@RF00538 DS    0H                                                  0573
*   IF C3SR15<EIGHT                 /* ALL OK ?                      */
*     THEN                                                         0573
         C     C3SR15,@CF00043                                     0573
         BL    @RT00573                                            0573
*     ;                                                            0574
*   ELSE                                                           0575
*     DO;                           /* 'PORT UNAVAILABLE'            */
*       FMCPTR=C3SR1;               /* SAVE RPH ADDR                 */
         LR    FMCPTR,C3SR1                                        0576
*       RFY                                                        0577
*         ISTRPH BASED(FMCPTR);                                    0577
*       C3SR13=ADDR(RPHWORK)-FOUR;  /* REG. SAVEAREA                 */
         LA    C3SR13,RPHWORK(,FMCPTR)                             0578
         SL    C3SR13,@CF00075                                     0578
*/*TPMSG MSGID('857I')MSG((ADDR(RPTCTNM)))PLAREA((ADDR(ISTFSB)))     */
*                                                                  0579
*       DO;                                                        0579
*         DCL                                                      0580
*           REG1134 REG(1) PTR;                                    0580
*         RFY                                                      0581
*          (REG1134) RSTD;                                         0581
*         RFY                                                      0582
*          (EMCR13) RSTD;                                          0582
*         DCL                                                      0583
*           1 * BASED(REG1134),                                    0583
*            2 CMZID134 PTR(31),                                   0583
*            2 *,                                                  0583
*             3 CMZRL134 PTR(8),                                   0583
*             3 CMZRA134 PTR(24) BDY(BYTE),                        0583
*            2 CMZEA134 PTR(31),                                   0583
*            2 CMZVP134 PTR(31);                                   0583
*                                                                  0583
*/*XREGSET  PID('PLAREA')PPARM((ADDR(ISTFSB)))RREG(,REG1134)         */
*                                                                  0584
*         DO;                                                      0584
*           REG1134=ADDR(ISTFSB);   /* SET RREG SYMBOL TO VALUE OF 0585
*                                      PPARM OPERAND                 */
         LR    REG1134,C3SFSB                                      0585
*         END;                      /* XREGSET                       */
*         CMZID134=0;                                              0587
         SLR   @07,@07                                             0587
         ST    @07,CMZID134(,REG1134)                              0587
*         CMZRL134=0;                                              0588
         MVI   CMZRL134(REG1134),X'00'                             0588
*         CMZRA134=0;                                              0589
         STCM  @07,7,CMZRA134(REG1134)                             0589
*         CMZEA134=0;                                              0590
         ST    @07,CMZEA134(,REG1134)                              0590
*         CMZVP134=0;                                              0591
         ST    @07,CMZVP134(,REG1134)                              0591
*         DCL                                                      0592
*           CMZAA134 CHAR(4) INIT('857I');                         0592
*         CMZID134=ADDR(CMZAA134);                                 0593
         LA    @07,CMZAA134                                        0593
         ST    @07,CMZID134(,REG1134)                              0593
*         CMZVP134=ADDR(RPTCTNM);                                  0594
         LA    @07,RPTCTNM(,RDTPTR)                                0594
         ST    @07,CMZVP134(,REG1134)                              0594
*         DCL                                                      0595
*           CMZSA134(18) PTR(31) BASED(EMCR13);                    0595
*         DCL                                                      0596
*           CMZZO134(1) FIXED(31) INIT(0);                         0596
*         CMZSA134(5)=CMZZO134;                                    0597
         L     @07,CMZZO134                                        0597
         ST    @07,CMZSA134+16(,EMCR13)                            0597
*         DCL                                                      0598
*           REG15134 REG(15) PTR;                                  0598
*         RFY                                                      0599
*           REG15134 RSTD;                                         0599
*         DO;                       /* LISATCVT                    0600
*                                      CVTBASE(PAGEABLE,(REG15134))  */
*           REG15134=ATCLCPTR;      /* SET UP ATCVT POINTER          */
         L     REG15134,ATCLCPTR                                   0601
*         END;                      /* LISATCVT                      */
*         DCL                                                      0603
*           CMTA134 BASED(REG15134) ENTRY VALUERANGE(*);           0603
*         REG15134=REG15134->ATCMSGP;                              0604
         L     REG15134,ATCMSGP(,REG15134)                         0604
*         CALL CMTA134;                                            0605
         BALR  @14,@15                                             0605
*         RESPECIFY                                                0606
*          (REG1134,                                               0606
*           REG15134) UNRESTRICTED;                                0606
*         RFY                                                      0607
*          (EMCR13) UNRSTD;                                        0607
*       END;                        /*                       @D31KKDA*/
*       C3SR1=FMCPTR;               /* RESTORE RPH ADDR              */
         LR    C3SR1,FMCPTR                                        0609
*       RFY                                                        0610
*         ISTRPH BASED(C3SR1);                                     0610
*       C3SR15=EIGHT;               /* RC=8                          */
         LA    C3SR15,8                                            0611
*     END;                                                         0612
*   C3SR14=C3SR6;                   /* RESTORE RETURN REG            */
@RT00573 LR    C3SR14,C3SR6                                        0613
*   RFY                                                            0614
*     C3SR6 UNRSTD;                                                0614
*   END GTSTOR;                                                    0615
@EL00002 DS    0H                                                  0615
@EF00002 DS    0H                                                  0615
@ER00002 BR    @14                                                 0615
*                                                                  0616
*/* PURGE ACTIVE USER REQUESTS: SEARCH FMCB CHAIN AND CALL ROUTINE   */
*/*                             TO ISSUE PURGE ON ACTIVE FMCBS       */
*/*     INPUT:                                                       */
*/*            RPHSRPRM  HAS ADDR OF PLCBP                           */
*/*            RDTPTR    HAS ADDR OF PORT ENTRY                      */
*/*            LOCKS     DAF LOCK IS HELD EXCLUSIVE                  */
*/*     OUTPUT: LOCKS     DAF LOCK IS FREED                          */
*/*            FMCPTR    HAS PORT SOL FMCB                           */
*                                                                  0616
*PRGACTUR:                                                         0616
*   PROC OPTIONS(NOSAVEAREA,DONTSAVE);/*                             */
PRGACTUR DS    0H                                                  0617
*   C3SR9=C3SR14;                                                  0617
         LR    C3SR9,C3SR14                                        0617
*   C3SR4=C3SR4×SWITCH;             /* TURN ON SWITCH SEARCH (2) SET
*                                      ITEMS FOR PURGE               */
*                                                                  0618
         O     C3SR4,@CF00041                                      0618
*   /*****************************************************************/
*   /*                                                               */
*   /* PLCPB PARAMETERS                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0619
*   FMCPTR=RPHMAJCB->               /* GET FIRST FMCB                */
*       FMCDNCBA->NCBFMCBA;                                        0619
         L     @11,RPHMAJCB-1(,C3SR1)                              0619
         LA    @11,0(,@11)                                         0619
         L     @11,FMCDNCBA(,@11)                                  0619
         L     FMCPTR,NCBFMCBA(,@11)                               0619
*   DO WHILE C3SR4=TWO×             /* LOOP THRU FMCB'S              */
*         C3SR4=THREE;              /* IF SWITCH OR BOTH ON          */
         B     @DE00620                                            0620
@DL00620 DS    0H                                                  0621
*     IF FMCMODE=ISTYPSOL           /* IS FMCB FOR PORT SOLICITOR    */
*       THEN                                                       0621
         CLC   FMCMODE(8,FMCPTR),ISTYPSOL                          0621
         BNE   @RF00621                                            0621
*       DO;                         /* IF SO - EXIT                  */
*         C3SR4=C3SR4-SWITCH;       /* STOP LOOP                     */
         BCTR  C3SR4,0                                             0623
         BCTR  C3SR4,0                                             0623
*         C3SR2=RPRDAF;             /* GET TERMINAL DAF FROM PORT    */
         LH    C3SR2,RPRDAF(,RDTPTR)                               0624
         N     C3SR2,@CF04392                                      0624
*         DO;                       /* CIDCTL(FINISH) CID(C3SR2)     */
*           RFY                                                    0626
*            (EMCR2,                                               0626
*             EMCR3) RSTD;                                         0626
*           GEN SETS(RPHWORK)                                      0627
*               (STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH);
         STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH
*           EMCR3='00'X;            /* CLEAR EXTRA BITS              */
         SLR   EMCR3,EMCR3                                         0628
*           CALL ATCLCPTR->ATCCDFIN->ISTSDCCR;/* PROCESS REQUEST     */
         L     @11,ATCLCPTR                                        0629
         L     @15,ATCCDFIN(,@11)                                  0629
         BALR  @14,@15                                             0629
*           RFY                                                    0630
*            (EMCR2,                                               0630
*             EMCR3) UNRSTD;                                       0630
*         END;                      /* CIDCTL FREE DAF LOCK          */
*       END;                                                       0632
*     ELSE                                                         0633
*       IF FMCDEVOF=ON×             /* IF CONNECTION NOT AVAILABLE   */
*           FMCCPIP=ON              /* OR CLSDST DOING PURGE         */
*         THEN                                                     0633
         B     @RC00621                                            0633
@RF00621 TM    FMCDEVOF(FMCPTR),B'00010000'                        0633
         BO    @RT00633                                            0633
         TM    FMCCPIP(FMCPTR),B'00001000'                         0633
         BNO   @RF00633                                            0633
@RT00633 DS    0H                                                  0634
*         FMCPTR=FMCFMCBA;          /* SKIP THIS, GET NEXT FMCB      */
         L     FMCPTR,FMCFMCBA(,FMCPTR)                            0634
*       ELSE                                                       0635
*         CALL PRGUSR;              /* GO PURGE FMCB                 */
         B     @RC00633                                            0635
@RF00633 BAL   @14,PRGUSR                                          0635
*   END;                            /* DO WHILE FINISH LOOP          */
@RC00633 DS    0H                                                  0636
@RC00621 DS    0H                                                  0636
@DE00620 C     C3SR4,@CF00041                                      0636
         BE    @DL00620                                            0636
         LA    @11,3                                               0636
         CR    C3SR4,@11                                           0636
         BE    @DL00620                                            0636
*   IF C3SR4=ONE×                   /* SHOULD I FREE PLCPB           */
*       C3SR4=THREE THEN                                           0637
         C     C3SR4,@CF00035                                      0637
         BE    @RT00637                                            0637
         CR    C3SR4,@11                                           0637
         BE    @RT00637                                            0637
*     ;                             /* NO PLCPB TO FREE              */
*   ELSE                                                           0639
*                                                                  0639
*     /***************************************************************/
*     /*                                                             */
*     /* RELSTORE BUFADDR(RPHSRPRM)CLEAR(NO)SAVE(YES)                */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0639
*     DO;                                                          0639
*                                                                  0639
*/* ATBUILD (ISTATCVT,ISTRPH)                                        */
*/* END OF ATBUILD                                                   */
*                                                                  0640
*       RFY                                                        0640
*        (GPR02P,                                                  0640
*         GPR03P,                                                  0640
*         GPR04P,                                                  0640
*         GPR15P) RSTD;                                            0640
*       RFY                                                        0641
*        (GPR01P,                                                  0641
*         GPR13P) RSTD;                                            0641
*       GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);         0642
          STM GPR02P,GPR13P,RPHWORK(GPR01P)
*       RFY                                                        0643
*         GPR13P UNRSTD;                                           0643
*       GPR04P=RPHSRPRM;                                           0644
         L     GPR04P,RPHSRPRM(,C3SR1)                             0644
*       DCL                                                        0645
*         1 FMZA0147 FIXED(31) STATIC LOCAL,                       0645
*          2 * FIXED(8) INIT(64),                                  0645
*          2 * PTR(24) INIT(0);                                    0645
*       GPR03F=FMZA0147;                                           0646
         L     GPR03F,FMZA0147                                     0646
*       DO;                         /* LISATCVT                    0647
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*         GPR15P=ATCLCPTR;          /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0648
*       END;                        /* LISATCVT                      */
*       GPR02P=GPR15P->ATCBPDA;                                    0650
         L     GPR02P,ATCBPDA(,GPR15P)                             0650
*       GPR15P=GPR15P->ATCSMRS;                                    0651
         L     GPR15P,ATCSMRS(,GPR15P)                             0651
*       DCL                                                        0652
*         FMZL0147 BASED(GPR15P) LABEL VALUERANGE(*);              0652
*       CALL FMZL0147;                                             0653
         BALR  @14,@15                                             0653
*       RFY                                                        0654
*         GPR13P RSTD;                                             0654
*       GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);         0655
          LM GPR02P,GPR13P,RPHWORK(GPR01P)
*       RFY                                                        0656
*        (GPR01P,                                                  0656
*         GPR13P) UNRSTD;                                          0656
*       RFY                                                        0657
*        (GPR02P,                                                  0657
*         GPR03P,                                                  0657
*         GPR04P,                                                  0657
*         GPR15P) UNRSTD;                                          0657
*     END;                          /* *********END OF RELSTORE    0658
*                                      EXPANSION*********            */
*/* RESTORE 14                                                       */
*                                                                  0659
*   C3SR14=C3SR9;                                                  0659
@RT00637 LR    C3SR14,C3SR9                                        0659
*   END PRGACTUR;                                                  0660
@EL00003 DS    0H                                                  0660
@EF00003 DS    0H                                                  0660
@ER00003 BR    @14                                                 0660
*                                                                  0661
*/* PURGE USER REQUESTS: ISSUE 'PURGE' TO CLEAN UP USER              */
*/*                             FMCB'S                               */
*/*     INPUT: FLAGS C3SR4 = 00 - NO FLAGS                           */
*/*                        = 01 - DONTPURG = ON                      */
*/*                        = 10 - SWITCH = ON                        */
*/*                        = 11 - BOTH = ON                          */
*/*            RPHSRPRM  HAS ADDR OF PLCBP                           */
*/*            FMCPTR    HAS ADDR OF TERMINAL FMCB                   */
*/*            LOCKS     DAF LOCK IS HELD EXCLUSIVE                  */
*/*     OUTPUT:   FMCDEVOF - BIT SET ON IN TERMINAL FMCB             */
*                                                                  0661
*PRGUSR:                                                           0661
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0661
PRGUSR   DS    0H                                                  0662
*   RFY                                                            0662
*     C3SR7 RSTD;                                                  0662
*   C3SR7=C3SR14;                   /* SAVE RETURN ADDR              */
         LR    C3SR7,C3SR14                                        0663
*   FMCDEVOF=ON;                    /* INDC. DEVICE OFFLINE          */
         OI    FMCDEVOF(FMCPTR),B'00010000'                        0664
*   IF C3SR4=ONE×                   /* IS PURGE TO BE BYPASSED       */
*       C3SR4=THREE×                /*                       @ZA13626*/
*       FMCCPIP=ON                  /* CLSDST IN PROC        @ZA13626*/
*     THEN                                                         0665
         C     C3SR4,@CF00035                                      0665
         BE    @RT00665                                            0665
         C     C3SR4,@CF00039                                      0665
         BE    @RT00665                                            0665
         TM    FMCCPIP(FMCPTR),B'00001000'                         0665
         BNO   @RF00665                                            0665
@RT00665 DS    0H                                                  0666
*     C3SR15=ZERO;                  /* YES                           */
         SLR   C3SR15,C3SR15                                       0666
*   ELSE                                                           0667
*     DO;                                                          0667
         B     @RC00665                                            0667
@RF00665 DS    0H                                                  0668
*       RPHMAJCB->FMCELKST=OFF;     /* SET OFF ERROR LOCK FLAG IN  0668
*                                      PORTS FMCB-TPPURGE WILL DO THE
*                                      RESET PURGE TERMINAL FMCB     */
         L     @06,RPHMAJCB-1(,C3SR1)                              0668
         LA    @06,0(,@06)                                         0668
         NI    FMCELKST(@06),B'01111111'                           0668
*       LCPSAF=FMCSAF;              /* PUT SAF IN PLCPB              */
         L     @06,RPHSRPRM(,C3SR1)                                0669
         MVC   LCPSAF(2,@06),FMCSAF(FMCPTR)                        0669
*       LCPDAF=RPRDAF;              /* PUT DAF IN PLCPB              */
         MVC   LCPDAF(2,@06),RPRDAF(RDTPTR)                        0670
*                                                                  0671
*/*TPPURGE  (RPHSRPRM,FMCPAB1,EIGHT)  NRESET                         */
*                                                                  0671
*       DO;                         /* DECLARE AND RESTRICT REGS     */
*         RFY                                                      0672
*          (GPR14F,                                                0672
*           GPR15F,                                                0672
*           GPR00F,                                                0672
*           GPR01F,                                                0672
*           GPR08F,                                                0672
*           GPR09F) RSTD;           /* 14,15,0,1,2,3,4,5,6,7,8,9     */
*/* ATBUILD (ISTRPH)                                                 */
*/* END OF ATBUILD                                                   */
*                                                                  0673
*         GEN REFS(GPR14F,GPR09F) SETS(GPR01P,RPHWORK,ISTRPH);     0673
         STM GPR14F,GPR09F,RPHWORK-ISTRPH(GPR01F)
*         GPR09P=GPR01P;                                           0674
*                                                                  0674
         LR    GPR09P,GPR01P                                       0674
*/* ATBUILD (ISTLCCW,ISTLCPB,ISTPLCPB)                               */
*/* END OF ATBUILD                                                   */
*                                                                  0675
*                                   /* BASE LCPB TEMPLATE AND PLCPB
*                                      TEMPLATE ON LCPB POINTER    0675
*                                      PASSED IN MACLIST             */
*         DCL                                                      0675
*           PNTR0163 REGISTER(8) POINTER(31);                      0675
*         PNTR0163=RPHSRPRM;        /* SET POINTER VARIABLE TO VALUE
*                                      OF POINTER PASSED IN MACLIST  */
         L     @06,RPHSRPRM(,C3SR1)                                0676
         LR    PNTR0163,@06                                        0676
*         PNTR0163->LCPTYPE=PLCPTYPE;/* INIT TYPE CODE FIELD         */
         MVI   LCPTYPE(PNTR0163),X'28'                             0677
*         PNTR0163->LCPLNGTH=LENGTH(PNTR0163->ISTPLCPB);/* INIT    0678
*                                      LENGTH FIELD WITH LENGTH OF 0678
*                                      PASSED PLCPB                  */
         LA    @11,64                                              0678
         STC   @11,LCPLNGTH(,PNTR0163)                             0678
*         PNTR0163->LCPNXLCW=ADDR(PNTR0163->PLCLCCW);/* INIT       0679
*                                      ADDR-NEXT-LCCW FIELD WITH ADDR
*                                      OF NEXT LCCW                  */
         LA    @11,PLCLCCW(,PNTR0163)                              0679
         ST    @11,LCPNXLCW(,PNTR0163)                             0679
*         PNTR0163->LCPMNRCD=EIGHT; /* INIT LCP-MINOR-REJECTION- CODE
*                                      FIELD WITH RETURN CODE PASSED
*                                      IN MACLIST                    */
         MVI   LCPMNRCD(PNTR0163),X'08'                            0680
*         PNTR0163=PNTR0163->LCPNXLCW;/* BASE LCCW TEMPLATE ON PLCCW
*                                      POINTER IN LCPB               */
         LR    PNTR0163,@11                                        0681
*         PNTR0163->LCCWOP=LCCWPRGE;/* SET LCCW OP CODE TO PURGE     */
         MVI   LCCWOP(PNTR0163),X'6B'                              0682
*         PNTR0163->LCCWFLAG=0;     /* SET LCCW FLAGS TO ZEROES      */
         MVI   LCCWFLAG(PNTR0163),X'00'                            0683
*         PNTR0163->LCCWCNT=0;      /* SET LCCW DATA COUNT TO 0      */
         SLR   @11,@11                                             0684
         STH   @11,LCCWCNT(,PNTR0163)                              0684
*         PNTR0163->LCCWDATA=GPR01P×'80000000'X;/* SET HIGH-ORDER BIT
*                                      OF RPH ADDR PASSED VIA REG 1
*                                      TO 1 TO INDICATE RPH AND LOAD
*                                      INTO LCCW DATA ADDR FIELD     */
         LR    @10,GPR01P                                          0685
         O     @10,@CF00959                                        0685
         ST    @10,LCCWDATA(,PNTR0163)                             0685
*/*  TPQUE (RPHSRPRM,FMCPAB1) NORM NSTR                              */
*                                                                  0686
*         DO;                                                      0686
*           RFY                                                    0687
*            (GPR00P,                                              0687
*             GPR01P,                                              0687
*             GPR04P,                                              0687
*             GPR05P,                                              0687
*             GPR15P) RSTD;                                        0687
*           GPR00P=0;                                              0688
         LR    GPR00P,@11                                          0688
*           GPR15P=ADDR(FMCPAB1);   /* HOLD PAB PTR                  */
         LA    GPR15P,FMCPAB1(,FMCPTR)                             0689
*           GPR04P=RPHSRPRM;        /* WORK ELE PTR                  */
         LR    GPR04P,@06                                          0690
*           GPR05P=GPR15P;          /* PASS PAB PTR                  */
         LR    GPR05P,GPR15P                                       0691
*           CALL ATCLCPTR->ATCAP37->ISTAPC37;                      0692
         L     @06,ATCLCPTR                                        0692
         L     @15,ATCAP37(,@06)                                   0692
         BALR  @14,@15                                             0692
*           GEN(NOPR  8)                                           0693
*           NOSETS NOREFS;                                         0693
         NOPR  8
*           RFY                                                    0694
*            (GPR00P,                                              0694
*             GPR01P,                                              0694
*             GPR04P,                                              0694
*             GPR05P,                                              0694
*             GPR15P) UNRSTD;                                      0694
*         END;                      /* *** END OF TPQUE GENERATION   */
*         GEN SETS(GPR14F,GPR15F,GPR00F,GPR01F,GPR02F,GPR03F,GPR04F,
*             GPR05F,GPR06F,GPR07F,GPR08F,GPR09F) REFS(RPHWORK,ISTRPH,
*             GPR09F);                                             0696
         LM  GPR14F,GPR09F,RPHWORK-ISTRPH(GPR09F)
*         RFY                                                      0697
*          (GPR14F,                                                0697
*           GPR15F,                                                0697
*           GPR00F,                                                0697
*           GPR01F,                                                0697
*           GPR08F,                                                0697
*           GPR09F) UNRSTD;         /* UNRESTRICT REGISTERS          */
*       END;                        /* TPPURGE               @ZA19880*/
*       C3SR2=RPRDAF;                                              0699
         LH    C3SR2,RPRDAF(,RDTPTR)                               0699
         N     C3SR2,@CF04392                                      0699
*       ;                           /* GET TERMINAL DAF FROM PORT    */
*       DO;                         /* CIDCTL(FINISH) CID(C3SR2)     */
*         RFY                                                      0702
*          (EMCR2,                                                 0702
*           EMCR3) RSTD;                                           0702
*         GEN SETS(RPHWORK)                                        0703
*             (STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH); 0703
         STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH
*         EMCR3='00'X;              /* CLEAR EXTRA BITS              */
         SLR   EMCR3,EMCR3                                         0704
*         CALL ATCLCPTR->ATCCDFIN->ISTSDCCR;/* PROCESS REQUEST       */
         L     @06,ATCLCPTR                                        0705
         L     @15,ATCCDFIN(,@06)                                  0705
         BALR  @14,@15                                             0705
*         RFY                                                      0706
*          (EMCR2,                                                 0706
*           EMCR3) UNRSTD;                                         0706
*       END;                        /* CIDCTL FREE TERMINL LOK       */
*/*  TPWAIT                                                          */
*                                                                  0708
*       DO;                         /* BEGIN TPWAIT GENERATION       */
*         RFY                                                      0709
*          (GPR01P,                                                0709
*           GPR14P,                                                0709
*           GPR15P) RSTD;                                          0709
*         RFY                                                      0710
*          (GPR00P) RSTD;                                          0710
*         GEN(STM   GPR00P,GPR15P,RPHWORK(GPR01P))                 0711
*         REFS(GPR00P,GPR01P,GPR15P) SETS(RPHWORK);                0711
         STM   GPR00P,GPR15P,RPHWORK(GPR01P)
*         RFY                                                      0712
*          (GPR00P) UNRSTD;                                        0712
*         GPR15P=ADDR(LHAA0176);                                   0713
         LA    GPR15P,LHAA0176                                     0713
*         GPR14P=0;                                                0714
         SLR   GPR14P,GPR14P                                       0714
*         GPR15P=GPR15P&'00FFFFFF'X;                               0715
         N     GPR15P,@CF03512                                     0715
*         GPR15P=GPR15P×RPHWT1;                                    0716
         O     GPR15P,@CF00983                                     0716
*         CS(GPR14P,GPR15P,GPR01P->RPHRESMA);                      0717
         CS    GPR14P,@15,RPHRESMA(GPR01P)                         0717
*         BC(7,LHAB0176);                                          0718
*                                                                  0718
         BC    7,LHAB0176                                          0718
*/* TPEXIT  NONE                                                     */
*                                                                  0719
*         DO;                                                      0719
*           RESPECIFY                                              0720
*             GPR15P RSTD;                                         0720
*                                                                  0720
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT)                               */
*/* END OF ATBUILD                                                   */
*                                                                  0721
*           DO;                     /* LISATCVT                    0721
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*             GPR15P=ATCLCPTR;      /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0722
*           END;                    /* LISATCVT                      */
*           RESPECIFY                                              0724
*             GPR00F RSTD;                                         0724
*           GPR00F=0;               /* SET PARAMETER REGISTER TO 0   */
         SLR   GPR00F,GPR00F                                       0725
*           GPR15P=GPR15P->ATCAP31;                                0726
         L     GPR15P,ATCAP31(,GPR15P)                             0726
*           DCL                                                    0727
*             FMZL0181 BASED(GPR15P) LABEL VALUERANGE(*);          0727
*           CALL FMZL0181;                                         0728
         BALR  @14,@15                                             0728
*           RESPECIFY                                              0729
*            (GPR00F,                                              0729
*             GPR15P) UNRSTD;                                      0729
*         END;                      /* **** END OF TPEXIT            */
*LHAB0176:                                                         0731
*         ;                                                        0731
LHAB0176 DS    0H                                                  0732
*         GPR01P->RPHRESMA=0;                                      0732
         SLR   @06,@06                                             0732
         ST    @06,RPHRESMA(,GPR01P)                               0732
*         RFY                                                      0733
*          (GPR00P) RSTD;                                          0733
*LHAA0176:                                                         0734
*         ;                                                        0734
LHAA0176 DS    0H                                                  0735
*         GEN(LM    GPR00P,GPR15P,RPHWORK(GPR01P))                 0735
*         REFS(RPHWORK,GPR01P) SETS(GPR00P,GPR15P);                0735
         LM    GPR00P,GPR15P,RPHWORK(GPR01P)
*         RFY                                                      0736
*          (GPR00P,                                                0736
*           GPR01P,                                                0736
*           GPR14P,                                                0736
*           GPR15P) UNRSTD;                                        0736
*       END;                        /* ****END OF TPWAIT WAIT        */
*       RFY                                                        0738
*         ISTFSB BASED(C3SR2);      /*                       @ZA10420*/
*       C3SR2=RPHWEA;               /* FREE RESET-DISCT FSB  @ZA10420*/
         L     C3SR2,RPHWEA(,C3SR1)                                0739
*       EVAL(ADDR(ISTFDB)-FDBOFSET)->FSBC3S=FDBFDBA;/*       @ZA10420*/
         LA    @06,32                                              0740
         ALR   @06,C3SR2                                           0740
         LH    @11,FDBOFSET(,@06)                                  0740
         LR    @10,@06                                             0740
         SLR   @10,@11                                             0740
         L     @00,FDBFDBA(,@06)                                   0740
         ST    @00,FSBC3S(,@10)                                    0740
*       C3SR2=(ADDR(ISTFDB)-FDBOFSET);/*                     @ZA10420*/
*                                                                  0741
         SLR   @06,@11                                             0741
         LR    C3SR2,@06                                           0741
*       /*************************************************************/
*       /*                                                           */
*       /* RELSTORE BUFADDR(C3SR2)CLEAR(NO)SAVE(YES)                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0742
*       DO;                                                        0742
*                                                                  0742
*/* ATBUILD (ISTATCVT,ISTRPH)                                        */
*/* END OF ATBUILD                                                   */
*                                                                  0743
*         RFY                                                      0743
*          (GPR02P,                                                0743
*           GPR03P,                                                0743
*           GPR04P,                                                0743
*           GPR15P) RSTD;                                          0743
*         RFY                                                      0744
*          (GPR01P,                                                0744
*           GPR13P) RSTD;                                          0744
*         GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);       0745
          STM GPR02P,GPR13P,RPHWORK(GPR01P)
*         RFY                                                      0746
*           GPR13P UNRSTD;                                         0746
*         GPR04P=C3SR2;                                            0747
         LR    GPR04P,C3SR2                                        0747
*         DCL                                                      0748
*           1 FMZA0191 FIXED(31) STATIC LOCAL,                     0748
*            2 * FIXED(8) INIT(64),                                0748
*            2 * PTR(24) INIT(0);                                  0748
*         GPR03F=FMZA0191;                                         0749
         L     GPR03F,FMZA0191                                     0749
*         DO;                       /* LISATCVT                    0750
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*           GPR15P=ATCLCPTR;        /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0751
*         END;                      /* LISATCVT                      */
*         GPR02P=GPR15P->ATCBPDA;                                  0753
         L     GPR02P,ATCBPDA(,GPR15P)                             0753
*         GPR15P=GPR15P->ATCSMRS;                                  0754
         L     GPR15P,ATCSMRS(,GPR15P)                             0754
*         DCL                                                      0755
*           FMZL0191 BASED(GPR15P) LABEL VALUERANGE(*);            0755
*         CALL FMZL0191;                                           0756
         BALR  @14,@15                                             0756
*         RFY                                                      0757
*           GPR13P RSTD;                                           0757
*         GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);       0758
          LM GPR02P,GPR13P,RPHWORK(GPR01P)
*         RFY                                                      0759
*          (GPR01P,                                                0759
*           GPR13P) UNRSTD;                                        0759
*         RFY                                                      0760
*          (GPR02P,                                                0760
*           GPR03P,                                                0760
*           GPR04P,                                                0760
*           GPR15P) UNRSTD;                                        0760
*       END;                        /* *********END OF RELSTORE    0761
*                                      EXPANSION*********    @ZA10420*/
*       RFY                                                        0762
*         ISTFSB BASED(C3SFSB);     /*                       @ZA10420*/
*       C3SR2=RPRDAF;               /*                       @ZA10420*/
         LH    C3SR2,RPRDAF(,RDTPTR)                               0763
         N     C3SR2,@CF04392                                      0763
*       DO;                         /* CIDCTL(FIND)                0764
*                                      CID(C3SR2)LOCK(XCLUSIVE)      */
*         RFY                                                      0765
*          (EMCR2,                                                 0765
*           EMCR3) RSTD;                                           0765
*         GEN SETS(RPHWORK)                                        0766
*             (STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH); 0766
         STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH
*         EMCR3='00'X;              /* CLEAR EXTRA BITS              */
         SLR   EMCR3,EMCR3                                         0767
*         EMCR3='02'X;              /* INDICATE EXCLUSIVE LOCK       */
         LA    EMCR3,2                                             0768
*         CALL ATCLCPTR->ATCCDFND->ISTSDCCF;/* PROCESS REQUEST       */
         L     @06,ATCLCPTR                                        0769
         L     @15,ATCCDFND(,@06)                                  0769
         BALR  @14,@15                                             0769
*         RFY                                                      0770
*          (EMCR2,                                                 0770
*           EMCR3) UNRSTD;                                         0770
*       END;                        /* CIDCTL                        */
*       IF C3SR15=ZERO              /* IF GOOD - CONTINUE            */
*         THEN                                                     0772
         LTR   C3SR15,C3SR15                                       0772
         BNZ   @RF00772                                            0772
*         FMCPTR=RPHMAJCB->         /* POINT TO 1ST FMCB             */
*             FMCDNCBA->NCBFMCBA;                                  0773
         L     @06,RPHMAJCB-1(,C3SR1)                              0773
         LA    @06,0(,@06)                                         0773
         L     @06,FMCDNCBA(,@06)                                  0773
         L     FMCPTR,NCBFMCBA(,@06)                               0773
*       ELSE                                                       0774
*         DO;                       /* GET RDT NAME FROM PORT ENT.   */
         B     @RC00772                                            0774
@RF00772 DS    0H                                                  0775
*           RPHMAJCB->FMCPCLSD=ON;                                 0775
         L     @06,RPHMAJCB-1(,C3SR1)                              0775
         LA    @06,0(,@06)                                         0775
         OI    FMCPCLSD(@06),B'00010000'                           0775
*           C3SR4=C3SR4-SWITCH;     /* STOP LOOP THRU FMCBS          */
         BCTR  C3SR4,0                                             0776
         BCTR  C3SR4,0                                             0776
*           C3SR13=ADDR(RPHWORK)-FOUR;/* REG. SAVEAREA               */
         LA    C3SR13,RPHWORK(,C3SR1)                              0777
         SL    C3SR13,@CF00075                                     0777
*           C3SR2=C3SR1;            /* SAVE RPH ADDR                 */
         LR    C3SR2,C3SR1                                         0778
*           RFY                                                    0779
*             ISTRPH BASED(C3SR2);                                 0779
*                                                                  0779
*/*TPMSG MSGID('855I')MSG((ADDR(RPTCTNM)))PLAREA((ADDR(LCPLCCW)))    */
*                                                                  0780
*           DO;                                                    0780
*             DCL                                                  0781
*               REG1211 REG(1) PTR;                                0781
*             RFY                                                  0782
*              (REG1211) RSTD;                                     0782
*             RFY                                                  0783
*              (EMCR13) RSTD;                                      0783
*             DCL                                                  0784
*               1 * BASED(REG1211),                                0784
*                2 CMZID211 PTR(31),                               0784
*                2 *,                                              0784
*                 3 CMZRL211 PTR(8),                               0784
*                 3 CMZRA211 PTR(24) BDY(BYTE),                    0784
*                2 CMZEA211 PTR(31),                               0784
*                2 CMZVP211 PTR(31);                               0784
*                                                                  0784
*/*XREGSET  PID('PLAREA')PPARM((ADDR(LCPLCCW)))RREG(,REG1211)        */
*                                                                  0785
*             DO;                                                  0785
*               REG1211=ADDR(LCPLCCW);/* SET RREG SYMBOL TO VALUE OF
*                                      PPARM OPERAND                 */
         L     REG1211,RPHSRPRM(,C3SR2)                            0786
         LA    REG1211,LCPLCCW(,REG1211)                           0786
*             END;                  /* XREGSET                       */
*             CMZID211=0;                                          0788
         SLR   @06,@06                                             0788
         ST    @06,CMZID211(,REG1211)                              0788
*             CMZRL211=0;                                          0789
         MVI   CMZRL211(REG1211),X'00'                             0789
*             CMZRA211=0;                                          0790
         STCM  @06,7,CMZRA211(REG1211)                             0790
*             CMZEA211=0;                                          0791
         ST    @06,CMZEA211(,REG1211)                              0791
*             CMZVP211=0;                                          0792
         ST    @06,CMZVP211(,REG1211)                              0792
*             DCL                                                  0793
*               CMZAA211 CHAR(4) INIT('855I');                     0793
*             CMZID211=ADDR(CMZAA211);                             0794
         LA    @06,CMZAA211                                        0794
         ST    @06,CMZID211(,REG1211)                              0794
*             CMZVP211=ADDR(RPTCTNM);                              0795
         LA    @06,RPTCTNM(,RDTPTR)                                0795
         ST    @06,CMZVP211(,REG1211)                              0795
*             DCL                                                  0796
*               CMZSA211(18) PTR(31) BASED(EMCR13);                0796
*             DCL                                                  0797
*               CMZZO211(1) FIXED(31) INIT(0);                     0797
*             CMZSA211(5)=CMZZO211;                                0798
         L     @06,CMZZO211                                        0798
         ST    @06,CMZSA211+16(,EMCR13)                            0798
*             DCL                                                  0799
*               REG15211 REG(15) PTR;                              0799
*             RFY                                                  0800
*               REG15211 RSTD;                                     0800
*             DO;                   /* LISATCVT                    0801
*                                      CVTBASE(PAGEABLE,(REG15211))  */
*               REG15211=ATCLCPTR;  /* SET UP ATCVT POINTER          */
         L     REG15211,ATCLCPTR                                   0802
*             END;                  /* LISATCVT                      */
*             DCL                                                  0804
*               CMTA211 BASED(REG15211) ENTRY VALUERANGE(*);       0804
*             REG15211=REG15211->ATCMSGP;                          0805
         L     REG15211,ATCMSGP(,REG15211)                         0805
*             CALL CMTA211;                                        0806
         BALR  @14,@15                                             0806
*             RESPECIFY                                            0807
*              (REG1211,                                           0807
*               REG15211) UNRESTRICTED;                            0807
*             RFY                                                  0808
*              (EMCR13) UNRSTD;                                    0808
*           END;                                                   0809
*           C3SR1=C3SR2;            /* RESTORE RPH ADDR              */
         LR    C3SR1,C3SR2                                         0810
*           RFY                                                    0811
*             ISTRPH BASED(C3SR1);                                 0811
*         END;                                                     0812
*     END;                                                         0813
@RC00772 DS    0H                                                  0814
*   C3SR14=C3SR7;                   /* RESTORE RETURN ADDR           */
@RC00665 LR    C3SR14,C3SR7                                        0814
*   RFY                                                            0815
*     C3SR7 UNRSTD;                                                0815
*   END PRGUSR;                                                    0816
@EL00004 DS    0H                                                  0816
@EF00004 DS    0H                                                  0816
@ER00004 BR    @14                                                 0816
*                                                                  0817
*/*       END CONTROL: GET  STORAGE AND BUILD AN NMLPB WITH          */
*/*                    AN ' END CONTROL'                             */
*/*                    COMMAND TO DRIVE PORT SOLICITOR               */
*/*                    OUTBOUND PAB. THIS WILL COMPLETE              */
*/*                    ACTIVITY FOR DEVICE DISCONNECT                */
*/*          INPUT:  R1 -  HAS ADDR OF RPH                           */
*/*                  RDTPTR -  HAS ADDR OF PORT ENTRY                */
*/*          OUTPUT: IF R15 = 0                                      */
*/*                  COMMAND 'END CONTROL' IS QUEUED                 */
*/*                  ON PSOP                                         */
*/*                     R15 ^= 0                                     */
*/*                  COMMAND QUEUING DID NOT OCCUR                   */
*                                                                  0817
*ENDCTL:                                                           0817
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0817
ENDCTL   DS    0H                                                  0818
*   C3SR9=C3SR14;                                                  0818
         LR    C3SR9,C3SR14                                        0818
*   C3SR2=TWO;                      /* IND. AN 'NMLPB'               */
         LA    C3SR2,2                                             0819
*   CALL GTSTOR;                    /* CALL RTN. TO GET STORAGE      */
         BAL   @14,GTSTOR                                          0820
*   IF C3SR15>FOUR                  /* STORAGE AVAILABLE ?           */
*     THEN                                                         0821
         C     C3SR15,@CF00075                                     0821
         BH    @RT00821                                            0821
*     ;                             /* NO - RETURN                   */
*   ELSE                                                           0823
*     DO;                           /* YES - RHPSRPRM HAS ADDR OF  0823
*                                      NMLPB                         */
*       LCPTYPE=NMLPBTYP;           /* SET NMLPB TYPE                */
         L     @11,RPHSRPRM(,C3SR1)                                0824
         MVI   LCPTYPE(@11),X'27'                                  0824
*       LCPLNGTH=LENGTH(ISTNMLPB);  /* SET LCPB LENGTH               */
         MVI   LCPLNGTH(@11),X'64'                                 0825
*       LCPSAF=FMCSAF;              /* SET SAF TO THAT IN FMCB       */
         MVC   LCPSAF(2,@11),FMCSAF(FMCPTR)                        0826
*       LCPDAF=RPRDAF;              /* SET PORTS DAF                 */
         MVC   LCPDAF(2,@11),RPRDAF(RDTPTR)                        0827
*       NMRDTEA=RPTATERM;           /* COPY ACTIVE TERMINAL ADDR TO
*                                      NMLPB                         */
         L     @00,RPTATERM(,RDTPTR)                               0828
         ST    @00,NMRDTEA(,@11)                                   0828
*       NMFNCTCD=NMFCD04;           /* COMMAND CODE = END CONTROL  0829
*                                      QUEUE AND SCHED. ON PSOP      */
         MVI   NMFNCTCD(@11),X'04'                                 0829
*       FMCPTR=RPHMAJCB;            /* POINT TO PS FMCB              */
         L     FMCPTR,RPHMAJCB-1(,C3SR1)                           0830
         LA    FMCPTR,0(,FMCPTR)                                   0830
*/*  TPQUE (RPHSRPRM,FMCPAB1) NORM                                   */
*                                                                  0831
*       DO;                                                        0831
*         RFY                                                      0832
*          (GPR00P,                                                0832
*           GPR01P,                                                0832
*           GPR04P,                                                0832
*           GPR05P,                                                0832
*           GPR15P) RSTD;                                          0832
*         GEN REFS(GPR01P) SETS(RPHWORK)                           0833
*             (STM GPR02P,GPR08P,RPHWORK(GPR01P));                 0833
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*         GPR00P=0;                                                0834
         SLR   GPR00P,GPR00P                                       0834
*         GPR15P=ADDR(FMCPAB1);     /* HOLD PAB PTR                  */
         LA    GPR15P,FMCPAB1(,FMCPTR)                             0835
*         GPR04P=RPHSRPRM;          /* WORK ELE PTR                  */
         L     GPR04P,RPHSRPRM(,C3SR1)                             0836
*         GPR05P=GPR15P;            /* PASS PAB PTR                  */
         LR    GPR05P,GPR15P                                       0837
*         CALL ATCLCPTR->ATCAP37->ISTAPC37;                        0838
         L     @11,ATCLCPTR                                        0838
         L     @15,ATCAP37(,@11)                                   0838
         BALR  @14,@15                                             0838
*         GEN(NOPR  0)                                             0839
*         NOSETS NOREFS;                                           0839
         NOPR  0
*         RFY                                                      0840
*          (GPR00P,                                                0840
*           GPR01P,                                                0840
*           GPR04P,                                                0840
*           GPR05P,                                                0840
*           GPR15P) UNRSTD;                                        0840
*       END;                        /* *** END OF TPQUE GENERATION   */
*     END;                                                         0842
*   C3SR14=C3SR9;                   /* RESTORE RETURN ADDR           */
@RT00821 LR    C3SR14,C3SR9                                        0843
*   END ENDCTL;                                                    0844
@EL00005 DS    0H                                                  0844
@EF00005 DS    0H                                                  0844
@ER00005 BR    @14                                                 0844
*                                                                  0845
*/*****************************************************************  */
*/*                                                                  */
*/*  CANCEL LOGONS-GETS A CSP, SAVE AREA, AND CSL FOR CONN SERVICES  */
*/*                AND HOLDS THE RDT LOCK EXCLUSIVE. CALLS           */
*/*                CON. SER.  CODE=7 TO CANCEL ANY APPLICATIONS ON   */
*/*                THE LOGON Q SINCE TERM IS PHYSICALLY DISCONNECTED */
*/*                THEN IT FREES UP STORAGE IT GOT FOR CSP AND SA.   */
*/*     INPUT      RDTPTR SHOULD CONTAIN ADDR OF PORT RDTE           */
*/*     OUTPUT     C3SR4 WILL CONTAIN 0 OR 8 ON EXIT                 */
*/*                MSG 857 IF GETSTOR FAILED                         */
*/*                MSG 859 FOR ANY OTHER ERRORS                      */
*/*                                                                  */
*/*                 THIS ROUTINE CODED BY @DL30HKA                   */
*/*****************************************************************  */
*                                                                  0845
*C3SCAN:                                                           0845
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0845
C3SCAN   DS    0H                                                  0846
*   C3SR9=C3SR14;                   /* SAVE RETURN ADDR              */
         LR    C3SR9,C3SR14                                        0846
*   RFY                                                            0847
*     C3SR7 RSTD;                                                  0847
*   DO;                             /* LISATCVT                    0848
*                                      CVTBASE(PAGEABLE,(C3SR7))     */
*     C3SR7=ATCLCPTR;               /* SET UP ATCVT POINTER          */
         L     C3SR7,ATCLCPTR                                      0849
*   END;                            /* LISATCVT ADDR CVT FOR LOCKS   */
*   C3SR4=EIGHT;                    /* IF 8 WHEN DONE,SEND ERRORMSG  */
         LA    C3SR4,8                                             0851
*   C3SR2=THREE;                    /* GET CSP FOR CON SER           */
         LA    C3SR2,3                                             0852
*   CALL GTSTOR;                    /* RTN TO GET STORAGE            */
         BAL   @14,GTSTOR                                          0853
*   IF C3SR15<EIGHT THEN                                           0854
         C     C3SR15,@CF00043                                     0854
         BNL   @RF00854                                            0854
*     DO;                           /* GOT STORAGE FOR CSP           */
*       RPHCSPA=RPHSRPRM;           /* PUT ADDR INTO RPH-NOTE-     0856
*                                      OVERLAYS RPHWEA FIELD CON SER
*                                      NEEDS 3-18WORD SAVE AREAS & 0856
*                                      CSL                           */
*                                                                  0856
         L     @06,RPHSRPRM(,C3SR1)                                0856
         ST    @06,RPHCSPA(,C3SR1)                                 0856
*       /*************************************************************/
*       /*                                                           */
*       /* GETSTOR TYPE(PAGEABLE)ADSPACE(COMMON)SIZE(SASIZE)KEY(VTAM)*/
*       /* SAVE(YES)CLEAR(YES)                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0857
*       DO;                                                        0857
*                                                                  0857
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT,ISTRPH)                        */
*/* END OF ATBUILD                                                   */
*                                                                  0858
*         RFY                                                      0858
*          (GPR00P,                                                0858
*           GPR01P,                                                0858
*           GPR02P,                                                0858
*           GPR03P) RSTD;                                          0858
*         RFY                                                      0859
*           ISTRPH BASED(GPR01P);                                  0859
*         GEN REFS(GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,
*             GPR09P,GPR10P,GPR11P,GPR12P,GPR13P) SETS(RPHWORK);   0860
         STM   GPR02P,GPR13P,RPHWORK(GPR01P)        SAVE REGISTERS
*         GPR00F=SASIZE;            /* SIZE IN REG0                  */
         L     GPR00F,SASIZE                                       0861
*         DCL                                                      0862
*           1 CMZA0231 FIXED(31) STATIC LOCAL,                     0862
*            2 * FIXED(8) INIT(96), /* OPTION FLAGS                  */
*            2 * FIXED(8) INIT(96), /* STORAGE KEY                   */
*            2 * FIXED(8) INIT(231),/* SUBPOOL NUMBER                */
*            2 * FIXED(8) INIT('00'X);/* REQUEST TYPE                */
*         GPR03F=CMZA0231;                                         0863
         L     GPR03F,CMZA0231                                     0863
*         DO;                       /* LISATCVT                    0864
*                                      CVTBASE(PAGEABLE,(GPR02P))    */
*           GPR02P=ATCLCPTR;        /* SET UP ATCVT POINTER          */
         L     GPR02P,ATCLCPTR                                     0865
*         END;                      /* LISATCVT                      */
*         CALL GPR02P->ATCGTSTR;    /* CALL ISTORFSR                 */
         L     @15,ATCGTSTR(,GPR02P)                               0867
         BALR  @14,@15                                             0867
*         RFY                                                      0868
*          (GPR00P,                                                0868
*           GPR01P,                                                0868
*           GPR02P,                                                0868
*           GPR03P) UNRSTD;                                        0868
*       END;                        /* END OF GETSTOR                */
*                                                                  0869
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @D32CKYY*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0870
*       IF C3SR15=ZERO THEN                                        0870
         LTR   C3SR15,C3SR15                                       0870
         BNZ   @RF00870                                            0870
*         DO;                       /* GOT SAVE AREA                 */
*           C3SR13=RPHSRPRM;        /* PTR TO SAVE AREA GET VOCLOCK  */
         L     C3SR13,RPHSRPRM(,GPR01P)                            0872
*/*** START -TPLOCK (VOCLOCK)TYPE(SHARE)- **                         */
*                                                                  0873
*           DO;                                                    0873
*             RFY                                                  0874
*              (GPR00P,                                            0874
*               GPR01P,                                            0874
*               GPR02P,                                            0874
*               GPR03P,                                            0874
*               GPR04P,                                            0874
*               GPR15P) RSTD;                                      0874
*             GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK)
*                 ;                                                0875
         STM GPR00P,GPR14P,RPHWORK(GPR01P)
*             GPR15P=ATCAP35;       /* ADDRESS OF LOCK ROUTINE       */
         L     GPR15P,ATCAP35(,C3SR7)                              0876
*             GPR02P=ADDR(ATCVOCLK);/* SET PARAM - LOCKWORD PTR      */
         LA    GPR02P,ATCVOCLK(,C3SR7)                             0877
*             GPR04P=GPR01P->RPHCRR;/* SET PARAM - ISTCRA PTR        */
         L     GPR04P,RPHCRR(,GPR01P)                              0878
*             GPR00P=CRALMS02;      /* SET PARAM - LOCK LEVEL FLAG   */
         LA    GPR00P,2                                            0879
*             GPR03P=ADDR(GPR04P->CRAL2PTR);/* SET PARAM - LOCK LEVEL
*                                      PTR                           */
         LA    GPR03P,CRAL2PTR(,GPR04P)                            0880
*             DCL                                                  0881
*               FMZL0249 BASED(GPR15P) LABEL VALUERANGE(*);        0881
*             CALL FMZL0249;                                       0882
         BALR  @14,@15                                             0882
*             GENERATE REFS(GPR00P,GPR01P,GPR14P,RPHWORK) SETS(GPR00P,
*                 GPR01P,GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,
*                 GPR08P,GPR09P,GPR10P,GPR11P,GPR12P,GPR13P,GPR14P,
*                 GPR15P);                                         0883
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*             RFY                                                  0884
*              (GPR00P,                                            0884
*               GPR01P,                                            0884
*               GPR02P,                                            0884
*               GPR03P,                                            0884
*               GPR04P,                                            0884
*               GPR15P) UNRSTD;                                    0884
*           END;                                                   0885
*                                                                  0885
*/*** END -TPLOCK (VOCLOCK)TYPE(SHARE)- **                           */
*                                                                  0886
*                                   /* GET RDT LOCK                  */
*/*** START -TPLOCK (RDTLOCK)TYPE(XCLSIVE)- **                       */
*                                                                  0886
*           DO;                                                    0886
*             RFY                                                  0887
*              (GPR00P,                                            0887
*               GPR01P,                                            0887
*               GPR02P,                                            0887
*               GPR03P,                                            0887
*               GPR04P,                                            0887
*               GPR15P) RSTD;                                      0887
*             GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK)
*                 ;                                                0888
         STM GPR00P,GPR14P,RPHWORK(GPR01P)
*             GPR15P=ATCAP36;       /* ADDRESS OF LOCK ROUTINE       */
         L     GPR15P,ATCAP36(,C3SR7)                              0889
*             GPR02P=ADDR(ATCRDTLK);/* SET PARAM - LOCKWORD PTR      */
         LA    GPR02P,ATCRDTLK(,C3SR7)                             0890
*             GPR04P=GPR01P->RPHCRR;/* SET PARAM - ISTCRA PTR        */
         L     GPR04P,RPHCRR(,GPR01P)                              0891
*             GPR00P=CRALMS03;      /* SET PARAM - LOCK LEVEL FLAG   */
         LA    GPR00P,4                                            0892
*             GPR03P=ADDR(GPR04P->CRAL3PTR);/* SET PARAM - LOCK LEVEL
*                                      PTR                           */
         LA    GPR03P,CRAL3PTR(,GPR04P)                            0893
*             DCL                                                  0894
*               FMZL0254 BASED(GPR15P) LABEL VALUERANGE(*);        0894
*             CALL FMZL0254;                                       0895
         BALR  @14,@15                                             0895
*             GENERATE REFS(GPR00P,GPR01P,GPR14P,RPHWORK) SETS(GPR00P,
*                 GPR01P,GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,
*                 GPR08P,GPR09P,GPR10P,GPR11P,GPR12P,GPR13P,GPR14P,
*                 GPR15P);                                         0896
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*             RFY                                                  0897
*              (GPR00P,                                            0897
*               GPR01P,                                            0897
*               GPR02P,                                            0897
*               GPR03P,                                            0897
*               GPR04P,                                            0897
*               GPR15P) UNRSTD;                                    0897
*           END;                                                   0898
*                                                                  0898
*/*** END -TPLOCK (RDTLOCK)TYPE(XCLSIVE)- **                         */
*                                                                  0899
*           IF C3SR15=ZERO THEN                                    0899
         SLR   @06,@06                                             0899
         CR    C3SR15,@06                                          0899
         BNE   @RF00899                                            0899
*             DO;                   /* GOT LOCK OK                   */
*               IF RPTATERM^=0      /* IF AN ASSOC TERM      @ZA18920*/
*                 THEN              /*                       @ZA18920*/
         L     @11,RPTATERM(,RDTPTR)                               0901
         CR    @11,@06                                             0901
         BE    @RF00901                                            0901
*                 DO;               /*                       @ZA18920
*                                      SET UP CON SER PARMS          */
*                   CSPIDX=CSPICNCL;/* CANCEL LOGON Q        @D32CKYY*/
         L     @10,RPHCSPA(,GPR01P)                                0903
         MVC   CSPIDX(2,@10),@CH00507                              0903
*                   CSPNOREL=OFF;   /* NOT REALLOCATE                */
         NI    CSPNOREL(@10),B'11011111'                           0904
*                   CSPSRC=ZERO;    /* NO RDTES TO PASS              */
         ST    @06,CSPSRC(,@10)                                    0905
*                   CSPDEST=ZERO;                                  0906
         ST    @06,CSPDEST(,@10)                                   0906
*                   CSPACES=OFF;    /* DONT DO ACES                  */
*                   CSPACQS=OFF;    /* OR ACQUIRES                   */
*                                                                  0908
         NI    CSPACES(@10),B'11100111'                            0908
*                   /*************************************************/
*                   /*                                               */
*                   /* OBTAIN CSL ADDRESS                    @D32CKYY*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  0909
*                   CSPRSCE=C3SR13+TWO16;/* PT TO CSL        @D32CKYY*/
         LA    @06,216                                             0909
         ALR   @06,C3SR13                                          0909
         ST    @06,CSPRSCE(,@10)                                   0909
*                   RFY                                            0910
*                     ISTCSL BASED(CSPRSCE);/*               @D32CKYY*/
*                   CSLRDTE=RPTATERM;/* TERM RDTE            @D32CKYY*/
         ST    @11,CSLRDTE(,@06)                                   0911
*                   RPTATERM->RPRLIVE=OFF;/* PREVENT         @AS08665*/
*                                                                  0912
         NI    RPRLIVE(@11),B'11111110'                            0912
*                   /*************************************************/
*                   /*                                               */
*                   /* DRIVING OF CONTROLLER LOGONEXIT       @AS08665*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  0913
*                   RFY                                            0913
*                     CSLPTR RSTD;  /*                       @D32CKYY*/
*                                                                  0913
*                   /*************************************************/
*                   /*                                               */
*                   /* CSLRDTE = 4TH CSL WORD                @D32CKYY*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  0914
*                   CSLPTR=CSPRSCE+LENGTH(ISTCSL);/*         @D32CKYY*/
         L     @11,RPHCSPA(,GPR01P)                                0914
         L     @11,CSPRSCE(,@11)                                   0914
         LA    CSLPTR,12                                           0914
         ALR   CSLPTR,@11                                          0914
*                   CSLPTR->CSLRDEF=CSLRDEF;/*               @D32CKYY*/
         L     @00,CSLRDEF(,@11)                                   0915
         ST    @00,CSLRDEF(,CSLPTR)                                0915
*                   RFY                                            0916
*                     CSLPTR UNRSTD;/*                       @D32CKYY
*                                      INVOKE CON SER MASTER         */
*                   C3SR15=ATCCSMR; /* ROUTER                        */
         L     C3SR15,ATCCSMR(,C3SR7)                              0917
*                   CALL C3SR15;                                   0918
         BALR  @14,@15                                             0918
*                 END;              /* YES-ASSOC TERM        @ZA18920*/
*/*** START -TPUNLOCK (RDTLOCK)- **                                  */
*                                                                  0920
*               DO;                                                0920
*                                                                  0920
@RF00901 DS    0H                                                  0921
*/* ATBUILD (ISTRPH,ISTLOK,ISTCRA)                                   */
*/* END OF ATBUILD                                                   */
*                                                                  0921
*                 RFY                                              0921
*                  (GPR00P,                                        0921
*                   GPR01P,                                        0921
*                   GPR02P,                                        0921
*                   GPR03P,                                        0921
*                   GPR04P,                                        0921
*                   GPR15P) RSTD;                                  0921
*                 GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(
*                     RPHWORK);                                    0922
         STM GPR00P,GPR15P,RPHWORK(GPR01P)
*                 GPR02P=ADDR(ATCRDTLK);/* SET PARAM - LOCKWORD PTR  */
         LA    GPR02P,ATCRDTLK(,C3SR7)                             0923
*                 GPR04P=GPR01P->RPHCRR;/* SET PARAM - ISTCRA PTR    */
         L     GPR04P,RPHCRR(,GPR01P)                              0924
*                 GPR00P=CRALMS03;  /* SET PARAM - LOCK LEVEL FLAG   */
         LA    GPR00P,4                                            0925
*                 GPR03P=ADDR(GPR04P->CRAL3PTR);/* SET PARAM - LOCK
*                                      LEVEL PTR                     */
         LA    GPR03P,CRAL3PTR(,GPR04P)                            0926
*                 DO;               /* LISATCVT                    0927
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*                   GPR15P=ATCLCPTR;/* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0928
*                 END;              /* LISATCVT                      */
*                 GPR15P=GPR15P->ATCAP33;                          0930
         L     GPR15P,ATCAP33(,GPR15P)                             0930
*                 DCL                                              0931
*                   FMZL0259 BASED(GPR15P) LABEL VALUERANGE(*);    0931
*                 CALL FMZL0259;                                   0932
         BALR  @14,@15                                             0932
*                 GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(
*                     GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,
*                     GPR07P,GPR08P,GPR09P,GPR10P,GPR11P,GPR12P,GPR13P,
*                     GPR14P,GPR15P);                              0933
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*                 RFY                                              0934
*                  (GPR00P,                                        0934
*                   GPR01P,                                        0934
*                   GPR02P,                                        0934
*                   GPR03P,                                        0934
*                   GPR04P,                                        0934
*                   GPR15P) UNRSTD;                                0934
*               END;                                               0935
*                                                                  0935
*/*** END -TPUNLOCK (RDTLOCK)- **                                    */
*                                                                  0936
*               C3SR4=ZERO;         /* PROCESSING DONE-NO ERROR MSG
*                                      TO BE SENT                    */
         SLR   C3SR4,C3SR4                                         0936
*             END;                                                 0937
*           ELSE                                                   0938
*             ;                     /* COULD NOT GET LOCK FREE UP CON
*                                      SER SAVE AREA                 */
*                                                                  0938
@RF00899 DS    0H                                                  0939
*           /*********************************************************/
*           /*                                                       */
*           /* FREESTOR TYPE(PAGEABLE)ADSPACE(COMMON)KEY(VTAM)SAVE(YE*/
*           /* S)CLEAR(NO)AREA(C3SR13)SIZE(SASIZE)                   */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0939
*           DO;                                                    0939
*                                                                  0939
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT,ISTRPH)                        */
*/* END OF ATBUILD                                                   */
*                                                                  0940
*             RFY                                                  0940
*              (GPR00P,                                            0940
*               GPR01P,                                            0940
*               GPR02P,                                            0940
*               GPR03P) RSTD;                                      0940
*             RFY                                                  0941
*               ISTRPH BASED(GPR01P);                              0941
*             GEN REFS(GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P
*                 ,GPR09P,GPR10P,GPR11P,GPR12P,GPR13P) SETS(RPHWORK);
         STM   GPR02P,GPR13P,RPHWORK(GPR01P)        SAVE REGISTERS
*             GPR00F=SASIZE;        /* SIZE IN REG0                  */
         L     GPR00F,SASIZE                                       0943
*             DCL                                                  0944
*               1 CMZA0269 FIXED(31) STATIC LOCAL,                 0944
*                2 * FIXED(8) INIT(64),/* OPTION FLAGS               */
*                2 * FIXED(8) INIT(96),/* STORAGE KEY                */
*                2 * FIXED(8) INIT(231),/* SUBPOOL NUMBER            */
*                2 * FIXED(8) INIT('01'X);/* REQUEST TYPE            */
*             GPR03F=CMZA0269;                                     0945
         L     GPR03F,CMZA0269                                     0945
*             RFY                                                  0946
*              (GPR04P) RSTD;                                      0946
*             GPR04P=C3SR13;        /* PUT FREEMAIN ADDR IN REG4     */
         LR    GPR04P,C3SR13                                       0947
*             DO;                   /* LISATCVT                    0948
*                                      CVTBASE(PAGEABLE,(GPR02P))    */
*               GPR02P=ATCLCPTR;    /* SET UP ATCVT POINTER          */
         L     GPR02P,ATCLCPTR                                     0949
*             END;                  /* LISATCVT                      */
*             CALL GPR02P->ATCGTSTR;/* CALL ISTORFSR                 */
         L     @15,ATCGTSTR(,GPR02P)                               0951
         BALR  @14,@15                                             0951
*             RFY                                                  0952
*              (GPR00P,                                            0952
*               GPR01P,                                            0952
*               GPR02P,                                            0952
*               GPR03P,                                            0952
*               GPR04P) UNRSTD;                                    0952
*           END;                    /* END OF FREESTOR               */
*                                                                  0953
*           /*********************************************************/
*           /*                                                       */
*           /*                                               @D32CKYY*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0954
*                                   /* FREE UP CSP & CSL             */
*                                                                  0954
*           /*********************************************************/
*           /*                                                       */
*           /* RELSTORE BUFADDR(RPHCSPA)SAVE(YES)CLEAR(NO)           */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0954
*           DO;                                                    0954
*                                                                  0954
*/* ATBUILD (ISTATCVT,ISTRPH)                                        */
*/* END OF ATBUILD                                                   */
*                                                                  0955
*             RFY                                                  0955
*              (GPR02P,                                            0955
*               GPR03P,                                            0955
*               GPR04P,                                            0955
*               GPR15P) RSTD;                                      0955
*             RFY                                                  0956
*              (GPR01P,                                            0956
*               GPR13P) RSTD;                                      0956
*             GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);   0957
          STM GPR02P,GPR13P,RPHWORK(GPR01P)
*             RFY                                                  0958
*               GPR13P UNRSTD;                                     0958
*             GPR04P=RPHCSPA;                                      0959
         L     GPR04P,RPHCSPA(,GPR01P)                             0959
*             DCL                                                  0960
*               1 FMZA0288 FIXED(31) STATIC LOCAL,                 0960
*                2 * FIXED(8) INIT(64),                            0960
*                2 * PTR(24) INIT(0);                              0960
*             GPR03F=FMZA0288;                                     0961
         L     GPR03F,FMZA0288                                     0961
*             DO;                   /* LISATCVT                    0962
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*               GPR15P=ATCLCPTR;    /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0963
*             END;                  /* LISATCVT                      */
*             GPR02P=GPR15P->ATCBPDA;                              0965
         L     GPR02P,ATCBPDA(,GPR15P)                             0965
*             GPR15P=GPR15P->ATCSMRS;                              0966
         L     GPR15P,ATCSMRS(,GPR15P)                             0966
*             DCL                                                  0967
*               FMZL0288 BASED(GPR15P) LABEL VALUERANGE(*);        0967
*             CALL FMZL0288;                                       0968
         BALR  @14,@15                                             0968
*             RFY                                                  0969
*               GPR13P RSTD;                                       0969
*             GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);   0970
          LM GPR02P,GPR13P,RPHWORK(GPR01P)
*             RFY                                                  0971
*              (GPR01P,                                            0971
*               GPR13P) UNRSTD;                                    0971
*             RFY                                                  0972
*              (GPR02P,                                            0972
*               GPR03P,                                            0972
*               GPR04P,                                            0972
*               GPR15P) UNRSTD;                                    0972
*           END;                    /* *********END OF RELSTORE    0973
*                                      EXPANSION*********            */
*/*** START -TPUNLOCK (VOCLOCK)- **                                  */
*                                                                  0974
*           DO;                                                    0974
*                                                                  0974
*/* ATBUILD (ISTRPH,ISTLOK,ISTCRA)                                   */
*/* END OF ATBUILD                                                   */
*                                                                  0975
*             RFY                                                  0975
*              (GPR00P,                                            0975
*               GPR01P,                                            0975
*               GPR02P,                                            0975
*               GPR03P,                                            0975
*               GPR04P,                                            0975
*               GPR15P) RSTD;                                      0975
*             GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK)
*                 ;                                                0976
         STM GPR00P,GPR15P,RPHWORK(GPR01P)
*             GPR02P=ADDR(ATCVOCLK);/* SET PARAM - LOCKWORD PTR      */
         LA    GPR02P,ATCVOCLK(,C3SR7)                             0977
*             GPR04P=GPR01P->RPHCRR;/* SET PARAM - ISTCRA PTR        */
         L     GPR04P,RPHCRR(,GPR01P)                              0978
*             GPR00P=CRALMS02;      /* SET PARAM - LOCK LEVEL FLAG   */
         LA    GPR00P,2                                            0979
*             GPR03P=ADDR(GPR04P->CRAL2PTR);/* SET PARAM - LOCK LEVEL
*                                      PTR                           */
         LA    GPR03P,CRAL2PTR(,GPR04P)                            0980
*             DO;                   /* LISATCVT                    0981
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*               GPR15P=ATCLCPTR;    /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0982
*             END;                  /* LISATCVT                      */
*             GPR15P=GPR15P->ATCAP33;                              0984
         L     GPR15P,ATCAP33(,GPR15P)                             0984
*             DCL                                                  0985
*               FMZL0304 BASED(GPR15P) LABEL VALUERANGE(*);        0985
*             CALL FMZL0304;                                       0986
         BALR  @14,@15                                             0986
*             GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(GPR00P,
*                 GPR01P,GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,
*                 GPR08P,GPR09P,GPR10P,GPR11P,GPR12P,GPR13P,GPR14P,
*                 GPR15P);                                         0987
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*             RFY                                                  0988
*              (GPR00P,                                            0988
*               GPR01P,                                            0988
*               GPR02P,                                            0988
*               GPR03P,                                            0988
*               GPR04P,                                            0988
*               GPR15P) UNRSTD;                                    0988
*           END;                                                   0989
*                                                                  0989
*/*** END -TPUNLOCK (VOCLOCK)- **                                    */
*                                                                  0990
*         END;                                                     0990
*       ELSE                                                       0991
*         DO;                       /* GETSTORE FAILED SEND MSG NO 0991
*                                      STORAGE AVAIL FOR THIS PORT   */
         B     @RC00870                                            0991
@RF00870 DS    0H                                                  0992
*           C3SR13=ADDR(RPHWORK)-FOUR;/* SAVE AREA                   */
         LA    C3SR13,RPHWORK(,GPR01P)                             0992
         SL    C3SR13,@CF00075                                     0992
*           C3SR2=C3SR1;            /* SAVE ADDR RPH                 */
         LR    C3SR2,C3SR1                                         0993
*           RFY                                                    0994
*             ISTRPH BASED(C3SR2);                                 0994
*                                                                  0994
*/*TPMSG MSGID('857I')MSG((ADDR(RPTCTNM)))PLAREA((ADDR(ISTFSB)))     */
*                                                                  0995
*           DO;                                                    0995
*             DCL                                                  0996
*               REG1314 REG(1) PTR;                                0996
*             RFY                                                  0997
*              (REG1314) RSTD;                                     0997
*             RFY                                                  0998
*              (EMCR13) RSTD;                                      0998
*             DCL                                                  0999
*               1 * BASED(REG1314),                                0999
*                2 CMZID314 PTR(31),                               0999
*                2 *,                                              0999
*                 3 CMZRL314 PTR(8),                               0999
*                 3 CMZRA314 PTR(24) BDY(BYTE),                    0999
*                2 CMZEA314 PTR(31),                               0999
*                2 CMZVP314 PTR(31);                               0999
*                                                                  0999
*/*XREGSET  PID('PLAREA')PPARM((ADDR(ISTFSB)))RREG(,REG1314)         */
*                                                                  1000
*             DO;                                                  1000
*               REG1314=ADDR(ISTFSB);/* SET RREG SYMBOL TO VALUE OF
*                                      PPARM OPERAND                 */
         LR    REG1314,C3SFSB                                      1001
*             END;                  /* XREGSET                       */
*             CMZID314=0;                                          1003
         SLR   @06,@06                                             1003
         ST    @06,CMZID314(,REG1314)                              1003
*             CMZRL314=0;                                          1004
         MVI   CMZRL314(REG1314),X'00'                             1004
*             CMZRA314=0;                                          1005
         STCM  @06,7,CMZRA314(REG1314)                             1005
*             CMZEA314=0;                                          1006
         ST    @06,CMZEA314(,REG1314)                              1006
*             CMZVP314=0;                                          1007
         ST    @06,CMZVP314(,REG1314)                              1007
*             DCL                                                  1008
*               CMZAA314 CHAR(4) INIT('857I');                     1008
*             CMZID314=ADDR(CMZAA314);                             1009
         LA    @06,CMZAA314                                        1009
         ST    @06,CMZID314(,REG1314)                              1009
*             CMZVP314=ADDR(RPTCTNM);                              1010
         LA    @06,RPTCTNM(,RDTPTR)                                1010
         ST    @06,CMZVP314(,REG1314)                              1010
*             DCL                                                  1011
*               CMZSA314(18) PTR(31) BASED(EMCR13);                1011
*             DCL                                                  1012
*               CMZZO314(1) FIXED(31) INIT(0);                     1012
*             CMZSA314(5)=CMZZO314;                                1013
         L     @06,CMZZO314                                        1013
         ST    @06,CMZSA314+16(,EMCR13)                            1013
*             DCL                                                  1014
*               REG15314 REG(15) PTR;                              1014
*             RFY                                                  1015
*               REG15314 RSTD;                                     1015
*             DO;                   /* LISATCVT                    1016
*                                      CVTBASE(PAGEABLE,(REG15314))  */
*               REG15314=ATCLCPTR;  /* SET UP ATCVT POINTER          */
         L     REG15314,ATCLCPTR                                   1017
*             END;                  /* LISATCVT                      */
*             DCL                                                  1019
*               CMTA314 BASED(REG15314) ENTRY VALUERANGE(*);       1019
*             REG15314=REG15314->ATCMSGP;                          1020
         L     REG15314,ATCMSGP(,REG15314)                         1020
*             CALL CMTA314;                                        1021
         BALR  @14,@15                                             1021
*             RESPECIFY                                            1022
*              (REG1314,                                           1022
*               REG15314) UNRESTRICTED;                            1022
*             RFY                                                  1023
*              (EMCR13) UNRSTD;                                    1023
*           END;                                                   1024
*           C3SR1=C3SR2;            /* RESTORE RPH PTR               */
         LR    C3SR1,C3SR2                                         1025
*           RFY                                                    1026
*             ISTRPH BASED(C3SR1);  /* FREE CSP-WONT BE USED         */
*                                                                  1026
*           /*********************************************************/
*           /*                                                       */
*           /* RELSTORE BUFADDR(RPHCSPA)SAVE(YES)CLEAR(NO)           */
*           /*                                                       */
*           /*********************************************************/
*                                                                  1027
*           DO;                                                    1027
*                                                                  1027
*/* ATBUILD (ISTATCVT,ISTRPH)                                        */
*/* END OF ATBUILD                                                   */
*                                                                  1028
*             RFY                                                  1028
*              (GPR02P,                                            1028
*               GPR03P,                                            1028
*               GPR04P,                                            1028
*               GPR15P) RSTD;                                      1028
*             RFY                                                  1029
*              (GPR01P,                                            1029
*               GPR13P) RSTD;                                      1029
*             GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);   1030
          STM GPR02P,GPR13P,RPHWORK(GPR01P)
*             RFY                                                  1031
*               GPR13P UNRSTD;                                     1031
*             GPR04P=RPHCSPA;                                      1032
         L     GPR04P,RPHCSPA(,C3SR1)                              1032
*             DCL                                                  1033
*               1 FMZA0323 FIXED(31) STATIC LOCAL,                 1033
*                2 * FIXED(8) INIT(64),                            1033
*                2 * PTR(24) INIT(0);                              1033
*             GPR03F=FMZA0323;                                     1034
         L     GPR03F,FMZA0323                                     1034
*             DO;                   /* LISATCVT                    1035
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*               GPR15P=ATCLCPTR;    /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     1036
*             END;                  /* LISATCVT                      */
*             GPR02P=GPR15P->ATCBPDA;                              1038
         L     GPR02P,ATCBPDA(,GPR15P)                             1038
*             GPR15P=GPR15P->ATCSMRS;                              1039
         L     GPR15P,ATCSMRS(,GPR15P)                             1039
*             DCL                                                  1040
*               FMZL0323 BASED(GPR15P) LABEL VALUERANGE(*);        1040
*             CALL FMZL0323;                                       1041
         BALR  @14,@15                                             1041
*             RFY                                                  1042
*               GPR13P RSTD;                                       1042
*             GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);   1043
          LM GPR02P,GPR13P,RPHWORK(GPR01P)
*             RFY                                                  1044
*              (GPR01P,                                            1044
*               GPR13P) UNRSTD;                                    1044
*             RFY                                                  1045
*              (GPR02P,                                            1045
*               GPR03P,                                            1045
*               GPR04P,                                            1045
*               GPR15P) UNRSTD;                                    1045
*           END;                    /* *********END OF RELSTORE    1046
*                                      EXPANSION*********            */
*         END;                                                     1047
*     END;                                                         1048
*   ELSE                                                           1049
*     ;                             /* COULDNT GET STORAGE FOR CSP   */
@RF00854 DS    0H                                                  1050
*   IF C3SR4=ZERO THEN                                             1050
@RC00854 LTR   C3SR4,C3SR4                                         1050
         BZ    @RT01050                                            1050
*     ;                             /* NO ERRORS                     */
*   ELSE                                                           1052
*     DO;                           /* SEND ERROR MSG-CANCEL LOGON 1052
*                                      FOR TERM FAILED               */
*       C3SR13=ADDR(RPHWORK)-FOUR;                                 1053
         LA    C3SR13,RPHWORK(,C3SR1)                              1053
         SL    C3SR13,@CF00075                                     1053
*       C3SR2=C3SR1;                /* SAVE RPH PTR                  */
         LR    C3SR2,C3SR1                                         1054
*       RFY                                                        1055
*         ISTRPH BASED(C3SR2);                                     1055
*                                                                  1055
*/*TPMSG MSGID('859I')MSG((ADDR(RPTATERM->RPRNAME)))PLAREA((ADDR(ISTFSB
*))                                                                  */
*                                                                  1056
*       DO;                                                        1056
*         DCL                                                      1057
*           REG1339 REG(1) PTR;                                    1057
*         RFY                                                      1058
*          (REG1339) RSTD;                                         1058
*         RFY                                                      1059
*          (EMCR13) RSTD;                                          1059
*         DCL                                                      1060
*           1 * BASED(REG1339),                                    1060
*            2 CMZID339 PTR(31),                                   1060
*            2 *,                                                  1060
*             3 CMZRL339 PTR(8),                                   1060
*             3 CMZRA339 PTR(24) BDY(BYTE),                        1060
*            2 CMZEA339 PTR(31),                                   1060
*            2 CMZVP339 PTR(31);                                   1060
*                                                                  1060
*/*XREGSET  PID('PLAREA')PPARM((ADDR(ISTFSB)))RREG(,REG1339)         */
*                                                                  1061
*         DO;                                                      1061
*           REG1339=ADDR(ISTFSB);   /* SET RREG SYMBOL TO VALUE OF 1062
*                                      PPARM OPERAND                 */
         LR    REG1339,C3SFSB                                      1062
*         END;                      /* XREGSET                       */
*         CMZID339=0;                                              1064
         SLR   @06,@06                                             1064
         ST    @06,CMZID339(,REG1339)                              1064
*         CMZRL339=0;                                              1065
         MVI   CMZRL339(REG1339),X'00'                             1065
*         CMZRA339=0;                                              1066
         STCM  @06,7,CMZRA339(REG1339)                             1066
*         CMZEA339=0;                                              1067
         ST    @06,CMZEA339(,REG1339)                              1067
*         CMZVP339=0;                                              1068
         ST    @06,CMZVP339(,REG1339)                              1068
*         DCL                                                      1069
*           CMZAA339 CHAR(4) INIT('859I');                         1069
*         CMZID339=ADDR(CMZAA339);                                 1070
         LA    @06,CMZAA339                                        1070
         ST    @06,CMZID339(,REG1339)                              1070
*         CMZVP339=ADDR(RPTATERM->RPRNAME);                        1071
         L     @06,RPTATERM(,RDTPTR)                               1071
         ST    @06,CMZVP339(,REG1339)                              1071
*         DCL                                                      1072
*           CMZSA339(18) PTR(31) BASED(EMCR13);                    1072
*         DCL                                                      1073
*           CMZZO339(1) FIXED(31) INIT(0);                         1073
*         CMZSA339(5)=CMZZO339;                                    1074
         L     @06,CMZZO339                                        1074
         ST    @06,CMZSA339+16(,EMCR13)                            1074
*         DCL                                                      1075
*           REG15339 REG(15) PTR;                                  1075
*         RFY                                                      1076
*           REG15339 RSTD;                                         1076
*         DO;                       /* LISATCVT                    1077
*                                      CVTBASE(PAGEABLE,(REG15339))  */
*           REG15339=ATCLCPTR;      /* SET UP ATCVT POINTER          */
         L     REG15339,ATCLCPTR                                   1078
*         END;                      /* LISATCVT                      */
*         DCL                                                      1080
*           CMTA339 BASED(REG15339) ENTRY VALUERANGE(*);           1080
*         REG15339=REG15339->ATCMSGP;                              1081
         L     REG15339,ATCMSGP(,REG15339)                         1081
*         CALL CMTA339;                                            1082
         BALR  @14,@15                                             1082
*         RESPECIFY                                                1083
*          (REG1339,                                               1083
*           REG15339) UNRESTRICTED;                                1083
*         RFY                                                      1084
*          (EMCR13) UNRSTD;                                        1084
*       END;                                                       1085
*       C3SR1=C3SR2;                /* RESTORE RDT PTR               */
         LR    C3SR1,C3SR2                                         1086
*       RFY                                                        1087
*         ISTRPH BASED(C3SR1);                                     1087
*     END;                                                         1088
*   C3SR14=C3SR9;                   /* RESTORE RETURN ADDR           */
@RT01050 LR    C3SR14,C3SR9                                        1089
*   RFY                                                            1090
*     C3SR7 UNRSTD;                                                1090
*   END C3SCAN;                                                    1091
*                                                                  1091
@EL00006 DS    0H                                                  1091
@EF00006 DS    0H                                                  1091
@ER00006 BR    @14                                                 1091
@PB00006 DS    0H                                                  1092
*/* TPEPILOG                                                         */
*                                                                  1092
*   GEN(PRINT OFF);                                                1092
         PRINT OFF
*/* VS1, VS2 TPIOS SAVEAREA FORMAT */                              1093
*DCL  1  ISTZSAVE BDY(WORD) BASED,                                 1093
*        2   ZSAZSVBC PTR(31),         /* SAVEAREA BACK CHAIN        */
*            3   ZSAZSVMS CHAR(1),     /* MODULE TRACE CODE          */
*                4 ZSAZACTV BIT(1),    /* ACTIVE SAVE AREA FLAG      */
*        2   ZSAZSVFC PTR(31),         /* SAVEAREA FORWARD CHAIN     */
*        2   ZSAZSVRR PTR(31),         /* RETURN REGISTER            */
*        2   ZSAZSVVR (6) PTR(31),    /* VARIABLE REGS (7-12) SVEAREA*/
*        2   ZSAZTRAC CHAR(4);        /* EBCDIC NAME OF OWNER        */
*/*                                                                1094
*THE FOLLOWING EQUATES SHOULD READ ''FIXED(8) CONSTANT(LENGTH(X))'',
*WHERE X IS THE NAME OF THE VARIABLE CONTROL BLOCK OR FIELD OF WHICH
*LENGTH IS THE VALUE BEING EQUATED, SHOULD THE PLS COMPILER BE     1094
*BE ABLE TO TAKE IT.                                               1094
*                                                                    */
*DCL ZSAZSVVA FIXED(8) CONSTANT(8);  /* DISPLACEMENT TO VARIABLE REGS*/
*DCL ZSAZSVSZ FIXED(8) CONSTANT(40); /* LENGTH OF ISTZSAVE           */
*/* PREFIX FOR CRR                                                   */
*/*                                                                  */
*/* RELEASE 1 - JUNE 28, 1973                                        */
*/*                                                                  */
*DCL 1 ISTPFCRR BASED BDY(WORD),        /* PREFIX FOR CRR            */
*     2  PFCCRR   CHAR(4),              /* CRR HEADER                */
*        3  PFCCRRID CHAR(1),           /* CRR ID FIELD              */
*           4  CRRID CHAR(1),           /* BASIC CTL LAYER DEFINITION*/
*        3  PFCRSV10 CHAR(1),           /* RESERVED FOR ALIGNMENT    */
*        3  PFCCRRLN CHAR(2),           /* CRR LENGTH                */
*           4  CRRLEN CHAR(2),          /* BASIC CTL LAYER DEF       */
*     2  PFCHDR CHAR(8) BDY(WORD),      /* SAVE AREA FOR OLD CRR FRR */
*        3  PFCCRRO  PTR(31),           /* PTR TO OLD CRR            */
*           4  CRRCHAIN PTR(31),        /* BASIC CTL LAYER DEFINITION
*                                          FOR OLD CRR PTR           */
*        3  PFCFRRO  PTR(31),           /* PTR TO OLD FRR            */
*           4  CRRFRR   PTR(31),        /* BASIC CTL LAYER         1096
*                                          DEFINITION OF OLD FRR PTR */
*     2  PFCFTA BIT(8),                 /* ID OF LAST FUNCTION TRACED*/
*     2  PFCRSV01 CHAR(3);              /* ALIGNMENT                 */
*DCL PFIDPIE BIT(8) CONSTANT('80'X);    /* DOS/VS TPIOS              */
*DCL PFIDORE BIT(8) CONSTANT('81'X);    /* DOS/VS BMS                */
*DCL PFIDAPE BIT(8) CONSTANT('82'X);    /* DOS/VS PSS                */
*DCL PFCIDPSV BIT(8) CONSTANT('38'X); /* COMPONENT ID              1100
*                                          PSS - VS1 AND 2           */
*DCL PFCIDTPV BIT(8) CONSTANT('3C'X); /* COMPONENT ID              1101
*                                          TPIOS VS1 AND 2           */
*DCL PFCIDSME BIT(8) CONSTANT('3D'X); /* COMPONENT ID              1102
*                                          STORAGE MANAGEMENT DOS    */
*DCL PFCIDOC BIT(8) CONSTANT('31'X);    /* COMPONENT ID OPEN/CLOSE   */
*DCL PFCIDPS BIT(8) CONSTANT('32'X);    /* PORT SOLICITOR            */
*DCL PFCIDCS BIT(8) CONSTANT('34'X);    /* CLUSTER SOLICITOR         */
*DCL PFCIDIT BIT(8) CONSTANT('35'X);    /* INIT/TERM                 */
*DCL PFCIDVY BIT(8) CONSTANT('36'X);    /* VARY                      */
*DCL PFCIDNS  BIT(8) CONSTANT('37'X);   /* NET. STAT.SRV.            */
*DCL PFCIDTPE BIT(8) CONSTANT('38'X);   /* COMPONENT ID            1109
*                                          TPIOS - DOS               */
*DCL PFCIDCL BIT(8) CONSTANT('39'X);    /* COMPONENT ID            1110
*                                          CONTROL LAYER             */
*DCL PFCIDPSE BIT(8) CONSTANT('3A'X);   /* COMPONENT ID            1111
*                                          PSS - DOS                 */
*DCL PFCIDSMV BIT(8) CONSTANT('3F'X);   /* COMPONENT ID            1112
*                                          STORAGE MANAGEMENT        */
*DCL PFCIDTIO BIT(8) CONSTANT('40'X);   /* COMPONENT ID TIIO       1113
*                                          PROCESSING (VS2)          */
*DCL PFCIDRS  BIT(8) CONSTANT('41'X);   /* ID FOR REMOTE SOLICITOR   */
*/* CRR FOR COMMAND FACILITIES                                      */
*/*  REVISIONS                                         001 06/02/75 */
*DCL  1  ISTCFCRR BDY(WORD) BASED, /* CRR FOR COMMAND FACILITIES    */
*        2 CFCAUDIT,               /* AUDIT TRAIL FOR CMD FACILITIES*/
*          3 CFCNTRD  CHAR(1),     /* LIST OF MODULES IN COMMAND    */
*                                  /* FACILITIES ENTERED            */
*            4 NCFCS1   BIT(1),    /* IND MODULE ISTCFCS1 ENTERED   */
*            4 NCFCS2   BIT(1),    /* IND MODULE ISTCFCS2 ENTERED   */
*            4 NCFCR1   BIT(1),    /* IND MODULE ISTCFCR1 ENTERED   */
*            4 NCFCRP   BIT(1),    /* IND MODULE ISTCFCRP ENTERED   */
*            4 NCFCR2   BIT(1),    /* IND MODULE ISTCFCR2 ENTERED   */
*            4 NCFRSVD  BIT(3),    /* RESERVED                      */
*          3 CFCCRT   CHAR(1),     /* LIST OF MODULES IN COMMAND    */
*                                  /* FACILITIES RUNNING            */
*            4 CCFCS1   BIT(1),    /* IND MODULE ISTCFCS1 RUNNING   */
*            4 CCFCS2   BIT(1),    /* IND MODULE ISTCFCS2 RUNNING   */
*            4 CCFCR1   BIT(1),    /* IND MODULE ISTCFCR1 RUNNING   */
*            4 CCFCRP   BIT(1),    /* IND MODULE ISTCFCRP RUNNING   */
*            4 CCFCR2   BIT(1),    /* IND MODULE ISTCFCR2 RUNNING   */
*            4 CCFRSVD1 BIT(3);    /* RESERVED                      */
*DCL TIDCFCS1 BIT(8) CONSTANT('00'X); /* THREAD ID FOR ISTCFCS1     */
*DCL TIDCFCR1 BIT(8) CONSTANT('01'X); /* THREAD ID FOR ISTCFCR1     */
*DCL TIDCFCR2 BIT(8) CONSTANT('02'X); /* THREAD ID FOR ISTCFCR2     */
*/* COMPONENT RECOVERY RECORD FOR TPIOS */                         1119
*/*  DELTA                                             006 02/10/75  */
*DCL                                                               1119
*1  ISTZCRR BDY(WORD) BASED,     /* CONTROL WORD                     */
*   2  ZCRCRR CHAR(4),           /* CONTROL WORD                     */
*      3  ZCRID CHAR(1),         /* CONTROL BLOCK ID                 */
*      3  ZCRLEN CHAR(2),        /* LENGTH OF ZCR                    */
*      3  ZCRFLAG CHAR(1),       /* FLAGS                            */
*   2  ZCRCHAIN PTR(31),         /* POINTER TO PREVIOUS ZCR          */
*   2  ZCRFRRA PTR(31),          /* PTR TO FRR                       */
*   2  ZCRFLGS1 CHAR(1),         /* FLGS USED BY REQUEST COMPLETION  */
*      3  ZCREXSW BIT(1),        /* EXIT SWITCH                      */
*      3  ZCRQUESW BIT(1),       /* QUEUE SWITCH                     */
*      3  ZCRDEQSW BIT(1),       /* DEQUEUE SWITCH                   */
*      3  ZCRWAIT BIT(1),        /* WAIT Q ANALYSIS COMPLETE         */
*      3  ZCRNRMEX BIT(1),       /* NORMAL EXIT TO BE TAKEN          */
*      3  ZCRENDLP BIT(1),       /* END OF LOOP SWITCH               */
*      3  ZCRUNSOL BIT(1),       /* UNSOLICITED DATA                 */
*      3  ZCRFEXIT BIT(1),       /* FORCE EXIT SWITCH                */
*   2  ZCRFLGS2 CHAR(1),         /* FLAGS USED WITHIN TPIOS          */
*      3  ZCRLOCAL BIT(1),       /* LOCAL SUPPORT                    */
*      3  ZCRSHEDI BIT(1),       /* IMMEDIATE SCHEDULE               */
*      3  ZCRFMSED BIT(1),       /* FMCB SEARCH ENDED                */
*      3  ZCROB    BIT(1),       /* OUTBOUND PROC IN PROGRESS        */
*      3  ZCRIF0E1 BIT(1),       /* SWITCH FOR STRUCTURED PGM USED BY
*                                   INBOUND PROCESSING               */
*      3  ZCRIF0E2 BIT(1),       /* SWITCH FOR STRUCTURED PGM USED BY
*                                   INBOUND PROCESSING               */
*      3  ZCRIF0E3 BIT(1),       /* SWITCH FOR STRUCTURED PGM USED BY
*                                   INBOUND PROCESSING               */
*   2  ZCRSWFLD CHAR(1),         /* SWITCHES FOR TPIOS OUTBOUND      */
*      3  ZCRENDSH BIT(1),       /* EXIT FROM REMOTE DEV SCHEDULER   */
*         4  ZCRSLCP BIT(1),     /* SCHEDULE LCPB                    */
*      3  ZCREXTYP BIT(1),       /* TPEXIT TYPE                      */
*      3  ZCRENDPR BIT(1),       /* EXIT FROM INNER PROCESS          */
*      3  ZCRNDLCP BIT(1),       /* EXIT FROM LCPB PROCESSING        */
*         4  ZCROB1 BIT(1),      /* REMOTE DEV SCHED 1ST TIME SWITCH */
*      3  ZCRENDX BIT(1),        /* EXIT FROM LCCW/BTU XLATION       */
*      3  ZCRENDXL BIT(1),       /* EXIT FROM LCCW PROC              */
*      3  ZCRENDAN BIT(1),       /* EXIT FROM LCPB ANALYSIS          */
*      3  ZCRRESET BIT(1),                                         1119
*         4  ZCRCNLXL BIT(1),    /* CANCEL FURTHER XLATE             */
*   2  ZCRFLGS3 CHAR(1),         /* FLAGS FOR OUTBOUND PROCESSING    */
*      3  ZCRTIC BIT(1),         /* SELECT NOT TO BE SENT            */
*      3  ZCRTPCON BIT(1),       /* TPIOS CONTACT SENT               */
*      3  ZCRTPDIS BIT(1),       /* TPIOS DISCONNECT TO BE SENT      */
*      3  ZCRDISC  BIT(1),       /* DISCONNECT IN PROCESS            */
*      3  ZCREDRIV BIT(1),       /* DO DERIVE                        */
*      3  ZCRNOFRE BIT(1),       /* NO FREEING OF SIO QUEUE          */
*      3  ZCRWRPTR BIT(1),       /* WRITE TO PRINTER REQUEST         */
*      3  ZCRINLCP BIT(1),       /* ERROR OCCURED DURING OUTBND PROC */
*   2  ZCRGENSW CHAR(1),         /* GENERAL SWITCHES                 */
*      3  ZCRTSW1  BIT(1),       /* TEMP SW FOR STRUCTURED PGM       */
*      3  ZCRTSW2  BIT(1),       /* TEMP SW FOR STRUCTURED PGM       */
*      3  ZCRRT06  BIT(1),       /* CRITICAL TEXT OPTION             */
*      3  ZCRLCSYN BIT(1),       /* LCCW SYNC SPECIFIED              */
*      3  ZCREXRES BIT(1),       /* EXCEPTION RESPONSE SPECIFIED     */
*      3  ZCRCLRBD BIT(1),       /* FLAG INDICATING BIND WAS CLEARED */
*      3  ZCRBRIS  BIT(1),       /* BRACKET REJECTED DUE TO IN BRAC. */
*      3  ZCRF1RES BIT(1),       /* FID1 RESPONSE TO BE GENERATED    */
*   2  ZCRPFLGS CHAR(1),         /* UTILITIES PROC OPTION FLAGS      */
*      3  ZCRQAHED BIT(1),      /* QXFR RTN TO USE INSERT OPT'N ON TPQ*
*      3  *        BIT(7),      /* RESERVED                          */
*   2  ZCRIBPR CHAR(1),          /* INBOUND PROCESSING FLAGS         */
*         3  ZCRNOBUF BIT(1),    /* FSB WITH NO BUFFER               */
*         3  ZCRERR   BIT(1),    /* ERROR INDICATOR                  */
*         3  ZCRRELK  BIT(1),    /* RESET ERROR LOCK FUNCTION REQ.   */
*         3  ZCRLCPFR BIT(1),    /* FLAG IND. DEALLOCATE ATOP LCPB   */
*         3  ZCRLCPFD BIT(1),    /* FLAG IND. LCPB FOUND ON WAITQ    */
*         3  ZCR3270  BIT(1),    /* 3270 DEVICE                      */
*         3  ZCR3270R BIT(1),    /* 3270 DEVICE IN RECORD MODE       */
*         3  *        BIT(1),    /* RESERVED                         */
*   2  ZCRSCPSW CHAR(1),         /* SESSION CONTROL FLAGS            */
*         3  ZCRTPEX BIT(1),     /* TP EXIT                          */
*         3  ZCRTPINV BIT(1),    /* INVOKE TPIOS                     */
*         3  ZCRRJLCP BIT(1),    /* LCPB REJECTED                    */
*         3  ZCRLREQ BIT(1),     /* REQUEST                          */
*         3  ZCRPRCMP BIT(1),    /* PROCESSING COMPLETE              */
*         3  ZCRFSBWE BIT(1),    /* FSB IS WORK ELEMENT              */
*         3  ZCRSKIPT BIT(1),    /* SKIP TRACE FLAG                  */
*         3  *       BIT(1),     /* RESERVED                         */
*   2  ZCRCRLCP PTR(31),         /* CURRENT LCPB PTR                 */
*   2  ZCRPARMS BDY(WORD),       /* PARAMETERS PASSED TO UTILITIES */
*      3  ZCRFBPTR PTR(31),      /* PTR TO FROM BUFFER               */
*         4  ZCRCBPTR PTR(31),   /* PTR TO CURRENT BUFFER            */
*      3  ZCRTBPTR PTR(31),      /* PTR TO TO-OR-TRANSLATE BUFFER    */
*      3  ZCRMLNG FIXED(15),     /* LENGTH TO MOVE                   */
*      3  ZCRDFRDA FIXED(15),    /* OFFSET FROM DATA ADDR IN FROM BUF*/
*         4  ZCRDTODA FIXED(15), /* OFFSET FROM DATA ADDR XLATE BUF  */
*      3  ZCRPCOD1 CHAR(1),      /* CODE BYTE FOR ALLOC/DISALLOC     */
*         4  ZCRPPG BIT(1),      /* GET PAGEABLE BUFF                */
*         4  ZCRPLNG BIT(1),     /* LENGTH OF BUFFER SPECIFIED       */
*         4  ZCRPFSB BIT(1),     /* GET FSB                          */
*         4  ZCRPLSBF BIT(1),    /* GET LSCB AND BUFFER              */
*            5 ZCRPLSBQ BIT(1),  /* PURGE LSCB QUEUE                 */
*         4  ZCRPLSCB BIT(1),    /* GET OR RELEASE LSCB              */
*         4  ZCRPBUF BIT(1),     /* GET OR RELEASE BUFFER            */
*         4  ZCRPCFTX BIT(1),    /* CONFIDENTIAL TEXT                */
*         4  ZCRPRES BIT(1),     /* RESERVED                         */
*      3  ZCRPCOD2 CHAR(1),      /* CODE BYTE FOR MOVE               */
*         4  ZCRPPG2 BIT(1),     /* GET PAGEABLE BUFFER              */
*         4  ZCRPFHDR BIT(1),    /* FROM BUFFER FDB TO BE USED       */
*         4  ZCRPMFGF BIT(1),    /* MOVE STARTS WIHT 1ST BUFF IN BLOCK*
*         4  ZCRPRES2 BIT(5),    /* RESERVED                         */
*      3  ZCRPCHAR CHAR(1),      /* TRANSLATE & TEST SEARCH CHARACTER*/
*      3  ZCRPSW   CHAR(1),      /* SWITCH FIELD                     */
*   2  ZCRCCWA PTR(31),          /* PTR TO CURRENT CCW (CCW 1 OR 2)  */
*   2  ZCRBFPTR PTR(31),         /* SAVE 1ST BUFF PTR IN TO-BUFF CHN
*                                   OR LAST BUFFER IN CHANNEL PGM    */
*   2  ZCRZLB PTR(31),           /* PTR TO CURR BUFF IN CHANNEL PGM  */
*   2  ZCRPVZB PTR(31),          /* PTR TO PREVIOUS BUFF IN CHAN PGM */
*   2  ZCRSVRTN BDY(WORD),       /* REG 14 SAVE AREAS                */
*      3  ZCRSVF1 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF2 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF3 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF4 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF5 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF6 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF7 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF8 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF9 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF10 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF11 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF12 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF13 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF14 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF15 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF16 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF17 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF18 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF19 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF20 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF21 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF22 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF23 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF24 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF25 PTR(31),      /* SAVE REQUIRED REGISTER           */
*   2  ZCRWKARA BDY(WORD),       /* TEMPORARY REG SAVE AREA          */
*      3  ZCRSVWK1 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK2 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK3 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK4 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK5 PTR(31),      /* SAVE REQUIRED REG                */
*   2  ZCRFSBSV PTR(31),         /* FSB CHAIN PTR SAVEAREA           */
*   2  ZCRFBPRC BIT(1),          /* FSB PROCESS SW                   */
*   2  ZCRMOREL BIT(1),          /* MORE ELEMENTS SW                 */
*   2  ZCRSCANQ BIT(1),          /* SCAN QUEUE SW                    */
*   2  ZCRNXTEL BIT(1),          /* NEXT ELEMENT SW                  */
*   2  ZCRXSCHD BIT(1),          /* EXIT SCHEDULE SW                 */
*   2  ZCRLSTFB BIT(1),          /* INBOUND PROC LAST FSB FOR ELEM SW*/
*   2  ZCRTOPQ  BIT(1),          /* QUEUE ELEMENT TO TOP SW          */
*   2  ZCRAWQSW BIT(1),          /* CHECK AWAITQ FOR MORE WORK =1    */
*                                /* CHECK WAITQ =0                   */
*   2  ZCRRCDSV CHAR(1),         /* RETURN CODE SAVEAREA             */
*   2  ZCRPRMTC CHAR(1),         /* PREEMPT COMPLETION PARAMETER BYTE*/
*   2  ZCROPCDE CHAR(1),         /* OP CODE TO BE TRANSFORMED         *
*   2  ZCRR2SV PTR(31),          /* ISTZBFDI REG 2 SAVE EREA         */
*   2  ZCRR13SV PTR(31),         /* ISTSBFDI REG 13 SAVE EREA        */
*   2  ZCRCIDSV BDY(WORD),       /* ISTZBFDI CID SAVE AREA           */
*      3  ZCRSAFSV CHAR(2),      /* ISTZBFDI SAF SAVE AREA           */
*      3  ZCRDAFSV CHAR(2),      /* ISTZBFDI DAF SAVE AREA           */
*   2  ZCRSAVEZ (6) BDY(WORD) CHAR(LENGTH(ISTZSAVE)),              1119
*                                /* SAVE/TRACE AREAS FOR TPIOS MODS  */
*   2  ZCRREMIC PTR(31),        /* POINTER TO REMOTE RN ICNCB        */
*   2  ZCRAUDIT CHAR(36),        /* TPIOS AUDIT TRAIL AREA           */
*      3  ZCRTID CHAR(1),        /* THREAD I.D.                      */
*      3  ZCRTNAME CHAR(4),      /* LAST 4 CHARS OF THREAD NAME      */
*      3  ZCRENTER BIT(248),     /* BIT ARRAY FOR MODULES ENTERED    */
*         4  ZCREAC1A BIT(1),    /* ISTZAC1A ENTERED                 */
*         4  ZCREAC0A BIT(1),    /* ISTZAC0A ENTERED                 */
*         4  ZCREAC0B BIT(1),    /* ISTZAC0B ENTERED                 */
*         4  ZCREAC1B BIT(1),    /* ISTZAC1B ENTERED                 */
*         4  ZCREBCAA BIT(1),    /* ISTZBCAA ENTERED                 */
*         4  ZCREBCAB BIT(1),    /* ISTZBCAB ENTERED                 */
*         4  ZCREBCAE BIT(1),    /* ISTZBCAE ENTERED                 */
*         4  ZCREBCAG BIT(1),    /* ISTZBCAG ENTERED                 */
*         4  ZCREBCAI BIT(1),    /* ISTZBCAI ENTERED                 */
*         4  ZCREBCAM BIT(1),    /* ISTZBCAM ENTERED                 */
*         4  ZCREBCBA BIT(1),    /* ISTZBCBA ENTERED                 */
*         4  ZCREBCBB BIT(1),    /* ISTZBCBB ENTERED                 */
*         4  ZCREBCBI BIT(1),    /* ISTZBCBI ENTERED                 */
*         4  ZCREBCCB BIT(1),    /* ISTZBCCB ENTERED                 */
*         4  ZCREBCDI BIT(1),    /* ISTZBCDI ENTERED                 */
*         4  ZCREBCEB BIT(1),    /* ISTZBCEB ENTERED                 */
*         4  ZCREBCFA BIT(1),    /* ISTZBCFA ENTERED                 */
*         4  ZCREBCFB BIT(1),    /* ISTZBCFB ENTERED                 */
*         4  ZCREBCGA BIT(1),    /* ISTZBCGA ENTERED                 */
*         4  ZCREBCGB BIT(1),    /* ISTZBCGB ENTERED                 */
*         4  ZCREBCHA BIT(1),    /* ISTZBCHA ENTERED                 */
*         4  ZCREBCHB BIT(1),    /* ISTZBCHB ENTERED                 */
*         4  ZCREBCIA BIT(1),    /* ISTZBCIA ENTERED                 */
*         4  ZCREBCIB BIT(1),    /* ISTZBCIB ENTERED                 */
*         4  ZCREBCID BIT(1),    /* ISTZBCID ENTERED                 */
*         4  ZCREBCJA BIT(1),    /* ISTZBCJA ENTERED                 */
*         4  ZCREBCJB BIT(1),    /* ISTZBCJB ENTERED                 */
*         4  ZCREBCKA BIT(1),    /* ISTZBCKA ENTERED                 */
*         4  ZCREBCKB BIT(1),    /* ISTZBCKB ENTERED                 */
*         4  ZCREBCLA BIT(1),    /* ISTZBCLA ENTERED                 */
*         4  ZCREBCLB BIT(1),    /* ISTZBCLB ENTERED                 */
*         4  ZCREBCMB BIT(1),    /* ISTZBCMB ENTERED                 */
*         4  ZCREBCND BIT(1),    /* ISTZBCND ENTERED                 */
*         4  ZCREBCNE BIT(1),    /* ISTZBCNE ENTERED                 */
*         4  ZCREBCOB BIT(1),    /* ISTZBCOB ENTERED                 */
*         4  ZCREBCPB BIT(1),    /* ISTZBCPB ENTERED                 */
*         4  ZCREBCQB BIT(1),    /* ISTZBCQB ENTERED                 */
*         4  ZCREBCRA BIT(1),    /* ISTZBCRA ENTERED                 */
*         4  ZCREBCRB BIT(1),    /* ISTZBCRB ENTERED                 */
*         4  ZCREBCSC BIT(1),    /* ISTZBCSC ENTERED                 */
*         4  ZCREBCXA BIT(1),    /* ISTZBCXA ENTERED                 */
*         4  ZCREBCX0 BIT(1),    /* ISTZBCX0 ENTERED                 */
*         4  ZCREBCY0 BIT(1),    /* ISTZBCY0 ENTERED                 */
*         4  ZCREBCZ0 BIT(1),    /* ISTZBCZ0 ENTERED                 */
*         4  ZCREBC0A BIT(1),    /* ISTZBC0A ENTERED                 */
*         4  ZCREBC0B BIT(1),    /* ISTZBC0B ENTERED                 */
*         4  ZCRECC0A BIT(1),    /* ISTZCC0A ENTERED                 */
*         4  ZCRECC0B BIT(1),    /* ISTZCC0B ENTERED                 */
*         4  ZCRECC1A BIT(1),    /* ISTZCC1A ENTERED                 */
*         4  ZCRECC1B BIT(1),    /* ISTZCC1B ENTERED                 */
*         4  ZCRECC2B BIT(1),    /* ISTZCC2B ENTERED                 */
*         4  ZCREDCA0 BIT(1),    /* ISTZDCA0 ENTERED                 */
*         4  ZCREDCB0 BIT(1),    /* ISTZDCB0 ENTERED                 */
*         4  ZCREDCC0 BIT(1),    /* ISTZDCC0 ENTERED                 */
*         4  ZCREDCD0 BIT(1),    /* ISTZDCD0 ENTERED                 */
*         4  ZCREDCE0 BIT(1),    /* ISTZDCE0 ENTERED                 */
*         4  ZCREDCF0 BIT(1),    /* ISTZDCF0 ENTERED                 */
*         4  ZCREDCH0 BIT(1),    /* ISTZDCH0 ENTERED                 */
*         4  ZCREDCI0 BIT(1),    /* ISTZDCI0 ENTERED                 */
*         4  ZCREDCJ0 BIT(1),    /* ISTZDCJ0 ENTERED                 */
*         4  ZCREDCKA BIT(1),    /* ISTZDCKA ENTERED                 */
*         4  ZCREDCKB BIT(1),    /* ISTZDCKB ENTERED                 */
*         4  ZCREDCL0 BIT(1),    /* ISTZDCL0 ENTERED                 */
*         4  ZCREDCMB BIT(1),    /* ISTZDCMB ENTERED                 */
*         4  ZCREECBA BIT(1),    /* ISTZECBA ENTERED                 */
*         4  ZCREECBB BIT(1),    /* ISTZECBB ENTERED                 */
*         4  ZCREECCA BIT(1),    /* ISTZECCA ENTERED                 */
*         4  ZCREECCB BIT(1),    /* ISTZECCB ENTERED                 */
*         4  ZCREECDA BIT(1),    /* ISTZECDA ENTERED                 */
*         4  ZCREECEA BIT(1),    /* ISTZECEA ENTERED                 */
*         4  ZCREECTA BIT(1),    /* ISTZECTA ENTERED                 */
*         4  ZCREFCEA BIT(1),    /* ISTZFCEA ENTERED                 */
*         4  ZCREFCEB BIT(1),    /* ISTZFCEB ENTERED                 */
*         4  ZCREGCAB BIT(1),    /* ISTZGCAB ENTERED                 */
*         4  ZCREGCBB BIT(1),    /* ISTZGCBB ENTERED                 */
*         4  *        BIT(1),    /* NOT USED                         */
*         4  ZCREGCDB BIT(1),    /* ISTZGCDB ENTERED                 */
*         4  ZCREGCEB BIT(1),    /* ISTZGCEB ENTERED                 */
*         4  ZCREGCLA BIT(1),    /* ISTZGCLA ENTERED                 */
*         4  ZCREGC0A BIT(1),    /* ISTZGC0A ENTERED                 */
*         4  ZCREGC0B BIT(1),    /* ISTZGC0B ENTERED                 */
*         4  ZCREHCAN BIT(1),    /* ISTZHCAN ENTERED                 */
*         4  ZCREICAA BIT(1),    /* ISTZICAA ENTERED                 */
*         4  ZCREICAB BIT(1),    /* ISTZICAB ENTERED                 */
*         4  ZCREICBB BIT(1),    /* ISTZICBB ENTERED                 */
*         4  ZCREICBI BIT(1),    /* ISTZICBI ENTERED                 */
*         4  ZCREICCB BIT(1),    /* ISTZICCB ENTERED                 */
*         4  ZCREICCI BIT(1),    /* ISTZICCI ENTERED                 */
*         4  ZCREICDB BIT(1),    /* ISTZICDB ENTERED                 */
*         4  ZCREICEB BIT(1),    /* ISTZICEB ENTERED                 */
*         4  ZCREICGB BIT(1),    /* ISTZICGB ENTERED                 */
*         4  ZCREICHB BIT(1),    /* ISTZICHB ENTERED                 */
*         4  ZCREICIB BIT(1),    /* ISTZICIB ENTERED                 */
*         4  ZCREICID BIT(1),    /* ISTZICID ENTERED                 */
*         4  ZCREICJB BIT(1),    /* ISTZICJB ENTERED                 */
*         4  ZCREICKB BIT(1),    /* ISTZICKB ENTERED                 */
*         4  ZCREICKE BIT(1),    /* ISTZICKE ENTERED                 */
*         4  ZCREICKG BIT(1),    /* ISTZICKG ENTERED                 */
*         4  ZCREICLB BIT(1),    /* ISTZICLB ENTERED                 */
*         4  ZCREICMB BIT(1),    /* ISTZICMB ENTERED                 */
*         4  ZCREICNA BIT(1),    /* ISTZICNA ENTERED                 */
*         4  ZCREICNB BIT(1),    /* ISTZICNB ENTERED                 */
*         4  ZCREICOA BIT(1),    /* ISTZICOA ENTERED                 */
*         4  ZCREICOB BIT(1),    /* ISTZICOB ENTERED                 */
*         4  ZCREICQA BIT(1),    /* ISTZICQA ENTERED                 */
*         4  ZCREICQB BIT(1),    /* ISTZICQB ENTERED                 */
*         4  ZCREICRB BIT(1),    /* ISTZICRB ENTERED                 */
*         4  ZCREICSB BIT(1),    /* ISTZICSB ENTERED                 */
*         4  ZCREICSC BIT(1),    /* ISTZICSC ENTERED                 */
*         4  ZCREICTB BIT(1),    /* ISTZICTB ENTERED                 */
*         4  ZCREICUB BIT(1),    /* ISTZICUB ENTERED                 */
*         4  ZCREICVB BIT(1),    /* ISTZICVB ENTERED                 */
*         4  ZCREICWB BIT(1),    /* ISTZICWB ENTERED                 */
*         4  ZCREICX0 BIT(1),    /* ISTZICX0 ENTERED                 */
*         4  ZCREIC0B BIT(1),    /* ISTZIC0B ENTERED                 */
*         4  ZCREIC1B BIT(1),    /* ISTZIC1B ENTERED                 */
*         4  ZCREJCAB BIT(1),    /* ISTZJCAB ENTERED                 */
*         4  ZCREJCBB BIT(1),    /* ISTZJCBB ENTERED                 */
*         4  ZCREJCCB BIT(1),    /* ISTZJCCB ENTERED                 */
*         4  ZCREJCDB BIT(1),    /* ISTZJCDB ENTERED                 */
*         4  ZCREJC0B BIT(1),    /* ISTZJC0B ENTERED                 */
*         4  ZCREKCBB BIT(1),    /* ISTZKCBB ENTERED                 */
*         4  ZCREKCBN BIT(1),    /* ISTZKCBN ENTERED                 */
*         4  ZCREKCCN BIT(1),    /* ISTZKCCN ENTERED                 */
*         4  ZCREDCWR BIT(1),    /* ISTZDCWR ENTERED                 */
*         4  ZCREDCWB BIT(1),    /* ISTZDCWB ENTERED                 */
*         4  ZCREDCXR BIT(1),    /* ISTZDCXR ENTERED                 */
*         4  ZCREBCBR BIT(1),    /* ISTZBCBR ENTERED                 */
*         4  ZCREBCDR BIT(1),    /* ISTZBCDR ENTERED                 */
*         4  ZCREBCAR BIT(1),    /* ISTZBCAR ENTERED                 */
*         4  ZCRECCBI BIT(1),    /* ISTZCCBI ENTERED                 */
*         4  ZCRECCAI BIT(1),    /* ISTZCCAI ENTERED                 */
*         4  ZCRECCCI BIT(1),    /* ISTZCCCI ENTERED                 */
*         4  ZCREAC1R BIT(1),    /* ISTZAC1R ENTERED                 */
*         4  ZCREBCSB BIT(1),    /* ISTZBCSB ENTERED                 */
*         4  ZCREDCPR BIT(1),    /* ISTZDCPR ENTERED                 */
*         4  ZCREDCQR BIT(1),    /* ISTZDCQR ENTERED                 */
*         4  ZCREBCAL BIT(1),    /* ISTZBCAL ENTERED                 */
*         4  ZCREBC0L BIT(1),    /* ISTZBC0L ENTERED                 */
*         4  ZCREBCNB BIT(1),    /* ISTZBCNB ENTERED                 */
*         4  ZCREICOE BIT(1),    /* ISTZICOE ENTERED                 */
*         4  ZCREDCNB BIT(1),    /* ISTZDCNB ENTERED                 */
*         4  ZCREKCCB BIT(1),    /* ISTZKCCB ENTERED                 */
*         4  ZCRECFY0 BIT(1),    /* ISTZCFY0 ENTERED                 */
*         4  ZCREDCK0 BIT(1),    /* ISTZDFK0 ENTERED                 */
*         4  ZCREICSG BIT(1),    /* ISTZICSG ENTERED                 */
*         4  ZCREBCIF BIT(1),    /* ISTZBCIF ENTERED                 */
*         4  ZCREDCMF BIT(1),    /* ISTZDCMF ENTERED                 */
*         4  ZCRELCAB BIT(1),    /* ISTZLCAB ENTERED                 */
*         4  ZCREAC2B BIT(1),    /* ISTZAC2B ENTERED                 */
*         4  ZCREIC2B BIT(1),    /* ISTZIC2B ENTERED                 */
*         4  ZCRRSV97 BIT(97),   /* RESERVED                         */
*   2  ZCRCMNRC CHAR(1),                /* PURGE MWOR RETURN CODE    */
*   2  ZCRWORDA CHAR(3),                /* RESERVED FOR LATER USE    */
*   2  ZCRLCPB  CHAR(LENGTH(ISTLCPB)),  /* 3270 S/R LCPB             */
*      3 ZCRRHRU,                       /* SAVEAREA FOR RH AND RU    */
*        4 ZCRRH    CHAR(3),            /* RH                        */
*        4 ZCRRU    CHAR(*);            /* RU                        */
*DCL ZCTYPE BIT(8) CONSTANT('00'X);   /* ZCR TYPE                   */
*DCL ZCLNG FIXED(15) CONSTANT(172);   /* ZCRR LENGTH                */
*DCL ZCRSAVNO BIT(8) CONSTANT('06'X); /* NUMBER OF SAVEAREAS IN ZCRR */
*DCL ZCRLSVNO BIT(8) CONSTANT('04'X); /* NUMBER OF SAVE AREAS IN   1123
*                                         LOCAL SUPPORT              */
*/* *** EQUATES FOR ZCRRCDSV *** */                                1124
*                                                                  1124
*DCL ZCRMRFSB BIT(8) CONSTANT('0C'X);  /* REQUEST COMPLETION MOVE FSB
*                                         TO PROCESS                 */
*DCL ZCRSRCHQ BIT(8) CONSTANT('10'X);  /* REQUEST COMPLETION SEARCH
*                                         REQUEST QUEUE              */
*DCL ZCREXIT  BIT(8) CONSTANT('14'X);  /* REQUEST COMPLETION EXIT    */
*DCL ZCRSFSB  BIT(8) CONSTANT('18'X);  /* REQUEST COMPLETION SINGLE
*                                         FSB                        */
*DCL ZCRDLFSB BIT(8) CONSTANT('1C'X);  /* REQUEST COMPLETION DUAL FSB *
*DCL ZCRNOSCH BIT (8) CONSTANT('20'X); /* REQUEST COMPLETION, EXIT WITH
*                                         SCHED NONE                 */
*DCL ZCRNRSCH BIT (8) CONSTANT('24'X); /* REQUEST COMPLETION, EXIT WITH
*                                         SCHED NORM                 */
*DCL ZCRLGERR FIXED(8) CONSTANT(8);    /* LOGICAL ERROR              */
*DCL ZCPLSCB BIT(8) CONSTANT('08'X);   /* GET A RELEASE LSCB         */
*DCL ZCPBUF  BIT(8) CONSTANT('04'X);   /* GET A RELEASE BUFFER       */
*DCL ZCRTAC0A FIXED(8) CONSTANT(01);   /* LOCAL DEVICE SCHEDULER(OUT)*/
*DCL ZCRTAC0B FIXED(8) CONSTANT(02);   /* REMOTE DEVICE SCHEDLER(OUT)*/
*DCL ZCRTCC1A FIXED(8) CONSTANT(03);   /* LOCAL DIALOG SCHEDLER(IN)  */
*DCL ZCRTCC1B FIXED(8) CONSTANT(04);   /* REMOTE DIALOG SCHEDLER(IN) */
*DCL ZCRTDCE0 FIXED(8) CONSTANT(05);   /* NCP SLOWDOWN RECOVERY      */
*DCL ZCRTDCKA FIXED(8) CONSTANT(06);   /* LOCAL GENERAL FUNCTIONS    */
*DCL ZCRTDCKB FIXED(8) CONSTANT(07);   /* REMOTE GENERAL FUNCTIONS   */
*DCL ZCRTFCEB FIXED(8) CONSTANT(08);   /* REMOTE READ BUFFER ALLOC.  */
*DCL ZCRTGCLA FIXED(8) CONSTANT(09);   /* LCAL CTL & TEST FEEDBACK(IN)*
*DCL ZCRTGC0A FIXED(8) CONSTANT(10);   /* LOCAL REQ. COMPLETION(IN)  */
*DCL ZCRTGC0B FIXED(8) CONSTANT(11);   /* REMOTE REQ. COMPLETION(IN) */
*DCL ZCRTICWB FIXED(8) CONSTANT(12);   /* RESET CLEANUP (PHASE 5)    */
*DCL ZCRTIC0B FIXED(8) CONSTANT(13);   /* REMOTE REQ COMPLTION CTL(IN)*
*DCL ZCRTAC1B FIXED(8) CONSTANT(14);   /* ISTZAC1B THREAD ID         */
*DCL ZCRTIC1B FIXED(8) CONSTANT(15);   /* ISTZIC1B THREAD ID         */
*DCL ZCRTCCBI FIXED(8) CONSTANT(16);   /* ISTZCCBI THREAD ID         */
*DCL ZCRTAC1R FIXED(8) CONSTANT(17);   /* ISTZAC1R THREAD ID         */
*DCL ZCRTAC1A FIXED(8) CONSTANT(18);   /* ISTZAC1A THREAD ID         */
*DCL ZCRTLCAB FIXED(8) CONSTANT(19);   /* ISTZLCAB THREAD ID         */
*/* COMPONENT RECOVERY                                               */
*/*                                                                  */
*DCL 1 ISTASCRR BDY(WORD) BASED,        /* CRR FOR SMS               */
*     2  ASCPFCRR CHAR(LENGTH(ISTPFCRR)),                          1153
*     2  ASCFLAGS CHAR(7),              /* FLAGS                     */
*        3  ASCFLG1 CHAR(2),            /* MODULE TRACE FLAGS        */
*           4  ASCFBA BIT(1),           /* ALLOCATION IN PATH        */
*           4  ASCFBD BIT(1),           /* DE-ALLOCATION IN PATH     */
*           4  ASCFSR BIT(1),           /* FSR IN PATH               */
*           4  ASCPASTR BIT(13),        /* RESERVED PATH FLAGS       */
*        3  ASCFLG2 CHAR(2),            /* MODULE IN CONTROL FLAGS   */
*           4  ASCFBAIC BIT(1),         /* ALLOCATION IN CONTROL     */
*           4  ASCFBDIC BIT(1),         /* DE-ALLOCATION IN CONTROL  */
*           4  ASCFSRIC BIT(1),         /* FSR IN CONTROL            */
*           4  ASCICR BIT(13),          /* RESERVED IN CONTROL FLAGS */
*        3  ASCFLG3 CHAR(3),            /* AUDIT FLAGS               */
*           4  ASCFSRGT BIT(1),         /* FSR DOING GET PROCESSING  */
*           4  ASCFBDAL BIT(1),         /* FBD DOING ALLOCATION      */
*           4  ASCKEYF BIT(1),          /* KEY HAS BEEN ALTERED      */
*           4  ASCLLKF BIT(1),          /* LOCAL LOCK HELD           */
*           4  ASCFBDUD BIT(1),         /* FBD USING USER DATA       */
*           4  ASCAUDIT BIT(19),        /* RESERVED AUDIT BITS       */
*     2  ASCKEY CHAR(1),                /* ORIGINAL KEY              */
*     2  ASCETRYA PTR(31),              /* RETRY ADRS FOR CONTINUE 1153
*                                          OPTION                    */
*     2  ASCUSRGS CHAR(16),             /* SAVE AREA FOR USER REGS 1153
*                                          14 - 1                    */
*        3  ASCUSR14 CHAR(4),           /* REGISTER 14               */
*        3  ASCUSR15 CHAR(4),           /* REGISTER 15               */
*        3  ASCUSR00 CHAR(4),           /* REGISTER 0                */
*        3  ASCUSR01 CHAR(4),           /* REGISTER 1                */
*     2  ASCPSREG CHAR(16);             /* SAVE AREA FOR PSS       1153
*                                          REGS 1 - 4                */
*/*  INITIAL LEVEL                                      001 04/09/75 */
*DCL 1 ISTAPCRR BDY(WORD) BASED,                                   1154
*     2 APCHDRSV CHAR(LENGTH(ISTPFCRR)),  /* HEADER                  */
*     2  APCATFLG CHAR(2),              /* AUDIT TRACE FLAGS         */
*        3  APC51E BIT(1),              /* ISTAPC51 WAS ENTERED      */
*        3  APC52E BIT(1),              /* ISTAPC52  '     '         */
*        3  APC53E BIT(1),              /* ISTAPC53                  */
*        3  APC54E BIT(1),                                         1154
*        3  APC56E BIT(1),                                         1154
*        3  APC57E BIT(1),                                         1154
*        3  APC58E BIT(1),                                         1154
*        3  APC31E BIT(1),                                         1154
*        3 * BIT(8),                    /* RESERVED                  */
*     2  APCRFLG CHAR(2),               /* AUDIT TRACE FLAGS         */
*        3  APC51R BIT(1),              /* ISTAPCR1 IS RUNNING       */
*        3  APC52R BIT(1),              /* ISTAPC52 IS RUNNING       */
*        3  APC53R BIT(1),                                         1154
*        3  APC54R BIT(1),                                         1154
*        3  APC56R BIT(1),                                         1154
*        3  APC57R BIT(1),                                         1154
*        3  APC58R BIT(1),                                         1154
*        3  APC31R BIT(1),                                         1154
*        3  *      BIT(8),              /* RESERVED                  */
*     2  APCPSTA PTR(31),               /* PST@                      */
*     2  APCTCBA PTR(31),               /* TCB@                      */
*     2  APCRTRN PTR(31),               /*@ TO BR14 TO RTN TO SYSTEM */
*     2  APCPABSV PTR(31),              /*SAVED PAB@ TO REDISPATCH   */
*     2  APCQWFO PTR(31),               /* Q@ IN PST WORK AREA ON    */
*     2  APCFRRPM PTR(31),              /* WORKAREA@ RTN'D FROM SETFR*/
*     2  APCSAVE CHAR(72),                                         1154
*        3  APCESTAL CHAR(72),          /* ESTAE PARAMETER LIST AREA */
*     2  APCCOMF CHAR(4) BDY(HWORD),    /* FLAGS USED BY ALL PSS RTN */
*        3  APCCOMF1 CHAR(2),                                      1154
*           4  APCSSTSK BIT(1),         /* IRB TYPE WORK             */
*           4  APCUETSK BIT(1),         /* USER EXIT RUNNING UNDER IRB*
*           4  APCSMCR BIT(1),          /* SMA CRA BEING USED        */
*           4  APCIRB1 BIT(1),          /* IRB1 BEING USED           */
*           4  APCIRB2 BIT(1),          /* IRB2 BEING USED           */
*           4  APCRELR BIT(1),          /*CALL ISTAPC58 TO RLEASE CRA*/
*           4  APCEXIT BIT(1),          /* TELLS ISTAPC58 TO EXIT SYS*/
*           4  APCZLBER BIT(1),         /* ERR WHILE RUNNING ZLFAB PAB*
*           4  * BIT(8),                /* RESERVED                  */
*        3  APCRETCD FIXED(15),         /* RTN CODE FOR R15 FOR SYS  */
*     2  APCSAV1 PTR(31),               /* 1ST SAVE WORD             */
*     2  APCSAV2 PTR(31),               /* 2ND SAVE WORD             */
*     2  APCSWTWD CHAR(4),              /* SWITCH AREA FOR PSS RTN   */
*     2  APC31FLG CHAR(1),              /* ISTAPC31 FLAGS            */
*        3  APCTPXIT BIT(1),            /* TPEXIT IN PROGRESS        */
*        3  APCRESCH BIT(1),            /*PAB TPEXIT OCCURED  RESCHED*/
*        3  APCSORT BIT(1),       /* PAB SORTED TO PROPER PST/MPST   */
*        3  *       BIT(5),       /* RESERVED                        */
*     2  APC52FLG CHAR(1),        /* ISTAPC52 FLAGS                  */
*        3  APCCKRQ BIT(1),       /* CHECK RDY Q FOR WORK            */
*        3  APCSMSR BIT(1),       /* RETURNING SMS RPH               */
*        3  APCQENQ BIT(1),       /* ENQUEUEING PAB'S ON PST Q'S     */
*        3  APCRDQ BIT(1),        /* DEQUEING PAB'S FROM PST RDY Q   */
*        3  APCNWF BIT(1),        /* NO WORK FOUND                   */
*        3  APCWKF   BIT(1),      /* WORK FOUND                      */
*        3    *      BIT(2),      /* RESERVED                        */
*     2  APC53FLG CHAR(1),        /* ISTAPC53 FLAGS                  */
*        3  APCPR153 BIT(1),      /* USED PREALLOCATED CRA           */
*     2  APC54FLG CHAR(1),        /* ISTAPC54 FLAGS                  */
*        3  APCRLST BIT(1),       /* SMS BEING CALLED TO RELEASE UECB*/
*        3  * BIT(7),             /* RESERVED                        */
*     2  APC57FLG CHAR(1),        /* ISTAPC57 FLAGS                  */
*        3  APCRECRA BIT(1),      /* RELEASE CRA BEING DONE          */
*        3  APCNREL BIT(1),       /* DID NOT RELEASE CRA             */
*        3  *   BIT(6),           /* RESERVED                        */
*     2  * CHAR(15);              /* RESERVED                        */
*/*               COMPONENT RECOVERY AREA                            */
*/*  REVISIONS                                         005 04/09/75  */
*DCL 1  ISTCRA BASED BDY(DWORD),        /* COMPONENT RECOVERY AREA   */
*     2  CRABASIC BDY(WORD),            /* CRA WITHOUT PROCESS CRR   */
*      3 CRAHDR CHAR(8) BDY(WORD),      /* CRA HEADER                */
*        4  CRACRR PTR(31),             /* PTR TO ACTIVE CRR         */
*        4  CRAFRR PTR(31),             /* PTR TO ACTIVE FRR         */
*      3 CRALKACT BIT(32),              /* LOCK LEVEL AND          1155
*                                          OWNERSHIP FLAGS           */
*        4  CRALEV32 BIT(1),            /* 1 = LEVEL 32 LOCK HELD    */
*        4  CRALEV31 BIT(1),            /* 1 = LEVEL 31 LOCK HELD    */
*        4  CRALEV30 BIT(1),            /* 1 = LEVEL 30 LOCK HELD    */
*        4  CRALEV29 BIT(1),            /* 1 = LEVEL 29 LOCK HELD    */
*        4  CRALEV28 BIT(1),            /* 1 = LEVEL 28 LOCK HELD    */
*        4  CRALEV27 BIT(1),            /* 1 = LEVEL 27 LOCK HELD    */
*        4  CRALEV26 BIT(1),            /* 1 = LEVEL 26 LOCK HELD    */
*        4  CRALEV25 BIT(1),            /* 1 = LEVEL 25 LOCK HELD    */
*        4  CRALEV24 BIT(1),            /* 1 = LEVEL 24 LOCK HELD    */
*        4  CRALEV23 BIT(1),            /* 1 = LEVEL 23 LOCK HELD    */
*        4  CRALEV22 BIT(1),            /* 1 = LEVEL 22 LOCK HELD    */
*        4  CRALEV21 BIT(1),            /* 1 = LEVEL 21 LOCK HELD    */
*        4  CRALEV20 BIT(1),            /* 1 = LEVEL 20 LOCK HELD    */
*        4  CRALEV19 BIT(1),            /* 1 = LEVEL 19 LOCK HELD    */
*        4  CRALEV18 BIT(1),            /* 1 = LEVEL 18 LOCK HELD    */
*        4  CRALEV17 BIT(1),            /* 1 = LEVEL 17 LOCK HELD    */
*        4  CRALEV16 BIT(1),            /* 1 = LEVEL 16 LOCK HELD    */
*        4  CRALEV15 BIT(1),            /* 1 = LEVEL 15 LOCK HELD    */
*        4  CRALEV14 BIT(1),            /* 1 = LEVEL 14 LOCK HELD    */
*        4  CRALEV13 BIT(1),            /* 1 = LEVEL 13 LOCK HELD    */
*        4  CRALEV12 BIT(1),            /* 1 = LEVEL 12 LOCK HELD    */
*        4  CRALEV11 BIT(1),            /* 1 = LEVEL 11 LOCK HELD    */
*        4  CRALEV10 BIT(1),            /* 1 = LEVEL 10 LOCK HELD    */
*        4  CRALEV09 BIT(1),            /* 1 = LEVEL 9 LOCK HELD     */
*        4  CRALEV08 BIT(1),            /* 1 = LEVEL 8 LOCK HELD     */
*        4  CRALEV07 BIT(1),            /* 1 = LEVEL 7 LOCK HELD     */
*        4  CRALEV06 BIT(1),            /* 1 = LEVEL 6 LOCK HELD     */
*        4  CRALEV05 BIT(1),            /* 1 = LEVEL 5 LOCK HELD     */
*        4  CRALEV04 BIT(1),            /* 1 = LEVEL 4 LOCK HELD     */
*        4  CRALEV03 BIT(1),            /* 1 = LEVEL 3 LOCK HELD     */
*        4  CRALEV02 BIT(1),            /* 1 = LEVEL 2 LOCK HELD     */
*        4  CRALEV01 BIT(1),            /* 1 = LEVEL 1 LOCK HELD     */
*      3 CRAL1PTR PTR(31),              /* PTR TO LEVEL 1 LOCK       */
*      3 CRAL2PTR PTR(31),              /* PTR TO LEVEL 2 LOCK       */
*      3 CRAL3PTR PTR(31),              /* PTR TO LEVEL 3 LOCK       */
*      3 CRAL4PTR PTR(31),              /* PTR TO LEVEL 4 LOCK       */
*      3 CRAL5PTR PTR(31),              /* PTR TO LEVEL 5 LOCK       */
*      3 CRAL6PTR PTR(31),              /* PTR TO LEVEL 6 LOCK       */
*      3 CRAL7PTR PTR(31),              /* PTR TO LEVEL 7 LOCK       */
*      3 CRAL8PTR PTR(31),              /* PTR TO LEVEL 8 LOCK       */
*      3 CRAL9PTR PTR(31),              /* PTR TO LEVEL 9 LOCK       */
*      3 CRALAPTR PTR(31),              /* RESERVED                  */
*/*                                                                  */
*/*   VS1/VS2 EXTENSION                                              */
*/*                                                                  */
*     2  CRARPH CHAR(LENGTH(ISTRPH)),   /* RPH ASSOCIATED WITH     1155
*                                          THIS CRH                  */
*     2  CRAPSS CHAR(LENGTH(ISTAPCRR)), /* PSS CRR                   */
*     2  CRAPROCR CHAR(LENGTH(ISTZCRR)) BDY(DWORD), /* PROCESS CRR   */
*     2  CRASVC CHAR(72) BDY(WORD),     /* SERVICE RTN CRA           */
*        3  CRAASCRR CHAR(LENGTH(ISTASCRR)), /* CRR FOR SMS          */
*        3  CRAHSIZ  PTR(31),           /* HEADER SIZE QUED SMS REQ  */
*        3  CRAMASK  PTR(31),           /* PREFIX MASK QUED SMS REQ  */
*        3  CRABUFA  FIXED(31),         /* BUFF QUE FOR FBQ ALLOCATION*
*           4 CRABFTBA BIT(1),          /* NO BUFFERS ALLOCATED YET   *
*     2  CRARSV01 PTR(31),              /* RESERVED                  */
*     2  CRARSV02 PTR(31),              /* RESERVED                  */
*     2  CRACHAIN PTR(31);              /* CHAIN FIELD USED TO QUEUE
*                                          CRA TO PREALLOCATE QUEUE
*                                          WHEN NOT IN USE           */
*DCL CRALMS32 BIT(32) CONSTANT('80000000'X); /* 32ND LEVEL LOCK MASK */
*DCL CRALMS31 BIT(32) CONSTANT('40000000'X); /* 31ST LEVEL LOCK MASK */
*DCL CRALMS30 BIT(32) CONSTANT('20000000'X); /* 30TH LEVEL LOCK MASK */
*DCL CRALMS29 BIT(32) CONSTANT('10000000'X); /* 29TH LEVEL LOCK MASK */
*DCL CRALMS28 BIT(32) CONSTANT('08000000'X); /* 28TH LEVEL LOCK MASK */
*DCL CRALMS27 BIT(32) CONSTANT('04000000'X); /* 27TH LEVEL LOCK MASK */
*DCL CRALMS26 BIT(32) CONSTANT('02000000'X); /* 26TH LEVEL LOCK MASK */
*DCL CRALMS25 BIT(32) CONSTANT('01000000'X); /* 25TH LEVEL LOCK MASK */
*DCL CRALMS24 BIT(32) CONSTANT('00800000'X); /* 24TH LEVEL LOCK MASK */
*DCL CRALMS23 BIT(32) CONSTANT('00400000'X); /* 23RD LEVEL LOCK MASK */
*DCL CRALMS22 BIT(32) CONSTANT('00200000'X); /* 22ND LEVEL LOCK MASK */
*DCL CRALMS21 BIT(32) CONSTANT('00100000'X); /* 21ST LEVEL LOCK MASK */
*DCL CRALMS20 BIT(32) CONSTANT('00080000'X); /* 20TH LEVEL LOCK MASK */
*DCL CRALMS19 BIT(32) CONSTANT('00040000'X); /* 19TH LEVEL LOCK MASK */
*DCL CRALMS18 BIT(32) CONSTANT('00020000'X); /* 18TH LEVEL LOCK MASK */
*DCL CRALMS17 BIT(32) CONSTANT('00010000'X); /* 17TH LEVEL LOCK MASK */
*DCL CRALMS16 BIT(32) CONSTANT('00008000'X); /* 16TH LEVEL LOCK MASK */
*DCL CRALMS15 BIT(32) CONSTANT('00004000'X); /* 15TH LEVEL LOCK MASK */
*DCL CRALMS14 BIT(32) CONSTANT('00002000'X); /* 14TH LEVEL LOCK MASK */
*DCL CRALMS13 BIT(32) CONSTANT('00001000'X); /* 13TH LEVEL LOCK MASK */
*DCL CRALMS12 BIT(32) CONSTANT('00000800'X); /* 12TH LEVEL LOCK MASK */
*DCL CRALMS11 BIT(32) CONSTANT('00000400'X); /* 11TH LEVEL LOCK MASK */
*DCL CRALMS10 BIT(32) CONSTANT('00000200'X); /* 10TH LEVEL LOCK MASK */
*DCL CRALMS09 BIT(32) CONSTANT('00000100'X); /* 9TH LEVEL LOCK MASK  */
*DCL CRALMS08 BIT(32) CONSTANT('00000080'X); /* 8TH LEVEL LOCK MASK  */
*DCL CRALMS07 BIT(32) CONSTANT('00000040'X); /* 7TH LEVEL LOCK MASK  */
*DCL CRALMS06 BIT(32) CONSTANT('00000020'X); /* 6TH LEVEL LOCK MASK  */
*DCL CRALMS05 BIT(32) CONSTANT('00000010'X); /* 5TH LEVEL LOCK MASK  */
*DCL CRALMS04 BIT(32) CONSTANT('00000008'X); /* 4TH LEVEL LOCK MASK  */
*DCL CRALMS03 BIT(32) CONSTANT('00000004'X); /* 3RD LEVEL LOCK MASK  */
*DCL CRALMS02 BIT(32) CONSTANT('00000002'X); /* 2ND LEVEL LOCK MASK  */
*DCL CRALMS01 BIT(32) CONSTANT('00000001'X); /* 1ST LEVEL LOCK MASK  */
*DCL CRACRA   CHAR(4) CONSTANT('CRA ');      /* CHARACTER C.B. ID    */
* /*  CONNECTION SERVICES COMPONENT RECOVERY RECORD                  */
* /* COMPLETED DCR SOLUTIONS                                         */
* /* 1H0540 APRIL 28, 1973 MB                                        */
*/* ZTR4417 JUNE 20, 73 DNM */                                     1189
* DCL 1 ISTCNSTA BDY(WORD) BASED,       /* CONNECTION SERVICES     1189
*                                          COMPONENT RECOVERY RECORD */
*     2  CNSTPFX CHAR(LENGTH(ISTPFCRR)), /* STANDARD PREFIX        1189
*                                          FOR CRR                   */
*     2  CNSTFLDA CHAR(3),              /* TRACE FIELD A - HISTORY   */
*        3  CNSMRINA BIT(1),            /* MASTER ENTERED            */
*        3  CNSAUTHA BIT(1),            /* ABOUT TO CALL AUTHORI-  1189
*                                          SATION EXIT       ZTR4417 */
*        3  CNSAQINA BIT(1),            /* ACQUIRE ENTERED           */
*        3  CNSXREQA BIT(1),            /* ACQUIRE SATISFIED         */
*        3  CNSQREQA BIT(1),            /* ACQUIRE QUEUED            */
*        3  CNSRLINA BIT(1),            /* RELEASE ENTERED           */
*        3  CNSDORLA BIT(1),            /* DOREL REALLOCATION      1189
*                                          ENTERED                   */
*        3  CNSTRRLA BIT(1),            /* RELEASE OF ACTIVE       1189
*                                          CONNECTION                */
*        3  CNSRQRLA BIT(1),            /* RELEASE QUEUED REQUEST    */
*        3  CNSPSINA BIT(1),            /* PASS ENTERED              */
*        3  CNSACINA BIT(1),            /* ACCEPT ENTERED            */
*        3  CNSLGINA BIT(1),            /* LOGON ENTERED             */
*        3  CNSGBINA BIT(1),            /* PREEMPT ENTERED           */
*        3  CNSCLINA BIT(1),            /* CANCEL ENTERED            */
*        3  CNSCLAQA BIT(1),            /* CANCEL ACQUIRES           */
*        3  CNSTCONA BIT(1),            /* TCONNECT                  */
*        3  CNSACONA BIT(1),            /* ACONNECT                  */
*        3  CNSQUEUA BIT(1),            /* QUEUE                     */
*        3  CNSSEARA BIT(1),            /* SEARCH Q                  */
*        3  CNSGETSA BIT(1),            /* CONNECTION SERVICES     1189
*                                          GETSTORE                  */
*        3  CNSFREEA BIT(1),            /* CONNECTION SERVICES     1189
*                                          FREESTORE                 */
*        3  CNSACCTA BIT(1),            /* ABOUT TO CALL           1189
*                                          ACCOUNTING EXIT           */
*        3  CNSLOG0A BIT(1),            /* LOGON 0                   */
*        3  CNSRSV01 BIT(1),            /* RESERVED                  */
*     2  CNSTFLDB CHAR(3),              /* TRACE FIELD B -         1189
*                                          CURRENT ACTIVITY          */
*        3  CNSMRINB BIT(1),                                       1189
*        3  CNSAUTHB BIT(1),                                       1189
*        3  CNSAQINB BIT(1),                                       1189
*        3  CNSXREQB BIT(1),                                       1189
*        3  CNSQREQB BIT(1),                                       1189
*        3  CNSRLINB BIT(1),                                       1189
*        3  CNSDORLB BIT(1),                                       1189
*        3  CNSTRRLB BIT(1),                                       1189
*        3  CNSRQRLB BIT(1),                                       1189
*        3  CNSPSINB BIT(1),                                       1189
*        3  CNSACINB BIT(1),                                       1189
*        3  CNSLGINB BIT(1),                                       1189
*        3  CNSGBINB BIT(1),                                       1189
*        3  CNSCLINB BIT(1),                                       1189
*        3  CNSCLAQB BIT(1),                                       1189
*        3  CNSTCONB BIT(1),                                       1189
*        3  CNSACONB BIT(1),                                       1189
*        3  CNSQUEUB BIT(1),                                       1189
*        3  CNSSEARB BIT(1),                                       1189
*        3  CNSGETSB BIT(1),                                       1189
*        3  CNSFREEB BIT(1),                                       1189
*        3  CNSACCTB BIT(1),                                       1189
*        3  CNSLOG0B BIT(1),                                       1189
*        3  CNSRSV05 BIT(1);                                       1189
*/* DCR SOLUTIONS COMPLETED                                          */
*/*                                                                  */
*/*        CRR FOR THE PORT SOLICITOR                                */
*DCL 1 ISTPSCRR BDY(WORD) BASED,        /* CRR FOR PORT SOLICITOR    */
*     2  PSCCNS CHAR(LENGTH(ISTCNSTA)), /* RESERVE SPACE FOR CONN. 1190
*                                          SVCS. AUDIT               */
*     2  PSCAUDIT,                      /* AUDIT TRAIL FOR PORT    1190
*                                          SOLICITOR                 */
*        3  PSCNTRD CHAR(2),            /* LIST OF MODULES ENTERED 1190
*                                          FOR PORT SOL              */
*           4  NNMC9P BIT(1),           /* INDICATES MODULE ISTNMC9P
*                                          ENTERED                   */
*           4  NNMC1S BIT(1),           /* INDICATES MODULE ISTNMC1S
*                                          ENTERED                   */
*           4  NNMC2S BIT(1),           /* INDICATES MODULE ISTNMC2S
*                                          ENTERED                   */
*           4  NNMC3S BIT(1),           /* INDICATES MODULE ISTNMC3S
*                                          ENTERED                   */
*           4  NNMC4S BIT(1),           /* INDICATES MODULE ISTNMC4S
*                                          ENTERED                   */
*           4  NNMC5S BIT(1),           /* INDICATES MODULE ISTNMC5S
*                                          ENTERED                   */
*           4  NNMC6S BIT(1),           /* INDICATES MODULE ISTNMC6S
*                                          ENTERED                   */
*           4  NNMC3P BIT(1),           /* INDICATES MODULE ISTNMC3P
*                                          ENTERED                   */
*           4  NNMC4P BIT(1),           /* INDICATES MODULE ISTNMC4P
*                                          ENTERED                   */
*           4  NNMC5P BIT(1),           /* INDICATES MODULE ISTNMC5P
*                                          ENTERED                   */
*           4  NNMC6P BIT(1),           /* INDICATES MODULE ISTNMC6P
*                                          ENTERED                   */
*           4  NNMC7P BIT(1),           /* INDICATES MODULE ISTNMC7P
*                                          ENTERED                   */
*           4  NNMC8P BIT(1),           /* INDICATES MODULE ISTNMC8P
*                                          ENTERED                   */
*           4  NNMC7S BIT(1),           /* INDICATES MODULE ISTNMC7S
*                                          ENTERED                   */
*           4  PSCRSVRD BIT(2),         /* RESERVED FOR FUTURE     1190
*                                          MODULES                   */
*        3  PSCCRT CHAR(2),             /* LIST OF MODULES WHO     1190
*                                          CAN HAVE CURRENT CONTROL  */
*           4  CNMC9P BIT(1),           /* INDICATES MODULE ISTNMC9P
*                                          RUNNING                   */
*           4  CNMC1S BIT(1),           /* INDICATES MODULE ISTNMC1S
*                                          RUNNING                   */
*           4  CNMC2S BIT(1),           /* INDICATES MODULE ISTNMC2S
*                                          RUNNING                   */
*           4  CNMC3S BIT(1),           /* INDICATES MODULE ISTNMC3S
*                                          RUNNING                   */
*           4  CNMC4S BIT(1),           /* INDICATES MODULE ISTNMC4S
*                                          RUNNING                   */
*           4  CNMC5S BIT(1),           /* INDICATES MODULE ISTNMC5S
*                                          RUNNING                   */
*           4  CNMC6S BIT(1),           /* INDICATES MODULE ISTNMC6S
*                                          RUNNING                   */
*           4  CNMC3P BIT(1),           /* INDICATES MODULE ISTNMC3P
*                                          RUNNING                   */
*           4  CNMC4P BIT(1),           /* INDICATES MODULE ISTNMC4P
*                                          RUNNING                   */
*           4  CNMC5P BIT(1),           /* INDICATES MODULE ISTNMC5P
*                                          RUNNING                   */
*           4  CNMC6P BIT(1),           /* INDICATES MODULE ISTNMC6P
*                                          RUNNING                   */
*           4  CNMC7P BIT(1),           /* INDICATES MODULE ISTNMC7P
*                                          RUNNING                   */
*           4  CNMC8P BIT(1),           /* INDICATES MODULE ISTNMC8P
*                                          RUNNING                   */
*           4  CNMC7S BIT(1),           /* INDICATES MODULE ISTNMC7S
*                                          RUNNING                   */
*           4  PSCRSV01 BIT(2),         /* RESERVED                  */
*        3  PSCRSV02 CHAR(2),           /* RESERVED - PADDING        */
*      2  PSCSAVE CHAR(64) BDY(WORD),   /* REGISTER SAVE AREA        */
*         3  PSCSV0 PTR(31),                                       1190
*         3  PSCSV1 PTR(31),                                       1190
*         3  PSCSV2 PTR(31),                                       1190
*         3  PSCSV3 PTR(31),                                       1190
*         3  PSCSV4 PTR(31),                                       1190
*         3  PSCSV5 PTR(31),                                       1190
*         3  PSCSV6 PTR(31),                                       1190
*         3  PSCSV7 PTR(31),                                       1190
*         3  PSCSV8 PTR(31),                                       1190
*         3  PSCSV9 PTR(31),                                       1190
*         3  PSCSV10 PTR(31),                                      1190
*         3  PSCSV11 PTR(31),                                      1190
*         3  PSCSV12 PTR(31),                                      1190
*         3  PSCSV13 PTR(31),                                      1190
*         3  PSCSV14 PTR(31),                                      1190
*         3  PSCSV15 PTR(31),                                      1190
*     2  PSCRSV03 PTR(31),              /* RESERVED                  */
*     2  PSCRSV04 PTR(31);              /* RESERVED                  */
*DCL TIDNMC9P BIT(8) CONSTANT('00'X);   /* THREAD ID FOR           1191
*                                          ISTNMC9P                  */
*DCL TIDNMC4P BIT(8) CONSTANT('01'X);   /* THREAD ID FOR           1192
*                                          ISTNMC4P                  */
*   DECLARE                                                        1193
*     EMCR0 PTR REG(0),                                            1193
*     EMCR1 PTR REG(1),                                            1193
*     EMCR2 PTR REG(2),                                            1193
*     EMCR3 PTR REG(3),                                            1193
*     EMCR4 PTR REG(4),                                            1193
*     EMCR5 PTR REG(5),                                            1193
*     EMCR6 PTR REG(6),                                            1193
*     EMCR7 PTR REG(7),                                            1193
*     EMCR8 PTR REG(8),                                            1193
*     EMCR9 PTR REG(9),                                            1193
*     EMCR10 PTR REG(10),                                          1193
*     EMCR11 PTR REG(11),                                          1193
*     EMCR12 PTR REG(12),                                          1193
*     EMCR13 PTR REG(13),                                          1193
*     EMCR14 PTR REG(14),                                          1193
*     EMCR15 PTR REG(15);                                          1193
*   DECLARE                                                        1194
*     ISTSDCCA ENTRY BASED(ATCCDADD) VALRG(*),/* CIDCTL ADD ROUTINE  */
*     ISTSDCCD ENTRY BASED(ATCCDDEL) VALRG(*),/* CIDCTL DELETE     1194
*                                      ROUTINE                       */
*     ISTSDCCF ENTRY BASED(ATCCDFND) VALRG(*),/* CIDCTL FIND ROUTINE */
*     ISTSDCCN ENTRY BASED(ATCCDFDN) VALRG(*),/* CIDCTL FIND NCB   1194
*                                      ROUTINE                       */
*     ISTSDCCR ENTRY BASED(ATCCDFIN) VALRG(*);/* CIDCTL FINISH     1194
*                                      ROUTINE                       */
*   DCL                                                            1195
*     CMZCIDM FIXED(15) DEFINED(ATCCIDM);/* CIDMASK ALIAS            */
*   DCL                                                            1196
*     ISTAPC34 ENTRY BASED(ATCAP34) VALRG(*);/* RESET ROUTINE        */
*   DCL                                                            1197
*     ISTAPC37 ENTRY BASED(ATCAP37) VALRG(*);/* TPQUE ROUTINE        */
*   GEN(PRINT ON);                                                 1198
*                                                                  1198
         PRINT ON
*/* END OF TPEPILOG                                                  */
*                                                                  1199
*                                   /*                       @D31KKDA*/
*   END ISTNMC3S                                                   1199
*                                                                  1199
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*                                                                  1199
*       ;                                                          1199
@EL00001 DS    0H                                                  1199
@EF00001 DS    0H                                                  1199
@ER00001 BR    @14                                                 1199
@DATA    DS    0H
@CH00507 DC    H'7'
@DATD    DSECT
         DS    0F
ISTNMC3S CSECT
         DS    0F
@CF00035 DC    F'1'
@CF00041 DC    F'2'
@CF00039 DC    F'3'
@CF00075 DC    F'4'
@CF00043 DC    F'8'
@CF00959 DC    XL4'80000000'
@CF00983 DC    XL4'08000000'
@CF03512 DC    XL4'00FFFFFF'
@CF04392 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
DNCBPTR  DS    A
FMCBPTR  DS    A
FSBPTR   DS    A
LCPBPTR  DS    A
CVTPTR   DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTNMC3S CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
SASIZE   DC    AL4(216+12+4)
FMZA0022 DS    FL4
         ORG   FMZA0022
@NM00045 DC    AL1(64)
@NM00046 DC    AL3(0)
         ORG   FMZA0022+4
FMZA0038 DS    FL4
         ORG   FMZA0038
@NM00047 DC    AL1(64)
@NM00048 DC    AL3(0)
         ORG   FMZA0038+4
FMZA0062 DS    FL4
         ORG   FMZA0062
@NM00049 DC    AL1(184)
@NM00050 DC    AL3(0)
         ORG   FMZA0062+4
FMZA0081 DS    FL4
         ORG   FMZA0081
@NM00051 DC    AL1(184)
@NM00052 DC    AL3(0)
         ORG   FMZA0081+4
FMZA0100 DS    FL4
         ORG   FMZA0100
@NM00053 DC    AL1(184)
@NM00054 DC    AL3(0)
         ORG   FMZA0100+4
FMZA0147 DS    FL4
         ORG   FMZA0147
@NM00057 DC    AL1(64)
@NM00058 DC    AL3(0)
         ORG   FMZA0147+4
FMZA0191 DS    FL4
         ORG   FMZA0191
@NM00059 DC    AL1(64)
@NM00060 DC    AL3(0)
         ORG   FMZA0191+4
CMZA0231 DS    FL4
         ORG   CMZA0231
@NM00063 DC    AL1(96)
@NM00064 DC    AL1(96)
@NM00065 DC    AL1(231)
@NM00066 DC    XL1'00'
         ORG   CMZA0231+4
CMZA0269 DS    FL4
         ORG   CMZA0269
@NM00067 DC    AL1(64)
@NM00068 DC    AL1(96)
@NM00069 DC    AL1(231)
@NM00070 DC    XL1'01'
         ORG   CMZA0269+4
FMZA0288 DS    FL4
         ORG   FMZA0288
@NM00071 DC    AL1(64)
@NM00072 DC    AL3(0)
         ORG   FMZA0288+4
FMZA0323 DS    FL4
         ORG   FMZA0323
@NM00075 DC    AL1(64)
@NM00076 DC    AL3(0)
         ORG   FMZA0323+4
ISTYPSOL DS    CL8
         ORG   ISTYPSOL
@NM00042 DC    CL8'ISTYPSOL'
         ORG   ISTYPSOL+8
CMZAA013 DC    CL4'855I'
CMZAA134 DC    CL4'857I'
CMZAA211 DC    CL4'855I'
CMZAA314 DC    CL4'857I'
CMZAA339 DC    CL4'859I'
CMZZO013 DC    F'0'
CMZZO134 DC    F'0'
CMZZO211 DC    F'0'
CMZZO314 DC    F'0'
CMZZO339 DC    F'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RPHPTR   EQU   @01
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01F   EQU   @01
GPR01P   EQU   @01
GPR02F   EQU   @02
GPR02P   EQU   @02
GPR03F   EQU   @03
GPR03P   EQU   @03
GPR04F   EQU   @04
GPR04P   EQU   @04
GPR05F   EQU   @05
GPR05P   EQU   @05
GPR06F   EQU   @06
GPR06P   EQU   @06
GPR07F   EQU   @07
GPR07P   EQU   @07
GPR08F   EQU   @08
GPR08P   EQU   @08
GPR09F   EQU   @09
GPR09P   EQU   @09
GPR10P   EQU   @10
GPR11P   EQU   @11
GPR12P   EQU   @12
GPR13P   EQU   @13
GPR14F   EQU   @14
GPR14P   EQU   @14
GPR15F   EQU   @15
GPR15P   EQU   @15
C3SR1    EQU   @01
C3SR2    EQU   @02
CSLPTR   EQU   @06
C3SR4    EQU   @04
C3SR6    EQU   @06
C3SR7    EQU   @07
C3SFSB   EQU   @08
C3SR9    EQU   @09
C3SR13   EQU   @13
C3SR14   EQU   @14
C3SR15   EQU   @15
FMCPTR   EQU   @05
RDTPTR   EQU   @03
CMZK0007 EQU   @01
EMCR2    EQU   @02
EMCR3    EQU   @03
REG1013  EQU   @01
EMCR13   EQU   @13
REG15013 EQU   @15
REG1134  EQU   @01
REG15134 EQU   @15
PNTR0163 EQU   @08
REG1211  EQU   @01
REG15211 EQU   @15
REG1314  EQU   @01
REG15314 EQU   @15
REG1339  EQU   @01
REG15339 EQU   @15
EMCR0    EQU   @00
EMCR1    EQU   @01
EMCR10   EQU   @10
EMCR11   EQU   @11
EMCR12   EQU   @12
EMCR14   EQU   @14
EMCR15   EQU   @15
EMCR4    EQU   @04
EMCR5    EQU   @05
EMCR6    EQU   @06
EMCR7    EQU   @07
EMCR8    EQU   @08
EMCR9    EQU   @09
GPR10F   EQU   @10
GPR11F   EQU   @11
GPR12F   EQU   @12
GPR13F   EQU   @13
ATCLCPTR EQU   1032
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00002 EQU   LOKCHNG+2
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVTCODE EQU   ISTDEVCH+1
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTRPRE  EQU   0
RPRNAME  EQU   ISTRPRE
RPRCOMID EQU   ISTRPRE+8
RPRDAF   EQU   RPRCOMID+2
RPRFLAGA EQU   ISTRPRE+21
RPRLIVE  EQU   RPRFLAGA
RPRFLAGB EQU   ISTRPRE+22
RPRCAUSE EQU   ISTRPRE+23
RPRFLAGD EQU   ISTRPRE+61
RPRFLAGC EQU   ISTRPRE+62
ISTRCPRE EQU   0
RCPPMODE EQU   ISTRCPRE+91
RCPLGNIN EQU   ISTRCPRE+92
ISTRDT   EQU   0
RDTPLEN  EQU   ISTRDT+72
RDTPRIOR EQU   RDTPLEN
RDTFLAGB EQU   ISTRDT+91
RDTVYRPH EQU   ISTRDT+108
RDTSTCNT EQU   ISTRDT+112
ISTRAP   EQU   0
RAPFLG   EQU   ISTRAP+108
RAPFLGB  EQU   ISTRAP+109
RAPFLGC  EQU   ISTRAP+110
ISTRLC   EQU   0
RLCADR   EQU   ISTRLC+72
RLCFLAG  EQU   RLCADR
ISTRRN   EQU   0
RRNADR   EQU   ISTRRN+136
RRNFLAG  EQU   RRNADR
RRNUCBAD EQU   RRNADR+1
RRNRDF   EQU   ISTRRN+172
RRNRDFA  EQU   RRNRDF
RRNRDFB  EQU   RRNRDF+1
RRNCMF   EQU   ISTRRN+176
RRNCMFA  EQU   RRNCMF
RRNCMFB  EQU   RRNCMF+1
RRNCMFC  EQU   RRNCMF+2
RRNCMFD  EQU   RRNCMF+3
RRNNMDPD EQU   ISTRRN+192
RRNHPRE  EQU   ISTRRN+216
ISTRGP   EQU   0
RGPFLG   EQU   ISTRGP+72
ISTRLN   EQU   0
RLNADR   EQU   ISTRLN+72
RLNFLAG  EQU   RLNADR
RLNUCBAD EQU   RLNADR+1
RLNSTAT1 EQU   ISTRLN+86
RLNSTAT2 EQU   ISTRLN+87
RLNRDF   EQU   ISTRLN+88
RLNRDFA  EQU   RLNRDF
RLNRACNT EQU   RLNRDFA
RLNRDFB  EQU   RLNRDF+1
RLNCRFLG EQU   ISTRLN+102
RLNLSCMD EQU   RLNCRFLG
ISTRPT   EQU   0
RPTLNCID EQU   ISTRPT+116
RPTCTNM  EQU   ISTRPT+120
RPTDITT  EQU   ISTRPT+128
RPTATERM EQU   ISTRPT+132
RPTFLAG1 EQU   ISTRPT+140
ISTRCL   EQU   0
RCLADR   EQU   ISTRCL+72
RCLFLAG  EQU   RCLADR
ISTRTR   EQU   0
RTRADR   EQU   ISTRTR+124
RTRFLAG  EQU   RTRADR
RTRRDFA  EQU   ISTRTR+136
RTRRAALL EQU   RTRRDFA
RTRRDFB  EQU   ISTRTR+137
RTRRDFC  EQU   ISTRTR+138
RTRRDFD  EQU   ISTRTR+139
RTRRDFE  EQU   ISTRTR+140
RTRRDFF  EQU   ISTRTR+141
RTRCRFLG EQU   ISTRTR+143
RTRLSCMD EQU   RTRCRFLG
RTRBSCID EQU   ISTRTR+188
ISTRIN   EQU   0
RINDFD   EQU   ISTRIN+124
RINREMPO EQU   RINDFD
RINNODEF EQU   RINDFD
RINLDISC EQU   RINDFD
RINNODID EQU   ISTRIN+125
RINRLDAF EQU   ISTRIN+126
RINREMOT EQU   ISTRIN+128
RINVPAB  EQU   ISTRIN+132
RINRPHCN EQU   ISTRIN+136
RINNCSPL EQU   ISTRIN+140
RINCNCNT EQU   ISTRIN+144
ISTRDS   EQU   0
ISTDOT   EQU   0
ISTRCC   EQU   0
RCCFLAG  EQU   ISTRCC+73
RCCFLAGB EQU   ISTRCC+74
RCCSTAID EQU   ISTRCC+78
RCCID48  EQU   RCCSTAID+2
RCCCRFLG EQU   ISTRCC+108
ISTRLU   EQU   0
RLUFLAG  EQU   ISTRLU+125
RLUCRFLG EQU   ISTRLU+126
RLUPACE  EQU   ISTRLU+132
RLUNCPPC EQU   ISTRLU+134
RLUUSSTB EQU   ISTRLU+140
RLUMODET EQU   ISTRLU+152
ISTRPX   EQU   0
ISTRLX   EQU   0
RLXFLAGA EQU   ISTRLX+76
ISTRSW   EQU   0
ISTRDA   EQU   0
RDAADR   EQU   ISTRDA+72
RDAFLAG  EQU   RDAADR
RDAUCBAD EQU   RDAADR+1
ISTRLS   EQU   0
ISTDNT   EQU   0
ISTGNT   EQU   0
ISTPAT   EQU   0
PATFLAGA EQU   ISTPAT+7
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTDYPAB EQU   0
ISTRPH   EQU   0
RPHCNTL  EQU   ISTRPH
RPHFLAGS EQU   RPHCNTL+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   RPHCNTL+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHMAJCB EQU   ISTRPH+21
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHCRR   EQU   ISTRPH+32
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCBPDA  EQU   ATCCOM+128
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCGTSTR EQU   ATCCOM+164
ATCSMRQ  EQU   ATCCOM+180
ATCSMRS  EQU   ATCCOM+188
ATCCIDM  EQU   ATCCOM+266
ATCCDADD EQU   ISTATCVT+276
ATCCDDEL EQU   ISTATCVT+280
ATCCDFND EQU   ISTATCVT+284
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCMSGP  EQU   ISTATCVT+344
ATCHPGM  EQU   ISTATCVT+384
ATCAP33  EQU   ISTATCVT+444
ATCAP35  EQU   ISTATCVT+448
ATCAP36  EQU   ISTATCVT+452
ATCCDFIN EQU   ISTATCVT+460
ATCCDFDN EQU   ISTATCVT+464
ATCVOCLK EQU   ISTATCVT+468
ATCRDTLK EQU   ISTATCVT+472
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCSTAT2 EQU   ISTATCVT+818
ATCVTBAM EQU   ISTATCVT+908
@NM00019 EQU   ATCVTBAM+3
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCAP31  EQU   ATCAOSM+24
ATCAP34  EQU   ATCAOSM+32
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCAP37  EQU   ATCAOSM+264
ATCCRA   EQU   ATCAOSM+280
ATCCRACN EQU   ATCCRA+4
ATCSRB   EQU   ATCAOSM+288
ATCSRBCN EQU   ATCSRB+4
ATCCRPL  EQU   ATCAOSM+296
ATCRPLCN EQU   ATCCRPL+4
ATCSQAFR EQU   ATCAOSM+304
ATCORTBC EQU   ATCSQAFR+4
ATCORSRB EQU   ATCORTBC
@NM00021 EQU   ATCAOSM+332
ATCVTFLG EQU   ATCAOSM+392
ATCZFLAG EQU   ATCAOSM+588
ISTNCB   EQU   0
NCBRDTE  EQU   ISTNCB+4
NCBFMCBA EQU   ISTNCB+16
NCBFLAGS EQU   ISTNCB+24
NCBFRAS  EQU   NCBFLAGS+1
NCBFTRIO EQU   NCBFRAS
NCBFLAG1 EQU   NCBFLAGS+2
ISTDNCB  EQU   0
DNCOS    EQU   ISTDNCB+56
DNCZFLGS EQU   DNCOS
DNCBSCED EQU   DNCOS+2
ISTPROCD EQU   0
PROPROC  EQU   ISTPROCD
PROPROC1 EQU   PROPROC
PROPROC2 EQU   PROPROC+1
PROPROC3 EQU   PROPROC+2
PROPROC4 EQU   PROPROC+3
PROPROCS EQU   0
PROSETMS EQU   PROPROCS+1
PROSETM2 EQU   PROSETMS
PROSETM3 EQU   PROSETMS+1
PROSETM4 EQU   PROSETMS+2
ISTFMCB  EQU   0
FMCSAF   EQU   ISTFMCB+2
FMCDNCBA EQU   ISTFMCB+16
FMCFMCBA EQU   ISTFMCB+20
FMCSTAT  EQU   ISTFMCB+28
FMCDEVOF EQU   FMCSTAT
FMCSTAT1 EQU   ISTFMCB+29
FMCCMDFL EQU   ISTFMCB+31
FMCCMPS1 EQU   ISTFMCB+36
FMCMODE  EQU   ISTFMCB+52
FMCPAB1  EQU   ISTFMCB+64
FMCSIPA  EQU   ISTFMCB+148
FMCNXOSQ EQU   ISTFMCB+152
FMCNXCFM EQU   FMCNXOSQ
FMCNXOSC EQU   FMCNXOSQ+2
FMCSSTAT EQU   ISTFMCB+159
FMCPACE  EQU   ISTFMCB+160
FMCPACEN EQU   FMCPACE
FMCPACEM EQU   FMCPACE+1
FMCPACPC EQU   FMCPACE+2
FMCCVAL  EQU   FMCPACE+3
FMCOBCE  EQU   FMCCVAL
FMCCLEXT EQU   ISTFMCB+164
FMCRPLA  EQU   FMCCLEXT
FMCFBA   EQU   FMCCLEXT+4
FMCCMPS2 EQU   FMCCLEXT+16
FMCFLGA  EQU   FMCCMPS2
FMCFLGCL EQU   FMCCMPS2+1
FMCPSCMD EQU   FMCCMPS2+2
FMCPSTAT EQU   FMCCMPS2+3
FMCELKST EQU   FMCPSTAT
FMCPCLSD EQU   FMCPSTAT
FMCSTAT2 EQU   ISTFMCB+186
FMCCPIP  EQU   FMCSTAT2
FMCMODEB EQU   ISTFMCB+189
FMCCLSEQ EQU   ISTFMCB+190
FMCRRESP EQU   ISTFMCB+195
FMCSSEGQ EQU   ISTFMCB+200
FMCFBAS  EQU   ISTFMCB+216
FMCZV002 EQU   FMCFBAS
FMCSNCTL EQU   ISTFMCB+224
FMCSCFLG EQU   FMCSNCTL
FMCVS1   EQU   ISTFMCB+232
FMCZFLAG EQU   FMCVS1
FMCZF006 EQU   FMCZFLAG
FMCLBXM  EQU   FMCVS1+12
FMCSHEAQ EQU   FMCLBXM
FMCLCPBQ EQU   FMCVS1+16
FMCLCPAQ EQU   FMCVS1+20
FMCSEQ1  EQU   FMCVS1+34
FMCZFLG2 EQU   FMCVS1+35
FMCCVFLG EQU   FMCVS1+44
FMCFLAG  EQU   0
FMCFLGB  EQU   FMCFLAG
ISTCSL   EQU   0
CSLRDEF  EQU   ISTCSL
CSLRDTE  EQU   CSLRDEF
CSLNDEF  EQU   ISTCSL+4
CSLNIB   EQU   CSLNDEF
CSLDDEF  EQU   ISTCSL+8
CSLDATA  EQU   CSLDDEF
ISTFDB   EQU   0
FDBFDBA  EQU   ISTFDB
FDBOFSET EQU   ISTFDB+10
ISTFSB   EQU   0
FSBFSB   EQU   ISTFSB
FSBMNRCD EQU   FSBFSB+2
FSBSFLGS EQU   FSBFSB+3
FSBFSBA  EQU   FSBFSB+4
FSBBTH   EQU   FSBFSB+8
FSBCID   EQU   FSBBTH
FSBRQTAG EQU   FSBBTH+4
FSBSEQID EQU   FSBRQTAG
FSBFLAGS EQU   FSBSEQID
FSBSEQ   EQU   FSBSEQID+1
FSBCSWST EQU   FSBBTH+6
FSBTHFLD EQU   FSBCSWST
FSBTH1   EQU   FSBTHFLD
FSBSYSRS EQU   FSBTH1
FSBTH2   EQU   FSBTHFLD+1
FSBEXTRS EQU   FSBTH2
FSBXFSTS EQU   FSBEXTRS
FSBXCODE EQU   FSBEXTRS
FSBNETRS EQU   FSBFSB+16
FSBSRCAT EQU   FSBNETRS
FSBERC   EQU   FSBNETRS+1
FSBFBMI  EQU   FSBERC
FSBDMGRS EQU   FSBFSB+18
FSBSS1   EQU   FSBDMGRS
FSBSS2   EQU   FSBDMGRS+1
FSBLCPB  EQU   FSBFSB+20
FSBMSGID EQU   FSBLCPB
FSBLCCWA EQU   FSBFSB+24
FSBRLSTS EQU   FSBLCCWA
FSBFDB   EQU   ISTFSB+32
ISTLCCW  EQU   0
LCCWOP   EQU   ISTLCCW
LCCWRWOP EQU   LCCWOP
LCCWCTL  EQU   LCCWRWOP
LCCWFLAG EQU   ISTLCCW+1
LCCWLSI  EQU   LCCWFLAG
LCCWCNT  EQU   ISTLCCW+2
LCCWDATA EQU   ISTLCCW+4
ISTLCPB  EQU   0
LCPTYPE  EQU   ISTLCPB
LCPLNGTH EQU   ISTLCPB+1
LCPREQTG EQU   ISTLCPB+2
LCPFLAGS EQU   LCPREQTG
LCPZF001 EQU   LCPFLAGS
LCPZRT02 EQU   LCPZF001
LCPZF002 EQU   LCPFLAGS
LCPZRT03 EQU   LCPZF002
LCPZF003 EQU   LCPFLAGS
LCPZRT04 EQU   LCPZF003
LCPZF004 EQU   LCPFLAGS
LCPZRT05 EQU   LCPZF004
LCPZRT06 EQU   LCPFLAGS
LCPZRT07 EQU   LCPFLAGS
LCPMNRCD EQU   LCPREQTG+1
LCPZRT08 EQU   LCPMNRCD
LCPZRT09 EQU   LCPMNRCD
LCPCHAIN EQU   ISTLCPB+4
LCPCHAI1 EQU   LCPCHAIN
LCPRUCNT EQU   ISTLCPB+8
LCPFLAG2 EQU   ISTLCPB+9
LCPTLBPI EQU   LCPFLAG2
LCPFID0  EQU   LCPFLAG2
LCPSEQ   EQU   ISTLCPB+10
LCPCID   EQU   ISTLCPB+16
LCPSAF   EQU   LCPCID
LCPDAF   EQU   LCPCID+2
LCPNXLCW EQU   ISTLCPB+20
LCPFDBA  EQU   ISTLCPB+24
LCPFLG1  EQU   ISTLCPB+37
LCPFLCCW EQU   ISTLCPB+40
LCPLCCW  EQU   ISTLCPB+48
LCPPABA  EQU   LCPLCCW+4
LCPRPHA  EQU   LCPPABA
ISTNMLPB EQU   0
NMCONTRL EQU   ISTNMLPB+72
NMFNCTCD EQU   NMCONTRL
NMLCWCMD EQU   NMCONTRL+2
NMRDTEA  EQU   NMCONTRL+4
ISTPLCPB EQU   0
PLCLCCW  EQU   ISTPLCPB+56
ISTCSP   EQU   0
CSPIDX   EQU   ISTCSP
CSPOPT   EQU   ISTCSP+2
CSPOPT1  EQU   CSPOPT
CSPOPT2  EQU   CSPOPT+1
CSPNOREL EQU   CSPOPT2
CSPACES  EQU   CSPOPT2
CSPACQS  EQU   CSPOPT2
CSPSRC   EQU   ISTCSP+4
CSPDEST  EQU   ISTCSP+8
CSPRSCE  EQU   ISTCSP+12
CSPRSC2B EQU   ISTCSP+32
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
FSBC3S   EQU   0
ISTZSAVE EQU   0
ZSAZSVBC EQU   ISTZSAVE
ZSAZSVMS EQU   ZSAZSVBC
ISTPFCRR EQU   0
PFCCRR   EQU   ISTPFCRR
PFCCRRID EQU   PFCCRR
PFCCRRLN EQU   PFCCRR+2
PFCHDR   EQU   ISTPFCRR+4
PFCCRRO  EQU   PFCHDR
PFCFRRO  EQU   PFCHDR+4
ISTCFCRR EQU   0
CFCAUDIT EQU   ISTCFCRR
CFCNTRD  EQU   CFCAUDIT
CFCCRT   EQU   CFCAUDIT+1
ISTZCRR  EQU   0
ZCRCRR   EQU   ISTZCRR
ZCRFLGS1 EQU   ISTZCRR+12
ZCRFLGS2 EQU   ISTZCRR+13
ZCRSWFLD EQU   ISTZCRR+14
ZCRENDSH EQU   ZCRSWFLD
ZCRNDLCP EQU   ZCRSWFLD
ZCRRESET EQU   ZCRSWFLD
ZCRFLGS3 EQU   ISTZCRR+15
ZCRGENSW EQU   ISTZCRR+16
ZCRPFLGS EQU   ISTZCRR+17
ZCRIBPR  EQU   ISTZCRR+18
ZCRSCPSW EQU   ISTZCRR+19
ZCRPARMS EQU   ISTZCRR+24
ZCRFBPTR EQU   ZCRPARMS
ZCRDFRDA EQU   ZCRPARMS+10
ZCRPCOD1 EQU   ZCRPARMS+12
ZCRPLSBF EQU   ZCRPCOD1
ZCRPCOD2 EQU   ZCRPARMS+13
ZCRSVRTN EQU   ISTZCRR+56
ZCRWKARA EQU   ISTZCRR+156
ZCRCIDSV EQU   ISTZCRR+192
ZCRAUDIT EQU   ISTZCRR+440
ZCRENTER EQU   ZCRAUDIT+5
ZCRLCPB  EQU   ISTZCRR+480
ZCRRHRU  EQU   ZCRLCPB
ISTASCRR EQU   0
ASCFLAGS EQU   ISTASCRR+16
ASCFLG1  EQU   ASCFLAGS
ASCFLG2  EQU   ASCFLAGS+2
ASCFLG3  EQU   ASCFLAGS+4
ASCUSRGS EQU   ISTASCRR+28
ISTAPCRR EQU   0
APCATFLG EQU   ISTAPCRR+16
APCRFLG  EQU   ISTAPCRR+18
APCSAVE  EQU   ISTAPCRR+44
APCCOMF  EQU   ISTAPCRR+116
APCCOMF1 EQU   APCCOMF
APC31FLG EQU   ISTAPCRR+132
APC52FLG EQU   ISTAPCRR+133
APC53FLG EQU   ISTAPCRR+134
APC54FLG EQU   ISTAPCRR+135
APC57FLG EQU   ISTAPCRR+136
ISTCRA   EQU   0
CRABASIC EQU   ISTCRA
CRAHDR   EQU   CRABASIC
CRACRR   EQU   CRAHDR
CRALKACT EQU   CRABASIC+8
CRAL2PTR EQU   CRABASIC+16
CRAL3PTR EQU   CRABASIC+20
CRASVC   EQU   ISTCRA+848
CRABUFA  EQU   CRASVC+68
ISTCNSTA EQU   0
CNSTFLDA EQU   ISTCNSTA+16
CNSTFLDB EQU   ISTCNSTA+19
ISTPSCRR EQU   0
PSCAUDIT EQU   ISTPSCRR+22
PSCNTRD  EQU   PSCAUDIT
NNMC3S   EQU   PSCNTRD
PSCCRT   EQU   PSCAUDIT+2
CNMC3S   EQU   PSCCRT
PSCSAVE  EQU   ISTPSCRR+28
ISTSDCCF EQU   0
@NM00043 EQU   0
CMZID013 EQU   @NM00043
@NM00044 EQU   @NM00043+4
CMZRL013 EQU   @NM00044
CMZRA013 EQU   @NM00044+1
CMZEA013 EQU   @NM00043+8
CMZVP013 EQU   @NM00043+12
CMZSA013 EQU   0
CMTA013  EQU   0
FMZL0022 EQU   0
FMZL0038 EQU   0
FMZL0054 EQU   0
FMZL0062 EQU   0
FMZL0081 EQU   0
FMZL0100 EQU   0
FMZL0124 EQU   0
@NM00055 EQU   0
CMZID134 EQU   @NM00055
@NM00056 EQU   @NM00055+4
CMZRL134 EQU   @NM00056
CMZRA134 EQU   @NM00056+1
CMZEA134 EQU   @NM00055+8
CMZVP134 EQU   @NM00055+12
CMZSA134 EQU   0
CMTA134  EQU   0
ISTSDCCR EQU   0
FMZL0147 EQU   0
ISTAPC37 EQU   0
FMZL0181 EQU   0
FMZL0191 EQU   0
@NM00061 EQU   0
CMZID211 EQU   @NM00061
@NM00062 EQU   @NM00061+4
CMZRL211 EQU   @NM00062
CMZRA211 EQU   @NM00062+1
CMZEA211 EQU   @NM00061+8
CMZVP211 EQU   @NM00061+12
CMZSA211 EQU   0
CMTA211  EQU   0
FMZL0249 EQU   0
FMZL0254 EQU   0
FMZL0259 EQU   0
FMZL0288 EQU   0
FMZL0304 EQU   0
@NM00073 EQU   0
CMZID314 EQU   @NM00073
@NM00074 EQU   @NM00073+4
CMZRL314 EQU   @NM00074
CMZRA314 EQU   @NM00074+1
CMZEA314 EQU   @NM00073+8
CMZVP314 EQU   @NM00073+12
CMZSA314 EQU   0
CMTA314  EQU   0
FMZL0323 EQU   0
@NM00077 EQU   0
CMZID339 EQU   @NM00077
@NM00078 EQU   @NM00077+4
CMZRL339 EQU   @NM00078
CMZRA339 EQU   @NM00078+1
CMZEA339 EQU   @NM00077+8
CMZVP339 EQU   @NM00077+12
CMZSA339 EQU   0
CMTA339  EQU   0
ISTAPC34 EQU   0
ISTSDCCA EQU   0
ISTSDCCD EQU   0
ISTSDCCN EQU   0
FSBCOMBN EQU   FSBNETRS
FSBRHFLD EQU   FSBCOMBN+1
FSBRH3   EQU   FSBRHFLD+2
FSBLDFLG EQU   FSBRH3
@NM00036 EQU   FSBRQTAG
LCPZTIE  EQU   LCPCID
LCPZSNAM EQU   LCPZTIE+8
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
CMZCIDM  EQU   ATCCIDM
RTRDNCBA EQU   ISTRTR+40
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
LCPZTRV4 EQU   LCPZSNAM+4
LCPZTRV1 EQU   LCPZSNAM
LCPZSNA  EQU   LCPZTIE+4
LCPZFMCA EQU   LCPZTIE
FSBRT0B  EQU   @NM00036+1
FSBRT0A  EQU   @NM00036+1
FSBRT09  EQU   @NM00036+1
FSBRT08  EQU   @NM00036+1
FSBRT07  EQU   @NM00036
FSBRT06  EQU   @NM00036
FSBRT05  EQU   @NM00036
FSBRT04  EQU   @NM00036
FSBRT03  EQU   @NM00036
FSBRT02  EQU   @NM00036
FSBRT01  EQU   @NM00036
FSBRT00  EQU   @NM00036
FSBLDCUF EQU   FSBLDFLG
FSBLDSIF EQU   FSBLDFLG
FSBLDSOF EQU   FSBLDFLG
FSBLDEBF EQU   FSBLDFLG
FSBLDBBF EQU   FSBLDFLG
FSBLDFME EQU   FSBLDFLG
FSBLDSCF EQU   FSBLDFLG
FSBLDRMF EQU   FSBLDFLG
FSBRH2   EQU   FSBRHFLD+1
FSBRH1   EQU   FSBRHFLD
FSBALIGN EQU   FSBCOMBN
PSCRSV04 EQU   ISTPSCRR+96
PSCRSV03 EQU   ISTPSCRR+92
PSCSV15  EQU   PSCSAVE+60
PSCSV14  EQU   PSCSAVE+56
PSCSV13  EQU   PSCSAVE+52
PSCSV12  EQU   PSCSAVE+48
PSCSV11  EQU   PSCSAVE+44
PSCSV10  EQU   PSCSAVE+40
PSCSV9   EQU   PSCSAVE+36
PSCSV8   EQU   PSCSAVE+32
PSCSV7   EQU   PSCSAVE+28
PSCSV6   EQU   PSCSAVE+24
PSCSV5   EQU   PSCSAVE+20
PSCSV4   EQU   PSCSAVE+16
PSCSV3   EQU   PSCSAVE+12
PSCSV2   EQU   PSCSAVE+8
PSCSV1   EQU   PSCSAVE+4
PSCSV0   EQU   PSCSAVE
PSCRSV02 EQU   PSCAUDIT+4
PSCRSV01 EQU   PSCCRT+1
CNMC7S   EQU   PSCCRT+1
CNMC8P   EQU   PSCCRT+1
CNMC7P   EQU   PSCCRT+1
CNMC6P   EQU   PSCCRT+1
CNMC5P   EQU   PSCCRT+1
CNMC4P   EQU   PSCCRT+1
CNMC3P   EQU   PSCCRT
CNMC6S   EQU   PSCCRT
CNMC5S   EQU   PSCCRT
CNMC4S   EQU   PSCCRT
CNMC2S   EQU   PSCCRT
CNMC1S   EQU   PSCCRT
CNMC9P   EQU   PSCCRT
PSCRSVRD EQU   PSCNTRD+1
NNMC7S   EQU   PSCNTRD+1
NNMC8P   EQU   PSCNTRD+1
NNMC7P   EQU   PSCNTRD+1
NNMC6P   EQU   PSCNTRD+1
NNMC5P   EQU   PSCNTRD+1
NNMC4P   EQU   PSCNTRD+1
NNMC3P   EQU   PSCNTRD
NNMC6S   EQU   PSCNTRD
NNMC5S   EQU   PSCNTRD
NNMC4S   EQU   PSCNTRD
NNMC2S   EQU   PSCNTRD
NNMC1S   EQU   PSCNTRD
NNMC9P   EQU   PSCNTRD
PSCCNS   EQU   ISTPSCRR
CNSRSV05 EQU   CNSTFLDB+2
CNSLOG0B EQU   CNSTFLDB+2
CNSACCTB EQU   CNSTFLDB+2
CNSFREEB EQU   CNSTFLDB+2
CNSGETSB EQU   CNSTFLDB+2
CNSSEARB EQU   CNSTFLDB+2
CNSQUEUB EQU   CNSTFLDB+2
CNSACONB EQU   CNSTFLDB+2
CNSTCONB EQU   CNSTFLDB+1
CNSCLAQB EQU   CNSTFLDB+1
CNSCLINB EQU   CNSTFLDB+1
CNSGBINB EQU   CNSTFLDB+1
CNSLGINB EQU   CNSTFLDB+1
CNSACINB EQU   CNSTFLDB+1
CNSPSINB EQU   CNSTFLDB+1
CNSRQRLB EQU   CNSTFLDB+1
CNSTRRLB EQU   CNSTFLDB
CNSDORLB EQU   CNSTFLDB
CNSRLINB EQU   CNSTFLDB
CNSQREQB EQU   CNSTFLDB
CNSXREQB EQU   CNSTFLDB
CNSAQINB EQU   CNSTFLDB
CNSAUTHB EQU   CNSTFLDB
CNSMRINB EQU   CNSTFLDB
CNSRSV01 EQU   CNSTFLDA+2
CNSLOG0A EQU   CNSTFLDA+2
CNSACCTA EQU   CNSTFLDA+2
CNSFREEA EQU   CNSTFLDA+2
CNSGETSA EQU   CNSTFLDA+2
CNSSEARA EQU   CNSTFLDA+2
CNSQUEUA EQU   CNSTFLDA+2
CNSACONA EQU   CNSTFLDA+2
CNSTCONA EQU   CNSTFLDA+1
CNSCLAQA EQU   CNSTFLDA+1
CNSCLINA EQU   CNSTFLDA+1
CNSGBINA EQU   CNSTFLDA+1
CNSLGINA EQU   CNSTFLDA+1
CNSACINA EQU   CNSTFLDA+1
CNSPSINA EQU   CNSTFLDA+1
CNSRQRLA EQU   CNSTFLDA+1
CNSTRRLA EQU   CNSTFLDA
CNSDORLA EQU   CNSTFLDA
CNSRLINA EQU   CNSTFLDA
CNSQREQA EQU   CNSTFLDA
CNSXREQA EQU   CNSTFLDA
CNSAQINA EQU   CNSTFLDA
CNSAUTHA EQU   CNSTFLDA
CNSMRINA EQU   CNSTFLDA
CNSTPFX  EQU   ISTCNSTA
CRACHAIN EQU   ISTCRA+928
CRARSV02 EQU   ISTCRA+924
CRARSV01 EQU   ISTCRA+920
CRABFTBA EQU   CRABUFA
CRAMASK  EQU   CRASVC+64
CRAHSIZ  EQU   CRASVC+60
CRAASCRR EQU   CRASVC
CRAPROCR EQU   ISTCRA+312
CRAPSS   EQU   ISTCRA+160
CRARPH   EQU   ISTCRA+52
CRALAPTR EQU   CRABASIC+48
CRAL9PTR EQU   CRABASIC+44
CRAL8PTR EQU   CRABASIC+40
CRAL7PTR EQU   CRABASIC+36
CRAL6PTR EQU   CRABASIC+32
CRAL5PTR EQU   CRABASIC+28
CRAL4PTR EQU   CRABASIC+24
CRAL1PTR EQU   CRABASIC+12
CRALEV01 EQU   CRALKACT+3
CRALEV02 EQU   CRALKACT+3
CRALEV03 EQU   CRALKACT+3
CRALEV04 EQU   CRALKACT+3
CRALEV05 EQU   CRALKACT+3
CRALEV06 EQU   CRALKACT+3
CRALEV07 EQU   CRALKACT+3
CRALEV08 EQU   CRALKACT+3
CRALEV09 EQU   CRALKACT+2
CRALEV10 EQU   CRALKACT+2
CRALEV11 EQU   CRALKACT+2
CRALEV12 EQU   CRALKACT+2
CRALEV13 EQU   CRALKACT+2
CRALEV14 EQU   CRALKACT+2
CRALEV15 EQU   CRALKACT+2
CRALEV16 EQU   CRALKACT+2
CRALEV17 EQU   CRALKACT+1
CRALEV18 EQU   CRALKACT+1
CRALEV19 EQU   CRALKACT+1
CRALEV20 EQU   CRALKACT+1
CRALEV21 EQU   CRALKACT+1
CRALEV22 EQU   CRALKACT+1
CRALEV23 EQU   CRALKACT+1
CRALEV24 EQU   CRALKACT+1
CRALEV25 EQU   CRALKACT
CRALEV26 EQU   CRALKACT
CRALEV27 EQU   CRALKACT
CRALEV28 EQU   CRALKACT
CRALEV29 EQU   CRALKACT
CRALEV30 EQU   CRALKACT
CRALEV31 EQU   CRALKACT
CRALEV32 EQU   CRALKACT
CRAFRR   EQU   CRAHDR+4
@NM00090 EQU   ISTAPCRR+137
@NM00089 EQU   APC57FLG
APCNREL  EQU   APC57FLG
APCRECRA EQU   APC57FLG
@NM00088 EQU   APC54FLG
APCRLST  EQU   APC54FLG
APCPR153 EQU   APC53FLG
@NM00087 EQU   APC52FLG
APCWKF   EQU   APC52FLG
APCNWF   EQU   APC52FLG
APCRDQ   EQU   APC52FLG
APCQENQ  EQU   APC52FLG
APCSMSR  EQU   APC52FLG
APCCKRQ  EQU   APC52FLG
@NM00086 EQU   APC31FLG
APCSORT  EQU   APC31FLG
APCRESCH EQU   APC31FLG
APCTPXIT EQU   APC31FLG
APCSWTWD EQU   ISTAPCRR+128
APCSAV2  EQU   ISTAPCRR+124
APCSAV1  EQU   ISTAPCRR+120
APCRETCD EQU   APCCOMF+2
@NM00085 EQU   APCCOMF1+1
APCZLBER EQU   APCCOMF1
APCEXIT  EQU   APCCOMF1
APCRELR  EQU   APCCOMF1
APCIRB2  EQU   APCCOMF1
APCIRB1  EQU   APCCOMF1
APCSMCR  EQU   APCCOMF1
APCUETSK EQU   APCCOMF1
APCSSTSK EQU   APCCOMF1
APCESTAL EQU   APCSAVE
APCFRRPM EQU   ISTAPCRR+40
APCQWFO  EQU   ISTAPCRR+36
APCPABSV EQU   ISTAPCRR+32
APCRTRN  EQU   ISTAPCRR+28
APCTCBA  EQU   ISTAPCRR+24
APCPSTA  EQU   ISTAPCRR+20
@NM00084 EQU   APCRFLG+1
APC31R   EQU   APCRFLG
APC58R   EQU   APCRFLG
APC57R   EQU   APCRFLG
APC56R   EQU   APCRFLG
APC54R   EQU   APCRFLG
APC53R   EQU   APCRFLG
APC52R   EQU   APCRFLG
APC51R   EQU   APCRFLG
@NM00083 EQU   APCATFLG+1
APC31E   EQU   APCATFLG
APC58E   EQU   APCATFLG
APC57E   EQU   APCATFLG
APC56E   EQU   APCATFLG
APC54E   EQU   APCATFLG
APC53E   EQU   APCATFLG
APC52E   EQU   APCATFLG
APC51E   EQU   APCATFLG
APCHDRSV EQU   ISTAPCRR
ASCPSREG EQU   ISTASCRR+44
ASCUSR01 EQU   ASCUSRGS+12
ASCUSR00 EQU   ASCUSRGS+8
ASCUSR15 EQU   ASCUSRGS+4
ASCUSR14 EQU   ASCUSRGS
ASCETRYA EQU   ISTASCRR+24
ASCKEY   EQU   ISTASCRR+23
ASCAUDIT EQU   ASCFLG3
ASCFBDUD EQU   ASCFLG3
ASCLLKF  EQU   ASCFLG3
ASCKEYF  EQU   ASCFLG3
ASCFBDAL EQU   ASCFLG3
ASCFSRGT EQU   ASCFLG3
ASCICR   EQU   ASCFLG2
ASCFSRIC EQU   ASCFLG2
ASCFBDIC EQU   ASCFLG2
ASCFBAIC EQU   ASCFLG2
ASCPASTR EQU   ASCFLG1
ASCFSR   EQU   ASCFLG1
ASCFBD   EQU   ASCFLG1
ASCFBA   EQU   ASCFLG1
ASCPFCRR EQU   ISTASCRR
ZCRRU    EQU   ZCRRHRU+3
ZCRRH    EQU   ZCRRHRU
ZCRWORDA EQU   ISTZCRR+477
ZCRCMNRC EQU   ISTZCRR+476
ZCRRSV97 EQU   ZCRENTER+18
ZCREIC2B EQU   ZCRENTER+18
ZCREAC2B EQU   ZCRENTER+18
ZCRELCAB EQU   ZCRENTER+18
ZCREDCMF EQU   ZCRENTER+18
ZCREBCIF EQU   ZCRENTER+18
ZCREICSG EQU   ZCRENTER+18
ZCREDCK0 EQU   ZCRENTER+18
ZCRECFY0 EQU   ZCRENTER+17
ZCREKCCB EQU   ZCRENTER+17
ZCREDCNB EQU   ZCRENTER+17
ZCREICOE EQU   ZCRENTER+17
ZCREBCNB EQU   ZCRENTER+17
ZCREBC0L EQU   ZCRENTER+17
ZCREBCAL EQU   ZCRENTER+17
ZCREDCQR EQU   ZCRENTER+17
ZCREDCPR EQU   ZCRENTER+16
ZCREBCSB EQU   ZCRENTER+16
ZCREAC1R EQU   ZCRENTER+16
ZCRECCCI EQU   ZCRENTER+16
ZCRECCAI EQU   ZCRENTER+16
ZCRECCBI EQU   ZCRENTER+16
ZCREBCAR EQU   ZCRENTER+16
ZCREBCDR EQU   ZCRENTER+16
ZCREBCBR EQU   ZCRENTER+15
ZCREDCXR EQU   ZCRENTER+15
ZCREDCWB EQU   ZCRENTER+15
ZCREDCWR EQU   ZCRENTER+15
ZCREKCCN EQU   ZCRENTER+15
ZCREKCBN EQU   ZCRENTER+15
ZCREKCBB EQU   ZCRENTER+15
ZCREJC0B EQU   ZCRENTER+15
ZCREJCDB EQU   ZCRENTER+14
ZCREJCCB EQU   ZCRENTER+14
ZCREJCBB EQU   ZCRENTER+14
ZCREJCAB EQU   ZCRENTER+14
ZCREIC1B EQU   ZCRENTER+14
ZCREIC0B EQU   ZCRENTER+14
ZCREICX0 EQU   ZCRENTER+14
ZCREICWB EQU   ZCRENTER+14
ZCREICVB EQU   ZCRENTER+13
ZCREICUB EQU   ZCRENTER+13
ZCREICTB EQU   ZCRENTER+13
ZCREICSC EQU   ZCRENTER+13
ZCREICSB EQU   ZCRENTER+13
ZCREICRB EQU   ZCRENTER+13
ZCREICQB EQU   ZCRENTER+13
ZCREICQA EQU   ZCRENTER+13
ZCREICOB EQU   ZCRENTER+12
ZCREICOA EQU   ZCRENTER+12
ZCREICNB EQU   ZCRENTER+12
ZCREICNA EQU   ZCRENTER+12
ZCREICMB EQU   ZCRENTER+12
ZCREICLB EQU   ZCRENTER+12
ZCREICKG EQU   ZCRENTER+12
ZCREICKE EQU   ZCRENTER+12
ZCREICKB EQU   ZCRENTER+11
ZCREICJB EQU   ZCRENTER+11
ZCREICID EQU   ZCRENTER+11
ZCREICIB EQU   ZCRENTER+11
ZCREICHB EQU   ZCRENTER+11
ZCREICGB EQU   ZCRENTER+11
ZCREICEB EQU   ZCRENTER+11
ZCREICDB EQU   ZCRENTER+11
ZCREICCI EQU   ZCRENTER+10
ZCREICCB EQU   ZCRENTER+10
ZCREICBI EQU   ZCRENTER+10
ZCREICBB EQU   ZCRENTER+10
ZCREICAB EQU   ZCRENTER+10
ZCREICAA EQU   ZCRENTER+10
ZCREHCAN EQU   ZCRENTER+10
ZCREGC0B EQU   ZCRENTER+10
ZCREGC0A EQU   ZCRENTER+9
ZCREGCLA EQU   ZCRENTER+9
ZCREGCEB EQU   ZCRENTER+9
ZCREGCDB EQU   ZCRENTER+9
@NM00082 EQU   ZCRENTER+9
ZCREGCBB EQU   ZCRENTER+9
ZCREGCAB EQU   ZCRENTER+9
ZCREFCEB EQU   ZCRENTER+9
ZCREFCEA EQU   ZCRENTER+8
ZCREECTA EQU   ZCRENTER+8
ZCREECEA EQU   ZCRENTER+8
ZCREECDA EQU   ZCRENTER+8
ZCREECCB EQU   ZCRENTER+8
ZCREECCA EQU   ZCRENTER+8
ZCREECBB EQU   ZCRENTER+8
ZCREECBA EQU   ZCRENTER+8
ZCREDCMB EQU   ZCRENTER+7
ZCREDCL0 EQU   ZCRENTER+7
ZCREDCKB EQU   ZCRENTER+7
ZCREDCKA EQU   ZCRENTER+7
ZCREDCJ0 EQU   ZCRENTER+7
ZCREDCI0 EQU   ZCRENTER+7
ZCREDCH0 EQU   ZCRENTER+7
ZCREDCF0 EQU   ZCRENTER+7
ZCREDCE0 EQU   ZCRENTER+6
ZCREDCD0 EQU   ZCRENTER+6
ZCREDCC0 EQU   ZCRENTER+6
ZCREDCB0 EQU   ZCRENTER+6
ZCREDCA0 EQU   ZCRENTER+6
ZCRECC2B EQU   ZCRENTER+6
ZCRECC1B EQU   ZCRENTER+6
ZCRECC1A EQU   ZCRENTER+6
ZCRECC0B EQU   ZCRENTER+5
ZCRECC0A EQU   ZCRENTER+5
ZCREBC0B EQU   ZCRENTER+5
ZCREBC0A EQU   ZCRENTER+5
ZCREBCZ0 EQU   ZCRENTER+5
ZCREBCY0 EQU   ZCRENTER+5
ZCREBCX0 EQU   ZCRENTER+5
ZCREBCXA EQU   ZCRENTER+5
ZCREBCSC EQU   ZCRENTER+4
ZCREBCRB EQU   ZCRENTER+4
ZCREBCRA EQU   ZCRENTER+4
ZCREBCQB EQU   ZCRENTER+4
ZCREBCPB EQU   ZCRENTER+4
ZCREBCOB EQU   ZCRENTER+4
ZCREBCNE EQU   ZCRENTER+4
ZCREBCND EQU   ZCRENTER+4
ZCREBCMB EQU   ZCRENTER+3
ZCREBCLB EQU   ZCRENTER+3
ZCREBCLA EQU   ZCRENTER+3
ZCREBCKB EQU   ZCRENTER+3
ZCREBCKA EQU   ZCRENTER+3
ZCREBCJB EQU   ZCRENTER+3
ZCREBCJA EQU   ZCRENTER+3
ZCREBCID EQU   ZCRENTER+3
ZCREBCIB EQU   ZCRENTER+2
ZCREBCIA EQU   ZCRENTER+2
ZCREBCHB EQU   ZCRENTER+2
ZCREBCHA EQU   ZCRENTER+2
ZCREBCGB EQU   ZCRENTER+2
ZCREBCGA EQU   ZCRENTER+2
ZCREBCFB EQU   ZCRENTER+2
ZCREBCFA EQU   ZCRENTER+2
ZCREBCEB EQU   ZCRENTER+1
ZCREBCDI EQU   ZCRENTER+1
ZCREBCCB EQU   ZCRENTER+1
ZCREBCBI EQU   ZCRENTER+1
ZCREBCBB EQU   ZCRENTER+1
ZCREBCBA EQU   ZCRENTER+1
ZCREBCAM EQU   ZCRENTER+1
ZCREBCAI EQU   ZCRENTER+1
ZCREBCAG EQU   ZCRENTER
ZCREBCAE EQU   ZCRENTER
ZCREBCAB EQU   ZCRENTER
ZCREBCAA EQU   ZCRENTER
ZCREAC1B EQU   ZCRENTER
ZCREAC0B EQU   ZCRENTER
ZCREAC0A EQU   ZCRENTER
ZCREAC1A EQU   ZCRENTER
ZCRTNAME EQU   ZCRAUDIT+1
ZCRTID   EQU   ZCRAUDIT
ZCRREMIC EQU   ISTZCRR+436
ZCRSAVEZ EQU   ISTZCRR+196
ZCRDAFSV EQU   ZCRCIDSV+2
ZCRSAFSV EQU   ZCRCIDSV
ZCRR13SV EQU   ISTZCRR+188
ZCRR2SV  EQU   ISTZCRR+184
ZCROPCDE EQU   ISTZCRR+183
ZCRPRMTC EQU   ISTZCRR+182
ZCRRCDSV EQU   ISTZCRR+181
ZCRAWQSW EQU   ISTZCRR+180
ZCRTOPQ  EQU   ISTZCRR+180
ZCRLSTFB EQU   ISTZCRR+180
ZCRXSCHD EQU   ISTZCRR+180
ZCRNXTEL EQU   ISTZCRR+180
ZCRSCANQ EQU   ISTZCRR+180
ZCRMOREL EQU   ISTZCRR+180
ZCRFBPRC EQU   ISTZCRR+180
ZCRFSBSV EQU   ISTZCRR+176
ZCRSVWK5 EQU   ZCRWKARA+16
ZCRSVWK4 EQU   ZCRWKARA+12
ZCRSVWK3 EQU   ZCRWKARA+8
ZCRSVWK2 EQU   ZCRWKARA+4
ZCRSVWK1 EQU   ZCRWKARA
ZCRSVF25 EQU   ZCRSVRTN+96
ZCRSVF24 EQU   ZCRSVRTN+92
ZCRSVF23 EQU   ZCRSVRTN+88
ZCRSVF22 EQU   ZCRSVRTN+84
ZCRSVF21 EQU   ZCRSVRTN+80
ZCRSVF20 EQU   ZCRSVRTN+76
ZCRSVF19 EQU   ZCRSVRTN+72
ZCRSVF18 EQU   ZCRSVRTN+68
ZCRSVF17 EQU   ZCRSVRTN+64
ZCRSVF16 EQU   ZCRSVRTN+60
ZCRSVF15 EQU   ZCRSVRTN+56
ZCRSVF14 EQU   ZCRSVRTN+52
ZCRSVF13 EQU   ZCRSVRTN+48
ZCRSVF12 EQU   ZCRSVRTN+44
ZCRSVF11 EQU   ZCRSVRTN+40
ZCRSVF10 EQU   ZCRSVRTN+36
ZCRSVF9  EQU   ZCRSVRTN+32
ZCRSVF8  EQU   ZCRSVRTN+28
ZCRSVF7  EQU   ZCRSVRTN+24
ZCRSVF6  EQU   ZCRSVRTN+20
ZCRSVF5  EQU   ZCRSVRTN+16
ZCRSVF4  EQU   ZCRSVRTN+12
ZCRSVF3  EQU   ZCRSVRTN+8
ZCRSVF2  EQU   ZCRSVRTN+4
ZCRSVF1  EQU   ZCRSVRTN
ZCRPVZB  EQU   ISTZCRR+52
ZCRZLB   EQU   ISTZCRR+48
ZCRBFPTR EQU   ISTZCRR+44
ZCRCCWA  EQU   ISTZCRR+40
ZCRPSW   EQU   ZCRPARMS+15
ZCRPCHAR EQU   ZCRPARMS+14
ZCRPRES2 EQU   ZCRPCOD2
ZCRPMFGF EQU   ZCRPCOD2
ZCRPFHDR EQU   ZCRPCOD2
ZCRPPG2  EQU   ZCRPCOD2
ZCRPRES  EQU   ZCRPCOD1
ZCRPCFTX EQU   ZCRPCOD1
ZCRPBUF  EQU   ZCRPCOD1
ZCRPLSCB EQU   ZCRPCOD1
ZCRPLSBQ EQU   ZCRPLSBF
ZCRPFSB  EQU   ZCRPCOD1
ZCRPLNG  EQU   ZCRPCOD1
ZCRPPG   EQU   ZCRPCOD1
ZCRDTODA EQU   ZCRDFRDA
ZCRMLNG  EQU   ZCRPARMS+8
ZCRTBPTR EQU   ZCRPARMS+4
ZCRCBPTR EQU   ZCRFBPTR
ZCRCRLCP EQU   ISTZCRR+20
@NM00081 EQU   ZCRSCPSW
ZCRSKIPT EQU   ZCRSCPSW
ZCRFSBWE EQU   ZCRSCPSW
ZCRPRCMP EQU   ZCRSCPSW
ZCRLREQ  EQU   ZCRSCPSW
ZCRRJLCP EQU   ZCRSCPSW
ZCRTPINV EQU   ZCRSCPSW
ZCRTPEX  EQU   ZCRSCPSW
@NM00080 EQU   ZCRIBPR
ZCR3270R EQU   ZCRIBPR
ZCR3270  EQU   ZCRIBPR
ZCRLCPFD EQU   ZCRIBPR
ZCRLCPFR EQU   ZCRIBPR
ZCRRELK  EQU   ZCRIBPR
ZCRERR   EQU   ZCRIBPR
ZCRNOBUF EQU   ZCRIBPR
@NM00079 EQU   ZCRPFLGS
ZCRQAHED EQU   ZCRPFLGS
ZCRF1RES EQU   ZCRGENSW
ZCRBRIS  EQU   ZCRGENSW
ZCRCLRBD EQU   ZCRGENSW
ZCREXRES EQU   ZCRGENSW
ZCRLCSYN EQU   ZCRGENSW
ZCRRT06  EQU   ZCRGENSW
ZCRTSW2  EQU   ZCRGENSW
ZCRTSW1  EQU   ZCRGENSW
ZCRINLCP EQU   ZCRFLGS3
ZCRWRPTR EQU   ZCRFLGS3
ZCRNOFRE EQU   ZCRFLGS3
ZCREDRIV EQU   ZCRFLGS3
ZCRDISC  EQU   ZCRFLGS3
ZCRTPDIS EQU   ZCRFLGS3
ZCRTPCON EQU   ZCRFLGS3
ZCRTIC   EQU   ZCRFLGS3
ZCRCNLXL EQU   ZCRRESET
ZCRENDAN EQU   ZCRSWFLD
ZCRENDXL EQU   ZCRSWFLD
ZCRENDX  EQU   ZCRSWFLD
ZCROB1   EQU   ZCRNDLCP
ZCRENDPR EQU   ZCRSWFLD
ZCREXTYP EQU   ZCRSWFLD
ZCRSLCP  EQU   ZCRENDSH
ZCRIF0E3 EQU   ZCRFLGS2
ZCRIF0E2 EQU   ZCRFLGS2
ZCRIF0E1 EQU   ZCRFLGS2
ZCROB    EQU   ZCRFLGS2
ZCRFMSED EQU   ZCRFLGS2
ZCRSHEDI EQU   ZCRFLGS2
ZCRLOCAL EQU   ZCRFLGS2
ZCRFEXIT EQU   ZCRFLGS1
ZCRUNSOL EQU   ZCRFLGS1
ZCRENDLP EQU   ZCRFLGS1
ZCRNRMEX EQU   ZCRFLGS1
ZCRWAIT  EQU   ZCRFLGS1
ZCRDEQSW EQU   ZCRFLGS1
ZCRQUESW EQU   ZCRFLGS1
ZCREXSW  EQU   ZCRFLGS1
ZCRFRRA  EQU   ISTZCRR+8
ZCRCHAIN EQU   ISTZCRR+4
ZCRFLAG  EQU   ZCRCRR+3
ZCRLEN   EQU   ZCRCRR+1
ZCRID    EQU   ZCRCRR
CCFRSVD1 EQU   CFCCRT
CCFCR2   EQU   CFCCRT
CCFCRP   EQU   CFCCRT
CCFCR1   EQU   CFCCRT
CCFCS2   EQU   CFCCRT
CCFCS1   EQU   CFCCRT
NCFRSVD  EQU   CFCNTRD
NCFCR2   EQU   CFCNTRD
NCFCRP   EQU   CFCNTRD
NCFCR1   EQU   CFCNTRD
NCFCS2   EQU   CFCNTRD
NCFCS1   EQU   CFCNTRD
PFCRSV01 EQU   ISTPFCRR+13
PFCFTA   EQU   ISTPFCRR+12
CRRFRR   EQU   PFCFRRO
CRRCHAIN EQU   PFCCRRO
CRRLEN   EQU   PFCCRRLN
PFCRSV10 EQU   PFCCRR+1
CRRID    EQU   PFCCRRID
ZSAZTRAC EQU   ISTZSAVE+36
ZSAZSVVR EQU   ISTZSAVE+12
ZSAZSVRR EQU   ISTZSAVE+8
ZSAZSVFC EQU   ISTZSAVE+4
ZSAZACTV EQU   ZSAZSVMS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00041 EQU   CVTFIX+248
@NM00040 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
CSPUNUSD EQU   CSPRSC2B+4
CSPUECBA EQU   CSPRSC2B
CSPTRDTE EQU   ISTCSP+28
CSPRLRPH EQU   ISTCSP+24
CSPNO    EQU   ISTCSP+22
CSPCC    EQU   ISTCSP+20
CSPDATA  EQU   ISTCSP+16
@NM00039 EQU   CSPOPT2
CSPRSC2F EQU   CSPOPT2
CSPWASQD EQU   CSPOPT2
CSPCOREQ EQU   CSPOPT2
CSPSTAP  EQU   CSPOPT2
@NM00038 EQU   CSPOPT1
CSPANY   EQU   CSPOPT1
CSPACT   EQU   CSPOPT1
CSPSESS  EQU   CSPOPT1
CSPPND   EQU   CSPOPT1
CSPLOGI  EQU   CSPOPT1
CSPQ     EQU   CSPOPT1
CSPRSC   EQU   CSPOPT1
PLCLCPB  EQU   ISTPLCPB
NMLRSV05 EQU   ISTNMLPB+96
NMLRSV04 EQU   ISTNMLPB+92
NMLDRDTE EQU   ISTNMLPB+88
NMECBPTR EQU   ISTNMLPB+84
NMLRSV02 EQU   ISTNMLPB+82
NMLRSV06 EQU   ISTNMLPB+81
NMIPSEQ  EQU   ISTNMLPB+80
NMNCSPL  EQU   NMRDTEA
NMRSV01  EQU   NMLCWCMD+1
NMECRST  EQU   NMLCWCMD+1
NMVRYPRG EQU   NMLCWCMD+1
NMSTCTLF EQU   NMLCWCMD+1
NMSTCTLI EQU   NMLCWCMD+1
NMSTCTLR EQU   NMLCWCMD
NMFBDTA  EQU   NMLCWCMD
NMRDBLK  EQU   NMLCWCMD
NMDSEOC  EQU   NMLCWCMD
NMPURGE  EQU   NMLCWCMD
NMRESTI  EQU   NMLCWCMD
NMCNTCT  EQU   NMLCWCMD
NMINVT   EQU   NMLCWCMD
NMPSRTRY EQU   NMCONTRL+1
NMLCW3   EQU   ISTNMLPB+64
NMLCW2   EQU   ISTNMLPB+56
NMLCPB   EQU   ISTNMLPB
LCPFTYPE EQU   LCPRPHA
LCPRSTQH EQU   LCPLCCW
LCPCLREP EQU   ISTLCPB+44
LCPUBFSB EQU   LCPFLCCW
LCPRSV77 EQU   ISTLCPB+39
LCPLCCWC EQU   ISTLCPB+38
LCPRSV78 EQU   LCPFLG1
LCPTRANS EQU   LCPFLG1
LCPSTLB  EQU   LCPFLG1
LCPREDRV EQU   LCPFLG1
LCPDIRPT EQU   LCPFLG1
LCPINTER EQU   LCPFLG1
LCPRESET EQU   LCPFLG1
LCPSTYPE EQU   ISTLCPB+36
LCPFSNCH EQU   ISTLCPB+34
LCPFOSN  EQU   ISTLCPB+32
LCPTLBAD EQU   ISTLCPB+28
LCPFDB2  EQU   LCPFDBA+1
LCPFDB1  EQU   LCPFDBA
LCPLCCW1 EQU   ISTLCPB+12
LCPRRCNT EQU   LCPSEQ+1
LCPRRCCT EQU   LCPSEQ
LCPATOP  EQU   LCPFLAG2
LCPFREE  EQU   LCPFLAG2
LCPDSTAT EQU   LCPFLAG2
LCPEXRES EQU   LCPFID0
LCPZRIMM EQU   LCPTLBPI
LCPRSTRT EQU   LCPFLAG2
LCPASYN  EQU   LCPFLAG2
LCPPRFLG EQU   LCPFLAG2
LCPZMIRC EQU   LCPRUCNT
LCPCHAI2 EQU   LCPCHAIN+1
LCPCHNG  EQU   LCPCHAI1
LCPZRT0B EQU   LCPMNRCD
LCPZRT0A EQU   LCPMNRCD
LCPZRTL9 EQU   LCPZRT09
LCPZRTL8 EQU   LCPZRT08
LCPZRTL7 EQU   LCPZRT07
LCPZRTL6 EQU   LCPZRT06
LCPZRTL5 EQU   LCPZRT05
LCPZRTL4 EQU   LCPZRT04
LCPZRTL3 EQU   LCPZRT03
LCPZRTL2 EQU   LCPZRT02
LCPZRT01 EQU   LCPFLAGS
LCPZRT00 EQU   LCPFLAGS
LCCWACI  EQU   LCCWFLAG
LCCWRFI  EQU   LCCWFLAG
LCCWPER  EQU   LCCWLSI
LCCWIDAT EQU   LCCWFLAG
LCCWNTVC EQU   LCCWFLAG
LCCWCKPT EQU   LCCWFLAG
LCCWCC   EQU   LCCWFLAG
LCCWCD   EQU   LCCWFLAG
LCCWTYPE EQU   LCCWCTL
LCCWMODE EQU   LCCWCTL
LCCWSOP  EQU   LCCWRWOP
@NM00037 EQU   LCCWRWOP
LCCWSD   EQU   LCCWOP
LCCWSI   EQU   LCCWOP
FSBRSV01 EQU   FSBFSB+30
FSBTHCNT EQU   FSBFSB+28
FSBRLRSV EQU   FSBRLSTS
FSBCFTX  EQU   FSBRLSTS
FSBICNCB EQU   FSBMSGID
FSBSSOC  EQU   FSBSS2
FSBSSCC  EQU   FSBSS2
FSBSSDC  EQU   FSBSS2
FSBSSEC  EQU   FSBSS2
FSBSSIR  EQU   FSBSS2
FSBSSCR  EQU   FSBSS2
@NM00035 EQU   FSBSS2
@NM00034 EQU   FSBSS1
FSBSSDE  EQU   FSBSS1
FSBSSUS  EQU   FSBSS1
@NM00033 EQU   FSBSS1
FSBSOHI  EQU   FSBERC
FSBLGI   EQU   FSBERC
FSBLMRI  EQU   FSBFBMI
FSBETI   EQU   FSBERC
FSBEMI   EQU   FSBERC
FSBEBI   EQU   FSBERC
FSBECI   EQU   FSBERC
FSBELI   EQU   FSBERC
FSBMJRCD EQU   FSBSRCAT
FSBXLCI  EQU   FSBXCODE
FSBXFINS EQU   FSBXCODE
FSBXNORM EQU   FSBXFSTS
FSBSCODE EQU   FSBSYSRS
FSBSPHSE EQU   FSBSYSRS
FSBSERR  EQU   FSBSYSRS
FSBCMD   EQU   FSBSEQ
FSBDTRCE EQU   FSBFLAGS
FSBASBTU EQU   FSBFLAGS
FSBINPET EQU   FSBFLAGS
FSBNONCB EQU   FSBFLAGS
FSBLBIND EQU   FSBFLAGS
FSBFFIND EQU   FSBFLAGS
FSBACIND EQU   FSBFLAGS
FSBRFIND EQU   FSBFLAGS
FSBDAF   EQU   FSBCID+2
FSBSAF   EQU   FSBCID
FSBGATE  EQU   FSBFSBA
FSBLATOP EQU   FSBSFLGS
FSBRSV02 EQU   FSBSFLGS
FSBPGBUF EQU   FSBSFLGS
FSBMNSDA EQU   FSBMNRCD
FSBMNOA  EQU   FSBMNRCD
FSBMNDIF EQU   FSBMNRCD
FSBMNEOP EQU   FSBMNRCD
FSBMNDNU EQU   FSBMNRCD
FSBMNATN EQU   FSBMNRCD
FSBMNRVI EQU   FSBMNRCD
FSBMNELI EQU   FSBMNRCD
FSBLNGTH EQU   FSBFSB+1
FSBTYPE  EQU   FSBFSB
FDBDATCT EQU   ISTFDB+8
FDBDATAA EQU   ISTFDB+4
CSLDATAF EQU   CSLDATA
CSLNIBF  EQU   CSLNIB
CSLRDTEF EQU   CSLRDTE
FMCFLRSV EQU   FMCFLGB
FMCFLGA8 EQU   FMCFLGB
FMCCLRPH EQU   FMCVS1+45
FMCRSV0X EQU   FMCCVFLG
FMCVYRPH EQU   FMCCVFLG
FMCZV004 EQU   FMCVS1+40
FMCLOCK2 EQU   FMCVS1+36
@NM00032 EQU   FMCZFLG2
FMCZF027 EQU   FMCZFLG2
FMCZF026 EQU   FMCZFLG2
FMCSEQ1B EQU   FMCSEQ1
FMCSEQ1T EQU   FMCSEQ1
FMCZX006 EQU   FMCVS1+33
FMCZX005 EQU   FMCVS1+32
FMCZX004 EQU   FMCVS1+31
FMCZX003 EQU   FMCVS1+30
FMCZX002 EQU   FMCVS1+29
FMCZX001 EQU   FMCVS1+28
FMCZV001 EQU   FMCVS1+24
FMCAWATQ EQU   FMCLCPAQ+1
@NM00031 EQU   FMCLCPAQ
FMCLCPB2 EQU   FMCLCPBQ+1
FMCLCPB1 EQU   FMCLCPBQ
FMCASCDQ EQU   FMCSHEAQ+1
@NM00030 EQU   FMCSHEAQ
FMCSHEDQ EQU   FMCVS1+8
FMCZFCSQ EQU   FMCVS1+6
FMCZH001 EQU   FMCVS1+4
FMCZF025 EQU   FMCZFLAG+3
FMCZF024 EQU   FMCZFLAG+3
FMCZF023 EQU   FMCZFLAG+3
FMCZF022 EQU   FMCZFLAG+3
FMCZF021 EQU   FMCZFLAG+3
FMCZF020 EQU   FMCZFLAG+3
FMCZF019 EQU   FMCZFLAG+3
FMCZF018 EQU   FMCZFLAG+3
FMCZF017 EQU   FMCZFLAG+2
FMCZF016 EQU   FMCZFLAG+2
FMCZF015 EQU   FMCZFLAG+2
FMCZF014 EQU   FMCZFLAG+2
FMCZF013 EQU   FMCZFLAG+2
FMCZF012 EQU   FMCZFLAG+2
FMCZF011 EQU   FMCZFLAG+2
FMCZF010 EQU   FMCZFLAG+2
FMCZF00F EQU   FMCZFLAG+1
FMCZF00E EQU   FMCZFLAG+1
FMCZF00D EQU   FMCZFLAG+1
FMCZF00C EQU   FMCZFLAG+1
FMCZF00B EQU   FMCZFLAG+1
FMCRSV10 EQU   FMCZFLAG+1
FMCZF009 EQU   FMCZFLAG+1
FMCZFD06 EQU   FMCZF006+1
FMCZFC06 EQU   FMCZF006
FMCZFB06 EQU   FMCZF006
FMCZFA06 EQU   FMCZF006
FMCZF005 EQU   FMCZFLAG
FMCZF004 EQU   FMCZFLAG
FMCZF003 EQU   FMCZFLAG
FMCZF002 EQU   FMCZFLAG
FMCZF001 EQU   FMCZFLAG
FMCFRESA EQU   ISTFMCB+228
FMCSCSQN EQU   FMCSNCTL+2
FMCSCCTL EQU   FMCSNCTL+1
FMCSTCTL EQU   FMCSCFLG
FMCSCCLO EQU   FMCSCFLG
FMCAPRO  EQU   FMCSCFLG
FMCLURO  EQU   FMCSCFLG
FMCOBSAC EQU   FMCSCFLG
FMCIBSAC EQU   FMCSCFLG
FMCFBRE  EQU   ISTFMCB+220
FMCFBXM  EQU   FMCZV002
FMCASEGQ EQU   ISTFMCB+212
FMCRDTPT EQU   ISTFMCB+208
FMCLOCK  EQU   ISTFMCB+204
FMCSEGD  EQU   FMCSSEGQ
FMCRSPLM EQU   ISTFMCB+198
FMCPSTRS EQU   ISTFMCB+196
@NM00029 EQU   FMCRRESP
FMCTSLHA EQU   FMCRRESP
FMCFRRN  EQU   FMCRRESP
FMCFME   EQU   FMCRRESP
FMCFEX   EQU   FMCRRESP
FMCFPE   EQU   FMCRRESP
FMCCTLB  EQU   ISTFMCB+194
FMCBSQNO EQU   FMCCLSEQ+2
FMCTSQNO EQU   FMCCLSEQ
FMCOBPRG EQU   FMCMODEB
FMCIBPRG EQU   FMCMODEB
FMCRESOT EQU   FMCMODEB
FMCRSTSR EQU   FMCMODEB
FMCLUQ   EQU   FMCMODEB
FMCAPQ   EQU   FMCMODEB
FMCCLEAR EQU   FMCMODEB
FMCHOLD  EQU   FMCMODEB
FMCIPSEQ EQU   ISTFMCB+188
FMCLUSTR EQU   ISTFMCB+187
FMCRSV87 EQU   FMCSTAT2
FMCSEQI  EQU   FMCSTAT2
FMCALIPR EQU   FMCSTAT2
FMCIAIO  EQU   FMCSTAT2
FMCZF00A EQU   FMCSTAT2
FMCVPIP  EQU   FMCSTAT2
FMCBHSET EQU   ISTFMCB+185
FMCPRMRC EQU   FMCCLEXT+20
FMCRSV89 EQU   FMCPSTAT
FMCDDOCD EQU   FMCPSTAT
FMCIDVFD EQU   FMCPSTAT
FMCRSV88 EQU   FMCPSCMD
FMCRDBLK EQU   FMCPSCMD
FMCDSEOC EQU   FMCPSCMD
FMCPURGE EQU   FMCPSCMD
FMCRESTI EQU   FMCPSCMD
FMCCNTCT EQU   FMCPSCMD
FMCINVT  EQU   FMCPSCMD
FMCFLGB7 EQU   FMCFLGCL
FMCFLGB6 EQU   FMCFLGCL
FMCFLGB5 EQU   FMCFLGCL
FMCFLGB4 EQU   FMCFLGCL
FMCFLGB3 EQU   FMCFLGCL
FMCFLGB2 EQU   FMCFLGCL
FMCFLGB1 EQU   FMCFLGCL
FMCFLGB0 EQU   FMCFLGCL
FMCFLGA7 EQU   FMCFLGA
FMCFLGA6 EQU   FMCFLGA
FMCFLGA5 EQU   FMCFLGA
FMCFLGA4 EQU   FMCFLGA
FMCFLGA3 EQU   FMCFLGA
FMCFLGA2 EQU   FMCFLGA
FMCFLGA1 EQU   FMCFLGA
FMCFLGA0 EQU   FMCFLGA
FMCDCLOK EQU   FMCCLEXT+12
FMCRAFM  EQU   FMCCLEXT+8
FMCFBPTR EQU   FMCFBA+1
FMCFBRSV EQU   FMCFBA
FMCRPLPT EQU   FMCRPLA+1
FMCRPLRS EQU   FMCRPLA
FMCPRCLS EQU   FMCCVAL
FMCIBCE  EQU   FMCCVAL
FMCONLY  EQU   FMCOBCE
FMCLAST  EQU   FMCOBCE
FMCMIDLE EQU   FMCOBCE
FMCFIRST EQU   FMCOBCE
FMCCPCNT EQU   FMCPACPC
FMCMPCNT EQU   FMCPACEM
FMCNPCNT EQU   FMCPACEN
FMCCONF  EQU   FMCSSTAT
FMCPURCH EQU   FMCSSTAT
FMCNSALU EQU   FMCSSTAT
FMCBIP   EQU   FMCSSTAT
FMCSDTR  EQU   FMCSSTAT
FMCUIPI  EQU   FMCSSTAT
FMCCIPI  EQU   FMCSSTAT
FMCSNBI  EQU   FMCSSTAT
FMCRVD01 EQU   ISTFMCB+158
FMCISSN  EQU   ISTFMCB+156
FMCOASN  EQU   FMCNXOSC
FMCOSSN  EQU   FMCNXCFM
FMCSIP   EQU   FMCSIPA
FMCEXLST EQU   ISTFMCB+144
FMCPAB5  EQU   ISTFMCB+128
FMCPAB4  EQU   ISTFMCB+112
FMCPAB3  EQU   ISTFMCB+96
FMCPAB2  EQU   ISTFMCB+80
FMCFASYA EQU   ISTFMCB+60
FMCPROCD EQU   ISTFMCB+48
FMCVWT   EQU   ISTFMCB+44
FMCRPLH  EQU   ISTFMCB+40
FMCBUFNB EQU   FMCCMPS1+2
FMCBUFLM EQU   FMCCMPS1
FMCDEBA  EQU   ISTFMCB+32
@NM00028 EQU   FMCCMDFL
FMCSNA   EQU   FMCCMDFL
FMCVSNA  EQU   FMCCMDFL
FMCCMDR  EQU   FMCCMDFL
@NM00027 EQU   ISTFMCB+30
@NM00026 EQU   FMCSTAT1
FMCLTCLS EQU   FMCSTAT1
FMCHPURG EQU   FMCSTAT1
FMCVSP2  EQU   FMCSTAT1
FMCVSP1  EQU   FMCSTAT
FMCLTEAS EQU   FMCSTAT
FMCZF007 EQU   FMCSTAT
FMCDEDSC EQU   FMCSTAT
FMCDAPT  EQU   FMCSTAT
FMCPRMTE EQU   FMCSTAT
FMCPRMTR EQU   FMCSTAT
FMCUSFLD EQU   ISTFMCB+24
FMCDVTA  EQU   ISTFMCB+12
FMCTSKID EQU   ISTFMCB+8
FMCNXTCB EQU   ISTFMCB+4
FMCLNGTH EQU   ISTFMCB+1
FMCTYPE  EQU   ISTFMCB
PROSRDEF EQU   PROSETM4
PRORSV47 EQU   PROSETM4
PROSCON  EQU   PROSETM4
PRORSV46 EQU   PROSETM3
PROSMONT EQU   PROSETM3
PRORSV45 EQU   PROSETM3
PROSNTO  EQU   PROSETM3
PRORSV44 EQU   PROSETM3
PRORSV43 EQU   PROSETM2
PROSNTFL EQU   PROSETM2
PRORSV42 EQU   PROSETM2
PRORSV41 EQU   PROPROCS
PROMODC  EQU   PROPROC4
PROMODT  EQU   PROPROC4
PROMODM  EQU   PROPROC4
PROMODB  EQU   PROPROC4
PRORSV14 EQU   PROPROC4
PRORSV13 EQU   PROPROC4
PRORSV12 EQU   PROPROC4
PROEIB   EQU   PROPROC4
PROMONT3 EQU   PROPROC3
PROMONT2 EQU   PROPROC3
PROMONIT EQU   PROPROC3
PROSUBLK EQU   PROPROC3
PRONTO   EQU   PROPROC3
PROLGIN  EQU   PROPROC3
PROERPI  EQU   PROPROC3
PRORSV07 EQU   PROPROC3
PROCFTX  EQU   PROPROC2
PROEMLC  EQU   PROPROC2
PRONTFL  EQU   PROPROC2
PRORSV05 EQU   PROPROC2
PRORSV04 EQU   PROPROC2
PROLGOT  EQU   PROPROC2
PROERPO  EQU   PROPROC2
PRORSV03 EQU   PROPROC2
PRORPLC  EQU   PROPROC1
PROCS    EQU   PROPROC1
PROCA    EQU   PROPROC1
PRORESPX EQU   PROPROC1
PRODFASY EQU   PROPROC1
PROXPOPT EQU   PROPROC1
PROTRUNC EQU   PROPROC1
PROASYIP EQU   PROPROC1
DNCZC001 EQU   DNCOS+40
DNCLOCK  EQU   DNCOS+36
DNCZV005 EQU   DNCOS+32
DNCZV004 EQU   DNCOS+28
DNCZV003 EQU   DNCOS+24
DNCZV002 EQU   DNCOS+21
DNCZX001 EQU   DNCOS+20
DNCZV001 EQU   DNCOS+17
DNCZX003 EQU   DNCOS+16
DNCZV000 EQU   DNCOS+12
DNCSESCQ EQU   DNCOS+8
DNCSESIQ EQU   DNCOS+4
DNCACIP  EQU   DNCBSCED+1
DNCLICP  EQU   DNCBSCED
DNCZF008 EQU   DNCZFLGS+1
DNCZPSRD EQU   DNCZFLGS+1
DNCPSOL  EQU   DNCZFLGS+1
DNCZF007 EQU   DNCZFLGS+1
DNCZF006 EQU   DNCZFLGS+1
DNCZF005 EQU   DNCZFLGS+1
DNCZF004 EQU   DNCZFLGS+1
DNCZF003 EQU   DNCZFLGS
DNCZF002 EQU   DNCZFLGS
DNCZRSCH EQU   DNCZFLGS
DNCDISC  EQU   DNCZFLGS
DNCCONT  EQU   DNCZFLGS
DNCINVIT EQU   DNCZFLGS
DNCSESS  EQU   DNCZFLGS
DNCZF001 EQU   DNCZFLGS
DNCMODE  EQU   ISTDNCB+49
DNCBHSET EQU   ISTDNCB+48
DNCNCB   EQU   ISTDNCB
NCBRSV01 EQU   ISTNCB+46
NCBSWDAF EQU   ISTNCB+44
NCBDEVCH EQU   ISTNCB+36
NCBFMCBP EQU   ISTNCB+32
NCBLTRC  EQU   ISTNCB+30
NCBRVPT1 EQU   ISTNCB+28
NCBNMLLN EQU   NCBFLAGS+3
@NM00025 EQU   NCBFLAG1
NCBFORCE EQU   NCBFLAG1
NCBTTF   EQU   NCBFLAG1
NCBRSYNC EQU   NCBFLAG1
NCBRSTRT EQU   NCBFLAG1
NCBCONF  EQU   NCBFLAG1
NCBSNAI  EQU   NCBFLAG1
NCBFLTIO EQU   NCBFTRIO
NCBCSTAT EQU   NCBFLAGS
NCBNCSL  EQU   ISTNCB+22
NCBNCBA  EQU   ISTNCB+20
NCBNSNA  EQU   ISTNCB+12
NCBTSKID EQU   ISTNCB+8
NCBDAF   EQU   ISTNCB+2
NCBLNGTH EQU   ISTNCB+1
NCBTYPE  EQU   ISTNCB
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRSV88 EQU   ATCAOSM+596
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCAPBE  EQU   ATCAOSM+436
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00024 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
@NM00023 EQU   ATCAOSM+333
@NM00022 EQU   @NM00021
ATCSNUF  EQU   @NM00021
ATCOPKL  EQU   @NM00021
ATCABEN  EQU   @NM00021
ATCAIWT  EQU   ATCAOSM+328
ATCINFDD EQU   ATCAOSM+324
ATCORFMG EQU   ATCAOSM+320
ATCORFRL EQU   ATCAOSM+316
ATCOROBT EQU   ATCAOSM+312
ATCORQG  EQU   ATCORSRB
ATCORTBF EQU   ATCSQAFR
ATCRPLAC EQU   ATCRPLCN+2
ATCRPLRC EQU   ATCRPLCN
ATCCRPLQ EQU   ATCCRPL
ATCSRBAC EQU   ATCSRBCN+2
ATCSRBRC EQU   ATCSRBCN
ATCSRBQ  EQU   ATCSRB
ATCCRAAC EQU   ATCCRACN+2
ATCCRARC EQU   ATCCRACN
ATCCRAQ  EQU   ATCCRA
ATCRPT12 EQU   ATCAOSM+276
ATCDMAPP EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP32  EQU   ATCAOSM+28
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
@NM00020 EQU   @NM00019
ATCVTMAB EQU   @NM00019
@NM00018 EQU   ATCVTBAM
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00017 EQU   ISTATCVT+819
@NM00016 EQU   ATCSTAT2
ATCTRSMS EQU   ATCSTAT2
ATCTRLOK EQU   ATCSTAT2
ATCTRPSS EQU   ATCSTAT2
ATCTRESC EQU   ATCSTAT2
ATCTRAPI EQU   ATCSTAT2
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00015 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCDVTLK EQU   ISTATCVT+456
ATCRSV99 EQU   ISTATCVT+440
ATCONFIG EQU   ISTATCVT+432
ATCNODDS EQU   ISTATCVT+428
ATCNODEL EQU   ISTATCVT+420
ATCRSV69 EQU   ISTATCVT+416
ATCAPCR5 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMQU  EQU   ATCCOM+184
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCVTTRC EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00014 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00013 EQU   ATCSTAT1
ATCMDHLT EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00012 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00011 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00010 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   RPHCNTL+1
RPHTYPE  EQU   RPHCNTL
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABDELAY EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
PATRSV01 EQU   PATFLAGA
PATUSEFG EQU   PATFLAGA
PATRDCNT EQU   ISTPAT+6
PATGRPID EQU   ISTPAT+5
PATPTHID EQU   ISTPAT+4
PATDINDX EQU   ISTPAT+2
PATGINDX EQU   ISTPAT
GNTGRPNM EQU   ISTGNT
DNTTELNO EQU   ISTDNT+1
DNTCTDIG EQU   ISTDNT
RLSRSV02 EQU   ISTRLS+140
RLSRSV01 EQU   ISTRLS+138
RLSCTELU EQU   ISTRLS+136
RLSPRE   EQU   ISTRLS
RDARSVPT EQU   ISTRDA+84
RDAPUBI  EQU   ISTRDA+83
RDADFCUA EQU   ISTRDA+80
RDACTPCC EQU   ISTRDA+79
RDADACUA EQU   ISTRDA+76
RDALUBA  EQU   RDAUCBAD+1
RDACHQI  EQU   RDAUCBAD
RDARSV01 EQU   RDAFLAG
RDARBISA EQU   RDAFLAG
RDAPRE   EQU   ISTRDA
RSWRSV01 EQU   ISTRSW+152
RSWRSV02 EQU   ISTRSW+150
RSWCTELU EQU   ISTRSW+148
RSWGRUPZ EQU   ISTRSW+146
RSWDIALZ EQU   ISTRSW+144
RSWGRUPT EQU   ISTRSW+140
RSWDIALT EQU   ISTRSW+136
RSWPRE   EQU   ISTRSW
RLXRSV03 EQU   ISTRLX+80
RLXRSV02 EQU   ISTRLX+77
RLXRSV01 EQU   RLXFLAGA
RLXINUSE EQU   RLXFLAGA
RLXNLUX  EQU   ISTRLX+72
RLXPRE   EQU   ISTRLX
RPXRSV01 EQU   ISTRPX+80
RPXRSV02 EQU   ISTRPX+77
RPXMAXLU EQU   ISTRPX+76
RPXFLUX  EQU   ISTRPX+72
RPXPRE   EQU   ISTRPX
RLURSV02 EQU   ISTRLU+172
RLULGMOD EQU   ISTRLU+164
RLUMODEP EQU   RLUMODET+8
RLUMODEN EQU   RLUMODET
RLUUSSPT EQU   RLUUSSTB+8
RLUUSSNM EQU   RLUUSSTB
RLURSV01 EQU   ISTRLU+137
RLULOCAD EQU   ISTRLU+136
RLUNCPPM EQU   RLUNCPPC+1
RLUNCPPN EQU   RLUNCPPC
RLUPACEM EQU   RLUPACE+1
RLUPACEN EQU   RLUPACE
RLUINTA  EQU   ISTRLU+128
RLUSSCFM EQU   ISTRLU+127
RLUCRRSV EQU   RLUCRFLG
RLUACTLU EQU   RLUCRFLG
RLURSV00 EQU   RLUFLAG
RLUNDSES EQU   RLUFLAG
RLUGSTAT EQU   RLUFLAG
RLUBATCH EQU   RLUFLAG
RLURBISA EQU   RLUFLAG
RLUTYPE  EQU   ISTRLU+124
RLUCRPR  EQU   ISTRLU
RCCRVPT2 EQU   ISTRCC+144
RCCXTOSW EQU   ISTRCC+140
RCCSWTOX EQU   ISTRCC+136
RCCRSPT2 EQU   ISTRCC+133
RCCADDR  EQU   ISTRCC+132
RCCPASSL EQU   ISTRCC+131
RCCMXOUT EQU   ISTRCC+130
RCCMXDAT EQU   ISTRCC+128
RCCINDEX EQU   ISTRCC+126
RCCPATHZ EQU   ISTRCC+124
RCCPATHT EQU   ISTRCC+120
RCCDPQ   EQU   ISTRCC+116
RCCTPAB  EQU   ISTRCC+112
RCCRSV02 EQU   ISTRCC+109
RCCCRRSV EQU   RCCCRFLG
RCCCTCFL EQU   RCCCRFLG
RCCACTPU EQU   RCCCRFLG
RCCNCSPL EQU   ISTRCC+104
RCCRPHCN EQU   ISTRCC+100
RCCEPAB  EQU   ISTRCC+96
RCCDPAB  EQU   ISTRCC+92
RCCVPAB  EQU   ISTRCC+88
@NM00009 EQU   ISTRCC+87
RCCSESCT EQU   ISTRCC+86
RCCIDNUM EQU   RCCID48+3
RCCIDBLK EQU   RCCID48+2
RCCIDPA2 EQU   RCCID48+1
RCCIDPUT EQU   RCCID48
RCCIDPA1 EQU   RCCSTAID
RCCCTELU EQU   ISTRCC+76
RCCCNCNT EQU   ISTRCC+75
RCCRTGOH EQU   RCCFLAGB
RCCBRKCN EQU   RCCFLAGB
RCCRESET EQU   RCCFLAGB
RCCFINAL EQU   RCCFLAGB
RCCBNNSP EQU   RCCFLAGB
RCCIRETR EQU   RCCFLAGB
RCCDIALP EQU   RCCFLAGB
RCCDSTCT EQU   RCCFLAGB
RCCCTPGD EQU   RCCFLAG
RCCPRGDN EQU   RCCFLAG
RCCOUERP EQU   RCCFLAG
RCCOHIMM EQU   RCCFLAG
RCCLDISC EQU   RCCFLAG
RCCERPIP EQU   RCCFLAG
RCCCUDIE EQU   RCCFLAG
RCCRBISA EQU   RCCFLAG
RCCTYPE  EQU   ISTRCC+72
RCCPRE   EQU   ISTRCC
DOTADTRM EQU   ISTDOT
RDSADDOT EQU   ISTRDS+76
RDSCTATR EQU   ISTRDS+74
RDSCTTRM EQU   ISTRDS+72
RDSPRE   EQU   ISTRDS
RINRSV05 EQU   ISTRIN+156
RINRSV04 EQU   ISTRIN+152
RINLOCRN EQU   ISTRIN+148
RINRSV02 EQU   ISTRIN+145
RTRCNCNT EQU   RINCNCNT
RTRNCSPL EQU   RINNCSPL
RTRRPHCN EQU   RINRPHCN
RTRVPAB  EQU   RINVPAB
RTRREMOT EQU   RINREMOT
RTRRLDAF EQU   RINRLDAF
RTRNODID EQU   RINNODID
RINRSV01 EQU   RINDFD
RTRLDISC EQU   RINLDISC
RTRNODEF EQU   RINNODEF
RTRREMPO EQU   RINREMPO
RINCRPRE EQU   ISTRIN
RTRRSV04 EQU   ISTRTR+210
RTRLCTI  EQU   ISTRTR+209
RTRIDCAS EQU   RTRBSCID+1
RTRIDLEN EQU   RTRBSCID
RTRRSVDD EQU   ISTRTR+181
RTRRDFG  EQU   ISTRTR+180
RTRDIAA  EQU   ISTRTR+176
RTRPOLA  EQU   ISTRTR+172
RTRCADDR EQU   ISTRTR+164
RTRCTADR EQU   ISTRTR+162
RTRCTPOL EQU   ISTRTR+160
RTRCTDIA EQU   ISTRTR+158
RTRRSV03 EQU   ISTRTR+156
RTRRVPT1 EQU   ISTRTR+152
RTRBHSN1 EQU   ISTRTR+144
RTRCRSV2 EQU   RTRCRFLG
RTRDTRLM EQU   RTRLSCMD
RTRCRSV1 EQU   RTRCRFLG
RTRTRMAX EQU   ISTRTR+142
RTRRSV24 EQU   RTRRDFF
RTRRFDEK EQU   RTRRDFF
RTRRFANK EQU   RTRRDFF
RTRRFPFK EQU   RTRRDFF
RTRRFPEN EQU   RTRRDFF
RTRRFXCT EQU   RTRRDFF
RTRRESCT EQU   RTRRDFE
RTRRESUP EQU   RTRRDFE
RTRREATT EQU   RTRRDFE
RTRRECHK EQU   RTRRDFE
RTRREACR EQU   RTRRDFE
RTRRSV0A EQU   RTRRDFE
RTRREBRK EQU   RTRRDFE
RTRRSV11 EQU   RTRRDFD
RTRRSV10 EQU   RTRRDFD
RTRRDBHI EQU   RTRRDFD
RTRRDBHD EQU   RTRRDFD
RTRRDBHN EQU   RTRRDFD
RTRRSV23 EQU   RTRRDFC
RTRRCXMS EQU   RTRRDFC
RTRRCMSG EQU   RTRRDFC
RTRRCBLK EQU   RTRRDFC
RTRRCPT3 EQU   RTRRDFC
RTRRCIT2 EQU   RTRRDFC
RTRRCIT1 EQU   RTRRDFC
RTRRSV32 EQU   RTRRDFB
RTRRBEND EQU   RTRRDFB
RTRRBECT EQU   RTRRDFB
RTRRSV02 EQU   RTRRDFA
RTRRACTR EQU   RTRRDFA
RTRRSV60 EQU   RTRRDFA
RTRRACDT EQU   RTRRDFA
RTRRAPT3 EQU   RTRRAALL
RTRRAPT2 EQU   RTRRAALL
RTRRAPT1 EQU   RTRRAALL
RTRRAATN EQU   RTRRDFA
RTRRSV45 EQU   ISTRTR+132
RTRRSV01 EQU   ISTRTR+130
RTRCTECM EQU   ISTRTR+128
RTRADRPT EQU   RTRADR+1
RTRRSV22 EQU   RTRFLAG
RTRVTERM EQU   RTRFLAG
RTRRSV51 EQU   RTRFLAG
RTRRBISA EQU   RTRFLAG
RTRRSV21 EQU   RTRFLAG
RTRCRPR  EQU   ISTRTR
RCLRVPT2 EQU   ISTRCL+92
RCLRVPT1 EQU   ISTRCL+88
RCLGPOLA EQU   ISTRCL+84
RCLCTNGP EQU   ISTRCL+82
RCLRSV01 EQU   ISTRCL+80
RCLCTECM EQU   ISTRCL+78
RCLCTETR EQU   ISTRCL+76
RCLGPADR EQU   RCLADR+1
RCLRSV33 EQU   RCLFLAG
RCLBATCH EQU   RCLFLAG
RCLRBISA EQU   RCLFLAG
RCLRSV22 EQU   RCLFLAG
RCLPRE   EQU   ISTRCL
RPTRSV03 EQU   ISTRPT+156
RPTRSV02 EQU   ISTRPT+152
RPTNSNSV EQU   ISTRPT+148
RPTPTHCT EQU   ISTRPT+146
RPTPEPCT EQU   ISTRPT+144
RPTDAFSV EQU   ISTRPT+142
RPTRSV01 EQU   ISTRPT+141
RPTISTAT EQU   RPTFLAG1
RPTDYNAM EQU   RPTFLAG1
RPTVYIMM EQU   RPTFLAG1
RPTVIODN EQU   RPTFLAG1
RPTONLIN EQU   RPTFLAG1
RPTHLVPD EQU   RPTFLAG1
RPTVRYPD EQU   RPTFLAG1
RPTASLEP EQU   RPTFLAG1
RPTUTERM EQU   ISTRPT+136
RPTDIVT  EQU   RPTDITT
RPTLNDAF EQU   RPTLNCID+2
RPTLNSAF EQU   RPTLNCID
RPTLN    EQU   ISTRPT
RLNRVPT2 EQU   ISTRLN+112
RLNNCSPL EQU   ISTRLN+108
RLNX2SW  EQU   ISTRLN+104
@NM00008 EQU   ISTRLN+103
RLNCRRSV EQU   RLNCRFLG
RLNSWEP  EQU   RLNCRFLG
RLNSVSKP EQU   RLNLSCMD
RLNSESLM EQU   RLNLSCMD
RLNNPRLM EQU   RLNLSCMD
RLNSWNCP EQU   RLNCRFLG
RLNACTLN EQU   RLNCRFLG
RLNPAUSE EQU   ISTRLN+101
RLNPOLMT EQU   ISTRLN+100
RLNACTSN EQU   ISTRLN+98
RLNRESV1 EQU   ISTRLN+97
RLNACTRM EQU   ISTRLN+96
RLNCTSES EQU   ISTRLN+95
RLNRDSLM EQU   ISTRLN+94
RLNAUTOA EQU   ISTRLN+92
RLNRDFD  EQU   RLNRDF+3
RLNRDFC  EQU   RLNRDF+2
RLNMULTP EQU   RLNRDFB
RLNRATRN EQU   RLNRDFB
RLNRAPOL EQU   RLNRDFB
RLNTTV   EQU   RLNRDFB
RLNRSV0B EQU   RLNRDFB
RLNAUTOD EQU   RLNRDFB
RLNANSWR EQU   RLNRDFB
RLNRBUSE EQU   RLNRDFB
RLNRAPEP EQU   RLNRDFA
RLNRANCP EQU   RLNRDFA
RLNRAEP  EQU   RLNRDFA
RLNIDV   EQU   RLNRDFA
RLNPORT  EQU   RLNRDFA
RLNGANSW EQU   RLNRDFA
RLNRACAN EQU   RLNRACNT
RLNRACAT EQU   RLNRACNT
RLNRSV04 EQU   RLNSTAT2
RLNINUSE EQU   RLNSTAT2
RLNOHIN  EQU   RLNSTAT2
RLNRSV03 EQU   RLNSTAT1
RLNVD    EQU   RLNSTAT1
RLNINOPP EQU   RLNSTAT1
RLNINOPL EQU   RLNSTAT1
RLNLRST  EQU   RLNSTAT1
RLNTRAP  EQU   RLNSTAT1
RLNACTCT EQU   ISTRLN+84
RLNCTECM EQU   ISTRLN+82
RLNCTEIN EQU   ISTRLN+80
RLNCTETR EQU   ISTRLN+78
RLNCTECL EQU   ISTRLN+76
RLNCUA   EQU   RLNUCBAD
RLNRSV01 EQU   RLNFLAG
RLNRBISA EQU   RLNFLAG
RLNEAM   EQU   RLNFLAG
RLNPRE   EQU   ISTRLN
RGPRVPT2 EQU   ISTRGP+88
RGPRVPT1 EQU   ISTRGP+84
RGPCTECM EQU   ISTRGP+82
RGPCTEIN EQU   ISTRGP+80
RGPCTETR EQU   ISTRGP+78
RGPCTECL EQU   ISTRGP+76
RGPCTELN EQU   ISTRGP+74
RGPRSV03 EQU   ISTRGP+73
RGPRSV02 EQU   RGPFLG
RGPASDLC EQU   RGPFLG
RGPABSC  EQU   RGPFLG
RGPASS   EQU   RGPFLG
RGPADIL  EQU   RGPFLG
RGPPRE   EQU   ISTRGP
RRNRINNM EQU   ISTRRN+248
@NM00007 EQU   ISTRRN+247
RRNRDCUA EQU   ISTRRN+244
RRNLASTE EQU   ISTRRN+240
RRNNCSPL EQU   ISTRRN+236
RRNRPLPT EQU   ISTRRN+232
RRNMSIZE EQU   ISTRRN+228
RRNNCPNM EQU   ISTRRN+221
RRNCTPCC EQU   ISTRRN+220
RRNHBUFS EQU   ISTRRN+218
RRNHLENT EQU   RRNHPRE+1
RRNHLENH EQU   RRNHPRE
RRNNMNCP EQU   ISTRRN+208
RRNDELAY EQU   ISTRRN+206
RRNRSV04 EQU   ISTRRN+200
RRNRSV88 EQU   RRNNMDPD+7
RRNPUBI  EQU   RRNNMDPD+6
RRNDPLUB EQU   RRNNMDPD
RRNEPADR EQU   ISTRRN+190
RRNCPLUB EQU   ISTRRN+184
RRNFLUX  EQU   ISTRRN+180
RRNRSV05 EQU   RRNCMFD
RRNREMPO EQU   RRNCMFD
RRNCDREC EQU   RRNCMFD
RRNCDDSI EQU   RRNCMFD
RRNCDBCK EQU   RRNCMFD
RRNCDDTL EQU   RRNCMFD
RRNCDSTD EQU   RRNCMFD
RRNCDCSP EQU   RRNCMFD
RRNCCCSL EQU   RRNCMFC
RRNCCSIM EQU   RRNCMFC
RRNCCRCM EQU   RRNCMFC
RRNCCRIM EQU   RRNCMFC
RRNCCCRC EQU   RRNCMFC
RRNCCRST EQU   RRNCMFC
RRNCCRDQ EQU   RRNCMFC
RRNCCRCN EQU   RRNCMFC
RRNCBALT EQU   RRNCMFB
RRNCBMOD EQU   RRNCMFB
RRNCBNPL EQU   RRNCMFB
RRNCBRLS EQU   RRNCMFB
RRNCBRDS EQU   RRNCMFB
RRNCBDLR EQU   RRNCMFB
RRNCBDLH EQU   RRNCMFB
RRNCBDLO EQU   RRNCMFB
RRNCADGO EQU   RRNCMFA
RRNCADTD EQU   RRNCMFA
RRNCACDT EQU   RRNCMFA
RRNCAMBH EQU   RRNCMFA
RRNCAATI EQU   RRNCMFA
RRNCAATG EQU   RRNCMFA
RRNCAATD EQU   RRNCMFA
RRNCAALL EQU   RRNCMFA
RRNRSV55 EQU   RRNRDF+3
RRNPTASL EQU   RRNRDFB+1
RRNRSV01 EQU   RRNRDFB+1
RRNVYDON EQU   RRNRDFB+1
RRNRBBUP EQU   RRNRDFB+1
RRNRSV03 EQU   RRNRDFB
RRNRBCT2 EQU   RRNRDFB
RRNRBCT1 EQU   RRNRDFB
RRNRBSEC EQU   RRNRDFB
RRNRBCCT EQU   RRNRDFB
RRNRBCCL EQU   RRNRDFB
RRNRSV02 EQU   RRNRDFB
RRNRBMDL EQU   RRNRDFB
RRNRAPEP EQU   RRNRDFA
RRNRANCP EQU   RRNRDFA
RRNRBREM EQU   RRNRDFA
RRNRAOLT EQU   RRNRDFA
RRNRASYN EQU   RRNRDFA
RRNRADMP EQU   RRNRDFA
RRNRAIPL EQU   RRNRDFA
RRNRASHT EQU   RRNRDFA
RRNCTENT EQU   ISTRRN+170
RRNCTECM EQU   ISTRRN+168
RRNCTEIN EQU   ISTRRN+166
RRNCTETR EQU   ISTRRN+164
RRNCTECL EQU   ISTRRN+162
RRNCTELI EQU   ISTRRN+160
RRNCTEGP EQU   ISTRRN+158
RRNCTBHS EQU   ISTRRN+156
RRNBHSET EQU   ISTRRN+152
RRNTRENT EQU   ISTRRN+148
RRNRLDIP EQU   ISTRRN+147
RRNRNCUA EQU   ISTRRN+144
RRNGRPA  EQU   ISTRRN+140
RRNLUBA  EQU   RRNUCBAD+1
RRNCHQI  EQU   RRNUCBAD
RRNRSV11 EQU   RRNFLAG
RRNDSTCT EQU   RRNFLAG
RRNERPIP EQU   RRNFLAG
RRNLCDIP EQU   RRNFLAG
RRNLCDIE EQU   RRNFLAG
RRNLCSIP EQU   RRNFLAG
RRNRBISA EQU   RRNFLAG
RRNRSV89 EQU   RRNFLAG
RRNPRE   EQU   ISTRRN
RLCRVPT2 EQU   ISTRLC+80
RLCRVPT1 EQU   ISTRLC+79
RLCLCCUA EQU   ISTRLC+76
RLCUCBAD EQU   RLCADR+1
RLCRSVDE EQU   RLCFLAG
RLCACNT  EQU   RLCFLAG
RLCRSV14 EQU   RLCFLAG
RLCRBISA EQU   RLCFLAG
RLCRSV22 EQU   RLCFLAG
RLCPRE   EQU   ISTRLC
RAPRVPT2 EQU   ISTRAP+116
RAPRVPT1 EQU   ISTRAP+112
RAPBFACT EQU   ISTRAP+111
RAPRSV17 EQU   RAPFLGC
RAPRSV16 EQU   RAPFLGC
RAPRSV15 EQU   RAPFLGC
RAPRSV14 EQU   RAPFLGC
RAPRSV13 EQU   RAPFLGC
RAPRSV12 EQU   RAPFLGC
RAPRSV11 EQU   RAPFLGC
RAPRSV10 EQU   RAPFLGC
RAPANVPC EQU   RAPFLGB
RAPASPO  EQU   RAPFLGB
RAPAPPO  EQU   RAPFLGB
RAPAACQ  EQU   RAPFLGB
RAPAPRMT EQU   RAPFLGB
RAPAPASS EQU   RAPFLGB
RAPABLCK EQU   RAPFLGB
RAPALLF  EQU   RAPFLGB
RAPRSV06 EQU   RAPFLG
RAPRSV05 EQU   RAPFLG
RAPRSV04 EQU   RAPFLG
RAPRSV03 EQU   RAPFLG
RAPATLGN EQU   RAPFLG
RAPASLGI EQU   RAPFLG
RAPAQUI  EQU   RAPFLG
RAPABLGN EQU   RAPFLG
RAPACEQD EQU   ISTRAP+106
RAPTRPRE EQU   ISTRAP+104
RAPACEAP EQU   ISTRAP+100
RAPICEAQ EQU   ISTRAP+96
RAPICEAC EQU   ISTRAP+92
RAPICELG EQU   ISTRAP+88
RAPAPPWD EQU   ISTRAP+80
RAPACDEB EQU   ISTRAP+76
RAPACBA  EQU   ISTRAP+72
RAPPRE   EQU   ISTRAP
RDTVSRPL EQU   ISTRDT+132
RDTCRSPW EQU   ISTRDT+124
RDTCRSDS EQU   ISTRDT+116
@NM00006 EQU   ISTRDT+113
RRNSTCNT EQU   RDTSTCNT
RRNVYRPH EQU   RDTVYRPH
RDTTPAB  EQU   ISTRDT+104
RDTDPAB  EQU   ISTRDT+100
RDTEPAB  EQU   ISTRDT+96
RDTVPAB  EQU   ISTRDT+92
RDTRSV01 EQU   RDTFLAGB
RDTBHSET EQU   RDTFLAGB
RDTCTCFL EQU   RDTFLAGB
RDTCTPGD EQU   RDTFLAGB
RDTPRGDN EQU   RDTFLAGB
RDTOUERP EQU   RDTFLAGB
RDTLGCT  EQU   ISTRDT+90
RDTNODID EQU   ISTRDT+89
RDTMAXID EQU   ISTRDT+88
RDTCTSNT EQU   ISTRDT+86
RDTFLAGS EQU   ISTRDT+84
RDTBACK  EQU   ISTRDT+80
RDTFORW  EQU   ISTRDT+76
RDTLEN   EQU   RDTPLEN+1
RDTPRILS EQU   RDTPRIOR
RDTPRISW EQU   RDTPRIOR
RDTPRIRN EQU   RDTPRIOR
RDTPRILC EQU   RDTPRIOR
RDTPRIAP EQU   RDTPRIOR
@NM00005 EQU   RDTPRIOR
RDTPRE   EQU   ISTRDT
RCPRSV05 EQU   ISTRCPRE+120
RCPRSV04 EQU   ISTRCPRE+116
RCPRSV03 EQU   ISTRCPRE+112
RCPINTA  EQU   RCPLGNIN+16
RCPLGNCT EQU   RCPLGNIN+8
RCPLGNAP EQU   RCPLGNIN
@NM00004 EQU   RCPPMODE
RCPRRECD EQU   RCPPMODE
RCPRBASC EQU   RCPPMODE
RCPBFLIM EQU   ISTRCPRE+90
RCPBHSI2 EQU   ISTRCPRE+89
RCPBHSI1 EQU   ISTRCPRE+88
RCPACETR EQU   ISTRCPRE+84
RCPICEAQ EQU   ISTRCPRE+80
RCPLNAPA EQU   ISTRCPRE+76
RCPICELN EQU   ISTRCPRE+72
RCPPRE   EQU   ISTRCPRE
RPRCONID EQU   ISTRPRE+63
RPRCLVPD EQU   RPRFLAGC
RPRINIMM EQU   RPRFLAGD
RPRRSV05 EQU   RPRFLAGD
RPRCONP  EQU   RPRFLAGD
RPRACTP  EQU   RPRFLAGD
RPRRSON  EQU   RPRFLAGD
RPRCONCT EQU   RPRFLAGD
RPRLTASN EQU   RPRFLAGD
RPRPTHCT EQU   ISTRPRE+60
RPRSWDAF EQU   ISTRPRE+58
RPRSTPCT EQU   ISTRPRE+56
RPRRVPT1 EQU   ISTRPRE+52
RPRDEVCH EQU   ISTRPRE+44
RPRNCBA  EQU   ISTRPRE+40
RPRNSNEA EQU   ISTRPRE+36
RPRLGONB EQU   ISTRPRE+32
RPRLGONF EQU   ISTRPRE+28
RPRHDTYP EQU   ISTRPRE+27
RPRTIOCT EQU   ISTRPRE+26
RPRPEPCT EQU   ISTRPRE+24
RPRRSV03 EQU   RPRCAUSE
RPRRSYNC EQU   RPRCAUSE
RPRCRCPT EQU   RPRCAUSE
RPRNOSRT EQU   RPRCAUSE
RPRINTST EQU   RPRFLAGB
RPRVYIMM EQU   RPRFLAGB
RPRHLVPD EQU   RPRFLAGB
RPRONLIN EQU   RPRFLAGB
RPRVIODN EQU   RPRFLAGB
RPRAOPN  EQU   RPRFLAGB
RPRENTVT EQU   RPRFLAGB
RPRENTVH EQU   RPRFLAGB
RPRVRYPD EQU   RPRFLAGA
RPRENTED EQU   RPRFLAGA
RPRENTIO EQU   RPRFLAGA
RPRENTBF EQU   RPRFLAGA
RPRTIED  EQU   RPRFLAGA
RPRINV   EQU   RPRFLAGA
RPRACT   EQU   RPRFLAGA
RPRENTRY EQU   ISTRPRE+20
RPRPELEN EQU   ISTRPRE+18
RPRELEN  EQU   ISTRPRE+16
RPRRLOCK EQU   ISTRPRE+12
RPRSAF   EQU   RPRCOMID
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVMCODE EQU   ISTDEVCH+2
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVSUBND EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
LOKXCL   EQU   @NM00002
LOKPRY   EQU   @NM00002
@NM00003 EQU   @NM00002
@NM00001 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@PB00005 EQU   @PB00006
@RC00870 EQU   @RC00854
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   ISTNMC3S,(C'PLS0441',0603,78082)
