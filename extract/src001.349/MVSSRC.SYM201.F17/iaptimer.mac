         TITLE 'IAPTIMER - AP-1 TIMER SUBTASK                          *
                        '
IAPTIMER CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IAPTIMER  77.308'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
         L     @00,@SIZDATD                                     01S0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                          01S0001
         USING @DATD,@11                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         LM    @00,@01,20(@13)                                  01S0001
         ST    @11,8(,@13)                                      01S0001
         LR    @13,@11                                          01S0001
         MVC   @PC00001(4),0(@01)                               01S0001
         EJECT
*                                                               01S0015
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP AP1REG                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0015
*   AP1REG=ADDR(AP1BLK);            /* ADDRESS OF AP1BLOCK AS PASSED
*                                      BY IAPCNTRL                   */
*                                                               01S0015
         L     AP1REG,@PC00001                                  01S0015
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP TO CHECK FOR TIMEOUT                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0016
*   DO COUNTER=1 BY 1;              /* INFINITE LOOP                 */
*                                                               01S0016
         LA    COUNTER,1                                        01S0016
@DL00016 DS    0H                                               01S0017
*     /***************************************************************/
*     /*                                                             */
*     /* STIMER FOR INTERVAL                                         */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0017
*     GENERATE REFS(TIMEINTV);                                  01S0017
*                                                               01S0017
         STIMER WAIT,DINTVL=TIMEINTV  TIME FOR INTERVAL--WAIT
*     /***************************************************************/
*     /*                                                             */
*     /* SEE IF I/O HAS TIMED OUT                                    */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0018
*     IF AP1TIMIN=ON THEN           /* I/O HASENT RESPONDED          */
         TM    AP1TIMIN(AP1REG),B'01000000'                     01S0018
         BNO   @RF00018                                         01S0018
*       DO;                                                     01S0019
*                                                               01S0019
*         /***********************************************************/
*         /*                                                         */
*         /* PURGE I/O                                               */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0020
*         PRGOPT=PRGOPTS;           /* SET OPTION FLAGS              */
         MVC   PRGOPT(1),PRGOPTS                                01S0020
*         PRGDEB=AP1DEBA;           /* OUR DEB                       */
         MVC   PRGDEB(3),AP1DEBA+1(AP1REG)                      01S0021
*         PRGCOD=0;                 /* CLEAR COMP CODE               */
         MVI   PRGCOD,X'00'                                     01S0022
*         PRGTCB=AP1TCBAD;          /* MAIN TASK TCB                 */
         MVC   PRGTCB(3),AP1TCBAD+1(AP1REG)                     01S0023
*         PRGRES=0;                 /* RESERVED                      */
         MVI   PRGRES,X'00'                                     01S0024
*         PRGANCR=0;                /* ZERO ANCHOR                   */
         SLR   @10,@10                                          01S0025
         ST    @10,PRGANCR                                      01S0025
*         PRGPIRL=ADDR(PRGANCR);    /* POINT TO ANCHOR               */
         LA    @10,PRGANCR                                      01S0026
         STCM  @10,7,PRGPIRL                                    01S0026
*         RFY                                                   01S0027
*           GPR01P RSTD;                                        01S0027
*         GPR01P=ADDR(PPL);         /* ADDRESS OF PPL                */
         LA    GPR01P,PPL                                       01S0028
*         GENERATE;                                             01S0029
         PURGE  (GPR01P)         DO PURGE
*         RFY                                                   01S0030
*           GPR01P UNRSTD;                                      01S0030
*       END;                                                    01S0031
*     ELSE                                                      01S0032
*       ;                           /* I/O HAS RESPONDED             */
*                                                               01S0032
@RF00018 DS    0H                                               01S0033
*     /***************************************************************/
*     /*                                                             */
*     /* SET AP1TIMIN ON IF AP1IOACT IS ON                           */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0033
*     DO;                                                       01S0033
*       CSOP1=AP1TIMFL;             /* INIT CS OPERAND               */
         MVC   CSOP1(4),AP1TIMFL(AP1REG)                        01S0034
*       CSOP2=AP1TIMFL;             /* INIT CS OPERAND               */
         MVC   CSOP2(4),AP1TIMFL(AP1REG)                        01S0035
*       CSPTR=ADDR(CSOP1)-ADDR(AP1TIMFL)+ADDR(AP1BLOCK);/* ADDRESS
*                                      CSOP1 AS IF IT WERE AP1TIMFL  */
         LA    CSPTR,CSOP1                                      01S0036
         LA    @10,AP1TIMFL(,AP1REG)                            01S0036
         SLR   CSPTR,@10                                        01S0036
         ALR   CSPTR,AP1REG                                     01S0036
*       CSPTR->AP1IOACT=ON;         /* SET I/O ACTIVE ON             */
*       CSPTR->AP1TIMIN=OFF;        /* SET TIMING OFF                */
         OI    AP1IOACT(CSPTR),B'10000000'                      01S0038
         NI    AP1TIMIN(CSPTR),B'10111111'                      01S0038
*       CSPTR=ADDR(CSOP2)-ADDR(AP1TIMFL)+ADDR(AP1BLOCK);/* ADDRESS
*                                      CSOP2 AS IF IT WERE AP1TIMFL  */
         LA    CSPTR,CSOP2                                      01S0039
         SLR   CSPTR,@10                                        01S0039
         ALR   CSPTR,AP1REG                                     01S0039
*       CSPTR->AP1IOACT=ON;         /* SET I/O ACTIVE ON             */
*       CSPTR->AP1TIMIN=ON;         /* SET TIMING ON                 */
*                                                               01S0041
         OI    AP1IOACT(CSPTR),B'11000000'                      01S0041
*       /*************************************************************/
*       /*                                                           */
*       /* THIS INSTRUCTION WILL TEST TO SEE IF IOACT IS ON, IF SO,  */
*       /* SET TIMIN ON                                              */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0042
*       CS(CSOP1,CSOP2,AP1TIMFL);   /* COMPARE AND SWAP              */
         L     @10,CSOP1                                        01S0042
         L     @09,CSOP2                                        01S0042
         CS    @10,@09,AP1TIMFL(AP1REG)                         01S0042
         BZ    @BC00042                                         01S0042
         ST    @10,CSOP1                                        01S0042
@BC00042 DS    0H                                               01S0043
*     END;                                                      01S0043
*   END;                            /* OF DO WHILE                   */
         AL    COUNTER,@CF00042                                 01S0044
         B     @DL00016                                         01S0044
*   GEN DATA DEFS(PATCH);                                       01S0045
*   END                             /* OF IAPTIMER PROC              */
*                                                               01S0046
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (AP1BLOCK)                                       */
*                                                               01S0046
*       ;                                                       01S0046
@EL00001 L     @13,4(,@13)                                      01S0046
@EF00001 L     @00,@SIZDATD                                     01S0046
         LR    @01,@11                                          01S0046
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                  01S0046
         BR    @14                                              01S0046
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
IAPTIMER CSECT
         DS    0F
@CF00042 DC    F'1'
@DATD    DSECT
         DS    0D
CSOP1    DS    CL4
CSOP2    DS    CL4
PPL      DS    CL16
         ORG   PPL
PRGOPT   DS    BL1
PRGDEB   DS    AL3
PRGCOD   DS    BL1
PRGTCB   DS    AL3
PRGRES   DS    BL1
PRGPIRL  DS    AL3
PRGANCR  DS    AL4
         ORG   PPL+16
IAPTIMER CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
TIMEINTV DC    CL8'00010000'
PRGOPTS  DC    B'11100000'
IAPTIMER CSECT
*                                /*  PATCH AREA  */
PATCH    DC    13F'0'            THIRTEEN WORD PATCH AREA
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IAPTIMER CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
COUNTER  EQU   @03
CSPTR    EQU   @02
AP1REG   EQU   @08
GPR01P   EQU   @01
AP1BLOCK EQU   0
AP1PRINT EQU   AP1BLOCK+8
AP1PFLG1 EQU   AP1BLOCK+144
AP1CCWA  EQU   AP1BLOCK+160
AP1BUFAD EQU   AP1BLOCK+164
AP1TCBAD EQU   AP1BLOCK+172
AP1TIMFL EQU   AP1BLOCK+176
AP1TIMFA EQU   AP1TIMFL
AP1IOACT EQU   AP1TIMFA
AP1TIMIN EQU   AP1TIMFA
AP1SEEK  EQU   AP1BLOCK+213
CCHHR    EQU   AP1SEEK+3
CCHH     EQU   CCHHR
HH       EQU   CCHH+2
AP1CESK  EQU   AP1BLOCK+221
CECCHHR  EQU   AP1CESK+2
CECCHH   EQU   CECCHHR
AP1DEBA  EQU   AP1BLOCK+232
AP1FLG2  EQU   AP1BLOCK+244
AP1FLG3  EQU   AP1BLOCK+245
AP1FLG4  EQU   AP1BLOCK+246
AP1BLK   EQU   0
HHR      EQU   HH
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
AP1END   EQU   AP1BLOCK+360
AP1ERRTF EQU   AP1BLOCK+300
AP1ERRTM EQU   AP1BLOCK+270
AP1ENQAD EQU   AP1BLOCK+266
AP1DEVAD EQU   AP1BLOCK+262
AP1LSTHH EQU   AP1BLOCK+260
AP1LSTCC EQU   AP1BLOCK+258
AP1SKCNT EQU   AP1BLOCK+256
AP1ETABA EQU   AP1BLOCK+252
AP1RET   EQU   AP1BLOCK+251
AP1DEVTP EQU   AP1BLOCK+250
AP1TSTNO EQU   AP1BLOCK+249
AP1DCCNT EQU   AP1BLOCK+248
@NM00004 EQU   AP1BLOCK+247
AP1ENQD  EQU   AP1FLG4
AP1DEBCH EQU   AP1FLG4
AP1READ  EQU   AP1FLG4
AP1NORD  EQU   AP1FLG4
AP1RDERR EQU   AP1FLG3
AP1RDTST EQU   AP1FLG3
AP1VERIF EQU   AP1FLG3
AP1QUIT  EQU   AP1FLG3
AP1PRERR EQU   AP1FLG3
AP1ERROR EQU   AP1FLG3
AP1LST   EQU   AP1FLG3
AP1PTRN2 EQU   AP1FLG3
AP1NOERP EQU   AP1FLG2
AP1FHF   EQU   AP1FLG2
AP1EDP   EQU   AP1FLG2
AP1IOC   EQU   AP1FLG2
AP1NOWR  EQU   AP1FLG2
AP1IOECB EQU   AP1BLOCK+240
AP1IOBA  EQU   AP1BLOCK+236
AP1DCBA  EQU   AP1BLOCK+228
CER      EQU   CECCHHR+4
CEHH     EQU   CECCHH+2
CECC     EQU   CECCHH
CEBB     EQU   AP1CESK
R        EQU   CCHHR+4
CC       EQU   CCHH
BB       EQU   AP1SEEK+1
M        EQU   AP1SEEK
AP1FM    EQU   AP1BLOCK+212
AP1SNS   EQU   AP1BLOCK+188
AP1CSW   EQU   AP1BLOCK+181
AP1PCODE EQU   AP1BLOCK+180
AP1TIMEA EQU   AP1BLOCK+168
AP1BUFAB EQU   AP1BUFAD+1
@NM00003 EQU   AP1BUFAD
AP1CCWAB EQU   AP1CCWA+1
@NM00002 EQU   AP1CCWA
AP1WRKA  EQU   AP1BLOCK+156
AP1RECB  EQU   AP1BLOCK+152
@NM00001 EQU   AP1BLOCK+150
AP1CNRPL EQU   AP1BLOCK+146
AP1CNCOD EQU   AP1BLOCK+145
AP1PRCLS EQU   AP1PFLG1
AP1PRNP  EQU   AP1PFLG1
AP1PROPN EQU   AP1PFLG1
AP1PRLIN EQU   AP1BLOCK+142
AP1PRPAG EQU   AP1BLOCK+140
AP1PRCOD EQU   AP1BLOCK+139
AP1PRMSG EQU   AP1PRINT+1
AP1PRASA EQU   AP1PRINT
AP1PDCBA EQU   AP1BLOCK+4
AP1HDR   EQU   AP1BLOCK
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IAPTIMER,(C'PLS1807',0701,77308)
